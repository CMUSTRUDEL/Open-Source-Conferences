Title: Frank Quinn & Nigel Phelan | FINOS | OSSF 2020: Leveling the Market Data Playing Field with OpenMAMA
Publication date: 2020-12-22
Playlist: FINOS Open Source Strategy Forum 2020
Description: 
	Frank Quinn & Nigel Phelan | FINOS | OSSF 2020: Leveling the Market Data Playing Field with OpenMAMA  | FINOS OSSF 2020

Frank Quinn, Founder Cascadium Ltd and OpenMAMA Maintainer, Cascadium Ltd.
Nigel Phelan, Chief Architect, Market Data Services, JP Morgan Chase

Leveling the Market Data Playing Field with OpenMAMA - OSSF 2020

Market data is a tricky business to deal with. It is the life blood of so many financial organizations, yet it tends to be under constant pressures which end up shaping its structure organically over time. What can start off as a fairly straightforward “service” can turn into a “platform” very quickly. Platforms need to be low latency, but high bandwidth; flexible but deterministic; progressive but backwards compatible; easy to access but easy to audit. The inevitable truth is that multiple technologies, software stacks, partners and vendors will need to play nicely with each other. If not now, then in the (not too distant) future.

This is where OpenMAMA comes in to help provide a single way to access each of these services. Application software is written once, then can access a variety of market data vendors with no code changes. Not even a recompile.

This talk will introduce OpenMAMA, how it is put together and how it helps reduce cost, complexity and vendor lock-in where it is used. It will also assert that OpenMAMA as an excellent conduit through which market data providers can sell their services on a level playing field without customers needing to worry about costly migrations - either now or in the future.

Frank Quinn's BIO

Frank has been working with Market Data and other financial technologies for over 15 years. He has held various roles across Wombat, NYSE, and Vela including Regional Support Manager, Product Manager, Principle Software Engineer and Research and Development Manager. His development experience ranges from low level embedded systems to complex microservice based platforms and inevitable devops. He has been a frequent contributor to Open Source projects of all kinds including tooling to help X11 forwarding for WSL2 on Windows. Frank is currently the biggest contributor to OpenMAMA and has been working closely with the project since its conception as well as developing the first OpenMAMA ZeroMQ bridge. He currently works with clients through Cascadium to help develop tailored solutions which allow proprietary technologies to integrate freely with Open Source technologies.

Nigel Phelan's BIO

Nigel has been working in the financial services industry for over 20 years and in market data for more than 15. He currently works in the central market data team at JP Morgan Chase and is responsible for market data product strategy.  An experienced infrastructure engineer, Nigel has worked with a broad range of middleware messaging and information security technologies during his career led multiple new product evaluations and worked in several roles including regional head of engineering, global service delivery manager, and product line owner.  Nigel is a chartered engineer and was awarded a Ph.D. by the University of Bath for research in the field of computer-aided engineering. 

-=-=-=-=-

This video is from the FINOS / Linux Foundation Open Source Strategy Forum (OSSF) Virtual 2020. 

►►For free access to all 2020 videos from the conference - please register HERE: https://events.linuxfoundation.org/open-source-strategy-forum/register/
 
►► More information HERE: https://events.linuxfoundation.org/open-source-strategy-forum/
►► 2020 Schedule HERE: https://events.linuxfoundation.org/open-source-strategy-forum/program/schedule/

Learn more about FINOS and how we deliver the power of open source to financial services:
►► FINOS: https://www.finos.org/
Captions: 
	00:00:01,720 --> 00:00:09,599
[Music]

00:00:08,160 --> 00:00:11,920
hello everybody

00:00:09,599 --> 00:00:13,040
my name is frank quinn i am the current

00:00:11,920 --> 00:00:16,160
open mama maintainer

00:00:13,040 --> 00:00:16,720
and founder of cascarium limited where

00:00:16,160 --> 00:00:19,119
we focus

00:00:16,720 --> 00:00:20,560
on bridging proprietary and open source

00:00:19,119 --> 00:00:22,960
technologies

00:00:20,560 --> 00:00:24,160
so i'm here to talk to you today about

00:00:22,960 --> 00:00:27,519
openmama

00:00:24,160 --> 00:00:30,480
and about how it is useful for

00:00:27,519 --> 00:00:32,239
both market data managers and software

00:00:30,480 --> 00:00:33,760
vendors who are trying to

00:00:32,239 --> 00:00:37,040
promote their software and their market

00:00:33,760 --> 00:00:40,800
data solutions into market data monitors

00:00:37,040 --> 00:00:42,000
so we're going to start off by

00:00:40,800 --> 00:00:45,200
showing a little introduction to open

00:00:42,000 --> 00:00:46,879
mama and what it is and where it's used

00:00:45,200 --> 00:00:48,640
and then we're going to go into some of

00:00:46,879 --> 00:00:49,760
the applications for market data

00:00:48,640 --> 00:00:52,239
managers

00:00:49,760 --> 00:00:53,600
and then we're going to move on to some

00:00:52,239 --> 00:00:58,000
discussion around

00:00:53,600 --> 00:01:01,440
the applications for market data vendors

00:00:58,000 --> 00:01:02,239
for application vendors and then we're

00:01:01,440 --> 00:01:05,519
going to

00:01:02,239 --> 00:01:09,040
go into a quick demonstration of

00:01:05,519 --> 00:01:10,560
consuming using openmama from both a

00:01:09,040 --> 00:01:14,080
proprietary data source

00:01:10,560 --> 00:01:15,439
and from an open platform data source

00:01:14,080 --> 00:01:18,479
and then we're going to finish off with

00:01:15,439 --> 00:01:22,560
some questions and answers

00:01:18,479 --> 00:01:24,479
so we will just dive in here

00:01:22,560 --> 00:01:25,600
and so we start off by asking the

00:01:24,479 --> 00:01:28,080
question what is

00:01:25,600 --> 00:01:28,880
what is open mama so for those of you

00:01:28,080 --> 00:01:31,759
don't know

00:01:28,880 --> 00:01:33,439
um open mama is effectively an

00:01:31,759 --> 00:01:36,320
abstraction layer

00:01:33,439 --> 00:01:37,680
um it is the api that your application

00:01:36,320 --> 00:01:41,360
would write to

00:01:37,680 --> 00:01:42,880
and but behind that api it interfaces

00:01:41,360 --> 00:01:43,840
with the underlying proprietary

00:01:42,880 --> 00:01:46,880
technologies

00:01:43,840 --> 00:01:49,360
and open technologies so an open mama

00:01:46,880 --> 00:01:51,360
application doesn't need to worry about

00:01:49,360 --> 00:01:53,439
which platform it's publishing onto

00:01:51,360 --> 00:01:55,040
or which platform it's consuming from

00:01:53,439 --> 00:01:55,680
and all that an open mama application

00:01:55,040 --> 00:01:59,439
needs to do

00:01:55,680 --> 00:02:01,280
is subscribe to market data using a

00:01:59,439 --> 00:02:03,600
configuration transport

00:02:01,280 --> 00:02:04,560
and a bridge which is usually provided

00:02:03,600 --> 00:02:08,080
by

00:02:04,560 --> 00:02:08,479
the platform api so for example you can

00:02:08,080 --> 00:02:10,080
use

00:02:08,479 --> 00:02:11,520
open mama with the exact same

00:02:10,080 --> 00:02:15,200
application to

00:02:11,520 --> 00:02:17,200
consume data from uh one middleware

00:02:15,200 --> 00:02:18,720
or you can use it to consume from a

00:02:17,200 --> 00:02:20,080
completely different middleware

00:02:18,720 --> 00:02:23,120
and your application doesn't actually

00:02:20,080 --> 00:02:24,959
change it's a runtime configuration

00:02:23,120 --> 00:02:26,640
and you drop in a different library

00:02:24,959 --> 00:02:29,120
different configuration file

00:02:26,640 --> 00:02:30,560
and then you can start consuming uh or

00:02:29,120 --> 00:02:31,599
publishing onto a different market data

00:02:30,560 --> 00:02:33,760
platform

00:02:31,599 --> 00:02:35,120
um without any changes at all to your

00:02:33,760 --> 00:02:38,239
application

00:02:35,120 --> 00:02:40,800
so why is this so important well

00:02:38,239 --> 00:02:41,519
the main benefit is that your

00:02:40,800 --> 00:02:44,319
application

00:02:41,519 --> 00:02:45,280
no longer needs to worry about the

00:02:44,319 --> 00:02:46,959
underlying

00:02:45,280 --> 00:02:49,200
technology supporting lots of different

00:02:46,959 --> 00:02:52,400
technologies and

00:02:49,200 --> 00:02:56,000
it means that in terms of choice

00:02:52,400 --> 00:02:59,360
the market data manager or the business

00:02:56,000 --> 00:03:00,879
can for whatever reason decide to switch

00:02:59,360 --> 00:03:03,200
between different

00:03:00,879 --> 00:03:05,200
market data technology providers and

00:03:03,200 --> 00:03:06,560
without significant costs and overheads

00:03:05,200 --> 00:03:07,760
associated with

00:03:06,560 --> 00:03:09,120
actually making the switch and the

00:03:07,760 --> 00:03:10,159
development overheads and the support

00:03:09,120 --> 00:03:12,879
maintenance

00:03:10,159 --> 00:03:13,920
associated with that um it has

00:03:12,879 --> 00:03:15,840
flexibility

00:03:13,920 --> 00:03:17,280
there's the cm api you can switch

00:03:15,840 --> 00:03:18,319
between open source and proprietary

00:03:17,280 --> 00:03:19,519
technologies

00:03:18,319 --> 00:03:21,440
and a lot of people are building their

00:03:19,519 --> 00:03:22,400
own open source based platforms and

00:03:21,440 --> 00:03:24,720
house at the moment

00:03:22,400 --> 00:03:25,840
that's what will completely support that

00:03:24,720 --> 00:03:27,120
um

00:03:25,840 --> 00:03:29,280
the other main advantage is that it can

00:03:27,120 --> 00:03:32,400
be extended so there's a

00:03:29,280 --> 00:03:33,599
plug-in interface um for open mama that

00:03:32,400 --> 00:03:36,879
allows you to

00:03:33,599 --> 00:03:38,239
um get events fired in whenever

00:03:36,879 --> 00:03:40,159
um certain things happen like

00:03:38,239 --> 00:03:41,200
subscriptions are created or messages

00:03:40,159 --> 00:03:43,840
are received

00:03:41,200 --> 00:03:45,120
and so you can control your audit trail

00:03:43,840 --> 00:03:48,239
in a standard

00:03:45,120 --> 00:03:50,000
way as well um we have bindings

00:03:48,239 --> 00:03:53,120
currently available for c

00:03:50,000 --> 00:03:55,439
c plus plus c sharp and java

00:03:53,120 --> 00:03:56,239
and including uh recent development

00:03:55,439 --> 00:03:59,439
which was c

00:03:56,239 --> 00:04:00,799
sharp on.net core so you can use open

00:03:59,439 --> 00:04:04,000
mama with c-sharp

00:04:00,799 --> 00:04:04,640
on linux which is a bit of a big step

00:04:04,000 --> 00:04:08,319
for us

00:04:04,640 --> 00:04:09,920
but uh it seems to work pretty well so

00:04:08,319 --> 00:04:12,000
that that's effectively what open mom is

00:04:09,920 --> 00:04:14,640
for it provides that abstraction layer

00:04:12,000 --> 00:04:16,799
away from underlying technologies so you

00:04:14,640 --> 00:04:17,840
don't need to be concerned about the

00:04:16,799 --> 00:04:19,359
underlying

00:04:17,840 --> 00:04:21,440
uh platforms that your data is

00:04:19,359 --> 00:04:24,639
publishing to or subscribing from

00:04:21,440 --> 00:04:26,880
and that's it that's all it is

00:04:24,639 --> 00:04:28,080
so if you have a look around you as to

00:04:26,880 --> 00:04:31,600
where it is

00:04:28,080 --> 00:04:33,120
and um where's deployed

00:04:31,600 --> 00:04:34,639
it was first officially published in

00:04:33,120 --> 00:04:38,080
00:04:34,639 --> 00:04:40,400
and it comes from a long line of

00:04:38,080 --> 00:04:42,160
non-open source um fbi's which have been

00:04:40,400 --> 00:04:45,280
in production for decades

00:04:42,160 --> 00:04:48,160
so it's very much a mature offering that

00:04:45,280 --> 00:04:48,880
um has a lot of production miles behind

00:04:48,160 --> 00:04:51,600
it

00:04:48,880 --> 00:04:53,120
and with the nature of the clan base

00:04:51,600 --> 00:04:54,800
involved though there's not a huge

00:04:53,120 --> 00:04:57,919
amount of

00:04:54,800 --> 00:04:59,919
publicly declared people who use it um

00:04:57,919 --> 00:05:02,160
but there are some out there and the

00:04:59,919 --> 00:05:03,280
most notable ones include j.p morgan and

00:05:02,160 --> 00:05:05,280
deutsche bank you're members of the

00:05:03,280 --> 00:05:06,639
steering committee and then nyfix who

00:05:05,280 --> 00:05:10,400
have recently

00:05:06,639 --> 00:05:12,880
published a 0mq derived api as well

00:05:10,400 --> 00:05:14,800
for openmama and to allow obama to

00:05:12,880 --> 00:05:19,039
publish and subscribe onto

00:05:14,800 --> 00:05:20,080
um a completely open source platform so

00:05:19,039 --> 00:05:21,600
there are lots of products out there

00:05:20,080 --> 00:05:24,400
that build on integrate with it we get

00:05:21,600 --> 00:05:26,560
the support requests a lot to come in

00:05:24,400 --> 00:05:28,400
from lots of different customers as well

00:05:26,560 --> 00:05:29,280
so and there's a much bigger world out

00:05:28,400 --> 00:05:33,199
there

00:05:29,280 --> 00:05:34,479
and the integrations we provide

00:05:33,199 --> 00:05:36,639
or the integrations are provided by the

00:05:34,479 --> 00:05:40,000
community and extend into

00:05:36,639 --> 00:05:42,320
wider technologies and wider platforms

00:05:40,000 --> 00:05:43,919
and it's not uncommon to use open mama

00:05:42,320 --> 00:05:45,360
purely as an abstraction layer to get

00:05:43,919 --> 00:05:47,680
data into

00:05:45,360 --> 00:05:48,800
a larger platform from perhaps a more

00:05:47,680 --> 00:05:52,000
niche provider

00:05:48,800 --> 00:05:54,160
and that they may not want to your

00:05:52,000 --> 00:05:55,759
market data manager may not want to go

00:05:54,160 --> 00:05:58,800
to the effort of writing an api for

00:05:55,759 --> 00:06:00,319
their either and um the other

00:05:58,800 --> 00:06:02,479
thing worth noting that it's used across

00:06:00,319 --> 00:06:05,039
is used across all asset classes

00:06:02,479 --> 00:06:06,560
and fx options futures derivatives

00:06:05,039 --> 00:06:08,080
they're all um

00:06:06,560 --> 00:06:09,840
in use with open moment of varying

00:06:08,080 --> 00:06:10,960
degrees it traditionally comes from the

00:06:09,840 --> 00:06:13,919
equity side but

00:06:10,960 --> 00:06:14,800
it does have an awful lot of use outside

00:06:13,919 --> 00:06:17,440
of that

00:06:14,800 --> 00:06:19,280
and in different different asset classes

00:06:17,440 --> 00:06:22,639
as well

00:06:19,280 --> 00:06:26,319
so if we take a look inside the mindset

00:06:22,639 --> 00:06:28,720
of the mark data manager and the

00:06:26,319 --> 00:06:29,520
problems and challenges that are facing

00:06:28,720 --> 00:06:31,919
them

00:06:29,520 --> 00:06:33,120
um there's always new functional

00:06:31,919 --> 00:06:34,639
pressures there's always something that

00:06:33,120 --> 00:06:36,479
somebody wants

00:06:34,639 --> 00:06:38,240
there's a new market data provider

00:06:36,479 --> 00:06:40,240
there's a new

00:06:38,240 --> 00:06:42,240
way that they want to access historical

00:06:40,240 --> 00:06:44,880
data and they'll always be

00:06:42,240 --> 00:06:47,280
something that comes in um and edc

00:06:44,880 --> 00:06:49,520
spring high speed handlers it's a very

00:06:47,280 --> 00:06:50,400
very busy job being a market data

00:06:49,520 --> 00:06:54,160
manager

00:06:50,400 --> 00:06:54,880
um and the general um biggest recurring

00:06:54,160 --> 00:06:57,280
theme

00:06:54,880 --> 00:06:58,639
is that they need to continually support

00:06:57,280 --> 00:07:01,919
a variety of

00:06:58,639 --> 00:07:03,199
different little snowflake applications

00:07:01,919 --> 00:07:04,560
and platforms

00:07:03,199 --> 00:07:06,800
which all need to play nicely with each

00:07:04,560 --> 00:07:08,240
other um against the backdrop of this

00:07:06,800 --> 00:07:10,160
you have all the performance constraints

00:07:08,240 --> 00:07:12,960
that go with that so you've got then

00:07:10,160 --> 00:07:14,560
low latency but you need to also support

00:07:12,960 --> 00:07:17,520
high bandwidth

00:07:14,560 --> 00:07:18,479
you need to the data needs to be very

00:07:17,520 --> 00:07:20,000
well normalized

00:07:18,479 --> 00:07:22,000
needs to look the same across different

00:07:20,000 --> 00:07:23,440
data sources there's usually lots of

00:07:22,000 --> 00:07:24,880
tweaks required from the

00:07:23,440 --> 00:07:26,639
third party providers to try and get up

00:07:24,880 --> 00:07:28,240
to behave like that and

00:07:26,639 --> 00:07:30,400
it's basically a constant struggle to

00:07:28,240 --> 00:07:31,599
try and get things to look in a sort of

00:07:30,400 --> 00:07:33,440
regular way

00:07:31,599 --> 00:07:35,039
that is easier to manage and easier to

00:07:33,440 --> 00:07:36,400
maintain

00:07:35,039 --> 00:07:38,479
on top of this it tends to be one of the

00:07:36,400 --> 00:07:41,199
biggest cost centers that's

00:07:38,479 --> 00:07:42,000
and where they're deployed so you have

00:07:41,199 --> 00:07:43,680
constant

00:07:42,000 --> 00:07:45,199
cost efficiency problems they want to

00:07:43,680 --> 00:07:48,240
reduce footprint

00:07:45,199 --> 00:07:48,960
they want to reuse data that they've

00:07:48,240 --> 00:07:51,199
paid for

00:07:48,960 --> 00:07:52,639
once they want to make sure that the cm

00:07:51,199 --> 00:07:54,160
data is reused elsewhere

00:07:52,639 --> 00:07:56,800
if they can and if the license allows

00:07:54,160 --> 00:07:58,560
them to on top of that you've got the

00:07:56,800 --> 00:08:00,400
regulatory requirements that come in

00:07:58,560 --> 00:08:04,080
from the side um

00:08:00,400 --> 00:08:06,639
so the result of all this is that

00:08:04,080 --> 00:08:08,319
market data managers generally don't

00:08:06,639 --> 00:08:08,639
build everything themselves there will

00:08:08,319 --> 00:08:12,639
be

00:08:08,639 --> 00:08:15,840
a number of open source proprietary

00:08:12,639 --> 00:08:17,599
uh quite niche in-house

00:08:15,840 --> 00:08:19,199
uh technologies and they all need to

00:08:17,599 --> 00:08:22,160
play nicely with each other

00:08:19,199 --> 00:08:24,080
and um that's that's really the the

00:08:22,160 --> 00:08:26,400
challenge that they're facing today

00:08:24,080 --> 00:08:29,840
um trying to get all those to be in

00:08:26,400 --> 00:08:29,840
england and play nicely together

00:08:31,840 --> 00:08:38,000
so um we're gonna walk through

00:08:34,880 --> 00:08:40,560
this is a a very simplified uh version

00:08:38,000 --> 00:08:44,320
of what a platform would look like

00:08:40,560 --> 00:08:46,320
and um but the main uh thing that you

00:08:44,320 --> 00:08:47,920
need to take away from this is that they

00:08:46,320 --> 00:08:49,040
the technologies here are effectively

00:08:47,920 --> 00:08:51,839
isolated

00:08:49,040 --> 00:08:52,839
um if you've got uh market data vendor

00:08:51,839 --> 00:08:56,959
ether who

00:08:52,839 --> 00:08:59,760
is publishing data onto their platform

00:08:56,959 --> 00:09:00,880
it may also be an in-house messaging

00:08:59,760 --> 00:09:03,040
platform

00:09:00,880 --> 00:09:04,560
which may have been written or may have

00:09:03,040 --> 00:09:05,040
been maintained for previous reasons and

00:09:04,560 --> 00:09:07,680
has been

00:09:05,040 --> 00:09:09,519
too costly to move away from um or it

00:09:07,680 --> 00:09:11,360
has its own advantages

00:09:09,519 --> 00:09:13,519
you do unique use case for the target

00:09:11,360 --> 00:09:14,160
deployment and that can't disappear

00:09:13,519 --> 00:09:15,600
either

00:09:14,160 --> 00:09:17,279
and so you end up having these

00:09:15,600 --> 00:09:19,839
redistribution layers to try

00:09:17,279 --> 00:09:21,440
and attempt to make sense of them and to

00:09:19,839 --> 00:09:24,160
try to publish data onto multiple

00:09:21,440 --> 00:09:26,080
data sources or to switch data sources

00:09:24,160 --> 00:09:29,680
or data platforms

00:09:26,080 --> 00:09:33,680
so the requirement is that

00:09:29,680 --> 00:09:36,080
the api um that we have here

00:09:33,680 --> 00:09:38,560
is deployed across all applications that

00:09:36,080 --> 00:09:40,160
need to consume from that platform

00:09:38,560 --> 00:09:41,839
and it's not just messaging either

00:09:40,160 --> 00:09:42,720
there's entitlements as compliance

00:09:41,839 --> 00:09:45,519
logging

00:09:42,720 --> 00:09:46,160
um there's drop copies there's lots of

00:09:45,519 --> 00:09:48,800
things that

00:09:46,160 --> 00:09:50,240
need to be done and outside of purely

00:09:48,800 --> 00:09:51,600
the market data stream and that's where

00:09:50,240 --> 00:09:52,959
the the plug-in interface that i was

00:09:51,600 --> 00:09:54,399
talking about earlier on

00:09:52,959 --> 00:09:55,680
could come into play with oklahoma to

00:09:54,399 --> 00:09:57,200
try to put those across in a

00:09:55,680 --> 00:09:59,920
standardized way

00:09:57,200 --> 00:10:00,720
um but the applications because their

00:09:59,920 --> 00:10:04,640
apis

00:10:00,720 --> 00:10:06,320
are writing to these platforms directly

00:10:04,640 --> 00:10:07,760
they're effectively locked in to the

00:10:06,320 --> 00:10:09,360
underlying vendors

00:10:07,760 --> 00:10:11,200
and this is a very simplified diagram

00:10:09,360 --> 00:10:13,360
where we have like you know one

00:10:11,200 --> 00:10:15,040
application trailing box there but in

00:10:13,360 --> 00:10:16,880
the real world there could be

00:10:15,040 --> 00:10:18,320
tens hundreds thousands of those

00:10:16,880 --> 00:10:20,240
deployed and

00:10:18,320 --> 00:10:21,440
each of which are locked into the

00:10:20,240 --> 00:10:22,959
underlying

00:10:21,440 --> 00:10:24,959
technology vendor directly where they're

00:10:22,959 --> 00:10:26,880
written directly to that api

00:10:24,959 --> 00:10:28,640
and of course the alternative to this is

00:10:26,880 --> 00:10:32,480
that

00:10:28,640 --> 00:10:34,079
the market data monitors applications um

00:10:32,480 --> 00:10:35,120
abstract themselves from the underlying

00:10:34,079 --> 00:10:36,320
api but then of course you've

00:10:35,120 --> 00:10:38,800
effectively got

00:10:36,320 --> 00:10:39,600
an api that does what obama does

00:10:38,800 --> 00:10:42,399
deployed

00:10:39,600 --> 00:10:44,079
and maintained in-house without putting

00:10:42,399 --> 00:10:47,440
resources without everything that

00:10:44,079 --> 00:10:49,120
comes associated with open number um so

00:10:47,440 --> 00:10:51,519
the main takeaway from this is that

00:10:49,120 --> 00:10:53,440
whenever new technologies come along

00:10:51,519 --> 00:10:55,440
uh whenever technologies go out of

00:10:53,440 --> 00:10:58,880
fashion um

00:10:55,440 --> 00:11:02,560
the cost of migrating to a new platform

00:10:58,880 --> 00:11:05,120
is quite high because the apis

00:11:02,560 --> 00:11:06,480
that are being used by each of these

00:11:05,120 --> 00:11:08,720
other applications

00:11:06,480 --> 00:11:10,800
there's just so many of them it's uh

00:11:08,720 --> 00:11:14,240
very difficult to switch them

00:11:10,800 --> 00:11:17,440
so you end up picking third parties

00:11:14,240 --> 00:11:18,000
and technologies based on okay what's

00:11:17,440 --> 00:11:20,079
gonna

00:11:18,000 --> 00:11:21,600
what's gonna not make my life misery

00:11:20,079 --> 00:11:23,760
whenever i go to deploy this

00:11:21,600 --> 00:11:25,120
as opposed to what is actually the best

00:11:23,760 --> 00:11:26,640
product to solve the problem that i'm

00:11:25,120 --> 00:11:28,880
facing at the minute

00:11:26,640 --> 00:11:30,240
so that that's what the what's up the

00:11:28,880 --> 00:11:31,680
market data platform looks like at the

00:11:30,240 --> 00:11:36,800
moment whenever

00:11:31,680 --> 00:11:39,120
um there's no amount involved anywhere

00:11:36,800 --> 00:11:40,240
so what happens whenever you do involve

00:11:39,120 --> 00:11:43,040
open mama

00:11:40,240 --> 00:11:45,440
now the the main takeaway here is that

00:11:43,040 --> 00:11:48,079
um open mama doesn't isn't the platform

00:11:45,440 --> 00:11:49,600
and i think a lot of uh things that you

00:11:48,079 --> 00:11:51,519
may have seen in the past

00:11:49,600 --> 00:11:53,200
mama has been very much portrayed as a

00:11:51,519 --> 00:11:55,120
platform it's not it's an abstraction

00:11:53,200 --> 00:11:56,560
there away from

00:11:55,120 --> 00:12:00,000
an underlying platform so there's

00:11:56,560 --> 00:12:03,040
nothing to stop an open mama application

00:12:00,000 --> 00:12:04,720
publishing and subscribing onto

00:12:03,040 --> 00:12:06,560
one vendor messaging platform or an

00:12:04,720 --> 00:12:09,200
in-house messaging platform

00:12:06,560 --> 00:12:10,720
or an in-house autonomous tracking

00:12:09,200 --> 00:12:12,399
system or compliance logger

00:12:10,720 --> 00:12:14,160
there's nothing to stop any of that and

00:12:12,399 --> 00:12:17,440
openmom is really just an api

00:12:14,160 --> 00:12:20,800
it's a standard way to try and handle

00:12:17,440 --> 00:12:22,000
market data events so it doesn't need to

00:12:20,800 --> 00:12:23,519
be used everywhere and that's why

00:12:22,000 --> 00:12:25,440
purposefully in this diagram

00:12:23,519 --> 00:12:26,800
you see the little boxes at the bottom

00:12:25,440 --> 00:12:27,760
you don't need to do it in all

00:12:26,800 --> 00:12:29,519
applications

00:12:27,760 --> 00:12:31,040
you don't need to do it even everywhere

00:12:29,519 --> 00:12:32,560
in the cm application

00:12:31,040 --> 00:12:34,560
and you can just be used where it's

00:12:32,560 --> 00:12:36,720
appropriate to try

00:12:34,560 --> 00:12:38,240
and reduce the overhead associated with

00:12:36,720 --> 00:12:40,560
maintaining support

00:12:38,240 --> 00:12:42,240
for each of these third-party platforms

00:12:40,560 --> 00:12:45,200
because the open-minded api itself

00:12:42,240 --> 00:12:47,200
is very stable and it's been i don't

00:12:45,200 --> 00:12:50,839
think it has been any application

00:12:47,200 --> 00:12:53,839
uh interface changes since its launch

00:12:50,839 --> 00:12:55,920
so the

00:12:53,839 --> 00:12:56,880
this means that the the open mom api can

00:12:55,920 --> 00:12:59,200
be used to

00:12:56,880 --> 00:13:00,959
trigger events in certain ways it can be

00:12:59,200 --> 00:13:03,680
used to access data

00:13:00,959 --> 00:13:06,079
in the same way um and it can be used

00:13:03,680 --> 00:13:08,480
for both subscribing and publishing and

00:13:06,079 --> 00:13:10,079
it can effectively be used in place of a

00:13:08,480 --> 00:13:13,440
traditional feed handler

00:13:10,079 --> 00:13:14,480
and to try and get data from a data

00:13:13,440 --> 00:13:17,519
source

00:13:14,480 --> 00:13:20,720
a direct data source and get it out into

00:13:17,519 --> 00:13:22,720
another platform elsewhere um

00:13:20,720 --> 00:13:24,240
or it can be used for early pixel and

00:13:22,720 --> 00:13:26,160
just use it for connecting to an

00:13:24,240 --> 00:13:27,519
individual platform

00:13:26,160 --> 00:13:28,800
but the the main takeaway is the

00:13:27,519 --> 00:13:29,600
underlying technology doesn't have to

00:13:28,800 --> 00:13:32,000
change

00:13:29,600 --> 00:13:33,600
there's no major people of underlying

00:13:32,000 --> 00:13:34,079
tech that you need to change and if you

00:13:33,600 --> 00:13:36,880
do

00:13:34,079 --> 00:13:38,959
then please let us know because that is

00:13:36,880 --> 00:13:40,000
that is not the goal of open mama

00:13:38,959 --> 00:13:42,560
open mom is supposed to be pretty

00:13:40,000 --> 00:13:44,079
passive in the underlying platforms

00:13:42,560 --> 00:13:46,720
and it's supposed to operate alongside

00:13:44,079 --> 00:13:49,839
it as opposed to pushing its opinions

00:13:46,720 --> 00:13:49,839
onto it

00:13:50,000 --> 00:13:55,040
so if we move away from the market data

00:13:52,959 --> 00:13:57,920
manager just for a moment to

00:13:55,040 --> 00:13:59,199
discuss the application the market data

00:13:57,920 --> 00:14:01,920
vendors who are trying to

00:13:59,199 --> 00:14:02,560
target these platforms and there's

00:14:01,920 --> 00:14:06,000
generally

00:14:02,560 --> 00:14:08,720
uh the opposite problem

00:14:06,000 --> 00:14:10,399
involved there and that platform

00:14:08,720 --> 00:14:13,839
migrations for them

00:14:10,399 --> 00:14:15,519
are very difficult uh because the

00:14:13,839 --> 00:14:17,760
every customer's target platform is

00:14:15,519 --> 00:14:19,199
different and everybody's requirements

00:14:17,760 --> 00:14:22,320
are different

00:14:19,199 --> 00:14:25,920
and if you want to introduce a new

00:14:22,320 --> 00:14:28,320
api and that's a significant cost a

00:14:25,920 --> 00:14:30,320
significant risk associated with

00:14:28,320 --> 00:14:32,399
the market data manager whenever they

00:14:30,320 --> 00:14:34,240
look at it so

00:14:32,399 --> 00:14:35,839
a market data vendor can't just go into

00:14:34,240 --> 00:14:38,160
a market data manager and say

00:14:35,839 --> 00:14:39,120
you know we want to replace your entire

00:14:38,160 --> 00:14:40,800
platform

00:14:39,120 --> 00:14:42,320
and they may have a platform which they

00:14:40,800 --> 00:14:44,079
may want the

00:14:42,320 --> 00:14:45,680
market data manager to use but they

00:14:44,079 --> 00:14:46,320
don't want it to be a core entity

00:14:45,680 --> 00:14:49,760
requirement

00:14:46,320 --> 00:14:53,199
because it just lights up

00:14:49,760 --> 00:14:55,040
um red lights in the market data manager

00:14:53,199 --> 00:14:57,600
whenever they see this coming on

00:14:55,040 --> 00:14:58,399
um because it's it's a dangerous thing

00:14:57,600 --> 00:15:01,920
to try and

00:14:58,399 --> 00:15:03,760
add another new platform or form as the

00:15:01,920 --> 00:15:05,920
it could often get known uh to try and

00:15:03,760 --> 00:15:08,000
handle another market data platform

00:15:05,920 --> 00:15:11,199
a provider and who wants to get their

00:15:08,000 --> 00:15:14,800
data onto your platform

00:15:11,199 --> 00:15:18,639
so what what happens if

00:15:14,800 --> 00:15:21,680
a market data vendor wants to target

00:15:18,639 --> 00:15:23,920
a non-open mama application

00:15:21,680 --> 00:15:26,000
so the first thing you notice that they

00:15:23,920 --> 00:15:28,320
that non-open mama application

00:15:26,000 --> 00:15:29,920
probably already has other apis it might

00:15:28,320 --> 00:15:31,519
not be for

00:15:29,920 --> 00:15:32,959
market data or they might be from market

00:15:31,519 --> 00:15:34,880
data um

00:15:32,959 --> 00:15:37,040
but they're they're going to be there

00:15:34,880 --> 00:15:38,560
there there's already a cost of

00:15:37,040 --> 00:15:40,800
a development associated with

00:15:38,560 --> 00:15:43,839
maintaining whatever it's already doing

00:15:40,800 --> 00:15:45,360
so with without open mama here if i

00:15:43,839 --> 00:15:47,839
could be introducing a new one

00:15:45,360 --> 00:15:49,440
um you're on you're expecting the client

00:15:47,839 --> 00:15:50,959
to

00:15:49,440 --> 00:15:52,240
write to your application code i mean

00:15:50,959 --> 00:15:53,040
it's great that you've got an api that

00:15:52,240 --> 00:15:55,759
makes it easy to

00:15:53,040 --> 00:15:57,040
consume from the market that you're

00:15:55,759 --> 00:15:59,279
providing or maybe you've got a protocol

00:15:57,040 --> 00:16:00,880
specifications you're providing instead

00:15:59,279 --> 00:16:02,800
but the expectation is still going to be

00:16:00,880 --> 00:16:05,839
on the

00:16:02,800 --> 00:16:09,680
customer to understand that api

00:16:05,839 --> 00:16:12,000
and to write their application to it and

00:16:09,680 --> 00:16:13,600
part of the difficulty with opportunity

00:16:12,000 --> 00:16:17,360
cost as it goes down to

00:16:13,600 --> 00:16:20,320
him during the timeline is that

00:16:17,360 --> 00:16:22,079
what what might seem initially as quite

00:16:20,320 --> 00:16:23,920
a compelling prospect

00:16:22,079 --> 00:16:25,279
uh because you're only targeting a

00:16:23,920 --> 00:16:28,560
single application

00:16:25,279 --> 00:16:29,920
and during a poc phase um and

00:16:28,560 --> 00:16:32,079
you know you're receiving the market

00:16:29,920 --> 00:16:35,360
data that's fine uh whenever it starts

00:16:32,079 --> 00:16:37,199
to rule out to a pilot and you start to

00:16:35,360 --> 00:16:39,120
try and target a real world application

00:16:37,199 --> 00:16:40,959
or cluster of applications

00:16:39,120 --> 00:16:42,880
um it becomes increasingly complicated

00:16:40,959 --> 00:16:43,440
and then suddenly whenever it's deployed

00:16:42,880 --> 00:16:44,560
across

00:16:43,440 --> 00:16:47,360
the enterprise or hundreds of

00:16:44,560 --> 00:16:48,240
applications the adoption cost increases

00:16:47,360 --> 00:16:50,000
with time

00:16:48,240 --> 00:16:51,440
and the complexity increases with time

00:16:50,000 --> 00:16:52,399
and the expectation and the burden of

00:16:51,440 --> 00:16:54,320
the customer

00:16:52,399 --> 00:16:56,160
increases with time and the result of

00:16:54,320 --> 00:16:57,519
that is that the net value of the

00:16:56,160 --> 00:17:00,160
proposition that you're

00:16:57,519 --> 00:17:01,600
proposing is actually reduced because

00:17:00,160 --> 00:17:02,320
the customer needs to factor in the

00:17:01,600 --> 00:17:05,839
price

00:17:02,320 --> 00:17:08,480
of um migrating all these applications

00:17:05,839 --> 00:17:09,280
to the market data provider and because

00:17:08,480 --> 00:17:11,120
of that

00:17:09,280 --> 00:17:13,600
um there's not an awful lot of

00:17:11,120 --> 00:17:16,799
volatility in terms of technology used

00:17:13,600 --> 00:17:16,799
in the application space

00:17:17,120 --> 00:17:21,360
so what happens whenever it's switched

00:17:19,039 --> 00:17:24,959
around and then open mama compatible

00:17:21,360 --> 00:17:28,640
apps are targeted or as an alternative

00:17:24,959 --> 00:17:30,880
um open mama is the chosen api that

00:17:28,640 --> 00:17:34,400
you tell the clients to use whenever

00:17:30,880 --> 00:17:34,400
they're switching market to

00:17:34,559 --> 00:17:39,919
providers so the core takeaway is that

00:17:38,240 --> 00:17:41,840
the clan code doesn't change

00:17:39,919 --> 00:17:43,919
if you're consuming from an open mama

00:17:41,840 --> 00:17:46,480
data source coming down from transport

00:17:43,919 --> 00:17:47,520
a and you're moving to effectively

00:17:46,480 --> 00:17:50,640
transport b

00:17:47,520 --> 00:17:52,480
bridge b um the clan software doesn't

00:17:50,640 --> 00:17:54,880
change it doesn't even recompile

00:17:52,480 --> 00:17:56,559
um it's just a different configuration

00:17:54,880 --> 00:17:58,000
on a different runtime library dropped

00:17:56,559 --> 00:18:01,120
in

00:17:58,000 --> 00:18:02,720
so it means that the it does shift a bit

00:18:01,120 --> 00:18:06,160
of the expectation

00:18:02,720 --> 00:18:08,640
um on to the vendor to develop

00:18:06,160 --> 00:18:09,840
the bridge for open mama but that's only

00:18:08,640 --> 00:18:12,160
developed once

00:18:09,840 --> 00:18:13,520
and once it's developed um in our

00:18:12,160 --> 00:18:14,240
experience anyway there's very little

00:18:13,520 --> 00:18:15,600
maintenance

00:18:14,240 --> 00:18:18,000
associated with it particularly compared

00:18:15,600 --> 00:18:20,000
with an in-house fpi where you've got uh

00:18:18,000 --> 00:18:22,720
grand opinions to contend with

00:18:20,000 --> 00:18:24,799
and what effectively happens is that the

00:18:22,720 --> 00:18:27,039
adoption cost for clients

00:18:24,799 --> 00:18:28,000
is reduced because it's not being

00:18:27,039 --> 00:18:30,799
duplicated across

00:18:28,000 --> 00:18:32,559
every application that they have um and

00:18:30,799 --> 00:18:34,320
in the event that they don't have

00:18:32,559 --> 00:18:35,600
obama yet and you're introducing open

00:18:34,320 --> 00:18:38,480
mama as the core

00:18:35,600 --> 00:18:38,960
fbi that you're suggesting that they use

00:18:38,480 --> 00:18:40,400
uh

00:18:38,960 --> 00:18:41,760
that's a much more compelling story for

00:18:40,400 --> 00:18:42,320
a customer to get on board with because

00:18:41,760 --> 00:18:45,840
then no

00:18:42,320 --> 00:18:47,520
oh okay so if i consume data from you

00:18:45,840 --> 00:18:50,240
and i decide to change my mind at a

00:18:47,520 --> 00:18:52,240
later point i'm no longer stuck to your

00:18:50,240 --> 00:18:53,919
platform i don't have to go through this

00:18:52,240 --> 00:18:55,840
massive migration cost

00:18:53,919 --> 00:18:57,679
and to try and move to yet another

00:18:55,840 --> 00:18:59,360
market data provider so the risk is much

00:18:57,679 --> 00:19:02,960
lower there as well

00:18:59,360 --> 00:19:05,520
um and as well as that the the ongoing

00:19:02,960 --> 00:19:06,400
development cost which is which is often

00:19:05,520 --> 00:19:08,400
overlooked for

00:19:06,400 --> 00:19:10,160
and this from a client's point of view

00:19:08,400 --> 00:19:13,039
and is much lower as well

00:19:10,160 --> 00:19:14,720
um on the support for the api that the

00:19:13,039 --> 00:19:16,160
client is writing to

00:19:14,720 --> 00:19:17,520
comes from the community it comes from

00:19:16,160 --> 00:19:19,360
the open mama community it doesn't

00:19:17,520 --> 00:19:21,039
necessarily go straight to the

00:19:19,360 --> 00:19:24,000
the vendor unless there's a bug in the

00:19:21,039 --> 00:19:26,400
underlying vendor software

00:19:24,000 --> 00:19:28,000
so that's the main value proposition

00:19:26,400 --> 00:19:29,760
from a market data vendor and an

00:19:28,000 --> 00:19:32,400
application vendor's point of view

00:19:29,760 --> 00:19:33,360
and it's worth noting as well that um

00:19:32,400 --> 00:19:34,880
we've discussed

00:19:33,360 --> 00:19:36,400
market data providers here but the same

00:19:34,880 --> 00:19:39,039
thing applies to

00:19:36,400 --> 00:19:39,919
in any application that's perhaps even

00:19:39,039 --> 00:19:42,000
consuming

00:19:39,919 --> 00:19:44,400
from different market data platforms and

00:19:42,000 --> 00:19:47,760
things like tech capture platforms and

00:19:44,400 --> 00:19:50,320
um technologies like that can all

00:19:47,760 --> 00:19:51,520
benefit from using open mama uh to try

00:19:50,320 --> 00:19:53,840
and abstract itself away

00:19:51,520 --> 00:19:56,400
from the underlying technology that's

00:19:53,840 --> 00:19:56,400
that's the news

00:19:56,880 --> 00:20:01,520
so whenever you break it down um open

00:20:00,080 --> 00:20:02,720
mama really is all about

00:20:01,520 --> 00:20:04,159
choice and neutrality it's not

00:20:02,720 --> 00:20:05,120
non-encompassing platform that's going

00:20:04,159 --> 00:20:07,039
to come in

00:20:05,120 --> 00:20:08,400
and expect it to make massive changes in

00:20:07,039 --> 00:20:12,000
your deployment

00:20:08,400 --> 00:20:14,640
um it's its main core value from the

00:20:12,000 --> 00:20:17,120
start has always been that

00:20:14,640 --> 00:20:18,320
the selection of a market data vendor or

00:20:17,120 --> 00:20:20,000
an application vendor

00:20:18,320 --> 00:20:21,840
should be guessing how good it is and

00:20:20,000 --> 00:20:22,880
how high quality it is and how low the

00:20:21,840 --> 00:20:25,280
latency is

00:20:22,880 --> 00:20:26,559
it shouldn't be based on how sticky

00:20:25,280 --> 00:20:28,320
their api is

00:20:26,559 --> 00:20:30,400
or how inconvenient it is to choose

00:20:28,320 --> 00:20:33,280
anyone other than whatever incumbent

00:20:30,400 --> 00:20:35,200
is currently present on your platform um

00:20:33,280 --> 00:20:36,480
it also breaks down the silos between

00:20:35,200 --> 00:20:38,080
the platforms it means that you can

00:20:36,480 --> 00:20:38,960
bridge between different technologies if

00:20:38,080 --> 00:20:41,919
you want to

00:20:38,960 --> 00:20:43,200
and you can make grit um slowly away

00:20:41,919 --> 00:20:45,679
from other platforms

00:20:43,200 --> 00:20:47,600
if needs be um without having to worry

00:20:45,679 --> 00:20:47,919
about going big bang and using open

00:20:47,600 --> 00:20:50,240
mount

00:20:47,919 --> 00:20:51,280
air beamer um and if you don't want to

00:20:50,240 --> 00:20:54,159
use it everywhere that's

00:20:51,280 --> 00:20:55,919
absolutely 100 fine um that's what it's

00:20:54,159 --> 00:20:58,159
for it will consume and

00:20:55,919 --> 00:20:59,200
produce on to different platforms as and

00:20:58,159 --> 00:21:00,559
when required

00:20:59,200 --> 00:21:02,400
and we could even be used to know some

00:21:00,559 --> 00:21:03,760
extraction there for direct exchanges

00:21:02,400 --> 00:21:07,200
should it need to be

00:21:03,760 --> 00:21:09,440
um and the applications if you're a

00:21:07,200 --> 00:21:13,039
market data

00:21:09,440 --> 00:21:14,080
application provider and you can just

00:21:13,039 --> 00:21:15,840
benefit from

00:21:14,080 --> 00:21:17,760
connectivity to every open amount

00:21:15,840 --> 00:21:19,120
supported platform simply by writing

00:21:17,760 --> 00:21:20,720
token mama instead of

00:21:19,120 --> 00:21:22,159
directly to the third-party platform

00:21:20,720 --> 00:21:24,880
apis and

00:21:22,159 --> 00:21:26,240
themselves and there's a reduced risk

00:21:24,880 --> 00:21:28,080
for the customer

00:21:26,240 --> 00:21:29,600
um and there's nothing to stop in-house

00:21:28,080 --> 00:21:30,159
technologies from moving dual and mobile

00:21:29,600 --> 00:21:32,000
as well

00:21:30,159 --> 00:21:33,440
the bridge api is open the open mama

00:21:32,000 --> 00:21:35,440
community will support you in creating

00:21:33,440 --> 00:21:36,480
new bridges should it be required

00:21:35,440 --> 00:21:38,640
and there's actually been a lot of

00:21:36,480 --> 00:21:41,440
effort made in the last year

00:21:38,640 --> 00:21:42,720
to reduce the complexity that's required

00:21:41,440 --> 00:21:44,480
in building your own bridge so it's much

00:21:42,720 --> 00:21:46,480
easier to build a double mama bridge

00:21:44,480 --> 00:21:48,400
than it has ever been and because the

00:21:46,480 --> 00:21:49,840
obama api is public and it's free and

00:21:48,400 --> 00:21:52,720
it's open source it can be

00:21:49,840 --> 00:21:54,320
contributed to there's nothing to stop

00:21:52,720 --> 00:21:56,080
and application

00:21:54,320 --> 00:21:58,400
development being outsourced with a nice

00:21:56,080 --> 00:22:00,880
firm specification um

00:21:58,400 --> 00:22:02,480
the api is public there's no licensing

00:22:00,880 --> 00:22:04,640
associated with using it

00:22:02,480 --> 00:22:05,840
so there's nothing to stop external

00:22:04,640 --> 00:22:09,679
parties from

00:22:05,840 --> 00:22:09,679
writing their own software

00:22:10,080 --> 00:22:13,679
okay so we're going to switch over here

00:22:12,400 --> 00:22:17,440
to on

00:22:13,679 --> 00:22:18,400
mama demo here and we did pre-recorded

00:22:17,440 --> 00:22:20,320
because

00:22:18,400 --> 00:22:21,520
we needed to record it during market

00:22:20,320 --> 00:22:24,840
hours over here

00:22:21,520 --> 00:22:28,240
um so we're going to demonstrate the

00:22:24,840 --> 00:22:29,840
obama portable demo environment and

00:22:28,240 --> 00:22:32,320
switching between open source and

00:22:29,840 --> 00:22:33,440
proprietary technologies the proprietary

00:22:32,320 --> 00:22:36,480
technology being

00:22:33,440 --> 00:22:38,960
a valid superfeed product without any

00:22:36,480 --> 00:22:40,720
recombination and a simple

00:22:38,960 --> 00:22:43,120
reconfiguration and a new library

00:22:40,720 --> 00:22:43,120
installed

00:22:43,280 --> 00:22:47,360
okay so we're going to show a demo here

00:22:45,039 --> 00:22:49,360
of what we call the obama portable

00:22:47,360 --> 00:22:51,120
demo environment now we do have some

00:22:49,360 --> 00:22:54,400
documentation about this on

00:22:51,120 --> 00:22:55,919
our website um the default format that

00:22:54,400 --> 00:22:58,960
we have here is an aws

00:22:55,919 --> 00:23:01,039
mi and you're welcome to extend this

00:22:58,960 --> 00:23:02,640
we use the official centos images which

00:23:01,039 --> 00:23:06,000
means that you can extend them

00:23:02,640 --> 00:23:07,200
within any licensing pairs and we have

00:23:06,000 --> 00:23:09,120
instructions there for how to build your

00:23:07,200 --> 00:23:09,919
own if you want to build it with a

00:23:09,120 --> 00:23:11,360
vagrant

00:23:09,919 --> 00:23:14,159
or if you want to set up a demo

00:23:11,360 --> 00:23:16,320
environment on a bare metal box

00:23:14,159 --> 00:23:18,159
so in the instance that we have here we

00:23:16,320 --> 00:23:21,280
have an aws

00:23:18,159 --> 00:23:23,679
ami that is already set up

00:23:21,280 --> 00:23:25,840
with the ps image and we're just going

00:23:23,679 --> 00:23:28,559
to log into it here now

00:23:25,840 --> 00:23:29,200
so the first thing that you see is that

00:23:28,559 --> 00:23:32,159
um

00:23:29,200 --> 00:23:33,200
it tells you that open mama's installed

00:23:32,159 --> 00:23:35,760
open mama

00:23:33,200 --> 00:23:36,559
um it has the cupid bridge by default

00:23:35,760 --> 00:23:38,400
and uh

00:23:36,559 --> 00:23:39,840
the binaries are all in the path so one

00:23:38,400 --> 00:23:41,279
of the binaries without mama includes

00:23:39,840 --> 00:23:44,320
malevolence and c

00:23:41,279 --> 00:23:47,760
which is a test utility that

00:23:44,320 --> 00:23:48,960
allows you to connect to an open mama

00:23:47,760 --> 00:23:51,840
data source

00:23:48,960 --> 00:23:53,039
and print some data out from it so we're

00:23:51,840 --> 00:23:54,240
going to just go ahead and run it here

00:23:53,039 --> 00:23:57,600
the sources

00:23:54,240 --> 00:23:58,799
om the middleware bridge which is the

00:23:57,600 --> 00:24:00,720
plug of the bridges that we were talking

00:23:58,799 --> 00:24:03,520
about is cupid in this instance

00:24:00,720 --> 00:24:05,520
the transport name is sub and we have an

00:24:03,520 --> 00:24:08,960
iso currency mix symbol there

00:24:05,520 --> 00:24:08,960
so if we run this up

00:24:09,200 --> 00:24:14,960
we can see the instrument starts ticking

00:24:12,960 --> 00:24:16,320
we can see some data coming out of that

00:24:14,960 --> 00:24:19,600
which is great

00:24:16,320 --> 00:24:22,480
now that is connecting to uh

00:24:19,600 --> 00:24:23,760
capture daemon which is running the

00:24:22,480 --> 00:24:24,720
capture replay demon which is running

00:24:23,760 --> 00:24:26,480
locally

00:24:24,720 --> 00:24:28,640
and uh that's that's effectively what

00:24:26,480 --> 00:24:33,120
we're connecting to there is no external

00:24:28,640 --> 00:24:35,279
market data source involved here now

00:24:33,120 --> 00:24:36,799
that's great but what if we did want to

00:24:35,279 --> 00:24:41,120
include an external

00:24:36,799 --> 00:24:41,919
market data source well we do have a

00:24:41,120 --> 00:24:43,279
repository

00:24:41,919 --> 00:24:44,960
that third parties are free to

00:24:43,279 --> 00:24:48,480
contribute to

00:24:44,960 --> 00:24:50,960
which will give access to optional

00:24:48,480 --> 00:24:52,480
additional bridges that people can add

00:24:50,960 --> 00:24:55,600
other than when they see fit

00:24:52,480 --> 00:24:55,600
so we have

00:24:56,320 --> 00:25:03,840
open mama superfeed

00:25:00,480 --> 00:25:06,080
and which was contributed by bella

00:25:03,840 --> 00:25:06,960
and so if we install that and have a

00:25:06,080 --> 00:25:09,919
look in

00:25:06,960 --> 00:25:09,919
abduct

00:25:10,960 --> 00:25:15,120
we can see that some of the middleware

00:25:13,039 --> 00:25:17,600
bridges that if you were familiar with

00:25:15,120 --> 00:25:18,400
fella you'd have seen before will be

00:25:17,600 --> 00:25:21,600
available

00:25:18,400 --> 00:25:24,640
on the ld library path there for

00:25:21,600 --> 00:25:27,039
obama to use so and

00:25:24,640 --> 00:25:28,080
want to get the same open mama command

00:25:27,039 --> 00:25:32,159
that we had before

00:25:28,080 --> 00:25:36,320
on wilson c um that provided us with

00:25:32,159 --> 00:25:39,039
a alternative source name

00:25:36,320 --> 00:25:40,480
and middleware here is their data fabric

00:25:39,039 --> 00:25:44,080
middleware

00:25:40,480 --> 00:25:45,520
and the transport is delay

00:25:44,080 --> 00:25:47,120
data which i'm just copying and pasting

00:25:45,520 --> 00:25:50,159
from another window here

00:25:47,120 --> 00:25:52,480
and the symbol name

00:25:50,159 --> 00:25:54,240
is another item currency mic in this

00:25:52,480 --> 00:25:57,520
format

00:25:54,240 --> 00:25:59,440
which is here now that's not going to

00:25:57,520 --> 00:26:02,799
work yet because we haven't configured

00:25:59,440 --> 00:26:04,000
the uh configuration development

00:26:02,799 --> 00:26:07,600
properties

00:26:04,000 --> 00:26:10,000
to point to the new data source

00:26:07,600 --> 00:26:12,000
so bridges can pull in configuration

00:26:10,000 --> 00:26:14,480
from the standard open mama

00:26:12,000 --> 00:26:15,840
transport list to find out how to

00:26:14,480 --> 00:26:18,880
connect

00:26:15,840 --> 00:26:21,679
to the upstream data sources so

00:26:18,880 --> 00:26:24,880
we have the configuration that was

00:26:21,679 --> 00:26:24,880
surprised by that our split

00:26:32,640 --> 00:26:35,919
and you can see some data started to

00:26:34,480 --> 00:26:39,120
tick in from

00:26:35,919 --> 00:26:41,360
the superfeed the lead to the source

00:26:39,120 --> 00:26:44,159
that they've provided us with

00:26:41,360 --> 00:26:46,159
so not what's involved with getting the

00:26:44,159 --> 00:26:49,840
cm application to connect to

00:26:46,159 --> 00:26:52,880
multiple different data sources without

00:26:49,840 --> 00:26:53,760
any it's just a different library

00:26:52,880 --> 00:26:56,799
getting loaded

00:26:53,760 --> 00:27:00,159
which is opened at runtime and

00:26:56,799 --> 00:27:03,520
a different configuration

00:27:00,159 --> 00:27:05,760
so if we go in there to the

00:27:03,520 --> 00:27:07,360
every demo kit that we have has a

00:27:05,760 --> 00:27:10,720
checkout of

00:27:07,360 --> 00:27:13,919
openmama's code installment as well um

00:27:10,720 --> 00:27:15,520
so we'll just go into the c

00:27:13,919 --> 00:27:18,960
plus plus tutorials that we've got here

00:27:15,520 --> 00:27:18,960
so that's an example um

00:27:19,039 --> 00:27:22,080
quick start up that we've got um in our

00:27:21,679 --> 00:27:24,399
demo

00:27:22,080 --> 00:27:26,320
to show you um how to get acquainted

00:27:24,399 --> 00:27:28,720
with open mama

00:27:26,320 --> 00:27:29,440
there are versions available for c c

00:27:28,720 --> 00:27:31,919
plus plus c

00:27:29,440 --> 00:27:33,200
sharp and java the c sharp one will

00:27:31,919 --> 00:27:36,720
actually go on.net core

00:27:33,200 --> 00:27:40,559
as well so you can run it on linux

00:27:36,720 --> 00:27:42,159
so if we create a little directory here

00:27:40,559 --> 00:27:45,919
as is the standard for

00:27:42,159 --> 00:27:47,200
scenic we'll do a quick build

00:27:45,919 --> 00:27:49,120
there's a brand new application which

00:27:47,200 --> 00:27:52,240
doesn't know anything about um

00:27:49,120 --> 00:27:53,520
bella or um any other it doesn't know

00:27:52,240 --> 00:27:54,720
anything about cupid either it was built

00:27:53,520 --> 00:27:56,720
against open mama

00:27:54,720 --> 00:27:59,200
and obama then decides which libraries

00:27:56,720 --> 00:28:02,320
to load

00:27:59,200 --> 00:28:06,880
so we will go ahead and

00:28:02,320 --> 00:28:06,880
run this little quick start application

00:28:07,279 --> 00:28:11,760
run this little quick start application

00:28:09,120 --> 00:28:14,720
and provide the same commands

00:28:11,760 --> 00:28:17,200
as what was provided to connect to

00:28:14,720 --> 00:28:19,200
superfeed with the data

00:28:17,200 --> 00:28:21,520
and we can see we're from click there in

00:28:19,200 --> 00:28:24,559
our little example application too

00:28:21,520 --> 00:28:25,840
so that's a quick introduction to open

00:28:24,559 --> 00:28:27,440
mama and how we can switch between

00:28:25,840 --> 00:28:30,720
different data sources

00:28:27,440 --> 00:28:33,360
without any recombination being required

00:28:30,720 --> 00:28:35,360
or any code changes required in the app

00:28:33,360 --> 00:28:37,440
okay so that concludes our presentation

00:28:35,360 --> 00:28:38,559
on obama and thanks everyone for the

00:28:37,440 --> 00:28:41,840
time

00:28:38,559 --> 00:28:44,320
we'll provide some resources here to

00:28:41,840 --> 00:28:45,360
let you follow us on twitter or linkedin

00:28:44,320 --> 00:28:48,320
if you like

00:28:45,360 --> 00:28:49,919
and you can send us an email on the

00:28:48,320 --> 00:28:52,559
mailing list if you want to

00:28:49,919 --> 00:28:53,440
get some extensive support and we're

00:28:52,559 --> 00:28:56,640
also available

00:28:53,440 --> 00:28:57,279
on twitter if anyone wants to have a

00:28:56,640 --> 00:28:59,039
chat with us

00:28:57,279 --> 00:29:00,399
or at least somehow some high level

00:28:59,039 --> 00:29:01,679
discussions around

00:29:00,399 --> 00:29:04,799
and how you'd like to use your mom in

00:29:01,679 --> 00:29:13,840
your organization so thanks again and

00:29:04,799 --> 00:29:13,840

YouTube URL: https://www.youtube.com/watch?v=baBNZOR3rCs


