Title: Pull what where? Contributing to Open Source, securely, on GitHub - Jamie Jones - OSSF 2018
Publication date: 2019-03-14
Playlist: Open Source Strategy Forum 2018
Description: 
	Speaker: Jamie Jones, Principal Architect, GitHub
Presentation: Pull what where? Contributing to Open Source, securely, on GitHub

Pull Requests? Upstream Remotes? Compact Discs? Understanding how to publish code developed inside your organization into the Open Source world can leave you with more questions than answers. In this talk, we will cover key strategies, as well as the workflows and tools that make it possible, for moving past merely consuming open source on GitHub to becoming contributors. Whether you are an IT Manager or Head of Open Source, you will walk away with tips to on how to contribute while staying compliant with legal, technical and security approvals within your organization.
Captions: 
	00:00:00,000 --> 00:00:06,059
[Music]

00:00:10,219 --> 00:00:15,269
good morning how's everyone doing today

00:00:12,559 --> 00:00:19,590
are you having a wonderful time so far

00:00:15,269 --> 00:00:21,869
at the forum I'm about to disappoint you

00:00:19,590 --> 00:00:23,570
I really apologize this as great as the

00:00:21,869 --> 00:00:26,099
title in the abstract of this talk was

00:00:23,570 --> 00:00:29,189
it's probably will be considered by most

00:00:26,099 --> 00:00:31,230
of you more of an open-source 101 but

00:00:29,189 --> 00:00:34,200
that's because that's what my day-to-day

00:00:31,230 --> 00:00:35,640
job is we talk about technology often as

00:00:34,200 --> 00:00:38,640
we see inside large firms and banks

00:00:35,640 --> 00:00:40,710
organizations it sort of bubbles from

00:00:38,640 --> 00:00:42,000
the bottom up but as I have

00:00:40,710 --> 00:00:43,680
conversations not only with those

00:00:42,000 --> 00:00:46,050
conversations from developers from

00:00:43,680 --> 00:00:48,469
technical leads but also the executive

00:00:46,050 --> 00:00:51,270
level right managing director CTO CIOs

00:00:48,469 --> 00:00:53,489
they don't have the answers to all of

00:00:51,270 --> 00:00:56,039
the questions that they need so part of

00:00:53,489 --> 00:00:58,079
my job is to better inform developers

00:00:56,039 --> 00:00:59,789
and everyone who knows open-source what

00:00:58,079 --> 00:01:01,350
the actual answers they need to be able

00:00:59,789 --> 00:01:03,809
to give to make open-source be

00:01:01,350 --> 00:01:06,119
successful in their organisations so I'm

00:01:03,809 --> 00:01:08,100
not coming here to give the golden

00:01:06,119 --> 00:01:09,900
answer or the single silver bullet

00:01:08,100 --> 00:01:11,310
that's going to allow open-source to

00:01:09,900 --> 00:01:12,900
spread throughout banks and spread

00:01:11,310 --> 00:01:14,970
throughout regulated industry quick and

00:01:12,900 --> 00:01:17,580
easily but hopefully I'm going to reduce

00:01:14,970 --> 00:01:20,159
a lot of the barriers in time to get it

00:01:17,580 --> 00:01:22,080
moving right again from my perspective I

00:01:20,159 --> 00:01:24,270
spend so much of my life and my

00:01:22,080 --> 00:01:26,430
conversations deep in this in this world

00:01:24,270 --> 00:01:28,740
I forget that there are people who say

00:01:26,430 --> 00:01:30,329
well what do you mean my open-source

00:01:28,740 --> 00:01:32,460
code may one day have a security

00:01:30,329 --> 00:01:34,610
vulnerability I need to think about what

00:01:32,460 --> 00:01:37,229
that's going to mean to my organization

00:01:34,610 --> 00:01:39,270
what do you mean that one day I'm gonna

00:01:37,229 --> 00:01:42,390
accidentally leak something externally

00:01:39,270 --> 00:01:47,310
and now my managers and PR team is going

00:01:42,390 --> 00:01:48,439
to come down and say no you're fine

00:01:47,310 --> 00:01:50,850
[Applause]

00:01:48,439 --> 00:01:52,350
it's gonna come down and say well you

00:01:50,850 --> 00:01:54,119
shouldn't be doing this and you should

00:01:52,350 --> 00:01:56,340
have a plan for that so all of a sudden

00:01:54,119 --> 00:01:57,570
it doesn't get completely rolled back a

00:01:56,340 --> 00:01:59,610
lot of what I'm going to talk about

00:01:57,570 --> 00:02:01,110
today is just these answers and these

00:01:59,610 --> 00:02:03,299
things that we all intrinsically know

00:02:01,110 --> 00:02:04,740
but putting them out there almost if we

00:02:03,299 --> 00:02:06,780
could if I could take out and I have

00:02:04,740 --> 00:02:09,989
before taking the topics in the slide

00:02:06,780 --> 00:02:11,940
deck and turn them into a worksheet turn

00:02:09,989 --> 00:02:13,620
them into a document to give people and

00:02:11,940 --> 00:02:15,780
say like look if you can answer

00:02:13,620 --> 00:02:17,549
all 37 of these slides off 37 of these

00:02:15,780 --> 00:02:18,959
questions your ability to get open

00:02:17,549 --> 00:02:22,049
source improved in your organization is

00:02:18,959 --> 00:02:24,170
going to go up 600 percent and just

00:02:22,049 --> 00:02:26,730
answer these questions and were there so

00:02:24,170 --> 00:02:28,560
this hopefully will be a lot of bringing

00:02:26,730 --> 00:02:29,849
it all together on one place and sort of

00:02:28,560 --> 00:02:31,349
talking through where I've seen it

00:02:29,849 --> 00:02:31,860
valuable and where I see it sort of fall

00:02:31,349 --> 00:02:34,860
apart

00:02:31,860 --> 00:02:38,430
so I'm Jimmy Jones principal architect

00:02:34,860 --> 00:02:40,230
github based in Washington DC work with

00:02:38,430 --> 00:02:42,480
a lot of our most strategic accounts

00:02:40,230 --> 00:02:44,010
throughout the world but I use accounts

00:02:42,480 --> 00:02:46,379
in air quotes because a lot of people I

00:02:44,010 --> 00:02:48,690
talk to aren't paying customers of

00:02:46,379 --> 00:02:51,030
github they use github comm for free

00:02:48,690 --> 00:02:52,650
they do open source write to us they're

00:02:51,030 --> 00:02:54,390
our customers to us they're our users

00:02:52,650 --> 00:02:55,680
even though they don't pay us a dime so

00:02:54,390 --> 00:02:58,560
I do a lot of work with these

00:02:55,680 --> 00:03:00,269
organizations my background is technical

00:02:58,560 --> 00:03:02,700
tech lead software developer or project

00:03:00,269 --> 00:03:05,519
architect I left my last company just

00:03:02,700 --> 00:03:07,769
for this reason I was in consuming a lot

00:03:05,519 --> 00:03:10,079
of open source code internally in making

00:03:07,769 --> 00:03:12,810
patches and adding features that I

00:03:10,079 --> 00:03:15,569
wasn't allowed to upstream so I'm now

00:03:12,810 --> 00:03:17,069
maintaining separate Forks myself the

00:03:15,569 --> 00:03:19,200
community is not getting the advantage

00:03:17,069 --> 00:03:20,250
of it and neither me nor my company is

00:03:19,200 --> 00:03:22,799
getting the recognition for the work

00:03:20,250 --> 00:03:24,840
that we're doing I came to github as a

00:03:22,799 --> 00:03:27,209
way to try to solve that problem at

00:03:24,840 --> 00:03:29,849
scale right no longer as a developer

00:03:27,209 --> 00:03:33,150
trying to fix my program or my division

00:03:29,849 --> 00:03:36,389
or my you know organization but to be

00:03:33,150 --> 00:03:38,129
able to talk to CIOs and CTOs and

00:03:36,389 --> 00:03:40,500
executive directors of fortune 100

00:03:38,129 --> 00:03:42,120
fortune 500 companies to say there's a

00:03:40,500 --> 00:03:45,540
better way and we should do this

00:03:42,120 --> 00:03:47,940
differently I'm get ups representative

00:03:45,540 --> 00:03:51,000
to the Finny's foundation so I sit on

00:03:47,940 --> 00:03:53,669
the board I work primarily in two major

00:03:51,000 --> 00:03:55,560
programs or working groups today one of

00:03:53,669 --> 00:03:56,940
them is FDX fen serve developer

00:03:55,560 --> 00:03:58,230
experience so there's actually a good

00:03:56,940 --> 00:04:00,660
talk coming up later on today I should

00:03:58,230 --> 00:04:02,129
have put a note here to say come to it

00:04:00,660 --> 00:04:05,340
it's two o'clock or something it's on

00:04:02,129 --> 00:04:07,079
the schedule yeah Thank You Mel I chair

00:04:05,340 --> 00:04:09,030
the DX working group so developer

00:04:07,079 --> 00:04:10,530
experience a lot of what I'm doing in

00:04:09,030 --> 00:04:13,560
that working group is literally talking

00:04:10,530 --> 00:04:15,060
to banks who say well we block access to

00:04:13,560 --> 00:04:17,340
collaboration tools from inside of our

00:04:15,060 --> 00:04:19,590
firewall and that includes github what

00:04:17,340 --> 00:04:21,599
should I know to come back from legal

00:04:19,590 --> 00:04:23,969
and what should you as did help know

00:04:21,599 --> 00:04:26,470
that our legal needs you to do for us to

00:04:23,969 --> 00:04:30,250
turn this off I am an

00:04:26,470 --> 00:04:33,150
other person from a bank and see we see

00:04:30,250 --> 00:04:35,640
get up issues as message as messages in

00:04:33,150 --> 00:04:37,900
collaboration platform so we need

00:04:35,640 --> 00:04:40,270
compliance wording and we needed the

00:04:37,900 --> 00:04:41,800
ability to approve all external

00:04:40,270 --> 00:04:43,950
communication before it becomes public

00:04:41,800 --> 00:04:45,880
but here's an issue again of issue is

00:04:43,950 --> 00:04:48,160
considered external collaboration

00:04:45,880 --> 00:04:50,020
external communication how do I work

00:04:48,160 --> 00:04:51,910
with legal to get that are situated or

00:04:50,020 --> 00:04:53,830
work with you github to give us the

00:04:51,910 --> 00:04:55,690
approval workflows so that we can roll

00:04:53,830 --> 00:04:57,340
that out so that's a lot of what I've

00:04:55,690 --> 00:04:59,650
been doing with the DX working group

00:04:57,340 --> 00:05:01,480
over the past year or so I also work

00:04:59,650 --> 00:05:03,580
with the open source readiness program

00:05:01,480 --> 00:05:06,220
because the technology goes hand in hand

00:05:03,580 --> 00:05:07,870
with the policy and the culture and sort

00:05:06,220 --> 00:05:09,040
of the higher-level process so I'm also

00:05:07,870 --> 00:05:11,350
do a lot of work with the regulatory

00:05:09,040 --> 00:05:13,480
compliance as often we can just like I

00:05:11,350 --> 00:05:15,310
mentioned with the issues the answer is

00:05:13,480 --> 00:05:18,520
often technical just as much as it is

00:05:15,310 --> 00:05:19,960
policy and they go hand in hand so more

00:05:18,520 --> 00:05:21,880
than happy to take any questions let

00:05:19,960 --> 00:05:24,100
this be an interactive session because

00:05:21,880 --> 00:05:25,870
again the content is hopefully you've

00:05:24,100 --> 00:05:30,010
heard it all before but my goal was to

00:05:25,870 --> 00:05:32,080
convince it all into one spot right my

00:05:30,010 --> 00:05:33,430
goal is coming out of this right really

00:05:32,080 --> 00:05:35,560
get an understanding of all of the

00:05:33,430 --> 00:05:37,720
different workflows that I see within

00:05:35,560 --> 00:05:40,630
regulated industries on a day to day

00:05:37,720 --> 00:05:41,260
basis talk about you know specifically

00:05:40,630 --> 00:05:43,090
at github

00:05:41,260 --> 00:05:45,040
make sure you know of all the sort of

00:05:43,090 --> 00:05:46,930
key points that I talk to businesses and

00:05:45,040 --> 00:05:49,720
organizations to take advantage of when

00:05:46,930 --> 00:05:52,000
meeting these needs talk about best

00:05:49,720 --> 00:05:54,300
practices for open source security talk

00:05:52,000 --> 00:05:56,830
about things to think about when saying

00:05:54,300 --> 00:05:57,340
compliant and truly like almost a

00:05:56,830 --> 00:05:58,810
one-pager

00:05:57,340 --> 00:05:59,950
these are the tools I see these are the

00:05:58,810 --> 00:06:02,229
things that's interesting if you're

00:05:59,950 --> 00:06:04,180
standing up an open source workflow and

00:06:02,229 --> 00:06:06,400
open source process today these are

00:06:04,180 --> 00:06:10,419
things that I will give you a shortcut

00:06:06,400 --> 00:06:12,190
and suggest that you look at this is

00:06:10,419 --> 00:06:13,720
just a slide I threw in but the reality

00:06:12,190 --> 00:06:15,940
here right is we know that software is

00:06:13,720 --> 00:06:18,400
important and fencer and FinTech like

00:06:15,940 --> 00:06:20,340
never before an open source is the exact

00:06:18,400 --> 00:06:22,570
same right we look no further than

00:06:20,340 --> 00:06:24,910
JPMorgan open sourcing perspective

00:06:22,570 --> 00:06:26,320
yesterday the amount of contributions in

00:06:24,910 --> 00:06:28,570
collaboration and work that had been

00:06:26,320 --> 00:06:31,120
into that just as a private project or a

00:06:28,570 --> 00:06:33,550
public project within JPMorgan for the

00:06:31,120 --> 00:06:36,610
last couple years that this is really

00:06:33,550 --> 00:06:38,470
changing how organizations go getting

00:06:36,610 --> 00:06:39,999
more people into open source I was just

00:06:38,470 --> 00:06:44,829
having a conversation in the hallway

00:06:39,999 --> 00:06:46,869
with Toby and sort of the advantages you

00:06:44,829 --> 00:06:48,909
get out of using open source consuming

00:06:46,869 --> 00:06:50,499
open source and what it means for

00:06:48,909 --> 00:06:52,779
businesses who aren't you know this

00:06:50,499 --> 00:06:54,429
isn't a good businesses use open source

00:06:52,779 --> 00:06:56,469
and other businesses don't

00:06:54,429 --> 00:07:00,369
this is businesses who won't be around

00:06:56,469 --> 00:07:01,809
in ten years don't use open source and

00:07:00,369 --> 00:07:03,969
just like we would never say you can't

00:07:01,809 --> 00:07:05,110
use software and technology today we're

00:07:03,969 --> 00:07:06,849
quickly getting to the point we're

00:07:05,110 --> 00:07:11,829
saying if you don't and can't use open

00:07:06,849 --> 00:07:13,839
source you will not survive so I am NOT

00:07:11,829 --> 00:07:15,459
you know in five years I expect we'll

00:07:13,839 --> 00:07:18,309
see quotes like this talking about open

00:07:15,459 --> 00:07:20,860
source the same way let's talk about

00:07:18,309 --> 00:07:23,259
workflows right the open source work for

00:07:20,860 --> 00:07:25,599
we all want is just you code in the open

00:07:23,259 --> 00:07:28,929
there's no workflow it's just you do

00:07:25,599 --> 00:07:33,819
open source in the open right but that's

00:07:28,929 --> 00:07:35,739
not always the happy state we see a lot

00:07:33,819 --> 00:07:36,879
of banks who are like get that open

00:07:35,739 --> 00:07:39,039
source things scary

00:07:36,879 --> 00:07:40,719
so you should do it on your own time or

00:07:39,039 --> 00:07:43,239
will look the other direction because

00:07:40,719 --> 00:07:44,679
legal and compliance says we don't do

00:07:43,239 --> 00:07:46,989
open source we don't code in the open

00:07:44,679 --> 00:07:48,699
and we're just gonna ignore the fact

00:07:46,989 --> 00:07:50,800
that two thirds of our binaries come

00:07:48,699 --> 00:07:52,149
from open source projects and two-thirds

00:07:50,800 --> 00:07:54,699
of our code actually came right off of

00:07:52,149 --> 00:07:57,279
Stack Overflow let's ignore that fact

00:07:54,699 --> 00:07:59,229
and if there are upstream changes from

00:07:57,279 --> 00:08:02,860
this library we'd happily take them in

00:07:59,229 --> 00:08:07,449
wink-wink nudge-nudge but you're not

00:08:02,860 --> 00:08:09,459
doing it on behalf of us right from a

00:08:07,449 --> 00:08:12,039
show of hands anyone here work in an

00:08:09,459 --> 00:08:15,159
organization that has this strategy

00:08:12,039 --> 00:08:19,389
today yeah it's it's yeah it's real it's

00:08:15,159 --> 00:08:22,059
the thing there's we see a lot more this

00:08:19,389 --> 00:08:23,739
like okay well let's we'll kind of

00:08:22,059 --> 00:08:25,899
understand open source and we'll play in

00:08:23,739 --> 00:08:28,329
that world but we're gonna put a process

00:08:25,899 --> 00:08:30,009
in place you know one of the interesting

00:08:28,329 --> 00:08:31,419
things working with a non bank Adobe

00:08:30,009 --> 00:08:34,120
talking to them over the past couple

00:08:31,419 --> 00:08:36,219
months they had a open source ingest and

00:08:34,120 --> 00:08:40,120
published process that was more or less

00:08:36,219 --> 00:08:42,009
a prevalent of 60 steps 60 questions 60

00:08:40,120 --> 00:08:43,479
approvals whatever it was there was a

00:08:42,009 --> 00:08:46,180
lot of things that had to happen to get

00:08:43,479 --> 00:08:47,860
open source and an open source out they

00:08:46,180 --> 00:08:50,230
luckily been able to streamline that to

00:08:47,860 --> 00:08:52,160
13 and if you're using something that's

00:08:50,230 --> 00:08:54,050
already been approved

00:08:52,160 --> 00:08:56,180
whitelisted after question one because

00:08:54,050 --> 00:08:58,579
you say I want to work on battle or a

00:08:56,180 --> 00:09:00,980
patchy tomcat or whatever it is they say

00:08:58,579 --> 00:09:04,250
great we've already looked at this

00:09:00,980 --> 00:09:05,959
licenses good compliance is good go have

00:09:04,250 --> 00:09:07,639
at it no by the way here's the other ten

00:09:05,959 --> 00:09:08,750
engineers at Adobe who are already

00:09:07,639 --> 00:09:11,410
working on this

00:09:08,750 --> 00:09:14,089
maybe you should go contact them too so

00:09:11,410 --> 00:09:16,310
this is kind of more what we see how

00:09:14,089 --> 00:09:17,990
many people in the room work at an

00:09:16,310 --> 00:09:19,790
organization so we have a process for

00:09:17,990 --> 00:09:21,620
both bringing in open-source as well as

00:09:19,790 --> 00:09:26,689
publishing out open source contributions

00:09:21,620 --> 00:09:29,870
or projects okay what if we just put a

00:09:26,689 --> 00:09:32,329
proxy in between all of it so maybe not

00:09:29,870 --> 00:09:34,730
use a forum maybe not use a process or

00:09:32,329 --> 00:09:36,769
maybe use a process in addition to

00:09:34,730 --> 00:09:38,600
service right because or networks locked

00:09:36,769 --> 00:09:40,819
down and we have firewalls and things

00:09:38,600 --> 00:09:42,920
and that's not gonna let stuff go out

00:09:40,819 --> 00:09:44,959
but we can create a trusted host a

00:09:42,920 --> 00:09:47,170
trusted gateway that all of this can go

00:09:44,959 --> 00:09:49,129
out through right so we're adding

00:09:47,170 --> 00:09:50,959
starting to add a little bit of

00:09:49,129 --> 00:09:52,610
technology into this process right it's

00:09:50,959 --> 00:09:53,930
not just paper forms and pushing things

00:09:52,610 --> 00:09:57,620
and waiting for approvals we're adding a

00:09:53,930 --> 00:10:02,120
little bit of technology here anyone in

00:09:57,620 --> 00:10:03,589
the room and a proxied fashion anyone

00:10:02,120 --> 00:10:05,990
coming to the keynote tomorrow to hear

00:10:03,589 --> 00:10:08,589
about the proxy fashion yeah you'll hear

00:10:05,990 --> 00:10:08,589
about this tomorrow

00:10:15,850 --> 00:10:21,980
so you're somewhat arm's distance the

00:10:19,790 --> 00:10:23,509
changes going out yeah so maybe a

00:10:21,980 --> 00:10:24,800
non-technical proxy I said this is

00:10:23,509 --> 00:10:30,230
getting a little more technical or maybe

00:10:24,800 --> 00:10:32,329
it's getting not more technical this is

00:10:30,230 --> 00:10:35,180
what I'm starting to see some firms get

00:10:32,329 --> 00:10:37,089
to which is nice right maybe we let you

00:10:35,180 --> 00:10:39,680
bring in all the open source you need

00:10:37,089 --> 00:10:40,819
because we realize you need it to do

00:10:39,680 --> 00:10:42,709
your day-to-day jobs

00:10:40,819 --> 00:10:44,389
now when that code gets into production

00:10:42,709 --> 00:10:46,309
we're gonna have a lot of checks and

00:10:44,389 --> 00:10:48,230
balances on it if you want to publish

00:10:46,309 --> 00:10:49,759
code out to the public but of course we

00:10:48,230 --> 00:10:51,709
need a lot of checks and balances on it

00:10:49,759 --> 00:10:53,300
but let's start to streamline the

00:10:51,709 --> 00:10:55,639
process of you bringing that code in

00:10:53,300 --> 00:11:02,089
anyone working in an environment like

00:10:55,639 --> 00:11:03,949
this no ok and finally this is where I

00:11:02,089 --> 00:11:06,120
really see us going right this is maybe

00:11:03,949 --> 00:11:08,190
a combination of the proxy

00:11:06,120 --> 00:11:10,230
making it more technical I have an exact

00:11:08,190 --> 00:11:12,330
I have a wall there firewall there but

00:11:10,230 --> 00:11:14,670
really it's what can we automate right

00:11:12,330 --> 00:11:16,140
if we're legal for compliance says

00:11:14,670 --> 00:11:17,960
there's thirteen steps that have to be

00:11:16,140 --> 00:11:20,279
satisfied to get this code out the door

00:11:17,960 --> 00:11:22,620
why can't we just automate them right

00:11:20,279 --> 00:11:24,270
you have to have a firm valid license

00:11:22,620 --> 00:11:25,470
well we can read the license in your

00:11:24,270 --> 00:11:27,779
repository and understand if you're

00:11:25,470 --> 00:11:30,180
valid right you have to have technical

00:11:27,779 --> 00:11:32,700
manager approval great let's look to see

00:11:30,180 --> 00:11:34,470
if your technical manager has signed off

00:11:32,700 --> 00:11:34,890
on the project they have a contribution

00:11:34,470 --> 00:11:37,050
to it

00:11:34,890 --> 00:11:38,790
the pour request or whatever your format

00:11:37,050 --> 00:11:41,220
is if you're using other tools that's

00:11:38,790 --> 00:11:43,080
taking this code out the door has an

00:11:41,220 --> 00:11:45,630
actual check from that manager

00:11:43,080 --> 00:11:47,070
themselves right I think this is where

00:11:45,630 --> 00:11:48,510
we're going into at github we're sort of

00:11:47,070 --> 00:11:51,750
working on things like this this isn't

00:11:48,510 --> 00:11:53,910
meant to be a github catch but like this

00:11:51,750 --> 00:11:55,650
is sort of where we're thinking we want

00:11:53,910 --> 00:11:57,120
to sort of build that firewall build

00:11:55,650 --> 00:11:59,490
that process so that we can insert

00:11:57,120 --> 00:12:01,470
whatever process your firms require but

00:11:59,490 --> 00:12:03,480
if for code coming in in code going out

00:12:01,470 --> 00:12:05,250
so we can streamline and provide

00:12:03,480 --> 00:12:07,529
technical solutions for as much as us as

00:12:05,250 --> 00:12:09,180
we can sometimes there's not going to be

00:12:07,529 --> 00:12:11,339
a solution get our goal is not to block

00:12:09,180 --> 00:12:13,680
you from bringing in code or pushing out

00:12:11,339 --> 00:12:15,300
code but maybe what we can do is audit

00:12:13,680 --> 00:12:17,850
the heck out of it make it really

00:12:15,300 --> 00:12:20,339
transparent who did what when where why

00:12:17,850 --> 00:12:22,410
and how because of the end of the day

00:12:20,339 --> 00:12:24,089
we're never getting to zero risk even

00:12:22,410 --> 00:12:26,310
you had everyone in the firm all the way

00:12:24,089 --> 00:12:30,450
up to the CEO approved this code going

00:12:26,310 --> 00:12:33,000
out you missed a comment buried in some

00:12:30,450 --> 00:12:36,480
byte code of some library you included

00:12:33,000 --> 00:12:38,279
and some entrepreneur on the web is

00:12:36,480 --> 00:12:42,240
going to decompile that byte code and

00:12:38,279 --> 00:12:45,570
they're gonna find a comment from UBS

00:12:42,240 --> 00:12:48,060
that says JPMorgan stinks right or

00:12:45,570 --> 00:12:50,550
whatever we're never going to get to a

00:12:48,060 --> 00:12:52,350
zero risk environment right but we can

00:12:50,550 --> 00:12:53,760
get to an environment where we manage

00:12:52,350 --> 00:12:56,250
and have access to the risk that we're

00:12:53,760 --> 00:12:57,839
accepting right so this is really what

00:12:56,250 --> 00:12:59,190
I'm hoping to get to and what I'm

00:12:57,839 --> 00:13:01,410
working internally with github and our

00:12:59,190 --> 00:13:04,410
product people to help go it helped get

00:13:01,410 --> 00:13:05,850
to my goal was sort of these slides is

00:13:04,410 --> 00:13:08,430
hopefully if you're in one of those

00:13:05,850 --> 00:13:10,020
first few steps right you're doing open

00:13:08,430 --> 00:13:12,270
source on your own time or you have a

00:13:10,020 --> 00:13:14,880
very heavy process there are ways that

00:13:12,270 --> 00:13:16,660
we can prove you down the road without

00:13:14,880 --> 00:13:19,509
getting to code

00:13:16,660 --> 00:13:21,579
the open you know a lot of another

00:13:19,509 --> 00:13:23,949
conversation having today was inner

00:13:21,579 --> 00:13:27,069
source versus open source right and it

00:13:23,949 --> 00:13:30,009
is inner source a step on the road to

00:13:27,069 --> 00:13:31,660
open source or is a inner source a

00:13:30,009 --> 00:13:33,970
bastardized version of open source

00:13:31,660 --> 00:13:35,230
that's holding us back right at the end

00:13:33,970 --> 00:13:38,199
of the day this is where we want to get

00:13:35,230 --> 00:13:40,389
to but there may be reasons that we have

00:13:38,199 --> 00:13:42,129
to go to some of these intermediary

00:13:40,389 --> 00:13:44,410
steps to get there maybe it's open

00:13:42,129 --> 00:13:46,540
source maybe it's just more compliant

00:13:44,410 --> 00:13:48,519
open source but hopefully I'm happy to

00:13:46,540 --> 00:13:50,110
talk more about this later I'm sure any

00:13:48,519 --> 00:13:51,819
of the speakers you know have who have

00:13:50,110 --> 00:13:54,310
experience with this sort of stuff but

00:13:51,819 --> 00:13:57,610
really want to help people get to coding

00:13:54,310 --> 00:13:59,829
the open and using open source faster um

00:13:57,610 --> 00:14:02,050
real quick I'll run through just cuz

00:13:59,829 --> 00:14:04,060
you'd be surprised as much as everyone I

00:14:02,050 --> 00:14:04,660
run to is I've had to get up account for

00:14:04,060 --> 00:14:07,540
eight years

00:14:04,660 --> 00:14:12,040
I'm a get up expert great how are you

00:14:07,540 --> 00:14:14,649
using code owners well I let's code

00:14:12,040 --> 00:14:16,240
owners again okay great so just want to

00:14:14,649 --> 00:14:17,829
run through real quick some of the

00:14:16,240 --> 00:14:19,319
things that we use on github that I tend

00:14:17,829 --> 00:14:22,769
to suggest to solve some of these

00:14:19,319 --> 00:14:25,630
transparency compliance in technology

00:14:22,769 --> 00:14:27,910
answers first is vulnerability scanning

00:14:25,630 --> 00:14:30,279
right turned on by default for all

00:14:27,910 --> 00:14:31,480
public repositories on github comm so

00:14:30,279 --> 00:14:34,209
you can turn it on for your private

00:14:31,480 --> 00:14:35,709
repositories as well this is a check box

00:14:34,209 --> 00:14:37,389
you check because you're giving it up

00:14:35,709 --> 00:14:39,730
the ability to read the files in your

00:14:37,389 --> 00:14:41,680
private repository we don't do that

00:14:39,730 --> 00:14:43,209
natively so if we want to look through

00:14:41,680 --> 00:14:45,519
your manifest files through your pom

00:14:43,209 --> 00:14:47,709
xml's and your package JSON and your

00:14:45,519 --> 00:14:50,259
ruby gems we're we're asking explicit

00:14:47,709 --> 00:14:52,930
permission to do it okay and what we're

00:14:50,259 --> 00:14:54,819
doing when looking at it is we were able

00:14:52,930 --> 00:14:56,410
to raise alerts to you right this is our

00:14:54,819 --> 00:14:58,449
goal of shifting security to the left

00:14:56,410 --> 00:15:00,670
and all that sort of great stuff right

00:14:58,449 --> 00:15:02,860
now we're pulling data out of the NVD so

00:15:00,670 --> 00:15:04,209
a lot of the same sources that you get a

00:15:02,860 --> 00:15:06,880
lot of the same info you get from white

00:15:04,209 --> 00:15:08,889
source and sneak and black duck in these

00:15:06,880 --> 00:15:11,050
places the other thing that we're doing

00:15:08,889 --> 00:15:13,600
is we're minding our own data right so

00:15:11,050 --> 00:15:15,430
we as we have pulled in these alerts

00:15:13,600 --> 00:15:17,470
from the NVD and seeing users make

00:15:15,430 --> 00:15:19,569
changes and fix their security problems

00:15:17,470 --> 00:15:23,410
over five million in the in the last

00:15:19,569 --> 00:15:25,059
year just on open source projects we've

00:15:23,410 --> 00:15:27,160
also noticed where we've seen similar

00:15:25,059 --> 00:15:28,540
changes and similar fixes and similar

00:15:27,160 --> 00:15:29,139
commit messages and similar pull

00:15:28,540 --> 00:15:31,869
requests

00:15:29,139 --> 00:15:33,579
to data that wasn't in the NBD right so

00:15:31,869 --> 00:15:36,699
we're also servicing within our alerts

00:15:33,579 --> 00:15:38,290
sort of github source data and we're

00:15:36,699 --> 00:15:40,029
working with partners you know getting

00:15:38,290 --> 00:15:42,609
there with like hacker one and in other

00:15:40,029 --> 00:15:44,709
security working groups for them to add

00:15:42,609 --> 00:15:46,779
their data that may be the nvd has

00:15:44,709 --> 00:15:48,639
rejected in the past so we're trying to

00:15:46,779 --> 00:15:51,249
continue to make this a larger larger

00:15:48,639 --> 00:15:53,230
subset I have another slide on varner

00:15:51,249 --> 00:15:56,350
ability scanning a bit later so I'll

00:15:53,230 --> 00:15:58,269
talk more to it then protected branches

00:15:56,350 --> 00:15:59,739
if you're using the open source project

00:15:58,269 --> 00:16:01,239
you probably never cared right or

00:15:59,739 --> 00:16:03,399
committing or owning an open source

00:16:01,239 --> 00:16:06,100
project it's open commit bring your

00:16:03,399 --> 00:16:07,809
changes you know I do tend to point out

00:16:06,100 --> 00:16:09,819
you can do things like restrict who can

00:16:07,809 --> 00:16:12,129
merge in the master you can do things

00:16:09,819 --> 00:16:15,489
like block force pushes if someone tries

00:16:12,129 --> 00:16:17,410
to erase all your history you know you

00:16:15,489 --> 00:16:20,139
can add in required satis checks right

00:16:17,410 --> 00:16:22,059
again this probably seems basic but for

00:16:20,139 --> 00:16:24,730
there's so many people out there who

00:16:22,059 --> 00:16:26,499
missed some of this stuff right ci has

00:16:24,730 --> 00:16:27,910
to pass before he can merge the master

00:16:26,499 --> 00:16:30,339
or even what I see is talking about

00:16:27,910 --> 00:16:32,470
approvals here we add a step where it's

00:16:30,339 --> 00:16:35,079
not see itit's proving it we're using

00:16:32,470 --> 00:16:37,089
the Jenkins approval plug-in so that my

00:16:35,079 --> 00:16:39,339
technical lead goes in and clicks the

00:16:37,089 --> 00:16:43,360
button when they're ready to release it

00:16:39,339 --> 00:16:45,519
to production you can add in manual

00:16:43,360 --> 00:16:47,439
steps or external steps as these status

00:16:45,519 --> 00:16:49,839
checks to truly have a workflow or

00:16:47,439 --> 00:16:51,790
automated process that meets your actual

00:16:49,839 --> 00:16:53,319
paper process so this is sort of when I

00:16:51,790 --> 00:16:55,600
start talking to companies it's not just

00:16:53,319 --> 00:16:57,939
well we have CI and static code analysis

00:16:55,600 --> 00:17:00,339
and vulnerability scanning add a status

00:16:57,939 --> 00:17:02,709
check for your actual technical lead to

00:17:00,339 --> 00:17:04,149
say this is good to go add an actual

00:17:02,709 --> 00:17:07,089
step for your data center administrator

00:17:04,149 --> 00:17:08,889
who says yes the data center is open for

00:17:07,089 --> 00:17:11,439
deployments this Saturday between 9:00

00:17:08,889 --> 00:17:13,990
and noon right let them come in not an

00:17:11,439 --> 00:17:15,429
email not some other system but right

00:17:13,990 --> 00:17:18,519
where all of your code is where you can

00:17:15,429 --> 00:17:20,709
audit it have transparency to win where

00:17:18,519 --> 00:17:24,240
why and who as well as let it flow

00:17:20,709 --> 00:17:27,159
automatically um again I mentioned

00:17:24,240 --> 00:17:28,389
restrict access let anyone create all

00:17:27,159 --> 00:17:30,190
the branches they want to commit all

00:17:28,389 --> 00:17:32,230
they want to really protect who can

00:17:30,190 --> 00:17:34,870
merge the master especially as we've

00:17:32,230 --> 00:17:36,730
seen with recent issues with NPM you

00:17:34,870 --> 00:17:38,500
just need one person merging code

00:17:36,730 --> 00:17:41,110
changes in the master and that flowing

00:17:38,500 --> 00:17:42,220
down into the entire ecosystem to create

00:17:41,110 --> 00:17:44,830
real big problem

00:17:42,220 --> 00:17:46,660
really quickly right so really think

00:17:44,830 --> 00:17:49,390
about what sort of permissions and

00:17:46,660 --> 00:17:52,960
restrictions you put in oftentimes when

00:17:49,390 --> 00:17:55,810
I talk to higher level management

00:17:52,960 --> 00:17:57,100
open sources the wild wild west the

00:17:55,810 --> 00:18:01,020
Russians are going to come in tomorrow

00:17:57,100 --> 00:18:04,660
if I open source my code or the the

00:18:01,020 --> 00:18:07,030
Washington DC right so I'm from DC so I

00:18:04,660 --> 00:18:08,260
can be the bad guy here the NSA is gonna

00:18:07,030 --> 00:18:09,490
come and they're gonna put backdoors

00:18:08,260 --> 00:18:12,310
into my code and we're gonna bring it

00:18:09,490 --> 00:18:14,410
into our firm well that sounds bad but

00:18:12,310 --> 00:18:16,330
it doesn't have to you don't have to

00:18:14,410 --> 00:18:18,490
accept any code from outside people into

00:18:16,330 --> 00:18:20,440
your project just because it's open

00:18:18,490 --> 00:18:23,260
doesn't mean it has to be you have to

00:18:20,440 --> 00:18:24,550
lose control over it right so you know

00:18:23,260 --> 00:18:27,700
keep keep that in mind

00:18:24,550 --> 00:18:29,650
code owners as an example again it was

00:18:27,700 --> 00:18:31,630
based off of Chrome's owners concept

00:18:29,650 --> 00:18:33,550
where you can restrict certain files

00:18:31,630 --> 00:18:37,210
certain file types certain directories

00:18:33,550 --> 00:18:39,460
to require reviewers to look at this

00:18:37,210 --> 00:18:42,580
changes if your open source project has

00:18:39,460 --> 00:18:44,800
a JavaScript person and a C++ person for

00:18:42,580 --> 00:18:46,810
the backend and a react person will

00:18:44,800 --> 00:18:48,490
coders can help you simplify that all

00:18:46,810 --> 00:18:50,890
JavaScript gets reviewed by my

00:18:48,490 --> 00:18:52,780
JavaScript person all reactive views and

00:18:50,890 --> 00:18:55,600
controllers go to my react person and

00:18:52,780 --> 00:19:01,360
all back in C++ or C sharp those of my C

00:18:55,600 --> 00:19:03,250
C++ person and I don't have a thing here

00:19:01,360 --> 00:19:06,190
but required reviewers is also a thing

00:19:03,250 --> 00:19:07,810
make sure people external people have

00:19:06,190 --> 00:19:09,670
eyes on this pull request you can use

00:19:07,810 --> 00:19:11,560
code owners to suggest who that may be

00:19:09,670 --> 00:19:14,230
gettable also try to make suggestions

00:19:11,560 --> 00:19:16,030
for you the last the last person who

00:19:14,230 --> 00:19:17,590
edited this file is probably the best

00:19:16,030 --> 00:19:19,360
person to review it for you or maybe

00:19:17,590 --> 00:19:21,430
even less person to edit this line of

00:19:19,360 --> 00:19:23,590
the file is the best person to review

00:19:21,430 --> 00:19:25,900
your change of this line but use require

00:19:23,590 --> 00:19:29,380
reviewers in combination with code

00:19:25,900 --> 00:19:34,360
owners to to simplify that process clean

00:19:29,380 --> 00:19:36,250
up after yourself do you burn out your

00:19:34,360 --> 00:19:38,410
organization no longer uses this open

00:19:36,250 --> 00:19:41,290
source repository you have some options

00:19:38,410 --> 00:19:43,690
here right transfer ownership maybe

00:19:41,290 --> 00:19:45,280
there's a new organization foundation or

00:19:43,690 --> 00:19:50,080
even just lead developer who should take

00:19:45,280 --> 00:19:52,090
this over it's okay to give it up it's

00:19:50,080 --> 00:19:54,040
healthier for you it's healthier for the

00:19:52,090 --> 00:19:55,090
community because at the end of the day

00:19:54,040 --> 00:19:55,890
when someone does a problem with this

00:19:55,090 --> 00:19:57,420
project and it's

00:19:55,890 --> 00:19:59,340
sitting in the JB Jones junior names

00:19:57,420 --> 00:20:01,350
based on github who do you think they're

00:19:59,340 --> 00:20:03,720
going to email or ask questions to when

00:20:01,350 --> 00:20:05,310
they have a problem with it me I should

00:20:03,720 --> 00:20:06,750
just transfer it over to the people who

00:20:05,310 --> 00:20:09,780
are actually doing all the work on it or

00:20:06,750 --> 00:20:12,180
been most recently using it and let the

00:20:09,780 --> 00:20:15,870
community truly take ownership of it the

00:20:12,180 --> 00:20:18,150
other half of this is archive it you're

00:20:15,870 --> 00:20:21,570
not developing it anymore this was a

00:20:18,150 --> 00:20:24,630
really awesome API and render display to

00:20:21,570 --> 00:20:27,510
your Samsung smart fridge that you sent

00:20:24,630 --> 00:20:28,980
to the trash dump three years ago it's

00:20:27,510 --> 00:20:30,690
great that you built this code three

00:20:28,980 --> 00:20:32,970
years ago it's sitting on your github

00:20:30,690 --> 00:20:35,250
profile now acting like an open project

00:20:32,970 --> 00:20:37,230
is it only collecting vulnerabilities

00:20:35,250 --> 00:20:40,170
and sending a wrong signal to the

00:20:37,230 --> 00:20:42,030
community oak I've it codes still

00:20:40,170 --> 00:20:44,460
available anyone can still use it but

00:20:42,030 --> 00:20:49,440
you're sending the proper signal out to

00:20:44,460 --> 00:20:52,230
the world and finally a bonus I like to

00:20:49,440 --> 00:20:54,480
suggest you know GPG commit signing if

00:20:52,230 --> 00:20:56,570
you can it's not always the most user

00:20:54,480 --> 00:20:59,070
friendly it's not always the most fun

00:20:56,570 --> 00:21:00,480
but if you truly want to know that your

00:20:59,070 --> 00:21:02,760
users who are making changes to your

00:21:00,480 --> 00:21:04,380
project or who they say they are and not

00:21:02,760 --> 00:21:06,480
just someone massive riding but

00:21:04,380 --> 00:21:08,250
masquerading behind this name start

00:21:06,480 --> 00:21:10,500
looking at different ways you can prove

00:21:08,250 --> 00:21:12,060
identity on to what your codes doing

00:21:10,500 --> 00:21:14,760
right so this is an example you can turn

00:21:12,060 --> 00:21:16,950
on require signs commits and it won't

00:21:14,760 --> 00:21:18,660
let pull requests get merged and unless

00:21:16,950 --> 00:21:20,460
someone's signed all the commits on that

00:21:18,660 --> 00:21:22,350
pull request all right so you get a

00:21:20,460 --> 00:21:24,720
little bit more control again over who's

00:21:22,350 --> 00:21:26,340
making changes to your code or at least

00:21:24,720 --> 00:21:29,310
you think you know who's making changes

00:21:26,340 --> 00:21:41,340
to your code so that's sort of the most

00:21:29,310 --> 00:21:43,800
github II thing I have question yeah so

00:21:41,340 --> 00:21:45,510
there's I I thought about putting into

00:21:43,800 --> 00:21:47,790
factor authentication I don't have a

00:21:45,510 --> 00:21:48,900
slide at the end I'm just put out and it

00:21:47,790 --> 00:21:50,970
will be available in the next couple

00:21:48,900 --> 00:21:52,140
days so if anyone's interested I can

00:21:50,970 --> 00:21:54,420
send you a link to it

00:21:52,140 --> 00:21:56,280
I'm wrote a white paper about what

00:21:54,420 --> 00:21:57,570
github is doing and sort of these same

00:21:56,280 --> 00:21:59,400
sort of techniques a lot of this came

00:21:57,570 --> 00:22:01,680
directly out of the white paper what's

00:21:59,400 --> 00:22:03,180
in the white paper is talking about 2fa

00:22:01,680 --> 00:22:05,190
and other sort of account protection

00:22:03,180 --> 00:22:06,960
mechanisms because protecting yourself

00:22:05,190 --> 00:22:08,940
is the first step to protecting your

00:22:06,960 --> 00:22:09,900
open source the only as I didn't mention

00:22:08,940 --> 00:22:12,180
in here

00:22:09,900 --> 00:22:14,460
it gets a little tricky from an order to

00:22:12,180 --> 00:22:17,550
a repo perspective if you can require

00:22:14,460 --> 00:22:19,080
two fa if your JPMorgan Chase for

00:22:17,550 --> 00:22:21,180
example you can say everyone who

00:22:19,080 --> 00:22:23,970
contributes into this org can require

00:22:21,180 --> 00:22:25,710
two FA but is that a barrier entry for

00:22:23,970 --> 00:22:27,150
your community of someone who doesn't

00:22:25,710 --> 00:22:28,590
have two FA and maybe because they don't

00:22:27,150 --> 00:22:33,060
have cell phone service or they don't

00:22:28,590 --> 00:22:35,190
want to use an OTP OTP token so I only

00:22:33,060 --> 00:22:39,480
reason I don't suggest it is in much

00:22:35,190 --> 00:22:41,400
like sine commits it's kind of it adds

00:22:39,480 --> 00:22:47,180
that layer friction which may or may not

00:22:41,400 --> 00:22:50,070
be appropriate for your community yes Oh

00:22:47,180 --> 00:22:56,660
people should turn on two if they get

00:22:50,070 --> 00:23:01,710
general account hygiene absolutely yes

00:22:56,660 --> 00:23:03,270
yes yep and so there's also reports you

00:23:01,710 --> 00:23:04,890
can run within your organization to say

00:23:03,270 --> 00:23:07,500
like okay do these people have to if

00:23:04,890 --> 00:23:09,120
they turned off we let you enforce it at

00:23:07,500 --> 00:23:10,980
the organizational level but not at the

00:23:09,120 --> 00:23:12,450
retail level so we don't have an easy

00:23:10,980 --> 00:23:14,070
way to sort of instrument this and in

00:23:12,450 --> 00:23:15,450
the UI but we do give it to you in the

00:23:14,070 --> 00:23:17,720
API to get information that's a really

00:23:15,450 --> 00:23:17,720
good point

00:23:34,280 --> 00:23:40,230
yep yes so the question almost becomes

00:23:37,980 --> 00:23:42,330
is the proper medium a single

00:23:40,230 --> 00:23:44,940
organization or multiple organizations

00:23:42,330 --> 00:23:46,920
its quorum a big enough product and

00:23:44,940 --> 00:23:50,010
brand that it should be an organization

00:23:46,920 --> 00:23:52,500
itself or should it fall under the

00:23:50,010 --> 00:23:55,830
existing you know organizations from

00:23:52,500 --> 00:23:58,050
that Bank that's just as much of a

00:23:55,830 --> 00:24:00,150
branding and marketing and compliance

00:23:58,050 --> 00:24:01,680
question as well as a security question

00:24:00,150 --> 00:24:03,060
again I mentioned - if a is something

00:24:01,680 --> 00:24:05,340
you can enforce at the organization

00:24:03,060 --> 00:24:07,560
level maybe quorum wants to enforce that

00:24:05,340 --> 00:24:09,270
but the rest of the projects don't that

00:24:07,560 --> 00:24:12,300
may be a good reason to split off into

00:24:09,270 --> 00:24:15,090
orgs there's a whole governance

00:24:12,300 --> 00:24:16,740
discussion I could have on when you

00:24:15,090 --> 00:24:18,840
should have one org and when you should

00:24:16,740 --> 00:24:20,760
have 50 orgs but that's actually a

00:24:18,840 --> 00:24:21,680
really good point to bring out but in

00:24:20,760 --> 00:24:23,300
general

00:24:21,680 --> 00:24:25,690
organization if you do nothing more a

00:24:23,300 --> 00:24:32,210
single organization for your big

00:24:25,690 --> 00:24:34,130
organization is the best way to go again

00:24:32,210 --> 00:24:36,020
talking about open source security and

00:24:34,130 --> 00:24:38,060
compliance best practices this should

00:24:36,020 --> 00:24:39,800
hopefully be old hat for everyone in the

00:24:38,060 --> 00:24:40,970
room but I want you to remember whenever

00:24:39,800 --> 00:24:43,130
you're thinking about open source

00:24:40,970 --> 00:24:44,630
advocating for open source you're

00:24:43,130 --> 00:24:46,010
thinking and talking about all of these

00:24:44,630 --> 00:24:47,810
things right because it helps to paint

00:24:46,010 --> 00:24:50,210
the big picture just like restricting

00:24:47,810 --> 00:24:52,100
merges paints the picture that no not

00:24:50,210 --> 00:24:54,080
any Joe Blow off the street can make

00:24:52,100 --> 00:24:55,940
changes in my repo this helps you say

00:24:54,080 --> 00:24:58,280
like well no but our open source process

00:24:55,940 --> 00:25:00,280
actually has security and compliance

00:24:58,280 --> 00:25:02,950
built-in right

00:25:00,280 --> 00:25:05,900
you want to use dependency management

00:25:02,950 --> 00:25:08,870
use tools that can help this for you

00:25:05,900 --> 00:25:11,120
right green keeper dependable you know

00:25:08,870 --> 00:25:12,950
they go on but these tools can actually

00:25:11,120 --> 00:25:14,090
look in your manifest nightly daily

00:25:12,950 --> 00:25:16,090
whenever a new thing gets released and

00:25:14,090 --> 00:25:19,310
say hey there's a new version of this

00:25:16,090 --> 00:25:21,530
library you can set it so it updates it

00:25:19,310 --> 00:25:23,510
automatically for you or opens app or

00:25:21,530 --> 00:25:25,490
request that says go ahead and accept

00:25:23,510 --> 00:25:27,800
this and go on about your business if

00:25:25,490 --> 00:25:29,810
you want a little bit more control I've

00:25:27,800 --> 00:25:31,760
seen people who create their own scripts

00:25:29,810 --> 00:25:33,820
that sort of do this nightly so that way

00:25:31,760 --> 00:25:36,770
they can say well I only want to upgrade

00:25:33,820 --> 00:25:38,330
major versions of this but all security

00:25:36,770 --> 00:25:40,310
relevant versions of this and so on and

00:25:38,330 --> 00:25:42,680
so forth so they can sort of instrument

00:25:40,310 --> 00:25:44,420
this this themselves but really think

00:25:42,680 --> 00:25:47,030
about dependency management not as a

00:25:44,420 --> 00:25:48,740
member of your team or as a person in

00:25:47,030 --> 00:25:51,650
your organization but it's something

00:25:48,740 --> 00:25:52,940
that tools and robots do for you because

00:25:51,650 --> 00:25:55,910
there's going to be a time where that

00:25:52,940 --> 00:25:59,180
member of your team is out sick or has

00:25:55,910 --> 00:26:00,800
left the program or in reality we don't

00:25:59,180 --> 00:26:02,540
really use this code a lot in the bank

00:26:00,800 --> 00:26:05,410
anymore so we'd really don't maintain it

00:26:02,540 --> 00:26:06,980
and it's now affected by a zero-day

00:26:05,410 --> 00:26:09,170
vulnerability that no one's paying

00:26:06,980 --> 00:26:10,700
attention to it's a lot easier to accept

00:26:09,170 --> 00:26:12,170
the pull request or to let that pull

00:26:10,700 --> 00:26:14,810
requests automatically go into your code

00:26:12,170 --> 00:26:16,490
base and stop being vulnerable than it

00:26:14,810 --> 00:26:18,410
is to be vulnerable for days weeks or

00:26:16,490 --> 00:26:20,450
months and eventually give your

00:26:18,410 --> 00:26:22,730
organization a black eye when someone

00:26:20,450 --> 00:26:25,430
complains I use perspective from

00:26:22,730 --> 00:26:28,190
JPMorgan and that's what introduced this

00:26:25,430 --> 00:26:29,960
dependency that got breached that's not

00:26:28,190 --> 00:26:32,330
the PR conversation you want to have

00:26:29,960 --> 00:26:33,740
rather have the conversation of hey I'm

00:26:32,330 --> 00:26:35,299
going to add an integration into my

00:26:33,740 --> 00:26:39,190
github repo I think

00:26:35,299 --> 00:26:41,899
gonna keep us safer that okay good

00:26:39,190 --> 00:26:42,649
container and image scanning I deal a

00:26:41,899 --> 00:26:44,899
lot with

00:26:42,649 --> 00:26:46,970
openshift in the kubernetes world and

00:26:44,899 --> 00:26:48,619
this seems to be when people talk about

00:26:46,970 --> 00:26:50,059
security today this is what they talk

00:26:48,619 --> 00:26:52,159
about

00:26:50,059 --> 00:26:54,379
hopefully the UST slide show there's a

00:26:52,159 --> 00:26:55,850
lot more than this this but container

00:26:54,379 --> 00:26:57,470
and image scanning is definitely a thing

00:26:55,850 --> 00:26:59,389
right you want to make sure your

00:26:57,470 --> 00:27:01,600
upstream images you're using where

00:26:59,389 --> 00:27:04,399
you're getting your images from that the

00:27:01,600 --> 00:27:06,230
registries are all secure and all which

00:27:04,399 --> 00:27:08,299
you think they are there are tools out

00:27:06,230 --> 00:27:10,249
there that do it right but my key

00:27:08,299 --> 00:27:12,619
takeaway here is there's more to

00:27:10,249 --> 00:27:14,600
security than just container scanning so

00:27:12,619 --> 00:27:17,440
keep that holistic view when you're

00:27:14,600 --> 00:27:19,519
talking and building out your pipelines

00:27:17,440 --> 00:27:20,929
vulnerability data so I mentioned that

00:27:19,519 --> 00:27:23,600
github does vulnerability scanning

00:27:20,929 --> 00:27:26,659
itself both on get up calm and on github

00:27:23,600 --> 00:27:28,539
Enterprise we use nvd data as well as

00:27:26,659 --> 00:27:32,179
our own tools as well as our own data

00:27:28,539 --> 00:27:34,730
but our goal is not to be the best

00:27:32,179 --> 00:27:36,769
security company in the world just like

00:27:34,730 --> 00:27:39,289
I like the customers asked me like wool

00:27:36,769 --> 00:27:42,320
so is getup gonna be our security tool

00:27:39,289 --> 00:27:43,850
we use in the future no I hope not in

00:27:42,320 --> 00:27:45,889
reality just like we did with project

00:27:43,850 --> 00:27:48,139
boards two years ago where we realize

00:27:45,889 --> 00:27:50,869
that issues weren't really held modern

00:27:48,139 --> 00:27:52,879
agile teams tracked changes anymore

00:27:50,869 --> 00:27:54,289
they're using scrum boards are using

00:27:52,879 --> 00:27:56,359
Kanban they're using whatever they are

00:27:54,289 --> 00:27:59,389
we needed some basic project board

00:27:56,359 --> 00:28:01,399
capability so we built it and since then

00:27:59,389 --> 00:28:03,950
we build an automation to it and build a

00:28:01,399 --> 00:28:06,799
really rich API so that you can use more

00:28:03,950 --> 00:28:09,590
sophisticated tools like rally or waffle

00:28:06,799 --> 00:28:11,989
IO or Zen hub or JIRA or whatever it is

00:28:09,590 --> 00:28:14,239
to cover the features we don't we don't

00:28:11,989 --> 00:28:16,220
do agile scoring we don't do burn down

00:28:14,239 --> 00:28:17,960
charts we don't do any of this or stuff

00:28:16,220 --> 00:28:19,549
because we just want to provide the bare

00:28:17,960 --> 00:28:21,619
minimum functionality that an open

00:28:19,549 --> 00:28:23,659
source team or a new project can get off

00:28:21,619 --> 00:28:26,239
the ground running that's our take with

00:28:23,659 --> 00:28:28,059
security too right if you look at all of

00:28:26,239 --> 00:28:30,289
the vendors they all say well we have

00:28:28,059 --> 00:28:31,460
hundreds of thousands of vulnerabilities

00:28:30,289 --> 00:28:32,869
and we have different vulnerabilities

00:28:31,460 --> 00:28:35,509
and our competitors because of this

00:28:32,869 --> 00:28:37,940
reason we don't want to get into that

00:28:35,509 --> 00:28:39,950
arms race and try to be have the best

00:28:37,940 --> 00:28:41,960
threat intelligence honestly your firms

00:28:39,950 --> 00:28:45,019
likely have the best threat intelligence

00:28:41,960 --> 00:28:47,509
there is out there right you have teams

00:28:45,019 --> 00:28:49,110
of analysts scouring the internet

00:28:47,509 --> 00:28:51,330
scouring the dark

00:28:49,110 --> 00:28:53,040
scouring all of these sort of things to

00:28:51,330 --> 00:28:56,070
get the most up-to-date vulnerability

00:28:53,040 --> 00:28:57,720
information you can right we don't want

00:28:56,070 --> 00:29:00,420
to compete with you we want to provide

00:28:57,720 --> 00:29:02,100
an API that lets you take those tools

00:29:00,420 --> 00:29:03,750
and bring it into play and ship security

00:29:02,100 --> 00:29:06,120
left and all those great buzz words you

00:29:03,750 --> 00:29:07,980
hear so well github has these

00:29:06,120 --> 00:29:09,870
functionalities you know definitely

00:29:07,980 --> 00:29:11,970
think about bringing in other tools as

00:29:09,870 --> 00:29:13,920
necessary I talked to some banks who say

00:29:11,970 --> 00:29:16,200
well yeah I have all four of those tools

00:29:13,920 --> 00:29:17,670
plus another ten because at the end of

00:29:16,200 --> 00:29:19,320
the day even if it just brings in a

00:29:17,670 --> 00:29:20,460
vulnerability data that's like ten

00:29:19,320 --> 00:29:23,040
vulnerabilities that the other guys

00:29:20,460 --> 00:29:24,990
didn't catch if that stops me from being

00:29:23,040 --> 00:29:27,150
breached and losing a billion dollars a

00:29:24,990 --> 00:29:29,640
day it was worth spending two million

00:29:27,150 --> 00:29:32,429
dollars on a duplicate of tool because

00:29:29,640 --> 00:29:34,500
it saved me a billion on that day that I

00:29:32,429 --> 00:29:37,950
would have been breached right so don't

00:29:34,500 --> 00:29:40,740
don't hesitate to say get up your

00:29:37,950 --> 00:29:42,540
vulnerability data is good but we have

00:29:40,740 --> 00:29:44,040
bigger problems and you can help us with

00:29:42,540 --> 00:29:47,010
that's fine we're trying to build the

00:29:44,040 --> 00:29:48,990
API to help you with that build often

00:29:47,010 --> 00:29:50,970
one of the things I'm reminded about as

00:29:48,990 --> 00:29:53,250
we talk about build pipelines and all

00:29:50,970 --> 00:29:54,990
the build pipelines when I do my static

00:29:53,250 --> 00:29:57,059
code analysis and I find my dependency

00:29:54,990 --> 00:29:59,549
vulnerabilities that's great when you're

00:29:57,059 --> 00:30:01,410
building what happens when you stopped

00:29:59,549 --> 00:30:03,480
managing this progress process project

00:30:01,410 --> 00:30:05,429
or your team rolls off in the next

00:30:03,480 --> 00:30:07,950
sprint to the next tool and you don't

00:30:05,429 --> 00:30:11,190
build your code for two weeks or two

00:30:07,950 --> 00:30:12,840
months or two years all of that logic

00:30:11,190 --> 00:30:15,140
and security you've baked into your

00:30:12,840 --> 00:30:17,910
build pipeline is no longer running

00:30:15,140 --> 00:30:19,740
right maybe that's the case for using

00:30:17,910 --> 00:30:21,630
tools that scan your code regularly not

00:30:19,740 --> 00:30:24,090
part of the build pipeline but if you're

00:30:21,630 --> 00:30:26,070
not doing that at least kick off your

00:30:24,090 --> 00:30:27,240
build pipeline once a week or once a

00:30:26,070 --> 00:30:29,250
night or whatever even if you don't

00:30:27,240 --> 00:30:32,690
deploy it anywhere at least so it can

00:30:29,250 --> 00:30:32,690
raise these sort of issues for you

00:30:33,080 --> 00:30:39,210
static code analysis dynamic code

00:30:35,760 --> 00:30:41,370
analysis testing of your code all of

00:30:39,210 --> 00:30:42,720
those sort of things right definitely

00:30:41,370 --> 00:30:45,870
take advantage of all of those tools

00:30:42,720 --> 00:30:48,000
that you can I see a lot of sonarqube

00:30:45,870 --> 00:30:50,970
out in the world but continue to see

00:30:48,000 --> 00:30:52,500
more code acity coming into play that

00:30:50,970 --> 00:30:55,770
dynamic code analysis always gets a

00:30:52,500 --> 00:30:58,500
little bit trickier just because so many

00:30:55,770 --> 00:31:00,780
environments so many browsers so many

00:30:58,500 --> 00:31:02,310
runtimes to deal with

00:31:00,780 --> 00:31:03,600
definitely build up as much as you can

00:31:02,310 --> 00:31:06,150
because it gives you the assurance that

00:31:03,600 --> 00:31:07,470
what you're putting out and it's hitting

00:31:06,150 --> 00:31:12,410
your customers the way you think it's

00:31:07,470 --> 00:31:16,470
hitting your customers document and

00:31:12,410 --> 00:31:19,230
security and compliance policy yeah so

00:31:16,470 --> 00:31:23,030
part of this is just understanding what

00:31:19,230 --> 00:31:23,030
you're doing with your open source right

00:31:23,180 --> 00:31:32,160
we often talk about like well my firm

00:31:26,460 --> 00:31:34,800
allows Apache to and MIT and gplv2

00:31:32,160 --> 00:31:37,530
right great you've spent a lot of time

00:31:34,800 --> 00:31:38,700
thinking about your license policy have

00:31:37,530 --> 00:31:41,100
you thought about your vulnerability

00:31:38,700 --> 00:31:42,960
disclosure policy how do people report

00:31:41,100 --> 00:31:45,420
those to you do they open an issue in

00:31:42,960 --> 00:31:47,670
your public web tracker who triage is

00:31:45,420 --> 00:31:49,440
theirs if this is a project that you've

00:31:47,670 --> 00:31:51,210
sort of left out for their community to

00:31:49,440 --> 00:31:53,820
maintain it's still sitting within your

00:31:51,210 --> 00:31:54,780
organization do you have responsibility

00:31:53,820 --> 00:31:57,600
for fit at the end

00:31:54,780 --> 00:31:59,100
fixing zero-day vulnerabilities really

00:31:57,600 --> 00:32:00,780
start thinking about there's more than

00:31:59,100 --> 00:32:04,080
just license compliance when thinking

00:32:00,780 --> 00:32:06,060
about your or your open source

00:32:04,080 --> 00:32:08,400
I mean I'll touch on a little bit more

00:32:06,060 --> 00:32:10,350
of this going on the last thing I'll

00:32:08,400 --> 00:32:12,450
point out to other activity requirements

00:32:10,350 --> 00:32:14,040
on your dependency is do they have to be

00:32:12,450 --> 00:32:16,440
active at all yet I mentioned you can

00:32:14,040 --> 00:32:19,170
archive repositories with your policy on

00:32:16,440 --> 00:32:20,790
using archived open source as part of

00:32:19,170 --> 00:32:22,830
github sort of looking into the

00:32:20,790 --> 00:32:24,750
vulnerability and alerting space we

00:32:22,830 --> 00:32:27,210
found 90 days to sort of be a magical

00:32:24,750 --> 00:32:30,030
cutoff when we alerted projects that

00:32:27,210 --> 00:32:31,440
they had a vulnerability that had active

00:32:30,030 --> 00:32:34,170
commits in the last 90 days

00:32:31,440 --> 00:32:35,910
they were like 10 times more likely to

00:32:34,170 --> 00:32:39,930
resolve that vulnerability than if they

00:32:35,910 --> 00:32:42,200
didn't or do you as an open source

00:32:39,930 --> 00:32:44,970
project will you let yourself depend on

00:32:42,200 --> 00:32:48,510
stale or out-of-date open source and

00:32:44,970 --> 00:32:50,310
assume the risks do you even realise the

00:32:48,510 --> 00:32:52,140
risks of an open source project that

00:32:50,310 --> 00:32:54,120
hasn't had commit in six months is a

00:32:52,140 --> 00:32:58,320
different risk threshold than one that

00:32:54,120 --> 00:33:00,750
hasn't had a commit in six days have you

00:32:58,320 --> 00:33:03,360
thought about this hopefully you have

00:33:00,750 --> 00:33:05,400
hopefully you will now right but this is

00:33:03,360 --> 00:33:07,410
all sort of what we can document what we

00:33:05,400 --> 00:33:08,580
can talk about to say like yeah we kind

00:33:07,410 --> 00:33:09,630
of know what we're doing with this open

00:33:08,580 --> 00:33:12,130
source thing and it's really not that

00:33:09,630 --> 00:33:15,760
scary and you

00:33:12,130 --> 00:33:18,800
Banke firm should let us do more of this

00:33:15,760 --> 00:33:20,060
so just a quick summary again tried to

00:33:18,800 --> 00:33:22,670
pull up a lot of the major vulnerability

00:33:20,060 --> 00:33:24,500
or tools security tools they just talked

00:33:22,670 --> 00:33:26,090
about these slides will all be available

00:33:24,500 --> 00:33:27,740
later but like if there was one takeaway

00:33:26,090 --> 00:33:29,240
that may help you build out your open

00:33:27,740 --> 00:33:31,220
source process hopefully it was

00:33:29,240 --> 00:33:31,690
consolidating a lot of this stuff in one

00:33:31,220 --> 00:33:35,030
place

00:33:31,690 --> 00:33:37,940
there's the DevOps industry is very

00:33:35,030 --> 00:33:39,140
popular right now there's 3,000 tools

00:33:37,940 --> 00:33:41,240
that I could have listed here that I

00:33:39,140 --> 00:33:43,670
didn't a lot of these tried to come from

00:33:41,240 --> 00:33:45,770
like real world experience I've seen

00:33:43,670 --> 00:33:47,900
with customers in this space open source

00:33:45,770 --> 00:33:49,520
users in this space I'd be super

00:33:47,900 --> 00:33:53,030
interested if there's a tool that you

00:33:49,520 --> 00:33:55,340
found to be head and shoulders above the

00:33:53,030 --> 00:33:57,470
rest that's not on this list I'd love to

00:33:55,340 --> 00:33:59,090
add it I love the love to add it to the

00:33:57,470 --> 00:34:00,860
slides before I distribute them to

00:33:59,090 --> 00:34:03,830
everyone afterwards so definitely feel

00:34:00,860 --> 00:34:05,870
feel free to grab me later also a plug

00:34:03,830 --> 00:34:08,570
if you're looking for tools that sort of

00:34:05,870 --> 00:34:11,000
do this in a prescriptive way there is

00:34:08,570 --> 00:34:14,120
the open developer platform that finis

00:34:11,000 --> 00:34:17,060
provides that you see things like white

00:34:14,120 --> 00:34:19,190
source and OpenShift and Travis already

00:34:17,060 --> 00:34:22,220
included it's meant to be a prescriptive

00:34:19,190 --> 00:34:25,460
and configured in a secure way to help

00:34:22,220 --> 00:34:28,879
you do open source so just a quick plug

00:34:25,460 --> 00:34:30,080
for some of the stuff we're doing so

00:34:28,879 --> 00:34:32,120
recap right we talked about different

00:34:30,080 --> 00:34:33,770
workflows we talked about how you can

00:34:32,120 --> 00:34:35,450
use github the sort of impact some of

00:34:33,770 --> 00:34:37,220
these workflows and processes really

00:34:35,450 --> 00:34:39,950
what these processes are that you can

00:34:37,220 --> 00:34:42,590
use get up to impact as well as the

00:34:39,950 --> 00:34:44,360
tools themselves if I can leave you with

00:34:42,590 --> 00:34:47,149
a couple of things it's when I'm calling

00:34:44,360 --> 00:34:49,370
code thoughts right hopefully one of

00:34:47,149 --> 00:34:51,740
these is like oh I hadn't thought of

00:34:49,370 --> 00:34:53,600
that before and if one of these hits

00:34:51,740 --> 00:34:57,020
then I feel like I've done my job for

00:34:53,600 --> 00:34:59,300
the day right so of course the easy one

00:34:57,020 --> 00:35:00,950
is how we managing a community and this

00:34:59,300 --> 00:35:02,450
seems simple but I still talk to so many

00:35:00,950 --> 00:35:05,180
people so we're going to open source all

00:35:02,450 --> 00:35:07,820
of these projects great who's the

00:35:05,180 --> 00:35:10,520
community for them do they already exist

00:35:07,820 --> 00:35:12,890
today do they exist over there on that

00:35:10,520 --> 00:35:14,150
other project are you going to go to

00:35:12,890 --> 00:35:15,920
their other project and bring them to

00:35:14,150 --> 00:35:18,560
you should you just contribute to that

00:35:15,920 --> 00:35:21,560
other project instead what's your

00:35:18,560 --> 00:35:22,260
strategy here right well we were just

00:35:21,560 --> 00:35:24,420
going to

00:35:22,260 --> 00:35:26,210
opensource you just build it and they

00:35:24,420 --> 00:35:27,960
will come right well no not exactly

00:35:26,210 --> 00:35:31,050
right so what are you thinking about

00:35:27,960 --> 00:35:33,240
with your community again what happens

00:35:31,050 --> 00:35:34,620
when someone acts inappropriately what

00:35:33,240 --> 00:35:37,680
happens when you have an issue where

00:35:34,620 --> 00:35:39,390
outside contributors come and flame all

00:35:37,680 --> 00:35:42,330
your of your issues and say very

00:35:39,390 --> 00:35:44,790
inappropriate things and someone from

00:35:42,330 --> 00:35:48,870
the tech press who has an axe to grind

00:35:44,790 --> 00:35:52,650
it's like does insert company here have

00:35:48,870 --> 00:35:54,360
a insert thing problem because we've

00:35:52,650 --> 00:35:56,100
looked at their online presence as this

00:35:54,360 --> 00:35:58,290
is the sort of discussion they're having

00:35:56,100 --> 00:36:00,090
and you as a community manager are

00:35:58,290 --> 00:36:02,310
thinking I'm just trying to create

00:36:00,090 --> 00:36:04,530
reasonable discourse and give everyone a

00:36:02,310 --> 00:36:06,120
new platform to discuss while not

00:36:04,530 --> 00:36:08,130
acknowledging some of the negative ideas

00:36:06,120 --> 00:36:10,350
but is that how the outside world is

00:36:08,130 --> 00:36:12,570
perceiving it more importantly is that

00:36:10,350 --> 00:36:15,210
how your executive manager management is

00:36:12,570 --> 00:36:17,070
perceiving it I always suggest have a

00:36:15,210 --> 00:36:33,990
crisis communication plan in place

00:36:17,070 --> 00:36:35,430
before you need it well so you can mark

00:36:33,990 --> 00:36:37,110
it as spammy you can mark it as

00:36:35,430 --> 00:36:38,850
inappropriate one of the things we

00:36:37,110 --> 00:36:40,890
released on github.com just last week

00:36:38,850 --> 00:36:43,230
was the ability to delete issues for

00:36:40,890 --> 00:36:45,030
just this reason typically what you

00:36:43,230 --> 00:36:46,380
collapsed collapse comments and mark

00:36:45,030 --> 00:36:48,300
them as inappropriate so they were not

00:36:46,380 --> 00:36:50,670
visible to the general community now we

00:36:48,300 --> 00:36:52,410
actually let you delete issues however

00:36:50,670 --> 00:36:53,730
the reality is we've had a lot of open

00:36:52,410 --> 00:36:57,150
source projects ask us for that

00:36:53,730 --> 00:36:59,550
capability there's a handful who say but

00:36:57,150 --> 00:37:01,020
our goal is to be transparent and we

00:36:59,550 --> 00:37:03,090
don't want to delete issues because

00:37:01,020 --> 00:37:04,800
there's real-world discussion and

00:37:03,090 --> 00:37:06,480
real-world reality of we're now going to

00:37:04,800 --> 00:37:08,070
change our code of conduct because of

00:37:06,480 --> 00:37:09,420
this thing that happened but oh by the

00:37:08,070 --> 00:37:12,720
way you can no longer see the thing that

00:37:09,420 --> 00:37:14,640
happened right so there's definitely

00:37:12,720 --> 00:37:16,350
mixed thoughts and should you be able to

00:37:14,640 --> 00:37:18,870
delete should you as a project delete it

00:37:16,350 --> 00:37:21,260
which goes into the question of what's

00:37:18,870 --> 00:37:21,260
your strategy

00:37:28,250 --> 00:37:33,530
yes so outside users to your project

00:37:31,860 --> 00:37:36,050
won't see them at all

00:37:33,530 --> 00:37:37,220
admin will see them as mark just spam

00:37:36,050 --> 00:37:39,410
and they also have it so the

00:37:37,220 --> 00:37:40,670
transparency is still there yeah the

00:37:39,410 --> 00:37:43,730
next question becomes do you just want

00:37:40,670 --> 00:37:45,710
to delete the issue in some you know and

00:37:43,730 --> 00:37:47,800
so that's but there are many open source

00:37:45,710 --> 00:37:50,690
projects who have asked this so in my

00:37:47,800 --> 00:37:52,640
action to the crowd is have you thought

00:37:50,690 --> 00:37:55,160
about this what is your strategy for it

00:37:52,640 --> 00:37:57,140
and where is that line do you have a

00:37:55,160 --> 00:37:59,360
code of conduct how many times will

00:37:57,140 --> 00:38:00,640
someone cross that code of conduct

00:37:59,360 --> 00:38:03,020
before they get banned from your

00:38:00,640 --> 00:38:05,420
community what happens when they then

00:38:03,020 --> 00:38:07,460
commit back as a sock puppet or with via

00:38:05,420 --> 00:38:09,380
another account what do you do how do

00:38:07,460 --> 00:38:11,210
you identify them right these are all

00:38:09,380 --> 00:38:12,770
like the things to think about as you

00:38:11,210 --> 00:38:14,810
start going down the path open source

00:38:12,770 --> 00:38:17,750
it's all great when you as Toby

00:38:14,810 --> 00:38:19,430
mentioned earlier people at trivago say

00:38:17,750 --> 00:38:20,960
this is why they joined trivago because

00:38:19,430 --> 00:38:23,690
they do open source people at Facebook

00:38:20,960 --> 00:38:26,030
say open source is you know 75% of why

00:38:23,690 --> 00:38:29,200
they joined but you have to deal with

00:38:26,030 --> 00:38:31,340
this sort of stuff too in everything

00:38:29,200 --> 00:38:33,110
everything in the core infrastructure

00:38:31,340 --> 00:38:35,360
initiative dust practice program if you

00:38:33,110 --> 00:38:36,920
haven't looked at it we use it here at

00:38:35,360 --> 00:38:38,870
finis but it's used in a lot of Linux

00:38:36,920 --> 00:38:42,230
foundation projects and elsewhere it's

00:38:38,870 --> 00:38:45,770
really good same tips on how to write or

00:38:42,230 --> 00:38:48,260
manage a productive community everything

00:38:45,770 --> 00:38:50,060
from having a website an abrupt presence

00:38:48,260 --> 00:38:51,470
not just to get help repository or get

00:38:50,060 --> 00:38:53,990
lay-up repository or whatever it may be

00:38:51,470 --> 00:38:55,100
you know all the way down to what's your

00:38:53,990 --> 00:38:57,500
security vulnerability disclosure

00:38:55,100 --> 00:38:59,720
process how do you manage severity of

00:38:57,500 --> 00:39:01,460
those disclosures I'm sort of getting

00:38:59,720 --> 00:39:04,700
ahead of myself because the person to of

00:39:01,460 --> 00:39:06,260
this with more security right is who

00:39:04,700 --> 00:39:08,420
secures your project again is it your

00:39:06,260 --> 00:39:10,130
own internal security team or have you

00:39:08,420 --> 00:39:11,630
thrown this over the firewall now and us

00:39:10,130 --> 00:39:13,880
assume the community is going to help

00:39:11,630 --> 00:39:16,370
secure you when a zero-day vulnerability

00:39:13,880 --> 00:39:17,930
hits is does a community assume that

00:39:16,370 --> 00:39:19,700
your vulnerability team is helping you

00:39:17,930 --> 00:39:21,770
out here or do they know that they have

00:39:19,700 --> 00:39:22,910
responsibility to fix this how are you

00:39:21,770 --> 00:39:28,010
managing things like

00:39:22,910 --> 00:39:30,020
severity do you even added do you use

00:39:28,010 --> 00:39:31,850
external auditors you know you probably

00:39:30,020 --> 00:39:33,380
do for your own internal projects right

00:39:31,850 --> 00:39:34,400
you have multiple auditors come and look

00:39:33,380 --> 00:39:36,650
at your source code and look for

00:39:34,400 --> 00:39:38,750
security do you do the same for the open

00:39:36,650 --> 00:39:41,570
source that you published this is your

00:39:38,750 --> 00:39:43,460
most public interpret vision or version

00:39:41,570 --> 00:39:44,870
of what your code is shouldn't you go

00:39:43,460 --> 00:39:47,370
through at least the same checks you

00:39:44,870 --> 00:39:49,980
would do for internal code

00:39:47,370 --> 00:39:52,500
you have Incident Response wady a report

00:39:49,980 --> 00:39:55,680
do you report to the NPD you know what

00:39:52,500 --> 00:39:57,720
the stats show right that mitre itself

00:39:55,680 --> 00:40:00,390
in Red Hat are the two biggest reporters

00:39:57,720 --> 00:40:02,280
to the NBD does anyone else in this room

00:40:00,390 --> 00:40:03,900
report vulnerabilities up where would

00:40:02,280 --> 00:40:05,310
you report them if you did what is it to

00:40:03,900 --> 00:40:07,290
their mailing lists for that language

00:40:05,310 --> 00:40:10,560
think about sort of these problems

00:40:07,290 --> 00:40:12,570
before they become an issue in speaking

00:40:10,560 --> 00:40:14,220
of security release so the in boy proxy

00:40:12,570 --> 00:40:16,470
is again is another Linux Foundation

00:40:14,220 --> 00:40:18,510
program that did a lot of work in

00:40:16,470 --> 00:40:22,020
thinking through sort of their security

00:40:18,510 --> 00:40:27,780
we're response and responsibility it's a

00:40:22,020 --> 00:40:28,230
really good pattern to follow and that's

00:40:27,780 --> 00:40:31,020
it

00:40:28,230 --> 00:40:31,680
so you can find me on various methods on

00:40:31,020 --> 00:40:33,390
the Internet

00:40:31,680 --> 00:40:35,820
I have a repo I sort of manage open

00:40:33,390 --> 00:40:38,790
source stocks that talk about tooling

00:40:35,820 --> 00:40:40,050
process culture well basically all the

00:40:38,790 --> 00:40:41,850
things that I get when talking to

00:40:40,050 --> 00:40:45,090
customers and try to write down or give

00:40:41,850 --> 00:40:48,060
them an asset afterwards so I saw a lot

00:40:45,090 --> 00:40:50,220
of it there as well as the wikispaces

00:40:48,060 --> 00:40:51,510
here for the Fitness Foundation love to

00:40:50,220 --> 00:40:54,300
talk more about this through you whether

00:40:51,510 --> 00:40:57,570
through open source readiness or FDX and

00:40:54,300 --> 00:40:59,220
the in the DX program this is sort of

00:40:57,570 --> 00:41:00,350
what we do on a day to day basis so what

00:40:59,220 --> 00:41:02,700
happy to continue these conversations

00:41:00,350 --> 00:41:16,680
real quick now you gave me the one

00:41:02,700 --> 00:41:18,450
minute sign so I'm happy to continue to

00:41:16,680 --> 00:41:20,130
take questions as much as you need for

00:41:18,450 --> 00:41:21,390
people who want to you have people want

00:41:20,130 --> 00:41:23,100
to grab coffee before the next session

00:41:21,390 --> 00:41:24,240
please feel free to leave and I'll be

00:41:23,100 --> 00:41:49,530
around all day and happy to answer

00:41:24,240 --> 00:41:52,500
questions later as well so what I am so

00:41:49,530 --> 00:41:54,210
as being a good of employee and doing a

00:41:52,500 --> 00:41:56,250
lot with get up I'm actually building a

00:41:54,210 --> 00:41:57,540
get up integration that will use our

00:41:56,250 --> 00:41:59,580
dependency graph and a lot of the

00:41:57,540 --> 00:42:01,170
information we have so again turning on

00:41:59,580 --> 00:42:02,790
those features allows us

00:42:01,170 --> 00:42:04,799
to get information about the API as well

00:42:02,790 --> 00:42:06,569
that will provide some two scorecard

00:42:04,799 --> 00:42:08,940
health metrics for you about the

00:42:06,569 --> 00:42:10,650
dependencies in your project so to give

00:42:08,940 --> 00:42:13,799
you this it's not a vulnerability it's

00:42:10,650 --> 00:42:15,089
more just is this acceptable risk its

00:42:13,799 --> 00:42:16,950
morgan knowledge meant of the actual

00:42:15,089 --> 00:42:19,770
risk you are accepting whether you know

00:42:16,950 --> 00:42:21,390
it or whether you know it or not so I'm

00:42:19,770 --> 00:42:23,040
sort of working on ways to integrate

00:42:21,390 --> 00:42:24,869
that in with github better as well as

00:42:23,040 --> 00:42:26,520
other tools out there right source

00:42:24,869 --> 00:42:34,730
Jenkins and Travis and all the other

00:42:26,520 --> 00:42:37,260
tools you bet you use star it star it

00:42:34,730 --> 00:42:39,119
well thank you all hopefully this again

00:42:37,260 --> 00:42:41,520
this seemed very basic but hopefully

00:42:39,119 --> 00:42:44,040
everyone got something out of it

00:42:41,520 --> 00:42:46,500
and happy to continue talks and here or

00:42:44,040 --> 00:42:48,630
other venues thank you all

00:42:46,500 --> 00:42:52,079
[Applause]

00:42:48,630 --> 00:42:52,079

YouTube URL: https://www.youtube.com/watch?v=A5iogDaHbm4


