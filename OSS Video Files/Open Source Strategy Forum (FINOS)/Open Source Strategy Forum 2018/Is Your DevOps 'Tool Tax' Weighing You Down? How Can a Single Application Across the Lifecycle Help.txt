Title: Is Your DevOps 'Tool Tax' Weighing You Down? How Can a Single Application Across the Lifecycle Help
Publication date: 2019-03-14
Playlist: Open Source Strategy Forum 2018
Description: 
	Speaker: Brandon Jung, VP Alliances, GitLab
Presentation: Is Your DevOps 'Tool Tax' Weighing You Down? How Can a Single Application Across the Lifecycle Help

DevOps promises faster deployments, better quality code in production, reduced risk of a security breaches, and more! The number of tools used to cover all the stages across DevOps lifecycle is likely reaching in the 20’s. How much are your spending on these tools (open source or purchased) — both from a cost and time to implement? Not to mention, how much is it costing you to integrate them all? Have you thought about the users in your organization and their constant ‘switching’ between these tool and the time it takes them to learn and manage things day-to-day?

 
Whether or not you choose Open Source or open-core for these point DevOps tools, the burden is significant on your organization. Learn how your financial services peers are overcoming this DevOps tool tax to gain their competitive advantage in the market.
Captions: 
	00:00:00,000 --> 00:00:06,059
[Music]

00:00:09,380 --> 00:00:15,150
are you good okay great so I'll quickly

00:00:11,910 --> 00:00:17,330
jump in introductions real quickly my

00:00:15,150 --> 00:00:20,310
name is Brandon young I lead up

00:00:17,330 --> 00:00:22,769
partnerships alliances and pretty much

00:00:20,310 --> 00:00:24,960
anything external for a company called

00:00:22,769 --> 00:00:26,789
gitlab up to about three months ago I

00:00:24,960 --> 00:00:30,300
built out the ecosystem for Google cloud

00:00:26,789 --> 00:00:31,980
platform so an area that we have a lot

00:00:30,300 --> 00:00:33,600
of questions most of this one I wanted

00:00:31,980 --> 00:00:36,390
to go through is a lot of trends and

00:00:33,600 --> 00:00:37,920
things that we're seeing from some about

00:00:36,390 --> 00:00:39,059
how we there's a development so I think

00:00:37,920 --> 00:00:41,100
there's some patterns here around the

00:00:39,059 --> 00:00:42,719
open-source development model that we've

00:00:41,100 --> 00:00:44,579
sort of taken to an extreme so I think

00:00:42,719 --> 00:00:47,250
might be really interesting for people

00:00:44,579 --> 00:00:49,260
to have some context to how we go about

00:00:47,250 --> 00:00:51,270
doing that and then second off one it's

00:00:49,260 --> 00:00:53,730
been some time with some what we're

00:00:51,270 --> 00:00:54,750
seeing trends with customers and how

00:00:53,730 --> 00:00:56,940
open-source kind of comes together

00:00:54,750 --> 00:01:00,090
because we tend to talk about oftentimes

00:00:56,940 --> 00:01:01,559
open sources separate projects and while

00:01:00,090 --> 00:01:03,359
the individual projects are wonderful I

00:01:01,559 --> 00:01:05,489
was on the founding team for kubernetes

00:01:03,359 --> 00:01:06,750
like that's a great project but as you

00:01:05,489 --> 00:01:09,000
guys may have seen earlier

00:01:06,750 --> 00:01:11,490
now there's Prometheus and there's you

00:01:09,000 --> 00:01:12,810
know sto and there's a thousand other

00:01:11,490 --> 00:01:14,880
projects that fit to it and so sometimes

00:01:12,810 --> 00:01:16,920
while that's a fascinating exercise

00:01:14,880 --> 00:01:18,689
mental exercise the question is how does

00:01:16,920 --> 00:01:19,680
this really come together so one of the

00:01:18,689 --> 00:01:21,720
areas we're going to where chat about

00:01:19,680 --> 00:01:23,580
mostly is around the dev tool space a

00:01:21,720 --> 00:01:25,380
couple of things and I'll show you what

00:01:23,580 --> 00:01:26,759
we're doing just some good reference

00:01:25,380 --> 00:01:28,350
points here and you're welcome jump in

00:01:26,759 --> 00:01:30,630
this this actually comes from Joseph

00:01:28,350 --> 00:01:32,610
Joseph Jack's who's just founded an

00:01:30,630 --> 00:01:34,920
open-source investment company called

00:01:32,610 --> 00:01:36,990
OSS capital really good to follow but

00:01:34,920 --> 00:01:38,880
this is sort of the tiers not like this

00:01:36,990 --> 00:01:40,350
is a huge surprise this is generally how

00:01:38,880 --> 00:01:40,829
open source business models sort of

00:01:40,350 --> 00:01:42,720
evolved

00:01:40,829 --> 00:01:47,159
I think they should at the very top have

00:01:42,720 --> 00:01:48,899
like acquired by IBM you know by IBM or

00:01:47,159 --> 00:01:51,390
Microsoft or something right so

00:01:48,899 --> 00:01:52,710
eventually you fall off or you jump off

00:01:51,390 --> 00:01:55,170
the top I should say jump off the top

00:01:52,710 --> 00:01:57,450
not fall off the top into the arms of

00:01:55,170 --> 00:01:59,909
maybe of the company so an interesting

00:01:57,450 --> 00:02:03,689
comment there what I thought that I do

00:01:59,909 --> 00:02:06,509
is we take it get lab this sort of to an

00:02:03,689 --> 00:02:10,730
extreme and it's based predominately

00:02:06,509 --> 00:02:13,530
around comes pretty much out of our core

00:02:10,730 --> 00:02:15,450
values of collaboration transparency

00:02:13,530 --> 00:02:18,390
but you probably should be like that's

00:02:15,450 --> 00:02:20,610
nice how fascinating is is is that so we

00:02:18,390 --> 00:02:21,930
operate in a model for what it's worth

00:02:20,610 --> 00:02:24,450
and I'll explain what you're looking at

00:02:21,930 --> 00:02:26,430
here ours is we're the open core model

00:02:24,450 --> 00:02:27,990
so we completely open source get lab

00:02:26,430 --> 00:02:32,040
anyone in the world can use get lab

00:02:27,990 --> 00:02:34,920
there's a core model free completely MIT

00:02:32,040 --> 00:02:36,420
license so very open that we're out the

00:02:34,920 --> 00:02:37,620
other thing that was a company though we

00:02:36,420 --> 00:02:39,930
actually operate completely

00:02:37,620 --> 00:02:41,340
transparently and so what I would

00:02:39,930 --> 00:02:42,600
example on that one sums like ah it's

00:02:41,340 --> 00:02:45,690
transparent that's nice we have no

00:02:42,600 --> 00:02:47,730
company or we have no offices so this

00:02:45,690 --> 00:02:50,780
has forced us because we have no offices

00:02:47,730 --> 00:02:53,250
we have come employees in 43 countries

00:02:50,780 --> 00:02:55,110
and we believe in our core that everyone

00:02:53,250 --> 00:02:56,850
can contribute so that's one our core

00:02:55,110 --> 00:02:58,950
belief is that everyone can contribute

00:02:56,850 --> 00:03:00,630
well how do you fit everyone can

00:02:58,950 --> 00:03:03,450
contribute with a completely distributed

00:03:00,630 --> 00:03:06,780
model right what's very simple you must

00:03:03,450 --> 00:03:08,280
document everything right and so we

00:03:06,780 --> 00:03:09,269
actually document not only everything

00:03:08,280 --> 00:03:12,000
that we do and I'll give you a little

00:03:09,269 --> 00:03:14,069
some taste of what we do in the in the

00:03:12,000 --> 00:03:15,390
project itself but we actually document

00:03:14,069 --> 00:03:16,650
everything this is open source

00:03:15,390 --> 00:03:18,720
we have a whole bunch of open source

00:03:16,650 --> 00:03:19,920
companies that use this this is part of

00:03:18,720 --> 00:03:21,930
what's called a handbook it's now

00:03:19,920 --> 00:03:23,280
running at about a thousand pages and we

00:03:21,930 --> 00:03:25,620
document everything we do in the company

00:03:23,280 --> 00:03:27,390
from beginning band so this is my

00:03:25,620 --> 00:03:29,820
onboarding document so this is public

00:03:27,390 --> 00:03:31,320
everyone can see obviously links in here

00:03:29,820 --> 00:03:32,430
are there obviously some of their

00:03:31,320 --> 00:03:34,530
private so if you clicked on they

00:03:32,430 --> 00:03:40,019
wouldn't be there but literally this is

00:03:34,530 --> 00:03:43,380
an entire 256 paid or step step-by-step

00:03:40,019 --> 00:03:44,850
check process for onboarding and your

00:03:43,380 --> 00:03:47,340
training everything else you would need

00:03:44,850 --> 00:03:48,600
so we take this to extreme because it's

00:03:47,340 --> 00:03:50,400
really important that we believe that

00:03:48,600 --> 00:03:51,630
when you're disconnected from not

00:03:50,400 --> 00:03:54,359
sitting in the same office next to

00:03:51,630 --> 00:03:56,820
someone but it actually helps a lot from

00:03:54,359 --> 00:04:00,420
or it really forces a level of

00:03:56,820 --> 00:04:02,040
documentation and communication that has

00:04:00,420 --> 00:04:04,049
allowed us to move much faster as a

00:04:02,040 --> 00:04:06,269
company than anyone had thought possible

00:04:04,049 --> 00:04:08,070
so this is something that's really

00:04:06,269 --> 00:04:10,560
interesting it's an open source it's

00:04:08,070 --> 00:04:12,420
really open source business model as

00:04:10,560 --> 00:04:14,400
well so we have a bunch of other

00:04:12,420 --> 00:04:16,500
companies that both contribute to the

00:04:14,400 --> 00:04:18,329
entire way we run the business as well

00:04:16,500 --> 00:04:21,209
as the way they contribute and so some

00:04:18,329 --> 00:04:24,169
interesting stuff there the other area

00:04:21,209 --> 00:04:27,190
that we spend a bunch of time on is

00:04:24,169 --> 00:04:30,340
documentation let me take this back he

00:04:27,190 --> 00:04:32,130
we document everything we do in the

00:04:30,340 --> 00:04:35,830
entire process so if you there's a core

00:04:32,130 --> 00:04:37,240
business anyone can use but even if you

00:04:35,830 --> 00:04:39,670
are paying we have you know premium

00:04:37,240 --> 00:04:41,230
premium versions everyone in the world

00:04:39,670 --> 00:04:43,360
can see that so they know what code

00:04:41,230 --> 00:04:45,010
they're using they can contribute into

00:04:43,360 --> 00:04:46,750
it if they contribute into it and they

00:04:45,010 --> 00:04:48,550
want it in the core we move it in a

00:04:46,750 --> 00:04:51,580
course so everyone in the world can use

00:04:48,550 --> 00:04:53,440
that open-source world so our entire

00:04:51,580 --> 00:04:55,870
product roadmap and everything else it's

00:04:53,440 --> 00:04:58,480
out here for everyone to see so a little

00:04:55,870 --> 00:05:00,970
bit different aspect kind of a different

00:04:58,480 --> 00:05:04,750
take on the whole open source not just a

00:05:00,970 --> 00:05:05,440
business model but how we actually run

00:05:04,750 --> 00:05:08,080
the business

00:05:05,440 --> 00:05:10,860
so we go back into presentation mode

00:05:08,080 --> 00:05:13,900
here for a sec just so you can see it

00:05:10,860 --> 00:05:15,250
the areas though that we've seen in this

00:05:13,900 --> 00:05:16,690
so the question and sort of are

00:05:15,250 --> 00:05:18,730
highlighted and so what we'll get to but

00:05:16,690 --> 00:05:21,130
I want to set some context is in the

00:05:18,730 --> 00:05:22,990
world of tooling first off you know I

00:05:21,130 --> 00:05:24,670
think John here was joking about hey dev

00:05:22,990 --> 00:05:26,650
ops yeah everyone calls that different

00:05:24,670 --> 00:05:29,770
so I will actually go through what we

00:05:26,650 --> 00:05:31,030
define as a DevOps lifecycle but it's

00:05:29,770 --> 00:05:32,980
not so much a definition

00:05:31,030 --> 00:05:36,100
everyone can debate that there's plenty

00:05:32,980 --> 00:05:37,870
of ways of thinking of DevOps a lot of

00:05:36,100 --> 00:05:39,550
what we're seeing is the really big

00:05:37,870 --> 00:05:43,090
challenges we're seeing for companies is

00:05:39,550 --> 00:05:44,830
how do I adopt a thousand tools right

00:05:43,090 --> 00:05:46,360
how do I deal with the fact that every

00:05:44,830 --> 00:05:47,950
single developer that walks in has their

00:05:46,360 --> 00:05:50,169
own opinionated place that they want to

00:05:47,950 --> 00:05:51,850
start with a tool and how do I move

00:05:50,169 --> 00:05:54,750
quickly as a company to deploy to that

00:05:51,850 --> 00:05:56,620
so this is a pattern we're seeing and

00:05:54,750 --> 00:05:59,050
we're seeing a lot of our customers

00:05:56,620 --> 00:06:00,490
focus on a couple things first off they

00:05:59,050 --> 00:06:03,460
really want a shift left which means

00:06:00,490 --> 00:06:05,410
give more decision-making process to

00:06:03,460 --> 00:06:07,300
your developers this is not a new trend

00:06:05,410 --> 00:06:10,780
I think everyone is very familiar with

00:06:07,300 --> 00:06:11,950
this but this is a trend that exists we

00:06:10,780 --> 00:06:13,690
have a live broadcast you're welcome to

00:06:11,950 --> 00:06:15,790
watch Michael walk you through this from

00:06:13,690 --> 00:06:18,340
Charter Communications on how they

00:06:15,790 --> 00:06:20,020
thought through it but it's all about

00:06:18,340 --> 00:06:23,050
being able to move and deploy quickly

00:06:20,020 --> 00:06:25,150
and that's kind of the challenges that

00:06:23,050 --> 00:06:27,700
our scenes the other one they've seen is

00:06:25,150 --> 00:06:29,860
what we call a tool tax and it's not a

00:06:27,700 --> 00:06:31,330
tool tax there's a whole bunch of ways

00:06:29,860 --> 00:06:35,410
and we'll dig into what customers are

00:06:31,330 --> 00:06:38,800
saying tool tax means but the real issue

00:06:35,410 --> 00:06:40,110
is directors are having to deal with a

00:06:38,800 --> 00:06:41,490
tools that everyone

00:06:40,110 --> 00:06:44,670
brings in and especially if they start a

00:06:41,490 --> 00:06:47,070
new project okay if I let my own team go

00:06:44,670 --> 00:06:49,110
do whatever they want how do I end up

00:06:47,070 --> 00:06:50,190
carrying that weight once that project

00:06:49,110 --> 00:06:52,800
becomes something I have to support

00:06:50,190 --> 00:06:54,300
right we're spending a lot of time also

00:06:52,800 --> 00:06:56,370
like with the Linux Foundation even is

00:06:54,300 --> 00:06:57,930
dealing with us at its core as they take

00:06:56,370 --> 00:07:00,650
on more and more projects every project

00:06:57,930 --> 00:07:03,590
comes in with its opinionated toolset

00:07:00,650 --> 00:07:05,700
most of those continue to be open source

00:07:03,590 --> 00:07:07,770
but they do vary so there's a good

00:07:05,700 --> 00:07:09,930
number obviously in the get get space

00:07:07,770 --> 00:07:11,220
there's only one open source get option

00:07:09,930 --> 00:07:13,440
which is get lab the others are all

00:07:11,220 --> 00:07:16,020
closed or so a little bit different

00:07:13,440 --> 00:07:17,790
challenge there and then that just

00:07:16,020 --> 00:07:19,530
affects the speed so as you start going

00:07:17,790 --> 00:07:21,510
through a tool chain your tool chain

00:07:19,530 --> 00:07:24,660
kind of looks something and I'll

00:07:21,510 --> 00:07:25,980
actually go back to this as a sec tool

00:07:24,660 --> 00:07:28,170
chain everyone wants to actually get to

00:07:25,980 --> 00:07:29,640
this so we'll go fast this is sort of

00:07:28,170 --> 00:07:33,000
what you might look like as a tool chain

00:07:29,640 --> 00:07:34,440
today I would look kind of from left to

00:07:33,000 --> 00:07:35,910
right give you a sense of this everyone

00:07:34,440 --> 00:07:37,110
has their planning stage they're gonna

00:07:35,910 --> 00:07:39,300
have an area that they've got to do

00:07:37,110 --> 00:07:40,920
create and manage they've got to verify

00:07:39,300 --> 00:07:42,660
they've got a package distribution

00:07:40,920 --> 00:07:44,670
they're kind of a release space they're

00:07:42,660 --> 00:07:47,100
kind of a configuration monitoring

00:07:44,670 --> 00:07:49,260
securing this is just a small piece so I

00:07:47,100 --> 00:07:52,170
just sort of took a number of the core

00:07:49,260 --> 00:07:53,460
tool sets that people look at and this

00:07:52,170 --> 00:07:55,080
is what they're looking at the Aral is

00:07:53,460 --> 00:07:57,060
the important on the bottom part every

00:07:55,080 --> 00:08:00,390
one of these is integration point right

00:07:57,060 --> 00:08:02,790
and that tends to be the biggest

00:08:00,390 --> 00:08:04,170
challenge that they face is it's called

00:08:02,790 --> 00:08:06,960
an integral we call it the integration

00:08:04,170 --> 00:08:08,640
tax so this is the tax that everyone has

00:08:06,960 --> 00:08:11,820
to pay every time one of these tools

00:08:08,640 --> 00:08:13,350
changes and it's not just the

00:08:11,820 --> 00:08:16,320
integration between one tool another

00:08:13,350 --> 00:08:18,090
tool it's integration that that implies

00:08:16,320 --> 00:08:19,920
then to another tool so think of it this

00:08:18,090 --> 00:08:22,110
way if you have good data coming between

00:08:19,920 --> 00:08:23,910
two tools but that breaks you also lose

00:08:22,110 --> 00:08:26,070
all the data downstream or upstream from

00:08:23,910 --> 00:08:28,770
your DevOps lifecycle so you kind of

00:08:26,070 --> 00:08:30,720
lose that entire value chain and so

00:08:28,770 --> 00:08:33,810
companies naturally spend an enormous

00:08:30,720 --> 00:08:36,300
amount of time arguing about which tool

00:08:33,810 --> 00:08:37,950
they want to use updating the tools that

00:08:36,300 --> 00:08:39,600
they want to use figuring out whether or

00:08:37,950 --> 00:08:41,580
not can deploy to you know the new

00:08:39,600 --> 00:08:43,590
kubernetes environment or they need to

00:08:41,580 --> 00:08:46,020
put that into you know a core you know

00:08:43,590 --> 00:08:47,250
Lenox legacy UNIX environment all those

00:08:46,020 --> 00:08:49,860
are questions that people are spending

00:08:47,250 --> 00:08:51,810
an enormous amount of time on but the

00:08:49,860 --> 00:08:54,030
end of day is like hey didn't ship code

00:08:51,810 --> 00:08:56,730
right you got a ship the code

00:08:54,030 --> 00:08:59,310
so the other area that we see when we

00:08:56,730 --> 00:09:02,520
say a tool tax is something we call a

00:08:59,310 --> 00:09:04,020
developer tax what we see on this one is

00:09:02,520 --> 00:09:06,150
the number of context switching that a

00:09:04,020 --> 00:09:08,970
developer might live in and so if the

00:09:06,150 --> 00:09:11,420
developer is if we go back for a sec if

00:09:08,970 --> 00:09:14,300
a developer is opening the issue in JIRA

00:09:11,420 --> 00:09:17,130
deploying it into their into a github

00:09:14,300 --> 00:09:18,780
repo handling and building and

00:09:17,130 --> 00:09:21,300
contracting their Jenkins pipeline

00:09:18,780 --> 00:09:23,910
handing that off to the artifact Jay

00:09:21,300 --> 00:09:25,500
Fogg artifactory and then trying to make

00:09:23,910 --> 00:09:27,900
sure that they can configure that on to

00:09:25,500 --> 00:09:30,890
their machine using chef how many places

00:09:27,900 --> 00:09:34,080
do you just put your developer right and

00:09:30,890 --> 00:09:36,690
I'm guessing here anyone having an easy

00:09:34,080 --> 00:09:38,700
job hiring people and if you do like

00:09:36,690 --> 00:09:40,800
seriously well done I don't know what

00:09:38,700 --> 00:09:43,860
you're doing but this is the hardest

00:09:40,800 --> 00:09:45,030
problem is our developers as we said the

00:09:43,860 --> 00:09:46,860
shift left means they have a lot more

00:09:45,030 --> 00:09:50,250
power it means they have a lot more say

00:09:46,860 --> 00:09:51,960
and it means it also their their time is

00:09:50,250 --> 00:09:53,130
the most valuable resource we sit on

00:09:51,960 --> 00:09:56,010
full stop

00:09:53,130 --> 00:09:58,320
so how do we help them and deal with it

00:09:56,010 --> 00:09:59,730
well sort of how this has played out for

00:09:58,320 --> 00:10:02,040
the developer so if you flip the tool

00:09:59,730 --> 00:10:03,960
Chang this looks this look is what you

00:10:02,040 --> 00:10:06,660
would if you're an IT admin or you're

00:10:03,960 --> 00:10:07,980
the IT director oh no I have to pay for

00:10:06,660 --> 00:10:11,160
all these tools I have to manage them

00:10:07,980 --> 00:10:13,680
true cost still not your most expensive

00:10:11,160 --> 00:10:15,240
cost your big cost is the developer tax

00:10:13,680 --> 00:10:17,760
on the context switching we just talked

00:10:15,240 --> 00:10:20,070
about and generally this is actually the

00:10:17,760 --> 00:10:22,500
world I came from Google so I'm

00:10:20,070 --> 00:10:24,750
opinionated I'm using an example I will

00:10:22,500 --> 00:10:27,210
fully acknowledge that microsoft word

00:10:24,750 --> 00:10:28,770
has moved its way forward but generally

00:10:27,210 --> 00:10:30,060
speaking I'm sure a few of us have lived

00:10:28,770 --> 00:10:32,970
in this world for a number of times

00:10:30,060 --> 00:10:34,530
right one person is a time you have

00:10:32,970 --> 00:10:36,420
multiple copies you have to merge them

00:10:34,530 --> 00:10:38,310
back together you have to make sure oh

00:10:36,420 --> 00:10:39,839
crap that was a good day that was a good

00:10:38,310 --> 00:10:42,180
you change that slide how does that fit

00:10:39,839 --> 00:10:43,770
to my slide or you read lying but how's

00:10:42,180 --> 00:10:47,089
that fit my red line red lines a little

00:10:43,770 --> 00:10:49,140
bit easier you have the version conflict

00:10:47,089 --> 00:10:50,780
we'd suggest maybe the world might look

00:10:49,140 --> 00:10:53,339
a little more like Google Docs right

00:10:50,780 --> 00:10:55,170
going to the same place everyone into

00:10:53,339 --> 00:10:57,600
the same place everyone know exactly

00:10:55,170 --> 00:11:00,839
where it's running everyone be speaking

00:10:57,600 --> 00:11:02,970
the same language this is the Nirvana

00:11:00,839 --> 00:11:05,880
that everyone thinks and they want to

00:11:02,970 --> 00:11:07,410
get to but they do have one other tax

00:11:05,880 --> 00:11:07,920
they have to pay and that's what I would

00:11:07,410 --> 00:11:10,380
call the

00:11:07,920 --> 00:11:13,110
attacks so datatex is going to be

00:11:10,380 --> 00:11:15,120
easiest ly most easily understood from

00:11:13,110 --> 00:11:16,620
what we're seeing from customers in an

00:11:15,120 --> 00:11:18,810
example so I'm going to take you through

00:11:16,620 --> 00:11:20,310
incident management and I'll kind of

00:11:18,810 --> 00:11:21,779
explain this as we go through it and

00:11:20,310 --> 00:11:24,329
you'll start think about where all the

00:11:21,779 --> 00:11:25,560
data comes to comes from that you would

00:11:24,329 --> 00:11:28,740
need to handle in an incident management

00:11:25,560 --> 00:11:30,000
for example right so first off you're

00:11:28,740 --> 00:11:31,860
gonna need some really good monitoring

00:11:30,000 --> 00:11:34,320
because you might want to know exactly

00:11:31,860 --> 00:11:36,750
when that API is hitting either errors

00:11:34,320 --> 00:11:39,320
or not delivering at this time so hey by

00:11:36,750 --> 00:11:42,540
the way just got to be able to correlate

00:11:39,320 --> 00:11:44,190
your monitoring data back into the

00:11:42,540 --> 00:11:45,449
source repo cause something changed and

00:11:44,190 --> 00:11:48,000
you have to understand how those two fit

00:11:45,449 --> 00:11:49,560
together one piece of data hey by the

00:11:48,000 --> 00:11:51,540
way you better know who it is and who's

00:11:49,560 --> 00:11:53,639
made who the people are because you need

00:11:51,540 --> 00:11:55,050
an incident manager you need a response

00:11:53,639 --> 00:11:56,699
and by the way you're going to need know

00:11:55,050 --> 00:11:59,160
which teams made the commits into that

00:11:56,699 --> 00:12:00,329
git repository right you're probably

00:11:59,160 --> 00:12:02,040
going to need to make sure that you have

00:12:00,329 --> 00:12:03,449
easy ways to communicate make sure that

00:12:02,040 --> 00:12:05,070
that would be integrated each one of

00:12:03,449 --> 00:12:06,209
these remember is a separate place if

00:12:05,070 --> 00:12:08,370
you're trying to handle it separately

00:12:06,209 --> 00:12:09,480
then you needed your ops flow so this is

00:12:08,370 --> 00:12:11,639
going to be really important to know

00:12:09,480 --> 00:12:12,990
who's doing what to either rollback so

00:12:11,639 --> 00:12:15,180
we're just going to assume simplicity

00:12:12,990 --> 00:12:16,500
sake this as a rollback right who do you

00:12:15,180 --> 00:12:18,120
have - who do you have to contact who

00:12:16,500 --> 00:12:20,100
has to be in place to do your rollback

00:12:18,120 --> 00:12:22,079
from the incident you're dealing with

00:12:20,100 --> 00:12:24,660
right you're going to need to know

00:12:22,079 --> 00:12:25,860
ideally on an optional you're going to

00:12:24,660 --> 00:12:27,240
know where the run book so you need to

00:12:25,860 --> 00:12:29,010
make sure that you have full access to

00:12:27,240 --> 00:12:31,529
your run books because you're gonna have

00:12:29,010 --> 00:12:32,519
to roll those back by the way while

00:12:31,529 --> 00:12:34,079
you're doing the troubleshooting you're

00:12:32,519 --> 00:12:37,260
gonna want to have good understanding of

00:12:34,079 --> 00:12:39,630
all of your era graphs and the timeline

00:12:37,260 --> 00:12:41,370
particularly here in terms of where

00:12:39,630 --> 00:12:43,440
updates were either that you're updating

00:12:41,370 --> 00:12:46,339
now or what got committed in your git

00:12:43,440 --> 00:12:48,570
repository before right

00:12:46,339 --> 00:12:50,579
might be also will really important to

00:12:48,570 --> 00:12:52,199
have in the context you might want to

00:12:50,579 --> 00:12:55,980
have some of the follow-up if you have

00:12:52,199 --> 00:12:58,529
to do further mitigation hey here's the

00:12:55,980 --> 00:13:00,930
issues how do we resolve them what are

00:12:58,529 --> 00:13:03,060
we to me to change the run books and

00:13:00,930 --> 00:13:04,920
then obviously the last one is just a

00:13:03,060 --> 00:13:06,540
context in terms of whether that

00:13:04,920 --> 00:13:07,800
performance is back up and running right

00:13:06,540 --> 00:13:12,269
so back to kind of your monitoring

00:13:07,800 --> 00:13:13,589
logging this is just at a high level how

00:13:12,269 --> 00:13:15,990
do we know what the heck's going on here

00:13:13,589 --> 00:13:17,640
right and so historically that's kind of

00:13:15,990 --> 00:13:20,600
the tool tax and I know is anyone a

00:13:17,640 --> 00:13:23,000
developer in the room ok so

00:13:20,600 --> 00:13:24,319
I'm gonna ask you I do some development

00:13:23,000 --> 00:13:30,649
but for those of you that raised your

00:13:24,319 --> 00:13:33,410
hand is this real yeah so we call that

00:13:30,649 --> 00:13:36,019
holistically a DevOps tool tax it's the

00:13:33,410 --> 00:13:37,670
integration the support tax this is a

00:13:36,019 --> 00:13:39,290
developer tax it's a date attacks these

00:13:37,670 --> 00:13:40,759
are all new things that we're seeing and

00:13:39,290 --> 00:13:44,449
I'll give you a little context of how we

00:13:40,759 --> 00:13:46,339
ran into it historically if so I should

00:13:44,449 --> 00:13:47,750
probably just explain I was trying not

00:13:46,339 --> 00:13:50,720
this is just telling you what's going in

00:13:47,750 --> 00:13:53,569
the industry but context wise get lab

00:13:50,720 --> 00:13:54,949
started as a git repository huge

00:13:53,569 --> 00:13:57,790
surprise to everyone I'm sure everyone's

00:13:54,949 --> 00:14:00,800
like get lab what in the world do you do

00:13:57,790 --> 00:14:02,449
we started as a git repository we took a

00:14:00,800 --> 00:14:03,440
very opinion Ischl II we looked at the

00:14:02,449 --> 00:14:07,130
world the same way everyone else does

00:14:03,440 --> 00:14:08,810
which is be the very best whatever

00:14:07,130 --> 00:14:11,720
you're in your silo be the very best you

00:14:08,810 --> 00:14:14,720
can be right some small tools sharp

00:14:11,720 --> 00:14:15,800
small sharp tools be great there so we

00:14:14,720 --> 00:14:17,660
actually started hey we're going to

00:14:15,800 --> 00:14:20,389
start at private git repositories

00:14:17,660 --> 00:14:20,959
because well let's be honest github did

00:14:20,389 --> 00:14:23,870
an awesome job

00:14:20,959 --> 00:14:26,779
right so don't go hook don't go compete

00:14:23,870 --> 00:14:28,279
on the same same space that someone's

00:14:26,779 --> 00:14:30,290
always doing well find a market that

00:14:28,279 --> 00:14:32,000
needs to be underserved and that was

00:14:30,290 --> 00:14:35,540
private git repository so we started

00:14:32,000 --> 00:14:38,899
there in about 2012 we actually then

00:14:35,540 --> 00:14:41,089
also started in 2014 a CI tool so a

00:14:38,899 --> 00:14:42,380
continuous integration tool and we kept

00:14:41,089 --> 00:14:43,819
them separate like hey these are two

00:14:42,380 --> 00:14:45,829
separate subject are two different

00:14:43,819 --> 00:14:47,329
products similar to what you might see

00:14:45,829 --> 00:14:48,769
with a hash II Corp right so hash your

00:14:47,329 --> 00:14:50,870
corpse got terraform they've got vault

00:14:48,769 --> 00:14:54,199
and they've got you know packer and

00:14:50,870 --> 00:14:55,910
they've got you know console and I'm

00:14:54,199 --> 00:14:59,959
missing two of their projects but I'll

00:14:55,910 --> 00:15:01,970
remember them quite halfway through what

00:14:59,959 --> 00:15:03,470
we did is we actually started having

00:15:01,970 --> 00:15:05,600
customers about two three years ago

00:15:03,470 --> 00:15:07,300
saying hey can we run them together and

00:15:05,600 --> 00:15:09,319
when we started running them together

00:15:07,300 --> 00:15:11,329
that's when we kind of had the aha

00:15:09,319 --> 00:15:13,939
moment because customers are saying I

00:15:11,329 --> 00:15:15,470
can actually see the visibility I start

00:15:13,939 --> 00:15:17,569
seeing visibility back into this and so

00:15:15,470 --> 00:15:20,269
this is kind of where our vision is is

00:15:17,569 --> 00:15:23,449
to help customers bring that entire CI

00:15:20,269 --> 00:15:25,550
and DevOps tool chain so not

00:15:23,449 --> 00:15:28,189
surprisingly I didn't put this up here

00:15:25,550 --> 00:15:30,110
but these are all areas that we spend a

00:15:28,189 --> 00:15:32,120
bunch of time on the other area that's

00:15:30,110 --> 00:15:34,730
really emerging in particular that's

00:15:32,120 --> 00:15:36,949
really helpful and goes back to

00:15:34,730 --> 00:15:38,930
the developer tax Oh a little bit more

00:15:36,949 --> 00:15:42,279
I'm completely breaking every way you're

00:15:38,930 --> 00:15:46,009
supposed to do a presentation here is

00:15:42,279 --> 00:15:48,709
security right and so what's really

00:15:46,009 --> 00:15:51,560
important and is to customers is their

00:15:48,709 --> 00:15:53,540
ability to do security vulnerabilities

00:15:51,560 --> 00:15:55,339
real time for your developer right and

00:15:53,540 --> 00:15:57,680
what that means is is the developer is

00:15:55,339 --> 00:15:59,300
able every time you need to commit that

00:15:57,680 --> 00:16:01,759
you're able to run these security the

00:15:59,300 --> 00:16:03,290
security tools across them it means that

00:16:01,759 --> 00:16:05,660
you get obviously more secure code

00:16:03,290 --> 00:16:08,269
yeah a bonus but second your developer

00:16:05,660 --> 00:16:09,920
is getting that real-time feedback I'm

00:16:08,269 --> 00:16:12,230
gonna pick on developers in the room

00:16:09,920 --> 00:16:14,750
again has anyone made the commit into

00:16:12,230 --> 00:16:16,550
and that goes off to security land and

00:16:14,750 --> 00:16:18,529
how long how long does it take until you

00:16:16,550 --> 00:16:24,490
get answers back as to whether that code

00:16:18,529 --> 00:16:27,500
you wrote was secure right so if you did

00:16:24,490 --> 00:16:29,569
know when I say oftentimes it's weeks

00:16:27,500 --> 00:16:31,100
like it can be weeks for them to do the

00:16:29,569 --> 00:16:33,170
scanning give the data back and then you

00:16:31,100 --> 00:16:36,019
become this cycle right then the life

00:16:33,170 --> 00:16:38,959
cycle becomes oh okay I honestly I coded

00:16:36,019 --> 00:16:41,269
that literally a week or two ago okay or

00:16:38,959 --> 00:16:43,310
longer now I get to go back and adjust

00:16:41,269 --> 00:16:46,610
it and so now you're creating both

00:16:43,310 --> 00:16:47,870
context switching plus velocity plus

00:16:46,610 --> 00:16:50,029
you're also not helping them become

00:16:47,870 --> 00:16:51,889
better coders right so if you can really

00:16:50,029 --> 00:16:54,439
put the linting the security all those

00:16:51,889 --> 00:16:57,050
tools right in line when they're making

00:16:54,439 --> 00:16:58,399
the commits now you're hitting inside of

00:16:57,050 --> 00:17:00,759
you know seconds you're getting that

00:16:58,399 --> 00:17:03,139
feedback to your developers right

00:17:00,759 --> 00:17:05,449
another one and I want to I'll highlight

00:17:03,139 --> 00:17:08,650
them and he can speak to it weighing up

00:17:05,449 --> 00:17:11,510
here in the I need to cut down on slides

00:17:08,650 --> 00:17:14,659
so I'll use an example but Wayne these

00:17:11,510 --> 00:17:17,480
years is with beacon technology so they

00:17:14,659 --> 00:17:22,069
do enable customer so they're really

00:17:17,480 --> 00:17:23,870
worked on a cloud-based you can read it

00:17:22,069 --> 00:17:25,370
here but for the financials a production

00:17:23,870 --> 00:17:28,850
platform for your financial services

00:17:25,370 --> 00:17:30,590
needs specifically his team is focused

00:17:28,850 --> 00:17:32,330
on this at an even a higher level in

00:17:30,590 --> 00:17:33,429
really the financial services area so

00:17:32,330 --> 00:17:36,740
they've built a whole bunch of

00:17:33,429 --> 00:17:38,120
additional tooling on top of it but they

00:17:36,740 --> 00:17:39,590
use and they use a similar model a

00:17:38,120 --> 00:17:42,110
transparent code meaning they're in

00:17:39,590 --> 00:17:43,610
customers have full transparency to

00:17:42,110 --> 00:17:45,409
their code and what's running in it so

00:17:43,610 --> 00:17:47,179
they can make contributions back if they

00:17:45,409 --> 00:17:47,790
want to make an adjustment or they see a

00:17:47,179 --> 00:17:49,620
phone

00:17:47,790 --> 00:17:53,370
or whatever contribute it right back

00:17:49,620 --> 00:17:55,440
comes immediately back into the code but

00:17:53,370 --> 00:17:57,330
the reason I bring this up and Wayne can

00:17:55,440 --> 00:17:58,710
speak to you guys should rain raise your

00:17:57,330 --> 00:18:02,760
hand because I'm like Wayne as if no one

00:17:58,710 --> 00:18:06,330
knows who Wayne is that's Wayne yeah is

00:18:02,760 --> 00:18:07,800
the codebase continues to get more

00:18:06,330 --> 00:18:09,960
consistent - so when you add a new

00:18:07,800 --> 00:18:12,120
developer if you put in good security

00:18:09,960 --> 00:18:14,070
good linting you're leveraging this full

00:18:12,120 --> 00:18:16,500
toolset when your developer shows up

00:18:14,070 --> 00:18:18,570
they know exactly the style of code that

00:18:16,500 --> 00:18:21,060
it's written in they know exactly what

00:18:18,570 --> 00:18:23,340
the expectations are and the tooling

00:18:21,060 --> 00:18:25,680
helps them code consistently so your

00:18:23,340 --> 00:18:29,190
entire company's writing similar code

00:18:25,680 --> 00:18:31,320
easily readable meeting all the other

00:18:29,190 --> 00:18:34,200
expectations you might have and so that

00:18:31,320 --> 00:18:37,230
speed of deployment we all talk about it

00:18:34,200 --> 00:18:38,810
but is really hampered by your toolset

00:18:37,230 --> 00:18:41,190
depending on how you handle it and so

00:18:38,810 --> 00:18:42,750
this was not our expectation the reason

00:18:41,190 --> 00:18:44,430
we kind of chatted about this is again

00:18:42,750 --> 00:18:46,230
we didn't actually expect this when we

00:18:44,430 --> 00:18:48,450
started we went down the path of a bunch

00:18:46,230 --> 00:18:49,890
of small tools do them really well make

00:18:48,450 --> 00:18:51,570
sure you're the best in class private

00:18:49,890 --> 00:18:54,090
get repository really yes

00:18:51,570 --> 00:18:56,160
nailed it like oh we might do some CI

00:18:54,090 --> 00:18:58,260
and it turns out that that was pretty

00:18:56,160 --> 00:19:00,240
important and so we doubled down on it

00:18:58,260 --> 00:19:02,010
and that's kind of been the evolution

00:19:00,240 --> 00:19:05,670
we're seeing our customers go through

00:19:02,010 --> 00:19:07,530
very much the same world as they're

00:19:05,670 --> 00:19:10,250
dealing with it Wayne we're small enough

00:19:07,530 --> 00:19:25,110
any comments or anything else you feel

00:19:10,250 --> 00:19:43,830
important to add they know if you write

00:19:25,110 --> 00:19:46,110
bad code because they get to see by by

00:19:43,830 --> 00:19:48,150
using it learn by putting stuff in in

00:19:46,110 --> 00:19:51,080
stages we didn't have to go from here to

00:19:48,150 --> 00:19:52,290
here in one loop we were able to go for

00:19:51,080 --> 00:19:54,960
anything

00:19:52,290 --> 00:19:58,110
for the scope of your change plus two

00:19:54,960 --> 00:19:59,250
lines by the side let's do that so we

00:19:58,110 --> 00:20:00,960
can have a guy who needs to make a

00:19:59,250 --> 00:20:03,510
change they could make that change

00:20:00,960 --> 00:20:05,070
without having to be but I think the

00:20:03,510 --> 00:20:06,990
refactor the entire file to choose to

00:20:05,070 --> 00:20:08,730
get it past linting but their code was

00:20:06,990 --> 00:20:10,290
already consistent for the new standards

00:20:08,730 --> 00:20:17,190
so it's tools like that that have

00:20:10,290 --> 00:20:18,660
definitely come to us not just with so a

00:20:17,190 --> 00:20:20,160
lot of this whether we have an

00:20:18,660 --> 00:20:21,770
opinionated tool set I think to be

00:20:20,160 --> 00:20:24,120
crystal clear what I'm trying to say is

00:20:21,770 --> 00:20:26,900
we're just an example we've come to this

00:20:24,120 --> 00:20:29,100
conclusion as a company but I think the

00:20:26,900 --> 00:20:31,830
commentary in this is I think there's a

00:20:29,100 --> 00:20:33,180
nature when we hear shift left or the

00:20:31,830 --> 00:20:35,190
notion that developers are now have

00:20:33,180 --> 00:20:37,830
control what we've seen is initially

00:20:35,190 --> 00:20:38,970
people move way too far left and then

00:20:37,830 --> 00:20:42,900
they have to come back so if each

00:20:38,970 --> 00:20:44,760
development team gets their own choices

00:20:42,900 --> 00:20:47,130
which we do want to give them choices

00:20:44,760 --> 00:20:48,960
and we want to track them you're gonna

00:20:47,130 --> 00:20:50,550
end up at the end of day handling that

00:20:48,960 --> 00:20:51,720
tool chain tax so there's a trade-off

00:20:50,550 --> 00:20:53,430
that we're trying to weigh and

00:20:51,720 --> 00:20:54,750
functionally that's what a lot of this

00:20:53,430 --> 00:20:57,600
talk was today going to go through is

00:20:54,750 --> 00:20:59,550
it's one we've run into front and center

00:20:57,600 --> 00:21:01,410
obviously we deal with it because of

00:20:59,550 --> 00:21:03,930
we're a company and so but it's the

00:21:01,410 --> 00:21:06,510
exact same pattern we see internally two

00:21:03,930 --> 00:21:08,760
companies again and again and again I

00:21:06,510 --> 00:21:11,430
can't tell you how many companies run

00:21:08,760 --> 00:21:14,010
literally three different types of

00:21:11,430 --> 00:21:15,360
source code management and just get and

00:21:14,010 --> 00:21:19,380
by the way there are only really three

00:21:15,360 --> 00:21:21,060
get options github get lab and Atlassian

00:21:19,380 --> 00:21:23,880
those are really the only three you have

00:21:21,060 --> 00:21:25,530
it there's I can name five companies off

00:21:23,880 --> 00:21:26,820
to my head that literally have all three

00:21:25,530 --> 00:21:31,410
running in their company at the same

00:21:26,820 --> 00:21:33,750
time challenging to run with that and so

00:21:31,410 --> 00:21:36,870
standardized on them whichever one that

00:21:33,750 --> 00:21:38,370
is and obviously from an open source

00:21:36,870 --> 00:21:41,700
standpoint I think the other part is

00:21:38,370 --> 00:21:43,950
we've seen working with beacon and

00:21:41,700 --> 00:21:46,140
similar companies that's kind of the

00:21:43,950 --> 00:21:47,040
model that we've landed on it's not

00:21:46,140 --> 00:21:48,030
right for everyone

00:21:47,040 --> 00:21:50,070
I'm sure there's different ways of

00:21:48,030 --> 00:21:52,470
handling of course but having the

00:21:50,070 --> 00:21:56,490
whether it's transferring source or us

00:21:52,470 --> 00:21:58,920
in open core that's something that has

00:21:56,490 --> 00:22:01,770
proven to be really really valuable in

00:21:58,920 --> 00:22:05,700
getting feedback and open a lot of that

00:22:01,770 --> 00:22:07,080
transparency so yep

00:22:05,700 --> 00:22:09,030
another thing that I would say is

00:22:07,080 --> 00:22:11,070
another saying that we kind of ended up

00:22:09,030 --> 00:22:14,340
with which I would a pattern I think you

00:22:11,070 --> 00:22:17,280
could use for sure is convention over

00:22:14,340 --> 00:22:20,760
configuration and what I mean by that is

00:22:17,280 --> 00:22:22,650
have an opinion and not just hey anyone

00:22:20,760 --> 00:22:24,360
can figure anything you want so the way

00:22:22,650 --> 00:22:25,980
we play out with this is we start with

00:22:24,360 --> 00:22:28,620
an opinion for example for a customer

00:22:25,980 --> 00:22:30,060
right say hey a customer hey you have

00:22:28,620 --> 00:22:31,620
all these different pieces that you need

00:22:30,060 --> 00:22:33,240
to bring together we're gonna bring an

00:22:31,620 --> 00:22:34,950
opinionated tool that helps you guys

00:22:33,240 --> 00:22:36,150
solve that but we're actually going to

00:22:34,950 --> 00:22:38,100
give you stuff out of the box that you

00:22:36,150 --> 00:22:39,330
start with so they would start with if

00:22:38,100 --> 00:22:41,070
we say something we call it something

00:22:39,330 --> 00:22:44,160
called Auto DevOps because it's just fun

00:22:41,070 --> 00:22:47,400
to call everything DevOps right actually

00:22:44,160 --> 00:22:49,290
in fairness we called it DevOps before

00:22:47,400 --> 00:22:51,570
Azra called the DevOps so we like to

00:22:49,290 --> 00:22:52,650
think they came after us I'm not sure

00:22:51,570 --> 00:22:53,790
that actually happened they have

00:22:52,650 --> 00:22:56,040
obviously been doing this for a very

00:22:53,790 --> 00:22:57,420
long time but we start with an opinion

00:22:56,040 --> 00:22:59,460
and I would didn't say this is a pattern

00:22:57,420 --> 00:23:01,020
that's also really useful if you have a

00:22:59,460 --> 00:23:02,880
group particularly anyone have new

00:23:01,020 --> 00:23:05,250
development teams that are started or

00:23:02,880 --> 00:23:06,750
have asked you or want us to give them

00:23:05,250 --> 00:23:08,550
an opinion like literally give them a

00:23:06,750 --> 00:23:09,690
full opinion from a tool chain so I'm

00:23:08,550 --> 00:23:12,090
just gonna give an example for example

00:23:09,690 --> 00:23:13,290
when we look at it we look hey you

00:23:12,090 --> 00:23:16,560
should have Auto build you have a very

00:23:13,290 --> 00:23:18,030
very clear build option on this we

00:23:16,560 --> 00:23:19,380
happen to you something similarly you've

00:23:18,030 --> 00:23:22,770
used docker files and something that's

00:23:19,380 --> 00:23:25,860
similar to Heroku in helping package up

00:23:22,770 --> 00:23:27,810
that the application give them testing

00:23:25,860 --> 00:23:29,460
give them quality immediately in there

00:23:27,810 --> 00:23:31,460
with the quality scans make sure you set

00:23:29,460 --> 00:23:34,680
up all the development or the deploy the

00:23:31,460 --> 00:23:36,780
security view so hey get them static

00:23:34,680 --> 00:23:38,310
application security testing make sure

00:23:36,780 --> 00:23:39,920
they have vulnerability static analysis

00:23:38,310 --> 00:23:43,710
dynamic application security testing

00:23:39,920 --> 00:23:45,870
there's a bunch of tools out there but

00:23:43,710 --> 00:23:48,540
give them to them right off the bat

00:23:45,870 --> 00:23:49,830
because otherwise everyone knows the

00:23:48,540 --> 00:23:51,540
developer doesn't have it they will go

00:23:49,830 --> 00:23:53,340
make their own decision the truth is

00:23:51,540 --> 00:23:56,430
they would love for you to hand this to

00:23:53,340 --> 00:23:57,420
them if it has all the pieces in it make

00:23:56,430 --> 00:24:00,150
sure you're handing them all those

00:23:57,420 --> 00:24:02,070
pieces and not letting them go I should

00:24:00,150 --> 00:24:03,720
say this there may be places you explore

00:24:02,070 --> 00:24:05,070
and give them freedom so that's not what

00:24:03,720 --> 00:24:07,110
I'm trying to say just know there's a

00:24:05,070 --> 00:24:09,300
tax you will be paying on the back end

00:24:07,110 --> 00:24:11,880
if there's an opinion you start on the

00:24:09,300 --> 00:24:13,680
front end so this is what we do is we

00:24:11,880 --> 00:24:15,180
give a whole are a default and Auto

00:24:13,680 --> 00:24:17,130
Devorah it's a whole bunch of the you

00:24:15,180 --> 00:24:18,390
know opinionated ways of doing it then

00:24:17,130 --> 00:24:19,049
you can just go in and tweak all you

00:24:18,390 --> 00:24:24,779
want and so they

00:24:19,049 --> 00:24:26,820
gives only a a white you know or sorry a

00:24:24,779 --> 00:24:28,379
platform for them to start with and then

00:24:26,820 --> 00:24:31,350
as they want to tweak that up or down

00:24:28,379 --> 00:24:32,460
change out one tool or scanning or

00:24:31,350 --> 00:24:34,230
something or another or they have a

00:24:32,460 --> 00:24:35,610
different dev in this case you know we

00:24:34,230 --> 00:24:37,889
happen to use for monitoring we use a

00:24:35,610 --> 00:24:39,629
Prometheus but there's a whole bunch of

00:24:37,889 --> 00:24:40,860
really good monitoring options that may

00:24:39,629 --> 00:24:43,019
already be in place that they would want

00:24:40,860 --> 00:24:46,440
to use nonetheless we start with that

00:24:43,019 --> 00:24:49,980
opinion for someone to start so I think

00:24:46,440 --> 00:24:52,320
I am right about five minutes early so

00:24:49,980 --> 00:25:10,619
we can have questions which had been my

00:24:52,320 --> 00:25:14,850
goal any questions yeah yeah so when on

00:25:10,619 --> 00:25:16,980
the shift left so let me take try think

00:25:14,850 --> 00:25:22,889
if I can say this one so there's a large

00:25:16,980 --> 00:25:24,570
investment bank that is currently wanted

00:25:22,889 --> 00:25:26,700
to move fast so went for the direction

00:25:24,570 --> 00:25:29,909
like hey hey we're gonna fast had a lot

00:25:26,700 --> 00:25:31,590
of really smart developers um what ended

00:25:29,909 --> 00:25:33,330
up happening is a couple the two core

00:25:31,590 --> 00:25:34,499
development pieces ended up being two

00:25:33,330 --> 00:25:36,570
pieces of platform they wanted to pull

00:25:34,499 --> 00:25:37,950
together been really hard because those

00:25:36,570 --> 00:25:42,090
two teams had totally different

00:25:37,950 --> 00:25:43,619
development life cycles just even they

00:25:42,090 --> 00:25:46,649
weren't even both using get for example

00:25:43,619 --> 00:25:48,989
one which is fine right so they just

00:25:46,649 --> 00:25:51,450
ended up later down the path because you

00:25:48,989 --> 00:25:52,649
know you had an opinionated they didn't

00:25:51,450 --> 00:25:54,149
give a standard for someone to start

00:25:52,649 --> 00:25:56,549
with they now have a whole bunch of her

00:25:54,149 --> 00:25:58,679
tools and initially they didn't think

00:25:56,549 --> 00:26:00,119
the two platforms more or less they were

00:25:58,679 --> 00:26:03,450
developing we're gonna come together as

00:26:00,119 --> 00:26:04,379
they came together that's you know now

00:26:03,450 --> 00:26:05,820
they're going back and having to

00:26:04,379 --> 00:26:07,830
refactor and you know make a lot of

00:26:05,820 --> 00:26:09,720
choices and some of this is just a

00:26:07,830 --> 00:26:12,450
nature of development right so I'm not

00:26:09,720 --> 00:26:14,340
saying it wouldn't happen but it's

00:26:12,450 --> 00:26:18,629
particularly painful if you give a small

00:26:14,340 --> 00:26:21,779
team license to choose any tools they

00:26:18,629 --> 00:26:23,340
want because they may be the small team

00:26:21,779 --> 00:26:27,029
becomes a bigger team that small team

00:26:23,340 --> 00:26:29,280
may not still be there and then then

00:26:27,029 --> 00:26:32,040
where you go with it

00:26:29,280 --> 00:26:40,830
identifying shifting let necklace

00:26:32,040 --> 00:26:42,840
lending or giving the guess yeah so

00:26:40,830 --> 00:26:45,080
shift left meaning letting the developer

00:26:42,840 --> 00:26:47,040
that the decisions on what gets built

00:26:45,080 --> 00:26:49,260
particularly more what gets built in

00:26:47,040 --> 00:26:50,430
tool so I would suggest give obviously

00:26:49,260 --> 00:26:52,560
keep giving your developers get them

00:26:50,430 --> 00:26:56,910
closer to whoever your end customer is

00:26:52,560 --> 00:26:58,610
right but not necessarily just be aware

00:26:56,910 --> 00:27:01,500
of what you're doing for a tool right

00:26:58,610 --> 00:27:02,880
we're chatting for example with the

00:27:01,500 --> 00:27:05,880
Linux Foundation and they've been handed

00:27:02,880 --> 00:27:08,040
for example great donations and people

00:27:05,880 --> 00:27:10,710
say here's my code right and here's some

00:27:08,040 --> 00:27:12,510
dollars to maintain it the problem is

00:27:10,710 --> 00:27:15,060
the Linux foundations like look we don't

00:27:12,510 --> 00:27:17,850
support every tool that everyone's ever

00:27:15,060 --> 00:27:20,940
created they have a doubly big challenge

00:27:17,850 --> 00:27:22,590
because that's all core developers right

00:27:20,940 --> 00:27:24,390
so their each development team comes in

00:27:22,590 --> 00:27:26,220
the kubernetes team has a whole bunch of

00:27:24,390 --> 00:27:28,320
opinions the Prometheus team has an

00:27:26,220 --> 00:27:30,060
opinion and each one has their tool set

00:27:28,320 --> 00:27:32,460
which they want a hand of the Linux

00:27:30,060 --> 00:27:35,400
Foundation and say hey run it for us and

00:27:32,460 --> 00:27:38,520
the Linux Foundation is like so wait

00:27:35,400 --> 00:27:40,410
I've got now you know they're even worse

00:27:38,520 --> 00:27:42,210
because they'd maybe like 45 tool sets

00:27:40,410 --> 00:27:45,230
that then they have to manage they have

00:27:42,210 --> 00:27:48,990
to update they have to maintain and so

00:27:45,230 --> 00:27:51,420
it's uh yeah it's pretty real it's not

00:27:48,990 --> 00:27:52,770
more real than I think I'd realized and

00:27:51,420 --> 00:27:54,630
a lot more real and the other thing is

00:27:52,770 --> 00:27:56,130
for me it's real a lot more real than

00:27:54,630 --> 00:27:57,510
when I was at Google there was an

00:27:56,130 --> 00:28:00,030
opinionated wait for everything no

00:27:57,510 --> 00:28:02,040
matter what which has a plus and minus

00:28:00,030 --> 00:28:03,810
I'm sure but the plus of it is everyone

00:28:02,040 --> 00:28:06,240
took a while for everyone to get on the

00:28:03,810 --> 00:28:08,520
same page the learning overhead for a

00:28:06,240 --> 00:28:11,400
Google developer for examples a good

00:28:08,520 --> 00:28:12,390
three to six months but then everyone is

00:28:11,400 --> 00:28:14,010
developing on the same page right

00:28:12,390 --> 00:28:15,960
they're hammering through and when they

00:28:14,010 --> 00:28:16,470
deploy code everybody's talking the same

00:28:15,960 --> 00:28:19,160
language

00:28:16,470 --> 00:28:21,570
everyone's doing linting the same way so

00:28:19,160 --> 00:28:23,610
you can switch developers between code

00:28:21,570 --> 00:28:26,250
bases right so that's the other piece I

00:28:23,610 --> 00:28:27,450
would say is if you have developers if

00:28:26,250 --> 00:28:30,930
you think that developer is going to

00:28:27,450 --> 00:28:32,220
live and breathe on one project like

00:28:30,930 --> 00:28:35,130
you're kidding yourself because they're

00:28:32,220 --> 00:28:36,480
not so how if they're not

00:28:35,130 --> 00:28:37,500
interchangeable so if you have a team

00:28:36,480 --> 00:28:39,600
that's using a completely different

00:28:37,500 --> 00:28:42,060
toolset and another team that's using

00:28:39,600 --> 00:28:43,080
different toolset how do they both talk

00:28:42,060 --> 00:28:45,179
together but more

00:28:43,080 --> 00:28:47,549
we hate how do you load balance right if

00:28:45,179 --> 00:28:48,870
you want a good back-end engineer and

00:28:47,549 --> 00:28:52,200
you have to switch them over another

00:28:48,870 --> 00:28:54,090
team you know how do you how do you how

00:28:52,200 --> 00:28:55,470
do you solve that problem right and the

00:28:54,090 --> 00:29:14,010
truth is then you get a bunch of siloed

00:28:55,470 --> 00:29:16,409
devs right so yeah so um I don't know

00:29:14,010 --> 00:29:18,240
I'm obviously wank and chat through the

00:29:16,409 --> 00:29:20,250
way we're seeing most customers is just

00:29:18,240 --> 00:29:21,330
trying to move start with an opinion

00:29:20,250 --> 00:29:23,279
like you're not gonna solve your back

00:29:21,330 --> 00:29:24,779
like there's a backlog it is what it is

00:29:23,279 --> 00:29:26,519
it runs your business it probably makes

00:29:24,779 --> 00:29:28,440
you a bunch of money that's why you're

00:29:26,519 --> 00:29:29,909
doing it you're doing but introduce

00:29:28,440 --> 00:29:32,159
something new so each new development

00:29:29,909 --> 00:29:33,419
moves and like actually this was the fun

00:29:32,159 --> 00:29:34,830
and wayne's like isn't everyone doing it

00:29:33,419 --> 00:29:36,720
so you guys don't have to say if you do

00:29:34,830 --> 00:29:39,389
or don't do it but when I was first

00:29:36,720 --> 00:29:42,029
chatting with Wayne he's like so we made

00:29:39,389 --> 00:29:44,630
this switch and we're slowly eating away

00:29:42,029 --> 00:29:47,399
at our backlog in terms of you know

00:29:44,630 --> 00:29:49,679
quality that the debt in in the core

00:29:47,399 --> 00:29:50,940
base but they didn't start there right

00:29:49,679 --> 00:29:54,059
they just started with everything new

00:29:50,940 --> 00:29:55,950
going through a new opinionated tool

00:29:54,059 --> 00:29:57,149
chain with all of the linting most

00:29:55,950 --> 00:29:59,190
importantly cake set just apply the

00:29:57,149 --> 00:30:02,130
tools whatever those tools are apply

00:29:59,190 --> 00:30:04,019
them and we just seen that's something

00:30:02,130 --> 00:30:06,019
that we've seen your your pattern is one

00:30:04,019 --> 00:30:08,820
that we're seeing across the board of

00:30:06,019 --> 00:30:10,139
hey we don't have to go back and resaw

00:30:08,820 --> 00:30:12,539
every problem because there are going to

00:30:10,139 --> 00:30:14,580
be the problem that's wrong way there's

00:30:12,539 --> 00:30:16,260
a process that's being done introducing

00:30:14,580 --> 00:30:19,799
a new process finding just probably try

00:30:16,260 --> 00:30:21,929
not to introduce five new processes and

00:30:19,799 --> 00:30:24,659
also try because here's the thing as a

00:30:21,929 --> 00:30:26,399
dev we all have opinions right so the

00:30:24,659 --> 00:30:28,559
devs in the room what's your favorite

00:30:26,399 --> 00:30:30,120
tool I know I know he's got it cuz he's

00:30:28,559 --> 00:30:31,889
got a bunch of stickers on it so he can

00:30:30,120 --> 00:30:33,809
you can know his dev tools

00:30:31,889 --> 00:30:35,370
there's his dev tools right because

00:30:33,809 --> 00:30:37,590
they're gonna slap them on their on

00:30:35,370 --> 00:30:39,570
their laptop and so what happens to on

00:30:37,590 --> 00:30:40,409
that which is challenging then you

00:30:39,570 --> 00:30:42,720
become holy wars

00:30:40,409 --> 00:30:46,440
it's the puppet versus chef versus Ansel

00:30:42,720 --> 00:30:49,289
Bush's hashey Corp okay awesome all

00:30:46,440 --> 00:30:51,690
useful like all useful probably not

00:30:49,289 --> 00:30:53,909
worth having really strong debate on

00:30:51,690 --> 00:30:55,799
that but the problem becomes once you

00:30:53,909 --> 00:30:57,029
put those I think three those are in

00:30:55,799 --> 00:31:00,610
three lengths No

00:30:57,029 --> 00:31:02,230
two languages ones go-go in Ruby I think

00:31:00,610 --> 00:31:03,610
the only two you got to solve there but

00:31:02,230 --> 00:31:07,480
then you start going languages even in

00:31:03,610 --> 00:31:09,429
even in that that space right oh it's a

00:31:07,480 --> 00:31:12,070
point that three yes sorry yes so there

00:31:09,429 --> 00:31:13,720
you go now three and so you know where

00:31:12,070 --> 00:31:15,279
that fits it also makes it hard to hire

00:31:13,720 --> 00:31:18,610
and again it how it makes it difficult

00:31:15,279 --> 00:31:19,960
to move developers between tools I

00:31:18,610 --> 00:31:22,539
suspect some of this is you're all

00:31:19,960 --> 00:31:25,389
familiar with so they're not huge aha

00:31:22,539 --> 00:31:27,070
I've never heard it just we we've seen

00:31:25,389 --> 00:31:29,590
this become something that's really

00:31:27,070 --> 00:31:32,710
critical over the last you know year and

00:31:29,590 --> 00:31:34,029
a half or two years and it we've seen

00:31:32,710 --> 00:31:40,620
companies do it really well but it is

00:31:34,029 --> 00:31:40,620
not easy other questions yes

00:32:16,049 --> 00:32:29,230
so yeah so you're so you have yeah your

00:32:27,159 --> 00:32:54,159
dev team your job teams over here and

00:32:29,230 --> 00:32:55,690
your ops teams over there yeah someone

00:32:54,159 --> 00:32:57,159
has to have I mean you have to have

00:32:55,690 --> 00:32:59,890
someone that translates between your

00:32:57,159 --> 00:33:03,039
groups in some way right I don't know

00:32:59,890 --> 00:33:05,440
that they have to be an expert developer

00:33:03,039 --> 00:33:09,190
so I think what we're seeing mostly is

00:33:05,440 --> 00:33:11,020
the dev team not having to be that they

00:33:09,190 --> 00:33:14,110
don't have to do core coding but they

00:33:11,020 --> 00:33:16,330
again same thing the ops team is mostly

00:33:14,110 --> 00:33:19,570
where that bridge gets created from

00:33:16,330 --> 00:33:20,950
right we're seeing the other place we're

00:33:19,570 --> 00:33:24,640
seeing this in spades which is really

00:33:20,950 --> 00:33:27,100
interesting is with the proliferation of

00:33:24,640 --> 00:33:30,250
kubernetes we're saying all these offs

00:33:27,100 --> 00:33:31,799
teams going I've got a great cluster for

00:33:30,250 --> 00:33:34,750
you and every one of the dev seems like

00:33:31,799 --> 00:33:37,029
so what exactly and thank you

00:33:34,750 --> 00:33:39,730
like what do you thank you for giving us

00:33:37,029 --> 00:33:41,830
so um we're actually so that's a place

00:33:39,730 --> 00:33:42,730
that we've been working a bunch is it

00:33:41,830 --> 00:33:44,590
sounds like if you've seen the movie

00:33:42,730 --> 00:33:46,210
Inception this is what we've been

00:33:44,590 --> 00:33:49,120
working it's like ship Turku Bernays

00:33:46,210 --> 00:33:51,610
cluster with get labs so that you can

00:33:49,120 --> 00:33:53,770
give your developers a full and end tool

00:33:51,610 --> 00:33:56,169
chain to put it on your cluster right

00:33:53,770 --> 00:33:58,270
and then the ops team is reaching back

00:33:56,169 --> 00:33:59,830
to the dev team and saying I didn't just

00:33:58,270 --> 00:34:02,860
bring you a cluster and say deploy to it

00:33:59,830 --> 00:34:04,570
I brought you know I brought you all the

00:34:02,860 --> 00:34:07,090
tools you need to write your code in

00:34:04,570 --> 00:34:08,349
your IDE right you should function they

00:34:07,090 --> 00:34:08,919
should be able to live mostly in their

00:34:08,349 --> 00:34:12,129
IDE

00:34:08,919 --> 00:34:13,480
mmm touch maybe one other tool I'm

00:34:12,129 --> 00:34:17,740
opinionated so you know which one that

00:34:13,480 --> 00:34:18,710
is but you know maybe two if possible if

00:34:17,740 --> 00:34:21,380
your devs

00:34:18,710 --> 00:34:22,640
and I'm willing to bet most devs while

00:34:21,380 --> 00:34:24,710
they would say if you asked they have an

00:34:22,640 --> 00:34:26,570
opinion if they were literally able to

00:34:24,710 --> 00:34:30,290
be productive 90 percent were like if I

00:34:26,570 --> 00:34:31,520
can live my ID and ship code yeah that's

00:34:30,290 --> 00:34:34,910
what I want to do I want to see it

00:34:31,520 --> 00:34:38,000
affect the the end and so we're actually

00:34:34,910 --> 00:34:39,800
again we spend split time so we see both

00:34:38,000 --> 00:34:42,050
but I think I would encourage you if

00:34:39,800 --> 00:34:46,640
there the ops in the room who'd say ops

00:34:42,050 --> 00:34:48,110
I yeah I'd encourage if your ops teams I

00:34:46,640 --> 00:34:50,570
think are the ones are gonna be able to

00:34:48,110 --> 00:34:53,090
offer that back so I think tan ops

00:34:50,570 --> 00:34:54,680
reaching back to the devs because of the

00:34:53,090 --> 00:34:57,500
shift left to the other challenge is

00:34:54,680 --> 00:34:58,970
that shift left like developers are

00:34:57,500 --> 00:35:02,120
getting very used to being able to make

00:34:58,970 --> 00:35:03,530
the calls and so I do think we're seeing

00:35:02,120 --> 00:35:07,190
it really successful where an ops team

00:35:03,530 --> 00:35:09,410
brings you know those tools back to the

00:35:07,190 --> 00:35:11,510
devs and say hey we're gonna make that

00:35:09,410 --> 00:35:12,200
much easier on you and if you can answer

00:35:11,510 --> 00:35:15,320
that question

00:35:12,200 --> 00:35:17,360
9 times a 10 they are they seem really

00:35:15,320 --> 00:35:19,430
happy on that which is better than the

00:35:17,360 --> 00:35:21,200
shift left and then you if your dev

00:35:19,430 --> 00:35:26,600
teams in trying to force it on your Ops

00:35:21,200 --> 00:35:28,310
teams that's that's not necessarily I

00:35:26,600 --> 00:35:29,990
mean in a small team maybe but I'd say

00:35:28,310 --> 00:35:32,930
that wouldn't be the direction I would

00:35:29,990 --> 00:35:35,450
try and get your ops teams to reach out

00:35:32,930 --> 00:35:36,890
to your dev teams so I would say yes

00:35:35,450 --> 00:35:43,280
that that's a pattern we've seen that

00:35:36,890 --> 00:35:45,980
works the best yeah good okay anything

00:35:43,280 --> 00:35:46,580
else I think we actually have a few

00:35:45,980 --> 00:35:51,370
extra minutes

00:35:46,580 --> 00:35:53,390
I'm nope I ended right on time so

00:35:51,370 --> 00:35:56,240
appreciate it hopefully this is a little

00:35:53,390 --> 00:35:59,000
bit helpful for what it's worth if you

00:35:56,240 --> 00:36:04,900
ever need anything everything we have is

00:35:59,000 --> 00:36:07,700
public so all of its published from our

00:36:04,900 --> 00:36:08,960
workbook to every one of the slides to

00:36:07,700 --> 00:36:10,430
everything we actually also put

00:36:08,960 --> 00:36:13,040
everything our company calls are on

00:36:10,430 --> 00:36:14,930
YouTube so if you ever want something

00:36:13,040 --> 00:36:16,640
just search get lab something and it's

00:36:14,930 --> 00:36:18,620
probably there for you to use so please

00:36:16,640 --> 00:36:21,580
reuse it that's kind of the fun of this

00:36:18,620 --> 00:36:26,260
if it's at all useful for you all so

00:36:21,580 --> 00:36:26,260
hope that helps thank you all

00:36:28,250 --> 00:36:31,579

YouTube URL: https://www.youtube.com/watch?v=3Qm7OccbDV0


