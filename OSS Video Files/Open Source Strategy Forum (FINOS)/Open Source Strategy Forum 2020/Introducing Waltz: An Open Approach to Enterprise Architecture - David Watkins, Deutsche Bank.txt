Title: Introducing Waltz: An Open Approach to Enterprise Architecture - David Watkins, Deutsche Bank
Publication date: 2020-11-20
Playlist: Open Source Strategy Forum 2020
Description: 
	Introducing Waltz: An Open Approach to Enterprise Architecture - David Watkins, Deutsche Bank
Captions: 
	00:00:06,160 --> 00:00:09,120
hello

00:00:07,040 --> 00:00:10,800
my name is dave watkins i work at

00:00:09,120 --> 00:00:13,440
deutsche bank and today we're going to

00:00:10,800 --> 00:00:15,839
be talking about waltz

00:00:13,440 --> 00:00:16,960
so over the course of this talk we'll be

00:00:15,839 --> 00:00:19,920
going over

00:00:16,960 --> 00:00:21,199
what walt says a high level summary

00:00:19,920 --> 00:00:21,680
we'll talk a little bit about his

00:00:21,199 --> 00:00:23,920
history

00:00:21,680 --> 00:00:25,519
and we'll devote quite a bit of time to

00:00:23,920 --> 00:00:28,160
going through its feature set

00:00:25,519 --> 00:00:30,320
and how we use it and then we'll talk a

00:00:28,160 --> 00:00:32,640
little bit about the future how to get

00:00:30,320 --> 00:00:34,399
started with waltz in your organization

00:00:32,640 --> 00:00:36,719
and how to contribute back to the code

00:00:34,399 --> 00:00:36,719
base

00:00:37,040 --> 00:00:41,040
so what exactly is waltz uh walt's an

00:00:39,840 --> 00:00:42,640
enterprise system

00:00:41,040 --> 00:00:44,960
we have to think of it as an open

00:00:42,640 --> 00:00:47,440
approach to enterprise architecture

00:00:44,960 --> 00:00:48,239
uh we're trying to help organizations

00:00:47,440 --> 00:00:51,039
deal with

00:00:48,239 --> 00:00:51,440
very large and complex technical estates

00:00:51,039 --> 00:00:53,360
uh

00:00:51,440 --> 00:00:55,199
so to that end we're primarily

00:00:53,360 --> 00:00:56,559
interested in applications as our sort

00:00:55,199 --> 00:00:58,079
of primary unit

00:00:56,559 --> 00:00:59,760
we look at how they fit together in

00:00:58,079 --> 00:01:02,320
terms of data flows

00:00:59,760 --> 00:01:03,840
who's working on them and we look at

00:01:02,320 --> 00:01:05,760
their sort of characteristics in terms

00:01:03,840 --> 00:01:07,360
of what functions do they offer what

00:01:05,760 --> 00:01:10,320
services do they provide

00:01:07,360 --> 00:01:11,439
what process they participate in we look

00:01:10,320 --> 00:01:14,080
at how they

00:01:11,439 --> 00:01:15,119
applications are entwined within

00:01:14,080 --> 00:01:18,479
regulations

00:01:15,119 --> 00:01:20,400
and compliance issues and

00:01:18,479 --> 00:01:22,640
ultimately how the organization is

00:01:20,400 --> 00:01:24,479
changing as applications

00:01:22,640 --> 00:01:26,080
are commissioned and decommissioned and

00:01:24,479 --> 00:01:30,080
functioned are

00:01:26,080 --> 00:01:30,080
moved around the organization

00:01:30,159 --> 00:01:39,119
we've got a wide set of users

00:01:34,400 --> 00:01:41,680
uh developers project managers analysts

00:01:39,119 --> 00:01:42,960
we've got about 15 000 active users in

00:01:41,680 --> 00:01:44,799
the bank

00:01:42,960 --> 00:01:47,040
uh and we're seeing about two and a half

00:01:44,799 --> 00:01:49,040
thousand user driven changes per month

00:01:47,040 --> 00:01:51,040
plus people coming into volts and

00:01:49,040 --> 00:01:55,840
amending the data in there

00:01:51,040 --> 00:01:55,840
to correct it or to keep it up to date

00:01:56,079 --> 00:02:00,240
walt is now around six years old started

00:01:58,479 --> 00:02:00,960
as a purely open source project upon

00:02:00,240 --> 00:02:02,719
github

00:02:00,960 --> 00:02:05,040
so all of the commits are available

00:02:02,719 --> 00:02:06,479
going back to project inception

00:02:05,040 --> 00:02:08,479
and it was started before i joined the

00:02:06,479 --> 00:02:10,239
bank however bletchley bank were a very

00:02:08,479 --> 00:02:11,520
early adopter and has since become by

00:02:10,239 --> 00:02:14,560
far the largest

00:02:11,520 --> 00:02:16,879
single contributor to the code base

00:02:14,560 --> 00:02:18,640
over that time uh there's been probably

00:02:16,879 --> 00:02:20,400
around three to four developers at any

00:02:18,640 --> 00:02:22,080
one time working on waltz plus an

00:02:20,400 --> 00:02:24,720
analyst or two

00:02:22,080 --> 00:02:25,200
which has added up to quite a bit of

00:02:24,720 --> 00:02:28,319
effort

00:02:25,200 --> 00:02:30,080
over the years and the project

00:02:28,319 --> 00:02:32,000
earlier this year transitioned to the

00:02:30,080 --> 00:02:33,200
finos organization so we went through

00:02:32,000 --> 00:02:36,720
their project

00:02:33,200 --> 00:02:37,200
activation criteria ensuring that we've

00:02:36,720 --> 00:02:40,560
got

00:02:37,200 --> 00:02:43,360
a clean ip and

00:02:40,560 --> 00:02:45,599
our code meets their standards we've

00:02:43,360 --> 00:02:48,400
been in production for four years

00:02:45,599 --> 00:02:49,200
uh deutsche bank and now west markets

00:02:48,400 --> 00:02:52,160
have been in

00:02:49,200 --> 00:02:52,160
for a couple of years

00:02:54,319 --> 00:02:57,760
now i'm going to talk a little bit about

00:02:55,920 --> 00:02:59,599
uh the waltz in detail

00:02:57,760 --> 00:03:02,400
so we'll look at its feature set the

00:02:59,599 --> 00:03:05,360
core entities and how those entities and

00:03:02,400 --> 00:03:06,879
features are used together um this will

00:03:05,360 --> 00:03:09,920
take the form of a demo

00:03:06,879 --> 00:03:11,840
um which will be covering the following

00:03:09,920 --> 00:03:13,040
topics uh we're going to look at the

00:03:11,840 --> 00:03:15,440
building blocks so

00:03:13,040 --> 00:03:17,280
applications or units for example we'll

00:03:15,440 --> 00:03:18,560
look at how data flows are modeled in

00:03:17,280 --> 00:03:20,000
waltz

00:03:18,560 --> 00:03:22,080
look at some of the aggregation

00:03:20,000 --> 00:03:23,519
capabilities and some of the reporting

00:03:22,080 --> 00:03:26,080
that's built in

00:03:23,519 --> 00:03:26,720
we're looking at surveys for capturing

00:03:26,080 --> 00:03:29,040
ad hoc

00:03:26,720 --> 00:03:30,480
data requests and looking at

00:03:29,040 --> 00:03:35,920
attestations

00:03:30,480 --> 00:03:35,920
for ensuring that data is up to date

00:03:41,599 --> 00:03:44,959
applications are one of the fundamental

00:03:43,360 --> 00:03:47,680
building blocks in waltz

00:03:44,959 --> 00:03:48,720
so let's take a quick look at one using

00:03:47,680 --> 00:03:51,680
a recent list

00:03:48,720 --> 00:03:53,040
to open up this sample application uh so

00:03:51,680 --> 00:03:53,840
here we can see the basics about the

00:03:53,040 --> 00:03:55,920
application

00:03:53,840 --> 00:03:57,519
its name where it is in production what

00:03:55,920 --> 00:04:01,280
sort of application it is is

00:03:57,519 --> 00:04:03,360
in-house is it off the shelf etc

00:04:01,280 --> 00:04:05,840
uh this is who owns it so this is a link

00:04:03,360 --> 00:04:07,280
into the organizational hierarchy

00:04:05,840 --> 00:04:09,040
and we can see you know with the

00:04:07,280 --> 00:04:11,760
application being invested

00:04:09,040 --> 00:04:13,519
um aliases we've found are useful quite

00:04:11,760 --> 00:04:14,319
often applications are known by multiple

00:04:13,519 --> 00:04:16,239
names

00:04:14,319 --> 00:04:17,680
or undergo name changes throughout their

00:04:16,239 --> 00:04:19,759
life cycle

00:04:17,680 --> 00:04:21,120
and so in the aliases field we can track

00:04:19,759 --> 00:04:23,360
those

00:04:21,120 --> 00:04:25,040
um complexity rating is currently kind

00:04:23,360 --> 00:04:27,120
of uses things like

00:04:25,040 --> 00:04:29,280
looking at the number of servers or

00:04:27,120 --> 00:04:29,759
number of links an application has to

00:04:29,280 --> 00:04:32,639
other

00:04:29,759 --> 00:04:33,440
other applications to try and give a

00:04:32,639 --> 00:04:36,639
ballpark

00:04:33,440 --> 00:04:38,320
uh complexity estimate uh alongside

00:04:36,639 --> 00:04:40,639
a bunch of other bits and pieces such as

00:04:38,320 --> 00:04:42,880
retirement dates etc

00:04:40,639 --> 00:04:44,479
um going into more detail we have these

00:04:42,880 --> 00:04:45,440
sections so we have one first day

00:04:44,479 --> 00:04:47,600
bookmarks

00:04:45,440 --> 00:04:49,120
where we look at uh key bookmarks and

00:04:47,600 --> 00:04:51,600
applications so

00:04:49,120 --> 00:04:53,680
uh we might ask for people to fill in

00:04:51,600 --> 00:04:55,600
things like links to source code

00:04:53,680 --> 00:04:57,040
links to documentation links to issue

00:04:55,600 --> 00:04:59,040
trackers

00:04:57,040 --> 00:05:00,479
we'll ask or we can bring in information

00:04:59,040 --> 00:05:02,479
about costs

00:05:00,479 --> 00:05:03,680
so this is typically imported from other

00:05:02,479 --> 00:05:05,919
systems

00:05:03,680 --> 00:05:08,000
to give us a feel for relative sizes of

00:05:05,919 --> 00:05:10,800
applications

00:05:08,000 --> 00:05:12,960
we have some basic stats that we capture

00:05:10,800 --> 00:05:13,919
around every application

00:05:12,960 --> 00:05:16,560
quite often these are things like

00:05:13,919 --> 00:05:21,919
compliance measures or

00:05:16,560 --> 00:05:25,039
stats say number of database tables etc

00:05:21,919 --> 00:05:26,240
people this is looking at we've got

00:05:25,039 --> 00:05:27,759
usually bring in the entire

00:05:26,240 --> 00:05:31,520
organizational

00:05:27,759 --> 00:05:33,680
tree and link people to applications

00:05:31,520 --> 00:05:34,560
uh this allows them to quickly show all

00:05:33,680 --> 00:05:37,919
of the

00:05:34,560 --> 00:05:38,560
apps belong to people and pivot the data

00:05:37,919 --> 00:05:41,440
that way

00:05:38,560 --> 00:05:42,880
which we'll see shortly um the other one

00:05:41,440 --> 00:05:45,600
i want to focus on right now

00:05:42,880 --> 00:05:46,000
is on technology uh so here we can still

00:05:45,600 --> 00:05:48,639
see

00:05:46,000 --> 00:05:50,960
okay these are brought in it's a list of

00:05:48,639 --> 00:05:53,759
servers associated with the applications

00:05:50,960 --> 00:05:54,960
or databases or software for instance

00:05:53,759 --> 00:05:58,000
we've linked

00:05:54,960 --> 00:05:58,560
our instance of waltz to artifactory to

00:05:58,000 --> 00:06:01,440
bring in

00:05:58,560 --> 00:06:02,560
a detailed software breakdown for each

00:06:01,440 --> 00:06:05,039
application

00:06:02,560 --> 00:06:06,199
and from there we can work out licenses

00:06:05,039 --> 00:06:09,440
and things like

00:06:06,199 --> 00:06:12,479
vulnerabilities in terms of risk

00:06:09,440 --> 00:06:13,199
for license risk looking at incompatible

00:06:12,479 --> 00:06:20,000
licenses

00:06:13,199 --> 00:06:21,840
for example

00:06:20,000 --> 00:06:23,199
of the mechanisms that walt offers for

00:06:21,840 --> 00:06:25,759
capturing custom data around

00:06:23,199 --> 00:06:27,120
applications are assessments and ratings

00:06:25,759 --> 00:06:28,960
assessments are kind of like a single

00:06:27,120 --> 00:06:30,880
data point about an application

00:06:28,960 --> 00:06:32,639
so we have assessment definitions for

00:06:30,880 --> 00:06:35,520
things like records management

00:06:32,639 --> 00:06:36,319
legal holes compliance with various

00:06:35,520 --> 00:06:39,440
policies

00:06:36,319 --> 00:06:41,120
etc they're stored here and users can

00:06:39,440 --> 00:06:43,039
either input them directly

00:06:41,120 --> 00:06:44,800
into the application or they can be

00:06:43,039 --> 00:06:46,720
provided programmatically and marked as

00:06:44,800 --> 00:06:49,680
read-only

00:06:46,720 --> 00:06:51,919
in addition to assessments walt supports

00:06:49,680 --> 00:06:53,599
aligning applications to taxonomies by

00:06:51,919 --> 00:06:55,280
the ratings mechanism

00:06:53,599 --> 00:06:56,880
so in here we've got ratings for an

00:06:55,280 --> 00:06:58,560
application in this case it's just

00:06:56,880 --> 00:07:00,720
aligned against one of the taxonomies

00:06:58,560 --> 00:07:02,400
involves the functional taxonomy

00:07:00,720 --> 00:07:04,240
and we can see here that three items

00:07:02,400 --> 00:07:06,479
have been uh chosen

00:07:04,240 --> 00:07:08,639
so it's got positions risk and reporting

00:07:06,479 --> 00:07:09,599
uh little icons next to them indicate

00:07:08,639 --> 00:07:12,479
things like

00:07:09,599 --> 00:07:14,479
this function is being retired from this

00:07:12,479 --> 00:07:17,680
application at a certain date

00:07:14,479 --> 00:07:19,599
uh the handover icon implies that this

00:07:17,680 --> 00:07:21,440
application is taking on board this

00:07:19,599 --> 00:07:23,039
function from another application

00:07:21,440 --> 00:07:24,960
and the little pointer says that this

00:07:23,039 --> 00:07:27,759
application is handing off this function

00:07:24,960 --> 00:07:29,599
somewhere else so i can see from here

00:07:27,759 --> 00:07:30,000
just at the glance that this application

00:07:29,599 --> 00:07:32,560
is really

00:07:30,000 --> 00:07:35,039
consolidating around the risk function

00:07:32,560 --> 00:07:37,039
uh the little pie charts indicate

00:07:35,039 --> 00:07:38,400
that there are allocations associated

00:07:37,039 --> 00:07:40,479
with this application

00:07:38,400 --> 00:07:41,840
so here we can see okay there's a cost

00:07:40,479 --> 00:07:43,599
allocation scheme

00:07:41,840 --> 00:07:45,599
and we can see what the breakdown is for

00:07:43,599 --> 00:07:48,879
this application these are of course

00:07:45,599 --> 00:07:52,960
either user editable or can be provided

00:07:48,879 --> 00:07:52,960
via external systems and marketers read

00:07:56,840 --> 00:07:59,840
only

00:08:04,000 --> 00:08:07,680
another key aspect of waltz is looking

00:08:05,919 --> 00:08:10,160
at data and data flows

00:08:07,680 --> 00:08:12,400
within an organization to that end we

00:08:10,160 --> 00:08:13,680
have a data taxonomy which you may

00:08:12,400 --> 00:08:14,800
declare which just registers all the

00:08:13,680 --> 00:08:16,080
data types

00:08:14,800 --> 00:08:18,720
uh here's a sample one that we've

00:08:16,080 --> 00:08:21,759
generated for the test data

00:08:18,720 --> 00:08:23,599
and we can also declare uh

00:08:21,759 --> 00:08:24,960
which systems are authoritative for

00:08:23,599 --> 00:08:27,680
those data types

00:08:24,960 --> 00:08:28,800
so this table here shows okay for this

00:08:27,680 --> 00:08:31,120
data type

00:08:28,800 --> 00:08:32,240
for this part of the organization and

00:08:31,120 --> 00:08:34,080
this is either an

00:08:32,240 --> 00:08:36,640
authoritative or a secondary source of

00:08:34,080 --> 00:08:39,360
data for that

00:08:36,640 --> 00:08:40,320
for that data type we look at how that

00:08:39,360 --> 00:08:42,080
looks in practice

00:08:40,320 --> 00:08:43,599
on an application level let's go and

00:08:42,080 --> 00:08:45,519
take another look at

00:08:43,599 --> 00:08:46,800
the application we're looking at earlier

00:08:45,519 --> 00:08:49,760
and look

00:08:46,800 --> 00:08:50,880
at the data flow section so here we can

00:08:49,760 --> 00:08:53,200
see a breakdown

00:08:50,880 --> 00:08:54,720
of various aspects of the data flows

00:08:53,200 --> 00:08:57,519
that we have for this application

00:08:54,720 --> 00:08:59,440
but the main bit concerned with is this

00:08:57,519 --> 00:09:01,760
diagram at the bottom

00:08:59,440 --> 00:09:02,640
this shows fairly clearly the upstream

00:09:01,760 --> 00:09:05,440
systems

00:09:02,640 --> 00:09:06,080
the downstream systems and our system in

00:09:05,440 --> 00:09:08,800
the middle

00:09:06,080 --> 00:09:10,480
fox terrier it's broken down by the data

00:09:08,800 --> 00:09:14,000
types

00:09:10,480 --> 00:09:15,839
that it consumes or produces and we can

00:09:14,000 --> 00:09:16,399
see okay these systems are feeding it

00:09:15,839 --> 00:09:18,480
these

00:09:16,399 --> 00:09:20,080
it's sending out to the system these

00:09:18,480 --> 00:09:21,440
little annotations here

00:09:20,080 --> 00:09:23,760
are just showing you whether or not we

00:09:21,440 --> 00:09:24,800
have examples of the types of data

00:09:23,760 --> 00:09:26,480
that's being fed

00:09:24,800 --> 00:09:29,279
so whether people have documented the

00:09:26,480 --> 00:09:32,720
actual flow specifications

00:09:29,279 --> 00:09:34,720
um if we take a

00:09:32,720 --> 00:09:36,640
closer look at these so we can see okay

00:09:34,720 --> 00:09:38,320
here's the file

00:09:36,640 --> 00:09:39,680
and in this one there should be more

00:09:38,320 --> 00:09:41,279
than one file because the icon is

00:09:39,680 --> 00:09:42,640
slightly different

00:09:41,279 --> 00:09:44,560
uh just indicating that there are

00:09:42,640 --> 00:09:46,480
multiple files there

00:09:44,560 --> 00:09:48,000
the colors on these lines go back to

00:09:46,480 --> 00:09:49,519
those authoritative sources we talked

00:09:48,000 --> 00:09:52,080
about a few minutes ago

00:09:49,519 --> 00:09:53,040
so american fox sound for example has

00:09:52,080 --> 00:09:56,959
been

00:09:53,040 --> 00:09:58,399
uh identified as an authoritative source

00:09:56,959 --> 00:10:01,920
for transaction data

00:09:58,399 --> 00:10:05,360
hence this arc is in green

00:10:01,920 --> 00:10:07,920
whereas whereas

00:10:05,360 --> 00:10:08,399
these applications if transaction data

00:10:07,920 --> 00:10:10,800
there may

00:10:08,399 --> 00:10:12,399
there is an authoritative source but it

00:10:10,800 --> 00:10:15,440
isn't tiffany

00:10:12,399 --> 00:10:16,079
which is why it'd be red where the line

00:10:15,440 --> 00:10:18,320
is black

00:10:16,079 --> 00:10:19,680
that's just indicating that no

00:10:18,320 --> 00:10:22,000
authoritative statement

00:10:19,680 --> 00:10:25,839
covers this type of data for this part

00:10:22,000 --> 00:10:28,959
of the bank or part of the organization

00:10:25,839 --> 00:10:30,480
um we can focus in on these especially

00:10:28,959 --> 00:10:31,600
useful when the diagrams get more

00:10:30,480 --> 00:10:34,640
complex

00:10:31,600 --> 00:10:36,240
and we can add new ones fairly simply

00:10:34,640 --> 00:10:39,040
although there's a mixture at the moment

00:10:36,240 --> 00:10:41,200
of these things being registered by hand

00:10:39,040 --> 00:10:43,760
and registered programmatically from

00:10:41,200 --> 00:10:45,680
other sources

00:10:43,760 --> 00:10:47,760
we also have this other annotation here

00:10:45,680 --> 00:10:49,200
which shows a pending change

00:10:47,760 --> 00:10:50,959
uh so this is something that's fairly

00:10:49,200 --> 00:10:54,079
new uh if we look at

00:10:50,959 --> 00:10:55,760
change sets coming into this application

00:10:54,079 --> 00:10:58,800
we can see that there's

00:10:55,760 --> 00:11:01,839
one change set associated with it uh and

00:10:58,800 --> 00:11:05,360
it's got him in particular a bunch of

00:11:01,839 --> 00:11:06,240
uh flow changes which are potentially

00:11:05,360 --> 00:11:08,640
affecting

00:11:06,240 --> 00:11:11,360
this application so here we can see one

00:11:08,640 --> 00:11:14,959
that there is a retirement of this

00:11:11,360 --> 00:11:18,240
report pending as part of this change

00:11:14,959 --> 00:11:21,519
which can optionally be linked to a

00:11:18,240 --> 00:11:25,279
change initiative declaration

00:11:21,519 --> 00:11:28,399
if we go back to our application

00:11:25,279 --> 00:11:30,079
we can start looking at the flows in

00:11:28,399 --> 00:11:30,480
more detail taking more of a lineage

00:11:30,079 --> 00:11:32,079
view

00:11:30,480 --> 00:11:34,640
so this has given us very much a sort of

00:11:32,079 --> 00:11:36,240
point point of neighbors

00:11:34,640 --> 00:11:38,000
kind of view you know upstream and

00:11:36,240 --> 00:11:39,279
downstream neighbors

00:11:38,000 --> 00:11:41,519
but we may want to show more of a

00:11:39,279 --> 00:11:43,680
lineage type view

00:11:41,519 --> 00:11:44,640
now to that end we have the diagram

00:11:43,680 --> 00:11:47,040
section

00:11:44,640 --> 00:11:48,160
and you can create diagrams in walls

00:11:47,040 --> 00:11:51,200
quite quickly

00:11:48,160 --> 00:11:53,040
using a kind of constrained uh editor

00:11:51,200 --> 00:11:55,360
so this is one i just drew earlier

00:11:53,040 --> 00:11:57,440
started at foxteria and worked backwards

00:11:55,360 --> 00:12:00,000
through the systems showing you know

00:11:57,440 --> 00:12:01,440
which data is being fed by which systems

00:12:00,000 --> 00:12:03,920
so it's just showing you the upstream

00:12:01,440 --> 00:12:06,160
systems uh and these little

00:12:03,920 --> 00:12:08,560
things in the circle just where we have

00:12:06,160 --> 00:12:10,079
documentation for the actual flows that

00:12:08,560 --> 00:12:12,399
have been passed

00:12:10,079 --> 00:12:14,320
the question marks when we don't and you

00:12:12,399 --> 00:12:15,279
can add basic annotations onto the

00:12:14,320 --> 00:12:17,279
diagram

00:12:15,279 --> 00:12:18,880
changing the diagram is quite simple if

00:12:17,279 --> 00:12:21,440
we wanted to add

00:12:18,880 --> 00:12:23,600
a new system it then goes and queries

00:12:21,440 --> 00:12:25,200
the

00:12:23,600 --> 00:12:26,959
the flow information that we have in

00:12:25,200 --> 00:12:29,760
waltz and just shows you

00:12:26,959 --> 00:12:31,920
uh only the possible upstream systems so

00:12:29,760 --> 00:12:35,920
we can say okay i want to show

00:12:31,920 --> 00:12:36,639
these three systems and go through and

00:12:35,920 --> 00:12:39,279
again

00:12:36,639 --> 00:12:40,399
using the constraints we can say okay i

00:12:39,279 --> 00:12:45,680
want to show

00:12:40,399 --> 00:12:45,680
just those two flows once this is saved

00:12:46,399 --> 00:12:50,399
this diagram will be cross-referenced

00:12:48,800 --> 00:12:51,040
against every system that is mentioned

00:12:50,399 --> 00:12:53,760
within it

00:12:51,040 --> 00:12:55,200
so i think we just included one bat so

00:12:53,760 --> 00:12:56,079
if we go and have a look at one batch we

00:12:55,200 --> 00:12:58,480
can see

00:12:56,079 --> 00:12:59,519
it is now being cross-referenced on that

00:12:58,480 --> 00:13:00,800
diagram

00:12:59,519 --> 00:13:03,519
effectively we're starting a kind of

00:13:00,800 --> 00:13:05,040
billet materials behind each diagram so

00:13:03,519 --> 00:13:07,279
that we can do that cross-referencing

00:13:05,040 --> 00:13:09,040
quickly and that goes down to every part

00:13:07,279 --> 00:13:10,480
of the diagram so every

00:13:09,040 --> 00:13:13,040
flow that's mentioned on there every

00:13:10,480 --> 00:13:17,120
file will be

00:13:13,040 --> 00:13:17,120
indexed and cross-referenced to this

00:13:18,839 --> 00:13:21,839
diagram

00:13:23,279 --> 00:13:28,160
so far we've been primarily looking at

00:13:25,519 --> 00:13:30,959
individual applications in waltz and

00:13:28,160 --> 00:13:32,639
describing the characteristics of those

00:13:30,959 --> 00:13:36,000
mods can also

00:13:32,639 --> 00:13:39,040
be used to aggregate applications either

00:13:36,000 --> 00:13:39,920
by sort of intrinsic uh aggregation

00:13:39,040 --> 00:13:43,199
groups

00:13:39,920 --> 00:13:46,160
such as old units people or via

00:13:43,199 --> 00:13:46,880
sort of user-defined mechanisms such as

00:13:46,160 --> 00:13:49,199
ad-hoc

00:13:46,880 --> 00:13:50,560
application groups so we're taking a

00:13:49,199 --> 00:13:53,519
look at uh

00:13:50,560 --> 00:13:55,680
say auger unit as a grouping mechanism

00:13:53,519 --> 00:13:58,639
so we'll look at one of the old units

00:13:55,680 --> 00:14:00,160
cio office and you can see it's got 24

00:13:58,639 --> 00:14:03,360
applications in this group

00:14:00,160 --> 00:14:06,480
sample data we can see you know the

00:14:03,360 --> 00:14:10,639
applications that make this up

00:14:06,480 --> 00:14:13,680
uh the costs complexity etc

00:14:10,639 --> 00:14:14,160
any indicators that are there which are

00:14:13,680 --> 00:14:16,560
the

00:14:14,160 --> 00:14:18,560
we use extensively in the bank for some

00:14:16,560 --> 00:14:21,839
kpis kris

00:14:18,560 --> 00:14:24,000
um this lets us

00:14:21,839 --> 00:14:25,519
quickly view how well we're doing i

00:14:24,000 --> 00:14:27,279
guess across these measures

00:14:25,519 --> 00:14:28,800
but also jump off to get more detail

00:14:27,279 --> 00:14:30,800
about we know what actually makes up

00:14:28,800 --> 00:14:33,279
those numbers and also to do quick

00:14:30,800 --> 00:14:35,600
comparison so we can compare across

00:14:33,279 --> 00:14:37,199
parts of the bank quite quickly by using

00:14:35,600 --> 00:14:40,480
this little uh

00:14:37,199 --> 00:14:42,720
mini navigation selector here

00:14:40,480 --> 00:14:44,480
um going back to this list here we can

00:14:42,720 --> 00:14:45,519
see we've also got things such as

00:14:44,480 --> 00:14:47,279
stations

00:14:45,519 --> 00:14:49,440
so in this case we've got notice

00:14:47,279 --> 00:14:51,600
stations but we can schedule attestation

00:14:49,440 --> 00:14:55,120
runs for different types of data

00:14:51,600 --> 00:14:58,639
so far once we've got a station support

00:14:55,120 --> 00:15:02,480
for flows physical flows and

00:14:58,639 --> 00:15:06,320
for the taxonomy

00:15:02,480 --> 00:15:08,000
ratings we

00:15:06,320 --> 00:15:09,920
can have bookmarks linked exchange

00:15:08,000 --> 00:15:11,839
initiatives data flows

00:15:09,920 --> 00:15:14,000
is where we start seeing the data in

00:15:11,839 --> 00:15:15,199
aggregate here so we've got a force

00:15:14,000 --> 00:15:16,959
directed graph

00:15:15,199 --> 00:15:18,399
uh obviously due to the sample date of

00:15:16,959 --> 00:15:20,639
nature uh

00:15:18,399 --> 00:15:22,000
it looks a bit of a mess but we can do

00:15:20,639 --> 00:15:25,839
things like filter it out

00:15:22,000 --> 00:15:28,959
according to data type um

00:15:25,839 --> 00:15:34,399
or show only inbound flows

00:15:28,959 --> 00:15:34,399
um or outbound flows

00:15:35,680 --> 00:15:39,279
obviously the full data is available as

00:15:37,519 --> 00:15:41,839
well should you wish to

00:15:39,279 --> 00:15:41,839
export it

00:15:42,959 --> 00:15:49,120
the ratings section is quite useful

00:15:46,560 --> 00:15:49,120
uh the

00:15:49,600 --> 00:15:54,880
ratings that we were looking at earlier

00:15:50,959 --> 00:15:57,839
so we've aligned i think foxteria

00:15:54,880 --> 00:15:58,720
to risk uh we can see now for this group

00:15:57,839 --> 00:16:01,680
of applications

00:15:58,720 --> 00:16:03,279
within the cio office on unit uh this is

00:16:01,680 --> 00:16:05,680
their sort of functional

00:16:03,279 --> 00:16:06,800
makeup and we can also see here some of

00:16:05,680 --> 00:16:08,320
the other taxonomies

00:16:06,800 --> 00:16:10,399
that during this sample data sets we've

00:16:08,320 --> 00:16:13,279
got an example process taxonomy a

00:16:10,399 --> 00:16:15,600
product tax on your regulatory taxonomy

00:16:13,279 --> 00:16:15,600
um

00:16:18,480 --> 00:16:22,800
drilling an edge one of these shows you

00:16:20,240 --> 00:16:24,560
the actually the data underneath

00:16:22,800 --> 00:16:26,240
so we can drill in and say okay these

00:16:24,560 --> 00:16:27,360
are the applications that make up these

00:16:26,240 --> 00:16:29,759
little bar charts

00:16:27,360 --> 00:16:31,120
which are aggregated up and color coded

00:16:29,759 --> 00:16:34,320
according to the

00:16:31,120 --> 00:16:36,000
ratings used within that taxonomy

00:16:34,320 --> 00:16:37,600
so in this example we just got a very

00:16:36,000 --> 00:16:41,600
simple sort of

00:16:37,600 --> 00:16:44,720
uh rgb so an rgb uh

00:16:41,600 --> 00:16:48,240
rag rank status uh

00:16:44,720 --> 00:16:50,720
for um the ratings on those applications

00:16:48,240 --> 00:16:53,600
to the function um

00:16:50,720 --> 00:16:55,519
reports is kind of new uh so we've added

00:16:53,600 --> 00:16:57,199
this thing called the data grid

00:16:55,519 --> 00:16:59,040
very interesting one let me switch to

00:16:57,199 --> 00:17:00,480
this one this is to support

00:16:59,040 --> 00:17:02,839
uh some of the cloud readiness thing

00:17:00,480 --> 00:17:04,160
that we're doing in the bank at the

00:17:02,839 --> 00:17:07,439
moment um

00:17:04,160 --> 00:17:09,600
so this allows us to cherry pick

00:17:07,439 --> 00:17:10,640
a set of attributes so either

00:17:09,600 --> 00:17:13,919
assessments

00:17:10,640 --> 00:17:15,039
or the measurables sorry the taxonomy

00:17:13,919 --> 00:17:18,319
ratings

00:17:15,039 --> 00:17:19,600
and define them in a grid and then the

00:17:18,319 --> 00:17:22,559
applications

00:17:19,600 --> 00:17:23,280
in this group or any group would be the

00:17:22,559 --> 00:17:24,720
rows

00:17:23,280 --> 00:17:27,120
and we can quickly see we've got this

00:17:24,720 --> 00:17:30,559
nice data grid

00:17:27,120 --> 00:17:33,520
and we can add these to the

00:17:30,559 --> 00:17:34,320
summarizing columns so we added into

00:17:33,520 --> 00:17:35,919
summaries

00:17:34,320 --> 00:17:37,600
we can quickly use these as sort of

00:17:35,919 --> 00:17:39,840
filter mechanisms

00:17:37,600 --> 00:17:41,440
to say show me you know all the

00:17:39,840 --> 00:17:43,919
applications

00:17:41,440 --> 00:17:46,240
uh which are good or adequate for bcbs

00:17:43,919 --> 00:17:46,640
and adequate for governance obviously

00:17:46,240 --> 00:17:49,039
these

00:17:46,640 --> 00:17:50,559
uh ratings would make more sense uh with

00:17:49,039 --> 00:17:52,400
realistic data

00:17:50,559 --> 00:17:53,760
but we're finding that quite useful in

00:17:52,400 --> 00:17:56,240
particular we're looking at it for

00:17:53,760 --> 00:17:59,120
cloud readiness so we have assessments

00:17:56,240 --> 00:18:01,039
based upon you know how

00:17:59,120 --> 00:18:02,960
how well suited your we think

00:18:01,039 --> 00:18:07,200
applications are

00:18:02,960 --> 00:18:07,200
to migrate to cloud infrastructure

00:18:10,480 --> 00:18:18,000
other types of aggregation

00:18:14,640 --> 00:18:20,320
uh are things like people

00:18:18,000 --> 00:18:21,919
you can see here we've got a person we

00:18:20,320 --> 00:18:23,120
can see they've got a very similar set

00:18:21,919 --> 00:18:25,600
of views

00:18:23,120 --> 00:18:27,600
they've got costs and things we've got

00:18:25,600 --> 00:18:29,039
the same ratings type of view

00:18:27,600 --> 00:18:30,960
we've got the same reports which are

00:18:29,039 --> 00:18:33,039
dynamically generated just for that

00:18:30,960 --> 00:18:35,120
person and the applications that they

00:18:33,039 --> 00:18:38,400
are involved with

00:18:35,120 --> 00:18:41,200
we can do the same for the functions

00:18:38,400 --> 00:18:43,200
or any of the taxonomy items so looking

00:18:41,200 --> 00:18:45,120
at risk the function

00:18:43,200 --> 00:18:46,720
we can see you know the same sort of

00:18:45,120 --> 00:18:50,720
thing we've got the applications

00:18:46,720 --> 00:18:55,120
the data flows we've got the

00:18:50,720 --> 00:18:55,120
the ratings and reports etc

00:18:55,360 --> 00:19:00,240
we can also define custom map groups

00:18:58,400 --> 00:19:01,440
so when there isn't a sort of uh

00:19:00,240 --> 00:19:04,720
intrinsic

00:19:01,440 --> 00:19:08,240
uh organizing mechanism such as people

00:19:04,720 --> 00:19:09,760
or gears taxonomy items we can define ad

00:19:08,240 --> 00:19:10,000
hoc groups where we can just create a

00:19:09,760 --> 00:19:12,960
new

00:19:10,000 --> 00:19:13,600
group and add applications to it there's

00:19:12,960 --> 00:19:16,559
also

00:19:13,600 --> 00:19:17,679
a app group for every person called the

00:19:16,559 --> 00:19:19,360
favorite group

00:19:17,679 --> 00:19:20,960
where if you add applications to that

00:19:19,360 --> 00:19:23,919
group

00:19:20,960 --> 00:19:26,000
either by editing the group or as you're

00:19:23,919 --> 00:19:29,039
navigating through waltz

00:19:26,000 --> 00:19:30,559
you can add them by the little bookmark

00:19:29,039 --> 00:19:33,280
icon here

00:19:30,559 --> 00:19:34,000
uh then it gets added to your favorite

00:19:33,280 --> 00:19:36,160
group

00:19:34,000 --> 00:19:37,200
and then anytime the application or any

00:19:36,160 --> 00:19:40,240
of the apps in this group

00:19:37,200 --> 00:19:42,320
change in terms of you know their

00:19:40,240 --> 00:19:44,400
records and waltz get updated so new

00:19:42,320 --> 00:19:47,679
flows new functions

00:19:44,400 --> 00:19:51,280
uh new bookmarks uh then

00:19:47,679 --> 00:19:53,600
this calendar chart will be filled in

00:19:51,280 --> 00:19:54,799
uh letting you know that there's been

00:19:53,600 --> 00:19:56,160
some changes

00:19:54,799 --> 00:19:58,320
to apps that you're possibly interested

00:19:56,160 --> 00:20:00,320
in and you can drill in and say hey

00:19:58,320 --> 00:20:02,799
what's actually happened

00:20:00,320 --> 00:20:05,120
so here i can drill in and see okay for

00:20:02,799 --> 00:20:06,880
this application on this day

00:20:05,120 --> 00:20:08,400
you know there's a flow added remove

00:20:06,880 --> 00:20:10,880
data from application modify the

00:20:08,400 --> 00:20:10,880
application

00:20:15,679 --> 00:20:21,120
another key usage of waltz within

00:20:18,159 --> 00:20:24,559
organizations is around its ability to

00:20:21,120 --> 00:20:27,600
issue surveys to collect uh data

00:20:24,559 --> 00:20:28,159
in an ad hoc basis um surveys can be

00:20:27,600 --> 00:20:31,039
defined

00:20:28,159 --> 00:20:32,960
by administrators uh for example here's

00:20:31,039 --> 00:20:35,520
the one we created earlier

00:20:32,960 --> 00:20:37,200
where's the templates get a demo survey

00:20:35,520 --> 00:20:37,919
so we've got a very simple survey which

00:20:37,200 --> 00:20:40,799
has got some

00:20:37,919 --> 00:20:42,080
questions uh says fictitious cloud

00:20:40,799 --> 00:20:44,480
migration

00:20:42,080 --> 00:20:46,159
uh but we can also have things like

00:20:44,480 --> 00:20:47,280
conditional questions and conditional

00:20:46,159 --> 00:20:50,799
questions can take

00:20:47,280 --> 00:20:52,720
two forms they can either be

00:20:50,799 --> 00:20:54,080
predicated questions can be predicated

00:20:52,720 --> 00:20:56,799
on

00:20:54,080 --> 00:20:58,240
previous answers within the same survey

00:20:56,799 --> 00:21:01,120
so this is a simple

00:20:58,240 --> 00:21:02,320
this question appears if this value is

00:21:01,120 --> 00:21:04,000
checked uh

00:21:02,320 --> 00:21:05,600
this one appears if this value is

00:21:04,000 --> 00:21:07,520
greater than six

00:21:05,600 --> 00:21:08,960
but there can also be ones that are more

00:21:07,520 --> 00:21:11,360
environmental

00:21:08,960 --> 00:21:12,880
predicates so this is looking at a

00:21:11,360 --> 00:21:13,840
attribute of the application being

00:21:12,880 --> 00:21:15,679
surveyed

00:21:13,840 --> 00:21:17,440
and saying does its sensitive data

00:21:15,679 --> 00:21:20,080
assessment rating equal s

00:21:17,440 --> 00:21:21,520
which is the code for sensitive in our

00:21:20,080 --> 00:21:24,000
data model

00:21:21,520 --> 00:21:25,039
uh that we've defined uh we've got to

00:21:24,000 --> 00:21:25,919
have a look at how that works in

00:21:25,039 --> 00:21:28,320
practice

00:21:25,919 --> 00:21:30,080
we'll have a look at foxterria see i've

00:21:28,320 --> 00:21:31,760
currently said it's sensitive data flag

00:21:30,080 --> 00:21:34,960
to just internal

00:21:31,760 --> 00:21:36,720
or we can set it to lower and just say

00:21:34,960 --> 00:21:38,640
it's public

00:21:36,720 --> 00:21:41,039
so now when we look at this assessment

00:21:38,640 --> 00:21:44,400
also in this look at this survey

00:21:41,039 --> 00:21:46,480
we should see okay we've got even scope

00:21:44,400 --> 00:21:47,919
yes no with the first predicate the

00:21:46,480 --> 00:21:51,039
other question was you know it was

00:21:47,919 --> 00:21:52,799
greater than six than a high estimate

00:21:51,039 --> 00:21:54,559
but we're not seeing that question about

00:21:52,799 --> 00:21:58,400
sensitive data

00:21:54,559 --> 00:22:01,679
if we uh go back

00:21:58,400 --> 00:22:02,480
and we change the sensitive data

00:22:01,679 --> 00:22:04,480
assessment

00:22:02,480 --> 00:22:06,159
for this application and say that it is

00:22:04,480 --> 00:22:07,919
strictly confidential

00:22:06,159 --> 00:22:09,679
so if that and we go and go back into

00:22:07,919 --> 00:22:12,799
the survey you can see

00:22:09,679 --> 00:22:15,760
we've now got this question

00:22:12,799 --> 00:22:17,600
appearing for the sensitive data

00:22:15,760 --> 00:22:20,960
question

00:22:17,600 --> 00:22:23,360
once a survey is submitted it can be

00:22:20,960 --> 00:22:25,520
sent back to its owners

00:22:23,360 --> 00:22:26,640
people who issued it and they can either

00:22:25,520 --> 00:22:28,640
approve or

00:22:26,640 --> 00:22:31,200
reject the survey if it needs more work

00:22:28,640 --> 00:22:31,200
doing to it

00:22:31,360 --> 00:22:35,200
also when surveys are created there's

00:22:33,840 --> 00:22:37,120
two real ways of

00:22:35,200 --> 00:22:41,520
initiating a survey one is kind of ad

00:22:37,120 --> 00:22:44,159
hoc applications can sort of self

00:22:41,520 --> 00:22:45,200
applications can sort of raise their own

00:22:44,159 --> 00:22:47,200
issues

00:22:45,200 --> 00:22:48,960
or people can raise them on a

00:22:47,200 --> 00:22:51,280
case-by-case basis

00:22:48,960 --> 00:22:52,080
the other way of raising surveys is you

00:22:51,280 --> 00:22:55,440
can

00:22:52,080 --> 00:22:59,039
create a survey run

00:22:55,440 --> 00:23:01,520
um where we go into the template

00:22:59,039 --> 00:23:02,559
we can say okay i want to create a run

00:23:01,520 --> 00:23:04,159
and here we say

00:23:02,559 --> 00:23:05,679
what we're actually doing is we want to

00:23:04,159 --> 00:23:08,159
issue this survey

00:23:05,679 --> 00:23:09,440
to a set of applications or change

00:23:08,159 --> 00:23:11,440
initiatives

00:23:09,440 --> 00:23:13,120
which meets certain criteria so give it

00:23:11,440 --> 00:23:15,440
a run name

00:23:13,120 --> 00:23:17,280
some contact details but here's the key

00:23:15,440 --> 00:23:17,840
bit we can say okay send it to everyone

00:23:17,280 --> 00:23:19,840
in this app

00:23:17,840 --> 00:23:21,679
group and do everything this og unit

00:23:19,840 --> 00:23:24,960
send it to applications

00:23:21,679 --> 00:23:28,159
that do this taxonomy item

00:23:24,960 --> 00:23:29,440
the exact is whether or not you want to

00:23:28,159 --> 00:23:31,600
send it to children

00:23:29,440 --> 00:23:33,039
of this org unit as well so say we just

00:23:31,600 --> 00:23:34,799
sent it to

00:23:33,039 --> 00:23:37,200
the risk department we might want all of

00:23:34,799 --> 00:23:39,520
the uh the sub departments to also fill

00:23:37,200 --> 00:23:39,520
this in

00:23:41,520 --> 00:23:44,720
a uh risk it that would include all the

00:23:43,840 --> 00:23:47,520
other item

00:23:44,720 --> 00:23:48,320
the risk departments uh there is a

00:23:47,520 --> 00:23:50,240
question of who

00:23:48,320 --> 00:23:51,919
is going to be filling this in this is

00:23:50,240 --> 00:23:53,120
again where we start reaching into the

00:23:51,919 --> 00:23:55,120
waltz data model

00:23:53,120 --> 00:23:56,240
and so okay we now know from this

00:23:55,120 --> 00:23:58,159
selector

00:23:56,240 --> 00:23:59,679
uh which applications are involved so

00:23:58,159 --> 00:24:01,840
everything to do with risk

00:23:59,679 --> 00:24:02,880
everything associated with risk i.t the

00:24:01,840 --> 00:24:04,799
og unit

00:24:02,880 --> 00:24:06,400
and now what we want to do is we want it

00:24:04,799 --> 00:24:08,799
to be the data owner

00:24:06,400 --> 00:24:10,320
the architect the iit architect and the

00:24:08,799 --> 00:24:12,720
it lead

00:24:10,320 --> 00:24:14,880
and we can then say okay who how do you

00:24:12,720 --> 00:24:18,400
want this to be filled in

00:24:14,880 --> 00:24:20,000
is it for a group as in anyone can fill

00:24:18,400 --> 00:24:22,400
it in or is this an individual

00:24:20,000 --> 00:24:25,120
everyone has to fill it in once we've

00:24:22,400 --> 00:24:27,360
filled in the rest of the data

00:24:25,120 --> 00:24:29,840
then we should be able to issue that

00:24:27,360 --> 00:24:29,840
survey

00:24:31,039 --> 00:24:35,039
and we haven't managed to catch my

00:24:33,360 --> 00:24:38,000
sample data anyone

00:24:35,039 --> 00:24:38,000
who is

00:24:42,000 --> 00:24:47,200
is there we issue the survey and now

00:24:44,559 --> 00:24:50,000
that survey run has been generated

00:24:47,200 --> 00:24:51,360
click create an email if you wish to uh

00:24:50,000 --> 00:24:52,640
but we can also obviously we've got a

00:24:51,360 --> 00:24:55,039
new run

00:24:52,640 --> 00:24:56,880
uh where we can see that there are seven

00:24:55,039 --> 00:24:58,240
uh surveys outstanding now you may have

00:24:56,880 --> 00:24:59,120
noticed that there was a lot more people

00:24:58,240 --> 00:25:00,880
listed there

00:24:59,120 --> 00:25:02,960
is because the job selecting everyone

00:25:00,880 --> 00:25:05,279
and the group nature of the survey

00:25:02,960 --> 00:25:07,200
means it was only actually seven surveys

00:25:05,279 --> 00:25:09,360
issued but more people have been invited

00:25:07,200 --> 00:25:11,760
to participate

00:25:09,360 --> 00:25:12,799
um yes surveys have proven to be quite

00:25:11,760 --> 00:25:14,640
popular

00:25:12,799 --> 00:25:16,240
we use them a lot around sort of some of

00:25:14,640 --> 00:25:18,960
the governance metrics

00:25:16,240 --> 00:25:19,600
i'll say the governance processes uh so

00:25:18,960 --> 00:25:22,240
funding

00:25:19,600 --> 00:25:23,120
processes and also some of the records

00:25:22,240 --> 00:25:26,640
management

00:25:23,120 --> 00:25:29,039
type of processes

00:25:26,640 --> 00:25:30,559
where we are doing uh in-depth

00:25:29,039 --> 00:25:33,840
questionnaires for applications which

00:25:30,559 --> 00:25:33,840
meet certain criteria

00:25:35,760 --> 00:25:39,840
okay that concludes the demo part i'm

00:25:38,559 --> 00:25:41,760
not going to talk a little bit about you

00:25:39,840 --> 00:25:44,240
know

00:25:41,760 --> 00:25:44,880
know where walt is heading um how to get

00:25:44,240 --> 00:25:47,840
started

00:25:44,880 --> 00:25:48,640
with waltz and how you can start making

00:25:47,840 --> 00:25:51,679
contributions

00:25:48,640 --> 00:25:53,120
should you wish you so

00:25:51,679 --> 00:25:56,159
one of the key challenges that we're

00:25:53,120 --> 00:25:59,440
facing uh in the coming sort of months

00:25:56,159 --> 00:26:02,080
years is uh the gradual shift

00:25:59,440 --> 00:26:02,720
of the unit of sort of deployment moving

00:26:02,080 --> 00:26:04,720
from sort of

00:26:02,720 --> 00:26:05,840
applications or monolithic type

00:26:04,720 --> 00:26:07,360
applications

00:26:05,840 --> 00:26:09,279
towards much smaller components

00:26:07,360 --> 00:26:11,840
microservices lambdas

00:26:09,279 --> 00:26:13,120
etc trying to figure out you know how do

00:26:11,840 --> 00:26:16,480
we document those

00:26:13,120 --> 00:26:18,880
what is the correct unit of sort of

00:26:16,480 --> 00:26:20,240
measurement what policies and procedures

00:26:18,880 --> 00:26:23,440
need to be in place

00:26:20,240 --> 00:26:26,320
how can we aggregate them so as not to

00:26:23,440 --> 00:26:29,200
uh basically bombard the owners with

00:26:26,320 --> 00:26:32,480
lots and lots of documentation requests

00:26:29,200 --> 00:26:36,320
um another key part is opening up vaults

00:26:32,480 --> 00:26:37,919
uh the data set of our apis

00:26:36,320 --> 00:26:39,679
so that we've been asked to do quite a

00:26:37,919 --> 00:26:40,799
lot we've done some of that internally

00:26:39,679 --> 00:26:42,720
within the bank

00:26:40,799 --> 00:26:43,840
uh so be looking to how we can

00:26:42,720 --> 00:26:45,440
industrialize some of that and

00:26:43,840 --> 00:26:46,880
contribute that to the open source

00:26:45,440 --> 00:26:50,480
project

00:26:46,880 --> 00:26:52,799
um automated data capture so quite often

00:26:50,480 --> 00:26:54,720
some of the data sets are manual

00:26:52,799 --> 00:26:56,080
and we've written various feeds into

00:26:54,720 --> 00:26:58,320
other systems

00:26:56,080 --> 00:26:59,919
to bring data in it would be nice to

00:26:58,320 --> 00:27:02,720
start exploring

00:26:59,919 --> 00:27:04,080
uh some more sort of official

00:27:02,720 --> 00:27:06,559
integrations

00:27:04,080 --> 00:27:07,360
with other products to bring data sets

00:27:06,559 --> 00:27:09,279
in

00:27:07,360 --> 00:27:11,840
workflow support we've seen some basic

00:27:09,279 --> 00:27:15,120
workflow around things like the surveys

00:27:11,840 --> 00:27:18,559
um how we've been asked increasingly to

00:27:15,120 --> 00:27:22,399
um put workflow

00:27:18,559 --> 00:27:25,600
around various change sets within waltz

00:27:22,399 --> 00:27:29,440
so that data can be tracked and assigned

00:27:25,600 --> 00:27:32,080
to reviewers etc finally

00:27:29,440 --> 00:27:33,840
the cloud migration kind of dovetails

00:27:32,080 --> 00:27:35,520
into the first point

00:27:33,840 --> 00:27:36,960
is that we're really looking at sort of

00:27:35,520 --> 00:27:39,919
visualizations

00:27:36,960 --> 00:27:41,200
uh to help support uh cloud migration so

00:27:39,919 --> 00:27:42,000
a lot of the recent work we've been

00:27:41,200 --> 00:27:44,399
doing

00:27:42,000 --> 00:27:45,279
has been sort of rooted in some of those

00:27:44,399 --> 00:27:47,200
efforts

00:27:45,279 --> 00:27:48,640
uh the dashboarding thing you saw the

00:27:47,200 --> 00:27:50,159
grid report

00:27:48,640 --> 00:27:52,399
certainly a lot of the assessments and

00:27:50,159 --> 00:27:56,000
the ratings are sort of geared

00:27:52,399 --> 00:27:59,840
now towards looking at how

00:27:56,000 --> 00:28:04,000
we can document applications as they

00:27:59,840 --> 00:28:05,919
move from on-prem to sort of cloud

00:28:04,000 --> 00:28:07,919
systems and all of the changes that will

00:28:05,919 --> 00:28:11,039
be wrought on them as part of that

00:28:07,919 --> 00:28:12,320
move i'm getting started

00:28:11,039 --> 00:28:14,080
okay there's a couple of ways to get

00:28:12,320 --> 00:28:15,440
started with waltz

00:28:14,080 --> 00:28:18,320
one of the easiest is if you just want

00:28:15,440 --> 00:28:20,559
to try out waltz on on your own machines

00:28:18,320 --> 00:28:21,440
uh you can download a simple docker

00:28:20,559 --> 00:28:23,760
image

00:28:21,440 --> 00:28:25,200
uh it's a little bit out of date at the

00:28:23,760 --> 00:28:26,480
moment but i'll get that updated in the

00:28:25,200 --> 00:28:30,720
next few days

00:28:26,480 --> 00:28:33,760
um which has a waltz instance running

00:28:30,720 --> 00:28:34,480
with some sample data uh if you'd rather

00:28:33,760 --> 00:28:36,399
do a more

00:28:34,480 --> 00:28:38,799
of an installation process it's quite

00:28:36,399 --> 00:28:39,919
simple to set up on a tomcat container

00:28:38,799 --> 00:28:43,039
or you can run it

00:28:39,919 --> 00:28:44,080
as a simple uber jar database creation

00:28:43,039 --> 00:28:47,279
is pretty straightforward

00:28:44,080 --> 00:28:49,120
we just use liquid base and

00:28:47,279 --> 00:28:51,039
if you want sample data there are some

00:28:49,120 --> 00:28:52,480
sample data generators available in the

00:28:51,039 --> 00:28:54,480
source code

00:28:52,480 --> 00:28:56,399
it's all documented up on github look

00:28:54,480 --> 00:28:59,760
inside the docs folder

00:28:56,399 --> 00:29:02,240
reach out if you need some help um

00:28:59,760 --> 00:29:03,600
we support sql server postgres and

00:29:02,240 --> 00:29:07,039
mariadb

00:29:03,600 --> 00:29:08,000
um those are the main three that we

00:29:07,039 --> 00:29:10,080
support

00:29:08,000 --> 00:29:11,120
uh let us know if there's anything you

00:29:10,080 --> 00:29:13,039
would

00:29:11,120 --> 00:29:14,799
like us to support we can certainly

00:29:13,039 --> 00:29:15,520
investigate to see how hard it would be

00:29:14,799 --> 00:29:17,760
to

00:29:15,520 --> 00:29:20,080
add support for other databases

00:29:17,760 --> 00:29:22,960
relatively database agnostic

00:29:20,080 --> 00:29:25,120
um finally on getting started it's worth

00:29:22,960 --> 00:29:27,600
pointing out we have a blog

00:29:25,120 --> 00:29:28,960
the blog has a couple of articles on how

00:29:27,600 --> 00:29:30,320
to get started in quite a few

00:29:28,960 --> 00:29:33,520
screencasts

00:29:30,320 --> 00:29:35,840
uh basically aimed at both

00:29:33,520 --> 00:29:38,399
users of waltz administrators and

00:29:35,840 --> 00:29:38,399
developers

00:29:38,720 --> 00:29:42,720
which brings us to contributing so

00:29:41,360 --> 00:29:44,640
should you wish to make a contribution

00:29:42,720 --> 00:29:48,880
then you would be delighted

00:29:44,640 --> 00:29:50,559
um reach out to us via the github

00:29:48,880 --> 00:29:52,000
issues probably best or contact us

00:29:50,559 --> 00:29:53,440
directly

00:29:52,000 --> 00:29:56,880
there's some good first issues that

00:29:53,440 --> 00:30:00,159
we've tagged in the github issues

00:29:56,880 --> 00:30:02,320
repository uh and again we'll be

00:30:00,159 --> 00:30:04,399
more than happy to help out uh there's

00:30:02,320 --> 00:30:08,000
some getting started tutorials

00:30:04,399 --> 00:30:09,600
uh on our github uh blog sorry on our

00:30:08,000 --> 00:30:11,840
finnos blog

00:30:09,600 --> 00:30:13,279
and some screencasts to help you uh take

00:30:11,840 --> 00:30:16,640
your first steps

00:30:13,279 --> 00:30:17,679
in contributing to waltz okay that wraps

00:30:16,640 --> 00:30:20,240
everything up

00:30:17,679 --> 00:30:23,200
um thanks very much for your time and we

00:30:20,240 --> 00:30:25,360
hope you've enjoyed the presentation

00:30:23,200 --> 00:30:31,520
and look forward to hearing from you

00:30:25,360 --> 00:30:31,520

YouTube URL: https://www.youtube.com/watch?v=cCNfdQM-aQk


