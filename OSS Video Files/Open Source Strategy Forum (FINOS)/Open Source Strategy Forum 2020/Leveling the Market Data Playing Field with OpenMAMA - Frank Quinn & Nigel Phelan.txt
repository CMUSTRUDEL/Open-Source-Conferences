Title: Leveling the Market Data Playing Field with OpenMAMA - Frank Quinn & Nigel Phelan
Publication date: 2020-11-19
Playlist: Open Source Strategy Forum 2020
Description: 
	Leveling the Market Data Playing Field with OpenMAMA - Frank Quinn, Cascadium Ltd.& Nigel Phelan, JPMorgan
Captions: 
	00:00:06,720 --> 00:00:10,480
hello everybody

00:00:08,080 --> 00:00:11,599
my name is frank quinn i am the current

00:00:10,480 --> 00:00:14,719
open mama maintainer

00:00:11,599 --> 00:00:16,880
and founder of cascadium limited where

00:00:14,719 --> 00:00:17,600
we focus on bridging proprietary and

00:00:16,880 --> 00:00:20,400
open source

00:00:17,600 --> 00:00:20,800
technologies so i'm here to talk to you

00:00:20,400 --> 00:00:24,080
today

00:00:20,800 --> 00:00:24,640
about open mama um and about how it is

00:00:24,080 --> 00:00:27,920
useful

00:00:24,640 --> 00:00:30,800
for both market data managers

00:00:27,920 --> 00:00:32,239
and software vendors who are trying to

00:00:30,800 --> 00:00:33,520
promote their software and their market

00:00:32,239 --> 00:00:36,800
data solutions

00:00:33,520 --> 00:00:39,600
into market data monitors so

00:00:36,800 --> 00:00:41,040
we're going to start off by um showing a

00:00:39,600 --> 00:00:43,920
little introduction to open mama

00:00:41,040 --> 00:00:45,039
and what it is and where it's used and

00:00:43,920 --> 00:00:47,120
then we're going to go into

00:00:45,039 --> 00:00:48,320
some of the applications for market data

00:00:47,120 --> 00:00:50,719
managers

00:00:48,320 --> 00:00:52,160
and then we're going to move on to some

00:00:50,719 --> 00:00:56,239
discussion around

00:00:52,160 --> 00:00:56,800
the applications for market data vendors

00:00:56,239 --> 00:01:00,320
and for

00:00:56,800 --> 00:01:00,800
application vendors and then we're going

00:01:00,320 --> 00:01:04,000
to

00:01:00,800 --> 00:01:07,520
go into a quick demonstration of

00:01:04,000 --> 00:01:08,400
consuming using openmama from both a

00:01:07,520 --> 00:01:10,640
proprietary

00:01:08,400 --> 00:01:12,560
data source and from an open platform

00:01:10,640 --> 00:01:14,000
data source um

00:01:12,560 --> 00:01:16,960
and then we're going to finish off with

00:01:14,000 --> 00:01:21,040
some questions and answers

00:01:16,960 --> 00:01:23,040
so we will just dive in here

00:01:21,040 --> 00:01:24,080
um so we start off by asking the

00:01:23,040 --> 00:01:26,560
question what is

00:01:24,080 --> 00:01:27,439
what is openmama so for those of you who

00:01:26,560 --> 00:01:30,320
don't know

00:01:27,439 --> 00:01:32,000
um openmomma is effectively an

00:01:30,320 --> 00:01:34,880
abstraction layer

00:01:32,000 --> 00:01:36,240
um it is the api that your application

00:01:34,880 --> 00:01:39,920
would write to

00:01:36,240 --> 00:01:41,439
and but behind that api it interfaces

00:01:39,920 --> 00:01:42,399
with the underlying proprietary

00:01:41,439 --> 00:01:45,439
technologies

00:01:42,399 --> 00:01:47,920
and open technologies so an open mama

00:01:45,439 --> 00:01:49,920
application doesn't need to worry about

00:01:47,920 --> 00:01:51,920
which platform it's publishing onto

00:01:49,920 --> 00:01:53,759
or which platform it's consuming from

00:01:51,920 --> 00:01:54,240
and all that open mama application needs

00:01:53,759 --> 00:01:58,000
to do

00:01:54,240 --> 00:01:59,759
is subscribe to market data using a

00:01:58,000 --> 00:02:02,079
configuration transport

00:01:59,759 --> 00:02:03,119
and a bridge which is usually provided

00:02:02,079 --> 00:02:06,640
by

00:02:03,119 --> 00:02:08,560
the platform api so for example you can

00:02:06,640 --> 00:02:09,679
use open mama with the exact same

00:02:08,560 --> 00:02:13,760
application

00:02:09,679 --> 00:02:15,760
to consume data from one middleware

00:02:13,760 --> 00:02:17,280
or you can use it to consume from a

00:02:15,760 --> 00:02:18,640
completely different middleware

00:02:17,280 --> 00:02:21,680
and your application doesn't actually

00:02:18,640 --> 00:02:23,520
change it's a runtime configuration

00:02:21,680 --> 00:02:25,200
and you drop in a different library

00:02:23,520 --> 00:02:27,599
different configuration file

00:02:25,200 --> 00:02:29,120
and then you can start consuming or

00:02:27,599 --> 00:02:30,160
publishing onto a different market data

00:02:29,120 --> 00:02:32,319
platform

00:02:30,160 --> 00:02:33,599
um without any changes at all to your

00:02:32,319 --> 00:02:36,800
application

00:02:33,599 --> 00:02:39,280
so why is this so important well

00:02:36,800 --> 00:02:41,360
the main benefit is that your

00:02:39,280 --> 00:02:44,480
application no longer needs to worry

00:02:41,360 --> 00:02:45,440
about the underlying technology

00:02:44,480 --> 00:02:47,680
supporting lots of different

00:02:45,440 --> 00:02:50,879
technologies and

00:02:47,680 --> 00:02:54,560
it means that in terms of choice

00:02:50,879 --> 00:02:57,840
the market data manager or the business

00:02:54,560 --> 00:02:59,440
can for whatever reason decide to switch

00:02:57,840 --> 00:03:01,760
between different

00:02:59,440 --> 00:03:03,760
market data technology providers and

00:03:01,760 --> 00:03:05,040
without significant costs and overheads

00:03:03,760 --> 00:03:06,319
associated with

00:03:05,040 --> 00:03:07,680
actually making the switch and the

00:03:06,319 --> 00:03:08,640
development overheads and the support

00:03:07,680 --> 00:03:11,440
maintenance

00:03:08,640 --> 00:03:12,480
associated with that um it has

00:03:11,440 --> 00:03:14,319
flexibility

00:03:12,480 --> 00:03:15,760
there's the cm api you can switch

00:03:14,319 --> 00:03:16,800
between open source and proprietary

00:03:15,760 --> 00:03:18,000
technologies

00:03:16,800 --> 00:03:20,159
and a lot of people are building their

00:03:18,000 --> 00:03:20,959
own open source based platforms in-house

00:03:20,159 --> 00:03:23,200
at the moment

00:03:20,959 --> 00:03:24,319
that's what will completely support that

00:03:23,200 --> 00:03:25,599
um

00:03:24,319 --> 00:03:27,760
the other main advantage is that it can

00:03:25,599 --> 00:03:30,959
be extended so there's a

00:03:27,760 --> 00:03:32,159
plug-in interface and for open mama that

00:03:30,959 --> 00:03:35,440
allows you to

00:03:32,159 --> 00:03:36,720
um get events fired in whenever

00:03:35,440 --> 00:03:38,720
um certain things happen like

00:03:36,720 --> 00:03:39,760
subscriptions are created or messages

00:03:38,720 --> 00:03:42,400
are received

00:03:39,760 --> 00:03:43,680
and so you can control your audit trail

00:03:42,400 --> 00:03:46,720
in a standard

00:03:43,680 --> 00:03:48,480
way as well um we have bindings

00:03:46,720 --> 00:03:51,599
currently available for c

00:03:48,480 --> 00:03:54,239
c plus plus c sharp and java

00:03:51,599 --> 00:03:54,720
um including uh recent development which

00:03:54,239 --> 00:03:58,000
was c

00:03:54,720 --> 00:03:59,360
sharp on.net core so you can use open

00:03:58,000 --> 00:04:02,560
mama with c

00:03:59,360 --> 00:04:03,200
on linux which is a bit of a big step

00:04:02,560 --> 00:04:06,799
for us

00:04:03,200 --> 00:04:08,480
but it seems to work pretty well so

00:04:06,799 --> 00:04:10,560
that that's effectively what open mom is

00:04:08,480 --> 00:04:13,120
for it provides that abstraction layer

00:04:10,560 --> 00:04:14,000
away from underlying technologies so you

00:04:13,120 --> 00:04:16,639
don't need to

00:04:14,000 --> 00:04:18,320
be concerned about the underlying uh

00:04:16,639 --> 00:04:18,720
platforms that your data is publishing

00:04:18,320 --> 00:04:20,880
to

00:04:18,720 --> 00:04:23,199
or subscribing from and that that's it

00:04:20,880 --> 00:04:25,360
that's all it is

00:04:23,199 --> 00:04:26,639
so if you have a look around you as to

00:04:25,360 --> 00:04:30,160
where it is

00:04:26,639 --> 00:04:31,600
and um where's deployed uh

00:04:30,160 --> 00:04:34,720
it was first officially published in

00:04:31,600 --> 00:04:38,479
2012 and it comes from

00:04:34,720 --> 00:04:39,520
a long line of non-open source um fbi's

00:04:38,479 --> 00:04:40,639
which have been in production for

00:04:39,520 --> 00:04:43,840
decades

00:04:40,639 --> 00:04:46,720
so it's very much a mature offering that

00:04:43,840 --> 00:04:47,440
um has a lot of production miles behind

00:04:46,720 --> 00:04:50,160
it

00:04:47,440 --> 00:04:50,880
um with the nature of the client base

00:04:50,160 --> 00:04:53,759
involved though

00:04:50,880 --> 00:04:54,560
there's not a huge amount of publicly

00:04:53,759 --> 00:04:57,120
declared

00:04:54,560 --> 00:04:57,680
people who use it um but there are some

00:04:57,120 --> 00:04:59,919
out there

00:04:57,680 --> 00:05:01,600
and the most notable ones include jp

00:04:59,919 --> 00:05:02,800
morgan and deutsche bank who are members

00:05:01,600 --> 00:05:05,600
of the steering committee

00:05:02,800 --> 00:05:05,919
and then nafix who've recently published

00:05:05,600 --> 00:05:09,199
a

00:05:05,919 --> 00:05:11,680
zero mq derived api as well for

00:05:09,199 --> 00:05:13,360
openmama and to allow obama to publish

00:05:11,680 --> 00:05:17,520
and subscribe onto

00:05:13,360 --> 00:05:18,639
um a completely open source platform so

00:05:17,520 --> 00:05:20,320
there are lots of products out there

00:05:18,639 --> 00:05:22,880
that don't integrate with it we get the

00:05:20,320 --> 00:05:25,120
support requests a lot to come in

00:05:22,880 --> 00:05:26,960
from lots of different customers as well

00:05:25,120 --> 00:05:27,840
so and there's a much bigger world out

00:05:26,960 --> 00:05:31,680
there

00:05:27,840 --> 00:05:32,960
um and the integrations we provide

00:05:31,680 --> 00:05:35,199
or the integrations are provided by the

00:05:32,960 --> 00:05:38,479
community and extend into

00:05:35,199 --> 00:05:40,800
wider technologies and wider platforms

00:05:38,479 --> 00:05:42,479
and it's not uncommon to use open mama

00:05:40,800 --> 00:05:42,960
purely as an abstraction layer to get

00:05:42,479 --> 00:05:45,919
data

00:05:42,960 --> 00:05:47,360
into a larger platform from perhaps a

00:05:45,919 --> 00:05:50,479
more niche provider

00:05:47,360 --> 00:05:52,560
and that they may not want to your

00:05:50,479 --> 00:05:54,240
market data manager may not want to

00:05:52,560 --> 00:05:55,680
go to the effort of writing an api for

00:05:54,240 --> 00:05:58,000
there either

00:05:55,680 --> 00:05:58,880
and um the other thing worth noting is

00:05:58,000 --> 00:06:02,319
that it's used across

00:05:58,880 --> 00:06:04,479
is used across all asset classes and fx

00:06:02,319 --> 00:06:06,560
options futures derivatives they're all

00:06:04,479 --> 00:06:07,280
um in use with open moment of varying

00:06:06,560 --> 00:06:08,800
degrees

00:06:07,280 --> 00:06:11,600
it traditionally comes from the equity

00:06:08,800 --> 00:06:14,800
side but it does have an awful lot of

00:06:11,600 --> 00:06:17,840
use outside of that and in different

00:06:14,800 --> 00:06:21,120
different asset classes as well

00:06:17,840 --> 00:06:24,800
so if we take a look inside the mindset

00:06:21,120 --> 00:06:27,199
of the market data manager and the

00:06:24,800 --> 00:06:28,080
problems and challenges that are facing

00:06:27,199 --> 00:06:30,400
them

00:06:28,080 --> 00:06:31,600
um there's always new functional

00:06:30,400 --> 00:06:33,199
pressures there's always something that

00:06:31,600 --> 00:06:34,960
somebody wants

00:06:33,199 --> 00:06:36,720
there's a new market data provider

00:06:34,960 --> 00:06:38,720
there's a new

00:06:36,720 --> 00:06:41,120
way that they want to access historical

00:06:38,720 --> 00:06:42,240
data and there'll always be something

00:06:41,120 --> 00:06:44,639
that comes in

00:06:42,240 --> 00:06:45,840
um and edc spring high speed handlers

00:06:44,639 --> 00:06:48,000
it's a very

00:06:45,840 --> 00:06:48,960
very busy job being a market data

00:06:48,000 --> 00:06:53,440
manager

00:06:48,960 --> 00:06:55,759
and the general biggest recurring theme

00:06:53,440 --> 00:06:57,199
is that they need to continually support

00:06:55,759 --> 00:07:00,479
a variety of

00:06:57,199 --> 00:07:02,479
different little snowflake applications

00:07:00,479 --> 00:07:03,919
and platforms which all need to play

00:07:02,479 --> 00:07:05,680
nicely with each other

00:07:03,919 --> 00:07:06,960
um against the backdrop of this you have

00:07:05,680 --> 00:07:08,639
all the performance constraints that go

00:07:06,960 --> 00:07:11,440
with that so you've got then

00:07:08,639 --> 00:07:13,039
low latency but you need to also support

00:07:11,440 --> 00:07:16,080
high bandwidth

00:07:13,039 --> 00:07:17,840
you need to the deal needs to be very

00:07:16,080 --> 00:07:19,759
well normalized needs to look the same

00:07:17,840 --> 00:07:21,440
across different data sources

00:07:19,759 --> 00:07:23,120
there's usually lots of tweaks required

00:07:21,440 --> 00:07:24,800
from the third party providers to try

00:07:23,120 --> 00:07:26,560
and get it to behave like that

00:07:24,800 --> 00:07:28,400
and it's basically a constant struggle

00:07:26,560 --> 00:07:31,120
to try and get things to look

00:07:28,400 --> 00:07:33,599
in a sort of regular way that is easier

00:07:31,120 --> 00:07:34,880
to manage and easier to maintain

00:07:33,599 --> 00:07:36,960
on top of this it tends to be one of the

00:07:34,880 --> 00:07:39,680
biggest cost centers that's

00:07:36,960 --> 00:07:40,479
and where they're deployed so you have

00:07:39,680 --> 00:07:42,160
constant

00:07:40,479 --> 00:07:43,759
cost efficiency problems they want to

00:07:42,160 --> 00:07:46,800
reduce footprint

00:07:43,759 --> 00:07:47,440
they want to reuse data that they've

00:07:46,800 --> 00:07:49,440
paid for

00:07:47,440 --> 00:07:51,120
once they want to make sure that the

00:07:49,440 --> 00:07:52,639
same data is reused elsewhere

00:07:51,120 --> 00:07:54,800
if they can and if the license allows

00:07:52,639 --> 00:07:55,280
them to and on top of that you've got

00:07:54,800 --> 00:07:57,120
the

00:07:55,280 --> 00:07:58,960
regulatory requirements that come in

00:07:57,120 --> 00:08:02,639
from the side and

00:07:58,960 --> 00:08:05,120
so the result of all this is that

00:08:02,639 --> 00:08:06,800
market data managers generally don't

00:08:05,120 --> 00:08:07,120
build everything themselves there will

00:08:06,800 --> 00:08:11,599
be

00:08:07,120 --> 00:08:15,440
a number of open source proprietary

00:08:11,599 --> 00:08:16,960
quite niche in-house uh technologies and

00:08:15,440 --> 00:08:17,759
they all need to play nicely with each

00:08:16,960 --> 00:08:20,639
other

00:08:17,759 --> 00:08:22,560
and um that's that's really the the

00:08:20,639 --> 00:08:24,960
challenge that they're facing today

00:08:22,560 --> 00:08:28,319
um trying to get all those to be in

00:08:24,960 --> 00:08:28,319
england and play nicely together

00:08:30,319 --> 00:08:36,560
so um well we're going to walk through

00:08:33,440 --> 00:08:39,440
this is a a very simplified uh version

00:08:36,560 --> 00:08:40,080
of what a platform would look like and

00:08:39,440 --> 00:08:43,200
um

00:08:40,080 --> 00:08:44,800
but the main thing that you need to take

00:08:43,200 --> 00:08:46,399
away from this is that they

00:08:44,800 --> 00:08:48,240
the technologies here are effectively

00:08:46,399 --> 00:08:50,959
isolated um

00:08:48,240 --> 00:08:51,279
if you've got a market data vendor ether

00:08:50,959 --> 00:08:55,440
who

00:08:51,279 --> 00:08:58,240
is publishing data onto their platform

00:08:55,440 --> 00:08:59,200
it may also be an in the house messaging

00:08:58,240 --> 00:09:01,519
platform

00:08:59,200 --> 00:09:02,640
uh which may have been written or may

00:09:01,519 --> 00:09:03,519
have been maintained from previous

00:09:02,640 --> 00:09:06,160
reasons and has been

00:09:03,519 --> 00:09:08,080
too costly to move away from um or it

00:09:06,160 --> 00:09:09,920
has its own advantages

00:09:08,080 --> 00:09:12,000
you do unique use case for the target

00:09:09,920 --> 00:09:12,720
deployment and that can't disappear

00:09:12,000 --> 00:09:14,080
either

00:09:12,720 --> 00:09:15,760
and so you end up having these

00:09:14,080 --> 00:09:18,320
redistribution layers to try

00:09:15,760 --> 00:09:20,000
and attempt to make sense of them and to

00:09:18,320 --> 00:09:22,720
try to publish data onto multiple

00:09:20,000 --> 00:09:24,560
data sources or to switch data sources

00:09:22,720 --> 00:09:28,240
or data platforms

00:09:24,560 --> 00:09:32,160
so the requirement is that

00:09:28,240 --> 00:09:34,560
the api um that we have here

00:09:32,160 --> 00:09:36,640
is deployed across all applications that

00:09:34,560 --> 00:09:38,640
need to consume from that platform

00:09:36,640 --> 00:09:40,320
and it's not just messaging either

00:09:38,640 --> 00:09:41,279
there's entitlements there's compliance

00:09:40,320 --> 00:09:44,080
logging

00:09:41,279 --> 00:09:44,640
um there's drop copies there's lots of

00:09:44,080 --> 00:09:47,360
things that

00:09:44,640 --> 00:09:48,959
need to be done um outside of purely the

00:09:47,360 --> 00:09:50,399
market data stream and that's where the

00:09:48,959 --> 00:09:51,519
the plug-in interface that i was talking

00:09:50,399 --> 00:09:52,880
about earlier on

00:09:51,519 --> 00:09:54,240
can come into play with open moment to

00:09:52,880 --> 00:09:55,760
try to put those across in a

00:09:54,240 --> 00:09:58,399
standardized way

00:09:55,760 --> 00:09:59,200
um but the applications because their

00:09:58,399 --> 00:10:03,200
apis

00:09:59,200 --> 00:10:04,880
are writing to these platforms directly

00:10:03,200 --> 00:10:06,320
they're effectively locked in to the

00:10:04,880 --> 00:10:07,920
underlying vendors

00:10:06,320 --> 00:10:09,760
and this is a very simplified diagram

00:10:07,920 --> 00:10:11,920
where we have like you know one

00:10:09,760 --> 00:10:13,519
application trailing box there but in

00:10:11,920 --> 00:10:15,440
the real world there could be

00:10:13,519 --> 00:10:17,760
tens hundreds thousands of those

00:10:15,440 --> 00:10:19,920
deployed and each of which

00:10:17,760 --> 00:10:21,440
are locked into the underlying

00:10:19,920 --> 00:10:23,440
technology vendor directly where they're

00:10:21,440 --> 00:10:25,360
written directly to that api

00:10:23,440 --> 00:10:27,120
and of course the alternative to this is

00:10:25,360 --> 00:10:31,040
that

00:10:27,120 --> 00:10:32,560
the market data monitors applications um

00:10:31,040 --> 00:10:33,680
abstract themselves from the underlying

00:10:32,560 --> 00:10:34,880
api but then of course you've

00:10:33,680 --> 00:10:37,360
effectively got

00:10:34,880 --> 00:10:38,079
an api that does what obama does

00:10:37,360 --> 00:10:40,880
deployed

00:10:38,079 --> 00:10:42,480
and maintained in-house without putting

00:10:40,880 --> 00:10:44,800
resource without everything that

00:10:42,480 --> 00:10:45,600
that comes associated with open nominal

00:10:44,800 --> 00:10:47,600
um

00:10:45,600 --> 00:10:50,079
so the main takeaway from this is that

00:10:47,600 --> 00:10:51,920
whenever new technologies come along

00:10:50,079 --> 00:10:54,000
uh whenever technologies go out of

00:10:51,920 --> 00:10:57,440
fashion um

00:10:54,000 --> 00:11:01,040
the cost of migrating to a new platform

00:10:57,440 --> 00:11:03,600
is quite high because the apis

00:11:01,040 --> 00:11:04,959
that are being used by each of these

00:11:03,600 --> 00:11:07,279
other applications

00:11:04,959 --> 00:11:09,360
there's just so many of them it's uh

00:11:07,279 --> 00:11:12,839
very difficult to switch them

00:11:09,360 --> 00:11:15,920
so you end up picking third parties

00:11:12,839 --> 00:11:16,560
and technologies based on okay what's

00:11:15,920 --> 00:11:18,640
gonna

00:11:16,560 --> 00:11:20,160
what's gonna not make my life misery

00:11:18,640 --> 00:11:22,240
whenever i go to deploy this

00:11:20,160 --> 00:11:23,680
as opposed to what is actually the best

00:11:22,240 --> 00:11:25,120
product to solve the problem that i'm

00:11:23,680 --> 00:11:27,440
facing at the minute

00:11:25,120 --> 00:11:28,720
so that that's what the what's up the

00:11:27,440 --> 00:11:30,240
market data platform looks like the

00:11:28,720 --> 00:11:35,279
moment whenever

00:11:30,240 --> 00:11:37,680
um there's no mom involved anywhere

00:11:35,279 --> 00:11:38,800
so what happens whenever you do involve

00:11:37,680 --> 00:11:42,000
open mama

00:11:38,800 --> 00:11:44,160
now the main takeaway here is that um

00:11:42,000 --> 00:11:45,680
opel mama doesn't isn't the platform and

00:11:44,160 --> 00:11:47,120
i think of a lot of

00:11:45,680 --> 00:11:49,200
uh things that you may have seen in the

00:11:47,120 --> 00:11:50,639
past uh mama has been

00:11:49,200 --> 00:11:52,399
very much portrayed as a platform it's

00:11:50,639 --> 00:11:54,959
not it's an abstraction layer away

00:11:52,399 --> 00:11:56,560
from um an underlying platform so

00:11:54,959 --> 00:11:59,040
there's nothing to stop

00:11:56,560 --> 00:12:00,800
an open mama application publishing and

00:11:59,040 --> 00:12:03,279
subscribing onto

00:12:00,800 --> 00:12:05,040
a one vendor messaging platform or an

00:12:03,279 --> 00:12:07,760
in-house messaging platform

00:12:05,040 --> 00:12:09,200
or an in-house autonomous tracking

00:12:07,760 --> 00:12:10,959
system or compliance logger

00:12:09,200 --> 00:12:12,639
there's nothing to stop any of that and

00:12:10,959 --> 00:12:16,000
open mom is really just an api

00:12:12,639 --> 00:12:19,360
it's a standard way to try and handle

00:12:16,000 --> 00:12:20,560
market data events so it doesn't need to

00:12:19,360 --> 00:12:22,079
be used everywhere and that's why

00:12:20,560 --> 00:12:23,680
purposefully in this diagram

00:12:22,079 --> 00:12:25,279
you see the little boxes at the bottom

00:12:23,680 --> 00:12:26,240
uh you don't need to do it in all

00:12:25,279 --> 00:12:28,000
applications

00:12:26,240 --> 00:12:29,519
you don't need to do it even everywhere

00:12:28,000 --> 00:12:31,120
in the cm application

00:12:29,519 --> 00:12:33,120
um you can just be used where it's

00:12:31,120 --> 00:12:35,279
appropriate uh to try

00:12:33,120 --> 00:12:36,800
and reduce the overhead associated with

00:12:35,279 --> 00:12:39,040
maintaining support

00:12:36,800 --> 00:12:40,800
for each of these third-party platforms

00:12:39,040 --> 00:12:43,680
because the open-minded api itself

00:12:40,800 --> 00:12:45,680
is very stable and it's been i don't

00:12:43,680 --> 00:12:49,279
think there has been any application

00:12:45,680 --> 00:12:52,320
uh interface changes since its launch

00:12:49,279 --> 00:12:54,399
so the

00:12:52,320 --> 00:12:55,360
this means that the the open mom api can

00:12:54,399 --> 00:12:57,760
be used to

00:12:55,360 --> 00:12:59,519
trigger events in certain ways it can be

00:12:57,760 --> 00:13:02,160
used to access data

00:12:59,519 --> 00:13:04,160
in the same way um and it can be used

00:13:02,160 --> 00:13:06,160
for both subscribing and publishing

00:13:04,160 --> 00:13:08,560
and it can effectively be used in case

00:13:06,160 --> 00:13:11,920
of a traditional feed handler

00:13:08,560 --> 00:13:12,959
and to try and get data from a data

00:13:11,920 --> 00:13:16,079
source

00:13:12,959 --> 00:13:19,279
a direct data source and get it out into

00:13:16,079 --> 00:13:21,200
another platform elsewhere um

00:13:19,279 --> 00:13:22,800
or it can be used for early pixel and

00:13:21,200 --> 00:13:24,720
just use it for connecting to an

00:13:22,800 --> 00:13:26,079
individual platform

00:13:24,720 --> 00:13:27,279
but the the main takeaway is that the

00:13:26,079 --> 00:13:28,160
underlying technology doesn't have to

00:13:27,279 --> 00:13:30,560
change

00:13:28,160 --> 00:13:32,160
there's no major people of underlying

00:13:30,560 --> 00:13:32,639
tech that you need to change and if you

00:13:32,160 --> 00:13:35,440
do

00:13:32,639 --> 00:13:37,440
then please let us know because that is

00:13:35,440 --> 00:13:38,480
that is not the goal of open manner

00:13:37,440 --> 00:13:41,120
open mom is supposed to be pretty

00:13:38,480 --> 00:13:42,800
passive in the underlying platforms

00:13:41,120 --> 00:13:45,199
and is supposed to operate alongside it

00:13:42,800 --> 00:13:48,560
as opposed to pushing its opinions

00:13:45,199 --> 00:13:51,440
onto it

00:13:48,560 --> 00:13:52,560
so if we move away from the market data

00:13:51,440 --> 00:13:56,079
manager just for a moment

00:13:52,560 --> 00:13:57,760
to discuss the application the market

00:13:56,079 --> 00:14:00,480
data vendors who are trying to

00:13:57,760 --> 00:14:01,760
target these platforms um there's

00:14:00,480 --> 00:14:05,279
generally

00:14:01,760 --> 00:14:06,800
the opposite problem involved there and

00:14:05,279 --> 00:14:09,360
that

00:14:06,800 --> 00:14:10,399
platform migrations for them are very

00:14:09,360 --> 00:14:13,519
difficult

00:14:10,399 --> 00:14:14,959
uh because the every customer's target

00:14:13,519 --> 00:14:16,399
platform is different

00:14:14,959 --> 00:14:18,079
and everybody's requirements are

00:14:16,399 --> 00:14:22,320
different and

00:14:18,079 --> 00:14:24,399
if you want to introduce a new api

00:14:22,320 --> 00:14:26,880
and that's a significant cost a

00:14:24,399 --> 00:14:28,800
significant risk associated with

00:14:26,880 --> 00:14:31,120
the market data manager whenever they

00:14:28,800 --> 00:14:32,800
look at it so

00:14:31,120 --> 00:14:34,399
a market data vendor can't just go into

00:14:32,800 --> 00:14:36,639
a market data manager and say

00:14:34,399 --> 00:14:37,600
you know we want to replace your entire

00:14:36,639 --> 00:14:39,360
platform

00:14:37,600 --> 00:14:40,880
and they may have a platform which they

00:14:39,360 --> 00:14:42,639
may want the

00:14:40,880 --> 00:14:44,160
market data manager to use but they

00:14:42,639 --> 00:14:44,880
don't want to be a core entity

00:14:44,160 --> 00:14:48,320
requirement

00:14:44,880 --> 00:14:51,680
because it just lights up

00:14:48,320 --> 00:14:53,600
um red lights and they mark data manager

00:14:51,680 --> 00:14:56,160
whenever they see this coming on

00:14:53,600 --> 00:14:56,880
um because it's it's a dangerous thing

00:14:56,160 --> 00:15:00,639
to try and

00:14:56,880 --> 00:15:02,800
add another new platform or form as they

00:15:00,639 --> 00:15:04,399
could often get known to try and handle

00:15:02,800 --> 00:15:06,560
another market data platform

00:15:04,399 --> 00:15:09,760
a provider and who wants to get their

00:15:06,560 --> 00:15:09,760
data onto your platform

00:15:10,839 --> 00:15:17,199
so what what happens if

00:15:13,279 --> 00:15:20,240
a market data vendor wants to target

00:15:17,199 --> 00:15:22,399
a non-open mama application

00:15:20,240 --> 00:15:24,800
so the first thing you notice that they

00:15:22,399 --> 00:15:26,560
that non-open mama application probably

00:15:24,800 --> 00:15:29,279
already has other apis

00:15:26,560 --> 00:15:30,800
it might not be for market data or they

00:15:29,279 --> 00:15:33,360
might be from market data

00:15:30,800 --> 00:15:35,600
um but they're they're going to be there

00:15:33,360 --> 00:15:37,040
there there's already a cost of

00:15:35,600 --> 00:15:39,360
a development associated with

00:15:37,040 --> 00:15:42,320
maintaining whatever it's already doing

00:15:39,360 --> 00:15:43,839
so with without open mama here if i

00:15:42,320 --> 00:15:45,839
could be introducing a new one

00:15:43,839 --> 00:15:47,519
um you're online you're expecting the

00:15:45,839 --> 00:15:49,519
client to

00:15:47,519 --> 00:15:50,720
uh write to your application code i mean

00:15:49,519 --> 00:15:52,079
it's great that you've got an api that

00:15:50,720 --> 00:15:54,639
makes it easy to consume

00:15:52,079 --> 00:15:55,600
from the market that you're providing or

00:15:54,639 --> 00:15:57,600
maybe you've got a protocol

00:15:55,600 --> 00:15:59,120
specifications you're providing instead

00:15:57,600 --> 00:16:01,279
and but the expectation is still going

00:15:59,120 --> 00:16:04,320
to be on the

00:16:01,279 --> 00:16:08,240
customer to understand that api

00:16:04,320 --> 00:16:10,480
and to write their application to it and

00:16:08,240 --> 00:16:12,079
part of the difficulty with opportunity

00:16:10,480 --> 00:16:15,920
cost as it goes down the

00:16:12,079 --> 00:16:18,880
him down the timeline is that

00:16:15,920 --> 00:16:20,560
what might seem initially as quite a

00:16:18,880 --> 00:16:22,480
compelling prospect

00:16:20,560 --> 00:16:23,920
uh because you're only targeting a

00:16:22,480 --> 00:16:27,120
single application

00:16:23,920 --> 00:16:28,480
and during a poc phase um and

00:16:27,120 --> 00:16:30,800
you know you're receiving the market

00:16:28,480 --> 00:16:31,360
data that's fine whenever it starts to

00:16:30,800 --> 00:16:34,240
rule out

00:16:31,360 --> 00:16:36,000
to a pilot and you start to try and

00:16:34,240 --> 00:16:38,399
target a real-world application or

00:16:36,000 --> 00:16:40,320
cluster of applications and it becomes

00:16:38,399 --> 00:16:42,000
increasingly complicated and then

00:16:40,320 --> 00:16:43,120
something whenever it's deployed across

00:16:42,000 --> 00:16:44,399
the enterprise or hundreds of

00:16:43,120 --> 00:16:46,800
applications

00:16:44,399 --> 00:16:48,480
the adoption cost increases with time

00:16:46,800 --> 00:16:49,920
and the complexity increases with time

00:16:48,480 --> 00:16:50,880
and the expectation and the burden of

00:16:49,920 --> 00:16:52,800
the customer

00:16:50,880 --> 00:16:54,720
increases with time and the result of

00:16:52,800 --> 00:16:56,000
that is that the net value of the

00:16:54,720 --> 00:16:58,720
proposition that you're

00:16:56,000 --> 00:17:00,079
proposing is actually reduced because

00:16:58,720 --> 00:17:00,880
the customer needs to factor in the

00:17:00,079 --> 00:17:04,400
price

00:17:00,880 --> 00:17:06,959
of um migrating all these applications

00:17:04,400 --> 00:17:07,839
to the market data provider and because

00:17:06,959 --> 00:17:09,600
of that

00:17:07,839 --> 00:17:12,079
um there's not an awful lot of

00:17:09,600 --> 00:17:15,360
volatility in terms of technology used

00:17:12,079 --> 00:17:15,360
in the application space

00:17:15,679 --> 00:17:19,919
so what happens whenever it's switched

00:17:17,600 --> 00:17:23,520
around and then open mama compatible

00:17:19,919 --> 00:17:26,799
apps are targeted or as an alternative

00:17:23,520 --> 00:17:29,360
and open mama is the chosen api that

00:17:26,799 --> 00:17:30,480
um you tell the clients to use whenever

00:17:29,360 --> 00:17:34,640
they're switching

00:17:30,480 --> 00:17:36,880
market data providers

00:17:34,640 --> 00:17:38,480
so the the core takeaway is that the

00:17:36,880 --> 00:17:40,320
client code doesn't change

00:17:38,480 --> 00:17:42,400
if you're consuming from an open mama

00:17:40,320 --> 00:17:45,039
data source coming down from transport

00:17:42,400 --> 00:17:46,080
a and you're moving to effectively

00:17:45,039 --> 00:17:49,120
transport b

00:17:46,080 --> 00:17:50,960
bridge b um the clan software doesn't

00:17:49,120 --> 00:17:53,360
change it doesn't even recompile

00:17:50,960 --> 00:17:55,120
um it's just a different configuration

00:17:53,360 --> 00:17:56,480
on a different runtime library dropped

00:17:55,120 --> 00:17:59,600
in

00:17:56,480 --> 00:18:01,200
so it means that the it does shift a bit

00:17:59,600 --> 00:18:04,640
of the expectation

00:18:01,200 --> 00:18:07,200
um on to the vendor to develop

00:18:04,640 --> 00:18:08,320
the bridge for open mama but that's only

00:18:07,200 --> 00:18:10,640
developed once

00:18:08,320 --> 00:18:12,000
and once it's developed um in our

00:18:10,640 --> 00:18:12,799
experience anyway there's very little

00:18:12,000 --> 00:18:14,160
maintenance

00:18:12,799 --> 00:18:16,480
associated with it particularly compared

00:18:14,160 --> 00:18:18,559
with an in-house api where you've got uh

00:18:16,480 --> 00:18:21,120
grand opinions to contend with

00:18:18,559 --> 00:18:23,360
and uh what effectively happens is that

00:18:21,120 --> 00:18:25,600
the adoption cost for clients

00:18:23,360 --> 00:18:27,360
is reduced because it's not being

00:18:25,600 --> 00:18:28,400
duplicated across every application that

00:18:27,360 --> 00:18:31,039
they have

00:18:28,400 --> 00:18:32,559
um and in the event that they don't have

00:18:31,039 --> 00:18:34,080
op mama yet and you're introducing

00:18:32,559 --> 00:18:36,960
openmama as the core

00:18:34,080 --> 00:18:37,440
api that you're suggesting that they use

00:18:36,960 --> 00:18:38,880
uh

00:18:37,440 --> 00:18:40,240
that's a much more compelling story for

00:18:38,880 --> 00:18:41,120
a customer to get on board with because

00:18:40,240 --> 00:18:44,400
they know

00:18:41,120 --> 00:18:46,080
okay so if i consume data from you

00:18:44,400 --> 00:18:48,720
and i decide to change my mind at a

00:18:46,080 --> 00:18:50,720
later point i'm no longer stuck to your

00:18:48,720 --> 00:18:52,400
platform i don't have to go through this

00:18:50,720 --> 00:18:54,400
massive migration cost

00:18:52,400 --> 00:18:56,240
and to try and move to yet another

00:18:54,400 --> 00:18:57,919
market data provider so the risk is much

00:18:56,240 --> 00:19:01,520
lower there as well

00:18:57,919 --> 00:19:04,080
and as well as that the the ongoing

00:19:01,520 --> 00:19:04,880
development cost which is which is often

00:19:04,080 --> 00:19:06,880
overlooked for

00:19:04,880 --> 00:19:08,640
and this from a client's point of view

00:19:06,880 --> 00:19:11,600
and is much lower as well

00:19:08,640 --> 00:19:13,280
and the support for the api that the

00:19:11,600 --> 00:19:14,640
client is writing to

00:19:13,280 --> 00:19:16,080
comes from the community it comes from

00:19:14,640 --> 00:19:18,080
the open mama community it doesn't

00:19:16,080 --> 00:19:19,520
necessarily go straight to the

00:19:18,080 --> 00:19:22,480
vendor unless there's a bug in the

00:19:19,520 --> 00:19:24,880
underlying vendor software

00:19:22,480 --> 00:19:26,480
so that's the main value proposition

00:19:24,880 --> 00:19:28,320
from a market data vendor and an

00:19:26,480 --> 00:19:30,960
application vendor's point of view

00:19:28,320 --> 00:19:31,840
and it's worth noting as well that um

00:19:30,960 --> 00:19:33,440
we've discussed

00:19:31,840 --> 00:19:34,880
market data providers here but the same

00:19:33,440 --> 00:19:37,520
thing applies to

00:19:34,880 --> 00:19:38,400
in any application that's perhaps even

00:19:37,520 --> 00:19:40,559
consuming

00:19:38,400 --> 00:19:42,960
from different market data platforms and

00:19:40,559 --> 00:19:46,320
things like tech capture platforms and

00:19:42,960 --> 00:19:48,960
um technologies like that can all

00:19:46,320 --> 00:19:50,880
benefit from using open mama to try and

00:19:48,960 --> 00:19:52,559
abstract itself away from

00:19:50,880 --> 00:19:54,880
the underlying technology that's that's

00:19:52,559 --> 00:19:54,880
the news

00:19:55,440 --> 00:20:00,000
so whenever you break it down um open

00:19:58,559 --> 00:20:01,440
mama really is all about

00:20:00,000 --> 00:20:03,600
choice and neutrality it's not an

00:20:01,440 --> 00:20:05,600
encompassing platform it's gonna come in

00:20:03,600 --> 00:20:06,880
and expected to make massive changes in

00:20:05,600 --> 00:20:10,559
your deployment

00:20:06,880 --> 00:20:13,120
um it's it's main core value from the

00:20:10,559 --> 00:20:15,600
start has always been that

00:20:13,120 --> 00:20:16,880
the selection of a market data vendor or

00:20:15,600 --> 00:20:18,559
an application vendor

00:20:16,880 --> 00:20:20,320
should be based on how good it is and

00:20:18,559 --> 00:20:21,440
how high quality it is and how low the

00:20:20,320 --> 00:20:24,080
latency is

00:20:21,440 --> 00:20:25,120
it should be based on how sticky their

00:20:24,080 --> 00:20:26,880
api is

00:20:25,120 --> 00:20:28,960
or how inconvenient it is to choose

00:20:26,880 --> 00:20:31,840
anyone other than whatever incumbent

00:20:28,960 --> 00:20:33,679
is currently present on your platform um

00:20:31,840 --> 00:20:34,960
it also breaks down the silos between

00:20:33,679 --> 00:20:36,559
the platforms it means that you can

00:20:34,960 --> 00:20:37,520
bridge between different technologies if

00:20:36,559 --> 00:20:40,480
you want to

00:20:37,520 --> 00:20:41,760
and you can make grit um slowly away

00:20:40,480 --> 00:20:44,240
from other platforms

00:20:41,760 --> 00:20:46,400
if needs be um without having to worry

00:20:44,240 --> 00:20:47,760
about going big bang and using open mama

00:20:46,400 --> 00:20:48,960
air

00:20:47,760 --> 00:20:51,039
um and if you don't want to use it

00:20:48,960 --> 00:20:53,360
everywhere that's absolutely 100

00:20:51,039 --> 00:20:54,400
fine um that's what it's for it will

00:20:53,360 --> 00:20:56,640
consume and

00:20:54,400 --> 00:20:57,760
produce on to different platforms as and

00:20:56,640 --> 00:20:58,880
when required

00:20:57,760 --> 00:21:00,400
and it could even be used to notice that

00:20:58,880 --> 00:21:02,320
some extraction there for direct

00:21:00,400 --> 00:21:05,679
exchanges should it needs to be

00:21:02,320 --> 00:21:07,919
um and the applications if you're a

00:21:05,679 --> 00:21:11,520
market data

00:21:07,919 --> 00:21:12,640
application provider and you can just

00:21:11,520 --> 00:21:14,799
benefit from

00:21:12,640 --> 00:21:16,880
connectivity to every um supported

00:21:14,799 --> 00:21:17,679
platform simply by writing documents

00:21:16,880 --> 00:21:19,200
instead of

00:21:17,679 --> 00:21:20,720
directly to the third-party platform

00:21:19,200 --> 00:21:23,360
apis and

00:21:20,720 --> 00:21:24,799
themselves and there's a reduced risk

00:21:23,360 --> 00:21:26,559
for the customer

00:21:24,799 --> 00:21:27,840
and there's nothing to stop in-house

00:21:26,559 --> 00:21:29,919
technologies from moving dual

00:21:27,840 --> 00:21:31,600
mobile as well the bridge api is open

00:21:29,919 --> 00:21:33,039
the open mama community will support you

00:21:31,600 --> 00:21:33,919
in creating new bridges should it be

00:21:33,039 --> 00:21:34,960
required

00:21:33,919 --> 00:21:37,200
and there's actually been a lot of

00:21:34,960 --> 00:21:40,000
effort made in the last year

00:21:37,200 --> 00:21:41,200
to reduce the complexity that's required

00:21:40,000 --> 00:21:42,000
in building your own bridge so it's much

00:21:41,200 --> 00:21:43,600
easier to build

00:21:42,000 --> 00:21:46,240
a double mama bridge than it has ever

00:21:43,600 --> 00:21:47,679
been and because the obama api is public

00:21:46,240 --> 00:21:50,480
and it's free and it's open source

00:21:47,679 --> 00:21:51,280
it can be contributed to there's nothing

00:21:50,480 --> 00:21:53,440
to stop

00:21:51,280 --> 00:21:54,880
an application development being

00:21:53,440 --> 00:21:56,159
outsourced with a nice firm

00:21:54,880 --> 00:21:58,960
specification

00:21:56,159 --> 00:22:01,039
um the api is public there's no

00:21:58,960 --> 00:22:03,200
licensing associated with using it

00:22:01,039 --> 00:22:04,320
so there's nothing to stop external

00:22:03,200 --> 00:22:08,240
parties from

00:22:04,320 --> 00:22:08,240
writing their own software

00:22:08,640 --> 00:22:12,240
okay so we're going to switch over here

00:22:10,880 --> 00:22:15,919
to on

00:22:12,240 --> 00:22:16,880
mama demo here and we did pre-record it

00:22:15,919 --> 00:22:18,880
because

00:22:16,880 --> 00:22:20,080
we needed to record it during market

00:22:18,880 --> 00:22:23,360
hours over here

00:22:20,080 --> 00:22:26,799
and so we're going to demonstrate the

00:22:23,360 --> 00:22:28,320
obama portable demo environment and uh

00:22:26,799 --> 00:22:30,799
switching between open source and

00:22:28,320 --> 00:22:31,919
proprietary technologies the proprietary

00:22:30,799 --> 00:22:34,960
technology being

00:22:31,919 --> 00:22:37,440
a valid super feed product without any

00:22:34,960 --> 00:22:38,400
re-compilation and a simple

00:22:37,440 --> 00:22:41,840
reconfiguration

00:22:38,400 --> 00:22:43,600
and a new library installed

00:22:41,840 --> 00:22:45,120
okay so we're going to show a demo here

00:22:43,600 --> 00:22:47,679
of what we call the

00:22:45,120 --> 00:22:49,280
portable demo environment now we do have

00:22:47,679 --> 00:22:52,880
some documentation about this

00:22:49,280 --> 00:22:54,400
on our website um the default format

00:22:52,880 --> 00:22:57,520
that we have here is an aws

00:22:54,400 --> 00:22:59,520
mi and you're welcome to extend this

00:22:57,520 --> 00:23:01,200
we use the official centos images which

00:22:59,520 --> 00:23:04,480
means that you can extend them

00:23:01,200 --> 00:23:05,760
within any licensing pairs and we have

00:23:04,480 --> 00:23:07,600
instructions there for how to build your

00:23:05,760 --> 00:23:08,400
own if you want to build it with a

00:23:07,600 --> 00:23:09,919
vagrant

00:23:08,400 --> 00:23:12,640
or if you want to set up a demo

00:23:09,919 --> 00:23:14,799
environment on a bare metal box

00:23:12,640 --> 00:23:16,720
so in the instance that we have here we

00:23:14,799 --> 00:23:19,840
have an aws

00:23:16,720 --> 00:23:22,159
ami that is already set up

00:23:19,840 --> 00:23:24,320
with the bs image and we're just going

00:23:22,159 --> 00:23:27,120
to log into it here now

00:23:24,320 --> 00:23:27,760
so the first thing that you see is that

00:23:27,120 --> 00:23:30,640
um

00:23:27,760 --> 00:23:31,760
it tells you that open mama's installed

00:23:30,640 --> 00:23:34,320
open mama

00:23:31,760 --> 00:23:35,039
um it has the cupid bridge by default

00:23:34,320 --> 00:23:36,799
and

00:23:35,039 --> 00:23:38,320
the boundaries are all in the path so

00:23:36,799 --> 00:23:39,840
one of the binaries of the mama includes

00:23:38,320 --> 00:23:43,440
malicious c

00:23:39,840 --> 00:23:44,000
which is a test utility that allows you

00:23:43,440 --> 00:23:47,440
to

00:23:44,000 --> 00:23:50,400
connect to an open mama data source

00:23:47,440 --> 00:23:51,600
and print some data out from it so we're

00:23:50,400 --> 00:23:52,799
going to just go ahead and run it here

00:23:51,600 --> 00:23:56,159
the source is

00:23:52,799 --> 00:23:57,279
om the middleware bridge which is the

00:23:56,159 --> 00:23:59,279
plug of the bridges that we were talking

00:23:57,279 --> 00:24:02,080
about is cupid in this instance

00:23:59,279 --> 00:24:04,080
the transport name is sub and we have an

00:24:02,080 --> 00:24:07,440
iso currency mix symbol there

00:24:04,080 --> 00:24:07,440
so if we run this up

00:24:07,679 --> 00:24:13,520
we can see the instrument starts ticking

00:24:11,440 --> 00:24:14,880
we can see some data coming out of that

00:24:13,520 --> 00:24:18,159
which is great

00:24:14,880 --> 00:24:20,960
now that is connecting to a

00:24:18,159 --> 00:24:22,320
capture daemon which is running the

00:24:20,960 --> 00:24:23,279
capture replay demon which is running

00:24:22,320 --> 00:24:25,200
locally

00:24:23,279 --> 00:24:27,120
and that's that's effectively what we're

00:24:25,200 --> 00:24:31,679
connecting to there is no external

00:24:27,120 --> 00:24:33,840
market data source involved here now

00:24:31,679 --> 00:24:35,279
that's great but what if we did want to

00:24:33,840 --> 00:24:39,600
include an external

00:24:35,279 --> 00:24:40,480
market data source well we do have a

00:24:39,600 --> 00:24:41,840
repository

00:24:40,480 --> 00:24:43,919
that third parties are free to

00:24:41,840 --> 00:24:46,960
contribute to which

00:24:43,919 --> 00:24:49,440
will give access to optional

00:24:46,960 --> 00:24:51,039
additional bridges that people can add

00:24:49,440 --> 00:24:54,080
other than when they see fit

00:24:51,039 --> 00:24:54,080
so we have

00:24:54,799 --> 00:25:02,400
open mama superfeed

00:24:59,039 --> 00:25:04,559
and which was contributed by vala

00:25:02,400 --> 00:25:06,000
and so if we install that and have a

00:25:04,559 --> 00:25:09,039
look in

00:25:06,000 --> 00:25:09,039
mama uh

00:25:09,440 --> 00:25:13,279
we can see that some of the middleware

00:25:11,600 --> 00:25:14,159
bridges that if you were familiar with

00:25:13,279 --> 00:25:16,159
uh fella

00:25:14,159 --> 00:25:17,440
you would have seen before uh will be

00:25:16,159 --> 00:25:20,799
available on

00:25:17,440 --> 00:25:21,840
the ld library path there for obama to

00:25:20,799 --> 00:25:25,120
use

00:25:21,840 --> 00:25:26,559
so and want to get the same open mama

00:25:25,120 --> 00:25:30,159
command that we had before

00:25:26,559 --> 00:25:30,640
on this listen c um that provided us

00:25:30,159 --> 00:25:34,799
with

00:25:30,640 --> 00:25:37,200
uh alternative source name

00:25:34,799 --> 00:25:38,960
and the middleware here is their data

00:25:37,200 --> 00:25:42,640
fabric middleware

00:25:38,960 --> 00:25:44,080
um the transport is delay

00:25:42,640 --> 00:25:46,960
data which i'm just copying and pasting

00:25:44,080 --> 00:25:50,320
from another window here and the

00:25:46,960 --> 00:25:53,840
symbol name is another item currency mic

00:25:50,320 --> 00:25:56,400
in this format which is

00:25:53,840 --> 00:25:57,919
here now that's not going to work yet

00:25:56,400 --> 00:26:02,559
because we haven't configured

00:25:57,919 --> 00:26:06,080
the configuration developer properties

00:26:02,559 --> 00:26:08,480
to point to the new data source

00:26:06,080 --> 00:26:10,559
so bridges can pull in configuration

00:26:08,480 --> 00:26:13,039
from the standard urban mama

00:26:10,559 --> 00:26:14,400
transport list to find out how to

00:26:13,039 --> 00:26:17,440
connect

00:26:14,400 --> 00:26:20,240
to the upstream data sources so

00:26:17,440 --> 00:26:21,200
we have the configuration that was

00:26:20,240 --> 00:26:25,039
surprised by that or

00:26:21,200 --> 00:26:25,039
supplied by vala added

00:26:31,200 --> 00:26:34,480
and you can see some data starting to

00:26:32,960 --> 00:26:37,679
tick in from

00:26:34,480 --> 00:26:39,919
the super feed the lead to the source

00:26:37,679 --> 00:26:42,720
that they've provided us with

00:26:39,919 --> 00:26:44,240
so not what's involved with getting the

00:26:42,720 --> 00:26:47,440
same application to connect

00:26:44,240 --> 00:26:50,799
to multiple different data sources

00:26:47,440 --> 00:26:52,240
without any recompilation it's just a

00:26:50,799 --> 00:26:55,360
different library getting loaded

00:26:52,240 --> 00:26:58,640
which is uh opened at runtime and

00:26:55,360 --> 00:27:02,000
a different configuration

00:26:58,640 --> 00:27:04,240
so if we go in there to the

00:27:02,000 --> 00:27:05,039
every demo kit that we have has a

00:27:04,240 --> 00:27:08,720
checkout

00:27:05,039 --> 00:27:11,919
of obama's code installment as well

00:27:08,720 --> 00:27:13,600
um so we'll just go into the

00:27:11,919 --> 00:27:15,200
uh c plus plus tutorials that we've got

00:27:13,600 --> 00:27:18,399
here so that's an example

00:27:15,200 --> 00:27:20,799
um a quick start app

00:27:18,399 --> 00:27:21,600
that we've got um in our demo to show

00:27:20,799 --> 00:27:24,799
you

00:27:21,600 --> 00:27:27,279
um how to get acquainted with openmama

00:27:24,799 --> 00:27:27,919
there are versions available for c c

00:27:27,279 --> 00:27:30,480
plus plus c

00:27:27,919 --> 00:27:31,679
sharp and java the c sharp one will

00:27:30,480 --> 00:27:35,200
actually go on.net core

00:27:31,679 --> 00:27:39,120
as well so you can run it on linux

00:27:35,200 --> 00:27:42,640
so if we create a little directory here

00:27:39,120 --> 00:27:44,960
as is the standard for scenic

00:27:42,640 --> 00:27:46,080
we'll do a quick build there's a brand

00:27:44,960 --> 00:27:47,600
new application which doesn't know

00:27:46,080 --> 00:27:50,880
anything about

00:27:47,600 --> 00:27:52,480
bella or any other don't know anything

00:27:50,880 --> 00:27:53,279
about cupid either it was built against

00:27:52,480 --> 00:27:55,200
open mama

00:27:53,279 --> 00:27:57,760
and obama then decides which libraries

00:27:55,200 --> 00:28:00,799
to load

00:27:57,760 --> 00:28:05,440
so we will go ahead and

00:28:00,799 --> 00:28:05,440
run this little quick start application

00:28:05,840 --> 00:28:10,320
run this little quick start application

00:28:07,600 --> 00:28:13,679
and provide the same commands

00:28:10,320 --> 00:28:15,679
as was provided to connect to superfeed

00:28:13,679 --> 00:28:17,039
with the data

00:28:15,679 --> 00:28:19,039
and we can see we're trying to click

00:28:17,039 --> 00:28:20,080
there in our little example application

00:28:19,039 --> 00:28:23,039
too

00:28:20,080 --> 00:28:24,320
so that's a quick introduction to open

00:28:23,039 --> 00:28:26,000
mama and how you can switch between

00:28:24,320 --> 00:28:29,200
different data sources

00:28:26,000 --> 00:28:31,840
without any recombination being required

00:28:29,200 --> 00:28:33,919
or any co-changes required in the app

00:28:31,840 --> 00:28:36,000
okay so that concludes our presentation

00:28:33,919 --> 00:28:37,039
on open mama and thanks everyone for the

00:28:36,000 --> 00:28:40,320
time

00:28:37,039 --> 00:28:42,880
we'll provide some resources here to

00:28:40,320 --> 00:28:45,520
let you follow us on twitter or linkedin

00:28:42,880 --> 00:28:47,760
if you like and you can send us

00:28:45,520 --> 00:28:50,320
an email on the mailing list if you want

00:28:47,760 --> 00:28:53,440
to get some extensive support

00:28:50,320 --> 00:28:56,000
and we're also available on twitter if

00:28:53,440 --> 00:28:56,720
anyone wants to have a chat with us or

00:28:56,000 --> 00:28:59,120
at least somehow

00:28:56,720 --> 00:29:00,320
some high level discussions around and

00:28:59,120 --> 00:29:01,760
how you like to use a mom in your

00:29:00,320 --> 00:29:03,840
organization

00:29:01,760 --> 00:29:13,520
so thanks again and we'll leave it to

00:29:03,840 --> 00:29:13,520

YouTube URL: https://www.youtube.com/watch?v=mnV9VbRp1fs


