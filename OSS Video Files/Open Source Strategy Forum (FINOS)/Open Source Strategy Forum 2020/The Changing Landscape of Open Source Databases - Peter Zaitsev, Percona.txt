Title: The Changing Landscape of Open Source Databases - Peter Zaitsev, Percona
Publication date: 2020-11-20
Playlist: Open Source Strategy Forum 2020
Description: 
	The Changing Landscape of Open Source Databases - Peter Zaitsev, Percona
Captions: 
	00:00:06,480 --> 00:00:10,400
hello uh

00:00:07,279 --> 00:00:12,559
everyone good morning good afternoon

00:00:10,400 --> 00:00:14,559
good evening uh it depends on where you

00:00:12,559 --> 00:00:16,880
are joining in from

00:00:14,559 --> 00:00:18,240
uh today i'm going to talk to you about

00:00:16,880 --> 00:00:21,840
changing landscape

00:00:18,240 --> 00:00:23,600
of open source databases and i will

00:00:21,840 --> 00:00:24,880
uh look at that from a two different

00:00:23,600 --> 00:00:28,840
angles

00:00:24,880 --> 00:00:31,519
one is from their uh changing the open

00:00:28,840 --> 00:00:33,440
source definition of open source open

00:00:31,519 --> 00:00:34,480
source business and so on and so forth

00:00:33,440 --> 00:00:37,440
and then

00:00:34,480 --> 00:00:39,520
changes which are taking place in the

00:00:37,440 --> 00:00:42,800
database

00:00:39,520 --> 00:00:46,480
technology now in this presentation

00:00:42,800 --> 00:00:48,719
i will use free and open source software

00:00:46,480 --> 00:00:50,719
interchargeably and i know this is not

00:00:48,719 --> 00:00:51,920
quite the same thing right and there are

00:00:50,719 --> 00:00:55,440
some people who are very

00:00:51,920 --> 00:00:58,640
passionate about using one terminology

00:00:55,440 --> 00:01:02,160
or another well i'm just going to

00:00:58,640 --> 00:01:05,920
miss and match so forgive me uh

00:01:02,160 --> 00:01:09,760
for that now let's start uh

00:01:05,920 --> 00:01:13,920
looking at some history where is this

00:01:09,760 --> 00:01:17,119
open source software is coming from

00:01:13,920 --> 00:01:21,200
if you look at the early days hardware

00:01:17,119 --> 00:01:24,799
and software they're actually

00:01:21,200 --> 00:01:27,920
bundled together and the

00:01:24,799 --> 00:01:31,360
software code was shipped with that

00:01:27,920 --> 00:01:33,520
earlier uh software right so the early

00:01:31,360 --> 00:01:36,240
adopters could modify

00:01:33,520 --> 00:01:37,119
their code to fix the bug and add

00:01:36,240 --> 00:01:40,479
functionality

00:01:37,119 --> 00:01:41,600
as they need and those changes were also

00:01:40,479 --> 00:01:45,200
openly shared

00:01:41,600 --> 00:01:48,799
according to the academic principles of

00:01:45,200 --> 00:01:51,119
opening of sharing the knowledge right

00:01:48,799 --> 00:01:52,720
that wasn't quite called open source at

00:01:51,119 --> 00:01:54,000
that time right or even free software

00:01:52,720 --> 00:01:57,040
those terms came

00:01:54,000 --> 00:02:00,320
about much later but in essence

00:01:57,040 --> 00:02:03,360
uh that was something

00:02:00,320 --> 00:02:06,880
like that then if you look

00:02:03,360 --> 00:02:07,280
at the 70s uh there are a number of

00:02:06,880 --> 00:02:10,319
things

00:02:07,280 --> 00:02:13,120
happen which created the

00:02:10,319 --> 00:02:14,319
property software industry as we know it

00:02:13,120 --> 00:02:17,520
today

00:02:14,319 --> 00:02:18,400
first is we have a computer software

00:02:17,520 --> 00:02:21,520
became

00:02:18,400 --> 00:02:24,480
copyrightable item at least in uh

00:02:21,520 --> 00:02:26,160
united states right it wasn't uh on the

00:02:24,480 --> 00:02:29,520
list before that because

00:02:26,160 --> 00:02:30,640
well software code wasn't uh wasn't the

00:02:29,520 --> 00:02:34,959
thing

00:02:30,640 --> 00:02:36,000
and also ibm is uh forced to unbundle

00:02:34,959 --> 00:02:39,280
their software

00:02:36,000 --> 00:02:40,959
and hardware as a par as a response to

00:02:39,280 --> 00:02:44,319
the anti-trust to it

00:02:40,959 --> 00:02:45,280
right so software was copyrightable item

00:02:44,319 --> 00:02:48,640
which could

00:02:45,280 --> 00:02:48,959
be sold separately and it really became

00:02:48,640 --> 00:02:52,319
a

00:02:48,959 --> 00:02:53,599
major class of inter electoral property

00:02:52,319 --> 00:02:56,879
at that time

00:02:53,599 --> 00:02:59,920
and still remains uh

00:02:56,879 --> 00:03:01,200
today right and there have been a lot of

00:02:59,920 --> 00:03:04,879
innovation happening

00:03:01,200 --> 00:03:09,040
in the uh in a proprietary software

00:03:04,879 --> 00:03:12,480
the uh next era which i would uh

00:03:09,040 --> 00:03:14,879
uh touch on is something i would call it

00:03:12,480 --> 00:03:15,840
as an era of romantic open source

00:03:14,879 --> 00:03:20,239
software and

00:03:15,840 --> 00:03:23,440
3d software in 90s 80s right

00:03:20,239 --> 00:03:27,599
you can see here on the pga picture

00:03:23,440 --> 00:03:32,879
the richard stollman who was the early

00:03:27,599 --> 00:03:35,120
leader of uh free software uh foundation

00:03:32,879 --> 00:03:38,560
right and the eva champion for

00:03:35,120 --> 00:03:39,440
uh for a free software a lot of the idea

00:03:38,560 --> 00:03:42,560
at that time

00:03:39,440 --> 00:03:45,280
is what the open source software

00:03:42,560 --> 00:03:46,159
or free software is good for you it's

00:03:45,280 --> 00:03:49,599
kind of good

00:03:46,159 --> 00:03:53,200
for planet it was a right way

00:03:49,599 --> 00:03:56,879
of doing things it was not so much

00:03:53,200 --> 00:03:59,680
about making making money

00:03:56,879 --> 00:04:01,200
right or even helping the corporations

00:03:59,680 --> 00:04:04,239
to make money or stuff

00:04:01,200 --> 00:04:08,159
like that in 2000 though

00:04:04,239 --> 00:04:11,120
the open source really gets a lot more

00:04:08,159 --> 00:04:11,760
mainstream adoption right which you can

00:04:11,120 --> 00:04:14,720
hear

00:04:11,760 --> 00:04:15,360
recognize but folks like as a steve

00:04:14,720 --> 00:04:19,519
ballmer

00:04:15,360 --> 00:04:23,040
from microsoft to calling linux a cancer

00:04:19,519 --> 00:04:26,720
right obviously microsoft is now

00:04:23,040 --> 00:04:27,440
moved away a lot from that position

00:04:26,720 --> 00:04:30,560
right and

00:04:27,440 --> 00:04:31,919
one of the leading companies which

00:04:30,560 --> 00:04:34,880
you know works is open source and

00:04:31,919 --> 00:04:38,080
contributes open source those days

00:04:34,880 --> 00:04:42,400
and also their uh successful exits

00:04:38,080 --> 00:04:45,360
with mysql uh aqua been acquired by sun

00:04:42,400 --> 00:04:48,080
for a billion dollars which really sound

00:04:45,360 --> 00:04:50,080
like a lot of

00:04:48,080 --> 00:04:52,720
money at that time before this

00:04:50,080 --> 00:04:56,800
acquisition

00:04:52,720 --> 00:04:59,120
the red hat was really their uh

00:04:56,800 --> 00:05:01,280
exception kind of one company which was

00:04:59,120 --> 00:05:02,400
able to ipo and really maintain the

00:05:01,280 --> 00:05:05,520
value over

00:05:02,400 --> 00:05:09,360
uh long term this is also the

00:05:05,520 --> 00:05:12,000
enterprises recognize the value of

00:05:09,360 --> 00:05:14,400
of the open source and it becomes a

00:05:12,000 --> 00:05:17,360
preferred choice for many

00:05:14,400 --> 00:05:18,000
so why and how open source is important

00:05:17,360 --> 00:05:21,360
for their

00:05:18,000 --> 00:05:21,919
enterprises well it offers direct lower

00:05:21,360 --> 00:05:25,199
cost

00:05:21,919 --> 00:05:28,639
in many of cases as of course and

00:05:25,199 --> 00:05:31,360
it also for many engineers

00:05:28,639 --> 00:05:32,800
especially a good one it's preferred to

00:05:31,360 --> 00:05:34,800
commercial software

00:05:32,800 --> 00:05:36,639
because if you're a gifted engineer

00:05:34,800 --> 00:05:38,400
you're likely to prefer open source

00:05:36,639 --> 00:05:39,360
software because you can understand it

00:05:38,400 --> 00:05:42,639
better if you need

00:05:39,360 --> 00:05:44,560
you have a source code yeah available

00:05:42,639 --> 00:05:45,360
right to figure out how it works inside

00:05:44,560 --> 00:05:46,800
and why and

00:05:45,360 --> 00:05:49,280
why whatever you're doing it had

00:05:46,800 --> 00:05:52,960
software works or doesn't

00:05:49,280 --> 00:05:55,360
you get better productivity

00:05:52,960 --> 00:05:56,240
faster innovation and also it is

00:05:55,360 --> 00:05:59,759
important you

00:05:56,240 --> 00:06:01,840
avoid software uh vendor lock-in

00:05:59,759 --> 00:06:03,440
which can be problematic over a long

00:06:01,840 --> 00:06:06,800
time because

00:06:03,440 --> 00:06:09,840
as software become more complicated than

00:06:06,800 --> 00:06:13,440
changing some foundational stuff as

00:06:09,840 --> 00:06:17,520
database or operating system can become

00:06:13,440 --> 00:06:18,160
very very uh expensive and creating that

00:06:17,520 --> 00:06:20,720
sort of

00:06:18,160 --> 00:06:21,520
unbalanced relationship between uh the

00:06:20,720 --> 00:06:24,160
vendor

00:06:21,520 --> 00:06:24,560
and a customer what happened in this

00:06:24,160 --> 00:06:28,080
case

00:06:24,560 --> 00:06:30,400
uh though is also the new generation of

00:06:28,080 --> 00:06:31,199
open source companies was born which

00:06:30,400 --> 00:06:33,680
really started

00:06:31,199 --> 00:06:34,560
uh the focus on the business first hey

00:06:33,680 --> 00:06:36,800
there is

00:06:34,560 --> 00:06:38,880
looks like a you know great idea we can

00:06:36,800 --> 00:06:42,400
have an open source solution for x

00:06:38,880 --> 00:06:45,280
and uh make a lot of money

00:06:42,400 --> 00:06:45,759
along the way the fastest way to do that

00:06:45,280 --> 00:06:49,280
in

00:06:45,759 --> 00:06:51,120
many cases is to uh

00:06:49,280 --> 00:06:52,800
raise some venture capital right and a

00:06:51,120 --> 00:06:56,720
lot of open source

00:06:52,800 --> 00:06:59,599
uh those days is uh venture funded

00:06:56,720 --> 00:07:00,639
and what that means of course is what

00:06:59,599 --> 00:07:03,840
you need to

00:07:00,639 --> 00:07:07,120
provide the high returns to their uh

00:07:03,840 --> 00:07:10,160
your financial backers and do it

00:07:07,120 --> 00:07:10,639
quite fast and that creates i think is

00:07:10,160 --> 00:07:14,000
very

00:07:10,639 --> 00:07:14,800
interesting uh dynamic because right

00:07:14,000 --> 00:07:17,840
they're

00:07:14,800 --> 00:07:20,560
all very companies would use their

00:07:17,840 --> 00:07:21,360
attractive messaging of open source to

00:07:20,560 --> 00:07:24,400
obviously

00:07:21,360 --> 00:07:26,160
uh attract more attention because that's

00:07:24,400 --> 00:07:27,520
preferred by so many companies but at

00:07:26,160 --> 00:07:29,680
the same time

00:07:27,520 --> 00:07:32,240
focus on building monopoly to avoid

00:07:29,680 --> 00:07:35,360
communisation increasing stickiness

00:07:32,240 --> 00:07:38,080
building anti-competitive modes

00:07:35,360 --> 00:07:39,759
all those things they teach you at the

00:07:38,080 --> 00:07:43,120
business school right as if

00:07:39,759 --> 00:07:46,319
ways to uh build a successful uh

00:07:43,120 --> 00:07:49,919
business but in many cases it's kind of

00:07:46,319 --> 00:07:52,879
who comes in the conflict with

00:07:49,919 --> 00:07:53,840
the classical romantic open source

00:07:52,879 --> 00:07:57,840
software

00:07:53,840 --> 00:08:00,319
value with that something i will call

00:07:57,840 --> 00:08:00,960
not quite open source got a lot of

00:08:00,319 --> 00:08:04,639
traction

00:08:00,960 --> 00:08:05,680
right and indeed majority office

00:08:04,639 --> 00:08:08,800
software

00:08:05,680 --> 00:08:09,199
which is marketed or casually referred

00:08:08,800 --> 00:08:13,280
as

00:08:09,199 --> 00:08:16,639
open source will fall in one of those

00:08:13,280 --> 00:08:17,759
buckets open core software open source

00:08:16,639 --> 00:08:20,319
eventually

00:08:17,759 --> 00:08:21,919
and so on and so forth let's look at

00:08:20,319 --> 00:08:25,520
mysql for example

00:08:21,919 --> 00:08:28,400
mysql is often spoke about as

00:08:25,520 --> 00:08:29,360
you know world's most popular open

00:08:28,400 --> 00:08:33,039
source

00:08:29,360 --> 00:08:36,080
uh database right but

00:08:33,039 --> 00:08:38,959
in fact mysql is open core

00:08:36,080 --> 00:08:39,360
there is mysql community edition which

00:08:38,959 --> 00:08:42,240
is

00:08:39,360 --> 00:08:44,080
open source it is however missing

00:08:42,240 --> 00:08:47,120
certain features which are

00:08:44,080 --> 00:08:50,399
reserved for the enterprise edition

00:08:47,120 --> 00:08:53,519
which is commercially uh

00:08:50,399 --> 00:08:54,080
commercially licensed right so that

00:08:53,519 --> 00:08:57,200
means you

00:08:54,080 --> 00:08:59,040
cannot get all the features uh

00:08:57,200 --> 00:09:00,240
which you may need in open source

00:08:59,040 --> 00:09:03,680
solution only in

00:09:00,240 --> 00:09:05,200
or in a proprietary one the other

00:09:03,680 --> 00:09:06,959
approaches would be open source

00:09:05,200 --> 00:09:10,959
eventually that's

00:09:06,959 --> 00:09:13,600
when you have a software which

00:09:10,959 --> 00:09:14,959
is released under property license and

00:09:13,600 --> 00:09:17,519
then after certain

00:09:14,959 --> 00:09:20,240
number of years goes open source you

00:09:17,519 --> 00:09:23,680
have shared service licenses for example

00:09:20,240 --> 00:09:27,200
mongodb uses sspl license which

00:09:23,680 --> 00:09:30,320
uh which uh

00:09:27,200 --> 00:09:30,959
restricts competition from from cloud

00:09:30,320 --> 00:09:34,320
vendors

00:09:30,959 --> 00:09:36,000
and so on and so forth and there is also

00:09:34,320 --> 00:09:39,040
an interesting class of software

00:09:36,000 --> 00:09:42,000
which is open source

00:09:39,040 --> 00:09:44,240
compatible software i would like to

00:09:42,000 --> 00:09:46,800
focus on that a little bit

00:09:44,240 --> 00:09:48,880
a little bit more right uh one thing i

00:09:46,800 --> 00:09:50,560
like about the open source compatible

00:09:48,880 --> 00:09:53,920
software what typically

00:09:50,560 --> 00:09:56,640
uh this software is doesn't claim to be

00:09:53,920 --> 00:09:57,200
open source right it's uh you know

00:09:56,640 --> 00:10:00,000
honest

00:09:57,200 --> 00:10:02,160
property software which claims to have

00:10:00,000 --> 00:10:03,519
some level comparability with the open

00:10:02,160 --> 00:10:05,839
source software

00:10:03,519 --> 00:10:07,279
right the important thing though is what

00:10:05,839 --> 00:10:10,399
you understand

00:10:07,279 --> 00:10:13,440
what this compatibility typically means

00:10:10,399 --> 00:10:14,560
right and i like to call this

00:10:13,440 --> 00:10:16,720
comparability

00:10:14,560 --> 00:10:18,640
as a hotel california comparability

00:10:16,720 --> 00:10:22,880
which makes it very easy to check

00:10:18,640 --> 00:10:25,519
in but kind of not so easy to

00:10:22,880 --> 00:10:26,320
check out the open source compatible

00:10:25,519 --> 00:10:28,880
technologies

00:10:26,320 --> 00:10:30,079
often are very much focused at making

00:10:28,880 --> 00:10:32,480
sure it's easy

00:10:30,079 --> 00:10:33,519
migrate from open source technologies to

00:10:32,480 --> 00:10:36,720
them

00:10:33,519 --> 00:10:39,279
but then provide some

00:10:36,720 --> 00:10:41,120
additional features right which you

00:10:39,279 --> 00:10:44,240
would likely adopt and then

00:10:41,120 --> 00:10:44,839
make it very hard to move back to open

00:10:44,240 --> 00:10:48,079
source

00:10:44,839 --> 00:10:50,320
software if you ever need to

00:10:48,079 --> 00:10:53,200
keep this in mind and if you're using

00:10:50,320 --> 00:10:55,440
open source compatible software and if

00:10:53,200 --> 00:10:57,600
really ensuring where you are not locked

00:10:55,440 --> 00:11:01,040
in is important for you

00:10:57,600 --> 00:11:04,079
make sure you test your software with uh

00:11:01,040 --> 00:11:05,920
their open source software in question

00:11:04,079 --> 00:11:07,200
for example in a database space if

00:11:05,920 --> 00:11:10,640
you're running

00:11:07,200 --> 00:11:13,680
amazon aurora and want to uh to ensure

00:11:10,640 --> 00:11:15,200
you uh software can still run on a play

00:11:13,680 --> 00:11:18,480
in mysql

00:11:15,200 --> 00:11:21,600
make sure to test that

00:11:18,480 --> 00:11:21,600
no just hope for that

00:11:21,839 --> 00:11:27,200
now if you think about that not quite

00:11:25,440 --> 00:11:29,040
open source software

00:11:27,200 --> 00:11:31,360
it kind of has an interesting impact to

00:11:29,040 --> 00:11:34,480
the open source movement in general

00:11:31,360 --> 00:11:36,079
on one extent it really allows much more

00:11:34,480 --> 00:11:37,839
investment and a higher pace of

00:11:36,079 --> 00:11:41,839
innovation in the

00:11:37,839 --> 00:11:45,120
in the open source space then uh just a

00:11:41,839 --> 00:11:48,240
bunch of reminded folks would be able to

00:11:45,120 --> 00:11:50,959
provide right but at the same time

00:11:48,240 --> 00:11:53,920
this software does not provide all the

00:11:50,959 --> 00:11:57,519
value of a fully open source

00:11:53,920 --> 00:11:58,240
software and even worse in some cases

00:11:57,519 --> 00:12:02,000
may

00:11:58,240 --> 00:12:04,959
mislead people and erode the value

00:12:02,000 --> 00:12:07,360
of the understanding of the open source

00:12:04,959 --> 00:12:10,720
software as it is

00:12:07,360 --> 00:12:12,880
now if you move to the closer times 2010

00:12:10,720 --> 00:12:15,760
so we have a

00:12:12,880 --> 00:12:16,720
race of a cloud and cloud obviously

00:12:15,760 --> 00:12:19,200
brings

00:12:16,720 --> 00:12:20,480
a lock of unique challenges and

00:12:19,200 --> 00:12:23,519
opportunities to

00:12:20,480 --> 00:12:26,320
open source software i think one

00:12:23,519 --> 00:12:26,720
very interesting effect of the cloud is

00:12:26,320 --> 00:12:29,600
what

00:12:26,720 --> 00:12:30,560
before cloud many companies would rely

00:12:29,600 --> 00:12:33,920
on

00:12:30,560 --> 00:12:37,440
gpl and dual license to prevent

00:12:33,920 --> 00:12:38,399
folks from uh building commercial

00:12:37,440 --> 00:12:41,519
derivative of

00:12:38,399 --> 00:12:43,200
a work and monetizing that without

00:12:41,519 --> 00:12:46,079
giving anything back

00:12:43,200 --> 00:12:47,279
right for example uh mysql had a very

00:12:46,079 --> 00:12:49,839
successful

00:12:47,279 --> 00:12:51,680
uh dual license business where if you

00:12:49,839 --> 00:12:52,000
gpl doesn't work for you you want to

00:12:51,680 --> 00:12:54,000
build

00:12:52,000 --> 00:12:56,000
commercial and it's a commercial

00:12:54,000 --> 00:12:57,200
derivative you can do that but you have

00:12:56,000 --> 00:13:00,320
to buy

00:12:57,200 --> 00:13:01,519
uh the mysql under different license to

00:13:00,320 --> 00:13:04,320
do that

00:13:01,519 --> 00:13:04,320
if a cloud

00:13:05,200 --> 00:13:09,040
you do not actually do software

00:13:07,839 --> 00:13:12,399
distribution

00:13:09,040 --> 00:13:15,040
so you can use uh a gpl modified version

00:13:12,399 --> 00:13:17,760
of gpl software without paying

00:13:15,040 --> 00:13:18,959
anything to anyone right so for example

00:13:17,760 --> 00:13:22,000
amazon aurora

00:13:18,959 --> 00:13:25,040
there is a few other cloud vendors

00:13:22,000 --> 00:13:27,279
run derivatives on mysql and uh

00:13:25,040 --> 00:13:29,040
make a lot of money on that commercial

00:13:27,279 --> 00:13:31,680
derivative without having

00:13:29,040 --> 00:13:32,320
to pay anything to a mysql copyright

00:13:31,680 --> 00:13:35,360
holder

00:13:32,320 --> 00:13:36,800
right and that really broke um a lot of

00:13:35,360 --> 00:13:39,760
business model and really

00:13:36,800 --> 00:13:40,240
forced a lot of the companies which uh

00:13:39,760 --> 00:13:43,279
are

00:13:40,240 --> 00:13:46,320
really capital heavy and really

00:13:43,279 --> 00:13:47,519
need to focus on providing uh you know

00:13:46,320 --> 00:13:50,720
hurricane

00:13:47,519 --> 00:13:54,800
right to to their backers

00:13:50,720 --> 00:13:58,079
uh they had to change the licenses

00:13:54,800 --> 00:14:00,639
away from the open source

00:13:58,079 --> 00:14:02,880
to the licenses which are not quite open

00:14:00,639 --> 00:14:06,160
source but really protect

00:14:02,880 --> 00:14:10,079
the them from being able to

00:14:06,160 --> 00:14:13,120
uh disrupted by cloud

00:14:10,079 --> 00:14:17,040
or hyperscalers right they

00:14:13,120 --> 00:14:18,560
uh of course uh within their

00:14:17,040 --> 00:14:20,240
right to do those things and other

00:14:18,560 --> 00:14:23,680
businesses they are

00:14:20,240 --> 00:14:26,560
uh responsible right to

00:14:23,680 --> 00:14:28,959
to raise shareholders to do that but we

00:14:26,560 --> 00:14:32,240
just have to mindful though those

00:14:28,959 --> 00:14:36,560
uh changes means that there is less of

00:14:32,240 --> 00:14:39,519
open source software available

00:14:36,560 --> 00:14:40,959
another interesting thing uh what have

00:14:39,519 --> 00:14:44,399
been happening in the cloud

00:14:40,959 --> 00:14:47,600
is what i would call a great rebundling

00:14:44,399 --> 00:14:50,320
right with the cloud services

00:14:47,600 --> 00:14:52,800
you now often have your hardware cost

00:14:50,320 --> 00:14:55,920
and usage costs kind of mixed together

00:14:52,800 --> 00:14:58,240
right for example if you are buying

00:14:55,920 --> 00:15:00,320
amazon aurora instance right it's not

00:14:58,240 --> 00:15:02,480
really separated oh this is how much i

00:15:00,320 --> 00:15:03,760
pay for a software and this is how much

00:15:02,480 --> 00:15:07,199
i pay for

00:15:03,760 --> 00:15:09,199
hardware and that is problematic uh

00:15:07,199 --> 00:15:11,040
for open source because you don't have a

00:15:09,199 --> 00:15:13,600
zero price effect anymore

00:15:11,040 --> 00:15:15,600
right there is something very much

00:15:13,600 --> 00:15:19,519
magical about price

00:15:15,600 --> 00:15:23,680
uh free which often takes us to uh

00:15:19,519 --> 00:15:25,360
you know spend more time right even or

00:15:23,680 --> 00:15:28,399
effort working with a free

00:15:25,360 --> 00:15:30,079
uh solutions when even if they are uh

00:15:28,399 --> 00:15:32,959
paying you know just a little bit of

00:15:30,079 --> 00:15:36,480
money to to get them

00:15:32,959 --> 00:15:40,160
additionally the uh most

00:15:36,480 --> 00:15:43,600
convenient and easy way to adopt

00:15:40,160 --> 00:15:46,560
data databases uh has been uh

00:15:43,600 --> 00:15:46,800
becoming the pattern called the database

00:15:46,560 --> 00:15:50,000
as

00:15:46,800 --> 00:15:51,839
a service and uh it is fantastic and i

00:15:50,000 --> 00:15:54,880
think that is where the database is

00:15:51,839 --> 00:15:59,279
moving at large

00:15:54,880 --> 00:16:03,680
at the future right

00:15:59,279 --> 00:16:05,199
and the added benefits or interest and

00:16:03,680 --> 00:16:08,480
benefit it provides

00:16:05,199 --> 00:16:09,680
is what that really allows developers to

00:16:08,480 --> 00:16:12,880
choose

00:16:09,680 --> 00:16:16,639
more database technologies

00:16:12,880 --> 00:16:17,440
to meet their needs like an experiment

00:16:16,639 --> 00:16:20,000
more

00:16:17,440 --> 00:16:21,279
because in the past you know before

00:16:20,000 --> 00:16:24,079
databases servers

00:16:21,279 --> 00:16:26,079
if i want to deploy this kind of a new

00:16:24,079 --> 00:16:28,079
database and use it in my software i

00:16:26,079 --> 00:16:29,120
would need to make sure the ops team is

00:16:28,079 --> 00:16:31,440
able to

00:16:29,120 --> 00:16:36,000
provide all kind of services keeping it

00:16:31,440 --> 00:16:38,000
at 24x7 security patching policies

00:16:36,000 --> 00:16:40,800
so on and so forth with database as a

00:16:38,000 --> 00:16:44,320
service often that can be

00:16:40,800 --> 00:16:47,360
outsourced to a vendor and you are

00:16:44,320 --> 00:16:49,600
uh as developer you know just get a

00:16:47,360 --> 00:16:52,560
database instance you can

00:16:49,600 --> 00:16:54,480
you can use and i think that is one of

00:16:52,560 --> 00:16:57,600
the reasons why we see

00:16:54,480 --> 00:17:00,880
uh really so many companies using uh

00:16:57,600 --> 00:17:04,240
increased number of purpose-built uh

00:17:00,880 --> 00:17:07,199
databases open source and not for their

00:17:04,240 --> 00:17:07,839
applications another thing which i think

00:17:07,199 --> 00:17:11,120
is quite

00:17:07,839 --> 00:17:11,679
um interesting about the database as a

00:17:11,120 --> 00:17:14,799
service

00:17:11,679 --> 00:17:18,000
well as many uh

00:17:14,799 --> 00:17:20,880
many things it tends

00:17:18,000 --> 00:17:23,439
to be over marketed right it does

00:17:20,880 --> 00:17:26,319
provide a lot of fantastic uh

00:17:23,439 --> 00:17:27,199
fantastic benefits but its promise is

00:17:26,319 --> 00:17:30,240
much higher

00:17:27,199 --> 00:17:32,000
than that we find a

00:17:30,240 --> 00:17:33,760
number of customers which come and say

00:17:32,000 --> 00:17:35,919
well you know what we kind of

00:17:33,760 --> 00:17:38,480
we're sold on that kind of fully managed

00:17:35,919 --> 00:17:40,960
database as a service you don't need

00:17:38,480 --> 00:17:42,960
um you know any dbas on what's not but

00:17:40,960 --> 00:17:45,520
then we figure out you actually

00:17:42,960 --> 00:17:46,880
need somebody to understand the

00:17:45,520 --> 00:17:49,360
databases because

00:17:46,880 --> 00:17:51,440
databases service is not going to design

00:17:49,360 --> 00:17:54,799
a schema for you right or

00:17:51,440 --> 00:17:56,640
uh tell you how to rewrite your queries

00:17:54,799 --> 00:17:57,039
from bad queries to good queries and

00:17:56,640 --> 00:18:01,200
stuff

00:17:57,039 --> 00:18:05,120
like that which is one of them

00:18:01,200 --> 00:18:08,400
you know core functions of your

00:18:05,120 --> 00:18:11,679
dba team if you have that what you

00:18:08,400 --> 00:18:13,840
also have found if a database

00:18:11,679 --> 00:18:15,679
offer which do not have a lot of

00:18:13,840 --> 00:18:18,960
database knowledge

00:18:15,679 --> 00:18:22,400
and uh uh and

00:18:18,960 --> 00:18:25,760
uh understanding uh right they

00:18:22,400 --> 00:18:28,559
uh often uh

00:18:25,760 --> 00:18:30,080
would have some additional problems when

00:18:28,559 --> 00:18:32,880
it comes to database

00:18:30,080 --> 00:18:34,799
as a service usage for example there has

00:18:32,880 --> 00:18:38,000
been in the last few years

00:18:34,799 --> 00:18:40,320
a lot more cases of security incidents

00:18:38,000 --> 00:18:42,559
because database have not been

00:18:40,320 --> 00:18:43,440
configured appropriately uh increased

00:18:42,559 --> 00:18:45,679
level of

00:18:43,440 --> 00:18:47,760
you know the down times for example

00:18:45,679 --> 00:18:48,799
because of lack of appropriate capacity

00:18:47,760 --> 00:18:51,919
planning

00:18:48,799 --> 00:18:52,880
uh you know and so on and so forth right

00:18:51,919 --> 00:18:55,919
so

00:18:52,880 --> 00:18:57,200
uh keep that in mind if that's uh

00:18:55,919 --> 00:19:01,679
something

00:18:57,200 --> 00:19:04,080
uh you're thinking uh thinking about

00:19:01,679 --> 00:19:05,200
now if you think about the cloud i think

00:19:04,080 --> 00:19:08,240
right now

00:19:05,200 --> 00:19:10,720
there is those two different approaches

00:19:08,240 --> 00:19:12,080
how cloud can be used and they are in

00:19:10,720 --> 00:19:14,400
use at the same time

00:19:12,080 --> 00:19:15,520
and different teams think about that

00:19:14,400 --> 00:19:18,960
differently

00:19:15,520 --> 00:19:21,039
some think about cloud as commodity

00:19:18,960 --> 00:19:22,080
and uh you know compare that to

00:19:21,039 --> 00:19:24,640
something like

00:19:22,080 --> 00:19:26,640
electricity or your internet provider

00:19:24,640 --> 00:19:28,480
right there they are not so very much

00:19:26,640 --> 00:19:31,520
differentiated you can

00:19:28,480 --> 00:19:34,400
switch one to another relatively

00:19:31,520 --> 00:19:35,760
easily right and this means you leverage

00:19:34,400 --> 00:19:38,080
a lot of power

00:19:35,760 --> 00:19:39,440
in negotiation right if you uh would

00:19:38,080 --> 00:19:42,480
have have one

00:19:39,440 --> 00:19:44,559
right in this case uh you are using

00:19:42,480 --> 00:19:45,520
many of the compatible implementations

00:19:44,559 --> 00:19:50,080
you know maybe using

00:19:45,520 --> 00:19:53,280
s3 right for storage compute instances

00:19:50,080 --> 00:19:54,799
uh in many cases those days uh whereas

00:19:53,280 --> 00:19:58,240
where kubernetes

00:19:54,799 --> 00:20:01,440
is being used as a uh a you know

00:19:58,240 --> 00:20:04,000
uh the cloud neutral uh

00:20:01,440 --> 00:20:05,840
api right and that really gives you a

00:20:04,000 --> 00:20:08,000
lot of flexibility peaking and choosing

00:20:05,840 --> 00:20:10,400
cloud but it's not maybe as

00:20:08,000 --> 00:20:12,080
polished or as effective and that is

00:20:10,400 --> 00:20:13,120
where the other approach comes in when

00:20:12,080 --> 00:20:16,159
you say hey

00:20:13,120 --> 00:20:18,159
i am going to use proprietary solutions

00:20:16,159 --> 00:20:20,080
available from

00:20:18,159 --> 00:20:21,360
the vendor right to build my

00:20:20,080 --> 00:20:23,679
applications

00:20:21,360 --> 00:20:25,840
as quickly as possible right i would use

00:20:23,679 --> 00:20:26,480
uh database technologies such as amazon

00:20:25,840 --> 00:20:30,320
aurora

00:20:26,480 --> 00:20:32,159
or even dynamodb and so on and so forth

00:20:30,320 --> 00:20:34,720
right and a full stack of those

00:20:32,159 --> 00:20:35,919
highly differentiated proprietary

00:20:34,720 --> 00:20:38,720
technologies

00:20:35,919 --> 00:20:39,600
which will uh possibly allow me to move

00:20:38,720 --> 00:20:41,919
faster

00:20:39,600 --> 00:20:44,159
but comes off with a risk or if i have

00:20:41,919 --> 00:20:48,720
to adopt another

00:20:44,159 --> 00:20:52,400
cloud it will be very inexpensive

00:20:48,720 --> 00:20:54,799
and uh impossible what they see

00:20:52,400 --> 00:20:55,679
though from our side and again they're

00:20:54,799 --> 00:20:59,679
quite biased

00:20:55,679 --> 00:21:03,039
in their uh open source uh space what uh

00:20:59,679 --> 00:21:06,960
nobody really wants to be uh the host

00:21:03,039 --> 00:21:11,600
uh and with the trains with databases

00:21:06,960 --> 00:21:15,200
database as i described um

00:21:11,600 --> 00:21:17,919
you see the pivot happening towards

00:21:15,200 --> 00:21:19,600
what you can call the multiverse where

00:21:17,919 --> 00:21:23,039
multiple database technologies

00:21:19,600 --> 00:21:25,830
are used in multi-cloud

00:21:23,039 --> 00:21:27,280
and hybrid cloud

00:21:25,830 --> 00:21:31,440
[Music]

00:21:27,280 --> 00:21:34,400
environment right uh

00:21:31,440 --> 00:21:36,240
for this ecosystem you can see actually

00:21:34,400 --> 00:21:39,840
a lot of property resolutions

00:21:36,240 --> 00:21:41,120
are available right to run multi-cloud

00:21:39,840 --> 00:21:43,520
and hybrid cloud

00:21:41,120 --> 00:21:45,360
all cloud big cloud vendors as well as

00:21:43,520 --> 00:21:48,559
companies like vmware

00:21:45,360 --> 00:21:51,840
uh have some solution in this market

00:21:48,559 --> 00:21:54,559
and additionally we have a kubernetes

00:21:51,840 --> 00:21:55,280
emerging as this kind of leading open

00:21:54,559 --> 00:21:58,400
source

00:21:55,280 --> 00:22:02,559
alternative which works on any clouds

00:21:58,400 --> 00:22:05,600
uh being that's public cloud or

00:22:02,559 --> 00:22:08,799
or private cloud

00:22:05,600 --> 00:22:13,600
if you think about the open source

00:22:08,799 --> 00:22:16,400
databases how do

00:22:13,600 --> 00:22:17,520
they evolve in this market and what they

00:22:16,400 --> 00:22:19,679
should do

00:22:17,520 --> 00:22:22,080
one thing i think they should adapt for

00:22:19,679 --> 00:22:23,760
cloud native deployment in multi-cloud

00:22:22,080 --> 00:22:27,039
and hybrid cloud environment

00:22:23,760 --> 00:22:30,400
right this is uh different compared to

00:22:27,039 --> 00:22:33,440
on prem deployments from uh many

00:22:30,400 --> 00:22:36,480
uh dimensions right

00:22:33,440 --> 00:22:37,280
uh the second uh is what the kubernetes

00:22:36,480 --> 00:22:40,159
api

00:22:37,280 --> 00:22:40,880
is really apf chose for many open source

00:22:40,159 --> 00:22:42,159
database

00:22:40,880 --> 00:22:44,720
deployments right and we see

00:22:42,159 --> 00:22:45,760
increasingly uh standardization

00:22:44,720 --> 00:22:48,640
happening in

00:22:45,760 --> 00:22:50,320
this place what i think is still uh

00:22:48,640 --> 00:22:53,600
missing right now

00:22:50,320 --> 00:22:54,400
is a focus on simplicity right if you

00:22:53,600 --> 00:22:57,039
really

00:22:54,400 --> 00:22:59,200
want to have an integrated databases

00:22:57,039 --> 00:23:03,200
service solution which is similar

00:22:59,200 --> 00:23:04,400
to amazon rds aurora google cloud scale

00:23:03,200 --> 00:23:09,039
and so on and so forth

00:23:04,400 --> 00:23:12,400
from simplicity it is

00:23:09,039 --> 00:23:15,360
no hard to do

00:23:12,400 --> 00:23:16,960
right i mean i don't see uh haven't seen

00:23:15,360 --> 00:23:20,559
the open source solutions

00:23:16,960 --> 00:23:20,559
which are at that level yet

00:23:20,840 --> 00:23:25,919
so in your case i think

00:23:24,080 --> 00:23:28,240
as you're choosing database as a service

00:23:25,919 --> 00:23:28,559
you may not be able to get everything

00:23:28,240 --> 00:23:31,520
from

00:23:28,559 --> 00:23:32,320
open source yet but at least ask a

00:23:31,520 --> 00:23:35,120
question

00:23:32,320 --> 00:23:35,679
in this case how do you get from most

00:23:35,120 --> 00:23:39,360
from

00:23:35,679 --> 00:23:42,559
open source from our side at your corner

00:23:39,360 --> 00:23:44,880
we are really working uh hard to

00:23:42,559 --> 00:23:45,760
push boundaries of what open source can

00:23:44,880 --> 00:23:48,159
uh

00:23:45,760 --> 00:23:49,840
offer with our products their corner

00:23:48,159 --> 00:23:50,080
monitoring management which is your kind

00:23:49,840 --> 00:23:53,679
of

00:23:50,080 --> 00:23:54,640
gui for gui for monitoring right in the

00:23:53,679 --> 00:23:57,279
future

00:23:54,640 --> 00:23:59,919
deployment and management and also

00:23:57,279 --> 00:24:02,960
operators which really allow you to

00:23:59,919 --> 00:24:07,200
run the databases in

00:24:02,960 --> 00:24:10,320
uh in kubernetes environment efficiently

00:24:07,200 --> 00:24:12,880
okay in the last uh

00:24:10,320 --> 00:24:15,520
15 minutes or so i wanted to talk about

00:24:12,880 --> 00:24:19,200
the database

00:24:15,520 --> 00:24:20,159
database technology uh and the changes

00:24:19,200 --> 00:24:24,320
are happening in

00:24:20,159 --> 00:24:27,679
uh in this space if you think about the

00:24:24,320 --> 00:24:30,400
brief history uh in uh

00:24:27,679 --> 00:24:32,559
of a database technologies it's kind of

00:24:30,400 --> 00:24:36,400
interesting in terms of what

00:24:32,559 --> 00:24:38,400
everything old is now new again

00:24:36,400 --> 00:24:40,880
if you look at the very early days of a

00:24:38,400 --> 00:24:42,400
database technologies you know 60s 70s

00:24:40,880 --> 00:24:46,440
there was a lot

00:24:42,400 --> 00:24:49,360
of different models

00:24:46,440 --> 00:24:50,480
implementations languages rights and a

00:24:49,360 --> 00:24:54,720
lot of

00:24:50,480 --> 00:24:58,320
fragmentation thereby 80s and 90s

00:24:54,720 --> 00:25:02,080
we have a lot of standardization happen

00:24:58,320 --> 00:25:04,799
and uh pretty much complete

00:25:02,080 --> 00:25:06,320
dominance of relational databases and

00:25:04,799 --> 00:25:08,000
sql query language

00:25:06,320 --> 00:25:09,760
there have been different databases of

00:25:08,000 --> 00:25:13,039
course in different vendors but

00:25:09,760 --> 00:25:14,000
their big language decision and so on

00:25:13,039 --> 00:25:18,080
and so forth was

00:25:14,000 --> 00:25:20,320
very much unified and if you look at uh

00:25:18,080 --> 00:25:21,600
starting from 2000s we have a new wave

00:25:20,320 --> 00:25:23,919
of innovation

00:25:21,600 --> 00:25:24,799
which both applies in terms of data

00:25:23,919 --> 00:25:28,000
models

00:25:24,799 --> 00:25:31,840
as well as the

00:25:28,000 --> 00:25:33,600
query languages so what trends do we see

00:25:31,840 --> 00:25:35,520
actually right now as we are starting

00:25:33,600 --> 00:25:38,080
our 2020s

00:25:35,520 --> 00:25:40,400
well one is what we see developers and

00:25:38,080 --> 00:25:43,120
architects are empowered to make

00:25:40,400 --> 00:25:44,400
more choices related to the database

00:25:43,120 --> 00:25:47,039
technology

00:25:44,400 --> 00:25:49,200
we spoke about that when it comes to one

00:25:47,039 --> 00:25:51,039
of the drivers that is

00:25:49,200 --> 00:25:52,240
database as a server so that means

00:25:51,039 --> 00:25:54,799
developers can

00:25:52,240 --> 00:25:57,039
actually you know choose technology and

00:25:54,799 --> 00:25:59,679
have it run for them without

00:25:57,039 --> 00:26:00,400
needing another team of ops people to

00:25:59,679 --> 00:26:03,440
commit to that

00:26:00,400 --> 00:26:05,679
at least in certain environment right so

00:26:03,440 --> 00:26:07,279
cloud makes using those multiple

00:26:05,679 --> 00:26:09,760
databases easy

00:26:07,279 --> 00:26:11,600
and now which is interesting is

00:26:09,760 --> 00:26:13,360
microservice architectures right

00:26:11,600 --> 00:26:15,520
even if you don't go all the way to

00:26:13,360 --> 00:26:20,240
microservice architectures right the

00:26:15,520 --> 00:26:23,039
kind of decomposing to the monolith to

00:26:20,240 --> 00:26:24,080
to more building blocks that often means

00:26:23,039 --> 00:26:28,080
that each of those

00:26:24,080 --> 00:26:30,320
built-in blocks uh have its own

00:26:28,080 --> 00:26:32,559
needs and its own choices for a data

00:26:30,320 --> 00:26:35,120
store right and that's how multiple

00:26:32,559 --> 00:26:38,240
technologies may be

00:26:35,120 --> 00:26:39,120
adopted and that also brings us the term

00:26:38,240 --> 00:26:42,240
of uh

00:26:39,120 --> 00:26:44,400
multi-store where in so many cases you

00:26:42,240 --> 00:26:48,559
would have a same information which

00:26:44,400 --> 00:26:50,880
is stored in a different form uh in uh

00:26:48,559 --> 00:26:51,840
multiple systems right for example one

00:26:50,880 --> 00:26:56,480
may

00:26:51,840 --> 00:26:58,720
use uh let's say mysql as your database

00:26:56,480 --> 00:27:00,480
of record right to record the

00:26:58,720 --> 00:27:02,960
you know orders and so on and so forth

00:27:00,480 --> 00:27:05,039
and then shift the data from kafka to

00:27:02,960 --> 00:27:06,559
elasticsearch for full text search needs

00:27:05,039 --> 00:27:09,360
because it's much better

00:27:06,559 --> 00:27:10,559
and then use the same kafka to ship the

00:27:09,360 --> 00:27:13,919
data to

00:27:10,559 --> 00:27:16,400
click house or red shift to

00:27:13,919 --> 00:27:17,760
really have a you know very fast uh

00:27:16,400 --> 00:27:21,679
analytical

00:27:17,760 --> 00:27:24,480
workloads right with uh a column store

00:27:21,679 --> 00:27:25,279
one question you may ask is uh okay i

00:27:24,480 --> 00:27:27,520
will use it

00:27:25,279 --> 00:27:28,480
this will be using relational or

00:27:27,520 --> 00:27:31,200
non-relational

00:27:28,480 --> 00:27:32,159
databases one i think it's uh

00:27:31,200 --> 00:27:35,520
interesting in this case

00:27:32,159 --> 00:27:35,840
it's even now right while we have a lot

00:27:35,520 --> 00:27:39,039
of

00:27:35,840 --> 00:27:40,720
other databases come to fruition the

00:27:39,039 --> 00:27:41,520
relational databases are still

00:27:40,720 --> 00:27:43,919
completely

00:27:41,520 --> 00:27:45,360
dominating at least in terms of general

00:27:43,919 --> 00:27:48,480
purpose databases

00:27:45,360 --> 00:27:49,600
but at the same time if you look at the

00:27:48,480 --> 00:27:52,320
growth rate

00:27:49,600 --> 00:27:53,919
what you would see you would see uh

00:27:52,320 --> 00:27:56,559
things like uh

00:27:53,919 --> 00:27:58,399
time series databases right or document

00:27:56,559 --> 00:28:01,440
database and so on so forth they

00:27:58,399 --> 00:28:05,120
all grow a lot faster than uh

00:28:01,440 --> 00:28:08,080
relational databases those days right

00:28:05,120 --> 00:28:10,080
so a lot of those special purpose

00:28:08,080 --> 00:28:13,440
database are growing

00:28:10,080 --> 00:28:16,320
much faster there is uh

00:28:13,440 --> 00:28:18,399
two innovation which happens with a data

00:28:16,320 --> 00:28:21,360
data model

00:28:18,399 --> 00:28:22,559
and one approach is to break with

00:28:21,360 --> 00:28:26,399
relational data model

00:28:22,559 --> 00:28:28,880
entirely right that's how many companies

00:28:26,399 --> 00:28:30,000
did you know think in uh you know

00:28:28,880 --> 00:28:33,120
cassandra

00:28:30,000 --> 00:28:37,039
mongodb regis and so on and so forth

00:28:33,120 --> 00:28:37,760
or extend sql right and that is also

00:28:37,039 --> 00:28:39,760
what uh

00:28:37,760 --> 00:28:41,760
have been happening in many sql

00:28:39,760 --> 00:28:46,080
technologies you know think about

00:28:41,760 --> 00:28:48,320
uh mysql or postgres or sqlite even

00:28:46,080 --> 00:28:50,159
all of them have extended their

00:28:48,320 --> 00:28:53,200
relational sql model

00:28:50,159 --> 00:28:55,360
to process the document data such as

00:28:53,200 --> 00:28:58,399
json specifically

00:28:55,360 --> 00:29:01,679
better and another thing which

00:28:58,399 --> 00:29:05,440
i uh i see uh

00:29:01,679 --> 00:29:07,440
quite uh interesting this is another

00:29:05,440 --> 00:29:09,440
kind of dual trend uh where two

00:29:07,440 --> 00:29:12,480
competing approaches exist

00:29:09,440 --> 00:29:15,679
uh one of them is multimodal

00:29:12,480 --> 00:29:17,279
databases that is when you have one

00:29:15,679 --> 00:29:19,360
database which can actually be

00:29:17,279 --> 00:29:20,480
used through a different protocol using

00:29:19,360 --> 00:29:23,360
different models

00:29:20,480 --> 00:29:24,880
for example arangodb supports many

00:29:23,360 --> 00:29:27,919
different models or

00:29:24,880 --> 00:29:30,080
even mysql well it doesn't uh

00:29:27,919 --> 00:29:33,120
market itself as multi-modal database it

00:29:30,080 --> 00:29:33,919
has both sql interface and also docstore

00:29:33,120 --> 00:29:38,000
crud

00:29:33,919 --> 00:29:41,120
uh protocol as well

00:29:38,000 --> 00:29:44,320
right and then another one

00:29:41,120 --> 00:29:46,240
is um hybrid

00:29:44,320 --> 00:29:47,919
transactional analytical databases

00:29:46,240 --> 00:29:49,760
versus multi-store

00:29:47,919 --> 00:29:51,200
one approach is to say hey you'll have

00:29:49,760 --> 00:29:55,120
one database

00:29:51,200 --> 00:29:55,840
for example uh the you know pin camp

00:29:55,120 --> 00:29:59,279
style db

00:29:55,840 --> 00:30:00,320
and many others which will uh really be

00:29:59,279 --> 00:30:03,279
very good

00:30:00,320 --> 00:30:05,120
at both running analytical queries as

00:30:03,279 --> 00:30:06,799
well as your transactional queries

00:30:05,120 --> 00:30:08,399
where another approach is saying hey you

00:30:06,799 --> 00:30:10,000
know what we will use one database

00:30:08,399 --> 00:30:10,720
technology which is transaction

00:30:10,000 --> 00:30:13,679
optimized

00:30:10,720 --> 00:30:15,919
another which is optimized for

00:30:13,679 --> 00:30:18,159
analytical queries right and

00:30:15,919 --> 00:30:19,760
the data will flow between them both

00:30:18,159 --> 00:30:22,000
approaches are currently used

00:30:19,760 --> 00:30:23,679
successfully and in fact will be very

00:30:22,000 --> 00:30:24,799
interesting to see if there would be

00:30:23,679 --> 00:30:26,799
some call

00:30:24,799 --> 00:30:28,320
they call this somewhere in the future

00:30:26,799 --> 00:30:32,799
or we'll have

00:30:28,320 --> 00:30:36,559
them happen at the same time

00:30:32,799 --> 00:30:38,559
in terms of scaling uh

00:30:36,559 --> 00:30:40,080
there are two scaling approaches which

00:30:38,559 --> 00:30:42,799
come to the databases

00:30:40,080 --> 00:30:43,919
one is traditional land from early days

00:30:42,799 --> 00:30:46,640
is scaling up

00:30:43,919 --> 00:30:47,520
right if you think about a couple of

00:30:46,640 --> 00:30:50,399
decades ago

00:30:47,520 --> 00:30:52,320
right if you needed to scale your oracle

00:30:50,399 --> 00:30:55,520
instance you often would

00:30:52,320 --> 00:30:56,559
you know buy even bigger sandbox right

00:30:55,520 --> 00:31:00,000
and

00:30:56,559 --> 00:31:03,039
run it run on it the scale

00:31:00,000 --> 00:31:04,559
out approach means instead of that will

00:31:03,039 --> 00:31:07,760
spread database across

00:31:04,559 --> 00:31:09,039
many many uh systems right often it also

00:31:07,760 --> 00:31:12,159
can be referred as

00:31:09,039 --> 00:31:16,559
charging the mongodb cassandra

00:31:12,159 --> 00:31:19,200
uh you know gigabytes uh planet scale uh

00:31:16,559 --> 00:31:19,600
vts right they're all designed with that

00:31:19,200 --> 00:31:23,679
uh

00:31:19,600 --> 00:31:25,440
scale out in mind and uh

00:31:23,679 --> 00:31:28,159
it is no question what if you want to

00:31:25,440 --> 00:31:31,279
build a huge scale applications

00:31:28,159 --> 00:31:33,360
you know i think a facebook scale right

00:31:31,279 --> 00:31:35,200
uh then you can't really scale up there

00:31:33,360 --> 00:31:39,519
is no single server

00:31:35,200 --> 00:31:42,960
which can run uh facebook workloads

00:31:39,519 --> 00:31:45,600
uh right in in existence right

00:31:42,960 --> 00:31:46,399
but the question comes is well do we

00:31:45,600 --> 00:31:48,880
need

00:31:46,399 --> 00:31:50,320
both right do we need both databases

00:31:48,880 --> 00:31:52,640
which are optimized for

00:31:50,320 --> 00:31:54,880
working very efficiently maybe for

00:31:52,640 --> 00:31:57,279
medium-sized databases

00:31:54,880 --> 00:31:59,360
in the constraints of a single server or

00:31:57,279 --> 00:32:02,960
should we be only looking at those

00:31:59,360 --> 00:32:04,000
the uh distributed database which tends

00:32:02,960 --> 00:32:05,760
to be kind of more

00:32:04,000 --> 00:32:09,440
complicated and have some different

00:32:05,760 --> 00:32:09,440
performance characteristics

00:32:09,679 --> 00:32:16,399
a couple of architecture trends to

00:32:13,360 --> 00:32:20,000
uh which are driving i think in uh

00:32:16,399 --> 00:32:20,960
in uh the decisions for databases right

00:32:20,000 --> 00:32:24,159
now

00:32:20,960 --> 00:32:26,399
is uh they're locally distributed

00:32:24,159 --> 00:32:28,399
right that is pretty much your shutter

00:32:26,399 --> 00:32:31,919
database right very analog

00:32:28,399 --> 00:32:35,120
to allow to uh scale

00:32:31,919 --> 00:32:37,679
out but another interesting trend which

00:32:35,120 --> 00:32:38,399
many people uh many use cases demand

00:32:37,679 --> 00:32:40,320
right now

00:32:38,399 --> 00:32:43,600
is geographically distributed when you

00:32:40,320 --> 00:32:46,399
can say well i need my database to leave

00:32:43,600 --> 00:32:47,360
in many geographical regions which can

00:32:46,399 --> 00:32:51,600
be because

00:32:47,360 --> 00:32:53,440
of their performance reasons

00:32:51,600 --> 00:32:56,080
it can also could be because of the

00:32:53,440 --> 00:32:58,720
legal reasons you may uh

00:32:56,080 --> 00:33:00,399
have a local government saying hey well

00:32:58,720 --> 00:33:04,320
the information of my users

00:33:00,399 --> 00:33:07,120
needs to be stored in my country

00:33:04,320 --> 00:33:09,279
right and if you want to have all your

00:33:07,120 --> 00:33:11,440
users in a single database well

00:33:09,279 --> 00:33:13,360
you'll have to have your database kind

00:33:11,440 --> 00:33:16,320
of to be geographically

00:33:13,360 --> 00:33:18,480
uh aware we have a lot of work going on

00:33:16,320 --> 00:33:20,080
with cloud native and kubernetes focused

00:33:18,480 --> 00:33:23,120
databases

00:33:20,080 --> 00:33:24,000
and at the same time also many databases

00:33:23,120 --> 00:33:26,399
are being built

00:33:24,000 --> 00:33:27,600
as a cloud only databases which are

00:33:26,399 --> 00:33:29,440
available

00:33:27,600 --> 00:33:31,360
only in the constraints of that given

00:33:29,440 --> 00:33:32,159
property cloud you know think about

00:33:31,360 --> 00:33:35,200
cosmos db

00:33:32,159 --> 00:33:38,240
dynamodb which i uh answer

00:33:35,200 --> 00:33:39,120
mentioned already another interesting

00:33:38,240 --> 00:33:42,159
trend

00:33:39,120 --> 00:33:43,760
is separation of a storage and compute

00:33:42,159 --> 00:33:46,159
which a lot of databases are thinking

00:33:43,760 --> 00:33:50,080
about or at least pursuing because

00:33:46,159 --> 00:33:53,360
they're you know a very seductive

00:33:50,080 --> 00:33:55,679
uh benefit of this approach is what that

00:33:53,360 --> 00:33:56,480
allows you to scale storage and compute

00:33:55,679 --> 00:33:58,880
separately

00:33:56,480 --> 00:34:00,320
and it allows you kind of to have your

00:33:58,880 --> 00:34:03,760
compute stateless

00:34:00,320 --> 00:34:07,360
right which you know brings uh many

00:34:03,760 --> 00:34:10,079
other architecture design uh

00:34:07,360 --> 00:34:12,480
benefits though that is not something

00:34:10,079 --> 00:34:15,359
about what traditional databases like

00:34:12,480 --> 00:34:15,919
mysql postgres or even you know

00:34:15,359 --> 00:34:19,679
has been

00:34:15,919 --> 00:34:21,760
uh designed for hardware acceleration

00:34:19,679 --> 00:34:23,679
is another very interesting uh uh

00:34:21,760 --> 00:34:26,240
interesting trend right we see

00:34:23,679 --> 00:34:28,079
uh many analytical databases for example

00:34:26,240 --> 00:34:31,359
figuring out how to use gpu

00:34:28,079 --> 00:34:33,440
successfully there is also a

00:34:31,359 --> 00:34:35,040
new generation of storage coming in

00:34:33,440 --> 00:34:37,200
which can accelerate some of the

00:34:35,040 --> 00:34:40,800
database uh

00:34:37,200 --> 00:34:44,079
the operations and

00:34:40,800 --> 00:34:48,399
so on and so forth

00:34:44,079 --> 00:34:52,240
well uh as a summary i wanted to

00:34:48,399 --> 00:34:55,760
uh highlight what there is a lot

00:34:52,240 --> 00:34:57,200
of going on with uh in the open source

00:34:55,760 --> 00:35:00,000
database space

00:34:57,200 --> 00:35:01,359
i think that is a great time to be

00:35:00,000 --> 00:35:04,800
involved with

00:35:01,359 --> 00:35:08,160
open source databases there is

00:35:04,800 --> 00:35:11,280
a lot of fun things to do and

00:35:08,160 --> 00:35:15,359
as well a lot of career opportunities in

00:35:11,280 --> 00:35:18,160
which comes with open source databases

00:35:15,359 --> 00:35:19,200
right one thing on my personal level

00:35:18,160 --> 00:35:22,640
which i would

00:35:19,200 --> 00:35:23,760
encourage you all to do uh is to what

00:35:22,640 --> 00:35:27,119
extent it possible

00:35:23,760 --> 00:35:30,640
uh keep the open source uh

00:35:27,119 --> 00:35:34,480
uh open uh and uh for

00:35:30,640 --> 00:35:38,720
benefits of all of us and with that

00:35:34,480 --> 00:35:40,800
that's all i have for you folks

00:35:38,720 --> 00:35:45,839
and uh feel free to reach out do you

00:35:40,800 --> 00:35:45,839

YouTube URL: https://www.youtube.com/watch?v=XdsX7EWLzL8


