Title: FINOS Open Source in Fintech Meetup | Introduction to TimeBase Community Edition | Ilya Gorelik
Publication date: 2021-01-08
Playlist: FINOS Guest Speakers & Meetups
Description: 
	This video is from the FINOS Open Source in Fintech Meetup | Introduction to TimeBase Community Edition | Ilya Gorelik & Aliaksei Vavilau | EPAM | October 2020

►► Wrap up article with slides from the meetup: https://www.finos.org/blog/finos-meetup-guest-speakers-epam-introduction-to-timebase

-=-=-=-=-

►► Learn more about FINOS and how we deliver the power of open source to financial services:
FINOS: https://www.finos.org/

►► Playlist for all of our 2019 / 2020 Meetups and Guest Speakers: https://www.youtube.com/playlist?list=PLmPXh6nBuhJsYg1tP9dh3pNq2pVrGTdWs
 
►► Enjoy our FINOS Open Source in Fintech Podcast

All 2020 Podcasts: https://www.finos.org/blog/2020-finos-open-source-in-fintech-podcast-episodes

iTunes: https://podcasts.apple.com/us/podcast/finos-open-source-in-fintech-podcast/id1512371068

Spotify: https://open.spotify.com/show/431XdfX2fBdCUsopwh8td3

Google Podcasts: https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy8xZjQ0NTg4MC9wb2RjYXN0L3Jzcw==

Stitcher: https://www.stitcher.com/show/finos-open-source-in-fintech-podcast
4

Anchor.fm (for all platform links): https://anchor.fm/finos
Captions: 
	00:00:03,690 --> 00:00:11,890
[Music]

00:00:13,440 --> 00:00:15,759
hi

00:00:13,759 --> 00:00:16,880
good afternoon good morning and welcome

00:00:15,759 --> 00:00:19,439
to the finnos

00:00:16,880 --> 00:00:21,840
virtual meetup um i'm james macleod the

00:00:19,439 --> 00:00:24,560
director of community at finos

00:00:21,840 --> 00:00:26,000
and i'm joined by ilya gorlick vice

00:00:24,560 --> 00:00:27,920
president and head of real-time

00:00:26,000 --> 00:00:31,599
computing lab at epam

00:00:27,920 --> 00:00:33,120
and alexi w you can put me right on that

00:00:31,599 --> 00:00:35,920
lexi very soon

00:00:33,120 --> 00:00:37,040
um he's the chief architect of timebase

00:00:35,920 --> 00:00:39,680
at epam

00:00:37,040 --> 00:00:41,760
and they're here to introduce us to to

00:00:39,680 --> 00:00:43,520
timebase community edition

00:00:41,760 --> 00:00:45,440
but before we actually get into the

00:00:43,520 --> 00:00:47,120
presentation i'd like to

00:00:45,440 --> 00:00:49,600
ask everybody who's joining us this

00:00:47,120 --> 00:00:50,320
afternoon to put any questions that you

00:00:49,600 --> 00:00:53,120
may have

00:00:50,320 --> 00:00:54,320
to the team in the webex chat i'd also

00:00:53,120 --> 00:00:56,320
like to say that um

00:00:54,320 --> 00:00:58,079
this afternoon we'll be giving away two

00:00:56,320 --> 00:01:00,480
free finnos t-shirts

00:00:58,079 --> 00:01:01,359
picked at random for people who have

00:01:00,480 --> 00:01:04,159
registered

00:01:01,359 --> 00:01:05,119
on finos for this presentation and meet

00:01:04,159 --> 00:01:09,680
up

00:01:05,119 --> 00:01:11,280
um so please go across to finnos.org

00:01:09,680 --> 00:01:12,960
where you'll be able to register for

00:01:11,280 --> 00:01:13,840
this meet up if you haven't done so

00:01:12,960 --> 00:01:16,240
already

00:01:13,840 --> 00:01:17,119
um and you can also subscribe to us on

00:01:16,240 --> 00:01:20,240
linkedin

00:01:17,119 --> 00:01:22,000
and also follow us on twitter and whilst

00:01:20,240 --> 00:01:25,280
you're at finnos.org

00:01:22,000 --> 00:01:26,880
remember to find our involved page where

00:01:25,280 --> 00:01:27,280
that gives you a lot more information

00:01:26,880 --> 00:01:30,479
about

00:01:27,280 --> 00:01:32,159
how you as a contributor to finos and

00:01:30,479 --> 00:01:34,960
part of the finnos community

00:01:32,159 --> 00:01:36,479
can get involved with our activities and

00:01:34,960 --> 00:01:37,280
there you can also register for

00:01:36,479 --> 00:01:40,560
newsletters

00:01:37,280 --> 00:01:42,079
and events um and also if you are a

00:01:40,560 --> 00:01:44,240
developer or engineer

00:01:42,079 --> 00:01:45,759
please go along to github dot com

00:01:44,240 --> 00:01:47,200
forward slash finos

00:01:45,759 --> 00:01:50,159
where you'll find the finished

00:01:47,200 --> 00:01:53,119
organization and all of our projects

00:01:50,159 --> 00:01:54,000
and included in our organization is kdb

00:01:53,119 --> 00:01:55,280
studio who

00:01:54,000 --> 00:01:57,680
are currently looking for java

00:01:55,280 --> 00:01:58,159
developers for all of their good first

00:01:57,680 --> 00:02:00,320
issues

00:01:58,159 --> 00:02:02,000
so if you're after anything to do and

00:02:00,320 --> 00:02:03,680
you are a java developer

00:02:02,000 --> 00:02:05,280
please feel free to follow over to kdb

00:02:03,680 --> 00:02:07,280
studio

00:02:05,280 --> 00:02:09,039
and with that i'd like to hand over to

00:02:07,280 --> 00:02:11,280
ilya hi ilya how are you

00:02:09,039 --> 00:02:13,120
it's over to you thank you thank you

00:02:11,280 --> 00:02:16,160
james for the introduction

00:02:13,120 --> 00:02:18,879
and thank everybody for listening it's a

00:02:16,160 --> 00:02:19,760
privilege and honor for me to present

00:02:18,879 --> 00:02:21,280
and today

00:02:19,760 --> 00:02:23,760
in our presentation we'll talk about

00:02:21,280 --> 00:02:26,560
time based community edition

00:02:23,760 --> 00:02:28,319
and with that i'd like to share my

00:02:26,560 --> 00:02:30,720
powerpoint slides

00:02:28,319 --> 00:02:32,239
so agenda for next 20 minutes plus minus

00:02:30,720 --> 00:02:33,840
would be that we'll spend

00:02:32,239 --> 00:02:36,000
a few minutes in presentation talking

00:02:33,840 --> 00:02:37,760
about overview and history of time base

00:02:36,000 --> 00:02:41,040
and we'll go to live demonstrations and

00:02:37,760 --> 00:02:44,080
we'll see a bunch of examples

00:02:41,040 --> 00:02:45,280
so time base is a high performance time

00:02:44,080 --> 00:02:47,040
series database

00:02:45,280 --> 00:02:49,200
and streaming system which is developed

00:02:47,040 --> 00:02:53,040
by deltex which is currently

00:02:49,200 --> 00:02:56,239
a division inside a pam

00:02:53,040 --> 00:02:57,680
and the streaming system which is

00:02:56,239 --> 00:03:01,200
messaging middleware

00:02:57,680 --> 00:03:04,239
um and database allows to

00:03:01,200 --> 00:03:05,200
both historical real-time analysis of

00:03:04,239 --> 00:03:07,599
data

00:03:05,200 --> 00:03:09,840
and time based as a result of 15 years

00:03:07,599 --> 00:03:11,599
of experience in financial domain

00:03:09,840 --> 00:03:14,080
we run time-based standalone on the

00:03:11,599 --> 00:03:14,720
cluster we process millions events per

00:03:14,080 --> 00:03:16,480
second

00:03:14,720 --> 00:03:19,040
and we store terabytes of data and can

00:03:16,480 --> 00:03:20,720
offer low microsecond latencies when

00:03:19,040 --> 00:03:22,800
traded in real time

00:03:20,720 --> 00:03:24,640
the history of timebase will start from

00:03:22,800 --> 00:03:26,720
looking at motivation

00:03:24,640 --> 00:03:28,000
what was the primary driver for creation

00:03:26,720 --> 00:03:31,040
of timebase

00:03:28,000 --> 00:03:32,799
so original focus of deltic software was

00:03:31,040 --> 00:03:35,200
to build technology

00:03:32,799 --> 00:03:36,000
for quantitative trading so if you are

00:03:35,200 --> 00:03:37,920
quant

00:03:36,000 --> 00:03:40,080
and you want to build your quantitative

00:03:37,920 --> 00:03:42,400
model then the workflow

00:03:40,080 --> 00:03:44,480
would be just depicted in this diagram

00:03:42,400 --> 00:03:46,720
right starts from aggregating

00:03:44,480 --> 00:03:47,760
and normalizing basically real-time

00:03:46,720 --> 00:03:50,430
market data

00:03:47,760 --> 00:03:52,239
or any other data so it could be

00:03:50,430 --> 00:03:54,480
[Music]

00:03:52,239 --> 00:03:55,680
any sensor data or it could be

00:03:54,480 --> 00:03:58,560
surveillance data

00:03:55,680 --> 00:03:59,360
or news fundamental data basically data

00:03:58,560 --> 00:04:02,400
comes

00:03:59,360 --> 00:04:04,400
to research and the first focus of

00:04:02,400 --> 00:04:07,280
our company was to build tools for back

00:04:04,400 --> 00:04:08,720
testing so original focus of deltix was

00:04:07,280 --> 00:04:09,760
to build technology which we called

00:04:08,720 --> 00:04:13,439
quant office

00:04:09,760 --> 00:04:16,079
which was using the market data for

00:04:13,439 --> 00:04:17,759
um obviously building strategies by

00:04:16,079 --> 00:04:19,919
testing them optimizing them

00:04:17,759 --> 00:04:22,320
and as time evolved then we start

00:04:19,919 --> 00:04:25,280
producing the solution for real time

00:04:22,320 --> 00:04:28,000
and that's how time base became a focal

00:04:25,280 --> 00:04:30,320
most important element in our ecosystem

00:04:28,000 --> 00:04:31,199
because this thing responsible for both

00:04:30,320 --> 00:04:34,080
real-time

00:04:31,199 --> 00:04:36,000
and historical uh data consumption and

00:04:34,080 --> 00:04:38,560
streaming to analytics

00:04:36,000 --> 00:04:40,240
and so as a result going back to history

00:04:38,560 --> 00:04:42,720
we released first version of time base

00:04:40,240 --> 00:04:46,639
for mostly historical analysis

00:04:42,720 --> 00:04:47,919
and then made the 2010 a big year

00:04:46,639 --> 00:04:50,960
where time based start using for

00:04:47,919 --> 00:04:52,080
real-time trading in 2015 we release

00:04:50,960 --> 00:04:54,400
system for

00:04:52,080 --> 00:04:56,160
large data sets and basically you can

00:04:54,400 --> 00:04:59,280
see the story on this chart

00:04:56,160 --> 00:04:59,759
and 2020 is a big year for us because

00:04:59,280 --> 00:05:02,639
after

00:04:59,759 --> 00:05:04,639
15 years of proprietary licensing of

00:05:02,639 --> 00:05:06,000
technology to top-tier hedge funds and

00:05:04,639 --> 00:05:08,639
brokers and banks

00:05:06,000 --> 00:05:10,240
we decided with the help of japan to

00:05:08,639 --> 00:05:12,440
make it open source and so

00:05:10,240 --> 00:05:13,600
here we are and we release

00:05:12,440 --> 00:05:15,440
timebase.infowebsite

00:05:13,600 --> 00:05:17,039
and you're more than welcome to go there

00:05:15,440 --> 00:05:19,600
and um see

00:05:17,039 --> 00:05:20,479
what we have to say so i recovered this

00:05:19,600 --> 00:05:23,440
light and now

00:05:20,479 --> 00:05:25,039
as time evolved we spend more time

00:05:23,440 --> 00:05:26,240
defining different use cases and

00:05:25,039 --> 00:05:29,199
eventually build

00:05:26,240 --> 00:05:30,000
platform which we today call aggregate

00:05:29,199 --> 00:05:33,120
analyze

00:05:30,000 --> 00:05:34,240
act so this is triple a or sort of uh

00:05:33,120 --> 00:05:36,800
platform

00:05:34,240 --> 00:05:38,560
is based on time-based ability to

00:05:36,800 --> 00:05:40,720
aggregate data and statement for

00:05:38,560 --> 00:05:42,479
analytical layer and later for

00:05:40,720 --> 00:05:45,120
sort of actionable layer whether you

00:05:42,479 --> 00:05:48,720
build dashboards or they build

00:05:45,120 --> 00:05:50,639
uh any monitors this is the um intrinsic

00:05:48,720 --> 00:05:52,800
feature of timebase enable people to do

00:05:50,639 --> 00:05:55,360
it easily

00:05:52,800 --> 00:05:57,039
so most important use case of time base

00:05:55,360 --> 00:06:00,080
i represent on this slide

00:05:57,039 --> 00:06:01,120
so starting from generic time series

00:06:00,080 --> 00:06:03,280
data analysis

00:06:01,120 --> 00:06:04,960
this is where we're pretty good we also

00:06:03,280 --> 00:06:07,280
build specialized math libraries which

00:06:04,960 --> 00:06:10,080
are part of sort of time-based ecosystem

00:06:07,280 --> 00:06:11,039
and a lot of additional tools but by

00:06:10,080 --> 00:06:13,680
design

00:06:11,039 --> 00:06:14,720
the system is being built in such a way

00:06:13,680 --> 00:06:18,720
that

00:06:14,720 --> 00:06:21,759
python r matlab csharp.net java all the

00:06:18,720 --> 00:06:25,280
languages would be

00:06:21,759 --> 00:06:26,400
accessible for research and algorithm

00:06:25,280 --> 00:06:28,880
back testing

00:06:26,400 --> 00:06:31,199
is the second very important use case

00:06:28,880 --> 00:06:33,280
live streaming algorithm trading

00:06:31,199 --> 00:06:35,520
is important warm up mode is a special

00:06:33,280 --> 00:06:38,160
mode of time based which enables

00:06:35,520 --> 00:06:39,440
programmers and creators of strategies

00:06:38,160 --> 00:06:41,440
not to worry about

00:06:39,440 --> 00:06:42,880
initializing data if you need to say for

00:06:41,440 --> 00:06:44,800
example two or three days

00:06:42,880 --> 00:06:45,919
of historical data before you run your

00:06:44,800 --> 00:06:48,560
model life

00:06:45,919 --> 00:06:50,560
so warm up will take care of the

00:06:48,560 --> 00:06:54,000
accelerated

00:06:50,560 --> 00:06:55,759
playback of um sort of time stream which

00:06:54,000 --> 00:06:57,199
we need for historical initialization of

00:06:55,759 --> 00:07:00,400
the indicators

00:06:57,199 --> 00:07:01,520
in background mode switching cursor to

00:07:00,400 --> 00:07:06,560
real time

00:07:01,520 --> 00:07:08,400
when basically buffer is initialized

00:07:06,560 --> 00:07:10,400
market data aggregation ticker plant of

00:07:08,400 --> 00:07:12,960
course is important use cases

00:07:10,400 --> 00:07:14,560
and then real-time event processing and

00:07:12,960 --> 00:07:17,360
long-distance streaming

00:07:14,560 --> 00:07:18,960
are very valuable elements of the use

00:07:17,360 --> 00:07:19,840
cases so if you want to broadcast your

00:07:18,960 --> 00:07:23,120
data

00:07:19,840 --> 00:07:23,759
live or sort of con synthetic data it's

00:07:23,120 --> 00:07:25,039
all

00:07:23,759 --> 00:07:27,759
possible through time-based

00:07:25,039 --> 00:07:27,759
infrastructure

00:07:27,840 --> 00:07:30,720
so i already mentioned some of key

00:07:29,039 --> 00:07:33,199
features let's just spend few more

00:07:30,720 --> 00:07:34,960
minutes or seconds on this slide

00:07:33,199 --> 00:07:36,639
so first of all it's battle tested more

00:07:34,960 --> 00:07:38,080
than 200 hedge funds and per trading

00:07:36,639 --> 00:07:41,120
desks used it

00:07:38,080 --> 00:07:43,280
in um sort of um action

00:07:41,120 --> 00:07:44,319
we think that cost efficiency is second

00:07:43,280 --> 00:07:46,479
important

00:07:44,319 --> 00:07:48,479
uh benefit of time base we always

00:07:46,479 --> 00:07:51,440
designed it in such a way that

00:07:48,479 --> 00:07:52,639
um small and medium-sized funds could

00:07:51,440 --> 00:07:54,400
afford it

00:07:52,639 --> 00:07:56,160
and the cost of calculations cost of

00:07:54,400 --> 00:07:59,840
infrastructure and coastal hardware

00:07:56,160 --> 00:08:02,000
it's all taken into account timebase has

00:07:59,840 --> 00:08:03,680
superior performance we really process

00:08:02,000 --> 00:08:06,400
millions events per second

00:08:03,680 --> 00:08:08,879
and afford um low kind of stable

00:08:06,400 --> 00:08:11,039
microseconds in the community hardware

00:08:08,879 --> 00:08:13,919
with a complete ecosystem what it means

00:08:11,039 --> 00:08:17,680
is you basically have ability to build

00:08:13,919 --> 00:08:19,759
all in one solution in relatively sm

00:08:17,680 --> 00:08:21,199
short amount of time so we focus on

00:08:19,759 --> 00:08:25,280
delivery results

00:08:21,199 --> 00:08:28,879
in tools like karfana or power bi

00:08:25,280 --> 00:08:30,800
and support custom connectors you can

00:08:28,879 --> 00:08:32,880
write your own connectors

00:08:30,800 --> 00:08:34,880
and as i said design for analytics we

00:08:32,880 --> 00:08:36,880
support multiple language apis

00:08:34,880 --> 00:08:38,240
and the last feature is important data

00:08:36,880 --> 00:08:40,159
modeling

00:08:38,240 --> 00:08:41,760
when you work on business applications

00:08:40,159 --> 00:08:44,159
you want to simulate or you want to

00:08:41,760 --> 00:08:47,360
approximate your business domain

00:08:44,159 --> 00:08:48,399
in a messages which would be resembling

00:08:47,360 --> 00:08:51,600
your business logic

00:08:48,399 --> 00:08:53,920
and so timebase supports rich set of um

00:08:51,600 --> 00:08:54,880
sort of data structures including lists

00:08:53,920 --> 00:08:59,920
and arrays

00:08:54,880 --> 00:08:59,920
as kind of underlying messaging elements

00:09:00,480 --> 00:09:04,480
key technical features mostly available

00:09:02,080 --> 00:09:06,720
on the website and i will

00:09:04,480 --> 00:09:08,320
not spend a lot of time on this

00:09:06,720 --> 00:09:10,399
particular slide except that

00:09:08,320 --> 00:09:12,640
when i mentioned that again rest of

00:09:10,399 --> 00:09:12,959
circuit apis and ability to custom view

00:09:12,640 --> 00:09:16,080
on

00:09:12,959 --> 00:09:18,480
customize your own software is possible

00:09:16,080 --> 00:09:20,640
this slide um describes architecture and

00:09:18,480 --> 00:09:25,440
summarizes kind of

00:09:20,640 --> 00:09:27,120
generically what i just said that um

00:09:25,440 --> 00:09:28,880
on the left side we see all the

00:09:27,120 --> 00:09:30,480
different data sources

00:09:28,880 --> 00:09:32,000
you can see that we can have a custom

00:09:30,480 --> 00:09:35,600
market data connectors

00:09:32,000 --> 00:09:36,640
or kafka and we support for example open

00:09:35,600 --> 00:09:39,440
source data feeds

00:09:36,640 --> 00:09:40,320
for fundamental data and this data goes

00:09:39,440 --> 00:09:44,000
both

00:09:40,320 --> 00:09:46,240
in real-time aggregation or historical

00:09:44,000 --> 00:09:48,080
comes to polymorphic time series data

00:09:46,240 --> 00:09:50,640
store and then gets streamed through the

00:09:48,080 --> 00:09:53,920
distribution bus to multiple consumers

00:09:50,640 --> 00:09:57,200
in the format of messages or api calls

00:09:53,920 --> 00:10:00,080
which are listed kind of handler

00:09:57,200 --> 00:10:02,079
based and enable native and very

00:10:00,080 --> 00:10:03,200
intuitive event programming so typical

00:10:02,079 --> 00:10:04,880
style of programming

00:10:03,200 --> 00:10:06,880
alexa will share with you but it's more

00:10:04,880 --> 00:10:09,680
like own some event

00:10:06,880 --> 00:10:11,200
do something that's the style of

00:10:09,680 --> 00:10:13,920
programming which enables

00:10:11,200 --> 00:10:14,800
both historical and real-time stream

00:10:13,920 --> 00:10:18,640
analysis

00:10:14,800 --> 00:10:20,399
very efficient so last kind of slide

00:10:18,640 --> 00:10:22,560
what makes timebase unique

00:10:20,399 --> 00:10:24,240
uh we believe there's two main features

00:10:22,560 --> 00:10:27,440
first of all

00:10:24,240 --> 00:10:30,800
that it allows historical and real-time

00:10:27,440 --> 00:10:32,720
processing in the same apis so the same

00:10:30,800 --> 00:10:36,320
exact apis could be used to

00:10:32,720 --> 00:10:38,640
build historical models or run them live

00:10:36,320 --> 00:10:39,839
and it was very important feature for

00:10:38,640 --> 00:10:42,000
the whole celtics

00:10:39,839 --> 00:10:43,440
infrastructure because code will be

00:10:42,000 --> 00:10:46,480
written only once

00:10:43,440 --> 00:10:46,480
and would not be

00:10:46,640 --> 00:10:51,279
sort of abused between back testing and

00:10:49,200 --> 00:10:52,640
real-time production deployment

00:10:51,279 --> 00:10:54,959
and second very important feature of

00:10:52,640 --> 00:10:59,040
time base that it allows

00:10:54,959 --> 00:11:01,519
structure of messages to be very

00:10:59,040 --> 00:11:02,240
close to business logic of applications

00:11:01,519 --> 00:11:07,440
so we

00:11:02,240 --> 00:11:07,440
provide polymorphic stream based

00:11:08,000 --> 00:11:11,600
description of the business logic and it

00:11:10,800 --> 00:11:15,120
enables

00:11:11,600 --> 00:11:16,720
the convenient i guess

00:11:15,120 --> 00:11:18,720
not exactly no code of course

00:11:16,720 --> 00:11:21,760
development but close to low code

00:11:18,720 --> 00:11:24,399
server program paradigm so that is

00:11:21,760 --> 00:11:25,200
the sort of time based uh overview and

00:11:24,399 --> 00:11:30,399
with that

00:11:25,200 --> 00:11:30,399
i'd like to switch to live demos

00:11:31,279 --> 00:11:35,440
so this slide starts from a product

00:11:33,760 --> 00:11:37,279
called cross cortex which visualizes

00:11:35,440 --> 00:11:39,040
this aggregate analyze infrastructure

00:11:37,279 --> 00:11:40,720
and you can see aggregation

00:11:39,040 --> 00:11:42,800
of multiple pieces right in the center

00:11:40,720 --> 00:11:44,000
of ecosystem there's time base

00:11:42,800 --> 00:11:46,160
and we're going to jump to something

00:11:44,000 --> 00:11:50,399
called tempest administrator

00:11:46,160 --> 00:11:50,399
which is a tool which enables to

00:11:51,760 --> 00:12:00,160
monitor and administer the

00:11:56,240 --> 00:12:03,519
time-based servers and if we go to

00:12:00,160 --> 00:12:04,720
the any stream uh which works we see on

00:12:03,519 --> 00:12:06,240
the left i got bunch of different

00:12:04,720 --> 00:12:07,760
streams some of them cryptocurrency

00:12:06,240 --> 00:12:09,519
trading streams some of them

00:12:07,760 --> 00:12:11,600
non-cryptocurrency all these commands

00:12:09,519 --> 00:12:13,040
available here and if i go to stream

00:12:11,600 --> 00:12:16,160
schema analysis

00:12:13,040 --> 00:12:17,920
then we'll see that

00:12:16,160 --> 00:12:19,279
we've got a sort of modeling of this

00:12:17,920 --> 00:12:21,440
particular stream

00:12:19,279 --> 00:12:23,279
and if i go back to stream and i say hey

00:12:21,440 --> 00:12:26,240
i would like to look at the data

00:12:23,279 --> 00:12:28,399
we'll see in real time this is just a

00:12:26,240 --> 00:12:31,120
stream of messages which happen

00:12:28,399 --> 00:12:32,320
as we speak and every message if i just

00:12:31,120 --> 00:12:34,800
double click on it

00:12:32,320 --> 00:12:35,839
will be represented on the right in the

00:12:34,800 --> 00:12:39,040
detail form

00:12:35,839 --> 00:12:40,240
or if i go to json view then

00:12:39,040 --> 00:12:42,959
basically we can switch between

00:12:40,240 --> 00:12:45,279
different presentation that's a json

00:12:42,959 --> 00:12:47,519
json view on this particular stream so

00:12:45,279 --> 00:12:50,079
all the data here described

00:12:47,519 --> 00:12:52,000
there's another very useful uh feature

00:12:50,079 --> 00:12:54,639
in the time base called inspector

00:12:52,000 --> 00:12:56,639
which enables basically uh look at

00:12:54,639 --> 00:12:58,880
messages as they go

00:12:56,639 --> 00:13:00,800
in historical time stem format this is

00:12:58,880 --> 00:13:03,440
basically analysis of each

00:13:00,800 --> 00:13:04,160
individual data and again if i double

00:13:03,440 --> 00:13:06,320
click

00:13:04,160 --> 00:13:07,600
then we'll see again all the messages

00:13:06,320 --> 00:13:08,800
and some of them like in this case

00:13:07,600 --> 00:13:12,800
vendor snapshot

00:13:08,800 --> 00:13:15,040
in some cases it is a um

00:13:12,800 --> 00:13:17,040
uh raw update delete insert message so

00:13:15,040 --> 00:13:20,959
let's say for example go to bitfenix

00:13:17,040 --> 00:13:23,200
and we go to this stream

00:13:20,959 --> 00:13:25,040
we will see that messages now coming to

00:13:23,200 --> 00:13:27,360
us will be format

00:13:25,040 --> 00:13:28,720
of incremental update which is basically

00:13:27,360 --> 00:13:32,160
a different

00:13:28,720 --> 00:13:34,639
type of style of message

00:13:32,160 --> 00:13:36,399
and custom components was developed

00:13:34,639 --> 00:13:37,360
allowing for example to visualize all

00:13:36,399 --> 00:13:39,440
these pieces

00:13:37,360 --> 00:13:40,639
this is not necessarily a community

00:13:39,440 --> 00:13:43,760
edition uh

00:13:40,639 --> 00:13:45,440
feature but it is a also ability to

00:13:43,760 --> 00:13:47,600
program within time-based administrator

00:13:45,440 --> 00:13:50,959
you own custom widgets and enable

00:13:47,600 --> 00:13:53,199
to visualize data within this system

00:13:50,959 --> 00:13:54,320
next example of a video of a demo i'd

00:13:53,199 --> 00:13:57,279
like to show you

00:13:54,320 --> 00:13:58,639
the what we call portfolio risk monitor

00:13:57,279 --> 00:14:02,160
so what we see here

00:13:58,639 --> 00:14:05,199
this is the uh example

00:14:02,160 --> 00:14:07,279
where in fact experiment configuration

00:14:05,199 --> 00:14:09,040
we have um several million of individual

00:14:07,279 --> 00:14:09,760
instruments and let's say i want to

00:14:09,040 --> 00:14:12,480
create

00:14:09,760 --> 00:14:13,680
10 000 synthetic portfolios where i'm

00:14:12,480 --> 00:14:15,760
just simulating

00:14:13,680 --> 00:14:18,560
and i click on command start and we'll

00:14:15,760 --> 00:14:21,440
see the burst of a message processing

00:14:18,560 --> 00:14:22,480
and we go to front-end and we'll see

00:14:21,440 --> 00:14:25,680
immediately

00:14:22,480 --> 00:14:26,880
how this universe is changed and now we

00:14:25,680 --> 00:14:29,440
see in real time

00:14:26,880 --> 00:14:32,079
every portfolio how it basically based

00:14:29,440 --> 00:14:34,560
upon volatility or value we display them

00:14:32,079 --> 00:14:37,760
in this heat map and so if i jump to

00:14:34,560 --> 00:14:37,760
let's say this particular

00:14:38,240 --> 00:14:42,240
component we see all individual elements

00:14:40,160 --> 00:14:43,199
with portfolio in this case the stocks

00:14:42,240 --> 00:14:45,600
and bonds

00:14:43,199 --> 00:14:46,800
and we look at their risk contribution

00:14:45,600 --> 00:14:49,279
and all different

00:14:46,800 --> 00:14:50,000
components which visualization model

00:14:49,279 --> 00:14:52,480
allowed us

00:14:50,000 --> 00:14:53,440
to create so that's a good example where

00:14:52,480 --> 00:14:56,560
we see

00:14:53,440 --> 00:14:58,639
the live streaming of data

00:14:56,560 --> 00:15:01,040
aggregation and visualization and it's

00:14:58,639 --> 00:15:01,920
all basically could be done in a matter

00:15:01,040 --> 00:15:05,360
of

00:15:01,920 --> 00:15:07,120
say days or even hours

00:15:05,360 --> 00:15:09,440
next example is where we're using

00:15:07,120 --> 00:15:10,399
timebase for let's say instant payment

00:15:09,440 --> 00:15:11,839
service

00:15:10,399 --> 00:15:14,240
visualization so all the different

00:15:11,839 --> 00:15:16,160
payments individual kind of transactions

00:15:14,240 --> 00:15:17,839
represented again as a stream on the

00:15:16,160 --> 00:15:20,720
left every time i

00:15:17,839 --> 00:15:22,320
um say for example if i close this this

00:15:20,720 --> 00:15:24,959
is basically structural messages

00:15:22,320 --> 00:15:26,160
we see the origins of these messages and

00:15:24,959 --> 00:15:27,760
if i double click

00:15:26,160 --> 00:15:29,279
we're going through the same time-based

00:15:27,760 --> 00:15:30,639
administrator like style look and

00:15:29,279 --> 00:15:33,120
individual message

00:15:30,639 --> 00:15:34,959
and this is the telemetry dashboard

00:15:33,120 --> 00:15:36,399
which is programmed again using open

00:15:34,959 --> 00:15:38,880
source tools

00:15:36,399 --> 00:15:40,000
and in this example they illustrate what

00:15:38,880 --> 00:15:42,320
happened last minute

00:15:40,000 --> 00:15:43,839
the last five minutes or last hour and

00:15:42,320 --> 00:15:45,360
so on so forth we basically look at all

00:15:43,839 --> 00:15:49,360
different transactions

00:15:45,360 --> 00:15:52,560
and see the dashboards

00:15:49,360 --> 00:15:53,519
uh timebase also integrate directly to

00:15:52,560 --> 00:15:56,959
grafana

00:15:53,519 --> 00:15:57,519
so alexia will show us later how can be

00:15:56,959 --> 00:15:58,560
done this is

00:15:57,519 --> 00:16:00,720
going to show you a result of some

00:15:58,560 --> 00:16:02,079
dashboard exactly same as board where we

00:16:00,720 --> 00:16:03,199
just look at instant payment

00:16:02,079 --> 00:16:06,959
distributions

00:16:03,199 --> 00:16:08,240
and monitoring one more example i would

00:16:06,959 --> 00:16:10,000
like to show you integration of time

00:16:08,240 --> 00:16:12,000
based with jupyter notebook

00:16:10,000 --> 00:16:14,079
where in this example we look at

00:16:12,000 --> 00:16:17,279
skewness of autobook

00:16:14,079 --> 00:16:19,120
and the source code and the calls to

00:16:17,279 --> 00:16:21,040
basically timebase api which is

00:16:19,120 --> 00:16:23,440
basically defined subscriptions

00:16:21,040 --> 00:16:24,399
and we run different models where we

00:16:23,440 --> 00:16:26,639
basically

00:16:24,399 --> 00:16:28,320
start from looking at market order book

00:16:26,639 --> 00:16:30,079
and again using standard jupyter

00:16:28,320 --> 00:16:32,800
notebook visualization tools

00:16:30,079 --> 00:16:33,440
for in this case to look at auto book

00:16:32,800 --> 00:16:36,880
that is

00:16:33,440 --> 00:16:38,480
basically time and the volume and the

00:16:36,880 --> 00:16:40,320
prices so we'll look at structure of the

00:16:38,480 --> 00:16:43,839
book and this kind of a 3d

00:16:40,320 --> 00:16:45,120
container and the last example which i'd

00:16:43,839 --> 00:16:47,120
like to show you

00:16:45,120 --> 00:16:48,560
is example of our technology which is

00:16:47,120 --> 00:16:51,920
called quan hub

00:16:48,560 --> 00:16:54,480
this is the um also

00:16:51,920 --> 00:16:56,079
application developed on top of timebase

00:16:54,480 --> 00:16:58,560
using the open source

00:16:56,079 --> 00:17:00,639
in this case um javascript and

00:16:58,560 --> 00:17:03,519
javascript visualization tools

00:17:00,639 --> 00:17:04,559
and different components uh right here

00:17:03,519 --> 00:17:07,360
would be available

00:17:04,559 --> 00:17:09,199
for example if i go to this component

00:17:07,360 --> 00:17:12,720
which you call a box chart

00:17:09,199 --> 00:17:16,480
and the hmm give me one second

00:17:12,720 --> 00:17:19,120
my apologies i go to box chart and

00:17:16,480 --> 00:17:21,199
all the different um elements of the

00:17:19,120 --> 00:17:23,360
this case equities would be represented

00:17:21,199 --> 00:17:24,799
the source code of this component right

00:17:23,360 --> 00:17:27,120
here in front of us

00:17:24,799 --> 00:17:29,039
so this is javascript code this is a

00:17:27,120 --> 00:17:31,280
result of this javascript code and we're

00:17:29,039 --> 00:17:33,919
basically making the request a time base

00:17:31,280 --> 00:17:35,679
right in this lines and all additional

00:17:33,919 --> 00:17:38,799
visualization elements

00:17:35,679 --> 00:17:40,559
would could be for example charting

00:17:38,799 --> 00:17:42,559
visualization components where we look

00:17:40,559 --> 00:17:44,960
at price charts or it could be one or

00:17:42,559 --> 00:17:49,440
diagrams where we look at different

00:17:44,960 --> 00:17:52,000
elements or it could be very cool um

00:17:49,440 --> 00:17:53,600
you know bar charts or let's say in this

00:17:52,000 --> 00:17:55,840
case a switch to larger

00:17:53,600 --> 00:17:57,360
sequence of data or different scatter

00:17:55,840 --> 00:18:00,080
plots it's all part

00:17:57,360 --> 00:18:02,640
of the visualization elements which

00:18:00,080 --> 00:18:06,160
connect to the time base

00:18:02,640 --> 00:18:09,200
well with that i would like to pass

00:18:06,160 --> 00:18:12,799
the um sort of

00:18:09,200 --> 00:18:16,000
presentation mode to alexi and alexi

00:18:12,799 --> 00:18:19,520
will show us some live program examples

00:18:16,000 --> 00:18:23,600
alexi here is your

00:18:19,520 --> 00:18:25,679
screen yeah hi everybody i'm alexi

00:18:23,600 --> 00:18:26,799
and i'm very pleased to present to you

00:18:25,679 --> 00:18:31,440
today

00:18:26,799 --> 00:18:34,559
and i would like to just add a few

00:18:31,440 --> 00:18:38,160
uh technical uh details of

00:18:34,559 --> 00:18:41,120
what you can do with time base how can

00:18:38,160 --> 00:18:42,480
one actually start working with it like

00:18:41,120 --> 00:18:46,320
imagine you have

00:18:42,480 --> 00:18:49,600
uh the necessity to transfer

00:18:46,320 --> 00:18:53,760
the market data from

00:18:49,600 --> 00:18:57,919
one piece of software to another

00:18:53,760 --> 00:19:01,280
and persistently store it basically

00:18:57,919 --> 00:19:05,039
in a very reliable way uh

00:19:01,280 --> 00:19:08,400
for this purpose we create this little

00:19:05,039 --> 00:19:11,520
time base what we call stream which uh

00:19:08,400 --> 00:19:15,520
similar to let's say kafka

00:19:11,520 --> 00:19:19,360
name kafka topic here it is

00:19:15,520 --> 00:19:22,799
this is just one key

00:19:19,360 --> 00:19:27,200
of instrument here we can

00:19:22,799 --> 00:19:30,320
go to view and see in a big big table

00:19:27,200 --> 00:19:31,200
uh every single data point that we have

00:19:30,320 --> 00:19:34,720
in this

00:19:31,200 --> 00:19:38,080
topic in this time base

00:19:34,720 --> 00:19:42,640
admin ui which is part of

00:19:38,080 --> 00:19:45,760
community edition and i would like to e

00:19:42,640 --> 00:19:46,160
factor the tools that uh just shown to

00:19:45,760 --> 00:19:48,880
you

00:19:46,160 --> 00:19:50,240
to show you that there is no data coming

00:19:48,880 --> 00:19:53,520
here

00:19:50,240 --> 00:19:57,360
and today i would like uh

00:19:53,520 --> 00:20:00,559
the source cut examples uh for

00:19:57,360 --> 00:20:01,280
jupiter hub for the python just to

00:20:00,559 --> 00:20:04,400
showcase

00:20:01,280 --> 00:20:08,000
how one can easily

00:20:04,400 --> 00:20:11,120
connect to time base and

00:20:08,000 --> 00:20:12,080
despite the fact that is a tool which is

00:20:11,120 --> 00:20:14,640
uh

00:20:12,080 --> 00:20:15,600
designed to run in millions events per

00:20:14,640 --> 00:20:18,960
second

00:20:15,600 --> 00:20:22,400
for a very

00:20:18,960 --> 00:20:23,520
um technically comprehensive

00:20:22,400 --> 00:20:26,480
applications

00:20:23,520 --> 00:20:27,440
uh you can easily start working with it

00:20:26,480 --> 00:20:31,200
just like that

00:20:27,440 --> 00:20:35,840
you pass the link to the time

00:20:31,200 --> 00:20:35,840
base port open up it

00:20:36,240 --> 00:20:39,679
name the stream you would like to open

00:20:38,400 --> 00:20:43,600
for writing

00:20:39,679 --> 00:20:47,360
and create the synthetic data loader

00:20:43,600 --> 00:20:50,640
and here in this little

00:20:47,360 --> 00:20:51,600
code with this infinite loop i'm

00:20:50,640 --> 00:20:55,120
creating

00:20:51,600 --> 00:20:58,480
the synthetic market data to

00:20:55,120 --> 00:21:01,440
load it into the stream

00:20:58,480 --> 00:21:02,000
just like that i create the object and

00:21:01,440 --> 00:21:05,440
send it

00:21:02,000 --> 00:21:07,600
to the time-based loader let me start it

00:21:05,440 --> 00:21:09,600
for you

00:21:07,600 --> 00:21:10,720
it says that it's connected and start

00:21:09,600 --> 00:21:14,400
loading data

00:21:10,720 --> 00:21:18,000
let's switch back to

00:21:14,400 --> 00:21:21,280
inspector and see how data start coming

00:21:18,000 --> 00:21:25,200
in the real time uh into my

00:21:21,280 --> 00:21:28,840
stream and then i would like to show you

00:21:25,200 --> 00:21:32,640
one more example where i would like to

00:21:28,840 --> 00:21:36,080
use the open source well-known

00:21:32,640 --> 00:21:39,120
library called bokeh to

00:21:36,080 --> 00:21:40,799
show you how you can consume data in

00:21:39,120 --> 00:21:44,240
real time in

00:21:40,799 --> 00:21:47,520
python here

00:21:44,240 --> 00:21:50,559
i type the same stream name

00:21:47,520 --> 00:21:53,280
and open up the same

00:21:50,559 --> 00:21:53,280
time base

00:21:53,600 --> 00:21:58,000
create what we call cursor this is the

00:21:56,880 --> 00:22:01,840
object that allows

00:21:58,000 --> 00:22:05,360
you to consume data in real time

00:22:01,840 --> 00:22:09,039
or in historical it also depends on

00:22:05,360 --> 00:22:12,640
what start time start time are you using

00:22:09,039 --> 00:22:16,240
and i'm simply

00:22:12,640 --> 00:22:17,440
consume the messages here and pass it to

00:22:16,240 --> 00:22:20,480
the

00:22:17,440 --> 00:22:20,480
my visualization

00:22:20,880 --> 00:22:29,840
so let me run it for you

00:22:27,039 --> 00:22:30,480
and you're now seeing how the data is

00:22:29,840 --> 00:22:33,120
coming

00:22:30,480 --> 00:22:36,000
in real time to this pocket

00:22:33,120 --> 00:22:36,000
visualization

00:22:36,080 --> 00:22:43,840
and exactly same data i can

00:22:39,200 --> 00:22:47,039
show in grafana dashboard

00:22:43,840 --> 00:22:49,200
we create the special graph plugin

00:22:47,039 --> 00:22:50,799
for the time based this is not a

00:22:49,200 --> 00:22:53,520
promisius or

00:22:50,799 --> 00:22:56,880
any other integration we can connect

00:22:53,520 --> 00:22:56,880
directly to time base

00:22:56,960 --> 00:23:06,080
here let me

00:23:00,640 --> 00:23:06,080
switch to five minutes type exactly same

00:23:07,600 --> 00:23:12,960
name of the stream select uh whatever

00:23:10,880 --> 00:23:16,320
data field i would like to show

00:23:12,960 --> 00:23:19,840
let's say it price and now you can see

00:23:16,320 --> 00:23:23,840
how data coming in real time

00:23:19,840 --> 00:23:27,120
uh from the time base

00:23:23,840 --> 00:23:30,400
that's basically it you can use

00:23:27,120 --> 00:23:31,360
a whole bunch of open source tools with

00:23:30,400 --> 00:23:34,480
time based

00:23:31,360 --> 00:23:38,559
and the apis are available on all

00:23:34,480 --> 00:23:41,919
popular languages thank you

00:23:38,559 --> 00:23:44,960
excellent thank you alexei so

00:23:41,919 --> 00:23:47,279
what i'll do now i will go back to the

00:23:44,960 --> 00:23:47,279
um

00:23:47,360 --> 00:23:54,559
beginning of the session and we will

00:23:50,480 --> 00:23:58,320
have a question answer sort of

00:23:54,559 --> 00:24:01,600
session james is back to you

00:23:58,320 --> 00:24:05,120
hi thank you very much elia um okay

00:24:01,600 --> 00:24:08,159
so before we actually um

00:24:05,120 --> 00:24:11,200
go over to questions um i'd like to

00:24:08,159 --> 00:24:13,840
announce the winners um

00:24:11,200 --> 00:24:14,559
of our finals t-shirts for this

00:24:13,840 --> 00:24:17,679
afternoon

00:24:14,559 --> 00:24:18,320
um so the first winner of a finnos

00:24:17,679 --> 00:24:21,919
t-shirt

00:24:18,320 --> 00:24:23,440
is um betsy cameron from global relay

00:24:21,919 --> 00:24:25,520
communications

00:24:23,440 --> 00:24:27,760
um we'll be in contact with you betsy to

00:24:25,520 --> 00:24:29,279
get your address details to ship you a

00:24:27,760 --> 00:24:32,400
free finance t-shirt

00:24:29,279 --> 00:24:33,760
and the second is george sands from ibm

00:24:32,400 --> 00:24:35,760
thank you very much both of you for

00:24:33,760 --> 00:24:38,159
being here um

00:24:35,760 --> 00:24:39,840
so there is one um question that i'd

00:24:38,159 --> 00:24:41,600
like to ask and i'd like to remind

00:24:39,840 --> 00:24:44,480
people if you have any questions

00:24:41,600 --> 00:24:45,360
um for idlia or alexei please do put

00:24:44,480 --> 00:24:48,000
them in

00:24:45,360 --> 00:24:48,880
the webex chat and i'll relay them for

00:24:48,000 --> 00:24:51,679
you

00:24:48,880 --> 00:24:53,760
um but okay so during your um

00:24:51,679 --> 00:24:57,520
presentation you actually

00:24:53,760 --> 00:24:58,960
um you know said about a time based

00:24:57,520 --> 00:25:00,720
community edition

00:24:58,960 --> 00:25:03,039
i was actually wondering if there are

00:25:00,720 --> 00:25:04,480
any kind of systems or connection

00:25:03,039 --> 00:25:07,039
limitations

00:25:04,480 --> 00:25:07,679
um between community edition you know

00:25:07,039 --> 00:25:10,240
versus

00:25:07,679 --> 00:25:10,799
a potential enterprise edition it'll be

00:25:10,240 --> 00:25:12,799
good to

00:25:10,799 --> 00:25:14,000
to know what those differences are and

00:25:12,799 --> 00:25:17,039
you know whether there are any

00:25:14,000 --> 00:25:18,799
differences in the product itself well

00:25:17,039 --> 00:25:21,840
let me answer this question

00:25:18,799 --> 00:25:24,080
so the enterprise edition different from

00:25:21,840 --> 00:25:24,799
community education only in one l area

00:25:24,080 --> 00:25:29,039
where

00:25:24,799 --> 00:25:32,400
the whole set of market data connectors

00:25:29,039 --> 00:25:34,880
are which we developed as deltics over

00:25:32,400 --> 00:25:37,120
15 years with a particular data

00:25:34,880 --> 00:25:39,679
structure with a particular

00:25:37,120 --> 00:25:42,080
connectivity it's not included in

00:25:39,679 --> 00:25:43,760
community edition because it's um

00:25:42,080 --> 00:25:45,440
sort of for two reasons first of all we

00:25:43,760 --> 00:25:46,960
don't want to impose any

00:25:45,440 --> 00:25:48,480
particular way of doing things on the

00:25:46,960 --> 00:25:51,760
market at second

00:25:48,480 --> 00:25:54,320
um that um basically um

00:25:51,760 --> 00:25:55,760
we need to support it and we need to fix

00:25:54,320 --> 00:26:01,039
bugs and provide

00:25:55,760 --> 00:26:02,640
a lot of hands-on sort of um

00:26:01,039 --> 00:26:04,400
handholding otherwise from

00:26:02,640 --> 00:26:06,159
infrastructure perspective from computer

00:26:04,400 --> 00:26:07,039
science perspective the identical

00:26:06,159 --> 00:26:08,640
software

00:26:07,039 --> 00:26:10,880
so if somebody knows how to develop

00:26:08,640 --> 00:26:12,640
market data connector and willing to

00:26:10,880 --> 00:26:14,640
support and maintain it themselves then

00:26:12,640 --> 00:26:16,559
of course this is a perfect tool

00:26:14,640 --> 00:26:18,960
for communication with a perfect system

00:26:16,559 --> 00:26:21,919
for this type of task

00:26:18,960 --> 00:26:22,480
i hope answers the question okay thank

00:26:21,919 --> 00:26:26,400
you

00:26:22,480 --> 00:26:28,720
um and we do have a second question um

00:26:26,400 --> 00:26:30,720
what are examples of other open source

00:26:28,720 --> 00:26:31,200
components typically used with time

00:26:30,720 --> 00:26:34,159
based

00:26:31,200 --> 00:26:34,159
community edition

00:26:34,720 --> 00:26:38,240
um i can answer from my site and then

00:26:37,360 --> 00:26:41,440
alexa maybe

00:26:38,240 --> 00:26:43,840
add to this one today uh it's mostly

00:26:41,440 --> 00:26:46,320
visualization libraries and the kafka

00:26:43,840 --> 00:26:49,039
sort of streaming connector but alexa

00:26:46,320 --> 00:26:52,480
maybe you can comment on this

00:26:49,039 --> 00:26:54,720
additionally right uh

00:26:52,480 --> 00:26:55,760
apart from the kafka and visualization

00:26:54,720 --> 00:26:58,799
libraries uh

00:26:55,760 --> 00:27:01,919
we have uh the new initiative

00:26:58,799 --> 00:27:02,720
of building connectors uh to other

00:27:01,919 --> 00:27:05,840
popular

00:27:02,720 --> 00:27:09,039
um databases which

00:27:05,840 --> 00:27:12,000
match our identity in uh

00:27:09,039 --> 00:27:12,720
willing to process a big amount of

00:27:12,000 --> 00:27:16,400
messages

00:27:12,720 --> 00:27:17,919
per second we are and dealing with a

00:27:16,400 --> 00:27:20,559
time series data

00:27:17,919 --> 00:27:22,960
we are now about to release an open

00:27:20,559 --> 00:27:26,720
source as well the connector to

00:27:22,960 --> 00:27:29,840
a database called click house and

00:27:26,720 --> 00:27:33,279
a special postgre extension called

00:27:29,840 --> 00:27:33,279
timescale database

00:27:33,440 --> 00:27:43,039
plus the grafana into we shown today

00:27:37,919 --> 00:27:46,559
and uh more to come

00:27:43,039 --> 00:27:48,799
thank you that's great okay

00:27:46,559 --> 00:27:51,039
i also have another question has come in

00:27:48,799 --> 00:27:52,799
so who is your target audience so

00:27:51,039 --> 00:27:54,799
what type of user you're actually

00:27:52,799 --> 00:27:57,840
targeting you know for timebase as a

00:27:54,799 --> 00:28:01,039
project when it's open sourced

00:27:57,840 --> 00:28:02,720
yes the target audience of our users are

00:28:01,039 --> 00:28:04,880
pretty much anybody who wants to work

00:28:02,720 --> 00:28:07,039
with time series data

00:28:04,880 --> 00:28:08,960
i mean within finals of course it's

00:28:07,039 --> 00:28:09,600
mostly by when we talk about time series

00:28:08,960 --> 00:28:12,159
data we're

00:28:09,600 --> 00:28:13,120
mostly talking about market data and

00:28:12,159 --> 00:28:15,039
other

00:28:13,120 --> 00:28:16,720
sort of data right or news and the

00:28:15,039 --> 00:28:17,600
orders and for that there's a special

00:28:16,720 --> 00:28:19,279
software

00:28:17,600 --> 00:28:20,720
for fixed processing which we can stay

00:28:19,279 --> 00:28:22,399
away from this conversation but for

00:28:20,720 --> 00:28:25,919
market data analysis

00:28:22,399 --> 00:28:28,840
uh to build um any kind of um

00:28:25,919 --> 00:28:31,279
skewness or any type of execution

00:28:28,840 --> 00:28:33,120
algorithm validation

00:28:31,279 --> 00:28:36,320
audience in case of in the world of

00:28:33,120 --> 00:28:40,000
females is anybody who is quantitatively

00:28:36,320 --> 00:28:42,080
driven uh researcher outside of females

00:28:40,000 --> 00:28:44,320
of course there are more time series

00:28:42,080 --> 00:28:47,039
analysis where maybe it will be relevant

00:28:44,320 --> 00:28:50,240
internet of things use cases monitoring

00:28:47,039 --> 00:28:52,000
uh all different payment systems and

00:28:50,240 --> 00:28:53,760
anything which has to do with time

00:28:52,000 --> 00:28:54,880
series data anything which has to do

00:28:53,760 --> 00:28:58,000
with events

00:28:54,880 --> 00:29:00,880
traffic controllers uh pulse healthcare

00:28:58,000 --> 00:29:01,200
everything along these lines would be

00:29:00,880 --> 00:29:05,679
the

00:29:01,200 --> 00:29:05,679
audience for timebase

00:29:06,880 --> 00:29:12,000
that's great and um does timebase do

00:29:09,840 --> 00:29:16,000
central data processing or is it more

00:29:12,000 --> 00:29:16,000
aligned with a streaming paradigm

00:29:17,200 --> 00:29:22,320
alexi do you want to answer this

00:29:18,480 --> 00:29:24,880
question because i have my opinion but

00:29:22,320 --> 00:29:25,520
it's more aligned to streaming paradigm

00:29:24,880 --> 00:29:30,480
we are

00:29:25,520 --> 00:29:30,480
adding more uh things to

00:29:30,880 --> 00:29:36,799
add some centralized processing and

00:29:34,799 --> 00:29:38,840
but basically we are focusing to

00:29:36,799 --> 00:29:42,480
integrating this other system

00:29:38,840 --> 00:29:44,640
to add this feature

00:29:42,480 --> 00:29:46,240
i want to add one more case where we

00:29:44,640 --> 00:29:48,880
kind of

00:29:46,240 --> 00:29:50,640
spend significant amount of time

00:29:48,880 --> 00:29:53,360
utilizing high performance computing

00:29:50,640 --> 00:29:54,240
model where we stream data from central

00:29:53,360 --> 00:29:57,039
location to

00:29:54,240 --> 00:29:58,320
multiple nodes and each node then will

00:29:57,039 --> 00:30:00,399
be equipped with own

00:29:58,320 --> 00:30:02,000
sort of analytical layer in which case

00:30:00,399 --> 00:30:04,559
the

00:30:02,000 --> 00:30:06,159
distribution of calculational tasks can

00:30:04,559 --> 00:30:07,919
be massively

00:30:06,159 --> 00:30:09,279
sort of parallelized and that's where

00:30:07,919 --> 00:30:11,120
the

00:30:09,279 --> 00:30:12,960
sort of streaming versus central node

00:30:11,120 --> 00:30:16,000
processing is becoming

00:30:12,960 --> 00:30:18,880
uh less kind of clear and the age

00:30:16,000 --> 00:30:20,000
computing term which is used today quite

00:30:18,880 --> 00:30:22,320
frequently

00:30:20,000 --> 00:30:23,760
i time basis is ideal tool for that

00:30:22,320 --> 00:30:24,480
because the synchronization between

00:30:23,760 --> 00:30:27,919
central

00:30:24,480 --> 00:30:30,559
master database and the aged nodes

00:30:27,919 --> 00:30:31,120
done through the same api which we use

00:30:30,559 --> 00:30:34,080
for

00:30:31,120 --> 00:30:36,240
um sort of analytical uh data processing

00:30:34,080 --> 00:30:38,320
so the same streaming the same

00:30:36,240 --> 00:30:39,919
million event per second messaging is

00:30:38,320 --> 00:30:42,960
used to distribute data to

00:30:39,919 --> 00:30:45,760
nodes for edge computing and back

00:30:42,960 --> 00:30:47,679
from edge computing node back to center

00:30:45,760 --> 00:30:48,640
that's great and we've got time for one

00:30:47,679 --> 00:30:51,360
more question

00:30:48,640 --> 00:30:53,440
um which is what is the precision of the

00:30:51,360 --> 00:30:55,440
time stamps

00:30:53,440 --> 00:30:56,799
oh it's a great question uh actually we

00:30:55,440 --> 00:30:58,159
have use case where nanosecond

00:30:56,799 --> 00:31:00,880
timestamps were

00:30:58,159 --> 00:31:01,760
kind of deployed it's a epoch basically

00:31:00,880 --> 00:31:04,000
integer

00:31:01,760 --> 00:31:05,200
but by default a system without any

00:31:04,000 --> 00:31:06,960
additional

00:31:05,200 --> 00:31:08,480
stuff is in milliseconds and

00:31:06,960 --> 00:31:10,399
microseconds

00:31:08,480 --> 00:31:13,200
second very popular use case but as i

00:31:10,399 --> 00:31:14,399
said the nanosecond time spans were also

00:31:13,200 --> 00:31:17,440
used in

00:31:14,399 --> 00:31:19,840
one big deployment

00:31:17,440 --> 00:31:20,720
uh i would like to add a little bit the

00:31:19,840 --> 00:31:23,760
nanosecond

00:31:20,720 --> 00:31:26,000
uh time resolution is very popular

00:31:23,760 --> 00:31:28,159
with our system right now so we can

00:31:26,000 --> 00:31:29,600
easily use the nanosecond resolution

00:31:28,159 --> 00:31:32,960
with a time base

00:31:29,600 --> 00:31:35,440
and uh one more additional fact for

00:31:32,960 --> 00:31:36,320
someone who is interested we also

00:31:35,440 --> 00:31:40,640
support

00:31:36,320 --> 00:31:45,360
the decimals uh price formatting

00:31:40,640 --> 00:31:49,279
which is 14. decimal 14.4

00:31:45,360 --> 00:31:52,320
uh and the intel based uh implementation

00:31:49,279 --> 00:31:55,200
which is very important when you deal

00:31:52,320 --> 00:31:59,200
with the cryptocurrencies and other

00:31:55,200 --> 00:32:02,399
instruments with very precise uh

00:31:59,200 --> 00:32:04,080
prices it's actually a wonderful comment

00:32:02,399 --> 00:32:07,360
thanks alexia

00:32:04,080 --> 00:32:09,840
um so thank you both very much

00:32:07,360 --> 00:32:11,600
um for being with us this afternoon so

00:32:09,840 --> 00:32:12,480
i'd like to say thank you to ilya and

00:32:11,600 --> 00:32:15,039
alexi

00:32:12,480 --> 00:32:16,799
from the epam timebase team for their

00:32:15,039 --> 00:32:17,919
introduction to timebase community

00:32:16,799 --> 00:32:19,919
edition

00:32:17,919 --> 00:32:21,120
um i'd also like to remind people on the

00:32:19,919 --> 00:32:23,440
call that if um

00:32:21,120 --> 00:32:24,720
you are an engineer or a developer

00:32:23,440 --> 00:32:26,799
please feel free to go over to

00:32:24,720 --> 00:32:29,519
github.com forward slash

00:32:26,799 --> 00:32:31,679
finos to see all of our projects and get

00:32:29,519 --> 00:32:33,600
involved and start contributing

00:32:31,679 --> 00:32:35,039
um and i'd like to remind you that our

00:32:33,600 --> 00:32:36,799
kdb team

00:32:35,039 --> 00:32:38,640
um are actually looking for java

00:32:36,799 --> 00:32:43,519
developers for kdb studio

00:32:38,640 --> 00:32:46,480
so if you are heading over to github.com

00:32:43,519 --> 00:32:48,480
please do drop into kdb studio you will

00:32:46,480 --> 00:32:49,200
find a few issues where you can get

00:32:48,480 --> 00:32:51,840
started

00:32:49,200 --> 00:32:53,760
working on kdb studio as well so thank

00:32:51,840 --> 00:32:55,120
you very much ilya and alexi for being

00:32:53,760 --> 00:32:57,679
with us this afternoon

00:32:55,120 --> 00:32:59,519
um who the best thank you that was a

00:32:57,679 --> 00:33:09,920
great great presentation thank you

00:32:59,519 --> 00:33:12,959
i really enjoyed it

00:33:09,920 --> 00:33:12,959
[Music]

00:33:15,440 --> 00:33:17,519

YouTube URL: https://www.youtube.com/watch?v=3fDtSOX4zA4


