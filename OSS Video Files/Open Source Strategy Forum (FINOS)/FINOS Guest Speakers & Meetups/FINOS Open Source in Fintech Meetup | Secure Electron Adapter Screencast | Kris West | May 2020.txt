Title: FINOS Open Source in Fintech Meetup | Secure Electron Adapter Screencast | Kris West | May 2020
Publication date: 2021-01-08
Playlist: FINOS Guest Speakers & Meetups
Description: 
	This video is from the FINOS Open Source in Fintech Meetup | FINOS Secure Electron Adapter Screencast | Kris West & Ian Mesner | Cosaic | May 2020

►► Wrap up article with slides from the meetup: https://www.finos.org/blog/finos-secure-electron-adapter-screencast

-=-=-=-=-

►► Learn more about FINOS and how we deliver the power of open source to financial services:
FINOS: https://www.finos.org/

►► Playlist for all of our 2019 / 2020 Meetups and Guest Speakers: https://www.youtube.com/playlist?list=PLmPXh6nBuhJsYg1tP9dh3pNq2pVrGTdWs
 
►► Enjoy our FINOS Open Source in Fintech Podcast

All 2020 Podcasts: https://www.finos.org/blog/2020-finos-open-source-in-fintech-podcast-episodes

iTunes: https://podcasts.apple.com/us/podcast/finos-open-source-in-fintech-podcast/id1512371068

Spotify: https://open.spotify.com/show/431XdfX2fBdCUsopwh8td3

Google Podcasts: https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy8xZjQ0NTg4MC9wb2RjYXN0L3Jzcw==

Stitcher: https://www.stitcher.com/show/finos-open-source-in-fintech-podcast
4

Anchor.fm (for all platform links): https://anchor.fm/finos
Captions: 
	00:00:03,690 --> 00:00:11,890
[Music]

00:00:12,889 --> 00:00:18,690
on to the announcement a traffic you

00:00:16,710 --> 00:00:20,699
with firm believers in both open source

00:00:18,690 --> 00:00:22,439
software which all products like almost

00:00:20,699 --> 00:00:25,080
anything involved in the web are based

00:00:22,439 --> 00:00:26,760
on and collaboration which is why we

00:00:25,080 --> 00:00:30,029
offer full source access to all our

00:00:26,760 --> 00:00:31,710
clients using feeds humble ultimately we

00:00:30,029 --> 00:00:33,510
also believe that the best way to stay

00:00:31,710 --> 00:00:35,579
secure is to be open and transparent

00:00:33,510 --> 00:00:37,500
about how we approach security on the

00:00:35,579 --> 00:00:39,510
desktop and to collaborate with a

00:00:37,500 --> 00:00:42,660
community that shares the same goals and

00:00:39,510 --> 00:00:44,219
benefits from the same work hence today

00:00:42,660 --> 00:00:47,489
we're thrilled to announce the secure

00:00:44,219 --> 00:00:49,289
electron an actor or SEO for short which

00:00:47,489 --> 00:00:50,969
uses the same coding approach that we do

00:00:49,289 --> 00:00:53,760
in the fence on ball electron adapter

00:00:50,969 --> 00:00:55,649
that ships with spins on ball and that

00:00:53,760 --> 00:00:57,539
we've contributed that to finish the

00:00:55,649 --> 00:01:02,370
FinTech open source foundation and of

00:00:57,539 --> 00:01:03,899
course our hosts today adheres to

00:01:02,370 --> 00:01:06,510
electrons own security recommendations

00:01:03,899 --> 00:01:09,530
by design including enabling context

00:01:06,510 --> 00:01:11,790
isolation removing direct access to node

00:01:09,530 --> 00:01:15,200
disabling and/or filtering the remote

00:01:11,790 --> 00:01:18,240
module etc and provides a ready to use

00:01:15,200 --> 00:01:21,030
systems policy based security and

00:01:18,240 --> 00:01:23,340
electron with inter-process condoms that

00:01:21,030 --> 00:01:25,409
work with that security to ensure that

00:01:23,340 --> 00:01:31,740
your renderer processes can do what they

00:01:25,409 --> 00:01:33,780
need to do and no more hands on ATA

00:01:31,740 --> 00:01:35,700
as you'd expect from finishes get up and

00:01:33,780 --> 00:01:38,400
the address is shown where you'll find

00:01:35,700 --> 00:01:40,979
two repositories for SE a one containing

00:01:38,400 --> 00:01:43,200
the main se a module and a second

00:01:40,979 --> 00:01:46,290
containing the SE a QuickStart project

00:01:43,200 --> 00:01:47,869
yeah that's a minimal electron app using

00:01:46,290 --> 00:01:50,850
se a we'll have a look at it in a minute

00:01:47,869 --> 00:01:53,520
and it's based on the electron Quick

00:01:50,850 --> 00:01:55,530
Start Guide for inspiration and it

00:01:53,520 --> 00:01:58,860
demonstrates the basics of using ATA

00:01:55,530 --> 00:02:01,439
including a sample manifest file syncing

00:01:58,860 --> 00:02:06,030
configured components and preloads for

00:02:01,439 --> 00:02:08,129
customizing your windows the most

00:02:06,030 --> 00:02:10,560
important thing to note about SEO is

00:02:08,129 --> 00:02:12,720
that it is convict driven by manifest

00:02:10,560 --> 00:02:13,530
file an example which you'll find in the

00:02:12,720 --> 00:02:17,400
se a quick

00:02:13,530 --> 00:02:19,650
project which was shown here the

00:02:17,400 --> 00:02:22,250
manifest is used to configure the main

00:02:19,650 --> 00:02:25,560
window which is loaded from a remote

00:02:22,250 --> 00:02:27,030
application occasion even and as we

00:02:25,560 --> 00:02:29,130
learned earlier it should probably be

00:02:27,030 --> 00:02:32,130
loaded virus secure transport from a

00:02:29,130 --> 00:02:34,739
trusted location only now that can be a

00:02:32,130 --> 00:02:36,450
visible window or non visible once used

00:02:34,739 --> 00:02:37,860
more like a service to manage your

00:02:36,450 --> 00:02:40,410
application that essentially the

00:02:37,860 --> 00:02:43,170
approach were using fins on ball and it

00:02:40,410 --> 00:02:45,630
can have additional content pre-loaded

00:02:43,170 --> 00:02:47,790
into it which is JavaScript functions

00:02:45,630 --> 00:02:51,690
that you're essentially adding to the

00:02:47,790 --> 00:02:53,910
window mixed you can configure other

00:02:51,690 --> 00:02:56,220
windows or components of your desktop

00:02:53,910 --> 00:02:58,170
app these are also loaded from remote

00:02:56,220 --> 00:03:00,630
locations and again can be visible

00:02:58,170 --> 00:03:02,640
windows or hidden ones that'll allow you

00:03:00,630 --> 00:03:06,720
to build application components or your

00:03:02,640 --> 00:03:08,550
own desktop services and they can have

00:03:06,720 --> 00:03:10,769
permissions specified on them giving

00:03:08,550 --> 00:03:12,989
them you fine-grained control over what

00:03:10,769 --> 00:03:16,260
each of those components is able to do

00:03:12,989 --> 00:03:18,660
for example this untrusted component has

00:03:16,260 --> 00:03:20,220
been denied access to system API for

00:03:18,660 --> 00:03:22,650
clearing the cache or exiting the

00:03:20,220 --> 00:03:24,150
runtime as well as having its access to

00:03:22,650 --> 00:03:26,959
certain JavaScript functions and

00:03:24,150 --> 00:03:29,310
chromium web preferences 2-tailed

00:03:26,959 --> 00:03:31,260
finally you can set overall preferences

00:03:29,310 --> 00:03:33,209
for the electron adapter such as a list

00:03:31,260 --> 00:03:35,010
of trusted preloads which can then be

00:03:33,209 --> 00:03:41,970
applied to the components in the main

00:03:35,010 --> 00:03:43,769
window onto a demo now we're going to

00:03:41,970 --> 00:03:48,540
try and leave this alive so fingers

00:03:43,769 --> 00:03:51,320
crossed here's my BS code where I've got

00:03:48,540 --> 00:03:54,870
the SE a QuickStart project loaded up

00:03:51,320 --> 00:03:56,070
showing the index dot HTML file we're

00:03:54,870 --> 00:03:57,570
going to use this for a number of

00:03:56,070 --> 00:04:00,269
different components when you use the

00:03:57,570 --> 00:04:03,480
same file for brevity and sort of to

00:04:00,269 --> 00:04:05,400
prove that security policies use case

00:04:03,480 --> 00:04:09,660
I'll manifest that you've already seen

00:04:05,400 --> 00:04:11,190
it here along with those components as

00:04:09,660 --> 00:04:14,340
you can see you're using the index dot

00:04:11,190 --> 00:04:16,200
HTML add in a preload and in the case of

00:04:14,340 --> 00:04:20,519
the untrusted child having submissions

00:04:16,200 --> 00:04:22,979
set just contains some functions we want

00:04:20,519 --> 00:04:27,610
to add into the window it's great way to

00:04:22,979 --> 00:04:29,860
add a POS for your services and finally

00:04:27,610 --> 00:04:32,470
this renderer jeaious file which is

00:04:29,860 --> 00:04:35,230
loaded into index KS to do something

00:04:32,470 --> 00:04:37,530
interesting with SCA for example can get

00:04:35,230 --> 00:04:39,670
a reference to the current window

00:04:37,530 --> 00:04:42,550
virtual informational Monitor

00:04:39,670 --> 00:04:44,350
information for the system and we could

00:04:42,550 --> 00:04:48,730
also use that current window to do

00:04:44,350 --> 00:04:51,130
things like moving a window around so we

00:04:48,730 --> 00:04:53,020
could get the bounds booked for that

00:04:51,130 --> 00:04:55,750
window we can set the bounds to actually

00:04:53,020 --> 00:04:58,960
move it well we could also use the SEO

00:04:55,750 --> 00:05:00,490
main process to get hold of the manifest

00:04:58,960 --> 00:05:03,610
to give us details of other components

00:05:00,490 --> 00:05:06,580
and actually launch other windows so

00:05:03,610 --> 00:05:09,550
let's try this out I've already

00:05:06,580 --> 00:05:11,590
installed my dependencies of them VM so

00:05:09,550 --> 00:05:13,870
we'll start her up

00:05:11,590 --> 00:05:16,420
and here we go this is our main window

00:05:13,870 --> 00:05:18,310
visible in this case you can see we can

00:05:16,420 --> 00:05:20,410
do things within it it's rendering some

00:05:18,310 --> 00:05:24,000
details about its current bounds the

00:05:20,410 --> 00:05:30,130
monitor information etc and I can launch

00:05:24,000 --> 00:05:33,430
trusted application is here same index

00:05:30,130 --> 00:05:34,960
file it's just I can't fit so name and

00:05:33,430 --> 00:05:39,580
again it can do all the usual things

00:05:34,960 --> 00:05:46,870
including extended runtime so let's just

00:05:39,580 --> 00:05:48,520
stop one more time here he is again this

00:05:46,870 --> 00:05:53,380
time I'm going to launch the untrusted

00:05:48,520 --> 00:05:55,750
child application which is here and this

00:05:53,380 --> 00:05:57,730
one as I mentioned has been denied the

00:05:55,750 --> 00:06:00,850
permission to exit the runtime so if I

00:05:57,730 --> 00:06:02,740
hit exit nothing happens and if I go

00:06:00,850 --> 00:06:04,300
ahead and launch JavaScript console you

00:06:02,740 --> 00:06:07,000
can actually see we're getting an error

00:06:04,300 --> 00:06:09,550
message back from SCA whenever we hit

00:06:07,000 --> 00:06:12,640
that button and access is denied to

00:06:09,550 --> 00:06:15,570
system door exit so there's our security

00:06:12,640 --> 00:06:15,570
policy in action

00:06:16,310 --> 00:06:26,500

YouTube URL: https://www.youtube.com/watch?v=0NIBZDAX4PE


