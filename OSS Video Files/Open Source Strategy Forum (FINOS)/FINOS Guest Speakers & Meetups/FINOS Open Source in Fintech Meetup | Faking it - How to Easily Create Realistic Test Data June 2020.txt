Title: FINOS Open Source in Fintech Meetup | Faking it - How to Easily Create Realistic Test Data June 2020
Publication date: 2021-01-08
Playlist: FINOS Guest Speakers & Meetups
Description: 
	This video is from the FINOS Open Source in Fintech Meetup | Faking it - How to Easily Create Realistic Test Data | Tim Johnson & Andrew Carr | Scott Logic | June 2020

►► Wrap up article with slides from the meetup: https://www.finos.org/blog/faking-it-how-to-easily-create-realistic-test-data-tim-johnson-and-andrew-carr

-=-=-=-=-

►► Learn more about FINOS and how we deliver the power of open source to financial services:
FINOS: https://www.finos.org/

►► Playlist for all of our 2019 / 2020 Meetups and Guest Speakers: https://www.youtube.com/playlist?list=PLmPXh6nBuhJsYg1tP9dh3pNq2pVrGTdWs
 
►► Enjoy our FINOS Open Source in Fintech Podcast

All 2020 Podcasts: https://www.finos.org/blog/2020-finos-open-source-in-fintech-podcast-episodes

iTunes: https://podcasts.apple.com/us/podcast/finos-open-source-in-fintech-podcast/id1512371068

Spotify: https://open.spotify.com/show/431XdfX2fBdCUsopwh8td3

Google Podcasts: https://podcasts.google.com/feed/aHR0cHM6Ly9hbmNob3IuZm0vcy8xZjQ0NTg4MC9wb2RjYXN0L3Jzcw==

Stitcher: https://www.stitcher.com/show/finos-open-source-in-fintech-podcast
4

Anchor.fm (for all platform links): https://anchor.fm/finos
Captions: 
	00:00:03,690 --> 00:00:11,890
[Music]

00:00:13,280 --> 00:00:19,470
good afternoon everybody and welcome to

00:00:16,500 --> 00:00:21,840
our thinnest virtual Meetup

00:00:19,470 --> 00:00:23,609
I'm here this afternoon or this morning

00:00:21,840 --> 00:00:26,849
depending on where you are in the world

00:00:23,609 --> 00:00:30,060
with Android car head of consultancy at

00:00:26,849 --> 00:00:33,270
Bristol in the UK and Tim Johnson

00:00:30,060 --> 00:00:36,059
delivery manager at Scott logic who are

00:00:33,270 --> 00:00:38,790
a famous member now I'm really pleased

00:00:36,059 --> 00:00:40,559
to introduce the Scott logic team with

00:00:38,790 --> 00:00:42,450
their webinar that they're produced in

00:00:40,559 --> 00:00:45,770
this afternoon which is called faking it

00:00:42,450 --> 00:00:48,930
how to easily create realistic test data

00:00:45,770 --> 00:00:52,739
from our data helix project that we have

00:00:48,930 --> 00:00:54,809
within its famous foundation and this

00:00:52,739 --> 00:00:59,280
afternoon before I actually pass the mic

00:00:54,809 --> 00:01:00,930
over to Tim and Andrew I'd like to just

00:00:59,280 --> 00:01:03,809
let everybody know that we will be

00:01:00,930 --> 00:01:06,900
giving away a couple of free finished

00:01:03,809 --> 00:01:08,909
t-shirts picked at random from people

00:01:06,900 --> 00:01:11,909
who have actually subscribed to this

00:01:08,909 --> 00:01:13,619
some to this webinar and so if you

00:01:11,909 --> 00:01:17,340
haven't subscribed please head over to

00:01:13,619 --> 00:01:19,200
the finis LinkedIn page where you'll

00:01:17,340 --> 00:01:21,840
find details of this event which have

00:01:19,200 --> 00:01:23,700
been posted today if you hit the

00:01:21,840 --> 00:01:25,530
register there'll be a forum put your

00:01:23,700 --> 00:01:29,430
name in there and then you'll be entered

00:01:25,530 --> 00:01:32,189
for the free finis t-shirts that will be

00:01:29,430 --> 00:01:34,590
picked at random during this event also

00:01:32,189 --> 00:01:37,110
whilst you're on LinkedIn and looking at

00:01:34,590 --> 00:01:40,680
the finis arm page please do subscribe

00:01:37,110 --> 00:01:42,540
for further updates as you know we do

00:01:40,680 --> 00:01:44,070
have all of our various different

00:01:42,540 --> 00:01:46,530
projects that we run and different

00:01:44,070 --> 00:01:50,340
events that we organize and you can also

00:01:46,530 --> 00:01:53,520
like us on Twitter and also if you go

00:01:50,340 --> 00:01:56,369
over to Finister org you'll find our get

00:01:53,520 --> 00:01:58,170
involved page which will give you an

00:01:56,369 --> 00:02:00,090
idea about how you can get involved in

00:01:58,170 --> 00:02:02,640
our projects and all of our activities

00:02:00,090 --> 00:02:05,700
and also where you can subscribe for

00:02:02,640 --> 00:02:08,940
newsletters now if you are a developer

00:02:05,700 --> 00:02:11,819
please head over to github comm forward

00:02:08,940 --> 00:02:14,310
slash finis to start contributing into

00:02:11,819 --> 00:02:16,650
the finis organization

00:02:14,310 --> 00:02:19,740
and also if you have any questions

00:02:16,650 --> 00:02:21,900
relating to either thinness or the

00:02:19,740 --> 00:02:24,330
presentation this afternoon by Andrew

00:02:21,900 --> 00:02:27,690
and Tim please do drop them into the

00:02:24,330 --> 00:02:30,000
chat where I will pass those across the

00:02:27,690 --> 00:02:32,640
team in the Q&A at the end of the

00:02:30,000 --> 00:02:35,580
presentation and so with that I'd like

00:02:32,640 --> 00:02:36,810
to say hi to Tim and hi Tim would you

00:02:35,580 --> 00:02:38,600
please guide us through your

00:02:36,810 --> 00:02:42,420
presentation this afternoon

00:02:38,600 --> 00:02:44,520
sure so in fact Andrew do you want to

00:02:42,420 --> 00:02:49,380
it's just introduce yourself first and

00:02:44,520 --> 00:02:51,120
then I'll go yeah so Tim's gonna do most

00:02:49,380 --> 00:02:54,060
of the webinar but I'll give some I

00:02:51,120 --> 00:02:55,620
guess context because I was the person

00:02:54,060 --> 00:02:56,670
to keep the project off originally but

00:02:55,620 --> 00:02:59,190
yeah so myself

00:02:56,670 --> 00:03:01,700
I'm Andrew Karl I'm head of consultancy

00:02:59,190 --> 00:03:05,010
for our Bristol office at Scott logic

00:03:01,700 --> 00:03:08,910
and as James said Scott odjick our

00:03:05,010 --> 00:03:10,650
affinity member and we're I guess big

00:03:08,910 --> 00:03:13,860
supporters of open source software in

00:03:10,650 --> 00:03:15,510
general so like being at Scott logic now

00:03:13,860 --> 00:03:18,860
I think it's coming up for four years

00:03:15,510 --> 00:03:21,360
actually and my background I guess is

00:03:18,860 --> 00:03:22,500
I've been in financial services for a

00:03:21,360 --> 00:03:25,260
while so I used to work at Goldman Sachs

00:03:22,500 --> 00:03:27,329
and Citigroup before then but prior to

00:03:25,260 --> 00:03:31,590
then I used to work in the telecoms

00:03:27,329 --> 00:03:34,829
industry and I guess to give you some

00:03:31,590 --> 00:03:36,930
background well actually let me

00:03:34,829 --> 00:03:38,610
introduce Tim so Tim's actually one of

00:03:36,930 --> 00:03:41,010
our new delivery managers do you want to

00:03:38,610 --> 00:03:44,190
say a little bit about your certain yeah

00:03:41,010 --> 00:03:47,160
sure so yeah I'm pretty new to to Scott

00:03:44,190 --> 00:03:49,980
logic in fact I joined on the the 16th

00:03:47,160 --> 00:03:52,590
of March which is a will stick me with

00:03:49,980 --> 00:03:55,110
me forever because of course that's when

00:03:52,590 --> 00:03:58,410
the lockdown started managed a single

00:03:55,110 --> 00:04:01,079
day in the office to quickly get around

00:03:58,410 --> 00:04:05,880
and see people and before starting this

00:04:01,079 --> 00:04:07,530
new regime working remotely and one

00:04:05,880 --> 00:04:10,530
thing that did start up there was a

00:04:07,530 --> 00:04:12,560
particular piece of government client

00:04:10,530 --> 00:04:17,190
work that started up as a result of the

00:04:12,560 --> 00:04:19,560
decoded crisis and Andrew asked me to to

00:04:17,190 --> 00:04:23,370
help out with that and to help them to

00:04:19,560 --> 00:04:25,460
generate realistic test data using data

00:04:23,370 --> 00:04:29,180
helix

00:04:25,460 --> 00:04:31,820
and with no background as to you know

00:04:29,180 --> 00:04:33,639
squat logic and and data index itself I

00:04:31,820 --> 00:04:36,680
have actually been able to use the tool

00:04:33,639 --> 00:04:39,139
so sort of insist this talk we need to

00:04:36,680 --> 00:04:42,320
shows that if I can use it as a delivery

00:04:39,139 --> 00:04:45,889
manager then you know it is an easy

00:04:42,320 --> 00:04:49,190
thing to use so I will take you through

00:04:45,889 --> 00:04:50,600
the details of that but before we go

00:04:49,190 --> 00:04:54,440
into those details and Andrew you're

00:04:50,600 --> 00:04:56,930
gonna talk about the background idea yes

00:04:54,440 --> 00:05:00,070
that's right so yeah as I explained data

00:04:56,930 --> 00:05:02,750
helix was an idea that I came up with

00:05:00,070 --> 00:05:03,650
basically the idea kind of was scheming

00:05:02,750 --> 00:05:05,960
with me

00:05:03,650 --> 00:05:09,259
when I used to work at Goldman Sachs and

00:05:05,960 --> 00:05:11,960
I guess since joining Scott logic I've

00:05:09,259 --> 00:05:15,320
seen this problem not only at yes but a

00:05:11,960 --> 00:05:17,150
number of our clients where you know the

00:05:15,320 --> 00:05:19,729
software development has tended to go

00:05:17,150 --> 00:05:20,180
well the developers want to test some

00:05:19,729 --> 00:05:23,060
beta

00:05:20,180 --> 00:05:25,430
in their dev environments or maybe a UAT

00:05:23,060 --> 00:05:27,530
environment and and you know the

00:05:25,430 --> 00:05:30,770
challenge of and actually if you go to

00:05:27,530 --> 00:05:34,580
the next slide to the challenge of how

00:05:30,770 --> 00:05:37,460
do you use good test data how do you

00:05:34,580 --> 00:05:40,280
have reasonably realistic test data to

00:05:37,460 --> 00:05:41,419
to develop your application and I guess

00:05:40,280 --> 00:05:43,729
it's a challenge for a number of reasons

00:05:41,419 --> 00:05:45,710
and one NICUs is actually harder and

00:05:43,729 --> 00:05:48,430
harder to take data from production and

00:05:45,710 --> 00:05:51,050
just place it into your 18 tests

00:05:48,430 --> 00:05:53,750
certainly with all the regulations that

00:05:51,050 --> 00:05:56,599
have come in it's now harder to get

00:05:53,750 --> 00:05:58,310
access to production data there's also

00:05:56,599 --> 00:06:01,820
the challenge that sometimes when you're

00:05:58,310 --> 00:06:04,009
developing an application the data that

00:06:01,820 --> 00:06:04,820
you need won't have been generated yet

00:06:04,009 --> 00:06:06,919
in production

00:06:04,820 --> 00:06:10,520
maybe you're introducing a new financial

00:06:06,919 --> 00:06:13,849
product or something like that and I

00:06:10,520 --> 00:06:16,340
guess there's a whole challenge of

00:06:13,849 --> 00:06:18,199
actually if you do take data from

00:06:16,340 --> 00:06:20,630
production and you start using it in

00:06:18,199 --> 00:06:23,090
test environments sometimes that data

00:06:20,630 --> 00:06:24,889
would need to be data ranged so for

00:06:23,090 --> 00:06:27,380
example if you're taking a day's worth

00:06:24,889 --> 00:06:30,590
of trading data and actually you're then

00:06:27,380 --> 00:06:33,560
needing to use it a few days later that

00:06:30,590 --> 00:06:35,779
data will won't be correct because all

00:06:33,560 --> 00:06:38,150
the dates in it will be older and it's

00:06:35,779 --> 00:06:39,020
not maybe as simple as just adding three

00:06:38,150 --> 00:06:41,410
to the date

00:06:39,020 --> 00:06:44,870
so actually you know making a data

00:06:41,410 --> 00:06:46,340
accurate for an L can be a challenge and

00:06:44,870 --> 00:06:48,440
then there's always the problem that

00:06:46,340 --> 00:06:51,530
actually you know we've we've certainly

00:06:48,440 --> 00:06:53,419
seen since Kovac nineteen and you know

00:06:51,530 --> 00:06:54,949
when the markets go up or down and

00:06:53,419 --> 00:06:57,500
certainly I knew when there was lots of

00:06:54,949 --> 00:06:58,910
cells we've been chatting for quite a

00:06:57,500 --> 00:07:02,360
few of our clients who have experienced

00:06:58,910 --> 00:07:04,849
much higher than normal volumes so one

00:07:02,360 --> 00:07:07,610
of the comments I heard was a normal day

00:07:04,849 --> 00:07:10,819
during the kind of March

00:07:07,610 --> 00:07:14,300
Kovach nineteen sell-off was four times

00:07:10,819 --> 00:07:16,340
as much as it was historically so how do

00:07:14,300 --> 00:07:19,099
you test data volumes that you've never

00:07:16,340 --> 00:07:20,270
seen before and simply taking a day's

00:07:19,099 --> 00:07:22,250
worth of production data for example

00:07:20,270 --> 00:07:24,970
would it be the data volumes you're

00:07:22,250 --> 00:07:28,009
looking for so yes for all those reasons

00:07:24,970 --> 00:07:30,349
and certainly I know it was a problem

00:07:28,009 --> 00:07:32,620
for me when I was at Goldman Sachs I

00:07:30,349 --> 00:07:36,919
wanted a way to generate data

00:07:32,620 --> 00:07:43,460
synthetically and so Timothy go to the

00:07:36,919 --> 00:07:47,389
next slide really it kind of happens one

00:07:43,460 --> 00:07:49,430
night after a long day I was in London

00:07:47,389 --> 00:07:51,169
and I've been to see several clients who

00:07:49,430 --> 00:07:52,909
had all talked about the challenges

00:07:51,169 --> 00:07:54,620
they'd had with test data and I was

00:07:52,909 --> 00:07:56,650
actually chatting to two of our senior

00:07:54,620 --> 00:07:58,729
testers in a restaurant and just

00:07:56,650 --> 00:08:01,789
wondering you know whether we could

00:07:58,729 --> 00:08:04,460
build a command-line tool to generate

00:08:01,789 --> 00:08:08,930
some synthetic data and have it as a

00:08:04,460 --> 00:08:11,630
rules-based tool to allow us to generate

00:08:08,930 --> 00:08:13,580
some synthetic data really quickly but

00:08:11,630 --> 00:08:15,639
have some complex rules so it can

00:08:13,580 --> 00:08:18,080
actually generate some quite rich data

00:08:15,639 --> 00:08:20,750
and whether we could build that and an

00:08:18,080 --> 00:08:22,610
open source it and I guess the data

00:08:20,750 --> 00:08:27,620
helix just really kind of kicked off

00:08:22,610 --> 00:08:30,050
from there after I set a few developers

00:08:27,620 --> 00:08:31,789
to kick it off and build it at all and

00:08:30,050 --> 00:08:34,849
we ended up building something that

00:08:31,789 --> 00:08:38,120
generated some data that looked quite

00:08:34,849 --> 00:08:40,399
realistic to me we decided to actually

00:08:38,120 --> 00:08:42,560
go ahead and see whether any of our

00:08:40,399 --> 00:08:44,839
clients would be interested in using

00:08:42,560 --> 00:08:49,550
that and Tim could you hit a next slide

00:08:44,839 --> 00:08:52,140
please so actually for one of our

00:08:49,550 --> 00:08:55,140
clients they were

00:08:52,140 --> 00:08:59,280
a company that provides a service that

00:08:55,140 --> 00:09:02,160
does that sends trades to some trade

00:08:59,280 --> 00:09:04,110
reporting repositories and one of the

00:09:02,160 --> 00:09:05,370
services they provide is they take huge

00:09:04,110 --> 00:09:09,480
amounts of trades in from their clients

00:09:05,370 --> 00:09:11,010
and they actually do some sanity tests

00:09:09,480 --> 00:09:13,430
on the trade saying which some of the

00:09:11,010 --> 00:09:17,010
trades and actually then what they do is

00:09:13,430 --> 00:09:19,170
send those trades off to be reported and

00:09:17,010 --> 00:09:22,200
obviously in their test environments

00:09:19,170 --> 00:09:23,700
they have that exact challenge that they

00:09:22,200 --> 00:09:25,620
didn't want the developers to see all

00:09:23,700 --> 00:09:28,200
the production data but they wanted

00:09:25,620 --> 00:09:30,870
their developers to be able to test with

00:09:28,200 --> 00:09:33,870
reason the realistic data and for that

00:09:30,870 --> 00:09:35,700
we used the data generator to generate

00:09:33,870 --> 00:09:38,240
about a hundred and eighty mean rows of

00:09:35,700 --> 00:09:40,470
some futures and options data for them

00:09:38,240 --> 00:09:42,750
and that actually worked out really well

00:09:40,470 --> 00:09:44,460
in production because no one needed to

00:09:42,750 --> 00:09:46,110
check that data because little synthetic

00:09:44,460 --> 00:09:48,210
it didn't have any of the challenges

00:09:46,110 --> 00:09:52,470
that you typically get from picking

00:09:48,210 --> 00:09:58,380
production data and using that and if I

00:09:52,470 --> 00:10:00,750
hand over to Newton okay so there's the

00:09:58,380 --> 00:10:03,930
the the project that I was helping with

00:10:00,750 --> 00:10:08,160
to say government clients still live

00:10:03,930 --> 00:10:12,810
work and the situation they have is that

00:10:08,160 --> 00:10:16,800
they've got a legacy system based on SQL

00:10:12,810 --> 00:10:19,590
Server that's having to generate reports

00:10:16,800 --> 00:10:23,760
of twenty six million records each day

00:10:19,590 --> 00:10:26,070
and disseminate that stat data and the

00:10:23,760 --> 00:10:28,890
the system's creaking at the seams and

00:10:26,070 --> 00:10:31,080
and needs improving or it falls over

00:10:28,890 --> 00:10:32,270
completely and they also want to extend

00:10:31,080 --> 00:10:35,040
it

00:10:32,270 --> 00:10:37,500
there is a system that they've developed

00:10:35,040 --> 00:10:40,740
based on a perhaps you spark as a

00:10:37,500 --> 00:10:43,800
replacement but only that's that's

00:10:40,740 --> 00:10:45,660
unproven and people are not willing to

00:10:43,800 --> 00:10:50,070
take the risk to move this critical

00:10:45,660 --> 00:10:52,260
function onto this new system so to kind

00:10:50,070 --> 00:10:53,820
of do risk that to make people more

00:10:52,260 --> 00:10:56,850
comfortable what's happening at the

00:10:53,820 --> 00:10:58,620
moment is the the data that's in the

00:10:56,850 --> 00:11:01,260
current system is being kind of faked

00:10:58,620 --> 00:11:05,070
for the new system to show that it can

00:11:01,260 --> 00:11:07,750
handle it both functionally and at load

00:11:05,070 --> 00:11:10,030
with the previous example that Andrews

00:11:07,750 --> 00:11:12,460
talking about it was it was actually

00:11:10,030 --> 00:11:14,830
about the performance at this point with

00:11:12,460 --> 00:11:16,840
this customer it's it's about the sort

00:11:14,830 --> 00:11:20,800
of functional comparison so it's trying

00:11:16,840 --> 00:11:23,980
to get that true true test data that's

00:11:20,800 --> 00:11:26,950
going to really exercise it and yeah

00:11:23,980 --> 00:11:30,520
despite not having use data helix before

00:11:26,950 --> 00:11:32,860
I've been able to help a bit this

00:11:30,520 --> 00:11:37,750
project it helped improve the quality of

00:11:32,860 --> 00:11:40,230
that's that test data so what I'd like

00:11:37,750 --> 00:11:45,580
to do now is it's kind of walk through

00:11:40,230 --> 00:11:48,000
kind of how I've done it I've not used

00:11:45,580 --> 00:11:52,000
their example of going for a fictitious

00:11:48,000 --> 00:11:54,400
example and quite a simple example and

00:11:52,000 --> 00:11:56,500
it was just picked some some fields that

00:11:54,400 --> 00:11:58,510
and it demonstrates the different

00:11:56,500 --> 00:12:01,300
aspects or data helix and different

00:11:58,510 --> 00:12:05,200
different functions it's got I've gone

00:12:01,300 --> 00:12:09,580
with a sensitive personal beta kind of

00:12:05,200 --> 00:12:12,900
bents to it with for name surname date

00:12:09,580 --> 00:12:16,210
of birth I've put in a fictitious

00:12:12,900 --> 00:12:19,570
boolean Realty of his adult to show

00:12:16,210 --> 00:12:21,520
relationships I've got password postcode

00:12:19,570 --> 00:12:28,050
in country so those are the things I

00:12:21,520 --> 00:12:32,680
want to generate the data for so

00:12:28,050 --> 00:12:36,100
basically go to the Finnish github sites

00:12:32,680 --> 00:12:37,600
there's a data helix project and when

00:12:36,100 --> 00:12:42,670
you follow that the first thing you get

00:12:37,600 --> 00:12:44,470
to is this microsite of links you notice

00:12:42,670 --> 00:12:47,830
in the in the background on the bottom

00:12:44,470 --> 00:12:49,660
we've actually got some some some data

00:12:47,830 --> 00:12:52,180
that's been faked and when you go to

00:12:49,660 --> 00:12:54,550
this live that is that's lots of

00:12:52,180 --> 00:12:55,780
streaming based on an instance of data

00:12:54,550 --> 00:12:58,800
helix that's kind of running in the

00:12:55,780 --> 00:13:02,950
background just to kind of show it off

00:12:58,800 --> 00:13:05,890
and the links we've got there we've got

00:13:02,950 --> 00:13:08,290
a basic getting started guide with the

00:13:05,890 --> 00:13:13,140
simplest things you need to do to get

00:13:08,290 --> 00:13:15,020
started there's a user guide once you're

00:13:13,140 --> 00:13:18,130
with its that'll totally

00:13:15,020 --> 00:13:23,030
all these they're all the different

00:13:18,130 --> 00:13:24,010
types options but what was really great

00:13:23,030 --> 00:13:28,520
for me

00:13:24,010 --> 00:13:30,710
I was a bit rusty and then any anything

00:13:28,520 --> 00:13:34,250
approaching development for for a while

00:13:30,710 --> 00:13:36,710
is this a non online playground which

00:13:34,250 --> 00:13:38,900
allows you to to play around with a

00:13:36,710 --> 00:13:44,870
helix and get to know it without having

00:13:38,900 --> 00:13:48,410
to install anything so we show you what

00:13:44,870 --> 00:13:50,630
that playground looks like I'm not

00:13:48,410 --> 00:13:52,130
expecting you to who went to read all

00:13:50,630 --> 00:13:55,100
this moment we're going to pick this

00:13:52,130 --> 00:13:57,560
apart step by step but to give you an

00:13:55,100 --> 00:14:00,590
overall feel of what the playground is

00:13:57,560 --> 00:14:05,680
like on the left hand side is where we

00:14:00,590 --> 00:14:10,280
specify the data formats and constraints

00:14:05,680 --> 00:14:12,110
we want to create and when we run it the

00:14:10,280 --> 00:14:15,950
generated data appears on the right hand

00:14:12,110 --> 00:14:18,470
side so we can see at the top here we've

00:14:15,950 --> 00:14:21,560
got those those fields that we talked

00:14:18,470 --> 00:14:25,460
about earlier up here at the top rights

00:14:21,560 --> 00:14:27,740
we've got an examples set so when you're

00:14:25,460 --> 00:14:29,630
online and click on that and is it as a

00:14:27,740 --> 00:14:31,490
bunch of examples that come up there and

00:14:29,630 --> 00:14:35,480
that's that again we really you tool for

00:14:31,490 --> 00:14:40,820
getting us started so let's pick that

00:14:35,480 --> 00:14:45,110
apart so the simplest thing you can do

00:14:40,820 --> 00:14:47,840
is a single field which I've picked on

00:14:45,110 --> 00:14:50,210
password here a string field with no

00:14:47,840 --> 00:14:53,450
constraints at all and when we run that

00:14:50,210 --> 00:14:59,060
we get this large string this is the

00:14:53,450 --> 00:15:01,870
default string and yes that's that's why

00:14:59,060 --> 00:15:04,760
the large so we want to be able to

00:15:01,870 --> 00:15:06,560
constrain that down and make that a bit

00:15:04,760 --> 00:15:12,350
more realistic by adding constraints

00:15:06,560 --> 00:15:14,720
this is in in JSON if I certainly wasn't

00:15:12,350 --> 00:15:19,360
familiar with JSON before hand so it's a

00:15:14,720 --> 00:15:23,270
standard industry format so to add a

00:15:19,360 --> 00:15:27,400
constraint it's adding more fields to

00:15:23,270 --> 00:15:31,180
the JSON at the bottom here we've got a

00:15:27,400 --> 00:15:33,130
expression this is again if people

00:15:31,180 --> 00:15:36,850
haven't seen us before this is standard

00:15:33,130 --> 00:15:41,050
type of notation on how to do matching

00:15:36,850 --> 00:15:44,740
of that string here I've got a simple

00:15:41,050 --> 00:15:46,870
example of this a lowercase 4 character

00:15:44,740 --> 00:15:50,790
between 6 and 10 characters long and

00:15:46,870 --> 00:15:53,500
that's gives us a more of a constraint

00:15:50,790 --> 00:15:56,320
more realistic password but then of

00:15:53,500 --> 00:15:59,050
course you can play with these wedge X's

00:15:56,320 --> 00:16:00,760
and have them as I creates and as

00:15:59,050 --> 00:16:03,930
representative as you need them depends

00:16:00,760 --> 00:16:07,170
on how how how detailed you want to go

00:16:03,930 --> 00:16:11,200
so we've now got a string with that

00:16:07,170 --> 00:16:14,320
constraints the next thing is a date

00:16:11,200 --> 00:16:17,350
field this is the different type of

00:16:14,320 --> 00:16:19,720
field here we've got a couple of

00:16:17,350 --> 00:16:22,510
straight constraints to restrain the

00:16:19,720 --> 00:16:24,730
date of birth to be something realistic

00:16:22,510 --> 00:16:27,940
without these it could be thousands of

00:16:24,730 --> 00:16:31,870
years into the future so we're trying to

00:16:27,940 --> 00:16:35,130
get those realistic in that's way so

00:16:31,870 --> 00:16:38,890
we've got that data with two constraints

00:16:35,130 --> 00:16:41,140
now what I'm showing here is when it

00:16:38,890 --> 00:16:44,500
starts get interesting is that you've

00:16:41,140 --> 00:16:49,360
got a I've got an example of it is adult

00:16:44,500 --> 00:16:52,090
boolean field true or false and we've

00:16:49,360 --> 00:16:55,450
got a relationship between two fields

00:16:52,090 --> 00:16:58,600
now so it was the bottom I've put in a

00:16:55,450 --> 00:17:01,060
if date of birth is after a particular

00:16:58,600 --> 00:17:04,450
date and then they are there our child

00:17:01,060 --> 00:17:07,920
so it's false otherwise true so this is

00:17:04,450 --> 00:17:10,300
where we can start to build up some as

00:17:07,920 --> 00:17:14,920
complicated logic as you need for your

00:17:10,300 --> 00:17:20,220
testing by yeah having one field racing

00:17:14,920 --> 00:17:24,670
into another and we can also see here to

00:17:20,220 --> 00:17:28,120
start to simulate bad quality data here

00:17:24,670 --> 00:17:30,460
we've got data with birth as being it's

00:17:28,120 --> 00:17:36,780
allowed to be null so we've got gaps in

00:17:30,460 --> 00:17:36,780
that data that's those circumstances

00:17:37,210 --> 00:17:46,970
next we've had so far is strings that

00:17:44,150 --> 00:17:48,890
are within their constraints they can be

00:17:46,970 --> 00:17:52,100
anything randomly within those

00:17:48,890 --> 00:17:54,409
constraints but it's data helix within

00:17:52,100 --> 00:17:58,820
data helix itself there's there's fake

00:17:54,409 --> 00:18:00,770
data we've got different types of fake

00:17:58,820 --> 00:18:04,070
data here I'm showing first statement

00:18:00,770 --> 00:18:05,690
last name so it's got sets of first

00:18:04,070 --> 00:18:09,679
names and last last names

00:18:05,690 --> 00:18:14,360
built into it and it will then pick from

00:18:09,679 --> 00:18:18,350
that that list there's a reasonable

00:18:14,360 --> 00:18:20,600
range here stuff that we've added we had

00:18:18,350 --> 00:18:22,429
some sort of finance industry in mind

00:18:20,600 --> 00:18:26,210
when we developed this so there's things

00:18:22,429 --> 00:18:28,880
like valid icing codes are a seacoast

00:18:26,210 --> 00:18:30,950
Cusick codes there's a number of things

00:18:28,880 --> 00:18:34,340
in there but the the user guide will

00:18:30,950 --> 00:18:39,230
then tell you what's available and how

00:18:34,340 --> 00:18:44,630
to use it so by using that that fake

00:18:39,230 --> 00:18:49,010
data we've improved the data further so

00:18:44,630 --> 00:18:52,700
this is getting more more realistic it's

00:18:49,010 --> 00:18:56,750
not just the fake data within data helix

00:18:52,700 --> 00:18:59,270
itself we've also added support for the

00:18:56,750 --> 00:19:03,679
Java Baker library which I believe is

00:18:59,270 --> 00:19:06,649
built on Ruby fake originally and there

00:19:03,679 --> 00:19:10,279
is yeah that's the whole list there hey

00:19:06,649 --> 00:19:14,690
I've picked out country so it picks from

00:19:10,279 --> 00:19:17,029
this fakir list of countries but there

00:19:14,690 --> 00:19:19,399
are masses of different things to pick

00:19:17,029 --> 00:19:21,470
from with faker they're more currency

00:19:19,399 --> 00:19:25,130
thing that's more financial things like

00:19:21,470 --> 00:19:28,190
currency in stock codes if coms data is

00:19:25,130 --> 00:19:30,529
your thing then there is internet fields

00:19:28,190 --> 00:19:32,870
like IP addresses and user agent strings

00:19:30,529 --> 00:19:37,820
if you're interested in modeling some of

00:19:32,870 --> 00:19:41,450
the specifics there some very specialist

00:19:37,820 --> 00:19:44,480
things it's big big list to pick from so

00:19:41,450 --> 00:19:46,590
that allows us to expand the fake data

00:19:44,480 --> 00:19:50,170
further

00:19:46,590 --> 00:19:54,910
so we've we've got as far as this now

00:19:50,170 --> 00:19:57,700
with we've shown that we've got password

00:19:54,910 --> 00:20:01,770
constrained we've got some fake data for

00:19:57,700 --> 00:20:04,900
the countries and for names and surnames

00:20:01,770 --> 00:20:09,880
and we've got this the relationships

00:20:04,900 --> 00:20:14,130
between different fields for postcode

00:20:09,880 --> 00:20:18,580
I've put in a regular expression that

00:20:14,130 --> 00:20:22,750
constrains it to be uppercase for seven

00:20:18,580 --> 00:20:24,700
or eight characters but if it's

00:20:22,750 --> 00:20:31,720
important then we can improve upon that

00:20:24,700 --> 00:20:34,750
by having an external lookup now this is

00:20:31,720 --> 00:20:36,490
something that the playground itself

00:20:34,750 --> 00:20:39,670
doesn't support is where you start need

00:20:36,490 --> 00:20:43,060
to start using the command line but it's

00:20:39,670 --> 00:20:45,790
it's very simple basically looks whether

00:20:43,060 --> 00:20:49,030
it were the number of options or all

00:20:45,790 --> 00:20:52,470
described in the documentation and in

00:20:49,030 --> 00:20:56,410
this example I've got a snippets of

00:20:52,470 --> 00:21:00,010
profile here where the constraint is

00:20:56,410 --> 00:21:04,150
that the postcode is within a set in a

00:21:00,010 --> 00:21:05,770
CSV file so we've got a CSV file here of

00:21:04,150 --> 00:21:10,720
real postcodes

00:21:05,770 --> 00:21:13,960
and it's it's picking from those we can

00:21:10,720 --> 00:21:16,240
see here I've done a I'm showing this in

00:21:13,960 --> 00:21:20,290
the Google sheet and we can see that the

00:21:16,240 --> 00:21:23,080
post codes are now realistic and values

00:21:20,290 --> 00:21:25,960
so this this kind of demonstrates that

00:21:23,080 --> 00:21:28,480
if you've got any particular reference

00:21:25,960 --> 00:21:32,380
data stunning data which you're

00:21:28,480 --> 00:21:34,450
interested in and it's available to use

00:21:32,380 --> 00:21:39,370
them that can help to make the test data

00:21:34,450 --> 00:21:44,020
even more rich the command line gives

00:21:39,370 --> 00:21:46,960
other options as well things like rather

00:21:44,020 --> 00:21:51,530
than having the data completely random

00:21:46,960 --> 00:21:54,590
you can have the data done in sequence

00:21:51,530 --> 00:21:56,810
so it will start at the lowest possible

00:21:54,590 --> 00:21:58,160
value within the constraints and then

00:21:56,810 --> 00:22:02,150
step up one by one

00:21:58,160 --> 00:22:07,790
until it exercises the entire set such

00:22:02,150 --> 00:22:09,140
that there's no alternative now let's

00:22:07,790 --> 00:22:12,710
see that's we're in this particular

00:22:09,140 --> 00:22:16,970
example we've got some like UK postcodes

00:22:12,710 --> 00:22:20,840
but then the country's not UK and this

00:22:16,970 --> 00:22:22,940
is because the fields are just as its

00:22:20,840 --> 00:22:25,510
processes each field it's just thinking

00:22:22,940 --> 00:22:28,310
about that field by itself and it's

00:22:25,510 --> 00:22:32,170
wedding according to the walls it's got

00:22:28,310 --> 00:22:34,820
for that field at that time it's not

00:22:32,170 --> 00:22:37,130
it's not going further than that if that

00:22:34,820 --> 00:22:41,300
was interested interesting to you to get

00:22:37,130 --> 00:22:42,680
more more realistic then you can have

00:22:41,300 --> 00:22:47,090
the relationship so we're going to put

00:22:42,680 --> 00:22:51,520
those ifs in and use other lookups but

00:22:47,090 --> 00:22:59,270
that's trying to keep it simple there

00:22:51,520 --> 00:23:01,070
okay so something we've been thinking

00:22:59,270 --> 00:23:04,640
about for a while it's been on web map

00:23:01,070 --> 00:23:10,660
for a while is support for relational

00:23:04,640 --> 00:23:15,830
data at the moment the data is is flat

00:23:10,660 --> 00:23:17,690
we define our fields click on run or run

00:23:15,830 --> 00:23:20,060
up the command line and it will go away

00:23:17,690 --> 00:23:24,410
and generate as many rows as you like

00:23:20,060 --> 00:23:26,540
but it is a single table and what would

00:23:24,410 --> 00:23:29,590
like to be able to do but it's quite

00:23:26,540 --> 00:23:33,380
hard is add support for relational data

00:23:29,590 --> 00:23:38,690
and have multiple tables with links

00:23:33,380 --> 00:23:44,900
between them so what we've been able to

00:23:38,690 --> 00:23:49,630
do as a as a step towards that is it's

00:23:44,900 --> 00:23:53,540
add support for children so I've got a

00:23:49,630 --> 00:23:56,880
snippet here of of profile and here

00:23:53,540 --> 00:24:00,510
we've we're now adding a relationships

00:23:56,880 --> 00:24:07,530
part of this which says how this row

00:24:00,510 --> 00:24:10,590
then relates to some some chopped child

00:24:07,530 --> 00:24:14,010
rose basically and those child waves can

00:24:10,590 --> 00:24:15,570
have their own separate profiles so in

00:24:14,010 --> 00:24:17,430
this instance we've got just a very

00:24:15,570 --> 00:24:20,220
simple thing of we've got a child with

00:24:17,430 --> 00:24:24,180
the name and constraining that to be

00:24:20,220 --> 00:24:26,760
relatively short and we run that again

00:24:24,180 --> 00:24:29,460
but by the command line and we can see

00:24:26,760 --> 00:24:32,900
there that we've got some Jamie with no

00:24:29,460 --> 00:24:36,810
dependents and Jacob with with three and

00:24:32,900 --> 00:24:39,780
that's that's a step towards relational

00:24:36,810 --> 00:24:41,880
it's not not really covering it yet and

00:24:39,780 --> 00:24:45,990
but that just gives them another option

00:24:41,880 --> 00:24:49,830
for you to model more complex later

00:24:45,990 --> 00:24:52,070
so Tim while you're talking about the

00:24:49,830 --> 00:24:54,690
future so I just want to bring up

00:24:52,070 --> 00:24:56,730
obviously you know relational data is

00:24:54,690 --> 00:25:00,360
something that's come up quite a lot in

00:24:56,730 --> 00:25:02,970
discussions we've had also nested Jason

00:25:00,360 --> 00:25:05,670
and some I guess similar types of

00:25:02,970 --> 00:25:07,110
requirements but actually and the

00:25:05,670 --> 00:25:09,570
interesting thing about this journey

00:25:07,110 --> 00:25:11,790
we've been on with building the data

00:25:09,570 --> 00:25:13,560
generators we've ended up having lots of

00:25:11,790 --> 00:25:15,600
conversations about synthetic data

00:25:13,560 --> 00:25:17,220
generation and in fact we've ended up

00:25:15,600 --> 00:25:20,460
doing quite a few projects of our

00:25:17,220 --> 00:25:23,700
clients about it and it's kind of caused

00:25:20,460 --> 00:25:26,070
us to see one of the other great data

00:25:23,700 --> 00:25:27,960
generator projects which I would like to

00:25:26,070 --> 00:25:30,270
give a shout out to which is the data

00:25:27,960 --> 00:25:32,130
hub which I know Paul groves has just

00:25:30,270 --> 00:25:37,320
submitted to thin us and that's another

00:25:32,130 --> 00:25:39,600
excellent project I think the whole area

00:25:37,320 --> 00:25:42,050
is actually quite complex when you look

00:25:39,600 --> 00:25:44,490
at it and you know we're really

00:25:42,050 --> 00:25:47,190
interested in in more you know kind of

00:25:44,490 --> 00:25:49,620
engagement or I guess feedback and where

00:25:47,190 --> 00:25:52,410
people would like us or curious for us

00:25:49,620 --> 00:25:55,550
to take this and so we're gonna have

00:25:52,410 --> 00:25:58,740
regular conversations with four groves

00:25:55,550 --> 00:26:01,560
who's the data hub projects and really

00:25:58,740 --> 00:26:03,330
see if we can kind of bring our energies

00:26:01,560 --> 00:26:06,750
together in terms of being interested in

00:26:03,330 --> 00:26:08,620
synthetic data and see where you know

00:26:06,750 --> 00:26:11,350
this this whole thing within

00:26:08,620 --> 00:26:13,000
then I'll go but there's a number

00:26:11,350 --> 00:26:15,460
of errors it can and directions at

00:26:13,000 --> 00:26:17,919
kangaroo I know one of the projects we

00:26:15,460 --> 00:26:19,960
did they were interested in synthetic

00:26:17,919 --> 00:26:22,419
data generation where the roads have

00:26:19,960 --> 00:26:24,370
relationships though the data he leaked

00:26:22,419 --> 00:26:26,830
has quite complex relationships between

00:26:24,370 --> 00:26:29,820
the columns but actually you can't do

00:26:26,830 --> 00:26:33,309
relationships between rows of data and

00:26:29,820 --> 00:26:34,870
for example a bank account where you

00:26:33,309 --> 00:26:37,330
know you're typically going to have a

00:26:34,870 --> 00:26:38,559
certain amount of money going up every

00:26:37,330 --> 00:26:41,740
month and hopefully you don't spend more

00:26:38,559 --> 00:26:44,440
than you get in and but you know a human

00:26:41,740 --> 00:26:46,480
who does transactions on our account own

00:26:44,440 --> 00:26:48,100
accountant be very aware of that so you

00:26:46,480 --> 00:26:49,750
know having rules that where the rows

00:26:48,100 --> 00:26:52,480
could have rules between them and

00:26:49,750 --> 00:26:54,909
certainly you know the validation rules

00:26:52,480 --> 00:26:57,399
on the data itself could be valid for

00:26:54,909 --> 00:26:59,620
later can be as rich as the application

00:26:57,399 --> 00:27:01,570
so I guess that means that generally

00:26:59,620 --> 00:27:03,520
speaking synthetic data generator

00:27:01,570 --> 00:27:06,340
generation can actually be more quite a

00:27:03,520 --> 00:27:08,440
complex place so because of there's all

00:27:06,340 --> 00:27:11,169
these different directions we could go

00:27:08,440 --> 00:27:13,090
in I think it'd be really good with

00:27:11,169 --> 00:27:14,710
anything else but you know the members

00:27:13,090 --> 00:27:17,500
and everyone to give feedback in know

00:27:14,710 --> 00:27:20,610
where do they see the next set of

00:27:17,500 --> 00:27:25,029
features or the best direction for these

00:27:20,610 --> 00:27:27,220
synthetic generation tools to go in so

00:27:25,029 --> 00:27:29,260
yeah definitely very keen on on lots of

00:27:27,220 --> 00:27:31,390
feedback so if you do have any feedback

00:27:29,260 --> 00:27:34,330
or any interesting comments yourself or

00:27:31,390 --> 00:27:36,880
requirements we'd love to hear from you

00:27:34,330 --> 00:27:39,399
so doing it do yeah I do encourage

00:27:36,880 --> 00:27:43,630
engagement other projects so sorry baby

00:27:39,399 --> 00:27:45,640
tootin oh sure yeah no no that's it

00:27:43,630 --> 00:27:49,179
basically so yeah just to say that

00:27:45,640 --> 00:27:51,520
please can people give it a try just

00:27:49,179 --> 00:27:54,730
yeah well my playground is very easy to

00:27:51,520 --> 00:28:00,190
use and just give it a spin and and see

00:27:54,730 --> 00:28:02,440
if it would work for your use case right

00:28:00,190 --> 00:28:04,840
so that that's amazing

00:28:02,440 --> 00:28:08,950
thank you very much Andrew for the shout

00:28:04,840 --> 00:28:11,649
outs to data hub that's that's brilliant

00:28:08,950 --> 00:28:13,899
and you actually caught me I'm putting

00:28:11,649 --> 00:28:17,080
the links to the various different

00:28:13,899 --> 00:28:20,049
issues on github for both data helix and

00:28:17,080 --> 00:28:22,270
also for data hub and so if people do

00:28:20,049 --> 00:28:24,580
want to submit any feet

00:28:22,270 --> 00:28:27,520
against either of the projects you can

00:28:24,580 --> 00:28:30,130
find both data helix and data hub on the

00:28:27,520 --> 00:28:32,250
fitness organization on github where

00:28:30,130 --> 00:28:36,070
you'll be able to the project teams

00:28:32,250 --> 00:28:37,840
through the github issues that includes

00:28:36,070 --> 00:28:40,809
you know anything that you would like to

00:28:37,840 --> 00:28:42,820
request in terms of features or any

00:28:40,809 --> 00:28:45,220
other types of feedback or even if you

00:28:42,820 --> 00:28:48,490
want to you know clean a repo and you

00:28:45,220 --> 00:28:53,170
know get it running locally okay so

00:28:48,490 --> 00:28:56,980
before I actually go into the Q&A we are

00:28:53,170 --> 00:29:00,460
able now to reveal he's actually one

00:28:56,980 --> 00:29:03,490
Finnish t-shirts and so I'd like to say

00:29:00,460 --> 00:29:05,410
congratulations - and I believe these

00:29:03,490 --> 00:29:08,170
are this is how you pronounce name so

00:29:05,410 --> 00:29:12,820
apologies if I get these wrong but kya

00:29:08,170 --> 00:29:15,820
fine of Acquia and vladimir Sakharov of

00:29:12,820 --> 00:29:18,220
JPMorgan Chase thank you very much for

00:29:15,820 --> 00:29:20,530
registering for the webinar this

00:29:18,220 --> 00:29:23,350
afternoon and that means that there will

00:29:20,530 --> 00:29:25,570
be a cut there will be one finis tesha

00:29:23,350 --> 00:29:29,650
each coming - to both of you through the

00:29:25,570 --> 00:29:31,690
post and so Andrew and Tim I do you have

00:29:29,650 --> 00:29:35,200
a couple of questions that are there

00:29:31,690 --> 00:29:37,540
have been asked the first is how do I

00:29:35,200 --> 00:29:40,510
get started with contributing to data

00:29:37,540 --> 00:29:44,940
helix and the second is is there a limit

00:29:40,510 --> 00:29:44,940
on how much data can be generated so

00:29:46,920 --> 00:29:52,600
there's no limit on how much data that

00:29:49,540 --> 00:29:54,610
can be generated I guess it has two

00:29:52,600 --> 00:29:57,940
modes you can either stream the data

00:29:54,610 --> 00:30:01,240
route in in a kind of UNIX io fashion or

00:29:57,940 --> 00:30:04,540
you can you can output the data to a

00:30:01,240 --> 00:30:06,700
flat file and I guess either way yeah

00:30:04,540 --> 00:30:08,860
there's no natural limit to how much

00:30:06,700 --> 00:30:11,080
data can be generated saying that

00:30:08,860 --> 00:30:12,400
obviously if you're not trying to

00:30:11,080 --> 00:30:14,890
generate in advance you're trying to

00:30:12,400 --> 00:30:17,500
generate on the fly there's a natural

00:30:14,890 --> 00:30:19,600
limit to how complex your rules are so

00:30:17,500 --> 00:30:22,290
the more complex the rules are the

00:30:19,600 --> 00:30:24,490
slower the data generation will be a

00:30:22,290 --> 00:30:27,700
potential future we've been discussing

00:30:24,490 --> 00:30:29,740
is actually to re-engineer it slightly

00:30:27,700 --> 00:30:33,290
and build on the Apache spark framework

00:30:29,740 --> 00:30:36,080
such that it can hugely scale out if the

00:30:33,290 --> 00:30:37,580
quite complicated so that's something

00:30:36,080 --> 00:30:38,930
we've been kind of throwing around as a

00:30:37,580 --> 00:30:42,410
potential idea

00:30:38,930 --> 00:30:44,630
we haven't if I'm honest a use case

00:30:42,410 --> 00:30:47,480
where the data volumes have been an

00:30:44,630 --> 00:30:49,580
issue yet but saying that you know never

00:30:47,480 --> 00:30:52,250
and if someone comes up with an idea

00:30:49,580 --> 00:30:53,960
where they've got addictive volumes

00:30:52,250 --> 00:30:55,640
which are too high in and the talk on

00:30:53,960 --> 00:30:59,090
cope it's definitely something that you

00:30:55,640 --> 00:31:01,040
know we will consider looking at so that

00:30:59,090 --> 00:31:06,830
was the data volumes what was the other

00:31:01,040 --> 00:31:12,890
question James started absolutely just

00:31:06,830 --> 00:31:15,320
follow the github page and yeah ready

00:31:12,890 --> 00:31:17,930
some issues and start conversations and

00:31:15,320 --> 00:31:22,700
start contributing back absolutely get

00:31:17,930 --> 00:31:24,620
engaged so it's that's brilliant thank

00:31:22,700 --> 00:31:27,890
you and I did actually manage to drop

00:31:24,620 --> 00:31:30,470
the link to the data helix issues in the

00:31:27,890 --> 00:31:33,230
chat for anybody he wants to browse to

00:31:30,470 --> 00:31:35,000
the project and engage with them both

00:31:33,230 --> 00:31:38,120
Andrew and Tim who are part of the

00:31:35,000 --> 00:31:40,010
project and with that I'd like to say

00:31:38,120 --> 00:31:42,380
thank you very much today that Andrew

00:31:40,010 --> 00:31:45,800
and Tim for joining us this afternoon on

00:31:42,380 --> 00:31:47,780
the famous virtual meetup and I'd like

00:31:45,800 --> 00:31:51,140
to thank everybody for registering and

00:31:47,780 --> 00:31:53,960
joining remember to subscribe to our

00:31:51,140 --> 00:31:57,920
updates on LinkedIn and also the finis

00:31:53,960 --> 00:32:00,020
Twitter where you'll be able to find out

00:31:57,920 --> 00:32:02,480
all feature enough up and coming

00:32:00,020 --> 00:32:04,520
webinars that will be coming from finis

00:32:02,480 --> 00:32:05,960
so with that thank you very much Andrew

00:32:04,520 --> 00:32:08,140
in Tim and thank you everybody for being

00:32:05,960 --> 00:32:08,140
here

00:32:08,910 --> 00:32:19,099

YouTube URL: https://www.youtube.com/watch?v=hxBG_tlRnyI


