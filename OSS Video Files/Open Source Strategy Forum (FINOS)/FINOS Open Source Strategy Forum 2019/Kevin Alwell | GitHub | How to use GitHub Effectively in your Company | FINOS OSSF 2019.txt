Title: Kevin Alwell | GitHub | How to use GitHub Effectively in your Company | FINOS OSSF 2019
Publication date: 2021-01-11
Playlist: FINOS Open Source Strategy Forum 2019
Description: 
	Kevin Alwell | GitHub | How to use GitHub Effectively in your Company | FINOS OSSF 2019

Kevin Alwell, Solutions Engineer, GitHub

Every developer knows GitHub, but how do you bring those powerful tools from the open source community into your company and use them to help change your culture to be more collaborative, to build on and contribute to open source while protecting your organization from security risks, to become an open source enterprise. In this session learn from GitHub Solutions Engineer - Kevin Alwell on practical tips and tricks for using GitHub effectively inside your enterprise and how to deliver higher quality, tested and secure features faster.

Kevin Alwell's BIO

Kevin is an experienced solutions engineer that has worked with many GitHub Enterprise customers to deliver better, more secure features fast. He brings a wealth of engineering and strategic knowledge from delivering innovative technical solutions at scale for some of the largest technology companies in the world. Collaboration at scale, innersource and the implications of open source for an enterprise organization are all topics Kevin has spoken about at developer conferences around the country.

-=-=-=-=-

This video is from the FINOS Open Source Strategy Forum (OSSF) NYC 2019. 

►►For free access to all 2019 videos from the conference - visit our website here: https://www.finos.org/ossf-2019-recap
 
►► More information HERE: https://events.linuxfoundation.org/open-source-strategy-forum/

Learn more about FINOS and how we deliver the power of open source to financial services:
►► FINOS: https://www.finos.org/
Captions: 
	00:00:03,690 --> 00:00:11,890
[Music]

00:00:12,880 --> 00:00:15,440
all right

00:00:13,840 --> 00:00:17,440
i'm glad to know that i'm kind of

00:00:15,440 --> 00:00:18,960
adjacent to a tv dinner which is a

00:00:17,440 --> 00:00:21,520
conference lunch

00:00:18,960 --> 00:00:23,279
so i'm glad y'all able to grab some food

00:00:21,520 --> 00:00:25,920
and sit in on this thanks for

00:00:23,279 --> 00:00:27,519
thanks so much for your time um if

00:00:25,920 --> 00:00:28,640
you're here to learn about github

00:00:27,519 --> 00:00:30,800
and some of the ways that we are

00:00:28,640 --> 00:00:33,040
accelerating innovation

00:00:30,800 --> 00:00:34,880
among our customers with github then you

00:00:33,040 --> 00:00:36,640
came to the right place

00:00:34,880 --> 00:00:38,559
so if you sat in kath's session a few

00:00:36,640 --> 00:00:39,120
moments ago i think kath was really

00:00:38,559 --> 00:00:41,760
great

00:00:39,120 --> 00:00:42,640
at delivering some of our higher level

00:00:41,760 --> 00:00:44,239
messaging

00:00:42,640 --> 00:00:45,920
on how github is involved in the open

00:00:44,239 --> 00:00:47,600
source community

00:00:45,920 --> 00:00:49,680
what this is going to be is a little bit

00:00:47,600 --> 00:00:52,239
more practical i'll actually show you

00:00:49,680 --> 00:00:55,120
some hands-on how you can implement

00:00:52,239 --> 00:00:56,559
ci cd with github github actions right

00:00:55,120 --> 00:00:58,640
if you're familiar with that feature

00:00:56,559 --> 00:01:00,160
and then also we'll talk about some of

00:00:58,640 --> 00:01:01,280
the security features and what github's

00:01:00,160 --> 00:01:03,120
doing in that space

00:01:01,280 --> 00:01:05,680
how that relates back to the open source

00:01:03,120 --> 00:01:07,600
community so i'm kevin alwell

00:01:05,680 --> 00:01:09,520
a solutions engineer at github and i

00:01:07,600 --> 00:01:11,680
have the privilege of talking to

00:01:09,520 --> 00:01:13,520
enterprise customers every day

00:01:11,680 --> 00:01:16,159
about accelerating their ability to

00:01:13,520 --> 00:01:17,119
deliver high quality and tested features

00:01:16,159 --> 00:01:18,479
faster

00:01:17,119 --> 00:01:20,400
so what i'm going to share with you is

00:01:18,479 --> 00:01:21,680
basically an aggregation from those

00:01:20,400 --> 00:01:23,280
conversations

00:01:21,680 --> 00:01:24,880
you know what we've learned and

00:01:23,280 --> 00:01:26,320
hopefully there's quite a bit of overlap

00:01:24,880 --> 00:01:27,200
in kind of your industries and what you

00:01:26,320 --> 00:01:28,560
all are doing

00:01:27,200 --> 00:01:30,159
i imagine there will be because some of

00:01:28,560 --> 00:01:31,360
you are using github either in the open

00:01:30,159 --> 00:01:32,880
source capacity

00:01:31,360 --> 00:01:35,119
or you know in your in in your

00:01:32,880 --> 00:01:36,400
profession so before i do that this will

00:01:35,119 --> 00:01:37,840
be the first thing we talk about is the

00:01:36,400 --> 00:01:41,040
most strategic investment

00:01:37,840 --> 00:01:42,880
that github has ever made is this uh

00:01:41,040 --> 00:01:44,880
this creature here so raise your hand if

00:01:42,880 --> 00:01:48,000
you know what species this

00:01:44,880 --> 00:01:48,720
is okay all right so i see some hands up

00:01:48,000 --> 00:01:51,520
so this is

00:01:48,720 --> 00:01:52,960
the octocat okay which is half cat and

00:01:51,520 --> 00:01:54,560
half octopus and it's on

00:01:52,960 --> 00:01:56,240
all of our stickers we give out at these

00:01:54,560 --> 00:01:59,200
events you know

00:01:56,240 --> 00:02:00,399
github has made a you know an enormous

00:01:59,200 --> 00:02:02,560
investment in this

00:02:00,399 --> 00:02:04,240
brand this logo and if you want to kind

00:02:02,560 --> 00:02:06,479
of keep me honest on that

00:02:04,240 --> 00:02:08,000
you can see this giant bronze statue of

00:02:06,479 --> 00:02:09,920
the octocat mona lisa

00:02:08,000 --> 00:02:12,160
in our office in san francisco with

00:02:09,920 --> 00:02:16,160
these three great people

00:02:12,160 --> 00:02:19,200
right so there's so

00:02:16,160 --> 00:02:21,680
there is a reason behind why github

00:02:19,200 --> 00:02:22,720
wants to have the octocat mona lisa on

00:02:21,680 --> 00:02:24,800
the backs of

00:02:22,720 --> 00:02:26,319
developer laptops and and the reason

00:02:24,800 --> 00:02:27,440
we're handing out stickers at all these

00:02:26,319 --> 00:02:29,200
events right

00:02:27,440 --> 00:02:31,040
and it's because the developer is so

00:02:29,200 --> 00:02:32,480
important to us it's really

00:02:31,040 --> 00:02:34,400
it's really who we are as an

00:02:32,480 --> 00:02:34,640
organization is a group of people who

00:02:34,400 --> 00:02:36,319
are

00:02:34,640 --> 00:02:38,000
working to serve not just the open

00:02:36,319 --> 00:02:39,280
source community but the developers that

00:02:38,000 --> 00:02:40,879
make up that community

00:02:39,280 --> 00:02:42,879
and of course we'll talk about what that

00:02:40,879 --> 00:02:44,319
means in the enterprise context

00:02:42,879 --> 00:02:45,680
so what we understand from the

00:02:44,319 --> 00:02:46,560
conversations we're having with folks

00:02:45,680 --> 00:02:48,800
like you is that

00:02:46,560 --> 00:02:50,080
developers are at the core of innovation

00:02:48,800 --> 00:02:51,760
inside of your companies

00:02:50,080 --> 00:02:53,680
they're going out inside the open source

00:02:51,760 --> 00:02:54,319
community they're being exposed to the

00:02:53,680 --> 00:02:55,760
software

00:02:54,319 --> 00:02:57,680
the you know the kind of cutting edge

00:02:55,760 --> 00:02:59,040
technology that's going to help

00:02:57,680 --> 00:03:00,159
accelerate your software delivery

00:02:59,040 --> 00:03:02,560
they're bringing that in

00:03:00,159 --> 00:03:03,440
and using it to deliver higher quality

00:03:02,560 --> 00:03:05,280
features

00:03:03,440 --> 00:03:07,440
a really interesting statistic that i

00:03:05,280 --> 00:03:09,440
came across the other day was that

00:03:07,440 --> 00:03:10,879
if you have an application with over a

00:03:09,440 --> 00:03:12,560
thousand lines of code in it

00:03:10,879 --> 00:03:14,080
there's a 99 chance that you're

00:03:12,560 --> 00:03:16,720
consuming some degree

00:03:14,080 --> 00:03:18,239
of open source and so that becomes

00:03:16,720 --> 00:03:20,080
really interesting when you think about

00:03:18,239 --> 00:03:20,640
who's actually part of your development

00:03:20,080 --> 00:03:22,800
teams

00:03:20,640 --> 00:03:24,640
helping you ship software into

00:03:22,800 --> 00:03:26,239
production and it's not just the folks

00:03:24,640 --> 00:03:28,080
who are kind of button chairs in your

00:03:26,239 --> 00:03:30,080
offices right or if you're a remote

00:03:28,080 --> 00:03:32,000
oriented company

00:03:30,080 --> 00:03:34,000
accessing that way it's also the open

00:03:32,000 --> 00:03:35,440
source community

00:03:34,000 --> 00:03:37,120
and so when you think about it you have

00:03:35,440 --> 00:03:38,640
these folks who are contributing and

00:03:37,120 --> 00:03:40,159
we'll talk about how much

00:03:38,640 --> 00:03:41,840
that foundation really is in your

00:03:40,159 --> 00:03:43,440
applications but they're contributing an

00:03:41,840 --> 00:03:44,239
enormous amount to your production

00:03:43,440 --> 00:03:46,239
applications

00:03:44,239 --> 00:03:48,239
you have no control over a first of all

00:03:46,239 --> 00:03:49,599
who they are and then the workflow from

00:03:48,239 --> 00:03:50,879
a security perspective how are you

00:03:49,599 --> 00:03:52,159
securing those components

00:03:50,879 --> 00:03:54,080
and ensuring that the open source

00:03:52,159 --> 00:03:57,680
maintainers are staying abreast of

00:03:54,080 --> 00:03:59,040
uh you know the technology trends

00:03:57,680 --> 00:04:00,799
something that really stood out to me

00:03:59,040 --> 00:04:02,799
when we start talking about enabling the

00:04:00,799 --> 00:04:06,080
developer and allowing them to

00:04:02,799 --> 00:04:09,680
be that source of innovation is this

00:04:06,080 --> 00:04:11,360
this statistic here so uh

00:04:09,680 --> 00:04:13,200
organizations who have implemented

00:04:11,360 --> 00:04:16,160
devops have a

00:04:13,200 --> 00:04:17,680
to 400 times times shorter time from

00:04:16,160 --> 00:04:19,120
code to deployment

00:04:17,680 --> 00:04:21,199
so what that means is they have a much

00:04:19,120 --> 00:04:22,639
higher degree of agility right

00:04:21,199 --> 00:04:24,160
something we do really well at github

00:04:22,639 --> 00:04:25,840
and then i'm really grateful for as i'm

00:04:24,160 --> 00:04:27,360
talking to customers is

00:04:25,840 --> 00:04:28,880
if you're communicating back to me that

00:04:27,360 --> 00:04:30,320
there's a feature that you want to be

00:04:28,880 --> 00:04:32,160
native in the platform

00:04:30,320 --> 00:04:33,919
we'll bring in the product team they'll

00:04:32,160 --> 00:04:35,600
listen to you know

00:04:33,919 --> 00:04:37,199
what your technical requirements are in

00:04:35,600 --> 00:04:38,320
your business justification for having

00:04:37,199 --> 00:04:41,919
that feature

00:04:38,320 --> 00:04:43,680
and we can deliver production features

00:04:41,919 --> 00:04:44,240
at a really high velocity i mean some of

00:04:43,680 --> 00:04:46,560
our

00:04:44,240 --> 00:04:48,320
our largest customers who probably are

00:04:46,560 --> 00:04:50,479
financial institutions like maybe some

00:04:48,320 --> 00:04:51,840
that you work with or you're a part of

00:04:50,479 --> 00:04:54,160
have requested features we've been able

00:04:51,840 --> 00:04:55,520
to deliver very quickly as a result of

00:04:54,160 --> 00:04:58,400
enabling our developers

00:04:55,520 --> 00:04:58,400
with devops

00:04:58,800 --> 00:05:02,320
so i'm going to talk to some of these

00:05:00,479 --> 00:05:03,919
powerful trends and some more high-level

00:05:02,320 --> 00:05:05,199
things and then again i'll dive a little

00:05:03,919 --> 00:05:07,680
bit deeper into some

00:05:05,199 --> 00:05:10,320
practical ways that you can use github

00:05:07,680 --> 00:05:12,560
with ci cd and security so let's talk

00:05:10,320 --> 00:05:14,800
about these trends

00:05:12,560 --> 00:05:17,120
so developers drive innovation inside of

00:05:14,800 --> 00:05:19,280
your organization

00:05:17,120 --> 00:05:21,039
what we just what we just mentioned was

00:05:19,280 --> 00:05:21,600
the open source community which is very

00:05:21,039 --> 00:05:23,600
much

00:05:21,600 --> 00:05:25,039
a part of your your software supply

00:05:23,600 --> 00:05:27,840
chain

00:05:25,039 --> 00:05:28,320
incorporates those developers right so

00:05:27,840 --> 00:05:30,479
you have

00:05:28,320 --> 00:05:32,000
uh this kind of ongoing talent war where

00:05:30,479 --> 00:05:33,919
you're not able to pull in

00:05:32,000 --> 00:05:35,919
enough developers to meet your needs so

00:05:33,919 --> 00:05:37,440
you can ship features like you want to

00:05:35,919 --> 00:05:38,960
but the open source community which has

00:05:37,440 --> 00:05:42,400
built this foundation

00:05:38,960 --> 00:05:44,240
kind of uh uh it it

00:05:42,400 --> 00:05:45,759
makes your team a lot larger than what

00:05:44,240 --> 00:05:47,199
it actually is right because you have

00:05:45,759 --> 00:05:49,280
these open source folks

00:05:47,199 --> 00:05:51,120
who are contributing maybe 80 of your

00:05:49,280 --> 00:05:53,199
application that foundation of your

00:05:51,120 --> 00:05:54,720
of your software and your developers are

00:05:53,199 --> 00:05:57,360
just coming in and doing maybe

00:05:54,720 --> 00:05:58,639
10 to 20 percent of of the the

00:05:57,360 --> 00:06:01,120
development which is

00:05:58,639 --> 00:06:02,720
in a large way just a customization

00:06:01,120 --> 00:06:04,080
right a layer on top of

00:06:02,720 --> 00:06:05,600
what's already been developed in the

00:06:04,080 --> 00:06:06,400
open source world and that's why we see

00:06:05,600 --> 00:06:08,960
it as being

00:06:06,400 --> 00:06:10,479
a sodium so important and b really

00:06:08,960 --> 00:06:13,440
important to understand

00:06:10,479 --> 00:06:14,639
as an enterprise who's using open source

00:06:13,440 --> 00:06:16,000
so we're going to talk about some of the

00:06:14,639 --> 00:06:17,520
security implications there and what

00:06:16,000 --> 00:06:18,160
that security workflow looks like and

00:06:17,520 --> 00:06:20,160
it's going to get

00:06:18,160 --> 00:06:21,199
i think you know really compelling

00:06:20,160 --> 00:06:23,120
quickly

00:06:21,199 --> 00:06:25,120
so a trend that's not going away that

00:06:23,120 --> 00:06:27,759
our customers are talking to us about

00:06:25,120 --> 00:06:28,240
is uh that cloud enables faster cycles

00:06:27,759 --> 00:06:30,000
right

00:06:28,240 --> 00:06:31,840
so we start talking about enterprise

00:06:30,000 --> 00:06:34,720
agility that's not going away

00:06:31,840 --> 00:06:36,319
anytime soon in terms of moving from

00:06:34,720 --> 00:06:38,000
on-prem to the cloud

00:06:36,319 --> 00:06:39,680
and in terms of folks actually adopting

00:06:38,000 --> 00:06:41,840
github in the enterprise space

00:06:39,680 --> 00:06:43,120
we're seeing them go a lot more towards

00:06:41,840 --> 00:06:44,880
the sas approach

00:06:43,120 --> 00:06:46,479
right using github.com where they kind

00:06:44,880 --> 00:06:48,240
of have this siloed environment

00:06:46,479 --> 00:06:49,840
for their enterprise to operate in and

00:06:48,240 --> 00:06:51,199
that makes them so much closer to those

00:06:49,840 --> 00:06:52,800
open source maintainers

00:06:51,199 --> 00:06:54,560
who are delivering eighty percent of the

00:06:52,800 --> 00:06:57,520
software in the applications

00:06:54,560 --> 00:06:57,520
they have in production

00:06:58,479 --> 00:07:02,080
so traditionally the way we think about

00:07:00,720 --> 00:07:02,720
open source maintainers is really

00:07:02,080 --> 00:07:04,400
interesting

00:07:02,720 --> 00:07:06,960
the kind of persona that we've built

00:07:04,400 --> 00:07:08,720
around them is this isolated person

00:07:06,960 --> 00:07:10,880
who's sitting in their parents basement

00:07:08,720 --> 00:07:12,560
you know they're wearing their pajamas

00:07:10,880 --> 00:07:13,120
you know and you slide pizza under the

00:07:12,560 --> 00:07:15,599
door

00:07:13,120 --> 00:07:17,520
and out comes code right high quality

00:07:15,599 --> 00:07:19,520
and tested code

00:07:17,520 --> 00:07:20,880
and so at github we really do try to

00:07:19,520 --> 00:07:22,479
challenge that notion because we

00:07:20,880 --> 00:07:24,319
understand from the relationships we

00:07:22,479 --> 00:07:26,400
have in the open source community

00:07:24,319 --> 00:07:28,160
that it's very much it's an

00:07:26,400 --> 00:07:29,039
interconnected community it's people

00:07:28,160 --> 00:07:30,800
come together

00:07:29,039 --> 00:07:32,960
and collaborating in a large way to

00:07:30,800 --> 00:07:34,240
deliver these these components that you

00:07:32,960 --> 00:07:38,000
all rely on

00:07:34,240 --> 00:07:39,680
every day so we talked about this in the

00:07:38,000 --> 00:07:40,319
last session i'll just get a quick show

00:07:39,680 --> 00:07:42,479
of hands

00:07:40,319 --> 00:07:44,000
if just to get an idea of how familiar

00:07:42,479 --> 00:07:45,919
you are with the black hole image

00:07:44,000 --> 00:07:47,759
how many of you have seen this before

00:07:45,919 --> 00:07:50,720
now everybody has okay great

00:07:47,759 --> 00:07:51,360
so uh the event horizon team partnered

00:07:50,720 --> 00:07:53,759
with

00:07:51,360 --> 00:07:55,680
uh you know uh who was sitting inside

00:07:53,759 --> 00:07:58,240
the mit labs up in

00:07:55,680 --> 00:08:00,479
you know up in uh the northeast partner

00:07:58,240 --> 00:08:02,000
with teams all across the u.s to kind of

00:08:00,479 --> 00:08:04,319
aggregate these images

00:08:02,000 --> 00:08:05,680
of computationally what it would be like

00:08:04,319 --> 00:08:07,360
if you're in new york

00:08:05,680 --> 00:08:09,599
taking a picture of a single grain of

00:08:07,360 --> 00:08:11,440
sand in los angeles

00:08:09,599 --> 00:08:13,680
so if that gives you any idea of the

00:08:11,440 --> 00:08:15,120
scope of computational capacity that

00:08:13,680 --> 00:08:18,160
they were able to achieve

00:08:15,120 --> 00:08:19,919
by open sourcing or leveraging the open

00:08:18,160 --> 00:08:21,360
source community

00:08:19,919 --> 00:08:23,360
i think it's really interesting so

00:08:21,360 --> 00:08:25,039
here's a list of some of the open source

00:08:23,360 --> 00:08:26,560
packages that they've incorporated when

00:08:25,039 --> 00:08:28,080
we looked at those dependencies they

00:08:26,560 --> 00:08:30,160
were pulling in

00:08:28,080 --> 00:08:32,320
to their you know to the application

00:08:30,160 --> 00:08:35,919
they they built

00:08:32,320 --> 00:08:38,000
so there were 207 direct contributors

00:08:35,919 --> 00:08:39,519
on the event horizon team and through

00:08:38,000 --> 00:08:41,680
those transitive and open source

00:08:39,519 --> 00:08:45,920
dependencies there are over 21 000

00:08:41,680 --> 00:08:47,519
actual contributors and so

00:08:45,920 --> 00:08:49,040
this is really profound in the sense

00:08:47,519 --> 00:08:50,720
that never before in history

00:08:49,040 --> 00:08:52,720
has this open source community been

00:08:50,720 --> 00:08:53,360
centralized on a platform like it is

00:08:52,720 --> 00:08:55,680
today

00:08:53,360 --> 00:08:56,800
so this very well may not have ever been

00:08:55,680 --> 00:08:58,640
possible

00:08:56,800 --> 00:09:00,320
this first ever image of the black hole

00:08:58,640 --> 00:09:01,839
without the open source community so

00:09:00,320 --> 00:09:02,399
kudos to the folks in the audience who i

00:09:01,839 --> 00:09:06,839
know

00:09:02,399 --> 00:09:08,880
are you know open source maintainers as

00:09:06,839 --> 00:09:12,320
well so open source

00:09:08,880 --> 00:09:12,800
is changing how software is built 80 to

00:09:12,320 --> 00:09:14,399
00:09:12,800 --> 00:09:16,080
of the code in new applications comes

00:09:14,399 --> 00:09:19,200
from open source and so

00:09:16,080 --> 00:09:20,959
this comes back to this goes back to the

00:09:19,200 --> 00:09:22,000
degree of customization and how you're

00:09:20,959 --> 00:09:24,000
augmenting your developer

00:09:22,000 --> 00:09:27,760
teams when you bring in and leverage

00:09:24,000 --> 00:09:27,760
open source inside your organization so

00:09:27,839 --> 00:09:30,959
what we see here is also this new kind

00:09:29,920 --> 00:09:31,440
of phrase that i might not have

00:09:30,959 --> 00:09:34,320
mentioned

00:09:31,440 --> 00:09:35,920
called inner source so that is taking

00:09:34,320 --> 00:09:37,680
open source which is looking out to the

00:09:35,920 --> 00:09:39,760
broader community

00:09:37,680 --> 00:09:40,880
and turning it inwards to the enterprise

00:09:39,760 --> 00:09:43,120
right so

00:09:40,880 --> 00:09:44,640
practicing the reuse of components

00:09:43,120 --> 00:09:45,760
across your organization where it's

00:09:44,640 --> 00:09:47,120
possible so if you're leveraging

00:09:45,760 --> 00:09:48,480
microservices

00:09:47,120 --> 00:09:50,240
or you have maybe you know

00:09:48,480 --> 00:09:51,519
configurations or pipelines as code that

00:09:50,240 --> 00:09:53,920
you want to standardize

00:09:51,519 --> 00:09:55,680
as part of your devops journey inner

00:09:53,920 --> 00:09:58,160
source is exactly that so

00:09:55,680 --> 00:10:00,160
when you see from the pi here what's

00:09:58,160 --> 00:10:01,120
which slice and how much that represents

00:10:00,160 --> 00:10:02,640
for new code

00:10:01,120 --> 00:10:04,959
you realize that your developers are

00:10:02,640 --> 00:10:07,200
really delivering

00:10:04,959 --> 00:10:09,200
a much smaller slice of that pie than we

00:10:07,200 --> 00:10:12,640
realize in terms of lines of code in

00:10:09,200 --> 00:10:12,640
your production applications

00:10:13,839 --> 00:10:17,680
so again just to help understand the

00:10:16,240 --> 00:10:19,279
breadth of the community that that kind

00:10:17,680 --> 00:10:20,880
of lives on github

00:10:19,279 --> 00:10:23,120
there's 40 million developers on the

00:10:20,880 --> 00:10:24,160
platform by 2025 i think that number is

00:10:23,120 --> 00:10:26,079
gonna be something like

00:10:24,160 --> 00:10:27,839
a hundred million and i think there's a

00:10:26,079 --> 00:10:30,399
great degree of responsibility

00:10:27,839 --> 00:10:31,760
that github has to foster that community

00:10:30,399 --> 00:10:32,640
and i'll show you in a few moments here

00:10:31,760 --> 00:10:33,600
some of the features that we're

00:10:32,640 --> 00:10:35,200
releasing

00:10:33,600 --> 00:10:37,040
and the workflows that we're talking

00:10:35,200 --> 00:10:38,800
about internally that uh

00:10:37,040 --> 00:10:40,399
help foster that community and keep it

00:10:38,800 --> 00:10:42,160
safe not just from an enterprise

00:10:40,399 --> 00:10:43,360
perspective but also in the open source

00:10:42,160 --> 00:10:46,160
world

00:10:43,360 --> 00:10:47,120
so uh you see here some of these names

00:10:46,160 --> 00:10:48,720
these are all

00:10:47,120 --> 00:10:50,399
among the most innovative companies that

00:10:48,720 --> 00:10:51,360
have popped up probably within the past

00:10:50,399 --> 00:10:53,040
10 years

00:10:51,360 --> 00:10:54,959
and in a lot of ways we've partnered

00:10:53,040 --> 00:10:56,800
with them to help foster this open

00:10:54,959 --> 00:10:57,360
source community i know facebook is not

00:10:56,800 --> 00:10:59,040
on here

00:10:57,360 --> 00:11:01,920
but if you're familiar with okay the

00:10:59,040 --> 00:11:03,519
most uh the open source projects graphql

00:11:01,920 --> 00:11:05,279
they've made enormous contributions in

00:11:03,519 --> 00:11:08,160
moving the community forward

00:11:05,279 --> 00:11:09,839
by uh uh open sourcing projects that

00:11:08,160 --> 00:11:11,600
were traditionally only internal to

00:11:09,839 --> 00:11:13,440
their organization

00:11:11,600 --> 00:11:14,959
okay so graphql started as this kind of

00:11:13,440 --> 00:11:16,800
side project in facebook

00:11:14,959 --> 00:11:18,320
because when you're scrolling your feed

00:11:16,800 --> 00:11:19,839
right looking for as many

00:11:18,320 --> 00:11:22,800
you know non-interesting things as you

00:11:19,839 --> 00:11:24,079
can find you want it fast and so graphql

00:11:22,800 --> 00:11:25,360
enables you to do that with very

00:11:24,079 --> 00:11:26,560
specific queries

00:11:25,360 --> 00:11:28,240
so they were using it internally at

00:11:26,560 --> 00:11:29,360
facebook and said hey maybe there's some

00:11:28,240 --> 00:11:31,600
demand for this in the

00:11:29,360 --> 00:11:32,880
broader community and we can accelerate

00:11:31,600 --> 00:11:35,440
our ability to

00:11:32,880 --> 00:11:36,880
um you know deliver a better experience

00:11:35,440 --> 00:11:38,079
on facebook by leveraging the

00:11:36,880 --> 00:11:39,920
contributions

00:11:38,079 --> 00:11:42,480
from the open source community so that's

00:11:39,920 --> 00:11:44,160
kind of a success story in graphql

00:11:42,480 --> 00:11:45,920
now one more that i'll mention that you

00:11:44,160 --> 00:11:48,720
may or may not be familiar with

00:11:45,920 --> 00:11:50,399
um is just cloud computing in general so

00:11:48,720 --> 00:11:52,079
that actually started i think somewhere

00:11:50,399 --> 00:11:52,959
back in 2008 you're all probably more

00:11:52,079 --> 00:11:55,279
familiar with it

00:11:52,959 --> 00:11:56,079
than even i am but what i thought was

00:11:55,279 --> 00:11:58,079
interesting about

00:11:56,079 --> 00:12:01,200
it is that it started as an internal

00:11:58,079 --> 00:12:02,240
project on a at amazon for aws

00:12:01,200 --> 00:12:04,000
and they were serving this

00:12:02,240 --> 00:12:05,519
infrastructure team was serving this

00:12:04,000 --> 00:12:08,639
platform as a service

00:12:05,519 --> 00:12:10,160
back to internal consumers exclusively

00:12:08,639 --> 00:12:11,920
and eventually they branched that out to

00:12:10,160 --> 00:12:13,440
their partners and now of course

00:12:11,920 --> 00:12:15,360
they turn it into the you know

00:12:13,440 --> 00:12:16,959
multi-billion dollar industry that it is

00:12:15,360 --> 00:12:18,880
today so that started as

00:12:16,959 --> 00:12:20,639
an inner source project reusing that

00:12:18,880 --> 00:12:21,920
code internally and consuming that

00:12:20,639 --> 00:12:24,720
platform internally

00:12:21,920 --> 00:12:25,760
and then it turned into of course an

00:12:24,720 --> 00:12:28,320
entire market

00:12:25,760 --> 00:12:29,040
for public cloud so let's talk a little

00:12:28,320 --> 00:12:30,880
bit about

00:12:29,040 --> 00:12:33,279
how github is involved in the devops

00:12:30,880 --> 00:12:33,760
space helping to accelerate the delivery

00:12:33,279 --> 00:12:36,800
of

00:12:33,760 --> 00:12:39,839
secure features faster

00:12:36,800 --> 00:12:41,839
so github actions um if you're all uh

00:12:39,839 --> 00:12:42,880
if you're aware of this feature that's

00:12:41,839 --> 00:12:45,040
great if you're

00:12:42,880 --> 00:12:46,399
less aware of it now hopefully uh you

00:12:45,040 --> 00:12:47,279
know i can tell you a few interesting

00:12:46,399 --> 00:12:50,160
things like

00:12:47,279 --> 00:12:50,880
uh we we ga github actions back at

00:12:50,160 --> 00:12:53,360
universe

00:12:50,880 --> 00:12:54,720
last week so it is now live you have an

00:12:53,360 --> 00:12:55,760
actions tab available on your

00:12:54,720 --> 00:12:57,920
repositories

00:12:55,760 --> 00:12:59,519
or inside your organization your repos

00:12:57,920 --> 00:13:02,000
you can use actions for

00:12:59,519 --> 00:13:03,360
either workflow automation so stringing

00:13:02,000 --> 00:13:05,120
together your developer tools and

00:13:03,360 --> 00:13:07,440
creating that automation flow

00:13:05,120 --> 00:13:08,720
maybe you're doing something like you

00:13:07,440 --> 00:13:10,800
know in your planning tools if you're

00:13:08,720 --> 00:13:12,320
using jira or azure boards

00:13:10,800 --> 00:13:13,839
and you want to create a work item over

00:13:12,320 --> 00:13:15,120
there as a business analyst

00:13:13,839 --> 00:13:17,120
and have it reflect back in your

00:13:15,120 --> 00:13:20,000
repository as an issue

00:13:17,120 --> 00:13:21,279
you can orchestrate that as an action so

00:13:20,000 --> 00:13:23,040
this is

00:13:21,279 --> 00:13:24,320
a way to create automation in your

00:13:23,040 --> 00:13:26,959
developer workflows

00:13:24,320 --> 00:13:28,560
but also taking it a step further and

00:13:26,959 --> 00:13:30,000
tying it back to hey

00:13:28,560 --> 00:13:31,600
you know our enterprise customers came

00:13:30,000 --> 00:13:33,040
to us and said they love the idea of

00:13:31,600 --> 00:13:34,959
automation stringing together

00:13:33,040 --> 00:13:36,560
their developer tools what they really

00:13:34,959 --> 00:13:39,199
want is native ci

00:13:36,560 --> 00:13:41,839
cd on github and so that's exactly what

00:13:39,199 --> 00:13:42,800
we delivered on last week in the ga

00:13:41,839 --> 00:13:44,399
and i'm actually going to walk you

00:13:42,800 --> 00:13:45,839
through a demonstration what this looks

00:13:44,399 --> 00:13:47,760
like when you're running it on github in

00:13:45,839 --> 00:13:50,160
your repository

00:13:47,760 --> 00:13:51,440
a few moments here something that's

00:13:50,160 --> 00:13:53,920
really powerful about

00:13:51,440 --> 00:13:55,440
defining your pipelines as well so

00:13:53,920 --> 00:13:57,680
defining your pipelines as code is

00:13:55,440 --> 00:13:59,600
obviously a very powerful practice

00:13:57,680 --> 00:14:02,000
and a very healthy practice for an

00:13:59,600 --> 00:14:03,839
organization on the devops journey

00:14:02,000 --> 00:14:06,160
but something that's really powerful

00:14:03,839 --> 00:14:08,320
actions and the open source community

00:14:06,160 --> 00:14:09,839
is that you can leverage these pipelines

00:14:08,320 --> 00:14:11,760
as code that other folks

00:14:09,839 --> 00:14:13,279
have already developed for you and you

00:14:11,760 --> 00:14:14,480
just have to do some small degree of

00:14:13,279 --> 00:14:16,240
customization

00:14:14,480 --> 00:14:17,920
right so if you want to deploy to azure

00:14:16,240 --> 00:14:20,079
if you want to deploy to gcp

00:14:17,920 --> 00:14:21,680
you can pull in these pipelines from or

00:14:20,079 --> 00:14:22,800
these actions from the broader open

00:14:21,680 --> 00:14:24,480
source community

00:14:22,800 --> 00:14:26,399
into your repo or your organization just

00:14:24,480 --> 00:14:30,079
customize them and you'll be up and

00:14:26,399 --> 00:14:32,240
running very quickly

00:14:30,079 --> 00:14:33,920
so something else i wanted to talk about

00:14:32,240 --> 00:14:36,160
uh before i move into

00:14:33,920 --> 00:14:37,600
actually just a live demo is github

00:14:36,160 --> 00:14:38,880
package registry

00:14:37,600 --> 00:14:41,040
simply put this is going to be your

00:14:38,880 --> 00:14:43,120
artifact repository scope 2

00:14:41,040 --> 00:14:44,720
your repository on github or your

00:14:43,120 --> 00:14:46,240
organization

00:14:44,720 --> 00:14:48,000
okay so your binaries are living here

00:14:46,240 --> 00:14:49,440
your build artifacts your packages

00:14:48,000 --> 00:14:51,519
will all be scoped to and live in your

00:14:49,440 --> 00:14:53,199
package registry so be able to

00:14:51,519 --> 00:14:55,760
you'll be able to publish your

00:14:53,199 --> 00:14:57,600
applications during the cd process

00:14:55,760 --> 00:14:59,279
out to your infrastructure from github

00:14:57,600 --> 00:15:02,720
package registry

00:14:59,279 --> 00:15:04,160
okay so you can kind of see how we're no

00:15:02,720 --> 00:15:06,720
longer just

00:15:04,160 --> 00:15:08,800
this you know we are very much aiming to

00:15:06,720 --> 00:15:11,120
be at the center of your sdlc of your

00:15:08,800 --> 00:15:12,959
of your you know development life cycle

00:15:11,120 --> 00:15:13,279
but we're also expanding the scope to

00:15:12,959 --> 00:15:16,399
all

00:15:13,279 --> 00:15:18,000
you know to include uh the cicd aspect

00:15:16,399 --> 00:15:21,120
so continuously testing

00:15:18,000 --> 00:15:23,920
and deploying your applications uh out

00:15:21,120 --> 00:15:25,839
uh into whatever uh you know whatever

00:15:23,920 --> 00:15:27,600
environment is you're deploying out to

00:15:25,839 --> 00:15:28,639
and also storing your artifacts

00:15:27,600 --> 00:15:31,040
we're going to have some planning

00:15:28,639 --> 00:15:32,560
integrations with with projects

00:15:31,040 --> 00:15:34,240
and those integrations are going to get

00:15:32,560 --> 00:15:36,320
tighter with our folks

00:15:34,240 --> 00:15:38,959
other partners in the ecosystem

00:15:36,320 --> 00:15:41,759
something that naturally comes up when i

00:15:38,959 --> 00:15:42,639
talk about us expanding our breath at

00:15:41,759 --> 00:15:44,399
github is

00:15:42,639 --> 00:15:46,240
well how well do you play with jenkins

00:15:44,399 --> 00:15:48,800
how well do you play with you know azure

00:15:46,240 --> 00:15:50,959
devops or jira i love those tools

00:15:48,800 --> 00:15:52,480
and i think what's been clear to me and

00:15:50,959 --> 00:15:53,600
to you know the github community that's

00:15:52,480 --> 00:15:55,759
been communicated top

00:15:53,600 --> 00:15:57,759
down is that those integrations are not

00:15:55,759 --> 00:15:59,360
going away anytime soon

00:15:57,759 --> 00:16:00,959
so we'll still have the first class

00:15:59,360 --> 00:16:02,959
integrations and still allow you to do

00:16:00,959 --> 00:16:05,040
that best of breed tooling in github

00:16:02,959 --> 00:16:06,240
where we see some features becoming

00:16:05,040 --> 00:16:08,079
commoditized

00:16:06,240 --> 00:16:10,079
like in the cicd space we're going to

00:16:08,079 --> 00:16:11,199
start to offer those things natively

00:16:10,079 --> 00:16:13,600
and so you can leverage them right

00:16:11,199 --> 00:16:15,839
inside of github

00:16:13,600 --> 00:16:17,360
so i'm going to do a quick demo now and

00:16:15,839 --> 00:16:23,839
actually show you what an action looks

00:16:17,360 --> 00:16:23,839
like when it's running

00:16:28,639 --> 00:16:34,480
beautiful okay so let's

00:16:32,399 --> 00:16:36,000
uh okay so this is if you've never seen

00:16:34,480 --> 00:16:38,160
it before hopefully you have

00:16:36,000 --> 00:16:39,680
but this is a repository on github

00:16:38,160 --> 00:16:43,040
that's within one of my pro

00:16:39,680 --> 00:16:44,399
within within one of our organizations

00:16:43,040 --> 00:16:45,600
and so the first thing i'm going to show

00:16:44,399 --> 00:16:47,199
you if you haven't seen it before

00:16:45,600 --> 00:16:49,360
because we ga last week is

00:16:47,199 --> 00:16:50,800
github actions right this tab on the top

00:16:49,360 --> 00:16:52,079
here

00:16:50,800 --> 00:16:54,480
i'll go ahead and click that and you can

00:16:52,079 --> 00:16:55,680
also see you can also see where your

00:16:54,480 --> 00:16:57,360
packages are scoped

00:16:55,680 --> 00:16:58,959
right inside of this repository so that

00:16:57,360 --> 00:17:02,720
little guy that tab is going to

00:16:58,959 --> 00:17:04,160
pop up now for you as well so

00:17:02,720 --> 00:17:05,600
with the first demonstration that i'll

00:17:04,160 --> 00:17:06,959
show you is it's going to be really

00:17:05,600 --> 00:17:08,640
simple it's going to cover that use case

00:17:06,959 --> 00:17:11,120
where maybe i'm a business analyst

00:17:08,640 --> 00:17:12,400
and in one of your you know one of your

00:17:11,120 --> 00:17:13,439
planning tools and i want to create a

00:17:12,400 --> 00:17:15,520
work item there

00:17:13,439 --> 00:17:16,880
that automatically reflects back as an

00:17:15,520 --> 00:17:18,240
issue inside of github

00:17:16,880 --> 00:17:20,000
and to make it really simple i'm not

00:17:18,240 --> 00:17:21,360
going to open actually any sort of

00:17:20,000 --> 00:17:23,360
planning tool i'll just use

00:17:21,360 --> 00:17:25,039
postman and show you how you can trigger

00:17:23,360 --> 00:17:29,280
from any third-party tool

00:17:25,039 --> 00:17:29,280
and action on your repository in github

00:17:29,840 --> 00:17:32,960
so here i am just going to send a simple

00:17:31,520 --> 00:17:35,120
api request

00:17:32,960 --> 00:17:36,880
that's all i've done i sent an api

00:17:35,120 --> 00:17:37,840
request which would be very similar to a

00:17:36,880 --> 00:17:39,440
web hook event

00:17:37,840 --> 00:17:41,200
that whatever your third-party tooling

00:17:39,440 --> 00:17:42,160
is would send off and so you can see

00:17:41,200 --> 00:17:44,400
this yellow

00:17:42,160 --> 00:17:45,200
circle here and the live logs on on

00:17:44,400 --> 00:17:47,120
actions

00:17:45,200 --> 00:17:49,039
show you that uh the action is now

00:17:47,120 --> 00:17:50,320
running it shows you

00:17:49,039 --> 00:17:51,600
another piece of information that's

00:17:50,320 --> 00:17:52,400
really interesting and you can't see

00:17:51,600 --> 00:17:55,200
probably

00:17:52,400 --> 00:17:57,120
from where you are but the event that

00:17:55,200 --> 00:17:58,880
the action is subscribing to

00:17:57,120 --> 00:18:00,640
so of course when we say it's native and

00:17:58,880 --> 00:18:01,200
github we automatically subscribe to the

00:18:00,640 --> 00:18:03,440
events

00:18:01,200 --> 00:18:05,600
that the github platform's putting out

00:18:03,440 --> 00:18:07,280
right but also we can consume

00:18:05,600 --> 00:18:10,160
external events so that's what this

00:18:07,280 --> 00:18:11,520
repository dispatch trigger is

00:18:10,160 --> 00:18:14,480
and so we can see that i've triggered on

00:18:11,520 --> 00:18:15,919
the master branch and what user it's by

00:18:14,480 --> 00:18:17,679
so i missed the opportunity to show you

00:18:15,919 --> 00:18:18,240
the live streaming logs but i'll show

00:18:17,679 --> 00:18:20,080
you

00:18:18,240 --> 00:18:22,559
just really quickly what this looks like

00:18:20,080 --> 00:18:23,840
the syntax highlighting

00:18:22,559 --> 00:18:24,960
you know just a really clean interface

00:18:23,840 --> 00:18:26,559
that you can search through you can

00:18:24,960 --> 00:18:28,080
export these logs as well

00:18:26,559 --> 00:18:30,240
and this shows you some of the logic

00:18:28,080 --> 00:18:32,240
that ran at runtime so i sent

00:18:30,240 --> 00:18:33,919
again the story is i sent this api

00:18:32,240 --> 00:18:35,200
request which would be from your

00:18:33,919 --> 00:18:37,360
third-party tooling

00:18:35,200 --> 00:18:38,640
it kicked off an action that creates an

00:18:37,360 --> 00:18:41,200
issue okay

00:18:38,640 --> 00:18:42,240
so we just created an issue from our

00:18:41,200 --> 00:18:45,280
action in github

00:18:42,240 --> 00:18:46,640
now if i go into my issues i'll see

00:18:45,280 --> 00:18:49,039
not just that i've tested this a few

00:18:46,640 --> 00:18:51,360
times but um that i've created this new

00:18:49,039 --> 00:18:53,600
issue i've tagged myself as an assignee

00:18:51,360 --> 00:18:57,840
right you have full access to any api

00:18:53,600 --> 00:18:57,840
from within your action

00:18:58,559 --> 00:19:02,640
so that covers the automation use case

00:19:00,720 --> 00:19:04,960
if you're looking to automate any of the

00:19:02,640 --> 00:19:06,400
you know flows within your sdlc as a

00:19:04,960 --> 00:19:10,640
developer but what about

00:19:06,400 --> 00:19:13,919
ci cd so let me show you very simply

00:19:10,640 --> 00:19:16,400
how you can make a change on github

00:19:13,919 --> 00:19:18,880
and kick off an action to run your tests

00:19:16,400 --> 00:19:21,280
continuously

00:19:18,880 --> 00:19:23,760
so all i'll do is make a change in my

00:19:21,280 --> 00:19:26,799
readme file here

00:19:23,760 --> 00:19:28,799
just going to add a smiley face

00:19:26,799 --> 00:19:31,280
and commit those changes back to this

00:19:28,799 --> 00:19:31,280
branch

00:19:33,360 --> 00:19:36,640
so again i'm going to look for actions

00:19:35,039 --> 00:19:39,200
and my actions should be running here

00:19:36,640 --> 00:19:41,440
there it is

00:19:39,200 --> 00:19:44,080
starting to run my workflow and so in a

00:19:41,440 --> 00:19:45,840
moment here i'll see my specs run

00:19:44,080 --> 00:19:47,120
and uh and what's really interesting if

00:19:45,840 --> 00:19:49,360
my specs fail

00:19:47,120 --> 00:19:51,280
on this specific branch i trigger an

00:19:49,360 --> 00:19:52,880
external action so i'm leveraging again

00:19:51,280 --> 00:19:54,320
that open source community

00:19:52,880 --> 00:19:56,080
that has a collection of actions

00:19:54,320 --> 00:19:58,160
pre-built that you can just pull in

00:19:56,080 --> 00:19:59,200
so if my tests fail i receive an sms i

00:19:58,160 --> 00:20:00,880
get a text message

00:19:59,200 --> 00:20:02,400
where i could also get a voice call

00:20:00,880 --> 00:20:03,760
saying hey you know

00:20:02,400 --> 00:20:05,200
your tests failed you probably want to

00:20:03,760 --> 00:20:06,480
check that right if i'm deploying out to

00:20:05,200 --> 00:20:08,000
my production environment

00:20:06,480 --> 00:20:09,919
my tests fail it just gives me the

00:20:08,000 --> 00:20:12,720
opportunity to uh

00:20:09,919 --> 00:20:13,120
to be notified about that so i'll see

00:20:12,720 --> 00:20:15,280
that

00:20:13,120 --> 00:20:16,640
my test did in fact fail i received a

00:20:15,280 --> 00:20:19,200
text message

00:20:16,640 --> 00:20:20,159
and you saw the logs run in uh in real

00:20:19,200 --> 00:20:23,039
time here

00:20:20,159 --> 00:20:24,720
so you can see if you scroll into the

00:20:23,039 --> 00:20:27,200
logs you can do your debugging from in

00:20:24,720 --> 00:20:30,240
here you can see my tests failed

00:20:27,200 --> 00:20:31,840
and that's ci on github it's that simple

00:20:30,240 --> 00:20:34,400
fully integrated with actions in this

00:20:31,840 --> 00:20:37,039
case we subscribe to

00:20:34,400 --> 00:20:39,039
the trigger which was on push so when i

00:20:37,039 --> 00:20:41,280
push some code to a feature branch

00:20:39,039 --> 00:20:44,720
i trigger this action this workflow and

00:20:41,280 --> 00:20:46,840
was able to run my ci

00:20:44,720 --> 00:20:49,840
so let's go ahead and go back to the

00:20:46,840 --> 00:20:49,840
deck

00:20:50,960 --> 00:20:53,360
thank you

00:21:00,159 --> 00:21:03,840
all right and we do mean it stop by the

00:21:02,080 --> 00:21:05,200
stick the table afterwards for stickers

00:21:03,840 --> 00:21:07,679
in conversation you'll get a

00:21:05,200 --> 00:21:09,919
octocat sticker i promise we have tons

00:21:07,679 --> 00:21:11,840
of them

00:21:09,919 --> 00:21:13,600
let's talk about security and compliance

00:21:11,840 --> 00:21:15,039
okay because securing the software we're

00:21:13,600 --> 00:21:16,559
pulling into our

00:21:15,039 --> 00:21:18,000
our applications from the open source

00:21:16,559 --> 00:21:18,559
community is obviously very important

00:21:18,000 --> 00:21:22,159
and github

00:21:18,559 --> 00:21:22,159
plays a central role in that right

00:21:26,159 --> 00:21:33,039
so we talk about this concept of

00:21:29,679 --> 00:21:34,880
shifting security left right

00:21:33,039 --> 00:21:36,480
ensuring that security engineers

00:21:34,880 --> 00:21:36,880
engineers are more tightly ingrained

00:21:36,480 --> 00:21:39,760
with

00:21:36,880 --> 00:21:41,120
the development process as your

00:21:39,760 --> 00:21:42,640
developers are writing the code you have

00:21:41,120 --> 00:21:43,679
engineers kind of sitting side by side

00:21:42,640 --> 00:21:45,200
with them

00:21:43,679 --> 00:21:46,640
trying to identify vulnerabilities that

00:21:45,200 --> 00:21:48,480
your developers may be introducing

00:21:46,640 --> 00:21:51,679
through your open source dependencies

00:21:48,480 --> 00:21:54,400
or through the code itself right

00:21:51,679 --> 00:21:55,840
and so i think it's broadly understood

00:21:54,400 --> 00:21:57,919
that

00:21:55,840 --> 00:21:59,120
you cannot possibly scale a security

00:21:57,919 --> 00:22:01,039
engineer's time

00:21:59,120 --> 00:22:02,559
to meet that of of your developers

00:22:01,039 --> 00:22:04,320
actually committing changes

00:22:02,559 --> 00:22:06,559
to your applications right so you need

00:22:04,320 --> 00:22:08,880
to introduce some degree of automation

00:22:06,559 --> 00:22:10,799
and just to get an idea of um you know

00:22:08,880 --> 00:22:12,000
the scale of security researchers to

00:22:10,799 --> 00:22:14,240
professional developers

00:22:12,000 --> 00:22:15,280
how many of us are security researchers

00:22:14,240 --> 00:22:17,679
in the audience

00:22:15,280 --> 00:22:18,960
at this open source oh we have one over

00:22:17,679 --> 00:22:21,600
there awesome great

00:22:18,960 --> 00:22:23,200
so thank you for being here there are 40

00:22:21,600 --> 00:22:23,840
million professional developers on

00:22:23,200 --> 00:22:26,000
github

00:22:23,840 --> 00:22:27,919
and only 70 000 security reach

00:22:26,000 --> 00:22:31,280
researchers

00:22:27,919 --> 00:22:35,200
so that's 570 times the number of

00:22:31,280 --> 00:22:35,200
uh of developers

00:22:35,679 --> 00:22:40,080
so equifax is an interesting story

00:22:38,880 --> 00:22:43,520
i'm not gonna i'm sure you're already

00:22:40,080 --> 00:22:45,120
familiar with it you know and

00:22:43,520 --> 00:22:46,400
in some ways but what's really

00:22:45,120 --> 00:22:48,480
interesting about the type of

00:22:46,400 --> 00:22:50,880
vulnerability that was introduced

00:22:48,480 --> 00:22:52,080
was that it could have been patched if

00:22:50,880 --> 00:22:54,720
they had just upgraded

00:22:52,080 --> 00:22:56,480
open source dependency you know one of

00:22:54,720 --> 00:22:56,799
their underlying packages and so what we

00:22:56,480 --> 00:22:58,880
see

00:22:56,799 --> 00:23:00,799
at github is that it's our

00:22:58,880 --> 00:23:02,080
responsibility to enable our customers

00:23:00,799 --> 00:23:04,799
we're implementing features

00:23:02,080 --> 00:23:07,360
that enable our customers to uh to

00:23:04,799 --> 00:23:08,960
automatically not just be alerted

00:23:07,360 --> 00:23:10,960
when you're when you're potentially

00:23:08,960 --> 00:23:12,400
introducing a vulnerability but to

00:23:10,960 --> 00:23:13,440
automatically patch that known

00:23:12,400 --> 00:23:17,440
vulnerability

00:23:13,440 --> 00:23:18,960
on github and so there are these kind of

00:23:17,440 --> 00:23:20,960
uh when you start thinking about

00:23:18,960 --> 00:23:22,880
how you can secure this your your

00:23:20,960 --> 00:23:24,640
software supply chain

00:23:22,880 --> 00:23:27,360
from start to finish you have these four

00:23:24,640 --> 00:23:29,440
personas you have security researchers

00:23:27,360 --> 00:23:31,440
this nice lady over here you have open

00:23:29,440 --> 00:23:33,440
source maintainers i saw some folks here

00:23:31,440 --> 00:23:34,799
uh smiling earlier on and developers and

00:23:33,440 --> 00:23:36,320
security teams

00:23:34,799 --> 00:23:38,720
right and it's kind of funny when you

00:23:36,320 --> 00:23:39,679
think about how that flow works today

00:23:38,720 --> 00:23:41,679
when there is

00:23:39,679 --> 00:23:43,120
a vulnerability being introduced in one

00:23:41,679 --> 00:23:45,840
of your underlying packages

00:23:43,120 --> 00:23:46,799
how it gets patched okay and so if you

00:23:45,840 --> 00:23:48,320
haven't been listening

00:23:46,799 --> 00:23:50,159
up to this point this is the part where

00:23:48,320 --> 00:23:51,679
you could tune in because it's it's just

00:23:50,159 --> 00:23:53,600
really kind of eye-opening

00:23:51,679 --> 00:23:56,080
so let me walk you through exactly how

00:23:53,600 --> 00:23:58,159
this happens today how

00:23:56,080 --> 00:23:59,440
vulnerabilities are reported on your

00:23:58,159 --> 00:24:01,840
open source dependencies so you have

00:23:59,440 --> 00:24:04,159
security researchers

00:24:01,840 --> 00:24:05,760
these folks are looking through your

00:24:04,159 --> 00:24:07,279
open source packages

00:24:05,760 --> 00:24:08,320
or not your open source packages but

00:24:07,279 --> 00:24:09,600
they're looking through the open source

00:24:08,320 --> 00:24:10,880
community trying to identify

00:24:09,600 --> 00:24:13,039
vulnerabilities

00:24:10,880 --> 00:24:14,720
in these components right so they're

00:24:13,039 --> 00:24:17,200
doing manual discovery

00:24:14,720 --> 00:24:17,919
and trying to but in most cases they're

00:24:17,200 --> 00:24:20,320
in

00:24:17,919 --> 00:24:21,679
in historically there was not a way to

00:24:20,320 --> 00:24:23,919
privately disclose the

00:24:21,679 --> 00:24:25,840
two open source maintainers maybe

00:24:23,919 --> 00:24:27,520
privately on twitter or through

00:24:25,840 --> 00:24:28,960
uh you know if you can get access to

00:24:27,520 --> 00:24:30,320
them on facebook something like that you

00:24:28,960 --> 00:24:31,520
could send them a message

00:24:30,320 --> 00:24:33,840
right if you if you find this

00:24:31,520 --> 00:24:35,919
vulnerability and then these maintainers

00:24:33,840 --> 00:24:38,320
who have full-time jobs

00:24:35,919 --> 00:24:39,840
right they're responsible for acting on

00:24:38,320 --> 00:24:40,960
and patching that vulnerability that's

00:24:39,840 --> 00:24:43,679
just been reported

00:24:40,960 --> 00:24:46,240
by the researcher so they've been

00:24:43,679 --> 00:24:48,240
notified now they have to act on it

00:24:46,240 --> 00:24:49,919
and when you think about it i mean if my

00:24:48,240 --> 00:24:51,039
wife if i'm sending a text message and

00:24:49,919 --> 00:24:52,960
my wife asked me to take the

00:24:51,039 --> 00:24:54,880
thanksgiving turkey out of the oven

00:24:52,960 --> 00:24:56,400
you know there's a very low chance that

00:24:54,880 --> 00:24:57,200
that turkey is coming out of the oven on

00:24:56,400 --> 00:24:59,200
time

00:24:57,200 --> 00:25:01,200
similarly as a maintainer this is not

00:24:59,200 --> 00:25:03,039
your full-time job

00:25:01,200 --> 00:25:04,880
to maintain this open source dependency

00:25:03,039 --> 00:25:05,120
that you know now has a vulnerability in

00:25:04,880 --> 00:25:08,159
it

00:25:05,120 --> 00:25:10,799
but us as enterprise consumers are

00:25:08,159 --> 00:25:14,240
pulling in these open source components

00:25:10,799 --> 00:25:15,600
you know and using them just not really

00:25:14,240 --> 00:25:16,799
understanding possibly what the

00:25:15,600 --> 00:25:18,720
implications are

00:25:16,799 --> 00:25:20,000
for that and so uh previously when

00:25:18,720 --> 00:25:22,400
you're updating this

00:25:20,000 --> 00:25:24,400
uh your developers had to go in look

00:25:22,400 --> 00:25:25,919
through the nvd national vulnerability

00:25:24,400 --> 00:25:28,400
database see that there was a

00:25:25,919 --> 00:25:29,520
you know a vulnerability reported there

00:25:28,400 --> 00:25:32,000
and they'd have to

00:25:29,520 --> 00:25:33,120
make the patch manually and so what

00:25:32,000 --> 00:25:35,600
github has done

00:25:33,120 --> 00:25:37,679
in order to alleviate this this workflow

00:25:35,600 --> 00:25:40,720
right all the pain points along the way

00:25:37,679 --> 00:25:42,799
in this workflow is a few things we've

00:25:40,720 --> 00:25:44,320
enabled security researchers

00:25:42,799 --> 00:25:45,840
to or i'm so yeah so we've enabled

00:25:44,320 --> 00:25:48,559
security researchers

00:25:45,840 --> 00:25:49,600
to uh follow security policies on open

00:25:48,559 --> 00:25:52,320
source projects

00:25:49,600 --> 00:25:53,279
to responsibly report when they find a

00:25:52,320 --> 00:25:54,960
vulnerability

00:25:53,279 --> 00:25:57,200
privately back to the open source

00:25:54,960 --> 00:25:58,960
maintainer and we've also made an

00:25:57,200 --> 00:26:00,480
acquisition of semal which i'll talk

00:25:58,960 --> 00:26:02,880
about in a little while

00:26:00,480 --> 00:26:04,000
now it's going to be known as github

00:26:02,880 --> 00:26:05,600
advanced security

00:26:04,000 --> 00:26:07,440
and so what that allows you to do is it

00:26:05,600 --> 00:26:10,000
allows you to actually programmatically

00:26:07,440 --> 00:26:10,960
or automatically scan the code in open

00:26:10,000 --> 00:26:12,960
source projects

00:26:10,960 --> 00:26:14,080
or that you're contributing in real time

00:26:12,960 --> 00:26:15,440
to

00:26:14,080 --> 00:26:17,120
you know your applications to see if

00:26:15,440 --> 00:26:19,279
there are any semantic vulnerabilities

00:26:17,120 --> 00:26:20,720
that you're introducing

00:26:19,279 --> 00:26:23,520
okay so that's how we've helped security

00:26:20,720 --> 00:26:26,960
researchers now maintainers

00:26:23,520 --> 00:26:28,799
what we do for them github is now i

00:26:26,960 --> 00:26:31,039
think very excited to say that we are

00:26:28,799 --> 00:26:32,080
a cve numbering authority so what that

00:26:31,039 --> 00:26:34,480
means is

00:26:32,080 --> 00:26:35,760
open source maintainers can report first

00:26:34,480 --> 00:26:38,240
these vulnerabilities

00:26:35,760 --> 00:26:39,440
to github who then turns around and

00:26:38,240 --> 00:26:41,279
plugs them into the national

00:26:39,440 --> 00:26:43,039
vulnerability database

00:26:41,279 --> 00:26:44,799
which is what's interesting about that

00:26:43,039 --> 00:26:45,600
if you're a github user an enterprise on

00:26:44,799 --> 00:26:48,000
github

00:26:45,600 --> 00:26:49,840
and you have uh you know security alerts

00:26:48,000 --> 00:26:50,880
enabled on your repos or across your

00:26:49,840 --> 00:26:53,039
organization

00:26:50,880 --> 00:26:54,799
you'll be among the first to be notified

00:26:53,039 --> 00:26:56,640
at least that a vulnerability has been

00:26:54,799 --> 00:26:57,120
introduced right and we do that a couple

00:26:56,640 --> 00:27:00,720
ways

00:26:57,120 --> 00:27:02,640
through the cli ui and uh

00:27:00,720 --> 00:27:05,360
and through email and we can send that

00:27:02,640 --> 00:27:08,640
directly to your security engineers

00:27:05,360 --> 00:27:10,880
so we do cve issuance um we are

00:27:08,640 --> 00:27:12,640
going to be the largest vulnerability

00:27:10,880 --> 00:27:13,919
database for open source projects

00:27:12,640 --> 00:27:15,440
because of the nature of

00:27:13,919 --> 00:27:17,200
kind of where we're positioned right

00:27:15,440 --> 00:27:19,520
that the open source community is so

00:27:17,200 --> 00:27:21,200
prevalent on our platform

00:27:19,520 --> 00:27:23,200
and so from the developer's perspective

00:27:21,200 --> 00:27:25,039
there's a few things so first of all i

00:27:23,200 --> 00:27:26,320
know myself that

00:27:25,039 --> 00:27:28,000
you know the fact that there's three

00:27:26,320 --> 00:27:29,120
places that you report vulnerability

00:27:28,000 --> 00:27:31,039
alerts that's great but i'm going to

00:27:29,120 --> 00:27:31,840
ignore them in four places if you give

00:27:31,039 --> 00:27:35,039
me three

00:27:31,840 --> 00:27:35,440
right so uh github did an acquisition

00:27:35,039 --> 00:27:38,559
back

00:27:35,440 --> 00:27:41,440
in uh it was maybe may

00:27:38,559 --> 00:27:42,320
of dependable which is a github app that

00:27:41,440 --> 00:27:44,960
automatically

00:27:42,320 --> 00:27:45,840
opens a pull request on your repository

00:27:44,960 --> 00:27:48,880
if you have

00:27:45,840 --> 00:27:51,039
a known version of an application with

00:27:48,880 --> 00:27:52,720
an underlying vulnerability

00:27:51,039 --> 00:27:54,799
okay so we'll automatically patch and

00:27:52,720 --> 00:27:56,960
help you upgrade the dependencies that

00:27:54,799 --> 00:27:59,760
you're relying on

00:27:56,960 --> 00:28:01,600
and we also introduced well we have and

00:27:59,760 --> 00:28:03,360
continue to expand the scope of

00:28:01,600 --> 00:28:05,200
token scanning so if you're accidentally

00:28:03,360 --> 00:28:07,120
and i know i've made this mistake before

00:28:05,200 --> 00:28:08,559
i see some heads nodding if you're

00:28:07,120 --> 00:28:10,399
pushing your credentials accidentally

00:28:08,559 --> 00:28:12,320
into github in a public repo

00:28:10,399 --> 00:28:13,440
we'll scan for that and alert the third

00:28:12,320 --> 00:28:16,240
party service and

00:28:13,440 --> 00:28:18,000
they'll invalidate that token so that

00:28:16,240 --> 00:28:22,000
you know the folks who are kind of

00:28:18,000 --> 00:28:22,000
combing through github can't use them

00:28:24,880 --> 00:28:29,279
so from a dependency insights

00:28:26,640 --> 00:28:32,240
perspective we recently shipped

00:28:29,279 --> 00:28:34,480
scope to the organization and actually

00:28:32,240 --> 00:28:37,360
at the repository level

00:28:34,480 --> 00:28:39,840
your an ability to see all open source

00:28:37,360 --> 00:28:42,320
advisories across your organization

00:28:39,840 --> 00:28:43,600
so across all your repos you can see if

00:28:42,320 --> 00:28:44,799
you have

00:28:43,600 --> 00:28:46,399
an underlying package with the

00:28:44,799 --> 00:28:48,559
vulnerability and will tell you the

00:28:46,399 --> 00:28:49,760
severity of that vulnerability

00:28:48,559 --> 00:28:51,520
now what's really interesting about the

00:28:49,760 --> 00:28:53,200
fact that it's on github not any other

00:28:51,520 --> 00:28:54,240
platform that shows you your open source

00:28:53,200 --> 00:28:56,240
vulnerabilities

00:28:54,240 --> 00:28:57,279
is you can trace that if there is a

00:28:56,240 --> 00:28:59,440
patch available

00:28:57,279 --> 00:29:01,760
you can trace that patch back to the

00:28:59,440 --> 00:29:04,080
package that's probably on github

00:29:01,760 --> 00:29:04,960
to the user who made the patch probably

00:29:04,080 --> 00:29:06,720
on github

00:29:04,960 --> 00:29:08,640
and you can actually see the code that

00:29:06,720 --> 00:29:12,080
they use to patch it

00:29:08,640 --> 00:29:13,520
so you get a much more granular idea

00:29:12,080 --> 00:29:15,760
of how these patches are coming to

00:29:13,520 --> 00:29:16,960
fruition um and of course

00:29:15,760 --> 00:29:18,640
what the security you know what the

00:29:16,960 --> 00:29:19,679
security implications are of your

00:29:18,640 --> 00:29:22,799
dependencies

00:29:19,679 --> 00:29:24,480
that you're relying on so not just

00:29:22,799 --> 00:29:25,679
uh you know i'll just kind of mention

00:29:24,480 --> 00:29:26,559
this in passing here is we don't just

00:29:25,679 --> 00:29:28,240
tell you about

00:29:26,559 --> 00:29:29,840
kind of the common vulnerabilities and

00:29:28,240 --> 00:29:32,159
exposures that have been

00:29:29,840 --> 00:29:34,000
um that have been reported but also if

00:29:32,159 --> 00:29:35,919
you have in your dependencies

00:29:34,000 --> 00:29:38,000
any legal implications from some of the

00:29:35,919 --> 00:29:40,480
licenses that you're pulling in

00:29:38,000 --> 00:29:42,159
as a developer sometimes we don't know

00:29:40,480 --> 00:29:42,960
uh you know what the implications are of

00:29:42,159 --> 00:29:45,360
not pulling in

00:29:42,960 --> 00:29:46,159
an mit or apache license but a gpl

00:29:45,360 --> 00:29:47,679
license

00:29:46,159 --> 00:29:49,279
that might say something like if you

00:29:47,679 --> 00:29:51,039
consume this package we

00:29:49,279 --> 00:29:52,320
you know we have some ownership of your

00:29:51,039 --> 00:29:53,360
code

00:29:52,320 --> 00:29:55,360
right and so we're going to give you

00:29:53,360 --> 00:29:57,120
insight into those licenses uh

00:29:55,360 --> 00:29:59,120
everything that i'm talking about i

00:29:57,120 --> 00:30:01,679
should have probably prefaced with this

00:29:59,120 --> 00:30:03,520
is opt in right so we'll scan your

00:30:01,679 --> 00:30:04,640
manifest files in your application i'll

00:30:03,520 --> 00:30:05,279
show you what that looks like in a

00:30:04,640 --> 00:30:07,200
second

00:30:05,279 --> 00:30:08,960
but we'll scan what dependencies you

00:30:07,200 --> 00:30:11,520
have in that source code

00:30:08,960 --> 00:30:14,399
and then map that back to any known

00:30:11,520 --> 00:30:14,399
vulnerabilities

00:30:18,320 --> 00:30:22,480
so let's see what this security alerts

00:30:20,720 --> 00:30:26,399
actually looks like in practice

00:30:22,480 --> 00:30:26,399
if i can uh you got it

00:30:34,240 --> 00:30:37,200
uh yes please sorry

00:30:38,320 --> 00:30:41,200
so the use case i'm going to walk you

00:30:39,600 --> 00:30:41,840
through is really simple i just want to

00:30:41,200 --> 00:30:44,240
illustrate

00:30:41,840 --> 00:30:45,679
how security alerts works how we can

00:30:44,240 --> 00:30:47,279
automate some of the

00:30:45,679 --> 00:30:48,799
patching of known vulnerabilities on

00:30:47,279 --> 00:30:50,320
your applications

00:30:48,799 --> 00:30:52,240
and make your developers lives a heck of

00:30:50,320 --> 00:30:53,360
a lot easier so you can see in the ui

00:30:52,240 --> 00:30:54,320
here i mean if you're a developer you're

00:30:53,360 --> 00:30:56,559
probably gonna

00:30:54,320 --> 00:30:57,919
ignore this box there but maybe you're a

00:30:56,559 --> 00:30:59,200
security engineer and we're talking

00:30:57,919 --> 00:31:00,559
about shift left and you

00:30:59,200 --> 00:31:01,919
and you are scanning through your

00:31:00,559 --> 00:31:03,440
repositories to see if there are any

00:31:01,919 --> 00:31:05,840
security alerts

00:31:03,440 --> 00:31:07,279
so now all i'd have to do is not go in

00:31:05,840 --> 00:31:08,960
there and make the change and make the

00:31:07,279 --> 00:31:10,399
upgrade manually but just click

00:31:08,960 --> 00:31:12,559
merge the pull request after i've

00:31:10,399 --> 00:31:14,240
validated that it could be integrated

00:31:12,559 --> 00:31:17,440
without a regression

00:31:14,240 --> 00:31:18,960
so again here's my repository it's just

00:31:17,440 --> 00:31:20,880
very simply a node app

00:31:18,960 --> 00:31:22,399
and there is a security alert on here so

00:31:20,880 --> 00:31:23,840
i'm going to go ahead and see the

00:31:22,399 --> 00:31:26,159
vulnerable dependency

00:31:23,840 --> 00:31:27,360
that i pulled into my application so i

00:31:26,159 --> 00:31:29,120
can see the severity of that

00:31:27,360 --> 00:31:30,880
vulnerability

00:31:29,120 --> 00:31:32,399
and i can see the name of that package

00:31:30,880 --> 00:31:35,200
so i pulled in low dash

00:31:32,399 --> 00:31:37,039
with a critical severity of

00:31:35,200 --> 00:31:39,600
vulnerability so i want to go into

00:31:37,039 --> 00:31:40,960
my insights and under dependency graph

00:31:39,600 --> 00:31:42,320
so i had mentioned earlier

00:31:40,960 --> 00:31:44,399
that we have this concept of the

00:31:42,320 --> 00:31:46,080
dependency graph scoped in two ways

00:31:44,399 --> 00:31:47,679
to your repo and at the higher level

00:31:46,080 --> 00:31:51,679
your organization

00:31:47,679 --> 00:31:51,679
so as a repo owner you could see this

00:31:51,919 --> 00:31:55,279
and just gives you some more information

00:31:53,440 --> 00:31:56,799
about the dependencies and transitive

00:31:55,279 --> 00:31:58,880
dependencies that you have pulled into

00:31:56,799 --> 00:32:00,880
your application

00:31:58,880 --> 00:32:02,320
so you can see there's a known security

00:32:00,880 --> 00:32:04,000
vulnerability in low dash

00:32:02,320 --> 00:32:05,919
so maybe i don't just want to go view

00:32:04,000 --> 00:32:09,200
the security alerts i want to click

00:32:05,919 --> 00:32:13,039
on possibly uh let's see

00:32:09,200 --> 00:32:15,279
where this takes us perfect so

00:32:13,039 --> 00:32:16,960
here's the security alert in action this

00:32:15,279 --> 00:32:18,480
is what your security engineers can use

00:32:16,960 --> 00:32:20,480
your developers can use if they're pac

00:32:18,480 --> 00:32:22,640
making these patches you can actually

00:32:20,480 --> 00:32:23,200
see the cves that are associated with

00:32:22,640 --> 00:32:25,200
this

00:32:23,200 --> 00:32:26,399
vulnerability so these have been

00:32:25,200 --> 00:32:29,279
reported

00:32:26,399 --> 00:32:31,360
and there's a few of them on here so if

00:32:29,279 --> 00:32:34,080
i don't upgrade this it looks like from

00:32:31,360 --> 00:32:37,279
two version 4.17 i'm going to be

00:32:34,080 --> 00:32:39,120
vulnerable in these three ways

00:32:37,279 --> 00:32:40,880
and so we've automated the patching of

00:32:39,120 --> 00:32:42,880
those vulnerabilities

00:32:40,880 --> 00:32:44,880
through this depend about feature this

00:32:42,880 --> 00:32:47,279
automated security fixes feature as it's

00:32:44,880 --> 00:32:49,440
being branded now

00:32:47,279 --> 00:32:50,720
so you see the bot automatically knew

00:32:49,440 --> 00:32:53,440
that there was a security alert it

00:32:50,720 --> 00:32:56,880
subscribed to that feed

00:32:53,440 --> 00:32:58,159
and opened a pull request and again this

00:32:56,880 --> 00:32:59,600
is the one of the interesting things

00:32:58,159 --> 00:33:01,120
about all this happening on github and

00:32:59,600 --> 00:33:03,440
not on any other platform

00:33:01,120 --> 00:33:04,960
is that you can trace all these patches

00:33:03,440 --> 00:33:05,519
back to the commits and who made those

00:33:04,960 --> 00:33:06,880
commits

00:33:05,519 --> 00:33:08,559
and you can see the code that they've

00:33:06,880 --> 00:33:10,159
actually uh you know

00:33:08,559 --> 00:33:12,000
that they've contributed to patch your

00:33:10,159 --> 00:33:14,240
vulnerabilities

00:33:12,000 --> 00:33:16,799
and so in most cases not in this case

00:33:14,240 --> 00:33:18,000
but it'll give you a compatibility score

00:33:16,799 --> 00:33:19,440
so you can see whether or not there's

00:33:18,000 --> 00:33:19,840
going to be a regression introduced to

00:33:19,440 --> 00:33:22,559
this

00:33:19,840 --> 00:33:22,559
through this patch

00:33:22,960 --> 00:33:25,840
and so i can just click merge pull

00:33:24,240 --> 00:33:27,279
request i'm a security engineer i want

00:33:25,840 --> 00:33:30,720
to patch that vulnerability

00:33:27,279 --> 00:33:34,240
and voila right

00:33:30,720 --> 00:33:34,240
my security alert will go away

00:33:34,399 --> 00:33:39,840
so if i go back to the deck

00:33:43,360 --> 00:33:47,200
so there's uh you know one a few other

00:33:45,760 --> 00:33:49,840
things i wanted to talk about just

00:33:47,200 --> 00:33:49,840
really quickly

00:33:50,480 --> 00:33:54,240
i wanted to talk about github and semmle

00:33:52,320 --> 00:33:55,519
so we did an acquisition recently

00:33:54,240 --> 00:33:58,080
some folks have been talking about it

00:33:55,519 --> 00:33:59,919
outside which is great um

00:33:58,080 --> 00:34:02,399
and we're really excited about it

00:33:59,919 --> 00:34:04,559
basically saml is being rebranded as

00:34:02,399 --> 00:34:05,200
github advanced security and the secret

00:34:04,559 --> 00:34:08,720
sauce

00:34:05,200 --> 00:34:11,520
of github advanced security is code ql

00:34:08,720 --> 00:34:13,599
okay so what this allows you to do is it

00:34:11,520 --> 00:34:16,320
allows you to write custom queries

00:34:13,599 --> 00:34:17,679
on your source code to identify any

00:34:16,320 --> 00:34:19,440
vulnerabilities

00:34:17,679 --> 00:34:20,879
semantically that you're introducing as

00:34:19,440 --> 00:34:23,440
a developer

00:34:20,879 --> 00:34:25,040
okay and so there's it's not just that

00:34:23,440 --> 00:34:26,480
you have to write these queries to find

00:34:25,040 --> 00:34:28,399
vulnerabilities but of course

00:34:26,480 --> 00:34:29,520
we'll do what most other providers you'd

00:34:28,399 --> 00:34:31,040
expect that they do is

00:34:29,520 --> 00:34:32,639
there's a pool of known vulnerabilities

00:34:31,040 --> 00:34:34,000
we'll scan for as your developers are

00:34:32,639 --> 00:34:35,359
pushing their code but also

00:34:34,000 --> 00:34:37,679
you can find ones that are maybe

00:34:35,359 --> 00:34:39,679
specific to your your organization

00:34:37,679 --> 00:34:40,800
if you're deprecating a service right

00:34:39,679 --> 00:34:42,240
you want to make sure that no one's

00:34:40,800 --> 00:34:43,919
actually calling out to that service or

00:34:42,240 --> 00:34:45,040
consuming that service so you can write

00:34:43,919 --> 00:34:46,480
queries

00:34:45,040 --> 00:34:48,800
that every time your developer pushes

00:34:46,480 --> 00:34:50,240
their code you would scan for that

00:34:48,800 --> 00:34:52,159
so there's a lot of really interesting

00:34:50,240 --> 00:34:54,159
things that's going on in this space in

00:34:52,159 --> 00:34:55,520
the code scanning space at github

00:34:54,159 --> 00:34:57,040
if you're interested to learn more stop

00:34:55,520 --> 00:35:00,000
by our booth i'd love to have a

00:34:57,040 --> 00:35:00,000
conversation with you

00:35:01,520 --> 00:35:05,760
so again you can see all of these

00:35:04,079 --> 00:35:07,920
features that github is

00:35:05,760 --> 00:35:09,280
investing very heavily in we understand

00:35:07,920 --> 00:35:10,160
our position as being kind of the

00:35:09,280 --> 00:35:11,920
bastions

00:35:10,160 --> 00:35:13,359
of the open source community very

00:35:11,920 --> 00:35:14,160
fortunate to have that community on

00:35:13,359 --> 00:35:16,160
there

00:35:14,160 --> 00:35:18,160
um and we're doing a lot in order to

00:35:16,160 --> 00:35:19,760
make you the enterprise customer or

00:35:18,160 --> 00:35:21,760
or even the open source maintainer or

00:35:19,760 --> 00:35:23,280
the researcher we want to make your

00:35:21,760 --> 00:35:25,280
lives easier we want to make it

00:35:23,280 --> 00:35:31,839
a safer place to play and a safer place

00:35:25,280 --> 00:35:31,839
to consume open source software

00:35:34,160 --> 00:35:37,680
so we're no longer just a source code

00:35:35,680 --> 00:35:39,440
management version control system

00:35:37,680 --> 00:35:41,920
right we still are hopefully at the

00:35:39,440 --> 00:35:43,040
center of of your development tool chain

00:35:41,920 --> 00:35:44,720
where you're storing your code where

00:35:43,040 --> 00:35:46,320
you're building your applications and

00:35:44,720 --> 00:35:47,760
where that innovation really happens but

00:35:46,320 --> 00:35:49,839
we're making investments

00:35:47,760 --> 00:35:51,760
in the broader sdlc and that broader

00:35:49,839 --> 00:35:54,240
application life cycle

00:35:51,760 --> 00:35:55,200
so the vision for github is certainly

00:35:54,240 --> 00:35:56,640
transforming

00:35:55,200 --> 00:35:58,880
we're going to stay friendly to our

00:35:56,640 --> 00:36:01,920
partners in the ecosystem or helping you

00:35:58,880 --> 00:36:13,839
do what you love to do and do so well

00:36:01,920 --> 00:36:13,839
and thank you so much for your time

00:36:14,010 --> 00:36:17,239
[Music]

00:36:21,360 --> 00:36:26,000
[Music]

00:36:23,920 --> 00:36:26,000

YouTube URL: https://www.youtube.com/watch?v=dQrCw7Z6wHQ


