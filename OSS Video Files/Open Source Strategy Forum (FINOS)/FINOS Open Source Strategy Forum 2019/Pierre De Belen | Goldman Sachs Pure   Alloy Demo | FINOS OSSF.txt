Title: Pierre De Belen | Goldman Sachs Pure   Alloy Demo | FINOS OSSF
Publication date: 2020-02-27
Playlist: FINOS Open Source Strategy Forum 2019
Description: 
	The FINOS Open Source Strategy Forum (OSSF) Virtual 2020 Registration and schedule is live:

►► More information HERE: https://events.linuxfoundation.org/open-source-strategy-forum/
►► Register HERE: https://events.linuxfoundation.org/open-source-strategy-forum/register/
►► Schedule HERE: https://events.linuxfoundation.org/open-source-strategy-forum/program/schedule/

See all of the FINOS Open Source Strategy Forum (OSSF) 2019 talks at our website:
►► OSSF 2019 Recap: https://www.finos.org/ossf-2019-recap

Learn more about FINOS and how we deliver the power of open source to financial services:
►► FINOS: https://www.finos.org/
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬

PIERRE DE BELEN & ASHISH KUTHIALA | "GOLDMAN SACHS DEMO OF PURE / ALLOY CONTRIBUTION" | FINOS OSSF 2019

►► More information on the Alloy Project: https://alloy.finos.org/

►► View Pierre and Ashish's demo on the FINOS website here: https://www.finos.org/ossf-2019-speaker-pierre-de-belen

►► View Neema's Raphael's fireside chat about the Goldman Sachs contribution, on the FINOS website here: https://www.finos.org/ossf-2019-speaker-neema-raphael

Pierre De Belen is a Managing Director for Goldman Sachs, and Ashish Kuthiala is Senior Director of Strategic Marketing at GitLab. At OSSF in New York, they both presented and demoed FINOS Platinum member Goldman Sachs open sourcing of two products - a modeling language internally named "PURE", and a visual modeling platform that generates PURE models known in Goldman Sachs as "Alloy" - into FINOS. 

WHAT IS PURE?

PURE is a modeling language inspired in part by languages such as the Object Constraint Language (OCL) and UML. PURE also has many elements of a functional programming language. Goldman Sachs uses PURE to create and construct internal models for functions such as reporting and clearing. 

WHAT IS ALLOY?

Alloy is a visual modeling environment and system that creates, maintains, and helps distribute models built in PURE. Behind the scenes, Alloy uses git, (fellow FINOS member) Gitlab for its SDLC (software development lifecycle), and standard source control concepts to manage changes to, and reviews of, models. Alloy can also generate code in languages and formats such as SQL, JSON, JSON Schema (and, internally to Goldman Sachs, SLANG) in order to import and update target systems & infrastructure w/ revised model definitions/extensions.

PIERRE'S BIO

Pierre De Belen is a Managing Director at Goldman Sachs where he leads the Data Model Engineering team, tasked with defining and implementing tools for data specification, transformation and consumption across the firm. He designed and led the implementation of several modeling frameworks used across the firm to query data easily and efficiently while providing advanced lineage information.

ASHISH'S BIO

Ashish Kuthiala is the Senior Director for Strategic Marketing at GitLab and leads the product marketing, technical marketing, competitive intelligence, analyst relations, customer references, partner and channel marketing teams at GitLab.

Ashish brings more than 20 years of experience in the software industry to his role at GitLab. Prior to this role, Ashish was Director for Strategy and Marketing for Hewlett Packard Enterprise’s DevOps portfolio, Vice-President of Marketing of Electric Cloud (acquired by CloudBees), Senior Director of Product Marketing at AccelOps (acquired by Fortinet), and held various roles at Hewlett-Packard, leading teams across various functions including marketing, product development, product management, and R&D. Previously, Ashish held various software development roles at ReplayTV (acquired by DIRECTV) and Alltel (acquired by Fidelity Information Services).
 
Born in Buenos Aires, Ashish has a diverse international background having grown up in 7 countries and fluent in multiple languages. Based in Austin, TX, Ashish has an MBA from the Kellogg Graduate School of Management and holds Masters and Bachelors degrees in Computer Science and Engineering.
Captions: 
	00:00:03,690 --> 00:00:11,890
[Music]

00:00:12,799 --> 00:00:18,539
thanks for coming and listening to what

00:00:16,260 --> 00:00:22,199
working - what I'm going to show you I

00:00:18,539 --> 00:00:24,449
mean witnessing the the code I'm going

00:00:22,199 --> 00:00:28,680
to do a demo but I'm going to start by

00:00:24,449 --> 00:00:31,309
you know explain how we've been using

00:00:28,680 --> 00:00:34,290
the system that were open sourcing

00:00:31,309 --> 00:00:37,050
within the forum so that you can see

00:00:34,290 --> 00:00:39,210
it's pretty big system we are open

00:00:37,050 --> 00:00:41,010
sourcing everything at the end but as

00:00:39,210 --> 00:00:42,719
part of the trial we're going to show a

00:00:41,010 --> 00:00:44,309
subset of the system so it is pretty

00:00:42,719 --> 00:00:46,230
easy for people to use specially that

00:00:44,309 --> 00:00:48,809
we're pushing everything outside of our

00:00:46,230 --> 00:00:52,079
environment so that's something that our

00:00:48,809 --> 00:00:53,879
more is tricky to to push so I'm going

00:00:52,079 --> 00:00:55,800
to go for that so what were using pure

00:00:53,879 --> 00:00:58,050
for in government so we're muddling

00:00:55,800 --> 00:00:59,760
things so while modeling concepts that

00:00:58,050 --> 00:01:00,750
people are working within the banks and

00:00:59,760 --> 00:01:03,090
we're making sure that they are

00:01:00,750 --> 00:01:05,519
interconnected so it can be like any

00:01:03,090 --> 00:01:08,090
kind of concept we model credit cards we

00:01:05,519 --> 00:01:09,750
model credit default swap we model

00:01:08,090 --> 00:01:11,369
employees we model pretty much

00:01:09,750 --> 00:01:13,080
everything and all information we have

00:01:11,369 --> 00:01:16,560
in the film so that people can actually

00:01:13,080 --> 00:01:19,170
navigate it easily so this model that we

00:01:16,560 --> 00:01:20,670
have that enable navigation we do many

00:01:19,170 --> 00:01:22,560
things with them so we map them to

00:01:20,670 --> 00:01:24,570
infrastructure because we want to make

00:01:22,560 --> 00:01:26,189
sure that all models execute it's not

00:01:24,570 --> 00:01:28,439
only about a matter of like showing nice

00:01:26,189 --> 00:01:30,540
pictures to people to communicate it's

00:01:28,439 --> 00:01:31,890
also about using the models to retrieve

00:01:30,540 --> 00:01:34,710
informations and to play with

00:01:31,890 --> 00:01:36,210
informations the models can also be

00:01:34,710 --> 00:01:38,790
valuable if you don't map them to

00:01:36,210 --> 00:01:41,220
databases like for example when you want

00:01:38,790 --> 00:01:43,979
to define really complex schemas for

00:01:41,220 --> 00:01:46,110
derivatives are really deep information

00:01:43,979 --> 00:01:48,630
that you need to store in documents the

00:01:46,110 --> 00:01:50,729
models are really valuable to our

00:01:48,630 --> 00:01:52,710
platform does that a little bit more

00:01:50,729 --> 00:01:56,909
advanced than usual because we can also

00:01:52,710 --> 00:01:58,979
support constraints - to do validation

00:01:56,909 --> 00:02:00,869
we can support some derivations actually

00:01:58,979 --> 00:02:02,670
the model we can support making from

00:02:00,869 --> 00:02:05,130
model to model so that you can transfer

00:02:02,670 --> 00:02:07,849
a structure of information you have in

00:02:05,130 --> 00:02:10,709
one environment to another environments

00:02:07,849 --> 00:02:12,450
so once we get these models that are

00:02:10,709 --> 00:02:13,980
actually mapped to systems what we can

00:02:12,450 --> 00:02:15,599
do is actually provide ap

00:02:13,980 --> 00:02:19,080
guys thank you for people to use the

00:02:15,599 --> 00:02:20,610
data so it can take many forms so we

00:02:19,080 --> 00:02:23,250
have tools that I'm a demo at the end

00:02:20,610 --> 00:02:25,230
that let people self-serve own

00:02:23,250 --> 00:02:27,110
information so you know they have a

00:02:25,230 --> 00:02:30,030
model information they can understand

00:02:27,110 --> 00:02:32,280
they can drag-and-drop the information

00:02:30,030 --> 00:02:35,129
they want to transfer or to access

00:02:32,280 --> 00:02:36,450
actually in a system they execute and

00:02:35,129 --> 00:02:38,430
they can retrieve the information so a

00:02:36,450 --> 00:02:41,879
lot of business users are using this way

00:02:38,430 --> 00:02:44,640
to acquire information in the form we

00:02:41,879 --> 00:02:46,200
can also build data services so that you

00:02:44,640 --> 00:02:47,940
know if it's not a person that wants to

00:02:46,200 --> 00:02:49,680
self-serve and get information and we

00:02:47,940 --> 00:02:51,930
want to automate actually true love

00:02:49,680 --> 00:02:53,519
information in the in the film like we

00:02:51,930 --> 00:02:55,530
can say well this information that I

00:02:53,519 --> 00:02:58,140
described this way can you build a

00:02:55,530 --> 00:03:01,980
service and after system can connect an

00:02:58,140 --> 00:03:04,400
equal data for these services so so to

00:03:01,980 --> 00:03:08,030
give you like an idea of the the usage

00:03:04,400 --> 00:03:11,129
we have 1,000 people in the firm

00:03:08,030 --> 00:03:12,900
actively modifying domain like the the

00:03:11,129 --> 00:03:14,730
domain and the model so I'm not speaking

00:03:12,900 --> 00:03:18,299
on people developing the platform which

00:03:14,730 --> 00:03:20,760
is my team she's upset but all the

00:03:18,299 --> 00:03:23,790
entire community of developers and

00:03:20,760 --> 00:03:25,319
different business unit publishing and

00:03:23,790 --> 00:03:26,700
showing models about the information

00:03:25,319 --> 00:03:28,859
that they walk with every day and

00:03:26,700 --> 00:03:31,919
interconnecting this information

00:03:28,859 --> 00:03:34,019
together we have around 2000 SVN commits

00:03:31,919 --> 00:03:36,750
and I speaking with SVN here I'm walking

00:03:34,019 --> 00:03:38,519
while working with gitlab actively on

00:03:36,750 --> 00:03:39,900
the new version that actually I'm going

00:03:38,519 --> 00:03:42,359
to demo the current version in

00:03:39,900 --> 00:03:45,090
production is using a proprietary

00:03:42,359 --> 00:03:47,609
SDHC that we have in our firm that is

00:03:45,090 --> 00:03:49,139
actually backed on as via but like the

00:03:47,609 --> 00:03:50,730
modification we are doing right now as

00:03:49,139 --> 00:03:52,530
part of open sourcing is to move to

00:03:50,730 --> 00:03:55,549
something more open which is which is

00:03:52,530 --> 00:03:57,780
good lab we actually actually

00:03:55,549 --> 00:04:01,590
aggressively release the system every

00:03:57,780 --> 00:04:03,989
day so whatever modification we do which

00:04:01,590 --> 00:04:06,840
productions really really quickly so

00:04:03,989 --> 00:04:09,840
there's a test strategy on modification

00:04:06,840 --> 00:04:12,030
that is very AV where any kind of

00:04:09,840 --> 00:04:14,129
modification in the environment is going

00:04:12,030 --> 00:04:15,720
to run photos for any modification and

00:04:14,129 --> 00:04:18,510
any point in time so we have a batteries

00:04:15,720 --> 00:04:21,500
of server that ensure continuously

00:04:18,510 --> 00:04:24,090
that the metadata is actually doing

00:04:21,500 --> 00:04:25,960
configure the right way to achieve the

00:04:24,090 --> 00:04:26,949
goals that people want to have

00:04:25,960 --> 00:04:30,220
when they enter information in the

00:04:26,949 --> 00:04:31,600
system we have around 62,000 classes so

00:04:30,220 --> 00:04:34,210
class this is kind of a building blocks

00:04:31,600 --> 00:04:36,340
of a model so concept managing the

00:04:34,210 --> 00:04:38,830
system right now as of yesterday because

00:04:36,340 --> 00:04:42,160
I wrote that yesterday we have around

00:04:38,830 --> 00:04:43,870
three on 3,600 mappings and mappings are

00:04:42,160 --> 00:04:46,240
you know this relationship work between

00:04:43,870 --> 00:04:48,220
the models on database or model to model

00:04:46,240 --> 00:04:49,930
themself if you want to translate from

00:04:48,220 --> 00:04:54,400
one model of representation to another

00:04:49,930 --> 00:04:57,220
one we actually have mother to 2156

00:04:54,400 --> 00:04:59,710
databases that represent fourteen

00:04:57,220 --> 00:05:01,870
thousand five hundred six hundred six

00:04:59,710 --> 00:05:03,669
hundred tables so that's all this kind

00:05:01,870 --> 00:05:08,400
of infrastructure information that

00:05:03,669 --> 00:05:12,009
people enter that we map to concept

00:05:08,400 --> 00:05:13,930
environment so the system is used a lot

00:05:12,009 --> 00:05:15,970
in cheapest one reporting so if we want

00:05:13,930 --> 00:05:17,889
to transfer information and publish

00:05:15,970 --> 00:05:20,710
information outside the firm or even

00:05:17,889 --> 00:05:22,599
inside the firm to be fair but also in

00:05:20,710 --> 00:05:26,159
the trade role so we have models that

00:05:22,599 --> 00:05:29,080
are defined that represent information

00:05:26,159 --> 00:05:31,710
that are actually acquired and executed

00:05:29,080 --> 00:05:35,320
as part of the trade flow in the system

00:05:31,710 --> 00:05:37,240
it represents without the trade flow 18

00:05:35,320 --> 00:05:39,310
million execution a day so there's 18

00:05:37,240 --> 00:05:41,830
million queries that goes to the system

00:05:39,310 --> 00:05:44,259
to get data retrieve data and actually

00:05:41,830 --> 00:05:46,090
move them in our system so it's pretty

00:05:44,259 --> 00:05:48,789
used it's used a lot actually no

00:05:46,090 --> 00:05:51,430
environment and we're already excited to

00:05:48,789 --> 00:05:52,930
move it outside and to to make sure that

00:05:51,430 --> 00:05:57,460
we can actually walk with you on mothers

00:05:52,930 --> 00:06:01,449
and on platforms so that's that's for

00:05:57,460 --> 00:06:04,030
the presentation so today user interact

00:06:01,449 --> 00:06:07,419
with pure writing ASCII code so it's

00:06:04,030 --> 00:06:09,909
really code based that we commit into a

00:06:07,419 --> 00:06:12,639
papaya toy as easy as I said before as

00:06:09,909 --> 00:06:14,800
part of open sourcing we build this

00:06:12,639 --> 00:06:16,930
fellow in layer that allows us to have

00:06:14,800 --> 00:06:20,169
services and make the system modular

00:06:16,930 --> 00:06:24,370
around actually this pure engine that we

00:06:20,169 --> 00:06:26,320
defined and which switches jersey from

00:06:24,370 --> 00:06:29,169
proprietary to get lab actually so that

00:06:26,320 --> 00:06:32,800
we know get lab provide rich api's that

00:06:29,169 --> 00:06:35,349
allows us to easily actually build build

00:06:32,800 --> 00:06:37,599
build integration with this dlc using

00:06:35,349 --> 00:06:39,500
you eyes that are a little bit easier to

00:06:37,599 --> 00:06:42,710
use than regular last year see

00:06:39,500 --> 00:06:44,930
so that said I mean to jump on the can't

00:06:42,710 --> 00:06:46,700
well I can speak a bit about the

00:06:44,930 --> 00:06:49,490
positioning of the demo the tool I'm

00:06:46,700 --> 00:06:51,130
going to demo you now in the ecosystem

00:06:49,490 --> 00:06:53,930
of tools that were going to open source

00:06:51,130 --> 00:06:56,150
we have foundry which is the IDE of

00:06:53,930 --> 00:06:58,670
models and I'm going to demo as soon as

00:06:56,150 --> 00:07:01,040
possible from we can write metadata that

00:06:58,670 --> 00:07:03,640
goes to data browser which is a browser

00:07:01,040 --> 00:07:06,620
that lets you and less business users

00:07:03,640 --> 00:07:08,840
execute queries again the graph of

00:07:06,620 --> 00:07:10,970
information that we have that can go

00:07:08,840 --> 00:07:13,010
into a cube system so people in finance

00:07:10,970 --> 00:07:15,830
you know deep breath and complex

00:07:13,010 --> 00:07:18,230
structures go so far rather people like

00:07:15,830 --> 00:07:20,480
to do grid cubes and key votes so we

00:07:18,230 --> 00:07:21,740
have a system that simplified she's a

00:07:20,480 --> 00:07:23,570
model for some of these case of

00:07:21,740 --> 00:07:26,360
reporting that allow people to cube

00:07:23,570 --> 00:07:29,180
information and we can actually go on

00:07:26,360 --> 00:07:30,740
the service environment that product is

00:07:29,180 --> 00:07:33,020
some of the queries and some of the

00:07:30,740 --> 00:07:40,490
specifications people defined to be able

00:07:33,020 --> 00:07:43,640
to get data so I want to show you some 3

00:07:40,490 --> 00:07:45,470
so that's hungry when when you want to

00:07:43,640 --> 00:07:47,210
connect the first thing you can do is

00:07:45,470 --> 00:07:49,970
pick a project so these projects are

00:07:47,210 --> 00:07:52,430
being get lab projects that are you know

00:07:49,970 --> 00:07:55,850
covered by regular is DRC I'm going to

00:07:52,430 --> 00:07:59,210
go with an empty project and defined a

00:07:55,850 --> 00:08:01,130
workspace actually I can work with which

00:07:59,210 --> 00:08:02,930
behind the scene translate to a branch

00:08:01,130 --> 00:08:04,610
but when you're a user you don't really

00:08:02,930 --> 00:08:07,640
know that you just you actually that you

00:08:04,610 --> 00:08:09,200
you have a workspace you can walk in on

00:08:07,640 --> 00:08:11,810
top of that so I can start to define

00:08:09,200 --> 00:08:13,580
models so I have packages like a shits

00:08:11,810 --> 00:08:15,500
are important when you start to scale is

00:08:13,580 --> 00:08:17,840
in model because they have a first layer

00:08:15,500 --> 00:08:19,460
of text on I mean that allow you to make

00:08:17,840 --> 00:08:24,650
sense of it all the information that

00:08:19,460 --> 00:08:27,140
sharing systems so I'm going to say main

00:08:24,650 --> 00:08:29,300
package and I can start to define

00:08:27,140 --> 00:08:31,160
classes and that the building blocks are

00:08:29,300 --> 00:08:36,560
speaking about from a model perspective

00:08:31,160 --> 00:08:38,830
so I can say I have a person can they

00:08:36,560 --> 00:08:38,830
find

00:08:42,500 --> 00:08:50,450
so now I can go and say that firm it's

00:08:47,280 --> 00:08:50,450
going 12 employees

00:08:52,130 --> 00:08:57,060
so now I start to have a modern of

00:08:55,380 --> 00:08:58,800
information that defines a graph so I

00:08:57,060 --> 00:09:01,170
lean concept together so it's not

00:08:58,800 --> 00:09:03,600
primitive types or Warka integers

00:09:01,170 --> 00:09:05,880
they're actually types that actually let

00:09:03,600 --> 00:09:07,410
you know people express information in a

00:09:05,880 --> 00:09:10,770
relationship in a way there is a little

00:09:07,410 --> 00:09:13,260
bit easier now I've been clicking and

00:09:10,770 --> 00:09:15,450
I'm showing you how to do you know this

00:09:13,260 --> 00:09:18,720
kind of like interaction there is more

00:09:15,450 --> 00:09:20,670
UI driven so and we did that to open the

00:09:18,720 --> 00:09:22,950
malinka photo operations people or

00:09:20,670 --> 00:09:25,500
people that are not technologists behind

00:09:22,950 --> 00:09:28,530
us in the engine that were in pew I

00:09:25,500 --> 00:09:31,290
still active so we actually just edit

00:09:28,530 --> 00:09:33,390
code while we actually play on the UI so

00:09:31,290 --> 00:09:36,450
you can pretty much if you want bypass

00:09:33,390 --> 00:09:41,430
the UI and go behind and write actual

00:09:36,450 --> 00:09:43,020
specification in ASCII so the

00:09:41,430 --> 00:09:45,630
interesting thing we did that because

00:09:43,020 --> 00:09:50,010
one of the feedback we add from people

00:09:45,630 --> 00:09:51,600
in that it's all nice your UI but I want

00:09:50,010 --> 00:09:53,400
to cut and paste I want to work with

00:09:51,600 --> 00:09:55,830
people I want to actually be able to go

00:09:53,400 --> 00:09:57,540
faster so that's why we keep both mode

00:09:55,830 --> 00:10:01,200
available for people to be able to

00:09:57,540 --> 00:10:03,170
quickly enter information oh you know

00:10:01,200 --> 00:10:08,210
start to learn about the system by just

00:10:03,170 --> 00:10:11,370
dropping and clicking some some concepts

00:10:08,210 --> 00:10:12,990
so the up to now you know there's no

00:10:11,370 --> 00:10:14,760
real difference between what I show you

00:10:12,990 --> 00:10:16,680
and our ground modeling environment like

00:10:14,760 --> 00:10:20,040
specially UML I mean it's really UML

00:10:16,680 --> 00:10:22,290
driven being the same what we start to

00:10:20,040 --> 00:10:24,690
do which is not usual is that you can

00:10:22,290 --> 00:10:26,640
define formal constraints and formal

00:10:24,690 --> 00:10:28,740
derivation and formal transformation and

00:10:26,640 --> 00:10:30,600
we compile actually this kind of

00:10:28,740 --> 00:10:32,340
expression that you write in the system

00:10:30,600 --> 00:10:35,640
so that we can then translate them to

00:10:32,340 --> 00:10:37,650
different language of execution Java SQL

00:10:35,640 --> 00:10:41,040
or whatever actually people want to

00:10:37,650 --> 00:10:42,750
execute this connection zone so I can

00:10:41,040 --> 00:10:47,060
define a constraint and say for example

00:10:42,750 --> 00:10:47,060
that the size of a company need to have

00:10:50,310 --> 00:10:54,670
greater than two I mean it's kind of its

00:10:53,020 --> 00:10:56,290
kind of random so this kind of

00:10:54,670 --> 00:10:58,210
expression is compared being the scene

00:10:56,290 --> 00:11:00,430
so if I make a mistake for example and I

00:10:58,210 --> 00:11:01,900
type completely the wrong way I would

00:11:00,430 --> 00:11:03,640
have a feedback that actually the

00:11:01,900 --> 00:11:06,700
information that I entered is wrong

00:11:03,640 --> 00:11:09,940
so same if I decide to not return a

00:11:06,700 --> 00:11:12,160
boolean expression I'm going to have

00:11:09,940 --> 00:11:15,250
like yeah no we don't actually support

00:11:12,160 --> 00:11:17,980
that so because we we enter actually

00:11:15,250 --> 00:11:20,530
this this system of code the system of

00:11:17,980 --> 00:11:22,060
potential execution the SDS is really

00:11:20,530 --> 00:11:23,770
key for us because it means that

00:11:22,060 --> 00:11:25,570
whatever we enter on this morning

00:11:23,770 --> 00:11:28,930
environment will most likely have an

00:11:25,570 --> 00:11:30,910
impact on some computation that we

00:11:28,930 --> 00:11:33,730
actually defined in our system or some

00:11:30,910 --> 00:11:35,740
data transform the is sensitive to some

00:11:33,730 --> 00:11:38,860
report or some like number that are very

00:11:35,740 --> 00:11:40,690
important so we cannot really have a

00:11:38,860 --> 00:11:44,140
moaning environment that is really just

00:11:40,690 --> 00:11:46,420
about drawing pictures it executes it

00:11:44,140 --> 00:11:51,250
has to actually be governed by isn't by

00:11:46,420 --> 00:11:53,350
NSERC so what you can do too is define

00:11:51,250 --> 00:11:56,500
derivation so I'll go quick on that but

00:11:53,350 --> 00:11:59,740
you can define that some information is

00:11:56,500 --> 00:12:05,920
build built out of kozo information so I

00:11:59,740 --> 00:12:07,900
could say that so in this case I'm

00:12:05,920 --> 00:12:10,030
saying that employees is the first

00:12:07,900 --> 00:12:11,590
employee the system tells me that the

00:12:10,030 --> 00:12:13,390
type are written in the wrong type

00:12:11,590 --> 00:12:16,150
because I said that it was a string but

00:12:13,390 --> 00:12:18,430
actually it should be a person so

00:12:16,150 --> 00:12:20,110
actually I can change that and I can

00:12:18,430 --> 00:12:22,180
compile and now I have more information

00:12:20,110 --> 00:12:24,880
that I ends of the system so now I can

00:12:22,180 --> 00:12:28,450
also add other types like enumeration

00:12:24,880 --> 00:12:34,030
which is a convenient type so can say

00:12:28,450 --> 00:12:36,850
that incorporation type and I can say

00:12:34,030 --> 00:12:39,310
it's a narration cop so that's one of

00:12:36,850 --> 00:12:41,470
the type that can dynamically be created

00:12:39,310 --> 00:12:43,540
beyond the class we are also going to

00:12:41,470 --> 00:12:45,670
add units and modules as part of the

00:12:43,540 --> 00:12:47,890
system for the roadies in January and

00:12:45,670 --> 00:12:49,780
for the test so that there are

00:12:47,890 --> 00:12:52,120
derivatives like commodities can be

00:12:49,780 --> 00:12:53,920
modeled like more accurately like at

00:12:52,120 --> 00:12:56,530
this point you know primitive types if

00:12:53,920 --> 00:12:58,180
you want all units and measures are not

00:12:56,530 --> 00:13:01,030
really necessary you can at this point

00:12:58,180 --> 00:13:02,680
define things more accurately and saying

00:13:01,030 --> 00:13:05,320
you know I have

00:13:02,680 --> 00:13:07,770
you need five and it's pounds like four

00:13:05,320 --> 00:13:09,820
if you want to trade metals for example

00:13:07,770 --> 00:13:11,980
instead of like having this information

00:13:09,820 --> 00:13:14,320
this part in the model in a way people

00:13:11,980 --> 00:13:16,720
on don't understand we put that as part

00:13:14,320 --> 00:13:17,740
of the type system build energy bond top

00:13:16,720 --> 00:13:19,959
of its that you can even build

00:13:17,740 --> 00:13:21,940
operations on this type and do automatic

00:13:19,959 --> 00:13:23,800
conversions so again like for

00:13:21,940 --> 00:13:25,690
derivatives and communities is really

00:13:23,800 --> 00:13:30,040
really convenient to have this kind of

00:13:25,690 --> 00:13:35,110
facility in the context of modeling so

00:13:30,040 --> 00:13:38,940
you can do studio types we support

00:13:35,110 --> 00:13:46,300
multiple inheritance in the model so you

00:13:38,940 --> 00:13:48,580
can actually define about a community so

00:13:46,300 --> 00:13:50,830
you can actually and you have a view for

00:13:48,580 --> 00:13:54,610
each actually operation that you do that

00:13:50,830 --> 00:13:56,529
give you in synthetic kind of you know

00:13:54,610 --> 00:14:00,430
overview of what you've been editing in

00:13:56,529 --> 00:14:02,680
the model you can extend the model using

00:14:00,430 --> 00:14:04,510
profiles so if you don't have you have

00:14:02,680 --> 00:14:06,970
metadata that you want to enter in the

00:14:04,510 --> 00:14:08,860
environment but Gideon we didn't think

00:14:06,970 --> 00:14:11,020
about it as part of a meter model you

00:14:08,860 --> 00:14:13,750
can extend it so you can do an extension

00:14:11,020 --> 00:14:16,750
for example and if you want to say I

00:14:13,750 --> 00:14:20,110
want to add my documentation the way I

00:14:16,750 --> 00:14:26,100
want I can add a tag which is a dog can

00:14:20,110 --> 00:14:28,600
take can add a stereotype is important

00:14:26,100 --> 00:14:29,500
so let's my extension profile now if I

00:14:28,600 --> 00:14:33,240
go in the forum

00:14:29,500 --> 00:14:35,830
I can say oh let's add documentation

00:14:33,240 --> 00:14:41,200
ipv6 sanctioned dog and say

00:14:35,830 --> 00:14:42,820
documentation for the firm type so you

00:14:41,200 --> 00:14:45,060
can actually and you can see like the

00:14:42,820 --> 00:14:47,620
synthetic view like changing with that

00:14:45,060 --> 00:14:49,570
we can also tag with the importance

00:14:47,620 --> 00:14:51,790
Tarot type that I showed you so it's

00:14:49,570 --> 00:14:52,360
very powerful to be able to extend the

00:14:51,790 --> 00:14:54,160
metamodel

00:14:52,360 --> 00:14:56,290
extend the kind of information that you

00:14:54,160 --> 00:14:58,450
want to enter in the system and later

00:14:56,290 --> 00:15:01,000
potentially use it and trigger it with

00:14:58,450 --> 00:15:03,190
compilers because it can be then

00:15:01,000 --> 00:15:05,860
leverage to impact the way we transform

00:15:03,190 --> 00:15:08,350
information beyond the scene so speaking

00:15:05,860 --> 00:15:10,089
about transform so all the system you

00:15:08,350 --> 00:15:12,190
know as much as I showed you like this

00:15:10,089 --> 00:15:14,140
view which is the time you and this view

00:15:12,190 --> 00:15:15,260
which is more the ASCII view of

00:15:14,140 --> 00:15:17,690
everything I enter

00:15:15,260 --> 00:15:20,540
compatible with the pure language the

00:15:17,690 --> 00:15:24,940
native representation of the system is

00:15:20,540 --> 00:15:27,590
actually JSON and you can interact and

00:15:24,940 --> 00:15:30,170
plug information in the system using

00:15:27,590 --> 00:15:32,600
services using this JSON specification

00:15:30,170 --> 00:15:36,110
now you know like it's very interesting

00:15:32,600 --> 00:15:37,580
to look at and play with the UI because

00:15:36,110 --> 00:15:39,830
you can actually start to learn about

00:15:37,580 --> 00:15:41,800
the structure that we create based on

00:15:39,830 --> 00:15:44,420
what input you enter in the system but

00:15:41,800 --> 00:15:46,280
once you see that and you look at the

00:15:44,420 --> 00:15:48,590
API we provide you can build your own

00:15:46,280 --> 00:15:50,210
tools to enter metadata and to

00:15:48,590 --> 00:15:53,240
contribute to the graph of information

00:15:50,210 --> 00:15:55,400
we have use cases right now where some

00:15:53,240 --> 00:15:57,320
departments in government have been

00:15:55,400 --> 00:15:59,600
building their own UI in their own way

00:15:57,320 --> 00:16:02,300
to enter metadata in the same repository

00:15:59,600 --> 00:16:04,510
continue contributing to the graph but

00:16:02,300 --> 00:16:06,860
with a different kind of interface not

00:16:04,510 --> 00:16:08,630
you know using maybe a poor tool like

00:16:06,860 --> 00:16:10,220
this one but something simplified in the

00:16:08,630 --> 00:16:12,320
context of mortgage management's or

00:16:10,220 --> 00:16:14,060
something like that but you can also

00:16:12,320 --> 00:16:16,100
start to use transformation that give

00:16:14,060 --> 00:16:17,510
you a transformation in those are

00:16:16,100 --> 00:16:19,280
non-weight so for example what does it

00:16:17,510 --> 00:16:21,050
look in Java you know everything entered

00:16:19,280 --> 00:16:23,360
well you know thank you as a java code

00:16:21,050 --> 00:16:25,490
there is representative of what I just

00:16:23,360 --> 00:16:28,360
typed and also what does it look in

00:16:25,490 --> 00:16:31,520
slang so slang is our internal language

00:16:28,360 --> 00:16:33,470
that we use but we use actually code

00:16:31,520 --> 00:16:36,620
generation to be able to interface and

00:16:33,470 --> 00:16:39,800
integrate activities environment so I

00:16:36,620 --> 00:16:42,500
could back on the phone side ago so now

00:16:39,800 --> 00:16:44,330
you know I've been modeling things but

00:16:42,500 --> 00:16:46,610
what do I do with that so one use case

00:16:44,330 --> 00:16:49,580
that we have a lot is mapping ok so if I

00:16:46,610 --> 00:16:51,190
want a little macking but before that

00:16:49,580 --> 00:16:53,390
I'm going to shoot diagrams because

00:16:51,190 --> 00:16:55,400
again these kind of tools are really

00:16:53,390 --> 00:16:58,340
important for communication so building

00:16:55,400 --> 00:17:00,200
pictures and a layout of information and

00:16:58,340 --> 00:17:02,720
it's correlation is really really key so

00:17:00,200 --> 00:17:05,930
if I want to show a diagram of

00:17:02,720 --> 00:17:09,920
information I just had I can just create

00:17:05,930 --> 00:17:14,570
a diagram and just say I have my firm my

00:17:09,920 --> 00:17:16,130
legal entity behind and you can know you

00:17:14,570 --> 00:17:18,770
can delegate actually the diagram

00:17:16,130 --> 00:17:21,470
directly in the UI so I can say well

00:17:18,770 --> 00:17:24,500
this person you know extract it so I

00:17:21,470 --> 00:17:28,790
extract my person and I can see that my

00:17:24,500 --> 00:17:29,270
person as employees this way yeah I see

00:17:28,790 --> 00:17:30,920
actually

00:17:29,270 --> 00:17:33,800
when I did my diagrams that I forgot

00:17:30,920 --> 00:17:35,540
actually to add properties in person so

00:17:33,800 --> 00:17:38,420
that I can actually directly add the

00:17:35,540 --> 00:17:54,020
properties on the diagram and add

00:17:38,420 --> 00:17:55,760
actually first name last name so now I

00:17:54,020 --> 00:17:58,010
can actually use that so this one is

00:17:55,760 --> 00:17:59,780
very simple I'm going to show you I hope

00:17:58,010 --> 00:18:01,790
after you know models are more complex

00:17:59,780 --> 00:18:03,860
that comes out of derivative we're

00:18:01,790 --> 00:18:06,260
really having the layout is key like

00:18:03,860 --> 00:18:08,560
giving a big picture for communication

00:18:06,260 --> 00:18:11,090
for definition to spread the information

00:18:08,560 --> 00:18:13,250
we found that diagram was one of the

00:18:11,090 --> 00:18:15,890
most efficient actually a way to push

00:18:13,250 --> 00:18:20,300
information now I can actually add a

00:18:15,890 --> 00:18:27,670
mapping that things that's when things

00:18:20,300 --> 00:18:27,670
start to be cool where I'm going to add

00:18:30,370 --> 00:18:38,500
I mean to say that that's as a full name

00:18:42,560 --> 00:18:47,450
so now I can go in my mapping and say if

00:18:45,080 --> 00:18:49,970
I wanted to map my simplified employee

00:18:47,450 --> 00:18:52,190
okay it's going to ask me what I want to

00:18:49,970 --> 00:18:54,020
map to so pure I mean that I'm going to

00:18:52,190 --> 00:18:55,430
map to another model model which I'm

00:18:54,020 --> 00:18:58,180
going to show but it could be also an

00:18:55,430 --> 00:19:00,620
operation like a union of different

00:18:58,180 --> 00:19:02,060
mappings or relational which would go

00:19:00,620 --> 00:19:03,830
actually to a database and do

00:19:02,060 --> 00:19:05,510
transformation you know but let's say I

00:19:03,830 --> 00:19:08,720
want to map to pure which is Nizam model

00:19:05,510 --> 00:19:11,870
I can go there and say okay I want to

00:19:08,720 --> 00:19:13,610
map that to person so if it were a

00:19:11,870 --> 00:19:15,590
database on the right side that would

00:19:13,610 --> 00:19:18,860
see table and join something like that

00:19:15,590 --> 00:19:21,170
EW I see actual types and properties and

00:19:18,860 --> 00:19:23,120
I can see that my full name here is what

00:19:21,170 --> 00:19:24,620
the property of simplified employee I

00:19:23,120 --> 00:19:27,260
want to map to now I can drag and drop

00:19:24,620 --> 00:19:28,790
and say okay I want the first name and

00:19:27,260 --> 00:19:32,090
the last name and I want to concatenate

00:19:28,790 --> 00:19:34,010
them again that's all these things are

00:19:32,090 --> 00:19:36,440
compiled expressions so you don't like

00:19:34,010 --> 00:19:38,510
you again if I'm sure if I change them

00:19:36,440 --> 00:19:41,330
thank you it's going to tell me it is

00:19:38,510 --> 00:19:43,100
not walking and now another again by

00:19:41,330 --> 00:19:46,010
making the the next thing I want to do

00:19:43,100 --> 00:19:48,170
is to start to test it first to be able

00:19:46,010 --> 00:19:49,790
to feedback but what I enter to see that

00:19:48,170 --> 00:19:51,860
you know does it do what I want to do

00:19:49,790 --> 00:19:53,720
but also to write unit tests that we're

00:19:51,860 --> 00:19:55,670
going to run going forward to validate

00:19:53,720 --> 00:19:58,700
that whatever platform change we do or

00:19:55,670 --> 00:20:00,700
whatever on underlying infrastructure we

00:19:58,700 --> 00:20:04,250
modify we continue you know doing the

00:20:00,700 --> 00:20:07,010
the transform that you expect to do so I

00:20:04,250 --> 00:20:09,350
can actually say oh let's try to execute

00:20:07,010 --> 00:20:13,160
the simplified employee and pull the

00:20:09,350 --> 00:20:15,670
full name now it's going to tell me like

00:20:13,160 --> 00:20:18,080
oh I can generate for you some test data

00:20:15,670 --> 00:20:19,970
though it's kind of tricky like

00:20:18,080 --> 00:20:21,710
generating test data is never a good

00:20:19,970 --> 00:20:24,170
idea but at least it give you a feel of

00:20:21,710 --> 00:20:26,390
what actually input you can have being

00:20:24,170 --> 00:20:29,190
the same and I can even execute this

00:20:26,390 --> 00:20:30,820
transform and get the result okay so

00:20:29,190 --> 00:20:33,320
[Music]

00:20:30,820 --> 00:20:35,900
well so and I can say well you know what

00:20:33,320 --> 00:20:38,930
that's not really nice to see so I can

00:20:35,900 --> 00:20:42,380
add actually an expression we perform

00:20:38,930 --> 00:20:44,720
the transformation so you can see like

00:20:42,380 --> 00:20:47,390
the I can get direct feedback out of the

00:20:44,720 --> 00:20:51,050
method data and so what you can see that

00:20:47,390 --> 00:20:53,000
it's not only about playing with

00:20:51,050 --> 00:20:54,680
metadata and doing pictures anything

00:20:53,000 --> 00:20:56,220
like that it's something that we use as

00:20:54,680 --> 00:20:58,890
part of execution flow

00:20:56,220 --> 00:21:00,570
most of all transform actually all of

00:20:58,890 --> 00:21:02,640
our transform middle of his to back of

00:21:00,570 --> 00:21:04,620
his own derivative I'll define actually

00:21:02,640 --> 00:21:06,809
with this transformation language when

00:21:04,620 --> 00:21:08,130
we want to communicate and transform

00:21:06,809 --> 00:21:09,990
actually information from one to the

00:21:08,130 --> 00:21:13,020
other from a rack perspective from a

00:21:09,990 --> 00:21:14,580
caring perspective so it's actually

00:21:13,020 --> 00:21:16,950
something that you know where I show you

00:21:14,580 --> 00:21:19,080
a really simple example of execution it

00:21:16,950 --> 00:21:21,000
can extend to really deep graph to graph

00:21:19,080 --> 00:21:23,340
transformation that actually pushed it

00:21:21,000 --> 00:21:25,380
out outside the firm and also sometimes

00:21:23,340 --> 00:21:28,590
inside the film so again because we have

00:21:25,380 --> 00:21:30,090
execution as the RC ski without the SDC

00:21:28,590 --> 00:21:32,159
stack you know we could not actually

00:21:30,090 --> 00:21:33,809
guarantee and I can show you like I've

00:21:32,159 --> 00:21:36,510
been modifying things here now you can

00:21:33,809 --> 00:21:38,250
see that I have a counter that show me

00:21:36,510 --> 00:21:40,470
everything that I've modified up to now

00:21:38,250 --> 00:21:42,539
that has not been synced with my branch

00:21:40,470 --> 00:21:45,900
I can decide actually to sync it with a

00:21:42,539 --> 00:21:48,960
branch and now I'm synced with a branch

00:21:45,900 --> 00:21:51,210
actually I pretty much committed into

00:21:48,960 --> 00:21:53,669
into the branch on the github side I can

00:21:51,210 --> 00:21:55,500
actually start to build a review out of

00:21:53,669 --> 00:21:57,539
the chance that I did and actually push

00:21:55,500 --> 00:21:58,740
to production so you know that's why I

00:21:57,539 --> 00:22:01,500
get lab has been really very

00:21:58,740 --> 00:22:04,080
transformative for us being able to

00:22:01,500 --> 00:22:05,549
actually have an SDHC that provide API

00:22:04,080 --> 00:22:07,500
is that lets you know this kind of

00:22:05,549 --> 00:22:10,350
interaction that are not usually code

00:22:07,500 --> 00:22:14,490
interaction walk with us has been really

00:22:10,350 --> 00:22:16,740
really key and I'll let you speak a bit

00:22:14,490 --> 00:22:18,539
more about like the F of the doubling on

00:22:16,740 --> 00:22:21,179
the Phenom financial side on the github

00:22:18,539 --> 00:22:24,090
site let me put it this favor let me ask

00:22:21,179 --> 00:22:26,159
you like why is you know you talked

00:22:24,090 --> 00:22:27,780
about your traditional sdlc that you're

00:22:26,159 --> 00:22:30,539
using and now you're using git lab

00:22:27,780 --> 00:22:32,429
financial sectors lots of regulations

00:22:30,539 --> 00:22:33,929
and you know you need to record

00:22:32,429 --> 00:22:36,120
everything house get laughs helped you

00:22:33,929 --> 00:22:38,510
in a perspective like out of the box

00:22:36,120 --> 00:22:41,700
that you haven't had to build that's

00:22:38,510 --> 00:22:44,250
like you know when we had pure and we

00:22:41,700 --> 00:22:46,650
had people interact you know with code

00:22:44,250 --> 00:22:48,900
there was cool environment that was

00:22:46,650 --> 00:22:50,490
actually pretty pretty complex for

00:22:48,900 --> 00:22:52,559
people to think how to interact with

00:22:50,490 --> 00:22:54,840
this environment we did alloy and are

00:22:52,559 --> 00:22:56,610
always this service layer around you get

00:22:54,840 --> 00:22:59,460
lab is kind of this service layer I

00:22:56,610 --> 00:23:01,860
would say I would find a runnin SDLC

00:22:59,460 --> 00:23:04,440
that in operatory stack we didn't have

00:23:01,860 --> 00:23:06,659
so being able to say okay we actually

00:23:04,440 --> 00:23:08,890
have my code committed I will have tests

00:23:06,659 --> 00:23:11,200
running I would have a pipeline of beer

00:23:08,890 --> 00:23:13,510
that go on the information but still

00:23:11,200 --> 00:23:16,450
give that in the hand of a business user

00:23:13,510 --> 00:23:18,610
it is something that we were not able to

00:23:16,450 --> 00:23:20,320
do until we had this set of API that

00:23:18,610 --> 00:23:23,980
give us permits of full-stack like going

00:23:20,320 --> 00:23:25,870
from modification committing testing the

00:23:23,980 --> 00:23:28,270
build pipeline pushing to actually our

00:23:25,870 --> 00:23:29,920
own repositories saying to us this could

00:23:28,270 --> 00:23:31,559
depend on Azure code and that that

00:23:29,920 --> 00:23:34,090
that's that that's all this ecosystem

00:23:31,559 --> 00:23:35,740
that bootstrap us and make it pretty

00:23:34,090 --> 00:23:37,929
possible for us to move the code outside

00:23:35,740 --> 00:23:39,700
the film I know if you saw but the URL

00:23:37,929 --> 00:23:41,679
that I'm using right now has nothing to

00:23:39,700 --> 00:23:43,900
do with Gorman it's actually pushed in

00:23:41,679 --> 00:23:46,150
the finest environment with a gitlab

00:23:43,900 --> 00:23:47,440
instance that gitlab installed for us in

00:23:46,150 --> 00:23:49,150
the final space so it's pretty much

00:23:47,440 --> 00:23:51,160
already totally decoupled from our

00:23:49,150 --> 00:23:54,250
infrastructure and that would have been

00:23:51,160 --> 00:23:54,790
years of engineering if we had to do you

00:23:54,250 --> 00:23:58,390
know that

00:23:54,790 --> 00:24:02,020
not-not-not using a strong tool that is

00:23:58,390 --> 00:24:03,700
a key performing that in the scale that

00:24:02,020 --> 00:24:06,880
was my question then what's interesting

00:24:03,700 --> 00:24:09,340
is get lab is actually based on open

00:24:06,880 --> 00:24:10,870
source open core model and for you to

00:24:09,340 --> 00:24:13,480
build actually something on it and

00:24:10,870 --> 00:24:15,190
contribute you know to it is the is the

00:24:13,480 --> 00:24:18,309
power of you know this conference and

00:24:15,190 --> 00:24:20,230
why we are here I'm not going to talk a

00:24:18,309 --> 00:24:21,820
lot about get lab per se because we have

00:24:20,230 --> 00:24:23,860
a booth outside I would love for you to

00:24:21,820 --> 00:24:25,299
come and speak to us but you know

00:24:23,860 --> 00:24:26,860
commonly asked question is what's

00:24:25,299 --> 00:24:28,299
difference between get lab and github

00:24:26,860 --> 00:24:31,179
like that's the question we're getting

00:24:28,299 --> 00:24:33,460
in our desk a lot I love for you to come

00:24:31,179 --> 00:24:35,710
and kind of find out more two big

00:24:33,460 --> 00:24:37,090
differences are you know we kind of like

00:24:35,710 --> 00:24:38,980
how the entire software development

00:24:37,090 --> 00:24:42,280
lifecycle and not just the repos like

00:24:38,980 --> 00:24:43,630
you know Pierre talked about here so you

00:24:42,280 --> 00:24:45,520
know come and know more about us and

00:24:43,630 --> 00:24:47,860
secondly we are an open source based

00:24:45,520 --> 00:24:49,840
company which means our customers which

00:24:47,860 --> 00:24:52,210
includes goldman sachs and a lot of you

00:24:49,840 --> 00:24:53,860
are actually contributing back to the

00:24:52,210 --> 00:24:56,470
code and that's how we're actually

00:24:53,860 --> 00:24:58,090
building out the entire SDLC so i think

00:24:56,470 --> 00:24:59,350
we're at the end of time I just you know

00:24:58,090 --> 00:25:00,940
want to leave you with a little teaser

00:24:59,350 --> 00:25:03,309
and our you know team members are here

00:25:00,940 --> 00:25:06,070
come and know more about us and we'll be

00:25:03,309 --> 00:25:08,110
happy to talk to you about it thanks a

00:25:06,070 --> 00:25:10,170
lot thank you for attending

00:25:08,110 --> 00:25:10,170
you

00:25:15,410 --> 00:25:23,599

YouTube URL: https://www.youtube.com/watch?v=na4DCgvdDJ4


