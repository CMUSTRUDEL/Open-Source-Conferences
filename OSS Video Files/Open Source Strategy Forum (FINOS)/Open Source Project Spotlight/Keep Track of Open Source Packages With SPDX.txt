Title: Keep Track of Open Source Packages With SPDX
Publication date: 2021-05-24
Playlist: Open Source Project Spotlight
Description: 
	Keeping track of all code used in oneâ€™s open-source project or open source-based product can be challenging. To help with the bill of material or software supply chain, SPDX, aka Software Package Data Exchange, helps developers track every line of open-source code that is being used. We sat down with Kate Stewart, VP, Dependable Embedded Systems at the Linux Foundation, to learn about the project and some of the recent developments.
Captions: 
	00:00:02,080 --> 00:00:05,200
hi this is your host abner party on

00:00:03,760 --> 00:00:06,560
behalf of the linux foundation and today

00:00:05,200 --> 00:00:09,120
we have with us once again

00:00:06,560 --> 00:00:09,840
katy stewart vp of dependable embedded

00:00:09,120 --> 00:00:12,400
systems

00:00:09,840 --> 00:00:13,759
at the linux foundation kate it's great

00:00:12,400 --> 00:00:15,440
to have you back on the show

00:00:13,759 --> 00:00:17,119
great to be talking to you again today

00:00:15,440 --> 00:00:19,359
we're going to talk about spdx

00:00:17,119 --> 00:00:20,480
uh just for our viewers tell us what is

00:00:19,359 --> 00:00:24,080
it about so

00:00:20,480 --> 00:00:26,560
spdx um is an acronym that's short for

00:00:24,080 --> 00:00:28,320
software package data exchange and this

00:00:26,560 --> 00:00:30,800
is a

00:00:28,320 --> 00:00:31,840
way of expressing data about metadata

00:00:30,800 --> 00:00:34,880
about software

00:00:31,840 --> 00:00:36,640
right now um and the project started

00:00:34,880 --> 00:00:38,640
about 10 years ago

00:00:36,640 --> 00:00:40,559
um and so we've been slowly and surely

00:00:38,640 --> 00:00:42,960
evolving it based on the use cases

00:00:40,559 --> 00:00:43,680
of what people need to um and want to

00:00:42,960 --> 00:00:46,320
share

00:00:43,680 --> 00:00:47,600
about software it initially started from

00:00:46,320 --> 00:00:49,760
the licensing side

00:00:47,600 --> 00:00:51,760
and so it's been pretty heavy on that

00:00:49,760 --> 00:00:52,320
but obviously in the last five years

00:00:51,760 --> 00:00:55,199
we've been

00:00:52,320 --> 00:00:56,239
linking into other applications like

00:00:55,199 --> 00:00:57,440
security

00:00:56,239 --> 00:01:00,320
people want to share information about

00:00:57,440 --> 00:01:03,039
security about things and so

00:01:00,320 --> 00:01:03,920
the uh specification that came out uh

00:01:03,039 --> 00:01:06,640
last year

00:01:03,920 --> 00:01:08,640
also has recognition recognition for

00:01:06,640 --> 00:01:10,799
like global identifiers

00:01:08,640 --> 00:01:12,880
like the software heritage ids as well

00:01:10,799 --> 00:01:14,560
as it's always had for several years now

00:01:12,880 --> 00:01:16,400
outside the cpes

00:01:14,560 --> 00:01:17,759
um which are sort of a way of referring

00:01:16,400 --> 00:01:20,080
to vulnerabilities

00:01:17,759 --> 00:01:21,200
and then the pearls and so forth so

00:01:20,080 --> 00:01:23,840
we're trying to be

00:01:21,200 --> 00:01:25,920
inclusive of being able to let people

00:01:23,840 --> 00:01:27,360
understand what the metadata is and then

00:01:25,920 --> 00:01:29,119
what the relationships are between

00:01:27,360 --> 00:01:29,759
packages like what are the dependencies

00:01:29,119 --> 00:01:31,360
because

00:01:29,759 --> 00:01:34,560
if you've got a vulnerability what you

00:01:31,360 --> 00:01:38,159
want to be able to do is understand

00:01:34,560 --> 00:01:40,400
um what is the implications

00:01:38,159 --> 00:01:41,200
of it and oh hey i'm depending on this

00:01:40,400 --> 00:01:43,439
library

00:01:41,200 --> 00:01:45,280
buried down oh you know 20 dependencies

00:01:43,439 --> 00:01:46,479
deep in this container in this container

00:01:45,280 --> 00:01:48,399
you need some way of being able to

00:01:46,479 --> 00:01:51,439
identify it

00:01:48,399 --> 00:01:55,439
so spdx is a way of summarizing you know

00:01:51,439 --> 00:01:57,280
the components and the relationships

00:01:55,439 --> 00:01:58,399
between them as well as quite frankly if

00:01:57,280 --> 00:01:59,759
you need to the source

00:01:58,399 --> 00:02:01,840
and what license you know which sources

00:01:59,759 --> 00:02:02,799
form which packages and what snippets

00:02:01,840 --> 00:02:04,399
are in the packages

00:02:02,799 --> 00:02:06,320
in the sources as well yeah if you look

00:02:04,399 --> 00:02:07,840
at today's modern software development

00:02:06,320 --> 00:02:11,520
it's

00:02:07,840 --> 00:02:14,720
you mentioned only security can is a big

00:02:11,520 --> 00:02:17,200
challenge compliance is a big challenge

00:02:14,720 --> 00:02:19,200
uh so when we look at it it becomes more

00:02:17,200 --> 00:02:22,160
or less like a supply chain

00:02:19,200 --> 00:02:22,720
or you know a kind of uh bill of

00:02:22,160 --> 00:02:25,200
materials

00:02:22,720 --> 00:02:26,160
in in context software so because when

00:02:25,200 --> 00:02:29,520
companies consume

00:02:26,160 --> 00:02:31,120
in most cases uh they may not even know

00:02:29,520 --> 00:02:32,720
what are the components in there so

00:02:31,120 --> 00:02:33,519
pulling all the information what license

00:02:32,720 --> 00:02:36,560
is being used

00:02:33,519 --> 00:02:38,560
so talk about when we do talk about in

00:02:36,560 --> 00:02:40,000
in traditional world or early days i

00:02:38,560 --> 00:02:41,680
love to call it when it was all

00:02:40,000 --> 00:02:43,040
proprietary you just get for one vendor

00:02:41,680 --> 00:02:44,480
that's you're done now you're pulling in

00:02:43,040 --> 00:02:45,200
for things from so many different

00:02:44,480 --> 00:02:47,200
sources

00:02:45,200 --> 00:02:49,280
so talk about the role that spdx is

00:02:47,200 --> 00:02:50,400
playing in helping companies

00:02:49,280 --> 00:02:51,760
leverage all these open source

00:02:50,400 --> 00:02:52,560
technologies without having to worry

00:02:51,760 --> 00:02:55,360
about

00:02:52,560 --> 00:02:56,879
uh what goes in what like i say when you

00:02:55,360 --> 00:02:58,239
ship something you have license terms

00:02:56,879 --> 00:03:00,239
with someone else

00:02:58,239 --> 00:03:01,519
you're assuming responsibility the

00:03:00,239 --> 00:03:03,040
challenge is that

00:03:01,519 --> 00:03:04,959
ninety percent based on some of the

00:03:03,040 --> 00:03:05,680
black duck surveys i think from last

00:03:04,959 --> 00:03:07,280
year

00:03:05,680 --> 00:03:09,200
nine percent of products have open

00:03:07,280 --> 00:03:10,800
source in them and so you

00:03:09,200 --> 00:03:12,640
when you're shipping your product are

00:03:10,800 --> 00:03:14,239
assuming responsibility for what's in

00:03:12,640 --> 00:03:18,159
that open source

00:03:14,239 --> 00:03:20,080
and right now it

00:03:18,159 --> 00:03:21,599
tends to be an archaeological expedition

00:03:20,080 --> 00:03:22,480
to try to figure out all these little

00:03:21,599 --> 00:03:24,560
pieces

00:03:22,480 --> 00:03:26,400
that one needs to encapsulate so we need

00:03:24,560 --> 00:03:28,000
to automate okay

00:03:26,400 --> 00:03:29,519
we've got a lot of things automated this

00:03:28,000 --> 00:03:31,519
is the thing that needs to be automated

00:03:29,519 --> 00:03:32,959
we need to get this working at scale

00:03:31,519 --> 00:03:34,400
and we need to make it accessible so

00:03:32,959 --> 00:03:35,040
that like anyone in the open source

00:03:34,400 --> 00:03:36,879
community

00:03:35,040 --> 00:03:38,159
when they're summarizing their licensing

00:03:36,879 --> 00:03:40,959
for their packages

00:03:38,159 --> 00:03:42,480
for instance or for what they're doing

00:03:40,959 --> 00:03:43,920
can get an accurate picture pretty much

00:03:42,480 --> 00:03:46,080
quickly or automatically

00:03:43,920 --> 00:03:47,360
and that's missing today so there's a

00:03:46,080 --> 00:03:48,879
lot you know initiatives

00:03:47,360 --> 00:03:50,480
they're part of this to try to take it

00:03:48,879 --> 00:03:51,280
so that we can actually automate these

00:03:50,480 --> 00:03:52,959
things

00:03:51,280 --> 00:03:54,959
one of the projects i'm really quite

00:03:52,959 --> 00:03:56,640
excited about is you know

00:03:54,959 --> 00:03:58,400
zephyr has now started creating software

00:03:56,640 --> 00:03:58,720
building materials of this you know when

00:03:58,400 --> 00:04:01,200
they're

00:03:58,720 --> 00:04:02,879
putting out their release and where it's

00:04:01,200 --> 00:04:05,280
got some prototypes going on

00:04:02,879 --> 00:04:06,879
um and pull requests and so forth to

00:04:05,280 --> 00:04:08,480
summarize and when you actually build

00:04:06,879 --> 00:04:10,640
your binary

00:04:08,480 --> 00:04:11,840
pull in all the pieces you need at down

00:04:10,640 --> 00:04:13,200
to the file level so you have the

00:04:11,840 --> 00:04:14,400
accurate licensing

00:04:13,200 --> 00:04:15,280
because that's where you're going to

00:04:14,400 --> 00:04:16,639
look to figure out if you've got

00:04:15,280 --> 00:04:17,759
vulnerability or not

00:04:16,639 --> 00:04:19,199
a lot of people just want to work at the

00:04:17,759 --> 00:04:20,479
component level but sometimes the file

00:04:19,199 --> 00:04:23,280
level is really needed

00:04:20,479 --> 00:04:24,639
and so making this all automated and

00:04:23,280 --> 00:04:26,960
transparent for the

00:04:24,639 --> 00:04:28,000
upstream open source developers is what

00:04:26,960 --> 00:04:29,919
we're really trying to go after

00:04:28,000 --> 00:04:31,840
here what kind of adoption is there or

00:04:29,919 --> 00:04:34,320
how organizations

00:04:31,840 --> 00:04:35,840
projects are embracing it how easy it is

00:04:34,320 --> 00:04:38,479
also for them to just you know

00:04:35,840 --> 00:04:39,280
leverage it for uh to get the whole

00:04:38,479 --> 00:04:41,120
stack of what

00:04:39,280 --> 00:04:42,720
they're running like i said we've got

00:04:41,120 --> 00:04:44,400
we've got a huge ecosystem in open

00:04:42,720 --> 00:04:45,919
source and products here

00:04:44,400 --> 00:04:47,360
and so we've got to sort of tackle it

00:04:45,919 --> 00:04:48,080
from multiple ways simultaneously we

00:04:47,360 --> 00:04:50,400
actually have

00:04:48,080 --> 00:04:51,919
a fair amount of adoption intel arms and

00:04:50,400 --> 00:04:53,840
the larger silicon vendors

00:04:51,919 --> 00:04:55,680
have been adopting for several years

00:04:53,840 --> 00:04:57,840
we've got like you know

00:04:55,680 --> 00:04:59,040
hitachi fujitsu and a variety of other

00:04:57,840 --> 00:05:00,240
companies in japan

00:04:59,040 --> 00:05:02,240
they've been working with it in their

00:05:00,240 --> 00:05:04,479
supply chains

00:05:02,240 --> 00:05:05,840
we've got you know groups who are

00:05:04,479 --> 00:05:07,039
looking at certain use cases and

00:05:05,840 --> 00:05:08,840
starting to mandate it

00:05:07,039 --> 00:05:10,400
as part of their procurement

00:05:08,840 --> 00:05:11,919
requirements um

00:05:10,400 --> 00:05:12,800
so that when they get the data you know

00:05:11,919 --> 00:05:14,320
they get a product and they get the

00:05:12,800 --> 00:05:15,280
right metadata so that their system can

00:05:14,320 --> 00:05:16,639
absorb it

00:05:15,280 --> 00:05:18,400
so they all have their different ways of

00:05:16,639 --> 00:05:19,360
implementing it um what we're trying to

00:05:18,400 --> 00:05:20,960
do in the project

00:05:19,360 --> 00:05:22,720
is make sure that there's tooling to

00:05:20,960 --> 00:05:25,840
support them ingesting it

00:05:22,720 --> 00:05:27,440
and you know exporting it um

00:05:25,840 --> 00:05:28,800
and getting that to the thing there as

00:05:27,440 --> 00:05:30,400
well as you know obviously working with

00:05:28,800 --> 00:05:30,960
the upstream communities to make sure we

00:05:30,400 --> 00:05:33,120
have

00:05:30,960 --> 00:05:34,800
a good solid starting point excellent

00:05:33,120 --> 00:05:36,160
now let's talk about anything new that's

00:05:34,800 --> 00:05:36,720
going on within the community or with

00:05:36,160 --> 00:05:38,240
the project

00:05:36,720 --> 00:05:40,800
yeah there's there's a lot of new stuff

00:05:38,240 --> 00:05:42,400
that's going on right now um

00:05:40,800 --> 00:05:44,080
one of the things that should be coming

00:05:42,400 --> 00:05:45,759
out later this year is

00:05:44,080 --> 00:05:47,199
uh we should actually formally be an iso

00:05:45,759 --> 00:05:49,360
specification um

00:05:47,199 --> 00:05:50,720
we've been working behind the scenes for

00:05:49,360 --> 00:05:52,160
the last two to one release

00:05:50,720 --> 00:05:53,919
that came out last year to take it

00:05:52,160 --> 00:05:55,120
through iso so that it's easier for the

00:05:53,919 --> 00:05:58,319
procurement people to

00:05:55,120 --> 00:05:58,960
specify and adopt um that's work in

00:05:58,319 --> 00:06:00,800
progress

00:05:58,960 --> 00:06:02,240
and the balloting has completed now and

00:06:00,800 --> 00:06:03,039
it's approved from the balloting so

00:06:02,240 --> 00:06:04,400
it'll be a while

00:06:03,039 --> 00:06:06,479
but we should be hopefully seeing an iso

00:06:04,400 --> 00:06:08,400
number showing up with spdx

00:06:06,479 --> 00:06:09,520
this fall the other thing that's going

00:06:08,400 --> 00:06:11,600
on in parallel right now

00:06:09,520 --> 00:06:12,720
is we are working with some other

00:06:11,600 --> 00:06:15,919
communities

00:06:12,720 --> 00:06:17,280
in particular the omg community um

00:06:15,919 --> 00:06:18,960
because it had an initial sort of

00:06:17,280 --> 00:06:20,720
parallel effort going on

00:06:18,960 --> 00:06:22,319
for looking at something called 3t you

00:06:20,720 --> 00:06:24,160
know tilted tool and looking at

00:06:22,319 --> 00:06:26,000
automation as well so they came focused

00:06:24,160 --> 00:06:27,360
on the same problem so we started

00:06:26,000 --> 00:06:29,759
working on getting these two communities

00:06:27,360 --> 00:06:32,960
to work together in the spdx framework

00:06:29,759 --> 00:06:35,199
and then moving it forward from there

00:06:32,960 --> 00:06:36,639
so the this 3-0 version of the

00:06:35,199 --> 00:06:37,680
specification which will be the next

00:06:36,639 --> 00:06:39,520
version

00:06:37,680 --> 00:06:41,360
we're going to be refactoring it to make

00:06:39,520 --> 00:06:42,400
it easier for if you don't care about

00:06:41,360 --> 00:06:43,440
licensing stuff you don't have to carry

00:06:42,400 --> 00:06:44,639
the licensing fields

00:06:43,440 --> 00:06:46,560
if you don't care about security you

00:06:44,639 --> 00:06:47,919
don't have to carry the security fields

00:06:46,560 --> 00:06:49,360
so there's a lot of really good active

00:06:47,919 --> 00:06:50,800
work going on and people are welcome to

00:06:49,360 --> 00:06:52,319
join in if they've got use cases

00:06:50,800 --> 00:06:53,599
they want to know how to represent

00:06:52,319 --> 00:06:55,199
there's other efforts that are working

00:06:53,599 --> 00:06:56,560
on creating software build materials or

00:06:55,199 --> 00:07:00,240
s-bombs

00:06:56,560 --> 00:07:02,400
and um there's a group working in

00:07:00,240 --> 00:07:04,800
ntia that is trying to make sure that

00:07:02,400 --> 00:07:06,960
there's awareness of s bombs growing

00:07:04,800 --> 00:07:08,000
and spdx is recognized as one of the

00:07:06,960 --> 00:07:10,880
formats

00:07:08,000 --> 00:07:12,400
in there um for being able to represent

00:07:10,880 --> 00:07:14,960
an s bomb

00:07:12,400 --> 00:07:16,240
amongst others so uh what we're trying

00:07:14,960 --> 00:07:17,280
to do and they're trying not to

00:07:16,240 --> 00:07:20,000
they're trying really hard not to pick

00:07:17,280 --> 00:07:21,520
winners so so to speak but

00:07:20,000 --> 00:07:22,639
we're trying to make sure that any sort

00:07:21,520 --> 00:07:24,160
of guidance they come up with we're

00:07:22,639 --> 00:07:24,720
trying to align with okay thank you so

00:07:24,160 --> 00:07:26,560
much for

00:07:24,720 --> 00:07:28,160
talking about speedy x and also this

00:07:26,560 --> 00:07:29,199
latest release uh

00:07:28,160 --> 00:07:31,039
not really released but latest

00:07:29,199 --> 00:07:32,800
development which is with iso before we

00:07:31,039 --> 00:07:34,000
wrap this up just just a quick you know

00:07:32,800 --> 00:07:35,759
uh

00:07:34,000 --> 00:07:37,280
closing thoughts from you what would

00:07:35,759 --> 00:07:39,120
this you know mean

00:07:37,280 --> 00:07:41,039
for for not only the community but

00:07:39,120 --> 00:07:43,520
industry also when it gets the

00:07:41,039 --> 00:07:44,560
iso mark there as well it is more about

00:07:43,520 --> 00:07:47,840
the confidence

00:07:44,560 --> 00:07:49,599
or is about more visibility uh or reach

00:07:47,840 --> 00:07:51,280
so talk about more about visibility and

00:07:49,599 --> 00:07:53,199
reach we've gotten the iso

00:07:51,280 --> 00:07:54,400
mark now for open chain which says how

00:07:53,199 --> 00:07:55,759
to use an open source in your

00:07:54,400 --> 00:07:57,840
organization

00:07:55,759 --> 00:07:59,840
and so spdx is following along on that

00:07:57,840 --> 00:08:01,599
path and so that we have

00:07:59,840 --> 00:08:03,120
okay you usually use nest bomb according

00:08:01,599 --> 00:08:03,919
to open chain well here's an s bomb

00:08:03,120 --> 00:08:06,080
format that

00:08:03,919 --> 00:08:07,039
you know we know people are using and

00:08:06,080 --> 00:08:09,199
has been adopted

00:08:07,039 --> 00:08:10,960
by the industry already awesome thank

00:08:09,199 --> 00:08:13,840
you thank you

00:08:10,960 --> 00:08:13,840

YouTube URL: https://www.youtube.com/watch?v=lkUMg27c-y0


