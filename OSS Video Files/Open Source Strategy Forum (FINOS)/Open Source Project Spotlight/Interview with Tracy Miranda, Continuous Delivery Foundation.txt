Title: Interview with Tracy Miranda, Continuous Delivery Foundation
Publication date: 2020-12-01
Playlist: Open Source Project Spotlight
Description: 
	Swapnil Bhartiya of TFiR interviews Tracy Miranda, Executive Director of the Continuous Delivery Foundation
Captions: 
	00:00:02,320 --> 00:00:05,279
hi this is your your host supermartian

00:00:03,840 --> 00:00:07,440
today we have with us

00:00:05,279 --> 00:00:09,360
tracy miranda executive director of the

00:00:07,440 --> 00:00:09,920
cd foundation tracy first of all welcome

00:00:09,360 --> 00:00:11,759
to the show

00:00:09,920 --> 00:00:13,040
thanks rapnell great to be here let's

00:00:11,759 --> 00:00:16,320
start with the

00:00:13,040 --> 00:00:18,640
continuous delivery how would you define

00:00:16,320 --> 00:00:19,760
continuous delivery also what about the

00:00:18,640 --> 00:00:21,359
ci part of it

00:00:19,760 --> 00:00:23,680
because when we talk about it we always

00:00:21,359 --> 00:00:26,240
say ci cd yes for sure so

00:00:23,680 --> 00:00:28,800
continuous delivery we define that as

00:00:26,240 --> 00:00:31,840
it's a software engineering approach

00:00:28,800 --> 00:00:34,640
in which teams work in short cycles

00:00:31,840 --> 00:00:37,680
and they ensure that the code is always

00:00:34,640 --> 00:00:40,800
released at any point in time

00:00:37,680 --> 00:00:42,559
now traditionally people tend to speak a

00:00:40,800 --> 00:00:44,960
lot about continuous integration and

00:00:42,559 --> 00:00:48,239
continuous delivery so cicd

00:00:44,960 --> 00:00:51,280
now continuous integration is uh

00:00:48,239 --> 00:00:52,239
when developers regularly commit uh at

00:00:51,280 --> 00:00:55,520
least once a day

00:00:52,239 --> 00:00:56,719
to a main line and keep that main line

00:00:55,520 --> 00:00:59,920
up to date

00:00:56,719 --> 00:01:02,399
but i see continuous delivery as really

00:00:59,920 --> 00:01:05,439
this umbrella of all the practices

00:01:02,399 --> 00:01:07,119
you need to keep that software ready to

00:01:05,439 --> 00:01:09,360
be released at any time

00:01:07,119 --> 00:01:10,720
so that includes continuous integration

00:01:09,360 --> 00:01:14,000
it includes

00:01:10,720 --> 00:01:16,479
a security features it includes testing

00:01:14,000 --> 00:01:17,200
and uh yeah as a general set of

00:01:16,479 --> 00:01:19,119
practices

00:01:17,200 --> 00:01:20,640
awesome and if you look at the container

00:01:19,119 --> 00:01:23,040
delivery

00:01:20,640 --> 00:01:24,479
it's not a problem to be solved it's

00:01:23,040 --> 00:01:27,360
already a solved problem

00:01:24,479 --> 00:01:29,520
but it was a lot of patchwork it was a

00:01:27,360 --> 00:01:31,200
lot of do it yourself you have to bring

00:01:29,520 --> 00:01:33,920
jenkins and all those things

00:01:31,200 --> 00:01:35,280
but then a spinnaker came which eased a

00:01:33,920 --> 00:01:36,159
lot of things and now we have a

00:01:35,280 --> 00:01:37,759
foundation

00:01:36,159 --> 00:01:39,759
so can you talk about what role is the

00:01:37,759 --> 00:01:42,880
foundation playing

00:01:39,759 --> 00:01:45,680
in this space so while we know a lot

00:01:42,880 --> 00:01:48,079
about continuous delivery today and

00:01:45,680 --> 00:01:49,520
we appreciate that it is really

00:01:48,079 --> 00:01:50,320
important because it makes such a

00:01:49,520 --> 00:01:52,640
difference to

00:01:50,320 --> 00:01:54,240
every business today you know not just

00:01:52,640 --> 00:01:58,079
software companies but

00:01:54,240 --> 00:02:01,280
banks or health healthcare industry

00:01:58,079 --> 00:02:02,000
but what we find in practice is that the

00:02:01,280 --> 00:02:04,000
adoption

00:02:02,000 --> 00:02:05,360
of continuous delivery practices is

00:02:04,000 --> 00:02:08,000
super super low

00:02:05,360 --> 00:02:09,520
like many people think they're doing it

00:02:08,000 --> 00:02:10,879
but maybe they're doing some continuous

00:02:09,520 --> 00:02:14,000
integration

00:02:10,879 --> 00:02:14,640
and they haven't quite figured out how

00:02:14,000 --> 00:02:17,520
to get

00:02:14,640 --> 00:02:18,319
through automation and then to top it

00:02:17,520 --> 00:02:20,720
off

00:02:18,319 --> 00:02:21,599
what makes things even more complicated

00:02:20,720 --> 00:02:24,239
is

00:02:21,599 --> 00:02:25,599
very recently we've seen the rise of

00:02:24,239 --> 00:02:28,080
like micro services

00:02:25,599 --> 00:02:29,040
and cloud native technology and now

00:02:28,080 --> 00:02:32,800
while these give us

00:02:29,040 --> 00:02:36,800
huge benefits in terms of scalability

00:02:32,800 --> 00:02:38,319
um and making it easier to to work um

00:02:36,800 --> 00:02:41,280
you know on separate parts of the

00:02:38,319 --> 00:02:44,000
application that has also resulted

00:02:41,280 --> 00:02:44,400
in you know just increased challenges

00:02:44,000 --> 00:02:47,200
like

00:02:44,400 --> 00:02:48,959
a proliferation of environments and

00:02:47,200 --> 00:02:50,879
teams having to contend with

00:02:48,959 --> 00:02:52,480
all these different parts that make up

00:02:50,879 --> 00:02:56,400
an application

00:02:52,480 --> 00:02:59,519
so the continuous delivery foundation is

00:02:56,400 --> 00:03:02,000
really there to help support

00:02:59,519 --> 00:03:04,640
teams and organizations in their

00:03:02,000 --> 00:03:07,920
adoption of these practices

00:03:04,640 --> 00:03:09,760
both from the sense of you know

00:03:07,920 --> 00:03:11,040
taking advantage of open source projects

00:03:09,760 --> 00:03:15,200
in this space

00:03:11,040 --> 00:03:17,840
but also we look we're working towards

00:03:15,200 --> 00:03:18,560
democratizing the best practices and we

00:03:17,840 --> 00:03:21,599
actually have

00:03:18,560 --> 00:03:25,200
a very recent working group that's

00:03:21,599 --> 00:03:27,120
spun up to to help anyone in this space

00:03:25,200 --> 00:03:29,360
get better at delivering software you

00:03:27,120 --> 00:03:30,560
mentioned earlier uh security and

00:03:29,360 --> 00:03:33,760
security is

00:03:30,560 --> 00:03:34,560
really becoming um a serious concern

00:03:33,760 --> 00:03:37,840
it's no longer an

00:03:34,560 --> 00:03:41,680
afterthought uh mostly when we look at

00:03:37,840 --> 00:03:43,440
any hacks or systems compromised

00:03:41,680 --> 00:03:45,440
in most of the cases it's about

00:03:43,440 --> 00:03:47,040
unpatched software the patches are there

00:03:45,440 --> 00:03:49,040
in most cases open source

00:03:47,040 --> 00:03:51,440
the patch is there but it was never

00:03:49,040 --> 00:03:53,920
applied uh because most companies still

00:03:51,440 --> 00:03:55,439
have that engine model for you know

00:03:53,920 --> 00:03:57,680
when you have already deployed something

00:03:55,439 --> 00:04:01,040
on billions of machines is really hard

00:03:57,680 --> 00:04:03,360
so if we make security as part of

00:04:01,040 --> 00:04:04,000
developers you know workflow it becomes

00:04:03,360 --> 00:04:07,200
easier

00:04:04,000 --> 00:04:10,480
so talk about the roles cd can play

00:04:07,200 --> 00:04:14,400
in further improving security yes

00:04:10,480 --> 00:04:17,519
for sure um security is a super

00:04:14,400 --> 00:04:21,199
top concern and i think there are

00:04:17,519 --> 00:04:23,520
lots of different elements to this so on

00:04:21,199 --> 00:04:24,320
on the one hand uh what we want to make

00:04:23,520 --> 00:04:26,160
sure is

00:04:24,320 --> 00:04:27,520
like we talk a lot about shift left of

00:04:26,160 --> 00:04:31,040
security

00:04:27,520 --> 00:04:33,120
and really we need to be making sure the

00:04:31,040 --> 00:04:36,479
security professionals and the folks

00:04:33,120 --> 00:04:38,479
focus on security are really

00:04:36,479 --> 00:04:40,160
tightly involved with the the rest of

00:04:38,479 --> 00:04:42,000
the team so there's no silos

00:04:40,160 --> 00:04:43,280
people don't regard security as someone

00:04:42,000 --> 00:04:46,320
else's problem

00:04:43,280 --> 00:04:49,600
security starts with the developers

00:04:46,320 --> 00:04:51,360
and then as an industry i i think

00:04:49,600 --> 00:04:54,400
you know separate from how companies

00:04:51,360 --> 00:04:57,440
organize themselves around devsecops and

00:04:54,400 --> 00:04:58,880
building better teams as an industry i

00:04:57,440 --> 00:05:02,160
think it's really important that

00:04:58,880 --> 00:05:03,199
we work together to solve um kind of the

00:05:02,160 --> 00:05:05,840
industry level

00:05:03,199 --> 00:05:07,680
problems like i think you raise a good

00:05:05,840 --> 00:05:10,320
point there when you say

00:05:07,680 --> 00:05:12,080
you know in many cases these patches

00:05:10,320 --> 00:05:12,880
haven't been applied but the fixes are

00:05:12,080 --> 00:05:14,960
out there

00:05:12,880 --> 00:05:15,919
which kind of makes you think like is

00:05:14,960 --> 00:05:18,320
security

00:05:15,919 --> 00:05:19,120
and actually an outreach problem do we

00:05:18,320 --> 00:05:22,080
need to be

00:05:19,120 --> 00:05:24,160
better at telling people update to this

00:05:22,080 --> 00:05:24,960
release it's super important this is why

00:05:24,160 --> 00:05:26,720
you do it

00:05:24,960 --> 00:05:28,080
and making sure we cut through the noise

00:05:26,720 --> 00:05:28,960
of all the different messaging they're

00:05:28,080 --> 00:05:31,120
hearing

00:05:28,960 --> 00:05:32,880
and i think um that's another example

00:05:31,120 --> 00:05:34,400
where um something like the continuous

00:05:32,880 --> 00:05:35,039
delivery foundation can make a

00:05:34,400 --> 00:05:38,400
difference

00:05:35,039 --> 00:05:40,320
in addressing these broad industry

00:05:38,400 --> 00:05:41,680
problems that we all have to kind of

00:05:40,320 --> 00:05:43,280
come together to

00:05:41,680 --> 00:05:44,800
to tackle and since you're talking about

00:05:43,280 --> 00:05:46,240
the problem one more thing is that you

00:05:44,800 --> 00:05:49,919
know microservices you know

00:05:46,240 --> 00:05:53,039
they are you know everywhere

00:05:49,919 --> 00:05:56,319
but companies are kind of facing uh

00:05:53,039 --> 00:05:59,360
a challenge you know for the for the

00:05:56,319 --> 00:06:01,199
consistent release strategies on scale

00:05:59,360 --> 00:06:03,120
and at times they're not prepared for it

00:06:01,199 --> 00:06:05,120
so can you talk about

00:06:03,120 --> 00:06:06,639
within the ecosystem or as part of the

00:06:05,120 --> 00:06:09,680
foundation itself

00:06:06,639 --> 00:06:11,199
what is being done uh around solving the

00:06:09,680 --> 00:06:12,319
problem of continuous delivery for

00:06:11,199 --> 00:06:15,280
microservices

00:06:12,319 --> 00:06:16,160
that's a great question and we

00:06:15,280 --> 00:06:19,360
definitely

00:06:16,160 --> 00:06:22,479
have kind of the this big

00:06:19,360 --> 00:06:23,600
split of folks who are you know used to

00:06:22,479 --> 00:06:26,400
delivering

00:06:23,600 --> 00:06:27,039
a monolith and they have their existing

00:06:26,400 --> 00:06:29,440
setup

00:06:27,039 --> 00:06:31,840
all geared towards supporting that and

00:06:29,440 --> 00:06:32,880
then a number and this is increasing

00:06:31,840 --> 00:06:35,039
every day

00:06:32,880 --> 00:06:37,120
a number of folks who are trying to take

00:06:35,039 --> 00:06:40,319
advantage of microservices

00:06:37,120 --> 00:06:42,800
and then all the implication that means

00:06:40,319 --> 00:06:43,600
so one of the hot topics that's emerged

00:06:42,800 --> 00:06:48,000
for us is

00:06:43,600 --> 00:06:51,199
configuration management um and

00:06:48,000 --> 00:06:52,240
how we think about this is before um

00:06:51,199 --> 00:06:53,919
your application

00:06:52,240 --> 00:06:56,880
that the scope of it was very well

00:06:53,919 --> 00:06:58,560
defined but now with microservices

00:06:56,880 --> 00:07:00,840
um you know the definition of an

00:06:58,560 --> 00:07:02,240
application changes it's a set of

00:07:00,840 --> 00:07:04,960
microservices

00:07:02,240 --> 00:07:06,880
how do we talk about which version of

00:07:04,960 --> 00:07:10,400
each microservice goes into

00:07:06,880 --> 00:07:12,960
a specific app and then how do we

00:07:10,400 --> 00:07:15,039
manage um you know we are continuously

00:07:12,960 --> 00:07:16,400
pushing code and integrating that

00:07:15,039 --> 00:07:17,919
how are those different versions

00:07:16,400 --> 00:07:19,280
changing relative to each other and how

00:07:17,919 --> 00:07:21,120
are we testing that

00:07:19,280 --> 00:07:22,960
all together so we've definitely seen

00:07:21,120 --> 00:07:25,120
configuration management as

00:07:22,960 --> 00:07:27,280
a really hot topic and people are

00:07:25,120 --> 00:07:28,960
looking at tooling in the space

00:07:27,280 --> 00:07:30,639
i think we have a couple of interesting

00:07:28,960 --> 00:07:32,960
projects that might be coming in the

00:07:30,639 --> 00:07:36,000
pipeline to cdf as well

00:07:32,960 --> 00:07:37,840
that will specifically help to to drive

00:07:36,000 --> 00:07:38,479
visibility into this space and give

00:07:37,840 --> 00:07:40,880
people

00:07:38,479 --> 00:07:42,319
just better tooling to manage all the

00:07:40,880 --> 00:07:44,319
dependencies around

00:07:42,319 --> 00:07:45,680
microservices one more thing as you're

00:07:44,319 --> 00:07:48,879
saying are talking earlier that

00:07:45,680 --> 00:07:50,000
there are so many uh projects or open

00:07:48,879 --> 00:07:54,000
source tools

00:07:50,000 --> 00:07:57,759
uh for cd which may also lead uh

00:07:54,000 --> 00:08:00,400
to a problem of interoperability so what

00:07:57,759 --> 00:08:01,919
first of all how big is it the concern

00:08:00,400 --> 00:08:02,960
for the foundation and what are you

00:08:01,919 --> 00:08:06,120
doing

00:08:02,960 --> 00:08:09,280
to kind of you know increase

00:08:06,120 --> 00:08:11,840
interoperability within these tools yeah

00:08:09,280 --> 00:08:13,919
so interoperability is one of those

00:08:11,840 --> 00:08:15,520
interesting kind of problems where

00:08:13,919 --> 00:08:17,039
if you're just working in your own

00:08:15,520 --> 00:08:20,160
organization

00:08:17,039 --> 00:08:21,599
sometimes you know it's not really a

00:08:20,160 --> 00:08:23,599
problem until

00:08:21,599 --> 00:08:25,520
perhaps it's time to adopt a new tool or

00:08:23,599 --> 00:08:28,160
add something into your workflow

00:08:25,520 --> 00:08:30,319
but if we step back and look at the

00:08:28,160 --> 00:08:32,080
industry as a whole

00:08:30,319 --> 00:08:33,919
and and take a look across the whole

00:08:32,080 --> 00:08:37,360
landscape

00:08:33,919 --> 00:08:39,519
at the moment it's hugely fragmented

00:08:37,360 --> 00:08:40,479
there's a lot of tools doing similar

00:08:39,519 --> 00:08:43,760
things it's

00:08:40,479 --> 00:08:45,600
very difficult for people to move from

00:08:43,760 --> 00:08:47,279
you know different ci tools or different

00:08:45,600 --> 00:08:48,800
pipeline orchestration tools

00:08:47,279 --> 00:08:51,120
without having to go through a lot of

00:08:48,800 --> 00:08:54,160
pain to figure out um

00:08:51,120 --> 00:08:56,000
how how to do that so

00:08:54,160 --> 00:08:58,160
it's a it's a big problem because then

00:08:56,000 --> 00:09:00,240
also two providers are having to

00:08:58,160 --> 00:09:02,480
kind of implement plug-ins for different

00:09:00,240 --> 00:09:04,880
systems and it's

00:09:02,480 --> 00:09:06,640
you know kind of a waste of time and it

00:09:04,880 --> 00:09:08,640
slows down innovation when we could be

00:09:06,640 --> 00:09:11,440
kind of moving up the stack

00:09:08,640 --> 00:09:12,000
so i think um where we're at today

00:09:11,440 --> 00:09:14,330
there's

00:09:12,000 --> 00:09:15,440
uh a greater appreciation um

00:09:14,330 --> 00:09:19,120
[Music]

00:09:15,440 --> 00:09:21,360
from well increasingly end users as well

00:09:19,120 --> 00:09:22,160
about saying okay we want to simplify

00:09:21,360 --> 00:09:24,160
this

00:09:22,160 --> 00:09:25,600
we want to find better ways for tools to

00:09:24,160 --> 00:09:28,080
in interoperate

00:09:25,600 --> 00:09:28,880
and actually at cdf one of the very

00:09:28,080 --> 00:09:30,800
first

00:09:28,880 --> 00:09:33,040
special interest groups we had was an

00:09:30,800 --> 00:09:35,600
interoperability working group

00:09:33,040 --> 00:09:37,680
and this is just a set of like-minded

00:09:35,600 --> 00:09:41,440
folks who got together and said

00:09:37,680 --> 00:09:43,120
hey as an industry we should be better

00:09:41,440 --> 00:09:44,720
and we can be better

00:09:43,120 --> 00:09:46,240
and we're all going to get talking and

00:09:44,720 --> 00:09:47,360
we're going to figure that out

00:09:46,240 --> 00:09:49,200
and it's a really good group because

00:09:47,360 --> 00:09:50,080
we've got the folks who who build the

00:09:49,200 --> 00:09:51,760
projects

00:09:50,080 --> 00:09:54,320
like the jenkins x and tacton and

00:09:51,760 --> 00:09:57,680
spinnaker and we've also got

00:09:54,320 --> 00:10:00,640
a lot of end user members represented

00:09:57,680 --> 00:10:02,640
and that perspective comes in so we've

00:10:00,640 --> 00:10:04,480
got folks from companies like ericsson

00:10:02,640 --> 00:10:06,079
and ebay and they make sure

00:10:04,480 --> 00:10:08,240
that as the problems are being solved

00:10:06,079 --> 00:10:09,200
they really apply to real world use

00:10:08,240 --> 00:10:11,440
cases

00:10:09,200 --> 00:10:13,279
so it's it's an open group and uh people

00:10:11,440 --> 00:10:16,720
are welcome to join those conversations

00:10:13,279 --> 00:10:20,000
there's a lot at the moment about

00:10:16,720 --> 00:10:22,880
maybe standardizing uh interfaces or

00:10:20,000 --> 00:10:24,160
metadata like why can't we have a

00:10:22,880 --> 00:10:27,279
standardized way to

00:10:24,160 --> 00:10:28,399
express um the all the metadata around

00:10:27,279 --> 00:10:30,079
the release

00:10:28,399 --> 00:10:31,440
or all the metadata around a set of

00:10:30,079 --> 00:10:33,040
testing results

00:10:31,440 --> 00:10:35,680
so yeah i'm really excited about what

00:10:33,040 --> 00:10:38,320
this group is doing and look forward to

00:10:35,680 --> 00:10:38,720
if they can really achieve this very

00:10:38,320 --> 00:10:40,640
very

00:10:38,720 --> 00:10:42,079
difficult goal and just bring some

00:10:40,640 --> 00:10:43,839
consolidation

00:10:42,079 --> 00:10:45,440
around the tooling one last question

00:10:43,839 --> 00:10:50,240
before we wrap this up as

00:10:45,440 --> 00:10:52,720
kobe 19. how has kobit 19 affected the

00:10:50,240 --> 00:10:53,760
continuous delivery yeah no i think

00:10:52,720 --> 00:10:57,360
great question

00:10:53,760 --> 00:10:59,600
um so it has definitely um

00:10:57,360 --> 00:11:00,560
increased like we've seen some surveys

00:10:59,600 --> 00:11:02,480
which say

00:11:00,560 --> 00:11:04,800
uh you know it talked about what people

00:11:02,480 --> 00:11:07,279
were expecting to do in terms of

00:11:04,800 --> 00:11:08,240
cloud adoption and continuous delivery

00:11:07,279 --> 00:11:10,560
adoption

00:11:08,240 --> 00:11:12,880
and all those numbers um have increased

00:11:10,560 --> 00:11:14,880
in terms of the expectation of

00:11:12,880 --> 00:11:16,959
um how they're going to accelerate that

00:11:14,880 --> 00:11:19,839
adoption and i think it's become

00:11:16,959 --> 00:11:22,320
pretty clear to companies things like

00:11:19,839 --> 00:11:24,320
the pandemic have emphasized the need

00:11:22,320 --> 00:11:26,640
to be more resilient they've emphasized

00:11:24,320 --> 00:11:28,959
the need to adapt quickly

00:11:26,640 --> 00:11:30,480
and they've emphasized that most

00:11:28,959 --> 00:11:33,920
organizations are going to

00:11:30,480 --> 00:11:35,920
evolve to be very distributed and

00:11:33,920 --> 00:11:37,519
so for all these things continuous

00:11:35,920 --> 00:11:40,480
delivery practices

00:11:37,519 --> 00:11:41,120
work really well they enable all those

00:11:40,480 --> 00:11:44,000
things

00:11:41,120 --> 00:11:45,680
and they make all the difference and

00:11:44,000 --> 00:11:47,680
actually the companies who were already

00:11:45,680 --> 00:11:50,160
doing these practices

00:11:47,680 --> 00:11:51,440
have a significant advantage in times

00:11:50,160 --> 00:11:54,959
like these

00:11:51,440 --> 00:11:55,760
so um it will be really interesting and

00:11:54,959 --> 00:11:57,279
i think

00:11:55,760 --> 00:11:59,920
one of the benefits we have as a

00:11:57,279 --> 00:12:03,200
foundation is that open source

00:11:59,920 --> 00:12:04,079
has always been about that collaboration

00:12:03,200 --> 00:12:06,639
at scale

00:12:04,079 --> 00:12:07,360
and in distributed way so we're hoping

00:12:06,639 --> 00:12:10,800
we can take

00:12:07,360 --> 00:12:13,440
kind of all those lessons and marry

00:12:10,800 --> 00:12:15,360
you know open source practices to

00:12:13,440 --> 00:12:17,040
continuous delivery practices

00:12:15,360 --> 00:12:18,880
and really just make it easier for

00:12:17,040 --> 00:12:21,360
everybody to adopt them

00:12:18,880 --> 00:12:22,880
it shouldn't just be kind of an elite

00:12:21,360 --> 00:12:23,440
few companies who could do it it should

00:12:22,880 --> 00:12:25,440
be

00:12:23,440 --> 00:12:27,440
something that's possible and achievable

00:12:25,440 --> 00:12:28,079
for every company and every organization

00:12:27,440 --> 00:12:30,480
out there

00:12:28,079 --> 00:12:31,440
tracy thank you so much for taking time

00:12:30,480 --> 00:12:33,519
out and

00:12:31,440 --> 00:12:34,720
talk to us today about the foundation

00:12:33,519 --> 00:12:36,320
continuous delivery

00:12:34,720 --> 00:12:37,920
and i would love to talk to you again

00:12:36,320 --> 00:12:39,519
thank you thank you so much for having

00:12:37,920 --> 00:12:44,880
me it's been my pleasure to share what

00:12:39,519 --> 00:12:44,880

YouTube URL: https://www.youtube.com/watch?v=Mo3S3e0Pf8U


