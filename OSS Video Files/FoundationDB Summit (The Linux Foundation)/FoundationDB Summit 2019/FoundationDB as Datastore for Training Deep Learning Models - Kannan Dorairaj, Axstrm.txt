Title: FoundationDB as Datastore for Training Deep Learning Models - Kannan Dorairaj, Axstrm
Publication date: 2020-01-29
Playlist: FoundationDB Summit 2019
Description: 
	FoundationDB as Datastore for Training Deep Learning Models - Kannan Dorairaj, Axstrm 

Axstrm is a data services and solutions company focused on building data stores for computer vision, deep learning, artificial intelligence, and analytics solutions. We have been using FoundationDB as our go-to database for our custom data stores. We will be going over a real-life scenario to build self-trained micro models from dynamically distributed data coming in from different sources and trained to do a specific objective. In the process of taking FoundationDB to mainstream we have developed a structured methodology to monitor and maintain FoundationDB in production environments.
Captions: 
	00:00:00,030 --> 00:00:06,509
hi I'm cannon and chief architect of an

00:00:03,210 --> 00:00:08,610
extreme so let me start with some little

00:00:06,509 --> 00:00:12,450
bit of introduction actually I'm one of

00:00:08,610 --> 00:00:16,049
the world almost extinct breed of

00:00:12,450 --> 00:00:19,140
traditional database guys who you know

00:00:16,049 --> 00:00:22,439
treated relational normal form as a

00:00:19,140 --> 00:00:24,359
religion and you know followed that and

00:00:22,439 --> 00:00:27,720
you know with the new changes and you

00:00:24,359 --> 00:00:30,410
know new no distributed databases didn't

00:00:27,720 --> 00:00:33,270
get me until I saw the acid properties

00:00:30,410 --> 00:00:35,100
in a distributed database actually so

00:00:33,270 --> 00:00:36,750
finally I was like okay I'm on board now

00:00:35,100 --> 00:00:38,730
I want to get into the distributed

00:00:36,750 --> 00:00:43,170
database kind of thing actually right so

00:00:38,730 --> 00:00:44,820
um be you know maxium is a part of Aksum

00:00:43,170 --> 00:00:46,649
south we've been around for 15 plus

00:00:44,820 --> 00:00:48,600
years and we've been in the database

00:00:46,649 --> 00:00:49,829
development and support and up work

00:00:48,600 --> 00:00:52,739
actually so right now we've been

00:00:49,829 --> 00:00:55,649
focusing more on foundation DB and

00:00:52,739 --> 00:00:58,199
mainly our focus is on developing data

00:00:55,649 --> 00:01:00,210
stores for AI and you know for different

00:00:58,199 --> 00:01:02,399
models actually that's what our focus is

00:01:00,210 --> 00:01:04,769
right now we have been creating data

00:01:02,399 --> 00:01:07,049
stores and you know for creating models

00:01:04,769 --> 00:01:08,729
in the deep learning models and we ever

00:01:07,049 --> 00:01:11,100
go to database has been Foundation DB

00:01:08,729 --> 00:01:14,909
now actually write for so many other

00:01:11,100 --> 00:01:16,500
reasons and then one of them is the you

00:01:14,909 --> 00:01:18,650
know all the flexibility in the design

00:01:16,500 --> 00:01:22,680
of the schemas and stuff actually so

00:01:18,650 --> 00:01:25,080
alright that said I want to go over a

00:01:22,680 --> 00:01:27,720
one example of what we are doing that

00:01:25,080 --> 00:01:29,759
now how we are using foundation DB so

00:01:27,720 --> 00:01:33,119
we've been developing this application

00:01:29,759 --> 00:01:35,729
for one of our incubation startups so it

00:01:33,119 --> 00:01:37,920
is for a swim map actually right you

00:01:35,729 --> 00:01:44,250
know a mobile app when you record a

00:01:37,920 --> 00:01:46,740
swimming using a R and AI so it gets all

00:01:44,250 --> 00:01:48,780
the statistics of a swim right or it

00:01:46,740 --> 00:01:52,079
directs the strokes and it gets the

00:01:48,780 --> 00:01:53,700
velocity of this fem in instantaneous

00:01:52,079 --> 00:01:56,130
velocity of the swim and it gets the

00:01:53,700 --> 00:01:57,840
strokes and you know all the basic

00:01:56,130 --> 00:02:01,229
statistics of a swimming by just

00:01:57,840 --> 00:02:04,110
recording it right so this we develop it

00:02:01,229 --> 00:02:04,500
and we started creating a model for it

00:02:04,110 --> 00:02:06,390
right

00:02:04,500 --> 00:02:08,520
we used FDB to store the data because

00:02:06,390 --> 00:02:09,959
it's a lot of extensive data in it so we

00:02:08,520 --> 00:02:12,270
want to use that to train the model

00:02:09,959 --> 00:02:13,420
we've been using to recreate to train

00:02:12,270 --> 00:02:15,430
the model

00:02:13,420 --> 00:02:17,560
and the model became really huge because

00:02:15,430 --> 00:02:20,290
we are trying to capture all the

00:02:17,560 --> 00:02:22,630
scenario as possible for a swimmer right

00:02:20,290 --> 00:02:25,030
but swimmer here swimmer in japan

00:02:22,630 --> 00:02:26,590
swimmer in you know you know they're

00:02:25,030 --> 00:02:28,240
different they are swimming snails are a

00:02:26,590 --> 00:02:30,880
friend you know things are different we

00:02:28,240 --> 00:02:33,130
only try to you know build one model for

00:02:30,880 --> 00:02:35,290
them it was too hard and also we want to

00:02:33,130 --> 00:02:37,750
keep the model and the mobile device so

00:02:35,290 --> 00:02:40,390
we can't have a bulky you know model

00:02:37,750 --> 00:02:45,010
size as well so we ended up creating

00:02:40,390 --> 00:02:47,980
micro models basically right so where we

00:02:45,010 --> 00:02:52,120
put in a basic model which works like 80

00:02:47,980 --> 00:02:54,550
percentage for a swimmer and then when

00:02:52,120 --> 00:02:56,410
they record when they see the strokes

00:02:54,550 --> 00:02:58,030
when there is minor changes to that they

00:02:56,410 --> 00:03:01,060
can manually adjust the strokes or

00:02:58,030 --> 00:03:05,170
adjust the data and we capture that

00:03:01,060 --> 00:03:07,750
change for every night and when they

00:03:05,170 --> 00:03:10,870
sign up for it basically so it sends

00:03:07,750 --> 00:03:14,410
back to the cloud those data and we spin

00:03:10,870 --> 00:03:16,180
out a one you know darker set up right

00:03:14,410 --> 00:03:18,130
because we don't want to that trad has

00:03:16,180 --> 00:03:19,209
to be shared by any other day right no

00:03:18,130 --> 00:03:22,810
we don't want to mix it with any other

00:03:19,209 --> 00:03:25,709
data so we create one stream of process

00:03:22,810 --> 00:03:28,930
basically takes the images and data and

00:03:25,709 --> 00:03:30,519
trains the model and validates the model

00:03:28,930 --> 00:03:32,049
as well so we have a set of data to

00:03:30,519 --> 00:03:34,870
validate it because we don't want to

00:03:32,049 --> 00:03:36,280
create a model just because somebody's

00:03:34,870 --> 00:03:38,829
enter data right so we want to validate

00:03:36,280 --> 00:03:42,280
it and then send them updated model back

00:03:38,829 --> 00:03:44,620
to that device and then that cycle goes

00:03:42,280 --> 00:03:45,820
on until it gets perfect or you know we

00:03:44,620 --> 00:03:47,290
have validations saying hey you know

00:03:45,820 --> 00:03:48,910
what the success rate is you know the

00:03:47,290 --> 00:03:50,860
success rate is so high so we don't have

00:03:48,910 --> 00:03:53,440
to train anymore or when the changes

00:03:50,860 --> 00:03:55,269
happen then we train again so this is

00:03:53,440 --> 00:03:57,160
the model we've been using that now so

00:03:55,269 --> 00:04:00,190
where we use foundation BBB for the ARCA

00:03:57,160 --> 00:04:02,380
station and also you know as lower

00:04:00,190 --> 00:04:05,440
footprint of foundation DB in the data

00:04:02,380 --> 00:04:08,320
set up to use it to train the models

00:04:05,440 --> 00:04:09,910
actually right so this is the one

00:04:08,320 --> 00:04:11,709
scenario we've been using and it's been

00:04:09,910 --> 00:04:14,260
effectively working for us you know in a

00:04:11,709 --> 00:04:16,239
way and so we have been other than this

00:04:14,260 --> 00:04:20,729
we've been using an AK tech and so our

00:04:16,239 --> 00:04:22,450
and they make things as well okay so

00:04:20,729 --> 00:04:24,460
that's all I want to share today

00:04:22,450 --> 00:04:26,349
actually so we know we are database

00:04:24,460 --> 00:04:26,889
support and services team so if you need

00:04:26,349 --> 00:04:31,479
any

00:04:26,889 --> 00:04:34,990
help in development support or even you

00:04:31,479 --> 00:04:38,060
know creating some POCs please reach out

00:04:34,990 --> 00:04:41,949
to us let us know thank you

00:04:38,060 --> 00:04:41,949

YouTube URL: https://www.youtube.com/watch?v=5_0bulP_w_k


