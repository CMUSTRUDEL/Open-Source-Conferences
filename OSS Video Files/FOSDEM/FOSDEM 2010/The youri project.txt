Title: The youri project
Publication date: 2011-12-22
Playlist: FOSDEM 2010
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:00,000 --> 00:00:04,460
good morning ladies and gentlemen thank

00:00:01,890 --> 00:00:07,859
you for coming so early in the morning

00:00:04,460 --> 00:00:10,849
my name is Guillaume moose I'm a mother

00:00:07,859 --> 00:00:13,200
of a contributor I will be talking about

00:00:10,849 --> 00:00:17,210
one of the open source project i'm

00:00:13,200 --> 00:00:21,779
involved in in which is called yuri

00:00:17,210 --> 00:00:23,789
that's a base outline of the torch i

00:00:21,779 --> 00:00:26,460
will first talk about the motivation

00:00:23,789 --> 00:00:28,519
that led to the project then i will talk

00:00:26,460 --> 00:00:31,610
about the project itself what it is and

00:00:28,519 --> 00:00:36,600
try to grow some conclusion about my

00:00:31,610 --> 00:00:41,489
experience I I add with it so the

00:00:36,600 --> 00:00:44,129
motivations when you involve and when

00:00:41,489 --> 00:00:46,829
you run patchy distribution task you get

00:00:44,129 --> 00:00:49,110
many sense to do you know that you made

00:00:46,829 --> 00:00:51,930
a project watch first you have to ensure

00:00:49,110 --> 00:00:54,660
that budget situation gets well meaning

00:00:51,930 --> 00:00:58,550
you have to set up some kind of brutal

00:00:54,660 --> 00:01:01,379
infrastructure ways build us wilbert

00:00:58,550 --> 00:01:03,210
whatever and you are then you have to

00:01:01,379 --> 00:01:05,939
get some kind of submission procedure

00:01:03,210 --> 00:01:09,330
that new package gets added to the

00:01:05,939 --> 00:01:11,250
repository that then you have to ensure

00:01:09,330 --> 00:01:14,130
that your package repository gets

00:01:11,250 --> 00:01:17,100
distributed worldwide meaning you have

00:01:14,130 --> 00:01:19,890
to create index for meta package

00:01:17,100 --> 00:01:23,280
installer you have to ensure that your

00:01:19,890 --> 00:01:26,430
mirror yet synchronous I and then you

00:01:23,280 --> 00:01:28,650
have to check or that's monetary pads

00:01:26,430 --> 00:01:29,970
but if you're a good night now you have

00:01:28,650 --> 00:01:33,299
to check that your package words

00:01:29,970 --> 00:01:35,790
correctly meaning you have to perform

00:01:33,299 --> 00:01:38,520
some kind of basic quality insurance

00:01:35,790 --> 00:01:41,009
tests and eventually listen what your

00:01:38,520 --> 00:01:44,970
user a sense of what you do if you care

00:01:41,009 --> 00:01:48,450
of course so that's basically the lot of

00:01:44,970 --> 00:01:52,740
stuff to do for in order to do this

00:01:48,450 --> 00:01:54,990
while various dust you get many many

00:01:52,740 --> 00:01:57,360
tools already available for package

00:01:54,990 --> 00:01:59,909
checking for instance yet appellant's

00:01:57,360 --> 00:02:02,790
for a PM package and they be involved

00:01:59,909 --> 00:02:06,240
you get mentioned for indexing your

00:02:02,790 --> 00:02:09,450
package you have other channel tools

00:02:06,240 --> 00:02:12,450
such as create ripple which creates you

00:02:09,450 --> 00:02:13,190
mean letÃ­s you have a PM to HTML that's

00:02:12,450 --> 00:02:15,950
mostly

00:02:13,190 --> 00:02:19,790
debated repository to a set of HTML page

00:02:15,950 --> 00:02:22,910
in turn and for watching your program

00:02:19,790 --> 00:02:24,800
should get some different kind of bug

00:02:22,910 --> 00:02:27,250
tracking system such as bhatia retro

00:02:24,800 --> 00:02:29,990
structure what is missing is the glue

00:02:27,250 --> 00:02:33,530
between all those different paths so you

00:02:29,990 --> 00:02:35,630
get you need unless you love to do

00:02:33,530 --> 00:02:38,230
everything by hand you need to to mate

00:02:35,630 --> 00:02:41,000
and to integrate all this stuff together

00:02:38,230 --> 00:02:44,300
I've been personally involved on several

00:02:41,000 --> 00:02:46,880
projects I was a month oh how always am

00:02:44,300 --> 00:02:52,540
monro contributor but I'm a simple

00:02:46,880 --> 00:02:54,950
member but as I've been I found the

00:02:52,540 --> 00:02:58,280
founding member of true different

00:02:54,950 --> 00:03:01,340
packaging projects which are plf angie

00:02:58,280 --> 00:03:03,170
package and i was both fun in member and

00:03:01,340 --> 00:03:05,960
the system in for the matching running

00:03:03,170 --> 00:03:11,210
this project so i had many many scenes

00:03:05,960 --> 00:03:14,750
to dupe the first attempt to blue all

00:03:11,210 --> 00:03:17,180
this this these different tools was to

00:03:14,750 --> 00:03:23,060
use other scripts as usual shell scripts

00:03:17,180 --> 00:03:26,390
and it was quite ugly the implementation

00:03:23,060 --> 00:03:28,400
is different different kind of straight

00:03:26,390 --> 00:03:31,850
hours perl script shall strip anything

00:03:28,400 --> 00:03:35,120
and it was very very dedicated there is

00:03:31,850 --> 00:03:37,840
one set of scripts for plf project one

00:03:35,120 --> 00:03:41,420
set of script for g packet project and

00:03:37,840 --> 00:03:46,070
what a in medieval walled he was even

00:03:41,420 --> 00:03:49,700
worst so what are the limits of this

00:03:46,070 --> 00:03:51,470
kind of approach was if you have

00:03:49,700 --> 00:03:54,080
different projects you're different

00:03:51,470 --> 00:03:57,530
policies the structure of purpose it

00:03:54,080 --> 00:04:01,660
will change some some project of a very

00:03:57,530 --> 00:04:06,470
very deep project with branch really is

00:04:01,660 --> 00:04:09,650
whatever so you end up in different

00:04:06,470 --> 00:04:12,500
tools and you can this you can design

00:04:09,650 --> 00:04:14,650
one tools for one project and adapt to

00:04:12,500 --> 00:04:17,150
other it's at the beginning it's

00:04:14,650 --> 00:04:18,830
possible and then very quickly they

00:04:17,150 --> 00:04:20,870
diverge and you can compare them anymore

00:04:18,830 --> 00:04:24,790
and when you fix one you have to fit the

00:04:20,870 --> 00:04:28,720
second it that's kind of problem so

00:04:24,790 --> 00:04:31,090
the problem is diversity defense project

00:04:28,720 --> 00:04:36,330
of difference net so how do you do and

00:04:31,090 --> 00:04:40,150
all this just need one possibility is to

00:04:36,330 --> 00:04:43,270
to adapt yourself to the superset of all

00:04:40,150 --> 00:04:47,200
needs you got one tools to do everything

00:04:43,270 --> 00:04:49,870
else that's painful to maintain you

00:04:47,200 --> 00:04:53,290
can't and as soon you toward something

00:04:49,870 --> 00:04:56,110
for the need of one project it has side

00:04:53,290 --> 00:05:00,960
effect on the other that's impossible

00:04:56,110 --> 00:05:04,890
although you can of the subset of the

00:05:00,960 --> 00:05:07,840
Sharon needs and then you got a minimal

00:05:04,890 --> 00:05:11,470
told a minimal set of tools that do only

00:05:07,840 --> 00:05:15,040
a meaningful minimal set of task so you

00:05:11,470 --> 00:05:17,530
can have something that's upload a

00:05:15,040 --> 00:05:20,800
package from one place to one place but

00:05:17,530 --> 00:05:25,600
then you you have to manually run it on

00:05:20,800 --> 00:05:31,090
each project to to to give it straight

00:05:25,600 --> 00:05:34,270
edge image for instance so from this

00:05:31,090 --> 00:05:37,620
past experience of gluing growing tools

00:05:34,270 --> 00:05:41,620
with add-on scripts can the idea of

00:05:37,620 --> 00:05:45,940
having a dedicated project which will

00:05:41,620 --> 00:05:49,420
allow you grew since perfectly weather

00:05:45,940 --> 00:05:53,680
climates it was the Europe project which

00:05:49,420 --> 00:05:55,810
is as usual watch rich which means Yuri

00:05:53,680 --> 00:05:59,500
of unemployed and repository

00:05:55,810 --> 00:06:03,720
infrastructure what a nice definition so

00:05:59,500 --> 00:06:08,130
what is it but it lets build stuff and

00:06:03,720 --> 00:06:11,980
you tell models and general rich and

00:06:08,130 --> 00:06:14,620
gents what is not there's not something

00:06:11,980 --> 00:06:17,620
that is ready to felt unit basically

00:06:14,620 --> 00:06:22,480
it's developer targeted and you have to

00:06:17,620 --> 00:06:28,230
program the pad sets that will add that

00:06:22,480 --> 00:06:28,230
will address your exact needs

00:06:28,420 --> 00:06:38,170
there and the design girl there was some

00:06:32,130 --> 00:06:41,430
some design purpose whoo well wanted to

00:06:38,170 --> 00:06:44,250
have something that was very versatile

00:06:41,430 --> 00:06:47,080
which was package format independent

00:06:44,250 --> 00:06:50,440
consider will actually will work sorry

00:06:47,080 --> 00:06:52,960
where's both fpm on debian package for

00:06:50,440 --> 00:06:55,720
instance and whatever else which will

00:06:52,960 --> 00:06:58,780
not import to use some process tool

00:06:55,720 --> 00:07:02,370
would like to use either kind of bird

00:06:58,780 --> 00:07:05,320
working recast the value were tracking

00:07:02,370 --> 00:07:09,040
system sorry any kind of versioning

00:07:05,320 --> 00:07:14,010
system whatever that will not impose

00:07:09,040 --> 00:07:19,150
policy meaning that policy wellnitz

00:07:14,010 --> 00:07:22,150
we're up to projects and instructors and

00:07:19,150 --> 00:07:24,820
not to the tool designers and will not

00:07:22,150 --> 00:07:28,660
impose a structure and package

00:07:24,820 --> 00:07:31,240
repository switcher awesome said i will

00:07:28,660 --> 00:07:33,310
be module using plugins of course and

00:07:31,240 --> 00:07:36,760
something that will allow is the kind of

00:07:33,310 --> 00:07:39,280
delegation when you run a packaging

00:07:36,760 --> 00:07:41,740
project with many people involved are

00:07:39,280 --> 00:07:43,390
different roles that people that are

00:07:41,740 --> 00:07:45,660
means for the project and there are

00:07:43,390 --> 00:07:50,410
maintenance for the various package and

00:07:45,660 --> 00:07:52,840
if all a section for instance because if

00:07:50,410 --> 00:07:55,480
you have a policy that your package

00:07:52,840 --> 00:07:57,970
should not do something very very ugly

00:07:55,480 --> 00:08:01,210
for instance you're always are

00:07:57,970 --> 00:08:03,580
exceptions for instance in appearance

00:08:01,210 --> 00:08:06,790
there are kind of exceptions about

00:08:03,580 --> 00:08:09,040
permissions and which beanery files will

00:08:06,790 --> 00:08:12,190
be Alouette to be set you search radius

00:08:09,040 --> 00:08:14,920
a ID for instance and if you manage all

00:08:12,190 --> 00:08:18,550
these options and you summarize them in

00:08:14,920 --> 00:08:23,560
the tools the guy that's maintained the

00:08:18,550 --> 00:08:25,960
tools itself will build a well be there

00:08:23,560 --> 00:08:30,220
just the one that prevents scalability

00:08:25,960 --> 00:08:33,430
my ideas page maintained as usually no

00:08:30,220 --> 00:08:36,790
betters about a sections i need to use

00:08:33,430 --> 00:08:39,010
the what there was one of the design

00:08:36,790 --> 00:08:41,620
goal of the project is to give / worse

00:08:39,010 --> 00:08:44,320
in the end of maintenance anyway

00:08:41,620 --> 00:08:46,750
what are currently include in the

00:08:44,320 --> 00:08:48,730
project first there we want first Jules

00:08:46,750 --> 00:08:52,360
is called you resubmit its package

00:08:48,730 --> 00:08:53,650
submission tool synopsis is a tool

00:08:52,360 --> 00:08:57,270
that's an input should you have

00:08:53,650 --> 00:09:00,190
something something can be it can be

00:08:57,270 --> 00:09:02,140
already builds been a repackage it can

00:09:00,190 --> 00:09:05,020
be a source package that's the tools as

00:09:02,140 --> 00:09:06,490
to build it can be revision number in a

00:09:05,020 --> 00:09:09,040
version in controlling system then it

00:09:06,490 --> 00:09:10,510
told us to extract first the component

00:09:09,040 --> 00:09:12,460
to build the suspected for us and to

00:09:10,510 --> 00:09:15,580
build the package let's input

00:09:12,460 --> 00:09:18,790
something another output you want to

00:09:15,580 --> 00:09:21,970
have a set of validated a meaning

00:09:18,790 --> 00:09:24,190
controlled and publish package present

00:09:21,970 --> 00:09:28,930
in the mail well and ready to use for

00:09:24,190 --> 00:09:32,529
the users in order to perform this thus

00:09:28,930 --> 00:09:37,300
the results run as a suite of tests and

00:09:32,529 --> 00:09:39,250
as a example of tests for instance when

00:09:37,300 --> 00:09:41,980
you submit a new package of a sched that

00:09:39,250 --> 00:09:47,950
it is really new and you that submit

00:09:41,980 --> 00:09:50,890
another package if you have a policy

00:09:47,950 --> 00:09:52,540
that's for instance in order to Baghdad

00:09:50,890 --> 00:09:55,060
some package to previous version of this

00:09:52,540 --> 00:09:57,580
distribution sorry you first have to

00:09:55,060 --> 00:10:00,430
have at least this version number if the

00:09:57,580 --> 00:10:02,650
current distribution you can test it you

00:10:00,430 --> 00:10:04,930
can also test that your history free

00:10:02,650 --> 00:10:08,250
story is maintained its are coded in the

00:10:04,930 --> 00:10:13,089
package loads the toy story is still

00:10:08,250 --> 00:10:14,950
continue and you have actions for

00:10:13,089 --> 00:10:17,260
instance if you give the chill or

00:10:14,950 --> 00:10:19,390
revision number you have to create let's

00:10:17,260 --> 00:10:21,880
write the component for the versioning

00:10:19,390 --> 00:10:23,860
system you have to build a

00:10:21,880 --> 00:10:26,650
package if you don't give the tools

00:10:23,860 --> 00:10:30,250
already belts you have to sign the

00:10:26,650 --> 00:10:33,010
package if your pushiness you move until

00:10:30,250 --> 00:10:35,410
the archer when you submit a new version

00:10:33,010 --> 00:10:39,459
of package for safety reason you may

00:10:35,410 --> 00:10:41,200
prefer to chipped all russians aside you

00:10:39,459 --> 00:10:44,050
may although but files under version

00:10:41,200 --> 00:10:47,080
control after submission it all depends

00:10:44,050 --> 00:10:50,020
your build system so that's

00:10:47,080 --> 00:10:52,840
this this tool is just a way to rent

00:10:50,020 --> 00:10:55,690
tests online agents and action and test

00:10:52,840 --> 00:10:59,830
and test have to be coded by projecting

00:10:55,690 --> 00:11:02,440
means the second tells us you're a

00:10:59,830 --> 00:11:06,070
church which has a package checking tool

00:11:02,440 --> 00:11:10,180
at Kelly th foreign still an input you

00:11:06,070 --> 00:11:12,730
did it a list of package and as a

00:11:10,180 --> 00:11:18,130
you get a list of report of what package

00:11:12,730 --> 00:11:20,020
bridge you're different test the test

00:11:18,130 --> 00:11:22,810
can be performed on each package

00:11:20,020 --> 00:11:26,230
individually that's kind of a permanent

00:11:22,810 --> 00:11:30,190
or Lynch and lint meaning sir a test

00:11:26,230 --> 00:11:33,640
meaning does the package pass or fail

00:11:30,190 --> 00:11:36,370
the test that don't be all the other new

00:11:33,640 --> 00:11:39,010
version of the package as this package

00:11:36,370 --> 00:11:40,920
known to really are not built that's

00:11:39,010 --> 00:11:44,640
individual test you may observe

00:11:40,920 --> 00:11:46,750
distribution wide test meaning other

00:11:44,640 --> 00:11:48,790
dependencies of this package satisfied

00:11:46,750 --> 00:11:50,940
by the others in the distribution do

00:11:48,790 --> 00:11:54,670
this package conflict where the other or

00:11:50,940 --> 00:11:57,010
do you have source package that no I've

00:11:54,670 --> 00:12:01,920
matching been a raid on bin early once

00:11:57,010 --> 00:12:05,590
or deposit and you can generate values

00:12:01,920 --> 00:12:08,800
reporting values formatted HTML page you

00:12:05,590 --> 00:12:13,900
can send mails too bad packages and you

00:12:08,800 --> 00:12:15,700
can have racist videos so on our set

00:12:13,900 --> 00:12:19,570
opponents of the project is the library

00:12:15,700 --> 00:12:21,520
which is a list of Palmetto you I got

00:12:19,570 --> 00:12:23,740
basically some stuff to deal with but

00:12:21,520 --> 00:12:26,080
writing system you get some stuff to

00:12:23,740 --> 00:12:30,190
manage a configuration in a similar

00:12:26,080 --> 00:12:33,940
similar way between between the tools

00:12:30,190 --> 00:12:40,240
you get are quite an interesting list of

00:12:33,940 --> 00:12:42,790
package a tkt tooth to come in various

00:12:40,240 --> 00:12:45,280
tests on values package format such as

00:12:42,790 --> 00:12:50,980
automatic builders automatic generators

00:12:45,280 --> 00:12:54,940
and automatic updates for a PM for

00:12:50,980 --> 00:12:58,240
instance what you can do is the true of

00:12:54,940 --> 00:13:00,760
this model is automatically updates one

00:12:58,240 --> 00:13:04,660
a PM package

00:13:00,760 --> 00:13:08,720
whereas a package with a given version

00:13:04,660 --> 00:13:12,080
you can automatically get you a new

00:13:08,720 --> 00:13:14,029
version and the record with a pass the

00:13:12,080 --> 00:13:16,160
spec file will automatically a strike

00:13:14,029 --> 00:13:18,050
new version download it and updated

00:13:16,160 --> 00:13:20,690
speed file and then you can

00:13:18,050 --> 00:13:23,210
automatically rebuild the package that's

00:13:20,690 --> 00:13:26,500
quite interesting and avoid many many

00:13:23,210 --> 00:13:30,380
manual manual work for the maintenance

00:13:26,500 --> 00:13:34,070
you can also wears an additional another

00:13:30,380 --> 00:13:36,500
module automatically create eh-eh-eh for

00:13:34,070 --> 00:13:38,810
testing purpose for instance you have a

00:13:36,500 --> 00:13:43,120
tulip Emmaline's that is able to catch

00:13:38,810 --> 00:13:46,010
table in description I will test it in a

00:13:43,120 --> 00:13:47,960
in an automatically in it automatic

00:13:46,010 --> 00:13:50,120
manner for instance for regression tests

00:13:47,960 --> 00:13:52,430
where for instance you can generate

00:13:50,120 --> 00:13:55,760
automatically a package an empty package

00:13:52,430 --> 00:13:59,839
with nothing inside was district with a

00:13:55,760 --> 00:14:01,430
ugly typo in the description it is

00:13:59,839 --> 00:14:04,790
automatically billed and then you can

00:14:01,430 --> 00:14:07,970
run regular radiation tests with it and

00:14:04,790 --> 00:14:13,250
ensure that your favorites package

00:14:07,970 --> 00:14:16,790
checking tool still wards that's this

00:14:13,250 --> 00:14:22,280
kind of stuff you can do with the module

00:14:16,790 --> 00:14:24,170
sweets okay that's all that I there it

00:14:22,280 --> 00:14:26,570
is also some code inside of models

00:14:24,170 --> 00:14:28,520
currently that it's not available

00:14:26,570 --> 00:14:31,430
separately that could be extracted

00:14:28,520 --> 00:14:34,430
properly which will be interesting we

00:14:31,430 --> 00:14:37,970
get stuff for compare comprising

00:14:34,430 --> 00:14:40,940
comparing version strains when you a

00:14:37,970 --> 00:14:45,350
pass for instant french fresh meat page

00:14:40,940 --> 00:14:49,339
your HTML page you get all kind of

00:14:45,350 --> 00:14:53,089
alphanumeric versions and it's quite

00:14:49,339 --> 00:14:57,470
difficult to correctly sort the

00:14:53,089 --> 00:15:01,400
different versions of course the first

00:14:57,470 --> 00:15:04,180
one is the most recent one and this

00:15:01,400 --> 00:15:06,589
results are perfectly equivalent and

00:15:04,180 --> 00:15:09,779
semantically but synthetic alizade

00:15:06,589 --> 00:15:12,110
affair and you have to

00:15:09,779 --> 00:15:16,230
correctly past them and other damage

00:15:12,110 --> 00:15:18,060
something that may be useful and as I

00:15:16,230 --> 00:15:19,829
seen that probe interesante is a

00:15:18,060 --> 00:15:21,689
possibility to compile package name

00:15:19,829 --> 00:15:24,930
between different distribution for

00:15:21,689 --> 00:15:28,379
instance that is el papel picado in the

00:15:24,930 --> 00:15:30,839
language FL distribution which absent

00:15:28,379 --> 00:15:33,420
that the word at the corresponding

00:15:30,839 --> 00:15:36,209
package name will be called in montival

00:15:33,420 --> 00:15:38,220
federal world and that su will be the

00:15:36,209 --> 00:15:42,449
corresponding package mail attached name

00:15:38,220 --> 00:15:47,100
sorry in the gun world and many many

00:15:42,449 --> 00:15:50,029
dispute description we have in this in

00:15:47,100 --> 00:15:52,829
his discussion room typically we have

00:15:50,029 --> 00:15:54,389
discussion how to compare our packaging

00:15:52,829 --> 00:15:56,639
different distribution so as to compare

00:15:54,389 --> 00:15:59,370
the description first for instance and

00:15:56,639 --> 00:16:03,149
in order to compare stuff you are first

00:15:59,370 --> 00:16:04,559
to find what is the same package in

00:16:03,149 --> 00:16:07,860
different distribution given that we

00:16:04,559 --> 00:16:10,199
have district different naming policy

00:16:07,860 --> 00:16:16,490
that could be interesting to interesting

00:16:10,199 --> 00:16:20,029
to extract that it's not currently so

00:16:16,490 --> 00:16:23,939
implementation detailed an instance I

00:16:20,029 --> 00:16:25,980
will you spell oh but great for many

00:16:23,939 --> 00:16:31,110
many reasons that's any Pelle leather

00:16:25,980 --> 00:16:33,660
will agree with and maybe other to Pearl

00:16:31,110 --> 00:16:38,040
was perfect for gluing everything in

00:16:33,660 --> 00:16:42,180
place but for implementing test itself

00:16:38,040 --> 00:16:45,300
in pupil it is not a good idea for

00:16:42,180 --> 00:16:49,860
instance for our true reason readability

00:16:45,300 --> 00:16:52,259
and performance in some case instance

00:16:49,860 --> 00:16:55,199
I'll I will try to explain a test that

00:16:52,259 --> 00:16:59,779
try to assess you don't have file

00:16:55,199 --> 00:17:03,480
conflict in your distribution so writing

00:16:59,779 --> 00:17:05,730
such of algorithm as painful in

00:17:03,480 --> 00:17:07,949
imperative language that an instance

00:17:05,730 --> 00:17:10,620
that's in order to check if you have

00:17:07,949 --> 00:17:12,630
conflict you have to read all the

00:17:10,620 --> 00:17:16,069
package foil package yet all your files

00:17:12,630 --> 00:17:18,449
and for each files in that various

00:17:16,069 --> 00:17:21,390
various metrics about your files such as

00:17:18,449 --> 00:17:23,580
the named AMD some cement so up and then

00:17:21,390 --> 00:17:27,510
you have to run your compressor nagar it

00:17:23,580 --> 00:17:32,220
which is this prob a tear in pseudocode

00:17:27,510 --> 00:17:34,200
yes it's not very readable and some

00:17:32,220 --> 00:17:39,060
language are better suited for this kind

00:17:34,200 --> 00:17:40,680
of stuff and iPad the readability issue

00:17:39,060 --> 00:17:45,240
for humans that are the performance

00:17:40,680 --> 00:17:48,870
issue for machines if you go to index

00:17:45,240 --> 00:17:53,310
every strength every files that compiled

00:17:48,870 --> 00:17:56,250
that's that's the difference Shepherd in

00:17:53,310 --> 00:18:00,120
packaging distribution you have a very

00:17:56,250 --> 00:18:04,470
very large memory footprint because you

00:18:00,120 --> 00:18:07,920
have two for each package and forage

00:18:04,470 --> 00:18:11,550
supported architecture and for each

00:18:07,920 --> 00:18:14,700
pinner a package and for each files and

00:18:11,550 --> 00:18:19,350
for each file the various metrics you

00:18:14,700 --> 00:18:22,170
have to a striped that's usually several

00:18:19,350 --> 00:18:26,790
gigabytes of memory if you do this in

00:18:22,170 --> 00:18:31,200
pure pal it was it very large so they

00:18:26,790 --> 00:18:36,840
were not not suited everyone hopefully

00:18:31,200 --> 00:18:40,290
am NOT a fully but fortunately we get

00:18:36,840 --> 00:18:43,590
all we got additional program to do this

00:18:40,290 --> 00:18:45,630
church and you don't have to to rewrite

00:18:43,590 --> 00:18:48,330
them for instance there is a something

00:18:45,630 --> 00:18:51,660
very useful which is written in oak ml

00:18:48,330 --> 00:18:54,240
which is a ph h which also it is for

00:18:51,660 --> 00:18:56,760
debian world as Deb Shh that does all

00:18:54,240 --> 00:19:05,760
this automatically for you and just a

00:18:56,760 --> 00:19:14,300
few seconds sorry yeah unfortunately

00:19:05,760 --> 00:19:18,030
that's a researcher tool and I another's

00:19:14,300 --> 00:19:21,990
soluciones provides some specific part

00:19:18,030 --> 00:19:24,420
of what you your tests and other

00:19:21,990 --> 00:19:27,420
language that for instance you can rely

00:19:24,420 --> 00:19:29,790
on SQL database or any any other kind of

00:19:27,420 --> 00:19:33,960
database for fast indexing and retrieval

00:19:29,790 --> 00:19:36,100
which is basically drop-ins some kind of

00:19:33,960 --> 00:19:39,910
dull code and

00:19:36,100 --> 00:19:44,289
delegating in other language will be a

00:19:39,910 --> 00:19:46,780
possibility some kind of some sample of

00:19:44,289 --> 00:19:49,750
code itself that's further a submission

00:19:46,780 --> 00:19:54,850
test imagine a test that will prevent

00:19:49,750 --> 00:19:57,630
employees to watch outside of of legal

00:19:54,850 --> 00:20:01,690
work hours that's a desert is called

00:19:57,630 --> 00:20:03,940
work inspection all those its realm

00:20:01,690 --> 00:20:08,620
first you get some kind of death

00:20:03,940 --> 00:20:13,059
destruction and documentation then that

00:20:08,620 --> 00:20:16,620
role percussion when you spell you are

00:20:13,059 --> 00:20:19,539
to derive from the basic test class and

00:20:16,620 --> 00:20:22,270
that's very simple you get to implement

00:20:19,539 --> 00:20:25,330
a simple method that gets lots of stuff

00:20:22,270 --> 00:20:28,720
stuff as input and you just have to

00:20:25,330 --> 00:20:32,950
compare the current the current time

00:20:28,720 --> 00:20:36,210
with a little time and if you're running

00:20:32,950 --> 00:20:41,770
outside of other way the other words

00:20:36,210 --> 00:20:44,760
moments just rise an exception and you

00:20:41,770 --> 00:20:52,030
will prevent the package submission to

00:20:44,760 --> 00:20:55,450
finish a simple test another example

00:20:52,030 --> 00:20:59,559
which is which illustrate modularity as

00:20:55,450 --> 00:21:03,250
how do you retrieve who is maintaining a

00:20:59,559 --> 00:21:07,409
given package you can and this this

00:21:03,250 --> 00:21:09,429
example use an ldap server to stir the

00:21:07,409 --> 00:21:14,020
correspondences between people and

00:21:09,429 --> 00:21:18,400
package that's that's some plugins that

00:21:14,020 --> 00:21:21,760
implement the resolver class and there

00:21:18,400 --> 00:21:23,710
is a constructor method and are just a

00:21:21,760 --> 00:21:27,940
simple method to implement which is

00:21:23,710 --> 00:21:29,620
retrieve who is doing what that's for

00:21:27,940 --> 00:21:33,220
majority you can imagine the same for

00:21:29,620 --> 00:21:37,510
flat files for beds are for dbms

00:21:33,220 --> 00:21:39,400
anything so if you project also does or

00:21:37,510 --> 00:21:43,710
choose a dev server for this kind of

00:21:39,400 --> 00:21:43,710
stuff you just have to rewrite this part

00:21:44,730 --> 00:21:50,950
work in progress now the code does is

00:21:47,860 --> 00:21:52,840
quite old it's a project started in five

00:21:50,950 --> 00:21:56,980
years ago something like that and it

00:21:52,840 --> 00:22:00,600
didn't involve much and into injector

00:21:56,980 --> 00:22:05,770
interim I started recently to adapt to

00:22:00,600 --> 00:22:09,160
modern pale guidelines and switching for

00:22:05,770 --> 00:22:12,220
instance to move because most worlds to

00:22:09,160 --> 00:22:16,240
use a GBH class for data storage instead

00:22:12,220 --> 00:22:19,690
instead of a Dutch data model and to

00:22:16,240 --> 00:22:21,850
switch to dynamic web page interface are

00:22:19,690 --> 00:22:25,600
probably using medicine or anything else

00:22:21,850 --> 00:22:32,530
but it's currently the riv right for

00:22:25,600 --> 00:22:36,250
ease of maintenance some conclusions

00:22:32,530 --> 00:22:41,260
about the veins it's about cure

00:22:36,250 --> 00:22:46,270
management and project q is basically

00:22:41,260 --> 00:22:49,510
finding issues problems you have several

00:22:46,270 --> 00:22:51,790
strategy to find any issues we can try

00:22:49,510 --> 00:22:54,520
to find in them the earlier at

00:22:51,790 --> 00:22:58,480
submission time which is prevent package

00:22:54,520 --> 00:23:00,790
with non problems to to be submitted at

00:22:58,480 --> 00:23:04,630
the earlier the better you can check

00:23:00,790 --> 00:23:08,230
after submission and then you you're

00:23:04,630 --> 00:23:13,150
testing thats package already used Rio

00:23:08,230 --> 00:23:17,130
strategy also you find problems you have

00:23:13,150 --> 00:23:21,280
to evaluate this problem meaning of the

00:23:17,130 --> 00:23:24,280
very ever in the severity that just

00:23:21,280 --> 00:23:27,070
warning or intermediate anything and you

00:23:24,280 --> 00:23:29,800
have also a probability evaluate if the

00:23:27,070 --> 00:23:33,220
real issue or if they could be false

00:23:29,800 --> 00:23:35,320
positive for instance that's if you're

00:23:33,220 --> 00:23:39,460
sure there is a problem with a suspect

00:23:35,320 --> 00:23:41,380
there is a problem its own part of the

00:23:39,460 --> 00:23:43,660
way that one should know there is a

00:23:41,380 --> 00:23:48,310
program you have two majors / and

00:23:43,660 --> 00:23:50,350
corrected and the point is not to be the

00:23:48,310 --> 00:23:54,250
only guy that's correct problem for

00:23:50,350 --> 00:23:56,169
everyone else but to maintain as correct

00:23:54,250 --> 00:24:00,279
this problem

00:23:56,169 --> 00:24:02,470
so you have to keep the motivation i and

00:24:00,279 --> 00:24:05,169
the idea the better so you have to

00:24:02,470 --> 00:24:08,499
possibly avoid it for the lads if you

00:24:05,169 --> 00:24:11,529
have a wonderful tool that rise unloaded

00:24:08,499 --> 00:24:13,600
I let every day the first day people

00:24:11,529 --> 00:24:15,879
will watch others Alette and eventually

00:24:13,600 --> 00:24:18,580
provide them the second day that will

00:24:15,879 --> 00:24:22,119
any of them and the third day they will

00:24:18,580 --> 00:24:27,609
just blacklist you mail that so you have

00:24:22,119 --> 00:24:29,739
to avoid further let's at maximum you

00:24:27,609 --> 00:24:34,210
have to use an an opt-in approach which

00:24:29,739 --> 00:24:36,700
means don't don't draw people and there

00:24:34,210 --> 00:24:40,419
are tons of males they do not they don't

00:24:36,700 --> 00:24:43,869
want to other people to either sell it

00:24:40,419 --> 00:24:48,309
to receive mail or not I'm even better

00:24:43,869 --> 00:24:49,899
to either we receive receive mails in

00:24:48,309 --> 00:24:52,269
different format on that males but

00:24:49,899 --> 00:24:54,119
receive something else's mail that's

00:24:52,269 --> 00:24:57,759
obtained approach is better that

00:24:54,119 --> 00:25:01,210
attitude in general you have to make

00:24:57,759 --> 00:25:03,129
your records clear and readable for

00:25:01,210 --> 00:25:05,649
everyone and not just for you that the

00:25:03,129 --> 00:25:07,929
idea that implemented a test possibly

00:25:05,649 --> 00:25:12,090
explain what the problem because not

00:25:07,929 --> 00:25:16,679
everyone understand them you have to

00:25:12,090 --> 00:25:24,820
possibly delegate EE T to making us to

00:25:16,679 --> 00:25:29,049
to to configure exceptions and publish

00:25:24,820 --> 00:25:33,600
metrics if the state can be fan- is

00:25:29,049 --> 00:25:33,600
doing best that's kind of emulation

00:25:35,009 --> 00:25:42,580
that's for conclusion i will give some

00:25:38,139 --> 00:25:44,830
kind of show what is some example there

00:25:42,580 --> 00:25:47,470
are projects as a website there is a

00:25:44,830 --> 00:25:50,529
demonstration running online i will show

00:25:47,470 --> 00:25:54,249
you it just in few minutes and the

00:25:50,529 --> 00:25:58,919
reserve we all use and apply to PF

00:25:54,249 --> 00:25:58,919
projects so just

00:26:02,110 --> 00:26:07,060
if network was sincere

00:26:16,800 --> 00:26:23,550
ok that's a demonstration of the check

00:26:21,180 --> 00:26:26,310
checking tool not just another

00:26:23,550 --> 00:26:31,710
submission tool applied to McGregor

00:26:26,310 --> 00:26:36,000
which is running daily there is a list

00:26:31,710 --> 00:26:39,630
of death basically sits test running and

00:26:36,000 --> 00:26:42,930
that for instance the list of what is a

00:26:39,630 --> 00:26:45,270
cage with new version available summer

00:26:42,930 --> 00:26:49,710
health for the word distribution so

00:26:45,270 --> 00:26:51,990
there is a quite huge list it has been

00:26:49,710 --> 00:26:55,470
updated this morning at six pm in the

00:26:51,990 --> 00:27:04,890
morning and what for instance you can

00:26:55,470 --> 00:27:09,570
see as or hear that gdm was maintained

00:27:04,890 --> 00:27:14,780
areas Fred as available as a new version

00:27:09,570 --> 00:27:18,780
in Nam upstream project for instance

00:27:14,780 --> 00:27:23,390
what can we see you can we have that of

00:27:18,780 --> 00:27:28,200
various leaves ok that's various impetus

00:27:23,390 --> 00:27:31,860
the beyond use as a similar a similar

00:27:28,200 --> 00:27:36,540
stuff we choose a perfect edge data

00:27:31,860 --> 00:27:38,850
which which collects upstream source but

00:27:36,540 --> 00:27:41,700
each maintainer as to enter some kind of

00:27:38,850 --> 00:27:44,580
forgets that says all absent page for

00:27:41,700 --> 00:27:46,830
this project is air and it's this stuff

00:27:44,580 --> 00:27:50,520
is running regularly that's different

00:27:46,830 --> 00:27:54,240
are you both value sources the two bros

00:27:50,520 --> 00:27:56,910
all fresh meat you bros all debian all

00:27:54,240 --> 00:27:59,910
fedora and then you the other is try to

00:27:56,910 --> 00:28:04,040
map it to monday the package and try to

00:27:59,910 --> 00:28:06,810
compile versions so it's different

00:28:04,040 --> 00:28:10,140
difference in front in differently there

00:28:06,810 --> 00:28:14,220
is a a PM church stuff that for each

00:28:10,140 --> 00:28:17,550
package for instance although DKMS is

00:28:14,220 --> 00:28:24,980
quite special but let's say that what is

00:28:17,550 --> 00:28:28,500
interesting here if i try any 0 KD

00:28:24,980 --> 00:28:32,630
kid he fool what space in main page is

00:28:28,500 --> 00:28:34,710
broken because it's relying on some

00:28:32,630 --> 00:28:43,919
dependencies that is not funny to just

00:28:34,710 --> 00:28:46,590
distribution for instance yes nepomuk is

00:28:43,919 --> 00:28:50,580
not never meet but the permit extension

00:28:46,590 --> 00:28:54,270
for gmail is broken because of a version

00:28:50,580 --> 00:28:56,610
a dependency is missing and so on so

00:28:54,270 --> 00:29:00,470
that's report for values test for google

00:28:56,610 --> 00:29:03,690
distribution and I Calvin I can have

00:29:00,470 --> 00:29:12,380
sorted by maintainer and to have my own

00:29:03,690 --> 00:29:14,880
reports and two out in my own case which

00:29:12,380 --> 00:29:18,270
that's my own list of work and package

00:29:14,880 --> 00:29:21,090
for instance oh that's my own instead of

00:29:18,270 --> 00:29:23,730
package that doesn't breathe anymore and

00:29:21,090 --> 00:29:30,299
if I follow the link i will have the

00:29:23,730 --> 00:29:35,210
robot load okay oh I can audit an

00:29:30,299 --> 00:29:40,590
autocross format fine sense that earth

00:29:35,210 --> 00:29:48,270
is filled much in the latest update

00:29:40,590 --> 00:29:51,029
taste test okay that's let's finish

00:29:48,270 --> 00:29:55,760
follow for the torch no I may eventually

00:29:51,029 --> 00:29:55,760
answer some questions if you have yeah

00:29:57,559 --> 00:30:03,390
how tight couple this Yuri with a web

00:30:01,110 --> 00:30:05,970
interface I mean web interface isn't

00:30:03,390 --> 00:30:11,000
most sexy and you'd probably want to

00:30:05,970 --> 00:30:18,029
integrate it anyway the other your other

00:30:11,000 --> 00:30:21,240
whatever stuff haha is it easy to do or

00:30:18,029 --> 00:30:22,950
it's not very light is it part of the

00:30:21,240 --> 00:30:25,679
work in progress which is to rewrite

00:30:22,950 --> 00:30:29,549
this web interface which is made of

00:30:25,679 --> 00:30:35,350
statically generated a Chanel page daily

00:30:29,549 --> 00:30:37,780
which is to revert it dynamically okay

00:30:35,350 --> 00:30:40,419
that's working progress and I'm not very

00:30:37,780 --> 00:30:43,210
efficient at this yeah yeah yeah you

00:30:40,419 --> 00:30:46,390
need and you need to be able to blow it

00:30:43,210 --> 00:30:49,780
and everything you know yeah particular

00:30:46,390 --> 00:30:52,799
because i don't think in ikea if it

00:30:49,780 --> 00:30:55,330
liked for it to be adopted outside you

00:30:52,799 --> 00:30:59,799
want something that can be easily

00:30:55,330 --> 00:31:01,990
integrated with what take what's in what

00:30:59,799 --> 00:31:04,809
you people are already using remember

00:31:01,990 --> 00:31:08,230
just not taking this and try fitted

00:31:04,809 --> 00:31:12,370
inland it doesn't look a 60 yes that's

00:31:08,230 --> 00:31:14,380
basically our I know what to do for the

00:31:12,370 --> 00:31:19,120
technical part which is out to implement

00:31:14,380 --> 00:31:21,100
what I need is input at what ya too I

00:31:19,120 --> 00:31:23,860
want to design the web interface for

00:31:21,100 --> 00:31:26,260
users yeah yeah well you know I search

00:31:23,860 --> 00:31:29,860
yeah you know I have some buddies for

00:31:26,260 --> 00:31:42,659
you that probably might get in there

00:31:29,860 --> 00:31:49,409
sometime soon oh yeah you want to know

00:31:42,659 --> 00:31:52,750
realism well I may try him unfortunately

00:31:49,409 --> 00:31:56,049
what I could show as the way we use it

00:31:52,750 --> 00:32:00,490
at model river but it's embedded another

00:31:56,049 --> 00:32:04,270
part of the build process meaning we

00:32:00,490 --> 00:32:05,679
don't call you resubmit directly it's

00:32:04,270 --> 00:32:07,409
embedded in as a tool that is very

00:32:05,679 --> 00:32:10,900
specific to my reverse it I

00:32:07,409 --> 00:32:14,590
unfortunately I cannot give a

00:32:10,900 --> 00:32:18,159
demonstration right now so what does it

00:32:14,590 --> 00:32:20,559
look like coming up it's ugly I come

00:32:18,159 --> 00:32:22,360
online stuff when you do better come out

00:32:20,559 --> 00:32:26,590
and you give a place approach this

00:32:22,360 --> 00:32:29,169
package for future and then the the tool

00:32:26,590 --> 00:32:32,710
just reply nothing if everything works

00:32:29,169 --> 00:32:35,640
and if some same phase for instance for

00:32:32,710 --> 00:32:38,200
instance you don't have the right

00:32:35,640 --> 00:32:40,659
package realize extension for the

00:32:38,200 --> 00:32:44,350
project your package is rejected please

00:32:40,659 --> 00:32:45,790
try again alright so also if you try to

00:32:44,350 --> 00:32:48,100
upload a package and there's a library

00:32:45,790 --> 00:32:50,740
missing also it just refuses to upload

00:32:48,100 --> 00:32:53,049
if you have the test for this all right

00:32:50,740 --> 00:32:54,640
but it'll either the tool itself adjusts

00:32:53,049 --> 00:32:59,820
something they'll read a configuration

00:32:54,640 --> 00:32:59,820
file the configuration says oh right II

00:33:02,880 --> 00:33:09,390
then run this list of agents okay

00:33:18,100 --> 00:33:22,200

YouTube URL: https://www.youtube.com/watch?v=h-Q5W23eUXE


