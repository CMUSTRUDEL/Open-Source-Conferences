Title: Mono Edge
Publication date: 2011-12-22
Playlist: FOSDEM 2010
Description: 
	By Miguel de Icaza

This talk will focus on the ongoing development efforts in Mono, and explore what are the new challenges that we are tackling. 

FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:01,879 --> 00:00:18,779
alright think right now what he's doing

00:00:16,619 --> 00:00:35,160
is doing a lot of slices for gas

00:00:18,779 --> 00:00:36,329
students all right thank you thank you

00:00:35,160 --> 00:00:37,980
sir Pat thanks man

00:00:36,329 --> 00:00:40,140
and thank you to the Reuben for and

00:00:37,980 --> 00:00:48,559
Stefan for selling this mono developer

00:00:40,140 --> 00:00:48,559
room today so as an enemy of freedom

00:00:49,520 --> 00:00:59,430
I'm here to pollute your thoughts thank

00:00:55,710 --> 00:01:01,230
you thank you you know the other day I

00:00:59,430 --> 00:01:04,110
passed Richard Stallman on the street in

00:01:01,230 --> 00:01:08,130
Cambridge and I said hey Richard and he

00:01:04,110 --> 00:01:09,960
kept walking as like all right it okay I

00:01:08,130 --> 00:01:13,409
think he doesn't like me anymore anyways

00:01:09,960 --> 00:01:15,150
I wanted to start because the last time

00:01:13,409 --> 00:01:17,640
that idea presentation had Falls them

00:01:15,150 --> 00:01:19,950
some of the most sensible people in the

00:01:17,640 --> 00:01:22,530
audience were a little bit upset because

00:01:19,950 --> 00:01:24,119
I showed a commercial product so I'm

00:01:22,530 --> 00:01:25,409
gonna try very hard today to not show

00:01:24,119 --> 00:01:27,330
you in a commercial product do not

00:01:25,409 --> 00:01:29,189
offend your sensibilities that being

00:01:27,330 --> 00:01:31,619
said my good friends from that

00:01:29,189 --> 00:01:33,360
commercial company are here Lucas Mayer

00:01:31,619 --> 00:01:36,780
who does really interesting work and

00:01:33,360 --> 00:01:39,060
Massimiliano Mangione who's there now

00:01:36,780 --> 00:01:43,049
work for that company that writes evil

00:01:39,060 --> 00:01:45,000
software so the really good guys if you

00:01:43,049 --> 00:01:47,310
want to talk to some people doing really

00:01:45,000 --> 00:01:49,979
interesting stuff anyways I'll try to

00:01:47,310 --> 00:01:53,159
keep the coca-cola out of the discussion

00:01:49,979 --> 00:01:55,560
um but it might not happen so if you're

00:01:53,159 --> 00:01:57,659
a person that he's easily offend that

00:01:55,560 --> 00:02:00,060
you might want to leave now okay

00:01:57,659 --> 00:02:06,840
that being said dammit what is going on

00:02:00,060 --> 00:02:08,039
here alright here we go so I'm gonna

00:02:06,840 --> 00:02:11,970
give you a quick update of where we are

00:02:08,039 --> 00:02:13,200
with mana today as it turns out I'm not

00:02:11,970 --> 00:02:13,860
going to cover some of these stuff

00:02:13,200 --> 00:02:15,540
Jewish

00:02:13,860 --> 00:02:16,530
covered monodevelop this morning and the

00:02:15,540 --> 00:02:19,050
amazing things that we're doing with

00:02:16,530 --> 00:02:21,090
debugging there I don't think that his

00:02:19,050 --> 00:02:23,670
demos were as good as all of the things

00:02:21,090 --> 00:02:25,050
that it does today but that's okay you

00:02:23,670 --> 00:02:27,300
know as you know we've been working on

00:02:25,050 --> 00:02:31,380
mana for a very long time it's almost

00:02:27,300 --> 00:02:32,610
it's almost been 10 years since we

00:02:31,380 --> 00:02:36,000
started we're in the ninth year of

00:02:32,610 --> 00:02:37,950
working on mana and a lot of things have

00:02:36,000 --> 00:02:39,600
happened there when we started the

00:02:37,950 --> 00:02:41,100
project I thought as usual I thought

00:02:39,600 --> 00:02:45,690
that we could be done in about two years

00:02:41,100 --> 00:02:47,340
and and somehow I'm still doing this so

00:02:45,690 --> 00:02:49,350
you know it's been a very interesting

00:02:47,340 --> 00:02:52,170
it's been a fantastic experience of

00:02:49,350 --> 00:02:53,760
course and I don't regret any minutes a

00:02:52,170 --> 00:02:55,500
bit we started working and one liked

00:02:53,760 --> 00:02:57,750
about two years ago know what three

00:02:55,500 --> 00:02:59,280
years ago this is the first time that we

00:02:57,750 --> 00:03:01,380
actually got Microsoft to collaborate

00:02:59,280 --> 00:03:04,410
with us and it's been it's been a very

00:03:01,380 --> 00:03:08,130
interesting experience for us mana

00:03:04,410 --> 00:03:09,600
develop was a project that was a project

00:03:08,130 --> 00:03:11,100
that started actually out of the

00:03:09,600 --> 00:03:13,920
community it's something we were never

00:03:11,100 --> 00:03:15,420
planning on doing and and it's and it's

00:03:13,920 --> 00:03:20,070
odd and I'll explain to you why in a

00:03:15,420 --> 00:03:22,770
second when I get some of the other

00:03:20,070 --> 00:03:24,120
topics oh so that's one of those are the

00:03:22,770 --> 00:03:26,820
three major projects that we'll work on

00:03:24,120 --> 00:03:28,230
and then finally we kind of do you know

00:03:26,820 --> 00:03:30,330
commercial projects so I'm not gonna

00:03:28,230 --> 00:03:33,300
even discuss those things today

00:03:30,330 --> 00:03:35,489
to not offend some of you so I'm just

00:03:33,300 --> 00:03:36,870
going to focus on the three one above so

00:03:35,489 --> 00:03:38,420
quick updates in the last time we were

00:03:36,870 --> 00:03:40,860
at FOSDEM

00:03:38,420 --> 00:03:42,570
we've done a lot of things and we've

00:03:40,860 --> 00:03:44,810
released a lot of software we've been

00:03:42,570 --> 00:03:47,670
releasing software like crazy ever since

00:03:44,810 --> 00:03:50,040
we did our mono 2.0 release this was a

00:03:47,670 --> 00:03:52,590
getting featured party with dotnet 2.0

00:03:50,040 --> 00:03:55,170
we did or 2.2 release which was mostly

00:03:52,590 --> 00:03:58,020
about improving the performance and

00:03:55,170 --> 00:04:00,630
upgrading or jet engine or jet engine

00:03:58,020 --> 00:04:02,820
needed some very significant upgrades we

00:04:00,630 --> 00:04:04,110
live that word with 2.2 and of course if

00:04:02,820 --> 00:04:06,209
each one of these releases we keep

00:04:04,110 --> 00:04:08,209
improving the carafe library support and

00:04:06,209 --> 00:04:11,130
things like that

00:04:08,209 --> 00:04:12,900
g4 became the first long-term supported

00:04:11,130 --> 00:04:14,760
version of Manas is the first work time

00:04:12,900 --> 00:04:17,400
that we said we're going to support this

00:04:14,760 --> 00:04:23,280
with bug fixes security issues and so on

00:04:17,400 --> 00:04:24,600
for 18 months so you know it's been it's

00:04:23,280 --> 00:04:27,110
been more work than we actually wanted

00:04:24,600 --> 00:04:29,419
to do but it had to be done

00:04:27,110 --> 00:04:30,919
so that's not 2.4 and that's a release

00:04:29,419 --> 00:04:33,740
that we officially support and the

00:04:30,919 --> 00:04:35,689
release that we officially figs

00:04:33,740 --> 00:04:37,849
box for and finally the release that we

00:04:35,689 --> 00:04:41,689
just released we just released 2.6 it

00:04:37,849 --> 00:04:43,219
brings mono 2003 0.5 compatibility just

00:04:41,689 --> 00:04:45,590
a few months shorts of microsoft

00:04:43,219 --> 00:04:48,349
shipping dotnet 4.0 and we'll talk about

00:04:45,590 --> 00:04:50,419
what our plans are there now with

00:04:48,349 --> 00:04:54,349
moonlight again moonlight started as a

00:04:50,419 --> 00:04:56,180
project was kind of a stunt and you have

00:04:54,349 --> 00:04:58,460
to remember you know if you put it into

00:04:56,180 --> 00:05:01,849
context Microsoft really never liked

00:04:58,460 --> 00:05:04,400
mono they were not very happy about the

00:05:01,849 --> 00:05:06,469
existence of mana in the first place so

00:05:04,400 --> 00:05:08,330
for example went to their conference

00:05:06,469 --> 00:05:09,379
since I would try to get talks approved

00:05:08,330 --> 00:05:11,870
at their conference and they would

00:05:09,379 --> 00:05:14,030
always find a way for either rigging the

00:05:11,870 --> 00:05:16,219
votes or making sure that all the rooms

00:05:14,030 --> 00:05:18,860
are full oh sorry about that you can

00:05:16,219 --> 00:05:20,779
really present or uh you know we love

00:05:18,860 --> 00:05:22,490
the paperwork you don't really have you

00:05:20,779 --> 00:05:23,930
can really present here so we used the

00:05:22,490 --> 00:05:28,039
number of Correa techniques over the

00:05:23,930 --> 00:05:30,139
years the first one was that we use

00:05:28,039 --> 00:05:32,960
post-it notes and we actually went and

00:05:30,139 --> 00:05:35,779
patched the programs so we announced the

00:05:32,960 --> 00:05:37,159
alternative Boff session of mano that

00:05:35,779 --> 00:05:42,050
was the first thing that we did the

00:05:37,159 --> 00:05:44,629
second thing that we did was we you know

00:05:42,050 --> 00:05:47,180
some of some wrote Microsoft employees

00:05:44,629 --> 00:05:50,449
actually got us time inside their talks

00:05:47,180 --> 00:05:52,490
but it was kind of an unofficial so so

00:05:50,449 --> 00:05:55,250
that wasn't that same year PDC the other

00:05:52,490 --> 00:05:57,469
thing that we did is then we hosted a

00:05:55,250 --> 00:05:58,669
lunch session so in the middle of the

00:05:57,469 --> 00:06:00,440
hallways for the Microsoft conference

00:05:58,669 --> 00:06:01,849
there was a lunch area and we had a

00:06:00,440 --> 00:06:04,759
meeting there and there were about

00:06:01,849 --> 00:06:06,620
probably 80 people there and we had to

00:06:04,759 --> 00:06:08,569
yell basically to you know to get the

00:06:06,620 --> 00:06:12,710
message across and gave t-shirts so that

00:06:08,569 --> 00:06:14,599
was a really good year the third year we

00:06:12,710 --> 00:06:16,460
couldn't really have we couldn't really

00:06:14,599 --> 00:06:18,740
do that because the police the last time

00:06:16,460 --> 00:06:20,539
actually we're not happy about Aussie

00:06:18,740 --> 00:06:23,449
using space that we hadn't paid for so

00:06:20,539 --> 00:06:24,860
we actually rented a room about a dozen

00:06:23,449 --> 00:06:27,710
blocks away from the conference center

00:06:24,860 --> 00:06:29,060
and we had people come in and that was a

00:06:27,710 --> 00:06:30,379
lot of fun because a lot of the

00:06:29,060 --> 00:06:32,810
Microsoft employees actually showed up

00:06:30,379 --> 00:06:34,219
and and a couple of people in the

00:06:32,810 --> 00:06:36,050
community actually said this was really

00:06:34,219 --> 00:06:37,580
good it was that it was scheduled to

00:06:36,050 --> 00:06:40,219
last for an hour in lasts about five

00:06:37,580 --> 00:06:41,300
hours and it was just a bunch of happy

00:06:40,219 --> 00:06:44,740
open-source people

00:06:41,300 --> 00:06:47,030
exchanging ideas with each other then

00:06:44,740 --> 00:06:49,159
then things started to change slowly

00:06:47,030 --> 00:06:51,560
with moonlight with Kenneth molesta so

00:06:49,159 --> 00:06:53,960
just you know what we're trying to do at

00:06:51,560 --> 00:06:55,669
that point was you know we're trying to

00:06:53,960 --> 00:06:58,159
promote the idea of an open source

00:06:55,669 --> 00:07:01,580
implementation or running odd Net

00:06:58,159 --> 00:07:02,539
Applications on Linux and so as I said

00:07:01,580 --> 00:07:05,780
this didn't really go well with

00:07:02,539 --> 00:07:09,409
Microsoft so one day at one of these

00:07:05,780 --> 00:07:11,930
rogue events it turns out that we met

00:07:09,409 --> 00:07:14,210
the guy from Microsoft France mark

00:07:11,930 --> 00:07:16,610
djellaba and Mark says you know I would

00:07:14,210 --> 00:07:18,139
really like if you guys go come to the

00:07:16,610 --> 00:07:20,990
mix conference and do I talk about

00:07:18,139 --> 00:07:23,509
moonlight or not it didn't even exist I

00:07:20,990 --> 00:07:25,610
talked about mono this was just after

00:07:23,509 --> 00:07:27,080
Microsoft had announced the server light

00:07:25,610 --> 00:07:28,550
and I said I actually like this very

00:07:27,080 --> 00:07:30,259
much we're going to build an

00:07:28,550 --> 00:07:32,360
implementation right so this is you know

00:07:30,259 --> 00:07:33,710
in the heat of the moment I journalist

00:07:32,360 --> 00:07:34,940
comes and asked me so what do you think

00:07:33,710 --> 00:07:36,860
of this I said this is awesome we're

00:07:34,940 --> 00:07:38,479
gonna build a clone right I didn't

00:07:36,860 --> 00:07:40,009
really think about this I didn't talk to

00:07:38,479 --> 00:07:42,139
my manager about this

00:07:40,009 --> 00:07:45,289
I had no budget I had no permission but

00:07:42,139 --> 00:07:47,240
I figure what can happen right because

00:07:45,289 --> 00:07:51,830
like a friend of mine in Mexico used to

00:07:47,240 --> 00:07:53,569
say my friend used to say you know when

00:07:51,830 --> 00:07:55,759
it comes that well you know when it's

00:07:53,569 --> 00:07:58,580
the time for fast decisions I'm a man of

00:07:55,759 --> 00:08:01,340
action right have you heard this before

00:07:58,580 --> 00:08:03,500
I've repeated like a million times you

00:08:01,340 --> 00:08:05,509
know when there's a time for you know

00:08:03,500 --> 00:08:08,150
for acting quickly I am a man of action

00:08:05,509 --> 00:08:10,490
and what is it and when the time comes

00:08:08,150 --> 00:08:14,810
for calm rational decisions I'm a man of

00:08:10,490 --> 00:08:16,099
action so I am a man of action so I you

00:08:14,810 --> 00:08:18,050
know I announce that we're gonna do that

00:08:16,099 --> 00:08:20,300
regardless of you know without any

00:08:18,050 --> 00:08:22,520
permission and what was interesting is

00:08:20,300 --> 00:08:25,430
that this guy Margiela bear said hey why

00:08:22,520 --> 00:08:28,099
don't you come and present mano at the

00:08:25,430 --> 00:08:29,360
Microsoft conference in Paris and I

00:08:28,099 --> 00:08:30,620
figured well I need to take this

00:08:29,360 --> 00:08:32,630
opportunity because this guy is he

00:08:30,620 --> 00:08:36,320
hasn't talked to his boss because he

00:08:32,630 --> 00:08:37,849
does they're gonna shut it down so so I

00:08:36,320 --> 00:08:40,579
said yes of course as long as you don't

00:08:37,849 --> 00:08:42,260
announce it so he didn't announce it I

00:08:40,579 --> 00:08:44,720
didn't think that he was serious until

00:08:42,260 --> 00:08:46,519
one day when he sends me an email I say

00:08:44,720 --> 00:08:48,649
hey we were serious we want to have you

00:08:46,519 --> 00:08:54,050
in the keynote and you know if you won

00:08:48,649 --> 00:08:55,100
we'll give you a session - so so I said

00:08:54,050 --> 00:08:56,750
and what did you talk about

00:08:55,100 --> 00:08:58,819
on linens and of course we had

00:08:56,750 --> 00:09:01,370
absolutely nothing we had zero lines of

00:08:58,819 --> 00:09:03,110
code written nothing done they say yeah

00:09:01,370 --> 00:09:07,370
of course will show Silverlight on Linux

00:09:03,110 --> 00:09:08,779
running no problem so I sent an email so

00:09:07,370 --> 00:09:10,940
I sent that email to my team and I said

00:09:08,779 --> 00:09:12,829
ok guys we got three weeks whoever wants

00:09:10,940 --> 00:09:14,810
to join in this hackathon we need to

00:09:12,829 --> 00:09:18,259
make several I'd run on Linux so who's

00:09:14,810 --> 00:09:21,259
in and you know about six or seven

00:09:18,259 --> 00:09:23,000
people said I'm in and I don't think

00:09:21,259 --> 00:09:24,589
we've ever worked that's hard you know

00:09:23,000 --> 00:09:27,709
I've never worked as hard in my life as

00:09:24,589 --> 00:09:29,480
those three weeks it was 21 days and I

00:09:27,709 --> 00:09:32,690
think that we're working you know 18

00:09:29,480 --> 00:09:35,000
hours 20 hours 20 hour days for three

00:09:32,690 --> 00:09:37,190
weeks but we managed to get we managed

00:09:35,000 --> 00:09:39,980
to get all of the demos that Microsoft

00:09:37,190 --> 00:09:41,029
showed at the previous conference it

00:09:39,980 --> 00:09:44,269
makes in March

00:09:41,029 --> 00:09:46,730
ready value by the what is this thing

00:09:44,269 --> 00:09:48,980
June 21st that day were the French make

00:09:46,730 --> 00:09:53,259
that they have the celebration and the

00:09:48,980 --> 00:09:56,000
street musicians anyways it was that day

00:09:53,259 --> 00:09:57,350
and just before my presentation now the

00:09:56,000 --> 00:09:58,940
promise that the night before the

00:09:57,350 --> 00:10:00,800
Microsoft guy calls me and he had to

00:09:58,940 --> 00:10:03,970
notify his boss that he was having me on

00:10:00,800 --> 00:10:07,939
the keynote and that didn't go very well

00:10:03,970 --> 00:10:09,350
but anyways the guy kind of said okay we

00:10:07,939 --> 00:10:11,689
already made an announcement we're gonna

00:10:09,350 --> 00:10:13,670
let let it through so what happened is

00:10:11,689 --> 00:10:15,649
we did the announcement we we showed

00:10:13,670 --> 00:10:18,470
this stuff and I was updating from SVN

00:10:15,649 --> 00:10:20,689
five minutes before the demo just to get

00:10:18,470 --> 00:10:22,490
the last the last fixes in and we

00:10:20,689 --> 00:10:24,439
actually were we managed to demo it

00:10:22,490 --> 00:10:26,149
it was very broken of course you didn't

00:10:24,439 --> 00:10:28,040
have a security system it was lacking a

00:10:26,149 --> 00:10:29,149
lot of things but it was able to show at

00:10:28,040 --> 00:10:31,189
least everything that Microsoft showed

00:10:29,149 --> 00:10:34,790
at the previous conference oh it was it

00:10:31,189 --> 00:10:36,079
was quite an achievement then we we

00:10:34,790 --> 00:10:39,430
signed an agreement with Microsoft in

00:10:36,079 --> 00:10:42,139
which they agreed to give us test Suites

00:10:39,430 --> 00:10:44,269
to make sure that moonlight on Linux was

00:10:42,139 --> 00:10:46,130
run everything that it was supposed to

00:10:44,269 --> 00:10:48,009
run and they gave us access to their

00:10:46,130 --> 00:10:50,630
engineer so we could ask them questions

00:10:48,009 --> 00:10:52,279
now part of the agreement is we really

00:10:50,630 --> 00:10:53,600
didn't care about moonlight 1.0 which is

00:10:52,279 --> 00:10:55,189
that javascript on the engine we only

00:10:53,600 --> 00:10:57,350
care about this one but part of the

00:10:55,189 --> 00:10:59,750
agreement required that we built the 1.0

00:10:57,350 --> 00:11:02,449
runtime so is that all right let's go

00:10:59,750 --> 00:11:05,120
build that piece of junk so we build

00:11:02,449 --> 00:11:06,709
that thing and there's probably there

00:11:05,120 --> 00:11:08,860
were probably only one application which

00:11:06,709 --> 00:11:10,420
was the live streaming of Obama from

00:11:08,860 --> 00:11:11,860
the official fear was running in

00:11:10,420 --> 00:11:14,709
Silverlight so that was probably the

00:11:11,860 --> 00:11:16,810
only use that we had for that then we

00:11:14,709 --> 00:11:20,290
release 2.0 we just released 2.0 a

00:11:16,810 --> 00:11:22,690
couple of month ago the the reason why

00:11:20,290 --> 00:11:24,220
it took so long from you know we had

00:11:22,690 --> 00:11:26,529
most of these done in three weeks why

00:11:24,220 --> 00:11:28,000
did it take us two years to build it is

00:11:26,529 --> 00:11:30,579
because we need to have a security

00:11:28,000 --> 00:11:32,769
system in place mono didn't have a

00:11:30,579 --> 00:11:33,550
security system and basically trusted

00:11:32,769 --> 00:11:35,200
everything you did

00:11:33,550 --> 00:11:37,089
so have you said I want to access the

00:11:35,200 --> 00:11:39,040
file system it would let you actually

00:11:37,089 --> 00:11:41,140
file system I want to scan the file

00:11:39,040 --> 00:11:42,490
system of the user copy each file over a

00:11:41,140 --> 00:11:44,110
network socket and post it to the

00:11:42,490 --> 00:11:47,890
Internet it would let you do that

00:11:44,110 --> 00:11:51,040
so obviously you know obviously these

00:11:47,890 --> 00:11:52,240
didn't really work because when you're

00:11:51,040 --> 00:11:53,860
on the internet you should assume that

00:11:52,240 --> 00:11:56,290
all of the code that you're getting is

00:11:53,860 --> 00:11:57,880
hostile code right so it took us a

00:11:56,290 --> 00:11:59,350
couple of years to work on this we had

00:11:57,880 --> 00:12:01,600
to build a verifier we had to build a

00:11:59,350 --> 00:12:04,390
security sandbox we had to audit the

00:12:01,600 --> 00:12:07,029
code we had to you know add security

00:12:04,390 --> 00:12:09,100
policies to sockets we had to add

00:12:07,029 --> 00:12:10,720
whitelist and blacklist or api's to make

00:12:09,100 --> 00:12:15,130
sure that the entire system was locked

00:12:10,720 --> 00:12:16,870
down and I'm actually did help us I'm

00:12:15,130 --> 00:12:17,820
actually actually did help us make that

00:12:16,870 --> 00:12:23,170
happen

00:12:17,820 --> 00:12:25,420
now as of Allah as of last week we

00:12:23,170 --> 00:12:27,339
released our free our first version of

00:12:25,420 --> 00:12:31,990
3.0 so we're catching up quickly to what

00:12:27,339 --> 00:12:35,560
Microsoft has and these are first

00:12:31,990 --> 00:12:37,089
preview of moonlight and we're hoping to

00:12:35,560 --> 00:12:40,209
do another release in the next few days

00:12:37,089 --> 00:12:41,440
for the Olympics the Olympics at least

00:12:40,209 --> 00:12:42,790
in the United States and a couple of

00:12:41,440 --> 00:12:45,279
other countries will be streamed live

00:12:42,790 --> 00:12:46,450
with Silverlight because Microsoft has

00:12:45,279 --> 00:12:49,029
done the business development on that

00:12:46,450 --> 00:12:50,800
area so we'll be streaming that using

00:12:49,029 --> 00:12:52,390
moonlight there's still a couple of

00:12:50,800 --> 00:12:54,220
bucks here and there and we don't

00:12:52,390 --> 00:12:55,959
support chrome and it's all andreas

00:12:54,220 --> 00:12:57,820
fault who is right there so you're a

00:12:55,959 --> 00:12:59,949
chrome user she is the person that you

00:12:57,820 --> 00:13:02,410
need to complain to for not fixing that

00:12:59,949 --> 00:13:06,120
bug fast enough despite the extensive

00:13:02,410 --> 00:13:09,370
two-week period that she had to fix it

00:13:06,120 --> 00:13:13,330
so anyways and raise your hand

00:13:09,370 --> 00:13:15,390
I was so she's wearing black so if

00:13:13,330 --> 00:13:18,850
you're a chrome user like everybody else

00:13:15,390 --> 00:13:23,860
you know I stopped using Firefox a

00:13:18,850 --> 00:13:25,480
couple of weeks ago anyways the we have

00:13:23,860 --> 00:13:27,010
a couple of nice things in store I'll

00:13:25,480 --> 00:13:30,670
talk a little bit more about this but

00:13:27,010 --> 00:13:34,990
mono 2.8 which should come out a few

00:13:30,670 --> 00:13:36,910
weeks after dotnet 4.0 ships it's gonna

00:13:34,990 --> 00:13:39,010
be a big release for us it's gonna be

00:13:36,910 --> 00:13:41,500
big in a couple of ways the first one is

00:13:39,010 --> 00:13:42,820
that is the first time that we're

00:13:41,500 --> 00:13:44,410
actually going to ship the c-shaped

00:13:42,820 --> 00:13:48,190
language compiler at the same time as

00:13:44,410 --> 00:13:49,870
Microsoft this so in the past for

00:13:48,190 --> 00:13:51,640
example when they release t-shirt one it

00:13:49,870 --> 00:13:55,060
took us about you know a year to get

00:13:51,640 --> 00:13:56,529
c-sharp one when they CP shirt - it took

00:13:55,060 --> 00:13:58,660
us about a year and a half to get it see

00:13:56,529 --> 00:14:02,170
sure it was a very complicated process

00:13:58,660 --> 00:14:04,450
for us t-shirt 3 again took us and we

00:14:02,170 --> 00:14:05,860
were about a year late with leisure poor

00:14:04,450 --> 00:14:07,390
is the first time that we're gonna have

00:14:05,860 --> 00:14:09,100
that in fact the compiler is ready to go

00:14:07,390 --> 00:14:11,310
out now you can get it today

00:14:09,100 --> 00:14:14,290
it's complete it's finished it's done

00:14:11,310 --> 00:14:16,450
and this is before the compiler compiler

00:14:14,290 --> 00:14:18,040
ship so they're both in beta and by the

00:14:16,450 --> 00:14:19,750
time they're ship they're both going to

00:14:18,040 --> 00:14:21,490
be in release mode so you should be able

00:14:19,750 --> 00:14:25,450
to get that the other piece that we did

00:14:21,490 --> 00:14:27,880
is with 2.8 we're switching to LLVM as

00:14:25,450 --> 00:14:30,760
our cogeneration engine well we're not

00:14:27,880 --> 00:14:32,529
switching we're making in an option and

00:14:30,760 --> 00:14:35,020
what that means is you'll be able to

00:14:32,529 --> 00:14:36,820
continue using monos fast jet engine for

00:14:35,020 --> 00:14:40,810
most operations but for certain loads

00:14:36,820 --> 00:14:42,370
you'll be able to use LVM and 3.0 which

00:14:40,810 --> 00:14:43,630
should be out in june is the first time

00:14:42,370 --> 00:14:45,880
that we're gonna have a compacting

00:14:43,630 --> 00:14:47,350
garbage collector i know that most of

00:14:45,880 --> 00:14:48,760
you people don't care about this in fact

00:14:47,350 --> 00:14:50,920
look as last night I was telling me

00:14:48,760 --> 00:14:52,560
don't talk about LVM don't talk about

00:14:50,920 --> 00:14:54,670
xgn nobody cares

00:14:52,560 --> 00:14:57,790
thirty percent performance increase

00:14:54,670 --> 00:15:01,300
nobody cares like alright so I'm gonna

00:14:57,790 --> 00:15:03,040
keep it short then monodevelop we did -

00:15:01,300 --> 00:15:04,360
oh and - - so it's been a lot of

00:15:03,040 --> 00:15:09,760
fergus's the last time I was here at

00:15:04,360 --> 00:15:12,880
Fossum and did a lot of fun now of

00:15:09,760 --> 00:15:14,290
course I don't you know I don't really

00:15:12,880 --> 00:15:16,270
have the time to talk about everything

00:15:14,290 --> 00:15:18,339
that is going on in the mono world it's

00:15:16,270 --> 00:15:19,959
too complicated this light is just up so

00:15:18,339 --> 00:15:21,910
you can read it quickly and we can move

00:15:19,959 --> 00:15:22,870
on quickly but there's too many things

00:15:21,910 --> 00:15:25,150
happening

00:15:22,870 --> 00:15:27,580
and when I had to pick what to talk

00:15:25,150 --> 00:15:29,380
about today I really struggle about what

00:15:27,580 --> 00:15:33,160
is it that I I wanted to talk to you

00:15:29,380 --> 00:15:34,900
today and to some extent it was it was a

00:15:33,160 --> 00:15:36,370
choice that was made simpler because you

00:15:34,900 --> 00:15:38,590
is was talking about monodevelop so I

00:15:36,370 --> 00:15:41,350
didn't have to do that a van was started

00:15:38,590 --> 00:15:44,530
on Aaron Ruby I don't do that

00:15:41,350 --> 00:15:48,880
Alan is having a talk about alex has a

00:15:44,530 --> 00:15:50,470
talked about about the torrent I don't

00:15:48,880 --> 00:15:52,300
need to talk about that so there's other

00:15:50,470 --> 00:15:54,340
talks that will complement what I should

00:15:52,300 --> 00:15:55,870
have said initially but there's a lot of

00:15:54,340 --> 00:15:58,930
really interesting things happening like

00:15:55,870 --> 00:16:00,910
for example or seizure compiler which is

00:15:58,930 --> 00:16:02,980
written in C sharp actually there's

00:16:00,910 --> 00:16:04,930
about 12 different Forks of the compiler

00:16:02,980 --> 00:16:06,520
so people have taken to see the are

00:16:04,930 --> 00:16:08,470
compiler and make changes and they're

00:16:06,520 --> 00:16:10,780
exploring different you know language

00:16:08,470 --> 00:16:12,160
techniques or things things like that so

00:16:10,780 --> 00:16:14,230
you know it's it's been a very

00:16:12,160 --> 00:16:16,330
interesting experiment and I want you

00:16:14,230 --> 00:16:19,660
even bother going through the rest and

00:16:16,330 --> 00:16:22,240
we have any water no we don't all right

00:16:19,660 --> 00:16:23,880
I already talked to you about this these

00:16:22,240 --> 00:16:26,320
are max of collaboration for moonlight

00:16:23,880 --> 00:16:29,350
and although it was initially

00:16:26,320 --> 00:16:31,540
collaboration around moonlight it seems

00:16:29,350 --> 00:16:33,280
like they are willing to extend this

00:16:31,540 --> 00:16:35,350
collaboration out to mourn on the server

00:16:33,280 --> 00:16:38,440
which is something that I you know I

00:16:35,350 --> 00:16:39,850
thought they would never do now a little

00:16:38,440 --> 00:16:41,920
bit of a patent update because I know

00:16:39,850 --> 00:16:46,150
that all of you are scared shitless

00:16:41,920 --> 00:16:48,220
about patents so the most important

00:16:46,150 --> 00:16:49,630
thing is that compared to pretty much

00:16:48,220 --> 00:16:52,810
any other piece of open-source software

00:16:49,630 --> 00:16:55,660
actually mono has gotten the most patent

00:16:52,810 --> 00:16:58,270
covenants and that is the most patent

00:16:55,660 --> 00:17:00,820
coverage than anyone else and in large

00:16:58,270 --> 00:17:02,140
part because there's been an uproar in

00:17:00,820 --> 00:17:05,260
the community about well what is the

00:17:02,140 --> 00:17:06,610
situation with modern patents so this is

00:17:05,260 --> 00:17:09,130
a quick update on what we have today

00:17:06,610 --> 00:17:11,380
c-sharp discovered by the community

00:17:09,130 --> 00:17:14,410
promise about the ACMA 34 and the ISO

00:17:11,380 --> 00:17:15,940
versions of the standard which means you

00:17:14,410 --> 00:17:19,330
can use it for anything you want the

00:17:15,940 --> 00:17:21,790
patents are only available for c-sharp

00:17:19,330 --> 00:17:24,340
implementations which is actually quite

00:17:21,790 --> 00:17:26,680
ironic it basically means that you're

00:17:24,340 --> 00:17:27,130
more protected from a Microsoft patent

00:17:26,680 --> 00:17:28,630
threat

00:17:27,130 --> 00:17:31,030
if you use C sharp than if you use

00:17:28,630 --> 00:17:33,460
another language that copy ideas from

00:17:31,030 --> 00:17:36,100
c-sharp because the pads are not granted

00:17:33,460 --> 00:17:36,610
2006 you know I think that there's

00:17:36,100 --> 00:17:38,799
something to be

00:17:36,610 --> 00:17:40,270
that'll Microsoft not having the

00:17:38,799 --> 00:17:43,750
interest of the open-source community at

00:17:40,270 --> 00:17:46,000
heart so that is true but as I said at

00:17:43,750 --> 00:17:48,250
least a seizure piece is available the

00:17:46,000 --> 00:17:49,600
same thing applies to the CLI and the

00:17:48,250 --> 00:17:51,490
ACMA committee is in session for

00:17:49,600 --> 00:17:55,630
publishing the sixth edition I believe

00:17:51,490 --> 00:17:57,040
of ACMA three three five other pieces

00:17:55,630 --> 00:17:59,799
things like server lighter covered by

00:17:57,040 --> 00:18:01,570
zamo by several example as well so the

00:17:59,799 --> 00:18:03,640
both vocabularies for server light are

00:18:01,570 --> 00:18:05,500
in the open and those ones come with no

00:18:03,640 --> 00:18:10,510
strings attached so that is pretty good

00:18:05,500 --> 00:18:13,059
I forgot to mention also that the

00:18:10,510 --> 00:18:15,790
moonlight three and four covenant no

00:18:13,059 --> 00:18:17,890
longer has a novella cific coverage

00:18:15,790 --> 00:18:20,770
everybody is covered equally under

00:18:17,890 --> 00:18:21,970
moonlight three and four unlike the

00:18:20,770 --> 00:18:23,830
previous version that wasn't a veil

00:18:21,970 --> 00:18:26,260
specific this time it's Nivelle gives

00:18:23,830 --> 00:18:27,880
the same rights as everybody else there

00:18:26,260 --> 00:18:31,030
is one difference though Novell is a

00:18:27,880 --> 00:18:32,980
licensed source to MPEG LA which means

00:18:31,030 --> 00:18:37,049
that when you get the software from

00:18:32,980 --> 00:18:41,530
Novell you will get codecs so h.264 and

00:18:37,049 --> 00:18:43,330
vc-1 just like just like with Google you

00:18:41,530 --> 00:18:45,520
have google chrome and Google chromium

00:18:43,330 --> 00:18:47,770
and Google Chrome comes with codecs and

00:18:45,520 --> 00:18:48,970
chromium doesn't the same thing applies

00:18:47,770 --> 00:18:50,650
with moonlight if you want to get the

00:18:48,970 --> 00:18:53,140
codecs you need to talk to MPEG LA and

00:18:50,650 --> 00:18:54,910
figure out what the licensing deal is

00:18:53,140 --> 00:18:57,940
there this is not a Microsoft patent

00:18:54,910 --> 00:18:59,530
this is an MPEG LA patent then

00:18:57,940 --> 00:19:01,390
additionally there is a bunch of of

00:18:59,530 --> 00:19:03,460
grants of patent grants that come with

00:19:01,390 --> 00:19:05,110
different pieces that Microsoft has open

00:19:03,460 --> 00:19:07,090
sourced so they have open sourced

00:19:05,110 --> 00:19:08,830
asp.net MVC the dynamic language runtime

00:19:07,090 --> 00:19:11,559
we just heard about that a few minutes

00:19:08,830 --> 00:19:13,600
ago or Church which is a Content Manager

00:19:11,559 --> 00:19:16,000
inside HD at night Ajax and manages in

00:19:13,600 --> 00:19:18,610
your framework and two languages I'm a

00:19:16,000 --> 00:19:21,250
Python or Ruby and there's a couple more

00:19:18,610 --> 00:19:23,730
things to come but we're not ready well

00:19:21,250 --> 00:19:26,080
they're not ready to announce that yet

00:19:23,730 --> 00:19:27,730
the rumor is that F sharp will be an

00:19:26,080 --> 00:19:29,710
open source compiler so which is an

00:19:27,730 --> 00:19:33,700
interesting language for researcher it's

00:19:29,710 --> 00:19:37,900
a rumor and and that's all there is to

00:19:33,700 --> 00:19:39,669
it so now when it comes to so that's

00:19:37,900 --> 00:19:41,620
kind of an overview a quick overview and

00:19:39,669 --> 00:19:43,419
we'll probably gonna you know touch on

00:19:41,620 --> 00:19:45,309
different subjects from now on and the

00:19:43,419 --> 00:19:46,720
problem is that a couple of months ago I

00:19:45,309 --> 00:19:49,179
asked so what do people want to hear

00:19:46,720 --> 00:19:49,779
about about you know I was having it I

00:19:49,179 --> 00:19:52,539
was

00:19:49,779 --> 00:19:53,409
presentation on stackoverflow and I said

00:19:52,539 --> 00:19:57,249
what do you guys want to hear about

00:19:53,409 --> 00:19:59,649
about Mona and so I made a quick fall

00:19:57,249 --> 00:20:01,929
because these days my entire life is

00:19:59,649 --> 00:20:04,059
driven by what people say on pulse so I

00:20:01,929 --> 00:20:06,039
set up a Google poll and I ask people

00:20:04,059 --> 00:20:07,749
what to do and the problem was that as

00:20:06,039 --> 00:20:10,809
you can see there's really nothing out

00:20:07,749 --> 00:20:12,489
there that you know it seems like people

00:20:10,809 --> 00:20:14,049
don't really have a good opinion there's

00:20:12,489 --> 00:20:16,929
no one topic that people really want to

00:20:14,049 --> 00:20:18,399
hear about so I ended up figuring out

00:20:16,929 --> 00:20:19,029
that I'll just talk about whatever the

00:20:18,399 --> 00:20:23,529
 I want

00:20:19,029 --> 00:20:25,749
and and it might be interesting or it

00:20:23,529 --> 00:20:27,609
might not be now the bad news is that

00:20:25,749 --> 00:20:30,309
already you is took monodevelop so I

00:20:27,609 --> 00:20:32,679
can't talk about that and I can't talk

00:20:30,309 --> 00:20:36,219
about any coca-cola based products so

00:20:32,679 --> 00:20:38,289
you know so technically you know I

00:20:36,219 --> 00:20:41,769
shouldn't say that 500 applications from

00:20:38,289 --> 00:20:43,659
the app store bill with mono and 10% of

00:20:41,769 --> 00:20:45,580
the top selling games for the app store

00:20:43,659 --> 00:20:49,389
bill with unities product so I won't

00:20:45,580 --> 00:20:51,749
mention that but I will talk about

00:20:49,389 --> 00:20:51,749
happiness

00:20:56,290 --> 00:21:02,080
right so I read this book you know

00:21:00,400 --> 00:21:03,190
there's there's a couple of journalists

00:21:02,080 --> 00:21:06,850
that are obsessed with everything about

00:21:03,190 --> 00:21:08,500
is doing my life and you know I I do

00:21:06,850 --> 00:21:12,040
like the attention I do like the

00:21:08,500 --> 00:21:15,100
attention but you know that the problem

00:21:12,040 --> 00:21:18,700
is that they really don't like me so you

00:21:15,100 --> 00:21:20,050
know that can be kind of a bummer so so

00:21:18,700 --> 00:21:21,550
I read this book a few years ago I

00:21:20,050 --> 00:21:23,140
reread it again every time I read one of

00:21:21,550 --> 00:21:24,940
these clowns writing in the press and

00:21:23,140 --> 00:21:26,320
you know I strongly recommend everybody

00:21:24,940 --> 00:21:30,910
to read it because it's a really nice

00:21:26,320 --> 00:21:32,320
book I'm not going to tell you because

00:21:30,910 --> 00:21:35,800
that is my secret that is my secret

00:21:32,320 --> 00:21:37,180
sauce that's what keeps me happy now the

00:21:35,800 --> 00:21:44,080
name of the guy the guy is called

00:21:37,180 --> 00:21:46,450
Benjamin Zander and she wrote a book

00:21:44,080 --> 00:21:55,120
called the wrote a book called the art

00:21:46,450 --> 00:21:58,390
of possibility and you know I met this

00:21:55,120 --> 00:22:01,480
guy once there was a dinner of a bunch

00:21:58,390 --> 00:22:02,770
of interesting people and and at the end

00:22:01,480 --> 00:22:04,060
of the dinner you said they said well

00:22:02,770 --> 00:22:06,670
you need to go there's a presentation

00:22:04,060 --> 00:22:08,500
especially for you guys by this by this

00:22:06,670 --> 00:22:11,230
guy he's the director of the Boston

00:22:08,500 --> 00:22:12,910
Philharmonic and we all got together

00:22:11,230 --> 00:22:14,740
went to this thing I kind of wanted to

00:22:12,910 --> 00:22:16,750
go home you know can just go to the

00:22:14,740 --> 00:22:18,250
hotel and you know call it a night

00:22:16,750 --> 00:22:19,570
but we went to see this guy and this guy

00:22:18,250 --> 00:22:27,010
is a director of the Boston Philharmonic

00:22:19,570 --> 00:22:28,960
and just exudes joy right so basically

00:22:27,010 --> 00:22:30,910
the guy just had a flight cancellation

00:22:28,960 --> 00:22:35,260
he couldn't make his flight he lost the

00:22:30,910 --> 00:22:37,150
train he lost everything but you know he

00:22:35,260 --> 00:22:39,220
still managed to go there and and and

00:22:37,150 --> 00:22:41,740
teach us about what made him tick

00:22:39,220 --> 00:22:43,510
and you know it was a very it was a very

00:22:41,740 --> 00:22:44,830
encouraging and it was a very

00:22:43,510 --> 00:22:46,960
encouraging talk but at the end of the

00:22:44,830 --> 00:22:48,100
day you know there's a couple of things

00:22:46,960 --> 00:22:51,940
there things that make you happy and

00:22:48,100 --> 00:22:53,170
things that make him happy and you know

00:22:51,940 --> 00:22:54,880
you might as well just focus on the

00:22:53,170 --> 00:22:56,140
things that make you happy so I'll tell

00:22:54,880 --> 00:22:58,570
you about a little bit about what makes

00:22:56,140 --> 00:23:00,340
me happy as a programmer they're amazing

00:22:58,570 --> 00:23:03,010
that make me happy but as a programmer

00:23:00,340 --> 00:23:05,590
you know if I was just talking a few

00:23:03,010 --> 00:23:09,690
minutes ago about about Ruby and I was

00:23:05,590 --> 00:23:16,279
telling Jim did she just told my talk

00:23:09,690 --> 00:23:20,220
but it still events on the room right so

00:23:16,279 --> 00:23:23,220
you know alright we'll get to that in a

00:23:20,220 --> 00:23:24,629
second so anyways as a programmer you

00:23:23,220 --> 00:23:26,399
know every time you guys take a shower

00:23:24,629 --> 00:23:27,450
well at least that happens with me every

00:23:26,399 --> 00:23:29,159
time in the morning I don't know why it

00:23:27,450 --> 00:23:31,379
happens but every time in the morning I

00:23:29,159 --> 00:23:33,090
get into the shower and I have like a

00:23:31,379 --> 00:23:35,220
billion ideas of things I want to do

00:23:33,090 --> 00:23:37,080
right and the moment I step out of the

00:23:35,220 --> 00:23:40,110
shower is like if I'm not gonna do

00:23:37,080 --> 00:23:42,629
anything you know you go you check your

00:23:40,110 --> 00:23:44,759
email and you know and and by the end of

00:23:42,629 --> 00:23:46,500
the day your life is gone you've read

00:23:44,759 --> 00:23:47,820
all this junk and you didn't do any of

00:23:46,500 --> 00:23:51,000
the things great ideas that you had

00:23:47,820 --> 00:23:52,559
during the shower it also happens when

00:23:51,000 --> 00:23:55,440
I'm walking when I'm walking to work I

00:23:52,559 --> 00:23:57,120
have billions of ideas and so I decided

00:23:55,440 --> 00:23:59,070
to get a tape recorder and these days

00:23:57,120 --> 00:24:03,169
what I do is I record my ideas and

00:23:59,070 --> 00:24:07,500
hoping that one day I'll have time to

00:24:03,169 --> 00:24:09,710
make them happen and what happens is

00:24:07,500 --> 00:24:12,269
that many of you when you have an idea

00:24:09,710 --> 00:24:15,480
you know the question is how you bring

00:24:12,269 --> 00:24:17,039
your idea to the world right and this is

00:24:15,480 --> 00:24:18,149
basic software engineering so I'm just

00:24:17,039 --> 00:24:21,360
talk about ideas in the software

00:24:18,149 --> 00:24:25,230
engineering rearm you know sometimes we

00:24:21,360 --> 00:24:27,269
get we're too full of ourselves right we

00:24:25,230 --> 00:24:28,830
fight about soft and Freedoms and we

00:24:27,269 --> 00:24:29,909
fight about what's good for the world

00:24:28,830 --> 00:24:31,470
and in the meantime you know the

00:24:29,909 --> 00:24:33,570
Palestinians are being massacred you

00:24:31,470 --> 00:24:35,279
know the height is destroyed so you know

00:24:33,570 --> 00:24:37,100
putting things into perspective you know

00:24:35,279 --> 00:24:40,139
it's a small world

00:24:37,100 --> 00:24:44,700
but anyways so just from the engineering

00:24:40,139 --> 00:24:46,350
perspective right you have your idea you

00:24:44,700 --> 00:24:47,850
go and write your program and it's a

00:24:46,350 --> 00:24:49,350
good and it's a good program you're

00:24:47,850 --> 00:24:51,000
happy with your program now the question

00:24:49,350 --> 00:24:53,159
is how do you bring these to the world

00:24:51,000 --> 00:24:56,279
right and usually people get confused we

00:24:53,159 --> 00:25:00,870
have an eraser so you know sometimes

00:24:56,279 --> 00:25:02,370
people get confused because you know I

00:25:00,870 --> 00:25:03,840
don't know if you guys have heard these

00:25:02,370 --> 00:25:05,580
discussion and they say well Linux

00:25:03,840 --> 00:25:08,129
doesn't innovate or you know Windows

00:25:05,580 --> 00:25:10,679
doesn't innovate or you know Apple just

00:25:08,129 --> 00:25:11,700
copied this from someone else and that I

00:25:10,679 --> 00:25:14,309
actually went to looked up the

00:25:11,700 --> 00:25:15,269
definition of the word innovation and

00:25:14,309 --> 00:25:17,700
what is interesting about the word

00:25:15,269 --> 00:25:20,820
innovation is innovation doesn't mean

00:25:17,700 --> 00:25:22,710
having an idea because every one of us

00:25:20,820 --> 00:25:23,380
when we're getting at taking a shower in

00:25:22,710 --> 00:25:25,809
the morning

00:25:23,380 --> 00:25:27,309
have you know we have a dozen ideas and

00:25:25,809 --> 00:25:29,080
every time you go to work or you know

00:25:27,309 --> 00:25:31,330
whatever else you have hundreds and

00:25:29,080 --> 00:25:33,160
hundreds of ideas so it's not that the

00:25:31,330 --> 00:25:35,950
world is lacking an idea it's not like

00:25:33,160 --> 00:25:37,059
we don't have those ideas every day but

00:25:35,950 --> 00:25:39,070
there's a very big difference between

00:25:37,059 --> 00:25:43,120
having the idea and coming up with a new

00:25:39,070 --> 00:25:45,190
idea and making it happen but not only

00:25:43,120 --> 00:25:46,840
make it happen but make sure that you

00:25:45,190 --> 00:25:49,510
can actually reach the public

00:25:46,840 --> 00:25:51,910
so it doesn't matter if Microsoft had a

00:25:49,510 --> 00:25:54,400
tablet ten years ago it doesn't matter

00:25:51,910 --> 00:25:56,559
nobody used it right chances are that

00:25:54,400 --> 00:25:58,090
Apple will be successful there it

00:25:56,559 --> 00:26:01,570
doesn't matter that Microsoft was first

00:25:58,090 --> 00:26:03,640
with the Mobile's mobile phones and the

00:26:01,570 --> 00:26:05,230
iPhone one right so innovation is the

00:26:03,640 --> 00:26:07,380
combination of actually having that idea

00:26:05,230 --> 00:26:10,330
and bringing that idea to the market

00:26:07,380 --> 00:26:13,210
right some are approved and what is my

00:26:10,330 --> 00:26:17,140
hardest doing this is doing something

00:26:13,210 --> 00:26:19,960
anyways so just from a purely geek

00:26:17,140 --> 00:26:21,970
perspective why we wanted to do with

00:26:19,960 --> 00:26:23,260
mono many years ago our whole point was

00:26:21,970 --> 00:26:25,120
how do we make programmers more

00:26:23,260 --> 00:26:27,190
productive how can we help programmers

00:26:25,120 --> 00:26:28,539
go from the idea to the market I don't

00:26:27,190 --> 00:26:30,490
know that we have an answer but I'll

00:26:28,539 --> 00:26:32,799
tell you what you know I'll tell you

00:26:30,490 --> 00:26:35,740
what the basics are and maybe how we can

00:26:32,799 --> 00:26:37,000
help you get there so why does it have a

00:26:35,740 --> 00:26:39,700
program this is basics of engineering

00:26:37,000 --> 00:26:42,070
like I said you can decide to turn into

00:26:39,700 --> 00:26:43,539
a programming product right and our

00:26:42,070 --> 00:26:44,799
programming product is basically taking

00:26:43,539 --> 00:26:46,480
your program making sure that it's

00:26:44,799 --> 00:26:49,330
documented and making sure that the bars

00:26:46,480 --> 00:26:50,440
are fixed that's it right and typically

00:26:49,330 --> 00:26:52,179
in software engineering books you'll

00:26:50,440 --> 00:26:54,059
read that it actually takes three times

00:26:52,179 --> 00:26:57,570
as much work as building the program

00:26:54,059 --> 00:26:57,570
right so

00:27:00,820 --> 00:27:05,590
so you know in fact I tell my team

00:27:03,130 --> 00:27:07,330
sometimes right everytime they go and

00:27:05,590 --> 00:27:08,950
implement a new feature in mono they go

00:27:07,330 --> 00:27:10,480
out at a feature but they never document

00:27:08,950 --> 00:27:12,250
it they never documented then we put it

00:27:10,480 --> 00:27:17,320
on a webpage and I'm looking at Joe

00:27:12,250 --> 00:27:19,210
Massey and the problem with this is that

00:27:17,320 --> 00:27:21,520
if you write code and you don't document

00:27:19,210 --> 00:27:23,170
it you might as well have never written

00:27:21,520 --> 00:27:24,370
the code because there's only going to

00:27:23,170 --> 00:27:27,430
be a couple of people that will ever

00:27:24,370 --> 00:27:29,110
find this feature right so it's very

00:27:27,430 --> 00:27:30,910
important I know that we all hate

00:27:29,110 --> 00:27:32,500
writing documentation but if you don't

00:27:30,910 --> 00:27:34,900
write the documentation if it's not

00:27:32,500 --> 00:27:35,920
Google if it cannot be found you might

00:27:34,900 --> 00:27:37,750
as well not have written the code

00:27:35,920 --> 00:27:40,240
because never nobody's gonna find it's

00:27:37,750 --> 00:27:43,090
just gonna be you know wasting space and

00:27:40,240 --> 00:27:44,200
wasting our time so it is really really

00:27:43,090 --> 00:27:45,970
important for everybody to write a

00:27:44,200 --> 00:27:47,260
commentation I know it's annoying but I

00:27:45,970 --> 00:27:49,240
actually get you know I've actually

00:27:47,260 --> 00:27:51,610
developed a habit of writing dogs for

00:27:49,240 --> 00:27:53,320
stuff now the problem is I said it's you

00:27:51,610 --> 00:27:54,760
know it might take you a day to write

00:27:53,320 --> 00:27:56,380
the program it might we'll take another

00:27:54,760 --> 00:27:59,140
two days just to fix the Bard's and

00:27:56,380 --> 00:28:01,720
write the dogs now you might decide that

00:27:59,140 --> 00:28:06,370
you're an elite hacks or write and that

00:28:01,720 --> 00:28:07,810
you know the commentation is for was and

00:28:06,370 --> 00:28:09,280
you know for example these are the one

00:28:07,810 --> 00:28:10,570
also includes releasing your product

00:28:09,280 --> 00:28:12,730
making it horrible making an official

00:28:10,570 --> 00:28:14,560
release right for example I love that

00:28:12,730 --> 00:28:16,150
infect people because they write awesome

00:28:14,560 --> 00:28:18,220
code but for about five years I said

00:28:16,150 --> 00:28:21,330
we're never gonna release horrible write

00:28:18,220 --> 00:28:23,620
that we're not building a product a

00:28:21,330 --> 00:28:26,920
programming system on the other hand is

00:28:23,620 --> 00:28:28,600
is also it's it's the idea of taking

00:28:26,920 --> 00:28:30,010
your program and actually interoperating

00:28:28,600 --> 00:28:32,050
with the rest of the system that means

00:28:30,010 --> 00:28:35,440
using standard system configuration

00:28:32,050 --> 00:28:36,730
files using existing api's right so for

00:28:35,440 --> 00:28:38,110
example instead of just talking to they

00:28:36,730 --> 00:28:41,050
have audio you have to talk to whatever

00:28:38,110 --> 00:28:43,240
audio api we have this week on linux

00:28:41,050 --> 00:28:46,750
right so that's what the programming

00:28:43,240 --> 00:28:49,750
system is and that also takes three more

00:28:46,750 --> 00:28:54,130
times then then then then then write a

00:28:49,750 --> 00:28:55,480
 program now of course the nice

00:28:54,130 --> 00:28:56,710
thing is actually going to what it's

00:28:55,480 --> 00:28:57,940
called a programming system product

00:28:56,710 --> 00:28:59,260
which is basically the combination of

00:28:57,940 --> 00:29:01,000
those two the problem is that it

00:28:59,260 --> 00:29:03,190
basically takes you roughly an order of

00:29:01,000 --> 00:29:05,260
magnitude more time than building your

00:29:03,190 --> 00:29:06,730
program so if you have a quick hack that

00:29:05,260 --> 00:29:08,470
you built in a week and you want to turn

00:29:06,730 --> 00:29:10,240
into programming system product you're

00:29:08,470 --> 00:29:12,580
looking at two and a half months of work

00:29:10,240 --> 00:29:13,960
right so you have a cool hike that you

00:29:12,580 --> 00:29:14,470
built in awake really it's going to take

00:29:13,960 --> 00:29:17,860
it two and a half

00:29:14,470 --> 00:29:20,679
months which kind of explains why taking

00:29:17,860 --> 00:29:22,750
us so long to for Mona to go from you

00:29:20,679 --> 00:29:25,360
know from the idea that oh yeah we can

00:29:22,750 --> 00:29:28,440
implement dotnet in a month and the fact

00:29:25,360 --> 00:29:31,179
that he's taking us ten years so anyways

00:29:28,440 --> 00:29:31,990
let me take a little detour here so when

00:29:31,179 --> 00:29:35,409
it comes to that

00:29:31,990 --> 00:29:39,370
so again when it comes to enjoying the

00:29:35,409 --> 00:29:40,539
stuff that you're writing right you know

00:29:39,370 --> 00:29:44,890
there are certain people that certainly

00:29:40,539 --> 00:29:46,450
have a pleasure assembly code yeah

00:29:44,890 --> 00:29:48,909
there's some of those for example

00:29:46,450 --> 00:29:52,059
there's this guy Mac Acton that that

00:29:48,909 --> 00:29:54,429
writes games and and the guy just writes

00:29:52,059 --> 00:29:56,309
assembly code for the SPU's and upon the

00:29:54,429 --> 00:29:58,210
PlayStation 3 and the guy is really good

00:29:56,309 --> 00:30:00,610
but you know there's only a few people

00:29:58,210 --> 00:30:02,740
that enjoy that and the other day we

00:30:00,610 --> 00:30:04,450
were having an argument because he said

00:30:02,740 --> 00:30:06,340
when you write software you should only

00:30:04,450 --> 00:30:09,280
care about performance you should only

00:30:06,340 --> 00:30:11,110
care about bandwidth and you should care

00:30:09,280 --> 00:30:13,030
about how many bits per second you can

00:30:11,110 --> 00:30:16,900
move to the screen right that's a very

00:30:13,030 --> 00:30:19,390
game centric view of the world and you

00:30:16,900 --> 00:30:20,919
know and I was reminded that Ruby on

00:30:19,390 --> 00:30:22,690
Rails pretty much revolutionized the

00:30:20,919 --> 00:30:25,240
entire web development industry by

00:30:22,690 --> 00:30:27,400
making it fun to write web apps before

00:30:25,240 --> 00:30:28,720
Rails there was really the before rails

00:30:27,400 --> 00:30:30,850
where everything was a pain in the ass

00:30:28,720 --> 00:30:33,190
and nobody really enjoyed building web

00:30:30,850 --> 00:30:35,260
apps it was it was really you know it

00:30:33,190 --> 00:30:37,030
was cumbersome it was unnecessary there

00:30:35,260 --> 00:30:39,039
was no joy in that and Ruby on Rails

00:30:37,030 --> 00:30:41,260
kind of changed all of that it made it

00:30:39,039 --> 00:30:43,059
it made it so innovation was enabled

00:30:41,260 --> 00:30:45,909
because it was easier in was fun to

00:30:43,059 --> 00:30:48,100
build applications so in my personal

00:30:45,909 --> 00:30:50,950
opinion I think that anyone below the

00:30:48,100 --> 00:30:53,370
seizure barrier is just miserable in

00:30:50,950 --> 00:30:53,370
their life

00:30:54,630 --> 00:31:00,930
you know one or two might disagree so

00:31:01,770 --> 00:31:07,390
yeah I'll get to that so what do we like

00:31:04,300 --> 00:31:08,740
c-sharp I kind of wanted Yvonne to be

00:31:07,390 --> 00:31:12,370
here so we could have a good fight but

00:31:08,740 --> 00:31:14,290
he's not it's a high-level language it

00:31:12,370 --> 00:31:17,470
has that C sharp E you know it has a C

00:31:14,290 --> 00:31:19,030
feel to it so we like that it's also

00:31:17,470 --> 00:31:22,030
it's an interesting language because the

00:31:19,030 --> 00:31:23,860
first time that I use C kill anything

00:31:22,030 --> 00:31:25,990
get step back many years ago I built a

00:31:23,860 --> 00:31:27,850
spreadsheet called in numeric and the

00:31:25,990 --> 00:31:30,910
numeric had an implementation we're just

00:31:27,850 --> 00:31:32,260
having that discussion yesterday and you

00:31:30,910 --> 00:31:33,940
know Merrick had an implementation of

00:31:32,260 --> 00:31:35,110
sparse arrays right because the problem

00:31:33,940 --> 00:31:38,890
with in America is that you know you

00:31:35,110 --> 00:31:41,980
have 65,000 columns or 256 columns and

00:31:38,890 --> 00:31:43,780
65,000 rows and usually you don't have

00:31:41,980 --> 00:31:45,610
you don't have all of that allocated so

00:31:43,780 --> 00:31:47,350
you can't just use an array you actually

00:31:45,610 --> 00:31:48,730
in to use linked lists and in our

00:31:47,350 --> 00:31:50,740
representation that allows you to walk

00:31:48,730 --> 00:31:52,000
this without allocating of that memory

00:31:50,740 --> 00:31:52,720
if you only have one cell in the middle

00:31:52,000 --> 00:31:54,730
of the spreadsheet

00:31:52,720 --> 00:31:58,330
you don't want allocate you know 128

00:31:54,730 --> 00:32:03,400
columns and 32,000 rows just want to

00:31:58,330 --> 00:32:05,170
locate that cell right and and I made so

00:32:03,400 --> 00:32:06,760
many mistakes in that implementation it

00:32:05,170 --> 00:32:08,410
was not even funny how many mistakes I

00:32:06,760 --> 00:32:10,180
made on that you could argue that I was

00:32:08,410 --> 00:32:14,740
an incompetent coder there's certain

00:32:10,180 --> 00:32:17,260
truth to that but also I finally got my

00:32:14,740 --> 00:32:19,150
hands on a tool at the time is called

00:32:17,260 --> 00:32:20,920
ensure now we have a tool called Val

00:32:19,150 --> 00:32:22,630
grinder does something similar but

00:32:20,920 --> 00:32:24,490
basically you know I spent hours without

00:32:22,630 --> 00:32:26,470
you know within sure trying to find out

00:32:24,490 --> 00:32:28,600
why my application was crashing and it

00:32:26,470 --> 00:32:30,340
turned out that you know a lot of those

00:32:28,600 --> 00:32:32,200
errors could have been found if the

00:32:30,340 --> 00:32:34,960
compiler had warned me ahead of time

00:32:32,200 --> 00:32:36,580
which is when I started using all of the

00:32:34,960 --> 00:32:38,350
possible warnings possible in the

00:32:36,580 --> 00:32:39,820
compiler because I figured it's cheaper

00:32:38,350 --> 00:32:41,650
to put the warnings in than run within

00:32:39,820 --> 00:32:44,530
sure right not everybody had access to

00:32:41,650 --> 00:32:46,840
ensure back then and that's kind of why

00:32:44,530 --> 00:32:48,790
we started adding warning all to genome

00:32:46,840 --> 00:32:51,370
because we wanted to make sure that we

00:32:48,790 --> 00:32:52,660
had as fears as possible but see sure

00:32:51,370 --> 00:32:57,490
every particular is very good at that

00:32:52,660 --> 00:33:00,190
because the c-sharp went beyond the sets

00:32:57,490 --> 00:33:02,410
of errors that were reported by C or C++

00:33:00,190 --> 00:33:04,240
compiler they actually flagged a lot of

00:33:02,410 --> 00:33:05,890
other conditions with errors so for

00:33:04,240 --> 00:33:07,510
example you're never allowed to use a

00:33:05,890 --> 00:33:09,100
variable if it's not initial

00:33:07,510 --> 00:33:10,450
so the compiler will make sure that if

00:33:09,100 --> 00:33:12,010
you're trying to use a variable that is

00:33:10,450 --> 00:33:14,200
not initialized it will just not compile

00:33:12,010 --> 00:33:15,580
it you know you can throw it at it but

00:33:14,200 --> 00:33:18,760
the compiler will just refuse to give

00:33:15,580 --> 00:33:20,890
you the output it won't compile you use

00:33:18,760 --> 00:33:24,160
a variable that is initialized you're

00:33:20,890 --> 00:33:24,850
not gonna get an executable with

00:33:24,160 --> 00:33:26,560
moonlight

00:33:24,850 --> 00:33:28,450
you know after many years of writing C

00:33:26,560 --> 00:33:32,800
sharp code I was very happy and when we

00:33:28,450 --> 00:33:34,570
did moonlight we chose C++ and every

00:33:32,800 --> 00:33:36,700
once in a while somebody will add a new

00:33:34,570 --> 00:33:39,730
filter struct and they will forget to

00:33:36,700 --> 00:33:43,990
initialize it and how many of you write

00:33:39,730 --> 00:33:46,360
C++ and have found that problem you know

00:33:43,990 --> 00:33:49,900
and every time that happens we spend a

00:33:46,360 --> 00:33:51,730
week well in a week but a day somebody

00:33:49,900 --> 00:33:53,890
did this and now something is crashing

00:33:51,730 --> 00:33:56,230
elsewhere and you spend the day trying

00:33:53,890 --> 00:33:57,730
to find out why that happened right so

00:33:56,230 --> 00:33:59,470
there's a couple of you know you can do

00:33:57,730 --> 00:34:01,420
things like creating your own allocators

00:33:59,470 --> 00:34:03,070
and you know there's tricks that you can

00:34:01,420 --> 00:34:04,900
that you can use to do this but these

00:34:03,070 --> 00:34:05,640
these class of errors just never exist

00:34:04,900 --> 00:34:07,870
with c-sharp

00:34:05,640 --> 00:34:09,550
you know the compiler just tells you

00:34:07,870 --> 00:34:11,380
right from the start you can't do this

00:34:09,550 --> 00:34:12,610
and there's really nowhere I mean you

00:34:11,380 --> 00:34:14,740
can't really talk the compiler into

00:34:12,610 --> 00:34:18,610
doing it sort of you know patching the

00:34:14,740 --> 00:34:20,530
compiler and and even then the VM won't

00:34:18,610 --> 00:34:23,230
let you allocate objects or

00:34:20,530 --> 00:34:24,669
uninitialized so so that's one of the

00:34:23,230 --> 00:34:26,740
things I like about c-sharp c-sharp is

00:34:24,669 --> 00:34:28,540
very good at catching mistakes way

00:34:26,740 --> 00:34:31,540
before you make the mistake so that's

00:34:28,540 --> 00:34:34,390
good the second piece is it does

00:34:31,540 --> 00:34:38,050
automatic memory management you know I'm

00:34:34,390 --> 00:34:39,760
already 37 years old and you know

00:34:38,050 --> 00:34:41,320
statistically I've lived half my life

00:34:39,760 --> 00:34:43,060
and I don't want to spend the rest of my

00:34:41,320 --> 00:34:45,610
life you know tracking another memory

00:34:43,060 --> 00:34:47,470
corruption bog or you know spending more

00:34:45,610 --> 00:34:50,380
time releasing memory that you know

00:34:47,470 --> 00:34:52,690
that's what computers are for some of

00:34:50,380 --> 00:34:56,770
you that are 17 you guys go and choke on

00:34:52,690 --> 00:34:58,270
as much C as you want I'm gonna be a but

00:34:56,770 --> 00:35:00,490
I've moved on I've moved on I want the

00:34:58,270 --> 00:35:02,770
computer to take care of that for me so

00:35:00,490 --> 00:35:04,750
that's why I have developers like Alan

00:35:02,770 --> 00:35:06,250
McGovern raise your hand he's still very

00:35:04,750 --> 00:35:09,610
young and that's why he still has to

00:35:06,250 --> 00:35:10,900
write C++ code but some of us have moved

00:35:09,610 --> 00:35:11,920
on to other things we just don't have

00:35:10,900 --> 00:35:15,790
that much time left

00:35:11,920 --> 00:35:17,170
ok it is also interesting because the

00:35:15,790 --> 00:35:19,570
entire class library was designed with

00:35:17,170 --> 00:35:20,800
multi-threading in mind so this is not

00:35:19,570 --> 00:35:22,030
something that was added that

00:35:20,800 --> 00:35:24,070
at the end they didn't add

00:35:22,030 --> 00:35:27,010
multi-threading as a now we have

00:35:24,070 --> 00:35:28,780
threads what do we do which is pretty

00:35:27,010 --> 00:35:31,960
much the reaction of every API that was

00:35:28,780 --> 00:35:34,390
built for C and C++ historically it's

00:35:31,960 --> 00:35:36,850
always an afterthought without net

00:35:34,390 --> 00:35:39,220
multi-threading was in there from the

00:35:36,850 --> 00:35:41,530
beginning so every single class has a

00:35:39,220 --> 00:35:43,750
very strict contract in terms of what

00:35:41,530 --> 00:35:46,350
the guarantees for multi-threading there

00:35:43,750 --> 00:35:48,730
are and the rules that you can follow

00:35:46,350 --> 00:35:50,980
you know how something gets

00:35:48,730 --> 00:35:53,800
multi-threaded so by default every

00:35:50,980 --> 00:35:56,050
static method is multi thread safe every

00:35:53,800 --> 00:35:57,970
instant method is not so if you create

00:35:56,050 --> 00:35:59,170
instances the instant is attached to a

00:35:57,970 --> 00:36:01,600
thread if you need to share it you need

00:35:59,170 --> 00:36:04,390
to lock right so very simple rules for

00:36:01,600 --> 00:36:07,720
that and when it comes to the language

00:36:04,390 --> 00:36:10,120
as you know even and I will disagree but

00:36:07,720 --> 00:36:13,170
when it comes to the to the language it

00:36:10,120 --> 00:36:16,270
kind of has a good mix between being

00:36:13,170 --> 00:36:17,920
overly verbose and being good enough for

00:36:16,270 --> 00:36:19,870
writing code in a day-to-day basis so

00:36:17,920 --> 00:36:20,950
you know it's a it's a good language

00:36:19,870 --> 00:36:24,610
friend that's protect and the other

00:36:20,950 --> 00:36:25,960
thing finally is that c-sharp is already

00:36:24,610 --> 00:36:28,420
in its fourth revision of the language

00:36:25,960 --> 00:36:29,800
it's been upgraded at least three times

00:36:28,420 --> 00:36:33,940
from the initial release and there have

00:36:29,800 --> 00:36:35,560
been very major upgrades to language so

00:36:33,940 --> 00:36:37,900
as you as you know tee-shirt 1.0 was

00:36:35,560 --> 00:36:39,610
very similar to Java and every time you

00:36:37,900 --> 00:36:42,430
hear somebody said well c-sharp just is

00:36:39,610 --> 00:36:44,410
just a copy of Java they refer to the

00:36:42,430 --> 00:36:45,970
state of the art in 2000 and they

00:36:44,410 --> 00:36:48,340
obviously have not used c-sharp ever

00:36:45,970 --> 00:36:50,260
since it had a couple of extras I'm not

00:36:48,340 --> 00:36:52,030
going to go into those in fact this

00:36:50,260 --> 00:36:55,270
morning I was I was adding one slide per

00:36:52,030 --> 00:36:57,100
feature and you know I was up to slide

00:36:55,270 --> 00:36:58,090
number 20 I figure I don't think anybody

00:36:57,100 --> 00:37:02,440
really cares

00:36:58,090 --> 00:37:03,670
so I delete all the slides but you know

00:37:02,440 --> 00:37:06,550
it was it had a couple of interesting

00:37:03,670 --> 00:37:07,750
ideas delegates which are object point

00:37:06,550 --> 00:37:09,760
you know they're pointers to functions

00:37:07,750 --> 00:37:13,420
but they can be pointers to functions in

00:37:09,760 --> 00:37:15,520
an instance in an instance of a class so

00:37:13,420 --> 00:37:18,150
that that is very interesting the rest

00:37:15,520 --> 00:37:20,350
and we're not really going to talk about

00:37:18,150 --> 00:37:22,210
but one of the interesting features is

00:37:20,350 --> 00:37:24,910
that it had very strong interoperability

00:37:22,210 --> 00:37:28,630
features so c-sharp was designed to play

00:37:24,910 --> 00:37:31,210
nice with others then be sure to came

00:37:28,630 --> 00:37:32,680
out a couple of years later it's very

00:37:31,210 --> 00:37:34,510
interesting in that they got a generics

00:37:32,680 --> 00:37:36,640
similar to C++ templates

00:37:34,510 --> 00:37:38,260
but they didn't only add generics to the

00:37:36,640 --> 00:37:39,910
language there are generics to the VM

00:37:38,260 --> 00:37:41,380
and what this means is that you can

00:37:39,910 --> 00:37:43,180
actually do generics across multiple

00:37:41,380 --> 00:37:45,640
languages it also means that you can

00:37:43,180 --> 00:37:46,750
specialize skilled at runtime it also

00:37:45,640 --> 00:37:51,400
means that you don't lose type

00:37:46,750 --> 00:37:53,440
information when you compile the code a

00:37:51,400 --> 00:37:54,790
couple of Microsoft had a couple of

00:37:53,440 --> 00:37:58,510
interesting researchers working in the

00:37:54,790 --> 00:38:00,810
language so they added icon iterators to

00:37:58,510 --> 00:38:03,220
the language this is the foundation for

00:38:00,810 --> 00:38:06,270
this is a foundation for many things but

00:38:03,220 --> 00:38:08,110
in particular games use this technique

00:38:06,270 --> 00:38:11,770
Lucas can tell you everything about

00:38:08,110 --> 00:38:13,270
iterators and and how they're used in

00:38:11,770 --> 00:38:16,900
games and Michael Hutchinson has a

00:38:13,270 --> 00:38:19,540
brilliant post from about three days ago

00:38:16,900 --> 00:38:22,420
or five days ago that explains how these

00:38:19,540 --> 00:38:24,430
engines work using iterators because

00:38:22,420 --> 00:38:25,800
games have very particular programming

00:38:24,430 --> 00:38:28,300
techniques when you're building the AI

00:38:25,800 --> 00:38:29,830
right so if you have 10,000 guys on the

00:38:28,300 --> 00:38:32,140
screen each one has a loop piece of AI

00:38:29,830 --> 00:38:33,790
how that each one is independent right

00:38:32,140 --> 00:38:35,770
so the idea is how do you execute a

00:38:33,790 --> 00:38:37,810
little bit and then resume it you know

00:38:35,770 --> 00:38:39,940
suspend execution without having to use

00:38:37,810 --> 00:38:41,470
a thread per object right let's say you

00:38:39,940 --> 00:38:43,270
have 5000 characters on the screen you

00:38:41,470 --> 00:38:44,410
don't wanna have 5,000 threads so it's

00:38:43,270 --> 00:38:46,900
kind of a lightweight threading system

00:38:44,410 --> 00:38:48,160
that you build on top of iterators real

00:38:46,900 --> 00:38:51,610
interesting post if you want to see that

00:38:48,160 --> 00:38:54,460
it's hutchinson's of log anonymous

00:38:51,610 --> 00:38:57,130
methods this was the beginning this was

00:38:54,460 --> 00:38:58,840
the beginning of turning c-sharp into a

00:38:57,130 --> 00:39:00,580
functional language it didn't look like

00:38:58,840 --> 00:39:04,090
that at the time but he was starting to

00:39:00,580 --> 00:39:06,370
be there and and it added some of you

00:39:04,090 --> 00:39:07,750
know it was likely sigelei scope so it

00:39:06,370 --> 00:39:13,810
started to get some of the functions of

00:39:07,750 --> 00:39:18,660
scheme now I was gonna say something

00:39:13,810 --> 00:39:24,210
with anonymous methods I forgot hmm

00:39:18,660 --> 00:39:26,490
all right come back to me see ship three

00:39:24,210 --> 00:39:28,230
came out a couple of years later and the

00:39:26,490 --> 00:39:31,829
big focus of the release the big big

00:39:28,230 --> 00:39:33,599
focus was this let me show you that was

00:39:31,829 --> 00:39:37,460
this extension that the language is

00:39:33,599 --> 00:39:39,859
allow you to query to query object so

00:39:37,460 --> 00:39:50,279
what am i doing

00:39:39,859 --> 00:39:51,720
maybe I should just do this so these are

00:39:50,279 --> 00:39:55,259
interactive see sure interprets to the

00:39:51,720 --> 00:39:59,869
repple and and in fact when you do using

00:39:55,259 --> 00:39:59,869
system I think that's already there so

00:40:01,039 --> 00:40:07,650
well that's a bug so ignore that now

00:40:05,670 --> 00:40:09,779
actually that's running the development

00:40:07,650 --> 00:40:11,960
version so let me let me run the other

00:40:09,779 --> 00:40:15,920
one this is a non development version

00:40:11,960 --> 00:40:15,920
right so that one works

00:40:19,780 --> 00:40:25,280
right so this gives you an idea of how

00:40:22,940 --> 00:40:26,690
this thing works and what what works

00:40:25,280 --> 00:40:32,260
with link is basically you can say from

00:40:26,690 --> 00:40:39,380
X in directory dot get files in etc

00:40:32,260 --> 00:40:41,540
right where X ends with dot-com select X

00:40:39,380 --> 00:40:43,970
right so this is the query language and

00:40:41,540 --> 00:40:45,920
the way that this is operating well

00:40:43,970 --> 00:40:47,270
that's really step by step but what

00:40:45,920 --> 00:40:50,060
happens here is that directory dot get

00:40:47,270 --> 00:40:53,000
files returns an array right and the

00:40:50,060 --> 00:40:54,530
language has been extended so that it

00:40:53,000 --> 00:40:56,450
understands how to deal with a trace and

00:40:54,530 --> 00:40:57,770
you can query arrays so what happens

00:40:56,450 --> 00:41:00,800
here is that the return value of this

00:40:57,770 --> 00:41:02,420
thing gets assigned to X right and this

00:41:00,800 --> 00:41:04,280
is where you evaluate this thing so you

00:41:02,420 --> 00:41:06,650
say where X end with so this is your

00:41:04,280 --> 00:41:08,030
conditional expression select X what's

00:41:06,650 --> 00:41:09,830
happening here is that really see sharp

00:41:08,030 --> 00:41:15,920
is rewriting your code that in reality

00:41:09,830 --> 00:41:17,450
something like directory get files and

00:41:15,920 --> 00:41:20,930
I'm gonna write the rest and then you

00:41:17,450 --> 00:41:22,700
say dot where so it's actually calling

00:41:20,930 --> 00:41:24,400
the word method on that and it's an

00:41:22,700 --> 00:41:27,170
extension method of play to erase and

00:41:24,400 --> 00:41:30,170
what the weather method is taking is it

00:41:27,170 --> 00:41:32,660
takes me a parameter X right and it's

00:41:30,170 --> 00:41:39,170
using a lambda function it says well if

00:41:32,660 --> 00:41:41,960
X ends with this right and the return of

00:41:39,170 --> 00:41:45,550
this thing is a boolean right then it

00:41:41,960 --> 00:41:48,650
does in debug the method dot select

00:41:45,550 --> 00:41:51,860
right and the return of these beasts is

00:41:48,650 --> 00:41:57,860
actually the return of these beasts is

00:41:51,860 --> 00:41:59,810
actually an ienumerable what is

00:41:57,860 --> 00:42:04,340
interesting about this piece is that the

00:41:59,810 --> 00:42:09,110
reality that when I run this thing when

00:42:04,340 --> 00:42:15,550
I well often see this VAR y equals you

00:42:09,110 --> 00:42:20,840
know from X in directory get files etc

00:42:15,550 --> 00:42:23,840
I'm going to do the where select X if

00:42:20,840 --> 00:42:26,570
you get the type of this beast it turns

00:42:23,840 --> 00:42:28,370
out well let me just scroll it up so you

00:42:26,570 --> 00:42:29,840
can see it on the back so when I run

00:42:28,370 --> 00:42:31,069
this expression you'll see that the

00:42:29,840 --> 00:42:32,869
actual the value of

00:42:31,069 --> 00:42:35,900
I write because c-sharp in firsta types

00:42:32,869 --> 00:42:37,369
right so the actual value of y is system

00:42:35,900 --> 00:42:40,969
linked innumerable create selector

00:42:37,369 --> 00:42:43,160
iterator iterator 10 so what happens is

00:42:40,969 --> 00:42:45,680
that it actually hasn't even fetched the

00:42:43,160 --> 00:42:47,749
files from the directory what this thing

00:42:45,680 --> 00:42:49,219
has done is it has constructed the

00:42:47,749 --> 00:42:52,789
actual expression that is ready to run

00:42:49,219 --> 00:42:54,499
it builds a pipeline right so what so so

00:42:52,789 --> 00:42:56,749
the entire link system is built on the

00:42:54,499 --> 00:42:59,569
idea that you create pipelines right so

00:42:56,749 --> 00:43:01,759
the first one is the get directories get

00:42:59,569 --> 00:43:05,660
the get files call and then the output

00:43:01,759 --> 00:43:08,089
gets connected to the where method and

00:43:05,660 --> 00:43:10,190
these are all enumerable so things that

00:43:08,089 --> 00:43:11,449
produce data when you call them so this

00:43:10,190 --> 00:43:13,339
will produce a list of files that will

00:43:11,449 --> 00:43:15,949
get connected to where and this will get

00:43:13,339 --> 00:43:17,690
connected to the Select statement and

00:43:15,949 --> 00:43:20,869
eventually this will produce a value

00:43:17,690 --> 00:43:24,849
right so when you iterate over these

00:43:20,869 --> 00:43:26,539
values you'll get the values back I

00:43:24,849 --> 00:43:28,039
don't know if you noticed this but

00:43:26,539 --> 00:43:30,440
you're actually when you're kicking the

00:43:28,039 --> 00:43:32,239
pipeline I'm not sure how familiar you

00:43:30,440 --> 00:43:34,339
guys are with enumerators but an

00:43:32,239 --> 00:43:36,099
enumerator basically iterates of

00:43:34,339 --> 00:43:38,269
recollection so what you say is okay

00:43:36,099 --> 00:43:40,130
initiate the enumeration and then you

00:43:38,269 --> 00:43:41,599
you keep looping and you say do you have

00:43:40,130 --> 00:43:43,249
more values and if you do get me the

00:43:41,599 --> 00:43:45,440
next value right it says you have

00:43:43,249 --> 00:43:51,650
another value yes yes yes and it fetches

00:43:45,440 --> 00:43:53,959
one value one or another right so every

00:43:51,650 --> 00:43:56,029
time I do that you do this what happens

00:43:53,959 --> 00:43:57,650
is that you know you call the pipeline

00:43:56,029 --> 00:43:58,940
and the pipeline basically says well do

00:43:57,650 --> 00:44:00,949
you have another value so get files

00:43:58,940 --> 00:44:02,479
fetches the next value it sends it to

00:44:00,949 --> 00:44:05,089
where and where the term means yes or

00:44:02,479 --> 00:44:06,380
none not it goes to the next value so so

00:44:05,089 --> 00:44:08,119
what happens is that every time that you

00:44:06,380 --> 00:44:11,749
run there's you run the pipeline so you

00:44:08,119 --> 00:44:14,180
run a pipeline every single time so in

00:44:11,749 --> 00:44:16,549
this case here the directory has not

00:44:14,180 --> 00:44:18,920
been fetched it hasn't even done the

00:44:16,549 --> 00:44:20,420
directory listing at that point the way

00:44:18,920 --> 00:44:22,369
that you do that is if you do something

00:44:20,420 --> 00:44:26,119
like if you force the iterator like for

00:44:22,369 --> 00:44:28,359
example VAR a in Y console dot write

00:44:26,119 --> 00:44:28,359
line

00:44:29,500 --> 00:44:37,630
a so that's when it actually iterated so

00:44:35,460 --> 00:44:39,490
what I did there is basically at that

00:44:37,630 --> 00:44:41,200
point it did the directory of files call

00:44:39,490 --> 00:44:44,290
and then it runs the where statement and

00:44:41,200 --> 00:44:46,150
runs a select statement and and this is

00:44:44,290 --> 00:44:47,590
and this is a foundation for delayed

00:44:46,150 --> 00:44:50,290
execution so everything that you're

00:44:47,590 --> 00:44:52,770
doing with Lync today basically delays

00:44:50,290 --> 00:44:57,280
the execution until the very last minute

00:44:52,770 --> 00:44:58,599
now this is not an intern this is

00:44:57,280 --> 00:45:00,220
there's a couple of very interesting

00:44:58,599 --> 00:45:03,510
side effects and I'm not going to go

00:45:00,220 --> 00:45:07,119
into that but if you guys are interested

00:45:03,510 --> 00:45:10,660
Microsoft just released a new framework

00:45:07,119 --> 00:45:15,099
called the reactive framework and it's

00:45:10,660 --> 00:45:18,730
based on on the notion that you know the

00:45:15,099 --> 00:45:20,410
guy that invented this is actually uh is

00:45:18,730 --> 00:45:22,599
actually a functional guy and they

00:45:20,410 --> 00:45:28,840
realize that ienumerable is actually a

00:45:22,599 --> 00:45:30,790
mirror of I observable so they realize

00:45:28,840 --> 00:45:32,530
that just like their operations for

00:45:30,790 --> 00:45:34,030
enumerate in a collection you can

00:45:32,530 --> 00:45:35,980
actually turn it around and instead of

00:45:34,030 --> 00:45:38,290
enumerated and basically requesting the

00:45:35,980 --> 00:45:40,660
next token you can build the exact same

00:45:38,290 --> 00:45:43,119
pipeline on the other way and instead

00:45:40,660 --> 00:45:45,040
get notified when events happen so you

00:45:43,119 --> 00:45:47,010
can say well when something happens let

00:45:45,040 --> 00:45:49,570
me know and here's how you let me know

00:45:47,010 --> 00:45:54,310
anyways it's worth researching that if

00:45:49,570 --> 00:45:55,359
you're interested in the subject now so

00:45:54,310 --> 00:45:57,609
this was the beginning of training

00:45:55,359 --> 00:46:00,310
c-sharp into functional language there

00:45:57,609 --> 00:46:01,900
is a very there's a fascinating there's

00:46:00,310 --> 00:46:03,369
a fascinating look at C sharp as a

00:46:01,900 --> 00:46:06,580
functional language as a purely

00:46:03,369 --> 00:46:09,430
functional language in in in one of the

00:46:06,580 --> 00:46:11,800
Microsoft blogs I strongly recommend you

00:46:09,430 --> 00:46:13,900
read it because it it's it's a easier

00:46:11,800 --> 00:46:19,930
stuff landing into functional languages

00:46:13,900 --> 00:46:21,790
than languages themselves anyways the

00:46:19,930 --> 00:46:23,770
one of the things that they did with

00:46:21,790 --> 00:46:26,920
link like I said is what I just showed

00:46:23,770 --> 00:46:29,890
you is linked to objects I would show

00:46:26,920 --> 00:46:31,690
you the XML one but I don't remember the

00:46:29,890 --> 00:46:34,599
syntax and I'm not gonna embarrass

00:46:31,690 --> 00:46:36,700
myself by trying to do it life so just

00:46:34,599 --> 00:46:38,170
go to it in the you know in the comfort

00:46:36,700 --> 00:46:40,599
of your own home and the privacy of your

00:46:38,170 --> 00:46:42,370
home the other one that they did is

00:46:40,599 --> 00:46:43,810
linked to sequel and what

00:46:42,370 --> 00:46:46,600
is really interesting about this is that

00:46:43,810 --> 00:46:49,060
it's how they they did this and I'll

00:46:46,600 --> 00:46:50,680
explain that in a second but in general

00:46:49,060 --> 00:46:52,240
the link infrastructure is not bound is

00:46:50,680 --> 00:46:54,310
not limited to these three beasts the

00:46:52,240 --> 00:46:56,170
blue ones that microchip but you can

00:46:54,310 --> 00:46:59,800
build link to anything that you want

00:46:56,170 --> 00:47:01,600
right so so there's there's today

00:46:59,800 --> 00:47:04,090
there's like 50 link providers links to

00:47:01,600 --> 00:47:06,700
databases links to the directory

00:47:04,090 --> 00:47:09,940
services links to in hibernate all kinds

00:47:06,700 --> 00:47:11,020
of other junk now what is really

00:47:09,940 --> 00:47:15,070
interesting about what they did with

00:47:11,020 --> 00:47:18,460
link is that and what sequel is the way

00:47:15,070 --> 00:47:20,590
that you typically you know you talk to

00:47:18,460 --> 00:47:24,610
sequel is with object relationship

00:47:20,590 --> 00:47:26,890
mappers now let me tell you a story

00:47:24,610 --> 00:47:33,250
before a friend of mine was working at

00:47:26,890 --> 00:47:35,380
AT&T a few years ago and and they were

00:47:33,250 --> 00:47:36,730
what would oh yes and it was the day

00:47:35,380 --> 00:47:39,280
that they were in the United States they

00:47:36,730 --> 00:47:40,990
will let you switch from one carrier to

00:47:39,280 --> 00:47:43,660
another right so it was the day that

00:47:40,990 --> 00:47:45,460
they would let you if you were a Verizon

00:47:43,660 --> 00:47:47,500
customer you could switch to AT&T or via

00:47:45,460 --> 00:47:48,730
AT&T you could switch to t-mobile you

00:47:47,500 --> 00:47:49,930
could switch from any company was the

00:47:48,730 --> 00:47:52,360
first time that you could do this and

00:47:49,930 --> 00:47:54,370
not lose your number it was a law it was

00:47:52,360 --> 00:47:56,770
passed and every total was supposed to

00:47:54,370 --> 00:47:58,570
do this so they built some software for

00:47:56,770 --> 00:47:59,890
doing this thing but the problem is that

00:47:58,570 --> 00:48:01,150
the software that they built used an

00:47:59,890 --> 00:48:03,040
object relationship mapper

00:48:01,150 --> 00:48:05,200
that means that you're right very cute

00:48:03,040 --> 00:48:06,700
object-oriented code right so you have

00:48:05,200 --> 00:48:08,950
classes and those classes map to

00:48:06,700 --> 00:48:09,970
database and the problem is that when

00:48:08,950 --> 00:48:11,440
you do this

00:48:09,970 --> 00:48:13,690
all of these object-oriented Ship

00:48:11,440 --> 00:48:15,430
Manager mappers what they do is that

00:48:13,690 --> 00:48:17,080
they turn you know a couple of accesses

00:48:15,430 --> 00:48:18,910
to a class into you know select

00:48:17,080 --> 00:48:21,850
statement a bunch of select statements

00:48:18,910 --> 00:48:23,680
and very quickly that translates into

00:48:21,850 --> 00:48:28,060
hundreds and hundreds of queries to the

00:48:23,680 --> 00:48:30,820
database so the day starts and within

00:48:28,060 --> 00:48:33,010
two hours of the you know the number

00:48:30,820 --> 00:48:35,740
portability kicking in the entire AT&T

00:48:33,010 --> 00:48:37,060
systems go down and they stay down in

00:48:35,740 --> 00:48:39,700
the United States for about three weeks

00:48:37,060 --> 00:48:42,070
and the problem was and the problem that

00:48:39,700 --> 00:48:44,410
they had was they were using ORM mappers

00:48:42,070 --> 00:48:46,870
and you know it worked fine when you had

00:48:44,410 --> 00:48:48,820
three guys testing the software but it

00:48:46,870 --> 00:48:50,470
didn't work when they open the

00:48:48,820 --> 00:48:52,600
floodgates to the world and what

00:48:50,470 --> 00:48:54,520
happened and the story that I'm telling

00:48:52,600 --> 00:48:56,440
you is the friend my friend of mine that

00:48:54,520 --> 00:48:59,290
it's basically a sequel

00:48:56,440 --> 00:49:02,850
admin expert that all he does is go and

00:48:59,290 --> 00:49:05,740
fix broken databases when they break and

00:49:02,850 --> 00:49:07,180
so what he did is they went to the site

00:49:05,740 --> 00:49:08,680
and said well what's going on and it

00:49:07,180 --> 00:49:10,510
turns out for refreshing a page just

00:49:08,680 --> 00:49:12,700
with the customer data they were doing

00:49:10,510 --> 00:49:14,560
about 2,000 sequel queries right so

00:49:12,700 --> 00:49:16,450
every page is very pretty very object

00:49:14,560 --> 00:49:20,130
oriented but you're reading 2,000 sequel

00:49:16,450 --> 00:49:22,660
queries right so his job was basically

00:49:20,130 --> 00:49:24,370
in a period of three weeks assemble a

00:49:22,660 --> 00:49:27,010
team of people that would remove all of

00:49:24,370 --> 00:49:28,900
the rme code and just take basic sequel

00:49:27,010 --> 00:49:30,760
you know queries in the database so they

00:49:28,900 --> 00:49:32,470
could get away during these three weeks

00:49:30,760 --> 00:49:35,470
if you went to the United States and try

00:49:32,470 --> 00:49:37,240
to get your number changed you know a

00:49:35,470 --> 00:49:38,590
guy would have to take down your notes

00:49:37,240 --> 00:49:41,410
in a paper so if you went to the store

00:49:38,590 --> 00:49:42,550
somebody would take your your your data

00:49:41,410 --> 00:49:44,080
down a piece of paper

00:49:42,550 --> 00:49:46,090
and they would call you in a couple of

00:49:44,080 --> 00:49:47,650
weeks and they will have to figure out

00:49:46,090 --> 00:49:50,440
how to reimburse you for the you know

00:49:47,650 --> 00:49:52,390
for the plant charges or whatever it was

00:49:50,440 --> 00:49:53,860
it was a little bit sad and this was

00:49:52,390 --> 00:49:56,800
about four years ago so it's not that

00:49:53,860 --> 00:49:58,390
long ago so what they did what link to

00:49:56,800 --> 00:50:00,940
sequel is instead of trying to come up

00:49:58,390 --> 00:50:04,030
with an object relationship you know or

00:50:00,940 --> 00:50:05,710
an system what they did that is very

00:50:04,030 --> 00:50:08,520
interesting is the same syntax that that

00:50:05,710 --> 00:50:15,130
would just that I just showed you before

00:50:08,520 --> 00:50:22,060
you know from X in full material say

00:50:15,130 --> 00:50:27,070
where X of age bigger than 30 and you

00:50:22,060 --> 00:50:30,610
know something else select X right so

00:50:27,070 --> 00:50:32,140
instead of the so the way that you would

00:50:30,610 --> 00:50:34,000
do this typically is you know you would

00:50:32,140 --> 00:50:35,500
you know if you do this thing with a

00:50:34,000 --> 00:50:37,810
traditional relationship that always

00:50:35,500 --> 00:50:39,160
manager you would basically go to the

00:50:37,810 --> 00:50:41,500
database and say well give me all of

00:50:39,160 --> 00:50:43,270
your records download all of the records

00:50:41,500 --> 00:50:45,490
to the client that's a simple way of

00:50:43,270 --> 00:50:47,350
doing it and then you know let me do

00:50:45,490 --> 00:50:49,330
client-side sorting so the client will

00:50:47,350 --> 00:50:51,250
do the where and extract the data and

00:50:49,330 --> 00:50:52,990
hand it over to the other side

00:50:51,250 --> 00:50:54,460
so obviously that doesn't work and

00:50:52,990 --> 00:50:57,300
that's a horrible idea of how to do

00:50:54,460 --> 00:50:59,770
sequel databases so what they did is

00:50:57,300 --> 00:51:02,050
remember when I said that actually what

00:50:59,770 --> 00:51:04,810
this did you know was a concatenation of

00:51:02,050 --> 00:51:06,640
expressions right so basically this

00:51:04,810 --> 00:51:08,830
would be something like let's say that

00:51:06,640 --> 00:51:09,760
with my database so it becomes full

00:51:08,830 --> 00:51:14,880
doorway

00:51:09,760 --> 00:51:18,070
and it contains this expression X dot H

00:51:14,880 --> 00:51:23,410
bigger than 30 and you know the rest of

00:51:18,070 --> 00:51:27,760
your expression dot select right so what

00:51:23,410 --> 00:51:30,160
happens is that the wear method right

00:51:27,760 --> 00:51:33,369
typically takes typically takes a

00:51:30,160 --> 00:51:35,589
function right it takes a function that

00:51:33,369 --> 00:51:38,470
in this particular case it's generic so

00:51:35,589 --> 00:51:42,820
it takes the X and it returns an

00:51:38,470 --> 00:51:44,859
influencer bullion right now with

00:51:42,820 --> 00:51:47,220
t-shirt three you have a trick so

00:51:44,859 --> 00:51:51,089
instead of your where clause taking

00:51:47,220 --> 00:51:53,080
right instead of taking that argument

00:51:51,089 --> 00:51:54,820
right that would be a function that you

00:51:53,080 --> 00:51:56,710
can call and you know you know you would

00:51:54,820 --> 00:51:58,690
pass you would pass your X and it will

00:51:56,710 --> 00:52:00,910
return true or false I would say yes or

00:51:58,690 --> 00:52:05,730
no which is what it would do

00:52:00,910 --> 00:52:09,810
there's a little trick here which is

00:52:05,730 --> 00:52:14,040
there's a special type called expression

00:52:09,810 --> 00:52:14,040
so now you're where looks like this

00:52:16,140 --> 00:52:20,940
and when the compiler sees that you're

00:52:18,210 --> 00:52:22,110
using the expression type right when it

00:52:20,940 --> 00:52:24,840
sees that you're using the expression

00:52:22,110 --> 00:52:28,560
type it does not generate it does not

00:52:24,840 --> 00:52:30,960
generate the code for for this thing

00:52:28,560 --> 00:52:32,340
right it doesn't generate at lambda in

00:52:30,960 --> 00:52:35,870
this case is generating a method with

00:52:32,340 --> 00:52:38,460
this body instead what the compiler does

00:52:35,870 --> 00:52:41,430
is that versus the same code it would

00:52:38,460 --> 00:52:43,230
generate let's remove this with simpler

00:52:41,430 --> 00:52:45,150
but it would be basically it would

00:52:43,230 --> 00:52:52,230
generate a tree that has a node it would

00:52:45,150 --> 00:52:54,180
say something like new bigger than so

00:52:52,230 --> 00:52:59,100
it's a node bigger than and then it says

00:52:54,180 --> 00:53:01,200
well it's a it's a field reference in

00:52:59,100 --> 00:53:10,860
the object X and the field is called age

00:53:01,200 --> 00:53:12,450
and their constant 30 right so basically

00:53:10,860 --> 00:53:14,370
what's happening is that the compiler is

00:53:12,450 --> 00:53:16,020
providing you with a constructed tree of

00:53:14,370 --> 00:53:17,490
the expression as it was found in the

00:53:16,020 --> 00:53:20,040
source code so it's something like you

00:53:17,490 --> 00:53:23,490
know let me rewrite that so basically a

00:53:20,040 --> 00:53:27,270
node like this that says less than you

00:53:23,490 --> 00:53:28,650
know exit age so you get that node and

00:53:27,270 --> 00:53:29,930
then you get another node that has new

00:53:28,650 --> 00:53:32,340
number 30

00:53:29,930 --> 00:53:34,620
so what happens is that link to sequel

00:53:32,340 --> 00:53:35,970
actually gets the tree right it gets a

00:53:34,620 --> 00:53:38,610
full tree expression of what your

00:53:35,970 --> 00:53:41,100
queries write and what it does is it it

00:53:38,610 --> 00:53:43,680
France wants this big into the

00:53:41,100 --> 00:53:45,570
equivalent sequel code right so when you

00:53:43,680 --> 00:53:48,300
write this this piece of c-sharp code it

00:53:45,570 --> 00:53:50,190
actually gets translated at runtime into

00:53:48,300 --> 00:53:51,480
the proper sequel statement and that's

00:53:50,190 --> 00:53:54,930
the sequel statement that is sent to the

00:53:51,480 --> 00:53:57,930
database this can be abused in many

00:53:54,930 --> 00:53:59,910
wonderful ways and I encourage you to

00:53:57,930 --> 00:54:03,000
explore this further so anyways I'm

00:53:59,910 --> 00:54:04,490
gonna move on from link there's a lot of

00:54:03,000 --> 00:54:06,930
papers that you can read on the subject

00:54:04,490 --> 00:54:11,750
now let me show you for example let me

00:54:06,930 --> 00:54:11,750
go back to my dingus well

00:54:12,220 --> 00:54:16,380
this is just bad decay window I want to

00:54:14,410 --> 00:54:19,150
show you that there's not going any time

00:54:16,380 --> 00:54:20,980
so again this is the same expression

00:54:19,150 --> 00:54:22,930
this is the same expression that I was

00:54:20,980 --> 00:54:24,910
showing you before so in this particular

00:54:22,930 --> 00:54:26,680
case what I'm doing is I'm creating an

00:54:24,910 --> 00:54:28,960
expression you know I'm creating this

00:54:26,680 --> 00:54:31,030
this dis lamda chol increment an

00:54:28,960 --> 00:54:34,270
increment takes a value and then returns

00:54:31,030 --> 00:54:35,559
the value incremented right so you could

00:54:34,270 --> 00:54:37,150
do something like this so this is a

00:54:35,559 --> 00:54:42,900
version the non expression version of it

00:54:37,150 --> 00:54:42,900
so I can say funk funk of int + int

00:54:43,319 --> 00:54:58,270
increment it's oh diamond I don't know

00:54:49,720 --> 00:55:02,530
how to do that that is a very good idea

00:54:58,270 --> 00:55:05,910
I like you I like you you're a man of

00:55:02,530 --> 00:55:10,150
your amount of solutions alright so font

00:55:05,910 --> 00:55:12,010
and and incrementer I'm gonna call it

00:55:10,150 --> 00:55:15,970
ink and this is a function that takes an

00:55:12,010 --> 00:55:19,029
argument right and returns the argument

00:55:15,970 --> 00:55:20,859
plus 1 right so I say ink it tells me

00:55:19,029 --> 00:55:22,270
you know that's a delegate right it's

00:55:20,859 --> 00:55:22,779
telling me it's a function and contains

00:55:22,270 --> 00:55:26,650
a BIST

00:55:22,779 --> 00:55:29,380
so if I call ink with 10 they all return

00:55:26,650 --> 00:55:33,940
11 right now the other thing that I can

00:55:29,380 --> 00:55:36,099
do now is I can say well no no that is

00:55:33,940 --> 00:55:39,760
that just did it live so what I want

00:55:36,099 --> 00:55:41,020
instead they're equally inked to you is

00:55:39,760 --> 00:55:44,859
that when I get the expression tree

00:55:41,020 --> 00:55:46,410
right and again it's the same thing

00:55:44,859 --> 00:55:50,039
what-o

00:55:46,410 --> 00:55:53,200
using system link expressions

00:55:50,039 --> 00:55:57,750
alright so expression and I really need

00:55:53,200 --> 00:55:57,750
to add up arrow to this thing

00:56:00,090 --> 00:56:14,890
now this is the way of open-source so

00:56:07,360 --> 00:56:16,300
any works here damn it yeah I

00:56:14,890 --> 00:56:19,090
wrote this tool I suck

00:56:16,300 --> 00:56:23,470
anyway now let me show you what ink two

00:56:19,090 --> 00:56:26,050
is done you see this do you appreciate

00:56:23,470 --> 00:56:31,930
the beauty are you witnessing the beauty

00:56:26,050 --> 00:56:33,370
here I mean are you getting it does

00:56:31,930 --> 00:56:39,400
anybody not appreciate the beauty of

00:56:33,370 --> 00:56:42,220
this thing what no seriously do you see

00:56:39,400 --> 00:56:44,110
what happened here in this case ink was

00:56:42,220 --> 00:56:46,240
just returning me well I have a function

00:56:44,110 --> 00:56:48,670
that has this type rights telling me

00:56:46,240 --> 00:56:50,560
it's a font that takes and that takes an

00:56:48,670 --> 00:56:52,420
integer and returns an integer that is

00:56:50,560 --> 00:56:53,050
it it's already compiled there's nothing

00:56:52,420 --> 00:56:55,780
I can do

00:56:53,050 --> 00:56:58,000
that's it but in this particular case

00:56:55,780 --> 00:56:59,620
it's returning me a tree it's a tree and

00:56:58,000 --> 00:57:01,090
the tree the to string method is

00:56:59,620 --> 00:57:02,710
actually D compiling that thing and

00:57:01,090 --> 00:57:04,300
showing me that in human terms let me

00:57:02,710 --> 00:57:06,610
show you the type of these bad boys

00:57:04,300 --> 00:57:08,830
so in get type again let's look at the

00:57:06,610 --> 00:57:12,040
first one so that's a precompile time

00:57:08,830 --> 00:57:13,330
now let me show you in to get type what

00:57:12,040 --> 00:57:15,700
is that this isn't like the expression

00:57:13,330 --> 00:57:19,360
expression that takes a funk inside now

00:57:15,700 --> 00:57:21,370
I can't really do much with with this

00:57:19,360 --> 00:57:22,870
thing you know I cannot use this guy

00:57:21,370 --> 00:57:25,120
because this is actually an expression

00:57:22,870 --> 00:57:26,740
right I can't invoke this one like I did

00:57:25,120 --> 00:57:31,420
the other one let's go back to the other

00:57:26,740 --> 00:57:33,220
one but what I can do there's a service

00:57:31,420 --> 00:57:35,410
that lets me compile expressions on the

00:57:33,220 --> 00:57:39,190
fly so now I can say ink to dot compile

00:57:35,410 --> 00:57:40,000
oh oh my god is so exciting all right

00:57:39,190 --> 00:57:45,220
let's do this

00:57:40,000 --> 00:57:50,130
var compiled so what is compiled it's

00:57:45,220 --> 00:57:50,130
that guy and now I can say compiled ten

00:57:51,780 --> 00:57:57,190
now this just did an addition it just

00:57:54,850 --> 00:57:59,920
added a number it's not that exciting

00:57:57,190 --> 00:58:04,520
but you can build entire applications

00:57:59,920 --> 00:58:09,000
with these beasts so exciting

00:58:04,520 --> 00:58:12,780
what is it nicer no no no why is it

00:58:09,000 --> 00:58:14,970
nicer well it is not nicer in many if

00:58:12,780 --> 00:58:16,410
you don't need it don't use it right

00:58:14,970 --> 00:58:18,570
that's that's the the most important

00:58:16,410 --> 00:58:21,270
thing in computer science never use

00:58:18,570 --> 00:58:22,950
something you don't need now it might

00:58:21,270 --> 00:58:24,720
seem very obvious and very stupid but

00:58:22,950 --> 00:58:27,930
I've I've been myself in many cases

00:58:24,720 --> 00:58:30,570
using stuff I didn't need core back

00:58:27,930 --> 00:58:32,070
comes to mind some people in the

00:58:30,570 --> 00:58:37,890
audience might remember that mistake of

00:58:32,070 --> 00:58:39,390
mine you know but it is not very useful

00:58:37,890 --> 00:58:40,920
for a lot of people but this particular

00:58:39,390 --> 00:58:43,770
thing is incredibly useful for the

00:58:40,920 --> 00:58:45,420
sequel case and the sequel case is I do

00:58:43,770 --> 00:58:47,670
not know what I'm gonna be talking later

00:58:45,420 --> 00:58:49,740
to right and I need to construct a

00:58:47,670 --> 00:58:52,350
perfect statement that the correct

00:58:49,740 --> 00:58:53,520
expression and I can do it at runtime at

00:58:52,350 --> 00:58:55,290
runtime I don't know what it is I mean

00:58:53,520 --> 00:58:58,830
at compile time I need to determine that

00:58:55,290 --> 00:59:00,750
runtime now what you saw here is

00:58:58,830 --> 00:59:01,950
basically a simplified reflection image

00:59:00,750 --> 00:59:03,750
this is generating this is using

00:59:01,950 --> 00:59:05,700
reflection emit to generate the code on

00:59:03,750 --> 00:59:08,970
the flight JIT compiled it and compile

00:59:05,700 --> 00:59:11,630
it to code as you're doing it you don't

00:59:08,970 --> 00:59:11,630
seem convinced

00:59:12,869 --> 00:59:19,809
anyways it's so exciting now this is

00:59:18,160 --> 00:59:21,099
completely off topic has nothing to do

00:59:19,809 --> 00:59:24,460
with this but since we're here we might

00:59:21,099 --> 00:59:27,009
as well do it I decided to add to this

00:59:24,460 --> 00:59:29,529
based you know every time that I put a

00:59:27,009 --> 00:59:31,029
value it renders it right typically it

00:59:29,529 --> 00:59:34,599
tells the to string method and it shows

00:59:31,029 --> 00:59:36,130
you that but if your return image it

00:59:34,599 --> 00:59:38,049
actually shows that so let me show you a

00:59:36,130 --> 00:59:39,519
little this is a plot function that

00:59:38,049 --> 00:59:41,680
basically takes a lambda expression

00:59:39,519 --> 00:59:44,289
takes a double and returns a double so

00:59:41,680 --> 00:59:46,660
I'm able to do you know I'm able to do

00:59:44,289 --> 00:59:48,910
graphs like that in the interactive

00:59:46,660 --> 00:59:50,920
c-sharp shell right not very interesting

00:59:48,910 --> 00:59:52,450
but you can do things like you know I

00:59:50,920 --> 00:59:54,309
don't know how to I'm not even ever know

00:59:52,450 --> 00:59:59,920
the name in English for this this what

00:59:54,309 --> 01:00:03,869
is it called parabola what yeah but that

00:59:59,920 --> 01:00:03,869
doesn't matter these guys are Americans

01:00:04,499 --> 01:00:13,990
oh right I thought my audience was you

01:00:09,220 --> 01:00:20,849
know freedom Trading Americans so let me

01:00:13,990 --> 01:00:20,849
just check this one that's horrible

01:00:21,880 --> 01:00:26,410
anyways you get the idea anything that

01:00:25,059 --> 01:00:28,509
you can turn an image this beast is

01:00:26,410 --> 01:00:30,009
gonna render it and you know it's a nice

01:00:28,509 --> 01:00:32,890
it's a nice little use of the sort of

01:00:30,009 --> 01:00:34,180
evaluator as you can see C sharp is no

01:00:32,890 --> 01:00:36,150
longer a statically compiled language

01:00:34,180 --> 01:00:39,130
can be used interactively

01:00:36,150 --> 01:00:41,920
with the liberties before Microsoft so

01:00:39,130 --> 01:00:43,329
just take note going back to the

01:00:41,920 --> 01:00:45,700
innovation piece it doesn't matter that

01:00:43,329 --> 01:00:47,019
we did it chances are when Microsoft

01:00:45,700 --> 01:00:50,589
does it's gonna reach more people than

01:00:47,019 --> 01:00:54,400
we do you know but just remember we did

01:00:50,589 --> 01:00:56,109
it first and I want to say let me tell

01:00:54,400 --> 01:00:59,079
you a story it's a limit of a conspiracy

01:00:56,109 --> 01:01:00,880
theory but I was sitting next to the

01:00:59,079 --> 01:01:02,259
program manager for dotnet one day I

01:01:00,880 --> 01:01:04,329
said you want to see your latest hack

01:01:02,259 --> 01:01:08,130
and I showed him this thing like holy

01:01:04,329 --> 01:01:10,539
 so he Mel Anders Helzberg and said

01:01:08,130 --> 01:01:13,960
the you know that these guys have a rep

01:01:10,539 --> 01:01:16,269
for c-sharp and he showed me and

01:01:13,960 --> 01:01:17,829
response and ender said well that's a

01:01:16,269 --> 01:01:19,150
bummer because we want to do that but

01:01:17,829 --> 01:01:22,150
it's not going to happen in title code

01:01:19,150 --> 01:01:23,680
11 which is going to come in 2012 so

01:01:22,150 --> 01:01:28,059
we're two years ahead of them

01:01:23,680 --> 01:01:30,700
and so the PTC Anders actually demoed

01:01:28,059 --> 01:01:32,920
his rebel stuff which is not available

01:01:30,700 --> 01:01:35,530
to anyone yet but he demoed that stuff

01:01:32,920 --> 01:01:40,089
to the public taking away a thunder I

01:01:35,530 --> 01:01:40,890
just want to put that out there make of

01:01:40,089 --> 01:01:45,250
that what you will

01:01:40,890 --> 01:01:52,859
yes oh all right we're gonna hurt this

01:01:45,250 --> 01:01:55,599
up really well nobody's hungry here so

01:01:52,859 --> 01:01:58,210
okay so I'm just gonna go very quickly

01:01:55,599 --> 01:01:59,950
here the finish up for features that are

01:01:58,210 --> 01:02:01,089
very interesting and in fact I thought

01:01:59,950 --> 01:02:02,770
that it was just gonna take me like a

01:02:01,089 --> 01:02:08,859
third of the talk so we have two thirds

01:02:02,770 --> 01:02:10,780
left I'm not gonna talk about this too

01:02:08,859 --> 01:02:15,369
much but t-shirt for has dynamic support

01:02:10,780 --> 01:02:17,319
which means that you can now that you

01:02:15,369 --> 01:02:18,670
can now change that anyways everything

01:02:17,319 --> 01:02:20,710
that you heard about ironruby doing

01:02:18,670 --> 01:02:24,069
c-sharp for those now sub who you need

01:02:20,710 --> 01:02:27,400
that language moving on now again this

01:02:24,069 --> 01:02:29,049
is very important for everybody not

01:02:27,400 --> 01:02:33,400
everybody's happy with c-sharp like

01:02:29,049 --> 01:02:35,349
Yvonne just showed right programming

01:02:33,400 --> 01:02:37,630
choice is a little bit like sex position

01:02:35,349 --> 01:02:39,160
choice not everybody likes the same so I

01:02:37,630 --> 01:02:43,510
understand if somebody wants to use

01:02:39,160 --> 01:02:54,280
something else so wow these people are

01:02:43,510 --> 01:02:55,690
hungry all right well you guys probably

01:02:54,280 --> 01:02:57,040
already hear this I'm not gonna repeat

01:02:55,690 --> 01:02:58,510
this stuff I'm not gonna repeat this

01:02:57,040 --> 01:03:01,690
stuff this was really interesting I'm

01:02:58,510 --> 01:03:04,569
not gonna repeat it this is fascinating

01:03:01,690 --> 01:03:06,609
in my opinion this afternoon perhaps if

01:03:04,569 --> 01:03:08,530
you come to the moonlight talk I'll talk

01:03:06,609 --> 01:03:09,790
it's going to talk about a very

01:03:08,530 --> 01:03:12,099
interesting development when it comes to

01:03:09,790 --> 01:03:16,390
compilers and C++ so you should come to

01:03:12,099 --> 01:03:17,559
that I'm gonna skip this in fact you

01:03:16,390 --> 01:03:20,260
know what I'm just gonna skip the rest

01:03:17,559 --> 01:03:25,470
and we should just do Q&A after the

01:03:20,260 --> 01:03:25,470

YouTube URL: https://www.youtube.com/watch?v=uS_9nwdzfzM


