Title: Building High Performance Web Applications with the Dojo Toolkit
Publication date: 2011-12-22
Playlist: FOSDEM 2010
Description: 
	By Dylan Schiemann

The Dojo Toolkit is a robust toolkit for creating JavaScript-based web applications.

The Dojo Toolkit is a robust toolkit for creating JavaScript-based web applications. In this talk you will learn about:

The origins of the toolkit
A high level overview of features and project direction and philosophy
Practical examples and key architectural approaches that may be applied to building any JavaScript-based application.

FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:06,600 --> 00:00:11,170
good lord

00:00:09,090 --> 00:00:14,810
anyway buona sera

00:00:11,170 --> 00:00:17,720
mr. beg your pardon gutentag of course

00:00:14,810 --> 00:00:19,100
yeah full thanks for coming and waking

00:00:17,720 --> 00:00:25,880
up so early I hope you're enjoying

00:00:19,100 --> 00:00:28,550
FOSDEM and there's my remote I'm Dylan

00:00:25,880 --> 00:00:31,550
I work on a project called the digital

00:00:28,550 --> 00:00:33,470
okay and I also am the founder of a

00:00:31,550 --> 00:00:37,010
company called siphon and I travel a lot

00:00:33,470 --> 00:00:38,630
and I love what I do today I want to

00:00:37,010 --> 00:00:41,510
talk to you about high performance web

00:00:38,630 --> 00:00:45,230
applications with dojo and it how many

00:00:41,510 --> 00:00:48,950
of you are familiar with JavaScript all

00:00:45,230 --> 00:00:53,750
right how about dojo okay awesome

00:00:48,950 --> 00:00:54,710
and another toolkit besides dojo all

00:00:53,750 --> 00:00:57,050
right great

00:00:54,710 --> 00:00:59,360
so I'm gonna place through the deadest

00:00:57,050 --> 00:01:00,950
stuff and get onto the app stuff I don't

00:00:59,360 --> 00:01:01,910
really practice or prepare my talks I

00:01:00,950 --> 00:01:04,610
just talk about whatever seems

00:01:01,910 --> 00:01:06,049
interesting at the moment the one thing

00:01:04,610 --> 00:01:08,810
I would hope you take away from this

00:01:06,049 --> 00:01:11,000
talk in any other talk is that it's all

00:01:08,810 --> 00:01:13,640
about choice and freedom with your code

00:01:11,000 --> 00:01:15,380
so dojo and projects like new tools and

00:01:13,640 --> 00:01:17,960
jQuery and whatnot pick what you like

00:01:15,380 --> 00:01:19,340
pick what works for you and go with it

00:01:17,960 --> 00:01:21,170
and I'm just going to expose you to a

00:01:19,340 --> 00:01:22,429
bunch of different approaches even when

00:01:21,170 --> 00:01:24,679
you're using dojo you could build an

00:01:22,429 --> 00:01:25,880
application a million different ways so

00:01:24,679 --> 00:01:28,340
I'm just going to talk about some of the

00:01:25,880 --> 00:01:30,679
things we do that work for us in various

00:01:28,340 --> 00:01:34,999
projects and various applications we've

00:01:30,679 --> 00:01:36,979
built and give you some ideas so very

00:01:34,999 --> 00:01:40,909
quick history lesson you know how many

00:01:36,979 --> 00:01:43,280
of you were dhtml developers very few

00:01:40,909 --> 00:01:46,249
right I am proud to say I was at the

00:01:43,280 --> 00:01:47,960
HTML guy but browser sucked and you know

00:01:46,249 --> 00:01:50,119
browsers suck less today than they did

00:01:47,960 --> 00:01:51,259
back then but the problem was people

00:01:50,119 --> 00:01:54,530
just didn't take JavaScript very

00:01:51,259 --> 00:01:57,499
seriously as a language and then Google

00:01:54,530 --> 00:01:59,929
Mail and Google Maps came out and people

00:01:57,499 --> 00:02:02,450
woke up and you know the buzzword called

00:01:59,929 --> 00:02:04,999
Ajax was coined and it suddenly became a

00:02:02,450 --> 00:02:07,249
real platform with real goals for

00:02:04,999 --> 00:02:09,740
building products right so when we're

00:02:07,249 --> 00:02:11,780
thinking about you know toolkits we're

00:02:09,740 --> 00:02:14,360
actually thinking about how do I give my

00:02:11,780 --> 00:02:17,330
users the experience they want in an

00:02:14,360 --> 00:02:19,520
application that matters right so I want

00:02:17,330 --> 00:02:21,200
something that's web delivered why well

00:02:19,520 --> 00:02:23,299
so everyone can get to it without having

00:02:21,200 --> 00:02:25,310
to install a bunch of software I want

00:02:23,299 --> 00:02:27,049
something that I can build cheaply right

00:02:25,310 --> 00:02:28,450
the whole point of open source software

00:02:27,049 --> 00:02:30,370
is to

00:02:28,450 --> 00:02:31,810
on the collective knowledge of everyone

00:02:30,370 --> 00:02:34,150
else rather than having to reinvent

00:02:31,810 --> 00:02:36,340
everything from scratch at least you

00:02:34,150 --> 00:02:38,260
know it's one goal you want your

00:02:36,340 --> 00:02:40,360
application to be useful and engaging of

00:02:38,260 --> 00:02:41,920
course otherwise you've great technology

00:02:40,360 --> 00:02:44,080
and a terrible interface and a pointless

00:02:41,920 --> 00:02:45,400
application well great open source the

00:02:44,080 --> 00:02:46,930
technology and do something else with

00:02:45,400 --> 00:02:49,569
your career because the application

00:02:46,930 --> 00:02:50,860
you're building sex you want you know

00:02:49,569 --> 00:02:52,569
some people have tried to basically

00:02:50,860 --> 00:02:54,459
create toolkits where they take the

00:02:52,569 --> 00:02:56,230
entire desktop and bring it to the web

00:02:54,459 --> 00:02:57,819
that's kind of not the point right

00:02:56,230 --> 00:03:00,360
because the web gives you so many other

00:02:57,819 --> 00:03:02,560
things like linking andrey mixing and

00:03:00,360 --> 00:03:05,620
search ability and all of these features

00:03:02,560 --> 00:03:07,720
and it's not and you know not pixel

00:03:05,620 --> 00:03:09,340
precise precision but a layout in an

00:03:07,720 --> 00:03:10,930
application that works in any size

00:03:09,340 --> 00:03:12,970
screen you know within reason obviously

00:03:10,930 --> 00:03:15,010
if your screen is ten pixels wide you

00:03:12,970 --> 00:03:17,709
can't do much with it but the idea is

00:03:15,010 --> 00:03:20,319
give your give your users the best of

00:03:17,709 --> 00:03:24,040
both worlds not just you know cloning

00:03:20,319 --> 00:03:26,470
Outlook and putting it on the web so

00:03:24,040 --> 00:03:28,480
when we set out to build dojo we said

00:03:26,470 --> 00:03:31,239
all right what's wrong with the world

00:03:28,480 --> 00:03:32,920
right and at the time this was 2004 and

00:03:31,239 --> 00:03:35,130
a number of us had worked on other

00:03:32,920 --> 00:03:37,150
toolkits they still support a Netscape 4

00:03:35,130 --> 00:03:38,230
fortunately we could say Netscape 4 is

00:03:37,150 --> 00:03:40,329
dead we're done with it

00:03:38,230 --> 00:03:42,820
hopefully version 2 of dojo can make the

00:03:40,329 --> 00:03:45,040
same decision about IU 6 and 7 because

00:03:42,820 --> 00:03:47,109
that would be really nice right so I I

00:03:45,040 --> 00:03:48,310
have my own unofficial math and I say we

00:03:47,109 --> 00:03:50,440
waste billions of dollars a year

00:03:48,310 --> 00:03:52,690
developing and supporting for ie6 and 7

00:03:50,440 --> 00:03:53,980
so it pays a lot of our paychecks but at

00:03:52,690 --> 00:03:55,299
the same time we could be doing a lot

00:03:53,980 --> 00:03:58,989
more interesting stuff with our money in

00:03:55,299 --> 00:04:02,470
time so we had we have a bunch of gaps

00:03:58,989 --> 00:04:03,670
in the browser right if we look at the

00:04:02,470 --> 00:04:06,280
things we have to build with they're

00:04:03,670 --> 00:04:10,180
actually pretty basic you've got an HTML

00:04:06,280 --> 00:04:12,549
Dom that has until now with html5 very

00:04:10,180 --> 00:04:14,500
boring rudimentary form controls you

00:04:12,549 --> 00:04:17,350
know like submit buttons that look

00:04:14,500 --> 00:04:19,209
terrible and an final upload button that

00:04:17,350 --> 00:04:22,240
you can't style and you just get really

00:04:19,209 --> 00:04:24,639
ugly crufty interfaces so but beyond

00:04:22,240 --> 00:04:26,260
that like Ajax right xhn alerts be

00:04:24,639 --> 00:04:28,120
request was a complete hack that was

00:04:26,260 --> 00:04:30,220
shoved into IE at the last minute

00:04:28,120 --> 00:04:33,550
because the beta code freedoms had

00:04:30,220 --> 00:04:34,840
passed for IE 5 but xml was cool and a

00:04:33,550 --> 00:04:36,820
buzz words that could call it an XML

00:04:34,840 --> 00:04:38,650
HTTP request and stick it in and shove

00:04:36,820 --> 00:04:40,450
it in but the API was terrible and not

00:04:38,650 --> 00:04:42,280
well thought through so you look at it

00:04:40,450 --> 00:04:43,510
and it's just it's ugly so

00:04:42,280 --> 00:04:46,210
you know all the toolkits try and make

00:04:43,510 --> 00:04:48,550
it really clean and simple CSS whether

00:04:46,210 --> 00:04:52,120
you're manipulating classes or you know

00:04:48,550 --> 00:04:54,160
trying to just get your page to start

00:04:52,120 --> 00:04:55,840
out at the same point and look the same

00:04:54,160 --> 00:04:57,880
in browsers you know within reason so

00:04:55,840 --> 00:04:59,260
you know setting default rules or

00:04:57,880 --> 00:05:01,330
whether you're trying to manipulate the

00:04:59,260 --> 00:05:03,820
CSS object model so add or removing

00:05:01,330 --> 00:05:06,820
styles from your CSS stylesheet it's

00:05:03,820 --> 00:05:09,700
just hard to do Dom manipulation I mean

00:05:06,820 --> 00:05:12,340
w3c guys mean well but dude what the

00:05:09,700 --> 00:05:13,960
 is up with your API to just a get

00:05:12,340 --> 00:05:15,700
element by ID can all events by class

00:05:13,960 --> 00:05:18,010
name but then all the things that are

00:05:15,700 --> 00:05:19,690
missing like give me a query in I mean

00:05:18,010 --> 00:05:21,100
quarry selector all is there now but why

00:05:19,690 --> 00:05:23,160
wasn't that there ten years ago when

00:05:21,100 --> 00:05:25,720
people were asking for it every month

00:05:23,160 --> 00:05:28,419
JavaScript doesn't have a concept

00:05:25,720 --> 00:05:30,010
natively of packaging right so require

00:05:28,419 --> 00:05:32,560
this module it depends on this other

00:05:30,010 --> 00:05:34,120
module why not you know

00:05:32,560 --> 00:05:36,310
browser vendors have moved at very

00:05:34,120 --> 00:05:38,770
different rates of speed right so

00:05:36,310 --> 00:05:40,990
Mozilla and WebKit have moved very fast

00:05:38,770 --> 00:05:42,400
and opera as well relative to IE which

00:05:40,990 --> 00:05:45,700
doesn't support a lot of things that we

00:05:42,400 --> 00:05:47,919
expect awkwardness you know the language

00:05:45,700 --> 00:05:49,570
is sometimes too flexible so you you

00:05:47,919 --> 00:05:50,890
have just so many different ways of

00:05:49,570 --> 00:05:52,750
doing so many different things and some

00:05:50,890 --> 00:05:54,490
of them are just slightly subtle and if

00:05:52,750 --> 00:05:55,930
you're not a JavaScript expert you can

00:05:54,490 --> 00:05:57,940
easily go down the wrong path using

00:05:55,930 --> 00:05:59,950
those so just clean those up a bit and

00:05:57,940 --> 00:06:02,410
then thinking about the future right so

00:05:59,950 --> 00:06:04,960
dojo has been doing vector graphics for

00:06:02,410 --> 00:06:08,020
a long time natively using oddly enough

00:06:04,960 --> 00:06:10,390
we support SVG canvas vml flash or

00:06:08,020 --> 00:06:12,490
Silverlight and we do that because we

00:06:10,390 --> 00:06:14,590
want you to have fallback options for

00:06:12,490 --> 00:06:20,200
drawing vector graphics but not be stuck

00:06:14,590 --> 00:06:21,910
in any one particular environment so

00:06:20,200 --> 00:06:25,270
browser gaps right browsers have

00:06:21,910 --> 00:06:27,430
problems development gaps right so tools

00:06:25,270 --> 00:06:28,570
for browsers and development are way

00:06:27,430 --> 00:06:30,160
better than they were five years ago

00:06:28,570 --> 00:06:31,840
imagine building an application without

00:06:30,160 --> 00:06:32,410
Firebug today right or without web

00:06:31,840 --> 00:06:34,419
inspector

00:06:32,410 --> 00:06:36,460
it's like coding in the dark which is

00:06:34,419 --> 00:06:39,760
what we used to do right or you know

00:06:36,460 --> 00:06:43,150
just having higher level constructs like

00:06:39,760 --> 00:06:45,700
give me a chart or give me a grid right

00:06:43,150 --> 00:06:47,500
and an HTML table while it is grid like

00:06:45,700 --> 00:06:49,990
doesn't give you you know column

00:06:47,500 --> 00:06:51,880
resorting or drag-and-drop or editing of

00:06:49,990 --> 00:06:53,580
tables it doesn't you know there's a

00:06:51,880 --> 00:06:56,289
spectrum between HTML table and

00:06:53,580 --> 00:06:57,580
spreadsheet right and we all want some

00:06:56,289 --> 00:07:00,639
set of features in the middle that would

00:06:57,580 --> 00:07:03,339
we would call great and finally I say

00:07:00,639 --> 00:07:04,869
real development platform right so we

00:07:03,339 --> 00:07:06,849
are real developers for JavaScript

00:07:04,869 --> 00:07:08,860
people we we can build real applications

00:07:06,849 --> 00:07:10,689
so give us the tools and the code and

00:07:08,860 --> 00:07:13,539
the environment that we need javascript

00:07:10,689 --> 00:07:15,460
is so flexible yet so incomplete that we

00:07:13,539 --> 00:07:19,180
need tools and better options to make it

00:07:15,460 --> 00:07:20,949
what we needed to be so dojo just

00:07:19,180 --> 00:07:22,419
started out as a project where we said

00:07:20,949 --> 00:07:26,469
we want to get the most out of the web

00:07:22,419 --> 00:07:29,020
and we started writing code in 2004 and

00:07:26,469 --> 00:07:30,459
2005 we started a foundation to host

00:07:29,020 --> 00:07:32,439
that code because we didn't want it to

00:07:30,459 --> 00:07:34,959
be copyright dylan and alex 2005 we

00:07:32,439 --> 00:07:38,860
thought that was kind of lame when we

00:07:34,959 --> 00:07:40,779
came out with 0.1 and 0.2 IBM and AOL

00:07:38,860 --> 00:07:42,580
and sun became very interested in dojo

00:07:40,779 --> 00:07:45,550
which is cool so they've contributed

00:07:42,580 --> 00:07:47,559
time and effort over the years and we

00:07:45,550 --> 00:07:49,599
did a complete rewrite in 2007 because

00:07:47,559 --> 00:07:52,479
prior to that dojo was really slow and

00:07:49,599 --> 00:07:54,729
it was called 0.4 for a reason it wasn't

00:07:52,479 --> 00:07:55,959
ready for primetime production it was us

00:07:54,729 --> 00:07:58,629
still figuring out what we wanted to

00:07:55,959 --> 00:08:01,419
build and so she became really popular

00:07:58,629 --> 00:08:05,499
at 0.4 which is too soon for it's become

00:08:01,419 --> 00:08:08,529
popular in my opinion regardless I mean

00:08:05,499 --> 00:08:10,419
the Apple Store still uses dojo 0.4 on

00:08:08,529 --> 00:08:11,709
their website which is I mean it works

00:08:10,419 --> 00:08:13,419
for them so it's fast enough for what

00:08:11,709 --> 00:08:15,999
they were using it for but I wouldn't

00:08:13,419 --> 00:08:18,159
use 0.4 for anything today and so our

00:08:15,999 --> 00:08:20,469
goal is basically to dot releases a year

00:08:18,159 --> 00:08:23,199
the forwards compatible they fix bugs

00:08:20,469 --> 00:08:24,669
they add features etc and then we're

00:08:23,199 --> 00:08:29,050
working on 2.0 released sometime

00:08:24,669 --> 00:08:31,479
probably in 2011 as my guess so

00:08:29,050 --> 00:08:33,190
dojo has goals right it fixed those

00:08:31,479 --> 00:08:36,219
things I was just describing about the

00:08:33,190 --> 00:08:38,500
browser gaps development gaps be fast

00:08:36,219 --> 00:08:40,060
and efficient right performance is what

00:08:38,500 --> 00:08:41,229
everyone cares about if your

00:08:40,060 --> 00:08:43,419
applications slow you're going to move

00:08:41,229 --> 00:08:44,649
on to another toolkit or someone's going

00:08:43,419 --> 00:08:46,540
to tell you to choose Silverlight or

00:08:44,649 --> 00:08:49,500
flex which is not necessarily faster of

00:08:46,540 --> 00:08:52,480
course we want to be professional

00:08:49,500 --> 00:08:53,980
sophisticated and powerful and those are

00:08:52,480 --> 00:08:56,350
interesting words that I'm choosing you

00:08:53,980 --> 00:08:59,829
know power meaning give developers the

00:08:56,350 --> 00:09:02,529
power to get every last ounce out of the

00:08:59,829 --> 00:09:04,180
browser you know not just give me the

00:09:02,529 --> 00:09:06,010
parts that only work in every single

00:09:04,180 --> 00:09:07,420
browser on the market let me push the

00:09:06,010 --> 00:09:08,710
limits and get the most out of this

00:09:07,420 --> 00:09:11,710
platform that's really exciting

00:09:08,710 --> 00:09:14,170
right professional meaning we don't want

00:09:11,710 --> 00:09:16,870
corporations to have any reason to not

00:09:14,170 --> 00:09:19,330
choose dojo and we don't want any of our

00:09:16,870 --> 00:09:22,060
users to get sued for ever using dojo so

00:09:19,330 --> 00:09:23,590
we have a fairly conservative IP

00:09:22,060 --> 00:09:25,870
approach it's much like the Apache

00:09:23,590 --> 00:09:27,400
foundation where basically you have to

00:09:25,870 --> 00:09:29,530
sign a license agreement that says the

00:09:27,400 --> 00:09:30,910
code you're giving dojo is yours to give

00:09:29,530 --> 00:09:33,490
and you're not going to sue for it if

00:09:30,910 --> 00:09:34,780
someone else uses it and it's important

00:09:33,490 --> 00:09:36,400
because it protects your rights but

00:09:34,780 --> 00:09:38,740
although a lot of people just don't care

00:09:36,400 --> 00:09:40,990
and maybe we shouldn't care about we do

00:09:38,740 --> 00:09:43,260
and so certain companies love that and

00:09:40,990 --> 00:09:46,480
other people just don't care all

00:09:43,260 --> 00:09:48,220
obviously we are licensed for adoption

00:09:46,480 --> 00:09:50,140
you know we're BSD and academic free

00:09:48,220 --> 00:09:53,080
license we intentionally did not choose

00:09:50,140 --> 00:09:55,450
the GPL because it blocks some companies

00:09:53,080 --> 00:09:56,890
from using it and GPL is great for

00:09:55,450 --> 00:09:58,750
certain types of projects for Ajax

00:09:56,890 --> 00:09:59,920
toolkits we just want everyone to use it

00:09:58,750 --> 00:10:01,360
in whatever way they want if they don't

00:09:59,920 --> 00:10:03,190
want to contribute back code we don't

00:10:01,360 --> 00:10:06,480
care but most companies and most people

00:10:03,190 --> 00:10:10,470
do contribute code anyway so it's great

00:10:06,480 --> 00:10:12,910
dojo today is split up into a few levels

00:10:10,470 --> 00:10:14,650
we're actually kind of reworking that

00:10:12,910 --> 00:10:15,880
and the names and distinctions really

00:10:14,650 --> 00:10:19,090
aren't all that important but the idea

00:10:15,880 --> 00:10:20,500
is that dojo and digit are stable API is

00:10:19,090 --> 00:10:22,180
they're not going to change from major

00:10:20,500 --> 00:10:23,680
releases except for additions and bug

00:10:22,180 --> 00:10:26,290
fixes which will be noted in the release

00:10:23,680 --> 00:10:27,850
notes and dojo X is the extensions are

00:10:26,290 --> 00:10:31,060
the official extensions of the dojo

00:10:27,850 --> 00:10:33,160
toolkit so dojo dot J's gzip will give

00:10:31,060 --> 00:10:35,220
you pretty much everything you need to

00:10:33,160 --> 00:10:37,600
build a basic application and 26k

00:10:35,220 --> 00:10:38,950
and then you can add on any other

00:10:37,600 --> 00:10:41,110
libraries that you want I'll show you

00:10:38,950 --> 00:10:43,330
how in a minute digit is both a widget

00:10:41,110 --> 00:10:45,730
system and a collection of widgets and

00:10:43,330 --> 00:10:48,100
I'll go through that in a bit as well if

00:10:45,730 --> 00:10:51,160
you were to work on a dojo application

00:10:48,100 --> 00:10:52,920
today you probably and your first day

00:10:51,160 --> 00:10:54,940
would use what's on this screen and

00:10:52,920 --> 00:10:57,670
basically it's just a simple set of

00:10:54,940 --> 00:10:59,470
api's you'll notice if you use jQuery

00:10:57,670 --> 00:11:03,220
before it's structured very differently

00:10:59,470 --> 00:11:05,200
this is more traditional yet api is in

00:11:03,220 --> 00:11:07,150
in our toolkit are fairly flat so you

00:11:05,200 --> 00:11:09,280
don't see a lot of food up bar top as

00:11:07,150 --> 00:11:10,990
does diseases extent whatever because

00:11:09,280 --> 00:11:13,240
that's really expensive in JavaScript

00:11:10,990 --> 00:11:14,590
especially in IE to have object

00:11:13,240 --> 00:11:16,690
structures that are nested that deeply

00:11:14,590 --> 00:11:18,460
but you can see we've got packaging

00:11:16,690 --> 00:11:20,800
stuff we've got stuff to handle loading

00:11:18,460 --> 00:11:22,480
we've got stuff to grab node set

00:11:20,800 --> 00:11:25,980
attributes and style

00:11:22,480 --> 00:11:30,339
and behaviors creation of nodes Ajax

00:11:25,980 --> 00:11:32,769
effects caching you know and hashing so

00:11:30,339 --> 00:11:34,899
for like back button type stuff declare

00:11:32,769 --> 00:11:36,010
for creating classes if the next talk

00:11:34,899 --> 00:11:37,930
you'll see more tools it's the same

00:11:36,010 --> 00:11:40,300
thing as so declare is basically equal

00:11:37,930 --> 00:11:42,430
to new class in your tools

00:11:40,300 --> 00:11:44,500
dojo data which I'll get into ana Bettis

00:11:42,430 --> 00:11:46,660
and advanced topic for application

00:11:44,500 --> 00:11:48,820
development charting vector graphics you

00:11:46,660 --> 00:11:50,350
may or may not care about that DTL it's

00:11:48,820 --> 00:11:52,029
the Django temperately language we

00:11:50,350 --> 00:11:53,470
implemented on the client side so you

00:11:52,029 --> 00:11:55,660
use the same template server side and

00:11:53,470 --> 00:11:58,149
client side and of course accessing the

00:11:55,660 --> 00:11:59,800
grid the grid is by far the most popular

00:11:58,149 --> 00:12:02,769
widget and it's not actually an official

00:11:59,800 --> 00:12:05,110
widget yet because it's so it's so in

00:12:02,769 --> 00:12:09,399
demand and so under development stuff so

00:12:05,110 --> 00:12:11,260
I said JavaScript applications are

00:12:09,399 --> 00:12:13,360
JavaScript in browsers in general don't

00:12:11,260 --> 00:12:14,829
have packaging right so we provide a

00:12:13,360 --> 00:12:17,050
very simple mechanism and what's cool

00:12:14,829 --> 00:12:20,380
about JavaScript the language is all it

00:12:17,050 --> 00:12:21,970
actually is is calling a function with a

00:12:20,380 --> 00:12:24,160
string name you put it at the top of a

00:12:21,970 --> 00:12:26,019
file and you say this is what I'm giving

00:12:24,160 --> 00:12:28,089
you and this is what I'm requiring of

00:12:26,019 --> 00:12:30,100
those modules and then dojo behind the

00:12:28,089 --> 00:12:31,630
scenes just reads that from the file and

00:12:30,100 --> 00:12:33,130
goes and make sure you have all the

00:12:31,630 --> 00:12:35,470
dependencies in place in the right order

00:12:33,130 --> 00:12:37,630
now when it comes time to ship your

00:12:35,470 --> 00:12:39,399
application rather than loading in 50

00:12:37,630 --> 00:12:41,230
scripts that you need there's a quick

00:12:39,399 --> 00:12:43,000
build step or a compilation step that

00:12:41,230 --> 00:12:45,069
will go through and based on how you

00:12:43,000 --> 00:12:47,019
define how you want your code optimized

00:12:45,069 --> 00:12:48,760
it'll grab all the files optimize them

00:12:47,019 --> 00:12:50,560
strip comments out you know stick them

00:12:48,760 --> 00:12:53,860
into a single file or multiple files and

00:12:50,560 --> 00:12:56,110
make it really easy to use probably the

00:12:53,860 --> 00:12:57,850
biggest thing that people run into when

00:12:56,110 --> 00:12:59,260
they start getting into JavaScript you

00:12:57,850 --> 00:13:04,089
know just enough to be dangerous is

00:12:59,260 --> 00:13:06,010
timing bugs so for example the classic

00:13:04,089 --> 00:13:08,319
problem in ie6 is trying to manipulate

00:13:06,010 --> 00:13:11,019
the Dom before it's actually loaded and

00:13:08,319 --> 00:13:12,510
so dojo and other toolkits handle that

00:13:11,019 --> 00:13:15,910
problem as well

00:13:12,510 --> 00:13:18,069
Dom manipulation you know like I've said

00:13:15,910 --> 00:13:19,360
that the normal API is suck so dojo of

00:13:18,069 --> 00:13:21,069
course gives you a lot of stuff to work

00:13:19,360 --> 00:13:23,110
with that there's also a little project

00:13:21,069 --> 00:13:24,639
on Google code called plug D and it

00:13:23,110 --> 00:13:27,490
actually basically takes most of the

00:13:24,639 --> 00:13:29,050
jquery api and wraps it around dojo so

00:13:27,490 --> 00:13:31,810
if you like jquery and you want to

00:13:29,050 --> 00:13:32,860
experiment with dojo grab plug d use it

00:13:31,810 --> 00:13:35,260
with that and you get most of your

00:13:32,860 --> 00:13:36,310
familiar api's as well there's also a

00:13:35,260 --> 00:13:40,900
dojo X Jake

00:13:36,310 --> 00:13:43,060
Hieu experimental module and 1.4 events

00:13:40,900 --> 00:13:45,370
so most people when they first start

00:13:43,060 --> 00:13:46,750
building applications see that you know

00:13:45,370 --> 00:13:48,910
there's on click and there's on

00:13:46,750 --> 00:13:51,010
mouse-over and onmouseout and your

00:13:48,910 --> 00:13:52,750
simple Dom events we take events to a

00:13:51,010 --> 00:13:55,060
different level we think of dumb events

00:13:52,750 --> 00:13:57,040
and function to function calls as

00:13:55,060 --> 00:13:59,410
basically the same thing so basically

00:13:57,040 --> 00:14:01,360
you connect one source object and source

00:13:59,410 --> 00:14:03,640
function to another target object and a

00:14:01,360 --> 00:14:05,860
target function and we do that because

00:14:03,640 --> 00:14:08,830
then we can just simply think of it all

00:14:05,860 --> 00:14:10,150
as the same thing one thing you'll

00:14:08,830 --> 00:14:12,010
notice if you're not familiar with Java

00:14:10,150 --> 00:14:13,660
Script is that the name of the function

00:14:12,010 --> 00:14:14,950
is actually in quotes and that's because

00:14:13,660 --> 00:14:18,370
while javascript is a very dynamic

00:14:14,950 --> 00:14:20,290
language in a dot dot dot dot syntax the

00:14:18,370 --> 00:14:21,760
last thing in your list has to be the

00:14:20,290 --> 00:14:24,400
actual name it can't be a variable

00:14:21,760 --> 00:14:26,110
representation unless you put it in

00:14:24,400 --> 00:14:27,460
brackets if you put it in brackets then

00:14:26,110 --> 00:14:29,230
it could be a variable name so if we

00:14:27,460 --> 00:14:32,560
passed a string in so we couldn't just

00:14:29,230 --> 00:14:34,029
pass in object 1 dot foo because it

00:14:32,560 --> 00:14:36,220
would be looking for something that was

00:14:34,029 --> 00:14:38,620
actually named object 1 dot foo when we

00:14:36,220 --> 00:14:39,570
call it inside our our private method so

00:14:38,620 --> 00:14:42,280
that's what we do

00:14:39,570 --> 00:14:43,960
dojo also supports a pub/sub model so if

00:14:42,280 --> 00:14:45,070
you want to publish your subscribe to a

00:14:43,960 --> 00:14:47,020
collection of topics

00:14:45,070 --> 00:14:49,150
they're just named topics we most people

00:14:47,020 --> 00:14:53,020
follow a sort of URL style pathway

00:14:49,150 --> 00:14:55,390
mechanism much like mod pub/sub or jetty

00:14:53,020 --> 00:14:57,370
comedy that model so if you use some

00:14:55,390 --> 00:15:01,270
well you know how many of you know what

00:14:57,370 --> 00:15:04,060
comet is okay a few of you comment is

00:15:01,270 --> 00:15:05,530
Ajax but faster and actually the ape

00:15:04,060 --> 00:15:08,260
guys are back there and they have a

00:15:05,530 --> 00:15:09,850
comment server or an ajax push engine or

00:15:08,260 --> 00:15:11,680
an async push engine whatever you want

00:15:09,850 --> 00:15:12,850
to call it but there's a number of

00:15:11,680 --> 00:15:15,070
different approaches you can take to

00:15:12,850 --> 00:15:19,600
that one of them is pub/sub model and it

00:15:15,070 --> 00:15:21,550
just supports that Ajax is much simpler

00:15:19,600 --> 00:15:23,470
I'm just going to leave it at that I've

00:15:21,550 --> 00:15:24,970
got too many slides as always we have a

00:15:23,470 --> 00:15:26,380
nice effect system those weren't actual

00:15:24,970 --> 00:15:28,330
dojo effects but I'm just trying to

00:15:26,380 --> 00:15:32,290
illustrate the point drag-and-drop

00:15:28,330 --> 00:15:33,459
support of course some newer browsers

00:15:32,290 --> 00:15:35,020
are starting to support it in certain

00:15:33,459 --> 00:15:37,420
ways drag and drop is actually a really

00:15:35,020 --> 00:15:39,760
hard problem to solve because everyone

00:15:37,420 --> 00:15:41,410
wants it to behave differently so in

00:15:39,760 --> 00:15:43,540
addition to providing some good defaults

00:15:41,410 --> 00:15:44,980
we provide very nice extension points

00:15:43,540 --> 00:15:46,810
throughout the drag-and-drop process so

00:15:44,980 --> 00:15:49,300
you can rewrite how you handle drag

00:15:46,810 --> 00:15:49,870
events and how you actually display what

00:15:49,300 --> 00:15:53,920
happens

00:15:49,870 --> 00:15:55,779
someone's dragging that sort of thing we

00:15:53,920 --> 00:15:57,940
a lot of toolkits of course followed

00:15:55,779 --> 00:15:59,890
this but IBM was a big contributor to

00:15:57,940 --> 00:16:01,720
dojo an IBM works with a lot of large

00:15:59,890 --> 00:16:04,060
agencies where accessibility and

00:16:01,720 --> 00:16:05,589
internationalization are key so dojo has

00:16:04,060 --> 00:16:08,320
made a huge investment in making sure

00:16:05,589 --> 00:16:11,350
all of our widgets are fully accessible

00:16:08,320 --> 00:16:14,200
through keyboard blindness color

00:16:11,350 --> 00:16:15,850
blindness you know just you know

00:16:14,200 --> 00:16:18,700
inverted screen colors all that sort of

00:16:15,850 --> 00:16:19,960
stuff as well as very localizable so we

00:16:18,700 --> 00:16:21,910
have translations and a bunch of

00:16:19,960 --> 00:16:23,440
different languages a very simple way to

00:16:21,910 --> 00:16:28,920
provide your own translations for your

00:16:23,440 --> 00:16:32,560
own widgets etc does your not declare so

00:16:28,920 --> 00:16:35,230
javascript has classes sort of you know

00:16:32,560 --> 00:16:38,050
it's a prototypal inheritance based

00:16:35,230 --> 00:16:41,380
language with some classic constructs

00:16:38,050 --> 00:16:43,150
bolted on top and so but the the syntax

00:16:41,380 --> 00:16:45,160
to do that is actually pretty ugly so

00:16:43,150 --> 00:16:47,170
toolkits try to make it really easy so

00:16:45,160 --> 00:16:49,150
you just say don't have to clear the

00:16:47,170 --> 00:16:52,029
name of the class you wanted to find the

00:16:49,150 --> 00:16:53,890
things that it inherits from the first

00:16:52,029 --> 00:16:55,630
one being the one in it it's strictly

00:16:53,890 --> 00:16:57,880
inherits from and all the subsequent

00:16:55,630 --> 00:16:59,350
ones being things that are mixed in so

00:16:57,880 --> 00:17:01,510
mixed in mainly and you basically copy

00:16:59,350 --> 00:17:03,070
the methods and properties and push them

00:17:01,510 --> 00:17:05,500
on and print them on top of your

00:17:03,070 --> 00:17:08,130
existing function and then you can have

00:17:05,500 --> 00:17:11,949
a constructor and then just a number of

00:17:08,130 --> 00:17:17,439
parameters as variables or objects in

00:17:11,949 --> 00:17:20,050
the form of functions so digit Y a

00:17:17,439 --> 00:17:24,069
widget system right so a lot of people

00:17:20,050 --> 00:17:25,929
use dojo for its widget system in fact

00:17:24,069 --> 00:17:28,329
like in my recent survey of why people

00:17:25,929 --> 00:17:30,490
use dojo based on what people used to

00:17:28,329 --> 00:17:33,250
know for on the public web every site I

00:17:30,490 --> 00:17:36,640
could find uses digit as well as dojo so

00:17:33,250 --> 00:17:39,130
the the cool thing about digit compared

00:17:36,640 --> 00:17:41,290
to like e^x sees widget system per se is

00:17:39,130 --> 00:17:43,450
that dojo has always really been about a

00:17:41,290 --> 00:17:45,220
system to build your own widgets easily

00:17:43,450 --> 00:17:47,170
and we give you a bunch of nice ones out

00:17:45,220 --> 00:17:48,610
of the box but we're more concerned of

00:17:47,170 --> 00:17:49,929
actually giving you a platform for

00:17:48,610 --> 00:17:51,910
easily building your own widgets or

00:17:49,929 --> 00:17:54,340
extending the existing ones so they're

00:17:51,910 --> 00:17:56,080
very Thema Bowl it's very very

00:17:54,340 --> 00:17:57,370
consistent in the API across all the

00:17:56,080 --> 00:17:58,810
widgets no it wasn't the case you know

00:17:57,370 --> 00:18:01,150
three years ago but that's that's the

00:17:58,810 --> 00:18:03,100
case now and the thing is we want people

00:18:01,150 --> 00:18:03,730
to be able to think okay I've got a tree

00:18:03,100 --> 00:18:05,110
and I've got a

00:18:03,730 --> 00:18:07,269
well don't use trees because I hate them

00:18:05,110 --> 00:18:08,710
but you know if you like trees you got a

00:18:07,269 --> 00:18:10,539
tree you got a grade you got a chart

00:18:08,710 --> 00:18:13,809
right but you know still under the hood

00:18:10,539 --> 00:18:15,730
it's still just dom nodes some HTML that

00:18:13,809 --> 00:18:18,279
you know code to to put those into the

00:18:15,730 --> 00:18:20,620
page some CSS to style them and some

00:18:18,279 --> 00:18:22,690
JavaScript to define the basic behaviors

00:18:20,620 --> 00:18:25,269
of that so all of our widgets are

00:18:22,690 --> 00:18:27,909
basically an HTML file a CSS file and a

00:18:25,269 --> 00:18:29,799
JavaScript file and we do a lot of nice

00:18:27,909 --> 00:18:31,210
things to encapsulate the behavior so

00:18:29,799 --> 00:18:32,740
that you can have multiple widget

00:18:31,210 --> 00:18:34,990
instances on a page and not worry about

00:18:32,740 --> 00:18:38,409
ID collisions or naming collisions and

00:18:34,990 --> 00:18:41,529
that sort of thing I think I already

00:18:38,409 --> 00:18:44,230
talked about that so I'll skip that lots

00:18:41,529 --> 00:18:46,539
of features lots of themes for actually

00:18:44,230 --> 00:18:48,070
working on to new themes right now for

00:18:46,539 --> 00:18:50,620
the one-five release one of them is

00:18:48,070 --> 00:18:53,320
actually a port of the cappuccino

00:18:50,620 --> 00:18:54,880
projects open sourced Aristo theme so

00:18:53,320 --> 00:18:56,200
we'll call it Arista Joe because

00:18:54,880 --> 00:18:58,059
everything has to have that Joe at the

00:18:56,200 --> 00:19:00,070
end I could actually have a Joe Joe

00:18:58,059 --> 00:19:01,809
project that's a spoof of jQuery and a

00:19:00,070 --> 00:19:02,980
mojo project that's a spoof of new tools

00:19:01,809 --> 00:19:05,320
and and whatnot

00:19:02,980 --> 00:19:07,630
anyway site aversion because I like to

00:19:05,320 --> 00:19:09,279
just stray we you know you could

00:19:07,630 --> 00:19:10,960
classify our widgets in a number of ways

00:19:09,279 --> 00:19:13,600
we've got things to do layout so you can

00:19:10,960 --> 00:19:15,010
do desktop style layout you know want

00:19:13,600 --> 00:19:16,929
the app to take up 107 of the screen

00:19:15,010 --> 00:19:18,789
have this much take 30% include a

00:19:16,929 --> 00:19:21,250
splitter that sort of thing form

00:19:18,789 --> 00:19:22,480
controls that replace the default ones

00:19:21,250 --> 00:19:23,919
and give you things that are much better

00:19:22,480 --> 00:19:25,960
you know like calendar controls that

00:19:23,919 --> 00:19:27,519
sort of thing how many of you have ever

00:19:25,960 --> 00:19:30,340
tried to build a WYSIWYG editor on your

00:19:27,519 --> 00:19:33,450
own how many of you wanted to shoot

00:19:30,340 --> 00:19:36,429
yourself in the head after you were done

00:19:33,450 --> 00:19:38,769
it's just it's a an exercise in futility

00:19:36,429 --> 00:19:40,269
because it's one of the few things were

00:19:38,769 --> 00:19:42,730
internet explorer for a while or and

00:19:40,269 --> 00:19:44,769
maybe even today has the best API but I

00:19:42,730 --> 00:19:46,690
will say that it was probably created

00:19:44,769 --> 00:19:48,220
with the intent of making it possible to

00:19:46,690 --> 00:19:51,549
think you could recreate word but not

00:19:48,220 --> 00:19:53,350
quite so every boss wants you to say

00:19:51,549 --> 00:19:54,789
well this doesn't behave like Microsoft

00:19:53,350 --> 00:19:56,289
Word what's wrong with this editor and

00:19:54,789 --> 00:19:58,720
everyone else copied the API to

00:19:56,289 --> 00:20:00,789
basically make it also not possible to

00:19:58,720 --> 00:20:02,440
recreate word in the browser and so it's

00:20:00,789 --> 00:20:03,700
this terrible exercise in futility and

00:20:02,440 --> 00:20:05,380
there's there's good projects out there

00:20:03,700 --> 00:20:06,490
the digit editor is pretty good and

00:20:05,380 --> 00:20:08,169
there's other editors out there I think

00:20:06,490 --> 00:20:10,539
there's actually two editors in dojo

00:20:08,169 --> 00:20:12,100
because one is iframe based and one's

00:20:10,539 --> 00:20:13,660
not iframe based and that has impact on

00:20:12,100 --> 00:20:15,809
back button events and

00:20:13,660 --> 00:20:19,240
other things and it's it's interesting

00:20:15,809 --> 00:20:20,650
there's a lot of widgets I got

00:20:19,240 --> 00:20:21,940
interested in dojo because I was very

00:20:20,650 --> 00:20:23,860
interested in vector graphics I actually

00:20:21,940 --> 00:20:26,350
got interested in JavaScript because I

00:20:23,860 --> 00:20:28,240
was a physical chemist graduate student

00:20:26,350 --> 00:20:30,220
at UCLA and I was studying the topology

00:20:28,240 --> 00:20:31,960
and rheology of quasi 2-dimensional foam

00:20:30,220 --> 00:20:33,520
so if you're sitting looking at your

00:20:31,960 --> 00:20:35,320
beer tonight and you've got bubbles

00:20:33,520 --> 00:20:37,900
moving around I was studying the physics

00:20:35,320 --> 00:20:39,520
of that which is really cool and I

00:20:37,900 --> 00:20:41,110
wanted to put that on the web I wanted

00:20:39,520 --> 00:20:43,960
to be able to draw that and show people

00:20:41,110 --> 00:20:44,710
what that meant like why why would I

00:20:43,960 --> 00:20:45,970
care and it's actually really

00:20:44,710 --> 00:20:47,950
interesting Sciences I won't go into

00:20:45,970 --> 00:20:49,450
because I want you to fall asleep and it

00:20:47,950 --> 00:20:52,120
makes me fall asleep pretty quickly too

00:20:49,450 --> 00:20:53,110
but I got hooked this is like 97 and of

00:20:52,120 --> 00:20:54,640
course you couldn't do anything like

00:20:53,110 --> 00:20:56,380
that in the browser not even not with

00:20:54,640 --> 00:20:57,730
anything except maybe an applet which

00:20:56,380 --> 00:21:01,270
was just terrible but I got hooked on

00:20:57,730 --> 00:21:03,039
JavaScript so for me native vector

00:21:01,270 --> 00:21:04,659
graphics support is key you know I got

00:21:03,039 --> 00:21:07,690
KITT and the way I really got into open

00:21:04,659 --> 00:21:10,150
source was Adobe killed the SVG viewer

00:21:07,690 --> 00:21:12,039
project when they bought Macromedia so I

00:21:10,150 --> 00:21:13,720
had a nice SVG viewer that would let me

00:21:12,039 --> 00:21:15,940
do this stuff and then they killed the

00:21:13,720 --> 00:21:17,409
project and it took years before native

00:21:15,940 --> 00:21:20,440
browser capabilities caught up

00:21:17,409 --> 00:21:22,179
so at dojo that's been a major driving

00:21:20,440 --> 00:21:25,330
force for me and my interest in DOTA

00:21:22,179 --> 00:21:27,700
early on again we just try and do stuff

00:21:25,330 --> 00:21:29,169
that you know people say can't be done

00:21:27,700 --> 00:21:30,880
and we try and find a way to do it

00:21:29,169 --> 00:21:32,679
and what's cool is within a couple years

00:21:30,880 --> 00:21:34,600
we've got it done and it works well and

00:21:32,679 --> 00:21:35,530
other people do as well and it's not

00:21:34,600 --> 00:21:37,510
like we're the only people that

00:21:35,530 --> 00:21:42,730
experiment but it's a big driving force

00:21:37,510 --> 00:21:45,760
for dojo so dojo also includes a lot of

00:21:42,730 --> 00:21:47,320
tools and most people don't know about

00:21:45,760 --> 00:21:49,570
these but they work with any JavaScript

00:21:47,320 --> 00:21:50,830
code and in fact there's a lot of

00:21:49,570 --> 00:21:52,059
overlap between our tools and other

00:21:50,830 --> 00:21:53,590
projects tools of course everyone has to

00:21:52,059 --> 00:21:54,760
write their own tools because they don't

00:21:53,590 --> 00:21:56,110
know about other people's tools you know

00:21:54,760 --> 00:21:57,730
we just kind of sit tunnel vision and

00:21:56,110 --> 00:21:59,110
just think about our own stuff which is

00:21:57,730 --> 00:22:00,730
what's great coming to conferences and

00:21:59,110 --> 00:22:02,799
talking to people from other projects I

00:22:00,730 --> 00:22:03,159
keep pointing to mr. mood tools over

00:22:02,799 --> 00:22:04,960
here

00:22:03,159 --> 00:22:06,070
noting founder and and of course the

00:22:04,960 --> 00:22:07,870
founder Valerio is somewhere in the

00:22:06,070 --> 00:22:10,780
audience I don't know arias but anyway

00:22:07,870 --> 00:22:12,130
um lots of cool tools to do things

00:22:10,780 --> 00:22:14,140
better you know to generate

00:22:12,130 --> 00:22:16,090
documentation on the fly for your source

00:22:14,140 --> 00:22:17,620
code and dojo source code to do unit

00:22:16,090 --> 00:22:18,789
testing or run thousands of unit tests

00:22:17,620 --> 00:22:21,010
of the browser to do continuous

00:22:18,789 --> 00:22:23,470
integration testing functional testing

00:22:21,010 --> 00:22:24,909
by writing your own tests and pulling

00:22:23,470 --> 00:22:26,690
selenium and windmill into the fixture

00:22:24,909 --> 00:22:31,729
that sort of thing

00:22:26,690 --> 00:22:34,129
so applications with dojo right so we

00:22:31,729 --> 00:22:35,779
have a lot of goals related to

00:22:34,129 --> 00:22:38,570
performance to get our applications

00:22:35,779 --> 00:22:40,309
working fast enough and browsers HTTP

00:22:38,570 --> 00:22:42,409
request simplification no timing bugs

00:22:40,309 --> 00:22:44,029
small code size optimize optimize

00:22:42,409 --> 00:22:46,159
optimize people come to us all the time

00:22:44,029 --> 00:22:48,919
saying how do I make my app faster as

00:22:46,159 --> 00:22:50,059
fast in ie6 as it is in Safari we

00:22:48,919 --> 00:22:51,559
chuckle we say what do you really want

00:22:50,059 --> 00:22:53,989
to do what's a reasonable amount of time

00:22:51,559 --> 00:22:55,970
we look at the code we find the bugs and

00:22:53,989 --> 00:22:58,549
we fix them but sometimes the most

00:22:55,970 --> 00:23:01,999
benign things can cause a second delay

00:22:58,549 --> 00:23:03,710
in ie6 or iu7 or even Firefox and so a

00:23:01,999 --> 00:23:05,809
lot you just have to use the tools look

00:23:03,710 --> 00:23:07,669
at the data find the bugs fix them but

00:23:05,809 --> 00:23:09,139
you know there are things you can do to

00:23:07,669 --> 00:23:11,690
structure your application to make it

00:23:09,139 --> 00:23:13,220
easier right so people often make a

00:23:11,690 --> 00:23:14,899
decision okay I'm gonna do a single page

00:23:13,220 --> 00:23:16,729
app because I want everything there and

00:23:14,899 --> 00:23:18,229
I want to pull stuff in and then the app

00:23:16,729 --> 00:23:19,879
becomes so large that it takes ten

00:23:18,229 --> 00:23:21,379
seconds for the page to load well it

00:23:19,879 --> 00:23:22,970
kind of defeats the purpose of giving

00:23:21,379 --> 00:23:24,229
people a fast experience by having it

00:23:22,970 --> 00:23:25,549
all there but making it take forever to

00:23:24,229 --> 00:23:27,590
load at that point you might as well

00:23:25,549 --> 00:23:29,389
split it up so what you can do is you

00:23:27,590 --> 00:23:31,099
can grab code pull it in as needed so

00:23:29,389 --> 00:23:32,779
say you've got an email client with a

00:23:31,099 --> 00:23:34,789
calendar and an address book and an IM

00:23:32,779 --> 00:23:37,009
client right so you might start by just

00:23:34,789 --> 00:23:38,239
having the mail client load and then

00:23:37,009 --> 00:23:39,590
when people click on calendar you grab

00:23:38,239 --> 00:23:41,119
the calendar code and shove it into the

00:23:39,590 --> 00:23:43,009
page and then when people click on the

00:23:41,119 --> 00:23:44,210
IM client you might load that and the

00:23:43,009 --> 00:23:46,999
reason for that is you can optimize

00:23:44,210 --> 00:23:48,919
based on use usage patterns so maybe 80%

00:23:46,999 --> 00:23:51,590
of your users use email 20% use the

00:23:48,919 --> 00:23:56,779
calendar 30% use the IM client so you

00:23:51,590 --> 00:23:58,220
can optimize based on on behavior of

00:23:56,779 --> 00:23:59,479
course you can optimize on on feature

00:23:58,220 --> 00:24:00,950
loading as well which is sort of I was

00:23:59,479 --> 00:24:03,019
just talking about but basically have

00:24:00,950 --> 00:24:04,970
like an initial loading step some

00:24:03,019 --> 00:24:06,590
prefetching of stuff you expect them to

00:24:04,970 --> 00:24:09,769
use after the applications already

00:24:06,590 --> 00:24:12,229
responsive logical caching of things so

00:24:09,769 --> 00:24:14,570
another approach you can take is here's

00:24:12,229 --> 00:24:16,429
my dojo code which is stable here's my

00:24:14,570 --> 00:24:18,590
digit code which is also stable but I

00:24:16,429 --> 00:24:20,629
may pull in other digits later here's my

00:24:18,590 --> 00:24:21,950
custom code that's stable and here's my

00:24:20,629 --> 00:24:24,080
custom code that's changing every day

00:24:21,950 --> 00:24:25,909
and so you might build those into four

00:24:24,080 --> 00:24:27,379
separate layers so the first three get

00:24:25,909 --> 00:24:29,710
cached more aggressively from the fourth

00:24:27,379 --> 00:24:31,940
one which you're changing every day

00:24:29,710 --> 00:24:34,070
larger sites are storing use statistical

00:24:31,940 --> 00:24:35,749
analysis it's basically each week they

00:24:34,070 --> 00:24:38,359
update their optimization strategy or

00:24:35,749 --> 00:24:39,950
even every day maybe based on how people

00:24:38,359 --> 00:24:41,210
are actually using the site

00:24:39,950 --> 00:24:43,130
so if you look at a large site like

00:24:41,210 --> 00:24:44,840
Facebook you'll notice it's constantly

00:24:43,130 --> 00:24:46,490
changing it's constantly getting faster

00:24:44,840 --> 00:24:48,470
and I guaranteed one of the ways they're

00:24:46,490 --> 00:24:49,669
doing that is they're looking at usage

00:24:48,470 --> 00:24:51,380
patterns for users

00:24:49,669 --> 00:24:53,450
well obviously usage for users right and

00:24:51,380 --> 00:24:56,149
I'm pulling in what's needed and what's

00:24:53,450 --> 00:24:58,580
not needed and then dynamically changing

00:24:56,149 --> 00:25:00,409
how that happens over time you might

00:24:58,580 --> 00:25:02,059
also think about how to like you know

00:25:00,409 --> 00:25:03,980
there's the classic Microsoft problem or

00:25:02,059 --> 00:25:05,240
I think they invented it but you know

00:25:03,980 --> 00:25:06,950
there's one of those interview questions

00:25:05,240 --> 00:25:09,409
problems you've got like something that

00:25:06,950 --> 00:25:11,299
takes one minute to get across the river

00:25:09,409 --> 00:25:12,620
two minutes five minutes and ten minutes

00:25:11,299 --> 00:25:14,149
and how do you get all four of those

00:25:12,620 --> 00:25:15,980
across if you've got one rowboat that

00:25:14,149 --> 00:25:17,690
can seat two people at a time and the

00:25:15,980 --> 00:25:20,210
key is to like put like things together

00:25:17,690 --> 00:25:22,010
right so if you think about it like you

00:25:20,210 --> 00:25:23,840
know delay your media get your initial

00:25:22,010 --> 00:25:26,120
Dom in place then go grab your media

00:25:23,840 --> 00:25:28,460
then go grab certain things think about

00:25:26,120 --> 00:25:29,929
how frequently things need to update and

00:25:28,460 --> 00:25:32,000
just sort of structure them in logical

00:25:29,929 --> 00:25:36,169
ways so what are some of the approaches

00:25:32,000 --> 00:25:37,789
we take well I keep talking about builds

00:25:36,169 --> 00:25:38,750
and compilation and and all that means

00:25:37,789 --> 00:25:40,370
is we're going to take a bunch of

00:25:38,750 --> 00:25:42,500
JavaScript files and shove them together

00:25:40,370 --> 00:25:44,380
to reduce the number of requests we're

00:25:42,500 --> 00:25:46,340
going to do it in a very logical way and

00:25:44,380 --> 00:25:48,080
when it does is that solves a lot of

00:25:46,340 --> 00:25:49,789
timing bugs because of course all your

00:25:48,080 --> 00:25:53,779
stuff is in one one file now and you're

00:25:49,789 --> 00:25:55,549
not doing stuff that's stupid oh one

00:25:53,779 --> 00:25:57,950
more point and of course moving stuff to

00:25:55,549 --> 00:25:59,419
CD ends right so pretty much any of the

00:25:57,950 --> 00:26:02,120
major JavaScript toolkits you can get

00:25:59,419 --> 00:26:03,649
off the Google API is page so if you

00:26:02,120 --> 00:26:06,230
just want to use dojo or parts of dojo

00:26:03,649 --> 00:26:07,940
you can just point to the Google API

00:26:06,230 --> 00:26:09,470
slink or actually there's an AOL one

00:26:07,940 --> 00:26:12,200
also and the nice thing is it's just

00:26:09,470 --> 00:26:13,880
cache so if you and you and you write an

00:26:12,200 --> 00:26:15,470
application and you all use the same

00:26:13,880 --> 00:26:16,730
dojo and your users go to all three

00:26:15,470 --> 00:26:18,409
applications don't have to reload it

00:26:16,730 --> 00:26:21,440
three times if their cache aim is so

00:26:18,409 --> 00:26:23,360
logically I talked about that already so

00:26:21,440 --> 00:26:25,039
I'll skip that one thing we're actually

00:26:23,360 --> 00:26:26,570
working on is so I've been talking a lot

00:26:25,039 --> 00:26:27,710
about builds and you know having to do

00:26:26,570 --> 00:26:28,909
this in advance and that's kind of

00:26:27,710 --> 00:26:30,230
annoying because it kind of defeats the

00:26:28,909 --> 00:26:32,059
purpose of just being able to write and

00:26:30,230 --> 00:26:36,529
go you know we'd love it if the web was

00:26:32,059 --> 00:26:39,350
just smart enough to handle this so some

00:26:36,529 --> 00:26:40,639
of our clients and I when I say clients

00:26:39,350 --> 00:26:42,529
I mean site pen when I'm talking about

00:26:40,639 --> 00:26:43,549
the toolkit I mean dojo so I'm not doing

00:26:42,529 --> 00:26:46,639
a good job of switching hats but

00:26:43,549 --> 00:26:48,409
whatever some of our clients have

00:26:46,639 --> 00:26:50,269
thousands of different configurations

00:26:48,409 --> 00:26:51,889
because each client might pay for

00:26:50,269 --> 00:26:53,430
different features in the software and

00:26:51,889 --> 00:26:55,590
imagine trying to test

00:26:53,430 --> 00:26:56,880
and optimize and make sure thousands of

00:26:55,590 --> 00:26:59,190
different configurations were working at

00:26:56,880 --> 00:27:00,810
once so it's gotten to a point where we

00:26:59,190 --> 00:27:03,540
need basically a dynamic build system so

00:27:00,810 --> 00:27:05,220
basically you just define a URL that you

00:27:03,540 --> 00:27:07,290
call it's the list of the modules you

00:27:05,220 --> 00:27:08,670
need and the server will that it'll

00:27:07,290 --> 00:27:10,620
build it on the fly if it's already

00:27:08,670 --> 00:27:12,930
built it's just it just grabs the cached

00:27:10,620 --> 00:27:14,520
version and if it's not then it builds

00:27:12,930 --> 00:27:16,530
it and it needs to be like sub-second to

00:27:14,520 --> 00:27:18,690
do that and we have a working version of

00:27:16,530 --> 00:27:20,610
that that we are probably going to

00:27:18,690 --> 00:27:23,280
open-source next month or so we're

00:27:20,610 --> 00:27:25,310
working on modules for Apache a Python

00:27:23,280 --> 00:27:30,450
module for Google App Engine and

00:27:25,310 --> 00:27:34,290
something for persevere as well you know

00:27:30,450 --> 00:27:35,760
thinking about sync versus async I have

00:27:34,290 --> 00:27:37,620
this weird theory that everything is

00:27:35,760 --> 00:27:39,420
both sync and async depending on the

00:27:37,620 --> 00:27:40,650
time scale you look at so if you look on

00:27:39,420 --> 00:27:41,910
a small enough time skill something

00:27:40,650 --> 00:27:44,040
synchronous we've got a large enough

00:27:41,910 --> 00:27:45,450
time scale it's asynchronous but when

00:27:44,040 --> 00:27:46,890
you're writing your application code you

00:27:45,450 --> 00:27:49,560
should be thinking of everything as

00:27:46,890 --> 00:27:52,170
asynchronous so that you can always not

00:27:49,560 --> 00:27:53,940
block based on that behavior there's a

00:27:52,170 --> 00:27:55,620
lot of different ways to optimize based

00:27:53,940 --> 00:27:57,860
on that I'm a little short on time so

00:27:55,620 --> 00:28:01,110
I'm gonna keep going

00:27:57,860 --> 00:28:03,170
sorry there are Steve Souders wrote a

00:28:01,110 --> 00:28:04,830
couple of excellent books

00:28:03,170 --> 00:28:07,410
high-performance websites and even

00:28:04,830 --> 00:28:08,940
faster websites they're very good but

00:28:07,410 --> 00:28:11,160
there's basically multiple ways to

00:28:08,940 --> 00:28:13,950
include your script in a page and they

00:28:11,160 --> 00:28:15,180
all have different trade-offs and some

00:28:13,950 --> 00:28:18,270
of them work in different browsers in

00:28:15,180 --> 00:28:19,830
different ways and he has a decision

00:28:18,270 --> 00:28:25,020
tree based on what you're trying to do

00:28:19,830 --> 00:28:26,880
on which technique to use yeah I don't

00:28:25,020 --> 00:28:29,310
need to go into that but you know one of

00:28:26,880 --> 00:28:31,470
the reasons ajax became popular was oh

00:28:29,310 --> 00:28:32,910
my god there's this concept that you

00:28:31,470 --> 00:28:35,130
don't have to reload the page every time

00:28:32,910 --> 00:28:36,300
the user does something right and of

00:28:35,130 --> 00:28:38,070
course we had known that from the days

00:28:36,300 --> 00:28:39,750
of javascript and we had done user

00:28:38,070 --> 00:28:41,610
behavior but we hadn't really said or

00:28:39,750 --> 00:28:43,650
eken load new data or I can load new

00:28:41,610 --> 00:28:45,620
components or I can do forum posts in

00:28:43,650 --> 00:28:48,450
the background and get stuff back and

00:28:45,620 --> 00:28:50,640
that's what Ajax and what comment are

00:28:48,450 --> 00:28:53,460
for is to optimize that user experience

00:28:50,640 --> 00:28:57,390
I went to a talk about JSF does anyone

00:28:53,460 --> 00:28:59,130
here like JSF no good I don't either

00:28:57,390 --> 00:29:02,130
not that people don't use it with dojo

00:28:59,130 --> 00:29:03,630
and enjoy it but it's not my cup of tea

00:29:02,130 --> 00:29:06,300
or whatever Forte or whatever you wanna

00:29:03,630 --> 00:29:07,230
say the point is I went to a talk in

00:29:06,300 --> 00:29:09,480
00:29:07,230 --> 00:29:11,419
from Craig McClanahan and we said he was

00:29:09,480 --> 00:29:14,790
giving us great presentation with the

00:29:11,419 --> 00:29:17,429
you know the typical Amazon store demo

00:29:14,790 --> 00:29:19,410
with JSF it was really awesome and we

00:29:17,429 --> 00:29:22,470
asked to really dickish questions like

00:29:19,410 --> 00:29:24,360
one doesn't scale and two what if you

00:29:22,470 --> 00:29:26,100
just want to reload part of the page you

00:29:24,360 --> 00:29:27,480
know the answer for scaling was well

00:29:26,100 --> 00:29:29,220
it's against the hundreds of users and

00:29:27,480 --> 00:29:30,510
you know everyone laughed because he's

00:29:29,220 --> 00:29:31,980
throwing Amazon right it's got millions

00:29:30,510 --> 00:29:34,770
of users and then the other thing was

00:29:31,980 --> 00:29:37,290
you know can you just reload part of the

00:29:34,770 --> 00:29:39,210
page and he said that's an area that's

00:29:37,290 --> 00:29:40,470
right for innovation so we knew we were

00:29:39,210 --> 00:29:42,270
on the right track because he didn't

00:29:40,470 --> 00:29:43,919
have an answer for of course JSF the

00:29:42,270 --> 00:29:46,200
latest version does have an answer for

00:29:43,919 --> 00:29:47,460
it but at the time it was like wow the

00:29:46,200 --> 00:29:48,480
world's thinking about these

00:29:47,460 --> 00:29:50,100
technologies and they're not thinking

00:29:48,480 --> 00:29:51,660
about how to just improve the user

00:29:50,100 --> 00:29:54,120
experience and make things faster in the

00:29:51,660 --> 00:29:55,710
background a comet is interesting it's

00:29:54,120 --> 00:29:58,320
been around in some form since the late

00:29:55,710 --> 00:30:00,690
90s and the idea is is it's a collection

00:29:58,320 --> 00:30:02,280
of techniques and protocols to allow you

00:30:00,690 --> 00:30:04,590
to push data directly from the server to

00:30:02,280 --> 00:30:06,210
the browser or give that type of

00:30:04,590 --> 00:30:08,940
responsiveness in the form of long

00:30:06,210 --> 00:30:14,250
polling or faster than just normal Ajax

00:30:08,940 --> 00:30:15,900
requests obviously I'm big on code size

00:30:14,250 --> 00:30:17,010
or maintainability there's a lot of

00:30:15,900 --> 00:30:18,570
different approaches you can take

00:30:17,010 --> 00:30:21,299
obviously we've talked about building

00:30:18,570 --> 00:30:22,230
optimizing crunching patterns I don't

00:30:21,299 --> 00:30:23,400
know why I said let's see the talk on

00:30:22,230 --> 00:30:26,460
Friday morning because I forgot to

00:30:23,400 --> 00:30:29,690
update this slide yeah I have a talk

00:30:26,460 --> 00:30:32,070
online that actually with Aaron Newton

00:30:29,690 --> 00:30:33,900
comparing dojo and mootools for patterns

00:30:32,070 --> 00:30:36,059
and I think it's on Aaron's site you can

00:30:33,900 --> 00:30:38,970
find it if not email me or Twitter tweet

00:30:36,059 --> 00:30:41,130
me or Facebook me or whatever we're big

00:30:38,970 --> 00:30:43,650
in the kernel patterns we're big into

00:30:41,130 --> 00:30:46,410
restful approaches and but we also offer

00:30:43,650 --> 00:30:47,820
RPC style approaches as well dojo has a

00:30:46,410 --> 00:30:49,290
thing called dojo dot ready basically

00:30:47,820 --> 00:30:51,390
the idea is if you're going to do

00:30:49,290 --> 00:30:54,179
anything that requires the Dom wrap it

00:30:51,390 --> 00:30:55,320
in a dojo ready block before instead of

00:30:54,179 --> 00:30:56,850
just putting it straight in your source

00:30:55,320 --> 00:30:58,080
code and that way it doesn't get called

00:30:56,850 --> 00:31:01,169
until the Dom is ready in the browser

00:30:58,080 --> 00:31:02,610
you can actually also recursively nest

00:31:01,169 --> 00:31:04,470
dojo dot ready calls

00:31:02,610 --> 00:31:06,120
so basically when the top-level stuff is

00:31:04,470 --> 00:31:08,370
done the next level down will get called

00:31:06,120 --> 00:31:10,380
and subsequently so it's a nice way to

00:31:08,370 --> 00:31:14,179
require different layers on the flyer or

00:31:10,380 --> 00:31:14,179
pull other code in as needed

00:31:14,540 --> 00:31:17,790
anytime you're building a big

00:31:16,230 --> 00:31:19,409
application especially a single page

00:31:17,790 --> 00:31:20,830
application you probably want to use a

00:31:19,409 --> 00:31:22,029
kernel style pattern I mean

00:31:20,830 --> 00:31:25,929
people might call it something else but

00:31:22,029 --> 00:31:27,760
the idea is that you want to have a lot

00:31:25,929 --> 00:31:30,730
of configuration options perhaps maybe

00:31:27,760 --> 00:31:32,019
based on a user load their settings load

00:31:30,730 --> 00:31:34,120
which modules you're going to show in a

00:31:32,019 --> 00:31:36,190
page maybe their preferences for how the

00:31:34,120 --> 00:31:39,750
application is laid out that sort of

00:31:36,190 --> 00:31:41,679
thing you shove it all into a kernel and

00:31:39,750 --> 00:31:45,730
it's generally just a simple little

00:31:41,679 --> 00:31:48,130
pattern you know basically before the

00:31:45,730 --> 00:31:50,649
page is loaded do some stuff which we

00:31:48,130 --> 00:31:52,179
call pre parse and then parse the page

00:31:50,649 --> 00:31:55,000
am i parsing the page what we mean is

00:31:52,179 --> 00:31:57,610
with just normal HTML you can define

00:31:55,000 --> 00:31:58,720
widgets or digits in your page just

00:31:57,610 --> 00:32:00,010
through markup with some custom

00:31:58,720 --> 00:32:01,480
attributes which works in every browser

00:32:00,010 --> 00:32:03,250
but it breaks the validator but I don't

00:32:01,480 --> 00:32:04,000
care and we can debate that some other

00:32:03,250 --> 00:32:05,440
time

00:32:04,000 --> 00:32:07,149
because I'm talking I'm just kidding

00:32:05,440 --> 00:32:08,919
obviously

00:32:07,149 --> 00:32:11,260
but then basically parsed the page and

00:32:08,919 --> 00:32:12,880
convert normal HTML notes upgrade them

00:32:11,260 --> 00:32:13,750
to digits and then do something with

00:32:12,880 --> 00:32:15,549
them afterwards

00:32:13,750 --> 00:32:19,149
and that's that's the simple part of the

00:32:15,549 --> 00:32:21,130
pattern and so you just connect the

00:32:19,149 --> 00:32:23,200
kernel to a pre parse call and then do

00:32:21,130 --> 00:32:25,120
something with it and then you just load

00:32:23,200 --> 00:32:27,210
in like for example here's a kernel and

00:32:25,120 --> 00:32:29,860
it's got a user ID and some features and

00:32:27,210 --> 00:32:31,450
foo variable set to bar this is a nice

00:32:29,860 --> 00:32:33,370
simple pattern a lot of people probably

00:32:31,450 --> 00:32:38,169
use it without really realizing it but

00:32:33,370 --> 00:32:39,880
we use it in a pretty extreme way it is

00:32:38,169 --> 00:32:41,380
a nice place to shove stuff some people

00:32:39,880 --> 00:32:43,240
might say it's really bad to just shove

00:32:41,380 --> 00:32:45,190
everything into a kernel I would say

00:32:43,240 --> 00:32:46,389
it's better than shoving everything into

00:32:45,190 --> 00:32:47,679
the global namespace because you'll

00:32:46,389 --> 00:32:49,269
forget and then you'll want to mash up

00:32:47,679 --> 00:32:50,799
with something else and then you'll have

00:32:49,269 --> 00:32:51,399
script errors and kind of forget why

00:32:50,799 --> 00:32:53,260
they're there

00:32:51,399 --> 00:32:54,340
or other people and your company will

00:32:53,260 --> 00:32:56,470
work on other parts of the application

00:32:54,340 --> 00:33:00,490
use the same global init variable and

00:32:56,470 --> 00:33:01,980
and you'll hate each other for life rest

00:33:00,490 --> 00:33:04,090
how many of you are familiar with rest

00:33:01,980 --> 00:33:06,039
ok everyone I don't need to go into that

00:33:04,090 --> 00:33:09,039
but you get the idea it's just your

00:33:06,039 --> 00:33:11,919
standard methods the cool thing is if

00:33:09,039 --> 00:33:13,809
you take rest and you take JSON and you

00:33:11,919 --> 00:33:15,220
take a few other services you can

00:33:13,809 --> 00:33:16,570
basically think of the entire Internet

00:33:15,220 --> 00:33:20,440
as a database that you can use in your

00:33:16,570 --> 00:33:23,980
application so this is a hideous slide

00:33:20,440 --> 00:33:25,960
on purpose this is the common

00:33:23,980 --> 00:33:27,370
architecture or set of architectures you

00:33:25,960 --> 00:33:29,260
could use to build a dojo application

00:33:27,370 --> 00:33:30,880
and the cool thing is all you're really

00:33:29,260 --> 00:33:33,700
writing is a little bit of code and the

00:33:30,880 --> 00:33:34,610
orange in the left top left and a data

00:33:33,700 --> 00:33:36,559
API 2x

00:33:34,610 --> 00:33:39,080
your code and Stan shading some widgets

00:33:36,559 --> 00:33:41,990
and then basically you can use our

00:33:39,080 --> 00:33:43,730
concept of data stores and your own data

00:33:41,990 --> 00:33:46,220
services based on whichever approach you

00:33:43,730 --> 00:33:48,740
want to take load them over our

00:33:46,220 --> 00:33:50,660
transport to your server-side code if

00:33:48,740 --> 00:33:53,030
you want you can try and sandbox them in

00:33:50,660 --> 00:33:53,780
a way that'll work in a portal but the

00:33:53,030 --> 00:33:55,549
cool thing is you're just worried about

00:33:53,780 --> 00:33:56,299
that little part up there and then you

00:33:55,549 --> 00:33:57,650
know whoever's working on the

00:33:56,299 --> 00:34:00,440
server-side is worried about that little

00:33:57,650 --> 00:34:02,809
part down here and suddenly you can

00:34:00,440 --> 00:34:04,250
basically access data of any kind of any

00:34:02,809 --> 00:34:05,900
form and put it into any style user

00:34:04,250 --> 00:34:11,929
interface you want with with not much

00:34:05,900 --> 00:34:13,190
effort which is cool so you know restful

00:34:11,929 --> 00:34:14,750
architectures you know recommend

00:34:13,190 --> 00:34:17,320
separate in the UI and the data so of

00:34:14,750 --> 00:34:20,990
course what we're saying here is in this

00:34:17,320 --> 00:34:22,760
architecture is that the UI is concerned

00:34:20,990 --> 00:34:23,899
about the UI and now some people have

00:34:22,760 --> 00:34:25,280
taken the opposite approach saying the

00:34:23,899 --> 00:34:28,690
server should still care about the UI

00:34:25,280 --> 00:34:31,340
and reverse that relationship we don't

00:34:28,690 --> 00:34:32,720
so how do you do that there's a lot of

00:34:31,340 --> 00:34:35,720
options on the client side you can use

00:34:32,720 --> 00:34:37,580
dojo or perservere or other toolkits if

00:34:35,720 --> 00:34:39,230
they have an extension for data or

00:34:37,580 --> 00:34:41,210
restful architectures and the server

00:34:39,230 --> 00:34:43,639
side you can use spring or persevere

00:34:41,210 --> 00:34:46,010
coach to be or one of the common J's

00:34:43,639 --> 00:34:49,369
compliant servers or you can use a poor

00:34:46,010 --> 00:34:50,780
a number of other things persevere is

00:34:49,369 --> 00:34:52,159
another dojo Foundation project I'll

00:34:50,780 --> 00:34:54,649
focus on that since you're going to talk

00:34:52,159 --> 00:34:58,640
a little bit about eight and basically

00:34:54,649 --> 00:35:01,190
the idea is anything you can imagine

00:34:58,640 --> 00:35:03,670
doing in XML or with databases you can

00:35:01,190 --> 00:35:06,500
do in JSON whether it's grabbing data

00:35:03,670 --> 00:35:09,680
passing it querying it referencing it

00:35:06,500 --> 00:35:14,690
writing schemas or hyper schemas so it's

00:35:09,680 --> 00:35:16,310
very cool you can take JSON and start to

00:35:14,690 --> 00:35:18,380
manage like cyclical relationships

00:35:16,310 --> 00:35:20,690
multiple references cross-site

00:35:18,380 --> 00:35:22,310
references you can say in my structure

00:35:20,690 --> 00:35:24,230
of data this particular object actually

00:35:22,310 --> 00:35:26,810
points to the search results for this

00:35:24,230 --> 00:35:29,020
tag from Google which is which is kind

00:35:26,810 --> 00:35:29,020
of cool

00:35:29,060 --> 00:35:35,570
data backed objects right so the idea of

00:35:32,210 --> 00:35:38,000
dojo data is that basically you've got

00:35:35,570 --> 00:35:40,880
any data source and you've got widgets

00:35:38,000 --> 00:35:43,310
that all want to speak to just one API

00:35:40,880 --> 00:35:45,590
set so basically you have just a very

00:35:43,310 --> 00:35:47,359
simple API in the client side it goes

00:35:45,590 --> 00:35:48,160
through a small translation layer which

00:35:47,359 --> 00:35:50,140
is basically called

00:35:48,160 --> 00:35:53,230
data store implementation over some

00:35:50,140 --> 00:35:55,420
protocol to your data source and you can

00:35:53,230 --> 00:35:57,339
use it very nicely so the cool thing is

00:35:55,420 --> 00:35:59,890
say you've got one data source right and

00:35:57,339 --> 00:36:02,109
say it represents stock quotes ok so you

00:35:59,890 --> 00:36:03,760
could have in your page a grid in a

00:36:02,109 --> 00:36:05,559
chart right and the grid in the chart

00:36:03,760 --> 00:36:07,539
could talk to the same live data source

00:36:05,559 --> 00:36:08,980
so then you've got a chart of all the

00:36:07,539 --> 00:36:10,839
stock quotes and it's changing numbers

00:36:08,980 --> 00:36:12,280
and then you've got a set of charts that

00:36:10,839 --> 00:36:13,839
you know are going like this now the

00:36:12,280 --> 00:36:14,950
reality is financial markets don't move

00:36:13,839 --> 00:36:16,869
that quickly but it would be cool if

00:36:14,950 --> 00:36:21,599
they did and it makes a cool demo when

00:36:16,869 --> 00:36:24,190
you create fake data that does that so

00:36:21,599 --> 00:36:25,780
data can become available in almost any

00:36:24,190 --> 00:36:27,280
form right so the idea is that dojos

00:36:25,780 --> 00:36:29,020
built a whole number of ways whether you

00:36:27,280 --> 00:36:31,660
just have data shoved into your HTML

00:36:29,020 --> 00:36:34,000
page a CSV file JSON formatted XML

00:36:31,660 --> 00:36:36,250
formatted people have soap extensions I

00:36:34,000 --> 00:36:37,420
don't like so but in browser but some

00:36:36,250 --> 00:36:39,220
people have a real need for especially

00:36:37,420 --> 00:36:40,319
if they're doing like a desktop style

00:36:39,220 --> 00:36:42,579
application in the browser

00:36:40,319 --> 00:36:44,289
you know dynamic sources right you've

00:36:42,579 --> 00:36:46,089
got program on the server running and

00:36:44,289 --> 00:36:48,069
generating dynamic data for you on the

00:36:46,089 --> 00:36:50,890
fly that sort of thing Flickr Google

00:36:48,069 --> 00:36:52,510
Picasa Facebook you know any other data

00:36:50,890 --> 00:36:54,520
source you can imagine wanting to pull

00:36:52,510 --> 00:36:58,000
into your application doing it easily

00:36:54,520 --> 00:37:01,029
and simply sort of said that let's skip

00:36:58,000 --> 00:37:02,619
it dojo has something like 60 or 70

00:37:01,029 --> 00:37:04,150
existing data stores and there's a lot

00:37:02,619 --> 00:37:06,099
more out there they're very easy to

00:37:04,150 --> 00:37:08,230
write and we're actually working on an

00:37:06,099 --> 00:37:11,740
even simpler one for dojo 1.5 called

00:37:08,230 --> 00:37:13,539
just an object store but again the idea

00:37:11,740 --> 00:37:15,640
is that you've got basically for simple

00:37:13,539 --> 00:37:17,589
things read notification identify and

00:37:15,640 --> 00:37:19,329
write we're actually thinking maybe we

00:37:17,589 --> 00:37:22,210
should just change it to get put in post

00:37:19,329 --> 00:37:25,720
but we'll see the idea is you've got all

00:37:22,210 --> 00:37:28,240
your widgets you've got a simple API and

00:37:25,720 --> 00:37:31,059
then you've got your stores which tell

00:37:28,240 --> 00:37:33,940
the api's how to grab that data update

00:37:31,059 --> 00:37:38,140
it cache it how to edit it update it

00:37:33,940 --> 00:37:41,020
readwrite Internet cetera there's a lot

00:37:38,140 --> 00:37:43,329
more so you know if you want to have

00:37:41,020 --> 00:37:45,970
code that your data follows a particular

00:37:43,329 --> 00:37:48,599
schema I can get JSON schema if you want

00:37:45,970 --> 00:37:52,240
to do full did I turn my cell phone

00:37:48,599 --> 00:37:54,849
volume okay okay if you want to do an

00:37:52,240 --> 00:37:57,940
RPC style approach so one application we

00:37:54,849 --> 00:37:59,529
had had like a Meg of basically get and

00:37:57,940 --> 00:38:02,580
set methods of various properties

00:37:59,529 --> 00:38:05,590
basically imagine trying to

00:38:02,580 --> 00:38:07,330
work with ad network API so you know to

00:38:05,590 --> 00:38:09,580
set like quotes and bids and pricing and

00:38:07,330 --> 00:38:12,040
all of that well we took that and we

00:38:09,580 --> 00:38:13,750
changed it to just JSON RPC style

00:38:12,040 --> 00:38:15,190
approach well we just sent a file

00:38:13,750 --> 00:38:16,870
listing the methods and properties and

00:38:15,190 --> 00:38:19,120
parameters that were available and we

00:38:16,870 --> 00:38:21,790
dropped a mega of code down to like 100

00:38:19,120 --> 00:38:23,410
K or 50k or something really small they

00:38:21,790 --> 00:38:25,990
D is that you can generate all of those

00:38:23,410 --> 00:38:29,920
get and set methods on the fly what when

00:38:25,990 --> 00:38:31,840
you need them only commonjs has become

00:38:29,920 --> 00:38:33,280
very important for dojo and persevere

00:38:31,840 --> 00:38:35,530
and other projects and we're working on

00:38:33,280 --> 00:38:37,720
that as well there's a project called

00:38:35,530 --> 00:38:39,130
requirejs that would sort of work with

00:38:37,720 --> 00:38:41,590
their module system that would work with

00:38:39,130 --> 00:38:43,030
dojo as well we're seeing javascript

00:38:41,590 --> 00:38:44,680
emerges a true server-side programming

00:38:43,030 --> 00:38:46,750
language so you can use JavaScript

00:38:44,680 --> 00:38:48,490
anywhere which is really awesome I mean

00:38:46,750 --> 00:38:50,290
it's either completely scary or

00:38:48,490 --> 00:38:52,320
completely awesome I obviously think

00:38:50,290 --> 00:38:54,700
it's awesome because I like scary stuff

00:38:52,320 --> 00:38:55,840
but you know imagine writing JavaScript

00:38:54,700 --> 00:38:56,650
on the server on the client on your

00:38:55,840 --> 00:38:58,960
mobile device

00:38:56,650 --> 00:39:00,760
everywhere and what you might say well

00:38:58,960 --> 00:39:03,130
why not Python or why not Perl or why

00:39:00,760 --> 00:39:05,530
not Ruby what's what's happened is

00:39:03,130 --> 00:39:07,360
JavaScript is so well tested for

00:39:05,530 --> 00:39:08,920
manipulating the Dom and browsers that

00:39:07,360 --> 00:39:10,630
re implementing that in another language

00:39:08,920 --> 00:39:13,120
is just not worth the investment for

00:39:10,630 --> 00:39:14,740
most browser vendors and the server-side

00:39:13,120 --> 00:39:16,600
implementations are actually becoming so

00:39:14,740 --> 00:39:18,640
fast they're faster than the Python

00:39:16,600 --> 00:39:20,320
implementations in most cases so it's

00:39:18,640 --> 00:39:22,150
pretty amazing that javascript has

00:39:20,320 --> 00:39:24,190
become this from this completely

00:39:22,150 --> 00:39:25,870
bastardized unknown language to the

00:39:24,190 --> 00:39:29,800
world's leading most popular programming

00:39:25,870 --> 00:39:32,320
language in just a decade quickly people

00:39:29,800 --> 00:39:34,990
ask who uses dojo a lot of people use

00:39:32,320 --> 00:39:35,850
dojo and the public way more people use

00:39:34,990 --> 00:39:38,410
it in private

00:39:35,850 --> 00:39:40,600
so Joe Joe is often used for internet

00:39:38,410 --> 00:39:44,200
applications software people by air

00:39:40,600 --> 00:39:46,330
applications etc obviously the Chandler

00:39:44,200 --> 00:39:51,130
project when it finally realized to use

00:39:46,330 --> 00:39:52,840
dojo for the web UI dctp is a German TV

00:39:51,130 --> 00:39:55,390
channel that does live video and uses

00:39:52,840 --> 00:39:57,880
dojo for the interface ESRI is the

00:39:55,390 --> 00:39:59,860
world's leading map technology provider

00:39:57,880 --> 00:40:01,720
pretty much if you've ever used mapping

00:39:59,860 --> 00:40:04,060
software ESRI somewhere in that stack

00:40:01,720 --> 00:40:05,530
and they use dojo for their Ajax api's

00:40:04,060 --> 00:40:07,480
and they have cool things like not just

00:40:05,530 --> 00:40:09,250
Maps but also demographic information so

00:40:07,480 --> 00:40:10,930
you can like pull in and say okay in

00:40:09,250 --> 00:40:13,180
this location how many French

00:40:10,930 --> 00:40:14,320
restaurants are in this two kilometer

00:40:13,180 --> 00:40:15,850
radius

00:40:14,320 --> 00:40:17,740
and it might help you decide where to

00:40:15,850 --> 00:40:19,390
open your french restaurant or you know

00:40:17,740 --> 00:40:21,580
is this a good place to go to eat that

00:40:19,390 --> 00:40:24,940
sort of thing so it but all using dojo

00:40:21,580 --> 00:40:26,050
widgets and and data Wi-Fi I don't know

00:40:24,940 --> 00:40:27,250
if it's available worldwide but it's

00:40:26,050 --> 00:40:30,520
available in UK in the u.s. at least

00:40:27,250 --> 00:40:32,470
it's basically a SDRAM card with a

00:40:30,520 --> 00:40:34,810
little Wi-Fi chip built into it so

00:40:32,470 --> 00:40:36,160
basically once you configure it you can

00:40:34,810 --> 00:40:37,900
basically take pictures and once you're

00:40:36,160 --> 00:40:38,980
in proximity of any Wi-Fi network that

00:40:37,900 --> 00:40:40,900
you've configured it for the photos

00:40:38,980 --> 00:40:42,820
upload automatically to your computer or

00:40:40,900 --> 00:40:45,100
Facebook or Flickr or whatever network

00:40:42,820 --> 00:40:46,390
services you've set up and they use dojo

00:40:45,100 --> 00:40:49,530
for the configuration and installation

00:40:46,390 --> 00:40:54,250
which would wizard which is really cool

00:40:49,530 --> 00:40:56,500
fidelity is a very large broker stock

00:40:54,250 --> 00:40:58,330
broker I'm especially in the US and they

00:40:56,500 --> 00:41:00,310
pride themselves on being the leader in

00:40:58,330 --> 00:41:03,250
technology in that space and basically

00:41:00,310 --> 00:41:05,350
they have dojo down to like a 6 K

00:41:03,250 --> 00:41:07,120
initial load that way they show up is

00:41:05,350 --> 00:41:09,160
still the fastest website for building

00:41:07,120 --> 00:41:11,170
applications or you know for delivering

00:41:09,160 --> 00:41:12,580
stock quote data and then they highly

00:41:11,170 --> 00:41:14,100
optimized it based on exactly the

00:41:12,580 --> 00:41:16,930
modules they need a certain time

00:41:14,100 --> 00:41:18,430
lufthansa is a cool airline obviously

00:41:16,930 --> 00:41:19,990
you have flaps block in place so they

00:41:18,430 --> 00:41:22,960
didn't they messed up there with these

00:41:19,990 --> 00:41:24,370
dojo on their site which I like Plaxo

00:41:22,960 --> 00:41:26,740
pulse you know a lot of people don't use

00:41:24,370 --> 00:41:28,390
this but I kind of like it it's kind of

00:41:26,740 --> 00:41:29,440
like an early version of FriendFeed you

00:41:28,390 --> 00:41:32,170
know it just pulls in data from

00:41:29,440 --> 00:41:33,370
different places uses dojo cued if

00:41:32,170 --> 00:41:35,890
you're in America we have a service

00:41:33,370 --> 00:41:37,720
called Netflix Netflix is really awesome

00:41:35,890 --> 00:41:39,700
basically you get movies on demand or

00:41:37,720 --> 00:41:43,120
you get dvd's sent to you but their web

00:41:39,700 --> 00:41:45,100
interface for choosing the order you

00:41:43,120 --> 00:41:46,600
receive movies is really poor so there's

00:41:45,100 --> 00:41:48,100
application called queued helps you

00:41:46,600 --> 00:41:49,690
redefine the order of your queue really

00:41:48,100 --> 00:41:51,940
quickly and it's really nice but it's an

00:41:49,690 --> 00:41:53,770
air application which is really nice so

00:41:51,940 --> 00:41:55,000
it's a download so you get an icon and

00:41:53,770 --> 00:41:56,980
so you can actually get the best of both

00:41:55,000 --> 00:41:59,500
worlds in that case by using your web

00:41:56,980 --> 00:42:01,780
technology development experience using

00:41:59,500 --> 00:42:03,580
Safari I'm sorry WebKit as the rendering

00:42:01,780 --> 00:42:04,930
environment shove it all into a narrow

00:42:03,580 --> 00:42:06,850
application and people can download it

00:42:04,930 --> 00:42:08,200
and thousands of people use this and we

00:42:06,850 --> 00:42:12,550
don't actually put much into it so it's

00:42:08,200 --> 00:42:13,990
pretty cool sign Oracle has a product

00:42:12,550 --> 00:42:15,340
called convergence basically it's their

00:42:13,990 --> 00:42:16,990
email application obviously we have

00:42:15,340 --> 00:42:17,860
probably built like half a dozen email

00:42:16,990 --> 00:42:21,280
applications for different companies

00:42:17,860 --> 00:42:22,750
this one just uses a lot of stuff and

00:42:21,280 --> 00:42:24,460
before this it was like a web app

00:42:22,750 --> 00:42:26,650
Latorre this a download for that and a

00:42:24,460 --> 00:42:30,220
web 1.0 version for this we helped

00:42:26,650 --> 00:42:32,289
do that openness dojo is a true hundred

00:42:30,220 --> 00:42:36,190
point open-source project as I believe

00:42:32,289 --> 00:42:37,630
me tools is as well but I would have to

00:42:36,190 --> 00:42:39,460
verify that I don't know but basically

00:42:37,630 --> 00:42:40,869
that's the definition dnl mayor of a

00:42:39,460 --> 00:42:42,609
Jackson came up with which is basically

00:42:40,869 --> 00:42:44,680
like not only is it open but it's an

00:42:42,609 --> 00:42:46,420
open for me to use can I be involved as

00:42:44,680 --> 00:42:48,339
a contributor or just one company on the

00:42:46,420 --> 00:42:49,480
rights to who can contribute that sort

00:42:48,339 --> 00:42:52,809
of thing

00:42:49,480 --> 00:42:54,819
lots of people use dojo obviously we're

00:42:52,809 --> 00:42:55,809
always looking for help people may have

00:42:54,819 --> 00:42:58,299
this perception that we're this big

00:42:55,809 --> 00:42:59,559
corporate entity no we just have a few

00:42:58,299 --> 00:43:01,390
large companies that contribute

00:42:59,559 --> 00:43:03,430
developers as well so we're always

00:43:01,390 --> 00:43:07,180
looking for help in almost any way shape

00:43:03,430 --> 00:43:09,309
or form the future of dojo I've talked

00:43:07,180 --> 00:43:10,480
about a little bit but basically lots of

00:43:09,309 --> 00:43:13,630
edge web development

00:43:10,480 --> 00:43:15,220
lots of enhancements more work on map

00:43:13,630 --> 00:43:17,109
and performance performance performance

00:43:15,220 --> 00:43:20,259
performance performance easier to use

00:43:17,109 --> 00:43:21,789
API is etc obligatory plug for site pain

00:43:20,259 --> 00:43:23,259
we build web apps if you ever need help

00:43:21,789 --> 00:43:26,319
with dojo or your web app in general you

00:43:23,259 --> 00:43:28,480
can call us there's an online dojo

00:43:26,319 --> 00:43:30,819
conference next week you can sign up for

00:43:28,480 --> 00:43:33,640
it's not free but a lot of the proceeds

00:43:30,819 --> 00:43:36,489
go to dojo itself here's some

00:43:33,640 --> 00:43:38,109
interesting and useful links obviously

00:43:36,489 --> 00:43:39,489
there's a lot of Twitter stuff at the

00:43:38,109 --> 00:43:41,680
bottom because people use that now and

00:43:39,489 --> 00:43:45,339
of course there's this email thing that

00:43:41,680 --> 00:43:46,869
I still used to so thanks and I I have a

00:43:45,339 --> 00:43:48,069
question and answer policy which is you

00:43:46,869 --> 00:43:50,430
gets one sentence to answer your

00:43:48,069 --> 00:43:59,079
question and I answer it in one sentence

00:43:50,430 --> 00:44:01,690
so I am ready for questions yes what

00:43:59,079 --> 00:44:03,640
about offline so currently for offline

00:44:01,690 --> 00:44:04,180
capabilities we support gears which may

00:44:03,640 --> 00:44:08,049
be dying

00:44:04,180 --> 00:44:12,099
we support the html5 model which isn't

00:44:08,049 --> 00:44:13,720
quite there but it's close and that's

00:44:12,099 --> 00:44:14,829
that's our approach basically we support

00:44:13,720 --> 00:44:17,049
whatever the browser can give us people

00:44:14,829 --> 00:44:19,509
can and do build offline applications

00:44:17,049 --> 00:44:20,980
with dojo so dojo actually that's way

00:44:19,509 --> 00:44:22,779
more than one sentence I'll shut up

00:44:20,980 --> 00:44:25,920
unless there's another question I forgot

00:44:22,779 --> 00:44:31,359
my own rule all right who's next

00:44:25,920 --> 00:44:33,369
yes is there a steep learning curve no

00:44:31,359 --> 00:44:35,499
it's it is steeper than something that's

00:44:33,369 --> 00:44:37,920
smaller so dojo is a comprehensive

00:44:35,499 --> 00:44:37,920
toolkit

00:44:38,940 --> 00:44:48,299
one sentence can ask anything and I'll

00:44:43,900 --> 00:44:51,970
give any sort of answer I feel like yes

00:44:48,299 --> 00:44:54,460
when do we drop ie6 support preferably

00:44:51,970 --> 00:44:56,740
the idea is that one dot X will have it

00:44:54,460 --> 00:45:01,109
and 2 dot X will not and 2 dot X will

00:44:56,740 --> 00:45:05,009
come out in 2011 there's one up there

00:45:01,109 --> 00:45:08,079
I'm sorry I couldn't hear the last word

00:45:05,009 --> 00:45:10,390
EXT jeaious yes what I think about yet

00:45:08,079 --> 00:45:12,220
t.j.s I think they have some amazingly

00:45:10,390 --> 00:45:23,999
lovely widgets and I hate their

00:45:12,220 --> 00:45:23,999

YouTube URL: https://www.youtube.com/watch?v=giIMjRWqbgo


