Title: The Ruby and .NET love child
Publication date: 2011-12-22
Playlist: FOSDEM 2010
Description: 
	By Ivan Porto Carrero

This talk will be about leveraging IronRuby from Mono and moonlight. Depending on the time I'd like to show how you can use IronRuby to easily extend your current GTK, WinForms,.. apps with scripting capabilities.

Perhaps how you can use IronRuby from Asp.NET MVC. If there is still time left I'd like to show you can script the browser and use Moonlight + IronRuby to use ruby as client scriping language instead or in cooperation with JavaScript.


FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:00,000 --> 00:00:07,529
Van Van here we speak about a running

00:00:03,929 --> 00:00:12,599
iron ruby and for the stuff on the DL

00:00:07,529 --> 00:00:18,300
are on mono the DLR is something quite

00:00:12,599 --> 00:00:24,510
new to for the euro and we can run that

00:00:18,300 --> 00:00:26,789
on Moodle 26 Frank yeah a trunk you can

00:00:24,510 --> 00:00:29,910
build it at the moment so I want to

00:00:26,789 --> 00:00:31,740
apologize i've had a largely unprepared

00:00:29,910 --> 00:00:36,719
i started preparing four years ago and

00:00:31,740 --> 00:00:41,489
i've had unfortunate unfortunate timing

00:00:36,719 --> 00:00:44,129
problems like i couldn't build mono on

00:00:41,489 --> 00:00:47,610
Ruby so I started trying to build model

00:00:44,129 --> 00:00:50,879
from trunk added into some new trouble

00:00:47,610 --> 00:00:52,980
from vmware fusion refusing me to get

00:00:50,879 --> 00:00:55,559
into my ubuntu machine which made me

00:00:52,980 --> 00:00:57,090
build a new ubuntu machine and go on and

00:00:55,559 --> 00:00:59,460
on and off fast for three days three

00:00:57,090 --> 00:01:02,070
days later I finally have an ubuntu

00:00:59,460 --> 00:01:04,290
machine that runs on VirtualBox but I

00:01:02,070 --> 00:01:07,350
had created in VMware on workstation on

00:01:04,290 --> 00:01:09,990
my windows box I configure it there so

00:01:07,350 --> 00:01:15,150
it hasn't the best experience I think

00:01:09,990 --> 00:01:17,880
ahead so far but in the end I've got

00:01:15,150 --> 00:01:24,420
some demos and I've got slides with a

00:01:17,880 --> 00:01:30,750
few pictures so try to shadows let's

00:01:24,420 --> 00:01:33,329
first start with opening the slides have

00:01:30,750 --> 00:01:41,509
some of you you silent Ruby before or

00:01:33,329 --> 00:01:46,850
know it exists that's all really good um

00:01:41,509 --> 00:01:46,850
presentations for them

00:01:49,570 --> 00:02:07,750
I have to work out at getting on that

00:01:51,880 --> 00:02:10,509
screen will be interesting too ok so I'm

00:02:07,750 --> 00:02:13,510
going to talk about Irene Ruby we call

00:02:10,509 --> 00:02:16,120
it the Ruby not need love child you'll

00:02:13,510 --> 00:02:18,160
find out soon ruby is a nice language to

00:02:16,120 --> 00:02:20,470
work with.net is a great platform to

00:02:18,160 --> 00:02:23,320
program against and you get lots of

00:02:20,470 --> 00:02:25,810
platform compatible cross-platform stuff

00:02:23,320 --> 00:02:28,239
out of the box which isn't in the Ruby

00:02:25,810 --> 00:02:29,950
classic ruby implementation so that's

00:02:28,239 --> 00:02:34,570
one of the biggest advantages but we'll

00:02:29,950 --> 00:02:37,330
see some more later my name is Ivan

00:02:34,570 --> 00:02:39,160
Porter keitaro have I'm been developing

00:02:37,330 --> 00:02:42,370
for as long as I can remember but at the

00:02:39,160 --> 00:02:43,540
same time I could read and write I just

00:02:42,370 --> 00:02:44,980
started a company white rabbit

00:02:43,540 --> 00:02:46,390
consulting and I have to thank my

00:02:44,980 --> 00:02:48,940
partner for creating these slides

00:02:46,390 --> 00:02:52,209
because I I didn't have the time

00:02:48,940 --> 00:02:54,700
obviously they gave me a C sharp in vp

00:02:52,209 --> 00:02:56,320
ship this year but this is because of my

00:02:54,700 --> 00:02:58,780
contributions to iron Ruby that has

00:02:56,320 --> 00:03:01,989
nothing to do with C sharp or my

00:02:58,780 --> 00:03:04,959
preference of C sharp and Manning

00:03:01,989 --> 00:03:07,810
contacted me to write I Danube in action

00:03:04,959 --> 00:03:10,750
or a book about Irene Ruby there is

00:03:07,810 --> 00:03:15,430
another one that deals with different

00:03:10,750 --> 00:03:17,709
concerts what are we going to talk about

00:03:15,430 --> 00:03:19,810
first an introduction to iron Ruby then

00:03:17,709 --> 00:03:22,180
why would actually want to use siren

00:03:19,810 --> 00:03:25,989
Ruby because C sharp is fine language to

00:03:22,180 --> 00:03:28,900
work with why would you leave it how you

00:03:25,989 --> 00:03:30,730
can leverage Ruby libraries from within

00:03:28,900 --> 00:03:34,120
your net projects which is kind of

00:03:30,730 --> 00:03:36,160
exciting I've had a request to integrate

00:03:34,120 --> 00:03:39,130
activemerchant which is a payment

00:03:36,160 --> 00:03:40,630
processing facility that integrated lots

00:03:39,130 --> 00:03:43,959
and lots of different payment gateways

00:03:40,630 --> 00:03:45,790
into dotnet merchant which you can do

00:03:43,959 --> 00:03:50,170
and I know Ruby enables you to do that

00:03:45,790 --> 00:03:52,660
stuff then it is sinatra i think i will

00:03:50,170 --> 00:03:55,030
just do that demo using ruby because i

00:03:52,660 --> 00:03:59,470
am and i'm also enabled to install james

00:03:55,030 --> 00:04:00,790
of my mac i get an open ssl error on

00:03:59,470 --> 00:04:04,120
mono

00:04:00,790 --> 00:04:05,799
linux i get an invalid part error so i

00:04:04,120 --> 00:04:09,280
have to get in and fix that in the irony

00:04:05,799 --> 00:04:10,659
Ruby source code I will be plus

00:04:09,280 --> 00:04:12,909
Silverlight I have to show the

00:04:10,659 --> 00:04:14,920
Silverlight one because there is also a

00:04:12,909 --> 00:04:17,889
config file error someplace and I

00:04:14,920 --> 00:04:20,109
couldn't see the website or the little

00:04:17,889 --> 00:04:26,169
Silverlight application with it in

00:04:20,109 --> 00:04:29,080
moonlight unfortunately bee do bee D D

00:04:26,169 --> 00:04:30,639
with our spec and caricature so our spec

00:04:29,080 --> 00:04:33,460
you will probably be one of the first

00:04:30,639 --> 00:04:36,039
places to start using Ruby or one of the

00:04:33,460 --> 00:04:39,370
good fits 40 bits around testing and

00:04:36,039 --> 00:04:41,050
doing behavior driven development and

00:04:39,370 --> 00:04:43,300
then you at certain point you're going

00:04:41,050 --> 00:04:45,400
to want to mock and caricature bridges

00:04:43,300 --> 00:04:49,180
the gap between the Ruby language and

00:04:45,400 --> 00:04:50,740
the clr to mock stuff out and then

00:04:49,180 --> 00:04:53,229
extending existing apps which is

00:04:50,740 --> 00:04:58,509
probably the whole reason of getting the

00:04:53,229 --> 00:04:59,949
mono machine together that is extending

00:04:58,509 --> 00:05:03,580
existing apps I'm going to extend

00:04:59,949 --> 00:05:08,250
banshee and banshee will afterwards be

00:05:03,580 --> 00:05:10,659
able to run iron Ruby written plugins I

00:05:08,250 --> 00:05:12,520
didn't get into the API of Banshee too

00:05:10,659 --> 00:05:13,810
much because I had too much other stuff

00:05:12,520 --> 00:05:15,789
to worry about like getting the

00:05:13,810 --> 00:05:22,810
environment to run so I very simple

00:05:15,789 --> 00:05:25,169
plugins so what is our in Ruby I Danube

00:05:22,810 --> 00:05:29,409
is Microsoft's first open source project

00:05:25,169 --> 00:05:32,110
and they had a lot to learn they are

00:05:29,409 --> 00:05:34,330
learning every week they're getting

00:05:32,110 --> 00:05:35,800
better at doing open source and

00:05:34,330 --> 00:05:37,780
communicating with the community and

00:05:35,800 --> 00:05:42,010
taking feedback and actually integrating

00:05:37,780 --> 00:05:49,120
it it's about to dlr it's the dlr team

00:05:42,010 --> 00:05:51,159
that rotas libraries and i will situate

00:05:49,120 --> 00:05:53,289
it later in the framework between slides

00:05:51,159 --> 00:05:55,810
what they are or why it stands for but

00:05:53,289 --> 00:05:59,050
two people working on C sharp for you'll

00:05:55,810 --> 00:06:01,599
probably already know it's currently one

00:05:59,050 --> 00:06:04,120
point 0 RC one we did that mainly

00:06:01,599 --> 00:06:06,400
because within the microsoft.net world

00:06:04,120 --> 00:06:08,500
people are reluctant until you stamp it

00:06:06,400 --> 00:06:13,560
with one point 0 so we couldn't go out

00:06:08,500 --> 00:06:16,760
with 0.93 0.94 so now it's RC

00:06:13,560 --> 00:06:18,960
on our c2 and we'll see how far it goes

00:06:16,760 --> 00:06:22,410
so there will be an asset to eminent

00:06:18,960 --> 00:06:25,350
this week and there is a bargain model

00:06:22,410 --> 00:06:27,450
but it's already with lupus now so I

00:06:25,350 --> 00:06:32,280
think lupus will fix it sometime soon

00:06:27,450 --> 00:06:37,410
and then we can build I dendrobium 10 as

00:06:32,280 --> 00:06:40,280
well so it gets a little bit confusing

00:06:37,410 --> 00:06:44,780
it's clr dlr bcl and all these other

00:06:40,280 --> 00:06:47,729
acronyms we've got around the place so

00:06:44,780 --> 00:06:50,580
to situate how it was before I've got

00:06:47,729 --> 00:06:52,229
this slide you know the lowest layer

00:06:50,580 --> 00:06:54,210
it's got all these class floating

00:06:52,229 --> 00:06:56,100
garbage collection eat and all this

00:06:54,210 --> 00:06:58,080
stuff going on you've got a security

00:06:56,100 --> 00:06:59,910
layer codex the security layer on top of

00:06:58,080 --> 00:07:01,950
that and then you've got the common type

00:06:59,910 --> 00:07:03,960
system which is what enables you to use

00:07:01,950 --> 00:07:05,850
Phoebe and all these other languages

00:07:03,960 --> 00:07:08,400
statically compiled languages on top of

00:07:05,850 --> 00:07:11,460
the clr and then you've got the base

00:07:08,400 --> 00:07:13,740
class libraries which allow you to write

00:07:11,460 --> 00:07:16,620
a speed of net forums or gtk

00:07:13,740 --> 00:07:19,500
applications or all these kinds of

00:07:16,620 --> 00:07:21,410
applications currently you can only use

00:07:19,500 --> 00:07:25,940
them with statically compiled languages

00:07:21,410 --> 00:07:28,830
but from the next incarnation of the

00:07:25,940 --> 00:07:30,750
microsoft.net framework and I think soon

00:07:28,830 --> 00:07:33,900
I've I've been building mano with

00:07:30,750 --> 00:07:36,240
profile for enable so lucky trying until

00:07:33,900 --> 00:07:38,280
it works and then I blog about it the

00:07:36,240 --> 00:07:40,590
DLR is between the base class libraries

00:07:38,280 --> 00:07:46,020
and the common type system so that has

00:07:40,590 --> 00:07:48,419
some implications that means you've got

00:07:46,020 --> 00:07:50,039
a shift dynamic subsystem and you gotta

00:07:48,419 --> 00:07:52,530
share hosting environment for both these

00:07:50,039 --> 00:07:54,510
static in these dynamic languages that

00:07:52,530 --> 00:07:56,550
means your dynamic language can access a

00:07:54,510 --> 00:07:57,990
whole object model in all classes that

00:07:56,550 --> 00:08:01,889
are defined in the study classes

00:07:57,990 --> 00:08:03,300
languages as well you get fingering from

00:08:01,889 --> 00:08:06,570
your dynamic language you get a full

00:08:03,300 --> 00:08:08,760
access to the clr that means you can use

00:08:06,570 --> 00:08:11,010
any type any library that is already

00:08:08,760 --> 00:08:13,070
compiled in c-sharp just required it in

00:08:11,010 --> 00:08:15,090
your ruby file and you're good to go

00:08:13,070 --> 00:08:17,789
you'll probably want to give it some

00:08:15,090 --> 00:08:23,610
attention for dealing with genetics but

00:08:17,789 --> 00:08:26,640
that's fine it enables fast code code

00:08:23,610 --> 00:08:27,480
generation of dynamic code and so if you

00:08:26,640 --> 00:08:30,600
want to join

00:08:27,480 --> 00:08:32,010
go at this point I think mano has a

00:08:30,600 --> 00:08:34,440
compiler as a service so you could

00:08:32,010 --> 00:08:37,940
possibly just send it C sharp and have

00:08:34,440 --> 00:08:39,960
it run in an eval statement on the

00:08:37,940 --> 00:08:42,270
Microsoft you only have to get the

00:08:39,960 --> 00:08:45,990
reflection emit enemy ty l and that's

00:08:42,270 --> 00:08:47,790
how you can generate dynamic code in

00:08:45,990 --> 00:08:49,740
Ruby it would also just be an eval

00:08:47,790 --> 00:08:53,220
statement so you have much easier code

00:08:49,740 --> 00:08:56,000
generation tools the biggest reason why

00:08:53,220 --> 00:09:00,570
I should care is development I

00:08:56,000 --> 00:09:01,890
development productivity the turnover

00:09:00,570 --> 00:09:04,590
for a mocking library the mocking

00:09:01,890 --> 00:09:06,780
library i wrote for caricature took me

00:09:04,590 --> 00:09:10,230
two weeks and a half to build and it's

00:09:06,780 --> 00:09:13,410
on par feature wise with mock you mock

00:09:10,230 --> 00:09:15,240
you took several months to build that's

00:09:13,410 --> 00:09:16,950
the kind of productivity enhancement you

00:09:15,240 --> 00:09:18,870
get from writing this type of frameworks

00:09:16,950 --> 00:09:21,500
that aren't mission-critical and

00:09:18,870 --> 00:09:25,700
performance critical to your application

00:09:21,500 --> 00:09:28,290
and the biggest reason for me at least

00:09:25,700 --> 00:09:31,410
dsl's they are everywhere you're

00:09:28,290 --> 00:09:33,660
confronted with dsl million times a day

00:09:31,410 --> 00:09:36,060
every time you do a build script every

00:09:33,660 --> 00:09:39,030
time you have a config file every time

00:09:36,060 --> 00:09:42,650
you write a manifest for an application

00:09:39,030 --> 00:09:45,000
like in the mono audience xml files

00:09:42,650 --> 00:09:49,020
unfortunately be six and out these dsl's

00:09:45,000 --> 00:09:50,850
are written in XML the for me I think

00:09:49,020 --> 00:09:52,890
the main reason people do this or at

00:09:50,850 --> 00:09:54,420
least the enterprise architects use XML

00:09:52,890 --> 00:09:56,700
is because it has to be compiled

00:09:54,420 --> 00:09:59,580
application to actually change the way

00:09:56,700 --> 00:10:01,200
it works they just can reconfigure this

00:09:59,580 --> 00:10:02,640
thing and then you get into a sort of

00:10:01,200 --> 00:10:06,390
configuration hell if you've ever

00:10:02,640 --> 00:10:08,490
written a sufficiently large WCF

00:10:06,390 --> 00:10:10,020
application you know that's where the

00:10:08,490 --> 00:10:12,420
pain point is it takes an hour

00:10:10,020 --> 00:10:13,860
configuration so you get the same

00:10:12,420 --> 00:10:16,950
benefits from using a scripting language

00:10:13,860 --> 00:10:18,630
like ironpython around in Ruby you don't

00:10:16,950 --> 00:10:20,670
have to recompile your application but

00:10:18,630 --> 00:10:22,710
you can write in a nice DSL or you can

00:10:20,670 --> 00:10:25,230
use the object model straight up without

00:10:22,710 --> 00:10:27,810
passing an XML file to actually

00:10:25,230 --> 00:10:29,550
configure your application into change

00:10:27,810 --> 00:10:32,220
stuff you can also poke it with a stick

00:10:29,550 --> 00:10:33,420
because you can add a ripple to it and

00:10:32,220 --> 00:10:36,410
start interacting with your application

00:10:33,420 --> 00:10:36,410
at runtime

00:10:37,480 --> 00:10:43,850
yeah Phil hawk he told me that friends

00:10:42,050 --> 00:10:45,470
don't let friends XML so this pretty

00:10:43,850 --> 00:10:49,430
much sums up my own feelings around this

00:10:45,470 --> 00:10:52,100
subject and so to show you the typical

00:10:49,430 --> 00:10:55,730
conversation a typical configuration

00:10:52,100 --> 00:10:58,790
would be an ioc container there's lots

00:10:55,730 --> 00:11:00,290
and lots of classes it now links lots

00:10:58,790 --> 00:11:10,310
and lots of types and interfaces

00:11:00,290 --> 00:11:16,630
together what's going on fix my other

00:11:10,310 --> 00:11:16,630
one I swear I'd another one

00:11:23,440 --> 00:11:29,560
so I wrote this dsl to configure an

00:11:26,800 --> 00:11:34,150
inject for example ninject is one of the

00:11:29,560 --> 00:11:36,490
ioc containers and this will be normally

00:11:34,150 --> 00:11:38,710
you would see lots and lots of tags one

00:11:36,490 --> 00:11:41,680
of the problems is once you open it in a

00:11:38,710 --> 00:11:43,210
text editor it's just noisy to get to

00:11:41,680 --> 00:11:46,810
the points you actually want to know

00:11:43,210 --> 00:11:50,130
about for me these feeds a little bit

00:11:46,810 --> 00:11:56,200
better but it's nowhere near finished

00:11:50,130 --> 00:12:03,490
because of stuff like this mmm let's get

00:11:56,200 --> 00:12:05,830
back to this thing okay so now we get to

00:12:03,490 --> 00:12:10,570
Ruby y which I want to use Ruby as a

00:12:05,830 --> 00:12:12,010
language in total Ruby became very very

00:12:10,570 --> 00:12:15,210
popular in a very short amount of time

00:12:12,010 --> 00:12:17,230
probably because of the rails framework

00:12:15,210 --> 00:12:19,360
you often hear in the Ruby community

00:12:17,230 --> 00:12:22,300
will often hear I came for rails but I

00:12:19,360 --> 00:12:24,310
stayed for Ruby and from very much

00:12:22,300 --> 00:12:25,660
pretty much the same way I started doing

00:12:24,310 --> 00:12:28,720
a little bit of rails out of curiosity

00:12:25,660 --> 00:12:30,580
and then I just went for a ruby because

00:12:28,720 --> 00:12:33,370
it was so much more fun to program it

00:12:30,580 --> 00:12:35,080
and you have all this little it's a

00:12:33,370 --> 00:12:37,060
really malleable language so you can

00:12:35,080 --> 00:12:39,310
make it look almost like anything you

00:12:37,060 --> 00:12:40,750
want you just start off with a template

00:12:39,310 --> 00:12:42,220
that's how I want it to look and then

00:12:40,750 --> 00:12:46,090
you start coding away until it looks

00:12:42,220 --> 00:12:49,420
like that it's got some really well

00:12:46,090 --> 00:12:51,130
chosen keywords and its a mix the best

00:12:49,420 --> 00:12:54,040
of breed implementation of a programming

00:12:51,130 --> 00:12:57,190
language I'd say so its a mix of

00:12:54,040 --> 00:12:59,140
Smalltalk pearl it has intrinsic support

00:12:57,190 --> 00:13:01,740
for regular expressions for example if

00:12:59,140 --> 00:13:04,630
you like the regular expressions it does

00:13:01,740 --> 00:13:05,980
expressing very well it has blocks and

00:13:04,630 --> 00:13:08,589
all these things that borrow from small

00:13:05,980 --> 00:13:13,630
dark it borrows from least a little bit

00:13:08,589 --> 00:13:16,420
as well for example ruby has two

00:13:13,630 --> 00:13:18,370
different keywords for doing if and if

00:13:16,420 --> 00:13:20,080
not it has even unless and it allows you

00:13:18,370 --> 00:13:24,190
to place them before or after a

00:13:20,080 --> 00:13:26,080
statement or an expression at least it

00:13:24,190 --> 00:13:29,070
does duck typing it has all these kind

00:13:26,080 --> 00:13:29,070
of typing stuff

00:13:30,629 --> 00:13:36,190
so duck typing is the opposite of what

00:13:33,790 --> 00:13:37,779
you're seeing here for me this is how

00:13:36,190 --> 00:13:39,190
you program a statically compiled

00:13:37,779 --> 00:13:42,160
language this you have to label

00:13:39,190 --> 00:13:44,889
everything upfront and then the compiler

00:13:42,160 --> 00:13:46,720
knows what to do it it it will be a bit

00:13:44,889 --> 00:13:50,879
more fair in this it just infers

00:13:46,720 --> 00:13:50,879
everything but it's still strong typed

00:13:50,970 --> 00:13:57,399
okay but that was the whole talk so now

00:13:54,160 --> 00:14:08,139
it's all demos I didn't want to bore

00:13:57,399 --> 00:14:10,629
everybody so free I'll use a caricature

00:14:08,139 --> 00:14:13,779
as first part to show you how this BDD

00:14:10,629 --> 00:14:18,189
stuff works does anybody practice BDD at

00:14:13,779 --> 00:14:19,930
all in c-sharp you don't even know

00:14:18,189 --> 00:14:22,029
ability means behavior driven

00:14:19,930 --> 00:14:24,250
development so it's like TDD test-driven

00:14:22,029 --> 00:14:26,350
development except that now you're not

00:14:24,250 --> 00:14:28,449
forced to test every little bit of your

00:14:26,350 --> 00:14:31,180
class you just test the public interface

00:14:28,449 --> 00:14:33,189
basically you describe what your class

00:14:31,180 --> 00:14:37,300
should be doing in a much more fluent

00:14:33,189 --> 00:14:41,920
language so i'll just show you let's say

00:14:37,300 --> 00:14:43,600
I've got the ninja class a ninja class

00:14:41,920 --> 00:14:46,689
has got all kinds of nonsensical

00:14:43,600 --> 00:14:48,610
properties and methods it will attack it

00:14:46,689 --> 00:14:50,139
will survive attacks and all this kind

00:14:48,610 --> 00:14:56,139
of stuff I used to have a Chuck Norris

00:14:50,139 --> 00:14:58,899
class but it got killed tomorrow and

00:14:56,139 --> 00:15:03,399
then you probably want to piss that

00:14:58,899 --> 00:15:04,779
ninja class at some point so we've got

00:15:03,399 --> 00:15:07,149
to see all our models that's where its

00:15:04,779 --> 00:15:14,130
name spaced can you eat this thing in

00:15:07,149 --> 00:15:17,120
the back do I make it larger no okay

00:15:14,130 --> 00:15:20,220
better

00:15:17,120 --> 00:15:22,350
so United space that's compiled in an

00:15:20,220 --> 00:15:25,110
assembly and then I created in the

00:15:22,350 --> 00:15:26,910
isolation I took this from the type mo

00:15:25,110 --> 00:15:29,340
guys they call it an isolation so you

00:15:26,910 --> 00:15:32,340
not bothered with boxed up and all that

00:15:29,340 --> 00:15:36,840
stuff you carry vaccinations for I

00:15:32,340 --> 00:15:38,190
weapon the interface of a weapon then it

00:15:36,840 --> 00:15:40,740
should obviously work without any

00:15:38,190 --> 00:15:44,180
expectation so my thing should just work

00:15:40,740 --> 00:15:48,300
and then I'm testing by mock earlier so

00:15:44,180 --> 00:15:51,780
i can set up an expectation when when

00:15:48,300 --> 00:15:53,520
this ninja gets attack with this type of

00:15:51,780 --> 00:15:55,260
parameter it should be 10 5 and

00:15:53,520 --> 00:15:58,650
otherwise it should return nil that's

00:15:55,260 --> 00:16:00,570
how its program and that's how it goes

00:15:58,650 --> 00:16:05,720
so you probably just describe the

00:16:00,570 --> 00:16:05,720
behavior of your application up front by

00:16:06,830 --> 00:16:11,250
doing something like this you just write

00:16:09,570 --> 00:16:12,660
it out this is what my class is supposed

00:16:11,250 --> 00:16:15,990
to be doing and then you start filling

00:16:12,660 --> 00:16:19,410
out these little sentences and fill up

00:16:15,990 --> 00:16:22,620
the behavior in your class that's pretty

00:16:19,410 --> 00:16:26,010
much how it works what doesn't this

00:16:22,620 --> 00:16:28,200
thing do it doesn't do private method

00:16:26,010 --> 00:16:30,120
interception and it doesn't do static

00:16:28,200 --> 00:16:32,430
method interception that's because it's

00:16:30,120 --> 00:16:33,990
a clr limitation and I know how to get

00:16:32,430 --> 00:16:36,330
around in our windows I'm still looking

00:16:33,990 --> 00:16:40,670
how to get around in our model it

00:16:36,330 --> 00:16:43,260
probably would make me create a profiler

00:16:40,670 --> 00:16:51,710
hook and that's right where I can

00:16:43,260 --> 00:16:51,710
intercept I hope yeah

00:16:52,110 --> 00:17:03,820
now go back now mmm it does the most

00:16:59,860 --> 00:17:05,710
important part is because when you're

00:17:03,820 --> 00:17:08,950
working with a ruby object or a nine and

00:17:05,710 --> 00:17:11,140
Ruby object it has a ruby view of the

00:17:08,950 --> 00:17:14,080
clr road so that means our classes

00:17:11,140 --> 00:17:16,060
you've got in the Ruby or from the CL

00:17:14,080 --> 00:17:31,750
are like system.object you can extend

00:17:16,060 --> 00:17:33,670
that goes away because I know it's all

00:17:31,750 --> 00:17:37,140
the way in the bottom well I don't know

00:17:33,670 --> 00:17:37,140
I can make it much higher

00:17:43,720 --> 00:17:50,149
no it doesn't want to take it it doesn't

00:17:46,730 --> 00:18:02,289
want to take it either I'm gonna fight

00:17:50,149 --> 00:18:07,549
with my macaroni so if I were to do a

00:18:02,289 --> 00:18:16,130
class system object that this will be

00:18:07,549 --> 00:18:20,360
dangerous obviously if the string now

00:18:16,130 --> 00:18:23,000
it's the way the mono the console

00:18:20,360 --> 00:18:27,950
erection model it's not complete but I'd

00:18:23,000 --> 00:18:30,860
also I can't get into not to fix it cuz

00:18:27,950 --> 00:18:40,010
I don't know how to do a basic if I were

00:18:30,860 --> 00:18:41,840
right to sing it does all this useful

00:18:40,010 --> 00:18:45,950
stuff what happens is it actually

00:18:41,840 --> 00:18:48,320
actually it should print the result of

00:18:45,950 --> 00:18:50,690
this expression but it doesn't do that

00:18:48,320 --> 00:18:55,730
at the moment so it cuts off the first

00:18:50,690 --> 00:18:59,179
part that's what happens it doesn't add

00:18:55,730 --> 00:19:02,929
a new line it forgets a new line for

00:18:59,179 --> 00:19:04,850
some reason there should be a line in

00:19:02,929 --> 00:19:06,470
between every time in the Congo because

00:19:04,850 --> 00:19:08,299
it tells you what the result was of your

00:19:06,470 --> 00:19:17,260
expression that you put in it's kind of

00:19:08,299 --> 00:19:17,260
like Apple okay so if I didn't take

00:19:18,039 --> 00:19:21,039
system

00:19:24,360 --> 00:19:38,130
generic list string new to string I hope

00:19:34,240 --> 00:19:44,440
this works it says yay I'm string so I

00:19:38,130 --> 00:19:46,300
you it's a if somebody changes the way

00:19:44,440 --> 00:19:48,640
an operator works on an integer it's

00:19:46,300 --> 00:19:53,140
time to take them out and give them a

00:19:48,640 --> 00:19:54,460
piece of your mind I guess so it is you

00:19:53,140 --> 00:19:56,070
have to be great power comes great

00:19:54,460 --> 00:19:58,660
responsibility I used to have a

00:19:56,070 --> 00:20:01,810
spider-man slide there to just explain

00:19:58,660 --> 00:20:04,210
this part but it allows you to actually

00:20:01,810 --> 00:20:06,190
get into the clr and make it work the

00:20:04,210 --> 00:20:10,120
way you want it to work or the way makes

00:20:06,190 --> 00:20:12,160
sense inside your application so that's

00:20:10,120 --> 00:20:14,680
what I meant with open classes you can

00:20:12,160 --> 00:20:18,070
generate entire programs from defining

00:20:14,680 --> 00:20:20,470
just your intent I can show you later on

00:20:18,070 --> 00:20:22,840
if I have time left how you parse like

00:20:20,470 --> 00:20:25,120
in 20 lines how you create all kind of

00:20:22,840 --> 00:20:27,840
classes from a CSV file and interact

00:20:25,120 --> 00:20:27,840
with those classes

00:20:30,700 --> 00:20:38,480
okay so that was a little bit about what

00:20:35,149 --> 00:20:41,450
you do with ira dubey and why it's give

00:20:38,480 --> 00:20:48,529
me some somewhat interesting I've more

00:20:41,450 --> 00:20:52,970
to go anubius all right so from east of

00:20:48,529 --> 00:20:55,940
light or moonlight in this case is what

00:20:52,970 --> 00:20:57,799
will probably give us a really good way

00:20:55,940 --> 00:21:00,169
of building cross-platform goals that

00:20:57,799 --> 00:21:02,600
look really attractive and with a

00:21:00,169 --> 00:21:09,049
plug-in that available on ninety percent

00:21:02,600 --> 00:21:10,279
of the user pcs so for me the best part

00:21:09,049 --> 00:21:11,750
about Silverlight is the way that you

00:21:10,279 --> 00:21:14,779
can take it out of the browser you code

00:21:11,750 --> 00:21:17,149
something once and you get and you don't

00:21:14,779 --> 00:21:18,440
have to do much work to actually run

00:21:17,149 --> 00:21:20,720
your application and all these different

00:21:18,440 --> 00:21:22,549
platforms and I will be as compelling

00:21:20,720 --> 00:21:25,159
and look the same way on all these

00:21:22,549 --> 00:21:26,779
different platforms my biggest gripe we

00:21:25,159 --> 00:21:29,090
working on multiple platforms is I don't

00:21:26,779 --> 00:21:31,970
have a good platform good editor that

00:21:29,090 --> 00:21:33,889
works on everything yet I can use

00:21:31,970 --> 00:21:35,179
monodevelop many rubymine across the

00:21:33,889 --> 00:21:40,519
board but I need a light video later

00:21:35,179 --> 00:21:42,350
that works everywhere as well to show

00:21:40,519 --> 00:21:45,529
you what you can do with silverlight we

00:21:42,350 --> 00:21:46,879
have you probably know but now he's

00:21:45,529 --> 00:21:49,240
doing it from Ruby so this is totally

00:21:46,879 --> 00:21:49,240
new

00:22:00,100 --> 00:22:08,679
tissues ready to go

00:22:17,980 --> 00:22:26,059
that's just a compiled something wrong I

00:22:21,649 --> 00:22:29,320
have a library flag sitting there if

00:22:26,059 --> 00:22:29,320
you're supposed

00:22:37,950 --> 00:22:40,950
ok

00:22:41,260 --> 00:22:47,050
so this is a very complicated

00:22:44,860 --> 00:22:50,860
silverlight application that apparently

00:22:47,050 --> 00:22:53,880
can't get to the internet there's

00:22:50,860 --> 00:22:53,880
supposed to be a rabbit ear

00:22:56,020 --> 00:23:07,230
and just this won't work my rabbit is

00:23:01,090 --> 00:23:07,230
gone alright so I'll do another one

00:23:10,830 --> 00:23:13,830
projects

00:23:30,470 --> 00:23:38,929
we wrote titties because that's such a

00:23:35,360 --> 00:23:41,809
hard thing to write in civil I'd this is

00:23:38,929 --> 00:23:44,120
completely powered by morrow by Ruby

00:23:41,809 --> 00:23:49,640
hidin Ruby it's not powered by my lights

00:23:44,120 --> 00:23:51,470
the mac thing and we can start this

00:23:49,640 --> 00:23:55,220
thing I'll show you the code in a minute

00:23:51,470 --> 00:23:57,409
so I can move this thing around and drop

00:23:55,220 --> 00:24:05,840
my blocks I won't play this for very

00:23:57,409 --> 00:24:08,710
long because yeah so we have a bug you

00:24:05,840 --> 00:24:14,600
will see in a minute that's bit

00:24:08,710 --> 00:24:18,799
troublesome you can do all kinds of

00:24:14,600 --> 00:24:24,470
stuff so you get a call back down give

00:24:18,799 --> 00:24:26,600
me this one I need to do this in the

00:24:24,470 --> 00:24:28,250
other one I hope you can see the text

00:24:26,600 --> 00:24:29,890
change on the button I'll try to make

00:24:28,250 --> 00:24:36,049
that exchange otherwise i'll do the

00:24:29,890 --> 00:24:37,490
color change application so you get this

00:24:36,049 --> 00:24:38,900
report console where you can interact

00:24:37,490 --> 00:24:40,700
you can do this in any type of

00:24:38,900 --> 00:24:43,870
application I didn't do it in the

00:24:40,700 --> 00:24:45,770
banshee one because I don't know to gtk

00:24:43,870 --> 00:24:50,750
widgets and stuff so I don't know

00:24:45,770 --> 00:24:56,480
educate the repo window application

00:24:50,750 --> 00:24:59,000
current route visual you can eat it you

00:24:56,480 --> 00:25:01,429
can interrogate it so the root visual

00:24:59,000 --> 00:25:07,039
look at all these properties it should

00:25:01,429 --> 00:25:09,049
probably wrap it around but you can you

00:25:07,039 --> 00:25:17,020
can find out what's in your application

00:25:09,049 --> 00:25:22,539
at the moment application current route

00:25:17,020 --> 00:25:22,539
visual is it background

00:25:26,780 --> 00:25:44,240
our system windows media this is

00:25:34,410 --> 00:25:44,240
dangerous huh the colors I need a brush

00:25:45,950 --> 00:25:49,400
solid color brush

00:25:53,010 --> 00:26:03,450
brush it it doesn't have but you

00:26:01,410 --> 00:26:09,420
could potentially change all this type

00:26:03,450 --> 00:26:13,140
of stuff so you could also change other

00:26:09,420 --> 00:26:14,880
text or how the blocks look and stuff

00:26:13,140 --> 00:26:16,230
like that but it's a good way to debug

00:26:14,880 --> 00:26:18,000
your application to find out what's

00:26:16,230 --> 00:26:20,430
going on exactly at that point when you

00:26:18,000 --> 00:26:22,560
feed it this type of things I quite like

00:26:20,430 --> 00:26:25,680
the whole console app comes of

00:26:22,560 --> 00:26:28,670
experience but I haven't done much

00:26:25,680 --> 00:26:28,670
silverlight obviously

00:26:33,480 --> 00:26:46,919
oh now I'm hell-bent on shine I can do

00:26:39,929 --> 00:26:49,500
it so I've got this button here mom it's

00:26:46,919 --> 00:26:51,480
hard for me to zoom because I need to

00:26:49,500 --> 00:26:55,410
type in the button but it says go go

00:26:51,480 --> 00:26:56,880
rabbit if the rabbit would show and

00:26:55,410 --> 00:26:58,440
we're going to make it into a much more

00:26:56,880 --> 00:27:00,770
difficult texts like hello world or

00:26:58,440 --> 00:27:08,150
something so it goes the same way

00:27:00,770 --> 00:27:10,890
application current route visual

00:27:08,150 --> 00:27:12,990
normally if you do Silverlight you would

00:27:10,890 --> 00:27:14,760
have to go now fine bye fine name

00:27:12,990 --> 00:27:17,429
something something and then it will

00:27:14,760 --> 00:27:19,860
return you so that those are some of the

00:27:17,429 --> 00:27:22,790
things you can easily mitigate in Ruby

00:27:19,860 --> 00:27:30,890
I'll show you in a minute I've done this

00:27:22,790 --> 00:27:39,330
it's got my button text or text equals

00:27:30,890 --> 00:27:41,480
hello for them but its content I've been

00:27:39,330 --> 00:27:41,480
here before

00:27:43,980 --> 00:27:51,380
so it does throw errors you know and it

00:27:47,790 --> 00:27:51,380
quite useful it says doesn't have text

00:27:56,470 --> 00:27:58,950
working

00:27:59,470 --> 00:28:08,890
yeah yeah I know I know I changed it it

00:28:05,620 --> 00:28:13,450
says hello frost them now yeah the demo

00:28:08,890 --> 00:28:20,049
networks now how does this thing look

00:28:13,450 --> 00:28:23,380
that's maybe also a good thing mate so

00:28:20,049 --> 00:28:26,650
all the code you have a silverlight SL

00:28:23,380 --> 00:28:28,270
command as a ruby we created ruby

00:28:26,650 --> 00:28:32,020
silverlight application and it generates

00:28:28,270 --> 00:28:34,659
this structure here apps uses index and

00:28:32,020 --> 00:28:38,679
the idea is that in app you start

00:28:34,659 --> 00:28:42,789
programming in the app that RB file now

00:28:38,679 --> 00:28:49,840
this is what gives us ripple we overrode

00:28:42,789 --> 00:28:51,190
standard out so we redirect it then this

00:28:49,840 --> 00:28:58,470
is generated so you don't have to worry

00:28:51,190 --> 00:28:58,470
about this today too

00:28:58,600 --> 00:29:03,850
the framework element / oh it's not

00:29:01,330 --> 00:29:07,090
there there is a framework element

00:29:03,850 --> 00:29:09,700
override somewhere in the in one of the

00:29:07,090 --> 00:29:12,309
classes that I've been defined by the

00:29:09,700 --> 00:29:14,320
framework to run this Silverlight

00:29:12,309 --> 00:29:17,679
applications with Ruby and that allows

00:29:14,320 --> 00:29:19,270
you to override to look into so if you'd

00:29:17,679 --> 00:29:20,799
write this in Ruby there is one method

00:29:19,270 --> 00:29:23,080
that is very interesting that is a

00:29:20,799 --> 00:29:24,760
method missing method and allows you to

00:29:23,080 --> 00:29:28,240
respond to ms missing two missing

00:29:24,760 --> 00:29:30,400
methods obviously and actually redirect

00:29:28,240 --> 00:29:34,320
and it's used often as a method

00:29:30,400 --> 00:29:34,320
dispatcher so you would go cause

00:29:35,070 --> 00:29:43,480
framework element to get to the lowest

00:29:39,970 --> 00:29:50,169
one and then you get the biggest win def

00:29:43,480 --> 00:29:53,950
method missing name ARC's this is like

00:29:50,169 --> 00:30:11,970
params in c-sharp mb takes a function

00:29:53,950 --> 00:30:11,970
pointer if respond to mmm fine name

00:30:19,420 --> 00:30:30,790
you don't have to do return statements

00:30:21,610 --> 00:30:32,320
but I'll just do it for clarity this so

00:30:30,790 --> 00:30:34,030
this would then first try to look it up

00:30:32,320 --> 00:30:36,820
if you pass it a string it goes and

00:30:34,030 --> 00:30:38,740
looks up if you can find this this

00:30:36,820 --> 00:30:41,370
control if you cannot find a control as

00:30:38,740 --> 00:30:43,450
a method then it will delegate it to

00:30:41,370 --> 00:30:47,260
whatever is there before and probably

00:30:43,450 --> 00:30:50,350
throw an error it's these little things

00:30:47,260 --> 00:30:52,860
you can do so what we have here is we

00:30:50,350 --> 00:30:55,300
have an event handler that does it click

00:30:52,860 --> 00:30:58,540
my rabbit would have turned around we

00:30:55,300 --> 00:31:08,860
made it sku with all these things but

00:30:58,540 --> 00:31:10,900
it's gone now mm-hmm sinatra's into the

00:31:08,860 --> 00:31:14,380
building so this is one of the nicer

00:31:10,900 --> 00:31:16,240
parts if you've ever be writing an

00:31:14,380 --> 00:31:19,600
application you need to get some whipped

00:31:16,240 --> 00:31:21,190
set that up or need to talk it to get it

00:31:19,600 --> 00:31:24,190
talking to a web service at the expense

00:31:21,190 --> 00:31:27,010
side XML or stuff like that Ruby's got a

00:31:24,190 --> 00:31:30,960
Sinatra framework which allows you to

00:31:27,010 --> 00:31:30,960
write a ratty hello world application

00:31:31,320 --> 00:31:40,950
hmm then go something like this require

00:31:37,950 --> 00:31:40,950
Sinatra

00:31:45,640 --> 00:31:58,809
get do that's how you write a hunt our

00:31:56,390 --> 00:31:58,809
website

00:32:00,950 --> 00:32:03,549
who

00:32:10,660 --> 00:32:15,280
soon as I may have not been the best

00:32:12,860 --> 00:32:15,280
name

00:32:24,840 --> 00:32:35,130
so it started a web server if everything

00:32:28,150 --> 00:32:35,130
goes right it should show me hello world

00:32:37,530 --> 00:32:46,270
okay so you can have it generate xml at

00:32:43,030 --> 00:32:48,280
that point you can make it talk to the

00:32:46,270 --> 00:32:49,960
database if you leverage one of the

00:32:48,280 --> 00:32:52,990
other Ruby components it will spit out

00:32:49,960 --> 00:32:54,760
XML chase and whatever format you've

00:32:52,990 --> 00:32:57,610
given it and it knows about the see you

00:32:54,760 --> 00:32:59,560
guys to just put it all out there so

00:32:57,610 --> 00:33:01,690
that's a really nice addition you get a

00:32:59,560 --> 00:33:04,510
web server up lip service running in

00:33:01,690 --> 00:33:09,180
under five or ten minutes probably maybe

00:33:04,510 --> 00:33:09,180
under an hour depending on how fast your

00:33:09,780 --> 00:33:17,820
that's why I wanted to have seen out to

00:33:12,190 --> 00:33:20,560
entering the building in the last part

00:33:17,820 --> 00:33:24,430
extending applic sisting applications is

00:33:20,560 --> 00:33:28,210
probably the more interesting part you

00:33:24,430 --> 00:33:35,220
all know banshee probably but that's the

00:33:28,210 --> 00:33:35,220
whole point of my virtual box thing here

00:33:38,190 --> 00:33:46,120
okay so I can't open the solution in

00:33:42,160 --> 00:33:48,550
monodevelop i copied i installed 2.2 one

00:33:46,120 --> 00:33:56,680
this morning happy comes up with an

00:33:48,550 --> 00:33:58,990
error but i can use the browser code in

00:33:56,680 --> 00:34:02,410
I was pretty lucky because there was

00:33:58,990 --> 00:34:04,330
already a boo skip service in a banshee

00:34:02,410 --> 00:34:06,010
so I just use the boo script service

00:34:04,330 --> 00:34:08,950
I've ported it to how you would use it

00:34:06,010 --> 00:34:13,560
with the dlr and how you execute that

00:34:08,950 --> 00:34:21,790
code we can find out from resource

00:34:13,560 --> 00:34:29,830
Banshee Banshee so we've got another

00:34:21,790 --> 00:34:37,060
source folder extensions I know Ruby

00:34:29,830 --> 00:34:40,020
script that I to kill the banshee adding

00:34:37,060 --> 00:34:40,020
definition

00:34:48,140 --> 00:34:51,530
just opening

00:35:05,830 --> 00:35:20,470
I just want to show colors source

00:35:14,850 --> 00:35:23,800
extensions and Ruby script when she

00:35:20,470 --> 00:35:29,320
angry this is probably not big enough

00:35:23,800 --> 00:35:40,170
air in the back I wasn't pretty planning

00:35:29,320 --> 00:35:40,170
on hunting course that's bit too big

00:35:46,760 --> 00:35:51,970
okay so I've got the boo script service

00:35:52,930 --> 00:36:01,970
and Abu scripture is now it uses a bunch

00:35:58,790 --> 00:36:04,670
of references i referenced the dlr

00:36:01,970 --> 00:36:07,730
languages at the dlr itself microsoft

00:36:04,670 --> 00:36:09,890
scripting and all these things then I

00:36:07,730 --> 00:36:12,230
reference the iron Ruby libraries and I

00:36:09,890 --> 00:36:14,510
looked into what the bull script service

00:36:12,230 --> 00:36:19,310
referenced which is hyena and some of

00:36:14,510 --> 00:36:22,910
the Banshee things i made this again I

00:36:19,310 --> 00:36:25,070
just now I get Ruby MV so I think most

00:36:22,910 --> 00:36:27,800
people define is for each method as an

00:36:25,070 --> 00:36:33,890
extension somebody forgot it to include

00:36:27,800 --> 00:36:35,570
it in a favor then I just do what's

00:36:33,890 --> 00:36:39,340
needed to create an extension for

00:36:35,570 --> 00:36:43,030
banshee I say the scripts directory

00:36:39,340 --> 00:36:43,030
which is in

00:36:48,760 --> 00:36:57,620
but Ruby scripts will be my conf

00:36:51,830 --> 00:37:01,310
directory a lock object then I define a

00:36:57,620 --> 00:37:03,410
static script runtime so the runtime to

00:37:01,310 --> 00:37:05,840
host the lr stuff is pretty expensive

00:37:03,410 --> 00:37:09,590
you only want to start a trend time once

00:37:05,840 --> 00:37:18,620
for the runtime of your application or

00:37:09,590 --> 00:37:20,860
per abdomen perhaps and then we get if

00:37:18,620 --> 00:37:23,840
it's already initialized bail

00:37:20,860 --> 00:37:27,260
initializer in Ruby that's probably the

00:37:23,840 --> 00:37:32,830
meat of the hosting part so we do is we

00:37:27,260 --> 00:37:35,990
first set up a script runtime setup then

00:37:32,830 --> 00:37:38,270
you tell it yeah I probably want to use

00:37:35,990 --> 00:37:40,520
Ruby in this case you can notice you can

00:37:38,270 --> 00:37:43,970
add more languages to it by looking at

00:37:40,520 --> 00:37:48,050
the extensions and so you could use

00:37:43,970 --> 00:37:51,380
scheme or Python or the iron Jays that

00:37:48,050 --> 00:37:54,410
will be at somebody's written so all the

00:37:51,380 --> 00:37:59,240
Ireland languages basically then we

00:37:54,410 --> 00:38:01,160
create a runtime we create a ruby engine

00:37:59,240 --> 00:38:03,490
so the Ruby engine is what actually will

00:38:01,160 --> 00:38:07,130
be evaluating all the code and

00:38:03,490 --> 00:38:09,050
dispatching it everywhere and then we

00:38:07,130 --> 00:38:10,880
set some load but so we know if you do

00:38:09,050 --> 00:38:15,250
require something it will look into the

00:38:10,880 --> 00:38:15,250
script directly first to find this file

00:38:15,610 --> 00:38:21,590
and then I just want to pass the

00:38:18,680 --> 00:38:23,600
references to my Ruby hosting

00:38:21,590 --> 00:38:26,300
environment so I took all the loaded

00:38:23,600 --> 00:38:33,050
assemblies and I loaded them again in

00:38:26,300 --> 00:38:36,380
the runtime then the last part of this

00:38:33,050 --> 00:38:40,580
whole undertaking is actually run

00:38:36,380 --> 00:38:43,340
scripts so we go to the directory get

00:38:40,580 --> 00:38:46,430
all the files in that script directly

00:38:43,340 --> 00:38:49,180
that in the Ruby and I we just executed

00:38:46,430 --> 00:38:49,180
run script method

00:38:50,540 --> 00:38:57,380
so the run script method just takes a

00:38:55,410 --> 00:39:00,720
file and pass this note to the engine is

00:38:57,380 --> 00:39:03,330
mine clean a new scope the new scope is

00:39:00,720 --> 00:39:05,220
just like a sandbox you used to execute

00:39:03,330 --> 00:39:07,110
code everything you require in that

00:39:05,220 --> 00:39:09,990
scope is available to everything in that

00:39:07,110 --> 00:39:14,820
scope but if you create a new one yeah

00:39:09,990 --> 00:39:19,190
the blank slate and it will just execute

00:39:14,820 --> 00:39:19,190
those files now will this thing work

00:39:28,590 --> 00:39:39,600
I have to press tab Ivan I'll show the

00:39:37,470 --> 00:39:42,720
first script I wrote the first plug-in I

00:39:39,600 --> 00:39:53,000
road is very very hard it's again a

00:39:42,720 --> 00:39:59,840
narrow world one teammate mention boom

00:39:53,000 --> 00:39:59,840
all rights in this one very small

00:40:05,740 --> 00:40:23,059
I've lost my mailbox a gmail messy Ruby

00:40:16,789 --> 00:40:25,339
scripts so I kate three new lines so it

00:40:23,059 --> 00:40:40,569
stands out in the locks you'll see why

00:40:25,339 --> 00:40:40,569
in a pinch the star it says hello 02

00:40:40,660 --> 00:40:48,319
because I didn't change anything I can

00:40:43,190 --> 00:40:51,190
just make this thing it will build I had

00:40:48,319 --> 00:40:53,390
lots of fun getting this thing to build

00:40:51,190 --> 00:40:56,440
but it's always like this suggestion is

00:40:53,390 --> 00:40:56,440
get into new code base

00:41:04,770 --> 00:41:13,320
it starts that's a good sign so when it

00:41:10,110 --> 00:41:15,360
was a I have all these things that I

00:41:13,320 --> 00:41:18,420
didn't install I didn't install all the

00:41:15,360 --> 00:41:20,310
dependencies for this build but it says

00:41:18,420 --> 00:41:23,130
hello world which is ultimately what I

00:41:20,310 --> 00:41:27,500
wanted to shower I've got a much more

00:41:23,130 --> 00:41:27,500
difficult plug-in way more difficult so

00:41:28,970 --> 00:41:33,200
closing this for me nice

00:41:40,540 --> 00:41:48,460
and there are teammates ah it's probably

00:41:45,530 --> 00:41:48,460
still open

00:41:53,770 --> 00:42:01,910
coffee when she Ruby scripts duration

00:42:00,170 --> 00:42:03,830
status for matters so this is just the

00:42:01,910 --> 00:42:07,940
port of Abu script it was in there like

00:42:03,830 --> 00:42:10,040
Abu script and the person Aaron I think

00:42:07,940 --> 00:42:11,750
wasn't happy with the clear for matters

00:42:10,040 --> 00:42:13,790
the ad that actually showed you some

00:42:11,750 --> 00:42:17,110
useful information and he wanted some

00:42:13,790 --> 00:42:19,370
more confusing ones so we have one year

00:42:17,110 --> 00:42:21,290
with milliseconds we have another one

00:42:19,370 --> 00:42:23,990
that does it in ticks and then we have

00:42:21,290 --> 00:42:27,530
one of them that is useful the confusing

00:42:23,990 --> 00:42:31,460
confusing precise formatting and I've

00:42:27,530 --> 00:42:34,640
just used those the benefit of using oh

00:42:31,460 --> 00:42:38,420
stop that's what I wanted to do the

00:42:34,640 --> 00:42:40,520
benefit of using Ruby for example is

00:42:38,420 --> 00:42:41,480
instead of I now stop the application

00:42:40,520 --> 00:42:44,060
but I didn't have to stop the

00:42:41,480 --> 00:42:46,700
application i can just start we change

00:42:44,060 --> 00:42:48,740
my file and we activate the plug-in and

00:42:46,700 --> 00:42:57,050
it will execute these new plugins that I

00:42:48,740 --> 00:42:59,380
created come come come so though i'm not

00:42:57,050 --> 00:43:02,900
going to rebuild that's not necessary

00:42:59,380 --> 00:43:05,750
and I've got over here this is a

00:43:02,900 --> 00:43:12,350
confusing yeah this is very sad right

00:43:05,750 --> 00:43:14,510
it's all about this thing here yeah this

00:43:12,350 --> 00:43:20,060
is a confusing precise formatted if i

00:43:14,510 --> 00:43:24,160
click on it we get milliseconds but the

00:43:20,060 --> 00:43:27,550
s files off and if i click on it again

00:43:24,160 --> 00:43:27,550
we get tix

00:43:27,840 --> 00:43:39,540
yeah so that was my plugin yeah but it

00:43:36,780 --> 00:43:41,190
takes relatively little effort once you

00:43:39,540 --> 00:43:43,370
get your environment setup to actually

00:43:41,190 --> 00:43:47,160
start extending your own applications

00:43:43,370 --> 00:43:49,830
with mono with iron movie so you can do

00:43:47,160 --> 00:43:51,930
this then get all the benefits of

00:43:49,830 --> 00:43:55,200
scripting get a lower barrier for people

00:43:51,930 --> 00:43:57,450
entering it's much easier to learn Ruby

00:43:55,200 --> 00:44:02,040
than it is to learn C sharp infra my

00:43:57,450 --> 00:44:04,890
opinion I vivid c-sharp from C sharp 12

00:44:02,040 --> 00:44:07,230
c sharp 4 and i don't know i would start

00:44:04,890 --> 00:44:11,790
with c sharp for today because you so

00:44:07,230 --> 00:44:15,600
much ground to cover okay the last part

00:44:11,790 --> 00:44:17,640
and then you're all rid of me I have to

00:44:15,600 --> 00:44:20,400
put this in yeah we have a forthcoming

00:44:17,640 --> 00:44:23,010
book if you talk to me catch me on the

00:44:20,400 --> 00:44:29,090
IRC or someplace I can give you a code

00:44:23,010 --> 00:44:33,020
that gets you thirty percent off and

00:44:29,090 --> 00:44:33,020
that's what it are there any questions

00:44:35,180 --> 00:44:41,940
yes so on and you know you're saying

00:44:38,820 --> 00:44:43,770
eyes like this is our movie yeah I know

00:44:41,940 --> 00:44:45,840
Ray's know things and rails are nice

00:44:43,770 --> 00:44:48,150
like fur if you're creating a new day

00:44:45,840 --> 00:44:50,550
you can just go one job minute oh yeah I

00:44:48,150 --> 00:44:53,280
can be all this stuff is in there does

00:44:50,550 --> 00:44:55,410
that mean you're pulling real stuff as

00:44:53,280 --> 00:44:59,750
well I have to support well yeah you can

00:44:55,410 --> 00:45:03,350
do this um well I've got some time now

00:44:59,750 --> 00:45:08,220
so let's do I don't have rails installed

00:45:03,350 --> 00:45:10,230
but you can you can you can do it so if

00:45:08,220 --> 00:45:11,820
i would start effect was of my linux box

00:45:10,230 --> 00:45:15,390
and i start the windows box i can do all

00:45:11,820 --> 00:45:18,990
this stuff there but in that you can

00:45:15,390 --> 00:45:21,360
just use any Ruby library out there so

00:45:18,990 --> 00:45:24,420
we are actually bigger yeah we're pretty

00:45:21,360 --> 00:45:28,640
committed to learn rails dress is a bit

00:45:24,420 --> 00:45:31,080
more mature as a asp.net-mvc is a

00:45:28,640 --> 00:45:32,880
support going on a good community but

00:45:31,080 --> 00:45:34,110
yeah it runs sales today the only

00:45:32,880 --> 00:45:37,290
problem you've got you're going to get

00:45:34,110 --> 00:45:39,720
is how will I talk to the database we

00:45:37,290 --> 00:45:40,390
need more people to implement database

00:45:39,720 --> 00:45:43,240
drivers

00:45:40,390 --> 00:45:47,260
for my sequel postgres and these things

00:45:43,240 --> 00:45:50,950
so I did the preliminary work to build

00:45:47,260 --> 00:45:53,589
an image microsoft c code adapter and i

00:45:50,950 --> 00:45:55,630
extracted everything into using the

00:45:53,589 --> 00:45:57,940
doubt ideal don't need classes that use

00:45:55,630 --> 00:46:00,220
these abstract factories and this will

00:45:57,940 --> 00:46:02,980
provide a model so you can just plug in

00:46:00,220 --> 00:46:06,130
post crease in my sequel if you write

00:46:02,980 --> 00:46:09,039
the adapter for it in Ruby it should be

00:46:06,130 --> 00:46:11,289
it's still a bit of workers they think

00:46:09,039 --> 00:46:20,049
differently about closing transactions

00:46:11,289 --> 00:46:27,730
and stuff yes yeah but I don't have I

00:46:20,049 --> 00:46:30,519
didn't compile I don't fight inside it

00:46:27,730 --> 00:46:34,089
yeah if it needs two or three more lines

00:46:30,519 --> 00:46:39,220
of code but yes from then you can just

00:46:34,089 --> 00:46:41,500
use any language that is dlr enabled so

00:46:39,220 --> 00:46:43,180
that is a quite nice you don't have to

00:46:41,500 --> 00:46:45,269
force people to use the language you

00:46:43,180 --> 00:46:53,140
want they can use whatever they want

00:46:45,269 --> 00:46:58,839
yeah any other questions just write to

00:46:53,140 --> 00:47:01,000
Ruby plugin for punchy only news 15 yeah

00:46:58,839 --> 00:47:03,759
this extension service one file this

00:47:01,000 --> 00:47:06,549
it's nothing it's this seven or eight

00:47:03,759 --> 00:47:08,799
lines of code you need to set it up and

00:47:06,549 --> 00:47:10,779
to set some load parts and stuff ID so

00:47:08,799 --> 00:47:13,630
it knows we have to look file for files

00:47:10,779 --> 00:47:20,140
but that's about it what you need to do

00:47:13,630 --> 00:47:24,910
everything else is handled yeah okay no

00:47:20,140 --> 00:47:32,650
more Krishna's that's good the book

00:47:24,910 --> 00:47:36,190
that's a good question it seems that

00:47:32,650 --> 00:47:39,970
it's there will be very rich scheduled

00:47:36,190 --> 00:47:41,529
to be complete the 15 to februari but i

00:47:39,970 --> 00:47:44,319
don't want to be complete before it's

00:47:41,529 --> 00:47:46,480
actually one point 0 because they're

00:47:44,319 --> 00:47:49,839
doing still pushing some major changes

00:47:46,480 --> 00:47:51,460
in not major from the internal point of

00:47:49,839 --> 00:47:52,960
view but major from the external point

00:47:51,460 --> 00:47:54,250
of view so

00:47:52,960 --> 00:47:56,920
the ways of doing things don't just

00:47:54,250 --> 00:48:00,790
don't work anymore and they're now more

00:47:56,920 --> 00:48:03,280
JRuby risk and stuff I got so I want to

00:48:00,790 --> 00:48:05,200
postpone this thing with finishing and

00:48:03,280 --> 00:48:06,910
submitting the final manuscript and that

00:48:05,200 --> 00:48:10,750
is the same as the the set in stone

00:48:06,910 --> 00:48:13,869
version 1 point 0 I hope that make some

00:48:10,750 --> 00:48:15,640
sense but there are reviewers and if you

00:48:13,869 --> 00:48:17,770
want to review the book leave your name

00:48:15,640 --> 00:48:19,359
and i'll get you in touch with Manning

00:48:17,770 --> 00:48:25,720
and they'll put you on the reviewers

00:48:19,359 --> 00:48:27,900
list oh yeah that was thank you for your

00:48:25,720 --> 00:48:27,900

YouTube URL: https://www.youtube.com/watch?v=_d1zQyKacgo


