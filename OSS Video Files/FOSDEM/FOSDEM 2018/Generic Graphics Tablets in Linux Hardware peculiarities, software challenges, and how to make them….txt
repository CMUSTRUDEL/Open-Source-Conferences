Title: Generic Graphics Tablets in Linux Hardware peculiarities, software challenges, and how to make themâ€¦
Publication date: 2018-02-04
Playlist: FOSDEM 2018
Description: 
	Generic Graphics Tablets in Linux Hardware peculiarities, software challenges, and how to make them work
by Nikolai Kondrashov

At: FOSDEM 2018
Room: K.4.401
Scheduled start: 2018-02-03 14:50:00+01
Captions: 
	00:00:07,990 --> 00:00:16,450
all right I guess we can start hi

00:00:11,990 --> 00:00:20,119
everyone and Nicolai condors off and I'm

00:00:16,450 --> 00:00:22,730
open source developer I work at Red Hat

00:00:20,119 --> 00:00:25,790
I also do electronics and embedded as a

00:00:22,730 --> 00:00:27,980
hobby and I owe that font is wrong

00:00:25,790 --> 00:00:33,290
maintainer of document but hope let's

00:00:27,980 --> 00:00:35,360
hope this works so we don't have any

00:00:33,290 --> 00:00:38,930
amplifications I'll try to speak louder

00:00:35,360 --> 00:00:41,270
okay so imma meant maintainer of the

00:00:38,930 --> 00:00:46,090
digimon project which this presentation

00:00:41,270 --> 00:00:48,829
is all about so generic tablets

00:00:46,090 --> 00:00:49,280
what are generic tables what I mean by

00:00:48,829 --> 00:00:51,440
that

00:00:49,280 --> 00:00:53,899
basically any graphics tables which are

00:00:51,440 --> 00:00:58,070
not made by Wacom because many things

00:00:53,899 --> 00:01:02,530
that Beckham is the only the only

00:00:58,070 --> 00:01:05,180
manufacturer there is just not true and

00:01:02,530 --> 00:01:07,310
those generic tablets are mostly gonna

00:01:05,180 --> 00:01:09,200
talk and built by original

00:01:07,310 --> 00:01:11,900
equipment manufacturers in Asia

00:01:09,200 --> 00:01:13,460
then there are rebranded and sold and

00:01:11,900 --> 00:01:16,850
there are many many different brands and

00:01:13,460 --> 00:01:23,360
this list here is maybe a hope or a

00:01:16,850 --> 00:01:25,909
third of the names that you can find so

00:01:23,360 --> 00:01:28,310
they can they can be like very small

00:01:25,909 --> 00:01:30,530
barely usable I don't think anybody

00:01:28,310 --> 00:01:33,200
produces those small tables anymore

00:01:30,530 --> 00:01:37,400
because there are well we can't do much

00:01:33,200 --> 00:01:40,100
on them except sign something there are

00:01:37,400 --> 00:01:44,240
tables which are very visible on the

00:01:40,100 --> 00:01:46,820
screen which are very cheap and that you

00:01:44,240 --> 00:01:52,070
can do a lot with them and they are very

00:01:46,820 --> 00:01:55,400
poor popular there are some curiosities

00:01:52,070 --> 00:01:59,810
which are experimental or they just made

00:01:55,400 --> 00:02:01,490
the single model and didn't go anywhere

00:01:59,810 --> 00:02:04,460
from the same manufacturer like this

00:02:01,490 --> 00:02:07,820
belt of serious I think you can only buy

00:02:04,460 --> 00:02:11,540
it in Japan these days and it's curious

00:02:07,820 --> 00:02:13,910
because it has the pen has no battery

00:02:11,540 --> 00:02:16,190
and it has tilt detection and I think it

00:02:13,910 --> 00:02:18,970
they're licensed in the technology from

00:02:16,190 --> 00:02:18,970
back I can

00:02:20,049 --> 00:02:27,579
there are also huge these various tablet

00:02:24,269 --> 00:02:31,920
for example this one is not supported by

00:02:27,579 --> 00:02:36,909
Linux at the moment and there are even

00:02:31,920 --> 00:02:40,060
table displays this one is 27 inches in

00:02:36,909 --> 00:02:42,489
diagonal and has still detection I don't

00:02:40,060 --> 00:02:43,329
even know if they can produces anything

00:02:42,489 --> 00:02:47,409
that big

00:02:43,329 --> 00:02:54,280
like any seen ticks or anything and this

00:02:47,409 --> 00:02:57,730
cost like just a thousand dollars so why

00:02:54,280 --> 00:02:59,379
why why do these things why make drivers

00:02:57,730 --> 00:03:04,120
for them and why care about them

00:02:59,379 --> 00:03:06,609
if Beckham is usually better so the

00:03:04,120 --> 00:03:09,310
reason is that plenty of people can't

00:03:06,609 --> 00:03:12,430
afford vacuum especially people in poor

00:03:09,310 --> 00:03:14,500
countries and people who just trying

00:03:12,430 --> 00:03:16,030
their hand or try to become an artist or

00:03:14,500 --> 00:03:20,590
just want to see what what is all about

00:03:16,030 --> 00:03:24,629
and see what what will happen students

00:03:20,590 --> 00:03:27,040
of course in schools but for me it was

00:03:24,629 --> 00:03:29,260
yeah and there's those the same people

00:03:27,040 --> 00:03:33,209
who would run Linux instead of buying

00:03:29,260 --> 00:03:36,760
windows and all there and all the

00:03:33,209 --> 00:03:43,650
graphics graphical applications that go

00:03:36,760 --> 00:03:47,889
there so for me it was mostly for fun so

00:03:43,650 --> 00:03:52,030
the DJ mint project was founded in 2008

00:03:47,889 --> 00:03:55,870
and it focuses on making the non vacant

00:03:52,030 --> 00:03:58,419
graphics tables work on Linux and that

00:03:55,870 --> 00:04:00,069
was mostly me but there were people

00:03:58,419 --> 00:04:05,879
coming and going and staying for a

00:04:00,069 --> 00:04:10,510
shorter a longer time so the story is a

00:04:05,879 --> 00:04:12,370
bit long one so I got a present in 2005

00:04:10,510 --> 00:04:16,000
my birthday

00:04:12,370 --> 00:04:17,709
and whoever gave me that present checked

00:04:16,000 --> 00:04:19,630
with the shop assistant if that's a what

00:04:17,709 --> 00:04:21,930
works on Linux and the shop assistant

00:04:19,630 --> 00:04:25,910
said it does so they gave me that tablet

00:04:21,930 --> 00:04:29,210
and obviously didn't so

00:04:25,910 --> 00:04:31,280
I got curious and I browsed the internet

00:04:29,210 --> 00:04:35,210
a little bit and I found somebody hacked

00:04:31,280 --> 00:04:36,590
a hate to the driver to work with wizard

00:04:35,210 --> 00:04:42,110
pen tables which are even older than

00:04:36,590 --> 00:04:45,710
mine from genius it was a student from

00:04:42,110 --> 00:04:47,150
Czech Republic and I took a look at it

00:04:45,710 --> 00:04:49,250
and I also hacked on it and tried to

00:04:47,150 --> 00:04:51,860
figure things out and I made me made it

00:04:49,250 --> 00:04:55,940
work with my tablet and a bunch of

00:04:51,860 --> 00:04:57,470
others which were very similar and me

00:04:55,940 --> 00:05:02,360
and him and a bunch of other people

00:04:57,470 --> 00:05:07,910
supported that driver for a while so

00:05:02,360 --> 00:05:10,940
this was my tablet but the thing was

00:05:07,910 --> 00:05:12,650
that basically that driver tried to cope

00:05:10,940 --> 00:05:15,110
with the with the garbage that kernel

00:05:12,650 --> 00:05:18,200
was sent in for that table because

00:05:15,110 --> 00:05:23,030
kernel got confused by the I what to the

00:05:18,200 --> 00:05:24,890
table told about itself and this driver

00:05:23,030 --> 00:05:26,780
still exists and it's on

00:05:24,890 --> 00:05:29,720
I think it's an Ubuntu launch pad right

00:05:26,780 --> 00:05:32,210
now and people still try using it and it

00:05:29,720 --> 00:05:33,920
still works with some tablets but these

00:05:32,210 --> 00:05:37,160
days it wouldn't work with many new

00:05:33,920 --> 00:05:38,870
tables very well I think so I thought

00:05:37,160 --> 00:05:40,730
perhaps ticks in the kernel would be the

00:05:38,870 --> 00:05:46,700
right approach and I create a distant

00:05:40,730 --> 00:05:49,669
project on SourceForge then so looking

00:05:46,700 --> 00:05:55,640
at the kernel I saw that I am indeed in

00:05:49,669 --> 00:05:59,240
the heat spec I saw that the but the

00:05:55,640 --> 00:06:01,010
kernel was some drivers in the kernel

00:05:59,240 --> 00:06:02,510
was basically just fixing up a little

00:06:01,010 --> 00:06:04,310
bit to report descriptors which is

00:06:02,510 --> 00:06:08,690
supposed to define in which way the

00:06:04,310 --> 00:06:10,820
tables reported the events so I thought

00:06:08,690 --> 00:06:12,530
perhaps I can just you know instead of

00:06:10,820 --> 00:06:17,120
fixing them up a little just to write

00:06:12,530 --> 00:06:18,950
them so I had to figure out how these

00:06:17,120 --> 00:06:21,020
reporters crypsis work and there were

00:06:18,950 --> 00:06:22,550
basically no editors for those report

00:06:21,020 --> 00:06:25,400
descriptors you had to craft them

00:06:22,550 --> 00:06:27,800
yourself or used in official report the

00:06:25,400 --> 00:06:30,260
script tool which is not that good and

00:06:27,800 --> 00:06:32,660
when the works and runs on Windows it

00:06:30,260 --> 00:06:34,940
could work on Linux but wasn't that good

00:06:32,660 --> 00:06:36,860
and wasn't obvious so by doing that so I

00:06:34,940 --> 00:06:39,770
learned a lot about report descriptors

00:06:36,860 --> 00:06:42,440
and I was able to proceed so I made also

00:06:39,770 --> 00:06:44,930
a bunch of tools to dump the data from

00:06:42,440 --> 00:06:48,259
those tablets and I started hacking on

00:06:44,930 --> 00:06:49,789
the kernel so I didn't have the money to

00:06:48,259 --> 00:06:52,729
buy all those tables so I went around

00:06:49,789 --> 00:06:54,289
the computer shops in my city and I

00:06:52,729 --> 00:06:59,810
asked if I can try them with my table

00:06:54,289 --> 00:07:01,970
with my laptop so I took some dumps and

00:06:59,810 --> 00:07:04,629
I went to home went home then my drivers

00:07:01,970 --> 00:07:07,430
and came back and asked him to try again

00:07:04,629 --> 00:07:16,190
so I made a bunch of them working this

00:07:07,430 --> 00:07:18,800
way and general advice and dusting thing

00:07:16,190 --> 00:07:20,599
just go into a big shop like you know

00:07:18,800 --> 00:07:25,639
Nader marked actually meant to a MIDI

00:07:20,599 --> 00:07:28,639
mark or you know like you know branch

00:07:25,639 --> 00:07:31,009
shops like the French franchises they

00:07:28,639 --> 00:07:32,479
don't usually care much I said I want to

00:07:31,009 --> 00:07:35,120
try this day but can I try and they have

00:07:32,479 --> 00:07:36,860
them on display like wine there so you

00:07:35,120 --> 00:07:38,810
just plug them in or even do it with

00:07:36,860 --> 00:07:47,180
another device like any input device

00:07:38,810 --> 00:07:49,159
most likely so yeah after this I well I

00:07:47,180 --> 00:07:50,599
was publishing those kernel patches and

00:07:49,159 --> 00:07:53,900
them saying that you can make them work

00:07:50,599 --> 00:07:56,509
this way and I had to build my own

00:07:53,900 --> 00:07:58,819
kernels or like put the patches out

00:07:56,509 --> 00:08:00,949
because there was the only that way so

00:07:58,819 --> 00:08:03,139
then people started coming asking if

00:08:00,949 --> 00:08:06,289
they yeah I can make other tables work

00:08:03,139 --> 00:08:08,690
and I talked to some people like already

00:08:06,289 --> 00:08:11,300
we exchanged emails and made them work I

00:08:08,690 --> 00:08:12,710
send them patches or upload the kernel

00:08:11,300 --> 00:08:14,690
somewhere and they would test it and

00:08:12,710 --> 00:08:17,060
then we would come back and then test it

00:08:14,690 --> 00:08:20,000
it was obviously pretty tiring sometimes

00:08:17,060 --> 00:08:22,159
I also wrote to the manufacturers of

00:08:20,000 --> 00:08:23,930
those some of those like the actual OMS

00:08:22,159 --> 00:08:26,300
and I got the response from balled up

00:08:23,930 --> 00:08:32,719
and they sent me three tables so I made

00:08:26,300 --> 00:08:35,209
drivers for those in 2014 it became

00:08:32,719 --> 00:08:37,219
obvious that SourceForge wasn't a very

00:08:35,209 --> 00:08:39,829
good place to host the open-source

00:08:37,219 --> 00:08:42,860
project anymore and they their service

00:08:39,829 --> 00:08:45,649
deteriorated and what's going down so I

00:08:42,860 --> 00:08:47,660
moved to github and then a nice thing

00:08:45,649 --> 00:08:50,360
happened the kernel started supporting

00:08:47,660 --> 00:08:53,930
out of three hit table it's a drivers

00:08:50,360 --> 00:08:56,660
button and asked for a little bit more

00:08:53,930 --> 00:08:59,000
so that I can do my thing with them so

00:08:56,660 --> 00:09:02,150
became possible to make an out of three

00:08:59,000 --> 00:09:03,920
driver package which has did and got

00:09:02,150 --> 00:09:08,510
more tables supported and some people

00:09:03,920 --> 00:09:11,090
came and contributed so by 2016 that

00:09:08,510 --> 00:09:14,750
became like you know same thing all over

00:09:11,090 --> 00:09:16,670
again like all those tables are in some

00:09:14,750 --> 00:09:19,580
way the same at least they look to me

00:09:16,670 --> 00:09:21,740
already so I decided to perhaps I should

00:09:19,580 --> 00:09:24,470
take a lick my leaf from it and I you

00:09:21,740 --> 00:09:26,450
wrote a bit of post on the internet and

00:09:24,470 --> 00:09:29,870
said like okay I'm stopped in doing this

00:09:26,450 --> 00:09:33,890
so if anybody wishes to step in and take

00:09:29,870 --> 00:09:36,020
over would be nice and I can help you so

00:09:33,890 --> 00:09:37,400
several people showed up and said like

00:09:36,020 --> 00:09:39,410
they are really interested and they

00:09:37,400 --> 00:09:41,000
would like to help but I told them what

00:09:39,410 --> 00:09:42,950
they can start looking into but I

00:09:41,000 --> 00:09:45,530
haven't heard from them since

00:09:42,950 --> 00:09:47,060
maybe I one person consistent person

00:09:45,530 --> 00:09:50,750
brought to me several times but then

00:09:47,060 --> 00:09:52,430
they I should disappear too but at the

00:09:50,750 --> 00:09:54,740
same time there were people come in like

00:09:52,430 --> 00:09:57,650
and contributing for their own tablets

00:09:54,740 --> 00:10:00,800
or just just doing their thing so in

00:09:57,650 --> 00:10:02,660
2017 one Japanese company wrote to me

00:10:00,800 --> 00:10:05,450
and said like you know we are selling

00:10:02,660 --> 00:10:07,520
those cheap pcs with these cheap tablets

00:10:05,450 --> 00:10:10,040
running Linux to people who don't have

00:10:07,520 --> 00:10:11,390
much money in Japan and they really said

00:10:10,040 --> 00:10:14,420
that you stop doing this can you

00:10:11,390 --> 00:10:17,660
continue and we'll help you with the

00:10:14,420 --> 00:10:19,490
help of one of the OEM so I thought

00:10:17,660 --> 00:10:22,310
about it for a while I said ok we can

00:10:19,490 --> 00:10:24,110
think of something and then later there

00:10:22,310 --> 00:10:25,910
was another company who needed the

00:10:24,110 --> 00:10:29,000
driver for a specific table it for their

00:10:25,910 --> 00:10:30,500
product they also offered like they were

00:10:29,000 --> 00:10:34,220
also agreed to pay me money and then I

00:10:30,500 --> 00:10:37,400
thought well having money for this work

00:10:34,220 --> 00:10:40,280
is nice and and I thought maybe I should

00:10:37,400 --> 00:10:42,320
promote it thing a little more so I put

00:10:40,280 --> 00:10:45,710
up patreon and the people started coming

00:10:42,320 --> 00:10:51,830
in giving me some money and Here I am

00:10:45,710 --> 00:10:54,940
promoting my project so why don't this

00:10:51,830 --> 00:10:54,940
table it's work right away

00:10:59,970 --> 00:11:04,840
so first of all most of the

00:11:03,820 --> 00:11:07,320
manufacturers they care about

00:11:04,840 --> 00:11:10,420
windows-only obviously and windows

00:11:07,320 --> 00:11:12,610
generic he aged human interface device

00:11:10,420 --> 00:11:17,350
driver doesn't work exactly like the one

00:11:12,610 --> 00:11:20,710
in linux and it's not that good in some

00:11:17,350 --> 00:11:22,780
respects I think the human interface

00:11:20,710 --> 00:11:28,210
device specification is complex and

00:11:22,780 --> 00:11:30,610
vague and it doesn't help very much

00:11:28,210 --> 00:11:34,150
people who just want to make a device or

00:11:30,610 --> 00:11:36,310
write drivers just like from nothing and

00:11:34,150 --> 00:11:37,930
OEMs have no time for that especially

00:11:36,310 --> 00:11:40,720
those in Asia they just want to push to

00:11:37,930 --> 00:11:43,270
push the devices and made them as good

00:11:40,720 --> 00:11:45,850
enough to be sold to Windows users and

00:11:43,270 --> 00:11:47,490
that was also the the idea in the Linux

00:11:45,850 --> 00:11:53,350
community that Viacom is the only

00:11:47,490 --> 00:11:55,570
graphic stable there is so one of the

00:11:53,350 --> 00:12:00,490
main things that I noticed regarding the

00:11:55,570 --> 00:12:02,500
generic hid driver is that those tables

00:12:00,490 --> 00:12:04,720
they often have several report IDs and a

00:12:02,500 --> 00:12:08,440
report descriptor and for each to port

00:12:04,720 --> 00:12:11,590
ID day sometimes have similar devices

00:12:08,440 --> 00:12:13,960
reporting the same the same data and

00:12:11,590 --> 00:12:17,770
Windows apparently has no problem with

00:12:13,960 --> 00:12:21,940
that but Linux tries to do its own thing

00:12:17,770 --> 00:12:25,840
and it instead of reporting them is the

00:12:21,940 --> 00:12:28,900
same event code to the user space they

00:12:25,840 --> 00:12:31,810
kind of see repeated usage in the report

00:12:28,900 --> 00:12:34,810
descriptor and they say well we have to

00:12:31,810 --> 00:12:36,760
separate those so let's just add some

00:12:34,810 --> 00:12:38,290
number to the event code and let's

00:12:36,760 --> 00:12:40,360
report them with some weird event code

00:12:38,290 --> 00:12:41,650
which doesn't make sense but we'll get

00:12:40,360 --> 00:12:45,180
some data to the user space that

00:12:41,650 --> 00:12:48,370
actually what let us in visit pen driver

00:12:45,180 --> 00:12:50,080
get that data but on the other hand

00:12:48,370 --> 00:12:52,240
perhaps you wouldn't need that will

00:12:50,080 --> 00:12:55,120
spend driver maybe it could be done some

00:12:52,240 --> 00:12:58,390
other way anyway it's so to work around

00:12:55,120 --> 00:13:00,070
that there is a quirk and the generic

00:12:58,390 --> 00:13:02,980
key driver which is called hit quirk

00:13:00,070 --> 00:13:04,630
mouse input which basically creates an

00:13:02,980 --> 00:13:06,670
event device for each of the report

00:13:04,630 --> 00:13:08,800
descriptors in for each the report IDs

00:13:06,670 --> 00:13:09,939
in the report descriptor and the many

00:13:08,800 --> 00:13:12,549
devices required

00:13:09,939 --> 00:13:15,339
Fix in some of those some of the devices

00:13:12,549 --> 00:13:29,349
were fixed by just adding that quirk to

00:13:15,339 --> 00:13:30,759
the kernel so what I noticed in they

00:13:29,349 --> 00:13:33,309
report descriptors of some of those

00:13:30,759 --> 00:13:36,099
tablets as they became bigger and bigger

00:13:33,309 --> 00:13:38,999
and they gained resolution is that the

00:13:36,099 --> 00:13:44,289
manufacturer started limits in their the

00:13:38,999 --> 00:13:47,919
extents to 16-bit signed integer so they

00:13:44,289 --> 00:13:50,139
don't go higher than 32 k and that was

00:13:47,919 --> 00:13:51,639
repeated across several models so I

00:13:50,139 --> 00:13:54,459
suspect there is some problem with the

00:13:51,639 --> 00:13:56,199
default look with the generic hid driver

00:13:54,459 --> 00:14:00,489
in Windows which prevents them from

00:13:56,199 --> 00:14:04,869
using 32-bit integers which are you can

00:14:00,489 --> 00:14:06,939
do that in report descriptor and if you

00:14:04,869 --> 00:14:10,539
want to have a higher solution you will

00:14:06,939 --> 00:14:12,669
have to therefore write a custom driver

00:14:10,539 --> 00:14:16,029
because the generic hit driver cannot

00:14:12,669 --> 00:14:18,489
handle that apparently so then there's

00:14:16,029 --> 00:14:23,319
the human interface device specification

00:14:18,489 --> 00:14:26,289
and it's 97 pages of description of the

00:14:23,319 --> 00:14:28,599
report descriptor language which allows

00:14:26,289 --> 00:14:32,049
you to specify which bits will mean this

00:14:28,599 --> 00:14:36,759
or that and how to parse that data it is

00:14:32,049 --> 00:14:40,149
rather vague again and it's you should

00:14:36,759 --> 00:14:41,679
know how to use it before you can you

00:14:40,149 --> 00:14:45,699
can do something with it huh you should

00:14:41,679 --> 00:14:48,729
know what you want to say rather and

00:14:45,699 --> 00:14:52,179
that's why there are 767 pages

00:14:48,729 --> 00:14:57,959
describing how to define specific

00:14:52,179 --> 00:15:03,189
devices like CRT monitor controls or

00:14:57,959 --> 00:15:06,609
joysticks or mice or an O medical

00:15:03,189 --> 00:15:08,589
devices or keypads or and everything

00:15:06,609 --> 00:15:11,470
everything for each of those there is a

00:15:08,589 --> 00:15:13,179
few pages or document describing how you

00:15:11,470 --> 00:15:14,709
should write use that language to

00:15:13,179 --> 00:15:18,819
describe that device and what these

00:15:14,709 --> 00:15:22,449
particular bits will mean so eight of

00:15:18,819 --> 00:15:23,410
those pages define digitizers or

00:15:22,449 --> 00:15:25,749
graphics table

00:15:23,410 --> 00:15:28,389
which is not much if you consider that

00:15:25,749 --> 00:15:35,429
three of them are examples of report

00:15:28,389 --> 00:15:38,259
descriptors and it looks like the USB

00:15:35,429 --> 00:15:40,919
implementers forum is not working here

00:15:38,259 --> 00:15:43,629
very violent it looks like being

00:15:40,919 --> 00:15:46,299
designers of those drivers or devices

00:15:43,629 --> 00:15:48,519
they first make a driver than the device

00:15:46,299 --> 00:15:51,369
and then just describe it and submit

00:15:48,519 --> 00:15:53,139
that document implemented forum so that

00:15:51,369 --> 00:15:56,709
they can get a certification back and

00:15:53,139 --> 00:15:59,019
they pay they pay for that so it's hard

00:15:56,709 --> 00:16:00,729
to to argue with them from the

00:15:59,019 --> 00:16:03,189
perspective of the implementers forum

00:16:00,729 --> 00:16:07,619
but it's just my guess I'm not a member

00:16:03,189 --> 00:16:09,879
you know is be implemented for them so

00:16:07,619 --> 00:16:14,769
they officially report the scripted tool

00:16:09,879 --> 00:16:19,929
that the USB org has runs on Windows as

00:16:14,769 --> 00:16:22,649
I said before and it's it is confusing

00:16:19,929 --> 00:16:24,899
to use it doesn't work very well and

00:16:22,649 --> 00:16:27,970
there's at least one case where it

00:16:24,899 --> 00:16:31,889
misinterpreted specification and it you

00:16:27,970 --> 00:16:36,669
know stores the unit exponent

00:16:31,889 --> 00:16:38,679
incorrectly and as a result many devices

00:16:36,669 --> 00:16:40,689
store it incorrectly in their report

00:16:38,679 --> 00:16:42,609
descriptors and now this is a standard D

00:16:40,689 --> 00:16:47,799
factor with differs from actual

00:16:42,609 --> 00:16:50,850
specification so since the USB

00:16:47,799 --> 00:16:53,229
implementers forum is a consortium of

00:16:50,850 --> 00:16:55,299
manufacturers of devices and they are

00:16:53,229 --> 00:16:56,889
all paying members and they Pat each

00:16:55,299 --> 00:17:02,489
other on the back to certify those

00:16:56,889 --> 00:17:04,629
devices users don't mean from that and

00:17:02,489 --> 00:17:06,819
implementers like the third-party

00:17:04,629 --> 00:17:14,439
implementers of the drivers have a hard

00:17:06,819 --> 00:17:16,449
time so oh boy yeah so these Asian

00:17:14,439 --> 00:17:18,730
original equipment manufacturers the

00:17:16,449 --> 00:17:24,370
they have a hard time following all that

00:17:18,730 --> 00:17:27,069
and they don't so so they said already

00:17:24,370 --> 00:17:28,419
the repeated use their edges in the same

00:17:27,069 --> 00:17:30,340
report descriptor and the different

00:17:28,419 --> 00:17:34,990
report IDs is what causing the problem

00:17:30,340 --> 00:17:37,330
Linux then it's not clear from this this

00:17:34,990 --> 00:17:40,090
hid specification how you should report

00:17:37,330 --> 00:17:42,400
buttons on depend there is an example

00:17:40,090 --> 00:17:45,880
with just I think one button on the pen

00:17:42,400 --> 00:17:48,100
but if you have to you know know what to

00:17:45,880 --> 00:17:49,750
do and all those tablet in the fractures

00:17:48,100 --> 00:17:53,080
they just try to emulate the mouse so

00:17:49,750 --> 00:17:54,610
they have two buttons on the pen and one

00:17:53,080 --> 00:17:57,250
company tries to report it this way

00:17:54,610 --> 00:18:01,090
another one that way which doesn't work

00:17:57,250 --> 00:18:04,860
very well then buttons on the frame of

00:18:01,090 --> 00:18:07,300
the tablet they are reported usually a

00:18:04,860 --> 00:18:09,190
general-purpose keyboard and when you

00:18:07,300 --> 00:18:11,350
press the button the device generates

00:18:09,190 --> 00:18:14,520
scan code for the keyboard that like

00:18:11,350 --> 00:18:17,920
says like and do its control set and

00:18:14,520 --> 00:18:20,170
zoom in works in Photoshop for this key

00:18:17,920 --> 00:18:22,060
and doesn't work in some other one and

00:18:20,170 --> 00:18:23,680
change brush is the special key

00:18:22,060 --> 00:18:27,160
combination in Photoshop again or in

00:18:23,680 --> 00:18:29,200
some other application that's all in the

00:18:27,160 --> 00:18:30,970
default mode without initializing

00:18:29,200 --> 00:18:31,890
tablets but this is what what did they

00:18:30,970 --> 00:18:35,890
do

00:18:31,890 --> 00:18:37,810
and the because of the mission because

00:18:35,890 --> 00:18:40,840
they don't understand the specification

00:18:37,810 --> 00:18:42,670
very well because of the you know their

00:18:40,840 --> 00:18:45,280
official report the scripts at all being

00:18:42,670 --> 00:18:47,020
a little broken there at like fun stuff

00:18:45,280 --> 00:18:51,040
like the coordinates being reported in

00:18:47,020 --> 00:18:53,170
cubic tera inches independence oh yeah

00:18:51,040 --> 00:18:56,500
it basically says and report descriptor

00:18:53,170 --> 00:18:58,300
cubic tera inches tens of cubic to

00:18:56,500 --> 00:18:59,590
ranges but the tens of cubic Thierry

00:18:58,300 --> 00:19:01,180
inches that comes from the report

00:18:59,590 --> 00:19:03,370
descriptor tool and cubic inches is

00:19:01,180 --> 00:19:05,610
basically they thought maybe that makes

00:19:03,370 --> 00:19:07,960
sense I don't know I think they try to

00:19:05,610 --> 00:19:12,040
scale the unit somehow and there

00:19:07,960 --> 00:19:13,810
something work and but then some people

00:19:12,040 --> 00:19:15,160
just give up and they say oh I didn't

00:19:13,810 --> 00:19:18,130
care about your poor descriptor just

00:19:15,160 --> 00:19:20,020
stuff it with you know vendor usages

00:19:18,130 --> 00:19:22,180
vendor stuff and everything they don't

00:19:20,020 --> 00:19:28,030
just don't make sense to hid driver at

00:19:22,180 --> 00:19:29,950
all and then yeah there's some more so

00:19:28,030 --> 00:19:32,310
tablets in the default mode when you

00:19:29,950 --> 00:19:35,770
plug your tablet in they become like

00:19:32,310 --> 00:19:38,350
crippled and/or useless because they

00:19:35,770 --> 00:19:42,850
require initialization to get the full

00:19:38,350 --> 00:19:44,890
resolution to get the buttons reported

00:19:42,850 --> 00:19:48,010
noticed in all scan codes but as generic

00:19:44,890 --> 00:19:49,660
buttons and you can like some some of

00:19:48,010 --> 00:19:51,010
those manufacturers they use some same

00:19:49,660 --> 00:19:53,200
methods like the scent of

00:19:51,010 --> 00:19:55,690
she report that at least something

00:19:53,200 --> 00:19:57,280
something that would would be according

00:19:55,690 --> 00:19:59,860
to hid specification but some others

00:19:57,280 --> 00:20:01,600
like you see logic day you have to

00:19:59,860 --> 00:20:04,300
request a string descriptor and there

00:20:01,600 --> 00:20:06,130
and the response you get binary data

00:20:04,300 --> 00:20:08,860
instead of a string and in that brain

00:20:06,130 --> 00:20:11,320
binary data you have the table at

00:20:08,860 --> 00:20:13,570
logical extends resolution number of

00:20:11,320 --> 00:20:15,400
buttons and all that stuff and you can

00:20:13,570 --> 00:20:16,840
request other thing descriptors and you

00:20:15,400 --> 00:20:20,350
get model numbers and something like

00:20:16,840 --> 00:20:22,000
that and also when you get the report

00:20:20,350 --> 00:20:23,920
descriptive with the parameters you

00:20:22,000 --> 00:20:28,090
somehow enable the table in the food

00:20:23,920 --> 00:20:29,860
fully functional mode and after you

00:20:28,090 --> 00:20:32,020
serve some of those tables after you

00:20:29,860 --> 00:20:33,850
initialize them they start reporting the

00:20:32,020 --> 00:20:36,280
full data and everything but it is no

00:20:33,850 --> 00:20:38,200
longer in the format which would be

00:20:36,280 --> 00:20:40,030
suitable for describing with the report

00:20:38,200 --> 00:20:40,690
descriptor so it's not a lot not any

00:20:40,030 --> 00:20:47,530
longer

00:20:40,690 --> 00:20:49,420
according to hid specification so the

00:20:47,530 --> 00:20:51,190
mentality of vacum is the only graphics

00:20:49,420 --> 00:20:53,800
table at least two people not testing

00:20:51,190 --> 00:20:57,400
any other tablets and I've seen

00:20:53,800 --> 00:21:00,190
applications to kids and drivers getting

00:20:57,400 --> 00:21:04,300
broken over time in various aspects with

00:21:00,190 --> 00:21:08,320
those tables and the table it like which

00:21:04,300 --> 00:21:10,930
has steel detection basically the stack

00:21:08,320 --> 00:21:12,310
but when I got the first one the you

00:21:10,930 --> 00:21:15,000
know stack wasn't prepared for anything

00:21:12,310 --> 00:21:17,620
except way command the whole stack

00:21:15,000 --> 00:21:20,770
didn't actually care about what those

00:21:17,620 --> 00:21:22,690
numbers were regarded sealed and they

00:21:20,770 --> 00:21:24,900
just somehow adjusted their applications

00:21:22,690 --> 00:21:27,940
and everything and when I asked around

00:21:24,900 --> 00:21:30,100
what does that mean and everybody said

00:21:27,940 --> 00:21:32,170
well I don't know maybe angled maybe

00:21:30,100 --> 00:21:34,240
something and actually tried to measure

00:21:32,170 --> 00:21:37,030
input from one of the vacant tables and

00:21:34,240 --> 00:21:38,710
it was interesting because there was

00:21:37,030 --> 00:21:40,990
some certainly some processing done

00:21:38,710 --> 00:21:45,460
somewhere on the way in the bacon steak

00:21:40,990 --> 00:21:47,770
and I had to adjust the input from that

00:21:45,460 --> 00:21:53,440
one table which reported filled to look

00:21:47,770 --> 00:21:55,690
like lakum so that it would work then

00:21:53,440 --> 00:21:58,450
there is this gnome

00:21:55,690 --> 00:21:59,830
bacon table at configuration two and

00:21:58,450 --> 00:22:01,260
already by the name you know where that

00:21:59,830 --> 00:22:04,169
is going

00:22:01,260 --> 00:22:06,539
there is no

00:22:04,169 --> 00:22:08,789
generic you know like just the table

00:22:06,539 --> 00:22:13,380
configuration to which is it any good

00:22:08,789 --> 00:22:15,200
only vacant and another problem with it

00:22:13,380 --> 00:22:17,669
is that it uses leave vacant which

00:22:15,200 --> 00:22:19,799
doesn't want to work with tables to just

00:22:17,669 --> 00:22:22,649
come like so they don't say hi I'm the

00:22:19,799 --> 00:22:25,429
new tablet you have to add entry to the

00:22:22,649 --> 00:22:27,419
library database so that it would

00:22:25,429 --> 00:22:29,760
recognize the table and allow you to

00:22:27,419 --> 00:22:31,559
configure it even even if you use the

00:22:29,760 --> 00:22:35,760
vacant driver on top of the kernel

00:22:31,559 --> 00:22:37,230
driver like the vacant ex-work driver it

00:22:35,760 --> 00:22:39,899
will still say I don't know anything

00:22:37,230 --> 00:22:41,610
there is no table connected but you can

00:22:39,899 --> 00:22:43,440
configure that table then using the

00:22:41,610 --> 00:22:47,610
command-line tool which is not

00:22:43,440 --> 00:22:49,730
convenient for everyone so if you work

00:22:47,610 --> 00:22:53,250
on many of those on a driver or

00:22:49,730 --> 00:22:55,080
application or on a toolkit kept a

00:22:53,250 --> 00:22:56,519
couple of those tables and just keep

00:22:55,080 --> 00:23:02,130
them around and test from time to time

00:22:56,519 --> 00:23:05,880
it will help so we have the count of

00:23:02,130 --> 00:23:10,590
three driver package just called

00:23:05,880 --> 00:23:12,510
agreement kernel drivers and it's very

00:23:10,590 --> 00:23:14,580
nice to have that because it's much

00:23:12,510 --> 00:23:16,080
easier to get it to users and for users

00:23:14,580 --> 00:23:18,059
it's much easier to install it than a

00:23:16,080 --> 00:23:21,419
full colonel or patches to the kernel

00:23:18,059 --> 00:23:23,399
and it's faster to develop and it's also

00:23:21,419 --> 00:23:26,039
easier for like people who've never

00:23:23,399 --> 00:23:27,750
coded for Colonel just get it and start

00:23:26,039 --> 00:23:31,769
hacking at it and just say make and make

00:23:27,750 --> 00:23:33,450
install and then you can play it is a

00:23:31,769 --> 00:23:36,889
bit of a hassle to sync with upstream

00:23:33,450 --> 00:23:41,820
because some parts have to be different

00:23:36,889 --> 00:23:44,580
and we only keep modules which we need

00:23:41,820 --> 00:23:47,549
there which we have newer drivers for

00:23:44,580 --> 00:23:50,970
and we try to keep all the difference

00:23:47,549 --> 00:23:52,169
minimal although when you need to do

00:23:50,970 --> 00:23:54,539
like some kind of refactoring that

00:23:52,169 --> 00:23:58,769
becomes hearing which is the case right

00:23:54,539 --> 00:24:00,179
now we have to copy some private

00:23:58,769 --> 00:24:01,950
definitions from the kernel and that's

00:24:00,179 --> 00:24:04,740
some compatibility markers but otherwise

00:24:01,950 --> 00:24:07,289
it's possible and general very nice to

00:24:04,740 --> 00:24:12,870
users and developers there is one one

00:24:07,289 --> 00:24:15,490
thing one trick to it in that if the if

00:24:12,870 --> 00:24:18,340
your

00:24:15,490 --> 00:24:21,640
if your custom driver that is out of

00:24:18,340 --> 00:24:23,560
three already has custom driver in the

00:24:21,640 --> 00:24:25,570
stock kernel then you can just use

00:24:23,560 --> 00:24:27,640
modprobe to override it and say like

00:24:25,570 --> 00:24:31,690
take refer the driver from the extra

00:24:27,640 --> 00:24:35,710
directory or out of three driver then it

00:24:31,690 --> 00:24:39,000
works fine and but otherwise the generic

00:24:35,710 --> 00:24:41,830
hid driver has a list of those cut

00:24:39,000 --> 00:24:43,930
vendor and product IDs which have a

00:24:41,830 --> 00:24:47,050
custom driver and if your tablet is not

00:24:43,930 --> 00:24:49,510
there then the generic driver never

00:24:47,050 --> 00:24:50,680
let's go and just says like okay I'll be

00:24:49,510 --> 00:24:55,660
handling it then since there are no

00:24:50,680 --> 00:24:58,390
custom drivers so we have a bunch of you

00:24:55,660 --> 00:25:02,680
dev rules in the script which checks if

00:24:58,390 --> 00:25:04,630
there is a out of three driver installed

00:25:02,680 --> 00:25:09,390
which handles those tables and then you

00:25:04,630 --> 00:25:12,780
binds it using the Assessor files so

00:25:09,390 --> 00:25:12,780
make them work

00:25:17,500 --> 00:25:24,370
I obviously cannot describe all the ways

00:25:21,640 --> 00:25:26,130
which you can go to make your table at

00:25:24,370 --> 00:25:30,250
work or somebody else's table at work

00:25:26,130 --> 00:25:36,040
but this is one general way which might

00:25:30,250 --> 00:25:38,050
work in many cases so first of all you

00:25:36,040 --> 00:25:41,500
have to find out your device parameters

00:25:38,050 --> 00:25:43,660
what it can do what it can report then

00:25:41,500 --> 00:25:46,150
you have to figure out if there is any

00:25:43,660 --> 00:25:50,110
initialization necessary and then go

00:25:46,150 --> 00:25:52,420
back maybe one step and and repeat then

00:25:50,110 --> 00:25:54,300
you I would recommend going with write

00:25:52,420 --> 00:25:56,770
and report descriptor instead of

00:25:54,300 --> 00:26:00,370
creating all the event codes for

00:25:56,770 --> 00:26:02,650
yourself in the driver and you might

00:26:00,370 --> 00:26:03,910
need to tweak some input bits so that

00:26:02,650 --> 00:26:07,030
what they would feed the report

00:26:03,910 --> 00:26:10,150
descriptor better and they and in the

00:26:07,030 --> 00:26:15,580
kernel events tidy up event devices and

00:26:10,150 --> 00:26:17,440
contribute so here's an in detail so to

00:26:15,580 --> 00:26:20,770
find out device parameters you can just

00:26:17,440 --> 00:26:23,740
dump the reports that the tablet sends

00:26:20,770 --> 00:26:25,240
and see what the what the possibilities

00:26:23,740 --> 00:26:26,740
are what happens when you press this

00:26:25,240 --> 00:26:28,390
button on that button and maybe open

00:26:26,740 --> 00:26:31,560
this way or that way or press it and

00:26:28,390 --> 00:26:35,140
everything that's very you know

00:26:31,560 --> 00:26:38,050
interactive and helps a lot this way you

00:26:35,140 --> 00:26:41,410
can find the maximum minimum coordinates

00:26:38,050 --> 00:26:45,670
and the the pressure range and the tilt

00:26:41,410 --> 00:26:47,800
if your tablet has it if you if this

00:26:45,670 --> 00:26:49,570
stable will require installation then

00:26:47,800 --> 00:26:51,250
you might have problems like your

00:26:49,570 --> 00:26:53,020
resolution will be limited and your

00:26:51,250 --> 00:26:54,220
range that you find this way will be

00:26:53,020 --> 00:26:56,890
different then you need to do it

00:26:54,220 --> 00:26:59,980
initialization and then check it again

00:26:56,890 --> 00:27:03,130
and then also read the the seller or

00:26:59,980 --> 00:27:06,370
manufacturer specs because they might

00:27:03,130 --> 00:27:08,740
sometimes be different with what you see

00:27:06,370 --> 00:27:10,960
because you haven't initialized it or

00:27:08,740 --> 00:27:13,240
missed something but they can sometimes

00:27:10,960 --> 00:27:16,960
be different because manufacturer is you

00:27:13,240 --> 00:27:20,490
know a little line a little bit like the

00:27:16,960 --> 00:27:26,440
pressure resolution and sometimes or

00:27:20,490 --> 00:27:28,750
something happens and then you will need

00:27:26,440 --> 00:27:30,400
also to find the drawing area size so

00:27:28,750 --> 00:27:32,109
that you can derive the resolution from

00:27:30,400 --> 00:27:35,350
that

00:27:32,109 --> 00:27:39,230
the physical resolution how many lines

00:27:35,350 --> 00:27:44,210
so here's an example of the dump made

00:27:39,230 --> 00:27:46,039
the tears be hit dumped on the for it he

00:27:44,210 --> 00:27:47,779
on tablet and default more does this he

00:27:46,039 --> 00:27:50,749
would plug bug attain without a driver

00:27:47,779 --> 00:27:54,470
and you can see that the pen events

00:27:50,749 --> 00:27:56,509
reported with report ID nine and there

00:27:54,470 --> 00:27:59,899
is there a buttons reporter dislike this

00:27:56,509 --> 00:28:03,950
one here if you can see one here is

00:27:59,899 --> 00:28:05,779
basically meaning that it depends heap

00:28:03,950 --> 00:28:09,909
is on the table at and touching and

00:28:05,779 --> 00:28:12,440
pressing but there is no proximity bid

00:28:09,909 --> 00:28:16,220
table at place it doesn't save and pen

00:28:12,440 --> 00:28:19,700
enters the comes close to the table and

00:28:16,220 --> 00:28:22,639
tablet can start reporting valid data

00:28:19,700 --> 00:28:26,989
and that is important for many drivers

00:28:22,639 --> 00:28:28,879
right now earlier the the graphics spec

00:28:26,989 --> 00:28:31,909
and the whole like the whole input stack

00:28:28,879 --> 00:28:34,070
used to work with just the stables

00:28:31,909 --> 00:28:36,230
without proximity reports but nowadays

00:28:34,070 --> 00:28:40,909
say here reports that it doesn't work

00:28:36,230 --> 00:28:45,049
anymore okay

00:28:40,909 --> 00:28:48,320
something good nice well okay so you can

00:28:45,049 --> 00:28:50,239
see there are x coordinates Y

00:28:48,320 --> 00:28:51,950
coordinates and the pressure that is

00:28:50,239 --> 00:28:54,619
pretty easy but you have to remember

00:28:51,950 --> 00:29:00,950
that this is all little endian so the

00:28:54,619 --> 00:29:02,480
lowest byte come first so for if your

00:29:00,950 --> 00:29:04,309
tablet already reports everything you

00:29:02,480 --> 00:29:07,970
need you don't you might not need to do

00:29:04,309 --> 00:29:09,440
any initialization and you just need to

00:29:07,970 --> 00:29:11,210
check if you have the resolution and

00:29:09,440 --> 00:29:12,940
frame controls reported the way you want

00:29:11,210 --> 00:29:15,980
them to make a driver at the but if not

00:29:12,940 --> 00:29:18,830
many tables nowadays are made using user

00:29:15,980 --> 00:29:22,399
logic chipsets and it's a good bet to

00:29:18,830 --> 00:29:26,149
try the you so logic probe to from from

00:29:22,399 --> 00:29:28,429
our github organization and if it gives

00:29:26,149 --> 00:29:30,139
you any you know meaningful results and

00:29:28,429 --> 00:29:31,879
if you see that the reports change after

00:29:30,139 --> 00:29:35,749
you run this tool that means you're in

00:29:31,879 --> 00:29:39,649
luck and if that doesn't happen you can

00:29:35,749 --> 00:29:42,409
try the vault up and kai methods which I

00:29:39,649 --> 00:29:45,909
haven't seen quite a while so probably

00:29:42,409 --> 00:29:45,909
they are not used anymore by any

00:29:45,919 --> 00:29:50,210
otherwise you will have to see the USB

00:29:48,049 --> 00:29:51,980
traffic from the windows driver and try

00:29:50,210 --> 00:29:57,249
to figure out what's going on how what

00:29:51,980 --> 00:30:02,210
of those requests initializing the table

00:29:57,249 --> 00:30:05,840
so after initialization after

00:30:02,210 --> 00:30:08,149
initialization you might see completely

00:30:05,840 --> 00:30:10,639
different well slightly different

00:30:08,149 --> 00:30:13,279
picture in this case you see it for

00:30:10,639 --> 00:30:15,019
example for the for another key on

00:30:13,279 --> 00:30:17,419
tablet but it's similar for many of them

00:30:15,019 --> 00:30:18,019
you see that the port ID has changed you

00:30:17,419 --> 00:30:21,110
see that

00:30:18,019 --> 00:30:24,619
well the accordance can get another is

00:30:21,110 --> 00:30:29,960
another extent extends like go higher

00:30:24,619 --> 00:30:35,330
and you can see in this case that there

00:30:29,960 --> 00:30:38,559
now is a proximity report here and the

00:30:35,330 --> 00:30:41,690
pen goes out of proximity so this year

00:30:38,559 --> 00:30:44,299
the person lifted the pens this button

00:30:41,690 --> 00:30:46,369
got released but then they removed it

00:30:44,299 --> 00:30:50,179
from the from the table completely and

00:30:46,369 --> 00:30:52,190
this changed but in this case the

00:30:50,179 --> 00:30:57,499
proximity bid goes one when you remove

00:30:52,190 --> 00:31:00,080
the pen so it's kind of inverted and

00:30:57,499 --> 00:31:05,049
that's I think it's against what the ad

00:31:00,080 --> 00:31:08,350
specs describe so next I would suggest

00:31:05,049 --> 00:31:11,629
if if if you so check probe worked and

00:31:08,350 --> 00:31:14,360
quite likely you will not need to write

00:31:11,629 --> 00:31:15,860
any report descriptors because in the

00:31:14,360 --> 00:31:18,159
current driver we generate our own

00:31:15,860 --> 00:31:19,909
report descriptors based on the

00:31:18,159 --> 00:31:22,389
parameters that you retrieved from the

00:31:19,909 --> 00:31:25,249
table you will just need to add your

00:31:22,389 --> 00:31:28,149
table to the list of the the proper

00:31:25,249 --> 00:31:30,919
place in the big case statement

00:31:28,149 --> 00:31:32,480
otherwise you will probably need to

00:31:30,919 --> 00:31:35,210
learn a little bit about report

00:31:32,480 --> 00:31:37,369
descriptor language and read the spec

00:31:35,210 --> 00:31:39,190
and also look at the report descriptions

00:31:37,369 --> 00:31:42,919
that we have in our table database

00:31:39,190 --> 00:31:45,950
repository and look at them in the

00:31:42,919 --> 00:31:49,460
kernel as well so they will give you

00:31:45,950 --> 00:31:52,639
some idea what you can write there

00:31:49,460 --> 00:31:54,679
you can use hitter D convert or some

00:31:52,639 --> 00:31:56,960
similar tool of which there are many now

00:31:54,679 --> 00:31:57,510
to make your own report descriptor and

00:31:56,960 --> 00:31:59,550
then

00:31:57,510 --> 00:32:01,770
you can use the report fix up handler in

00:31:59,550 --> 00:32:04,890
the kernel driver to fit that report

00:32:01,770 --> 00:32:08,040
descriptor today generic hit driver so

00:32:04,890 --> 00:32:10,470
you can go from the report descriptor

00:32:08,040 --> 00:32:13,380
which you got from the tablet and doubt

00:32:10,470 --> 00:32:15,960
it with the USB hip dumb or you can get

00:32:13,380 --> 00:32:20,460
that from the sis kernel debug three

00:32:15,960 --> 00:32:23,070
four hit devices as well this is using

00:32:20,460 --> 00:32:25,950
energy convert you can convert it XML

00:32:23,070 --> 00:32:29,520
sorry about that but it's the currently

00:32:25,950 --> 00:32:31,680
the one two-way format that hit are

00:32:29,520 --> 00:32:34,440
these supports can you edit the report

00:32:31,680 --> 00:32:36,690
descriptive the way you needed to work

00:32:34,440 --> 00:32:45,450
and convert it code and paste that into

00:32:36,690 --> 00:32:51,900
your C file so sometimes you might need

00:32:45,450 --> 00:32:54,180
to tweak the input bits for example some

00:32:51,900 --> 00:32:56,190
tables can report garbage when you

00:32:54,180 --> 00:33:01,910
remove the pan from the surface far

00:32:56,190 --> 00:33:04,590
enough or for the pressure fields or

00:33:01,910 --> 00:33:07,020
some of the tables can start reporting

00:33:04,590 --> 00:33:09,180
the data in the way which is

00:33:07,020 --> 00:33:11,100
incompatible with hig specification and

00:33:09,180 --> 00:33:13,880
you can can't write a report descriptor

00:33:11,100 --> 00:33:19,110
for that so one way that we did before

00:33:13,880 --> 00:33:20,670
was to create a extra report descriptor

00:33:19,110 --> 00:33:23,190
and then change the report idea on the

00:33:20,670 --> 00:33:26,160
fly so that kernel thinks that there is

00:33:23,190 --> 00:33:29,460
a separate report IDE and we and then we

00:33:26,160 --> 00:33:32,340
can write a separate piece of report

00:33:29,460 --> 00:33:34,800
descriptor for that or if in the case of

00:33:32,340 --> 00:33:39,270
all table series we need to translate

00:33:34,800 --> 00:33:44,010
the tilt reports and that's where you

00:33:39,270 --> 00:33:51,210
can do it or like invert that in range

00:33:44,010 --> 00:33:54,750
beat that we just so so it would be nice

00:33:51,210 --> 00:33:56,430
to users if you could for example mask

00:33:54,750 --> 00:34:00,360
out the interfaces that don't produce

00:33:56,430 --> 00:34:02,160
anything some some tables have like two

00:34:00,360 --> 00:34:04,440
or three interfaces but actually use

00:34:02,160 --> 00:34:06,630
only one or two maybe those other

00:34:04,440 --> 00:34:11,280
interfaces are for something else which

00:34:06,630 --> 00:34:13,200
we didn't figure out but then

00:34:11,280 --> 00:34:14,940
if you leave them be they'll create an

00:34:13,200 --> 00:34:17,070
input device which never produces

00:34:14,940 --> 00:34:19,129
anything and then users get confused so

00:34:17,070 --> 00:34:22,830
if your return in order for those

00:34:19,129 --> 00:34:25,340
devices in the probe handler then that

00:34:22,830 --> 00:34:28,470
device will not appear then you can

00:34:25,340 --> 00:34:31,169
modify the vise names event device names

00:34:28,470 --> 00:34:33,950
in the input configured handler which we

00:34:31,169 --> 00:34:36,570
do for you see logic tablets so that

00:34:33,950 --> 00:34:39,840
your device names will correspond to

00:34:36,570 --> 00:34:43,350
what they are present like here so it

00:34:39,840 --> 00:34:44,820
can look like this so user opens game or

00:34:43,350 --> 00:34:47,340
any other application and he sees a

00:34:44,820 --> 00:34:50,580
bunch of input devices name like this

00:34:47,340 --> 00:34:52,110
and which of those will be pen you don't

00:34:50,580 --> 00:34:56,159
know they all have to go and through and

00:34:52,110 --> 00:35:00,240
click all of them and figure out which

00:34:56,159 --> 00:35:01,650
one will work and then some of the some

00:35:00,240 --> 00:35:03,600
of the application got confused they

00:35:01,650 --> 00:35:07,680
tried to match the device by name I

00:35:03,600 --> 00:35:09,540
think was at some point so if you mask

00:35:07,680 --> 00:35:11,550
some of them out and then use that

00:35:09,540 --> 00:35:13,410
handler to add a little bit of

00:35:11,550 --> 00:35:19,980
clarification to the device that would

00:35:13,410 --> 00:35:21,690
be of much help so you can contribute to

00:35:19,980 --> 00:35:24,330
document kernel drivers when you make

00:35:21,690 --> 00:35:27,090
your tablet work and this way you get

00:35:24,330 --> 00:35:28,800
feedback faster and get your you get to

00:35:27,090 --> 00:35:31,860
users faster and you'll generally be

00:35:28,800 --> 00:35:33,420
able to make your driver faster you can

00:35:31,860 --> 00:35:35,160
contribute to the kernel directly of

00:35:33,420 --> 00:35:37,500
course but in either case you will need

00:35:35,160 --> 00:35:39,540
to follow kernel coding style and keep

00:35:37,500 --> 00:35:43,410
changes and commits nice and clear and

00:35:39,540 --> 00:35:46,800
logically separate so and there are

00:35:43,410 --> 00:35:50,190
those little penis on the table tonight

00:35:46,800 --> 00:35:54,050
had users asked me many times these

00:35:50,190 --> 00:35:56,460
don't work or how they make them work so

00:35:54,050 --> 00:35:58,530
normally those are not actual buttons

00:35:56,460 --> 00:36:00,270
there it is just an area on the table

00:35:58,530 --> 00:36:03,450
which the Windows driver sometimes you

00:36:00,270 --> 00:36:05,730
can handle and I can relate shortcuts

00:36:03,450 --> 00:36:08,100
and windows to make that work or let you

00:36:05,730 --> 00:36:10,950
assign some shortcuts to that I think

00:36:08,100 --> 00:36:13,740
they are genuinely useless because you

00:36:10,950 --> 00:36:15,600
cannot feel them on the surface of the

00:36:13,740 --> 00:36:17,730
table compared to those actual buttons

00:36:15,600 --> 00:36:19,590
there so you can't you'd have to look on

00:36:17,730 --> 00:36:22,070
the table and then look on the screen

00:36:19,590 --> 00:36:25,200
and on the table to see what's going on

00:36:22,070 --> 00:36:27,450
so don't bother Bordeaux sausage

00:36:25,200 --> 00:36:32,940
gimmicks that manufacturers would like

00:36:27,450 --> 00:36:36,150
to sell more tables so that's all I

00:36:32,940 --> 00:36:38,250
think except if you really want so you

00:36:36,150 --> 00:36:44,250
can become my patreon supporter and get

00:36:38,250 --> 00:37:04,680
those nice stickers here right away so

00:36:44,250 --> 00:37:06,210
thank you everyone any questions yes no

00:37:04,680 --> 00:37:07,680
I used my table too

00:37:06,210 --> 00:37:10,290
several times after I made the driver

00:37:07,680 --> 00:37:12,360
work and I try to draw but I'm not a

00:37:10,290 --> 00:37:14,340
professional artist or anything so I

00:37:12,360 --> 00:37:28,140
found found making drivers more

00:37:14,340 --> 00:37:32,610
interesting yes yeah there is via there

00:37:28,140 --> 00:37:35,040
is the this website here where there is

00:37:32,610 --> 00:37:37,410
a little database of tables which was

00:37:35,040 --> 00:37:40,680
supported and with versions of our

00:37:37,410 --> 00:37:43,500
drivers and the upstream kernel which

00:37:40,680 --> 00:37:46,050
support them so that might help in

00:37:43,500 --> 00:37:48,210
general yeah there's also like some

00:37:46,050 --> 00:37:49,080
things that the manufacturers do be

00:37:48,210 --> 00:37:52,230
careful about that

00:37:49,080 --> 00:37:53,640
for example they they change the inside

00:37:52,230 --> 00:37:55,650
sometimes that they don't change the

00:37:53,640 --> 00:38:00,060
name or they might change the name but

00:37:55,650 --> 00:38:02,460
slightly like we on recently released a

00:38:00,060 --> 00:38:07,130
new line of tablets which changed the

00:38:02,460 --> 00:38:09,300
protocol quite quite in a quite a

00:38:07,130 --> 00:38:11,850
noticeable way and the initialization

00:38:09,300 --> 00:38:15,630
sequence so and they added to the names

00:38:11,850 --> 00:38:17,850
like + or 2048 or something like that

00:38:15,630 --> 00:38:20,190
otherwise leave in the name the same and

00:38:17,850 --> 00:38:22,530
lots of people got confused and there is

00:38:20,190 --> 00:38:25,050
a there's new work that needs to be done

00:38:22,530 --> 00:38:33,290
and people come and ask those tables to

00:38:25,050 --> 00:38:33,290
work all the time anybody else yes

00:38:34,070 --> 00:38:45,150
that's all about I think that by the

00:38:41,910 --> 00:38:48,660
time I started these other tables were

00:38:45,150 --> 00:38:50,280
already quite dead so I had a few people

00:38:48,660 --> 00:38:52,440
come and ask me about cereal tablets

00:38:50,280 --> 00:39:28,350
when I started but afterwards nobody

00:38:52,440 --> 00:39:29,760
came so anybody else yes yes there are

00:39:28,350 --> 00:39:33,390
plenty of interfaces there are

00:39:29,760 --> 00:39:36,510
interfaces in in the two kids like no

00:39:33,390 --> 00:39:38,940
man and cutie for that which you can use

00:39:36,510 --> 00:39:40,080
I have not never used them but I had

00:39:38,940 --> 00:39:42,750
time to look at them when something

00:39:40,080 --> 00:39:44,910
broke but it was quite a while since

00:39:42,750 --> 00:39:49,530
something broke in a toolkit so I don't

00:39:44,910 --> 00:39:53,490
remember how they work you can talk to

00:39:49,530 --> 00:39:57,900
the ex work directly for example I don't

00:39:53,490 --> 00:40:02,990
know there should be some api's to do

00:39:57,900 --> 00:40:02,990
that yes

00:40:09,980 --> 00:40:18,900
yeah the most most tablets detect the

00:40:15,720 --> 00:40:23,190
pen when you hover and you don't don't

00:40:18,900 --> 00:40:25,890
touch that to move the cursor and some

00:40:23,190 --> 00:40:27,809
some drivers like the Libyan put driver

00:40:25,890 --> 00:40:31,260
for example recent recently at least

00:40:27,809 --> 00:40:34,980
added a filtering of very slight touch

00:40:31,260 --> 00:40:37,650
and it doesn't register if you touch to

00:40:34,980 --> 00:40:41,099
touch the surface a little it doesn't

00:40:37,650 --> 00:40:42,839
register a button click so you can kind

00:40:41,099 --> 00:40:54,089
of drag it a little bit and then press

00:40:42,839 --> 00:40:56,200
harder to make it work anybody else okay

00:40:54,089 --> 00:41:01,980
thanks everyone

00:40:56,200 --> 00:41:01,980

YouTube URL: https://www.youtube.com/watch?v=x07W9PW67Bo


