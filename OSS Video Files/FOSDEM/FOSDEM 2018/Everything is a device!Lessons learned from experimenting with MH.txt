Title: Everything is a device!Lessons learned from experimenting with MH
Publication date: 2018-02-03
Playlist: FOSDEM 2018
Description: 
	by Gianluca Guida

At: FOSDEM 2018
Room: AW1.126
Scheduled start: 2018-02-03 10:30:00+01
Captions: 
	00:00:04,620 --> 00:00:07,520
okay

00:00:12,940 --> 00:00:18,890
okay hi my name is Jean Lucca and this

00:00:17,419 --> 00:00:21,439
talk is called everything is a device

00:00:18,890 --> 00:00:24,170
it's based on my current project which

00:00:21,439 --> 00:00:26,269
is a personal project and yeah the

00:00:24,170 --> 00:00:29,390
subtitle gives you an idea to my style

00:00:26,269 --> 00:00:31,910
of developing this project anyway so Who

00:00:29,390 --> 00:00:34,160
am I I am a programmer mostly I

00:00:31,910 --> 00:00:35,660
currently work in our company which is

00:00:34,160 --> 00:00:36,980
in stealth mode which is called the data

00:00:35,660 --> 00:00:39,409
back in Santa Clara

00:00:36,980 --> 00:00:41,540
I personally be in London in the past

00:00:39,409 --> 00:00:44,510
was for random companies some good some

00:00:41,540 --> 00:00:46,489
bad and in the open source world that

00:00:44,510 --> 00:00:49,159
mostly been affiliated with the MINIX 3

00:00:46,489 --> 00:00:51,830
the new hard and exam as you can see

00:00:49,159 --> 00:00:53,629
essentially hypervisor and operating

00:00:51,830 --> 00:00:56,690
systems what I also been working mostly

00:00:53,629 --> 00:01:00,559
in my life so the things about me is

00:00:56,690 --> 00:01:02,000
that I create a lot of the things about

00:01:00,559 --> 00:01:05,269
me is that gate a lot of personal

00:01:02,000 --> 00:01:07,400
projects so and not they did for fun I

00:01:05,269 --> 00:01:09,830
don't really think about fitting like

00:01:07,400 --> 00:01:11,630
the next big thing I just I just like to

00:01:09,830 --> 00:01:14,420
learn your stuff I just need to satisfy

00:01:11,630 --> 00:01:15,950
my curiosity and yes I need I need to

00:01:14,420 --> 00:01:19,219
have fun and this is one of my personal

00:01:15,950 --> 00:01:20,960
project it's not it's not curiosity in

00:01:19,219 --> 00:01:23,600
the sense is my first camera that I

00:01:20,960 --> 00:01:25,189
write is one of my old dog be so but

00:01:23,600 --> 00:01:26,960
anyway so that's what we're going to

00:01:25,189 --> 00:01:29,600
talk about anyway the outline of this

00:01:26,960 --> 00:01:31,640
talk is the following so I was going to

00:01:29,600 --> 00:01:34,609
introduce MH and MLG so I already

00:01:31,640 --> 00:01:36,710
introduced MH in the Fossum um 2016 but

00:01:34,609 --> 00:01:38,119
four people are or not there is going to

00:01:36,710 --> 00:01:39,560
be interesting is there going to be

00:01:38,119 --> 00:01:41,450
another introduction also things have

00:01:39,560 --> 00:01:43,369
changed his death then I'm going to

00:01:41,450 --> 00:01:44,780
explain the internal architecture to

00:01:43,369 --> 00:01:47,210
explain back to how it creates such

00:01:44,780 --> 00:01:49,100
system and then I'm going to speak about

00:01:47,210 --> 00:01:51,020
something which had got me excited very

00:01:49,100 --> 00:01:53,270
recently which is the ramp kernel and

00:01:51,020 --> 00:01:55,759
usually usually using the kernel

00:01:53,270 --> 00:01:58,009
components of net BSD inside MLG inside

00:01:55,759 --> 00:02:00,170
the user space and also running unique

00:01:58,009 --> 00:02:02,060
kernels in such a system and how easy it

00:02:00,170 --> 00:02:03,649
is to not to take anything anything

00:02:02,060 --> 00:02:06,319
around a unique honor it is very

00:02:03,649 --> 00:02:08,509
interesting finally if you have time a

00:02:06,319 --> 00:02:10,160
completion and then Q&A so I like

00:02:08,509 --> 00:02:11,870
questions so in case you want and I'm

00:02:10,160 --> 00:02:13,520
not offended if somebody interrupts me

00:02:11,870 --> 00:02:16,450
so in case you have a question just feel

00:02:13,520 --> 00:02:18,610
free to ask me anytime

00:02:16,450 --> 00:02:21,610
okay these introduction to our managee

00:02:18,610 --> 00:02:24,040
so what is it okay so as you can guess

00:02:21,610 --> 00:02:26,980
by this blue meter Mexicano

00:02:24,040 --> 00:02:29,080
it's name is mojo quick indeed why and

00:02:26,980 --> 00:02:30,819
yeah so this has been essentially a

00:02:29,080 --> 00:02:33,370
background personal project of me I

00:02:30,819 --> 00:02:36,370
never had a full-time investment in a 10

00:02:33,370 --> 00:02:40,090
actually start in 2015 in 2016

00:02:36,370 --> 00:02:42,880
introduced date at FOSDEM in this mag in

00:02:40,090 --> 00:02:44,950
this dive room denim made 2016 4 and

00:02:42,880 --> 00:02:46,959
Amish for complex issue I had to put the

00:02:44,950 --> 00:02:50,080
project on hold that could start working

00:02:46,959 --> 00:02:52,180
on late 2017 and so I've been working

00:02:50,080 --> 00:02:53,380
since back and forth because I start on

00:02:52,180 --> 00:02:56,170
a new job so things have been very

00:02:53,380 --> 00:02:57,819
hectic but the five minutes a week I

00:02:56,170 --> 00:02:59,739
work on this project and this is about

00:02:57,819 --> 00:03:02,799
what I got what I chilled what we can do

00:02:59,739 --> 00:03:05,830
about it so ymh there are mostly three

00:03:02,799 --> 00:03:07,569
reasons the first reason is that when I

00:03:05,830 --> 00:03:09,160
started I really wanted to build the

00:03:07,569 --> 00:03:10,630
system so I realized that like with

00:03:09,160 --> 00:03:12,670
modern system with modern linux

00:03:10,630 --> 00:03:15,459
especially and I cannot rent about Linux

00:03:12,670 --> 00:03:17,230
on desktop so anyway with modern Linux I

00:03:15,459 --> 00:03:18,910
lost control of the machine things I

00:03:17,230 --> 00:03:21,010
like about Linux at all times is that

00:03:18,910 --> 00:03:22,660
when you boot it you see your computer I

00:03:21,010 --> 00:03:24,040
lost control of what my machine is

00:03:22,660 --> 00:03:25,989
rather odd or looked like and this is

00:03:24,040 --> 00:03:27,640
what I want I want a system that I can

00:03:25,989 --> 00:03:29,739
boot Anita can play with the device I

00:03:27,640 --> 00:03:31,810
can play with the address I can poke it

00:03:29,739 --> 00:03:33,130
I can see what after I owned wish of

00:03:31,810 --> 00:03:34,630
course like we did model intellect

00:03:33,130 --> 00:03:35,230
detectives very hard anyway but at least

00:03:34,630 --> 00:03:37,600
we tried

00:03:35,230 --> 00:03:41,200
and then I also wanted to experiment

00:03:37,600 --> 00:03:42,940
with software and it's fun to Kate

00:03:41,200 --> 00:03:44,109
module assistance educator system that

00:03:42,940 --> 00:03:45,880
interacts with other but you can

00:03:44,109 --> 00:03:47,680
actually have to start to do random

00:03:45,880 --> 00:03:49,780
things they use a different way

00:03:47,680 --> 00:03:51,670
repeat this experiment okay I used to

00:03:49,780 --> 00:03:53,769
want experimental actor means fun and

00:03:51,670 --> 00:03:55,359
yes it's actually nice to type something

00:03:53,769 --> 00:03:56,829
relatively different because you cannot

00:03:55,359 --> 00:03:58,390
be completely different because it's

00:03:56,829 --> 00:04:00,010
going to be a kernel come to a user

00:03:58,390 --> 00:04:01,510
space is good to be a little sis it's

00:04:00,010 --> 00:04:02,829
the same thing over and over again by

00:04:01,510 --> 00:04:05,049
you've changed something and you look

00:04:02,829 --> 00:04:06,549
interesting and yeah it's right it's

00:04:05,049 --> 00:04:08,590
quite fun to be honest one of the things

00:04:06,549 --> 00:04:10,269
in Stronach unexpected when I started

00:04:08,590 --> 00:04:11,950
this project it's really fun to see the

00:04:10,269 --> 00:04:13,450
extension on my friends especially the

00:04:11,950 --> 00:04:15,040
one who understands about the operating

00:04:13,450 --> 00:04:16,570
system when I tell them that I'm

00:04:15,040 --> 00:04:19,000
building a system where everything is a

00:04:16,570 --> 00:04:20,919
device is really fun of the strange look

00:04:19,000 --> 00:04:22,450
of disappointment and questioning than

00:04:20,919 --> 00:04:23,650
they are is really fun and so actually

00:04:22,450 --> 00:04:26,140
this is the energy to which I'm

00:04:23,650 --> 00:04:27,729
continuing this project so what is there

00:04:26,140 --> 00:04:29,200
much architecture the emerge

00:04:27,729 --> 00:04:30,129
architecture is that everything is a

00:04:29,200 --> 00:04:32,499
device

00:04:30,129 --> 00:04:34,689
so what does it means well it means that

00:04:32,499 --> 00:04:37,270
like the physical order that is

00:04:34,689 --> 00:04:38,889
presented in the kernel is actually

00:04:37,270 --> 00:04:41,289
exposed in the user space as a device

00:04:38,889 --> 00:04:43,029
but also all kind of services for

00:04:41,289 --> 00:04:44,439
example the time at all anything with

00:04:43,029 --> 00:04:46,599
the console enough is the thing that

00:04:44,439 --> 00:04:48,339
come on the top of my mind that is also

00:04:46,599 --> 00:04:51,189
exposed to the user spaces as a device

00:04:48,339 --> 00:04:52,839
at a process expose a for example like

00:04:51,189 --> 00:04:55,360
mapping a can is like talking to a

00:04:52,839 --> 00:04:57,279
memory controller and then you know a

00:04:55,360 --> 00:04:59,830
process itself another process can

00:04:57,279 --> 00:05:01,929
become a can actually become a device

00:04:59,830 --> 00:05:03,519
and it would be really D well you can

00:05:01,929 --> 00:05:04,899
guess if it's a process user space

00:05:03,519 --> 00:05:08,529
device or not but the fact that it

00:05:04,899 --> 00:05:10,809
creates a non-hierarchical element in a

00:05:08,529 --> 00:05:12,819
system it's nice because yes it can be

00:05:10,809 --> 00:05:15,309
dangerous but I don't care I'm here for

00:05:12,819 --> 00:05:17,499
the fun as I essentially I'm creating a

00:05:15,309 --> 00:05:19,809
parallel system a system where like I

00:05:17,499 --> 00:05:22,029
can experiment things and you know

00:05:19,809 --> 00:05:24,659
there's no way I can actually create a

00:05:22,029 --> 00:05:27,399
user space that behaves exactly like

00:05:24,659 --> 00:05:28,809
like another up the device and you know

00:05:27,399 --> 00:05:30,669
that's exactly what people are trying to

00:05:28,809 --> 00:05:33,159
do now with GME a lot of things so it's

00:05:30,669 --> 00:05:35,469
okay the interface itself for the

00:05:33,159 --> 00:05:37,929
microkernel it's very low level and I

00:05:35,469 --> 00:05:40,509
like that so essentially every when I

00:05:37,929 --> 00:05:42,610
connect to a device essentially a boss

00:05:40,509 --> 00:05:43,629
with device attached to it of course

00:05:42,610 --> 00:05:46,059
it's a bit different because they need

00:05:43,629 --> 00:05:49,689
to open the devisor Vegeta UAD etc etc

00:05:46,059 --> 00:05:51,490
and like the memory is lower especially

00:05:49,689 --> 00:05:53,199
when you mark the memory like to speak

00:05:51,490 --> 00:05:54,669
into a memory controller and then going

00:05:53,199 --> 00:05:56,499
to receive page fault and then you need

00:05:54,669 --> 00:05:59,289
to react to that and when you for

00:05:56,499 --> 00:06:00,909
example the kernel is not going to

00:05:59,289 --> 00:06:02,229
copy-on-write magically the page just

00:06:00,909 --> 00:06:03,909
going to see a patient's fault which

00:06:02,229 --> 00:06:06,279
tell you your time to write to a shell

00:06:03,909 --> 00:06:08,559
page fix it now and so it's the kernel

00:06:06,279 --> 00:06:10,659
which need to copy the memory I like it

00:06:08,559 --> 00:06:12,249
and now you know we have the system bus

00:06:10,659 --> 00:06:14,979
Cal interface essentially the way I

00:06:12,249 --> 00:06:16,749
interact to a device is to very low

00:06:14,979 --> 00:06:20,019
level system so for example I have a

00:06:16,749 --> 00:06:21,610
higher queues and each device an iommu

00:06:20,019 --> 00:06:23,559
so in order for device to write to my

00:06:21,610 --> 00:06:24,159
memory I need to export memory to the

00:06:23,559 --> 00:06:26,860
MMU

00:06:24,159 --> 00:06:28,479
and I am i apart because I like x86 and

00:06:26,860 --> 00:06:33,069
it's very impossible to simulate a

00:06:28,479 --> 00:06:35,229
memory map anyway so once I have the

00:06:33,069 --> 00:06:37,899
system that Kate essentially substitute

00:06:35,229 --> 00:06:41,019
what the file system is in UNIX I left

00:06:37,899 --> 00:06:43,900
the rest very UNIX as I said before I

00:06:41,019 --> 00:06:46,480
add fork that's why I don't you

00:06:43,900 --> 00:06:49,420
I don't use something which is much more

00:06:46,480 --> 00:06:51,070
typically kinda like capability is and

00:06:49,420 --> 00:06:52,930
fine great this is control I don't care

00:06:51,070 --> 00:06:54,510
about that I want to have fun and it's

00:06:52,930 --> 00:06:57,010
much easier to build system like this

00:06:54,510 --> 00:07:00,460
it's much funny because the nice thing

00:06:57,010 --> 00:07:02,020
about UNIX is to help you doing this so

00:07:00,460 --> 00:07:04,060
this is an example to what I mean and

00:07:02,020 --> 00:07:06,220
this is a magic way of slightly unusual

00:07:04,060 --> 00:07:08,920
because this is my 2006 presentation

00:07:06,220 --> 00:07:10,630
there is 16 presentation so this is what

00:07:08,920 --> 00:07:13,330
the process see this is how the person

00:07:10,630 --> 00:07:15,310
interacts with the world the userspace

00:07:13,330 --> 00:07:18,010
process between today to talk with

00:07:15,310 --> 00:07:20,320
another device can program the immu and

00:07:18,010 --> 00:07:23,020
mmm you can write to his memory and the

00:07:20,320 --> 00:07:25,120
device is tied to send my recuse and i'm

00:07:23,020 --> 00:07:30,450
going to map their cues into signals and

00:07:25,120 --> 00:07:32,470
then I can send essentially iReport so

00:07:30,450 --> 00:07:34,360
this is essentially what the kind of

00:07:32,470 --> 00:07:36,670
looks like but I see honestly like as I

00:07:34,360 --> 00:07:38,320
said I have a very low level system so

00:07:36,670 --> 00:07:41,320
the question is another one the question

00:07:38,320 --> 00:07:43,570
is how do I use it in a sane way because

00:07:41,320 --> 00:07:45,490
I only want 200 page fault anyway and

00:07:43,570 --> 00:07:48,130
that's why I essentially entered into

00:07:45,490 --> 00:07:49,660
the MLG emoji is essentially like the

00:07:48,130 --> 00:07:52,600
runtime liberate library which

00:07:49,660 --> 00:07:54,190
essentially creates some interface and

00:07:52,600 --> 00:07:56,140
essentially some basic primitives was

00:07:54,190 --> 00:07:57,790
meant essentially just to under the

00:07:56,140 --> 00:07:59,530
visual memory button I started in the

00:07:57,790 --> 00:08:02,350
fiber and event handling and memory

00:07:59,530 --> 00:08:04,120
management and interestingly I started

00:08:02,350 --> 00:08:06,310
to have the need to get device drivers

00:08:04,120 --> 00:08:09,100
for the device that I connect you

00:08:06,310 --> 00:08:14,140
so essentially start to have library

00:08:09,100 --> 00:08:15,640
device driver inside emoji and this is a

00:08:14,140 --> 00:08:17,170
sense of what it is emojis are said to

00:08:15,640 --> 00:08:20,500
basically by ramming it in their system

00:08:17,170 --> 00:08:22,540
which I mean similar space and some

00:08:20,500 --> 00:08:23,830
device that I can run and this device

00:08:22,540 --> 00:08:26,950
tava can be the best time for the

00:08:23,830 --> 00:08:28,510
allowed like for fake habló and yeah and

00:08:26,950 --> 00:08:30,580
then what what else he has he has booted

00:08:28,510 --> 00:08:32,560
server and a console which is quite

00:08:30,580 --> 00:08:34,539
interesting but essentially the Buddhist

00:08:32,560 --> 00:08:37,000
a very is the first process that starts

00:08:34,539 --> 00:08:38,620
and that enumerates the devices I will

00:08:37,000 --> 00:08:40,960
tell you in the next slide how it does

00:08:38,620 --> 00:08:44,260
that because it's quite interesting and

00:08:40,960 --> 00:08:45,850
yeah this is what it is so this is the

00:08:44,260 --> 00:08:49,030
slide about the kernel architecture is a

00:08:45,850 --> 00:08:52,240
simple single slide but I think is quite

00:08:49,030 --> 00:08:54,550
interesting so the way it work is this

00:08:52,240 --> 00:08:56,529
like as you can see like the part about

00:08:54,550 --> 00:08:58,990
the scheduler the see

00:08:56,529 --> 00:09:01,629
new demand management the P map and of

00:08:58,990 --> 00:09:04,540
physical CPUs it's relatively

00:09:01,629 --> 00:09:06,160
traditional ap to do some where the

00:09:04,540 --> 00:09:08,199
stuff on fork because they don't really

00:09:06,160 --> 00:09:10,149
have copy writer just protect the shared

00:09:08,199 --> 00:09:12,249
pages but it's relatively traditional

00:09:10,149 --> 00:09:14,920
what is interesting is the rest of the

00:09:12,249 --> 00:09:16,480
kernel which takes even even on

00:09:14,920 --> 00:09:19,240
code-wise the majority of the thing

00:09:16,480 --> 00:09:21,579
which is the the device handling system

00:09:19,240 --> 00:09:24,279
and the way it works is that you got the

00:09:21,579 --> 00:09:26,050
system bus and what the system but those

00:09:24,279 --> 00:09:28,089
essentially like every calling which

00:09:26,050 --> 00:09:29,439
interact with the device go to the

00:09:28,089 --> 00:09:31,839
system bus the system bus has

00:09:29,439 --> 00:09:33,129
essentially attached all the registers

00:09:31,839 --> 00:09:35,170
all the devices are attached to the

00:09:33,129 --> 00:09:37,319
system like for real file system

00:09:35,170 --> 00:09:40,809
essentially but what is of it VFS

00:09:37,319 --> 00:09:42,610
essentially and what happened when I do

00:09:40,809 --> 00:09:45,399
that is that then inside the kernel

00:09:42,610 --> 00:09:47,410
there are three types of file the three

00:09:45,399 --> 00:09:50,470
or four types of devices that could have

00:09:47,410 --> 00:09:52,149
touched to it and the one I want to

00:09:50,470 --> 00:09:53,889
start for is the platform device

00:09:52,149 --> 00:09:55,930
essentially the platform device starts

00:09:53,889 --> 00:09:57,639
at the beginning and as you can see Kay

00:09:55,930 --> 00:10:00,550
talks directly with the other platform

00:09:57,639 --> 00:10:05,709
the photo devices are device that export

00:10:00,550 --> 00:10:07,839
airports are you memory and immu SRU

00:10:05,709 --> 00:10:09,309
memory and I accuse but of the whole

00:10:07,839 --> 00:10:11,860
system so essentially if you own the

00:10:09,309 --> 00:10:13,930
platform device you you can essentially

00:10:11,860 --> 00:10:16,329
speak to the hardware whatever the the

00:10:13,930 --> 00:10:17,800
port is this is what boosts up those

00:10:16,329 --> 00:10:20,680
what boost up those are the beginning

00:10:17,800 --> 00:10:23,649
opens platform and then the current bus

00:10:20,680 --> 00:10:26,559
stop has actually a CPI CA and then

00:10:23,649 --> 00:10:30,930
actually it enumerates it is it turns on

00:10:26,559 --> 00:10:34,449
in userspace a CPA a CPC a a CPI CA and

00:10:30,930 --> 00:10:36,189
a new mate devices and since and what he

00:10:34,449 --> 00:10:41,110
does then it creates these other devices

00:10:36,189 --> 00:10:43,870
other devices are exactly like other

00:10:41,110 --> 00:10:46,209
devices are exactly like the platform

00:10:43,870 --> 00:10:48,879
device except you restrict the access to

00:10:46,209 --> 00:10:50,649
only the resources or a single device so

00:10:48,879 --> 00:10:54,819
for example an example we'll see later

00:10:50,649 --> 00:10:56,889
if he founds the pci mt 0 0 0 to 0 which

00:10:54,819 --> 00:11:00,220
is the vga usually which is VG

00:10:56,889 --> 00:11:02,920
compatible what you get is you get up a

00:11:00,220 --> 00:11:05,079
device for the vga what is cute which I

00:11:02,920 --> 00:11:06,990
like is actually get the a CPI names for

00:11:05,079 --> 00:11:09,339
the dial for the devices which give me a

00:11:06,990 --> 00:11:09,889
closer relationship with the guys who

00:11:09,339 --> 00:11:13,279
wrote the

00:11:09,889 --> 00:11:14,720
the eye bias which is nice and anyway so

00:11:13,279 --> 00:11:16,879
what I do essentially kids all these

00:11:14,720 --> 00:11:18,739
devices and it's nice because then I can

00:11:16,879 --> 00:11:20,329
actually assign devices or single

00:11:18,739 --> 00:11:23,689
process more naturally than for example

00:11:20,329 --> 00:11:26,419
laugh and a fertilizer does and it gets

00:11:23,689 --> 00:11:28,639
quite interesting because then I can

00:11:26,419 --> 00:11:30,829
actually also list the devices and ki

00:11:28,639 --> 00:11:32,149
can know easily what what things are and

00:11:30,829 --> 00:11:35,839
this is exactly what I want for this

00:11:32,149 --> 00:11:37,279
system and yeah so then what we have the

00:11:35,839 --> 00:11:40,369
system device is interesting at all

00:11:37,279 --> 00:11:42,439
yesterday is a device which is fixed for

00:11:40,369 --> 00:11:44,899
all processors that contains also the

00:11:42,439 --> 00:11:47,179
timers and dwarf lock timer and the

00:11:44,899 --> 00:11:51,499
virtual timer but what's interesting is

00:11:47,179 --> 00:11:53,480
this one so this is how I implement user

00:11:51,499 --> 00:11:55,220
space type devices so every time a

00:11:53,480 --> 00:11:57,290
process interact with the see ask the

00:11:55,220 --> 00:11:59,989
system bus for a bus three door bus

00:11:57,290 --> 00:12:01,699
right or something it passes to a user

00:11:59,989 --> 00:12:03,439
device if to use the device they use the

00:12:01,699 --> 00:12:06,699
device just forward the calls with to

00:12:03,439 --> 00:12:09,799
the use of space and so even internally

00:12:06,699 --> 00:12:13,609
it's the mechanism and the internal API

00:12:09,799 --> 00:12:19,519
use the user device is the same use for

00:12:13,609 --> 00:12:22,669
the other one anyway this is this that's

00:12:19,519 --> 00:12:23,329
exactly what I just told you and this is

00:12:22,669 --> 00:12:29,449
where it gets fun

00:12:23,329 --> 00:12:32,119
so the problem is this like I'm just

00:12:29,449 --> 00:12:32,779
many things it essentially like I was

00:12:32,119 --> 00:12:34,489
appalled

00:12:32,779 --> 00:12:39,230
I am pretty sure them everyone in this

00:12:34,489 --> 00:12:42,709
room knows about long kernels but what

00:12:39,230 --> 00:12:44,989
essentially they did was they create

00:12:42,709 --> 00:12:47,989
components out the net bsd kernel and

00:12:44,989 --> 00:12:50,209
own a 3ds net BSD system in general then

00:12:47,989 --> 00:12:52,819
Decatur wafer to merge this component

00:12:50,209 --> 00:12:54,529
together and it's quite fun and what a

00:12:52,819 --> 00:12:56,329
what I was interesting when I start

00:12:54,529 --> 00:12:58,309
looking at it so essentially I wanted a

00:12:56,329 --> 00:13:00,949
file system and the network diverse and

00:12:58,309 --> 00:13:03,789
the network stack because I want to use

00:13:00,949 --> 00:13:06,829
somebody else's code on these things and

00:13:03,789 --> 00:13:09,259
what I found and that's amazing is that

00:13:06,829 --> 00:13:10,669
actually 14 to ramp the ramp kernel to

00:13:09,259 --> 00:13:12,529
your system is really really easy

00:13:10,669 --> 00:13:14,089
because what they do they have this

00:13:12,529 --> 00:13:16,160
component system so the things you're

00:13:14,089 --> 00:13:18,379
going to fight is the make files but

00:13:16,160 --> 00:13:21,000
it's okay it's a plug you of humanity we

00:13:18,379 --> 00:13:23,230
haven't solved yet so

00:13:21,000 --> 00:13:25,029
that what what accent see do they have

00:13:23,230 --> 00:13:27,190
this company only blump user and

00:13:25,029 --> 00:13:29,139
essentially what you do if you it's

00:13:27,190 --> 00:13:31,389
actually it's very POSIX II but it's

00:13:29,139 --> 00:13:33,750
easy to port to other architecture and

00:13:31,389 --> 00:13:36,370
to me it took me like one day to port

00:13:33,750 --> 00:13:39,130
libram user to what I call the prompt

00:13:36,370 --> 00:13:42,040
msg and when I got that I immediately

00:13:39,130 --> 00:13:43,810
saw it just compiled the code just

00:13:42,040 --> 00:13:45,579
compiled and so just by colleagues and

00:13:43,810 --> 00:13:48,010
penita so you know the the copyright of

00:13:45,579 --> 00:13:50,199
the of the net bsd kana which was

00:13:48,010 --> 00:13:52,000
beautiful and it was fun and I could see

00:13:50,199 --> 00:13:54,070
that necklace t canna was booting as a

00:13:52,000 --> 00:13:57,940
leap as a library and then I actually

00:13:54,070 --> 00:14:00,790
added the component XT four FS did I say

00:13:57,940 --> 00:14:02,800
correct as he four FS yes and I start

00:14:00,790 --> 00:14:05,440
calling mount a device and because I

00:14:02,800 --> 00:14:08,399
have my own library a library a CI

00:14:05,440 --> 00:14:10,750
driver as a library so I mounted it and

00:14:08,399 --> 00:14:12,610
actually I could use in a color that

00:14:10,750 --> 00:14:14,350
doesn't have a shell this is have any

00:14:12,610 --> 00:14:15,910
decent code has just been hacked out

00:14:14,350 --> 00:14:17,980
five minutes a week for the first few

00:14:15,910 --> 00:14:20,920
years except for one E and AH one E and

00:14:17,980 --> 00:14:25,329
a half which I couldn't and I can

00:14:20,920 --> 00:14:26,680
actually get xt4 HCI and it's really

00:14:25,329 --> 00:14:28,360
funny I feel like I'm doing something

00:14:26,680 --> 00:14:35,470
with my life despite I'm not it's

00:14:28,360 --> 00:14:37,690
amazing it's really cool anyway so yeah

00:14:35,470 --> 00:14:40,149
and there's clearly some love between me

00:14:37,690 --> 00:14:42,880
and I'm cannon emoji because what

00:14:40,149 --> 00:14:45,390
essentially happen is that the the

00:14:42,880 --> 00:14:47,980
fundamental things were my system

00:14:45,390 --> 00:14:54,070
unexpectedly is close to them kernels is

00:14:47,980 --> 00:14:55,750
when is when how can I say like what I

00:14:54,070 --> 00:14:57,910
need since I have like another space and

00:14:55,750 --> 00:15:00,040
everything is a device that around me I

00:14:57,910 --> 00:15:02,050
need device data and since I'm a process

00:15:00,040 --> 00:15:03,880
and it libraries the right status and

00:15:02,050 --> 00:15:05,709
that's what I was creating in emoji

00:15:03,880 --> 00:15:07,540
turns out that's exactly what the lamp

00:15:05,709 --> 00:15:09,279
candle gives me and it's amazing because

00:15:07,540 --> 00:15:11,769
then I can actually do that I can

00:15:09,279 --> 00:15:13,269
actually I can actually even Li use the

00:15:11,769 --> 00:15:15,010
PCI device and that's more complicated

00:15:13,269 --> 00:15:16,720
because I need to put a component

00:15:15,010 --> 00:15:20,740
colapisci I you this but can be done

00:15:16,720 --> 00:15:24,130
it's beautiful and yes you know then

00:15:20,740 --> 00:15:25,899
okay this is like me bump rambling about

00:15:24,130 --> 00:15:27,490
make files so don't do but yes I cannot

00:15:25,899 --> 00:15:30,160
network diverse as well and it's very

00:15:27,490 --> 00:15:31,810
interesting to me and what I what I like

00:15:30,160 --> 00:15:33,130
is that one is very convenient for me

00:15:31,810 --> 00:15:34,930
but also

00:15:33,130 --> 00:15:36,880
it fits very well with my architecture

00:15:34,930 --> 00:15:38,560
which was unexpected when I started so

00:15:36,880 --> 00:15:42,340
especially when I had the idea in the

00:15:38,560 --> 00:15:43,930
pub and I was blank by the way this is

00:15:42,340 --> 00:15:45,730
the second part because this is actual

00:15:43,930 --> 00:15:48,730
working process we approached him Fergus

00:15:45,730 --> 00:15:51,610
because it's a I just got it done in few

00:15:48,730 --> 00:15:54,490
days ago so and it's very it was again

00:15:51,610 --> 00:15:56,530
very easy and expecially easy so what is

00:15:54,490 --> 00:16:01,240
it this is not Lumpkin and this is don't

00:15:56,530 --> 00:16:03,520
run so run run uni colonels and what

00:16:01,240 --> 00:16:04,330
essentially run perani's is a complete

00:16:03,520 --> 00:16:10,090
build of built

00:16:04,330 --> 00:16:13,240
oh yeah a complete build of the ramp

00:16:10,090 --> 00:16:14,800
colonel and he has also tools to create

00:16:13,240 --> 00:16:17,200
like images piss on that

00:16:14,800 --> 00:16:19,390
when I saw Anton I say oh that's easy I

00:16:17,200 --> 00:16:21,700
can just use lib ramp emoji but it turns

00:16:19,390 --> 00:16:24,010
out not because in order to you to run

00:16:21,700 --> 00:16:27,100
you need is own implementation of the

00:16:24,010 --> 00:16:29,770
prompt users so what libram pram does is

00:16:27,100 --> 00:16:31,780
actually creates an interface called the

00:16:29,770 --> 00:16:33,550
MK and that's what you need to implement

00:16:31,780 --> 00:16:36,250
it's actually much more low-level it's

00:16:33,550 --> 00:16:38,590
much more close to the to do dialog like

00:16:36,250 --> 00:16:40,270
yes it looks more like a the

00:16:38,590 --> 00:16:43,720
paravirtualized interface or suit is

00:16:40,270 --> 00:16:45,640
quite strange but anyway that's what it

00:16:43,720 --> 00:16:48,340
does and then actually the next thing is

00:16:45,640 --> 00:16:50,260
that is this this depósito record and

00:16:48,340 --> 00:16:52,750
run packages that already had a lot of

00:16:50,260 --> 00:16:55,360
made made unica they be made unique on

00:16:52,750 --> 00:16:58,810
us like a big things like MySQL approach

00:16:55,360 --> 00:17:02,470
to Ingenix and mpg want to see we'll see

00:16:58,810 --> 00:17:02,950
that so this is fun because and I say

00:17:02,470 --> 00:17:06,220
okay

00:17:02,950 --> 00:17:08,290
it must be hard to put and what was

00:17:06,220 --> 00:17:10,329
really really hard this time is the fact

00:17:08,290 --> 00:17:13,480
that like the tool chain that I use in

00:17:10,329 --> 00:17:15,939
MH was incompatible somehow with the

00:17:13,480 --> 00:17:18,459
expectation of the linkage of the make

00:17:15,939 --> 00:17:22,540
file script and I wasted one night on

00:17:18,459 --> 00:17:23,980
that but it's okay so what was

00:17:22,540 --> 00:17:26,620
interesting then I actually said okay

00:17:23,980 --> 00:17:28,329
let's put a lamp random mm LG after

00:17:26,620 --> 00:17:30,580
fighting would make files a lot actually

00:17:28,329 --> 00:17:33,670
creating the bmk interface was really

00:17:30,580 --> 00:17:35,770
really really easy and again it took me

00:17:33,670 --> 00:17:38,080
two days of which and then you know a

00:17:35,770 --> 00:17:40,560
couple of siblings night for the make

00:17:38,080 --> 00:17:43,210
file but it was actually really easy and

00:17:40,560 --> 00:17:46,000
what I did when I then I did a catered

00:17:43,210 --> 00:17:46,870
on from bacon I decided to take MTG one

00:17:46,000 --> 00:17:50,320
two three

00:17:46,870 --> 00:17:52,390
which is our infantry just gave me a

00:17:50,320 --> 00:17:54,700
binary which is a binary enough binary

00:17:52,390 --> 00:17:56,679
for my from my image

00:17:54,700 --> 00:17:58,539
okay well let's boot that so I put that

00:17:56,679 --> 00:18:00,880
instead of the bus stop and I booted

00:17:58,539 --> 00:18:03,279
into MPG one two three so I don't have

00:18:00,880 --> 00:18:06,279
no shell or anything but I do have an

00:18:03,279 --> 00:18:08,140
mp3 player and with this I actually

00:18:06,279 --> 00:18:10,419
conclude what I what I wanted to say

00:18:08,140 --> 00:18:12,100
because as you can see like the goal of

00:18:10,419 --> 00:18:14,260
the system being fun has clearly been

00:18:12,100 --> 00:18:16,120
met and is really fun and I still don't

00:18:14,260 --> 00:18:20,740
know how much weird stuff I can do with

00:18:16,120 --> 00:18:22,419
it and I like it yeah so essentially

00:18:20,740 --> 00:18:24,220
like the things that really struck me

00:18:22,419 --> 00:18:26,950
and I'm really excited about is this in

00:18:24,220 --> 00:18:28,630
a system like this I can actually make a

00:18:26,950 --> 00:18:30,520
major essentially unique kernel runner

00:18:28,630 --> 00:18:31,870
and that's to me really interesting

00:18:30,520 --> 00:18:35,409
because it would make my project cool

00:18:31,870 --> 00:18:36,820
because unique events are cool and okay

00:18:35,409 --> 00:18:39,549
of course there's a lot of things to do

00:18:36,820 --> 00:18:41,559
and all the code is online it's

00:18:39,549 --> 00:18:43,899
obviously licensure I'm very tempted by

00:18:41,559 --> 00:18:46,330
GPL 3 by the way but for now keep it PSD

00:18:43,899 --> 00:18:48,190
and it's a bit scattered because it's my

00:18:46,330 --> 00:18:51,460
project and I am a bit scattered as a

00:18:48,190 --> 00:18:53,080
person in general so if the code is

00:18:51,460 --> 00:18:54,700
there please use it

00:18:53,080 --> 00:18:56,710
please look I have a look at it if

00:18:54,700 --> 00:19:00,669
you're interested please Portland cannot

00:18:56,710 --> 00:19:01,990
sue you Mac you can on now and yes the

00:19:00,669 --> 00:19:03,250
code is episode if you have any problem

00:19:01,990 --> 00:19:07,360
with finding the code or anything just

00:19:03,250 --> 00:19:08,799
ask me and any questions this is where

00:19:07,360 --> 00:19:20,529
you'll find more information about it

00:19:08,799 --> 00:19:22,270
Oh question hi no it's it's a security

00:19:20,529 --> 00:19:23,860
concern which as you can see I'm since

00:19:22,270 --> 00:19:25,890
this is my project you know getting paid

00:19:23,860 --> 00:19:29,580
to do I don't really care too much so oh

00:19:25,890 --> 00:19:32,799
sorry the question is the question was

00:19:29,580 --> 00:19:36,429
does the system require immu to run so

00:19:32,799 --> 00:19:38,710
in order to be secure when you assign an

00:19:36,429 --> 00:19:42,460
order essentially when you program the

00:19:38,710 --> 00:19:48,520
actual MMU in the here essentially let

00:19:42,460 --> 00:19:50,770
me try to go back so here when you

00:19:48,520 --> 00:19:53,409
actually talk on the immu of the devices

00:19:50,770 --> 00:19:56,500
the devices habla in a nice world you

00:19:53,409 --> 00:19:58,390
should actually find which i mmm you in

00:19:56,500 --> 00:20:00,340
which mmm you busted the drawer is

00:19:58,390 --> 00:20:02,740
sitting a program i don't have the code

00:20:00,340 --> 00:20:05,710
for that i can it can be other because

00:20:02,740 --> 00:20:07,330
actually i have implemented i have we

00:20:05,710 --> 00:20:09,280
allocate well did you so just a matter

00:20:07,330 --> 00:20:12,059
of doing it of having a device for a

00:20:09,280 --> 00:20:14,169
menu so it's thinkable I don't right now

00:20:12,059 --> 00:20:15,640
what you do is what you do when you're

00:20:14,169 --> 00:20:18,070
send over to you my token away that I've

00:20:15,640 --> 00:20:20,340
menu you need to trust the driver the

00:20:18,070 --> 00:20:20,340
device

00:20:45,080 --> 00:20:52,259
now I am NOT okay that was that is to

00:20:50,940 --> 00:20:55,500
check in fact and listen to the

00:20:52,259 --> 00:20:57,509
questions okay so essentially the

00:20:55,500 --> 00:20:58,139
question is and the answer is no spoiler

00:20:57,509 --> 00:21:02,340
alert

00:20:58,139 --> 00:21:04,320
have you ever have you ever have you

00:21:02,340 --> 00:21:07,169
you mentioned networking here at pride

00:21:04,320 --> 00:21:09,990
the networking of the net bsd and if so

00:21:07,169 --> 00:21:12,389
of drunkenness so have you a problem

00:21:09,990 --> 00:21:14,879
disaggregating the network stuck with

00:21:12,389 --> 00:21:16,440
the driver so no I haven't mostly

00:21:14,879 --> 00:21:18,840
because I need to implement limply CI

00:21:16,440 --> 00:21:20,759
uto and I wanted to do in a cleaner way

00:21:18,840 --> 00:21:24,629
because otherwise I can't access the PC

00:21:20,759 --> 00:21:27,899
address and - honestly I don't plan into

00:21:24,629 --> 00:21:29,340
writing my own stack so that's hopefully

00:21:27,899 --> 00:21:31,799
it's not going to be a pair but now I

00:21:29,340 --> 00:21:33,360
never had but I think that like it

00:21:31,799 --> 00:21:34,919
should be nice if like there was an

00:21:33,360 --> 00:21:36,990
interesting I'm kind of in people that

00:21:34,919 --> 00:21:38,340
are using it for micro cameras actually

00:21:36,990 --> 00:21:41,100
glad to do that that would be

00:21:38,340 --> 00:21:43,350
interesting but no I do some kind of

00:21:41,100 --> 00:21:44,759
stuff is like one week old and I'm very

00:21:43,350 --> 00:21:57,560
excited and jumping up and down

00:21:44,759 --> 00:22:03,700
essentially sir Thank You page

00:21:57,560 --> 00:22:03,700

YouTube URL: https://www.youtube.com/watch?v=K1lbWtiTw4o


