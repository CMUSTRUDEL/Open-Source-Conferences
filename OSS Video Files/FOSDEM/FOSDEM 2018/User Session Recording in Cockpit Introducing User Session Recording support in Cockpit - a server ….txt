Title: User Session Recording in Cockpit Introducing User Session Recording support in Cockpit - a server â€¦
Publication date: 2018-02-03
Playlist: FOSDEM 2018
Description: 
	User Session Recording in Cockpit Introducing User Session Recording support in Cockpit - a server management Web UI
by Nikolai Kondrashov

At: FOSDEM 2018
Room: UD2.119
Scheduled start: 2018-02-03 17:55:00+01
Captions: 
	00:00:06,750 --> 00:00:12,969
okay hello everyone I don't have much

00:00:09,280 --> 00:00:15,490
time so it might be that we won't have a

00:00:12,969 --> 00:00:20,230
time for questions but let's see I'll

00:00:15,490 --> 00:00:22,510
try to be fast so I'm Nicola like on the

00:00:20,230 --> 00:00:26,200
shelf I work at the common login theme

00:00:22,510 --> 00:00:28,000
at Red Hat I focus on user session

00:00:26,200 --> 00:00:30,010
recording project and I maintain fair

00:00:28,000 --> 00:00:34,000
IDs packages in the rest of my time I

00:00:30,010 --> 00:00:36,210
also created and maintained the Digi

00:00:34,000 --> 00:00:38,800
mint project which works on supports in

00:00:36,210 --> 00:00:42,010
graphics tables and linux but not

00:00:38,800 --> 00:00:45,670
Wakeham once they are the ones I do

00:00:42,010 --> 00:00:47,890
embedded as a hobby and electronics so

00:00:45,670 --> 00:00:49,569
this user session recording project we

00:00:47,890 --> 00:00:53,679
re trying to create a solution which

00:00:49,569 --> 00:00:55,989
would let people about administrators

00:00:53,679 --> 00:00:59,199
record what users see on and type into

00:00:55,989 --> 00:01:00,760
the terminal record what the comments

00:00:59,199 --> 00:01:04,659
they executed which files they accessed

00:01:00,760 --> 00:01:09,939
and control centrally where what and who

00:01:04,659 --> 00:01:12,549
is recorded so also trying to create a

00:01:09,939 --> 00:01:16,450
system which would store centrally what

00:01:12,549 --> 00:01:20,609
what is recorded and secure that would

00:01:16,450 --> 00:01:25,659
also allow search in correlation and

00:01:20,609 --> 00:01:29,490
playing back those recordings so since

00:01:25,659 --> 00:01:34,000
our identity management solution started

00:01:29,490 --> 00:01:37,149
being popular our customers started

00:01:34,000 --> 00:01:39,789
asking if if they could have session

00:01:37,149 --> 00:01:42,340
recording and they were asking that

00:01:39,789 --> 00:01:45,369
because for some organizations they are

00:01:42,340 --> 00:01:48,119
required by law for example in us to

00:01:45,369 --> 00:01:51,189
record sessions on the sensitive systems

00:01:48,119 --> 00:01:53,799
like in hospitals for example or in

00:01:51,189 --> 00:01:56,320
government organizations also banks are

00:01:53,799 --> 00:01:59,350
very strict about accesses to some

00:01:56,320 --> 00:02:01,509
systems as you could guess and they want

00:01:59,350 --> 00:02:04,119
to find generally want to find out who

00:02:01,509 --> 00:02:07,979
broke something or stole something and

00:02:04,119 --> 00:02:10,119
how they did it and they need to

00:02:07,979 --> 00:02:12,820
sometimes just trace problems for

00:02:10,119 --> 00:02:14,900
support users although that is a minor

00:02:12,820 --> 00:02:19,680
use case

00:02:14,900 --> 00:02:21,330
so there's a huge number of commercial

00:02:19,680 --> 00:02:25,110
offerings for this and they start with

00:02:21,330 --> 00:02:26,400
the just simply hardware boxes which you

00:02:25,110 --> 00:02:28,019
can buy and put on your network and

00:02:26,400 --> 00:02:30,480
connect to network cables give it the

00:02:28,019 --> 00:02:32,970
keys and then it will start intercepting

00:02:30,480 --> 00:02:36,709
your sessions ssh sessions or database

00:02:32,970 --> 00:02:39,599
connections and log that then there are

00:02:36,709 --> 00:02:42,780
software packages which you can install

00:02:39,599 --> 00:02:45,930
on your own jump servers or your own

00:02:42,780 --> 00:02:49,230
proxies or software packages to install

00:02:45,930 --> 00:02:51,420
on your target system where the sessions

00:02:49,230 --> 00:02:53,549
are happening and often that these

00:02:51,420 --> 00:02:56,250
systems are integrated with identity

00:02:53,549 --> 00:03:00,989
management solutions or even a part of

00:02:56,250 --> 00:03:03,420
identity management solutions so they

00:03:00,989 --> 00:03:07,230
usually have central storage yes and

00:03:03,420 --> 00:03:11,630
they playback and searching for Commons

00:03:07,230 --> 00:03:11,630
executed and the file success etc

00:03:12,670 --> 00:03:18,160
they yeah they record keystrokes and for

00:03:16,510 --> 00:03:21,430
example Windows they can record your

00:03:18,160 --> 00:03:23,489
desktop and Commons and applications

00:03:21,430 --> 00:03:27,610
that you started in Windows oh and even

00:03:23,489 --> 00:03:29,830
URLs you accessed in the browser but

00:03:27,610 --> 00:03:32,050
there are practically no open source

00:03:29,830 --> 00:03:34,780
solutions that are suitable for this so

00:03:32,050 --> 00:03:36,430
the most the oldest one is script but it

00:03:34,780 --> 00:03:40,840
is not security oriented it is rather

00:03:36,430 --> 00:03:42,190
for recording your own sessions and if

00:03:40,840 --> 00:03:45,489
you want to use it in the security

00:03:42,190 --> 00:03:48,190
setting you have to really really lock

00:03:45,489 --> 00:03:50,739
it down and I saw some installations

00:03:48,190 --> 00:03:53,560
where that was done and that required a

00:03:50,739 --> 00:03:55,330
lot of work and setting up separate

00:03:53,560 --> 00:03:58,959
systems so that they could be locked

00:03:55,330 --> 00:04:02,340
like jump servers so do I Oh Logan is

00:03:58,959 --> 00:04:05,019
getting quite close but it has no

00:04:02,340 --> 00:04:08,709
centralization it doesn't stream your

00:04:05,019 --> 00:04:10,269
recording anywhere but it allows playing

00:04:08,709 --> 00:04:11,709
back the recordings insertion for them

00:04:10,269 --> 00:04:14,920
but only on your local machine if you

00:04:11,709 --> 00:04:16,989
want to centralize that you need to are

00:04:14,920 --> 00:04:18,459
seeing that somewhere regularly or do

00:04:16,989 --> 00:04:21,489
something like that and you cannot see

00:04:18,459 --> 00:04:27,220
the sessions that are in progress on a

00:04:21,489 --> 00:04:29,530
remote on the remote system so there is

00:04:27,220 --> 00:04:34,030
the closest thing perhaps is the tty

00:04:29,530 --> 00:04:35,320
audit system which is the part of audio

00:04:34,030 --> 00:04:39,130
subsystem in the kernel and it's

00:04:35,320 --> 00:04:41,979
integrated a TTY layer in the kernel and

00:04:39,130 --> 00:04:45,729
it allows login user input but not user

00:04:41,979 --> 00:04:47,890
output since it's a it's locked into the

00:04:45,729 --> 00:04:50,220
audit log you can basically easily just

00:04:47,890 --> 00:04:55,270
forward it together with the audit logs

00:04:50,220 --> 00:04:58,800
which was the idea that we like I'll try

00:04:55,270 --> 00:04:58,800
just let me

00:05:01,860 --> 00:05:07,990
so we took that idea a little bit

00:05:05,229 --> 00:05:12,490
further as storing the sessions in the

00:05:07,990 --> 00:05:15,459
logs and we want to use the logs for

00:05:12,490 --> 00:05:18,789
delivery and for central would use login

00:05:15,459 --> 00:05:21,639
tools for centralization and also for

00:05:18,789 --> 00:05:24,779
streaming the recordings because that

00:05:21,639 --> 00:05:27,039
would let people not only easily

00:05:24,779 --> 00:05:28,539
correlate the events between the

00:05:27,039 --> 00:05:30,610
recordings that was happening on the

00:05:28,539 --> 00:05:34,139
screen and the events that are captured

00:05:30,610 --> 00:05:36,369
in the logs but also have the old

00:05:34,139 --> 00:05:39,119
infrastructure ready for the

00:05:36,369 --> 00:05:39,119
installation and

00:05:40,800 --> 00:05:48,000
have less maintenance overhead and

00:05:42,750 --> 00:05:51,240
install it easier so we were thinking at

00:05:48,000 --> 00:05:53,810
first doing this in the kernel I did

00:05:51,240 --> 00:05:56,100
extension dat - I ordered subsystem but

00:05:53,810 --> 00:05:58,440
we decided to go with the user space

00:05:56,100 --> 00:06:01,080
because it's faster to develop and we

00:05:58,440 --> 00:06:03,120
could iterate faster and have results

00:06:01,080 --> 00:06:05,430
faster but then we later found out from

00:06:03,120 --> 00:06:08,580
the other team that the audit subsystem

00:06:05,430 --> 00:06:13,290
is not quite performant enough to allow

00:06:08,580 --> 00:06:15,660
streaming of the output we did not test

00:06:13,290 --> 00:06:20,760
it but yeah that was what the audit team

00:06:15,660 --> 00:06:22,410
said so and naturally we are using the

00:06:20,760 --> 00:06:23,880
audit logs for the rest of the recording

00:06:22,410 --> 00:06:25,710
the code in the comments and the process

00:06:23,880 --> 00:06:29,210
executed because you can enable all that

00:06:25,710 --> 00:06:29,210
by enabling recording

00:06:32,129 --> 00:06:39,629
my neighbor's recording the Siskel's in

00:06:35,520 --> 00:06:41,669
the audit system so our target is

00:06:39,629 --> 00:06:44,430
enterprise-ready as those commercial

00:06:41,669 --> 00:06:47,789
systems are and as our identity

00:06:44,430 --> 00:06:51,409
management system is and we plan to have

00:06:47,789 --> 00:06:53,909
storage in elasticsearch and control the

00:06:51,409 --> 00:06:55,680
where to record and who to record and

00:06:53,909 --> 00:06:59,789
what's the record with three a pianist

00:06:55,680 --> 00:07:02,490
SSD we are going to build a web UI

00:06:59,789 --> 00:07:07,620
component which is which should be

00:07:02,490 --> 00:07:09,389
embeddable into other systems like cloud

00:07:07,620 --> 00:07:12,870
forms or openshift

00:07:09,389 --> 00:07:17,520
and at this moment we work on this web

00:07:12,870 --> 00:07:18,960
UI in cockpit this storage not an

00:07:17,520 --> 00:07:23,699
elastic search but in journal the

00:07:18,960 --> 00:07:25,349
systemd journal we have some code and

00:07:23,699 --> 00:07:27,360
this SSD which allows control in that

00:07:25,349 --> 00:07:29,729
and they are going to build that into

00:07:27,360 --> 00:07:32,669
the interface part into cockpit

00:07:29,729 --> 00:07:35,819
and you can also configure this manually

00:07:32,669 --> 00:07:40,310
without SSD and the configuration and

00:07:35,819 --> 00:07:45,590
playback going to be done as in cockpit

00:07:40,310 --> 00:07:50,120
so cockpit is a is a server management

00:07:45,590 --> 00:07:52,700
web UI with a kind of a new approach so

00:07:50,120 --> 00:07:54,680
one of the ideas the big ideas of them

00:07:52,700 --> 00:07:56,810
is that when you log into that WI you

00:07:54,680 --> 00:07:59,480
actually log into the system meaning

00:07:56,810 --> 00:08:02,530
that there is a process started for your

00:07:59,480 --> 00:08:05,180
login on the on the little system and

00:08:02,530 --> 00:08:07,700
this process has to your session it's

00:08:05,180 --> 00:08:09,230
actually Linux session that or they with

00:08:07,700 --> 00:08:12,440
all the attributes of a Linux session

00:08:09,230 --> 00:08:14,870
it's not like some proxy user for

00:08:12,440 --> 00:08:16,400
everyone that everyone share it's

00:08:14,870 --> 00:08:21,260
actually your user running in that

00:08:16,400 --> 00:08:22,940
system and it also works but one of the

00:08:21,260 --> 00:08:25,340
ideals of them they actually have

00:08:22,940 --> 00:08:28,640
official ideals one of the ideals is

00:08:25,340 --> 00:08:31,190
that you can go between controlling your

00:08:28,640 --> 00:08:33,229
system with the browser and the comment

00:08:31,190 --> 00:08:35,930
line without problem they can go back

00:08:33,229 --> 00:08:37,690
and forth and change something here in

00:08:35,930 --> 00:08:40,840
the comment line and it appears and it

00:08:37,690 --> 00:08:44,120
and your web browser and vice versa and

00:08:40,840 --> 00:08:47,450
it's not like when once you start doing

00:08:44,120 --> 00:08:48,890
doing the web UI you cannot go back to

00:08:47,450 --> 00:08:53,690
the comment line because maybe I would

00:08:48,890 --> 00:08:55,970
break so they also have support for

00:08:53,690 --> 00:08:58,280
managing remote hosts through SSH

00:08:55,970 --> 00:09:01,610
through the same WI you can control

00:08:58,280 --> 00:09:05,150
several hosts and that they have very

00:09:01,610 --> 00:09:08,900
frequent releases something like every

00:09:05,150 --> 00:09:10,430
two weeks and they are CI system which

00:09:08,900 --> 00:09:12,580
is pretty advanced allows them to do

00:09:10,430 --> 00:09:12,580
that

00:09:13,110 --> 00:09:18,430
and I would recommend seeing Steph

00:09:16,510 --> 00:09:20,830
Walters talk about how they do that it's

00:09:18,430 --> 00:09:28,180
called I think it's right nowadays it's

00:09:20,830 --> 00:09:30,820
called cyborg teens so nando demo we're

00:09:28,180 --> 00:09:32,920
going to login into a system where with

00:09:30,820 --> 00:09:34,390
the user which is recorded we'll do

00:09:32,920 --> 00:09:37,020
something on the terminal and we'll see

00:09:34,390 --> 00:09:39,130
the session appear in the cockpit UI and

00:09:37,020 --> 00:09:42,160
you'll be able to play it back as it

00:09:39,130 --> 00:09:47,340
goes along and do some nice stuff with

00:09:42,160 --> 00:09:50,590
it so I hope you can see something here

00:09:47,340 --> 00:09:52,980
so first of all let's let me login to

00:09:50,590 --> 00:09:52,980
cockpit

00:09:56,490 --> 00:10:03,610
so this is a that was that is too far

00:10:00,000 --> 00:10:06,100
let's go back so there is a list of

00:10:03,610 --> 00:10:07,750
recordings sorry the resolution is very

00:10:06,100 --> 00:10:13,260
small see not everything fits

00:10:07,750 --> 00:10:13,260
but there is one recording here and once

00:10:13,320 --> 00:10:20,670
as soon as I log in here with a little

00:10:16,240 --> 00:10:20,670
delay will see a new session appear

00:10:21,000 --> 00:10:31,650
let's use another one of these users

00:10:23,710 --> 00:10:35,230
fine what so there is the session

00:10:31,650 --> 00:10:38,520
appearing there and we can already open

00:10:35,230 --> 00:10:38,520
it and start playing it back

00:10:40,200 --> 00:10:49,430
let me just scroll it a little bit so it

00:10:43,500 --> 00:10:49,430
did say it just a moment

00:10:50,890 --> 00:11:01,870
I'll make it a little wider so it fits

00:10:56,940 --> 00:11:05,560
yeah okay so this is good enough so you

00:11:01,870 --> 00:11:08,770
can see that we are here already caught

00:11:05,560 --> 00:11:13,540
up to this session so let's edit

00:11:08,770 --> 00:11:19,210
something and let me just sync it up so

00:11:13,540 --> 00:11:21,630
it close at our time let's do some

00:11:19,210 --> 00:11:21,630
editing

00:11:34,820 --> 00:11:43,520
oh there's some problem hmm I wonder

00:11:38,530 --> 00:11:49,430
okay so let's try something more

00:11:43,520 --> 00:11:55,850
interesting yeah that works

00:11:49,430 --> 00:11:58,490
so everything is preserved and timing is

00:11:55,850 --> 00:12:03,100
preserved and you can see what's going

00:11:58,490 --> 00:12:03,100
on and you can also do this

00:12:07,240 --> 00:12:12,690
the universe sizes are also preserved

00:12:15,670 --> 00:12:18,570
so

00:12:22,240 --> 00:12:29,510
we can define the session at any time

00:12:26,120 --> 00:12:31,610
and start looking into it whatever we

00:12:29,510 --> 00:12:38,840
want however we want we can change the

00:12:31,610 --> 00:12:42,040
speed of the playback usual stuff we can

00:12:38,840 --> 00:12:42,040
skip pauses

00:12:49,140 --> 00:12:55,490
we can for example go and skip a long

00:12:51,779 --> 00:12:55,490
wait here using this button

00:12:59,190 --> 00:13:06,860
and we can step through direct recording

00:13:02,449 --> 00:13:06,860
step by step and see what was happening

00:13:07,850 --> 00:13:13,649
so at the moment we are working on

00:13:10,579 --> 00:13:20,850
position in the recording in sign

00:13:13,649 --> 00:13:23,819
randomly so put their own so the

00:13:20,850 --> 00:13:28,350
recording setup is quite simple

00:13:23,819 --> 00:13:31,079
basically we you said change users shell

00:13:28,350 --> 00:13:33,029
to a special program so that when the

00:13:31,079 --> 00:13:36,329
user log log scene instead of the shell

00:13:33,029 --> 00:13:38,129
that process starts and creates a PTY

00:13:36,329 --> 00:13:40,470
under which it starts the actual shell

00:13:38,129 --> 00:13:43,110
and then whatever is passing between the

00:13:40,470 --> 00:13:46,829
PTY and the actual TTY gets recorded and

00:13:43,110 --> 00:13:49,829
encoded in JSON and then logged we also

00:13:46,829 --> 00:13:52,620
cut the stream into pieces which are

00:13:49,829 --> 00:13:54,870
limited by size and by time so that we

00:13:52,620 --> 00:13:57,269
don't wait too long for a message to

00:13:54,870 --> 00:14:03,569
fill up and we don't make a message too

00:13:57,269 --> 00:14:06,959
big so JSON schema is optimized for

00:14:03,569 --> 00:14:08,550
streaming and searching and for

00:14:06,959 --> 00:14:10,259
streaming is optimized by you know

00:14:08,550 --> 00:14:14,790
cutting being cut in the stream by time

00:14:10,259 --> 00:14:16,680
and just shipping it and for searching

00:14:14,790 --> 00:14:24,449
we separate it input and output in

00:14:16,680 --> 00:14:26,370
separate Jason fields we sub story the

00:14:24,449 --> 00:14:29,160
time and separate as well so that the

00:14:26,370 --> 00:14:30,269
the input is like the way you typed it

00:14:29,160 --> 00:14:31,769
and they are but it's the way that

00:14:30,269 --> 00:14:35,490
appeared on the screen nothing is

00:14:31,769 --> 00:14:37,230
intermingled we preserve the resizes we

00:14:35,490 --> 00:14:40,410
preserve all the data includes in binary

00:14:37,230 --> 00:14:42,290
and if for example if you somebody

00:14:40,410 --> 00:14:47,089
dumped the document on the screen and

00:14:42,290 --> 00:14:52,949
then went away with it like like a

00:14:47,089 --> 00:14:55,079
libreoffice document so the preserve

00:14:52,949 --> 00:14:57,540
Ohio and if there is something which is

00:14:55,079 --> 00:15:00,569
not valid e to f8 which cannot be stored

00:14:57,540 --> 00:15:03,809
in JSON Aziz we put it into byte arrays

00:15:00,569 --> 00:15:06,000
and Jason so when we locked the journal

00:15:03,809 --> 00:15:08,399
we take some fields out of the JSON

00:15:06,000 --> 00:15:10,439
message and we put it into real journal

00:15:08,399 --> 00:15:12,240
field so that we can look them up and

00:15:10,439 --> 00:15:16,110
match the messages and match

00:15:12,240 --> 00:15:18,510
Recordings like the the recording ID

00:15:16,110 --> 00:15:20,580
which is unique for the host and then

00:15:18,510 --> 00:15:23,250
using this recording ID we can match a

00:15:20,580 --> 00:15:26,310
whole stream of log messages for a

00:15:23,250 --> 00:15:29,550
particular recording we can also match

00:15:26,310 --> 00:15:31,770
for audit session ID and for the user

00:15:29,550 --> 00:15:34,830
which was recorded that is necessary

00:15:31,770 --> 00:15:40,350
because the the recording process runs

00:15:34,830 --> 00:15:42,510
to set your ID to protect itself so the

00:15:40,350 --> 00:15:46,020
journey the cockpit journal interface is

00:15:42,510 --> 00:15:48,839
quite simple but reliable it simply runs

00:15:46,020 --> 00:15:50,970
journal CTL on the host and asks it to

00:15:48,839 --> 00:15:53,399
output JSON and then supplies any

00:15:50,970 --> 00:15:56,700
necessary matches and options that that

00:15:53,399 --> 00:15:59,790
the apiary the API user requests like

00:15:56,700 --> 00:16:03,870
much toast messages or limit by time and

00:15:59,790 --> 00:16:07,520
give me this many messages so for

00:16:03,870 --> 00:16:11,790
listing recordings in the browser here

00:16:07,520 --> 00:16:15,360
there was it yeah we go here but when we

00:16:11,790 --> 00:16:20,279
open this list we sell it so much by the

00:16:15,360 --> 00:16:22,770
city ID UID 10 if you are filtering for

00:16:20,279 --> 00:16:26,010
example by user aver atom match to user

00:16:22,770 --> 00:16:28,730
field the limit since in the until if we

00:16:26,010 --> 00:16:32,010
limit the time that we want to display

00:16:28,730 --> 00:16:34,589
and the tell journal CTL to return all

00:16:32,010 --> 00:16:37,020
the lines and to follow any updates that

00:16:34,589 --> 00:16:40,320
we can update the list as you saw as the

00:16:37,020 --> 00:16:42,240
journal grows so we read everything we

00:16:40,320 --> 00:16:46,529
find the unique recording IDs and then

00:16:42,240 --> 00:16:50,760
we just make a list for playing back is

00:16:46,529 --> 00:16:53,670
quite similar so we still filter by the

00:16:50,760 --> 00:16:58,709
do idea your ID because we want to trust

00:16:53,670 --> 00:17:01,050
what we get from the journal we match by

00:16:58,709 --> 00:17:03,450
recording ID and do the rest of the

00:17:01,050 --> 00:17:05,010
stuff the same and with the code read

00:17:03,450 --> 00:17:07,439
the entries and decode them in

00:17:05,010 --> 00:17:11,520
background while you're already able to

00:17:07,439 --> 00:17:13,650
start playing back the playback is done

00:17:11,520 --> 00:17:16,319
by simply feeding what they recorded on

00:17:13,650 --> 00:17:18,120
the terminal to our terminal emulator

00:17:16,319 --> 00:17:20,459
written in JavaScript at the mantra is

00:17:18,120 --> 00:17:22,620
in terms ES and will probably stay with

00:17:20,459 --> 00:17:24,829
it and we'll probably need to modify it

00:17:22,620 --> 00:17:32,129
for more features

00:17:24,829 --> 00:17:33,870
so we need to get audit logs too in

00:17:32,129 --> 00:17:36,419
there as well because we need to know

00:17:33,870 --> 00:17:39,600
the actual session boundaries when the

00:17:36,419 --> 00:17:41,580
user logged in in lockdown because not

00:17:39,600 --> 00:17:44,970
not there is not always output at the

00:17:41,580 --> 00:17:46,950
intern or at the start of the session we

00:17:44,970 --> 00:17:50,370
need to get comments executed from there

00:17:46,950 --> 00:17:52,860
and that trial success there is a

00:17:50,370 --> 00:17:57,360
problem that yeah journal dialogues what

00:17:52,860 --> 00:18:00,000
it advanced by itself but the audit team

00:17:57,360 --> 00:18:04,019
says that under load that can lose

00:18:00,000 --> 00:18:08,610
messages and also that all the data is

00:18:04,019 --> 00:18:11,580
raw for example the has no user names so

00:18:08,610 --> 00:18:13,740
it only has user IDs and if since if

00:18:11,580 --> 00:18:15,809
some time passed since you looked that

00:18:13,740 --> 00:18:19,320
you might not be able to convert those

00:18:15,809 --> 00:18:20,970
for example just one example you might

00:18:19,320 --> 00:18:29,090
not be able to get the user name from

00:18:20,970 --> 00:18:29,090
that user ID that happened week ago then

00:18:29,299 --> 00:18:33,629
so we made a tool for that and

00:18:31,559 --> 00:18:36,480
particular for the enterprise solution

00:18:33,629 --> 00:18:40,049
that's called a shape and it parses the

00:18:36,480 --> 00:18:42,840
logs and converts those users user IDs

00:18:40,049 --> 00:18:46,950
into user names etc and it also

00:18:42,840 --> 00:18:50,940
normalizes the logs extracting who did

00:18:46,950 --> 00:18:53,490
what did the thing on which object they

00:18:50,940 --> 00:18:55,350
did it and what was the action what was

00:18:53,490 --> 00:18:58,139
the result the normal security stuff

00:18:55,350 --> 00:19:01,019
that the everyone describes in all the

00:18:58,139 --> 00:19:03,120
requirements for the logs and we lock

00:19:01,019 --> 00:19:06,120
that stuff in JSON or an XML in that so

00:19:03,120 --> 00:19:08,009
so that has done all these

00:19:06,120 --> 00:19:11,909
transformations and done mostly using

00:19:08,009 --> 00:19:14,370
the libo leap a you parse which is part

00:19:11,909 --> 00:19:16,320
of for the project and we work with the

00:19:14,370 --> 00:19:21,980
audit team to make that nice and

00:19:16,320 --> 00:19:25,159
properly so that is that we can get this

00:19:21,980 --> 00:19:30,889
these logs or shaped logs into journal

00:19:25,159 --> 00:19:33,629
or we can or we can get the journal logs

00:19:30,889 --> 00:19:36,320
like the ones that the journal logs from

00:19:33,629 --> 00:19:38,110
the audit system but the problem is that

00:19:36,320 --> 00:19:40,000
anyway

00:19:38,110 --> 00:19:42,370
doesn't support partial field matches

00:19:40,000 --> 00:19:44,799
you can only match against the full

00:19:42,370 --> 00:19:48,580
journal field you cannot match like for

00:19:44,799 --> 00:19:52,740
a stream and I guess that has to do with

00:19:48,580 --> 00:19:57,010
the way that journal indexes the fields

00:19:52,740 --> 00:19:58,950
for that reason at this moment when we

00:19:57,010 --> 00:20:01,450
implement this searching for Commons

00:19:58,950 --> 00:20:03,070
that were executed or files that were

00:20:01,450 --> 00:20:05,559
accessed will be inconvenient because he

00:20:03,070 --> 00:20:08,470
will have to search for exactly the same

00:20:05,559 --> 00:20:10,720
exactly the file path or exactly the

00:20:08,470 --> 00:20:13,570
common that you wanted that doesn't make

00:20:10,720 --> 00:20:15,580
much sense and searching for a o io in

00:20:13,570 --> 00:20:17,710
the whole stream of the like in the

00:20:15,580 --> 00:20:19,390
input or and output of the terminal will

00:20:17,710 --> 00:20:20,700
be also impossible so they'll have to

00:20:19,390 --> 00:20:25,870
figure that out either

00:20:20,700 --> 00:20:27,760
perhaps we talk to journalists them to

00:20:25,870 --> 00:20:30,880
implement search in partial strains or

00:20:27,760 --> 00:20:35,500
just grab that but that will probably be

00:20:30,880 --> 00:20:36,910
pretty slow so next challenge is that we

00:20:35,500 --> 00:20:40,840
have a new design which we discussed

00:20:36,910 --> 00:20:47,230
with copy team and this is more or less

00:20:40,840 --> 00:20:51,220
ok to them so we are going to try to

00:20:47,230 --> 00:20:55,390
integrate the playback with the logs

00:20:51,220 --> 00:20:57,010
page and do it in a nice way so that

00:20:55,390 --> 00:20:58,690
when you scroll the logs you can see the

00:20:57,010 --> 00:21:01,840
sessions that were active at that point

00:20:58,690 --> 00:21:03,460
in time in the logs like you scroll and

00:21:01,840 --> 00:21:05,230
it's like there was this user logged in

00:21:03,460 --> 00:21:08,440
and you scroll further he is locked in

00:21:05,230 --> 00:21:11,410
this session disappeared and we also had

00:21:08,440 --> 00:21:14,980
a kind of a window to list all sessions

00:21:11,410 --> 00:21:16,570
and also allow playing back the

00:21:14,980 --> 00:21:20,350
recordings right there on the logs page

00:21:16,570 --> 00:21:22,299
while you for example play back so that

00:21:20,350 --> 00:21:24,100
the logs would scroll by this things

00:21:22,299 --> 00:21:25,510
were happening and you can pause and see

00:21:24,100 --> 00:21:28,419
what was happening in the logs at that

00:21:25,510 --> 00:21:31,840
particular point and on pause you can

00:21:28,419 --> 00:21:33,730
for example drag the time slider and see

00:21:31,840 --> 00:21:37,049
the logs move as well and or drag the

00:21:33,730 --> 00:21:40,540
logs and see the recording move as well

00:21:37,049 --> 00:21:43,179
and build it also to the full screen

00:21:40,540 --> 00:21:45,700
playback so that you could see a big

00:21:43,179 --> 00:21:48,790
like big terminal for because you saw

00:21:45,700 --> 00:21:50,620
that we can't take over the screen we

00:21:48,790 --> 00:21:51,920
need to see the same thing here but we

00:21:50,620 --> 00:21:55,730
need to provide the option to see

00:21:51,920 --> 00:21:57,920
big terminals inserted all details they

00:21:55,730 --> 00:22:00,620
have already some code to zoom in zoom

00:21:57,920 --> 00:22:02,450
out and painting of that terminal but

00:22:00,620 --> 00:22:03,680
that's obviously inconvenient to do all

00:22:02,450 --> 00:22:06,950
the time if you want to watch the

00:22:03,680 --> 00:22:08,680
session so the another thing is that we

00:22:06,950 --> 00:22:12,710
need to integrate with the accounts page

00:22:08,680 --> 00:22:15,680
where we would like to see like sessions

00:22:12,710 --> 00:22:18,980
for a user which were happening in like

00:22:15,680 --> 00:22:21,350
the last time and you can click them and

00:22:18,980 --> 00:22:23,090
open them and play them back but we also

00:22:21,350 --> 00:22:24,920
need to be able to enable or disable

00:22:23,090 --> 00:22:27,260
recording for particular users and

00:22:24,920 --> 00:22:31,340
groups which will be done through SSD

00:22:27,260 --> 00:22:34,850
hopefully through the d-bus interface

00:22:31,340 --> 00:22:42,620
with which people are not apparently

00:22:34,850 --> 00:22:44,510
very happy as Jakob says so yeah there

00:22:42,620 --> 00:22:46,400
are another other things interesting

00:22:44,510 --> 00:22:48,170
challenges like that there are multiple

00:22:46,400 --> 00:22:51,050
in theory there are still multiple

00:22:48,170 --> 00:22:52,820
terminal types that people use and they

00:22:51,050 --> 00:22:58,880
can differ slightly in the language that

00:22:52,820 --> 00:23:00,680
they use so for example they have a tool

00:22:58,880 --> 00:23:02,510
to playback those recordings on command

00:23:00,680 --> 00:23:05,540
line which can playback from journal or

00:23:02,510 --> 00:23:07,460
from elasticsearch and that you need to

00:23:05,540 --> 00:23:09,770
supply like run it on the same terminal

00:23:07,460 --> 00:23:11,330
only she recorded and the same same

00:23:09,770 --> 00:23:14,420
channel type on which she recorded the

00:23:11,330 --> 00:23:16,640
device there can be some confusion for

00:23:14,420 --> 00:23:18,740
that reason since we just feed the data

00:23:16,640 --> 00:23:20,420
to the terminal if something goes like

00:23:18,740 --> 00:23:23,030
if the session terminated for the user

00:23:20,420 --> 00:23:25,490
or if you record early your terminal

00:23:23,030 --> 00:23:29,720
after playback and end up in a messy

00:23:25,490 --> 00:23:33,410
solution you'll have to reset it there

00:23:29,720 --> 00:23:36,260
is the the web UI playback also it's

00:23:33,410 --> 00:23:37,940
written in JavaScript and not all the

00:23:36,260 --> 00:23:39,980
features are implemented there with the

00:23:37,940 --> 00:23:41,780
terminal features of course like people

00:23:39,980 --> 00:23:44,290
normally don't use features like double

00:23:41,780 --> 00:23:48,640
width font or double hate font or

00:23:44,290 --> 00:23:52,010
graphics on the terminal god forbid but

00:23:48,640 --> 00:23:53,300
anyway we cannot like make sure that we

00:23:52,010 --> 00:23:55,400
implement all the features for all these

00:23:53,300 --> 00:23:58,160
possible terminals so for that reason

00:23:55,400 --> 00:24:01,180
the idea is to actually embed a terminal

00:23:58,160 --> 00:24:03,650
emulator into the recording part so that

00:24:01,180 --> 00:24:05,200
we can always present the same terminal

00:24:03,650 --> 00:24:08,679
type to the program being the code

00:24:05,200 --> 00:24:11,470
we can always see we can always record

00:24:08,679 --> 00:24:15,279
the same kind of terminal language and

00:24:11,470 --> 00:24:16,720
we can limit the number of features that

00:24:15,279 --> 00:24:19,210
we need to implement in the terminal

00:24:16,720 --> 00:24:20,740
emulator run in the browser and at the

00:24:19,210 --> 00:24:22,269
moment they only consider that we have

00:24:20,740 --> 00:24:26,649
is libs each term which is used by

00:24:22,269 --> 00:24:29,950
neighboring project another thing is

00:24:26,649 --> 00:24:34,000
that we will need to convert character

00:24:29,950 --> 00:24:36,130
encodings because JSON supports utf-8

00:24:34,000 --> 00:24:38,649
and elasticsearch it only supports utf-8

00:24:36,130 --> 00:24:40,779
because they support JSON and some

00:24:38,649 --> 00:24:43,179
people still don't use utf-8 namely like

00:24:40,779 --> 00:24:46,840
example Japanese because of cultural

00:24:43,179 --> 00:24:49,330
issues so we'll need to convert that

00:24:46,840 --> 00:24:50,679
somehow and so so we can preserve the

00:24:49,330 --> 00:24:52,570
binary data they'll need to probably

00:24:50,679 --> 00:24:55,470
store both to convert the data and the

00:24:52,570 --> 00:24:58,600
binary data but make that optional

00:24:55,470 --> 00:25:00,100
playback seeking is fun because all the

00:24:58,600 --> 00:25:03,460
terminal States depends on what was

00:25:00,100 --> 00:25:05,889
before it so if something said the color

00:25:03,460 --> 00:25:08,409
of the background at the start and you

00:25:05,889 --> 00:25:11,260
did not record that or he did not play

00:25:08,409 --> 00:25:14,860
that back you might not even see your

00:25:11,260 --> 00:25:18,279
characters if they are the same color so

00:25:14,860 --> 00:25:20,320
the idea was to do snapshots in the

00:25:18,279 --> 00:25:22,960
playback because we have access to

00:25:20,320 --> 00:25:25,149
terminal emulator internals you can take

00:25:22,960 --> 00:25:26,649
regular snapshots of the state and then

00:25:25,149 --> 00:25:29,860
restore them quickly and then play back

00:25:26,649 --> 00:25:31,450
a little bit after but since we are

00:25:29,860 --> 00:25:34,480
leaning towards embedding the similar

00:25:31,450 --> 00:25:36,580
emulator anyway we'll probably just take

00:25:34,480 --> 00:25:38,350
those snapshots while we record and

00:25:36,580 --> 00:25:41,889
we'll have that ready in the log so that

00:25:38,350 --> 00:25:46,059
we can rewind of this that's the hole so

00:25:41,889 --> 00:25:48,639
if you want to try it the cockpit UI and

00:25:46,059 --> 00:25:51,100
you if you're brave enough go check out

00:25:48,639 --> 00:25:53,799
that branch read the heck and MD file

00:25:51,100 --> 00:25:57,010
that says it does stop stream hacking MD

00:25:53,799 --> 00:25:58,720
file it says how to how to build and run

00:25:57,010 --> 00:26:02,019
copy it it's not that hard but there

00:25:58,720 --> 00:26:04,809
might be some tricks then the rest is

00:26:02,019 --> 00:26:07,570
easy you just install T log there is a

00:26:04,809 --> 00:26:11,350
fresh rpm there and that link and if you

00:26:07,570 --> 00:26:15,310
look for Cilic terminal logger you can

00:26:11,350 --> 00:26:17,770
find it I will upload those slides

00:26:15,310 --> 00:26:19,690
so you just installed the RPM or you

00:26:17,770 --> 00:26:22,900
build the fresh T log and put create a

00:26:19,690 --> 00:26:26,350
user with this shell and then log in as

00:26:22,900 --> 00:26:28,030
that user and go check out this page on

00:26:26,350 --> 00:26:29,740
your localhost once you get the coke

00:26:28,030 --> 00:26:38,710
patron in it this session should appear

00:26:29,740 --> 00:26:46,990
there thank you we have time for

00:26:38,710 --> 00:26:49,320
questions yeah we any questions the

00:26:46,990 --> 00:26:49,320
right one

00:26:50,880 --> 00:26:54,390
yes yes please

00:26:58,840 --> 00:27:04,180
so the question is if we have to force

00:27:02,290 --> 00:27:07,090
the shell upon the user how the user

00:27:04,180 --> 00:27:11,530
then able to configure the shell first

00:27:07,090 --> 00:27:13,660
of all you can in general you can change

00:27:11,530 --> 00:27:15,640
the global shell that tillow that that

00:27:13,660 --> 00:27:17,080
recording uses that obviously not

00:27:15,640 --> 00:27:19,510
doesn't work if you have multiple users

00:27:17,080 --> 00:27:24,400
with different preferences then we have

00:27:19,510 --> 00:27:27,670
a feature where you can make sim links

00:27:24,400 --> 00:27:29,590
to that shell which several symlinks to

00:27:27,670 --> 00:27:30,940
that shell the specific names including

00:27:29,590 --> 00:27:33,250
the path to the shell that you want to

00:27:30,940 --> 00:27:35,230
run and if you assign that symlink as

00:27:33,250 --> 00:27:36,940
the user's shell then the program will

00:27:35,230 --> 00:27:39,280
figure it out which shell you wanted to

00:27:36,940 --> 00:27:41,230
assign so it will be the protest by self

00:27:39,280 --> 00:27:43,090
is called chill or Gregg session if you

00:27:41,230 --> 00:27:45,940
make it seem like symlink tillow Gregg

00:27:43,090 --> 00:27:48,370
session she'll be in bash or beans at

00:27:45,940 --> 00:27:50,230
shell and then assign that shelter the

00:27:48,370 --> 00:27:51,760
user then when it starts it will figure

00:27:50,230 --> 00:27:53,710
out that they need to run that shell and

00:27:51,760 --> 00:27:55,660
otherwise you can pass the shell through

00:27:53,710 --> 00:27:58,420
the environment variable and that's what

00:27:55,660 --> 00:27:59,740
we use an SSD where there is a feature

00:27:58,420 --> 00:28:01,750
that you can say like record these

00:27:59,740 --> 00:28:03,970
diffusers and these groups and then

00:28:01,750 --> 00:28:06,790
assess SDA through tricks of its own and

00:28:03,970 --> 00:28:09,880
assess and Pam modules substitutes that

00:28:06,790 --> 00:28:12,029
shell and you don't notice anything any

00:28:09,880 --> 00:28:14,260
more questions yes please

00:28:12,029 --> 00:28:29,650
are you aware of the culture

00:28:14,260 --> 00:28:32,410
which is essentially so the question was

00:28:29,650 --> 00:28:34,929
am i aware of the teleport project which

00:28:32,410 --> 00:28:39,280
is a sage session with features like

00:28:34,929 --> 00:28:42,460
session recording I'm not aware of this

00:28:39,280 --> 00:28:45,370
specific thing I am affair of other

00:28:42,460 --> 00:28:49,360
things like pseudo a sage or something

00:28:45,370 --> 00:28:51,280
that do that the point is that data so

00:28:49,360 --> 00:28:54,419
sage server only lost record in SSH

00:28:51,280 --> 00:28:57,429
sessions this solution allows recording

00:28:54,419 --> 00:29:01,690
console logins as a sage session telnet

00:28:57,429 --> 00:29:03,520
session whatever you want and people

00:29:01,690 --> 00:29:05,679
like to have a library which then

00:29:03,520 --> 00:29:07,570
projects like OpenShift we would be able

00:29:05,679 --> 00:29:10,419
to embed into their system to record

00:29:07,570 --> 00:29:12,790
like it's sessions in in containers

00:29:10,419 --> 00:29:14,860
inside container city because some

00:29:12,790 --> 00:29:18,370
people were asking that this is some

00:29:14,860 --> 00:29:21,030
idea that we were entertaining anyone

00:29:18,370 --> 00:29:21,030
yes please

00:29:32,550 --> 00:29:37,359
[Music]

00:29:34,059 --> 00:29:40,359
so the question was if it does this

00:29:37,359 --> 00:29:43,330
solution require any kernel parts or not

00:29:40,359 --> 00:29:45,009
that is the last question I'm sorry no

00:29:43,330 --> 00:29:47,409
doesn't require any kernel parts at all

00:29:45,009 --> 00:29:50,529
it's just a you download this install it

00:29:47,409 --> 00:29:52,200
and that's it no kernel parts thank you

00:29:50,529 --> 00:29:59,799
everyone

00:29:52,200 --> 00:29:59,799

YouTube URL: https://www.youtube.com/watch?v=wagIISzJL48


