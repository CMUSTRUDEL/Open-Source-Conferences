Title: Automated system partitioning based on hypergraphs for 3D stacked integrated circuits
Publication date: 2018-02-03
Playlist: FOSDEM 2018
Description: 
	by Quentin Delhaye

At: FOSDEM 2018
Room: K.4.201
Scheduled start: 2018-02-03 14:00:00+01
Captions: 
	00:00:27,140 --> 00:00:36,450
okay let's do this hello um so for the

00:00:34,710 --> 00:00:38,460
next 20 minutes now we'll talk about

00:00:36,450 --> 00:00:40,469
automated system partitioning using

00:00:38,460 --> 00:00:43,379
hydrograph for 3d stack into the

00:00:40,469 --> 00:00:45,329
integrated circuits okay that's quite a

00:00:43,379 --> 00:00:46,920
long title I had called a hard time

00:00:45,329 --> 00:00:49,409
remembering remembering it

00:00:46,920 --> 00:00:51,149
so can I make it simpler by simply

00:00:49,409 --> 00:00:54,480
saying and we talk about integrated

00:00:51,149 --> 00:00:58,019
circuits again and how to make them 3d

00:00:54,480 --> 00:01:02,159
and also why want to make them 3d okay

00:00:58,019 --> 00:01:03,600
um so back to basic first I'm sure most

00:01:02,159 --> 00:01:06,090
of you already know how it works but

00:01:03,600 --> 00:01:08,070
just make sure I'm the most basic block

00:01:06,090 --> 00:01:10,290
just transistor we'd back together to

00:01:08,070 --> 00:01:11,910
make some logic gates and also gate put

00:01:10,290 --> 00:01:13,950
together would make some logic functions

00:01:11,910 --> 00:01:16,890
and again all the logic functions will

00:01:13,950 --> 00:01:20,370
make an RC like start just explained a

00:01:16,890 --> 00:01:22,050
few minutes ago and after that you can

00:01:20,370 --> 00:01:25,320
package them using whatever kind of

00:01:22,050 --> 00:01:27,180
package you want and what is important

00:01:25,320 --> 00:01:29,550
to guarantee the performance of your I

00:01:27,180 --> 00:01:32,040
see is that you have good transistors

00:01:29,550 --> 00:01:36,030
and a good quality interconnection

00:01:32,040 --> 00:01:37,740
system okay good Network no one is a

00:01:36,030 --> 00:01:40,200
nice she look like one you have

00:01:37,740 --> 00:01:42,750
everything done so there are three

00:01:40,200 --> 00:01:45,660
essential parts you have on the bottom

00:01:42,750 --> 00:01:47,490
the substrates in grey here on which are

00:01:45,660 --> 00:01:49,950
all printed to your gates your

00:01:47,490 --> 00:01:52,230
transistors and then a few metal layers

00:01:49,950 --> 00:01:53,880
to interconnect them all together so

00:01:52,230 --> 00:01:57,210
what is important to understand here is

00:01:53,880 --> 00:01:59,640
that a regular 2d IC only has one layer

00:01:57,210 --> 00:02:04,260
of transistor and that is one of his

00:01:59,640 --> 00:02:06,450
limitation so what do we want to change

00:02:04,260 --> 00:02:08,369
how can you go further and what are the

00:02:06,450 --> 00:02:13,200
limitation of this current technology

00:02:08,369 --> 00:02:16,100
well one of those limitation is the is

00:02:13,200 --> 00:02:18,560
it is that when you look at

00:02:16,100 --> 00:02:20,600
this a standard cell all different

00:02:18,560 --> 00:02:24,170
dimensions defining your standard cell

00:02:20,600 --> 00:02:26,210
technology using for designing URC well

00:02:24,170 --> 00:02:27,980
you have metal pitch vintage can pitch

00:02:26,210 --> 00:02:30,620
at all the kind of distances between

00:02:27,980 --> 00:02:33,320
elements in your design that if you want

00:02:30,620 --> 00:02:35,120
to pack more features in your IC you

00:02:33,320 --> 00:02:36,770
need to have more transistors and if you

00:02:35,120 --> 00:02:39,020
want to have more transistors without

00:02:36,770 --> 00:02:41,090
making the RC too big need to make the

00:02:39,020 --> 00:02:41,960
transistor smaller the obviously can't

00:02:41,090 --> 00:02:44,450
do that forever

00:02:41,960 --> 00:02:47,270
so at some point in time it will hit a

00:02:44,450 --> 00:02:49,690
physical wall and also financial war so

00:02:47,270 --> 00:02:52,220
the conscious train shrink them forever

00:02:49,690 --> 00:02:55,250
one other problem is that you can't

00:02:52,220 --> 00:02:57,320
simply make the RC bigger so here the

00:02:55,250 --> 00:02:59,630
limiting factor is that when you look at

00:02:57,320 --> 00:03:01,460
a wafer here there's a big circle with a

00:02:59,630 --> 00:03:04,010
rainbow pattern or which you will print

00:03:01,460 --> 00:03:05,930
to ICS you need to know that there are a

00:03:04,010 --> 00:03:11,090
constant amount of defect on the wafer

00:03:05,930 --> 00:03:12,890
so if the ICS on the left are bigger you

00:03:11,090 --> 00:03:14,870
will have a lower proportion of good

00:03:12,890 --> 00:03:17,390
doors as a bug dies that's what we call

00:03:14,870 --> 00:03:19,340
the yield so if the yield is lower the

00:03:17,390 --> 00:03:21,020
chip will be more expensive so you need

00:03:19,340 --> 00:03:22,790
to limit the size or the chip so that

00:03:21,020 --> 00:03:26,090
the yield is sufficiently high and can

00:03:22,790 --> 00:03:28,550
stay affordable that's for example what

00:03:26,090 --> 00:03:30,410
darlings did for the latest verge 7

00:03:28,550 --> 00:03:32,600
technologies on a fugitive designing

00:03:30,410 --> 00:03:35,810
steny way just so you know instead of

00:03:32,600 --> 00:03:37,490
having one big IC for the FPGA they

00:03:35,810 --> 00:03:39,860
split it into small ICS

00:03:37,490 --> 00:03:42,020
that are more easier that are easier to

00:03:39,860 --> 00:03:43,970
manufacture and then there are all

00:03:42,020 --> 00:03:46,790
interconnected together under the inside

00:03:43,970 --> 00:03:48,500
package under the hood so it was a

00:03:46,790 --> 00:03:51,800
freaking expensive but more fully well

00:03:48,500 --> 00:03:55,970
that would have been with one I see ok

00:03:51,800 --> 00:04:00,350
so know what is a 3d I see how do we go

00:03:55,970 --> 00:04:03,080
from a 2d into a 3d I see well ok let's

00:04:00,350 --> 00:04:05,420
just take back a regular to DRC

00:04:03,080 --> 00:04:09,080
and well the most faithful way to make a

00:04:05,420 --> 00:04:11,390
3d is simply to stuck two layers of ICS

00:04:09,080 --> 00:04:13,970
and you have a 3d RC done okay Gordon

00:04:11,390 --> 00:04:15,680
now can make it better though is to not

00:04:13,970 --> 00:04:16,880
having then what we call face to back

00:04:15,680 --> 00:04:19,010
that is the substrate

00:04:16,880 --> 00:04:20,810
facing the metal layers you could have

00:04:19,010 --> 00:04:22,310
directly to metal layers fish in it

00:04:20,810 --> 00:04:23,780
facing each other so that the

00:04:22,310 --> 00:04:28,040
interconnection between the two layers

00:04:23,780 --> 00:04:29,449
is smaller can go even further by

00:04:28,040 --> 00:04:32,199
directly having to

00:04:29,449 --> 00:04:35,479
layers of transistors two layers gates

00:04:32,199 --> 00:04:39,830
directly on top of each other and all

00:04:35,479 --> 00:04:42,439
the metal layers above them but are all

00:04:39,830 --> 00:04:45,650
manufacturing problems not really what

00:04:42,439 --> 00:04:47,870
we want to focus on today somebody still

00:04:45,650 --> 00:04:50,809
needs to decide on which layer it will

00:04:47,870 --> 00:04:53,749
place each of your gates so that just is

00:04:50,809 --> 00:04:56,270
decision that needs to be made now what

00:04:53,749 --> 00:04:59,300
are the benefits of been 3d so we so can

00:04:56,270 --> 00:05:01,550
limit the size of the RC but also for

00:04:59,300 --> 00:05:03,080
example we have on the left a 2d regular

00:05:01,550 --> 00:05:05,509
I received all the blocks interconnected

00:05:03,080 --> 00:05:07,189
and on the right you have the red blocks

00:05:05,509 --> 00:05:09,770
that have been moved to a second layer

00:05:07,189 --> 00:05:12,080
on top of the the blue and green blocks

00:05:09,770 --> 00:05:14,900
you can see that all the connections are

00:05:12,080 --> 00:05:16,400
shorter and by having a connection

00:05:14,900 --> 00:05:18,800
shorter you have actually a lot of

00:05:16,400 --> 00:05:20,270
benefits you can increase the

00:05:18,800 --> 00:05:22,999
performance by reducing the critical

00:05:20,270 --> 00:05:25,009
path you will also reduce the power

00:05:22,999 --> 00:05:28,180
consumption by reducing the power drop

00:05:25,009 --> 00:05:31,009
and also improve the ra utilisation

00:05:28,180 --> 00:05:32,599
simply by reducing the routing

00:05:31,009 --> 00:05:35,689
congestion and limiting the use of

00:05:32,599 --> 00:05:38,360
buffers since the nets are the shorter

00:05:35,689 --> 00:05:43,370
so a lot of benefits just by making the

00:05:38,360 --> 00:05:45,589
all the wires shorter now for the rest

00:05:43,370 --> 00:05:48,709
representation we see how we can

00:05:45,589 --> 00:05:51,469
transform to the RC into a 3d RC using

00:05:48,709 --> 00:05:53,240
existing 2d flows and what blocks we

00:05:51,469 --> 00:05:56,899
need to add to transfer make that first

00:05:53,240 --> 00:05:59,569
transformation okay so very quickly

00:05:56,899 --> 00:06:03,979
staff explained is very well half an

00:05:59,569 --> 00:06:05,689
hour ago for the 2d flow first RTO just

00:06:03,979 --> 00:06:07,699
described the design then you synthesize

00:06:05,689 --> 00:06:10,339
it using any open source of closed

00:06:07,699 --> 00:06:11,899
source if you want tool that will

00:06:10,339 --> 00:06:13,610
generate netlist and the necklace will

00:06:11,899 --> 00:06:16,099
be placed in round heads using a def

00:06:13,610 --> 00:06:17,990
file in that will use them later and if

00:06:16,099 --> 00:06:19,759
you want to stop there that's fine you

00:06:17,990 --> 00:06:21,620
will have a 2d origin or it's on layout

00:06:19,759 --> 00:06:24,919
send it to two staff you can manufacture

00:06:21,620 --> 00:06:26,749
it for you can use it and that's it but

00:06:24,919 --> 00:06:30,499
we want to go further we want to extend

00:06:26,749 --> 00:06:32,199
this 2d flow into a 3d flow and that

00:06:30,499 --> 00:06:35,330
extension

00:06:32,199 --> 00:06:37,069
well first would be to simply manually

00:06:35,330 --> 00:06:39,439
partition the design that is you have

00:06:37,069 --> 00:06:41,870
you place a rotor design and we you will

00:06:39,439 --> 00:06:42,980
decide pick which gate with logic blocks

00:06:41,870 --> 00:06:45,230
will go on which

00:06:42,980 --> 00:06:47,060
and it would need a very clever designer

00:06:45,230 --> 00:06:50,120
to do that and to interrupt the flow

00:06:47,060 --> 00:06:52,400
manually panic and in replace and wrote

00:06:50,120 --> 00:06:54,920
each die that is a bit stupid actually

00:06:52,400 --> 00:06:57,680
we want to automate this manual

00:06:54,920 --> 00:07:01,010
partitioning so we have a wall 3d EDA

00:06:57,680 --> 00:07:02,750
flow okay so see how it works

00:07:01,010 --> 00:07:06,890
we'll take an example so let's say that

00:07:02,750 --> 00:07:09,050
this is representation of a design the

00:07:06,890 --> 00:07:11,390
objective here is to simply split it

00:07:09,050 --> 00:07:14,270
into as what we call a by partition so

00:07:11,390 --> 00:07:16,100
having two portion at the end and and we

00:07:14,270 --> 00:07:18,430
want those do portion to be the same

00:07:16,100 --> 00:07:21,290
size that is a balanced by partitioning

00:07:18,430 --> 00:07:22,880
and also one other objectives is not

00:07:21,290 --> 00:07:26,390
simply buttering the design and then

00:07:22,880 --> 00:07:28,070
doing anything I want to limit the 3d

00:07:26,390 --> 00:07:31,130
interconnectivity that is having as

00:07:28,070 --> 00:07:32,810
little nets that are 3d as possible okay

00:07:31,130 --> 00:07:36,200
cut ask little nets as possible one

00:07:32,810 --> 00:07:38,540
during the partitioning okay to do that

00:07:36,200 --> 00:07:41,030
first we actually need to cluster the

00:07:38,540 --> 00:07:44,390
design no positioning it we first

00:07:41,030 --> 00:07:47,540
cluster why because well earlier I told

00:07:44,390 --> 00:07:51,170
you that we want to reduce the wire

00:07:47,540 --> 00:07:54,380
lengths so if we just keep the design as

00:07:51,170 --> 00:07:56,600
is on the Left we may just get some

00:07:54,380 --> 00:07:58,220
really short wires and those wires when

00:07:56,600 --> 00:08:00,290
going 3d going through the old

00:07:58,220 --> 00:08:03,140
interconnection for the face to face to

00:08:00,290 --> 00:08:06,860
face to barcode vias and straw then we

00:08:03,140 --> 00:08:09,050
out remade be made longer so we would

00:08:06,860 --> 00:08:11,090
lose in performance so we want to close

00:08:09,050 --> 00:08:13,280
the designs that you can hide all the

00:08:11,090 --> 00:08:15,440
shorter classes and shorter wires inside

00:08:13,280 --> 00:08:17,890
the clusters and just highlight the

00:08:15,440 --> 00:08:20,690
longer wires so now we have two choices

00:08:17,890 --> 00:08:22,040
aside from the clustering methods is to

00:08:20,690 --> 00:08:23,420
choose the clustering grain that is the

00:08:22,040 --> 00:08:25,400
amount of clusters you want in your

00:08:23,420 --> 00:08:27,410
design in this case where it'll just

00:08:25,400 --> 00:08:29,330
have four clusters so we are very few

00:08:27,410 --> 00:08:31,190
net that's great but problem is that

00:08:29,330 --> 00:08:33,200
some longer wires are still hidden

00:08:31,190 --> 00:08:35,510
inside the cluster and that's not great

00:08:33,200 --> 00:08:37,700
on the other hand of the spectrum you

00:08:35,510 --> 00:08:40,400
could have a lot of clusters very small

00:08:37,700 --> 00:08:43,130
clusters and this time that's great

00:08:40,400 --> 00:08:44,660
although longer wires are outside to

00:08:43,130 --> 00:08:46,580
clear so you can cut them you can work

00:08:44,660 --> 00:08:51,110
on them any profit system but a problem

00:08:46,580 --> 00:08:54,020
is that um well the a lot of nets and

00:08:51,110 --> 00:08:55,540
you may get more than needed so one of

00:08:54,020 --> 00:08:57,730
the trader of one of the

00:08:55,540 --> 00:09:00,670
game here is to decide the clustering

00:08:57,730 --> 00:09:02,500
drain to balance between the two aspects

00:09:00,670 --> 00:09:04,449
of the clustering okay once that's done

00:09:02,500 --> 00:09:07,540
let's say that this is the clustering

00:09:04,449 --> 00:09:09,850
drain I want to use okay the next step

00:09:07,540 --> 00:09:13,060
is to extract good graph that is

00:09:09,850 --> 00:09:13,690
representing this design but really easy

00:09:13,060 --> 00:09:15,759
actually

00:09:13,690 --> 00:09:17,709
so each cluster each blue cluster we

00:09:15,759 --> 00:09:19,720
become one node what color vertex of the

00:09:17,709 --> 00:09:21,730
graph and then each net connecting two

00:09:19,720 --> 00:09:23,610
clusters will become one edge of the

00:09:21,730 --> 00:09:28,540
breadth and do that for a wall graph

00:09:23,610 --> 00:09:31,089
extraction complete that's it what not

00:09:28,540 --> 00:09:37,060
exactly because there are some nets like

00:09:31,089 --> 00:09:41,350
the red over there that is extracted as

00:09:37,060 --> 00:09:43,839
two edges oh it's one net it shouldn't

00:09:41,350 --> 00:09:46,329
be two edges to be one objects also in a

00:09:43,839 --> 00:09:48,279
graph so the graph is actually two to

00:09:46,329 --> 00:09:49,690
limited definition to work really

00:09:48,279 --> 00:09:52,600
represent the architecture of a design

00:09:49,690 --> 00:09:55,360
we need to extend this notion using what

00:09:52,600 --> 00:09:57,160
we call hyper graphs we just add one

00:09:55,360 --> 00:09:58,959
really easy thing to understand is that

00:09:57,160 --> 00:10:01,329
instead of having simply edges

00:09:58,959 --> 00:10:03,579
connecting two nodes two vertices will

00:10:01,329 --> 00:10:05,850
have hyper edges like the blue one in

00:10:03,579 --> 00:10:09,069
the background that would connect

00:10:05,850 --> 00:10:13,180
several nodes all together using one

00:10:09,069 --> 00:10:14,500
object one hytrek K so if we come back

00:10:13,180 --> 00:10:17,980
to the net that was pretty mad

00:10:14,500 --> 00:10:20,860
problematic here one transforming this

00:10:17,980 --> 00:10:23,860
net using hyper graph it would just be

00:10:20,860 --> 00:10:25,480
one hyper edge as when you cut one part

00:10:23,860 --> 00:10:27,519
of the Nets you would actually call the

00:10:25,480 --> 00:10:29,860
world hyper edge you know to separate a

00:10:27,519 --> 00:10:31,720
separate edges and you can do that for

00:10:29,860 --> 00:10:34,120
the wall design and have something that

00:10:31,720 --> 00:10:37,990
it's ugly sorry for the club lines in in

00:10:34,120 --> 00:10:40,569
the room and once that's done you can

00:10:37,990 --> 00:10:43,149
finally move on to the next step okay so

00:10:40,569 --> 00:10:45,370
no can really part in the design using

00:10:43,149 --> 00:10:47,589
some polishing algorithm so I won't dive

00:10:45,370 --> 00:10:52,959
into the details here not necessary and

00:10:47,589 --> 00:10:55,029
that the idea is to respect your

00:10:52,959 --> 00:10:56,110
objectives we set at the beginning so

00:10:55,029 --> 00:10:59,439
there were to have a balanced

00:10:56,110 --> 00:11:00,910
partitioning that is having in this case

00:10:59,439 --> 00:11:03,850
we have the same of cluster since

00:11:00,910 --> 00:11:06,940
partition as great and we only cut two

00:11:03,850 --> 00:11:09,680
hyper edges and that's great as well

00:11:06,940 --> 00:11:13,040
okay let's say it's done the next step

00:11:09,680 --> 00:11:16,010
is to generate some netlist so in a 2d

00:11:13,040 --> 00:11:17,990
Isaac flow like stuff said earlier again

00:11:16,010 --> 00:11:19,760
you would generate a netlist after the

00:11:17,990 --> 00:11:22,459
synthesis and then you will use this

00:11:19,760 --> 00:11:24,380
netlist to place a neurology design well

00:11:22,459 --> 00:11:26,540
for a 3d flow is exactly the same you

00:11:24,380 --> 00:11:28,610
need to regenerate an atlas for each of

00:11:26,540 --> 00:11:30,500
the partitions for each die for each

00:11:28,610 --> 00:11:34,430
layer that you can then place in

00:11:30,500 --> 00:11:38,020
relative interconnects and together so

00:11:34,430 --> 00:11:40,190
those four steps aim at replacing that

00:11:38,020 --> 00:11:42,649
stupid and silly money manual

00:11:40,190 --> 00:11:45,770
partitioning so that we can have manual

00:11:42,649 --> 00:11:51,680
3d and automated no automated fully for

00:11:45,770 --> 00:11:53,779
not manual automated 3d flow okay and so

00:11:51,680 --> 00:11:58,250
some of those block are all made like

00:11:53,779 --> 00:12:00,770
for example the clustering we just take

00:11:58,250 --> 00:12:04,100
the death file that is used during the

00:12:00,770 --> 00:12:07,100
place and route step of the the EDF flow

00:12:04,100 --> 00:12:10,130
and to extract all the design geometry

00:12:07,100 --> 00:12:15,050
we was also the left file for the gates

00:12:10,130 --> 00:12:16,700
properties and once the design I've been

00:12:15,050 --> 00:12:19,339
clustered is sent to the graph

00:12:16,700 --> 00:12:22,130
extraction algorithm also a made in this

00:12:19,339 --> 00:12:24,020
case just while work on the graph

00:12:22,130 --> 00:12:26,149
extract some information said the

00:12:24,020 --> 00:12:28,100
weights and the objectives for the graph

00:12:26,149 --> 00:12:30,529
partitioning and formats the designs

00:12:28,100 --> 00:12:33,320
that can be right by graph partitioning

00:12:30,529 --> 00:12:34,640
tools so those were not unmade because

00:12:33,320 --> 00:12:37,190
there are really great passionate or not

00:12:34,640 --> 00:12:39,680
already exist out there so no reason to

00:12:37,190 --> 00:12:41,720
make our own and the two for his take of

00:12:39,680 --> 00:12:43,399
credits are we used our each Matisse and

00:12:41,720 --> 00:12:45,110
Petro respectively from the therapy slab

00:12:43,399 --> 00:12:46,880
at Minnesota University and one

00:12:45,110 --> 00:12:49,760
developed bar I get for circuitry work

00:12:46,880 --> 00:12:51,410
during his PhD at Beacon University so

00:12:49,760 --> 00:12:53,360
those two are we great

00:12:51,410 --> 00:12:56,959
hypergraph matching tools if you want to

00:12:53,360 --> 00:13:00,020
use some and the last step is still not

00:12:56,959 --> 00:13:02,120
on github yet really early-stage

00:13:00,020 --> 00:13:03,620
developments and we're trying to like I

00:13:02,120 --> 00:13:06,950
said take the netlist

00:13:03,620 --> 00:13:09,079
from the 2d synthesis the information

00:13:06,950 --> 00:13:11,720
from the graph partitioning and then

00:13:09,079 --> 00:13:14,990
generate a splits and at least for the

00:13:11,720 --> 00:13:19,730
design okay

00:13:14,990 --> 00:13:20,250
this flow has been tested on so while

00:13:19,730 --> 00:13:22,950
these

00:13:20,250 --> 00:13:25,850
among wish we had the LDPC which a very

00:13:22,950 --> 00:13:31,130
small call for error correcting code and

00:13:25,850 --> 00:13:34,140
one version of race five and or was it

00:13:31,130 --> 00:13:36,360
mercury University here Berkeley and in

00:13:34,140 --> 00:13:39,000
some modules of the compass party to SOC

00:13:36,360 --> 00:13:41,880
so we did not tackle the wall open

00:13:39,000 --> 00:13:44,700
Sparkle one time but we splits into just

00:13:41,880 --> 00:13:46,500
the SPC which is the call the CCX the

00:13:44,700 --> 00:13:48,270
memory crossbar the arch XD Ethernet

00:13:46,500 --> 00:13:50,580
module so all of them it's different

00:13:48,270 --> 00:13:53,160
properties different sizes and different

00:13:50,580 --> 00:13:55,110
amount of gates and nets so it can be

00:13:53,160 --> 00:13:57,090
interesting to see if all flow is

00:13:55,110 --> 00:14:02,760
rubbish two different kinds of designs

00:13:57,090 --> 00:14:06,690
and talking about robinus well yes and

00:14:02,760 --> 00:14:10,080
no actually so what you can hope using

00:14:06,690 --> 00:14:12,240
this flow for this particular designs is

00:14:10,080 --> 00:14:14,340
to gain up to seventy seven percent in

00:14:12,240 --> 00:14:16,710
total wire length reduction I want going

00:14:14,340 --> 00:14:19,350
3G but you can see that it heavily

00:14:16,710 --> 00:14:22,860
depends on the design that is tested so

00:14:19,350 --> 00:14:24,750
the crossbar highly benefit from it but

00:14:22,860 --> 00:14:28,770
the the ethernet module in green on the

00:14:24,750 --> 00:14:30,870
right can gain to up to one down to zero

00:14:28,770 --> 00:14:35,760
percent of games just lose some

00:14:30,870 --> 00:14:37,860
performance and also widely depends even

00:14:35,760 --> 00:14:41,130
for the same design on the clustering

00:14:37,860 --> 00:14:43,500
grain that is used that's great but also

00:14:41,130 --> 00:14:45,030
on the ways that we set the objective we

00:14:43,500 --> 00:14:46,410
set for the graph partitioning so do we

00:14:45,030 --> 00:14:48,030
want to reduce the amount of net data

00:14:46,410 --> 00:14:51,450
crossing in 3d that we want to reduce

00:14:48,030 --> 00:14:53,040
the total wire length or maximized or

00:14:51,450 --> 00:14:55,530
wire length that is cut and all those

00:14:53,040 --> 00:15:00,150
kind of objectives will impact the gain

00:14:55,530 --> 00:15:03,500
in the end um one or again we can have a

00:15:00,150 --> 00:15:06,270
part from one on top of having the wire

00:15:03,500 --> 00:15:08,730
shorter total wire length is having a

00:15:06,270 --> 00:15:10,950
short critical path so that is important

00:15:08,730 --> 00:15:12,990
for the performance gain and again can

00:15:10,950 --> 00:15:15,180
see that the crossbar will gain more

00:15:12,990 --> 00:15:18,030
than the orders in up to sixty one

00:15:15,180 --> 00:15:22,770
percent but more than let's say thirty

00:15:18,030 --> 00:15:25,500
five percent in average okay but there

00:15:22,770 --> 00:15:27,540
are still a lot of open questions so

00:15:25,500 --> 00:15:30,540
this work is far from being over it's

00:15:27,540 --> 00:15:32,940
all part of my PhD thesis are still have

00:15:30,540 --> 00:15:34,830
three years left sometime

00:15:32,940 --> 00:15:36,750
odd moments some of the the question

00:15:34,830 --> 00:15:38,250
we're asking ourselves are what is the

00:15:36,750 --> 00:15:41,610
best clustering so the one I showed you

00:15:38,250 --> 00:15:43,560
here is what I prefer to say naive than

00:15:41,610 --> 00:15:46,650
stupid but it's actually stupid

00:15:43,560 --> 00:15:48,270
it's just geometric one you just take

00:15:46,650 --> 00:15:50,160
the design and then split it into

00:15:48,270 --> 00:15:52,530
squares or rectangles of the same size

00:15:50,160 --> 00:15:54,330
but you will cut a lot of short warriors

00:15:52,530 --> 00:15:57,120
and that's what I want to avoid so this

00:15:54,330 --> 00:15:58,920
must be a better clustering method and

00:15:57,120 --> 00:16:02,760
we're looking for that's best clustering

00:15:58,920 --> 00:16:06,120
method and then once we find it that

00:16:02,760 --> 00:16:08,460
actually actually have an impact on the

00:16:06,120 --> 00:16:10,260
design partition ability is it's really

00:16:08,460 --> 00:16:13,140
important to have a better clustering

00:16:10,260 --> 00:16:14,970
method or not that generally anything is

00:16:13,140 --> 00:16:18,060
the grain that important so we saw in

00:16:14,970 --> 00:16:19,800
the early result that it seems to be but

00:16:18,060 --> 00:16:22,380
it's always the case for all the designs

00:16:19,800 --> 00:16:24,900
and on top of that can we predict the

00:16:22,380 --> 00:16:27,690
Parchin ability of design so it gave us

00:16:24,900 --> 00:16:30,000
a to the ICU designed that can we

00:16:27,690 --> 00:16:32,610
guarantee you before trying to do the

00:16:30,000 --> 00:16:34,590
war flow for the EDF though that we can

00:16:32,610 --> 00:16:37,350
gain up to I don't know 30 or 40 percent

00:16:34,590 --> 00:16:38,400
performance by doing 3d is it worth the

00:16:37,350 --> 00:16:41,970
hassle

00:16:38,400 --> 00:16:43,440
um so those are just enough rambling a

00:16:41,970 --> 00:16:45,870
question was asking ourselves you have

00:16:43,440 --> 00:16:47,250
some of your own now we'll be more than

00:16:45,870 --> 00:16:49,170
what happy to answer them

00:16:47,250 --> 00:16:58,909
thank you for your attention

00:16:49,170 --> 00:16:58,909
[Applause]

00:17:10,450 --> 00:17:13,549
[Music]

00:17:14,169 --> 00:17:18,769
yes odd moments is really later than the

00:17:17,029 --> 00:17:21,019
process oh yeah sorry

00:17:18,769 --> 00:17:24,019
so the question here is can you directly

00:17:21,019 --> 00:17:25,480
design you you are surprisingly 3G you

00:17:24,019 --> 00:17:27,909
sort of having to polishing it later

00:17:25,480 --> 00:17:30,769
that's it yeah okay

00:17:27,909 --> 00:17:34,519
you cannot yet do that because you would

00:17:30,769 --> 00:17:37,039
like some 3d awareness in the flow so if

00:17:34,519 --> 00:17:39,169
you design you our say 3d that is the

00:17:37,039 --> 00:17:41,029
aim in the future but in the near future

00:17:39,169 --> 00:17:42,620
we come to that yet because we lack some

00:17:41,029 --> 00:17:44,510
tools to place in Raleigh facts upon a

00:17:42,620 --> 00:17:46,789
three dimensions so all the place in

00:17:44,510 --> 00:17:50,179
round tools are just two dimensions X&Y

00:17:46,789 --> 00:17:52,039
and if you want to have a 3d aware flow

00:17:50,179 --> 00:17:53,539
you will need to add one set of

00:17:52,039 --> 00:17:55,610
coordinate to the placement roten that

00:17:53,539 --> 00:17:59,470
is not done yet so now you still need to

00:17:55,610 --> 00:17:59,470
design it in 2d and then split it

00:18:10,960 --> 00:18:16,270
what what impact performance

00:18:19,990 --> 00:18:24,710
interconnection yeah so it's asking if

00:18:22,430 --> 00:18:27,950
there are performance impacts when going

00:18:24,710 --> 00:18:31,220
3-d versus in regular 2d I see yes

00:18:27,950 --> 00:18:32,390
actually so indeed 1u if I just go back

00:18:31,220 --> 00:18:34,850
to the slice would be easier for

00:18:32,390 --> 00:18:36,290
everybody to understand one go 3d you

00:18:34,850 --> 00:18:40,310
have obviously interconnection between

00:18:36,290 --> 00:18:42,320
the two layers like here and those the

00:18:40,310 --> 00:18:44,780
connection interconnections are longer

00:18:42,320 --> 00:18:47,420
that regular metal layers that can say

00:18:44,780 --> 00:18:49,400
the one you have a at the front see is

00:18:47,420 --> 00:18:52,850
longer than the metal layers you have

00:18:49,400 --> 00:18:55,340
here and we try to reduce the

00:18:52,850 --> 00:18:57,080
performance loss due to this longer vias

00:18:55,340 --> 00:18:59,990
interconnection between two layers by

00:18:57,080 --> 00:19:02,960
skirting the longest nest that would be

00:18:59,990 --> 00:19:04,700
shorter even when doing 3d so you would

00:19:02,960 --> 00:19:06,200
have actually yet performance loss if

00:19:04,700 --> 00:19:08,540
you could read short wires that will be

00:19:06,200 --> 00:19:10,750
elongated by going 3d and try to avoid

00:19:08,540 --> 00:19:10,750
that

00:19:29,929 --> 00:19:35,330
I do not really know how it works so

00:19:33,679 --> 00:19:38,480
yeah sorry

00:19:35,330 --> 00:19:40,429
my guess is either way is fine you can't

00:19:38,480 --> 00:19:42,350
say to have a place in route for each

00:19:40,429 --> 00:19:45,279
layer without constraining anything

00:19:42,350 --> 00:19:50,330
because they would just take the same

00:19:45,279 --> 00:19:52,789
design I simply used it just the simple

00:19:50,330 --> 00:19:55,640
point I had in 2d but with more space to

00:19:52,789 --> 00:19:57,440
work on so you could say for example

00:19:55,640 --> 00:20:00,289
that going with a white blocks on top

00:19:57,440 --> 00:20:02,600
what would be all scrambled and moving

00:20:00,289 --> 00:20:05,419
away when in fact it would just be

00:20:02,600 --> 00:20:07,460
placed closer to each other and the top

00:20:05,419 --> 00:20:09,620
left cell would not be on the bottom

00:20:07,460 --> 00:20:12,080
right which stay on the top left goes to

00:20:09,620 --> 00:20:14,390
the place in route 1 it had less space

00:20:12,080 --> 00:20:16,190
and more constraints place it des when

00:20:14,390 --> 00:20:18,169
when it has less constraint with steep

00:20:16,190 --> 00:20:24,409
places it probably somewhere around

00:20:18,169 --> 00:20:25,669
there so I'm not sure and I guess we

00:20:24,409 --> 00:20:27,190
would puts it work without all the

00:20:25,669 --> 00:20:29,840
constraint between the two layers I

00:20:27,190 --> 00:20:31,279
think it would still work without the

00:20:29,840 --> 00:20:34,870
constraint between the two the two

00:20:31,279 --> 00:20:34,870
layers we wrote it in the military

00:20:39,590 --> 00:20:51,330
[Applause]

00:20:48,330 --> 00:20:51,330
next

00:20:54,169 --> 00:20:56,230

YouTube URL: https://www.youtube.com/watch?v=izWmwQncxpo


