Title: Native GTK3 UIprogress from gtk3 themed vcl widgets to native gtk widgets
Publication date: 2018-02-03
Playlist: FOSDEM 2018
Description: 
	by CaolÃ¡n McNamara

At: FOSDEM 2018
Room: AW1.120
Scheduled start: 2018-02-03 14:50:00+01
Captions: 
	00:00:05,970 --> 00:00:12,639
native gtk stuff all right running on

00:00:10,270 --> 00:00:16,390
VGA but it works so what's a native

00:00:12,639 --> 00:00:17,980
right now in the existing releases we've

00:00:16,390 --> 00:00:19,810
been eight of gtk file dialogue and

00:00:17,980 --> 00:00:22,720
that's been dative forever

00:00:19,810 --> 00:00:25,510
the most recent releases and the gk3

00:00:22,720 --> 00:00:26,080
back end our two tips are now native

00:00:25,510 --> 00:00:28,660
tooltips

00:00:26,080 --> 00:00:31,270
we just tell gtk where the tooltip this

00:00:28,660 --> 00:00:33,309
far and what the text is and GDK itself

00:00:31,270 --> 00:00:35,260
renders a tooltip so that means that if

00:00:33,309 --> 00:00:37,929
you have the case where you have to

00:00:35,260 --> 00:00:39,999
screen side by side and the tooltip is

00:00:37,929 --> 00:00:42,519
cut off that the gtk issue is not a

00:00:39,999 --> 00:00:44,339
libre office issue and then i also

00:00:42,519 --> 00:00:46,300
additionally we're now using popovers

00:00:44,339 --> 00:00:46,960
for some of the things that used to be

00:00:46,300 --> 00:00:48,460
tooltips

00:00:46,960 --> 00:00:50,469
they're a little bit different gtk is

00:00:48,460 --> 00:00:53,499
free and they have little indicator that

00:00:50,469 --> 00:00:55,569
points down what the thing being pointed

00:00:53,499 --> 00:00:58,329
to is they're pretty nice we have them

00:00:55,569 --> 00:01:00,370
for formula type-ahead in calc and the

00:00:58,329 --> 00:01:02,799
page indicator in the impress type in

00:01:00,370 --> 00:01:06,370
the region motivation for making them

00:01:02,799 --> 00:01:10,210
native was that the under Weiland is

00:01:06,370 --> 00:01:11,920
very difficult to do your own tooltip

00:01:10,210 --> 00:01:14,590
style things you just use each K ones

00:01:11,920 --> 00:01:17,170
and we use them

00:01:14,590 --> 00:01:19,840
what else is native in the react menu

00:01:17,170 --> 00:01:22,119
which is available in Rome is fully

00:01:19,840 --> 00:01:23,380
nation of course our context menus are

00:01:22,119 --> 00:01:25,240
nowadays if you right-click and

00:01:23,380 --> 00:01:27,759
something we actually have real gzk and

00:01:25,240 --> 00:01:30,450
menus there and the menu bar is now a

00:01:27,759 --> 00:01:33,310
native GT k3 menu bar and obviously the

00:01:30,450 --> 00:01:35,560
menus within it are near Sochi TK 3 as

00:01:33,310 --> 00:01:36,909
well and that derives out of the unity

00:01:35,560 --> 00:01:40,119
work that was done there a couple years

00:01:36,909 --> 00:01:41,649
ago so all of the menu positioning stuff

00:01:40,119 --> 00:01:44,020
is all native to the case so if your

00:01:41,649 --> 00:01:45,850
menu won't fit in the highest available

00:01:44,020 --> 00:01:47,890
of the screen the fallback there is a

00:01:45,850 --> 00:01:50,140
cheesy kateinasia fallback so there it's

00:01:47,890 --> 00:01:52,119
the GDK positioning and gtk behavior for

00:01:50,140 --> 00:01:55,600
what happens if something doesn't fit in

00:01:52,119 --> 00:01:59,890
so all those books can go the toolkit

00:01:55,600 --> 00:02:02,710
for item towards what's not native and

00:01:59,890 --> 00:02:06,640
all of these special effects are all

00:02:02,710 --> 00:02:08,590
just OpenGL Wayland OpenGL on Wayland to

00:02:06,640 --> 00:02:09,970
show that it's flicker free I showed

00:02:08,590 --> 00:02:13,570
them last year and they were flickery

00:02:09,970 --> 00:02:14,680
this year they don't flicker so what do

00:02:13,570 --> 00:02:16,060
we actually do for everything else to

00:02:14,680 --> 00:02:17,660
mix look like it's native everything

00:02:16,060 --> 00:02:21,860
else is actually not native

00:02:17,660 --> 00:02:26,420
it's our own tool case but we use the G

00:02:21,860 --> 00:02:28,490
key api's to render their widgets on to

00:02:26,420 --> 00:02:30,770
our actual locations where we pretend

00:02:28,490 --> 00:02:32,180
our widgets are so it's never quite

00:02:30,770 --> 00:02:33,410
right you have all these EAP eyes that

00:02:32,180 --> 00:02:36,560
are fine but you had to set up the

00:02:33,410 --> 00:02:39,380
context the style context quite right to

00:02:36,560 --> 00:02:40,880
map our space to G K States so obviously

00:02:39,380 --> 00:02:43,430
for a radio button you'd say that it's

00:02:40,880 --> 00:02:45,050
selected or not selected and then it'll

00:02:43,430 --> 00:02:47,390
render it into the space that you set

00:02:45,050 --> 00:02:48,800
out that you wanted rendered into but

00:02:47,390 --> 00:02:50,570
you have to get the size right as well

00:02:48,800 --> 00:02:52,610
you have to query g TK what would a

00:02:50,570 --> 00:02:56,090
radio button what size should radio

00:02:52,610 --> 00:02:57,680
button be in GD k figure that size out

00:02:56,090 --> 00:02:58,100
then tells you to cater to render into

00:02:57,680 --> 00:03:00,050
it

00:02:58,100 --> 00:03:02,390
so if you get the size wrong you get

00:03:00,050 --> 00:03:04,730
little artifacts that you see on some of

00:03:02,390 --> 00:03:07,310
our areas where it's not quite right you

00:03:04,730 --> 00:03:08,780
also have to use the rice call so you

00:03:07,310 --> 00:03:10,790
might get them wrong it's it's quite a

00:03:08,780 --> 00:03:12,530
complicated set of affairs and the

00:03:10,790 --> 00:03:14,900
actual stuff that's available for use

00:03:12,530 --> 00:03:16,490
outside the tool case is no longer quite

00:03:14,900 --> 00:03:19,160
the stuff that's being used inside the

00:03:16,490 --> 00:03:21,170
tool kit so you're using maybe context I

00:03:19,160 --> 00:03:22,670
contexts that are quite right to try and

00:03:21,170 --> 00:03:24,530
get the effect that you're hoping for so

00:03:22,670 --> 00:03:27,110
it never really quite works but you were

00:03:24,530 --> 00:03:30,709
pretty close but it's not quite right so

00:03:27,110 --> 00:03:35,420
even get this stuff wrong little bit

00:03:30,709 --> 00:03:37,060
wrong anyway yeah so backstory then the

00:03:35,420 --> 00:03:39,380
UI descriptions where we've come from

00:03:37,060 --> 00:03:42,110
all of our dialogues you just be

00:03:39,380 --> 00:03:44,660
described in a SRC file farmers where

00:03:42,110 --> 00:03:46,459
every widget was a fixed size everything

00:03:44,660 --> 00:03:49,430
was measured in arbitrary character cell

00:03:46,459 --> 00:03:51,800
widths and then again there was when you

00:03:49,430 --> 00:03:54,290
load the UI under Germany would multiply

00:03:51,800 --> 00:03:55,550
everything by 105 percent to get a

00:03:54,290 --> 00:03:57,680
little bit bigger because German tends

00:03:55,550 --> 00:03:59,750
to be a bit longer if you open up the

00:03:57,680 --> 00:04:01,340
same dialogues in the Japanese it would

00:03:59,750 --> 00:04:03,380
divide it by some amount cuz Chinese

00:04:01,340 --> 00:04:05,480
does takes tend to be quite small so you

00:04:03,380 --> 00:04:07,670
had this kind of guesstimate arbitrary

00:04:05,480 --> 00:04:09,980
stuff going on here and there's no GUI

00:04:07,670 --> 00:04:12,890
editor for all this old stuff so we come

00:04:09,980 --> 00:04:14,720
from there to a situation where we're

00:04:12,890 --> 00:04:17,239
now using the gtk builder file format

00:04:14,720 --> 00:04:19,520
and all our UI is described in terms of

00:04:17,239 --> 00:04:22,550
jjigae widgets we're not using gtk

00:04:19,520 --> 00:04:24,310
widgets reducing our own vcl widgets but

00:04:22,550 --> 00:04:27,320
we have described everything in the GDK

00:04:24,310 --> 00:04:28,889
file format and then we're mapping that

00:04:27,320 --> 00:04:31,710
at lower time of our own

00:04:28,889 --> 00:04:34,669
you I educate build a fire farmer with

00:04:31,710 --> 00:04:36,659
our own loader we added in some

00:04:34,669 --> 00:04:38,699
resizable widgets equivalents

00:04:36,659 --> 00:04:41,460
equivalents to the ggkp adjudicate box

00:04:38,699 --> 00:04:42,930
so now we have widgets that contain

00:04:41,460 --> 00:04:45,599
other widgets and then that dynamically

00:04:42,930 --> 00:04:47,039
sized and positioned them according to

00:04:45,599 --> 00:04:49,830
inter constraints that you can describe

00:04:47,039 --> 00:04:50,759
in the glade GUI editor so the results

00:04:49,830 --> 00:04:52,680
of all that is that you've got about a

00:04:50,759 --> 00:04:56,849
thousand July files and parents we have

00:04:52,680 --> 00:05:00,560
like about each accessibility bugs in

00:04:56,849 --> 00:05:03,719
each one but they can be fixed in Glade

00:05:00,560 --> 00:05:06,029
so that's the UI file so if everything

00:05:03,719 --> 00:05:08,310
is now described in the GDK style fire

00:05:06,029 --> 00:05:11,370
farmers but mapped at lower time for own

00:05:08,310 --> 00:05:15,569
widgets and translations then are yet

00:05:11,370 --> 00:05:17,969
again more in our own custom file format

00:05:15,569 --> 00:05:20,400
the same SRC file format and the output

00:05:17,969 --> 00:05:22,860
here was a braised binary file each

00:05:20,400 --> 00:05:26,879
translation is indexed by a unique ID

00:05:22,860 --> 00:05:28,979
and it's all converts to two relatively

00:05:26,879 --> 00:05:30,900
standard po-2 go up to the website to be

00:05:28,979 --> 00:05:32,639
translated there if you brought back

00:05:30,900 --> 00:05:34,710
down and then converted back out into

00:05:32,639 --> 00:05:36,569
our own custom file formats as well and

00:05:34,710 --> 00:05:38,729
then when we converted everything over

00:05:36,569 --> 00:05:41,849
to this UI file for the dynamic layout

00:05:38,729 --> 00:05:43,349
and new description we had to keep a lot

00:05:41,849 --> 00:05:45,270
of this stuff and have a little barge

00:05:43,349 --> 00:05:47,849
there so that we run those translations

00:05:45,270 --> 00:05:51,779
true the oil translation system and back

00:05:47,849 --> 00:05:55,439
again so that's the old translation for

00:05:51,779 --> 00:05:58,349
us but we've done at this stage for 6.0

00:05:55,439 --> 00:06:00,240
i think is that we have finally gotten

00:05:58,349 --> 00:06:02,399
rid of that file format and we're now

00:06:00,240 --> 00:06:04,919
using the more standard get text file

00:06:02,399 --> 00:06:08,339
format so it means that we'd get text we

00:06:04,919 --> 00:06:12,210
can extract our translations directly

00:06:08,339 --> 00:06:14,099
from our UI files and from our c++ with

00:06:12,210 --> 00:06:16,379
the standard tooling for that so we use

00:06:14,099 --> 00:06:17,969
get takes to pull out the tooling then

00:06:16,379 --> 00:06:20,339
we have our dark pure files which are

00:06:17,969 --> 00:06:21,810
now directly created from the

00:06:20,339 --> 00:06:23,639
translations they can go up to the

00:06:21,810 --> 00:06:26,189
website back down from the website and

00:06:23,639 --> 00:06:26,909
then we can use get text to create the

00:06:26,189 --> 00:06:30,240
standard

00:06:26,909 --> 00:06:31,860
dart mo output file format and then

00:06:30,240 --> 00:06:34,199
we're using the boost get takes

00:06:31,860 --> 00:06:36,330
implementation to read them that the old

00:06:34,199 --> 00:06:38,399
translation format is gone and the new

00:06:36,330 --> 00:06:42,260
translation format is the standard get

00:06:38,399 --> 00:06:44,540
takes file format so that's 20 2000

00:06:42,260 --> 00:06:49,160
aren't translations so a thousand UI

00:06:44,540 --> 00:06:50,810
files and 22,000 translations taken up

00:06:49,160 --> 00:06:53,090
from the old binary file formats

00:06:50,810 --> 00:06:55,970
converted into the dot UI XML file

00:06:53,090 --> 00:06:59,180
format and to a binary but standardized

00:06:55,970 --> 00:07:01,790
get text a mol file former the

00:06:59,180 --> 00:07:03,650
consequence of moving all of the UI

00:07:01,790 --> 00:07:05,240
descriptions and the translations out of

00:07:03,650 --> 00:07:07,700
those file formats into standardized

00:07:05,240 --> 00:07:10,550
performance is that the dialogues are

00:07:07,700 --> 00:07:13,040
mostly GDK compatible in the sense that

00:07:10,550 --> 00:07:15,500
you can use Glade previewer on any of

00:07:13,040 --> 00:07:17,330
our UI files put the data in more files

00:07:15,500 --> 00:07:19,130
from our translations into the path

00:07:17,330 --> 00:07:22,550
where they can find them and you can use

00:07:19,130 --> 00:07:27,470
Glade previewer to look at a localized

00:07:22,550 --> 00:07:29,480
version of our any of our di files which

00:07:27,470 --> 00:07:33,500
should mean that if we were to deploy

00:07:29,480 --> 00:07:36,440
that deckard web utility for displaying

00:07:33,500 --> 00:07:38,720
translations in a door ui file as

00:07:36,440 --> 00:07:41,000
translators modify them that should work

00:07:38,720 --> 00:07:45,080
in the majority of cases out of the box

00:07:41,000 --> 00:07:52,460
now so obviously where am I Who am I

00:07:45,080 --> 00:07:54,890
kinda hoping to go with all this it is

00:07:52,460 --> 00:07:57,320
possible to load those that UI files

00:07:54,890 --> 00:08:00,110
natively with UK with its own ggk

00:07:57,320 --> 00:08:02,450
builder api bypassing our real

00:08:00,110 --> 00:08:04,760
implementation of that and because GDK

00:08:02,450 --> 00:08:08,000
handles the get text file formats let

00:08:04,760 --> 00:08:10,400
ggk load those data more files and then

00:08:08,000 --> 00:08:11,960
rather than and then come up with a kind

00:08:10,400 --> 00:08:13,850
of a compatibility layer where we would

00:08:11,960 --> 00:08:16,070
bind to those layers of cheese carriage

00:08:13,850 --> 00:08:17,680
it's rather than using around vcl

00:08:16,070 --> 00:08:21,170
widgets which are basically then

00:08:17,680 --> 00:08:23,930
emulating those ghk widgets at runtime

00:08:21,170 --> 00:08:26,630
and then we use our take our entire

00:08:23,930 --> 00:08:28,880
existing stack that currently works and

00:08:26,630 --> 00:08:30,710
just keep that as a fallback case for

00:08:28,880 --> 00:08:33,260
guys under windows and the other ones

00:08:30,710 --> 00:08:38,300
and further for the non gtk case for the

00:08:33,260 --> 00:08:43,040
GDK case we'd use its alternative just

00:08:38,300 --> 00:08:47,980
we'll walk through of my development

00:08:43,040 --> 00:08:52,760
version which first shows a native gtk

00:08:47,980 --> 00:08:57,829
menu fitting on screen as best it can

00:08:52,760 --> 00:09:03,290
and I will just show in case anybody

00:08:57,829 --> 00:09:06,440
hasn't seen us the popover still when

00:09:03,290 --> 00:09:11,050
I'm talking about now that's a pop over

00:09:06,440 --> 00:09:15,320
there that's animation do to get popover

00:09:11,050 --> 00:09:21,110
that's just a native gtk thingy and as

00:09:15,320 --> 00:09:25,910
the toolbars are native of course and we

00:09:21,110 --> 00:09:31,190
will go for a simple one first more

00:09:25,910 --> 00:09:35,540
breaks in search manual break so what

00:09:31,190 --> 00:09:37,670
this is then is a native gtk this one

00:09:35,540 --> 00:09:39,589
has been loaded by the GDK native gtk

00:09:37,670 --> 00:09:42,290
loader they can boot exist at the same

00:09:39,589 --> 00:09:44,510
time so this one dialog is using the

00:09:42,290 --> 00:09:46,579
native gtk stuff and the other dialogue

00:09:44,510 --> 00:09:49,220
step one or two other ones are using our

00:09:46,579 --> 00:09:52,070
far back VCR one so what difference does

00:09:49,220 --> 00:09:54,800
it make if you keep an eye on the grady

00:09:52,070 --> 00:09:59,690
button and the top-left fades in rather

00:09:54,800 --> 00:10:02,209
than concentrated fades in fades in okay

00:09:59,690 --> 00:10:05,569
if i change to a different style and i

00:10:02,209 --> 00:10:07,730
change the file number here when i have

00:10:05,569 --> 00:10:11,120
gone down to the minimum allowed value

00:10:07,730 --> 00:10:13,010
it has great house the left button and

00:10:11,120 --> 00:10:15,079
left it or none great we in our

00:10:13,010 --> 00:10:18,709
imputation we would have left them both

00:10:15,079 --> 00:10:20,810
clickable and you would be an example of

00:10:18,709 --> 00:10:24,019
where we get things wrong again if we

00:10:20,810 --> 00:10:26,240
move back here and I hit this page break

00:10:24,019 --> 00:10:29,690
one this should fade in gently

00:10:26,240 --> 00:10:32,660
rather than coming in hard and then all

00:10:29,690 --> 00:10:36,199
these things are native and fully on and

00:10:32,660 --> 00:10:40,750
it works of course it works now the

00:10:36,199 --> 00:10:45,110
style insert table has a bit more detail

00:10:40,750 --> 00:10:48,260
again gently fades in fades out when you

00:10:45,110 --> 00:10:50,240
get to that level and it might be there

00:10:48,260 --> 00:10:52,069
we go and so on suppose so it all just

00:10:50,240 --> 00:10:53,449
works out and it's needed now what's

00:10:52,069 --> 00:10:54,829
maybe a little more interesting as well

00:10:53,449 --> 00:10:57,440
is that there are cost there are

00:10:54,829 --> 00:11:01,069
standard widgets what we do for the

00:10:57,440 --> 00:11:04,910
custom case now this is another native

00:11:01,069 --> 00:11:06,380
gtk dialog loading up the UI file that

00:11:04,910 --> 00:11:10,880
we currently are

00:11:06,380 --> 00:11:12,530
Dibley using first look at that non -

00:11:10,880 --> 00:11:14,990
the fall style all these guys are going

00:11:12,530 --> 00:11:17,090
to fade in at the same time they are

00:11:14,990 --> 00:11:19,640
fading on the right hand side there is a

00:11:17,090 --> 00:11:21,890
custom widget so for handling the case

00:11:19,640 --> 00:11:23,840
of custom widgets that's adjudicate

00:11:21,890 --> 00:11:25,490
drawing area we've got callbacks then

00:11:23,840 --> 00:11:27,620
where we draw onto our own existing

00:11:25,490 --> 00:11:29,810
output devices and then when the GDK

00:11:27,620 --> 00:11:32,240
drawing area needs to refresh it can

00:11:29,810 --> 00:11:35,270
take from our existing output device and

00:11:32,240 --> 00:11:36,980
convert to its own so there are native

00:11:35,270 --> 00:11:43,510
and they all work and let's go back to

00:11:36,980 --> 00:11:49,250
the thingy for the conclusion yeah

00:11:43,510 --> 00:11:52,070
walkthrough yeah so does a halfway house

00:11:49,250 --> 00:11:55,580
API some of the problems though is that

00:11:52,070 --> 00:11:57,380
the dialogues will not be usable

00:11:55,580 --> 00:11:58,880
directly without some modification of

00:11:57,380 --> 00:12:00,530
the dot UI files because we have our

00:11:58,880 --> 00:12:02,900
implementation in GTA has this

00:12:00,530 --> 00:12:04,610
implementation there are some divergent

00:12:02,900 --> 00:12:06,740
areas where we have to modify our UI

00:12:04,610 --> 00:12:08,210
files for some of the quirks between our

00:12:06,740 --> 00:12:10,850
two different loading implementations

00:12:08,210 --> 00:12:12,830
one minor one is like radio buttons in

00:12:10,850 --> 00:12:15,530
our case we have already buttons and we

00:12:12,830 --> 00:12:17,210
linked them to each other in a circle to

00:12:15,530 --> 00:12:19,520
make it work on the GDK you have to link

00:12:17,210 --> 00:12:21,740
the inactive ones to the active one so

00:12:19,520 --> 00:12:23,510
their changes like that and there's a

00:12:21,740 --> 00:12:26,120
whole bunch of smaller details as well

00:12:23,510 --> 00:12:29,170
where we have to modify the UI files

00:12:26,120 --> 00:12:31,880
hopefully in a pretty much shriek offers

00:12:29,170 --> 00:12:33,740
automatically kind of a way one small

00:12:31,880 --> 00:12:35,270
one is where we have our buttons on the

00:12:33,740 --> 00:12:36,890
right-hand side we're just going to have

00:12:35,270 --> 00:12:38,720
to put them on the bottom but we want to

00:12:36,890 --> 00:12:41,770
put them on the bottom anyway so there's

00:12:38,720 --> 00:12:44,210
nowhere final things there some gutters

00:12:41,770 --> 00:12:46,010
and the gutters I described there and

00:12:44,210 --> 00:12:48,200
there's some difficulties where some

00:12:46,010 --> 00:12:50,680
parts of ECL have have leaked out to the

00:12:48,200 --> 00:12:53,600
you know a P I so you can even up down

00:12:50,680 --> 00:12:56,030
handlers for the plus/minus buttons and

00:12:53,600 --> 00:12:58,700
spin buttons for the up and down there

00:12:56,030 --> 00:13:01,280
there isn't an existing and equivalent

00:12:58,700 --> 00:13:03,680
one in in GD k so they'll have to be at

00:13:01,280 --> 00:13:06,170
work on to under interfacing the

00:13:03,680 --> 00:13:07,850
existing you know stuff that has leaked

00:13:06,170 --> 00:13:10,400
out that should never relieve leaked out

00:13:07,850 --> 00:13:13,010
and to have to be some amount of you

00:13:10,400 --> 00:13:16,160
know support as well to tunnel the

00:13:13,010 --> 00:13:18,980
dialogues true and one of the things

00:13:16,160 --> 00:13:21,260
that we probably need to do is

00:13:18,980 --> 00:13:24,830
to move those extend the tips out of

00:13:21,260 --> 00:13:27,200
help and into that UI files and if we

00:13:24,830 --> 00:13:29,060
wanted to do this for ages and it's

00:13:27,200 --> 00:13:31,640
still a good idea but the translators

00:13:29,060 --> 00:13:33,800
have been through a lot of pains so the

00:13:31,640 --> 00:13:36,380
other one wasn't true anymore misery but

00:13:33,800 --> 00:13:38,000
that might happen anyway we're with the

00:13:36,380 --> 00:13:40,220
help changes if the help goes the

00:13:38,000 --> 00:13:42,200
tooltips aren't there so something will

00:13:40,220 --> 00:13:43,760
have to happen and if we stick with the

00:13:42,200 --> 00:13:46,400
model of we need a fallback then we're

00:13:43,760 --> 00:13:49,520
limited only to gtk widgets that exists

00:13:46,400 --> 00:13:51,140
as equivalents Toro and vcl widgets we

00:13:49,520 --> 00:13:54,230
would have to remain within the subset

00:13:51,140 --> 00:13:56,420
of of the existing implementation unless

00:13:54,230 --> 00:13:58,820
we went down the line to just try and

00:13:56,420 --> 00:14:00,110
use gtk under all platforms the rid of

00:13:58,820 --> 00:14:02,300
our toolkit and then we could use

00:14:00,110 --> 00:14:04,310
whatever be available but for the moment

00:14:02,300 --> 00:14:12,020
and there's limits to what we already

00:14:04,310 --> 00:14:15,730
support okay thank you any questions as

00:14:12,020 --> 00:14:15,730

YouTube URL: https://www.youtube.com/watch?v=vL1-vGlRfos


