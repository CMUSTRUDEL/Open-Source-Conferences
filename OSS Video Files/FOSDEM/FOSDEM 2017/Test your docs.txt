Title: Test your docs
Publication date: 2018-03-06
Playlist: FOSDEM 2017
Description: 
	by Chris Ward

At: FOSDEM 2017

Documentation is essential for potential users to understand your awesomecoding efforts.

But I know that you'd rather get back to coding as soon as possible, so howabout automating as much of your documentation as possible?

In this presentation I will show you how to automate some of the repetitivetasks involved in documentation and make your colleagues jealous.

  * Testing docs  * Spell and grammar checking  * Generating screenshots  * Building different versions and formats  * Notifications  * Generating videos

I will show you how to build workflows and plugins for several populardocumentation editors and CI tools and give you more free time to watch catvideos, complain about important issues, or get replaced by a robot.

Documentation is essential for potential users to understand your awesomecoding efforts.

But I know that you'd rather get back to coding as soon as possible, so howabout automating as much of your documentation as possible?

In this presentation I will show you how to automate some of the repetitivetasks involved in documentation and make your colleagues jealous.

  * Testing docs  * Spell and grammar checking  * Generating screenshots  * Building different versions and formats  * Notifications  * Generating videos

I will show you how to build workflows and plugins for several populardocumentation editors and CI tools and give you more free time to watch catvideos, complain about important issues, or get replaced by a robot.


Room: H.2213
Scheduled start: 2017-02-05 15:20:00
Captions: 
	00:00:16,740 --> 00:00:22,420
okay welcome to my slightly amended talk

00:00:19,600 --> 00:00:24,400
I had my own continuous integration

00:00:22,420 --> 00:00:26,890
system over here checking my spelling

00:00:24,400 --> 00:00:29,230
when I changed the title there's a bit

00:00:26,890 --> 00:00:31,150
slow but thanks very much I've changed

00:00:29,230 --> 00:00:33,879
the title slightly mostly because they

00:00:31,150 --> 00:00:36,940
kind of had the idea I've experimented

00:00:33,879 --> 00:00:38,890
with this idea a little bit since their

00:00:36,940 --> 00:00:40,210
call for proposals so I've changed it a

00:00:38,890 --> 00:00:42,399
little bit but it is still about

00:00:40,210 --> 00:00:44,050
automating things maybe a little less

00:00:42,399 --> 00:00:54,190
about testing but most definitely about

00:00:44,050 --> 00:00:57,940
automating or making things simpler one

00:00:54,190 --> 00:01:01,239
of those strange people yeah go for it I

00:00:57,940 --> 00:01:02,229
used to be a programmer but then I kind

00:01:01,239 --> 00:01:05,019
of realized those better at explaining

00:01:02,229 --> 00:01:07,060
things then actually doing it so now I'm

00:01:05,019 --> 00:01:09,490
basically a full-time technical writer

00:01:07,060 --> 00:01:11,649
technical blogger a bunch of different

00:01:09,490 --> 00:01:13,570
things this presentation is based on

00:01:11,649 --> 00:01:16,240
some experiments and also some blog

00:01:13,570 --> 00:01:19,840
posts I wrote for a code ship who are a

00:01:16,240 --> 00:01:23,680
CIA tool originally Austrian placed in

00:01:19,840 --> 00:01:25,689
Boston so called an Austrian a series of

00:01:23,680 --> 00:01:27,130
blog posts that I wrote about kind of

00:01:25,689 --> 00:01:28,840
automating some documentation that's

00:01:27,130 --> 00:01:32,680
just finished so you can read a bit more

00:01:28,840 --> 00:01:35,710
on those if you want on their blog now

00:01:32,680 --> 00:01:38,590
let's get started so what is one of the

00:01:35,710 --> 00:01:41,049
first things you look at with your new

00:01:38,590 --> 00:01:44,770
project and I'm going to use project to

00:01:41,049 --> 00:01:49,179
imply product module library whatever

00:01:44,770 --> 00:01:51,549
this is call it a project well they're

00:01:49,179 --> 00:01:55,600
all documentation ok different places

00:01:51,549 --> 00:01:59,049
but they're all documentation so I think

00:01:55,600 --> 00:02:00,280
most developers and most product people

00:01:59,049 --> 00:02:03,789
especially acknowledge that

00:02:00,280 --> 00:02:06,789
documentation is important and yet it

00:02:03,789 --> 00:02:09,009
often gets overlooked I've got a couple

00:02:06,789 --> 00:02:11,860
little quotes here so this is kind of a

00:02:09,009 --> 00:02:14,470
nice ideal of where you're getting to

00:02:11,860 --> 00:02:17,350
with documentation this is from Ken

00:02:14,470 --> 00:02:18,319
Williams the founder original creator of

00:02:17,350 --> 00:02:20,390
Perl so doctor

00:02:18,319 --> 00:02:21,709
is complete when someone can use your

00:02:20,390 --> 00:02:24,079
project without having to look at its

00:02:21,709 --> 00:02:25,760
code and this is common often when you

00:02:24,079 --> 00:02:27,019
don't understand the documentation you

00:02:25,760 --> 00:02:28,180
dive straight into the code and try and

00:02:27,019 --> 00:02:31,730
figure it out

00:02:28,180 --> 00:02:33,799
but why is this this is another quote

00:02:31,730 --> 00:02:35,750
from someone possibly slightly less

00:02:33,799 --> 00:02:38,840
well-known but a guy I met from

00:02:35,750 --> 00:02:40,519
Wikimedia when I was doing a similar

00:02:38,840 --> 00:02:42,530
talk to this he said documentation is

00:02:40,519 --> 00:02:46,189
like housework we all know we should do

00:02:42,530 --> 00:02:48,950
it but we don't really want to so what

00:02:46,189 --> 00:02:50,659
this talk is kind of about it's not

00:02:48,950 --> 00:02:53,120
about better documentation per se I

00:02:50,659 --> 00:02:55,459
actually have another talk on that and

00:02:53,120 --> 00:02:58,489
it's related to a blog post that you can

00:02:55,459 --> 00:03:00,079
find on my website or a medium which is

00:02:58,489 --> 00:03:02,120
actually been very popular which is good

00:03:00,079 --> 00:03:03,709
because that was the point which is kind

00:03:02,120 --> 00:03:05,659
of a crash course in documentation for

00:03:03,709 --> 00:03:08,180
developers just simple things to make

00:03:05,659 --> 00:03:11,060
documentation better without having to

00:03:08,180 --> 00:03:13,449
think too hard so this talk is kind of

00:03:11,060 --> 00:03:16,549
another side of that it's actually about

00:03:13,449 --> 00:03:18,379
what can we automate what can we make

00:03:16,549 --> 00:03:24,229
simpler what can we have a bit of fun

00:03:18,379 --> 00:03:27,079
with instead of just writing you might

00:03:24,229 --> 00:03:28,699
have seen my chinchilla earlier just as

00:03:27,079 --> 00:03:33,109
a guy with a fox hat walks in which is

00:03:28,699 --> 00:03:34,519
very cool this is a I looked up four

00:03:33,109 --> 00:03:36,139
pictures of chinchillas doing

00:03:34,519 --> 00:03:37,879
experiments looking up pictures of

00:03:36,139 --> 00:03:40,489
animals doing experiments is not a good

00:03:37,879 --> 00:03:43,939
idea because you get some very lots of

00:03:40,489 --> 00:03:44,930
pleasant pictures so this is about the

00:03:43,939 --> 00:03:49,220
best I could find

00:03:44,930 --> 00:03:52,280
it's a chinchilla reading a book so

00:03:49,220 --> 00:03:54,919
basically this talk is more of just a

00:03:52,280 --> 00:03:57,349
list of experiments and ideas it's a

00:03:54,919 --> 00:03:59,989
little incohesive it doesn't really have

00:03:57,349 --> 00:04:01,909
much of a narrative it's some ideas I've

00:03:59,989 --> 00:04:03,979
tried some ideas I haven't completely

00:04:01,909 --> 00:04:06,229
tried some ideas other people have try

00:04:03,979 --> 00:04:07,969
it and I'm going to use tools and

00:04:06,229 --> 00:04:10,340
methods that are not necessarily the

00:04:07,969 --> 00:04:12,709
only way to do these things kind of get

00:04:10,340 --> 00:04:14,479
some inspiration from them and find a

00:04:12,709 --> 00:04:19,810
tool chain that works for you that does

00:04:14,479 --> 00:04:24,219
a similar thing basically so spelling

00:04:19,810 --> 00:04:26,900
catching all those little mistakes and

00:04:24,219 --> 00:04:29,900
one of the things about spelling is yes

00:04:26,900 --> 00:04:32,060
spelling doesn't necessarily affect the

00:04:29,900 --> 00:04:33,610
quality of the content

00:04:32,060 --> 00:04:35,480
it shows a certain level of care

00:04:33,610 --> 00:04:36,980
professionalism especially if you're

00:04:35,480 --> 00:04:39,620
working on a commercial tool or

00:04:36,980 --> 00:04:41,210
commercial open source projects well

00:04:39,620 --> 00:04:43,700
that has a large user base it just shows

00:04:41,210 --> 00:04:48,260
that little bit of extra care that you

00:04:43,700 --> 00:04:50,450
go for spell checking is not new

00:04:48,260 --> 00:04:51,400
actually I mean there's spell checkers

00:04:50,450 --> 00:04:54,260
have been around for quite a long time

00:04:51,400 --> 00:04:56,780
but what are some of the tools we can

00:04:54,260 --> 00:04:59,600
use to automate some of that well one

00:04:56,780 --> 00:05:02,919
that I have been mostly using sort of

00:04:59,600 --> 00:05:06,320
come to this one of the kind of grand

00:05:02,919 --> 00:05:09,410
parents of spell checking is hum spell

00:05:06,320 --> 00:05:11,660
it's used in LibreOffice OpenOffice

00:05:09,410 --> 00:05:15,050
lots of Mozilla products it's even used

00:05:11,660 --> 00:05:17,870
in Chrome it's also used in Mac OS it's

00:05:15,050 --> 00:05:18,139
used in Oh what else I got a long list

00:05:17,870 --> 00:05:19,700
here

00:05:18,139 --> 00:05:21,290
InDesign apparently I don't know if that

00:05:19,700 --> 00:05:25,729
includes other Adobe products or just

00:05:21,290 --> 00:05:27,680
InDesign opera and a whole bunch of

00:05:25,729 --> 00:05:30,770
other applications so the cool thing

00:05:27,680 --> 00:05:31,970
with this is you can keep consistent

00:05:30,770 --> 00:05:33,830
dictionaries as well

00:05:31,970 --> 00:05:35,389
if you especially in technical

00:05:33,830 --> 00:05:38,210
documentation we have a lot of buzzwords

00:05:35,389 --> 00:05:39,950
a lot of words that are incorrect but

00:05:38,210 --> 00:05:41,690
are actually correct so we don't want to

00:05:39,950 --> 00:05:43,430
flag those as spelling errors and the

00:05:41,690 --> 00:05:45,620
advantage of using something standard

00:05:43,430 --> 00:05:48,380
like hum spell is not only can we put it

00:05:45,620 --> 00:05:49,700
in build systems or in text editors we

00:05:48,380 --> 00:05:52,310
can actually give it to people who use

00:05:49,700 --> 00:05:54,410
OpenOffice not office unfortunately but

00:05:52,310 --> 00:05:56,390
OpenOffice and other tools as well so

00:05:54,410 --> 00:05:59,330
they also have access to the same list

00:05:56,390 --> 00:06:03,710
of custom words so all our documentation

00:05:59,330 --> 00:06:07,700
can be consistent so if you want to use

00:06:03,710 --> 00:06:10,270
humm spell directly it's in most Linux

00:06:07,700 --> 00:06:13,100
package managers it's also in homebrew

00:06:10,270 --> 00:06:17,330
Windows you can get it in

00:06:13,100 --> 00:06:20,930
cygwin but it's not so easy as is usual

00:06:17,330 --> 00:06:24,500
with Windows and then basically this is

00:06:20,930 --> 00:06:25,880
a sort of the command I'm actually just

00:06:24,500 --> 00:06:27,740
going to run this and then I'm going to

00:06:25,880 --> 00:06:31,550
kind of talk through what it is and what

00:06:27,740 --> 00:06:33,169
happens I'm going to keep switching

00:06:31,550 --> 00:06:37,190
backwards and forwards the demos so I do

00:06:33,169 --> 00:06:39,650
apologize but so a speller Huntsville

00:06:37,190 --> 00:06:42,020
are kind of loosely based on similar

00:06:39,650 --> 00:06:44,330
things the main reason I stick with

00:06:42,020 --> 00:06:45,270
Huntsville is just some of the tooling

00:06:44,330 --> 00:06:48,240
that uses it

00:06:45,270 --> 00:06:51,590
which I'll come to a minute this is more

00:06:48,240 --> 00:06:51,590
of it that's basically it

00:06:52,490 --> 00:07:00,630
okay so this is that command the blue

00:06:57,810 --> 00:07:04,650
gets a little bit unseen this will

00:07:00,630 --> 00:07:06,030
probably take do quite a lot so these

00:07:04,650 --> 00:07:07,230
have been running it locally of course

00:07:06,030 --> 00:07:10,200
if you were going to do something like

00:07:07,230 --> 00:07:11,010
this in on a CI you would really want to

00:07:10,200 --> 00:07:12,960
tidy this up a bit

00:07:11,010 --> 00:07:14,460
I'm whoops yeah I'm doing all the node

00:07:12,960 --> 00:07:17,000
modules as well that's probably not a

00:07:14,460 --> 00:07:24,770
good idea let's go to something more

00:07:17,000 --> 00:07:30,150
more a little more a little smaller

00:07:24,770 --> 00:07:31,770
selection there we go okay so there's a

00:07:30,150 --> 00:07:33,210
lot of noise here and I've intentionally

00:07:31,770 --> 00:07:35,070
done this example to kind of demonstrate

00:07:33,210 --> 00:07:37,170
some problems we have here first and

00:07:35,070 --> 00:07:42,810
foremost but let's look at this command

00:07:37,170 --> 00:07:45,750
first so this is just checking recursive

00:07:42,810 --> 00:07:47,820
markdown files setting the default

00:07:45,750 --> 00:07:51,570
system direct dictionary which in this

00:07:47,820 --> 00:08:00,560
case is us English and I've forgotten

00:07:51,570 --> 00:08:00,560
what the H is yeah I'm sorry yeah I

00:08:01,100 --> 00:08:06,390
forgot what the H command is maybe it'll

00:08:04,650 --> 00:08:14,700
come up in a second or we can of course

00:08:06,390 --> 00:08:16,850
always consult the documentation what is

00:08:14,700 --> 00:08:16,850
H

00:08:18,180 --> 00:08:29,680
HTML yeah okay good but we still got

00:08:23,050 --> 00:08:33,190
here a lot of things that we're not

00:08:29,680 --> 00:08:35,729
quite right there's a lot of code being

00:08:33,190 --> 00:08:37,930
highlighted as spelling error there's

00:08:35,729 --> 00:08:42,789
yeah more frontmatter in the markdown

00:08:37,930 --> 00:08:45,280
file being sparked as problems and this

00:08:42,789 --> 00:08:47,740
is so default by default hunt spell

00:08:45,280 --> 00:08:50,410
isn't really designed for checking code

00:08:47,740 --> 00:08:53,830
so this is not so useful to us at the

00:08:50,410 --> 00:08:55,450
moment obviously there are ways to get

00:08:53,830 --> 00:08:56,950
around this and this is why I

00:08:55,450 --> 00:08:58,030
intentionally showed this first because

00:08:56,950 --> 00:09:00,160
the next one I'm going to show you is

00:08:58,030 --> 00:09:06,880
one that kind of respects markdown at

00:09:00,160 --> 00:09:08,290
least but depending on what your spell

00:09:06,880 --> 00:09:10,420
checking this could still be a valid

00:09:08,290 --> 00:09:12,820
option but what I've been using

00:09:10,420 --> 00:09:14,890
especially for markdown and there are

00:09:12,820 --> 00:09:19,630
equivalents for this for other markup

00:09:14,890 --> 00:09:21,190
languages esky doc rst etc etc is an NPM

00:09:19,630 --> 00:09:23,560
module called markdown spell check and

00:09:21,190 --> 00:09:29,380
you can see some of the commands are

00:09:23,560 --> 00:09:31,540
slightly similar and it will respect the

00:09:29,380 --> 00:09:33,690
markdown formatting so let's try that

00:09:31,540 --> 00:09:33,690
one

00:09:39,379 --> 00:09:43,939
and that doesn't really was not

00:09:41,459 --> 00:09:43,939
reforming

00:09:48,970 --> 00:09:52,689
ah that's all right okay the module is

00:09:51,459 --> 00:09:55,209
called markdown spellcheck but the

00:09:52,689 --> 00:09:57,610
command is empty spell which is slightly

00:09:55,209 --> 00:10:00,910
confusing but in this case we get

00:09:57,610 --> 00:10:05,800
firstly a much nicer output and secondly

00:10:00,910 --> 00:10:08,079
it's respecting code blocks but we can

00:10:05,800 --> 00:10:13,899
still see there are some words in there

00:10:08,079 --> 00:10:19,779
that are correct but not correct in kind

00:10:13,899 --> 00:10:25,959
of default English so how do we handle

00:10:19,779 --> 00:10:31,480
things like that so this module this NPM

00:10:25,959 --> 00:10:33,879
module in particular uses a dot spelling

00:10:31,480 --> 00:10:37,420
file I won't zoom in on it just it's

00:10:33,879 --> 00:10:39,430
just a list of words that's it basically

00:10:37,420 --> 00:10:42,699
it's a dot spelling file for this module

00:10:39,430 --> 00:10:50,230
that you can put all the custom words

00:10:42,699 --> 00:10:54,910
that should be accepted by there is a

00:10:50,230 --> 00:10:57,250
reason for that I'll show you something

00:10:54,910 --> 00:11:01,209
I haven't done which is it's in the

00:10:57,250 --> 00:11:02,139
wrong place it should be the annoying

00:11:01,209 --> 00:11:04,050
thing with this module is it always

00:11:02,139 --> 00:11:07,480
wants to file on the top level so in my

00:11:04,050 --> 00:11:09,600
Travis files in this case we have it

00:11:07,480 --> 00:11:15,420
clones it and then moves it up

00:11:09,600 --> 00:11:18,509
so in this case we get less errors yeah

00:11:15,420 --> 00:11:18,509
didn't move

00:11:19,170 --> 00:11:32,119
oh I mean the wrong folder that's it

00:11:26,970 --> 00:11:32,119
yeah yeah I'm in the wrong folder but

00:11:32,209 --> 00:11:39,889
yeah you just need to move it to the top

00:11:34,589 --> 00:11:43,739
level of the of the the folder basically

00:11:39,889 --> 00:11:45,989
and so I must admit the the markdown

00:11:43,739 --> 00:11:49,410
support for this is the better one but

00:11:45,989 --> 00:11:51,569
there are other options for it and this

00:11:49,410 --> 00:11:54,269
that dot spelling file though is not

00:11:51,569 --> 00:11:56,100
actually a recognized dictionary if you

00:11:54,269 --> 00:11:57,839
wanted to use this in OpenOffice or

00:11:56,100 --> 00:12:01,319
something like that which is an annoying

00:11:57,839 --> 00:12:02,999
it's a shame that the module uses a

00:12:01,319 --> 00:12:04,980
slightly different format to normal

00:12:02,999 --> 00:12:07,559
Huntsville but I found this blog post

00:12:04,980 --> 00:12:09,119
with this very memorable URL and it's

00:12:07,559 --> 00:12:11,339
quite an old blog post but it does work

00:12:09,119 --> 00:12:15,089
that shows you how to convert the dot

00:12:11,339 --> 00:12:18,059
spelling file to the AFC and dot dick

00:12:15,089 --> 00:12:20,549
files that OpenOffice and eccentric

00:12:18,059 --> 00:12:22,259
cetera expects so you can put that into

00:12:20,549 --> 00:12:24,419
your build system - it's just bash

00:12:22,259 --> 00:12:26,100
commands and you can have kind of

00:12:24,419 --> 00:12:30,660
everything available for people to use

00:12:26,100 --> 00:12:34,559
as you add new words the other advantage

00:12:30,660 --> 00:12:37,290
is hunt spell is pretty well integrated

00:12:34,559 --> 00:12:39,720
with lots of code editors so I use at

00:12:37,290 --> 00:12:43,169
them a lot personally there's a module

00:12:39,720 --> 00:12:45,509
for it a lot of the other text editors

00:12:43,169 --> 00:12:47,549
have it by default again and it's

00:12:45,509 --> 00:12:49,230
available as a module for most others so

00:12:47,549 --> 00:12:51,389
again you get that nice consistent

00:12:49,230 --> 00:12:57,889
experience of the same custom words the

00:12:51,389 --> 00:13:01,499
same flow everywhere you use it okay

00:12:57,889 --> 00:13:03,179
spelling actually I will no I think you

00:13:01,499 --> 00:13:04,470
could get an idea of how the command

00:13:03,179 --> 00:13:06,539
looks I won't bother showing you Travis

00:13:04,470 --> 00:13:08,970
help but I think you get the idea there

00:13:06,539 --> 00:13:11,129
so the negative with some of these and

00:13:08,970 --> 00:13:12,959
it's not so much with this one but it is

00:13:11,129 --> 00:13:15,389
with the other one is deciding whether

00:13:12,959 --> 00:13:18,119
spelling errors should break a build or

00:13:15,389 --> 00:13:22,019
not especially because you have a lot of

00:13:18,119 --> 00:13:23,669
customers and so firstly just deciding

00:13:22,019 --> 00:13:27,149
whether it should lead to a successful

00:13:23,669 --> 00:13:29,009
build or not and secondly if you don't

00:13:27,149 --> 00:13:31,799
want it to break a build you need to

00:13:29,009 --> 00:13:32,880
make sure it returns an exit 0 otherwise

00:13:31,799 --> 00:13:35,069
it will break the build

00:13:32,880 --> 00:13:36,240
so I have a lot of overrides I use the

00:13:35,069 --> 00:13:38,370
kind of spelling checks as a guide for

00:13:36,240 --> 00:13:40,620
now whilst I'm tuning them and I just

00:13:38,370 --> 00:13:41,639
forced them to succeed and then I just

00:13:40,620 --> 00:13:44,639
go and read them later

00:13:41,639 --> 00:13:48,560
otherwise it depends how important its

00:13:44,639 --> 00:13:52,319
to but that's this is one note so

00:13:48,560 --> 00:13:56,730
writing better this isn't just grammar

00:13:52,319 --> 00:13:59,220
this is kind of advice on writing better

00:13:56,730 --> 00:14:00,660
too and actually there's a lot of

00:13:59,220 --> 00:14:02,160
commercial tools for this as well

00:14:00,660 --> 00:14:05,160
grammerly is probably one of the most

00:14:02,160 --> 00:14:08,040
popular ones and unfortunately they

00:14:05,160 --> 00:14:09,660
don't have any kind of API or any sort

00:14:08,040 --> 00:14:11,100
of CI tool it's just a desktop

00:14:09,660 --> 00:14:13,589
application or a website that you just

00:14:11,100 --> 00:14:14,910
place your text into but also the kind

00:14:13,589 --> 00:14:18,630
of open source equivalents are things

00:14:14,910 --> 00:14:20,639
like Alex and some other modules that do

00:14:18,630 --> 00:14:23,389
similar things but unfortunately I have

00:14:20,639 --> 00:14:25,649
found that grammerly often highlights

00:14:23,389 --> 00:14:28,800
has better suggestions which is

00:14:25,649 --> 00:14:32,910
unfortunate but a lot of these modules

00:14:28,800 --> 00:14:35,220
again are repositories so we could make

00:14:32,910 --> 00:14:37,470
suggestions I mean it starts to get who

00:14:35,220 --> 00:14:40,079
knows best when you come to something

00:14:37,470 --> 00:14:43,949
like language is a bit the woolly area

00:14:40,079 --> 00:14:47,790
but anyway so again I like to use this

00:14:43,949 --> 00:14:50,189
particular module called write good

00:14:47,790 --> 00:14:53,819
which is great great namely it combines

00:14:50,189 --> 00:14:57,600
a couple of the different tools so for

00:14:53,819 --> 00:15:01,230
example trying to reduce extraneous

00:14:57,600 --> 00:15:03,959
words you don't need removing

00:15:01,230 --> 00:15:06,449
potentially insensitive words some of

00:15:03,959 --> 00:15:08,610
the tests can be quite interesting it

00:15:06,449 --> 00:15:12,600
seems to highlight every country as a

00:15:08,610 --> 00:15:13,130
potentially offensive word which I find

00:15:12,600 --> 00:15:16,100
interesting

00:15:13,130 --> 00:15:19,290
[Laughter]

00:15:16,100 --> 00:15:23,029
sorry every country is highlighted as

00:15:19,290 --> 00:15:29,130
potentially profane which I don't quite

00:15:23,029 --> 00:15:31,579
get maybe maybe like Switzerland laws

00:15:29,130 --> 00:15:34,350
[Laughter]

00:15:31,579 --> 00:15:36,750
but you can see here so again it's named

00:15:34,350 --> 00:15:40,290
here module works in a similar way and

00:15:36,750 --> 00:15:42,389
you can by default or run all tests or

00:15:40,290 --> 00:15:45,209
you can run particular tests or you can

00:15:42,389 --> 00:15:47,090
run all tests ignoring particular tests

00:15:45,209 --> 00:15:50,130
basically

00:15:47,090 --> 00:16:00,150
so again I will show a quick example of

00:15:50,130 --> 00:16:06,750
this just run it on everything and again

00:16:00,150 --> 00:16:08,370
this is much more sort of personal and I

00:16:06,750 --> 00:16:09,690
would probably recommend you don't break

00:16:08,370 --> 00:16:11,070
builds on this because it's a lot of

00:16:09,690 --> 00:16:13,740
it's for guidance especially in

00:16:11,070 --> 00:16:14,880
technical language sometimes there's

00:16:13,740 --> 00:16:17,130
certain things that are not very good

00:16:14,880 --> 00:16:19,500
English or good language of that you

00:16:17,130 --> 00:16:20,550
write in but there's still the best way

00:16:19,500 --> 00:16:22,260
of saying something because its

00:16:20,550 --> 00:16:28,500
technical language so it's much more for

00:16:22,260 --> 00:16:31,140
guidance and it's not as quite as

00:16:28,500 --> 00:16:32,940
helpful output as I love this tool but

00:16:31,140 --> 00:16:50,130
the output especially on come online is

00:16:32,940 --> 00:16:56,400
not great unfortunately there's actually

00:16:50,130 --> 00:16:57,930
something I've not looked at but so

00:16:56,400 --> 00:17:01,280
these basically are all linters and

00:16:57,930 --> 00:17:04,740
actually if I show you how they look in

00:17:01,280 --> 00:17:08,010
in Adam for example they feed into the

00:17:04,740 --> 00:17:10,410
linter in Adam and they it's actually

00:17:08,010 --> 00:17:14,400
much nicer to look at then the kind of

00:17:10,410 --> 00:17:16,040
the command-line output but that I'm not

00:17:14,400 --> 00:17:18,959
hung percent sure about I'm gonna show

00:17:16,040 --> 00:17:20,579
briefly another tool later that may be

00:17:18,959 --> 00:17:22,800
more useful for that but they're all

00:17:20,579 --> 00:17:25,500
basically linters but instead of code

00:17:22,800 --> 00:17:30,180
we're limiting language which is much

00:17:25,500 --> 00:17:31,980
grayer of course but yeah so that's the

00:17:30,180 --> 00:17:34,290
kind of output you get so this is with

00:17:31,980 --> 00:17:37,140
all tests so for example this is passive

00:17:34,290 --> 00:17:39,960
voice this is unnecessary wording

00:17:37,140 --> 00:17:41,820
there's a whole bunch of examples there

00:17:39,960 --> 00:17:44,700
yeah and it's up to you whether you

00:17:41,820 --> 00:17:45,960
consider it useful or not I would

00:17:44,700 --> 00:17:50,850
definitely use this much more for

00:17:45,960 --> 00:17:53,040
guidance another one and I'm going to

00:17:50,850 --> 00:17:54,360
show you this because I've when I did

00:17:53,040 --> 00:17:57,240
this talk before someone mentioned it

00:17:54,360 --> 00:18:00,409
and is a an application cool language

00:17:57,240 --> 00:18:04,440
tool which is a Java

00:18:00,409 --> 00:18:08,760
program it also works in as a Chrome

00:18:04,440 --> 00:18:11,340
extension and part of OpenOffice I'll

00:18:08,760 --> 00:18:13,760
show it and you'll probably quite again

00:18:11,340 --> 00:18:16,960
immediately see the problem with it but

00:18:13,760 --> 00:18:16,960
[Music]

00:18:23,809 --> 00:18:33,529
it's a little slow is one thing it gives

00:18:29,749 --> 00:18:35,359
some nice guidance but again the problem

00:18:33,529 --> 00:18:38,450
with it is for plain text it doesn't

00:18:35,359 --> 00:18:39,889
recognize code so that's a may a fairly

00:18:38,450 --> 00:18:42,169
big issue for technical documentation

00:18:39,889 --> 00:18:46,909
but for other documentation it may be

00:18:42,169 --> 00:18:50,719
okay but it gives some kind of better

00:18:46,909 --> 00:19:00,200
guidance instead of just sort of dumping

00:18:50,719 --> 00:19:01,369
a bunch of problems at you so okay next

00:19:00,200 --> 00:19:03,080
steps with this again

00:19:01,369 --> 00:19:05,839
continuous integration is certainly

00:19:03,080 --> 00:19:08,210
possible annoyingly the right good

00:19:05,839 --> 00:19:11,210
module as an exit code gives you the

00:19:08,210 --> 00:19:15,559
number of errors which is really

00:19:11,210 --> 00:19:18,139
unhelpful and I've had nightmares trying

00:19:15,559 --> 00:19:19,639
to get this to work well in CI and

00:19:18,139 --> 00:19:21,139
actually at the moment in my experience

00:19:19,639 --> 00:19:23,749
with it I've disabled it again because

00:19:21,139 --> 00:19:30,200
I've had difficulties getting it to play

00:19:23,749 --> 00:19:32,359
nicely but you know your own mileage may

00:19:30,200 --> 00:19:33,529
vary and again as we just saw when I

00:19:32,359 --> 00:19:35,839
show you quickly an active and other

00:19:33,529 --> 00:19:37,759
text editors it's available as a linker

00:19:35,839 --> 00:19:40,789
kind of input and it's pretty much more

00:19:37,759 --> 00:19:43,929
useful actually in your live writing as

00:19:40,789 --> 00:19:48,429
opposed to on build tools okay

00:19:43,929 --> 00:19:51,049
next screenshots this is a cool one so

00:19:48,429 --> 00:19:52,999
if you have an application that has a

00:19:51,049 --> 00:19:57,619
graphical interface screenshots are

00:19:52,999 --> 00:20:01,249
extremely helpful in in helping people

00:19:57,619 --> 00:20:05,089
understand particular interface elements

00:20:01,249 --> 00:20:07,089
and what something means but they are

00:20:05,089 --> 00:20:10,489
extremely time consuming to make and

00:20:07,089 --> 00:20:13,309
keep up to date if you change CSS style

00:20:10,489 --> 00:20:15,349
in your application then theory all the

00:20:13,309 --> 00:20:17,809
screenshots need to be recreated so

00:20:15,349 --> 00:20:20,239
doing that manually is time consuming

00:20:17,809 --> 00:20:22,519
and very easily becomes out of date so

00:20:20,239 --> 00:20:23,960
can we automate it of course we can

00:20:22,519 --> 00:20:26,299
otherwise I wouldn't be talking about it

00:20:23,960 --> 00:20:28,700
and and this is so I've borrowed this

00:20:26,299 --> 00:20:30,919
very heavily from the plone community

00:20:28,700 --> 00:20:33,379
the plum community and the Python

00:20:30,919 --> 00:20:35,899
community in general actually has a

00:20:33,379 --> 00:20:37,130
really cool work on automating

00:20:35,899 --> 00:20:38,870
documentation

00:20:37,130 --> 00:20:41,630
and a lot of the tools are often plaited

00:20:38,870 --> 00:20:44,480
tools as well so they like years ahead

00:20:41,630 --> 00:20:47,060
of everybody else which is unfortunately

00:20:44,480 --> 00:20:48,680
if you don't do Python because you kind

00:20:47,060 --> 00:20:51,020
of envious have some of the stuff that

00:20:48,680 --> 00:20:52,550
they have but a lot of these examples

00:20:51,020 --> 00:20:55,700
I've pulled a little bit out of the

00:20:52,550 --> 00:20:58,220
plone documentation and you can go into

00:20:55,700 --> 00:20:59,900
their github repository and find how

00:20:58,220 --> 00:21:01,430
they've done it themselves because it's

00:20:59,900 --> 00:21:04,010
really really cool so the stuff they've

00:21:01,430 --> 00:21:06,320
done but in this particular case I'm

00:21:04,010 --> 00:21:08,390
using kind of tooling from that you're

00:21:06,320 --> 00:21:11,420
probably using for other reasons and

00:21:08,390 --> 00:21:14,540
just sort of combining it so firstly

00:21:11,420 --> 00:21:17,260
this is basically using selenium the the

00:21:14,540 --> 00:21:20,420
webdriver that lets you kind of mock up

00:21:17,260 --> 00:21:22,790
webpages so yes in this case this is

00:21:20,420 --> 00:21:25,160
mostly for web applications but there

00:21:22,790 --> 00:21:27,620
will be equivalents for other types of

00:21:25,160 --> 00:21:31,490
application and then I'm using the robot

00:21:27,620 --> 00:21:34,100
framework to define tests but in my

00:21:31,490 --> 00:21:36,080
particular case I'm not testing but of

00:21:34,100 --> 00:21:38,660
course the great thing here is you can

00:21:36,080 --> 00:21:41,270
combine this with your tests with your

00:21:38,660 --> 00:21:44,660
QA people or yourself and kind of

00:21:41,270 --> 00:21:46,340
combine the tooling the so at the moment

00:21:44,660 --> 00:21:48,310
the examples are going to show you kind

00:21:46,340 --> 00:21:50,840
of the screenshots are getting generated

00:21:48,310 --> 00:21:52,820
but they don't automatically end up in

00:21:50,840 --> 00:21:57,320
the documentation you just maintain a

00:21:52,820 --> 00:21:58,730
kind of file naming standard that when

00:21:57,320 --> 00:22:00,770
the screenshot gets updated the

00:21:58,730 --> 00:22:02,390
documentation is updated in the plone

00:22:00,770 --> 00:22:04,400
documentation they actually have this

00:22:02,390 --> 00:22:05,960
running inside the documentation which

00:22:04,400 --> 00:22:08,690
is the really cool thing but it only

00:22:05,960 --> 00:22:10,910
works in Python so so that's not too

00:22:08,690 --> 00:22:14,510
useful if anything else but so first

00:22:10,910 --> 00:22:15,830
thing you need a web browser on CI this

00:22:14,510 --> 00:22:17,570
is probably going to be Phantom jeaious

00:22:15,830 --> 00:22:19,970
but if you're doing it on your machine

00:22:17,570 --> 00:22:22,760
you can use Firefox and other browsers

00:22:19,970 --> 00:22:25,640
too and then these are the frameworks

00:22:22,760 --> 00:22:30,680
we're using so the robot framework has

00:22:25,640 --> 00:22:32,900
actually has a screenshotting tool built

00:22:30,680 --> 00:22:34,430
into it but it just does full

00:22:32,900 --> 00:22:37,970
screenshots full screenshots all the

00:22:34,430 --> 00:22:41,420
time which is fine but we can be more

00:22:37,970 --> 00:22:46,490
precise so I'm going to run this I'm

00:22:41,420 --> 00:22:50,420
going to show you a simple example this

00:22:46,490 --> 00:22:51,049
is actually what I did for the coach at

00:22:50,420 --> 00:22:53,059
blog post

00:22:51,049 --> 00:22:55,940
and some of the more observant of you

00:22:53,059 --> 00:22:56,570
are going to see my password here for my

00:22:55,940 --> 00:23:05,570
account

00:22:56,570 --> 00:23:17,690
I'm going to trust you very good point

00:23:05,570 --> 00:23:19,009
I can just here we go actually then I

00:23:17,690 --> 00:23:20,360
cut around the test I'm gonna trust you

00:23:19,009 --> 00:23:22,100
I'm gonna trust you I don't have any

00:23:20,360 --> 00:23:23,600
particularly admin rights or anything

00:23:22,100 --> 00:23:25,519
examine what you've got to do is create

00:23:23,600 --> 00:23:28,489
some projects so it's not that

00:23:25,519 --> 00:23:40,909
interesting really so this is a bit

00:23:28,489 --> 00:23:47,809
fuzzy a good point ok I'll change it a

00:23:40,909 --> 00:23:50,330
bit it maybe I just won't go back into

00:23:47,809 --> 00:23:54,499
the other phone ok but this is a series

00:23:50,330 --> 00:23:57,039
of tests I'll run it first so I do have

00:23:54,499 --> 00:23:57,039
it open here

00:24:04,799 --> 00:24:12,490
it runs the test I've defined it's a

00:24:10,570 --> 00:24:15,010
little slow because we're actually

00:24:12,490 --> 00:24:17,620
firing up phantom we also have to

00:24:15,010 --> 00:24:21,490
bootstrap jQuery which is annoying but

00:24:17,620 --> 00:24:24,010
it's a little slow and this is also

00:24:21,490 --> 00:24:26,799
going to a live website to do the test

00:24:24,010 --> 00:24:29,440
so we're relying on Internet as well but

00:24:26,799 --> 00:24:35,049
it was just a nice example for the

00:24:29,440 --> 00:24:38,500
article thankfully I got a pass and if

00:24:35,049 --> 00:24:43,240
we have a look inside that folder your

00:24:38,500 --> 00:24:46,630
oops nope sorry for that you'll see they

00:24:43,240 --> 00:24:50,580
have an image there I'll actually show

00:24:46,630 --> 00:24:50,580
you because I have

00:24:56,960 --> 00:25:02,570
it also does something quite cool and

00:24:59,120 --> 00:25:04,340
adds annotations to it which can be

00:25:02,570 --> 00:25:10,809
customized you can get rid of this sort

00:25:04,340 --> 00:25:10,809
of default style but that's quite cool

00:25:13,000 --> 00:25:19,929
so so notes so click here login field

00:25:18,350 --> 00:25:23,539
you know actually like instructional

00:25:19,929 --> 00:25:27,470
information yeah so basically what it

00:25:23,539 --> 00:25:30,429
does here is you have two files one sets

00:25:27,470 --> 00:25:32,990
up if you go back to my password

00:25:30,429 --> 00:25:35,450
actually maybe I can remove it now let's

00:25:32,990 --> 00:25:40,850
just gonna be hovering on this group of

00:25:35,450 --> 00:25:48,350
a very long time I know but that was

00:25:40,850 --> 00:25:49,100
very very brief so it sets up the

00:25:48,350 --> 00:25:51,590
variables

00:25:49,100 --> 00:25:56,210
it sets up some keywords we're going to

00:25:51,590 --> 00:25:57,770
use place a cleat and then this is the

00:25:56,210 --> 00:26:01,240
actual test and the magic that we're

00:25:57,770 --> 00:26:04,250
interested in in particular is this so

00:26:01,240 --> 00:26:06,409
highlight the form and you have various

00:26:04,250 --> 00:26:11,720
ways of selecting the element with CSS

00:26:06,409 --> 00:26:14,059
or other things add a note again with

00:26:11,720 --> 00:26:15,740
the text the position the style and in

00:26:14,059 --> 00:26:19,940
capture and crop the screenshot with a

00:26:15,740 --> 00:26:31,130
file name again setting the D of the

00:26:19,940 --> 00:26:34,460
class whatever I'm too trusting and yeah

00:26:31,130 --> 00:26:38,600
and so at least here you can see that we

00:26:34,460 --> 00:26:39,830
can keep a consistent file name and then

00:26:38,600 --> 00:26:42,110
you can build that into the

00:26:39,830 --> 00:26:43,070
documentation but if you look at the if

00:26:42,110 --> 00:26:44,029
you're lucky enough to be working with

00:26:43,070 --> 00:26:45,409
Python you look in the plan

00:26:44,029 --> 00:26:47,299
documentation you can see how they've

00:26:45,409 --> 00:26:51,320
actually built this straight in to the

00:26:47,299 --> 00:26:54,520
documentation sorry

00:26:51,320 --> 00:27:00,290
no I don't know it's not my gmail but

00:26:54,520 --> 00:27:06,320
that's okay and I have to fax with

00:27:00,290 --> 00:27:08,450
education on that okay so the next steps

00:27:06,320 --> 00:27:10,490
they're not a lot but hooking it up to

00:27:08,450 --> 00:27:11,960
see I of course making sure you have

00:27:10,490 --> 00:27:15,080
those consistent folders and files and

00:27:11,960 --> 00:27:16,700
things like that and that especially

00:27:15,080 --> 00:27:23,420
have a graphical application is a really

00:27:16,700 --> 00:27:26,030
really cool feature to add in so testing

00:27:23,420 --> 00:27:27,110
so probably one of the biggest

00:27:26,030 --> 00:27:31,310
frustrations you've often had in

00:27:27,110 --> 00:27:33,910
documentation is you go to a page you

00:27:31,310 --> 00:27:37,730
read a code sample and doesn't work

00:27:33,910 --> 00:27:40,400
happens all the time so maybe we should

00:27:37,730 --> 00:27:43,040
test the code examples to check that

00:27:40,400 --> 00:27:45,710
they do work this kind of falls into two

00:27:43,040 --> 00:27:47,900
camps I'm gonna start with the easy one

00:27:45,710 --> 00:27:50,600
which is maybe tenuously part of

00:27:47,900 --> 00:27:52,610
documentation and then the harder one so

00:27:50,600 --> 00:27:56,060
the first one is actually testing api's

00:27:52,610 --> 00:28:01,160
API documentation so again there are

00:27:56,060 --> 00:28:05,450
lots of options for this there's various

00:28:01,160 --> 00:28:07,700
ways of describing an API form file

00:28:05,450 --> 00:28:09,170
formats so in particular at the moment

00:28:07,700 --> 00:28:10,910
in this example using something called

00:28:09,170 --> 00:28:13,670
API blueprint which is kind of this

00:28:10,910 --> 00:28:16,610
weird markdown hybrid that you can also

00:28:13,670 --> 00:28:19,280
define API endpoints expected parameters

00:28:16,610 --> 00:28:21,290
expected output and then it's testable

00:28:19,280 --> 00:28:22,970
but it's also just marked now so

00:28:21,290 --> 00:28:24,950
especially if you're a writer it's quite

00:28:22,970 --> 00:28:25,610
a nice format to work with but this

00:28:24,950 --> 00:28:27,080
swagger

00:28:25,610 --> 00:28:28,820
there's Rama there's a whole bunch of

00:28:27,080 --> 00:28:31,850
other options and it's also of course

00:28:28,820 --> 00:28:33,650
the option of documenting your API code

00:28:31,850 --> 00:28:35,120
and working that way around there's a

00:28:33,650 --> 00:28:37,220
lot of options a lot of commercial

00:28:35,120 --> 00:28:38,720
options a lot of open source options but

00:28:37,220 --> 00:28:41,330
just for the principle I'm gonna stick

00:28:38,720 --> 00:28:45,860
with this tool trader which is what we

00:28:41,330 --> 00:28:50,060
currently use so in this case we picked

00:28:45,860 --> 00:28:53,810
the file we want to do tests we define

00:28:50,060 --> 00:28:56,720
the API endpoint we have some hook files

00:28:53,810 --> 00:28:58,850
that let us do some processing at

00:28:56,720 --> 00:29:01,880
various points in the build so for

00:28:58,850 --> 00:29:06,409
example at the moment there's a parse

00:29:01,880 --> 00:29:08,809
error in one of the

00:29:06,409 --> 00:29:10,489
linters of the api blueprint

00:29:08,809 --> 00:29:11,659
specification and it breaks all the

00:29:10,489 --> 00:29:13,340
builds and they've acknowledged it's a

00:29:11,659 --> 00:29:15,529
problem so this particular moment I have

00:29:13,340 --> 00:29:17,059
a hook saying skip that test because I

00:29:15,529 --> 00:29:18,769
know it's always going to break so until

00:29:17,059 --> 00:29:20,690
I'm told that's being fixed I'm skipping

00:29:18,769 --> 00:29:23,749
a test and there's other things you can

00:29:20,690 --> 00:29:28,729
do there at various kind of stages in

00:29:23,749 --> 00:29:31,359
the life cycle so again let's have a

00:29:28,729 --> 00:29:39,349
look at an example

00:29:31,359 --> 00:29:43,970
let's close this horrible so in here we

00:29:39,349 --> 00:29:47,139
have I'm going to find the yeah this is

00:29:43,970 --> 00:29:49,759
actually the expected the final output

00:29:47,139 --> 00:29:54,099
there's a lot of documentation here but

00:29:49,759 --> 00:29:56,899
the bits were interested in are here so

00:29:54,099 --> 00:29:58,669
defining the end point and some

00:29:56,899 --> 00:30:00,679
parameters the parameters that we're

00:29:58,669 --> 00:30:02,979
going to send to it and the expected

00:30:00,679 --> 00:30:02,979
output

00:30:17,600 --> 00:30:21,350
I've changed the structure a little bit

00:30:19,520 --> 00:30:22,880
since I prepared this so I just need to

00:30:21,350 --> 00:30:26,750
double check it's still exactly where I

00:30:22,880 --> 00:30:28,730
expect it to be I'll tell you one second

00:30:26,750 --> 00:30:31,070
let's just run that because this'll take

00:30:28,730 --> 00:30:37,130
a bit of time to run so whilst it's

00:30:31,070 --> 00:30:44,060
running hopefully oh dear it could be

00:30:37,130 --> 00:30:46,040
the Wi-Fi anyway you get the idea it

00:30:44,060 --> 00:30:47,390
could be the Wi-Fi or it could be a very

00:30:46,040 --> 00:30:50,450
big problem at the company I work for

00:30:47,390 --> 00:30:53,330
who knows we're not sure anyway you get

00:30:50,450 --> 00:30:56,180
the idea you see expected and then you

00:30:53,330 --> 00:31:00,070
get a summary at the end so a Priya is

00:30:56,180 --> 00:31:04,970
just a commercial poster and provider of

00:31:00,070 --> 00:31:08,240
some of the tooling really you can in

00:31:04,970 --> 00:31:10,070
fact trade is written by a pre but about

00:31:08,240 --> 00:31:12,110
90 percent of the tooling they offer as

00:31:10,070 --> 00:31:14,030
the commercial product is available just

00:31:12,110 --> 00:31:17,600
as as projects you can download as well

00:31:14,030 --> 00:31:19,190
so so it basically comes down to with

00:31:17,600 --> 00:31:21,110
who you want to host the documentation

00:31:19,190 --> 00:31:24,170
they have like an interactive console

00:31:21,110 --> 00:31:27,440
thing and the error reports go into

00:31:24,170 --> 00:31:29,000
their interface instead of Travis or

00:31:27,440 --> 00:31:31,670
some like that it's kind of up to you

00:31:29,000 --> 00:31:35,270
really but you get the idea there they

00:31:31,670 --> 00:31:37,790
usually mostly pass but anyway we'll see

00:31:35,270 --> 00:31:41,810
you see what the what's supposed to

00:31:37,790 --> 00:31:45,830
happen and of course this kind of thing

00:31:41,810 --> 00:31:50,300
is fundamentally designed for CI systems

00:31:45,830 --> 00:31:53,050
so it's useful for running locally but

00:31:50,300 --> 00:31:55,370
this is usually integrated into actually

00:31:53,050 --> 00:31:58,190
writing your API is as well as just

00:31:55,370 --> 00:32:01,280
documenting them there's other options

00:31:58,190 --> 00:32:02,750
this one was mentioned to me before if

00:32:01,280 --> 00:32:04,310
you're a JavaScript program you can

00:32:02,750 --> 00:32:05,750
actually write the tests as kind of

00:32:04,310 --> 00:32:09,770
JavaScript objects which might appeal to

00:32:05,750 --> 00:32:11,120
you more there's postman which is a

00:32:09,770 --> 00:32:14,210
desktop application that you may have

00:32:11,120 --> 00:32:16,730
used for testing API endpoints and they

00:32:14,210 --> 00:32:19,790
have a new man which is kind of you can

00:32:16,730 --> 00:32:22,220
create collections of the your test run

00:32:19,790 --> 00:32:25,100
the desktop application and then run

00:32:22,220 --> 00:32:29,600
them in a CI tool and then there's so

00:32:25,100 --> 00:32:31,250
many others so that's reasonably

00:32:29,600 --> 00:32:34,370
straightforward what about test

00:32:31,250 --> 00:32:36,260
code now this okay I got to show you the

00:32:34,370 --> 00:32:44,059
example first and then look at the

00:32:36,260 --> 00:32:48,289
negatives so I have some Python here an

00:32:44,059 --> 00:32:52,429
irst file and this is using Sphinx which

00:32:48,289 --> 00:32:53,690
is a documentation system for Python

00:32:52,429 --> 00:32:56,059
code I think you're already seeing what

00:32:53,690 --> 00:32:57,350
the problem is here which is really

00:32:56,059 --> 00:32:59,600
really cool when it comes to code

00:32:57,350 --> 00:33:01,130
examples so a lot of people say this

00:32:59,600 --> 00:33:02,419
like wouldn't it be great to test code

00:33:01,130 --> 00:33:04,669
examples but there's a couple of

00:33:02,419 --> 00:33:06,260
problems firstly when you show code

00:33:04,669 --> 00:33:08,690
examples and usually to show a snippet

00:33:06,260 --> 00:33:10,880
like make a loop whatever but that loop

00:33:08,690 --> 00:33:12,049
would not run in isolation you need

00:33:10,880 --> 00:33:13,490
variable setup you need libraries

00:33:12,049 --> 00:33:17,480
imported things like that

00:33:13,490 --> 00:33:19,039
so either you in every example so Twilio

00:33:17,480 --> 00:33:20,690
does this in their documentation they

00:33:19,039 --> 00:33:23,380
include everything you're ever going to

00:33:20,690 --> 00:33:26,390
need even if it's just a simple output

00:33:23,380 --> 00:33:31,970
or the cool thing that this does is it

00:33:26,390 --> 00:33:34,909
actually has these three two blocks here

00:33:31,970 --> 00:33:37,840
sorry the set up so what you need to do

00:33:34,909 --> 00:33:40,880
to make the test work but it isn't shown

00:33:37,840 --> 00:33:42,289
the actual tests that you're going to

00:33:40,880 --> 00:33:44,600
there's the code you're actually going

00:33:42,289 --> 00:33:50,140
to show and the expected output which

00:33:44,600 --> 00:33:50,140
also isn't shown so when you run this

00:34:03,270 --> 00:34:09,000
yeah it tests the code example

00:34:06,480 --> 00:34:11,610
it wasn't very complicated but it shows

00:34:09,000 --> 00:34:13,500
you what got tested but the end

00:34:11,610 --> 00:34:16,980
documentation I only shows you the code

00:34:13,500 --> 00:34:19,139
snippet now that is super cool I think

00:34:16,980 --> 00:34:22,050
it's a really awesome way of doing it

00:34:19,139 --> 00:34:25,020
but there is one big problem it's only

00:34:22,050 --> 00:34:27,570
for Python that I did tell you they have

00:34:25,020 --> 00:34:29,100
some of the coolest tools and that is

00:34:27,570 --> 00:34:31,980
one of the coolest and it's only for

00:34:29,100 --> 00:34:33,600
Python and only in rst so if you're not

00:34:31,980 --> 00:34:37,020
using those two you're a bit stuck I

00:34:33,600 --> 00:34:39,360
haven't yet found any solutions to this

00:34:37,020 --> 00:34:41,940
the ones I have been suggested are

00:34:39,360 --> 00:34:43,860
things like keeping your code examples

00:34:41,940 --> 00:34:45,090
externally and bringing them in to the

00:34:43,860 --> 00:34:47,909
documentation so they can be tested

00:34:45,090 --> 00:34:48,389
independently or using some kind of

00:34:47,909 --> 00:34:51,780
regex

00:34:48,389 --> 00:34:54,810
to parse the examples out put those to a

00:34:51,780 --> 00:34:56,610
file run them etc etc not ideal but

00:34:54,810 --> 00:34:58,860
there's some ideas depends how important

00:34:56,610 --> 00:35:00,960
it is to you and I would if anyone has

00:34:58,860 --> 00:35:02,040
has a solution that I haven't found I'd

00:35:00,960 --> 00:35:04,680
love to hear it later

00:35:02,040 --> 00:35:10,430
because it's something that would be

00:35:04,680 --> 00:35:13,320
reading oh sorry just write some Perl

00:35:10,430 --> 00:35:14,760
okay now I think I have a couple minutes

00:35:13,320 --> 00:35:16,710
so I do have a little bit of time for my

00:35:14,760 --> 00:35:20,030
bonus material which is could be very

00:35:16,710 --> 00:35:23,580
very quick things like generating

00:35:20,030 --> 00:35:26,340
multiple formats for epubs for PDFs all

00:35:23,580 --> 00:35:26,910
sorts of things pan doc is my tool of

00:35:26,340 --> 00:35:28,859
choice

00:35:26,910 --> 00:35:31,470
I love pan doc it basically lets you

00:35:28,859 --> 00:35:33,480
input a bunch of different formats

00:35:31,470 --> 00:35:36,150
output a bunch of different formats it's

00:35:33,480 --> 00:35:39,420
very flexible the documentation

00:35:36,150 --> 00:35:41,460
unsurprisingly is good the person who

00:35:39,420 --> 00:35:44,790
does most of the code is very helpful

00:35:41,460 --> 00:35:46,770
and it's a little hard to look at but so

00:35:44,790 --> 00:35:49,230
basically this would go through all the

00:35:46,770 --> 00:35:52,320
markdown files and I'll start at the

00:35:49,230 --> 00:35:54,270
bottom generates HTML actually that

00:35:52,320 --> 00:35:56,460
shouldn't be there that line generates

00:35:54,270 --> 00:36:00,540
HTML from the markdown but also

00:35:56,460 --> 00:36:02,730
generates a PDF generating PDFs from

00:36:00,540 --> 00:36:04,380
markdown requires with pan dot requires

00:36:02,730 --> 00:36:08,520
delving into the wonderful world of

00:36:04,380 --> 00:36:09,990
logic but but you if you don't want

00:36:08,520 --> 00:36:11,940
anything complicated you can just go

00:36:09,990 --> 00:36:13,710
with the default templates from that but

00:36:11,940 --> 00:36:18,200
logic is kind of fun in itself it's like

00:36:13,710 --> 00:36:18,200
CSS for print sort of but

00:36:19,040 --> 00:36:23,780
but this is a really cool way of

00:36:21,110 --> 00:36:26,630
generating manuals out of HTML

00:36:23,780 --> 00:36:28,520
documentation things like that and there

00:36:26,630 --> 00:36:32,750
are even services that will make this a

00:36:28,520 --> 00:36:38,030
bit easier as well but it's a very very

00:36:32,750 --> 00:36:39,980
cool tool and editor snippets so this

00:36:38,030 --> 00:36:43,570
then if you can see this little video

00:36:39,980 --> 00:36:46,550
but it's things like having language

00:36:43,570 --> 00:36:48,200
shortcuts or custom shortcuts so I have

00:36:46,550 --> 00:36:50,000
something a tool I use here called

00:36:48,200 --> 00:36:51,710
hercule which lets me create special

00:36:50,000 --> 00:36:54,530
markdown links and I have a snippet set

00:36:51,710 --> 00:36:56,510
up or I have an introduction that we put

00:36:54,530 --> 00:36:58,430
on all our github repositories instead

00:36:56,510 --> 00:37:00,020
of me typing in each time I have a

00:36:58,430 --> 00:37:03,080
snippet set up that I'd have to type a

00:37:00,020 --> 00:37:07,670
couple letters for and then I have the

00:37:03,080 --> 00:37:09,890
boilerplate text ready to go and hercule

00:37:07,670 --> 00:37:12,230
if you're doing markdown is what's

00:37:09,890 --> 00:37:15,200
called transclusion so you can actually

00:37:12,230 --> 00:37:18,020
have reusable bits of markdown that you

00:37:15,200 --> 00:37:19,280
can then bring in to other places and

00:37:18,020 --> 00:37:21,470
link them together and then render them

00:37:19,280 --> 00:37:23,420
together so if you want to kind of have

00:37:21,470 --> 00:37:25,970
repeated text you don't have to

00:37:23,420 --> 00:37:27,560
literally write every time there's kind

00:37:25,970 --> 00:37:30,830
of two little ways depending at what

00:37:27,560 --> 00:37:32,060
stage in the process you are to make

00:37:30,830 --> 00:37:35,180
that a bit quicker and easier

00:37:32,060 --> 00:37:36,830
and again most text editors I'm sure

00:37:35,180 --> 00:37:39,050
I've forgotten some I tried to include

00:37:36,830 --> 00:37:43,570
all the main ones and have snippet

00:37:39,050 --> 00:37:47,869
support either built in or as a package

00:37:43,570 --> 00:37:49,010
finally said this is a placeholder thing

00:37:47,869 --> 00:37:51,109
so this is something I've been using

00:37:49,010 --> 00:37:56,210
recently so in the documentation I have

00:37:51,109 --> 00:37:58,760
lots of placeholders for examples so we

00:37:56,210 --> 00:38:00,619
have a product that has you need access

00:37:58,760 --> 00:38:02,600
tokens you need space IDs you need a

00:38:00,619 --> 00:38:03,980
bunch of different things and if I if we

00:38:02,600 --> 00:38:05,930
feel like we want to change the example

00:38:03,980 --> 00:38:08,690
at some point I could do a big search

00:38:05,930 --> 00:38:11,240
and replace or we just have all the

00:38:08,690 --> 00:38:12,890
replacements defined in a batch script

00:38:11,240 --> 00:38:15,020
and then we'd have to change them in one

00:38:12,890 --> 00:38:17,390
place and when the documentation is

00:38:15,020 --> 00:38:19,600
built then it replaces them or I might

00:38:17,390 --> 00:38:19,600
come back

00:38:19,880 --> 00:38:29,369
what we do is we show example we said

00:38:25,400 --> 00:38:32,670
yeah yeah yeah it's another way to do it

00:38:29,369 --> 00:38:36,390
I went down this path for some reason it

00:38:32,670 --> 00:38:38,670
works for me yeah and that's a really

00:38:36,390 --> 00:38:41,119
nice way of just having examples that

00:38:38,670 --> 00:38:43,770
you can swap out with in one place again

00:38:41,119 --> 00:38:46,349
reducing the amount of extra work you

00:38:43,770 --> 00:38:48,690
need to do so if you're interested in

00:38:46,349 --> 00:38:50,880
knowing more this is actually again a

00:38:48,690 --> 00:38:55,050
memorable link to the sort of writing

00:38:50,880 --> 00:38:57,210
better documentation blog posts koala is

00:38:55,050 --> 00:38:59,460
a really cool tool I've saw someone with

00:38:57,210 --> 00:39:02,849
one of their t-shirts on earlier they're

00:38:59,460 --> 00:39:05,880
mostly around Hamburg but he's been

00:39:02,849 --> 00:39:07,020
doing the rounds and and it's basically

00:39:05,880 --> 00:39:09,330
so a lot of these were what's called

00:39:07,020 --> 00:39:10,950
linters and koala is a way it's a tool

00:39:09,330 --> 00:39:14,160
that lets you combine multiple linters

00:39:10,950 --> 00:39:17,670
into what they call koala bears I'm half

00:39:14,160 --> 00:39:20,010
Australian so it makes me laugh but yeah

00:39:17,670 --> 00:39:22,830
it's it's not quite there but they have

00:39:20,010 --> 00:39:24,599
some really nice ideas and it's Python

00:39:22,830 --> 00:39:26,130
of course but you can actually wrap the

00:39:24,599 --> 00:39:28,589
Python around other languages which is

00:39:26,130 --> 00:39:31,260
also cool check the docs is a little

00:39:28,589 --> 00:39:32,250
project that myself and again some of

00:39:31,260 --> 00:39:34,859
the people use on the plone

00:39:32,250 --> 00:39:36,720
documentation kind of working on

00:39:34,859 --> 00:39:38,220
alongside write the docs which is sort

00:39:36,720 --> 00:39:40,290
of writer's community about testing

00:39:38,220 --> 00:39:42,390
Doc's not much there right now but that

00:39:40,290 --> 00:39:43,859
will happen and if you're interested in

00:39:42,390 --> 00:39:46,050
just chatting about these sorts of

00:39:43,859 --> 00:39:49,260
things then the write the dogs community

00:39:46,050 --> 00:39:52,680
has flex slack channel I think we still

00:39:49,260 --> 00:39:54,030
have IRC as well and why even bother

00:39:52,680 --> 00:39:57,119
with all this in the first place my

00:39:54,030 --> 00:39:59,070
golden words that documentation isn't

00:39:57,119 --> 00:40:01,650
just for developers so let's make it as

00:39:59,070 --> 00:40:04,849
usable and nice as possible for everyone

00:40:01,650 --> 00:40:04,849

YouTube URL: https://www.youtube.com/watch?v=EilesklhXvs


