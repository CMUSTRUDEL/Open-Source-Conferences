Title: Encrypting Matrix Building a universal end-to-end encrypted communication ecosystem with Matrix andâ€¦
Publication date: 2018-03-06
Playlist: FOSDEM 2017
Description: 
	Encrypting Matrix Building a universal end-to-end encrypted communication ecosystem with Matrix and Olm
by Matthew Hodgson

At: FOSDEM 2017

For the last 2 years the Matrix.org team has been working on libolm - a clean-room FOSS liberal-licensed (Apache) independent specification andimplementation of the end-to-end encryption Double Ratchet Algorithm aspopularised by Signal, WhatsApp, Facebook Messenger, Google Allo etc. As ofNovember 2016 the spec and library is finally finished and being unleashed onthe world, successfully audited by NCC Group, and is available as part ofMatrix's client SDKs for Web, iOS & Android and apps that use them (e.g.Riot.im).

In this talk we will discuss Matrix's mission to be an open, global end-to-end-encrypted communications network - showing that it's possible to buildopen communication infrastructure which is both secure _and_ decentralised(unlike the silos of Signal, Wire, etc); where users can own their data andpick who they trust to run their service. We'll show how you can use Matrix tosecurely defragment communities scattered over proprietary silos such asSlack, Telegram and Gitter, open silos like Rocket.Chat and MatterMost -whilst also bridging to IRC, XMPP and even SIP.

We'll also introduce the Megolm cryptographic ratchet - a new ratchet writtenby Matrix to tackle the specific problem of encrypting Matrix rooms, which mayhave thousands of users and require synchronised history over multiple devices(including new devices). Megolm is layered on top of the Olm ratchet, and isunusual in that it encrypts per-device rather than per-user, and lets roomsspecify how much scrollback may be decrypted by new devices: providing acustomisable trade-off between privacy and usability. This is a major stepforwards from other systems which unilaterally prioritise privacy overusability.

Finally, we'll give a quick tour of all the FOSS clients, bots and bridgesthat the community has built on Matrix over the last year - ranging fromnative Qt clients (Quaternion, NaChat, Tensor), CLI apps (WeeChat), Reactwebapps (Riot, Freebird) to Native mobile apps (Riot).

Matrix.org is a non-profit open source initiative dedicated to creating andmaintaining the Matrix open standard for decentralised communication, whosegoal is to create an open and secure ecosystem for interoperable messaging,VoIP and IoT communication on the internet.


Room: Janson
Scheduled start: 2017-02-05 14:00:00
Captions: 
	00:00:07,170 --> 00:00:15,280
hello all welcome to Austin welcome to

00:00:11,889 --> 00:00:18,849
an encrypted matrix talk by Matthew Fox

00:00:15,280 --> 00:00:24,369
son so Matthew is a technical co-founder

00:00:18,849 --> 00:00:28,419
of matrix wrote of of matrix is a wipe

00:00:24,369 --> 00:00:30,970
and IP messaging solution Matthew has

00:00:28,419 --> 00:00:34,960
been building IP solutions for around 11

00:00:30,970 --> 00:00:44,470
years please welcome him to the stage

00:00:34,960 --> 00:00:47,820
and we can start the talk now Thank You

00:00:44,470 --> 00:00:50,950
provi and can everybody hear me whoa

00:00:47,820 --> 00:00:53,890
fantastic so welcome to the land of

00:00:50,950 --> 00:00:56,020
matrix everybody I'm gonna be talking

00:00:53,890 --> 00:00:58,060
about the epic that we've had over the

00:00:56,020 --> 00:01:00,550
last few years to add end-to-end

00:00:58,060 --> 00:01:03,970
encryption for our to love matrix but

00:01:00,550 --> 00:01:06,310
before I get into that I probably need

00:01:03,970 --> 00:01:09,190
to tell some of you what matrix is or

00:01:06,310 --> 00:01:10,990
what is the matrix if you prefer so just

00:01:09,190 --> 00:01:14,470
quick show of hands he already knows

00:01:10,990 --> 00:01:17,229
what matrix is well that's really really

00:01:14,470 --> 00:01:18,990
scary so House probably over half for

00:01:17,229 --> 00:01:21,220
the people here so I apologize that

00:01:18,990 --> 00:01:22,960
especially if you came to the talk this

00:01:21,220 --> 00:01:24,549
morning on reputation that there's going

00:01:22,960 --> 00:01:26,500
to be a little bit of overlap whilst I

00:01:24,549 --> 00:01:29,140
try to bring the other 40% up to speed

00:01:26,500 --> 00:01:30,970
I'm trying to do it quickly and also if

00:01:29,140 --> 00:01:32,890
anybody has any questions whilst I'm

00:01:30,970 --> 00:01:34,990
talking I'm quite happy to be

00:01:32,890 --> 00:01:37,270
interrupted so please like wave your

00:01:34,990 --> 00:01:39,340
hands around if you want to get

00:01:37,270 --> 00:01:41,770
clarification or if I'm talking too fast

00:01:39,340 --> 00:01:42,909
or in the wrong language or you can't

00:01:41,770 --> 00:01:47,080
understand what I'm saying

00:01:42,909 --> 00:01:49,119
so let's get on what is matrix well

00:01:47,080 --> 00:01:51,340
we're a nonprofit open-source project

00:01:49,119 --> 00:01:53,140
obviously and we're unusual in that

00:01:51,340 --> 00:01:55,990
we're providing an open standard here

00:01:53,140 --> 00:01:58,090
for defragmenting communication so in

00:01:55,990 --> 00:02:00,130
practice this means that we're basically

00:01:58,090 --> 00:02:02,530
creating a global encrypted

00:02:00,130 --> 00:02:04,540
communication mess and network and we

00:02:02,530 --> 00:02:06,070
call it a meta network because Barney

00:02:04,540 --> 00:02:08,409
the word Internet work has already been

00:02:06,070 --> 00:02:09,549
taken their bridges all of the existing

00:02:08,409 --> 00:02:12,159
silos together

00:02:09,549 --> 00:02:14,469
so by silos here we're talking about all

00:02:12,159 --> 00:02:15,190
of the islands which don't interoperate

00:02:14,469 --> 00:02:17,980
today

00:02:15,190 --> 00:02:20,950
so that could be our seed interoperating

00:02:17,980 --> 00:02:23,170
with XMPP it could be slack he'll get a

00:02:20,950 --> 00:02:26,290
real telegram or whatsapp or Facebook

00:02:23,170 --> 00:02:28,300
Messenger and I'm young I'm sure I'm

00:02:26,290 --> 00:02:30,280
preaching to the choir here but

00:02:28,300 --> 00:02:31,990
everybody must be suffering due to the

00:02:30,280 --> 00:02:34,660
way in which all of the different

00:02:31,990 --> 00:02:37,630
communities for just communication

00:02:34,660 --> 00:02:40,450
online are fragmented these days there

00:02:37,630 --> 00:02:43,480
is no equivalent of email for instant

00:02:40,450 --> 00:02:44,920
messaging or VoIP or even IOT kind of

00:02:43,480 --> 00:02:46,870
data and that is what we're trying to

00:02:44,920 --> 00:02:49,360
fix with matrix and the whole point is

00:02:46,870 --> 00:02:52,120
to liberate the communication here so

00:02:49,360 --> 00:02:54,070
that it is controlled by us the users

00:02:52,120 --> 00:02:56,860
you should not be locked into a walled

00:02:54,070 --> 00:02:59,320
garden or a silo which is controlled by

00:02:56,860 --> 00:03:03,160
any single entity for something as basic

00:02:59,320 --> 00:03:04,630
as your right to communicate so in terms

00:03:03,160 --> 00:03:07,690
of the kind of silos we're talking about

00:03:04,630 --> 00:03:09,640
we have things like LC or Gesser and

00:03:07,690 --> 00:03:11,140
slack and I'm sure especially in the

00:03:09,640 --> 00:03:12,820
open-source community we're very

00:03:11,140 --> 00:03:15,100
familiar with the fact that you have a

00:03:12,820 --> 00:03:17,530
perfectly good IRC channel that lasts

00:03:15,100 --> 00:03:18,910
for 20 years and then slack comes along

00:03:17,530 --> 00:03:20,530
and half of people want to go to slack

00:03:18,910 --> 00:03:22,180
and then half the people are on telegram

00:03:20,530 --> 00:03:23,830
and then people start using discord and

00:03:22,180 --> 00:03:26,350
the whole integrity of the thing breaks

00:03:23,830 --> 00:03:28,600
down well the points of matrix is to

00:03:26,350 --> 00:03:31,150
come in basically as the lowest common

00:03:28,600 --> 00:03:32,920
denominator fabric to connect them

00:03:31,150 --> 00:03:34,150
together so you have the bridges here

00:03:32,920 --> 00:03:36,700
there go and connect

00:03:34,150 --> 00:03:39,340
I know IRC through into the wider

00:03:36,700 --> 00:03:41,110
decentralized matrix network all for

00:03:39,340 --> 00:03:43,120
them out together or slack or any of

00:03:41,110 --> 00:03:45,190
these guys even though application like

00:03:43,120 --> 00:03:47,970
github you can go and bridge into the

00:03:45,190 --> 00:03:51,070
wider scheme of things via a bot or

00:03:47,970 --> 00:03:53,400
integration that allows you to start no

00:03:51,070 --> 00:03:55,630
talking to issues on github or filing

00:03:53,400 --> 00:03:58,600
whatever issue it might happen to be

00:03:55,630 --> 00:04:01,330
as if it were a chat system and inside

00:03:58,600 --> 00:04:03,190
matrix we have this full mesh of servers

00:04:01,330 --> 00:04:05,230
which participate in the conversation

00:04:03,190 --> 00:04:07,720
and the really sexy fun thing about

00:04:05,230 --> 00:04:11,800
matrix is that the conversation history

00:04:07,720 --> 00:04:14,380
is replicated over all those servers so

00:04:11,800 --> 00:04:17,049
this is like get but for communication

00:04:14,380 --> 00:04:20,320
there is no single chat server for any

00:04:17,049 --> 00:04:22,419
of these conversations so if some chap

00:04:20,320 --> 00:04:24,400
on IRC is talking on freenode and it's

00:04:22,419 --> 00:04:26,289
Bridgette into matrix talking to

00:04:24,400 --> 00:04:27,139
somebody natively in matrix like this

00:04:26,289 --> 00:04:30,110
guy or

00:04:27,139 --> 00:04:32,479
somebody in slack then that server that

00:04:30,110 --> 00:04:34,460
server and that server will all have a

00:04:32,479 --> 00:04:36,499
copy of the same conversation and this

00:04:34,460 --> 00:04:38,840
is incredibly powerful because it means

00:04:36,499 --> 00:04:41,029
that if any of those servers go down the

00:04:38,840 --> 00:04:43,370
conversation lives on so literally

00:04:41,029 --> 00:04:45,319
tomorrow matrix torgue with it server

00:04:43,370 --> 00:04:47,090
could go down but because a lot of the

00:04:45,319 --> 00:04:48,979
rooms have replicated over hundreds of

00:04:47,090 --> 00:04:50,749
other participating servers the room

00:04:48,979 --> 00:04:53,210
lives on we think this is pretty cool

00:04:50,749 --> 00:04:55,729
because it's basically impossible to

00:04:53,210 --> 00:04:59,419
communicate on matrix without breaking

00:04:55,729 --> 00:05:01,069
open a wall garden the actual acts of

00:04:59,419 --> 00:05:03,379
going and communicates him if anybody

00:05:01,069 --> 00:05:05,360
elsewhere gives them equal ownership of

00:05:03,379 --> 00:05:10,069
that communication it is impossible to

00:05:05,360 --> 00:05:12,080
horde control so nice and go party NC

00:05:10,069 --> 00:05:13,490
conversations and also the conversations

00:05:12,080 --> 00:05:16,039
are equally owned by everybody who's

00:05:13,490 --> 00:05:18,259
participating what can you use for this

00:05:16,039 --> 00:05:21,020
for well classic use case is a group

00:05:18,259 --> 00:05:22,689
chat WebRTC signaling for VoIP because

00:05:21,020 --> 00:05:25,069
I'm sure many are familiar that WebRTC

00:05:22,689 --> 00:05:27,139
doesn't have a standard signaling layer

00:05:25,069 --> 00:05:29,479
and bridging any kind of communication

00:05:27,139 --> 00:05:31,969
silo together it's also kind of cool

00:05:29,479 --> 00:05:34,430
because in the end it's really an open

00:05:31,969 --> 00:05:37,039
object database for any kind of

00:05:34,430 --> 00:05:39,319
real-time data so you can use it as a

00:05:37,039 --> 00:05:41,419
big open decentralized fabric where

00:05:39,319 --> 00:05:43,639
people can do put some data and

00:05:41,419 --> 00:05:46,069
somewhere else people can get them and

00:05:43,639 --> 00:05:48,050
that can be any data we've done MIDI /

00:05:46,069 --> 00:05:50,569
matrix we've done drone control we've

00:05:48,050 --> 00:05:52,939
put card - let me tree and really in the

00:05:50,569 --> 00:05:56,270
end yeah it's basically a pub sub system

00:05:52,939 --> 00:05:58,009
but for real-time consistent data some

00:05:56,270 --> 00:05:59,810
people in the audience how many people

00:05:58,009 --> 00:06:01,789
are thinking why are you reinventing

00:05:59,810 --> 00:06:04,270
XMPP one two three four five seven four

00:06:01,789 --> 00:06:06,800
okay well ten percent of the audience

00:06:04,270 --> 00:06:11,360
are having the same reaction as this

00:06:06,800 --> 00:06:15,740
poor cat now from our perspective we're

00:06:11,360 --> 00:06:17,750
not really we're not I mean the it's

00:06:15,740 --> 00:06:19,729
very different to XMPP and it kind of

00:06:17,750 --> 00:06:22,520
goes on a philosophical and a technical

00:06:19,729 --> 00:06:24,259
angle on the philosophical angle the

00:06:22,520 --> 00:06:25,789
actual spec and the governance model of

00:06:24,259 --> 00:06:28,550
the project is completely different

00:06:25,789 --> 00:06:31,520
there is one matrix back it has one

00:06:28,550 --> 00:06:33,229
version there are no zaps no extensions

00:06:31,520 --> 00:06:34,699
of course you can extend it yourself and

00:06:33,229 --> 00:06:35,839
you can experiment with it but the

00:06:34,699 --> 00:06:37,940
actual thing that people have to

00:06:35,839 --> 00:06:39,550
implement to be compatible is today

00:06:37,940 --> 00:06:40,690
matrix more point two

00:06:39,550 --> 00:06:43,090
if you don't implement it you're not

00:06:40,690 --> 00:06:45,190
talking matrix and once it seems like a

00:06:43,090 --> 00:06:47,200
bit of a kind of legal point it actually

00:06:45,190 --> 00:06:49,150
changes the philosophy enormous lis of

00:06:47,200 --> 00:06:51,280
the project so you have one big spec

00:06:49,150 --> 00:06:52,990
with all the features in it some of them

00:06:51,280 --> 00:06:56,110
are optional for different profiles but

00:06:52,990 --> 00:06:57,940
in general for the classic ones you have

00:06:56,110 --> 00:07:00,130
your instant messaging avoid period

00:06:57,940 --> 00:07:02,170
recedes your notifications and all the

00:07:00,130 --> 00:07:03,640
stuff that you need to communicate also

00:07:02,170 --> 00:07:06,310
the primitives are completely different

00:07:03,640 --> 00:07:07,870
so conversation history is the

00:07:06,310 --> 00:07:10,180
first-class citizen here we're not

00:07:07,870 --> 00:07:12,460
passing a message between Alice and Bob

00:07:10,180 --> 00:07:14,890
we are synchronizing Alice's chat

00:07:12,460 --> 00:07:16,630
history for this room where the server

00:07:14,890 --> 00:07:19,630
which then synchronizes it with all the

00:07:16,630 --> 00:07:21,100
other users in that room and that's just

00:07:19,630 --> 00:07:22,390
a huge fundamental difference that

00:07:21,100 --> 00:07:24,040
you're literally synchronizing

00:07:22,390 --> 00:07:26,620
eventually consistent history around the

00:07:24,040 --> 00:07:28,990
place also we have end-to-end encryption

00:07:26,620 --> 00:07:30,130
obey it still in beta as the first-class

00:07:28,990 --> 00:07:32,110
citizen through out the whole thing

00:07:30,130 --> 00:07:34,480
because if you are replicating data

00:07:32,110 --> 00:07:36,490
everywhere you obviously want to encrypt

00:07:34,480 --> 00:07:40,000
it so that the system ends on reading

00:07:36,490 --> 00:07:42,010
all your messages and we're using HTTP

00:07:40,000 --> 00:07:44,740
and JSON but if people are thinking wow

00:07:42,010 --> 00:07:46,770
this is just X and VP with JSON and HTTP

00:07:44,740 --> 00:07:50,110
you're missing the point completely

00:07:46,770 --> 00:07:52,390
because it's not just swapping XML for

00:07:50,110 --> 00:07:54,610
Jason at all as I said it's this is

00:07:52,390 --> 00:07:57,790
basically an open database think of it

00:07:54,610 --> 00:08:00,580
like Cassandra where anybody can spin up

00:07:57,790 --> 00:08:01,750
a node anywhere in the world that's the

00:08:00,580 --> 00:08:04,270
kind of model that we're going after

00:08:01,750 --> 00:08:06,460
here and obviously finally we've got a

00:08:04,270 --> 00:08:07,780
big focus on bridging and defragmenting

00:08:06,460 --> 00:08:10,390
that's why the things called matrix

00:08:07,780 --> 00:08:11,710
because it is matrixing together all of

00:08:10,390 --> 00:08:14,160
the different communities out there

00:08:11,710 --> 00:08:15,790
which other words contour to one another

00:08:14,160 --> 00:08:18,700
architecture Oliva kind of already

00:08:15,790 --> 00:08:20,350
touched on this you got some servers in

00:08:18,700 --> 00:08:21,670
the middle which store the messages you

00:08:20,350 --> 00:08:23,830
have clients that connect to head of

00:08:21,670 --> 00:08:25,780
them you have application services which

00:08:23,830 --> 00:08:28,000
do the fun stuff bridging and other

00:08:25,780 --> 00:08:28,800
things oh I've got a question good

00:08:28,000 --> 00:08:32,190
question

00:08:28,800 --> 00:08:32,190
just yell at me

00:08:32,230 --> 00:08:40,360
oh it's okay so it's asking all the

00:08:38,380 --> 00:08:41,590
messages get replicated between the

00:08:40,360 --> 00:08:42,970
servers yeah you were mentioning that

00:08:41,590 --> 00:08:44,800
the messages are replicated within the

00:08:42,970 --> 00:08:47,140
servers I know that it's encrypted

00:08:44,800 --> 00:08:48,910
end-to-end stuff is the message on each

00:08:47,140 --> 00:08:51,340
server encrypted on the server itself

00:08:48,910 --> 00:08:53,080
and is there if it is I mean if it is

00:08:51,340 --> 00:08:55,060
it's fine if it's not there for secrecy

00:08:53,080 --> 00:08:56,890
okay so there's a question about

00:08:55,060 --> 00:08:57,970
end-to-end and basically all of the rest

00:08:56,890 --> 00:08:59,230
of the talk is about end-to-end

00:08:57,970 --> 00:09:01,420
encryption so we'll get to it in

00:08:59,230 --> 00:09:03,520
excruciating detail but the quick answer

00:09:01,420 --> 00:09:05,590
is that in order to be end-to-end by

00:09:03,520 --> 00:09:08,110
definition it has to be encrypted on the

00:09:05,590 --> 00:09:09,640
clients not the servers at moment it

00:09:08,110 --> 00:09:11,500
isn't turned on by default because we're

00:09:09,640 --> 00:09:16,060
still in beta but when it is it will be

00:09:11,500 --> 00:09:17,950
there and then the actual data stored on

00:09:16,060 --> 00:09:20,590
the servers is obviously encrypted over

00:09:17,950 --> 00:09:22,810
into and okay yeah I was just worried

00:09:20,590 --> 00:09:24,730
that one of the nodes get compromised

00:09:22,810 --> 00:09:26,920
and all the all the messages can be read

00:09:24,730 --> 00:09:29,800
no so well actually good questions so

00:09:26,920 --> 00:09:30,910
forward secrecy is the big interesting

00:09:29,800 --> 00:09:34,810
bits of what we're done with the

00:09:30,910 --> 00:09:36,910
encryption and matrix in that we make it

00:09:34,810 --> 00:09:38,710
customizable per room so if you were

00:09:36,910 --> 00:09:41,110
using signal and you're optimizing for

00:09:38,710 --> 00:09:42,880
nothing other than privacy the idea of

00:09:41,110 --> 00:09:45,040
being able to replay history or new

00:09:42,880 --> 00:09:47,320
devices would be a disaster because what

00:09:45,040 --> 00:09:49,750
if that device was owned by some nasty

00:09:47,320 --> 00:09:52,300
person whereas if you want to configure

00:09:49,750 --> 00:09:53,740
a room light nice and matrix you can but

00:09:52,300 --> 00:09:56,410
then some rooms aren't quite that

00:09:53,740 --> 00:09:58,600
tinfoil hat level of security and you

00:09:56,410 --> 00:10:00,850
want to be able to add a new device into

00:09:58,600 --> 00:10:03,190
the room and so in that instance we

00:10:00,850 --> 00:10:05,140
allow people to select chunks of history

00:10:03,190 --> 00:10:08,230
that can be replayed so it's a kind of

00:10:05,140 --> 00:10:13,720
deliberate compromise to PFS in exchange

00:10:08,230 --> 00:10:13,900
for usability so matrix ecosystem as a

00:10:13,720 --> 00:10:15,730
whole

00:10:13,900 --> 00:10:19,150
very quickly the main deliverable is

00:10:15,730 --> 00:10:20,590
this boy here matrix spec which is RFC

00:10:19,150 --> 00:10:22,660
style doc that describes all of the

00:10:20,590 --> 00:10:25,390
api's in all of the actual functionality

00:10:22,660 --> 00:10:28,120
and then we have synapse which is our

00:10:25,390 --> 00:10:29,950
original Python home server which has

00:10:28,120 --> 00:10:31,840
been out there for two years now it was

00:10:29,950 --> 00:10:34,420
very much a proof-of-concept it has some

00:10:31,840 --> 00:10:36,550
major shortcomings although nowadays as

00:10:34,420 --> 00:10:38,110
of yesterday particularly it now has

00:10:36,550 --> 00:10:40,750
never been a better time to install a

00:10:38,110 --> 00:10:42,850
synapse which is on nor point 19 it's

00:10:40,750 --> 00:10:44,340
written in Python in twisted memory

00:10:42,850 --> 00:10:46,470
usage has got a lot better

00:10:44,340 --> 00:10:48,210
CPU usage has got a lot better and it's

00:10:46,470 --> 00:10:50,130
kind of the one home server that works

00:10:48,210 --> 00:10:51,960
particularly well is usable in reality

00:10:50,130 --> 00:10:54,779
right now dendrites is our next

00:10:51,960 --> 00:10:57,180
generation one recent lingo that uses a

00:10:54,779 --> 00:10:58,230
really interesting append only log

00:10:57,180 --> 00:11:01,220
architecture

00:10:58,230 --> 00:11:03,660
so what synapse is completely

00:11:01,220 --> 00:11:07,920
centralized is a kind of monolithic

00:11:03,660 --> 00:11:09,810
server of a big bunch of - dendrites has

00:11:07,920 --> 00:11:12,120
got completely horizontally scalable

00:11:09,810 --> 00:11:13,860
architecture where you keep on firing up

00:11:12,120 --> 00:11:15,839
more components and they all talk over a

00:11:13,860 --> 00:11:18,480
big calf kiss style event bus to scale

00:11:15,839 --> 00:11:19,980
up we've got basically the first

00:11:18,480 --> 00:11:21,690
messages going through in the last

00:11:19,980 --> 00:11:23,970
couple of days so it's very very early

00:11:21,690 --> 00:11:25,650
but that's where the future lies then

00:11:23,970 --> 00:11:27,480
you have bridges that connect through to

00:11:25,650 --> 00:11:29,580
IRC and slack and everything else and

00:11:27,480 --> 00:11:31,890
bots and integrations and all that good

00:11:29,580 --> 00:11:33,660
stuff and then the orange stuff here is

00:11:31,890 --> 00:11:35,279
stuff from the wider community the blue

00:11:33,660 --> 00:11:38,400
stuff is all provided by us the matrix

00:11:35,279 --> 00:11:40,620
dog team the orange stuff is provided by

00:11:38,400 --> 00:11:42,120
you the wider community and there are

00:11:40,620 --> 00:11:44,430
lots of different servers and services

00:11:42,120 --> 00:11:46,080
there there's rumor which is a very cool

00:11:44,430 --> 00:11:47,910
Russ project to go and create a matrix

00:11:46,080 --> 00:11:49,740
home server and there are lots of

00:11:47,910 --> 00:11:52,080
bridges over half of the bridges now

00:11:49,740 --> 00:11:54,210
come from the community and up here we

00:11:52,080 --> 00:11:55,560
have clients so here are the community

00:11:54,210 --> 00:11:59,070
clients and we have everything from

00:11:55,560 --> 00:12:02,010
command line to sort of native to

00:11:59,070 --> 00:12:04,170
web-based ones then we provide free

00:12:02,010 --> 00:12:07,190
stacks of JavaScript iOS and Android on

00:12:04,170 --> 00:12:10,080
the client side and you have the Reax

00:12:07,190 --> 00:12:12,630
SDK which provides kind of reusable

00:12:10,080 --> 00:12:14,760
react UI components you have the HTTP

00:12:12,630 --> 00:12:18,030
wrapper which actually exposes this guy

00:12:14,760 --> 00:12:19,410
as a sensible JavaScript bindings and

00:12:18,030 --> 00:12:21,390
then on top you have the actual

00:12:19,410 --> 00:12:23,070
applications and you have the ugly

00:12:21,390 --> 00:12:25,050
console apps which are kind of proof of

00:12:23,070 --> 00:12:27,120
concept wrappers around the UI

00:12:25,050 --> 00:12:29,760
components and then you have this gory

00:12:27,120 --> 00:12:31,440
riot which is a kind of flagship app

00:12:29,760 --> 00:12:33,060
that we've built in order to make sure

00:12:31,440 --> 00:12:35,520
that matrix has a really really good app

00:12:33,060 --> 00:12:36,510
that people can use on a daily basis and

00:12:35,520 --> 00:12:39,390
can kind of bootstrap the whole

00:12:36,510 --> 00:12:41,459
ecosystem so what do you get

00:12:39,390 --> 00:12:42,930
very quickly obviously conversation

00:12:41,459 --> 00:12:44,459
history you get a timeline data

00:12:42,930 --> 00:12:46,350
structure key value stores

00:12:44,459 --> 00:12:49,200
group messaging enter encrypt so

00:12:46,350 --> 00:12:51,180
obviously void signaling for WebRTC push

00:12:49,200 --> 00:12:51,839
notifications server-side search read

00:12:51,180 --> 00:12:54,209
receipts

00:12:51,839 --> 00:12:56,490
typing motives presence synchronize read

00:12:54,209 --> 00:12:57,649
state and unread counts we gather very

00:12:56,490 --> 00:12:59,389
very cramped

00:12:57,649 --> 00:13:01,550
centralized content repository where you

00:12:59,389 --> 00:13:03,920
do an HTTP hit to your server and it

00:13:01,550 --> 00:13:05,899
fans out to the others via HTTP we're

00:13:03,920 --> 00:13:07,939
looking at replacing that with ipfs and

00:13:05,899 --> 00:13:09,980
finally you can attach arbitrary account

00:13:07,939 --> 00:13:11,449
data for users both per user and per

00:13:09,980 --> 00:13:13,519
room so basically all the normal

00:13:11,449 --> 00:13:15,920
building blocks you need for a modern

00:13:13,519 --> 00:13:20,389
communication system so how does it work

00:13:15,920 --> 00:13:23,389
very quickly let me just change to here

00:13:20,389 --> 00:13:24,740
and here's the front page of matrix org

00:13:23,389 --> 00:13:26,449
and it's got this little animation at

00:13:24,740 --> 00:13:28,550
the bottom that hopefully will make a

00:13:26,449 --> 00:13:30,619
lot of sense if you have three servers

00:13:28,550 --> 00:13:32,329
and each one has a bunch of clients off

00:13:30,619 --> 00:13:34,699
it but here we were just showing Alice

00:13:32,329 --> 00:13:37,220
on Alice calm Bob and Bob calm and

00:13:34,699 --> 00:13:39,889
Charlie on Charlie calm if Alice sends a

00:13:37,220 --> 00:13:42,079
message it is just an HTTP put that

00:13:39,889 --> 00:13:43,939
message to Alice's server it then fans

00:13:42,079 --> 00:13:45,589
her or get stored in that server and it

00:13:43,939 --> 00:13:47,569
gets signed by that server we're not

00:13:45,589 --> 00:13:49,459
showing enter any end-to-end encryption

00:13:47,569 --> 00:13:51,079
here then it gets pushed out to the

00:13:49,459 --> 00:13:53,689
other two a bit more of a complicated

00:13:51,079 --> 00:13:56,749
HTTP POST in this instance and by the

00:13:53,689 --> 00:13:58,730
way HTTP is just the base line transport

00:13:56,749 --> 00:14:00,139
here normally half the room have already

00:13:58,730 --> 00:14:04,189
left at this point because they don't

00:14:00,139 --> 00:14:05,899
like HTTP or Y using HTTP and JSON the

00:14:04,189 --> 00:14:07,699
reality is that it's just the lowest

00:14:05,899 --> 00:14:10,009
common denominator simple thing if you

00:14:07,699 --> 00:14:12,019
want to do Co app if you want to do MQTT

00:14:10,009 --> 00:14:14,269
if you want to invent your own quick

00:14:12,019 --> 00:14:16,339
style whatever protocol please do and

00:14:14,269 --> 00:14:18,259
that's fine but it's just the HTTP one

00:14:16,339 --> 00:14:21,319
that we mandate that everyone has to

00:14:18,259 --> 00:14:23,899
speak that gets signed in those servers

00:14:21,319 --> 00:14:25,339
they do an HTTP GET together and you've

00:14:23,899 --> 00:14:27,589
got the kind of basics there that Alice

00:14:25,339 --> 00:14:29,929
hasn't a message to Bob and Charlie now

00:14:27,589 --> 00:14:32,029
if Bob responds more interesting thing

00:14:29,929 --> 00:14:34,069
has happened that message gets built

00:14:32,029 --> 00:14:36,620
into this directed acyclic graph this

00:14:34,069 --> 00:14:38,569
tree of messages within that room and if

00:14:36,620 --> 00:14:40,730
say Charlie responds at the same time we

00:14:38,569 --> 00:14:41,809
have a race between Bob and Charlie now

00:14:40,730 --> 00:14:43,879
this is kind of interesting because

00:14:41,809 --> 00:14:45,589
right now the state of Alice's server is

00:14:43,879 --> 00:14:48,410
inconsistent with Bob is inconsistent

00:14:45,589 --> 00:14:48,769
with Charlie however this is okay it's a

00:14:48,410 --> 00:14:50,299
feature

00:14:48,769 --> 00:14:52,670
it's an eventually consistent database

00:14:50,299 --> 00:14:54,619
effectively and so all that happens as

00:14:52,670 --> 00:14:56,179
the Bob's message is pushed out to

00:14:54,619 --> 00:14:58,009
Charlie at which point the graph

00:14:56,179 --> 00:15:00,589
bifurcates to show there was a race

00:14:58,009 --> 00:15:02,720
between message 2 and 3 and likewise

00:15:00,589 --> 00:15:04,730
message two from charlie oh sorry

00:15:02,720 --> 00:15:06,110
message free from Charlie calm gets

00:15:04,730 --> 00:15:08,560
pushed out to the other two and they

00:15:06,110 --> 00:15:10,060
bifurcate - at which point we were in

00:15:08,560 --> 00:15:11,440
again so this is the whole point of

00:15:10,060 --> 00:15:13,150
matrix you got a whole bunch of servers

00:15:11,440 --> 00:15:15,130
building up this data structure for the

00:15:13,150 --> 00:15:17,200
room which can be a very bushy or very

00:15:15,130 --> 00:15:18,910
linear graph and going and pushing and

00:15:17,200 --> 00:15:21,010
pulling just like get just like merging

00:15:18,910 --> 00:15:23,620
conflicts in the get tree between the

00:15:21,010 --> 00:15:25,510
different nodes now later on Alice might

00:15:23,620 --> 00:15:27,310
send another message and it will go and

00:15:25,510 --> 00:15:28,750
merge the growth back together and that

00:15:27,310 --> 00:15:30,940
gets pushed out to the others and hey

00:15:28,750 --> 00:15:37,150
presto everybody's in sync but so that's

00:15:30,940 --> 00:15:38,740
how matrix works so clients well we've

00:15:37,150 --> 00:15:41,890
got at least 40 of them out there now

00:15:38,740 --> 00:15:43,600
they range from we chat on text to eyes

00:15:41,890 --> 00:15:45,160
there's an eMac space client written by

00:15:43,600 --> 00:15:47,470
Ryan Rix which is really really cool

00:15:45,160 --> 00:15:49,360
you've got desktop apps like catonian

00:15:47,470 --> 00:15:51,640
which is a qml + QT app you've got

00:15:49,360 --> 00:15:54,670
nature - and just switch to nature I

00:15:51,640 --> 00:15:56,290
quickly I've got it open here so here is

00:15:54,670 --> 00:15:59,740
the matrix folston room on a chance

00:15:56,290 --> 00:16:02,080
looks a bit like X Giant you got matrix

00:15:59,740 --> 00:16:04,839
HQ here this is a room with like 6,000

00:16:02,080 --> 00:16:07,779
people in it and it's the main one I can

00:16:04,839 --> 00:16:11,080
say hi everyone and meanwhile if I go to

00:16:07,779 --> 00:16:13,030
another client might riot here you can

00:16:11,080 --> 00:16:16,660
see coffee is saying hi posture and say

00:16:13,030 --> 00:16:18,400
hi coffee and you can see evil Matthew

00:16:16,660 --> 00:16:20,260
which is my test user because he wears a

00:16:18,400 --> 00:16:22,030
suit and is evil saying hi everybody

00:16:20,260 --> 00:16:24,250
it's all I'm saying hello and I can go

00:16:22,030 --> 00:16:26,980
hello from here and because it's support

00:16:24,250 --> 00:16:29,680
smart down I can also yell back we can

00:16:26,980 --> 00:16:32,920
go and say upload an image into here erm

00:16:29,680 --> 00:16:35,320
there's a embarrassing photo of us doing

00:16:32,920 --> 00:16:36,580
the release yesterday from the stand and

00:16:35,320 --> 00:16:38,530
going click on there so you get the idea

00:16:36,580 --> 00:16:42,339
that basically riot here looks a lot

00:16:38,530 --> 00:16:44,830
like slack or some kind of ghetto style

00:16:42,339 --> 00:16:47,080
tool except everything is backed by

00:16:44,830 --> 00:16:49,120
matrix and also you might notice there a

00:16:47,080 --> 00:16:51,190
of these read receipts jumping down the

00:16:49,120 --> 00:16:53,620
right-hand side doing this fun Tetris

00:16:51,190 --> 00:16:55,750
animation where as slacks read receipts

00:16:53,620 --> 00:16:57,820
can anybody tell me where slacks oh wait

00:16:55,750 --> 00:17:00,820
it doesn't have any anyway so you get

00:16:57,820 --> 00:17:02,320
the idea of what we're doing there we've

00:17:00,820 --> 00:17:04,089
got six thousand people in this room

00:17:02,320 --> 00:17:07,630
it's spread over about 500 different

00:17:04,089 --> 00:17:10,959
servers so Eric here is at Eric J on JK

00:17:07,630 --> 00:17:12,819
i de re you've got I know who else is on

00:17:10,959 --> 00:17:16,390
their own server this guy on riot

00:17:12,819 --> 00:17:18,459
reticule door mi our Dax ears or nardac

00:17:16,390 --> 00:17:20,770
c-calm and each of these servers have

00:17:18,459 --> 00:17:24,049
complete control over this room so

00:17:20,770 --> 00:17:27,230
on this account which accounts on my own

00:17:24,049 --> 00:17:29,450
here this is my evil Matthew one so I'm

00:17:27,230 --> 00:17:31,970
only in about a hundred different rooms

00:17:29,450 --> 00:17:34,190
here if my old types of my real one here

00:17:31,970 --> 00:17:37,160
then I'm in actually about a thousand

00:17:34,190 --> 00:17:38,480
rooms yeah and so I got 415 direct

00:17:37,160 --> 00:17:40,400
messages open with different people

00:17:38,480 --> 00:17:42,980
there four hundred different rooms and

00:17:40,400 --> 00:17:46,160
some of them are IRC base another miss

00:17:42,980 --> 00:17:47,710
lack some of them a hybrid and from an

00:17:46,160 --> 00:17:50,270
example might be in something like the

00:17:47,710 --> 00:17:52,520
de-centralized Web Summit room which is

00:17:50,270 --> 00:17:53,929
split between slack in between matrix

00:17:52,520 --> 00:17:56,120
and about half of the people are on

00:17:53,929 --> 00:18:00,650
slack offered more on matrix or I might

00:17:56,120 --> 00:18:02,780
go to ipfs which is largely IRC and lots

00:18:00,650 --> 00:18:03,770
of the track getting on here is IRC but

00:18:02,780 --> 00:18:05,090
then you've also got a whole bunch of

00:18:03,770 --> 00:18:09,230
people at the top who are natively using

00:18:05,090 --> 00:18:11,510
it through matrix make sense I'll just

00:18:09,230 --> 00:18:12,980
quickly show something else which is the

00:18:11,510 --> 00:18:16,130
video calling as an example of the

00:18:12,980 --> 00:18:17,840
WebRTC certain signaling so in fact if I

00:18:16,130 --> 00:18:20,150
go and take one of these messages like

00:18:17,840 --> 00:18:22,460
that one and I say if you saw some it

00:18:20,150 --> 00:18:23,990
then oh and my dark theme it's not very

00:18:22,460 --> 00:18:25,760
legible probably but you can kind of see

00:18:23,990 --> 00:18:27,740
that we've got the emoji is the body of

00:18:25,760 --> 00:18:29,450
a message and some jason and the message

00:18:27,740 --> 00:18:31,070
type and what goes from these brackets

00:18:29,450 --> 00:18:33,679
can be anything you like

00:18:31,070 --> 00:18:36,860
so we specify instant messaging and void

00:18:33,679 --> 00:18:39,679
but it could be literally no GPS

00:18:36,860 --> 00:18:45,320
coordinates thermometer data car

00:18:39,679 --> 00:18:47,120
telemetry whatever so let's see what

00:18:45,320 --> 00:18:49,400
else I can do so I was going to do was

00:18:47,120 --> 00:18:53,059
to go and cool my test user from riot on

00:18:49,400 --> 00:18:55,850
iOS so rioters an app is a react app

00:18:53,059 --> 00:18:57,710
here it's also an iOS native app it's

00:18:55,850 --> 00:18:59,600
also an Android native app it's also on

00:18:57,710 --> 00:19:01,520
F throat without any Google dependencies

00:18:59,600 --> 00:19:04,340
if you so desire it should probably make

00:19:01,520 --> 00:19:05,720
sense for foster and I'm not going to

00:19:04,340 --> 00:19:08,690
screen share my phone but I'm going to

00:19:05,720 --> 00:19:11,090
go and tell it to do a video call free

00:19:08,690 --> 00:19:13,480
to evil Matthew but sure hopefully like

00:19:11,090 --> 00:19:17,780
all the best live demos work perfectly

00:19:13,480 --> 00:19:19,600
come on does assume that I have internet

00:19:17,780 --> 00:19:21,620
connectivity on my phone of course oh

00:19:19,600 --> 00:19:24,110
there we go so I got an incoming video

00:19:21,620 --> 00:19:26,059
call here from Matthew and I probably

00:19:24,110 --> 00:19:28,700
should accept to it this is now using

00:19:26,059 --> 00:19:36,259
web RTC here on

00:19:28,700 --> 00:19:39,830
let me go fullscreen it's only a video

00:19:36,259 --> 00:19:41,570
cool it's so this is using video this is

00:19:39,830 --> 00:19:44,509
using the Google web RTC obviously on

00:19:41,570 --> 00:19:48,679
the on Chrome here it also works on

00:19:44,509 --> 00:19:50,690
Firefox and meanwhile on this side it's

00:19:48,679 --> 00:19:52,369
also using the Google web RTC stack

00:19:50,690 --> 00:19:54,859
hello everybody they can wave to

00:19:52,369 --> 00:19:56,600
yourselves now if i unlock my screen you

00:19:54,859 --> 00:19:58,659
might even show you that it does correct

00:19:56,600 --> 00:20:00,259
orientation support hey there we go

00:19:58,659 --> 00:20:05,720
where's yourselves

00:20:00,259 --> 00:20:06,919
you look beautiful everybody so yeah

00:20:05,720 --> 00:20:09,379
this is using the Google stack but it

00:20:06,919 --> 00:20:10,940
also supports other stacks as well and

00:20:09,379 --> 00:20:13,070
to be honest I have some interesting

00:20:10,940 --> 00:20:16,009
news about adding new stacks into that

00:20:13,070 --> 00:20:18,639
in future ok that's basically matrix as

00:20:16,009 --> 00:20:21,289
it looks from there and if we go back to

00:20:18,639 --> 00:20:23,950
nature you'll see that the conversations

00:20:21,289 --> 00:20:28,309
been going on in there hopefully

00:20:23,950 --> 00:20:31,580
meanwhile on IRC we've got the same

00:20:28,309 --> 00:20:33,320
thing happening here on hash matrix and

00:20:31,580 --> 00:20:34,940
it's literally the same conversation

00:20:33,320 --> 00:20:37,639
reality gap saying great talk so far

00:20:34,940 --> 00:20:39,559
thanks for allottee gaps meanwhile on

00:20:37,639 --> 00:20:42,139
slack you would have the same thing

00:20:39,559 --> 00:20:45,889
going on here so let's go down to the

00:20:42,139 --> 00:20:47,299
bottom and snap and you've got wherever

00:20:45,889 --> 00:20:51,559
it was I hope they're in the right place

00:20:47,299 --> 00:20:53,389
come on slack don't know why yeah there

00:20:51,559 --> 00:20:56,690
we go reality gap saying great talk so

00:20:53,389 --> 00:20:59,809
far a new bridge contributed by the

00:20:56,690 --> 00:21:01,340
community from signing in the room hello

00:20:59,809 --> 00:21:02,989
thank you for writing this this is

00:21:01,340 --> 00:21:04,730
really cool so this is my telegram

00:21:02,989 --> 00:21:07,940
account and meanwhile I'm a matrix HQ

00:21:04,730 --> 00:21:09,769
you got a pretty you've got a whole

00:21:07,940 --> 00:21:11,690
bridge going through into telegram at

00:21:09,769 --> 00:21:13,399
the moment this one is using bots to

00:21:11,690 --> 00:21:15,440
bridge people over but we do also have

00:21:13,399 --> 00:21:17,090
one that logs in as your actual telegram

00:21:15,440 --> 00:21:18,710
account as you so that you can

00:21:17,090 --> 00:21:21,049
transparently bridge your telegram

00:21:18,710 --> 00:21:22,309
persona into matrix and we're really in

00:21:21,049 --> 00:21:25,789
the points of building lots and lots of

00:21:22,309 --> 00:21:26,960
these bridges right now so I think

00:21:25,789 --> 00:21:29,799
that's probably the obvious things to

00:21:26,960 --> 00:21:32,450
show you about matrix itself

00:21:29,799 --> 00:21:34,129
obviously not serve SDK is actually a

00:21:32,450 --> 00:21:37,279
final cool one would have been matrix I

00:21:34,129 --> 00:21:40,450
LCD this exposes all of matrix as my LCD

00:21:37,279 --> 00:21:41,600
so you can take your existing x chat or

00:21:40,450 --> 00:21:43,970
SSI

00:21:41,600 --> 00:21:46,130
whatever it is and connect to port six

00:21:43,970 --> 00:21:48,410
six six seven or matrix our CD that then

00:21:46,130 --> 00:21:51,110
proxies it into the entirety of matrix

00:21:48,410 --> 00:21:52,310
so you expose the whole thing as a LC

00:21:51,110 --> 00:21:55,520
network and you can do silly things

00:21:52,310 --> 00:21:57,740
obviously might talk IRC to a matrix

00:21:55,520 --> 00:22:00,200
server which then goes into an IRC

00:21:57,740 --> 00:22:03,380
bridge and use matrix as one great big

00:22:00,200 --> 00:22:04,820
silly over-engineered IRC bouncing home

00:22:03,380 --> 00:22:07,310
service we kind of already talked about

00:22:04,820 --> 00:22:08,570
these synapses about in fact we measured

00:22:07,310 --> 00:22:10,430
it earlier it's now at sixty six

00:22:08,570 --> 00:22:12,350
thousand lines of Python in twisted

00:22:10,430 --> 00:22:14,360
we've hit some fairly major performance

00:22:12,350 --> 00:22:17,390
and maintainability challenges

00:22:14,360 --> 00:22:19,700
specifically I'm typing also the ability

00:22:17,390 --> 00:22:24,530
to do bat traces and profiling over

00:22:19,700 --> 00:22:26,480
deferred inline callbacks in twisted and

00:22:24,530 --> 00:22:30,170
so all of our work is going now into

00:22:26,480 --> 00:22:31,580
dendrite which is coming along well as I

00:22:30,170 --> 00:22:33,940
mentioned and it's based built around

00:22:31,580 --> 00:22:36,440
these Kefka resk append-only event logs

00:22:33,940 --> 00:22:38,150
finally you've got rumor on the rest

00:22:36,440 --> 00:22:40,520
sides and you also have projects like

00:22:38,150 --> 00:22:42,200
bullet time and gopalam and go JSON EPS

00:22:40,520 --> 00:22:44,840
and Java which are basically experiments

00:22:42,200 --> 00:22:45,920
from the community bridges well we've

00:22:44,840 --> 00:22:47,870
already looked at a bunch of them

00:22:45,920 --> 00:22:49,580
they're also rocket shafts and matter

00:22:47,870 --> 00:22:51,680
most ones we have VoIP ones too free

00:22:49,580 --> 00:22:53,900
switch asterisk really fun one if

00:22:51,680 --> 00:22:56,530
anybody likes Lib purple please can you

00:22:53,900 --> 00:22:59,150
come and talk to me about taking over

00:22:56,530 --> 00:23:00,890
usage on the LED purple bridge because

00:22:59,150 --> 00:23:02,720
this one should be the coolest and that

00:23:00,890 --> 00:23:05,720
it can talk anything like purple can and

00:23:02,720 --> 00:23:07,760
expose it into matrix so I built it we

00:23:05,720 --> 00:23:09,320
did it with skype and it worked pretty

00:23:07,760 --> 00:23:11,600
well and you could use this to bridge

00:23:09,320 --> 00:23:13,460
into whatsapp or Facebook or whatever so

00:23:11,600 --> 00:23:15,080
if you like hacking on the purple please

00:23:13,460 --> 00:23:17,180
come and talk to me meanwhile on the

00:23:15,080 --> 00:23:19,160
community we've had iMessage recently

00:23:17,180 --> 00:23:20,420
Twitter Facebook Messenger and blah blah

00:23:19,160 --> 00:23:22,100
blah blah blah you get the idea and

00:23:20,420 --> 00:23:24,130
everybody seems to love writing IRC

00:23:22,100 --> 00:23:26,000
bridges so we've got about eight of them

00:23:24,130 --> 00:23:28,850
we've already shown you what it looks

00:23:26,000 --> 00:23:32,150
like community statuses that we started

00:23:28,850 --> 00:23:34,730
in September two years ago now and just

00:23:32,150 --> 00:23:36,830
over two years very late be two bits of

00:23:34,730 --> 00:23:38,570
it around to be - some of it isn't we've

00:23:36,830 --> 00:23:41,120
got seven hundred thousand accounts on

00:23:38,570 --> 00:23:44,510
the matrixyl server and we're pushing

00:23:41,120 --> 00:23:46,940
about 700,000 messages a day actually

00:23:44,510 --> 00:23:48,980
receiving them today we realized that

00:23:46,940 --> 00:23:50,600
all of our message rates actually been

00:23:48,980 --> 00:23:52,190
miscalculated and that we'd only ever

00:23:50,600 --> 00:23:53,840
looked so the message is coming in which

00:23:52,190 --> 00:23:55,429
is about 10 a second

00:23:53,840 --> 00:23:57,289
in terms of going out we're actually

00:23:55,429 --> 00:23:59,870
pushing about a thousand a second on the

00:23:57,289 --> 00:24:02,360
server we've got 70 thousand rooms on

00:23:59,870 --> 00:24:04,970
matrix dog but a really important stat

00:24:02,360 --> 00:24:06,740
is this one the fifteen hundred's and

00:24:04,970 --> 00:24:09,260
federated servers out there which are

00:24:06,740 --> 00:24:11,600
run by you guys and the more the merrier

00:24:09,260 --> 00:24:14,900
and in fact almost half of the traffic

00:24:11,600 --> 00:24:16,760
on matrix and currently is not on the

00:24:14,900 --> 00:24:18,830
matrix dog server but it's actually out

00:24:16,760 --> 00:24:20,900
there in the wild in the wider ecosystem

00:24:18,830 --> 00:24:21,289
so it's pretty centralized to matrix dog

00:24:20,900 --> 00:24:22,820
right now

00:24:21,289 --> 00:24:24,140
but honestly I'd like to get to the

00:24:22,820 --> 00:24:27,940
point where we can turn off the main

00:24:24,140 --> 00:24:30,740
server and everybody can run their own

00:24:27,940 --> 00:24:33,649
term so for the user growth that's how

00:24:30,740 --> 00:24:36,500
we got to the 700,000 users so far you

00:24:33,649 --> 00:24:38,179
can see that we really took the kind of

00:24:36,500 --> 00:24:40,669
training wheels off it at that point but

00:24:38,179 --> 00:24:43,490
a better graph rather than total users

00:24:40,669 --> 00:24:47,120
is the total messages a day and this is

00:24:43,490 --> 00:24:48,380
looking just to the unbridgeable a level

00:24:47,120 --> 00:24:50,659
so this is ignoring all of the traffic

00:24:48,380 --> 00:24:53,299
to and from freenode and Mozilla Nest

00:24:50,659 --> 00:24:55,159
and slack etc this is native matrix

00:24:53,299 --> 00:24:57,260
traffic and you can see that we're up at

00:24:55,159 --> 00:24:59,929
about a hundred thousand messages a day

00:24:57,260 --> 00:25:02,120
so it's not huge but critically the the

00:24:59,929 --> 00:25:05,059
acceleration is frankly petrifying in

00:25:02,120 --> 00:25:06,860
terms of the update we have there and

00:25:05,059 --> 00:25:08,840
that's where a lot of work has gone into

00:25:06,860 --> 00:25:10,909
optimizing synapse and making it good

00:25:08,840 --> 00:25:14,120
enough until we can get dendrite running

00:25:10,909 --> 00:25:15,710
so we can really really go first now

00:25:14,120 --> 00:25:19,940
let's talk about crypto he wants to hear

00:25:15,710 --> 00:25:22,399
about crypto yay so this isn't ohm

00:25:19,940 --> 00:25:25,700
it's a salamander from the cave systems

00:25:22,399 --> 00:25:27,409
of puts Tonya Yana in Slovenia and it's

00:25:25,700 --> 00:25:30,049
the closest thing we have to a European

00:25:27,409 --> 00:25:33,140
axolotl which is the North American

00:25:30,049 --> 00:25:35,390
salamander open whisper systems named

00:25:33,140 --> 00:25:39,230
their ratchets and that they use for

00:25:35,390 --> 00:25:40,850
cryptography after originally in signal

00:25:39,230 --> 00:25:42,529
which was text secure before they

00:25:40,850 --> 00:25:43,039
renamed it the very boring double

00:25:42,529 --> 00:25:44,779
rapture

00:25:43,039 --> 00:25:46,909
well they renamed it double rapture with

00:25:44,779 --> 00:25:49,100
calling home home and Ole Miss are an

00:25:46,909 --> 00:25:52,190
implementation and it's the foundation

00:25:49,100 --> 00:25:53,750
of all of the encryption in matrix as I

00:25:52,190 --> 00:25:54,380
said at the beginning without end to end

00:25:53,750 --> 00:25:56,720
encryption

00:25:54,380 --> 00:25:58,690
your let me just kill telegram so it

00:25:56,720 --> 00:26:00,860
stops bouncing

00:25:58,690 --> 00:26:03,140
matrixes replication conversation

00:26:00,860 --> 00:26:03,710
history is a huge privacy problem to put

00:26:03,140 --> 00:26:06,919
it mildly

00:26:03,710 --> 00:26:07,130
because in a room like matrix HQ if we

00:26:06,919 --> 00:26:08,840
turn

00:26:07,130 --> 00:26:10,640
on so it's gonna have the plain

00:26:08,840 --> 00:26:13,070
text over a hundred different 500

00:26:10,640 --> 00:26:15,410
different servers so we spent two years

00:26:13,070 --> 00:26:17,240
gradually working away putting

00:26:15,410 --> 00:26:19,640
end-to-end crypto into the absolute

00:26:17,240 --> 00:26:21,920
house of matrix and the pointer the

00:26:19,640 --> 00:26:23,570
goals we had was to trade off privacy

00:26:21,920 --> 00:26:25,940
and usability so that was the question

00:26:23,570 --> 00:26:27,860
at the beginning so sometimes you do

00:26:25,940 --> 00:26:29,240
want perfect forward secrecy and

00:26:27,860 --> 00:26:31,400
sometimes you really want to be able to

00:26:29,240 --> 00:26:33,020
add new devices and invite people into a

00:26:31,400 --> 00:26:35,480
room and be able to replay and we want

00:26:33,020 --> 00:26:37,640
to do both and I think we're basically

00:26:35,480 --> 00:26:40,070
unique in wanting that because everybody

00:26:37,640 --> 00:26:42,410
else whether it's wire or signal really

00:26:40,070 --> 00:26:46,310
going for the hardcore sort of secrecy

00:26:42,410 --> 00:26:47,930
approach we want to we decided that we

00:26:46,310 --> 00:26:50,180
were going to encrypt and trust things

00:26:47,930 --> 00:26:51,530
per device rather than per user so this

00:26:50,180 --> 00:26:53,090
is a big deal that when you send a

00:26:51,530 --> 00:26:55,400
message and matrix to somebody that's

00:26:53,090 --> 00:26:57,530
encrypted you are specifying the devices

00:26:55,400 --> 00:26:59,420
which receive it so I'm not sending it

00:26:57,530 --> 00:27:01,190
to a person and trusting them to go and

00:26:59,420 --> 00:27:03,020
blindly sync it to a whole bunch of

00:27:01,190 --> 00:27:05,390
different devices I have the ability to

00:27:03,020 --> 00:27:07,190
blacklist particular devices from

00:27:05,390 --> 00:27:10,880
receiving messages and validate

00:27:07,190 --> 00:27:13,580
particular ones what if I don't want to

00:27:10,880 --> 00:27:15,830
expose my divisor well if you don't want

00:27:13,580 --> 00:27:19,070
to expose the devices then rename them

00:27:15,830 --> 00:27:21,140
to device or something ambiguous at the

00:27:19,070 --> 00:27:23,150
moment we necessarily have to expose the

00:27:21,140 --> 00:27:24,680
number of devices you have otherwise you

00:27:23,150 --> 00:27:26,660
wouldn't be able to encrypt for the

00:27:24,680 --> 00:27:28,640
devices so at the moment there's a bit

00:27:26,660 --> 00:27:30,800
of controversy that we named the devices

00:27:28,640 --> 00:27:32,990
based on something vaguely useful and

00:27:30,800 --> 00:27:35,030
expect for you to anonymize it if you

00:27:32,990 --> 00:27:36,500
wanted to be anonymized in future we're

00:27:35,030 --> 00:27:38,210
going to default so prompting the user

00:27:36,500 --> 00:27:40,340
so that if they want to remove any

00:27:38,210 --> 00:27:42,290
identifying data like the model of their

00:27:40,340 --> 00:27:45,110
phone or the URL of their client they

00:27:42,290 --> 00:27:47,240
can do that we wanted to support big

00:27:45,110 --> 00:27:50,000
rooms a lot of people give up on this

00:27:47,240 --> 00:27:51,920
because a it's really hard and B if

00:27:50,000 --> 00:27:53,750
you're encrypting for ten thousand

00:27:51,920 --> 00:27:54,560
devices why bother because one of them

00:27:53,750 --> 00:27:59,630
is going to get owned

00:27:54,560 --> 00:28:01,310
and so the trusted computing prosecco

00:27:59,630 --> 00:28:04,610
mean use case anyway and a big company

00:28:01,310 --> 00:28:06,110
or even a big gathering like this which

00:28:04,610 --> 00:28:09,260
I guess is basically a public where it

00:28:06,110 --> 00:28:11,300
is public you might still want to at

00:28:09,260 --> 00:28:13,250
least attempt to encrypt the contents

00:28:11,300 --> 00:28:14,780
there and as you've seen our matrix

00:28:13,250 --> 00:28:16,820
rooms are huge and we want to support

00:28:14,780 --> 00:28:19,130
them so somebody turns encryption on a

00:28:16,820 --> 00:28:21,110
matrix HQ today we don't want the whole

00:28:19,130 --> 00:28:23,210
thing to explode

00:28:21,110 --> 00:28:24,860
we want to encrypt non-public rooms by

00:28:23,210 --> 00:28:26,810
default but we haven't yet worse were in

00:28:24,860 --> 00:28:28,610
beta but that's the goal obviously

00:28:26,810 --> 00:28:30,260
there's no point in encrypting a

00:28:28,610 --> 00:28:31,820
conversation like this one which you

00:28:30,260 --> 00:28:33,410
want to have on the public record in

00:28:31,820 --> 00:28:35,210
fact the encryption gets in the way and

00:28:33,410 --> 00:28:38,450
finally we won't want it to be available

00:28:35,210 --> 00:28:40,460
to everybody in matrix so high level

00:28:38,450 --> 00:28:42,470
10000 for overview we've got two

00:28:40,460 --> 00:28:44,570
different mechanisms at work here we've

00:28:42,470 --> 00:28:47,540
got home itself I'm a little salamander

00:28:44,570 --> 00:28:50,270
which is a double rapture implementation

00:28:47,540 --> 00:28:54,290
it is almost identical in functionality

00:28:50,270 --> 00:28:57,050
to the one that signal and Facebook and

00:28:54,290 --> 00:28:59,990
ello and all the other axolotl double

00:28:57,050 --> 00:29:02,660
rapture implementations use however we

00:28:59,990 --> 00:29:04,250
use it completely differently what we do

00:29:02,660 --> 00:29:06,920
is to use it to establish a secure

00:29:04,250 --> 00:29:08,900
channel between two devices and then we

00:29:06,920 --> 00:29:11,450
just use it to synchronize the key data

00:29:08,900 --> 00:29:13,460
that's required for megohm which is the

00:29:11,450 --> 00:29:15,440
new router the main wrapper that we use

00:29:13,460 --> 00:29:19,850
for encrypting to a group of receivers

00:29:15,440 --> 00:29:22,720
so the deal is that if I want to send

00:29:19,850 --> 00:29:24,980
all of you guys a message I will go and

00:29:22,720 --> 00:29:26,660
first of all have to set up one to one

00:29:24,980 --> 00:29:29,180
channel with everybody but I only have

00:29:26,660 --> 00:29:31,670
to do this once in order to share the

00:29:29,180 --> 00:29:34,130
group rachet state which I then use to

00:29:31,670 --> 00:29:35,360
encrypt my messages to the room so

00:29:34,130 --> 00:29:38,630
whilst it's pretty nasty that I'm gonna

00:29:35,360 --> 00:29:40,160
have to do like 800 1 2 ones at the

00:29:38,630 --> 00:29:42,500
beginning and honestly that does take a

00:29:40,160 --> 00:29:44,510
time and people using this today we can

00:29:42,500 --> 00:29:46,310
see a good 10 second delay well-stirred

00:29:44,510 --> 00:29:48,770
does the initial set up once it's in

00:29:46,310 --> 00:29:51,500
place I can then use the mega ohm

00:29:48,770 --> 00:29:53,810
ratchet to generate a series of keys for

00:29:51,500 --> 00:29:55,610
the members of the room sorry for the

00:29:53,810 --> 00:29:57,230
messages which I'm sending into the room

00:29:55,610 --> 00:30:01,360
and hopefully everybody else has the

00:29:57,230 --> 00:30:01,360
same ratchet so they can decrypt easy

00:30:01,810 --> 00:30:06,679
sorry

00:30:04,120 --> 00:30:10,669
so when somebody joins a room is the

00:30:06,679 --> 00:30:13,039
question there and this is where it

00:30:10,669 --> 00:30:15,799
becomes not easy and there's a whole

00:30:13,039 --> 00:30:17,360
bunch of slides on the whole problem of

00:30:15,799 --> 00:30:18,830
what do you do when somebody answered

00:30:17,360 --> 00:30:20,630
device into a room because it's not a

00:30:18,830 --> 00:30:22,100
person joining a room they're actually

00:30:20,630 --> 00:30:23,929
they could just be adding a new device

00:30:22,100 --> 00:30:28,460
hood and well how about I just show you

00:30:23,929 --> 00:30:30,260
so let's get back to riot and this is

00:30:28,460 --> 00:30:32,480
the right one I go into our big test

00:30:30,260 --> 00:30:37,789
room which is called mega arm test this

00:30:32,480 --> 00:30:40,789
one has got 127 users in it right now

00:30:37,789 --> 00:30:42,230
and and I haven't actually validated any

00:30:40,789 --> 00:30:43,880
of their identities you can see it's

00:30:42,230 --> 00:30:46,010
working pretty well I can go and receive

00:30:43,880 --> 00:30:47,570
all of these messages if I scroll back

00:30:46,010 --> 00:30:49,399
far enough you'll probably see some of

00:30:47,570 --> 00:30:51,919
the bugs which we've been chasing in the

00:30:49,399 --> 00:30:54,559
last couple of months but so far it's

00:30:51,919 --> 00:30:56,990
just fairly inane test wrap ironically

00:30:54,559 --> 00:30:59,299
it's working perfectly now great things

00:30:56,990 --> 00:31:00,590
never break when you want them to and so

00:30:59,299 --> 00:31:03,020
there's a mega ohm test which was

00:31:00,590 --> 00:31:07,669
working there now if I went and send a

00:31:03,020 --> 00:31:10,370
message in here ah brilliant example so

00:31:07,669 --> 00:31:12,590
room contains unknown devices so since I

00:31:10,370 --> 00:31:14,149
last sent a message in here some days

00:31:12,590 --> 00:31:15,919
added a device which makes sense because

00:31:14,149 --> 00:31:18,020
there are over a thousand devices in the

00:31:15,919 --> 00:31:20,210
room and so I get this dialog popping up

00:31:18,020 --> 00:31:22,039
saying whether this room contains on own

00:31:20,210 --> 00:31:23,600
devices have not been verified no

00:31:22,039 --> 00:31:25,429
guarantee that they actually belonged to

00:31:23,600 --> 00:31:28,700
the users you might want to go and

00:31:25,429 --> 00:31:30,679
verify them so I got one from there I've

00:31:28,700 --> 00:31:32,899
got one from myself where I've logged in

00:31:30,679 --> 00:31:34,429
in an incognito tab and you can see the

00:31:32,899 --> 00:31:36,409
names of the devices here are the URLs

00:31:34,429 --> 00:31:39,440
and the browsers and the OS is being

00:31:36,409 --> 00:31:41,779
used so one of the things we're missing

00:31:39,440 --> 00:31:44,270
now is the good UX for verification so

00:31:41,779 --> 00:31:46,340
if I say oh hang on a second I wonder

00:31:44,270 --> 00:31:48,049
over that is Simon if only he was in the

00:31:46,340 --> 00:31:50,240
room and I could ask him in person to

00:31:48,049 --> 00:31:52,100
compare his public fingerprint keys now

00:31:50,240 --> 00:31:54,080
at the moment depressingly if I hit the

00:31:52,100 --> 00:31:56,120
verify button that's precisely what

00:31:54,080 --> 00:31:57,860
happens we do have this disclaimer at

00:31:56,120 --> 00:31:59,929
the bottom saying in future this will be

00:31:57,860 --> 00:32:02,179
much more sophisticated but right now I

00:31:59,929 --> 00:32:05,539
would say hey Simon you know your device

00:32:02,179 --> 00:32:08,570
psi HD DL QEP don't suppose the public

00:32:05,539 --> 00:32:10,399
key fingerprints is capital o capital m

00:32:08,570 --> 00:32:12,110
capital u and so on and so forth

00:32:10,399 --> 00:32:14,929
obviously we should be doing this with a

00:32:12,110 --> 00:32:15,870
mnemonic we should be using a QR code we

00:32:14,929 --> 00:32:18,510
should be

00:32:15,870 --> 00:32:20,820
hashing it down to a smaller amount or

00:32:18,510 --> 00:32:23,490
whatever we just haven't done it yet

00:32:20,820 --> 00:32:25,170
this dialogue itself is on me or at

00:32:23,490 --> 00:32:28,320
least this dialogue the one we were on

00:32:25,170 --> 00:32:30,300
before is relatively new as of yesterday

00:32:28,320 --> 00:32:32,360
so that gives you an idea of where we

00:32:30,300 --> 00:32:36,000
are in the rollout on the other hand if

00:32:32,360 --> 00:32:37,860
the verification failed and hang on that

00:32:36,000 --> 00:32:39,150
you didn't have that device at all then

00:32:37,860 --> 00:32:41,700
a lovely thing I can do is literally

00:32:39,150 --> 00:32:43,920
just hit the bat list not that hard hit

00:32:41,700 --> 00:32:45,780
the blacklist button at which point when

00:32:43,920 --> 00:32:47,730
I neck this is now telling my client

00:32:45,780 --> 00:32:49,290
never to set up a one-to-one session

00:32:47,730 --> 00:32:51,210
with his device and that device will

00:32:49,290 --> 00:32:53,400
never receive the message and you can do

00:32:51,210 --> 00:32:55,860
this on a per room basis which is kind

00:32:53,400 --> 00:32:57,120
of fun because finally solves the

00:32:55,860 --> 00:32:59,070
problem that if you're talking to

00:32:57,120 --> 00:33:03,120
somebody and they have a iPhone and an

00:32:59,070 --> 00:33:05,100
iPad and no public PC they left logged

00:33:03,120 --> 00:33:07,200
in it's a cyber cafe even if they're an

00:33:05,100 --> 00:33:09,330
easier with our information security you

00:33:07,200 --> 00:33:10,980
have the option to say hang on I just

00:33:09,330 --> 00:33:12,660
want to send this to their phone oh I

00:33:10,980 --> 00:33:14,370
just want to send it to the iPad on the

00:33:12,660 --> 00:33:15,350
sofa that the kids can see or whatever

00:33:14,370 --> 00:33:19,860
it might happen to be

00:33:15,350 --> 00:33:23,100
so let me unblock this them yes yeah

00:33:19,860 --> 00:33:26,160
yeah so if I then go and look at Simon

00:33:23,100 --> 00:33:27,660
here in the members list I can see the

00:33:26,160 --> 00:33:29,070
same list of devices that he has here

00:33:27,660 --> 00:33:31,020
and I can actually just go through

00:33:29,070 --> 00:33:33,059
saying I never want to talk to you ever

00:33:31,020 --> 00:33:35,940
ever again

00:33:33,059 --> 00:33:37,770
but luckily am at the moment this is

00:33:35,940 --> 00:33:39,510
just personal data and in fact it's even

00:33:37,770 --> 00:33:41,090
done on a pair device basis which is

00:33:39,510 --> 00:33:43,920
something we're struggling a bit with

00:33:41,090 --> 00:33:46,050
because obviously and you can have some

00:33:43,920 --> 00:33:48,030
interesting security issues

00:33:46,050 --> 00:33:49,740
if you trust a server to be

00:33:48,030 --> 00:33:51,390
synchronizing the blacklist information

00:33:49,740 --> 00:33:54,420
so at the moment we're just doing it per

00:33:51,390 --> 00:33:57,179
device and if you actually look at the

00:33:54,420 --> 00:33:59,940
messages oh and also critically it

00:33:57,179 --> 00:34:02,340
queued my message here so even after all

00:33:59,940 --> 00:34:05,309
that it needs to be damn sure that this

00:34:02,340 --> 00:34:06,630
is actually the message but I want to

00:34:05,309 --> 00:34:08,700
send to the room so it's this sounds

00:34:06,630 --> 00:34:11,070
like a hit cancel or I can hit Send and

00:34:08,700 --> 00:34:12,570
if I hit Send then it will go free

00:34:11,070 --> 00:34:14,730
setting up new sessions with everybody

00:34:12,570 --> 00:34:16,770
and send out now cancel it for now but

00:34:14,730 --> 00:34:18,780
let's look at reality gaps one the

00:34:16,770 --> 00:34:20,850
decrypted source is not very exciting

00:34:18,780 --> 00:34:23,070
it's literally just going to be mega

00:34:20,850 --> 00:34:25,820
home tests from Johnson but if we look

00:34:23,070 --> 00:34:25,820
at the

00:34:26,320 --> 00:34:31,210
original stuff is this beautiful thing

00:34:28,510 --> 00:34:33,280
which has just got the public key of the

00:34:31,210 --> 00:34:36,370
device he was sending from we've got the

00:34:33,280 --> 00:34:41,760
cipher text which is basics t4 AES

00:34:36,370 --> 00:34:45,310
encoded chunk of the JSON feeds with the

00:34:41,760 --> 00:34:47,530
the ratchet state that matches the

00:34:45,310 --> 00:34:49,450
session ID which is the public key of

00:34:47,530 --> 00:34:52,630
his particular extra that he's sending

00:34:49,450 --> 00:34:55,540
to me so basically it's there and it

00:34:52,630 --> 00:34:57,900
works and it scales up let's go back to

00:34:55,540 --> 00:35:00,820
the slides and see where we go from here

00:34:57,900 --> 00:35:03,430
so we're using elliptic curve 2 5 online

00:35:00,820 --> 00:35:05,620
keys key pairs get generated at login

00:35:03,430 --> 00:35:07,180
time obviously the private ones get

00:35:05,620 --> 00:35:10,630
stored on the device

00:35:07,180 --> 00:35:12,190
this is a bit of a problem on on the web

00:35:10,630 --> 00:35:14,110
where there isn't a good place to store

00:35:12,190 --> 00:35:16,090
your keys so at the moment we store them

00:35:14,110 --> 00:35:18,190
on local storage which is obviously not

00:35:16,090 --> 00:35:20,830
ideal it's somebody can do an exercise

00:35:18,190 --> 00:35:23,920
to tack another question yes a history

00:35:20,830 --> 00:35:28,810
store can I add for the history offline

00:35:23,920 --> 00:35:31,180
or is it yep so if you're joining a room

00:35:28,810 --> 00:35:34,450
and it's the question there was some can

00:35:31,180 --> 00:35:36,700
you access history offline and yes you

00:35:34,450 --> 00:35:40,330
can absolutely access it offline and at

00:35:36,700 --> 00:35:41,950
the moment right does stuff offline if

00:35:40,330 --> 00:35:43,360
it loaded it from the surfer when it was

00:35:41,950 --> 00:35:46,120
online but we're just changing it to

00:35:43,360 --> 00:35:48,640
store it properly on locally using

00:35:46,120 --> 00:35:51,010
indexeddb and you store all of the

00:35:48,640 --> 00:35:52,270
session keys in your local storage so

00:35:51,010 --> 00:35:53,980
that you can then read decrypt so

00:35:52,270 --> 00:35:55,840
afterwards and if you add a new device

00:35:53,980 --> 00:35:57,640
into the room at the moment you have to

00:35:55,840 --> 00:35:59,650
export the keys and import them onto the

00:35:57,640 --> 00:36:01,270
new device but in the relatively near

00:35:59,650 --> 00:36:03,240
future you'll also be able to

00:36:01,270 --> 00:36:06,750
automatically share the keys over

00:36:03,240 --> 00:36:06,750
another quick question

00:36:11,630 --> 00:36:16,260
so the question is how long to be

00:36:14,580 --> 00:36:17,910
possessed messages on the matrix nodes

00:36:16,260 --> 00:36:19,680
and the answer is it's up to the guy he

00:36:17,910 --> 00:36:21,660
runs the node if I'm running my home

00:36:19,680 --> 00:36:23,610
sofa on the Raspberry Pi or on my phone

00:36:21,660 --> 00:36:25,290
I might keep a couple of tens of

00:36:23,610 --> 00:36:27,869
megabytes of messages if you're running

00:36:25,290 --> 00:36:30,630
matrix org we're currently up to 750

00:36:27,869 --> 00:36:32,310
gigabytes of messages and you can throw

00:36:30,630 --> 00:36:34,050
away old history and that's okay because

00:36:32,310 --> 00:36:36,750
it will just get back fields and

00:36:34,050 --> 00:36:38,490
resynchronized if you try to scroll back

00:36:36,750 --> 00:36:40,140
far enough so as long as one of the

00:36:38,490 --> 00:36:41,940
messages one of the server's for one of

00:36:40,140 --> 00:36:44,790
the participants in the room has the old

00:36:41,940 --> 00:36:47,130
history your phone so get back to the

00:36:44,790 --> 00:36:48,960
key management public keys are published

00:36:47,130 --> 00:36:50,610
on your home server verified by

00:36:48,960 --> 00:36:52,500
comparing public fingerprints as we just

00:36:50,610 --> 00:36:54,380
show it showed with big bold text here

00:36:52,500 --> 00:36:57,330
saying this is placeholder UX

00:36:54,380 --> 00:36:59,250
attachments took a lot of work because

00:36:57,330 --> 00:37:01,320
decrypting them client side with the

00:36:59,250 --> 00:37:03,480
corrects and security policy is a

00:37:01,320 --> 00:37:06,480
nightmare but we got it to work there

00:37:03,480 --> 00:37:09,210
using a SC TR but with an integrity hash

00:37:06,480 --> 00:37:12,150
and they get a new key for every

00:37:09,210 --> 00:37:14,430
attachment that's sent home itself we

00:37:12,150 --> 00:37:16,410
kind of already talked about it

00:37:14,430 --> 00:37:18,720
it's it's a matrix dog slash get that

00:37:16,410 --> 00:37:20,640
slash ohm we have a formal spec for it

00:37:18,720 --> 00:37:24,119
which is very important for many for

00:37:20,640 --> 00:37:25,530
ages the official double wrap from open

00:37:24,119 --> 00:37:26,700
whisper systems didn't have an official

00:37:25,530 --> 00:37:29,250
spec although they have a really good

00:37:26,700 --> 00:37:31,260
one now and this is used for one-to-one

00:37:29,250 --> 00:37:33,330
communication we chose it because it's

00:37:31,260 --> 00:37:35,280
the kind of the industry standard now

00:37:33,330 --> 00:37:37,080
and we wanted to avoid ruling out

00:37:35,280 --> 00:37:39,720
compatibility in future with what syrup

00:37:37,080 --> 00:37:41,190
and the ratchet obviously generates a

00:37:39,720 --> 00:37:44,400
non-reversible series of keys for

00:37:41,190 --> 00:37:46,500
encrypting stuff and back in February of

00:37:44,400 --> 00:37:48,630
last year literally this time last year

00:37:46,500 --> 00:37:50,820
we were encrypting each message per

00:37:48,630 --> 00:37:52,619
recipient so it's an O n squared problem

00:37:50,820 --> 00:37:54,150
there was no way to share history it

00:37:52,619 --> 00:37:56,280
worked it was a good proof of concept

00:37:54,150 --> 00:37:59,130
but it sucked I mean it's how I message

00:37:56,280 --> 00:38:01,830
does it today still and it's how many

00:37:59,130 --> 00:38:03,480
other kind of group messengers try to do

00:38:01,830 --> 00:38:06,480
it and it just doesn't scale beyond the

00:38:03,480 --> 00:38:07,650
510 devices there's a picture of a

00:38:06,480 --> 00:38:11,130
double wrap shirt which we don't have

00:38:07,650 --> 00:38:13,320
time to go through Megan however as I

00:38:11,130 --> 00:38:16,740
said Toki knew ratchet again it has a

00:38:13,320 --> 00:38:18,780
formal spec up on the matrix back and we

00:38:16,740 --> 00:38:21,510
go and maintain a session per sender for

00:38:18,780 --> 00:38:22,650
each term for each recipient called an

00:38:21,510 --> 00:38:25,470
outbound session

00:38:22,650 --> 00:38:28,499
and the big novelty actually from the

00:38:25,470 --> 00:38:30,450
cryptography on megaohm is that you can

00:38:28,499 --> 00:38:33,599
fast forward existing ratchets before

00:38:30,450 --> 00:38:35,339
you share them so if we want to seal the

00:38:33,599 --> 00:38:37,470
history of the room I can refer away my

00:38:35,339 --> 00:38:39,509
ratchets and start over again I can go

00:38:37,470 --> 00:38:41,789
and reset up one two ones with everybody

00:38:39,509 --> 00:38:43,559
in the room and then I can start

00:38:41,789 --> 00:38:45,059
encrypting over that however that's

00:38:43,559 --> 00:38:46,499
going to take ages and it's a bit

00:38:45,059 --> 00:38:46,920
inefficient and if you do it all the

00:38:46,499 --> 00:38:49,049
time

00:38:46,920 --> 00:38:51,150
we're just going to be doing nothing but

00:38:49,049 --> 00:38:52,859
key exchange so a fun thing you can do

00:38:51,150 --> 00:38:54,749
is that if a new device or a new person

00:38:52,859 --> 00:38:56,880
joins the room you can take the current

00:38:54,749 --> 00:38:59,160
one and fast forward it rapidly so they

00:38:56,880 --> 00:39:03,390
can join at the right point in time they

00:38:59,160 --> 00:39:05,910
can't go backwards that shouldn't be

00:39:03,390 --> 00:39:08,940
there so ignore that lip balms

00:39:05,910 --> 00:39:10,829
architecture diagram is basically this

00:39:08,940 --> 00:39:13,529
you got crypto primitives using IES

00:39:10,829 --> 00:39:15,630
shell t56 curve t5 focal unknown you got

00:39:13,529 --> 00:39:17,309
ratchets you go up session management

00:39:15,630 --> 00:39:19,230
account keys then you've got the megohm

00:39:17,309 --> 00:39:22,710
ratchet and then you have a C API over

00:39:19,230 --> 00:39:26,880
the top it's about 100k of 64-bit 8086

00:39:22,710 --> 00:39:29,029
and it's about 200k of SMAS and we

00:39:26,880 --> 00:39:31,980
transpile it by encryption in

00:39:29,029 --> 00:39:33,869
inscription even into JavaScript I'm

00:39:31,980 --> 00:39:37,249
using it on the web devices and we use

00:39:33,869 --> 00:39:39,329
it natively on iOS in bio J&I on android

00:39:37,249 --> 00:39:42,299
security assessment so this is a big

00:39:39,329 --> 00:39:43,589
thing that we went into got lib on the

00:39:42,299 --> 00:39:46,200
library itself with the ratchets

00:39:43,589 --> 00:39:48,660
assessed by NCC group in September of

00:39:46,200 --> 00:39:51,210
last year this is critical because we've

00:39:48,660 --> 00:39:53,220
done the schoolboy error if inventing or

00:39:51,210 --> 00:39:55,200
not inventing of implementing our own

00:39:53,220 --> 00:39:56,730
 so so it was absolutely critical

00:39:55,200 --> 00:39:58,950
that we had a proper professional

00:39:56,730 --> 00:39:59,910
independent audit we even got it

00:39:58,950 --> 00:40:02,130
released to the public

00:39:59,910 --> 00:40:04,470
unlike many of the other ones out there

00:40:02,130 --> 00:40:06,269
and so if you're interested in seeing

00:40:04,470 --> 00:40:07,950
all of the interesting problems that we

00:40:06,269 --> 00:40:10,019
had and all the things they found I do

00:40:07,950 --> 00:40:14,609
recommend going and reading the NCC

00:40:10,019 --> 00:40:16,920
group public assessment of the bomb at

00:40:14,609 --> 00:40:18,509
the ohm level they were too low risk and

00:40:16,920 --> 00:40:20,880
one information or findings which was

00:40:18,509 --> 00:40:23,369
pretty good megohm predictably was a bit

00:40:20,880 --> 00:40:25,680
more controversial with one high which

00:40:23,369 --> 00:40:27,869
has an unknown key share attack one

00:40:25,680 --> 00:40:29,309
medium and for low risk an interesting

00:40:27,869 --> 00:40:31,140
problem we had is that three of the

00:40:29,309 --> 00:40:32,910
findings they found though were actually

00:40:31,140 --> 00:40:35,980
features and that they said hang on a

00:40:32,910 --> 00:40:37,630
minute you can use this to break PFS

00:40:35,980 --> 00:40:39,430
isn't PFS and we said well yeah one of

00:40:37,630 --> 00:40:41,380
the cool things about it is if you want

00:40:39,430 --> 00:40:43,930
to turn off PFS you can they said well

00:40:41,380 --> 00:40:46,450
technically that's a vulnerability so

00:40:43,930 --> 00:40:49,210
three of the issues there are abilities

00:40:46,450 --> 00:40:51,369
with back form we fix everything

00:40:49,210 --> 00:40:53,590
obviously and since the audit we haven't

00:40:51,369 --> 00:40:55,630
found any more issues so that was a

00:40:53,590 --> 00:40:57,640
really really fun thing and I highly

00:40:55,630 --> 00:41:00,550
recommend working with NCC group if you

00:40:57,640 --> 00:41:03,540
want to do something like that for your

00:41:00,550 --> 00:41:05,740
own crypto we've already demoed it

00:41:03,540 --> 00:41:07,840
however we've had a couple of problems

00:41:05,740 --> 00:41:09,430
along the way the big one is that we

00:41:07,840 --> 00:41:11,200
spent ages obsessing about the rapture

00:41:09,430 --> 00:41:13,210
implementation and getting it all to

00:41:11,200 --> 00:41:14,770
serve to making sure it didn't suck and

00:41:13,210 --> 00:41:17,020
if anything we probably focused too much

00:41:14,770 --> 00:41:18,940
but it turns out that the problem of

00:41:17,020 --> 00:41:21,340
what happens when a device joins a room

00:41:18,940 --> 00:41:23,740
and all of the reliable and efficient

00:41:21,340 --> 00:41:25,270
synchronizing of the megohm state over a

00:41:23,740 --> 00:41:28,270
federated system particularly like

00:41:25,270 --> 00:41:29,619
matrix is really non-trivial and it

00:41:28,270 --> 00:41:32,109
turns out that it's about two or three

00:41:29,619 --> 00:41:34,090
times more code than the actual ratchet

00:41:32,109 --> 00:41:35,980
and in some ways it's a lot more fiddly

00:41:34,090 --> 00:41:38,800
in order to actually get some things

00:41:35,980 --> 00:41:40,300
secure and right so you have to know

00:41:38,800 --> 00:41:42,700
precisely what devices are in the room

00:41:40,300 --> 00:41:44,619
you need to ensure that your ratchet has

00:41:42,700 --> 00:41:46,660
been shared with them and it turns out

00:41:44,619 --> 00:41:47,740
the scope for races here is just

00:41:46,660 --> 00:41:49,960
spectacular

00:41:47,740 --> 00:41:52,630
I mean even that sentence itself here is

00:41:49,960 --> 00:41:54,700
basically racy in terms of at what point

00:41:52,630 --> 00:41:56,740
you decide whether you've what devices

00:41:54,700 --> 00:41:58,420
are in a room and you send a message and

00:41:56,740 --> 00:42:00,130
meanwhile some guy goes and adds a new

00:41:58,420 --> 00:42:01,240
device in most it sending it and they're

00:42:00,130 --> 00:42:02,410
never going to get the state and they're

00:42:01,240 --> 00:42:03,790
never going to be able to decrypt it and

00:42:02,410 --> 00:42:06,070
they're going to send your hate mail say

00:42:03,790 --> 00:42:07,750
well I can't decrypt that message so

00:42:06,070 --> 00:42:09,850
honestly the last two or three months

00:42:07,750 --> 00:42:11,320
have been chasing around these and it's

00:42:09,850 --> 00:42:13,960
one of the nastiest bugs I have ever

00:42:11,320 --> 00:42:15,880
seen because the symptoms are always the

00:42:13,960 --> 00:42:18,460
same somebody can't decrypt a message

00:42:15,880 --> 00:42:21,310
and it says unknown inbound session ID

00:42:18,460 --> 00:42:23,140
and so we get poke reports and rates of

00:42:21,310 --> 00:42:25,869
about every half an hour with somebody

00:42:23,140 --> 00:42:27,850
saying oh I got the bug of course

00:42:25,869 --> 00:42:29,320
they're about twenty different races of

00:42:27,850 --> 00:42:30,960
different incarnations and flavors that

00:42:29,320 --> 00:42:34,090
can result in that state not being

00:42:30,960 --> 00:42:35,859
shared correctly on the plus side we've

00:42:34,090 --> 00:42:37,510
hopefully identified them all and we've

00:42:35,859 --> 00:42:39,280
almost fixed all of them we did the

00:42:37,510 --> 00:42:40,600
release yesterday which we hoped would

00:42:39,280 --> 00:42:43,300
finish up the remaining ones and

00:42:40,600 --> 00:42:45,190
predictably enough we got one of the we

00:42:43,300 --> 00:42:47,320
got a key share fail but we're very very

00:42:45,190 --> 00:42:48,600
close to wrapping it up at which point

00:42:47,320 --> 00:42:50,400
we'll get it auditor

00:42:48,600 --> 00:42:53,220
and it will be able to beat it another

00:42:50,400 --> 00:42:55,140
interesting problem here is we went and

00:42:53,220 --> 00:43:00,060
coupled the implementation to the client

00:42:55,140 --> 00:43:02,070
SDK because necessarily the key exchange

00:43:00,060 --> 00:43:06,090
stuff is talking to your server to say

00:43:02,070 --> 00:43:07,890
hey here are my keys and you know what

00:43:06,090 --> 00:43:11,100
Keys server for the devices in the room

00:43:07,890 --> 00:43:12,990
and this was a bit of a disaster because

00:43:11,100 --> 00:43:14,340
we implemented it in the client-side

00:43:12,990 --> 00:43:16,350
code which means that you have three

00:43:14,340 --> 00:43:18,480
completely separate implementations and

00:43:16,350 --> 00:43:20,520
Java Script Objective C in Java for

00:43:18,480 --> 00:43:21,480
precisely the same logic so now I need

00:43:20,520 --> 00:43:23,250
to be have some of these nasty

00:43:21,480 --> 00:43:23,580
architecture or erase problems to deal

00:43:23,250 --> 00:43:25,200
with

00:43:23,580 --> 00:43:27,330
we're also constantly porting the bug

00:43:25,200 --> 00:43:28,740
fixes between the free platforms so

00:43:27,330 --> 00:43:30,540
there's definitely some kind of learning

00:43:28,740 --> 00:43:32,610
there and I'm not entirely sure what it

00:43:30,540 --> 00:43:34,560
is because we could push it into a

00:43:32,610 --> 00:43:36,270
native library like the Ranchod itself

00:43:34,560 --> 00:43:38,580
but then we're going to have to expose

00:43:36,270 --> 00:43:41,310
all of these different api's back and

00:43:38,580 --> 00:43:42,390
forth to talk to the server and I'm not

00:43:41,310 --> 00:43:43,950
convinced that it's going to be any

00:43:42,390 --> 00:43:46,620
nicer than having to implement it three

00:43:43,950 --> 00:43:48,300
different times who knows design

00:43:46,620 --> 00:43:50,610
problems we also have an interesting

00:43:48,300 --> 00:43:52,770
nagging concern that megohm may be over

00:43:50,610 --> 00:43:54,870
engineered in the you end up generating

00:43:52,770 --> 00:43:57,390
a lot of these session keys and

00:43:54,870 --> 00:43:59,970
critically if you want to do the offline

00:43:57,390 --> 00:44:01,680
replay or if you want to share it with

00:43:59,970 --> 00:44:04,080
new people that means you have to keep

00:44:01,680 --> 00:44:06,090
all of these key sessions so it's not a

00:44:04,080 --> 00:44:09,360
keeper message it's a keeper end

00:44:06,090 --> 00:44:11,220
messages or per session but still I'm up

00:44:09,360 --> 00:44:14,850
to about three megabytes of key data in

00:44:11,220 --> 00:44:17,160
my local storage now on my Chrome and

00:44:14,850 --> 00:44:18,960
that's over a couple of months which

00:44:17,160 --> 00:44:20,310
doesn't feel very scalable plus sites

00:44:18,960 --> 00:44:22,200
and local storage and you have a limit

00:44:20,310 --> 00:44:25,140
of only 10 20 megabytes and local

00:44:22,200 --> 00:44:27,840
storage anyway so it's it's feeling a

00:44:25,140 --> 00:44:29,340
little bit um unwieldy there and they'll

00:44:27,840 --> 00:44:31,500
be talking about do we put them on the

00:44:29,340 --> 00:44:33,120
server but that also feels a bit dodge

00:44:31,500 --> 00:44:34,560
that you're taking key data for

00:44:33,120 --> 00:44:35,850
end-to-end encryption putting a

00:44:34,560 --> 00:44:37,800
passphrase on it and then putting it

00:44:35,850 --> 00:44:39,870
back on the server when it kind of works

00:44:37,800 --> 00:44:43,680
but again we need to think a lot more

00:44:39,870 --> 00:44:45,300
about that there's also the question of

00:44:43,680 --> 00:44:47,130
whether the funky fast forwarding is

00:44:45,300 --> 00:44:49,560
actually worthwhile because we have so

00:44:47,130 --> 00:44:51,270
many sessions anyway why why not just go

00:44:49,560 --> 00:44:54,180
and create another one when I want to

00:44:51,270 --> 00:44:56,160
invite somebody to a room basically

00:44:54,180 --> 00:44:58,590
where we're at right now is to see how

00:44:56,160 --> 00:45:00,440
well it works and soon how often we

00:44:58,590 --> 00:45:03,079
create new sessions and then

00:45:00,440 --> 00:45:05,150
we might go back and redesign it a bit

00:45:03,079 --> 00:45:06,859
and obviously at the matrix layer its

00:45:05,150 --> 00:45:09,950
pluggable so you can keep evolving the

00:45:06,859 --> 00:45:12,319
ratchet and the algorithm is required so

00:45:09,950 --> 00:45:14,240
in terms of our goals can we do shade

00:45:12,319 --> 00:45:15,800
off between privacy and usability yes we

00:45:14,240 --> 00:45:17,660
can in the protocol but we haven't

00:45:15,800 --> 00:45:19,400
exposed that in the clients ear we

00:45:17,660 --> 00:45:21,829
continue the encryption per device we

00:45:19,400 --> 00:45:23,750
can do big rooms we will encrypt

00:45:21,829 --> 00:45:27,130
non-public rooms by default once around

00:45:23,750 --> 00:45:29,359
2 beta and we will be supporting on all

00:45:27,130 --> 00:45:30,859
matrix clients and the way we're

00:45:29,359 --> 00:45:32,869
thinking of doing that is to actually

00:45:30,859 --> 00:45:34,339
write an end-to-end proxy so if you have

00:45:32,869 --> 00:45:35,900
one of the other random clients out

00:45:34,339 --> 00:45:37,550
there you don't understand a couple of

00:45:35,900 --> 00:45:39,410
months adding into end encryption to it

00:45:37,550 --> 00:45:41,720
you can just reach it through a proxy

00:45:39,410 --> 00:45:44,990
that you run on localhost in order to go

00:45:41,720 --> 00:45:47,990
and turn it into the end-to-end finally

00:45:44,990 --> 00:45:50,540
quickly metadata privacy matrix does not

00:45:47,990 --> 00:45:53,119
protect metadata currently so if you

00:45:50,540 --> 00:45:56,150
want to be private about who you talk to

00:45:53,119 --> 00:45:57,770
and when ignoring the contents for the

00:45:56,150 --> 00:46:00,530
metadata then look at something like

00:45:57,770 --> 00:46:02,390
ricochet or vuvuzela the reason for this

00:46:00,530 --> 00:46:04,040
is that protecting metadata is basically

00:46:02,390 --> 00:46:05,450
incompatible with bridging and the

00:46:04,040 --> 00:46:07,369
entire architecture at the moment

00:46:05,450 --> 00:46:09,859
assumes that the server's can see the

00:46:07,369 --> 00:46:11,720
metadata however we have done a thought

00:46:09,859 --> 00:46:13,430
experiment for future and hopefully

00:46:11,720 --> 00:46:14,990
somebody will help us build this where

00:46:13,430 --> 00:46:16,400
if you run the Home Server client side

00:46:14,990 --> 00:46:17,930
and he tunneled the traffic over

00:46:16,400 --> 00:46:19,700
something like tour and he years

00:46:17,930 --> 00:46:22,160
anonymous store-and-forward servers like

00:46:19,700 --> 00:46:23,720
pond then you might be able to protect

00:46:22,160 --> 00:46:25,819
that metadata and the kind of

00:46:23,720 --> 00:46:27,530
architecture looks like this in that our

00:46:25,819 --> 00:46:29,839
blue home servers are now running on

00:46:27,530 --> 00:46:31,609
your green client and the actual client

00:46:29,839 --> 00:46:33,680
app is the same and this is really fun

00:46:31,609 --> 00:46:35,359
because the client can be identical to

00:46:33,680 --> 00:46:36,950
what you have today so this is still

00:46:35,359 --> 00:46:38,540
riots it's still weird traffic's still

00:46:36,950 --> 00:46:39,980
nature app whatever but it's just

00:46:38,540 --> 00:46:42,410
happening to talk to a home server

00:46:39,980 --> 00:46:43,940
that's running client-side and then if

00:46:42,410 --> 00:46:45,050
somebody wants to send a message they

00:46:43,940 --> 00:46:47,000
were going to send it to a hidden

00:46:45,050 --> 00:46:48,560
service on tour which would act as a

00:46:47,000 --> 00:46:50,480
store and forward thing to send it out

00:46:48,560 --> 00:46:51,950
for another hidden service at which

00:46:50,480 --> 00:46:54,079
point the metadata is going to be

00:46:51,950 --> 00:46:55,609
exposed only on the client and in here

00:46:54,079 --> 00:46:59,780
it's going to be a one great big nice

00:46:55,609 --> 00:47:01,280
blob of anonymity in sci-fi if somebody

00:46:59,780 --> 00:47:05,900
wants to build one of those please do

00:47:01,280 --> 00:47:07,310
and latest release the one that we

00:47:05,900 --> 00:47:09,109
released today which was actually

00:47:07,310 --> 00:47:11,300
yesterday not that I wrote this

00:47:09,109 --> 00:47:13,340
yesterday gives

00:47:11,300 --> 00:47:15,560
a warning when you get unknown devices

00:47:13,340 --> 00:47:18,230
that we saw ability to blacklist backup

00:47:15,560 --> 00:47:20,030
and import is a big deal and also raid

00:47:18,230 --> 00:47:21,620
shake bug reporting which will go and

00:47:20,030 --> 00:47:23,780
dump all of your JavaScript logs to us

00:47:21,620 --> 00:47:27,020
so we can work out why you got your an

00:47:23,780 --> 00:47:29,120
unknown inbound at session ID mobile

00:47:27,020 --> 00:47:30,590
apps are catching up soon they're a bit

00:47:29,120 --> 00:47:32,270
more buggy but the crypto still there

00:47:30,590 --> 00:47:33,860
and in practice it works fine as long as

00:47:32,270 --> 00:47:37,490
you don't have lots of people joining

00:47:33,860 --> 00:47:39,080
and leaving what's next on own we kind

00:47:37,490 --> 00:47:40,760
of touched on it already it's the

00:47:39,080 --> 00:47:42,950
ability to share actual data with new

00:47:40,760 --> 00:47:44,780
devices cross signing perhaps to ease

00:47:42,950 --> 00:47:47,330
verification better a verification

00:47:44,780 --> 00:47:49,220
full-stop push notifications are a bit

00:47:47,330 --> 00:47:51,460
broken on end-to-end we need better

00:47:49,220 --> 00:47:54,050
primitives and performance we're using

00:47:51,460 --> 00:47:56,720
we're not using web crypto yet we're

00:47:54,050 --> 00:47:58,490
using in scripts and compiled to native

00:47:56,720 --> 00:48:00,680
primitives on JavaScript which is a

00:47:58,490 --> 00:48:02,300
major security nono we obviously need to

00:48:00,680 --> 00:48:04,520
get it audited we want to turn it on by

00:48:02,300 --> 00:48:06,710
default and we want to have some kind of

00:48:04,520 --> 00:48:08,870
way of negotiating sensibly with clients

00:48:06,710 --> 00:48:10,400
that just can't speak it at all or

00:48:08,870 --> 00:48:13,190
matrix Oh

00:48:10,400 --> 00:48:15,650
threading bridges tagging ATL's file

00:48:13,190 --> 00:48:17,930
management and then decentralized with

00:48:15,650 --> 00:48:19,400
identity and spam which is increasing

00:48:17,930 --> 00:48:21,740
problem which I gave a talk about this

00:48:19,400 --> 00:48:23,090
morning sorry if you didn't make it it

00:48:21,740 --> 00:48:24,890
will be published though by folsom of

00:48:23,090 --> 00:48:27,410
course with all the other ones we need

00:48:24,890 --> 00:48:29,990
help really we need help from everybody

00:48:27,410 --> 00:48:32,210
here please run your own servers please

00:48:29,990 --> 00:48:33,890
run gateways please write gateways tell

00:48:32,210 --> 00:48:35,750
us where it sucks if you're writing a

00:48:33,890 --> 00:48:38,570
new app please don't create yes another

00:48:35,750 --> 00:48:41,090
proprietary HTTP API for messaging go

00:48:38,570 --> 00:48:43,040
and consider using matrix or XMPP or

00:48:41,090 --> 00:48:45,560
anything rather than reinventing the

00:48:43,040 --> 00:48:48,590
wheel and please follow us on Twitter

00:48:45,560 --> 00:48:50,980
and tell your friends and family thank

00:48:48,590 --> 00:48:50,980
you very much

00:48:59,130 --> 00:49:04,199
I think I have one minute for any more

00:49:02,069 --> 00:49:07,949
questions and I've got 10 minutes to

00:49:04,199 --> 00:49:11,989
burn Wow bonus oh okay so anybody got

00:49:07,949 --> 00:49:11,989
any other questions we have a question

00:49:15,349 --> 00:49:20,549
hi a very simple question thanks for the

00:49:18,299 --> 00:49:23,130
talk it was great contact list

00:49:20,549 --> 00:49:26,039
management so the question there is

00:49:23,130 --> 00:49:28,019
contact lists as the things I mean and

00:49:26,039 --> 00:49:30,869
all that you know I've been pidgin in

00:49:28,019 --> 00:49:31,979
all that just to kind of thing it's

00:49:30,869 --> 00:49:34,559
something that a lot of people feel is

00:49:31,979 --> 00:49:37,019
missing we have it in the protocol we

00:49:34,559 --> 00:49:38,670
have the concept of presence lists which

00:49:37,019 --> 00:49:39,359
allow you to subscribe to the presence

00:49:38,670 --> 00:49:41,279
of other people

00:49:39,359 --> 00:49:42,989
none of the literary none of the clients

00:49:41,279 --> 00:49:44,759
actually implement it because in

00:49:42,989 --> 00:49:48,119
practice people haven't felt much to

00:49:44,759 --> 00:49:50,099
manage for it but it's something that we

00:49:48,119 --> 00:49:51,299
will probably add on the mobile versions

00:49:50,099 --> 00:49:53,279
of riots where it makes more sense

00:49:51,299 --> 00:49:56,420
because you can steal the address book

00:49:53,279 --> 00:49:58,680
off the phone and use that as the roster

00:49:56,420 --> 00:50:01,529
are the slides available

00:49:58,680 --> 00:50:03,420
yes I'll be publishing the slides I'll

00:50:01,529 --> 00:50:05,249
put them into matrix HQ in a few minutes

00:50:03,420 --> 00:50:08,069
and we'll put them up on the blog in the

00:50:05,249 --> 00:50:12,749
near future and you have a question

00:50:08,069 --> 00:50:15,209
there oh I've seen that in dendrite a

00:50:12,749 --> 00:50:18,119
new implementation there is like kafka

00:50:15,209 --> 00:50:20,369
implementation so far and is that a new

00:50:18,119 --> 00:50:22,529
dependency that we need Java to run a

00:50:20,369 --> 00:50:24,299
matrix serve in the future godlike so

00:50:22,529 --> 00:50:26,489
the question there was do we need more

00:50:24,299 --> 00:50:28,769
dendrite be dependent on Kafka and the

00:50:26,489 --> 00:50:30,989
answer is absolutely not we're using

00:50:28,769 --> 00:50:31,680
Kafka at the moment to prove the

00:50:30,989 --> 00:50:33,449
eventbus

00:50:31,680 --> 00:50:35,009
where all of the API is an

00:50:33,449 --> 00:50:38,640
implementation deliberately call it

00:50:35,009 --> 00:50:41,279
Kafka esque because in the simplest case

00:50:38,640 --> 00:50:42,809
you adjust you use go channels within go

00:50:41,279 --> 00:50:44,699
itself in order to stitch it together

00:50:42,809 --> 00:50:46,589
and if you don't want to use Kafka and

00:50:44,699 --> 00:50:48,390
you want to use a go implementation of

00:50:46,589 --> 00:50:51,029
can't figure then that's fine too it's

00:50:48,390 --> 00:50:55,829
just very much a pluggable message bus

00:50:51,029 --> 00:50:58,259
module you you mentioned a service such

00:50:55,829 --> 00:50:59,969
service a search feature how is that

00:50:58,259 --> 00:51:02,400
compatible of us end-to-end encryption

00:50:59,969 --> 00:51:05,489
so the question is on end-to-end search

00:51:02,400 --> 00:51:07,019
what sorry on server-side search what do

00:51:05,489 --> 00:51:08,940
you do about into end there are two

00:51:07,019 --> 00:51:10,870
options you can do homomorphic

00:51:08,940 --> 00:51:13,060
encryption and try to

00:51:10,870 --> 00:51:14,980
search things on server side despite it

00:51:13,060 --> 00:51:16,810
being encrypted which we do not do

00:51:14,980 --> 00:51:21,430
there's a whole different level of

00:51:16,810 --> 00:51:23,140
complexity and the other solution for

00:51:21,430 --> 00:51:24,880
search on end-to-end is that you just do

00:51:23,140 --> 00:51:26,980
a client-side and so that's one of the

00:51:24,880 --> 00:51:28,930
reasons on riot that we're ending up

00:51:26,980 --> 00:51:31,510
storing all of your history client-side

00:51:28,930 --> 00:51:33,490
not only for offline support but also so

00:51:31,510 --> 00:51:35,500
you can just spider over it locally just

00:51:33,490 --> 00:51:37,720
like you're wrapping your IRC logs and

00:51:35,500 --> 00:51:38,950
time is up I'm afraid thank you very

00:51:37,720 --> 00:51:47,560
much everybody

00:51:38,950 --> 00:51:47,560

YouTube URL: https://www.youtube.com/watch?v=-ofZMnKkp_Y


