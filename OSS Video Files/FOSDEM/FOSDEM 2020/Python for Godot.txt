Title: Python for Godot
Publication date: 2020-07-16
Playlist: FOSDEM 2020
Description: 
	by Emmanuel Leblond

At: FOSDEM 2020
https://video.fosdem.org/2020/K.3.201/gamedev_python_for_godot.webm

Godot is an incredible open source game engine. Among it key features, it comes packed with a script language called GDscript and loosely based on Python.
But could it be even better ? Could we use the real Python to code our game on Godot ?


And maybe even more important, is it really a good idea ?
Godot is an advanced, feature-packed, multi-platform 2D and 3D open source game engine.
The project has joined the Software Freedom Conservancy project and it growing community makes it hopes to become a real alternative to Unity&amp;GameMaker.


This talk present the Godot-Python project aiming at bringing Python as a fully integrated language into Godot.


We will have a look at Godotâ€™s internal architecture as is it itself a real interpreter with it garbage collector, dynamic typing, introspection and even builtin custom scripting language.
All of this having to work next to our Python interpreter and communicate back and forth with it.


We will then dig into Godot-Python design choices, both past and current, this project came through a looot of errors and trials ;-)


Finally we will discuss the pros and cons about using Python as a script language for Godot vs the traditional GDscript.


The audience should have some basic knowledge of C level computing (static vs dynamic language, compilation &amp; linking).

Room: K.3.201
Scheduled start: 2020-02-01 09:45:00
Captions: 
	00:00:05,279 --> 00:00:10,080
there we go

00:00:06,799 --> 00:00:13,519
so thank you everyone for being here all

00:00:10,080 --> 00:00:15,920
right on time uh

00:00:13,519 --> 00:00:17,760
today i'd like to talk to you about the

00:00:15,920 --> 00:00:20,560
goddard game engine

00:00:17,760 --> 00:00:21,840
and python and why the two can really

00:00:20,560 --> 00:00:26,800
get along

00:00:21,840 --> 00:00:30,560
nicely my name is emmanuel by the way

00:00:26,800 --> 00:00:33,760
i'm french maybe you heard my accent so

00:00:30,560 --> 00:00:36,800
what is godot i guess most of you

00:00:33,760 --> 00:00:38,160
know about godhat maybe people who don't

00:00:36,800 --> 00:00:41,200
know

00:00:38,160 --> 00:00:43,600
okay so i can skip this slide

00:00:41,200 --> 00:00:44,239
oh yeah really fast godot is a

00:00:43,600 --> 00:00:47,680
incredible

00:00:44,239 --> 00:00:50,239
game engine fully open source which

00:00:47,680 --> 00:00:51,199
ships to plenty of platform mobile web

00:00:50,239 --> 00:00:55,680
etc

00:00:51,199 --> 00:00:55,680
there is a 2d 3d graphic

00:00:56,840 --> 00:01:01,600
um

00:00:58,480 --> 00:01:03,440
sorry physical engine uh

00:01:01,600 --> 00:01:05,199
you can export you can do plenty of

00:01:03,440 --> 00:01:08,479
thing basically it's

00:01:05,199 --> 00:01:12,479
the best game in china ever except

00:01:08,479 --> 00:01:15,520
one or two like you know unity and

00:01:12,479 --> 00:01:19,119
unreal and all the others but whatever

00:01:15,520 --> 00:01:26,080
so what can we do with godot

00:01:19,119 --> 00:01:29,680
ah sorry

00:01:26,080 --> 00:01:32,799
there is so

00:01:29,680 --> 00:01:33,840
if you if you're not familiar with uh

00:01:32,799 --> 00:01:36,479
you can see

00:01:33,840 --> 00:01:37,439
the the game engine is both around the

00:01:36,479 --> 00:01:41,040
scenes

00:01:37,439 --> 00:01:44,320
so here we have the 2d platformer demo

00:01:41,040 --> 00:01:45,439
for gadot i want it originally to show

00:01:44,320 --> 00:01:48,399
the 3d one but

00:01:45,439 --> 00:01:50,720
basically this computer is a potato so

00:01:48,399 --> 00:01:54,479
it won't run

00:01:50,720 --> 00:01:57,119
so you can see there is here in small

00:01:54,479 --> 00:01:58,799
uh what we call the graph scene so

00:01:57,119 --> 00:01:59,759
basically our scene is made of plenty of

00:01:58,799 --> 00:02:03,360
nodes

00:01:59,759 --> 00:02:05,680
uh for instance the player is the node

00:02:03,360 --> 00:02:06,799
the the enemy or node platform and node

00:02:05,680 --> 00:02:09,679
everything is not

00:02:06,799 --> 00:02:10,479
so you can from here from here edit all

00:02:09,679 --> 00:02:13,599
your thing

00:02:10,479 --> 00:02:15,200
you can uh look from here yeah

00:02:13,599 --> 00:02:17,280
the resolution is really small so you

00:02:15,200 --> 00:02:19,920
can see anything but just trust me

00:02:17,280 --> 00:02:21,040
you can edit plenty of things from your

00:02:19,920 --> 00:02:23,200
game engine

00:02:21,040 --> 00:02:24,319
and then when you're ready you can just

00:02:23,200 --> 00:02:27,599
press one

00:02:24,319 --> 00:02:30,239
one key and then you can start playing

00:02:27,599 --> 00:02:30,959
you can start tweaking you can send like

00:02:30,239 --> 00:02:33,360
this thing

00:02:30,959 --> 00:02:34,480
on your mobile phone to debug remotely

00:02:33,360 --> 00:02:36,879
etc so

00:02:34,480 --> 00:02:38,720
there's plenty of things you can do uh

00:02:36,879 --> 00:02:41,040
one really cool feature about goddard

00:02:38,720 --> 00:02:41,840
is the the node i was talking to you

00:02:41,040 --> 00:02:44,000
about

00:02:41,840 --> 00:02:45,280
uh sorry i can't find my cursor here it

00:02:44,000 --> 00:02:47,920
is uh the nodes

00:02:45,280 --> 00:02:50,160
they are themselves scenes so you have

00:02:47,920 --> 00:02:52,560
scenes listed inside scenes

00:02:50,160 --> 00:02:53,519
so it's really cool because it means you

00:02:52,560 --> 00:02:57,120
can

00:02:53,519 --> 00:03:00,640
just if i click here here it is you have

00:02:57,120 --> 00:03:03,840
the scene of my my enemy for instance

00:03:00,640 --> 00:03:06,159
which is here nice little guy

00:03:03,840 --> 00:03:06,879
okay so you cannot see but it has its

00:03:06,159 --> 00:03:08,879
own

00:03:06,879 --> 00:03:10,239
sym tree and so you have plenty of

00:03:08,879 --> 00:03:13,200
component like

00:03:10,239 --> 00:03:14,879
for example this guy has a animation it

00:03:13,200 --> 00:03:18,319
has a

00:03:14,879 --> 00:03:22,000
sound emitter in order to do a special

00:03:18,319 --> 00:03:24,959
specialized sound uh you have the

00:03:22,000 --> 00:03:26,319
physical hitbox etc so you have all

00:03:24,959 --> 00:03:29,280
those things uh

00:03:26,319 --> 00:03:30,080
really put nicely together inside godot

00:03:29,280 --> 00:03:33,280
and

00:03:30,080 --> 00:03:36,720
each of those nodes you can plug them

00:03:33,280 --> 00:03:37,680
script so try to click it's getting

00:03:36,720 --> 00:03:40,159
harder

00:03:37,680 --> 00:03:42,159
okay so you still can't see a thing and

00:03:40,159 --> 00:03:43,040
i cannot zoom so sorry you have to trust

00:03:42,159 --> 00:03:46,080
me

00:03:43,040 --> 00:03:46,480
uh basically these things it kind of

00:03:46,080 --> 00:03:48,319
look

00:03:46,480 --> 00:03:50,720
from where you are it kind of looks like

00:03:48,319 --> 00:03:52,560
a python it's not python it's a

00:03:50,720 --> 00:03:54,000
language called a script language called

00:03:52,560 --> 00:03:57,680
gd script it is

00:03:54,000 --> 00:04:01,680
loosely loosely based on python

00:03:57,680 --> 00:04:03,599
and from now on you may be wondering

00:04:01,680 --> 00:04:05,599
why why this language why didn't they

00:04:03,599 --> 00:04:06,159
they just took one existing language

00:04:05,599 --> 00:04:08,480
like

00:04:06,159 --> 00:04:09,280
buy some lua just a ship with the game

00:04:08,480 --> 00:04:11,439
engine

00:04:09,280 --> 00:04:14,319
it would have been much better or

00:04:11,439 --> 00:04:16,000
according to uh the bug tracker of godot

00:04:14,319 --> 00:04:17,919
there's plenty of people who think that

00:04:16,000 --> 00:04:19,440
it would have been the best idea ever

00:04:17,919 --> 00:04:22,560
and

00:04:19,440 --> 00:04:25,840
yeah spoiler alert it's not the case

00:04:22,560 --> 00:04:27,680
uh so yeah okay so the game engine is

00:04:25,840 --> 00:04:31,759
great but

00:04:27,680 --> 00:04:31,759
we're here for python right so

00:04:33,840 --> 00:04:40,400
but before python just we should

00:04:37,360 --> 00:04:42,400
just have a look at why gd script is in

00:04:40,400 --> 00:04:44,479
fact a great id

00:04:42,400 --> 00:04:46,639
and so to do that we have to just have a

00:04:44,479 --> 00:04:47,919
look at how works the nodes i was

00:04:46,639 --> 00:04:51,440
talking to you about

00:04:47,919 --> 00:04:53,840
so goto is the c plus plus game engine

00:04:51,440 --> 00:04:55,680
so every node is implemented just like a

00:04:53,840 --> 00:04:59,600
regular c plus plus class

00:04:55,680 --> 00:05:02,720
but you have a bit of additional stuff

00:04:59,600 --> 00:05:04,639
which are those things and

00:05:02,720 --> 00:05:06,240
so basically what you are what you are

00:05:04,639 --> 00:05:08,240
doing by doing these things

00:05:06,240 --> 00:05:10,880
is you are adding a runtime

00:05:08,240 --> 00:05:13,919
introspection to your class

00:05:10,880 --> 00:05:16,320
uh so what does it mean is uh you can

00:05:13,919 --> 00:05:18,639
use your class like this so this is a

00:05:16,320 --> 00:05:20,400
the c plus plus traditional boring way

00:05:18,639 --> 00:05:21,360
just like you use your new keyword you

00:05:20,400 --> 00:05:23,039
create a

00:05:21,360 --> 00:05:25,199
an instance of your class and then you

00:05:23,039 --> 00:05:28,560
just use it and you can use

00:05:25,199 --> 00:05:30,720
the fancy dynamic way so it looks like

00:05:28,560 --> 00:05:31,840
much more complicated it is it is much

00:05:30,720 --> 00:05:34,960
slower but

00:05:31,840 --> 00:05:36,320
it's cool because uh right now you can

00:05:34,960 --> 00:05:39,199
see there is plenty of

00:05:36,320 --> 00:05:40,479
variant thing and there is this class db

00:05:39,199 --> 00:05:43,520
structure

00:05:40,479 --> 00:05:45,840
class db is the component which remember

00:05:43,520 --> 00:05:47,039
which register every uh every one of

00:05:45,840 --> 00:05:48,800
your script

00:05:47,039 --> 00:05:50,960
sorry not your script your node and all

00:05:48,800 --> 00:05:53,280
its method all its property etc

00:05:50,960 --> 00:05:54,080
so at run time you can ask hey class db

00:05:53,280 --> 00:05:57,280
give me

00:05:54,080 --> 00:05:58,639
uh the the way uh give me a new instance

00:05:57,280 --> 00:06:02,240
of this uh

00:05:58,639 --> 00:06:05,280
this node give me uh the

00:06:02,240 --> 00:06:07,440
the the method for this uh this node

00:06:05,280 --> 00:06:08,960
and then you can call things and uh you

00:06:07,440 --> 00:06:11,840
can see uh you use

00:06:08,960 --> 00:06:13,680
variant everywhere so when you call uh a

00:06:11,840 --> 00:06:14,319
function you give parameters variant

00:06:13,680 --> 00:06:16,960
you're

00:06:14,319 --> 00:06:18,960
you you get back a variant and etc uh it

00:06:16,960 --> 00:06:20,400
looks like a lot more a lot like uh

00:06:18,960 --> 00:06:22,560
python in python

00:06:20,400 --> 00:06:24,479
when you create a function there is no

00:06:22,560 --> 00:06:26,960
typing it's dynamic typing so you can

00:06:24,479 --> 00:06:28,800
give the function an int and tomorrow

00:06:26,960 --> 00:06:29,280
you will give it a string and it will

00:06:28,800 --> 00:06:31,840
work

00:06:29,280 --> 00:06:33,280
or maybe it will blow up but blowing up

00:06:31,840 --> 00:06:35,759
in python means

00:06:33,280 --> 00:06:37,600
you get a nice error blowing up in c

00:06:35,759 --> 00:06:40,880
plus means

00:06:37,600 --> 00:06:44,639
anything people might get killed

00:06:40,880 --> 00:06:47,680
so that's why variant is much better

00:06:44,639 --> 00:06:48,160
because it means that you can take this

00:06:47,680 --> 00:06:50,800
thing

00:06:48,160 --> 00:06:52,560
and basically you can write it like this

00:06:50,800 --> 00:06:55,919
and this is gd script

00:06:52,560 --> 00:06:58,960
and so now this is very

00:06:55,919 --> 00:07:01,360
the same but it means now you have

00:06:58,960 --> 00:07:02,400
you can have end user which write easy

00:07:01,360 --> 00:07:05,840
gd script

00:07:02,400 --> 00:07:07,120
and this code it won't crash if there is

00:07:05,840 --> 00:07:10,319
a problem you will see

00:07:07,120 --> 00:07:12,880
a nice error and etc

00:07:10,319 --> 00:07:14,000
so put it another way we can cigarette

00:07:12,880 --> 00:07:16,240
in two parts there is

00:07:14,000 --> 00:07:18,720
the big the big main part which is the

00:07:16,240 --> 00:07:21,919
core which contains this variant

00:07:18,720 --> 00:07:23,199
structure which is a a combination of

00:07:21,919 --> 00:07:24,960
all the bolting type

00:07:23,199 --> 00:07:27,599
all the golden nuts that could be and

00:07:24,960 --> 00:07:30,880
etc and you have this uh

00:07:27,599 --> 00:07:34,080
this nice class classdb system

00:07:30,880 --> 00:07:35,680
which allows you to to at runtime a

00:07:34,080 --> 00:07:39,680
query

00:07:35,680 --> 00:07:41,360
your your node method and property

00:07:39,680 --> 00:07:42,720
and on the other side you have this

00:07:41,360 --> 00:07:44,319
really small module

00:07:42,720 --> 00:07:45,919
in the base is something really small

00:07:44,319 --> 00:07:48,080
and it's it's not even in the core

00:07:45,919 --> 00:07:49,919
of the engine and it's basically two

00:07:48,080 --> 00:07:51,759
things one is the compiler

00:07:49,919 --> 00:07:53,039
and another is the interpreter so

00:07:51,759 --> 00:07:56,400
basically you just

00:07:53,039 --> 00:07:59,199
compile your user readable gd script

00:07:56,400 --> 00:08:00,080
into bytecode and then you just

00:07:59,199 --> 00:08:02,319
interpret

00:08:00,080 --> 00:08:03,280
one by call at a time and basically

00:08:02,319 --> 00:08:06,319
you're doing

00:08:03,280 --> 00:08:08,160
this one by caller time so

00:08:06,319 --> 00:08:09,840
that's why gd script is a great idea

00:08:08,160 --> 00:08:13,759
because it is really tightly

00:08:09,840 --> 00:08:16,800
integrated into gadot and so yeah it

00:08:13,759 --> 00:08:18,960
basically saying we should have

00:08:16,800 --> 00:08:19,840
removed the gd script and use lua

00:08:18,960 --> 00:08:21,919
instead

00:08:19,840 --> 00:08:23,759
it means we have to fight against all

00:08:21,919 --> 00:08:25,199
these things

00:08:23,759 --> 00:08:26,879
but basically that's what i'm doing in

00:08:25,199 --> 00:08:29,919
python

00:08:26,879 --> 00:08:31,440
so it's it's painful but i really love

00:08:29,919 --> 00:08:34,560
python because it has a huge

00:08:31,440 --> 00:08:36,000
ecosystem and for instance

00:08:34,560 --> 00:08:38,080
if you're like me and every time you

00:08:36,000 --> 00:08:41,360
play a game you say oh the

00:08:38,080 --> 00:08:42,080
ai of the this game is really poor maybe

00:08:41,360 --> 00:08:46,240
one day

00:08:42,080 --> 00:08:48,000
some guy will use this binding to use

00:08:46,240 --> 00:08:50,080
to use machine learning to create a

00:08:48,000 --> 00:08:52,720
really great ai

00:08:50,080 --> 00:08:53,360
i hope so and so that's basically one

00:08:52,720 --> 00:08:56,640
use case

00:08:53,360 --> 00:08:58,320
you can use by bringing python together

00:08:56,640 --> 00:08:59,680
basically you give a really huge

00:08:58,320 --> 00:09:03,519
ecosystem nice

00:08:59,680 --> 00:09:07,440
language and plenty of possibilities

00:09:03,519 --> 00:09:10,480
now how to do that the

00:09:07,440 --> 00:09:11,600
this is a basic um like every uh game

00:09:10,480 --> 00:09:13,040
looks like this so

00:09:11,600 --> 00:09:15,279
on the left side you have your god

00:09:13,040 --> 00:09:16,160
binary so it's basically what you will

00:09:15,279 --> 00:09:18,560
download from the

00:09:16,160 --> 00:09:20,160
godot website and on the right side you

00:09:18,560 --> 00:09:23,360
are you have all your assets

00:09:20,160 --> 00:09:26,160
so you're like uh your sprite

00:09:23,360 --> 00:09:26,560
so your script etc and what we are going

00:09:26,160 --> 00:09:30,160
to do

00:09:26,560 --> 00:09:32,399
is this so basically we just drop the

00:09:30,160 --> 00:09:33,200
the gd script to replace it by python

00:09:32,399 --> 00:09:35,760
and then you have

00:09:33,200 --> 00:09:37,440
this shared library which will contain

00:09:35,760 --> 00:09:39,760
the python interpreter so

00:09:37,440 --> 00:09:40,560
it can talk to it can interpret your

00:09:39,760 --> 00:09:42,720
python script

00:09:40,560 --> 00:09:43,680
and now it has to talk to uh the main

00:09:42,720 --> 00:09:46,720
goal of binary

00:09:43,680 --> 00:09:49,600
so to do that there is this uh c

00:09:46,720 --> 00:09:51,120
api which is called g native which

00:09:49,600 --> 00:09:52,880
allows you to access basically

00:09:51,120 --> 00:09:57,440
everything from godot

00:09:52,880 --> 00:09:59,839
uh how this how this djignitive works

00:09:57,440 --> 00:10:00,720
basically just like what i store what i

00:09:59,839 --> 00:10:02,880
show you with the

00:10:00,720 --> 00:10:04,720
variant stuff it looks pretty much the

00:10:02,880 --> 00:10:07,680
same except

00:10:04,720 --> 00:10:09,440
well you're from outside of godot you're

00:10:07,680 --> 00:10:11,600
just like in shared library and

00:10:09,440 --> 00:10:13,360
you can do that and it's much faster

00:10:11,600 --> 00:10:16,160
than the variant stuff for

00:10:13,360 --> 00:10:18,000
reasons we don't have to talk about and

00:10:16,160 --> 00:10:21,040
so it's much more dangerous

00:10:18,000 --> 00:10:24,560
uh anyway so what you have to do

00:10:21,040 --> 00:10:27,600
to uh to give together

00:10:24,560 --> 00:10:30,959
the python the python language

00:10:27,600 --> 00:10:32,800
is um there is a function inside the

00:10:30,959 --> 00:10:35,600
gd80 which allow you to

00:10:32,800 --> 00:10:36,000
register a new script language inside

00:10:35,600 --> 00:10:40,399
the

00:10:36,000 --> 00:10:42,720
the game engine so once you've done that

00:10:40,399 --> 00:10:44,000
godot will know that every time he has

00:10:42,720 --> 00:10:46,079
to load a dot pi

00:10:44,000 --> 00:10:48,160
file he has to call your library and so

00:10:46,079 --> 00:10:49,600
you can do the work

00:10:48,160 --> 00:10:51,600
and on top of that there is another

00:10:49,600 --> 00:10:54,720
thing you have to do is uh

00:10:51,600 --> 00:10:57,120
provide to the your python world all the

00:10:54,720 --> 00:10:58,480
generative function because now you want

00:10:57,120 --> 00:11:01,839
to access

00:10:58,480 --> 00:11:05,279
all your nodes modify and node et cetera

00:11:01,839 --> 00:11:06,399
now for how to do that first we use a

00:11:05,279 --> 00:11:09,519
system

00:11:06,399 --> 00:11:12,320
in truth i've used basically every

00:11:09,519 --> 00:11:15,519
possible tool you can use to

00:11:12,320 --> 00:11:17,040
plug python and see together

00:11:15,519 --> 00:11:21,360
so if you have questions about this

00:11:17,040 --> 00:11:24,560
after that you can talk to me i guess uh

00:11:21,360 --> 00:11:27,120
i can say a lot about that but

00:11:24,560 --> 00:11:27,600
anyway the best is saitam just kidding

00:11:27,120 --> 00:11:29,600
there is

00:11:27,600 --> 00:11:31,200
also cffi which is a really great but

00:11:29,600 --> 00:11:33,360
for your use case site

00:11:31,200 --> 00:11:34,640
is really cool uh if you don't know uh

00:11:33,360 --> 00:11:36,959
satan basically

00:11:34,640 --> 00:11:37,920
is a tool that's for you to compile

00:11:36,959 --> 00:11:40,160
python

00:11:37,920 --> 00:11:40,959
into a shared library which will be seen

00:11:40,160 --> 00:11:43,519
from python

00:11:40,959 --> 00:11:44,320
just like a regular module so this is

00:11:43,519 --> 00:11:47,680
this gives you

00:11:44,320 --> 00:11:48,480
like a 50 boost but the really really

00:11:47,680 --> 00:11:52,240
great thing

00:11:48,480 --> 00:11:54,560
is uh you can inside saitan

00:11:52,240 --> 00:11:55,680
mix together c and python in a really

00:11:54,560 --> 00:11:58,079
elegant way

00:11:55,680 --> 00:11:58,880
so in the end it means you can go as

00:11:58,079 --> 00:12:01,600
fast as c

00:11:58,880 --> 00:12:02,560
and you can integrate really really

00:12:01,600 --> 00:12:06,000
nicely with

00:12:02,560 --> 00:12:07,279
external third party c library just like

00:12:06,000 --> 00:12:10,639
what we need for godot

00:12:07,279 --> 00:12:11,600
so it just worked great the the little

00:12:10,639 --> 00:12:14,720
complicated thing

00:12:11,600 --> 00:12:16,639
is basically we have plenty of templates

00:12:14,720 --> 00:12:19,600
everywhere to generate this code

00:12:16,639 --> 00:12:20,480
so for instance we have organo binary so

00:12:19,600 --> 00:12:24,320
once again

00:12:20,480 --> 00:12:26,959
we use class db to generate a json

00:12:24,320 --> 00:12:28,800
which will show us all the class all the

00:12:26,959 --> 00:12:31,519
methods the property etc

00:12:28,800 --> 00:12:32,560
and then we can generate this file which

00:12:31,519 --> 00:12:35,040
is basically

00:12:32,560 --> 00:12:36,079
a site and version which allows you to

00:12:35,040 --> 00:12:39,519
access every

00:12:36,079 --> 00:12:42,240
class method etc so it's pretty big it's

00:12:39,519 --> 00:12:42,240
6.3

00:12:43,040 --> 00:12:46,480
megabytes but after that you have to

00:12:45,600 --> 00:12:49,760
compile this

00:12:46,480 --> 00:12:52,399
and saitam it because the site and

00:12:49,760 --> 00:12:53,360
compiler starts by compiling your uh

00:12:52,399 --> 00:12:57,519
your saturn code

00:12:53,360 --> 00:12:59,600
into c and so now it's 87

00:12:57,519 --> 00:13:02,320
megabyte and on top of that you're 60

00:12:59,600 --> 00:13:05,680
seconds older

00:13:02,320 --> 00:13:09,200
but it's only the beginning and so

00:13:05,680 --> 00:13:12,480
compiling is 200 seconds and it's also

00:13:09,200 --> 00:13:17,519
six gigabytes of ram on gcc

00:13:12,480 --> 00:13:17,519
so this computer cannot do that so uh

00:13:17,760 --> 00:13:23,360
travis cannot do that also so

00:13:21,200 --> 00:13:24,720
you have to use clang which it will be

00:13:23,360 --> 00:13:28,079
less ram

00:13:24,720 --> 00:13:31,200
but gcc is great it's also great anyway

00:13:28,079 --> 00:13:32,720
so that's what you end up with and there

00:13:31,200 --> 00:13:34,800
is also template i won't talk to

00:13:32,720 --> 00:13:35,920
to you about but you have templates

00:13:34,800 --> 00:13:38,959
everywhere

00:13:35,920 --> 00:13:39,600
and you end up with a nice thing um that

00:13:38,959 --> 00:13:43,600
can

00:13:39,600 --> 00:13:43,600
use python or you can use python

00:13:45,040 --> 00:13:51,680
from this the basically i'm the

00:13:48,480 --> 00:13:55,680
i've been doing this for like uh

00:13:51,680 --> 00:13:57,760
since 2016. uh we are still in beta

00:13:55,680 --> 00:13:58,959
this is a bit sad for me because i i've

00:13:57,760 --> 00:14:02,720
gave a talk

00:13:58,959 --> 00:14:03,360
about this like in the 2017 for euro

00:14:02,720 --> 00:14:05,760
python

00:14:03,360 --> 00:14:07,360
and the first bullet point was exactly

00:14:05,760 --> 00:14:10,560
the same

00:14:07,360 --> 00:14:14,160
so yeah shame but no because

00:14:10,560 --> 00:14:17,120
this is not the same beta it's

00:14:14,160 --> 00:14:18,160
much better better like before it was

00:14:17,120 --> 00:14:20,000
leaking ram

00:14:18,160 --> 00:14:22,639
now it's no longer the performance is

00:14:20,000 --> 00:14:25,680
better i'm pretty confident we can

00:14:22,639 --> 00:14:28,839
release something nice in a short time

00:14:25,680 --> 00:14:30,320
so i'll promise we will have a stable

00:14:28,839 --> 00:14:33,920
version

00:14:30,320 --> 00:14:37,199
before star citizen for instance i hope

00:14:33,920 --> 00:14:40,160
and after that if someone here

00:14:37,199 --> 00:14:41,600
knows about mac os i'm not a mac os

00:14:40,160 --> 00:14:43,279
developer and

00:14:41,600 --> 00:14:46,800
there is a trouble with the build right

00:14:43,279 --> 00:14:49,199
now so anyway i ask

00:14:46,800 --> 00:14:50,639
and yeah one really important point i

00:14:49,199 --> 00:14:53,920
think is uh

00:14:50,639 --> 00:14:56,000
the possibility given all my system is

00:14:53,920 --> 00:14:59,440
writing is written in cyto

00:14:56,000 --> 00:15:02,639
it means we can provide

00:14:59,440 --> 00:15:06,000
all the the godot api in cytom2

00:15:02,639 --> 00:15:06,880
and we can make a user use satan so what

00:15:06,000 --> 00:15:10,880
does it mean

00:15:06,880 --> 00:15:13,199
is like uh first you just write your

00:15:10,880 --> 00:15:14,800
your game in python like really fast you

00:15:13,199 --> 00:15:16,240
can debug your stuff etc

00:15:14,800 --> 00:15:17,839
and then when you need performance you

00:15:16,240 --> 00:15:19,519
can slowly write

00:15:17,839 --> 00:15:21,760
the hard path insight and to get

00:15:19,519 --> 00:15:23,920
performance so it's like the best of the

00:15:21,760 --> 00:15:24,959
whole world so i'm really excited about

00:15:23,920 --> 00:15:27,680
it and

00:15:24,959 --> 00:15:28,000
on top of that uh maybe you've seen that

00:15:27,680 --> 00:15:31,759
the

00:15:28,000 --> 00:15:34,639
godot 3.2 has been released

00:15:31,759 --> 00:15:35,600
so now there is a 4.0 and there is

00:15:34,639 --> 00:15:38,639
plenty of

00:15:35,600 --> 00:15:41,360
compatibility breakage which are ongoing

00:15:38,639 --> 00:15:43,920
for instance i was working on this

00:15:41,360 --> 00:15:45,759
tonight and that's why i'm late

00:15:43,920 --> 00:15:47,920
so there is plenty of light stuff coming

00:15:45,759 --> 00:15:52,000
along performance boost and so on

00:15:47,920 --> 00:15:53,519
so yeah i'm excited uh and yeah

00:15:52,000 --> 00:15:55,600
you don't have to forget that it's a

00:15:53,519 --> 00:15:57,440
game engine so i should be writing games

00:15:55,600 --> 00:16:09,839
but

00:15:57,440 --> 00:16:09,839
yeah damn it and yeah that's it

00:16:10,000 --> 00:16:13,920
so question anyone

00:16:16,320 --> 00:16:18,560
no

00:16:20,000 --> 00:16:23,440
okay so maybe uh maybe they already told

00:16:22,480 --> 00:16:25,759
you but i will

00:16:23,440 --> 00:16:27,839
told you again uh like monday and

00:16:25,759 --> 00:16:29,360
tuesday there is a gotta come

00:16:27,839 --> 00:16:30,959
and uh so if you're interested into

00:16:29,360 --> 00:16:34,839
godot you should really go

00:16:30,959 --> 00:16:38,800
and come and have fun with us

00:16:34,839 --> 00:16:50,320
uh it's nice people are nice

00:16:38,800 --> 00:16:50,880
and i'll be there uh yeah that's it oh

00:16:50,320 --> 00:16:52,480
yeah

00:16:50,880 --> 00:16:54,320
this is kind of a better question not

00:16:52,480 --> 00:16:57,759
necessarily for me

00:16:54,320 --> 00:17:01,839
but what kind of help do you need

00:16:57,759 --> 00:17:05,839
as you said that is

00:17:01,839 --> 00:17:05,839
can you say some examples

00:17:06,880 --> 00:17:09,919
yeah so the question is what kind of

00:17:09,520 --> 00:17:12,559
help

00:17:09,919 --> 00:17:12,559
do i need

00:17:13,520 --> 00:17:20,160
first i need friend because uh yeah it's

00:17:18,000 --> 00:17:22,240
kind of funny but it's like when you're

00:17:20,160 --> 00:17:22,799
working alone on this kind of project

00:17:22,240 --> 00:17:24,559
and it's

00:17:22,799 --> 00:17:27,120
playing complexity so there's a lot of

00:17:24,559 --> 00:17:29,120
people who come who look at the code

00:17:27,120 --> 00:17:31,360
and they say oh it's nice i give a store

00:17:29,120 --> 00:17:32,000
but they don't know how to what to do

00:17:31,360 --> 00:17:34,559
what to work

00:17:32,000 --> 00:17:35,120
so basically that just disappear and

00:17:34,559 --> 00:17:36,400
when you're

00:17:35,120 --> 00:17:38,160
developing this kind of thing you just

00:17:36,400 --> 00:17:39,760
feel lonely and you have to work for

00:17:38,160 --> 00:17:42,240
months and months and you're like oh

00:17:39,760 --> 00:17:43,039
why i'm doing this anymore so just

00:17:42,240 --> 00:17:45,280
people

00:17:43,039 --> 00:17:46,320
coming and just adding an issue and

00:17:45,280 --> 00:17:48,799
seeing oh

00:17:46,320 --> 00:17:50,240
found something it's nice so this is the

00:17:48,799 --> 00:17:52,240
first thing

00:17:50,240 --> 00:17:55,760
and for instance if you want to make me

00:17:52,240 --> 00:17:55,760
happy you should go to gadokan

00:17:56,880 --> 00:18:03,039
on top of that i

00:18:00,320 --> 00:18:04,320
think there is so as i said uh all the

00:18:03,039 --> 00:18:06,000
the platform things

00:18:04,320 --> 00:18:07,760
because there is a linux there is

00:18:06,000 --> 00:18:09,840
windows there is macos

00:18:07,760 --> 00:18:11,760
uh if you look at into the code base

00:18:09,840 --> 00:18:12,960
there is plenty of sarcastic comments

00:18:11,760 --> 00:18:14,960
about windows and

00:18:12,960 --> 00:18:16,400
how complicated it is for basically

00:18:14,960 --> 00:18:19,200
nothing

00:18:16,400 --> 00:18:19,919
so if you want to make me feel happy

00:18:19,200 --> 00:18:21,840
just

00:18:19,919 --> 00:18:23,200
don't let me write sarcastic comments

00:18:21,840 --> 00:18:26,480
about how mac os

00:18:23,200 --> 00:18:27,200
is complicated and so on on top of that

00:18:26,480 --> 00:18:28,240
there is for instance packaging

00:18:27,200 --> 00:18:31,200
packaging

00:18:28,240 --> 00:18:31,679
is like 90 of the work once you have

00:18:31,200 --> 00:18:34,880
done

00:18:31,679 --> 00:18:36,799
90 of the other work so this is another

00:18:34,880 --> 00:18:39,120
stuff which is uh

00:18:36,799 --> 00:18:41,520
not that complicated but plenty of small

00:18:39,120 --> 00:18:43,360
thing which to add up

00:18:41,520 --> 00:18:44,640
on top of that i think the code base

00:18:43,360 --> 00:18:46,880
right now it's

00:18:44,640 --> 00:18:48,080
about stable which was not the case like

00:18:46,880 --> 00:18:51,039
two months ago so

00:18:48,080 --> 00:18:51,919
people can come just have a look asking

00:18:51,039 --> 00:18:54,080
questions

00:18:51,919 --> 00:18:57,039
and uh yeah we might figure out what we

00:18:54,080 --> 00:19:11,520
can do

00:18:57,039 --> 00:19:11,520

YouTube URL: https://www.youtube.com/watch?v=lTZkdRbUrzo


