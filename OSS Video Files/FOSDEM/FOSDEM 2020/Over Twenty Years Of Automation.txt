Title: Over Twenty Years Of Automation
Publication date: 2020-07-16
Playlist: FOSDEM 2020
Description: 
	by James Shubin

At: FOSDEM 2020
https://video.fosdem.org/2020/Janson/automation.webm

Over the past twenty years, the automation landscape has changed dramatically.
As our hunger for complex technical infrastructure increased, and our inability to keep up with these demands faltered, we've outsourced a lot of the work to third-parties and cloud providers.
We'll step backwards and show where we came from, and where we're going.
If we don't understand this future, and step up to the challenge, then we eventually won't control our own computers anymore.
We'll discuss this timeline from a tools perspective and showcase many live demos of the past, present, and what will be possible in the future.
This presentation will contain many demos and interactive examples. I will showcase some modern ideas I have with my Free Software project called mgmtconfig.

Room: Janson
Scheduled start: 2020-02-01 11:00:00
Captions: 
	00:00:10,379 --> 00:00:13,620
that's it

00:00:14,070 --> 00:00:19,570
kind of make it a bit entertaining for

00:00:16,049 --> 00:00:21,910
Little Italy can I start

00:00:19,570 --> 00:00:23,349
the box is starting up I'm gonna show

00:00:21,910 --> 00:00:26,169
you a video from Montreal while we're

00:00:23,349 --> 00:00:27,730
getting ready just this is my city in

00:00:26,169 --> 00:00:32,469
Canada you might have seen this before

00:00:27,730 --> 00:00:35,739
it was a VHS quality there was a some

00:00:32,469 --> 00:00:39,280
rapid snow and ice is bad timing and the

00:00:35,739 --> 00:00:43,360
a road which is a little steep and so

00:00:39,280 --> 00:00:46,600
you can see what happened you'll tell me

00:00:43,360 --> 00:00:48,809
when they're ready no need to start

00:00:46,600 --> 00:00:48,809
start

00:00:51,180 --> 00:00:54,630
yeah make it a little fun sorry about

00:00:54,090 --> 00:00:56,190
the video

00:00:54,630 --> 00:01:00,270
that's a libreoffice bug so if anyone

00:00:56,190 --> 00:01:01,830
can track down Michael Meeks what this

00:01:00,270 --> 00:01:03,180
is my problem yeah

00:01:01,830 --> 00:01:05,430
that's the video that's actually a

00:01:03,180 --> 00:01:08,910
libreoffice bug the video is fine but

00:01:05,430 --> 00:01:13,080
Libre Office is buggy a bit it's pretty

00:01:08,910 --> 00:01:16,620
good but except for that so do this

00:01:13,080 --> 00:01:18,770
whole so this bus thought they can do

00:01:16,620 --> 00:01:18,770
better

00:01:22,560 --> 00:01:32,550
yeah but you know he gets away and his

00:01:27,010 --> 00:01:32,550
friend Thomas there another microphone

00:01:35,970 --> 00:01:42,500
the police to the rescue Jinyu 12 defeat

00:01:38,790 --> 00:01:42,500
through feedback then you turn on my mic

00:01:47,960 --> 00:01:53,270
but don't worry we have city works who

00:01:50,460 --> 00:01:53,270
can come save the issue

00:01:59,630 --> 00:02:03,729
so wait till the end

00:02:05,300 --> 00:02:09,859
[Music]

00:02:06,640 --> 00:02:09,859
[Applause]

00:02:10,200 --> 00:02:15,910
okay I gotta get going so uh can you

00:02:14,440 --> 00:02:17,920
turn down the volume a tiny bit please

00:02:15,910 --> 00:02:19,450
thank you cuz a little feedback so who

00:02:17,920 --> 00:02:20,650
am I talking really quickly I'm gonna be

00:02:19,450 --> 00:02:22,390
sitting down a little bit so if you

00:02:20,650 --> 00:02:25,510
can't see me don't worry I'm still here

00:02:22,390 --> 00:02:27,129
Frye voice I'm a hacker everyone config

00:02:25,510 --> 00:02:28,660
management rings still a little bit of

00:02:27,129 --> 00:02:39,250
feedback you turn on the mic just a tiny

00:02:28,660 --> 00:02:40,690
bit please I write a technical blog

00:02:39,250 --> 00:02:42,040
called the technical blog of James who's

00:02:40,690 --> 00:02:43,900
seen it just raise your hand we've seen

00:02:42,040 --> 00:02:46,120
my blog if you haven't just raise your

00:02:43,900 --> 00:02:48,700
hand so I seemingly popular please thank

00:02:46,120 --> 00:02:50,980
you I started the physiology and I'm

00:02:48,700 --> 00:02:52,569
doing this sort of DevOps thing and just

00:02:50,980 --> 00:02:55,629
a little bit background is it feedback

00:02:52,569 --> 00:02:58,290
I'm hearing feedback yeah can can you

00:02:55,629 --> 00:03:04,540
guys turn down the microphone please

00:02:58,290 --> 00:03:06,060
please oh boy that's bad hello

00:03:04,540 --> 00:03:09,900
so just a little bit of the background

00:03:06,060 --> 00:03:15,900
still do you have an audio control I

00:03:09,900 --> 00:03:19,690
hope that I don't take it away thank you

00:03:15,900 --> 00:03:21,310
how's that still a bit I'll just have to

00:03:19,690 --> 00:03:23,010
talk softly can you hear me if I talk

00:03:21,310 --> 00:03:29,280
softly

00:03:23,010 --> 00:03:32,040
my goodness guys Amy guy can you you

00:03:29,280 --> 00:03:35,700
have a microphone control can you turn

00:03:32,040 --> 00:03:36,480
it down please we'll do the best we can

00:03:35,700 --> 00:03:39,120
sorry about that

00:03:36,480 --> 00:03:40,349
so every day in sort of system in life

00:03:39,120 --> 00:03:42,030
everyone's kind of SS teaching

00:03:40,349 --> 00:03:44,220
everywhere or doing this crazy llamÃ³

00:03:42,030 --> 00:03:45,420
stuff and like to manage servers and

00:03:44,220 --> 00:03:48,930
this is really not how we should be

00:03:45,420 --> 00:03:50,700
doing config management but like the

00:03:48,930 --> 00:03:52,109
solution to these problems a lot of

00:03:50,700 --> 00:03:53,220
people doing these manually a lot of

00:03:52,109 --> 00:03:54,269
people are just pushing everything to

00:03:53,220 --> 00:03:58,409
the cloud which is someone else's

00:03:54,269 --> 00:04:01,859
problem and is this a good idea oh this

00:03:58,409 --> 00:04:03,090
is a good idea come on wake up this is

00:04:01,859 --> 00:04:08,879
my answer to you if this is a good idea

00:04:03,090 --> 00:04:11,010
or not it's just not a good idea so

00:04:08,879 --> 00:04:12,659
everything's just nope and I use this

00:04:11,010 --> 00:04:13,680
image a lot because it's just my feeling

00:04:12,659 --> 00:04:17,220
about a lot of things that could be

00:04:13,680 --> 00:04:18,870
different so long time the long story

00:04:17,220 --> 00:04:20,400
short is I got fed up with a lot of the

00:04:18,870 --> 00:04:22,109
automation tools and things out there so

00:04:20,400 --> 00:04:24,840
I started working on my own tool called

00:04:22,109 --> 00:04:26,880
MGMT I'm gonna give you one really quick

00:04:24,840 --> 00:04:28,139
demo to show you how it works and then

00:04:26,880 --> 00:04:32,220
I'm gonna show you more of a history of

00:04:28,139 --> 00:04:36,510
everything going on so basically if you

00:04:32,220 --> 00:04:38,220
run the tool we have a sort of file that

00:04:36,510 --> 00:04:41,220
described the code and I'll just show

00:04:38,220 --> 00:04:43,889
you what it looks like just a very

00:04:41,220 --> 00:04:46,800
simple problem it says in this file

00:04:43,889 --> 00:04:48,720
whole world say hello right we're sort

00:04:46,800 --> 00:04:52,590
of statically declaring the state of

00:04:48,720 --> 00:04:54,419
this file and if we run this you can see

00:04:52,590 --> 00:04:56,849
it creates the file hopefully and we'll

00:04:54,419 --> 00:05:00,449
go over here and is it big enough you

00:04:56,849 --> 00:05:02,460
can all see you right you can see that

00:05:00,449 --> 00:05:04,410
the file is actually created as we

00:05:02,460 --> 00:05:06,630
expect and this is how sort of most

00:05:04,410 --> 00:05:08,430
config management tools work today you

00:05:06,630 --> 00:05:10,530
ask for something create some files

00:05:08,430 --> 00:05:12,539
install some packages set up some users

00:05:10,530 --> 00:05:14,220
and it doesn't but MGMT is a little bit

00:05:12,539 --> 00:05:15,960
different because you can do cool things

00:05:14,220 --> 00:05:17,820
you can move the file and it comes right

00:05:15,960 --> 00:05:20,159
back because it's running in real time

00:05:17,820 --> 00:05:20,950
and I've shown this to lots of times but

00:05:20,159 --> 00:05:23,380
one more time

00:05:20,950 --> 00:05:25,630
you remove the file and cat the file and

00:05:23,380 --> 00:05:27,550
it comes right back you can see and Jim

00:05:25,630 --> 00:05:30,010
T's sleeping it detects when something

00:05:27,550 --> 00:05:32,110
happens and it wakes up and fixed the

00:05:30,010 --> 00:05:34,330
state of the reel of the system does

00:05:32,110 --> 00:05:35,590
that make sense and just to sort of show

00:05:34,330 --> 00:05:37,480
off a little bit and then we'll talk

00:05:35,590 --> 00:05:39,610
about other things if I run this watch

00:05:37,480 --> 00:05:41,260
command it just runs this file over and

00:05:39,610 --> 00:05:44,230
over and over again you can see that as

00:05:41,260 --> 00:05:46,750
fast as MGMT's running it notices and

00:05:44,230 --> 00:05:49,450
fixes fixing the state

00:05:46,750 --> 00:05:50,680
ok so that's sort of the future of what

00:05:49,450 --> 00:05:52,990
I wanting to show you some more demos

00:05:50,680 --> 00:05:55,090
ever oh my goodness I'm going to show

00:05:52,990 --> 00:05:56,230
you some more demos at the end but I

00:05:55,090 --> 00:05:58,330
want to talk a little bit more of the

00:05:56,230 --> 00:06:00,460
state of the art so I have to do some

00:05:58,330 --> 00:06:02,530
boring slides before we do live demos so

00:06:00,460 --> 00:06:04,510
just some brief prerequisites because

00:06:02,530 --> 00:06:06,550
this is sort of a beginner talk and I

00:06:04,510 --> 00:06:08,110
want everyone on the same page so we can

00:06:06,550 --> 00:06:10,450
use the same terminology to talk to each

00:06:08,110 --> 00:06:12,190
other does that make sense okay so like

00:06:10,450 --> 00:06:19,600
five minutes the boring slides and then

00:06:12,190 --> 00:06:22,240
hacking deal deal deal so just really

00:06:19,600 --> 00:06:25,360
quickly a dag is a directed estate

00:06:22,240 --> 00:06:26,650
acyclic graph and we use these a lot in

00:06:25,360 --> 00:06:28,900
automation because we want things to

00:06:26,650 --> 00:06:31,510
happen in a certain order and graphs to

00:06:28,900 --> 00:06:32,920
describe the dependency change so for

00:06:31,510 --> 00:06:37,450
example I want to install the package

00:06:32,920 --> 00:06:39,040
before I setup the config file and start

00:06:37,450 --> 00:06:41,020
the daemon so that's what these are used

00:06:39,040 --> 00:06:45,160
for that's what's called idempotence

00:06:41,020 --> 00:06:46,690
anyone know this we used the idea if you

00:06:45,160 --> 00:06:48,070
run a program and it takes you to a

00:06:46,690 --> 00:06:50,170
certain state if you were to run that

00:06:48,070 --> 00:06:52,810
program again you want it to keep you at

00:06:50,170 --> 00:06:53,950
that same state ok so a simple way to do

00:06:52,810 --> 00:06:55,330
that if you're installing the package

00:06:53,950 --> 00:06:56,680
you would check if the package is

00:06:55,330 --> 00:06:57,940
already installed before you run it

00:06:56,680 --> 00:07:00,490
again that sort of thing

00:06:57,940 --> 00:07:01,990
or if you're changing the contents of a

00:07:00,490 --> 00:07:03,970
file if you were to say these are the

00:07:01,990 --> 00:07:05,170
entire contents of the file that would

00:07:03,970 --> 00:07:08,230
be something that's idempotent as

00:07:05,170 --> 00:07:09,490
opposed to just appending to the file so

00:07:08,230 --> 00:07:10,810
it's something we use basically you can

00:07:09,490 --> 00:07:12,790
just run your tools over and over again

00:07:10,810 --> 00:07:14,830
and the state should be converged and

00:07:12,790 --> 00:07:17,710
that's what this lot the second word is

00:07:14,830 --> 00:07:19,480
convergence so convergence is when all

00:07:17,710 --> 00:07:21,430
of the operations that you've requested

00:07:19,480 --> 00:07:23,950
are in the steady state so they're all

00:07:21,430 --> 00:07:25,690
how you want them alright little stuff

00:07:23,950 --> 00:07:26,950
maybe will come up a little bit and the

00:07:25,690 --> 00:07:28,750
last thing I want to mention which

00:07:26,950 --> 00:07:29,789
almost no one really thinks about and

00:07:28,750 --> 00:07:31,710
talks about these days

00:07:29,789 --> 00:07:33,479
something called reversibility so when I

00:07:31,710 --> 00:07:36,089
do some operations to take me into a

00:07:33,479 --> 00:07:37,949
certain desired state sometimes those

00:07:36,089 --> 00:07:39,300
operations can have an inverse that

00:07:37,949 --> 00:07:41,879
takes me back to the state oh is that

00:07:39,300 --> 00:07:43,889
previously and being able to know which

00:07:41,879 --> 00:07:45,539
states you can get to and if you can

00:07:43,889 --> 00:07:47,009
reverse and do all this stuff it's

00:07:45,539 --> 00:07:48,659
really fun and the reason it's fun is

00:07:47,009 --> 00:07:50,370
because now we can build these systems

00:07:48,659 --> 00:07:51,419
that are dynamically changing every

00:07:50,370 --> 00:07:53,159
second and every minute

00:07:51,419 --> 00:07:55,909
if these operations are all possible

00:07:53,159 --> 00:07:58,439
makes sense okay more crappy slides

00:07:55,909 --> 00:08:00,300
let's just show you that so some

00:07:58,439 --> 00:08:02,460
terminology everyone gets these things

00:08:00,300 --> 00:08:03,839
wrong provisioning configuration

00:08:02,460 --> 00:08:05,969
management orchestration and

00:08:03,839 --> 00:08:08,249
choreography really quickly provisioning

00:08:05,969 --> 00:08:08,819
is everything you do just to turn on the

00:08:08,249 --> 00:08:12,180
machine

00:08:08,819 --> 00:08:14,969
so to boot up the VM or to provision the

00:08:12,180 --> 00:08:16,830
iron or even to set up some image in

00:08:14,969 --> 00:08:18,689
Amazon all that stuff is provisioning

00:08:16,830 --> 00:08:20,849
okay provisioning is everything happens

00:08:18,689 --> 00:08:22,559
to turn the machine on and the last

00:08:20,849 --> 00:08:24,809
thing provisioning does is it runs a

00:08:22,559 --> 00:08:26,159
configuration management tool so that's

00:08:24,809 --> 00:08:27,509
what that word should mean and please

00:08:26,159 --> 00:08:28,889
use it that way

00:08:27,509 --> 00:08:31,379
config management is what we're talking

00:08:28,889 --> 00:08:33,630
about today some random notes on the

00:08:31,379 --> 00:08:35,339
slides I think that the word

00:08:33,630 --> 00:08:39,149
configuration management the term has

00:08:35,339 --> 00:08:41,099
been sort of seen as an initial step and

00:08:39,149 --> 00:08:43,199
it could be used much further than it is

00:08:41,099 --> 00:08:45,180
today so configuration management is all

00:08:43,199 --> 00:08:48,029
the Declaration of the desired state and

00:08:45,180 --> 00:08:50,699
up until today we've never really talked

00:08:48,029 --> 00:08:53,100
about the time components of management

00:08:50,699 --> 00:08:55,139
as config management I believe it is and

00:08:53,100 --> 00:08:57,990
what that means is config management for

00:08:55,139 --> 00:09:00,600
me should decide what happens every

00:08:57,990 --> 00:09:02,190
minute of your day right so it should

00:09:00,600 --> 00:09:04,410
say today I want my service to you up

00:09:02,190 --> 00:09:05,880
and running at 5:00 p.m. when people are

00:09:04,410 --> 00:09:08,040
going home and turning on internet for

00:09:05,880 --> 00:09:09,630
something maybe I want the state to

00:09:08,040 --> 00:09:12,389
change because I want more servers

00:09:09,630 --> 00:09:13,949
running so my little balancer should get

00:09:12,389 --> 00:09:15,540
bigger and so on all these things should

00:09:13,949 --> 00:09:16,860
be part of the big management they have

00:09:15,540 --> 00:09:19,980
to do with setting up the machine and

00:09:16,860 --> 00:09:22,050
setting up those States cool and a lot

00:09:19,980 --> 00:09:23,760
of people have sort of sort of I think

00:09:22,050 --> 00:09:25,019
in my opinion being stagnant with the

00:09:23,760 --> 00:09:26,270
current tools they said ok we have a

00:09:25,019 --> 00:09:28,220
puppet we have

00:09:26,270 --> 00:09:30,110
you know chef and all these tools but

00:09:28,220 --> 00:09:32,240
they haven't delivered as much as I wish

00:09:30,110 --> 00:09:33,800
config management had done so people are

00:09:32,240 --> 00:09:35,960
looking to other solutions instead of

00:09:33,800 --> 00:09:37,790
saying hey what else can we do in this

00:09:35,960 --> 00:09:40,460
space and I'm biased of course but

00:09:37,790 --> 00:09:42,950
hopefully I can can convince you

00:09:40,460 --> 00:09:44,840
orchestration orchestration is a very

00:09:42,950 --> 00:09:47,090
specific thing when you have one machine

00:09:44,840 --> 00:09:49,610
or one entity or one laptop which is

00:09:47,090 --> 00:09:52,640
going out and requesting something so

00:09:49,610 --> 00:09:54,080
it's something like ansible for example

00:09:52,640 --> 00:09:55,640
as an Orchestrator and it's always a

00:09:54,080 --> 00:09:58,070
single point if it's always a single

00:09:55,640 --> 00:09:59,750
point which is going out and and having

00:09:58,070 --> 00:10:01,910
that command or series of commands

00:09:59,750 --> 00:10:04,070
happen so it's one place of coordination

00:10:01,910 --> 00:10:05,990
and always centralized when you say

00:10:04,070 --> 00:10:08,000
organization it's always centralized

00:10:05,990 --> 00:10:10,220
even if that centralized point might

00:10:08,000 --> 00:10:11,510
change so there might fail over to

00:10:10,220 --> 00:10:13,700
another server or something if it goes

00:10:11,510 --> 00:10:15,620
down that's still orchestration are you

00:10:13,700 --> 00:10:18,140
totally lost or does this sort of make

00:10:15,620 --> 00:10:20,510
sense wave your hands say sort of makes

00:10:18,140 --> 00:10:23,750
sense all right you're still alive

00:10:20,510 --> 00:10:26,000
that's good again boring slides over in

00:10:23,750 --> 00:10:27,470
like one minute and lastly choreography

00:10:26,000 --> 00:10:29,000
I hate this term but I cannot really

00:10:27,470 --> 00:10:30,800
think of a better term and if anyone has

00:10:29,000 --> 00:10:33,110
one just scream it out or something but

00:10:30,800 --> 00:10:35,510
basically the other way we can automate

00:10:33,110 --> 00:10:37,280
a lot of things is if each machine or

00:10:35,510 --> 00:10:38,930
entity or thing or container in the

00:10:37,280 --> 00:10:41,000
cluster has its own independent

00:10:38,930 --> 00:10:43,130
algorithm and they sort of self organize

00:10:41,000 --> 00:10:46,220
to work together on a lot of things in

00:10:43,130 --> 00:10:50,300
real-life work this way to a good extent

00:10:46,220 --> 00:10:52,340
Boston like humans and algorithms like

00:10:50,300 --> 00:10:54,620
graft and taxes all these things are are

00:10:52,340 --> 00:10:56,270
effectively choreography and in

00:10:54,620 --> 00:10:57,470
somebody's this is cool because you

00:10:56,270 --> 00:10:59,120
don't need that central point of failure

00:10:57,470 --> 00:11:01,070
that's going out and requesting it

00:10:59,120 --> 00:11:03,650
things happen in a certain order that

00:11:01,070 --> 00:11:05,000
makes sense the downside is sometimes

00:11:03,650 --> 00:11:07,580
the algorithms that make all this stuff

00:11:05,000 --> 00:11:08,810
happen can be more complicated but I

00:11:07,580 --> 00:11:10,370
think this is the future and this is

00:11:08,810 --> 00:11:12,020
where we should be doing stuff please

00:11:10,370 --> 00:11:13,730
someone find a better term than

00:11:12,020 --> 00:11:16,520
choreography because I don't know what

00:11:13,730 --> 00:11:17,870
it is really last thing topologies

00:11:16,520 --> 00:11:20,120
there's different topologies

00:11:17,870 --> 00:11:21,500
architecture lis and every time I hear a

00:11:20,120 --> 00:11:23,090
new tool this is what I want to know

00:11:21,500 --> 00:11:25,130
about if it's a tool that's running on

00:11:23,090 --> 00:11:26,330
more than one machine you've got to have

00:11:25,130 --> 00:11:28,100
this in the documentation

00:11:26,330 --> 00:11:29,990
so these are some topologies I'll show

00:11:28,100 --> 00:11:31,940
you this one when you have a whole bunch

00:11:29,990 --> 00:11:34,150
of clients at the bottom that initiate

00:11:31,940 --> 00:11:36,350
request to a server what's this called

00:11:34,150 --> 00:11:39,210
scream it out

00:11:36,350 --> 00:11:41,160
who's shy it's anyone really shy just

00:11:39,210 --> 00:11:44,460
raise your hands where you are anybody

00:11:41,160 --> 00:11:46,380
yeah client-server right so what's the

00:11:44,460 --> 00:11:48,620
problem with this topology anyone scream

00:11:46,380 --> 00:11:51,510
it out mm-hmm

00:11:48,620 --> 00:11:53,250
single point of failure also kind of

00:11:51,510 --> 00:11:55,080
very traditional well-known so it's used

00:11:53,250 --> 00:11:56,910
if you look at this one this is almost

00:11:55,080 --> 00:11:58,080
the opposite you have the orchestrator

00:11:56,910 --> 00:11:59,760
like I was talking about before

00:11:58,080 --> 00:12:01,470
initiating the connection into a whole

00:11:59,760 --> 00:12:04,530
bunch of machines what's the problem

00:12:01,470 --> 00:12:06,170
with this topology scream now don't be

00:12:04,530 --> 00:12:09,780
shy

00:12:06,170 --> 00:12:11,070
part of me same thing yeah it's also

00:12:09,780 --> 00:12:13,170
single point of failure they're gonna be

00:12:11,070 --> 00:12:15,000
performance limitations tools like

00:12:13,170 --> 00:12:17,670
danceable do this right who's used

00:12:15,000 --> 00:12:19,530
ansible who's happy about using ansible

00:12:17,670 --> 00:12:22,020
just kidding I'm teasing Red Hat don't

00:12:19,530 --> 00:12:24,840
hurt me so there's some other topologies

00:12:22,020 --> 00:12:26,160
a full peer-to-peer mesh these are

00:12:24,840 --> 00:12:27,690
actually kind of cool because everyone

00:12:26,160 --> 00:12:29,430
is talking to everyone else but the

00:12:27,690 --> 00:12:33,960
problem with this sort of apology is

00:12:29,430 --> 00:12:35,520
what yeah scream it out conversions 10

00:12:33,960 --> 00:12:37,230
the algorithms to do convergence can be

00:12:35,520 --> 00:12:39,210
more complicated but even simpler than

00:12:37,230 --> 00:12:41,250
that when you have a large number of

00:12:39,210 --> 00:12:43,620
peers if each peers talking to every

00:12:41,250 --> 00:12:45,870
other peer the number is just too big so

00:12:43,620 --> 00:12:47,820
numbers are too big panel scale and

00:12:45,870 --> 00:12:49,760
there's some weird hybrid topologies for

00:12:47,820 --> 00:12:52,740
example where you have a small inner

00:12:49,760 --> 00:12:56,070
mesh of hosts all talking together and

00:12:52,740 --> 00:12:57,990
they form a cluster and then everyone

00:12:56,070 --> 00:13:00,180
else joins as a client and talks through

00:12:57,990 --> 00:13:03,540
one of those machines this is actually

00:13:00,180 --> 00:13:08,280
what we do in MGMT so cool you want to

00:13:03,540 --> 00:13:10,320
see some demos no more slides yes ok the

00:13:08,280 --> 00:13:12,120
demos are a little bit boring but it's

00:13:10,320 --> 00:13:15,600
meant as a beginner talk so I'll do my

00:13:12,120 --> 00:13:17,070
best so this is sort of past present and

00:13:15,600 --> 00:13:18,900
future of config management so I figured

00:13:17,070 --> 00:13:21,600
we'd dig into the past and see how

00:13:18,900 --> 00:13:22,920
people used to run stuff manual hacking

00:13:21,600 --> 00:13:25,230
on stuff this is kind of how I stopped

00:13:22,920 --> 00:13:30,780
my laptop right there's some problems

00:13:25,230 --> 00:13:33,690
with this and it's useful by the Dozen

00:13:30,780 --> 00:13:35,550
scale and if you suck at bash or are you

00:13:33,690 --> 00:13:37,500
second remembering what commands to run

00:13:35,550 --> 00:13:39,510
in the spindle poorly so we have some

00:13:37,500 --> 00:13:41,070
bash scripting which is kind of the next

00:13:39,510 --> 00:13:42,330
thing that system means do who's like a

00:13:41,070 --> 00:13:45,000
system in and has

00:13:42,330 --> 00:13:46,500
didn't some bash even basic stuff I know

00:13:45,000 --> 00:13:49,020
you're there you're probably hiding so

00:13:46,500 --> 00:13:52,970
that I don't find you but I tuck into

00:13:49,020 --> 00:14:01,020
the old code that I had and I just

00:13:52,970 --> 00:14:02,340
pulled this up demos so I even found

00:14:01,020 --> 00:14:04,440
this old script I wrote

00:14:02,340 --> 00:14:06,030
I'll show you really quickly so this is

00:14:04,440 --> 00:14:08,640
a script I wrote like over ten years ago

00:14:06,030 --> 00:14:10,080
and basically what it does is it's

00:14:08,640 --> 00:14:12,830
something I just run from my laptop and

00:14:10,080 --> 00:14:15,660
it checks if it's on this local machine

00:14:12,830 --> 00:14:17,400
that's bad so it once always run on the

00:14:15,660 --> 00:14:19,620
server that I'm administrating and if it

00:14:17,400 --> 00:14:21,060
does that if it if it's not running on

00:14:19,620 --> 00:14:22,920
the server that I'm in the string it

00:14:21,060 --> 00:14:25,230
will actually SSH and run itself on that

00:14:22,920 --> 00:14:26,790
server and then run some commands and

00:14:25,230 --> 00:14:30,510
what the script really does at the very

00:14:26,790 --> 00:14:31,950
end is it's just adding a user and just

00:14:30,510 --> 00:14:33,270
to make this more fun so basically I'm

00:14:31,950 --> 00:14:36,690
going to show all these demos in terms

00:14:33,270 --> 00:14:39,390
of adding a user and there's this weird

00:14:36,690 --> 00:14:41,850
GUI thing that's calling called cockpit

00:14:39,390 --> 00:14:43,320
and it like has this stuff that shows

00:14:41,850 --> 00:14:44,520
you what's going on on the server I

00:14:43,320 --> 00:14:46,410
don't really use it but it's nice

00:14:44,520 --> 00:14:48,300
because it works in real time also and

00:14:46,410 --> 00:14:49,350
it has a list of the users on your

00:14:48,300 --> 00:14:51,960
machine so I'm gonna keep this in the

00:14:49,350 --> 00:14:55,680
background just so you can see and let's

00:14:51,960 --> 00:14:56,220
run this script and let's see what

00:14:55,680 --> 00:15:00,440
happens

00:14:56,220 --> 00:15:00,440
forget how to run it let's see that's

00:15:01,880 --> 00:15:12,180
one this so let's run it and you can see

00:15:09,270 --> 00:15:14,310
boom it SS aged into the server and

00:15:12,180 --> 00:15:15,810
added this user so the server that I'm

00:15:14,310 --> 00:15:18,000
talking about in the background I have

00:15:15,810 --> 00:15:20,550
this window right here which is this

00:15:18,000 --> 00:15:21,480
random Boston 2020 BM that I'm just

00:15:20,550 --> 00:15:24,720
running because I don't want to run all

00:15:21,480 --> 00:15:26,720
this junk on my machine and this is just

00:15:24,720 --> 00:15:29,520
a view of that server that make sense

00:15:26,720 --> 00:15:31,320
yeah so that's the past like crappy

00:15:29,520 --> 00:15:35,160
shell scripts that I wrote or you wrote

00:15:31,320 --> 00:15:37,650
of everyone wrote all hack together we

00:15:35,160 --> 00:15:40,980
can do better I'll actually just show

00:15:37,650 --> 00:15:42,310
you on the actual server itself a little

00:15:40,980 --> 00:15:44,290
older

00:15:42,310 --> 00:15:45,250
here's a really simple way how people

00:15:44,290 --> 00:15:47,080
did this I'm sort of distilled

00:15:45,250 --> 00:15:50,500
everything down you have a really simple

00:15:47,080 --> 00:15:52,960
script that's just checking if the user

00:15:50,500 --> 00:15:54,130
exists and if it doesn't it runs it why

00:15:52,960 --> 00:15:58,690
are we doing this why are we checking

00:15:54,130 --> 00:16:00,070
before we add I think I might have heard

00:15:58,690 --> 00:16:01,660
it because we want the thing to be item

00:16:00,070 --> 00:16:03,280
potent right so if something is wrong

00:16:01,660 --> 00:16:05,020
you just run the script and it should be

00:16:03,280 --> 00:16:08,860
safe you could run it many times so if

00:16:05,020 --> 00:16:15,640
we run it you can see think of how long

00:16:08,860 --> 00:16:19,660
it takes it's creating the user hello I

00:16:15,640 --> 00:16:24,160
have to talk people just into the mic

00:16:19,660 --> 00:16:25,540
and then taking here we alright so thank

00:16:24,160 --> 00:16:31,600
you to my mic stand over here round of

00:16:25,540 --> 00:16:33,730
applause so yeah I just ran the bash

00:16:31,600 --> 00:16:35,650
script and you can see it creates the

00:16:33,730 --> 00:16:36,790
users which you all see they have added

00:16:35,650 --> 00:16:38,650
here but if you run it again you can see

00:16:36,790 --> 00:16:40,510
it can go faster because it doesn't have

00:16:38,650 --> 00:16:45,430
to do the work to add the users make

00:16:40,510 --> 00:16:48,400
sense let's move on some problems with

00:16:45,430 --> 00:16:50,320
it so bash is is a super kind of weird

00:16:48,400 --> 00:16:52,000
language I love writing and bash but

00:16:50,320 --> 00:16:54,550
it's a little idiosyncratic and it can

00:16:52,000 --> 00:16:56,380
be a little problematic so any code we

00:16:54,550 --> 00:16:58,300
can move away from bash not because it's

00:16:56,380 --> 00:16:59,860
not awesome but into safer things will

00:16:58,300 --> 00:17:03,040
be good for safety and liability of

00:16:59,860 --> 00:17:04,959
infrastructure here's an old tool that I

00:17:03,040 --> 00:17:06,370
never used but if I don't mention it

00:17:04,959 --> 00:17:08,110
Steve will murder me because he goes to

00:17:06,370 --> 00:17:09,400
this conference that I go to he is one

00:17:08,110 --> 00:17:11,709
of these early people that worked on

00:17:09,400 --> 00:17:13,449
this basically it was kind of like a

00:17:11,709 --> 00:17:16,180
make file if you ever seen a make file

00:17:13,449 --> 00:17:18,209
and the important takeaway is that it

00:17:16,180 --> 00:17:20,530
was this make file that would run and

00:17:18,209 --> 00:17:22,630
what's cool about that is it actually

00:17:20,530 --> 00:17:23,980
basically has a dag so it's showing the

00:17:22,630 --> 00:17:26,020
dependencies you want to do on your

00:17:23,980 --> 00:17:27,339
certain machine in a certain order so

00:17:26,020 --> 00:17:29,380
it's one of the earliest uses of an

00:17:27,339 --> 00:17:30,970
actual dag this graph data structure

00:17:29,380 --> 00:17:32,680
that I showed at the beginning in

00:17:30,970 --> 00:17:34,390
automation so definitely for my time

00:17:32,680 --> 00:17:37,360
let's look at cfengine who's heard of

00:17:34,390 --> 00:17:39,430
cfengine I was going to show like a CF

00:17:37,360 --> 00:17:41,650
engine version one demo but I figured I

00:17:39,430 --> 00:17:46,400
wouldn't be too mean so I have actually

00:17:41,650 --> 00:17:49,400
here ACF engine demo a little bit

00:17:46,400 --> 00:17:51,050
a little bit more complicated just to

00:17:49,400 --> 00:17:54,140
show you same sort of thing this is how

00:17:51,050 --> 00:17:55,670
you look at the cfengine code here

00:17:54,140 --> 00:17:58,610
there's a list of users that I wanted to

00:17:55,670 --> 00:17:59,990
create and here's the users sort of

00:17:58,610 --> 00:18:02,780
declaration that shows what's going to

00:17:59,990 --> 00:18:04,490
happen to them for me at least cfengine

00:18:02,780 --> 00:18:06,380
is a little bit more complicated to read

00:18:04,490 --> 00:18:07,850
and there's a lot of boilerplate and a

00:18:06,380 --> 00:18:10,730
lot of sort of he wants us about the

00:18:07,850 --> 00:18:13,460
tool that I found very confusing but

00:18:10,730 --> 00:18:15,770
just to show you we can we can be mean

00:18:13,460 --> 00:18:17,080
and tying all these tools just as you

00:18:15,770 --> 00:18:21,650
can see the users are starting to get

00:18:17,080 --> 00:18:23,630
created right now as we will watch it

00:18:21,650 --> 00:18:25,040
has this whole thing Marc bridges with

00:18:23,630 --> 00:18:26,450
promise theory which to be honest I

00:18:25,040 --> 00:18:28,970
don't really understand I think I

00:18:26,450 --> 00:18:31,730
understand but it's a little over my

00:18:28,970 --> 00:18:33,050
head but it does it it does a job and a

00:18:31,730 --> 00:18:36,140
lot of people use it and the newer

00:18:33,050 --> 00:18:39,140
versions are apparently quite good there

00:18:36,140 --> 00:18:43,160
are some drawbacks so for me I think

00:18:39,140 --> 00:18:44,990
that in the modern day tool we want our

00:18:43,160 --> 00:18:46,850
tools if possible written in memory safe

00:18:44,990 --> 00:18:49,370
languages and if not our tools at least

00:18:46,850 --> 00:18:50,900
our code and it's mostly written in C

00:18:49,370 --> 00:18:53,000
which i think is kind of a bit of a

00:18:50,900 --> 00:18:55,220
barrier going forward there's some

00:18:53,000 --> 00:18:57,440
advantages but also some disadvantages

00:18:55,220 --> 00:18:58,760
so something to think about and if you

00:18:57,440 --> 00:19:01,310
actually look deep into the cfengine

00:18:58,760 --> 00:19:02,720
sort of ethos and philosophy there's

00:19:01,310 --> 00:19:04,760
actually some really good design ideas

00:19:02,720 --> 00:19:07,790
that newer tools have forgotten about

00:19:04,760 --> 00:19:09,530
entirely so hopefully going forward will

00:19:07,790 --> 00:19:12,350
actually study the past and not make

00:19:09,530 --> 00:19:13,730
these mistakes over again let's move a

00:19:12,350 --> 00:19:15,530
little bit more into the future

00:19:13,730 --> 00:19:17,210
puppet someone's probably is puppet in

00:19:15,530 --> 00:19:20,690
this room it was the first mainstream

00:19:17,210 --> 00:19:21,740
tool that I used past bash I don't

00:19:20,690 --> 00:19:23,180
really know if it's still growing

00:19:21,740 --> 00:19:25,670
I think the puppets kind of like in the

00:19:23,180 --> 00:19:27,080
danger zone because my opinion maybe

00:19:25,670 --> 00:19:28,490
this is a bit rude but I don't think

00:19:27,080 --> 00:19:30,770
they've been innovating anymore they're

00:19:28,490 --> 00:19:32,000
kind of just plateaued and stopped and

00:19:30,770 --> 00:19:33,590
they came out with this Orchestrator

00:19:32,000 --> 00:19:35,840
tool called bolt which is just an ADD

00:19:33,590 --> 00:19:37,010
spittle copy so I think they need to

00:19:35,840 --> 00:19:38,810
shake things up because they were so

00:19:37,010 --> 00:19:40,430
close to what I wanted I was using

00:19:38,810 --> 00:19:42,380
puppet for so many years in particular

00:19:40,430 --> 00:19:43,559
the way you describe what you want to

00:19:42,380 --> 00:19:47,330
have done is with a DSL

00:19:43,559 --> 00:19:49,799
so it's just the main specific language

00:19:47,330 --> 00:19:53,220
let's do a little puppet demo let's see

00:19:49,799 --> 00:19:57,419
a puppet demo yeah so here's my little

00:19:53,220 --> 00:19:59,909
puppet code very simple you have this

00:19:57,419 --> 00:20:01,970
little user defined and I have three

00:19:59,909 --> 00:20:05,279
puppet users here that I want to run

00:20:01,970 --> 00:20:07,649
let's just be cheeky again a little time

00:20:05,279 --> 00:20:09,210
it just vegan see how long it takes this

00:20:07,649 --> 00:20:15,350
was a lot of my life for five years

00:20:09,210 --> 00:20:16,889
watching puppet runs go by hours days so

00:20:15,350 --> 00:20:18,450
hot so bad

00:20:16,889 --> 00:20:24,869
we got the job done we got our three

00:20:18,450 --> 00:20:26,669
years users created which was nice it's

00:20:24,869 --> 00:20:29,159
changed quite a lot over the years so it

00:20:26,669 --> 00:20:30,749
didn't used to have types and all these

00:20:29,159 --> 00:20:32,519
fancy things built and really at the

00:20:30,749 --> 00:20:34,470
core so newer versions are a lot safer

00:20:32,519 --> 00:20:37,529
but a puppet still makes the mistake

00:20:34,470 --> 00:20:38,940
that a lot of dsls do is it a lot of

00:20:37,529 --> 00:20:41,129
programming that we just do rather they

00:20:38,940 --> 00:20:41,820
have nulls so you can have the

00:20:41,129 --> 00:20:42,990
equivalent of like a

00:20:41,820 --> 00:20:46,590
nullpointerexception

00:20:42,990 --> 00:20:48,029
in puppet undefined and that's a problem

00:20:46,590 --> 00:20:50,519
because if you have that you can crash

00:20:48,029 --> 00:20:52,980
so safe languages like Haskell and so on

00:20:50,519 --> 00:20:55,499
don't have these values so you cannot

00:20:52,980 --> 00:20:57,210
crash in that same way and I think if we

00:20:55,499 --> 00:20:58,499
want to build robust infrastructure we

00:20:57,210 --> 00:21:00,240
have to think about using really safe

00:20:58,499 --> 00:21:02,820
languages memory safe language but also

00:21:00,240 --> 00:21:05,039
type safe languages that don't have any

00:21:02,820 --> 00:21:06,629
problems these are solve problems we're

00:21:05,039 --> 00:21:08,100
just afraid of them just some technical

00:21:06,629 --> 00:21:10,860
things about puppet I'm doing this for

00:21:08,100 --> 00:21:13,110
all the new tools it's mostly in Ruby

00:21:10,860 --> 00:21:15,029
and closure for the new server it has

00:21:13,110 --> 00:21:16,799
this puppet DSL the topology it's a

00:21:15,029 --> 00:21:18,840
client-server thing so we saw that the

00:21:16,799 --> 00:21:20,850
beginning and this is kind of a

00:21:18,840 --> 00:21:23,129
disappointment it used to be gplv2 and

00:21:20,850 --> 00:21:24,570
then they you know wanted to do the open

00:21:23,129 --> 00:21:27,389
core thing it moved a lot of it to

00:21:24,570 --> 00:21:31,049
apache license which was I think kind of

00:21:27,389 --> 00:21:32,580
a mistake a long time ago but the

00:21:31,049 --> 00:21:34,350
biggest thing with puppet that stood out

00:21:32,580 --> 00:21:36,450
for me I didn't realize until I was

00:21:34,350 --> 00:21:38,580
using it for at least two or three years

00:21:36,450 --> 00:21:39,929
puppet has the puppet server and then it

00:21:38,580 --> 00:21:41,659
has the puppet agent that runs on all

00:21:39,929 --> 00:21:43,740
the clients and they have this strange

00:21:41,659 --> 00:21:45,840
separation of some code runs on the

00:21:43,740 --> 00:21:47,260
server and some code runs on the client

00:21:45,840 --> 00:21:49,090
and they go back and forth

00:21:47,260 --> 00:21:51,070
and I can explain to you how it works

00:21:49,090 --> 00:21:53,050
but it's not clear why this makes sense

00:21:51,070 --> 00:21:54,430
I've talked to some helping people

00:21:53,050 --> 00:21:56,770
they've had some arguments which I

00:21:54,430 --> 00:21:57,910
didn't really agree with but yeah so

00:21:56,770 --> 00:21:58,810
it's a little bit strange and it can be

00:21:57,910 --> 00:22:00,940
confusing when you're writing code

00:21:58,810 --> 00:22:02,910
dealing with this stuff so something to

00:22:00,940 --> 00:22:05,260
think about if you look at puppet chef

00:22:02,910 --> 00:22:07,900
chef basically is like kind of a fork of

00:22:05,260 --> 00:22:10,740
puppet puppet the chef people didn't

00:22:07,900 --> 00:22:14,350
want a DSL they wanted pure Ruby code

00:22:10,740 --> 00:22:18,130
effectively and so I'll see you want to

00:22:14,350 --> 00:22:23,680
see some Chef anybody want to see some

00:22:18,130 --> 00:22:25,720
chef all right cool why not so here's

00:22:23,680 --> 00:22:28,030
some chef and here's I'll just show you

00:22:25,720 --> 00:22:31,210
this in vim so you can see a little bit

00:22:28,030 --> 00:22:32,500
nicer so here's the Ruby code and watch

00:22:31,210 --> 00:22:35,680
here I'm doing this puts which is

00:22:32,500 --> 00:22:38,710
basically printf in Ruby I'm doing one

00:22:35,680 --> 00:22:40,650
at the start one at the end down here

00:22:38,710 --> 00:22:44,140
and in the middle I have all these these

00:22:40,650 --> 00:22:48,040
user declarations okay and watch what

00:22:44,140 --> 00:22:54,190
happens when I run the code and I'll

00:22:48,040 --> 00:22:57,100
just so we'll run the code run it kill

00:22:54,190 --> 00:22:59,590
it and time it oh sorry so it already

00:22:57,100 --> 00:23:01,630
did a bit of work so deduct a few

00:22:59,590 --> 00:23:04,720
seconds so look look right here here's

00:23:01,630 --> 00:23:06,820
the put these are my two messages that

00:23:04,720 --> 00:23:09,220
happen all the start and then the users

00:23:06,820 --> 00:23:11,170
get created so Ruby the way it works

00:23:09,220 --> 00:23:12,730
it's kind of a little strange but what's

00:23:11,170 --> 00:23:15,400
actually happening if all the code runs

00:23:12,730 --> 00:23:18,700
and then during the running these

00:23:15,400 --> 00:23:20,920
statements these resources get evaluated

00:23:18,700 --> 00:23:22,510
and stored somewhere and then at the end

00:23:20,920 --> 00:23:24,400
it clicks them all and then applies them

00:23:22,510 --> 00:23:26,110
so it's kind of like a two-stage thing

00:23:24,400 --> 00:23:27,730
if you've ever done vagrant and written

00:23:26,110 --> 00:23:30,880
code in a vagrant file it works the same

00:23:27,730 --> 00:23:32,770
way it's very common for ruby dsls but i

00:23:30,880 --> 00:23:34,060
think this is super confusing because if

00:23:32,770 --> 00:23:36,430
you think about coding you have to think

00:23:34,060 --> 00:23:40,630
in terms of the code execution and then

00:23:36,430 --> 00:23:42,880
the evaluation at the end which is super

00:23:40,630 --> 00:23:44,740
super confusing and the bad thing is you

00:23:42,880 --> 00:23:47,260
have this full imperative language which

00:23:44,740 --> 00:23:48,850
i think is quite dangerous so if you're

00:23:47,260 --> 00:23:50,100
making off by one error and you blow

00:23:48,850 --> 00:23:53,790
away a data center that could be

00:23:50,100 --> 00:23:55,230
right so we're getting into the modern

00:23:53,790 --> 00:23:57,470
era where things should be safe and

00:23:55,230 --> 00:24:01,200
reliable and so that's what my big

00:23:57,470 --> 00:24:03,050
problems with chef I don't know what's

00:24:01,200 --> 00:24:05,280
been happening like all my chef friends

00:24:03,050 --> 00:24:07,410
stopped using chef when they started

00:24:05,280 --> 00:24:08,430
doing the like US prisons thing or

00:24:07,410 --> 00:24:10,710
something I don't know what's going on

00:24:08,430 --> 00:24:12,810
but there's a lot of good people and

00:24:10,710 --> 00:24:13,320
smart people at chef and that's what it

00:24:12,810 --> 00:24:17,250
looks like

00:24:13,320 --> 00:24:18,420
so yeah random chef some random of

00:24:17,250 --> 00:24:21,750
technical things it's implemented in

00:24:18,420 --> 00:24:24,720
Ruby it has this Ruby DSL using Ruby

00:24:21,750 --> 00:24:26,340
code with special resources it also has

00:24:24,720 --> 00:24:28,050
a client-server topology all of these

00:24:26,340 --> 00:24:28,920
demos I'm not running this chef server

00:24:28,050 --> 00:24:30,540
and the puppet server

00:24:28,920 --> 00:24:33,390
I'm just running them in standalone so

00:24:30,540 --> 00:24:36,810
you can see quickly its apache license

00:24:33,390 --> 00:24:38,340
as everything these days and the thing

00:24:36,810 --> 00:24:40,200
that sort of disappointed about is even

00:24:38,340 --> 00:24:42,000
though it has full Ruby language it

00:24:40,200 --> 00:24:44,490
hasn't delivered on building fully

00:24:42,000 --> 00:24:46,050
autonomous systems right so I don't know

00:24:44,490 --> 00:24:47,610
that this proved that having a full

00:24:46,050 --> 00:24:50,160
programming language is really the

00:24:47,610 --> 00:24:53,210
missing piece in config management does

00:24:50,160 --> 00:24:56,430
that make sense that's just my opinion

00:24:53,210 --> 00:24:59,150
so ansible everyone's favorite I saw it

00:24:56,430 --> 00:25:01,530
we got the farm boy up in the front I

00:24:59,150 --> 00:25:03,900
was really shocked how popular hands

00:25:01,530 --> 00:25:05,760
pulled on so quickly I used to work at

00:25:03,900 --> 00:25:07,020
this company called Red Hat and during

00:25:05,760 --> 00:25:09,420
that time they fired ansible

00:25:07,020 --> 00:25:11,070
and that was a big surprise there are

00:25:09,420 --> 00:25:13,470
some problems with ansible it's great

00:25:11,070 --> 00:25:15,150
for small things but topologically it's

00:25:13,470 --> 00:25:16,860
got this design architecture where you

00:25:15,150 --> 00:25:18,480
have that Orchestrator that's going out

00:25:16,860 --> 00:25:21,330
and doing stuff so I've seen customers

00:25:18,480 --> 00:25:24,570
with 50 hosts or 100 hosts and they're

00:25:21,330 --> 00:25:26,760
hitting like really big walls it's very

00:25:24,570 --> 00:25:28,860
slow I thought stuff isn't isn't very

00:25:26,760 --> 00:25:30,360
fast algorithm you keep every time it

00:25:28,860 --> 00:25:32,520
runs has to recheck everything so that

00:25:30,360 --> 00:25:35,100
is also very slow so it's great and

00:25:32,520 --> 00:25:36,830
useful for small things but I think in

00:25:35,100 --> 00:25:40,410
the longer term without some clever

00:25:36,830 --> 00:25:42,240
building of your ansible setup it's not

00:25:40,410 --> 00:25:43,470
really scaling and that's the problem we

00:25:42,240 --> 00:25:44,640
shouldn't have to be clever to do all of

00:25:43,470 --> 00:25:46,530
these things you want our tools to help

00:25:44,640 --> 00:25:49,530
us we don't wanna be working around our

00:25:46,530 --> 00:25:51,990
tools and the thing that's absurd for me

00:25:49,530 --> 00:25:52,559
is this yeah thing I just I'm not that

00:25:51,990 --> 00:25:54,120
in love

00:25:52,559 --> 00:25:56,519
the amel that I want to be writing this

00:25:54,120 --> 00:25:58,470
every day and fun fact actually the

00:25:56,519 --> 00:25:59,879
llamo thing was a total accident from

00:25:58,470 --> 00:26:02,399
what I heard I was talking to someone

00:25:59,879 --> 00:26:03,809
and basically the animal front end was

00:26:02,399 --> 00:26:05,549
just temporary and was meant to be

00:26:03,809 --> 00:26:07,289
replaced by language so that's a lot of

00:26:05,549 --> 00:26:11,879
work and just never happened and it's

00:26:07,289 --> 00:26:14,220
stuck so who knows but nevertheless do

00:26:11,879 --> 00:26:16,559
you want to see an a school demo you

00:26:14,220 --> 00:26:18,690
want to see an ansible demo all right

00:26:16,559 --> 00:26:20,460
thank you trying to make this a little

00:26:18,690 --> 00:26:22,799
bit entertaining because it's a little

00:26:20,460 --> 00:26:25,769
bit of the same so kind of simple here

00:26:22,799 --> 00:26:27,929
here's a little users file it's a it's a

00:26:25,769 --> 00:26:31,080
a llamo file with the list of users to

00:26:27,929 --> 00:26:36,749
create not anything revolutionary and if

00:26:31,080 --> 00:26:39,419
we run it I forgot to time it the cow is

00:26:36,749 --> 00:26:46,649
creating users i've time to sip some

00:26:39,419 --> 00:26:49,740
water I mean you can tell it's not super

00:26:46,649 --> 00:26:54,509
fast and even if I run it again it'll go

00:26:49,740 --> 00:26:58,590
a bit faster but even with the users all

00:26:54,509 --> 00:27:00,240
created it takes some time if we

00:26:58,590 --> 00:27:03,059
actually want to here we can actually

00:27:00,240 --> 00:27:05,419
time it can just delete all the old

00:27:03,059 --> 00:27:05,419
users

00:27:06,880 --> 00:27:15,490
you can see them disappearing on the

00:27:08,920 --> 00:27:17,140
left and if we run it can see I like the

00:27:15,490 --> 00:27:20,940
cow cows a is kind of one of my favorite

00:27:17,140 --> 00:27:22,660
things so you get points for that but

00:27:20,940 --> 00:27:24,640
imagine when you're doing big

00:27:22,660 --> 00:27:26,440
complicated things over SSH too many

00:27:24,640 --> 00:27:28,060
machines you can see it takes quite a

00:27:26,440 --> 00:27:31,600
lot of time to create three users right

00:27:28,060 --> 00:27:32,170
am I crazy or is this a little slow I'm

00:27:31,600 --> 00:27:37,540
not crazy

00:27:32,170 --> 00:27:38,590
thank you so what I mean but heck

00:27:37,540 --> 00:27:41,500
there's gonna be louder if you're gonna

00:27:38,590 --> 00:27:42,940
heckle anyway so yeah but it's

00:27:41,500 --> 00:27:44,530
incredibly popular it's incredibly

00:27:42,940 --> 00:27:46,060
useful and for simple things I still

00:27:44,530 --> 00:27:47,980
think it's a really good solution so

00:27:46,060 --> 00:27:49,690
just think about it because sometimes

00:27:47,980 --> 00:27:51,640
you get invested in the simple solution

00:27:49,690 --> 00:27:54,930
and it gets much bigger and then over

00:27:51,640 --> 00:27:58,090
time things if you get a little bit

00:27:54,930 --> 00:28:00,010
technical wise implement in Python as

00:27:58,090 --> 00:28:01,720
you might know the sea animal interface

00:28:00,010 --> 00:28:03,700
is not exactly what I want it's a

00:28:01,720 --> 00:28:06,520
central Orchestrator it's also config

00:28:03,700 --> 00:28:08,230
management tool it's gplv3

00:28:06,520 --> 00:28:10,420
which is super funny because for some

00:28:08,230 --> 00:28:12,580
reason when they release a pencil tower

00:28:10,420 --> 00:28:15,370
source code they decided for some

00:28:12,580 --> 00:28:16,720
unknown reason to pick the apache

00:28:15,370 --> 00:28:18,910
license instead of keeping the same

00:28:16,720 --> 00:28:20,950
license for some reason so something

00:28:18,910 --> 00:28:22,270
funny is going on at Red Hat with the

00:28:20,950 --> 00:28:24,510
legal department you'll have to find out

00:28:22,270 --> 00:28:26,970
why they chose that different license

00:28:24,510 --> 00:28:31,150
and I told you about the animal friend

00:28:26,970 --> 00:28:34,720
docker run here about docker is donker

00:28:31,150 --> 00:28:37,750
config management tool no it's not don't

00:28:34,720 --> 00:28:39,610
be misled so when dr. sorted started

00:28:37,750 --> 00:28:41,110
getting popular people were always

00:28:39,610 --> 00:28:42,850
saying okay this is what's gonna replace

00:28:41,110 --> 00:28:45,280
the fig management and that's just like

00:28:42,850 --> 00:28:46,750
the biggest lie it's not it's a

00:28:45,280 --> 00:28:48,940
different technology stop thinking of it

00:28:46,750 --> 00:28:50,590
as the same technology and the saddest

00:28:48,940 --> 00:28:52,660
thing is that for configuring your

00:28:50,590 --> 00:28:56,860
docker images and your docker containers

00:28:52,660 --> 00:28:58,540
how do you do it shell scripts right

00:28:56,860 --> 00:29:00,130
it's sort of like going back to the very

00:28:58,540 --> 00:29:01,480
beginning we were like people shouldn't

00:29:00,130 --> 00:29:03,070
use shell scripts to define our

00:29:01,480 --> 00:29:04,180
infrastructure oh now we have talker so

00:29:03,070 --> 00:29:07,360
we're gonna start using shell scripts

00:29:04,180 --> 00:29:10,060
again so your best bet is to basically

00:29:07,360 --> 00:29:11,980
not use docker or use like a tool like

00:29:10,060 --> 00:29:16,590
puppet or chef to build the images or

00:29:11,980 --> 00:29:16,590
something else it's just kind of absurd

00:29:16,950 --> 00:29:22,200
and I just like the docker project is

00:29:19,950 --> 00:29:25,019
this huge enormous sprawling giant

00:29:22,200 --> 00:29:27,240
massive things which is just I just

00:29:25,019 --> 00:29:29,549
think it's just over engineered and in

00:29:27,240 --> 00:29:30,990
all the wrong places if you are into the

00:29:29,549 --> 00:29:32,850
container things I'm not an G container

00:29:30,990 --> 00:29:35,549
there's this lovely project called

00:29:32,850 --> 00:29:37,289
system the end spawn which is just light

00:29:35,549 --> 00:29:39,059
and works and integrates and the C

00:29:37,289 --> 00:29:40,409
groups and all the magic it's part of

00:29:39,059 --> 00:29:42,779
the SystemVue project which is a good

00:29:40,409 --> 00:29:43,350
thing because they do great work and so

00:29:42,779 --> 00:29:45,679
check it out

00:29:43,350 --> 00:29:49,200
but I'm here to give you a docker demo

00:29:45,679 --> 00:29:50,760
so I'll just show you how it works I had

00:29:49,200 --> 00:29:54,600
to run it last night so I get everything

00:29:50,760 --> 00:29:56,549
cached so if I just show you in here I

00:29:54,600 --> 00:29:59,789
have the docker file really simple thing

00:29:56,549 --> 00:30:01,169
these sort of verbs and each one of

00:29:59,789 --> 00:30:03,510
these becomes like a layer in the

00:30:01,169 --> 00:30:05,100
filesystem image just kind of strange a

00:30:03,510 --> 00:30:07,740
big problem of this is if you build this

00:30:05,100 --> 00:30:10,169
image and one of these is this update

00:30:07,740 --> 00:30:12,120
command you'll never know when that

00:30:10,169 --> 00:30:15,299
command is still so it will never know

00:30:12,120 --> 00:30:16,710
to re-up date things that were once we

00:30:15,299 --> 00:30:18,299
updated you know what I mean

00:30:16,710 --> 00:30:19,740
so basically if you create this if you

00:30:18,299 --> 00:30:21,659
run this and we'll build this they'll

00:30:19,740 --> 00:30:22,019
say this hasn't changed therefore below

00:30:21,659 --> 00:30:23,840
it

00:30:22,019 --> 00:30:26,309
I don't rerun any of the old commands

00:30:23,840 --> 00:30:28,740
same thing this doesn't change this

00:30:26,309 --> 00:30:30,600
command runs once it never knows that

00:30:28,740 --> 00:30:32,159
it's stale so we'll never be update it

00:30:30,600 --> 00:30:34,200
so to work around these things there's

00:30:32,159 --> 00:30:36,179
all sorts of packs and variable names

00:30:34,200 --> 00:30:38,190
and modified time stuff but it's it's

00:30:36,179 --> 00:30:41,460
the whole design of the docker file for

00:30:38,190 --> 00:30:43,260
me does not excite me so but I built

00:30:41,460 --> 00:30:46,010
this last night and I can show you how

00:30:43,260 --> 00:30:50,669
it works you basically build it like

00:30:46,010 --> 00:30:52,380
this which I did it took quite a while

00:30:50,669 --> 00:30:54,539
last night but it's done now so it's

00:30:52,380 --> 00:30:57,240
item foamed and doesn't rebuild it and

00:30:54,539 --> 00:30:59,730
then to run it will just run it over

00:30:57,240 --> 00:31:03,340
here and you can see now you're inside

00:30:59,730 --> 00:31:06,910
this container and you can do stuff like

00:31:03,340 --> 00:31:08,740
no I don't know oh I don't really trust

00:31:06,910 --> 00:31:10,690
docker to not delete my machine so I

00:31:08,740 --> 00:31:17,170
won't like rake it too much but if you

00:31:10,690 --> 00:31:19,660
kill it and then you go back in there's

00:31:17,170 --> 00:31:21,610
options back so yeah you have to

00:31:19,660 --> 00:31:22,960
basically build stateless applications

00:31:21,610 --> 00:31:25,240
which is actually a good thing but

00:31:22,960 --> 00:31:26,380
aren't actually a lot of people software

00:31:25,240 --> 00:31:28,660
applications aren't really ready for

00:31:26,380 --> 00:31:35,020
this environment so there's some

00:31:28,660 --> 00:31:36,580
challenges that make sense yeah some

00:31:35,020 --> 00:31:38,680
quick technical things it's implemented

00:31:36,580 --> 00:31:40,840
in golang I actually like the language a

00:31:38,680 --> 00:31:42,610
lot I don't like the way the project is

00:31:40,840 --> 00:31:44,380
run all the time and I don't like the

00:31:42,610 --> 00:31:46,570
tools around going but going itself as a

00:31:44,380 --> 00:31:49,720
lovely language as long as they don't

00:31:46,570 --> 00:31:51,370
add generics it has this really poor

00:31:49,720 --> 00:31:53,020
interface for describing what you want

00:31:51,370 --> 00:31:54,400
how you build your containers I don't

00:31:53,020 --> 00:31:59,320
think this is how it should be done but

00:31:54,400 --> 00:32:04,780
they're so popular um it's not a config

00:31:59,320 --> 00:32:06,550
management tool what is it yes what kind

00:32:04,780 --> 00:32:07,390
of tool is it remember those boring

00:32:06,550 --> 00:32:11,440
sides in the beginning

00:32:07,390 --> 00:32:14,740
somebody provisioning tool right so it's

00:32:11,440 --> 00:32:16,030
what gets you the base thing running so

00:32:14,740 --> 00:32:17,440
that you can run a config management to

00:32:16,030 --> 00:32:19,870
build your image and everything that

00:32:17,440 --> 00:32:22,090
runs inside it also apache license big

00:32:19,870 --> 00:32:23,650
surprise and one good thing is it

00:32:22,090 --> 00:32:25,330
actually helped make containers

00:32:23,650 --> 00:32:27,280
mainstream again so i think there's some

00:32:25,330 --> 00:32:29,020
potential there a quick thing on

00:32:27,280 --> 00:32:31,930
kubernetes because everyone is it's not

00:32:29,020 --> 00:32:34,270
a config management tool what is it it's

00:32:31,930 --> 00:32:35,620
an Orchestrator yeah it cannot replace

00:32:34,270 --> 00:32:37,930
config management that's completely

00:32:35,620 --> 00:32:42,550
false there's no really easy way to

00:32:37,930 --> 00:32:44,170
bootstrap the XD cluster and put it into

00:32:42,550 --> 00:32:45,820
production it's like one of these

00:32:44,170 --> 00:32:48,220
unsolved problems that they just say oh

00:32:45,820 --> 00:32:52,060
we don't know how to do this so run it

00:32:48,220 --> 00:32:53,650
in Google cloud or Amazon and just

00:32:52,060 --> 00:32:55,570
thinking about infrastructure and

00:32:53,650 --> 00:32:57,430
real-time systems and everything that

00:32:55,570 --> 00:32:59,380
happens the llamÃ³ front-end just doesn't

00:32:57,430 --> 00:33:01,210
do it for me like it's not a proper way

00:32:59,380 --> 00:33:04,000
to describe everything so there's other

00:33:01,210 --> 00:33:05,680
solutions like helm and cue and all

00:33:04,000 --> 00:33:07,510
these other tools to add on top of it to

00:33:05,680 --> 00:33:08,740
make it more sensible but it hasn't

00:33:07,510 --> 00:33:11,140
really

00:33:08,740 --> 00:33:13,480
for me employment going again llamo

00:33:11,140 --> 00:33:15,460
format orchestrators we said it has this

00:33:13,480 --> 00:33:18,160
evil google CLA so you should not send

00:33:15,460 --> 00:33:19,540
them patches and the paper that it's all

00:33:18,160 --> 00:33:21,550
based on if you actually read the board

00:33:19,540 --> 00:33:23,110
paper there's very little details of

00:33:21,550 --> 00:33:25,120
very little information in that so the

00:33:23,110 --> 00:33:26,980
whole design premise they tried to

00:33:25,120 --> 00:33:30,490
convince everyone then Italy convinced

00:33:26,980 --> 00:33:35,110
me you want to see a demo just kidding I

00:33:30,490 --> 00:33:36,970
am NOT giving you a demo I'm a there's

00:33:35,110 --> 00:33:38,650
recorded demos I've given talks in the

00:33:36,970 --> 00:33:40,090
past where I did some food some cube

00:33:38,650 --> 00:33:43,000
stuff so if you really want to see some

00:33:40,090 --> 00:33:44,920
basics look on my website so I'm not

00:33:43,000 --> 00:33:46,809
even installing this in the IBM save

00:33:44,920 --> 00:33:48,250
yourself use something different let's

00:33:46,809 --> 00:33:50,110
look at the future so this is where I am

00:33:48,250 --> 00:33:51,429
super biased okay because I'm working on

00:33:50,110 --> 00:33:54,130
a tool that I think is part of the

00:33:51,429 --> 00:33:55,600
future but I want you to decide and tell

00:33:54,130 --> 00:33:57,040
me what you think so these are some of

00:33:55,600 --> 00:33:57,880
the things are wandering the tool wanted

00:33:57,040 --> 00:33:59,740
to be safe

00:33:57,880 --> 00:34:02,920
powerful reactive easy to reason about

00:33:59,740 --> 00:34:06,330
and so on so you want to see a demo ok

00:34:02,920 --> 00:34:08,649
so here's some code it's hard to see and

00:34:06,330 --> 00:34:11,320
I'm gonna go a little bit fast because I

00:34:08,649 --> 00:34:15,129
lost 5 min at the beginning but let's

00:34:11,320 --> 00:34:19,950
just kill this for now so over here we

00:34:15,129 --> 00:34:19,950
have our little MGMT thing again this is

00:34:20,070 --> 00:34:25,840
so I'm gonna run the MGMT on the left

00:34:23,139 --> 00:34:30,010
and I'm just gonna show you this code

00:34:25,840 --> 00:34:32,169
first okay so this is the code the

00:34:30,010 --> 00:34:33,850
syntax highlighting isn't something that

00:34:32,169 --> 00:34:34,810
I have yet so I'm sorry for that but

00:34:33,850 --> 00:34:36,280
basically if you can see there's

00:34:34,810 --> 00:34:37,990
different statements there's different

00:34:36,280 --> 00:34:40,119
expressions so there's this date time

00:34:37,990 --> 00:34:42,790
malfunction which we're adding to this

00:34:40,119 --> 00:34:43,929
variable a year which is over here and

00:34:42,790 --> 00:34:46,240
then we put all these values in the

00:34:43,929 --> 00:34:48,669
struct along with the load and then all

00:34:46,240 --> 00:34:50,679
those variables go into this big

00:34:48,669 --> 00:34:53,230
template at the bottom which we're going

00:34:50,679 --> 00:34:55,440
to print out so let's run this on the

00:34:53,230 --> 00:34:55,440
left

00:35:03,380 --> 00:35:07,530
it's kind of my dev environment and

00:35:05,610 --> 00:35:21,950
there's a bug in I'm still feeling let's

00:35:07,530 --> 00:35:21,950
see if this can work on seconds

00:35:27,950 --> 00:35:35,720
oh it I gotta use the different versions

00:35:29,960 --> 00:35:38,020
on second releases one second sorry

00:35:35,720 --> 00:35:38,020
about that

00:35:44,890 --> 00:35:54,500
it's my password is a password if anyone

00:35:47,690 --> 00:35:58,940
sees my laptop these packages are all

00:35:54,500 --> 00:36:05,540
online so you can try them out I think

00:35:58,940 --> 00:36:08,710
this should work a bit better all right

00:36:05,540 --> 00:36:08,710
on second

00:36:17,480 --> 00:36:22,610
okay

00:36:20,109 --> 00:36:25,810
let's run this demo

00:36:22,610 --> 00:36:27,890
okay so MGMT is running on the left and

00:36:25,810 --> 00:36:30,650
over here I've told it to create this

00:36:27,890 --> 00:36:33,350
one file date time and if you see it's

00:36:30,650 --> 00:36:36,920
one of a bunch of text in it but if I

00:36:33,350 --> 00:36:38,810
watch - n01 just to show you what's

00:36:36,920 --> 00:36:41,030
happening in real time in the file you

00:36:38,810 --> 00:36:43,310
can see that date time function is

00:36:41,030 --> 00:36:46,010
actually really a ting every second in

00:36:43,310 --> 00:36:48,860
that small amount of dsl code and if it

00:36:46,010 --> 00:36:51,320
does that it can change the file because

00:36:48,860 --> 00:36:52,970
it sees what has to be updated and so on

00:36:51,320 --> 00:36:55,730
and you can see I'm printing out the

00:36:52,970 --> 00:36:57,380
time which is the number of time in

00:36:55,730 --> 00:36:59,060
seconds and also other things like the

00:36:57,380 --> 00:37:01,040
load which I'm also printing out are

00:36:59,060 --> 00:37:02,570
showing in real time as well and the

00:37:01,040 --> 00:37:05,000
last thing just for fun that's kind of a

00:37:02,570 --> 00:37:07,220
bit of a a joke demo if you see if I

00:37:05,000 --> 00:37:08,750
make noise you can see this vu meter is

00:37:07,220 --> 00:37:11,000
going up and down because one of the

00:37:08,750 --> 00:37:13,730
inputs into my language is the actual

00:37:11,000 --> 00:37:15,710
microphone of my laptop and so what this

00:37:13,730 --> 00:37:17,450
is is giving you a DSL it's this

00:37:15,710 --> 00:37:19,550
reactive DSL it's a special kind of

00:37:17,450 --> 00:37:21,260
language that knows when to update

00:37:19,550 --> 00:37:24,110
things based on real-time streams

00:37:21,260 --> 00:37:27,080
integrates all those streams and output

00:37:24,110 --> 00:37:28,070
something that can change over time so

00:37:27,080 --> 00:37:30,260
this is the kind of thing you can

00:37:28,070 --> 00:37:33,500
imagine if the load is going up in your

00:37:30,260 --> 00:37:35,900
system you might want to spin up some

00:37:33,500 --> 00:37:37,850
new VMs or shut down something else or

00:37:35,900 --> 00:37:39,740
so on as it changes that makes sense

00:37:37,850 --> 00:37:43,460
this is kind of how we want to model

00:37:39,740 --> 00:37:46,760
things in the future I'll show you one

00:37:43,460 --> 00:37:53,870
more demo you know to show you actually

00:37:46,760 --> 00:37:57,550
one more cool demo if I have time so I'm

00:37:53,870 --> 00:37:57,550
gonna run this

00:38:00,460 --> 00:38:06,430
right to tell this one first

00:38:07,470 --> 00:38:22,570
so I'm running MGMT on the left and MGMT

00:38:18,370 --> 00:38:24,100
has actually started up this vm3 I'm

00:38:22,570 --> 00:38:25,030
gonna use my dev environment so let's

00:38:24,100 --> 00:38:28,690
see if this works

00:38:25,030 --> 00:38:30,130
so I've started up MGMT on the left and

00:38:28,690 --> 00:38:34,690
over here I'm logging into the VM that

00:38:30,130 --> 00:38:38,260
MGMT is started up and I'll just run

00:38:34,690 --> 00:38:39,520
screaming and inside the VM normally

00:38:38,260 --> 00:38:40,780
when you boot up the VM when it's

00:38:39,520 --> 00:38:42,520
provision you would run MGMT

00:38:40,780 --> 00:38:45,130
automatically but in this case I'm gonna

00:38:42,520 --> 00:38:47,560
show you what it looks like so you

00:38:45,130 --> 00:38:48,610
actually can see MGMT running and the

00:38:47,560 --> 00:38:52,000
second thing I'm gonna do is gonna run

00:38:48,610 --> 00:38:54,220
this display CPUs script and this just

00:38:52,000 --> 00:38:59,440
shows me in real time how many CPUs

00:38:54,220 --> 00:39:04,540
virtual CPUs are in the VM now the code

00:38:59,440 --> 00:39:07,180
that's running here is this so what it

00:39:04,540 --> 00:39:09,640
does is it looks at this file that's on

00:39:07,180 --> 00:39:12,100
my hard drive 10 CPU count it pulls out

00:39:09,640 --> 00:39:14,050
an integer and then what it does is it

00:39:12,100 --> 00:39:16,600
has this virtual machine resource and it

00:39:14,050 --> 00:39:20,710
puts that number of CPUs into the VM

00:39:16,600 --> 00:39:25,600
resource and what that does is if I go

00:39:20,710 --> 00:39:32,980
here sorry about all the windows and I

00:39:25,600 --> 00:39:35,380
echo 2 into that file when I press ENTER

00:39:32,980 --> 00:39:37,180
in theory MGMT's inner notice that the

00:39:35,380 --> 00:39:38,980
file changed then a second that new

00:39:37,180 --> 00:39:41,560
value it's gonna notice that the running

00:39:38,980 --> 00:39:43,540
VM has a different number of CPUs it's

00:39:41,560 --> 00:39:47,260
gonna take that value it's gonna hot

00:39:43,540 --> 00:39:49,690
plug in a CPU and then inside this file

00:39:47,260 --> 00:39:51,220
MGMT is gonna see that it's gonna let

00:39:49,690 --> 00:39:53,770
the VM be online it's gonna show you the

00:39:51,220 --> 00:39:58,480
new value of two CPUs so let's see if it

00:39:53,770 --> 00:40:00,520
works it takes a moment the first time

00:39:58,480 --> 00:40:03,760
because it's my hard drives kind of slow

00:40:00,520 --> 00:40:06,340
and then you can see it has to and if

00:40:03,760 --> 00:40:09,520
you go to something like 3:00 and see it

00:40:06,340 --> 00:40:14,770
happens in under a second I can go up to

00:40:09,520 --> 00:40:17,040
5 you go back down to 1 and you can even

00:40:14,770 --> 00:40:21,700
show off a little bit

00:40:17,040 --> 00:40:25,180
like with this little script I made and

00:40:21,700 --> 00:40:28,570
as you go plus and minus you can see

00:40:25,180 --> 00:40:30,369
MGMT's reacting in real-time making

00:40:28,570 --> 00:40:32,590
everything work so I've done this demo

00:40:30,369 --> 00:40:34,420
kind of quickly because I don't have a

00:40:32,590 --> 00:40:37,030
lot of time and they took away some time

00:40:34,420 --> 00:40:38,290
in a minute but after this is sort of

00:40:37,030 --> 00:40:40,090
the idea so if you start building

00:40:38,290 --> 00:40:41,740
infrastructure that it is working in

00:40:40,090 --> 00:40:44,530
real time we can do all these fancy

00:40:41,740 --> 00:40:47,440
things we can change our clothes and

00:40:44,530 --> 00:40:49,750
move things around as things go that

00:40:47,440 --> 00:40:51,130
makes sense

00:40:49,750 --> 00:40:52,510
I'm sorry I didn't have longer to

00:40:51,130 --> 00:40:54,640
explain that but I don't have a lot of

00:40:52,510 --> 00:40:55,990
time and there's some good news so these

00:40:54,640 --> 00:40:58,270
are sort of some of the fun things we

00:40:55,990 --> 00:41:01,090
can do in MGMT how can you help just to

00:40:58,270 --> 00:41:03,280
finish off you can use this you can test

00:41:01,090 --> 00:41:05,230
it patch it share it document it started

00:41:03,280 --> 00:41:07,060
blog it tweet it if you have tweeter

00:41:05,230 --> 00:41:10,240
discuss with your friends just hack on

00:41:07,060 --> 00:41:12,940
this stuff I am working on this

00:41:10,240 --> 00:41:14,380
basically on my own time just because I

00:41:12,940 --> 00:41:15,940
wanted to work on this for a bit and see

00:41:14,380 --> 00:41:18,220
if I could turn it into something that's

00:41:15,940 --> 00:41:20,109
the same itself so totally unfunded so

00:41:18,220 --> 00:41:22,420
if you want to help fund it I think the

00:41:20,109 --> 00:41:26,320
number is lower now but I'm on patreon

00:41:22,420 --> 00:41:27,670
and funny hacker it's very sexy so check

00:41:26,320 --> 00:41:29,440
it out the other thing I'm trying to do

00:41:27,670 --> 00:41:31,839
I basically I think I'm gonna be ready

00:41:29,440 --> 00:41:33,880
for full production use in the next six

00:41:31,839 --> 00:41:35,770
months or so I'm starting using it I'm

00:41:33,880 --> 00:41:37,599
using on my own servers now to sort of

00:41:35,770 --> 00:41:39,310
setup and manage things stuff like that

00:41:37,599 --> 00:41:40,900
and I had the idea of doing some

00:41:39,310 --> 00:41:42,760
corporate sponsorship so we're launching

00:41:40,900 --> 00:41:44,140
a website and if you want to have your

00:41:42,760 --> 00:41:45,520
logo at the bottom for a very cheap

00:41:44,140 --> 00:41:48,339
amount of money for a year

00:41:45,520 --> 00:41:51,820
contact me you let me know that we good

00:41:48,339 --> 00:41:53,470
let's just recap you can't hear the

00:41:51,820 --> 00:41:55,720
audio but that's Arthur Benjamin saying

00:41:53,470 --> 00:41:58,390
he's putting the cap back on his pens

00:41:55,720 --> 00:42:00,310
it's recapping there's an IRC channel if

00:41:58,390 --> 00:42:03,250
you're on IRC I'm not on slack sorry

00:42:00,310 --> 00:42:05,680
everyone there's a tweeter account and a

00:42:03,250 --> 00:42:08,550
mailing list which is still hosted by my

00:42:05,680 --> 00:42:10,810
old employer so thank you old employer

00:42:08,550 --> 00:42:12,670
the technical blog of James you all know

00:42:10,810 --> 00:42:13,210
about so you can go check it out you can

00:42:12,670 --> 00:42:15,609
find me

00:42:13,210 --> 00:42:17,430
purple idea I go by purple idea on IRC

00:42:15,609 --> 00:42:20,910
on tweeter and

00:42:17,430 --> 00:42:23,160
I mean email if you want a more in-depth

00:42:20,910 --> 00:42:26,660
technical talk about MGMT you're in luck

00:42:23,160 --> 00:42:29,040
because today at 5:30 in the info room

00:42:26,660 --> 00:42:30,540
you will probably be busy so if you want

00:42:29,040 --> 00:42:32,490
to actually come come early for a seat

00:42:30,540 --> 00:42:34,980
I'll show some demos that no one has

00:42:32,490 --> 00:42:36,930
seen before and will really get in depth

00:42:34,980 --> 00:42:39,420
without going quickly over all the tools

00:42:36,930 --> 00:42:41,640
and tomorrow in the minimal languages

00:42:39,420 --> 00:42:44,700
room I'm going to give them more FRP

00:42:41,640 --> 00:42:46,410
languages talk for those people and if

00:42:44,700 --> 00:42:48,180
you come to get your config management

00:42:46,410 --> 00:42:50,250
tab I see crystals in the back of the

00:42:48,180 --> 00:42:51,930
room he runs a great conference there's

00:42:50,250 --> 00:42:54,930
gonna be one talk that I'm giving there

00:42:51,930 --> 00:42:56,460
and two talks for some other people last

00:42:54,930 --> 00:42:58,559
thing before you leave sorry one minute

00:42:56,460 --> 00:43:00,540
if you like this talk please up to the

00:42:58,559 --> 00:43:03,240
organizers and shake them and say please

00:43:00,540 --> 00:43:05,430
I want you to know James's talk was

00:43:03,240 --> 00:43:07,319
amazing and you can even go to the

00:43:05,430 --> 00:43:09,240
feedback forum if you click on the talk

00:43:07,319 --> 00:43:11,010
there's a submit feedback link so please

00:43:09,240 --> 00:43:11,670
give me a good rating it would be

00:43:11,010 --> 00:43:14,550
appreciated

00:43:11,670 --> 00:43:16,500
and if you want I have a sticker you

00:43:14,550 --> 00:43:18,470
promise to use your sticker come over

00:43:16,500 --> 00:43:21,030
and I'll give you one for your laptops

00:43:18,470 --> 00:43:23,180
and that's pretty much it thank you very

00:43:21,030 --> 00:43:23,180
much

00:43:28,530 --> 00:43:32,520

YouTube URL: https://www.youtube.com/watch?v=5NMcPKDHIco


