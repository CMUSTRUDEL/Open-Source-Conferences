Title: Custom Crypto Policies by Examples Management of crypto algorithm restrictions
Publication date: 2020-07-11
Playlist: FOSDEM 2020
Description: 
	by Tomáš Mráz

At: FOSDEM 2020
https://video.fosdem.org/2020/UA2.114/security_custom_crypto_policies.webm

Management of allowed cryptographical algorithms to disallow algorithms not allowed due to weaknesses or restrictions by certification standards is complicated task. The talk will introduce system-wide crypto-policies concept and implementation as an attempt to help system administrators with this task.


This talk replaces "OSINT" talk which was schedulled initially, but David Busby could not attend on the short notice.
The system-wide crypto-policies were introduced in Fedora 21 in 2014. Since that time the tool evolved a lot especially with the recent introduction of run-time generation of configuration from a policy definition file and introduction of sub-policy concept. The feature is called Custom crypto policies. The crypto-policies nowadays help management of crypto algorithms not only in Fedora but also in Red Hat Enterprise Linux 8. It will be shown how the policy definition file looks like and how it is converted to the actual crypto library configuration.

Room: UA2.114 (Baudoux)
Scheduled start: 2020-02-01 10:00:00
Captions: 
	00:00:05,190 --> 00:00:11,130
so it's 11 so let's start welcome to

00:00:09,970 --> 00:00:17,830
March

00:00:11,130 --> 00:00:20,770
[Applause]

00:00:17,830 --> 00:00:25,300
my name is Thomas brass I work in Red

00:00:20,770 --> 00:00:28,240
Hat check in Brno in Czech Republic and

00:00:25,300 --> 00:00:33,040
I am a principal software engineer in

00:00:28,240 --> 00:00:36,400
the crypto crypto team basically we work

00:00:33,040 --> 00:00:40,090
about all the cryptic technologies in

00:00:36,400 --> 00:00:45,089
Red Hat Enterprise Linux and also fedora

00:00:40,090 --> 00:00:48,850
of course what we'll be discussing today

00:00:45,089 --> 00:00:50,610
we start with some motivation we will

00:00:48,850 --> 00:00:54,600
talk about crypto policies in general

00:00:50,610 --> 00:01:01,960
about custom crypto policies which is a

00:00:54,600 --> 00:01:03,909
new addition to this tool and we will

00:01:01,960 --> 00:01:06,460
also talk about we will show some

00:01:03,909 --> 00:01:08,430
examples of custom crypto policies we

00:01:06,460 --> 00:01:13,560
will talk about future a little and

00:01:08,430 --> 00:01:18,310
early summary for the motivation

00:01:13,560 --> 00:01:25,030
cryptography and cryptanalysis goes

00:01:18,310 --> 00:01:29,170
hand-in-hand and basically the evolution

00:01:25,030 --> 00:01:33,130
of algorithms and protocols is faster

00:01:29,170 --> 00:01:36,460
and faster you can never be sure fully

00:01:33,130 --> 00:01:39,759
sure that once you deploy something that

00:01:36,460 --> 00:01:43,090
in like next year you it will be secure

00:01:39,759 --> 00:01:46,990
enough so you need to accommodate for

00:01:43,090 --> 00:01:50,009
the changes here is some example of

00:01:46,990 --> 00:01:54,759
change changing technology in terms of

00:01:50,009 --> 00:01:58,060
crypto protocols TLS you can see here

00:01:54,759 --> 00:02:01,299
how the protocols were when the

00:01:58,060 --> 00:02:03,700
protocols were standardized and when

00:02:01,299 --> 00:02:08,550
they were insecure that's basically

00:02:03,700 --> 00:02:11,170
where they're aligned stop to be full

00:02:08,550 --> 00:02:12,730
where they found to be insecure of

00:02:11,170 --> 00:02:16,900
course they were insecure from start but

00:02:12,730 --> 00:02:19,180
nobody know that so we currently have

00:02:16,900 --> 00:02:22,000
still one point two which is fairly

00:02:19,180 --> 00:02:27,250
secure still and one point three is new

00:02:22,000 --> 00:02:28,520
thing so you have some pretty nice

00:02:27,250 --> 00:02:35,260
guides

00:02:28,520 --> 00:02:40,070
to set up your web server ssh server

00:02:35,260 --> 00:02:44,390
whatever other application how to set up

00:02:40,070 --> 00:02:48,890
in so it's very very secure and uses the

00:02:44,390 --> 00:02:52,340
up-to-date algorithms and protocols and

00:02:48,890 --> 00:02:57,020
so on but these guides here is one of

00:02:52,340 --> 00:02:59,360
the example are very very long and you

00:02:57,020 --> 00:03:03,890
have to go through then setup change

00:02:59,360 --> 00:03:09,020
configuration files so on what if you

00:03:03,890 --> 00:03:10,600
need to apply these crypto settings and

00:03:09,020 --> 00:03:15,590
changes for the current configuration

00:03:10,600 --> 00:03:17,960
regularly to like hundreds of machines

00:03:15,590 --> 00:03:23,240
various various kinds of machines on

00:03:17,960 --> 00:03:26,270
your on your network and some of them up

00:03:23,240 --> 00:03:31,010
virtual machines maybe and containers or

00:03:26,270 --> 00:03:34,160
whatever and the other thing to

00:03:31,010 --> 00:03:36,890
complicate things even more by Rashmi

00:03:34,160 --> 00:03:40,490
various machines usually have different

00:03:36,890 --> 00:03:46,900
needs or levels of needs to communicate

00:03:40,490 --> 00:03:50,030
with legacy devices various old hardware

00:03:46,900 --> 00:03:53,630
Cisco boxes I don't know what you what

00:03:50,030 --> 00:03:57,290
you can have on your network click the

00:03:53,630 --> 00:03:59,570
course policies came to rescue because

00:03:57,290 --> 00:04:02,870
they send our centrally managed on the

00:03:59,570 --> 00:04:05,270
system they provide you multiple

00:04:02,870 --> 00:04:08,840
pre-designed policy levels and they also

00:04:05,270 --> 00:04:12,080
simplify flips support if you care about

00:04:08,840 --> 00:04:17,440
it if you are Enterprise want to sell to

00:04:12,080 --> 00:04:17,440
US government or related institutions

00:04:17,770 --> 00:04:22,669
central what mean what does it mean it's

00:04:20,299 --> 00:04:25,610
central managed on the system there is a

00:04:22,669 --> 00:04:29,180
single command update crypto policies -

00:04:25,610 --> 00:04:35,419
they're set and you provide a level you

00:04:29,180 --> 00:04:40,479
want to set on your system it this

00:04:35,419 --> 00:04:40,479
single command manage manages

00:04:40,630 --> 00:04:44,509
configuration for

00:04:42,050 --> 00:04:47,030
all these crypto core crypto libraries

00:04:44,509 --> 00:04:50,979
as they're called as we call them and

00:04:47,030 --> 00:04:58,400
although some applications on the on the

00:04:50,979 --> 00:05:01,310
fedora or rel system is basically all

00:04:58,400 --> 00:05:06,470
the core libraries that that are used by

00:05:01,310 --> 00:05:11,539
the by the base based system

00:05:06,470 --> 00:05:17,379
applications so when the update crypto

00:05:11,539 --> 00:05:20,750
policies command runs it transforms a

00:05:17,379 --> 00:05:22,669
simple policy definition file into

00:05:20,750 --> 00:05:28,969
separate configuration file snippets

00:05:22,669 --> 00:05:31,069
that are loaded and or included by the

00:05:28,969 --> 00:05:37,210
configuration files of these libraries

00:05:31,069 --> 00:05:41,090
or applications let's talk about the

00:05:37,210 --> 00:05:43,150
levels that we provide which we are like

00:05:41,090 --> 00:05:48,759
kind of pre-designed

00:05:43,150 --> 00:05:54,460
the most lenient level is legacy which

00:05:48,759 --> 00:05:58,250
provides you 64-bit security about its

00:05:54,460 --> 00:06:01,159
it also enables rc4 and three days but

00:05:58,250 --> 00:06:04,210
only for some applications for the

00:06:01,159 --> 00:06:07,430
applications or libraries where we

00:06:04,210 --> 00:06:08,180
decided that it's not longer relevant at

00:06:07,430 --> 00:06:11,270
all

00:06:08,180 --> 00:06:13,669
it's it's also disabled Fergie's the

00:06:11,270 --> 00:06:18,139
default level here are the levels for

00:06:13,669 --> 00:06:21,430
fedora actually the default level still

00:06:18,139 --> 00:06:29,659
enables TLS 1.0 until at one point one

00:06:21,430 --> 00:06:32,180
but disables all the rc4 and the next

00:06:29,659 --> 00:06:34,430
policy level which is actually the

00:06:32,180 --> 00:06:41,000
default for Red Hat Enterprise Linux

00:06:34,430 --> 00:06:43,990
eight enables only TLS 1.2 and it also

00:06:41,000 --> 00:06:47,750
requires diffie-hellman parameters to be

00:06:43,990 --> 00:06:53,029
larger and two kilobits the same for RSA

00:06:47,750 --> 00:06:55,470
and DSA but there was at the time when

00:06:53,029 --> 00:06:58,230
when we started

00:06:55,470 --> 00:07:01,830
for federate was like not acceptable

00:06:58,230 --> 00:07:05,670
because it still broke some websites but

00:07:01,830 --> 00:07:08,130
I suppose that in the next release we

00:07:05,670 --> 00:07:12,480
will drop or change the default for

00:07:08,130 --> 00:07:14,430
fedora as well to this level the future

00:07:12,480 --> 00:07:17,370
level is kind of special because it

00:07:14,430 --> 00:07:23,570
allows you to test whether your

00:07:17,370 --> 00:07:26,580
application or system or whatever is

00:07:23,570 --> 00:07:29,220
prepared for some some of the future

00:07:26,580 --> 00:07:31,020
changes of course it cannot enable

00:07:29,220 --> 00:07:35,460
things that are not implemented in the

00:07:31,020 --> 00:07:39,660
libraries but it at least drop support

00:07:35,460 --> 00:07:43,800
for 128-bit symmetric ciphers which

00:07:39,660 --> 00:07:46,310
basically in this particular part it

00:07:43,800 --> 00:07:50,850
will prepare you for post quantum

00:07:46,310 --> 00:07:53,460
situation and the fifth policy is

00:07:50,850 --> 00:07:56,880
special because it removes support for

00:07:53,460 --> 00:08:03,300
all algorithms that are not approved for

00:07:56,880 --> 00:08:05,070
phase so and the simplification of the

00:08:03,300 --> 00:08:09,210
FIPS mode with the crypto policies is

00:08:05,070 --> 00:08:12,420
provided also by having just a single

00:08:09,210 --> 00:08:18,510
command that will enable the system FIPS

00:08:12,420 --> 00:08:20,430
mode for you because previously for

00:08:18,510 --> 00:08:23,190
example on rather than to price linux

00:08:20,430 --> 00:08:25,980
seven or older releases you had to

00:08:23,190 --> 00:08:29,610
follow a few steps that you would have

00:08:25,980 --> 00:08:32,190
to do to enable the system FIPS mode now

00:08:29,610 --> 00:08:39,840
we will just promising low current entry

00:08:32,190 --> 00:08:44,220
boot so to summarize the system crypto

00:08:39,840 --> 00:08:45,900
policies provide central management of

00:08:44,220 --> 00:08:47,790
the system by single command that

00:08:45,900 --> 00:08:51,030
controls all the core crypto libraries

00:08:47,790 --> 00:08:52,650
and applications using crypto there are

00:08:51,030 --> 00:08:55,320
multiple parties and pleasure levels

00:08:52,650 --> 00:08:57,390
which provide up-to-date security also

00:08:55,320 --> 00:09:00,060
communication with legacy systems or

00:08:57,390 --> 00:09:01,779
preparation for future and there is a

00:09:00,060 --> 00:09:06,519
fifth support

00:09:01,779 --> 00:09:10,389
in provided as well and simplification

00:09:06,519 --> 00:09:13,180
of it ships moat and emblem and and when

00:09:10,389 --> 00:09:19,060
you can where you can get these this

00:09:13,180 --> 00:09:20,560
tool on current federal reversions all

00:09:19,060 --> 00:09:23,730
the supported for reversions

00:09:20,560 --> 00:09:27,190
and rather than the price in book state

00:09:23,730 --> 00:09:30,810
but what if the predefined policy levels

00:09:27,190 --> 00:09:30,810
don't match your requirements

00:09:31,110 --> 00:09:36,339
now custom crypto policies come to

00:09:33,730 --> 00:09:43,410
rescue which is a new improvement of

00:09:36,339 --> 00:09:47,709
this tool with this feature you can

00:09:43,410 --> 00:09:50,350
define your own crypto policies from

00:09:47,709 --> 00:09:53,319
scratch or more if you can modify

00:09:50,350 --> 00:09:57,519
existing predefined policy levels how to

00:09:53,319 --> 00:09:58,930
do that with when you define your full

00:09:57,519 --> 00:10:04,839
policy from scratch

00:09:58,930 --> 00:10:07,930
you place all the place the full policy

00:10:04,839 --> 00:10:11,319
definition file into this one of these

00:10:07,930 --> 00:10:15,459
two directories and the file needs to be

00:10:11,319 --> 00:10:17,860
named policy that dot Paul with the

00:10:15,459 --> 00:10:21,459
uppercase in the name in the file name

00:10:17,860 --> 00:10:26,199
is important because otherwise the two

00:10:21,459 --> 00:10:29,470
won't recognize it the format of the

00:10:26,199 --> 00:10:31,899
file is kind of simple although you of

00:10:29,470 --> 00:10:37,180
course have to know the names of the of

00:10:31,899 --> 00:10:42,100
the algorithms but as you can see here

00:10:37,180 --> 00:10:45,579
you have hash it's a simple like key

00:10:42,100 --> 00:10:49,750
equals volume format where most of the

00:10:45,579 --> 00:10:53,139
volume values are lists of algorithm

00:10:49,750 --> 00:10:57,810
names such as here we can have all the

00:10:53,139 --> 00:10:57,810
various hash algorithms

00:10:58,520 --> 00:11:04,940
this is actually excerpt from user share

00:11:01,490 --> 00:11:09,440
crypto policies policies future pool and

00:11:04,940 --> 00:11:14,020
provide as you can see only shot to and

00:11:09,440 --> 00:11:17,300
Shari hashes are enabled future policy

00:11:14,020 --> 00:11:20,649
here is the setting for key key

00:11:17,300 --> 00:11:26,000
exchanges the group this is the group

00:11:20,649 --> 00:11:31,750
key again you can see here that these

00:11:26,000 --> 00:11:38,020
are Dan bears or the safe crypto cars

00:11:31,750 --> 00:11:38,020
and here are normal list curves and

00:11:39,339 --> 00:11:47,450
normal deficient

00:11:41,360 --> 00:11:49,399
meters of these lines and in future

00:11:47,450 --> 00:11:52,610
policy you can see the minimum dealers

00:11:49,399 --> 00:11:56,440
version is one point two minimum size of

00:11:52,610 --> 00:11:59,810
the RSA keys are three killed kilobits

00:11:56,440 --> 00:12:02,600
of course there are other values for

00:11:59,810 --> 00:12:14,000
symmetric ciphers signage shrubbery

00:12:02,600 --> 00:12:17,570
things other other parameters but you

00:12:14,000 --> 00:12:20,810
might probably not want to design your

00:12:17,570 --> 00:12:23,870
policy from scratch with full policy

00:12:20,810 --> 00:12:28,940
from scratch one of the reasons why not

00:12:23,870 --> 00:12:32,950
to do that is because the various crypto

00:12:28,940 --> 00:12:38,500
backends have or the the way how the

00:12:32,950 --> 00:12:41,890
policy is transformed into the actual

00:12:38,500 --> 00:12:44,690
configurations file for the libraries

00:12:41,890 --> 00:12:46,579
has some limitations basically the

00:12:44,690 --> 00:12:49,160
limitations are due to the way how the

00:12:46,579 --> 00:12:52,970
libraries are being configured we did

00:12:49,160 --> 00:12:55,610
not like we added some some changes but

00:12:52,970 --> 00:12:57,920
we did not try to like really really

00:12:55,610 --> 00:13:00,649
arrangement all the configurations for

00:12:57,920 --> 00:13:03,200
for all the libraries so so there are

00:13:00,649 --> 00:13:05,370
definitely some limitations on what you

00:13:03,200 --> 00:13:08,520
can set with one library and

00:13:05,370 --> 00:13:11,990
another and for that reason it might be

00:13:08,520 --> 00:13:15,030
a good idea to just modify existing

00:13:11,990 --> 00:13:19,610
existing policy with with the so-called

00:13:15,030 --> 00:13:22,590
policy modifier module these modules

00:13:19,610 --> 00:13:27,810
need to be placed into the modules

00:13:22,590 --> 00:13:31,830
subdirectory and they have a different

00:13:27,810 --> 00:13:36,990
sub suffix P mode again the uppercase in

00:13:31,830 --> 00:13:38,940
the name of the module is important so

00:13:36,990 --> 00:13:42,750
here will be some examples of the

00:13:38,940 --> 00:13:49,500
modifiers for example you can disable

00:13:42,750 --> 00:13:54,410
sha-1 hash you just basically apply

00:13:49,500 --> 00:13:58,680
these changes to the original policy

00:13:54,410 --> 00:14:01,440
that means - sha-1 means remove shaaban

00:13:58,680 --> 00:14:05,550
from the list of the hash algorithms

00:14:01,440 --> 00:14:07,860
- Parris IPSS sha-1 RSA Chauhan ECDSA

00:14:05,550 --> 00:14:10,050
Chauhan remove these signature

00:14:07,860 --> 00:14:16,050
algorithms from the list of sign

00:14:10,050 --> 00:14:24,240
algorithms in the base policy how to

00:14:16,050 --> 00:14:31,920
apply this modifier basically with this

00:14:24,240 --> 00:14:36,510
command you append with : no shovin you

00:14:31,920 --> 00:14:39,900
append it to the base policy and the

00:14:36,510 --> 00:14:42,030
policy will be modified accordingly you

00:14:39,900 --> 00:14:44,730
can of course there is no limitation on

00:14:42,030 --> 00:14:47,640
if you have a module on which base

00:14:44,730 --> 00:14:50,220
policy you apply it can be applied on

00:14:47,640 --> 00:14:52,290
any other policy like future but in

00:14:50,220 --> 00:14:55,530
future for future policy it has no

00:14:52,290 --> 00:15:01,260
effect because there is already the

00:14:55,530 --> 00:15:06,000
sha-1 is already disabled there another

00:15:01,260 --> 00:15:12,780
example by default camellia is enabled

00:15:06,000 --> 00:15:19,140
only for like non TLS applications or

00:15:12,780 --> 00:15:19,529
protocols with this plus name of the

00:15:19,140 --> 00:15:23,689
other

00:15:19,529 --> 00:15:29,730
you add edit to the list of the enabled

00:15:23,689 --> 00:15:31,980
algorithms for TLS here

00:15:29,730 --> 00:15:34,560
just for there is no problem if you just

00:15:31,980 --> 00:15:37,050
if there in the base policy if the

00:15:34,560 --> 00:15:40,170
Camellia is already enabled if you edit

00:15:37,050 --> 00:15:41,180
again there is no like error or no

00:15:40,170 --> 00:15:45,329
problem with that

00:15:41,180 --> 00:15:48,300
so it's a good idea to buy to be for

00:15:45,329 --> 00:15:55,379
sure that I enable it everywhere I put

00:15:48,300 --> 00:15:59,279
it for both TLS and non TLS ciphers the

00:15:55,379 --> 00:16:01,199
other option is to put the plus on after

00:15:59,279 --> 00:16:05,699
the name of the algorithm we just

00:16:01,199 --> 00:16:08,959
changes the order where the algorithms

00:16:05,699 --> 00:16:11,339
output because if you put the plus bit

00:16:08,959 --> 00:16:13,499
before the name of the algorithm it will

00:16:11,339 --> 00:16:16,470
be inserted on the beginning of the list

00:16:13,499 --> 00:16:20,850
if you put it at the end of the

00:16:16,470 --> 00:16:25,920
algorithm name it will be put lost or

00:16:20,850 --> 00:16:28,410
appended to the list you can for example

00:16:25,920 --> 00:16:33,480
disable all TLS protocol versions in

00:16:28,410 --> 00:16:36,389
legacy policy by these settings there is

00:16:33,480 --> 00:16:38,100
a kind of duplication because some of

00:16:36,389 --> 00:16:41,850
the back ends of the libraries don't

00:16:38,100 --> 00:16:44,519
allow to selectively disable protocol by

00:16:41,850 --> 00:16:47,399
protocol and for these back ends there

00:16:44,519 --> 00:16:52,079
is the mentalist version or mainly TLS

00:16:47,399 --> 00:16:58,050
version for the others you can like

00:16:52,079 --> 00:17:02,490
selectively use this list to disable all

00:16:58,050 --> 00:17:05,880
the cause you don't want SSS tree by the

00:17:02,490 --> 00:17:08,579
way or they like dropped remove disabled

00:17:05,880 --> 00:17:12,890
no no no need to disable it anywhere

00:17:08,579 --> 00:17:19,709
because it's already dropped from the

00:17:12,890 --> 00:17:22,079
libraries here is another example - just

00:17:19,709 --> 00:17:24,870
make the future police a little bit more

00:17:22,079 --> 00:17:27,430
lenient because by default or most of

00:17:24,870 --> 00:17:32,460
the websites have only two k2

00:17:27,430 --> 00:17:35,680
it's RSA keys for certificates and so

00:17:32,460 --> 00:17:37,990
this is the most probable reason why if

00:17:35,680 --> 00:17:40,660
you set future policy you won't be able

00:17:37,990 --> 00:17:43,390
to connect on too many websites so you

00:17:40,660 --> 00:17:47,620
could adjust your future the future

00:17:43,390 --> 00:17:50,800
policy with this modifier and you would

00:17:47,620 --> 00:17:53,080
be probably almost possible to use for

00:17:50,800 --> 00:17:59,200
future policy for like regular web

00:17:53,080 --> 00:18:03,130
browsing or you can only allow for

00:17:59,200 --> 00:18:08,380
example ECD edge and ECD edge with

00:18:03,130 --> 00:18:12,820
pressure keys this is basically the

00:18:08,380 --> 00:18:19,090
situation for open SSL on TLS 1.30

00:18:12,820 --> 00:18:29,140
already because it does not support the

00:18:19,090 --> 00:18:36,430
f FD h groups on TLS 1.3 and it supports

00:18:29,140 --> 00:18:39,400
only forward secrecy enabling changes so

00:18:36,430 --> 00:18:41,200
this by this way you just remove all the

00:18:39,400 --> 00:18:47,920
remaining algorithms from the key

00:18:41,200 --> 00:18:51,370
exchange there is a kind of deficiency

00:18:47,920 --> 00:18:53,290
because what would be logical more

00:18:51,370 --> 00:18:56,080
logical would be to have the policy

00:18:53,290 --> 00:18:59,080
modifier to just set the ECD H and H th

00:18:56,080 --> 00:19:06,570
PSK to key exchange but the current

00:18:59,080 --> 00:19:09,790
version doesn't support this yeah and

00:19:06,570 --> 00:19:12,540
the policy modifiers can be applied like

00:19:09,790 --> 00:19:18,040
multiple policy modifiers can be applied

00:19:12,540 --> 00:19:23,190
at once so basically you just put all

00:19:18,040 --> 00:19:23,190
these one after another

00:19:26,230 --> 00:19:32,290
the important thing to understand is

00:19:29,440 --> 00:19:35,260
that the the generation of the actual

00:19:32,290 --> 00:19:38,890
configuration files for the libraries is

00:19:35,260 --> 00:19:40,750
done at the configure time basically

00:19:38,890 --> 00:19:47,500
when you run the update crypto policies

00:19:40,750 --> 00:19:56,400
script this is important because this

00:19:47,500 --> 00:19:59,950
allows for like changing changing things

00:19:56,400 --> 00:20:05,170
in new versions of the update crypto

00:19:59,950 --> 00:20:07,560
policies for example OpenSSL back and

00:20:05,170 --> 00:20:09,520
could allow a more fine-grained

00:20:07,560 --> 00:20:15,760
selection of the algorithms because

00:20:09,520 --> 00:20:19,480
currently it's kind of simple and or

00:20:15,760 --> 00:20:22,180
even new back-end could be added to

00:20:19,480 --> 00:20:25,210
support to be supported for example we

00:20:22,180 --> 00:20:30,630
can we are planning to have for example

00:20:25,210 --> 00:20:34,090
go language support it with a separate

00:20:30,630 --> 00:20:39,700
configuration so you would you would not

00:20:34,090 --> 00:20:42,780
need to like regenerate your policy

00:20:39,700 --> 00:20:44,730
files or whatever you would just by

00:20:42,780 --> 00:20:49,330
automatically on the upgrade of the

00:20:44,730 --> 00:20:57,070
package the configuration was updated

00:20:49,330 --> 00:20:59,260
and so to summarize with custom crypto

00:20:57,070 --> 00:21:02,740
policies you can define your crypto

00:20:59,260 --> 00:21:05,080
policy from scratch in the way in a

00:21:02,740 --> 00:21:08,370
simple policy definition file or you can

00:21:05,080 --> 00:21:11,230
modify existing predefined policy levels

00:21:08,370 --> 00:21:16,060
by adding or removing enable algorithms

00:21:11,230 --> 00:21:18,190
or protocols and the generation of

00:21:16,060 --> 00:21:21,870
back-end configurations is done when

00:21:18,190 --> 00:21:28,600
objective the policy script is around

00:21:21,870 --> 00:21:33,460
the future plans one big thing had is

00:21:28,600 --> 00:21:35,140
handling of shavon deprecation this is

00:21:33,460 --> 00:21:37,140
one of the reasons why I need why we

00:21:35,140 --> 00:21:43,300
need to change

00:21:37,140 --> 00:21:45,610
back end for OpenSSL we need to be able

00:21:43,300 --> 00:21:53,110
to basically selectively disable shavon

00:21:45,610 --> 00:21:55,180
currently this is not possible and yeah

00:21:53,110 --> 00:21:58,630
that's basically what I've already

00:21:55,180 --> 00:22:01,360
talked about the fine-grain back end

00:21:58,630 --> 00:22:04,210
configurations for new TLS is already

00:22:01,360 --> 00:22:08,200
improved it was in previous versions if

00:22:04,210 --> 00:22:13,660
it was on the more similar ladder to

00:22:08,200 --> 00:22:16,660
open SSL and yeah we would like to at

00:22:13,660 --> 00:22:18,880
some point to think about data at rest

00:22:16,660 --> 00:22:22,030
support but that's much harder topic

00:22:18,880 --> 00:22:25,840
currently mostly the crypto policies

00:22:22,030 --> 00:22:31,780
affect only the protocol usage for

00:22:25,840 --> 00:22:34,630
algorithms in data in transit so quick

00:22:31,780 --> 00:22:38,230
summary single command to rule them all

00:22:34,630 --> 00:22:40,060
the algorithms and libraries multi

00:22:38,230 --> 00:22:42,790
prepare assign codes political levels

00:22:40,060 --> 00:22:45,010
custom crypto policies can be created

00:22:42,790 --> 00:22:47,190
from scratch by policy modification and

00:22:45,010 --> 00:22:48,520
very simple policy definition format

00:22:47,190 --> 00:22:57,220
thank you

00:22:48,520 --> 00:23:00,130
any questions do these policies also pi2

00:22:57,220 --> 00:23:02,860
containers running on the operating

00:23:00,130 --> 00:23:04,930
system they would apply to containers

00:23:02,860 --> 00:23:07,420
only if you if you inside the container

00:23:04,930 --> 00:23:11,170
you have the system with with the the

00:23:07,420 --> 00:23:15,220
policies basically if you have federer

00:23:11,170 --> 00:23:21,070
inside the container then or or l.a you

00:23:15,220 --> 00:23:23,400
will have crypto policies the depends on

00:23:21,070 --> 00:23:23,400
your use case

00:23:32,740 --> 00:23:38,140
is there any support to distinguish

00:23:35,350 --> 00:23:43,090
between client and server connections so

00:23:38,140 --> 00:23:44,380
say you're trying to insist that clients

00:23:43,090 --> 00:23:46,000
connect to your service with this

00:23:44,380 --> 00:23:47,110
particular level but then your service

00:23:46,000 --> 00:23:49,950
then has to connect to another service

00:23:47,110 --> 00:23:53,290
with a different level so make sense

00:23:49,950 --> 00:23:55,300
like it means what legacy system say if

00:23:53,290 --> 00:23:57,070
you if you have like multiple systems

00:23:55,300 --> 00:24:00,130
gonna like but just between the

00:23:57,070 --> 00:24:01,870
connecting client and then say you say

00:24:00,130 --> 00:24:04,120
your service has to include connects

00:24:01,870 --> 00:24:06,040
another legacy service which has a you

00:24:04,120 --> 00:24:08,590
can't control the the crypto you can use

00:24:06,040 --> 00:24:10,780
on it yeah can you define a policy for

00:24:08,590 --> 00:24:12,610
the incoming connections to be at a high

00:24:10,780 --> 00:24:18,070
level say for the clients on the general

00:24:12,610 --> 00:24:20,080
internet I don't understand the question

00:24:18,070 --> 00:24:22,150
really but basically the policies

00:24:20,080 --> 00:24:25,030
applied to this whole system they don't

00:24:22,150 --> 00:24:27,640
like selectively apply to servers

00:24:25,030 --> 00:24:30,400
clients whatever that they are like kind

00:24:27,640 --> 00:24:41,770
of general things to be simple right for

00:24:30,400 --> 00:24:43,810
the admin too so so if you have any

00:24:41,770 --> 00:24:44,760
questions for your I will answer it

00:24:43,810 --> 00:24:48,079
outside

00:24:44,760 --> 00:24:48,079
[Applause]

00:24:48,770 --> 00:24:53,360
you

00:24:49,120 --> 00:24:53,360

YouTube URL: https://www.youtube.com/watch?v=KT4-5Td_yEw


