Title: WPE, The WebKit port for Embedded platforms
Publication date: 2020-07-15
Playlist: FOSDEM 2020
Description: 
	by Philippe Normand

At: FOSDEM 2020
https://video.fosdem.org/2020/UD2.218A/ema_wpe.webm

WPEWebKit is a WebKit flavour (also known as port) specially crafted for embedded platforms and use-cases. During this talk I would present WPEWebKit's architecture with a special emphasis on its multimedia backend based on GStreamer. I would also demonstrate various use-cases for WPE, spanning from Kiosk apps and Set-top-box user-interfaces to advanced scenarios such as Web overlays for live TV broadcasting.
WPEWebKit is designed for simplicity and performance. It allows application developers to easily deploy hardware-accelerated fullscreen (or not) browsers with multimedia support, small (both in memory usage and disk space) and light as possible, and implementing the most relevant HTML specifications.


Traditionally WebKit ports are associated with a specific widget toolkit library (GTK, Qt, Cocoa,...) but WPEWebKit breaks with this monolithic design and thus enables a new range of use-cases. By delegating the final web page rendering to dedicated view-backends, WPEWebKit allows flexible and tight integration in a wide range of hardware platforms. We also provide a Qt5 QML plugin that can easily replace the deprecated QtWebKit-based module.


WPEWebKit leverages GStreamer for its multiple multimedia backends, ensuring your WPEWebKit-based browser supports zero-copy hardware video decoding on the most common embedded platforms such as the Raspberry Pi, i.MX6 and i.MX8M SoCS.


WPEWebKit can also be used in pure GStreamer applications! Thanks to the GstWPE plugin, web-pages can be "injected" in GStreamer pipelines as audio and video streams. This new plugin thus enables use-cases such has HTML overlays.


WPEWebKit is an open source project with a growing community, and it is developed within the ecosystem of the WebKit project, which powers many open source and proprietary web browsers.

Room: UD2.218A
Scheduled start: 2020-02-01 15:00:00
Captions: 
	00:00:16,720 --> 00:00:20,960
all right

00:00:17,920 --> 00:00:20,960
so i get started then

00:00:22,400 --> 00:00:26,480
yeah good afternoon everybody i have

00:00:24,320 --> 00:00:29,519
this presentation about

00:00:26,480 --> 00:00:30,240
wp which is a web engine based on

00:00:29,519 --> 00:00:34,239
webkits

00:00:30,240 --> 00:00:34,239
and designed for embedded platforms

00:00:34,480 --> 00:00:38,239
so during the talk i give a short

00:00:36,800 --> 00:00:41,840
introduction about webkits

00:00:38,239 --> 00:00:41,840
a very short overview

00:00:42,559 --> 00:00:45,760
and then i will more focus on

00:00:44,399 --> 00:00:48,320
applications um

00:00:45,760 --> 00:00:50,559
how you can use wp in your application

00:00:48,320 --> 00:00:53,120
what are the use cases for it

00:00:50,559 --> 00:00:54,800
and um i probably if i have time i'll

00:00:53,120 --> 00:00:58,559
give a short demo about

00:00:54,800 --> 00:01:01,520
something i wrote all right so i'm

00:00:58,559 --> 00:01:02,960
philipp i'm a repeat reviewer a

00:01:01,520 --> 00:01:06,640
distributor commuter

00:01:02,960 --> 00:01:07,920
and i work for a company based in spain

00:01:06,640 --> 00:01:11,280
called igalia

00:01:07,920 --> 00:01:14,159
we are working on cooperative and

00:01:11,280 --> 00:01:16,320
we are currently about 90 happy

00:01:14,159 --> 00:01:21,040
egyptians across the world

00:01:16,320 --> 00:01:21,040
um so what's wp

00:01:22,640 --> 00:01:26,880
so it's it's based on webkit which

00:01:24,720 --> 00:01:28,799
probably as you know was

00:01:26,880 --> 00:01:31,759
start a project started by apple as a

00:01:28,799 --> 00:01:33,680
fork of html around 2004

00:01:31,759 --> 00:01:36,880
and the main goal for them at the time

00:01:33,680 --> 00:01:39,280
was to to build safari

00:01:36,880 --> 00:01:42,399
and since then other people joined the

00:01:39,280 --> 00:01:44,799
projects or the companies and

00:01:42,399 --> 00:01:47,680
the community added new parts i will

00:01:44,799 --> 00:01:47,680
talk about that later

00:01:49,759 --> 00:01:56,240
so i briefly introduced the webkit to

00:01:53,360 --> 00:01:57,360
multi-process architecture on that

00:01:56,240 --> 00:01:59,200
diagram you can only

00:01:57,360 --> 00:02:01,200
only see two processes but nowadays

00:01:59,200 --> 00:02:03,520
there are more there's one about

00:02:01,200 --> 00:02:05,200
network nowadays one about storage and

00:02:03,520 --> 00:02:08,239
this recently introduced

00:02:05,200 --> 00:02:09,920
gpu process as well

00:02:08,239 --> 00:02:11,680
so the application is called the ui

00:02:09,920 --> 00:02:12,720
processing data architecture and it

00:02:11,680 --> 00:02:16,080
communicates with

00:02:12,720 --> 00:02:19,120
other processes using ipc

00:02:16,080 --> 00:02:20,400
and all all the dom passing all the

00:02:19,120 --> 00:02:22,879
[Music]

00:02:20,400 --> 00:02:24,720
things internal to the web engine are

00:02:22,879 --> 00:02:28,239
done in those processes

00:02:24,720 --> 00:02:32,319
like javascript and all those things

00:02:28,239 --> 00:02:35,519
um so wp is

00:02:32,319 --> 00:02:38,239
a port aimed for embedded platforms

00:02:35,519 --> 00:02:39,040
traditionally what kit both are built on

00:02:38,239 --> 00:02:44,239
top of a

00:02:39,040 --> 00:02:44,239
toolkit widget a widget request

00:02:44,640 --> 00:02:48,239
but this part is a bit special in the

00:02:46,319 --> 00:02:51,280
sense that it decouples

00:02:48,239 --> 00:02:54,640
rendering to dedicated

00:02:51,280 --> 00:02:56,879
what we call rendering back-ends um

00:02:54,640 --> 00:02:58,319
that means that it gives more

00:02:56,879 --> 00:02:59,360
flexibility to the application

00:02:58,319 --> 00:03:02,480
developers

00:02:59,360 --> 00:03:04,000
and there's more openness about the the

00:03:02,480 --> 00:03:07,440
platforms that you can support

00:03:04,000 --> 00:03:10,720
with using that model so that means that

00:03:07,440 --> 00:03:14,400
the rendering is different to another

00:03:10,720 --> 00:03:15,920
part of the the port that is loaded at

00:03:14,400 --> 00:03:18,879
runtime basically

00:03:15,920 --> 00:03:19,760
and the input events are also handled

00:03:18,879 --> 00:03:22,680
using that

00:03:19,760 --> 00:03:24,799
model um

00:03:22,680 --> 00:03:28,159
[Music]

00:03:24,799 --> 00:03:30,959
so those rendering back-ends uh

00:03:28,159 --> 00:03:32,560
usually require a thing called well and

00:03:30,959 --> 00:03:36,420
egl

00:03:32,560 --> 00:03:37,760
which is a way for applications to share

00:03:36,420 --> 00:03:40,879
[Music]

00:03:37,760 --> 00:03:44,319
graphics resources between processes

00:03:40,879 --> 00:03:46,720
and there are egl extensions dedicated

00:03:44,319 --> 00:03:46,720
to that

00:03:47,920 --> 00:03:51,680
so there are quite a few back-ends

00:03:49,599 --> 00:03:54,400
nowadays i will just focus on two

00:03:51,680 --> 00:03:55,760
and the first one is the fdo back-end

00:03:54,400 --> 00:03:57,840
which i will talk about

00:03:55,760 --> 00:03:59,040
in a minute and the other one is the rdk

00:03:57,840 --> 00:04:02,799
back-end which is

00:03:59,040 --> 00:04:04,959
developed by companies such as comcast

00:04:02,799 --> 00:04:05,920
and they have deployed it in a wide

00:04:04,959 --> 00:04:09,760
range of

00:04:05,920 --> 00:04:11,790
setup boxes actually in the

00:04:09,760 --> 00:04:13,760
in the in the world

00:04:11,790 --> 00:04:18,320
[Music]

00:04:13,760 --> 00:04:21,199
so the fda backend it depends on ndgl

00:04:18,320 --> 00:04:22,320
so that means usually if you have a gpu

00:04:21,199 --> 00:04:24,540
driver that's using

00:04:22,320 --> 00:04:26,000
messer or probably

00:04:24,540 --> 00:04:28,560
[Music]

00:04:26,000 --> 00:04:29,919
something that provides egl you can have

00:04:28,560 --> 00:04:33,040
binary drivers

00:04:29,919 --> 00:04:35,680
um so that that

00:04:33,040 --> 00:04:37,040
back cam provides a high level api for

00:04:35,680 --> 00:04:40,160
applications to

00:04:37,040 --> 00:04:41,199
to be able to get egl images from the

00:04:40,160 --> 00:04:43,199
web engine

00:04:41,199 --> 00:04:44,240
and so they can do whatever they want

00:04:43,199 --> 00:04:48,080
with that

00:04:44,240 --> 00:04:49,280
and then that's also what we recommend

00:04:48,080 --> 00:04:52,000
for the

00:04:49,280 --> 00:04:53,520
as the wp community it's the back end

00:04:52,000 --> 00:04:55,600
used on the billboards

00:04:53,520 --> 00:04:56,800
and it's the the back end we use the

00:04:55,600 --> 00:05:00,160
most currently

00:04:56,800 --> 00:05:02,160
in a community um

00:05:00,160 --> 00:05:04,800
then obviously obviously you need a

00:05:02,160 --> 00:05:08,160
browser or some kind of application

00:05:04,800 --> 00:05:11,360
so yeah we are working on a minimalistic

00:05:08,160 --> 00:05:14,639
browser called cog

00:05:11,360 --> 00:05:16,479
it depends on the wp backend ldo

00:05:14,639 --> 00:05:18,560
and it's really minimalistic there's

00:05:16,479 --> 00:05:20,160
actually no no window depression no

00:05:18,560 --> 00:05:22,320
nothing

00:05:20,160 --> 00:05:23,199
and single word view although we are

00:05:22,320 --> 00:05:26,639
working on

00:05:23,199 --> 00:05:28,560
multi-webview uh support

00:05:26,639 --> 00:05:30,800
and it's also can be controlled using

00:05:28,560 --> 00:05:33,360
the bus so in your application you can

00:05:30,800 --> 00:05:38,160
like remote control the browser using

00:05:33,360 --> 00:05:41,440
other applications basically

00:05:38,160 --> 00:05:44,080
um so

00:05:41,440 --> 00:05:46,160
but for as a basic you need to have a

00:05:44,080 --> 00:05:46,720
while on compositor to be able to run

00:05:46,160 --> 00:05:50,400
cog

00:05:46,720 --> 00:05:51,120
but since recently we we wrote a new

00:05:50,400 --> 00:05:54,400
back end

00:05:51,120 --> 00:05:57,039
that leveraged the the drm architecture

00:05:54,400 --> 00:05:58,319
and thus we don't really require a

00:05:57,039 --> 00:06:01,840
running wayland

00:05:58,319 --> 00:06:06,000
compositor so that's quite cool

00:06:01,840 --> 00:06:07,440
because it reduces the the

00:06:06,000 --> 00:06:09,360
dependencies that you need for your

00:06:07,440 --> 00:06:10,880
application and you

00:06:09,360 --> 00:06:13,280
you if you need the full screen

00:06:10,880 --> 00:06:16,560
application you can use that back and

00:06:13,280 --> 00:06:20,800
um like kiosks skip the boxes

00:06:16,560 --> 00:06:24,160
ui any full screen display

00:06:20,800 --> 00:06:28,160
and then the rendering is done with uh

00:06:24,160 --> 00:06:29,120
with drl so the the wireless buffers are

00:06:28,160 --> 00:06:32,400
imported as

00:06:29,120 --> 00:06:35,840
uh gbm buffer objects and then rendered

00:06:32,400 --> 00:06:35,840
using drm

00:06:37,520 --> 00:06:44,240
i have a small use case for a

00:06:40,720 --> 00:06:46,720
small showcase for that

00:06:44,240 --> 00:06:48,880
it's basically a thing i did in my free

00:06:46,720 --> 00:06:50,880
time i i was a bit tired of using

00:06:48,880 --> 00:06:54,560
quality at home so i wanted to have a

00:06:50,880 --> 00:06:58,000
minimalistic media center self-contained

00:06:54,560 --> 00:07:01,440
so i i've built a webex extension for

00:06:58,000 --> 00:07:02,720
wp and that can be loaded at runtime by

00:07:01,440 --> 00:07:06,560
the word process

00:07:02,720 --> 00:07:09,759
and in that web extension i i use a

00:07:06,560 --> 00:07:13,599
upnp library i called

00:07:09,759 --> 00:07:17,199
libg upnp and

00:07:13,599 --> 00:07:20,479
the chan is here okay um

00:07:17,199 --> 00:07:23,039
so i use that library to to discover uh

00:07:20,479 --> 00:07:24,720
the media servers on the network and

00:07:23,039 --> 00:07:27,360
then for each server i

00:07:24,720 --> 00:07:28,240
modified the dom and add list elements

00:07:27,360 --> 00:07:31,120
to the

00:07:28,240 --> 00:07:33,280
to the html page rendered so i

00:07:31,120 --> 00:07:36,240
dynamically build a web page based on

00:07:33,280 --> 00:07:38,080
what's on the network basically

00:07:36,240 --> 00:07:40,319
and then i can do video playback with

00:07:38,080 --> 00:07:44,479
the normal video element

00:07:40,319 --> 00:07:47,520
let's stand on nowadays in webkit

00:07:44,479 --> 00:07:49,199
so there's a demo um it's really 30

00:07:47,520 --> 00:07:50,479
seconds if you want to look at it on

00:07:49,199 --> 00:07:52,879
your phone

00:07:50,479 --> 00:07:53,919
you can scan that code otherwise i can

00:07:52,879 --> 00:07:57,440
just move on

00:07:53,919 --> 00:07:59,759
but yeah it's it's an

00:07:57,440 --> 00:08:03,039
interesting showcase of uh what you can

00:07:59,759 --> 00:08:03,039
do with cog and um

00:08:03,120 --> 00:08:07,919
it gives an overview of really what you

00:08:05,520 --> 00:08:07,919
can do

00:08:08,970 --> 00:08:12,960
[Music]

00:08:10,879 --> 00:08:14,639
another thing i wanted to discuss about

00:08:12,960 --> 00:08:17,440
is acute applications

00:08:14,639 --> 00:08:20,000
um as you probably know qt is used

00:08:17,440 --> 00:08:23,120
widely used in the industry nowadays

00:08:20,000 --> 00:08:26,160
and if you have a web engine in your

00:08:23,120 --> 00:08:29,360
application such as cute webkit or

00:08:26,160 --> 00:08:30,800
cute web engine nowadays you probably

00:08:29,360 --> 00:08:32,640
would like to have an alternative

00:08:30,800 --> 00:08:34,880
because qtwork kit is not

00:08:32,640 --> 00:08:37,519
maintained anymore it has a lot of

00:08:34,880 --> 00:08:39,599
security issues

00:08:37,519 --> 00:08:40,959
and some people don't like cute web

00:08:39,599 --> 00:08:45,120
engine because it's too big

00:08:40,959 --> 00:08:47,920
uh yeah so this is an alternative to to

00:08:45,120 --> 00:08:50,160
those two options here

00:08:47,920 --> 00:08:52,080
so what we did in upstream webkit we've

00:08:50,160 --> 00:08:55,040
built a qml module

00:08:52,080 --> 00:08:56,160
that can be swapped in instead of the q2

00:08:55,040 --> 00:08:59,519
kit based uh

00:08:56,160 --> 00:09:01,519
qml module so if you have an application

00:08:59,519 --> 00:09:03,600
using cute webkit you you can directly

00:09:01,519 --> 00:09:06,480
use that module

00:09:03,600 --> 00:09:07,200
and it will use internal awp instead of

00:09:06,480 --> 00:09:10,160
like it

00:09:07,200 --> 00:09:12,000
so what you gain is uh maintain web

00:09:10,160 --> 00:09:15,040
engine with security

00:09:12,000 --> 00:09:17,200
releases and so

00:09:15,040 --> 00:09:18,959
in that sense it's quite a good

00:09:17,200 --> 00:09:22,560
advantage

00:09:18,959 --> 00:09:25,600
there are some drawbacks though

00:09:22,560 --> 00:09:28,000
um doesn't it works only on linux so

00:09:25,600 --> 00:09:31,279
if your application needs to run only

00:09:28,000 --> 00:09:32,880
the windows you're a bit screwed

00:09:31,279 --> 00:09:36,560
and then there's dependency on where you

00:09:32,880 --> 00:09:37,920
landed in ega but um that we can't

00:09:36,560 --> 00:09:39,120
really walk around and it works

00:09:37,920 --> 00:09:43,120
currently on in the

00:09:39,120 --> 00:09:44,880
eglfs qpa and while on egl as well

00:09:43,120 --> 00:09:50,160
so that means it can work on desktop and

00:09:44,880 --> 00:09:52,160
on embedded platforms

00:09:50,160 --> 00:09:53,440
to enable it you just need to download

00:09:52,160 --> 00:09:57,200
kit webkit uh

00:09:53,440 --> 00:09:57,839
wp webkit sorry and turn on that cmake

00:09:57,200 --> 00:10:01,200
option

00:09:57,839 --> 00:10:02,880
called enable the wp qt api and then

00:10:01,200 --> 00:10:03,519
around time you just need to make sure

00:10:02,880 --> 00:10:06,720
that the

00:10:03,519 --> 00:10:08,560
so file is in your import path and then

00:10:06,720 --> 00:10:12,399
i have a small

00:10:08,560 --> 00:10:15,600
code snippet qml snippet there that

00:10:12,399 --> 00:10:18,640
shows how to basically use that

00:10:15,600 --> 00:10:20,880
wp view in your application

00:10:18,640 --> 00:10:22,160
so the changes compared to kit webkit is

00:10:20,880 --> 00:10:25,600
that you just need to

00:10:22,160 --> 00:10:26,880
change the import line and uh the module

00:10:25,600 --> 00:10:29,200
name it's wp

00:10:26,880 --> 00:10:30,240
view but in the q3 kit world i think

00:10:29,200 --> 00:10:32,720
it's it's

00:10:30,240 --> 00:10:33,920
different name otherwise the api is

00:10:32,720 --> 00:10:36,959
similar so

00:10:33,920 --> 00:10:38,160
on title change here that is already

00:10:36,959 --> 00:10:41,360
available including

00:10:38,160 --> 00:10:41,360
it can be used as it is

00:10:42,720 --> 00:10:46,399
all right so and then the last thing i

00:10:44,959 --> 00:10:49,839
wanted to talk about is

00:10:46,399 --> 00:10:53,760
how to use wp in multimedia application

00:10:49,839 --> 00:10:58,399
using this trimmer uh that's a bit of a

00:10:53,760 --> 00:11:02,560
novel way um think about

00:10:58,399 --> 00:11:06,000
streaming bothers or html overlays

00:11:02,560 --> 00:11:08,360
in live live tv for instance

00:11:06,000 --> 00:11:10,720
so that could be a use case for wp um

00:11:08,360 --> 00:11:12,240
[Music]

00:11:10,720 --> 00:11:14,240
just a brief overview of about the

00:11:12,240 --> 00:11:16,000
streamer that google hasn't read about

00:11:14,240 --> 00:11:18,959
history

00:11:16,000 --> 00:11:21,519
nobody yes okay so basically it's a

00:11:18,959 --> 00:11:24,399
multimedia framework based on

00:11:21,519 --> 00:11:25,200
graphs so in your application you build

00:11:24,399 --> 00:11:27,200
a graph

00:11:25,200 --> 00:11:28,240
and the data flow will flow from the

00:11:27,200 --> 00:11:29,680
source to sync

00:11:28,240 --> 00:11:32,399
and there will be data processing like

00:11:29,680 --> 00:11:34,959
decoding and rendering

00:11:32,399 --> 00:11:36,720
um there's many many plugins i won't go

00:11:34,959 --> 00:11:40,399
into details but what i did

00:11:36,720 --> 00:11:42,560
is write a new plugin that uses wp

00:11:40,399 --> 00:11:43,180
and i built a source element for that so

00:11:42,560 --> 00:11:44,880
that the

00:11:43,180 --> 00:11:48,320
[Music]

00:11:44,880 --> 00:11:53,040
the video the webview can be outputted

00:11:48,320 --> 00:11:53,040
as a video basically as a video stream

00:11:53,120 --> 00:11:59,839
and it's quite cool because we

00:11:56,399 --> 00:12:02,480
we have zero copy uh from webkit world

00:11:59,839 --> 00:12:04,240
into this trimmer wall using the charge

00:12:02,480 --> 00:12:06,560
gl context

00:12:04,240 --> 00:12:08,800
so there's no memory copies in in there

00:12:06,560 --> 00:12:13,839
and the use cases as i said

00:12:08,800 --> 00:12:18,240
html overlays and streaming browsers

00:12:13,839 --> 00:12:20,399
i started so that's a demo i wrote

00:12:18,240 --> 00:12:22,399
on the right side you can see some html

00:12:20,399 --> 00:12:27,279
and on the left side the preview of it

00:12:22,399 --> 00:12:29,680
with a live live video uh beyond

00:12:27,279 --> 00:12:31,680
and then you can stream that i can show

00:12:29,680 --> 00:12:34,079
you show it later maybe

00:12:31,680 --> 00:12:35,839
and when you update the html it's uh

00:12:34,079 --> 00:12:38,399
updated in the video of course

00:12:35,839 --> 00:12:42,160
so that's for like the tv broadcasting

00:12:38,399 --> 00:12:42,160
world it could be useful for instance

00:12:44,560 --> 00:12:48,000
um some ongoing work i've been doing

00:12:46,880 --> 00:12:50,839
lately on that plugin

00:12:48,000 --> 00:12:52,000
adding audio support i've reported type

00:12:50,839 --> 00:12:53,920
already

00:12:52,000 --> 00:12:55,600
i need to upstream it and then

00:12:53,920 --> 00:12:57,600
navigation events in this trimmer are

00:12:55,600 --> 00:12:59,680
not really

00:12:57,600 --> 00:13:01,200
i've been designed many years ago and

00:12:59,680 --> 00:13:02,800
needs to be modernized a bit so i

00:13:01,200 --> 00:13:04,880
started working on that as well

00:13:02,800 --> 00:13:06,880
mainly adding uh mouse core support

00:13:04,880 --> 00:13:10,959
achievements

00:13:06,880 --> 00:13:10,959
and improving keyboard support as well

00:13:12,800 --> 00:13:19,360
um so the code is

00:13:16,079 --> 00:13:22,160
in wp-webkit.org

00:13:19,360 --> 00:13:24,000
we have a yocto layer the support is

00:13:22,160 --> 00:13:26,320
upstream in virtual as well

00:13:24,000 --> 00:13:27,360
this has been working quite well on imx6

00:13:26,320 --> 00:13:31,519
amx 8m

00:13:27,360 --> 00:13:31,519
platform raspberry pi three and four

00:13:31,839 --> 00:13:35,440
and it's deployed in the wild already so

00:13:34,160 --> 00:13:39,440
you can use it

00:13:35,440 --> 00:13:41,839
now i guess i have time for the movie

00:13:39,440 --> 00:13:41,839
i can

00:13:43,760 --> 00:13:46,000
okay

00:13:47,440 --> 00:14:03,839
if it works

00:14:15,199 --> 00:14:17,839
um

00:14:30,320 --> 00:14:33,600
okay it doesn't work but uh

00:14:34,480 --> 00:14:41,199
but yeah but you can start it with

00:14:38,560 --> 00:14:41,600
uh there's a flat pack available and you

00:14:41,199 --> 00:14:44,399
can

00:14:41,600 --> 00:14:45,760
install it quite easily on your desktop

00:14:44,399 --> 00:14:50,800
i can provide the

00:14:45,760 --> 00:14:59,839
flat pack ref in later on if needed

00:14:50,800 --> 00:14:59,839
but i don't have it in state here sorry

00:15:00,639 --> 00:15:07,519
no it's not working anyway

00:15:05,199 --> 00:15:13,839
so yeah that's it if you have any

00:15:07,519 --> 00:15:13,839
questions i will be happy to answer

00:15:16,830 --> 00:15:25,029
[Applause]

00:15:32,639 --> 00:15:35,600
yes the question

00:15:36,079 --> 00:15:40,399
is so how's platform support i've seen

00:15:38,000 --> 00:15:43,839
some support for imx6 i'm excited right

00:15:40,399 --> 00:15:46,639
uh anything kind new and notable in that

00:15:43,839 --> 00:15:47,199
sorry can you anything new and notable

00:15:46,639 --> 00:15:50,240
from like

00:15:47,199 --> 00:15:52,720
platforms supported by wpe

00:15:50,240 --> 00:15:54,160
yeah so i can say that i've been working

00:15:52,720 --> 00:15:58,320
on

00:15:54,160 --> 00:16:01,680
more specially on imax 8m lately

00:15:58,320 --> 00:16:04,240
on adding w making sure that wp works

00:16:01,680 --> 00:16:06,839
with the ednav driver graphics driver

00:16:04,240 --> 00:16:09,759
instead of divante

00:16:06,839 --> 00:16:11,680
and apart from that um

00:16:09,759 --> 00:16:14,480
i'm not sure what you expect and what

00:16:11,680 --> 00:16:14,480
you're asking about

00:16:20,639 --> 00:16:22,880
i think

00:16:29,839 --> 00:16:34,160
uh sorry a quick question sorry if it's

00:16:32,480 --> 00:16:36,079
basic

00:16:34,160 --> 00:16:37,519
just wanted to know what the license for

00:16:36,079 --> 00:16:41,120
wpe is

00:16:37,519 --> 00:16:51,839
yeah so the license is bsd and

00:16:41,120 --> 00:16:51,839
lgpl too okay thank you

00:16:55,680 --> 00:16:57,759

YouTube URL: https://www.youtube.com/watch?v=-TP_y0G2j5Y


