Title: DeskConnD: Secure, cross-platform IPC on the network Zeroconf + WAMP = Cross platform IPC
Publication date: 2020-07-17
Playlist: FOSDEM 2020
Description: 
	by Omer Akram

At: FOSDEM 2020
https://video.fosdem.org/2020/H.2215/deskconnd_crossplatform_ipc.webm

DeskConnD is a cross-platform, python based daemon that uses Crossbar and WAMP to enable end-to-end encrypted IPC over the network.
In this talk Omer Akram will talk about his new project that he has been working on for the past year to mainly make it easy for developers to add functionalities to their apps that were previously cumbersome to implement, having no platform-specific dependencies enables this project to be cross-platform.


Combining proven technologies like WebSocket/WAMP and ZeroConf, DeskConnD allows different components of a distributed app on the local network to securely communicate and do messaging based on the RPCs and PubSub paradigms.

Room: H.2215 (Ferrer)
Scheduled start: 2020-02-01 17:40:00
Captions: 
	00:00:05,279 --> 00:00:09,440
we are

00:00:05,920 --> 00:00:10,160
a bit behind schedule but um now we come

00:00:09,440 --> 00:00:13,440
to our

00:00:10,160 --> 00:00:17,840
last lightning talk for today it's omar

00:00:13,440 --> 00:00:21,760
akram and he will talk about desk on the

00:00:17,840 --> 00:00:25,760
secure cross-platform ipc on the network

00:00:21,760 --> 00:00:25,760
please welcome omar aquam

00:00:25,920 --> 00:00:28,080
hi

00:00:29,679 --> 00:00:36,000
okay so i'll quickly quickly

00:00:33,600 --> 00:00:37,840
start and make it quick and make sure

00:00:36,000 --> 00:00:40,480
that we end on time

00:00:37,840 --> 00:00:42,840
uh my name is omar kram i come from

00:00:40,480 --> 00:00:45,840
pakistan

00:00:42,840 --> 00:00:45,840
and

00:00:46,079 --> 00:00:50,640
well i come from pakistan and i have

00:00:48,960 --> 00:00:54,160
been part of the

00:00:50,640 --> 00:00:58,320
a core developer team at crossbar io

00:00:54,160 --> 00:01:00,160
it's a german company that that kind of

00:00:58,320 --> 00:01:02,239
sponsors the development of autobahn

00:01:00,160 --> 00:01:04,159
websocket and ramp libraries we also

00:01:02,239 --> 00:01:07,920
developed the crossbar

00:01:04,159 --> 00:01:09,680
vamp router um recently we are actually

00:01:07,920 --> 00:01:12,799
working on developing a

00:01:09,680 --> 00:01:15,360
data market that is distributed so that

00:01:12,799 --> 00:01:16,640
no single entity controls the data

00:01:15,360 --> 00:01:18,640
so we are working with different

00:01:16,640 --> 00:01:22,479
companies uh

00:01:18,640 --> 00:01:24,840
as part of that project which obviously

00:01:22,479 --> 00:01:26,320
should show something in in the next few

00:01:24,840 --> 00:01:27,840
months

00:01:26,320 --> 00:01:30,000
um i've been part of the ubuntu

00:01:27,840 --> 00:01:32,640
community for more than 10 years

00:01:30,000 --> 00:01:33,200
and maybe the next month would actually

00:01:32,640 --> 00:01:35,520
be

00:01:33,200 --> 00:01:36,960
a the 10th year where i become where

00:01:35,520 --> 00:01:38,320
when i became the ubuntu community

00:01:36,960 --> 00:01:41,520
member officially

00:01:38,320 --> 00:01:44,640
and ubuntu kind of sponsored my

00:01:41,520 --> 00:01:46,399
trip here as well and uh and finally i

00:01:44,640 --> 00:01:48,320
was a q engineer at canonical before the

00:01:46,399 --> 00:01:52,079
famous layoff that happened

00:01:48,320 --> 00:01:54,799
uh so uh i'll quickly talk about the

00:01:52,079 --> 00:01:55,439
wamp protocol itself vamp was initially

00:01:54,799 --> 00:01:58,479
defined

00:01:55,439 --> 00:02:01,360
as a sub protocol for web sockets

00:01:58,479 --> 00:02:03,200
uh the proposition was that because

00:02:01,360 --> 00:02:05,200
websocket itself was

00:02:03,200 --> 00:02:08,000
end to end and then you have a you have

00:02:05,200 --> 00:02:10,239
a server and you have a client

00:02:08,000 --> 00:02:12,160
so something that was missing was if if

00:02:10,239 --> 00:02:12,879
someone wanted to do remote procedure

00:02:12,160 --> 00:02:15,760
calls

00:02:12,879 --> 00:02:17,280
or if someone wanted to route that

00:02:15,760 --> 00:02:18,879
traffic to other computers they would

00:02:17,280 --> 00:02:20,239
have to develop those semantics

00:02:18,879 --> 00:02:22,959
themselves

00:02:20,239 --> 00:02:23,680
what the vam protocol does is it

00:02:22,959 --> 00:02:26,000
introduces

00:02:23,680 --> 00:02:28,319
remote procedure calls and publish

00:02:26,000 --> 00:02:32,239
subscribe on top of websockets

00:02:28,319 --> 00:02:34,160
and it kind of allows you to be able to

00:02:32,239 --> 00:02:38,640
write responsive websites with

00:02:34,160 --> 00:02:38,640
decoupled services um

00:02:39,040 --> 00:02:42,239
so with feedback from implementers we

00:02:41,680 --> 00:02:45,280
actually

00:02:42,239 --> 00:02:46,959
changed the protocol uh like

00:02:45,280 --> 00:02:49,360
in such a way that now any

00:02:46,959 --> 00:02:50,319
bi-directional reliable transport could

00:02:49,360 --> 00:02:53,200
be used so

00:02:50,319 --> 00:02:54,879
it's not really tied to websocket now uh

00:02:53,200 --> 00:02:56,239
any other transport could be used maybe

00:02:54,879 --> 00:02:59,120
we will be doing

00:02:56,239 --> 00:03:02,239
uh transport based on top of quick that

00:02:59,120 --> 00:03:05,519
someone was talking today as well

00:03:02,239 --> 00:03:06,720
so and all obviously zeroconf is a

00:03:05,519 --> 00:03:09,680
technology

00:03:06,720 --> 00:03:10,720
that's uh uh that's used for service

00:03:09,680 --> 00:03:13,200
discovery and

00:03:10,720 --> 00:03:14,959
name resolution on the local network uh

00:03:13,200 --> 00:03:17,040
and seems like someone disabled

00:03:14,959 --> 00:03:18,000
multicast on this wi-fi network so i had

00:03:17,040 --> 00:03:20,080
to

00:03:18,000 --> 00:03:21,280
create a hotspot on my own device to be

00:03:20,080 --> 00:03:24,400
able to do stuff

00:03:21,280 --> 00:03:25,200
uh i'm assuming that's due to making

00:03:24,400 --> 00:03:28,080
sure that

00:03:25,200 --> 00:03:29,280
the traffic doesn't go crazy and the

00:03:28,080 --> 00:03:32,480
routers

00:03:29,280 --> 00:03:32,480
are able to sustain that

00:03:32,720 --> 00:03:37,680
so i the main thing is this this is the

00:03:36,159 --> 00:03:39,840
project that i wanted to talk about this

00:03:37,680 --> 00:03:42,080
is called desk on it's your connection

00:03:39,840 --> 00:03:43,920
to your uh it's your computer's

00:03:42,080 --> 00:03:46,239
connection to different things

00:03:43,920 --> 00:03:48,560
uh your computer could be a raspberry pi

00:03:46,239 --> 00:03:52,560
it could be your desktop itself

00:03:48,560 --> 00:03:54,799
uh in in some cases uh it could be your

00:03:52,560 --> 00:03:56,319
mobile phone which is right now for

00:03:54,799 --> 00:03:57,599
example my mobile phone is connected to

00:03:56,319 --> 00:03:58,560
my computer and it's actually

00:03:57,599 --> 00:04:00,480
controlling

00:03:58,560 --> 00:04:02,159
uh these slides i'm obviously not

00:04:00,480 --> 00:04:05,280
pressing keyboard buttons

00:04:02,159 --> 00:04:09,040
there but i'm doing these

00:04:05,280 --> 00:04:11,120
rpc calls that are like these procedures

00:04:09,040 --> 00:04:13,120
are exposed by my computer and i'm just

00:04:11,120 --> 00:04:14,959
pushing them from here

00:04:13,120 --> 00:04:17,040
this is not something like a

00:04:14,959 --> 00:04:18,320
groundbreaking or this software is not

00:04:17,040 --> 00:04:19,759
groundbreaking obviously

00:04:18,320 --> 00:04:22,240
many people have done that in the past

00:04:19,759 --> 00:04:24,479
as well uh but i just hacked this around

00:04:22,240 --> 00:04:25,440
last night so i could do something for

00:04:24,479 --> 00:04:28,000
this

00:04:25,440 --> 00:04:30,160
um how it started well as most of the

00:04:28,000 --> 00:04:32,960
open source projects start it started as

00:04:30,160 --> 00:04:35,040
something that i was trying to scratch

00:04:32,960 --> 00:04:35,600
my itch like i had some use cases at my

00:04:35,040 --> 00:04:38,080
home

00:04:35,600 --> 00:04:39,919
i wanted to control the gpio pins

00:04:38,080 --> 00:04:40,639
running on an ubuntu core device on my

00:04:39,919 --> 00:04:42,320
home

00:04:40,639 --> 00:04:44,000
i have this home automation project

00:04:42,320 --> 00:04:46,800
which kind of

00:04:44,000 --> 00:04:48,320
balances load on in my home uh using

00:04:46,800 --> 00:04:51,360
solar power for example

00:04:48,320 --> 00:04:54,240
in in the time of 10 am to

00:04:51,360 --> 00:04:55,199
4 pm i want to be able to run as much as

00:04:54,240 --> 00:04:58,320
load on that

00:04:55,199 --> 00:05:01,520
as possible and so

00:04:58,320 --> 00:05:03,280
i wrote this thing to be able to control

00:05:01,520 --> 00:05:04,240
these gpio pins from a mobile phone or

00:05:03,280 --> 00:05:07,360
my computer

00:05:04,240 --> 00:05:09,600
for that sense and obviously at a later

00:05:07,360 --> 00:05:10,000
stage i wanted i worked in a co-working

00:05:09,600 --> 00:05:12,400
space

00:05:10,000 --> 00:05:13,600
and one of the a problem that came up

00:05:12,400 --> 00:05:15,360
for me was

00:05:13,600 --> 00:05:17,039
in some cases you forget to dock your

00:05:15,360 --> 00:05:19,039
desktop screen and you move away

00:05:17,039 --> 00:05:21,440
and you have this constant fear that

00:05:19,039 --> 00:05:24,320
someone might poke into your computer so

00:05:21,440 --> 00:05:26,320
what i implemented was i wrote i exposed

00:05:24,320 --> 00:05:29,360
an interface from my computer and

00:05:26,320 --> 00:05:30,880
hooked it to that diamond and ultimately

00:05:29,360 --> 00:05:33,199
it was controlled by my

00:05:30,880 --> 00:05:35,120
mobile phone so whenever i stepped away

00:05:33,199 --> 00:05:36,000
from my desktop i could actually check

00:05:35,120 --> 00:05:38,880
my phone

00:05:36,000 --> 00:05:39,600
and that if i forgot to lock it and i

00:05:38,880 --> 00:05:41,600
could

00:05:39,600 --> 00:05:42,720
actually lock the desktop screen uh

00:05:41,600 --> 00:05:44,880
obviously this was

00:05:42,720 --> 00:05:46,960
working on most linux distributions i

00:05:44,880 --> 00:05:51,199
tested the kubuntu

00:05:46,960 --> 00:05:53,520
uh ubuntu and a few others well light dm

00:05:51,199 --> 00:05:54,720
was working gdm and a few other display

00:05:53,520 --> 00:05:58,400
managers were working quite

00:05:54,720 --> 00:06:02,400
fine um and then this thing

00:05:58,400 --> 00:06:04,160
um so i think most mostly we know that

00:06:02,400 --> 00:06:05,840
if you watch netflix on your mobile

00:06:04,160 --> 00:06:07,360
phone when you go to full screen it

00:06:05,840 --> 00:06:08,400
automatically raises the brightness of

00:06:07,360 --> 00:06:10,080
the device

00:06:08,400 --> 00:06:12,319
this is something that was missing for

00:06:10,080 --> 00:06:14,000
desktops so i wrote a chrome extension

00:06:12,319 --> 00:06:15,759
to be able to do that

00:06:14,000 --> 00:06:17,360
a chrome extension would send a request

00:06:15,759 --> 00:06:18,960
to the demon running on my desktop it

00:06:17,360 --> 00:06:21,199
would raise the brightness

00:06:18,960 --> 00:06:22,639
uh well while talking well not talking

00:06:21,199 --> 00:06:23,520
direct well it would actually write

00:06:22,639 --> 00:06:26,639
those

00:06:23,520 --> 00:06:27,919
values to the backlight driver on my

00:06:26,639 --> 00:06:30,800
linux based system

00:06:27,919 --> 00:06:31,600
so these were some of the use cases that

00:06:30,800 --> 00:06:34,720
called me

00:06:31,600 --> 00:06:36,160
to write that thing initially it was all

00:06:34,720 --> 00:06:39,039
coupled together but

00:06:36,160 --> 00:06:40,639
with time given the use cases i kind of

00:06:39,039 --> 00:06:42,000
broke it down into different components

00:06:40,639 --> 00:06:44,720
so that it could be

00:06:42,000 --> 00:06:46,560
reused by different people trying to

00:06:44,720 --> 00:06:48,800
implement different use cases or

00:06:46,560 --> 00:06:49,759
any scenarios that may come up from them

00:06:48,800 --> 00:06:51,440
so

00:06:49,759 --> 00:06:53,599
at the core of this technology is a

00:06:51,440 --> 00:06:56,240
router it's called crossbar right now

00:06:53,599 --> 00:06:58,560
i'm using that router

00:06:56,240 --> 00:07:00,400
you could implement something for

00:06:58,560 --> 00:07:03,120
discovery obviously i use this python

00:07:00,400 --> 00:07:04,880
library python xerocon for discovery so

00:07:03,120 --> 00:07:05,440
whenever this server starts on a local

00:07:04,880 --> 00:07:08,720
network

00:07:05,440 --> 00:07:11,120
it's discoverable by other devices and

00:07:08,720 --> 00:07:12,880
you could hook in different clients one

00:07:11,120 --> 00:07:14,080
client obviously in this case is my

00:07:12,880 --> 00:07:17,199
mobile phone

00:07:14,080 --> 00:07:19,120
the other uh could be a raspberry pi or

00:07:17,199 --> 00:07:20,479
it could also be my desktop well there

00:07:19,120 --> 00:07:21,120
is a client running on my desktop as

00:07:20,479 --> 00:07:24,240
well

00:07:21,120 --> 00:07:26,080
the cli used to do the pairing you run a

00:07:24,240 --> 00:07:28,000
command on your desktop to

00:07:26,080 --> 00:07:29,599
generate a key code that then you put in

00:07:28,000 --> 00:07:31,199
your mobile phone which actually allows

00:07:29,599 --> 00:07:33,599
you to create these devices for security

00:07:31,199 --> 00:07:33,599
reasons

00:07:34,080 --> 00:07:37,680
and obviously it's cross-platform the

00:07:36,479 --> 00:07:41,280
technology that's

00:07:37,680 --> 00:07:44,560
being used here pretty much

00:07:41,280 --> 00:07:47,199
runs on all platforms uh it works

00:07:44,560 --> 00:07:48,879
on windows on linux on mac uh the core

00:07:47,199 --> 00:07:49,520
thing the thing that's doing all the

00:07:48,879 --> 00:07:51,199
routing

00:07:49,520 --> 00:07:53,280
and all the remote procedure calls and

00:07:51,199 --> 00:07:54,879
the security layer uh that is cross

00:07:53,280 --> 00:07:56,400
platform and then the multicast dns

00:07:54,879 --> 00:07:58,000
which i already said

00:07:56,400 --> 00:08:00,720
isn't working on this environment but

00:07:58,000 --> 00:08:02,800
obviously uh it's pretty mature enough

00:08:00,720 --> 00:08:04,000
that apple itself uses its in most of

00:08:02,800 --> 00:08:07,039
its devices and

00:08:04,000 --> 00:08:09,680
uh many uh many

00:08:07,039 --> 00:08:11,840
amazon tablets are also using that uh

00:08:09,680 --> 00:08:13,599
well in on linux we have awahe but i'm

00:08:11,840 --> 00:08:15,680
not sure if we are using it that much

00:08:13,599 --> 00:08:19,919
apart from the printing stack but

00:08:15,680 --> 00:08:22,800
uh that is how it is

00:08:19,919 --> 00:08:23,759
and okay so i came up with this little

00:08:22,800 --> 00:08:26,639
piece of code that i

00:08:23,759 --> 00:08:26,879
wrote last night for the most part this

00:08:26,639 --> 00:08:29,759
is

00:08:26,879 --> 00:08:30,800
what's exposing the functionality on my

00:08:29,759 --> 00:08:34,320
desktop this is

00:08:30,800 --> 00:08:36,560
talking to you input to

00:08:34,320 --> 00:08:38,719
send key events so these are four key

00:08:36,560 --> 00:08:40,719
events that i

00:08:38,719 --> 00:08:42,399
assigned to different room procedure

00:08:40,719 --> 00:08:44,959
rpcs uh

00:08:42,399 --> 00:08:45,680
so which i'm calling from here right now

00:08:44,959 --> 00:08:47,920
obviously

00:08:45,680 --> 00:08:49,600
uh that there is one for stopping and

00:08:47,920 --> 00:08:50,240
starting and then there is next and

00:08:49,600 --> 00:08:52,399
previous

00:08:50,240 --> 00:08:54,320
this is being controlled this is for the

00:08:52,399 --> 00:08:56,399
most part sending key events then

00:08:54,320 --> 00:08:57,440
the right arrow key the left arrow key

00:08:56,399 --> 00:08:59,839
well actually

00:08:57,440 --> 00:09:01,680
and the f5 and another key i don't know

00:08:59,839 --> 00:09:04,240
which one is that i don't remember it

00:09:01,680 --> 00:09:04,800
right now that's page down page up

00:09:04,240 --> 00:09:08,560
escape

00:09:04,800 --> 00:09:10,480
and uh f5 key okay so this is the

00:09:08,560 --> 00:09:11,600
simplest code that that is running on my

00:09:10,480 --> 00:09:13,200
computer which is exposing this

00:09:11,600 --> 00:09:15,360
functionality

00:09:13,200 --> 00:09:17,120
and here is the overall picture of this

00:09:15,360 --> 00:09:19,360
thing uh i wanted to do

00:09:17,120 --> 00:09:21,279
like this architect of this thing the

00:09:19,360 --> 00:09:24,000
diamond itself which is running

00:09:21,279 --> 00:09:24,880
uh which is the router is running on my

00:09:24,000 --> 00:09:28,160
desktop

00:09:24,880 --> 00:09:28,959
i've called it tescon b inspired by lexd

00:09:28,160 --> 00:09:32,160
and systemd

00:09:28,959 --> 00:09:34,160
the naming obviously um then

00:09:32,160 --> 00:09:36,000
there is an android client there is a

00:09:34,160 --> 00:09:39,680
chrome extension which is called

00:09:36,000 --> 00:09:43,440
bright flicks uh which tries

00:09:39,680 --> 00:09:45,600
uh to like race which obviously monitors

00:09:43,440 --> 00:09:47,440
netflix.com and whenever it goes full

00:09:45,600 --> 00:09:50,000
screen it sends a signal to the

00:09:47,440 --> 00:09:51,839
diamond which forwards that signal to

00:09:50,000 --> 00:09:52,560
the other component that's running on my

00:09:51,839 --> 00:09:55,440
desktop and

00:09:52,560 --> 00:09:56,560
that raises the screen brightness and

00:09:55,440 --> 00:09:59,200
for my home

00:09:56,560 --> 00:10:01,279
use case i already told about the picon

00:09:59,200 --> 00:10:03,760
that is also another project that's

00:10:01,279 --> 00:10:05,120
sub project of this umbrella project

00:10:03,760 --> 00:10:08,160
pycon is your

00:10:05,120 --> 00:10:11,360
raspberry pi's connection to things and

00:10:08,160 --> 00:10:13,519
right now that component is only

00:10:11,360 --> 00:10:14,800
being used to control the gpio pins on

00:10:13,519 --> 00:10:17,519
that thing and

00:10:14,800 --> 00:10:18,079
which is producing quite a lot of saving

00:10:17,519 --> 00:10:21,600
for me

00:10:18,079 --> 00:10:23,360
as as it comes to uh using that solar

00:10:21,600 --> 00:10:26,880
system in my home

00:10:23,360 --> 00:10:30,000
and so this is

00:10:26,880 --> 00:10:32,720
snaps obviously since i mostly use

00:10:30,000 --> 00:10:34,880
linux-based systems on my computer so

00:10:32,720 --> 00:10:37,440
much of this is being shipped as snaps

00:10:34,880 --> 00:10:38,399
and they are the first their first class

00:10:37,440 --> 00:10:42,320
citizens here

00:10:38,399 --> 00:10:45,279
obviously they they simplify application

00:10:42,320 --> 00:10:46,720
delivery story very much and due to the

00:10:45,279 --> 00:10:48,560
fact that snaps are

00:10:46,720 --> 00:10:50,240
uh you can use snapcraft to build

00:10:48,560 --> 00:10:53,360
different packages remotely on

00:10:50,240 --> 00:10:54,800
on canonical provided servers uh you get

00:10:53,360 --> 00:10:57,680
free rbhf

00:10:54,800 --> 00:10:59,040
bills that that are very essential for

00:10:57,680 --> 00:11:01,040
me to be able to run those

00:10:59,040 --> 00:11:02,720
my software and on the raspberry pi

00:11:01,040 --> 00:11:03,519
because trying to build something on the

00:11:02,720 --> 00:11:06,079
raspberry pi

00:11:03,519 --> 00:11:07,519
is a is a resource killer and it also

00:11:06,079 --> 00:11:10,560
takes quite a few

00:11:07,519 --> 00:11:12,640
hours in some cases to do that so

00:11:10,560 --> 00:11:14,959
this service obviously kind of helps me

00:11:12,640 --> 00:11:17,040
do that and obviously they are secured

00:11:14,959 --> 00:11:20,160
because

00:11:17,040 --> 00:11:21,440
you input in itself is very dangerous to

00:11:20,160 --> 00:11:23,519
expose to anyone

00:11:21,440 --> 00:11:25,360
uh right now i've been talking to the

00:11:23,519 --> 00:11:28,480
ubuntu guys to be

00:11:25,360 --> 00:11:30,880
able to allow that they haven't allowed

00:11:28,480 --> 00:11:32,640
there isn't an interface for you input

00:11:30,880 --> 00:11:35,279
to be accessed in a

00:11:32,640 --> 00:11:36,399
confined snap because you are talking

00:11:35,279 --> 00:11:39,040
directly

00:11:36,399 --> 00:11:39,760
uh to slash flash u input which which is

00:11:39,040 --> 00:11:43,519
very

00:11:39,760 --> 00:11:47,279
a let's say open for

00:11:43,519 --> 00:11:49,920
a key in key event

00:11:47,279 --> 00:11:51,600
and we cannot afford that because a bad

00:11:49,920 --> 00:11:52,720
actor could do lots of different things

00:11:51,600 --> 00:11:55,120
that

00:11:52,720 --> 00:11:55,760
most of the people wouldn't really want

00:11:55,120 --> 00:11:58,880
things

00:11:55,760 --> 00:12:01,040
to be and what's next

00:11:58,880 --> 00:12:02,639
i the project obviously is hosted on

00:12:01,040 --> 00:12:04,079
github i've been doing

00:12:02,639 --> 00:12:05,680
active development of this thing for the

00:12:04,079 --> 00:12:09,200
last few months uh

00:12:05,680 --> 00:12:10,800
well i was quite busy for the last two

00:12:09,200 --> 00:12:13,200
three months so the development pace

00:12:10,800 --> 00:12:16,880
isn't that fast as it used to be

00:12:13,200 --> 00:12:19,519
a while back ago but uh now that uh

00:12:16,880 --> 00:12:20,880
i do uh plan to do most of the changes

00:12:19,519 --> 00:12:22,079
that i have planned in the next couple

00:12:20,880 --> 00:12:26,399
of months so that

00:12:22,079 --> 00:12:28,480
uh it's shippable so that many

00:12:26,399 --> 00:12:30,399
people in the community could also

00:12:28,480 --> 00:12:33,680
contribute to this project so

00:12:30,399 --> 00:12:36,880
i invite anyone uh

00:12:33,680 --> 00:12:37,600
if there is interest to just clone the

00:12:36,880 --> 00:12:39,440
projects

00:12:37,600 --> 00:12:42,079
fork them report any bugs if you are

00:12:39,440 --> 00:12:45,839
able to run them on your systems and

00:12:42,079 --> 00:12:48,880
i'll happily try to fix those and

00:12:45,839 --> 00:12:53,440
any questions or anything that's

00:12:48,880 --> 00:12:56,720
i try to finish it

00:12:53,440 --> 00:12:56,720
and you could contact me

00:13:00,639 --> 00:13:05,360
thanks oma for your talk and we still

00:13:03,279 --> 00:13:07,760
have two and a half minutes so if

00:13:05,360 --> 00:13:12,880
there's someone who wants to ask a quick

00:13:07,760 --> 00:13:14,720
question just um

00:13:12,880 --> 00:13:17,920
raise your hand and i will bring the

00:13:14,720 --> 00:13:22,000
phone microphone to you

00:13:17,920 --> 00:13:26,399
nobody okay then thanks again

00:13:22,000 --> 00:13:28,399
oh there is one there is

00:13:26,399 --> 00:13:29,519
the router where um where does the

00:13:28,399 --> 00:13:32,720
router run on

00:13:29,519 --> 00:13:33,760
on my pc yes on your pc because that's

00:13:32,720 --> 00:13:36,880
where

00:13:33,760 --> 00:13:38,959
these apis get exposed

00:13:36,880 --> 00:13:39,920
so your route as soon as the router runs

00:13:38,959 --> 00:13:42,399
on your pc

00:13:39,920 --> 00:13:42,959
uh it sends its name on the local

00:13:42,399 --> 00:13:45,279
network

00:13:42,959 --> 00:13:46,480
using multicast dns so that other

00:13:45,279 --> 00:13:49,600
computers on the network

00:13:46,480 --> 00:13:50,240
are able to discover that so that

00:13:49,600 --> 00:13:52,079
enables

00:13:50,240 --> 00:13:53,440
easy access okay it's for the local

00:13:52,079 --> 00:13:55,120
network yes it's

00:13:53,440 --> 00:13:57,120
totally around the local network in

00:13:55,120 --> 00:13:58,240
future there will be support for remote

00:13:57,120 --> 00:13:59,760
access as well like

00:13:58,240 --> 00:14:02,079
the router running on your computer will

00:13:59,760 --> 00:14:04,079
be able to connect to a remote router

00:14:02,079 --> 00:14:06,560
provided by me maybe or you would

00:14:04,079 --> 00:14:07,120
also be able to host that and then you

00:14:06,560 --> 00:14:09,199
could

00:14:07,120 --> 00:14:10,240
do all these calls over the internet as

00:14:09,199 --> 00:14:11,920
well there

00:14:10,240 --> 00:14:14,880
the technology is there it's just a

00:14:11,920 --> 00:14:14,880
matter of doing it

00:14:15,040 --> 00:14:30,480
so another one yeah

00:14:18,240 --> 00:14:32,560
thanks again

00:14:30,480 --> 00:14:32,560

YouTube URL: https://www.youtube.com/watch?v=TNA1LEBwVY8


