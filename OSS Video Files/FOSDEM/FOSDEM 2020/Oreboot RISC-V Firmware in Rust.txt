Title: Oreboot RISC-V Firmware in Rust
Publication date: 2020-07-10
Playlist: FOSDEM 2020
Description: 
	by Ryan O'Leary

At: FOSDEM 2020
https://video.fosdem.org/2020/K.3.401/riscv_oreboot.webm

Oreboot = Coreboot - C. Oreboot is a fully open-source power-on-reset and romstage firmware written in Rust. Oreboot can boot a HiFive RISC-V processor to Linux with a Go user-mode.


Oreboot rethinks the firmware driver models. Each driver is distilled to four basic functions: init, pread, pwrite and shutdown. This interface allows us to make convenient higher-level drivers such as a "union driver" which duplicates a single write operation to multiple drivers. This makes consoles which have multiple underlying UART drivers elegant.


By using the Rust programming language, Oreboot has a leg-up in terms of security and reliability compared to contemporary firmware written in C or assembly. Rust's borrow-checker ensures pointers are not used after freed and proves that coroutines are thread-safe at compile time.


In this talk, we will also present a short overview of the basics of Rust, how our driver model incorporates coroutines and the bootflow of Oreboot.

Room: K.3.401
Scheduled start: 2020-02-01 12:30:00
YouTube URL: https://www.youtube.com/watch?v=DoK6lYnISc4


