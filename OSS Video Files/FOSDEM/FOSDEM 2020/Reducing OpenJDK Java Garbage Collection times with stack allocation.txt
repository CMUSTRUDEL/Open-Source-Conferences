Title: Reducing OpenJDK Java Garbage Collection times with stack allocation
Publication date: 2020-07-12
Playlist: FOSDEM 2020
Description: 
	by Nikola Grcevski

At: FOSDEM 2020
https://video.fosdem.org/2020/H.1302/reducing_gc_times.webm

In this talk we'll explore ways that the JVM can reduce the object allocation rate of Java programs automatically by performing stack allocation of objects that are known to be local to a method, or in compiler terms non-escaping. The discussion is focused on employing the escape analysis optimization in the OpenJDK Hotspot C2 compiler to determine which Java objects can be stack allocated, and how this optimization can reduce pressure on the Java JVM garbage collectors.


We'll show some results on how various real world applications can benefit from such optimizations and describe the methodology of how we prototyped this in OpenJDK. Our work is only in prototype state at this moment and we are looking for more data to understand how broadly applicable this optimizations is. This work wouldn't be possible without free open source access to Java.

Room: H.1302 (Depage)
Scheduled start: 2020-02-01 14:20:00
YouTube URL: https://www.youtube.com/watch?v=A_s2bx5RWMU


