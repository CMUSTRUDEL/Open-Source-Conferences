Title: The Different Ways of Minimizing ANY
Publication date: 2020-07-17
Playlist: FOSDEM 2020
Description: 
	by Edward Lewis

At: FOSDEM 2020
https://video.fosdem.org/2020/H.1309/dns_minimizing_any.webm

The DNS Protocol has features that have grown to become liabilities.  The query type "ANY" is one.  Earlier this year a published RFC document describes how a DNS server may respond to such queries while reducing the liability.  But the document does not define a definitive means for a server to signal that it is differing from the original protocol.  This presentation measures of the impact of having no definitive means specified and examines the "fear, uncertainty, and doubt" of lacking explicit signals.
The "minimal ANY responses" RFC (Providing Minimal-Sized Responses to DNS Queries That Have QTYPE=ANY, a.k.a. RFC 8482) results in about 1% of the TLD nameservers indicating they are minimizing ANY responses.
 That's (only) about 250 cases.
 What is troubling is that there are about 9 different responses observed to indicate the response is "minimized"
 9 different ways in just 250 samples, "fuzzing" the protocol
 The morale of this tale is that "fuzzying" the protocol is worrisome. Â (Not that minimizing ANY is a bad thing.)

Room: H.1309 (Van Rijn)
Scheduled start: 2020-02-01 13:05:00
Captions: 
	00:00:06,240 --> 00:00:10,160
hello everybody

00:00:07,120 --> 00:00:11,679
welcome to our final talk of the session

00:00:10,160 --> 00:00:13,920
out of the day there's another dev room

00:00:11,679 --> 00:00:17,119
in here this afternoon

00:00:13,920 --> 00:00:19,760
this is edward lewis of icann

00:00:17,119 --> 00:00:21,920
without having hardware troubles like

00:00:19,760 --> 00:00:24,800
all of us all the time

00:00:21,920 --> 00:00:24,800
and eyesight problems

00:00:25,279 --> 00:00:29,199
the the microphone fell off the clip and

00:00:28,160 --> 00:00:30,720
when i look at something that small it

00:00:29,199 --> 00:00:34,320
disappears because my

00:00:30,720 --> 00:00:38,160
age of eyesight is advancing

00:00:34,320 --> 00:00:40,879
and i left my reading glasses my my uh

00:00:38,160 --> 00:00:43,040
other jacket edwards will be talking

00:00:40,879 --> 00:00:45,280
about a different way of minimizing any

00:00:43,040 --> 00:00:46,239
yes good luck thank you thank you thank

00:00:45,280 --> 00:00:49,200
you very much

00:00:46,239 --> 00:00:51,120
all right so um this i guess this is

00:00:49,200 --> 00:00:53,680
kind of sort of a pet peeve of mine

00:00:51,120 --> 00:00:54,879
um and i talked to the authors about it

00:00:53,680 --> 00:00:56,640
uh of the document

00:00:54,879 --> 00:00:58,399
and they encouraged me to bring this and

00:00:56,640 --> 00:01:00,079
bring it up i'm going to try to make

00:00:58,399 --> 00:01:01,199
this pet peeve interesting to software

00:01:00,079 --> 00:01:02,239
developers that's kind of where i'm

00:01:01,199 --> 00:01:05,439
going with this

00:01:02,239 --> 00:01:06,880
um so uh the the title here

00:01:05,439 --> 00:01:09,360
in the subtitle i have the name of a

00:01:06,880 --> 00:01:10,960
document it's an rfc from the ietf came

00:01:09,360 --> 00:01:13,119
out a little while ago

00:01:10,960 --> 00:01:15,119
uh talking about how to minimize uh

00:01:13,119 --> 00:01:17,520
response responding to any

00:01:15,119 --> 00:01:18,960
um i'll talk about why we have this

00:01:17,520 --> 00:01:20,880
document a little bit about that

00:01:18,960 --> 00:01:23,280
an observation i've made a measurement

00:01:20,880 --> 00:01:24,880
based on dealing with this

00:01:23,280 --> 00:01:26,320
then trying to find out why i see the

00:01:24,880 --> 00:01:28,640
results i saw

00:01:26,320 --> 00:01:30,000
and then see is this a good thing or a

00:01:28,640 --> 00:01:30,960
bad thing for the trend of software

00:01:30,000 --> 00:01:33,840
development

00:01:30,960 --> 00:01:34,479
and of course i have to ment uh bert who

00:01:33,840 --> 00:01:35,759
bears

00:01:34,479 --> 00:01:37,759
camel at the end of this because that's

00:01:35,759 --> 00:01:40,799
everything's about the camel

00:01:37,759 --> 00:01:41,920
uh so the document uh why does it exist

00:01:40,799 --> 00:01:44,399
the q type

00:01:41,920 --> 00:01:46,479
q type any is a feature of the original

00:01:44,399 --> 00:01:48,720
dns it's been around since the start

00:01:46,479 --> 00:01:49,520
um and it's had it has basically three

00:01:48,720 --> 00:01:52,560
uses

00:01:49,520 --> 00:01:54,479
one's benign that is you can use it to

00:01:52,560 --> 00:01:55,759
get a lot of information about a name

00:01:54,479 --> 00:01:57,600
if you go to the authoritative server

00:01:55,759 --> 00:01:58,479
and ask it and you can get everything

00:01:57,600 --> 00:01:59,840
that's there you're kind of like

00:01:58,479 --> 00:02:01,360
snooping on what the authoritative

00:01:59,840 --> 00:02:02,960
server is saying about that name

00:02:01,360 --> 00:02:04,560
regardless of type it has everything

00:02:02,960 --> 00:02:07,600
comes back

00:02:04,560 --> 00:02:09,520
it has a problematic use because some

00:02:07,600 --> 00:02:12,000
people realize they could do that

00:02:09,520 --> 00:02:13,440
and use it to ask recursive servers the

00:02:12,000 --> 00:02:15,360
same question

00:02:13,440 --> 00:02:16,720
not really recursive servers don't get

00:02:15,360 --> 00:02:19,520
all of the records

00:02:16,720 --> 00:02:21,360
so they may not have all of the stuff

00:02:19,520 --> 00:02:22,080
and any and all became kind of confused

00:02:21,360 --> 00:02:24,160
and that was the first

00:02:22,080 --> 00:02:25,360
road down to this being a problem number

00:02:24,160 --> 00:02:28,000
then finally

00:02:25,360 --> 00:02:29,040
it became kind of a what is a malicious

00:02:28,000 --> 00:02:30,480
use of this

00:02:29,040 --> 00:02:32,160
because if you wanted to generate a

00:02:30,480 --> 00:02:34,879
large volume of traffic for

00:02:32,160 --> 00:02:35,680
for say a traffic flooding ddos you

00:02:34,879 --> 00:02:37,599
could ask for

00:02:35,680 --> 00:02:38,720
all the records any of the records at

00:02:37,599 --> 00:02:40,480
some name and get

00:02:38,720 --> 00:02:43,120
huge massive stuff especially with dns

00:02:40,480 --> 00:02:45,599
sec uh the larger use of names now

00:02:43,120 --> 00:02:47,040
and flood uh victims with lots of

00:02:45,599 --> 00:02:49,120
traffic

00:02:47,040 --> 00:02:50,720
those are the three uh probably most

00:02:49,120 --> 00:02:52,319
obvious ways of seeing this

00:02:50,720 --> 00:02:54,160
query go from being something that was

00:02:52,319 --> 00:02:56,000
useful to something that we really

00:02:54,160 --> 00:02:59,200
wanted to kind of get rid of

00:02:56,000 --> 00:02:59,599
so uh and for a while i was very much in

00:02:59,200 --> 00:03:00,720
getting

00:02:59,599 --> 00:03:02,319
i want to get rid of this too at one

00:03:00,720 --> 00:03:03,360
time when i was working in a job that

00:03:02,319 --> 00:03:05,120
this was in fact uh

00:03:03,360 --> 00:03:06,400
impacting us uh but when this was

00:03:05,120 --> 00:03:07,760
written i was not part of the

00:03:06,400 --> 00:03:09,840
the effort it had moved on to other

00:03:07,760 --> 00:03:13,280
folks and i moved out of that job uh

00:03:09,840 --> 00:03:15,840
so but in doing this and saying that the

00:03:13,280 --> 00:03:18,159
this any we had to get kind of stopped

00:03:15,840 --> 00:03:19,920
using any queries

00:03:18,159 --> 00:03:21,440
what do you do instead how do you say no

00:03:19,920 --> 00:03:22,720
i don't do that anymore yes it doesn't

00:03:21,440 --> 00:03:24,080
really happen

00:03:22,720 --> 00:03:26,239
but there were a few ways to look at

00:03:24,080 --> 00:03:28,560
this one was to say we don't do that but

00:03:26,239 --> 00:03:29,920
we don't have that way of doing this

00:03:28,560 --> 00:03:33,040
in the dns it's kind of funny because

00:03:29,920 --> 00:03:36,159
videos you say no to someone's

00:03:33,040 --> 00:03:38,159
query uh in in a sense of an error

00:03:36,159 --> 00:03:39,760
that may make them try again or even

00:03:38,159 --> 00:03:41,280
more frequently in fact we see if we

00:03:39,760 --> 00:03:44,239
stop answering queries

00:03:41,280 --> 00:03:45,200
for for reasons we see traffic come up

00:03:44,239 --> 00:03:46,560
instead of go down

00:03:45,200 --> 00:03:49,280
it goes backwards because people are

00:03:46,560 --> 00:03:52,959
trying harder to get information

00:03:49,280 --> 00:03:54,480
also uh yeah we also realize we want to

00:03:52,959 --> 00:03:55,920
help those that were doing things the

00:03:54,480 --> 00:03:56,400
old way backwards capacity those that

00:03:55,920 --> 00:03:58,159
were

00:03:56,400 --> 00:04:00,000
using the problematic version of this we

00:03:58,159 --> 00:04:02,400
want to make them not be pained by

00:04:00,000 --> 00:04:03,840
this and so the protocol developers

00:04:02,400 --> 00:04:05,840
tried to come up with some way

00:04:03,840 --> 00:04:07,280
to say no we're not doing it anymore

00:04:05,840 --> 00:04:08,879
that would appease all of the interests

00:04:07,280 --> 00:04:12,400
that were involved here

00:04:08,879 --> 00:04:14,400
uh and to go to go before i go further

00:04:12,400 --> 00:04:15,840
the way that says no is that there are

00:04:14,400 --> 00:04:17,359
three in the doctor there are three

00:04:15,840 --> 00:04:19,199
different things that can happen

00:04:17,359 --> 00:04:20,639
instead of sending back everything you

00:04:19,199 --> 00:04:23,360
have about the name

00:04:20,639 --> 00:04:24,000
uh when you're asked for for any any is

00:04:23,360 --> 00:04:26,320
not all but

00:04:24,000 --> 00:04:27,600
any is a query you can send back a

00:04:26,320 --> 00:04:29,840
subset

00:04:27,600 --> 00:04:32,240
just pick something and just send it

00:04:29,840 --> 00:04:33,840
back minimize it coming back

00:04:32,240 --> 00:04:35,919
the second thing is to come back with a

00:04:33,840 --> 00:04:36,479
synthesized h info which in the previous

00:04:35,919 --> 00:04:38,960
talk

00:04:36,479 --> 00:04:39,600
uh leo mentioned that that was revived

00:04:38,960 --> 00:04:41,680
by

00:04:39,600 --> 00:04:42,960
cloudflare's effort who happened to be

00:04:41,680 --> 00:04:45,040
the people

00:04:42,960 --> 00:04:46,160
participating in this document they

00:04:45,040 --> 00:04:48,160
brought that back to life saying we'll

00:04:46,160 --> 00:04:50,320
use the h info record to say

00:04:48,160 --> 00:04:51,680
this is a minimized any query out there

00:04:50,320 --> 00:04:55,360
and the third one was

00:04:51,680 --> 00:04:56,960
try to guess what the query wanted

00:04:55,360 --> 00:04:58,479
and if you've ever written dns code you

00:04:56,960 --> 00:05:00,000
realize that dns doesn't give you much

00:04:58,479 --> 00:05:00,400
information beyond here's what i'm

00:05:00,000 --> 00:05:02,639
asking

00:05:00,400 --> 00:05:03,919
i don't tell you why so it's kind of

00:05:02,639 --> 00:05:05,280
hard to guess

00:05:03,919 --> 00:05:07,520
when you're writing code i don't code

00:05:05,280 --> 00:05:08,960
that can guess is really kind of hard

00:05:07,520 --> 00:05:10,639
sometimes it might you might have an

00:05:08,960 --> 00:05:13,680
idea but um

00:05:10,639 --> 00:05:15,280
not always now this

00:05:13,680 --> 00:05:17,120
i'm not picking on this document because

00:05:15,280 --> 00:05:19,199
the document actually mentions

00:05:17,120 --> 00:05:22,320
the points i want to make and these are

00:05:19,199 --> 00:05:24,240
verbatim uh clips from the document

00:05:22,320 --> 00:05:26,000
the first one says this mecca does not

00:05:24,240 --> 00:05:26,479
signal that an incomplete subset has

00:05:26,000 --> 00:05:27,840
been

00:05:26,479 --> 00:05:30,240
coming back it doesn't tell you that

00:05:27,840 --> 00:05:32,720
it's minimized it number two

00:05:30,240 --> 00:05:34,639
it receives h info in response but it's

00:05:32,720 --> 00:05:36,479
not possible to tell us h info was

00:05:34,639 --> 00:05:38,320
synthesized for this purpose

00:05:36,479 --> 00:05:40,400
uh so then again it's not really that

00:05:38,320 --> 00:05:42,479
reliable and and the last one is

00:05:40,400 --> 00:05:43,759
it's not it's possible to guess what if

00:05:42,479 --> 00:05:46,400
initiator wants

00:05:43,759 --> 00:05:47,120
but not always so i could tell here that

00:05:46,400 --> 00:05:48,800
the authors

00:05:47,120 --> 00:05:50,720
were not trying to just cut things off

00:05:48,800 --> 00:05:51,199
but they really had there's no place to

00:05:50,720 --> 00:05:54,080
go with

00:05:51,199 --> 00:05:56,319
that that's this is great uh so to

00:05:54,080 --> 00:05:59,520
clarify my complaint here is i'm not

00:05:56,319 --> 00:06:00,080
out to stop limiting the query any um i

00:05:59,520 --> 00:06:02,880
think it

00:06:00,080 --> 00:06:04,479
it's really uh kind of not a use not

00:06:02,880 --> 00:06:06,240
necessary to the protocol

00:06:04,479 --> 00:06:07,199
um the problem is i don't like the way

00:06:06,240 --> 00:06:08,639
this kind of is becoming

00:06:07,199 --> 00:06:10,479
non-deterministic

00:06:08,639 --> 00:06:12,160
you ask a question you get back an

00:06:10,479 --> 00:06:13,520
answer which might be a mystery or might

00:06:12,160 --> 00:06:14,880
be the response you can't tell one or

00:06:13,520 --> 00:06:17,600
the other

00:06:14,880 --> 00:06:19,039
and this has happened before this is a

00:06:17,600 --> 00:06:21,680
small issue probably but

00:06:19,039 --> 00:06:22,400
i see it the same way we we overuse

00:06:21,680 --> 00:06:24,800
serve fail

00:06:22,400 --> 00:06:26,160
to mean errors of dns sect versus other

00:06:24,800 --> 00:06:28,960
service failures

00:06:26,160 --> 00:06:30,560
and uh there was the the use of the txt

00:06:28,960 --> 00:06:32,880
record for everything out there

00:06:30,560 --> 00:06:34,319
and if you remember the spf record uh

00:06:32,880 --> 00:06:36,880
having having you with male

00:06:34,319 --> 00:06:38,240
male protection you know that didn't go

00:06:36,880 --> 00:06:40,639
well

00:06:38,240 --> 00:06:42,080
so uh so my little experiment i i run

00:06:40,639 --> 00:06:43,919
something where i do the any i do the

00:06:42,080 --> 00:06:46,160
any query all the time i use it

00:06:43,919 --> 00:06:47,360
to look at the tld operator the tops of

00:06:46,160 --> 00:06:48,960
the tld zones

00:06:47,360 --> 00:06:51,039
and so i know i have an idea what's

00:06:48,960 --> 00:06:52,160
going to come back so when i ran this i

00:06:51,039 --> 00:06:54,560
i run 13

00:06:52,160 --> 00:06:55,680
475 queries for this experiment i don't

00:06:54,560 --> 00:06:58,720
normally do this but

00:06:55,680 --> 00:07:01,120
i asked every name server for every tld

00:06:58,720 --> 00:07:03,680
on any query what did i get back um i

00:07:01,120 --> 00:07:06,800
got about 250 to 260

00:07:03,680 --> 00:07:08,800
no's uh udp tcp i tried both of them

00:07:06,800 --> 00:07:10,560
um and but the thing that got me is i

00:07:08,800 --> 00:07:11,599
got like nine or ten different ways they

00:07:10,560 --> 00:07:13,360
said no

00:07:11,599 --> 00:07:16,880
in that small sample that really bugged

00:07:13,360 --> 00:07:18,960
me it's a small sample 19 different ways

00:07:16,880 --> 00:07:20,479
and then the absolute numbers here are

00:07:18,960 --> 00:07:22,400
kind of over counts because

00:07:20,479 --> 00:07:24,400
operators do do a whole lot of work

00:07:22,400 --> 00:07:26,720
together uh if one operator changed

00:07:24,400 --> 00:07:28,639
their decision they might switch 250

00:07:26,720 --> 00:07:30,479
responses right away

00:07:28,639 --> 00:07:32,319
but to give you a graphical view of this

00:07:30,479 --> 00:07:34,000
and i don't really have a good co i

00:07:32,319 --> 00:07:35,360
got the small crayon set at work so i

00:07:34,000 --> 00:07:37,599
don't have a lot of colors

00:07:35,360 --> 00:07:38,800
um so i did this chart this way uh the

00:07:37,599 --> 00:07:41,759
first chart shows

00:07:38,800 --> 00:07:43,120
uh i i asked this many times i got that

00:07:41,759 --> 00:07:45,280
many responses of course it's pretty

00:07:43,120 --> 00:07:47,759
good they're tld's out there

00:07:45,280 --> 00:07:49,599
of in udp i get a lot of truncation

00:07:47,759 --> 00:07:51,599
which is okay it's understandable you

00:07:49,599 --> 00:07:53,120
truncate large response in udp

00:07:51,599 --> 00:07:54,879
but of the the ones that got through

00:07:53,120 --> 00:07:56,479
there that were problematic

00:07:54,879 --> 00:07:57,680
i gotta spread don't worry about what

00:07:56,479 --> 00:07:59,120
they are over there there's a spread a

00:07:57,680 --> 00:08:00,000
lot of colors in there in that circle

00:07:59,120 --> 00:08:01,520
over there

00:08:00,000 --> 00:08:02,720
and that covers everything including if

00:08:01,520 --> 00:08:04,319
you look through there there's the h

00:08:02,720 --> 00:08:06,319
info down towards the bottom

00:08:04,319 --> 00:08:08,080
that's the special case for the h info

00:08:06,319 --> 00:08:09,759
record all the other ones were

00:08:08,080 --> 00:08:11,120
that was the one type that was seen

00:08:09,759 --> 00:08:12,000
there except for the empty one of course

00:08:11,120 --> 00:08:14,720
that means nothing came

00:08:12,000 --> 00:08:16,000
back and i got 10 different ways in udp

00:08:14,720 --> 00:08:17,520
for tcp

00:08:16,000 --> 00:08:19,520
same thing except i don't have any

00:08:17,520 --> 00:08:20,800
truncation in tcp

00:08:19,520 --> 00:08:22,319
and i get back another little color

00:08:20,800 --> 00:08:23,520
wheel with lots of different variation

00:08:22,319 --> 00:08:25,919
out there

00:08:23,520 --> 00:08:27,520
again the fact that the ns1 is the

00:08:25,919 --> 00:08:29,360
biggest part that only means that

00:08:27,520 --> 00:08:30,720
somebody does it a lot that way doesn't

00:08:29,360 --> 00:08:32,159
necessarily mean there's a lot more use

00:08:30,720 --> 00:08:33,599
of ns

00:08:32,159 --> 00:08:34,880
so i started drilling into the numbers

00:08:33,599 --> 00:08:36,000
because at first it looked this was that

00:08:34,880 --> 00:08:36,959
was what i thought was interesting to

00:08:36,000 --> 00:08:38,640
see but then i

00:08:36,959 --> 00:08:40,159
said well let me figure out why i got

00:08:38,640 --> 00:08:41,680
this why am i getting these numbers i

00:08:40,159 --> 00:08:42,479
found some of the ip addresses out there

00:08:41,680 --> 00:08:44,880
i ask

00:08:42,479 --> 00:08:46,720
for different ip for different tlds

00:08:44,880 --> 00:08:49,920
respond differently

00:08:46,720 --> 00:08:50,880
so somehow it's being a ch is a choice

00:08:49,920 --> 00:08:53,360
based on either

00:08:50,880 --> 00:08:54,399
per query or per zone or for something

00:08:53,360 --> 00:08:56,240
going out there

00:08:54,399 --> 00:08:58,000
so i decided to figure out can i find

00:08:56,240 --> 00:09:00,720
some more patterns here

00:08:58,000 --> 00:09:02,560
well it turns out that tld operators out

00:09:00,720 --> 00:09:04,000
there sometimes don't really

00:09:02,560 --> 00:09:05,680
hide they don't want to hide their

00:09:04,000 --> 00:09:07,200
version so they actually version.bind

00:09:05,680 --> 00:09:09,279
actually works for some of them

00:09:07,200 --> 00:09:11,440
and i'm looking at version. now that's

00:09:09,279 --> 00:09:13,360
mostly not a great way to get data but

00:09:11,440 --> 00:09:15,040
i got something out of it and so i

00:09:13,360 --> 00:09:15,360
looked at the and that and there was

00:09:15,040 --> 00:09:17,040
like

00:09:15,360 --> 00:09:18,480
half a dozen implementations that popped

00:09:17,040 --> 00:09:21,440
up that i could identify

00:09:18,480 --> 00:09:22,800
um three of them appear on this chart it

00:09:21,440 --> 00:09:23,760
means three of them were minimizing

00:09:22,800 --> 00:09:25,760
there were no

00:09:23,760 --> 00:09:27,040
there's no evidence from the other three

00:09:25,760 --> 00:09:29,040
that um

00:09:27,040 --> 00:09:30,640
they were minimizing remind you i have

00:09:29,040 --> 00:09:32,720
the big four up here

00:09:30,640 --> 00:09:33,760
so three of the big four and that's bind

00:09:32,720 --> 00:09:37,040
nsd

00:09:33,760 --> 00:09:39,680
on uh uh ns say bind nsd not

00:09:37,040 --> 00:09:40,720
and a parody and so the big four open

00:09:39,680 --> 00:09:42,720
open source uh

00:09:40,720 --> 00:09:44,800
implementations like i call three of

00:09:42,720 --> 00:09:46,720
them are minimizing some way

00:09:44,800 --> 00:09:48,080
and you can see what how it comes out

00:09:46,720 --> 00:09:50,000
here where there's

00:09:48,080 --> 00:09:52,720
uh empty answers from some of them are

00:09:50,000 --> 00:09:54,320
not from inflation one and three

00:09:52,720 --> 00:09:55,680
they all do ns only and then there's

00:09:54,320 --> 00:09:56,320
other types that are spread out there

00:09:55,680 --> 00:09:58,720
which

00:09:56,320 --> 00:10:00,320
i i couldn't really explain so i

00:09:58,720 --> 00:10:01,519
actually did want to explain this

00:10:00,320 --> 00:10:03,600
so i look at the configuration

00:10:01,519 --> 00:10:05,120
information documentation and from what

00:10:03,600 --> 00:10:07,440
i could tell

00:10:05,120 --> 00:10:09,440
an nsd there's a refuse any option and

00:10:07,440 --> 00:10:09,839
it says what it does here in on udp it

00:10:09,440 --> 00:10:12,959
would

00:10:09,839 --> 00:10:14,079
truncate and for tcp uh it works like

00:10:12,959 --> 00:10:17,839
normal

00:10:14,079 --> 00:10:18,720
uh default is no uh bine 914 6 says that

00:10:17,839 --> 00:10:22,240
over udp

00:10:18,720 --> 00:10:23,680
it'll pick only one of the rr sets

00:10:22,240 --> 00:10:25,279
to go out there it doesn't seem about

00:10:23,680 --> 00:10:26,560
tcp in there so i couldn't tell it was

00:10:25,279 --> 00:10:27,360
going to happen i didn't experiment

00:10:26,560 --> 00:10:30,560
myself

00:10:27,360 --> 00:10:32,640
default is no and i looked up not power

00:10:30,560 --> 00:10:34,320
dns and i could not find documentation

00:10:32,640 --> 00:10:36,720
saying how to do it

00:10:34,320 --> 00:10:37,680
um but i found email in but through

00:10:36,720 --> 00:10:39,839
doing the searches

00:10:37,680 --> 00:10:42,240
web searches saying that this was just

00:10:39,839 --> 00:10:44,880
not done

00:10:42,240 --> 00:10:47,040
so looking at these four big four and

00:10:44,880 --> 00:10:48,800
how they let you configure this

00:10:47,040 --> 00:10:50,399
didn't answer the question of how did i

00:10:48,800 --> 00:10:53,839
have it answered differently per

00:10:50,399 --> 00:10:54,640
tld um in fact if this doesn't even

00:10:53,839 --> 00:10:57,839
match up

00:10:54,640 --> 00:11:02,079
i have three out of four doing this

00:10:57,839 --> 00:11:03,600
even though two say how and how they um

00:11:02,079 --> 00:11:05,519
the choices just don't line up with us

00:11:03,600 --> 00:11:07,440
it's still kind of interesting to me

00:11:05,519 --> 00:11:08,560
uh to figure out how this is going on uh

00:11:07,440 --> 00:11:10,800
so i'm a bit baffled

00:11:08,560 --> 00:11:11,839
by this um i couldn't see evidence that

00:11:10,800 --> 00:11:14,079
operators

00:11:11,839 --> 00:11:15,360
were able to make choices that looked

00:11:14,079 --> 00:11:17,760
like it was intentional

00:11:15,360 --> 00:11:19,120
in doing this i didn't see that some

00:11:17,760 --> 00:11:19,760
operator always answered a certain way

00:11:19,120 --> 00:11:21,680
in fact

00:11:19,760 --> 00:11:22,880
i was baffled by one particular name

00:11:21,680 --> 00:11:24,399
server which answered

00:11:22,880 --> 00:11:26,160
the same way for all but one of the

00:11:24,399 --> 00:11:28,480
zones it was serving up

00:11:26,160 --> 00:11:29,839
i don't know so i don't know it's

00:11:28,480 --> 00:11:30,160
somewhere in the software somewhere in

00:11:29,839 --> 00:11:32,640
the

00:11:30,160 --> 00:11:34,560
operations it's not quite lined up yet

00:11:32,640 --> 00:11:35,680
um why does this bother me i mean i i

00:11:34,560 --> 00:11:36,079
really don't care much about the any

00:11:35,680 --> 00:11:38,640
query

00:11:36,079 --> 00:11:40,000
i'll get into that but in the principles

00:11:38,640 --> 00:11:41,519
principles of protocol design i like

00:11:40,000 --> 00:11:42,800
determinism i want to know

00:11:41,519 --> 00:11:44,640
query goes out i should get back a

00:11:42,800 --> 00:11:46,320
predictable result or a very definitive

00:11:44,640 --> 00:11:49,920
signal when it comes back

00:11:46,320 --> 00:11:51,279
two i have this long term running uh

00:11:49,920 --> 00:11:53,519
relationship with with operators and

00:11:51,279 --> 00:11:55,040
realizing that we staff

00:11:53,519 --> 00:11:56,399
the desks with people who have less

00:11:55,040 --> 00:11:57,920
background over time just because of

00:11:56,399 --> 00:12:00,880
growth and

00:11:57,920 --> 00:12:02,480
so i want the protocol to be simpler one

00:12:00,880 --> 00:12:03,680
time i heard this from somebody i wish i

00:12:02,480 --> 00:12:04,560
could have a better support for this

00:12:03,680 --> 00:12:06,720
statement but

00:12:04,560 --> 00:12:08,160
a protocol design should be like a state

00:12:06,720 --> 00:12:09,360
machine you have state machines on both

00:12:08,160 --> 00:12:11,360
ends of the channel

00:12:09,360 --> 00:12:12,800
and as you trans go for you can

00:12:11,360 --> 00:12:14,399
transition from state to state based on

00:12:12,800 --> 00:12:15,040
each message going back and forth or

00:12:14,399 --> 00:12:16,639
each

00:12:15,040 --> 00:12:18,639
signal going back and forth timeouts or

00:12:16,639 --> 00:12:20,560
whatever should be very deterministic

00:12:18,639 --> 00:12:21,920
if i'm on this side and i want and i

00:12:20,560 --> 00:12:23,040
think your site is thinking this and i'm

00:12:21,920 --> 00:12:24,880
telling them something

00:12:23,040 --> 00:12:26,959
i want them to go here in the

00:12:24,880 --> 00:12:28,399
conversation uh i don't want them to

00:12:26,959 --> 00:12:29,360
actually kind of like maybe they're over

00:12:28,399 --> 00:12:30,560
here now i don't know

00:12:29,360 --> 00:12:32,160
like it makes it very hard to

00:12:30,560 --> 00:12:32,639
communicate in a protocol when you have

00:12:32,160 --> 00:12:34,639
this

00:12:32,639 --> 00:12:35,920
like random number generator essentially

00:12:34,639 --> 00:12:37,760
popping up there

00:12:35,920 --> 00:12:39,440
now grant dns is not really good at this

00:12:37,760 --> 00:12:40,800
but it's it's a dream i'd like to have

00:12:39,440 --> 00:12:42,639
the protocol be very

00:12:40,800 --> 00:12:43,600
specific so that both sides know where

00:12:42,639 --> 00:12:45,839
each other what you're just thinking

00:12:43,600 --> 00:12:48,880
going back and forth

00:12:45,839 --> 00:12:50,160
uh now the

00:12:48,880 --> 00:12:52,160
how does this apply to my observations

00:12:50,160 --> 00:12:52,399
here i'm talking i want i didn't bring

00:12:52,160 --> 00:12:54,240
this

00:12:52,399 --> 00:12:56,240
slide up earlier i probably should have

00:12:54,240 --> 00:12:58,480
i was asking

00:12:56,240 --> 00:12:59,360
from this end about information over

00:12:58,480 --> 00:13:02,240
here

00:12:59,360 --> 00:13:03,519
but i know over here these are apex they

00:13:02,240 --> 00:13:05,360
should have an soa record

00:13:03,519 --> 00:13:06,880
you should have an ns record if they

00:13:05,360 --> 00:13:08,160
have dns sect they should have a certain

00:13:06,880 --> 00:13:09,680
set of records depending on what kind of

00:13:08,160 --> 00:13:11,279
dns they have

00:13:09,680 --> 00:13:13,519
so i have an expectation on this side of

00:13:11,279 --> 00:13:14,880
why i should come back and i'm not

00:13:13,519 --> 00:13:17,120
seeing that come back and i can

00:13:14,880 --> 00:13:18,560
tell it's an error think about this in a

00:13:17,120 --> 00:13:20,480
more generic case where

00:13:18,560 --> 00:13:22,560
i don't know what this name is is it an

00:13:20,480 --> 00:13:25,120
apex is it not an apex i don't know

00:13:22,560 --> 00:13:27,120
if i get back one one record set i might

00:13:25,120 --> 00:13:28,720
think that is all it has

00:13:27,120 --> 00:13:30,720
if it's if it it's better so it's a

00:13:28,720 --> 00:13:31,600
little this is this is some uncertainty

00:13:30,720 --> 00:13:34,160
in my

00:13:31,600 --> 00:13:34,959
uh in my mind here about the way this

00:13:34,160 --> 00:13:36,720
this

00:13:34,959 --> 00:13:38,399
uh rfc is recommended coming back with

00:13:36,720 --> 00:13:40,160
the don't don't i don't do the full

00:13:38,399 --> 00:13:42,480
thing

00:13:40,160 --> 00:13:44,240
um now should i be able to minimize any

00:13:42,480 --> 00:13:46,079
response is a good fair question

00:13:44,240 --> 00:13:48,480
um because i go back and forth i don't

00:13:46,079 --> 00:13:51,040
think that this is critically a critical

00:13:48,480 --> 00:13:51,760
change to the protocol but it bothers me

00:13:51,040 --> 00:13:54,240
that we have this

00:13:51,760 --> 00:13:55,360
non-deterministic uh element going on

00:13:54,240 --> 00:13:57,440
and i'm going to go up

00:13:55,360 --> 00:13:59,839
past this point right now another

00:13:57,440 --> 00:14:02,560
experiment thing is staff expertise

00:13:59,839 --> 00:14:04,639
out there i've seen it where i wanted my

00:14:02,560 --> 00:14:05,680
operator to have much simpler tools to

00:14:04,639 --> 00:14:07,440
use i want the pro

00:14:05,680 --> 00:14:08,800
the software they use to be simpler they

00:14:07,440 --> 00:14:10,160
don't need to understand the protocol we

00:14:08,800 --> 00:14:11,120
can't afford to teach them the protocol

00:14:10,160 --> 00:14:12,560
anymore

00:14:11,120 --> 00:14:14,240
we keep bringing more people in to

00:14:12,560 --> 00:14:15,839
people turning over they want to know

00:14:14,240 --> 00:14:18,000
how to make things work

00:14:15,839 --> 00:14:19,440
things are things working out there this

00:14:18,000 --> 00:14:20,880
puts pressure on the tool makers to make

00:14:19,440 --> 00:14:23,120
sure the tooling is

00:14:20,880 --> 00:14:24,959
there it's in it's uh in place and it's

00:14:23,120 --> 00:14:26,240
simple

00:14:24,959 --> 00:14:28,320
uh so are the gaps here protocol

00:14:26,240 --> 00:14:28,959
engineers describe the way software can

00:14:28,320 --> 00:14:30,320
be written

00:14:28,959 --> 00:14:32,959
they like functionality like to make

00:14:30,320 --> 00:14:34,480
things do more things

00:14:32,959 --> 00:14:36,079
but i find that sometimes they tend to

00:14:34,480 --> 00:14:36,399
lose sight of what's in operations and

00:14:36,079 --> 00:14:38,560
what

00:14:36,399 --> 00:14:40,000
what the tool makers have to do excuse

00:14:38,560 --> 00:14:42,480
me operators

00:14:40,000 --> 00:14:43,279
um opera operators are interesting

00:14:42,480 --> 00:14:44,720
because they

00:14:43,279 --> 00:14:45,760
they have a job to do that doesn't

00:14:44,720 --> 00:14:46,959
matter what they're doing they have to

00:14:45,760 --> 00:14:48,399
do a job they have to make sure things

00:14:46,959 --> 00:14:50,560
don't fall apart

00:14:48,399 --> 00:14:52,079
i work i met with a group of people who

00:14:50,560 --> 00:14:53,360
are new operators came in to run an

00:14:52,079 --> 00:14:54,720
organization

00:14:53,360 --> 00:14:56,720
they know how to do opera they can

00:14:54,720 --> 00:14:57,440
operate anything a bus line a ticket

00:14:56,720 --> 00:15:00,240
agency

00:14:57,440 --> 00:15:01,920
now they're running a dns thing um but

00:15:00,240 --> 00:15:02,720
they're mystified because the protocol

00:15:01,920 --> 00:15:04,399
really hasn't

00:15:02,720 --> 00:15:05,760
been it wasn't running the way they

00:15:04,399 --> 00:15:07,120
thought it would go

00:15:05,760 --> 00:15:09,040
what this does a lot of operators will

00:15:07,120 --> 00:15:12,480
lead on package software

00:15:09,040 --> 00:15:14,000
to do this defaults and all that um

00:15:12,480 --> 00:15:15,279
now the software developers and you know

00:15:14,000 --> 00:15:16,160
i'm assuming a lot of people in this

00:15:15,279 --> 00:15:17,120
room are more

00:15:16,160 --> 00:15:18,959
uh interested in the software

00:15:17,120 --> 00:15:19,440
development process caught in the middle

00:15:18,959 --> 00:15:23,120
of this

00:15:19,440 --> 00:15:24,959
and the bret brett i'm sorry huber's

00:15:23,120 --> 00:15:27,199
camel talk if you haven't seen that this

00:15:24,959 --> 00:15:28,480
is a link to his saying that what straw

00:15:27,199 --> 00:15:30,079
is going to break the camel's back when

00:15:28,480 --> 00:15:33,199
i keep getting demands for more and more

00:15:30,079 --> 00:15:34,079
uh features on my dns software uh this

00:15:33,199 --> 00:15:35,759
is what i'm

00:15:34,079 --> 00:15:37,199
really concerned that this is doing is

00:15:35,759 --> 00:15:40,560
making this camel

00:15:37,199 --> 00:15:41,839
getting closer to the edge so it's a

00:15:40,560 --> 00:15:43,040
classic devops issue

00:15:41,839 --> 00:15:44,880
maximize functionality versus to

00:15:43,040 --> 00:15:46,880
minimize downtime um

00:15:44,880 --> 00:15:48,639
so what do you do about this um this is

00:15:46,880 --> 00:15:49,360
kind of this is what i'm my message here

00:15:48,639 --> 00:15:51,199
is

00:15:49,360 --> 00:15:52,399
i want to encourage folks in this room

00:15:51,199 --> 00:15:54,639
to uh

00:15:52,399 --> 00:15:55,680
get involved with the with the ietf

00:15:54,639 --> 00:15:57,120
process

00:15:55,680 --> 00:15:58,399
um i was told that where were you when

00:15:57,120 --> 00:15:59,839
this document was being written i said

00:15:58,399 --> 00:16:02,320
well i was actually there and i

00:15:59,839 --> 00:16:03,440
kind of got tired of it um but people

00:16:02,320 --> 00:16:04,399
have to go in and say is this

00:16:03,440 --> 00:16:05,839
implementable

00:16:04,399 --> 00:16:08,000
is backwards compatibility always

00:16:05,839 --> 00:16:10,000
desirable do we have to get rid of some

00:16:08,000 --> 00:16:11,040
old features and say you know it also

00:16:10,000 --> 00:16:12,639
has got to break because we

00:16:11,040 --> 00:16:14,959
we don't doesn't matter shouldn't be

00:16:12,639 --> 00:16:15,199
there uh can it be implemented that's

00:16:14,959 --> 00:16:16,880
what

00:16:15,199 --> 00:16:18,240
needs people need to have an eye on that

00:16:16,880 --> 00:16:19,360
when they go to these organizations that

00:16:18,240 --> 00:16:21,680
run the protocol development

00:16:19,360 --> 00:16:23,839
that's my basic uh message here for

00:16:21,680 --> 00:16:25,199
folks

00:16:23,839 --> 00:16:26,399
you know if if you're if you're not

00:16:25,199 --> 00:16:28,160
doing this what i fear is we're gonna

00:16:26,399 --> 00:16:29,600
have to have more dns flag days

00:16:28,160 --> 00:16:30,720
at some point we get rid of features or

00:16:29,600 --> 00:16:31,920
features conflicting with each other we

00:16:30,720 --> 00:16:33,839
need to have more

00:16:31,920 --> 00:16:36,320
input to the process to to make sure

00:16:33,839 --> 00:16:38,720
that we don't say in this document

00:16:36,320 --> 00:16:40,639
we're going to let any be minimized the

00:16:38,720 --> 00:16:42,320
response coming back is going to be

00:16:40,639 --> 00:16:43,759
this you want to have the like one

00:16:42,320 --> 00:16:44,560
record you want to have one thing come

00:16:43,759 --> 00:16:46,720
back saying

00:16:44,560 --> 00:16:47,839
if you see this stop asking for any more

00:16:46,720 --> 00:16:48,639
information assume you're not going to

00:16:47,839 --> 00:16:49,920
get any

00:16:48,639 --> 00:16:52,160
and fall back to whatever you need to

00:16:49,920 --> 00:16:55,360
get your information and that's uh

00:16:52,160 --> 00:16:56,160
my basic message for for the uh this

00:16:55,360 --> 00:16:59,040
talk here

00:16:56,160 --> 00:17:00,000
so i have an email my email isn't in the

00:16:59,040 --> 00:17:01,920
slides if you have

00:17:00,000 --> 00:17:04,800
if you want to ask me about this you ask

00:17:01,920 --> 00:17:04,800
me now i guess too

00:17:05,760 --> 00:17:09,600
so i'm done thanks

00:17:12,400 --> 00:17:16,079
thank you any questions for adverts

00:17:16,839 --> 00:17:19,839
shane

00:17:23,199 --> 00:17:26,240
yeah this is shane it's not really a

00:17:24,559 --> 00:17:29,120
question it's more of a comment sure

00:17:26,240 --> 00:17:29,600
i mean we we all know that you can't

00:17:29,120 --> 00:17:32,720
really

00:17:29,600 --> 00:17:34,720
trust any queries for anything

00:17:32,720 --> 00:17:36,559
so it's already kind of performance art

00:17:34,720 --> 00:17:38,799
right it's like you go to a play

00:17:36,559 --> 00:17:39,919
and the writer's trying to say something

00:17:38,799 --> 00:17:40,960
and the actors are trying to say

00:17:39,919 --> 00:17:41,520
something the directors are trying to

00:17:40,960 --> 00:17:42,960
say

00:17:41,520 --> 00:17:44,720
and you have to interpret what you get

00:17:42,960 --> 00:17:46,640
back and it's

00:17:44,720 --> 00:17:48,240
it can be enjoyable but don't treat it

00:17:46,640 --> 00:17:50,799
as as science

00:17:48,240 --> 00:17:52,240
well you're all right yeah so this is

00:17:50,799 --> 00:17:54,720
part of the conversation i had with with

00:17:52,240 --> 00:17:57,200
the the people who wrote the document

00:17:54,720 --> 00:17:58,799
for for what i've been doing i have i

00:17:57,200 --> 00:18:00,000
have a use for it it's not about my use

00:17:58,799 --> 00:18:02,720
for it my use for it actually

00:18:00,000 --> 00:18:04,400
it that works perfect um because i'm

00:18:02,720 --> 00:18:07,440
asking a specific question of a specific

00:18:04,400 --> 00:18:08,640
small population um

00:18:07,440 --> 00:18:10,960
i don't deserve to do that in fact my

00:18:08,640 --> 00:18:12,160
code is for years how it had fallback to

00:18:10,960 --> 00:18:14,320
ask for everything you expect to see

00:18:12,160 --> 00:18:16,640
there anyway it's just more efficient

00:18:14,320 --> 00:18:17,600
um and yeah but i mean this is i don't

00:18:16,640 --> 00:18:19,200
think the any query

00:18:17,600 --> 00:18:20,960
it's not that i'm i want the any query

00:18:19,200 --> 00:18:22,160
to survive don't get me wrong i don't

00:18:20,960 --> 00:18:24,240
want to survive

00:18:22,160 --> 00:18:25,760
i want to be clearer that you're not

00:18:24,240 --> 00:18:27,440
doing it

00:18:25,760 --> 00:18:29,360
that's what i'm after that was in when

00:18:27,440 --> 00:18:31,840
those this time was being discussed

00:18:29,360 --> 00:18:32,559
um i first was comp uh here to eight the

00:18:31,840 --> 00:18:33,919
h info

00:18:32,559 --> 00:18:35,919
option was the first one out there and i

00:18:33,919 --> 00:18:36,799
thought well you know we don't like to

00:18:35,919 --> 00:18:38,480
reuse

00:18:36,799 --> 00:18:40,559
what create a new record type oh it'll

00:18:38,480 --> 00:18:42,320
take 20 years for that to roll out right

00:18:40,559 --> 00:18:43,840
um this is what i'm after we want to

00:18:42,320 --> 00:18:44,880
make sure that we do changes to the

00:18:43,840 --> 00:18:46,799
protocol

00:18:44,880 --> 00:18:48,320
so that's sustainable so that we you

00:18:46,799 --> 00:18:50,480
know maybe we

00:18:48,320 --> 00:18:51,840
you know because well i i understand the

00:18:50,480 --> 00:18:53,919
discussion that went on too

00:18:51,840 --> 00:18:55,440
well what about the case where someone

00:18:53,919 --> 00:18:57,520
was relying on it and we shouldn't take

00:18:55,440 --> 00:19:00,799
it away from them unnecessarily so maybe

00:18:57,520 --> 00:19:02,960
we'll do some get is that worth i mean

00:19:00,799 --> 00:19:04,799
is it is it worth is that something we

00:19:02,960 --> 00:19:06,400
can keep doing because that's part of

00:19:04,799 --> 00:19:08,880
the straws in the camel

00:19:06,400 --> 00:19:10,320
you know that so that's the thing if i

00:19:08,880 --> 00:19:11,520
think if people here felt strongly

00:19:10,320 --> 00:19:13,679
enough that changed

00:19:11,520 --> 00:19:15,200
don't don't fight this one if a change

00:19:13,679 --> 00:19:16,320
is coming along the ietf and it's going

00:19:15,200 --> 00:19:18,320
to change the code in a way that makes

00:19:16,320 --> 00:19:20,000
the code blowed up big

00:19:18,320 --> 00:19:21,760
go to the itf and let them know this is

00:19:20,000 --> 00:19:22,640
not implementable and that's what i'm

00:19:21,760 --> 00:19:25,039
asking

00:19:22,640 --> 00:19:25,039
what's up

00:19:27,760 --> 00:19:34,320
another question so i presume in your

00:19:31,679 --> 00:19:36,000
analysis you used you used non-recursive

00:19:34,320 --> 00:19:37,919
queries

00:19:36,000 --> 00:19:39,520
what about the recursive ones and what

00:19:37,919 --> 00:19:40,799
is the role of a dns cache server in

00:19:39,520 --> 00:19:42,559
that respect because uh

00:19:40,799 --> 00:19:43,840
when i i was trying to implement or

00:19:42,559 --> 00:19:46,559
implement the last version

00:19:43,840 --> 00:19:47,679
of djib dns curve i also was uh had to

00:19:46,559 --> 00:19:48,640
take the decision what to do with the

00:19:47,679 --> 00:19:51,520
any ones here

00:19:48,640 --> 00:19:54,160
so that's uh yeah that's all of it yet

00:19:51,520 --> 00:19:57,200
yeah i mean

00:19:54,160 --> 00:19:59,520
you know well it's a good question i

00:19:57,200 --> 00:20:01,360
mean i in my in my work i always go

00:19:59,520 --> 00:20:02,640
to the authority of servers that's

00:20:01,360 --> 00:20:04,240
because i'm grafting off a code that

00:20:02,640 --> 00:20:05,280
does that i didn't do recursive

00:20:04,240 --> 00:20:08,000
what's a good question what's your

00:20:05,280 --> 00:20:09,760
recursive server come back with um

00:20:08,000 --> 00:20:11,280
you know and i'd if i told you i'd be

00:20:09,760 --> 00:20:13,679
thinking about my feed but

00:20:11,280 --> 00:20:14,320
obviously you know there are a coup the

00:20:13,679 --> 00:20:16,480
problem is i

00:20:14,320 --> 00:20:17,840
like my first reaction was not imp not

00:20:16,480 --> 00:20:19,840
implemented r code

00:20:17,840 --> 00:20:21,440
but if that happens some folks go into

00:20:19,840 --> 00:20:23,039
tizzy about that and keep asking other

00:20:21,440 --> 00:20:25,280
servers now to see if they do it

00:20:23,039 --> 00:20:26,320
nothing is for non-implemented op codes

00:20:25,280 --> 00:20:30,400
right they say

00:20:26,320 --> 00:20:31,440
right yeah so uh yeah so we

00:20:30,400 --> 00:20:32,720
maybe that's part of the problem we

00:20:31,440 --> 00:20:34,720
don't have the protocol doesn't have

00:20:32,720 --> 00:20:37,039
enough definitive like

00:20:34,720 --> 00:20:39,039
this this is a there's zone level errors

00:20:37,039 --> 00:20:41,039
and there's server level errors right

00:20:39,039 --> 00:20:42,480
the server's not going to respond to you

00:20:41,039 --> 00:20:45,600
go somewhere else

00:20:42,480 --> 00:20:46,000
but when the zone is out we need to tell

00:20:45,600 --> 00:20:48,640
stop

00:20:46,000 --> 00:20:49,280
asking i've seen meltdown so many ways i

00:20:48,640 --> 00:20:50,799
mean it's not

00:20:49,280 --> 00:20:52,480
uncommon to a lot of people out there

00:20:50,799 --> 00:20:53,760
but for recursive service out there i

00:20:52,480 --> 00:20:55,039
mean i just haven't thought i've i've

00:20:53,760 --> 00:20:55,840
never worked in recursive service field

00:20:55,039 --> 00:20:58,880
so i haven't thought of it

00:20:55,840 --> 00:21:00,159
honestly yeah that should actually that

00:20:58,880 --> 00:21:02,400
would actually be

00:21:00,159 --> 00:21:03,919
part of what is in here because i think

00:21:02,400 --> 00:21:05,280
the people who wrote this were thinking

00:21:03,919 --> 00:21:06,320
is authoritative servers too come to

00:21:05,280 --> 00:21:07,919
think of it because i don't see

00:21:06,320 --> 00:21:10,640
recursive in there at all

00:21:07,919 --> 00:21:11,200
and i do know uh who they were you know

00:21:10,640 --> 00:21:13,520
the working

00:21:11,200 --> 00:21:15,200
cloud flare was uh obviously um and they

00:21:13,520 --> 00:21:16,480
were trying to solve some problems also

00:21:15,200 --> 00:21:16,960
beyond the ones i was just putting out

00:21:16,480 --> 00:21:19,200
there

00:21:16,960 --> 00:21:21,200
i suspect but i'll just leave it at that

00:21:19,200 --> 00:21:24,000
so

00:21:21,200 --> 00:21:24,000
any other questions

00:21:25,280 --> 00:21:31,840
okay thank you

00:21:37,440 --> 00:21:41,760
this concludes the dns dev room in about

00:21:39,760 --> 00:21:44,000
30 minutes the web performance dev room

00:21:41,760 --> 00:21:46,000
will start here

00:21:44,000 --> 00:21:48,159
i will stick around for a bit bet some

00:21:46,000 --> 00:21:49,760
others will so if you have any questions

00:21:48,159 --> 00:21:59,840
talk to us

00:21:49,760 --> 00:21:59,840

YouTube URL: https://www.youtube.com/watch?v=yFnmerGDzjg


