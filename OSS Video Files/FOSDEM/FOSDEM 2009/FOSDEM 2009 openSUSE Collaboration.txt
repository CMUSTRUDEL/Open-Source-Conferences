Title: FOSDEM 2009 openSUSE Collaboration
Publication date: 2011-12-22
Playlist: FOSDEM 2009
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:02,030 --> 00:00:12,900
so I seated everybody was here already

00:00:09,809 --> 00:00:15,719
for the overview talk which is quite

00:00:12,900 --> 00:00:18,840
nice because that can skip the first

00:00:15,719 --> 00:00:22,800
part of my presentation which will be

00:00:18,840 --> 00:00:27,420
about how to collaborate in the opensuse

00:00:22,800 --> 00:00:32,149
food service and the general content

00:00:27,420 --> 00:00:35,969
will be what do I mean with collaborate

00:00:32,149 --> 00:00:38,700
how does the boot service allow me to do

00:00:35,969 --> 00:00:42,420
that and in the end show you some

00:00:38,700 --> 00:00:48,690
examples how people are doing it right

00:00:42,420 --> 00:00:52,050
now so first what part M as a peon

00:00:48,690 --> 00:00:54,270
nicely explained the boot services just

00:00:52,050 --> 00:00:57,539
if you never heard of it it's something

00:00:54,270 --> 00:01:00,210
and I am pretty sure for somebody that

00:00:57,539 --> 00:01:03,530
never heard of it it's total chaos you

00:01:00,210 --> 00:01:06,090
get projects and packages and builds and

00:01:03,530 --> 00:01:09,060
repositories and there are maintained

00:01:06,090 --> 00:01:13,290
errs and command-line clients blah blah

00:01:09,060 --> 00:01:16,439
blah so I just want to make clear what

00:01:13,290 --> 00:01:19,560
the boot service really is the build

00:01:16,439 --> 00:01:24,509
service is a maintainer creates a

00:01:19,560 --> 00:01:28,140
project which contains a package or more

00:01:24,509 --> 00:01:30,900
packages the package contains sources

00:01:28,140 --> 00:01:34,680
and spec files which then get which then

00:01:30,900 --> 00:01:38,090
gets built and the result is a

00:01:34,680 --> 00:01:42,110
repository containing binary packages so

00:01:38,090 --> 00:01:45,560
that's the part where then users are

00:01:42,110 --> 00:01:51,509
that's the part where the developers are

00:01:45,560 --> 00:01:54,180
so with that cleared up let's have a

00:01:51,509 --> 00:01:58,290
look at how the bid service supports me

00:01:54,180 --> 00:01:59,850
in kolhapur collaboration with others so

00:01:58,290 --> 00:02:01,920
there are two hooks you have to

00:01:59,850 --> 00:02:07,409
collaborate in the boot service too easy

00:02:01,920 --> 00:02:13,220
hooks the one is based on the project

00:02:07,409 --> 00:02:13,220
level which as we can recall is

00:02:13,230 --> 00:02:19,570
just some place that contains one or

00:02:16,060 --> 00:02:24,340
more packages the other one is as a

00:02:19,570 --> 00:02:26,620
package level that means i can do a

00:02:24,340 --> 00:02:31,590
contribution purely on the package level

00:02:26,620 --> 00:02:35,440
so if i have more than one package in my

00:02:31,590 --> 00:02:41,770
repository i can collaborate with adrian

00:02:35,440 --> 00:02:46,330
on one but not the other so first is how

00:02:41,770 --> 00:02:50,610
do i collaborate on a project level it's

00:02:46,330 --> 00:02:54,880
fairly easy you can either in the in the

00:02:50,610 --> 00:03:00,060
web client you can either click at user

00:02:54,880 --> 00:03:02,680
and I can for my project at Adrian as

00:03:00,060 --> 00:03:05,740
another maintainer and be done with it

00:03:02,680 --> 00:03:07,870
so adrian has all the same rights that I

00:03:05,740 --> 00:03:12,400
have you can add packages delete

00:03:07,870 --> 00:03:16,180
packages submit other code or submit

00:03:12,400 --> 00:03:18,040
patches everything so I can do it in a

00:03:16,180 --> 00:03:20,050
web client with a simple click or I can

00:03:18,040 --> 00:03:26,170
do it in a command-line client I guess

00:03:20,050 --> 00:03:29,830
I've shown here which is just not a good

00:03:26,170 --> 00:03:32,790
font so it wandered down but it's just

00:03:29,830 --> 00:03:37,019
adding one line to some XML fire so I

00:03:32,790 --> 00:03:40,720
have my project I'm the maintainer of

00:03:37,019 --> 00:03:45,420
that project and I added just another

00:03:40,720 --> 00:03:49,860
user s maintainer in this case Derek's

00:03:45,420 --> 00:03:54,030
so this is collaboration on the on the

00:03:49,860 --> 00:03:56,440
project level so now me handle and

00:03:54,030 --> 00:04:02,290
directs can do everything in that

00:03:56,440 --> 00:04:04,780
project so i told you before i can have

00:04:02,290 --> 00:04:08,220
another easy hook to collaborate which

00:04:04,780 --> 00:04:11,920
is the package and surprisingly enough

00:04:08,220 --> 00:04:15,640
it is totally the same we have just

00:04:11,920 --> 00:04:18,160
another xml file and i can just add

00:04:15,640 --> 00:04:21,570
another line and collaborate on the

00:04:18,160 --> 00:04:26,430
package the same way on the

00:04:21,570 --> 00:04:33,240
webclient I can just add user s

00:04:26,430 --> 00:04:35,490
maintainer so in this case I have rights

00:04:33,240 --> 00:04:39,200
to do something to that package like

00:04:35,490 --> 00:04:43,130
adding another patch updating it

00:04:39,200 --> 00:04:45,990
whatever changing configure lines

00:04:43,130 --> 00:04:50,400
whatever and I just granted directs the

00:04:45,990 --> 00:04:55,500
same rights so this is the second easy

00:04:50,400 --> 00:05:01,110
hook to do collaboration and then there

00:04:55,500 --> 00:05:03,870
is the usual practice we have in the

00:05:01,110 --> 00:05:06,720
open source world that people are just

00:05:03,870 --> 00:05:14,270
saying oh no problem just submit me a

00:05:06,720 --> 00:05:18,030
patch and this is the usual case because

00:05:14,270 --> 00:05:22,160
nobody wants others to mess with his own

00:05:18,030 --> 00:05:25,440
system so if I don't want people to add

00:05:22,160 --> 00:05:28,170
packages to my project remove packages

00:05:25,440 --> 00:05:31,050
for my project if I don't want to have

00:05:28,170 --> 00:05:33,750
people other people than me to have the

00:05:31,050 --> 00:05:36,630
ability to change one single package I

00:05:33,750 --> 00:05:41,850
can always say okay come on submit me a

00:05:36,630 --> 00:05:44,520
patch so there is tooling for that in

00:05:41,850 --> 00:05:48,810
the opensuse build service I mean it's

00:05:44,520 --> 00:05:50,910
always easy to just do that I mean come

00:05:48,810 --> 00:05:54,090
up to someone and say dude I felt that

00:05:50,910 --> 00:05:57,810
is your package 2 1 dot one can I made

00:05:54,090 --> 00:06:01,700
your passion that's easy but we have

00:05:57,810 --> 00:06:10,130
tooling around that process so the same

00:06:01,700 --> 00:06:10,130
as this you can do with an OC c'mon and

00:06:10,220 --> 00:06:20,610
which means obviously if I updated

00:06:15,980 --> 00:06:23,400
Pascal's package then I had a look at

00:06:20,610 --> 00:06:27,990
the package I grabbed it from somewhere

00:06:23,400 --> 00:06:30,450
I gone over it did my changes now I have

00:06:27,990 --> 00:06:33,030
them compiled in the patch and I say to

00:06:30,450 --> 00:06:35,020
pass guy oh come on i submit submit it

00:06:33,030 --> 00:06:40,319
to you so

00:06:35,020 --> 00:06:45,030
same as just us tooling in the in the

00:06:40,319 --> 00:06:48,009
opensuse boot service means i just get

00:06:45,030 --> 00:06:53,580
Pascal's package from somewhere which is

00:06:48,009 --> 00:06:59,650
OC branch so I branch it from passcodes

00:06:53,580 --> 00:07:02,949
project this will create a copy of that

00:06:59,650 --> 00:07:06,159
package in a project of mine which is

00:07:02,949 --> 00:07:10,810
under my home in the opensuse boat

00:07:06,159 --> 00:07:14,560
service which is I then can check out so

00:07:10,810 --> 00:07:20,949
I have the actual files and on my system

00:07:14,560 --> 00:07:25,780
can do my changes and can do the telling

00:07:20,949 --> 00:07:29,139
Pascal that i have updated his food to 1

00:07:25,780 --> 00:07:31,360
of 1 and telling him that I mail him a

00:07:29,139 --> 00:07:35,080
patch I can do that was a command to I

00:07:31,360 --> 00:07:40,919
can just do OC submit request create and

00:07:35,080 --> 00:07:44,229
then create a patch from my project

00:07:40,919 --> 00:07:47,949
which i updated suit to his version

00:07:44,229 --> 00:07:51,969
which is not updated and Pascal gets a

00:07:47,949 --> 00:07:57,130
male and will see that there is submit

00:07:51,969 --> 00:08:00,759
requests for his package fool so from

00:07:57,130 --> 00:08:03,279
Pascal side this looks like ok there is

00:08:00,759 --> 00:08:08,650
a submit request if there's more than

00:08:03,279 --> 00:08:13,180
one you can list them on his project and

00:08:08,650 --> 00:08:19,360
he can look at what i did in mr. tool

00:08:13,180 --> 00:08:22,960
which is submit work show so either pass

00:08:19,360 --> 00:08:26,969
Connell says oh I like that then he

00:08:22,960 --> 00:08:29,889
committed to his tree or you can say no

00:08:26,969 --> 00:08:32,289
it's nice that you've done that and I

00:08:29,889 --> 00:08:36,550
can take like ninety percent of it but

00:08:32,289 --> 00:08:41,800
there is stuff that I won't take so you

00:08:36,550 --> 00:08:44,829
can either accept these order or not

00:08:41,800 --> 00:08:47,140
accept these and if you not accept these

00:08:44,829 --> 00:08:51,820
I get a mail again and

00:08:47,140 --> 00:08:54,130
he can tell me in that mail okay you've

00:08:51,820 --> 00:08:56,230
updated to version one not one but you

00:08:54,130 --> 00:08:57,790
change this one configure switch which I

00:08:56,230 --> 00:09:01,150
don't like I want to have it otherwise

00:08:57,790 --> 00:09:04,300
and stuff like that so the whole process

00:09:01,150 --> 00:09:07,540
of two people talking to each other is

00:09:04,300 --> 00:09:10,570
like automated in the tool which it

00:09:07,540 --> 00:09:13,750
makes it easy to scale that up so if my

00:09:10,570 --> 00:09:16,270
I mean if me and the Scarlet heart talk

00:09:13,750 --> 00:09:19,240
it's probably better if we do it on some

00:09:16,270 --> 00:09:21,970
IRC channel then to me branching his

00:09:19,240 --> 00:09:25,570
package and blah blah blah blah blah but

00:09:21,970 --> 00:09:28,540
if you have more than two users involved

00:09:25,570 --> 00:09:31,420
it really gets easy to get mixed up in

00:09:28,540 --> 00:09:39,600
that so tooling around this process is

00:09:31,420 --> 00:09:39,600
really nice so sorry

00:09:57,900 --> 00:10:11,220
yep okay so what I want to show you is

00:10:05,850 --> 00:10:13,930
now some examples of how people do stuff

00:10:11,220 --> 00:10:19,800
and collaborate in the boot service

00:10:13,930 --> 00:10:24,310
today and as you can imagine this

00:10:19,800 --> 00:10:28,000
tooling I just showed you you can use it

00:10:24,310 --> 00:10:33,400
in all kinds of ways for instance we

00:10:28,000 --> 00:10:36,070
have a new repository in the opensuse

00:10:33,400 --> 00:10:40,090
project which is called contrib which is

00:10:36,070 --> 00:10:43,480
kind of a universal third party package

00:10:40,090 --> 00:10:46,180
repository where people that are not

00:10:43,480 --> 00:10:49,330
directly contributing to the opensuse

00:10:46,180 --> 00:10:56,040
factory have someplace to put packages

00:10:49,330 --> 00:10:59,320
on so with the tooling we have for

00:10:56,040 --> 00:11:02,320
opensuse factory contrib which is the

00:10:59,320 --> 00:11:04,690
development branch we do it like this

00:11:02,320 --> 00:11:07,840
for new packages if you want to submit

00:11:04,690 --> 00:11:10,300
your package that didn't exist before in

00:11:07,840 --> 00:11:13,240
factory contrib you have to do is submit

00:11:10,300 --> 00:11:16,000
request which means you have to do this

00:11:13,240 --> 00:11:18,640
oh I have this new package I sent you a

00:11:16,000 --> 00:11:22,870
patch that adds it to your to your

00:11:18,640 --> 00:11:25,780
repository then there are people more

00:11:22,870 --> 00:11:29,440
than I mean there's the whole team

00:11:25,780 --> 00:11:31,830
behind that that just reviews the submit

00:11:29,440 --> 00:11:34,690
requests that come in for new packages

00:11:31,830 --> 00:11:40,120
once you are granted access to that

00:11:34,690 --> 00:11:42,790
package and to the repository you are

00:11:40,120 --> 00:11:45,940
the package maintainer you are not the

00:11:42,790 --> 00:11:49,210
repository maintainer that means the

00:11:45,940 --> 00:11:52,000
only thing you can change is your own

00:11:49,210 --> 00:11:55,780
package you cannot add another one you

00:11:52,000 --> 00:11:58,660
cannot remove other packages you can not

00:11:55,780 --> 00:12:02,160
do anything to the repository you can

00:11:58,660 --> 00:12:06,880
only do stuff to your own package and

00:12:02,160 --> 00:12:08,529
this means process wise if you update a

00:12:06,880 --> 00:12:12,480
package you just walk

00:12:08,529 --> 00:12:16,199
and check in and stuff like that if you

00:12:12,480 --> 00:12:20,910
and don't want to maintain it anymore in

00:12:16,199 --> 00:12:24,610
that repository if you say okay maybe I

00:12:20,910 --> 00:12:27,670
my maintain KDE to knit and now Katie

00:12:24,610 --> 00:12:30,009
force there so I want to get rid of it

00:12:27,670 --> 00:12:33,370
because everybody has moved on to KDA

00:12:30,009 --> 00:12:35,860
for any way I can just drop it for

00:12:33,370 --> 00:12:39,279
instance so I can do whatever I want to

00:12:35,860 --> 00:12:44,139
my package but not not true the not to

00:12:39,279 --> 00:12:49,089
the repository then there's kind of an

00:12:44,139 --> 00:12:53,290
extra repository for every released

00:12:49,089 --> 00:12:57,509
version of opensuse so for instance with

00:12:53,290 --> 00:13:00,670
11 or two we will have 1102 contrib

00:12:57,509 --> 00:13:03,910
where the tooling and the process is

00:13:00,670 --> 00:13:07,899
completely different so for new packages

00:13:03,910 --> 00:13:10,839
are simply not allowed the project

00:13:07,899 --> 00:13:13,629
maintain O's means that can do stuff to

00:13:10,839 --> 00:13:16,839
the project like deleting pictures and

00:13:13,629 --> 00:13:18,970
stuff like that or having it built for

00:13:16,839 --> 00:13:22,389
some other distribution or whatever are

00:13:18,970 --> 00:13:25,420
still the contracting in this case for

00:13:22,389 --> 00:13:29,250
the individual packages the maintainer

00:13:25,420 --> 00:13:31,569
are also the contracting which means if

00:13:29,250 --> 00:13:35,589
you had your package in fact to a

00:13:31,569 --> 00:13:39,430
contrib you could do everything if you

00:13:35,589 --> 00:13:41,769
if it wandered to 11 the two contrib you

00:13:39,430 --> 00:13:44,230
can't do anything you for everything you

00:13:41,769 --> 00:13:49,809
do to that package you have to submit

00:13:44,230 --> 00:13:54,850
the patch again so you can see in that

00:13:49,809 --> 00:13:57,610
example that we are trying to follow the

00:13:54,850 --> 00:14:01,740
general factory rule we have at the

00:13:57,610 --> 00:14:04,420
moment this is unreadable so I can

00:14:01,740 --> 00:14:07,809
explain a little bit this is actually

00:14:04,420 --> 00:14:11,319
that's the usual opensuse development

00:14:07,809 --> 00:14:15,639
model on the upper line you have the

00:14:11,319 --> 00:14:19,059
factory stream which is just like in

00:14:15,639 --> 00:14:21,510
your svn your hat branch or whatever

00:14:19,059 --> 00:14:24,300
always the newest stuff

00:14:21,510 --> 00:14:28,830
then somewhere at some point of time we

00:14:24,300 --> 00:14:33,690
start the development of 11 or two then

00:14:28,830 --> 00:14:37,230
do something release alphabet house and

00:14:33,690 --> 00:14:41,390
then gold masters and then someone and

00:14:37,230 --> 00:14:47,580
time the development for 11 to two stops

00:14:41,390 --> 00:14:48,840
we branch away 11 or two and have the

00:14:47,580 --> 00:14:53,310
same here so this is the general

00:14:48,840 --> 00:14:55,740
opensuse development model which is kind

00:14:53,310 --> 00:14:59,100
of reflected here you can do everything

00:14:55,740 --> 00:15:05,760
in factory you can't do in release

00:14:59,100 --> 00:15:09,350
products so this is how we today in in

00:15:05,760 --> 00:15:13,470
opensuse contrib use the tooling around

00:15:09,350 --> 00:15:18,300
the opensuse build service to just have

00:15:13,470 --> 00:15:24,750
a repository that follows the general

00:15:18,300 --> 00:15:28,340
opensuse development model so how do we

00:15:24,750 --> 00:15:32,400
do it today for factory which is the

00:15:28,340 --> 00:15:38,550
distance loser development distribution

00:15:32,400 --> 00:15:42,120
and at the moment we have for each

00:15:38,550 --> 00:15:46,220
package in the distribution we have some

00:15:42,120 --> 00:15:53,100
run directly responsible as maintainer

00:15:46,220 --> 00:15:56,040
which means it's kind of easy to to to

00:15:53,100 --> 00:16:00,420
set tooling up around that because if

00:15:56,040 --> 00:16:03,870
you want to submit something to the vim

00:16:00,420 --> 00:16:06,240
package of opensuse factory you have to

00:16:03,870 --> 00:16:08,070
go to the vim maintainer and tell him i

00:16:06,240 --> 00:16:13,740
have changed this on that and that and

00:16:08,070 --> 00:16:17,970
can send you a patch so the idea at the

00:16:13,740 --> 00:16:21,960
moment is that you just do a submit

00:16:17,970 --> 00:16:24,660
request to the opensuse factory vim

00:16:21,960 --> 00:16:27,570
package and the vim maintainer takes

00:16:24,660 --> 00:16:29,860
care of all the opensuse factory gym

00:16:27,570 --> 00:16:33,790
submit requests

00:16:29,860 --> 00:16:38,769
this is how we how we are doing it now

00:16:33,790 --> 00:16:41,529
and which kind of scales badly because

00:16:38,769 --> 00:16:46,570
for every package you need someone

00:16:41,529 --> 00:16:49,899
directly responsible which means if we

00:16:46,570 --> 00:16:54,370
have like today somewhat three thousand

00:16:49,899 --> 00:16:58,149
packages you have like either you add

00:16:54,370 --> 00:17:02,769
more people that care for factory if you

00:16:58,149 --> 00:17:05,610
add more packages or the package count

00:17:02,769 --> 00:17:08,319
for individual developers goes up and

00:17:05,610 --> 00:17:10,929
what we see at the moment in the

00:17:08,319 --> 00:17:15,360
opensuse build services that factory

00:17:10,929 --> 00:17:19,390
cannot really keep up anymore because

00:17:15,360 --> 00:17:21,520
you need to find other methods then then

00:17:19,390 --> 00:17:26,350
having someone directly responsible for

00:17:21,520 --> 00:17:29,650
a package and this is kind of the state

00:17:26,350 --> 00:17:35,950
we are at now and where we are trying to

00:17:29,650 --> 00:17:41,350
come up with solutions and one of the

00:17:35,950 --> 00:17:44,700
things we thought of in the moment is to

00:17:41,350 --> 00:17:48,100
have some kind of review team like the

00:17:44,700 --> 00:17:51,549
opensuse come to a team that that is not

00:17:48,100 --> 00:17:55,030
directly responsible for one package but

00:17:51,549 --> 00:18:01,660
where people review just simple patches

00:17:55,030 --> 00:18:05,040
and stuff like that and that's the way

00:18:01,660 --> 00:18:09,360
we currently think we can do it but

00:18:05,040 --> 00:18:13,799
there we are in discussions and that is

00:18:09,360 --> 00:18:20,520
because for factory there are a lot of

00:18:13,799 --> 00:18:27,190
restrictions for instance factory gets

00:18:20,520 --> 00:18:29,620
used to build a lot of other packages so

00:18:27,190 --> 00:18:34,090
if you can't submit something to factory

00:18:29,620 --> 00:18:37,750
it gets immediately used for building

00:18:34,090 --> 00:18:41,050
other stuff and a lot of stuff like the

00:18:37,750 --> 00:18:42,550
whole ulcers is as I mean every project

00:18:41,050 --> 00:18:44,590
in the boot service

00:18:42,550 --> 00:18:47,710
at least every opensuse project has a

00:18:44,590 --> 00:18:53,410
opensuse factory branch where they build

00:18:47,710 --> 00:18:57,490
against factory so that's one

00:18:53,410 --> 00:19:00,280
restriction we have that there has to be

00:18:57,490 --> 00:19:03,570
some review otherwise you can't do it

00:19:00,280 --> 00:19:09,900
and then there has to be some scheduling

00:19:03,570 --> 00:19:13,840
there because I mean if all of you have

00:19:09,900 --> 00:19:17,290
one after year the other great ideas for

00:19:13,840 --> 00:19:19,960
the g lipsy package and you submit and

00:19:17,290 --> 00:19:24,460
submit and submit and submit nothing

00:19:19,960 --> 00:19:26,740
will ever get built because if chillip

00:19:24,460 --> 00:19:31,600
sees changes like the whole system

00:19:26,740 --> 00:19:34,150
changes and gets rebuilt so if you check

00:19:31,600 --> 00:19:36,100
something into g lipsy and then you and

00:19:34,150 --> 00:19:39,580
then you and then you nothing gets ever

00:19:36,100 --> 00:19:43,510
built that's another thing we need to do

00:19:39,580 --> 00:19:45,160
with factory scheduling and as you can

00:19:43,510 --> 00:19:47,920
see there are a lot of restrictions but

00:19:45,160 --> 00:19:51,610
i think the tooling around the opens is

00:19:47,920 --> 00:19:56,140
a good service is actually equipped to

00:19:51,610 --> 00:19:59,410
handle that so that's the current state

00:19:56,140 --> 00:20:02,800
of collaboration in the opens with a

00:19:59,410 --> 00:20:05,290
boot service if you need me to to show

00:20:02,800 --> 00:20:10,180
you stuff we can go down to the booth

00:20:05,290 --> 00:20:14,860
and I can show you how to set up your

00:20:10,180 --> 00:20:17,170
project to to handle different the

00:20:14,860 --> 00:20:21,040
different roles of maintainer xand stuff

00:20:17,170 --> 00:20:23,800
like that or I can show you how submit

00:20:21,040 --> 00:20:26,200
request really looks like and not on a

00:20:23,800 --> 00:20:30,490
slide but in real life and stuff like

00:20:26,200 --> 00:20:34,660
that and if you have other questions you

00:20:30,490 --> 00:20:38,740
can ask them to so are there any

00:20:34,660 --> 00:20:40,860
questions now you would like me to

00:20:38,740 --> 00:20:40,860
answer

00:20:51,500 --> 00:21:05,580
no yeah i yeah you talk about branching

00:21:02,100 --> 00:21:10,040
and I have two questions related to that

00:21:05,580 --> 00:21:14,190
when you brand the package if the if the

00:21:10,040 --> 00:21:18,980
original package exchange it do you get

00:21:14,190 --> 00:21:23,820
a notification of that no no not really

00:21:18,980 --> 00:21:25,890
okay get a notification but it actually

00:21:23,820 --> 00:21:27,650
it's not needed because the branching

00:21:25,890 --> 00:21:31,230
works is a source link mechanism and

00:21:27,650 --> 00:21:33,180
that means that you are in your branch

00:21:31,230 --> 00:21:35,370
project has a reference to the original

00:21:33,180 --> 00:21:37,320
ones too and when you change something

00:21:35,370 --> 00:21:41,010
the build services changes drawing your

00:21:37,320 --> 00:21:43,350
change so when the other guy is as much

00:21:41,010 --> 00:21:48,180
a link to is changing oil so the system

00:21:43,350 --> 00:21:50,520
automatic if tries to merge both changes

00:21:48,180 --> 00:21:53,220
and it's still working of course I can

00:21:50,520 --> 00:21:55,500
visit situations it's that stuff is

00:21:53,220 --> 00:21:57,240
conflicting and there we still have a

00:21:55,500 --> 00:21:58,860
problem that summer training is not nice

00:21:57,240 --> 00:22:01,950
enough this is something that we need to

00:21:58,860 --> 00:22:05,250
work on at the moment but in theory you

00:22:01,950 --> 00:22:07,800
can let Alton good thing when they are

00:22:05,250 --> 00:22:11,910
for example 5 submit requests to one

00:22:07,800 --> 00:22:15,360
package and now you accept the first one

00:22:11,910 --> 00:22:19,980
and then you see okay the other for

00:22:15,360 --> 00:22:22,140
three of them are still applying but 11

00:22:19,980 --> 00:22:24,180
is not anymore so you can decline please

00:22:22,140 --> 00:22:26,670
adapt it again and the other series we

00:22:24,180 --> 00:22:29,430
can see okay from zen vitac I to exist

00:22:26,670 --> 00:22:32,010
that one and then you can see if the

00:22:29,430 --> 00:22:34,560
other balls are still working so it's as

00:22:32,010 --> 00:22:38,070
long as mergers are the changes are not

00:22:34,560 --> 00:22:39,690
conflicting it's really easy to see if

00:22:38,070 --> 00:22:42,630
if they have an influence to each other

00:22:39,690 --> 00:22:44,700
in too much time together just the

00:22:42,630 --> 00:22:46,530
manual merge conflict solving tool is

00:22:44,700 --> 00:22:49,880
not say where it should be that's

00:22:46,530 --> 00:22:49,880
something we what you need to improve

00:22:52,210 --> 00:23:01,640
my question was more on the like if I

00:22:57,350 --> 00:23:04,400
branch your pocket and I want I want to

00:23:01,640 --> 00:23:08,180
maintain that branch not that you want

00:23:04,400 --> 00:23:10,280
to merge my patch on yours like I have

00:23:08,180 --> 00:23:15,500
my patch and every time you do a new

00:23:10,280 --> 00:23:26,630
version I will get my my branch or build

00:23:15,500 --> 00:23:28,370
that's strong so that's the same as the

00:23:26,630 --> 00:23:30,410
sorting mechanism I mean that's the

00:23:28,370 --> 00:23:33,020
example with Connor you have the corner

00:23:30,410 --> 00:23:34,670
and she wants a multimedia patch but the

00:23:33,020 --> 00:23:37,070
kernel developers don't want it because

00:23:34,670 --> 00:23:39,770
it reduces the speed of so archive

00:23:37,070 --> 00:23:41,720
database then you can perfectly easily

00:23:39,770 --> 00:23:43,490
set up your branch project this is

00:23:41,720 --> 00:23:45,890
source link and this is what happens in

00:23:43,490 --> 00:23:48,320
the end we saw SC branch command at your

00:23:45,890 --> 00:23:50,930
patch and as long as your patch applies

00:23:48,320 --> 00:23:54,140
you will all the time get the latest

00:23:50,930 --> 00:23:56,180
package plus your patch compile it so if

00:23:54,140 --> 00:23:58,940
so as a guy is changing some things some

00:23:56,180 --> 00:24:02,630
sauce you package gets compiled also

00:23:58,940 --> 00:24:05,660
again insult edge so to to to make that

00:24:02,630 --> 00:24:07,640
quick this OC branch command does

00:24:05,660 --> 00:24:10,280
nothing else than creating another

00:24:07,640 --> 00:24:15,070
project underneath your home project and

00:24:10,280 --> 00:24:19,130
linking the sources it was a branch

00:24:15,070 --> 00:24:22,160
sorry can you close a branch like you

00:24:19,130 --> 00:24:24,260
open a branch and you maintain that

00:24:22,160 --> 00:24:26,780
branch and when it's march to the

00:24:24,260 --> 00:24:30,260
original must delete the project you

00:24:26,780 --> 00:24:32,600
delete the project okay and then you

00:24:30,260 --> 00:24:35,720
said you talked about the country the

00:24:32,600 --> 00:24:40,100
country team who is the country team is

00:24:35,720 --> 00:24:43,790
a Suzy employees you mean know whether I

00:24:40,100 --> 00:24:46,820
mean they're ours is a employees I for

00:24:43,790 --> 00:24:48,860
instance and I'm in the country team but

00:24:46,820 --> 00:24:54,650
there are others as well that are not

00:24:48,860 --> 00:24:56,780
employed by Susie or anything so at what

00:24:54,650 --> 00:24:59,390
is the difference I mean how someone

00:24:56,780 --> 00:25:03,440
gets into contrib team you said you can

00:24:59,390 --> 00:25:06,230
we initially started just doing a call

00:25:03,440 --> 00:25:10,070
and wants to because it means work I

00:25:06,230 --> 00:25:12,620
mean you have to review patches from all

00:25:10,070 --> 00:25:17,840
over the place and you have to review

00:25:12,620 --> 00:25:21,980
full packages and in the end if we have

00:25:17,840 --> 00:25:26,360
a released contrib like 4 11 or two you

00:25:21,980 --> 00:25:28,940
will have to review security patches and

00:25:26,360 --> 00:25:31,400
stuff like that so it means work so

00:25:28,940 --> 00:25:34,370
initially we just ask who wants to do it

00:25:31,400 --> 00:25:37,640
and those guys who said yes or no other

00:25:34,370 --> 00:25:40,430
country team so there was no there was

00:25:37,640 --> 00:25:43,250
no formal decision making process or

00:25:40,430 --> 00:25:48,680
anything we just asked them we done with

00:25:43,250 --> 00:25:54,290
it yes if you a few yourself want to be

00:25:48,680 --> 00:25:55,940
maintainer of contrib you can just come

00:25:54,290 --> 00:26:00,200
to the mailing list and say okay I want

00:25:55,940 --> 00:26:03,560
to help out but in the end we will

00:26:00,200 --> 00:26:05,330
probably clean up this team every once

00:26:03,560 --> 00:26:08,000
in a while and for our people that are

00:26:05,330 --> 00:26:11,120
not comfortable anymore and why do you

00:26:08,000 --> 00:26:14,090
have to have a people I mean when people

00:26:11,120 --> 00:26:16,430
in the factory country has to be not the

00:26:14,090 --> 00:26:18,800
same on that under contract team sorry I

00:26:16,430 --> 00:26:21,770
mean you have people that would be in

00:26:18,800 --> 00:26:24,650
the factory country and people on the

00:26:21,770 --> 00:26:29,060
country way it's not just the same

00:26:24,650 --> 00:26:32,840
people now we have you have two

00:26:29,060 --> 00:26:37,420
repositories and you have 1 contrib team

00:26:32,840 --> 00:26:41,720
that is caring for in factory contrib

00:26:37,420 --> 00:26:44,450
only for new package submits so if a

00:26:41,720 --> 00:26:48,880
package that wasn't there before gets

00:26:44,450 --> 00:26:52,190
submitted to contrib this this team has

00:26:48,880 --> 00:26:53,990
to take care of reviewing their package

00:26:52,190 --> 00:26:56,720
and you say you are you are the package

00:26:53,990 --> 00:27:00,800
maintainer of the factory county let's

00:26:56,720 --> 00:27:02,480
for example i do a package and i asked

00:27:00,800 --> 00:27:04,420
for this package to be in the factory

00:27:02,480 --> 00:27:08,390
con trip and I'm the package maintainer

00:27:04,420 --> 00:27:10,550
then when this gets to country do you

00:27:08,390 --> 00:27:15,970
mean boy kind of gets to really air I

00:27:10,550 --> 00:27:19,030
mean is that I could still be the back

00:27:15,970 --> 00:27:24,940
maintainer white has to be a different

00:27:19,030 --> 00:27:27,220
version I can explain to them you're not

00:27:24,940 --> 00:27:29,230
the package maintainer anymore because

00:27:27,220 --> 00:27:32,110
otherwise you could change whatever you

00:27:29,230 --> 00:27:35,020
want in a release state of the

00:27:32,110 --> 00:27:37,000
repository that means for the end users

00:27:35,020 --> 00:27:39,970
that use your packages they have a

00:27:37,000 --> 00:27:43,620
moving target all the time so we want to

00:27:39,970 --> 00:27:47,650
have quality packages in opensuse

00:27:43,620 --> 00:27:50,530
contrib so we follow the same rules if

00:27:47,650 --> 00:27:53,490
we have with factory which means for

00:27:50,530 --> 00:27:59,010
instance no new packages unreleased

00:27:53,490 --> 00:28:02,290
repositories no version updates are only

00:27:59,010 --> 00:28:07,120
sparse version updates for security

00:28:02,290 --> 00:28:11,380
problems or we say okay we're not

00:28:07,120 --> 00:28:13,960
changing the way the whole thing's built

00:28:11,380 --> 00:28:19,200
too often so we don't get rebuilt often

00:28:13,960 --> 00:28:21,580
and stuff like that so that's why

00:28:19,200 --> 00:28:24,550
package maintain those individual

00:28:21,580 --> 00:28:27,660
package maintains cannot maintain their

00:28:24,550 --> 00:28:30,970
own stuff in a release side of the

00:28:27,660 --> 00:28:34,780
contrapositive anymore that's the stuff

00:28:30,970 --> 00:28:37,420
the contracting will care for which does

00:28:34,780 --> 00:28:40,090
not mean you're not responsible anymore

00:28:37,420 --> 00:28:42,700
or you're not you're not able to help

00:28:40,090 --> 00:28:53,890
anymore it's just not you cannot check

00:28:42,700 --> 00:28:57,180
in every time you want to if yeah but I

00:28:53,890 --> 00:29:00,160
mean if you want to have a package that

00:28:57,180 --> 00:29:02,590
works with factory and you don't want to

00:29:00,160 --> 00:29:06,640
maintain that package you just have your

00:29:02,590 --> 00:29:09,760
home projects but if you want a package

00:29:06,640 --> 00:29:14,280
to be in the country I think you should

00:29:09,760 --> 00:29:14,280
be a 12 to maintain that bucket

00:29:20,049 --> 00:29:27,679
recording there are probably some cases

00:29:25,369 --> 00:29:29,720
where the original maintainer is also in

00:29:27,679 --> 00:29:32,269
the contrib team and he is then of

00:29:29,720 --> 00:29:35,149
course also maintaining his own package

00:29:32,269 --> 00:29:37,850
in the cut is not that a suit in the in

00:29:35,149 --> 00:29:39,049
the moment that you joined in the moment

00:29:37,850 --> 00:29:40,730
you join the contrib team you are no

00:29:39,049 --> 00:29:42,769
longer allowed to maintain your own

00:29:40,730 --> 00:29:45,110
package that's not the problem but if

00:29:42,769 --> 00:29:47,210
you're maintaining it for the contract

00:29:45,110 --> 00:29:50,690
mu have a different set of standards to

00:29:47,210 --> 00:29:52,879
obey to know version updates no oh

00:29:50,690 --> 00:29:54,950
that's a funny feature i enable it now

00:29:52,879 --> 00:29:56,710
no you can do that in factory but don't

00:29:54,950 --> 00:29:58,940
do that in the in the stable

00:29:56,710 --> 00:30:01,759
contributing that's basically the same

00:29:58,940 --> 00:30:03,830
like we work at Sue's even repackage I'm

00:30:01,759 --> 00:30:05,929
sometimes I would like to do a version

00:30:03,830 --> 00:30:07,999
update for a released version but it's

00:30:05,929 --> 00:30:09,889
very hard you need very good arguments

00:30:07,999 --> 00:30:12,619
to be able to do that re and all the

00:30:09,889 --> 00:30:16,759
ones what you need to keep in mind is

00:30:12,619 --> 00:30:19,220
that we want to have free lots of people

00:30:16,759 --> 00:30:21,679
using crontab and if you want to have as

00:30:19,220 --> 00:30:24,619
much trust into this repository as

00:30:21,679 --> 00:30:26,929
possible what's important here is its

00:30:24,619 --> 00:30:30,639
visibility service always the thing

00:30:26,929 --> 00:30:32,659
stuff gets billed automatically and

00:30:30,639 --> 00:30:35,809
people who have added this repository

00:30:32,659 --> 00:30:39,320
I'll get directly affected so it's very

00:30:35,809 --> 00:30:42,529
more risky's and was just an svn where

00:30:39,320 --> 00:30:45,320
people can review it is usually any

00:30:42,529 --> 00:30:49,720
standard user but a package which get

00:30:45,320 --> 00:30:52,909
installed is getting soiled as root and

00:30:49,720 --> 00:30:55,999
so the so there is some risk such a

00:30:52,909 --> 00:30:58,789
damaged the system and especially for an

00:30:55,999 --> 00:31:02,330
stable system like a no blues 11 or two

00:30:58,789 --> 00:31:04,309
as there must be some review in our

00:31:02,330 --> 00:31:07,669
opinion to limit we have to keep the

00:31:04,309 --> 00:31:12,820
trust and as you maybe can hear from the

00:31:07,669 --> 00:31:17,529
from the comments from stefan and RT on

00:31:12,820 --> 00:31:21,019
its kind of my evil hidden plan to form

00:31:17,529 --> 00:31:23,389
factor econ trip after factory so in the

00:31:21,019 --> 00:31:24,590
end we can just merge them back together

00:31:23,389 --> 00:31:28,530
and have

00:31:24,590 --> 00:31:32,870
contributions to to a factory directly

00:31:28,530 --> 00:31:38,040
and but first we need to resolve this

00:31:32,870 --> 00:31:40,500
this review step somehow because I mean

00:31:38,040 --> 00:31:43,290
factory contrib will have a lot of users

00:31:40,500 --> 00:31:48,210
but factory has really a lot of users

00:31:43,290 --> 00:31:50,820
and you don't want to change stuff in

00:31:48,210 --> 00:31:54,590
there that breaks people's system or

00:31:50,820 --> 00:31:58,410
that opens route holes or whatever so

00:31:54,590 --> 00:32:02,550
there has to be review and that's my

00:31:58,410 --> 00:32:05,400
personal evil plan how I design factory

00:32:02,550 --> 00:32:07,530
contrib to to adhere to the same

00:32:05,400 --> 00:32:10,380
standards as factory because in the end

00:32:07,530 --> 00:32:14,610
we will just merge them back together

00:32:10,380 --> 00:32:20,190
but that's stuff for the future and this

00:32:14,610 --> 00:32:22,670
is what we have now so any more

00:32:20,190 --> 00:32:22,670
questions

00:32:24,250 --> 00:32:33,040

YouTube URL: https://www.youtube.com/watch?v=5q-AW9f-1V0


