Title: Building Server Applications using Objective C and GNUstep   Nicola Pero   FOSDEM  2009
Publication date: 2011-12-22
Playlist: FOSDEM 2009
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:12,260 --> 00:00:21,510
younger welcome to this talk I mean I

00:00:17,040 --> 00:00:24,240
encounter this talk is about fielding

00:00:21,510 --> 00:00:29,040
server application is injective

00:00:24,240 --> 00:00:31,680
c.english them well the reason I'm

00:00:29,040 --> 00:00:34,440
giving this talk really is because this

00:00:31,680 --> 00:00:38,430
is a an argument which most people can

00:00:34,440 --> 00:00:41,880
we know actually use that is usually

00:00:38,430 --> 00:00:45,469
identified with this hooey development

00:00:41,880 --> 00:00:48,750
framework mostly for GUI applications

00:00:45,469 --> 00:00:50,550
but had this composed of two parts one

00:00:48,750 --> 00:00:54,059
is canoes the base which is a new

00:00:50,550 --> 00:00:56,280
graphical power foundation projecting

00:00:54,059 --> 00:00:57,870
cylinder and then particular step oil

00:00:56,280 --> 00:01:00,570
which is more for the graphical style

00:00:57,870 --> 00:01:04,170
now the news that place is actually the

00:01:00,570 --> 00:01:06,300
most complete and truly the test the

00:01:04,170 --> 00:01:08,430
element extensive in polished how to

00:01:06,300 --> 00:01:11,700
lose them so it's actually a really cool

00:01:08,430 --> 00:01:17,880
and finished piece of software you can

00:01:11,700 --> 00:01:19,860
use but it's really little known is

00:01:17,880 --> 00:01:22,650
actually little known to the public in a

00:01:19,860 --> 00:01:24,750
sense the company i work for has been

00:01:22,650 --> 00:01:28,079
running very large-scale applications

00:01:24,750 --> 00:01:31,710
upon this like big messaging servers or

00:01:28,079 --> 00:01:34,470
SMS example in your source on and it

00:01:31,710 --> 00:01:36,450
really works really well so always

00:01:34,470 --> 00:01:39,180
wonder why nobody else was doing it its

00:01:36,450 --> 00:01:40,120
own pistol just to give an overview of

00:01:39,180 --> 00:01:45,430
what you can

00:01:40,120 --> 00:01:46,960
how you can use this stuff by the way if

00:01:45,430 --> 00:01:50,050
you've been to the top guess that this

00:01:46,960 --> 00:01:52,840
is coming population that objective c

00:01:50,050 --> 00:01:55,180
which is the languages but new step is

00:01:52,840 --> 00:01:57,310
over the programming language if you're

00:01:55,180 --> 00:01:59,260
using new step to do server applications

00:01:57,310 --> 00:02:02,740
you are going to use objective c there's

00:01:59,260 --> 00:02:04,210
not much point otherwise well there are

00:02:02,740 --> 00:02:07,530
some other options which we'll discuss

00:02:04,210 --> 00:02:09,970
in the end one this is a main option

00:02:07,530 --> 00:02:12,190
obviously objective c is a strict

00:02:09,970 --> 00:02:15,640
superset of C meeting anything you can

00:02:12,190 --> 00:02:19,210
do it see also works an objective c you

00:02:15,640 --> 00:02:21,580
can compile the link objective-c

00:02:19,210 --> 00:02:23,920
libraries in your objective c trouble

00:02:21,580 --> 00:02:26,890
congeals of people in your syllabus

00:02:23,920 --> 00:02:28,840
standards is great you can take openssl

00:02:26,890 --> 00:02:31,600
you can take over the wrasse you have

00:02:28,840 --> 00:02:34,660
just NEC librarian just like it in and

00:02:31,600 --> 00:02:37,570
use it so the main difference between

00:02:34,660 --> 00:02:40,390
objective c and c is that object ec out

00:02:37,570 --> 00:02:43,510
the number of new features if you want

00:02:40,390 --> 00:02:46,209
some sit-ups and constructs I venues

00:02:43,510 --> 00:02:47,510
that allow you to the front passes game

00:02:46,209 --> 00:02:51,439
object

00:02:47,510 --> 00:02:54,790
methods in both methods etc and actually

00:02:51,439 --> 00:02:57,110
quite a few quick advanced staff though

00:02:54,790 --> 00:02:59,510
sometimes you don't even find in

00:02:57,110 --> 00:03:03,430
higher-level languages like forwarding

00:02:59,510 --> 00:03:03,430
or categories

00:03:05,690 --> 00:03:11,040
why so why is objectives in suspension

00:03:09,060 --> 00:03:13,140
type why is objective c so good for

00:03:11,040 --> 00:03:16,260
server applications because I tables is

00:03:13,140 --> 00:03:19,140
a perfect match and really it first of

00:03:16,260 --> 00:03:21,900
all is just see it's compatible with C

00:03:19,140 --> 00:03:24,840
libraries it can be asked us to see you

00:03:21,900 --> 00:03:27,060
just use the kind of see subset of it so

00:03:24,840 --> 00:03:29,370
if you're using button your servant of

00:03:27,060 --> 00:03:31,830
the stop miracle that really needs to go

00:03:29,370 --> 00:03:35,730
in the fast you just write sequel to

00:03:31,830 --> 00:03:38,640
just use series and I great one but if

00:03:35,730 --> 00:03:41,910
you consumes its object orientated

00:03:38,640 --> 00:03:44,040
extensions to try to your software like

00:03:41,910 --> 00:03:47,519
a very good either the language to you

00:03:44,040 --> 00:03:50,670
nice design often spread an angle and

00:03:47,519 --> 00:03:52,950
then nice thing is you can meet the two

00:03:50,670 --> 00:03:56,519
things so once you know get experience

00:03:52,950 --> 00:03:59,220
eventually kind of change your style and

00:03:56,519 --> 00:04:02,760
a bit of cod war see light in a pod

00:03:59,220 --> 00:04:05,370
world's motor so really Congress in a

00:04:02,760 --> 00:04:08,970
wide range of things and applications

00:04:05,370 --> 00:04:11,459
you can do with it so it's a really

00:04:08,970 --> 00:04:14,070
flexible and actually for server

00:04:11,459 --> 00:04:16,440
application its foundation class library

00:04:14,070 --> 00:04:22,250
to read the power is really good and

00:04:16,440 --> 00:04:25,550
Twitter now why

00:04:22,250 --> 00:04:27,050
I think I really answer that anyway why

00:04:25,550 --> 00:04:29,390
will you use objectives in for server

00:04:27,050 --> 00:04:32,630
applications are in that it's very fast

00:04:29,390 --> 00:04:34,700
you can mix it Missy it's an eye level

00:04:32,630 --> 00:04:36,740
language which you can use for the

00:04:34,700 --> 00:04:40,250
design you'll start properly and you've

00:04:36,740 --> 00:04:41,570
got this powerful foundation language so

00:04:40,250 --> 00:04:45,800
let's have a quick look at the

00:04:41,570 --> 00:04:49,070
foundation kit which is what this talk

00:04:45,800 --> 00:04:52,280
is mostly about with me first of all

00:04:49,070 --> 00:04:55,419
glue surveys which is this thing

00:04:52,280 --> 00:05:02,330
actually implements the foundation get

00:04:55,419 --> 00:05:06,710
fined by escapee I from 94 which defines

00:05:02,330 --> 00:05:11,060
a number of classes for an objective

00:05:06,710 --> 00:05:13,760
simulation Oh God we look through some

00:05:11,060 --> 00:05:17,030
of these classes later just give you

00:05:13,760 --> 00:05:19,490
better ideal the capabilities of this

00:05:17,030 --> 00:05:22,340
library velicity los papis in the roots

00:05:19,490 --> 00:05:24,530
of objective-c classes you got strength

00:05:22,340 --> 00:05:27,229
sleep numbers they've just reserved for

00:05:24,530 --> 00:05:29,930
arrays lecture is an interesting for

00:05:27,229 --> 00:05:32,210
servers who got one routes timers I talk

00:05:29,930 --> 00:05:36,860
about later can do either the

00:05:32,210 --> 00:05:39,110
notification and obviously yeah okay so

00:05:36,860 --> 00:05:41,660
this was narrow place that kind of API

00:05:39,110 --> 00:05:43,669
this is our booster I should learn you

00:05:41,660 --> 00:05:46,100
can run yourself in an operative system

00:05:43,669 --> 00:05:48,260
in particular for the various units

00:05:46,100 --> 00:05:50,930
lions which are equality most

00:05:48,260 --> 00:05:53,270
religiously you need a new objective c

00:05:50,930 --> 00:05:55,330
on time which is shipped with a free

00:05:53,270 --> 00:05:58,240
software foundation Jesus easily

00:05:55,330 --> 00:06:05,460
so much and obviously that's transmitted

00:05:58,240 --> 00:06:08,319
let's lose the base okay so that's epic

00:06:05,460 --> 00:06:10,419
just a quick look at what actually you

00:06:08,319 --> 00:06:13,800
need to build server applications with

00:06:10,419 --> 00:06:17,020
the use them first of all the GCC and

00:06:13,800 --> 00:06:18,580
most the New York's distributions for

00:06:17,020 --> 00:06:21,759
example about separate been a beautiful

00:06:18,580 --> 00:06:23,560
Jesus is like iphone up to see just

00:06:21,759 --> 00:06:26,439
gives you an objective c compiler and

00:06:23,560 --> 00:06:29,740
objective-c on time you need understand

00:06:26,439 --> 00:06:31,870
me which is more made file library it's

00:06:29,740 --> 00:06:35,319
the official gusta build system

00:06:31,870 --> 00:06:38,319
basically invite very small and clean

00:06:35,319 --> 00:06:40,330
made vice and then this term able to

00:06:38,319 --> 00:06:44,050
take care of the compiling and licking

00:06:40,330 --> 00:06:47,110
and portable two other couples and

00:06:44,050 --> 00:06:49,599
finally obviously you need to use the

00:06:47,110 --> 00:06:52,629
base which is this presentation of the

00:06:49,599 --> 00:06:56,620
country foundation in plain one which

00:06:52,629 --> 00:06:59,760
provides you with this core objective c

00:06:56,620 --> 00:07:04,020
glasses you can use

00:06:59,760 --> 00:07:06,600
a couple important apprentices that we

00:07:04,020 --> 00:07:10,830
actually need help I really give XML

00:07:06,600 --> 00:07:14,520
which one is it this one is a bit

00:07:10,830 --> 00:07:17,730
unusual in this library cognitive ffi

00:07:14,520 --> 00:07:22,020
that's because new survey supports for

00:07:17,730 --> 00:07:23,610
loading which means you sentimental to

00:07:22,020 --> 00:07:25,260
adapt to an object and then the object

00:07:23,610 --> 00:07:27,150
without even really know what middle

00:07:25,260 --> 00:07:29,940
school can forward the method to another

00:07:27,150 --> 00:07:33,390
object which is very good certain area

00:07:29,940 --> 00:07:36,720
brands design anyway you just download

00:07:33,390 --> 00:07:40,260
that library story and that's it if you

00:07:36,720 --> 00:07:42,660
want to use the HTTPS in the Muslim base

00:07:40,260 --> 00:07:47,910
like you want to be able to connect to

00:07:42,660 --> 00:07:51,140
https servers or actually write it again

00:07:47,910 --> 00:07:55,580
sir probabilities neutralizer openssl

00:07:51,140 --> 00:07:55,580
obviously just install those libraries

00:07:56,560 --> 00:08:04,130
now I quickly and this is just being you

00:08:00,650 --> 00:08:06,890
an idea how easy distance stolen to do I

00:08:04,130 --> 00:08:08,840
just picked up distribution usually to

00:08:06,890 --> 00:08:10,970
do up at the end of star package they

00:08:08,840 --> 00:08:14,270
would then get on your dependent system

00:08:10,970 --> 00:08:16,160
ready to go this is instead if you're

00:08:14,270 --> 00:08:18,410
installing it manually which for

00:08:16,160 --> 00:08:24,020
examples what my company does we install

00:08:18,410 --> 00:08:26,540
our service manual so it looks imposing

00:08:24,020 --> 00:08:29,930
much that's really all you have to do so

00:08:26,540 --> 00:08:33,440
much you need to install a couple so GCC

00:08:29,930 --> 00:08:37,280
relax man openssl obviously I get

00:08:33,440 --> 00:08:40,400
labelled 45 then on that you just simple

00:08:37,280 --> 00:08:42,710
to install other pointing to me if you

00:08:40,400 --> 00:08:45,070
like that it will be stored in use block

00:08:42,710 --> 00:08:47,990
out so obviously just need to make sure

00:08:45,070 --> 00:08:50,900
the link you will find the libraries and

00:08:47,990 --> 00:08:53,460
everything though I saw the point

00:08:50,900 --> 00:08:56,670
compelling that you step man configure

00:08:53,460 --> 00:08:59,790
magnet is so you get mr. bass the same

00:08:56,670 --> 00:09:02,970
means openssl so you need two buses like

00:08:59,790 --> 00:09:06,780
enable openssl giving people and the

00:09:02,970 --> 00:09:11,550
only really unusual behavior is you need

00:09:06,780 --> 00:09:13,980
to source this rate that there are ways

00:09:11,550 --> 00:09:15,990
where you don't need to sort out old as

00:09:13,980 --> 00:09:18,630
a first time just to make sure it all

00:09:15,990 --> 00:09:20,910
works you source this thing which will

00:09:18,630 --> 00:09:22,440
set you apart such a library part and

00:09:20,910 --> 00:09:25,050
you don't have to worry about that

00:09:22,440 --> 00:09:29,420
actually be more familiar you can

00:09:25,050 --> 00:09:31,680
actually do NFHS styles forward your

00:09:29,420 --> 00:09:34,200
programs end up in you should be

00:09:31,680 --> 00:09:43,550
libraries in your labeling actually done

00:09:34,200 --> 00:09:43,550
it up okay so let's have a very quickly

00:09:43,940 --> 00:09:49,320
Allen pilot actually in objective-c

00:09:46,470 --> 00:09:54,090
gusta based program this is cradle

00:09:49,320 --> 00:09:58,050
example the same values yesterday that's

00:09:54,090 --> 00:10:00,330
some report this is the main header for

00:09:58,050 --> 00:10:03,960
the foundation to produce the base so

00:10:00,330 --> 00:10:05,070
once you always have a you have access

00:10:03,960 --> 00:10:07,830
to all their moves the base

00:10:05,070 --> 00:10:10,440
functionality this is just the timing

00:10:07,830 --> 00:10:13,260
and it's log it should be right through

00:10:10,440 --> 00:10:15,900
system a very so if people they use it

00:10:13,260 --> 00:10:19,170
in service to lock stock and that is a

00:10:15,900 --> 00:10:21,840
static string this syntax act and then

00:10:19,170 --> 00:10:25,100
the stream and is actually started NS

00:10:21,840 --> 00:10:25,100
string which we'll talk about later

00:10:25,170 --> 00:10:30,930
this is an example Google r85 which

00:10:28,110 --> 00:10:32,700
comprise that thing actually feel more

00:10:30,930 --> 00:10:34,380
price to compile the main file is

00:10:32,700 --> 00:10:38,100
exactly the same we just release them

00:10:34,380 --> 00:10:40,470
over here or your source code eyes then

00:10:38,100 --> 00:10:42,620
you had make it will it work so the

00:10:40,470 --> 00:10:46,860
structure of the new wave file first

00:10:42,620 --> 00:10:48,690
I've include this comment of me then you

00:10:46,860 --> 00:10:51,990
specify you the name of your program

00:10:48,690 --> 00:10:53,639
juice pillow and objective c 5 supposing

00:10:51,990 --> 00:10:56,910
the program and king and just listen

00:10:53,639 --> 00:10:59,540
work and then you do this thing is how

00:10:56,910 --> 00:11:02,220
to make my family which builds tools

00:10:59,540 --> 00:11:04,860
there are different make 55 mins three

00:11:02,220 --> 00:11:06,690
different things like libraries bundles

00:11:04,860 --> 00:11:09,060
which is like a plugin that you can

00:11:06,690 --> 00:11:11,970
build in your program it tool is

00:11:09,060 --> 00:11:15,029
basically just there a new graphical

00:11:11,970 --> 00:11:17,670
objective c program so for servers that

00:11:15,029 --> 00:11:21,990
you're doing a server that it's exactly

00:11:17,670 --> 00:11:25,440
what you should music once you've once

00:11:21,990 --> 00:11:27,120
you've written this if you sourcing that

00:11:25,440 --> 00:11:30,480
script which will actually will define

00:11:27,120 --> 00:11:32,579
is vulnerable you have all the usual

00:11:30,480 --> 00:11:35,190
commands so in this type of make it will

00:11:32,579 --> 00:11:38,850
build and we make clean make this plane

00:11:35,190 --> 00:11:43,589
you can do make install between solid it

00:11:38,850 --> 00:11:45,899
will give you quite brief camarón orbit

00:11:43,589 --> 00:11:49,110
like compiling file if you actually want

00:11:45,899 --> 00:11:51,390
to see that the GCC command-line linker

00:11:49,110 --> 00:11:53,790
work exactly just add this message

00:11:51,390 --> 00:11:55,920
before yes and you will be going to

00:11:53,790 --> 00:11:58,829
verbal smaller prints everything that

00:11:55,920 --> 00:12:00,390
it's lean you can also use it for little

00:11:58,829 --> 00:12:03,029
slow for example if you want to see

00:12:00,390 --> 00:12:04,500
where things are going actually eat then

00:12:03,029 --> 00:12:06,060
supports a lot of other stuff like

00:12:04,500 --> 00:12:08,680
guests to your older stuff usually

00:12:06,060 --> 00:12:11,410
expect

00:12:08,680 --> 00:12:13,450
but probably we just need to know how to

00:12:11,410 --> 00:12:15,580
know that when you come to me you will

00:12:13,450 --> 00:12:17,800
tell you there's a special target you

00:12:15,580 --> 00:12:20,980
can run to get help and it will be

00:12:17,800 --> 00:12:23,640
printed in the first one okay this

00:12:20,980 --> 00:12:27,790
station was planning to do a quick demo

00:12:23,640 --> 00:12:30,060
but we did with the thing is we'll just

00:12:27,790 --> 00:12:34,750
keep down anyway basically if you

00:12:30,060 --> 00:12:36,880
understand fiesler that make it will

00:12:34,750 --> 00:12:43,450
compile them so that it's not that great

00:12:36,880 --> 00:12:48,029
and then moves okay now if you actually

00:12:43,450 --> 00:12:48,029
trying to do this where do you do start

00:12:49,050 --> 00:12:53,500
first of all you need to just know a bit

00:12:51,430 --> 00:12:56,320
about objective-c about this glues the

00:12:53,500 --> 00:12:58,270
base foundation people using this this

00:12:56,320 --> 00:13:02,140
page is what a number of tutorials which

00:12:58,270 --> 00:13:03,959
actually work result with it's a good

00:13:02,140 --> 00:13:07,570
starting point like for those make files

00:13:03,959 --> 00:13:10,959
for some classes who's the base has an

00:13:07,570 --> 00:13:15,760
extensive api reference which i think is

00:13:10,959 --> 00:13:17,770
pretty complete ok obviously then that's

00:13:15,760 --> 00:13:19,930
that and when you are out so when you

00:13:17,770 --> 00:13:21,970
don't know what a metal does with a

00:13:19,930 --> 00:13:24,730
class task which cluster user can go

00:13:21,970 --> 00:13:26,830
there and just walk around you can

00:13:24,730 --> 00:13:28,000
actually i doona sleep here where you

00:13:26,830 --> 00:13:30,220
can actually also go in the app or

00:13:28,000 --> 00:13:33,100
website and look at definition get just

00:13:30,220 --> 00:13:38,890
a similar api so sometimes they may be

00:13:33,100 --> 00:13:43,050
misleading back now okay let's go like

00:13:38,890 --> 00:13:43,050
the button basic classes or mr. Bassman

00:13:49,770 --> 00:13:56,740
such as strings or arrays or

00:13:53,380 --> 00:13:58,570
dictionaries etc it's not quite an

00:13:56,740 --> 00:14:02,350
interesting design you will expect you

00:13:58,570 --> 00:14:04,080
can't do much much with those such basic

00:14:02,350 --> 00:14:05,770
stuff everyone knows that newburgh

00:14:04,080 --> 00:14:08,220
collection goose that lays the

00:14:05,770 --> 00:14:10,990
foundation to add some very interesting

00:14:08,220 --> 00:14:15,160
ideas there's in the design of these

00:14:10,990 --> 00:14:18,330
classes mostly for performance one thing

00:14:15,160 --> 00:14:22,150
it does use this class cluster design

00:14:18,330 --> 00:14:24,670
which means physically say it's a way

00:14:22,150 --> 00:14:27,280
about optimizing the classes without

00:14:24,670 --> 00:14:29,770
kind of changing the API so when you

00:14:27,280 --> 00:14:32,680
require uncreated and it's free which is

00:14:29,770 --> 00:14:35,590
a string you don't always get an object

00:14:32,680 --> 00:14:38,530
of the same box you get an object of it

00:14:35,590 --> 00:14:40,450
it's called a concrete subclass which

00:14:38,530 --> 00:14:43,530
actually is optimized for that type of

00:14:40,450 --> 00:14:46,510
string well because jealousy does

00:14:43,530 --> 00:14:48,610
dynamic dispatch when you call a method

00:14:46,510 --> 00:14:50,320
of the object then the penguin under the

00:14:48,610 --> 00:14:52,870
concrete class of the object a different

00:14:50,320 --> 00:14:55,060
implementation will be used that means

00:14:52,870 --> 00:14:57,550
if you create a new record straight or

00:14:55,060 --> 00:15:00,040
if you create it in asskiss drink use

00:14:57,550 --> 00:15:01,960
exactly the same API you don't need to

00:15:00,040 --> 00:15:04,060
know which type of string you have

00:15:01,960 --> 00:15:05,920
created the library actually will know

00:15:04,060 --> 00:15:09,070
and when you do things on the string

00:15:05,920 --> 00:15:12,150
will use the optimized implementation

00:15:09,070 --> 00:15:12,150
for that type of straight

00:15:12,360 --> 00:15:17,940
that also is done for our race for the

00:15:15,420 --> 00:15:20,670
insurers in some cases and we can either

00:15:17,940 --> 00:15:22,920
implement your own subclasses so if

00:15:20,670 --> 00:15:25,860
you've got a particular type of string

00:15:22,920 --> 00:15:29,220
of our raid 0 array do that you really

00:15:25,860 --> 00:15:31,410
have your own way to optimize it you can

00:15:29,220 --> 00:15:33,540
actually implement the sunglass and then

00:15:31,410 --> 00:15:36,149
pass it around wherever the string is

00:15:33,540 --> 00:15:39,390
required you can pass a string of your

00:15:36,149 --> 00:15:43,050
own classroom your own optimized stuff

00:15:39,390 --> 00:15:45,450
and it should work the other thing is

00:15:43,050 --> 00:15:49,050
there's a distinction between mutable

00:15:45,450 --> 00:15:50,760
objects and notable ones so you got any

00:15:49,050 --> 00:15:55,680
string and you've got any suitable

00:15:50,760 --> 00:15:57,180
screen that allows you that allows and

00:15:55,680 --> 00:15:59,190
classes themselves like when you put

00:15:57,180 --> 00:16:01,440
strings into a raise or dictionaries or

00:15:59,190 --> 00:16:03,329
routines to actually optimize quite a

00:16:01,440 --> 00:16:06,180
lot because in yours that extreme and

00:16:03,329 --> 00:16:13,110
then a swing has never changed wild

00:16:06,180 --> 00:16:15,390
analyst yeah so I can sail so the

00:16:13,110 --> 00:16:17,550
difference is a normal street like an

00:16:15,390 --> 00:16:20,490
extreme is a string and create and you

00:16:17,550 --> 00:16:23,670
can never change if you plan changing it

00:16:20,490 --> 00:16:25,470
to create an NS mutable string which and

00:16:23,670 --> 00:16:30,180
then you can add character so we've done

00:16:25,470 --> 00:16:33,060
so far so let's very quickly have a look

00:16:30,180 --> 00:16:39,180
at this base classes this is for example

00:16:33,060 --> 00:16:41,339
and string this example is the evils of

00:16:39,180 --> 00:16:44,150
supports static Springs like this one

00:16:41,339 --> 00:16:47,020
again this is

00:16:44,150 --> 00:16:48,650
basic allocated by the compiler

00:16:47,020 --> 00:16:53,900
obviously a string is the string

00:16:48,650 --> 00:16:56,360
classics of for unicode support and one

00:16:53,900 --> 00:16:59,570
thing which is really for solar stuff is

00:16:56,360 --> 00:17:02,090
this class customer invitation is askew

00:16:59,570 --> 00:17:04,280
stringers feel extremely fast even if

00:17:02,090 --> 00:17:07,460
there's fool universe support so you can

00:17:04,280 --> 00:17:09,200
anytime you want to swing it in and it

00:17:07,460 --> 00:17:13,630
will work but if you put the Nazca

00:17:09,200 --> 00:17:16,459
string it will still be really fast so

00:17:13,630 --> 00:17:18,830
unlike Java for example where strings

00:17:16,459 --> 00:17:23,650
are really slow because it's always kind

00:17:18,830 --> 00:17:26,540
of Unicode not advance the condition

00:17:23,650 --> 00:17:28,670
this is a typical array that's a

00:17:26,540 --> 00:17:31,550
properties which is a way of describing

00:17:28,670 --> 00:17:34,040
those risk reduction classes when you

00:17:31,550 --> 00:17:36,500
serialize over to serialize them anyway

00:17:34,040 --> 00:17:38,720
it's just to make sure you understand in

00:17:36,500 --> 00:17:41,750
a way is this thing while the dictionary

00:17:38,720 --> 00:17:45,350
is under the associative array or Ashley

00:17:41,750 --> 00:17:47,630
with the memory that in order to use so

00:17:45,350 --> 00:17:52,490
is it really like that one so we've got

00:17:47,630 --> 00:17:54,050
Keys equal value again you've got it's

00:17:52,490 --> 00:17:55,460
important to know if use the API the

00:17:54,050 --> 00:17:57,380
only thing you really need to know as

00:17:55,460 --> 00:17:59,630
you go there are eight o'clock sorry the

00:17:57,380 --> 00:18:01,820
NS array consoles right for that which

00:17:59,630 --> 00:18:07,570
is static stuff if you want to change

00:18:01,820 --> 00:18:10,600
them NS mutable ready and prediction is

00:18:07,570 --> 00:18:15,920
is actually the same

00:18:10,600 --> 00:18:18,140
now I don't have time to go to all of

00:18:15,920 --> 00:18:21,260
the groups that base classes one by one

00:18:18,140 --> 00:18:23,420
I just want to mention a few ones that

00:18:21,260 --> 00:18:26,450
may be good to know so if you go and

00:18:23,420 --> 00:18:28,670
look at a PR you know where to do one

00:18:26,450 --> 00:18:32,660
thing you probably want to do writing

00:18:28,670 --> 00:18:35,050
the servers ground loops like you server

00:18:32,660 --> 00:18:38,990
will start to run loop and wait for

00:18:35,050 --> 00:18:41,390
sockets to connecting or wait for some

00:18:38,990 --> 00:18:42,860
time to arrive do something or for

00:18:41,390 --> 00:18:47,060
something to happen that's a typical

00:18:42,860 --> 00:18:49,220
thing so for that you use an NS run rule

00:18:47,060 --> 00:18:52,070
you've got a full Evan face more than

00:18:49,220 --> 00:18:53,930
you can NS Panhandle allows you to do I

00:18:52,070 --> 00:18:56,960
owe which is you're integrating with a

00:18:53,930 --> 00:19:00,620
random got a new genre if you want these

00:18:56,960 --> 00:19:04,700
friends you've got this particle and his

00:19:00,620 --> 00:19:09,580
thread which you can use for locking you

00:19:04,700 --> 00:19:09,580
got and slock there's another bunch of

00:19:09,610 --> 00:19:17,870
another very nice feature of new

00:19:13,070 --> 00:19:19,940
services or notifications it's pretty

00:19:17,870 --> 00:19:23,260
easy once you get into it and its really

00:19:19,940 --> 00:19:27,080
kind of addicted it allows you to

00:19:23,260 --> 00:19:28,370
connect objects in very flexible way so

00:19:27,080 --> 00:19:30,830
you've got this thing called the

00:19:28,370 --> 00:19:34,160
Notification Center that the class Alice

00:19:30,830 --> 00:19:37,880
integration Center internet objects

00:19:34,160 --> 00:19:39,560
which can observe notifications so let's

00:19:37,880 --> 00:19:43,280
listen either rebellion after you

00:19:39,560 --> 00:19:46,070
specified is waiting for them NS file

00:19:43,280 --> 00:19:48,770
download completion thing recognition

00:19:46,070 --> 00:19:51,340
when something else would post that

00:19:48,770 --> 00:19:54,429
notification your object would be

00:19:51,340 --> 00:19:57,159
informed that that event presented

00:19:54,429 --> 00:19:59,440
you specify which many you want to be

00:19:57,159 --> 00:20:01,269
involved when other habits so you are

00:19:59,440 --> 00:20:04,029
intimidation center where the values of

00:20:01,269 --> 00:20:06,070
servers that are observing notifications

00:20:04,029 --> 00:20:07,629
then something else will post a

00:20:06,070 --> 00:20:10,299
notification to the center but in all

00:20:07,629 --> 00:20:12,789
those service will get informed that's

00:20:10,299 --> 00:20:15,460
nice and understand of design pattern

00:20:12,789 --> 00:20:17,019
because it allows you to link basically

00:20:15,460 --> 00:20:18,850
the server to the object post

00:20:17,019 --> 00:20:20,679
identification without actually

00:20:18,850 --> 00:20:22,840
themselves even knowing each other

00:20:20,679 --> 00:20:29,409
there's listen to vacation server in a

00:20:22,840 --> 00:20:31,330
bit of an excessive flexible obviously

00:20:29,409 --> 00:20:33,429
you actually want to use the cell into

00:20:31,330 --> 00:20:35,139
the issue center if you look in a cruise

00:20:33,429 --> 00:20:38,259
that called you will see it used a lot

00:20:35,139 --> 00:20:42,309
and it's very good idea to legitimately

00:20:38,259 --> 00:20:45,659
as well it's really flexible the other

00:20:42,309 --> 00:20:49,240
thing that mr. buying signals in general

00:20:45,659 --> 00:20:51,070
do a lot is using delegate now this is

00:20:49,240 --> 00:20:52,929
not really implemented in the library

00:20:51,070 --> 00:20:54,820
who sends them you don't need the

00:20:52,929 --> 00:20:56,619
library to provide some ability to

00:20:54,820 --> 00:20:59,070
create delegates but it's something

00:20:56,619 --> 00:21:01,809
that's almost everywhere in the API and

00:20:59,070 --> 00:21:04,830
inflection something you you want to do

00:21:01,809 --> 00:21:09,600
renewal npr's as well really for

00:21:04,830 --> 00:21:12,759
delegate physically there is in object

00:21:09,600 --> 00:21:15,850
oriented stuff usually subclass a class

00:21:12,759 --> 00:21:17,799
to extend it the problem is sometimes

00:21:15,850 --> 00:21:21,070
that's very end you have to create a

00:21:17,799 --> 00:21:23,019
subclass it can be quite messy very

00:21:21,070 --> 00:21:27,360
gates allows you to extend a class

00:21:23,019 --> 00:21:27,360
without subclassing so you've got your

00:21:28,269 --> 00:21:32,859
you've got your class that does

00:21:30,609 --> 00:21:35,259
something and then you advertise the

00:21:32,859 --> 00:21:36,940
United said delegate and a metal to

00:21:35,259 --> 00:21:38,469
return the delegate and then whenever

00:21:36,940 --> 00:21:40,239
you using an instance of the class you

00:21:38,469 --> 00:21:41,979
can set it the leg and then the class

00:21:40,239 --> 00:21:43,899
over is when it's processing at some

00:21:41,979 --> 00:21:46,299
point you check if there is a deadly and

00:21:43,899 --> 00:21:48,999
if so we call the method of the delegate

00:21:46,299 --> 00:21:53,549
to ask for then it's some of the

00:21:48,999 --> 00:21:58,719
processing to it it's very flexible and

00:21:53,549 --> 00:22:01,709
its really good so it's if you actually

00:21:58,719 --> 00:22:04,029
even if you are not going to the list

00:22:01,709 --> 00:22:05,979
it's a really cool thing to ever look

00:22:04,029 --> 00:22:08,229
and see our casino to separate the

00:22:05,979 --> 00:22:12,039
itouch Daleks that's just like shocked

00:22:08,229 --> 00:22:14,049
oh right sorry similar to see chart

00:22:12,039 --> 00:22:16,599
values right whether basically function

00:22:14,049 --> 00:22:18,369
pointers totally different prolly to

00:22:16,599 --> 00:22:21,690
them how to do have to come to a point

00:22:18,369 --> 00:22:24,309
about the army just like really delegate

00:22:21,690 --> 00:22:27,450
delegate really implement that or not

00:22:24,309 --> 00:22:31,119
solely the levy but whereas in c-sharp

00:22:27,450 --> 00:22:34,179
must be already there not be defined not

00:22:31,119 --> 00:22:36,940
a long time thing so it delegate is an

00:22:34,179 --> 00:22:41,379
object so you've got your object that

00:22:36,940 --> 00:22:44,440
you are another of let's say you got the

00:22:41,379 --> 00:22:46,570
know an HTML and XML parsing and you

00:22:44,440 --> 00:22:48,820
want to do sucks stop where what it

00:22:46,570 --> 00:22:50,709
finds a tag it will actually put a

00:22:48,820 --> 00:22:52,509
method in your code so you could have a

00:22:50,709 --> 00:22:54,489
delegate which is what you're supposed

00:22:52,509 --> 00:22:57,279
to implement to actually react to events

00:22:54,489 --> 00:22:59,889
and then in the XML parser you sent the

00:22:57,279 --> 00:23:01,539
delegate to whatever object you want and

00:22:59,889 --> 00:23:03,249
then when you find some time you will

00:23:01,539 --> 00:23:04,260
call a method of the delegate which does

00:23:03,249 --> 00:23:05,610
something of course

00:23:04,260 --> 00:23:08,640
they function and the typing pool

00:23:05,610 --> 00:23:11,610
demented so that's how it works let's

00:23:08,640 --> 00:23:13,470
say yeah I'm suited actions that I mean

00:23:11,610 --> 00:23:17,700
islands I think I'm to a point but not

00:23:13,470 --> 00:23:19,980
other two different also good and sure

00:23:17,700 --> 00:23:22,970
only thing similar to that is the name

00:23:19,980 --> 00:23:26,400
you char was really different things

00:23:22,970 --> 00:23:29,610
don't want a little yeah anyway I miss

00:23:26,400 --> 00:23:31,470
my bus I'm to say it is a standard

00:23:29,610 --> 00:23:34,140
design pattern I'm sure you can find it

00:23:31,470 --> 00:23:36,600
in almost all the other but here it's

00:23:34,140 --> 00:23:40,350
really new slide right listen up listen

00:23:36,600 --> 00:23:43,260
up listen man is it actually have

00:23:40,350 --> 00:23:46,260
relegated job as well just do a ton of

00:23:43,260 --> 00:23:49,620
the differences that objective c you do

00:23:46,260 --> 00:23:52,440
not invoke method that I with me of you

00:23:49,620 --> 00:23:55,380
actually a concept of the selector

00:23:52,440 --> 00:23:57,530
images its weekly there's a message and

00:23:55,380 --> 00:24:01,500
it's completely decoupled from the

00:23:57,530 --> 00:24:03,570
lookup processing becomes so so delegate

00:24:01,500 --> 00:24:05,430
or something as I billing it can be

00:24:03,570 --> 00:24:07,590
completely dynamic you don't need to

00:24:05,430 --> 00:24:08,370
know when it once for methods are you

00:24:07,590 --> 00:24:11,400
committed

00:24:08,370 --> 00:24:14,970
for example if you've got an XML you can

00:24:11,400 --> 00:24:18,120
write class which s methods like begin

00:24:14,970 --> 00:24:22,800
or quietly check you could write a

00:24:18,120 --> 00:24:26,820
method and of the XML father put the

00:24:22,800 --> 00:24:29,430
Lenape ask editor implemented this one

00:24:26,820 --> 00:24:39,840
so it's quite powerful now I'm saying

00:24:29,430 --> 00:24:42,300
that these items have this is funded

00:24:39,840 --> 00:24:45,540
good news another thing that can use

00:24:42,300 --> 00:24:47,400
debate another thing that blues the base

00:24:45,540 --> 00:24:51,210
provides is something called distributed

00:24:47,400 --> 00:24:53,220
object again that's basically its remote

00:24:51,210 --> 00:24:55,500
method invocation you have there's

00:24:53,220 --> 00:24:57,960
millions of implementation of that this

00:24:55,500 --> 00:25:00,240
is quite high level and natural and not

00:24:57,960 --> 00:25:05,790
use again some of these objective-c

00:25:00,240 --> 00:25:08,100
really dynamical stuff so basically what

00:25:05,790 --> 00:25:09,630
you do is you about your process you got

00:25:08,100 --> 00:25:12,380
an object in your process and you can

00:25:09,630 --> 00:25:15,059
expose it to the network so other

00:25:12,380 --> 00:25:17,730
processes can call methods of the object

00:25:15,059 --> 00:25:20,370
the fact is the way you use the API it

00:25:17,730 --> 00:25:22,200
looks as if that object in a reward

00:25:20,370 --> 00:25:25,610
process is actually in your own process

00:25:22,200 --> 00:25:28,620
is like an object like everything else

00:25:25,610 --> 00:25:30,510
it's very very natural to you it's great

00:25:28,620 --> 00:25:31,950
if you got the number of processes that

00:25:30,510 --> 00:25:33,660
need to talk to each other but our

00:25:31,950 --> 00:25:36,090
separate process and just sometimes

00:25:33,660 --> 00:25:37,410
invoke methods of each other etc which

00:25:36,090 --> 00:25:40,620
can be handy when you're building

00:25:37,410 --> 00:25:42,809
service it's a trunk now I don't have

00:25:40,620 --> 00:25:45,090
not had to go to that but I wrote a nice

00:25:42,809 --> 00:25:47,630
tutorial on this that

00:25:45,090 --> 00:25:53,730
my page so you can have a look at just

00:25:47,630 --> 00:25:55,950
just get an idea now I yeah I thought I

00:25:53,730 --> 00:25:57,870
would look at a few of the most useful

00:25:55,950 --> 00:26:00,600
libraries you can use it for them

00:25:57,870 --> 00:26:02,250
several about meningitis it always the

00:26:00,600 --> 00:26:08,310
first thing you can lose any C library

00:26:02,250 --> 00:26:10,650
light which is a big green at you you

00:26:08,310 --> 00:26:15,630
must have does provide a number of the

00:26:10,650 --> 00:26:17,520
server kind of libraries most of them

00:26:15,630 --> 00:26:20,490
are in the devil oops on unity

00:26:17,520 --> 00:26:23,190
subversion but I go through the most

00:26:20,490 --> 00:26:26,130
interesting ones and wisdom then you've

00:26:23,190 --> 00:26:28,440
got other parties that provide some very

00:26:26,130 --> 00:26:30,930
nice objective-c libraries for example

00:26:28,440 --> 00:26:34,140
so be on the open group project which is

00:26:30,930 --> 00:26:37,710
a full application server with winners

00:26:34,140 --> 00:26:39,720
of national a domain and obviously there

00:26:37,710 --> 00:26:42,030
are some libraries for apricot one that

00:26:39,720 --> 00:26:44,610
you can reduce their with in objective-c

00:26:42,030 --> 00:26:46,620
thereby very similar API some of them

00:26:44,610 --> 00:26:49,500
are actually officially reported to

00:26:46,620 --> 00:26:51,390
Bruce episode or something we're

00:26:49,500 --> 00:26:55,350
formatting in to parse you may find

00:26:51,390 --> 00:26:58,710
something fun for something for Apple i

00:26:55,350 --> 00:27:00,930
will just do it first thing we're going

00:26:58,710 --> 00:27:02,760
to quickly discuss is just the database

00:27:00,930 --> 00:27:04,980
libraries because if you're doing

00:27:02,760 --> 00:27:08,130
several development chances are you will

00:27:04,980 --> 00:27:10,140
need to connect to database the first

00:27:08,130 --> 00:27:12,660
thing you can do obviously is just use

00:27:10,140 --> 00:27:15,060
your own fabric see library if you have

00:27:12,660 --> 00:27:17,370
one vote so if you're connected to

00:27:15,060 --> 00:27:22,320
postgres you can just use the pasta sea

00:27:17,370 --> 00:27:25,860
pines and just use up the new step

00:27:22,320 --> 00:27:27,250
provides to database libraries which I

00:27:25,860 --> 00:27:29,170
will discuss great

00:27:27,250 --> 00:27:32,920
one is in this clip right the other one

00:27:29,170 --> 00:27:35,260
is for gdr2 finally if you use soapy for

00:27:32,920 --> 00:27:37,360
example so please got his own database

00:27:35,260 --> 00:27:39,970
layer which obviously if you're using

00:27:37,360 --> 00:27:43,690
soap is definitely the best choice if

00:27:39,970 --> 00:27:48,190
not so sure we probably just want to use

00:27:43,690 --> 00:27:51,190
one good let's have a look at this too

00:27:48,190 --> 00:27:54,100
first of all SQL client SQL client is

00:27:51,190 --> 00:27:56,170
just an ask you later so it's pretty

00:27:54,100 --> 00:28:00,520
kind of low level in the sense you write

00:27:56,170 --> 00:28:02,740
a secure coding just executed as go back

00:28:00,520 --> 00:28:04,180
and boundaries a bundle as it was

00:28:02,740 --> 00:28:06,760
mentioned before is kind of the

00:28:04,180 --> 00:28:09,420
terminology for a plug-in installed

00:28:06,760 --> 00:28:12,490
plugins from the different databases

00:28:09,420 --> 00:28:14,620
posterous but resigned other ones are

00:28:12,490 --> 00:28:16,860
currently provided in the external

00:28:14,620 --> 00:28:19,810
distribution is possible for a sequel

00:28:16,860 --> 00:28:21,970
sqlite in oracle the focus of this

00:28:19,810 --> 00:28:24,400
library is really American formats and

00:28:21,970 --> 00:28:26,470
it really does provide you with stuff

00:28:24,400 --> 00:28:28,690
there it does connection really

00:28:26,470 --> 00:28:32,380
obviously it does all the transaction

00:28:28,690 --> 00:28:34,710
support now and obviously does

00:28:32,380 --> 00:28:37,420
predication so you can do it query and

00:28:34,710 --> 00:28:39,340
say that you want it to be cash or 10

00:28:37,420 --> 00:28:41,740
minutes so if later on your quote does

00:28:39,340 --> 00:28:44,560
the same query it will just hit the

00:28:41,740 --> 00:28:49,860
internal cash the other thing you look

00:28:44,560 --> 00:28:49,860
very nice least batching updates inserts

00:28:50,610 --> 00:28:55,010
if you can doing really high performance

00:28:53,650 --> 00:28:56,810
up

00:28:55,010 --> 00:28:59,360
it becomes because it can become

00:28:56,810 --> 00:29:01,340
important to just watch a number of

00:28:59,360 --> 00:29:04,220
rights in a single transaction which is

00:29:01,340 --> 00:29:07,100
executed faster so this allows you to

00:29:04,220 --> 00:29:10,070
clean as you call goes can add things we

00:29:07,100 --> 00:29:11,570
can add statements to be executed to a

00:29:10,070 --> 00:29:14,450
transaction and when you reach the end

00:29:11,570 --> 00:29:16,400
you just execute them all and if the

00:29:14,450 --> 00:29:19,220
transaction fail you will actually if

00:29:16,400 --> 00:29:22,220
you want just retry all the reset or

00:29:19,220 --> 00:29:24,830
updates one by one to make sure that you

00:29:22,220 --> 00:29:29,990
if one of them is one you want to

00:29:24,830 --> 00:29:32,260
destroy your entire conception Julian

00:29:29,990 --> 00:29:35,480
clue as well a completely different

00:29:32,260 --> 00:29:37,820
approach is trying to go for the high

00:29:35,480 --> 00:29:40,430
understand so this basically provides

00:29:37,820 --> 00:29:42,740
you an object to relationship mapping

00:29:40,430 --> 00:29:46,400
framework you will automatically convert

00:29:42,740 --> 00:29:49,340
to database stuff into object it allows

00:29:46,400 --> 00:29:52,970
you to it does less extensive use of

00:29:49,340 --> 00:29:54,710
those KBC keep your things which so

00:29:52,970 --> 00:29:57,920
clear objective seemed to allow you to

00:29:54,710 --> 00:30:02,630
change starting to other objects or

00:29:57,920 --> 00:30:06,890
serve them react so and basically strong

00:30:02,630 --> 00:30:09,500
MVC pattern very nice stuff as long and

00:30:06,890 --> 00:30:11,900
sqlite layer at the bottom which again

00:30:09,500 --> 00:30:15,500
as well different adapters for different

00:30:11,900 --> 00:30:17,950
databases is really good for rapid

00:30:15,500 --> 00:30:17,950
development

00:30:19,049 --> 00:30:26,249
so you've got this violence classes like

00:30:23,159 --> 00:30:30,259
this hable classes demon is what we call

00:30:26,249 --> 00:30:30,259
them to modern your database and then

00:30:32,770 --> 00:30:39,040
how do they compare well if you perform

00:30:37,000 --> 00:30:41,710
a song angel you I just want to use a

00:30:39,040 --> 00:30:44,230
straight line that makes sense

00:30:41,710 --> 00:30:46,570
particularly if you basically go into

00:30:44,230 --> 00:30:48,670
right and to every single query anyway

00:30:46,570 --> 00:30:50,790
if you require that level of

00:30:48,670 --> 00:30:53,110
sophistication in terms of performance

00:30:50,790 --> 00:30:54,850
obviously you don't want anything to

00:30:53,110 --> 00:30:57,790
generate queries for you just want to

00:30:54,850 --> 00:31:00,280
write your own to them 101 and then you

00:30:57,790 --> 00:31:03,330
should just go get a straight line if

00:31:00,280 --> 00:31:05,770
you're looking for a for a 9mm framework

00:31:03,330 --> 00:31:09,160
where you can work properly with

00:31:05,770 --> 00:31:11,020
properly designed stuff etc more than

00:31:09,160 --> 00:31:13,990
objects except I'm drawn to write a

00:31:11,020 --> 00:31:18,640
square piece for you performers in

00:31:13,990 --> 00:31:21,190
general good I have to say it's a bit

00:31:18,640 --> 00:31:23,680
hard to get into because it's modeled

00:31:21,190 --> 00:31:26,950
over an old framework for next up called

00:31:23,680 --> 00:31:29,410
you I so the people from you um are you

00:31:26,950 --> 00:31:32,320
know anything about this the people who

00:31:29,410 --> 00:31:34,720
have never used it usually how to get it

00:31:32,320 --> 00:31:37,060
but once you get into it usually people

00:31:34,720 --> 00:31:40,440
just fall in love with it say it's the

00:31:37,060 --> 00:31:43,780
best thing ever

00:31:40,440 --> 00:31:46,150
especially should come how does the

00:31:43,780 --> 00:31:50,400
module your video to understand the

00:31:46,150 --> 00:31:58,780
appeal after that's a very significant

00:31:50,400 --> 00:32:01,810
question and one who the my business and

00:31:58,780 --> 00:32:06,190
I can leave before I get to be actually

00:32:01,810 --> 00:32:09,340
supposed to be better I think there are

00:32:06,190 --> 00:32:14,230
people using it in real life situation

00:32:09,340 --> 00:32:16,420
introduction but for example for sure

00:32:14,230 --> 00:32:18,550
that actors are fully tested every post

00:32:16,420 --> 00:32:21,520
which one works really 1 i'm sure that

00:32:18,550 --> 00:32:25,360
you about elements so it may not be as

00:32:21,520 --> 00:32:29,260
Polishness i wish you was not so much

00:32:25,360 --> 00:32:34,270
about the abduction based on a potential

00:32:29,260 --> 00:32:36,990
but was more about framework itself are

00:32:34,270 --> 00:32:36,990
usually what we do

00:32:37,580 --> 00:32:56,580
so be sure but it was really good and

00:32:46,740 --> 00:33:01,320
kind of item that I guess had the same

00:32:56,580 --> 00:33:04,650
faculty self or which is exactly the

00:33:01,320 --> 00:33:08,100
same if you have any same classes but I

00:33:04,650 --> 00:33:16,290
can't tell you how much is I didn't test

00:33:08,100 --> 00:33:19,010
it ok I just kill yourself sure it will

00:33:16,290 --> 00:33:25,250
be here I think they are back for

00:33:19,010 --> 00:33:28,170
advanced excuse me ok ok is it a

00:33:25,250 --> 00:33:35,250
requirement of GDL do that there is a

00:33:28,170 --> 00:33:39,900
database behind sorry or is it yeah they

00:33:35,250 --> 00:33:42,090
do just the not a persistently no no no

00:33:39,900 --> 00:33:45,210
I sorry they're not a bit like so you

00:33:42,090 --> 00:33:46,830
got my prosperous if you going and then

00:33:45,210 --> 00:33:51,330
you in your application to access

00:33:46,830 --> 00:33:53,130
posters fuse Judea to so you okay so the

00:33:51,330 --> 00:33:54,660
point is you are you have a screen

00:33:53,130 --> 00:33:57,780
database in the first place and we want

00:33:54,660 --> 00:34:02,330
to use it yeah but you could have you

00:33:57,780 --> 00:34:05,790
clever but because i wanted to ask a

00:34:02,330 --> 00:34:07,950
kind of tricky question you say the once

00:34:05,790 --> 00:34:12,150
you use the gdf do you never want to use

00:34:07,950 --> 00:34:14,510
it that's what about Jekyll object

00:34:12,150 --> 00:34:20,960
oriented database is like gemstone no

00:34:14,510 --> 00:34:25,339
imagery I don't Hal good question

00:34:20,960 --> 00:34:30,179
what about the Recon he'd better baby

00:34:25,339 --> 00:34:34,109
like because Nicola said once you use

00:34:30,179 --> 00:34:36,540
the gdl to live until in tennis but if

00:34:34,109 --> 00:34:39,240
you put just started pounding sure

00:34:36,540 --> 00:34:43,799
conviction and justice goes dead to the

00:34:39,240 --> 00:34:45,210
bathing doing anything going to be an

00:34:43,799 --> 00:34:50,099
object database we must have an

00:34:45,210 --> 00:34:54,210
alternative model yes the problem 12,000

00:34:50,099 --> 00:34:56,040
quite on this job is found a metal

00:34:54,210 --> 00:34:58,260
object relation dejo is that one you

00:34:56,040 --> 00:35:02,130
have lot of trouble like the paternity

00:34:58,260 --> 00:35:03,660
today for example then your your object

00:35:02,130 --> 00:35:05,940
graph that you want you to save the

00:35:03,660 --> 00:35:07,710
database is obviously not the same like

00:35:05,940 --> 00:35:11,790
new context of a particular database

00:35:07,710 --> 00:35:13,799
that actually i'm actually using GDL to

00:35:11,790 --> 00:35:16,980
probably about using you have people

00:35:13,799 --> 00:35:19,680
white object database but easily because

00:35:16,980 --> 00:35:22,230
the high level stuff which for example

00:35:19,680 --> 00:35:24,960
i'm so use interface to the data main

00:35:22,230 --> 00:35:28,559
that's completely separate from the

00:35:24,960 --> 00:35:32,190
storage very much a positive charge

00:35:28,559 --> 00:35:34,470
which does automatic if you would want

00:35:32,190 --> 00:35:37,849
to you purchase to the icy objects and

00:35:34,470 --> 00:35:37,849
white them to the bus

00:35:38,460 --> 00:35:43,260
in this gratified warm and something

00:35:41,190 --> 00:35:46,920
else Arthur Ferguson is the weather

00:35:43,260 --> 00:35:48,780
there was no Mattie no other you don't

00:35:46,920 --> 00:35:51,930
need to do the mapping using a chair

00:35:48,780 --> 00:35:54,089
towards actually compliance one partners

00:35:51,930 --> 00:35:56,250
of tracking the state of the object

00:35:54,089 --> 00:35:59,099
which you could really was in the object

00:35:56,250 --> 00:36:01,830
database back-end with some kind of

00:35:59,099 --> 00:36:04,109
transaction in memory transaction so

00:36:01,830 --> 00:36:07,650
trace all the changes to the objects and

00:36:04,109 --> 00:36:10,830
when it saves those changes it would

00:36:07,650 --> 00:36:13,440
either right to objects as a zero I

00:36:10,830 --> 00:36:17,580
spoke to are you could that's where the

00:36:13,440 --> 00:36:19,050
many pics enlivens your sm would signal

00:36:17,580 --> 00:36:21,300
it amazing yeah but that's really

00:36:19,050 --> 00:36:26,460
independent that are those are two

00:36:21,300 --> 00:36:29,700
different paths yeah there was also one

00:36:26,460 --> 00:36:32,730
time I've get for that up for us you

00:36:29,700 --> 00:36:34,800
could give up differently it's all yet

00:36:32,730 --> 00:36:38,869
hear what you're talking or don't mean

00:36:34,800 --> 00:36:38,869
the database that such you honestly

00:36:42,109 --> 00:36:50,660
okay okay another library which that

00:36:48,859 --> 00:36:53,569
reviews will increase that life this

00:36:50,660 --> 00:36:56,420
slide was web server library which

00:36:53,569 --> 00:36:58,999
allows you to promote victory basically

00:36:56,420 --> 00:37:01,279
they be servers and this is not really

00:36:58,999 --> 00:37:04,039
for building web pages it's more for you

00:37:01,279 --> 00:37:07,190
know API transactional named guys were

00:37:04,039 --> 00:37:11,349
sons calling you a PID there's something

00:37:07,190 --> 00:37:16,160
wrong connect your database or something

00:37:11,349 --> 00:37:18,650
it provides a kind of food web server

00:37:16,160 --> 00:37:20,809
usually music will hutchins font it's

00:37:18,650 --> 00:37:23,569
quite handy if you actually need to do

00:37:20,809 --> 00:37:26,210
them and please you need to interface

00:37:23,569 --> 00:37:29,869
with java stuff they're saved gonna step

00:37:26,210 --> 00:37:32,359
to Java interface which allows you to

00:37:29,869 --> 00:37:35,599
use objective c e object classes etc

00:37:32,359 --> 00:37:39,369
from Java which I versa java stuff from

00:37:35,599 --> 00:37:42,769
objective-c it's very it doesn't work

00:37:39,369 --> 00:37:46,759
there's the number of home stone can be

00:37:42,769 --> 00:37:48,200
slow so you don't want to over use it if

00:37:46,759 --> 00:37:51,309
you have a problem it's hard to the back

00:37:48,200 --> 00:37:54,259
because of the Cross language cause

00:37:51,309 --> 00:37:56,420
support for cross-platform words from

00:37:54,259 --> 00:37:59,329
subclassing is actually a bit limited

00:37:56,420 --> 00:38:01,540
and it's not easy to port weather

00:37:59,329 --> 00:38:04,700
problems

00:38:01,540 --> 00:38:08,570
one last thing I wanted to mention was

00:38:04,700 --> 00:38:11,570
so P which is a complete physical web

00:38:08,570 --> 00:38:13,910
application server environment he's got

00:38:11,570 --> 00:38:16,370
an extensive set of frameworks to do a

00:38:13,910 --> 00:38:20,660
lot of stuff which you usually want to

00:38:16,370 --> 00:38:23,030
do with them it's kind of party lately

00:38:20,660 --> 00:38:27,200
therefore webobjects even if it's got

00:38:23,030 --> 00:38:30,200
his own zone concepts and extensions so

00:38:27,200 --> 00:38:33,730
it's not perfectly happy compatible it's

00:38:30,200 --> 00:38:36,890
kind of clearly dividing obviously

00:38:33,730 --> 00:38:41,600
people you tryna zone area oh it's a guy

00:38:36,890 --> 00:38:45,860
for trying time it does it does do a lot

00:38:41,600 --> 00:38:49,220
of stuff to do XML processing xmlrpc

00:38:45,860 --> 00:38:53,000
obviously wrong side etc it does mine

00:38:49,220 --> 00:38:56,810
I'm architect I'm there's a lot as well

00:38:53,000 --> 00:38:58,640
as own database stuff and it does I can

00:38:56,810 --> 00:39:02,050
request if you interested that's where

00:38:58,640 --> 00:39:02,050
you're right where you would mind

00:39:03,490 --> 00:39:06,490
fresh

00:39:07,880 --> 00:39:14,809
yeah you forgot to mention twisted wet

00:39:10,480 --> 00:39:18,200
yes a library which is models are

00:39:14,809 --> 00:39:22,430
compatible to at the Deaf objects or

00:39:18,200 --> 00:39:28,279
next door objectors it was this time 4.5

00:39:22,430 --> 00:39:30,230
yeah I guess and it uses an contrast to

00:39:28,279 --> 00:39:37,730
the objects today which is now

00:39:30,230 --> 00:39:40,819
java-based it's the objective c and the

00:39:37,730 --> 00:39:50,150
API is a little bit differently prefixes

00:39:40,819 --> 00:39:52,819
are not wo but lemon GSW what happens in

00:39:50,150 --> 00:39:54,799
Jessica fixes you can bigger you can

00:39:52,819 --> 00:39:57,859
configure that may be configured I are

00:39:54,799 --> 00:39:59,960
these are there for you and we denote it

00:39:57,859 --> 00:40:02,569
if it's supposed to be one percent

00:39:59,960 --> 00:40:05,480
comfortable things are objects empty a

00:40:02,569 --> 00:40:07,970
charge of the movie and they just look

00:40:05,480 --> 00:40:10,670
at the class names and I thought much

00:40:07,970 --> 00:40:13,160
that they're so you don't know what will

00:40:10,670 --> 00:40:16,250
you darling but the pay way so if you

00:40:13,160 --> 00:40:18,559
need to let objects which is this what

00:40:16,250 --> 00:40:21,289
the weather's been walk by except

00:40:18,559 --> 00:40:23,089
originally now by a phone so p is a very

00:40:21,289 --> 00:40:26,660
good one but there's another project

00:40:23,089 --> 00:40:28,770
which is concept wet your which is it's

00:40:26,660 --> 00:40:31,650
more compatible

00:40:28,770 --> 00:40:33,990
less advanced though this message out

00:40:31,650 --> 00:40:37,080
that are highly doubt that what do you

00:40:33,990 --> 00:40:39,000
mean yes I think they are not stating

00:40:37,080 --> 00:40:40,860
the 10 meter central chemical medical

00:40:39,000 --> 00:40:44,640
but i think the walker invisibility is

00:40:40,860 --> 00:40:46,740
do much better okay so we have four

00:40:44,640 --> 00:40:48,800
legacy applications with Sophie and they

00:40:46,740 --> 00:40:48,800
were

00:40:51,540 --> 00:40:54,950
any more questions

00:41:01,010 --> 00:41:07,880
which is thank you very much one more

00:41:04,610 --> 00:41:11,170
condition that's the website submitting

00:41:07,880 --> 00:41:11,170

YouTube URL: https://www.youtube.com/watch?v=jhnZMpGiL6s


