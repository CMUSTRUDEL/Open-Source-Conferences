Title: FOSDEM 2009 openSUSE Apport
Publication date: 2011-12-22
Playlist: FOSDEM 2009
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:03,410 --> 00:00:11,010
okay my name is Jon Blunk I'm currently

00:00:07,440 --> 00:00:13,799
working as a technology architect for

00:00:11,010 --> 00:00:18,029
every maintenance security department in

00:00:13,799 --> 00:00:24,029
Nevada so I'm responsible for the

00:00:18,029 --> 00:00:25,500
opensuse and enterprise product and I

00:00:24,029 --> 00:00:32,640
will talk about application crash

00:00:25,500 --> 00:00:35,100
reporting so actually what is this all

00:00:32,640 --> 00:00:41,309
about this is it's all about bugs and

00:00:35,100 --> 00:00:44,969
finding bugs and that is actually a copy

00:00:41,309 --> 00:00:47,879
of the lock book where yeah it's this

00:00:44,969 --> 00:00:52,940
story that the the first part was found

00:00:47,879 --> 00:00:56,579
and it was actually a moth inside of

00:00:52,940 --> 00:00:59,039
capturing a relay or something from one

00:00:56,579 --> 00:01:03,960
of the very old computers so in during

00:00:59,039 --> 00:01:05,970
that time people wrote down lockbox for

00:01:03,960 --> 00:01:08,850
their computer and what they were doing

00:01:05,970 --> 00:01:13,680
and what problems they were finding so

00:01:08,850 --> 00:01:16,200
nowadays at least I don't know anybody

00:01:13,680 --> 00:01:20,280
who is writing a log book for its own

00:01:16,200 --> 00:01:23,189
computer and most people don't even with

00:01:20,280 --> 00:01:26,689
their their message of our log messages

00:01:23,189 --> 00:01:30,780
stuff or so or at least not not usually

00:01:26,689 --> 00:01:33,150
and most of the application crash report

00:01:30,780 --> 00:01:37,140
most of the application crashes are not

00:01:33,150 --> 00:01:40,650
locked 22 to the somewhere in the system

00:01:37,140 --> 00:01:45,600
so most of the time we don't even write

00:01:40,650 --> 00:01:47,610
out core files so the the user usually

00:01:45,600 --> 00:01:49,320
don't don't realize the sets and that

00:01:47,610 --> 00:01:56,729
application has a problem and it's

00:01:49,320 --> 00:01:59,790
sexual thing or whatever so where does

00:01:56,729 --> 00:02:02,990
the other half the others like Microsoft

00:01:59,790 --> 00:02:08,299
they have windows error reporting

00:02:02,990 --> 00:02:08,299
service and this is a

00:02:08,789 --> 00:02:13,890
I think its existing since Windows XP so

00:02:12,120 --> 00:02:17,400
what's the first the first release that

00:02:13,890 --> 00:02:26,299
I included that it's also available for

00:02:17,400 --> 00:02:30,689
ice vs so for you can register in the

00:02:26,299 --> 00:02:33,390
wind cual project and the only thing

00:02:30,689 --> 00:02:37,790
that you need is to you have a unique

00:02:33,390 --> 00:02:41,700
have a valid very verizon certificate

00:02:37,790 --> 00:02:45,230
but on the other side so that the

00:02:41,700 --> 00:02:51,480
program itself is actually if we even

00:02:45,230 --> 00:02:55,310
for for on windows for ice vs so and the

00:02:51,480 --> 00:03:02,069
windows error reporting is collecting

00:02:55,310 --> 00:03:05,370
certain hopes certain information about

00:03:02,069 --> 00:03:08,700
about the application itself as far as i

00:03:05,370 --> 00:03:15,290
know it saves the kratom the echo of

00:03:08,700 --> 00:03:15,290
file and it's uploaded to a server so

00:03:16,010 --> 00:03:25,169
Mac has it as well they they have also a

00:03:20,340 --> 00:03:27,180
problem reporter as far as i could not

00:03:25,169 --> 00:03:32,639
really find out if this is also

00:03:27,180 --> 00:03:35,579
available for for other companies or

00:03:32,639 --> 00:03:40,079
four eyes vs on neck I'm pretty I'm not

00:03:35,579 --> 00:03:44,069
sure even the iphone has it so if you if

00:03:40,079 --> 00:03:47,459
you put your iPhone and connected with

00:03:44,069 --> 00:03:49,139
itunes automatically application the

00:03:47,459 --> 00:03:52,530
crash reports are downloaded from the

00:03:49,139 --> 00:03:56,370
iphone and sent to Apple to analyze the

00:03:52,530 --> 00:03:58,739
box and yeah they do it also system

00:03:56,370 --> 00:04:03,209
right so you can you can also see the

00:03:58,739 --> 00:04:06,780
colonel problems in the in the end the

00:04:03,209 --> 00:04:10,889
crash reports there and even son has it

00:04:06,780 --> 00:04:16,440
so actually I didn't find a really good

00:04:10,889 --> 00:04:19,130
picture of Solaris brand so I choose the

00:04:16,440 --> 00:04:19,130
solarium

00:04:19,470 --> 00:04:25,680
and they are cheating because they use

00:04:22,890 --> 00:04:28,370
dtrace for it we could use system tape

00:04:25,680 --> 00:04:35,190
as well for generating this this report

00:04:28,370 --> 00:04:40,560
but actually we don't do so what does

00:04:35,190 --> 00:04:44,750
linux have thanks to a boon to we have a

00:04:40,560 --> 00:04:49,230
pod it's an application crash reporting

00:04:44,750 --> 00:04:51,510
system which is actually kernel-based or

00:04:49,230 --> 00:04:55,050
Colonel supported while running in user

00:04:51,510 --> 00:04:57,300
space and this app heart was ported to

00:04:55,050 --> 00:05:04,080
fedora so it's also available on fedora

00:04:57,300 --> 00:05:06,810
and thanks to Google who they they have

00:05:04,080 --> 00:05:08,550
this google summer of code project and a

00:05:06,810 --> 00:05:13,910
student was interested in importing

00:05:08,550 --> 00:05:16,890
apart to azusa as well so now we have

00:05:13,910 --> 00:05:23,340
application fresh reporting since 11 to

00:05:16,890 --> 00:05:28,800
1 as well so what is up or doing upward

00:05:23,340 --> 00:05:32,310
is basically a collection of writing

00:05:28,800 --> 00:05:35,280
code which is called automatically by

00:05:32,310 --> 00:05:38,729
the kernel during the application crash

00:05:35,280 --> 00:05:43,140
so instead of writing out the code file

00:05:38,729 --> 00:05:44,820
to disk it's calling this application

00:05:43,140 --> 00:05:47,870
and the application is then collecting

00:05:44,820 --> 00:05:51,120
information about the application crash

00:05:47,870 --> 00:05:53,880
it kept it gathers potential user

00:05:51,120 --> 00:05:56,330
information about the process

00:05:53,880 --> 00:05:59,669
environment and the operating system so

00:05:56,330 --> 00:06:02,550
since it's yeah I will go into more

00:05:59,669 --> 00:06:06,530
detail later since it's it's a it's a

00:06:02,550 --> 00:06:11,250
two-step process the first step is very

00:06:06,530 --> 00:06:13,919
similar to just get the dump get proc

00:06:11,250 --> 00:06:17,790
maps get all your your information that

00:06:13,919 --> 00:06:19,910
you cannot gather later but all the

00:06:17,790 --> 00:06:21,990
information about the process

00:06:19,910 --> 00:06:26,970
environments get it now and write it a

00:06:21,990 --> 00:06:30,750
write it out to disk and when the when

00:06:26,970 --> 00:06:33,860
the user is notified then

00:06:30,750 --> 00:06:38,310
you can collect additional information

00:06:33,860 --> 00:06:48,570
so yeah it's a it runs on multiple steps

00:06:38,310 --> 00:06:52,350
so it's notifies the user by by a small

00:06:48,570 --> 00:06:56,340
applet there is an applet available for

00:06:52,350 --> 00:07:01,200
Cutie for and there is an applet

00:06:56,340 --> 00:07:03,990
available for gtk or written in GT cape

00:07:01,200 --> 00:07:05,370
both written and hiding as well so

00:07:03,990 --> 00:07:06,870
actually what the what the applets are

00:07:05,370 --> 00:07:10,680
doing it's very simple there they are

00:07:06,870 --> 00:07:13,620
just watching operating and notify on

00:07:10,680 --> 00:07:16,580
the directory where the crash reports

00:07:13,620 --> 00:07:20,190
are stored from from the application and

00:07:16,580 --> 00:07:23,270
then then you get a pop-up and and then

00:07:20,190 --> 00:07:27,480
you can do the addition stuff so and

00:07:23,270 --> 00:07:30,120
optionally the applets support you to

00:07:27,480 --> 00:07:34,669
send the crash report to the developer

00:07:30,120 --> 00:07:40,650
so at the moment we only have one

00:07:34,669 --> 00:07:43,830
central server but it's it's a I will go

00:07:40,650 --> 00:07:46,229
into more detail later it is possible to

00:07:43,830 --> 00:07:49,530
support multiple servers so to have one

00:07:46,229 --> 00:07:54,000
open zuzu server and one firefox server

00:07:49,530 --> 00:07:57,270
and one server for you know before gk or

00:07:54,000 --> 00:08:01,380
something and and to upload the reports

00:07:57,270 --> 00:08:03,660
into different and devices so how does

00:08:01,380 --> 00:08:06,960
it look like the the this is the gtk

00:08:03,660 --> 00:08:09,270
applet because i'm one of the very few

00:08:06,960 --> 00:08:12,090
persons actually inside to the using

00:08:09,270 --> 00:08:16,770
genome and most of the people use KDE

00:08:12,090 --> 00:08:20,880
but yeah i use that one so yeah here you

00:08:16,770 --> 00:08:28,410
can see it's it's a applications only

00:08:20,880 --> 00:08:30,479
purpose is to seg fault so then you get

00:08:28,410 --> 00:08:36,900
this pop-up this notification you can

00:08:30,479 --> 00:08:41,370
press report the problem and then you

00:08:36,900 --> 00:08:42,649
can send it or you can you can have a

00:08:41,370 --> 00:08:46,410
look in

00:08:42,649 --> 00:08:59,880
and the contents of the report so the

00:08:46,410 --> 00:09:05,579
report itself looks like like this it's

00:08:59,880 --> 00:09:08,699
just a plain text file here you can see

00:09:05,579 --> 00:09:12,540
it's it's just the output of proc maps

00:09:08,699 --> 00:09:14,519
so this was a compass crash and it's the

00:09:12,540 --> 00:09:19,230
reports are structured like that so it's

00:09:14,519 --> 00:09:21,480
a key-value thing list this command line

00:09:19,230 --> 00:09:22,560
this will release so this is all

00:09:21,480 --> 00:09:26,339
information that you can gather

00:09:22,560 --> 00:09:29,130
afterwards the proc environment so which

00:09:26,339 --> 00:09:37,699
path worse was a active at that moment

00:09:29,130 --> 00:09:43,560
and and this is the core file and here's

00:09:37,699 --> 00:09:45,569
even more information build IDs and load

00:09:43,560 --> 00:09:48,149
addresses of the shadow objects that

00:09:45,569 --> 00:09:51,000
were loaded during that time package

00:09:48,149 --> 00:09:53,100
dependencies which files were modified

00:09:51,000 --> 00:09:56,819
in the package dependency so that is

00:09:53,100 --> 00:09:59,930
quite interesting sometimes to see there

00:09:56,819 --> 00:10:03,560
because you can rule out certain stuff

00:09:59,930 --> 00:10:11,100
just by looking at this that list if

00:10:03,560 --> 00:10:15,930
something was modified so yeah very long

00:10:11,100 --> 00:10:20,519
list and then it dumps out information

00:10:15,930 --> 00:10:24,630
from gdb the stack trace stack trace top

00:10:20,519 --> 00:10:28,110
which is actually the five top most

00:10:24,630 --> 00:10:30,680
frames and thread is stacked rice oh

00:10:28,110 --> 00:10:30,680
yeah

00:10:33,660 --> 00:10:46,860
so so what happens with the reports as I

00:10:42,750 --> 00:10:49,710
said we have a crash database server at

00:10:46,860 --> 00:10:55,010
the moment we have only support for

00:10:49,710 --> 00:10:58,290
opensuse so no enterprise products and

00:10:55,010 --> 00:11:01,830
such things only for opensuse only

00:10:58,290 --> 00:11:04,980
starting with 11 or 12 two different

00:11:01,830 --> 00:11:07,290
other reasons you can find the crash

00:11:04,980 --> 00:11:13,470
database server at crash DBA open this

00:11:07,290 --> 00:11:15,420
door or yeah as I said application

00:11:13,470 --> 00:11:18,030
specific servers are also possible I

00:11:15,420 --> 00:11:22,320
have the local version of the database I

00:11:18,030 --> 00:11:25,650
have it here this is how it looks like

00:11:22,320 --> 00:11:29,580
so it's I try to integrate it into until

00:11:25,650 --> 00:11:36,050
the common opensuse website look and

00:11:29,580 --> 00:11:39,480
feel you can you can search for for

00:11:36,050 --> 00:11:41,760
specific reports so all we virtually

00:11:39,480 --> 00:11:44,310
have not won there's actually because I

00:11:41,760 --> 00:11:48,510
don't don't use factory yet otherwise

00:11:44,310 --> 00:11:50,550
you would see a few things here and then

00:11:48,510 --> 00:11:58,170
you can see that was the the report that

00:11:50,550 --> 00:12:00,600
we looked at just just now at on disk

00:11:58,170 --> 00:12:03,780
here and this is how it looks like when

00:12:00,600 --> 00:12:06,870
it's uploaded it gets you a uuid you can

00:12:03,780 --> 00:12:10,440
see when the crash happened and one when

00:12:06,870 --> 00:12:14,790
it was uploaded and here you can see

00:12:10,440 --> 00:12:21,000
that the core dump itself is removed so

00:12:14,790 --> 00:12:25,290
oh no here it is oh so that's a bug but

00:12:21,000 --> 00:12:29,000
usually it should be removed so I think

00:12:25,290 --> 00:12:35,610
the others the others don't have a

00:12:29,000 --> 00:12:38,340
quorum yeah this is how it looks on free

00:12:35,610 --> 00:12:41,510
text search is also available so you can

00:12:38,340 --> 00:12:46,010
search for specific words and then in

00:12:41,510 --> 00:12:46,010
and the application crashes

00:12:46,180 --> 00:12:53,210
so what is missing or what I'm working

00:12:51,140 --> 00:12:56,990
on at the moment is the further

00:12:53,210 --> 00:13:02,750
processing of crash reports so it would

00:12:56,990 --> 00:13:05,480
be ideal if if one person sends the

00:13:02,750 --> 00:13:07,760
crash reports that you can automatically

00:13:05,480 --> 00:13:11,270
detect duplicates of the crash report

00:13:07,760 --> 00:13:15,140
and connect them together so actually I

00:13:11,270 --> 00:13:17,780
want to gather all the reports so I

00:13:15,140 --> 00:13:20,270
don't want to prevent the uploading but

00:13:17,780 --> 00:13:21,560
on the database it's easier if you look

00:13:20,270 --> 00:13:27,980
at the reports if you have the

00:13:21,560 --> 00:13:29,780
duplicates as well so what the movement

00:13:27,980 --> 00:13:33,590
there's also searching for available

00:13:29,780 --> 00:13:36,620
fixes or work once so to add a feedback

00:13:33,590 --> 00:13:39,110
channel to say oh yeah your problem is

00:13:36,620 --> 00:13:42,740
fixed with a maintenance update blah

00:13:39,110 --> 00:13:45,920
blah blah something like that and

00:13:42,740 --> 00:13:48,530
searching for regressions so this would

00:13:45,920 --> 00:13:51,310
also be interesting to have a regression

00:13:48,530 --> 00:13:58,880
detection so if if the back-trace

00:13:51,310 --> 00:14:01,340
actually is found and the database

00:13:58,880 --> 00:14:03,680
server things that the the back is

00:14:01,340 --> 00:14:06,950
already fixed in a specific version and

00:14:03,680 --> 00:14:09,170
then the the buck shows up in the later

00:14:06,950 --> 00:14:11,740
maintenance update again so that you can

00:14:09,170 --> 00:14:11,740
also meet in here

00:14:17,290 --> 00:14:23,000
happens in my if my application crashes

00:14:19,880 --> 00:14:25,790
I click on send a report but I do not

00:14:23,000 --> 00:14:27,920
have internet access at the moment is it

00:14:25,790 --> 00:14:32,389
distort or resistant to Ostia it's it

00:14:27,920 --> 00:14:35,269
started saved under our crash and then

00:14:32,389 --> 00:14:39,050
you can send it later at the moment

00:14:35,269 --> 00:14:40,579
there's not it's not you have to run it

00:14:39,050 --> 00:14:43,160
from the command line then and give it

00:14:40,579 --> 00:14:45,139
the full path so awkward command-line

00:14:43,160 --> 00:14:50,839
interface minus C and then the the

00:14:45,139 --> 00:14:53,569
report file yeah would it be possible

00:14:50,839 --> 00:14:55,430
also not to send the code but only the

00:14:53,569 --> 00:14:57,259
back-trace is because some people may

00:14:55,430 --> 00:15:00,949
not want to have the memory of the

00:14:57,259 --> 00:15:03,470
process center so the I don't know why

00:15:00,949 --> 00:15:06,829
the this happened here are probably

00:15:03,470 --> 00:15:11,329
because I uploaded the crash report with

00:15:06,829 --> 00:15:15,920
cool but the the normal applet is

00:15:11,329 --> 00:15:21,620
removing the record amp and is doing I

00:15:15,920 --> 00:15:23,860
have a page on that as well oh and it's

00:15:21,620 --> 00:15:23,860
a

00:15:31,730 --> 00:15:39,920
it's also analyzing the reports so and

00:15:36,380 --> 00:15:43,770
it's not only the caufe that that might

00:15:39,920 --> 00:15:48,780
contain sensitive information but it's

00:15:43,770 --> 00:15:50,820
also user names and such things so the

00:15:48,780 --> 00:15:55,170
the account name and the key cause

00:15:50,820 --> 00:15:59,760
fields are replaced by username just

00:15:55,170 --> 00:16:02,640
that's just the string username so n is

00:15:59,760 --> 00:16:05,730
a the the Kuhn working directory is also

00:16:02,640 --> 00:16:09,330
we move from / proc because this is

00:16:05,730 --> 00:16:11,250
information which is not yeah most of

00:16:09,330 --> 00:16:14,940
the people don't want to send but

00:16:11,250 --> 00:16:18,000
nevertheless you the user always have

00:16:14,940 --> 00:16:19,980
the possibility to review the report

00:16:18,000 --> 00:16:22,440
before it's getting sent and he should

00:16:19,980 --> 00:16:24,300
really do that because I think in

00:16:22,440 --> 00:16:29,760
certain situations you just don't want

00:16:24,300 --> 00:16:32,130
to automatically send the report yeah hi

00:16:29,760 --> 00:16:34,140
um so you generate the back fest in the

00:16:32,130 --> 00:16:37,160
client side you have full debug if debug

00:16:34,140 --> 00:16:41,580
info available when doing that and nope

00:16:37,160 --> 00:16:46,220
but this is one reason why we only have

00:16:41,580 --> 00:16:49,640
it since you haven't got one because I I

00:16:46,220 --> 00:16:53,960
enabled built IDs for opensuse as well

00:16:49,640 --> 00:16:57,140
and that was not enough for generating

00:16:53,960 --> 00:16:59,880
back traces you need to have unwind info

00:16:57,140 --> 00:17:02,790
so we built everything with a

00:16:59,880 --> 00:17:06,870
synchronous online tables and we don't

00:17:02,790 --> 00:17:11,300
strip down wine tables so actually for

00:17:06,870 --> 00:17:14,910
C+ or all applications that supported

00:17:11,300 --> 00:17:18,240
exceptions or the were the programming

00:17:14,910 --> 00:17:21,630
language supported exceptions it was

00:17:18,240 --> 00:17:23,850
necessary to build that as well for all

00:17:21,630 --> 00:17:28,920
applications that don't support

00:17:23,850 --> 00:17:31,700
exceptions the azan Cronus unwind tables

00:17:28,920 --> 00:17:36,680
are usually quite small so it's not

00:17:31,700 --> 00:17:39,690
bloating up your application binary and

00:17:36,680 --> 00:17:42,160
so it was I think it was roughly like

00:17:39,690 --> 00:17:45,070
five percent or so

00:17:42,160 --> 00:17:49,810
the distribution was getting bigger but

00:17:45,070 --> 00:17:52,840
that was only a problem for for the live

00:17:49,810 --> 00:17:59,310
CDs and not for the DVD so there was

00:17:52,840 --> 00:18:01,810
enough space available and what we do is

00:17:59,310 --> 00:18:08,220
you could retrace the report as well

00:18:01,810 --> 00:18:12,430
without the call so I'm actually I'm

00:18:08,220 --> 00:18:14,590
pausing the report and I scan can

00:18:12,430 --> 00:18:17,080
extract the addresses from the stack

00:18:14,590 --> 00:18:19,870
trace and I can look up the correct

00:18:17,080 --> 00:18:23,620
symbol information from the debug info

00:18:19,870 --> 00:18:28,600
files this application exists and so

00:18:23,620 --> 00:18:32,770
written in Python as well as as as a

00:18:28,600 --> 00:18:36,280
port itself and the the problem is we

00:18:32,770 --> 00:18:40,240
had to get the debacle info data about

00:18:36,280 --> 00:18:42,610
the built IDs out into a database and so

00:18:40,240 --> 00:18:46,540
that is missing actually at the moment

00:18:42,610 --> 00:18:48,460
and the uploading of the we traced back

00:18:46,540 --> 00:18:52,360
traced to the server which is also not

00:18:48,460 --> 00:18:54,880
implemented yet this is due to the

00:18:52,360 --> 00:19:03,970
reason because that we created our own

00:18:54,880 --> 00:19:06,910
server so so I have a second question if

00:19:03,970 --> 00:19:08,770
you will well you you are you I you've

00:19:06,910 --> 00:19:10,180
created a separate crash TV door opens

00:19:08,770 --> 00:19:11,770
use dog rather than using the bug

00:19:10,180 --> 00:19:14,350
tracker yeah you're going to end up with

00:19:11,770 --> 00:19:19,840
a parallel bug tracker where people have

00:19:14,350 --> 00:19:24,220
to check two places other thing is due

00:19:19,840 --> 00:19:29,200
to internal political clump and

00:19:24,220 --> 00:19:31,900
complexity the idea of extending

00:19:29,200 --> 00:19:34,780
bugzilla and that way that it supports

00:19:31,900 --> 00:19:40,210
uploading of crash reports was

00:19:34,780 --> 00:19:43,240
immediately adopt because it is close to

00:19:40,210 --> 00:19:45,130
impossible to get certain extensions and

00:19:43,240 --> 00:19:47,740
angels like you could use crash DB as

00:19:45,130 --> 00:19:50,200
the upload target but have that file

00:19:47,740 --> 00:19:52,690
books for you with that people are yeah

00:19:50,200 --> 00:19:56,000
but still that that would be something

00:19:52,690 --> 00:19:58,570
like back communicating or scripting

00:19:56,000 --> 00:20:03,170
dillard's it's yeah it would be possible

00:19:58,570 --> 00:20:06,380
in in it is also planned to add support

00:20:03,170 --> 00:20:08,000
for linking back to the Krusty be in the

00:20:06,380 --> 00:20:10,430
bugzilla because that would be much

00:20:08,000 --> 00:20:13,520
easier that you have your but your your

00:20:10,430 --> 00:20:15,500
report in bugzilla saying there is a

00:20:13,520 --> 00:20:18,530
crash report for this buck existing in

00:20:15,500 --> 00:20:21,410
the crash database so but but that way I

00:20:18,530 --> 00:20:23,120
think it was it was much easier to come

00:20:21,410 --> 00:20:25,850
up with with the basic implementation

00:20:23,120 --> 00:20:29,150
then then to start working with the

00:20:25,850 --> 00:20:32,900
bugzilla stuff so yeah but it is

00:20:29,150 --> 00:20:34,910
actually planned and also what is a what

00:20:32,900 --> 00:20:37,250
else's plans and notification so we have

00:20:34,910 --> 00:20:41,270
a notification service for the build

00:20:37,250 --> 00:20:44,930
service it's called hammers and to

00:20:41,270 --> 00:20:47,270
connect this this uploading or the crash

00:20:44,930 --> 00:20:50,210
database with the notification service

00:20:47,270 --> 00:20:53,320
so that the responsible developer gets a

00:20:50,210 --> 00:21:00,620
notification about the application crash

00:20:53,320 --> 00:21:05,360
yeah that will be true to annoy them no

00:21:00,620 --> 00:21:08,110
so how does it work technically speaking

00:21:05,360 --> 00:21:11,300
it's a it's a kernel pitch which is a

00:21:08,110 --> 00:21:16,820
existing in the ops team colonel since I

00:21:11,300 --> 00:21:21,110
don't know when it's a core pattern or

00:21:16,820 --> 00:21:25,520
its its introducing a sysctl called core

00:21:21,110 --> 00:21:27,340
pattern where you can write in use or it

00:21:25,520 --> 00:21:31,640
was intended to write in a special

00:21:27,340 --> 00:21:34,730
format of the core file name but Andy

00:21:31,640 --> 00:21:37,700
clean extended it to have support for

00:21:34,730 --> 00:21:39,410
piping into an application so what what

00:21:37,700 --> 00:21:44,320
is actually done instead of writing

00:21:39,410 --> 00:21:47,570
recorded two discs the the colonel pipes

00:21:44,320 --> 00:21:50,870
the core dumped into the ipod app

00:21:47,570 --> 00:21:53,450
lication itself and gives them for says

00:21:50,870 --> 00:21:57,740
ide and

00:21:53,450 --> 00:22:00,730
and core size limit and such things so

00:21:57,740 --> 00:22:04,850
what upward is then doing it's writing

00:22:00,730 --> 00:22:07,220
the the crash report out to disk here

00:22:04,850 --> 00:22:10,460
you can see it's usually under VAR crash

00:22:07,220 --> 00:22:13,250
and this is how the file name is set up

00:22:10,460 --> 00:22:19,639
is it's the name of the binary the the

00:22:13,250 --> 00:22:21,470
user ID of the of the of the application

00:22:19,639 --> 00:22:25,519
that that's worse running under which a

00:22:21,470 --> 00:22:29,980
user ID and y and then there it's picked

00:22:25,519 --> 00:22:34,309
up by the by the notification applets

00:22:29,980 --> 00:22:38,600
here that is support supported by the

00:22:34,309 --> 00:22:42,309
knob settings demon so it's a catch just

00:22:38,600 --> 00:22:46,760
over fire to a money to a directory and

00:22:42,309 --> 00:22:50,380
and for for KDE it's a module for KDE

00:22:46,760 --> 00:22:50,380
demon yeah

00:22:53,380 --> 00:23:01,040
you use unique ID for the files because

00:22:58,280 --> 00:23:03,650
in the use case I'm thinking when you go

00:23:01,040 --> 00:23:06,710
on with your computer for maybe one

00:23:03,650 --> 00:23:08,660
month without access to a network I am

00:23:06,710 --> 00:23:12,710
sure you will end up with squashing

00:23:08,660 --> 00:23:17,210
crash reports yeah the the interesting

00:23:12,710 --> 00:23:20,060
thing is the there's a cone drop which

00:23:17,210 --> 00:23:22,820
is removing crash reports after that are

00:23:20,060 --> 00:23:26,390
older than one week so at the moment

00:23:22,820 --> 00:23:31,220
it's expected that you let you send the

00:23:26,390 --> 00:23:33,440
report in this time and after after that

00:23:31,220 --> 00:23:37,400
you can always download the war we put

00:23:33,440 --> 00:23:41,060
how it was sent upstream from the from

00:23:37,400 --> 00:23:43,420
the database server but this file name

00:23:41,060 --> 00:23:45,950
for merge is also used to detect

00:23:43,420 --> 00:23:49,070
duplicates so when your compass or your

00:23:45,950 --> 00:23:51,110
pigeon is crashing constantly crashing

00:23:49,070 --> 00:23:56,270
all the time you don't want to fill the

00:23:51,110 --> 00:23:58,430
disk by 100 duplicate reports so there

00:23:56,270 --> 00:24:00,650
are all names in a different way so this

00:23:58,430 --> 00:24:04,820
is this was I think the simplest way to

00:24:00,650 --> 00:24:07,310
do that but that's how how it's done in

00:24:04,820 --> 00:24:11,270
ubuntu engine for the law as well so i

00:24:07,310 --> 00:24:15,350
think we stick to the to the naming as

00:24:11,270 --> 00:24:18,280
in opensuse as well so but yeah it would

00:24:15,350 --> 00:24:20,840
be an idea to extent that or at least to

00:24:18,280 --> 00:24:23,990
configure make it possible to configure

00:24:20,840 --> 00:24:26,360
that but at the moment it's not equal

00:24:23,990 --> 00:24:28,280
user unique name for the file then in

00:24:26,360 --> 00:24:31,240
the first line have that same formation

00:24:28,280 --> 00:24:31,240
here something like that

00:24:33,710 --> 00:24:59,750
so huh a question Oh dr. cranky ya know

00:24:54,130 --> 00:25:02,380
it's it's quite easy the the desktop

00:24:59,750 --> 00:25:06,590
specific application in crashing glass

00:25:02,380 --> 00:25:10,279
are hooking into the the segfault gente

00:25:06,590 --> 00:25:13,399
so actually that application are never

00:25:10,279 --> 00:25:17,000
sick rotating anymore therefore airport

00:25:13,399 --> 00:25:19,820
is not getting called it's very simple

00:25:17,000 --> 00:25:23,990
so you can but you can disable the

00:25:19,820 --> 00:25:29,090
desktop specific crash and law and then

00:25:23,990 --> 00:25:33,440
use upward so I extend it but i think i

00:25:29,090 --> 00:25:40,789
have thought about that later I extended

00:25:33,440 --> 00:25:45,169
the upwards or this step to be more

00:25:40,789 --> 00:25:47,570
flexible for opensuse because I know

00:25:45,169 --> 00:25:52,909
that the KDE project is very proud of

00:25:47,570 --> 00:25:56,630
dr. conky so I made it possible that you

00:25:52,909 --> 00:25:59,559
can call dr. conky from from your

00:25:56,630 --> 00:26:05,919
crushing application hand as well so

00:25:59,559 --> 00:26:09,529
that would enable us to disable the

00:26:05,919 --> 00:26:13,130
stuff in the indicate a applications but

00:26:09,529 --> 00:26:15,100
still have the intention or the user

00:26:13,130 --> 00:26:18,529
experience would stay the same because

00:26:15,100 --> 00:26:21,399
dr. conky is called as well so it's it's

00:26:18,529 --> 00:26:24,970
very very flexible and it integrates

00:26:21,399 --> 00:26:28,870
quite good enter into a genome and

00:26:24,970 --> 00:26:32,690
Google brick pattern or whatever so and

00:26:28,870 --> 00:26:35,539
yeah and it's very good because at the

00:26:32,690 --> 00:26:37,070
moment the opensuse the the genome brake

00:26:35,539 --> 00:26:40,250
pad implementation is spoken for

00:26:37,070 --> 00:26:43,940
opensuse so it's exporting a itself so

00:26:40,250 --> 00:26:47,120
but i can i can get the the reports of

00:26:43,940 --> 00:26:49,280
the SEC folding question love

00:26:47,120 --> 00:26:52,760
of norm I can capture them and report

00:26:49,280 --> 00:26:56,510
them as well so the at the moment it's

00:26:52,760 --> 00:27:01,820
good to have it yeah what technologies

00:26:56,510 --> 00:27:04,220
are used as I said it's a the co-op head

00:27:01,820 --> 00:27:10,150
down feature which is obscene since 26

00:27:04,220 --> 00:27:13,670
24 the piping stuff the linker features

00:27:10,150 --> 00:27:16,220
with the built IDs it's basically a to

00:27:13,670 --> 00:27:19,850
change feature which is new and opensuse

00:27:16,220 --> 00:27:22,160
11.1 the compiler features about the

00:27:19,850 --> 00:27:26,950
odds and Cronus unwind habits to be able

00:27:22,160 --> 00:27:29,450
to produce a twist able to correctly

00:27:26,950 --> 00:27:32,270
produce a back trace without having the

00:27:29,450 --> 00:27:35,270
back info or without having full debug

00:27:32,270 --> 00:27:40,100
info and system management features are

00:27:35,270 --> 00:27:42,620
you need LipDub endings for Payton which

00:27:40,100 --> 00:27:46,400
are only available on 11 node one

00:27:42,620 --> 00:27:50,210
because the lips of bindings for 11-0

00:27:46,400 --> 00:27:57,110
are broken and nobody wants to fix them

00:27:50,210 --> 00:28:00,230
so what's in there for developers as I

00:27:57,110 --> 00:28:03,470
said it's very flexible so you can add

00:28:00,230 --> 00:28:07,309
your own hooks to it that are called

00:28:03,470 --> 00:28:10,010
during the applet so when you when you

00:28:07,309 --> 00:28:12,020
click the report problem button it's

00:28:10,010 --> 00:28:15,020
starting all these hooks and collecting

00:28:12,020 --> 00:28:19,490
gathering data so you can easily hook in

00:28:15,020 --> 00:28:24,260
there just by adding another file into

00:28:19,490 --> 00:28:27,320
it so it's searching for for or it's

00:28:24,260 --> 00:28:30,410
actually executing all the the Python

00:28:27,320 --> 00:28:33,650
files which other then you can also do

00:28:30,410 --> 00:28:38,150
that for package so package specific

00:28:33,650 --> 00:28:42,170
hooks and all these hooks need to

00:28:38,150 --> 00:28:44,420
implement and add info function which is

00:28:42,170 --> 00:28:47,630
then adding certain information to the

00:28:44,420 --> 00:28:50,230
report it's also possible to delete

00:28:47,630 --> 00:28:54,830
certain information from the report so

00:28:50,230 --> 00:28:59,810
yeah all the hooks are are very powerful

00:28:54,830 --> 00:29:00,580
there you can execute arbitrary writing

00:28:59,810 --> 00:29:06,090
code

00:29:00,580 --> 00:29:12,100
so this is how it looks this is a

00:29:06,090 --> 00:29:16,090
example hook this is an ubuntu example

00:29:12,100 --> 00:29:22,659
you just define at info and then you can

00:29:16,090 --> 00:29:25,510
you can just make a new key to in this

00:29:22,659 --> 00:29:29,399
in your report and type the information

00:29:25,510 --> 00:29:39,700
there so this is this is adding a lot of

00:29:29,399 --> 00:29:42,010
a lot of files is another example this

00:29:39,700 --> 00:29:46,059
is quite interesting because by this you

00:29:42,010 --> 00:29:50,500
can disable the report generation or

00:29:46,059 --> 00:29:54,220
this sending of the report upstream if

00:29:50,500 --> 00:30:00,000
you detect certains certain things this

00:29:54,220 --> 00:30:03,460
is this is looking for for specific or

00:30:00,000 --> 00:30:05,639
specific things in the back trace and if

00:30:03,460 --> 00:30:09,700
it shows up in the back trace it says oh

00:30:05,639 --> 00:30:14,070
you're here the crash report is likely

00:30:09,700 --> 00:30:17,679
that it's invalid so it's an unreported

00:30:14,070 --> 00:30:20,169
reason a black report and you are not

00:30:17,679 --> 00:30:26,470
able to send them an upstream or to the

00:30:20,169 --> 00:30:29,769
server so then there's something which

00:30:26,470 --> 00:30:33,970
is unique to opensuse it's the developer

00:30:29,769 --> 00:30:37,779
mode you can enable it by by just

00:30:33,970 --> 00:30:40,960
putting a in the config file developer

00:30:37,779 --> 00:30:44,710
mode than just enabling it in the config

00:30:40,960 --> 00:30:48,389
file this is generating back to Isis or

00:30:44,710 --> 00:30:52,360
crash reports also for unpackaged

00:30:48,389 --> 00:30:56,250
applications that means applications

00:30:52,360 --> 00:31:00,730
that are not officially signed bye bye

00:30:56,250 --> 00:31:04,240
bye opensuse becky and also applications

00:31:00,730 --> 00:31:06,549
like my sex fourth application which is

00:31:04,240 --> 00:31:09,010
not coming with the package and so the

00:31:06,549 --> 00:31:12,059
package is a system the the packaging

00:31:09,010 --> 00:31:12,059
system doesn't know of it

00:31:12,180 --> 00:31:19,630
here you can see also this unreported we

00:31:16,240 --> 00:31:21,940
reason tech this is not genuine suzl

00:31:19,630 --> 00:31:24,900
package and then you cannot Center

00:31:21,940 --> 00:31:28,660
report upstream but you can save it so

00:31:24,900 --> 00:31:36,570
and then you can look at it or or to

00:31:28,660 --> 00:31:41,140
whatever you want for it so this is

00:31:36,570 --> 00:31:46,540
another thing which is unique this total

00:31:41,140 --> 00:31:50,560
opensuse upward version it's on app

00:31:46,540 --> 00:31:54,150
question vogue a environment variable so

00:31:50,560 --> 00:31:57,100
if the application itself has the

00:31:54,150 --> 00:32:04,210
environment variable set while it's

00:31:57,100 --> 00:32:06,100
crushing up what we call the handler

00:32:04,210 --> 00:32:09,070
which is defined here so here you can

00:32:06,100 --> 00:32:14,590
see it was this application crashed in

00:32:09,070 --> 00:32:18,070
and it had set a path or a filename here

00:32:14,590 --> 00:32:19,870
it was invoke dot as age it's just a

00:32:18,070 --> 00:32:23,470
shell script so you can run arbitrary

00:32:19,870 --> 00:32:26,830
code there you can also see the security

00:32:23,470 --> 00:32:31,030
feature so my username is of course not

00:32:26,830 --> 00:32:33,340
username but it was replaced and so the

00:32:31,030 --> 00:32:36,910
this thing was then one and here you can

00:32:33,340 --> 00:32:38,890
see it's just the output of the the

00:32:36,910 --> 00:32:41,050
thing of the thing that you're running

00:32:38,890 --> 00:32:44,500
is just attached to the so the

00:32:41,050 --> 00:32:50,380
application report so bye-bye that means

00:32:44,500 --> 00:32:56,500
it's very easy to add other crash

00:32:50,380 --> 00:32:59,770
reporting handless also on that case so

00:32:56,500 --> 00:33:02,680
when I say it's unique to the opensuse

00:32:59,770 --> 00:33:08,710
version that's just because I wasn't

00:33:02,680 --> 00:33:11,650
able to so push this upstream yet I'm

00:33:08,710 --> 00:33:14,590
working quite the collaboration with

00:33:11,650 --> 00:33:18,370
ubuntu with martin pit is quite good so

00:33:14,590 --> 00:33:21,390
it's it's he's taking Petrus from us as

00:33:18,370 --> 00:33:26,010
well but but of course he wants me to

00:33:21,390 --> 00:33:26,010
prepare the patch and not not

00:33:26,990 --> 00:33:33,120
tell him where the branches and and lets

00:33:30,390 --> 00:33:37,519
him do the merging work so but this will

00:33:33,120 --> 00:33:40,919
be upstream I hope in a few weeks also

00:33:37,519 --> 00:33:46,200
so a list of missing features it's quite

00:33:40,919 --> 00:33:51,120
long so the proper integration with back

00:33:46,200 --> 00:33:55,140
body dr. conky and Colonel whoops that

00:33:51,120 --> 00:33:59,010
is also the problem is on since I'm only

00:33:55,140 --> 00:34:01,470
using gnome that would be the easier

00:33:59,010 --> 00:34:04,679
part but somebody should should do the

00:34:01,470 --> 00:34:07,830
KDE stuff I hope that I can find

00:34:04,679 --> 00:34:12,359
somebody in house probably or somebody

00:34:07,830 --> 00:34:15,899
in the community and then rewrite of the

00:34:12,359 --> 00:34:20,429
core application so which is located and

00:34:15,899 --> 00:34:21,750
I user Shah apart efforts or so this is

00:34:20,429 --> 00:34:26,190
the application that is run by the

00:34:21,750 --> 00:34:30,089
colonel I really wanted to be to have

00:34:26,190 --> 00:34:32,550
minimal requirements and i think that

00:34:30,089 --> 00:34:35,700
the patent requirement at that point is

00:34:32,550 --> 00:34:38,609
not very optimal so i want to report i

00:34:35,700 --> 00:34:42,149
want to rewrite at least that parts in

00:34:38,609 --> 00:34:45,810
see probably or in c++ i don't know and

00:34:42,149 --> 00:34:49,679
then something disabled iPod / process

00:34:45,810 --> 00:34:51,750
yeah I have question about when you mean

00:34:49,679 --> 00:34:56,310
rewriting you mean rewrite it as an

00:34:51,750 --> 00:34:58,440
executable again or library no as a

00:34:56,310 --> 00:34:59,940
standalone application but that the

00:34:58,440 --> 00:35:03,920
application which is called from the

00:34:59,940 --> 00:35:06,930
colonel so the initial gathering of the

00:35:03,920 --> 00:35:12,089
initial report gathering which is very

00:35:06,930 --> 00:35:14,400
it's it's it's very simple work it's

00:35:12,089 --> 00:35:17,700
only doing writing out the core dump and

00:35:14,400 --> 00:35:19,470
doing all this proc file that is

00:35:17,700 --> 00:35:21,930
actually the opposite of what Windows us

00:35:19,470 --> 00:35:24,270
in the windows role when you crash the

00:35:21,930 --> 00:35:26,849
application what you are doing is you

00:35:24,270 --> 00:35:29,190
linked and static library because when

00:35:26,849 --> 00:35:31,260
your application is crashing in my it

00:35:29,190 --> 00:35:33,810
might be very well because your system

00:35:31,260 --> 00:35:36,000
is unstable due to hardware or memory

00:35:33,810 --> 00:35:37,770
and the last thing you want to do is to

00:35:36,000 --> 00:35:39,180
start something new

00:35:37,770 --> 00:35:44,040
you want to run something that you

00:35:39,180 --> 00:35:45,690
already have in memory nah it's the the

00:35:44,040 --> 00:35:49,410
the interesting thing is this is in a

00:35:45,690 --> 00:35:52,140
separate address space so it's it's not

00:35:49,410 --> 00:35:53,940
starting it's not like the sexual

00:35:52,140 --> 00:35:55,710
handling implemented or a sec food

00:35:53,940 --> 00:35:58,320
handler implementation you start a port

00:35:55,710 --> 00:36:00,690
which is any web page why so if I

00:35:58,320 --> 00:36:03,230
probably was I was running out of memory

00:36:00,690 --> 00:36:05,910
and that was the reason I was rushing

00:36:03,230 --> 00:36:08,490
you are making things worse not better

00:36:05,910 --> 00:36:12,960
yeah but the the patent you know that

00:36:08,490 --> 00:36:16,080
you have to die 11 deaf in that good

00:36:12,960 --> 00:36:18,540
anyway you rewrite that you'll see if it

00:36:16,080 --> 00:36:21,660
will make sense to for it to be a

00:36:18,540 --> 00:36:26,820
library yeah critic library we are

00:36:21,660 --> 00:36:30,290
probably so but I don't want to link it

00:36:26,820 --> 00:36:33,210
or have it loaded multiple times and or

00:36:30,290 --> 00:36:37,320
if you if you have it loaded is a

00:36:33,210 --> 00:36:40,560
library you and you don't want to run

00:36:37,320 --> 00:36:42,240
another application doing crash then I

00:36:40,560 --> 00:36:47,310
have to be sure that the code of the

00:36:42,240 --> 00:36:50,250
library the text is not not modified

00:36:47,310 --> 00:36:53,450
during the application crash so I really

00:36:50,250 --> 00:36:58,710
want to run in a separate address space

00:36:53,450 --> 00:37:00,990
so it makes sense to start to start

00:36:58,710 --> 00:37:04,140
another application in that terms

00:37:00,990 --> 00:37:06,330
because the this is the worst problem

00:37:04,140 --> 00:37:09,920
that you have with dr. clunky and back

00:37:06,330 --> 00:37:13,110
body is if the application goes crazy

00:37:09,920 --> 00:37:14,610
they it's not able to start the SEC Ford

00:37:13,110 --> 00:37:16,410
handler anymore or even the SEC

00:37:14,610 --> 00:37:20,700
relentless that is crashing and dying

00:37:16,410 --> 00:37:24,780
then so and you and to get this right is

00:37:20,700 --> 00:37:30,600
very very complex so what you can do is

00:37:24,780 --> 00:37:32,520
you map the the part of the code that

00:37:30,600 --> 00:37:38,190
you need to undo in the crash you lock

00:37:32,520 --> 00:37:40,860
it and you map it read only no not with

00:37:38,190 --> 00:37:43,500
only so that it's not a touchable by the

00:37:40,860 --> 00:37:46,580
application itself by that that would be

00:37:43,500 --> 00:37:50,660
a lot of hacking and

00:37:46,580 --> 00:37:52,940
for for a really small benefit I think

00:37:50,660 --> 00:37:56,120
well not exactly what the windows were

00:37:52,940 --> 00:38:00,280
last huh that's exactly what the windows

00:37:56,120 --> 00:38:00,280
world has been doing for two years so

00:38:01,030 --> 00:38:11,540
yeah okay yeah so yeah there are some

00:38:09,140 --> 00:38:13,280
other things that that are missing at

00:38:11,540 --> 00:38:15,710
least also on the question for database

00:38:13,280 --> 00:38:19,880
as I told connections for now no no

00:38:15,710 --> 00:38:22,220
vexilla automatic report analyzes so so

00:38:19,880 --> 00:38:27,250
I'm cueing Lee working on the report

00:38:22,220 --> 00:38:33,590
analyzes and the report which way sir

00:38:27,250 --> 00:38:36,230
yeah so that's it the there are some

00:38:33,590 --> 00:38:40,070
people involved Nikola who did the

00:38:36,230 --> 00:38:42,380
initial port Martine for merging for for

00:38:40,070 --> 00:38:45,560
merging our patches and under glass ball

00:38:42,380 --> 00:38:50,720
and Marcos cocotte for helping me with

00:38:45,560 --> 00:38:54,290
rails and yeah here's the the wiki pages

00:38:50,720 --> 00:39:02,030
a port and a port for developers so if

00:38:54,290 --> 00:39:11,030
you're interested that's it so questions

00:39:02,030 --> 00:39:15,020
anybody about their developer mode you

00:39:11,030 --> 00:39:16,880
said 'i if a package is at least some

00:39:15,020 --> 00:39:21,800
piece of software is no packets by

00:39:16,880 --> 00:39:24,950
opensuse I mean sign by susie it will be

00:39:21,800 --> 00:39:28,700
not reported unless you enable developer

00:39:24,950 --> 00:39:30,680
mode what if i develop some software say

00:39:28,700 --> 00:39:33,410
courses somewhere is not timed by suzy

00:39:30,680 --> 00:39:41,650
that i want it to have reporting

00:39:33,410 --> 00:39:43,760
features so this is the plan is with the

00:39:41,650 --> 00:39:47,690
with the connection to the opens with a

00:39:43,760 --> 00:39:51,380
bit service that if in the opensuse bit

00:39:47,690 --> 00:39:56,360
service has a backward as a reporter

00:39:51,380 --> 00:39:58,960
said about a buck ID said that our crush

00:39:56,360 --> 00:40:03,340
DB server also accepts that

00:39:58,960 --> 00:40:06,010
that reports not an option hmm so we're

00:40:03,340 --> 00:40:10,840
not built in the open open the editor

00:40:06,010 --> 00:40:14,500
you can always you can add your at your

00:40:10,840 --> 00:40:16,080
own crash database server so that it is

00:40:14,500 --> 00:40:19,020
possible to have multiple servers

00:40:16,080 --> 00:40:24,100
yellen's area but when in developer mode

00:40:19,020 --> 00:40:27,400
it doesn't send it only shapes yeah you

00:40:24,100 --> 00:40:29,860
could but you can in the in the hook you

00:40:27,400 --> 00:40:34,410
can overwrite all this stuff so in a

00:40:29,860 --> 00:40:34,410
package choke so it's that's possible

00:40:38,310 --> 00:40:45,150

YouTube URL: https://www.youtube.com/watch?v=IBhIhbNJZ7M


