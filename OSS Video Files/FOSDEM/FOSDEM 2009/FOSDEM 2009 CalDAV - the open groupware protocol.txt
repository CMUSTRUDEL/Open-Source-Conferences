Title: FOSDEM 2009 CalDAV - the open groupware protocol
Publication date: 2011-12-22
Playlist: FOSDEM 2009
Description: 
	By Helge HeÃŸ

Introduction into the CalDAV protocol and related protocols. Overview on OpenSource CalDAV clients and servers, and on libraries for CalDAV development. Attempt to motivate people to implement IETF standard protocols instead of proprietrary ones.

CalDAV is a calendaring and scheduling client/server protocol designed to allow users to access calendar data on a server, and to schedule meetings with other users on that server or other servers.

FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:00,000 --> 00:00:02,030
I

00:00:04,460 --> 00:00:09,810
you

00:00:06,430 --> 00:00:09,810
like to give

00:00:14,880 --> 00:00:21,000
and it's mostly internet for open source

00:00:18,750 --> 00:00:24,770
developers because I want to motivate

00:00:21,000 --> 00:00:27,360
them to implement those protocols so

00:00:24,770 --> 00:00:31,200
actually I will give a short overview of

00:00:27,360 --> 00:00:33,810
the protocol itself I'm talking about a

00:00:31,200 --> 00:00:38,399
bit about implementation which exists

00:00:33,810 --> 00:00:40,500
today I want to say a bit about how to

00:00:38,399 --> 00:00:43,230
write a caliph connector so if you're a

00:00:40,500 --> 00:00:46,079
developer and 112 a provider Cardiff

00:00:43,230 --> 00:00:49,440
client I give some hints on how to work

00:00:46,079 --> 00:00:53,430
on that and well related to that how I

00:00:49,440 --> 00:00:57,830
think you can help with getting better

00:00:53,430 --> 00:01:01,790
cut off support in open source clients

00:00:57,830 --> 00:01:05,220
so as a set cutoff is a simple

00:01:01,790 --> 00:01:09,060
http-based calendaring protocol it's a

00:01:05,220 --> 00:01:12,270
standard since last year it basically

00:01:09,060 --> 00:01:14,820
describes how an open so or any equip

00:01:12,270 --> 00:01:18,329
your client like for example thunderbird

00:01:14,820 --> 00:01:20,640
or evolution can talk to a server system

00:01:18,329 --> 00:01:24,810
like for example egroup we're open group

00:01:20,640 --> 00:01:26,520
Pharos Agathe of course and was

00:01:24,810 --> 00:01:29,100
important thing to keep in mind is that

00:01:26,520 --> 00:01:32,280
Cardiff is just a transport protocol

00:01:29,100 --> 00:01:35,130
droid doesn't just describe how the

00:01:32,280 --> 00:01:37,619
actual data is for method for the actual

00:01:35,130 --> 00:01:41,069
data the iCalendar and vcard formance

00:01:37,619 --> 00:01:45,479
formats are used which are in a standard

00:01:41,069 --> 00:01:47,490
since I think more than 10 years and the

00:01:45,479 --> 00:01:49,950
important thing is that all the open

00:01:47,490 --> 00:01:53,219
source clients which exists today like

00:01:49,950 --> 00:01:55,829
evolution Mozilla son Burt and contact

00:01:53,219 --> 00:01:59,369
are all internally based on my calendar

00:01:55,829 --> 00:02:03,899
and weaker so it's a very natural fit

00:01:59,369 --> 00:02:07,529
and this is why I don't like our tickets

00:02:03,899 --> 00:02:09,649
like that you can week that for contact

00:02:07,529 --> 00:02:13,110
or for evolution so there are

00:02:09,649 --> 00:02:16,880
announcements like a contact or

00:02:13,110 --> 00:02:19,530
evolution support microsoft exchange and

00:02:16,880 --> 00:02:22,500
well it's very annoying because they

00:02:19,530 --> 00:02:24,360
don't do not yet support open standards

00:02:22,500 --> 00:02:26,340
but they put work in

00:02:24,360 --> 00:02:29,460
to supporting exchange I can't

00:02:26,340 --> 00:02:33,240
understand that especially because the

00:02:29,460 --> 00:02:36,450
clients itself are based on the data

00:02:33,240 --> 00:02:42,440
formats also used by Qatar so it would

00:02:36,450 --> 00:02:44,700
be very easy a bit about the protocol

00:02:42,440 --> 00:02:47,340
actually is a whole stack is pretty

00:02:44,700 --> 00:02:50,730
complex but you usually don't need that

00:02:47,340 --> 00:02:53,610
because Calif also targets web

00:02:50,730 --> 00:02:56,880
interfaces so it has a lot of operations

00:02:53,610 --> 00:02:59,459
so that web interfaces can directly talk

00:02:56,880 --> 00:03:02,430
to a caliph line that's not something

00:02:59,459 --> 00:03:04,290
I'm talking about today I'm mostly

00:03:02,430 --> 00:03:06,450
interesting on what needs to be

00:03:04,290 --> 00:03:11,070
implemented in a Native Client like a

00:03:06,450 --> 00:03:15,390
KDE client one genome client they need

00:03:11,070 --> 00:03:18,330
much less operations in fact we have a

00:03:15,390 --> 00:03:21,270
small subset of that defined in the so

00:03:18,330 --> 00:03:22,680
called a good death standard it's not

00:03:21,270 --> 00:03:27,090
really a standard it's more like a

00:03:22,680 --> 00:03:30,930
document which contains the

00:03:27,090 --> 00:03:36,180
interoperability issues i show that

00:03:30,930 --> 00:03:38,790
later well to the parts I cholena is

00:03:36,180 --> 00:03:41,340
very common most developers probably

00:03:38,790 --> 00:03:43,590
know how that works because as I said

00:03:41,340 --> 00:03:46,019
it's used in the open source clients

00:03:43,590 --> 00:03:49,230
anyways it's very simple text-based

00:03:46,019 --> 00:03:52,920
format which contains the necessary

00:03:49,230 --> 00:03:56,100
information nothing particularly

00:03:52,920 --> 00:03:58,769
impressive the same goes for a week card

00:03:56,100 --> 00:04:01,799
which was almost the same format except

00:03:58,769 --> 00:04:03,450
for contact data like telephone numbers

00:04:01,799 --> 00:04:11,850
and email addresses and stuff like that

00:04:03,450 --> 00:04:14,790
you can store birthdays and regard well

00:04:11,850 --> 00:04:17,250
and the most important protocol for

00:04:14,790 --> 00:04:20,220
caldÃ© office HTTP because almost

00:04:17,250 --> 00:04:22,919
everything needed to write an HTTP a

00:04:20,220 --> 00:04:25,620
client services team which does callum a

00:04:22,919 --> 00:04:29,070
calendar ring is already contained an

00:04:25,620 --> 00:04:32,479
HTTP it provides operations to retrieve

00:04:29,070 --> 00:04:35,849
items to store items to delete items

00:04:32,479 --> 00:04:38,499
well and it's actually

00:04:35,849 --> 00:04:41,409
there's a new password for that which is

00:04:38,499 --> 00:04:45,219
rest which just means that HT deeply is

00:04:41,409 --> 00:04:47,860
applied at as it was originally intended

00:04:45,219 --> 00:04:51,879
which is using those operations instead

00:04:47,860 --> 00:04:57,659
of using just post and some CGI scripts

00:04:51,879 --> 00:04:59,889
which do other stuff so this is how the

00:04:57,659 --> 00:05:02,860
HTTP looks like this is for in

00:04:59,889 --> 00:05:06,759
retrieving an item you just use a get

00:05:02,860 --> 00:05:10,419
method to retrieve a URL which contains

00:05:06,759 --> 00:05:14,159
an event in this case as if not met if

00:05:10,419 --> 00:05:16,569
no match is actually an optimization the

00:05:14,159 --> 00:05:19,509
the number behind that it can be

00:05:16,569 --> 00:05:22,360
anything it's just a marker which says

00:05:19,509 --> 00:05:25,929
whether the item changed on the server

00:05:22,360 --> 00:05:28,599
so if the client retrieves such an

00:05:25,929 --> 00:05:32,919
calendar event from the server and

00:05:28,599 --> 00:05:35,829
stores that in twins own cash it can put

00:05:32,919 --> 00:05:38,709
that version into the week rest and the

00:05:35,829 --> 00:05:42,029
server will only return the content if

00:05:38,709 --> 00:05:44,229
it actually changed so it's much faster

00:05:42,029 --> 00:05:47,319
in this case I changed and they're

00:05:44,229 --> 00:05:49,059
actually Yvette embeds we're actually in

00:05:47,319 --> 00:05:51,669
it's a bad example it didn't change but

00:05:49,059 --> 00:05:55,329
it actually embeds an ical in the file

00:05:51,669 --> 00:06:00,459
and gives a new eat egg in this case of

00:05:55,329 --> 00:06:03,519
the same changing an item and is

00:06:00,459 --> 00:06:08,229
becoming relies more on the if match

00:06:03,519 --> 00:06:11,379
header because the put operation is used

00:06:08,229 --> 00:06:15,610
for both for changing an item and for

00:06:11,379 --> 00:06:17,949
creating an item and in addition a put

00:06:15,610 --> 00:06:20,829
operation of write operation must detect

00:06:17,949 --> 00:06:24,069
changes by other users for example if

00:06:20,829 --> 00:06:27,219
another user moved an appointment in his

00:06:24,069 --> 00:06:29,769
client another user must be able to

00:06:27,219 --> 00:06:32,379
detect that so that he doesn't overwrite

00:06:29,769 --> 00:06:35,469
the changes of that other user and this

00:06:32,379 --> 00:06:37,749
is what the attackers used for again so

00:06:35,469 --> 00:06:40,869
this basically means all Nev rights as

00:06:37,749 --> 00:06:42,879
content if it didn't change so if it

00:06:40,869 --> 00:06:45,879
changed in the meantime the server will

00:06:42,879 --> 00:06:48,050
issue a special HTTP status a status

00:06:45,879 --> 00:06:51,520
code which is 419 conflict

00:06:48,050 --> 00:06:54,319
and the user can then decide whether the

00:06:51,520 --> 00:06:56,539
client should we issues the same request

00:06:54,319 --> 00:06:59,150
without so if match or whether it's

00:06:56,539 --> 00:07:02,690
somehow retrieves updated information

00:06:59,150 --> 00:07:07,300
and merges them well whatever the

00:07:02,690 --> 00:07:10,280
whatever choices a client gives the user

00:07:07,300 --> 00:07:13,900
as I said creating the item is basically

00:07:10,280 --> 00:07:16,970
the same thing but to ensure that the

00:07:13,900 --> 00:07:20,060
event does not yet exist at that you are

00:07:16,970 --> 00:07:22,550
you put that if mom met if not match

00:07:20,060 --> 00:07:26,270
star into the header this means that

00:07:22,550 --> 00:07:29,900
this request with a fail of the meeting

00:07:26,270 --> 00:07:32,659
ICS fire already exists in this case the

00:07:29,900 --> 00:07:37,219
clients as a client needs to issue a new

00:07:32,659 --> 00:07:43,000
well file name for that event and retry

00:07:37,219 --> 00:07:47,419
the request so most lines actually use a

00:07:43,000 --> 00:07:51,440
unique IDs for that so it's really rare

00:07:47,419 --> 00:07:53,719
error well and final delete it's also

00:07:51,440 --> 00:07:57,050
very simple if you want you can also add

00:07:53,719 --> 00:08:01,490
an etek condition so that the delete

00:07:57,050 --> 00:08:03,889
only succeeds if no other user modified

00:08:01,490 --> 00:08:05,599
the event in the meantime now you can

00:08:03,889 --> 00:08:09,710
also remove that and the delete will

00:08:05,599 --> 00:08:12,979
always succeed now what we have seen

00:08:09,710 --> 00:08:15,949
jerrell before us just regular HTTP it's

00:08:12,979 --> 00:08:19,310
under standard HTTP specification and

00:08:15,949 --> 00:08:21,469
available for a long long time and it's

00:08:19,310 --> 00:08:23,900
the same is true for web turf it's quite

00:08:21,469 --> 00:08:27,460
available for a long time now and the

00:08:23,900 --> 00:08:33,520
most important thing web dev adds to

00:08:27,460 --> 00:08:36,740
https hierarchies so HTTP itself a URL

00:08:33,520 --> 00:08:39,800
uniform resource locator and the HTTP

00:08:36,740 --> 00:08:44,149
request is already kind of high wreak

00:08:39,800 --> 00:08:47,899
havoc eva forms kind of a hierarchy of

00:08:44,149 --> 00:08:51,410
the components and the in the URL can be

00:08:47,899 --> 00:08:53,959
split by slashes and but the important

00:08:51,410 --> 00:08:58,160
thing is that there is no HTTP operation

00:08:53,959 --> 00:09:00,260
to discover which children such a

00:08:58,160 --> 00:09:00,920
collection has for example if i want to

00:09:00,260 --> 00:09:03,860
know

00:09:00,920 --> 00:09:07,160
that as a developer's folder contains a

00:09:03,860 --> 00:09:09,829
calendar and tasks sub items there's no

00:09:07,160 --> 00:09:12,500
HTTP operation to find that out and this

00:09:09,829 --> 00:09:15,500
is what's a prop finders for its the

00:09:12,500 --> 00:09:19,060
addition by a web dev another edition is

00:09:15,500 --> 00:09:22,610
that web def has a concept of metadata

00:09:19,060 --> 00:09:24,260
then called properties in web dev so by

00:09:22,610 --> 00:09:26,630
using the prop find you can also

00:09:24,260 --> 00:09:28,880
discover stuff like when God's a fire

00:09:26,630 --> 00:09:32,510
modified what is the eTech and other

00:09:28,880 --> 00:09:35,870
stuff it's also the basis for web dev

00:09:32,510 --> 00:09:38,360
extensions it has a few other things

00:09:35,870 --> 00:09:41,269
like for example lock which allows you

00:09:38,360 --> 00:09:43,670
to lock a collection for modification

00:09:41,269 --> 00:09:47,149
but that's not really necessary because

00:09:43,670 --> 00:09:49,639
as we've seen before HTTP all these

00:09:47,149 --> 00:09:51,620
supports optimistic locking so you can

00:09:49,639 --> 00:09:54,560
just attempt to right an to the only

00:09:51,620 --> 00:09:56,810
fail if it actually changed so it's

00:09:54,560 --> 00:10:02,360
usually much better for the user instead

00:09:56,810 --> 00:10:04,970
of locking the whole collection so

00:10:02,360 --> 00:10:07,670
that's how what it looks like it's a

00:10:04,970 --> 00:10:11,899
prop find operation which goes to a

00:10:07,670 --> 00:10:14,390
calendar in this case and the prop find

00:10:11,899 --> 00:10:17,990
instructions are contained in the body

00:10:14,390 --> 00:10:20,480
and so get it take this asset we want to

00:10:17,990 --> 00:10:24,170
retrieve the eTech of all items

00:10:20,480 --> 00:10:26,750
contained in that calendar and it always

00:10:24,170 --> 00:10:29,540
returns such a multi status response

00:10:26,750 --> 00:10:33,890
which is basically an XML representation

00:10:29,540 --> 00:10:36,380
of multiple HTTP responses so in this

00:10:33,890 --> 00:10:40,040
case the eTech is returned and then

00:10:36,380 --> 00:10:43,699
always and that's the thing in such a

00:10:40,040 --> 00:10:46,790
response element which contains urr to

00:10:43,699 --> 00:10:49,399
the item which is below that collection

00:10:46,790 --> 00:10:52,310
in this case calendar and some item it's

00:10:49,399 --> 00:10:58,540
just a unique ID the user usually

00:10:52,310 --> 00:11:00,980
doesn't see that what else for Cardiff

00:10:58,540 --> 00:11:05,000
just below caldav there's also another

00:11:00,980 --> 00:11:10,519
extension to web beverages web dev ACL

00:11:05,000 --> 00:11:12,589
that's access control so most important

00:11:10,519 --> 00:11:14,490
form for calif up the so-called

00:11:12,589 --> 00:11:16,890
principles resources

00:11:14,490 --> 00:11:20,220
principal resources are just as den not

00:11:16,890 --> 00:11:22,200
for representing an account in a

00:11:20,220 --> 00:11:24,570
calendaring system through so you

00:11:22,200 --> 00:11:27,420
actually get on URL for example

00:11:24,570 --> 00:11:30,209
principals users Helga which represents

00:11:27,420 --> 00:11:32,279
that account and this URL can be used to

00:11:30,209 --> 00:11:36,930
retrieve some information about that

00:11:32,279 --> 00:11:39,120
user usually those principal resources

00:11:36,930 --> 00:11:41,459
are not stored in some file or something

00:11:39,120 --> 00:11:44,130
like that so no but they are usually

00:11:41,459 --> 00:11:47,100
backed by some Jarvik directory service

00:11:44,130 --> 00:11:48,839
for example abap so for example the

00:11:47,100 --> 00:11:51,600
eponym plement a shin users open

00:11:48,839 --> 00:11:54,870
directory to store the actual principal

00:11:51,600 --> 00:11:57,470
information but it's not just the

00:11:54,870 --> 00:12:00,240
individual users it's also groups and

00:11:57,470 --> 00:12:03,089
resources like rooms which can be

00:12:00,240 --> 00:12:06,660
represented by principal resources the

00:12:03,089 --> 00:12:08,310
most common use in Cardiff is that as a

00:12:06,660 --> 00:12:11,160
so-called calendar homestead property

00:12:08,310 --> 00:12:13,110
there's the same thing for address books

00:12:11,160 --> 00:12:16,410
which is called address book home set

00:12:13,110 --> 00:12:19,440
and the way it works is that you do a

00:12:16,410 --> 00:12:21,839
prop for a pop find on the principal URL

00:12:19,440 --> 00:12:26,670
and you get back those two properties

00:12:21,839 --> 00:12:28,980
and they contain the URL which points to

00:12:26,670 --> 00:12:31,079
the server which provides the

00:12:28,980 --> 00:12:33,899
calendaring and address Bob services

00:12:31,079 --> 00:12:36,990
this is pretty nice because it allows

00:12:33,899 --> 00:12:38,820
you to scale very well so it can

00:12:36,990 --> 00:12:40,680
distribute users to different servers

00:12:38,820 --> 00:12:43,260
you can use different servers for

00:12:40,680 --> 00:12:49,740
address books and calendars and stuff

00:12:43,260 --> 00:12:51,690
like that well it's about a CL it also

00:12:49,740 --> 00:12:54,350
does a lot of permission thing but it's

00:12:51,690 --> 00:12:57,959
that's not really relevant and

00:12:54,350 --> 00:13:00,270
calendaring that much so next engine or

00:12:57,959 --> 00:13:02,600
really want to have the open source

00:13:00,270 --> 00:13:06,480
developers to implement the basics first

00:13:02,600 --> 00:13:08,880
so calif as a set requires most of those

00:13:06,480 --> 00:13:10,829
protocols if you want to do a full Calif

00:13:08,880 --> 00:13:13,829
implementation would actually have to

00:13:10,829 --> 00:13:18,240
implement all those protocols or all

00:13:13,829 --> 00:13:21,300
those standards in practice almost no

00:13:18,240 --> 00:13:24,000
server does that the most servers just

00:13:21,300 --> 00:13:27,420
implement the subset which is actually

00:13:24,000 --> 00:13:27,900
required to derive the at the ike ike

00:13:27,420 --> 00:13:31,500
line

00:13:27,900 --> 00:13:34,560
because this is the most known Calif

00:13:31,500 --> 00:13:38,940
client and more or less Tanner to test

00:13:34,560 --> 00:13:42,120
the color features but I come to clients

00:13:38,940 --> 00:13:44,640
are later as well kaldorf the more

00:13:42,120 --> 00:13:47,220
simple is just one additional HTTP

00:13:44,640 --> 00:13:49,260
method which is introduced in ACL

00:13:47,220 --> 00:13:52,320
actually but it's also used in calif

00:13:49,260 --> 00:13:56,220
which has got report it's pretty similar

00:13:52,320 --> 00:14:00,120
to to the prop find but it's a way to

00:13:56,220 --> 00:14:04,530
extend the protocol so report regreses

00:14:00,120 --> 00:14:06,210
in the body and there because a native

00:14:04,530 --> 00:14:08,940
clients which one on the desktop

00:14:06,210 --> 00:14:13,050
computer usually keep a cash for offline

00:14:08,940 --> 00:14:15,240
information and stuff like that yeah we

00:14:13,050 --> 00:14:17,850
do not really need the report because

00:14:15,240 --> 00:14:20,400
all the queries like give me a week of

00:14:17,850 --> 00:14:23,370
appointments or find a contact with name

00:14:20,400 --> 00:14:26,070
hello world are done on the client not

00:14:23,370 --> 00:14:28,980
on the server this is something which is

00:14:26,070 --> 00:14:31,170
important for web clients for example

00:14:28,980 --> 00:14:33,690
web client could ask the server to

00:14:31,170 --> 00:14:35,730
return just a week of events but for

00:14:33,690 --> 00:14:37,830
Native Client that's usually a useless

00:14:35,730 --> 00:14:39,770
feature because they have their own cash

00:14:37,830 --> 00:14:42,240
and do the queries are in the cache

00:14:39,770 --> 00:14:46,040
there's one report which is very useful

00:14:42,240 --> 00:14:49,350
and that's a so-called multi get report

00:14:46,040 --> 00:14:51,450
when you synchronize server the first

00:14:49,350 --> 00:14:54,900
time and for example it contains a

00:14:51,450 --> 00:14:57,900
thousand events what happens is that as

00:14:54,900 --> 00:15:00,780
also as a client issues of pop find it

00:14:57,900 --> 00:15:04,740
discovers the thousand event URLs and

00:15:00,780 --> 00:15:07,590
then goes on to fetch a thousand or does

00:15:04,740 --> 00:15:10,110
a thousand requests get requests to

00:15:07,590 --> 00:15:14,550
retrieve the item actually that's not

00:15:10,110 --> 00:15:18,270
that bad as a sounds because HTTP 11.1

00:15:14,550 --> 00:15:21,120
also supports pipelining and persistent

00:15:18,270 --> 00:15:24,060
connections so issuing thousand recurs

00:15:21,120 --> 00:15:26,610
isn't as low as one might think but

00:15:24,060 --> 00:15:29,820
still especially in data based database

00:15:26,610 --> 00:15:32,310
based servers a multi get can give

00:15:29,820 --> 00:15:34,500
performance advantages it basically says

00:15:32,310 --> 00:15:37,770
that in the we and the multi get report

00:15:34,500 --> 00:15:41,370
you can specify a set of URLs and you

00:15:37,770 --> 00:15:45,510
get for example 50 events in one part

00:15:41,370 --> 00:15:48,570
by just issuing one HTTP coy so it can

00:15:45,510 --> 00:15:50,339
be a major performance improvement but

00:15:48,570 --> 00:15:54,839
for example I am also testing against a

00:15:50,339 --> 00:15:56,730
patriot which doesnt report it's very

00:15:54,839 --> 00:15:59,130
fast with get as well because it just

00:15:56,730 --> 00:16:01,440
puts out the fired from the fire system

00:15:59,130 --> 00:16:03,630
and puts it on a soccer that's very very

00:16:01,440 --> 00:16:16,320
fast and copied to questions later

00:16:03,630 --> 00:16:20,130
please exactly and I come back to that

00:16:16,320 --> 00:16:22,200
later it's actually so as a thing we

00:16:20,130 --> 00:16:24,750
wanted to document and group death

00:16:22,200 --> 00:16:28,290
because we think that good death is a

00:16:24,750 --> 00:16:31,220
subset of all those specifications which

00:16:28,290 --> 00:16:34,170
are needed to implement a client system

00:16:31,220 --> 00:16:36,210
everything ads can be done on demand for

00:16:34,170 --> 00:16:39,360
example you can issue a report if it

00:16:36,210 --> 00:16:41,339
isn't implemented you get back an error

00:16:39,360 --> 00:16:44,910
code but I show that alone let's wait a

00:16:41,339 --> 00:16:47,820
minute that's something I've right

00:16:44,910 --> 00:16:50,910
actually vote and just below so why you

00:16:47,820 --> 00:16:54,360
can use a letter code of report to

00:16:50,910 --> 00:16:57,240
retrieve a bulk Marty prevents in one

00:16:54,360 --> 00:16:59,700
step if the server says he doesn't

00:16:57,240 --> 00:17:01,860
support that you can still fall back to

00:16:59,700 --> 00:17:04,470
get it's not a lot of work for the

00:17:01,860 --> 00:17:07,350
client developer to do that because it's

00:17:04,470 --> 00:17:09,449
just an optimization so and the

00:17:07,350 --> 00:17:12,470
important thing is that this get is

00:17:09,449 --> 00:17:15,120
again plain HTTP so it works with

00:17:12,470 --> 00:17:19,260
servers which do not implement full

00:17:15,120 --> 00:17:21,569
cover for that's particularly report as

00:17:19,260 --> 00:17:24,270
I mentioned there are other a lot of

00:17:21,569 --> 00:17:26,819
different reports you can extract just

00:17:24,270 --> 00:17:28,950
subsets of the iCalendar fire and stuff

00:17:26,819 --> 00:17:30,750
like that which are interesting if you

00:17:28,950 --> 00:17:35,160
want to write a web interface which

00:17:30,750 --> 00:17:37,440
directly interacts using the browser in

00:17:35,160 --> 00:17:40,380
tax was a web server but I've never seen

00:17:37,440 --> 00:17:44,340
that and I think it's pretty useless

00:17:40,380 --> 00:17:47,280
actually cut off is basically the same

00:17:44,340 --> 00:17:49,890
like held of just that it's for contacts

00:17:47,280 --> 00:17:53,130
the contacts are starting be cards there

00:17:49,890 --> 00:17:54,680
is also such a multi get report but in

00:17:53,130 --> 00:17:56,570
any other way it's

00:17:54,680 --> 00:17:59,540
same thing like Carol of just four

00:17:56,570 --> 00:18:03,830
contacts or it's currently still in

00:17:59,540 --> 00:18:07,100
development well actually cyrus taboo as

00:18:03,830 --> 00:18:08,960
a guy who was a written the draft but i

00:18:07,100 --> 00:18:13,010
expect that this will be standardized

00:18:08,960 --> 00:18:16,730
during 2009 problem in july or something

00:18:13,010 --> 00:18:22,640
like that so in here we are come to

00:18:16,730 --> 00:18:25,100
group death with a good def we try to

00:18:22,640 --> 00:18:27,620
formulate the absolute minimum of

00:18:25,100 --> 00:18:31,130
operations which are necessary to

00:18:27,620 --> 00:18:34,160
maintain a proper klein cash so that an

00:18:31,130 --> 00:18:37,030
native client can be developed which

00:18:34,160 --> 00:18:40,430
interacts with such a group dev server

00:18:37,030 --> 00:18:42,950
the reason is that as a set khaled RF

00:18:40,430 --> 00:18:45,650
and even vector itself is pretty complex

00:18:42,950 --> 00:18:47,150
if you want to implement it very few

00:18:45,650 --> 00:18:50,060
people actually implements a full of

00:18:47,150 --> 00:18:52,550
specification but group def is super

00:18:50,060 --> 00:18:54,740
simple it's not even requires you to

00:18:52,550 --> 00:18:57,740
implement all of web dev if you do it's

00:18:54,740 --> 00:19:00,260
great because you can use regular web

00:18:57,740 --> 00:19:03,620
dev clients but a real group def client

00:19:00,260 --> 00:19:07,460
can operate with interoperate with much

00:19:03,620 --> 00:19:10,580
simpler service so it's just one profane

00:19:07,460 --> 00:19:12,440
query which we specified and part of

00:19:10,580 --> 00:19:16,280
that group def document i'm showing that

00:19:12,440 --> 00:19:18,260
later on and UK yeah espere good laps

00:19:16,280 --> 00:19:21,080
back specification you are not allowed

00:19:18,260 --> 00:19:23,930
to issue different pop finds this way

00:19:21,080 --> 00:19:26,840
it's one hundred percent compatible to

00:19:23,930 --> 00:19:29,390
web dev in canada so every group tough

00:19:26,840 --> 00:19:31,340
client is automatically a full depth of

00:19:29,390 --> 00:19:33,230
my locale annoying web dev client and

00:19:31,340 --> 00:19:35,150
can talk to any kind of server because

00:19:33,230 --> 00:19:38,690
any calif server by specification

00:19:35,150 --> 00:19:41,390
implements those things otherwise it's

00:19:38,690 --> 00:19:44,690
just same thing like get portal eat

00:19:41,390 --> 00:19:48,020
everything plain HTTP content types are

00:19:44,690 --> 00:19:51,200
we corrupt and I calendar for the

00:19:48,020 --> 00:19:54,770
discovery is used using the prop fine so

00:19:51,200 --> 00:19:57,610
in the result set you get responses for

00:19:54,770 --> 00:20:00,320
as a folders we actually need to attack

00:19:57,610 --> 00:20:02,510
calendar for us with a special type so

00:20:00,320 --> 00:20:06,230
that's a client knows that this folder

00:20:02,510 --> 00:20:08,300
is a calendar server well it's a cool

00:20:06,230 --> 00:20:10,550
thing or in my opinion the coolest

00:20:08,300 --> 00:20:13,010
thing is that you can you do not need a

00:20:10,550 --> 00:20:16,520
good pair so that all you can use just

00:20:13,010 --> 00:20:19,940
Apache with an Apache web dev support

00:20:16,520 --> 00:20:24,170
even just in need to enable the web dev

00:20:19,940 --> 00:20:27,860
module of Apache you can use to store

00:20:24,170 --> 00:20:30,020
that of goofy environments and it's not

00:20:27,860 --> 00:20:32,780
fishy or something it's properly

00:20:30,020 --> 00:20:36,370
protected using the e-text or concurrent

00:20:32,780 --> 00:20:36,370
edits and all that work

00:21:23,760 --> 00:21:28,590
disadvantage okay thanks sorry

00:21:37,450 --> 00:21:46,389
now it works okay great so the only real

00:21:43,899 --> 00:21:47,919
disadvantage is that of course you do

00:21:46,389 --> 00:21:50,139
not have a web interface or something

00:21:47,919 --> 00:21:53,980
like that so it actually only works with

00:21:50,139 --> 00:21:56,529
real clients so it isn't too difficult

00:21:53,980 --> 00:21:59,049
to write a small script or something

00:21:56,529 --> 00:22:02,889
which watches Apache directories for

00:21:59,049 --> 00:22:05,289
changes and just generates appropriate

00:22:02,889 --> 00:22:08,409
HTML files for that you can do that

00:22:05,289 --> 00:22:10,779
using fire system callbacks and just

00:22:08,409 --> 00:22:28,090
generate a web interface aesthetic one

00:22:10,779 --> 00:22:30,370
which is very scalable yes no not not a

00:22:28,090 --> 00:22:32,950
card of client a group tough client you

00:22:30,370 --> 00:22:35,679
could use any group declined the Caliph

00:22:32,950 --> 00:22:38,830
client or most on the market like for

00:22:35,679 --> 00:22:40,510
example I card really do users report

00:22:38,830 --> 00:22:43,029
operation for example and having a call

00:22:40,510 --> 00:22:46,299
back a group of client could also

00:22:43,029 --> 00:22:48,970
attempt to use a report but what fall

00:22:46,299 --> 00:22:51,970
back to Prague find and zora Euler

00:22:48,970 --> 00:22:54,880
operations but I show some I also talked

00:22:51,970 --> 00:22:59,340
about implementations I come back to

00:22:54,880 --> 00:22:59,340
that later maybe shakes a time as well

00:22:59,820 --> 00:23:07,210
okay and my opinion is very cool because

00:23:04,830 --> 00:23:09,250
everyone has an Apache web / that's

00:23:07,210 --> 00:23:11,620
included and the latest releases and it

00:23:09,250 --> 00:23:14,440
really works great it's very fast even

00:23:11,620 --> 00:23:17,110
for larger collections it doesn't scale

00:23:14,440 --> 00:23:19,389
to a hundred thousand events in one

00:23:17,110 --> 00:23:24,010
folder but for regular use care so it's

00:23:19,389 --> 00:23:26,110
pretty nice actually so good cough has a

00:23:24,010 --> 00:23:27,760
set us for offline clients only we do

00:23:26,110 --> 00:23:30,460
not provide operations which are

00:23:27,760 --> 00:23:33,730
necessary for web interfaces like give

00:23:30,460 --> 00:23:36,490
me just one week of events so we

00:23:33,730 --> 00:23:39,100
actually assumed that the local client

00:23:36,490 --> 00:23:41,230
keeps a cache of the item a tweet whiff

00:23:39,100 --> 00:23:43,899
before because otherwise that would

00:23:41,230 --> 00:23:46,659
always seem to retrieve all events it

00:23:43,899 --> 00:23:50,049
wasn't wouldn't work but on a go via

00:23:46,659 --> 00:23:50,350
clients or yeah well local clients need

00:23:50,049 --> 00:23:52,480
to

00:23:50,350 --> 00:23:55,030
the cash locally anyway because you want

00:23:52,480 --> 00:23:58,510
to have offline capabilities so it's not

00:23:55,030 --> 00:24:00,730
really an additional requirement as I

00:23:58,510 --> 00:24:02,620
said that's very simpler especially for

00:24:00,730 --> 00:24:04,840
the server Venice as well because they

00:24:02,620 --> 00:24:07,630
only need to implement that single prop

00:24:04,840 --> 00:24:11,049
find and the gate and put operation so

00:24:07,630 --> 00:24:14,049
it's really easy and it also has a few

00:24:11,049 --> 00:24:16,980
hacks we added we documented a few hacks

00:24:14,049 --> 00:24:20,380
which can be used to a better support

00:24:16,980 --> 00:24:23,950
database based service like for example

00:24:20,380 --> 00:24:26,260
a goofy or group via test to do with the

00:24:23,950 --> 00:24:30,450
wii UI our constructions but i do not

00:24:26,260 --> 00:24:34,870
really have time to go into detail on

00:24:30,450 --> 00:24:37,539
top of cardiff the committee added

00:24:34,870 --> 00:24:40,330
another specification which is a kind of

00:24:37,539 --> 00:24:42,700
scheduling that's basically the same

00:24:40,330 --> 00:24:45,340
like I inbev which was used to etch

00:24:42,700 --> 00:24:47,440
exchange invitations for example if I

00:24:45,340 --> 00:24:50,169
mean I'm your user and I want to invite

00:24:47,440 --> 00:24:52,929
another user to a meeting I would my

00:24:50,169 --> 00:24:56,559
mail client like evolution and contact

00:24:52,929 --> 00:25:00,640
almost anyone supports that they send an

00:24:56,559 --> 00:25:03,909
IM ical in a message embedded in a

00:25:00,640 --> 00:25:06,159
regular my mail to the other user and

00:25:03,909 --> 00:25:09,039
you can then accept the meeting and

00:25:06,159 --> 00:25:12,640
other interaction in that as documented

00:25:09,039 --> 00:25:15,179
in I a tip and imap standard protocols

00:25:12,640 --> 00:25:17,500
which are widely deployed and

00:25:15,179 --> 00:25:20,530
standardized since a lot of years as

00:25:17,500 --> 00:25:25,270
well and cut off scheduling is almost

00:25:20,530 --> 00:25:27,700
the same thing just over HTTP well if

00:25:25,270 --> 00:25:30,880
you are a client developer and you are

00:25:27,700 --> 00:25:33,400
you want to start work adding goop dev

00:25:30,880 --> 00:25:35,710
support or Calif support to a open

00:25:33,400 --> 00:25:39,130
source client please do not look into

00:25:35,710 --> 00:25:41,340
that yeah it's quite complicated and it

00:25:39,130 --> 00:25:44,770
doesn't really buy you with that much

00:25:41,340 --> 00:25:47,650
because the imap also works perfectly

00:25:44,770 --> 00:25:50,350
fine with calendars stewart in calif so

00:25:47,650 --> 00:25:53,980
you can just exchanged in mutations we

00:25:50,350 --> 00:25:56,650
are email which is completely standard

00:25:53,980 --> 00:25:59,049
even outlook and lotus notes support

00:25:56,650 --> 00:26:00,700
that quite well not perfectly but quite

00:25:59,049 --> 00:26:03,760
well so you can actually interoperate

00:26:00,700 --> 00:26:10,450
with those people and schedule meetings

00:26:03,760 --> 00:26:12,940
so but you see mmm scalability I talked

00:26:10,450 --> 00:26:15,160
about that a bit before of course are

00:26:12,940 --> 00:26:17,620
especially group theft system with the

00:26:15,160 --> 00:26:19,990
local cache is really scalable because a

00:26:17,620 --> 00:26:22,240
test that cash it does does all the

00:26:19,990 --> 00:26:23,890
operations in that cache and doesn't

00:26:22,240 --> 00:26:27,450
need to cause a server to perform

00:26:23,890 --> 00:26:30,550
operations like well sorting events or

00:26:27,450 --> 00:26:32,770
search for for context was actually

00:26:30,550 --> 00:26:36,690
processing work for searches is put on a

00:26:32,770 --> 00:26:39,310
client so it's quite fast due to the

00:26:36,690 --> 00:26:41,560
architecture because it's based on HTTP

00:26:39,310 --> 00:26:44,110
it's really super scalable you have all

00:26:41,560 --> 00:26:47,650
the features of HTTP which are used to

00:26:44,110 --> 00:26:50,050
make websites again and actually the

00:26:47,650 --> 00:26:52,990
events which are transferred by caliph

00:26:50,050 --> 00:26:55,930
the files are much smaller than a HTML

00:26:52,990 --> 00:26:58,120
page so we can actually use caches like

00:26:55,930 --> 00:27:00,880
screw it if you have a really large

00:26:58,120 --> 00:27:04,270
system to reduce the load on the

00:27:00,880 --> 00:27:06,850
application servers and use etext with

00:27:04,270 --> 00:27:09,850
that because of the tech if the cache

00:27:06,850 --> 00:27:12,040
has the eTech he knows whether the user

00:27:09,850 --> 00:27:14,350
whether the cash needs to retrieve the

00:27:12,040 --> 00:27:15,760
fire from the backend server so there

00:27:14,350 --> 00:27:21,550
are a lot of features which make that

00:27:15,760 --> 00:27:24,370
very scalable well as I said before HTTP

00:27:21,550 --> 00:27:26,710
also supports persistent connections so

00:27:24,370 --> 00:27:30,610
issuing a lot of requests isn't that bad

00:27:26,710 --> 00:27:35,140
as it sounds and but most importantly

00:27:30,610 --> 00:27:38,110
HTTP itself also supports compression so

00:27:35,140 --> 00:27:39,610
it's not so important for the events if

00:27:38,110 --> 00:27:43,630
they are transported because they are

00:27:39,610 --> 00:27:46,600
quite small but the XML of the prop find

00:27:43,630 --> 00:27:50,560
can become quite big I put some numbers

00:27:46,600 --> 00:27:54,250
off roughly so a thousand items

00:27:50,560 --> 00:27:57,100
producing XML which is about 200 k which

00:27:54,250 --> 00:27:59,620
is quite a lot but because the XML so

00:27:57,100 --> 00:28:02,220
we're both it also compresses very well

00:27:59,620 --> 00:28:05,320
so if you enable gzip compression and

00:28:02,220 --> 00:28:08,530
the client it just comes out as 12 k

00:28:05,320 --> 00:28:10,600
which is quite okay and well even for

00:28:08,530 --> 00:28:14,230
10,000 events which is quite a lot for

00:28:10,600 --> 00:28:16,390
were single folder it just well it's not

00:28:14,230 --> 00:28:17,590
just it's more it's 130 k which is

00:28:16,390 --> 00:28:22,399
significant

00:28:17,590 --> 00:28:27,859
acceptable in my opinion but most

00:28:22,399 --> 00:28:31,460
extensions which exists to that protocol

00:28:27,859 --> 00:28:34,639
are trying to improve the situation with

00:28:31,460 --> 00:28:37,039
the xml overhead and especially apples

00:28:34,639 --> 00:28:38,779
doing a lot of work on that as a dove in

00:28:37,039 --> 00:28:42,019
epic calendar server which is completely

00:28:38,779 --> 00:28:44,779
open source and it's written in Python

00:28:42,019 --> 00:28:48,259
and more or less acts as a test that for

00:28:44,779 --> 00:28:50,509
test bed for features develop of the

00:28:48,259 --> 00:28:52,279
Apple servers cyberstep boo which also

00:28:50,509 --> 00:28:54,259
worked on the Caliph specification

00:28:52,279 --> 00:28:57,049
involves a Cardiff specification and

00:28:54,259 --> 00:28:59,419
before he puts those into specifications

00:28:57,049 --> 00:29:02,690
he usually implements that in the apple

00:28:59,419 --> 00:29:05,239
server and for reducing the prop went

00:29:02,690 --> 00:29:07,580
over there actually two things the one

00:29:05,239 --> 00:29:11,840
thing which is already in production use

00:29:07,580 --> 00:29:13,879
as ctx ctx are like eat X and eat excess

00:29:11,840 --> 00:29:16,970
whether an event has changed by some

00:29:13,879 --> 00:29:20,330
other users or by some other means it's

00:29:16,970 --> 00:29:22,399
a seat tech as roughly the same except

00:29:20,330 --> 00:29:24,619
that it covers a whole collection a

00:29:22,399 --> 00:29:27,379
whole folder so if anything on the

00:29:24,619 --> 00:29:29,869
folder changes the sea tech changes so

00:29:27,379 --> 00:29:32,359
the client can check for the sea tech

00:29:29,869 --> 00:29:36,320
and a witch only if it changed it does a

00:29:32,359 --> 00:29:39,859
full prop find the nice thing is again

00:29:36,320 --> 00:29:41,989
if you writin a calendar inclined you

00:29:39,859 --> 00:29:44,019
can check for the sea tech and if it

00:29:41,989 --> 00:29:48,019
doesn't work you can still do the

00:29:44,019 --> 00:29:50,419
regular prop find so it's very easy to

00:29:48,019 --> 00:29:54,679
fall back to basic functionality if

00:29:50,419 --> 00:29:57,349
that's necessary and very newer just got

00:29:54,679 --> 00:30:02,599
into the apple server trunk a few months

00:29:57,349 --> 00:30:04,879
ago as a java-based pops up that's a way

00:30:02,599 --> 00:30:08,029
to let the server inform you about

00:30:04,879 --> 00:30:09,859
changes so it's actually a an

00:30:08,029 --> 00:30:12,590
information trigger at a notification

00:30:09,859 --> 00:30:15,710
triggered by the server if something

00:30:12,590 --> 00:30:18,590
changed in the server so the client only

00:30:15,710 --> 00:30:21,229
needs to do the prop find if something

00:30:18,590 --> 00:30:23,779
actually changed and that's awesome

00:30:21,229 --> 00:30:27,619
everything standards-based it's jabber

00:30:23,779 --> 00:30:30,020
and if it isn't available the client can

00:30:27,619 --> 00:30:33,890
just fall back to see Tex and two

00:30:30,020 --> 00:30:37,100
elephant in the second row it's really

00:30:33,890 --> 00:30:38,780
not bloating the code actually well and

00:30:37,100 --> 00:30:42,020
all the extensions you can actually look

00:30:38,780 --> 00:30:46,270
at that it's a written in Python it's

00:30:42,020 --> 00:30:46,270
okay to read and available for Apple

00:30:46,750 --> 00:30:53,240
they are a set of known issues but most

00:30:51,050 --> 00:30:55,550
issues if you talk about cardiff &

00:30:53,240 --> 00:31:00,290
cardiff are not related to the protocols

00:30:55,550 --> 00:31:02,660
it's usually with related to the data

00:31:00,290 --> 00:31:06,140
format which is I calendar or we card

00:31:02,660 --> 00:31:08,110
because especially I calendar can be

00:31:06,140 --> 00:31:10,250
quite complex for example if you have

00:31:08,110 --> 00:31:13,280
recurring appointments and stuff like

00:31:10,250 --> 00:31:15,740
that you can an icon you can boot pretty

00:31:13,280 --> 00:31:18,410
complex recurrence words which are not

00:31:15,740 --> 00:31:20,930
supported by any client but in the case

00:31:18,410 --> 00:31:23,450
of open source Kelly Melling clients

00:31:20,930 --> 00:31:26,060
it's no issue if you want to add Calif

00:31:23,450 --> 00:31:28,340
support because those clients are based

00:31:26,060 --> 00:31:31,130
on I kln and we cut anyway so the

00:31:28,340 --> 00:31:33,680
developers of Mozilla of evolution end

00:31:31,130 --> 00:31:36,050
of contact all it did all the hard work

00:31:33,680 --> 00:31:38,690
of doing the icon implementation for

00:31:36,050 --> 00:31:42,800
example the best I colon implementation

00:31:38,690 --> 00:31:46,010
has a contact i would say there are a

00:31:42,800 --> 00:31:48,560
few other issues but you are not really

00:31:46,010 --> 00:31:50,120
hurt by that in practice you can we can

00:31:48,560 --> 00:31:55,100
talk about that if you want into the net

00:31:50,120 --> 00:31:59,260
it shouldn't be inverted okay i want to

00:31:55,100 --> 00:31:59,260
tell a bit about the implementations

00:31:59,290 --> 00:32:05,690
that's about the situation MIT of last

00:32:02,870 --> 00:32:08,030
year there we are those group death

00:32:05,690 --> 00:32:11,810
effort which I started personally and

00:32:08,030 --> 00:32:14,630
about enter of 2004 there but a few

00:32:11,810 --> 00:32:16,730
smaller leno's which support that like

00:32:14,630 --> 00:32:19,460
open group via a citadel and II group

00:32:16,730 --> 00:32:21,590
via say was of work on the Caliph

00:32:19,460 --> 00:32:26,660
standard which is mostly done by or was

00:32:21,590 --> 00:32:29,690
done by Oracle by Apple and also beta

00:32:26,660 --> 00:32:31,700
work which is an education educational

00:32:29,690 --> 00:32:35,780
calendaring system it's written by an

00:32:31,700 --> 00:32:39,020
American University and but really the

00:32:35,780 --> 00:32:41,150
huge amount of goofier system open

00:32:39,020 --> 00:32:43,460
source compared system just invented a

00:32:41,150 --> 00:32:44,230
known protocol for their needs so for

00:32:43,460 --> 00:32:47,290
example if you

00:32:44,230 --> 00:32:49,780
contact you have something like I think

00:32:47,290 --> 00:32:54,130
10 or 15 different plugins which can

00:32:49,780 --> 00:32:57,010
connect to the Google servers and but

00:32:54,130 --> 00:32:59,020
right now i think in fresh meat there

00:32:57,010 --> 00:33:03,630
are over 400 different group where

00:32:59,020 --> 00:33:08,710
systems listed so it can be the solution

00:33:03,630 --> 00:33:12,280
but surprisingly and last year so calif

00:33:08,710 --> 00:33:14,500
really got got adopted by a huge amount

00:33:12,280 --> 00:33:16,840
of windows that's mostly because

00:33:14,500 --> 00:33:19,720
everyone for some reason wanted to

00:33:16,840 --> 00:33:21,940
support the apple ical client and the

00:33:19,720 --> 00:33:25,780
apple ical client only use the color of

00:33:21,940 --> 00:33:29,320
protocol which they probably put into an

00:33:25,780 --> 00:33:32,290
RFC and so there was a it's the first

00:33:29,320 --> 00:33:34,840
time and as far as i know that so many

00:33:32,290 --> 00:33:37,600
when Kelly melling server winners agreed

00:33:34,840 --> 00:33:41,549
on a single specification so all of them

00:33:37,600 --> 00:33:44,049
is a support full or partial Calif

00:33:41,549 --> 00:33:48,400
necessary to direct the icar client or

00:33:44,049 --> 00:33:50,770
group death but we're a lot for example

00:33:48,400 --> 00:33:53,410
egopay also implemented a group there

00:33:50,770 --> 00:33:56,559
but there are we a lot of projects which

00:33:53,410 --> 00:33:58,720
are doing that and I expect that this

00:33:56,559 --> 00:34:02,380
will be in just a nerd like I'm app for

00:33:58,720 --> 00:34:06,100
example is for email even Google and

00:34:02,380 --> 00:34:08,889
Yahoo soup or a support Calif for kelan

00:34:06,100 --> 00:34:14,260
access last year you can access a Google

00:34:08,889 --> 00:34:16,450
Calendar using Calif so because there

00:34:14,260 --> 00:34:19,480
are so many implementations I thought I

00:34:16,450 --> 00:34:21,639
should suggest some it's mostly all of

00:34:19,480 --> 00:34:23,919
them are pretty good but it's usually

00:34:21,639 --> 00:34:26,260
the developers have some affinity with a

00:34:23,919 --> 00:34:28,810
programming language there's a deaf I

00:34:26,260 --> 00:34:30,760
car which was good which was written in

00:34:28,810 --> 00:34:33,100
PHP and so I think it's actually a

00:34:30,760 --> 00:34:36,070
standard package and Debian as well

00:34:33,100 --> 00:34:38,440
there's a diving calendar server is that

00:34:36,070 --> 00:34:41,950
that's a applebaum which was written in

00:34:38,440 --> 00:34:44,230
Python so a scalable all go which has

00:34:41,950 --> 00:34:46,270
wooden object of C beta work is that

00:34:44,230 --> 00:34:49,359
educational server which is written in

00:34:46,270 --> 00:34:51,490
Java there are lot of alternatives to

00:34:49,359 --> 00:34:54,669
that you can just browse fresh Midian

00:34:51,490 --> 00:34:57,389
find poorly about 10 java servers which

00:34:54,669 --> 00:34:57,389
are doing that

00:34:59,579 --> 00:35:13,270
so a pitching as a good racer a good dev

00:35:10,630 --> 00:35:16,270
server for example the apple ical client

00:35:13,270 --> 00:35:19,569
is not a good tough client because it

00:35:16,270 --> 00:35:22,900
uses extended calif methods so for tour

00:35:19,569 --> 00:35:27,130
to a connect epic I car you actually

00:35:22,900 --> 00:35:28,839
need a lot of colorful / Asians but well

00:35:27,130 --> 00:35:33,220
I come to the client implementations

00:35:28,839 --> 00:35:36,010
later on but it's for clients which are

00:35:33,220 --> 00:35:40,690
advertised at as caliph clients you

00:35:36,010 --> 00:35:43,030
usually can't use apache web dev but I

00:35:40,690 --> 00:35:45,490
come back to that later and I would like

00:35:43,030 --> 00:35:47,230
to have that changed actually if they

00:35:45,490 --> 00:35:51,579
are developers from the client project

00:35:47,230 --> 00:35:53,410
that's basically my well what I would

00:35:51,579 --> 00:35:55,510
like to see is that they can probably

00:35:53,410 --> 00:36:00,579
fall back to group def so that Apache is

00:35:55,510 --> 00:36:06,640
supported well if someone knows super we

00:36:00,579 --> 00:36:10,049
once tell me write me an email as i said

00:36:06,640 --> 00:36:14,529
i would suggest one of those servers

00:36:10,049 --> 00:36:17,650
well but my personal favorite as a set

00:36:14,529 --> 00:36:21,849
of apache web dev and I've put a lock of

00:36:17,650 --> 00:36:24,849
such a Apache transaction which shows

00:36:21,849 --> 00:36:27,039
that a house of four banks work for

00:36:24,849 --> 00:36:30,670
example is a client in this case first

00:36:27,039 --> 00:36:34,599
try to perform a report to fetch

00:36:30,670 --> 00:36:37,180
multiple events and in one batch and it

00:36:34,599 --> 00:36:39,460
gets a four or five return code which

00:36:37,180 --> 00:36:42,069
says that that method is not implemented

00:36:39,460 --> 00:36:46,720
and the client falls back to just

00:36:42,069 --> 00:36:48,880
retrieving the individual events and as

00:36:46,720 --> 00:36:54,089
you can see on the timestamps it's

00:36:48,880 --> 00:36:57,309
pretty fast yeah even if the next batch

00:36:54,089 --> 00:36:59,770
attend starts it's really fast it's like

00:36:57,309 --> 00:37:03,359
I don't know two or five milliseconds to

00:36:59,770 --> 00:37:05,589
which we found item from the server and

00:37:03,359 --> 00:37:08,369
actually well I come back to that later

00:37:05,589 --> 00:37:11,009
evolution and there's an implementation

00:37:08,369 --> 00:37:14,700
like but I would really like to see that

00:37:11,009 --> 00:37:16,619
in all open source clients to the

00:37:14,700 --> 00:37:19,079
implementation client implementations

00:37:16,619 --> 00:37:22,680
first yes contact and we actually

00:37:19,079 --> 00:37:26,940
implemented a group daph in contact

00:37:22,680 --> 00:37:30,230
together with some KDE people in end of

00:37:26,940 --> 00:37:33,269
two thousand four we actually also

00:37:30,230 --> 00:37:36,089
specified that group tough during that

00:37:33,269 --> 00:37:41,460
session that took about two days or

00:37:36,089 --> 00:37:44,609
weekend well the problem is that kte

00:37:41,460 --> 00:37:48,930
just reward or their infrastructures

00:37:44,609 --> 00:37:52,049
over there brought a new client library

00:37:48,930 --> 00:37:54,269
which is caught a Qunari and it will be

00:37:52,049 --> 00:37:57,630
used in some later contact versions the

00:37:54,269 --> 00:37:59,609
contact still doesn't use that and it

00:37:57,630 --> 00:38:05,819
doesn't provide any support for that

00:37:59,609 --> 00:38:08,759
deaf yet so it's quite quirky but we

00:38:05,819 --> 00:38:11,999
really hope that we will be able to

00:38:08,759 --> 00:38:13,769
change that probably of contact as

00:38:11,999 --> 00:38:17,099
ported to a Qunari we will have a

00:38:13,769 --> 00:38:19,289
development session with the Akron RT

00:38:17,099 --> 00:38:22,920
developers to add a web dev group Devon

00:38:19,289 --> 00:38:27,420
Calif super to contact I hope that we be

00:38:22,920 --> 00:38:30,210
able to do that until end of the year is

00:38:27,420 --> 00:38:33,420
the second one as evolution of course we

00:38:30,210 --> 00:38:35,609
also provided a group death back end or

00:38:33,420 --> 00:38:39,049
group theft plugin for evolution it was

00:38:35,609 --> 00:38:41,749
a noodle project it was sponsored by

00:38:39,049 --> 00:38:44,309
Hunter de andalucÃ­a and Spain

00:38:41,749 --> 00:38:46,859
unfortunately it didn't really pick up

00:38:44,309 --> 00:38:50,220
at this time so the connector just

00:38:46,859 --> 00:38:52,589
became unused unsupported and maintained

00:38:50,220 --> 00:38:55,319
so it can't be really used today and

00:38:52,589 --> 00:38:58,109
still and the CBS report repository but

00:38:55,319 --> 00:39:02,489
it's not really useful but evolution

00:38:58,109 --> 00:39:06,380
actually has reasonable that of support

00:39:02,489 --> 00:39:09,450
for one you can configure calif

00:39:06,380 --> 00:39:11,640
kelleners so you can use care of and

00:39:09,450 --> 00:39:14,069
with together with a real Calif server

00:39:11,640 --> 00:39:16,069
but it doesn't provide gupta for vex

00:39:14,069 --> 00:39:19,799
ofHe for example doesn't work as a

00:39:16,069 --> 00:39:21,540
back-end for evolution but evolution

00:39:19,799 --> 00:39:24,360
actually supports plane

00:39:21,540 --> 00:39:27,030
address books so you can store a set of

00:39:24,360 --> 00:39:30,510
context and REE card format on an Apache

00:39:27,030 --> 00:39:32,520
web dev server and evolution can

00:39:30,510 --> 00:39:35,130
probably display them edit them and it

00:39:32,520 --> 00:39:40,220
works very very well so it's quite good

00:39:35,130 --> 00:39:45,690
so I assure the bit collection browsing

00:39:40,220 --> 00:39:49,950
ok this is a dialogue of evolution for

00:39:45,690 --> 00:39:52,440
for adding a web dev address book the

00:39:49,950 --> 00:39:57,150
thing which I do not like about that one

00:39:52,440 --> 00:39:59,790
is that you need to specify the URL to

00:39:57,150 --> 00:40:01,380
the actual address book collection what

00:39:59,790 --> 00:40:04,410
I would like to see is that you just

00:40:01,380 --> 00:40:07,140
enter some URL and then would be able to

00:40:04,410 --> 00:40:09,930
browse through the server like in a fire

00:40:07,140 --> 00:40:11,880
browser because that's what web tough is

00:40:09,930 --> 00:40:14,310
all about it supports hierarchies and

00:40:11,880 --> 00:40:18,390
you can browse through them using

00:40:14,310 --> 00:40:20,400
appropriate at pop friend requests so

00:40:18,390 --> 00:40:23,280
actually if there's any evolution

00:40:20,400 --> 00:40:24,930
developer please at a rousing module

00:40:23,280 --> 00:40:26,750
which allows you to select the address

00:40:24,930 --> 00:40:29,790
books on the server you want to

00:40:26,750 --> 00:40:31,680
subscribe that would be much nicer but

00:40:29,790 --> 00:40:33,990
even this address book is pretty nice

00:40:31,680 --> 00:40:37,670
i'm just discovered that about two

00:40:33,990 --> 00:40:41,880
months ago and its really working well

00:40:37,670 --> 00:40:44,370
and as i said its supports cardiff well

00:40:41,880 --> 00:40:46,560
it's a panel for in colourfully have the

00:40:44,370 --> 00:40:50,580
same complaint you can browse the server

00:40:46,560 --> 00:40:54,120
for calendars but otherwise it works

00:40:50,580 --> 00:40:58,290
quite ok so it's quite usable but you SS

00:40:54,120 --> 00:41:00,570
at you need a real cadiz oh and finally

00:40:58,290 --> 00:41:02,880
Mozilla is a mozilla alliance which our

00:41:00,570 --> 00:41:05,880
son Burt and the lightning module for

00:41:02,880 --> 00:41:12,060
thunderbird they are actually very good

00:41:05,880 --> 00:41:13,770
because first what a few of the Mozilla

00:41:12,060 --> 00:41:16,710
sandberg developers actually work on

00:41:13,770 --> 00:41:19,800
Calif implementation so it's unlike an

00:41:16,710 --> 00:41:22,140
evolution or contact the core developers

00:41:19,800 --> 00:41:25,250
are actually into calif and support that

00:41:22,140 --> 00:41:28,920
so as a lot a lot of work on getting

00:41:25,250 --> 00:41:31,440
that working well and in addition

00:41:28,920 --> 00:41:33,930
there's a scalable over project which is

00:41:31,440 --> 00:41:37,920
just another goofy a server

00:41:33,930 --> 00:41:41,220
and the scalable Olga project provides

00:41:37,920 --> 00:41:44,309
plug-ins for Mozilla so it's just

00:41:41,220 --> 00:41:46,890
regular Mozilla extensions and those

00:41:44,309 --> 00:41:49,349
extensions are not specific to scalable

00:41:46,890 --> 00:41:53,220
all go there are real group deaf clients

00:41:49,349 --> 00:41:56,130
and real calendaring service extensions

00:41:53,220 --> 00:41:59,250
so it's quite good and it's also very

00:41:56,130 --> 00:42:01,020
easy to AG in the address book for

00:41:59,250 --> 00:42:04,700
example it also misses a collection

00:42:01,020 --> 00:42:07,410
browsing again so you can actually

00:42:04,700 --> 00:42:11,369
browse a server forum for address books

00:42:07,410 --> 00:42:13,589
on colinas what other clients are there

00:42:11,369 --> 00:42:15,720
first there's a phenom ball good earth

00:42:13,589 --> 00:42:18,420
plugin phenom ball as a synchronization

00:42:15,720 --> 00:42:20,730
server which can synchronize depth of

00:42:18,420 --> 00:42:23,369
servers with Nader with mobile devices

00:42:20,730 --> 00:42:25,170
so it's a java application server and

00:42:23,369 --> 00:42:27,450
there's a plugin for that which is a

00:42:25,170 --> 00:42:29,849
group dev plugin which can basically

00:42:27,450 --> 00:42:34,260
synchronize a group tough back end with

00:42:29,849 --> 00:42:36,690
any mobile device supported by a phenom

00:42:34,260 --> 00:42:40,589
ball personally I haven't tried it but

00:42:36,690 --> 00:42:43,200
I'm taught that it works there are the

00:42:40,589 --> 00:42:44,670
clients mulberry for example I don't

00:42:43,200 --> 00:42:47,819
like the user interface but it's

00:42:44,670 --> 00:42:51,720
actually a pretty powerful Calif and I'm

00:42:47,819 --> 00:42:53,730
a client there's Chandler which is by

00:42:51,720 --> 00:42:57,569
the open source applications foundation

00:42:53,730 --> 00:42:59,400
which also is based on web dev yes of

00:42:57,569 --> 00:43:02,040
course at the icon there's another one

00:42:59,400 --> 00:43:04,049
which is called en client and outlook

00:43:02,040 --> 00:43:06,150
actually is as even a open source

00:43:04,049 --> 00:43:10,109
project called open connector which

00:43:06,150 --> 00:43:12,089
implements a caliph protocol but it's

00:43:10,109 --> 00:43:14,970
not very fast so if you are developer

00:43:12,089 --> 00:43:21,030
which is into windows development they

00:43:14,970 --> 00:43:23,250
need a lot of help really so my section

00:43:21,030 --> 00:43:26,220
about actually writing such a connector

00:43:23,250 --> 00:43:28,609
as I said it's not that law shouldn't be

00:43:26,220 --> 00:43:30,930
that hard because of the open source

00:43:28,609 --> 00:43:33,510
clients already implements the hard

00:43:30,930 --> 00:43:36,450
stuff which is parsing and processing I

00:43:33,510 --> 00:43:40,049
calendar and we cards this is all done

00:43:36,450 --> 00:43:41,670
all of the clients can do that so what

00:43:40,049 --> 00:43:44,640
we need to add is basically a simple

00:43:41,670 --> 00:43:46,299
cash which keeps items we tweet by the

00:43:44,640 --> 00:43:49,479
server together with the eat

00:43:46,299 --> 00:43:53,769
and so you are so it's pretty easy and

00:43:49,479 --> 00:43:55,929
well as I said if you want to start such

00:43:53,769 --> 00:44:00,609
a connector please just with a good

00:43:55,929 --> 00:44:03,279
duffs the part we working first because

00:44:00,609 --> 00:44:05,170
you shouldn't really look into calif

00:44:03,279 --> 00:44:08,170
extensions until the group tough stuff

00:44:05,170 --> 00:44:10,410
works it's very simple and if that works

00:44:08,170 --> 00:44:13,029
you can start adding color features with

00:44:10,410 --> 00:44:14,650
appropriate for bags to improve

00:44:13,029 --> 00:44:17,140
performance or provide additional

00:44:14,650 --> 00:44:19,509
features but even if you just have good

00:44:17,140 --> 00:44:24,910
efforts it's quite good already can be

00:44:19,509 --> 00:44:28,119
used in a lot of sharing scenarios they

00:44:24,910 --> 00:44:32,199
are also quite a few libraries for doing

00:44:28,119 --> 00:44:34,479
Cardiff for example Keller for Jay and

00:44:32,199 --> 00:44:37,209
for java it's a java library to do color

00:44:34,479 --> 00:44:39,849
of care of climbed up with a python open

00:44:37,209 --> 00:44:42,160
group as a library for calif stuff v

00:44:39,849 --> 00:44:44,380
object is also a python library is a

00:44:42,160 --> 00:44:46,839
movie reclined also as a lot of calif

00:44:44,380 --> 00:44:50,199
antonella t package and various

00:44:46,839 --> 00:44:53,160
languages as well so but still I would

00:44:50,199 --> 00:44:56,769
say you don't need to use that because

00:44:53,160 --> 00:44:59,439
the XML you need to pass is just a

00:44:56,769 --> 00:45:02,469
response from the prop fine curly it's

00:44:59,439 --> 00:45:04,719
just one xml format you need to pass and

00:45:02,469 --> 00:45:06,969
it would be completely overblown to use

00:45:04,719 --> 00:45:09,519
in a separate line language for that it

00:45:06,969 --> 00:45:12,459
doesn't make any sense so you should

00:45:09,519 --> 00:45:15,819
just use your favorite HTTP library to

00:45:12,459 --> 00:45:18,400
retrieve the items from the server part

00:45:15,819 --> 00:45:25,509
you've right one xml parser which posits

00:45:18,400 --> 00:45:27,249
that prop find and that's it debugging

00:45:25,509 --> 00:45:30,849
towards well if you are developing

00:45:27,249 --> 00:45:32,439
something it's nice to have some stuff

00:45:30,849 --> 00:45:36,670
which you can use to actually try the

00:45:32,439 --> 00:45:39,429
thing and Sheckler i can show you to one

00:45:36,670 --> 00:45:41,709
or see you are probably many people who

00:45:39,429 --> 00:45:45,219
know that client it's just a

00:45:41,709 --> 00:45:47,589
command-line client to retrieve HTTP

00:45:45,219 --> 00:45:53,289
service using get or any other option

00:45:47,589 --> 00:45:56,709
need to check soap it doesn't work here

00:45:53,289 --> 00:45:59,130
it's a bit smaller screen but actually

00:45:56,709 --> 00:46:02,700
I've written myself a small

00:45:59,130 --> 00:46:05,370
shell script and the accenture stuff is

00:46:02,700 --> 00:46:07,320
basically the bottoms or stuff at the

00:46:05,370 --> 00:46:09,360
tapas just for collecting there's a

00:46:07,320 --> 00:46:12,500
password and stuff like that and the

00:46:09,360 --> 00:46:17,280
bottom actually issues a prop find and

00:46:12,500 --> 00:46:20,400
is a properties which are requested are

00:46:17,280 --> 00:46:23,460
in that pop find xml file this actually

00:46:20,400 --> 00:46:27,900
contains a standardized prop find of

00:46:23,460 --> 00:46:30,750
group def and it looks like that so it's

00:46:27,900 --> 00:46:34,260
just the core set of properties which

00:46:30,750 --> 00:46:36,510
are necessary to implement a client it

00:46:34,260 --> 00:46:39,930
actually contains some calendar oven cut

00:46:36,510 --> 00:46:45,930
off properties so if the server actually

00:46:39,930 --> 00:46:47,940
supports those okay support sauce keller

00:46:45,930 --> 00:46:49,710
protocols are 40 or more of the color

00:46:47,940 --> 00:46:52,320
porter calling can actually respond with

00:46:49,710 --> 00:46:55,500
data a plane hooked up soil would just

00:46:52,320 --> 00:46:59,840
not return anything and for example we

00:46:55,500 --> 00:46:59,840
can try that again some server actually

00:47:00,140 --> 00:47:08,030
let it come up anyways

00:47:16,610 --> 00:47:32,060
let's see iphone let me shake misprinted

00:47:32,930 --> 00:47:38,100
yep so it's very convenient to see

00:47:36,090 --> 00:47:40,950
what's a server actually responds with

00:47:38,100 --> 00:47:43,380
so that's a actually the google calendar

00:47:40,950 --> 00:47:45,810
which is requested using group def as

00:47:43,380 --> 00:47:49,800
you can see it probably you respond to

00:47:45,810 --> 00:47:51,210
that with an what the profound response

00:47:49,800 --> 00:47:54,030
that's the one you need to be able to

00:47:51,210 --> 00:47:55,860
pass for example the would you are the

00:47:54,030 --> 00:47:57,960
google mayor thing is a word collection

00:47:55,860 --> 00:48:00,720
and it contains additional stuff below

00:47:57,960 --> 00:48:03,510
if there are any features it doesn't

00:48:00,720 --> 00:48:05,760
know that puts them in such a fall for

00:48:03,510 --> 00:48:07,650
section for example this collection

00:48:05,760 --> 00:48:10,310
doesn't have a display name or a

00:48:07,650 --> 00:48:14,400
specific content type so it's quite nice

00:48:10,310 --> 00:48:16,140
so that's a Ceol it's quite easy to use

00:48:14,400 --> 00:48:17,340
to check what the server returns and

00:48:16,140 --> 00:48:21,270
what you need to pass it's quite

00:48:17,340 --> 00:48:26,240
convenient and the other tool is a

00:48:21,270 --> 00:48:32,040
cadaver cadaver is a command line client

00:48:26,240 --> 00:48:35,910
for web dev seem there ok let's try the

00:48:32,040 --> 00:48:43,800
better work solar for example so it's an

00:48:35,910 --> 00:48:46,080
interactive client I can log in and I

00:48:43,800 --> 00:48:48,120
can just go like through a file system I

00:48:46,080 --> 00:48:50,220
can explore the server and it's

00:48:48,120 --> 00:48:53,160
basically the functionality I am I would

00:48:50,220 --> 00:48:56,420
like to have an upir clients as well for

00:48:53,160 --> 00:49:00,420
exampie is a calendar of the user and

00:48:56,420 --> 00:49:03,750
there are other ICS files I can just

00:49:00,420 --> 00:49:06,120
select one and make a cat and you see I

00:49:03,750 --> 00:49:08,310
calendar so you can use any web dev

00:49:06,120 --> 00:49:09,780
client to browse such a server that's

00:49:08,310 --> 00:49:14,520
pretty nice and I can show you other

00:49:09,780 --> 00:49:19,940
service pretty easy check for example

00:49:14,520 --> 00:49:19,940
scalable ogle I can just log into that

00:49:21,690 --> 00:49:27,070
so it actually has a dress box for

00:49:24,460 --> 00:49:35,230
example you can go to contacts and those

00:49:27,070 --> 00:49:40,890
are all my address books for example any

00:49:35,230 --> 00:49:46,930
that's of just regular vcard files oops

00:49:40,890 --> 00:49:49,030
didn't cook so it's jesse v card

00:49:46,930 --> 00:49:56,820
contains inside so it's very useful for

00:49:49,030 --> 00:50:00,640
debugging so well actually almost done

00:49:56,820 --> 00:50:02,920
well cough lab as a set I would really

00:50:00,640 --> 00:50:04,750
like to get the open-source client

00:50:02,920 --> 00:50:06,850
developers to support more of that

00:50:04,750 --> 00:50:09,220
because I've finite just ridiculous that

00:50:06,850 --> 00:50:12,430
they have very good exchange connectors

00:50:09,220 --> 00:50:14,470
but no connector for group there for

00:50:12,430 --> 00:50:16,390
Cardiff because it's so easy for them

00:50:14,470 --> 00:50:18,220
they already have ical in and we card

00:50:16,390 --> 00:50:20,470
and they just need to implement they

00:50:18,220 --> 00:50:22,210
even have the HTTP libraries for doing

00:50:20,470 --> 00:50:25,420
that they just need to implement the

00:50:22,210 --> 00:50:27,340
proper requests but I've printed some

00:50:25,420 --> 00:50:30,130
features for open connector which is the

00:50:27,340 --> 00:50:33,550
open source outlook integration they

00:50:30,130 --> 00:50:37,090
need a lot of help let's just one guy

00:50:33,550 --> 00:50:39,190
which is working on that well and so if

00:50:37,090 --> 00:50:42,100
you have any questions you can write me

00:50:39,190 --> 00:50:44,980
email or the group death list as a as a

00:50:42,100 --> 00:50:47,200
good one to ask questions the Cavs

00:50:44,980 --> 00:50:52,110
r-calif and cut off list and of course

00:50:47,200 --> 00:50:52,110
you can go to the website so questions

00:50:55,839 --> 00:51:02,540
which is a smaller subset than the

00:50:58,820 --> 00:51:03,980
existing one is really nice I'm sorry if

00:51:02,540 --> 00:51:06,710
you enter this in the first slide

00:51:03,980 --> 00:51:17,270
because I right to be played but does it

00:51:06,710 --> 00:51:19,700
handle collisions and what scheduling

00:51:17,270 --> 00:51:21,650
isn't part of a group def that will be

00:51:19,700 --> 00:51:23,780
cut off scheduling but it's usually done

00:51:21,650 --> 00:51:27,290
using imap anyway so it's scattering

00:51:23,780 --> 00:51:30,380
based on email but groups are basically

00:51:27,290 --> 00:51:32,690
just regular folders there's the server

00:51:30,380 --> 00:51:35,089
can choose anything you can choose to

00:51:32,690 --> 00:51:37,579
provide any hierarchy likes and most

00:51:35,089 --> 00:51:40,790
servers i know'd also represents the

00:51:37,579 --> 00:51:43,970
groups and the coop calendars s and

00:51:40,790 --> 00:51:47,200
subfolders and collision is perfectly

00:51:43,970 --> 00:51:50,000
detected this is what HTTP eat XR about

00:51:47,200 --> 00:51:52,490
which allow optimistic locking so

00:51:50,000 --> 00:51:58,609
there's no chance that writes collide

00:51:52,490 --> 00:52:01,460
that's impossible no the server does

00:51:58,609 --> 00:52:08,089
that its standard HTTP that's done on

00:52:01,460 --> 00:52:09,859
the HTTP server the year of course a

00:52:08,089 --> 00:52:12,680
client needs to handle collision stuff

00:52:09,859 --> 00:52:14,839
too what about the server actually

00:52:12,680 --> 00:52:17,260
shakes occur whether there could be a

00:52:14,839 --> 00:52:17,260
collision

00:52:18,570 --> 00:52:24,180
no a test something like an eat tech

00:52:21,300 --> 00:52:27,090
which I explained before I'm I mean time

00:52:24,180 --> 00:52:29,480
is short to to re-explain that but it's

00:52:27,090 --> 00:52:47,280
it's perfectly working there are no

00:52:29,480 --> 00:52:49,770
concurrency issues in there there are

00:52:47,280 --> 00:52:52,410
also test suites for cut off i know that

00:52:49,770 --> 00:52:54,330
i never use them but there's a test

00:52:52,410 --> 00:52:56,700
suite also at the other side i think

00:52:54,330 --> 00:52:58,440
which is important in Python so there I

00:52:56,700 --> 00:53:01,830
don't remember the name but you can

00:52:58,440 --> 00:53:03,570
check on the Caliph website it has a lot

00:53:01,830 --> 00:53:13,530
of implementations and even the test

00:53:03,570 --> 00:53:21,360
suite a link to that so so we're links

00:53:13,530 --> 00:53:23,720
to implementations so sorry I can follow

00:53:21,360 --> 00:53:23,720
you anymore

00:53:27,010 --> 00:53:32,540
yeah I thought you are asking for a test

00:53:30,170 --> 00:53:35,720
suite or something like that yeah and

00:53:32,540 --> 00:53:37,369
there is a test week yep but not all I

00:53:35,720 --> 00:53:39,590
also of us implement everything in

00:53:37,369 --> 00:53:57,740
chesapeake say most service just

00:53:39,590 --> 00:54:05,560
implement what is required for icon okay

00:53:57,740 --> 00:54:05,560
no thank you or any more questions oh ok

00:54:10,180 --> 00:54:12,240

YouTube URL: https://www.youtube.com/watch?v=LzgomnabxdM


