Title: Web Services in Objective C   Richard Frith Macdonald & Riccardo Mottola   FOSDEM  2009
Publication date: 2011-12-22
Playlist: FOSDEM 2009
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:10,140 --> 00:00:18,720
I was hoping to see a few more people

00:00:13,430 --> 00:00:20,790
not actually a state-specific and right

00:00:18,720 --> 00:00:24,779
I forgot to introduce myself last time

00:00:20,790 --> 00:00:27,450
I'm Richard McDonald I wrote the web

00:00:24,779 --> 00:00:29,220
services library which is still

00:00:27,450 --> 00:00:33,740
something in development but it's

00:00:29,220 --> 00:00:40,230
actually used in production code so

00:00:33,740 --> 00:00:41,790
reliable what it does so far some web

00:00:40,230 --> 00:00:46,219
services is really what you doesn't

00:00:41,790 --> 00:00:49,859
matter what are their services well

00:00:46,219 --> 00:00:52,040
naively there any web based service but

00:00:49,859 --> 00:00:55,160
there's a standard

00:00:52,040 --> 00:00:57,200
definition language

00:00:55,160 --> 00:00:59,330
which is what you're really talking

00:00:57,200 --> 00:01:04,010
about when you say web services in any

00:00:59,330 --> 00:01:07,070
sort of corporate environment whether

00:01:04,010 --> 00:01:10,840
this definition language is is an XML

00:01:07,070 --> 00:01:15,020
language used by large organizations to

00:01:10,840 --> 00:01:20,330
present api's to let other people use

00:01:15,020 --> 00:01:22,720
their various services we tend to use it

00:01:20,330 --> 00:01:27,410
for talking to mobile phone operators

00:01:22,720 --> 00:01:31,250
wsdl 1.1 the de facto standard is as far

00:01:27,410 --> 00:01:36,229
as I can tell a lot everyone uses wsdl

00:01:31,250 --> 00:01:40,520
2.0 is the recommendation natural

00:01:36,229 --> 00:01:41,990
efficient standard and is not completely

00:01:40,520 --> 00:01:45,170
different but substantially different

00:01:41,990 --> 00:01:47,560
with different structure it's not

00:01:45,170 --> 00:01:47,560
compatible

00:01:51,970 --> 00:01:55,210
right

00:01:53,350 --> 00:01:58,369
mostly

00:01:55,210 --> 00:02:00,530
wsdl provides an abstract service

00:01:58,369 --> 00:02:02,659
definition for some sort of service you

00:02:00,530 --> 00:02:05,319
want to offer to other people generally

00:02:02,659 --> 00:02:05,319
viral internet

00:02:06,530 --> 00:02:12,770
has findings that Matt the abstract

00:02:10,910 --> 00:02:17,390
service definition to complete data in

00:02:12,770 --> 00:02:21,680
10 days and two specific URLs and

00:02:17,390 --> 00:02:23,540
protocols that you're going to use HTTPS

00:02:21,680 --> 00:02:27,799
or ACP

00:02:23,540 --> 00:02:33,590
we're we're about the services the main

00:02:27,799 --> 00:02:36,319
target of binding for wsdl is so which

00:02:33,590 --> 00:02:38,060
means that almost everyone mapped the

00:02:36,319 --> 00:02:42,079
abstract service definitions through

00:02:38,060 --> 00:02:44,060
so-called its theory you can use web

00:02:42,079 --> 00:02:48,170
forms there's nothing to that you can

00:02:44,060 --> 00:02:50,840
use xml RPC these a lot of things like I

00:02:48,170 --> 00:02:55,790
don't know if there's an xml RPC I think

00:02:50,840 --> 00:03:00,079
that's standard yeah i should say i'm

00:02:55,790 --> 00:03:02,620
not claiming to the grey experts on web

00:03:00,079 --> 00:03:02,620
services

00:03:03,740 --> 00:03:12,520
to standards bodies and defining things

00:03:08,600 --> 00:03:12,520
like that she gets into

00:03:13,319 --> 00:03:19,390
the mapping Web Services is done by

00:03:16,799 --> 00:03:21,340
extensibility elements which are chunks

00:03:19,390 --> 00:03:24,519
of XML it's did inside other parts of

00:03:21,340 --> 00:03:27,400
the XML and say by this bit is going to

00:03:24,519 --> 00:03:28,560
be handled by a particular extensibility

00:03:27,400 --> 00:03:30,840
beckons

00:03:28,560 --> 00:03:32,550
and all the different ladies and

00:03:30,840 --> 00:03:35,940
frameworks that support web services

00:03:32,550 --> 00:03:38,520
tend to support different subsets of the

00:03:35,940 --> 00:03:45,060
available accessibility and so they're

00:03:38,520 --> 00:03:48,930
all incompatible what's the primary user

00:03:45,060 --> 00:03:54,830
soap simple object access protocol which

00:03:48,930 --> 00:03:54,830
is a most flexible

00:03:55,280 --> 00:04:03,260
it's bloated and you have to have

00:03:57,740 --> 00:04:06,400
software to manage I desert or resort to

00:04:03,260 --> 00:04:08,990
just copy the XML documents and hacking

00:04:06,400 --> 00:04:12,860
substitutions for sections of a template

00:04:08,990 --> 00:04:16,160
economic the mainframe works available

00:04:12,860 --> 00:04:19,180
large arbor with C sharp so they're not

00:04:16,160 --> 00:04:21,410
much fun assure an object is decoder and

00:04:19,180 --> 00:04:23,570
take a difference in communication

00:04:21,410 --> 00:04:25,600
sports a lot different in kolkata

00:04:23,570 --> 00:04:30,340
watches

00:04:25,600 --> 00:04:35,430
it's largely down to wsdl being designed

00:04:30,340 --> 00:04:39,400
that way specified to be extensible and

00:04:35,430 --> 00:04:41,860
so I got into this because I work I had

00:04:39,400 --> 00:04:46,540
to integrate stuff with corporate web

00:04:41,860 --> 00:04:49,270
services I just couldn't find free

00:04:46,540 --> 00:04:52,960
software solutions to do the job in C or

00:04:49,270 --> 00:04:58,840
objective c ja Rule is readily available

00:04:52,960 --> 00:05:02,590
because this stuff under the main

00:04:58,840 --> 00:05:05,500
McClatchy label I think really be using

00:05:02,590 --> 00:05:08,410
Java from other services is painful slow

00:05:05,500 --> 00:05:10,900
operation you have to start a virtual

00:05:08,410 --> 00:05:14,320
machine and running gen right for the

00:05:10,900 --> 00:05:18,969
students so we needed a free Objective C

00:05:14,320 --> 00:05:21,779
or seasons since I

00:05:18,969 --> 00:05:21,779
Tennessee don't

00:05:21,990 --> 00:05:25,720
there you can do step web services

00:05:24,220 --> 00:05:28,180
likely was written for better

00:05:25,720 --> 00:05:31,050
performance via towers are very java

00:05:28,180 --> 00:05:31,050
stuff the sound of that

00:05:31,160 --> 00:05:37,730
and of course we target the most common

00:05:34,040 --> 00:05:41,750
wsdl sensors specifically the ones I

00:05:37,730 --> 00:05:47,710
need a TV sniffles the idea is to make

00:05:41,750 --> 00:05:47,710
it easy to extend make they friendly

00:05:47,770 --> 00:05:56,349
a couple more options so the library's

00:05:53,949 --> 00:05:59,520
written on courtesy it fills with the

00:05:56,349 --> 00:06:01,280
news that make or Apple expert

00:05:59,520 --> 00:06:04,389
completely portable

00:06:01,280 --> 00:06:04,389
it's a fact issue

00:06:04,500 --> 00:06:14,500
intimates wsdl 1.1 what the less say

00:06:09,910 --> 00:06:16,390
hopefully common standard get something

00:06:14,500 --> 00:06:19,930
for so finding since that's what

00:06:16,390 --> 00:06:22,480
everyone users can needs to be extended

00:06:19,930 --> 00:06:27,420
to the others emphasis designed with the

00:06:22,480 --> 00:06:29,890
extensibility elements to be expensive

00:06:27,420 --> 00:06:33,390
it makes it simple to my clients without

00:06:29,890 --> 00:06:33,390
having to east java receipt

00:06:34,510 --> 00:06:42,280
so the way it works is to pass wsdl

00:06:39,520 --> 00:06:46,860
documents to produce a tree of objects

00:06:42,280 --> 00:06:46,860
then I'd be examined in 15

00:06:48,050 --> 00:06:53,090
you can also generate wsdl documents

00:06:50,960 --> 00:06:54,949
from the tree of objects which means the

00:06:53,090 --> 00:06:58,669
possibility of actually writing don't

00:06:54,949 --> 00:07:00,080
dress the other editors and future in

00:06:58,669 --> 00:07:08,169
order to support that we have a

00:07:00,080 --> 00:07:08,169
lightweight XML tree into rotation and

00:07:08,449 --> 00:07:14,629
the main operation you actually end up

00:07:12,050 --> 00:07:16,909
dead hopefully it's telling a GWS

00:07:14,629 --> 00:07:20,360
service object to perform the particular

00:07:16,909 --> 00:07:24,229
service to talk to a service and perform

00:07:20,360 --> 00:07:27,020
an operation we also provide an xml RPC

00:07:24,229 --> 00:07:31,960
tender that's purely because I think

00:07:27,020 --> 00:07:37,389
I'll view XYZ is a far superior protocol

00:07:31,960 --> 00:07:37,389
so so if you can possibly ladyship

00:07:37,810 --> 00:07:46,150
so we've got supernus amazing for this

00:07:40,810 --> 00:07:47,980
operations there's no wsdl extensibility

00:07:46,150 --> 00:07:51,070
finding threats of are easily available

00:07:47,980 --> 00:07:52,930
yet though it would be knighted someone

00:07:51,070 --> 00:07:56,650
contributing that they got right one in

00:07:52,930 --> 00:08:01,389
future what that actually means is that

00:07:56,650 --> 00:08:05,139
you can't take the wsdl document inhabit

00:08:01,389 --> 00:08:07,240
it generates the xml RPC carried

00:08:05,139 --> 00:08:13,300
entirely for you you've got to do a bit

00:08:07,240 --> 00:08:15,460
of it yourself there's not a baker if

00:08:13,300 --> 00:08:19,200
you don't need to use of us BLM site

00:08:15,460 --> 00:08:19,200
just use the xml RPC

00:08:20,169 --> 00:08:24,999
nice of course we can I saving

00:08:23,289 --> 00:08:26,740
you can use it directly to save the

00:08:24,999 --> 00:08:32,789
request so you don't have to use it as

00:08:26,740 --> 00:08:32,789
part of the web services structure

00:08:33,120 --> 00:08:38,849
however the gws service understands the

00:08:37,110 --> 00:08:42,300
soap extensibility other needs in the

00:08:38,849 --> 00:08:45,779
wsdl and that allows them to know the

00:08:42,300 --> 00:08:49,710
service using soap with a minimum of

00:08:45,779 --> 00:08:52,170
effort you don't have to fill in details

00:08:49,710 --> 00:08:55,190
to tell it whether it's basically using

00:08:52,170 --> 00:08:55,190
literal encoding

00:08:55,240 --> 00:09:00,360
or not because the wsdl until it up for

00:08:58,690 --> 00:09:05,390
you

00:09:00,360 --> 00:09:05,390
right so the top of the structure

00:09:05,860 --> 00:09:12,040
is the gws document let's initialized

00:09:09,100 --> 00:09:16,060
from a URL gently or it may be from a

00:09:12,040 --> 00:09:19,690
boat and five lap downloads although

00:09:16,060 --> 00:09:22,930
it's in the file part of it and create

00:09:19,690 --> 00:09:24,820
an instance GWS documents and provides

00:09:22,930 --> 00:09:28,680
methods to examine the contents of the

00:09:24,820 --> 00:09:32,260
document and modify us so we can edit it

00:09:28,680 --> 00:09:34,149
also provides a mechanism to regenerate

00:09:32,260 --> 00:09:38,829
the rest the old document so you can

00:09:34,149 --> 00:09:41,079
post out a new version finally it

00:09:38,829 --> 00:09:43,149
provides a registration mechanism for

00:09:41,079 --> 00:09:45,870
the Hammond was to deal with wsdl

00:09:43,149 --> 00:09:45,870
expense

00:09:51,250 --> 00:09:58,060
within the document you have various

00:09:54,550 --> 00:10:02,050
other objects at the top level the gws

00:09:58,060 --> 00:10:05,380
document inside you have GWS messages

00:10:02,050 --> 00:10:09,760
which encapsulate the xml message

00:10:05,380 --> 00:10:12,190
element in the wsdl document we've got

00:10:09,760 --> 00:10:15,790
the gws port type which encapsulates in

00:10:12,190 --> 00:10:18,610
port type from the eczema bindings port

00:10:15,790 --> 00:10:21,520
service but these are the major

00:10:18,610 --> 00:10:28,590
components that appear in a wsdl

00:10:21,520 --> 00:10:28,590
document on that on two objects with me

00:10:30,789 --> 00:10:40,270
the gws message

00:10:34,180 --> 00:10:42,220
which is the XML message is the abstract

00:10:40,270 --> 00:10:45,070
idea of passing data between two point

00:10:42,220 --> 00:10:47,620
one sister says here's base server

00:10:45,070 --> 00:10:53,170
here's the client we're passing this

00:10:47,620 --> 00:10:57,209
data you can contain documentation so

00:10:53,170 --> 00:10:59,529
that an element is laughingly XML

00:10:57,209 --> 00:11:02,010
document what that message is faced

00:10:59,529 --> 00:11:02,010
before

00:11:02,619 --> 00:11:08,419
will contain a list of leg parts those

00:11:05,659 --> 00:11:11,889
are the actual data items together to

00:11:08,419 --> 00:11:11,889
make up that message

00:11:15,670 --> 00:11:27,700
GWS port type represents a port type

00:11:20,040 --> 00:11:32,800
which is a definition of an end point

00:11:27,700 --> 00:11:34,930
you might be talking to the thing that's

00:11:32,800 --> 00:11:38,110
sitting on the end of the URL and then

00:11:34,930 --> 00:11:42,070
you're going to connect it again it can

00:11:38,110 --> 00:11:44,320
provide documentation always provides a

00:11:42,070 --> 00:11:46,570
set of named operations those are

00:11:44,320 --> 00:11:49,350
effectively the procedure calls you can

00:11:46,570 --> 00:11:51,690
make to the ten point

00:11:49,350 --> 00:11:53,940
each of those operations can consist of

00:11:51,690 --> 00:11:56,340
an input message the data you sent to it

00:11:53,940 --> 00:11:59,280
and what helpful message the data that

00:11:56,340 --> 00:12:01,680
comes back to your client and I have two

00:11:59,280 --> 00:12:07,220
folds message to indicate that some sort

00:12:01,680 --> 00:12:07,220
of error come back to your client

00:12:09,910 --> 00:12:18,980
GWS binding again each of these five

00:12:16,550 --> 00:12:20,970
years has a unique name

00:12:18,980 --> 00:12:25,569
the first

00:12:20,970 --> 00:12:29,129
it can maintain documentation but most

00:12:25,569 --> 00:12:34,389
people don't and it contains extensive

00:12:29,129 --> 00:12:37,660
Elizabeth's which basically tell you how

00:12:34,389 --> 00:12:39,670
to handle something how whether you're

00:12:37,660 --> 00:12:44,079
going to be so for eczema larkin see or

00:12:39,670 --> 00:12:45,939
whatever each binding reference is a

00:12:44,079 --> 00:12:48,519
particular port time so it's talking

00:12:45,939 --> 00:12:52,899
about how that poor type is handled our

00:12:48,519 --> 00:12:54,879
operations center that port and in this

00:12:52,899 --> 00:12:57,869
the operations that you already have

00:12:54,879 --> 00:13:00,160
listed in port type that this time

00:12:57,869 --> 00:13:02,079
rather than just specifying what the

00:13:00,160 --> 00:13:04,389
operations are in an abstract Williams

00:13:02,079 --> 00:13:07,389
or the port side of us this gives you

00:13:04,389 --> 00:13:12,040
the extensibility I it tells you how

00:13:07,389 --> 00:13:15,209
those operations are actually manage how

00:13:12,040 --> 00:13:15,209
the data is in curtains

00:13:17,710 --> 00:13:21,810
said of course

00:13:23,270 --> 00:13:27,950
the concrete example of a name at the

00:13:26,060 --> 00:13:30,500
end point if the port type tells you

00:13:27,950 --> 00:13:33,860
what coming to end point you've got the

00:13:30,500 --> 00:13:36,930
port tells you you have a particular

00:13:33,860 --> 00:13:38,860
port it's on this particular

00:13:36,930 --> 00:13:43,110
that

00:13:38,860 --> 00:13:43,110
given the poor so the message

00:13:43,540 --> 00:13:52,839
if you've got a soap extensibility in

00:13:49,540 --> 00:13:57,070
the gws port that me tell you that the

00:13:52,839 --> 00:13:58,810
URL dr. centum is particularly URL and

00:13:57,070 --> 00:14:04,139
we can tell you the soap action headed

00:13:58,810 --> 00:14:04,139
to putting the HTTP request

00:14:07,190 --> 00:14:15,110
and I think English the gws service is

00:14:12,530 --> 00:14:20,600
where all the other information actually

00:14:15,110 --> 00:14:22,870
comes together so so this represents me

00:14:20,600 --> 00:14:25,750
any particular service are lamenting the

00:14:22,870 --> 00:14:27,880
Exile document so you can have multiple

00:14:25,750 --> 00:14:30,430
services with us

00:14:27,880 --> 00:14:34,600
each one has a relief Mesa to find the

00:14:30,430 --> 00:14:38,440
service awards again a service has

00:14:34,600 --> 00:14:39,390
documentation in the XML like that to

00:14:38,440 --> 00:14:44,610
see

00:14:39,390 --> 00:14:46,860
real best health documents it has a list

00:14:44,610 --> 00:14:49,410
of all the ports group so that is port

00:14:46,860 --> 00:14:51,780
if you remember contained the

00:14:49,410 --> 00:14:53,610
extensibility that told you the URL you

00:14:51,780 --> 00:14:56,750
actually had to connect to stuff like

00:14:53,610 --> 00:15:01,170
that as well as referencing the abstract

00:14:56,750 --> 00:15:04,580
binding information such about the poor

00:15:01,170 --> 00:15:06,750
typing is used all is each chain is

00:15:04,580 --> 00:15:11,900
information that could be

00:15:06,750 --> 00:15:14,910
compacted personally in the air service

00:15:11,900 --> 00:15:19,910
so we the service lists all the ports

00:15:14,910 --> 00:15:22,650
didn't lose the gws service object

00:15:19,910 --> 00:15:26,430
handles in Foley and operation of the

00:15:22,650 --> 00:15:29,100
service that's actually making a real

00:15:26,430 --> 00:15:32,700
concrete pool to a real server at the

00:15:29,100 --> 00:15:35,190
other heads and getting the data back so

00:15:32,700 --> 00:15:38,270
that's what you really need to use and

00:15:35,190 --> 00:15:43,950
you can use it without the gws document

00:15:38,270 --> 00:15:47,580
normally it's a normally hopefully in

00:15:43,950 --> 00:15:50,010
cars a wsdl object into a GWS document

00:15:47,580 --> 00:15:51,480
which come creates all those other

00:15:50,010 --> 00:15:56,370
objects that talks about behind the

00:15:51,480 --> 00:15:58,470
scenes you look at that GWS document for

00:15:56,370 --> 00:16:00,780
a particular service by now

00:15:58,470 --> 00:16:09,360
if a service object you started floating

00:16:00,780 --> 00:16:13,110
operations GWS element another light

00:16:09,360 --> 00:16:16,290
weight class small API represents

00:16:13,110 --> 00:16:18,090
maximal elements but omits anything that

00:16:16,290 --> 00:16:21,090
you don't actually need for supporting

00:16:18,090 --> 00:16:25,170
web services it's used throughout a

00:16:21,090 --> 00:16:27,540
curriculum letters parse trees and

00:16:25,170 --> 00:16:31,710
unpasteurized to serialize and

00:16:27,540 --> 00:16:35,060
deserialize information to need to meet

00:16:31,710 --> 00:16:37,320
its statement for enclosing so requests

00:16:35,060 --> 00:16:42,780
generally you've probably don't need to

00:16:37,320 --> 00:16:45,720
touch it that's the list of the main

00:16:42,780 --> 00:16:48,600
vessels we've got two important ribs

00:16:45,720 --> 00:16:51,750
left the extensibility elements and the

00:16:48,600 --> 00:16:57,210
coders they don't map directly to

00:16:51,750 --> 00:17:00,030
anything in XML the gws extensibility is

00:16:57,210 --> 00:17:03,810
not a mapping from one of the xml

00:17:00,030 --> 00:17:06,840
expense ability ones it's actually an

00:17:03,810 --> 00:17:11,700
object that handles dealing with an

00:17:06,840 --> 00:17:14,300
extensibility so you might have do have

00:17:11,700 --> 00:17:16,850
g WS own extensibility

00:17:14,300 --> 00:17:19,280
that provides for handling of safe

00:17:16,850 --> 00:17:20,950
extensibility of these understandable

00:17:19,280 --> 00:17:24,810
they meet

00:17:20,950 --> 00:17:27,370
and adjust the way we deal with a 2-1

00:17:24,810 --> 00:17:29,320
similarly the gws counter and its

00:17:27,370 --> 00:17:32,410
subclasses handle the encoding and

00:17:29,320 --> 00:17:34,120
decoding of the data so they they don't

00:17:32,410 --> 00:17:37,830
correspond to anything directly with

00:17:34,120 --> 00:17:43,560
document but they will convert from

00:17:37,830 --> 00:17:43,560
property list format which is the way

00:17:47,169 --> 00:17:51,700
the website property in this moment I'll

00:17:48,999 --> 00:17:53,559
say I structural inked objects

00:17:51,700 --> 00:17:55,389
additionally containing various other

00:17:53,559 --> 00:17:58,109
objects that describes the parameters

00:17:55,389 --> 00:18:01,889
you want to Pat across to remote service

00:17:58,109 --> 00:18:04,570
they have a native internal objective-c

00:18:01,889 --> 00:18:06,970
representation of your pram

00:18:04,570 --> 00:18:10,450
service results so the character takes

00:18:06,970 --> 00:18:12,630
players and complex them into a soap

00:18:10,450 --> 00:18:12,630
request

00:18:15,290 --> 00:18:18,290
accessibility

00:18:18,640 --> 00:18:24,940
the way accessibility works is that each

00:18:22,570 --> 00:18:28,960
extensibility object in the XML that the

00:18:24,940 --> 00:18:32,140
wsdl document has a namespace associated

00:18:28,960 --> 00:18:36,010
with it so what you do is you register a

00:18:32,140 --> 00:18:38,140
handler for that particular name so when

00:18:36,010 --> 00:18:42,190
the document is passed the hands of the

00:18:38,140 --> 00:18:47,650
namespace receives called comebacks from

00:18:42,190 --> 00:18:50,170
the G wsdl documents telling it about

00:18:47,650 --> 00:18:52,550
the names the extensibility items is

00:18:50,170 --> 00:18:55,310
parsing and

00:18:52,550 --> 00:18:56,930
handle it and then check that those

00:18:55,310 --> 00:18:59,299
items make sense check that it

00:18:56,930 --> 00:19:01,610
understands them

00:18:59,299 --> 00:19:03,799
if it's got an extensibility item that

00:19:01,610 --> 00:19:09,080
it has to understand and yet it doesn't

00:19:03,799 --> 00:19:11,629
it conveys a message when a message is

00:19:09,080 --> 00:19:13,399
sent out by a service we call the

00:19:11,629 --> 00:19:15,350
handler again for each of the

00:19:13,399 --> 00:19:21,289
extensibility other that's defined for

00:19:15,350 --> 00:19:26,480
that service in that case the hands that

00:19:21,289 --> 00:19:28,369
doesn't merely validate the external and

00:19:26,480 --> 00:19:31,909
check that it understands it it also

00:19:28,369 --> 00:19:34,700
takes actions on the basis of so it

00:19:31,909 --> 00:19:36,799
would say we know that the parameters

00:19:34,700 --> 00:19:39,320
actually have passed a certain order

00:19:36,799 --> 00:19:41,590
will define that order for the coder to

00:19:39,320 --> 00:19:41,590
pass

00:19:42,220 --> 00:19:46,200
you know that their senses literal

00:19:44,679 --> 00:19:49,950
rather than use

00:19:46,200 --> 00:19:55,200
dif different on Opera options for me so

00:19:49,950 --> 00:19:56,670
it will set in the poser so obviously

00:19:55,200 --> 00:19:59,400
implementing that kind of thing is

00:19:56,670 --> 00:20:02,250
fairly complex but we have an example in

00:19:59,400 --> 00:20:07,080
but we have a concrete South Dakota so

00:20:02,250 --> 00:20:10,320
the extensibility the closures and

00:20:07,080 --> 00:20:12,510
servants encode property is us to NS

00:20:10,320 --> 00:20:17,670
data objects detail is data to

00:20:12,510 --> 00:20:23,400
approximate I when I wrote that is

00:20:17,670 --> 00:20:25,520
assuming I guess you can do step or

00:20:23,400 --> 00:20:28,799
Apple audience so

00:20:25,520 --> 00:20:32,539
explain a little more in case the people

00:20:28,799 --> 00:20:32,539
here are not familiar with either the

00:20:32,630 --> 00:20:41,039
term property list cara cara women's

00:20:36,330 --> 00:20:43,230
news there is used to describe quite

00:20:41,039 --> 00:20:48,140
complex data structures consisting of

00:20:43,230 --> 00:20:56,640
collections arrays and dictionaries and

00:20:48,140 --> 00:20:59,970
strings numbers dates billions have a

00:20:56,640 --> 00:21:04,260
complex network of these objects of the

00:20:59,970 --> 00:21:06,360
properties so a coda takes this complex

00:21:04,260 --> 00:21:09,120
network of objects for at least use

00:21:06,360 --> 00:21:12,090
infinisynth virtual objects generally

00:21:09,120 --> 00:21:16,140
just a list of parameters and maybe they

00:21:12,090 --> 00:21:19,710
have some structure but it's serializes

00:21:16,140 --> 00:21:21,750
them it's a seven abstract class which

00:21:19,710 --> 00:21:23,909
means it does some things it doesn't do

00:21:21,750 --> 00:21:28,289
everything that's actually declared in

00:21:23,909 --> 00:21:32,010
its API so it has convenience methods

00:21:28,289 --> 00:21:34,230
for handling XML encoding decoding using

00:21:32,010 --> 00:21:39,120
g WS own so you can handle the

00:21:34,230 --> 00:21:43,080
serialization and deserialization for an

00:21:39,120 --> 00:21:45,539
XML document but it also has other

00:21:43,080 --> 00:21:50,240
methods for handling the delegation of

00:21:45,539 --> 00:21:54,120
encouraging a specific items and a house

00:21:50,240 --> 00:21:55,919
said the methods for determining total

00:21:54,120 --> 00:21:58,580
property lists which are actually had to

00:21:55,919 --> 00:21:58,580
fly so fast

00:21:59,590 --> 00:22:02,130
nah

00:22:02,570 --> 00:22:09,259
okay so a message is addiction you're

00:22:05,149 --> 00:22:11,380
generally speaking we had expertise in

00:22:09,259 --> 00:22:15,820
our property listed in that dictionary

00:22:11,380 --> 00:22:18,590
to tell the coder how to encode the data

00:22:15,820 --> 00:22:20,450
so we have a a method d which specifies

00:22:18,590 --> 00:22:23,779
the method name that we're going to

00:22:20,450 --> 00:22:25,820
implode the parameters key issue

00:22:23,779 --> 00:22:27,919
addiction really read the parameters the

00:22:25,820 --> 00:22:30,620
order key tells you what was based

00:22:27,919 --> 00:22:32,570
parameters have to be sent in and there

00:22:30,620 --> 00:22:36,399
akia the response coming back so see

00:22:32,570 --> 00:22:36,399
what the problem was

00:22:39,080 --> 00:22:47,240
so xmlrpc encoder will subclass of the

00:22:45,059 --> 00:22:49,340
carrier

00:22:47,240 --> 00:22:52,450
we'll take property lists and create

00:22:49,340 --> 00:22:55,160
threads maximal RPC request or response

00:22:52,450 --> 00:22:58,690
similarly decoded in the xml RPC

00:22:55,160 --> 00:22:58,690
document to a property-based

00:22:58,860 --> 00:23:05,670
that will actually handle any valid xml

00:23:03,660 --> 00:23:08,970
RPC request the Cossacks and all of

00:23:05,670 --> 00:23:11,090
these is nice and simple it's thought

00:23:08,970 --> 00:23:15,200
setting the times that we totally

00:23:11,090 --> 00:23:16,850
the date and time step that's the only

00:23:15,200 --> 00:23:20,540
thing acting like easy doesn't really

00:23:16,850 --> 00:23:22,310
cut it defines a format for date it

00:23:20,540 --> 00:23:24,800
doesn't specify the time zone so that

00:23:22,310 --> 00:23:29,630
has to be agreed between the two

00:23:24,800 --> 00:23:33,350
endpoints of a service the soap coder

00:23:29,630 --> 00:23:35,770
ads yet more keys because so far more

00:23:33,350 --> 00:23:35,770
complex

00:23:37,200 --> 00:23:42,299
right so that's the body and coding

00:23:39,510 --> 00:23:48,019
style can be our PC or documents or

00:23:42,299 --> 00:23:52,529
wrapped if you're not familiar with soap

00:23:48,019 --> 00:23:55,320
that's really telling you something

00:23:52,529 --> 00:24:00,779
about the general structure of the soap

00:23:55,320 --> 00:24:03,240
request but you've got lay how to direct

00:24:00,779 --> 00:24:05,070
an hour with it is a document format

00:24:03,240 --> 00:24:08,340
everything's kind of near the top level

00:24:05,070 --> 00:24:11,580
of the sonar pc format then you've got

00:24:08,340 --> 00:24:13,620
an xml element to say what the method

00:24:11,580 --> 00:24:19,559
name is and all the parameters in

00:24:13,620 --> 00:24:23,389
another xml element bit further down so

00:24:19,559 --> 00:24:23,389
if something you generally don't evolve

00:24:25,540 --> 00:24:31,280
that information will come from this

00:24:27,980 --> 00:24:35,120
wsdl object set it manually using that

00:24:31,280 --> 00:24:39,200
key or a wsdl document and fill it in

00:24:35,120 --> 00:24:40,970
for you similarly they use is encoded or

00:24:39,200 --> 00:24:47,980
literal tells you something about the

00:24:40,970 --> 00:24:47,980
way that data is encoded in the external

00:24:48,670 --> 00:24:53,630
essentially I remember the right way

00:24:51,020 --> 00:24:55,460
round encode it means that every element

00:24:53,630 --> 00:24:59,690
new pastor bob has had type information

00:24:55,460 --> 00:25:01,910
with it literal means past the element

00:24:59,690 --> 00:25:07,160
with the data and the other end works

00:25:01,910 --> 00:25:10,910
out what typing supposedly the message

00:25:07,160 --> 00:25:13,660
editing lets you add header information

00:25:10,910 --> 00:25:17,240
which is some other thing that same as

00:25:13,660 --> 00:25:22,250
the namespace URI in the namespace name

00:25:17,240 --> 00:25:28,430
key that you assign URI and make space

00:25:22,250 --> 00:25:31,760
name it's your soapy and the same value

00:25:28,430 --> 00:25:34,010
team is actually a special case that's

00:25:31,760 --> 00:25:38,220
not part of the soap

00:25:34,010 --> 00:25:41,190
so much as it lets you define a

00:25:38,220 --> 00:25:45,030
dictionary that has extra information

00:25:41,190 --> 00:25:48,870
therefore when you get more control over

00:25:45,030 --> 00:25:51,540
how the service that was invaded yeah I

00:25:48,870 --> 00:25:53,220
think it's pretty clear that trying to

00:25:51,540 --> 00:25:57,510
settle that manually for each so

00:25:53,220 --> 00:26:01,350
depressed dis tedious if you have a wsdl

00:25:57,510 --> 00:26:04,140
gotten handled it so when you invoke

00:26:01,350 --> 00:26:07,440
operations so this object caused the

00:26:04,140 --> 00:26:11,090
extensibility handler that does in all

00:26:07,440 --> 00:26:13,290
those values based on the extensibility

00:26:11,090 --> 00:26:17,750
information in the XML that the dollar

00:26:13,290 --> 00:26:17,750
is leaving create Dakota

00:26:23,210 --> 00:26:28,039
delegation we use that a reasonable

00:26:27,240 --> 00:26:33,859
amount

00:26:28,039 --> 00:26:39,649
since I come on practice in openstep

00:26:33,859 --> 00:26:42,950
api's so the delegate encoder is an

00:26:39,649 --> 00:26:46,220
object that handles certain operations

00:26:42,950 --> 00:26:47,840
for it always informed at certain

00:26:46,220 --> 00:26:51,019
operations when they happen then

00:26:47,840 --> 00:26:54,559
normally we have a service as the

00:26:51,019 --> 00:26:56,509
delegates of the coder if you want it

00:26:54,559 --> 00:26:59,570
you can put your own delegate in there

00:26:56,509 --> 00:27:01,789
between the service and Michaela and

00:26:59,570 --> 00:27:05,239
this affects the message is coming from

00:27:01,789 --> 00:27:07,249
Kerala to the service if you intercept

00:27:05,239 --> 00:27:08,960
those messages you can override the

00:27:07,249 --> 00:27:12,470
imperative multi-page me of any data

00:27:08,960 --> 00:27:14,629
right in your life so we've got very

00:27:12,470 --> 00:27:19,639
fine control over what actually gets

00:27:14,629 --> 00:27:21,830
sent out to the other significant custom

00:27:19,639 --> 00:27:24,169
player than Caitlyn to deal with bugs or

00:27:21,830 --> 00:27:26,710
unusual features in a service so you're

00:27:24,169 --> 00:27:33,220
talking to

00:27:26,710 --> 00:27:35,380
I have the service delegates normally a

00:27:33,220 --> 00:27:40,750
service has no other you can set up your

00:27:35,380 --> 00:27:43,299
own open for service so you could be

00:27:40,750 --> 00:27:44,710
notified when it's completed an RPC as I

00:27:43,299 --> 00:27:47,470
said something to the other end this

00:27:44,710 --> 00:27:49,570
receipt something back you can be

00:27:47,470 --> 00:27:52,750
notified links about to send something

00:27:49,570 --> 00:27:55,470
to the other end and you didn't take the

00:27:52,750 --> 00:27:57,130
data that it's about to send as

00:27:55,470 --> 00:28:00,279
completely replace it with something

00:27:57,130 --> 00:28:03,340
else similarly when the response comes

00:28:00,279 --> 00:28:05,830
back you can take the raw data coming

00:28:03,340 --> 00:28:07,750
from the other end posit your own way

00:28:05,830 --> 00:28:11,279
with something that's optimized

00:28:07,750 --> 00:28:11,279
departing a particular service

00:28:15,650 --> 00:28:21,499
the cert pages contain URL to use for an

00:28:18,980 --> 00:28:25,460
operation absolutely

00:28:21,499 --> 00:28:25,460
extensibility the port

00:28:25,500 --> 00:28:29,270
often the URLs ville

00:28:30,370 --> 00:28:35,300
almost always the URL is wrong that

00:28:32,990 --> 00:28:38,120
tends to be I think because what happens

00:28:35,300 --> 00:28:40,820
is you're a big organization they

00:28:38,120 --> 00:28:42,550
develop this they set the URL but

00:28:40,820 --> 00:28:46,309
they're doing their web service on and

00:28:42,550 --> 00:28:47,809
then they expose this nice new web

00:28:46,309 --> 00:28:50,059
service the rest of the world through a

00:28:47,809 --> 00:28:58,490
firewall that's using that to change the

00:28:50,059 --> 00:29:01,010
IP address URL is very wrong so you have

00:28:58,490 --> 00:29:04,280
to override it I do that by setting the

00:29:01,010 --> 00:29:05,900
deli turkey the servers at the moment

00:29:04,280 --> 00:29:11,290
when it's about to send the request to

00:29:05,900 --> 00:29:11,290
the other end utilities a different URL

00:29:11,530 --> 00:29:16,810
I straightforward you can change the

00:29:14,650 --> 00:29:19,500
save action pending at the HTTP request

00:29:16,810 --> 00:29:19,500
at the same time

00:29:21,370 --> 00:29:30,230
debugging well you're gonna have to do

00:29:25,429 --> 00:29:32,809
that you can set on turn debugging on

00:29:30,230 --> 00:29:36,139
globally for the websites be writing any

00:29:32,809 --> 00:29:40,190
user will do plan is blogging also

00:29:36,139 --> 00:29:43,299
generate extra information you can also

00:29:40,190 --> 00:29:45,740
use a method on the surface to turn on

00:29:43,299 --> 00:29:50,649
debugging for that service which will

00:29:45,740 --> 00:29:53,600
record all the XP an XML center receives

00:29:50,649 --> 00:29:55,129
so you can see exactly what their

00:29:53,600 --> 00:29:58,149
talents and try and figure out why the

00:29:55,129 --> 00:29:58,149
other end in the market

00:29:59,010 --> 00:30:05,040
and that will also turn on debugging

00:30:00,750 --> 00:30:08,460
indicators that service to users you can

00:30:05,040 --> 00:30:12,920
also set it at the specific terminal to

00:30:08,460 --> 00:30:12,920
turn on your logic about Taylor

00:30:14,040 --> 00:30:19,890
Jenna's a shin that's a big issue

00:30:16,140 --> 00:30:24,780
because these websites are sensitive

00:30:19,890 --> 00:30:29,060
Raceway is really designed to try and

00:30:24,780 --> 00:30:33,420
make it faster mostly because the main

00:30:29,060 --> 00:30:36,990
use iPad for it is sending SMS messages

00:30:33,420 --> 00:30:39,720
to mobile phones which occasionally

00:30:36,990 --> 00:30:43,550
needs you to send out tens or possibly

00:30:39,720 --> 00:30:43,550
even hundreds of messages a second I

00:30:43,880 --> 00:30:48,930
don't think this message as a second for

00:30:46,950 --> 00:30:51,120
a typical web service API no matter what

00:30:48,930 --> 00:30:53,570
we did but get technical terms of

00:30:51,120 --> 00:30:53,570
messages

00:30:54,550 --> 00:30:58,840
so noted earlier methods let you

00:30:56,980 --> 00:31:02,410
override the encoding because of

00:30:58,840 --> 00:31:06,220
individual items that means that if you

00:31:02,410 --> 00:31:07,870
know that most of the items that you're

00:31:06,220 --> 00:31:09,610
going to be sending as part of your

00:31:07,870 --> 00:31:12,880
service requests are actually effective

00:31:09,610 --> 00:31:14,530
constants what you can do is capture

00:31:12,880 --> 00:31:17,350
them the first time they're generated

00:31:14,530 --> 00:31:20,620
and just reset the same one again let me

00:31:17,350 --> 00:31:22,000
down so that you save the software the

00:31:20,620 --> 00:31:26,410
efforts are having to generate those

00:31:22,000 --> 00:31:28,570
items silly-willy service delegate let's

00:31:26,410 --> 00:31:32,640
let me write the encoding defending the

00:31:28,570 --> 00:31:38,380
entire request now probably you don't

00:31:32,640 --> 00:31:41,040
but on the odd occasion when performance

00:31:38,380 --> 00:31:43,600
really is the issue you can do that

00:31:41,040 --> 00:31:46,270
again you have the advantage of what the

00:31:43,600 --> 00:31:49,630
system will do is the first time around

00:31:46,270 --> 00:31:51,820
it will produce the XML that you need to

00:31:49,630 --> 00:31:56,820
send and you can then use that as a

00:31:51,820 --> 00:32:03,919
template for new versions the XML

00:31:56,820 --> 00:32:07,100
nice message the gws element class has a

00:32:03,919 --> 00:32:11,820
strange method except additional value

00:32:07,100 --> 00:32:15,269
which allows you to basically set a

00:32:11,820 --> 00:32:17,850
string value for that element that swing

00:32:15,269 --> 00:32:21,990
will be used literally in the serialized

00:32:17,850 --> 00:32:25,210
XML resulting from it again that's a

00:32:21,990 --> 00:32:28,720
mechanism of stopping

00:32:25,210 --> 00:32:30,399
you having to generate the text from the

00:32:28,720 --> 00:32:33,120
doctor you can just plug that in

00:32:30,399 --> 00:32:33,120
directly

00:32:33,330 --> 00:32:37,200
has to be used with caution obviously

00:32:35,430 --> 00:32:44,030
positive side a little value and it

00:32:37,200 --> 00:32:44,030
doesn't necessarily represent valid XML

00:32:44,390 --> 00:32:50,820
and the other thing you can do is use a

00:32:47,159 --> 00:32:55,470
standalone service is to avoid checking

00:32:50,820 --> 00:32:57,360
the wsdl so in that case you do have to

00:32:55,470 --> 00:33:03,720
fill it with all those properties

00:32:57,360 --> 00:33:09,919
yourselves without a second of winged

00:33:03,720 --> 00:33:12,210
warriors so what we've given you is

00:33:09,919 --> 00:33:15,990
something that lets you write with

00:33:12,210 --> 00:33:18,179
clients and Objective C it should lean

00:33:15,990 --> 00:33:21,510
right service you know technically as

00:33:18,179 --> 00:33:25,549
well if you want the but that's largely

00:33:21,510 --> 00:33:29,309
untested because that's not what I need

00:33:25,549 --> 00:33:34,620
the code will run on carico run with new

00:33:29,309 --> 00:33:36,270
step linux bsd windows and you can

00:33:34,620 --> 00:33:39,289
actually eat it simple by ignoring all

00:33:36,270 --> 00:33:43,760
those other than I've talked about

00:33:39,289 --> 00:33:50,060
probably a good idea is possible

00:33:43,760 --> 00:33:53,590
think that's it but Ricardo is going to

00:33:50,060 --> 00:33:53,590
give you a concrete example

00:33:55,549 --> 00:34:00,279
isn't using or what's fabulous

00:34:34,440 --> 00:34:38,240
so what I'm going to see now

00:34:38,820 --> 00:34:47,160
so it's an example user to choose web

00:34:42,000 --> 00:34:52,950
services gridley we accessed

00:34:47,160 --> 00:34:56,340
salesforce.com which is a major is a

00:34:52,950 --> 00:35:01,670
major on-demand crm solution its market

00:34:56,340 --> 00:35:01,670
leaders and simple it's not open source

00:35:03,390 --> 00:35:07,550
it's commercially used in Granite whites

00:35:05,760 --> 00:35:10,630
plan

00:35:07,550 --> 00:35:13,490
what does it mean it's on demand mean if

00:35:10,630 --> 00:35:16,370
they call it soft as a service so

00:35:13,490 --> 00:35:20,900
anything you get your browser looking

00:35:16,370 --> 00:35:23,450
and welcome everybody how do you access

00:35:20,900 --> 00:35:26,750
the data inside so if you have a cm

00:35:23,450 --> 00:35:29,030
solution you need to integrate with

00:35:26,750 --> 00:35:31,370
legacy application with other system

00:35:29,030 --> 00:35:35,390
because you need to essentially import

00:35:31,370 --> 00:35:36,830
and export data the easiest is it users

00:35:35,390 --> 00:35:39,320
you have professional use that you have

00:35:36,830 --> 00:35:42,470
another sport because it gets much more

00:35:39,320 --> 00:35:46,340
complex because companies may have to

00:35:42,470 --> 00:35:50,570
cut all those opportunities leads up to

00:35:46,340 --> 00:35:53,720
ticket cases customer support so in the

00:35:50,570 --> 00:35:55,460
tons of data but let's think about

00:35:53,720 --> 00:35:59,970
contact because if you see

00:35:55,460 --> 00:36:02,250
others since the vacation does not

00:35:59,970 --> 00:36:07,200
assign your data center you'll have

00:36:02,250 --> 00:36:11,900
access to the database so the only way

00:36:07,200 --> 00:36:14,490
you can get data in or out Salesforce or

00:36:11,900 --> 00:36:16,260
competing solution everything which is

00:36:14,490 --> 00:36:18,450
on your mind essentially follows the

00:36:16,260 --> 00:36:21,030
same philosophy is you need to pass

00:36:18,450 --> 00:36:24,300
their mechanism so they can give you

00:36:21,030 --> 00:36:27,330
tools and they did these tools them fit

00:36:24,300 --> 00:36:30,360
you you need to access the database

00:36:27,330 --> 00:36:31,950
using api's his FB i--'s are exporters

00:36:30,360 --> 00:36:37,050
web services and here we have the

00:36:31,950 --> 00:36:39,750
connection but the problem says for the

00:36:37,050 --> 00:36:42,770
prom supplies you with tools for example

00:36:39,750 --> 00:36:45,900
for all in your contact list or

00:36:42,770 --> 00:36:50,880
exporting updating doing everything with

00:36:45,900 --> 00:36:52,830
their data but these are for windows so

00:36:50,880 --> 00:36:56,220
do you have a tool for example you can

00:36:52,830 --> 00:36:59,070
take our flat file csgo finally

00:36:56,220 --> 00:37:02,910
terrifying just pump it up and drove all

00:36:59,070 --> 00:37:07,440
your orders in with time or you can

00:37:02,910 --> 00:37:09,600
update them delete them if you need

00:37:07,440 --> 00:37:12,930
something more customized they provided

00:37:09,600 --> 00:37:17,050
you with a library for java or i watch

00:37:12,930 --> 00:37:21,440
the shop accolades dotnet majority of

00:37:17,050 --> 00:37:24,530
system so with those libraries you can

00:37:21,440 --> 00:37:28,880
write custom applications you can do for

00:37:24,530 --> 00:37:34,360
example observe it or other third party

00:37:28,880 --> 00:37:34,360
vendors did make big integration tools

00:37:35,050 --> 00:37:40,820
for objective-c no libraries of sense of

00:37:37,940 --> 00:37:43,100
life around I think if I for the

00:37:40,820 --> 00:37:45,440
customer service ever say frozen tell

00:37:43,100 --> 00:37:50,270
you I have a dick bc i really don't even

00:37:45,440 --> 00:37:52,250
know what it is the web services i

00:37:50,270 --> 00:37:54,680
exported follow this horse handler so

00:37:52,250 --> 00:37:59,330
it's a complex verbose and difficult

00:37:54,680 --> 00:38:02,000
thing little explained and the vacation

00:37:59,330 --> 00:38:04,250
we think about i have product database

00:38:02,000 --> 00:38:07,340
in when you wash your hands with soap

00:38:04,250 --> 00:38:09,710
and you wash your data with so it's

00:38:07,340 --> 00:38:12,020
Laura glue the web is it to encode soft

00:38:09,710 --> 00:38:15,290
liquids and decode responses because at

00:38:12,020 --> 00:38:18,470
the end you speak to say first with

00:38:15,290 --> 00:38:22,130
liquid and they give us water this is in

00:38:18,470 --> 00:38:27,170
one who shot the short summary i can

00:38:22,130 --> 00:38:28,670
give you request will be familiar to

00:38:27,170 --> 00:38:31,670
anybody for you

00:38:28,670 --> 00:38:36,680
database as so essentially you are doing

00:38:31,670 --> 00:38:39,530
queries instead delete update they are

00:38:36,680 --> 00:38:43,460
other liquid which are serviced liquid

00:38:39,530 --> 00:38:45,319
so they actually invoke operations in

00:38:43,460 --> 00:38:48,349
the application so they are not just

00:38:45,319 --> 00:38:52,359
accessing table data but for example you

00:38:48,349 --> 00:38:56,150
can do a login which is the only known

00:38:52,359 --> 00:38:59,380
database liquid a listed here it is very

00:38:56,150 --> 00:39:03,140
important and there isn't a special

00:38:59,380 --> 00:39:05,930
database request which is the upset

00:39:03,140 --> 00:39:10,180
which is essentially an update in cell

00:39:05,930 --> 00:39:12,619
so what you typically need to do in

00:39:10,180 --> 00:39:15,770
integration is you have a bunch of

00:39:12,619 --> 00:39:17,480
orders with an unique ID and you pump

00:39:15,770 --> 00:39:19,670
them up in your system and you don't

00:39:17,480 --> 00:39:22,970
want to care if they exist or not

00:39:19,670 --> 00:39:27,650
usually what you need to do is first to

00:39:22,970 --> 00:39:29,839
do and you say and then check what

00:39:27,650 --> 00:39:32,210
didn't get in and don't update or the

00:39:29,839 --> 00:39:33,890
other way you do an update what didn't

00:39:32,210 --> 00:39:35,750
update we get a narrow fine and then

00:39:33,890 --> 00:39:38,589
you'd run instead or four then get in

00:39:35,750 --> 00:39:41,390
this is the standard way and visibly

00:39:38,589 --> 00:39:45,260
says was implemented this upset method I

00:39:41,390 --> 00:39:49,210
just put it in clear as a mode so what's

00:39:45,260 --> 00:39:51,920
despotism in short it's an application

00:39:49,210 --> 00:39:53,780
the open source

00:39:51,920 --> 00:39:56,690
positing the acoustic application

00:39:53,780 --> 00:39:58,100
project and the goal is to provide a dot

00:39:56,690 --> 00:40:00,110
data loader replacement for the

00:39:58,100 --> 00:40:03,920
corrosive environment displaying such a

00:40:00,110 --> 00:40:06,350
too many units which is the simple tool

00:40:03,920 --> 00:40:10,060
say she was provides for windows I think

00:40:06,350 --> 00:40:15,200
why Cannot I ever imagined it's obscene

00:40:10,060 --> 00:40:17,510
the the nasty other month type of pepper

00:40:15,200 --> 00:40:20,300
for the API interaction mask which is

00:40:17,510 --> 00:40:23,630
what i am writing so i'm at net class

00:40:20,300 --> 00:40:27,590
which can talk to say it was having an

00:40:23,630 --> 00:40:28,760
input which can then use thought that a

00:40:27,590 --> 00:40:30,830
lot of that is with you because

00:40:28,760 --> 00:40:33,620
essentially is a cutting tool if you

00:40:30,830 --> 00:40:35,000
want to have an integration application

00:40:33,620 --> 00:40:37,840
all you need to have a custom

00:40:35,000 --> 00:40:40,160
application you can use this class

00:40:37,840 --> 00:40:41,420
essentially i'm going to hide what's a

00:40:40,160 --> 00:40:43,870
schwoz usually provides it for other

00:40:41,420 --> 00:40:43,870
languages

00:40:44,980 --> 00:40:53,670
here I my dice system well how you talk

00:40:49,960 --> 00:40:53,670
to a spot is it says first

00:40:55,420 --> 00:41:01,210
you send a request the request is for me

00:40:59,770 --> 00:41:05,530
a dictionary so it can play some the

00:41:01,210 --> 00:41:08,920
attack it gets in call it will use the

00:41:05,530 --> 00:41:11,020
web services the sort method and then

00:41:08,920 --> 00:41:13,690
you get the response the vestments gets

00:41:11,020 --> 00:41:16,809
decoded and you have another area the

00:41:13,690 --> 00:41:18,819
paper and the only hear you have an

00:41:16,809 --> 00:41:24,250
array with all your names and phone

00:41:18,819 --> 00:41:28,450
numbers this playlist and portly things

00:41:24,250 --> 00:41:33,309
are not so easy because to web services

00:41:28,450 --> 00:41:36,670
and URL every body rarely so you need

00:41:33,309 --> 00:41:41,490
security everybody's naked and manner to

00:41:36,670 --> 00:41:44,530
make security in the case of Salesforce

00:41:41,490 --> 00:41:46,180
the world looking process is then we

00:41:44,530 --> 00:41:49,390
gathered way I will explain just the

00:41:46,180 --> 00:41:53,230
project means example of what code is

00:41:49,390 --> 00:41:54,700
implemented you have a URL you make a

00:41:53,230 --> 00:41:56,829
request with the logging unit person

00:41:54,700 --> 00:41:59,380
this is a common you around so everybody

00:41:56,829 --> 00:42:04,839
in the world will probably done the size

00:41:59,380 --> 00:42:07,420
URL even if sales process like 20 data

00:42:04,839 --> 00:42:09,040
centers in the world everywhere for this

00:42:07,420 --> 00:42:10,480
URL and you may Tel Aviv well

00:42:09,040 --> 00:42:13,270
essentially you are you have your

00:42:10,480 --> 00:42:17,559
credentials username password and a

00:42:13,270 --> 00:42:19,540
security token because if you are within

00:42:17,559 --> 00:42:22,390
an organization your username and

00:42:19,540 --> 00:42:24,339
password Alomar if you are outside which

00:42:22,390 --> 00:42:26,500
is typical to the case because you want

00:42:24,339 --> 00:42:28,329
to have a system on demand because you

00:42:26,500 --> 00:42:31,690
are overall with your left of you have a

00:42:28,329 --> 00:42:33,630
GPRS connection umps connection or you

00:42:31,690 --> 00:42:38,670
are custom and

00:42:33,630 --> 00:42:41,700
connecting you either need to clean up

00:42:38,670 --> 00:42:44,660
your IP say with that classified p

00:42:41,700 --> 00:42:46,829
organs that are talking which is as it

00:42:44,660 --> 00:42:50,309
sails coordinated talking which

00:42:46,829 --> 00:42:53,369
identifies uniquely and it gets set for

00:42:50,309 --> 00:42:55,410
each password change and it essentially

00:42:53,369 --> 00:43:00,630
our act as an additional password which

00:42:55,410 --> 00:43:03,630
means that your client is crafted once

00:43:00,630 --> 00:43:06,000
you send this plea identifying element

00:43:03,630 --> 00:43:09,539
the says was to essentially get back

00:43:06,000 --> 00:43:12,690
assessment which means like in most web

00:43:09,539 --> 00:43:15,839
application they have an ID for your

00:43:12,690 --> 00:43:21,779
session for that particular IP which is

00:43:15,839 --> 00:43:24,630
valid for a 700 hi what is not written

00:43:21,779 --> 00:43:27,240
here that you get also back and you're

00:43:24,630 --> 00:43:30,750
at porn this year at point is very all

00:43:27,240 --> 00:43:34,170
your brother request will go

00:43:30,750 --> 00:43:39,000
and this is different each time required

00:43:34,170 --> 00:43:41,490
because for load balance balancing out

00:43:39,000 --> 00:43:42,930
system of pages for every isn't it time

00:43:41,490 --> 00:43:46,230
you get one different and this is what

00:43:42,930 --> 00:43:48,270
for example discussed not always is your

00:43:46,230 --> 00:43:51,930
elders project for example one bite I

00:43:48,270 --> 00:43:54,900
discovered is that if you do and then

00:43:51,930 --> 00:43:59,820
you can do the work losses either using

00:43:54,900 --> 00:44:02,190
HTTP or sexuality both are possible of

00:43:59,820 --> 00:44:04,320
course the second connection is clear

00:44:02,190 --> 00:44:06,150
because maybe I'm sensing sensitive that

00:44:04,320 --> 00:44:09,390
there are other possible so you can

00:44:06,150 --> 00:44:12,210
query the first regime the first then

00:44:09,390 --> 00:44:16,440
you can do it on the set you on the net

00:44:12,210 --> 00:44:20,040
circular you are at the phone is that

00:44:16,440 --> 00:44:21,840
you should get an S and new your average

00:44:20,040 --> 00:44:24,300
is consistent with what you sent the

00:44:21,840 --> 00:44:27,180
first time idea that you always get a

00:44:24,300 --> 00:44:29,190
second one so if you don't support HTTPS

00:44:27,180 --> 00:44:30,810
essentially you're not going to same

00:44:29,190 --> 00:44:35,510
thing that the back so you need to

00:44:30,810 --> 00:44:35,510
realize that the URL of some example

00:44:35,960 --> 00:44:40,070
then you have the session ID you keep

00:44:37,970 --> 00:44:43,280
for our subsequent any question going to

00:44:40,070 --> 00:44:46,430
do in this case the example is that we

00:44:43,280 --> 00:44:49,599
so I'm going to get some records and I

00:44:46,430 --> 00:44:52,580
pass the request in this case it's just

00:44:49,599 --> 00:44:56,810
something which is SQL therefore it's so

00:44:52,580 --> 00:44:59,450
pure it's an SQL select from table and

00:44:56,810 --> 00:45:02,599
you find a session ID identifies you

00:44:59,450 --> 00:45:07,040
from that point on okay so you do better

00:45:02,599 --> 00:45:11,630
next one the records where it and that's

00:45:07,040 --> 00:45:14,650
impervious reports but you get an array

00:45:11,630 --> 00:45:18,470
with pipes column names are public

00:45:14,650 --> 00:45:21,140
methods and there is also a limitation

00:45:18,470 --> 00:45:24,050
because you quit wearing ten thousands

00:45:21,140 --> 00:45:24,820
of objects and you will always get done

00:45:24,050 --> 00:45:28,430
00:45:24,820 --> 00:45:32,660
55 records so

00:45:28,430 --> 00:45:34,280
this for the right bottom tella tickly

00:45:32,660 --> 00:45:37,010
if you want to get more records that is

00:45:34,280 --> 00:45:38,450
a special very more is like a query

00:45:37,010 --> 00:45:41,900
which continues that whether fever

00:45:38,450 --> 00:45:45,470
square left I do not implement this yet

00:45:41,900 --> 00:45:47,240
but this is in short that we stayed

00:45:45,470 --> 00:45:49,730
which sent the username password talking

00:45:47,240 --> 00:45:52,370
to save a valid session ID you send

00:45:49,730 --> 00:45:55,000
backs and SQL likes pavement the session

00:45:52,370 --> 00:45:57,110
ID and you will see that I other day

00:45:55,000 --> 00:45:59,060
then you have something in memory and

00:45:57,110 --> 00:46:02,300
for the moment that I provided to the

00:45:59,060 --> 00:46:04,670
CSV file product in that this time that

00:46:02,300 --> 00:46:07,730
because we body has XML which is too

00:46:04,670 --> 00:46:11,030
verbose clarifies a car in a lot of

00:46:07,730 --> 00:46:13,220
system and it lightly then so my

00:46:11,030 --> 00:46:17,780
experience that seriously I would

00:46:13,220 --> 00:46:20,900
compromise we performed this is an

00:46:17,780 --> 00:46:24,740
example I want to try to connect right

00:46:20,900 --> 00:46:27,290
now little good food for 19 days we

00:46:24,740 --> 00:46:30,770
might diabetic fine so here we see that

00:46:27,290 --> 00:46:33,260
amazing the projector is too

00:46:30,770 --> 00:46:35,840
disappointed in here you see the

00:46:33,260 --> 00:46:38,720
armor and usually just meant that your

00:46:35,840 --> 00:46:40,340
credit side thousand five minutes of

00:46:38,720 --> 00:46:43,850
danger page is quite good at the moment

00:46:40,340 --> 00:46:47,680
because important things are the me and

00:46:43,850 --> 00:46:52,670
here we see that the fiscal 545

00:46:47,680 --> 00:46:59,060
openoffice we say we get back the column

00:46:52,670 --> 00:47:01,570
name the type and the ID displayed

00:46:59,060 --> 00:47:01,570
because they do not

00:47:02,790 --> 00:47:09,790
my easy and simple but the future for

00:47:06,280 --> 00:47:13,210
that amazing well first I just reminded

00:47:09,790 --> 00:47:17,380
of you clearly because that was had a

00:47:13,210 --> 00:47:19,990
nap at the point because i did not use

00:47:17,380 --> 00:47:24,460
it wsdl passing but they call it for my

00:47:19,990 --> 00:47:25,750
hand with his head wasn't finished if it

00:47:24,460 --> 00:47:29,470
wasn't finish because when I started

00:47:25,750 --> 00:47:32,290
this the web service did not support

00:47:29,470 --> 00:47:35,020
Soviet what if you each time a new

00:47:32,290 --> 00:47:37,200
feature effects implemented it and I

00:47:35,020 --> 00:47:39,970
think we got that needed a lot actually

00:47:37,200 --> 00:47:41,470
what we have here is a demonstration of

00:47:39,970 --> 00:47:43,960
the world system works because other

00:47:41,470 --> 00:47:47,440
players are not more complicated okay so

00:47:43,960 --> 00:47:50,829
the rest is just don't work of typing

00:47:47,440 --> 00:47:53,440
and colima my main work is done then

00:47:50,829 --> 00:47:56,950
other features which the patient red

00:47:53,440 --> 00:48:00,490
meat is a better highly important

00:47:56,950 --> 00:48:04,359
outputs cs4 leading inviting its a math

00:48:00,490 --> 00:48:06,250
advice escaping unicode characters

00:48:04,359 --> 00:48:09,700
because whatever you have any

00:48:06,250 --> 00:48:11,920
reservation i can speak of experience

00:48:09,700 --> 00:48:14,470
because i used settle these commercial

00:48:11,920 --> 00:48:19,560
tools and each one has its own box and

00:48:14,470 --> 00:48:19,560
quits what are you request from

00:48:19,599 --> 00:48:24,729
the nose the web services is that at the

00:48:22,329 --> 00:48:27,819
moment performance is sub-optimal

00:48:24,729 --> 00:48:30,249
because first if you do a lot of

00:48:27,819 --> 00:48:33,130
theories you can say I hit the computer

00:48:30,249 --> 00:48:36,900
connection open and just reach into

00:48:33,130 --> 00:48:41,170
Perry at the moment reclosing open and

00:48:36,900 --> 00:48:44,739
I'd like to make change and this is more

00:48:41,170 --> 00:48:48,549
important for you for me which a harem

00:48:44,739 --> 00:48:54,029
another problem Harry I actually have

00:48:48,549 --> 00:48:54,029
that increase that but nothing can

00:48:56,039 --> 00:49:01,989
happen if you have few queries which is

00:49:00,400 --> 00:49:03,400
what you usually do it with

00:49:01,989 --> 00:49:07,450
authentication might have a lot of data

00:49:03,400 --> 00:49:11,769
the problem is better compression you

00:49:07,450 --> 00:49:13,869
can essentially zip up your bad boys xml

00:49:11,769 --> 00:49:16,180
request because so ends up banging Perry

00:49:13,869 --> 00:49:18,130
variables because you have auto type

00:49:16,180 --> 00:49:21,489
information all the space information

00:49:18,130 --> 00:49:23,559
each value is encoded and has a type

00:49:21,489 --> 00:49:25,390
information attached to it and there are

00:49:23,559 --> 00:49:26,979
all the tags around them so you end up

00:49:25,390 --> 00:49:30,099
for attending Thank You Loretta maybe

00:49:26,979 --> 00:49:35,769
even same twice that amount of data all

00:49:30,099 --> 00:49:38,559
in playing ask that so says for support

00:49:35,769 --> 00:49:40,719
and some web service remote support data

00:49:38,559 --> 00:49:42,819
compression they can admit that I use

00:49:40,719 --> 00:49:45,969
professional and expensive tools and

00:49:42,819 --> 00:49:48,789
they don't support it but the officer

00:49:45,969 --> 00:49:51,849
says was supported in the performance

00:49:48,789 --> 00:49:53,240
improvement really really eventually

00:49:51,849 --> 00:49:55,670
wave

00:49:53,240 --> 00:49:58,700
patterned after like context that

00:49:55,670 --> 00:50:02,130
everybody who have poor number

00:49:58,700 --> 00:50:06,600
okay essentially that's it we don't have

00:50:02,130 --> 00:50:10,410
more I could try to mount application

00:50:06,600 --> 00:50:13,950
and see if we have network and see this

00:50:10,410 --> 00:50:17,040
is an instant of Salesforce mmm if

00:50:13,950 --> 00:50:19,770
somebody wants to test application

00:50:17,040 --> 00:50:23,160
states was figure out of the developer

00:50:19,770 --> 00:50:24,900
environment which has other features the

00:50:23,160 --> 00:50:26,610
only thing it limits you in the download

00:50:24,900 --> 00:50:28,200
like 10 mega so you can develop

00:50:26,610 --> 00:50:30,920
everything but of course you can use it

00:50:28,200 --> 00:50:30,920
for your enterprise

00:50:45,130 --> 00:50:54,549
the application is cooling on on new

00:50:51,549 --> 00:50:58,140
step and thanks to the latest effort is

00:50:54,549 --> 00:50:58,140
already danced on the windows

00:51:03,670 --> 00:51:10,730
then she asleep not and then everybody

00:51:09,050 --> 00:51:12,910
has seen my password so i need to kill

00:51:10,730 --> 00:51:12,910
you

00:51:20,770 --> 00:51:23,770
Wow

00:51:27,670 --> 00:51:32,630
was well we did not see the dback that

00:51:30,680 --> 00:51:34,670
was retained as true it's very very rare

00:51:32,630 --> 00:51:36,470
for them in the background we had like

00:51:34,670 --> 00:51:39,349
two kilobytes of debugging information

00:51:36,470 --> 00:51:42,470
is very useful but there is a lot of

00:51:39,349 --> 00:51:45,039
debugging and then we can i play to

00:51:42,470 --> 00:51:45,039
expand it

00:51:56,190 --> 00:52:02,609
once everything was was done deposit is

00:51:59,530 --> 00:52:02,609
pretty simple

00:52:06,450 --> 00:52:12,920
the fact is that between the

00:52:08,609 --> 00:52:12,920
specification of the WSB I documented

00:52:15,190 --> 00:52:18,190
yes

00:52:41,080 --> 00:52:45,099
you see I've got

00:52:45,710 --> 00:52:52,609
so it works thank you yes I do it my

00:52:50,270 --> 00:52:55,970
demonstration isn't working it's working

00:52:52,609 --> 00:52:58,369
because actually as you have since the

00:52:55,970 --> 00:53:00,410
presentation is pretty much it's short

00:52:58,369 --> 00:53:03,050
because there is not good science behind

00:53:00,410 --> 00:53:07,970
it the problem is that for example we

00:53:03,050 --> 00:53:11,150
discover that the many cement decoders

00:53:07,970 --> 00:53:13,339
on them seven hand are very sensitive so

00:53:11,150 --> 00:53:15,290
they are all the things if you send your

00:53:13,339 --> 00:53:16,880
ass hole in your username or your

00:53:15,290 --> 00:53:19,420
username your password one walk the

00:53:16,880 --> 00:53:22,730
other one not this makes no sense book

00:53:19,420 --> 00:53:24,609
its a math but it is totally then you

00:53:22,730 --> 00:53:27,349
need to attempt to implement all the

00:53:24,609 --> 00:53:29,359
order folding just to get the parameters

00:53:27,349 --> 00:53:33,080
in the court order and there are many

00:53:29,359 --> 00:53:35,960
other critters like actions you need to

00:53:33,080 --> 00:53:40,790
be set to end this playing set of nail

00:53:35,960 --> 00:53:42,750
which just it's just be bugging so it's

00:53:40,790 --> 00:53:46,140
not all fall

00:53:42,750 --> 00:53:48,300
that's if anybody has granted to me the

00:53:46,140 --> 00:53:50,910
wsdl document is supposed to tell you

00:53:48,300 --> 00:53:54,150
all those things and usually it's right

00:53:50,910 --> 00:53:57,660
and we now have the character pass it

00:53:54,150 --> 00:54:01,050
and actually fill that only which takes

00:53:57,660 --> 00:54:03,540
out all the episodes for having to

00:54:01,050 --> 00:54:06,470
remember it and read it yourself and

00:54:03,540 --> 00:54:08,820
added in yourself you don't have the

00:54:06,470 --> 00:54:13,290
ESPN document here because they want to

00:54:08,820 --> 00:54:19,770
control the document is a is a literally

00:54:13,290 --> 00:54:22,080
be so it contains specification and for

00:54:19,770 --> 00:54:24,270
appropriate but for every response and

00:54:22,080 --> 00:54:26,190
for for every in airport it needs to

00:54:24,270 --> 00:54:29,220
specify the type so it essentially it

00:54:26,190 --> 00:54:34,610
promised effectively have any

00:54:29,220 --> 00:54:37,380
documentation and yes you need to guess

00:54:34,610 --> 00:54:38,670
we went to get the logging walk because

00:54:37,380 --> 00:54:40,650
looking is the most difficult part

00:54:38,670 --> 00:54:42,600
because you have no interaction with the

00:54:40,650 --> 00:54:45,030
system because afterwards you can get an

00:54:42,600 --> 00:54:47,190
error so I just ended up anything that

00:54:45,030 --> 00:54:51,210
is typical next now an affirmation food

00:54:47,190 --> 00:54:54,360
is said to make the city so the wsdl

00:54:51,210 --> 00:54:56,400
documents for each other pretty much

00:54:54,360 --> 00:54:59,970
contained the documentation elements

00:54:56,400 --> 00:55:02,430
which is supposed to make wsdl

00:54:59,970 --> 00:55:05,380
self-documenting it'll tell you how how

00:55:02,430 --> 00:55:08,080
you're supposed to use the service

00:55:05,380 --> 00:55:09,370
the salesforce1 don't have any

00:55:08,080 --> 00:55:12,100
documentation

00:55:09,370 --> 00:55:15,420
now no other term Western idealizes

00:55:12,100 --> 00:55:15,420
hasn't rung excess

00:55:15,910 --> 00:55:23,770
intense from human beings to put that

00:55:18,680 --> 00:55:26,000
into the wsdl in reality in general

00:55:23,770 --> 00:55:35,680
imaginative XML document by door

00:55:26,000 --> 00:55:39,500
connection so questions the portrait is

00:55:35,680 --> 00:55:47,480
he available and it may be a good

00:55:39,500 --> 00:55:49,990
 point I could use if you just

00:55:47,480 --> 00:55:49,990

YouTube URL: https://www.youtube.com/watch?v=05IQGF1M3KM


