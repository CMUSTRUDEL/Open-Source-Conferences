Title: FOSDEM 2009 FreeIPA, Identity Management
Publication date: 2011-12-22
Playlist: FOSDEM 2009
Description: 
	By Simo Sorce

Free Software Identity Management challenges and technical details

The presentation will revolve around the problems of building a modern Free Software based Identity Management Solution. The challenges we faced in trying to combine security, ease of used, standards, features, and interoperability with other solutions. The choices we have made for the current code base, and the choices we are facing going forward. The vision and future directions. The presentation will introduce the public to the technologies used, the modifications or additions we performed and will dive into technical details about how we architect the server and the future client components.


FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:06,540 --> 00:00:12,530
you ask you to turn off cell phones and

00:00:09,059 --> 00:00:12,530
stuff like that to avoid nine

00:00:15,240 --> 00:00:24,720
can begin so I'm similar object i work

00:00:17,670 --> 00:00:26,220
from reddit and about two years ago we

00:00:24,720 --> 00:00:30,990
started thinking about this project

00:00:26,220 --> 00:00:35,160
called free IPA and we actually got to

00:00:30,990 --> 00:00:37,230
implement it so i guess the first

00:00:35,160 --> 00:00:39,780
question for everybody that doesn't know

00:00:37,230 --> 00:00:43,470
it already is what is free IPA and

00:00:39,780 --> 00:00:46,019
what's it stand for so free IPA stands

00:00:43,470 --> 00:00:48,570
for free identity policy and audit and

00:00:46,019 --> 00:00:50,670
those are the three legs that compares

00:00:48,570 --> 00:00:52,890
our product the purpose of the project

00:00:50,670 --> 00:00:54,710
is to make simple to magic compass the

00:00:52,890 --> 00:00:57,690
problem and the problem is the problem

00:00:54,710 --> 00:01:00,239
managing identity management and

00:00:57,690 --> 00:01:03,030
managing a dentist in the enterprise the

00:01:00,239 --> 00:01:05,489
means are tried to use as much as

00:01:03,030 --> 00:01:10,729
possible standard components standard

00:01:05,489 --> 00:01:13,770
protocols so that it's easy to implement

00:01:10,729 --> 00:01:16,110
because used documented protocols and

00:01:13,770 --> 00:01:20,299
also it is easy to reuse already

00:01:16,110 --> 00:01:23,450
existing components of clients in your

00:01:20,299 --> 00:01:28,229
new organizations and the target is

00:01:23,450 --> 00:01:31,829
system in stratum 47 200 years and what

00:01:28,229 --> 00:01:35,189
we tried complished is to have a system

00:01:31,829 --> 00:01:37,649
that is certainly complex but also easy

00:01:35,189 --> 00:01:39,479
enough to use that you don't have to be

00:01:37,649 --> 00:01:47,429
an expert in every single components of

00:01:39,479 --> 00:01:51,020
system but the next question is why

00:01:47,429 --> 00:01:51,020
should I care about something like that

00:01:52,759 --> 00:01:59,600
well the point is that every

00:01:55,799 --> 00:02:01,710
organization that is not very small

00:01:59,600 --> 00:02:05,429
organization like anything that is more

00:02:01,710 --> 00:02:10,860
than 10 users need to manage users and

00:02:05,429 --> 00:02:13,230
resources inside it so if you look at

00:02:10,860 --> 00:02:17,550
the IDM landscape what you see is that

00:02:13,230 --> 00:02:19,920
so far only proprietary software was

00:02:17,550 --> 00:02:24,720
available for organizations that need to

00:02:19,920 --> 00:02:26,960
do some complex identity management of

00:02:24,720 --> 00:02:30,980
course there have been four

00:02:26,960 --> 00:02:33,890
many as 20 is more single building

00:02:30,980 --> 00:02:37,100
blocks that were available like MIT

00:02:33,890 --> 00:02:41,120
kerberos various ldap implementations

00:02:37,100 --> 00:02:44,720
like openldap and other web servers all

00:02:41,120 --> 00:02:47,960
kinds of web servers different kind of

00:02:44,720 --> 00:02:50,360
policy and auditing servers but to be

00:02:47,960 --> 00:02:53,600
able to have a comprehensive and a

00:02:50,360 --> 00:02:56,650
complex system integrated you really had

00:02:53,600 --> 00:02:59,960
to be an expert in a every single of

00:02:56,650 --> 00:03:03,290
these components and these kind of

00:02:59,960 --> 00:03:04,970
expertise is not that common while there

00:03:03,290 --> 00:03:08,510
are probably many of you that really

00:03:04,970 --> 00:03:10,370
knows how to manage one or many of this

00:03:08,510 --> 00:03:14,570
system being able to really manage them

00:03:10,370 --> 00:03:18,650
all in a way that can be easily applied

00:03:14,570 --> 00:03:21,800
to an organization it has multiple you

00:03:18,650 --> 00:03:25,130
know sites or multiple administrators

00:03:21,800 --> 00:03:29,180
not it's not easy indeed it wasn't it's

00:03:25,130 --> 00:03:32,270
never common when I go to enterprises I

00:03:29,180 --> 00:03:34,070
find that I use various proprietary

00:03:32,270 --> 00:03:37,550
products for that reason and they cannot

00:03:34,070 --> 00:03:39,260
trust one or two administrators together

00:03:37,550 --> 00:03:41,480
the load of the whole organization

00:03:39,260 --> 00:03:43,850
especially if it's very big so they

00:03:41,480 --> 00:03:46,610
leave you things like using if they if

00:03:43,850 --> 00:03:49,760
they are kind of windows shop today they

00:03:46,610 --> 00:03:53,450
tend to use ad Active Directory to use

00:03:49,760 --> 00:03:56,180
NT four domains or edirectory before if

00:03:53,450 --> 00:03:59,180
they've been mostly unique shop they may

00:03:56,180 --> 00:04:02,500
still be using CAA trust all these kinds

00:03:59,180 --> 00:04:02,500
of products and the problem is that

00:04:04,060 --> 00:04:10,330
these pallets basically held the case of

00:04:07,400 --> 00:04:12,800
your organization they have the very

00:04:10,330 --> 00:04:15,800
entry point you have the user identity

00:04:12,800 --> 00:04:21,560
they have the credentials so basically

00:04:15,800 --> 00:04:26,300
is a very effective method to lock you

00:04:21,560 --> 00:04:27,500
in in there into their business so if

00:04:26,300 --> 00:04:30,670
you want to have a fully free

00:04:27,500 --> 00:04:33,140
environment or without you actually need

00:04:30,670 --> 00:04:34,970
also a free identity management system

00:04:33,140 --> 00:04:37,430
so that you can have no only your free

00:04:34,970 --> 00:04:39,169
servers but also a completely free

00:04:37,430 --> 00:04:42,860
environment where you use them

00:04:39,169 --> 00:04:45,789
and I believe a lot in security plus

00:04:42,860 --> 00:04:49,789
freedom and buy my freedom here I mean

00:04:45,789 --> 00:04:52,789
free software open source you can expect

00:04:49,789 --> 00:04:55,400
it but also being able to switch to

00:04:52,789 --> 00:04:57,349
someone else if you are not satisfied by

00:04:55,400 --> 00:04:59,539
the security that your current security

00:04:57,349 --> 00:05:02,810
providers provides you when you have a

00:04:59,539 --> 00:05:04,460
closed source solution it's very

00:05:02,810 --> 00:05:06,919
difficult it's extremely difficult

00:05:04,460 --> 00:05:08,060
actually to try to move some at

00:05:06,919 --> 00:05:11,090
something else you're basically

00:05:08,060 --> 00:05:13,370
completely at the mercy of the of the

00:05:11,090 --> 00:05:15,979
organization that provides you that

00:05:13,370 --> 00:05:18,229
solution because basically every single

00:05:15,979 --> 00:05:20,300
machine in your organization is tied to

00:05:18,229 --> 00:05:28,249
that solution and try to change it on

00:05:20,300 --> 00:05:31,069
the fly is it's very hard task so let's

00:05:28,249 --> 00:05:34,370
try to dive in into what is data entry

00:05:31,069 --> 00:05:38,599
management problem what we face when we

00:05:34,370 --> 00:05:41,180
start this project were basically more

00:05:38,599 --> 00:05:45,550
or less these needs we need the single

00:05:41,180 --> 00:05:48,349
source for identities because

00:05:45,550 --> 00:05:53,139
duplication is usually confusion we came

00:05:48,349 --> 00:05:55,759
from situation many customers where

00:05:53,139 --> 00:05:57,710
people basically used to replicate the

00:05:55,759 --> 00:05:59,779
user from server to server to server and

00:05:57,710 --> 00:06:02,960
tried many ways to keep them

00:05:59,779 --> 00:06:09,050
synchronized especially in the linux

00:06:02,960 --> 00:06:14,539
space some organization used na s or an

00:06:09,050 --> 00:06:19,159
AS plus very few used held up and the

00:06:14,539 --> 00:06:22,969
reason for not using this the system

00:06:19,159 --> 00:06:27,919
were depending mostly on the history

00:06:22,969 --> 00:06:29,659
organization but some felt that having

00:06:27,919 --> 00:06:34,339
to depend on an external network

00:06:29,659 --> 00:06:36,680
services was not trustworthy enough at a

00:06:34,339 --> 00:06:40,610
time almost too complex or was too

00:06:36,680 --> 00:06:43,129
fragile the second problem or a second

00:06:40,610 --> 00:06:45,409
need is single sign-on or single

00:06:43,129 --> 00:06:47,959
password which are two quite different

00:06:45,409 --> 00:06:49,750
things by single sign-on I mean you

00:06:47,959 --> 00:06:53,000
don't have to put your password anywhere

00:06:49,750 --> 00:06:55,310
so you you are

00:06:53,000 --> 00:06:58,520
you can authenticate on your client

00:06:55,310 --> 00:07:00,260
machine and go and connect to any single

00:06:58,520 --> 00:07:03,800
machine your organization without having

00:07:00,260 --> 00:07:08,570
to provide your credential anymore while

00:07:03,800 --> 00:07:12,410
single pasture is you know at the end of

00:07:08,570 --> 00:07:13,760
2nd class or fallback position where at

00:07:12,410 --> 00:07:16,100
least you have the same pass or

00:07:13,760 --> 00:07:18,530
everywhere but you still have to provide

00:07:16,100 --> 00:07:22,910
it on every several on most of the

00:07:18,530 --> 00:07:24,920
service you connect you now to achieve

00:07:22,910 --> 00:07:28,669
single source of identity and single

00:07:24,920 --> 00:07:31,700
sign-on or single password you also need

00:07:28,669 --> 00:07:33,710
a single data store for an engineer

00:07:31,700 --> 00:07:36,260
reporting because you need to be sure

00:07:33,710 --> 00:07:37,790
that everything is working as you expect

00:07:36,260 --> 00:07:39,530
and you have you need to be able to

00:07:37,790 --> 00:07:43,270
report what's going on in your

00:07:39,530 --> 00:07:46,820
organization once you spread

00:07:43,270 --> 00:07:49,070
authentication or identity in the whole

00:07:46,820 --> 00:07:52,070
organization need to be able to know

00:07:49,070 --> 00:07:53,330
that actually your machines are in

00:07:52,070 --> 00:07:55,820
compliance with the organization

00:07:53,330 --> 00:07:58,090
policies that you know when you change

00:07:55,820 --> 00:08:01,300
the password somewhere the strength is

00:07:58,090 --> 00:08:05,030
control so that you don't use a too

00:08:01,300 --> 00:08:07,210
common password or that the machine it's

00:08:05,030 --> 00:08:09,290
actually inside of this network is

00:08:07,210 --> 00:08:11,860
actually really applying the policies

00:08:09,290 --> 00:08:15,410
that come down from your network and

00:08:11,860 --> 00:08:16,729
finally you want single point of

00:08:15,410 --> 00:08:18,590
management you want to have a

00:08:16,729 --> 00:08:19,970
comprehensive view you don't want you

00:08:18,590 --> 00:08:22,370
don't want to have multiple assistants

00:08:19,970 --> 00:08:24,620
you have to touch just to create a user

00:08:22,370 --> 00:08:27,530
identity you don't want to go in one

00:08:24,620 --> 00:08:29,930
place to create a user and get it for

00:08:27,530 --> 00:08:31,700
example your its POSIX attributes like

00:08:29,930 --> 00:08:33,830
the user ID and group ID and stuff like

00:08:31,700 --> 00:08:35,630
that and then go to another system to

00:08:33,830 --> 00:08:38,030
set the password and maybe another

00:08:35,630 --> 00:08:40,760
system to set some other attributes of

00:08:38,030 --> 00:08:42,800
the user or preferences or the policies

00:08:40,760 --> 00:08:44,150
you just want to go in one place so that

00:08:42,800 --> 00:08:48,350
you can see everything about the user

00:08:44,150 --> 00:08:50,300
one single comprehensive view so what

00:08:48,350 --> 00:08:53,750
are the implementation problems to

00:08:50,300 --> 00:08:56,180
achieve that so one problem is either

00:08:53,750 --> 00:08:59,030
synchronization or integration where

00:08:56,180 --> 00:09:01,490
when you have two distinct

00:08:59,030 --> 00:09:04,310
components that need to be synchronized

00:09:01,490 --> 00:09:06,440
and some organizations that wants to use

00:09:04,310 --> 00:09:09,320
both windows and unix for example

00:09:06,440 --> 00:09:10,880
there's a problem synchronizing the uses

00:09:09,320 --> 00:09:14,020
on the Active Directory side with

00:09:10,880 --> 00:09:16,490
whatever you had in the unix side

00:09:14,020 --> 00:09:18,620
another is distribution of data of

00:09:16,490 --> 00:09:20,540
credentials when you have a system where

00:09:18,620 --> 00:09:23,180
you distribute or where you try to

00:09:20,540 --> 00:09:26,720
synchronize users you have also the

00:09:23,180 --> 00:09:28,640
problem of distributing any change that

00:09:26,720 --> 00:09:32,420
comes in one of these systems so that

00:09:28,640 --> 00:09:34,220
the others keep being synchronized you

00:09:32,420 --> 00:09:36,260
have single points of failures in some

00:09:34,220 --> 00:09:40,100
case when you have a system that is not

00:09:36,260 --> 00:09:43,310
able to be to replicate and you also

00:09:40,100 --> 00:09:44,630
have the problem again of integrating

00:09:43,310 --> 00:09:48,440
interfaces because you have different

00:09:44,630 --> 00:09:50,480
components that are completely used

00:09:48,440 --> 00:09:53,660
completely for interfaces you have a

00:09:50,480 --> 00:09:55,430
fragment system where you have to learn

00:09:53,660 --> 00:09:57,860
different syntaxes of different methods

00:09:55,430 --> 00:10:02,480
to change an information so that's

00:09:57,860 --> 00:10:04,700
that's a challenge for organizations so

00:10:02,480 --> 00:10:07,100
let's see what are the free IPA

00:10:04,700 --> 00:10:09,350
components that we decide to use to try

00:10:07,100 --> 00:10:11,330
to solve these problems so the first one

00:10:09,350 --> 00:10:13,370
is the directory and by directory I mean

00:10:11,330 --> 00:10:15,920
held up there are other directories like

00:10:13,370 --> 00:10:19,250
ni s and s-plus I've been using the past

00:10:15,920 --> 00:10:24,800
but we found that they were not actually

00:10:19,250 --> 00:10:29,450
able to do what we need to do so why a

00:10:24,800 --> 00:10:33,530
directory so we need to storage

00:10:29,450 --> 00:10:35,900
mechanism date entities these term

00:10:33,530 --> 00:10:39,200
magnets need to be able to perform fine

00:10:35,900 --> 00:10:43,300
ground access control and why is that if

00:10:39,200 --> 00:10:46,520
you look at the classic unix or linux

00:10:43,300 --> 00:10:48,380
authentication methods you see that the

00:10:46,520 --> 00:10:50,540
data storage in a very basic

00:10:48,380 --> 00:10:54,470
configuration is the atc passivity file

00:10:50,540 --> 00:10:57,890
and HTC shadow file for example so we

00:10:54,470 --> 00:11:00,110
have actually even on the sync clients

00:10:57,890 --> 00:11:02,270
to places where you have some

00:11:00,110 --> 00:11:05,030
information and the reason is that the

00:11:02,270 --> 00:11:07,790
original mechanism as MIDI was not able

00:11:05,030 --> 00:11:09,680
to have fine grain access control on

00:11:07,790 --> 00:11:12,300
each and every field of the fact of the

00:11:09,680 --> 00:11:15,490
file so when you know

00:11:12,300 --> 00:11:17,470
password attacks started to happen in

00:11:15,490 --> 00:11:19,120
the real world people realize that

00:11:17,470 --> 00:11:20,680
having the hell password hash in the

00:11:19,120 --> 00:11:22,870
same file that everybody need to access

00:11:20,680 --> 00:11:24,910
to see all the other information was not

00:11:22,870 --> 00:11:26,440
a good idea because you were not able to

00:11:24,910 --> 00:11:29,530
prevent people to sit from seeing the

00:11:26,440 --> 00:11:32,490
passer hash so the shadow failure file

00:11:29,530 --> 00:11:35,950
was created at this point we have

00:11:32,490 --> 00:11:37,420
already synchronization problem what

00:11:35,950 --> 00:11:39,480
happened if i change the password file

00:11:37,420 --> 00:11:41,710
and i forget to change the shadow file

00:11:39,480 --> 00:11:44,740
of course there are tools to avoid that

00:11:41,710 --> 00:11:48,310
but that that was it was a problem and

00:11:44,740 --> 00:11:50,710
that problem was also in is because na s

00:11:48,310 --> 00:11:52,060
is basically taking the file you had on

00:11:50,710 --> 00:11:54,610
your local machine and trying to

00:11:52,060 --> 00:11:56,980
distribute them again on multiple

00:11:54,610 --> 00:12:04,120
machines but it didn't change how these

00:11:56,980 --> 00:12:06,520
files behaved so in the system like ldap

00:12:04,120 --> 00:12:08,830
instead what happens that you can set

00:12:06,520 --> 00:12:11,020
access control instructions for each and

00:12:08,830 --> 00:12:13,810
every attribute so you can say if you

00:12:11,020 --> 00:12:16,420
log in as an administrator you can't see

00:12:13,810 --> 00:12:18,760
or you can change usually you don't see

00:12:16,420 --> 00:12:21,160
it the hashes for your password but the

00:12:18,760 --> 00:12:23,110
user the calcium can only see other

00:12:21,160 --> 00:12:25,930
attributes like the shell the home

00:12:23,110 --> 00:12:31,450
directory can't see the hashes of of

00:12:25,930 --> 00:12:33,310
other use of or his own lashes we also

00:12:31,450 --> 00:12:35,710
need to be able to organize identity now

00:12:33,310 --> 00:12:38,770
log grip relationships that's what why

00:12:35,710 --> 00:12:40,390
is that again if you look at the railing

00:12:38,770 --> 00:12:42,880
system you also have a third file which

00:12:40,390 --> 00:12:45,820
is e TC group it's the group contains

00:12:42,880 --> 00:12:47,320
group information but again there we

00:12:45,820 --> 00:12:49,780
have a synchronization problem because

00:12:47,320 --> 00:12:51,790
you may create a user in ATT pastor d

00:12:49,780 --> 00:12:53,320
and not put it in the right group so you

00:12:51,790 --> 00:12:55,240
have made change groups and don't

00:12:53,320 --> 00:12:57,280
realize that the user doesn't doesn't

00:12:55,240 --> 00:13:01,720
exist anymore in pace for the year etc

00:12:57,280 --> 00:13:03,850
so we we wanted system were in a single

00:13:01,720 --> 00:13:06,520
tree we could have both users angry by

00:13:03,850 --> 00:13:09,040
the end groups because grips are part of

00:13:06,520 --> 00:13:11,740
the identity of a user a group might

00:13:09,040 --> 00:13:13,180
define what you have access to what

00:13:11,740 --> 00:13:14,650
machines you have access to or what

00:13:13,180 --> 00:13:16,060
registers on the machine you have access

00:13:14,650 --> 00:13:17,680
to so it's it's really part of the

00:13:16,060 --> 00:13:20,290
identity and if you look in the colonel

00:13:17,680 --> 00:13:22,030
you see that actually occurred have a

00:13:20,290 --> 00:13:22,579
structure whether it is the user ID and

00:13:22,030 --> 00:13:24,350
the group

00:13:22,579 --> 00:13:26,779
PS and exactly for that reason because

00:13:24,350 --> 00:13:32,329
group IDs are integral part of your

00:13:26,779 --> 00:13:33,799
identity another good points that we

00:13:32,329 --> 00:13:37,189
need to distribute information across

00:13:33,799 --> 00:13:40,309
the clients nailed up is is really good

00:13:37,189 --> 00:13:44,209
at that ldap has has been built exactly

00:13:40,309 --> 00:13:45,980
to distribute information and can do

00:13:44,209 --> 00:13:48,110
that very efficiently it's very

00:13:45,980 --> 00:13:50,149
efficient from services it's less

00:13:48,110 --> 00:13:52,730
efficient for rights so whenever they

00:13:50,149 --> 00:13:54,799
make changes it to bit slower but that's

00:13:52,730 --> 00:13:57,410
not important because the main the main

00:13:54,799 --> 00:14:01,759
task for an ldap server is to distribute

00:13:57,410 --> 00:14:04,970
information and finally and that's to

00:14:01,759 --> 00:14:05,929
avoid a single point of failure you

00:14:04,970 --> 00:14:08,569
really need to be able to replicate

00:14:05,929 --> 00:14:11,029
information on multi service so that if

00:14:08,569 --> 00:14:13,249
your main server or whatever server you

00:14:11,029 --> 00:14:15,410
usually use goes down you can

00:14:13,249 --> 00:14:17,089
immediately connect from your client to

00:14:15,410 --> 00:14:21,920
another server and keep having

00:14:17,089 --> 00:14:25,100
information from the server other

00:14:21,920 --> 00:14:30,160
reasons why we choose a returns ldap is

00:14:25,100 --> 00:14:35,329
that it's asunder although it's not a

00:14:30,160 --> 00:14:37,759
standard that can change and indeed some

00:14:35,329 --> 00:14:40,519
implementation are less or different to

00:14:37,759 --> 00:14:42,949
the standard that we would like but more

00:14:40,519 --> 00:14:44,959
or less at least for all the basic

00:14:42,949 --> 00:14:49,489
functionality I love is quite sundries

00:14:44,959 --> 00:14:52,720
and all the clients we know can connect

00:14:49,489 --> 00:14:55,819
to a random ldap server without problems

00:14:52,720 --> 00:14:58,879
existential both in the sense that you

00:14:55,819 --> 00:15:02,119
can extend the information that is tied

00:14:58,879 --> 00:15:05,329
to an identity user or group you just

00:15:02,119 --> 00:15:08,689
have to introduce a new schema attaching

00:15:05,329 --> 00:15:11,269
new object class to a user entry and you

00:15:08,689 --> 00:15:15,199
can attach new information to that user

00:15:11,269 --> 00:15:17,059
entry and unless a client is very badly

00:15:15,199 --> 00:15:18,649
written what happens that the client

00:15:17,059 --> 00:15:20,899
doesn't mind if there is more

00:15:18,649 --> 00:15:24,079
information because we all that is done

00:15:20,899 --> 00:15:26,269
is that it is really part of the

00:15:24,079 --> 00:15:27,980
prodigal that you can find additional

00:15:26,269 --> 00:15:29,720
attributes they are not interested in

00:15:27,980 --> 00:15:31,519
when a client search for some

00:15:29,720 --> 00:15:33,769
information usually does not only

00:15:31,519 --> 00:15:35,580
specify how to reach the entry but also

00:15:33,769 --> 00:15:38,010
which attributes it is interesting

00:15:35,580 --> 00:15:41,370
so that that means that you can really

00:15:38,010 --> 00:15:42,750
extend the information about the user in

00:15:41,370 --> 00:15:44,390
the same place with all the other

00:15:42,750 --> 00:15:49,590
information is without having to create

00:15:44,390 --> 00:15:52,280
new information that the storms it's

00:15:49,590 --> 00:15:55,020
also extensible in the sense of what

00:15:52,280 --> 00:15:58,860
operations you can do in out that held

00:15:55,020 --> 00:16:01,380
up has in extended operations so

00:15:58,860 --> 00:16:04,590
basically you can customize and create

00:16:01,380 --> 00:16:06,960
new operations over ldap if you need

00:16:04,590 --> 00:16:10,190
something that cannot be simplest of the

00:16:06,960 --> 00:16:13,460
query and we actually do that in

00:16:10,190 --> 00:16:19,860
infinitely and it's very flexible

00:16:13,460 --> 00:16:21,780
because of these reasons so second part

00:16:19,860 --> 00:16:23,400
of our identity is usually

00:16:21,780 --> 00:16:25,260
authentication there they go together

00:16:23,400 --> 00:16:27,690
you have an identity you have some

00:16:25,260 --> 00:16:31,140
credentials how do i use this credential

00:16:27,690 --> 00:16:35,910
to prove that i am who i am and what we

00:16:31,140 --> 00:16:42,870
decide to use is Kerberos for a number

00:16:35,910 --> 00:16:46,320
of reasons again so we say that one of

00:16:42,870 --> 00:16:48,000
the things we need to do when you use an

00:16:46,320 --> 00:16:49,620
addendum and agencies that is trying to

00:16:48,000 --> 00:16:52,590
provide single sign on as much as

00:16:49,620 --> 00:16:55,080
possible that allows you to provide

00:16:52,590 --> 00:16:57,000
services for a multitude of servers

00:16:55,080 --> 00:16:58,500
without having the user to reenter his

00:16:57,000 --> 00:17:01,680
password again and again and again which

00:16:58,500 --> 00:17:03,540
is something that is both annoying for

00:17:01,680 --> 00:17:06,540
the user because he has to basically

00:17:03,540 --> 00:17:09,110
stop his his work and try to remember

00:17:06,540 --> 00:17:12,630
his grandchildren reenter again is also

00:17:09,110 --> 00:17:15,060
usually insecure because if you if you

00:17:12,630 --> 00:17:17,490
make the user think that is normal to

00:17:15,060 --> 00:17:20,310
provide your password for anything you

00:17:17,490 --> 00:17:22,380
do it's very easy to convince him to

00:17:20,310 --> 00:17:25,050
provide the same passer to a server that

00:17:22,380 --> 00:17:31,110
is not under your control meaning that

00:17:25,050 --> 00:17:34,710
is it make it makes the user willing to

00:17:31,110 --> 00:17:38,240
give the credential even to service that

00:17:34,710 --> 00:17:40,530
are not trusted which is bad and

00:17:38,240 --> 00:17:42,120
kerberos allows you to do single sign-on

00:17:40,530 --> 00:17:44,690
authentication kirbridge is a ticket

00:17:42,120 --> 00:17:47,020
based system where you basically contact

00:17:44,690 --> 00:17:49,480
at login time

00:17:47,020 --> 00:17:51,510
a key distribution center that will give

00:17:49,480 --> 00:17:53,860
you back a ticket and that ticket

00:17:51,510 --> 00:17:55,920
basically allows you to get other

00:17:53,860 --> 00:17:58,990
tickets just as to access services

00:17:55,920 --> 00:18:00,940
without having to provide your real

00:17:58,990 --> 00:18:03,910
credentials anymore and the good thing

00:18:00,940 --> 00:18:07,420
is that this ticket is expired very

00:18:03,910 --> 00:18:09,790
quickly usually it's between 68 24 hours

00:18:07,420 --> 00:18:12,220
depending on the configuration of the

00:18:09,790 --> 00:18:14,890
key bc which means again that even if

00:18:12,220 --> 00:18:18,160
someone can somehow get hold of your

00:18:14,890 --> 00:18:21,430
ticket he's not able to use it for more

00:18:18,160 --> 00:18:24,220
than eight hours 24 hours the time until

00:18:21,430 --> 00:18:25,990
the ticket expire because the there is

00:18:24,220 --> 00:18:27,640
never transmission of your credentials

00:18:25,990 --> 00:18:30,160
which are required to basically

00:18:27,640 --> 00:18:36,070
acquiring your ticket gone further use

00:18:30,160 --> 00:18:39,370
other people credentials because of

00:18:36,070 --> 00:18:41,590
these ADA labs also administrators and

00:18:39,370 --> 00:18:44,410
users to basically go from server to

00:18:41,590 --> 00:18:46,390
server and through delegation it also

00:18:44,410 --> 00:18:49,330
loves you if you use something like SSH

00:18:46,390 --> 00:18:51,040
to basically get into a server delegate

00:18:49,330 --> 00:18:53,110
your credentials to the server and from

00:18:51,040 --> 00:18:55,870
the server connect to another one and

00:18:53,110 --> 00:18:57,580
still carry on your credential so you

00:18:55,870 --> 00:19:00,640
can delegate again and again and again

00:18:57,580 --> 00:19:02,020
without having to directly connect to

00:19:00,640 --> 00:19:04,180
each service in so you basically can

00:19:02,020 --> 00:19:05,860
jump from service the server and carry

00:19:04,180 --> 00:19:08,730
on your credentials review by just

00:19:05,860 --> 00:19:13,350
carrying your your ticket granted ticket

00:19:08,730 --> 00:19:16,330
it's a very test standard has been

00:19:13,350 --> 00:19:19,290
developed for many years at MIT and it

00:19:16,330 --> 00:19:23,110
has been actually implemented in

00:19:19,290 --> 00:19:26,520
basically all the identity management

00:19:23,110 --> 00:19:29,020
system around there the most popular

00:19:26,520 --> 00:19:31,480
system that basically made Kerber

00:19:29,020 --> 00:19:34,000
survival to everybody is actually active

00:19:31,480 --> 00:19:37,060
directory which is based on covers as

00:19:34,000 --> 00:19:40,690
well and their implementation is almost

00:19:37,060 --> 00:19:43,690
Andrew they have some things attitude

00:19:40,690 --> 00:19:47,470
but I kind of interoperate with external

00:19:43,690 --> 00:19:51,700
MIT kerberos implementation it's also to

00:19:47,470 --> 00:19:53,680
some degree extensible it's not like

00:19:51,700 --> 00:19:57,180
ldap where you can plug in whatever you

00:19:53,680 --> 00:19:59,910
want but the reason a very active

00:19:57,180 --> 00:20:03,150
very active community around covers MIT

00:19:59,910 --> 00:20:06,090
also created recently the MIT kerberos

00:20:03,150 --> 00:20:13,080
consortium to be able to keep going on

00:20:06,090 --> 00:20:16,380
and develop MIT Kurvers you can actually

00:20:13,080 --> 00:20:20,130
introduce quite easily new and creation

00:20:16,380 --> 00:20:21,930
encryption algorithms recently AES was

00:20:20,130 --> 00:20:24,210
introduced it must Gerber's

00:20:21,930 --> 00:20:27,840
implementations and this is going

00:20:24,210 --> 00:20:31,620
completely away but it's very easy to

00:20:27,840 --> 00:20:35,850
introduce new encryption algorithm is

00:20:31,620 --> 00:20:38,970
built so that it can actually provide

00:20:35,850 --> 00:20:40,860
clients for the list of prior if

00:20:38,970 --> 00:20:43,050
inaugurated accepted from the server and

00:20:40,860 --> 00:20:45,260
vice versa so that basically clients and

00:20:43,050 --> 00:20:48,060
servers can negotiate the best

00:20:45,260 --> 00:20:56,850
encryption algorithm available and then

00:20:48,060 --> 00:21:00,480
give you time so we use kerberos in free

00:20:56,850 --> 00:21:04,580
IPA it's the predominant method to do

00:21:00,480 --> 00:21:09,420
authentication with one user free AP but

00:21:04,580 --> 00:21:14,510
because unfortunately many applications

00:21:09,420 --> 00:21:19,290
still rely on a username and password

00:21:14,510 --> 00:21:21,360
parody we also provide the ability to

00:21:19,290 --> 00:21:23,070
use of that binds classical that binds

00:21:21,360 --> 00:21:25,530
when you connect to of that provide

00:21:23,070 --> 00:21:28,890
username and your password and you know

00:21:25,530 --> 00:21:32,690
authenticate but this is certainly more

00:21:28,890 --> 00:21:37,800
not what we advise you to use normally

00:21:32,690 --> 00:21:39,750
so back to the to the components list up

00:21:37,800 --> 00:21:42,150
to this point seems very simple

00:21:39,750 --> 00:21:44,100
basically are just two components you

00:21:42,150 --> 00:21:48,000
have the ldap server and the Kerberos

00:21:44,100 --> 00:21:50,370
server and it seems like it shouldn't be

00:21:48,000 --> 00:21:54,480
a big deal to build something like this

00:21:50,370 --> 00:21:56,430
but fortunately these not all as soon as

00:21:54,480 --> 00:22:01,800
you introduce Kurvers in an organization

00:21:56,430 --> 00:22:03,240
you have to deal with dns and MTP one

00:22:01,800 --> 00:22:06,980
thing about kirbridge is that it's very

00:22:03,240 --> 00:22:09,300
time sensitive because Kerberos releases

00:22:06,980 --> 00:22:10,470
tickets are available only for a short

00:22:09,300 --> 00:22:13,200
period of time

00:22:10,470 --> 00:22:15,780
it actually needs to make sure that you

00:22:13,200 --> 00:22:20,549
are not using clock skew to try to use

00:22:15,780 --> 00:22:23,309
an old ticket again so the maximum clock

00:22:20,549 --> 00:22:28,620
skew between a client and the server can

00:22:23,309 --> 00:22:30,450
be five minutes so the race client and

00:22:28,620 --> 00:22:33,539
server can have a slightly different

00:22:30,450 --> 00:22:36,330
notion of what exactly this moment is in

00:22:33,539 --> 00:22:38,520
time but not too much so what you really

00:22:36,330 --> 00:22:40,440
need in organization is to introduce ntp

00:22:38,520 --> 00:22:42,539
the network transfer protocol so network

00:22:40,440 --> 00:22:44,280
time protocol so that all the clients

00:22:42,539 --> 00:22:47,730
servers in your organization basically

00:22:44,280 --> 00:22:54,090
are synchronized and they all share the

00:22:47,730 --> 00:22:57,539
same cloth the other components is not

00:22:54,090 --> 00:22:59,970
strictly necessary but actually for any

00:22:57,539 --> 00:23:03,450
real implementation you really wanted

00:22:59,970 --> 00:23:06,809
its dns the reason is that when you use

00:23:03,450 --> 00:23:09,000
kerberos to connect to service and you

00:23:06,809 --> 00:23:12,299
want to authenticate to that service you

00:23:09,000 --> 00:23:14,220
need to know what is the DNS domain name

00:23:12,299 --> 00:23:16,530
of that service and that's because when

00:23:14,220 --> 00:23:19,140
you ask for a ticket you need to ask the

00:23:16,530 --> 00:23:22,679
key DC for a ticket for a specific

00:23:19,140 --> 00:23:26,010
service name because the name is part of

00:23:22,679 --> 00:23:28,799
of the of the service principal they

00:23:26,010 --> 00:23:31,740
basically the identity of the service so

00:23:28,799 --> 00:23:35,429
if you don't have a way basically to

00:23:31,740 --> 00:23:37,500
connect to server using a name you can't

00:23:35,429 --> 00:23:40,049
get the ticket to connect to that

00:23:37,500 --> 00:23:43,440
service unless you ask the user to

00:23:40,049 --> 00:23:45,870
provide it somehow and that's something

00:23:43,440 --> 00:23:47,309
you don't want to do so basically it

00:23:45,870 --> 00:23:49,950
turns out that when you implement

00:23:47,309 --> 00:23:51,539
Kerberos you want to have dns neuron to

00:23:49,950 --> 00:23:54,120
have all the client and server register

00:23:51,539 --> 00:23:57,030
in DNS so when one client i connect to

00:23:54,120 --> 00:23:59,340
another server it knows what is the

00:23:57,030 --> 00:24:02,929
other server name and can ask the KDC

00:23:59,340 --> 00:24:02,929
please give me a ticket for that server

00:24:07,159 --> 00:24:13,529
the client as well need to be taught how

00:24:10,889 --> 00:24:15,330
to basically easy thing so you have to

00:24:13,529 --> 00:24:17,249
teach the client how to use ldap for to

00:24:15,330 --> 00:24:19,889
get users you have to tell the client

00:24:17,249 --> 00:24:22,169
hodges curves to get to log you in and

00:24:19,889 --> 00:24:23,999
you have to tell the client where is the

00:24:22,169 --> 00:24:33,809
NTP server and where is the DNS server

00:24:23,999 --> 00:24:36,509
to use to be able to do both things this

00:24:33,809 --> 00:24:40,649
also means that usually you want to

00:24:36,509 --> 00:24:44,279
connect the DNS in the directory it

00:24:40,649 --> 00:24:46,499
might just be that you use hoss files on

00:24:44,279 --> 00:24:49,529
the directory because you don't want to

00:24:46,499 --> 00:24:51,269
use at the end in a DNS server or just

00:24:49,529 --> 00:24:54,450
that the client year's directory

00:24:51,269 --> 00:24:56,759
testitude to store is a name so that DNS

00:24:54,450 --> 00:25:00,389
can ask the directory the user directory

00:24:56,759 --> 00:25:02,580
as a storage but usually you want to

00:25:00,389 --> 00:25:06,960
connect them so that each hast is

00:25:02,580 --> 00:25:08,700
connected to his own name in the DNS and

00:25:06,960 --> 00:25:11,639
when you create a new and your machine

00:25:08,700 --> 00:25:13,979
and the new service principal goals can

00:25:11,639 --> 00:25:15,779
link these two things together so that

00:25:13,979 --> 00:25:19,559
the name of the machine is linked to the

00:25:15,779 --> 00:25:22,049
to the service principle of the server

00:25:19,559 --> 00:25:23,669
and that's because again when you look

00:25:22,049 --> 00:25:26,039
at the whole organization three you want

00:25:23,669 --> 00:25:28,739
to see that if if each server actually

00:25:26,039 --> 00:25:30,359
has Kerberos financial or not in this

00:25:28,739 --> 00:25:35,460
way so you want to keep everything in

00:25:30,359 --> 00:25:39,059
one place to connect all the dots as

00:25:35,460 --> 00:25:41,489
soon as you start thinking about that

00:25:39,059 --> 00:25:44,580
you also realize that you have to have a

00:25:41,489 --> 00:25:47,279
method to configure the client at least

00:25:44,580 --> 00:25:50,029
for the very basic things like where

00:25:47,279 --> 00:25:51,840
where do i connect to get information

00:25:50,029 --> 00:25:54,960
partially that can be resolved through

00:25:51,840 --> 00:25:57,059
dns and SRV records so that in DNS you

00:25:54,960 --> 00:25:59,159
can tell we're directing where the

00:25:57,059 --> 00:26:01,979
Kerberos server us are but you also want

00:25:59,159 --> 00:26:03,989
to provide the client client we've at

00:26:01,979 --> 00:26:07,309
least the basic security policies it has

00:26:03,989 --> 00:26:10,379
to use whether it can accept a

00:26:07,309 --> 00:26:12,299
connection Authenticator an

00:26:10,379 --> 00:26:14,249
authenticator where it can accept the

00:26:12,299 --> 00:26:16,320
connection for a specific specific user

00:26:14,249 --> 00:26:19,180
for a specific server and stuff like

00:26:16,320 --> 00:26:21,760
that so as soon as you start

00:26:19,180 --> 00:26:23,290
having the nectar as your pairing you

00:26:21,760 --> 00:26:25,450
really want to have a method to

00:26:23,290 --> 00:26:26,980
configure the client as well in a

00:26:25,450 --> 00:26:28,870
centralized manner so when you change

00:26:26,980 --> 00:26:31,300
something in your organization don't

00:26:28,870 --> 00:26:33,250
have to run machine by machine but you

00:26:31,300 --> 00:26:35,080
have an atomatic distribution of this

00:26:33,250 --> 00:26:36,940
information to the client some

00:26:35,080 --> 00:26:39,070
information can get can be downloaded

00:26:36,940 --> 00:26:41,110
from director for the directory some

00:26:39,070 --> 00:26:43,230
information still in at least Linux

00:26:41,110 --> 00:26:45,700
systems is really embedded in

00:26:43,230 --> 00:26:47,470
configuration files so you need another

00:26:45,700 --> 00:26:50,170
method to get this information and put

00:26:47,470 --> 00:26:54,520
that into into files that's what we call

00:26:50,170 --> 00:26:58,720
policies another component that we think

00:26:54,520 --> 00:27:02,140
is important is web UI in a beam tools

00:26:58,720 --> 00:27:05,230
and the way we built the admin tools in

00:27:02,140 --> 00:27:08,320
the web UI is true a web server batch in

00:27:05,230 --> 00:27:12,190
this case and an xml RPC interface so

00:27:08,320 --> 00:27:13,810
basically web server becomes a component

00:27:12,190 --> 00:27:15,310
of this picture because you need to

00:27:13,810 --> 00:27:16,950
manage the web server you need to make

00:27:15,310 --> 00:27:20,050
the Webster available to clients and

00:27:16,950 --> 00:27:22,870
that means also you probably need a

00:27:20,050 --> 00:27:24,220
certification Authority because when you

00:27:22,870 --> 00:27:27,070
talk to a web server and you want to

00:27:24,220 --> 00:27:30,750
have a second channel usually you need

00:27:27,070 --> 00:27:33,430
an SSL certificate TLS certificate so

00:27:30,750 --> 00:27:35,380
immediately you start having the problem

00:27:33,430 --> 00:27:38,410
that when you have multiple servers and

00:27:35,380 --> 00:27:40,180
clients you basically need to make sure

00:27:38,410 --> 00:27:42,960
the clients connect to the right web

00:27:40,180 --> 00:27:45,880
servers not too many in the middle

00:27:42,960 --> 00:27:48,340
service that can spoof your connections

00:27:45,880 --> 00:27:50,610
and that means you need a certification

00:27:48,340 --> 00:27:53,290
authority of some sort or at least

00:27:50,610 --> 00:27:57,430
certificates from an external

00:27:53,290 --> 00:27:59,740
certification authority so that the

00:27:57,430 --> 00:28:04,440
client can trust the ssl certificate

00:27:59,740 --> 00:28:07,990
without user information and finally

00:28:04,440 --> 00:28:09,940
once if all I have all these pieces you

00:28:07,990 --> 00:28:12,130
really need a way to know that

00:28:09,940 --> 00:28:14,410
everything is running properly that

00:28:12,130 --> 00:28:16,840
there are no bridges in a security so

00:28:14,410 --> 00:28:18,670
you basically need an auditing system

00:28:16,840 --> 00:28:20,560
that can connect to all the species a

00:28:18,670 --> 00:28:22,300
report in central location if there's

00:28:20,560 --> 00:28:25,240
something in Scott is is not working

00:28:22,300 --> 00:28:28,150
correctly or if there is penetration of

00:28:25,240 --> 00:28:30,100
Temple whatever so that each single

00:28:28,150 --> 00:28:32,230
piece can report in the center place

00:28:30,100 --> 00:28:35,169
where you can

00:28:32,230 --> 00:28:37,750
basically collect and compare data from

00:28:35,169 --> 00:28:43,559
all these systems to know that your

00:28:37,750 --> 00:28:46,090
solution is working properly okay so

00:28:43,559 --> 00:28:50,860
what are the actual components that we

00:28:46,090 --> 00:28:52,540
decided to use inside free IPA we we

00:28:50,860 --> 00:28:55,419
start with a tour director server and

00:28:52,540 --> 00:28:57,580
MIT kerberos we are an Apache on top

00:28:55,419 --> 00:29:00,580
with a bunch of modules that we use by

00:28:57,580 --> 00:29:05,559
default modern says instead of modest

00:29:00,580 --> 00:29:07,870
ourselves used in NSS is the nested

00:29:05,559 --> 00:29:13,360
security services library which is a

00:29:07,870 --> 00:29:15,220
very very good ssl/tls as a library

00:29:13,360 --> 00:29:19,480
which is years because it's also

00:29:15,220 --> 00:29:23,530
certified it has phipps 152 compliance

00:29:19,480 --> 00:29:27,070
and it's a library that is being used

00:29:23,530 --> 00:29:31,950
more and more inside ferrara there is

00:29:27,070 --> 00:29:31,950
actually project to push all upstream

00:29:32,940 --> 00:29:38,500
projects to try and use and assess

00:29:35,530 --> 00:29:41,230
instead of open SSL or other solution

00:29:38,500 --> 00:29:43,450
like a new TLS we all see nemo doubt

00:29:41,230 --> 00:29:46,030
Kerberos to be able to use kerberos

00:29:43,450 --> 00:29:48,880
authentication engine in Apache and we

00:29:46,030 --> 00:29:52,120
will see why we use mud proxy for the

00:29:48,880 --> 00:29:54,370
web interface views trooper gears and

00:29:52,120 --> 00:29:57,100
wheels use Python because there is a

00:29:54,370 --> 00:29:58,780
walk to agree to use Python but use

00:29:57,100 --> 00:30:03,160
Python also implement the xml RPC

00:29:58,780 --> 00:30:05,559
interfaces we also had to implement

00:30:03,160 --> 00:30:08,740
custom federal directory server plugins

00:30:05,559 --> 00:30:12,610
and we did all the set of tools also in

00:30:08,740 --> 00:30:14,860
Python for the admins and this is

00:30:12,610 --> 00:30:18,730
basically the stack you see on the

00:30:14,860 --> 00:30:22,690
server side in v1 on the client side we

00:30:18,730 --> 00:30:26,710
use in v1 NSSL dap and pound khoros-5 on

00:30:22,690 --> 00:30:31,840
linux more or less all UNIX system has a

00:30:26,710 --> 00:30:35,049
variance and we basically use what what

00:30:31,840 --> 00:30:38,590
is available on these systems what we

00:30:35,049 --> 00:30:42,580
have as we don't have in that in gray is

00:30:38,590 --> 00:30:43,370
we don't have a proper CA in v1 what we

00:30:42,580 --> 00:30:45,500
do

00:30:43,370 --> 00:30:48,890
in the default installation is to create

00:30:45,500 --> 00:30:53,450
sub signed CA and expose the certificate

00:30:48,890 --> 00:30:55,520
through the web server it's not ideal we

00:30:53,450 --> 00:30:58,580
don't have policies in v1 and we don't

00:30:55,520 --> 00:31:01,900
have the audit piece so that all the

00:30:58,580 --> 00:31:01,900
things you saw in the last slide

00:31:04,990 --> 00:31:12,770
basically the red pieces and the green

00:31:08,750 --> 00:31:19,340
one on our absolutely the green is self

00:31:12,770 --> 00:31:21,679
signed so it's not really there this is

00:31:19,340 --> 00:31:26,570
the directory structure we use white is

00:31:21,679 --> 00:31:31,640
important because even though ldap tend

00:31:26,570 --> 00:31:33,830
to be very flexible also need to have

00:31:31,640 --> 00:31:38,530
some conventions so that you can

00:31:33,830 --> 00:31:40,550
actually use the directory in a same way

00:31:38,530 --> 00:31:42,020
one of the things you can see

00:31:40,550 --> 00:31:45,200
immediately from here is that you don't

00:31:42,020 --> 00:31:48,860
see the familiar or you ill people or or

00:31:45,200 --> 00:31:52,730
you eagle group in the base DN tactics

00:31:48,860 --> 00:31:57,260
that you might normally see in order

00:31:52,730 --> 00:31:59,090
held up dita implementations we decided

00:31:57,260 --> 00:32:00,559
not to do that way and we decide to

00:31:59,090 --> 00:32:03,250
basically put all the user and group

00:32:00,559 --> 00:32:06,890
information and technical accounts

00:32:03,250 --> 00:32:10,250
subtree because that way we could more

00:32:06,890 --> 00:32:13,040
easily and access control instructions

00:32:10,250 --> 00:32:15,500
on the on one sub tree and keep other

00:32:13,040 --> 00:32:17,650
sub trees like CN Cobras or see any to

00:32:15,500 --> 00:32:21,050
see where we put a lot of configuration

00:32:17,650 --> 00:32:25,730
outside of these icy eyes and make it

00:32:21,050 --> 00:32:27,980
simpler basically to prevent access to

00:32:25,730 --> 00:32:33,020
part of the directory where normal

00:32:27,980 --> 00:32:37,400
client shouldn't have access yep and

00:32:33,020 --> 00:32:40,730
this came Henry immediately after we won

00:32:37,400 --> 00:32:44,000
that Oh was released because we found

00:32:40,730 --> 00:32:48,260
that that too unfortunately Solaris does

00:32:44,000 --> 00:32:51,590
not support in 2009 RFC two three or

00:32:48,260 --> 00:32:53,390
seven bits our seat remembers is what is

00:32:51,590 --> 00:32:55,870
what we rely on because instead of using

00:32:53,390 --> 00:32:58,630
the very old member you ID

00:32:55,870 --> 00:33:00,940
attribute we're in a group you just name

00:32:58,630 --> 00:33:02,500
the user by name we use the member a

00:33:00,940 --> 00:33:05,080
member of attributes where you basically

00:33:02,500 --> 00:33:07,870
put the DN of the user into the group

00:33:05,080 --> 00:33:10,330
entry and unfortunately Solaris is the

00:33:07,870 --> 00:33:12,820
only one that is not able to read

00:33:10,330 --> 00:33:15,820
information that way so what we need is

00:33:12,820 --> 00:33:18,550
we've built a plug-in in fds that

00:33:15,820 --> 00:33:20,800
basically create virtual subtree called

00:33:18,550 --> 00:33:24,130
see an eagle compact and it basically

00:33:20,800 --> 00:33:27,730
eight present the same information you

00:33:24,130 --> 00:33:31,540
have in siena cancion groups but we've

00:33:27,730 --> 00:33:34,510
the old RFC 2307 schema so if you have a

00:33:31,540 --> 00:33:37,900
legacy client solaris client a very old

00:33:34,510 --> 00:33:40,600
linux client some old ax or hpx client

00:33:37,900 --> 00:33:42,309
that still don't support two three or

00:33:40,600 --> 00:33:43,900
seven beasts put what you can do is

00:33:42,309 --> 00:33:46,720
basically point these clients to use a

00:33:43,900 --> 00:33:48,460
combat subtree to find group information

00:33:46,720 --> 00:33:55,809
and they can find group information in

00:33:48,460 --> 00:33:59,290
the form of they used to okay so besides

00:33:55,809 --> 00:34:01,179
the directory how deep how did we

00:33:59,290 --> 00:34:03,670
basically integrate curvature in the

00:34:01,179 --> 00:34:06,010
directory as I said before one of the

00:34:03,670 --> 00:34:08,290
problem is synchronization or

00:34:06,010 --> 00:34:10,210
integration information we wanted to

00:34:08,290 --> 00:34:12,429
avoid having a different database for

00:34:10,210 --> 00:34:14,290
kerberos because we would have to

00:34:12,429 --> 00:34:16,149
synchronize the database with the

00:34:14,290 --> 00:34:19,600
directory so basically what we did we

00:34:16,149 --> 00:34:24,909
create we used the ldap plugin off of

00:34:19,600 --> 00:34:28,440
the MIT KDC and we store all the Cobras

00:34:24,909 --> 00:34:31,870
information into held up as well

00:34:28,440 --> 00:34:35,649
actually we store the user credentials

00:34:31,870 --> 00:34:37,840
in the user entry and then we just use

00:34:35,649 --> 00:34:40,540
AC is to provide represent any other

00:34:37,840 --> 00:34:42,879
user of the user himself to directly

00:34:40,540 --> 00:34:45,010
access the ders credential another piece

00:34:42,879 --> 00:34:49,330
of wood necessary though is the password

00:34:45,010 --> 00:34:52,590
plug-in and because we wanted to allow

00:34:49,330 --> 00:34:55,810
people to also use classical that bind

00:34:52,590 --> 00:34:59,470
for legacy applications we needed to

00:34:55,810 --> 00:35:03,190
make sure that the password hashing out

00:34:59,470 --> 00:35:05,080
that was actually representing the same

00:35:03,190 --> 00:35:06,670
path so that he use in Kerberos that you

00:35:05,080 --> 00:35:08,430
can use the same

00:35:06,670 --> 00:35:12,250
single-pass were approached in that case

00:35:08,430 --> 00:35:15,130
so basically what we did is rare out IPA

00:35:12,250 --> 00:35:18,220
campus PD creating a new I k passivity

00:35:15,130 --> 00:35:19,839
demon a specific for IPA the bezeri

00:35:18,220 --> 00:35:23,140
wrote that any password change of a

00:35:19,839 --> 00:35:26,650
request on the capacity practical to the

00:35:23,140 --> 00:35:29,020
to ldap and used ldap password operation

00:35:26,650 --> 00:35:31,210
the same happens if you use directly of

00:35:29,020 --> 00:35:32,589
that pastor operation against the ldap

00:35:31,210 --> 00:35:34,150
server you go through the path of

00:35:32,589 --> 00:35:37,690
linking the paso playing basically

00:35:34,150 --> 00:35:40,530
generates all the Kerberos material for

00:35:37,690 --> 00:35:43,839
kerberos when then you do k on it

00:35:40,530 --> 00:35:46,450
Kurvers the KDC basically gets that

00:35:43,839 --> 00:35:50,740
information out of ldap extract from

00:35:46,450 --> 00:35:53,260
asn.1 the secrets and is able to

00:35:50,740 --> 00:35:55,569
authenticate your your packets and give

00:35:53,260 --> 00:35:58,180
you back Kerberos TGT in case so

00:35:55,569 --> 00:36:00,480
basically the directory is the source of

00:35:58,180 --> 00:36:02,440
all information we don't have a

00:36:00,480 --> 00:36:04,900
synchronization problem because the

00:36:02,440 --> 00:36:08,079
information is kept we end all the user

00:36:04,900 --> 00:36:09,819
data so if a user is delighted also all

00:36:08,079 --> 00:36:11,680
his Kerberos material is delayed

00:36:09,819 --> 00:36:16,990
immediately the Kerberos server will not

00:36:11,680 --> 00:36:19,569
be able to give again a ticket for user

00:36:16,990 --> 00:36:21,730
doesn't exist we don't need to let me go

00:36:19,569 --> 00:36:23,619
back into the Kerberos that amazing try

00:36:21,730 --> 00:36:32,170
to delayed it as well when a user is

00:36:23,619 --> 00:36:35,400
relating the same etc so data pads

00:36:32,170 --> 00:36:38,530
minute winter faces there too they also

00:36:35,400 --> 00:36:42,640
completely depend on directory server of

00:36:38,530 --> 00:36:44,410
course as I told you before we use three

00:36:42,640 --> 00:36:49,349
main modules in Apache and that's

00:36:44,410 --> 00:36:53,079
because in v1 we had a problem with

00:36:49,349 --> 00:36:55,390
convincing the turbo gear stuck to use

00:36:53,079 --> 00:36:58,450
kerberos authentication so what we did

00:36:55,390 --> 00:37:01,809
is to create basically proxy approach

00:36:58,450 --> 00:37:04,450
what the authentication is done by mode

00:37:01,809 --> 00:37:08,319
of Kerberos on apache and then the every

00:37:04,450 --> 00:37:09,849
every single quiz proxy to the trigger

00:37:08,319 --> 00:37:14,260
which is a process that runs only

00:37:09,849 --> 00:37:16,930
locally and the GUI is gets actually in

00:37:14,260 --> 00:37:18,910
Kerberos credentials even though it's

00:37:16,930 --> 00:37:22,809
not able to use the

00:37:18,910 --> 00:37:26,950
itself to authenticate the user and and

00:37:22,809 --> 00:37:28,780
used the xml RPC interface so that we

00:37:26,950 --> 00:37:31,329
keep our self honest everything that you

00:37:28,780 --> 00:37:33,250
see from web interface is the same thing

00:37:31,329 --> 00:37:36,339
that's usual from the admin tools so

00:37:33,250 --> 00:37:39,460
that they all use what one path only you

00:37:36,339 --> 00:37:41,319
don't have to duplicate functionality

00:37:39,460 --> 00:37:43,150
and you're sure that if it has something

00:37:41,319 --> 00:37:47,020
with one of the two is it's the same

00:37:43,150 --> 00:37:49,660
thing so if if you if you make something

00:37:47,020 --> 00:37:51,789
new in the interweb you I basically you

00:37:49,660 --> 00:37:55,329
have to also create a comment like Italy

00:37:51,789 --> 00:37:58,329
at the same time and we've basically get

00:37:55,329 --> 00:38:00,599
the credentials into xml-rpc and we use

00:37:58,329 --> 00:38:03,339
your cupboards credentials that are

00:38:00,599 --> 00:38:05,140
delegated to us to connected directory

00:38:03,339 --> 00:38:09,119
server and that's another layer of

00:38:05,140 --> 00:38:11,530
security because basically it means that

00:38:09,119 --> 00:38:14,470
the web server doesn't have any

00:38:11,530 --> 00:38:16,299
privileged access to the directory to be

00:38:14,470 --> 00:38:17,289
able to access any data in the directory

00:38:16,299 --> 00:38:23,250
you really need to have your own

00:38:17,289 --> 00:38:27,250
Kerberos ticket so when you connect to a

00:38:23,250 --> 00:38:28,779
toxin xmlrpc or to do up to the GUI you

00:38:27,250 --> 00:38:30,970
have to provide your own user thick and

00:38:28,779 --> 00:38:33,520
that ticket because it will use

00:38:30,970 --> 00:38:37,329
delegation is what is used to

00:38:33,520 --> 00:38:40,049
authenticate the xml RPC piece to the

00:38:37,329 --> 00:38:43,180
directory so it's not possible

00:38:40,049 --> 00:38:46,630
structurally not possible for someone to

00:38:43,180 --> 00:38:50,170
basically hijack the web UI and try to

00:38:46,630 --> 00:38:52,569
perform administrative tasks unless you

00:38:50,170 --> 00:38:55,089
really have the administrator at the

00:38:52,569 --> 00:38:56,609
administrator ticket so you need to be

00:38:55,089 --> 00:39:04,079
administrated before you're able to do

00:38:56,609 --> 00:39:04,079
today anything like that and yes so

00:39:04,289 --> 00:39:09,460
let's go on because i have long

00:39:06,430 --> 00:39:11,289
attorneys so this is the the web

00:39:09,460 --> 00:39:13,869
interface will be one just wanted to

00:39:11,289 --> 00:39:18,010
share something it's very simple very

00:39:13,869 --> 00:39:22,750
basic doesn't do much but does the last

00:39:18,010 --> 00:39:26,410
be needed at find users on right at fine

00:39:22,750 --> 00:39:30,720
grave stelae curbs manage policy which

00:39:26,410 --> 00:39:36,150
are just password policies in v1

00:39:30,720 --> 00:39:38,609
we also have a self-service page where a

00:39:36,150 --> 00:39:40,890
user can change some of his own

00:39:38,609 --> 00:39:43,650
attributes again because we have a CIS

00:39:40,890 --> 00:39:45,510
we can allow user to basically change

00:39:43,650 --> 00:39:47,670
some of the information that are

00:39:45,510 --> 00:39:49,980
indirectly or for example you may say I

00:39:47,670 --> 00:39:52,470
want to allow the user to change his own

00:39:49,980 --> 00:39:54,480
phone number so that other users can get

00:39:52,470 --> 00:39:56,430
it updated phone number without having

00:39:54,480 --> 00:39:58,859
to go through an administrator to change

00:39:56,430 --> 00:40:01,020
that information would but we don't we

00:39:58,859 --> 00:40:02,760
want absolutely to prevent him to change

00:40:01,020 --> 00:40:07,170
his own grip ownerships for example

00:40:02,760 --> 00:40:12,450
stuff like that we also have of course a

00:40:07,170 --> 00:40:15,619
common line interface that a lot of

00:40:12,450 --> 00:40:19,260
commands around there more than 20 and

00:40:15,619 --> 00:40:21,420
if you really are not satisfied by using

00:40:19,260 --> 00:40:23,609
abstractions you can even go and use all

00:40:21,420 --> 00:40:26,010
that yourself if you know what you're

00:40:23,609 --> 00:40:27,300
doing although I I don't think you

00:40:26,010 --> 00:40:32,340
really want to do that usually will

00:40:27,300 --> 00:40:34,349
break your own installation but as you

00:40:32,340 --> 00:40:37,200
can see this same is a very complex

00:40:34,349 --> 00:40:39,630
system and we said won't make it simpler

00:40:37,200 --> 00:40:41,430
to manage yes the web interface can help

00:40:39,630 --> 00:40:46,050
that's also the whole thing about

00:40:41,430 --> 00:40:48,420
installation so what we what we built

00:40:46,050 --> 00:40:52,859
within the project was actually for

00:40:48,420 --> 00:40:54,930
example all set of installed dailies for

00:40:52,859 --> 00:40:58,770
both for the server and the client if

00:40:54,930 --> 00:41:04,440
you want to try IPA and I suggest you

00:40:58,770 --> 00:41:05,849
try them and v 1.2 especially all you

00:41:04,440 --> 00:41:08,580
have to do is measure install the

00:41:05,849 --> 00:41:13,980
packages run IPS already installed and

00:41:08,580 --> 00:41:18,210
you are you get three questions it asks

00:41:13,980 --> 00:41:19,950
you what is the real name for kerberos

00:41:18,210 --> 00:41:22,830
and it also suggests the default based

00:41:19,950 --> 00:41:25,890
on your dns name the dns name of the

00:41:22,830 --> 00:41:29,070
machine it asks you for directly manager

00:41:25,890 --> 00:41:31,740
password which is kind of the root

00:41:29,070 --> 00:41:34,560
password of the system something you

00:41:31,740 --> 00:41:37,349
don't use for normally except for very

00:41:34,560 --> 00:41:39,089
specific operations and then ask you for

00:41:37,349 --> 00:41:41,040
an admin user password and the admin

00:41:39,089 --> 00:41:43,230
user is the default user is created in

00:41:41,040 --> 00:41:44,040
the system that has a set of freedoms

00:41:43,230 --> 00:41:45,570
like

00:41:44,040 --> 00:41:48,360
okay no other users can create groups

00:41:45,570 --> 00:41:50,150
change policy and stuff like that once

00:41:48,360 --> 00:41:52,590
you do that back with the job is done

00:41:50,150 --> 00:41:55,950
the server is installed configure all

00:41:52,590 --> 00:41:58,290
the components are configuring system

00:41:55,950 --> 00:42:00,390
restarted and basically you have working

00:41:58,290 --> 00:42:02,790
IPA server they can immediately serve

00:42:00,390 --> 00:42:06,360
our tickets due to the admin user or any

00:42:02,790 --> 00:42:08,130
user you create with that music so we we

00:42:06,360 --> 00:42:10,970
basically try to make it very very

00:42:08,130 --> 00:42:13,530
simple to install without all the

00:42:10,970 --> 00:42:15,240
problems you have trying to understand

00:42:13,530 --> 00:42:17,820
how to configure a lab how to configure

00:42:15,240 --> 00:42:21,330
Kerberos how do i configure or any other

00:42:17,820 --> 00:42:26,760
service there it's really as easy as

00:42:21,330 --> 00:42:29,940
that so what will the end up to once you

00:42:26,760 --> 00:42:32,820
have done that you have that core that

00:42:29,940 --> 00:42:35,160
now she seems much simpler it has all

00:42:32,820 --> 00:42:36,930
the components we describe but they are

00:42:35,160 --> 00:42:38,610
containing that in that thing and

00:42:36,930 --> 00:42:40,710
basically all you have to do is

00:42:38,610 --> 00:42:43,380
basically install a client in there too

00:42:40,710 --> 00:42:45,660
it's not that complex we have a client

00:42:43,380 --> 00:42:48,540
install tool that will configure our

00:42:45,660 --> 00:42:51,090
NSSL that pumpkin verse 5 it works on

00:42:48,540 --> 00:42:52,980
rather than fedora not other system of

00:42:51,090 --> 00:42:54,750
this moment but it's very simple to

00:42:52,980 --> 00:42:57,900
configure just an Assessor that curve as

00:42:54,750 --> 00:43:02,610
compared to what is to configure the

00:42:57,900 --> 00:43:05,100
whole service thing and you can use

00:43:02,610 --> 00:43:08,340
basically any any client that supports

00:43:05,100 --> 00:43:10,110
Kerber litigation in the browser to

00:43:08,340 --> 00:43:14,570
connect to the server and do management

00:43:10,110 --> 00:43:14,570
tree website or through the admin tools

00:43:16,970 --> 00:43:23,730
the other thing we we needed to add ease

00:43:21,080 --> 00:43:27,270
multiple servers as we said one of the

00:43:23,730 --> 00:43:28,920
problem is single point of failure what

00:43:27,270 --> 00:43:31,350
happened if my server has a hardware

00:43:28,920 --> 00:43:34,230
failure if it goes down the whole

00:43:31,350 --> 00:43:36,330
organization if can't work because if my

00:43:34,230 --> 00:43:39,090
users cannot authenticate and that's

00:43:36,330 --> 00:43:40,830
also one of the reasons we we choose

00:43:39,090 --> 00:43:42,600
directory server instead of something

00:43:40,830 --> 00:43:47,150
like openldap directory server has a

00:43:42,600 --> 00:43:50,610
very mature multi-master replication and

00:43:47,150 --> 00:43:52,200
can basically replicate all the

00:43:50,610 --> 00:43:54,840
information at the attribute level on

00:43:52,200 --> 00:43:56,920
all their servers so that when you

00:43:54,840 --> 00:44:00,280
change something on any of the servers

00:43:56,920 --> 00:44:02,830
that informations replicated immediately

00:44:00,280 --> 00:44:06,040
to old servers also meant that we could

00:44:02,830 --> 00:44:09,670
avoid using the Kerberos of replication

00:44:06,040 --> 00:44:11,950
server key property and instead of

00:44:09,670 --> 00:44:13,870
having one master Kerberos server many

00:44:11,950 --> 00:44:19,000
slaves basically we have multiple master

00:44:13,870 --> 00:44:23,380
kerberos service as well again setting

00:44:19,000 --> 00:44:25,570
up a replica is quite easy IP replica

00:44:23,380 --> 00:44:28,960
prepare run on the on the master

00:44:25,570 --> 00:44:30,490
generates a file that is encrypted so

00:44:28,960 --> 00:44:34,000
you can safely transport it over the

00:44:30,490 --> 00:44:35,800
network and you just get this file on on

00:44:34,000 --> 00:44:39,370
the new server you're an IP a regular

00:44:35,800 --> 00:44:40,690
install and you basically just do it it

00:44:39,370 --> 00:44:45,040
will take all the information in that

00:44:40,690 --> 00:44:46,660
file generate a new a new server install

00:44:45,040 --> 00:44:48,340
all the components and southern running

00:44:46,660 --> 00:44:49,750
it from that point on you have two

00:44:48,340 --> 00:44:52,270
servers that are replicating all the

00:44:49,750 --> 00:44:54,370
information if you if you had multiple

00:44:52,270 --> 00:44:56,140
server you can also use IP a replica

00:44:54,370 --> 00:44:58,690
managed to change in replication

00:44:56,140 --> 00:45:00,670
agreements so if you have for service

00:44:58,690 --> 00:45:03,730
you can use it to add a new replication

00:45:00,670 --> 00:45:08,830
agreement so you don't have a fully

00:45:03,730 --> 00:45:12,760
meshed replication we test up to and by

00:45:08,830 --> 00:45:16,000
testing in QA up to four servers they

00:45:12,760 --> 00:45:20,260
can replicate completely even get across

00:45:16,000 --> 00:45:22,600
there and you can use DNS records to

00:45:20,260 --> 00:45:24,970
basically spread the load about among

00:45:22,600 --> 00:45:27,430
gold clients so if your DNS service

00:45:24,970 --> 00:45:29,500
records you basically can tell the

00:45:27,430 --> 00:45:31,540
clients this is the list of katie sees

00:45:29,500 --> 00:45:33,520
this the list of ldap server connect to

00:45:31,540 --> 00:45:40,210
any of them and they will tend to spread

00:45:33,520 --> 00:45:43,810
the love around okay that was version 1

00:45:40,210 --> 00:45:48,850
and as I told you it lacks policy and

00:45:43,810 --> 00:45:51,610
audit so what do we have in version 2

00:45:48,850 --> 00:45:53,890
well in version 2 we have also some few

00:45:51,610 --> 00:45:55,930
interesting things the thing i'm working

00:45:53,890 --> 00:45:59,020
at the hmong is SSD citizen security

00:45:55,930 --> 00:46:02,980
services damon plus night people again

00:45:59,020 --> 00:46:05,860
that Damon is magical client agent that

00:46:02,980 --> 00:46:08,470
is able to combine kerberos

00:46:05,860 --> 00:46:12,160
authentication ldap queries policy query

00:46:08,470 --> 00:46:14,440
is in one piece do caching do offline

00:46:12,160 --> 00:46:16,420
operations these are things you can do

00:46:14,440 --> 00:46:20,170
with an assassin up or I'm Kurvers which

00:46:16,420 --> 00:46:22,720
are very bad thing because if you lose

00:46:20,170 --> 00:46:26,500
your network temporarily you can't get

00:46:22,720 --> 00:46:28,420
anymore user information so application

00:46:26,500 --> 00:46:31,450
may get stuck when they do a simple

00:46:28,420 --> 00:46:34,780
thing like a pw name which asks for

00:46:31,450 --> 00:46:36,670
information for the user we are creating

00:46:34,780 --> 00:46:38,500
a policy infrastructure where we have a

00:46:36,670 --> 00:46:42,040
policy process processor on the client

00:46:38,500 --> 00:46:43,900
also called by the by the demon and we

00:46:42,040 --> 00:46:47,320
have also managed to interfaces for that

00:46:43,900 --> 00:46:49,990
we we have we are introducing host based

00:46:47,320 --> 00:46:51,849
access control centrally managed in the

00:46:49,990 --> 00:46:54,520
rules our story nailed up so that you

00:46:51,849 --> 00:46:58,180
can say user food can connect to machine

00:46:54,520 --> 00:47:01,480
bar between eight and ten monday to

00:46:58,180 --> 00:47:03,220
friday nobody else or even at the

00:47:01,480 --> 00:47:08,109
service level you can say foo can

00:47:03,220 --> 00:47:11,770
connect to a bar through ssh but not not

00:47:08,109 --> 00:47:17,770
to Samba or HTTP stuff like that we are

00:47:11,770 --> 00:47:20,619
introducing roles in v2 let's meet

00:47:17,770 --> 00:47:22,750
complex let's go on because I have very

00:47:20,619 --> 00:47:24,820
little time left and we also have

00:47:22,750 --> 00:47:28,990
another demon both on the server and on

00:47:24,820 --> 00:47:31,210
the client a new web UI as you see we

00:47:28,990 --> 00:47:33,280
had to build a kind of hacking be one

00:47:31,210 --> 00:47:34,869
where you have a proxy stoeffel I even

00:47:33,280 --> 00:47:37,450
try to solve that we are also trying to

00:47:34,869 --> 00:47:39,910
have better using the face so we have

00:47:37,450 --> 00:47:43,150
sessions with people that expert in UI

00:47:39,910 --> 00:47:46,570
design to try to make it submit a bit

00:47:43,150 --> 00:47:48,940
better with adjectives with more

00:47:46,570 --> 00:47:51,910
interact and stuff like that although we

00:47:48,940 --> 00:47:55,690
keep the same code again to also provide

00:47:51,910 --> 00:47:59,320
all the common line stuff dns

00:47:55,690 --> 00:48:03,300
integration it's another thing we are

00:47:59,320 --> 00:48:06,490
working on a new of that bind plugin and

00:48:03,300 --> 00:48:09,520
just as they seek to provide the option

00:48:06,490 --> 00:48:11,470
to do dynamic updates a registration

00:48:09,520 --> 00:48:12,910
authority which can connect a

00:48:11,470 --> 00:48:16,920
certification authority to request

00:48:12,910 --> 00:48:21,130
certificates and other services another

00:48:16,920 --> 00:48:23,049
so this is the picture of v2 it's not

00:48:21,130 --> 00:48:25,089
very different from the previous one but

00:48:23,049 --> 00:48:27,700
you can see the few more things that we

00:48:25,089 --> 00:48:29,829
asked and a few more pieces in the core

00:48:27,700 --> 00:48:36,579
still would try to keep it simple from

00:48:29,829 --> 00:48:38,440
the management point of view yeah just

00:48:36,579 --> 00:48:41,589
one word on client machine identities

00:48:38,440 --> 00:48:43,630
what we lack in v1 was by default having

00:48:41,589 --> 00:48:45,430
an identity for the machine and that's

00:48:43,630 --> 00:48:50,140
very important back here because you

00:48:45,430 --> 00:48:51,849
want to really be able to use kerberos

00:48:50,140 --> 00:48:55,059
also from the machine to connect to the

00:48:51,849 --> 00:48:59,259
server to get data in an authenticating

00:48:55,059 --> 00:49:01,000
way and you want to be able to by

00:48:59,259 --> 00:49:03,039
default connect to another machine is

00:49:01,000 --> 00:49:08,440
ssh and kerberos without having to

00:49:03,039 --> 00:49:10,630
manually create a host principal and

00:49:08,440 --> 00:49:15,309
install it manually in the server so we

00:49:10,630 --> 00:49:18,130
do that through the new client policies

00:49:15,309 --> 00:49:20,079
we discuss them a bit if you have if

00:49:18,130 --> 00:49:21,640
you're interested we have thought later

00:49:20,079 --> 00:49:25,119
on in the Fedora session I will talk

00:49:21,640 --> 00:49:28,690
about without these and audit as well

00:49:25,119 --> 00:49:30,930
2pcs the client that collects audit

00:49:28,690 --> 00:49:34,059
audit logs for the colonel audit logs

00:49:30,930 --> 00:49:37,150
syslog as well can use of our seas lab

00:49:34,059 --> 00:49:39,309
to send them we will also have an option

00:49:37,150 --> 00:49:41,799
to UT and QP which is a very interesting

00:49:39,309 --> 00:49:44,859
messaging protocol has a very good thing

00:49:41,799 --> 00:49:46,630
that it can do store and forward so if

00:49:44,859 --> 00:49:48,819
you machine lose the network you can

00:49:46,630 --> 00:49:51,130
store the lab separately when the next

00:49:48,819 --> 00:49:52,779
to come back can send them you can also

00:49:51,130 --> 00:49:54,490
have routing rules so you can have a

00:49:52,779 --> 00:49:56,680
notice server that is interesting only

00:49:54,490 --> 00:49:58,630
on subset of the logs and another one

00:49:56,680 --> 00:50:01,960
that collects all them justice for

00:49:58,630 --> 00:50:05,200
storage of stuff like that in in fact we

00:50:01,960 --> 00:50:07,150
have a server component it gets all the

00:50:05,200 --> 00:50:09,369
information from the client uses

00:50:07,150 --> 00:50:11,049
kerberos authentication to connect the

00:50:09,369 --> 00:50:13,119
client and server so that you have

00:50:11,049 --> 00:50:15,400
authentication sign and seal of the

00:50:13,119 --> 00:50:18,309
connection you so you have proved that

00:50:15,400 --> 00:50:23,349
the law comes from the real client and

00:50:18,309 --> 00:50:25,660
stores them for later review and I have

00:50:23,349 --> 00:50:28,089
no time I wanted to just show this

00:50:25,660 --> 00:50:30,970
diagram which is the thing I'm working

00:50:28,089 --> 00:50:33,999
on I will talk about this in detail in

00:50:30,970 --> 00:50:36,009
today fedora talk session

00:50:33,999 --> 00:50:38,889
or 4pm if you are interested in this

00:50:36,009 --> 00:50:45,659
component I guess we don't have time

00:50:38,889 --> 00:50:45,659
much time for questions maybe one yep

00:50:47,099 --> 00:50:52,239
okay so the question is Windows

00:50:49,239 --> 00:50:54,519
integration is stated version 2 that's a

00:50:52,239 --> 00:50:56,199
very interesting question the problem

00:50:54,519 --> 00:50:58,239
with Windows is that they actually

00:50:56,199 --> 00:50:59,859
assume a lot of things from an

00:50:58,239 --> 00:51:03,939
authentication from the navigation

00:50:59,859 --> 00:51:07,269
teenager point of view at the moment we

00:51:03,939 --> 00:51:09,909
have a synchronization between free IPA

00:51:07,269 --> 00:51:13,329
users and Active Directory users if you

00:51:09,909 --> 00:51:15,609
use active directory there we have on

00:51:13,329 --> 00:51:17,289
our wiki page is also instructions built

00:51:15,609 --> 00:51:20,709
by some users very very good

00:51:17,289 --> 00:51:22,539
instructions if you just want to use the

00:51:20,709 --> 00:51:24,639
curb side of your PA to the

00:51:22,539 --> 00:51:27,279
authentication the problem is there is

00:51:24,639 --> 00:51:29,709
that winners will never connect to ldap

00:51:27,279 --> 00:51:31,899
to get user and group information so

00:51:29,709 --> 00:51:34,239
what what what you do in that cage is

00:51:31,899 --> 00:51:36,249
basically you create a local user and

00:51:34,239 --> 00:51:38,529
you associate that user the Kerberos

00:51:36,249 --> 00:51:40,839
credentials so you can get at least your

00:51:38,529 --> 00:51:42,969
kerberos credentials if you don't have a

00:51:40,839 --> 00:51:45,129
lot of interaction maybe you have just

00:51:42,969 --> 00:51:47,979
the Windows desktop for some special

00:51:45,129 --> 00:51:49,779
purpose then maybe having group and

00:51:47,979 --> 00:51:51,939
other information is not that important

00:51:49,779 --> 00:51:54,189
you can use it mated at least you have

00:51:51,939 --> 00:51:56,199
centralized authentication against IPA

00:51:54,189 --> 00:51:59,019
you can access services through Cobras

00:51:56,199 --> 00:52:01,929
but yeah it's kind of limited and the

00:51:59,019 --> 00:52:04,149
plan is to work with the summer

00:52:01,929 --> 00:52:07,629
community to basically integrate free

00:52:04,149 --> 00:52:12,189
IPS on the for some point but that will

00:52:07,629 --> 00:52:15,759
take a lot of time this month version 2

00:52:12,189 --> 00:52:19,469
under development I have a number of

00:52:15,759 --> 00:52:19,469
pieces of this thing you're seeing here

00:52:19,750 --> 00:52:27,710
we initially try to shut for release

00:52:24,910 --> 00:52:32,480
early this summer I don't think we will

00:52:27,710 --> 00:52:35,089
make it a it's really a lot of work to

00:52:32,480 --> 00:52:38,599
add other pieces but we are confident we

00:52:35,089 --> 00:52:41,810
can have at least very basic pieces

00:52:38,599 --> 00:52:44,359
working some time by the summer so we

00:52:41,810 --> 00:52:46,339
can start testing stuff in the master

00:52:44,359 --> 00:52:48,680
tree we now have all the new web UI

00:52:46,339 --> 00:52:52,640
stuff the new common line guilty stuff

00:52:48,680 --> 00:52:55,490
that jason has built and we have the SSD

00:52:52,640 --> 00:52:58,640
tree which is going on the policy world

00:52:55,490 --> 00:53:00,920
has started as well we have some stuff

00:52:58,640 --> 00:53:03,609
there we have a basic daemon is being

00:53:00,920 --> 00:53:07,960
integrated so yes we are progressing but

00:53:03,609 --> 00:53:07,960

YouTube URL: https://www.youtube.com/watch?v=7rljVIVHT6o


