Title: FOSDEM 2009 - 10 cool things about Exherbo
Publication date: 2011-12-22
Playlist: FOSDEM 2009
Description: 
	By Bryan Ã˜stergaard

This talk will focus on 10 important features that makes it easier for users and developers alike to work with Exherbo. While the talk will focus on the current state of Exherbo and the short-term future the ideas being presented should be equally interesting for other distribution developers and users.

FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:07,710 --> 00:00:16,060
let's start can you all hear me fine

00:00:12,420 --> 00:00:19,300
okay I'm going to give a very brief

00:00:16,060 --> 00:00:21,520
introduction to how the Aksarben Linux

00:00:19,300 --> 00:00:23,920
distribution got started how I actually

00:00:21,520 --> 00:00:28,510
started it and then I'm going to talk

00:00:23,920 --> 00:00:31,810
about ten or actually 11 things that I

00:00:28,510 --> 00:00:33,970
think we are doing that's cool and

00:00:31,810 --> 00:00:38,220
exciting that that we're trying to do

00:00:33,970 --> 00:00:42,970
differently from other projects and

00:00:38,220 --> 00:00:46,000
those cool things should should apply to

00:00:42,970 --> 00:00:48,940
other projects than just Linux

00:00:46,000 --> 00:00:52,890
distributions that's that's my aim at

00:00:48,940 --> 00:00:56,800
least so okay

00:00:52,890 --> 00:00:59,170
in the beginning I had just left gentle

00:00:56,800 --> 00:01:02,860
Linux as a developer after four years

00:00:59,170 --> 00:01:04,869
and I was standing to wonder what I was

00:01:02,860 --> 00:01:08,350
going to do with all this free time of

00:01:04,869 --> 00:01:10,810
mine that I certainly had and I knew I

00:01:08,350 --> 00:01:14,500
was going to spend it doing open source

00:01:10,810 --> 00:01:18,069
development somehow but wasn't quite

00:01:14,500 --> 00:01:22,000
sure what I was going to do so then I

00:01:18,069 --> 00:01:26,410
was sitting just me and own and doing

00:01:22,000 --> 00:01:29,560
some random stuff really but slowly I

00:01:26,410 --> 00:01:33,160
started just trying to build a few

00:01:29,560 --> 00:01:37,750
packages for myself just really basic

00:01:33,160 --> 00:01:40,270
packages like GDC and the new compiler

00:01:37,750 --> 00:01:42,580
suite and so on

00:01:40,270 --> 00:01:45,459
just a few packages and just

00:01:42,580 --> 00:01:48,069
experimenting seeing how simple I could

00:01:45,459 --> 00:01:50,560
get stuff trying to solve some of the

00:01:48,069 --> 00:01:53,440
problems left that I've seen in other

00:01:50,560 --> 00:01:55,720
distributions and stuff like that but I

00:01:53,440 --> 00:02:00,039
wasn't really thinking about doing a

00:01:55,720 --> 00:02:02,229
distribution at this point but slowly I

00:02:00,039 --> 00:02:05,319
I experimented with more and more

00:02:02,229 --> 00:02:11,110
packages and then it looked something

00:02:05,319 --> 00:02:14,260
like that tons of packages and still

00:02:11,110 --> 00:02:18,350
just me doing all the work and it was

00:02:14,260 --> 00:02:21,960
beginning to be a bit messy actually

00:02:18,350 --> 00:02:24,230
so at this point I started choking I

00:02:21,960 --> 00:02:26,910
stand first I started realizing that

00:02:24,230 --> 00:02:29,640
maybe I was actually doing a

00:02:26,910 --> 00:02:32,730
distribution here that might actually be

00:02:29,640 --> 00:02:35,580
what I was was beginning to work on so I

00:02:32,730 --> 00:02:39,720
start discussing this with a few friends

00:02:35,580 --> 00:02:42,780
of mine that seem to be interested in my

00:02:39,720 --> 00:02:45,240
ideas and said oh please keep working on

00:02:42,780 --> 00:02:49,230
that and it might be something we'd be

00:02:45,240 --> 00:02:51,390
interested in they don't fortunately

00:02:49,230 --> 00:02:55,550
these friends of mine stuck around and

00:02:51,390 --> 00:02:55,550
started helping with this distribution

00:02:56,930 --> 00:03:06,330
and then I had a few ideas about what I

00:03:02,730 --> 00:03:09,959
wanted to do with the distribution some

00:03:06,330 --> 00:03:13,830
of these ideas is quite contrary to what

00:03:09,959 --> 00:03:16,380
other open-source projects are doing one

00:03:13,830 --> 00:03:17,760
example is that I want as few developers

00:03:16,380 --> 00:03:20,760
as possible

00:03:17,760 --> 00:03:23,280
I don't want 100 developers I want 10 or

00:03:20,760 --> 00:03:24,930
20 developers for this project and I

00:03:23,280 --> 00:03:27,080
don't really want it to grow any larger

00:03:24,930 --> 00:03:30,630
than that if I can avoid it

00:03:27,080 --> 00:03:33,060
and the reason for that is that as soon

00:03:30,630 --> 00:03:35,190
as projects growth to be a hundred

00:03:33,060 --> 00:03:37,650
developers or 200 developers you're

00:03:35,190 --> 00:03:39,630
going to get a lot of organizational

00:03:37,650 --> 00:03:42,660
problems people are wanting very

00:03:39,630 --> 00:03:46,110
different things you're going to start

00:03:42,660 --> 00:03:48,900
having at least some internal fights in

00:03:46,110 --> 00:03:51,360
the project it's going to be much harder

00:03:48,900 --> 00:03:53,160
to control the project and make sure

00:03:51,360 --> 00:03:55,890
that it's actually going in the

00:03:53,160 --> 00:03:58,950
direction that that you had wonder from

00:03:55,890 --> 00:04:01,920
the beginning so to avoid all these

00:03:58,950 --> 00:04:08,299
problems I was just going to keep the

00:04:01,920 --> 00:04:08,299
developer count as low as possible and

00:04:08,810 --> 00:04:15,410
one problem with that is that with 10

00:04:11,730 --> 00:04:18,000
developers and a sort of Foom Linux

00:04:15,410 --> 00:04:20,729
distribution with 10,000 packages or

00:04:18,000 --> 00:04:24,330
15,000 packages effort developer is

00:04:20,729 --> 00:04:26,370
going to be incredibly busy just making

00:04:24,330 --> 00:04:29,490
sure that new versions of all these

00:04:26,370 --> 00:04:31,470
pages are available and it would be kind

00:04:29,490 --> 00:04:34,290
of impossible to make sure

00:04:31,470 --> 00:04:35,070
that we could actually fix box timely

00:04:34,290 --> 00:04:39,480
and so on

00:04:35,070 --> 00:04:42,600
so my next realization was that having

00:04:39,480 --> 00:04:48,000
these few developers we also needed to

00:04:42,600 --> 00:04:50,850
have very few packages and of course

00:04:48,000 --> 00:04:52,920
people want 15,000 packages that's what

00:04:50,850 --> 00:04:57,060
users want they want all the peg just

00:04:52,920 --> 00:04:59,220
available right away that they use and

00:04:57,060 --> 00:05:05,280
people use a lot of different packages

00:04:59,220 --> 00:05:07,620
so the way to do this is that we as

00:05:05,280 --> 00:05:12,350
official experiment developers just

00:05:07,620 --> 00:05:16,290
focus on the core packages so we are

00:05:12,350 --> 00:05:20,670
focusing on making sure that the GCC in

00:05:16,290 --> 00:05:24,120
Tennessee in its systems so on is

00:05:20,670 --> 00:05:27,570
available to users we are making a few

00:05:24,120 --> 00:05:34,790
things available that most useless one

00:05:27,570 --> 00:05:34,790
like KDE and Gnome and different popular

00:05:34,850 --> 00:05:40,620
desktop environments but but not all the

00:05:38,340 --> 00:05:43,410
desktop environments because that's not

00:05:40,620 --> 00:05:46,620
really needed we just need the most

00:05:43,410 --> 00:05:49,530
problems so so you can take and install

00:05:46,620 --> 00:05:52,260
Excel on a system and it's useful out of

00:05:49,530 --> 00:05:54,180
the box it may not have all the packages

00:05:52,260 --> 00:05:58,340
and all the stuff that you want but it's

00:05:54,180 --> 00:06:04,979
still disabled and that's important so

00:05:58,340 --> 00:06:07,470
the way we do try to support 15,000

00:06:04,979 --> 00:06:10,110
packages of 10,000 packages or whatever

00:06:07,470 --> 00:06:13,470
the goal is going to be is that instead

00:06:10,110 --> 00:06:16,740
of adding lots of developers to to excel

00:06:13,470 --> 00:06:19,880
we we make it extremely easy for users

00:06:16,740 --> 00:06:23,310
to build their own packages to import

00:06:19,880 --> 00:06:27,600
binary packages to their systems to

00:06:23,310 --> 00:06:31,110
contribute patches to a terrible so so

00:06:27,600 --> 00:06:33,240
we have we focused very much on what I

00:06:31,110 --> 00:06:36,660
call distributed development or

00:06:33,240 --> 00:06:40,860
decentralized development so right now

00:06:36,660 --> 00:06:44,600
we have about 20 developers and we have

00:06:40,860 --> 00:06:48,210
at least 20 users that's actively

00:06:44,600 --> 00:06:50,640
contributing new packages and so on to

00:06:48,210 --> 00:06:54,600
excel so that's actually working quite

00:06:50,640 --> 00:06:57,030
well and the way to make it work is to

00:06:54,600 --> 00:06:59,220
focus on the problems of distributed

00:06:57,030 --> 00:07:02,040
development and making sure that you

00:06:59,220 --> 00:07:06,480
have tools making it fairly easy to do

00:07:02,040 --> 00:07:08,370
this so my first point is package

00:07:06,480 --> 00:07:11,540
manager support from will to submit

00:07:08,370 --> 00:07:15,050
dependent repositories we have a code

00:07:11,540 --> 00:07:18,540
Pegasus repository named Apple that's

00:07:15,050 --> 00:07:21,900
containing TVC and GCC and a few other

00:07:18,540 --> 00:07:24,720
necessities like our tools and so on

00:07:21,900 --> 00:07:27,630
just just what's needed to boot up your

00:07:24,720 --> 00:07:30,330
system all this and build packages not

00:07:27,630 --> 00:07:34,620
much more than that so stuff that's

00:07:30,330 --> 00:07:38,400
needed on all example systems then we

00:07:34,620 --> 00:07:40,410
have several other repositories we have

00:07:38,400 --> 00:07:42,900
a KDE repository we have AK known

00:07:40,410 --> 00:07:46,500
repository we have a repository with

00:07:42,900 --> 00:07:48,540
scientific packages and so on and we're

00:07:46,500 --> 00:07:51,270
making sure that the package management

00:07:48,540 --> 00:07:56,430
makes it easy to use all these different

00:07:51,270 --> 00:07:59,270
package repositories and one way we are

00:07:56,430 --> 00:08:01,620
doing that is that we are making

00:07:59,270 --> 00:08:04,230
repositories depend on each other

00:08:01,620 --> 00:08:06,720
because in the Paris repositories we

00:08:04,230 --> 00:08:09,420
also have some libraries making it

00:08:06,720 --> 00:08:12,690
easier to write our packages because all

00:08:09,420 --> 00:08:14,850
the KDE pages for example are using

00:08:12,690 --> 00:08:17,310
pretty much the same functions to

00:08:14,850 --> 00:08:20,280
install packages so we just put these

00:08:17,310 --> 00:08:24,570
functions in a library that all the KDE

00:08:20,280 --> 00:08:27,090
packages can use but these libraries

00:08:24,570 --> 00:08:30,780
need to be shared between different

00:08:27,090 --> 00:08:32,930
repositories so so we with when we're

00:08:30,780 --> 00:08:35,580
making a new repository we are saying

00:08:32,930 --> 00:08:38,400
here's this new repository and the

00:08:35,580 --> 00:08:39,270
master repository for this is our poor

00:08:38,400 --> 00:08:41,490
KDE

00:08:39,270 --> 00:08:43,710
or whatever and we can set several

00:08:41,490 --> 00:08:47,160
different masters for this repository

00:08:43,710 --> 00:08:51,570
where it can grab these libraries from

00:08:47,160 --> 00:08:55,740
so we don't have to copy libraries to

00:08:51,570 --> 00:08:57,510
all the different repositories so that's

00:08:55,740 --> 00:09:01,320
one way we we

00:08:57,510 --> 00:09:10,459
making it possible to use multiple

00:09:01,320 --> 00:09:13,199
repositories yes another way is that I

00:09:10,459 --> 00:09:16,050
think on my laptop I'd probably have

00:09:13,199 --> 00:09:17,399
about 20 package repositories installed

00:09:16,050 --> 00:09:20,820
something like that

00:09:17,399 --> 00:09:22,649
and and we have maybe 35 package

00:09:20,820 --> 00:09:26,250
repositories in all or something like

00:09:22,649 --> 00:09:28,920
that and it's growing all the time so

00:09:26,250 --> 00:09:32,100
for users they need to be able to

00:09:28,920 --> 00:09:34,589
quickly decide if they want to install

00:09:32,100 --> 00:09:39,120
the package which repository is this

00:09:34,589 --> 00:09:42,230
packages available in and and to

00:09:39,120 --> 00:09:44,940
facilitate this we made a special

00:09:42,230 --> 00:09:48,750
repository type called unavailable

00:09:44,940 --> 00:09:51,540
repository and that's nothing more than

00:09:48,750 --> 00:09:53,490
than a big list of all the packages and

00:09:51,540 --> 00:09:56,579
all the different repositories that we

00:09:53,490 --> 00:09:59,519
know about so every time I'm updating

00:09:56,579 --> 00:10:00,930
repositories on my left and updating all

00:09:59,519 --> 00:10:03,480
the package information

00:10:00,930 --> 00:10:06,180
I'm also updating this unavailable

00:10:03,480 --> 00:10:08,160
repository and when I'm trying to

00:10:06,180 --> 00:10:11,279
install a package that's not available

00:10:08,160 --> 00:10:13,529
in any of my installed repositories

00:10:11,279 --> 00:10:13,889
unavailable repository is going to tell

00:10:13,529 --> 00:10:16,260
me that

00:10:13,889 --> 00:10:18,449
hey it's not available in any of the

00:10:16,260 --> 00:10:22,529
stores you already install but it's

00:10:18,449 --> 00:10:26,310
available in the repository named X or

00:10:22,529 --> 00:10:28,829
KDE or whatever so I'm getting the name

00:10:26,310 --> 00:10:31,319
of the repository that I need to install

00:10:28,829 --> 00:10:34,410
this package because we already have

00:10:31,319 --> 00:10:41,100
built and index and update this index of

00:10:34,410 --> 00:10:45,990
packages regularly taking that idea a

00:10:41,100 --> 00:10:49,560
bit further we've made an unwritten

00:10:45,990 --> 00:10:52,050
repository that's fairly similar to

00:10:49,560 --> 00:10:54,630
unavailable repositories in that it's

00:10:52,050 --> 00:10:57,089
just a list of packages that's that

00:10:54,630 --> 00:10:59,279
doesn't exist on your system but it's a

00:10:57,089 --> 00:11:02,519
bit more than that in that it's yeah

00:10:59,279 --> 00:11:04,550
it's a list of packages that nobody has

00:11:02,519 --> 00:11:08,279
written yet

00:11:04,550 --> 00:11:11,189
so it just contains metadata about these

00:11:08,279 --> 00:11:11,390
packages so for example if we don't have

00:11:11,189 --> 00:11:15,980
a

00:11:11,390 --> 00:11:18,980
 4kd games we might add it to

00:11:15,980 --> 00:11:23,030
that repository saying we need to write

00:11:18,980 --> 00:11:28,190
a package for KDE games and the the UIL

00:11:23,030 --> 00:11:28,430
to the KDE games website is this and so

00:11:28,190 --> 00:11:31,840
on

00:11:28,430 --> 00:11:34,310
one at different mate states about this

00:11:31,840 --> 00:11:36,980
package that we need to write in the

00:11:34,310 --> 00:11:40,640
future and it's making it easier in the

00:11:36,980 --> 00:11:43,580
way that we collect all this information

00:11:40,640 --> 00:11:46,700
in the package manager so instead of

00:11:43,580 --> 00:11:48,920
going to our Park tracker and searching

00:11:46,700 --> 00:11:52,180
for some packets and seeing if somebody

00:11:48,920 --> 00:11:55,670
should have mentioned that and maybe

00:11:52,180 --> 00:11:57,590
made some attempt at a package and so on

00:11:55,670 --> 00:11:59,390
we just get the information directly

00:11:57,590 --> 00:12:01,730
from the package mentioned when we

00:11:59,390 --> 00:12:05,330
search for the package or try to install

00:12:01,730 --> 00:12:08,090
the package and that makes it much

00:12:05,330 --> 00:12:11,690
easier both for the developers and for

00:12:08,090 --> 00:12:17,810
users to find out what's the status of

00:12:11,690 --> 00:12:19,940
this and users are also welcome to tell

00:12:17,810 --> 00:12:21,590
us that they want the package and if we

00:12:19,940 --> 00:12:23,840
don't have time to write that package

00:12:21,590 --> 00:12:26,450
right now and the users and capable of

00:12:23,840 --> 00:12:30,290
writing the package himself we can just

00:12:26,450 --> 00:12:32,270
add it to unwritten repository in and we

00:12:30,290 --> 00:12:35,240
know in the future that this package

00:12:32,270 --> 00:12:38,390
actor needs to get written we need we

00:12:35,240 --> 00:12:39,800
know who requested it and so on instead

00:12:38,390 --> 00:12:42,500
of having to go to a completely

00:12:39,800 --> 00:12:50,810
different interface we have it right in

00:12:42,500 --> 00:12:53,660
our package manager right there kind of

00:12:50,810 --> 00:12:57,620
mentioned this but package manager

00:12:53,660 --> 00:12:59,720
handling most things is important we are

00:12:57,620 --> 00:13:02,810
using the package manager everyday of

00:12:59,720 --> 00:13:05,780
course as part of the development we

00:13:02,810 --> 00:13:09,890
install packages we upgrade packages and

00:13:05,780 --> 00:13:11,990
uninstall packages and so on so what we

00:13:09,890 --> 00:13:16,010
really want is the package manager to

00:13:11,990 --> 00:13:19,580
handle most things it's not everything

00:13:16,010 --> 00:13:21,890
but but most things is action suit a

00:13:19,580 --> 00:13:25,279
very fairly well for the package manage

00:13:21,890 --> 00:13:28,759
and also some things that might not seem

00:13:25,279 --> 00:13:31,279
obvious at first but so one of the

00:13:28,759 --> 00:13:33,259
things is what we call as alternatives

00:13:31,279 --> 00:13:37,399
and Damien has something similar and

00:13:33,259 --> 00:13:40,639
generous something similar but what we

00:13:37,399 --> 00:13:43,329
want to provide is different different

00:13:40,639 --> 00:13:46,610
versions of emails different

00:13:43,329 --> 00:13:51,860
implementations of VI and so on and let

00:13:46,610 --> 00:13:55,910
the user decide which version to use but

00:13:51,860 --> 00:14:00,399
we need Peggy support Felice because

00:13:55,910 --> 00:14:02,569
packets is supposed to register a new

00:14:00,399 --> 00:14:05,180
implementation of VI our new

00:14:02,569 --> 00:14:08,290
implementation of Emacs and so on so we

00:14:05,180 --> 00:14:12,499
can later select between these

00:14:08,290 --> 00:14:15,529
alternatives that we have installed so

00:14:12,499 --> 00:14:18,370
in the packages we have we have a small

00:14:15,529 --> 00:14:22,339
library supporting these alternatives

00:14:18,370 --> 00:14:25,249
and that just makes the few functions

00:14:22,339 --> 00:14:30,879
available to package packages to

00:14:25,249 --> 00:14:34,069
register these versions and so on and

00:14:30,879 --> 00:14:39,740
also the own installation part of it of

00:14:34,069 --> 00:14:42,740
course so another thing that's quite new

00:14:39,740 --> 00:14:45,410
action is support for accounts directly

00:14:42,740 --> 00:14:47,870
in the package manager what most

00:14:45,410 --> 00:14:51,079
distributions do when they are

00:14:47,870 --> 00:14:53,180
installing MySQL or Apache for example

00:14:51,079 --> 00:14:57,110
is that they need a use of that this

00:14:53,180 --> 00:14:59,360
demon can run us so they just add an add

00:14:57,110 --> 00:15:03,889
user command somewhere and install

00:14:59,360 --> 00:15:07,069
scripts that sits up this use and this

00:15:03,889 --> 00:15:11,750
works fairly well I'd say but but we are

00:15:07,069 --> 00:15:15,110
able to do much better than that so what

00:15:11,750 --> 00:15:19,040
we did was make an accounts repository

00:15:15,110 --> 00:15:22,790
that takes care of of installing users

00:15:19,040 --> 00:15:25,490
and groups and one of the thing that

00:15:22,790 --> 00:15:28,220
allows us to is that when we list the

00:15:25,490 --> 00:15:31,790
packages that needs to be installed when

00:15:28,220 --> 00:15:33,889
I want to install for example Apache our

00:15:31,790 --> 00:15:36,740
package manager panelist can also this

00:15:33,889 --> 00:15:38,870
that it's going to create this user in

00:15:36,740 --> 00:15:41,180
this group because it's just

00:15:38,870 --> 00:15:45,710
treated as normal dependencies in our

00:15:41,180 --> 00:15:48,650
system right now we can't we don't yet

00:15:45,710 --> 00:15:52,460
have the ability to upgrade users but

00:15:48,650 --> 00:15:55,430
we'll gain that at some time and it's

00:15:52,460 --> 00:15:58,460
not just Unix accounts I'll because

00:15:55,430 --> 00:16:02,300
we'll be able to create MySQL users and

00:15:58,460 --> 00:16:06,260
so on in some time so when you install

00:16:02,300 --> 00:16:08,990
mid TV or whatever that requires its own

00:16:06,260 --> 00:16:14,089
might as well use the package manager

00:16:08,990 --> 00:16:16,730
can take care of creating this use in a

00:16:14,089 --> 00:16:19,010
standard way instead of having five

00:16:16,730 --> 00:16:28,190
different packages calling at use and

00:16:19,010 --> 00:16:33,470
five different ways for example options

00:16:28,190 --> 00:16:35,740
is we have a lot of just like gentle we

00:16:33,470 --> 00:16:39,950
have a lot of options for each package

00:16:35,740 --> 00:16:43,250
for example if we have a PHP package we

00:16:39,950 --> 00:16:44,630
might want to build it with JPEG support

00:16:43,250 --> 00:16:47,900
or we might want to build it without

00:16:44,630 --> 00:16:50,779
jpeg support so you can specify that for

00:16:47,900 --> 00:16:53,450
the package but there's also a lot of

00:16:50,779 --> 00:16:56,720
options let's applies generically to

00:16:53,450 --> 00:16:59,890
packages for example do you want to

00:16:56,720 --> 00:17:03,350
build packages with develop information

00:16:59,890 --> 00:17:07,490
do we want to strip debug information so

00:17:03,350 --> 00:17:10,670
on so we made a generic interface to

00:17:07,490 --> 00:17:15,319
specify such options for all the

00:17:10,670 --> 00:17:18,260
packages and we we are able to from from

00:17:15,319 --> 00:17:20,510
the packets to look at these options see

00:17:18,260 --> 00:17:23,300
which options are enable which options

00:17:20,510 --> 00:17:26,600
are disabled and do whatever is needed

00:17:23,300 --> 00:17:29,150
if anything special is needed to handle

00:17:26,600 --> 00:17:31,070
this it might be that the packets need

00:17:29,150 --> 00:17:34,730
to do something special when you enable

00:17:31,070 --> 00:17:37,940
deep parking information for example so

00:17:34,730 --> 00:17:41,840
we are able to have that in the future

00:17:37,940 --> 00:17:45,760
we are probably going to have options

00:17:41,840 --> 00:17:49,010
for various source control management

00:17:45,760 --> 00:17:52,299
systems so you through options can

00:17:49,010 --> 00:17:56,500
specify the exact revision

00:17:52,299 --> 00:17:59,830
of a JIT package submersion packets that

00:17:56,500 --> 00:18:04,000
you want to install for example stuff

00:17:59,830 --> 00:18:06,549
like that and it's fairly powerful being

00:18:04,000 --> 00:18:10,679
able to to apply these options

00:18:06,549 --> 00:18:13,390
generically across packages without

00:18:10,679 --> 00:18:20,650
packages in most cases having to do

00:18:13,390 --> 00:18:24,040
anything special to allow this one of

00:18:20,650 --> 00:18:26,350
the other things we're trying to do is

00:18:24,040 --> 00:18:30,780
to keep good metadata about all the

00:18:26,350 --> 00:18:30,780
packages and all the other stuff we have

00:18:31,110 --> 00:18:37,809
it's fairly easy just adding metadata to

00:18:34,510 --> 00:18:42,340
packages but it's also in many ways

00:18:37,809 --> 00:18:46,260
fairly important and it's just miss data

00:18:42,340 --> 00:18:50,590
like where's the package coming from

00:18:46,260 --> 00:18:52,960
who's the author of the package when we

00:18:50,590 --> 00:18:56,110
are doing when we are adding patches to

00:18:52,960 --> 00:18:58,780
so packages have the patch been sent

00:18:56,110 --> 00:19:00,760
upstream have upstream rejected the

00:18:58,780 --> 00:19:04,419
patch who I have our free reject of the

00:19:00,760 --> 00:19:07,270
paps who made the patch and so on and it

00:19:04,419 --> 00:19:09,549
allows us to to keep really good track

00:19:07,270 --> 00:19:12,190
of all the patches and it makes it much

00:19:09,549 --> 00:19:14,770
easier also when we are doing a new

00:19:12,190 --> 00:19:17,200
version of a package to just decide

00:19:14,770 --> 00:19:19,330
which patches are still needed and so on

00:19:17,200 --> 00:19:21,790
because we have a direct link to the

00:19:19,330 --> 00:19:26,020
mailing list post where this accept

00:19:21,790 --> 00:19:28,750
patches discussed and so on and we

00:19:26,020 --> 00:19:32,380
actually make sure to require quite a

00:19:28,750 --> 00:19:34,950
bit of this metadata so people are not

00:19:32,380 --> 00:19:37,510
allowed to add patches to to our

00:19:34,950 --> 00:19:40,030
repositories without describing whether

00:19:37,510 --> 00:19:43,710
the patches send upstream and watch the

00:19:40,030 --> 00:19:43,710
states yourself the patch and so on

00:19:49,520 --> 00:19:59,309
okay another thing is the user interface

00:19:56,390 --> 00:20:02,370
with all the flexibility of source based

00:19:59,309 --> 00:20:05,010
distributions like Excel it's fairly

00:20:02,370 --> 00:20:09,500
important that that we have a user

00:20:05,010 --> 00:20:12,360
interface that's easy to to figure out

00:20:09,500 --> 00:20:14,640
and it's fairly important that we don't

00:20:12,360 --> 00:20:18,419
have 500 different ways to configure

00:20:14,640 --> 00:20:20,580
things we're not going to change the

00:20:18,419 --> 00:20:22,549
Apache configuration of course but but

00:20:20,580 --> 00:20:24,780
all the things that relate to our

00:20:22,549 --> 00:20:28,440
distribution of such how to install

00:20:24,780 --> 00:20:31,770
packages web pages and stores and so on

00:20:28,440 --> 00:20:34,980
needs a standard configuration and not

00:20:31,770 --> 00:20:39,540
five different ways to configure this to

00:20:34,980 --> 00:20:41,370
make it easy for for users to use so we

00:20:39,540 --> 00:20:46,400
are going for a fairly simple

00:20:41,370 --> 00:20:49,440
configuration in many cases although net

00:20:46,400 --> 00:20:53,070
kind of configuration might be slightly

00:20:49,440 --> 00:21:01,200
too easy so so we are going for somewhat

00:20:53,070 --> 00:21:04,230
harder configuration right so and

00:21:01,200 --> 00:21:08,370
another related thing is upstream error

00:21:04,230 --> 00:21:10,470
reporting upfront error recording so

00:21:08,370 --> 00:21:12,480
what we are trying to do with with these

00:21:10,470 --> 00:21:15,480
two points is that we're trying to

00:21:12,480 --> 00:21:19,380
saying that we want to install 20 pages

00:21:15,480 --> 00:21:21,750
maybe and we want to in advance before

00:21:19,380 --> 00:21:23,910
pressing the big button installing these

00:21:21,750 --> 00:21:26,309
pangs want to provide all the

00:21:23,910 --> 00:21:31,080
configuration information needed to

00:21:26,309 --> 00:21:33,900
install these packages so we need to to

00:21:31,080 --> 00:21:36,419
tell the package manager upfront exactly

00:21:33,900 --> 00:21:39,150
what's going to be included in which

00:21:36,419 --> 00:21:42,210
Pegasus we are we going to include JPEG

00:21:39,150 --> 00:21:45,809
support are we going to include PHP

00:21:42,210 --> 00:21:49,049
support or whatever but we also want

00:21:45,809 --> 00:21:52,260
upfront error reporting because if we

00:21:49,049 --> 00:21:54,570
make infinite shrank to install 20

00:21:52,260 --> 00:21:56,490
packages and some of some of these

00:21:54,570 --> 00:21:56,940
packages are in comfortable with each

00:21:56,490 --> 00:22:00,059
other

00:21:56,940 --> 00:22:02,010
blocking each other in some way or one

00:22:00,059 --> 00:22:04,380
of them require JPEGs reporting

00:22:02,010 --> 00:22:06,780
have an enable JPEG support we want to

00:22:04,380 --> 00:22:09,510
know before it's installed half of the

00:22:06,780 --> 00:22:13,680
packages and break down with some silly

00:22:09,510 --> 00:22:16,770
error message halfway through upfront

00:22:13,680 --> 00:22:21,810
error reporting is also known by many of

00:22:16,770 --> 00:22:24,870
you I'm sure as fail early that's that's

00:22:21,810 --> 00:22:27,780
very important actually because if I'm

00:22:24,870 --> 00:22:30,330
installing twenty packages if it's big

00:22:27,780 --> 00:22:32,250
packages it might take two hours to

00:22:30,330 --> 00:22:35,310
install these and I don't want to sit in

00:22:32,250 --> 00:22:38,850
front of my laptop just watching it

00:22:35,310 --> 00:22:41,340
compile for two hours just to see if

00:22:38,850 --> 00:22:45,960
something is failing if something is

00:22:41,340 --> 00:22:48,960
going to fail so and one of the main

00:22:45,960 --> 00:22:53,430
Linux competitors have actually learnt

00:22:48,960 --> 00:22:55,560
from this upfront error reporting the

00:22:53,430 --> 00:22:57,660
blue screen of death as I'm sure you all

00:22:55,560 --> 00:23:01,830
know that's not exactly what we are

00:22:57,660 --> 00:23:08,330
doing but but it's important still to to

00:23:01,830 --> 00:23:13,580
be clear about error messages and and

00:23:08,330 --> 00:23:13,580
situations so

00:23:17,450 --> 00:23:26,409
and finally you really need to keep the

00:23:20,450 --> 00:23:30,889
project fun that's one of my main goals

00:23:26,409 --> 00:23:34,969
actually we are trying to do a lot to to

00:23:30,889 --> 00:23:39,589
make distributed development available

00:23:34,969 --> 00:23:41,779
to to make lots of technical progress in

00:23:39,589 --> 00:23:44,690
all kinds of different areas and and we

00:23:41,779 --> 00:23:47,989
are all very serious about this we might

00:23:44,690 --> 00:23:49,909
be doing it primarily because we wanted

00:23:47,989 --> 00:23:52,549
ourselves so we are just scratching

00:23:49,909 --> 00:23:54,729
itches you can say but it's also

00:23:52,549 --> 00:23:57,679
important to keep the project fun

00:23:54,729 --> 00:24:00,309
because if I'm going to spend 15 hours

00:23:57,679 --> 00:24:02,450
every week or 20 hours every week on

00:24:00,309 --> 00:24:05,329
something that I'm not getting paid for

00:24:02,450 --> 00:24:07,249
I really want it to be fun because

00:24:05,329 --> 00:24:11,719
otherwise I wouldn't be doing it of

00:24:07,249 --> 00:24:16,789
course so in that regard we have this

00:24:11,719 --> 00:24:22,009
silly mascot the sepra pick and it's

00:24:16,789 --> 00:24:24,219
silly on purpose actually and some would

00:24:22,009 --> 00:24:27,409
even call it ugly and that's fine

00:24:24,219 --> 00:24:30,379
because we need to remind ourselves from

00:24:27,409 --> 00:24:32,509
time to time that it can't be too

00:24:30,379 --> 00:24:36,919
serious you can't be too serious about

00:24:32,509 --> 00:24:39,079
stuff you're not getting paid for so

00:24:36,919 --> 00:24:42,349
just remind yourself of that from time

00:24:39,079 --> 00:24:45,559
to time and that's why I have this

00:24:42,349 --> 00:24:49,820
t-shirt also with the zebra peak on the

00:24:45,559 --> 00:24:52,369
bag of it saying I love example and I I

00:24:49,820 --> 00:24:55,369
mean of course I love EXO it's my

00:24:52,369 --> 00:24:58,369
project in many ways so I'm going to

00:24:55,369 --> 00:25:01,309
love it but it's also just a bit of fun

00:24:58,369 --> 00:25:07,329
reminding me that maybe you can get a

00:25:01,309 --> 00:25:10,090
bit too serious from time to time so

00:25:07,329 --> 00:25:13,850
alright

00:25:10,090 --> 00:25:25,160
but let me show you some of this stuff

00:25:13,850 --> 00:25:27,670
I've been talking about right so I've

00:25:25,160 --> 00:25:35,120
been talking a lot about having lots of

00:25:27,670 --> 00:25:37,460
repositories available I don't have

00:25:35,120 --> 00:25:39,160
every repository installed here on my

00:25:37,460 --> 00:25:43,160
laptop but I have quite a few

00:25:39,160 --> 00:25:46,100
repositories installed that's maybe 20

00:25:43,160 --> 00:25:47,720
25 repositories here that's a list of

00:25:46,100 --> 00:25:50,679
all the repositories that I have

00:25:47,720 --> 00:25:50,679
installed right now

00:25:51,490 --> 00:25:58,700
some of them I've mentioned specifically

00:25:54,590 --> 00:26:01,300
like unavailable unavailable is the

00:25:58,700 --> 00:26:04,280
repository type that talks about

00:26:01,300 --> 00:26:06,140
packages available in some repository

00:26:04,280 --> 00:26:08,960
that I haven't been stolen so that's

00:26:06,140 --> 00:26:15,050
that's the index of of all the different

00:26:08,960 --> 00:26:16,720
repositories we are allowing random use

00:26:15,050 --> 00:26:20,510
of small s to create their own

00:26:16,720 --> 00:26:25,100
repositories we are even encouraging it

00:26:20,510 --> 00:26:27,290
so we have some problem with with doing

00:26:25,100 --> 00:26:30,230
Quality Assurance on some of these

00:26:27,290 --> 00:26:31,880
repositories of course the way we deal

00:26:30,230 --> 00:26:35,270
with that is that we have all the

00:26:31,880 --> 00:26:38,420
official repositories that's the report

00:26:35,270 --> 00:26:40,429
tools that listed or index by

00:26:38,420 --> 00:26:41,809
unavailable and then we have another

00:26:40,429 --> 00:26:46,970
index called

00:26:41,809 --> 00:26:49,700
on available unofficial that an index of

00:26:46,970 --> 00:26:54,620
all the repositories left we don't think

00:26:49,700 --> 00:26:57,650
is bad in itself but doesn't quite have

00:26:54,620 --> 00:27:00,770
the quality that we want for a official

00:26:57,650 --> 00:27:03,920
repository but but it still got our

00:27:00,770 --> 00:27:07,190
stamp of approval if you want saying

00:27:03,920 --> 00:27:08,720
this repository is January okay and it

00:27:07,190 --> 00:27:11,059
shouldn't do anything bad to your

00:27:08,720 --> 00:27:13,280
computer or anything like that and we've

00:27:11,059 --> 00:27:16,640
looked at the packages and they seem to

00:27:13,280 --> 00:27:21,410
be okay and we know the author of this

00:27:16,640 --> 00:27:22,759
repository and you can of course add all

00:27:21,410 --> 00:27:25,849
kinds of repository

00:27:22,759 --> 00:27:31,519
that isn't in any of these unavailable

00:27:25,849 --> 00:27:33,799
restores if you want to then we have the

00:27:31,519 --> 00:27:38,829
unwritten repository that's all the

00:27:33,799 --> 00:27:42,349
packages that we still need to write and

00:27:38,829 --> 00:27:44,959
the accounts repository containing users

00:27:42,349 --> 00:27:59,690
and groups that since tall through the

00:27:44,959 --> 00:28:03,249
package manager so so we what I've just

00:27:59,690 --> 00:28:06,709
did was I currently unwritten repository

00:28:03,249 --> 00:28:09,499
so this is all the information we have

00:28:06,709 --> 00:28:12,649
about packages that we know we need to

00:28:09,499 --> 00:28:14,959
write at some point that's the packages

00:28:12,649 --> 00:28:18,399
that we really want to write but just

00:28:14,959 --> 00:28:21,409
haven't had time to write yet so that's

00:28:18,399 --> 00:28:26,329
the meat station we keep about these

00:28:21,409 --> 00:28:28,639
packages and we can see for example that

00:28:26,329 --> 00:28:33,279
we need to write a package for the

00:28:28,639 --> 00:28:37,609
Apache web server here we are adding

00:28:33,279 --> 00:28:40,969
information about the version we want of

00:28:37,609 --> 00:28:46,639
the Apache server we are adding a short

00:28:40,969 --> 00:28:50,889
description what is the Apache server we

00:28:46,639 --> 00:28:50,889
are adding the homepage for it and

00:28:51,190 --> 00:28:57,739
there's also some short comment from the

00:28:54,739 --> 00:28:59,839
package manager saying that the Pegasus

00:28:57,739 --> 00:29:05,989
mask it can't be installed because

00:28:59,839 --> 00:29:08,929
nobody has written it yet but that's

00:29:05,989 --> 00:29:10,940
fairly powerful actually that that you

00:29:08,929 --> 00:29:14,479
can get all this information even on

00:29:10,940 --> 00:29:16,819
packages not written yet so sometimes we

00:29:14,479 --> 00:29:18,559
can just say go look at this list of

00:29:16,819 --> 00:29:21,109
packages that needs to be written

00:29:18,559 --> 00:29:23,329
instead of trying to find all the

00:29:21,109 --> 00:29:26,629
packages that's been requested on our

00:29:23,329 --> 00:29:29,239
pop dragon we just get all the

00:29:26,629 --> 00:29:32,779
information in a coherent format from

00:29:29,239 --> 00:29:35,650
the package manager and we know exactly

00:29:32,779 --> 00:29:38,460
what midstate is required for each peg

00:29:35,650 --> 00:29:43,230
so we know we we get a homepage phone

00:29:38,460 --> 00:29:43,230
for the software and so on

00:29:59,140 --> 00:30:07,780
these are the user accounts that's

00:30:01,980 --> 00:30:09,250
handled by the package manager and we

00:30:07,780 --> 00:30:12,360
are actually we actually have

00:30:09,250 --> 00:30:15,190
dependencies in the packages on users

00:30:12,360 --> 00:30:19,360
exactly like we have dependencies on

00:30:15,190 --> 00:30:23,260
diapers and so on but here we can list

00:30:19,360 --> 00:30:27,310
all the users meant by the package

00:30:23,260 --> 00:30:29,680
manager we can see what options there

00:30:27,310 --> 00:30:37,960
are for each of the issues azure

00:30:29,680 --> 00:30:41,890
approves so and another thing allowed by

00:30:37,960 --> 00:30:44,590
by adding user accounts and user groups

00:30:41,890 --> 00:30:47,410
directly in the package mminton like

00:30:44,590 --> 00:30:51,940
this is that we can actually have users

00:30:47,410 --> 00:30:55,900
depend on proofs also so so the package

00:30:51,940 --> 00:30:57,730
manager is able to up front state I need

00:30:55,900 --> 00:31:00,070
to make this shoes about the group

00:30:57,730 --> 00:31:02,950
already exists so I'm not making the

00:31:00,070 --> 00:31:05,110
group and and so on because we're not

00:31:02,950 --> 00:31:07,390
touching users and groups if they

00:31:05,110 --> 00:31:14,280
already exist it's only if they don't

00:31:07,390 --> 00:31:14,280
exist that we are creating them so

00:31:31,299 --> 00:31:41,169
this is the package if our package man

00:31:34,929 --> 00:31:44,470
James so what we can see is that we have

00:31:41,169 --> 00:31:49,419
a lot of built dependencies we need how

00:31:44,470 --> 00:31:53,889
to make and out configure and so on for

00:31:49,419 --> 00:31:57,100
various options but we can also see in

00:31:53,889 --> 00:32:01,539
this this line here that we are

00:31:57,100 --> 00:32:04,559
depending on a user code to ludus bills

00:32:01,539 --> 00:32:09,340
that's the user that our packets mint

00:32:04,559 --> 00:32:11,679
uses when building packages we need root

00:32:09,340 --> 00:32:13,359
privileges to install packages to the

00:32:11,679 --> 00:32:16,210
main system of course what we are trying

00:32:13,359 --> 00:32:19,509
to build packages as an unprivileged

00:32:16,210 --> 00:32:23,169
user so if anything should go wrong

00:32:19,509 --> 00:32:26,859
during build it's not going to delete

00:32:23,169 --> 00:32:28,989
large parts of your systems and so on or

00:32:26,859 --> 00:32:32,619
if there should be any malicious code in

00:32:28,989 --> 00:32:36,909
the build system for example it's

00:32:32,619 --> 00:32:39,539
restricted to to sandbox area running as

00:32:36,909 --> 00:32:39,539
this user

00:33:00,550 --> 00:33:08,320
as part of our tree package tree in

00:33:03,370 --> 00:33:11,350
every repository we we have a bit of

00:33:08,320 --> 00:33:14,890
metadata specifying master repositories

00:33:11,350 --> 00:33:17,770
and so on and as part of that we also

00:33:14,890 --> 00:33:25,140
specify the users and groups that pages

00:33:17,770 --> 00:33:25,140
in this repository needs so here we have

00:33:25,500 --> 00:33:32,890
the polluters built user for example the

00:33:29,110 --> 00:33:34,720
configuration for that so we are just

00:33:32,890 --> 00:33:37,300
specifying the geckos field we are

00:33:34,720 --> 00:33:40,230
specifying the shell of the home for

00:33:37,300 --> 00:33:44,020
filete use in the home directory and a

00:33:40,230 --> 00:33:48,280
primary group we can also specify other

00:33:44,020 --> 00:33:52,660
stuff like which use ID - we want full

00:33:48,280 --> 00:33:55,510
issues if we have any requirements then

00:33:52,660 --> 00:34:09,610
we can specify preferred to society and

00:33:55,510 --> 00:34:14,140
so on this is the configuration for for

00:34:09,610 --> 00:34:17,650
the NTP group all we really want for

00:34:14,140 --> 00:34:21,669
that group that the NTP program is

00:34:17,650 --> 00:34:24,850
running is is a preferred groove IP so

00:34:21,669 --> 00:34:27,820
that's all that we specify and the

00:34:24,850 --> 00:34:30,910
package meant is just colons user at or

00:34:27,820 --> 00:34:34,470
read acrobat with with that option and

00:34:30,910 --> 00:34:37,919
that everything else just to be default

00:34:34,470 --> 00:34:37,919
values for that

00:34:47,359 --> 00:34:50,359
right

00:34:50,870 --> 00:34:55,720
yeah that's not what I wanted

00:35:13,460 --> 00:35:22,230
okay this this is the a x11 repository

00:35:20,280 --> 00:35:24,480
that's slightly more interesting that

00:35:22,230 --> 00:35:26,970
the Opera repository because the our

00:35:24,480 --> 00:35:29,130
repository is the core repository so it

00:35:26,970 --> 00:35:32,900
doesn't have any dependencies and other

00:35:29,130 --> 00:35:36,650
repositories or anything I guess but

00:35:32,900 --> 00:35:40,970
here we can see in the the x11

00:35:36,650 --> 00:35:43,349
repository some of the metadata

00:35:40,970 --> 00:35:46,790
describes the day out of this repository

00:35:43,349 --> 00:35:52,829
we actually able to support repositories

00:35:46,790 --> 00:35:55,500
using different package formats and

00:35:52,829 --> 00:35:58,559
we've already seen that kind of in that

00:35:55,500 --> 00:36:01,410
we have our our repository that's

00:35:58,559 --> 00:36:04,799
containing x harris packages than sour

00:36:01,410 --> 00:36:08,579
maintains forming but we've also looked

00:36:04,799 --> 00:36:11,099
at shortly looked at unavailable repost

00:36:08,579 --> 00:36:13,890
how sensitive total different kind of

00:36:11,099 --> 00:36:18,450
repository and also the unwritten

00:36:13,890 --> 00:36:22,500
repository so here we can specify what

00:36:18,450 --> 00:36:25,140
type of repository this is and we can

00:36:22,500 --> 00:36:29,190
see that we are using x harris for this

00:36:25,140 --> 00:36:31,710
form the stuff in this repository and

00:36:29,190 --> 00:36:33,980
one of the interesting things is also

00:36:31,710 --> 00:36:37,140
that we can see that as masters

00:36:33,980 --> 00:36:41,460
repository we have specified the Apple

00:36:37,140 --> 00:36:44,220
repository so every time some package in

00:36:41,460 --> 00:36:48,510
this repository needs an exorcist

00:36:44,220 --> 00:36:51,230
library that's available in our we don't

00:36:48,510 --> 00:36:53,700
have to copy it to this repository

00:36:51,230 --> 00:36:56,309
because the package manager is just

00:36:53,700 --> 00:37:01,130
going to grab it from the master and we

00:36:56,309 --> 00:37:06,089
can specify multiple masters if needed

00:37:01,130 --> 00:37:12,089
that's usually not needed but but we can

00:37:06,089 --> 00:37:15,359
do it when when if needed if we specify

00:37:12,089 --> 00:37:19,589
multiple master repository that's going

00:37:15,359 --> 00:37:22,650
to take the repository mentioned first

00:37:19,589 --> 00:37:25,290
as the highest priority so we have some

00:37:22,650 --> 00:37:29,400
kind of priority to come

00:37:25,290 --> 00:37:31,640
true and where our libraries are coming

00:37:29,400 --> 00:37:31,640
from

00:37:47,650 --> 00:37:55,849
this is the unwritten repository just to

00:37:52,519 --> 00:37:58,549
show you that it's fairly different from

00:37:55,849 --> 00:38:00,829
the normal package repositories in that

00:37:58,549 --> 00:38:03,559
we just have a bunch of configuration

00:38:00,829 --> 00:38:08,150
files describing all the packages that

00:38:03,559 --> 00:38:16,279
we still want to write and it's in a

00:38:08,150 --> 00:38:23,079
fairly easy format so this is the basic

00:38:16,279 --> 00:38:26,359
format of these configuration files so

00:38:23,079 --> 00:38:30,109
first we have the category in the tree

00:38:26,359 --> 00:38:34,549
where the package is supposed to be then

00:38:30,109 --> 00:38:38,749
we have the package and the version of

00:38:34,549 --> 00:38:41,660
the package that we want somebody to

00:38:38,749 --> 00:38:44,239
write for us and then we have to miss

00:38:41,660 --> 00:38:47,479
dancer with home page and description

00:38:44,239 --> 00:38:53,319
and who added this to on written and so

00:38:47,479 --> 00:38:53,319
on so that's basically it so

00:39:00,099 --> 00:39:10,449
right I don't think there's any more

00:39:06,369 --> 00:39:17,140
interesting repositories to show but as

00:39:10,449 --> 00:39:20,319
part of oh that's not working for some

00:39:17,140 --> 00:39:25,269
reason but we have a small program

00:39:20,319 --> 00:39:28,029
called eclectic that takes care of most

00:39:25,269 --> 00:39:32,559
of the stuff that we can't directly add

00:39:28,029 --> 00:39:34,930
to the package manager so for example we

00:39:32,559 --> 00:39:37,599
have packages registering that they are

00:39:34,930 --> 00:39:40,209
some kind of VI and that the users

00:39:37,599 --> 00:39:45,039
should be able to switch between these

00:39:40,209 --> 00:39:47,079
VI versions we are not using the package

00:39:45,039 --> 00:39:49,690
manager directly to switch between these

00:39:47,079 --> 00:39:54,839
versions but rather using the eclectic

00:39:49,690 --> 00:39:59,529
command to list providers of VI

00:39:54,839 --> 00:40:02,619
providers of print services or whatever

00:39:59,529 --> 00:40:06,160
it might be and we are able to switch

00:40:02,619 --> 00:40:08,949
providers for different stuff both on a

00:40:06,160 --> 00:40:16,930
system basis and also on wanna use a

00:40:08,949 --> 00:40:18,910
basis for those things so yeah I can't

00:40:16,930 --> 00:40:29,559
show your eclectic for some reason I

00:40:18,910 --> 00:40:34,209
think and maybe so these are the this is

00:40:29,559 --> 00:40:37,299
eclectic the small program and some

00:40:34,209 --> 00:40:39,729
packages have installed modules to

00:40:37,299 --> 00:40:43,239
control that things related to that

00:40:39,729 --> 00:40:47,459
package for example you can have several

00:40:43,239 --> 00:40:47,459
different open GL providers

00:40:50,810 --> 00:40:56,340
installed I only have one of Geo

00:40:53,670 --> 00:40:59,790
provider installed on this left right

00:40:56,340 --> 00:41:02,900
now but if I have an Nvidia card for

00:40:59,790 --> 00:41:06,690
example I would probably have Rotom Mesa

00:41:02,900 --> 00:41:09,330
implementation and an Nvidia accelerated

00:41:06,690 --> 00:41:11,700
implementation of OpenGL left that I

00:41:09,330 --> 00:41:14,630
could use eclectic to switch between

00:41:11,700 --> 00:41:14,630
these two versions

00:41:22,870 --> 00:41:28,920
another thing we that's very important

00:41:26,080 --> 00:41:32,140
that we use eclectic for is managing

00:41:28,920 --> 00:41:35,680
configuration files because every time I

00:41:32,140 --> 00:41:38,620
operate a web server or something it's

00:41:35,680 --> 00:41:41,530
going to install new versions of its

00:41:38,620 --> 00:41:43,900
configuration files in the sass et Cie

00:41:41,530 --> 00:41:45,790
dire directory we're not going to just

00:41:43,900 --> 00:41:47,740
overwrite the version you already have

00:41:45,790 --> 00:41:50,020
there because that would be dangerous

00:41:47,740 --> 00:41:53,350
instead we are going to keep a new

00:41:50,020 --> 00:41:55,780
version of this and through eclectic we

00:41:53,350 --> 00:41:59,170
let you list the differences between

00:41:55,780 --> 00:42:01,480
these versions virtual versions or just

00:41:59,170 --> 00:42:09,880
overwrite or delete the new version as

00:42:01,480 --> 00:42:12,390
you want to ok I think that's it so any

00:42:09,880 --> 00:42:12,390
questions

00:42:17,240 --> 00:42:20,240
sorry

00:42:20,670 --> 00:42:33,869
the name exhale well at that time we we

00:42:29,250 --> 00:42:36,690
needed a name that was it wasn't already

00:42:33,869 --> 00:42:38,910
taken and there was quite a few

00:42:36,690 --> 00:42:41,609
polluters projects that were already

00:42:38,910 --> 00:42:45,000
using latin-inspired names polluters

00:42:41,609 --> 00:42:48,660
being our package manager of choice so

00:42:45,000 --> 00:42:52,440
we kind of went with the Latin theme I'm

00:42:48,660 --> 00:42:54,539
not exactly an expert on that but who

00:42:52,440 --> 00:42:56,640
could lead me to some that's in

00:42:54,539 --> 00:42:59,369
dictionaries so I just started looking

00:42:56,640 --> 00:43:02,430
at different ways and saying what could

00:42:59,369 --> 00:43:08,910
be fun here and and finally I came up on

00:43:02,430 --> 00:43:11,190
the Aksarben and it's somehow fits in

00:43:08,910 --> 00:43:13,289
with some of the other project names we

00:43:11,190 --> 00:43:17,760
were selecting at the time that we're

00:43:13,289 --> 00:43:22,769
also starting with eyx so and it's just

00:43:17,760 --> 00:43:24,450
a fun word net it's a small pond and the

00:43:22,769 --> 00:43:27,569
Rio and the fact that we're starting

00:43:24,450 --> 00:43:30,839
from scratch basically because it it

00:43:27,569 --> 00:43:34,380
means to weed out or something like that

00:43:30,839 --> 00:43:36,329
or from grass or trees and we are

00:43:34,380 --> 00:43:39,119
basically starting from from ground zero

00:43:36,329 --> 00:43:42,059
if you want and trying to take ideas

00:43:39,119 --> 00:43:44,819
from all kinds of distributions we we

00:43:42,059 --> 00:43:47,220
are also taking some ideas from ruby and

00:43:44,819 --> 00:43:49,980
putting them into our package formats

00:43:47,220 --> 00:43:53,640
actually so we are taking ideas from

00:43:49,980 --> 00:43:58,640
from all over the open source world and

00:43:53,640 --> 00:44:04,500
except just fit that I did some somewhat

00:43:58,640 --> 00:44:06,920
so that's how that came about a lot of

00:44:04,500 --> 00:44:06,920
questions

00:44:13,420 --> 00:44:27,820
yes this or that I do this as soon as we

00:44:23,470 --> 00:44:38,890
have that available this information is

00:44:27,820 --> 00:44:42,460
redundant yes yeah we we just stopped

00:44:38,890 --> 00:44:47,350
using box alarm all this because you're

00:44:42,460 --> 00:44:50,140
right we when we started we have several

00:44:47,350 --> 00:44:53,170
talks about pages needing to be read in

00:44:50,140 --> 00:44:56,230
Bugzilla before we got the own available

00:44:53,170 --> 00:45:00,010
repository but unavailable repository is

00:44:56,230 --> 00:45:02,530
a much better way of managing this so

00:45:00,010 --> 00:45:04,840
none of the developers of filing box for

00:45:02,530 --> 00:45:09,220
packages that we need to write they

00:45:04,840 --> 00:45:12,100
aren't just adding it to our rhythms and

00:45:09,220 --> 00:45:14,260
if any use of files box we usually the

00:45:12,100 --> 00:45:16,840
developers usually just transfer the

00:45:14,260 --> 00:45:19,260
information so we have it all in one

00:45:16,840 --> 00:45:19,260
place

00:45:27,540 --> 00:45:37,620
20 proposed eggs the rest from a user

00:45:30,030 --> 00:45:40,230
something that is not yeah

00:45:37,620 --> 00:45:44,100
users are making their own repositories

00:45:40,230 --> 00:45:47,460
available all the time even if if they

00:45:44,100 --> 00:45:51,630
are not quite yet the quality that we'd

00:45:47,460 --> 00:45:56,130
need to to make them more official so

00:45:51,630 --> 00:45:59,370
that's happening all the time we have

00:45:56,130 --> 00:46:02,430
we have several layers of unavailable

00:45:59,370 --> 00:46:05,340
repositories we have the official layer

00:46:02,430 --> 00:46:07,920
that's just called unavailable we have

00:46:05,340 --> 00:46:11,760
the air called unavailable unofficial

00:46:07,920 --> 00:46:15,420
lets repositories that that we think is

00:46:11,760 --> 00:46:18,420
basically alright it's not maintained by

00:46:15,420 --> 00:46:20,850
us and it might not quite meet the

00:46:18,420 --> 00:46:23,520
quality that we'd like if we have to

00:46:20,850 --> 00:46:26,250
maintain it ourselves but but it's it's

00:46:23,520 --> 00:46:28,530
good enough that we are willing to make

00:46:26,250 --> 00:46:30,260
it available for the users and then

00:46:28,530 --> 00:46:33,960
there's the first day in which

00:46:30,260 --> 00:46:37,560
repositories just made up by random

00:46:33,960 --> 00:46:40,830
users where they just posted on that

00:46:37,560 --> 00:46:45,890
blog or whatever so we basically have

00:46:40,830 --> 00:46:52,490
three levels of repositories and that we

00:46:45,890 --> 00:46:52,490
okay any other questions

00:47:02,710 --> 00:47:10,140
inducers I've been using x-ray for at my

00:47:07,539 --> 00:47:14,589
work for the last year or so actually

00:47:10,140 --> 00:47:17,140
without any problems I'm in a special

00:47:14,589 --> 00:47:19,390
situation in that regard of course

00:47:17,140 --> 00:47:22,150
because I'm a developer and I started

00:47:19,390 --> 00:47:26,819
extra one so I know about all the

00:47:22,150 --> 00:47:30,190
problems that my problem in advance but

00:47:26,819 --> 00:47:33,510
right now for the past three or four

00:47:30,190 --> 00:47:37,599
months at least it's been quite stable

00:47:33,510 --> 00:47:39,700
we're not quite ready to tell users that

00:47:37,599 --> 00:47:41,829
yes we are going to support you with all

00:47:39,700 --> 00:47:44,710
your problems and so on so so you're

00:47:41,829 --> 00:47:48,970
still on your own for for some part at

00:47:44,710 --> 00:47:52,299
least but we have three users that's

00:47:48,970 --> 00:47:55,480
never use the saw space distribution

00:47:52,299 --> 00:47:59,680
before in our our C channel for some and

00:47:55,480 --> 00:48:02,319
they are getting help so so as long as

00:47:59,680 --> 00:48:04,869
you are willing to listen to us when we

00:48:02,319 --> 00:48:06,579
we are trying to help you and we tell

00:48:04,869 --> 00:48:08,859
you to read the documentation or

00:48:06,579 --> 00:48:11,079
whatever it should be quite stable and

00:48:08,859 --> 00:48:13,049
it should also provide most of the

00:48:11,079 --> 00:48:17,619
packages that an end user would need

00:48:13,049 --> 00:48:20,710
these days we have some packages lacking

00:48:17,619 --> 00:48:25,029
obviously Apache was one of them that's

00:48:20,710 --> 00:48:27,700
of mission tagging and we'll get to that

00:48:25,029 --> 00:48:30,130
in time of course I can't say how fast

00:48:27,700 --> 00:48:31,900
but but it's quite stable and I'm

00:48:30,130 --> 00:48:33,640
hearing from from lots of people

00:48:31,900 --> 00:48:36,099
actually that's trying a server like

00:48:33,640 --> 00:48:40,480
that it's very stable and that they

00:48:36,099 --> 00:48:43,089
haven't had any problems so so I'm not

00:48:40,480 --> 00:48:46,210
telling you all to go home and start

00:48:43,089 --> 00:48:48,809
using it but but it should be alright so

00:48:46,210 --> 00:48:53,200
and we also just got a new home page

00:48:48,809 --> 00:48:57,609
yesterday I think where we are not quite

00:48:53,200 --> 00:48:58,839
as aggressively discouraging users so so

00:48:57,609 --> 00:49:01,049
we are definitely going in the right

00:48:58,839 --> 00:49:01,049
direction

00:49:10,319 --> 00:49:21,719
yes the original website different

00:49:15,679 --> 00:49:24,650
definitely so juices to go away but yes

00:49:21,719 --> 00:49:28,109
but what you have to keep in mind was

00:49:24,650 --> 00:49:31,140
that page is a year old or something

00:49:28,109 --> 00:49:34,890
like that and Beckman Aksarben was

00:49:31,140 --> 00:49:37,650
really rough not quite as rough as

00:49:34,890 --> 00:49:41,880
eighteen months ago but but still really

00:49:37,650 --> 00:49:45,359
rough and we didn't really have any KDE

00:49:41,880 --> 00:49:48,660
pages of known packages or anything I

00:49:45,359 --> 00:49:51,869
think we had awesome window mint or

00:49:48,660 --> 00:49:55,910
something like that and oh you could

00:49:51,869 --> 00:50:00,119
just use gwm wonderful window manager

00:49:55,910 --> 00:50:03,809
and that's basically it so back then it

00:50:00,119 --> 00:50:05,789
really wasn't ready for users it's

00:50:03,809 --> 00:50:08,400
definitely starting to be ready for

00:50:05,789 --> 00:50:11,269
users now I think we we have a few big

00:50:08,400 --> 00:50:15,269
things that we still like to implement I

00:50:11,269 --> 00:50:17,249
need to implement the unit system that

00:50:15,269 --> 00:50:21,150
I've been talking about quite some time

00:50:17,249 --> 00:50:24,239
and haven't had time yeah

00:50:21,150 --> 00:50:26,369
right now we're just well most people

00:50:24,239 --> 00:50:29,640
are just using page layout from Chintu

00:50:26,369 --> 00:50:31,499
and that works fairly well so it's not a

00:50:29,640 --> 00:50:33,419
big problem but but there's one or two

00:50:31,499 --> 00:50:36,779
bigger things that we still want to

00:50:33,419 --> 00:50:39,359
implement before saying yes it's ready

00:50:36,779 --> 00:50:41,579
for users but but it shouldn't make any

00:50:39,359 --> 00:50:44,539
big differences it shouldn't cause any

00:50:41,579 --> 00:50:44,539
big trouble at all

00:50:48,690 --> 00:50:51,900
more questions

00:50:56,030 --> 00:50:58,690
right

00:51:01,960 --> 00:51:05,079

YouTube URL: https://www.youtube.com/watch?v=4KhJyEvD97s


