Title: FOSDEM 2009 Cobbler & Koan
Publication date: 2011-12-22
Playlist: FOSDEM 2009
Description: 
	By Robert Lazzurs and Jasper Capel

During this talk, we aim to give you an overview of the Cobbler project, explain where we'd like to see it going and explain a few use cases.

Cobbler is an installation server, written in Python, which allows for rapid deployment (and re-deployment) of large amounts of physical and virtual machines by defining distributions, repositories, profiles and systems as objects. It's easy to get started with Cobbler, but we ship a lot of advanced features to make it as versatile as possible, so you won't get bored with it.

FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:04,440 --> 00:00:06,500
you

00:00:07,109 --> 00:00:12,800
I'm giving this

00:00:10,130 --> 00:00:16,910
it's a he's a co-developer from Scotland

00:00:12,800 --> 00:00:19,939
he's got about 10 years of systems

00:00:16,910 --> 00:00:24,470
administration experience in linux ice P

00:00:19,939 --> 00:00:25,910
world in the yolk in the UK and he

00:00:24,470 --> 00:00:28,640
actually designed and deployed the

00:00:25,910 --> 00:00:30,619
second cloud computing environment of

00:00:28,640 --> 00:00:34,550
the world that she may know amazon

00:00:30,619 --> 00:00:38,960
amazon CC clark was first cloud so he

00:00:34,550 --> 00:00:41,600
made the second cleft i'm josh Pachelbel

00:00:38,960 --> 00:00:43,940
I'm a technical consultant with open

00:00:41,600 --> 00:00:46,220
source consulting firm in Netherlands

00:00:43,940 --> 00:00:49,250
star nighty and we integrate a lot of

00:00:46,220 --> 00:00:52,040
open source products into one solution

00:00:49,250 --> 00:00:55,100
for our customer I'm reddit certified

00:00:52,040 --> 00:00:58,040
and I've been an active contributor to

00:00:55,100 --> 00:01:00,920
the cobbler project for only about half

00:00:58,040 --> 00:01:04,309
a year and I've been using it for a

00:01:00,920 --> 00:01:06,049
little over a year so compared to a lot

00:01:04,309 --> 00:01:08,509
of people who stand there I'm relatively

00:01:06,049 --> 00:01:10,670
new to contributing to the open source

00:01:08,509 --> 00:01:15,530
world and I'm very honored to be

00:01:10,670 --> 00:01:18,399
standing here before you okay why was

00:01:15,530 --> 00:01:21,469
cobbler founded Cobra was founded by

00:01:18,399 --> 00:01:25,789
some people at Red Hat about three years

00:01:21,469 --> 00:01:28,819
ago to fill the gaps in the solutions

00:01:25,789 --> 00:01:30,619
for systems deployment there are a lot

00:01:28,819 --> 00:01:33,380
of good products for monitoring

00:01:30,619 --> 00:01:36,530
solutions or configuration management's

00:01:33,380 --> 00:01:39,259
but there are not so many good solutions

00:01:36,530 --> 00:01:42,380
available for deploying both physical

00:01:39,259 --> 00:01:44,389
and virtual servers so you had this one

00:01:42,380 --> 00:01:48,049
solution for your physical systems

00:01:44,389 --> 00:01:51,469
usually deploy an image or something

00:01:48,049 --> 00:01:54,560
with the ghost maybe and then you had a

00:01:51,469 --> 00:02:00,319
separate solution for your virtual

00:01:54,560 --> 00:02:03,020
servers what our covers goals but we

00:02:00,319 --> 00:02:06,560
want we really want to make tool that's

00:02:03,020 --> 00:02:08,569
very very easy to use but while we're

00:02:06,560 --> 00:02:11,510
doing that we don't want to give up any

00:02:08,569 --> 00:02:14,750
flexibility doing so and the tools got

00:02:11,510 --> 00:02:18,130
to be very powerful it's also got to

00:02:14,750 --> 00:02:21,230
have as many features as possible and

00:02:18,130 --> 00:02:22,360
the real goal here is to create a common

00:02:21,230 --> 00:02:24,580
deployment to

00:02:22,360 --> 00:02:28,750
our old system administrators or

00:02:24,580 --> 00:02:31,390
basically everyone who whose job is or

00:02:28,750 --> 00:02:34,660
part of whose job is to install systems

00:02:31,390 --> 00:02:39,010
on our regular basis so whether that's

00:02:34,660 --> 00:02:42,460
as a consultant or your systems engineer

00:02:39,010 --> 00:02:48,010
in some big firm this tool was meant to

00:02:42,460 --> 00:02:51,070
to help you do your job okay vice

00:02:48,010 --> 00:02:52,840
coupler useful well we're all lazy at

00:02:51,070 --> 00:02:55,930
least I am not about don't know about

00:02:52,840 --> 00:03:00,459
you but I want to get my job done with

00:02:55,930 --> 00:03:03,600
the least amount of effort possible well

00:03:00,459 --> 00:03:07,390
and really use license there polar

00:03:03,600 --> 00:03:09,910
relatively low frequency so what you

00:03:07,390 --> 00:03:13,360
usually do is put a cd-rom the system

00:03:09,910 --> 00:03:15,670
install the system and oh it's linux so

00:03:13,360 --> 00:03:19,120
it's still running at five years six

00:03:15,670 --> 00:03:21,190
years seven years going but where you're

00:03:19,120 --> 00:03:23,739
at the company someone is solar system

00:03:21,190 --> 00:03:26,769
way back when you then leave from work

00:03:23,739 --> 00:03:29,440
there so you have a problem when that

00:03:26,769 --> 00:03:31,060
system dies or whatever because you

00:03:29,440 --> 00:03:33,100
don't have to reinstall it system and

00:03:31,060 --> 00:03:35,140
you've only got to hope they're our

00:03:33,100 --> 00:03:38,769
specifications for its system available

00:03:35,140 --> 00:03:40,989
a different persons each have their

00:03:38,769 --> 00:03:44,080
different methods of installing their

00:03:40,989 --> 00:03:47,530
systems in my company we have had about

00:03:44,080 --> 00:03:50,590
10 technical people and it's safe to say

00:03:47,530 --> 00:03:53,200
that each each one of us got its own

00:03:50,590 --> 00:03:56,320
standards to deploy new systems so

00:03:53,200 --> 00:03:58,870
gobbler is a great tool to standardize

00:03:56,320 --> 00:04:00,519
your installations and while your

00:03:58,870 --> 00:04:02,170
standardizing your installations you're

00:04:00,519 --> 00:04:04,540
actually also documenting your

00:04:02,170 --> 00:04:13,269
installations for disaster recovery

00:04:04,540 --> 00:04:16,930
scenarios okay so to be able to to use

00:04:13,269 --> 00:04:20,440
skobbler we have to define how all this

00:04:16,930 --> 00:04:23,410
information is storing cover in color we

00:04:20,440 --> 00:04:27,100
have a few types of objects one of the

00:04:23,410 --> 00:04:30,520
most obvious is the distribution it's

00:04:27,100 --> 00:04:31,520
it's the software distribution so it can

00:04:30,520 --> 00:04:35,349
be a fedora

00:04:31,520 --> 00:04:38,479
or read as a price index or sent to us

00:04:35,349 --> 00:04:41,419
directly under the distribution in the

00:04:38,479 --> 00:04:44,360
profile is in orissa profile the

00:04:41,419 --> 00:04:45,949
profiles basically but you can say we

00:04:44,360 --> 00:04:49,270
have web servers here or application

00:04:45,949 --> 00:04:52,759
service there are database servers and

00:04:49,270 --> 00:04:54,560
we need one or more layers of profiles

00:04:52,759 --> 00:04:57,379
because you can stack your profiles to

00:04:54,560 --> 00:04:59,629
more specific needs it's a system and

00:04:57,379 --> 00:05:04,669
the system is really that physical or

00:04:59,629 --> 00:05:07,069
virtual box you're trying to install to

00:05:04,669 --> 00:05:09,319
help you manage those systems we've got

00:05:07,069 --> 00:05:11,590
two additional objects once the

00:05:09,319 --> 00:05:15,110
repository it gives you the power to

00:05:11,590 --> 00:05:19,699
mirror remote yum repositories or

00:05:15,110 --> 00:05:21,860
network repositories and the image it

00:05:19,699 --> 00:05:24,729
was just quite confusing actually but

00:05:21,860 --> 00:05:24,729
I'll get back to that later

00:05:32,409 --> 00:05:37,879
okay what's the distribution a cobbler a

00:05:36,019 --> 00:05:41,479
distribution is nothing more than a

00:05:37,879 --> 00:05:45,129
colonel and an installer in its ramdisk

00:05:41,479 --> 00:05:48,379
so both most modern distributions

00:05:45,129 --> 00:05:50,360
they've got some kind of net boot CD and

00:05:48,379 --> 00:05:53,119
what's on that CD is just a colonel and

00:05:50,360 --> 00:05:55,579
an installer ramdisk and that a story

00:05:53,119 --> 00:05:59,179
run disk knows enough to start the

00:05:55,579 --> 00:06:04,969
installation in the distribution we also

00:05:59,179 --> 00:06:09,199
have a URL to where the software plus

00:06:04,969 --> 00:06:12,229
story is located so in a bus that would

00:06:09,199 --> 00:06:15,739
be an NFS mount of your installation

00:06:12,229 --> 00:06:18,739
medium but n cover we usually run copper

00:06:15,739 --> 00:06:21,919
import and point it to our DVD medium or

00:06:18,739 --> 00:06:24,619
pointed to a remote FTP to download the

00:06:21,919 --> 00:06:26,749
entire distribution into color cover

00:06:24,619 --> 00:06:29,449
scans it for hey I've got this installer

00:06:26,749 --> 00:06:34,959
colonel I've got this Ram disk i'll just

00:06:29,449 --> 00:06:38,329
create a new distribution from it okay

00:06:34,959 --> 00:06:41,389
profiles are our main container

00:06:38,329 --> 00:06:44,149
objecting cover because it gives us the

00:06:41,389 --> 00:06:48,679
ability to build a hierarchy of of

00:06:44,149 --> 00:06:52,759
systems in it gob the profile container

00:06:48,679 --> 00:06:54,829
is a child to the distribution so it

00:06:52,759 --> 00:06:57,559
gets a few values from it like where's

00:06:54,829 --> 00:07:00,199
my unit ram disk and such and it can be

00:06:57,559 --> 00:07:04,309
parents to another profile or they can

00:07:00,199 --> 00:07:06,139
be systems directly underneath it the

00:07:04,309 --> 00:07:09,319
profile also defines the path to the

00:07:06,139 --> 00:07:12,529
kickstart and that's really really

00:07:09,319 --> 00:07:14,599
useful because the kickstart is at least

00:07:12,529 --> 00:07:17,149
within a redhead two worlds the only way

00:07:14,599 --> 00:07:20,809
to automate these automator

00:07:17,149 --> 00:07:25,059
installations the profiles also provide

00:07:20,809 --> 00:07:29,749
for property inheritance so if i define

00:07:25,059 --> 00:07:33,949
for example a network gateway for for

00:07:29,749 --> 00:07:37,579
web servers to use and later on i decide

00:07:33,949 --> 00:07:41,539
to override it for say a few systems i

00:07:37,579 --> 00:07:44,539
can do so that particular example is

00:07:41,539 --> 00:07:45,440
useful for low balance configurations

00:07:44,539 --> 00:07:49,100
for example

00:07:45,440 --> 00:07:51,380
where you have one standard gateway with

00:07:49,100 --> 00:07:54,110
sure normal router and then you've got

00:07:51,380 --> 00:07:59,660
these slow medicine machines that act as

00:07:54,110 --> 00:08:02,420
a router for the web servers so we've

00:07:59,660 --> 00:08:06,620
got property inheritance you can do real

00:08:02,420 --> 00:08:09,050
powerful things on the system's well

00:08:06,620 --> 00:08:11,750
it's obviously a childhood profile and

00:08:09,050 --> 00:08:15,980
this objective cobbler represents one

00:08:11,750 --> 00:08:18,230
actual system to be deployed so be it

00:08:15,980 --> 00:08:21,410
physical or virtual one system in cover

00:08:18,230 --> 00:08:23,870
is one system in your environment so if

00:08:21,410 --> 00:08:28,310
you want want another sector system you

00:08:23,870 --> 00:08:29,780
can clone this system and edit the

00:08:28,310 --> 00:08:33,409
properties of the system and create a

00:08:29,780 --> 00:08:36,530
new system but the system contains

00:08:33,409 --> 00:08:38,479
network information so you really really

00:08:36,530 --> 00:08:41,360
can't have two of the same systems

00:08:38,479 --> 00:08:43,700
although you can SI prefix previously

00:08:41,360 --> 00:08:51,170
explained over right values inherited

00:08:43,700 --> 00:08:54,830
from the profiles so repositories are

00:08:51,170 --> 00:08:57,740
not in cobblers made workflows are not

00:08:54,830 --> 00:08:59,360
created with Cobra import complete

00:08:57,740 --> 00:09:01,760
import is the easy command to get you

00:08:59,360 --> 00:09:05,450
started and cover but it defines a

00:09:01,760 --> 00:09:11,180
package repository so if i run cobbler

00:09:05,450 --> 00:09:14,110
repo ads and then give a URL of the URL

00:09:11,180 --> 00:09:17,390
to fedora 10 for example for ten updates

00:09:14,110 --> 00:09:19,670
what I can have covered do is run a repo

00:09:17,390 --> 00:09:23,270
sync and infectious all packages for

00:09:19,670 --> 00:09:26,240
fedora ten so my thousands of systems in

00:09:23,270 --> 00:09:30,440
cover don't have to go to the internet

00:09:26,240 --> 00:09:33,770
separately to get those packages you can

00:09:30,440 --> 00:09:36,560
assign repositories two systems so you

00:09:33,770 --> 00:09:40,070
could say I need my web service are

00:09:36,560 --> 00:09:41,870
already Enterprise Linux five and I need

00:09:40,070 --> 00:09:44,360
some extra software for it luckily

00:09:41,870 --> 00:09:47,240
there's extra pictures for enterprise

00:09:44,360 --> 00:09:49,190
linux so the service who need this

00:09:47,240 --> 00:09:52,079
excess software can have those

00:09:49,190 --> 00:09:55,569
repositories assigned to them

00:09:52,079 --> 00:09:58,300
you can either point cover to a remote

00:09:55,569 --> 00:10:02,730
repository or you can have cover Mirror

00:09:58,300 --> 00:10:02,730
Mirror locally for you with a repo sync

00:10:05,190 --> 00:10:10,509
this is a bit confusing actually because

00:10:08,560 --> 00:10:13,990
a lot of people ask me for Oh gobbler

00:10:10,509 --> 00:10:17,829
can do physical machine cloning I'll

00:10:13,990 --> 00:10:21,250
actually no it can't because images in

00:10:17,829 --> 00:10:25,149
cobbler are not system images or ghost

00:10:21,250 --> 00:10:27,430
images they're more like floppy images

00:10:25,149 --> 00:10:31,360
you can add to cover to have your system

00:10:27,430 --> 00:10:33,189
Ned Lutz those images this is actually

00:10:31,360 --> 00:10:37,389
very useful a lot of folks use these

00:10:33,189 --> 00:10:39,670
images to update their HP proliant

00:10:37,389 --> 00:10:42,910
firmware for example without leaving

00:10:39,670 --> 00:10:46,209
their workstation so you just assign

00:10:42,910 --> 00:10:49,660
this firmware update is doing to a

00:10:46,209 --> 00:10:52,779
system you say to that system okay you

00:10:49,660 --> 00:10:55,240
do a new new network booth we can have

00:10:52,779 --> 00:10:57,579
cobbler if we want to cycle the power of

00:10:55,240 --> 00:11:00,069
that system to make it happen and then

00:10:57,579 --> 00:11:02,980
it boots into the firmware image when

00:11:00,069 --> 00:11:05,949
that's done the killer for the system

00:11:02,980 --> 00:11:11,829
reboots and the normal operating system

00:11:05,949 --> 00:11:14,529
starts again okay October is not alone

00:11:11,829 --> 00:11:17,800
color is more low more like the server

00:11:14,529 --> 00:11:21,639
utility for this solution we also have a

00:11:17,800 --> 00:11:27,610
client utility which is gone it stands

00:11:21,639 --> 00:11:31,449
for kick start over a network and it

00:11:27,610 --> 00:11:34,689
would it resides on physical or virtual

00:11:31,449 --> 00:11:37,959
servers we install or on virtualization

00:11:34,689 --> 00:11:40,800
service we use so i can for example

00:11:37,959 --> 00:11:44,290
install cone on my exam servers to

00:11:40,800 --> 00:11:47,350
install new virtual machines it's also

00:11:44,290 --> 00:11:50,769
possible to trigger a reinstallation of

00:11:47,350 --> 00:11:54,610
a system from within that system so i

00:11:50,769 --> 00:11:57,519
just say go and reinstall self replay

00:11:54,610 --> 00:11:59,769
self and then it would download it synod

00:11:57,519 --> 00:12:02,410
ramdisk updated scrub configuration and

00:11:59,769 --> 00:12:04,150
then reboot into the installation so

00:12:02,410 --> 00:12:08,110
after that process

00:12:04,150 --> 00:12:11,200
I got a fresh system again an extensor

00:12:08,110 --> 00:12:15,100
if I would say go I'd like to have a new

00:12:11,200 --> 00:12:17,680
virtual machine please speak that system

00:12:15,100 --> 00:12:21,100
for me or that profile for me that

00:12:17,680 --> 00:12:24,190
profiles gough usually got the virtual

00:12:21,100 --> 00:12:26,980
disk size defined on it how many virtual

00:12:24,190 --> 00:12:29,350
CPUs should be assigned how much memory

00:12:26,980 --> 00:12:30,970
should be assigned to the server and go

00:12:29,350 --> 00:12:33,880
we'll just start off the installation

00:12:30,970 --> 00:12:39,640
for you underneath that's done through

00:12:33,880 --> 00:12:41,460
verde install and one of the new latest

00:12:39,640 --> 00:12:44,830
features and colors that we've built

00:12:41,460 --> 00:12:47,290
tiny configuration management in it's

00:12:44,830 --> 00:12:49,630
not as powerful as tools like puppets

00:12:47,290 --> 00:12:51,550
but there are a lot of use case or

00:12:49,630 --> 00:12:55,380
puppets for an environment is really

00:12:51,550 --> 00:12:59,770
overkill so what we can do here is use

00:12:55,380 --> 00:13:03,490
puppets from gobblers power for

00:12:59,770 --> 00:13:06,480
templating these configurations because

00:13:03,490 --> 00:13:10,930
we've got a templating engine in color

00:13:06,480 --> 00:13:13,630
every kickstart we define is either just

00:13:10,930 --> 00:13:15,510
kick start or we embed cheetah code in

00:13:13,630 --> 00:13:18,490
it and she does a very powerful

00:13:15,510 --> 00:13:22,270
templating engine it's written in Python

00:13:18,490 --> 00:13:26,280
so essentially i can just write Python

00:13:22,270 --> 00:13:26,280
in my kick-starts or in my snippets

00:13:30,120 --> 00:13:40,770
yeah we're back no no one back yeah I

00:13:35,990 --> 00:13:44,279
skipped a few here the thought ones

00:13:40,770 --> 00:13:47,100
really important right now we have

00:13:44,279 --> 00:13:50,100
support for centralized Debian fedora

00:13:47,100 --> 00:13:54,540
reddit Enterprise Linux Susan Linux and

00:13:50,100 --> 00:13:58,290
a boon to our user base consists of I

00:13:54,540 --> 00:14:01,740
think about ninety-five percent of red

00:13:58,290 --> 00:14:04,529
head style distribution users so the

00:14:01,740 --> 00:14:08,089
Centaurus fedora and reddit Enterprise

00:14:04,529 --> 00:14:11,190
Linux deployments are really well tested

00:14:08,089 --> 00:14:14,700
since last release support for debian

00:14:11,190 --> 00:14:19,200
and ubuntu was alloted but it's very new

00:14:14,700 --> 00:14:21,750
and although it does work it's not just

00:14:19,200 --> 00:14:26,430
yet as powerful feature wise as the

00:14:21,750 --> 00:14:29,790
redhead deployments and what we can do a

00:14:26,430 --> 00:14:34,310
full medium import for Debian or a boon

00:14:29,790 --> 00:14:38,360
to now and for Suzie we can we can

00:14:34,310 --> 00:14:41,520
basically kickstart installations now

00:14:38,360 --> 00:14:43,339
we've also got a dns and dhcp management

00:14:41,520 --> 00:14:47,760
which I'll tell you about a bit later

00:14:43,339 --> 00:14:50,339
power management and that's we actually

00:14:47,760 --> 00:14:54,300
using the red cluster sweet fancy tools

00:14:50,339 --> 00:14:57,480
for that so we can add a power interface

00:14:54,300 --> 00:15:02,640
to a system and then say from color say

00:14:57,480 --> 00:15:04,560
that system reboot or if the system

00:15:02,640 --> 00:15:07,709
doesn't respond actually what happens is

00:15:04,560 --> 00:15:10,860
we go to the APC power switch or we go

00:15:07,709 --> 00:15:13,589
to the dirac interface or to the ILO

00:15:10,860 --> 00:15:17,070
interface and we say reboot that system

00:15:13,589 --> 00:15:18,630
and then optionally reinstall it because

00:15:17,070 --> 00:15:22,850
obviously the system wasn't behaving

00:15:18,630 --> 00:15:22,850
like it should be when I have to do this

00:15:25,570 --> 00:15:31,100
one of the most powerful features for

00:15:28,160 --> 00:15:36,230
cobbler at my company was that we can

00:15:31,100 --> 00:15:38,540
use a python api and xml-rpc api this

00:15:36,230 --> 00:15:40,190
essentially means that you can do

00:15:38,540 --> 00:15:43,310
whatever you want with cover you can

00:15:40,190 --> 00:15:47,720
script it according to your needs so

00:15:43,310 --> 00:15:49,880
it's not actually a standalone you don't

00:15:47,720 --> 00:15:54,199
have to use that a standalone tool you

00:15:49,880 --> 00:15:55,880
can use this a framework as well a few

00:15:54,199 --> 00:15:58,639
more features and cover authentication

00:15:55,880 --> 00:16:01,790
authorization ACLs authentications

00:15:58,639 --> 00:16:05,019
pretty obvious maybe i can connect cover

00:16:01,790 --> 00:16:09,380
to my ldap tree or Gabriel's to may

00:16:05,019 --> 00:16:15,050
authorization is useful to define which

00:16:09,380 --> 00:16:17,529
users have access to which objects so if

00:16:15,050 --> 00:16:20,000
you've got cobbler split up like I've

00:16:17,529 --> 00:16:22,639
got profiles for remaining office my

00:16:20,000 --> 00:16:24,889
branch office and some branch office on

00:16:22,639 --> 00:16:27,860
the other side of the world and I gave

00:16:24,889 --> 00:16:30,410
my say that means in a branch office

00:16:27,860 --> 00:16:32,480
access to cobbler I don't want them to

00:16:30,410 --> 00:16:34,760
be able to reinstall any servers at my

00:16:32,480 --> 00:16:38,480
main location so that's what I can do

00:16:34,760 --> 00:16:41,389
with authorization ACLs go even further

00:16:38,480 --> 00:16:46,100
because with ACL so I can even define

00:16:41,389 --> 00:16:48,740
that one certain junior sysadmin can

00:16:46,100 --> 00:16:53,029
only edit specific properties of a

00:16:48,740 --> 00:16:56,720
system so if he likes he can for example

00:16:53,029 --> 00:16:58,819
change the dns name but he cannot touch

00:16:56,720 --> 00:17:01,579
the IP address configuration because

00:16:58,819 --> 00:17:03,790
that could create conflicts in my

00:17:01,579 --> 00:17:03,790
network

00:17:08,190 --> 00:17:13,830
these are some of the features where we

00:17:10,650 --> 00:17:16,770
are working on for the next release the

00:17:13,830 --> 00:17:19,650
top one is a big one we're aiming for

00:17:16,770 --> 00:17:24,390
performance enhancement so that Cobra

00:17:19,650 --> 00:17:27,240
can scale up to about 50,000 systems we

00:17:24,390 --> 00:17:29,970
also plan to do a few API upgrades for

00:17:27,240 --> 00:17:31,890
spacewalk integration because cover is

00:17:29,970 --> 00:17:35,430
being adopted as the provisioning

00:17:31,890 --> 00:17:37,380
backend for a spacewalk some of you may

00:17:35,430 --> 00:17:40,170
know may not know spacewalk is the

00:17:37,380 --> 00:17:43,650
upstream open-source version of red hat

00:17:40,170 --> 00:17:46,250
satellite server we're also adding some

00:17:43,650 --> 00:17:49,620
features required for fedora beaker

00:17:46,250 --> 00:17:55,770
which if I remember correctly is some

00:17:49,620 --> 00:17:58,850
sort of test /q a sweet and we're

00:17:55,770 --> 00:18:01,470
planning to implement windows deployment

00:17:58,850 --> 00:18:04,200
that's actually really cool I know it's

00:18:01,470 --> 00:18:07,020
a big Linux clapper crowd here at our

00:18:04,200 --> 00:18:09,930
source crowd but the more outsourced

00:18:07,020 --> 00:18:12,110
utilities we can use in well mostly

00:18:09,930 --> 00:18:15,300
hybrid environment because a lot of

00:18:12,110 --> 00:18:17,280
companies have these applications and

00:18:15,300 --> 00:18:19,140
they need to run on Windows well if you

00:18:17,280 --> 00:18:26,220
can manage those systems from from color

00:18:19,140 --> 00:18:28,530
in my opinion that's great now well we

00:18:26,220 --> 00:18:30,000
might might want to add actually we do

00:18:28,530 --> 00:18:32,970
want to add support for a lot more

00:18:30,000 --> 00:18:37,050
distributions my personal wish list are

00:18:32,970 --> 00:18:39,600
freebsd net BST and so on we'd like to

00:18:37,050 --> 00:18:41,400
add some web interface improvements i

00:18:39,600 --> 00:18:44,300
think we're actually going to submit

00:18:41,400 --> 00:18:48,840
that project for a google Summer of Code

00:18:44,300 --> 00:18:53,120
support vmware ESX because we we can now

00:18:48,840 --> 00:18:56,270
support sin we can support kvm q email

00:18:53,120 --> 00:18:58,110
these all work but the other major

00:18:56,270 --> 00:19:01,230
virtualization project out there of

00:18:58,110 --> 00:19:03,510
course is vmware ESX server so we'd like

00:19:01,230 --> 00:19:09,750
to be able to deploy virtual Stewie's

00:19:03,510 --> 00:19:11,820
excess law the s390 mainframe support

00:19:09,750 --> 00:19:13,690
actually has been added last week so

00:19:11,820 --> 00:19:18,490
this will

00:19:13,690 --> 00:19:23,720
21.6 probably also because this is a

00:19:18,490 --> 00:19:25,660
community project users can just inject

00:19:23,720 --> 00:19:28,280
any feature they want on the roadmap and

00:19:25,660 --> 00:19:30,080
if they submit patches for it or it's

00:19:28,280 --> 00:19:32,800
really good idea we wanted to do it

00:19:30,080 --> 00:19:36,080
ourselves we just added to our roadmap

00:19:32,800 --> 00:19:39,350
the top line here maybe we should

00:19:36,080 --> 00:19:42,140
rethink naming our top objective cover

00:19:39,350 --> 00:19:46,390
distribution because I don't think we

00:19:42,140 --> 00:19:48,980
can get named freebsd or Windows

00:19:46,390 --> 00:19:54,980
distribution really but that's something

00:19:48,980 --> 00:19:57,500
we have to work out okay a little bit

00:19:54,980 --> 00:20:01,450
about our development process we aim to

00:19:57,500 --> 00:20:04,940
release a major cobbler release that's a

00:20:01,450 --> 00:20:08,600
feature release essentially about every

00:20:04,940 --> 00:20:13,850
two to three months we're using an old

00:20:08,600 --> 00:20:17,570
kernel development scheme so 1.3 became

00:20:13,850 --> 00:20:21,410
1.4 stable we're working on 1.5 now

00:20:17,570 --> 00:20:25,160
which will become 1.6 and hopefully say

00:20:21,410 --> 00:20:27,710
a month maybe two months the roadmaps

00:20:25,160 --> 00:20:29,270
not really fixed as I said so if you've

00:20:27,710 --> 00:20:32,750
got a really cool feature we need to add

00:20:29,270 --> 00:20:35,690
just join the mailing list and sellers

00:20:32,750 --> 00:20:40,400
patches or share your ideas because

00:20:35,690 --> 00:20:43,160
copper was meant as a tool to be as

00:20:40,400 --> 00:20:45,680
feature rich as possible so there are no

00:20:43,160 --> 00:20:48,800
there are a lot of custom deployment

00:20:45,680 --> 00:20:51,770
systems around there like shop running a

00:20:48,800 --> 00:20:55,010
sound PHP kickstart generator for

00:20:51,770 --> 00:20:58,760
example if we if we can consolidate all

00:20:55,010 --> 00:21:00,980
these features into cover we can build a

00:20:58,760 --> 00:21:03,910
really really flexible versatile

00:21:00,980 --> 00:21:03,910
deployment tool

00:21:13,159 --> 00:21:19,359
okay scripting through the API this is

00:21:16,369 --> 00:21:22,549
where where it really gets fun because

00:21:19,359 --> 00:21:26,450
this shows really how flexible cover is

00:21:22,549 --> 00:21:30,769
I can really essentially again I can

00:21:26,450 --> 00:21:32,599
script any frame anything color at my

00:21:30,769 --> 00:21:36,220
company we're using this to integrate

00:21:32,599 --> 00:21:39,289
this with our main management tool and

00:21:36,220 --> 00:21:41,989
reducing the xml RPC to add systems to

00:21:39,289 --> 00:21:43,970
cover to delete system shook from

00:21:41,989 --> 00:21:49,249
cobbler to generate new profiles or

00:21:43,970 --> 00:21:52,009
whatever we're in conjunction with this

00:21:49,249 --> 00:21:56,179
we're using funk to trigger new

00:21:52,009 --> 00:21:58,279
installations or to trigger creating new

00:21:56,179 --> 00:22:03,559
networks on our virtualization surfers

00:21:58,279 --> 00:22:06,049
and so on because Cobras got a database

00:22:03,559 --> 00:22:07,970
of its own it's stored all the systems

00:22:06,049 --> 00:22:12,769
and profiles and distributions are

00:22:07,970 --> 00:22:15,169
stored in Java files so you can use

00:22:12,769 --> 00:22:18,700
color as your configuration management

00:22:15,169 --> 00:22:21,259
database if you like or the other ends

00:22:18,700 --> 00:22:23,840
you don't have to because I know a lot

00:22:21,259 --> 00:22:27,289
of people say I've got a working cmdb

00:22:23,840 --> 00:22:29,330
already that's fine if you write write

00:22:27,289 --> 00:22:31,849
the glue you can just have your current

00:22:29,330 --> 00:22:34,129
cmdb push the information to cover and

00:22:31,849 --> 00:22:37,129
then start deploying so you're basically

00:22:34,129 --> 00:22:39,019
keeping your management tools and are

00:22:37,129 --> 00:22:46,279
just adopting cover as your provisioning

00:22:39,019 --> 00:22:49,669
back end okay this is a small API

00:22:46,279 --> 00:22:52,820
example i hope the codes readable in the

00:22:49,669 --> 00:22:57,529
back but this is basically to show how

00:22:52,820 --> 00:23:01,599
easy it is to use the API to do some

00:22:57,529 --> 00:23:04,879
scripting so what we are doing here

00:23:01,599 --> 00:23:08,599
first we are importing the xml RPC

00:23:04,879 --> 00:23:10,369
library and my own library that can do

00:23:08,599 --> 00:23:13,609
really neat stuff that I've written I

00:23:10,369 --> 00:23:15,979
don't know what but we defined you right

00:23:13,609 --> 00:23:20,529
to the cobbler server we open a

00:23:15,979 --> 00:23:20,529
connection using the xml RPC library

00:23:20,559 --> 00:23:27,470
what we what you want to do is get the

00:23:24,529 --> 00:23:30,530
system my side by side my side outside

00:23:27,470 --> 00:23:33,620
the local and then for the system we'd

00:23:30,530 --> 00:23:35,419
like to generate kickstart I've taken

00:23:33,620 --> 00:23:38,809
this from a small script a colleague of

00:23:35,419 --> 00:23:41,210
my road to generate a modulus

00:23:38,809 --> 00:23:45,980
configuration from a system storing

00:23:41,210 --> 00:23:48,409
governor so well in this example my old

00:23:45,980 --> 00:23:52,909
library does do and score magic would do

00:23:48,409 --> 00:23:56,179
is look at that generated kickstart find

00:23:52,909 --> 00:23:59,299
the partitioning bits in the rendered

00:23:56,179 --> 00:24:02,390
kick start and then creates checks for

00:23:59,299 --> 00:24:05,120
disk space for example so I can in my

00:24:02,390 --> 00:24:06,590
Kickstarter I can see I'm creating a

00:24:05,120 --> 00:24:09,200
petition for routes i'm creating

00:24:06,590 --> 00:24:14,210
partition for stash far i'm creating a

00:24:09,200 --> 00:24:16,909
petition for log files with this

00:24:14,210 --> 00:24:24,650
function i can generate Nigel's checks

00:24:16,909 --> 00:24:26,840
for those systems for example okay this

00:24:24,650 --> 00:24:45,669
is where Robert legends is going to take

00:24:26,840 --> 00:24:48,049
over for the couple of use cases hello

00:24:45,669 --> 00:24:49,789
good morning guys my name is Jasper

00:24:48,049 --> 00:24:51,049
mentions Rob losers thanks very much for

00:24:49,789 --> 00:24:53,360
getting up this early in the morning to

00:24:51,049 --> 00:24:55,100
come see our talk I'm sure you all had a

00:24:53,360 --> 00:24:59,000
fun thing last night and then really

00:24:55,100 --> 00:25:00,620
need to be up here too but so I'm here

00:24:59,000 --> 00:25:02,419
to describe more the cobbler use cases

00:25:00,620 --> 00:25:04,580
now I'm a sysadmin I'm not developer

00:25:02,419 --> 00:25:06,470
like most of you so I'm here to tell you

00:25:04,580 --> 00:25:08,780
why cobblers useful to you today why you

00:25:06,470 --> 00:25:11,059
want to go home and install this and use

00:25:08,780 --> 00:25:12,049
it in your systems now the moment today

00:25:11,059 --> 00:25:14,450
you're either going to be installing

00:25:12,049 --> 00:25:17,750
your systems by the old-fashioned method

00:25:14,450 --> 00:25:19,130
of CD putting it in your system clicking

00:25:17,750 --> 00:25:21,140
all those buttons going through or you

00:25:19,130 --> 00:25:24,200
may have moved on a little bit more and

00:25:21,140 --> 00:25:26,059
you've got your HTTP server you've got a

00:25:24,200 --> 00:25:27,740
fedora mirror and you've got your own

00:25:26,059 --> 00:25:29,450
kickstart file on there and you've got

00:25:27,740 --> 00:25:30,950
your own tftp server you might even be

00:25:29,450 --> 00:25:33,140
doing something like managing your repos

00:25:30,950 --> 00:25:34,520
with a more equal of some other tool and

00:25:33,140 --> 00:25:35,840
it feels a lot of marriage you might

00:25:34,520 --> 00:25:38,200
have a database behind that and you're

00:25:35,840 --> 00:25:43,510
thinking why should I bother using them

00:25:38,200 --> 00:25:45,520
but hopefully this will show you why so

00:25:43,510 --> 00:25:48,580
first year's case was the first place i

00:25:45,520 --> 00:25:50,110
used cobbler which was to deploy the

00:25:48,580 --> 00:25:52,300
systems for the cloud computing farm

00:25:50,110 --> 00:25:54,820
that i wrote why i was working at the

00:25:52,300 --> 00:25:56,740
last isp now this sort of case you've

00:25:54,820 --> 00:25:58,630
got thousands of systems that you may

00:25:56,740 --> 00:26:00,940
need to be reinstalling daily or even

00:25:58,630 --> 00:26:02,440
early and they all need to be pretty

00:26:00,940 --> 00:26:04,600
much the same you know you might have a

00:26:02,440 --> 00:26:06,850
web server class a database server class

00:26:04,600 --> 00:26:08,320
and they all have pretty similar

00:26:06,850 --> 00:26:12,310
properties you need to be able to do

00:26:08,320 --> 00:26:13,540
this reliably also if you're in the

00:26:12,310 --> 00:26:14,650
cloak computing environment you don't

00:26:13,540 --> 00:26:16,000
want to be doing this yourself your

00:26:14,650 --> 00:26:17,530
customers really want to be the ones

00:26:16,000 --> 00:26:19,330
doing this so you want to be able to

00:26:17,530 --> 00:26:21,460
hand over this entire process to them

00:26:19,330 --> 00:26:26,260
and know that it will just work every

00:26:21,460 --> 00:26:27,880
single time also in a cloud computing

00:26:26,260 --> 00:26:29,440
environment if you've got thousands and

00:26:27,880 --> 00:26:31,870
thousands a piece of hardware like

00:26:29,440 --> 00:26:33,460
Amazon like Google or like big eyes peas

00:26:31,870 --> 00:26:36,790
you're going to be seeing hardware

00:26:33,460 --> 00:26:38,230
failure on a regular basis now the

00:26:36,790 --> 00:26:39,730
statistics we worked out at the last

00:26:38,230 --> 00:26:41,950
ISPs we figure it for every hundred

00:26:39,730 --> 00:26:45,970
machines we should be seen a failure

00:26:41,950 --> 00:26:47,080
every single month on your movie ISPs

00:26:45,970 --> 00:26:48,490
are running on thousands of systems

00:26:47,080 --> 00:26:50,080
that's a lot of failures you're going to

00:26:48,490 --> 00:26:51,640
be able to get those systems back up and

00:26:50,080 --> 00:26:55,620
running very quickly for your customers

00:26:51,640 --> 00:26:55,620
it's one of the advantage public if you

00:26:58,780 --> 00:27:03,310
also if you've got a big grid systems to

00:27:01,480 --> 00:27:04,660
see you're a university like Hayden

00:27:03,310 --> 00:27:06,100
borough or one of the European

00:27:04,660 --> 00:27:09,190
universities we've got this big massive

00:27:06,100 --> 00:27:11,080
grid and it's compelling your record

00:27:09,190 --> 00:27:12,760
doing your nuclear statistics or

00:27:11,080 --> 00:27:14,020
whatever else you're doing you're going

00:27:12,760 --> 00:27:15,550
want to tell that build system that hey

00:27:14,020 --> 00:27:16,600
i just lost that piece of hardware there

00:27:15,550 --> 00:27:18,550
so you might have no gee i was doing

00:27:16,600 --> 00:27:19,990
that but when it comes back up you want

00:27:18,550 --> 00:27:22,390
to build a tart system instantly hey

00:27:19,990 --> 00:27:30,370
I've got it ready it's installed let's

00:27:22,390 --> 00:27:32,890
get using it looks like again going back

00:27:30,370 --> 00:27:34,810
to my experience this is one of the most

00:27:32,890 --> 00:27:38,410
horrible things I've ever been through I

00:27:34,810 --> 00:27:40,390
woke up i'm on call as 2 a.m. and the

00:27:38,410 --> 00:27:43,210
entire customer web farms really so

00:27:40,390 --> 00:27:45,820
you're talking about c20 systems now

00:27:43,210 --> 00:27:49,120
back in the days before cobbler this

00:27:45,820 --> 00:27:51,160
meant at 2am I've got to sit there take

00:27:49,120 --> 00:27:52,180
down each system because most of the web

00:27:51,160 --> 00:27:54,100
phone is working you don't want to take

00:27:52,180 --> 00:27:56,770
down the whole thing they take down each

00:27:54,100 --> 00:27:59,500
system individually reinstall it set

00:27:56,770 --> 00:28:00,880
there whilst the install happens and I'm

00:27:59,500 --> 00:28:02,350
not thinking straight there this isn't

00:28:00,880 --> 00:28:04,870
going to work well and errors are going

00:28:02,350 --> 00:28:07,360
to be made so with cobbler know what i

00:28:04,870 --> 00:28:10,300
can do is i can write a script with the

00:28:07,360 --> 00:28:12,790
API its shots down the systems know if

00:28:10,300 --> 00:28:14,740
the systems weren't rooted we could be

00:28:12,790 --> 00:28:17,920
using Courtin to do a reinstall self or

00:28:14,740 --> 00:28:19,750
replace self to then just maybe what

00:28:17,920 --> 00:28:21,850
condos with that is it puts an entry in

00:28:19,750 --> 00:28:24,700
the grub menu reboots the system and

00:28:21,850 --> 00:28:26,380
then on that grub menu entry it has a

00:28:24,700 --> 00:28:27,970
small bootloader environment which then

00:28:26,380 --> 00:28:30,520
reinstall the system but in this use

00:28:27,970 --> 00:28:32,650
case if our systems are really we can't

00:28:30,520 --> 00:28:34,900
trust them so cobbler gives us the power

00:28:32,650 --> 00:28:37,750
management through the API to shut down

00:28:34,900 --> 00:28:40,420
the system and because cobbler gives you

00:28:37,750 --> 00:28:42,610
the facility to turn on and off your net

00:28:40,420 --> 00:28:44,230
bidding for your systems you can have

00:28:42,610 --> 00:28:47,650
all of your systems all setup to

00:28:44,230 --> 00:28:49,420
automatically pixie boot and they would

00:28:47,650 --> 00:28:52,210
reinstall themselves unless you to Pablo

00:28:49,420 --> 00:28:54,160
do it so with your cobbler script you've

00:28:52,210 --> 00:28:56,440
rebooted your system it came back into

00:28:54,160 --> 00:28:58,660
the install it started reinstalling

00:28:56,440 --> 00:29:00,520
automatically according to your profile

00:28:58,660 --> 00:29:01,870
with all the software the additional

00:29:00,520 --> 00:29:04,120
repositories and everything else you

00:29:01,870 --> 00:29:06,010
need then when it comes back up because

00:29:04,120 --> 00:29:07,960
we've got funky integration which will

00:29:06,010 --> 00:29:09,539
actually run remote commands reliably on

00:29:07,960 --> 00:29:11,460
the system's if you haven't seen that

00:29:09,539 --> 00:29:13,979
yes you have a look at it and then pop

00:29:11,460 --> 00:29:15,809
it integration to make sure that your to

00:29:13,979 --> 00:29:17,549
ensure that your systems configuration

00:29:15,809 --> 00:29:20,129
is exactly as it should be for your

00:29:17,549 --> 00:29:23,700
users or your web form that all happens

00:29:20,129 --> 00:29:25,470
automatically so what I can do then as a

00:29:23,700 --> 00:29:29,220
systems administrator know rather than

00:29:25,470 --> 00:29:31,169
back in the old days I wake up at 2am I

00:29:29,220 --> 00:29:32,759
noticed why waveforms ruin it instead of

00:29:31,169 --> 00:29:35,009
time going to stay up for errors and set

00:29:32,759 --> 00:29:36,720
and reinstall systems I run one script

00:29:35,009 --> 00:29:38,820
and I go back to bed knowing that and

00:29:36,720 --> 00:29:40,830
half an hour and hour or however long

00:29:38,820 --> 00:29:42,599
it's going to take those systems are

00:29:40,830 --> 00:29:44,399
going to be reinstalled exactly as they

00:29:42,599 --> 00:29:46,109
were originally their configuration is

00:29:44,399 --> 00:29:51,690
going to be perfect and I've lost no

00:29:46,109 --> 00:29:53,129
sleep in our third use case scenario

00:29:51,690 --> 00:29:56,580
this is the one I'm working on though I

00:29:53,129 --> 00:29:58,619
work at tomtom and one of the things we

00:29:56,580 --> 00:30:00,809
do is location tracking based on mobile

00:29:58,619 --> 00:30:04,830
phone data to give us more accurate

00:30:00,809 --> 00:30:07,169
traffic statistics what we need to do

00:30:04,830 --> 00:30:08,759
there is an every mobile operator we've

00:30:07,169 --> 00:30:10,499
got to install a cluster of machines

00:30:08,759 --> 00:30:13,139
though there sounds perfectly fine

00:30:10,499 --> 00:30:16,049
surely you just fly Rob your sis I've

00:30:13,139 --> 00:30:17,639
been out to your mobile operator and he

00:30:16,049 --> 00:30:20,279
did install machines the sad thing is

00:30:17,639 --> 00:30:22,379
that you end up in scenarios like like

00:30:20,279 --> 00:30:24,539
I've got here where the mobile operator

00:30:22,379 --> 00:30:26,309
in our case is far too paranoid to let

00:30:24,539 --> 00:30:28,440
Rob the bearded long-haired sysadmin

00:30:26,309 --> 00:30:30,950
into their facilities so that's not

00:30:28,440 --> 00:30:33,389
going to happen so I've then got

00:30:30,950 --> 00:30:34,729
complete and utter monkeys who have

00:30:33,389 --> 00:30:38,129
never seen a Linux before in your life

00:30:34,729 --> 00:30:40,049
go to install systems for me so what I

00:30:38,129 --> 00:30:42,269
get to know instead of giving them a

00:30:40,049 --> 00:30:43,409
receding with a cake star which may be

00:30:42,269 --> 00:30:45,749
an error on they have to figure

00:30:43,409 --> 00:30:47,190
something out I give them a portable

00:30:45,749 --> 00:30:48,840
hard drive to plug into one of the

00:30:47,190 --> 00:30:51,330
systems in the cluster it's got the

00:30:48,840 --> 00:30:52,919
cobbler server up and running so that's

00:30:51,330 --> 00:30:54,809
system boots off that hard disk it's got

00:30:52,919 --> 00:30:56,519
cobbler serve we're all set up then all

00:30:54,809 --> 00:30:59,450
you need to do is turn on each single

00:30:56,519 --> 00:31:01,889
one of those systems they get installed

00:30:59,450 --> 00:31:03,690
configures and they're ready to go for

00:31:01,889 --> 00:31:06,599
us and that monkey never has to touch

00:31:03,690 --> 00:31:07,889
anything or do anything and that way we

00:31:06,599 --> 00:31:09,509
don't have to worry about the systems

00:31:07,889 --> 00:31:11,789
being deployed or compared in the wrong

00:31:09,509 --> 00:31:13,739
ways everything just works for us what

00:31:11,789 --> 00:31:15,599
this also lets us do is because we've

00:31:13,739 --> 00:31:16,679
got the local repository mirrors we

00:31:15,599 --> 00:31:19,049
don't need to worry about the bandwidth

00:31:16,679 --> 00:31:20,820
coming in at these sites either but

00:31:19,049 --> 00:31:21,730
because cobbler has a replicate

00:31:20,820 --> 00:31:23,590
functionality

00:31:21,730 --> 00:31:25,600
what cobbler lets you do is you have

00:31:23,590 --> 00:31:28,260
your central cobbler server so in my

00:31:25,600 --> 00:31:30,550
case in our office I can then replicate

00:31:28,260 --> 00:31:32,200
multiple cobbler service from that so

00:31:30,550 --> 00:31:34,090
I've got that central configuration

00:31:32,200 --> 00:31:36,300
management database for all of our

00:31:34,090 --> 00:31:38,650
mobile operators all over the world and

00:31:36,300 --> 00:31:40,750
it holds all of the records on all the

00:31:38,650 --> 00:31:43,240
systems and I just replicate that entire

00:31:40,750 --> 00:31:46,050
system it's a trivial operation takes me

00:31:43,240 --> 00:31:48,640
about five minutes and suddenly I can

00:31:46,050 --> 00:31:52,980
deploy the entire worlds worth of mobile

00:31:48,640 --> 00:31:54,850
operators very very privileged it makes

00:31:52,980 --> 00:31:56,680
systems administration makes the

00:31:54,850 --> 00:32:03,880
installation of these systems absolutely

00:31:56,680 --> 00:32:05,500
trivial for me excellent no this is the

00:32:03,880 --> 00:32:08,920
thing I really love about cobbler okay

00:32:05,500 --> 00:32:11,500
it makes my life easy to am and I'll

00:32:08,920 --> 00:32:12,970
lose less sleep but the great thing a

00:32:11,500 --> 00:32:14,530
little bit cobblers it's been really

00:32:12,970 --> 00:32:16,510
really easy to get involved and that's

00:32:14,530 --> 00:32:18,340
why I love boobs or software and this is

00:32:16,510 --> 00:32:20,170
what I'd know encourage you to do a year

00:32:18,340 --> 00:32:22,660
ago runabout same team jasper joined the

00:32:20,170 --> 00:32:25,480
project I did as well there's a sad I'm

00:32:22,660 --> 00:32:27,280
nice developer like you guys so I made

00:32:25,480 --> 00:32:29,380
me written a patch with you but what I

00:32:27,280 --> 00:32:31,450
was able to do is contribute what I

00:32:29,380 --> 00:32:33,190
actually needed to the project and we

00:32:31,450 --> 00:32:35,590
were able very quickly to get that done

00:32:33,190 --> 00:32:38,230
with maple to ham with great photos like

00:32:35,590 --> 00:32:40,980
Jasper and suddenly I've got a product

00:32:38,230 --> 00:32:43,510
that's usable to me now it's for me and

00:32:40,980 --> 00:32:44,860
from business perspective the big win

00:32:43,510 --> 00:32:46,750
fronts or software and what you guys

00:32:44,860 --> 00:32:48,430
provide to the world it's fantastic so

00:32:46,750 --> 00:32:50,290
come and join us if you're going to use

00:32:48,430 --> 00:32:52,420
this we'll listen to all of your

00:32:50,290 --> 00:32:53,890
requests feature requests or fever

00:32:52,420 --> 00:32:55,270
patches for us and we'll get them in

00:32:53,890 --> 00:32:57,820
there quickly it worked really well

00:32:55,270 --> 00:32:59,830
we're really open community I know some

00:32:57,820 --> 00:33:02,500
open source developers are not about to

00:32:59,830 --> 00:33:05,770
deal with some recently who they won't

00:33:02,500 --> 00:33:07,510
accept patches their words please please

00:33:05,770 --> 00:33:09,670
if you are an open-source developer be

00:33:07,510 --> 00:33:10,900
open to your users because they're the

00:33:09,670 --> 00:33:11,620
ones who are using your product there

00:33:10,900 --> 00:33:13,240
are the ones that you're actually

00:33:11,620 --> 00:33:16,000
sitting there doing this for most of the

00:33:13,240 --> 00:33:18,130
time and cobbler has advanced greatly

00:33:16,000 --> 00:33:20,320
and know the reason we've got this fast

00:33:18,130 --> 00:33:22,920
release cycle is because we're such an

00:33:20,320 --> 00:33:22,920
open community

00:33:25,730 --> 00:33:29,310
thanks very much again for getting up

00:33:27,810 --> 00:33:34,020
this early morning listen to is probably

00:33:29,310 --> 00:33:44,100
long i seriously appreciate it no do you

00:33:34,020 --> 00:33:46,470
have any questions yes yeah absolutely

00:33:44,100 --> 00:33:48,660
so one of the things i've got in tomtom

00:33:46,470 --> 00:33:50,130
is we all have linux workstations

00:33:48,660 --> 00:33:54,120
because they're all Eclipse and Java

00:33:50,130 --> 00:33:55,470
developers ya know we work we don't have

00:33:54,120 --> 00:33:57,150
a central NFS server the home

00:33:55,470 --> 00:33:59,160
directories because the latency of the

00:33:57,150 --> 00:34:01,830
far too high everything's on the

00:33:59,160 --> 00:34:04,800
system's but with the air the

00:34:01,830 --> 00:34:06,690
authorization authentication acl's I

00:34:04,800 --> 00:34:08,669
give the developers the ability to

00:34:06,690 --> 00:34:10,409
reinstall their workstations the last

00:34:08,669 --> 00:34:12,120
thing I want them to do is wiping out

00:34:10,409 --> 00:34:14,790
the home directories so as soon as the

00:34:12,120 --> 00:34:17,520
systems installed I parameter in cobbler

00:34:14,790 --> 00:34:19,320
to say use existing partitions and then

00:34:17,520 --> 00:34:20,790
there's a little snippet and say the

00:34:19,320 --> 00:34:22,429
cake start template which I couldn't

00:34:20,790 --> 00:34:25,650
have done before with a traditional

00:34:22,429 --> 00:34:27,210
standard cake start and mirror I'm able

00:34:25,650 --> 00:34:29,490
to put a little bit cool in there to say

00:34:27,210 --> 00:34:31,440
okay if I've got this parameter against

00:34:29,490 --> 00:34:32,909
this system it's to use the existing

00:34:31,440 --> 00:34:34,200
profiles and not wipe out the home

00:34:32,909 --> 00:34:36,090
directory of those developers and kill

00:34:34,200 --> 00:34:37,470
all their code because I don't want to

00:34:36,090 --> 00:34:39,470
have to be restoring backups y'all got

00:34:37,470 --> 00:34:42,560
birthings doing the time like rebuild

00:34:39,470 --> 00:34:42,560
anything else

00:35:04,510 --> 00:35:07,440
oh sorry

00:35:11,420 --> 00:35:16,700
pretzel and usually

00:35:32,190 --> 00:35:36,460
yep so if anyone else didn't hear what

00:35:35,110 --> 00:35:39,010
her friends here was seeing is he got

00:35:36,460 --> 00:35:40,600
say 200 new systems on date and again

00:35:39,010 --> 00:35:42,970
you've probably got some tack in the

00:35:40,600 --> 00:35:44,380
center installing goes in and you just

00:35:42,970 --> 00:35:46,990
want this to all be automated you don't

00:35:44,380 --> 00:35:48,550
want him to have to go into cobbler add

00:35:46,990 --> 00:35:50,890
the system because something will go

00:35:48,550 --> 00:35:53,620
wrong yeah humans error we all do that's

00:35:50,890 --> 00:35:55,330
why we've got bugzilla so what cobbler

00:35:53,620 --> 00:35:57,250
allows you to do is register a new

00:35:55,330 --> 00:35:59,530
installs automatically so they can build

00:35:57,250 --> 00:36:01,180
up that system select the profile for it

00:35:59,530 --> 00:36:02,740
so it gets all of your comment software

00:36:01,180 --> 00:36:04,750
if it's your database server for example

00:36:02,740 --> 00:36:07,480
and then that automatically registers

00:36:04,750 --> 00:36:08,800
that install within cobbler so you don't

00:36:07,480 --> 00:36:10,810
have to have someone sitting there or

00:36:08,800 --> 00:36:12,400
even an epi or a little script adding

00:36:10,810 --> 00:36:13,870
all those systems and it can be done

00:36:12,400 --> 00:36:16,060
just as a hardware reaches your data

00:36:13,870 --> 00:36:17,470
center sort of you know I proposed to

00:36:16,060 --> 00:36:20,230
you the fluffy freeze that'd be just in

00:36:17,470 --> 00:36:23,410
time delivery that's one possibility

00:36:20,230 --> 00:36:27,460
yeah what I'd like to work on in the

00:36:23,410 --> 00:36:30,520
next coming coming few weeks is bootable

00:36:27,460 --> 00:36:33,360
CD that reach your system configuration

00:36:30,520 --> 00:36:36,910
and then adds that configure

00:36:33,360 --> 00:36:40,540
configuration to cover for example your

00:36:36,910 --> 00:36:43,120
system MAC addresses so you can then

00:36:40,540 --> 00:36:45,460
edit networking properties of those

00:36:43,120 --> 00:36:47,920
systems in cover I don't have it reboot

00:36:45,460 --> 00:36:50,230
into the installation so I guess the

00:36:47,920 --> 00:36:53,410
main thing is as long as you get your

00:36:50,230 --> 00:36:57,580
systems up and running you can ssh to it

00:36:53,410 --> 00:37:03,340
or trigger any other remote procedure to

00:36:57,580 --> 00:37:10,350
get things going again you're good any

00:37:03,340 --> 00:37:13,560
more questions I like this great sorry

00:37:10,350 --> 00:37:16,670
we can do failover yeah but the cobbler

00:37:13,560 --> 00:37:18,930
replicate command we can have

00:37:16,670 --> 00:37:21,510
information storing cobbler on both

00:37:18,930 --> 00:37:23,910
systems simultaneously a replication

00:37:21,510 --> 00:37:28,590
isn't instance or I would have to do

00:37:23,910 --> 00:37:30,510
this in my crontab now but cobbler the

00:37:28,590 --> 00:37:33,330
cover server is basically just a Python

00:37:30,510 --> 00:37:36,270
process so if I want to order to have

00:37:33,330 --> 00:37:38,220
beets that's absolutely no problem it

00:37:36,270 --> 00:37:40,230
seemed with the ECPA if you've got to

00:37:38,220 --> 00:37:41,640
dhcp servers running on your estate as

00:37:40,230 --> 00:37:43,410
long as you've not got a range of

00:37:41,640 --> 00:37:45,630
dresses on those they'll quite happily

00:37:43,410 --> 00:37:46,980
cooperate in theory the protocol says

00:37:45,630 --> 00:37:49,890
that range address they should cooperate

00:37:46,980 --> 00:37:52,110
as well into DHCP servers and reality it

00:37:49,890 --> 00:37:56,040
just doesn't work even with lace for the

00:37:52,110 --> 00:37:57,750
release of ISC dhcpd you will have hours

00:37:56,040 --> 00:37:59,580
with that but yeah if you stick to

00:37:57,750 --> 00:38:06,680
single systems and they're running too

00:37:59,580 --> 00:38:06,680
cold or servers on your line is fine yep

00:38:11,950 --> 00:38:18,220
okay so so you're saying a 5 doce so

00:38:16,600 --> 00:38:19,990
actually we've got something we're very

00:38:18,220 --> 00:38:22,180
similar in our dev environment to this

00:38:19,990 --> 00:38:23,950
at the moment in in tom tom so what we

00:38:22,180 --> 00:38:27,010
have is a bunch of servers monster by

00:38:23,950 --> 00:38:29,440
nagios and then we have an a0 savent

00:38:27,010 --> 00:38:30,970
handler script which can then do

00:38:29,440 --> 00:38:33,430
reinstallation because we've got

00:38:30,970 --> 00:38:35,080
cobblers API those r e installations are

00:38:33,430 --> 00:38:37,540
simply ziam predictable so I can trust

00:38:35,080 --> 00:38:39,430
Nigel's to take care of those so say for

00:38:37,540 --> 00:38:42,220
instance our belt farm suddenly in each

00:38:39,430 --> 00:38:43,660
new systems that we're running far too

00:38:42,220 --> 00:38:44,980
hot and the developers are going to be

00:38:43,660 --> 00:38:46,780
sitting waiting and desks weighing on

00:38:44,980 --> 00:38:48,490
belts happening and take over other

00:38:46,780 --> 00:38:51,730
infrastructure systems or whatever spare

00:38:48,490 --> 00:38:53,470
pull of hardware i have and nauseas can

00:38:51,730 --> 00:38:55,630
then just reinstall those systems i only

00:38:53,470 --> 00:38:57,190
need to think about it again the great

00:38:55,630 --> 00:38:59,560
thing about cobblers allows me be as

00:38:57,190 --> 00:39:07,990
lazy as possible which is what good

00:38:59,560 --> 00:39:09,730
sysadmin till she'd like it is so yeah

00:39:07,990 --> 00:39:11,710
something I don't want to talk about it

00:39:09,730 --> 00:39:13,630
too much because I work for Tom Tom but

00:39:11,710 --> 00:39:16,570
something I'm helping the UK eyes peas

00:39:13,630 --> 00:39:18,700
do is do this for the web farm Jeff so

00:39:16,570 --> 00:39:20,620
see you've got your 10 systems behind

00:39:18,700 --> 00:39:22,690
your little bouncer and suddenly one of

00:39:20,620 --> 00:39:24,850
those customers ends up on national

00:39:22,690 --> 00:39:26,830
television newspaper or whatever and you

00:39:24,850 --> 00:39:28,030
need 10 more systems now I Spees have

00:39:26,830 --> 00:39:29,320
generally got spare full of hardware

00:39:28,030 --> 00:39:31,930
because they like to sell hardware very

00:39:29,320 --> 00:39:33,940
fast what Kobler can make you do with

00:39:31,930 --> 00:39:35,650
that nagios event handler is now your

00:39:33,940 --> 00:39:37,660
sees the lord on the web from going up

00:39:35,650 --> 00:39:39,940
and presumably you'll have multiple

00:39:37,660 --> 00:39:41,770
monitors there for this then with that

00:39:39,940 --> 00:39:43,710
event handler it can just install new

00:39:41,770 --> 00:39:47,710
web servers bring them online instantly

00:39:43,710 --> 00:39:49,600
now it's not a trivial script but you

00:39:47,710 --> 00:39:54,010
can see with Kobler API how it can be

00:39:49,600 --> 00:39:56,460
done yeah it's not difficult any other

00:39:54,010 --> 00:39:56,460
questions

00:39:57,770 --> 00:40:00,610
please do

00:40:35,590 --> 00:40:40,610
this is actually a function that normal

00:40:38,570 --> 00:40:43,190
kick-start provides you could have in

00:40:40,610 --> 00:40:46,460
the pre section of your kick-start a

00:40:43,190 --> 00:40:49,640
little script that detects your heart

00:40:46,460 --> 00:40:53,150
your hard drives and then writes out a

00:40:49,640 --> 00:40:55,550
petitioning scheme accordingly so it can

00:40:53,150 --> 00:40:58,220
see how you've got a one normal right

00:40:55,550 --> 00:41:01,780
one says disk for example for my

00:40:58,220 --> 00:41:06,770
operating system and then I've got these

00:41:01,780 --> 00:41:09,620
two SSD disks and i'm going to use those

00:41:06,770 --> 00:41:17,030
for my fire petition for example so yes

00:41:09,620 --> 00:41:20,200
that's possible any other questions okay

00:41:17,030 --> 00:41:20,200

YouTube URL: https://www.youtube.com/watch?v=OvnruVIXQEY


