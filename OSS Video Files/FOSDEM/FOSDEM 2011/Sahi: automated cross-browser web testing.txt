Title: Sahi: automated cross-browser web testing
Publication date: 2011-12-22
Playlist: FOSDEM 2011
Description: 
	by Andreas Worm

The talk will introduce Sahi and what features make it easy to use for beginners. Furthermore I will present some highlights and neat features for daily usage such as nightly builds. I'll show how fast one can advance in writing testscripts for their web applications, it's pretty intuitive. The automated creation of testlogs will be shown and the possibility of multi-threaded playback.

Sahi is a tester friendly tool. It abstracts out most difficulties that testers face while automating web applications. Some salient features include excellent recorder, platform and browser independence, no XPaths, no waits, multithreaded playback, excellent Java interaction and inbuilt reporting.



FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:06,530 --> 00:00:11,670
yeah hello ladies and gentlemen I'm glad

00:00:09,920 --> 00:00:14,639
to be here and toys time

00:00:11,670 --> 00:00:17,460
both I and

00:00:14,639 --> 00:00:21,810
talking more provoking name like why do

00:00:17,460 --> 00:00:23,460
you guys still use selenium I met I met

00:00:21,810 --> 00:00:25,619
in the force and behaved and yesterday

00:00:23,460 --> 00:00:28,289
two guys they're working with selenium

00:00:25,619 --> 00:00:30,210
and talking about some problems they

00:00:28,289 --> 00:00:37,649
face and I always were like yeah okay

00:00:30,210 --> 00:00:40,870
zai solves the problems is an absolute s

00:00:37,649 --> 00:00:43,680
tool for web applications

00:00:40,870 --> 00:00:43,680
how do I

00:00:45,740 --> 00:00:52,980
so for testing of web applications I'm

00:00:50,970 --> 00:00:54,960
working with a for a few months now and

00:00:52,980 --> 00:00:56,790
if it's very fun to work with

00:00:54,960 --> 00:00:58,980
if you're very comfortable with it and

00:00:56,790 --> 00:01:02,280
it's very fast and easy to use and easy

00:00:58,980 --> 00:01:04,880
to run and I won't present to you why

00:01:02,280 --> 00:01:08,010
it's easy to work with sorry

00:01:04,880 --> 00:01:10,440
you can create dynamic test groups and

00:01:08,010 --> 00:01:14,360
pick test Suites and we'll the snowy

00:01:10,440 --> 00:01:14,360
forest really saves your time

00:01:16,280 --> 00:01:24,200
it works was a java-based proxy server

00:01:19,900 --> 00:01:26,479
this proxy server executes JavaScript to

00:01:24,200 --> 00:01:28,850
do the user events like going to a

00:01:26,479 --> 00:01:31,270
website and you're inserting text or

00:01:28,850 --> 00:01:33,590
tracking to up for checks and boxes and

00:01:31,270 --> 00:01:35,840
logging in and all the stuff that you

00:01:33,590 --> 00:01:41,530
have a to and even more that can handle

00:01:35,840 --> 00:01:45,770
cookies for examples and the tests are

00:01:41,530 --> 00:01:48,770
developed directly in the browser means

00:01:45,770 --> 00:01:53,800
you you have a new browser tab where you

00:01:48,770 --> 00:01:53,800
create your tests I will show that later

00:01:57,840 --> 00:02:03,990
the plaza independencia is a remarkable

00:02:00,509 --> 00:02:07,049
feature of sahi the browser tests can be

00:02:03,990 --> 00:02:08,610
created and running on nearly every

00:02:07,049 --> 00:02:09,989
browser as present once and future

00:02:08,610 --> 00:02:14,340
browsers as long as they support

00:02:09,989 --> 00:02:17,069
JavaScript let's say you avoid two tests

00:02:14,340 --> 00:02:20,250
with Firefox then you can automate the

00:02:17,069 --> 00:02:25,920
test on Opera Safari Internet Explorer

00:02:20,250 --> 00:02:27,989
and chromium and many many more you can

00:02:25,920 --> 00:02:30,360
choose between two languages write your

00:02:27,989 --> 00:02:33,660
scripts or as I prefer JavaScript you

00:02:30,360 --> 00:02:43,769
may prefer view map may prefer Ruby your

00:02:33,660 --> 00:02:47,129
choice in comparison to other tools we

00:02:43,769 --> 00:02:50,030
have no need for weights and you have no

00:02:47,129 --> 00:02:52,760
vide no need for expires which makes

00:02:50,030 --> 00:02:54,959
dynamic websites and dynamic scripts

00:02:52,760 --> 00:02:58,739
really easy to handle you don't get

00:02:54,959 --> 00:03:00,450
frustrated when the get element by ID

00:02:58,739 --> 00:03:04,620
changes all the time you will of the

00:03:00,450 --> 00:03:07,170
page I explain the further later and

00:03:04,620 --> 00:03:11,750
come to Zion to Oliver you develop your

00:03:07,170 --> 00:03:15,000
scripts databases are handled very well

00:03:11,750 --> 00:03:17,020
started with testing it's really fun to

00:03:15,000 --> 00:03:22,090
work with

00:03:17,020 --> 00:03:24,100
so when you started to die proxy it just

00:03:22,090 --> 00:03:27,160
brought an aside you want to be tested

00:03:24,100 --> 00:03:29,560
and with controller double-click he

00:03:27,160 --> 00:03:31,000
opens a controller and a new chap I hope

00:03:29,560 --> 00:03:36,070
you can see it right this is a

00:03:31,000 --> 00:03:37,750
controller even if you have no

00:03:36,070 --> 00:03:39,760
experience with JavaScript you can

00:03:37,750 --> 00:03:41,740
create tests just by a copy and paste

00:03:39,760 --> 00:03:45,520
and the functions which offices our

00:03:41,740 --> 00:03:48,010
controller just insert the name press

00:03:45,520 --> 00:03:51,070
record and then you do your actions you

00:03:48,010 --> 00:03:55,060
navigate your type of text checkboxes

00:03:51,070 --> 00:03:59,310
you walk in and everything every every

00:03:55,060 --> 00:04:03,520
step you have done will be shown here

00:03:59,310 --> 00:04:06,010
and you can even type in your own text

00:04:03,520 --> 00:04:09,220
in this field and test it but just one

00:04:06,010 --> 00:04:15,370
click and to do season without in the

00:04:09,220 --> 00:04:18,040
browser the accessing of elements is

00:04:15,370 --> 00:04:19,930
pretty easy it was this you hold the

00:04:18,040 --> 00:04:24,250
control button and he moves the mouse

00:04:19,930 --> 00:04:27,370
over your web page and in this excessive

00:04:24,250 --> 00:04:31,750
field they'll show up the elements the

00:04:27,370 --> 00:04:34,150
Dom element you're pointing to you get a

00:04:31,750 --> 00:04:37,150
challenge if it's excesses anytime so

00:04:34,150 --> 00:04:39,670
you you don't need to name the element

00:04:37,150 --> 00:04:44,590
you could say I want to search headline

00:04:39,670 --> 00:04:48,160
or whatever and the really neat thing is

00:04:44,590 --> 00:04:52,050
the relational excesses the controller

00:04:48,160 --> 00:04:55,120
cam or Ziya comes with an inbuilt API

00:04:52,050 --> 00:04:58,540
which based on JavaScript and they are

00:04:55,120 --> 00:05:00,940
the the he commands them in under an ear

00:04:58,540 --> 00:05:03,640
where you can locate where you can point

00:05:00,940 --> 00:05:07,870
to an element just in relation to one

00:05:03,640 --> 00:05:10,419
another let's say I don't know how this

00:05:07,870 --> 00:05:13,780
text field is named then I just say I

00:05:10,419 --> 00:05:16,840
want to I want the the the first text

00:05:13,780 --> 00:05:19,540
field under the text box which I know

00:05:16,840 --> 00:05:22,390
and want to insert some text like five

00:05:19,540 --> 00:05:24,100
stars you can do this with every element

00:05:22,390 --> 00:05:26,290
you can

00:05:24,100 --> 00:05:28,420
but we can access them by the relation

00:05:26,290 --> 00:05:31,350
in the Dom tree just for saying yeah I

00:05:28,420 --> 00:05:33,130
want the third headline and the field

00:05:31,350 --> 00:05:35,110
near the picture

00:05:33,130 --> 00:05:45,190
I don't know you can do everything it's

00:05:35,110 --> 00:05:48,100
pretty easy yeah stop the car you just

00:05:45,190 --> 00:05:50,230
put in you just click on stop and your

00:05:48,100 --> 00:05:58,750
test group is created with just a plain

00:05:50,230 --> 00:06:02,290
text file the record running the test

00:05:58,750 --> 00:06:10,810
manually is even easier you just click

00:06:02,290 --> 00:06:14,230
on the playback tab and then yeah here's

00:06:10,810 --> 00:06:17,200
up here is just click on the playback

00:06:14,230 --> 00:06:19,150
tab in the script name and website you

00:06:17,200 --> 00:06:21,550
want to be test it we want to get tested

00:06:19,150 --> 00:06:24,340
and first play and then you lean back

00:06:21,550 --> 00:06:27,880
and watch the I control all the work you

00:06:24,340 --> 00:06:30,550
will see in the other the other browser

00:06:27,880 --> 00:06:33,220
chap very website is how every step is

00:06:30,550 --> 00:06:36,520
executed and you can watch it and say ok

00:06:33,220 --> 00:06:38,400
everything is working fine and when

00:06:36,520 --> 00:06:41,220
start working fine when doesn't States

00:06:38,400 --> 00:06:44,080
successful and when the city failure

00:06:41,220 --> 00:06:51,100
then you just click on View log files

00:06:44,080 --> 00:06:55,270
and the lock fights will show up do the

00:06:51,100 --> 00:06:59,440
show up yes they show up it's a lot

00:06:55,270 --> 00:07:03,910
fights just a list of links which points

00:06:59,440 --> 00:07:08,230
to this niche where our ml log files we

00:07:03,910 --> 00:07:11,020
can just them it's colorfully marked if

00:07:08,230 --> 00:07:14,290
everything went fine or not yes you just

00:07:11,020 --> 00:07:18,730
see it in an instance if it just fails

00:07:14,290 --> 00:07:22,450
or not and what failed every command is

00:07:18,730 --> 00:07:24,640
listed so that's like is the element

00:07:22,450 --> 00:07:27,750
they are this element is visible and

00:07:24,640 --> 00:07:31,020
discotheques the tester is text white

00:07:27,750 --> 00:07:33,480
the spark ingredient wet and other

00:07:31,020 --> 00:07:40,770
failures that can happen like several

00:07:33,480 --> 00:07:45,230
timeouts there but connections are shown

00:07:40,770 --> 00:07:49,140
there in yellow and with just one click

00:07:45,230 --> 00:07:51,690
we failed a step or any step you give a

00:07:49,140 --> 00:07:53,300
point of exit you get directed to the

00:07:51,690 --> 00:07:56,340
script and you just see the line

00:07:53,300 --> 00:08:12,450
highlighted where the failure happened

00:07:56,340 --> 00:08:14,790
ah he is very extendable you can can

00:08:12,450 --> 00:08:19,800
execute your batch files your share

00:08:14,790 --> 00:08:23,100
script you can include any Java library

00:08:19,800 --> 00:08:27,530
you want and just to give you an example

00:08:23,100 --> 00:08:34,680
of how to exam how you could extend it

00:08:27,530 --> 00:08:37,589
we had a hat issue we accelerated and we

00:08:34,680 --> 00:08:40,700
wanted to get it integrated into Hudson

00:08:37,589 --> 00:08:43,830
and so he should run on a non server

00:08:40,700 --> 00:08:46,980
therefore headless we have to run the

00:08:43,830 --> 00:08:50,490
browser headless and with some two

00:08:46,980 --> 00:08:53,190
simple shell scripts we created a

00:08:50,490 --> 00:08:56,790
virtual display whereas the Firefox or

00:08:53,190 --> 00:08:59,280
the chromium browser once and the second

00:08:56,790 --> 00:08:59,720
shell script which takes screenshots on

00:08:59,280 --> 00:09:04,320
fella

00:08:59,720 --> 00:09:07,050
so I have some invert a PE that that can

00:09:04,320 --> 00:09:09,630
which executes but the failure is

00:09:07,050 --> 00:09:11,880
happening to recovery function and to

00:09:09,630 --> 00:09:16,530
take screenshots there you have the Cal

00:09:11,880 --> 00:09:18,720
visual check what went wrong and with

00:09:16,530 --> 00:09:21,720
the subsidence equation it's not

00:09:18,720 --> 00:09:24,150
possible to pretest nightly Birds before

00:09:21,720 --> 00:09:28,589
they get released and anything fails

00:09:24,150 --> 00:09:32,400
they don't get released their can so you

00:09:28,589 --> 00:09:35,640
can make sure that the really needed

00:09:32,400 --> 00:09:37,320
users really need functions to use you

00:09:35,640 --> 00:09:39,310
want to provide to your users and your

00:09:37,320 --> 00:09:47,850
clients are they are and

00:09:39,310 --> 00:09:50,980
working whatever you do second one is

00:09:47,850 --> 00:09:54,250
with simple redirecting of the proxy

00:09:50,980 --> 00:09:57,880
commands it doesn't it is now possible

00:09:54,250 --> 00:10:00,810
for us to run test scripts on the end

00:09:57,880 --> 00:10:05,080
Android software development kit and

00:10:00,810 --> 00:10:07,540
therefore testing mobile web mobile

00:10:05,080 --> 00:10:18,880
applications in a realistic environment

00:10:07,540 --> 00:10:20,890
in a realistic setting yeah I think

00:10:18,880 --> 00:10:23,220
talked a little bit fast we have so much

00:10:20,890 --> 00:10:23,220
time left

00:10:24,810 --> 00:10:30,130
yeah that's it for now it's like for

00:10:27,820 --> 00:10:33,250
your attention and if you have any

00:10:30,130 --> 00:10:46,030
questions I'm here you guys think I'm my

00:10:33,250 --> 00:10:48,400
do my best to answer them yeah yeah as

00:10:46,030 --> 00:10:51,100
far as these people yesterday to behave

00:10:48,400 --> 00:10:53,770
and told me it was a lot of PR and don't

00:10:51,100 --> 00:10:55,720
really know if it's right but they told

00:10:53,770 --> 00:10:57,160
me that the problem was the right

00:10:55,720 --> 00:10:59,470
commands that I doesn't need weights

00:10:57,160 --> 00:11:02,410
that automatically automatically detects

00:10:59,470 --> 00:11:06,400
when the page is loaded or I acts highly

00:11:02,410 --> 00:11:09,339
dynamic content the text was loaded

00:11:06,400 --> 00:11:11,520
before executing the next step therefore

00:11:09,339 --> 00:11:15,430
no failures can happen a selenium you

00:11:11,520 --> 00:11:17,260
have to say wait for like five seconds

00:11:15,430 --> 00:11:22,510
until everything is loaded before

00:11:17,260 --> 00:11:27,270
continuing or the the the XPath that you

00:11:22,510 --> 00:11:30,940
have to access an element by by a

00:11:27,270 --> 00:11:34,060
constant name okay do you know this skin

00:11:30,940 --> 00:11:38,320
that would get element by ID except

00:11:34,060 --> 00:11:40,779
salon as I doesn't need it the first it

00:11:38,320 --> 00:11:42,220
it can handle it you can handle web

00:11:40,779 --> 00:11:47,580
pages where the ID is constantly

00:11:42,220 --> 00:11:47,580
changing which selenium doesn't

00:11:49,910 --> 00:11:56,060
that's enough for you okay

00:12:00,510 --> 00:12:04,470
excuse me I didn't understand that

00:12:10,360 --> 00:12:25,459
and put something that's I didn't

00:12:18,110 --> 00:12:32,630
understand it so it's mavin hmm them I

00:12:25,459 --> 00:12:34,820
didn't work with maven yet I we just

00:12:32,630 --> 00:12:37,490
worked with that's like I can't and

00:12:34,820 --> 00:13:00,880
don't have any other informations on

00:12:37,490 --> 00:13:03,290
other deviation to it so yeah that's

00:13:00,880 --> 00:13:06,860
yeah that's the top of me after if you

00:13:03,290 --> 00:13:08,480
convert HTML to something which which

00:13:06,860 --> 00:13:12,829
gives us some information we can handle

00:13:08,480 --> 00:13:36,589
this sure but but the input size I just

00:13:12,829 --> 00:13:39,260
gives us but now we do but we're just

00:13:36,589 --> 00:13:41,329
working a little automatically that's it

00:13:39,260 --> 00:13:44,180
that's it that's that's the girls go on

00:13:41,329 --> 00:13:46,779
goal that the Hudson automatically

00:13:44,180 --> 00:13:52,459
automatically detects if a bill tests is

00:13:46,779 --> 00:13:53,990
clear or if it's just filled but I don't

00:13:52,459 --> 00:13:56,470
think this will take long time until

00:13:53,990 --> 00:13:56,470
that is done

00:14:04,390 --> 00:14:10,190
is not so suitable for performance

00:14:07,010 --> 00:14:12,170
testing you can can we have here the

00:14:10,190 --> 00:14:15,110
parallel execution of tests you can

00:14:12,170 --> 00:14:17,870
notice for a playback of tests but many

00:14:15,110 --> 00:14:22,970
do multi start of playback with 10 or

00:14:17,870 --> 00:14:24,530
more sessions and there it can happen

00:14:22,970 --> 00:14:27,560
and that there are unpredictable

00:14:24,530 --> 00:14:29,780
failures which doesn't come from the web

00:14:27,560 --> 00:14:32,660
application but from sorry we need to

00:14:29,780 --> 00:14:34,670
have like eight parallel executions or

00:14:32,660 --> 00:14:45,320
five it's okay but performance testing

00:14:34,670 --> 00:14:47,770
isn't very suitable so yeah I don't

00:14:45,320 --> 00:14:47,770
think so

00:14:52,680 --> 00:14:58,420
yeah our time is nearly up if there are

00:14:55,240 --> 00:15:00,759
any questions left we can meet in front

00:14:58,420 --> 00:15:02,860
maybe have some other ideas how to

00:15:00,759 --> 00:15:03,899
extends I and you could tell me about

00:15:02,860 --> 00:15:07,019
them

00:15:03,899 --> 00:15:07,019

YouTube URL: https://www.youtube.com/watch?v=lnaFZynoeyw


