Title: flashrom
Publication date: 2011-12-22
Playlist: FOSDEM 2011
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:08,010 --> 00:00:13,389
can I read it yes okay

00:00:11,410 --> 00:00:15,560
hi I'm called Annie hi finger I'm the

00:00:13,389 --> 00:00:17,930
leader

00:00:15,560 --> 00:00:21,320
project you're here to listen to a talk

00:00:17,930 --> 00:00:24,770
which says update your bias and EFI from

00:00:21,320 --> 00:00:26,600
any free OS that's actually the subtitle

00:00:24,770 --> 00:00:29,480
the real title is the open source flash

00:00:26,600 --> 00:00:31,970
programmer and latch to be able to speak

00:00:29,480 --> 00:00:34,940
here about Flash room and let's just

00:00:31,970 --> 00:00:38,630
dive in what is flash on Josh ROM is to

00:00:34,940 --> 00:00:42,920
four flash ear prompts well most of you

00:00:38,630 --> 00:00:45,200
know those chips as BIOS chips but some

00:00:42,920 --> 00:00:47,360
know it perhaps as ROM chips on a

00:00:45,200 --> 00:00:49,940
network card usually those are flash ear

00:00:47,360 --> 00:00:51,710
prompts session can identify those chips

00:00:49,940 --> 00:00:53,480
read then write them you race then lock

00:00:51,710 --> 00:00:55,310
them unlock them pretty much everything

00:00:53,480 --> 00:01:00,190
you can do with them and flash rom

00:00:55,310 --> 00:01:04,909
supports all flesh interfaces we know

00:01:00,190 --> 00:01:07,040
which means parallel at PC fwh SPI those

00:01:04,909 --> 00:01:10,189
are the most common buses you find on

00:01:07,040 --> 00:01:13,880
x86 main boards or network cards SATA

00:01:10,189 --> 00:01:16,270
controllers whatever flash ROM does not

00:01:13,880 --> 00:01:18,860
care about the chip form factors so

00:01:16,270 --> 00:01:21,499
sometimes people ask us okay the

00:01:18,860 --> 00:01:23,840
fraction bar give a PLC seat32 flash

00:01:21,499 --> 00:01:25,729
chip and we say well we don't care about

00:01:23,840 --> 00:01:28,340
the form factor it's all about the flash

00:01:25,729 --> 00:01:31,399
interface and the chip itself flash rom

00:01:28,340 --> 00:01:36,890
is pretty extensive it reports over 270

00:01:31,399 --> 00:01:39,130
flash chips 150 x86 chipsets 260 main

00:01:36,890 --> 00:01:42,319
boards are listed in our database we

00:01:39,130 --> 00:01:45,350
have quite a backlog actually realistic

00:01:42,319 --> 00:01:47,600
is probably 500 main boards maybe more

00:01:45,350 --> 00:01:49,909
most more members are supported out of

00:01:47,600 --> 00:01:52,369
the box so we don't get reports for that

00:01:49,909 --> 00:01:56,600
and 55 external programmers I have to

00:01:52,369 --> 00:01:58,549
explain what that means later just a

00:01:56,600 --> 00:02:01,579
short chain external programmers means

00:01:58,549 --> 00:02:04,340
it's not part of the original mission of

00:02:01,579 --> 00:02:07,009
flash ROM to update bias or to replace a

00:02:04,340 --> 00:02:08,509
bias with coreboot and so and anything

00:02:07,009 --> 00:02:10,210
which is not a main board is an external

00:02:08,509 --> 00:02:14,090
programmer

00:02:10,210 --> 00:02:15,800
flash rom has quite nice features it

00:02:14,090 --> 00:02:18,560
works in the environment you're used to

00:02:15,800 --> 00:02:22,220
so if you are used to Linux flash ROM

00:02:18,560 --> 00:02:24,230
can be run on the LI notes it says later

00:02:22,220 --> 00:02:27,890
it's also portable linux freebsd netbsd

00:02:24,230 --> 00:02:29,320
openbsd dragonfly bsd mac OSX open

00:02:27,890 --> 00:02:32,390
solaris free doors

00:02:29,320 --> 00:02:35,240
partially windows pretty much every

00:02:32,390 --> 00:02:39,740
operating system you can mention it's

00:02:35,240 --> 00:02:42,500
easy to port mostly easy flash rom

00:02:39,740 --> 00:02:44,300
doesn't need physical access so if you

00:02:42,500 --> 00:02:46,700
have the old problem you have servers

00:02:44,300 --> 00:02:48,710
stored somewhere and then you would have

00:02:46,700 --> 00:02:52,310
to plug in a keyboard have plug in a

00:02:48,710 --> 00:02:53,870
monitor to run a DOS based utility maybe

00:02:52,310 --> 00:02:54,410
install a floppy drive it that's

00:02:53,870 --> 00:02:56,990
horrible

00:02:54,410 --> 00:02:59,870
who would want to do that so flash rom

00:02:56,990 --> 00:03:03,760
can just you just login over SSH to that

00:02:59,870 --> 00:03:06,920
machine and update the bias if I

00:03:03,760 --> 00:03:09,500
remotely or flash corporate remotely

00:03:06,920 --> 00:03:13,190
whatever you want before you update your

00:03:09,500 --> 00:03:16,790
network card boot rom whatever it's can

00:03:13,190 --> 00:03:20,480
all be done remotely you can do this

00:03:16,790 --> 00:03:23,090
from running system which means that if

00:03:20,480 --> 00:03:25,010
you have to administrate a huge cluster

00:03:23,090 --> 00:03:28,040
or something like that

00:03:25,010 --> 00:03:32,360
the cluster keeps running why we reflash

00:03:28,040 --> 00:03:35,210
or while you refresh it keeps running

00:03:32,360 --> 00:03:37,400
even if flashing fails can happen maybe

00:03:35,210 --> 00:03:40,850
the chip dies or whatever I once had a

00:03:37,400 --> 00:03:43,160
chip die on me and the machine kept

00:03:40,850 --> 00:03:45,350
running I think I kept it running for

00:03:43,160 --> 00:03:48,410
one month without a flash chip at all

00:03:45,350 --> 00:03:50,540
without bias chip while the machine is

00:03:48,410 --> 00:03:54,080
running you don't do that unless yeah

00:03:50,540 --> 00:03:55,640
well you use flash ROM and what to test

00:03:54,080 --> 00:03:58,070
the chip and you of course need a chip

00:03:55,640 --> 00:04:01,280
but otherwise you can recover if it

00:03:58,070 --> 00:04:04,340
fails you just go on IRC MELAS and say

00:04:01,280 --> 00:04:06,020
hey I didn't shut down the machine can

00:04:04,340 --> 00:04:08,360
you help me and then we usually can help

00:04:06,020 --> 00:04:09,020
you recover so that's pretty cool in my

00:04:08,360 --> 00:04:11,210
opinion

00:04:09,020 --> 00:04:14,350
it's a comment line application which

00:04:11,210 --> 00:04:17,480
means you can also script it easily I

00:04:14,350 --> 00:04:19,310
already mentioned it's portable

00:04:17,480 --> 00:04:20,570
one additional points to the script

00:04:19,310 --> 00:04:24,350
ability

00:04:20,570 --> 00:04:27,230
this also means you flashin will not

00:04:24,350 --> 00:04:29,990
wait for user input and if something is

00:04:27,230 --> 00:04:31,360
wrong or something is flesh from Kant's

00:04:29,990 --> 00:04:34,130
decide what you do

00:04:31,360 --> 00:04:36,470
for example ambiguous chip detection or

00:04:34,130 --> 00:04:39,050
whatever it will simply abort and leave

00:04:36,470 --> 00:04:41,540
your system untouched so you can easily

00:04:39,050 --> 00:04:44,930
deploy it everywhere it's pretty fast we

00:04:41,540 --> 00:04:48,560
have run timings and we are up to ten

00:04:44,930 --> 00:04:51,710
times faster than vendor utilities you

00:04:48,560 --> 00:04:54,410
can do hot flashing for example you kill

00:04:51,710 --> 00:04:56,600
the or not kill but you raised the flash

00:04:54,410 --> 00:05:00,800
chip of one board by accident then you

00:04:56,600 --> 00:05:02,660
put another board put it up remove the

00:05:00,800 --> 00:05:05,900
flash chip while the board is running

00:05:02,660 --> 00:05:08,300
plug in the erase flash chip run flash

00:05:05,900 --> 00:05:10,130
ROM again and the flash image you want

00:05:08,300 --> 00:05:12,290
to have in there and then you have

00:05:10,130 --> 00:05:14,480
recovered one machine without by having

00:05:12,290 --> 00:05:17,690
to buy an expensive programmer you can

00:05:14,480 --> 00:05:20,600
do cross flashing so if you have an acid

00:05:17,690 --> 00:05:24,100
sport with Nvidia chipset you can

00:05:20,600 --> 00:05:26,930
without any problem flash a chip for

00:05:24,100 --> 00:05:29,510
gigabyte board with AMD chipset or

00:05:26,930 --> 00:05:31,340
whatever as long as the buses of the

00:05:29,510 --> 00:05:33,620
flash chip are compatible at their own

00:05:31,340 --> 00:05:35,840
are only for different buses so the

00:05:33,620 --> 00:05:38,780
chance is pretty high and most modern

00:05:35,840 --> 00:05:44,830
systems have spi flash chips though it's

00:05:38,780 --> 00:05:47,960
easy to interchange well use cases

00:05:44,830 --> 00:05:50,780
update your bias update your efi and

00:05:47,960 --> 00:05:53,450
flash coreboot update your network boot

00:05:50,780 --> 00:05:55,550
rom or write one mod your graphics

00:05:53,450 --> 00:05:57,320
formers and people like that because

00:05:55,550 --> 00:06:00,710
they believe the winner just lock down

00:05:57,320 --> 00:06:04,240
the graphics card without any need you

00:06:00,710 --> 00:06:08,390
can mod your SATA power controller

00:06:04,240 --> 00:06:10,820
paramus controllers patter controllers

00:06:08,390 --> 00:06:12,710
in the past we had only to flip one bit

00:06:10,820 --> 00:06:15,150
and it immediately became a RAID

00:06:12,710 --> 00:06:19,090
controller which was fun

00:06:15,150 --> 00:06:20,650
you can do recovery with hot flash and

00:06:19,090 --> 00:06:23,680
cross slashing for example your friend

00:06:20,650 --> 00:06:26,170
bricked his or her device and let's say

00:06:23,680 --> 00:06:27,970
okay give me the flash chip and then you

00:06:26,170 --> 00:06:29,920
rip out your flash about your machine is

00:06:27,970 --> 00:06:32,650
running plug in the other flash chip run

00:06:29,920 --> 00:06:35,980
flash ROM be happy you can flash any

00:06:32,650 --> 00:06:38,380
chip of any programmer so if you have a

00:06:35,980 --> 00:06:41,380
network boot ROM which fits in your

00:06:38,380 --> 00:06:43,480
network card and you have a soft edge

00:06:41,380 --> 00:06:46,180
and a compatible flash pass and they're

00:06:43,480 --> 00:06:48,700
only for flash passes on your all the

00:06:46,180 --> 00:06:51,520
mainboard plug in the network boot ROM

00:06:48,700 --> 00:06:54,280
into your main board with this hot and

00:06:51,520 --> 00:06:56,530
cross flashing flash it and remove it be

00:06:54,280 --> 00:06:59,020
happy the other way around works as well

00:06:56,530 --> 00:07:01,690
can update your mainboard bias if you

00:06:59,020 --> 00:07:03,820
have a self built a VR based programmer

00:07:01,690 --> 00:07:06,820
you can update your graphics card roam

00:07:03,820 --> 00:07:08,920
with a parallel port cable with a few

00:07:06,820 --> 00:07:13,900
resistors soldered on it's all pretty

00:07:08,920 --> 00:07:17,380
much fun the design is pretty is clean

00:07:13,900 --> 00:07:20,110
and reliable because if people try flash

00:07:17,380 --> 00:07:22,600
ram and it fails they will come and

00:07:20,110 --> 00:07:25,720
complain and we want to make users happy

00:07:22,600 --> 00:07:27,520
and supporting people after the fact

00:07:25,720 --> 00:07:29,410
after something is broken is much more

00:07:27,520 --> 00:07:33,670
difficult than doing it right from the

00:07:29,410 --> 00:07:36,010
start so yes super new flash of our new

00:07:33,670 --> 00:07:42,370
programmer is very easy and usually it's

00:07:36,010 --> 00:07:44,350
just adding a new line to a table we did

00:07:42,370 --> 00:07:47,710
not have to write a new flash chip

00:07:44,350 --> 00:07:50,050
driver in the last two years so that

00:07:47,710 --> 00:07:52,600
should probably tell you how well it

00:07:50,050 --> 00:07:54,340
works the programmer is selected by a

00:07:52,600 --> 00:07:55,810
comment line parameter for example if

00:07:54,340 --> 00:07:58,570
you have a network card or graphics card

00:07:55,810 --> 00:08:00,760
and your mind work freshman can't know

00:07:58,570 --> 00:08:02,950
which one to flash and you should

00:08:00,760 --> 00:08:06,070
specify it because fashion will by

00:08:02,950 --> 00:08:08,980
default say ok I don't know which one so

00:08:06,070 --> 00:08:11,500
please tell me it has a compatibility

00:08:08,980 --> 00:08:13,000
checker so it checks whether the flash

00:08:11,500 --> 00:08:15,100
chip and the programming interface are

00:08:13,000 --> 00:08:16,570
compatible it does not check whether the

00:08:15,100 --> 00:08:19,690
board and the image you want to flash

00:08:16,570 --> 00:08:22,390
are compatible because that would make a

00:08:19,690 --> 00:08:25,030
cross flashing possible Russian probes

00:08:22,390 --> 00:08:26,340
always for a cheap but it will never

00:08:25,030 --> 00:08:30,960
read never

00:08:26,340 --> 00:08:34,110
or never right nor erase if you don't

00:08:30,960 --> 00:08:36,060
explicitly tell it and flesh room

00:08:34,110 --> 00:08:40,050
verifies everything by default I think

00:08:36,060 --> 00:08:42,870
two or three times at every step so it's

00:08:40,050 --> 00:08:45,930
all about reliability because hey you

00:08:42,870 --> 00:08:50,810
want user machine afterwards problems

00:08:45,930 --> 00:08:54,450
well we do have some people love to

00:08:50,810 --> 00:08:56,640
flash DVD drives we say no we won't

00:08:54,450 --> 00:08:59,100
support that because DVD drives do not

00:08:56,640 --> 00:09:01,740
offer the ability to verify the contents

00:08:59,100 --> 00:09:03,420
and so we don't know flashing worked and

00:09:01,740 --> 00:09:06,300
then people would just complain the

00:09:03,420 --> 00:09:08,100
fashion killed a DVD burner so we just

00:09:06,300 --> 00:09:10,440
do don't support it oh yeah

00:09:08,100 --> 00:09:13,130
data sheets are wrong really really

00:09:10,440 --> 00:09:16,560
wrong Jetta compliant means yeah well

00:09:13,130 --> 00:09:18,240
you encrypt the spec and then try to

00:09:16,560 --> 00:09:21,750
read that garbage and then it works out

00:09:18,240 --> 00:09:23,790
fast means yeah we had to chip and it

00:09:21,750 --> 00:09:25,890
was about 100 times lower than the

00:09:23,790 --> 00:09:28,830
adders which were not labeled as fast

00:09:25,890 --> 00:09:30,840
standard of course means you can use the

00:09:28,830 --> 00:09:33,950
standard commands but please wait one

00:09:30,840 --> 00:09:36,990
millisecond instead of one microsecond

00:09:33,950 --> 00:09:40,980
after every right so a write needs only

00:09:36,990 --> 00:09:44,030
one hour it's proven in the sense of

00:09:40,980 --> 00:09:46,380
being it's proven that the chip dies

00:09:44,030 --> 00:09:48,780
then there are multiple incompatible

00:09:46,380 --> 00:09:50,670
chips of identical ID because vendors

00:09:48,780 --> 00:09:53,490
decide oh let's keep the idea and just

00:09:50,670 --> 00:09:56,730
change the interface and chipset

00:09:53,490 --> 00:09:59,700
designers try to be clever and they add

00:09:56,730 --> 00:10:02,640
security features which stop us from

00:09:59,700 --> 00:10:06,990
verifying but it's don't stop us or any

00:10:02,640 --> 00:10:09,870
malware from writing it's really really

00:10:06,990 --> 00:10:11,370
funny ok programmers what do we support

00:10:09,870 --> 00:10:16,190
this is only a small selection I'll

00:10:11,370 --> 00:10:19,980
justice quickly my boards a PCI Express

00:10:16,190 --> 00:10:25,680
solid-state disk we support this since I

00:10:19,980 --> 00:10:29,620
think 13 hours I just I committed that

00:10:25,680 --> 00:10:35,050
we support network hearts SATA

00:10:29,620 --> 00:10:39,399
controllers the open graphics part self

00:10:35,050 --> 00:10:44,740
builds AVR based devices the bath pirate

00:10:39,399 --> 00:10:48,430
the expensive daddy prog programmer a

00:10:44,740 --> 00:10:50,709
design of Puma Herman who is also a

00:10:48,430 --> 00:10:52,570
member of the flash rom project it

00:10:50,709 --> 00:10:55,600
pretty much that's the same as the

00:10:52,570 --> 00:10:58,449
extremely expensive daddy prog at the

00:10:55,600 --> 00:11:02,769
same speed but because I think material

00:10:58,449 --> 00:11:06,760
about whatever $10 or so and then you

00:11:02,769 --> 00:11:09,160
can do say you some development hardware

00:11:06,760 --> 00:11:12,310
you can do the parallel port cable heck

00:11:09,160 --> 00:11:14,860
with some resistors if you like it

00:11:12,310 --> 00:11:16,660
ghetto style at midnight nothing else is

00:11:14,860 --> 00:11:21,790
available you want to recover your

00:11:16,660 --> 00:11:24,810
machine ok a demo run where is the

00:11:21,790 --> 00:11:24,810
escape button

00:11:29,270 --> 00:11:34,100
sorry could you help look in the wrong

00:11:33,620 --> 00:11:42,260
place

00:11:34,100 --> 00:11:45,920
sorry um this one should purple okay and

00:11:42,260 --> 00:11:48,290
ethical 11 okay I'll just replay a flash

00:11:45,920 --> 00:11:53,270
room run because I don't want to do this

00:11:48,290 --> 00:11:56,150
on hardware well not with the

00:11:53,270 --> 00:11:59,480
presentation hardware it's just and you

00:11:56,150 --> 00:12:02,570
read first you read the backup this is

00:11:59,480 --> 00:12:05,780
the original timing so it's pretty quick

00:12:02,570 --> 00:12:08,570
and then you write a new version neuron

00:12:05,780 --> 00:12:11,570
it's also not that slow

00:12:08,570 --> 00:12:14,300
I am made that time yesterday it's

00:12:11,570 --> 00:12:18,200
raising writing done verifying of course

00:12:14,300 --> 00:12:23,960
and that's it so I'm like to exit this

00:12:18,200 --> 00:12:25,940
again and five okay if lecture doesn't

00:12:23,960 --> 00:12:29,360
find your chip can happen maybe we just

00:12:25,940 --> 00:12:30,830
need new ID maybe a new chip driver but

00:12:29,360 --> 00:12:32,390
we have needed that in the last two

00:12:30,830 --> 00:12:34,460
years maybe your chips at this unser

00:12:32,390 --> 00:12:36,710
party if it's very new but unlikely

00:12:34,460 --> 00:12:38,210
because we track chipset updates or the

00:12:36,710 --> 00:12:40,340
flash chip is high and hiding behind

00:12:38,210 --> 00:12:42,770
some obscure controller which performs

00:12:40,340 --> 00:12:47,420
translation or you have a laptop just

00:12:42,770 --> 00:12:47,780
send us a report and we'll take care of

00:12:47,420 --> 00:12:49,790
it

00:12:47,780 --> 00:12:54,070
so the laptop nightmare I should mention

00:12:49,790 --> 00:12:56,870
this I have a few seconds left I think

00:12:54,070 --> 00:12:58,760
that flash chips are so much so you

00:12:56,870 --> 00:13:00,440
can't just exchange them the main words

00:12:58,760 --> 00:13:02,240
are constantly extremely expensive and

00:13:00,440 --> 00:13:05,030
the laptop is to computers you have the

00:13:02,240 --> 00:13:06,980
x86 CPU you know and extra embedded

00:13:05,030 --> 00:13:09,560
controller that which does better be

00:13:06,980 --> 00:13:11,090
charging power management the stuff when

00:13:09,560 --> 00:13:14,480
they share the same flash chips so if

00:13:11,090 --> 00:13:17,000
you start raising the normal bias well

00:13:14,480 --> 00:13:19,130
your embedded controller will die power

00:13:17,000 --> 00:13:21,770
off while you're raising not great I

00:13:19,130 --> 00:13:23,870
will hang power of backlight stop

00:13:21,770 --> 00:13:26,660
charging whatever there are no standards

00:13:23,870 --> 00:13:28,310
no doubts no test software and of course

00:13:26,660 --> 00:13:30,340
if you get anything it's only under

00:13:28,310 --> 00:13:32,620
draconian and the A's

00:13:30,340 --> 00:13:34,060
we making slow progress with support a

00:13:32,620 --> 00:13:35,530
few embedded controllers but their

00:13:34,060 --> 00:13:37,360
interface not only depends on the

00:13:35,530 --> 00:13:41,230
hardware but also on the software they

00:13:37,360 --> 00:13:47,230
are running this horrible we support I

00:13:41,230 --> 00:13:49,150
think one laptop ok maybe yeah so he

00:13:47,230 --> 00:13:51,480
uses please try flash room but not in

00:13:49,150 --> 00:13:54,280
crazy expensive hardware not in laptops

00:13:51,480 --> 00:13:56,860
if it works please send us a report

00:13:54,280 --> 00:13:59,350
we're happy to hear about it

00:13:56,860 --> 00:14:02,710
and we'll add it to our support list if

00:13:59,350 --> 00:14:04,810
flashin fails just join us on IRC give

00:14:02,710 --> 00:14:07,090
us a few minutes maybe are a few hours

00:14:04,810 --> 00:14:10,750
to respond the machine can keep running

00:14:07,090 --> 00:14:11,260
just don't power it off we can help you

00:14:10,750 --> 00:14:13,450
recover

00:14:11,260 --> 00:14:16,660
we are pretty successful with recovery

00:14:13,450 --> 00:14:19,780
we have I think roughly 99% recovery

00:14:16,660 --> 00:14:21,970
success so that's my opinion pretty ok

00:14:19,780 --> 00:14:24,190
and please use latest flash rom don't

00:14:21,970 --> 00:14:26,800
use older versions use latest one from

00:14:24,190 --> 00:14:29,710
subversion it's reliable and it has

00:14:26,800 --> 00:14:31,510
automatic recovery and we are at your

00:14:29,710 --> 00:14:34,120
board shoujo duelist if it doesn't break

00:14:31,510 --> 00:14:36,280
at first okay spider well tell everybody

00:14:34,120 --> 00:14:37,720
write in your blog tell your friends

00:14:36,280 --> 00:14:39,760
tell the admins sell your company they

00:14:37,720 --> 00:14:41,920
may actually use it until hardware

00:14:39,760 --> 00:14:44,230
vendors but please not you must support

00:14:41,920 --> 00:14:47,440
this but rather in a pretty friendly way

00:14:44,230 --> 00:14:50,440
um yes if you have questions please

00:14:47,440 --> 00:14:52,660
visit us at our booth and AW building

00:14:50,440 --> 00:14:54,640
booth number 8 we share a roof with

00:14:52,660 --> 00:14:56,830
corporate and flash rom at flash from

00:14:54,640 --> 00:14:59,320
Clark on the web mail us at flash from

00:14:56,830 --> 00:15:00,070
at flash from dot org join us on

00:14:59,320 --> 00:15:02,830
freenode

00:15:00,070 --> 00:15:04,960
at has flash on ok thanks to everybody

00:15:02,830 --> 00:15:07,890
who helps contributes in such reports

00:15:04,960 --> 00:15:07,890

YouTube URL: https://www.youtube.com/watch?v=lwMY8iQcr5o


