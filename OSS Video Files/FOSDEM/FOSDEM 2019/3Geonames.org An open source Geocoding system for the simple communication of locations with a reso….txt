Title: 3Geonames.org An open source Geocoding system for the simple communication of locations with a reso…
Publication date: 2019-02-08
Playlist: FOSDEM 2019
Description: 
	3Geonames.org An open source Geocoding system for the simple communication of locations with a resolution of 1 m 
by Ervin Ruci

At: FOSDEM 2019
https://video.fosdem.org/2019/AW1.126/geo_3geonames.webm


Encoding geographic coordinates into a string is a trivial thing. Yet, there are many grid based systems (geohash, PlusCodes, Mapcodes), and some even turn the thing into a business (Zippr, What3Words). I agree with the commonly stated motivation that Latitude and Longitude are not sufficient for identifying a place in both an unambiguous and human friendly way. A single string for this pair of numbers is a better representation, if only it can preserve all the information contained in the original latitude,longitude pair, something no existing geo-encoding system does. That's my goal. Geocode is a one-dimensional location code. It uses a simple space-filling technique to map a two dimensional point (latitude,longitude) to either an alphanumeric string or a geoname triple with no loss of information. It is a one-to-one mapping (no two geocodes map to the same point and no two points map to the same geocode). 

Geocode has several advantages over similar systems. 

The alphanumeric geocode is short (10 bytes), has higher accuracy (up to 1 meters) and avoids the borderline discontinuities and many to one mappings of other one-dimensional location codes such as geohashes. 

Triple geoname codes on the other hand are more memorizable, are intuitively reprentative of the location and are composed of relatively short existing geo names (up to 8 letters). 

The first name in a triple geoname code represents the most prominent location name inside a 21,403 km² area containing the point. 

For example, 34.05223,-118.24368 (a location in Los Angeles), is encoded to EKEAJ18E08 or as three geonames: LA-GASPAR-YANSI or as a hybrid code LA-MJKQH4. Another location about 1 m away, say (34.05223,-118.24369), is EKEAJ18E1D or LA-GASPAR-HINGWEN or LA-MJKQI9. 

The human readable algorithm uses 146300 geonames from http://geonames.org and http://geonames.nga.mil/gns/html/gis_countryfiles.html with several requirements for the names (chosen to be recognizable, short, easy to pronounce, distinct from each other and evenly spread throughout the earth.) We also shorten geonames to their acronyms whenever possible (LA → Los Angeles, NY → New York, etc) 

Unlike many grid-based location codes, geocodes represent points not areas. Each geocode maps to a latitude,longitude pair with accuracy up to the 5th decimal point (i.e. 1 meter) 

In a nutshell, latitude,longitude values are represented as two linear curves, converted to binary numbers then combined by interleaving their bits. As a result of this technique, similar geocodes are located geographically close together in both alphanumeric and triple geoname formats. 

A geolocation expressed as (latitude,longitude) can be converted offline into a geocode, and vice versa using a data structure embeded in the software. 

The software is in the public domain to be used without any restrictions. 

Room: AW1.126
Scheduled start: 2019-02-03 09:45:00+01
Captions: 
	00:00:04,680 --> 00:00:10,809
four so I've been added for a long time

00:00:07,899 --> 00:00:13,959
and what you see in the right hand of

00:00:10,809 --> 00:00:15,879
the screen is what he would call three

00:00:13,959 --> 00:00:19,119
different ways to represent a location

00:00:15,879 --> 00:00:21,220
the one at the very bottom is full

00:00:19,119 --> 00:00:23,260
address of where we are right now and

00:00:21,220 --> 00:00:27,000
the one above it is another plate and

00:00:23,260 --> 00:00:29,289
longitude and then a number an integer

00:00:27,000 --> 00:00:31,990
which can be converted to a latitude

00:00:29,289 --> 00:00:33,149
longitude or three words or three in

00:00:31,990 --> 00:00:37,559
geonames

00:00:33,149 --> 00:00:37,559
so let's talk a bit about

00:00:45,040 --> 00:00:53,590
location codes these probably as you

00:00:49,970 --> 00:00:55,790
know many ways of representing location

00:00:53,590 --> 00:00:59,960
not just with knowledge didn't know too

00:00:55,790 --> 00:01:02,860
but is the very famous geohash algorithm

00:00:59,960 --> 00:01:05,840
for example that is used by a lot of

00:01:02,860 --> 00:01:07,970
people in the open community this map

00:01:05,840 --> 00:01:10,250
causes plus cause the Google version of

00:01:07,970 --> 00:01:14,710
that which is now integrated with Google

00:01:10,250 --> 00:01:18,310
Maps bothers some commercial some trick

00:01:14,710 --> 00:01:21,050
let's try to address this very problem

00:01:18,310 --> 00:01:24,190
so let's step back a moment and see what

00:01:21,050 --> 00:01:29,950
is another scope is the ways we have

00:01:24,190 --> 00:01:34,429
come up with to talk about locations so

00:01:29,950 --> 00:01:36,710
we have created them in the sense we

00:01:34,429 --> 00:01:37,280
just need a way to communicate to other

00:01:36,710 --> 00:01:41,690
people

00:01:37,280 --> 00:01:44,960
where we are so here is where we are

00:01:41,690 --> 00:01:46,789
right now and as you see the problem

00:01:44,960 --> 00:01:50,950
here is that there is many permutations

00:01:46,789 --> 00:01:53,960
of how we can represent the location

00:01:50,950 --> 00:01:56,390
because Brussels of course is a believer

00:01:53,960 --> 00:02:00,189
drilling rule city and that problem

00:01:56,390 --> 00:02:03,500
exists in many other places so people

00:02:00,189 --> 00:02:06,770
who build location systems point out

00:02:03,500 --> 00:02:16,549
this very problem that we cannot just

00:02:06,770 --> 00:02:19,269
rely on addressing systems and one of

00:02:16,549 --> 00:02:24,830
the reasons that they work on this area

00:02:19,269 --> 00:02:28,610
to come up with a better solution so

00:02:24,830 --> 00:02:31,550
what I'm going to result is a hashing

00:02:28,610 --> 00:02:33,410
function for locations which takes into

00:02:31,550 --> 00:02:38,060
account not just latitude and longitude

00:02:33,410 --> 00:02:40,730
but also the existing geographical

00:02:38,060 --> 00:02:42,770
information about the place so it's just

00:02:40,730 --> 00:02:45,890
a function of latitude longitude plus

00:02:42,770 --> 00:02:49,220
video names which will give us a new

00:02:45,890 --> 00:02:55,270
code let's call it G report I guess

00:02:49,220 --> 00:03:00,430
nobody else's use that name yet so so

00:02:55,270 --> 00:03:03,520
what are they use cases as you know now

00:03:00,430 --> 00:03:06,650
automated vehicles are coming along and

00:03:03,520 --> 00:03:09,380
pretty soon we'll need to do voice

00:03:06,650 --> 00:03:11,240
geocoding systems so basically we need

00:03:09,380 --> 00:03:13,760
to shout the location across the hall or

00:03:11,240 --> 00:03:17,990
something like that so we need to have a

00:03:13,760 --> 00:03:23,570
geocoding system there is unambiguous

00:03:17,990 --> 00:03:26,180
and can be communicated by Audi there is

00:03:23,570 --> 00:03:27,920
also the problem of call systems there

00:03:26,180 --> 00:03:30,440
is some countries with good postcode

00:03:27,920 --> 00:03:33,170
systems others don't have postal systems

00:03:30,440 --> 00:03:35,360
but even those that do and in the area

00:03:33,170 --> 00:03:37,580
where I'm from Canada for example it

00:03:35,360 --> 00:03:38,690
happens that sometimes emergency

00:03:37,580 --> 00:03:41,300
services go to the wrong location

00:03:38,690 --> 00:03:43,670
because of the ambiguity in the state

00:03:41,300 --> 00:03:46,370
names here was a if you click on the

00:03:43,670 --> 00:03:48,050
link there was a story recently about

00:03:46,370 --> 00:03:51,260
the firefighters going to the wrong

00:03:48,050 --> 00:03:54,320
house and two poor dogs and a cat dying

00:03:51,260 --> 00:03:55,400
as a result because Google Maps sent

00:03:54,320 --> 00:03:57,760
them to the wrong location

00:03:55,400 --> 00:04:00,980
and this happens with high frequency

00:03:57,760 --> 00:04:02,990
high frequency I'll say 90% of the time

00:04:00,980 --> 00:04:05,780
they could be accurate but the 10% of

00:04:02,990 --> 00:04:08,570
the time is very high post and there's

00:04:05,780 --> 00:04:11,020
also indoor navigation problems that

00:04:08,570 --> 00:04:14,750
need to be solved and they can also be

00:04:11,020 --> 00:04:17,870
either by figuring out a way to name

00:04:14,750 --> 00:04:18,799
location let's say inside the mall by

00:04:17,870 --> 00:04:21,289
using the name

00:04:18,799 --> 00:04:25,759
of the stores and you know in the more

00:04:21,289 --> 00:04:30,860
limited human friendly way so what is my

00:04:25,759 --> 00:04:33,500
system main attributes now well it has

00:04:30,860 --> 00:04:36,009
to be free there is a couple of system

00:04:33,500 --> 00:04:38,960
that are not free as you will know and

00:04:36,009 --> 00:04:41,419
they rely mostly on the marketing to get

00:04:38,960 --> 00:04:43,639
these systems into wide adoption and

00:04:41,419 --> 00:04:45,319
Google being in the dominant position of

00:04:43,639 --> 00:04:50,720
course they can just integrate it with

00:04:45,319 --> 00:04:53,120
Google Maps and say ok but the system

00:04:50,720 --> 00:04:55,310
has to be free down the road only in

00:04:53,120 --> 00:04:58,669
such a system will get why the wide use

00:04:55,310 --> 00:05:01,550
without any marketing effort and it has

00:04:58,669 --> 00:05:06,020
to be short obviously we need to be able

00:05:01,550 --> 00:05:08,690
to find the optimal location code it has

00:05:06,020 --> 00:05:12,620
to preserve the latitude and longitude

00:05:08,690 --> 00:05:17,949
special information so we're basically

00:05:12,620 --> 00:05:21,050
mapping 2d points into one dimension and

00:05:17,949 --> 00:05:25,009
it has to be somewhat memorizing for

00:05:21,050 --> 00:05:27,590
people to use them and it has to be

00:05:25,009 --> 00:05:30,169
unique which is a feature many systems

00:05:27,590 --> 00:05:33,979
don't have even the popular geohash

00:05:30,169 --> 00:05:36,590
function doesn't have this and that's

00:05:33,979 --> 00:05:39,259
that no missus has to be able to be

00:05:36,590 --> 00:05:42,949
generated offline without internet

00:05:39,259 --> 00:05:45,020
access and without the database so at

00:05:42,949 --> 00:05:46,669
least this is my main requirement like

00:05:45,020 --> 00:05:52,370
there are a few others but we'll go to

00:05:46,669 --> 00:05:54,409
that later so as far as free you can

00:05:52,370 --> 00:05:57,860
just go and get hub and download the

00:05:54,409 --> 00:05:58,750
source code and the word least list over

00:05:57,860 --> 00:06:03,590
there

00:05:58,750 --> 00:06:06,409
and as far as sharp you can search

00:06:03,590 --> 00:06:09,020
myself of course not into the multitude

00:06:06,409 --> 00:06:10,789
is not very long however it's hard to

00:06:09,020 --> 00:06:15,889
remember because they seem like a bunch

00:06:10,789 --> 00:06:22,580
of random numbers if you click on this

00:06:15,889 --> 00:06:25,520
one okay so I'm dissing API stole API

00:06:22,580 --> 00:06:27,150
feed you name the world and you just

00:06:25,520 --> 00:06:29,460
basically give it a lot into the

00:06:27,150 --> 00:06:31,320
attitude and it gives you all this

00:06:29,460 --> 00:06:36,180
information so it's basically the poor

00:06:31,320 --> 00:06:38,900
man's reverse geocoding engine so you

00:06:36,180 --> 00:06:51,750
can either represent this location as

00:06:38,900 --> 00:06:53,910
shui and in this arrangement of every

00:06:51,750 --> 00:06:57,090
location the first word the first name

00:06:53,910 --> 00:06:59,190
is always representative of the place so

00:06:57,090 --> 00:07:01,860
we are in Brussels that's why that is

00:06:59,190 --> 00:07:04,820
the first one the other two though are

00:07:01,860 --> 00:07:14,790
not related to the location in question

00:07:04,820 --> 00:07:18,110
and let's go back and I have build also

00:07:14,790 --> 00:07:20,910
like an acronym acronym eyes extension

00:07:18,110 --> 00:07:23,640
which takes these geonames

00:07:20,910 --> 00:07:30,030
and shortage them further I'm having her

00:07:23,640 --> 00:07:32,430
temperature so basically Los Angeles is

00:07:30,030 --> 00:07:36,030
shortened to LA as people intuitively

00:07:32,430 --> 00:07:37,590
know or Brussels is to be are you so

00:07:36,030 --> 00:07:39,630
it's just another layer on top of the

00:07:37,590 --> 00:07:50,070
system that you can use to even to make

00:07:39,630 --> 00:07:53,550
the location names even shorter and as

00:07:50,070 --> 00:07:57,180
far as special locality goes obviously

00:07:53,550 --> 00:08:02,390
as like I said in the three geo name

00:07:57,180 --> 00:08:02,390
version they always share the first word

00:08:02,870 --> 00:08:08,340
let's say this place is close to Halifax

00:08:05,930 --> 00:08:10,800
so Halifax would be the first one but

00:08:08,340 --> 00:08:13,860
the other two are quasi random in order

00:08:10,800 --> 00:08:16,230
to enable us to avoid errors in

00:08:13,860 --> 00:08:18,390
transmission in the transmission of the

00:08:16,230 --> 00:08:19,530
locations but as you can see equivalent

00:08:18,390 --> 00:08:22,080
Jo codes of these are completely

00:08:19,530 --> 00:08:24,770
different of this point at that point

00:08:22,080 --> 00:08:28,650
although they are only one meter apart

00:08:24,770 --> 00:08:32,370
so a special locality has to take care

00:08:28,650 --> 00:08:34,620
of this also if you were going to use

00:08:32,370 --> 00:08:36,900
like a long code like this it will share

00:08:34,620 --> 00:08:38,890
most of the significant digits or if

00:08:36,900 --> 00:08:42,130
you're going to build

00:08:38,890 --> 00:08:47,710
three named code then it has to share

00:08:42,130 --> 00:08:50,380
the first word now as far as memorize

00:08:47,710 --> 00:08:53,500
about that's debatable well as to what

00:08:50,380 --> 00:08:58,570
people can remember easily I find it

00:08:53,500 --> 00:09:02,050
easier to remember this Brussels will

00:08:58,570 --> 00:09:04,510
try this as as I can remember this one

00:09:02,050 --> 00:09:10,870
that is the Google Plus code equivalent

00:09:04,510 --> 00:09:15,130
of that or this is the three what three

00:09:10,870 --> 00:09:22,420
word version of that and this is the the

00:09:15,130 --> 00:09:25,270
geohash yes as far as unique it has to

00:09:22,420 --> 00:09:27,040
be unique both ways and as you know this

00:09:25,270 --> 00:09:31,570
is another problem with the popular

00:09:27,040 --> 00:09:33,640
geohash algorithm because geohashes such

00:09:31,570 --> 00:09:36,790
as this and that they all they all

00:09:33,640 --> 00:09:39,490
decode to the same point which is this

00:09:36,790 --> 00:09:45,520
one here so we have to avoid this

00:09:39,490 --> 00:09:47,980
problem moving forward deterministically

00:09:45,520 --> 00:09:51,360
speaking there you can just get the code

00:09:47,980 --> 00:09:56,110
this written in Perl is saucy pan and

00:09:51,360 --> 00:09:57,580
you use it in that way you just embed it

00:09:56,110 --> 00:10:00,190
in your system and you don't need a

00:09:57,580 --> 00:10:02,110
database or anything else just install

00:10:00,190 --> 00:10:08,050
it on your laptop and you're good to go

00:10:02,110 --> 00:10:11,860
and like I said I have an API I think I

00:10:08,050 --> 00:10:16,510
click through to it so the API is free

00:10:11,860 --> 00:10:19,720
and it runs on well there is a little

00:10:16,510 --> 00:10:21,880
bit of documentation not much but this

00:10:19,720 --> 00:10:25,060
is very simple so why why go any further

00:10:21,880 --> 00:10:27,370
into detail the API is free is running

00:10:25,060 --> 00:10:31,150
on a micro instance on Amazon so it

00:10:27,370 --> 00:10:33,280
doesn't cost me anything for a year as

00:10:31,150 --> 00:10:39,580
you know Amazon has these nice specials

00:10:33,280 --> 00:10:41,530
about 1 gigabyte memory and one CPU but

00:10:39,580 --> 00:10:43,180
it can only handle about a hundred

00:10:41,530 --> 00:10:46,360
requests per second if you do more than

00:10:43,180 --> 00:10:49,090
might crash the server so if you are so

00:10:46,360 --> 00:10:52,019
inclined you can also get your own

00:10:49,090 --> 00:10:54,360
server on Amazon because there is a

00:10:52,019 --> 00:10:58,649
it's there that you can launch your own

00:10:54,360 --> 00:11:03,899
machine with over there and it looks

00:10:58,649 --> 00:11:07,559
kind of like this and as far as cloud

00:11:03,899 --> 00:11:10,199
performance like I said it could do 100

00:11:07,559 --> 00:11:12,869
to 200 but it depends and I'll get into

00:11:10,199 --> 00:11:15,420
a little bit why this difference in the

00:11:12,869 --> 00:11:17,429
performance it depends on the point

00:11:15,420 --> 00:11:20,009
sometimes if you have a point that is

00:11:17,429 --> 00:11:21,779
like in the middle of Brussels is faster

00:11:20,009 --> 00:11:26,429
to reverse recorded and a point that is

00:11:21,779 --> 00:11:28,739
in the borders and I don't want to go

00:11:26,429 --> 00:11:31,379
too much into the algorithm but the

00:11:28,739 --> 00:11:36,410
algorithm is just relying on

00:11:31,379 --> 00:11:38,819
partitioning the earth into a grid and

00:11:36,410 --> 00:11:42,929
the users skip list data structure to

00:11:38,819 --> 00:11:44,579
name each one so for example you can

00:11:42,929 --> 00:11:46,170
shorter them you let's call them geo

00:11:44,579 --> 00:11:47,819
polygons and this is the location

00:11:46,170 --> 00:11:48,569
somewhere in the Pacific close to the

00:11:47,819 --> 00:11:51,869
100 Nate's

00:11:48,569 --> 00:11:53,629
Meridian and you will get pull a simple

00:11:51,869 --> 00:11:57,540
polygons such as this one of about

00:11:53,629 --> 00:12:00,299
21,000 square kilometers and you can

00:11:57,540 --> 00:12:01,639
shorten it further and you get something

00:12:00,299 --> 00:12:05,339
like this

00:12:01,639 --> 00:12:07,829
so unlike many systems that I've seen

00:12:05,339 --> 00:12:11,129
these polygons are not in the sense

00:12:07,829 --> 00:12:14,040
squares or pentagons for Excel goals or

00:12:11,129 --> 00:12:16,730
whatever that kind of the way the

00:12:14,040 --> 00:12:20,879
mathematical function that guides their

00:12:16,730 --> 00:12:23,939
their generation it just come makes it

00:12:20,879 --> 00:12:26,819
so that it's simple polygons if you have

00:12:23,939 --> 00:12:29,670
only one word it's a convex polygon if

00:12:26,819 --> 00:12:32,490
you have two words otherwise and in the

00:12:29,670 --> 00:12:34,889
last stage is just one meter by one

00:12:32,490 --> 00:12:39,389
meter square so it's a resolution of one

00:12:34,889 --> 00:12:42,119
meter and this is where we are right now

00:12:39,389 --> 00:12:44,970
and this is one of the problems with

00:12:42,119 --> 00:12:47,490
this naming system these locations

00:12:44,970 --> 00:12:50,939
there's a place in Tirana where I'm from

00:12:47,490 --> 00:12:53,939
Albania is called crap so you will have

00:12:50,939 --> 00:13:01,259
a location called bracts Brussels or

00:12:53,939 --> 00:13:05,540
crap and is that there however what can

00:13:01,259 --> 00:13:05,540
we do about dirty words they exist

00:13:05,570 --> 00:13:09,990
that's why this is open-source and if

00:13:07,950 --> 00:13:12,510
you don't like these words these names

00:13:09,990 --> 00:13:15,660
you can replace them with your own I

00:13:12,510 --> 00:13:17,250
just came up with this for a very good

00:13:15,660 --> 00:13:19,500
reason because I want the names to be

00:13:17,250 --> 00:13:21,330
distinct from each other to have good

00:13:19,500 --> 00:13:22,560
levenshtein distance so when we shout

00:13:21,330 --> 00:13:27,690
them across the hall they are not

00:13:22,560 --> 00:13:30,690
mistaken for a different name but people

00:13:27,690 --> 00:13:33,230
are free to to tinker with it there are

00:13:30,690 --> 00:13:38,370
some considerations there is a lot of

00:13:33,230 --> 00:13:40,110
there is 658 almost 650 9 trillion

00:13:38,370 --> 00:13:43,020
latitude and longitude points if you

00:13:40,110 --> 00:13:45,060
limit them to the fifth decimal point

00:13:43,020 --> 00:13:49,350
which accounts for one meter of

00:13:45,060 --> 00:13:54,990
resolution so you need around 150,000

00:13:49,350 --> 00:13:58,140
geonames to get the system to work like

00:13:54,990 --> 00:14:00,270
I said I have two versions of the code

00:13:58,140 --> 00:14:02,070
one is that one meter and one is at 10

00:14:00,270 --> 00:14:04,620
meters and I will get to it very quickly

00:14:02,070 --> 00:14:06,870
why I do that

00:14:04,620 --> 00:14:08,940
see when I do the reverse geocoding I

00:14:06,870 --> 00:14:10,350
need to have like overlapping polygons

00:14:08,940 --> 00:14:14,610
to make sure that something on the

00:14:10,350 --> 00:14:16,530
border doesn't get miss characterized so

00:14:14,610 --> 00:14:19,380
that's why I have two systems laying on

00:14:16,530 --> 00:14:26,850
top of each other to solve this problem

00:14:19,380 --> 00:14:28,100
and I my name my main goal for building

00:14:26,850 --> 00:14:30,780
the system in the first place is not

00:14:28,100 --> 00:14:33,570
location encoding per se I don't really

00:14:30,780 --> 00:14:35,790
care much about building a geohash but I

00:14:33,570 --> 00:14:38,670
wanted to build a faster reverse

00:14:35,790 --> 00:14:40,470
geocoding algorithm so pointing polygon

00:14:38,670 --> 00:14:43,770
queries are very fast when you use

00:14:40,470 --> 00:14:46,890
number ranges let's say from that number

00:14:43,770 --> 00:14:48,630
to that number is the numbers that

00:14:46,890 --> 00:14:51,630
represent all the locations inside

00:14:48,630 --> 00:14:54,420
Brussels so when you are looking at it

00:14:51,630 --> 00:14:58,980
you can have a constant expected time

00:14:54,420 --> 00:15:01,200
complexity which is 90% of the times but

00:14:58,980 --> 00:15:02,760
if you are close to the edges then you

00:15:01,200 --> 00:15:05,910
probably in the worst case you go to

00:15:02,760 --> 00:15:08,640
logarithmic time complexity which is

00:15:05,910 --> 00:15:10,260
acceptable but this way you get a much

00:15:08,640 --> 00:15:13,310
faster reverse geo coder than if you

00:15:10,260 --> 00:15:13,310
were to use some other technique

00:15:14,760 --> 00:15:24,370
just a quick recap there are two two

00:15:22,900 --> 00:15:26,440
different codes that have come up with

00:15:24,370 --> 00:15:29,020
one is called the three geonames they'll

00:15:26,440 --> 00:15:31,630
do based on your names they open they're

00:15:29,020 --> 00:15:37,380
free and I don't think anybody can

00:15:31,630 --> 00:15:41,260
copyright that like and there it is the

00:15:37,380 --> 00:15:44,770
the second option which is one Jian name

00:15:41,260 --> 00:15:48,070
and then alphanumeric string no longer

00:15:44,770 --> 00:15:52,630
than five digits that represents a 10 by

00:15:48,070 --> 00:15:55,450
10 meter cell as far as navigation the

00:15:52,630 --> 00:15:57,610
second one would be working just fine as

00:15:55,450 --> 00:15:59,530
well but people want the highest

00:15:57,610 --> 00:16:04,960
resolution and one meter by one meter is

00:15:59,530 --> 00:16:07,480
I think more than sufficient there is

00:16:04,960 --> 00:16:13,180
some other attributes of course this

00:16:07,480 --> 00:16:16,060
uses the hilbert curve for obtaining

00:16:13,180 --> 00:16:18,090
best location proximity and it's really

00:16:16,060 --> 00:16:21,130
fast because we're just flipping bits

00:16:18,090 --> 00:16:23,080
and there is a combination that I use a

00:16:21,130 --> 00:16:29,350
Hilbert curve with the zero order curve

00:16:23,080 --> 00:16:30,850
to get this overlapping this overlapping

00:16:29,350 --> 00:16:34,360
arrangement and there are no

00:16:30,850 --> 00:16:37,260
discontinuities even at 180 Meridian as

00:16:34,360 --> 00:16:39,490
you can if you can go to the website

00:16:37,260 --> 00:16:41,320
maybe if I have time I don't know how

00:16:39,490 --> 00:16:44,110
much time I have I can give you a quick

00:16:41,320 --> 00:16:48,790
demo okay I have another 15 minutes

00:16:44,110 --> 00:16:50,920
which is great so basically you can

00:16:48,790 --> 00:16:56,680
solve this problem on the on the date

00:16:50,920 --> 00:17:00,610
line and this extendable now the process

00:16:56,680 --> 00:17:03,550
is mostly CPU intensive so so if you go

00:17:00,610 --> 00:17:05,860
in and use the minimal instance it will

00:17:03,550 --> 00:17:08,850
work fine but you can you can scale up

00:17:05,860 --> 00:17:13,630
to 200 million points a day on 24 cores

00:17:08,850 --> 00:17:15,550
so memory is a factor to the data comes

00:17:13,630 --> 00:17:17,709
from open places like geonames and open

00:17:15,550 --> 00:17:19,690
state map and there is 12 million of

00:17:17,709 --> 00:17:23,079
them but you can easily fit that into

00:17:19,690 --> 00:17:24,699
one gigabyte of ram no problem and even

00:17:23,079 --> 00:17:27,100
if you grow the ram it will not make a

00:17:24,699 --> 00:17:33,940
difference but cpu is important too

00:17:27,100 --> 00:17:36,190
to get more throughput on this system so

00:17:33,940 --> 00:17:40,809
there are some to dues I haven't gotten

00:17:36,190 --> 00:17:43,000
around to to other languages it is

00:17:40,809 --> 00:17:45,490
possible I thought about doing it before

00:17:43,000 --> 00:17:48,850
I came to this presentation to just get

00:17:45,490 --> 00:17:52,900
the Geo names other alternate names

00:17:48,850 --> 00:17:55,840
field and to just produce a couple of

00:17:52,900 --> 00:17:57,429
options but I'll let other people tackle

00:17:55,840 --> 00:18:01,240
the problem you say if they feel so

00:17:57,429 --> 00:18:05,890
inclined and as far as error correction

00:18:01,240 --> 00:18:08,530
you could also what I've built this see

00:18:05,890 --> 00:18:13,840
each of these 150,000 words has a

00:18:08,530 --> 00:18:16,630
certain edit distance both out on audios

00:18:13,840 --> 00:18:18,970
in the audio sense and in the carcasses

00:18:16,630 --> 00:18:21,730
from from each other every other ones

00:18:18,970 --> 00:18:24,549
so basically I've picked my geonames

00:18:21,730 --> 00:18:26,230
carefully to to have them as distant as

00:18:24,549 --> 00:18:28,240
possible but you can modify this

00:18:26,230 --> 00:18:33,280
algorithm to get them even more distance

00:18:28,240 --> 00:18:35,289
from each other but bear in mind that in

00:18:33,280 --> 00:18:37,260
order to keep the words short you have

00:18:35,289 --> 00:18:39,760
to put up with a distance of one

00:18:37,260 --> 00:18:41,440
otherwise you'll end up with long words

00:18:39,760 --> 00:18:43,570
if you want to get longer and longer

00:18:41,440 --> 00:18:46,179
distances and these things to be more

00:18:43,570 --> 00:18:52,570
and more distinct for each other alright

00:18:46,179 --> 00:18:54,039
so I still believe that knack encoding

00:18:52,570 --> 00:18:57,039
geographic coordinates

00:18:54,039 --> 00:19:01,450
it's very trivial I mean come on just

00:18:57,039 --> 00:19:03,760
have you seen this movie the hudsucker

00:19:01,450 --> 00:19:07,299
proxy is one of my favorite movies him

00:19:03,760 --> 00:19:09,010
and this guy here is just came out of

00:19:07,299 --> 00:19:13,299
business school and he said look I've

00:19:09,010 --> 00:19:15,010
invented the circle and and it became a

00:19:13,299 --> 00:19:19,630
instant commercial hit because he

00:19:15,010 --> 00:19:21,190
invented the hula hoop and it's trivial

00:19:19,630 --> 00:19:23,950
right but there is many companies that

00:19:21,190 --> 00:19:26,140
are building business models around this

00:19:23,950 --> 00:19:28,210
and a lot of people in the OpenStreetMap

00:19:26,140 --> 00:19:30,570
community for example are really annoyed

00:19:28,210 --> 00:19:32,940
with companies like open

00:19:30,570 --> 00:19:35,100
like what rewards or zipper who are

00:19:32,940 --> 00:19:38,310
trying to copyright word lists and

00:19:35,100 --> 00:19:41,730
getting people to use their system to to

00:19:38,310 --> 00:19:44,310
find that it not good but I don't have

00:19:41,730 --> 00:19:47,840
to be mad about that just try to make it

00:19:44,310 --> 00:19:51,270
better and try to make it work and

00:19:47,840 --> 00:19:54,960
improve improve of those on both things

00:19:51,270 --> 00:19:57,720
and they all have further ado I think I

00:19:54,960 --> 00:20:03,710
have a few minutes and just before I go

00:19:57,720 --> 00:20:03,710
to questions there is a website I put up

00:20:03,770 --> 00:20:10,320
well it defaults to that but I should

00:20:06,600 --> 00:20:15,630
come back to where we are so let's say

00:20:10,320 --> 00:20:21,150
you can this is not a reverse geo coder

00:20:15,630 --> 00:20:28,200
and jerk coding system sorry I clicked

00:20:21,150 --> 00:20:32,400
on one so basically you get that you get

00:20:28,200 --> 00:20:35,780
these Brussels ah Lanco at least it's

00:20:32,400 --> 00:20:39,470
not crap well crap is the next meter off

00:20:35,780 --> 00:20:42,530
so if I if I was like sitting

00:20:39,470 --> 00:20:45,480
how do location works on this thing but

00:20:42,530 --> 00:20:48,210
you know what I mean and and there are

00:20:45,480 --> 00:20:50,010
3-3 options you can either represent it

00:20:48,210 --> 00:20:53,970
like this or it's a string and from a

00:20:50,010 --> 00:20:57,360
extreme or as both a name and a little

00:20:53,970 --> 00:21:01,200
thing at the end of that and of course

00:20:57,360 --> 00:21:06,300
you can also go to the API and check it

00:21:01,200 --> 00:21:09,750
out over there so that's pretty much

00:21:06,300 --> 00:21:13,290
what I have to say just go and one more

00:21:09,750 --> 00:21:18,390
thing when you go to do this you can

00:21:13,290 --> 00:21:21,660
also use instead of not eating a

00:21:18,390 --> 00:21:25,970
longitude you can also use like the

00:21:21,660 --> 00:21:30,260
number of that location whoops oh wait

00:21:25,970 --> 00:21:33,260
I'm trying to copy and paste this thing

00:21:30,260 --> 00:21:33,260
alright

00:21:35,110 --> 00:21:45,710
not having a luck I forgot how to copy

00:21:38,870 --> 00:21:49,670
and paste all right go so if you had a

00:21:45,710 --> 00:21:51,800
dot Jason in the end especially many

00:21:49,670 --> 00:21:58,790
JavaScript programmers like this they

00:21:51,800 --> 00:22:05,720
just got that and or you can put the the

00:21:58,790 --> 00:22:13,160
three geo name version here like this

00:22:05,720 --> 00:22:15,740
and it's the same thing so that's it for

00:22:13,160 --> 00:22:18,130
now let me know if you have any more

00:22:15,740 --> 00:22:18,130
questions

00:22:18,780 --> 00:22:24,780
[Applause]

00:22:35,510 --> 00:22:41,510
yeah of course that's the underlying

00:22:38,020 --> 00:22:43,070
well it's a function that transfers

00:22:41,510 --> 00:22:45,200
latitude and longitude to a single

00:22:43,070 --> 00:22:49,910
number so it's basically using the

00:22:45,200 --> 00:22:52,310
Hilbert curve to have this numbers

00:22:49,910 --> 00:22:54,200
sequential so let's say two latitude

00:22:52,310 --> 00:22:56,690
authorities that are close together here

00:22:54,200 --> 00:22:59,300
and the chair over there would have very

00:22:56,690 --> 00:23:08,720
close to your numbers like different by

00:22:59,300 --> 00:23:10,640
one number or two it's part of the

00:23:08,720 --> 00:23:11,840
episodes yeah yeah I mean little bit

00:23:10,640 --> 00:23:13,760
curve is also there's other

00:23:11,840 --> 00:23:17,320
implementations of the other curve that

00:23:13,760 --> 00:23:17,320
could do exactly the same thing

00:23:25,070 --> 00:23:32,490
why do I want a unique I don't know I

00:23:30,110 --> 00:23:35,280
thought it would be right as a

00:23:32,490 --> 00:23:37,950
mathematician I think one-to-one

00:23:35,280 --> 00:23:39,929
functions are better than things that

00:23:37,950 --> 00:23:42,480
are less predictable than that that I

00:23:39,929 --> 00:23:46,230
want to be able to say that and exactly

00:23:42,480 --> 00:23:48,600
this unique code they're supposed to I

00:23:46,230 --> 00:23:52,919
could be at this or that those are the

00:23:48,600 --> 00:23:55,140
ones I thought it would be a good

00:23:52,919 --> 00:23:57,030
requirement maybe it's not I don't know

00:23:55,140 --> 00:24:09,929
you can remove that requirement if you

00:23:57,030 --> 00:24:14,880
like sorry oh yes I can probably show

00:24:09,929 --> 00:24:17,370
you see geocoded X Y Z it's a reverse

00:24:14,880 --> 00:24:22,789
geo coder basically this is why I build

00:24:17,370 --> 00:24:26,940
it so right now if I go to CloudFlare

00:24:22,789 --> 00:24:35,580
this is about well no not this one there

00:24:26,940 --> 00:24:39,470
is about for some reason it's not I'm

00:24:35,580 --> 00:24:44,940
not but this is about a hundred million

00:24:39,470 --> 00:24:46,950
requests for four months on this API but

00:24:44,940 --> 00:24:48,450
people don't usually use it for the geo

00:24:46,950 --> 00:24:51,510
code themselves they just want to use a

00:24:48,450 --> 00:24:54,710
reverse geocoding engine for for fleet

00:24:51,510 --> 00:24:54,710
tracking for things like that

00:24:56,340 --> 00:24:59,580
the same

00:25:13,570 --> 00:25:19,390
yeah I think the the geohash 36

00:25:16,760 --> 00:25:22,040
algorithm has a feature that they do

00:25:19,390 --> 00:25:24,110
elevation as well I have looked into it

00:25:22,040 --> 00:25:26,570
it's easy to add it to this one but I'll

00:25:24,110 --> 00:25:29,140
need to have another bite to the length

00:25:26,570 --> 00:25:35,060
of the code to be able to encode

00:25:29,140 --> 00:25:37,810
elevation as well that is very important

00:25:35,060 --> 00:25:41,120
especially people you do don't delivery

00:25:37,810 --> 00:25:42,980
they want to have this feature embedded

00:25:41,120 --> 00:25:46,280
into that so they can also encode the

00:25:42,980 --> 00:25:48,050
elevation as well as latitude it's

00:25:46,280 --> 00:25:51,410
totally possible like the Hilbert curve

00:25:48,050 --> 00:25:54,200
was built not just to transfer to

00:25:51,410 --> 00:25:57,680
dimension into one dimension to one

00:25:54,200 --> 00:26:00,970
dimensions in the same easy way just a

00:25:57,680 --> 00:26:00,970
number would be a little bit

00:26:20,499 --> 00:26:25,489
no hilbert curve is much better than the

00:26:23,389 --> 00:26:29,539
zero order curve which is about the

00:26:25,489 --> 00:26:30,919
geohash algorithm uses z0 broker is much

00:26:29,539 --> 00:26:33,319
easier because you're just interleaving

00:26:30,919 --> 00:26:34,969
the bits and it's simpler to implement

00:26:33,319 --> 00:26:36,819
the Gilbert is a little bit more

00:26:34,969 --> 00:26:41,079
complicated but it does preserve

00:26:36,819 --> 00:26:41,079
location proximity much better than that

00:26:41,409 --> 00:26:47,359
what hilbert is better than piano code

00:26:44,299 --> 00:26:48,709
right because Hilbert was based on piano

00:26:47,359 --> 00:26:52,429
course it was an improvement over that

00:26:48,709 --> 00:26:55,159
but from what I've seen and I used two

00:26:52,429 --> 00:26:56,989
different and I use both the order and

00:26:55,159 --> 00:26:59,059
hilbert curve on top of each other so

00:26:56,989 --> 00:27:00,949
when there are some things that are bad

00:26:59,059 --> 00:27:03,649
on one of them I corrected by the other

00:27:00,949 --> 00:27:05,599
one so as far as reverse geocoding goes

00:27:03,649 --> 00:27:10,419
I don't think I'll miss anything by

00:27:05,599 --> 00:27:10,419
using them both super important charm

00:27:16,680 --> 00:27:20,780
they're being said with

00:27:23,539 --> 00:27:50,299
oh I see see I haven't really bothered

00:27:44,509 --> 00:27:54,200
much with with taking into account a

00:27:50,299 --> 00:27:55,909
temporary temporal displacement like me

00:27:54,200 --> 00:27:57,649
basically I just get a latitude and

00:27:55,909 --> 00:28:00,710
longitude and convert it to a number and

00:27:57,649 --> 00:28:03,349
that number into a code you know there

00:28:00,710 --> 00:28:07,849
is Australia is moving with one meter

00:28:03,349 --> 00:28:10,999
what means one meter in 10 years or so I

00:28:07,849 --> 00:28:13,609
don't deal with that like as the

00:28:10,999 --> 00:28:15,499
latitude and longitude will move with

00:28:13,609 --> 00:28:19,690
Australia so you will be a different

00:28:15,499 --> 00:28:19,690
code in the fingers from now but

00:28:36,190 --> 00:28:56,290
yeah yeah it's always like that for

00:28:38,750 --> 00:28:57,710
example this is a very good question and

00:28:56,290 --> 00:29:04,610
you're right

00:28:57,710 --> 00:29:08,540
the way Australia will in in about a

00:29:04,610 --> 00:29:13,550
hundred million years these will no

00:29:08,540 --> 00:29:17,030
longer be relevant because that's why

00:29:13,550 --> 00:29:19,610
somebody needs to update it because

00:29:17,030 --> 00:29:22,400
these numbers are assigned to cities as

00:29:19,610 --> 00:29:24,460
they are today and then you have the net

00:29:22,400 --> 00:29:27,460
man named Batman if you change

00:29:24,460 --> 00:29:27,460
everything

00:29:44,540 --> 00:29:47,780
mr. sorry

00:30:03,930 --> 00:30:07,079

YouTube URL: https://www.youtube.com/watch?v=3p3Mrf1KvYI


