Title: Decoding Meteor-M2: QPSK, Viterbi, Reed Solomon and JPEG from IQ coefficients to images, analysis oâ€¦
Publication date: 2019-02-08
Playlist: FOSDEM 2019
Description: 
	Decoding Meteor-M2: QPSK, Viterbi, Reed Solomon and JPEG from IQ coefficients to images, analysis of digital weather satellite transmissions
by Jean-Michel Friedt

At: FOSDEM 2019
https://video.fosdem.org/2019/AW1.120/sdr_meteorm2n.webm


A low cost, digital video broadcast-terrestrial (DVB-T) receiver is used to collect radiofrequency signals emitted from the low Earth orbiting Russian satellite Meteor-M2. The QPSK encoded signal is analyzed all the way from extracting bit values, to recovering the JPEG encoded image transmitted from the satellite. This investigation is an opportunity to experimentally assess all the layers of digital communication widely used from Deep Space communication to daily mobile phone communication, including Viterbi encoding, Reed Solomon error correction, and JPEG image display. Few members of the audience might have any interest in the details of Meteor M2 weather satellite transmissions. However, tackling the reception of this digital weather satellite opens the opportunity to address most if not all the layers of the OSI model, from the physical layer by collecting the radiofrequency signal using a cost-effective DVB-T receiver acting as a general purpose software defined radio signal source, to the data link layer with the various error correction schemes implemented to address the corruption introduced by the noisy radiofrequency communication channel (Viterbi, Reed Solomon) and the network layer with the frame encoding including telemetry and, of course, the payload as a digital picture. The latter is encoded in JPEG format, adding more abstractions with the lossy compression to be reverted to display greyscale images representative of the atmosphere and ground reflectivity in the various wavelengths monitored by Meteor M2. This decoding path matches most recent space-borne signal transmissions, as documented by the Consultative Committee for Space Data Systems (CCSDS [1]), and despite extensive documentation available online, a practical demonstration of the various decoding steps helps understanding the many documents over which the information is spread. 

[1] https://public.ccsds.org/Publications/BlueBooks.aspx 

Room: AW1.120
Scheduled start: 2019-02-03 16:00:00+01
Captions: 
	00:00:04,640 --> 00:00:12,039
okay thank you for being here for last

00:00:08,059 --> 00:00:15,110
talk so this last talk would be about

00:00:12,039 --> 00:00:17,810
decoding meteor m2 so what I would like

00:00:15,110 --> 00:00:19,280
to emphasize is assume that most people

00:00:17,810 --> 00:00:22,370
in this room don't care at all about

00:00:19,280 --> 00:00:26,150
meter and to the topic here I would like

00:00:22,370 --> 00:00:28,370
to address is to use meter and to as a

00:00:26,150 --> 00:00:30,260
reason for addressing all these

00:00:28,370 --> 00:00:32,780
fascinating topics I should emphasize

00:00:30,260 --> 00:00:34,370
I'm trying to the physicist I never been

00:00:32,780 --> 00:00:36,410
taught about any of these things here so

00:00:34,370 --> 00:00:38,240
I discovered everything by myself

00:00:36,410 --> 00:00:39,980
I found it very fascinating to be

00:00:38,240 --> 00:00:41,840
discovering all these super processing

00:00:39,980 --> 00:00:42,860
techniques that you find in the various

00:00:41,840 --> 00:00:44,630
documentation about digital

00:00:42,860 --> 00:00:47,570
communication I want to show you how

00:00:44,630 --> 00:00:49,310
getting from the raw data QPSK

00:00:47,570 --> 00:00:51,020
overweight or JPEG image as you can see

00:00:49,310 --> 00:00:53,840
here will be addressed in this talk so

00:00:51,020 --> 00:00:55,460
barton did not care to give you a talk

00:00:53,840 --> 00:01:01,730
with two semester of signal processing

00:00:55,460 --> 00:01:04,040
in 20 minutes I do so also I should

00:01:01,730 --> 00:01:05,750
emphasize if you just want to get the

00:01:04,040 --> 00:01:08,540
image you can go out of room because

00:01:05,750 --> 00:01:10,159
this metal decoder is doing a much

00:01:08,540 --> 00:01:13,040
better job at what I'm going to show you

00:01:10,159 --> 00:01:15,080
this is working very well I want to go

00:01:13,040 --> 00:01:17,600
step by step into what is going here so

00:01:15,080 --> 00:01:18,979
really for me the topic is understanding

00:01:17,600 --> 00:01:21,770
all these things not using a readily

00:01:18,979 --> 00:01:24,890
available software so that's the topic

00:01:21,770 --> 00:01:28,250
of talk so I'm lucky enough to be going

00:01:24,890 --> 00:01:31,460
every twice every week twice every year

00:01:28,250 --> 00:01:36,140
in Arctic regions for glacier monitoring

00:01:31,460 --> 00:01:38,330
and so I'm lucky enough to be following

00:01:36,140 --> 00:01:39,860
all these polar orbiting satellites so

00:01:38,330 --> 00:01:43,490
low Earth poor orbiting weather

00:01:39,860 --> 00:01:46,220
satellites including amongst the various

00:01:43,490 --> 00:01:50,119
little satellites the one from version

00:01:46,220 --> 00:01:51,590
material so why are Arctic regions most

00:01:50,119 --> 00:01:53,780
favorable for this night of monitoring

00:01:51,590 --> 00:01:56,360
when you have a solar synchronous

00:01:53,780 --> 00:01:59,240
satellites there will be in the polar

00:01:56,360 --> 00:02:01,400
orbit 98 degree so 90 degree would be

00:01:59,240 --> 00:02:03,140
right over North Pole and one of these

00:02:01,400 --> 00:02:05,659
polar orbiting satellites here I've

00:02:03,140 --> 00:02:07,400
plotted the trajectory over one day you

00:02:05,659 --> 00:02:10,429
see that when you're in Western Europe

00:02:07,400 --> 00:02:12,980
here it's been on swing friends the the

00:02:10,429 --> 00:02:14,599
green circle is the place you would be

00:02:12,980 --> 00:02:16,550
if you wanted to see the sunlight or

00:02:14,599 --> 00:02:18,410
horizon this is at an altitude of

00:02:16,550 --> 00:02:20,270
elevation of 15 degree this is

00:02:18,410 --> 00:02:21,830
at elevation of 60 degree below which I

00:02:20,270 --> 00:02:24,740
don't even bother to take my antenna out

00:02:21,830 --> 00:02:26,930
in France you will get at most one pass

00:02:24,740 --> 00:02:28,880
every day of one of these / orbiting

00:02:26,930 --> 00:02:30,680
satellites while when you go to an

00:02:28,880 --> 00:02:33,050
Arctic region where you've got all these

00:02:30,680 --> 00:02:34,550
passes so it's fascinating because when

00:02:33,050 --> 00:02:38,120
you're learning to decode a new

00:02:34,550 --> 00:02:40,190
satellite here you have like 10 10 12

00:02:38,120 --> 00:02:43,640
passes per day while here you have one

00:02:40,190 --> 00:02:45,680
at best so I'm investigating metal rim 2

00:02:43,640 --> 00:02:48,230
in this context and also using the

00:02:45,680 --> 00:02:49,220
little RTL SDR receivers because of

00:02:48,230 --> 00:02:50,720
course when you go where you're not

00:02:49,220 --> 00:02:52,460
supposed to take a big bag with full of

00:02:50,720 --> 00:02:54,170
a hardware it's not related to your

00:02:52,460 --> 00:02:56,000
research so here I can just put one of

00:02:54,170 --> 00:02:58,580
these little receivers at the bottom of

00:02:56,000 --> 00:02:59,930
my backpack just find any two wires to

00:02:58,580 --> 00:03:01,700
make a dipole until I want to arrive

00:02:59,930 --> 00:03:05,120
there and you'll have your setter for

00:03:01,700 --> 00:03:06,410
receiving metal m2 so I'm sure many of

00:03:05,120 --> 00:03:08,090
you here in the room have already

00:03:06,410 --> 00:03:10,430
listened to new AAA so the noise

00:03:08,090 --> 00:03:12,200
satellites are a dying breed because no

00:03:10,430 --> 00:03:14,840
AAA is no longer renewing their

00:03:12,200 --> 00:03:16,870
constellation of analog satellites they

00:03:14,840 --> 00:03:20,270
started in the 70s now they are at

00:03:16,870 --> 00:03:23,240
mid-may no a 19 a finger to switch will

00:03:20,270 --> 00:03:24,830
go up to 21 and then we'll stop NOAA so

00:03:23,240 --> 00:03:27,080
now we have to think about the future

00:03:24,830 --> 00:03:29,990
and the future is digital communication

00:03:27,080 --> 00:03:32,720
so digital communication is what is

00:03:29,990 --> 00:03:35,150
provided by CC STS so because the last

00:03:32,720 --> 00:03:37,210
people could not say it is consultative

00:03:35,150 --> 00:03:39,560
committee for space data systems and

00:03:37,210 --> 00:03:42,380
this is basically a body trying to

00:03:39,560 --> 00:03:44,270
standardize this communication so that's

00:03:42,380 --> 00:03:46,910
a bit of a layout of what I want to talk

00:03:44,270 --> 00:03:49,190
so when Bastion was showing you I have

00:03:46,910 --> 00:03:52,160
my JPEG picture then I have tcp/ip when

00:03:49,190 --> 00:03:54,110
I have TCP will have IP you've got all

00:03:52,160 --> 00:03:56,570
your og layers and of course when you

00:03:54,110 --> 00:03:58,190
want to decode the JPEG image on Firefox

00:03:56,570 --> 00:04:00,650
well you've got all these libraries for

00:03:58,190 --> 00:04:03,710
you and for me the exploration here was

00:04:00,650 --> 00:04:07,280
I collect this QPSK data at the output

00:04:03,710 --> 00:04:10,310
of new radio either running the RTL is

00:04:07,280 --> 00:04:12,890
your data C stream and then how do you

00:04:10,310 --> 00:04:14,930
go from this QPSK all the way to the

00:04:12,890 --> 00:04:16,880
JPEG image so for me it's a little bit

00:04:14,930 --> 00:04:18,770
like if you were trying to listen to a

00:04:16,880 --> 00:04:20,510
JPEG image being transmitted in HTML

00:04:18,770 --> 00:04:23,120
with just no zero scope connected to

00:04:20,510 --> 00:04:25,700
your internet cables and for me it's an

00:04:23,120 --> 00:04:28,550
adventure to try to get the layers one

00:04:25,700 --> 00:04:30,830
after vehicle so of course it's so you

00:04:28,550 --> 00:04:32,190
claim to be going in detail I would like

00:04:30,830 --> 00:04:33,690
to show you the outline

00:04:32,190 --> 00:04:36,060
slides will be available on the website

00:04:33,690 --> 00:04:38,670
and I hope it will make you curious

00:04:36,060 --> 00:04:40,020
about getting into all this story now

00:04:38,670 --> 00:04:42,030
you might be wondering people have been

00:04:40,020 --> 00:04:46,140
working happily with NOAA so why even

00:04:42,030 --> 00:04:48,930
bother with such a complex networking so

00:04:46,140 --> 00:04:51,990
this is a talk I saw when I was at

00:04:48,930 --> 00:04:54,420
Huntsville at Marshall Space Center from

00:04:51,990 --> 00:04:56,070
Dave Israel at the White Sea conference

00:04:54,420 --> 00:04:57,390
where he was showing you've got the

00:04:56,070 --> 00:04:59,460
International Space Station the

00:04:57,390 --> 00:05:02,130
International Space Station is flying at

00:04:59,460 --> 00:05:04,110
400 kilometer altitude and is visible if

00:05:02,130 --> 00:05:07,290
you remember my little circles on the

00:05:04,110 --> 00:05:09,150
radius of 1500 kilometers so this means

00:05:07,290 --> 00:05:11,490
you would need to put one station every

00:05:09,150 --> 00:05:13,230
1,500 kilometres along the path so this

00:05:11,490 --> 00:05:13,680
is what the Americans did for Gemini and

00:05:13,230 --> 00:05:15,540
Mercury

00:05:13,680 --> 00:05:17,760
they had one ship or one station every

00:05:15,540 --> 00:05:19,260
1500 kilometers but there's no problem

00:05:17,760 --> 00:05:20,880
because they only did one or two orbit

00:05:19,260 --> 00:05:24,030
so you just needed to put a few stations

00:05:20,880 --> 00:05:26,190
along the orbit ISS is rotating of

00:05:24,030 --> 00:05:28,470
course you cannot put one station every

00:05:26,190 --> 00:05:30,090
1500 meter all over the earth so what is

00:05:28,470 --> 00:05:31,980
happening now is ISS is completely

00:05:30,090 --> 00:05:33,720
automated the astronauts are running the

00:05:31,980 --> 00:05:35,610
experiments but everything on the ISS is

00:05:33,720 --> 00:05:37,650
automated from ground stations and the

00:05:35,610 --> 00:05:39,330
ISS is only visible from a radius of

00:05:37,650 --> 00:05:40,980
1500 kilometers realice says he's not

00:05:39,330 --> 00:05:42,720
directly talking to the earth but he's

00:05:40,980 --> 00:05:45,000
talking through the tracking and data

00:05:42,720 --> 00:05:47,730
relay system the TDRs satellites the

00:05:45,000 --> 00:05:50,010
geostationary satellites so I assess 400

00:05:47,730 --> 00:05:52,169
kilometers rotating quite quickly talk

00:05:50,010 --> 00:05:54,300
to TDRs TDRs are talking with each other

00:05:52,169 --> 00:05:56,430
and TDRs is sending ceylon back to earth

00:05:54,300 --> 00:05:57,990
same is true for Hubble Hubble Space

00:05:56,430 --> 00:05:59,910
Telescope is very expensive you don't

00:05:57,990 --> 00:06:00,600
want to just run it as it is flying over

00:05:59,910 --> 00:06:02,460
your head

00:06:00,600 --> 00:06:04,169
you want to continuously monitor Hubble

00:06:02,460 --> 00:06:06,240
Space Telescope measurements and of

00:06:04,169 --> 00:06:07,590
course you don't think that the US Air

00:06:06,240 --> 00:06:08,820
Force cares much about the science in

00:06:07,590 --> 00:06:10,440
Hubble Space Telescope but once you

00:06:08,820 --> 00:06:12,120
figure out that Hubble it's just a spy

00:06:10,440 --> 00:06:15,680
satellite upside down you might figure

00:06:12,120 --> 00:06:18,620
out why you had TDRs here in the space

00:06:15,680 --> 00:06:22,080
so of course here you have multiple

00:06:18,620 --> 00:06:24,750
satellites with multiple multiple

00:06:22,080 --> 00:06:27,450
experiments so you need a way of PACA

00:06:24,750 --> 00:06:29,910
tiling your data you need to say it's

00:06:27,450 --> 00:06:33,330
satellite number X which is sending data

00:06:29,910 --> 00:06:36,300
from instrument number Y and how you do

00:06:33,330 --> 00:06:38,160
this well that's where you go from QPSK

00:06:36,300 --> 00:06:40,710
which would be your Ethernet cable all

00:06:38,160 --> 00:06:44,160
the way to the JPEG image through all

00:06:40,710 --> 00:06:46,030
the layers of all the layer ok let's try

00:06:44,160 --> 00:06:49,050
to have fun with your layers

00:06:46,030 --> 00:06:52,270
so first of all we need to predict where

00:06:49,050 --> 00:06:54,670
Metro is flying I still use a track

00:06:52,270 --> 00:06:57,520
despite the y2k bug which is a silly

00:06:54,670 --> 00:06:59,620
patch and is not inserted you can use wh

00:06:57,520 --> 00:07:02,320
three to IMG in the paper I explained to

00:06:59,620 --> 00:07:04,510
you how you can cheat WX to IMG which is

00:07:02,320 --> 00:07:05,950
no longer maintained into a thinking

00:07:04,510 --> 00:07:07,420
that one of the neue satellites is

00:07:05,950 --> 00:07:09,160
actually maturing to and so that you can

00:07:07,420 --> 00:07:11,710
meter onto is actually one of the NOAA

00:07:09,160 --> 00:07:14,050
satellites so you can use a WX to energy

00:07:11,710 --> 00:07:16,540
and if you have internet access you can

00:07:14,050 --> 00:07:17,980
use the heavens above website again the

00:07:16,540 --> 00:07:20,290
beautiful thing about being it

00:07:17,980 --> 00:07:22,660
Spitsbergen arctic region 79 degree

00:07:20,290 --> 00:07:24,250
north is you've got all these passes at

00:07:22,660 --> 00:07:26,440
high elevations which of course you

00:07:24,250 --> 00:07:29,050
don't get in the western in a Western

00:07:26,440 --> 00:07:32,380
European country lower latitude country

00:07:29,050 --> 00:07:35,380
you'll get one two passes is best okay

00:07:32,380 --> 00:07:39,490
so we know when no major m2 is flying so

00:07:35,380 --> 00:07:41,110
we take our rtl-sdr rtl-sdr we collect

00:07:39,490 --> 00:07:43,330
the data this is all stolen from the

00:07:41,110 --> 00:07:46,210
earth spy website for receiving measure

00:07:43,330 --> 00:07:48,850
I'm too rational resampler you have your

00:07:46,210 --> 00:07:51,340
clocking so you cost us loop which locks

00:07:48,850 --> 00:07:54,250
on the frequency offset between the

00:07:51,340 --> 00:07:57,580
carrier and locals later beach recovery

00:07:54,250 --> 00:08:01,270
and so that data clock recovery and at

00:07:57,580 --> 00:08:02,710
the end you got your soft soft bits so

00:08:01,270 --> 00:08:04,090
already I needed to learn the first

00:08:02,710 --> 00:08:06,490
world when I was doing this I didn't

00:08:04,090 --> 00:08:07,750
know what the soft so soft bait is IQ

00:08:06,490 --> 00:08:10,330
coefficients where you're in one and

00:08:07,750 --> 00:08:12,940
zero are not yet saturated but are still

00:08:10,330 --> 00:08:15,190
represented here by an 8-bit value and

00:08:12,940 --> 00:08:17,169
you still need to identify whoever it is

00:08:15,190 --> 00:08:19,690
most probably a one or a zero so I

00:08:17,169 --> 00:08:22,150
didn't know what soft pit meant so the

00:08:19,690 --> 00:08:24,490
first question is are my data even worth

00:08:22,150 --> 00:08:26,950
investigating so this is a spectrum

00:08:24,490 --> 00:08:28,330
unlike GPS now we have strong signals so

00:08:26,950 --> 00:08:31,510
you see there is something happening

00:08:28,330 --> 00:08:34,240
here is it the QPSK signal well if we

00:08:31,510 --> 00:08:37,330
expand what Paul Bob and totals about

00:08:34,240 --> 00:08:39,219
GPS where BPSK is collapsed vo by

00:08:37,330 --> 00:08:41,800
squaring the signal well of course if

00:08:39,219 --> 00:08:45,010
you take the nth power of an NP SK

00:08:41,800 --> 00:08:46,330
signal you collapse again the the

00:08:45,010 --> 00:08:49,720
spectrum spreading YouTube

00:08:46,330 --> 00:08:51,640
PSK modulation so here we take our raw

00:08:49,720 --> 00:08:52,990
signal well there is something but we

00:08:51,640 --> 00:08:55,390
don't know if it's the right modulation

00:08:52,990 --> 00:08:57,580
we square it it is not BPSK so we

00:08:55,390 --> 00:08:59,470
haven't colored fulfill the spectrum we

00:08:57,580 --> 00:08:59,920
raised to the fourth power

00:08:59,470 --> 00:09:02,470
it

00:08:59,920 --> 00:09:05,170
QPSK because your spectrum spreading has

00:09:02,470 --> 00:09:07,389
collapsed in the carrier so we can get a

00:09:05,170 --> 00:09:11,639
signal that are worth investigating

00:09:07,389 --> 00:09:15,070
further it seems to be QPSK modulation

00:09:11,639 --> 00:09:17,320
so once we've done this if we know it's

00:09:15,070 --> 00:09:19,930
a packet I'll System packetized system

00:09:17,320 --> 00:09:21,610
means something will be repeated if you

00:09:19,930 --> 00:09:23,829
look at the documentation you will find

00:09:21,610 --> 00:09:26,139
that all cccc SDS compliant

00:09:23,829 --> 00:09:27,490
communication start with a header well

00:09:26,139 --> 00:09:29,260
we say if you have packets you need to

00:09:27,490 --> 00:09:33,459
know where the packet starts and the

00:09:29,260 --> 00:09:34,810
packet start header is 1a c FF c 1d try

00:09:33,459 --> 00:09:37,120
to remember this because i will keep on

00:09:34,810 --> 00:09:40,240
repeating this sentence ultra all over

00:09:37,120 --> 00:09:41,620
every time so at first i don't know what

00:09:40,240 --> 00:09:43,750
this packet is i just want to know

00:09:41,620 --> 00:09:45,820
whether there is some repeated header in

00:09:43,750 --> 00:09:48,459
the signal so as shown if a previous

00:09:45,820 --> 00:09:50,529
offer speaker you just auto create the

00:09:48,459 --> 00:09:52,600
signal if there is some redundancy this

00:09:50,529 --> 00:09:55,029
redundancy will show so by Auto

00:09:52,600 --> 00:09:58,000
correlating my signal well indeed I see

00:09:55,029 --> 00:10:00,480
a peak at 16 kilobyte I see a signal at

00:09:58,000 --> 00:10:04,779
32 kilobytes so there is some redundancy

00:10:00,480 --> 00:10:06,820
every 16 thousand samples I have some

00:10:04,779 --> 00:10:10,810
repetition so it's definitely worth

00:10:06,820 --> 00:10:12,250
working further on this data so the

00:10:10,810 --> 00:10:14,350
first thing that got me stuck because

00:10:12,250 --> 00:10:15,790
again I'm physicists I haven't been

00:10:14,350 --> 00:10:17,829
taught about single digital

00:10:15,790 --> 00:10:20,380
communication was consolation

00:10:17,829 --> 00:10:25,000
convolutional encoding so that's the

00:10:20,380 --> 00:10:27,040
topic of Martin's focus morning I'm just

00:10:25,000 --> 00:10:28,300
going a slightly bit further into it

00:10:27,040 --> 00:10:29,680
because I want to show you how its

00:10:28,300 --> 00:10:31,750
decoded I don't want to get to the

00:10:29,680 --> 00:10:33,820
encoding part the encoding actually is

00:10:31,750 --> 00:10:37,089
very simple because they show you on

00:10:33,820 --> 00:10:39,519
various documentation as an XOR so as

00:10:37,089 --> 00:10:41,769
well as shown by Martin this morning you

00:10:39,519 --> 00:10:43,480
just take your data stream and take

00:10:41,769 --> 00:10:45,490
convolution convolution so you try to

00:10:43,480 --> 00:10:47,440
mix all these data to create as much

00:10:45,490 --> 00:10:49,480
randomness as you can select is one of

00:10:47,440 --> 00:10:50,680
these bits is corrupted you have a lot

00:10:49,480 --> 00:10:52,240
of chance because you've spread the

00:10:50,680 --> 00:10:54,069
information of a long duration to

00:10:52,240 --> 00:10:56,230
recover this information so here it's a

00:10:54,069 --> 00:10:59,139
seven bit long shift register you have

00:10:56,230 --> 00:11:01,569
tabs from which you XOR and you get

00:10:59,139 --> 00:11:04,329
twice as many bits on the output as you

00:11:01,569 --> 00:11:06,579
had on the input so this your shift here

00:11:04,329 --> 00:11:10,630
will clock up down up down and sometimes

00:11:06,579 --> 00:11:12,850
take the output with one polynomial and

00:11:10,630 --> 00:11:13,740
on the other so if you do this you can

00:11:12,850 --> 00:11:15,900
also express this

00:11:13,740 --> 00:11:17,940
the matrix where time is evolving over

00:11:15,900 --> 00:11:19,800
the x-axis and you join first

00:11:17,940 --> 00:11:21,630
coefficient second coefficient first so

00:11:19,800 --> 00:11:23,220
first coefficients or first polynomial

00:11:21,630 --> 00:11:25,470
first coefficient of second polynomial

00:11:23,220 --> 00:11:27,450
second coefficients of first ramonja

00:11:25,470 --> 00:11:29,010
and so on so you have your polynomial

00:11:27,450 --> 00:11:31,350
which are interleaved and you judge

00:11:29,010 --> 00:11:34,310
shift time so that's another way of

00:11:31,350 --> 00:11:36,870
implementing your Viterbi you're

00:11:34,310 --> 00:11:39,030
convolution encoding and the last way of

00:11:36,870 --> 00:11:41,400
saying it is you can do this as a as a

00:11:39,030 --> 00:11:44,250
state machine so you take the various

00:11:41,400 --> 00:11:47,280
states of your polynomial here you input

00:11:44,250 --> 00:11:48,990
a new bit into your system and by

00:11:47,280 --> 00:11:51,330
inputting a new bit in your system your

00:11:48,990 --> 00:11:53,910
shift register changes so if you had 0

00:11:51,330 --> 00:11:56,700
and you inject a 0 you stay at 0 and

00:11:53,910 --> 00:11:59,160
your output you run the XOR on this all

00:11:56,700 --> 00:12:02,040
the 0 you get an out 0 output if you

00:11:59,160 --> 00:12:04,500
inject one well your 0 goes to the last

00:12:02,040 --> 00:12:06,750
0 drops the 1 comes here and you run

00:12:04,500 --> 00:12:08,660
this for the XOR you get 1 1 so you can

00:12:06,750 --> 00:12:11,190
make this as a state machine

00:12:08,660 --> 00:12:13,620
so once you've discovered you have a

00:12:11,190 --> 00:12:15,630
segment expression you can write this as

00:12:13,620 --> 00:12:17,820
the evolution of between the various

00:12:15,630 --> 00:12:20,370
states so previously I had given names

00:12:17,820 --> 00:12:22,590
ABCD to my various states and then you

00:12:20,370 --> 00:12:25,560
can draw the state machine so a stays in

00:12:22,590 --> 00:12:28,110
a a goes to B if you have a 1 then so

00:12:25,560 --> 00:12:31,310
these are the input bits so if a is 0 0

00:12:28,110 --> 00:12:31,310
it stays at a

00:12:41,130 --> 00:12:46,620
hey when it is feather zero will output

00:12:43,440 --> 00:12:49,110
zero zero a when it is fed a 0 where a

00:12:46,620 --> 00:12:51,030
when it is feather 1 will output 1 1 and

00:12:49,110 --> 00:12:54,300
so on so you can draw your state machine

00:12:51,030 --> 00:12:57,210
so encoding is very efficient very easy

00:12:54,300 --> 00:13:00,290
it's just X or now the reason I wanted

00:12:57,210 --> 00:13:02,940
to show you this is if you take the same

00:13:00,290 --> 00:13:06,630
description that we had here but now you

00:13:02,940 --> 00:13:08,370
take it to decode but 30 second

00:13:06,630 --> 00:13:11,610
description of the Viterbi decoding

00:13:08,370 --> 00:13:13,650
algorithm in 30 seconds what you have

00:13:11,610 --> 00:13:15,870
here is let's imagine I have received

00:13:13,650 --> 00:13:20,760
this bit stream so this is what I have

00:13:15,870 --> 00:13:23,460
read so I split what I have and so on

00:13:20,760 --> 00:13:26,160
what you see here I start with 0 0 ok I

00:13:23,460 --> 00:13:30,930
get 0 0 that is most probably state a

00:13:26,160 --> 00:13:33,600
with a 0 output 0 0 state a 0 0 0 0

00:13:30,930 --> 00:13:37,620
state a 0 0 so these free zeros are just

00:13:33,600 --> 00:13:40,650
a looping in to be 0 0 now we get 1 1 1

00:13:37,620 --> 00:13:42,420
1 is a feasible output of state a that

00:13:40,650 --> 00:13:44,970
gets us into state B so we're going to

00:13:42,420 --> 00:13:47,430
state B when you're in state B we get 1

00:13:44,970 --> 00:13:49,830
1 but that's not possible we cannot get

00:13:47,430 --> 00:13:51,600
a 1 1 out of state D we can get 1 0 0 1

00:13:49,830 --> 00:13:53,070
well the moment we don't know what the

00:13:51,600 --> 00:13:54,510
best option so let's follow the two

00:13:53,070 --> 00:13:55,730
possible paths we know it's wrong but

00:13:54,510 --> 00:13:58,980
let's follow the two possible paths

00:13:55,730 --> 00:14:01,800
after that we got 0 1 so we could be

00:13:58,980 --> 00:14:04,320
here C but she cannot have 0 1 you can

00:14:01,800 --> 00:14:06,960
the only one 1 or 0 0 so C would create

00:14:04,320 --> 00:14:09,180
two errors that's a wrong path so we cut

00:14:06,960 --> 00:14:11,550
it out and Viterbi tells you let's not

00:14:09,180 --> 00:14:13,950
follow this one now we go into this path

00:14:11,550 --> 00:14:16,620
here because 0 1 is a valid output of D

00:14:13,950 --> 00:14:18,420
that would be considered as a 0 and then

00:14:16,620 --> 00:14:20,790
you go on and you follow it your part

00:14:18,420 --> 00:14:23,100
your path so if I add the output dates

00:14:20,790 --> 00:14:25,710
here you have the number in red of

00:14:23,100 --> 00:14:27,600
errors two errors means we give up on

00:14:25,710 --> 00:14:29,460
this particular branch and we continue

00:14:27,600 --> 00:14:31,470
with a branch with only one error and

00:14:29,460 --> 00:14:33,720
this unique error con continues with a

00:14:31,470 --> 00:14:35,790
consistent path that tells you in the

00:14:33,720 --> 00:14:36,960
transmission this bit was erroneous so

00:14:35,790 --> 00:14:39,420
you see that by spreading the

00:14:36,960 --> 00:14:42,210
information over a long duration where

00:14:39,420 --> 00:14:44,520
we had just a burst of 1 bit error

00:14:42,210 --> 00:14:46,560
that's the point of convolution encoding

00:14:44,520 --> 00:14:48,480
is just a noise on one date and this

00:14:46,560 --> 00:14:50,730
unique bit has been recovered by the

00:14:48,480 --> 00:14:53,190
Turbie decoding and then indeed we

00:14:50,730 --> 00:14:54,940
recover 1 a which is the first bit the

00:14:53,190 --> 00:14:57,850
first byte of our

00:14:54,940 --> 00:15:01,360
synchronization words so okay we've

00:14:57,850 --> 00:15:04,660
understood be decoding so now well we

00:15:01,360 --> 00:15:06,670
can go for so yeah sorry

00:15:04,660 --> 00:15:08,350
this is what I so if you don't want to

00:15:06,670 --> 00:15:12,490
go into all the math by yourself you

00:15:08,350 --> 00:15:14,230
have lip back with you and by K thank

00:15:12,490 --> 00:15:17,160
you and lead pack will do the job for

00:15:14,230 --> 00:15:19,690
you here I put for you a very simplified

00:15:17,160 --> 00:15:21,430
chart of a friendly lip fact for Viterbi

00:15:19,690 --> 00:15:24,010
decoding just don't do the same mistake

00:15:21,430 --> 00:15:27,100
as I did leap fake will not take as

00:15:24,010 --> 00:15:29,470
input 0 or 1 you need to feed it 0 or

00:15:27,100 --> 00:15:31,450
255 it's working a bite so I struggle

00:15:29,470 --> 00:15:33,040
for like a couple of weeks why is

00:15:31,450 --> 00:15:34,480
libtech not they put decoding just

00:15:33,040 --> 00:15:38,020
because I was giving in 0 & 1

00:15:34,480 --> 00:15:41,440
if it's 0 and 255 and again the word

00:15:38,020 --> 00:15:43,690
encoded-word here will be decoded as 1a

00:15:41,440 --> 00:15:45,940
c FF c 1z so we know that the

00:15:43,690 --> 00:15:48,370
encoded-word of btob you can use the

00:15:45,940 --> 00:15:50,350
effect to encode or to decode so this is

00:15:48,370 --> 00:15:52,800
encoded word and this is the decoded

00:15:50,350 --> 00:15:55,480
world this is how you do it with recheck

00:15:52,800 --> 00:15:58,360
okay so we've got r effect we can check

00:15:55,480 --> 00:16:00,430
that indeed we can decode our word so if

00:15:58,360 --> 00:16:04,630
we have the sequence so this is an

00:16:00,430 --> 00:16:07,690
example that was given to me by by the

00:16:04,630 --> 00:16:10,180
author of gr satellite by daniel Estevez

00:16:07,690 --> 00:16:13,600
I hope I pronounce his name correctly

00:16:10,180 --> 00:16:16,870
it's you've got the fake decoder here as

00:16:13,600 --> 00:16:20,620
was shown by by marching this morning

00:16:16,870 --> 00:16:23,590
and if I feed my gr decoder here with

00:16:20,620 --> 00:16:27,040
encoded-word indeed I can get the output

00:16:23,590 --> 00:16:29,290
which is 1a c FF c 1 d except sometimes

00:16:27,040 --> 00:16:31,690
I get wrong messages because you see

00:16:29,290 --> 00:16:34,780
here that my input stream is repeating

00:16:31,690 --> 00:16:37,240
and if I repeat my input stream the

00:16:34,780 --> 00:16:39,820
hypothesis of picker B is to start with

00:16:37,240 --> 00:16:41,980
a shift register that is full of 0 and

00:16:39,820 --> 00:16:43,839
that is not correct because here after

00:16:41,980 --> 00:16:46,030
the first coding I don't have a shift

00:16:43,839 --> 00:16:48,040
register full of 0 so then I have one

00:16:46,030 --> 00:16:49,300
wrong one wrong sequence and then I go

00:16:48,040 --> 00:16:51,100
back to 1 HDFS

00:16:49,300 --> 00:16:52,480
C 1 D which is the correct sequence so

00:16:51,100 --> 00:16:54,400
you can play with this and it's an

00:16:52,480 --> 00:16:58,450
opportunity to see how the hello world

00:16:54,400 --> 00:17:03,430
of of CCS yes is decoded by by by the

00:16:58,450 --> 00:17:06,220
fake decoder in the radio what is the

00:17:03,430 --> 00:17:08,700
sequence well as we did for GPS now I

00:17:06,220 --> 00:17:10,680
should be able to correlate my

00:17:08,700 --> 00:17:14,610
sifts signal with a synchronization word

00:17:10,680 --> 00:17:16,770
after encoding by Viterbi and miserably

00:17:14,610 --> 00:17:20,340
failed you see absolutely no correlation

00:17:16,770 --> 00:17:24,150
peak I cannot find in my QPSK signal the

00:17:20,340 --> 00:17:24,720
the set of bits of my encoding words why

00:17:24,150 --> 00:17:27,840
is that

00:17:24,720 --> 00:17:30,630
well I associated the usual

00:17:27,840 --> 00:17:34,380
constellation to my QPSK QPSK is four

00:17:30,630 --> 00:17:37,950
phases so I have 90 180 270 360 degrees

00:17:34,380 --> 00:17:40,890
and 270 degrees and I associated the

00:17:37,950 --> 00:17:43,170
word symbol a set of bits to each one of

00:17:40,890 --> 00:17:45,270
these symbols of his states but why

00:17:43,170 --> 00:17:47,190
would I do that why would I not

00:17:45,270 --> 00:17:51,030
associate a different symbol to a

00:17:47,190 --> 00:17:53,160
different bit of this set of bits pair

00:17:51,030 --> 00:17:54,630
of bits to each symbol so this is

00:17:53,160 --> 00:17:56,700
actually what you figure out when you

00:17:54,630 --> 00:17:59,550
read the source code of material decoder

00:17:56,700 --> 00:18:02,700
you figure out that metal decoder starts

00:17:59,550 --> 00:18:04,860
by creating rotated copies all the

00:18:02,700 --> 00:18:06,870
possible rotated copies which comes back

00:18:04,860 --> 00:18:09,990
to say let's take the standard

00:18:06,870 --> 00:18:12,840
distribution of big pairs of QPSK and

00:18:09,990 --> 00:18:16,050
let's imagine like lighting in BPSK you

00:18:12,840 --> 00:18:18,600
can you can have 0 or PI or PI or zero

00:18:16,050 --> 00:18:20,730
but in BPSK it doesn't care because you

00:18:18,600 --> 00:18:22,170
just go to a 0 1 or 1 0 but you will

00:18:20,730 --> 00:18:24,480
still correlate only you have an anti

00:18:22,170 --> 00:18:26,490
correlation sort of correlation but so

00:18:24,480 --> 00:18:29,280
to PSK you've got all these Possible's

00:18:26,490 --> 00:18:31,110
she's position so you can swap the real

00:18:29,280 --> 00:18:33,750
part you can swap the imaginary part or

00:18:31,110 --> 00:18:35,940
you can swap these parts here and so if

00:18:33,750 --> 00:18:38,220
you look into metal decoder you indeed

00:18:35,940 --> 00:18:40,980
find that well I will not get with you

00:18:38,220 --> 00:18:44,340
but you swap all the possible big pairs

00:18:40,980 --> 00:18:46,620
so 1 1 becomes 0 1 1 1 can become 0 0 1

00:18:44,340 --> 00:18:49,170
one can become 1 0 so you make all the

00:18:46,620 --> 00:18:51,210
possible combinations and because you

00:18:49,170 --> 00:18:54,830
don't care about anti-correlation these

00:18:51,210 --> 00:18:57,420
8 possible bit swaps actually become

00:18:54,830 --> 00:18:59,310
four possible combinations because you

00:18:57,420 --> 00:19:01,800
have four ways of combining all these

00:18:59,310 --> 00:19:05,370
bits if you think that 1 1 and 0 0 are

00:19:01,800 --> 00:19:07,320
the same so having done that now you can

00:19:05,370 --> 00:19:09,240
see here all the possible correlations

00:19:07,320 --> 00:19:10,410
and the only one that gives you

00:19:09,240 --> 00:19:11,820
correlation I don't know if you can see

00:19:10,410 --> 00:19:13,890
this from the room but you've got no

00:19:11,820 --> 00:19:15,870
correlation P for all these cases but

00:19:13,890 --> 00:19:19,740
here you've got these correlation Peaks

00:19:15,870 --> 00:19:22,390
every 16,000 bits so this means this is

00:19:19,740 --> 00:19:25,330
the right assignment or

00:19:22,390 --> 00:19:28,960
of each symbol into the repair so now I

00:19:25,330 --> 00:19:31,120
found how to convert my QPSK signal into

00:19:28,960 --> 00:19:34,150
the encoded Viterbi keyboard key word

00:19:31,120 --> 00:19:38,410
and by encoded Viterbi synchronization

00:19:34,150 --> 00:19:42,310
world I can start decoding my-my-my

00:19:38,410 --> 00:19:44,200
sentences so I will skip reed-solomon

00:19:42,310 --> 00:19:46,900
because actually rich Solomon is a block

00:19:44,200 --> 00:19:49,060
encoder so Viterbi is to eliminate

00:19:46,900 --> 00:19:52,150
random bits that have flipped or IVA

00:19:49,060 --> 00:19:53,650
communication while Reed Solomon or what

00:19:52,150 --> 00:19:55,900
well the reason I'm skipping it is

00:19:53,650 --> 00:19:58,390
because I investigated quite more deeply

00:19:55,900 --> 00:20:01,060
BCH which is the encoder block encoder

00:19:58,390 --> 00:20:03,670
in RDS that was investigated heavily by

00:20:01,060 --> 00:20:06,100
by bastion so when I worked on BCH I've

00:20:03,670 --> 00:20:08,470
put a reference here you can look at how

00:20:06,100 --> 00:20:10,330
BCH is working and Reed Solomon is just

00:20:08,470 --> 00:20:12,160
an extension of this the only reason I'm

00:20:10,330 --> 00:20:14,440
mentioning this is you've got your data

00:20:12,160 --> 00:20:16,240
here if you don't want block correction

00:20:14,440 --> 00:20:18,030
which is someone is emitting and you've

00:20:16,240 --> 00:20:20,800
got whole blocks of data that have been

00:20:18,030 --> 00:20:22,930
corrupted well you can get rid of Reed

00:20:20,800 --> 00:20:24,700
Solomon if you want to use it just be

00:20:22,930 --> 00:20:26,200
aware because I again you want to spread

00:20:24,700 --> 00:20:27,670
information over time because you want

00:20:26,200 --> 00:20:29,530
to recover as much time as for as much

00:20:27,670 --> 00:20:32,530
information as possible you will have

00:20:29,530 --> 00:20:34,780
interleaved Reed Solomon meaning you

00:20:32,530 --> 00:20:37,360
have for intra live Reed Solomon you

00:20:34,780 --> 00:20:39,820
have data 1 theta 2 theta 3 theta 4

00:20:37,360 --> 00:20:41,890
theta 1 theta 2 theta 3 theta 4 you need

00:20:39,820 --> 00:20:45,430
to be interleave the render reed-solomon

00:20:41,890 --> 00:20:47,920
they code recovery and then re

00:20:45,430 --> 00:20:50,050
interleave your data so it's just I will

00:20:47,920 --> 00:20:51,880
skip this because well because only I

00:20:50,050 --> 00:20:54,550
don't have time to get the details and

00:20:51,880 --> 00:20:57,660
again I give you the example how to run

00:20:54,550 --> 00:21:01,330
how to run the reed-solomon decoder in

00:20:57,660 --> 00:21:02,290
in gr fake sorry in the lip fake so if

00:21:01,330 --> 00:21:06,040
you want to give it a try by yourself

00:21:02,290 --> 00:21:09,700
here is my data set I voluntarily

00:21:06,040 --> 00:21:11,800
corrupt 4 bytes I voluntarily corrupt

00:21:09,700 --> 00:21:14,140
bytes in the data set so in the payload

00:21:11,800 --> 00:21:15,970
or in the correction code and if I run

00:21:14,140 --> 00:21:19,360
this in my reed-solomon decoder

00:21:15,970 --> 00:21:21,910
indeed I detect or I leave lipstick

00:21:19,360 --> 00:21:23,740
detects for corrupted bytes and the

00:21:21,910 --> 00:21:25,450
score for corrupted bytes are these

00:21:23,740 --> 00:21:27,460
values which which can be recovered so

00:21:25,450 --> 00:21:29,530
Long's only you decock discover which

00:21:27,460 --> 00:21:32,350
files are corrupted but you can find the

00:21:29,530 --> 00:21:34,420
properly initial values of these bytes

00:21:32,350 --> 00:21:35,920
so just demonstration again you have to

00:21:34,420 --> 00:21:36,370
run it by yourself I can talk as much as

00:21:35,920 --> 00:21:37,660
I want

00:21:36,370 --> 00:21:40,530
if you don't run it by yourself you

00:21:37,660 --> 00:21:43,690
don't learn so try try it by yourself

00:21:40,530 --> 00:21:45,790
good so we claim to have found out how

00:21:43,690 --> 00:21:47,350
to work with Viterbi decoder we claim to

00:21:45,790 --> 00:21:50,440
have worked understood how reed-solomon

00:21:47,350 --> 00:21:53,350
is working so are the bits that we get

00:21:50,440 --> 00:21:55,480
out of the Viterbi decoder valid but I

00:21:53,350 --> 00:21:57,280
can claim now I've done the job I can go

00:21:55,480 --> 00:21:59,620
away well we want a picture we don't

00:21:57,280 --> 00:22:01,060
want a random set of bits so the first

00:21:59,620 --> 00:22:03,460
thing we can do when we look at the data

00:22:01,060 --> 00:22:06,940
sheet is or V documentation of a metre

00:22:03,460 --> 00:22:08,110
and 2 transmission whose website I'll

00:22:06,940 --> 00:22:09,880
give you the references where you can

00:22:08,110 --> 00:22:11,980
find documentation the last slide you

00:22:09,880 --> 00:22:15,220
see that very celebratory data and this

00:22:11,980 --> 00:22:17,230
telemetry data are encoded in a sentence

00:22:15,220 --> 00:22:18,880
to recognize so that you know where your

00:22:17,230 --> 00:22:22,870
telemetry data are located so you've got

00:22:18,880 --> 00:22:25,870
this magic sentence 224 168 163 146 bla

00:22:22,870 --> 00:22:28,750
bla bla 191 so this magic sentence tells

00:22:25,870 --> 00:22:30,250
you I am sending a telemetry frame so

00:22:28,750 --> 00:22:33,010
what do we do well we take all our

00:22:30,250 --> 00:22:36,790
decoded bits and we cross correlate our

00:22:33,010 --> 00:22:39,370
decoded bits with this sequence and this

00:22:36,790 --> 00:22:42,460
is one of these all inspiring moments

00:22:39,370 --> 00:22:45,640
where it works you find this sentence in

00:22:42,460 --> 00:22:47,560
all your bits and if you decode the the

00:22:45,640 --> 00:22:49,450
following bytes hours minutes seconds

00:22:47,560 --> 00:22:52,150
you find that that information was

00:22:49,450 --> 00:22:54,760
collected at 11 o clock 48 minutes 33

00:22:52,150 --> 00:22:58,240
seconds which is indeed the output of

00:22:54,760 --> 00:23:00,940
the Metro decoder provided as a

00:22:58,240 --> 00:23:04,180
reference so you see here that we have

00:23:00,940 --> 00:23:06,580
indeed properly decoded the Viterbi and

00:23:04,180 --> 00:23:07,780
reed-solomon or actually in this part

00:23:06,580 --> 00:23:09,610
our skip read Solomon but we have

00:23:07,780 --> 00:23:14,320
understood Viterbi because we can find

00:23:09,610 --> 00:23:17,110
the telemetry sentence and we can decode

00:23:14,320 --> 00:23:19,270
proper information now I found the

00:23:17,110 --> 00:23:22,090
telemetry but still a bit far from from

00:23:19,270 --> 00:23:24,880
pictures but the next part the end now

00:23:22,090 --> 00:23:27,220
is easy because I don't get the details

00:23:24,880 --> 00:23:29,080
I it took me a couple of months this

00:23:27,220 --> 00:23:32,080
work has been started little more than a

00:23:29,080 --> 00:23:34,960
year ago but once you've got the bits

00:23:32,080 --> 00:23:36,730
it's a matter of basically finding what

00:23:34,960 --> 00:23:39,190
the bytes are and checking whether they

00:23:36,730 --> 00:23:40,810
follow of a standard so I will not give

00:23:39,190 --> 00:23:42,820
the details but indeed you see that

00:23:40,810 --> 00:23:44,590
you've got this header which is always

00:23:42,820 --> 00:23:47,230
the same that tells you well we're in a

00:23:44,590 --> 00:23:48,940
good job there's an ID when they tell

00:23:47,230 --> 00:23:49,990
you how to counter well indeed these

00:23:48,940 --> 00:23:51,580
free bytes you see

00:23:49,990 --> 00:23:53,590
they're increasing one by one so we're

00:23:51,580 --> 00:23:55,600
on the right path and then they sell

00:23:53,590 --> 00:23:58,120
tell you here is a header so this is an

00:23:55,600 --> 00:23:59,620
address of the first payload because the

00:23:58,120 --> 00:24:01,000
difficulty is that you've got the data

00:23:59,620 --> 00:24:02,320
packet and then you've got the payload

00:24:01,000 --> 00:24:03,670
packet and there is no reason for the

00:24:02,320 --> 00:24:05,350
data packet to be synchronized on

00:24:03,670 --> 00:24:08,320
tailored packets so you might have

00:24:05,350 --> 00:24:10,360
payload lying over multiple data packets

00:24:08,320 --> 00:24:12,640
so this is the address at which the

00:24:10,360 --> 00:24:13,929
first payload package is starting and so

00:24:12,640 --> 00:24:15,429
on and so on so I will not be in the

00:24:13,929 --> 00:24:16,929
detail but that's just a matter of

00:24:15,429 --> 00:24:21,309
following the protocol so once you get

00:24:16,929 --> 00:24:24,280
the bite it's really easy and finally

00:24:21,309 --> 00:24:26,890
you are supposed on the payload to get

00:24:24,280 --> 00:24:29,320
JPEG images and this is where I gave up

00:24:26,890 --> 00:24:30,970
I said okay I'm not gonna re encode the

00:24:29,320 --> 00:24:34,380
whole Huffman encoder and everything so

00:24:30,970 --> 00:24:37,750
this is where I just took this part of

00:24:34,380 --> 00:24:40,960
the decoder vomitorium to decoder that

00:24:37,750 --> 00:24:44,350
was ported from Pascal to C++ and I just

00:24:40,960 --> 00:24:46,390
use ver decoder JPEG is standard

00:24:44,350 --> 00:24:48,190
bachelor level computer science signal

00:24:46,390 --> 00:24:50,530
processing training I didn't want to

00:24:48,190 --> 00:24:53,800
write all of it again maybe for the next

00:24:50,530 --> 00:24:55,960
training session but yeah I wanted to

00:24:53,800 --> 00:24:58,929
get some images so I went so to conclude

00:24:55,960 --> 00:25:01,179
the talk that's what I get at first so

00:24:58,929 --> 00:25:02,920
you are told in the standards again it's

00:25:01,179 --> 00:25:04,990
all the detail of the paper of it I

00:25:02,920 --> 00:25:07,900
uploaded on the post and website you are

00:25:04,990 --> 00:25:12,160
told that your frames your JPEG images

00:25:07,900 --> 00:25:15,550
are eight by a bit frames this 8 by a

00:25:12,160 --> 00:25:17,380
bit thumbnails repeat 14 times and each

00:25:15,550 --> 00:25:20,860
one of these 14 times

00:25:17,380 --> 00:25:23,620
8 bit sequences repeats 14 times along

00:25:20,860 --> 00:25:25,150
one teacher line and then you jump to

00:25:23,620 --> 00:25:26,470
the next instrument because our free

00:25:25,150 --> 00:25:29,020
wavelengths which they call three

00:25:26,470 --> 00:25:32,620
instruments you get one line of the next

00:25:29,020 --> 00:25:34,179
instrument a bit wide 1,500 bit long and

00:25:32,620 --> 00:25:36,580
then you go to the next instrument and

00:25:34,179 --> 00:25:38,170
so on so here you see that I had some

00:25:36,580 --> 00:25:39,820
missing frames so some missing

00:25:38,170 --> 00:25:41,320
thumbnails that I had to introduce so

00:25:39,820 --> 00:25:43,240
what I did here is because you've got a

00:25:41,320 --> 00:25:45,160
counter you know that when you have

00:25:43,240 --> 00:25:47,320
missing frames here I just very stupidly

00:25:45,160 --> 00:25:49,830
did if you are missing a frame copy of a

00:25:47,320 --> 00:25:51,730
previous frame and this way I could miss

00:25:49,830 --> 00:25:53,920
feel the missing

00:25:51,730 --> 00:25:56,590
thumbnails and here you start seeing

00:25:53,920 --> 00:25:58,210
some pattern and here you've got one

00:25:56,590 --> 00:26:00,070
parameter in JPEG which is called the

00:25:58,210 --> 00:26:01,780
coefficient quality coefficient which

00:26:00,070 --> 00:26:03,970
gives you the relation between the

00:26:01,780 --> 00:26:07,659
quantization and the quantization matter

00:26:03,970 --> 00:26:10,539
and here is no quality so you see that

00:26:07,659 --> 00:26:13,750
the sharp pictures here don't have the

00:26:10,539 --> 00:26:15,279
same tone as as a flatter area of a

00:26:13,750 --> 00:26:18,220
picture but you start seeing here the

00:26:15,279 --> 00:26:20,049
Alps and finally by applying the quality

00:26:18,220 --> 00:26:22,360
coefficient you get an image that is a

00:26:20,049 --> 00:26:24,940
bit more smooth and that compares I

00:26:22,360 --> 00:26:27,850
think quite favorably to the reference

00:26:24,940 --> 00:26:29,710
picture that was decoded using the

00:26:27,850 --> 00:26:30,730
satellite of a mineral decoder that you

00:26:29,710 --> 00:26:33,399
can find on the Internet

00:26:30,730 --> 00:26:36,490
so here you see each tria you have

00:26:33,399 --> 00:26:39,399
patton lake somewhere over here I think

00:26:36,490 --> 00:26:41,259
you've got Vanessa over here so if you

00:26:39,399 --> 00:26:43,269
take the metro decoder you get an image

00:26:41,259 --> 00:26:46,149
that is quite consistent with what we

00:26:43,269 --> 00:26:49,620
got by step-by-step decoding so that was

00:26:46,149 --> 00:26:52,360
of course in 25 27 minutes a very fast

00:26:49,620 --> 00:26:54,190
highlight of the main steps go for the

00:26:52,360 --> 00:26:55,570
paper the paper is actually about 50

00:26:54,190 --> 00:26:57,580
pages long at the moment and an

00:26:55,570 --> 00:27:04,240
increasing but I'm trying to put

00:26:57,580 --> 00:27:06,669
everything for IQ coefficients all the

00:27:04,240 --> 00:27:08,590
weights for JPEG image CC SDS is a

00:27:06,669 --> 00:27:10,360
protocol for space communication you

00:27:08,590 --> 00:27:12,820
might not care about weather satellites

00:27:10,360 --> 00:27:15,340
but what Daniel is today is showing on

00:27:12,820 --> 00:27:17,169
his blog and as mentioned by my poll is

00:27:15,340 --> 00:27:18,490
this is a standard for most satellite

00:27:17,169 --> 00:27:20,080
communication and that's going to be the

00:27:18,490 --> 00:27:21,940
future because no way is going to stop

00:27:20,080 --> 00:27:23,799
the analog satellites so I think if you

00:27:21,940 --> 00:27:25,179
want if you're interested in solid

00:27:23,799 --> 00:27:26,110
decoding this is really worth

00:27:25,179 --> 00:27:28,120
investigating

00:27:26,110 --> 00:27:30,039
Daniel Estevez is just addressing all

00:27:28,120 --> 00:27:30,429
the satellites avatar satellites up

00:27:30,039 --> 00:27:33,700
there

00:27:30,429 --> 00:27:35,080
Lucas Tesla is a Brazilian guy who's

00:27:33,700 --> 00:27:37,600
working on going satellites

00:27:35,080 --> 00:27:38,320
geosynchronous and his website was very

00:27:37,600 --> 00:27:40,629
inspiring

00:27:38,320 --> 00:27:43,090
despite at some point splitting the path

00:27:40,629 --> 00:27:44,679
of decoder his beginning was very

00:27:43,090 --> 00:27:46,990
insightful he helped me a lot by email

00:27:44,679 --> 00:27:48,909
to guys helped me a lot this is a

00:27:46,990 --> 00:27:52,090
website that was hosting all the files

00:27:48,909 --> 00:27:53,440
about meteor m2 somehow in between in

00:27:52,090 --> 00:27:54,759
the middle of this investigation it

00:27:53,440 --> 00:27:56,470
disappeared I don't know where the site

00:27:54,759 --> 00:27:57,549
is hopefully we've got a web archive I

00:27:56,470 --> 00:27:59,289
don't know where this website is

00:27:57,549 --> 00:28:01,269
disappeared but this is a fundamental

00:27:59,289 --> 00:28:02,860
repository of all the data some of which

00:28:01,269 --> 00:28:04,870
cannot be found anywhere else and

00:28:02,860 --> 00:28:07,120
finally there is one article which is

00:28:04,870 --> 00:28:09,789
not well not very technical but it tells

00:28:07,120 --> 00:28:11,139
you that it could be done and we bet I

00:28:09,789 --> 00:28:11,680
conclude my talk and I thank you for

00:28:11,139 --> 00:28:20,480
attention

00:28:11,680 --> 00:28:24,890
[Applause]

00:28:20,480 --> 00:28:27,000
next one so just as a quick conclusion

00:28:24,890 --> 00:28:29,550
martin introduced during his

00:28:27,000 --> 00:28:31,770
introductory talk that we are organizing

00:28:29,550 --> 00:28:33,720
the european new radio days so my

00:28:31,770 --> 00:28:35,430
frustration is that here we have two

00:28:33,720 --> 00:28:37,170
days off first then we have one day full

00:28:35,430 --> 00:28:38,610
of talks we never have time to discuss

00:28:37,170 --> 00:28:40,920
with each other everyone's running to

00:28:38,610 --> 00:28:43,920
our sessions and i wanted to have an

00:28:40,920 --> 00:28:46,320
opportunity to meet with people and sit

00:28:43,920 --> 00:28:48,390
together so the way I organized this is

00:28:46,320 --> 00:28:50,340
one day or we organized this is one day

00:28:48,390 --> 00:28:52,320
of oral presentation one day of

00:28:50,340 --> 00:28:54,240
tutorials everything is open at the

00:28:52,320 --> 00:28:55,830
moment we are proposing some tutorial

00:28:54,240 --> 00:28:57,330
please feel free to propose new

00:28:55,830 --> 00:29:01,020
tutorials

00:28:57,330 --> 00:29:03,060
Robin Gates is coming from analog

00:29:01,020 --> 00:29:06,150
devices to demonstrate the Pluto so he

00:29:03,060 --> 00:29:08,220
told me I hope and I trust him it is

00:29:06,150 --> 00:29:10,740
located in France in business or but

00:29:08,220 --> 00:29:12,450
also is a tiny remote City which means

00:29:10,740 --> 00:29:14,070
that hotels are readily available here

00:29:12,450 --> 00:29:16,590
in the east of France it's two and a

00:29:14,070 --> 00:29:18,120
half hour train trip from Paris it's a

00:29:16,590 --> 00:29:20,610
few hours from cultural toughing it's a

00:29:18,120 --> 00:29:22,440
couple of hours from college through the

00:29:20,610 --> 00:29:25,530
cocoa and cocoa food contribution is

00:29:22,440 --> 00:29:27,120
March 21st registration is free but

00:29:25,530 --> 00:29:28,560
please register because I need to

00:29:27,120 --> 00:29:30,960
organize I need to know how many people

00:29:28,560 --> 00:29:33,600
are coming so registration registration

00:29:30,960 --> 00:29:37,170
deadline is May 1st the website is over

00:29:33,600 --> 00:29:39,420
here and hopefully the evening dinner

00:29:37,170 --> 00:29:41,430
will be a barbecue so everyone can talk

00:29:39,420 --> 00:29:43,560
to each other and and have more time to

00:29:41,430 --> 00:29:48,440
discuss so I will not waste our time

00:29:43,560 --> 00:29:48,440
with more advertisements but please come

00:29:50,200 --> 00:29:52,260

YouTube URL: https://www.youtube.com/watch?v=gU8LD7HPumQ


