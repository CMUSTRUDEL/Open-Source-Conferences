Title: USB borne attacks and usable defense mechanisms Hardening built into the operating system without câ€¦
Publication date: 2019-02-08
Playlist: FOSDEM 2019
Description: 
	USB borne attacks and usable defense mechanisms Hardening built into the operating system without compromising on usability
by Tobias Mueller and Ludovico de Nittis

At: FOSDEM 2019
https://video.fosdem.org/2019/UD2.218A/usb_borne_attacks.webm


The attack surface of USB is quite large and while disabling USB altogether solves the problem, it creates many other. As do existing protection mechanisms. They suffer from poor usability and missing integration into the operating system.  We present our approach to defending against rogue USB devices for a GNOME-based operating system. USB is arguably to most exposed interface of a user's machine. It allows an attacker to interact with pretty much any driver, many of which are of questionable quality.  We try to be smart about when to allow new USB devices. First, we try to detect when the user is present, arguing that if the user is not then new USB devices should not work. But it is not that simple, because you might very well want to attach a new keyboard in case yours breaks. Keyboards, however, pose another risk as several attacks have shown. But not all keyboards are equally bad and we propose to promote a harmless keyboard to become dangerous after getting the user's consent. It is not entirely clear yet how to that best, so your feedback and a discussion is certainly welcome! 

Room: UD2.218A
Scheduled start: 2019-02-03 12:30:00+01
Captions: 
	00:00:18,470 --> 00:00:24,149
hello everyone welcome to our next door

00:00:21,180 --> 00:00:26,399
from Tobias Miller and Ludwick oh then

00:00:24,149 --> 00:00:38,129
it's about us bad burn us be born

00:00:26,399 --> 00:00:39,059
attacks okay so if there's trouble with

00:00:38,129 --> 00:00:41,190
a microphone let me know

00:00:39,059 --> 00:00:44,460
so I'm Toby hello don't know if you know

00:00:41,190 --> 00:00:46,320
me I am in the genome project and so

00:00:44,460 --> 00:00:50,070
Ludovico every week oh right

00:00:46,320 --> 00:00:52,410
and I'm very happy to be here and to be

00:00:50,070 --> 00:00:55,410
talking to you about well the attack

00:00:52,410 --> 00:00:57,839
surface of USB how many of you have a

00:00:55,410 --> 00:01:02,370
device that's capable of having a USB

00:00:57,839 --> 00:01:03,690
device attached quite a few there's some

00:01:02,370 --> 00:01:07,970
who haven't registered and I'm surprised

00:01:03,690 --> 00:01:10,619
like you have a computer so um we're

00:01:07,970 --> 00:01:12,570
working on protecting against rogue USB

00:01:10,619 --> 00:01:14,070
devices that is Ludovico is doing all

00:01:12,570 --> 00:01:16,500
the work and I'm telling him how good he

00:01:14,070 --> 00:01:20,820
is and I congratulate him to his

00:01:16,500 --> 00:01:23,719
achievements and um we will present what

00:01:20,820 --> 00:01:26,520
we think for how we think we should

00:01:23,719 --> 00:01:29,579
introduce these capabilities of

00:01:26,520 --> 00:01:32,909
protecting against USB devices such that

00:01:29,579 --> 00:01:34,979
they actually work in the in terms of

00:01:32,909 --> 00:01:37,079
they unfold their protection

00:01:34,979 --> 00:01:40,710
capabilities and what that means

00:01:37,079 --> 00:01:42,060
well you will hopefully see once we have

00:01:40,710 --> 00:01:45,899
the examples of why we think it doesn't

00:01:42,060 --> 00:01:49,079
right now bottom first let me tell you

00:01:45,899 --> 00:01:52,380
really quickly why I believe that gnome

00:01:49,079 --> 00:01:56,130
is in a very good spot of providing

00:01:52,380 --> 00:01:57,750
these protection capabilities so the

00:01:56,130 --> 00:01:59,850
sole reason of gnomes like gnomes

00:01:57,750 --> 00:02:00,359
existence as you all know because we're

00:01:59,850 --> 00:02:03,689
at FOSDEM

00:02:00,359 --> 00:02:05,789
is freedom so gnome was well created as

00:02:03,689 --> 00:02:08,700
a free alternative you know to back in

00:02:05,789 --> 00:02:10,410
the day proprietary systems and there's

00:02:08,700 --> 00:02:12,060
many definitions of freedom including

00:02:10,410 --> 00:02:14,280
those you know for your free computing

00:02:12,060 --> 00:02:15,870
we also believe that you should be free

00:02:14,280 --> 00:02:17,370
from concerns of your computer

00:02:15,870 --> 00:02:19,920
being compromised and we wanted to

00:02:17,370 --> 00:02:23,549
achieve this well as well as possible

00:02:19,920 --> 00:02:26,970
without compromising on your way of

00:02:23,549 --> 00:02:28,349
using the machine or your usability why

00:02:26,970 --> 00:02:30,180
do I think that we're in a good position

00:02:28,349 --> 00:02:32,549
because it turns out that filtering out

00:02:30,180 --> 00:02:34,440
extraneous information is the basic

00:02:32,549 --> 00:02:36,090
function of consciousness so your brain

00:02:34,440 --> 00:02:39,480
does nothing else but filtering out all

00:02:36,090 --> 00:02:41,819
the unnecessary stuff and I think that

00:02:39,480 --> 00:02:43,340
with genome we found workflows and ways

00:02:41,819 --> 00:02:46,379
of interacting with the user that

00:02:43,340 --> 00:02:48,060
prevents well unnecessary things and

00:02:46,379 --> 00:02:50,129
allows the user to concentrate on what

00:02:48,060 --> 00:02:51,629
well they want to do because we firmly

00:02:50,129 --> 00:02:52,769
believe that the user does not sit in

00:02:51,629 --> 00:02:54,329
front of the computer because they like

00:02:52,769 --> 00:02:56,760
to sit in front of the computer I'm sure

00:02:54,329 --> 00:02:59,160
many of us do but most people I believe

00:02:56,760 --> 00:03:00,450
or most people we believe in the genome

00:02:59,160 --> 00:03:01,799
project are sitting in front of the

00:03:00,450 --> 00:03:03,629
computer because they need to perform a

00:03:01,799 --> 00:03:05,970
task and if you interrupt them

00:03:03,629 --> 00:03:09,230
performing a task then users go to great

00:03:05,970 --> 00:03:11,909
lengths of getting back to the work so I

00:03:09,230 --> 00:03:13,560
believe that once you make the user part

00:03:11,909 --> 00:03:15,900
of your security system you're gonna

00:03:13,560 --> 00:03:17,819
have bad time you must not you know make

00:03:15,900 --> 00:03:19,230
the user make decisions that they will

00:03:17,819 --> 00:03:21,269
regret and in fact there have been

00:03:19,230 --> 00:03:23,790
studies academic studies which show that

00:03:21,269 --> 00:03:25,319
well you better throw a coin rather than

00:03:23,790 --> 00:03:29,310
letting the user decide you end up with

00:03:25,319 --> 00:03:31,410
better decisions so what is the problem

00:03:29,310 --> 00:03:34,709
about interrupting the user well I as

00:03:31,410 --> 00:03:37,019
I've said once you distract the user for

00:03:34,709 --> 00:03:40,500
they want to achieve they will want to

00:03:37,019 --> 00:03:42,000
go back to that and they click on that

00:03:40,500 --> 00:03:44,069
button on the lower right because they

00:03:42,000 --> 00:03:47,819
know that this this click makes this

00:03:44,069 --> 00:03:48,989
annoying dialog disappear so prompts are

00:03:47,819 --> 00:03:52,349
dubious in first place

00:03:48,989 --> 00:03:55,260
security prompts are just wrong I claim

00:03:52,349 --> 00:03:56,910
that you must not prompt the user or

00:03:55,260 --> 00:03:59,579
interrupt the user during their work

00:03:56,910 --> 00:04:02,519
with a security relevant prompt asking

00:03:59,579 --> 00:04:04,319
the user something worse if you're

00:04:02,519 --> 00:04:07,889
making this decision that the user took

00:04:04,319 --> 00:04:09,180
under stress permanent I claim that this

00:04:07,889 --> 00:04:10,889
is playing evil you must not do that

00:04:09,180 --> 00:04:13,919
under any circumstances if you take one

00:04:10,889 --> 00:04:16,709
thing away then it's this do not have

00:04:13,919 --> 00:04:18,000
interactive or user interaction in a way

00:04:16,709 --> 00:04:19,829
that respects the user from whatever

00:04:18,000 --> 00:04:21,479
they're doing and make this decision

00:04:19,829 --> 00:04:24,000
permanent such you prevent the user from

00:04:21,479 --> 00:04:26,130
learning how to undo this decision so

00:04:24,000 --> 00:04:28,680
don't do this what do I mean so

00:04:26,130 --> 00:04:30,180
I've brought a few example um it's it's

00:04:28,680 --> 00:04:32,580
grown projects its mum software so you

00:04:30,180 --> 00:04:33,690
know it's um I'm blaming and shaming but

00:04:32,580 --> 00:04:36,360
it's it's all off anyway

00:04:33,690 --> 00:04:37,560
it's um this is y'all know this this

00:04:36,360 --> 00:04:38,910
connection is untrusted do you want to

00:04:37,560 --> 00:04:40,320
continue any way this happens or

00:04:38,910 --> 00:04:41,790
happened when you opened your chat

00:04:40,320 --> 00:04:43,470
application you know imagine the user

00:04:41,790 --> 00:04:45,470
they want to chat they open the chat

00:04:43,470 --> 00:04:48,150
application and they're being asked

00:04:45,470 --> 00:04:49,440
you've all you've opened this chat

00:04:48,150 --> 00:04:52,110
application you really want to open or

00:04:49,440 --> 00:04:53,580
rather not have you know decided that

00:04:52,110 --> 00:04:55,380
you within this 20 milliseconds that

00:04:53,580 --> 00:04:56,970
I've lowered it took to load the style

00:04:55,380 --> 00:05:01,260
of you now not want to open the chat

00:04:56,970 --> 00:05:03,930
application mmm I mean I sympathize with

00:05:01,260 --> 00:05:06,300
the with the developers of like using

00:05:03,930 --> 00:05:08,250
this user interaction because it's like

00:05:06,300 --> 00:05:10,350
a relatively cheap way of alerting the

00:05:08,250 --> 00:05:12,840
user and you know pushing off

00:05:10,350 --> 00:05:14,010
responsibility bottom well I could talk

00:05:12,840 --> 00:05:15,360
about this at great length but we don't

00:05:14,010 --> 00:05:18,060
have time for that so there's some

00:05:15,360 --> 00:05:19,680
another one which I which I liked your

00:05:18,060 --> 00:05:21,090
software or this off is just a package

00:05:19,680 --> 00:05:23,880
installed like some software

00:05:21,090 --> 00:05:24,900
installation thingy and it says it tells

00:05:23,880 --> 00:05:26,430
you that the software you've just

00:05:24,900 --> 00:05:29,520
downloaded isn't signed and it's not

00:05:26,430 --> 00:05:30,930
trusted by a provider and so on and we

00:05:29,520 --> 00:05:32,310
can make sense out of that because we're

00:05:30,930 --> 00:05:34,680
in the security devil you know we're the

00:05:32,310 --> 00:05:36,390
experts in the field bottom I have

00:05:34,680 --> 00:05:37,920
parents and they you know they want to

00:05:36,390 --> 00:05:40,040
use the computer to send me an email

00:05:37,920 --> 00:05:43,020
preferably in Tripoli and so on but um

00:05:40,040 --> 00:05:44,760
this is this get rich this doesn't make

00:05:43,020 --> 00:05:46,380
any sense like how would they know

00:05:44,760 --> 00:05:49,050
without you know the software's frosted

00:05:46,380 --> 00:05:51,420
or not I don't have any clue you know

00:05:49,050 --> 00:05:53,520
this is my absolute favorite it's um you

00:05:51,420 --> 00:05:54,990
know you get this prompt and it says

00:05:53,520 --> 00:05:56,100
Albert's found a new update which speaks

00:05:54,990 --> 00:05:57,720
is your problem please run before

00:05:56,100 --> 00:06:00,230
submitting the bug pecan update - -

00:05:57,720 --> 00:06:04,020
report - wrecking Abel and then yes

00:06:00,230 --> 00:06:07,500
what like so it's a terrible right yeah

00:06:04,020 --> 00:06:10,980
I I think we can generalize this into if

00:06:07,500 --> 00:06:12,680
you have a security system and you

00:06:10,980 --> 00:06:15,900
require the user to do anything with it

00:06:12,680 --> 00:06:17,670
that's fine but be ready to lose half of

00:06:15,900 --> 00:06:21,230
the audience for half of your user base

00:06:17,670 --> 00:06:23,220
with every single click or keystroke and

00:06:21,230 --> 00:06:25,350
because we're at plus them I thought

00:06:23,220 --> 00:06:28,430
it'd be funny to show you this does

00:06:25,350 --> 00:06:30,450
anybody remember or know what this is

00:06:28,430 --> 00:06:33,330
he's signing yeah what do these people

00:06:30,450 --> 00:06:34,470
do like like what do they actually do

00:06:33,330 --> 00:06:38,820
yes they do keys hanging about what do

00:06:34,470 --> 00:06:39,940
they do yeah they like walk along each

00:06:38,820 --> 00:06:41,770
other and they mumble finger

00:06:39,940 --> 00:06:43,120
like these hexadecimal numbers and you

00:06:41,770 --> 00:06:44,350
know it takes ages and it's awful

00:06:43,120 --> 00:06:45,910
because it's cold because it's February

00:06:44,350 --> 00:06:48,190
you know and like in the middle of

00:06:45,910 --> 00:06:49,630
Europe it's like cold and then you get

00:06:48,190 --> 00:06:51,130
home and then you're not sure what you

00:06:49,630 --> 00:06:55,510
know what you're actually read and so on

00:06:51,130 --> 00:06:57,520
that's a terrible and um well if we've

00:06:55,510 --> 00:06:59,260
also fixed that I think so there's no

00:06:57,520 --> 00:07:00,610
sign but we're not here to talk about no

00:06:59,260 --> 00:07:02,800
peace end but that's the mindset right

00:07:00,610 --> 00:07:04,330
you're trying to reduce all this all

00:07:02,800 --> 00:07:07,480
these things that security people came

00:07:04,330 --> 00:07:11,410
up with by something that will hopefully

00:07:07,480 --> 00:07:16,120
be able to be used by you know normal

00:07:11,410 --> 00:07:19,270
people so that's the general mindset of

00:07:16,120 --> 00:07:21,610
why I think or we think we're in a good

00:07:19,270 --> 00:07:23,140
position and now I'm very excited to

00:07:21,610 --> 00:07:28,030
hear Ludovico talk about the actual use

00:07:23,140 --> 00:07:33,090
be stopped so I stopped we say the USB

00:07:28,030 --> 00:07:35,500
devices are everywhere and the users

00:07:33,090 --> 00:07:41,010
maybe most of the time don't think that

00:07:35,500 --> 00:07:45,520
USB is a threat to their computer and

00:07:41,010 --> 00:07:49,660
maybe even the most common scenario is

00:07:45,520 --> 00:07:51,820
when a user lock his computer it goes to

00:07:49,660 --> 00:07:56,190
the bathroom and it leaves the computer

00:07:51,820 --> 00:07:59,500
unattended in this scenario the USB

00:07:56,190 --> 00:08:03,910
ports are still running so someone can

00:07:59,500 --> 00:08:09,550
pass by and plug malicious USB device to

00:08:03,910 --> 00:08:14,200
the computer and most of the time users

00:08:09,550 --> 00:08:19,560
are not aware of this and so USB devices

00:08:14,200 --> 00:08:23,830
can be really dangerous for example just

00:08:19,560 --> 00:08:30,160
the recent screenshot of the CVE list

00:08:23,830 --> 00:08:34,660
for yes be related to USB it's more as

00:08:30,160 --> 00:08:36,479
more than two hundred entries and the

00:08:34,660 --> 00:08:43,750
most famous

00:08:36,479 --> 00:08:49,240
attack - yes be using USB device is the

00:08:43,750 --> 00:08:52,000
bad USB where malicious device it's just

00:08:49,240 --> 00:08:53,769
it was just a pendrive but it also

00:08:52,000 --> 00:08:55,929
advertised itself

00:08:53,769 --> 00:08:59,949
as a keyboard so when you plug this

00:08:55,929 --> 00:09:04,779
device in it can act as a keyboard and

00:08:59,949 --> 00:09:12,459
enter keystrokes automatically so this

00:09:04,779 --> 00:09:16,980
is a CV that we tries to demo and this

00:09:12,459 --> 00:09:22,899
is a VM of Ubuntu 1404 because the CV is

00:09:16,980 --> 00:09:28,540
2 years old and just using specially

00:09:22,899 --> 00:09:34,299
crafted USB device like this it's an

00:09:28,540 --> 00:09:37,959
Arduino do not look lonely it advertises

00:09:34,299 --> 00:09:41,379
itself as a MIDI keyboard that has a bug

00:09:37,959 --> 00:09:44,559
in this particular kernel version and

00:09:41,379 --> 00:09:48,989
just plugging this device in this

00:09:44,559 --> 00:09:53,160
computer it will create a kernel panic

00:09:48,989 --> 00:09:57,220
this can also be exploited to gain a

00:09:53,160 --> 00:09:59,230
root shell in this computer so in this

00:09:57,220 --> 00:10:02,410
case it's just it's just I cannot panic

00:09:59,230 --> 00:10:03,639
that it can be even worse from a MIDI

00:10:02,410 --> 00:10:06,639
keyboard what's the last time you've

00:10:03,639 --> 00:10:08,709
attached a MIDI keyboard so there any

00:10:06,639 --> 00:10:10,209
USB device has the privilege of loading

00:10:08,709 --> 00:10:12,129
any kernel driver that you've installed

00:10:10,209 --> 00:10:14,559
on your system turns out that if you

00:10:12,129 --> 00:10:16,480
have a general-purpose distribution well

00:10:14,559 --> 00:10:19,059
then you have all the drivers that have

00:10:16,480 --> 00:10:20,559
ever been written for Linux ever and

00:10:19,059 --> 00:10:21,879
turns out that this is quite a large

00:10:20,559 --> 00:10:26,970
code base your tech surface is very

00:10:21,879 --> 00:10:30,339
large in this case yeah that's right and

00:10:26,970 --> 00:10:35,049
what other people already did to

00:10:30,339 --> 00:10:37,899
mitigate this USB problem well for

00:10:35,049 --> 00:10:42,100
example in Windows there is a Kaspersky

00:10:37,899 --> 00:10:44,799
that lets you enable USB protection and

00:10:42,100 --> 00:10:47,379
every time you plug a new device you'll

00:10:44,799 --> 00:10:51,989
get this prompt with a pin that you need

00:10:47,379 --> 00:10:58,360
to enter with the newly plug device and

00:10:51,989 --> 00:11:02,470
it's confirmation that you are willingly

00:10:58,360 --> 00:11:04,860
planning keyboard or mouse in your

00:11:02,470 --> 00:11:04,860
computer

00:11:06,209 --> 00:11:15,660
this is a USB garden it's this is the UI

00:11:11,160 --> 00:11:20,369
of USB garden it lists all the currently

00:11:15,660 --> 00:11:24,929
plugged in USB devices and it says if

00:11:20,369 --> 00:11:30,079
they are allowed or or blocked in the

00:11:24,929 --> 00:11:34,769
current state and this is the related

00:11:30,079 --> 00:11:38,819
setting page of USB guard where you can

00:11:34,769 --> 00:11:46,259
set the default action for new USB

00:11:38,819 --> 00:11:48,869
devices and the timeout other stuff in

00:11:46,259 --> 00:11:53,970
practice when you plug a new device you

00:11:48,869 --> 00:11:58,649
get this pop-up right here it has a

00:11:53,970 --> 00:12:00,619
bunch of numbers and letters it says the

00:11:58,649 --> 00:12:05,129
serial number the name of the device

00:12:00,619 --> 00:12:07,769
this is the USB class and you have 23

00:12:05,129 --> 00:12:11,850
seconds to decide if you want to allow

00:12:07,769 --> 00:12:14,610
it or block and if you don't act in this

00:12:11,850 --> 00:12:16,980
23 seconds this pop-up will go away and

00:12:14,610 --> 00:12:25,799
you have this USB device that will not

00:12:16,980 --> 00:12:29,999
work this is yes big unknown it's better

00:12:25,799 --> 00:12:32,910
attempt to managing USB protection it

00:12:29,999 --> 00:12:35,429
still lists all the USB devices that you

00:12:32,910 --> 00:12:37,619
have and when you plug a new device

00:12:35,429 --> 00:12:39,720
you'll get notification better

00:12:37,619 --> 00:12:44,549
integrated in the system with the allow

00:12:39,720 --> 00:12:47,059
or block button but still in this case

00:12:44,549 --> 00:12:52,170
user needs to decide what you do and

00:12:47,059 --> 00:12:57,029
also if you don't press any of these two

00:12:52,170 --> 00:12:59,459
buttons in maybe 5-10 seconds this

00:12:57,029 --> 00:13:04,009
notification will go away and you will

00:12:59,459 --> 00:13:04,009
not be able to see these buttons anymore

00:13:06,260 --> 00:13:26,700
now this the new plaque yeah the new

00:13:24,120 --> 00:13:36,960
plug-in device is blocked until you

00:13:26,700 --> 00:13:45,270
press allow so in any other in Mouse

00:13:36,960 --> 00:13:47,480
rebirths already connected you cannot if

00:13:45,270 --> 00:13:49,530
they are authorized that good time yes

00:13:47,480 --> 00:13:51,810
so for the internet there have been many

00:13:49,530 --> 00:13:53,280
comments around whether this dialog now

00:13:51,810 --> 00:13:55,770
could be used from this malicious

00:13:53,280 --> 00:13:58,400
keyboard that you just plug in the

00:13:55,770 --> 00:14:13,260
answers we get back to that in a few

00:13:58,400 --> 00:14:16,050
clone USB device so yeah this is just

00:14:13,260 --> 00:14:19,410
numbers advertised by the device itself

00:14:16,050 --> 00:14:20,850
so you can clone them and if you know

00:14:19,410 --> 00:14:24,890
that particular device is already

00:14:20,850 --> 00:14:31,950
authorized that you can clone this

00:14:24,890 --> 00:14:34,650
device with yours so then we go here

00:14:31,950 --> 00:14:39,480
where even just installing USB guard

00:14:34,650 --> 00:14:41,820
with its UI a bunch of users completely

00:14:39,480 --> 00:14:45,930
blocked its their cell from it's very

00:14:41,820 --> 00:14:49,560
secure system yeah in this case and they

00:14:45,930 --> 00:14:52,090
are completely protected from malicious

00:14:49,560 --> 00:14:58,650
USB devices

00:14:52,090 --> 00:15:01,660
so our attempt here is the we have a few

00:14:58,650 --> 00:15:04,930
takeaways here and the first one is that

00:15:01,660 --> 00:15:09,130
we don't want to lock users out from

00:15:04,930 --> 00:15:14,850
their system and we tried the UH

00:15:09,130 --> 00:15:19,660
approach where is that we incrementally

00:15:14,850 --> 00:15:22,180
build the protection so we started from

00:15:19,660 --> 00:15:25,390
a simple simple cases and then we grow

00:15:22,180 --> 00:15:28,330
glue it up for example the first step

00:15:25,390 --> 00:15:33,850
was a switch on/off where you can

00:15:28,330 --> 00:15:38,290
disable all new USB devices and this was

00:15:33,850 --> 00:15:42,100
related to simple use case where the

00:15:38,290 --> 00:15:44,890
user may be the they go they they want

00:15:42,100 --> 00:15:47,830
to go for a travel and so they bring

00:15:44,890 --> 00:15:52,540
their laptop with them and they want to

00:15:47,830 --> 00:15:55,750
be secure against USB devices that some

00:15:52,540 --> 00:15:58,900
user may plug in their laptop so they

00:15:55,750 --> 00:16:02,830
just turn on the protection and no USB

00:15:58,900 --> 00:16:07,510
devices will be allowed then more

00:16:02,830 --> 00:16:11,350
smarter protection it's why lock screen

00:16:07,510 --> 00:16:14,500
is on in this case if the lock screen of

00:16:11,350 --> 00:16:17,410
your computer is on then no USB devices

00:16:14,500 --> 00:16:20,290
will be allowed if the lock screen is

00:16:17,410 --> 00:16:23,260
off then you can plug in USB devices and

00:16:20,290 --> 00:16:26,320
this is because if your lock screen is

00:16:23,260 --> 00:16:28,330
on maybe it's because you are not in

00:16:26,320 --> 00:16:31,990
front of your computer so you don't want

00:16:28,330 --> 00:16:34,950
to plug new devices and the first step

00:16:31,990 --> 00:16:39,400
that is still a work in progress is to

00:16:34,950 --> 00:16:43,660
treat differently the keyboards because

00:16:39,400 --> 00:16:47,320
they are one of the category more

00:16:43,660 --> 00:16:51,250
dangerous for USB because you can plug a

00:16:47,320 --> 00:16:56,590
keyboard that automatically inputs some

00:16:51,250 --> 00:17:00,060
keystrokes on your belief so this is how

00:16:56,590 --> 00:17:02,890
we present our functionality this was a

00:17:00,060 --> 00:17:05,250
concept where in the genome Control

00:17:02,890 --> 00:17:07,770
Center in the privacy

00:17:05,250 --> 00:17:15,470
we added this missile a new USB devices

00:17:07,770 --> 00:17:23,689
ro and it had a simple on/off switch and

00:17:15,470 --> 00:17:27,600
we're being hacked the second attempt

00:17:23,689 --> 00:17:30,500
for the scenario we had this drop-down

00:17:27,600 --> 00:17:32,760
menu with where you can select the

00:17:30,500 --> 00:17:35,730
protection level that you want this is

00:17:32,760 --> 00:17:41,130
like always protect or only when the

00:17:35,730 --> 00:17:47,990
lock screen is locked and this is how it

00:17:41,130 --> 00:17:50,610
currently works so it's we have this

00:17:47,990 --> 00:17:55,080
on/off switch and then you can select

00:17:50,610 --> 00:18:00,360
the production level that you want for

00:17:55,080 --> 00:18:04,080
your USB devices and it also checked the

00:18:00,360 --> 00:18:08,039
because we in the back end we use a USB

00:18:04,080 --> 00:18:11,159
guard so it checks if yes Bigard is

00:18:08,039 --> 00:18:14,970
currently available in your system and

00:18:11,159 --> 00:18:24,000
if it's not that your you cannot turn on

00:18:14,970 --> 00:18:26,970
the protection we also show an icon the

00:18:24,000 --> 00:18:30,179
top bar and letting the user know that

00:18:26,970 --> 00:18:34,500
the USB protection is currently active

00:18:30,179 --> 00:18:36,690
and also in this case if your speaker is

00:18:34,500 --> 00:18:43,950
not available or the protection is not

00:18:36,690 --> 00:18:47,460
active we don't show the icon and this

00:18:43,950 --> 00:18:51,539
is a recap I don't know if you can see

00:18:47,460 --> 00:18:54,809
this of what happens when you plug a new

00:18:51,539 --> 00:18:58,650
device in your computer if the USB

00:18:54,809 --> 00:19:04,409
protection then the device will be

00:18:58,650 --> 00:19:06,179
authorized or it will for example if you

00:19:04,409 --> 00:19:08,370
if you have your speaker and installed

00:19:06,179 --> 00:19:13,620
and manually configured or use a

00:19:08,370 --> 00:19:18,330
third-party UI for USB guard then from

00:19:13,620 --> 00:19:20,790
the NAM standpoint we don't we don't

00:19:18,330 --> 00:19:23,130
block this device we let the user do

00:19:20,790 --> 00:19:26,100
what they configured in your in their

00:19:23,130 --> 00:19:29,340
system if the USB protection is on then

00:19:26,100 --> 00:19:33,330
we as the NAM are the one that managed

00:19:29,340 --> 00:19:35,880
the yes bigger the configuration so if

00:19:33,330 --> 00:19:38,730
the protection is never block then we

00:19:35,880 --> 00:19:41,400
manually authorize the devices new

00:19:38,730 --> 00:19:45,450
devices that are plugged in the system

00:19:41,400 --> 00:19:48,090
if you have blocked with rocks screen

00:19:45,450 --> 00:19:51,420
then we check if the lock screen is

00:19:48,090 --> 00:19:53,400
active if the lock screen is not active

00:19:51,420 --> 00:19:57,200
then we authorize device if the lock

00:19:53,400 --> 00:20:02,250
screen is active we added this extra

00:19:57,200 --> 00:20:04,110
check about keyboards and we check if

00:20:02,250 --> 00:20:07,950
the plug the device is a keyboard

00:20:04,110 --> 00:20:10,170
because if for example your main

00:20:07,950 --> 00:20:13,410
keyboard breaks and you have the

00:20:10,170 --> 00:20:17,790
protection enabled then you are unable

00:20:13,410 --> 00:20:19,830
to plug new a new keyboard in your

00:20:17,790 --> 00:20:24,710
system and you are basically locked out

00:20:19,830 --> 00:20:28,440
of your system yeah so in this check we

00:20:24,710 --> 00:20:30,810
control if the keyboard that you are

00:20:28,440 --> 00:20:35,010
trying to plug is the only available

00:20:30,810 --> 00:20:37,890
keyboard in your system if it is then we

00:20:35,010 --> 00:20:44,700
authorize the keyboard even if the

00:20:37,890 --> 00:20:49,800
protection was active this is mainly a

00:20:44,700 --> 00:20:51,810
choice we we choose that because we we

00:20:49,800 --> 00:20:55,500
are willing to compromise a bit of

00:20:51,810 --> 00:21:04,740
security in in favor of more usable

00:20:55,500 --> 00:21:06,600
system right so notice how we've tried

00:21:04,740 --> 00:21:07,740
very hard to not ask the user about

00:21:06,600 --> 00:21:12,240
whether they want to have this device

00:21:07,740 --> 00:21:15,990
attached we try to infer the intent of

00:21:12,240 --> 00:21:17,700
the user by you know by other means that

00:21:15,990 --> 00:21:22,170
we have available as the session for

00:21:17,700 --> 00:21:24,510
example to the lock screen and we hope

00:21:22,170 --> 00:21:28,170
that this provides better protection

00:21:24,510 --> 00:21:30,270
overall knowing that users will know the

00:21:28,170 --> 00:21:31,860
security solution without maybe even

00:21:30,270 --> 00:21:35,580
knowing that it exists because

00:21:31,860 --> 00:21:37,770
just works you know and we haven't

00:21:35,580 --> 00:21:39,210
finished like this is all work in

00:21:37,770 --> 00:21:40,830
progress right so if you have like

00:21:39,210 --> 00:21:42,510
comments or ideas then now is the

00:21:40,830 --> 00:21:46,080
perfect moment because we're just right

00:21:42,510 --> 00:21:47,549
now in the process of well letting all

00:21:46,080 --> 00:21:50,190
bits and pieces fall in place so that

00:21:47,549 --> 00:21:53,070
this works so if you have ideas as to

00:21:50,190 --> 00:21:54,809
you know what else needs to be done or

00:21:53,070 --> 00:21:57,840
should be done and we're all ears

00:21:54,809 --> 00:22:01,290
in for taking comments regarding what

00:21:57,840 --> 00:22:03,179
you do think them the most prominent

00:22:01,290 --> 00:22:05,040
attack that we've seen this bad news be

00:22:03,179 --> 00:22:07,980
stuff we're trying to be clever about

00:22:05,040 --> 00:22:11,190
this and try to swallow the keys that

00:22:07,980 --> 00:22:13,830
are not or that we consider to be

00:22:11,190 --> 00:22:16,980
dangerous so a keyboard well can't press

00:22:13,830 --> 00:22:19,549
all like sorts of keys right and we

00:22:16,980 --> 00:22:23,160
somehow need to deal with a keyboard

00:22:19,549 --> 00:22:24,900
pressing say alt f2 and then R or

00:22:23,160 --> 00:22:27,630
something because we wouldn't want they

00:22:24,900 --> 00:22:29,240
you know a malicious keyboard to steal

00:22:27,630 --> 00:22:33,270
our mind super high school or whatever

00:22:29,240 --> 00:22:35,160
so um we're in the progress of writing

00:22:33,270 --> 00:22:37,650
this this code and getting getting the

00:22:35,160 --> 00:22:39,360
infrastructure in place to well detect

00:22:37,650 --> 00:22:42,530
whether keystrokes have come from a

00:22:39,360 --> 00:22:45,960
keyboard that we're not well fully

00:22:42,530 --> 00:22:47,580
trusting yet maybe and yeah this is

00:22:45,960 --> 00:22:48,360
service all being developed right now as

00:22:47,580 --> 00:22:50,520
we speak

00:22:48,360 --> 00:22:51,299
so again if you have comments around

00:22:50,520 --> 00:22:53,220
this please

00:22:51,299 --> 00:22:55,980
you know approaches and let me just

00:22:53,220 --> 00:23:00,960
finish up the this last slide we have

00:22:55,980 --> 00:23:02,940
them other things that we have on the

00:23:00,960 --> 00:23:04,830
horizon the most important one probably

00:23:02,940 --> 00:23:08,220
being the USB type-c authentication so

00:23:04,830 --> 00:23:11,250
there's an in the standard is a way for

00:23:08,220 --> 00:23:13,049
use v devices to well to be

00:23:11,250 --> 00:23:16,230
authenticated so in the future USB

00:23:13,049 --> 00:23:18,030
devices will have private keys and

00:23:16,230 --> 00:23:19,650
certificates and then you know you can

00:23:18,030 --> 00:23:22,230
ask the device but it really is that

00:23:19,650 --> 00:23:24,660
device that you think it is and for

00:23:22,230 --> 00:23:27,929
battle wars' i don't see how it only

00:23:24,660 --> 00:23:31,130
would work in linux so we will have to

00:23:27,929 --> 00:23:33,660
deal with this situation eventually and

00:23:31,130 --> 00:23:37,080
well it's sort of like there's thunder

00:23:33,660 --> 00:23:39,059
bolt as well it's a very you could argue

00:23:37,080 --> 00:23:42,320
that it's very similar in what it does

00:23:39,059 --> 00:23:44,990
and how it works so we might

00:23:42,320 --> 00:23:47,810
sort of touch base with the funderbolt

00:23:44,990 --> 00:23:50,720
stuff and reuse things and bits and

00:23:47,810 --> 00:23:53,360
pieces from there another bigger problem

00:23:50,720 --> 00:23:55,460
is that we if we wanted to eventually

00:23:53,360 --> 00:23:57,140
ramp up protection capabilities as we've

00:23:55,460 --> 00:23:58,550
mentioned we want to start slowly and

00:23:57,140 --> 00:24:01,310
then incrementally build up our

00:23:58,550 --> 00:24:03,470
protection capabilities and one thing we

00:24:01,310 --> 00:24:05,510
don't know yet how to do properly is the

00:24:03,470 --> 00:24:08,540
early good phase like before our stuff

00:24:05,510 --> 00:24:11,210
even runs that's a bit you know unknown

00:24:08,540 --> 00:24:13,250
how to do that yeah with that I think

00:24:11,210 --> 00:24:14,630
we're ready to close and take questions

00:24:13,250 --> 00:24:16,430
and first we'd like to thank you for

00:24:14,630 --> 00:24:17,710
your attention and then we're happy to

00:24:16,430 --> 00:24:23,799
discuss now or later

00:24:17,710 --> 00:24:23,799
[Applause]

00:24:23,970 --> 00:24:31,710
come up in a few hands maybe uh maybe

00:24:28,590 --> 00:24:32,600
let's use the market phone for the

00:24:31,710 --> 00:24:35,460
Internet

00:24:32,600 --> 00:24:39,480
so what do you out ur eyes devices or

00:24:35,460 --> 00:24:42,240
interfaces right so us using usb guard

00:24:39,480 --> 00:24:43,830
there's only devices for now okay

00:24:42,240 --> 00:24:45,960
because Colonel now supports also

00:24:43,830 --> 00:24:48,570
interface authorization and I think it

00:24:45,960 --> 00:24:51,810
is way better because the the typical

00:24:48,570 --> 00:24:54,570
attack vector for that still exploit the

00:24:51,810 --> 00:24:56,430
same CBE would be just to provide

00:24:54,570 --> 00:24:58,410
man-in-the-middle device that will

00:24:56,430 --> 00:25:01,380
introduce with the same vendor ID

00:24:58,410 --> 00:25:05,840
product idea cetera as keyboard and odd

00:25:01,380 --> 00:25:05,840

YouTube URL: https://www.youtube.com/watch?v=lA_wMB4VxfY


