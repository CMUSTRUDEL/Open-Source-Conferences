Title: From jQuery to React Gradual migration with hybrid approach
Publication date: 2019-02-08
Playlist: FOSDEM 2019
Description: 
	by Amir Fefer

At: FOSDEM 2019
https://video.fosdem.org/2019/H.1308/jquery_react.webm


Migration from legacy javascript to react in a well existing project isn't instant or easy,
but the outcome will be worth it.
How we can combine legacy with a modern front end,
surviving the hybrid umbrella, improving application's client and enjoy coding ! The migration process from legacy javascript to react might take you some time and wouldn’t be easy, but the outcome will be worth it. 

Two years ago, the foreman project decided to adopt react and started a gradual migration process from legacy javascript (rails assets pipeline) into a modern react web app.
We’d like to share with you our journey, the do’s and don’ts 

Why we should adopt react
Where to begin - The first step
How to survive under the hybrid umbrella
Gradual process - is it good enough?
Long term goals (does SPA one of them?) 

Room: H.1308 (Rolin)
Scheduled start: 2019-02-03 11:00:00+01
Captions: 
	00:00:42,280 --> 00:00:45,280
yeah

00:00:58,040 --> 00:01:05,479
hello everybody I hope you pass a great

00:01:01,800 --> 00:01:09,000
first day event while now we have a

00:01:05,479 --> 00:01:12,210
great presentation how to migrate from

00:01:09,000 --> 00:01:14,970
jQuery to react and I think a lot of

00:01:12,210 --> 00:01:18,200
people as work to do that thank you a

00:01:14,970 --> 00:01:18,200
lot for the presentation

00:01:20,630 --> 00:01:27,450
hi everyone it's amazing to see so many

00:01:23,520 --> 00:01:30,240
people in JavaScript and so today I will

00:01:27,450 --> 00:01:32,850
talk about the process the

00:01:30,240 --> 00:01:35,280
transformation from a legacy JavaScript

00:01:32,850 --> 00:01:37,590
from server-side rendering into a more

00:01:35,280 --> 00:01:41,670
modern web application which in our case

00:01:37,590 --> 00:01:44,759
is react so first of all my name is Emil

00:01:41,670 --> 00:01:50,399
I work at reddit for more than trails

00:01:44,759 --> 00:01:53,369
and in my team we mostly focused on m4

00:01:50,399 --> 00:01:55,829
meant for manage Vaman is a open source

00:01:53,369 --> 00:01:59,820
for a management tool and to serve us

00:01:55,829 --> 00:02:02,820
physical servers and of course a neutral

00:01:59,820 --> 00:02:06,149
service so form an established in 2009

00:02:02,820 --> 00:02:08,660
and in 2009 European rails was very

00:02:06,149 --> 00:02:14,100
popular so we use the Ruby on Rails and

00:02:08,660 --> 00:02:17,820
we use server-side rendering so today

00:02:14,100 --> 00:02:20,100
I'll start with the first steps what you

00:02:17,820 --> 00:02:22,260
should do what the first step you should

00:02:20,100 --> 00:02:25,850
do in order to become in order to start

00:02:22,260 --> 00:02:28,260
this process in order to start this

00:02:25,850 --> 00:02:29,850
transformation process after that after

00:02:28,260 --> 00:02:31,680
that we'll talk about the connection how

00:02:29,850 --> 00:02:34,530
to communicate between the old one

00:02:31,680 --> 00:02:37,739
between the legacy JavaScript and the

00:02:34,530 --> 00:02:40,470
new world after that we will talk about

00:02:37,739 --> 00:02:44,579
client outing do we need flight routing

00:02:40,470 --> 00:02:47,070
in our modern application in ibrid way

00:02:44,579 --> 00:02:50,340
and after that we will wrap up things

00:02:47,070 --> 00:02:53,489
and we'll talk about long term goals so

00:02:50,340 --> 00:02:57,690
let's start from the first steps so

00:02:53,489 --> 00:02:59,910
first of all why react why use react so

00:02:57,690 --> 00:03:02,640
we have plenty of reasons for that I

00:02:59,910 --> 00:03:03,440
think the number one reason of course is

00:03:02,640 --> 00:03:07,320
perform

00:03:03,440 --> 00:03:10,110
react surrenders only they change the

00:03:07,320 --> 00:03:13,050
the components that has been changed so

00:03:10,110 --> 00:03:15,450
you're in your way web application

00:03:13,050 --> 00:03:18,920
doesn't need to read enter each time of

00:03:15,450 --> 00:03:22,380
course you can scale up things very fast

00:03:18,920 --> 00:03:24,240
due to the mechanism of components you

00:03:22,380 --> 00:03:26,280
can start from small and then you can

00:03:24,240 --> 00:03:29,910
gain some complicated components after

00:03:26,280 --> 00:03:31,740
that reactors great community and I

00:03:29,910 --> 00:03:34,950
don't have to mention that's it of

00:03:31,740 --> 00:03:37,290
course and with great packages and it's

00:03:34,950 --> 00:03:39,540
fully testable with just an answer in

00:03:37,290 --> 00:03:43,950
enzyme and you can just with one second

00:03:39,540 --> 00:03:46,230
you can write a you can write a test and

00:03:43,950 --> 00:03:48,360
of course the debugging stuff with react

00:03:46,230 --> 00:03:50,760
you can see actually you can see the

00:03:48,360 --> 00:03:53,160
code in reaction you can understand

00:03:50,760 --> 00:03:57,330
immediately what happens but with legacy

00:03:53,160 --> 00:04:00,630
JavaScript it's a bit outer to do so we

00:03:57,330 --> 00:04:04,170
might be my guest until this thing so

00:04:00,630 --> 00:04:06,720
this is our legacy one file one

00:04:04,170 --> 00:04:10,230
javascript file as you can see it's very

00:04:06,720 --> 00:04:12,090
long file more than 800 lines and it's

00:04:10,230 --> 00:04:14,490
very difficult to debug if you change

00:04:12,090 --> 00:04:18,330
something you if you change that jQuery

00:04:14,490 --> 00:04:22,290
stuff other functions can be you know M

00:04:18,330 --> 00:04:24,540
we change as well so it's really

00:04:22,290 --> 00:04:26,970
difficult it's very frustrating to debug

00:04:24,540 --> 00:04:29,280
to debug this file from even to change

00:04:26,970 --> 00:04:31,440
things small things or you want to do

00:04:29,280 --> 00:04:35,250
some refactoring it's really frustrating

00:04:31,440 --> 00:04:40,320
to do so that's the major reason we did

00:04:35,250 --> 00:04:44,640
that transformation so our approach is

00:04:40,320 --> 00:04:48,590
start from small which means bottom-up

00:04:44,640 --> 00:04:52,380
approach start from basic components

00:04:48,590 --> 00:04:54,210
such as buttons input and you can gather

00:04:52,380 --> 00:04:57,530
these components and you compose it from

00:04:54,210 --> 00:05:00,240
this component much more of course

00:04:57,530 --> 00:05:01,830
complicated components and with this

00:05:00,240 --> 00:05:04,200
compare accompanying complicate

00:05:01,830 --> 00:05:08,400
components of course you can reach and

00:05:04,200 --> 00:05:11,669
have a fully expect so that I will still

00:05:08,400 --> 00:05:15,440
that's our mmm logic start from small

00:05:11,669 --> 00:05:15,440
and then of course scale up

00:05:15,559 --> 00:05:21,019
but first let's imagine we just wrote a

00:05:18,559 --> 00:05:23,089
baton component we need to combine this

00:05:21,019 --> 00:05:25,309
component component in our hobby on

00:05:23,089 --> 00:05:28,459
Rails page so we need some sort of

00:05:25,309 --> 00:05:31,369
mounting mechanism to put a new code M

00:05:28,459 --> 00:05:35,419
say a client client code client

00:05:31,369 --> 00:05:37,429
rendering code in our in our Google read

00:05:35,419 --> 00:05:40,729
page so we need to use some sort of

00:05:37,429 --> 00:05:45,409
mounting mechanism so we have that

00:05:40,729 --> 00:05:48,229
function that mount and the component we

00:05:45,409 --> 00:05:50,269
want to put in our organ wells page but

00:05:48,229 --> 00:05:53,179
first we need of course a register in

00:05:50,269 --> 00:05:55,069
order to register that component so we

00:05:53,179 --> 00:05:57,109
have a component registering so let's

00:05:55,069 --> 00:06:03,229
imagine we have that button I mentioned

00:05:57,109 --> 00:06:06,439
before and I just need to edit to my to

00:06:03,229 --> 00:06:10,069
our LM object to our register and then

00:06:06,439 --> 00:06:14,629
we can mount it with the mountain so the

00:06:10,069 --> 00:06:20,589
mountain as you can see you is a woman

00:06:14,629 --> 00:06:23,179
trellis model and with that we can mount

00:06:20,589 --> 00:06:25,039
components we can mount a react

00:06:23,179 --> 00:06:28,309
components in our well Bobby enhance

00:06:25,039 --> 00:06:30,409
page so that's great but instead of

00:06:28,309 --> 00:06:34,039
course to write your own components from

00:06:30,409 --> 00:06:35,959
scratch you can use other libraries so I

00:06:34,039 --> 00:06:38,719
don't know if you familiar with react

00:06:35,959 --> 00:06:41,629
bootstrap but it's really well famous

00:06:38,719 --> 00:06:44,179
and of course we use and we contribute

00:06:41,629 --> 00:06:46,789
to pattern fly so if you if you have

00:06:44,179 --> 00:06:50,089
enterprise applications butterfly can

00:06:46,789 --> 00:06:51,739
give you really nice design and really

00:06:50,089 --> 00:06:57,019
nice components and it's open source of

00:06:51,739 --> 00:06:59,149
course so this is the first step you

00:06:57,019 --> 00:07:01,369
should do you should have some sort of

00:06:59,149 --> 00:07:02,989
registry and of course the mountain

00:07:01,369 --> 00:07:04,999
mountain mechanism to mount your

00:07:02,989 --> 00:07:07,579
components are about the way to

00:07:04,999 --> 00:07:09,169
communicate between these walls between

00:07:07,579 --> 00:07:12,529
the old world and the new world how we

00:07:09,169 --> 00:07:15,609
can communicate between these so we use

00:07:12,529 --> 00:07:19,759
for that task we use redux and why redux

00:07:15,609 --> 00:07:21,379
because relax is very easy to understand

00:07:19,759 --> 00:07:23,659
what's happening and of course with read

00:07:21,379 --> 00:07:26,269
relax you can access to the store the

00:07:23,659 --> 00:07:29,330
store is your client data it's like your

00:07:26,269 --> 00:07:32,840
massive data store for of your client

00:07:29,330 --> 00:07:34,970
and if you can invoke actions and when

00:07:32,840 --> 00:07:36,979
you in constant actions you can change

00:07:34,970 --> 00:07:39,590
the store and if the store has been

00:07:36,979 --> 00:07:41,840
changed and it forced the component to

00:07:39,590 --> 00:07:44,360
be rendered so with this we can control

00:07:41,840 --> 00:07:46,460
our components and of course we can

00:07:44,360 --> 00:07:51,490
subscribe the store for changes and we

00:07:46,460 --> 00:07:54,470
can call a specific comic so we use a

00:07:51,490 --> 00:07:58,699
special object a global object in order

00:07:54,470 --> 00:08:01,520
to be the glue between these layers so

00:07:58,699 --> 00:08:05,990
as you can see in each entry here can be

00:08:01,520 --> 00:08:08,419
just an es6 function or can be action

00:08:05,990 --> 00:08:10,759
that we can invoke later but as you can

00:08:08,419 --> 00:08:14,150
see here we have I am we have them

00:08:10,759 --> 00:08:15,440
subscribe so we can subscribe and to the

00:08:14,150 --> 00:08:17,659
store if so if the stolen has been

00:08:15,440 --> 00:08:19,699
changed we can do it we can make run

00:08:17,659 --> 00:08:23,690
some callbacks or we can gain some data

00:08:19,699 --> 00:08:26,210
from the store so for example this is a

00:08:23,690 --> 00:08:28,069
page in our application so this one the

00:08:26,210 --> 00:08:31,129
layout as you can see the menu here and

00:08:28,069 --> 00:08:34,250
the top bar here is fully based on the

00:08:31,129 --> 00:08:36,380
act and as well as the bread come as you

00:08:34,250 --> 00:08:41,029
can see is still is it's a real

00:08:36,380 --> 00:08:44,170
component but benefit this area is not

00:08:41,029 --> 00:08:48,410
react code this area is a server-side

00:08:44,170 --> 00:08:49,790
rendering ob/ob onwards so in order come

00:08:48,410 --> 00:08:54,079
code in order to communicate between

00:08:49,790 --> 00:08:55,970
these bread crumbs and this thing as you

00:08:54,079 --> 00:08:59,360
can see it's the same and we need a way

00:08:55,970 --> 00:09:03,079
to communicate between these so we use

00:08:59,360 --> 00:09:07,790
that ecosystem we use that mechanism so

00:09:03,079 --> 00:09:12,110
as you can see this is M this is the

00:09:07,790 --> 00:09:14,810
file which we import the store we import

00:09:12,110 --> 00:09:18,770
a specific action that change the bread

00:09:14,810 --> 00:09:22,010
comes title and then we can just invoke

00:09:18,770 --> 00:09:24,880
that we can create a function that

00:09:22,010 --> 00:09:28,490
invoke that dispatched that action and

00:09:24,880 --> 00:09:31,279
with this we can actually change the

00:09:28,490 --> 00:09:34,310
bread connect the react component so as

00:09:31,279 --> 00:09:37,880
you can see here we can as you can see

00:09:34,310 --> 00:09:40,910
will use that function of the title

00:09:37,880 --> 00:09:43,189
angel imager in a legacy Java Script so

00:09:40,910 --> 00:09:46,489
it's jQuery and we

00:09:43,189 --> 00:09:51,559
just apply the react things in jQuery

00:09:46,489 --> 00:09:55,189
code in legacy code so another thing as

00:09:51,559 --> 00:09:57,980
you can see here we can subscribe to the

00:09:55,189 --> 00:10:01,819
store and if the store has been changed

00:09:57,980 --> 00:10:05,739
we can run this go back and this

00:10:01,819 --> 00:10:09,920
callback allows us to reach the store

00:10:05,739 --> 00:10:13,009
check the last action and check checks

00:10:09,920 --> 00:10:16,100
if there's some arrows and if we can

00:10:13,009 --> 00:10:19,730
just alter and change our legacy code I

00:10:16,100 --> 00:10:21,860
will set aside run a server-side

00:10:19,730 --> 00:10:24,980
rendering code so as you can see even

00:10:21,860 --> 00:10:28,129
here I use jQuery and I altered I change

00:10:24,980 --> 00:10:30,860
my legacy code I cannot change react

00:10:28,129 --> 00:10:33,110
code with this I can just I can change

00:10:30,860 --> 00:10:35,059
only legacy code because with react I

00:10:33,110 --> 00:10:36,589
have access to the actual Dom and I

00:10:35,059 --> 00:10:39,069
don't have access to the built rodham

00:10:36,589 --> 00:10:42,290
and we'll talk about that later

00:10:39,069 --> 00:10:46,160
what about the opposite way what about

00:10:42,290 --> 00:10:49,779
how we can use jQuery inside of our

00:10:46,160 --> 00:10:53,600
react component do we need it at all so

00:10:49,779 --> 00:10:56,449
sometimes you do need it in our case we

00:10:53,600 --> 00:10:59,480
use select to select to is extendable

00:10:56,449 --> 00:11:01,129
jQuery and a nice one really nice one

00:10:59,480 --> 00:11:04,220
which gives you a lot of features in

00:11:01,129 --> 00:11:06,740
your selects and we decided in order to

00:11:04,220 --> 00:11:09,860
keep our application unified we decided

00:11:06,740 --> 00:11:13,249
to use select to jQuery extensions in

00:11:09,860 --> 00:11:16,999
our selects even in selecting react so

00:11:13,249 --> 00:11:18,350
let's see first how does it work so as I

00:11:16,999 --> 00:11:20,299
mentioned before we have the view to

00:11:18,350 --> 00:11:22,579
album and we have the actual Dom so we

00:11:20,299 --> 00:11:24,860
act uses the veto atom and we need some

00:11:22,579 --> 00:11:27,139
reference in order to reference the

00:11:24,860 --> 00:11:30,499
actual Dom we need some we need the

00:11:27,139 --> 00:11:34,999
pointer to point to the actual Dom so

00:11:30,499 --> 00:11:38,149
lucky us we have reactive so we act ref

00:11:34,999 --> 00:11:42,470
is it's a really nice thing that we are

00:11:38,149 --> 00:11:46,669
gives us and as you can see here this

00:11:42,470 --> 00:11:52,790
thing the this dot select is a reference

00:11:46,669 --> 00:11:55,740
to the actual Dom so I can I can apply

00:11:52,790 --> 00:11:58,110
jQuery function form we are component

00:11:55,740 --> 00:12:00,060
so this is select as you can see it's a

00:11:58,110 --> 00:12:07,320
rapid forward I will select in our

00:12:00,060 --> 00:12:10,740
application so this this dot select is

00:12:07,320 --> 00:12:15,360
the reference and now we can initialize

00:12:10,740 --> 00:12:19,730
that reference so as you can see here I

00:12:15,360 --> 00:12:23,400
have the ref inside the select input and

00:12:19,730 --> 00:12:26,970
then I put the dot select which is the

00:12:23,400 --> 00:12:30,360
actual dome I put it in this in this

00:12:26,970 --> 00:12:32,820
object so now I have a reference to my

00:12:30,360 --> 00:12:35,610
actual Dominic I can apply jQuery

00:12:32,820 --> 00:12:37,080
function inside of it so that's the

00:12:35,610 --> 00:12:42,900
opposite way and sometimes you need it

00:12:37,080 --> 00:12:46,010
so that's about how you can connect how

00:12:42,900 --> 00:12:48,780
you can communicate between the odd and

00:12:46,010 --> 00:12:51,660
between the meal between the these words

00:12:48,780 --> 00:12:53,550
and it's very important because when

00:12:51,660 --> 00:12:55,050
you've started to do that process you

00:12:53,550 --> 00:12:56,910
don't realize your entire application in

00:12:55,050 --> 00:12:59,630
one day so it's really important to have

00:12:56,910 --> 00:13:02,510
some sort of communication

00:12:59,630 --> 00:13:06,360
what about line counting do we need a

00:13:02,510 --> 00:13:09,530
Clyde outing in our hybrid approach so

00:13:06,360 --> 00:13:13,350
in Ruby on Rails we use two blinks and

00:13:09,530 --> 00:13:15,900
two blinks in fact mimics the feeling

00:13:13,350 --> 00:13:19,680
the feeling looks of SPI a single page

00:13:15,900 --> 00:13:23,640
application so how does it work in few

00:13:19,680 --> 00:13:25,500
words two blinks just swap and the body

00:13:23,640 --> 00:13:28,260
elements between a new page and an old

00:13:25,500 --> 00:13:31,920
page instead of of course full page load

00:13:28,260 --> 00:13:35,310
and it's it's making its macro loading

00:13:31,920 --> 00:13:37,550
faster a bit so you have the feeling

00:13:35,310 --> 00:13:40,950
that you have a single page application

00:13:37,550 --> 00:13:43,890
but what about combining the two blinks

00:13:40,950 --> 00:13:46,440
and react does it work together so we

00:13:43,890 --> 00:13:48,900
try that and yes it worked together but

00:13:46,440 --> 00:13:51,600
what if you have plenty of real

00:13:48,900 --> 00:13:53,610
components in your page it's basically

00:13:51,600 --> 00:13:56,400
based on your components so you don't

00:13:53,610 --> 00:13:59,310
have any server-side rendering so in

00:13:56,400 --> 00:14:02,670
that case do we have some benefits from

00:13:59,310 --> 00:14:06,510
turbo links and the answer for that is

00:14:02,670 --> 00:14:07,040
not really so we decided we looked into

00:14:06,510 --> 00:14:08,990
something

00:14:07,040 --> 00:14:12,769
else that will give that some benefits

00:14:08,990 --> 00:14:15,079
so that tool is react router but wait a

00:14:12,769 --> 00:14:18,620
minute we have server-side rendering we

00:14:15,079 --> 00:14:20,990
use this organize and whatever so how

00:14:18,620 --> 00:14:25,579
does it how this can work in our

00:14:20,990 --> 00:14:30,649
application so we do some research we do

00:14:25,579 --> 00:14:34,160
a TOC and we manage to combine these two

00:14:30,649 --> 00:14:40,220
we managed to combine between client and

00:14:34,160 --> 00:14:43,610
server-side routing so how we do that so

00:14:40,220 --> 00:14:45,290
we use react controller a specific

00:14:43,610 --> 00:14:48,259
controller that you can inherit after

00:14:45,290 --> 00:14:50,300
that and that react controller is

00:14:48,259 --> 00:14:52,370
rendering a specific rock cloud layout

00:14:50,300 --> 00:14:54,110
which is still in the server side area

00:14:52,370 --> 00:14:57,230
which is very small it's very lean

00:14:54,110 --> 00:14:59,540
layout it's not the the layout you knows

00:14:57,230 --> 00:15:01,910
with you familiar with the luminance

00:14:59,540 --> 00:15:05,980
it's really really merely small layout

00:15:01,910 --> 00:15:09,199
and after that in the clients we have

00:15:05,980 --> 00:15:12,260
good component which wrap your a

00:15:09,199 --> 00:15:13,760
component and of course we have a

00:15:12,260 --> 00:15:16,490
switcher to switch to distinguish

00:15:13,760 --> 00:15:21,920
between pages to enter the right page

00:15:16,490 --> 00:15:25,160
and of course if it's not react page we

00:15:21,920 --> 00:15:27,019
should say we should attack the real

00:15:25,160 --> 00:15:29,899
page we should render the page from the

00:15:27,019 --> 00:15:32,510
server so we should use some sort of

00:15:29,899 --> 00:15:34,190
mechanism for server-side rendering and

00:15:32,510 --> 00:15:41,569
clients and client-side rendering

00:15:34,190 --> 00:15:44,060
together so this is our hood as you can

00:15:41,569 --> 00:15:46,940
see the router is wrapped our layout as

00:15:44,060 --> 00:15:50,689
you as you see before and this is our

00:15:46,940 --> 00:15:53,000
switcher and with this switch we can

00:15:50,689 --> 00:15:55,550
switch between our pages so the switcher

00:15:53,000 --> 00:15:56,769
looks so the switcher looks something

00:15:55,550 --> 00:16:00,470
like that

00:15:56,769 --> 00:16:03,620
so I have the switch you and I iterate

00:16:00,470 --> 00:16:07,850
over that my entire route as you can see

00:16:03,620 --> 00:16:10,850
you and my routes and by the way these

00:16:07,850 --> 00:16:12,350
routes are only the client routes not

00:16:10,850 --> 00:16:15,680
will be on that is not the server side

00:16:12,350 --> 00:16:20,330
routes so if I have a page which I would

00:16:15,680 --> 00:16:24,020
like to enter in a client rendering I

00:16:20,330 --> 00:16:26,510
this in this loud object and then as you

00:16:24,020 --> 00:16:29,300
can see I handle it with a client-side

00:16:26,510 --> 00:16:33,020
rendering but what happens if that page

00:16:29,300 --> 00:16:35,390
is not react what happens if my local my

00:16:33,020 --> 00:16:39,740
location my current location is not a

00:16:35,390 --> 00:16:42,110
react based so I have a default route as

00:16:39,740 --> 00:16:45,590
you can see you and with the default

00:16:42,110 --> 00:16:48,590
route I just use two blinks as you can

00:16:45,590 --> 00:16:51,860
see you and then a server-side rendering

00:16:48,590 --> 00:16:53,240
appeals so we have a client side we have

00:16:51,860 --> 00:16:56,330
the client-side rendering and we have a

00:16:53,240 --> 00:17:00,740
server-side render together mix so we

00:16:56,330 --> 00:17:03,080
benefit with these boards so I would

00:17:00,740 --> 00:17:05,780
like to show you a demonstration for of

00:17:03,080 --> 00:17:08,900
that and first of all please have a look

00:17:05,780 --> 00:17:11,890
on a page with two blinks none with no

00:17:08,900 --> 00:17:11,890
two area total

00:17:20,329 --> 00:17:22,929
yeah

00:17:40,420 --> 00:17:43,020
so

00:17:44,310 --> 00:17:52,050
so city as you can see them the spinner

00:17:49,620 --> 00:17:54,210
here and you can see that this page is a

00:17:52,050 --> 00:17:56,370
tip it's not a single page application

00:17:54,210 --> 00:18:01,850
it's not single page application

00:17:56,370 --> 00:18:01,850
behavior so let's have a look

00:18:07,680 --> 00:18:15,860
oops it's skipped a bit with react

00:18:13,620 --> 00:18:15,860
router

00:18:19,750 --> 00:18:25,139
the same page is almost instant

00:18:33,520 --> 00:18:36,270
so

00:18:39,270 --> 00:18:44,370
as you think it's really amazing to use

00:18:42,540 --> 00:18:47,160
the attractor even if you have most of

00:18:44,370 --> 00:18:50,520
your page are based on your server side

00:18:47,160 --> 00:18:52,679
rendering so you can scale up it you can

00:18:50,520 --> 00:18:55,140
scare up things and start from small

00:18:52,679 --> 00:18:59,570
start from one react page and after that

00:18:55,140 --> 00:19:04,500
you can have you know when you have that

00:18:59,570 --> 00:19:06,300
feeling in your application I bet him so

00:19:04,500 --> 00:19:08,790
it's only a matter of time that you use

00:19:06,300 --> 00:19:11,390
this kind of pages you use this

00:19:08,790 --> 00:19:15,360
technology so for length long term goals

00:19:11,390 --> 00:19:17,250
is that good enough so it's not a

00:19:15,360 --> 00:19:19,050
question of fees it's not it's not that

00:19:17,250 --> 00:19:23,940
good that the question is something else

00:19:19,050 --> 00:19:26,160
the question is however you wish do you

00:19:23,940 --> 00:19:29,820
do you wish to rewrite your entire

00:19:26,160 --> 00:19:33,150
application it's a really tough task

00:19:29,820 --> 00:19:35,490
it's a very time time effort it's a

00:19:33,150 --> 00:19:36,840
really time-consuming task so do you

00:19:35,490 --> 00:19:40,890
really wish to rewrite your entire

00:19:36,840 --> 00:19:44,990
application so I bet you don't want to

00:19:40,890 --> 00:19:48,570
do that at first so in our approach we

00:19:44,990 --> 00:19:50,940
thought that it's really better to use

00:19:48,570 --> 00:19:55,470
single page application infrastructure

00:19:50,940 --> 00:19:58,890
which means to at first to make your

00:19:55,470 --> 00:20:00,330
effort in infrastructure and not in just

00:19:58,890 --> 00:20:02,429
rewriting your entire application

00:20:00,330 --> 00:20:05,040
because with that you enjoy the

00:20:02,429 --> 00:20:07,140
technology now and not just rewriting

00:20:05,040 --> 00:20:09,870
your application you have the benefits

00:20:07,140 --> 00:20:12,510
of react now with I've read approach so

00:20:09,870 --> 00:20:15,420
when you have a dotting infrastructure

00:20:12,510 --> 00:20:18,600
which means you have better API such as

00:20:15,420 --> 00:20:22,770
graph QL which of course use the client

00:20:18,600 --> 00:20:25,559
better you have quite outing as you seen

00:20:22,770 --> 00:20:27,780
before and you have plenty and plenty of

00:20:25,559 --> 00:20:30,620
components and when you gather these

00:20:27,780 --> 00:20:35,010
three it's only a matter of time until

00:20:30,620 --> 00:20:37,650
you becomes until you become single page

00:20:35,010 --> 00:20:39,720
application so yeah it's not a matter of

00:20:37,650 --> 00:20:42,030
do you wish to rely to enter application

00:20:39,720 --> 00:20:45,809
you will enjoy from this rewriting task

00:20:42,030 --> 00:20:49,470
you will you have fun with that part but

00:20:45,809 --> 00:20:52,330
you still have you still have that

00:20:49,470 --> 00:20:55,720
feeling today you still use that the

00:20:52,330 --> 00:21:12,779
new technology today and not in the next

00:20:55,720 --> 00:21:12,779
future so thank you very much yeah

00:21:16,110 --> 00:21:32,769
deform on what before me like what did

00:21:32,169 --> 00:21:37,149
you do here

00:21:32,769 --> 00:21:38,950
Oh in this specific page no just like

00:21:37,149 --> 00:21:40,779
with the foreman thing you tested how

00:21:38,950 --> 00:21:43,690
fast it was written without turbulence

00:21:40,779 --> 00:21:46,059
yeah and we just put into what we did we

00:21:43,690 --> 00:21:47,320
just put react out oh and it's based on

00:21:46,059 --> 00:21:50,260
the act and it's client-side rendering

00:21:47,320 --> 00:21:54,429
we don't use a service at all even think

00:21:50,260 --> 00:21:56,950
we don't do a round-trip to the server

00:21:54,429 --> 00:22:00,010
in order to get HTML so it's much faster

00:21:56,950 --> 00:22:02,590
just get JSON and data and you don't get

00:22:00,010 --> 00:22:04,570
any HTML from the server so it's much

00:22:02,590 --> 00:22:07,120
faster so it's basically it's single

00:22:04,570 --> 00:22:17,919
page application single page application

00:22:07,120 --> 00:22:21,010
yeah so with single page apps usually

00:22:17,919 --> 00:22:23,500
what happens is they grow so much that

00:22:21,010 --> 00:22:26,830
the initial load is like impossibly long

00:22:23,500 --> 00:22:29,350
and then the data that gets pulled from

00:22:26,830 --> 00:22:33,909
the server also like people usually hey

00:22:29,350 --> 00:22:36,490
I need all the people in in my app and

00:22:33,909 --> 00:22:38,289
not just five of them and what happens

00:22:36,490 --> 00:22:40,659
is they log all of them they have it on

00:22:38,289 --> 00:22:42,309
the front end and then they do stuff

00:22:40,659 --> 00:22:43,899
with that but the rendering like just

00:22:42,309 --> 00:22:47,950
parsing the requests from the server and

00:22:43,899 --> 00:22:51,460
that is starts getting too long and the

00:22:47,950 --> 00:22:53,260
I have seen where a single page app has

00:22:51,460 --> 00:22:55,149
so much data to go through on the front

00:22:53,260 --> 00:22:58,179
end the dead because the bottleneck and

00:22:55,149 --> 00:23:00,100
I've seen stuff fresh when you have too

00:22:58,179 --> 00:23:02,770
many objects oh yeah how do you do that

00:23:00,100 --> 00:23:04,410
so it's for sure that single page

00:23:02,770 --> 00:23:06,180
application is like in

00:23:04,410 --> 00:23:07,590
cashing in your application because you

00:23:06,180 --> 00:23:09,210
have the server side you have the

00:23:07,590 --> 00:23:09,960
backend and then you have the client so

00:23:09,210 --> 00:23:12,690
it's something else

00:23:09,960 --> 00:23:14,670
you have it's not just like we used to

00:23:12,690 --> 00:23:18,020
be to have a full stack engineers that

00:23:14,670 --> 00:23:20,220
do both we have some sort of a

00:23:18,020 --> 00:23:23,670
application in our you know in our

00:23:20,220 --> 00:23:26,400
application so yeah it's it's a bit

00:23:23,670 --> 00:23:29,610
complicated but you gain a lot from it

00:23:26,400 --> 00:23:33,180
so um if you see if you look at the you

00:23:29,610 --> 00:23:37,080
know in the next future not not what

00:23:33,180 --> 00:23:41,160
happen now it probably for us you know

00:23:37,080 --> 00:23:44,160
not for for our project we took the iPod

00:23:41,160 --> 00:23:47,390
approach because of that concern because

00:23:44,160 --> 00:23:49,350
it's really we don't like to be to this

00:23:47,390 --> 00:23:51,930
distinguish between our in our

00:23:49,350 --> 00:23:54,030
application into this same bacon and

00:23:51,930 --> 00:23:55,860
client and we want to have something

00:23:54,030 --> 00:23:57,720
more hybrid something that combined

00:23:55,860 --> 00:24:00,840
between these server-side rendering and

00:23:57,720 --> 00:24:04,680
client and client-side rendering we have

00:24:00,840 --> 00:24:07,020
the last question here so crucial more

00:24:04,680 --> 00:24:10,680
about the price how many what inkowl's

00:24:07,020 --> 00:24:11,100
cause this lighting from jQuery to

00:24:10,680 --> 00:24:14,460
direct

00:24:11,100 --> 00:24:16,710
so again could you say more about how

00:24:14,460 --> 00:24:22,200
many working Cowell's caused is the

00:24:16,710 --> 00:24:28,590
lightning from jQuery okay guys so from

00:24:22,200 --> 00:24:30,090
jQuery act so so it's really a good

00:24:28,590 --> 00:24:32,880
question from Jekyll to react is

00:24:30,090 --> 00:24:36,360
something that you don't do instantly

00:24:32,880 --> 00:24:40,110
it's something that you you know you

00:24:36,360 --> 00:24:44,100
join that technology because you want to

00:24:40,110 --> 00:24:46,080
gain something more and with jQuery you

00:24:44,100 --> 00:24:48,450
cannot do you can you can do the same

00:24:46,080 --> 00:24:50,730
thing like you do with react but it

00:24:48,450 --> 00:24:53,100
takes you much more time so you have

00:24:50,730 --> 00:24:56,130
much more benefits with this ecosystem

00:24:53,100 --> 00:24:57,810
with this with this of course a hybrid

00:24:56,130 --> 00:24:59,850
approach because you still enjoy from

00:24:57,810 --> 00:25:03,090
new technology from the art form

00:24:59,850 --> 00:25:06,890
packages from you know from new stuff

00:25:03,090 --> 00:25:06,890

YouTube URL: https://www.youtube.com/watch?v=wTFKPBMJ9cE


