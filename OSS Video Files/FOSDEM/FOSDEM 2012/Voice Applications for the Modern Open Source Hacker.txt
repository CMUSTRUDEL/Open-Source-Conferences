Title: Voice Applications for the Modern Open Source Hacker
Publication date: 2013-02-05
Playlist: FOSDEM 2012
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:00,770 --> 00:00:08,420
thank you thank you I'm glad to see

00:00:07,170 --> 00:00:12,929
there's some people awake this morning

00:00:08,420 --> 00:00:15,120
yay yes um am i coming through the PA I

00:00:12,929 --> 00:00:18,150
can't quite tell this is good you can

00:00:15,120 --> 00:00:20,580
hear me okay excellent so as he said I'm

00:00:18,150 --> 00:00:22,230
been playing from Atlanta Georgia I have

00:00:20,580 --> 00:00:24,390
a company there called mojo lingo and

00:00:22,230 --> 00:00:26,220
I'm also here today in the capacity is

00:00:24,390 --> 00:00:28,800
in my capacity as the leader of the

00:00:26,220 --> 00:00:31,410
adhesion project so before you started

00:00:28,800 --> 00:00:35,130
have anyone here heard of or even used

00:00:31,410 --> 00:00:38,820
to the adherent project one okay all

00:00:35,130 --> 00:00:40,649
right has anyone used asterisk awesome

00:00:38,820 --> 00:00:44,760
good okay so we have a we have a

00:00:40,649 --> 00:00:45,930
understanding here so um today on this

00:00:44,760 --> 00:00:48,600
presentation let's talk about a few

00:00:45,930 --> 00:00:50,430
things the first is why telephony why

00:00:48,600 --> 00:00:52,289
I'm passionate about it why I find it

00:00:50,430 --> 00:00:54,390
very really fascinating why I think

00:00:52,289 --> 00:00:57,870
you'll find it fascinating we'll talk

00:00:54,390 --> 00:01:00,210
about what a voice application is zero

00:00:57,870 --> 00:01:01,500
in here come in is it a have a concept

00:01:00,210 --> 00:01:02,969
of what a voice application is or does

00:01:01,500 --> 00:01:06,180
it sound like I'm just making up terms

00:01:02,969 --> 00:01:08,790
as I go yeah yeah okay we'll talk about

00:01:06,180 --> 00:01:11,100
what that is and then I'm also going to

00:01:08,790 --> 00:01:13,260
talk about why I think adhesion is the

00:01:11,100 --> 00:01:16,680
modern approach to building voice

00:01:13,260 --> 00:01:18,090
applications so start about talking

00:01:16,680 --> 00:01:20,040
about why to F&E we're going to go back

00:01:18,090 --> 00:01:23,310
in time to the really dark ages before

00:01:20,040 --> 00:01:27,409
the year 2000 back when to F&E was a

00:01:23,310 --> 00:01:31,409
very scary place to be we'll start with

00:01:27,409 --> 00:01:35,340
TDM pbx up about some other letters PSTN

00:01:31,409 --> 00:01:36,869
PRI DTMF all these acronyms guessing at

00:01:35,340 --> 00:01:39,180
least a lot of you have no idea what

00:01:36,869 --> 00:01:41,250
they are I have a pretty casual grip on

00:01:39,180 --> 00:01:43,740
some of them myself but the point is

00:01:41,250 --> 00:01:46,049
that it was very complex all of the

00:01:43,740 --> 00:01:47,430
networks that were used to to connect

00:01:46,049 --> 00:01:50,820
people to each other were controlled by

00:01:47,430 --> 00:01:52,799
monopolies the you had to have equipment

00:01:50,820 --> 00:01:54,479
that was certified by the regulatory

00:01:52,799 --> 00:01:56,579
agencies to even be a part of the

00:01:54,479 --> 00:02:00,509
network and all of this basically added

00:01:56,579 --> 00:02:03,960
up to it being very very expensive in

00:02:00,509 --> 00:02:06,299
addition to just the the cost of the

00:02:03,960 --> 00:02:07,979
circuitry the equipment you had to use

00:02:06,299 --> 00:02:10,679
because of the certification process and

00:02:07,979 --> 00:02:12,599
because of the lack of open stand

00:02:10,679 --> 00:02:14,459
it's everything is proprietary if you

00:02:12,599 --> 00:02:15,900
bought for example a panasonic phone

00:02:14,459 --> 00:02:18,510
system and I'm not picking on panasonic

00:02:15,900 --> 00:02:20,969
that's just one common manufacturer of

00:02:18,510 --> 00:02:22,890
that era any time you wanted to buy

00:02:20,969 --> 00:02:24,900
equipment to go with that system so

00:02:22,890 --> 00:02:26,010
example you bought an office telephone

00:02:24,900 --> 00:02:28,319
system and you wanted to add a new

00:02:26,010 --> 00:02:30,150
extension for a new hire you had to buy

00:02:28,319 --> 00:02:32,310
a Panasonic telephone there was no

00:02:30,150 --> 00:02:34,829
standardization so because there was

00:02:32,310 --> 00:02:37,349
lock in between the back end and then

00:02:34,829 --> 00:02:41,579
the endpoints everything was again very

00:02:37,349 --> 00:02:43,889
very expensive telephone systems were

00:02:41,579 --> 00:02:46,379
islands of functionality they didn't

00:02:43,889 --> 00:02:50,669
interact much with anything around them

00:02:46,379 --> 00:02:52,109
so your PBX you'd stick off in a corner

00:02:50,669 --> 00:02:53,579
it would do some basic things for you

00:02:52,109 --> 00:02:57,659
the call would come in you can route it

00:02:53,579 --> 00:02:59,579
to your TA your receptionist she could

00:02:57,659 --> 00:03:01,889
send it off to someone working in the

00:02:59,579 --> 00:03:02,969
office you'd get voicemail you know if

00:03:01,889 --> 00:03:04,409
you're lucky you'd have some blinking

00:03:02,969 --> 00:03:06,870
lights to tell you when people want a

00:03:04,409 --> 00:03:08,700
call but it didn't really do much beyond

00:03:06,870 --> 00:03:10,590
that all it would do is basically

00:03:08,700 --> 00:03:12,359
provide voice service you couldn't

00:03:10,590 --> 00:03:15,510
integrate with other things that would

00:03:12,359 --> 00:03:19,109
run your business there was not really

00:03:15,510 --> 00:03:21,479
any API to speak of again you couldn't

00:03:19,109 --> 00:03:22,799
take for example your CLM and tie it

00:03:21,479 --> 00:03:25,620
into your voice application or your

00:03:22,799 --> 00:03:26,790
voice system your PBX and know who is

00:03:25,620 --> 00:03:30,419
calling and giving more information

00:03:26,790 --> 00:03:32,970
about them there are very few management

00:03:30,419 --> 00:03:34,439
tools if someone if a if a new hire did

00:03:32,970 --> 00:03:36,750
come in and you were to go set them up

00:03:34,439 --> 00:03:38,340
the phone in most cases you needed to

00:03:36,750 --> 00:03:40,530
call the contractor who installed and

00:03:38,340 --> 00:03:42,900
maintained your PBX to come out in a lot

00:03:40,530 --> 00:03:46,349
of cases actually punch down hard wires

00:03:42,900 --> 00:03:47,939
to run a phone to the desk and it just

00:03:46,349 --> 00:03:49,169
was a big pain it was again expensive

00:03:47,939 --> 00:03:51,090
because you're paying someone to manage

00:03:49,169 --> 00:03:55,139
this for you as opposed to having tools

00:03:51,090 --> 00:03:58,799
that can automate this so there was no

00:03:55,139 --> 00:04:00,659
automation so that's pretty 2,000

00:03:58,799 --> 00:04:03,750
something kind of magic happened around

00:04:00,659 --> 00:04:06,060
the year 2000 this is the last 10 years

00:04:03,750 --> 00:04:07,019
this is this is where we've come in the

00:04:06,060 --> 00:04:10,859
last 10 years and it's largely

00:04:07,019 --> 00:04:13,049
responsible it's largely brought about

00:04:10,859 --> 00:04:16,169
by the emergence of voice over IP and in

00:04:13,049 --> 00:04:18,479
particular asterisk and free switch and

00:04:16,169 --> 00:04:21,299
sip and really I think oestrus quiz the

00:04:18,479 --> 00:04:22,270
revolutionary change here before mark

00:04:21,299 --> 00:04:24,220
spencer

00:04:22,270 --> 00:04:27,099
for more expensive release asterisk

00:04:24,220 --> 00:04:28,810
there was no option other than

00:04:27,099 --> 00:04:30,940
proprietary hardware the more expensive

00:04:28,810 --> 00:04:33,280
camp out also with the Tormentor project

00:04:30,940 --> 00:04:35,050
which was a an open project to published

00:04:33,280 --> 00:04:38,080
specifications for how to build the

00:04:35,050 --> 00:04:39,669
hardware when all that came down all of

00:04:38,080 --> 00:04:41,319
a sudden you have the ability to very

00:04:39,669 --> 00:04:43,000
inexpensively like maybe for a couple

00:04:41,319 --> 00:04:45,580
thousand dollars build a phone system

00:04:43,000 --> 00:04:47,110
relative two years before where you

00:04:45,580 --> 00:04:49,780
might need 20,000 a fifty thousand

00:04:47,110 --> 00:04:52,990
dollars to deploy a phone system so that

00:04:49,780 --> 00:04:55,780
was a huge benefit standardization on

00:04:52,990 --> 00:04:58,690
sip we're also an enormous boost no more

00:04:55,780 --> 00:05:00,940
do we have proprietary two endpoints in

00:04:58,690 --> 00:05:04,750
the offices we could use standard open

00:05:00,940 --> 00:05:06,520
documented protocols and those those

00:05:04,750 --> 00:05:08,289
open protocols allowed for new

00:05:06,520 --> 00:05:10,870
manufacturers to enter the market and to

00:05:08,289 --> 00:05:13,210
be innovative with their products so

00:05:10,870 --> 00:05:15,250
this would mean that the desk the focus

00:05:13,210 --> 00:05:17,020
is on your desk is not just taking calls

00:05:15,250 --> 00:05:18,520
but now it has a nice pretty display and

00:05:17,020 --> 00:05:20,680
there are buttons and you can program

00:05:18,520 --> 00:05:22,569
those buttons to do things like show you

00:05:20,680 --> 00:05:26,139
how many colors are waiting in the queue

00:05:22,569 --> 00:05:27,819
or announce the incoming call to you and

00:05:26,139 --> 00:05:31,630
show who it is and what time and all

00:05:27,819 --> 00:05:33,370
right so all of that innovation led to

00:05:31,630 --> 00:05:35,590
smarter endpoints so we have smart

00:05:33,370 --> 00:05:37,590
phones on the desk we have mobile phones

00:05:35,590 --> 00:05:40,330
which are obviously little computers

00:05:37,590 --> 00:05:43,060
those those are moving toward voice over

00:05:40,330 --> 00:05:44,770
IP modes as well so we have a lot more

00:05:43,060 --> 00:05:46,719
capability in the end points to do

00:05:44,770 --> 00:05:50,259
things with phone calls that we have not

00:05:46,719 --> 00:05:52,210
had until very recently all of this has

00:05:50,259 --> 00:05:54,039
led to a convergence of instant

00:05:52,210 --> 00:05:55,810
messaging and presence within the

00:05:54,039 --> 00:05:57,639
telephone call previously telephone call

00:05:55,810 --> 00:05:59,259
was just one audio connection out of the

00:05:57,639 --> 00:06:01,419
world now we can start to bring in

00:05:59,259 --> 00:06:04,630
additional information from instant

00:06:01,419 --> 00:06:06,759
messaging systems like XMPP and presence

00:06:04,630 --> 00:06:09,279
so perhaps we make a decision how to out

00:06:06,759 --> 00:06:10,690
a call based on whether some ways logged

00:06:09,279 --> 00:06:13,419
into instant messenger or maybe whether

00:06:10,690 --> 00:06:16,630
they are marked available or a way or do

00:06:13,419 --> 00:06:19,690
not disturb or whatever and so all this

00:06:16,630 --> 00:06:27,069
ties into the beginning of what is truly

00:06:19,690 --> 00:06:30,130
unified communications so that's where

00:06:27,069 --> 00:06:31,930
we've been for the last 10 years I think

00:06:30,130 --> 00:06:33,370
the next 10 years is even more exciting

00:06:31,930 --> 00:06:34,820
we've laid the groundwork with a lot of

00:06:33,370 --> 00:06:36,560
technology

00:06:34,820 --> 00:06:38,200
and this is what I think we're gonna be

00:06:36,560 --> 00:06:41,870
going with it in the next 10 years

00:06:38,200 --> 00:06:43,790
further decentralization right now even

00:06:41,870 --> 00:06:45,650
though this is we are lightyears ahead

00:06:43,790 --> 00:06:48,410
of where we were a decade ago there

00:06:45,650 --> 00:06:50,570
still is a lot of power concentrated in

00:06:48,410 --> 00:06:51,860
to F&E monopolies especially in the

00:06:50,570 --> 00:06:54,080
mobile market but even an even in

00:06:51,860 --> 00:06:56,450
landline so I think we're going to see

00:06:54,080 --> 00:06:58,310
more decentralization tour companies can

00:06:56,450 --> 00:07:00,080
interact with each other in route calls

00:06:58,310 --> 00:07:01,730
to each other directly if there's a

00:07:00,080 --> 00:07:03,830
protocol called Dundee which allows an

00:07:01,730 --> 00:07:06,050
enum which allow people to actually look

00:07:03,830 --> 00:07:09,050
up sip endpoints and route calls

00:07:06,050 --> 00:07:11,720
directly bypassing the PSTN but there's

00:07:09,050 --> 00:07:13,910
no reason more that can't happen we'll

00:07:11,720 --> 00:07:16,160
see open architectures again with SIP

00:07:13,910 --> 00:07:17,480
with things like asterisk will be able

00:07:16,160 --> 00:07:19,940
to construct things on entirely

00:07:17,480 --> 00:07:22,640
open-source platforms and deliver calls

00:07:19,940 --> 00:07:24,470
at fractions of the cost and again by

00:07:22,640 --> 00:07:27,310
saving costs on proprietary measures we

00:07:24,470 --> 00:07:29,810
have budget for innovating on things

00:07:27,310 --> 00:07:31,970
we'll see more Federation as I mentioned

00:07:29,810 --> 00:07:33,440
earlier company is being able to call

00:07:31,970 --> 00:07:36,140
each other directly just as you have

00:07:33,440 --> 00:07:38,330
with email or with XMPP the ability to

00:07:36,140 --> 00:07:40,370
basically do a DNS lookup and without

00:07:38,330 --> 00:07:42,500
messages t-that entity without any other

00:07:40,370 --> 00:07:44,450
configuration will start to see more of

00:07:42,500 --> 00:07:47,660
the same thing happening with voice over

00:07:44,450 --> 00:07:50,090
IP but the exciting stuff is more

00:07:47,660 --> 00:07:51,710
multimodal integration know if you

00:07:50,090 --> 00:07:53,300
notice kind of a funny word but really

00:07:51,710 --> 00:07:55,190
what I'm thinking here is the ability to

00:07:53,300 --> 00:07:56,900
take multiple voice channels I'm sorry

00:07:55,190 --> 00:08:00,080
multiple communications channels such as

00:07:56,900 --> 00:08:01,880
voice text video and then again as I

00:08:00,080 --> 00:08:03,980
mentioned presence and pull all of those

00:08:01,880 --> 00:08:06,080
into the context of a call so you're not

00:08:03,980 --> 00:08:07,910
just having a voice conversation you can

00:08:06,080 --> 00:08:10,340
take that voice conversation bring it up

00:08:07,910 --> 00:08:11,930
to a video conference or maybe you can

00:08:10,340 --> 00:08:14,210
mix and information from presence so

00:08:11,930 --> 00:08:15,830
that when someone comes online you can

00:08:14,210 --> 00:08:16,970
add them to the call a lot of

00:08:15,830 --> 00:08:20,120
possibilities here but really just

00:08:16,970 --> 00:08:22,310
haven't been explored yet and of course

00:08:20,120 --> 00:08:24,320
the ability to collaborate with these

00:08:22,310 --> 00:08:27,440
new technologies desktop sharing and

00:08:24,320 --> 00:08:30,440
document sharing are more possibilities

00:08:27,440 --> 00:08:31,940
for that so for all of these reasons

00:08:30,440 --> 00:08:33,860
this is what I think now is a really

00:08:31,940 --> 00:08:35,270
exciting time to be working with voice

00:08:33,860 --> 00:08:36,110
in really i would even expand this to

00:08:35,270 --> 00:08:40,520
say working with real-time

00:08:36,110 --> 00:08:42,890
communications so that's a bit of a

00:08:40,520 --> 00:08:46,070
history lesson i want to talk about what

00:08:42,890 --> 00:08:47,390
a voice application means to me a voice

00:08:46,070 --> 00:08:50,150
application is something that interacts

00:08:47,390 --> 00:08:52,220
with the audio stream it's not just a

00:08:50,150 --> 00:08:53,900
mobile application your phone it's not

00:08:52,220 --> 00:08:56,540
necessarily just an application that

00:08:53,900 --> 00:08:59,780
runs on a desk phone it's something that

00:08:56,540 --> 00:09:01,730
that partakes asthma is either a member

00:08:59,780 --> 00:09:03,590
of the call or working with the audio so

00:09:01,730 --> 00:09:05,690
that you can add functions and features

00:09:03,590 --> 00:09:07,250
on top of that it doesn't necessarily

00:09:05,690 --> 00:09:09,590
change the audio and in fact in most

00:09:07,250 --> 00:09:11,620
cases it doesn't but it can I'll give

00:09:09,590 --> 00:09:14,230
you some examples of that a minute a

00:09:11,620 --> 00:09:16,970
voice application should also integrate

00:09:14,230 --> 00:09:19,940
communications channels as I was talking

00:09:16,970 --> 00:09:22,340
about earlier mixing in things like XMPP

00:09:19,940 --> 00:09:23,930
and presence into a telephone call a

00:09:22,340 --> 00:09:26,000
voice application should be able to take

00:09:23,930 --> 00:09:27,740
into account these things and make

00:09:26,000 --> 00:09:29,930
decisions on how the call will progress

00:09:27,740 --> 00:09:31,700
based on those I would also put into

00:09:29,930 --> 00:09:34,520
this category talking to outside data

00:09:31,700 --> 00:09:36,440
sources like databases or web services

00:09:34,520 --> 00:09:38,090
being able to pull these pieces of

00:09:36,440 --> 00:09:41,630
information in together and enrich the

00:09:38,090 --> 00:09:43,100
entire phone call and a voice

00:09:41,630 --> 00:09:44,540
application should go beyond a phone

00:09:43,100 --> 00:09:45,830
call there should be things happening

00:09:44,540 --> 00:09:46,880
before the phone call ever comes in

00:09:45,830 --> 00:09:49,820
there should be things that can happen

00:09:46,880 --> 00:09:51,800
after the phone call has ended it's it's

00:09:49,820 --> 00:09:55,160
much more than just what happens while

00:09:51,800 --> 00:09:57,350
the two parties are talking so we give

00:09:55,160 --> 00:09:59,480
you some examples of voice applications

00:09:57,350 --> 00:10:00,800
this similes are from my mind some of

00:09:59,480 --> 00:10:03,830
these are actually from products we

00:10:00,800 --> 00:10:05,780
worked on the first is live translation

00:10:03,830 --> 00:10:08,030
services we recently completed a project

00:10:05,780 --> 00:10:11,030
with a client who wants to build the

00:10:08,030 --> 00:10:13,040
website where you go and you sign up and

00:10:11,030 --> 00:10:14,120
when you're traveling abroad if you're

00:10:13,040 --> 00:10:15,440
traveling in language where you don't

00:10:14,120 --> 00:10:16,520
speak I'm sorry for traveling in a

00:10:15,440 --> 00:10:18,920
country where you don't speak a new

00:10:16,520 --> 00:10:21,410
language like Belgium where I don't

00:10:18,920 --> 00:10:23,600
speak any French at all I can call a

00:10:21,410 --> 00:10:26,210
phone number and that funding will

00:10:23,600 --> 00:10:28,730
connect me based on my account to a

00:10:26,210 --> 00:10:30,770
translator who speaks French and in

00:10:28,730 --> 00:10:32,060
English and then I can ask questions and

00:10:30,770 --> 00:10:35,300
usually give non-emergency type

00:10:32,060 --> 00:10:37,910
questions like how did I say I need to

00:10:35,300 --> 00:10:41,360
find a restaurant or I'm allergic to

00:10:37,910 --> 00:10:45,020
peanuts or you know what time is it

00:10:41,360 --> 00:10:47,390
things that I don't necessarily need to

00:10:45,020 --> 00:10:48,470
have answered immediately there's to

00:10:47,390 --> 00:10:50,900
keep me out of trouble about things that

00:10:48,470 --> 00:10:53,210
will help me enjoy my experience and

00:10:50,900 --> 00:10:54,980
stay safe and all these things so the

00:10:53,210 --> 00:10:56,660
voice application in this case is a

00:10:54,980 --> 00:10:58,790
matter of knowing who's call

00:10:56,660 --> 00:11:00,740
in knowing what services they need in

00:10:58,790 --> 00:11:02,120
this case the phone service knew that I

00:11:00,740 --> 00:11:03,470
needed to speak to a French translator

00:11:02,120 --> 00:11:05,540
based on the phone number that I was

00:11:03,470 --> 00:11:07,040
calling and it knew which translators

00:11:05,540 --> 00:11:08,800
were available because of a large number

00:11:07,040 --> 00:11:11,029
of translators these guys work with

00:11:08,800 --> 00:11:13,100
largely college students people who have

00:11:11,029 --> 00:11:15,139
a lot of free time in between classes

00:11:13,100 --> 00:11:17,930
and they take calls in their mobile

00:11:15,139 --> 00:11:19,370
phones so we had to know based on the

00:11:17,930 --> 00:11:21,949
ability to sign in and out using text

00:11:19,370 --> 00:11:23,389
messages or using a website where who's

00:11:21,949 --> 00:11:25,610
available so the voice application will

00:11:23,389 --> 00:11:27,620
go out those calls to individual agents

00:11:25,610 --> 00:11:29,000
based on their availability based on

00:11:27,620 --> 00:11:32,569
their language skills and all these

00:11:29,000 --> 00:11:34,160
things another example of the worst

00:11:32,569 --> 00:11:36,589
application could be automated reminder

00:11:34,160 --> 00:11:39,980
calls there have been lots of studies

00:11:36,589 --> 00:11:42,800
that show that especially with with

00:11:39,980 --> 00:11:45,259
senior citizens or or people who have

00:11:42,800 --> 00:11:46,310
medical conditions sometimes simply

00:11:45,259 --> 00:11:48,589
reaching out to them and letting them

00:11:46,310 --> 00:11:50,810
know that they need you know to take

00:11:48,589 --> 00:11:51,980
their medicine or they need to go see

00:11:50,810 --> 00:11:53,449
their doctor because it's been too long

00:11:51,980 --> 00:11:55,279
these these things improve the quality

00:11:53,449 --> 00:11:57,069
of life it's it's a simple application

00:11:55,279 --> 00:11:59,990
since this is not exactly groundbreaking

00:11:57,069 --> 00:12:01,790
but this is a great example of something

00:11:59,990 --> 00:12:02,600
you can do with voice that's relatively

00:12:01,790 --> 00:12:04,699
difficult to do with other

00:12:02,600 --> 00:12:08,810
communications channels it's a personal

00:12:04,699 --> 00:12:11,600
connection some things you can also do

00:12:08,810 --> 00:12:13,550
in the context of the call or what I

00:12:11,600 --> 00:12:16,310
call mid call assistant services so

00:12:13,550 --> 00:12:17,930
that's I don't name sure if that's a an

00:12:16,310 --> 00:12:20,180
official term for it but basically it

00:12:17,930 --> 00:12:22,040
means the ability to add something to a

00:12:20,180 --> 00:12:23,870
call it's in progress so for example the

00:12:22,040 --> 00:12:26,990
ability to press a button let's say the

00:12:23,870 --> 00:12:28,639
star key and how do they call start

00:12:26,990 --> 00:12:29,630
recording and then when that recording

00:12:28,639 --> 00:12:32,060
is finished maybe you could go to a

00:12:29,630 --> 00:12:34,160
website and download that recording or

00:12:32,060 --> 00:12:36,560
maybe even a translator comes behind and

00:12:34,160 --> 00:12:38,720
and transcribes the entire call so you

00:12:36,560 --> 00:12:42,910
can download the text of the call as

00:12:38,720 --> 00:12:45,290
well as the recording you can also

00:12:42,910 --> 00:12:47,720
enable or disable for example voice

00:12:45,290 --> 00:12:49,279
masking if I wanted to sound not like my

00:12:47,720 --> 00:12:53,139
normal self maybe if I'm a whistleblower

00:12:49,279 --> 00:12:56,089
to turn on some kind of voice transform

00:12:53,139 --> 00:12:58,519
or even better if we had the ability to

00:12:56,089 --> 00:13:00,680
listen in to the phone to the audio

00:12:58,519 --> 00:13:01,819
stream and pick out hot words so we

00:13:00,680 --> 00:13:04,490
could detect when someone started

00:13:01,819 --> 00:13:07,059
talking about Christmas or we wanted to

00:13:04,490 --> 00:13:09,459
hear when they started talking about

00:13:07,059 --> 00:13:11,979
maybe a calendar appointment next week

00:13:09,459 --> 00:13:13,539
if we can we can detect those

00:13:11,979 --> 00:13:15,309
occurrences we can do things like add

00:13:13,539 --> 00:13:17,339
them to a calendar or make other

00:13:15,309 --> 00:13:20,229
decisions about what to do with the call

00:13:17,339 --> 00:13:21,399
I've also heard of cases where you can

00:13:20,229 --> 00:13:23,169
detect when someone is getting

00:13:21,399 --> 00:13:24,939
frustrated so maybe if they are on the

00:13:23,169 --> 00:13:26,619
call with a customer service agent and

00:13:24,939 --> 00:13:29,559
they're really not getting their problem

00:13:26,619 --> 00:13:31,239
solved you can get you can get some kind

00:13:29,559 --> 00:13:33,069
of feedback automatically that says this

00:13:31,239 --> 00:13:34,479
person's getting frustrated let's

00:13:33,069 --> 00:13:37,499
transfer them to someone else like we

00:13:34,479 --> 00:13:39,729
can solve their problem better way

00:13:37,499 --> 00:13:42,159
another example voice notification would

00:13:39,729 --> 00:13:45,039
be crm integration we did a demo a while

00:13:42,159 --> 00:13:46,749
back where when a call would come in we

00:13:45,039 --> 00:13:48,939
would take the caller ID sooner who is

00:13:46,749 --> 00:13:50,879
calling look it up in a ticket tracking

00:13:48,939 --> 00:13:53,319
sorry look up in a CRM customer

00:13:50,879 --> 00:13:55,479
relationship management system find out

00:13:53,319 --> 00:13:56,799
who the customer was the impalas two

00:13:55,479 --> 00:13:58,299
tickets go and pull list of invoices

00:13:56,799 --> 00:14:00,339
find out if they were current on their

00:13:58,299 --> 00:14:03,129
bills and then send all that information

00:14:00,339 --> 00:14:05,649
in the form of an instant message to the

00:14:03,129 --> 00:14:07,119
sales person taking the call so suddenly

00:14:05,649 --> 00:14:10,269
they have a ton more information on

00:14:07,119 --> 00:14:11,769
their screen than just the simple car ID

00:14:10,269 --> 00:14:13,209
then they with the context who is

00:14:11,769 --> 00:14:14,439
calling if their tickets open they

00:14:13,209 --> 00:14:16,469
probably even know why they were calling

00:14:14,439 --> 00:14:18,429
they need the last time they called

00:14:16,469 --> 00:14:20,319
these things are very easy to integrate

00:14:18,429 --> 00:14:22,119
when you these things are very easy to

00:14:20,319 --> 00:14:24,759
create when you have the ability to talk

00:14:22,119 --> 00:14:26,109
to you all of these back ends and then

00:14:24,759 --> 00:14:28,289
there was another term over the top

00:14:26,109 --> 00:14:31,119
services it's kind of a buzz word but

00:14:28,289 --> 00:14:33,159
what it means is again as I mentioned

00:14:31,119 --> 00:14:35,309
pressing the button to start a recording

00:14:33,159 --> 00:14:37,449
and get a transcript automatically

00:14:35,309 --> 00:14:39,519
another possibility that's pretty cool

00:14:37,449 --> 00:14:41,799
especially with mobile devices now is

00:14:39,519 --> 00:14:44,469
location services so being able to tell

00:14:41,799 --> 00:14:46,029
when you get a call where the person is

00:14:44,469 --> 00:14:47,559
calling from and not not just the phone

00:14:46,029 --> 00:14:49,719
number where but actually where the

00:14:47,559 --> 00:14:51,549
device is located in the world you could

00:14:49,719 --> 00:14:53,139
then take that and generate a map of all

00:14:51,549 --> 00:14:54,999
your calls and get a sense for where you

00:14:53,139 --> 00:14:59,319
got a hot spot of calls coming in from

00:14:54,999 --> 00:15:01,359
this area so those are some possible

00:14:59,319 --> 00:15:04,989
applications you can build well let's

00:15:01,359 --> 00:15:08,699
talk about next is why adhesion is the

00:15:04,989 --> 00:15:08,699
modern approach to building these things

00:15:12,440 --> 00:15:18,140
so as a mission before and he risen is a

00:15:15,380 --> 00:15:20,090
voice application framework as far as I

00:15:18,140 --> 00:15:23,120
know it is the first of its kind in the

00:15:20,090 --> 00:15:24,320
open source world and a very short list

00:15:23,120 --> 00:15:26,840
of competitors even in a commercial

00:15:24,320 --> 00:15:29,390
world usually with force applications

00:15:26,840 --> 00:15:31,820
where we have our libraries very simple

00:15:29,390 --> 00:15:33,980
little components that let you talk to

00:15:31,820 --> 00:15:36,410
one specific back-end the framework is

00:15:33,980 --> 00:15:38,450
much more than that I'm sure many of you

00:15:36,410 --> 00:15:41,960
in here familiar things like cake PHP or

00:15:38,450 --> 00:15:44,360
ruby on rails those frameworks provide

00:15:41,960 --> 00:15:45,320
an entire context for programming in the

00:15:44,360 --> 00:15:47,150
case would here is when we provide

00:15:45,320 --> 00:15:49,190
things like logging are consistent

00:15:47,150 --> 00:15:51,590
logging interface that can channel logs

00:15:49,190 --> 00:15:56,270
and separate them by call or separate

00:15:51,590 --> 00:15:58,820
them by the context a plug-in system so

00:15:56,270 --> 00:16:00,560
that you can easily go I download

00:15:58,820 --> 00:16:02,090
additional functionality and incorporate

00:16:00,560 --> 00:16:03,920
them into your application rather than

00:16:02,090 --> 00:16:08,180
reinventing the wheel each time use a

00:16:03,920 --> 00:16:11,090
plug-in fault isolation this one's this

00:16:08,180 --> 00:16:13,550
was important if you if you're building

00:16:11,090 --> 00:16:15,770
something that one felt will bring down

00:16:13,550 --> 00:16:17,060
the entire engine that's that's bad

00:16:15,770 --> 00:16:19,490
especially in case of a phone call if

00:16:17,060 --> 00:16:21,740
you have one bug where you an uncaught

00:16:19,490 --> 00:16:23,470
exception and all 17 phone calls and

00:16:21,740 --> 00:16:26,270
progress go down that's that's a problem

00:16:23,470 --> 00:16:28,310
by putting these things into adheres and

00:16:26,270 --> 00:16:30,730
first of all we isolate the faults

00:16:28,310 --> 00:16:32,780
internally but also it separates the

00:16:30,730 --> 00:16:34,040
telephony layer from the logic layer

00:16:32,780 --> 00:16:37,130
I'll talk about more about that in a

00:16:34,040 --> 00:16:39,350
second the framework also takes care of

00:16:37,130 --> 00:16:41,090
grunt work like the immunization and

00:16:39,350 --> 00:16:43,580
threading for you we take care of all

00:16:41,090 --> 00:16:46,100
the ugliness around the startup and

00:16:43,580 --> 00:16:49,070
recording the pit file managing the

00:16:46,100 --> 00:16:51,740
threads so that each calls executing in

00:16:49,070 --> 00:16:53,450
its own context you'll have to deal with

00:16:51,740 --> 00:16:56,510
any of that you just have a handle on a

00:16:53,450 --> 00:16:57,560
call object and you interact with it we

00:16:56,510 --> 00:16:59,630
also take care of all the connection

00:16:57,560 --> 00:17:01,280
management so connecting to the various

00:16:59,630 --> 00:17:03,260
back ends at a minimum we're talking

00:17:01,280 --> 00:17:04,760
about connecting to the telephone system

00:17:03,260 --> 00:17:07,910
but also connecting to things like

00:17:04,760 --> 00:17:11,240
databases like ldap like IRC servers

00:17:07,910 --> 00:17:12,260
XMPP servers but I think the biggest

00:17:11,240 --> 00:17:14,150
thing the most important thing that

00:17:12,260 --> 00:17:16,040
adheres and provides is a common way of

00:17:14,150 --> 00:17:17,660
doing things just like there is the

00:17:16,040 --> 00:17:19,760
rails way of building an application

00:17:17,660 --> 00:17:20,720
there is an infusion way and anyone

00:17:19,760 --> 00:17:23,270
who's built and here's an application

00:17:20,720 --> 00:17:24,659
can largely look at another adherent

00:17:23,270 --> 00:17:27,509
application understand what's going

00:17:24,659 --> 00:17:29,070
on understand how how we approach a

00:17:27,509 --> 00:17:33,419
problem you know what the best way to

00:17:29,070 --> 00:17:34,529
approach a similar problem might be so

00:17:33,419 --> 00:17:36,690
this is a little bit about the

00:17:34,529 --> 00:17:39,389
architecture of adhesion as you can see

00:17:36,690 --> 00:17:41,099
we have at the very top to wear the

00:17:39,389 --> 00:17:42,570
phone call coming in and we'll have two

00:17:41,099 --> 00:17:44,580
telephony engines we have asterisk and

00:17:42,570 --> 00:17:47,070
in this case troppo see all of her

00:17:44,580 --> 00:17:50,399
Damascus in case you haven't I'll just

00:17:47,070 --> 00:17:52,769
mention it's a open source call the open

00:17:50,399 --> 00:17:54,539
source PBX and what it does is it takes

00:17:52,769 --> 00:17:57,059
calls in from all different kinds of

00:17:54,539 --> 00:17:59,039
media whether those calls are old school

00:17:57,059 --> 00:18:01,169
TM those expensive networks I talked

00:17:59,039 --> 00:18:03,389
about before whether they're sip whether

00:18:01,169 --> 00:18:06,840
there any of a handful of other more

00:18:03,389 --> 00:18:08,369
exotic voice over IP protocols takes all

00:18:06,840 --> 00:18:10,259
of those in and provides an API that

00:18:08,369 --> 00:18:12,929
adheres and uses to interact with those

00:18:10,259 --> 00:18:16,710
calls we also support tropa which is a

00:18:12,929 --> 00:18:20,159
cloud-based telephony service you guys

00:18:16,710 --> 00:18:22,440
probably heard of Tulio some of you so

00:18:20,159 --> 00:18:25,049
triple is like Torrio there lesser-known

00:18:22,440 --> 00:18:26,489
but in my opinion way more capable they

00:18:25,049 --> 00:18:28,289
have better text to speech and things

00:18:26,489 --> 00:18:29,519
like this but what's important from the

00:18:28,289 --> 00:18:31,019
Hirogen standpoint is that we can

00:18:29,519 --> 00:18:32,340
integrate with it as well so if you

00:18:31,019 --> 00:18:33,989
don't want to go through the hassle

00:18:32,340 --> 00:18:35,369
setting up your own asterisk server and

00:18:33,989 --> 00:18:38,099
you want to experiment trip was a good

00:18:35,369 --> 00:18:39,509
way to do that so the call comes in one

00:18:38,099 --> 00:18:42,299
of those 2 12in the engines and it

00:18:39,509 --> 00:18:44,009
connects down into adhesion right now

00:18:42,299 --> 00:18:46,859
that's primarily using an asterisk

00:18:44,009 --> 00:18:48,359
protocol called AGI which is a sin

00:18:46,859 --> 00:18:50,720
sorceress gateway interface sort of

00:18:48,359 --> 00:18:53,279
conceptually similar to old school CGI

00:18:50,720 --> 00:18:54,599
applications but the connection comes in

00:18:53,279 --> 00:18:56,820
its it runs over the network so you

00:18:54,599 --> 00:18:58,019
could run adheres on the same machine as

00:18:56,820 --> 00:18:59,809
asterisk where you can run it somewhere

00:18:58,019 --> 00:19:02,970
else in your in your environment and

00:18:59,809 --> 00:19:05,039
then here's an looks up the source the

00:19:02,970 --> 00:19:07,139
call decides what to do with it you

00:19:05,039 --> 00:19:08,999
plies whatever program you have created

00:19:07,139 --> 00:19:10,769
but it also connects automatically to

00:19:08,999 --> 00:19:13,669
these back ends we have canned

00:19:10,769 --> 00:19:16,169
connectors for things like Ruby on Rails

00:19:13,669 --> 00:19:18,269
just about any sequel database anything

00:19:16,169 --> 00:19:21,479
supported by active record which is the

00:19:18,269 --> 00:19:23,940
rails database abstraction we have

00:19:21,479 --> 00:19:25,979
connections to ldap of course to XMPP

00:19:23,940 --> 00:19:27,779
and then it's very easy to connect to

00:19:25,979 --> 00:19:32,429
any kind of web service you know

00:19:27,779 --> 00:19:33,839
consumer URL send or get json or xml so

00:19:32,429 --> 00:19:35,129
all these things will flow back into

00:19:33,839 --> 00:19:37,250
tears and then you can make your

00:19:35,129 --> 00:19:39,299
decisions based on

00:19:37,250 --> 00:19:41,850
the important thing here is that it

00:19:39,299 --> 00:19:45,030
really decouples the logic from the

00:19:41,850 --> 00:19:46,890
engine as I mentioned earlier you

00:19:45,030 --> 00:19:47,669
wouldn't want a Fault in one part of a

00:19:46,890 --> 00:19:49,980
phone call to bring down the entire

00:19:47,669 --> 00:19:52,020
system one thing that has plagued

00:19:49,980 --> 00:19:54,299
asterisk development over time is that

00:19:52,020 --> 00:19:56,340
when you're writing an application that

00:19:54,299 --> 00:19:59,610
runs inside asterisk your wedding it and

00:19:56,340 --> 00:20:01,350
C and C is not necessarily easiest

00:19:59,610 --> 00:20:02,910
language to write so you have to deal

00:20:01,350 --> 00:20:04,919
with memory pointers and you getting off

00:20:02,910 --> 00:20:06,299
by one and it's very easy a segfault and

00:20:04,919 --> 00:20:07,950
unfortunately when you do said fault

00:20:06,299 --> 00:20:09,480
asterisk it does bring down the entire

00:20:07,950 --> 00:20:13,110
system so all those phone calls get

00:20:09,480 --> 00:20:15,000
dropped by decoupling you get the you

00:20:13,110 --> 00:20:18,210
get the ability to leave the time

00:20:15,000 --> 00:20:19,679
critical that the hard parts the media

00:20:18,210 --> 00:20:20,900
leave that to the engine we don't we

00:20:19,679 --> 00:20:22,590
don't want to get into you know

00:20:20,900 --> 00:20:25,590
transcoding we don't want to get into

00:20:22,590 --> 00:20:27,150
dealing with our audio codecs and audio

00:20:25,590 --> 00:20:29,490
stream what we care about is actually

00:20:27,150 --> 00:20:31,740
handling the control so astris provides

00:20:29,490 --> 00:20:33,059
us an interface upward and we consume

00:20:31,740 --> 00:20:34,830
that interface in the inclusion world

00:20:33,059 --> 00:20:36,780
and those two processes are completely

00:20:34,830 --> 00:20:38,850
independent of each other if you do

00:20:36,780 --> 00:20:40,440
crash adhesion all of your asterisk

00:20:38,850 --> 00:20:42,450
calls it on the system will not go down

00:20:40,440 --> 00:20:44,100
they continue to process you know maybe

00:20:42,450 --> 00:20:46,490
the application is down but at least the

00:20:44,100 --> 00:20:50,220
phone calls themselves are still up I

00:20:46,490 --> 00:20:52,500
liken this to also you probably wouldn't

00:20:50,220 --> 00:20:55,140
sit down and try to write facebook and

00:20:52,500 --> 00:20:57,480
see that's that would be that would be

00:20:55,140 --> 00:20:59,429
probably considered pretty crazy it's

00:20:57,480 --> 00:21:01,169
just not an expressive enough language

00:20:59,429 --> 00:21:03,390
it you can't move fast enough writing in

00:21:01,169 --> 00:21:04,530
something like adheres with Ruby you can

00:21:03,390 --> 00:21:06,270
be much more expressive you can

00:21:04,530 --> 00:21:09,210
prototype much more quickly and you'll

00:21:06,270 --> 00:21:11,010
be up and running much more quickly so

00:21:09,210 --> 00:21:12,000
I've dropped some hints I should

00:21:11,010 --> 00:21:14,940
probably go out and let you know a

00:21:12,000 --> 00:21:18,480
fusion is written in Ruby it's a modern

00:21:14,940 --> 00:21:20,760
language with a modern dsl so adhesion

00:21:18,480 --> 00:21:22,350
provides but a domain-specific language

00:21:20,760 --> 00:21:24,720
we provide a lot of primitives that you

00:21:22,350 --> 00:21:26,669
can invoke on a telephone call that

00:21:24,720 --> 00:21:28,950
allow you to interact with it so when a

00:21:26,669 --> 00:21:31,799
call comes in you say ANSWER Answer Line

00:21:28,950 --> 00:21:33,600
or you say play and then pass it a sound

00:21:31,799 --> 00:21:35,340
file it's a very natural way of

00:21:33,600 --> 00:21:36,840
interacting with it and in fact when you

00:21:35,340 --> 00:21:38,730
go when you sit down to read and then

00:21:36,840 --> 00:21:43,260
here's an application what you'll see

00:21:38,730 --> 00:21:44,870
reads very naturally it reads like its

00:21:43,260 --> 00:21:46,890
expressive so you can understand the

00:21:44,870 --> 00:21:49,250
intent of the program without having to

00:21:46,890 --> 00:21:53,100
understand the implementation details

00:21:49,250 --> 00:21:55,350
this allows us to apply modern

00:21:53,100 --> 00:21:56,850
development practices as i mentioned

00:21:55,350 --> 00:21:59,700
adheres being the first open source

00:21:56,850 --> 00:22:01,440
framework for voice telephony has

00:21:59,700 --> 00:22:03,090
traditionally been a very close

00:22:01,440 --> 00:22:05,160
development ecosystem you had to have

00:22:03,090 --> 00:22:07,130
whatever SDKs were made available by the

00:22:05,160 --> 00:22:11,940
manufacturer and it was hard to apply

00:22:07,130 --> 00:22:13,710
good development practices um one of our

00:22:11,940 --> 00:22:15,570
favorite things about here is the

00:22:13,710 --> 00:22:17,760
ability to put apply unit testing to

00:22:15,570 --> 00:22:20,400
telephone ops this is unheard of a few

00:22:17,760 --> 00:22:21,900
years ago but the ability to take the

00:22:20,400 --> 00:22:23,250
logic that applies to my phone call and

00:22:21,900 --> 00:22:25,140
run it through the series of tests and

00:22:23,250 --> 00:22:26,730
determine programmatically whether I've

00:22:25,140 --> 00:22:29,549
broken something want to make a change

00:22:26,730 --> 00:22:30,900
that's kind of revolutionary it's it's a

00:22:29,549 --> 00:22:32,820
bit hot to those well so you do this

00:22:30,900 --> 00:22:35,070
every day but to telephone well that's

00:22:32,820 --> 00:22:38,340
it's amazing and so this is a very

00:22:35,070 --> 00:22:40,860
powerful thing also automated

00:22:38,340 --> 00:22:42,960
deployments again we have the ability

00:22:40,860 --> 00:22:44,790
using tools that were developed to other

00:22:42,960 --> 00:22:46,620
domains and in our case we largely use

00:22:44,790 --> 00:22:49,169
Capistrano which is a common tool for

00:22:46,620 --> 00:22:50,910
deploying rails web applications or web

00:22:49,169 --> 00:22:52,710
applications in general we can apply

00:22:50,910 --> 00:22:54,360
that to the voice world again it may

00:22:52,710 --> 00:22:56,100
seem sort of familiar to you if you use

00:22:54,360 --> 00:22:57,870
it everyday but this just wasn't

00:22:56,100 --> 00:22:58,799
possible now we can deploy these two

00:22:57,870 --> 00:23:02,760
left knee applications voice

00:22:58,799 --> 00:23:06,419
applications with Capistrano and first

00:23:02,760 --> 00:23:08,130
this means we can apply agile and this

00:23:06,419 --> 00:23:10,679
is this is a win for everyone this is

00:23:08,130 --> 00:23:12,690
getting features out the door every week

00:23:10,679 --> 00:23:14,970
or every couple weeks rather than six

00:23:12,690 --> 00:23:18,690
months or a year this is being able to

00:23:14,970 --> 00:23:20,610
react to changes in the clients requests

00:23:18,690 --> 00:23:22,410
the the demands the application in a few

00:23:20,610 --> 00:23:24,210
days rather than you know spending

00:23:22,410 --> 00:23:25,470
hundreds of thousands of dollars then

00:23:24,210 --> 00:23:30,000
prototyping something that ends up not

00:23:25,470 --> 00:23:31,710
working so of course this is FA's demen

00:23:30,000 --> 00:23:34,110
perhaps the best part of this is that

00:23:31,710 --> 00:23:36,390
the entire stock all of it is

00:23:34,110 --> 00:23:39,320
open-source adheres in itself is open

00:23:36,390 --> 00:23:41,640
source under lgpl it's written in Ruby

00:23:39,320 --> 00:23:44,730
runs on top of a stress which is itself

00:23:41,640 --> 00:23:47,850
open source most cases you're deploying

00:23:44,730 --> 00:23:49,110
asterisk on Linux although there are

00:23:47,850 --> 00:23:50,790
cases that we actually have people

00:23:49,110 --> 00:23:56,250
running on solaris as well which is open

00:23:50,790 --> 00:23:58,770
source and XMPP knows I from protocol it

00:23:56,250 --> 00:24:02,220
has many open source server

00:23:58,770 --> 00:24:02,730
implementations now I pause a little bit

00:24:02,220 --> 00:24:05,580
about X

00:24:02,730 --> 00:24:08,040
PP to let you know that this everything

00:24:05,580 --> 00:24:10,320
I've explained up to date largely deals

00:24:08,040 --> 00:24:12,600
with the current released stable version

00:24:10,320 --> 00:24:16,130
of recursion it hears from one it's been

00:24:12,600 --> 00:24:18,960
basically API compatible since 2008 and

00:24:16,130 --> 00:24:20,190
this year we've watched a late last year

00:24:18,960 --> 00:24:21,720
we started working on the next version

00:24:20,190 --> 00:24:23,370
of it here using two we're going to

00:24:21,720 --> 00:24:26,549
break a PR compatibility for the first

00:24:23,370 --> 00:24:28,650
time and it's got some pretty exciting

00:24:26,549 --> 00:24:32,640
features the biggest of which is support

00:24:28,650 --> 00:24:35,070
for this this rail protocol so I'm going

00:24:32,640 --> 00:24:36,750
to talk about what rail is where is

00:24:35,070 --> 00:24:38,520
something we've been working with a

00:24:36,750 --> 00:24:41,280
company in orlando called voxeo to

00:24:38,520 --> 00:24:43,530
create it's it's a specification for a

00:24:41,280 --> 00:24:44,790
third-party call control so if they'd

00:24:43,530 --> 00:24:46,470
probably call control is what I've been

00:24:44,790 --> 00:24:48,720
describing for this entire presentation

00:24:46,470 --> 00:24:50,970
it's it's a process sitting outside the

00:24:48,720 --> 00:24:52,080
telephone engine it communicates with

00:24:50,970 --> 00:24:57,799
the telephone engine to do the things

00:24:52,080 --> 00:25:00,240
like set up calls answer them about them

00:24:57,799 --> 00:25:02,669
interact with the voice put people in

00:25:00,240 --> 00:25:05,610
the conference those kind of things role

00:25:02,669 --> 00:25:07,500
is an open specification the server

00:25:05,610 --> 00:25:09,929
implementation has been created is open

00:25:07,500 --> 00:25:11,549
source the first client plement ation

00:25:09,929 --> 00:25:14,970
what we've created in here isn't to is

00:25:11,549 --> 00:25:17,460
open source and inspect itself it's we

00:25:14,970 --> 00:25:18,630
haven't yet submitted it but is be be

00:25:17,460 --> 00:25:21,990
submitted hopefully by the end of this

00:25:18,630 --> 00:25:23,549
month so that will be the first as far

00:25:21,990 --> 00:25:26,250
as we know completely open standard

00:25:23,549 --> 00:25:30,120
real-time third-party call control and

00:25:26,250 --> 00:25:31,799
all of it runs over XMPP so the reason

00:25:30,120 --> 00:25:34,320
this is really cool the reason why this

00:25:31,799 --> 00:25:36,179
is exciting is so far voice applications

00:25:34,320 --> 00:25:38,250
have been in the realm of individual

00:25:36,179 --> 00:25:40,470
companies or organizations who want to

00:25:38,250 --> 00:25:42,450
create applications on phone networks

00:25:40,470 --> 00:25:45,720
they already control or maybe to extend

00:25:42,450 --> 00:25:47,309
that a bit to build voice applications

00:25:45,720 --> 00:25:53,520
interact with cloud communication

00:25:47,309 --> 00:25:56,160
services such as Troy portfolio but we

00:25:53,520 --> 00:25:57,900
have an opportunity now with royal to

00:25:56,160 --> 00:26:01,230
extend that control to a much much

00:25:57,900 --> 00:26:03,510
bigger Network everyone has a cell phone

00:26:01,230 --> 00:26:06,840
has a cell phone through a major carrier

00:26:03,510 --> 00:26:10,450
whether it's telefonica or ATT or

00:26:06,840 --> 00:26:12,670
tmobile or whatever your cell phone is

00:26:10,450 --> 00:26:14,350
because of the cost of entry because of

00:26:12,670 --> 00:26:16,180
the barriers to actually becoming a cell

00:26:14,350 --> 00:26:19,060
provider it's unlikely that you're going

00:26:16,180 --> 00:26:20,800
to get you know the corner cell phone

00:26:19,060 --> 00:26:22,810
provider on the near future so it's

00:26:20,800 --> 00:26:25,420
going to be increasingly important both

00:26:22,810 --> 00:26:26,770
for the carriers who are quickly turning

00:26:25,420 --> 00:26:28,300
into nothing more than you know

00:26:26,770 --> 00:26:29,980
basically dumb pipes move calls around

00:26:28,300 --> 00:26:31,750
it's going to pour the killers it's also

00:26:29,980 --> 00:26:33,760
important for developers to have a way

00:26:31,750 --> 00:26:35,860
to interact with this enormous network

00:26:33,760 --> 00:26:37,450
of calls that are going on and to offer

00:26:35,860 --> 00:26:39,190
all of these cool services up and talk

00:26:37,450 --> 00:26:40,870
about this whole time to people who have

00:26:39,190 --> 00:26:42,460
nothing more than a cell phone in the

00:26:40,870 --> 00:26:45,160
pocket talking to other people with a

00:26:42,460 --> 00:26:47,140
cell phone in the pocket this is what

00:26:45,160 --> 00:26:49,300
 does role can be deployed into

00:26:47,140 --> 00:26:53,350
the network inside a carrier inside a

00:26:49,300 --> 00:26:56,050
tea inside telefonica and allow an

00:26:53,350 --> 00:26:59,920
outside third party developer to create

00:26:56,050 --> 00:27:02,020
a voice application and apply those two

00:26:59,920 --> 00:27:04,870
calls running inside the carrier so

00:27:02,020 --> 00:27:08,200
because rayo is built on top of XMPP you

00:27:04,870 --> 00:27:09,550
have built in things like Federation you

00:27:08,200 --> 00:27:12,630
have a security model you have

00:27:09,550 --> 00:27:14,740
authentication all these things are

00:27:12,630 --> 00:27:16,600
things that make it kill you feel much

00:27:14,740 --> 00:27:18,430
more comfortable they can control what's

00:27:16,600 --> 00:27:20,440
going on inside their network but at the

00:27:18,430 --> 00:27:22,450
same time it's kind of subversive it's

00:27:20,440 --> 00:27:24,520
cool in the way that this allows all of

00:27:22,450 --> 00:27:27,610
those control mechanisms to be extended

00:27:24,520 --> 00:27:29,140
outside the network so if if you have a

00:27:27,610 --> 00:27:32,020
phone and you authorize me as a

00:27:29,140 --> 00:27:33,430
developer to have some control over your

00:27:32,020 --> 00:27:35,620
call i can start providing these

00:27:33,430 --> 00:27:37,330
services to you with nothing special

00:27:35,620 --> 00:27:39,460
just go to the website and sign up and

00:27:37,330 --> 00:27:42,000
give me your phone number and then you

00:27:39,460 --> 00:27:45,730
know i can i can apply these things so a

00:27:42,000 --> 00:27:48,100
friend of mine jose de castro who is one

00:27:45,730 --> 00:27:49,990
of the authors of this really protocol

00:27:48,100 --> 00:27:51,580
he has some pretty cool examples you

00:27:49,990 --> 00:27:53,620
know you have a phone in your pocket and

00:27:51,580 --> 00:27:55,300
it probably has a button or at least a

00:27:53,620 --> 00:27:58,390
mode where you can turn it into silent

00:27:55,300 --> 00:28:00,700
pushes on what if that became a fan of

00:27:58,390 --> 00:28:02,650
presence what if we could take that that

00:28:00,700 --> 00:28:04,930
switch the state of that switch and make

00:28:02,650 --> 00:28:07,270
a decision as to whether to send you the

00:28:04,930 --> 00:28:09,940
call based on whether you are in silent

00:28:07,270 --> 00:28:10,930
mode or not maybe you can maybe you're

00:28:09,940 --> 00:28:12,760
sitting in a meeting and you've got the

00:28:10,930 --> 00:28:14,560
phone on silent and most calls are not

00:28:12,760 --> 00:28:16,450
all that important maybe maybe it's a

00:28:14,560 --> 00:28:18,490
reminder call from

00:28:16,450 --> 00:28:20,050
a dentist and it's not terribly

00:28:18,490 --> 00:28:22,300
important that it disturb your meeting

00:28:20,050 --> 00:28:24,460
well maybe we can check the state of

00:28:22,300 --> 00:28:26,530
that winger and decide that that call

00:28:24,460 --> 00:28:28,270
should really go to voicemail these are

00:28:26,530 --> 00:28:31,480
things that are only possible if you

00:28:28,270 --> 00:28:34,750
reside inside the carrier and so r AO is

00:28:31,480 --> 00:28:38,020
is I think the next thing that's going

00:28:34,750 --> 00:28:40,870
to revolutionize the way that we deal

00:28:38,020 --> 00:28:46,420
with our telephones and good news is

00:28:40,870 --> 00:28:49,300
it's all open so I went through that a

00:28:46,420 --> 00:28:51,460
lot faster than I thought I did but this

00:28:49,300 --> 00:28:53,500
is the adherent project you can see our

00:28:51,460 --> 00:28:56,650
website and get hub repositories we also

00:28:53,500 --> 00:28:59,770
have contact information for Twitter I I

00:28:56,650 --> 00:29:01,120
did not choose to show code samples

00:28:59,770 --> 00:29:02,320
today because I wasn't sure how many of

00:29:01,120 --> 00:29:04,420
you are rubios but I would be happy to

00:29:02,320 --> 00:29:06,370
do so now but if you have any questions

00:29:04,420 --> 00:29:24,790
or if you would like to see examples I'd

00:29:06,370 --> 00:29:27,340
love to hear them yes yes so the

00:29:24,790 --> 00:29:29,140
question is not know phenom + floozy who

00:29:27,340 --> 00:29:30,610
aren't you know it's a system by which

00:29:29,140 --> 00:29:32,710
you can register your phone number

00:29:30,610 --> 00:29:35,410
essentially in DNS and this makes it

00:29:32,710 --> 00:29:37,150
possible to just as you look up the IP

00:29:35,410 --> 00:29:39,580
dose of website you can look up a phone

00:29:37,150 --> 00:29:43,210
number and determine what end point is

00:29:39,580 --> 00:29:45,100
responsible for handling that call yes

00:29:43,210 --> 00:29:47,110
we do an asterisk on support for enum

00:29:45,100 --> 00:29:49,480
adhesion that you could easily

00:29:47,110 --> 00:29:51,100
influenced support for enum it is a

00:29:49,480 --> 00:29:54,550
going back to the side i had about

00:29:51,100 --> 00:29:55,690
federation the next ten years that we

00:29:54,550 --> 00:29:56,920
will start seeing more Federation i

00:29:55,690 --> 00:30:03,510
believe you know as it is a critical

00:29:56,920 --> 00:30:03,510
part of that so yes yes

00:30:11,680 --> 00:30:14,680
website

00:30:17,919 --> 00:30:22,190
yes so let me into the first one welcome

00:30:20,690 --> 00:30:25,039
to set one to the two parts the question

00:30:22,190 --> 00:30:26,570
the first was where do I get text to

00:30:25,039 --> 00:30:29,389
speech and speech recognition and how do

00:30:26,570 --> 00:30:32,630
I use it so I not only open source ones

00:30:29,389 --> 00:30:37,669
so the first program we go back to the

00:30:32,630 --> 00:30:39,500
the this slide here asterisk itself does

00:30:37,669 --> 00:30:41,539
not ship with any text to speech or

00:30:39,500 --> 00:30:43,610
speech recognition it does have

00:30:41,539 --> 00:30:47,500
connectivity to several off the top of

00:30:43,610 --> 00:30:55,309
my head there are festival kept stroll

00:30:47,500 --> 00:30:57,669
neyo speech flight and CMU Sphinx of

00:30:55,309 --> 00:31:01,700
those the only ones an open source our

00:30:57,669 --> 00:31:07,039
festival and Sphinx and the quality is

00:31:01,700 --> 00:31:08,990
not great unfortunately to get today to

00:31:07,039 --> 00:31:10,220
get really good quality Texas speech or

00:31:08,990 --> 00:31:13,279
speech recognition you have to license

00:31:10,220 --> 00:31:15,110
it the one exception to that and it's

00:31:13,279 --> 00:31:16,610
it's not a great exception ready anyway

00:31:15,110 --> 00:31:19,929
with trip 0 because it's all cloud-based

00:31:16,610 --> 00:31:23,000
they take care of a lot for you so when

00:31:19,929 --> 00:31:25,370
ya with insurance case you pay a flat

00:31:23,000 --> 00:31:27,710
that per minute rate and then their

00:31:25,370 --> 00:31:29,240
entire platform features including touch

00:31:27,710 --> 00:31:31,070
of speech text to speech and speech

00:31:29,240 --> 00:31:33,710
recognition available as part of the

00:31:31,070 --> 00:31:36,110
call so if you were to go on a purely

00:31:33,710 --> 00:31:38,389
open-source platform you could do it you

00:31:36,110 --> 00:31:39,740
just have the license except the lower

00:31:38,389 --> 00:31:44,320
quality of the open source

00:31:39,740 --> 00:31:44,320
implementations or license you know

00:31:49,779 --> 00:31:55,070
right so I mentioned the dsl earlier our

00:31:52,960 --> 00:31:57,139
implementation has an abstraction for

00:31:55,070 --> 00:31:58,340
called the speak method and the speaking

00:31:57,139 --> 00:31:59,990
method knows what kind of back and

00:31:58,340 --> 00:32:01,429
you're connected to and you configure it

00:31:59,990 --> 00:32:03,110
whether it's kept stroll or whether it's

00:32:01,429 --> 00:32:04,940
neo speech whatever and so you just say

00:32:03,110 --> 00:32:05,960
speak in the string and it will take

00:32:04,940 --> 00:32:08,600
that string and pass it off to the right

00:32:05,960 --> 00:32:10,850
back end now and on top of it you can

00:32:08,600 --> 00:32:12,919
also pass what's called SS ml which is

00:32:10,850 --> 00:32:14,659
an XML markup called speech synthesis

00:32:12,919 --> 00:32:16,010
markup language and allows you to

00:32:14,659 --> 00:32:18,110
control lots of things you can control

00:32:16,010 --> 00:32:20,000
intonation you can control the gender of

00:32:18,110 --> 00:32:22,639
the voice that's being read back you can

00:32:20,000 --> 00:32:26,529
control the speed or even the pace of

00:32:22,639 --> 00:32:26,529
the or the speed of text

00:32:26,680 --> 00:32:30,010
okay so the second half your question is

00:32:27,910 --> 00:32:32,170
what is prism and why is it relevant

00:32:30,010 --> 00:32:34,690
here so prism is a commercial product

00:32:32,170 --> 00:32:36,520
created by voxeo the company that that

00:32:34,690 --> 00:32:39,240
builds troppo also the company we're

00:32:36,520 --> 00:32:42,370
partnering with on the rail protocol

00:32:39,240 --> 00:32:44,770
prism underlies troppo as well as a lot

00:32:42,370 --> 00:32:47,350
of other things that boxeo does it also

00:32:44,770 --> 00:32:48,940
is it's a sip servlet container in the

00:32:47,350 --> 00:32:52,300
open source world there's a similar one

00:32:48,940 --> 00:32:54,040
called Moby sense the only thing that to

00:32:52,300 --> 00:32:55,570
my knowledge that prism does that Moby

00:32:54,040 --> 00:32:58,680
sense does not do with regard to what

00:32:55,570 --> 00:33:01,210
we've covered day is that prism has a

00:32:58,680 --> 00:33:02,890
XMPP server container that goes with the

00:33:01,210 --> 00:33:05,980
sip servlet container that makes it

00:33:02,890 --> 00:33:07,840
possible to do the rail protocol I would

00:33:05,980 --> 00:33:09,550
love to see there we sense guys get on

00:33:07,840 --> 00:33:11,830
the rail train and I think that if they

00:33:09,550 --> 00:33:13,060
end up putting a XMPP container in you'd

00:33:11,830 --> 00:33:14,920
be able to go that entire route with

00:33:13,060 --> 00:33:17,530
rayo as well but it's it's a commercial

00:33:14,920 --> 00:33:19,450
speech engine I'm sorry commercial voice

00:33:17,530 --> 00:33:21,010
application engine it would take the

00:33:19,450 --> 00:33:27,000
place of Chopra or asterisk on this

00:33:21,010 --> 00:33:27,000
diagram sure yes

00:33:42,720 --> 00:33:49,300
still more popular than anything else so

00:33:45,990 --> 00:33:53,470
you know I'm not saying you should try

00:33:49,300 --> 00:33:56,080
and send the virus to the industry

00:33:53,470 --> 00:33:58,660
that's behind all those ndas but if you

00:33:56,080 --> 00:34:01,270
want something like radiation to really

00:33:58,660 --> 00:34:05,050
add to certain extent asterix to become

00:34:01,270 --> 00:34:09,940
really big you have to attack them

00:34:05,050 --> 00:34:13,389
through the voicexml see xml vector okay

00:34:09,940 --> 00:34:15,250
so his insane was that the the

00:34:13,389 --> 00:34:17,080
establishment essentially uses voicexml

00:34:15,250 --> 00:34:20,169
that is that is the way of doing things

00:34:17,080 --> 00:34:21,580
and to to be have an effective presence

00:34:20,169 --> 00:34:24,250
to be able to effect any kind change

00:34:21,580 --> 00:34:26,379
need to be able to I suppose disrupt or

00:34:24,250 --> 00:34:31,270
at least be compatible with voicexml is

00:34:26,379 --> 00:34:32,710
that what you're saying so I see I see

00:34:31,270 --> 00:34:36,730
your point now I'm not sure I entirely

00:34:32,710 --> 00:34:39,419
agree and adhesion is a is a different

00:34:36,730 --> 00:34:41,889
paradigm for programming in voicexml

00:34:39,419 --> 00:34:44,409
kind of the intent behind voicexml is

00:34:41,889 --> 00:34:46,300
similar to HTML I have a document that

00:34:44,409 --> 00:34:49,389
represents whatever it is I'm trying to

00:34:46,300 --> 00:34:50,800
express and all those with a few

00:34:49,389 --> 00:34:52,659
exceptions all that is calculated ahead

00:34:50,800 --> 00:34:54,340
of time I think that some of the

00:34:52,659 --> 00:34:56,919
problems that are inherent in voicexml

00:34:54,340 --> 00:34:58,900
are similar to some of the motivations

00:34:56,919 --> 00:35:01,810
that led us to create asterisk and by

00:34:58,900 --> 00:35:04,510
that I mean vxml is a document but it

00:35:01,810 --> 00:35:06,040
contains a programming syntax event

00:35:04,510 --> 00:35:09,160
there's a type of exception handling

00:35:06,040 --> 00:35:10,720
with an XML to me that that makes my

00:35:09,160 --> 00:35:12,460
head hurt I don't quite understand how a

00:35:10,720 --> 00:35:16,690
document can have a programming aspect

00:35:12,460 --> 00:35:19,120
to it and I think that partly that's why

00:35:16,690 --> 00:35:21,340
this is a better approach because this

00:35:19,120 --> 00:35:23,320
this is supplying the right tool of the

00:35:21,340 --> 00:35:25,390
right job we want to be able to create

00:35:23,320 --> 00:35:27,790
sophisticated functionality let's do

00:35:25,390 --> 00:35:29,950
that in in a protein language where we

00:35:27,790 --> 00:35:32,050
have more control over over how that

00:35:29,950 --> 00:35:34,330
works and the ability to use modern

00:35:32,050 --> 00:35:37,120
development tools and exception handling

00:35:34,330 --> 00:35:38,480
that real exception handling as I

00:35:37,120 --> 00:35:40,270
mentioned that you know unit tests

00:35:38,480 --> 00:35:42,980
all these things are not really possible

00:35:40,270 --> 00:35:45,920
at least not meaningfully like this with

00:35:42,980 --> 00:35:49,119
the XML but to your point about whether

00:35:45,920 --> 00:35:53,500
it's impossible to disrupt the industry

00:35:49,119 --> 00:35:57,050
certainly using standards is an easier

00:35:53,500 --> 00:35:58,490
revenue in but I think that because our

00:35:57,050 --> 00:36:00,950
vision of how it should work is so

00:35:58,490 --> 00:36:03,170
different trying to cater to voicexml

00:36:00,950 --> 00:36:05,210
would not we would undermine too much

00:36:03,170 --> 00:36:07,369
the kind of things we're trying to

00:36:05,210 --> 00:36:09,619
express and so see your point but i

00:36:07,369 --> 00:36:11,390
think that the possibilities here are

00:36:09,619 --> 00:36:17,180
much more powerful than simply

00:36:11,390 --> 00:36:20,510
disrupting vxml what other questions you

00:36:17,180 --> 00:36:26,900
have do I have any rubios in the

00:36:20,510 --> 00:36:30,460
audience no rubies Wow I've been doing

00:36:26,900 --> 00:36:35,960
too many Ruby presentations well alright

00:36:30,460 --> 00:36:38,359
is there a capi ruby has a capi if you

00:36:35,960 --> 00:36:40,040
if you do need something that is only

00:36:38,359 --> 00:36:43,280
has a seed library you certainly could

00:36:40,040 --> 00:36:45,290
create a see module for Ruby and here's

00:36:43,280 --> 00:36:47,830
itself does not have a capi it's just

00:36:45,290 --> 00:36:53,930
it's it's a framework more than a

00:36:47,830 --> 00:36:56,109
library okay well thank you all very

00:36:53,930 --> 00:36:56,109
much

00:36:58,810 --> 00:37:00,870

YouTube URL: https://www.youtube.com/watch?v=Iu5dxEZNk5Q


