Title: Gentoo EAPI 5
Publication date: 2013-02-05
Playlist: FOSDEM 2012
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:00,000 --> 00:00:06,990
so the title of this talk is zhengzhou

00:00:03,720 --> 00:00:13,830
APA 5 and aliases as ginger bike

00:00:06,990 --> 00:00:17,449
shedding or whatever so my mind my name

00:00:13,830 --> 00:00:21,350
is Beth peridot imagine Judith since 05

00:00:17,449 --> 00:00:25,050
council Deborah recruiting so basically

00:00:21,350 --> 00:00:28,019
sitting in the port that makes technical

00:00:25,050 --> 00:00:32,399
decisions in Gentry so the idea behind

00:00:28,019 --> 00:00:35,160
this talk was to a collect devs for the

00:00:32,399 --> 00:00:37,860
dinner afterwards so no no let's see how

00:00:35,160 --> 00:00:40,829
many dads we have now largest not least

00:00:37,860 --> 00:00:47,120
someone in there Larry I have a group

00:00:40,829 --> 00:00:51,210
there some more so quite a few good

00:00:47,120 --> 00:00:54,860
other could Andrea's wasn't listening so

00:00:51,210 --> 00:00:54,860
but they'll fridge

00:00:54,960 --> 00:01:00,920
so the question was how many gin Jude as

00:00:57,210 --> 00:01:06,090
we have in their room and we had as

00:01:00,920 --> 00:01:10,740
popping up around the room so what I did

00:01:06,090 --> 00:01:12,960
for the talk was added some basic

00:01:10,740 --> 00:01:19,770
information on the API how many of you

00:01:12,960 --> 00:01:24,600
know evils the the file format most but

00:01:19,770 --> 00:01:28,110
not all so so evils is the packaging

00:01:24,600 --> 00:01:31,830
format for gent you and feel free to ask

00:01:28,110 --> 00:01:35,429
questions at any point because some of

00:01:31,830 --> 00:01:37,979
the items probably need more these more

00:01:35,429 --> 00:01:41,450
background than what I have another

00:01:37,979 --> 00:01:41,450
slide so I'll explain the more yeah

00:01:55,650 --> 00:02:00,420
will there be the question was will

00:01:57,630 --> 00:02:05,910
there be any way to have official been

00:02:00,420 --> 00:02:08,820
hosts for ten two packages they're

00:02:05,910 --> 00:02:12,600
actually already is pioneering packages

00:02:08,820 --> 00:02:14,010
in tinderbox dot who knows the exactly

00:02:12,600 --> 00:02:16,680
roll tinderbox something about shangela

00:02:14,010 --> 00:02:19,490
org that you can use to rescue your

00:02:16,680 --> 00:02:19,490
system but

00:02:25,620 --> 00:02:31,680
so people want to ssl on it yeah i'm

00:02:30,150 --> 00:02:37,590
repeating question then the question was

00:02:31,680 --> 00:02:39,720
could we get ssl on the tina box URL you

00:02:37,590 --> 00:02:42,230
would you that just have you opened the

00:02:39,720 --> 00:02:42,230
back request

00:02:48,470 --> 00:02:53,990
they have open a box to the genuine

00:02:51,710 --> 00:02:56,720
frappe product or I think that that it

00:02:53,990 --> 00:02:59,810
that it will do it and I'm quite sure

00:02:56,720 --> 00:03:07,130
they will be happy to add it even though

00:02:59,810 --> 00:03:14,800
they're already and of course do we have

00:03:07,130 --> 00:03:14,800
Fabio here equally ani no I

00:03:16,790 --> 00:03:22,939
he does my more binary stuff from

00:03:20,840 --> 00:03:25,489
portage I mean with him no more but I

00:03:22,939 --> 00:03:27,250
don't know infrastructure blast that the

00:03:25,489 --> 00:03:29,540
problem with binary package is that

00:03:27,250 --> 00:03:31,760
unless you want to build for all the US

00:03:29,540 --> 00:03:36,970
flag combinations you're always going to

00:03:31,760 --> 00:03:36,970
be tied to a single pre-selected set so

00:04:14,800 --> 00:04:19,290
do you have the other other mike sorry

00:04:19,350 --> 00:04:27,370
sorry is the other mic working okay so

00:04:24,970 --> 00:04:30,910
then we can get that that discussion

00:04:27,370 --> 00:04:33,850
recorded lot so the I think the summer

00:04:30,910 --> 00:04:35,350
is that if you take away use flags and

00:04:33,850 --> 00:04:38,220
compel the binary is why aren't you

00:04:35,350 --> 00:04:38,220
using Debbie in there

00:04:56,780 --> 00:04:59,620
but the

00:05:06,910 --> 00:05:13,420
the question was was to have a point in

00:05:11,200 --> 00:05:16,720
the middle because he builds are great

00:05:13,420 --> 00:05:19,660
they are far better from specs and debs

00:05:16,720 --> 00:05:22,840
by far you have several options that you

00:05:19,660 --> 00:05:25,330
cannot implement in any way on other

00:05:22,840 --> 00:05:28,750
package management system but the thing

00:05:25,330 --> 00:05:32,500
that is maybe maybe refraining users is

00:05:28,750 --> 00:05:37,170
is the time of compiling and the big

00:05:32,500 --> 00:05:40,120
time in Cabo so maybe if having having

00:05:37,170 --> 00:05:43,390
something quite intermediate between

00:05:40,120 --> 00:05:45,660
using binaries that are that corresponds

00:05:43,390 --> 00:05:49,360
in ninety percent of the case to the

00:05:45,660 --> 00:05:53,740
specific hardware that is on the client

00:05:49,360 --> 00:05:56,290
side plus plus having the right to

00:05:53,740 --> 00:05:59,140
compile and pinning free to compile that

00:05:56,290 --> 00:06:01,500
doesn't work with Android and with with

00:05:59,140 --> 00:06:04,450
the air I'm architecture of course I

00:06:01,500 --> 00:06:07,060
think um if you have any people here who

00:06:04,450 --> 00:06:09,220
do ladies I think the race is used to

00:06:07,060 --> 00:06:12,090
come with binary packages that you could

00:06:09,220 --> 00:06:15,730
install three yes of course but I mean

00:06:12,090 --> 00:06:20,620
having having by default portage bean

00:06:15,730 --> 00:06:23,020
hosts for almost almost all almost all

00:06:20,620 --> 00:06:27,340
the cases meaning i know you have people

00:06:23,020 --> 00:06:30,010
who have an ati nvidia Intel

00:06:27,340 --> 00:06:33,400
Architecture and IMG that makes quite a

00:06:30,010 --> 00:06:36,669
lot of simplification and that can that

00:06:33,400 --> 00:06:39,490
can save a lot of compile time is it on

00:06:36,669 --> 00:06:42,460
the road map of gentle or mean I think

00:06:39,490 --> 00:06:45,010
it's a resource intensive effort besides

00:06:42,460 --> 00:06:48,940
all the managers in the boxing so I

00:06:45,010 --> 00:06:51,820
don't think I am not aware of anyone

00:06:48,940 --> 00:06:57,330
actively working on it into a bit kooky

00:06:51,820 --> 00:07:00,729
on us anyone there as you have a comment

00:06:57,330 --> 00:07:08,099
you're working on it

00:07:00,729 --> 00:07:08,099
so we have when will it be ready okay

00:07:08,729 --> 00:07:12,569
there another coming yeah

00:07:13,600 --> 00:07:21,220
actually I think instead of having some

00:07:18,310 --> 00:07:24,460
common set of binary packages it will be

00:07:21,220 --> 00:07:31,300
much more useful to him happy easy way

00:07:24,460 --> 00:07:34,030
to configure been host for periodic

00:07:31,300 --> 00:07:37,860
rebuilds and have custom stage force

00:07:34,030 --> 00:07:41,710
with binary packages and and so on and

00:07:37,860 --> 00:07:46,390
I'm working on this as a side project

00:07:41,710 --> 00:07:49,390
because I I want it and I need it and I

00:07:46,390 --> 00:07:52,390
have running into a few problems and

00:07:49,390 --> 00:07:58,080
with the testing package is not really

00:07:52,390 --> 00:08:03,450
building and yeah but I think this is

00:07:58,080 --> 00:08:07,870
really not the issue is not about having

00:08:03,450 --> 00:08:10,990
official gender packages but making

00:08:07,870 --> 00:08:14,080
making some binary packages readily

00:08:10,990 --> 00:08:16,090
available there was with Alan and maybe

00:08:14,080 --> 00:08:20,220
it's so alive there is a barren if you

00:08:16,090 --> 00:08:23,220
want this club described destroy easily

00:08:20,220 --> 00:08:27,760
installed easily and have Jen to which

00:08:23,220 --> 00:08:30,480
or at least you can use it as a as a

00:08:27,760 --> 00:08:37,090
gentle diaper but it's true there is

00:08:30,480 --> 00:08:40,180
nothing of such a type or servers and I

00:08:37,090 --> 00:08:45,220
think it's a bit looking for is

00:08:40,180 --> 00:08:49,020
installation of servers or anything on

00:08:45,220 --> 00:08:51,970
the server side so I think a tool for

00:08:49,020 --> 00:08:54,160
easy easy building of the stage force

00:08:51,970 --> 00:08:57,089
and binary packages I I've tried

00:08:54,160 --> 00:09:00,820
catalyst I've tried metro and

00:08:57,089 --> 00:09:04,060
it didn't really get the job done well

00:09:00,820 --> 00:09:06,760
for me because I won't really especially

00:09:04,060 --> 00:09:12,300
tailored state stage force and they

00:09:06,760 --> 00:09:12,300
didn't step out out of the out of the

00:09:14,070 --> 00:09:23,339
limitations of the basic release but I'm

00:09:19,420 --> 00:09:27,610
going off topic with this yeah all of it

00:09:23,339 --> 00:09:33,459
so but the idea i still have good tool

00:09:27,610 --> 00:09:35,410
for creating vin hosts fabia right there

00:09:33,459 --> 00:09:39,339
was a question I well Jen you have a

00:09:35,410 --> 00:09:41,800
visual a blast binary hosts I know if

00:09:39,339 --> 00:09:43,930
you have any say on the topic as you're

00:09:41,800 --> 00:09:49,959
interested in binary packages more than

00:09:43,930 --> 00:09:52,930
I am but there's a I didn't hear the

00:09:49,959 --> 00:09:56,050
question from the beginning so could you

00:09:52,930 --> 00:10:00,399
try to summarize it there was a request

00:09:56,050 --> 00:10:04,680
we have a blessed binary a package

00:10:00,399 --> 00:10:08,920
repositories in gentoo if we have it

00:10:04,680 --> 00:10:11,319
another is it on the road map oh but

00:10:08,920 --> 00:10:19,199
you've done some work on binary packages

00:10:11,319 --> 00:10:21,899
but ya rabbi wise but point is wise I

00:10:19,199 --> 00:10:25,300
actually didn't get the question right

00:10:21,899 --> 00:10:28,800
so what's the action and the question

00:10:25,300 --> 00:10:34,230
from there for next year but yeah

00:10:28,800 --> 00:10:34,230
on the same bro there no this guy

00:10:36,170 --> 00:10:46,040
my main purpose was to have more let's

00:10:41,720 --> 00:10:48,290
say more newbies come to Gentoo that was

00:10:46,040 --> 00:10:50,180
why I was asking the question why I was

00:10:48,290 --> 00:10:53,089
proposing it and by the way I find that

00:10:50,180 --> 00:10:55,310
the guys idea is better than mine

00:10:53,089 --> 00:10:58,670
because you can select at which stage

00:10:55,310 --> 00:11:02,630
you can have a package in cell that can

00:10:58,670 --> 00:11:05,029
be a very great great idea in fact so

00:11:02,630 --> 00:11:09,769
that the only the only purpose of this

00:11:05,029 --> 00:11:12,459
question was to have to have the

00:11:09,769 --> 00:11:16,279
community come back to thank you and

00:11:12,459 --> 00:11:19,339
especially noogies who wanted to work

00:11:16,279 --> 00:11:23,660
only from the moment that now father is

00:11:19,339 --> 00:11:26,930
itching really well I think that a good

00:11:23,660 --> 00:11:29,389
path to to come to Gentoo is actually

00:11:26,930 --> 00:11:32,649
try to use sabe on which is the easy

00:11:29,389 --> 00:11:37,070
part d easy version of gen 2 which is

00:11:32,649 --> 00:11:40,850
its purpose is actually to catch nubes

00:11:37,070 --> 00:11:44,600
catch users from ubuntu or arch or

00:11:40,850 --> 00:11:49,220
whatever this throw and and yeah catch

00:11:44,600 --> 00:11:53,120
and bring them to a gentle basis system

00:11:49,220 --> 00:11:57,079
and actually the next step would be for

00:11:53,120 --> 00:12:01,370
the user if one wants no more how our

00:11:57,079 --> 00:12:05,240
system can can be configured etc could

00:12:01,370 --> 00:12:10,040
easily from civilian get to arielle

00:12:05,240 --> 00:12:13,760
gentoo system actually so the path for

00:12:10,040 --> 00:12:16,610
new bias I think in my opinion is to try

00:12:13,760 --> 00:12:18,940
civilian distribution which is

00:12:16,610 --> 00:12:22,730
completely one hundred percent

00:12:18,940 --> 00:12:26,690
compatible with Jen to stick with it for

00:12:22,730 --> 00:12:30,110
a while know how the portage system

00:12:26,690 --> 00:12:35,660
works etc and then make the jump if one

00:12:30,110 --> 00:12:38,899
wants I think that's the way to do it in

00:12:35,660 --> 00:12:41,899
my opinion and with saba you get binary

00:12:38,899 --> 00:12:44,230
packages so if you just want to get a

00:12:41,899 --> 00:12:49,150
system upper ending you just

00:12:44,230 --> 00:12:53,580
installed sabe on and be happy okay

00:12:49,150 --> 00:12:56,080
that's did I answered your question

00:12:53,580 --> 00:12:57,340
there's this always and with newbies and

00:12:56,080 --> 00:13:00,570
gender there's always the question in

00:12:57,340 --> 00:13:03,310
that Jen jus doesn't want to attract the

00:13:00,570 --> 00:13:05,230
first time linux users on there unless

00:13:03,310 --> 00:13:10,150
they're really involved in getting to

00:13:05,230 --> 00:13:11,650
know as its they don't get from other

00:13:10,150 --> 00:13:15,430
gems you what they probably would have

00:13:11,650 --> 00:13:20,290
gotten from ubuntu as I think if you if

00:13:15,430 --> 00:13:24,480
you see it as I saw OSI stack gentoo is

00:13:20,290 --> 00:13:26,770
a level three and we are looking for so

00:13:24,480 --> 00:13:29,170
if you just want to go down and

00:13:26,770 --> 00:13:33,430
implement your staff just go down living

00:13:29,170 --> 00:13:37,420
tree and and have fun with UDP or

00:13:33,430 --> 00:13:40,570
whatever so coming back to the top of

00:13:37,420 --> 00:13:46,090
EAP is the Easter wisely being cranking

00:13:40,570 --> 00:13:49,020
them out pretty much one per year but I

00:13:46,090 --> 00:13:49,020
don't know what

00:13:49,730 --> 00:13:56,089
it is time for the next one so that's

00:13:52,130 --> 00:13:59,180
why I wanted to do the talk and EAP 1 EA

00:13:56,089 --> 00:14:02,329
pay one night on that no the heat your

00:13:59,180 --> 00:14:07,040
number he wasn't in the tag so but

00:14:02,329 --> 00:14:10,010
sometimes before that so why is it a bit

00:14:07,040 --> 00:14:12,620
slow portage the main package manager is

00:14:10,010 --> 00:14:14,810
a bit takes a while to implement a new

00:14:12,620 --> 00:14:19,550
features and and of course can take time

00:14:14,810 --> 00:14:22,040
to pick the color for the shed for

00:14:19,550 --> 00:14:26,209
example a long discussion about should

00:14:22,040 --> 00:14:30,709
we add the EAP I the number to the file

00:14:26,209 --> 00:14:34,370
name at the end was going for quite a

00:14:30,709 --> 00:14:38,089
while and never it went quite close

00:14:34,370 --> 00:14:43,600
during the end of toy boat and since

00:14:38,089 --> 00:14:43,600
then it's been pending so

00:14:44,180 --> 00:14:49,970
to actual features what I did I went

00:14:47,210 --> 00:14:52,839
through the in the box to change either

00:14:49,970 --> 00:14:57,290
goregaon the product ginger hosted

00:14:52,839 --> 00:15:01,070
projects and the component PMS / AP a--

00:14:57,290 --> 00:15:03,830
you can find ideas floating around to be

00:15:01,070 --> 00:15:06,220
implemented EAP I so what I did was go

00:15:03,830 --> 00:15:09,320
through the list and pick some

00:15:06,220 --> 00:15:13,310
interesting ideas or things that I would

00:15:09,320 --> 00:15:16,399
find useful to be on the slides and so

00:15:13,310 --> 00:15:18,140
we can discuss and all the webs who

00:15:16,399 --> 00:15:20,720
don't agree with the ideas can shoot

00:15:18,140 --> 00:15:23,209
them down and then at the end if you

00:15:20,720 --> 00:15:27,860
have any more ideas besides these then

00:15:23,209 --> 00:15:32,930
we can discuss those from you now what I

00:15:27,860 --> 00:15:36,290
would personally like the most is extra

00:15:32,930 --> 00:15:38,839
borough I think does this already but to

00:15:36,290 --> 00:15:41,600
really get rid of the currently there

00:15:38,839 --> 00:15:43,279
are two variables bill time the actual

00:15:41,600 --> 00:15:46,310
three but two main variables bill time

00:15:43,279 --> 00:15:50,089
depend and already been four runs on

00:15:46,310 --> 00:15:53,540
dependencies and then a special Circle

00:15:50,089 --> 00:15:56,570
Circle dependency breaker called P

00:15:53,540 --> 00:15:59,089
depend both depends so what the

00:15:56,570 --> 00:16:02,930
discussion is that you have them in a

00:15:59,089 --> 00:16:04,730
single variable and in the more defined

00:16:02,930 --> 00:16:08,660
way currently

00:16:04,730 --> 00:16:11,209
if you look at this back package manager

00:16:08,660 --> 00:16:14,660
specification on how the dependents are

00:16:11,209 --> 00:16:18,290
defined that it's very it's not really

00:16:14,660 --> 00:16:21,649
clear and because of the historical way

00:16:18,290 --> 00:16:24,560
imported work too I would want to

00:16:21,649 --> 00:16:26,690
separate them to a more criminal level

00:16:24,560 --> 00:16:28,579
and specific about in that way but I

00:16:26,690 --> 00:16:32,389
think there are people who object this

00:16:28,579 --> 00:16:37,310
meta other one of those people in the

00:16:32,389 --> 00:16:42,829
audience not today good so i can say

00:16:37,310 --> 00:16:44,540
that everyone here support that idea so

00:16:42,829 --> 00:16:48,889
what happens currently is that with

00:16:44,540 --> 00:16:51,370
binary packages use are already bend but

00:16:48,889 --> 00:16:53,870
if you have some for example what I

00:16:51,370 --> 00:16:55,490
benefit I could think of is that if you

00:16:53,870 --> 00:16:59,720
use something only in package post

00:16:55,490 --> 00:17:02,600
install you would have to put it to our

00:16:59,720 --> 00:17:05,089
deep end because the binary packages are

00:17:02,600 --> 00:17:08,140
running that step but even though you

00:17:05,089 --> 00:17:08,140
know needing a run time

00:17:16,260 --> 00:17:25,630
export functions anyone any people here

00:17:19,240 --> 00:17:27,370
who have written classes so do you agree

00:17:25,630 --> 00:17:30,870
with the assessment that export

00:17:27,370 --> 00:17:34,390
functions is totally unnecessary it is a

00:17:30,870 --> 00:17:39,550
way to tell list in the file that which

00:17:34,390 --> 00:17:41,560
functions the a class has so that could

00:17:39,550 --> 00:17:45,180
be just basically automatic and removed

00:17:41,560 --> 00:17:45,180
no objections good

00:17:47,410 --> 00:17:55,110
so when writing so what happens when you

00:17:52,570 --> 00:17:58,270
use e-bills is that their steps

00:17:55,110 --> 00:18:01,240
basically if you the traditional

00:17:58,270 --> 00:18:05,170
configure make make install there's a

00:18:01,240 --> 00:18:09,090
pre for evils there's matching steps and

00:18:05,170 --> 00:18:15,190
bit more unpack prepare configure

00:18:09,090 --> 00:18:17,580
compile install for the source so in the

00:18:15,190 --> 00:18:19,930
e classes you can provide defaults and

00:18:17,580 --> 00:18:22,480
then if you don't want you to leave

00:18:19,930 --> 00:18:26,200
defaults in the e builds you have the

00:18:22,480 --> 00:18:28,690
you can specify your own but currently

00:18:26,200 --> 00:18:33,820
there's no way in the e-class to sell

00:18:28,690 --> 00:18:35,770
that I want this at source configured

00:18:33,820 --> 00:18:41,170
diamond want this e class function to be

00:18:35,770 --> 00:18:46,000
always run some people make the argument

00:18:41,170 --> 00:18:48,070
that e bills themselves should then just

00:18:46,000 --> 00:18:50,320
be calling that a class function but at

00:18:48,070 --> 00:18:53,200
least with Java classes and those that

00:18:50,320 --> 00:18:54,970
have needs with this fine that I find

00:18:53,200 --> 00:18:59,290
that it's very hard to remember to do it

00:18:54,970 --> 00:19:01,300
and carhartt to automatic catch let's

00:18:59,290 --> 00:19:03,190
set up a lot of infrastructure so why

00:19:01,300 --> 00:19:05,400
not have the package manager take care

00:19:03,190 --> 00:19:05,400
of it

00:19:12,160 --> 00:19:18,310
mmm that is it well at least my common

00:19:16,840 --> 00:19:21,760
use guys doesn't matter because there's

00:19:18,310 --> 00:19:24,970
there they tend to be more like checks

00:19:21,760 --> 00:19:27,450
but though that's the time for bike

00:19:24,970 --> 00:19:27,450
shedding

00:19:36,250 --> 00:19:40,470
yeah and I'm just going to give the mic

00:19:42,669 --> 00:19:46,330
typical worst case if you have is if you

00:19:45,009 --> 00:19:51,399
have an e built for language bindings

00:19:46,330 --> 00:19:53,919
that is a KDE package I'm you want to

00:19:51,399 --> 00:19:55,629
call the class or language which is

00:19:53,919 --> 00:19:59,320
something like Java EE class or whatever

00:19:55,629 --> 00:20:02,350
and you also want to use the KDE classes

00:19:59,320 --> 00:20:05,289
and then you end up with wanting to call

00:20:02,350 --> 00:20:08,049
well Katie for base package setup and

00:20:05,289 --> 00:20:10,029
java package setup and then you don't

00:20:08,049 --> 00:20:12,759
know in which order and then you don't

00:20:10,029 --> 00:20:14,590
know how they interact with each other

00:20:12,759 --> 00:20:16,629
so and this needs some careful

00:20:14,590 --> 00:20:18,129
preparation but it's a it's definitely a

00:20:16,629 --> 00:20:20,440
very good idea that they're called

00:20:18,129 --> 00:20:24,009
automatically somehow it just needs to

00:20:20,440 --> 00:20:26,590
have a clear on earth if you get a bid

00:20:24,009 --> 00:20:31,869
that you specify you if you want you can

00:20:26,590 --> 00:20:34,720
have both pre and after but the need is

00:20:31,869 --> 00:20:36,249
the at least what the so a problem I'm

00:20:34,720 --> 00:20:39,220
so out trying to solve here is that

00:20:36,249 --> 00:20:41,289
there's some QA and those kind of

00:20:39,220 --> 00:20:44,109
actions that that they are not

00:20:41,289 --> 00:20:46,269
independent on the order so for that bad

00:20:44,109 --> 00:20:48,669
reason for that that used asthma which

00:20:46,269 --> 00:20:51,090
are there for the general solution yeah

00:20:48,669 --> 00:20:51,090
true

00:20:58,360 --> 00:21:03,460
are all good up streams all the options

00:21:01,390 --> 00:21:09,670
really source code and it's always easy

00:21:03,460 --> 00:21:11,620
to package right in that but back

00:21:09,670 --> 00:21:16,210
there's the discussion that if you want

00:21:11,620 --> 00:21:19,450
to if you need to create the file that's

00:21:16,210 --> 00:21:20,950
get distributed on the servers right

00:21:19,450 --> 00:21:24,850
currently happens that people maintain

00:21:20,950 --> 00:21:29,110
their own scripts somewhere for example

00:21:24,850 --> 00:21:31,930
we provide binary packages for OpenJDK

00:21:29,110 --> 00:21:34,720
just because it takes a lot of memory

00:21:31,930 --> 00:21:40,000
and time to compile and libreoffice to

00:21:34,720 --> 00:21:42,340
and things like that but so so to

00:21:40,000 --> 00:21:45,190
package the u cube for example use this

00:21:42,340 --> 00:21:50,140
to have the steps to create the binary

00:21:45,190 --> 00:21:52,900
package for those special occasions then

00:21:50,140 --> 00:21:55,920
in the back you find that discretion

00:21:52,900 --> 00:22:00,330
about more generally starting to have

00:21:55,920 --> 00:22:04,840
more main maintenance on maintainer only

00:22:00,330 --> 00:22:07,090
phases in emails Spanky or who was

00:22:04,840 --> 00:22:13,060
suggesting in that that we could move

00:22:07,090 --> 00:22:15,670
qhx to maintain a specific functions to

00:22:13,060 --> 00:22:19,270
reduce the noise from users but that

00:22:15,670 --> 00:22:21,040
that's probably controversial but that

00:22:19,270 --> 00:22:23,570
is also bar of the discretion in that

00:22:21,040 --> 00:22:26,720
five

00:22:23,570 --> 00:22:31,430
so and any devs here who would i have

00:22:26,720 --> 00:22:33,620
used for this this kind of stuff sure

00:22:31,430 --> 00:22:36,290
the best application is oxygen oxygen

00:22:33,620 --> 00:22:39,110
icons because we always repack it

00:22:36,290 --> 00:22:42,920
because because nobody in gen 2 has ever

00:22:39,110 --> 00:22:44,750
used for the scalable SVG icons so I

00:22:42,920 --> 00:22:46,520
mean the tar file that you download from

00:22:44,750 --> 00:22:48,380
from the KDE service is somewhere around

00:22:46,520 --> 00:22:52,960
three hundred and fifty megabytes also

00:22:48,380 --> 00:22:52,960
and we end up with a 25 megabyte file

00:22:53,230 --> 00:23:01,370
have you but up shrink and strip it down

00:22:58,720 --> 00:23:04,690
upstream can but refuses to do because

00:23:01,370 --> 00:23:04,690
they say it's a licensing issue

00:23:09,920 --> 00:23:16,570
we only strip it down if it's not with

00:23:13,010 --> 00:23:16,570
the youth flag pin package set

00:23:24,410 --> 00:23:27,410
maybe

00:23:33,870 --> 00:23:42,070
so next item my phone was to move

00:23:37,680 --> 00:23:43,870
description to meta data XML there in a

00:23:42,070 --> 00:23:47,290
build the package directories you have

00:23:43,870 --> 00:23:48,670
this XML file having package level

00:23:47,290 --> 00:23:50,680
metadata and then you have the

00:23:48,670 --> 00:23:53,170
individual ebuild files that have a

00:23:50,680 --> 00:23:57,880
build specific metadata which includes

00:23:53,170 --> 00:23:59,290
the variable description so Fabio might

00:23:57,880 --> 00:24:01,030
know but I'm not too sure what

00:23:59,290 --> 00:24:03,250
description which version of the

00:24:01,030 --> 00:24:04,960
description ported uses when it tries to

00:24:03,250 --> 00:24:10,950
show you the package description I'm

00:24:04,960 --> 00:24:10,950
assuming it might be the latest but

00:24:19,410 --> 00:24:23,310
yeah the answer was in he oh man he

00:24:21,690 --> 00:24:28,350
asked the API and he doesn't know what

00:24:23,310 --> 00:24:32,970
doesn't really hurt so at least from my

00:24:28,350 --> 00:24:35,820
perspective the package should have only

00:24:32,970 --> 00:24:38,550
in one description by default in the

00:24:35,820 --> 00:24:42,620
single place but then comes to this

00:24:38,550 --> 00:24:45,930
discussion that is there a use case for

00:24:42,620 --> 00:24:48,960
having a version specific described

00:24:45,930 --> 00:24:54,660
descriptions that we need to be shown at

00:24:48,960 --> 00:24:58,610
all that made or maybe slot specific if

00:24:54,660 --> 00:24:58,610
there's a new major version huh Diego

00:25:00,100 --> 00:25:04,770
you could get android's can you pass the

00:25:02,559 --> 00:25:04,770
mic

00:25:07,080 --> 00:25:12,139
you

00:25:09,049 --> 00:25:13,909
very some use case for red but we have a

00:25:12,139 --> 00:25:15,919
solution for that as well metadata has a

00:25:13,909 --> 00:25:17,869
restrict keyword but we can use to

00:25:15,919 --> 00:25:21,080
restrict the description to a particular

00:25:17,869 --> 00:25:23,419
version or slot or super sub set of

00:25:21,080 --> 00:25:26,059
actions so shouldn't be a problem yeah

00:25:23,419 --> 00:25:28,399
the question much more should be allowed

00:25:26,059 --> 00:25:32,330
that at all or just have one description

00:25:28,399 --> 00:25:34,100
we have used it before especially bit

00:25:32,330 --> 00:25:39,049
means lots of the same package because

00:25:34,100 --> 00:25:42,830
sometimes like the content of a package

00:25:39,049 --> 00:25:47,049
changes so drastically between salsa but

00:25:42,830 --> 00:25:49,700
you don't have the same software so yeah

00:25:47,049 --> 00:25:51,820
we have solved what already some time

00:25:49,700 --> 00:25:51,820
ago

00:26:01,570 --> 00:26:07,510
but you don't need the description to

00:26:04,610 --> 00:26:07,510
install it though

00:26:10,620 --> 00:26:20,800
yeah yeah it's a good point i haven't I

00:26:14,530 --> 00:26:25,530
am considered that well in general it is

00:26:20,800 --> 00:26:25,530
that a package is a set of Evil's so

00:26:25,980 --> 00:26:31,750
ideally of course they don't live that

00:26:27,940 --> 00:26:36,220
long in the bogs illa but Fabia we also

00:26:31,750 --> 00:26:39,340
have the long description tag I guess in

00:26:36,220 --> 00:26:42,880
metadata XML already so what's the point

00:26:39,340 --> 00:26:44,950
in having one kind of description in

00:26:42,880 --> 00:26:47,290
metadata and one another kind of the

00:26:44,950 --> 00:26:51,430
script description in the e bo doesn't

00:26:47,290 --> 00:26:53,980
make sense we do but of course we do

00:26:51,430 --> 00:26:57,430
need a short and a long one yeah sure

00:26:53,980 --> 00:27:03,580
sure sure that for sure but not in in

00:26:57,430 --> 00:27:08,530
different places actually yeah I am for

00:27:03,580 --> 00:27:12,430
removing it yeah but as far as tan as

00:27:08,530 --> 00:27:14,620
I'm from for moving actually from for

00:27:12,430 --> 00:27:17,970
moving description to meditate a yeah I

00:27:14,620 --> 00:27:17,970
agree yeah

00:27:23,340 --> 00:27:31,620
so let's move the long description to

00:27:26,850 --> 00:27:33,720
the abl also given I was the one

00:27:31,620 --> 00:27:36,210
proposing the condition of description

00:27:33,720 --> 00:27:39,770
to meta data from a use description at

00:27:36,210 --> 00:27:42,840
body but another thing but moved from

00:27:39,770 --> 00:27:46,410
another file they used local file to the

00:27:42,840 --> 00:27:50,100
meta-data xml and i've been pressing for

00:27:46,410 --> 00:27:54,720
this to happen for quite a bit meta data

00:27:50,100 --> 00:27:56,580
dot XML doesn't doesn't have only core

00:27:54,720 --> 00:27:58,050
information they have a lot of user

00:27:56,580 --> 00:28:00,810
facing information like they use

00:27:58,050 --> 00:28:03,330
descriptions so it makes sense to keep

00:28:00,810 --> 00:28:07,560
using that for user visual information

00:28:03,330 --> 00:28:10,560
as well and since it's XML the package

00:28:07,560 --> 00:28:11,780
manager can simply handle it for the

00:28:10,560 --> 00:28:15,000
user and show it to the user

00:28:11,780 --> 00:28:18,510
transparently / showed me a new reason

00:28:15,000 --> 00:28:20,640
why the package manager and those the

00:28:18,510 --> 00:28:24,000
description in the good fight itself

00:28:20,640 --> 00:28:27,360
differently from the data from the meta

00:28:24,000 --> 00:28:30,630
data so doesn't make sense to have to

00:28:27,360 --> 00:28:34,200
from the point of side of what you can

00:28:30,630 --> 00:28:36,480
meet and decreasing the size of a

00:28:34,200 --> 00:28:41,480
builder is also always a nice thing

00:28:36,480 --> 00:28:41,480
because our sink is slow

00:28:44,790 --> 00:28:48,050
can you get the mic

00:28:50,509 --> 00:29:00,099
and the I'm gonna fall back to taxonomy

00:28:56,389 --> 00:29:03,609
because meta data means describe data so

00:29:00,099 --> 00:29:03,609
description must go there

00:29:09,830 --> 00:29:13,630
that's my humble end of you

00:29:13,960 --> 00:29:18,700
so there's none really

00:29:22,800 --> 00:29:27,690
so why only moving the description and

00:29:25,500 --> 00:29:31,400
not also the homepage because it's

00:29:27,690 --> 00:29:31,400
similar okay

00:29:37,200 --> 00:29:47,389
as assuming upstream homepage doesn't

00:29:41,510 --> 00:29:47,389
change every release hopefully at least

00:29:54,489 --> 00:29:57,729
what will be

00:30:00,110 --> 00:30:07,580
it could but then again we can use that

00:30:03,280 --> 00:30:11,780
metadata options you have the home that

00:30:07,580 --> 00:30:13,280
immersion specific but I would it

00:30:11,780 --> 00:30:15,260
wouldn't be my first choice my first

00:30:13,280 --> 00:30:17,450
choice was to would be the man that

00:30:15,260 --> 00:30:20,710
famous device to stab people of the

00:30:17,450 --> 00:30:20,710
internet and am I not true

00:30:30,110 --> 00:30:38,420
who's ever worked on an email that has a

00:30:33,440 --> 00:30:46,090
zip file and forgot to depend on I parts

00:30:38,420 --> 00:30:46,090
on zip only a couple people I mean

00:30:49,090 --> 00:30:56,590
so one way or another I would love to

00:30:53,630 --> 00:31:01,790
see a way to do that automatically I've

00:30:56,590 --> 00:31:05,000
seen anyone here who has read the recent

00:31:01,790 --> 00:31:09,410
stuff on gentoo dev they eClass that's

00:31:05,000 --> 00:31:14,170
been written for this so maybe you want

00:31:09,410 --> 00:31:14,170
to summarize under is that okay

00:31:24,490 --> 00:31:27,600
it's gonna get

00:31:27,820 --> 00:31:30,390
it

00:31:31,090 --> 00:31:35,740
I just hope that whatever they are doing

00:31:33,250 --> 00:31:37,150
it's going to also support exotic stuff

00:31:35,740 --> 00:31:39,940
because it's always getting annoying

00:31:37,150 --> 00:31:42,510
when you have a 7 zip archive on ISO or

00:31:39,940 --> 00:31:42,510
whatever

00:31:56,200 --> 00:32:01,500
sorry

00:31:58,320 --> 00:32:03,809
isn't in better to settle once and for

00:32:01,500 --> 00:32:08,610
all that the unpacker is either gzip or

00:32:03,809 --> 00:32:16,529
busy too well health at the upstream or

00:32:08,610 --> 00:32:19,620
distribute zips it was my humble point

00:32:16,529 --> 00:32:25,789
of view I would have no objection sir

00:32:19,620 --> 00:32:31,759
but I don't see it happening we do have

00:32:25,789 --> 00:32:34,759
packages that the source file is rpm or

00:32:31,759 --> 00:32:34,759
deb

00:32:41,380 --> 00:32:47,350
expecting a zip file takes it

00:32:54,490 --> 00:32:57,990
as agent

00:33:03,779 --> 00:33:06,559
sorry

00:33:06,630 --> 00:33:11,460
it's good

00:33:08,310 --> 00:33:13,740
the old jdk had the South extracting

00:33:11,460 --> 00:33:15,780
fight as well yeah but I flare you

00:33:13,740 --> 00:33:18,720
unpacked something first and then run

00:33:15,780 --> 00:33:21,290
that from the resulting and then

00:33:18,720 --> 00:33:21,290
extracted

00:33:23,900 --> 00:33:32,090
how would you implement the detection of

00:33:29,060 --> 00:33:35,990
the impactor during the the

00:33:32,090 --> 00:33:38,450
pre-configure of the bill well I for the

00:33:35,990 --> 00:33:42,500
most cases I would imagine that there's

00:33:38,450 --> 00:33:48,340
a file suffix that if it's adults if

00:33:42,500 --> 00:33:52,430
it's not a another busy to file whatever

00:33:48,340 --> 00:33:55,130
so multiple you can always fall back on

00:33:52,430 --> 00:34:01,070
doing things manually if it's a zip file

00:33:55,130 --> 00:34:02,840
that is actually a 74 whatever then you

00:34:01,070 --> 00:34:04,790
would just depend on that and unpack it

00:34:02,840 --> 00:34:06,860
yourself from handling source on impact

00:34:04,790 --> 00:34:09,409
but the common use gaze is that it

00:34:06,860 --> 00:34:11,120
starts hard of BCG well that doesn't

00:34:09,409 --> 00:34:15,169
actually require anything but God zips

00:34:11,120 --> 00:34:19,090
are unpacked with the onset and so you

00:34:15,169 --> 00:34:19,090
can map it based on the file name

00:34:20,070 --> 00:34:25,850
and if it doesn't work for you then tell

00:34:22,110 --> 00:34:25,850
package manager manually what you need

00:34:26,589 --> 00:34:32,549
I wouldn't rely on the file extension on

00:34:33,669 --> 00:34:36,270
so

00:34:37,210 --> 00:34:43,570
ok

00:34:39,850 --> 00:34:45,670
maybe you can include it in a bit if you

00:34:43,570 --> 00:34:47,320
rely on magic numbers to calculate the

00:34:45,670 --> 00:34:51,910
dependencies you would have to download

00:34:47,320 --> 00:34:58,540
all the files of the whole of the whole

00:34:51,910 --> 00:35:00,700
dependency tree and take a look yeah so

00:34:58,540 --> 00:35:05,620
you would have generated dependency

00:35:00,700 --> 00:35:10,090
information coming with the tree or how

00:35:05,620 --> 00:35:13,900
how about just adding a check on Rapa

00:35:10,090 --> 00:35:17,740
man instead that text the source file

00:35:13,900 --> 00:35:19,870
and tries to search through the

00:35:17,740 --> 00:35:22,110
dependencies if there are dependent

00:35:19,870 --> 00:35:27,010
missing dependencies for that for that

00:35:22,110 --> 00:35:28,690
zip file there is there's actually at

00:35:27,010 --> 00:35:32,710
least wash to check for that I know if

00:35:28,690 --> 00:35:36,090
it was rap amano p check or the polish

00:35:32,710 --> 00:35:40,500
tool that can eventually move removed

00:35:36,090 --> 00:35:40,500
okay so recognize the way we don't want

00:35:46,920 --> 00:35:52,049
that's what I was going to propose

00:35:48,720 --> 00:35:54,540
myself as a fallback if the extensions

00:35:52,049 --> 00:35:56,760
from the relied upon usually the

00:35:54,540 --> 00:35:58,740
developer knows what so we can just

00:35:56,760 --> 00:36:02,400
override it with a specific department

00:35:58,740 --> 00:36:05,250
but just about it but you have the root

00:36:02,400 --> 00:36:07,859
of the problem is that developers are

00:36:05,250 --> 00:36:11,240
perfect and they forget to say that

00:36:07,859 --> 00:36:11,240
information what is the unpacker

00:36:16,090 --> 00:36:19,600
well what

00:36:20,720 --> 00:36:28,640
but why make it a mandatory field if it

00:36:24,580 --> 00:36:31,490
if it care if you can do without it so

00:36:28,640 --> 00:36:32,780
just to tell that in each new rebuild

00:36:31,490 --> 00:36:35,710
you would have to start telling people

00:36:32,780 --> 00:36:39,760
that this needs to be unpacked with tar

00:36:35,710 --> 00:36:39,760
but for the normal case

00:36:41,270 --> 00:36:46,460
just about trying to make it convenient

00:36:43,460 --> 00:36:49,580
and safe at the same time so default

00:36:46,460 --> 00:36:52,460
taken from the archive extension and

00:36:49,580 --> 00:36:54,650
then over over I double by the developer

00:36:52,460 --> 00:36:57,110
if it's not reliable should be covering

00:36:54,650 --> 00:36:59,720
most of the cases there's usually also

00:36:57,110 --> 00:37:02,480
the case that if you make the simplest

00:36:59,720 --> 00:37:04,990
emails work as best as possible then

00:37:02,480 --> 00:37:07,220
normal users are able to come up with

00:37:04,990 --> 00:37:10,940
usable stuff than the cell for their own

00:37:07,220 --> 00:37:13,400
use if there's plenty of magic variables

00:37:10,940 --> 00:37:17,050
to define and things well that makes it

00:37:13,400 --> 00:37:17,050
harder for them to write their own stuff

00:37:21,410 --> 00:37:23,440
I

00:37:25,870 --> 00:37:32,140
do you need at some point to separate

00:37:28,210 --> 00:37:34,300
the archiver from the compressor well

00:37:32,140 --> 00:37:37,140
it's already done it's for zip files

00:37:34,300 --> 00:37:39,160
it's a different package that has the

00:37:37,140 --> 00:37:42,250
compressor and different package that

00:37:39,160 --> 00:37:45,010
has the unpacker but I mean when you

00:37:42,250 --> 00:37:49,900
have twice at the same time the RBZ

00:37:45,010 --> 00:37:53,320
targeted for example doing maybe we

00:37:49,900 --> 00:37:56,560
might need to have both of the

00:37:53,320 --> 00:38:00,070
information to prevent developers from

00:37:56,560 --> 00:38:02,430
telling my liver is just R or AR for

00:38:00,070 --> 00:38:02,430
example

00:38:02,940 --> 00:38:10,770
so but if it's a Tartar busy to chart

00:38:07,740 --> 00:38:15,079
easy to sell the same you package you

00:38:10,770 --> 00:38:19,380
put in the e build our archiver car

00:38:15,079 --> 00:38:22,650
compressor visit to and those two field

00:38:19,380 --> 00:38:25,579
could be mandatory should be monetary at

00:38:22,650 --> 00:38:25,579
the time we did

00:38:34,980 --> 00:38:42,540
in a built in the source URI variable

00:38:39,270 --> 00:38:47,540
which cell tells the file yes sorry but

00:38:42,540 --> 00:38:52,310
what if your developer says it's a tbz

00:38:47,540 --> 00:38:52,310
and the tibia to

00:39:02,960 --> 00:39:09,230
yeah in vapi to you can specify the

00:39:06,940 --> 00:39:12,260
automatic renaming of file when it is

00:39:09,230 --> 00:39:16,390
downloaded from upstream servers to

00:39:12,260 --> 00:39:16,390
something else so if there's an unknown

00:39:16,600 --> 00:39:21,700
suffix what your solution cannot be

00:39:19,640 --> 00:39:24,860
implemented by just renaming it to a

00:39:21,700 --> 00:39:27,560
file convention that the package manager

00:39:24,860 --> 00:39:29,360
already understands and then we don't

00:39:27,560 --> 00:39:32,530
need to have additional variables that

00:39:29,360 --> 00:39:35,530
are always mandatory for that purpose

00:39:32,530 --> 00:39:35,530
yeah

00:40:06,350 --> 00:40:10,580
so to summarize that he was saying that

00:40:08,930 --> 00:40:12,650
the e-class will handle ninety-nine

00:40:10,580 --> 00:40:16,610
percent of the cases so we'll and leave

00:40:12,650 --> 00:40:18,950
the rest to the e bells to override so I

00:40:16,610 --> 00:40:20,150
just have one little feature request but

00:40:18,950 --> 00:40:21,410
i'm going to write that also in the

00:40:20,150 --> 00:40:23,120
buggle and the discussion somewhere

00:40:21,410 --> 00:40:26,140
maybe that we can hook into the

00:40:23,120 --> 00:40:28,580
automatics somewhere in the e built for

00:40:26,140 --> 00:40:31,010
let's just say pathologic in a

00:40:28,580 --> 00:40:33,530
pathological cases like a driver package

00:40:31,010 --> 00:40:35,840
where you download an iso which contains

00:40:33,530 --> 00:40:40,780
at our gzip which contains a couple of

00:40:35,840 --> 00:40:40,780
rpms yeah it happens

00:40:44,250 --> 00:40:48,660
that

00:40:46,320 --> 00:40:50,340
my gender dopers are lazy so they don't

00:40:48,660 --> 00:40:53,450
like new manager of flags it's kind of

00:40:50,340 --> 00:40:53,450
not going to be popular

00:40:55,530 --> 00:41:00,840
unfortunately we don't have a pen of a

00:40:57,580 --> 00:41:00,840
dictator anymore

00:41:05,730 --> 00:41:15,510
I have a different feature request

00:41:09,470 --> 00:41:19,230
regarding fire collision handling em

00:41:15,510 --> 00:41:24,180
often I have the problem especially in

00:41:19,230 --> 00:41:28,500
the unstable arc after successfully

00:41:24,180 --> 00:41:34,020
compiling a package yes after after that

00:41:28,500 --> 00:41:38,330
I get Phi collision detection and that

00:41:34,020 --> 00:41:41,940
prevents the installing of this

00:41:38,330 --> 00:41:45,570
successfully wheeled package and so you

00:41:41,940 --> 00:41:54,830
have to clean the file collisions by

00:41:45,570 --> 00:42:01,830
hand can we implement feature into a p5

00:41:54,830 --> 00:42:04,350
which cow which offers a switch like to

00:42:01,830 --> 00:42:06,180
you want to overwrite the file

00:42:04,350 --> 00:42:09,500
collisions yes or not or something like

00:42:06,180 --> 00:42:09,500
this to solve it

00:42:11,970 --> 00:42:17,609
yeah we'll be a better teacher as for

00:42:15,780 --> 00:42:19,950
the collisions aspire files that are

00:42:17,609 --> 00:42:24,750
very but now have no other package

00:42:19,950 --> 00:42:30,090
tuning when it has been switched to the

00:42:24,750 --> 00:42:32,250
present condition its reported these

00:42:30,090 --> 00:42:35,190
days onwards if something else is in on

00:42:32,250 --> 00:42:43,230
the files whereas two features one still

00:42:35,190 --> 00:42:45,380
stops me calm I'll make the count where

00:42:43,230 --> 00:42:45,380
is

00:42:47,280 --> 00:42:53,880
yeah 22 different features one stops for

00:42:50,940 --> 00:42:56,310
any collision and the other only the

00:42:53,880 --> 00:42:57,690
collisions with another package where

00:42:56,310 --> 00:43:01,370
there should be a blocker in that

00:42:57,690 --> 00:43:06,000
package but at the time there isn't one

00:43:01,370 --> 00:43:08,100
it's one of the bigger downfalls of the

00:43:06,000 --> 00:43:10,080
sort building from source approach is

00:43:08,100 --> 00:43:12,150
that no one maintains a central

00:43:10,080 --> 00:43:14,940
repository or at least the placed

00:43:12,150 --> 00:43:17,580
repository of files installed by e belts

00:43:14,940 --> 00:43:19,470
and as they changed by use flags its

00:43:17,580 --> 00:43:21,150
would be an interesting effort in it

00:43:19,470 --> 00:43:25,380
since it takes about six weeks to

00:43:21,150 --> 00:43:27,530
rebuild a volte it difficult to test it

00:43:25,380 --> 00:43:27,530
out

00:43:28,390 --> 00:43:33,730
and a view by the way side question

00:43:31,839 --> 00:43:41,260
Diego have you managed to build the

00:43:33,730 --> 00:43:46,390
whole tree poultry no it's about the

00:43:41,260 --> 00:43:50,289
time I checked 11,000 build sir 10,000

00:43:46,390 --> 00:43:56,880
big sign over 10,000 started either

00:43:50,289 --> 00:44:00,130
blocking each one and then leading

00:43:56,880 --> 00:44:03,160
blocking not not working correctly

00:44:00,130 --> 00:44:05,049
functioning so no the World Tree I have

00:44:03,160 --> 00:44:07,750
never been able to be in there are lots

00:44:05,049 --> 00:44:13,329
of local so you can actually install all

00:44:07,750 --> 00:44:15,970
the tree but even trying to build over 3

00:44:13,329 --> 00:44:21,180
is not feasible right now the whole tree

00:44:15,970 --> 00:44:21,180
no so there's fabia add something

00:44:21,290 --> 00:44:29,530
I have been able to build actually

00:44:25,000 --> 00:44:29,530
13,000 packages from portage

00:44:30,920 --> 00:44:33,730
ok

00:44:34,040 --> 00:44:43,670
so it's kind of fun when you have to

00:44:37,210 --> 00:44:47,150
rebuild packages you I think 15,000 that

00:44:43,670 --> 00:44:51,410
I didn't count the multiple versions of

00:44:47,150 --> 00:44:55,100
D bills so I just before 11 version for

00:44:51,410 --> 00:45:01,000
each slot I think there we are at thirty

00:44:55,100 --> 00:45:01,000
thirty thousand files yeah

00:45:02,080 --> 00:45:08,280
klondike did you have a comment can it

00:45:05,620 --> 00:45:08,280
get Mike's

00:45:09,930 --> 00:45:14,069
how can you try to build a complete

00:45:12,000 --> 00:45:17,869
three if there are packages that depend

00:45:14,069 --> 00:45:17,869
on other packages not be there

00:45:19,210 --> 00:45:25,119
package is depending on something not in

00:45:21,310 --> 00:45:27,070
the main tree walkers yeah well isn't

00:45:25,119 --> 00:45:29,260
the approach that you need to unmerge

00:45:27,070 --> 00:45:31,710
something and then continue with the

00:45:29,260 --> 00:45:31,710
other set

00:45:35,450 --> 00:45:40,280
as for the tinderbox but installs the

00:45:37,790 --> 00:45:43,070
packages doesn't just bill then the

00:45:40,280 --> 00:45:44,750
tinderbox still tries to unmerge on the

00:45:43,070 --> 00:45:46,760
package is vertical leading unless they

00:45:44,750 --> 00:45:50,000
are part of the system or of the subset

00:45:46,760 --> 00:45:51,740
of file system packages of known system

00:45:50,000 --> 00:45:55,550
packages but the tinderbox needs to run

00:45:51,740 --> 00:45:58,040
and it usually works fine there are

00:45:55,550 --> 00:46:00,860
situations where the presence of a given

00:45:58,040 --> 00:46:03,710
package you can break lose everything I

00:46:00,860 --> 00:46:07,520
have the problem with RPM for instance

00:46:03,710 --> 00:46:10,670
and there are problems with my DB versus

00:46:07,520 --> 00:46:12,500
mysql it is tricky very tricky and

00:46:10,670 --> 00:46:15,410
that's why the tinderbox will never be

00:46:12,500 --> 00:46:18,440
able to target the whole tree just a

00:46:15,410 --> 00:46:21,910
subset and as it happens I have all

00:46:18,440 --> 00:46:24,830
starts since I left I'm checked out

00:46:21,910 --> 00:46:29,080
11,000 packages you can do paramore now

00:46:24,830 --> 00:46:31,790
so I I had to do with that from scratch

00:46:29,080 --> 00:46:34,010
there will never be a whole tree

00:46:31,790 --> 00:46:37,430
installed on the system but can be a

00:46:34,010 --> 00:46:39,860
whole tree package tray because you can

00:46:37,430 --> 00:46:41,840
build binary packages for everything as

00:46:39,860 --> 00:46:44,540
long as you remove areas with packages

00:46:41,840 --> 00:46:46,750
over time but you can't install it all

00:46:44,540 --> 00:46:46,750
together

00:46:52,069 --> 00:46:57,170
this can be necessary for someone who

00:46:54,140 --> 00:46:59,599
wants who needs to have a portage

00:46:57,170 --> 00:47:01,099
between hosts a private portage be the

00:46:59,599 --> 00:47:03,709
host with all the package we build

00:47:01,099 --> 00:47:08,660
that's the think that's one of the only

00:47:03,709 --> 00:47:10,959
case where you can use that fact that's

00:47:08,660 --> 00:47:14,119
still feasible because you can build

00:47:10,959 --> 00:47:16,369
binary packages of everything as long as

00:47:14,119 --> 00:47:18,739
you emerge some of the local data

00:47:16,369 --> 00:47:20,449
analysis but you can't install on the

00:47:18,739 --> 00:47:25,029
same file system everything on the same

00:47:20,449 --> 00:47:27,650
route that can be though but you can be

00:47:25,029 --> 00:47:30,170
I'll collisions blockers and sometimes

00:47:27,650 --> 00:47:32,449
even just the presence of a hitter file

00:47:30,170 --> 00:47:35,660
that is the same name of the file inside

00:47:32,449 --> 00:47:39,819
the package and has complete yeah

00:47:35,660 --> 00:47:39,819
various terms of corner cases

00:47:45,740 --> 00:47:48,740
so

00:47:49,119 --> 00:47:56,130
five minutes

00:47:51,160 --> 00:47:56,130
okay cool so um

00:47:56,250 --> 00:48:04,050
I this this I picked up and what latest

00:47:59,850 --> 00:48:07,650
at issues in the EAP I for that there

00:48:04,050 --> 00:48:13,620
are operators for for the sets but the

00:48:07,650 --> 00:48:18,840
practical you just have one ? ? for the

00:48:13,620 --> 00:48:24,620
crew to signal zero or one from oly

00:48:18,840 --> 00:48:24,620
Moolah probably not controversial I hope

00:48:31,490 --> 00:48:37,280
so was an ice cream machine

00:48:37,440 --> 00:48:47,400
good one so uh any important ideas or

00:48:45,450 --> 00:48:50,790
things that you would like to see that I

00:48:47,400 --> 00:48:53,460
didn't cover in here and if there are

00:48:50,790 --> 00:48:56,540
those and it's just let's make sure they

00:48:53,460 --> 00:48:56,540
end up in bugzilla

00:49:00,960 --> 00:49:08,859
please can you tell me the status of

00:49:04,289 --> 00:49:10,420
signing of the manifest file status of

00:49:08,859 --> 00:49:13,869
Sonny manifest files we would have a

00:49:10,420 --> 00:49:16,779
good answer here you can sign them bad

00:49:13,869 --> 00:49:18,369
it's not mandatory and the claps have

00:49:16,779 --> 00:49:21,940
been approved that it's waiting for

00:49:18,369 --> 00:49:25,049
someone to write it some PL wrath pieces

00:49:21,940 --> 00:49:27,430
of code to have all the infrastructure

00:49:25,049 --> 00:49:30,180
the hasn't yet can get the mic

00:49:27,430 --> 00:49:30,180
coming back down

00:49:48,560 --> 00:49:56,760
okay i'm not really the ultimate expert

00:49:52,340 --> 00:50:00,090
but but i think this mainly depends on

00:49:56,760 --> 00:50:03,270
how whatever Jayd migration will ever

00:50:00,090 --> 00:50:06,240
happen will turn out oh it's couple of

00:50:03,270 --> 00:50:08,340
leads to that question because i mean

00:50:06,240 --> 00:50:10,470
the the manifest scheme will change with

00:50:08,340 --> 00:50:15,780
that probably there will be also commits

00:50:10,470 --> 00:50:19,170
signing and just in the very newest

00:50:15,780 --> 00:50:22,410
chitterlings there's no upstream support

00:50:19,170 --> 00:50:25,890
of commits signing so it's not it's a

00:50:22,410 --> 00:50:28,200
push signing but commit signing I guess

00:50:25,890 --> 00:50:30,030
that will influence whatever happens to

00:50:28,200 --> 00:50:31,680
the manifest signing as well and it's

00:50:30,030 --> 00:50:35,100
not really decided yet at least that's

00:50:31,680 --> 00:50:38,160
what I know and also you can already get

00:50:35,100 --> 00:50:41,010
signed trees from infrastructure these

00:50:38,160 --> 00:50:44,280
snapshots are signed and they come from

00:50:41,010 --> 00:50:45,300
CBS CBS and that's all indicated so if

00:50:44,280 --> 00:50:47,100
you want to get assigned to reach

00:50:45,300 --> 00:50:49,580
already possible just not don't use

00:50:47,100 --> 00:50:49,580
rsync

00:50:54,920 --> 00:51:05,309
georgene it's very nice to have sign

00:50:59,940 --> 00:51:10,049
snapshots but it's something troublesome

00:51:05,309 --> 00:51:15,000
because there's no way to or really

00:51:10,049 --> 00:51:18,119
check check it on the on the on the new

00:51:15,000 --> 00:51:24,329
install because there's no gpg on the

00:51:18,119 --> 00:51:25,920
stage free yeah that is a nice but then

00:51:24,329 --> 00:51:33,440
again it comes a question of how do you

00:51:25,920 --> 00:51:33,440
verify the instant media yeah of course

00:51:37,119 --> 00:51:41,619
yeah but if you trust the web so

00:51:39,339 --> 00:51:44,249
rewarding to trust the keys that for the

00:51:41,619 --> 00:51:44,249
snapshots then

00:51:54,789 --> 00:52:00,489
so yeah the solution yeah must have been

00:51:57,729 --> 00:52:04,769
out outside of that i'm not sure is

00:52:00,489 --> 00:52:09,910
there i guess there is no gpg on the

00:52:04,769 --> 00:52:14,009
minimal media either is there and i'll

00:52:09,910 --> 00:52:14,009
use them there is

00:52:15,180 --> 00:52:21,530
yeah it's signed but does it have the

00:52:17,849 --> 00:52:21,530
keys on the media

00:52:35,430 --> 00:52:42,960
it it might be nice to have release or

00:52:40,079 --> 00:52:48,349
bootable media with pre-installed yeah

00:52:42,960 --> 00:52:48,349
viola back to really release yeah

00:52:57,730 --> 00:53:05,500
from what I understand we are only based

00:53:00,040 --> 00:53:07,510
on md's md5 sums now the that was there

00:53:05,500 --> 00:53:11,730
is no signing process I mean from

00:53:07,510 --> 00:53:14,130
scratch from the CD install to to the

00:53:11,730 --> 00:53:18,160
effective deployment of the packages

00:53:14,130 --> 00:53:20,850
before having to install gpg during the

00:53:18,160 --> 00:53:20,850
install process

00:53:26,380 --> 00:53:29,550
can you get the mic

00:53:30,130 --> 00:53:39,039
so I rang should have the acha acha Sam

00:53:36,609 --> 00:53:42,309
as well after they and d5 on everything

00:53:39,039 --> 00:53:44,859
so we are not limited 25 but nowhere is

00:53:42,309 --> 00:53:47,799
there as far as I can tell very reason

00:53:44,859 --> 00:53:50,890
to ignore PG on either than in stone

00:53:47,799 --> 00:53:53,470
media or the stage but should probably

00:53:50,890 --> 00:53:58,710
be fix it when they implement the full

00:53:53,470 --> 00:54:03,160
single tree right now it's a bit of a

00:53:58,710 --> 00:54:05,319
mess isn't another word to discarded

00:54:03,160 --> 00:54:07,660
well what usually happens gender

00:54:05,319 --> 00:54:09,490
relations that s almost devs are running

00:54:07,660 --> 00:54:12,970
the rolling stuff it's not the most

00:54:09,490 --> 00:54:14,349
pressing issue yeah I can't tell for

00:54:12,970 --> 00:54:16,599
sure about the intermedia because the

00:54:14,349 --> 00:54:18,700
last time I have to use virgin twist on

00:54:16,599 --> 00:54:23,349
media that was probably a very long time

00:54:18,700 --> 00:54:24,759
ago so yeah but I mean it still makes

00:54:23,349 --> 00:54:27,369
sense to tackle that at some point

00:54:24,759 --> 00:54:29,009
because I mean I'm gonna open while on

00:54:27,369 --> 00:54:33,180
an open wireless LAN I don't actually

00:54:29,009 --> 00:54:33,180
like to run emerged sink

00:54:37,440 --> 00:54:43,710
any other finishing question before we

00:54:40,170 --> 00:54:54,650
start I thought everybody installed from

00:54:43,710 --> 00:54:54,650
sis rescue CD anyway I do for sure yeah

00:54:57,029 --> 00:54:59,659
sorry

00:54:59,970 --> 00:55:08,400
I haven't been able to vote it with a PR

00:55:04,790 --> 00:55:10,530
no I haven't been able to but yeah the

00:55:08,400 --> 00:55:16,280
comment the comment was that he uses

00:55:10,530 --> 00:55:16,280
ubuntu because it boots better from efi

00:55:24,530 --> 00:55:28,820

YouTube URL: https://www.youtube.com/watch?v=tMGGj3yDjJg


