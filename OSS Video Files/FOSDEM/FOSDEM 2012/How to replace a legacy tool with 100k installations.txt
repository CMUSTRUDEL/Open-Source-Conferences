Title: How to replace a legacy tool with 100k installations
Publication date: 2013-02-05
Playlist: FOSDEM 2012
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:02,540 --> 00:00:11,639
fig i work with a bang we talking about

00:00:07,649 --> 00:00:16,740
how to replace a legacy maintain the

00:00:11,639 --> 00:00:19,400
number reverse dependencies just short

00:00:16,740 --> 00:00:26,430
of hands how many if he maintained a

00:00:19,400 --> 00:00:30,359
script ease ok so this yes a few seconds

00:00:26,430 --> 00:00:33,540
explaining when you install a package or

00:00:30,359 --> 00:00:37,710
will you uninstall epacket some packages

00:00:33,540 --> 00:00:41,250
came including them so called maintain

00:00:37,710 --> 00:00:43,140
XP so when you install the package

00:00:41,250 --> 00:00:47,640
package installer is actually running

00:00:43,140 --> 00:00:53,010
that maintain 3 i'm talking about the

00:00:47,640 --> 00:00:58,020
tool which is used by about 50 maintain

00:00:53,010 --> 00:01:00,809
streets it's a legacy too so it's

00:00:58,020 --> 00:01:05,100
something that you like to place and it

00:01:00,809 --> 00:01:15,210
silently games coordinate with the 55

00:01:05,100 --> 00:01:17,670
days maintainer to do them so i said the

00:01:15,210 --> 00:01:20,549
only to the top is HTML dates of

00:01:17,670 --> 00:01:23,009
communities and by that i mean solutions

00:01:20,549 --> 00:01:25,259
where there is no the level and data

00:01:23,009 --> 00:01:28,049
that dictator that says we will do that

00:01:25,259 --> 00:01:31,670
it's a long distribution way it conveys

00:01:28,049 --> 00:01:36,509
PP let me get consent you do something

00:01:31,670 --> 00:01:39,570
and the Toronto pml the case studies

00:01:36,509 --> 00:01:42,420
David Pacific but I'm doing some lessons

00:01:39,570 --> 00:01:44,399
which are I think of general interest so

00:01:42,420 --> 00:01:47,399
this is not to talk about describing the

00:01:44,399 --> 00:01:50,460
placement let's talk about the process

00:01:47,399 --> 00:01:58,200
of getting consent shoes for replacement

00:01:50,460 --> 00:02:01,260
you yeah and I yeah planned to make it a

00:01:58,200 --> 00:02:03,330
show top so I got into it

00:02:01,260 --> 00:02:10,140
questions otherwise I'm gonna have

00:02:03,330 --> 00:02:13,080
anyones and yeah this is the message I

00:02:10,140 --> 00:02:20,780
I'd like all of you to go away with the

00:02:13,080 --> 00:02:23,100
camel toe so yeah yeah is that in in

00:02:20,780 --> 00:02:25,110
replacing a coup with a large number of

00:02:23,100 --> 00:02:27,900
installations and land some of us

00:02:25,110 --> 00:02:31,700
dependencies something that checks a lot

00:02:27,900 --> 00:02:36,270
in setting a design document we describe

00:02:31,700 --> 00:02:41,040
Newton and having a little description

00:02:36,270 --> 00:02:43,110
of the YouTube is he for Danny consent

00:02:41,040 --> 00:02:46,200
forgetting to consign shoes so for

00:02:43,110 --> 00:02:50,010
convincing the BB that we have to update

00:02:46,200 --> 00:02:51,960
the packages we use my new goog and

00:02:50,010 --> 00:02:54,959
since we also have a signed agreement

00:02:51,960 --> 00:03:02,209
that such a very good basis for writing

00:02:54,959 --> 00:03:06,209
the tests oh the YouTube and I think

00:03:02,209 --> 00:03:09,330
this is something that the jury has one

00:03:06,209 --> 00:03:14,010
of the one wave lesson in special live

00:03:09,330 --> 00:03:17,489
in developer he stood I to be very well

00:03:14,010 --> 00:03:19,739
documented and I think that a visual a

00:03:17,489 --> 00:03:21,930
big reason for that is that he actually

00:03:19,739 --> 00:03:28,320
writes the documentation is part of

00:03:21,930 --> 00:03:32,269
doing the design of food so this is a

00:03:28,320 --> 00:03:36,269
specific example i'm talking about

00:03:32,269 --> 00:03:38,010
updating a deep it's a it's a pen spin

00:03:36,269 --> 00:03:42,450
that the module which was written a long

00:03:38,010 --> 00:03:46,890
time ago it's a as i said its import my

00:03:42,450 --> 00:03:51,019
by maintaining speaks that have cyber

00:03:46,890 --> 00:03:53,760
packages that will be run by a midi I

00:03:51,019 --> 00:03:54,560
don't know whether how many people he

00:03:53,760 --> 00:03:59,750
loved

00:03:54,560 --> 00:04:02,000
d ok more so it's basically a server you

00:03:59,750 --> 00:04:05,540
can see you can work out the service so

00:04:02,000 --> 00:04:08,690
when you so phrase insanity pocket it

00:04:05,540 --> 00:04:12,019
will have a street that we are very deep

00:04:08,690 --> 00:04:15,050
deep pockets to call up the DVD and I'm

00:04:12,019 --> 00:04:18,200
taking a deep edits the configuration

00:04:15,050 --> 00:04:22,400
file in a deacons and restarts in a deep

00:04:18,200 --> 00:04:25,220
so this is a very own too it's becoming

00:04:22,400 --> 00:04:27,229
increasingly irrelevant because most

00:04:25,220 --> 00:04:29,930
people nowadays and I'm service in

00:04:27,229 --> 00:04:33,770
standalone mode so in a DJ is not that

00:04:29,930 --> 00:04:39,919
we don't but it's t hey why'd you

00:04:33,770 --> 00:04:42,440
install the news and quite funny so in

00:04:39,919 --> 00:04:45,770
my opinion is not only white working by

00:04:42,440 --> 00:04:49,190
design because to edit the configuration

00:04:45,770 --> 00:04:51,169
file you can only specify the service

00:04:49,190 --> 00:04:53,270
name and that is not sufficient to

00:04:51,169 --> 00:04:55,910
uniquely identify enters because you can

00:04:53,270 --> 00:04:59,330
add more than one implementation on the

00:04:55,910 --> 00:05:02,450
same surgery so you can gave IP for a TD

00:04:59,330 --> 00:05:07,760
six sentences so there's certain class

00:05:02,450 --> 00:05:11,270
of bugs that really can be fixed in this

00:05:07,760 --> 00:05:16,850
implementation without irritating the

00:05:11,270 --> 00:05:19,479
semantics of of the waiting pocket so if

00:05:16,850 --> 00:05:23,050
you hear something introducing Damien

00:05:19,479 --> 00:05:31,060
somebody up in the Box let's video by

00:05:23,050 --> 00:05:37,570
Seyi going out wanna do my poop suppose

00:05:31,060 --> 00:05:37,570
this is varsity this is a stream and

00:05:37,720 --> 00:05:45,370
keeps later a prominent leading

00:05:41,120 --> 00:05:52,419
developer sent a proposal for vi de MIDI

00:05:45,370 --> 00:05:55,960
and then life is as follows with this is

00:05:52,419 --> 00:05:55,960
very common

00:06:24,000 --> 00:06:26,060
you

00:06:56,330 --> 00:06:58,389
you

00:08:00,409 --> 00:08:02,469
you

00:08:15,950 --> 00:08:23,900
a year later I got kind of interested in

00:08:20,630 --> 00:08:32,210
him so I hope another problem but this

00:08:23,900 --> 00:08:34,490
time right way so the question is what

00:08:32,210 --> 00:08:39,130
is the wrong way making a proposal about

00:08:34,490 --> 00:08:44,900
introducing a change which impacts

00:08:39,130 --> 00:08:47,000
manian faculties and this is a difficult

00:08:44,900 --> 00:08:49,790
question I community distributions

00:08:47,000 --> 00:08:52,550
because a distribution table the

00:08:49,790 --> 00:08:55,460
detector we could say with the base and

00:08:52,550 --> 00:08:57,200
then everyone does it but the community

00:08:55,460 --> 00:09:01,490
distribution somebody's come up with a

00:08:57,200 --> 00:09:03,710
proposal to convince everyone and this

00:09:01,490 --> 00:09:07,010
one of the eight programs in darien

00:09:03,710 --> 00:09:09,320
getting into concept so the first wave

00:09:07,010 --> 00:09:12,950
of making a proposal with crunch

00:09:09,320 --> 00:09:15,320
marketing part is to just send email the

00:09:12,950 --> 00:09:19,340
largest mailing list with a half-baked

00:09:15,320 --> 00:09:21,350
idea so something let me find out some

00:09:19,340 --> 00:09:24,980
PM is gospel I people you just say good

00:09:21,350 --> 00:09:28,180
as many ways and then sounds like Snoopy

00:09:24,980 --> 00:09:30,350
you because you haven't thought about it

00:09:28,180 --> 00:09:32,570
the people that are directly impacted

00:09:30,350 --> 00:09:37,340
will also be upset because they will be

00:09:32,570 --> 00:09:39,620
like 11 on something goodness so this is

00:09:37,340 --> 00:09:42,260
our Valley more or less the first time

00:09:39,620 --> 00:09:45,560
not as bodies I discuss with you even

00:09:42,260 --> 00:09:51,680
but hope you not and so what is the

00:09:45,560 --> 00:09:56,090
right way of doing what this is what I

00:09:51,680 --> 00:09:59,780
think my experience of them so graphic

00:09:56,090 --> 00:10:04,670
design document thinking problem about

00:09:59,780 --> 00:10:06,710
the company nap smart it's very easy to

00:10:04,670 --> 00:10:09,290
think that you figure figured out all

00:10:06,710 --> 00:10:11,240
the details the moment yeah actually you

00:10:09,290 --> 00:10:16,070
actually forced to put down the video

00:10:11,240 --> 00:10:18,680
description you you guys all the issues

00:10:16,070 --> 00:10:22,380
that when you

00:10:18,680 --> 00:10:25,980
they're supposed to writing in a food

00:10:22,380 --> 00:10:30,060
detail description so once you design

00:10:25,980 --> 00:10:33,360
document it bounce the idea of someone

00:10:30,060 --> 00:10:35,190
that's close to you that we still

00:10:33,360 --> 00:10:41,190
respect to you after hearing seeing you

00:10:35,190 --> 00:10:44,190
proposing something see so once you pass

00:10:41,190 --> 00:10:48,180
this basic scientific test then you can

00:10:44,190 --> 00:10:50,910
try to validate the main assumption so

00:10:48,180 --> 00:10:52,620
from the implementation talk so do proof

00:10:50,910 --> 00:10:56,220
of concept implementation not a

00:10:52,620 --> 00:10:59,720
full-scale implementation just to verify

00:10:56,220 --> 00:11:02,940
the basic assumptions of the penetration

00:10:59,720 --> 00:11:04,560
and important not to implementation

00:11:02,940 --> 00:11:08,160
because if you go through in validation

00:11:04,560 --> 00:11:10,350
then you invest in society and will be

00:11:08,160 --> 00:11:16,380
too attached to to be open to criticism

00:11:10,350 --> 00:11:20,339
into this idea so once we know that it

00:11:16,380 --> 00:11:23,790
works and it's not a Dickens idea then

00:11:20,339 --> 00:11:26,610
you can actually engage into discussion

00:11:23,790 --> 00:11:29,449
the people that would be directly back

00:11:26,610 --> 00:11:32,220
to buy these things so in the case of

00:11:29,449 --> 00:11:34,949
updating a Giga will maintain it shows

00:11:32,220 --> 00:11:38,730
the deep pockets and the Xfinity

00:11:34,949 --> 00:11:42,389
background and this is my tentative

00:11:38,730 --> 00:11:48,389
processor it acoustic get unique you

00:11:42,389 --> 00:11:51,870
file if you love it and sorry if they

00:11:48,389 --> 00:11:56,250
fine with it then you can actually say

00:11:51,870 --> 00:12:00,089
to the lancers baby and maybe start the

00:11:56,250 --> 00:12:05,459
process efficient and as I said this is

00:12:00,089 --> 00:12:10,139
very much later summarise remarks people

00:12:05,459 --> 00:12:12,690
getting it is a good sign and the last

00:12:10,139 --> 00:12:17,290
one is also obvious but it's it's very

00:12:12,690 --> 00:12:30,530
stuff so being ignored I think

00:12:17,290 --> 00:12:35,200
normal stuff all these things take time

00:12:30,530 --> 00:12:35,200
and you thinking of a noticeboard

00:12:36,910 --> 00:12:43,370
appreciate movie the things that is so

00:12:40,040 --> 00:12:50,990
easy to just write me maybe ideas and

00:12:43,370 --> 00:12:57,130
then follow up so I'm he acting so

00:12:50,990 --> 00:12:57,130
supportive and the proposals it's fast

00:13:01,000 --> 00:13:09,020
and so because this process can take a

00:13:04,850 --> 00:13:12,350
long time as I said the 2001 proposal to

00:13:09,020 --> 00:13:17,150
replace after unity I couldn't find out

00:13:12,350 --> 00:13:19,130
what happened for their hides so mailing

00:13:17,150 --> 00:13:23,420
list archives alone I'm not good enough

00:13:19,130 --> 00:13:29,440
to be able to keep track of progress of

00:13:23,420 --> 00:13:33,560
this kind of work so I Daniel recently

00:13:29,440 --> 00:13:36,950
some white people to use the Python

00:13:33,560 --> 00:13:41,150
enhancement for solutions which is

00:13:36,950 --> 00:13:42,770
basically very simply just do your the

00:13:41,150 --> 00:13:46,690
discussion you begin your money whatever

00:13:42,770 --> 00:13:46,690
mane is actually

00:13:52,589 --> 00:13:57,000
it is

00:13:53,880 --> 00:13:59,100
driver so it's the person that that

00:13:57,000 --> 00:14:04,040
drives the proposal not in seven

00:13:59,100 --> 00:14:06,450
implementation and it is a a status of

00:14:04,040 --> 00:14:08,400
weather is still a draft whether there's

00:14:06,450 --> 00:14:11,310
been consensus whether the

00:14:08,400 --> 00:14:15,540
implementation has been tested then it's

00:14:11,310 --> 00:14:17,790
actually part of the distribution so

00:14:15,540 --> 00:14:19,500
this is useful to have so that if

00:14:17,790 --> 00:14:21,540
something has been tried before and

00:14:19,500 --> 00:14:24,330
failed you don't have to look into the

00:14:21,540 --> 00:14:27,270
archives there is a single place in

00:14:24,330 --> 00:14:29,970
debian it's all the Debian proposals are

00:14:27,270 --> 00:14:31,670
here so you can go there and see the

00:14:29,970 --> 00:14:38,610
things that have been tried before and

00:14:31,670 --> 00:14:39,840
worked or didn't work and why and I I

00:14:38,610 --> 00:14:41,880
don't know whether there are people from

00:14:39,840 --> 00:14:46,230
other distribution shave to say whether

00:14:41,880 --> 00:14:48,690
there's something similar in their case

00:14:46,230 --> 00:14:54,180
I know this is more the laughter Python

00:14:48,690 --> 00:14:57,350
the Python enhancement process okay no

00:14:54,180 --> 00:14:57,350
people from other distributions

00:15:14,960 --> 00:15:17,650
uh-huh

00:15:21,160 --> 00:15:26,500
and is there is there a single place

00:15:23,819 --> 00:15:29,579
yeah I guess I have to repeat because

00:15:26,500 --> 00:15:32,019
you note on the mic so he's saying that

00:15:29,579 --> 00:15:34,420
there's something similar in opensuse

00:15:32,019 --> 00:15:39,120
for keeping track of proposals and the

00:15:34,420 --> 00:15:39,120
status is the SC is a single place where

00:15:39,629 --> 00:16:03,519
yeah so is that is that Mozilla or Susan

00:15:53,980 --> 00:16:11,769
okay so there is a disagreement here so

00:16:03,519 --> 00:16:13,810
it's it's not working exactly okay yeah

00:16:11,769 --> 00:16:15,610
okay so this is even in Delhi and this

00:16:13,810 --> 00:16:17,829
is optional you don't have to do it but

00:16:15,610 --> 00:16:21,899
it's it's not it doesn't take a lot of

00:16:17,829 --> 00:16:21,899
time and it's helpful so

00:16:31,260 --> 00:16:43,170
so ed yeah okay I am okay so hopefully

00:16:40,140 --> 00:16:46,050
by this point we have a proposal we we

00:16:43,170 --> 00:16:47,670
have consensus so we can now be

00:16:46,050 --> 00:16:52,860
confident that we can proceed with the

00:16:47,670 --> 00:16:55,530
implementation and if you have a depth

00:16:52,860 --> 00:16:57,870
or a design document of some sort then

00:16:55,530 --> 00:17:01,440
we should have some sort of summary of

00:16:57,870 --> 00:17:03,270
operations so a specification of what

00:17:01,440 --> 00:17:07,170
the tools to do under certain

00:17:03,270 --> 00:17:08,730
circumstances this is the summary of rec

00:17:07,170 --> 00:17:11,280
infiniti which is the replacement of

00:17:08,730 --> 00:17:13,800
updating addy i'm not going to describe

00:17:11,280 --> 00:17:17,310
the specifics of the tool because that's

00:17:13,800 --> 00:17:18,930
not the subject of the talk all I want

00:17:17,310 --> 00:17:20,640
to say is that if you have a design

00:17:18,930 --> 00:17:25,560
document it's helpful to have a summary

00:17:20,640 --> 00:17:27,630
of given some conditions what how should

00:17:25,560 --> 00:17:34,410
the program behave so it's a very simple

00:17:27,630 --> 00:17:37,800
idea yep so that is the context in which

00:17:34,410 --> 00:17:43,230
the program operates and that is the

00:17:37,800 --> 00:17:45,920
expectation so weak Infiniti edits a

00:17:43,230 --> 00:17:48,720
configuration file so depending on

00:17:45,920 --> 00:17:50,820
whether a file exists somewhere whether

00:17:48,720 --> 00:17:52,650
the entry is there and what is what's

00:17:50,820 --> 00:17:54,030
the status of the entry well whether

00:17:52,650 --> 00:17:56,730
there are some other files and other

00:17:54,030 --> 00:17:58,860
directories it will remove an entry from

00:17:56,730 --> 00:18:02,520
the file it will enable an entry add an

00:17:58,860 --> 00:18:05,700
entry or do nothing so it's that simple

00:18:02,520 --> 00:18:08,250
but having it there it's very useful for

00:18:05,700 --> 00:18:13,830
people to look at it and understand what

00:18:08,250 --> 00:18:18,000
it's about and now i'm going to do a

00:18:13,830 --> 00:18:22,320
small parenthesis about behavior driven

00:18:18,000 --> 00:18:26,940
testing so i said in the beginning that

00:18:22,320 --> 00:18:30,480
a design document is key in making in

00:18:26,940 --> 00:18:32,010
getting to consensus but once we get

00:18:30,480 --> 00:18:34,680
consensus and we can start

00:18:32,010 --> 00:18:36,120
implementation once we have the design

00:18:34,680 --> 00:18:41,300
document we can actually use it as a

00:18:36,120 --> 00:18:41,300
basis as an input for system tests

00:18:42,060 --> 00:18:47,860
so that's why we talked about behavior

00:18:44,560 --> 00:18:49,810
they were testing it's only one slide so

00:18:47,860 --> 00:18:56,980
behavior how are we doing of time

00:18:49,810 --> 00:18:59,110
actually ok behavior driven testing it's

00:18:56,980 --> 00:19:00,670
a specific case of test-driven testing

00:18:59,110 --> 00:19:04,120
so you write the test before you write

00:19:00,670 --> 00:19:06,370
the code and in behavior in testing you

00:19:04,120 --> 00:19:11,950
describe program functionality in terms

00:19:06,370 --> 00:19:13,660
of features and every specific use case

00:19:11,950 --> 00:19:17,280
of a feature is described in a scenario

00:19:13,660 --> 00:19:21,700
and not every scenario is described in

00:19:17,280 --> 00:19:24,580
terms of three steps given one then so

00:19:21,700 --> 00:19:27,520
given a specific set of conditions or

00:19:24,580 --> 00:19:35,310
context when a specific event happens

00:19:27,520 --> 00:19:37,990
then this is the expected outcome and be

00:19:35,310 --> 00:19:40,120
the way it works is that first you

00:19:37,990 --> 00:19:42,550
describe the functionality you describe

00:19:40,120 --> 00:19:44,290
all the features in a sequence of

00:19:42,550 --> 00:19:47,380
scenario and every scenario is the

00:19:44,290 --> 00:19:49,960
sequence of steps so you start by

00:19:47,380 --> 00:19:53,760
describing the functionality and then

00:19:49,960 --> 00:19:58,800
for every step you write a method that

00:19:53,760 --> 00:19:58,800
implements what that step describes

00:20:00,640 --> 00:20:05,620
so at this point we have the human

00:20:03,010 --> 00:20:08,950
readable description and the codes to

00:20:05,620 --> 00:20:11,710
width that description is mapped into we

00:20:08,950 --> 00:20:14,500
haven't written any code yet any code

00:20:11,710 --> 00:20:18,070
that implements the actual program so

00:20:14,500 --> 00:20:21,370
when we run this the tests Fame which is

00:20:18,070 --> 00:20:23,620
normal there's nothing there yet which

00:20:21,370 --> 00:20:26,350
is great because we have to see the test

00:20:23,620 --> 00:20:29,470
failing fast because it's very easy to

00:20:26,350 --> 00:20:31,900
write tests that give a false positive

00:20:29,470 --> 00:20:34,810
that succeed even though because they

00:20:31,900 --> 00:20:36,850
test the wrong thing for instance so

00:20:34,810 --> 00:20:39,340
once we see the test failing then we

00:20:36,850 --> 00:20:42,090
actually write the minimal code of the

00:20:39,340 --> 00:20:46,030
implementation to make that test succeed

00:20:42,090 --> 00:20:50,500
and once we write the code that makes

00:20:46,030 --> 00:20:53,410
the test succeed then we keep we write

00:20:50,500 --> 00:20:55,330
the next step definition we add the the

00:20:53,410 --> 00:21:00,580
next part of functionality and we do

00:20:55,330 --> 00:21:04,420
this i tentatively i guess i should say

00:21:00,580 --> 00:21:08,140
that so the given is the part that sets

00:21:04,420 --> 00:21:10,270
up the context where the the program in

00:21:08,140 --> 00:21:13,420
which the program will be tested so it's

00:21:10,270 --> 00:21:15,670
like setting up a picture and this is of

00:21:13,420 --> 00:21:19,300
course asserting that the certain

00:21:15,670 --> 00:21:21,309
outcome has a care ok so now that we are

00:21:19,300 --> 00:21:25,059
behavior driven

00:21:21,309 --> 00:21:28,749
testing wizards we can go back to a use

00:21:25,059 --> 00:21:33,870
case updating the D so this is an

00:21:28,749 --> 00:21:38,110
example of one feature remembering the

00:21:33,870 --> 00:21:40,570
summary table we have four features it

00:21:38,110 --> 00:21:43,539
removes entries it enables entries it

00:21:40,570 --> 00:21:46,480
adds and raise it doesn't do anything so

00:21:43,539 --> 00:21:52,419
for each feature we have a feature file

00:21:46,480 --> 00:21:54,580
and the remove feature is to scenario 2

00:21:52,419 --> 00:21:57,850
scenario one scenario we don't know how

00:21:54,580 --> 00:22:02,470
many so for every feature we have won

00:21:57,850 --> 00:22:06,039
three to five right and in that feature

00:22:02,470 --> 00:22:07,480
file we have one scenario well for we

00:22:06,039 --> 00:22:12,639
have we describe what we list on the

00:22:07,480 --> 00:22:14,289
scenario so the these are almost

00:22:12,639 --> 00:22:17,230
identical but they both have the same

00:22:14,289 --> 00:22:22,299
outcome they remove an entry so we do

00:22:17,230 --> 00:22:24,789
this for all the features but it's kind

00:22:22,299 --> 00:22:30,249
of boring to do this by hand especially

00:22:24,789 --> 00:22:32,320
for for the no action so these are just

00:22:30,249 --> 00:22:34,779
five son I are we can write them by hand

00:22:32,320 --> 00:22:36,580
but for the no action it's boring and

00:22:34,779 --> 00:22:38,559
painful to write and by hand because you

00:22:36,580 --> 00:22:41,289
don't know all the combinations in which

00:22:38,559 --> 00:22:43,629
it shouldn't do anything so instead of

00:22:41,289 --> 00:22:46,330
writing it by hand what we can do

00:22:43,629 --> 00:22:49,210
instead is actually write a program that

00:22:46,330 --> 00:22:51,570
will write the scenario for us so what

00:22:49,210 --> 00:22:57,490
this program does is that it knows the

00:22:51,570 --> 00:23:04,210
valid the valid values for every context

00:22:57,490 --> 00:23:06,190
parameter so if I go back here so it

00:23:04,210 --> 00:23:08,230
this is a context parameter is the

00:23:06,190 --> 00:23:12,759
context parameter these are the valid

00:23:08,230 --> 00:23:14,499
values so the program knows the valid

00:23:12,759 --> 00:23:17,529
value for the context parameter and it

00:23:14,499 --> 00:23:19,600
produces all combinations and in the

00:23:17,529 --> 00:23:22,929
body of the loop we know which

00:23:19,600 --> 00:23:29,500
combination is should add an entry and

00:23:22,929 --> 00:23:31,780
so on and this is useful because as we

00:23:29,500 --> 00:23:35,090
develop we might find a new

00:23:31,780 --> 00:23:37,090
like a new parameter in the context so

00:23:35,090 --> 00:23:44,090
we don't have to do everything by hand

00:23:37,090 --> 00:23:47,740
you just update the screen and so once

00:23:44,090 --> 00:23:51,530
we have the description of the features

00:23:47,740 --> 00:23:55,580
then we have to write the code for the

00:23:51,530 --> 00:23:59,780
steps so these this is an example of two

00:23:55,580 --> 00:24:01,610
steps this is a given step a contact

00:23:59,780 --> 00:24:04,760
step so it says given a matching server

00:24:01,610 --> 00:24:08,180
file that exists it basically creates an

00:24:04,760 --> 00:24:11,690
empty file with that without survey path

00:24:08,180 --> 00:24:14,360
to fake to make the program thing that

00:24:11,690 --> 00:24:15,740
server file exists and the opposite

00:24:14,360 --> 00:24:17,510
given a matching service file that does

00:24:15,740 --> 00:24:22,010
not exist it's just an assertion that

00:24:17,510 --> 00:24:27,680
the file is not there so we write the

00:24:22,010 --> 00:24:29,450
code for all the steps we run the tests

00:24:27,680 --> 00:24:31,670
we see them fail then we write the

00:24:29,450 --> 00:24:34,340
functionality he actually functionality

00:24:31,670 --> 00:24:38,660
of the code and we keep doing that until

00:24:34,340 --> 00:24:40,580
all the tests pass so okay this is the

00:24:38,660 --> 00:24:42,350
output of the tool when you run it when

00:24:40,580 --> 00:24:44,720
it's all green means that all buses

00:24:42,350 --> 00:24:47,900
that's good and the nice thing about

00:24:44,720 --> 00:24:51,410
this is that why it's still work in

00:24:47,900 --> 00:24:52,940
progress you can see how far you are in

00:24:51,410 --> 00:24:55,430
implementation because you have a

00:24:52,940 --> 00:24:59,120
specific target you have four features

00:24:55,430 --> 00:25:04,570
force analia so when you start you have

00:24:59,120 --> 00:25:08,540
zero features pasts and you do some work

00:25:04,570 --> 00:25:12,110
it's like so you can you can quantify

00:25:08,540 --> 00:25:16,190
the progress of implementation which is

00:25:12,110 --> 00:25:17,810
something that it's not really it's like

00:25:16,190 --> 00:25:19,310
when you when you write a program you

00:25:17,810 --> 00:25:21,620
have the functionality in your head but

00:25:19,310 --> 00:25:23,900
it's you have a very vague idea of how

00:25:21,620 --> 00:25:27,200
far you are but this way it's very

00:25:23,900 --> 00:25:28,970
specific and it's also specific in the

00:25:27,200 --> 00:25:31,330
application level not in the

00:25:28,970 --> 00:25:36,580
implementation

00:25:31,330 --> 00:25:38,710
sense so I I did the implementation it

00:25:36,580 --> 00:25:41,020
took me one year because I didn't have

00:25:38,710 --> 00:25:44,860
time I was only writing in doing

00:25:41,020 --> 00:25:49,360
holidays and vacation time so this

00:25:44,860 --> 00:25:52,870
actually kept me gave me a sense of

00:25:49,360 --> 00:25:56,920
progress so it was a way to motivate and

00:25:52,870 --> 00:26:03,220
to have an idea of how far I am or how

00:25:56,920 --> 00:26:06,910
close i'm getting to completion just a

00:26:03,220 --> 00:26:09,850
couple of pointers so these are tools

00:26:06,910 --> 00:26:13,120
for writing sort of behavior driven

00:26:09,850 --> 00:26:16,090
system test i should say that these days

00:26:13,120 --> 00:26:20,620
system tests so they're not they're not

00:26:16,090 --> 00:26:23,410
unit tests which means the the test sets

00:26:20,620 --> 00:26:26,250
up the context in which the program

00:26:23,410 --> 00:26:29,770
should run in this case the context is a

00:26:26,250 --> 00:26:31,570
specific files in the file system it

00:26:29,770 --> 00:26:34,450
runs the program and after the program

00:26:31,570 --> 00:26:36,850
exits it takes in the file system to see

00:26:34,450 --> 00:26:38,950
that it did the necessary changes in

00:26:36,850 --> 00:26:44,710
this case it edited in a deacon fig as

00:26:38,950 --> 00:26:47,020
expected so in my case I'm using a

00:26:44,710 --> 00:26:50,080
Python framework and the implementation

00:26:47,020 --> 00:26:52,030
itself is in Python reckon finna be but

00:26:50,080 --> 00:26:53,680
because they are system tests it could

00:26:52,030 --> 00:26:58,210
be anything it could be that the program

00:26:53,680 --> 00:26:59,590
is implemented in C or whatever so the

00:26:58,210 --> 00:27:03,970
fact that these are in Python and Ruby

00:26:59,590 --> 00:27:06,910
doesn't really matter and finally for

00:27:03,970 --> 00:27:10,840
those that actually do care about def 9

00:27:06,910 --> 00:27:15,250
and the replacement of updates in a deep

00:27:10,840 --> 00:27:20,140
a couple of links the design documents

00:27:15,250 --> 00:27:22,660
and the actual code repository yeah it's

00:27:20,140 --> 00:27:24,510
complete I just need to other montagnes

00:27:22,660 --> 00:27:28,660
and hopefully upload into experimental

00:27:24,510 --> 00:27:30,760
one of these days so I would like to

00:27:28,660 --> 00:27:34,120
close by saying that debian and other

00:27:30,760 --> 00:27:36,880
distributions are full of suds legacy

00:27:34,120 --> 00:27:43,690
things that can be improved

00:27:36,880 --> 00:27:47,500
by quoting a Zach beloved DPL who said

00:27:43,690 --> 00:27:50,740
that yeah the most fun way to contribute

00:27:47,500 --> 00:27:52,870
to debian just find something that needs

00:27:50,740 --> 00:27:58,950
improvement take it was beautiful and

00:27:52,870 --> 00:27:58,950
just do it that's it thank you

00:28:05,170 --> 00:28:08,310
and Christians

00:28:11,059 --> 00:28:14,539
then we have the mic

00:28:22,090 --> 00:28:28,929
thank you and the last sentence and do

00:28:25,990 --> 00:28:31,840
that that's nice and all but I'm trying

00:28:28,929 --> 00:28:35,169
to do some development on a Debian

00:28:31,840 --> 00:28:38,620
package and doing that that's one but

00:28:35,169 --> 00:28:42,370
uploading and really contributing to

00:28:38,620 --> 00:28:45,279
debian is too and all the politics make

00:28:42,370 --> 00:28:48,789
it very hard so after you got tips for

00:28:45,279 --> 00:28:51,100
me and to embrace the political debian

00:28:48,789 --> 00:28:55,480
stuff and to make life more easy for me

00:28:51,100 --> 00:28:59,649
to upload changes so to to upload

00:28:55,480 --> 00:29:03,279
changes as so you not already maintainer

00:28:59,649 --> 00:29:09,610
right yeah to be honest I'm not sure

00:29:03,279 --> 00:29:12,279
even and I when you search my package my

00:29:09,610 --> 00:29:15,220
name is is there my email resistor ok

00:29:12,279 --> 00:29:19,090
but and I don't know how to upload

00:29:15,220 --> 00:29:20,950
changes someone else always do that for

00:29:19,090 --> 00:29:24,730
me ok so you've been sponsored by a

00:29:20,950 --> 00:29:27,159
developer yeah but um I made some new

00:29:24,730 --> 00:29:31,779
changes and my sponsor he isn't

00:29:27,159 --> 00:29:34,360
answering my emails now so now what we

00:29:31,779 --> 00:29:37,779
have to find your new sponsor no I can

00:29:34,360 --> 00:29:40,720
you so enrico says email debian mentors

00:29:37,779 --> 00:29:43,299
but yeah you can just grab me as well

00:29:40,720 --> 00:29:47,919
that's fine we can talk about this after

00:29:43,299 --> 00:29:53,399
the session please yes yeah ok well

00:29:47,919 --> 00:29:53,399
thanks thank you any other questions

00:29:55,389 --> 00:30:02,879
I guess everything was good stuff here

00:29:59,099 --> 00:30:02,879
is the question here

00:30:08,990 --> 00:30:16,410
how is the reception so far orbital we

00:30:12,270 --> 00:30:18,360
say actually did you manage to raise an

00:30:16,410 --> 00:30:20,640
interest you have like people following

00:30:18,360 --> 00:30:29,010
and asking you to finally upload it

00:30:20,640 --> 00:30:33,540
could be dressing so of depth 9 what

00:30:29,010 --> 00:30:37,680
happened is that before announcing it I

00:30:33,540 --> 00:30:39,270
actually sent it privately to the key

00:30:37,680 --> 00:30:42,630
people that would be impacted by the

00:30:39,270 --> 00:30:44,820
change and also to the people that were

00:30:42,630 --> 00:30:46,770
very much against the first incarnation

00:30:44,820 --> 00:30:48,900
of the proposal so I gave them the

00:30:46,770 --> 00:30:51,600
opportunity to give feedback or two

00:30:48,900 --> 00:30:55,890
objects before I would announce it to

00:30:51,600 --> 00:30:57,690
the world so all of them basically

00:30:55,890 --> 00:31:00,510
didn't get back to me except the

00:30:57,690 --> 00:31:02,550
maintainer of energy market Italy who

00:31:00,510 --> 00:31:05,280
was instrumental in defining it and

00:31:02,550 --> 00:31:07,620
improving it so and it actually it

00:31:05,280 --> 00:31:11,880
wouldn't be at this stage the design if

00:31:07,620 --> 00:31:13,680
it wasn't for him so that was like a

00:31:11,880 --> 00:31:16,380
year ago I haven't heard back from him

00:31:13,680 --> 00:31:19,140
since then but in the meantime of an

00:31:16,380 --> 00:31:21,240
ounce of depth nobody was screaming loud

00:31:19,140 --> 00:31:25,440
against it so I that's my understanding

00:31:21,240 --> 00:31:28,610
of ok nobody minds so I guess it should

00:31:25,440 --> 00:31:31,080
be ok and then from some point onwards

00:31:28,610 --> 00:31:35,460
well I've always been receiving bugs

00:31:31,080 --> 00:31:37,230
that are the main motivation bug reports

00:31:35,460 --> 00:31:39,210
for the update in edina that the main

00:31:37,230 --> 00:31:41,550
motivation for the implementation and

00:31:39,210 --> 00:31:44,700
I've always been saying I'm working on

00:31:41,550 --> 00:31:47,310
the implementation and from certain

00:31:44,700 --> 00:31:49,380
point onwards 11 step 9 was public

00:31:47,310 --> 00:31:51,480
people who are starting asking you know

00:31:49,380 --> 00:31:54,750
when is it gonna be ready so I guess

00:31:51,480 --> 00:31:57,930
that's an implicit sign of acceptance ok

00:31:54,750 --> 00:31:59,730
Marco is here uh-huh somewhere so you

00:31:57,930 --> 00:32:02,040
may want yeah sure that blister but I

00:31:59,730 --> 00:32:04,080
don't know how she looks like so i'll

00:32:02,040 --> 00:32:05,640
try to put you in touch if I suppose ok

00:32:04,080 --> 00:32:07,680
that's good anything call it time to be

00:32:05,640 --> 00:32:09,300
bold because I would like oh wow you do

00:32:07,680 --> 00:32:12,950
not that's cool I didn't know about it

00:32:09,300 --> 00:32:12,950
oh yeah great thanks

00:32:15,149 --> 00:32:21,659
ok I just be done one more

00:32:21,880 --> 00:32:24,720
give one

00:32:28,370 --> 00:32:36,430
I new visualization okay okay yeah okay

00:32:32,140 --> 00:32:36,430

YouTube URL: https://www.youtube.com/watch?v=guqhRuANS44


