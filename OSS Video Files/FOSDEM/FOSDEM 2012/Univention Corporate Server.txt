Title: Univention Corporate Server
Publication date: 2013-02-05
Playlist: FOSDEM 2012
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:49,430 --> 00:00:54,780
so two quarter past one I think we

00:00:52,350 --> 00:00:56,940
should get started I'd like to welcome

00:00:54,780 --> 00:01:00,930
everybody to my talk in the cross

00:00:56,940 --> 00:01:05,070
desktop track of fosston across

00:01:00,930 --> 00:01:06,420
distribution track of course I'm talking

00:01:05,070 --> 00:01:08,130
today about the invention corporate

00:01:06,420 --> 00:01:10,670
server which is a commercial

00:01:08,130 --> 00:01:14,280
distribution based on Debian stable

00:01:10,670 --> 00:01:16,890
my name is Maude Munaf I'm a long-term

00:01:14,280 --> 00:01:19,350
Debian developer myself and I'm working

00:01:16,890 --> 00:01:24,570
for intervention since about six or

00:01:19,350 --> 00:01:26,610
seven years this is what I'll be talking

00:01:24,570 --> 00:01:28,650
about today first I'll give a brief

00:01:26,610 --> 00:01:30,900
introduction about Universal corporate

00:01:28,650 --> 00:01:33,300
servers so that you get a grasp what's

00:01:30,900 --> 00:01:37,259
it all about and what it differentiates

00:01:33,300 --> 00:01:40,740
from Debian which is the base then I'll

00:01:37,259 --> 00:01:43,740
give some some comments why we chose

00:01:40,740 --> 00:01:46,289
Debian as as the base for universal

00:01:43,740 --> 00:01:49,259
corporate server and in specific why we

00:01:46,289 --> 00:01:52,069
chose to base on Debian stable instead

00:01:49,259 --> 00:01:56,399
of snapshots like for example boom to us

00:01:52,069 --> 00:01:59,880
and I'll also present some tools and

00:01:56,399 --> 00:02:02,190
technologies we developed which are part

00:01:59,880 --> 00:02:05,610
of interventional corporate server and

00:02:02,190 --> 00:02:07,740
in the end we'll also also give a few

00:02:05,610 --> 00:02:11,130
comments about the integration of number

00:02:07,740 --> 00:02:14,819
four and since our new release which was

00:02:11,130 --> 00:02:18,530
released a month ago integrates number

00:02:14,819 --> 00:02:18,530
four is part of the standard product

00:02:21,790 --> 00:02:29,109
in corporate server it is targeted at at

00:02:25,390 --> 00:02:31,840
commercial adoptions usually the sweet

00:02:29,109 --> 00:02:34,599
spot is between 50 to several thousand

00:02:31,840 --> 00:02:37,870
users if you're using less than that

00:02:34,599 --> 00:02:41,349
then you still have many of the benefits

00:02:37,870 --> 00:02:44,439
but it's the key focus is actually more

00:02:41,349 --> 00:02:46,359
based on mass management and having

00:02:44,439 --> 00:02:48,639
everything in L up and if you only have

00:02:46,359 --> 00:02:50,680
three or four users then you don't have

00:02:48,639 --> 00:02:52,900
that much benefit of having it for

00:02:50,680 --> 00:02:56,680
everything in L up the current release

00:02:52,900 --> 00:02:58,720
is UCS free zero the initial development

00:02:56,680 --> 00:03:03,400
of you know mention corporate server

00:02:58,720 --> 00:03:05,849
started nearly ten years ago at this

00:03:03,400 --> 00:03:11,310
stage we have approximately 700

00:03:05,849 --> 00:03:14,799
installations the largest installations

00:03:11,310 --> 00:03:19,030
user wise is approximately eighty

00:03:14,799 --> 00:03:21,519
thousand users and the largest

00:03:19,030 --> 00:03:25,659
installation in terms of servers and

00:03:21,519 --> 00:03:30,459
systems or mostly locations is

00:03:25,659 --> 00:03:33,840
approximately 700 it's approximately 200

00:03:30,459 --> 00:03:35,919
to 300 I come to that later

00:03:33,840 --> 00:03:37,919
you know mention corporate server is

00:03:35,919 --> 00:03:42,040
predominantly used in the

00:03:37,919 --> 00:03:44,139
german-speaking areas they sold Germany

00:03:42,040 --> 00:03:48,669
Austria and the German part of

00:03:44,139 --> 00:03:52,690
Switzerland and it's not that much due

00:03:48,669 --> 00:03:54,609
to technical or - to limitations in our

00:03:52,690 --> 00:03:56,979
documentation or in our translation

00:03:54,609 --> 00:03:59,620
everything we develop on our own is

00:03:56,979 --> 00:04:01,540
available in English and all the

00:03:59,620 --> 00:04:04,479
interface language the primary interface

00:04:01,540 --> 00:04:07,810
language is always English but this is

00:04:04,479 --> 00:04:08,949
most mostly cost because the

00:04:07,810 --> 00:04:11,079
international corporate server is

00:04:08,949 --> 00:04:13,720
distributed by a partner network and

00:04:11,079 --> 00:04:18,659
most of these partners are out of these

00:04:13,720 --> 00:04:21,280
days mostly in the german-speaking area

00:04:18,659 --> 00:04:24,070
everything we develop is free software

00:04:21,280 --> 00:04:27,099
all our code we develop ourselves is

00:04:24,070 --> 00:04:32,229
covered by the GPL free the affair oh

00:04:27,099 --> 00:04:35,110
version of the GPL free and if anyone

00:04:32,229 --> 00:04:35,529
wants to run the binary version of you

00:04:35,110 --> 00:04:37,029
know mention

00:04:35,529 --> 00:04:39,729
corporate servers they're paying a

00:04:37,029 --> 00:04:42,309
license fee let's say the model which is

00:04:39,729 --> 00:04:48,159
very similar to what redhead dust with

00:04:42,309 --> 00:04:52,569
red hat enterprise linux some of the key

00:04:48,159 --> 00:04:54,489
features of UCS the the court features

00:04:52,569 --> 00:04:57,849
actually tied a LOF integration of all

00:04:54,489 --> 00:04:59,829
services everything we store and it's

00:04:57,849 --> 00:05:04,029
always kept in a lab in one central

00:04:59,829 --> 00:05:07,389
point so whatever you add into your

00:05:04,029 --> 00:05:09,609
sources into your domain resources for

00:05:07,389 --> 00:05:13,049
example users you only enter it at one

00:05:09,609 --> 00:05:15,699
point and if you know for example

00:05:13,049 --> 00:05:18,909
logging in with the user at your Windows

00:05:15,699 --> 00:05:19,329
clients or authenticate at the main

00:05:18,909 --> 00:05:21,959
server

00:05:19,329 --> 00:05:25,539
you always use the same credentials

00:05:21,959 --> 00:05:29,259
we're integrating five share management

00:05:25,539 --> 00:05:34,299
with zama and six shares we integrate

00:05:29,259 --> 00:05:37,929
DNS and DHCP services using bind and the

00:05:34,299 --> 00:05:40,719
ISC DHCP server with a lot L of

00:05:37,929 --> 00:05:46,209
modifications we manage all our house

00:05:40,719 --> 00:05:50,139
accounts cyrus MF folders mailing this

00:05:46,209 --> 00:05:52,889
and the whole IP network stack we also

00:05:50,139 --> 00:05:56,069
integrate Nagios for monitoring and

00:05:52,889 --> 00:05:59,229
print services using cups this is all

00:05:56,069 --> 00:06:01,499
glued into the L of domain management

00:05:59,229 --> 00:06:04,509
I'll come to that later

00:06:01,499 --> 00:06:06,309
the central mint administration is done

00:06:04,509 --> 00:06:07,869
through a web interface which we

00:06:06,309 --> 00:06:09,999
developed on our own which is called -

00:06:07,869 --> 00:06:13,299
you know mention management console it

00:06:09,999 --> 00:06:16,569
also allows applying changes to more

00:06:13,299 --> 00:06:18,219
than so it's it's like the policy

00:06:16,569 --> 00:06:20,799
mechanism you might know from Active

00:06:18,219 --> 00:06:22,839
Directory so you're applying a central

00:06:20,799 --> 00:06:26,379
policy configure at one place and then

00:06:22,839 --> 00:06:29,519
you can put it into effect for for

00:06:26,379 --> 00:06:33,759
example for all users of your domain of

00:06:29,519 --> 00:06:35,349
course all all the data you manage as

00:06:33,759 --> 00:06:37,959
part of international corporate server

00:06:35,349 --> 00:06:40,209
is also manageable for a command line

00:06:37,959 --> 00:06:42,399
interface all the management modules are

00:06:40,209 --> 00:06:45,429
abstracted internally and you can always

00:06:42,399 --> 00:06:48,940
use the same functions in scripts or in

00:06:45,429 --> 00:06:50,770
imports or similar things we also

00:06:48,940 --> 00:06:55,090
integrate some work with the LDAP

00:06:50,770 --> 00:06:56,710
back-end so if your installed UCS you

00:06:55,090 --> 00:06:58,810
get more or less windows interrogation

00:06:56,710 --> 00:07:03,190
author box and you can start to join in

00:06:58,810 --> 00:07:05,200
Windows clients into your domain and we

00:07:03,190 --> 00:07:07,420
also manage the passwords internally and

00:07:05,200 --> 00:07:10,540
map into all the various authentication

00:07:07,420 --> 00:07:12,700
domains so if you have you can change

00:07:10,540 --> 00:07:16,090
your password both on a Windows client

00:07:12,700 --> 00:07:19,920
but also in Kerberos or through any of

00:07:16,090 --> 00:07:22,450
the standard and UNIX command line tools

00:07:19,920 --> 00:07:24,490
we also integrate the management of

00:07:22,450 --> 00:07:26,050
virtual machines this is called the you

00:07:24,490 --> 00:07:28,270
know vention virtual machine manager

00:07:26,050 --> 00:07:29,980
it's also integrated in our web-based

00:07:28,270 --> 00:07:34,330
you know mansion management console

00:07:29,980 --> 00:07:37,780
interface it supports both KVM and sin

00:07:34,330 --> 00:07:40,150
by the means of libvirt so we are not

00:07:37,780 --> 00:07:44,860
using without calling any of the

00:07:40,150 --> 00:07:46,270
internal functions of KVM oxen but we

00:07:44,860 --> 00:07:50,290
all be going through this abstraction

00:07:46,270 --> 00:07:52,060
layer of of live viet which also means

00:07:50,290 --> 00:07:57,700
that you can use all the command-line

00:07:52,060 --> 00:08:00,370
features of that VHL offers you I'll

00:07:57,700 --> 00:08:03,910
come to the next point in a bit more

00:08:00,370 --> 00:08:05,710
depth later on we also have a domain

00:08:03,910 --> 00:08:09,160
replication service which is called the

00:08:05,710 --> 00:08:11,620
listener notify replications it covers

00:08:09,160 --> 00:08:14,500
not only alap replication but also the

00:08:11,620 --> 00:08:17,050
replication of modifications for

00:08:14,500 --> 00:08:20,260
services which do not have direct a lab

00:08:17,050 --> 00:08:25,600
access for example if you're exporting a

00:08:20,260 --> 00:08:27,480
share why are NFS NFS being an old

00:08:25,600 --> 00:08:30,370
venerable service from the seventies

00:08:27,480 --> 00:08:32,979
does not have that kind of a lob

00:08:30,370 --> 00:08:36,219
interface and so we use this listener

00:08:32,979 --> 00:08:38,380
notify a mechanism to generate the EGC

00:08:36,219 --> 00:08:41,589
exports from all them the age of which

00:08:38,380 --> 00:08:44,890
was stored until up I'll explain that in

00:08:41,589 --> 00:08:47,230
a bit more depth later on UCS it's also

00:08:44,890 --> 00:08:51,880
used as the base for other products

00:08:47,230 --> 00:08:57,390
which partner companies use use to

00:08:51,880 --> 00:08:57,390
distribute their own services yes

00:08:58,600 --> 00:09:05,230
we also provide thin client services

00:09:01,000 --> 00:09:07,450
this is actually some this has been a

00:09:05,230 --> 00:09:11,410
core feature even from the very first

00:09:07,450 --> 00:09:15,790
versions of UCS we don't do not use LT

00:09:11,410 --> 00:09:19,390
SP or other solutions in that case it's

00:09:15,790 --> 00:09:25,450
a system with more or less developed on

00:09:19,390 --> 00:09:27,990
our own for the last years it allows not

00:09:25,450 --> 00:09:30,730
only the need easy access to Linux based

00:09:27,990 --> 00:09:33,310
Linux based terminal services but of

00:09:30,730 --> 00:09:35,620
course we also support accessing Windows

00:09:33,310 --> 00:09:38,710
terminal services using our desktop and

00:09:35,620 --> 00:09:44,380
we also support accessing Terminal

00:09:38,710 --> 00:09:47,230
Services which are run as part of its NF

00:09:44,380 --> 00:09:50,830
so the which you might know at citrix

00:09:47,230 --> 00:09:52,750
metaframe in the past and the largest

00:09:50,830 --> 00:09:55,930
installation of that range we have at

00:09:52,750 --> 00:09:59,860
that point it's approximately 1500 think

00:09:55,930 --> 00:10:01,870
lines we also provide a Ryan which is

00:09:59,860 --> 00:10:03,100
targeted at schools schools have

00:10:01,870 --> 00:10:05,890
different requirements

00:10:03,100 --> 00:10:09,280
in comparison to to a standard business

00:10:05,890 --> 00:10:11,230
unit one significant change is the

00:10:09,280 --> 00:10:15,400
simplified user management because all

00:10:11,230 --> 00:10:17,050
these schools use various local tools to

00:10:15,400 --> 00:10:20,170
manage all the pupil and teacher data

00:10:17,050 --> 00:10:22,480
and we have you provide the interfaces

00:10:20,170 --> 00:10:25,210
so that the school administration can

00:10:22,480 --> 00:10:27,250
continue to use all the tools for

00:10:25,210 --> 00:10:29,800
management for for managing all the

00:10:27,250 --> 00:10:32,410
facilities in the data and we only

00:10:29,800 --> 00:10:36,130
import them whenever new school year

00:10:32,410 --> 00:10:39,580
starts it also provides additional web

00:10:36,130 --> 00:10:42,820
interfaces targeted at teachers so for

00:10:39,580 --> 00:10:44,620
example they can configure the websites

00:10:42,820 --> 00:10:48,010
which should be allowed during a class

00:10:44,620 --> 00:10:51,910
or they can for example provide teaching

00:10:48,010 --> 00:10:53,830
material to all the students and one

00:10:51,910 --> 00:10:57,160
additional feature which is specific to

00:10:53,830 --> 00:11:00,520
the school variant is that we do partial

00:10:57,160 --> 00:11:02,740
up replication since the regular school

00:11:00,520 --> 00:11:05,890
does not have the security facilities

00:11:02,740 --> 00:11:08,770
that a standard server room provides

00:11:05,890 --> 00:11:11,720
like having an an intrusion detection

00:11:08,770 --> 00:11:15,270
system or an alarm system

00:11:11,720 --> 00:11:18,300
so we only replicate the data which is

00:11:15,270 --> 00:11:24,090
needed for this specific school tour to

00:11:18,300 --> 00:11:28,230
the various outlets we also provide a

00:11:24,090 --> 00:11:30,210
desktop based on KDE and we provide a

00:11:28,230 --> 00:11:32,730
solution called you know mention desktop

00:11:30,210 --> 00:11:36,600
virtualization services which provides

00:11:32,730 --> 00:11:40,440
desktop virtualization in so that every

00:11:36,600 --> 00:11:43,050
every user has this personalized desktop

00:11:40,440 --> 00:11:45,780
instance running which he accesses from

00:11:43,050 --> 00:11:48,750
the thin client and this supports

00:11:45,780 --> 00:11:54,000
Windows XP Windows 7 and our desktop

00:11:48,750 --> 00:11:57,590
variety and the users access their

00:11:54,000 --> 00:12:01,950
virtualized desktops from thin clients

00:11:57,590 --> 00:12:04,650
and there's also a series of group where

00:12:01,950 --> 00:12:07,170
integrate Rupa solutions which integrate

00:12:04,650 --> 00:12:09,660
into UCS but this is not something with

00:12:07,170 --> 00:12:14,370
your sauce this is something where other

00:12:09,660 --> 00:12:17,150
companies integrate into the u.s. into

00:12:14,370 --> 00:12:19,230
the management facilities of UCS and

00:12:17,150 --> 00:12:22,050
this is not something we do on our own

00:12:19,230 --> 00:12:25,170
one example for this is for example open

00:12:22,050 --> 00:12:28,500
exchange which provides a an appliance

00:12:25,170 --> 00:12:33,150
version this is actually based on UCS on

00:12:28,500 --> 00:12:35,730
the on the underlying layers as I said

00:12:33,150 --> 00:12:39,660
initially before we're basing on Debian

00:12:35,730 --> 00:12:42,180
stable in contrast for example to go to

00:12:39,660 --> 00:12:44,730
which do snapshots of Debian unstable

00:12:42,180 --> 00:12:47,880
we're basing we're always basing on the

00:12:44,730 --> 00:12:48,420
several releases ucs-2 4 was based on on

00:12:47,880 --> 00:12:52,800
Lenny

00:12:48,420 --> 00:12:57,900
so Debian 5-0 and UCS free zeroes based

00:12:52,800 --> 00:13:00,260
on Debian squeeze while we're basing on

00:12:57,900 --> 00:13:03,710
Debian stable of course we still

00:13:00,260 --> 00:13:07,350
selectively update a few of these

00:13:03,710 --> 00:13:09,630
components for example we usually use a

00:13:07,350 --> 00:13:12,030
more recent version of samba we use a

00:13:09,630 --> 00:13:14,460
more recent version of 10 of KVM and

00:13:12,030 --> 00:13:17,250
appeared but we do this very selectively

00:13:14,460 --> 00:13:20,520
and we're always trying to stick to the

00:13:17,250 --> 00:13:23,340
same released version of debian as close

00:13:20,520 --> 00:13:24,750
as possible the motivations for using

00:13:23,340 --> 00:13:30,740
debian as the

00:13:24,750 --> 00:13:35,370
basis for once the renown stability and

00:13:30,740 --> 00:13:38,070
the the general quality one part of that

00:13:35,370 --> 00:13:40,410
is also the quality which hadn't stood

00:13:38,070 --> 00:13:41,820
the - the distribution once a release

00:13:40,410 --> 00:13:44,580
has happened this is all it's a very

00:13:41,820 --> 00:13:47,430
important aspect so all the regular

00:13:44,580 --> 00:13:49,560
points updates which collect which

00:13:47,430 --> 00:13:51,750
summarize all the important bug fixes

00:13:49,560 --> 00:13:54,270
which have been made after the

00:13:51,750 --> 00:13:56,130
distribution has released the security

00:13:54,270 --> 00:13:58,920
support these are all very important

00:13:56,130 --> 00:14:02,010
factors and to choose Debian as the base

00:13:58,920 --> 00:14:04,140
another reason of course is also that it

00:14:02,010 --> 00:14:07,680
has a very very large selection of

00:14:04,140 --> 00:14:10,320
available software I don't do I don't

00:14:07,680 --> 00:14:12,060
know any concrete numbers for that but

00:14:10,320 --> 00:14:13,920
as far as I know it's it's the

00:14:12,060 --> 00:14:15,660
distribution which provides the largest

00:14:13,920 --> 00:14:18,050
amount of software packages in the

00:14:15,660 --> 00:14:20,520
archive and this is of course something

00:14:18,050 --> 00:14:22,350
which is also very attractive to

00:14:20,520 --> 00:14:26,670
customers if they have some very

00:14:22,350 --> 00:14:28,980
specific demand whatever weird

00:14:26,670 --> 00:14:30,510
requirements they have debian usually

00:14:28,980 --> 00:14:33,720
provides some kind of packages in the

00:14:30,510 --> 00:14:36,510
archive for that another very important

00:14:33,720 --> 00:14:39,930
factor is that the development model is

00:14:36,510 --> 00:14:41,820
truly open since every buck which is

00:14:39,930 --> 00:14:44,940
forged to the Debian bug tracking system

00:14:41,820 --> 00:14:47,160
is available to anyone you don't run

00:14:44,940 --> 00:14:48,839
into any of these restricted bugs

00:14:47,160 --> 00:14:51,839
you always find in other Bugzilla

00:14:48,839 --> 00:14:53,430
installations and you can also follow

00:14:51,839 --> 00:14:55,800
the whole development process by

00:14:53,430 --> 00:14:58,530
subscribing to mailing this so this is a

00:14:55,800 --> 00:15:01,200
very transparent and very open and for

00:14:58,530 --> 00:15:05,370
that case very reliable development

00:15:01,200 --> 00:15:06,980
process to base on another important

00:15:05,370 --> 00:15:11,400
reason of course is that there's no

00:15:06,980 --> 00:15:13,290
commercial background which is in

00:15:11,400 --> 00:15:16,560
competition to our own commercial

00:15:13,290 --> 00:15:19,589
background if we were amazing on for

00:15:16,560 --> 00:15:22,740
example Red Hat Enterprise Linux we

00:15:19,589 --> 00:15:25,350
would have always have we would always

00:15:22,740 --> 00:15:27,480
be sub controlled by whatever Red Hat

00:15:25,350 --> 00:15:30,750
product management decides for the next

00:15:27,480 --> 00:15:33,230
distribution while in Debian most of the

00:15:30,750 --> 00:15:37,200
development is actually more driven by

00:15:33,230 --> 00:15:38,520
well they're the the motivations of the

00:15:37,200 --> 00:15:40,190
individual developers

00:15:38,520 --> 00:15:42,570
not that much that there's some kind of

00:15:40,190 --> 00:15:44,850
restricting commercial or conflicting

00:15:42,570 --> 00:15:46,590
commercial background another important

00:15:44,850 --> 00:15:47,730
reasons that dating is more than 18

00:15:46,590 --> 00:15:50,730
years old

00:15:47,730 --> 00:15:52,800
so we've seen many many distributions to

00:15:50,730 --> 00:15:55,470
come and go while Debian has always been

00:15:52,800 --> 00:15:58,560
with anyone and it's thriving and

00:15:55,470 --> 00:16:01,230
ongoing so and there's no indication

00:15:58,560 --> 00:16:04,230
that Devon will go away in the next 10

00:16:01,230 --> 00:16:06,300
or 15 years so we need to say and need

00:16:04,230 --> 00:16:08,910
to select a different distribution -

00:16:06,300 --> 00:16:12,180
based on also in a very important factor

00:16:08,910 --> 00:16:14,010
which many people don't see is that the

00:16:12,180 --> 00:16:18,420
rebuild ability of the admin is really

00:16:14,010 --> 00:16:20,550
really good we're rebuilding UCS we do

00:16:18,420 --> 00:16:24,000
not use the binary packages from Debian

00:16:20,550 --> 00:16:25,740
this is mostly - to ensure that there

00:16:24,000 --> 00:16:28,620
are no problems with any of the

00:16:25,740 --> 00:16:31,290
libraries we modify your own but also

00:16:28,620 --> 00:16:33,330
because we need full control over the

00:16:31,290 --> 00:16:35,520
system and we need to ensure that every

00:16:33,330 --> 00:16:38,100
package actually builds if we need to

00:16:35,520 --> 00:16:41,430
make a crucial modification to it and

00:16:38,100 --> 00:16:44,390
for example when we rebuild squeeze we

00:16:41,430 --> 00:16:47,490
found no more than at most 10 to 15

00:16:44,390 --> 00:16:50,340
build failures and some of them were

00:16:47,490 --> 00:16:52,710
actually rather temporal so if for

00:16:50,340 --> 00:16:56,310
example there was some perl module which

00:16:52,710 --> 00:17:00,030
process financial statistics and this

00:16:56,310 --> 00:17:02,130
promo editor had a test suite and this

00:17:00,030 --> 00:17:04,500
test suite for example downloaded some

00:17:02,130 --> 00:17:06,810
historic stock values and passed them

00:17:04,500 --> 00:17:09,150
and since that URL was no longer

00:17:06,810 --> 00:17:11,630
available the package failed to build

00:17:09,150 --> 00:17:14,790
from source but that was actually

00:17:11,630 --> 00:17:17,730
actually an issue which was fixed

00:17:14,790 --> 00:17:19,980
Wednesday when Debian stable was so when

00:17:17,730 --> 00:17:21,990
Devon squeeze was released but it was a

00:17:19,980 --> 00:17:23,820
temporal regression which appeared later

00:17:21,990 --> 00:17:25,260
on but other than that it's truly

00:17:23,820 --> 00:17:27,680
impressive that you have a system which

00:17:25,260 --> 00:17:30,780
consists of nearly 15,000 packages and

00:17:27,680 --> 00:17:36,660
you can rebuild them almost without any

00:17:30,780 --> 00:17:38,040
additional effort there also well there

00:17:36,660 --> 00:17:40,050
are not that many challenges actually

00:17:38,040 --> 00:17:42,960
there ouch

00:17:40,050 --> 00:17:46,260
I had really had to look hard to find

00:17:42,960 --> 00:17:48,570
some and one problem is that Debian

00:17:46,260 --> 00:17:51,550
stable it's a very problematic base for

00:17:48,570 --> 00:17:55,540
any desktop and targeted solutions

00:17:51,550 --> 00:17:58,300
and for our version of UCS which is

00:17:55,540 --> 00:18:01,030
targeted desktop users we always have

00:17:58,300 --> 00:18:03,460
the ongoing problem that we need to

00:18:01,030 --> 00:18:06,970
support new graphics chipset this is

00:18:03,460 --> 00:18:10,300
actually the the the largest problem

00:18:06,970 --> 00:18:12,910
because people come people come and have

00:18:10,300 --> 00:18:15,040
their very very new Nvidia drivers or

00:18:12,910 --> 00:18:19,510
whatever they they bought for their new

00:18:15,040 --> 00:18:22,300
systems and since all the the components

00:18:19,510 --> 00:18:24,430
of the xorg graphics stack are tightly

00:18:22,300 --> 00:18:26,710
interwoven with each other it's really

00:18:24,430 --> 00:18:30,340
difficult to provide backwards because

00:18:26,710 --> 00:18:33,160
you always end up not only updating the

00:18:30,340 --> 00:18:35,170
ex driver himself but also of the ex

00:18:33,160 --> 00:18:38,220
server and then you need to update the

00:18:35,170 --> 00:18:40,780
kernel because you need new functions in

00:18:38,220 --> 00:18:44,260
indeed the kernel modules which are

00:18:40,780 --> 00:18:45,670
required for DRM and the solutions for

00:18:44,260 --> 00:18:47,650
that that's of course not the Debian

00:18:45,670 --> 00:18:49,390
problems I don't want to blame this is

00:18:47,650 --> 00:18:52,270
not a Debian specific problem it's just

00:18:49,390 --> 00:18:55,450
a problem we are having with basing on

00:18:52,270 --> 00:18:58,300
Debian stable and as a solution for that

00:18:55,450 --> 00:19:01,000
the upcoming versions of our desktop

00:18:58,300 --> 00:19:05,410
product will be based on snapshots from

00:19:01,000 --> 00:19:08,820
Debian testing one problem which we've

00:19:05,410 --> 00:19:12,850
seen over the time several times is that

00:19:08,820 --> 00:19:17,650
Debian sees the open SSL license as

00:19:12,850 --> 00:19:20,190
incompatible with the GPL so any probe

00:19:17,650 --> 00:19:23,980
any code which does not have an

00:19:20,190 --> 00:19:27,970
exception to link with GPL software is

00:19:23,980 --> 00:19:30,580
seen as incompatible this is something

00:19:27,970 --> 00:19:32,500
which several other distributions see

00:19:30,580 --> 00:19:36,220
differently and it's a rather

00:19:32,500 --> 00:19:39,370
complicated legal issue but for example

00:19:36,220 --> 00:19:41,520
Red Hat which is probably more lawyers

00:19:39,370 --> 00:19:44,470
than there are Debian developers and

00:19:41,520 --> 00:19:47,200
they've chosen to just treat alt

00:19:44,470 --> 00:19:50,650
methacel as a system library on for that

00:19:47,200 --> 00:19:54,150
you have for that different rules

00:19:50,650 --> 00:19:58,060
applies with the open SSL library and I

00:19:54,150 --> 00:20:00,180
think that something that what Debian

00:19:58,060 --> 00:20:03,730
would benefit as well from because

00:20:00,180 --> 00:20:05,200
they're both functionality which is

00:20:03,730 --> 00:20:07,630
disabled in Debian

00:20:05,200 --> 00:20:10,360
for that reason for example squid the

00:20:07,630 --> 00:20:14,590
squid packages do not have TLS support

00:20:10,360 --> 00:20:16,570
and there's also the problem that most

00:20:14,590 --> 00:20:18,850
of the regression testing most of the

00:20:16,570 --> 00:20:22,960
production use of open-air lab which

00:20:18,850 --> 00:20:25,540
caused a very crucial service is done

00:20:22,960 --> 00:20:27,790
with open SSL instead of new TLS and

00:20:25,540 --> 00:20:31,390
there's also the recommendation of the

00:20:27,790 --> 00:20:35,080
ultimate love developers to use open SSL

00:20:31,390 --> 00:20:36,970
rather than Kanu TLS so this is this is

00:20:35,080 --> 00:20:39,790
one thing that would be very nice if

00:20:36,970 --> 00:20:43,800
they were fixed in the in the

00:20:39,790 --> 00:20:47,170
foreseeable future now we'll introduce a

00:20:43,800 --> 00:20:52,270
few technologies and tools we've

00:20:47,170 --> 00:20:54,880
developed as part of UCS one tool which

00:20:52,270 --> 00:20:57,430
is quite old which has been there since

00:20:54,880 --> 00:20:59,920
the very first releases of UCS is you

00:20:57,430 --> 00:21:02,130
know mention configuration registry it's

00:20:59,920 --> 00:21:05,380
a solution which simplifies

00:21:02,130 --> 00:21:07,720
configuration management in UCS the

00:21:05,380 --> 00:21:10,360
typical way to configure services or

00:21:07,720 --> 00:21:14,440
local system properties is not by

00:21:10,360 --> 00:21:15,730
editing a config file but by setting the

00:21:14,440 --> 00:21:19,060
value in a you know mention

00:21:15,730 --> 00:21:21,820
configuration registry variable and then

00:21:19,060 --> 00:21:25,390
we provide templates for the for the

00:21:21,820 --> 00:21:27,580
typical configuration files so that for

00:21:25,390 --> 00:21:30,730
example if you set the hostname in the

00:21:27,580 --> 00:21:33,460
you see a varietal hostname then all the

00:21:30,730 --> 00:21:35,980
various configuration files which source

00:21:33,460 --> 00:21:39,010
the hostname automatically being

00:21:35,980 --> 00:21:42,640
rewritten and you can change it from a

00:21:39,010 --> 00:21:44,230
from a from from unique interface this

00:21:42,640 --> 00:21:48,580
interface is both a command-line

00:21:44,230 --> 00:21:51,910
interface and web based interface this

00:21:48,580 --> 00:21:53,650
has a couple of advantages and one

00:21:51,910 --> 00:21:55,990
points you have a coherent interface

00:21:53,650 --> 00:22:00,010
since all the open source applications

00:21:55,990 --> 00:22:02,410
which are present do not have a single

00:22:00,010 --> 00:22:05,170
common upstream but have various

00:22:02,410 --> 00:22:07,660
different routes all over the place so

00:22:05,170 --> 00:22:11,190
the the configuration formats vary over

00:22:07,660 --> 00:22:14,560
the various product the various projects

00:22:11,190 --> 00:22:16,690
so the only interface the the typical

00:22:14,560 --> 00:22:18,520
administrator sees when using you know

00:22:16,690 --> 00:22:19,150
mention corporate server it's only the

00:22:18,520 --> 00:22:22,390
the variety

00:22:19,150 --> 00:22:23,620
and we care we ask the the integration

00:22:22,390 --> 00:22:26,590
provider care about the specific

00:22:23,620 --> 00:22:28,360
configuration format but and the end

00:22:26,590 --> 00:22:31,530
administrator only needs to set these

00:22:28,360 --> 00:22:34,360
variables this also allows central

00:22:31,530 --> 00:22:36,640
configuration of very many services for

00:22:34,360 --> 00:22:39,130
example we just set other policies and

00:22:36,640 --> 00:22:43,300
with specific variables and then we can

00:22:39,130 --> 00:22:46,420
update a couple hundred systems well of

00:22:43,300 --> 00:22:50,020
course it it also has the nice interface

00:22:46,420 --> 00:22:52,150
and the nice benefit that it decouples

00:22:50,020 --> 00:22:55,600
the configuration setting from the

00:22:52,150 --> 00:22:58,420
actual from the actual configuration

00:22:55,600 --> 00:23:00,970
file so if you up if you need to update

00:22:58,420 --> 00:23:03,610
to a new version of a software which has

00:23:00,970 --> 00:23:05,980
incompatible configuration file formats

00:23:03,610 --> 00:23:08,050
you don't need to have some transition

00:23:05,980 --> 00:23:10,929
tools which convert it to the new format

00:23:08,050 --> 00:23:13,480
but we only provide the configuration

00:23:10,929 --> 00:23:15,640
file template in the new format and then

00:23:13,480 --> 00:23:20,910
we source the already existing variables

00:23:15,640 --> 00:23:20,910
and then we we we can simply continue

00:23:21,840 --> 00:23:30,160
its manageable both Roca Mota interface

00:23:24,640 --> 00:23:33,670
and web interface and for 99% of all

00:23:30,160 --> 00:23:36,190
usage scenarios we cover all the the

00:23:33,670 --> 00:23:39,190
crucial configuration possibilities

00:23:36,190 --> 00:23:42,429
through existing robots and if you still

00:23:39,190 --> 00:23:44,500
need to make changes to which are not

00:23:42,429 --> 00:23:46,929
covered by existing variables then you

00:23:44,500 --> 00:23:48,850
can still edit the configuration file

00:23:46,929 --> 00:23:55,210
template to make your own local changes

00:23:48,850 --> 00:23:59,050
to it another UCS specific technology is

00:23:55,210 --> 00:24:01,870
the listener notify replication we use

00:23:59,050 --> 00:24:05,410
this both for the Allah prep Legation

00:24:01,870 --> 00:24:07,960
but also to replicate domain-wide

00:24:05,410 --> 00:24:11,770
changes for services which are not

00:24:07,960 --> 00:24:16,630
covered by which do not have direct a

00:24:11,770 --> 00:24:19,600
lab access in in the structure of of the

00:24:16,630 --> 00:24:21,700
UCS domain there's one authoritative

00:24:19,600 --> 00:24:24,220
LDAP server which is called the master

00:24:21,700 --> 00:24:27,429
domain controller which has the own

00:24:24,220 --> 00:24:30,130
herbal only writable elip master copies

00:24:27,429 --> 00:24:31,620
all changes are made to the master

00:24:30,130 --> 00:24:34,020
domain controller

00:24:31,620 --> 00:24:36,180
and all the other LDAP servers are

00:24:34,020 --> 00:24:40,110
effectively read-only so they they

00:24:36,180 --> 00:24:43,080
provide the or the the the LDAP data as

00:24:40,110 --> 00:24:45,540
a local service but all the right

00:24:43,080 --> 00:24:50,000
vertical changes are directly redirected

00:24:45,540 --> 00:24:54,600
to to the master domain controller and

00:24:50,000 --> 00:24:57,840
then we have oh I think I covered his

00:24:54,600 --> 00:25:01,110
next life in the next slide the

00:24:57,840 --> 00:25:03,510
replication is the elope replication

00:25:01,110 --> 00:25:06,690
itself is also covered by this listener

00:25:03,510 --> 00:25:08,820
notify replication and this also covers

00:25:06,690 --> 00:25:11,790
the the replication of ldap schema

00:25:08,820 --> 00:25:14,550
changes so if you need to for example to

00:25:11,790 --> 00:25:17,010
extend one of the ALAB Scimitar then you

00:25:14,550 --> 00:25:19,170
only need to update the version on the

00:25:17,010 --> 00:25:21,390
master domain controller and all the

00:25:19,170 --> 00:25:25,230
changes get replicated automatically to

00:25:21,390 --> 00:25:29,790
all the other elope servers in in your

00:25:25,230 --> 00:25:32,910
domain with this interface we also

00:25:29,790 --> 00:25:35,760
distribute non-arab changes I already

00:25:32,910 --> 00:25:39,300
gave the example of amending the e.t.c

00:25:35,760 --> 00:25:43,170
exports file for NFS we use this

00:25:39,300 --> 00:25:45,150
interface to to make domain wide changes

00:25:43,170 --> 00:25:47,520
for all services which are not covered

00:25:45,150 --> 00:25:49,620
by L of another important example for

00:25:47,520 --> 00:25:51,390
example is cups which does not have an

00:25:49,620 --> 00:25:53,520
interface to read it's printed it's

00:25:51,390 --> 00:25:55,590
printed definitions from the l-dub it

00:25:53,520 --> 00:25:57,990
can only read it from the e.t.c cups

00:25:55,590 --> 00:26:00,690
printers conf and so we're managing

00:25:57,990 --> 00:26:05,520
these cups printers conf directly

00:26:00,690 --> 00:26:08,309
through these modules the system works

00:26:05,520 --> 00:26:09,540
that way that there's the system service

00:26:08,309 --> 00:26:11,910
called the you know mentioned directory

00:26:09,540 --> 00:26:14,220
notifier which is running on the master

00:26:11,910 --> 00:26:16,559
domain controller it monitors the

00:26:14,220 --> 00:26:22,290
authoritative LDAP through transaction

00:26:16,559 --> 00:26:25,860
log file and replicates all the changes

00:26:22,290 --> 00:26:27,690
it has SS detected to all the various

00:26:25,860 --> 00:26:30,360
universe and directories notifier

00:26:27,690 --> 00:26:32,820
instances the notifier instances are

00:26:30,360 --> 00:26:36,000
system services which are running on all

00:26:32,820 --> 00:26:40,050
the other systems of the UCS domain and

00:26:36,000 --> 00:26:43,770
whenever any changes are transferred to

00:26:40,050 --> 00:26:45,330
any of the other systems then all the

00:26:43,770 --> 00:26:49,260
local you know mentioned Iraq

00:26:45,330 --> 00:26:51,690
we manage on modules put the changes

00:26:49,260 --> 00:26:56,550
into local effect which has which they

00:26:51,690 --> 00:26:58,890
have received this system scales pretty

00:26:56,550 --> 00:27:01,800
well our largest installations as of

00:26:58,890 --> 00:27:03,300
today is wrong about 200 servers which

00:27:01,800 --> 00:27:06,200
are being distributed for all the

00:27:03,300 --> 00:27:09,120
various systems of the domain and

00:27:06,200 --> 00:27:12,540
there's work on going to have another

00:27:09,120 --> 00:27:15,750
installations updated to to an area of

00:27:12,540 --> 00:27:19,380
700 to 800 systems and multi master

00:27:15,750 --> 00:27:22,500
replication is also planned at a later

00:27:19,380 --> 00:27:25,770
point so that there are not that so that

00:27:22,500 --> 00:27:28,020
there's not only one place where changes

00:27:25,770 --> 00:27:30,600
are made to the a lot directory but so

00:27:28,020 --> 00:27:33,600
that it's also possible to make changes

00:27:30,600 --> 00:27:35,490
at several places at once and the system

00:27:33,600 --> 00:27:38,850
also allows selective replication I

00:27:35,490 --> 00:27:42,180
already gave the example of the UCS at

00:27:38,850 --> 00:27:44,930
school school Bryant but for example you

00:27:42,180 --> 00:27:49,370
can also use the system to only

00:27:44,930 --> 00:27:56,280
replicate parts of your domain data to

00:27:49,370 --> 00:28:01,230
specific servers another technology I'd

00:27:56,280 --> 00:28:05,190
like to talk about because it's it's not

00:28:01,230 --> 00:28:07,380
that common to have it included in a in

00:28:05,190 --> 00:28:14,100
a support set up so far is our

00:28:07,380 --> 00:28:17,430
integration of zom before we Samba for

00:28:14,100 --> 00:28:20,040
is it's available in would see in in UCS

00:28:17,430 --> 00:28:24,360
since more or less a month with the

00:28:20,040 --> 00:28:26,880
release of UCS 3-0 the key features of

00:28:24,360 --> 00:28:30,690
number four in addition to the already

00:28:26,880 --> 00:28:33,210
existing some up three is the whether

00:28:30,690 --> 00:28:37,200
the key changes that it supports Active

00:28:33,210 --> 00:28:39,390
Directory services this is the domain

00:28:37,200 --> 00:28:42,990
technology which is available on Windows

00:28:39,390 --> 00:28:44,940
servers since Windows 2000 so

00:28:42,990 --> 00:28:49,940
effectively since since more than a

00:28:44,940 --> 00:28:53,100
decade one specific feature which is

00:28:49,940 --> 00:28:55,110
quite useful for desktop deployments of

00:28:53,100 --> 00:28:58,710
Windows clients is that it provides

00:28:55,110 --> 00:29:01,020
group policies which allow you to

00:28:58,710 --> 00:29:03,409
figure the behavior and the design and

00:29:01,020 --> 00:29:06,330
the restrictions of a Windows desktop

00:29:03,409 --> 00:29:09,210
through policies which are put into

00:29:06,330 --> 00:29:11,940
effect if a user locks in to one of the

00:29:09,210 --> 00:29:16,620
systems which are joined to this Active

00:29:11,940 --> 00:29:19,799
Directory domain one important factor

00:29:16,620 --> 00:29:21,510
which summer four provides with the key

00:29:19,799 --> 00:29:24,029
feature that it provides Active

00:29:21,510 --> 00:29:26,220
Directory is also that it provides

00:29:24,029 --> 00:29:29,760
compatibility to services requiring

00:29:26,220 --> 00:29:31,590
Active Directory for example if if you

00:29:29,760 --> 00:29:36,390
as an administrator are in the position

00:29:31,590 --> 00:29:40,230
of needing to implement and Microsoft

00:29:36,390 --> 00:29:43,350
Exchange then then Microsoft Exchange

00:29:40,230 --> 00:29:46,770
needs an Active Directory for a sent

00:29:43,350 --> 00:29:50,370
occasion so if you have a domain which

00:29:46,770 --> 00:29:52,740
is currently based on on entirely links

00:29:50,370 --> 00:29:56,640
based systems and you're providing for

00:29:52,740 --> 00:30:00,090
example Windows client support using

00:29:56,640 --> 00:30:02,309
number three and your boss requires you

00:30:00,090 --> 00:30:05,510
to introduce exchange into the near

00:30:02,309 --> 00:30:10,020
future and then you would need to

00:30:05,510 --> 00:30:12,929
install an additional Microsoft Active

00:30:10,020 --> 00:30:14,370
Directory based on Windows Server was um

00:30:12,929 --> 00:30:17,549
before provides you with the necessary

00:30:14,370 --> 00:30:19,830
means and compatibility features to even

00:30:17,549 --> 00:30:22,460
run such services which require Active

00:30:19,830 --> 00:30:26,279
Directory in a purely Linux based domain

00:30:22,460 --> 00:30:28,440
also one important key changes that the

00:30:26,279 --> 00:30:30,870
primary authentication in Active

00:30:28,440 --> 00:30:33,720
Directory is based on Kerberos instead

00:30:30,870 --> 00:30:36,750
of the ole ntlm hashes which were

00:30:33,720 --> 00:30:39,809
insecure and which have many many

00:30:36,750 --> 00:30:43,190
problems and issues on their own one

00:30:39,809 --> 00:30:46,380
important point to consider is that

00:30:43,190 --> 00:30:51,450
there still hasn't been a final release

00:30:46,380 --> 00:30:53,690
of number four we we have done the

00:30:51,450 --> 00:30:56,340
integration of number four in

00:30:53,690 --> 00:30:59,520
cooperation with the companies they an

00:30:56,340 --> 00:31:03,210
edge which is specializing in in summer

00:30:59,520 --> 00:31:06,750
support and which also hires or employs

00:31:03,210 --> 00:31:09,840
many of the many of the the call number

00:31:06,750 --> 00:31:12,029
developers and the

00:31:09,840 --> 00:31:14,400
integration of number four still misses

00:31:12,029 --> 00:31:17,700
a few feature which are provided by

00:31:14,400 --> 00:31:21,240
native Active Directory I'll come to

00:31:17,700 --> 00:31:23,880
that later on but some of the features

00:31:21,240 --> 00:31:25,919
which are missing in a plain native

00:31:23,880 --> 00:31:29,309
number for installation are also

00:31:25,919 --> 00:31:31,740
mitigated by some of the the features we

00:31:29,309 --> 00:31:33,929
provide in UCS like for example the

00:31:31,740 --> 00:31:37,799
listener domain the listener notify a

00:31:33,929 --> 00:31:40,080
domain replication the existing

00:31:37,799 --> 00:31:43,110
limitations of number four at that point

00:31:40,080 --> 00:31:45,570
is that you cannot join Windows domain

00:31:43,110 --> 00:31:47,580
controllers into your domain so you can

00:31:45,570 --> 00:31:50,700
join as many Windows clients as you wish

00:31:47,580 --> 00:31:53,279
but it's not possible to join a Windows

00:31:50,700 --> 00:31:56,880
domain controller the reason for that is

00:31:53,279 --> 00:31:59,250
that there's a share which is called the

00:31:56,880 --> 00:32:02,220
Zeus wall share and it's a share which

00:31:59,250 --> 00:32:04,020
needs to be available on all domain

00:32:02,220 --> 00:32:07,980
controllers of an Active Directory

00:32:04,020 --> 00:32:11,370
domain this this wall shares stores data

00:32:07,980 --> 00:32:12,600
like the the net logon policies or the

00:32:11,370 --> 00:32:17,549
net lock on scripts of the group

00:32:12,600 --> 00:32:19,590
policies and this this replication of

00:32:17,549 --> 00:32:23,760
this Seussville service is not yet

00:32:19,590 --> 00:32:27,630
implemented in samba4 for all the

00:32:23,760 --> 00:32:30,690
servers which are based on on UCS we've

00:32:27,630 --> 00:32:33,990
developed our own replication of this

00:32:30,690 --> 00:32:36,500
wall share but it's not possible to to

00:32:33,990 --> 00:32:40,770
replicate this data to a windows-based

00:32:36,500 --> 00:32:44,549
server also a number four does not

00:32:40,770 --> 00:32:48,120
support forest domains at this point but

00:32:44,549 --> 00:32:52,860
this is actually a feature which usually

00:32:48,120 --> 00:32:55,649
only applies to very old or rather big

00:32:52,860 --> 00:32:57,750
Active Directory installations it's not

00:32:55,649 --> 00:33:01,230
an issue you will run into if you

00:32:57,750 --> 00:33:03,929
provide number four at a well it's a

00:33:01,230 --> 00:33:07,110
typical enterprise if I phrase it like

00:33:03,929 --> 00:33:08,880
that also another issue another feature

00:33:07,110 --> 00:33:11,960
which is not implemented in Samba for

00:33:08,880 --> 00:33:14,730
that point is trust relationships and

00:33:11,960 --> 00:33:19,200
Trust relationships are a feature of

00:33:14,730 --> 00:33:22,230
Windows which allow you to to where so

00:33:19,200 --> 00:33:23,700
where two domains declare that they

00:33:22,230 --> 00:33:25,950
trust each other so you

00:33:23,700 --> 00:33:29,159
a user has authenticated on domain are

00:33:25,950 --> 00:33:31,799
he cannot he can directly use all the

00:33:29,159 --> 00:33:37,679
resources of domain be without a need

00:33:31,799 --> 00:33:40,769
for an additional real education another

00:33:37,679 --> 00:33:43,919
issue which is coming with number four

00:33:40,769 --> 00:33:49,169
is that Active Directory itself is based

00:33:43,919 --> 00:33:52,980
on on El up itself it implements its own

00:33:49,169 --> 00:33:57,269
LDAP directory service so so we have two

00:33:52,980 --> 00:33:59,909
competing a lab services on the one end

00:33:57,269 --> 00:34:03,269
we have the open LDAP servers which is

00:33:59,909 --> 00:34:05,610
part of UCS and on the one hand we have

00:34:03,269 --> 00:34:08,909
the elapsed service which is implemented

00:34:05,610 --> 00:34:12,030
by than before this also brings the

00:34:08,909 --> 00:34:16,200
additional issue that all the windows

00:34:12,030 --> 00:34:18,419
clients expect the Samba fort service or

00:34:16,200 --> 00:34:20,429
the the the Active Directory L of

00:34:18,419 --> 00:34:25,290
service to be running on the standard

00:34:20,429 --> 00:34:30,899
allowed ports so it's 389 for the onion

00:34:25,290 --> 00:34:34,440
for the unencrypted Ella and six six six

00:34:30,899 --> 00:34:39,179
hundred thirty-six for the TLS secured a

00:34:34,440 --> 00:34:41,250
variety of of El up and you cannot

00:34:39,179 --> 00:34:44,040
really change that because all the

00:34:41,250 --> 00:34:47,040
windows clients do not have the means to

00:34:44,040 --> 00:34:49,050
configure the port they access and they

00:34:47,040 --> 00:34:51,899
require that port when they're trying to

00:34:49,050 --> 00:34:56,149
join the domain for that we've changed

00:34:51,899 --> 00:35:00,470
our open l observer to to run on

00:34:56,149 --> 00:35:04,079
distinct ports than the standard port so

00:35:00,470 --> 00:35:06,270
basically it's the standard the standard

00:35:04,079 --> 00:35:08,940
number with an additional seven thousand

00:35:06,270 --> 00:35:11,220
added to it and we've modified all the

00:35:08,940 --> 00:35:14,819
services of you know mention corporate

00:35:11,220 --> 00:35:17,819
server to directly use these different

00:35:14,819 --> 00:35:21,569
ports and we've developed a

00:35:17,819 --> 00:35:23,940
synchronization service between the LDAP

00:35:21,569 --> 00:35:27,720
service in Samba for and the LDAP

00:35:23,940 --> 00:35:29,369
service and of the standard UCS based on

00:35:27,720 --> 00:35:32,460
open-air lab which is called the

00:35:29,369 --> 00:35:34,770
Univision as for connector it does be

00:35:32,460 --> 00:35:39,359
directional synchronization of the two

00:35:34,770 --> 00:35:41,520
lab services so if you are running UCS

00:35:39,359 --> 00:35:43,290
with number four you can create a user

00:35:41,520 --> 00:35:45,510
proof in the Active Directory user

00:35:43,290 --> 00:35:47,849
management and also in the youth

00:35:45,510 --> 00:35:56,160
intervention management console as part

00:35:47,849 --> 00:35:58,700
of the open air lab data and the

00:35:56,160 --> 00:36:00,930
integration of file and print services

00:35:58,700 --> 00:36:03,210
is also something which needs to be

00:36:00,930 --> 00:36:08,180
considered when implementing or

00:36:03,210 --> 00:36:11,430
integrating Samba for with UCS you have

00:36:08,180 --> 00:36:15,270
you have two possibilities you can

00:36:11,430 --> 00:36:17,670
either use the server which does not

00:36:15,270 --> 00:36:19,319
have which is called a member server in

00:36:17,670 --> 00:36:21,630
the Windows terminology which is a

00:36:19,319 --> 00:36:25,710
server which does not provide domain

00:36:21,630 --> 00:36:28,200
controller functionality and for these

00:36:25,710 --> 00:36:30,180
member servers we still use some of

00:36:28,200 --> 00:36:33,410
three because they don't need I'll

00:36:30,180 --> 00:36:36,420
require or implement any of the services

00:36:33,410 --> 00:36:38,790
which require Active Directory so we

00:36:36,420 --> 00:36:41,609
just used the standard very robust and

00:36:38,790 --> 00:36:45,329
very feature problem number three

00:36:41,609 --> 00:36:48,030
release and there's also if you want to

00:36:45,329 --> 00:36:51,450
provide file and print services based on

00:36:48,030 --> 00:36:55,619
the number four and then there's the the

00:36:51,450 --> 00:36:58,619
additional setup that there's a the smbd

00:36:55,619 --> 00:37:01,319
service the SMB deep process from number

00:36:58,619 --> 00:37:04,730
three is running in addition to the

00:37:01,319 --> 00:37:06,990
number two those number four demons and

00:37:04,730 --> 00:37:08,700
it's been configured so that

00:37:06,990 --> 00:37:12,319
authentication is directly passed

00:37:08,700 --> 00:37:19,020
through the reason for that is that

00:37:12,319 --> 00:37:22,770
samba for started to implement the the

00:37:19,020 --> 00:37:25,589
the five services in a new

00:37:22,770 --> 00:37:29,280
implementation but at that at some point

00:37:25,589 --> 00:37:31,470
they they decided to stop with this

00:37:29,280 --> 00:37:35,040
effort and now it's only available for

00:37:31,470 --> 00:37:38,010
debugging purposes and this kind of

00:37:35,040 --> 00:37:40,230
setup which is outlined in the second

00:37:38,010 --> 00:37:43,170
point is actually something which will

00:37:40,230 --> 00:37:45,300
probably be the default way of providing

00:37:43,170 --> 00:37:48,770
file imprint services when there's a

00:37:45,300 --> 00:37:48,770
final release of number four

00:37:49,290 --> 00:37:55,140
another issue which arises if you use

00:37:51,240 --> 00:37:58,020
number four is that Active Directory is

00:37:55,140 --> 00:38:01,020
tightly coupled with DNS you definitely

00:37:58,020 --> 00:38:05,130
need DNS services in your domain to

00:38:01,020 --> 00:38:08,880
deploy Active Directory for that reason

00:38:05,130 --> 00:38:13,680
we've updated our bind to version 9.8

00:38:08,880 --> 00:38:16,410
and since this version provides support

00:38:13,680 --> 00:38:20,460
for dynamic global zones which are a

00:38:16,410 --> 00:38:23,850
feature where Zomba so in that case

00:38:20,460 --> 00:38:28,920
we've modified the point so that all the

00:38:23,850 --> 00:38:33,680
DNS data is stored in Samba for and bind

00:38:28,920 --> 00:38:37,380
only uses number for s as the backend to

00:38:33,680 --> 00:38:40,880
to deliver all the devii DNS requests

00:38:37,380 --> 00:38:40,880
which are being sent to the server

00:38:41,540 --> 00:38:47,550
another feature which is offered by the

00:38:45,810 --> 00:38:50,220
Umbra force that it supports group

00:38:47,550 --> 00:38:52,910
policies all these group policies are

00:38:50,220 --> 00:38:55,680
edited with the standard Windows tools

00:38:52,910 --> 00:38:58,670
so you use the the administrator would

00:38:55,680 --> 00:39:02,700
use the standard group policy editor and

00:38:58,670 --> 00:39:05,280
the license of this this editors is just

00:39:02,700 --> 00:39:07,290
bound to the Windows client license

00:39:05,280 --> 00:39:09,870
which you would need anyway if you

00:39:07,290 --> 00:39:12,480
provide Windows client services you do

00:39:09,870 --> 00:39:15,540
not need a license of Windows Server to

00:39:12,480 --> 00:39:21,240
to run or execute or use any of these

00:39:15,540 --> 00:39:23,910
group policy management tools okay we

00:39:21,240 --> 00:39:25,920
have collected a few sources of

00:39:23,910 --> 00:39:28,980
additional information and the list of

00:39:25,920 --> 00:39:31,710
our bugzilla if you have any questions

00:39:28,980 --> 00:39:34,080
I'd be happy to answer them I'll be

00:39:31,710 --> 00:39:37,850
supposed to use a mic I think so I'll

00:39:34,080 --> 00:39:37,850
just hand this to you

00:39:41,700 --> 00:39:45,870
I'm not sure where this when it or not

00:40:01,920 --> 00:40:08,500
yes this this summer as for connectors

00:40:05,410 --> 00:40:10,450
actually based on a tool which we are

00:40:08,500 --> 00:40:13,930
already at which I haven't mentioned in

00:40:10,450 --> 00:40:16,360
this slide but which we provide as part

00:40:13,930 --> 00:40:18,850
of UCS for several years which is called

00:40:16,360 --> 00:40:21,730
the Univision active that to reconnect

00:40:18,850 --> 00:40:23,650
or this was a solution where you could

00:40:21,730 --> 00:40:26,140
synchronize an active directory eternal

00:40:23,650 --> 00:40:28,380
may love it works that way that that

00:40:26,140 --> 00:40:31,000
there's a configure inter well interval

00:40:28,380 --> 00:40:33,400
in the standard I think it's three or

00:40:31,000 --> 00:40:36,820
four seconds so every three or four

00:40:33,400 --> 00:40:39,280
seconds it it curries they the other

00:40:36,820 --> 00:40:41,410
directory service and it does the

00:40:39,280 --> 00:40:44,320
matching of the last changes with these

00:40:41,410 --> 00:40:46,540
us ends the unique serial numbers which

00:40:44,320 --> 00:40:48,700
are increased whenever there's a change

00:40:46,540 --> 00:40:50,230
in either the open l up directory

00:40:48,700 --> 00:40:52,950
service or they the active directory

00:40:50,230 --> 00:40:52,950
service

00:41:15,839 --> 00:41:22,619
yes and if you use the the old solution

00:41:20,170 --> 00:41:26,289
so the you know mention Active Directory

00:41:22,619 --> 00:41:28,959
connector which mapped both which mapped

00:41:26,289 --> 00:41:32,049
in Active Directory and the open-air lab

00:41:28,959 --> 00:41:34,749
service then at that point you needed to

00:41:32,049 --> 00:41:36,789
install a passport service which we

00:41:34,749 --> 00:41:38,799
provide which is called the UCS passport

00:41:36,789 --> 00:41:40,719
service and which you need to need to

00:41:38,799 --> 00:41:44,229
install on the Active Directory server

00:41:40,719 --> 00:41:47,979
but in this setup this is no longer

00:41:44,229 --> 00:41:50,499
needed because the the the primary

00:41:47,979 --> 00:41:53,189
authentication needs is the Kerberos key

00:41:50,499 --> 00:41:56,589
and for that we don't need an additional

00:41:53,189 --> 00:41:59,559
synchronization internally we we map all

00:41:56,589 --> 00:42:01,420
the various password types internally so

00:41:59,559 --> 00:42:03,759
if you're changing your password in

00:42:01,420 --> 00:42:05,229
Kerberos for example it directly gets

00:42:03,759 --> 00:42:08,189
mapped to the respective windows

00:42:05,229 --> 00:42:08,189
possible for us

00:42:16,150 --> 00:42:21,410
yes you can you can configure the you

00:42:19,310 --> 00:42:27,380
can configure the password complexity as

00:42:21,410 --> 00:42:30,760
part of the user management tool yes I

00:42:27,380 --> 00:42:34,160
think he was a bit earlier so country

00:42:30,760 --> 00:42:37,280
I'm too interested in the connector yes

00:42:34,160 --> 00:42:40,460
is it connector on independently of the

00:42:37,280 --> 00:42:43,550
whole stack of invention like the

00:42:40,460 --> 00:42:46,280
separate software you have an open hold

00:42:43,550 --> 00:42:49,730
up and the next directory yes

00:42:46,280 --> 00:42:51,740
and it's it's somehow coupled to other

00:42:49,730 --> 00:42:55,640
universe tools but you could hack around

00:42:51,740 --> 00:42:58,190
that I think for once it it thought it

00:42:55,640 --> 00:43:00,140
configures its own configuration data

00:42:58,190 --> 00:43:02,540
with this univariant configuration

00:43:00,140 --> 00:43:06,800
registry mechanism I I mentioned earlier

00:43:02,540 --> 00:43:09,890
but it should be possible to work around

00:43:06,800 --> 00:43:12,920
it and just use the the the local

00:43:09,890 --> 00:43:17,980
configuration file and you would also

00:43:12,920 --> 00:43:20,900
need because the the changes made to the

00:43:17,980 --> 00:43:23,720
to the local opinel observer are

00:43:20,900 --> 00:43:25,700
transferred using the a you know

00:43:23,720 --> 00:43:29,690
mentioned director listener module so

00:43:25,700 --> 00:43:32,390
this is also part of the but if you want

00:43:29,690 --> 00:43:34,520
to try it on a on a non UCS systems it

00:43:32,390 --> 00:43:38,000
should be doable it's it's all it's

00:43:34,520 --> 00:43:39,830
written in Python primarily and you can

00:43:38,000 --> 00:43:46,250
fetch the sauce from GPL

00:43:39,830 --> 00:43:48,550
yes it's GPL Thanks could you pass on

00:43:46,250 --> 00:43:48,550
them

00:43:51,020 --> 00:43:59,630
how do you handle security updates UCS

00:43:55,040 --> 00:44:01,820
2.4 is supported until the end of 2013 I

00:43:59,630 --> 00:44:04,790
think and by that time Debbie and Lenny

00:44:01,820 --> 00:44:07,430
will already be out of support and yes

00:44:04,790 --> 00:44:09,710
we and even think of packages like PHP

00:44:07,430 --> 00:44:11,900
your shipping five point two point

00:44:09,710 --> 00:44:14,960
something six that Debian is shipping

00:44:11,900 --> 00:44:17,720
it's even out of support by PHP app

00:44:14,960 --> 00:44:19,250
stream yes but they were following we're

00:44:17,720 --> 00:44:21,530
following the the Debian policy of

00:44:19,250 --> 00:44:24,200
extracting and backporting security

00:44:21,530 --> 00:44:28,970
fixes with that and when the support for

00:44:24,200 --> 00:44:30,920
for lenny ends will effectively roll our

00:44:28,970 --> 00:44:33,080
own security updates we have the

00:44:30,920 --> 00:44:36,410
necessary knowledge in-house its

00:44:33,080 --> 00:44:38,900
standing in front of you since I'm

00:44:36,410 --> 00:44:42,620
already part of the Debian security team

00:44:38,900 --> 00:44:45,260
I know the internal procedures and

00:44:42,620 --> 00:44:52,580
details so this is this is not an issue

00:44:45,260 --> 00:44:54,350
with us so they no further questions I

00:44:52,580 --> 00:44:56,120
think we've managed the time pretty

00:44:54,350 --> 00:44:59,540
nicely and there's only one minute left

00:44:56,120 --> 00:45:01,880
so thanks everyone for visiting and if

00:44:59,540 --> 00:45:03,860
you want to try it out just follow one

00:45:01,880 --> 00:45:06,500
and if these I think the slides will be

00:45:03,860 --> 00:45:08,210
I think I sent them to forced him or I

00:45:06,500 --> 00:45:10,190
should send them I'm not sure but I

00:45:08,210 --> 00:45:13,720
think they'll be available on the

00:45:10,190 --> 00:45:13,720

YouTube URL: https://www.youtube.com/watch?v=QSewFAvjs6I


