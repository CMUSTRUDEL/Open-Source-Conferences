Title: Arthur Huillet   Anatomy of a role playing game
Publication date: 2013-02-05
Playlist: FOSDEM 2012
Description: 
	FOSDEM (Free and Open Source Development European Meeting) is a European event centered around Free and Open Source software development. It is aimed at developers and all interested in the Free and Open Source news in the world. Its goals are to enable developers to meet and to promote the awareness and use of free and open source software. More info at http://fosdem.org
Captions: 
	00:00:00,709 --> 00:00:08,400
okay hello everyone my name is Acharya

00:00:05,250 --> 00:00:10,980
and I'm going to explain to you how a

00:00:08,400 --> 00:00:13,110
role-playing game is written so I'm

00:00:10,980 --> 00:00:14,519
going to speak about Frigidaire PG which

00:00:13,110 --> 00:00:16,109
is again that I know very well because

00:00:14,519 --> 00:00:19,770
I'm the lead developer and I have been

00:00:16,109 --> 00:00:21,390
for seven years first of all I'm going

00:00:19,770 --> 00:00:23,460
to show you the game so that you get a

00:00:21,390 --> 00:00:25,800
good grasp of what exactly we are

00:00:23,460 --> 00:00:27,990
talking about and then I'm going to

00:00:25,800 --> 00:00:31,969
explain the software architecture of

00:00:27,990 --> 00:00:34,230
your PG what are the big components and

00:00:31,969 --> 00:00:37,620
what are the big things that you have to

00:00:34,230 --> 00:00:39,120
write if you do a game like this then

00:00:37,620 --> 00:00:41,670
I'm going to be a bit more technical

00:00:39,120 --> 00:00:43,950
because I want to explain a few of the

00:00:41,670 --> 00:00:46,469
good decisions that we made and also I

00:00:43,950 --> 00:00:48,690
will show a bad decision that we made I

00:00:46,469 --> 00:00:50,850
will explain why it why we why it was a

00:00:48,690 --> 00:00:53,059
problem and why it is difficult to fix a

00:00:50,850 --> 00:00:57,660
few years after the decision was made

00:00:53,059 --> 00:01:00,600
and okay let's start with the game so

00:00:57,660 --> 00:01:04,799
fritter the RPG this is a game that

00:01:00,600 --> 00:01:07,350
tells the story of world destroyed by

00:01:04,799 --> 00:01:11,060
conflict between robots and their former

00:01:07,350 --> 00:01:14,549
masters we're in the year

00:01:11,060 --> 00:01:16,140
2154 and the humans have been building a

00:01:14,549 --> 00:01:18,960
lot of were BOTS to help them around

00:01:16,140 --> 00:01:21,390
with many things in life and all of

00:01:18,960 --> 00:01:23,369
those robots were built by a monopoly

00:01:21,390 --> 00:01:27,030
company and they were using a

00:01:23,369 --> 00:01:29,009
proprietary operating system so there

00:01:27,030 --> 00:01:30,930
were a lot of security problems and one

00:01:29,009 --> 00:01:34,079
day something happens and the robots

00:01:30,930 --> 00:01:36,060
started destroying everything so you

00:01:34,079 --> 00:01:37,680
play your wakes up in the middle of this

00:01:36,060 --> 00:01:41,009
world and you have to understand what's

00:01:37,680 --> 00:01:42,899
going on and try to help now technically

00:01:41,009 --> 00:01:46,619
this is an isometric 3d world playing

00:01:42,899 --> 00:01:49,229
game we mix real-time action so similar

00:01:46,619 --> 00:01:50,790
to Diablo for doesn't know it you can

00:01:49,229 --> 00:01:53,610
fight the robots with many different

00:01:50,790 --> 00:01:56,369
ways and we have welding in which we do

00:01:53,610 --> 00:01:57,840
through dialogues so we you have to talk

00:01:56,369 --> 00:01:59,729
to a character or the character tells

00:01:57,840 --> 00:02:01,409
you something and you have to click a

00:01:59,729 --> 00:02:03,180
choice of options for what your

00:02:01,409 --> 00:02:06,090
character is going to say and this makes

00:02:03,180 --> 00:02:09,680
you able to choose really what but first

00:02:06,090 --> 00:02:09,680
we want to you want to play

00:02:10,080 --> 00:02:14,490
in terms of simple facts the game is

00:02:12,750 --> 00:02:17,190
fully playable and has been for about

00:02:14,490 --> 00:02:21,210
four or five years we work on as many

00:02:17,190 --> 00:02:23,220
platforms as we can it will give you a

00:02:21,210 --> 00:02:25,410
good full weekend of entertainment

00:02:23,220 --> 00:02:28,800
perhaps more it depends how many of the

00:02:25,410 --> 00:02:31,500
side quests you want to do we have a lot

00:02:28,800 --> 00:02:34,560
of characters and we have we try to have

00:02:31,500 --> 00:02:36,600
very rich dialogues so you have a lot to

00:02:34,560 --> 00:02:38,400
to read you have a lot to say and you

00:02:36,600 --> 00:02:40,530
can replay the game and choose different

00:02:38,400 --> 00:02:41,270
options and it will be a bit of a

00:02:40,530 --> 00:02:45,000
different game

00:02:41,270 --> 00:02:47,010
we've got original music and our do note

00:02:45,000 --> 00:02:49,230
statistics will make some of you smile

00:02:47,010 --> 00:02:52,080
because it's not huge but on the other

00:02:49,230 --> 00:02:55,160
hand it's also we believe the symbol of

00:02:52,080 --> 00:02:57,270
a significant audience we don't have

00:02:55,160 --> 00:02:58,350
we're not one of the biggest

00:02:57,270 --> 00:02:59,910
role-playing

00:02:58,350 --> 00:03:02,550
or one of the biggest free software

00:02:59,910 --> 00:03:05,040
games but we are amongst the biggest

00:03:02,550 --> 00:03:09,600
world playing games in the interface

00:03:05,040 --> 00:03:12,360
software world so I've prepared a small

00:03:09,600 --> 00:03:14,010
demo video it's going to be a bit

00:03:12,360 --> 00:03:16,580
redundant for those worried of the last

00:03:14,010 --> 00:03:21,210
quarter of it never mind

00:03:16,580 --> 00:03:23,070
okay this video was made a few years ago

00:03:21,210 --> 00:03:27,450
when I gave a presentation at first in

00:03:23,070 --> 00:03:31,620
2009 most of the futures of the games on

00:03:27,450 --> 00:03:33,600
this system this is a mini game that you

00:03:31,620 --> 00:03:35,370
can use that we will turn the enemies on

00:03:33,600 --> 00:03:48,540
your side so you can use it to hack

00:03:35,370 --> 00:03:50,220
robots and they will fight for you you

00:03:48,540 --> 00:03:51,900
have some pretty stupid options you can

00:03:50,220 --> 00:03:53,940
say I'm here to assassinate your leader

00:03:51,900 --> 00:03:56,100
and your game will end pretty quickly

00:03:53,940 --> 00:03:58,200
after that you will be the wrong option

00:03:56,100 --> 00:04:00,350
you can you can get to game over very

00:03:58,200 --> 00:04:00,350
quickly

00:04:12,569 --> 00:04:20,579
you know you can revitalize energy when

00:04:15,959 --> 00:04:20,579
run viruses on enemy twice

00:04:52,949 --> 00:04:56,819
so I suspect most people they are how

00:04:54,900 --> 00:04:58,949
many are with this kind of game today

00:04:56,819 --> 00:05:00,569
you have a set of statistics that you

00:04:58,949 --> 00:05:02,340
can increase when you get a new level so

00:05:00,569 --> 00:05:04,379
you kill God's you get to experience

00:05:02,340 --> 00:05:08,120
points and let's give you the ability to

00:05:04,379 --> 00:05:08,120
improve your character in certain areas

00:05:18,259 --> 00:05:26,939
okay we've seen the game now our goals

00:05:23,580 --> 00:05:29,400
are as a game project the first one is

00:05:26,939 --> 00:05:32,219
that we want to be enjoyable by everyone

00:05:29,400 --> 00:05:34,289
so this means that we want the game to

00:05:32,219 --> 00:05:36,180
be rich enough to be entertaining to

00:05:34,289 --> 00:05:39,599
adults but we also want the game to be

00:05:36,180 --> 00:05:41,509
playable by children which we do with a

00:05:39,599 --> 00:05:44,610
very distinctive graphic style which

00:05:41,509 --> 00:05:47,159
naturally gets children interested in

00:05:44,610 --> 00:05:51,240
the game but this is not strictly a kids

00:05:47,159 --> 00:05:53,249
game we want to work on as many of the

00:05:51,240 --> 00:05:55,469
machines out there so this goes from

00:05:53,249 --> 00:05:58,770
your computer that you had 15 years ago

00:05:55,469 --> 00:06:01,229
to what you have now and we are

00:05:58,770 --> 00:06:03,060
definitely a single-player game we don't

00:06:01,229 --> 00:06:06,080
have plans for multiplayer right now we

00:06:03,060 --> 00:06:08,819
really want to gather two single players

00:06:06,080 --> 00:06:13,050
now a quick history of the project so

00:06:08,819 --> 00:06:16,490
the game was started in 2002 I took

00:06:13,050 --> 00:06:18,719
charge in 2004 and we introduced

00:06:16,490 --> 00:06:20,849
translations because we have a

00:06:18,719 --> 00:06:23,009
significant volume of dialogue so we've

00:06:20,849 --> 00:06:24,810
got a lot of text we decided to

00:06:23,009 --> 00:06:28,620
introduce translations in order to widen

00:06:24,810 --> 00:06:30,409
our audience in 2007 and it was not very

00:06:28,620 --> 00:06:34,589
good idea because it was too early

00:06:30,409 --> 00:06:36,750
so in 2009 I gave a first presentation

00:06:34,589 --> 00:06:39,360
here and at the end of the year we

00:06:36,750 --> 00:06:41,250
noticed that the translations were too

00:06:39,360 --> 00:06:43,439
much of a maintenance burden because the

00:06:41,250 --> 00:06:45,000
dialogues were changing too much so we

00:06:43,439 --> 00:06:46,860
had to remove them and we have not

00:06:45,000 --> 00:06:51,240
screwed them back as of yet and this is

00:06:46,860 --> 00:06:53,520
perhaps the biggest the biggest problem

00:06:51,240 --> 00:06:57,089
with twittered LPG today is that if you

00:06:53,520 --> 00:06:59,039
do not read English you can apply it we

00:06:57,089 --> 00:07:01,860
had our first Google Summer of Code

00:06:59,039 --> 00:07:03,169
experience with three students two years

00:07:01,860 --> 00:07:05,780
ago

00:07:03,169 --> 00:07:07,520
and right after it we made a new release

00:07:05,780 --> 00:07:11,150
to integrate all the work of those

00:07:07,520 --> 00:07:13,400
students so we went from a team of about

00:07:11,150 --> 00:07:15,110
five people to a team of ten but then

00:07:13,400 --> 00:07:17,270
it's Ries oft where it depends on the

00:07:15,110 --> 00:07:19,099
availability of everyone so at any given

00:07:17,270 --> 00:07:24,169
point in time with like three people

00:07:19,099 --> 00:07:26,360
active we took part in google Summer of

00:07:24,169 --> 00:07:29,840
Code again last years so this time we

00:07:26,360 --> 00:07:32,210
had four students this time we made a

00:07:29,840 --> 00:07:36,440
lot of improvements to work on the new

00:07:32,210 --> 00:07:38,840
platforms so the the the graphical user

00:07:36,440 --> 00:07:41,539
interface refactoring was useful because

00:07:38,840 --> 00:07:43,699
up to now freed up he was only playable

00:07:41,539 --> 00:07:45,590
on screens that had a ratio of four by

00:07:43,699 --> 00:07:47,690
three which was the case ten years ago

00:07:45,590 --> 00:07:51,319
all of the screens are worth four by

00:07:47,690 --> 00:07:53,719
three but now this is 1610 and most of

00:07:51,319 --> 00:07:56,599
the most of the computers today have

00:07:53,719 --> 00:07:58,610
very special ratios so we were unable to

00:07:56,599 --> 00:08:00,560
present our graphical user interface

00:07:58,610 --> 00:08:02,840
correctly was completely distorted so

00:08:00,560 --> 00:08:05,539
this was the work this was the main

00:08:02,840 --> 00:08:07,729
point of the work of this summer and we

00:08:05,539 --> 00:08:13,460
made a really is recently to integrate

00:08:07,729 --> 00:08:18,860
all those all of those changes okay so

00:08:13,460 --> 00:08:21,050
you know what the game is now I'm going

00:08:18,860 --> 00:08:24,440
to explain how it's how it's written how

00:08:21,050 --> 00:08:26,810
it's built so the first thing I want to

00:08:24,440 --> 00:08:29,569
talk about the game world all video

00:08:26,810 --> 00:08:31,669
games are about the simulation of a

00:08:29,569 --> 00:08:33,890
virtual world now you have seen the

00:08:31,669 --> 00:08:35,690
world and the first thing that you need

00:08:33,890 --> 00:08:37,849
to simulate a world like this is a way

00:08:35,690 --> 00:08:40,070
to locate objects in this world so you

00:08:37,849 --> 00:08:41,510
need a coordinate system in an isometric

00:08:40,070 --> 00:08:45,230
all playing game you have this typical

00:08:41,510 --> 00:08:47,600
coordinate system and you will use it to

00:08:45,230 --> 00:08:49,550
locate all of the elements the first

00:08:47,600 --> 00:08:51,860
object that frigerator peih-gee uses are

00:08:49,550 --> 00:08:54,949
the floor tiles the floor tiles are

00:08:51,860 --> 00:08:57,199
purely graphical elements they are the

00:08:54,949 --> 00:08:59,180
decorations on the floor but they do not

00:08:57,199 --> 00:09:01,339
have a physical presence in the in the

00:08:59,180 --> 00:09:03,140
virtual world so each of the squares

00:09:01,339 --> 00:09:05,990
that you see here on the checkerboard

00:09:03,140 --> 00:09:07,490
represents one floor tile and the floor

00:09:05,990 --> 00:09:12,560
is completely covered with them to

00:09:07,490 --> 00:09:14,879
decorate the rooms now we have a second

00:09:12,560 --> 00:09:18,519
kind of object which is

00:09:14,879 --> 00:09:20,410
obstacles obstacles they are the

00:09:18,519 --> 00:09:22,959
elements in the game that have the

00:09:20,410 --> 00:09:24,970
ability to block the way from one point

00:09:22,959 --> 00:09:26,589
to another so they have graphics and

00:09:24,970 --> 00:09:28,119
they have a physical presence which the

00:09:26,589 --> 00:09:31,059
throttles don't have they occupy a

00:09:28,119 --> 00:09:32,439
volume we have defined I I don't show it

00:09:31,059 --> 00:09:34,779
here but we have defined what we call a

00:09:32,439 --> 00:09:37,239
collision rectangle which is the space

00:09:34,779 --> 00:09:41,079
on the ground that is blocked by the

00:09:37,239 --> 00:09:43,869
obstacle the obstacles are unable to

00:09:41,079 --> 00:09:46,029
move but they can react to external

00:09:43,869 --> 00:09:47,829
action so for example this is a door and

00:09:46,029 --> 00:09:51,069
when I get close to it it will

00:09:47,829 --> 00:09:52,839
automatically open all you can see here

00:09:51,069 --> 00:09:58,660
are obstacles so you have walls but you

00:09:52,839 --> 00:10:01,089
also have all the furniture here you can

00:09:58,660 --> 00:10:03,069
see the flow tiles and the obstacles so

00:10:01,089 --> 00:10:06,129
this is the base world and on top of

00:10:03,069 --> 00:10:09,100
that we add the notion of actors an

00:10:06,129 --> 00:10:10,989
actor is simply an element which has

00:10:09,100 --> 00:10:13,779
graphics a physical presence and the

00:10:10,989 --> 00:10:16,439
ability to initiate actions in the world

00:10:13,779 --> 00:10:20,170
so you have the player here and to

00:10:16,439 --> 00:10:21,999
artificial intelligence characters they

00:10:20,170 --> 00:10:23,730
have the ability to move they have the

00:10:21,999 --> 00:10:25,929
ability to attack they can initiate

00:10:23,730 --> 00:10:28,720
dialogues they can interact with

00:10:25,929 --> 00:10:31,269
obstacle for example you can connect

00:10:28,720 --> 00:10:33,610
through a computer terminal and so on so

00:10:31,269 --> 00:10:37,509
this is what actors are for and now we

00:10:33,610 --> 00:10:39,549
have a lot more small elements which are

00:10:37,509 --> 00:10:41,740
not very relevant here so for example we

00:10:39,549 --> 00:10:42,819
have bullets because they are not really

00:10:41,740 --> 00:10:44,649
an actor they're not really an obstacle

00:10:42,819 --> 00:10:47,619
we have bullets we know explosions

00:10:44,649 --> 00:10:49,209
separately we've got dropped items so

00:10:47,619 --> 00:10:51,339
when you kill a character it will drop

00:10:49,209 --> 00:10:52,990
what it's wearing so you have items on

00:10:51,339 --> 00:10:55,600
the ground that you can then pick up and

00:10:52,990 --> 00:10:57,399
we have events so events are not visible

00:10:55,600 --> 00:10:59,499
they are the only elements that I'm

00:10:57,399 --> 00:11:03,009
introducing here which does not have

00:10:59,499 --> 00:11:05,230
graphics the events they are for example

00:11:03,009 --> 00:11:06,999
here I can place an even trigger which

00:11:05,230 --> 00:11:09,279
means that when I will walk on this

00:11:06,999 --> 00:11:10,809
floor tile it will do something it will

00:11:09,279 --> 00:11:12,790
trigger a piece of script so for example

00:11:10,809 --> 00:11:15,100
you can use it to do traps to walk in a

00:11:12,790 --> 00:11:16,689
room you work on the front tile which

00:11:15,100 --> 00:11:18,209
has the event and he closes the door

00:11:16,689 --> 00:11:21,519
behind you

00:11:18,209 --> 00:11:24,339
with all those elements you have the

00:11:21,519 --> 00:11:26,230
main the main thing the main things does

00:11:24,339 --> 00:11:27,240
that can enable you to to do for the

00:11:26,230 --> 00:11:30,220
pitch

00:11:27,240 --> 00:11:33,850
now let's take a while your why to look

00:11:30,220 --> 00:11:36,040
and see how what are the big modules

00:11:33,850 --> 00:11:38,350
what are the big parts that make that

00:11:36,040 --> 00:11:40,120
make feature there

00:11:38,350 --> 00:11:42,580
I've laid them out in three categories

00:11:40,120 --> 00:11:46,450
the first one are what I call the action

00:11:42,580 --> 00:11:49,420
modules we have three ways of acting

00:11:46,450 --> 00:11:51,400
those are the pieces of codes that do

00:11:49,420 --> 00:11:53,560
something on the virtual world so the

00:11:51,400 --> 00:11:54,910
first thing is the user inputs quite

00:11:53,560 --> 00:11:56,440
obviously you have to read the mouse you

00:11:54,910 --> 00:11:58,090
have to read the keyboard and you can

00:11:56,440 --> 00:12:00,220
use that for example if you click there

00:11:58,090 --> 00:12:02,440
my character will go there this is the

00:12:00,220 --> 00:12:04,300
first kind of action that you can do the

00:12:02,440 --> 00:12:06,280
second is the artificial intelligence

00:12:04,300 --> 00:12:09,300
this is what drives all of the actors

00:12:06,280 --> 00:12:12,040
which are not the player this is a

00:12:09,300 --> 00:12:13,930
finite state automaton that makes the

00:12:12,040 --> 00:12:16,360
decision and moves around and attacks

00:12:13,930 --> 00:12:18,610
and so on and we have a scripting

00:12:16,360 --> 00:12:21,550
interface which is used as I've said for

00:12:18,610 --> 00:12:23,830
example for events so it's the Third Way

00:12:21,550 --> 00:12:25,960
which is a bit less obvious too to

00:12:23,830 --> 00:12:27,820
interact with the engine you can create

00:12:25,960 --> 00:12:30,670
obstacles you can see that obstacles you

00:12:27,820 --> 00:12:32,140
can spawn new robots you can change just

00:12:30,670 --> 00:12:35,680
whatever you want with the scripting

00:12:32,140 --> 00:12:38,950
interface now you have the ways of of

00:12:35,680 --> 00:12:41,320
acting upon the world now the world

00:12:38,950 --> 00:12:43,030
itself has several categories the first

00:12:41,320 --> 00:12:45,910
one on what I call the gameplay rules

00:12:43,030 --> 00:12:50,470
you do not see the rules the rules they

00:12:45,910 --> 00:12:53,830
are implemented but they are they are a

00:12:50,470 --> 00:12:55,870
way to put into numbers a set of rules

00:12:53,830 --> 00:12:58,660
that simulate the world so for example

00:12:55,870 --> 00:13:00,550
we have when you attack a character if

00:12:58,660 --> 00:13:03,070
you strike and you may hit or you may

00:13:00,550 --> 00:13:04,710
miss depending on what kind of harm is

00:13:03,070 --> 00:13:07,660
worrying what kind of item you have

00:13:04,710 --> 00:13:09,610
yourself so we have a set of rules that

00:13:07,660 --> 00:13:11,260
decides whether when you strike you hit

00:13:09,610 --> 00:13:14,140
or not so you roll the dice and you

00:13:11,260 --> 00:13:16,900
compare the values we have an experience

00:13:14,140 --> 00:13:19,510
points mechanism so when you kill enough

00:13:16,900 --> 00:13:21,430
enemies when you do enough quest when

00:13:19,510 --> 00:13:22,780
you talk to someone and manage to get

00:13:21,430 --> 00:13:24,940
him to do something that you didn't want

00:13:22,780 --> 00:13:26,350
to do you are awarded experience points

00:13:24,940 --> 00:13:28,270
when you have enough experience points

00:13:26,350 --> 00:13:30,100
you get a new level and when you get a

00:13:28,270 --> 00:13:33,460
new level you gain the ability to

00:13:30,100 --> 00:13:34,990
improve your character in some way we

00:13:33,460 --> 00:13:38,130
have for example damage rules which

00:13:34,990 --> 00:13:39,360
decide how much damage you deal because

00:13:38,130 --> 00:13:41,790
the virtual world like this you need

00:13:39,360 --> 00:13:43,140
numbers for everything so we have the

00:13:41,790 --> 00:13:45,300
notion of house points all of the

00:13:43,140 --> 00:13:46,980
actions of highest points the earth

00:13:45,300 --> 00:13:48,780
points are number and when you get to

00:13:46,980 --> 00:13:51,120
zero you're dead so you have to decide

00:13:48,780 --> 00:13:54,690
how many house what you remove every

00:13:51,120 --> 00:13:57,420
time something happens this builds all

00:13:54,690 --> 00:14:00,840
the main rules that we use and now you

00:13:57,420 --> 00:14:02,370
have some physical simulation so physics

00:14:00,840 --> 00:14:05,640
are what I should what I shown you just

00:14:02,370 --> 00:14:08,220
just before this is where you define the

00:14:05,640 --> 00:14:09,570
notion of actors or obstacles and so on

00:14:08,220 --> 00:14:11,610
what you need first of all is the

00:14:09,570 --> 00:14:16,620
ability for the actors to move around so

00:14:11,610 --> 00:14:19,320
this is code that says that makes the

00:14:16,620 --> 00:14:22,050
decisions to move to some place give

00:14:19,320 --> 00:14:23,730
based on coordinates and so on and to

00:14:22,050 --> 00:14:25,500
move you need to know what paths are

00:14:23,730 --> 00:14:27,270
going to take because you have a set of

00:14:25,500 --> 00:14:29,370
obstacles then you have actors and you

00:14:27,270 --> 00:14:32,100
want to decide what way you will take so

00:14:29,370 --> 00:14:35,490
for this you need path finding and the

00:14:32,100 --> 00:14:38,340
primitive of bus finding the thing we

00:14:35,490 --> 00:14:40,140
based upon is collision detection I'm

00:14:38,340 --> 00:14:42,060
going to go back on that later because

00:14:40,140 --> 00:14:43,560
we have problems in figure the RPG with

00:14:42,060 --> 00:14:45,750
path training and collision detection

00:14:43,560 --> 00:14:48,480
due to some bad design decisions so I'm

00:14:45,750 --> 00:14:49,350
going to explain in detail why why we're

00:14:48,480 --> 00:14:53,220
not happy with it

00:14:49,350 --> 00:14:55,530
and finally oh yeah we've got some some

00:14:53,220 --> 00:14:57,450
kind of satellites modules they are very

00:14:55,530 --> 00:14:59,490
important in the game itself but for the

00:14:57,450 --> 00:15:01,380
purpose of this talk I don't think

00:14:59,490 --> 00:15:03,840
they're so relevant basically the

00:15:01,380 --> 00:15:07,110
dialogues so the dialogue engine itself

00:15:03,840 --> 00:15:09,000
is very big I don't know how big exactly

00:15:07,110 --> 00:15:10,830
but it's about ten thousand lines of

00:15:09,000 --> 00:15:13,440
codes because we have a very complex

00:15:10,830 --> 00:15:16,500
notion of nodes which trigger all the

00:15:13,440 --> 00:15:18,150
nodes and so the dialogue is a big thing

00:15:16,500 --> 00:15:20,580
but in the main architecture of the game

00:15:18,150 --> 00:15:22,950
it's not so important we have shops so

00:15:20,580 --> 00:15:25,620
you can get items and you can sell them

00:15:22,950 --> 00:15:27,150
to to the people you meet and we have

00:15:25,620 --> 00:15:31,620
events which I've talked about already

00:15:27,150 --> 00:15:33,690
and finally when you have simulated the

00:15:31,620 --> 00:15:35,040
world you have the ability to act upon

00:15:33,690 --> 00:15:36,870
it you need to display it you need to

00:15:35,040 --> 00:15:38,700
present it to the user so what you

00:15:36,870 --> 00:15:40,380
present are two things you present a 3d

00:15:38,700 --> 00:15:42,690
world which is the virtual world that

00:15:40,380 --> 00:15:45,420
you're simulating and you present some

00:15:42,690 --> 00:15:47,430
user interface pieces which are useful

00:15:45,420 --> 00:15:49,290
for example those are the the buttons

00:15:47,430 --> 00:15:49,870
you can click to open up the inventory

00:15:49,290 --> 00:15:53,750
and

00:15:49,870 --> 00:15:55,970
and all of this this way doesn't what I

00:15:53,750 --> 00:15:58,940
call a draw module which to be more

00:15:55,970 --> 00:16:01,910
technical is is a way to abstract the

00:15:58,940 --> 00:16:04,130
rendering API that we use because since

00:16:01,910 --> 00:16:08,840
we want to work on as many platforms as

00:16:04,130 --> 00:16:10,970
possible we need to have the ability to

00:16:08,840 --> 00:16:13,460
target OpenGL on the machines that can

00:16:10,970 --> 00:16:15,800
do it but if you have a laptop that

00:16:13,460 --> 00:16:17,780
cannot do OpenGL if you have an old

00:16:15,800 --> 00:16:19,940
machine with no free software OpenGL

00:16:17,780 --> 00:16:21,470
drivers we also want you to be able to

00:16:19,940 --> 00:16:24,200
play the game so we have an SDI

00:16:21,470 --> 00:16:25,850
rendering mode which uses the CPU it

00:16:24,200 --> 00:16:28,040
doesn't look as good and it's slightly

00:16:25,850 --> 00:16:32,990
slower it consumes also much more power

00:16:28,040 --> 00:16:34,880
but at least the game works so this is

00:16:32,990 --> 00:16:45,730
the full graph of the modules of

00:16:34,880 --> 00:16:45,730
Frigidaire PG now

00:16:47,980 --> 00:16:54,790
I've just talked about it we really

00:16:52,450 --> 00:16:56,350
really care about you being able to play

00:16:54,790 --> 00:16:59,650
the game on whatever machine that you

00:16:56,350 --> 00:17:02,530
have except a few mobile platforms but

00:16:59,650 --> 00:17:04,060
this is another topic so we have to

00:17:02,530 --> 00:17:07,089
provide you with a way of playing the

00:17:04,060 --> 00:17:10,449
game and from the ground up we had this

00:17:07,089 --> 00:17:11,890
kind of dual OpenGL and STL supports but

00:17:10,449 --> 00:17:14,260
it was done in such a way that it was

00:17:11,890 --> 00:17:16,860
very painful to maintain so two years

00:17:14,260 --> 00:17:19,300
ago I set out to rewrite this I

00:17:16,860 --> 00:17:21,940
destroyed all of the rendering code

00:17:19,300 --> 00:17:24,130
included Epogen our world it with an API

00:17:21,940 --> 00:17:26,980
that completely abstract the notion of

00:17:24,130 --> 00:17:29,920
whether you're using STL OpenGL so we

00:17:26,980 --> 00:17:32,680
manipulate what we call images because

00:17:29,920 --> 00:17:35,530
yep we use OpenGL but this is not a 3d

00:17:32,680 --> 00:17:37,810
game we draw exclusively pre-rendered

00:17:35,530 --> 00:17:39,910
sprites so this is an example okay here

00:17:37,810 --> 00:17:42,370
you have obstacles so this is one of my

00:17:39,910 --> 00:17:44,920
obstacles this is what I draw I draw a

00:17:42,370 --> 00:17:47,740
quad with the texture on it and this is

00:17:44,920 --> 00:17:50,290
all we do so we have the ability to do

00:17:47,740 --> 00:17:52,660
this both in OpenGL and that year with

00:17:50,290 --> 00:17:56,110
very good performance in OpenGL so this

00:17:52,660 --> 00:17:58,990
is an example of a texture a class what

00:17:56,110 --> 00:18:00,670
what the way it works is that you put

00:17:58,990 --> 00:18:03,010
all of your obstacles on a single image

00:18:00,670 --> 00:18:05,410
you upload that to a graphics card and

00:18:03,010 --> 00:18:07,660
you set it then you set this as a as a

00:18:05,410 --> 00:18:09,940
texture as one texture and then when you

00:18:07,660 --> 00:18:12,670
draw elements so for example if I want

00:18:09,940 --> 00:18:15,100
to draw a quad made made up of this wall

00:18:12,670 --> 00:18:17,440
and this wall I will just have to pick

00:18:15,100 --> 00:18:20,340
from the same texture and in OpenGL this

00:18:17,440 --> 00:18:23,440
is how you get a lot of efficiency

00:18:20,340 --> 00:18:26,920
especially on the Intel GPUs like on

00:18:23,440 --> 00:18:29,230
this laptop when we did this trick to

00:18:26,920 --> 00:18:32,350
upload all of the elements as a single

00:18:29,230 --> 00:18:34,450
texture we gain through apps a 15 factor

00:18:32,350 --> 00:18:41,140
in terms of performance so this is

00:18:34,450 --> 00:18:43,240
really something you cannot avoid we can

00:18:41,140 --> 00:18:45,580
probably but STL is going to render with

00:18:43,240 --> 00:18:47,050
the CPU and in the end you don't make

00:18:45,580 --> 00:18:49,150
use of the GPU so it's not interesting

00:18:47,050 --> 00:18:53,040
we can do the same thing but this trick

00:18:49,150 --> 00:18:53,040
is not interesting in Sta

00:19:00,880 --> 00:19:05,360
yeah it is but it's much much less

00:19:03,679 --> 00:19:08,510
efficient than OpenGL directly

00:19:05,360 --> 00:19:10,820
the difference is perhaps a four or five

00:19:08,510 --> 00:19:13,580
factor in terms of performance and you

00:19:10,820 --> 00:19:15,230
get your CPU to 100% so really using

00:19:13,580 --> 00:19:17,660
OpenGL directly is very interesting even

00:19:15,230 --> 00:19:22,040
for this kind of operation which I admit

00:19:17,660 --> 00:19:24,410
should be done with STL entirely we

00:19:22,040 --> 00:19:26,929
decided a few years ago to integrate a

00:19:24,410 --> 00:19:28,429
scripting language called the way the

00:19:26,929 --> 00:19:30,410
way is well known in the world of video

00:19:28,429 --> 00:19:32,750
games because it's used by many games

00:19:30,410 --> 00:19:36,140
including commercial games such as World

00:19:32,750 --> 00:19:37,880
of Warcraft and we decided to use it

00:19:36,140 --> 00:19:38,480
because a if everyone is doing it it

00:19:37,880 --> 00:19:41,330
must be good

00:19:38,480 --> 00:19:44,000
and sometimes this kind of reasoning is

00:19:41,330 --> 00:19:46,820
not true but this time it was as the

00:19:44,000 --> 00:19:50,600
earth Louis re is very easy to integrate

00:19:46,820 --> 00:19:52,970
in C here you have a few functions that

00:19:50,600 --> 00:19:54,140
we have in C and each of those function

00:19:52,970 --> 00:19:57,950
are called

00:19:54,140 --> 00:19:59,690
directly by the Lua scripts and the we

00:19:57,950 --> 00:20:02,450
have ridged size of a function like this

00:19:59,690 --> 00:20:05,150
is about 12 lines of C so this means

00:20:02,450 --> 00:20:08,210
that we have an engine written in C and

00:20:05,150 --> 00:20:09,559
we can export the way bindings very very

00:20:08,210 --> 00:20:11,809
easily so anyone you have to add

00:20:09,559 --> 00:20:13,880
something when we have to do new things

00:20:11,809 --> 00:20:16,730
in Lua is very simple so this means that

00:20:13,880 --> 00:20:19,790
the Lua interface become very powerful

00:20:16,730 --> 00:20:21,590
became very powerful very quickly thanks

00:20:19,790 --> 00:20:24,230
to the easiness of integrating the way

00:20:21,590 --> 00:20:27,590
with C and when we decided to do this

00:20:24,230 --> 00:20:30,410
you also gain another advantage is that

00:20:27,590 --> 00:20:32,750
when you use blue a for you config files

00:20:30,410 --> 00:20:34,220
for your dialogues for your scripts you

00:20:32,750 --> 00:20:36,590
don't have to write a parser because

00:20:34,220 --> 00:20:38,809
writing reports are seems easy and it

00:20:36,590 --> 00:20:40,850
seems easy until you make a new decision

00:20:38,809 --> 00:20:43,010
that makes it very difficult so in this

00:20:40,850 --> 00:20:45,669
case we just have to lose lui and it's

00:20:43,010 --> 00:20:45,669
very very good

00:20:46,400 --> 00:20:51,500
finally we have an internal save game

00:20:49,370 --> 00:20:53,390
mechanism because the engine is written

00:20:51,500 --> 00:20:55,460
in C when you are in C you have no way

00:20:53,390 --> 00:20:57,679
of listing the contents of a structure

00:20:55,460 --> 00:20:59,780
so you have to do it by hand not to

00:20:57,679 --> 00:21:02,240
write the code by hand what we have

00:20:59,780 --> 00:21:04,580
actually is a bit of bison script which

00:21:02,240 --> 00:21:06,280
passes the definition of the structures

00:21:04,580 --> 00:21:08,169
and outputs

00:21:06,280 --> 00:21:10,240
code like this like you read underscore

00:21:08,169 --> 00:21:13,350
name of the structure on right so it

00:21:10,240 --> 00:21:18,100
does the saving of the game practically

00:21:13,350 --> 00:21:22,299
automatically now I'd like to keep some

00:21:18,100 --> 00:21:25,960
time to talk about one problem that we

00:21:22,299 --> 00:21:27,520
have we decided to make use of a

00:21:25,960 --> 00:21:32,080
continuous coordinate system for

00:21:27,520 --> 00:21:33,940
obstacles and actors first I'm going to

00:21:32,080 --> 00:21:35,559
explain how collision detection should

00:21:33,940 --> 00:21:37,450
be done and then I'm going to explain

00:21:35,559 --> 00:21:40,000
what we do introduce LPG and why it's

00:21:37,450 --> 00:21:42,250
not so good so this is a representation

00:21:40,000 --> 00:21:44,620
of a grid of an isometric grid where you

00:21:42,250 --> 00:21:47,530
see the player here on the square and

00:21:44,620 --> 00:21:49,240
here you have the world you have a bunch

00:21:47,530 --> 00:21:53,380
of obstacles that are laid out in this

00:21:49,240 --> 00:21:55,000
position so the nice gray squares are

00:21:53,380 --> 00:21:58,059
the floor and this is the wall and the

00:21:55,000 --> 00:21:59,919
little player now we want to answer a

00:21:58,059 --> 00:22:01,720
simple question which is the collision

00:21:59,919 --> 00:22:04,450
detection question in critter there PG

00:22:01,720 --> 00:22:06,850
it is defined as follows I am located at

00:22:04,450 --> 00:22:09,250
Point a I want to go to point B is there

00:22:06,850 --> 00:22:11,559
a direct path the direct path means

00:22:09,250 --> 00:22:13,990
basically is there an obstacle on this

00:22:11,559 --> 00:22:15,580
line once you have this you can build

00:22:13,990 --> 00:22:18,460
path finding because once you have this

00:22:15,580 --> 00:22:21,490
the base path finding algorithm is okay

00:22:18,460 --> 00:22:23,470
is there a collision here yes there is

00:22:21,490 --> 00:22:25,120
so I have to move to neighbor position

00:22:23,470 --> 00:22:29,169
and I check if there is a collision and

00:22:25,120 --> 00:22:30,760
so on until I find a path so the

00:22:29,169 --> 00:22:33,100
collision detection in this case in case

00:22:30,760 --> 00:22:36,909
you have a grid like this it's very easy

00:22:33,100 --> 00:22:38,770
to do simply United will look like this

00:22:36,909 --> 00:22:40,659
so you will browse all of the elements

00:22:38,770 --> 00:22:41,830
that are intersected by the line and for

00:22:40,659 --> 00:22:43,409
each of them you will check whether

00:22:41,830 --> 00:22:45,490
there is an obstacle on them or not

00:22:43,409 --> 00:22:47,260
that's pretty easy you check the first

00:22:45,490 --> 00:22:48,880
one which is the second one and now you

00:22:47,260 --> 00:22:50,980
see that there is a wall so there is a

00:22:48,880 --> 00:22:53,140
collision so the answer to the question

00:22:50,980 --> 00:22:55,390
is no direct path between a and B in

00:22:53,140 --> 00:22:59,830
this case was no and it's very easy to

00:22:55,390 --> 00:23:02,169
do now what's interesting is when you

00:22:59,830 --> 00:23:04,059
get to floating point coordinates when

00:23:02,169 --> 00:23:06,850
you get your obstacles of arbitrary size

00:23:04,059 --> 00:23:08,590
you do a lot of continuous math you do

00:23:06,850 --> 00:23:11,559
love geometry and it's much more

00:23:08,590 --> 00:23:13,539
difficult here you do not have any kind

00:23:11,559 --> 00:23:15,490
of simplification that is possible so

00:23:13,539 --> 00:23:18,250
you have the line you have the obstacles

00:23:15,490 --> 00:23:18,520
with here and here sizes which you do

00:23:18,250 --> 00:23:21,580
not

00:23:18,520 --> 00:23:24,400
which were floating points so you cannot

00:23:21,580 --> 00:23:27,490
lay out a grid and the position here is

00:23:24,400 --> 00:23:29,620
a point while before if you had you

00:23:27,490 --> 00:23:31,540
actor that basically took up the wall

00:23:29,620 --> 00:23:34,300
square now it's no it's really a point

00:23:31,540 --> 00:23:36,790
in in the math sense so the only thing

00:23:34,300 --> 00:23:38,770
you can do is do a lot of vector math to

00:23:36,790 --> 00:23:40,810
decide whether there is a collision you

00:23:38,770 --> 00:23:42,070
will also find exactly where it is even

00:23:40,810 --> 00:23:44,800
though you don't care you will find it

00:23:42,070 --> 00:23:46,600
where it is but you end up doing a lot

00:23:44,800 --> 00:23:48,040
of floating point paths to get an answer

00:23:46,600 --> 00:23:50,440
to something that should have been easy

00:23:48,040 --> 00:23:55,240
and this is what we do in fitter there

00:23:50,440 --> 00:23:56,800
PG so the big thing that you have to see

00:23:55,240 --> 00:23:59,080
here is that the collision detection

00:23:56,800 --> 00:24:00,370
gets much more complicated but also the

00:23:59,080 --> 00:24:03,310
past finding gets much more complicated

00:24:00,370 --> 00:24:05,590
because when you are on a grid you go to

00:24:03,310 --> 00:24:07,570
what is called a neighboring position

00:24:05,590 --> 00:24:10,390
and the neighboring position on a grid

00:24:07,570 --> 00:24:13,240
it's very easy to find one two three

00:24:10,390 --> 00:24:16,540
four five neighbors but when you're here

00:24:13,240 --> 00:24:18,310
you will move by I don't know much I

00:24:16,540 --> 00:24:20,380
don't know how much and if you decide to

00:24:18,310 --> 00:24:22,660
move like this then you're going to miss

00:24:20,380 --> 00:24:24,670
position you're going not to try all of

00:24:22,660 --> 00:24:27,430
the positions which means that in some

00:24:24,670 --> 00:24:30,040
cases you're past finding system in this

00:24:27,430 --> 00:24:33,730
case is going to say there is no path

00:24:30,040 --> 00:24:35,320
between a and B while there is one so

00:24:33,730 --> 00:24:36,700
you will never find the path that isn't

00:24:35,320 --> 00:24:38,710
there but sometimes you will miss

00:24:36,700 --> 00:24:40,810
existing paths and this is a big problem

00:24:38,710 --> 00:24:42,640
because if you have a robot that is

00:24:40,810 --> 00:24:45,280
behind the wall and wants to get to you

00:24:42,640 --> 00:24:47,320
and it looks for a path there is one it

00:24:45,280 --> 00:24:49,780
doesn't find it then the player is going

00:24:47,320 --> 00:24:53,320
to see that something is not it's not

00:24:49,780 --> 00:24:54,820
correct so this is why using a

00:24:53,320 --> 00:24:58,860
continuous coordinate system was not the

00:24:54,820 --> 00:25:01,420
best of ideas the reason why we did it

00:24:58,860 --> 00:25:03,370
was I think what is a very common

00:25:01,420 --> 00:25:06,870
mistake in open source game developments

00:25:03,370 --> 00:25:10,660
we thought it would give more power to

00:25:06,870 --> 00:25:13,360
the map makers and so naturally if it

00:25:10,660 --> 00:25:16,360
gives more power it's better and this is

00:25:13,360 --> 00:25:18,490
completely wrong this is true if it

00:25:16,360 --> 00:25:21,430
doesn't cost you any more but when you

00:25:18,490 --> 00:25:24,820
end up in this kind of situation and you

00:25:21,430 --> 00:25:27,700
notice that one it's the additional

00:25:24,820 --> 00:25:30,640
power was not used at all and two you

00:25:27,700 --> 00:25:32,020
have had birds so for example for five

00:25:30,640 --> 00:25:34,030
years we had brought

00:25:32,020 --> 00:25:35,560
running through walls because of the

00:25:34,030 --> 00:25:37,330
middle because of the incorrect

00:25:35,560 --> 00:25:39,220
collision detection the collision

00:25:37,330 --> 00:25:41,140
detection that was originally

00:25:39,220 --> 00:25:43,180
implemented was a step by step system if

00:25:41,140 --> 00:25:45,250
you do step by step system on this if

00:25:43,180 --> 00:25:46,690
the wall here is not large enough you're

00:25:45,250 --> 00:25:48,600
going to stack right over it and you're

00:25:46,690 --> 00:25:51,010
not going to see that of the collision

00:25:48,600 --> 00:25:55,120
it's stupid but it worked like this for

00:25:51,010 --> 00:25:57,580
a few years so in the end not a good

00:25:55,120 --> 00:25:59,350
decision at all and if you only look at

00:25:57,580 --> 00:26:01,060
okay this looks cool and you do it

00:25:59,350 --> 00:26:17,260
without thinking about the costs

00:26:01,060 --> 00:26:19,630
not a good yes I don't I'm not trying to

00:26:17,260 --> 00:26:22,750
redesign for the apg I mean we cannot

00:26:19,630 --> 00:26:24,340
change it the point where we are we

00:26:22,750 --> 00:26:25,720
cannot change it for the sake of the

00:26:24,340 --> 00:26:26,890
presentation I wanted a simple way of

00:26:25,720 --> 00:26:28,540
it's very encouraging detection

00:26:26,890 --> 00:26:31,510
obviously there are many ways of doing

00:26:28,540 --> 00:26:38,980
it but this one is wrong this is my

00:26:31,510 --> 00:26:41,050
point okay so it resembles the collision

00:26:38,980 --> 00:26:44,680
detection problem we have a way when

00:26:41,050 --> 00:26:47,320
your player is in a cave to present some

00:26:44,680 --> 00:26:49,570
lighting like this it feels much more

00:26:47,320 --> 00:26:52,210
pressing you don't see around you so

00:26:49,570 --> 00:26:54,120
this is a very important point for home

00:26:52,210 --> 00:26:56,350
actually you probably don't see much

00:26:54,120 --> 00:26:58,990
this very important point for gameplay

00:26:56,350 --> 00:27:03,330
because the point is that you do not see

00:26:58,990 --> 00:27:03,330
much this is really what it was made for

00:27:04,560 --> 00:27:11,020
okay well so the way we do it is we

00:27:08,560 --> 00:27:13,990
first render it like this and then we

00:27:11,020 --> 00:27:16,270
draw kind of a gray mask with which is

00:27:13,990 --> 00:27:19,870
Michael here and darker here and we draw

00:27:16,270 --> 00:27:22,870
it on top and the way we compute the

00:27:19,870 --> 00:27:26,170
values of the gray of the gray mask is

00:27:22,870 --> 00:27:29,020
based makes very easy use of the

00:27:26,170 --> 00:27:31,210
collision detection system which as I've

00:27:29,020 --> 00:27:32,590
said works with continuous coordinates

00:27:31,210 --> 00:27:35,110
so this is a lot of vector mass this is

00:27:32,590 --> 00:27:37,540
a lot of floating point vector math this

00:27:35,110 --> 00:27:39,220
is a performance killer this is really a

00:27:37,540 --> 00:27:42,250
performance killer and it matters a lot

00:27:39,220 --> 00:27:45,840
because while this is a drug or laptop

00:27:42,250 --> 00:27:49,470
so it goes fine but on the small EBC

00:27:45,840 --> 00:27:51,179
things you basically cannot play with

00:27:49,470 --> 00:27:54,659
the lighting because it costs so much

00:27:51,179 --> 00:27:57,690
because we do a lot of which were raised

00:27:54,659 --> 00:28:01,650
and we check if we hit walls and if we

00:27:57,690 --> 00:28:04,650
throw many ways it costs a lot but if we

00:28:01,650 --> 00:28:07,799
throw too few ways it's going to look

00:28:04,650 --> 00:28:10,049
very ok so the lighting algorithm kind

00:28:07,799 --> 00:28:12,900
of results from the quarter continuous

00:28:10,049 --> 00:28:13,770
system that we use it's very poor but it

00:28:12,900 --> 00:28:15,900
does look good

00:28:13,770 --> 00:28:18,390
so unlike the other which was really a

00:28:15,900 --> 00:28:20,669
problem in terms of what the players

00:28:18,390 --> 00:28:22,909
actually saw because they saw that was

00:28:20,669 --> 00:28:25,350
were going through walls there so that

00:28:22,909 --> 00:28:27,600
some pests were not found you know the

00:28:25,350 --> 00:28:29,370
players do not see it but if they touch

00:28:27,600 --> 00:28:30,899
that the laptop and see that it's

00:28:29,370 --> 00:28:32,490
getting very hot now they kind of

00:28:30,899 --> 00:28:37,289
noticed that the real problem with the

00:28:32,490 --> 00:28:39,659
lighting and finally this is a real-time

00:28:37,289 --> 00:28:41,100
application for most of for most of its

00:28:39,659 --> 00:28:42,809
except the diode port this is a

00:28:41,100 --> 00:28:46,440
real-time application it's rather

00:28:42,809 --> 00:28:48,240
difficult to test automatically and here

00:28:46,440 --> 00:28:50,309
we made another one decision which is

00:28:48,240 --> 00:28:52,200
exactly the opposite as the other one we

00:28:50,309 --> 00:28:55,020
said ok it looks difficult let's not do

00:28:52,200 --> 00:28:58,710
it again not a very good decision

00:28:55,020 --> 00:29:00,000
because we had a previous talk which

00:28:58,710 --> 00:29:02,490
talked about the fact that when you

00:29:00,000 --> 00:29:04,649
release a beta release people take it

00:29:02,490 --> 00:29:06,360
like it's the new the new version so is

00:29:04,649 --> 00:29:08,250
that they don't test it at all or they

00:29:06,360 --> 00:29:11,490
get it like it's the the official new

00:29:08,250 --> 00:29:15,270
version and we made a open 15 release a

00:29:11,490 --> 00:29:18,870
few months ago we released beta versions

00:29:15,270 --> 00:29:22,289
people did not test it and then a few

00:29:18,870 --> 00:29:24,570
days ago just right I was right when I

00:29:22,289 --> 00:29:26,850
was preparing my presentation I got a

00:29:24,570 --> 00:29:29,070
message that we were corrupting the

00:29:26,850 --> 00:29:30,419
savegames in some cases which breaks the

00:29:29,070 --> 00:29:32,580
game of the player so for us it's a very

00:29:30,419 --> 00:29:34,649
very big issue and we got that because

00:29:32,580 --> 00:29:36,149
we didn't see the regression and we did

00:29:34,649 --> 00:29:37,890
not see it one because the players did

00:29:36,149 --> 00:29:40,289
not test it but it should be easy for me

00:29:37,890 --> 00:29:42,840
to accuse the players of not testing my

00:29:40,289 --> 00:29:44,580
software and we did not see it because

00:29:42,840 --> 00:29:47,220
we didn't have the automated ways of

00:29:44,580 --> 00:29:48,779
seeing it could we have done it I'm not

00:29:47,220 --> 00:29:51,690
sure but what I know is that we haven't

00:29:48,779 --> 00:29:54,090
even tried so automated testing it's

00:29:51,690 --> 00:29:56,480
very annoying but sometimes I think you

00:29:54,090 --> 00:29:56,480
can't avoid

00:29:56,890 --> 00:30:03,880
now we have a few remaining questions in

00:30:01,360 --> 00:30:06,130
free trade RPG which are the things that

00:30:03,880 --> 00:30:08,380
we have not solved and we do not know

00:30:06,130 --> 00:30:11,770
how to solve them the first one is

00:30:08,380 --> 00:30:13,600
transmissions the second one is safety

00:30:11,770 --> 00:30:16,030
and compatibility the third one is level

00:30:13,600 --> 00:30:18,640
editor so I've got a bit more time so I

00:30:16,030 --> 00:30:21,790
guess I can go into details the issue

00:30:18,640 --> 00:30:24,280
with translations is that we have a lot

00:30:21,790 --> 00:30:25,690
of streams we really have a lot of

00:30:24,280 --> 00:30:29,250
strings because this is a game while you

00:30:25,690 --> 00:30:32,200
read this is a game while you're right a

00:30:29,250 --> 00:30:35,620
few years ago we decided to use get text

00:30:32,200 --> 00:30:38,770
and by then there was not this this web

00:30:35,620 --> 00:30:41,740
application called transifex I think it

00:30:38,770 --> 00:30:44,260
didn't exist by them so it was a bit

00:30:41,740 --> 00:30:46,840
more difficult to translate get

00:30:44,260 --> 00:30:49,030
text-based stuff because I as a project

00:30:46,840 --> 00:30:50,500
leader if I start translating strings I

00:30:49,030 --> 00:30:52,419
don't do anything else and it's still

00:30:50,500 --> 00:30:53,710
not good for the game so we really have

00:30:52,419 --> 00:30:58,200
to get other people to do it especially

00:30:53,710 --> 00:31:00,250
since my German is - slashed and I

00:30:58,200 --> 00:31:03,280
cannot translate the game to anything

00:31:00,250 --> 00:31:05,200
else than French so you really need new

00:31:03,280 --> 00:31:07,630
people to do the translations so you

00:31:05,200 --> 00:31:09,700
have to find a way to make it easy for

00:31:07,630 --> 00:31:10,870
them to translate your game and also

00:31:09,700 --> 00:31:13,840
make it easy for you in terms of

00:31:10,870 --> 00:31:15,970
maintenance and if you keep modifying

00:31:13,840 --> 00:31:17,860
the dialogues all the time you can do

00:31:15,970 --> 00:31:20,500
the translations now I think we're much

00:31:17,860 --> 00:31:24,400
more stable but still on a technical

00:31:20,500 --> 00:31:28,240
point of view we didn't have a very

00:31:24,400 --> 00:31:29,890
positive experience with get text and at

00:31:28,240 --> 00:31:33,160
the moment we really don't know how to

00:31:29,890 --> 00:31:35,020
do it we know we want it but we do need

00:31:33,160 --> 00:31:36,940
a translation team and we don't have one

00:31:35,020 --> 00:31:42,010
and we don't really know what is the

00:31:36,940 --> 00:31:45,190
best technical solution now the yeah

00:31:42,010 --> 00:31:48,610
also we had another problem our font

00:31:45,190 --> 00:31:52,720
engine was ASCII only so that's good for

00:31:48,610 --> 00:31:55,419
English English and English so this was

00:31:52,720 --> 00:31:59,740
always and I solved it I solved it I

00:31:55,419 --> 00:32:02,530
said ok let's use ISO 8859 so this works

00:31:59,740 --> 00:32:05,500
for French German Italian and that's

00:32:02,530 --> 00:32:07,629
about it and English yeah ok

00:32:05,500 --> 00:32:10,210
so when we add the translation team of

00:32:07,629 --> 00:32:12,639
five version people I told them okay you

00:32:10,210 --> 00:32:19,269
draw all the fonts and we'll see what we

00:32:12,639 --> 00:32:21,460
can do and I left so yeah I don't like

00:32:19,269 --> 00:32:24,490
to decode but when you don't use the

00:32:21,460 --> 00:32:28,570
translations you don't have a choice

00:32:24,490 --> 00:32:33,460
another problem that we have is more

00:32:28,570 --> 00:32:35,169
than 2100 does it so when they release a

00:32:33,460 --> 00:32:37,990
new version when we release a new

00:32:35,169 --> 00:32:41,769
version we break savegame compatibility

00:32:37,990 --> 00:32:43,750
so you start playing on 0.4 teen we read

00:32:41,769 --> 00:32:45,220
is on point 15 it's much better we tell

00:32:43,750 --> 00:32:46,720
you to use it we want you to use the

00:32:45,220 --> 00:32:49,200
last version of the software then you

00:32:46,720 --> 00:32:52,029
try to load your game when we say oh no

00:32:49,200 --> 00:32:55,720
that's very very frustrating to the

00:32:52,029 --> 00:32:57,580
potential players and we know we know it

00:32:55,720 --> 00:32:59,620
but it's also very difficult for us

00:32:57,580 --> 00:33:01,509
because it's a lot of additional work to

00:32:59,620 --> 00:33:03,669
probably end up taking compatibility

00:33:01,509 --> 00:33:05,860
especially when you really change data

00:33:03,669 --> 00:33:08,649
structures when you add the new quest

00:33:05,860 --> 00:33:10,360
between two quests if you load the game

00:33:08,649 --> 00:33:11,799
which is at the first quest what do you

00:33:10,360 --> 00:33:14,320
do and so on so we've got a lot of

00:33:11,799 --> 00:33:18,070
questions about this and right now we

00:33:14,320 --> 00:33:20,340
haven't planned on handling this but we

00:33:18,070 --> 00:33:52,750
know we will need to do it for 1.0

00:33:20,340 --> 00:33:55,120
because right now it cannot work in

00:33:52,750 --> 00:33:56,529
terms of of concepts I consider

00:33:55,120 --> 00:33:57,789
converter to be the same thing as an

00:33:56,529 --> 00:33:59,889
incompatibility you don't have to have

00:33:57,789 --> 00:34:02,440
full compatibility but even a converter

00:33:59,889 --> 00:34:05,559
it's not always easy to write because if

00:34:02,440 --> 00:34:07,779
you changed some basic structures of the

00:34:05,559 --> 00:34:09,819
virtual world I'm not speaking about

00:34:07,779 --> 00:34:12,760
adding a field I'm speaking about really

00:34:09,819 --> 00:34:14,379
changing the story what do you do do you

00:34:12,760 --> 00:34:15,760
play the old on the new story and I'll

00:34:14,379 --> 00:34:17,950
do you integrate the old story into the

00:34:15,760 --> 00:34:19,990
new one you can't so you have to play

00:34:17,950 --> 00:34:21,520
the old story and you don't want to play

00:34:19,990 --> 00:34:24,040
it's really all sorry that's kind of the

00:34:21,520 --> 00:34:28,510
points where they say this is a bit

00:34:24,040 --> 00:34:30,730
difficult for us yes the last question

00:34:28,510 --> 00:34:33,010
that we have this one is much more

00:34:30,730 --> 00:34:34,629
advanced translation and save game

00:34:33,010 --> 00:34:36,399
compatibility we really don't know how

00:34:34,629 --> 00:34:38,889
to do them but the level editor is

00:34:36,399 --> 00:34:41,040
something else we have had forever an

00:34:38,889 --> 00:34:43,839
integrated level editor into the game

00:34:41,040 --> 00:34:46,359
now the problem with the level editor is

00:34:43,839 --> 00:34:49,000
that conceptually it's here to create

00:34:46,359 --> 00:34:52,510
delete movements or on any kind of

00:34:49,000 --> 00:34:54,879
objects so inherently it will do a lot

00:34:52,510 --> 00:34:56,530
of modifications to the data structures

00:34:54,879 --> 00:34:58,180
of the game it will create it will move

00:34:56,530 --> 00:35:00,819
it will do a lot of things which the

00:34:58,180 --> 00:35:02,349
game doesn't do so the data structure

00:35:00,819 --> 00:35:03,640
that you use for example to optimize

00:35:02,349 --> 00:35:05,829
your collision detection because it's

00:35:03,640 --> 00:35:07,569
very costly in future the RPG you use

00:35:05,829 --> 00:35:09,579
the data structures that is appropriate

00:35:07,569 --> 00:35:11,890
for the game but you find out when

00:35:09,579 --> 00:35:14,200
writing the level editor that oh you

00:35:11,890 --> 00:35:17,920
can't move obstacles with the with the

00:35:14,200 --> 00:35:19,810
data structure that you've chosen so the

00:35:17,920 --> 00:35:21,640
difficulty with the level editor is that

00:35:19,810 --> 00:35:23,440
you optimize you build your game you

00:35:21,640 --> 00:35:25,060
optimize for the engine and then you

00:35:23,440 --> 00:35:28,869
notice that you have to build something

00:35:25,060 --> 00:35:30,490
on top of it that enables the user to

00:35:28,869 --> 00:35:33,190
make a lot of changes to something that

00:35:30,490 --> 00:35:34,960
you had not planned in the engine to be

00:35:33,190 --> 00:35:38,050
changed so I don't know if I'm making

00:35:34,960 --> 00:35:40,720
myself clear we have a technical issue

00:35:38,050 --> 00:35:45,790
with the data structures and we have

00:35:40,720 --> 00:35:47,950
also a user interface issue because if

00:35:45,790 --> 00:35:49,390
you think about it you say okay using

00:35:47,950 --> 00:35:52,810
the game engine to implement the level

00:35:49,390 --> 00:35:54,700
editor this is a good idea and in fact

00:35:52,810 --> 00:35:56,890
you will notice that what you do in the

00:35:54,700 --> 00:35:58,190
level editor has nothing to do with a

00:35:56,890 --> 00:35:59,950
real-time

00:35:58,190 --> 00:36:02,869
and I can actually show it to you

00:35:59,950 --> 00:36:06,559
because I've got time yeah

00:36:02,869 --> 00:36:08,569
so the game you've seen it okay so a I

00:36:06,559 --> 00:36:11,720
can move around okay now let's get into

00:36:08,569 --> 00:36:14,450
the level editor the level editor works

00:36:11,720 --> 00:36:17,420
quite differently I don't have a player

00:36:14,450 --> 00:36:19,549
I don't make him move and I can do a lot

00:36:17,420 --> 00:36:23,000
of things for example I can select and

00:36:19,549 --> 00:36:26,000
then I can drag and drop okay oh here

00:36:23,000 --> 00:36:27,770
you see the floating point coordinates

00:36:26,000 --> 00:36:30,140
for obstacles which means that the

00:36:27,770 --> 00:36:32,599
alignment is really really tough to get

00:36:30,140 --> 00:36:34,760
correctly so we had to implement a

00:36:32,599 --> 00:36:37,940
system in the level edge that forces the

00:36:34,760 --> 00:36:40,369
alignment because the engine doesn't so

00:36:37,940 --> 00:36:42,680
anyway after that I noticed that there

00:36:40,369 --> 00:36:44,960
were a lot of really made tile editors

00:36:42,680 --> 00:36:47,780
which are there's one called

00:36:44,960 --> 00:36:50,240
tile Edie I think and even the ones used

00:36:47,780 --> 00:36:53,420
by games but by other games but we could

00:36:50,240 --> 00:36:56,059
probably spend much less time trying to

00:36:53,420 --> 00:36:58,190
use external editors than write one

00:36:56,059 --> 00:37:00,849
especially since this is a development

00:36:58,190 --> 00:37:03,500
tool so it doesn't get much love because

00:37:00,849 --> 00:37:05,329
if I spend a second and this I'm not

00:37:03,500 --> 00:37:07,190
spending a second on the game and if I

00:37:05,329 --> 00:37:08,480
Spanish if I do not spend a second on

00:37:07,190 --> 00:37:10,789
the game I'm not making the game better

00:37:08,480 --> 00:37:13,130
for my audience so this is a difficulty

00:37:10,789 --> 00:37:15,200
because if this is a waste of time

00:37:13,130 --> 00:37:17,359
working on the level it is a waste of

00:37:15,200 --> 00:37:18,829
time in terms of talking to your

00:37:17,359 --> 00:37:20,390
audience it is a waste of time but on

00:37:18,829 --> 00:37:24,109
the other end if you do not improve it

00:37:20,390 --> 00:37:25,880
people will not use it and also I

00:37:24,109 --> 00:37:27,559
thought because four years ago I said

00:37:25,880 --> 00:37:30,859
okay let's improve it people will use it

00:37:27,559 --> 00:37:32,569
I know doesn't work you don't get people

00:37:30,859 --> 00:37:33,980
to use your level editor just because

00:37:32,569 --> 00:37:38,089
you've made it better you need to make

00:37:33,980 --> 00:37:40,700
it good and we're very far from it I can

00:37:38,089 --> 00:37:45,170
I can try to design a small wonder to

00:37:40,700 --> 00:37:47,539
show you that it's really it's it's much

00:37:45,170 --> 00:37:50,000
better than it was but it's still a pain

00:37:47,539 --> 00:37:51,859
so you can same placing obstacles and

00:37:50,000 --> 00:37:54,020
here you will see the different kinds of

00:37:51,859 --> 00:37:55,520
elements which I presented earlier you

00:37:54,020 --> 00:37:57,230
see them pretty clearly because I can

00:37:55,520 --> 00:37:58,609
select them here you have the obstacles

00:37:57,230 --> 00:38:00,650
you have the floor then you have the

00:37:58,609 --> 00:38:03,380
actors which are enemies but you know it

00:38:00,650 --> 00:38:06,470
works and you have all the kinds of you

00:38:03,380 --> 00:38:08,480
know the dropped items and so on

00:38:06,470 --> 00:38:11,840
so yeah the level editor was another

00:38:08,480 --> 00:38:50,870
point that is still a question for us

00:38:11,840 --> 00:38:57,980
and if I'm not mistaken I'm sure you can

00:38:50,870 --> 00:39:00,590
actually reconcile there are significant

00:38:57,980 --> 00:39:02,180
audience and we have a lot of people

00:39:00,590 --> 00:39:05,630
telling us that they like the game so

00:39:02,180 --> 00:39:09,080
there is definitely a group of people

00:39:05,630 --> 00:39:12,380
who like this and what it's worth so do

00:39:09,080 --> 00:39:14,120
i I I don't think that you need to have

00:39:12,380 --> 00:39:15,710
you know this is an apocalyptic world

00:39:14,120 --> 00:39:18,380
when you look at it in the game it

00:39:15,710 --> 00:39:20,960
doesn't look like it as far as I am

00:39:18,380 --> 00:39:24,080
concerned I think that full-out kind of

00:39:20,960 --> 00:39:26,390
covered the world of realistic

00:39:24,080 --> 00:39:27,770
apocalypse and okay this is done now

00:39:26,390 --> 00:39:30,920
let's try to do something else

00:39:27,770 --> 00:39:31,730
and yeah I know that if you find that

00:39:30,920 --> 00:39:33,170
the graphics are lame

00:39:31,730 --> 00:39:37,640
while I'm sorry that you don't like the

00:39:33,170 --> 00:39:39,560
game but that's I know I know but yeah

00:39:37,640 --> 00:39:42,560
it's a choice really it's a choice and

00:39:39,560 --> 00:39:44,390
we have had a few parents coming on the

00:39:42,560 --> 00:39:45,860
RC channel saying oh I'm playing this

00:39:44,390 --> 00:39:47,680
game with my kid this is the first time

00:39:45,860 --> 00:39:53,330
I'm playing a video game with my kids so

00:39:47,680 --> 00:39:54,950
yeah it's interesting to yourself now

00:39:53,330 --> 00:39:57,770
the real difficulty here is that

00:39:54,950 --> 00:40:01,580
dialogues are fairly complex especially

00:39:57,770 --> 00:40:03,860
since most children in the world do not

00:40:01,580 --> 00:40:06,040
speak English they cannot play for the

00:40:03,860 --> 00:40:09,950
deputy so this is very difficult for us

00:40:06,040 --> 00:40:11,900
our English is of educational quality we

00:40:09,950 --> 00:40:14,840
do spend a lot of time trying to make it

00:40:11,900 --> 00:40:16,760
really good so no bad words but all

00:40:14,840 --> 00:40:18,680
especially we concentrate on having good

00:40:16,760 --> 00:40:20,600
grammar so really you can use it to

00:40:18,680 --> 00:40:24,680
teach English

00:40:20,600 --> 00:40:26,000
American American American we have lots

00:40:24,680 --> 00:40:27,950
of contributors writing British English

00:40:26,000 --> 00:40:34,100
and then I go after them to tell them

00:40:27,950 --> 00:40:36,380
this is American English yeah but you've

00:40:34,100 --> 00:40:51,830
got perhaps 15 times more resources than

00:40:36,380 --> 00:40:54,470
we do oh yeah there's one thing I forgot

00:40:51,830 --> 00:40:56,090
to mention we noticed that we had

00:40:54,470 --> 00:40:59,000
difficulty attracting people to make

00:40:56,090 --> 00:41:00,890
maps so one day I woke up inside a

00:40:59,000 --> 00:41:04,850
that's easy let's write a random level

00:41:00,890 --> 00:41:07,490
generator so we wrote one and it's

00:41:04,850 --> 00:41:10,130
actually not too bad we had a summer of

00:41:07,490 --> 00:41:12,050
code project in it I actually managed

00:41:10,130 --> 00:41:14,870
when I was at school to have that as a

00:41:12,050 --> 00:41:16,850
school project - so we wrote a random

00:41:14,870 --> 00:41:19,010
level generator which makes it very easy

00:41:16,850 --> 00:41:20,570
because once you write the codes and I'm

00:41:19,010 --> 00:41:22,640
not a good night designer but I can cook

00:41:20,570 --> 00:41:24,200
pretty quickly once the code is written

00:41:22,640 --> 00:41:39,320
you can generate a lot of levels

00:41:24,200 --> 00:41:41,090
so does that perhaps we have a lot of

00:41:39,320 --> 00:41:44,120
people coming on the channel saying yeah

00:41:41,090 --> 00:41:47,840
I would like to contribute we managed to

00:41:44,120 --> 00:41:50,690
retain about 1% of them sometimes they

00:41:47,840 --> 00:41:54,070
can't write correctly so well it's very

00:41:50,690 --> 00:41:58,520
difficult because we do attract a lot of

00:41:54,070 --> 00:42:01,670
rather young people and I don't want to

00:41:58,520 --> 00:42:03,860
pick on my own age group that they lack

00:42:01,670 --> 00:42:05,510
the ability to comment really they

00:42:03,860 --> 00:42:08,510
imagine that it's going to be very easy

00:42:05,510 --> 00:42:11,480
and then they see that game developments

00:42:08,510 --> 00:42:13,130
is difficult and well I think this is a

00:42:11,480 --> 00:42:14,930
big thing because everyone thinks that

00:42:13,130 --> 00:42:18,320
writing a videogame is easy and actually

00:42:14,930 --> 00:42:19,880
not and I think this is the main reason

00:42:18,320 --> 00:42:21,470
why we lose a lot of potential

00:42:19,880 --> 00:42:25,130
contributors I don't think it has to do

00:42:21,470 --> 00:42:26,840
with us the main reason I mean now we do

00:42:25,130 --> 00:42:32,870
a few people because of the management

00:42:26,840 --> 00:42:33,860
style we have very few resources so I am

00:42:32,870 --> 00:42:36,020
the

00:42:33,860 --> 00:42:39,050
prove the batches and well sometimes it

00:42:36,020 --> 00:42:46,180
doesn't go well but mainly I think the

00:42:39,050 --> 00:42:46,180
issue is that we have I'm 23

00:42:49,060 --> 00:43:06,140
for being I'm sorry no no that's not

00:43:02,000 --> 00:43:09,050
what I said what I said is that most of

00:43:06,140 --> 00:43:11,690
the people that we get that tell us that

00:43:09,050 --> 00:43:13,430
they want to contribute or 15 and I've

00:43:11,690 --> 00:43:16,310
never written a single line of code this

00:43:13,430 --> 00:43:18,310
is what I said the fact that they are 15

00:43:16,310 --> 00:43:20,570
is irrelevant except for the fact that

00:43:18,310 --> 00:43:23,000
perhaps they like a bit of the maturity

00:43:20,570 --> 00:43:25,700
to realize that all things in life are

00:43:23,000 --> 00:43:27,320
not easy I think they really

00:43:25,700 --> 00:43:30,850
underestimate the difficulty now is this

00:43:27,320 --> 00:43:30,850
tied to the edge or not I don't know but

00:43:37,510 --> 00:43:44,390
they don't start with Cody yeah we try

00:43:41,030 --> 00:43:47,180
to be using some content first since the

00:43:44,390 --> 00:43:49,610
basic steps are similar but this is what

00:43:47,180 --> 00:43:50,930
we need also I don't want code as a

00:43:49,610 --> 00:43:53,720
project leader I don't really care for

00:43:50,930 --> 00:43:56,870
contributions our engine is done we need

00:43:53,720 --> 00:43:58,700
we need content so we try to encourage

00:43:56,870 --> 00:44:00,310
people to write content but it's

00:43:58,700 --> 00:44:02,600
difficult to produce very good content

00:44:00,310 --> 00:44:04,220
you have to have good English you have

00:44:02,600 --> 00:44:09,400
to integrate into the general

00:44:04,220 --> 00:44:09,400
environment of the game just not so easy

00:44:28,910 --> 00:44:34,040
we used a launchpad we gave up because

00:44:32,840 --> 00:44:36,440
it was not good

00:44:34,040 --> 00:44:38,840
then transifex came along and a separate

00:44:36,440 --> 00:44:40,610
team from the Delta G an unofficial

00:44:38,840 --> 00:44:42,590
translation team started to use it and

00:44:40,610 --> 00:44:44,120
the problem that we have is that in

00:44:42,590 --> 00:44:46,130
English when you say you which means you

00:44:44,120 --> 00:44:49,130
single are plural but in French you have

00:44:46,130 --> 00:44:54,170
to you are doing indoor air and so on so

00:44:49,130 --> 00:44:56,690
the problem is that when you have people

00:44:54,170 --> 00:45:00,440
like this when you have 20 people

00:44:56,690 --> 00:45:02,210
contributing translations if they do one

00:45:00,440 --> 00:45:04,630
or two strings each the result is

00:45:02,210 --> 00:45:04,630
terrible

00:45:11,500 --> 00:45:16,640
that's nothing no this is not a goal for

00:45:14,780 --> 00:45:18,320
the project so what we really is 1.20

00:45:16,640 --> 00:45:20,360
perhaps you'll do it but really it's

00:45:18,320 --> 00:45:22,670
it's another world it's completely

00:45:20,360 --> 00:45:25,280
different and I'm not personally

00:45:22,670 --> 00:45:28,720
interested in it and most of the team is

00:45:25,280 --> 00:45:28,720
also single-payer again

00:45:37,750 --> 00:45:43,900
because usually

00:46:14,270 --> 00:46:22,800
why do I think some someone should pay

00:46:16,830 --> 00:46:24,450
you again because it's good oh boy now

00:46:22,800 --> 00:46:40,500
I'm sorry I didn't quite get my cell

00:46:24,450 --> 00:46:42,510
phone to work instead of another if you

00:46:40,500 --> 00:46:45,710
look at so they can continue all world

00:46:42,510 --> 00:46:48,510
of free software games we actually

00:46:45,710 --> 00:46:53,150
optical this is the first thing because

00:46:48,510 --> 00:46:53,150
there are a lot of open source games

00:47:00,339 --> 00:47:02,400

YouTube URL: https://www.youtube.com/watch?v=TliYqlyJTsg


