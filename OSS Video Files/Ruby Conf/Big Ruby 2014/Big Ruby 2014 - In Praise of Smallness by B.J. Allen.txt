Title: Big Ruby 2014 - In Praise of Smallness by B.J. Allen
Publication date: 2020-01-24
Playlist: Big Ruby 2014
Description: 
	Getting big things done is important. We praise big accomplishments, but those involved can usually point to the small decisions and actions along the way that made it all possible. Structuring teams, projects, systems, and processes to embrace smallness enables the big things to evolve and succeed. This talk will cover ways in which the teams behind TripCase have succeeded and failed while making big things happen one small step at a time.

Help us caption & translate this video!

http://amara.org/v/FG3w/
Captions: 
	00:00:20,740 --> 00:00:26,720
alright thank you very much I hope you

00:00:24,619 --> 00:00:31,340
guys are enjoying the conference as much

00:00:26,720 --> 00:00:33,740
as I am I think the organizers and

00:00:31,340 --> 00:00:35,810
sponsors and other speakers and hackers

00:00:33,740 --> 00:00:38,390
and residents and volunteers have all

00:00:35,810 --> 00:00:41,270
done a really great job the speakers in

00:00:38,390 --> 00:00:43,340
particular I think it's it's really hit

00:00:41,270 --> 00:00:45,829
home it's almost like many of them have

00:00:43,340 --> 00:00:48,680
been sitting in the meeting rooms that I

00:00:45,829 --> 00:00:51,379
man in my office talking about rewriting

00:00:48,680 --> 00:00:53,840
our jobs processor and getting fed up

00:00:51,379 --> 00:00:55,940
with data warehousing and things like

00:00:53,840 --> 00:00:59,590
that so so it's a really great

00:00:55,940 --> 00:01:01,850
conference I'm really happy to be here

00:00:59,590 --> 00:01:05,600
so that's the little dude that looks

00:01:01,850 --> 00:01:08,590
like me and lives in my house he's about

00:01:05,600 --> 00:01:12,320
14 months old and just started walking

00:01:08,590 --> 00:01:14,690
about two weeks ago so that's both very

00:01:12,320 --> 00:01:18,770
exciting and extremely terrifying all at

00:01:14,690 --> 00:01:22,970
the same time so he's a little dude and

00:01:18,770 --> 00:01:26,869
he's trying to get big so this is a

00:01:22,970 --> 00:01:29,390
great moment an exciting time for you

00:01:26,869 --> 00:01:32,899
and your team the blank slate when you

00:01:29,390 --> 00:01:35,149
have a ton of big ideas in your head and

00:01:32,899 --> 00:01:38,450
we have a lot of tools that help us get

00:01:35,149 --> 00:01:40,939
started quickly and move fast lots of

00:01:38,450 --> 00:01:45,740
small things happening very fast very

00:01:40,939 --> 00:01:48,439
few hurdles to get over to make things

00:01:45,740 --> 00:01:50,810
happen and just as a reminder at this

00:01:48,439 --> 00:01:55,969
point in time your test suite takes one

00:01:50,810 --> 00:01:57,890
and a half seconds to run so so your

00:01:55,969 --> 00:01:59,180
team is moving fast you're building

00:01:57,890 --> 00:02:04,670
small things you're building them

00:01:59,180 --> 00:02:06,950
quickly it's really exciting but things

00:02:04,670 --> 00:02:10,039
start to change you start getting more

00:02:06,950 --> 00:02:13,940
users you get more visibility you'll get

00:02:10,039 --> 00:02:15,350
more funding on more servers more and

00:02:13,940 --> 00:02:19,790
more and more things get bigger and

00:02:15,350 --> 00:02:22,250
bigger and bigger and all of a sudden

00:02:19,790 --> 00:02:23,870
sorry I'm going to skip over that all of

00:02:22,250 --> 00:02:27,980
a sudden things get really really big

00:02:23,870 --> 00:02:28,590
and if you are in an enterprising

00:02:27,980 --> 00:02:33,360
company

00:02:28,590 --> 00:02:35,459
the one I work in you have a whole new

00:02:33,360 --> 00:02:40,709
level of bigness to deal with things

00:02:35,459 --> 00:02:42,209
like this and when I was trying to come

00:02:40,709 --> 00:02:45,569
up with this slide I was like what's the

00:02:42,209 --> 00:02:47,250
biggest heaviest most cumbersome thing

00:02:45,569 --> 00:02:50,430
that I could possibly put on the slide

00:02:47,250 --> 00:02:54,150
and enterprise governance one I think

00:02:50,430 --> 00:02:55,620
enterprise governance is is is the kind

00:02:54,150 --> 00:02:58,319
of thing you could play a practical joke

00:02:55,620 --> 00:02:59,879
on another team that doesn't know you by

00:02:58,319 --> 00:03:01,860
just going to one of their meetings and

00:02:59,879 --> 00:03:03,510
sitting in the back and furiously taking

00:03:01,860 --> 00:03:05,069
notes and when they when they try to

00:03:03,510 --> 00:03:09,780
talk to you just tell them you're from

00:03:05,069 --> 00:03:12,150
enterprise governments so not all of

00:03:09,780 --> 00:03:17,670
these things are bad there is some good

00:03:12,150 --> 00:03:22,290
in everything on that screen but dealing

00:03:17,670 --> 00:03:25,980
with these big things can keep you up at

00:03:22,290 --> 00:03:29,730
night so a lot of times I'll wake up at

00:03:25,980 --> 00:03:31,260
3am thinking about is our background job

00:03:29,730 --> 00:03:33,780
process or going to be able to handle

00:03:31,260 --> 00:03:36,359
the load today is it time to start

00:03:33,780 --> 00:03:38,489
thinking about database shorting and all

00:03:36,359 --> 00:03:41,220
of those big things have to be thought

00:03:38,489 --> 00:03:42,630
about and have to be dealt with but

00:03:41,220 --> 00:03:45,000
there's a lot of small things that are

00:03:42,630 --> 00:03:50,040
still going on that we should celebrate

00:03:45,000 --> 00:03:51,930
and really work to focus on my name is

00:03:50,040 --> 00:03:53,970
bj Ellen and I had the privilege for

00:03:51,930 --> 00:03:56,489
working at a privilege of working at

00:03:53,970 --> 00:03:59,400
Sabre just up the road I work on an app

00:03:56,489 --> 00:04:01,919
called TripCase trip case is here to

00:03:59,400 --> 00:04:04,230
help you take better trips and i love

00:04:01,919 --> 00:04:07,560
that tagline because every everybody

00:04:04,230 --> 00:04:09,630
wants to feel relaxed and in control and

00:04:07,560 --> 00:04:11,579
in the know when it comes to traveling

00:04:09,630 --> 00:04:13,980
you want to be the person who gets a

00:04:11,579 --> 00:04:16,470
notification on your phone that your

00:04:13,980 --> 00:04:18,750
flights gate has changed and you stand

00:04:16,470 --> 00:04:20,400
up knowingly and look back at all the

00:04:18,750 --> 00:04:22,800
suckers that don't know what's going on

00:04:20,400 --> 00:04:26,210
and head off to your new gate that's

00:04:22,800 --> 00:04:29,250
what trip case is here to help you with

00:04:26,210 --> 00:04:32,430
I've been writing code for just under 10

00:04:29,250 --> 00:04:35,460
years on this is what I did before that

00:04:32,430 --> 00:04:36,910
I was a middle school and high school

00:04:35,460 --> 00:04:41,290
band director

00:04:36,910 --> 00:04:45,730
austin and round rock and i wish i'd had

00:04:41,290 --> 00:04:47,200
better photographers at the time my

00:04:45,730 --> 00:04:49,180
undergraduate degrees in music education

00:04:47,200 --> 00:04:57,250
from the University of Texas at Austin

00:04:49,180 --> 00:05:00,250
hookem horns Thank You Aggies and and

00:04:57,250 --> 00:05:02,370
this is a guy who had a big impact on

00:05:00,250 --> 00:05:05,440
the way I think about human behavior

00:05:02,370 --> 00:05:07,450
this is dr. Bob Duke he is the director

00:05:05,440 --> 00:05:10,630
for the center of music learning at the

00:05:07,450 --> 00:05:12,340
University of Texas at Austin and I

00:05:10,630 --> 00:05:15,550
remember one of the first classes that I

00:05:12,340 --> 00:05:18,160
had with you in educational psychology

00:05:15,550 --> 00:05:24,270
and methods he draws this up on the

00:05:18,160 --> 00:05:28,030
board and he says as teachers it's our

00:05:24,270 --> 00:05:32,380
responsibility to set up an environment

00:05:28,030 --> 00:05:37,600
where feedback happens at very frequent

00:05:32,380 --> 00:05:39,700
intervals and very low magnitude and he

00:05:37,600 --> 00:05:41,440
talks about this he says you know as an

00:05:39,700 --> 00:05:43,240
example what's the worst thing you could

00:05:41,440 --> 00:05:46,060
possibly do well the worst thing is you

00:05:43,240 --> 00:05:47,860
have a college course that has a midterm

00:05:46,060 --> 00:05:51,850
and a final and they're both fifty

00:05:47,860 --> 00:05:53,530
percent of your grade so that's pretty

00:05:51,850 --> 00:05:55,570
stressful there's a lot of anxiety

00:05:53,530 --> 00:05:57,310
involved in that you go for you know

00:05:55,570 --> 00:05:59,770
it's a 15-week course you go for seven

00:05:57,310 --> 00:06:02,200
and a half weeks and you hit this first

00:05:59,770 --> 00:06:04,240
midterm you haven't had any feedback up

00:06:02,200 --> 00:06:06,340
to that point and now you have this big

00:06:04,240 --> 00:06:09,220
heavy gigantic thing that you have to

00:06:06,340 --> 00:06:11,350
deal with so this peak is maybe 2 a.m.

00:06:09,220 --> 00:06:13,300
the night before that where anxiety and

00:06:11,350 --> 00:06:16,240
stress are at their highest and you

00:06:13,300 --> 00:06:17,830
barely pass that midterm so what does

00:06:16,240 --> 00:06:20,830
that mean well that means going into the

00:06:17,830 --> 00:06:22,630
final it's only worse right or the

00:06:20,830 --> 00:06:24,610
worst-case scenario is you fail that

00:06:22,630 --> 00:06:27,340
midterm it's too late to drop the class

00:06:24,610 --> 00:06:31,270
you know you're going to fail motivation

00:06:27,340 --> 00:06:33,820
is gone sad trombone game over right so

00:06:31,270 --> 00:06:35,460
instead what we want is something that

00:06:33,820 --> 00:06:37,990
looks a little more like this where

00:06:35,460 --> 00:06:40,660
feedback happens at very frequent

00:06:37,990 --> 00:06:42,820
intervals making each one of those much

00:06:40,660 --> 00:06:46,690
lower in magnitude much less anxiety

00:06:42,820 --> 00:06:48,940
much less stress that's the way to set

00:06:46,690 --> 00:06:49,120
up a good learning environment so this

00:06:48,940 --> 00:06:50,860
is

00:06:49,120 --> 00:06:53,520
a great idea but there's actually a lot

00:06:50,860 --> 00:06:56,949
of research and science to support this

00:06:53,520 --> 00:06:59,889
these are a few studies my wife is the

00:06:56,949 --> 00:07:02,169
director of music education at SMU here

00:06:59,889 --> 00:07:04,870
in Dallas and she sent me a few of these

00:07:02,169 --> 00:07:07,389
examples I'll be honest and say i really

00:07:04,870 --> 00:07:09,639
just read the abstracts but i pulled out

00:07:07,389 --> 00:07:12,430
a couple of things you know at the top

00:07:09,639 --> 00:07:15,130
we see students that were quizzed on two

00:07:12,430 --> 00:07:17,500
frequencies monthly semi-monthly that's

00:07:15,130 --> 00:07:19,240
not that big of a difference but what we

00:07:17,500 --> 00:07:21,460
see is the the group that was quizzed

00:07:19,240 --> 00:07:23,889
twice a month outperformed the other

00:07:21,460 --> 00:07:26,620
group both in a short-term kind of end

00:07:23,889 --> 00:07:30,220
of semester exam and also more longer

00:07:26,620 --> 00:07:31,720
term assessments administered later and

00:07:30,220 --> 00:07:35,639
then here at the bottom the site knee of

00:07:31,720 --> 00:07:39,190
low magnitude low-stakes quizzing liner

00:07:35,639 --> 00:07:41,860
opportunities for feedback at a frequent

00:07:39,190 --> 00:07:48,250
interval produced significant learning

00:07:41,860 --> 00:07:50,470
benefits so this is an important concept

00:07:48,250 --> 00:07:53,770
and we talked about feedback a lot and

00:07:50,470 --> 00:07:55,720
software development and I think I think

00:07:53,770 --> 00:07:58,780
you can take this idea and apply it

00:07:55,720 --> 00:08:00,130
across much of what we do and what I'd

00:07:58,780 --> 00:08:03,010
like to do today is just kind of talk

00:08:00,130 --> 00:08:06,160
about a few things from my experience of

00:08:03,010 --> 00:08:10,840
a trip case where this concept applies

00:08:06,160 --> 00:08:13,360
very appropriately so when I first

00:08:10,840 --> 00:08:20,220
started a trip case the teams were well

00:08:13,360 --> 00:08:23,410
underway in a big rewrite redesign of

00:08:20,220 --> 00:08:25,570
all of the client applications in code

00:08:23,410 --> 00:08:27,370
the mobile app was being rewritten the

00:08:25,570 --> 00:08:29,260
desktop web application was being

00:08:27,370 --> 00:08:31,750
redesigned and mostly rewritten from

00:08:29,260 --> 00:08:33,640
scratch and we can kind of argue and

00:08:31,750 --> 00:08:37,930
talk about whether or not that's a good

00:08:33,640 --> 00:08:42,010
idea or not but that's where we were and

00:08:37,930 --> 00:08:45,050
the teams were agile and by agile I mean

00:08:42,010 --> 00:08:47,660
not agile at all

00:08:45,050 --> 00:08:48,950
there were there were stand ups and

00:08:47,660 --> 00:08:52,580
there were stories and there were

00:08:48,950 --> 00:08:56,870
iterations and there were demos but it

00:08:52,580 --> 00:08:58,459
wasn't very agile so stand-up meetings

00:08:56,870 --> 00:09:00,529
this actually is one of the teams at

00:08:58,459 --> 00:09:02,120
TripCase and they were not having a

00:09:00,529 --> 00:09:03,440
stand-up I think they were iteration

00:09:02,120 --> 00:09:05,390
planning or something and I went in and

00:09:03,440 --> 00:09:06,680
I said hey I need a photo that looks

00:09:05,390 --> 00:09:08,390
like you're having a stand-up so I'm

00:09:06,680 --> 00:09:13,250
going to stand up and this is what I got

00:09:08,390 --> 00:09:17,690
so thanks a lot Jokers so we hit if you

00:09:13,250 --> 00:09:19,250
had come to a trip case stand up early

00:09:17,690 --> 00:09:22,940
on at that point in time you would have

00:09:19,250 --> 00:09:28,279
seen this example of people going in and

00:09:22,940 --> 00:09:29,839
being very vague and kind of lulling

00:09:28,279 --> 00:09:31,399
through with status well I kind of

00:09:29,839 --> 00:09:34,399
started the redesign of the weather tool

00:09:31,399 --> 00:09:36,500
yesterday I don't know I think I could

00:09:34,399 --> 00:09:38,630
probably have it finished up today and

00:09:36,500 --> 00:09:40,459
and then the stand-up would end it would

00:09:38,630 --> 00:09:41,779
just kind of unceremonious land and

00:09:40,459 --> 00:09:43,430
everybody would go back to their desk

00:09:41,779 --> 00:09:44,899
and start coding and that's kind of what

00:09:43,430 --> 00:09:46,610
everybody wanted to do they wanted to

00:09:44,899 --> 00:09:52,070
you know this is a waste of time I just

00:09:46,610 --> 00:09:54,529
want to get back and get to work in what

00:09:52,070 --> 00:09:55,940
happened was they found that if you know

00:09:54,529 --> 00:09:58,160
that's the whole thing you go and you

00:09:55,940 --> 00:10:00,079
mumble very quickly through your report

00:09:58,160 --> 00:10:01,610
no one gives you a hard time you don't

00:10:00,079 --> 00:10:03,829
stick your neck out you keep your mouth

00:10:01,610 --> 00:10:05,300
shut and you get rewarded what your

00:10:03,829 --> 00:10:06,860
reward is you get to get back to what

00:10:05,300 --> 00:10:10,910
you wanted to do which is back to your

00:10:06,860 --> 00:10:13,459
desk back to coding and there's a word

00:10:10,910 --> 00:10:16,520
for that also in educational psychology

00:10:13,459 --> 00:10:18,800
is called an approval mistake so the

00:10:16,520 --> 00:10:21,829
idea here is that regardless of whether

00:10:18,800 --> 00:10:25,220
it's intentional or explicit feedback

00:10:21,829 --> 00:10:29,089
happens right and in this case the

00:10:25,220 --> 00:10:31,550
feedback was keep your mouth shut don't

00:10:29,089 --> 00:10:36,070
really contribute get back to your desk

00:10:31,550 --> 00:10:40,160
faster and I didn't really help anybody

00:10:36,070 --> 00:10:42,769
communication was was bad a story

00:10:40,160 --> 00:10:45,529
completion rate was horrible morale

00:10:42,769 --> 00:10:49,160
wasn't that great and so this went on

00:10:45,529 --> 00:10:51,079
for a while until finally we reached

00:10:49,160 --> 00:10:53,930
this breaking point where we had this

00:10:51,079 --> 00:10:55,670
kind of like you know the agile revival

00:10:53,930 --> 00:10:57,260
kind of thing and and you know whether

00:10:55,670 --> 00:11:00,110
or not you're into that or not that's a

00:10:57,260 --> 00:11:02,899
you know that's a different story but it

00:11:00,110 --> 00:11:04,910
a lot of this worked for us and what we

00:11:02,899 --> 00:11:06,740
found was that it was important for us

00:11:04,910 --> 00:11:09,770
to ensure that we were giving correct

00:11:06,740 --> 00:11:11,270
good feedback to our peers and the

00:11:09,770 --> 00:11:12,860
stand-up was a really great example of

00:11:11,270 --> 00:11:15,350
how to do that so it's a team we all

00:11:12,860 --> 00:11:17,390
kind of had this internal agreement

00:11:15,350 --> 00:11:20,300
about what a good stand-up look like and

00:11:17,390 --> 00:11:22,730
at the end of every stand up a little

00:11:20,300 --> 00:11:25,430
cheesy but we have a student scorecard

00:11:22,730 --> 00:11:27,920
when we say yes no was this good was

00:11:25,430 --> 00:11:31,130
this not good and if it was good why if

00:11:27,920 --> 00:11:34,730
it was not good why and maybe it wasn't

00:11:31,130 --> 00:11:36,320
good because one person was kind of out

00:11:34,730 --> 00:11:38,360
to lunch that day and I think it's

00:11:36,320 --> 00:11:40,339
important to kind of acknowledge that

00:11:38,360 --> 00:11:42,470
and discuss it and if this feels a

00:11:40,339 --> 00:11:45,200
little bit like gold stars in elementary

00:11:42,470 --> 00:11:47,420
school that's fine because that kind of

00:11:45,200 --> 00:11:49,040
stuff works yes no is a very clear

00:11:47,420 --> 00:11:51,860
answer on whether something is good or

00:11:49,040 --> 00:11:53,720
bad so back to that idea of giving

00:11:51,860 --> 00:11:56,779
negative feedback if something didn't go

00:11:53,720 --> 00:11:58,760
well being able to kind of provide that

00:11:56,779 --> 00:12:00,890
feedback is really important and it's

00:11:58,760 --> 00:12:03,260
it's really difficult in a professional

00:12:00,890 --> 00:12:05,480
setting to give negative feedback

00:12:03,260 --> 00:12:07,520
because we have this kind of idea of

00:12:05,480 --> 00:12:09,950
this connotation that that negative

00:12:07,520 --> 00:12:12,770
feedback has to be negative and that's

00:12:09,950 --> 00:12:17,180
really not the case negative isn't

00:12:12,770 --> 00:12:20,180
necessarily negative and one of the

00:12:17,180 --> 00:12:22,880
things that you know when you talk about

00:12:20,180 --> 00:12:24,320
giving negative feedback there's a few

00:12:22,880 --> 00:12:27,800
points that I want to make about how to

00:12:24,320 --> 00:12:30,830
do that to make sure that is both given

00:12:27,800 --> 00:12:35,390
properly and received will and that's

00:12:30,830 --> 00:12:38,390
this negative feedback needs to be

00:12:35,390 --> 00:12:40,670
accurate it needs to be contextually

00:12:38,390 --> 00:12:42,950
appropriate and that means you're not

00:12:40,670 --> 00:12:44,600
public she publicly shaming people and

00:12:42,950 --> 00:12:47,540
you're not dredging up things that

00:12:44,600 --> 00:12:50,630
happened two months ago and finally it

00:12:47,540 --> 00:12:55,160
should be delivered without emotion and

00:12:50,630 --> 00:12:57,829
thank you strange weird madcat emoticons

00:12:55,160 --> 00:13:01,070
for helping me make the point there so

00:12:57,829 --> 00:13:03,410
so once we got over this hump of being

00:13:01,070 --> 00:13:05,600
able to accurately describe and give

00:13:03,410 --> 00:13:07,059
feedback based on what's going on team

00:13:05,600 --> 00:13:09,309
communication go

00:13:07,059 --> 00:13:12,189
a lot better and surprisingly or maybe

00:13:09,309 --> 00:13:13,479
not surprisingly everything else started

00:13:12,189 --> 00:13:17,529
kind of falling in line and things

00:13:13,479 --> 00:13:18,699
started getting better so I would

00:13:17,529 --> 00:13:22,169
encourage you whether or not you believe

00:13:18,699 --> 00:13:24,309
in stand ups or find value in them

00:13:22,169 --> 00:13:25,959
there's a lot of ways that your team's

00:13:24,309 --> 00:13:28,299
communicate with each other whether it's

00:13:25,959 --> 00:13:30,489
in chat rooms or hangouts or stand-up

00:13:28,299 --> 00:13:32,769
meetings or status meetings or just

00:13:30,489 --> 00:13:34,599
other ways that you communicate and I

00:13:32,769 --> 00:13:37,419
mean encourage you to take advantage of

00:13:34,599 --> 00:13:39,549
the fact to both be very mindful about

00:13:37,419 --> 00:13:41,289
the feedback you're given giving and not

00:13:39,549 --> 00:13:47,019
shy away from negative feedback with

00:13:41,289 --> 00:13:49,419
your peers so the other thing rewinding

00:13:47,019 --> 00:13:50,919
to when a joint TripCase trip case at

00:13:49,419 --> 00:13:54,369
the time was kind of a lotta lithic

00:13:50,919 --> 00:13:58,079
rails application it was running on

00:13:54,369 --> 00:14:02,379
enterprise edition 187 and it was a

00:13:58,079 --> 00:14:04,479
rails 30 and I say it was rails 30

00:14:02,379 --> 00:14:07,179
because that was what was in the gem

00:14:04,479 --> 00:14:08,919
file but when you actually started

00:14:07,179 --> 00:14:11,769
digging in the code you found a very

00:14:08,919 --> 00:14:14,889
very healthy dose of weird monkey

00:14:11,769 --> 00:14:17,379
patched backports to restore rails to

00:14:14,889 --> 00:14:18,729
behavior and I don't know there had been

00:14:17,379 --> 00:14:20,799
a lot of turnover and I don't really

00:14:18,729 --> 00:14:22,509
know what the what the reason behind

00:14:20,799 --> 00:14:24,729
that was I assume that there was a lot

00:14:22,509 --> 00:14:26,739
of pressure to get to rails 3 for some

00:14:24,729 --> 00:14:28,659
reason but there was a lot of friction

00:14:26,739 --> 00:14:30,129
to doing that but it was difficult and

00:14:28,659 --> 00:14:32,769
so what they ended up doing was kind of

00:14:30,129 --> 00:14:35,109
taking this middle ground and it was a

00:14:32,769 --> 00:14:37,049
horrible middle ground that now we had

00:14:35,109 --> 00:14:39,279
inherited and kind of had to deal with

00:14:37,049 --> 00:14:41,529
and remember we were in the middle of

00:14:39,279 --> 00:14:43,779
this big stressful redesign and rewrite

00:14:41,529 --> 00:14:45,909
so it didn't seem like the appropriate

00:14:43,779 --> 00:14:48,639
time to dig up all the dead bodies about

00:14:45,909 --> 00:14:51,339
why those backports existed and what the

00:14:48,639 --> 00:14:54,699
right way forward was so we kind of let

00:14:51,339 --> 00:14:58,629
the upgrade path slip and we let it slip

00:14:54,699 --> 00:15:00,879
for a long time and I had kind of gotten

00:14:58,629 --> 00:15:02,349
support from the product team to say hey

00:15:00,879 --> 00:15:04,149
Winston Serena's o'neill's go out the

00:15:02,349 --> 00:15:05,919
door we really need to go in and start

00:15:04,149 --> 00:15:07,719
working in these upgrades and there was

00:15:05,919 --> 00:15:09,699
a lot of support and buy in on that and

00:15:07,719 --> 00:15:11,859
we felt confident that when redesign was

00:15:09,699 --> 00:15:14,109
out we could move forward so that

00:15:11,859 --> 00:15:17,769
happened in the last piece went out in

00:15:14,109 --> 00:15:20,470
January of 2013 and so now it was time

00:15:17,769 --> 00:15:22,600
we were excited it was time to start

00:15:20,470 --> 00:15:25,360
hang off some of these debt some of this

00:15:22,600 --> 00:15:27,490
debt and moving forward with the the

00:15:25,360 --> 00:15:30,940
upgrade path but I don't know if you

00:15:27,490 --> 00:15:32,140
remember last January in February but

00:15:30,940 --> 00:15:36,490
let me give you a little bit of a

00:15:32,140 --> 00:15:38,920
reminder the first thing that happened

00:15:36,490 --> 00:15:43,600
was a security update in early January

00:15:38,920 --> 00:15:46,750
not a big deal upgrade 30 18 not a

00:15:43,600 --> 00:15:50,350
problem not a week later another one

00:15:46,750 --> 00:15:52,390
three dot 19 everything's great get it

00:15:50,350 --> 00:15:56,290
in a move fast get it into production

00:15:52,390 --> 00:15:57,970
and then the big one happened this was

00:15:56,290 --> 00:16:00,040
the one that have the articles that said

00:15:57,970 --> 00:16:02,920
if you read this at 3am you need to get

00:16:00,040 --> 00:16:06,970
out of bed right now and run bundle

00:16:02,920 --> 00:16:10,450
update in production immediately so 30

00:16:06,970 --> 00:16:14,230
to 20 everything still seems flying or

00:16:10,450 --> 00:16:16,750
still on track with the update and then

00:16:14,230 --> 00:16:18,850
this one kind of surprised us because I

00:16:16,750 --> 00:16:21,490
don't know depending on whether or not

00:16:18,850 --> 00:16:24,210
you were on 383 dot 0 at the time you

00:16:21,490 --> 00:16:27,310
may not have noticed but there was no 30

00:16:24,210 --> 00:16:28,960
21 and there were articles you know

00:16:27,310 --> 00:16:30,520
rightfully explaining that this was no

00:16:28,960 --> 00:16:32,140
longer part of the upgrade path that

00:16:30,520 --> 00:16:33,670
wasn't a supported version it wasn't

00:16:32,140 --> 00:16:38,530
even supposed to have been for the other

00:16:33,670 --> 00:16:40,210
ones so now our our plan of kind of

00:16:38,530 --> 00:16:43,180
doing these upgrades and small pieces

00:16:40,210 --> 00:16:44,530
over time you know the rug got ripped

00:16:43,180 --> 00:16:46,570
out from underneath this and all of a

00:16:44,530 --> 00:16:48,910
sudden our upgrade now turned into a big

00:16:46,570 --> 00:16:52,140
hairy emergency fire drill that we had

00:16:48,910 --> 00:16:55,810
to do right away so everybody jumped in

00:16:52,140 --> 00:17:00,330
and actually the night before big Ruby

00:16:55,810 --> 00:17:02,680
last year we put 31 into production and

00:17:00,330 --> 00:17:05,140
maybe that was a long time ago for some

00:17:02,680 --> 00:17:08,020
of you but if you don't remember active

00:17:05,140 --> 00:17:12,070
record performance in 3 tunt one was was

00:17:08,020 --> 00:17:14,110
really had a lot to be desired and so

00:17:12,070 --> 00:17:16,450
immediately on getting that out and

00:17:14,110 --> 00:17:18,610
getting back on a supported version we

00:17:16,450 --> 00:17:22,780
had another big fire drill which is a

00:17:18,610 --> 00:17:25,240
performance sucks move to 32 so very

00:17:22,780 --> 00:17:27,809
soon thereafter another high stress

00:17:25,240 --> 00:17:31,139
environment another big magnitude

00:17:27,809 --> 00:17:34,590
change we put 32 into production so

00:17:31,139 --> 00:17:42,690
finally some breathing room but we knew

00:17:34,590 --> 00:17:44,249
that this was coming so we we knew you

00:17:42,690 --> 00:17:45,600
know that we have plenty of warning and

00:17:44,249 --> 00:17:48,330
we knew what was this may be the end of

00:17:45,600 --> 00:17:50,610
June that Ruby 187 was going to be end

00:17:48,330 --> 00:17:52,169
of life and we talked to everybody and

00:17:50,610 --> 00:17:55,379
it was time and we're going to get it

00:17:52,169 --> 00:17:57,809
right this time and we did a lot of

00:17:55,379 --> 00:18:00,240
things right we created a branch we set

00:17:57,809 --> 00:18:02,249
up CI builds for 193 so that we could

00:18:00,240 --> 00:18:04,710
kind of measure our progress on fixing

00:18:02,249 --> 00:18:06,299
tests we set up dev environment so that

00:18:04,710 --> 00:18:08,909
we could hammer it with our selenium

00:18:06,299 --> 00:18:11,009
tests everything was great but

00:18:08,909 --> 00:18:13,619
unfortunately we got one big thing wrong

00:18:11,009 --> 00:18:16,559
with the Ruby 193 branch and that was

00:18:13,619 --> 00:18:18,539
that we did all the changes in the

00:18:16,559 --> 00:18:21,600
branch and it was a very very long

00:18:18,539 --> 00:18:24,179
running branch so once again this idea

00:18:21,600 --> 00:18:27,450
of big stressful events we had to merge

00:18:24,179 --> 00:18:31,889
that branch eventually and it was big

00:18:27,450 --> 00:18:35,009
and it was stressful in fact here's kind

00:18:31,889 --> 00:18:37,649
of just 11 screen full of the files that

00:18:35,009 --> 00:18:41,909
were changed in this in this merge

00:18:37,649 --> 00:18:45,090
request or in this merge and so when we

00:18:41,909 --> 00:18:46,889
finished with this we have been through

00:18:45,090 --> 00:18:49,860
the stress of this again and it was kind

00:18:46,889 --> 00:18:52,889
of like we had systematically taught

00:18:49,860 --> 00:18:55,590
ourselves through this feedback that

00:18:52,889 --> 00:18:59,039
upgrades suck and that every time

00:18:55,590 --> 00:19:00,659
there's an upgrade it's gonna suck so

00:18:59,039 --> 00:19:03,749
when we started in on the Ruby 20

00:19:00,659 --> 00:19:06,990
upgrade we finally decided to get it

00:19:03,749 --> 00:19:11,820
right and so when we looked at this the

00:19:06,990 --> 00:19:14,490
193 upgrade most of these changes were

00:19:11,820 --> 00:19:16,889
not knife-edge cut overs between 187 and

00:19:14,490 --> 00:19:19,200
193 most of them could live very happily

00:19:16,889 --> 00:19:21,960
on both sides of the fence and could

00:19:19,200 --> 00:19:24,659
have just as easily been merged into one

00:19:21,960 --> 00:19:28,440
eight seven months ago and gone into

00:19:24,659 --> 00:19:31,049
production for testing so when we do 20

00:19:28,440 --> 00:19:32,429
I think we finally kind of learned some

00:19:31,049 --> 00:19:34,379
lessons and did it the right way which

00:19:32,429 --> 00:19:36,570
is we created the branch we created the

00:19:34,379 --> 00:19:38,850
Jenkins builds we had dev environments

00:19:36,570 --> 00:19:39,590
but as we made changes in that branch

00:19:38,850 --> 00:19:42,049
and either

00:19:39,590 --> 00:19:44,270
fixed deprecation zor did library

00:19:42,049 --> 00:19:46,429
upgrades we asked ourselves is this

00:19:44,270 --> 00:19:49,880
atomic and orthogonal to what we're

00:19:46,429 --> 00:19:52,700
doing here and will it work in Ruby 193

00:19:49,880 --> 00:19:55,669
and if the answer was yes we pulled that

00:19:52,700 --> 00:19:57,830
out created a pull request just for that

00:19:55,669 --> 00:20:00,740
one bit of functionality committed it to

00:19:57,830 --> 00:20:04,970
193 it got it into production and so

00:20:00,740 --> 00:20:07,220
finally when we got to the Ruby 20 final

00:20:04,970 --> 00:20:08,960
merge of that branch this is what it

00:20:07,220 --> 00:20:10,940
ended up looking like it was kind of

00:20:08,960 --> 00:20:15,250
anticlimactic it was a very little

00:20:10,940 --> 00:20:17,870
magnitude no stress pretty easy so

00:20:15,250 --> 00:20:20,659
thankfully we are now running 20 in

00:20:17,870 --> 00:20:22,640
production and I think the two one

00:20:20,659 --> 00:20:26,510
release will follow soon behind and will

00:20:22,640 --> 00:20:30,860
hopefully follow this same model so this

00:20:26,510 --> 00:20:33,200
exists right and for the teams out there

00:20:30,860 --> 00:20:35,600
that you know we're running rails too

00:20:33,200 --> 00:20:38,240
and love it for you know whatever

00:20:35,600 --> 00:20:40,580
reasons performance and maybe just a lot

00:20:38,240 --> 00:20:44,600
of customization that's been built up

00:20:40,580 --> 00:20:46,250
this is a good idea but I don't ever

00:20:44,600 --> 00:20:48,190
want to end up in a situation where I'm

00:20:46,250 --> 00:20:50,779
having to look for something like this

00:20:48,190 --> 00:20:54,169
purely by accident because somehow

00:20:50,779 --> 00:20:56,029
through inertia I got my back up against

00:20:54,169 --> 00:20:58,850
a wall and couldn't make an upgrade

00:20:56,029 --> 00:21:02,539
happen even though serious security

00:20:58,850 --> 00:21:06,529
updates were coming out so take your

00:21:02,539 --> 00:21:08,419
upgrade path seriously you know no one

00:21:06,529 --> 00:21:10,669
working on trip case in the early days

00:21:08,419 --> 00:21:12,980
thought that that was going to happen

00:21:10,669 --> 00:21:16,549
that we were going to end up in a weird

00:21:12,980 --> 00:21:18,919
stressful situation with upgrades so

00:21:16,549 --> 00:21:20,539
taken in small steps don't don't put it

00:21:18,919 --> 00:21:23,000
all into one branch and try to merge it

00:21:20,539 --> 00:21:24,760
into once find the duplications fix them

00:21:23,000 --> 00:21:28,399
get them into your current code base

00:21:24,760 --> 00:21:35,720
make it happen infrequent low magnitude

00:21:28,399 --> 00:21:39,470
steps deployments pushing code into

00:21:35,720 --> 00:21:41,690
production should be the best thing we

00:21:39,470 --> 00:21:46,429
do it should be our most exciting

00:21:41,690 --> 00:21:48,760
moments as engineers but too often this

00:21:46,429 --> 00:21:48,760
is what happens

00:21:50,509 --> 00:22:00,499
I can't imagine well I can't imagine

00:21:57,769 --> 00:22:04,009
because I've lived it it's a horrible

00:22:00,499 --> 00:22:08,749
sad thing when a development team stops

00:22:04,009 --> 00:22:13,279
looking forward to releases when release

00:22:08,749 --> 00:22:17,839
night gives you indigestion when you

00:22:13,279 --> 00:22:20,299
don't look forward to it right Jasmine

00:22:17,839 --> 00:22:23,089
Lee was one of the authors on continuous

00:22:20,299 --> 00:22:25,479
delivery he's got a great article that

00:22:23,089 --> 00:22:27,799
talks about principles of low-risk

00:22:25,479 --> 00:22:33,019
releases and I want to talk about a few

00:22:27,799 --> 00:22:35,229
of those this morning so the first one

00:22:33,019 --> 00:22:38,179
well risk releases are incremental

00:22:35,229 --> 00:22:41,479
upgrading in a BIGBANG BIGBANG release

00:22:38,179 --> 00:22:43,929
is the highest risk way to roll out new

00:22:41,479 --> 00:22:47,769
functionality very high magnitude

00:22:43,929 --> 00:22:50,389
instead deploy components independently

00:22:47,769 --> 00:22:52,549
database changes can also be ruled out

00:22:50,389 --> 00:22:56,929
incrementally so I want to point out

00:22:52,549 --> 00:23:00,649
that in the early stages this is great

00:22:56,929 --> 00:23:04,279
this is lovely rails migrations were

00:23:00,649 --> 00:23:07,789
huge right they took a lot of the burden

00:23:04,279 --> 00:23:10,579
away and made it a lot easier to kind of

00:23:07,789 --> 00:23:12,289
move our database forward but when you

00:23:10,579 --> 00:23:13,729
get big all of a sudden you're going to

00:23:12,289 --> 00:23:17,389
find that you have a table and

00:23:13,729 --> 00:23:20,329
production that has 20 plus million rows

00:23:17,389 --> 00:23:23,359
and it was added very early on in the

00:23:20,329 --> 00:23:25,429
project when timestamp columns warrant

00:23:23,359 --> 00:23:27,649
automatic writing you're going to find

00:23:25,429 --> 00:23:30,499
at that table for some reason has it

00:23:27,649 --> 00:23:32,179
created add column but not an updated at

00:23:30,499 --> 00:23:35,059
and you're going to all of a sudden have

00:23:32,179 --> 00:23:36,889
a business intelligence requirement that

00:23:35,059 --> 00:23:39,259
takes you know that really needs that

00:23:36,889 --> 00:23:41,089
updated add column so this all of a

00:23:39,259 --> 00:23:44,479
sudden is no longer going to work for

00:23:41,089 --> 00:23:46,999
you so taking and setting up a process

00:23:44,479 --> 00:23:48,889
in which you can get those schema

00:23:46,999 --> 00:23:51,889
changes and other database migrations

00:23:48,889 --> 00:23:54,529
out of your deployment process and into

00:23:51,889 --> 00:23:56,989
you know we use some pro Kona tools for

00:23:54,529 --> 00:23:59,839
online schema changes or schema

00:23:56,989 --> 00:24:00,440
migrations but getting that out of your

00:23:59,839 --> 00:24:02,390
deploying

00:24:00,440 --> 00:24:05,630
it so that your deployment in and of

00:24:02,390 --> 00:24:08,780
itself is low magnitude is a really

00:24:05,630 --> 00:24:10,670
important thing to do for incident to

00:24:08,780 --> 00:24:13,340
decouple deployment and release

00:24:10,670 --> 00:24:15,620
deployments or what happens when you

00:24:13,340 --> 00:24:18,650
deploy code when you put code in a new

00:24:15,620 --> 00:24:20,240
environment release is what happens when

00:24:18,650 --> 00:24:23,090
you make some part of that system

00:24:20,240 --> 00:24:25,190
available to users so really what we're

00:24:23,090 --> 00:24:28,280
talking about here are feature flippers

00:24:25,190 --> 00:24:31,640
right future toggles and the idea here

00:24:28,280 --> 00:24:34,120
is that if you if you deploy everything

00:24:31,640 --> 00:24:37,130
and turn everything off in one big bang

00:24:34,120 --> 00:24:39,140
everybody's online everybody's got to be

00:24:37,130 --> 00:24:41,360
there from start to finish to do

00:24:39,140 --> 00:24:42,590
checkouts and verification and smoke

00:24:41,360 --> 00:24:44,810
tests and everything else that goes

00:24:42,590 --> 00:24:47,360
along with it but if you can split these

00:24:44,810 --> 00:24:49,430
things all of a sudden you can go back

00:24:47,360 --> 00:24:52,400
to the original theory that I brought up

00:24:49,430 --> 00:24:54,590
which is high frequency low magnitude so

00:24:52,400 --> 00:24:57,260
push the code everything's working check

00:24:54,590 --> 00:24:59,390
the graph let's go to sleep the next day

00:24:57,260 --> 00:25:01,460
the team that was actually involved in

00:24:59,390 --> 00:25:04,430
that feature can be the ones to be

00:25:01,460 --> 00:25:07,940
online and choose when that feature goes

00:25:04,430 --> 00:25:09,560
live right turn it on they're also you

00:25:07,940 --> 00:25:11,360
know also the other benefit of future

00:25:09,560 --> 00:25:14,360
toggles is that you can turn it right

00:25:11,360 --> 00:25:15,350
back off of things are not good so you

00:25:14,360 --> 00:25:17,900
know we've already mentioned some of

00:25:15,350 --> 00:25:20,690
these today rollout and degrade as great

00:25:17,900 --> 00:25:23,960
tools TripCase kind of has a bit of a

00:25:20,690 --> 00:25:26,600
homegrown animal toggle that you know

00:25:23,960 --> 00:25:28,730
has a lot to you know be desired and can

00:25:26,600 --> 00:25:32,350
be improved a lot but it still does the

00:25:28,730 --> 00:25:35,930
job that we're looking to to get done

00:25:32,350 --> 00:25:38,060
principle number three when you deploy

00:25:35,930 --> 00:25:40,520
to production more often you're

00:25:38,060 --> 00:25:42,140
practicing the deployment and that's the

00:25:40,520 --> 00:25:43,820
important thing here right if you're in

00:25:42,140 --> 00:25:45,830
deployment if you're not confident in

00:25:43,820 --> 00:25:48,920
your deployment and you release once a

00:25:45,830 --> 00:25:52,220
month you are getting 12 opportunities

00:25:48,920 --> 00:25:55,340
to get feedback and improve upon that I

00:25:52,220 --> 00:25:56,990
think that's a tragic right here's

00:25:55,340 --> 00:25:59,300
something that you know should be better

00:25:56,990 --> 00:26:00,950
and that you want to be better if you're

00:25:59,300 --> 00:26:03,410
not doing something to make sure that

00:26:00,950 --> 00:26:06,260
you're getting an opportunity to

00:26:03,410 --> 00:26:08,660
practice that then some change you

00:26:06,260 --> 00:26:11,810
should make some changes for example you

00:26:08,660 --> 00:26:13,299
know there's no reason why you know

00:26:11,810 --> 00:26:16,210
there's some risk involved

00:26:13,299 --> 00:26:18,970
pushing the same code again but why not

00:26:16,210 --> 00:26:21,190
practice it make it as low risk as

00:26:18,970 --> 00:26:24,399
possible to practice your deployments as

00:26:21,190 --> 00:26:26,440
often as possible and of course smaller

00:26:24,399 --> 00:26:29,649
chainsets are going in so it's much

00:26:26,440 --> 00:26:32,889
easier to figure out what went wrong cpu

00:26:29,649 --> 00:26:35,679
went up by ten percent let's go dig

00:26:32,889 --> 00:26:38,559
through the the commits from the last

00:26:35,679 --> 00:26:42,149
release that's a horrible situation to

00:26:38,559 --> 00:26:47,440
be in when you have to dig through 12

00:26:42,149 --> 00:26:49,779
you know a full month of changes so the

00:26:47,440 --> 00:26:51,460
last thing about deployments is that the

00:26:49,779 --> 00:26:54,309
frequency and magnitude of your

00:26:51,460 --> 00:26:58,720
deployments can have a big impact on the

00:26:54,309 --> 00:27:02,350
behavior of your development teams for

00:26:58,720 --> 00:27:04,570
example whatever feature is almost done

00:27:02,350 --> 00:27:07,629
the release you know code freezes

00:27:04,570 --> 00:27:09,909
tomorrow it's almost done so what do we

00:27:07,629 --> 00:27:13,679
do well we have two choices we can

00:27:09,909 --> 00:27:17,169
either rush it or we can wait forever

00:27:13,679 --> 00:27:19,659
right and nine times out of 10 because

00:27:17,169 --> 00:27:22,239
we want to get that code out there we're

00:27:19,659 --> 00:27:24,970
going to choose the former and that

00:27:22,239 --> 00:27:29,350
increases the risk of this already high

00:27:24,970 --> 00:27:31,809
magnitude event that's happening so if

00:27:29,350 --> 00:27:35,559
we take this approach it's basically the

00:27:31,809 --> 00:27:38,259
same except for this is a very short

00:27:35,559 --> 00:27:40,629
time so it's kind of this analogy of

00:27:38,259 --> 00:27:43,509
trains leaving the station if I am

00:27:40,629 --> 00:27:45,249
getting out of my car to walk up to the

00:27:43,509 --> 00:27:47,739
platform to catch a train and I know

00:27:45,249 --> 00:27:52,090
it's the last train of the day I'm going

00:27:47,739 --> 00:27:54,279
to run whereas if I know another one is

00:27:52,090 --> 00:27:59,139
going to be along in five minutes I may

00:27:54,279 --> 00:28:01,600
take my tongue so I think those are just

00:27:59,139 --> 00:28:03,999
a few examples in what I've seen working

00:28:01,600 --> 00:28:06,399
a trip case that kind of exemplify this

00:28:03,999 --> 00:28:08,139
model of keeping things small keeping

00:28:06,399 --> 00:28:11,440
things frequent keeping them as low

00:28:08,139 --> 00:28:13,779
stress and low anxiety as possible and

00:28:11,440 --> 00:28:15,039
this is not a new idea right this is

00:28:13,779 --> 00:28:19,350
something that we talked about quite a

00:28:15,039 --> 00:28:21,710
bit here's kind of an oldie but a goodie

00:28:19,350 --> 00:28:26,120
Jason freed from the

00:28:21,710 --> 00:28:30,110
you know basecamp company make tiny

00:28:26,120 --> 00:28:34,100
decisions tiny decisions or easier to

00:28:30,110 --> 00:28:37,429
change their less costly take big

00:28:34,100 --> 00:28:40,070
projects take big complex processes and

00:28:37,429 --> 00:28:45,980
make them as tiny and frequent and low

00:28:40,070 --> 00:28:48,890
magnitude as possible so this is the the

00:28:45,980 --> 00:28:51,799
first conference talk out given its and

00:28:48,890 --> 00:28:53,330
it's been really good for me to kind of

00:28:51,799 --> 00:28:56,179
prepare these slides not least of which

00:28:53,330 --> 00:28:58,429
is that it kind of forced me to stop

00:28:56,179 --> 00:29:01,190
playing threes and get back to working

00:28:58,429 --> 00:29:04,490
on my slide deck so I really appreciate

00:29:01,190 --> 00:29:07,640
the opportunity to get up here and share

00:29:04,490 --> 00:29:12,340
some thoughts about working on a big

00:29:07,640 --> 00:29:12,340
roomy application so thank

00:29:24,750 --> 00:29:26,810

YouTube URL: https://www.youtube.com/watch?v=Y2EWl2R9c0o


