Title: Aloha Ruby Conference 2012 Git and GitHub Secrets by Zach Holman
Publication date: 2020-01-28
Playlist: Aloha RubyConf 2012
Description: 
	Help us caption & translate this video!

http://amara.org/v/FGgS/
Captions: 
	00:00:15,070 --> 00:00:20,660
we're gonna talk about git and github

00:00:17,119 --> 00:00:22,520
and secrets today I'm Zack Holman I'm

00:00:20,660 --> 00:00:24,740
Holman on Twitter home and on github you

00:00:22,520 --> 00:00:27,050
can do the needful there and I work for

00:00:24,740 --> 00:00:29,119
github incorporated we host source code

00:00:27,050 --> 00:00:30,589
if you don't know what github is this

00:00:29,119 --> 00:00:33,470
talk is gonna be really confusing for

00:00:30,589 --> 00:00:35,900
you first thing I want to let you know

00:00:33,470 --> 00:00:37,760
is I'm not a smart guy I'm really kind

00:00:35,900 --> 00:00:39,379
of dim-witted not a bright dude but I

00:00:37,760 --> 00:00:42,500
hang around lots of smart people these

00:00:39,379 --> 00:00:45,980
are all my co-workers at github a lot of

00:00:42,500 --> 00:00:47,510
them now kind of weird but there's a lot

00:00:45,980 --> 00:00:49,070
of people here and just by hanging out

00:00:47,510 --> 00:00:51,440
with them just by being in chat rooms

00:00:49,070 --> 00:00:53,300
with them I end up learning a whole

00:00:51,440 --> 00:00:55,070
bunch of valuable stuff unfortunately

00:00:53,300 --> 00:00:57,579
this is mostly the valuable stuff I

00:00:55,070 --> 00:01:00,379
learn as we post things in the campfire

00:00:57,579 --> 00:01:03,109
so I'm really good at like tacos and

00:01:00,379 --> 00:01:04,580
eating I guess sometimes I just go to

00:01:03,109 --> 00:01:08,450
sleep with this on my screen because

00:01:04,580 --> 00:01:10,700
it's just it really gets me going but

00:01:08,450 --> 00:01:13,060
also we talk about git I like to read a

00:01:10,700 --> 00:01:15,800
lot of the tweets you guys send a github

00:01:13,060 --> 00:01:18,380
support requests blog post discussions

00:01:15,800 --> 00:01:20,450
and just sort of by reading all this

00:01:18,380 --> 00:01:23,450
stuff I end up learning a lot about git

00:01:20,450 --> 00:01:25,789
about github about problems people end

00:01:23,450 --> 00:01:27,590
up facing and I think there's a lot of

00:01:25,789 --> 00:01:29,660
stuff I can talk about so we're gonna

00:01:27,590 --> 00:01:30,739
talk about that today and that's gonna

00:01:29,660 --> 00:01:33,050
be the goal I'm gonna throw a whole

00:01:30,739 --> 00:01:35,119
bunch of stuff at you sometimes my talks

00:01:33,050 --> 00:01:36,860
are much more higher-level philosophical

00:01:35,119 --> 00:01:39,560
blah blah blah that's not this talk I'm

00:01:36,860 --> 00:01:41,209
gonna be going quickly past a bunch of

00:01:39,560 --> 00:01:43,280
different information you can take notes

00:01:41,209 --> 00:01:45,349
if you want I'll throw these slides up

00:01:43,280 --> 00:01:47,149
online afterwards so if you want to

00:01:45,349 --> 00:01:50,360
track something down some weird arcane

00:01:47,149 --> 00:01:51,880
git command besides all of them you can

00:01:50,360 --> 00:01:55,090
go back and check them out later so

00:01:51,880 --> 00:01:58,640
first what is the secret

00:01:55,090 --> 00:02:01,160
forget basically everything is a secret

00:01:58,640 --> 00:02:02,989
because the UI of git is ridiculous so

00:02:01,160 --> 00:02:06,319
I'll talk a little bit about that for

00:02:02,989 --> 00:02:07,970
github for us it sort of features that

00:02:06,319 --> 00:02:10,099
don't make it into the UI is what I'll

00:02:07,970 --> 00:02:11,450
call a secret for this sort of thing and

00:02:10,099 --> 00:02:14,180
that's a bunch of stuff for us we have

00:02:11,450 --> 00:02:15,080
hidden HTML tip tools email hacks we

00:02:14,180 --> 00:02:17,540
have a whole bunch of different things

00:02:15,080 --> 00:02:19,970
we put inside the website that we don't

00:02:17,540 --> 00:02:23,090
necessarily make a big deal about we

00:02:19,970 --> 00:02:24,200
don't announce we may not add buttons to

00:02:23,090 --> 00:02:26,510
these things but we still have them in

00:02:24,200 --> 00:02:27,360
the product the whole reason behind all

00:02:26,510 --> 00:02:28,410
of this

00:02:27,360 --> 00:02:31,980
so we can experiment with different

00:02:28,410 --> 00:02:33,780
things and oh by the end of this talk

00:02:31,980 --> 00:02:35,370
you're gonna say you know that looks

00:02:33,780 --> 00:02:36,690
really cool I like that feature why

00:02:35,370 --> 00:02:38,970
don't you just add a button and add to

00:02:36,690 --> 00:02:40,350
the UI that'll be so awesome so I

00:02:38,970 --> 00:02:42,570
decided to mock that up what would

00:02:40,350 --> 00:02:43,830
happen and this is basically what github

00:02:42,570 --> 00:02:46,500
would look like if we did all of that

00:02:43,830 --> 00:02:50,640
stuff with the exception of Hasselhoff

00:02:46,500 --> 00:02:52,500
all the other stuff can go but what we

00:02:50,640 --> 00:02:54,480
try to do is aim for simplicity and we

00:02:52,500 --> 00:02:56,190
try to be flexible so we're gonna try

00:02:54,480 --> 00:02:58,200
and make the the most simple product we

00:02:56,190 --> 00:03:01,110
can but if it's possible we can add like

00:02:58,200 --> 00:03:03,209
a URL parameter to do something cool on

00:03:01,110 --> 00:03:04,590
the website for those power users we

00:03:03,209 --> 00:03:06,150
want to make it flexible enough to do

00:03:04,590 --> 00:03:10,440
that so I'm sort of talking about the

00:03:06,150 --> 00:03:12,420
flexible in this talk so it'll be two

00:03:10,440 --> 00:03:14,459
parts get in github let's start out with

00:03:12,420 --> 00:03:17,010
github and then we'll just dive right

00:03:14,459 --> 00:03:19,160
into it you can take breaths in between

00:03:17,010 --> 00:03:21,690
slides it'll be quick

00:03:19,160 --> 00:03:24,840
different patch if you add diff or dot

00:03:21,690 --> 00:03:26,970
patch to any sort of diff URL on line

00:03:24,840 --> 00:03:29,760
we'll end up generating the text only

00:03:26,970 --> 00:03:31,200
output of that command through git so if

00:03:29,760 --> 00:03:32,190
you're ever dealing with anything like

00:03:31,200 --> 00:03:33,989
the command line if you want to do a

00:03:32,190 --> 00:03:35,250
quick script just to get like the you

00:03:33,989 --> 00:03:37,920
know what actually changing this commit

00:03:35,250 --> 00:03:39,570
you'll get the diff output that way just

00:03:37,920 --> 00:03:41,880
that dot diff or dot patch to any URL

00:03:39,570 --> 00:03:43,560
this works not just on zip ages but also

00:03:41,880 --> 00:03:44,070
on compare views pull request commit

00:03:43,560 --> 00:03:45,540
pages

00:03:44,070 --> 00:03:47,040
anything that has a diff it has a

00:03:45,540 --> 00:03:50,340
textual representation that you can

00:03:47,040 --> 00:03:54,570
access just by adding those the file

00:03:50,340 --> 00:03:57,780
names to the URL also if you ever have

00:03:54,570 --> 00:03:59,519
those people on your team I like to call

00:03:57,780 --> 00:04:03,180
them dicks who don't control their

00:03:59,519 --> 00:04:04,620
whitespace and they just commit like you

00:04:03,180 --> 00:04:06,959
know trailing whitespace and all these

00:04:04,620 --> 00:04:09,180
other white spaces after you fire them

00:04:06,959 --> 00:04:11,610
you can go in and add W equals one to

00:04:09,180 --> 00:04:13,680
the URL and then we'll just truncate all

00:04:11,610 --> 00:04:15,060
of those white spaces so we'll actually

00:04:13,680 --> 00:04:17,549
show you what actually changed rather

00:04:15,060 --> 00:04:20,780
than these forty lines are just like now

00:04:17,549 --> 00:04:24,510
different and it's very confusing

00:04:20,780 --> 00:04:30,020
also subversion obviously I like it I

00:04:24,510 --> 00:04:32,250
think it is okay subversion is exists

00:04:30,020 --> 00:04:34,140
but the cool thing with github that not

00:04:32,250 --> 00:04:35,789
allow people know about is we're the

00:04:34,140 --> 00:04:36,900
largest get hosts online but we're also

00:04:35,789 --> 00:04:38,400
the largest subversion

00:04:36,900 --> 00:04:40,199
host online because every single get

00:04:38,400 --> 00:04:42,930
repository on github is also a

00:04:40,199 --> 00:04:45,660
subversion repository we do this via a

00:04:42,930 --> 00:04:48,180
special thespian get service layer on

00:04:45,660 --> 00:04:50,490
our set of things and so when you send a

00:04:48,180 --> 00:04:52,860
subversion call to github we translate

00:04:50,490 --> 00:04:55,889
those calls on our side into get calls

00:04:52,860 --> 00:04:58,440
on our servers and then do the the

00:04:55,889 --> 00:05:02,340
corresponding action on the get the git

00:04:58,440 --> 00:05:04,470
repo on our servers so you can do stuff

00:05:02,340 --> 00:05:06,900
like SPN checkout and then pass it a

00:05:04,470 --> 00:05:08,610
repository on github and then it'll do

00:05:06,900 --> 00:05:10,380
everything that subversion does and we

00:05:08,610 --> 00:05:13,229
support almost all of the subversion

00:05:10,380 --> 00:05:15,090
commands at this point and the the code

00:05:13,229 --> 00:05:17,220
to do that is just black magic and I'm

00:05:15,090 --> 00:05:18,750
just amazed but you guys can use the

00:05:17,220 --> 00:05:21,600
effects very easily if you're into

00:05:18,750 --> 00:05:24,750
subversion also I want to talk about

00:05:21,600 --> 00:05:26,130
HTTP and SSH for a little bit a little

00:05:24,750 --> 00:05:28,229
bit ago a couple months ago we did some

00:05:26,130 --> 00:05:30,840
self changes to the site you may or may

00:05:28,229 --> 00:05:34,080
not have noticed previously we used to

00:05:30,840 --> 00:05:36,210
have this on every repository page the

00:05:34,080 --> 00:05:39,479
SSH would default as the protocol you

00:05:36,210 --> 00:05:41,460
would pull down to cologne repository we

00:05:39,479 --> 00:05:44,340
switched this to be HTTP a little bit

00:05:41,460 --> 00:05:48,060
ago and then by default you'll have the

00:05:44,340 --> 00:05:50,250
HTTP URL up on the page they can clone

00:05:48,060 --> 00:05:52,680
down you may be asking yourself why why

00:05:50,250 --> 00:05:53,880
would they do this there's a bunch of

00:05:52,680 --> 00:05:56,340
different reasons that we're doing this

00:05:53,880 --> 00:05:59,310
one we're using smart initially a smart

00:05:56,340 --> 00:06:01,560
HTTP here rather than the old dumb HTTP

00:05:59,310 --> 00:06:03,510
which is really slow basically this just

00:06:01,560 --> 00:06:05,159
means we have efficient service ID pack

00:06:03,510 --> 00:06:07,710
file generations so we can send those

00:06:05,159 --> 00:06:09,000
packets back to you really quickly if

00:06:07,710 --> 00:06:11,970
you're ever in a corporate environment

00:06:09,000 --> 00:06:15,000
maybe not a lot of you in this room but

00:06:11,970 --> 00:06:17,070
firewalls are horrible and this is kind

00:06:15,000 --> 00:06:19,440
of a big barrier to a lot of people

00:06:17,070 --> 00:06:21,300
using SSH for all their good stuff also

00:06:19,440 --> 00:06:22,740
a key generation which is really good

00:06:21,300 --> 00:06:26,130
for people on Windows or if you're not a

00:06:22,740 --> 00:06:28,260
neckbeard for every single person in

00:06:26,130 --> 00:06:31,260
this room that may be able to set up an

00:06:28,260 --> 00:06:33,930
SSH key easily I can show you 50 people

00:06:31,260 --> 00:06:36,300
who have no idea how that works so all

00:06:33,930 --> 00:06:39,060
of this stuff is a lot harder for SSH

00:06:36,300 --> 00:06:41,490
for most people most of you are probably

00:06:39,060 --> 00:06:43,530
still like I don't care none of those

00:06:41,490 --> 00:06:44,940
things are really relevant to me the

00:06:43,530 --> 00:06:47,520
problem which again you guys may have

00:06:44,940 --> 00:06:48,539
run into is if you if you pull down an

00:06:47,520 --> 00:06:51,749
HTP

00:06:48,539 --> 00:06:53,879
URL cloned by accident when you wanted

00:06:51,749 --> 00:06:55,379
SSH that's all fine but you'll get the

00:06:53,879 --> 00:06:59,009
username prompt and then your password

00:06:55,379 --> 00:07:00,599
prompt to github which is obviously

00:06:59,009 --> 00:07:01,770
nobody wants to type the same username

00:07:00,599 --> 00:07:04,559
and password over and over and over

00:07:01,770 --> 00:07:06,870
again this was remedied and get one

00:07:04,559 --> 00:07:09,719
seven nine with something called

00:07:06,870 --> 00:07:10,770
credential caching if you this URL will

00:07:09,719 --> 00:07:13,229
help you set it up on your particular

00:07:10,770 --> 00:07:15,059
distribution if you're on a Mac the

00:07:13,229 --> 00:07:16,800
newest homebrew installs this by default

00:07:15,059 --> 00:07:18,419
and then I'll store all of your

00:07:16,800 --> 00:07:20,189
credentials inside a keychain really

00:07:18,419 --> 00:07:21,569
securely which is really nice so I don't

00:07:20,189 --> 00:07:23,610
have to keep typing all that stuff over

00:07:21,569 --> 00:07:25,650
and over again if you still don't care

00:07:23,610 --> 00:07:26,279
just click SSH and we're gonna remember

00:07:25,650 --> 00:07:30,449
that forever

00:07:26,279 --> 00:07:32,879
so that's the TLDR on that one cloning

00:07:30,449 --> 00:07:37,050
without the dot git yeah you can just

00:07:32,879 --> 00:07:39,449
clone the URL that's cool I like that we

00:07:37,050 --> 00:07:41,430
like to call something called github HD

00:07:39,449 --> 00:07:44,069
sort of which is kind of everyone's been

00:07:41,430 --> 00:07:46,680
doing this lightly everyone loves our

00:07:44,069 --> 00:07:50,099
new icon sets obviously no arguments

00:07:46,680 --> 00:07:51,599
there right but if you if you command +

00:07:50,099 --> 00:07:54,330
on a Mac or whatever it is on Windows or

00:07:51,599 --> 00:07:56,310
you pinch-to-zoom on iOS you'll get like

00:07:54,330 --> 00:07:57,960
the nice page and then we'll zoom in all

00:07:56,310 --> 00:07:59,849
the icons are nice crisp and you can

00:07:57,960 --> 00:08:01,710
zoom in and zoom in and zoom in and it

00:07:59,849 --> 00:08:03,240
looks really nice this is obviously a

00:08:01,710 --> 00:08:05,039
big deal with the whole retina max

00:08:03,240 --> 00:08:07,999
which I have one is awesome you should

00:08:05,039 --> 00:08:10,499
get one and if you like pixels I guess

00:08:07,999 --> 00:08:12,810
so that's kind of a fun thing I'd

00:08:10,499 --> 00:08:14,310
suggest you guys looking into icon sets

00:08:12,810 --> 00:08:16,499
on your own sites it's kind of a nice

00:08:14,310 --> 00:08:18,409
way to get this crisp and clear for

00:08:16,499 --> 00:08:21,689
everything

00:08:18,409 --> 00:08:24,029
also auditing some organizations a lot

00:08:21,689 --> 00:08:26,969
more paranoid about security rightfully

00:08:24,029 --> 00:08:29,669
so so sort of a lesser-known

00:08:26,969 --> 00:08:31,560
tab in your settings it's a security tab

00:08:29,669 --> 00:08:33,029
and I'll show you public keys that get

00:08:31,560 --> 00:08:35,459
created or edited or added to your

00:08:33,029 --> 00:08:37,050
account and also repositories that may

00:08:35,459 --> 00:08:38,729
get deleted so you can go in and say oh

00:08:37,050 --> 00:08:39,810
somebody added this repository this

00:08:38,729 --> 00:08:42,690
public key to my account

00:08:39,810 --> 00:08:43,919
you know two weeks ago maybe I should go

00:08:42,690 --> 00:08:45,480
investigate that it's just kind of a

00:08:43,919 --> 00:08:47,430
nice way to make sure that nobody else

00:08:45,480 --> 00:08:50,519
is prying at your code that you don't

00:08:47,430 --> 00:08:53,910
want them to everybody here knows the

00:08:50,519 --> 00:08:56,040
octocat I have stickers by the way later

00:08:53,910 --> 00:08:57,779
if you need it the octocat but the story

00:08:56,040 --> 00:09:01,100
the optic at is hilarious to me because

00:08:57,779 --> 00:09:03,020
it's so boring it was a cheap

00:09:01,100 --> 00:09:04,580
we grabbed a nice stock photo because we

00:09:03,020 --> 00:09:06,680
wanted something cute on our air pages

00:09:04,580 --> 00:09:08,510
because like the air page tends to make

00:09:06,680 --> 00:09:10,340
people angry but you can't really be

00:09:08,510 --> 00:09:12,140
angry at this cute cat because I mean

00:09:10,340 --> 00:09:15,260
it's standing in a puddle of water I

00:09:12,140 --> 00:09:16,370
don't know why so this is cool we use

00:09:15,260 --> 00:09:17,990
the stock photo for a while and then

00:09:16,370 --> 00:09:19,370
people started liking the octa cat which

00:09:17,990 --> 00:09:21,560
is a problem because we didn't own the

00:09:19,370 --> 00:09:24,470
rights to them so then we got the rights

00:09:21,560 --> 00:09:27,470
and you came kind of a github mascot for

00:09:24,470 --> 00:09:29,120
us and that's the story of daddy had the

00:09:27,470 --> 00:09:30,560
secret here if you go to octo Dexter

00:09:29,120 --> 00:09:31,490
Kutub comm that's where we put all of

00:09:30,560 --> 00:09:33,560
our crazy

00:09:31,490 --> 00:09:36,500
octa cat animations and clipart and

00:09:33,560 --> 00:09:40,340
stuff like that I don't know I just love

00:09:36,500 --> 00:09:44,300
octa cats they're cute get that IO is

00:09:40,340 --> 00:09:47,300
our URL shortner the the easiest way to

00:09:44,300 --> 00:09:49,760
sort of use this is this is an example

00:09:47,300 --> 00:09:51,230
shell script you can hit if you just go

00:09:49,760 --> 00:09:53,840
that URL

00:09:51,230 --> 00:09:55,670
and the usage here is basically you know

00:09:53,840 --> 00:09:57,440
it'll just give you a commit a command

00:09:55,670 --> 00:09:59,060
line program they can just run get IO

00:09:57,440 --> 00:10:01,130
and then the URL and then an optional

00:09:59,060 --> 00:10:04,420
name and then you can convert any sort

00:10:01,130 --> 00:10:06,800
of github URL into a get dot io

00:10:04,420 --> 00:10:08,210
shortener so if you ever do stuff like I

00:10:06,800 --> 00:10:09,290
use this in these slides just because

00:10:08,210 --> 00:10:13,010
it's easier than doing the whole

00:10:09,290 --> 00:10:14,690
repository URL on the slides or if

00:10:13,010 --> 00:10:18,530
you're on Twitter or anything like that

00:10:14,690 --> 00:10:21,620
you can use our URL shortener we have a

00:10:18,530 --> 00:10:23,030
Mac app we have a Windows app just want

00:10:21,620 --> 00:10:23,510
to let you know some people don't know

00:10:23,030 --> 00:10:27,620
these things

00:10:23,510 --> 00:10:29,810
it's amazing the mac app is awesome what

00:10:27,620 --> 00:10:34,180
about the Windows app does not like the

00:10:29,810 --> 00:10:37,040
Windows app just kidding it's ok cool

00:10:34,180 --> 00:10:39,410
linguist is also really cool linguist is

00:10:37,040 --> 00:10:42,350
our open source project to handle all of

00:10:39,410 --> 00:10:44,480
our language specific stuff on github so

00:10:42,350 --> 00:10:46,900
anything that involves detection of a

00:10:44,480 --> 00:10:49,190
URL or a detection of a repository

00:10:46,900 --> 00:10:51,440
syntax highlighting vendored files all

00:10:49,190 --> 00:10:53,960
those things are different ways that

00:10:51,440 --> 00:10:56,090
linguists can determine what a language

00:10:53,960 --> 00:10:58,130
what language a particular file is in

00:10:56,090 --> 00:11:00,440
now this generates that nice language

00:10:58,130 --> 00:11:02,330
graph on your apposite orys so you can

00:11:00,440 --> 00:11:04,790
see it quickly at a glance like what is

00:11:02,330 --> 00:11:05,990
involved in this repository this is also

00:11:04,790 --> 00:11:10,850
good if you want to check this out and

00:11:05,990 --> 00:11:13,040
run it yourself back when I'm forgetting

00:11:10,850 --> 00:11:14,330
the dude's name I don't know

00:11:13,040 --> 00:11:16,610
we're not a bunch of

00:11:14,330 --> 00:11:19,070
languages get released over the last

00:11:16,610 --> 00:11:20,240
couple of months and because all this

00:11:19,070 --> 00:11:21,890
stuff is open-source we could have

00:11:20,240 --> 00:11:24,860
syntax highlighting all this stuff

00:11:21,890 --> 00:11:26,060
really quickly on get up calm and if you

00:11:24,860 --> 00:11:28,580
ever run into stuff where we're

00:11:26,060 --> 00:11:31,220
misclassifying your project we may think

00:11:28,580 --> 00:11:32,480
that something is you know Ruby when

00:11:31,220 --> 00:11:34,070
it's something else entirely

00:11:32,480 --> 00:11:35,990
this is where you go to and try and

00:11:34,070 --> 00:11:37,760
figure out how you can help out and make

00:11:35,990 --> 00:11:41,240
us better for everyone else

00:11:37,760 --> 00:11:43,100
using their projects email replies you

00:11:41,240 --> 00:11:46,430
can reply to any email that we send you

00:11:43,100 --> 00:11:47,750
and you will just put it in the site so

00:11:46,430 --> 00:11:49,130
if you get like an issue notification

00:11:47,750 --> 00:11:50,900
somebody create an issue just reply back

00:11:49,130 --> 00:11:52,760
to it and then we'll add your comment as

00:11:50,900 --> 00:11:54,830
a comment on the thread we'll have a

00:11:52,760 --> 00:11:56,840
nice little icon saying this is an email

00:11:54,830 --> 00:11:58,850
reply a kind of nice thing I do this all

00:11:56,840 --> 00:12:00,260
the time on my phone if I don't want to

00:11:58,850 --> 00:12:01,520
load up the site and just send a quick

00:12:00,260 --> 00:12:05,750
email and then get involved in the

00:12:01,520 --> 00:12:08,210
discussion if you guys know about gist

00:12:05,750 --> 00:12:11,330
it's kind of our tech snippet as a

00:12:08,210 --> 00:12:14,660
service it's kind of nice it's kind of

00:12:11,330 --> 00:12:16,280
been taken away for a long time but

00:12:14,660 --> 00:12:18,950
there's a lot of cool stuff you can do

00:12:16,280 --> 00:12:20,150
to abuse just basically it's not just

00:12:18,950 --> 00:12:22,670
for snippets and there's a couple cool

00:12:20,150 --> 00:12:24,860
ways to do this oh yeah I was putting

00:12:22,670 --> 00:12:26,600
embarrassing photos of Julie in here so

00:12:24,860 --> 00:12:27,950
julia is one of her designers at getup

00:12:26,600 --> 00:12:30,740
and she was doing some cool stuff on

00:12:27,950 --> 00:12:33,260
just for design related stuff which I'm

00:12:30,740 --> 00:12:36,080
really kind of stoked about this is a

00:12:33,260 --> 00:12:38,660
bunch of like weird CSS with like you

00:12:36,080 --> 00:12:40,850
know mozilla conditionals and WebKit and

00:12:38,660 --> 00:12:42,740
all this stuff I'm a human I don't know

00:12:40,850 --> 00:12:43,910
how to read that stuff so it's cool that

00:12:42,740 --> 00:12:46,040
she's sharing this but I have no idea

00:12:43,910 --> 00:12:47,900
what she's trying to say here so on in

00:12:46,040 --> 00:12:50,090
her comments to her gist she'll say oh

00:12:47,900 --> 00:12:52,880
I'm making this you know curled corner

00:12:50,090 --> 00:12:55,010
effect in CSS and then she can you know

00:12:52,880 --> 00:12:57,260
add all the stuff she also links to an

00:12:55,010 --> 00:12:59,030
actual website that you can play around

00:12:57,260 --> 00:13:01,220
with this in real time and zoom in like

00:12:59,030 --> 00:13:02,840
pick around in the source code it's just

00:13:01,220 --> 00:13:04,430
kind of a nice way to use gist as a very

00:13:02,840 --> 00:13:07,070
simple prototyping tool you don't have

00:13:04,430 --> 00:13:08,720
to do some crazy repository or anything

00:13:07,070 --> 00:13:11,090
like that to get people discussing it

00:13:08,720 --> 00:13:13,160
you know you put screenshots directly in

00:13:11,090 --> 00:13:16,010
it's kind of a nice way to sort of abuse

00:13:13,160 --> 00:13:19,160
just it's not just about you know boring

00:13:16,010 --> 00:13:21,760
XML you may put up there don't put X and

00:13:19,160 --> 00:13:24,110
XML up there that'd be really boring

00:13:21,760 --> 00:13:25,730
developers are a lot of cool there's a

00:13:24,110 --> 00:13:28,220
lot of ways for developers to abuse just

00:13:25,730 --> 00:13:30,110
as well just in fact our full

00:13:28,220 --> 00:13:32,930
Wow stories so you can clone them down

00:13:30,110 --> 00:13:35,270
like anything else this is the URL it's

00:13:32,930 --> 00:13:37,040
on any particular gist just clone that

00:13:35,270 --> 00:13:39,830
down as you would normally

00:13:37,040 --> 00:13:42,140
one cool way to deal with this this one

00:13:39,830 --> 00:13:44,690
guy Jeff wrote a blog post about micro

00:13:42,140 --> 00:13:46,430
gems which is basically a Gemina gist

00:13:44,690 --> 00:13:48,290
all you have to do is include a gem spec

00:13:46,430 --> 00:13:51,110
in your gist and you can very quickly

00:13:48,290 --> 00:13:53,330
just put an entire sort of gem and host

00:13:51,110 --> 00:13:55,340
it on a gist rather than doing a full

00:13:53,330 --> 00:13:57,260
project on github and dealing with all

00:13:55,340 --> 00:13:59,090
of the overhead with that I do this a

00:13:57,260 --> 00:14:00,770
lot I do this with something up to

00:13:59,090 --> 00:14:02,870
expect mini which is chris wanstrath

00:14:00,770 --> 00:14:04,790
wrote this it's like a quick way to add

00:14:02,870 --> 00:14:09,230
context and stuff to your tests in like

00:14:04,790 --> 00:14:11,930
30 lines of code so in my project I just

00:14:09,230 --> 00:14:14,210
specify to use this gem and I pointed to

00:14:11,930 --> 00:14:16,430
this particular gist and then I get all

00:14:14,210 --> 00:14:17,870
of the benefits of using bundler to deal

00:14:16,430 --> 00:14:20,210
with all this stuff and I don't have to

00:14:17,870 --> 00:14:23,570
do a really complicated release for any

00:14:20,210 --> 00:14:25,570
of this stuff does that wait is that how

00:14:23,570 --> 00:14:29,000
you specify get anymore to that change

00:14:25,570 --> 00:14:30,980
Tarrance you know whatever so don't

00:14:29,000 --> 00:14:34,310
listen what I said if that changed if it

00:14:30,980 --> 00:14:35,720
didn't listen what I said a quick

00:14:34,310 --> 00:14:37,790
example just look at guitar I would

00:14:35,720 --> 00:14:39,320
slash Mini and that's the easiest way to

00:14:37,790 --> 00:14:41,360
figure this stuff out I just look at the

00:14:39,320 --> 00:14:43,190
gem spec how it's set up and it's a nice

00:14:41,360 --> 00:14:46,280
sort of easy way to do these things

00:14:43,190 --> 00:14:52,010
one-off projects quick disposable

00:14:46,280 --> 00:14:53,870
projects we have a bunch of image view

00:14:52,010 --> 00:14:56,570
modes which is all done client-side

00:14:53,870 --> 00:14:57,800
which is really cool so if you have an

00:14:56,570 --> 00:14:59,960
image and then you push up a new version

00:14:57,800 --> 00:15:02,270
that image will have all these different

00:14:59,960 --> 00:15:05,060
ways of figuring out what is actually

00:15:02,270 --> 00:15:07,070
changed between those images this will

00:15:05,060 --> 00:15:08,780
show up in the dispatch so in this one

00:15:07,070 --> 00:15:11,270
it's just the overlay and you can swipe

00:15:08,780 --> 00:15:14,330
back and forth to see the very minut

00:15:11,270 --> 00:15:16,910
detail changes between those two images

00:15:14,330 --> 00:15:19,310
right there and you can just swipe along

00:15:16,910 --> 00:15:21,170
it's really helpful in the cases of like

00:15:19,310 --> 00:15:23,240
your designers like to change those

00:15:21,170 --> 00:15:24,590
couple of pixels for some reason you

00:15:23,240 --> 00:15:26,540
know like what did you actually do here

00:15:24,590 --> 00:15:28,880
this is how you can actually figure out

00:15:26,540 --> 00:15:31,010
whether something actually legitimately

00:15:28,880 --> 00:15:32,500
changed or designers just trying to be

00:15:31,010 --> 00:15:38,050
cool

00:15:32,500 --> 00:15:40,480
Hubb you guys ever use hub you should

00:15:38,050 --> 00:15:42,879
that's all I got no hope is really cool

00:15:40,480 --> 00:15:45,009
if you're on home brewed just install it

00:15:42,879 --> 00:15:47,170
brew install hub there's also just a

00:15:45,009 --> 00:15:49,749
one-liner install you can do used to be

00:15:47,170 --> 00:15:52,540
a gem I think hub is basically a

00:15:49,749 --> 00:15:53,769
superset of get installs next to your

00:15:52,540 --> 00:15:55,480
git wrapper and you can say stuff like

00:15:53,769 --> 00:15:57,279
hub clone home and boom and that will go

00:15:55,480 --> 00:15:58,739
to github and just clone this down

00:15:57,279 --> 00:16:01,420
without having to type the whole thing

00:15:58,739 --> 00:16:03,730
you can do multi remote pushes so if you

00:16:01,420 --> 00:16:05,350
want to push to multiple places at once

00:16:03,730 --> 00:16:06,939
you can just add a comma and then it'll

00:16:05,350 --> 00:16:10,329
just do the subsequent pushes to each

00:16:06,939 --> 00:16:12,339
other and then you can also attach a

00:16:10,329 --> 00:16:15,819
pull request to an issue which is really

00:16:12,339 --> 00:16:18,189
kind of cool a lot of the times stuff

00:16:15,819 --> 00:16:20,470
will start out as an issue and you'll

00:16:18,189 --> 00:16:21,790
say ok this is broken and then later on

00:16:20,470 --> 00:16:23,529
somebody will want it's to create a pull

00:16:21,790 --> 00:16:24,970
request and saying oh this issue started

00:16:23,529 --> 00:16:26,589
out this way and now I want to make this

00:16:24,970 --> 00:16:27,339
into a pull request with actual code and

00:16:26,589 --> 00:16:29,079
we'll go from there

00:16:27,339 --> 00:16:30,759
with hub you can just do this and on a

00:16:29,079 --> 00:16:32,619
command line just tell it which issue to

00:16:30,759 --> 00:16:35,619
do and it'll just create a pull request

00:16:32,619 --> 00:16:38,290
out of that issue I actually turn it

00:16:35,619 --> 00:16:39,850
into a pull request and the reason this

00:16:38,290 --> 00:16:44,220
is so cool is that you can just alias

00:16:39,850 --> 00:16:47,079
this as your your alias this to your get

00:16:44,220 --> 00:16:48,879
binary and if something doesn't happen

00:16:47,079 --> 00:16:50,860
to be in hub it'll just fall back to

00:16:48,879 --> 00:16:51,939
your git so you can just use git for all

00:16:50,860 --> 00:16:53,829
of these things and it's just like a

00:16:51,939 --> 00:16:57,009
superset of everything that's all

00:16:53,829 --> 00:16:59,529
open-source get on up nice little thing

00:16:57,009 --> 00:17:01,420
I mentioned earlier the octa cat is now

00:16:59,529 --> 00:17:03,399
on our air pages and four or four pages

00:17:01,420 --> 00:17:05,889
and all that stuff what you may not know

00:17:03,399 --> 00:17:07,299
is it's got accelerometer support on

00:17:05,889 --> 00:17:10,299
your phone so if you shake your phone

00:17:07,299 --> 00:17:12,610
around you'll see all of the octave cats

00:17:10,299 --> 00:17:14,169
stuff changing around this is really

00:17:12,610 --> 00:17:15,789
beneficial for your work so you can

00:17:14,169 --> 00:17:17,949
explain to your boss that you're playing

00:17:15,789 --> 00:17:25,120
with your phone too I don't know give

00:17:17,949 --> 00:17:26,589
work benefit analysis stuff yep press T

00:17:25,120 --> 00:17:28,990
on a repo page you can get a quick file

00:17:26,589 --> 00:17:30,159
finder this is amazing it's one of those

00:17:28,990 --> 00:17:31,720
things if you don't know about and you

00:17:30,159 --> 00:17:33,730
accidentally press T and you see this

00:17:31,720 --> 00:17:36,100
and you're like holy crap I wish I would

00:17:33,730 --> 00:17:37,299
have known this about this earlier so if

00:17:36,100 --> 00:17:39,520
you don't know this check this out just

00:17:37,299 --> 00:17:42,279
hit T it's sort of like command T and

00:17:39,520 --> 00:17:44,799
textmate and you can just quickly type

00:17:42,279 --> 00:17:47,799
out a file anywhere in your repository

00:17:44,799 --> 00:17:51,429
and then quickly jump to that W will hit

00:17:47,799 --> 00:17:51,940
the branch selector on a page it's again

00:17:51,429 --> 00:17:53,559
sort of like

00:17:51,940 --> 00:17:55,690
fuzzy finder we just sat W you can

00:17:53,559 --> 00:17:57,190
quickly jump to a branch I do this aloud

00:17:55,690 --> 00:17:58,960
if I'm working on a branch for a long

00:17:57,190 --> 00:18:00,429
time or I know that you know I'm never

00:17:58,960 --> 00:18:02,409
gonna be a master for the next week or

00:18:00,429 --> 00:18:04,059
so so I can just quickly go to that page

00:18:02,409 --> 00:18:05,259
and then just hit W and then jump back

00:18:04,059 --> 00:18:08,799
and forth between branches really

00:18:05,259 --> 00:18:10,480
quickly S is for quick search this is

00:18:08,799 --> 00:18:12,250
just our search form we've since

00:18:10,480 --> 00:18:14,289
upgraded this to our command bar which

00:18:12,250 --> 00:18:16,570
is also sort of like a I don't sort of

00:18:14,289 --> 00:18:18,610
like an Alfred Quicksilver thing which

00:18:16,570 --> 00:18:20,950
lets you jump quickly to different

00:18:18,610 --> 00:18:22,350
projects issues a search is a whole

00:18:20,950 --> 00:18:24,789
bunch of your data which is really cool

00:18:22,350 --> 00:18:26,409
and then all of these things just a

00:18:24,789 --> 00:18:27,610
question mark on any page you can see

00:18:26,409 --> 00:18:29,769
all of the list of commands for that

00:18:27,610 --> 00:18:30,970
particular page we really like keyboard

00:18:29,769 --> 00:18:32,289
shortcuts and there's a bunch of

00:18:30,970 --> 00:18:34,870
different things so you can do to just

00:18:32,289 --> 00:18:39,789
sort of quickly get the command line

00:18:34,870 --> 00:18:41,169
interface to a website basically so

00:18:39,789 --> 00:18:43,149
something we do a lot at github

00:18:41,169 --> 00:18:45,490
internally is to sort of just subscribe

00:18:43,149 --> 00:18:47,889
people to a particular issue so if I

00:18:45,490 --> 00:18:50,379
know something is broken and Reyn is the

00:18:47,889 --> 00:18:52,389
the the problem behind all this I can

00:18:50,379 --> 00:18:53,980
say like CC artem a go to this thread

00:18:52,389 --> 00:18:56,500
and he's now subscribed to that thread

00:18:53,980 --> 00:18:58,779
so almost every issue at this point to

00:18:56,500 --> 00:19:01,210
github github our own repository we have

00:18:58,779 --> 00:19:03,070
these cc's to particular people because

00:19:01,210 --> 00:19:04,299
we want people to be able to see like

00:19:03,070 --> 00:19:06,519
you should really pay attention to this

00:19:04,299 --> 00:19:08,950
issue because it's related to what your

00:19:06,519 --> 00:19:10,450
you're working on and they get

00:19:08,950 --> 00:19:11,590
subscribed to all those notifications so

00:19:10,450 --> 00:19:13,600
they can see the discussion you know

00:19:11,590 --> 00:19:14,649
that they're seeing the discussion and

00:19:13,600 --> 00:19:16,389
it's a nice way to sort of get

00:19:14,649 --> 00:19:19,000
communication without actively going

00:19:16,389 --> 00:19:21,399
over and like shaking them and making

00:19:19,000 --> 00:19:23,529
them do your bidding like that you can

00:19:21,399 --> 00:19:25,840
also do teams directly if you're on an

00:19:23,529 --> 00:19:28,539
organization that github just hit at org

00:19:25,840 --> 00:19:29,889
and the slash team so for us if I wanted

00:19:28,539 --> 00:19:31,600
to paying all the designers in our

00:19:29,889 --> 00:19:33,700
company I can just hit at github slash

00:19:31,600 --> 00:19:37,840
designers and then they'll all get

00:19:33,700 --> 00:19:39,129
subscribed to that particular thread in

00:19:37,840 --> 00:19:40,720
general we do a bunch of different

00:19:39,129 --> 00:19:42,850
things to commits as well we just Auto

00:19:40,720 --> 00:19:45,070
link all of the shah's so if you ever

00:19:42,850 --> 00:19:46,120
mention a shot will will truncate all

00:19:45,070 --> 00:19:47,559
the other characters because you don't

00:19:46,120 --> 00:19:49,179
visually need to see the whole shop but

00:19:47,559 --> 00:19:51,159
we'll hyperlink it so you can quickly

00:19:49,179 --> 00:19:52,929
jump to that particular commit in this

00:19:51,159 --> 00:19:54,429
case I revert a commit and then you can

00:19:52,929 --> 00:19:56,440
link straight to that commit that I

00:19:54,429 --> 00:19:58,779
reverted so you can sort of navigate

00:19:56,440 --> 00:20:01,090
between the two you can also do this

00:19:58,779 --> 00:20:02,619
across different repositories so you can

00:20:01,090 --> 00:20:04,880
say user add a particular shot if you

00:20:02,619 --> 00:20:07,610
want to talk to about somebody else's

00:20:04,880 --> 00:20:10,130
you know the somebody else's fork of

00:20:07,610 --> 00:20:11,750
that repo you can also specifically

00:20:10,130 --> 00:20:14,720
mention a different repository use a

00:20:11,750 --> 00:20:16,100
slash repo at a particular sha if you

00:20:14,720 --> 00:20:17,600
ever get into those positions kind of

00:20:16,100 --> 00:20:20,960
nice to just be able to link between

00:20:17,600 --> 00:20:23,000
things really easily we also do this in

00:20:20,960 --> 00:20:26,030
issues where we'll auto link specific

00:20:23,000 --> 00:20:27,740
issue numbers in this case you just hit

00:20:26,030 --> 00:20:28,700
pound sign and then the number and then

00:20:27,740 --> 00:20:31,760
we'll just ought only get to that

00:20:28,700 --> 00:20:34,040
repositories issue you can also do that

00:20:31,760 --> 00:20:36,320
with the same sort of way as the auto

00:20:34,040 --> 00:20:37,580
linking shah's just user or user slash

00:20:36,320 --> 00:20:39,770
repo and then you'll link to that

00:20:37,580 --> 00:20:44,480
repositories issue that you mentioned in

00:20:39,770 --> 00:20:48,350
the comment body itself I hate seeing

00:20:44,480 --> 00:20:50,630
read means like this where like you just

00:20:48,350 --> 00:20:52,130
can't between that parts it's just not

00:20:50,630 --> 00:20:53,600
syntax highlighting syntax titling is

00:20:52,130 --> 00:20:54,980
the best thing ever so if you specify

00:20:53,600 --> 00:20:57,310
the language like that you'll get nice

00:20:54,980 --> 00:21:00,350
syntax highlighting in your read meas

00:20:57,310 --> 00:21:02,090
just do a triple back tick and then say

00:21:00,350 --> 00:21:03,440
this specific language that you're

00:21:02,090 --> 00:21:04,910
looking for in this case it's Ruby and

00:21:03,440 --> 00:21:07,130
then we'll give you a nice highlighted

00:21:04,910 --> 00:21:09,890
thing in your readme it just makes

00:21:07,130 --> 00:21:14,500
things much more readable and more

00:21:09,890 --> 00:21:16,790
awesome you can also auto close issues

00:21:14,500 --> 00:21:18,290
straight from a commit so if you ever

00:21:16,790 --> 00:21:20,180
commit something and you know that's

00:21:18,290 --> 00:21:22,490
fixing you know the issue number one

00:21:20,180 --> 00:21:24,890
just hit closes close close any sort of

00:21:22,490 --> 00:21:27,110
syntax of close and will automatically

00:21:24,890 --> 00:21:28,760
close it same thing with fix and we'll

00:21:27,110 --> 00:21:30,410
go in and I'll say okay you know he

00:21:28,760 --> 00:21:32,870
closed this from this particular commit

00:21:30,410 --> 00:21:34,340
it's a nice way to just doing things all

00:21:32,870 --> 00:21:38,030
at once rather than going back and doing

00:21:34,340 --> 00:21:40,670
it manually you've probably all seen the

00:21:38,030 --> 00:21:42,440
commit listings on a particular project

00:21:40,670 --> 00:21:44,840
if you go through the histories you can

00:21:42,440 --> 00:21:46,640
also do this by author so if you go to

00:21:44,840 --> 00:21:49,220
the URL it looks something like this

00:21:46,640 --> 00:21:51,260
slash commit slash master if you add the

00:21:49,220 --> 00:21:53,240
URL parameter author equals and then a

00:21:51,260 --> 00:21:55,730
particularly user name or email address

00:21:53,240 --> 00:21:57,710
I think also works will filter that to

00:21:55,730 --> 00:21:59,390
show only that particular that

00:21:57,710 --> 00:22:01,940
particular person's contributions to

00:21:59,390 --> 00:22:03,290
that project this is really cool if you

00:22:01,940 --> 00:22:05,090
contribute to rails and you want to sort

00:22:03,290 --> 00:22:07,220
of put on your resume or boast about it

00:22:05,090 --> 00:22:08,540
you can quickly link to this page and

00:22:07,220 --> 00:22:12,500
we'll show you just your contributions

00:22:08,540 --> 00:22:14,360
to rails for example there's also a

00:22:12,500 --> 00:22:17,000
bunch of stuff about poor requests that

00:22:14,360 --> 00:22:18,830
I still a lot of people use pull

00:22:17,000 --> 00:22:23,370
requests

00:22:18,830 --> 00:22:25,620
not optimally I think for github we use

00:22:23,370 --> 00:22:27,149
them branch to branch a lot you don't

00:22:25,620 --> 00:22:28,889
have to have PO requests between two

00:22:27,149 --> 00:22:30,269
separate Forks or two separate

00:22:28,889 --> 00:22:32,149
organizations or anything like that so

00:22:30,269 --> 00:22:35,309
we do pull requests on the same

00:22:32,149 --> 00:22:36,690
repository and because we only really

00:22:35,309 --> 00:22:39,000
work out branches there's only one

00:22:36,690 --> 00:22:41,250
github repository nobody really Forks

00:22:39,000 --> 00:22:43,230
github internally we just work on the

00:22:41,250 --> 00:22:44,370
same branch and we push it up and this

00:22:43,230 --> 00:22:46,769
is just great because we don't have to

00:22:44,370 --> 00:22:48,870
do separate permissions for Forks you

00:22:46,769 --> 00:22:51,330
don't have to add more remotes to get

00:22:48,870 --> 00:22:52,649
which is really complicated you can just

00:22:51,330 --> 00:22:56,159
push the branch then do the pull request

00:22:52,649 --> 00:22:57,720
between branches port quests also are

00:22:56,159 --> 00:22:59,730
prayer requests kind of look crazy this

00:22:57,720 --> 00:23:01,559
is one from a few months ago when we

00:22:59,730 --> 00:23:03,360
read in our about page we use

00:23:01,559 --> 00:23:05,389
screenshots all over the place inside a

00:23:03,360 --> 00:23:08,820
pull request and this is just a standard

00:23:05,389 --> 00:23:10,769
markdown function if you use the syntax

00:23:08,820 --> 00:23:13,919
on the bottom exclamation point brackets

00:23:10,769 --> 00:23:16,289
and then in the parenthesis the URL you

00:23:13,919 --> 00:23:18,600
can embed the images inside of github

00:23:16,289 --> 00:23:20,490
and we cache all of these too so if you

00:23:18,600 --> 00:23:22,259
put them on some host that's horrible

00:23:20,490 --> 00:23:24,629
like Skitch and then Skitch goes down

00:23:22,259 --> 00:23:28,799
will cache and you can still see it

00:23:24,629 --> 00:23:31,080
regardless as I mentioned earlier hub

00:23:28,799 --> 00:23:33,210
has that cool way to convert issues to

00:23:31,080 --> 00:23:35,549
poor requests the reason that exists is

00:23:33,210 --> 00:23:37,169
because it's in our API so you can just

00:23:35,549 --> 00:23:38,399
hit a post to that particular URL and

00:23:37,169 --> 00:23:40,559
you can do it yourself if you don't want

00:23:38,399 --> 00:23:44,639
to go through hub again it's kind of a

00:23:40,559 --> 00:23:46,259
nice thing if you want to deal with the

00:23:44,639 --> 00:23:49,440
issues poor request and not duplicating

00:23:46,259 --> 00:23:50,639
data like that emoji if you don't know

00:23:49,440 --> 00:23:52,350
emoji I don't know you

00:23:50,639 --> 00:23:55,110
that's not cool emoji you are the

00:23:52,350 --> 00:23:56,610
greatest thing ever just hit colon and

00:23:55,110 --> 00:23:58,649
then you put your particular emoji and

00:23:56,610 --> 00:24:01,139
that's how everyone will know you know

00:23:58,649 --> 00:24:03,269
when I put colon poo that I think there

00:24:01,139 --> 00:24:04,679
pull request is poo it's really

00:24:03,269 --> 00:24:07,769
endearing for the person you open the

00:24:04,679 --> 00:24:08,970
pull request all of this stuff the

00:24:07,769 --> 00:24:11,340
easiest place to check this out is just

00:24:08,970 --> 00:24:13,259
emoji - chief - eat calm and there's a

00:24:11,340 --> 00:24:15,360
whole long list of all the emoji that we

00:24:13,259 --> 00:24:17,539
support in github most these always so

00:24:15,360 --> 00:24:20,700
work in campfire we actually have a

00:24:17,539 --> 00:24:22,379
37signals github collaboration emoji

00:24:20,700 --> 00:24:24,179
repository where we deal with all this

00:24:22,379 --> 00:24:27,179
stuff standardization and emoji is

00:24:24,179 --> 00:24:28,830
really important for us so check those

00:24:27,179 --> 00:24:31,410
out sometimes you can do a lot of crazy

00:24:28,830 --> 00:24:37,500
things with emoji that words are just

00:24:31,410 --> 00:24:39,360
you know pedestrian at that point line

00:24:37,500 --> 00:24:41,610
linking you've probably seen this if you

00:24:39,360 --> 00:24:43,440
click on a line you can highlight that

00:24:41,610 --> 00:24:45,240
line and then it gets added to the URL

00:24:43,440 --> 00:24:46,710
so you can pass that around and say hey

00:24:45,240 --> 00:24:51,750
check out this line well you may not

00:24:46,710 --> 00:24:56,310
know you can also accept ranges so if

00:24:51,750 --> 00:24:58,500
you add the the - and then the ending

00:24:56,310 --> 00:25:01,380
point in the URL so in this place in

00:24:58,500 --> 00:25:03,510
this point pound sign l16 line 16

00:25:01,380 --> 00:25:05,580
through 25 will just highlight that

00:25:03,510 --> 00:25:07,740
whole block for you in github itself

00:25:05,580 --> 00:25:13,290
also kind of a nice little thing to pass

00:25:07,740 --> 00:25:15,240
around code back and forth also you've

00:25:13,290 --> 00:25:16,950
probably also seen the the compare view

00:25:15,240 --> 00:25:18,810
a bunch that's what happens when you

00:25:16,950 --> 00:25:20,910
push stuff up and a lot of the hooks get

00:25:18,810 --> 00:25:23,970
the compare view URL if you're dipping

00:25:20,910 --> 00:25:25,560
between branches you usually get a URL

00:25:23,970 --> 00:25:26,850
sort of like this use the slash repo

00:25:25,560 --> 00:25:28,770
slash compare and then a particular

00:25:26,850 --> 00:25:31,410
range where range is usually something

00:25:28,770 --> 00:25:32,340
like master dot dot my branch and then

00:25:31,410 --> 00:25:34,620
you'll see the differences between

00:25:32,340 --> 00:25:36,000
master and that branch in the compare

00:25:34,620 --> 00:25:37,350
view the cool thing about this is that

00:25:36,000 --> 00:25:38,550
range is smart and this isn't

00:25:37,350 --> 00:25:41,910
necessarily a github thing this is

00:25:38,550 --> 00:25:43,890
strictly get based magic so you can do

00:25:41,910 --> 00:25:46,080
cool stuff like master at one day dot

00:25:43,890 --> 00:25:47,580
ago that's a dot master and you'll see

00:25:46,080 --> 00:25:49,140
the difference between what happened on

00:25:47,580 --> 00:25:51,150
master today versus what happened today

00:25:49,140 --> 00:25:53,340
ago and that has cool different things

00:25:51,150 --> 00:25:55,260
you can say just yesterday or you know a

00:25:53,340 --> 00:25:57,290
particular date and then just compare

00:25:55,260 --> 00:26:00,270
this to master I know a lot of people

00:25:57,290 --> 00:26:01,920
for the particular teams may do stuff

00:26:00,270 --> 00:26:03,780
like you know show me everything that

00:26:01,920 --> 00:26:05,280
happened you know the last twelve hours

00:26:03,780 --> 00:26:06,960
and then they'll just bookmark that page

00:26:05,280 --> 00:26:09,890
so they can see what's actually

00:26:06,960 --> 00:26:13,260
happening on their team's page over time

00:26:09,890 --> 00:26:14,850
okay so that's the github stuff and now

00:26:13,260 --> 00:26:17,610
we get to get everyone's favorite

00:26:14,850 --> 00:26:19,380
confusing everything with lots of hidden

00:26:17,610 --> 00:26:24,060
weird stuff inside of it that I like to

00:26:19,380 --> 00:26:25,620
talk about we for better or worse we

00:26:24,060 --> 00:26:28,260
sometimes do commit list commits at

00:26:25,620 --> 00:26:31,500
github which is just at using - - allow

00:26:28,260 --> 00:26:33,570
- empty so you can do a commit without

00:26:31,500 --> 00:26:35,670
any sort of dip or content in the commit

00:26:33,570 --> 00:26:37,470
itself add a message and you say allow

00:26:35,670 --> 00:26:40,200
empty and then you'll actually make the

00:26:37,470 --> 00:26:42,600
commit this I guess you control your

00:26:40,200 --> 00:26:43,850
co-workers with this you know if you're

00:26:42,600 --> 00:26:45,770
that type of person

00:26:43,850 --> 00:26:46,910
you can also do other stuff sometimes

00:26:45,770 --> 00:26:49,370
too

00:26:46,910 --> 00:26:50,630
you need some sort of commit to

00:26:49,370 --> 00:26:52,429
something to test like a Hulk or

00:26:50,630 --> 00:26:53,809
something like that and you do the stuff

00:26:52,429 --> 00:26:55,160
where you make a tiny commit and then

00:26:53,809 --> 00:26:57,080
you revert it and then you go back and

00:26:55,160 --> 00:26:58,940
forth and it's stupid you can just do

00:26:57,080 --> 00:27:01,400
this instead it's kind of a nice tricky

00:26:58,940 --> 00:27:03,910
way to do things I'm staging hunks it's

00:27:01,400 --> 00:27:07,669
probably not what you think

00:27:03,910 --> 00:27:11,330
you just had get add - P it's really

00:27:07,669 --> 00:27:13,610
cool it will sort of show you a whole

00:27:11,330 --> 00:27:14,960
bunch of different things so when you're

00:27:13,610 --> 00:27:17,630
adding all this if you have a whole

00:27:14,960 --> 00:27:19,490
bunch of code prepped and ready to be

00:27:17,630 --> 00:27:22,100
committed it'll show you all of these

00:27:19,490 --> 00:27:23,570
options like where you can basically say

00:27:22,100 --> 00:27:25,190
yes I want this line I want this

00:27:23,570 --> 00:27:26,900
particular group of files I want this

00:27:25,190 --> 00:27:29,030
stuff added and I want the other stuff

00:27:26,900 --> 00:27:31,220
still unstaged and so you can stage

00:27:29,030 --> 00:27:33,530
particular hunks basically and then

00:27:31,220 --> 00:27:36,230
commit those commits those on their own

00:27:33,530 --> 00:27:38,960
it's basically one smart way to do smart

00:27:36,230 --> 00:27:40,490
logical commit sets where you have very

00:27:38,960 --> 00:27:42,289
topical stuff and you don't have other

00:27:40,490 --> 00:27:44,150
weird things that had to be changed for

00:27:42,289 --> 00:27:46,250
that commit to work but aren't really

00:27:44,150 --> 00:27:47,600
part of that commit sometimes these are

00:27:46,250 --> 00:27:52,190
really nice if you are on a team that

00:27:47,600 --> 00:27:54,230
really cares about this stuff a lot get

00:27:52,190 --> 00:27:56,030
show colon slash and then a particular

00:27:54,230 --> 00:27:58,730
query is really cool it will search

00:27:56,030 --> 00:27:59,960
through your git log for the last thing

00:27:58,730 --> 00:28:02,480
that you committed that matches that

00:27:59,960 --> 00:28:04,610
search so on the github code base if I

00:28:02,480 --> 00:28:06,650
say get show colon slash stupid it'll

00:28:04,610 --> 00:28:09,590
just look through and see Oh Rails

00:28:06,650 --> 00:28:12,020
logger was really stupid in April 27 I

00:28:09,590 --> 00:28:14,929
do this a lot just because sometimes I

00:28:12,020 --> 00:28:16,250
know a particular commit happened and I

00:28:14,929 --> 00:28:17,929
don't care about anything before that I

00:28:16,250 --> 00:28:21,400
just want the last one that's not a nice

00:28:17,929 --> 00:28:25,580
quick way to do that and access that

00:28:21,400 --> 00:28:27,200
this is really cool CD - if you don't

00:28:25,580 --> 00:28:29,090
know this this just goes back to this

00:28:27,200 --> 00:28:31,549
previous directory you're in on the

00:28:29,090 --> 00:28:33,590
command line git has this concept - so

00:28:31,549 --> 00:28:34,880
you're gonna say get check out - and it

00:28:33,590 --> 00:28:36,440
will just go back to the branch that

00:28:34,880 --> 00:28:38,330
you're currently on and you can just go

00:28:36,440 --> 00:28:40,460
back and forth between master and next

00:28:38,330 --> 00:28:41,059
master and next this is really cool if

00:28:40,460 --> 00:28:42,230
you are

00:28:41,059 --> 00:28:44,710
you know switching back and forth

00:28:42,230 --> 00:28:47,179
between those two branches obviously

00:28:44,710 --> 00:28:49,909
merge branches you can access via get

00:28:47,179 --> 00:28:54,799
with get branch - - merged and will show

00:28:49,909 --> 00:28:56,840
all of the branches that something I'm

00:28:54,799 --> 00:28:57,680
getting confused here hold on it will

00:28:56,840 --> 00:28:59,840
work out

00:28:57,680 --> 00:29:01,580
yes so these are all the branches that

00:28:59,840 --> 00:29:04,130
have been merged into the branch that

00:29:01,580 --> 00:29:06,950
you're currently on the reverse of this

00:29:04,130 --> 00:29:08,540
is - - no - merged which other branches

00:29:06,950 --> 00:29:10,490
that haven't quite been moved merged

00:29:08,540 --> 00:29:12,590
into the branch that you're currently on

00:29:10,490 --> 00:29:13,910
obviously I'm already confused talking

00:29:12,590 --> 00:29:16,160
about it but this is really helpful to

00:29:13,910 --> 00:29:17,360
figure out to reduce that confusion when

00:29:16,160 --> 00:29:19,340
you're actually working on stuff has

00:29:17,360 --> 00:29:22,670
this branch member in it has it not

00:29:19,340 --> 00:29:24,680
if so emerge it in along those same

00:29:22,670 --> 00:29:26,780
lines you can say - - contains and then

00:29:24,680 --> 00:29:29,320
a particular sha and will tell you which

00:29:26,780 --> 00:29:31,490
branch owns that particular shop

00:29:29,320 --> 00:29:33,140
sometimes particularly if somebody's

00:29:31,490 --> 00:29:35,030
sending you some random link to a guitar

00:29:33,140 --> 00:29:37,820
apposite or E and it's just a sha and

00:29:35,030 --> 00:29:39,260
the the the command line or in the URL

00:29:37,820 --> 00:29:40,790
bar and you have no idea where that shot

00:29:39,260 --> 00:29:44,140
Long's - this is a nice way to figure

00:29:40,790 --> 00:29:46,070
out oh it's on this date fixed branch

00:29:44,140 --> 00:29:47,690
something I learned recently which is

00:29:46,070 --> 00:29:50,030
actually kind of cool it's sort of

00:29:47,690 --> 00:29:51,410
copying the content of a file to your

00:29:50,030 --> 00:29:53,390
particular branch so if you say get

00:29:51,410 --> 00:29:55,190
check out and then the branch and then -

00:29:53,390 --> 00:29:57,860
- and then a path to the particular file

00:29:55,190 --> 00:30:00,560
that you you want that basically copies

00:29:57,860 --> 00:30:03,260
what is in that particular file on that

00:30:00,560 --> 00:30:05,030
branch into your into your current

00:30:03,260 --> 00:30:07,430
working copy without having to check

00:30:05,030 --> 00:30:09,410
back and forth between those branches I

00:30:07,430 --> 00:30:11,030
use this a lot when I'm like I

00:30:09,410 --> 00:30:12,110
definitely want this stuff in this other

00:30:11,030 --> 00:30:13,100
branch but I don't want to merge that

00:30:12,110 --> 00:30:15,320
whole branch and I just want that

00:30:13,100 --> 00:30:18,140
particular file that's a really quick

00:30:15,320 --> 00:30:20,240
and easy way to do that

00:30:18,140 --> 00:30:22,040
reachable commits is also there's a lot

00:30:20,240 --> 00:30:25,310
of just cool things you can do once you

00:30:22,040 --> 00:30:28,100
learn the the weird syntax of git git

00:30:25,310 --> 00:30:29,960
log branch a and then the caret branch B

00:30:28,100 --> 00:30:33,620
will show you the commits that in a that

00:30:29,960 --> 00:30:35,360
are not in the the B branch so you can

00:30:33,620 --> 00:30:38,000
again just sort of see what is the

00:30:35,360 --> 00:30:42,080
difference between branches in terms of

00:30:38,000 --> 00:30:45,140
the log in this example a lot of those

00:30:42,080 --> 00:30:47,030
same lines if you run - Laos lost found

00:30:45,140 --> 00:30:49,190
in this it will show you the berta the

00:30:47,030 --> 00:30:51,440
the blobs and commits on a particular

00:30:49,190 --> 00:30:54,620
branch or that aren't on a particular

00:30:51,440 --> 00:30:56,030
branch sorry so if you ever end up like

00:30:54,620 --> 00:30:58,190
deleting a branch or something like that

00:30:56,030 --> 00:31:01,550
it's actually fairly hard to delete

00:30:58,190 --> 00:31:02,930
content at all and get usually it's

00:31:01,550 --> 00:31:04,910
going to be stashed away somewhere and

00:31:02,930 --> 00:31:06,380
tell you garbage collect and this is the

00:31:04,910 --> 00:31:07,820
way to figure this out like this is pre

00:31:06,380 --> 00:31:09,669
garbage collecting you can say okay this

00:31:07,820 --> 00:31:11,320
is a particular commit I'm looking

00:31:09,669 --> 00:31:12,759
and then I can pull that commit into the

00:31:11,320 --> 00:31:16,450
branch that I'm on it's not actually

00:31:12,759 --> 00:31:18,849
lost at that point we are sort of

00:31:16,450 --> 00:31:20,349
obsessive about diff stats at github we

00:31:18,849 --> 00:31:23,499
obviously like to see less code in

00:31:20,349 --> 00:31:25,719
production than more and we show this on

00:31:23,499 --> 00:31:27,099
pull request pages and this is just the

00:31:25,719 --> 00:31:29,019
same way you can deal with this on the

00:31:27,099 --> 00:31:31,659
command line yourself if you do get diff

00:31:29,019 --> 00:31:35,279
and then this basically is saying show

00:31:31,659 --> 00:31:38,139
me the stats of the commit before last

00:31:35,279 --> 00:31:40,329
compared to the current head of master

00:31:38,139 --> 00:31:43,179
and I'll just show you the stats between

00:31:40,329 --> 00:31:45,159
those two this is cool I've seen some

00:31:43,179 --> 00:31:48,249
people just build lots of scripts around

00:31:45,159 --> 00:31:50,049
this have very pretty scripts and can

00:31:48,249 --> 00:31:52,779
just run to see what actually happened

00:31:50,049 --> 00:31:54,639
in the last commit type of deal

00:31:52,779 --> 00:31:56,950
get blame obviously has a bunch of

00:31:54,639 --> 00:31:58,359
different stuff you've probably used to

00:31:56,950 --> 00:31:59,709
get blame where it will show you who

00:31:58,359 --> 00:32:01,899
changed that line and then the

00:31:59,709 --> 00:32:03,339
particular lines next to it

00:32:01,899 --> 00:32:07,029
Kipling has a bunch of really cool

00:32:03,339 --> 00:32:10,749
things you can do the the problem is if

00:32:07,029 --> 00:32:12,190
things are like this particular line say

00:32:10,749 --> 00:32:14,649
this has a bunch of like added white

00:32:12,190 --> 00:32:17,289
space at the end I don't really care

00:32:14,649 --> 00:32:19,509
about that because it doesn't change the

00:32:17,289 --> 00:32:22,539
underlying meaning of that line so if

00:32:19,509 --> 00:32:26,109
you add that with get blamed - W it will

00:32:22,539 --> 00:32:28,959
show you in the previous example that

00:32:26,109 --> 00:32:31,029
particular line the hell did it go that

00:32:28,959 --> 00:32:32,589
particular line the the middle line was

00:32:31,029 --> 00:32:33,879
a different commit when it really I just

00:32:32,589 --> 00:32:36,039
want to see who originally put that line

00:32:33,879 --> 00:32:38,409
there without the the whitespace and

00:32:36,039 --> 00:32:40,509
then - W we'll we'll look back in your

00:32:38,409 --> 00:32:42,099
history to figure out when did this line

00:32:40,509 --> 00:32:48,879
meaningfully change then use that as a

00:32:42,099 --> 00:32:50,700
blame - M is also pretty cool let's see

00:32:48,879 --> 00:32:53,829
yeah it detects the moves between

00:32:50,700 --> 00:32:56,139
different files so if you have two lines

00:32:53,829 --> 00:32:59,049
of code like a and B and then you change

00:32:56,139 --> 00:33:00,609
it to be an A it ends up blame is not

00:32:59,049 --> 00:33:03,129
really smart at figuring out how that

00:33:00,609 --> 00:33:04,659
stuff works but if you add - M it will

00:33:03,129 --> 00:33:06,369
blame the original commit not the move

00:33:04,659 --> 00:33:08,049
commit so if you have a commit to move

00:33:06,369 --> 00:33:11,079
those different functions or different

00:33:08,049 --> 00:33:13,239
methods in the file itself it will then

00:33:11,079 --> 00:33:14,979
go back with - M to figure out when did

00:33:13,239 --> 00:33:16,749
that actual commit happen so you can see

00:33:14,979 --> 00:33:18,759
again one of the meaning of the line

00:33:16,749 --> 00:33:22,179
change not win to the position of the

00:33:18,759 --> 00:33:22,669
line change get - see is like M but it

00:33:22,179 --> 00:33:24,499
looks at

00:33:22,669 --> 00:33:26,869
files in the same commit so if you're

00:33:24,499 --> 00:33:28,700
moving stuff between files if you're

00:33:26,869 --> 00:33:32,179
saying okay I'm moving I'm extracting

00:33:28,700 --> 00:33:34,399
this method into a separate helper if

00:33:32,179 --> 00:33:36,080
you - see it will detect those moves and

00:33:34,399 --> 00:33:38,149
again it won't look at that that merge

00:33:36,080 --> 00:33:40,549
commit it will look at the original

00:33:38,149 --> 00:33:43,970
commit that it pulled from and then you

00:33:40,549 --> 00:33:46,009
can add - - C - C C which will look at

00:33:43,970 --> 00:33:48,049
the commit the file was created in an -

00:33:46,009 --> 00:33:50,720
TCC will look at all your commits

00:33:48,049 --> 00:33:52,279
obviously the more places you're telling

00:33:50,720 --> 00:33:55,460
get to look at the slower it's going to

00:33:52,279 --> 00:33:57,169
be but in a lot of cases you will be

00:33:55,460 --> 00:33:58,700
fine with waiting because this stuff is

00:33:57,169 --> 00:34:02,899
really valuable to figure out where did

00:33:58,700 --> 00:34:04,549
this actually come from Multi remote

00:34:02,899 --> 00:34:06,139
fetches is really cool if you have a

00:34:04,549 --> 00:34:08,270
bunch of different repositories you're

00:34:06,139 --> 00:34:10,760
working on for whatever reason you can

00:34:08,270 --> 00:34:12,679
set up a group in your git config and

00:34:10,760 --> 00:34:14,149
then you can fetch that group just by

00:34:12,679 --> 00:34:16,069
saying fetch my group and that will go

00:34:14,149 --> 00:34:18,849
in and fetch remote one and remote - in

00:34:16,069 --> 00:34:23,839
this case if you're in that situation

00:34:18,849 --> 00:34:25,460
get status there's relatively recently I

00:34:23,839 --> 00:34:26,750
guess a couple years at this point they

00:34:25,460 --> 00:34:28,819
added a couple new features to get

00:34:26,750 --> 00:34:30,470
status this is the normal git status

00:34:28,819 --> 00:34:32,929
it's really boring I never use this

00:34:30,470 --> 00:34:35,270
because I at this point I know like how

00:34:32,929 --> 00:34:36,770
to get add stuff I don't need to read

00:34:35,270 --> 00:34:39,109
all that stuff so I just

00:34:36,770 --> 00:34:40,760
alias get status to get status - SB

00:34:39,109 --> 00:34:42,200
which gives you something like this it's

00:34:40,760 --> 00:34:45,520
got a little bit more color it's to the

00:34:42,200 --> 00:34:48,530
point it's directly what you want to see

00:34:45,520 --> 00:34:51,109
that's kind of a nice thing to do

00:34:48,530 --> 00:34:53,179
we're dipping I do a bunch of writing on

00:34:51,109 --> 00:34:56,000
my blog stuff like that just personal

00:34:53,179 --> 00:34:58,700
writing and diffs originally are really

00:34:56,000 --> 00:35:00,799
kind of horrible at writing like plain

00:34:58,700 --> 00:35:03,140
English type of stuff so in this case I

00:35:00,799 --> 00:35:04,609
added one word and get will say okay

00:35:03,140 --> 00:35:06,410
this whole line changed and obviously

00:35:04,609 --> 00:35:08,990
like yes it changed but like what

00:35:06,410 --> 00:35:11,480
changed if you do the same sort of

00:35:08,990 --> 00:35:13,700
command with - - word depth - TIFF it

00:35:11,480 --> 00:35:14,869
will show you a separate diff with that

00:35:13,700 --> 00:35:16,880
particular word this will show you

00:35:14,869 --> 00:35:19,460
exactly oh this particular word changed

00:35:16,880 --> 00:35:22,190
and I can make you know then I can go

00:35:19,460 --> 00:35:24,710
from that point forward this can help

00:35:22,190 --> 00:35:30,140
with code - I just use it really a bunch

00:35:24,710 --> 00:35:34,200
with long-form prose spelling I I'm

00:35:30,140 --> 00:35:36,060
horrible speller as well.get comb it

00:35:34,200 --> 00:35:38,460
I do that all like everyday and then get

00:35:36,060 --> 00:35:41,099
says oh that's not a command did you

00:35:38,460 --> 00:35:43,530
mean commit tada and it doesn't do

00:35:41,099 --> 00:35:45,750
anything it's like horrible he's kind of

00:35:43,530 --> 00:35:48,839
trolling so if you do get config - check

00:35:45,750 --> 00:35:51,150
global help autocorrect one and then you

00:35:48,839 --> 00:35:53,070
type get coma again it will just say oh

00:35:51,150 --> 00:35:54,690
you said comb it it doesn't exist I'm

00:35:53,070 --> 00:35:56,730
just gonna assume you mean commit deal

00:35:54,690 --> 00:35:59,339
with it if you didn't and then I'll just

00:35:56,730 --> 00:36:01,020
do it so if you want to look dangerously

00:35:59,339 --> 00:36:02,880
and just assume your misspellings will

00:36:01,020 --> 00:36:05,460
look like the Spelling's that you wanted

00:36:02,880 --> 00:36:08,820
it to look like whatever just trust get

00:36:05,460 --> 00:36:09,869
that will never go wrong for you just

00:36:08,820 --> 00:36:13,500
kidding

00:36:09,869 --> 00:36:16,920
get RiRi is hilarious to say it means

00:36:13,500 --> 00:36:18,119
reuse recorded resolution this is sort

00:36:16,920 --> 00:36:20,130
of it's one of those things that's

00:36:18,119 --> 00:36:21,450
really nice in the weird circumstances

00:36:20,130 --> 00:36:23,609
if you get yourself into this sort of

00:36:21,450 --> 00:36:26,369
thing if you turn this on ribery dot

00:36:23,609 --> 00:36:28,849
enabled one it basically remembers the

00:36:26,369 --> 00:36:31,140
records merge conflicts this is

00:36:28,849 --> 00:36:33,510
beneficial if you're on a really long

00:36:31,140 --> 00:36:34,980
running project where you're you're

00:36:33,510 --> 00:36:37,349
continuously merging back and forth

00:36:34,980 --> 00:36:38,940
between the two or typically you'd be

00:36:37,349 --> 00:36:40,890
merging from like master into that

00:36:38,940 --> 00:36:43,530
longer ending branch and if you end up

00:36:40,890 --> 00:36:46,560
running into commits the whole time and

00:36:43,530 --> 00:36:48,180
you resolve those commits get won't

00:36:46,560 --> 00:36:49,650
necessarily remember those commits when

00:36:48,180 --> 00:36:51,329
you merge back in if it runs into those

00:36:49,650 --> 00:36:53,339
same sort of problems again so this

00:36:51,329 --> 00:36:54,990
basically will say get remember my

00:36:53,339 --> 00:36:57,690
actions on this particular merge commit

00:36:54,990 --> 00:36:59,579
here and then I won't have to do that

00:36:57,690 --> 00:37:02,520
again in the future

00:36:59,579 --> 00:37:04,349
color is good just turn on the color UI

00:37:02,520 --> 00:37:04,770
and obviously color it makes everything

00:37:04,349 --> 00:37:08,430
better

00:37:04,770 --> 00:37:10,680
yeh that's all I got there get amend I

00:37:08,430 --> 00:37:12,420
use a pull Bunch if I commit something

00:37:10,680 --> 00:37:13,829
and I haven't pushed yet and I want to

00:37:12,420 --> 00:37:15,030
say oh crap you know I made a

00:37:13,829 --> 00:37:17,460
misspelling here or something like that

00:37:15,030 --> 00:37:20,160
I just have good amend alias to get

00:37:17,460 --> 00:37:23,190
commit - oh man - see head and all it

00:37:20,160 --> 00:37:25,440
amend it to the the latest commit I

00:37:23,190 --> 00:37:27,750
think def C is not even needed here it

00:37:25,440 --> 00:37:28,950
just assumes to be head anyway

00:37:27,750 --> 00:37:30,569
but that's really cool then you know

00:37:28,950 --> 00:37:32,490
then you again you get sort of smart

00:37:30,569 --> 00:37:34,050
logical commits rather than a string of

00:37:32,490 --> 00:37:36,060
like oops forgot this oops forgot this

00:37:34,050 --> 00:37:40,530
whoops yeah we have a bunch of those

00:37:36,060 --> 00:37:42,720
people that get up to get undo is just

00:37:40,530 --> 00:37:45,359
an alias I have four get reset - soft

00:37:42,720 --> 00:37:46,920
head the previous commit - with current

00:37:45,359 --> 00:37:47,610
head you're on there's a bunch of

00:37:46,920 --> 00:37:49,440
different get on

00:37:47,610 --> 00:37:51,450
that depends on what you want I use this

00:37:49,440 --> 00:37:53,850
way because it retains your commit as

00:37:51,450 --> 00:37:54,660
staged rather than just like blowing all

00:37:53,850 --> 00:37:57,150
out or anything

00:37:54,660 --> 00:37:58,860
usually I do this in the case of you

00:37:57,150 --> 00:38:00,360
know I didn't want to like Amanda I want

00:37:58,860 --> 00:38:02,850
to still work on and stuff I just want

00:38:00,360 --> 00:38:05,940
to roll back that commit and still prep

00:38:02,850 --> 00:38:07,920
it to be committed again but it's just

00:38:05,940 --> 00:38:10,800
ready for me to do that

00:38:07,920 --> 00:38:13,650
get count I have alias to get short log

00:38:10,800 --> 00:38:14,700
- s n which is a nice way to just jump

00:38:13,650 --> 00:38:16,290
in and repository and say who is

00:38:14,700 --> 00:38:19,470
actually working on this project who can

00:38:16,290 --> 00:38:24,150
i bug to see you know who's breaking my

00:38:19,470 --> 00:38:26,100
stuff and then get credit is just a nice

00:38:24,150 --> 00:38:28,680
thing that I have it's a script that

00:38:26,100 --> 00:38:30,330
basically is just get commit - - Amen -

00:38:28,680 --> 00:38:33,330
author what you're doing is basically

00:38:30,330 --> 00:38:34,920
saying I want this guy to be credit

00:38:33,330 --> 00:38:37,050
credited for this commit that I'm

00:38:34,920 --> 00:38:40,560
pushing right now because it actually

00:38:37,050 --> 00:38:43,230
has both an author bit and a commitment

00:38:40,560 --> 00:38:44,490
where you can say this person is the

00:38:43,230 --> 00:38:47,280
author of this commit and then this

00:38:44,490 --> 00:38:50,070
person me is the committer this is

00:38:47,280 --> 00:38:51,570
really good if you want to remember that

00:38:50,070 --> 00:38:52,920
like oh I don't actually write this but

00:38:51,570 --> 00:38:55,800
this is the person I want to contact if

00:38:52,920 --> 00:38:57,720
something breaks in the future in this

00:38:55,800 --> 00:39:02,130
case it just sets the heads author is

00:38:57,720 --> 00:39:03,960
someone else okay that's what I got one

00:39:02,130 --> 00:39:05,570
last thing I just want to point out the

00:39:03,960 --> 00:39:08,820
most important thing in the octa cat is

00:39:05,570 --> 00:39:10,320
four legs in one tail none of this

00:39:08,820 --> 00:39:12,150
eight-legged thing that would be

00:39:10,320 --> 00:39:17,810
absolutely frightening humans don't like

00:39:12,150 --> 00:39:17,810
eight legs so that's what I got Thanks

00:39:24,089 --> 00:39:34,289
question time kick me off the stage time

00:39:26,889 --> 00:39:34,289
I got five let's talk about spam

00:39:47,729 --> 00:39:53,139
I don't believe so I think that did

00:39:51,339 --> 00:39:56,049
change at some point I'm gonna actually

00:39:53,139 --> 00:40:35,019
share the reason why that change the

00:39:56,049 --> 00:40:36,789
target right now so the sidebar is

00:40:35,019 --> 00:40:40,359
organized I believe by last push that

00:40:36,789 --> 00:40:43,719
date so basically more active repos will

00:40:40,359 --> 00:40:45,759
end up on the top of that list if you're

00:40:43,719 --> 00:40:47,799
talking about dealing with different

00:40:45,759 --> 00:40:49,269
organizational stuff and you want us to

00:40:47,799 --> 00:40:50,829
see just that organizations one I

00:40:49,269 --> 00:40:55,689
switched the context for the context

00:40:50,829 --> 00:40:56,859
switcher up top otherwise like are you

00:40:55,689 --> 00:41:00,119
talking about just trying to jump to a

00:40:56,859 --> 00:41:00,119
repository really quickly

00:41:03,220 --> 00:41:06,790
yeah I mean in that case if you if you

00:41:05,500 --> 00:41:08,589
have a particular repository that you

00:41:06,790 --> 00:41:10,119
want to jump to right away I just hit s

00:41:08,589 --> 00:41:13,060
and then use the new command bar and

00:41:10,119 --> 00:41:15,520
then just use the user repo syntax so if

00:41:13,060 --> 00:41:18,130
I want to jump to github slash github

00:41:15,520 --> 00:41:20,170
just hit ask github slash github enter

00:41:18,130 --> 00:41:22,710
and it'll just jump me right there it's

00:41:20,170 --> 00:41:22,710
probably easiest

00:41:24,670 --> 00:41:27,510
we met

00:41:38,310 --> 00:41:40,610
yes

00:41:41,510 --> 00:41:49,170
yeah get X has the good ed - P hunk

00:41:45,930 --> 00:41:52,680
staging getup for Mac also has

00:41:49,170 --> 00:41:55,740
line-by-line staging as well usually if

00:41:52,680 --> 00:41:57,000
I'm in a really big commit like a really

00:41:55,740 --> 00:41:58,650
nasty when I don't do that in command

00:41:57,000 --> 00:42:00,000
line either because it's confusing I

00:41:58,650 --> 00:42:01,619
have to read the options every single

00:42:00,000 --> 00:42:07,400
time and figure it out so I just go to

00:42:01,619 --> 00:42:07,400
some other GUI to do that as well yeah

00:42:09,560 --> 00:42:42,869
yeah - I for the interactive as well we

00:42:40,590 --> 00:42:46,109
try to do like vim bindings for a lot of

00:42:42,869 --> 00:42:49,170
different things on the site and we try

00:42:46,109 --> 00:42:56,240
to show some Emacs love sometimes just

00:42:49,170 --> 00:42:58,050
kidding we love you all anybody else

00:42:56,240 --> 00:43:00,630
cool I'll be around

00:42:58,050 --> 00:43:01,640
ask me questions grab a sticker party

00:43:00,630 --> 00:43:05,420
tonight

00:43:01,640 --> 00:43:05,420
cool thanks

00:43:18,360 --> 00:43:20,420

YouTube URL: https://www.youtube.com/watch?v=Foz9yvMkvlA


