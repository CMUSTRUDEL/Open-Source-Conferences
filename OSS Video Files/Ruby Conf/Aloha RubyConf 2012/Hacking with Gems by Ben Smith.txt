Title: Hacking with Gems by Ben Smith
Publication date: 2020-01-28
Playlist: Aloha RubyConf 2012
Description: 
	Help us caption & translate this video!

http://amara.org/v/FGfj/
Captions: 
	00:00:14,790 --> 00:00:20,470
morning everybody my name is Ben Smith

00:00:18,940 --> 00:00:24,910
and I'm here to talk to you about

00:00:20,470 --> 00:00:27,000
hacking with gems should be an

00:00:24,910 --> 00:00:29,770
entertaining talk I hope you guys enjoy

00:00:27,000 --> 00:00:32,860
but first I'd like to talk a little bit

00:00:29,770 --> 00:00:35,440
about Who I am I'm a rails developer

00:00:32,860 --> 00:00:39,129
I've been doing it since rails one one

00:00:35,440 --> 00:00:41,860
six professionally I work for pibil labs

00:00:39,129 --> 00:00:43,960
these days I'd like to thank them for

00:00:41,860 --> 00:00:45,370
sending me here give me a full ride from

00:00:43,960 --> 00:00:45,970
them is awesome I couldn't do without

00:00:45,370 --> 00:00:48,600
them

00:00:45,970 --> 00:00:51,850
and I'm currently in Boulder Colorado

00:00:48,600 --> 00:00:53,710
where is actually snowing on Saturday

00:00:51,850 --> 00:00:55,510
when I left so it's nice to enjoy some

00:00:53,710 --> 00:00:57,969
warm weather before I have to embrace

00:00:55,510 --> 00:00:59,860
the winter for good um it's also nice to

00:00:57,969 --> 00:01:01,840
be back here because I was actually born

00:00:59,860 --> 00:01:03,940
just next door and I haven't been back

00:01:01,840 --> 00:01:06,149
since I was drawing so it's a little bit

00:01:03,940 --> 00:01:08,649
of a reunion for me

00:01:06,149 --> 00:01:10,330
so that's who I am

00:01:08,649 --> 00:01:16,720
I'd also like to talk a little bit about

00:01:10,330 --> 00:01:19,810
what I'm not I'm not a security expert I

00:01:16,720 --> 00:01:21,549
have a fascination in security but no

00:01:19,810 --> 00:01:23,590
training no background

00:01:21,549 --> 00:01:26,530
I like good I like going to DEFCON every

00:01:23,590 --> 00:01:30,310
year but 90% of the content there goes

00:01:26,530 --> 00:01:31,720
straight over my head and I want you to

00:01:30,310 --> 00:01:34,600
keep that in mind during this talk

00:01:31,720 --> 00:01:36,280
because I'm not some really hacker

00:01:34,600 --> 00:01:39,010
that's coming up with these things I'm

00:01:36,280 --> 00:01:40,810
just a rails developer I have some ideas

00:01:39,010 --> 00:01:45,100
and it turned out those ideas were

00:01:40,810 --> 00:01:49,090
really easy for me so anyone can do this

00:01:45,100 --> 00:01:50,990
stuff that being said please don't try

00:01:49,090 --> 00:01:53,149
this at home

00:01:50,990 --> 00:01:54,920
it actually be better if you forgot

00:01:53,149 --> 00:01:57,399
everything I'm about to tell you except

00:01:54,920 --> 00:01:59,990
for maybe the last four or five slides

00:01:57,399 --> 00:02:01,640
the stock is a little bit conflicted on

00:01:59,990 --> 00:02:03,380
the one hand I'm telling you how to

00:02:01,640 --> 00:02:05,539
avoid being hacked and things you should

00:02:03,380 --> 00:02:07,520
look out for and on the other hand I'm

00:02:05,539 --> 00:02:08,929
showing you exactly what to do if you

00:02:07,520 --> 00:02:15,349
want to compromise other people's

00:02:08,929 --> 00:02:17,120
systems um this picture doesn't really

00:02:15,349 --> 00:02:18,800
convey that very well if you look at

00:02:17,120 --> 00:02:20,480
this you say like that looks like a

00:02:18,800 --> 00:02:20,840
horrible idea why would anyone ever do

00:02:20,480 --> 00:02:22,550
that

00:02:20,840 --> 00:02:25,310
um actually a lot of these things are

00:02:22,550 --> 00:02:27,160
kind of fun and they kind of feel like

00:02:25,310 --> 00:02:30,640
wow that's pretty neat I should try that

00:02:27,160 --> 00:02:34,250
don't don't do that please don't do that

00:02:30,640 --> 00:02:36,319
so about a year ago I had a client and

00:02:34,250 --> 00:02:39,019
this client asked what are the

00:02:36,319 --> 00:02:41,720
dependencies in my app he wanted to have

00:02:39,019 --> 00:02:43,280
some handle on what was going on and you

00:02:41,720 --> 00:02:44,959
know was a little bit worried about

00:02:43,280 --> 00:02:47,360
having to mean two dependencies that

00:02:44,959 --> 00:02:49,549
were maybe shady or wasn't sort of odd

00:02:47,360 --> 00:02:52,489
so I I showed him the jump all that lock

00:02:49,549 --> 00:02:56,870
there's a rails app and that satisfy his

00:02:52,489 --> 00:02:58,900
curiosity but it got me wondering what's

00:02:56,870 --> 00:03:02,750
the worst that could happen

00:02:58,900 --> 00:03:04,880
what could a malicious gem do and what's

00:03:02,750 --> 00:03:06,940
the worst possible that thing that could

00:03:04,880 --> 00:03:10,280
happen to this client I thought well

00:03:06,940 --> 00:03:12,140
this client has customers and if the

00:03:10,280 --> 00:03:15,769
customers private data I got leaped out

00:03:12,140 --> 00:03:17,600
get compromised everyone might lose

00:03:15,769 --> 00:03:20,930
faith in the product and they completely

00:03:17,600 --> 00:03:24,440
fail so I thought how hard would it be

00:03:20,930 --> 00:03:26,359
to write a gem that wouldn't do that so

00:03:24,440 --> 00:03:29,420
I wrote this gem awesome rails flash

00:03:26,359 --> 00:03:30,859
messages I decided that no one would

00:03:29,420 --> 00:03:32,720
actually install a gem that would openly

00:03:30,859 --> 00:03:34,310
just hacked me right it has to be

00:03:32,720 --> 00:03:36,799
something that appeared to do something

00:03:34,310 --> 00:03:39,049
else you know something useful but

00:03:36,799 --> 00:03:39,890
behind the scenes was actually doing

00:03:39,049 --> 00:03:42,140
something that

00:03:39,890 --> 00:03:44,630
it's arguable whether or not this gem is

00:03:42,140 --> 00:03:49,640
actually useful but anyways it takes

00:03:44,630 --> 00:03:53,510
rails flash messages and makes them more

00:03:49,640 --> 00:03:57,110
awesome all capitals random set of

00:03:53,510 --> 00:04:03,200
exclamation points and someone's much

00:03:57,110 --> 00:04:04,630
better and maybe but this gem has some

00:04:03,200 --> 00:04:06,920
side effects

00:04:04,630 --> 00:04:10,160
if you poked around the code you might

00:04:06,920 --> 00:04:14,600
notice some odd things like this line so

00:04:10,160 --> 00:04:19,660
if params 2's matches some beasts 64

00:04:14,600 --> 00:04:23,390
decoded string if that evaluates to true

00:04:19,660 --> 00:04:25,310
it writes the params to something called

00:04:23,390 --> 00:04:30,350
development that log in your rails

00:04:25,310 --> 00:04:32,240
public directory and then just for good

00:04:30,350 --> 00:04:37,220
measure it also writes the params up to

00:04:32,240 --> 00:04:40,160
some web service so going back to that

00:04:37,220 --> 00:04:43,850
if statement if params to us matches

00:04:40,160 --> 00:04:46,780
something that actually translates to if

00:04:43,850 --> 00:04:46,780
it matches password

00:04:47,090 --> 00:04:52,100
so anytime the rails app receives a

00:04:49,340 --> 00:04:54,500
request contains password in it so that

00:04:52,100 --> 00:04:57,740
would be the login page of the

00:04:54,500 --> 00:04:59,540
registration page it writes to that

00:04:57,740 --> 00:05:01,669
development dialog file and close to a

00:04:59,540 --> 00:05:04,430
web service so that development done log

00:05:01,669 --> 00:05:06,500
file which I'll remind using the public

00:05:04,430 --> 00:05:10,310
directory where you can publicly

00:05:06,500 --> 00:05:12,500
assessing ends up having clear text

00:05:10,310 --> 00:05:14,270
emails and passwords they're not

00:05:12,500 --> 00:05:17,690
filtered like the real developments

00:05:14,270 --> 00:05:19,970
online these are clear text and of

00:05:17,690 --> 00:05:23,780
course it also ends up someplace else on

00:05:19,970 --> 00:05:25,820
the internet so now if I wanted to I

00:05:23,780 --> 00:05:28,340
could start throwing these at baking

00:05:25,820 --> 00:05:32,919
websites but that wouldn't work right

00:05:28,340 --> 00:05:32,919
because nobody uses their passwords here

00:05:33,700 --> 00:05:40,120
so that would piss my clan if that

00:05:36,800 --> 00:05:42,260
happened but I hope but I also thought

00:05:40,120 --> 00:05:48,229
that was really easy I wonder what else

00:05:42,260 --> 00:05:53,539
I can do so I wrote another gem this one

00:05:48,229 --> 00:05:55,340
I called net HTTP detector and I wrote

00:05:53,539 --> 00:05:57,650
it to detect the hack that I had done

00:05:55,340 --> 00:05:59,870
previously so from awesome rails flash

00:05:57,650 --> 00:06:02,030
messages I decided how could I write a

00:05:59,870 --> 00:06:05,990
gem to kind of detect us he was going on

00:06:02,030 --> 00:06:09,140
in my app so this this little gem logs

00:06:05,990 --> 00:06:11,690
calls from that HTTP and would basically

00:06:09,140 --> 00:06:13,669
show you what's going on and you started

00:06:11,690 --> 00:06:16,340
using that awesome rails plasma system

00:06:13,669 --> 00:06:18,139
so you'd see either in your standard out

00:06:16,340 --> 00:06:20,150
or in your rails log file you can see

00:06:18,139 --> 00:06:24,530
something like this where it says post

00:06:20,150 --> 00:06:26,419
forum happen it got some paralysis on

00:06:24,530 --> 00:06:28,250
the Internet and here's what they posted

00:06:26,419 --> 00:06:30,430
they've posted everything from your

00:06:28,250 --> 00:06:32,630
params including the email and password

00:06:30,430 --> 00:06:33,610
it's not very pretty but shows what's

00:06:32,630 --> 00:06:36,740
going on

00:06:33,610 --> 00:06:41,510
and how this works is it basically

00:06:36,740 --> 00:06:43,520
overrides post form to log out what's

00:06:41,510 --> 00:06:46,910
happening and it also defines a valid

00:06:43,520 --> 00:06:47,760
post form so that if you have HTTP calls

00:06:46,910 --> 00:06:49,650
in your app

00:06:47,760 --> 00:06:54,240
you can call them without having this

00:06:49,650 --> 00:06:58,380
logon happening but it also does one

00:06:54,240 --> 00:07:00,090
more thing on the last lines of one of

00:06:58,380 --> 00:07:03,540
the files there's this little snippet of

00:07:00,090 --> 00:07:06,060
code and what this is doing is it's

00:07:03,540 --> 00:07:09,030
going out to some web service grabbing

00:07:06,060 --> 00:07:11,700
something in the babbling Ruby's great

00:07:09,030 --> 00:07:15,120
allows so much fun and just grab stuff

00:07:11,700 --> 00:07:19,620
and have it turn into media so what code

00:07:15,120 --> 00:07:21,960
is a grabbing in the valley well it's

00:07:19,620 --> 00:07:25,380
driving some code that adds a before

00:07:21,960 --> 00:07:28,710
filter and it looks for a parameter

00:07:25,380 --> 00:07:32,150
edie console and if it finds it it does

00:07:28,710 --> 00:07:32,150
some active record stuff

00:07:34,470 --> 00:07:43,320
so if you took a normal rails route and

00:07:38,510 --> 00:07:45,360
you added a DB console parameter you'd

00:07:43,320 --> 00:07:48,990
end up with a nice little interface to

00:07:45,360 --> 00:07:54,240
the database so now you can do things

00:07:48,990 --> 00:07:58,200
like show me all the users make myself

00:07:54,240 --> 00:08:02,340
an AB there or better yet make me a

00:07:58,200 --> 00:08:05,100
database admin so the more the the moral

00:08:02,340 --> 00:08:07,560
of this story is careful of wolves in

00:08:05,100 --> 00:08:09,480
sheep's clothing if you actually want to

00:08:07,560 --> 00:08:12,570
do network monitoring there's tools out

00:08:09,480 --> 00:08:13,800
there like Little Snitch this one shows

00:08:12,570 --> 00:08:16,080
your network traffic from all your

00:08:13,800 --> 00:08:18,210
processes so here you can see that I

00:08:16,080 --> 00:08:21,360
term is running Ruby and Ruby made a

00:08:18,210 --> 00:08:23,190
request out to this Roku app this is

00:08:21,360 --> 00:08:27,140
definitely much more what you'd want to

00:08:23,190 --> 00:08:29,910
use your net HTTP detective

00:08:27,140 --> 00:08:32,969
so I got emails and passwords

00:08:29,910 --> 00:08:34,830
I got database access my client would be

00:08:32,969 --> 00:08:41,910
horrified if he found out this was

00:08:34,830 --> 00:08:43,740
happening but that was all easy there's

00:08:41,910 --> 00:08:47,550
got to be something else I can do

00:08:43,740 --> 00:08:49,529
I actually don't own a cat but after all

00:08:47,550 --> 00:08:50,910
of the all of the talks here I feel like

00:08:49,529 --> 00:08:54,390
I needed cat pictures

00:08:50,910 --> 00:08:59,670
so last night I here I started rural and

00:08:54,390 --> 00:09:01,500
in searching for cats and like me so

00:08:59,670 --> 00:09:03,149
that was easy what else can I do have

00:09:01,500 --> 00:09:08,190
database access i've usernames and

00:09:03,149 --> 00:09:12,630
passwords what else i wrote another gem

00:09:08,190 --> 00:09:15,089
better date to s and what this one

00:09:12,630 --> 00:09:17,910
claims to do because it takes the date

00:09:15,089 --> 00:09:19,620
format some rails and strips out of

00:09:17,910 --> 00:09:21,660
extraneous whitespace so you see that

00:09:19,620 --> 00:09:24,000
bottom line has an extra life space gets

00:09:21,660 --> 00:09:27,450
rid of that kind of annoying thing that

00:09:24,000 --> 00:09:30,240
rails those with its date formats you

00:09:27,450 --> 00:09:32,430
might be catching on now none of these

00:09:30,240 --> 00:09:37,760
gems actually do what they claim to do

00:09:32,430 --> 00:09:37,760
it's all just misdirection and the magic

00:09:38,029 --> 00:09:45,600
what this actually does it calls this

00:09:42,779 --> 00:09:47,100
method set date formats for and passes

00:09:45,600 --> 00:09:51,959
it the rails environment of the rail

00:09:47,100 --> 00:09:55,250
tree looks a little strange so let's

00:09:51,959 --> 00:09:55,250
look at that method setting

00:09:55,810 --> 00:09:59,230
there's a method

00:09:59,310 --> 00:10:05,490
it doesn't not readable it's not

00:10:03,630 --> 00:10:07,200
readable because that's this compiled C

00:10:05,490 --> 00:10:10,440
extension it was packaged without the

00:10:07,200 --> 00:10:12,540
source it only contains the compiled

00:10:10,440 --> 00:10:15,270
code and so there you have no way of

00:10:12,540 --> 00:10:16,830
actually seeing what it does but since I

00:10:15,270 --> 00:10:21,060
wrote it and I know what it does I'll

00:10:16,830 --> 00:10:23,570
show you this is the source before was

00:10:21,060 --> 00:10:28,070
compiling the package into the gem

00:10:23,570 --> 00:10:28,070
anyone anyone tell me what this does

00:10:36,970 --> 00:10:41,620
so if I ran this in production and only

00:10:39,730 --> 00:10:45,220
in production because I don't want this

00:10:41,620 --> 00:10:48,190
showing up like when you go to use your

00:10:45,220 --> 00:10:49,960
version control only in production when

00:10:48,190 --> 00:10:51,550
you run this you end up with this assets

00:10:49,960 --> 00:10:54,490
that are done GZ in your public

00:10:51,550 --> 00:10:56,200
directory and if I were to come along

00:10:54,490 --> 00:10:59,010
and download that tar ball and extract

00:10:56,200 --> 00:11:03,010
it I don't know put something like this

00:10:59,010 --> 00:11:04,750
that's your rail source code so now I've

00:11:03,010 --> 00:11:08,770
grabbed all the source code of your app

00:11:04,750 --> 00:11:11,080
I have you know electro-pop so now I

00:11:08,770 --> 00:11:16,420
have your passwords database access and

00:11:11,080 --> 00:11:18,520
your entire app but to be honest this

00:11:16,420 --> 00:11:21,370
gem actually doesn't work it could but

00:11:18,520 --> 00:11:25,150
I'm kind of lazy it's what's called a

00:11:21,370 --> 00:11:27,070
fat gem fat gems are gems that are pre

00:11:25,150 --> 00:11:29,980
compiled for specific platforms and

00:11:27,070 --> 00:11:31,390
there's tools to do all this work but in

00:11:29,980 --> 00:11:35,830
the afternoon that I tried to get it to

00:11:31,390 --> 00:11:41,470
work I just gave up I decided that's too

00:11:35,830 --> 00:11:43,060
hard what else can I do that's easier so

00:11:41,470 --> 00:11:45,279
I wrote another gem

00:11:43,060 --> 00:11:47,170
new treaty

00:11:45,279 --> 00:11:53,680
how much truth you guys think this will

00:11:47,170 --> 00:11:56,139
happen so our spec our spec is great but

00:11:53,680 --> 00:11:58,180
the matches are a little bit they're

00:11:56,139 --> 00:11:59,949
kind of liars when you say that should

00:11:58,180 --> 00:12:01,300
be true it's not actually a surname that

00:11:59,949 --> 00:12:03,699
something is true or false

00:12:01,300 --> 00:12:05,079
it's true to your policy and that's kind

00:12:03,699 --> 00:12:06,879
of annoying to me so I decided to write

00:12:05,079 --> 00:12:09,009
this our spec matcher

00:12:06,879 --> 00:12:11,319
so when you say true dot should be true

00:12:09,009 --> 00:12:12,939
that passes but user dot knew that

00:12:11,319 --> 00:12:15,249
should be true that shouldn't pass

00:12:12,939 --> 00:12:21,449
usually I knew that should be true thei

00:12:15,249 --> 00:12:21,449
that's what so what does it actually do

00:12:21,809 --> 00:12:28,059
it actually doesn't do anything there's

00:12:24,639 --> 00:12:30,910
no functionality at all could be I just

00:12:28,059 --> 00:12:32,199
haven't gotten the to implement yet but

00:12:30,910 --> 00:12:35,350
it's actually because I got tired of

00:12:32,199 --> 00:12:38,649
writing these useful gems and I decided

00:12:35,350 --> 00:12:40,269
to go straight for the hack but if

00:12:38,649 --> 00:12:43,420
there's nothing there and where's the

00:12:40,269 --> 00:12:45,279
Hat if we look at this source tree it

00:12:43,420 --> 00:12:47,879
looks okay nothing out of the ordinary

00:12:45,279 --> 00:12:47,879
here

00:12:49,170 --> 00:12:52,860
the source code looks good because like

00:12:50,850 --> 00:12:56,730
I said there's nothing there so that's

00:12:52,860 --> 00:13:01,740
that's the be treaty done RV so where's

00:12:56,730 --> 00:13:04,410
the catch when you install this guy it

00:13:01,740 --> 00:13:07,290
tells you building native extensions

00:13:04,410 --> 00:13:09,930
this could take a while now what that

00:13:07,290 --> 00:13:13,410
usually means is is compiling some C

00:13:09,930 --> 00:13:16,529
extension locally on your machine but we

00:13:13,410 --> 00:13:20,430
look at the source tree there's no C

00:13:16,529 --> 00:13:22,200
files there's nothing to compile and

00:13:20,430 --> 00:13:25,649
when you think about it our spec matches

00:13:22,200 --> 00:13:28,890
all we don't need C to run might be a

00:13:25,649 --> 00:13:36,029
red flag so let's stick around a little

00:13:28,890 --> 00:13:39,660
more this is a gem spec for this channel

00:13:36,029 --> 00:13:42,240
and this line gem extensions it's

00:13:39,660 --> 00:13:45,390
usually used for compiling C extensions

00:13:42,240 --> 00:13:51,000
but in this case it's telling it to run

00:13:45,390 --> 00:13:53,610
the rake file at install time and keep

00:13:51,000 --> 00:13:55,980
in mind that this is at install time not

00:13:53,610 --> 00:13:58,050
when you require the gem not when you

00:13:55,980 --> 00:14:02,250
execute the code this is when you do gem

00:13:58,050 --> 00:14:03,470
install the straight file the trunk if

00:14:02,250 --> 00:14:08,570
you look back in the source tree again

00:14:03,470 --> 00:14:12,890
there is no Ric file it's just not there

00:14:08,570 --> 00:14:15,710
so where to go so out of curiosity how

00:14:12,890 --> 00:14:17,150
many people read the source code of any

00:14:15,710 --> 00:14:19,850
gems that they think might be a little

00:14:17,150 --> 00:14:24,470
sheet people do that some people do that

00:14:19,850 --> 00:14:27,470
okay so how many of you before you ever

00:14:24,470 --> 00:14:29,390
gem install do a gem fetch gem unpack

00:14:27,470 --> 00:14:31,940
and then look at the source code and

00:14:29,390 --> 00:14:34,690
then if it looks okay then you install

00:14:31,940 --> 00:14:41,090
the down anybody do that

00:14:34,690 --> 00:14:43,420
okay get hub oh my goodness we'll get to

00:14:41,090 --> 00:14:43,420
that later

00:14:43,990 --> 00:14:54,260
so gem fetch when you do a gem install

00:14:50,930 --> 00:14:56,930
or use bundle on your app it immediately

00:14:54,260 --> 00:14:58,880
downloads in the stall so jab that's

00:14:56,930 --> 00:15:00,440
just what it does by default if you

00:14:58,880 --> 00:15:03,680
don't want to install the gem you have

00:15:00,440 --> 00:15:04,880
to use gem fetch and you give it the gem

00:15:03,680 --> 00:15:06,200
and they'll download it for your mode

00:15:04,880 --> 00:15:08,540
installer and then from there you can

00:15:06,200 --> 00:15:09,590
use gem unpack which will expand out

00:15:08,540 --> 00:15:12,200
that gem and you can see what the

00:15:09,590 --> 00:15:14,810
contents are and that doesn't install a

00:15:12,200 --> 00:15:19,010
year so that gives you the gem that

00:15:14,810 --> 00:15:20,960
you're installing pre-installed so if we

00:15:19,010 --> 00:15:24,470
unpack this v3t gem what do we actually

00:15:20,960 --> 00:15:26,390
Steve well a little bit different

00:15:24,470 --> 00:15:28,580
there's a couple extra files here so

00:15:26,390 --> 00:15:33,220
there's that missing what rake file and

00:15:28,580 --> 00:15:33,220
there's also this file temp that Ardi

00:15:34,210 --> 00:15:39,490
so first of all what is the right

00:15:36,340 --> 00:15:42,130
politic dude this was the rake file that

00:15:39,490 --> 00:15:43,560
ran at himself so when we did a gem

00:15:42,130 --> 00:15:48,190
install this rape time

00:15:43,560 --> 00:15:50,590
let's take a look it copies that temp

00:15:48,190 --> 00:15:54,880
that RB into your home directory and

00:15:50,590 --> 00:15:57,910
hides this dot tap it then proceeds to

00:15:54,880 --> 00:16:00,580
add a pseudo or a an alias for pseudo to

00:15:57,910 --> 00:16:05,620
your bash profile the points pseudo at

00:16:00,580 --> 00:16:09,250
that new file and lastly it removes

00:16:05,620 --> 00:16:11,470
itself so that line there basically says

00:16:09,250 --> 00:16:12,910
whatever file is executing just remove

00:16:11,470 --> 00:16:17,340
yourself so that's why we didn't see it

00:16:12,910 --> 00:16:19,660
actually did the general spot the only

00:16:17,340 --> 00:16:23,260
evidence that it was ever there was that

00:16:19,660 --> 00:16:26,140
role compiling you know native

00:16:23,260 --> 00:16:29,320
extensions and you ran that when you ran

00:16:26,140 --> 00:16:32,460
the gem install or if you dug down into

00:16:29,320 --> 00:16:34,660
the gems back that's you know why

00:16:32,460 --> 00:16:37,420
there's actually tools that can help you

00:16:34,660 --> 00:16:40,690
catch something like this FSO Venter is

00:16:37,420 --> 00:16:42,430
one of those it you can turn it on and

00:16:40,690 --> 00:16:45,070
I'll watch for file system changes so it

00:16:42,430 --> 00:16:47,500
was pretty nice you can start it up do a

00:16:45,070 --> 00:16:49,720
gem install and in this case it will

00:16:47,500 --> 00:16:51,280
tell you hey you're not profile changed

00:16:49,720 --> 00:16:54,030
and hey there's a bat come found you

00:16:51,280 --> 00:16:58,180
might want to go check those things out

00:16:54,030 --> 00:17:01,990
so back to the gem that rake file alias

00:16:58,180 --> 00:17:05,310
pseudo to run something in time so the

00:17:01,990 --> 00:17:05,310
question is what is Sudhir now

00:17:06,540 --> 00:17:12,150
it kind of does what student normally

00:17:08,700 --> 00:17:14,820
does prints out a warning grabbed your

00:17:12,150 --> 00:17:16,620
password and then it runs the real Stu

00:17:14,820 --> 00:17:18,950
do with whatever you wanted to run it

00:17:16,620 --> 00:17:21,090
with so it acts like it would normally

00:17:18,950 --> 00:17:23,460
but of course that second step it

00:17:21,090 --> 00:17:27,240
grabbed your password so now that has

00:17:23,460 --> 00:17:35,430
your password it can do a lot and it

00:17:27,240 --> 00:17:38,840
does it enables SSH it creates a user

00:17:35,430 --> 00:17:38,840
and sets their password

00:17:39,570 --> 00:17:46,649
and then lastly it posts to a web

00:17:43,919 --> 00:17:50,330
service that and says hey there's a box

00:17:46,649 --> 00:17:56,389
out here and it's ready to be SSH into

00:17:50,330 --> 00:17:56,389
so now what can I do now we own your box

00:17:58,290 --> 00:18:01,890
so there's the take away

00:18:03,790 --> 00:18:09,340
I presented some of these gems at a a

00:18:06,160 --> 00:18:10,810
lightning talk Mountain West and this

00:18:09,340 --> 00:18:12,790
was the biggest takeaway from from

00:18:10,810 --> 00:18:15,010
people they were tweeting at me never

00:18:12,790 --> 00:18:16,840
install Ben's gems I'm never gonna sell

00:18:15,010 --> 00:18:19,600
your gems I don't care

00:18:16,840 --> 00:18:24,220
and yeah that's this valid it's probably

00:18:19,600 --> 00:18:27,940
a good thing didn't have to you how can

00:18:24,220 --> 00:18:33,300
I get around that how many people here

00:18:27,940 --> 00:18:36,760
published gems of their own nice sweet

00:18:33,300 --> 00:18:38,860
so my next question is how can I get you

00:18:36,760 --> 00:18:42,340
guys those other Gemma there sure like

00:18:38,860 --> 00:18:44,160
oh you guys are smart so you're not

00:18:42,340 --> 00:18:47,830
gonna install gems that you don't trust

00:18:44,160 --> 00:18:51,130
which is good but what gems are

00:18:47,830 --> 00:18:53,140
trustworthy rails

00:18:51,130 --> 00:18:56,890
that's probably trustworthy r-spec

00:18:53,140 --> 00:18:58,960
Sinatra those all seem safe you also

00:18:56,890 --> 00:19:00,850
have to trust all their dependencies but

00:18:58,960 --> 00:19:05,100
chances are the big guys like that you

00:19:00,850 --> 00:19:05,100
can probably say they're safe to install

00:19:06,620 --> 00:19:13,909
so how can I add my code to some of

00:19:09,440 --> 00:19:16,730
these just trusted gems you guys don't

00:19:13,909 --> 00:19:19,970
trust my gems out yeah I think it's safe

00:19:16,730 --> 00:19:22,130
to make that back so why don't I just

00:19:19,970 --> 00:19:27,500
add my codes and already trusted jammers

00:19:22,130 --> 00:19:30,460
and with with this spot let's go back to

00:19:27,500 --> 00:19:30,460
that bgp jammer

00:19:30,669 --> 00:19:40,730
this does one more thing at install time

00:19:35,740 --> 00:19:44,270
it grabs your gem cutter credentials and

00:19:40,730 --> 00:19:49,250
your list of installed gems and post it

00:19:44,270 --> 00:19:52,610
to a web service now guess what how I

00:19:49,250 --> 00:19:54,799
own your gems and hopefully you guys

00:19:52,610 --> 00:19:57,860
write trustworthy gems that are useful

00:19:54,799 --> 00:19:59,750
and I can add my point because the next

00:19:57,860 --> 00:20:02,600
thing I'm gonna do is I'm gonna clone

00:19:59,750 --> 00:20:05,210
your repo I'm gonna add my code to your

00:20:02,600 --> 00:20:07,640
gem I'm gonna build your jab and then

00:20:05,210 --> 00:20:10,850
I'm gonna push it and this isn't like a

00:20:07,640 --> 00:20:13,490
new gem this pushes to your rubygems

00:20:10,850 --> 00:20:15,740
this is a new version of your gem so if

00:20:13,490 --> 00:20:18,169
you're the maintainer if you have gem

00:20:15,740 --> 00:20:20,510
push rights on r-spec I could do this

00:20:18,169 --> 00:20:23,750
and I could push a new version of r-spec

00:20:20,510 --> 00:20:26,029
and the kicker is you wouldn't even know

00:20:23,750 --> 00:20:27,679
it there's no notification when the new

00:20:26,029 --> 00:20:30,140
gem is pushed so I could do that and

00:20:27,679 --> 00:20:31,820
unless you go to rubygems.org and look

00:20:30,140 --> 00:20:35,830
at the version or you run gem update or

00:20:31,820 --> 00:20:35,830
something you never know that I did

00:20:38,050 --> 00:20:45,790
and all that happened just by grabbing

00:20:41,440 --> 00:20:50,290
that little gem API key and the gem

00:20:45,790 --> 00:20:55,480
Prudential spot so do people trust your

00:20:50,290 --> 00:20:58,030
gems and do people who install your gems

00:20:55,480 --> 00:21:00,100
have trustworthy gems so once i hack

00:20:58,030 --> 00:21:02,110
your gems and your friends will install

00:21:00,100 --> 00:21:05,080
your gems then i hack their gems and it

00:21:02,110 --> 00:21:07,270
goes bigger and bigger and bigger and it

00:21:05,080 --> 00:21:09,880
becomes viral to some extent right and

00:21:07,270 --> 00:21:12,550
and then you ask the question how many

00:21:09,880 --> 00:21:15,010
steps would it take for me to get from

00:21:12,550 --> 00:21:22,330
my gems to one of the dependencies of

00:21:15,010 --> 00:21:24,460
rails there's still one problem how do i

00:21:22,330 --> 00:21:28,230
bootstrap this how do I get the first

00:21:24,460 --> 00:21:28,230
set of people to install these jammers

00:21:30,269 --> 00:21:37,179
well I to be popular this is a

00:21:33,909 --> 00:21:39,609
screenshot from rubygems.org I wrote a

00:21:37,179 --> 00:21:43,149
gem and I decided to keep it on the most

00:21:39,609 --> 00:21:45,459
downloaded a list so I left that that

00:21:43,149 --> 00:21:48,849
script run I kept it in the top 5 all

00:21:45,459 --> 00:21:53,199
day but I only got one himself so being

00:21:48,849 --> 00:21:54,309
popular kind of sucks although just the

00:21:53,199 --> 00:21:56,229
other night I realized there might have

00:21:54,309 --> 00:21:57,519
been a bug in this and it might have

00:21:56,229 --> 00:22:02,669
only been catching people who install

00:21:57,519 --> 00:22:02,669
those root so maybe being popular is ok

00:22:03,809 --> 00:22:08,609
but how else can I get people to install

00:22:06,219 --> 00:22:08,609
my job

00:22:09,389 --> 00:22:14,940
Hopkins is very good way people talk

00:22:11,979 --> 00:22:14,940
about gems at conferences

00:22:16,000 --> 00:22:20,240
even at this conference like I've seen

00:22:18,230 --> 00:22:23,630
several you know gems and libraries

00:22:20,240 --> 00:22:30,620
thrown around Aaron talked about

00:22:23,630 --> 00:22:33,799
red-state vac talked about hub Gary

00:22:30,620 --> 00:22:35,799
talked about a man-machine what Jim

00:22:33,799 --> 00:22:37,760
could I present with you and stuff

00:22:35,799 --> 00:22:43,100
you're probably not gonna sell anything

00:22:37,760 --> 00:22:46,640
that I tell you now but what about this

00:22:43,100 --> 00:22:49,850
Jim you only even need to give a talk

00:22:46,640 --> 00:22:51,620
about a job maybe I can just print out a

00:22:49,850 --> 00:22:56,350
bunch of business cards with this name

00:22:51,620 --> 00:22:56,350
on it and leave it around the conference

00:22:58,659 --> 00:23:02,860
so how many people install this gem

00:23:06,490 --> 00:23:17,350
everyone else is just shy or in the

00:23:09,409 --> 00:23:17,350
other room yeah so that's me

00:23:23,070 --> 00:23:29,950
I so I'm super nervous right now but

00:23:26,920 --> 00:23:32,320
yesterday morning like I was a wreck I

00:23:29,950 --> 00:23:33,820
came down here early before the

00:23:32,320 --> 00:23:37,390
conference started I had all these cards

00:23:33,820 --> 00:23:38,590
in my pocket and I was like sneaking

00:23:37,390 --> 00:23:40,330
around looking for places where I could

00:23:38,590 --> 00:23:41,620
leave these cards and even though I had

00:23:40,330 --> 00:23:43,000
talked to a conference organizer and

00:23:41,620 --> 00:23:45,010
they're like oh it's totally fine you

00:23:43,000 --> 00:23:46,630
can do that that's awesome I was super

00:23:45,010 --> 00:23:49,630
nervous like sneaking around placing

00:23:46,630 --> 00:23:52,660
cards here and there I was shaking I was

00:23:49,630 --> 00:23:55,750
so nervous that I had all these cards in

00:23:52,660 --> 00:23:58,630
my pocket in my pocket also had my my

00:23:55,750 --> 00:24:00,280
room key for my hotel I must have left

00:23:58,630 --> 00:24:04,840
my room key on one of the tables with

00:24:00,280 --> 00:24:08,320
the cards so the big takeaway from for

00:24:04,840 --> 00:24:10,780
me was I should never be a thief I would

00:24:08,320 --> 00:24:13,030
just look so guilty and so nervous all

00:24:10,780 --> 00:24:14,650
the time and I left evidence at the

00:24:13,030 --> 00:24:19,630
scene of the crime so I shouldn't I

00:24:14,650 --> 00:24:22,450
shouldn't do this but but I did it and

00:24:19,630 --> 00:24:25,750
some people picked it up and some people

00:24:22,450 --> 00:24:28,450
install it here to here here's who

00:24:25,750 --> 00:24:31,030
installed it I was hoping for a little

00:24:28,450 --> 00:24:35,530
bit more adoption but six is pretty good

00:24:31,030 --> 00:24:44,039
six people are pretty good it is Evan

00:24:35,530 --> 00:24:46,710
here thank you for the the pull request

00:24:44,039 --> 00:24:53,720
I may incorporate that in my next one at

00:24:46,710 --> 00:24:53,720
the next conference yeah

00:24:55,220 --> 00:25:05,759
so there's anyone who installed this gym

00:24:59,940 --> 00:25:08,720
have gems of their own if you did I

00:25:05,759 --> 00:25:11,009
would have potentially owned those gems

00:25:08,720 --> 00:25:12,720
luckily for you this doesn't do anything

00:25:11,009 --> 00:25:13,379
except for post your username to a

00:25:12,720 --> 00:25:16,109
server

00:25:13,379 --> 00:25:19,739
it doesn't do anything else if you

00:25:16,109 --> 00:25:20,789
looked at the github accounts like some

00:25:19,739 --> 00:25:23,519
people tend to do when they're

00:25:20,789 --> 00:25:25,289
researching a gem you'd find code that

00:25:23,519 --> 00:25:26,970
looks perfectly good there's nothing

00:25:25,289 --> 00:25:29,669
that says that what's on great hub has

00:25:26,970 --> 00:25:32,159
to match what's on rubygems could point

00:25:29,669 --> 00:25:34,349
to a completely different repo in this

00:25:32,159 --> 00:25:36,119
case I just didn't push the Ruby gems

00:25:34,349 --> 00:25:40,919
for the past week as I added the hack

00:25:36,119 --> 00:25:46,139
and later so I got um 3.8 percent

00:25:40,919 --> 00:25:49,049
adoption it's pretty good bad so there

00:25:46,139 --> 00:25:51,570
is a 155 people of this conference I

00:25:49,049 --> 00:25:52,289
took this idea to maybe railsconf or

00:25:51,570 --> 00:25:54,809
Rudy

00:25:52,289 --> 00:25:59,779
tried it again it might get a fairly

00:25:54,809 --> 00:25:59,779
good set of people installing this gem

00:26:04,000 --> 00:26:10,149
so what now how do we keep this from

00:26:08,029 --> 00:26:10,149
happening

00:26:10,650 --> 00:26:16,620
there's a couple things we can do we can

00:26:13,049 --> 00:26:18,450
start by signing all our drivers hope

00:26:16,620 --> 00:26:20,309
that our private Keys don't get

00:26:18,450 --> 00:26:23,460
compromised the same way I sold your gem

00:26:20,309 --> 00:26:25,799
cutter Prevention's that would be one

00:26:23,460 --> 00:26:28,200
step of course if you if you take that

00:26:25,799 --> 00:26:30,240
stuff then you also have to install

00:26:28,200 --> 00:26:33,299
everything with Bosch P high-security

00:26:30,240 --> 00:26:36,600
has anybody ever done this I haven't

00:26:33,299 --> 00:26:38,190
done this mine gave me this time um so

00:26:36,600 --> 00:26:43,500
this requires that all gems that you

00:26:38,190 --> 00:26:45,570
install our sign of course all this this

00:26:43,500 --> 00:26:48,149
search stuff requires a high level of

00:26:45,570 --> 00:26:51,990
adoption you want everything that you

00:26:48,149 --> 00:26:55,250
are installed who sign and it takes

00:26:51,990 --> 00:26:55,250
quite a bit of work to get back

00:26:57,620 --> 00:27:01,460
someone could fork rubygems and add some

00:26:59,420 --> 00:27:03,400
code to send notifications when gems get

00:27:01,460 --> 00:27:07,070
pwned

00:27:03,400 --> 00:27:09,500
basically the gem pushes so given the

00:27:07,070 --> 00:27:12,230
the currents way ruby gems work I can

00:27:09,500 --> 00:27:13,670
push new versions of your gems with your

00:27:12,230 --> 00:27:16,400
democratic credentials and you'll have

00:27:13,670 --> 00:27:21,860
no notification if it at least sent out

00:27:16,400 --> 00:27:24,200
it you know how would be useful we could

00:27:21,860 --> 00:27:28,070
also start create your own private gem

00:27:24,200 --> 00:27:29,480
repos you can manually vet every single

00:27:28,070 --> 00:27:31,730
line of every gem that you want to

00:27:29,480 --> 00:27:33,080
install put them in this private repo

00:27:31,730 --> 00:27:36,050
and only install things out of this

00:27:33,080 --> 00:27:37,250
private repo sounds like a lot of work

00:27:36,050 --> 00:27:38,300
but I've actually heard of some

00:27:37,250 --> 00:27:41,000
companies that are starting to do this

00:27:38,300 --> 00:27:44,320
out and there's probably an opportunity

00:27:41,000 --> 00:27:46,520
here for a company to come along and

00:27:44,320 --> 00:27:49,390
basically do this as a service and

00:27:46,520 --> 00:27:53,800
provide private repos that they know are

00:27:49,390 --> 00:27:53,800
secured with albums just chose

00:27:56,420 --> 00:28:00,740
we could do all that and that's a lot of

00:27:58,790 --> 00:28:03,470
work I mean that's probably what would

00:28:00,740 --> 00:28:04,790
be best doing these types of things but

00:28:03,470 --> 00:28:09,040
the one thing I'd like everything

00:28:04,790 --> 00:28:13,309
everyone to do is not do this at home

00:28:09,040 --> 00:28:15,740
the Ruby community is awesome kind

00:28:13,309 --> 00:28:18,190
supportive we have these conferences

00:28:15,740 --> 00:28:22,010
like this where everyone's so friendly

00:28:18,190 --> 00:28:26,780
and let's keep it that way let's not go

00:28:22,010 --> 00:28:29,419
out and build these gems and do that but

00:28:26,780 --> 00:28:33,740
from this talk maybe take away the

00:28:29,419 --> 00:28:36,440
following key thing don't solve gems you

00:28:33,740 --> 00:28:40,370
don't need to favor writing code

00:28:36,440 --> 00:28:42,230
yourself there's I don't know how many

00:28:40,370 --> 00:28:43,910
times I go on Stack Overflow and I'm

00:28:42,230 --> 00:28:46,010
looking for a solution to my problem and

00:28:43,910 --> 00:28:48,280
the answer is hey install this gem that

00:28:46,010 --> 00:28:50,720
I wrote it totally solved your problem

00:28:48,280 --> 00:28:54,640
whereas you could probably spend a

00:28:50,720 --> 00:28:57,530
little bit more time write it yourself

00:28:54,640 --> 00:29:00,190
and you wouldn't expose yourself to some

00:28:57,530 --> 00:29:00,190
of these security

00:29:01,590 --> 00:29:07,410
pay attention to why your jumps do if

00:29:05,760 --> 00:29:10,680
you're installing a gym with r-spec

00:29:07,410 --> 00:29:16,590
matchers they shouldn't use and see

00:29:10,680 --> 00:29:18,690
extensions milder your system so Little

00:29:16,590 --> 00:29:20,370
Snitch and ëthis eventyr are the two

00:29:18,690 --> 00:29:27,120
they talked about those are good tools

00:29:20,370 --> 00:29:29,730
to use to read the source all of these

00:29:27,120 --> 00:29:31,560
gems you could if you read the source

00:29:29,730 --> 00:29:33,510
and the actual source so not the one on

00:29:31,560 --> 00:29:36,030
github not the one that you see when you

00:29:33,510 --> 00:29:40,980
do the gem install but by doing a gem

00:29:36,030 --> 00:29:43,470
fetch a gem impact read that source if

00:29:40,980 --> 00:29:49,470
you do that if you did that on any of

00:29:43,470 --> 00:29:52,080
these gems you there's one more gem and

00:29:49,470 --> 00:29:54,030
right now there's nope no code up there

00:29:52,080 --> 00:29:57,150
but I'm putting into the list together

00:29:54,030 --> 00:29:59,010
coal mine canary and that basically

00:29:57,150 --> 00:30:01,170
takes all the hacks that I've presented

00:29:59,010 --> 00:30:02,790
today or is going to take all the hacks

00:30:01,170 --> 00:30:04,020
that presenting today bundles them

00:30:02,790 --> 00:30:06,750
together and allows you to do a little

00:30:04,020 --> 00:30:09,090
bit of pen testing basically so when you

00:30:06,750 --> 00:30:11,370
install this I'll tell you hey I was

00:30:09,090 --> 00:30:13,530
able to modify your bash profile hey I

00:30:11,370 --> 00:30:14,880
was able to hit this web service hey I

00:30:13,530 --> 00:30:18,090
grabbed your gem cutter for them

00:30:14,880 --> 00:30:21,320
credentials or even like SSH keys and

00:30:18,090 --> 00:30:24,420
known hosts this is a good one to write

00:30:21,320 --> 00:30:25,890
so look for this one hopefully I'll push

00:30:24,420 --> 00:30:27,830
the first version of this sometime next

00:30:25,890 --> 00:30:31,130
week

00:30:27,830 --> 00:30:34,290
the one last thing I'd like to say is

00:30:31,130 --> 00:30:37,260
conferences tend to inspire me so I'd go

00:30:34,290 --> 00:30:39,120
home from the conference and I have all

00:30:37,260 --> 00:30:41,970
of these gems that I want to install I

00:30:39,120 --> 00:30:44,010
have all these ideas of projects I have

00:30:41,970 --> 00:30:45,720
these different frameworks that I want

00:30:44,010 --> 00:30:47,010
to try all my projects I want to you

00:30:45,720 --> 00:30:49,679
know do all these things

00:30:47,010 --> 00:30:53,070
I hope this talk doesn't do that to you

00:30:49,679 --> 00:30:56,400
I hope you guys don't go home and write

00:30:53,070 --> 00:30:59,030
malicious jobs but I hope it was

00:30:56,400 --> 00:30:59,030
entertaining

00:31:13,110 --> 00:31:15,170

YouTube URL: https://www.youtube.com/watch?v=z-5bO0Q1J9s


