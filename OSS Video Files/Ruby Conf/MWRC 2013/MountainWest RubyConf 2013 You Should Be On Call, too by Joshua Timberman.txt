Title: MountainWest RubyConf 2013 You Should Be On Call, too by Joshua Timberman
Publication date: 2020-01-28
Playlist: MWRC 2013
Description: 
	One of the reasons for the DevOps movement is that all developers should carry pagers and be on call, right?
Well, not quite. However, there is a common area of conflict between operations and development teams about site outages related to application-related issues that developers know how to debug and fix much faster than operations typically does.
In this talk, I'll discuss some companies that have successfully implemented developers on call" policies and what that means. I'll also discuss the business value, why it matters, and how it helps create a collaborative culture of sharing.

Help us caption & translate this video!

http://amara.org/v/FGbm/
Captions: 
	00:00:16,380 --> 00:00:19,380
hey

00:00:19,640 --> 00:00:25,259
you should be on call to this is a

00:00:22,529 --> 00:00:27,570
contentious topic right so earlier Mike

00:00:25,259 --> 00:00:30,150
had said that speaker spend six to eight

00:00:27,570 --> 00:00:32,610
weeks preparing their presentations but

00:00:30,150 --> 00:00:34,410
unfortunately most speakers only find

00:00:32,610 --> 00:00:36,120
out that their talk was accepted about

00:00:34,410 --> 00:00:38,339
three weeks ago which means that they

00:00:36,120 --> 00:00:40,110
write their talk on the plane on the way

00:00:38,339 --> 00:00:41,309
to the conference which is why we're

00:00:40,110 --> 00:00:44,879
nervous because we've never given the

00:00:41,309 --> 00:00:46,129
talk before but but we worry about it

00:00:44,879 --> 00:00:51,510
for a lot longer for about three weeks

00:00:46,129 --> 00:00:52,649
and the timing for the talk today is

00:00:51,510 --> 00:00:54,180
pretty fortunate because if we know we

00:00:52,649 --> 00:00:55,590
didn't know the schedule until what

00:00:54,180 --> 00:00:57,809
three weeks ago maybe three days ago

00:00:55,590 --> 00:00:58,949
i'll remember but I know that

00:00:57,809 --> 00:01:00,239
everybody's actually staying only

00:00:58,949 --> 00:01:02,879
because they want to hear Jesse talk

00:01:00,239 --> 00:01:05,129
about Chad ops at github so I do and so

00:01:02,879 --> 00:01:08,460
you have to bear with me for for this

00:01:05,129 --> 00:01:10,710
talk instead all right so Who am I first

00:01:08,460 --> 00:01:13,979
of all why am I qualified to talk to you

00:01:10,710 --> 00:01:16,289
how you should be on call well I work

00:01:13,979 --> 00:01:18,630
for Opscode and we have people that are

00:01:16,289 --> 00:01:20,550
on call and we do operations stuff we

00:01:18,630 --> 00:01:22,890
have some automation software that some

00:01:20,550 --> 00:01:24,810
people might have heard of may or may

00:01:22,890 --> 00:01:27,660
not I'll talk I'll talk about that a

00:01:24,810 --> 00:01:30,179
little bit but in my role at Opscode I'm

00:01:27,660 --> 00:01:31,770
a community manager which means I'm not

00:01:30,179 --> 00:01:35,099
actually on call because i'm not in

00:01:31,770 --> 00:01:36,390
operations so that means why am I

00:01:35,099 --> 00:01:40,259
telling you about why you should be on

00:01:36,390 --> 00:01:41,340
call well actually for the majority of

00:01:40,259 --> 00:01:43,110
my career I've been a systems

00:01:41,340 --> 00:01:46,289
administrator so I've carried a pager I

00:01:43,110 --> 00:01:50,130
like arch wireless represent you know

00:01:46,289 --> 00:01:52,530
works in every data center ever but I'm

00:01:50,130 --> 00:01:54,899
kind of on call in my community manager

00:01:52,530 --> 00:01:56,550
role because I support our community and

00:01:54,899 --> 00:01:57,810
community cookbooks and the cookbooks

00:01:56,550 --> 00:02:00,390
that I write that people run in their

00:01:57,810 --> 00:02:03,330
infrastructure and I answer questions on

00:02:00,390 --> 00:02:07,470
Twitter and IRC and through github pull

00:02:03,330 --> 00:02:09,239
requests and if you have my skype ID

00:02:07,470 --> 00:02:10,860
which is on my business card and it's

00:02:09,239 --> 00:02:14,099
not hard to find because it's my same

00:02:10,860 --> 00:02:15,209
Twitter same thing everywhere so pretty

00:02:14,099 --> 00:02:17,010
easy to get ahold of if you have a

00:02:15,209 --> 00:02:20,700
problem and you need help with chef so

00:02:17,010 --> 00:02:21,690
I'm kind of on call anyway in a way but

00:02:20,700 --> 00:02:24,540
aside from being a systems administrator

00:02:21,690 --> 00:02:26,879
I'm a man of many interests I'm a father

00:02:24,540 --> 00:02:29,489
I'm a gamer and in the last year I've

00:02:26,879 --> 00:02:31,469
gotten into CrossFit one of the things

00:02:29,489 --> 00:02:32,060
about being a systems administrators my

00:02:31,469 --> 00:02:35,000
career

00:02:32,060 --> 00:02:37,310
has led to interruptions and one of

00:02:35,000 --> 00:02:40,730
those interruptions is that my son's

00:02:37,310 --> 00:02:42,800
birthday is today and so it's the first

00:02:40,730 --> 00:02:44,450
birthday of his that I've missed and so

00:02:42,800 --> 00:02:51,560
just on account of three can i get a

00:02:44,450 --> 00:02:55,220
happy birthday Ethan one two three thank

00:02:51,560 --> 00:02:57,590
you thank you alright so I'm a big fan

00:02:55,220 --> 00:02:59,330
of audience participation and we've been

00:02:57,590 --> 00:03:01,819
sitting for a while so let's have a show

00:02:59,330 --> 00:03:05,030
of hands on this topic so who's a

00:03:01,819 --> 00:03:08,090
sysadmin or offs person all right who's

00:03:05,030 --> 00:03:10,610
a developer who's a sysadmin that writes

00:03:08,090 --> 00:03:13,519
code is a developer like the overlap ok

00:03:10,610 --> 00:03:16,060
kind of pretty good mix whose business

00:03:13,519 --> 00:03:18,410
people and this includes consultants

00:03:16,060 --> 00:03:21,260
managers directors that sort of thing ok

00:03:18,410 --> 00:03:25,190
who writes code and is a director and

00:03:21,260 --> 00:03:26,510
manages people yeah they say that

00:03:25,190 --> 00:03:28,280
managers don't actually write code but

00:03:26,510 --> 00:03:30,500
we know you'll you know if you have free

00:03:28,280 --> 00:03:33,590
time you write code right I can't stop

00:03:30,500 --> 00:03:38,920
who's on call for production outages not

00:03:33,590 --> 00:03:43,549
as many hands all right who's using chef

00:03:38,920 --> 00:03:48,079
all right so I like to see so let's talk

00:03:43,549 --> 00:03:49,250
about slug vahchef actually I'm not

00:03:48,079 --> 00:03:52,220
going to talk about Chef of course um

00:03:49,250 --> 00:03:53,239
but I submitted several chef talks for

00:03:52,220 --> 00:03:55,010
this conference but then they picked

00:03:53,239 --> 00:03:56,600
this one so you know maybe I'll have

00:03:55,010 --> 00:03:59,390
something to say about it so let's talk

00:03:56,600 --> 00:04:02,810
about pagers and after all one of the

00:03:59,390 --> 00:04:04,430
essential parts of DevOps is that every

00:04:02,810 --> 00:04:06,769
developer should carry a pager right

00:04:04,430 --> 00:04:08,000
that's that's the cultural aspect of it

00:04:06,769 --> 00:04:10,850
but we're going to share the blame i

00:04:08,000 --> 00:04:12,590
mean the responsibility right no that's

00:04:10,850 --> 00:04:16,820
not culture this isn't about the flame

00:04:12,590 --> 00:04:18,350
war this is more about operations people

00:04:16,820 --> 00:04:21,799
need your help so if you're a developer

00:04:18,350 --> 00:04:23,030
that writes code we need operations

00:04:21,799 --> 00:04:25,669
folks need your help we talked about

00:04:23,030 --> 00:04:29,060
this earlier we've heard gene and others

00:04:25,669 --> 00:04:31,639
say things like developers can help

00:04:29,060 --> 00:04:34,070
right make their applications operable

00:04:31,639 --> 00:04:36,740
right tools and that sort of thing and

00:04:34,070 --> 00:04:39,350
so you know we need help but that's not

00:04:36,740 --> 00:04:43,549
to say that we're hiring but of course

00:04:39,350 --> 00:04:46,109
everybody is hiring so Opscode is hiring

00:04:43,549 --> 00:04:48,899
no but the help is on the best of the

00:04:46,109 --> 00:04:50,789
business so you have a other company

00:04:48,899 --> 00:04:52,829
that is running some application that

00:04:50,789 --> 00:04:55,859
developers wrote and operations people

00:04:52,829 --> 00:04:57,809
put into production and when the

00:04:55,859 --> 00:05:02,849
developers wrote it it works on my

00:04:57,809 --> 00:05:07,859
machine which is of course irresponsible

00:05:02,849 --> 00:05:10,669
and it leads to roadblocks by operations

00:05:07,859 --> 00:05:12,749
people saying no you cannot deploy

00:05:10,669 --> 00:05:15,599
except you know now we've heard some

00:05:12,749 --> 00:05:17,969
things about how you know we're going to

00:05:15,599 --> 00:05:20,099
do ten deploys a day 15 deploys a day

00:05:17,969 --> 00:05:22,619
continuous deploy all this all the time

00:05:20,099 --> 00:05:25,529
we're just going to run cap deploy in a

00:05:22,619 --> 00:05:28,609
for loop and while Wow one right that's

00:05:25,529 --> 00:05:31,169
continuous deployment right all right so

00:05:28,609 --> 00:05:32,789
this is actually about the idea of

00:05:31,169 --> 00:05:35,759
collaboration and sharing and not

00:05:32,789 --> 00:05:37,859
sharing of on call but sharing

00:05:35,759 --> 00:05:41,219
responsibility for the application that

00:05:37,859 --> 00:05:43,619
you wrote and that we run in the US

00:05:41,219 --> 00:05:45,929
versus them you know the slide earlier

00:05:43,619 --> 00:05:48,629
with Spock versus Scotty and you know

00:05:45,929 --> 00:05:51,059
that battle thing but it's about it's

00:05:48,629 --> 00:05:54,089
about the collaboration and the

00:05:51,059 --> 00:05:56,339
knowledge sharing and transfer aspect so

00:05:54,089 --> 00:05:59,059
this makes a nice segue into a story

00:05:56,339 --> 00:06:01,619
about silos in the separation of duties

00:05:59,059 --> 00:06:06,329
so I used to work for a large enterprise

00:06:01,619 --> 00:06:08,819
IT services company and we did systems

00:06:06,329 --> 00:06:10,469
administration and we only did in my

00:06:08,819 --> 00:06:12,379
group systems administration because we

00:06:10,469 --> 00:06:15,599
were siloed off and this is for

00:06:12,379 --> 00:06:19,379
separation of duties reasons like some

00:06:15,599 --> 00:06:21,449
cobit or ITIL or some IT service

00:06:19,379 --> 00:06:23,699
management methodology said that you

00:06:21,449 --> 00:06:26,579
know sis admins can't like run the

00:06:23,699 --> 00:06:28,709
application and network engineers can't

00:06:26,579 --> 00:06:30,689
create users and that sort of thing so

00:06:28,709 --> 00:06:33,119
this what this meant was that the

00:06:30,689 --> 00:06:35,249
sysadmin were on call for all the OS

00:06:33,119 --> 00:06:36,809
level things running on the system so

00:06:35,249 --> 00:06:39,629
you know your application running on a

00:06:36,809 --> 00:06:43,829
server under tom cat or jboss or or

00:06:39,629 --> 00:06:45,719
rails or whatever it might be you know

00:06:43,829 --> 00:06:47,519
is a thing that's running on the system

00:06:45,719 --> 00:06:49,739
it's listening to network ports and so

00:06:47,519 --> 00:06:51,599
obviously systems administrators have to

00:06:49,739 --> 00:06:53,879
be responsible for that so we carried

00:06:51,599 --> 00:06:55,829
one of those literally like arch

00:06:53,879 --> 00:06:57,210
wireless represent I had one of those

00:06:55,829 --> 00:06:59,160
for seven years it was

00:06:57,210 --> 00:07:00,990
most annoying thing but they're

00:06:59,160 --> 00:07:02,550
indestructible I found you can throw

00:07:00,990 --> 00:07:05,460
them at walls and they will never break

00:07:02,550 --> 00:07:07,349
it's amazing so the team I was on had a

00:07:05,460 --> 00:07:10,710
had a hot pager and that was the on-call

00:07:07,349 --> 00:07:13,919
person rotation every week that that

00:07:10,710 --> 00:07:17,009
person would be the primary point of

00:07:13,919 --> 00:07:19,199
contact for any issue that was happening

00:07:17,009 --> 00:07:20,940
on the systems and then there was an

00:07:19,199 --> 00:07:22,710
escalation path to the person that was

00:07:20,940 --> 00:07:25,319
the primary for a particular customer

00:07:22,710 --> 00:07:26,669
account and then there was escalations

00:07:25,319 --> 00:07:28,919
that usually went to management two

00:07:26,669 --> 00:07:32,810
directors to you know further up the

00:07:28,919 --> 00:07:35,160
internal tool chain management chain and

00:07:32,810 --> 00:07:37,020
the sysadmin is were responsible for the

00:07:35,160 --> 00:07:39,449
OS stuff you know the file systems

00:07:37,020 --> 00:07:42,650
network services host-based firewalls or

00:07:39,449 --> 00:07:44,430
we did iptables dash f I never do that

00:07:42,650 --> 00:07:46,740
we're responsible for things like

00:07:44,430 --> 00:07:47,460
security policy user management you know

00:07:46,740 --> 00:07:49,979
that sort of thing we weren't

00:07:47,460 --> 00:07:52,440
responsible for like writing out context

00:07:49,979 --> 00:07:54,449
XML or database yambol stuff that was

00:07:52,440 --> 00:07:55,979
all left up to the developers we didn't

00:07:54,449 --> 00:07:58,020
do any schema migrations or anything

00:07:55,979 --> 00:08:00,150
like that that was all done by the dbas

00:07:58,020 --> 00:08:01,789
because you know it was Oracle or db2 or

00:08:00,150 --> 00:08:04,830
some you know big thing that required

00:08:01,789 --> 00:08:10,740
five certifications and a bazillion

00:08:04,830 --> 00:08:13,289
dollars so we had typical problems that

00:08:10,740 --> 00:08:15,990
would come in from the helpdesk they get

00:08:13,289 --> 00:08:17,610
something like a disk full alert and the

00:08:15,990 --> 00:08:20,520
helpdesk good page out whoever was on

00:08:17,610 --> 00:08:22,860
call and then the on-call person would

00:08:20,520 --> 00:08:24,509
look at the system and they go oh that's

00:08:22,860 --> 00:08:27,180
a fall file system on the customer data

00:08:24,509 --> 00:08:29,849
I'll page the customers primary sysadmin

00:08:27,180 --> 00:08:32,099
and have him take a look at it so we

00:08:29,849 --> 00:08:33,419
page him out Prime Minister sadman wakes

00:08:32,099 --> 00:08:35,370
up you know this is you this always

00:08:33,419 --> 00:08:36,959
happens at two to three in the morning

00:08:35,370 --> 00:08:38,820
this never happens at like two in the

00:08:36,959 --> 00:08:41,490
afternoon when you're like lazy after

00:08:38,820 --> 00:08:43,740
lunch right so the primary assist admin

00:08:41,490 --> 00:08:46,079
looks at the system and he doesn't know

00:08:43,740 --> 00:08:48,540
what is going on in this file system the

00:08:46,079 --> 00:08:52,350
maybe there's like 500 gigs worth of

00:08:48,540 --> 00:08:55,560
logs on a 498 gig file system that's

00:08:52,350 --> 00:08:57,029
kind of terrible but which which one of

00:08:55,560 --> 00:08:58,890
those log files do we delete we don't

00:08:57,029 --> 00:09:00,450
know so we'll page out application

00:08:58,890 --> 00:09:02,279
support the application developer

00:09:00,450 --> 00:09:04,680
sometimes that's the customer sometimes

00:09:02,279 --> 00:09:06,990
that's like another part of a better

00:09:04,680 --> 00:09:08,290
business unit in this giant IT

00:09:06,990 --> 00:09:11,079
organization I worked in

00:09:08,290 --> 00:09:12,910
but this is the common example these

00:09:11,079 --> 00:09:15,100
kinds of alerts came in all the time we

00:09:12,910 --> 00:09:17,139
didn't know necessarily the best way to

00:09:15,100 --> 00:09:19,810
resolve this kind of application

00:09:17,139 --> 00:09:22,149
specific sort of thing repeat this for

00:09:19,810 --> 00:09:24,100
the cpu utilization maybe the

00:09:22,149 --> 00:09:25,209
application just sits on the cpu all day

00:09:24,100 --> 00:09:26,529
because it's supposed to because why

00:09:25,209 --> 00:09:28,209
would you buy all these cpus and then

00:09:26,529 --> 00:09:30,550
not use them right or memory utilization

00:09:28,209 --> 00:09:32,350
why do you buy four gigs of memory and

00:09:30,550 --> 00:09:35,319
then not used for gigs of memory for the

00:09:32,350 --> 00:09:37,990
app right and this is all great and we

00:09:35,319 --> 00:09:41,889
love having metrics and monitoring for

00:09:37,990 --> 00:09:43,750
our applications that's wonderful but

00:09:41,889 --> 00:09:46,389
the problem is that metrics based

00:09:43,750 --> 00:09:48,910
alerting generally sucks it's a gross

00:09:46,389 --> 00:09:50,470
generalization but these kinds of alerts

00:09:48,910 --> 00:09:52,329
aren't act actionable this is where you

00:09:50,470 --> 00:09:55,350
get things like alert fatigue and so

00:09:52,329 --> 00:09:58,120
you're getting all these metrics based

00:09:55,350 --> 00:10:01,600
application specific alerts coming in

00:09:58,120 --> 00:10:02,829
and we have no idea what to do and this

00:10:01,600 --> 00:10:05,649
isn't even necessarily indicate

00:10:02,829 --> 00:10:07,000
indicative of the problem maybe it isn't

00:10:05,649 --> 00:10:08,560
actually a problem like i said you know

00:10:07,000 --> 00:10:10,959
we want to use the cpu we want to use

00:10:08,560 --> 00:10:14,829
the memory maybe we want to use all the

00:10:10,959 --> 00:10:17,230
discs but that's another story so we

00:10:14,829 --> 00:10:18,940
don't necessarily know why we got it on

00:10:17,230 --> 00:10:21,660
or or where to look from the outside

00:10:18,940 --> 00:10:24,100
like the on-call guy has to page out the

00:10:21,660 --> 00:10:26,440
sysadmin and she's got to log in and

00:10:24,100 --> 00:10:27,880
look at it you know and then I don't

00:10:26,440 --> 00:10:29,380
know what's going on and if it's like

00:10:27,880 --> 00:10:30,970
something like the application itself is

00:10:29,380 --> 00:10:35,230
down or we couldn't connect to the

00:10:30,970 --> 00:10:38,800
database table flip right I have no idea

00:10:35,230 --> 00:10:41,709
what I'm doing but it's cool i love

00:10:38,800 --> 00:10:43,569
crossfit this is me doing thrusters and

00:10:41,709 --> 00:10:45,160
if you want to meet at the little

00:10:43,569 --> 00:10:46,779
america lobby tomorrow morning at six

00:10:45,160 --> 00:10:48,790
forty-five i'm going to do a crossfit

00:10:46,779 --> 00:10:51,670
rod somewhere we'll find a place so meet

00:10:48,790 --> 00:10:53,819
me there but anyway so I'm going to try

00:10:51,670 --> 00:10:56,829
some science I did some case studies and

00:10:53,819 --> 00:10:58,689
by case studies I mean I talked to some

00:10:56,829 --> 00:11:00,339
people that work for these five

00:10:58,689 --> 00:11:02,110
companies because i only have three days

00:11:00,339 --> 00:11:03,040
to do my talk and it's hard to make

00:11:02,110 --> 00:11:07,630
phone calls when you're on an airplane

00:11:03,040 --> 00:11:10,630
so I talked to opscode director of

00:11:07,630 --> 00:11:13,329
operations I talked to a former director

00:11:10,630 --> 00:11:17,860
of technical operations at Heroku vp of

00:11:13,329 --> 00:11:19,660
operations at etsy director of i forget

00:11:17,860 --> 00:11:21,670
some another operations director i think

00:11:19,660 --> 00:11:21,939
is that he's that sourcefire but i don't

00:11:21,670 --> 00:11:24,609
number

00:11:21,939 --> 00:11:26,589
if its title director vp and then i also

00:11:24,609 --> 00:11:30,009
talked to the guy that's running

00:11:26,589 --> 00:11:32,409
operations that custom ink and the

00:11:30,009 --> 00:11:35,709
general gist is that these companies all

00:11:32,409 --> 00:11:37,209
have developers as the primary oncall or

00:11:35,709 --> 00:11:39,429
they did at the time that i talked to

00:11:37,209 --> 00:11:41,399
them or they did at some point and

00:11:39,429 --> 00:11:44,229
they've reverted for various reasons but

00:11:41,399 --> 00:11:46,959
the details of that are less interesting

00:11:44,229 --> 00:11:48,459
one of the things that about opscode is

00:11:46,959 --> 00:11:50,859
we've got we've got a number of folks

00:11:48,459 --> 00:11:54,309
that used to work at amazon and amazon

00:11:50,859 --> 00:11:55,809
CTO order of Oracle Vogel's said in an

00:11:54,309 --> 00:11:57,879
interview you build it you run it

00:11:55,809 --> 00:12:00,699
because at amazon if you built it you

00:11:57,879 --> 00:12:03,029
run you run it similar we earlier we

00:12:00,699 --> 00:12:05,019
heard that at Google for six months a

00:12:03,029 --> 00:12:09,389
developers build and they maintain it

00:12:05,019 --> 00:12:12,159
for a while and they take care of it so

00:12:09,389 --> 00:12:15,009
Opscode developers are on call her ochos

00:12:12,159 --> 00:12:18,299
developers are on call they instituted

00:12:15,009 --> 00:12:20,799
that after mark was there for a while

00:12:18,299 --> 00:12:22,629
etsy has a special way that they do on

00:12:20,799 --> 00:12:24,069
call some of the developers they've got

00:12:22,629 --> 00:12:26,139
a lot of developers there so they've got

00:12:24,069 --> 00:12:27,939
some developers that are meant they are

00:12:26,139 --> 00:12:29,949
on call for only their applications some

00:12:27,939 --> 00:12:31,299
of them share a pool for other things so

00:12:29,949 --> 00:12:33,549
they've got they've got a tiered

00:12:31,299 --> 00:12:35,889
structure but they have people who wrote

00:12:33,549 --> 00:12:39,970
the code that then helped run the code

00:12:35,889 --> 00:12:43,899
in production sourcefire has started

00:12:39,970 --> 00:12:45,999
implementing this and recently customink

00:12:43,899 --> 00:12:48,699
started and then they've reverted back

00:12:45,999 --> 00:12:51,369
but they're working to correct that and

00:12:48,699 --> 00:12:54,249
continue with the idea that the

00:12:51,369 --> 00:12:56,759
developers are helping run the code or

00:12:54,249 --> 00:13:00,220
helping run the code in production

00:12:56,759 --> 00:13:02,229
generally speaking and this is also

00:13:00,220 --> 00:13:03,459
other companies that I've talked to just

00:13:02,229 --> 00:13:05,319
like anecdotally because I don't have

00:13:03,459 --> 00:13:07,329
any you know real data I did do a white

00:13:05,319 --> 00:13:10,659
paper I like I said I had you know my

00:13:07,329 --> 00:13:12,519
three hours on a flight but generally

00:13:10,659 --> 00:13:14,859
these most companies have more

00:13:12,519 --> 00:13:16,059
developers than they have sis admins how

00:13:14,859 --> 00:13:19,689
many how many people work in a company

00:13:16,059 --> 00:13:20,889
with more than five developers how many

00:13:19,689 --> 00:13:24,519
people work in a company has more than

00:13:20,889 --> 00:13:26,259
five sis admins only a few of the same

00:13:24,519 --> 00:13:28,539
hands right there's not a lot of

00:13:26,259 --> 00:13:32,289
companies have that you know even have

00:13:28,539 --> 00:13:33,930
five sis admins right so you guys

00:13:32,289 --> 00:13:36,000
outnumber us in the

00:13:33,930 --> 00:13:38,940
let's go to us versus them but there's

00:13:36,000 --> 00:13:40,649
more developers to sis admins it stands

00:13:38,940 --> 00:13:42,779
to reason that we shouldn't like have

00:13:40,649 --> 00:13:46,710
our sysadmin get burned out and angry

00:13:42,779 --> 00:13:49,890
and this fighting about uh-uh every time

00:13:46,710 --> 00:13:51,990
I get paged I get grumpy and developers

00:13:49,890 --> 00:13:53,940
are like you know out you know at the

00:13:51,990 --> 00:13:57,810
pub after shipping like we've heard

00:13:53,940 --> 00:13:59,880
those stories before so we want to help

00:13:57,810 --> 00:14:02,430
share the load in that we help make

00:13:59,880 --> 00:14:04,860
people responsible and this better is

00:14:02,430 --> 00:14:06,540
the business the other thing is that

00:14:04,860 --> 00:14:08,700
developers have this application domain

00:14:06,540 --> 00:14:11,640
knowledge strangely enough when you

00:14:08,700 --> 00:14:14,070
write some code usually you remember how

00:14:11,640 --> 00:14:15,750
it works and all the little nuances of

00:14:14,070 --> 00:14:18,089
it I don't necessarily remember how the

00:14:15,750 --> 00:14:19,410
code I were broke works but sometimes I

00:14:18,089 --> 00:14:21,540
go back and I look at when did I write

00:14:19,410 --> 00:14:24,240
that but you know fortunately it's a git

00:14:21,540 --> 00:14:25,709
log that tells me when another thing

00:14:24,240 --> 00:14:28,830
that we that I found in these

00:14:25,709 --> 00:14:30,690
conversations is that people like taking

00:14:28,830 --> 00:14:33,990
accountability and responsibility for

00:14:30,690 --> 00:14:36,510
this stuff it's empowering and it helps

00:14:33,990 --> 00:14:38,220
them you know feel good about an

00:14:36,510 --> 00:14:40,160
accomplishment of yeah I put that into

00:14:38,220 --> 00:14:43,080
production like earlier we heard the

00:14:40,160 --> 00:14:44,970
victory dance of runny of writing some

00:14:43,080 --> 00:14:46,230
code and then you deploy it rather than

00:14:44,970 --> 00:14:47,970
having to wait six months because

00:14:46,230 --> 00:14:51,150
there's an Operations roadblock that

00:14:47,970 --> 00:14:52,680
says no last time we deploy it broke the

00:14:51,150 --> 00:14:55,350
site so you can't do any deploys anymore

00:14:52,680 --> 00:14:57,120
so you know that responsibility is

00:14:55,350 --> 00:14:59,250
empowering and people don't like stress

00:14:57,120 --> 00:15:02,130
and what I mean by stress is twofold

00:14:59,250 --> 00:15:04,020
because first there's more with more

00:15:02,130 --> 00:15:06,570
developers so there's more people to

00:15:04,020 --> 00:15:08,430
share that load but the operations won't

00:15:06,570 --> 00:15:10,620
be stressed out which improves team

00:15:08,430 --> 00:15:13,830
morale and you know there isn't that

00:15:10,620 --> 00:15:16,860
resentment about who's you know you it's

00:15:13,830 --> 00:15:18,839
easier to have blameless post-mortems

00:15:16,860 --> 00:15:20,640
when people aren't grumpy about you know

00:15:18,839 --> 00:15:22,410
how they're always getting paged out

00:15:20,640 --> 00:15:28,110
because the site's always breaking right

00:15:22,410 --> 00:15:29,970
those kinds of scenarios some other

00:15:28,110 --> 00:15:31,860
overall results I found out that a lot

00:15:29,970 --> 00:15:35,160
of people use nagios and pagerduty as

00:15:31,860 --> 00:15:38,310
popular tools so knowing how nagios

00:15:35,160 --> 00:15:40,350
works is pretty useful so I'm going to

00:15:38,310 --> 00:15:42,390
talk a little bit more about about

00:15:40,350 --> 00:15:44,100
operating some about operating

00:15:42,390 --> 00:15:46,740
applications but being able to write

00:15:44,100 --> 00:15:47,370
nagios checks for your application is a

00:15:46,740 --> 00:15:49,650
serious

00:15:47,370 --> 00:15:51,300
the big help for the operations team and

00:15:49,650 --> 00:15:54,810
if you can write part of the application

00:15:51,300 --> 00:15:56,130
that nagios can can hit like a URL that

00:15:54,810 --> 00:15:58,020
can return some status information

00:15:56,130 --> 00:16:00,540
that's super helpful because then you

00:15:58,020 --> 00:16:02,089
can get actual alerts that determine

00:16:00,540 --> 00:16:07,589
whether the behavior of the app is

00:16:02,089 --> 00:16:09,420
correct or incorrect the in general the

00:16:07,589 --> 00:16:12,330
operations or sysadmin teams are an

00:16:09,420 --> 00:16:16,620
escalation point or they pair with and

00:16:12,330 --> 00:16:18,510
work with the developers so they it

00:16:16,620 --> 00:16:20,190
makes it easier to do that knowledge

00:16:18,510 --> 00:16:22,140
transfer and it's easier to ask

00:16:20,190 --> 00:16:23,760
questions when you're you know paired

00:16:22,140 --> 00:16:26,370
with somebody who's dedicated to helping

00:16:23,760 --> 00:16:28,050
you succeed and one of the things that

00:16:26,370 --> 00:16:30,480
operations people like to do is help

00:16:28,050 --> 00:16:33,060
solve problems we're a thing that we

00:16:30,480 --> 00:16:35,790
could get good at from debugging really

00:16:33,060 --> 00:16:37,800
bizarre you know spanning tree protocol

00:16:35,790 --> 00:16:40,440
errors and other things that we've heard

00:16:37,800 --> 00:16:42,270
about and talked about so you know that

00:16:40,440 --> 00:16:44,339
ask that escalation helps the knowledge

00:16:42,270 --> 00:16:46,620
transfer and everybody gets better from

00:16:44,339 --> 00:16:48,330
it because you have this collaboration

00:16:46,620 --> 00:16:51,779
you get team building and knowledge

00:16:48,330 --> 00:16:56,339
transfer and you know it's one big happy

00:16:51,779 --> 00:17:00,870
hug ops group heart thing DevOps culture

00:16:56,339 --> 00:17:03,810
right so earlier today gene talked about

00:17:00,870 --> 00:17:05,880
the second way and you heard what he

00:17:03,810 --> 00:17:07,650
said about all that right and you know

00:17:05,880 --> 00:17:09,449
we've got reporting to the video so you

00:17:07,650 --> 00:17:11,010
can go back and listen to it but there's

00:17:09,449 --> 00:17:15,870
he had a lot of really good information

00:17:11,010 --> 00:17:19,880
about operating applications and team

00:17:15,870 --> 00:17:22,620
collaboration that sort of thing so

00:17:19,880 --> 00:17:26,040
audience participation time again this

00:17:22,620 --> 00:17:28,410
is for science as all my quizzes are so

00:17:26,040 --> 00:17:30,390
by show of hands who writes application

00:17:28,410 --> 00:17:34,110
code like stuff that runs the business

00:17:30,390 --> 00:17:36,710
website alright cool whoo right so you

00:17:34,110 --> 00:17:40,260
who writes the runs an introduction

00:17:36,710 --> 00:17:42,270
hopefully the same hands right and who

00:17:40,260 --> 00:17:44,760
is a consultant that writes code for

00:17:42,270 --> 00:17:45,960
clients this is applicable for you too

00:17:44,760 --> 00:17:47,100
but not necessarily that you should

00:17:45,960 --> 00:17:49,950
carry pagers because some people might

00:17:47,100 --> 00:17:52,190
get grumpy about that but who's the

00:17:49,950 --> 00:17:55,590
first to get page if there's a problem

00:17:52,190 --> 00:18:00,700
so there's some some advice for you on

00:17:55,590 --> 00:18:04,540
how you can help make things operable

00:18:00,700 --> 00:18:06,490
and if you're not on call and I'm

00:18:04,540 --> 00:18:08,860
certainly you know I'm advocating for

00:18:06,490 --> 00:18:11,200
that but some some ways that you can

00:18:08,860 --> 00:18:12,640
help with this collaboration first of

00:18:11,200 --> 00:18:14,770
all is instrumenting the application

00:18:12,640 --> 00:18:17,620
like I said earlier metrics are awesome

00:18:14,770 --> 00:18:19,150
so gathering information about your

00:18:17,620 --> 00:18:21,250
application and getting all the data you

00:18:19,150 --> 00:18:24,580
possibly can out of it is wonderful

00:18:21,250 --> 00:18:26,380
there's piles of monitoring tools and

00:18:24,580 --> 00:18:28,480
services there was a whole conference

00:18:26,380 --> 00:18:30,280
about monitoring last week all the

00:18:28,480 --> 00:18:33,480
videos for that monitor Rama will be

00:18:30,280 --> 00:18:36,160
posted as soon as they're available

00:18:33,480 --> 00:18:38,580
there's lots of blog posts out there I

00:18:36,160 --> 00:18:40,870
can't possibly link to all of them but

00:18:38,580 --> 00:18:43,180
then there's other talks here there's

00:18:40,870 --> 00:18:47,230
talks probably over the next couple days

00:18:43,180 --> 00:18:48,340
and there's a library that code 'hail

00:18:47,230 --> 00:18:50,740
wrote that you might have heard of

00:18:48,340 --> 00:18:51,970
called metrics and there's a ruby

00:18:50,740 --> 00:18:54,010
metrics since we're at ruby conference

00:18:51,970 --> 00:18:55,540
might be interested in the Ruby metrics

00:18:54,010 --> 00:18:58,480
one and it's about instrumenting your

00:18:55,540 --> 00:19:01,170
application so helping helping to do

00:18:58,480 --> 00:19:03,400
that helps you build applications that

00:19:01,170 --> 00:19:05,200
operations people can look at and say oh

00:19:03,400 --> 00:19:06,700
you know here's information from the

00:19:05,200 --> 00:19:08,980
application and here's how I can graph

00:19:06,700 --> 00:19:11,430
it and getting getting that information

00:19:08,980 --> 00:19:13,840
in a way that makes those metrics

00:19:11,430 --> 00:19:15,880
relatable to the business like you know

00:19:13,840 --> 00:19:19,000
the number of dollars we're losing at

00:19:15,880 --> 00:19:20,650
the site is down really helps really

00:19:19,000 --> 00:19:23,830
helps in operations so making the

00:19:20,650 --> 00:19:26,050
application operable is also highly

00:19:23,830 --> 00:19:27,670
beneficial and if you're going to be a

00:19:26,050 --> 00:19:29,440
developer that's on call this is going

00:19:27,670 --> 00:19:32,170
to your future you is going to thank you

00:19:29,440 --> 00:19:36,250
and so part of this is building good

00:19:32,170 --> 00:19:38,010
tools so chef is a tool that offs code

00:19:36,250 --> 00:19:40,360
is built I think it's a pretty good tool

00:19:38,010 --> 00:19:42,220
several you are using it so you probably

00:19:40,360 --> 00:19:44,680
think it's a pretty good tool if not you

00:19:42,220 --> 00:19:47,380
can see me after all register all your

00:19:44,680 --> 00:19:49,840
complaints but we maintain a production

00:19:47,380 --> 00:19:53,680
application service called posted chef

00:19:49,840 --> 00:19:55,060
and hosted chef is a service-oriented

00:19:53,680 --> 00:19:57,850
architecture we've got a bunch of little

00:19:55,060 --> 00:20:00,400
services running and different apps we

00:19:57,850 --> 00:20:02,380
deploy those apps all the time like

00:20:00,400 --> 00:20:05,110
there's probably been several deploys

00:20:02,380 --> 00:20:07,860
today while while we've been here at

00:20:05,110 --> 00:20:10,710
this conference but private chef is

00:20:07,860 --> 00:20:13,990
hosted chef behind your firewall and

00:20:10,710 --> 00:20:14,470
it's a thing that needed to be operable

00:20:13,990 --> 00:20:16,780
because

00:20:14,470 --> 00:20:18,130
we're going to sell this software to

00:20:16,780 --> 00:20:19,539
people that are going to install it and

00:20:18,130 --> 00:20:21,820
they're going to operate it but then

00:20:19,539 --> 00:20:23,860
we're going to be support and that you

00:20:21,820 --> 00:20:26,140
can call opscode and get support for

00:20:23,860 --> 00:20:28,179
that but there's a lot of moving parts

00:20:26,140 --> 00:20:30,070
there and we needed something that we

00:20:28,179 --> 00:20:33,070
needed a tool that would help us operate

00:20:30,070 --> 00:20:35,020
that so there's a tool called private

00:20:33,070 --> 00:20:38,110
chef cuddle and if you've used

00:20:35,020 --> 00:20:40,539
open-source chef server chef 11 there's

00:20:38,110 --> 00:20:43,150
a chef server cuddle and it's got some

00:20:40,539 --> 00:20:44,830
commands for managing the various

00:20:43,150 --> 00:20:47,080
services so private chef cuddle was

00:20:44,830 --> 00:20:49,330
written by our developers to help

00:20:47,080 --> 00:20:52,419
operate private chef and it has things

00:20:49,330 --> 00:20:54,880
like service list tail reconfigure

00:20:52,419 --> 00:20:56,860
restart specific services yes there's a

00:20:54,880 --> 00:20:59,860
little nagios inside private chef it's

00:20:56,860 --> 00:21:01,299
kind of cool the service list will give

00:20:59,860 --> 00:21:03,039
you a list of all the various services

00:21:01,299 --> 00:21:05,650
in this SOA that are running on the

00:21:03,039 --> 00:21:07,150
private chef server tail will tail the

00:21:05,650 --> 00:21:08,500
logs you can specify a particular

00:21:07,150 --> 00:21:10,750
service so you can get a list of the

00:21:08,500 --> 00:21:12,970
services and then you can go look at the

00:21:10,750 --> 00:21:14,740
specific logs for that service makes it

00:21:12,970 --> 00:21:16,450
really helpful if you're debugging an

00:21:14,740 --> 00:21:18,429
error that came from nagios out of this

00:21:16,450 --> 00:21:19,690
and it tells you which services having

00:21:18,429 --> 00:21:23,799
an issue you can go look at that

00:21:19,690 --> 00:21:25,630
services log files live you can

00:21:23,799 --> 00:21:27,610
reconfigure it so if you need to make a

00:21:25,630 --> 00:21:29,919
configuration change to fix a problem or

00:21:27,610 --> 00:21:31,960
there's restart command there's bunch of

00:21:29,919 --> 00:21:35,919
other commands in here that we're able

00:21:31,960 --> 00:21:38,230
to operate private chef and we can use

00:21:35,919 --> 00:21:42,730
this kind of tool across other parts of

00:21:38,230 --> 00:21:46,900
our production infrastructure so hosted

00:21:42,730 --> 00:21:48,340
chef is easier for the opscode

00:21:46,900 --> 00:21:49,360
developers and our operations team to

00:21:48,340 --> 00:21:50,559
manage because we're starting to use

00:21:49,360 --> 00:21:52,600
these kinds of tools that we've written

00:21:50,559 --> 00:21:54,789
and then private chef is easier for our

00:21:52,600 --> 00:21:57,100
customers to end our support team to

00:21:54,789 --> 00:21:59,289
manage because they have a the same tool

00:21:57,100 --> 00:22:01,570
that has access to all the various parts

00:21:59,289 --> 00:22:05,320
of the application and these adapted

00:22:01,570 --> 00:22:08,080
tools were we adapted the tool for the

00:22:05,320 --> 00:22:12,340
open source version of Chef server as

00:22:08,080 --> 00:22:14,049
well so building tools will make your

00:22:12,340 --> 00:22:15,820
applications operable it will give you

00:22:14,049 --> 00:22:17,679
insight into looking at them so when you

00:22:15,820 --> 00:22:20,590
get paged because now you're carrying a

00:22:17,679 --> 00:22:22,630
pager right when you get paid you can go

00:22:20,590 --> 00:22:24,520
and look at the application with the

00:22:22,630 --> 00:22:26,770
tool that you wrote that already has a

00:22:24,520 --> 00:22:27,460
lot domain knowledge or the operations

00:22:26,770 --> 00:22:29,890
team can help

00:22:27,460 --> 00:22:33,340
with that and correlate to OS system

00:22:29,890 --> 00:22:35,320
advance and that sort of thing but this

00:22:33,340 --> 00:22:38,860
isn't just for operations it's for

00:22:35,320 --> 00:22:40,929
future you or 3am you and if your

00:22:38,860 --> 00:22:42,159
consultant you should write tools that

00:22:40,929 --> 00:22:43,450
make it easier for your clients to

00:22:42,159 --> 00:22:45,820
operate the applications you've

00:22:43,450 --> 00:22:47,860
delivered to them duh right I mean this

00:22:45,820 --> 00:22:49,960
is like a huge value add that you can

00:22:47,860 --> 00:22:52,330
build into the cost of this this thing

00:22:49,960 --> 00:22:53,950
that you're delivering as a consultant

00:22:52,330 --> 00:22:56,590
that they've hired to build stuff for

00:22:53,950 --> 00:22:58,659
them but how many people actually do

00:22:56,590 --> 00:23:00,549
this in practice I mean I've seen a lot

00:22:58,659 --> 00:23:02,159
of different infrastructures and a lot

00:23:00,549 --> 00:23:04,659
of different kinds of consultants that

00:23:02,159 --> 00:23:07,390
not necessary they don't necessarily

00:23:04,659 --> 00:23:09,909
have all of the tooling in place because

00:23:07,390 --> 00:23:12,520
some some consultants like when I worked

00:23:09,909 --> 00:23:13,809
for this large IT services organization

00:23:12,520 --> 00:23:17,620
they'd have consultants that come in and

00:23:13,809 --> 00:23:20,309
okay applications written it's it's the

00:23:17,620 --> 00:23:22,899
service managers problem now right and

00:23:20,309 --> 00:23:25,029
again that's irresponsible but we get

00:23:22,899 --> 00:23:26,950
this mutual benefit if you can deliver

00:23:25,029 --> 00:23:29,380
this to customers that then hire

00:23:26,950 --> 00:23:31,450
developers to maintain or operations

00:23:29,380 --> 00:23:35,649
people to continue to run this site or

00:23:31,450 --> 00:23:37,090
service that's been built another way

00:23:35,649 --> 00:23:39,940
you can make your up applications

00:23:37,090 --> 00:23:41,980
operable is to write the automation code

00:23:39,940 --> 00:23:44,140
that is responsible for managing and

00:23:41,980 --> 00:23:47,080
deploying them whether that's chef or

00:23:44,140 --> 00:23:49,779
puppet or CF engine or a pile of bash

00:23:47,080 --> 00:23:51,640
scripts and whatever it is that you use

00:23:49,779 --> 00:23:53,289
and you're comfortable with and that you

00:23:51,640 --> 00:23:55,779
know whoever is going to be operating as

00:23:53,289 --> 00:23:57,760
comfortable with it it matters that it

00:23:55,779 --> 00:23:59,140
works the same way across all the

00:23:57,760 --> 00:24:01,809
environments where the application is

00:23:59,140 --> 00:24:04,000
being deployed and run so if you've got

00:24:01,809 --> 00:24:05,230
a staging environment it needs to be you

00:24:04,000 --> 00:24:07,210
know your staging environment should

00:24:05,230 --> 00:24:08,409
have the same automation tools that your

00:24:07,210 --> 00:24:11,649
production environments going to use

00:24:08,409 --> 00:24:13,600
right and you're you know the developers

00:24:11,649 --> 00:24:16,090
laptop should have all the same tools

00:24:13,600 --> 00:24:19,390
and the same automation well we heard

00:24:16,090 --> 00:24:20,649
earlier that boxing does that for github

00:24:19,390 --> 00:24:25,120
and then they have the puppet modules

00:24:20,649 --> 00:24:27,789
that deploy production systems there as

00:24:25,120 --> 00:24:29,890
well so you know this automation helps

00:24:27,789 --> 00:24:32,080
with making it easier to operate the

00:24:29,890 --> 00:24:35,350
application working with the operations

00:24:32,080 --> 00:24:37,929
team to understand the up you know the

00:24:35,350 --> 00:24:39,990
OS domain of where the application is

00:24:37,929 --> 00:24:43,679
going to run helps you be able to

00:24:39,990 --> 00:24:48,240
right automation code for them to be

00:24:43,679 --> 00:24:50,220
able to use so some takeaways DevOps is

00:24:48,240 --> 00:24:53,490
a professional and cultural movement

00:24:50,220 --> 00:24:55,860
that practices its practices focus on

00:24:53,490 --> 00:24:59,040
making the business better making the

00:24:55,860 --> 00:25:01,500
business Mart more efficient and helps

00:24:59,040 --> 00:25:04,410
collaboration with culture and sharing

00:25:01,500 --> 00:25:06,690
we can take the lead from other

00:25:04,410 --> 00:25:09,450
companies that have had that have put

00:25:06,690 --> 00:25:12,390
their developers on call and it was like

00:25:09,450 --> 00:25:14,520
earlier was said that when when an

00:25:12,390 --> 00:25:16,350
outage happens at 2am and the developers

00:25:14,520 --> 00:25:18,059
on call and the outage is because there

00:25:16,350 --> 00:25:19,590
was a problem in the application that

00:25:18,059 --> 00:25:21,600
defect is going to get fixed right away

00:25:19,590 --> 00:25:23,309
and there's probably going to be a unit

00:25:21,600 --> 00:25:25,740
or integration test to go along with it

00:25:23,309 --> 00:25:28,230
right because we do test-driven

00:25:25,740 --> 00:25:32,070
development and you know we can get that

00:25:28,230 --> 00:25:35,750
into into production and rely on it to

00:25:32,070 --> 00:25:38,490
be correct the next time so this also

00:25:35,750 --> 00:25:40,380
increases responsibility and a vested

00:25:38,490 --> 00:25:42,720
interest in helping build more robust

00:25:40,380 --> 00:25:45,870
and resilient applications and services

00:25:42,720 --> 00:25:47,190
and bye bye and by having developers

00:25:45,870 --> 00:25:49,470
participate more actively in the

00:25:47,190 --> 00:25:52,500
operation of the site through the

00:25:49,470 --> 00:25:54,420
through response to outages they will

00:25:52,500 --> 00:25:56,550
naturally help build better tools that

00:25:54,420 --> 00:25:59,070
will be able to operate the application

00:25:56,550 --> 00:26:01,470
gather metrics and be able to get more

00:25:59,070 --> 00:26:06,230
data about about how the system is

00:26:01,470 --> 00:26:06,230
running thank you

00:26:41,470 --> 00:26:44,470

YouTube URL: https://www.youtube.com/watch?v=ac_M_7jZAwc


