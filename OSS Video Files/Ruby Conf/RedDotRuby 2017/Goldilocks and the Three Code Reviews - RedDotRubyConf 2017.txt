Title: Goldilocks and the Three Code Reviews - RedDotRubyConf 2017
Publication date: 2020-01-22
Playlist: RedDotRuby 2017
Description: 
	Speaker: Vaidehi Joshi, Staff Engineer, Tilde Inc

Once upon a time, Goldilocks had a couple extra minutes to spare before morning standup. She logged into Github and saw that there were three pull requests waiting for her to review. We’ve probably all heard that peer code reviews can do wonders to a codebase. But not all type of code reviews are effective. Some of them seem to go on and on forever, while others pick at syntax and formatting but miss bugs. This talk explores what makes a strong code review and what makes a painful one. Join Goldilocks as she seeks to find a code review process that’s neither too long nor too short, but just right!

Speaker's Bio

Vaidehi is an engineer at Tilde, in Portland, Oregon, where she works on Skylight, your favorite Rails profiler! She enjoys building and breaking code, but loves creating empathetic engineering teams a whole lot more. In her spare time, she runs basecs, a weekly writing series that explores the fundamentals of computer science.

Event Page: http://www.reddotrubyconf.com/

Produced by Engineers.SG

Help us caption & translate this video!

http://amara.org/v/8HYF/
Captions: 
	00:00:03,750 --> 00:00:10,540
hello Singapore that was good we can do

00:00:10,180 --> 00:00:15,940
better

00:00:10,540 --> 00:00:17,590
hi Singapore thank you I was a little

00:00:15,940 --> 00:00:20,290
bit worried about this timeslot because

00:00:17,590 --> 00:00:24,220
I know the only thing standing between

00:00:20,290 --> 00:00:26,890
me and your Friday hugs from Erin is

00:00:24,220 --> 00:00:28,270
this like 30 minute talk but then I

00:00:26,890 --> 00:00:32,399
started thinking about the fact that the

00:00:28,270 --> 00:00:35,980
only thing standing between you and your

00:00:32,399 --> 00:00:39,000
beer or preferred evening beverage is

00:00:35,980 --> 00:00:41,860
Aaron's talk and then I felt better so

00:00:39,000 --> 00:00:46,420
with that out of the way um hello my

00:00:41,860 --> 00:00:48,910
name is vitae he and just to get a show

00:00:46,420 --> 00:00:53,380
of hands in the room how many of you

00:00:48,910 --> 00:00:58,420
grew up either reading or listening to

00:00:53,380 --> 00:01:00,940
fairy tales okay it's a good number meet

00:00:58,420 --> 00:01:03,760
you how many of you are familiar with

00:01:00,940 --> 00:01:05,579
the story of Goldilocks and the three

00:01:03,760 --> 00:01:08,469
bears

00:01:05,579 --> 00:01:10,149
okay sizable number for those of you who

00:01:08,469 --> 00:01:10,869
don't who might not be familiar with the

00:01:10,149 --> 00:01:14,590
story

00:01:10,869 --> 00:01:17,859
to summarize basically there's this girl

00:01:14,590 --> 00:01:22,240
named Goldilocks and she breaks into a

00:01:17,859 --> 00:01:24,009
house and the house is the home of three

00:01:22,240 --> 00:01:26,259
bears and she basically like goes

00:01:24,009 --> 00:01:28,060
through all of their stuff which seems

00:01:26,259 --> 00:01:29,109
like a terrible thing to teach children

00:01:28,060 --> 00:01:30,459
because like if you're going to break

00:01:29,109 --> 00:01:32,770
into anyone's house it should probably

00:01:30,459 --> 00:01:34,299
be like you know puppies or bunny

00:01:32,770 --> 00:01:37,450
rabbits I don't think bears are the most

00:01:34,299 --> 00:01:40,779
friendly animals to do that to but that

00:01:37,450 --> 00:01:42,609
aside she basically goes through all of

00:01:40,779 --> 00:01:44,109
their things and she like has the mama

00:01:42,609 --> 00:01:45,759
bears porridge and the Papa bears

00:01:44,109 --> 00:01:47,740
porridge and one is too hot and one is

00:01:45,759 --> 00:01:49,329
too cold and the entire story is her

00:01:47,740 --> 00:01:54,240
trying to find the thing that is just

00:01:49,329 --> 00:01:57,609
right so I got to thinking about what

00:01:54,240 --> 00:02:00,310
Goldilocks is story might be like if it

00:01:57,609 --> 00:02:04,899
was reimagined and if we were to do a

00:02:00,310 --> 00:02:07,149
modern-day retelling of it so surprise

00:02:04,899 --> 00:02:09,280
it's story time we're going to do a

00:02:07,149 --> 00:02:12,640
modern-day retelling of Goldilocks and

00:02:09,280 --> 00:02:16,240
the three bears however in our

00:02:12,640 --> 00:02:18,910
modern-day retelling Goldilocks is

00:02:16,240 --> 00:02:23,350
/ you know breaking into large furry

00:02:18,910 --> 00:02:30,330
animal houses instead she is a ruby

00:02:23,350 --> 00:02:33,070
developer because of course she is so

00:02:30,330 --> 00:02:37,570
foldy watches at her very first deaf job

00:02:33,070 --> 00:02:39,190
ever and she is getting to build code

00:02:37,570 --> 00:02:40,750
and she's getting paid for it and she's

00:02:39,190 --> 00:02:43,150
like oh my god this is amazing I'm

00:02:40,750 --> 00:02:47,260
learning so much and she's working at a

00:02:43,150 --> 00:02:49,240
small consultancy and she basically has

00:02:47,260 --> 00:02:51,010
at her disposal all of these engineers

00:02:49,240 --> 00:02:53,050
that she can ask her questions to and

00:02:51,010 --> 00:02:55,360
she's like this is great amazing I'm

00:02:53,050 --> 00:02:58,510
going to learn a lot and she does learn

00:02:55,360 --> 00:03:01,750
a lot and she has a lot of fun but after

00:02:58,510 --> 00:03:03,190
a few months she's definitely going

00:03:01,750 --> 00:03:06,370
things and she's contributing to

00:03:03,190 --> 00:03:08,830
projects but she's not really sure if

00:03:06,370 --> 00:03:11,680
she's getting any better at programming

00:03:08,830 --> 00:03:14,500
is she writing better Ruby code she

00:03:11,680 --> 00:03:16,390
doesn't know and she starts talking to

00:03:14,500 --> 00:03:19,510
other developers and she realizes that

00:03:16,390 --> 00:03:22,810
at her company she doesn't really get

00:03:19,510 --> 00:03:23,860
any written feedback and part of the

00:03:22,810 --> 00:03:27,220
reason for this is that she doesn't

00:03:23,860 --> 00:03:29,080
really get real code reviews her team is

00:03:27,220 --> 00:03:31,270
really small and if she wants code

00:03:29,080 --> 00:03:32,830
review she has to ask for it and she has

00:03:31,270 --> 00:03:34,720
to sit down with another engineer and

00:03:32,830 --> 00:03:36,490
tell them hey can you look at my code

00:03:34,720 --> 00:03:41,530
and can you tell me what could be better

00:03:36,490 --> 00:03:43,600
and what what I'm doing well and she

00:03:41,530 --> 00:03:45,040
finds us a little a little frustrating

00:03:43,600 --> 00:03:46,870
because she knows that other companies

00:03:45,040 --> 00:03:50,440
do have a bit more formalized code

00:03:46,870 --> 00:03:53,560
review processes so after about a year

00:03:50,440 --> 00:03:55,480
there she decides that this company is

00:03:53,560 --> 00:03:58,330
not the best fit for her anymore

00:03:55,480 --> 00:03:59,800
so she goes to another company hoping

00:03:58,330 --> 00:04:04,420
that she'll find what she's looking for

00:03:59,800 --> 00:04:05,850
there and her second dev job things are

00:04:04,420 --> 00:04:09,370
very different

00:04:05,850 --> 00:04:11,500
everyone is code reviewed and she even

00:04:09,370 --> 00:04:13,690
gets to code review in fact at her

00:04:11,500 --> 00:04:17,680
second week on the job she reviews the

00:04:13,690 --> 00:04:20,160
CEOs code and she's just like what me

00:04:17,680 --> 00:04:23,530
really I could have technical opinions

00:04:20,160 --> 00:04:27,060
it turns out she can and she was really

00:04:23,530 --> 00:04:29,200
excited about that but

00:04:27,060 --> 00:04:31,900
even up the small startups that she

00:04:29,200 --> 00:04:34,690
thought there are some limitations so

00:04:31,900 --> 00:04:36,970
one of the limitations is that there's

00:04:34,690 --> 00:04:39,850
not very many people and so as long as

00:04:36,970 --> 00:04:43,830
one person reviews a pull request it

00:04:39,850 --> 00:04:51,910
gets merged in and this tends to be fine

00:04:43,830 --> 00:04:56,350
and code gets merged in keeps getting

00:04:51,910 --> 00:04:58,540
merged in Mossel requests but there are

00:04:56,350 --> 00:05:00,430
some drawbacks one of the things that

00:04:58,540 --> 00:05:02,800
she notices is that her team will

00:05:00,430 --> 00:05:06,460
sometimes create pull requests and

00:05:02,800 --> 00:05:09,160
they'll devolve into long comment

00:05:06,460 --> 00:05:11,650
threads and sometimes people will be

00:05:09,160 --> 00:05:15,400
like we should use tab no we should use

00:05:11,650 --> 00:05:17,140
spaces we should use hash rockets why

00:05:15,400 --> 00:05:19,390
are we talking about this and it'll just

00:05:17,140 --> 00:05:22,810
keep going and they're not always the

00:05:19,390 --> 00:05:25,420
most fruitful conversations but things

00:05:22,810 --> 00:05:26,620
are fine code keeps getting merged in

00:05:25,420 --> 00:05:29,310
and things are getting shipped and

00:05:26,620 --> 00:05:34,090
deployed and it seems to be working fine

00:05:29,310 --> 00:05:36,100
until one day so boldi locks has been

00:05:34,090 --> 00:05:39,190
working on this feature for about two

00:05:36,100 --> 00:05:41,560
weeks and she has poured her heart and

00:05:39,190 --> 00:05:44,410
soul into it and finally she submits a

00:05:41,560 --> 00:05:46,720
pull request and two engineers give it a

00:05:44,410 --> 00:05:48,370
thumbs up and it gets merged in and

00:05:46,720 --> 00:05:50,820
she's like you know what okay I'm gonna

00:05:48,370 --> 00:05:54,520
go for coffee I'll see you kids later

00:05:50,820 --> 00:05:57,000
she comes back 20 minutes later to find

00:05:54,520 --> 00:06:01,780
that the entire engineering team is

00:05:57,000 --> 00:06:03,790
freaking out and there's a fire and the

00:06:01,780 --> 00:06:06,190
fire is that the entire staging

00:06:03,790 --> 00:06:08,650
environment has just like gone down in

00:06:06,190 --> 00:06:11,050
flames and they're like Goldilocks what

00:06:08,650 --> 00:06:13,480
did you do you just merge this giant

00:06:11,050 --> 00:06:16,330
feature in you did something and she's

00:06:13,480 --> 00:06:18,370
like well you reviewed my coat both of

00:06:16,330 --> 00:06:21,450
you reviewed my code so I don't know

00:06:18,370 --> 00:06:26,170
what I did why didn't you see it

00:06:21,450 --> 00:06:28,450
but not to be deterred she decides that

00:06:26,170 --> 00:06:30,690
she's going to fight this fire and what

00:06:28,450 --> 00:06:33,430
she finds out is really interesting

00:06:30,690 --> 00:06:36,920
turns out in this very large pool

00:06:33,430 --> 00:06:41,570
request of like 20-some files

00:06:36,920 --> 00:06:45,680
he had added a controller and turns out

00:06:41,570 --> 00:06:48,260
somewhere along the line of rebasing she

00:06:45,680 --> 00:06:50,330
had two controllers and one was empty

00:06:48,260 --> 00:06:51,740
and one was not and the empty one was

00:06:50,330 --> 00:06:54,470
overriding the one with all the code and

00:06:51,740 --> 00:06:54,800
the entire application has come crashing

00:06:54,470 --> 00:06:57,920
down

00:06:54,800 --> 00:07:01,790
so by committing an empty file that no

00:06:57,920 --> 00:07:09,920
one noticed she basically caused kind of

00:07:01,790 --> 00:07:11,720
a mess so this gets her thinking oh we

00:07:09,920 --> 00:07:17,480
really thought that we had this code

00:07:11,720 --> 00:07:19,640
review process down ha no nope nope nope

00:07:17,480 --> 00:07:21,920
we don't because clearly if we had it

00:07:19,640 --> 00:07:24,080
down perfectly we wouldn't have had this

00:07:21,920 --> 00:07:31,480
problem occurred I wouldn't be fighting

00:07:24,080 --> 00:07:34,040
this fire so she starts thinking okay

00:07:31,480 --> 00:07:43,100
there must be a better way of doing code

00:07:34,040 --> 00:07:46,900
reviews right right so Goldilocks being

00:07:43,100 --> 00:07:50,480
the Ruby developer that she is does what

00:07:46,900 --> 00:07:53,780
probably any of us would do she does

00:07:50,480 --> 00:07:58,390
some research and she asked the internet

00:07:53,780 --> 00:08:04,090
and she reads about this ancient text

00:07:58,390 --> 00:08:08,960
called code complete which dates back to

00:08:04,090 --> 00:08:10,700
the old year of 1993 it's a really great

00:08:08,960 --> 00:08:14,000
book it's written by Steve McConnell I

00:08:10,700 --> 00:08:16,220
highly recommend that you read it and in

00:08:14,000 --> 00:08:18,350
reading code complete she starts

00:08:16,220 --> 00:08:20,240
learning about the theory in the history

00:08:18,350 --> 00:08:23,120
of code reviews and why we started doing

00:08:20,240 --> 00:08:26,270
them as teams and as an industry in the

00:08:23,120 --> 00:08:28,430
first place and in code complete Steve

00:08:26,270 --> 00:08:30,740
McConnell talks about a lot of different

00:08:28,430 --> 00:08:32,300
like research that he's done and the

00:08:30,740 --> 00:08:34,490
theory behind code reviews and one of

00:08:32,300 --> 00:08:37,490
the things that he says is that code

00:08:34,490 --> 00:08:39,380
reviews one part of managing a software

00:08:37,490 --> 00:08:42,890
engineering process is catching problems

00:08:39,380 --> 00:08:45,050
at the lowest value stage that is at the

00:08:42,890 --> 00:08:46,970
time a tweet at which the least

00:08:45,050 --> 00:08:49,910
investment has been made and the

00:08:46,970 --> 00:08:53,510
problems cost the least correct

00:08:49,910 --> 00:08:55,400
and basically what he says is that code

00:08:53,510 --> 00:08:59,000
reviews are meant to act as quality

00:08:55,400 --> 00:09:01,280
gates just as we test and review the

00:08:59,000 --> 00:09:06,200
products that we build code reviews are

00:09:01,280 --> 00:09:08,030
meant to do that for our code bases but

00:09:06,200 --> 00:09:10,550
as she starts thinking about the teams

00:09:08,030 --> 00:09:13,520
that she's worked on the two team she

00:09:10,550 --> 00:09:15,410
realizes that none of the code review

00:09:13,520 --> 00:09:18,640
processes that she's been a part of

00:09:15,410 --> 00:09:25,060
really feel like they're of good quality

00:09:18,640 --> 00:09:29,390
they kind of feel like formalities so

00:09:25,060 --> 00:09:31,940
she keeps reading and she learns about

00:09:29,390 --> 00:09:35,210
something called the idea of collective

00:09:31,940 --> 00:09:37,580
ownership of construction and this is

00:09:35,210 --> 00:09:41,330
what code reviews are meant to Center

00:09:37,580 --> 00:09:43,700
upon this idea that if all of us have a

00:09:41,330 --> 00:09:47,960
hand and a stake in what we're building

00:09:43,700 --> 00:09:52,610
together then our code will actually

00:09:47,960 --> 00:09:54,560
improve as a consequence and Steve

00:09:52,610 --> 00:09:56,690
McConnell has done a lot of research and

00:09:54,560 --> 00:09:58,580
he found a lot of studies and he writes

00:09:56,690 --> 00:10:01,160
about this in code complete and she

00:09:58,580 --> 00:10:03,770
learns about a few of the different

00:10:01,160 --> 00:10:06,920
benefits that code reviews actually give

00:10:03,770 --> 00:10:09,530
us on our engineering teams one of those

00:10:06,920 --> 00:10:12,770
is that if you have multiple sets of

00:10:09,530 --> 00:10:16,760
eyes on a code base you actually end up

00:10:12,770 --> 00:10:18,830
with better quality code seems obvious

00:10:16,760 --> 00:10:21,950
but for those of us who might not do

00:10:18,830 --> 00:10:26,240
code reviews regularly it actually is a

00:10:21,950 --> 00:10:29,330
huge factor another thing is that if

00:10:26,240 --> 00:10:31,630
someone leaves the team and you have a

00:10:29,330 --> 00:10:33,950
code review process that's formalized

00:10:31,630 --> 00:10:37,430
it's a lot of you're here to pick up

00:10:33,950 --> 00:10:39,170
where they left off if someone leaves

00:10:37,430 --> 00:10:41,690
the team and everybody is at least

00:10:39,170 --> 00:10:42,590
looked at the code in review even if

00:10:41,690 --> 00:10:44,930
they've never worked with it before

00:10:42,590 --> 00:10:46,550
it'll be a little bit easier for them to

00:10:44,930 --> 00:10:50,860
dig their teeth into it if they need to

00:10:46,550 --> 00:10:53,300
add a feature or fix a bug finally

00:10:50,860 --> 00:10:56,690
another great benefit of having code

00:10:53,300 --> 00:10:59,170
reviews is that the process of detecting

00:10:56,690 --> 00:11:01,940
defects the process of catching bugs

00:10:59,170 --> 00:11:02,750
goes a lot faster if some ones that

00:11:01,940 --> 00:11:05,330
we've seen the

00:11:02,750 --> 00:11:08,210
before or reviewed it if you've never

00:11:05,330 --> 00:11:13,670
seen a file ever and you're trying to

00:11:08,210 --> 00:11:18,500
find a bug in it it's a lot tougher so

00:11:13,670 --> 00:11:21,020
it turns out that in the late 80s a time

00:11:18,500 --> 00:11:25,400
that I you know can't really imagine

00:11:21,020 --> 00:11:28,670
anymore but back then code reviews came

00:11:25,400 --> 00:11:30,650
in three shapes and sizes one was

00:11:28,670 --> 00:11:32,210
something called inspections and this is

00:11:30,650 --> 00:11:34,600
actually something that was started by a

00:11:32,210 --> 00:11:37,460
guy named Michael Sagan at IBM and

00:11:34,600 --> 00:11:40,820
basically what he did was he started

00:11:37,460 --> 00:11:43,310
this hour-long code review process where

00:11:40,820 --> 00:11:45,590
there would be three people a reviewer

00:11:43,310 --> 00:11:48,080
the author of the code and a moderator

00:11:45,590 --> 00:11:49,940
and they would basically sit down and

00:11:48,080 --> 00:11:51,890
they would focus on defect detection

00:11:49,940 --> 00:11:53,510
they would focus on going through the

00:11:51,890 --> 00:11:56,030
code and looking for things that could

00:11:53,510 --> 00:11:58,490
potentially go wrong basically trying to

00:11:56,030 --> 00:12:01,040
snag bugs the important thing was that

00:11:58,490 --> 00:12:02,720
they were not correcting as they went

00:12:01,040 --> 00:12:04,940
along and there was a great talk this

00:12:02,720 --> 00:12:08,690
morning about not fixing bugs while

00:12:04,940 --> 00:12:12,620
refactoring to that same point it's

00:12:08,690 --> 00:12:18,170
really good to not fix bugs while you're

00:12:12,620 --> 00:12:19,910
reviewing instead keeping the review

00:12:18,170 --> 00:12:21,740
process as its own thing is really

00:12:19,910 --> 00:12:26,120
important according to Steve McConnell's

00:12:21,740 --> 00:12:28,839
research so these really long code

00:12:26,120 --> 00:12:31,400
review process is called inspections

00:12:28,839 --> 00:12:33,830
took a little bit of upfront time and

00:12:31,400 --> 00:12:36,290
effort but it turns out that they were

00:12:33,830 --> 00:12:38,810
actually really beneficial to the teams

00:12:36,290 --> 00:12:41,600
that use them the three people the

00:12:38,810 --> 00:12:43,100
reviewer the author of the code and the

00:12:41,600 --> 00:12:45,470
moderator would come in with the

00:12:43,100 --> 00:12:46,820
checklist and they would all know what

00:12:45,470 --> 00:12:49,640
they were looking for and what their

00:12:46,820 --> 00:12:51,920
roles were in the code review and when

00:12:49,640 --> 00:12:53,240
IBM started implementing this and when

00:12:51,920 --> 00:12:57,200
they shared it with other engineering

00:12:53,240 --> 00:13:01,040
teams it turns out that before using

00:12:57,200 --> 00:13:05,810
inspections and after 60% of defects in

00:13:01,040 --> 00:13:08,990
code bases were caught and there were 20

00:13:05,810 --> 00:13:11,920
to 30% fewer defects per 1000 lines of

00:13:08,990 --> 00:13:15,470
code after using inspections on teams

00:13:11,920 --> 00:13:16,560
the most important part of what these

00:13:15,470 --> 00:13:20,870
code reviews used to be

00:13:16,560 --> 00:13:23,360
was that after a code review process

00:13:20,870 --> 00:13:25,920
everybody on the team would sit down and

00:13:23,360 --> 00:13:27,450
basically talk about what went well and

00:13:25,920 --> 00:13:29,700
what didn't and they would take that

00:13:27,450 --> 00:13:33,120
data and recycle it back and they would

00:13:29,700 --> 00:13:37,370
iterate so that each time they did an

00:13:33,120 --> 00:13:37,370
inspection it would get better with time

00:13:38,330 --> 00:13:42,990
but not everybody has thousand lines of

00:13:41,100 --> 00:13:45,170
code that they're adding to a code base

00:13:42,990 --> 00:13:47,700
sometimes you're adding only a few lines

00:13:45,170 --> 00:13:50,310
this brings us to our second type of

00:13:47,700 --> 00:13:54,180
code review this is something called

00:13:50,310 --> 00:13:55,830
shorten views and the basic idea here

00:13:54,180 --> 00:13:58,250
was that a lot of teams weren't doing

00:13:55,830 --> 00:14:00,900
any type of code review process for

00:13:58,250 --> 00:14:06,440
one-line changes or five line changes

00:14:00,900 --> 00:14:09,330
and it turns out that based on research

00:14:06,440 --> 00:14:11,730
those five line changes and one-line

00:14:09,330 --> 00:14:13,440
changes are actually the ones that are

00:14:11,730 --> 00:14:17,250
the most painful and the most

00:14:13,440 --> 00:14:19,650
error-prone teams that introduced short

00:14:17,250 --> 00:14:22,710
reviews found that they would go from a

00:14:19,650 --> 00:14:27,150
55 percent error rate to just a two

00:14:22,710 --> 00:14:29,040
percent error rate and those that didn't

00:14:27,150 --> 00:14:31,740
use short reviews and then implemented

00:14:29,040 --> 00:14:34,140
them found that they had an 86%

00:14:31,740 --> 00:14:37,460
correctness rate before having shorter

00:14:34,140 --> 00:14:43,470
views and then afterwards they had a

00:14:37,460 --> 00:14:45,630
99.6% correctness rate so that's the

00:14:43,470 --> 00:14:48,180
second type of code review the third

00:14:45,630 --> 00:14:49,710
type is one that Goldilocks seems kind

00:14:48,180 --> 00:14:52,560
of familiar with and this was called

00:14:49,710 --> 00:14:54,450
something called a walkthrough and this

00:14:52,560 --> 00:14:58,440
is effectively a type of working meeting

00:14:54,450 --> 00:15:00,810
where for 30 to 60 minutes you have two

00:14:58,440 --> 00:15:02,940
engineers usually a more junior engineer

00:15:00,810 --> 00:15:05,700
and a more senior engineer and they talk

00:15:02,940 --> 00:15:09,150
about the code that's being submitted

00:15:05,700 --> 00:15:11,490
for review and technical choices and

00:15:09,150 --> 00:15:15,570
details that have been made and how to

00:15:11,490 --> 00:15:18,839
make them better this was not nearly as

00:15:15,570 --> 00:15:21,360
effective it is helpful but not nearly

00:15:18,839 --> 00:15:23,850
as impactful as a formalized kind of

00:15:21,360 --> 00:15:27,480
code review teams that use walkthroughs

00:15:23,850 --> 00:15:28,930
found they protect approximately 30% of

00:15:27,480 --> 00:15:32,470
errors in a program

00:15:28,930 --> 00:15:35,470
which is fine but it's not the most

00:15:32,470 --> 00:15:36,640
effective and the idea with walkthroughs

00:15:35,470 --> 00:15:39,910
is that they're a great learning

00:15:36,640 --> 00:15:42,399
opportunity for junior engineers to ask

00:15:39,910 --> 00:15:45,070
questions of senior engineers and for

00:15:42,399 --> 00:15:50,010
them to also give pushback against ideas

00:15:45,070 --> 00:15:50,010
and kind of like propels a team board

00:15:51,660 --> 00:15:57,370
Goldilocks also stumbled upon something

00:15:53,980 --> 00:16:01,470
called the peer-review sophistication

00:15:57,370 --> 00:16:04,630
scale and she kind of looked at this and

00:16:01,470 --> 00:16:05,980
started thinking about whether any of

00:16:04,630 --> 00:16:08,529
the code reviews that she had been a

00:16:05,980 --> 00:16:13,000
part of were actually of any good were

00:16:08,529 --> 00:16:14,830
they even valuable and as she thought

00:16:13,000 --> 00:16:16,750
about this and looked at the scale she

00:16:14,830 --> 00:16:20,820
realized that most of the team she's

00:16:16,750 --> 00:16:25,120
worked on she probably fell it number to

00:16:20,820 --> 00:16:28,240
maybe a number three and she got a

00:16:25,120 --> 00:16:32,170
little bit worried and she wondered am I

00:16:28,240 --> 00:16:34,900
the only one that feels this way does

00:16:32,170 --> 00:16:37,150
anybody else feel like this too and this

00:16:34,900 --> 00:16:40,120
is all theory but like in practice what

00:16:37,150 --> 00:16:44,770
are other teams doing do any of us have

00:16:40,120 --> 00:16:47,350
this code review sing down so she

00:16:44,770 --> 00:16:50,459
decided to debug this whole idea of code

00:16:47,350 --> 00:16:53,020
reviews in the industry today and

00:16:50,459 --> 00:16:55,839
because Goldilocks is a modern day Ruby

00:16:53,020 --> 00:16:56,700
developer she did what any of us would

00:16:55,839 --> 00:17:01,510
do

00:16:56,700 --> 00:17:03,970
she has Twitter I don't know if this was

00:17:01,510 --> 00:17:06,250
you know the best decision for her but

00:17:03,970 --> 00:17:09,069
she did it anyways because we know all

00:17:06,250 --> 00:17:11,980
the things come from Twitter and she

00:17:09,069 --> 00:17:15,220
basically created a survey and asked all

00:17:11,980 --> 00:17:16,809
the developers that she knew to spend a

00:17:15,220 --> 00:17:18,819
couple minutes and answer a couple of

00:17:16,809 --> 00:17:20,319
questions about what their code review

00:17:18,819 --> 00:17:23,650
processes were liked and whether they

00:17:20,319 --> 00:17:26,170
were happy with them at all or not the

00:17:23,650 --> 00:17:28,540
little disclaimer Goldilocks is

00:17:26,170 --> 00:17:30,670
definitely not a data scientist so she

00:17:28,540 --> 00:17:33,840
probably could have done a better job of

00:17:30,670 --> 00:17:38,080
collecting data and analyzing it but

00:17:33,840 --> 00:17:39,429
it's a start one of the ways that this

00:17:38,080 --> 00:17:41,040
data is a little bit limited is that

00:17:39,429 --> 00:17:43,080
it's

00:17:41,040 --> 00:17:45,420
obviously going to only be people who

00:17:43,080 --> 00:17:47,370
answer the survey so it's not a great

00:17:45,420 --> 00:17:51,320
representation of all developers but

00:17:47,370 --> 00:17:51,320
it's something that we can use at least

00:17:53,930 --> 00:17:58,260
so the first thing that you learned is

00:17:56,100 --> 00:18:04,380
that the majority of people answering

00:17:58,260 --> 00:18:08,910
her survey survey worked in Java I don't

00:18:04,380 --> 00:18:11,640
know why they also used Ruby and rails

00:18:08,910 --> 00:18:13,680
and JavaScript and there were some other

00:18:11,640 --> 00:18:15,570
languages as well but for the most part

00:18:13,680 --> 00:18:17,100
that was the majority of people who were

00:18:15,570 --> 00:18:21,210
answering the survey something to keep

00:18:17,100 --> 00:18:23,730
in mind and she found that the majority

00:18:21,210 --> 00:18:25,920
of people who responded did feel like

00:18:23,730 --> 00:18:28,080
code reviews made them better developers

00:18:25,920 --> 00:18:30,540
so they seem to be on the same page as

00:18:28,080 --> 00:18:34,380
her that code reviews were overall a

00:18:30,540 --> 00:18:37,170
good thing okay cool we all seem to be

00:18:34,380 --> 00:18:42,780
on the same page what else can we agree

00:18:37,170 --> 00:18:44,760
upon well it seemed like Swift

00:18:42,780 --> 00:18:47,550
developers found code reviews to be the

00:18:44,760 --> 00:18:52,350
most beneficial they came in and about a

00:18:47,550 --> 00:18:57,530
9.5 on a scale of one to ten and Ruby

00:18:52,350 --> 00:18:57,530
developers came in second so not bad 9.2

00:18:57,920 --> 00:19:03,840
so everybody seemed to think that code

00:19:00,480 --> 00:19:05,970
reviews were helping their teams what

00:19:03,840 --> 00:19:07,980
was interesting was that while most

00:19:05,970 --> 00:19:10,200
people did have all their pull requests

00:19:07,980 --> 00:19:14,070
reviewed for their teams there was still

00:19:10,200 --> 00:19:16,470
a whole ten percent of people who had to

00:19:14,070 --> 00:19:18,450
ask for review ten percent of

00:19:16,470 --> 00:19:20,700
respondents didn't have any type of

00:19:18,450 --> 00:19:24,060
formalized code review process they had

00:19:20,700 --> 00:19:25,260
to ask for it which made her feel a

00:19:24,060 --> 00:19:29,460
little bit better because she had been

00:19:25,260 --> 00:19:31,380
in that position before to what was even

00:19:29,460 --> 00:19:33,840
more interesting was that it didn't

00:19:31,380 --> 00:19:38,310
really matter what framework you worked

00:19:33,840 --> 00:19:39,690
with or what language some teams seemed

00:19:38,310 --> 00:19:42,840
to have a formalized code review process

00:19:39,690 --> 00:19:45,270
down and others just didn't which led

00:19:42,840 --> 00:19:46,740
Goldilocks to believe that it's whether

00:19:45,270 --> 00:19:48,990
you have a code review process that

00:19:46,740 --> 00:19:50,550
works has nothing to do with what

00:19:48,990 --> 00:19:52,850
language you use or what framework and

00:19:50,550 --> 00:19:58,310
everything to do with the people

00:19:52,850 --> 00:20:02,170
on your team's another interesting thing

00:19:58,310 --> 00:20:04,820
that she found was that like her startup

00:20:02,170 --> 00:20:08,330
most teams only needed one person to

00:20:04,820 --> 00:20:10,940
review a few people needed more

00:20:08,330 --> 00:20:15,440
reviewers but generally one reviewers

00:20:10,940 --> 00:20:17,420
seem to be enough however those

00:20:15,440 --> 00:20:19,610
reviewers would spend only 5 to 20

00:20:17,420 --> 00:20:24,680
minutes doing a review of a pull request

00:20:19,610 --> 00:20:28,430
and there are some people who who had to

00:20:24,680 --> 00:20:35,200
wait up to a day or even a few days to

00:20:28,430 --> 00:20:38,000
receive review from their teammates so

00:20:35,200 --> 00:20:42,590
as she read through some of the

00:20:38,000 --> 00:20:44,540
responses in her survey she saw that a

00:20:42,590 --> 00:20:47,690
lot of people were doing code reviews

00:20:44,540 --> 00:20:52,160
but not all of them were happy without

00:20:47,690 --> 00:20:55,340
they were being conducted and she kind

00:20:52,160 --> 00:20:59,210
of boiled it down to two aspects the two

00:20:55,340 --> 00:21:06,440
things made made or broke a code review

00:20:59,210 --> 00:21:09,260
worked time and substance one person

00:21:06,440 --> 00:21:12,770
wrote into her survey and they said we

00:21:09,260 --> 00:21:16,690
have one developer who blindly thumbs up

00:21:12,770 --> 00:21:19,550
every PR and rarely leaves comments

00:21:16,690 --> 00:21:22,760
they're attempting to gain the rule of

00:21:19,550 --> 00:21:26,720
at least two approvals it's easy to tell

00:21:22,760 --> 00:21:30,370
because inside of one minute they've

00:21:26,720 --> 00:21:30,370
approved three pull requests

00:21:30,730 --> 00:21:37,460
someone else rode in and they said if

00:21:34,999 --> 00:21:40,009
the second if there's a second and third

00:21:37,460 --> 00:21:41,809
reviewer there are more likely to just

00:21:40,009 --> 00:21:46,039
rubber-stamp after seeing the first

00:21:41,809 --> 00:21:49,159
person's review so Goldilocks started

00:21:46,039 --> 00:21:51,289
wondering are we just going through the

00:21:49,159 --> 00:21:54,110
actions of reviewing each other's code

00:21:51,289 --> 00:21:56,869
like are we considering time and

00:21:54,110 --> 00:21:59,629
substance because it seems like a lot of

00:21:56,869 --> 00:22:02,269
us are unhappy with it so let's figure

00:21:59,629 --> 00:22:08,899
out what we mean when we say time and

00:22:02,269 --> 00:22:10,129
substance the amount of energy in the

00:22:08,899 --> 00:22:13,429
amount of time that you spend on the

00:22:10,129 --> 00:22:16,720
code of you turns out to be pretty

00:22:13,429 --> 00:22:20,360
significant in how happy engineers are

00:22:16,720 --> 00:22:22,879
with a code review process so what we

00:22:20,360 --> 00:22:25,100
mean by this is who's doing the review

00:22:22,879 --> 00:22:27,200
and how much time are they spending on

00:22:25,100 --> 00:22:30,980
it because that seems to really make a

00:22:27,200 --> 00:22:35,059
difference it's not just the act of

00:22:30,980 --> 00:22:37,309
doing the code of view it's how much

00:22:35,059 --> 00:22:40,610
weight they carry and who's actually

00:22:37,309 --> 00:22:42,860
doing the work someone wrote in to her

00:22:40,610 --> 00:22:46,580
survey and they said everyone on the

00:22:42,860 --> 00:22:49,190
team should receive equal review I feel

00:22:46,580 --> 00:22:51,379
like it's so common for senior people to

00:22:49,190 --> 00:22:55,820
get no feedback because people assume

00:22:51,379 --> 00:23:00,740
that they can do no wrong they totally

00:22:55,820 --> 00:23:03,499
can and they might want feedback junior

00:23:00,740 --> 00:23:06,350
people get nitpick to death and people

00:23:03,499 --> 00:23:08,749
seem to forget that self-esteem can be

00:23:06,350 --> 00:23:10,100
easily affected and that when someone's

00:23:08,749 --> 00:23:14,899
submitting a code review they're being

00:23:10,100 --> 00:23:16,639
vulnerable another person wrote in to

00:23:14,899 --> 00:23:18,740
her survey and said that code reviews

00:23:16,639 --> 00:23:23,360
need to be acknowledged as a first-class

00:23:18,740 --> 00:23:27,350
citizen they are a legitimate activity

00:23:23,360 --> 00:23:29,720
that needs time and focus and as she

00:23:27,350 --> 00:23:31,429
read through these responses she noticed

00:23:29,720 --> 00:23:35,419
that there were a couple common themes

00:23:31,429 --> 00:23:37,730
that kept popping up developers seem to

00:23:35,419 --> 00:23:40,909
be really frustrated by code reviews

00:23:37,730 --> 00:23:42,550
that had very large commits or really

00:23:40,909 --> 00:23:45,400
long PRS

00:23:42,550 --> 00:23:46,720
and those that provided no context it

00:23:45,400 --> 00:23:48,490
meant that you would have to spend more

00:23:46,720 --> 00:23:52,000
energy and time on the code review and

00:23:48,490 --> 00:23:54,220
that seemed to be a huge barrier it was

00:23:52,000 --> 00:23:56,440
also very frustrating for developers

00:23:54,220 --> 00:23:58,500
when different people were sending

00:23:56,440 --> 00:24:01,420
different amounts of time reviewing

00:23:58,500 --> 00:24:04,240
particularly when junior developers

00:24:01,420 --> 00:24:06,310
would get more criticism and longer

00:24:04,240 --> 00:24:10,390
reviews and senior developers wouldn't

00:24:06,310 --> 00:24:13,990
and another point of frustration was

00:24:10,390 --> 00:24:18,240
when technical leads or upper management

00:24:13,990 --> 00:24:21,640
or ctos would basically prevent you from

00:24:18,240 --> 00:24:24,460
as a team treating code reviews as

00:24:21,640 --> 00:24:27,520
first-class citizens when code reviews

00:24:24,460 --> 00:24:29,590
were down valued developers felt more

00:24:27,520 --> 00:24:34,330
frustrated by their team's overall

00:24:29,590 --> 00:24:39,400
process and productivity so what about

00:24:34,330 --> 00:24:43,720
substance well as it turns out even if

00:24:39,400 --> 00:24:46,060
everyone reviews and is reviewed what

00:24:43,720 --> 00:24:52,060
they're saying and doing while reviewing

00:24:46,060 --> 00:24:55,990
is pretty important so when we say

00:24:52,060 --> 00:25:01,750
substance what we're really talking

00:24:55,990 --> 00:25:03,670
about is how a code review occurs so

00:25:01,750 --> 00:25:05,700
goldilocks it up like a find and file in

00:25:03,670 --> 00:25:11,020
all of her responses and she found that

00:25:05,700 --> 00:25:13,030
5% of people just automatically had a

00:25:11,020 --> 00:25:15,550
negative reaction with the phrase code

00:25:13,030 --> 00:25:17,530
review and they were they basically use

00:25:15,550 --> 00:25:18,580
the term nitpick like I hate the code

00:25:17,530 --> 00:25:20,590
reviews they're so nitpicky they're

00:25:18,580 --> 00:25:23,410
terrible and I was like five percent of

00:25:20,590 --> 00:25:25,330
her respondents just automatically which

00:25:23,410 --> 00:25:27,940
really spoke volumes about how people

00:25:25,330 --> 00:25:32,430
feel about code reviews and what they

00:25:27,940 --> 00:25:32,430
actually are doing to the team's morale

00:25:32,700 --> 00:25:38,680
so as it turns out there are a couple of

00:25:37,060 --> 00:25:40,660
things that seem to be points of

00:25:38,680 --> 00:25:43,350
frustrations and points of frustration

00:25:40,660 --> 00:25:46,210
for what a code review consists of

00:25:43,350 --> 00:25:49,000
people really did not like tons and tons

00:25:46,210 --> 00:25:50,740
of comments on their full requests they

00:25:49,000 --> 00:25:53,240
would much rather have a conversation

00:25:50,740 --> 00:25:56,250
about it

00:25:53,240 --> 00:25:59,610
they also seem to be really frustrated

00:25:56,250 --> 00:26:03,990
by having conversations about style and

00:25:59,610 --> 00:26:06,320
syntax and that seemed to be an

00:26:03,990 --> 00:26:08,670
indicator of a negative code we process

00:26:06,320 --> 00:26:11,540
they did however like having

00:26:08,670 --> 00:26:13,860
conversations about content and Mantic

00:26:11,540 --> 00:26:17,790
those seem to be indicators of the more

00:26:13,860 --> 00:26:21,830
positive code review process the biggest

00:26:17,790 --> 00:26:24,510
one however was people who had

00:26:21,830 --> 00:26:26,900
empathetic code reviews generally seem

00:26:24,510 --> 00:26:30,840
to be happier with their workflows

00:26:26,900 --> 00:26:35,310
whereas people who had experiences with

00:26:30,840 --> 00:26:38,820
very egotistical reviewers or submitters

00:26:35,310 --> 00:26:40,530
of code reviews were more frustrated by

00:26:38,820 --> 00:26:44,070
the entire process and thought of it in

00:26:40,530 --> 00:26:45,870
a very negative light one person wrote

00:26:44,070 --> 00:26:49,350
into her survey and said that you should

00:26:45,870 --> 00:26:51,660
review the code not the person let tools

00:26:49,350 --> 00:26:53,610
handle styling changes for you so that

00:26:51,660 --> 00:26:57,840
you don't have to spend time with this

00:26:53,610 --> 00:27:01,080
as a team another person wrote in and

00:26:57,840 --> 00:27:04,050
said if I ever find myself going back

00:27:01,080 --> 00:27:06,990
and forth on something via comments I'll

00:27:04,050 --> 00:27:10,410
just ping the other person and ask them

00:27:06,990 --> 00:27:15,090
to pair sometimes it's just a lot easier

00:27:10,410 --> 00:27:18,480
to talk to someone another person wrote

00:27:15,090 --> 00:27:22,410
in and said that on their team there was

00:27:18,480 --> 00:27:24,180
trolling of code and they didn't even

00:27:22,410 --> 00:27:27,840
have any kind of code of conduct that

00:27:24,180 --> 00:27:30,390
was really hard to stop this and this

00:27:27,840 --> 00:27:32,190
was both disheartening but also kind of

00:27:30,390 --> 00:27:33,720
uplifting for Goldilocks because she

00:27:32,190 --> 00:27:37,320
realized that she was not the only

00:27:33,720 --> 00:27:38,790
person that had gone through this she

00:27:37,320 --> 00:27:41,240
was not the only person who had been

00:27:38,790 --> 00:27:45,480
disappointed by code reviews in the past

00:27:41,240 --> 00:27:47,550
and in reading through her survey

00:27:45,480 --> 00:27:49,740
responses she realized that one of the

00:27:47,550 --> 00:27:54,120
major factors of what had changed

00:27:49,740 --> 00:27:55,800
between 25 years ago when Steve

00:27:54,120 --> 00:27:58,010
McConnell wrote code complete and talked

00:27:55,800 --> 00:28:01,860
about the theory of code reviews and

00:27:58,010 --> 00:28:03,820
engineering teams today was that a lot

00:28:01,860 --> 00:28:05,440
of teams didn't have any concept

00:28:03,820 --> 00:28:09,370
checklist of what a code review should

00:28:05,440 --> 00:28:11,980
or shouldn't be and even worse they had

00:28:09,370 --> 00:28:15,160
stopped collecting data and iterating on

00:28:11,980 --> 00:28:16,840
their code review processes people had

00:28:15,160 --> 00:28:19,300
starts talking about it and people had

00:28:16,840 --> 00:28:20,830
stopped thinking about whether it was

00:28:19,300 --> 00:28:26,220
actually effective they were just going

00:28:20,830 --> 00:28:29,320
through the motions of doing them so I

00:28:26,220 --> 00:28:31,150
told you that this was a fairy tale and

00:28:29,320 --> 00:28:35,140
we've been going along this journey with

00:28:31,150 --> 00:28:38,530
Goldilocks but I have been not entirely

00:28:35,140 --> 00:28:41,530
truthful with you because as it turns

00:28:38,530 --> 00:28:46,620
out this is not a fairy tale I'm

00:28:41,530 --> 00:28:46,620
Goldilocks surprised I know

00:28:48,090 --> 00:28:52,770
plot twist I know nobody saw that coming

00:28:53,010 --> 00:28:58,540
so you gave I don't actually work it

00:28:56,290 --> 00:29:00,490
either of those two companies I work at

00:28:58,540 --> 00:29:03,640
a company called tilde in Portland

00:29:00,490 --> 00:29:06,100
Oregon and we build something called

00:29:03,640 --> 00:29:08,110
skylight which is a favorite rails

00:29:06,100 --> 00:29:09,490
profiler if you need something to

00:29:08,110 --> 00:29:14,470
profile your rails application you

00:29:09,490 --> 00:29:17,680
should check us out and to be totally

00:29:14,470 --> 00:29:21,160
honest with you I don't even know if

00:29:17,680 --> 00:29:24,460
we're doing code reviews right what I do

00:29:21,160 --> 00:29:26,860
know is this we have a lot of

00:29:24,460 --> 00:29:29,410
conversations about them and every

00:29:26,860 --> 00:29:31,870
engineer on our team feels like they can

00:29:29,410 --> 00:29:34,330
talk to the rest of the team and bring

00:29:31,870 --> 00:29:36,460
up issues or points of frustration if

00:29:34,330 --> 00:29:39,100
they have them one of my co-workers

00:29:36,460 --> 00:29:41,650
actually she submitted an RFC to totally

00:29:39,100 --> 00:29:44,500
change our code review process and that

00:29:41,650 --> 00:29:47,740
RFC was reviewed many times with a lot

00:29:44,500 --> 00:29:50,710
of comments but we decided to adopt and

00:29:47,740 --> 00:29:53,950
that's now the process that we use as a

00:29:50,710 --> 00:29:56,830
team so I can feel like I can bring up

00:29:53,950 --> 00:29:58,750
any issues to the rest of my colleagues

00:29:56,830 --> 00:30:00,250
and we can talk about that and talk

00:29:58,750 --> 00:30:05,590
about them and iterate and change them

00:30:00,250 --> 00:30:07,270
so based on all of this research that

00:30:05,590 --> 00:30:09,760
I've done and all the people that I've

00:30:07,270 --> 00:30:11,260
talked to and the survey I wanted to

00:30:09,760 --> 00:30:15,490
share with you a couple of things that

00:30:11,260 --> 00:30:16,720
you can do small and big to change your

00:30:15,490 --> 00:30:18,610
code review process see

00:30:16,720 --> 00:30:21,490
if you're not happy with them because

00:30:18,610 --> 00:30:23,950
clearly as an industry we all have some

00:30:21,490 --> 00:30:26,800
work to do on this so a couple of small

00:30:23,950 --> 00:30:30,610
wins that you could implement when you

00:30:26,800 --> 00:30:33,910
leave here today commit hooks are really

00:30:30,610 --> 00:30:35,920
awesome they basically make sure that

00:30:33,910 --> 00:30:37,540
you can run whatever tasks you need to

00:30:35,920 --> 00:30:40,270
before you push anything to github

00:30:37,540 --> 00:30:42,630
they'll make your life a lot easier I

00:30:40,270 --> 00:30:45,610
recommend trying them out

00:30:42,630 --> 00:30:49,020
github also has an amazing feature

00:30:45,610 --> 00:30:51,010
called templates and we use this at

00:30:49,020 --> 00:30:54,310
Tilda where basically when somebody

00:30:51,010 --> 00:30:56,080
opens up over pull request this template

00:30:54,310 --> 00:30:57,520
shows up and it has like a checklist of

00:30:56,080 --> 00:30:59,200
things you need to do before you can

00:30:57,520 --> 00:31:01,210
submit a pull request things you need to

00:30:59,200 --> 00:31:03,400
do before you can ship and it's really

00:31:01,210 --> 00:31:05,470
great because people can immediately

00:31:03,400 --> 00:31:07,330
look at it and know whether something

00:31:05,470 --> 00:31:11,050
needs to work so or something is ready

00:31:07,330 --> 00:31:13,030
to be reviewed another thing that's

00:31:11,050 --> 00:31:15,580
super super helpful for your team mates

00:31:13,030 --> 00:31:18,070
especially if you have a large team or

00:31:15,580 --> 00:31:19,510
you have people who might be more

00:31:18,070 --> 00:31:23,140
comfortable with certain parts of the

00:31:19,510 --> 00:31:25,120
codebase is giving them context giving

00:31:23,140 --> 00:31:27,550
your teammates context makes it a lot

00:31:25,120 --> 00:31:29,080
easier for them to target their efforts

00:31:27,550 --> 00:31:31,270
and Don gave a great talk today about

00:31:29,080 --> 00:31:33,700
how human beings have like a certain

00:31:31,270 --> 00:31:35,770
capacity to focus and hold things in

00:31:33,700 --> 00:31:38,560
memory this is going to make it a lot

00:31:35,770 --> 00:31:41,230
easier for your team mates to be able to

00:31:38,560 --> 00:31:42,910
focus on what changes you made it's

00:31:41,230 --> 00:31:44,800
really helpful to like add a Jif or a

00:31:42,910 --> 00:31:47,050
screenshot and show them like what is

00:31:44,800 --> 00:31:48,610
the thing that happens before the pull

00:31:47,050 --> 00:31:51,280
request and what can you expect to

00:31:48,610 --> 00:31:53,980
happen after it'll make the process a

00:31:51,280 --> 00:31:59,830
lot easier and we'll probably put people

00:31:53,980 --> 00:32:02,290
in a much better mood Lindner use them

00:31:59,830 --> 00:32:03,730
we don't need to talk about like syntax

00:32:02,290 --> 00:32:05,440
and stuff like their the conversations

00:32:03,730 --> 00:32:07,300
that we don't need to have because we

00:32:05,440 --> 00:32:09,490
have machines to automate those things

00:32:07,300 --> 00:32:12,160
for us so definitely use them and

00:32:09,490 --> 00:32:17,080
implement them tiny win but really

00:32:12,160 --> 00:32:20,040
really impactful and lastly encapsulate

00:32:17,080 --> 00:32:23,620
everything whether that means working on

00:32:20,040 --> 00:32:26,320
writing concise commits or creating

00:32:23,620 --> 00:32:29,530
small pull requests that are short and

00:32:26,320 --> 00:32:30,220
kicking things in a really really

00:32:29,530 --> 00:32:32,590
concise

00:32:30,220 --> 00:32:34,630
compact ray encapsulate things so that

00:32:32,590 --> 00:32:36,429
nobody is reading hundreds of lines of

00:32:34,630 --> 00:32:38,460
code and feeling overwhelmed and just

00:32:36,429 --> 00:32:40,510
giving it a thumbs up and moving on

00:32:38,460 --> 00:32:45,400
because that's going to come back to

00:32:40,510 --> 00:32:46,690
haunt us later some teams have also some

00:32:45,400 --> 00:32:48,970
that it's really helpful to assign

00:32:46,690 --> 00:32:51,100
specific reviewers particularly if you

00:32:48,970 --> 00:32:54,820
find yourself like waiting for someone

00:32:51,100 --> 00:32:56,110
to review a long time it's also really

00:32:54,820 --> 00:32:58,179
great because you can make sure that

00:32:56,110 --> 00:33:00,070
senior developers are reviewing and

00:32:58,179 --> 00:33:01,750
being reviewed and that junior

00:33:00,070 --> 00:33:03,880
developers also get a chance to look at

00:33:01,750 --> 00:33:06,280
code that a senior developer might be

00:33:03,880 --> 00:33:07,690
working on and ask questions and learn

00:33:06,280 --> 00:33:12,940
about things that maybe they might not

00:33:07,690 --> 00:33:15,250
be familiar with yet there are some big

00:33:12,940 --> 00:33:17,080
wins that you can do it might look a

00:33:15,250 --> 00:33:22,570
little daunting but I promise you the

00:33:17,080 --> 00:33:25,150
payoff is super person first pushing for

00:33:22,570 --> 00:33:27,909
a culture that values vulnerability and

00:33:25,150 --> 00:33:31,000
I think one of the best ways to do this

00:33:27,909 --> 00:33:34,480
is by making sure that everyone puts

00:33:31,000 --> 00:33:37,360
themselves out there senior developers

00:33:34,480 --> 00:33:39,159
can make mistakes I'm going to say it

00:33:37,360 --> 00:33:41,740
again senior developers to make mistakes

00:33:39,159 --> 00:33:44,140
and it's important for junior developers

00:33:41,740 --> 00:33:46,720
to see that and to be able to ask

00:33:44,140 --> 00:33:48,789
questions when we're working in teams

00:33:46,720 --> 00:33:51,159
that are vulnerable enough to

00:33:48,789 --> 00:33:52,780
acknowledge that we all become better

00:33:51,159 --> 00:33:57,990
developers and create a better product

00:33:52,780 --> 00:34:01,809
at the end of the day develop empathy

00:33:57,990 --> 00:34:04,720
this is harder to do but you can do tiny

00:34:01,809 --> 00:34:07,120
things to make sure that your teammates

00:34:04,720 --> 00:34:10,869
are becoming more empathetic engineers

00:34:07,120 --> 00:34:12,639
and people one of the ways that I really

00:34:10,869 --> 00:34:15,250
like to do this is by calling out the

00:34:12,639 --> 00:34:17,290
things that I see another developer

00:34:15,250 --> 00:34:20,919
doing really well so if there's a method

00:34:17,290 --> 00:34:24,070
that's named really beautifully or some

00:34:20,919 --> 00:34:25,810
sort of abstraction or something that's

00:34:24,070 --> 00:34:28,119
been meta programs I really like to call

00:34:25,810 --> 00:34:29,700
that out and say that you know you did a

00:34:28,119 --> 00:34:32,470
great job that was awesome

00:34:29,700 --> 00:34:33,790
that's so important because code reviews

00:34:32,470 --> 00:34:36,669
don't need to necessarily be something

00:34:33,790 --> 00:34:39,339
that's negative and you know a symbol of

00:34:36,669 --> 00:34:40,760
criticism we have this collective

00:34:39,339 --> 00:34:43,129
ownership he

00:34:40,760 --> 00:34:45,619
and what we're building so when someone

00:34:43,129 --> 00:34:52,580
does really well that's all our victory

00:34:45,619 --> 00:34:54,889
in that too and finally iterate if you

00:34:52,580 --> 00:34:56,210
remember nothing else from today if this

00:34:54,889 --> 00:35:00,250
is so important outside again

00:34:56,210 --> 00:35:03,650
it's her rate and what I mean by this is

00:35:00,250 --> 00:35:05,090
start the conversation if you feel like

00:35:03,650 --> 00:35:07,609
your code review process isn't where

00:35:05,090 --> 00:35:09,800
you'd like it to be and if you feel like

00:35:07,609 --> 00:35:11,420
there's room for improvement or if

00:35:09,800 --> 00:35:15,590
you're really happy with it share it

00:35:11,420 --> 00:35:17,690
with other people this someone wrote

00:35:15,590 --> 00:35:19,340
into the survey and I think they they

00:35:17,690 --> 00:35:21,619
highlight this way better than I could

00:35:19,340 --> 00:35:24,920
ever could it's a really eloquent quote

00:35:21,619 --> 00:35:28,280
and I'm not nearly as eloquent they said

00:35:24,920 --> 00:35:32,300
I love code reviews in theory in

00:35:28,280 --> 00:35:35,240
practice they are only as good as the

00:35:32,300 --> 00:35:40,730
group that's responsible for conducting

00:35:35,240 --> 00:35:43,400
them in the right manner really it's on

00:35:40,730 --> 00:35:46,880
all of us at the end of the day to make

00:35:43,400 --> 00:35:52,010
sure that our quality gates are of good

00:35:46,880 --> 00:35:54,140
quality so if any of this data was

00:35:52,010 --> 00:35:57,109
interesting to you I promise I'm not a

00:35:54,140 --> 00:35:59,300
data scientist but I really tried you

00:35:57,109 --> 00:36:01,460
can find all of it at this website that

00:35:59,300 --> 00:36:03,470
our code reviews there were a lot of

00:36:01,460 --> 00:36:05,480
people who wrote into the survey and

00:36:03,470 --> 00:36:07,400
they have some really amazing thoughts

00:36:05,480 --> 00:36:09,710
on what makes a good code review and

00:36:07,400 --> 00:36:12,050
what doesn't unfortunately it's way more

00:36:09,710 --> 00:36:15,109
than I could sit into 30 minutes but you

00:36:12,050 --> 00:36:17,450
can find it all there and you can take

00:36:15,109 --> 00:36:19,550
the survey yourself and tell me your

00:36:17,450 --> 00:36:22,760
thoughts on code reviews I would love to

00:36:19,550 --> 00:36:24,170
hear them and that's all I have for you

00:36:22,760 --> 00:36:28,659
thank you so much

00:36:24,170 --> 00:36:28,659
[Applause]

00:36:30,070 --> 00:36:43,310
all right would anyone like to ask

00:36:32,930 --> 00:36:44,420
Goldilocks a question anyone yeah yeah

00:36:43,310 --> 00:36:46,490
thank you for the talk I really

00:36:44,420 --> 00:36:47,720
appreciate the research you put into it

00:36:46,490 --> 00:36:50,060
it's definitely awesome

00:36:47,720 --> 00:36:52,040
so my company doesn't have a code review

00:36:50,060 --> 00:36:54,500
process but we do do pair programming

00:36:52,040 --> 00:36:56,120
like the majority of the time and that

00:36:54,500 --> 00:37:00,230
seems to address some of the earliest

00:36:56,120 --> 00:37:02,450
attempt to address some of the some of

00:37:00,230 --> 00:37:03,590
the quality issues that you wanted to

00:37:02,450 --> 00:37:07,070
bring into code reviews and like

00:37:03,590 --> 00:37:09,290
communication in-person communication so

00:37:07,070 --> 00:37:10,430
does Goldilocks have an opinion on pair

00:37:09,290 --> 00:37:13,790
programming

00:37:10,430 --> 00:37:14,810
she loves it I don't think I can do the

00:37:13,790 --> 00:37:19,580
rest of this question in the third

00:37:14,810 --> 00:37:21,530
person sorry I'm a really big fan of

00:37:19,580 --> 00:37:25,310
pair programming we do pair programming

00:37:21,530 --> 00:37:27,140
at tilde um so we're always working with

00:37:25,310 --> 00:37:30,530
pairs and switching them up but I think

00:37:27,140 --> 00:37:31,790
what's really nice about it well what's

00:37:30,530 --> 00:37:33,260
really nice about having a code review

00:37:31,790 --> 00:37:35,300
process even if you do have pair

00:37:33,260 --> 00:37:36,680
programming is that when someone for

00:37:35,300 --> 00:37:38,390
example if I'm working with my pair on a

00:37:36,680 --> 00:37:40,460
feature and someone else is working on

00:37:38,390 --> 00:37:42,620
another part of this code base it's nice

00:37:40,460 --> 00:37:44,690
for them to be in tune with what changes

00:37:42,620 --> 00:37:47,210
are happening in a different part of the

00:37:44,690 --> 00:37:48,740
code even if you know it's like at the

00:37:47,210 --> 00:37:50,750
end when they're submitting you know a

00:37:48,740 --> 00:37:53,630
feature PR or something like that

00:37:50,750 --> 00:37:55,400
because things get merged into the code

00:37:53,630 --> 00:37:57,470
base all the time and it can just kind

00:37:55,400 --> 00:37:58,910
of go as like a stream of things on a

00:37:57,470 --> 00:38:02,300
black channel and you don't know what's

00:37:58,910 --> 00:38:03,830
happening so I would still really

00:38:02,300 --> 00:38:05,750
encourage some kind of code review

00:38:03,830 --> 00:38:07,190
process it doesn't necessarily need to

00:38:05,750 --> 00:38:08,690
be like an hour-long inspection or

00:38:07,190 --> 00:38:10,310
something but I think it's really

00:38:08,690 --> 00:38:12,320
beneficial to see what's going on in the

00:38:10,310 --> 00:38:15,500
code and sometimes like you might even

00:38:12,320 --> 00:38:17,150
have some context to provide on what

00:38:15,500 --> 00:38:18,470
you're working on and be like maybe we

00:38:17,150 --> 00:38:21,020
should name this method slightly

00:38:18,470 --> 00:38:22,610
differently we did something me and my

00:38:21,020 --> 00:38:24,500
parrot is something over here you might

00:38:22,610 --> 00:38:26,360
want to like check it out and it might

00:38:24,500 --> 00:38:28,520
be beneficial to the two of you along

00:38:26,360 --> 00:38:30,380
what you're doing so I still think that

00:38:28,520 --> 00:38:31,940
code reviews can be super beneficial but

00:38:30,380 --> 00:38:33,080
it might look different if you were

00:38:31,940 --> 00:38:38,210
working in pairs

00:38:33,080 --> 00:38:40,450
great question okay so long channel twos

00:38:38,210 --> 00:38:43,460
one

00:38:40,450 --> 00:38:45,200
so I have a two-part question the first

00:38:43,460 --> 00:38:46,700
one is and it's a direct follow-on to

00:38:45,200 --> 00:38:53,420
that what does Goldilocks think about

00:38:46,700 --> 00:38:56,450
bear programming my god okay your

00:38:53,420 --> 00:38:59,720
opinion or maybe you're just not allowed

00:38:56,450 --> 00:39:02,180
to talk about it so the next one is so

00:38:59,720 --> 00:39:03,470
what is your ideal checklist look like

00:39:02,180 --> 00:39:04,819
or what's your good checklist to go

00:39:03,470 --> 00:39:09,079
through because this would be useful for

00:39:04,819 --> 00:39:14,720
me um so like what do I look for in a

00:39:09,079 --> 00:39:15,650
code review basically right yeah I feel

00:39:14,720 --> 00:39:16,940
like I should probably write this down

00:39:15,650 --> 00:39:19,670
that's a good question

00:39:16,940 --> 00:39:22,460
for me it's probably can I read the code

00:39:19,670 --> 00:39:27,770
and understand what's the problem trying

00:39:22,460 --> 00:39:33,619
to be solved if I looked at it again in

00:39:27,770 --> 00:39:35,210
six months is it clear to me if we left

00:39:33,619 --> 00:39:36,500
someone left the company and what if

00:39:35,210 --> 00:39:37,819
there's a junior programmer looking at

00:39:36,500 --> 00:39:39,589
this would they be able to understand

00:39:37,819 --> 00:39:42,800
our methods name clearly are things

00:39:39,589 --> 00:39:48,460
actually doing what they're doing and

00:39:42,800 --> 00:39:56,329
are there tests that's a big one cool

00:39:48,460 --> 00:39:59,510
okay hi thank you for a great talk

00:39:56,329 --> 00:40:04,280
thank you have you thought about Auto

00:39:59,510 --> 00:40:07,280
Bayliss my wings for Corey you all right

00:40:04,280 --> 00:40:11,300
can you get up have you thought about

00:40:07,280 --> 00:40:16,609
all tonight the smell wins for Corey you

00:40:11,300 --> 00:40:17,300
I haven't I haven't automated all of

00:40:16,609 --> 00:40:20,240
those things

00:40:17,300 --> 00:40:22,069
um I know people who have I haven't

00:40:20,240 --> 00:40:24,290
personally been part of that I have I

00:40:22,069 --> 00:40:27,230
would implemented Robocop at my last

00:40:24,290 --> 00:40:28,910
company but I know other people who have

00:40:27,230 --> 00:40:31,460
like i think the most automation we have

00:40:28,910 --> 00:40:34,849
is like the PR templates and like having

00:40:31,460 --> 00:40:35,180
linters it to enforce style and things

00:40:34,849 --> 00:40:38,150
like that

00:40:35,180 --> 00:40:41,599
oh nice because I know one tour is

00:40:38,150 --> 00:40:43,390
called danger system that can help all

00:40:41,599 --> 00:40:46,349
tonight Chloe you thank you

00:40:43,390 --> 00:40:52,180
[Laughter]

00:40:46,349 --> 00:40:54,280
hi yes so first of all a great talk I'd

00:40:52,180 --> 00:40:57,339
like to share about our company sir I

00:40:54,280 --> 00:41:00,310
think it's better than the average code

00:40:57,339 --> 00:41:03,160
of view but it's not perfect so this

00:41:00,310 --> 00:41:08,020
because the checklist that we're looking

00:41:03,160 --> 00:41:10,450
is if if the even if it's about six

00:41:08,020 --> 00:41:14,619
sometimes if there's no test we'll ask

00:41:10,450 --> 00:41:20,520
which the tasks and yeah like you said

00:41:14,619 --> 00:41:24,910
screenshot and maybe how to how to test

00:41:20,520 --> 00:41:27,849
the feature and all that and I think if

00:41:24,910 --> 00:41:29,890
the the code review process also depends

00:41:27,849 --> 00:41:33,099
on the people and I think in our theme

00:41:29,890 --> 00:41:35,230
we have we have our egos in check so we

00:41:33,099 --> 00:41:39,040
don't really get affected by the

00:41:35,230 --> 00:41:42,069
criticisms and what the problem that we

00:41:39,040 --> 00:41:46,089
are encountering is that for bigger

00:41:42,069 --> 00:41:48,730
features of course many people do review

00:41:46,089 --> 00:41:50,520
but when it comes to the merging part no

00:41:48,730 --> 00:41:55,540
one wants to press the merge button

00:41:50,520 --> 00:41:58,810
together no one wants to be responsible

00:41:55,540 --> 00:42:00,460
for if something breaks so because you

00:41:58,810 --> 00:42:03,609
mentioned about collective ownership

00:42:00,460 --> 00:42:07,089
yeah how do you think we can solve that

00:42:03,609 --> 00:42:10,270
problem so I'll tell you one thing that

00:42:07,089 --> 00:42:12,460
we do at my company that has really

00:42:10,270 --> 00:42:15,970
helped mitigate this which is that again

00:42:12,460 --> 00:42:19,210
we pair so one of the things I love

00:42:15,970 --> 00:42:22,270
about that is that you really displace

00:42:19,210 --> 00:42:24,880
this concept of blame that it's not one

00:42:22,270 --> 00:42:26,680
person who wrote a you know wrote

00:42:24,880 --> 00:42:28,210
something that they didn't write buggy

00:42:26,680 --> 00:42:30,069
code or something or they didn't you

00:42:28,210 --> 00:42:32,140
know break everything or bring down

00:42:30,069 --> 00:42:33,819
production like there are other people

00:42:32,140 --> 00:42:35,950
who were involved in it too and it's

00:42:33,819 --> 00:42:37,599
coding is not something you do in a silo

00:42:35,950 --> 00:42:40,990
and I think trying to create a team

00:42:37,599 --> 00:42:42,849
whether that means like having people

00:42:40,990 --> 00:42:45,160
work on one feature and break it into

00:42:42,849 --> 00:42:46,510
pieces and take it apart and like you

00:42:45,160 --> 00:42:48,849
work on this and I'll work on that or

00:42:46,510 --> 00:42:50,200
pairing on some tougher parts like if

00:42:48,849 --> 00:42:51,730
there's part of it the system that's

00:42:50,200 --> 00:42:54,010
more complicated having someone to work

00:42:51,730 --> 00:42:56,440
with work with you through that is

00:42:54,010 --> 00:42:58,780
helpful but on a bigger level it means

00:42:56,440 --> 00:43:00,730
that it's never just less your fault and

00:42:58,780 --> 00:43:02,110
I think is this something that speaks to

00:43:00,730 --> 00:43:04,450
something larger in the industry where

00:43:02,110 --> 00:43:07,000
this idea of placing blame and fault and

00:43:04,450 --> 00:43:08,560
like you broke everything in brought

00:43:07,000 --> 00:43:11,830
down production look back that's never

00:43:08,560 --> 00:43:13,210
going to help the person or the team and

00:43:11,830 --> 00:43:15,250
I think it ties into this idea of like

00:43:13,210 --> 00:43:16,690
to create a more empathetic team you

00:43:15,250 --> 00:43:18,580
need to like change the language you use

00:43:16,690 --> 00:43:22,540
in code reviews need to change the idea

00:43:18,580 --> 00:43:25,090
that you know it's all your fault and

00:43:22,540 --> 00:43:28,060
it's all just on you whereas as you says

00:43:25,090 --> 00:43:30,750
collective ownership having everybody

00:43:28,060 --> 00:43:32,590
have a stake in it and have a hand in it

00:43:30,750 --> 00:43:34,210
that's a really great question I'd love

00:43:32,590 --> 00:43:35,470
to talk to you more about that own but

00:43:34,210 --> 00:43:39,130
that's a really hard thing to do because

00:43:35,470 --> 00:43:42,280
it depends on your team a lot okay so

00:43:39,130 --> 00:43:45,160
one thing that we do when that happens

00:43:42,280 --> 00:43:47,500
sometimes is we just ping those people

00:43:45,160 --> 00:43:50,800
on slap and socket about it yeah it

00:43:47,500 --> 00:43:53,140
could be but yeah even if you don't feel

00:43:50,800 --> 00:43:56,020
blame people sometimes it's just a

00:43:53,140 --> 00:43:57,970
personal you know mindset that maybe

00:43:56,020 --> 00:44:00,190
I'll break this maybe they'll blame even

00:43:57,970 --> 00:44:03,130
if they will not so I think it's a

00:44:00,190 --> 00:44:05,260
psychological problem as well yeah I

00:44:03,130 --> 00:44:07,720
think changing those things are harder

00:44:05,260 --> 00:44:10,090
to do and developing empathy is not an

00:44:07,720 --> 00:44:12,820
easy thing but you can take tiny steps

00:44:10,090 --> 00:44:14,080
towards it but it takes it's a harder if

00:44:12,820 --> 00:44:15,880
that's why it's like a big one not a

00:44:14,080 --> 00:44:20,560
small win because it takes a longer time

00:44:15,880 --> 00:44:22,030
to do that okay I think we only have

00:44:20,560 --> 00:44:25,570
time for one more question so let's play

00:44:22,030 --> 00:44:27,250
a game of fastest hands up okay all the

00:44:25,570 --> 00:44:28,960
hands down okay all the hands up first

00:44:27,250 --> 00:44:32,770
so I know where to look can I get one

00:44:28,960 --> 00:44:36,400
sighs one two three is anyone else is

00:44:32,770 --> 00:44:38,860
just a three of you okay hands down when

00:44:36,400 --> 00:44:41,410
I say three the hands come up again okay

00:44:38,860 --> 00:44:50,620
one two three

00:44:41,410 --> 00:44:52,810
you cheated so things like taking the

00:44:50,620 --> 00:44:55,510
time to do a thoughtful and empathetic

00:44:52,810 --> 00:44:58,300
code review and also taking the time to

00:44:55,510 --> 00:45:03,400
really contextualize the PR for the

00:44:58,300 --> 00:45:05,440
reviewer um those take time what are

00:45:03,400 --> 00:45:08,080
some techniques you think that TechNet

00:45:05,440 --> 00:45:11,680
teams can use to maintain momentum when

00:45:08,080 --> 00:45:18,220
they're pausing to put so much effort

00:45:11,680 --> 00:45:22,210
into empathy and documentation that's a

00:45:18,220 --> 00:45:27,070
good question that was a hard one sorry

00:45:22,210 --> 00:45:30,610
you know it's a good question so I guess

00:45:27,070 --> 00:45:31,930
your question is like in making time to

00:45:30,610 --> 00:45:37,960
do code reviews how do you still make

00:45:31,930 --> 00:45:39,780
sure that you're productive okay to be

00:45:37,960 --> 00:45:44,470
honest I think a large part of it is

00:45:39,780 --> 00:45:45,850
making code review as a like submitting

00:45:44,470 --> 00:45:47,520
the review and doing the worker

00:45:45,850 --> 00:45:49,690
reviewing needs to be part of

00:45:47,520 --> 00:45:52,780
productivity because if you can do a

00:45:49,690 --> 00:45:55,000
better code review and avoid like eight

00:45:52,780 --> 00:45:57,070
hours of dev time debugging something

00:45:55,000 --> 00:45:59,500
that is a Productivity it's like

00:45:57,070 --> 00:46:01,540
pre-emptive right so part of that is

00:45:59,500 --> 00:46:03,850
like changing maybe upper management or

00:46:01,540 --> 00:46:06,040
the tech bleeds

00:46:03,850 --> 00:46:07,600
concept and kind of like telling them

00:46:06,040 --> 00:46:09,730
and making them a stakeholder and why

00:46:07,600 --> 00:46:11,470
code reviews are important but I think

00:46:09,730 --> 00:46:14,860
another thing that really helps is by

00:46:11,470 --> 00:46:17,080
breaking it down into small small pull

00:46:14,860 --> 00:46:19,780
requests and commits you make it easier

00:46:17,080 --> 00:46:22,750
like the barrier for entry of how to get

00:46:19,780 --> 00:46:24,400
through reviewing is easier because then

00:46:22,750 --> 00:46:27,070
you're not like oh I have this hundred

00:46:24,400 --> 00:46:29,530
line or you know twenty files thing to

00:46:27,070 --> 00:46:30,940
review I'll just save it for like 4:30

00:46:29,530 --> 00:46:32,530
p.m. because I don't want to do it cuz I

00:46:30,940 --> 00:46:34,780
have my own work to do but if you make

00:46:32,530 --> 00:46:37,060
it a smaller thing that's more easy to

00:46:34,780 --> 00:46:38,980
digest it's something that you know if

00:46:37,060 --> 00:46:41,230
you ping someone they can find some time

00:46:38,980 --> 00:46:44,710
the next hour hopefully to do it like

00:46:41,230 --> 00:46:47,290
making it more bite-sized I think is

00:46:44,710 --> 00:46:48,400
another good way to make that a bit more

00:46:47,290 --> 00:46:51,880
approachable and not something that

00:46:48,400 --> 00:46:53,140
slows you down and the team but I'm sure

00:46:51,880 --> 00:46:54,610
there are more ways but I have to think

00:46:53,140 --> 00:46:59,620
more on how to answer the question so

00:46:54,610 --> 00:47:03,120
it's very good thank you thank you all

00:46:59,620 --> 00:47:03,120
right let's give it up a Reiji

00:47:03,289 --> 00:47:06,680

YouTube URL: https://www.youtube.com/watch?v=lge345hJKJk


