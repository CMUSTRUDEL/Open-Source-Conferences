Title: RubyConf 2019 - lo-fi hip hop ruby - beats to relax study to by Zachary Schroeder
Publication date: 2019-12-03
Playlist: RubyConf 2019
Description: 
	RubyConf 2019 - lo-fi hip hop ruby - beats to relax/study to by Zachary Schroeder

Lo-fi hip hop, or chillhop, is both a successful meme (thanks to some very specifically worded youtube playlists) and a relaxing music genre. It is characterized by loops of quiet, calm music (often jazz), a hip-hop inspired beat, some airy effects, and perhaps some vocal samples. Now, would it amaze you to learn that our best friend Ruby can help us make our own tracks like these? In fact, by using a few gems for audio manipulation, beat making, and UI construction, weâ€™ll construct our own chillhop studio! Thanks Ruby!

#confreaks #rubyconf2019
Captions: 
	00:00:04,190 --> 00:00:10,269
[Music]

00:00:12,049 --> 00:00:18,150
all right the timer has started hello

00:00:15,990 --> 00:00:21,750
everyone my name is Zack I'm from

00:00:18,150 --> 00:00:24,300
Pittsburgh PA I've been coming to Ruby

00:00:21,750 --> 00:00:27,539
comp every year since 2014 so it's been

00:00:24,300 --> 00:00:29,730
a while it's still my favorite thing one

00:00:27,539 --> 00:00:32,129
of my favorite things to do throughout

00:00:29,730 --> 00:00:33,719
the year so thank you all for coming to

00:00:32,129 --> 00:00:36,600
listen to me talk about this little

00:00:33,719 --> 00:00:37,170
project that I made I really appreciate

00:00:36,600 --> 00:00:40,109
that

00:00:37,170 --> 00:00:44,819
we have a pretty full room so let's get

00:00:40,109 --> 00:00:51,300
started oh my voice is it nervous in

00:00:44,819 --> 00:00:54,059
here is it just me okay so you might

00:00:51,300 --> 00:00:57,479
have been listening before the music

00:00:54,059 --> 00:01:01,229
came down the music was kind of like a

00:00:57,479 --> 00:01:04,860
chill sort of instrumental with a beat

00:01:01,229 --> 00:01:08,070
under it and that's what some may call

00:01:04,860 --> 00:01:10,320
lo-fi hip hop beats and that's kind of

00:01:08,070 --> 00:01:12,750
what my talk is about everybody's

00:01:10,320 --> 00:01:14,969
familiar with the YouTube playlist I

00:01:12,750 --> 00:01:17,340
would imagine at this point right Yes No

00:01:14,969 --> 00:01:21,119
okay we're relaxing and we're studying

00:01:17,340 --> 00:01:24,570
to them so my whole premise was can I

00:01:21,119 --> 00:01:26,759
take my favorite language Ruby and make

00:01:24,570 --> 00:01:30,869
a tool to help me create little tracks

00:01:26,759 --> 00:01:32,969
like that so I'm gonna do a tiny little

00:01:30,869 --> 00:01:36,929
bit of typing which means that I'm

00:01:32,969 --> 00:01:42,920
definitely gonna mess it up so we're

00:01:36,929 --> 00:01:42,920
going to go ahead and pull the repo Wow

00:01:43,789 --> 00:01:50,100
can we

00:01:46,710 --> 00:01:50,100
[Applause]

00:01:55,130 --> 00:02:01,180
thank you and as a reminder that's not

00:01:57,770 --> 00:02:01,180
for me that's for you guys that's

00:02:01,300 --> 00:02:05,090
alright so we're gonna go ahead and

00:02:03,110 --> 00:02:07,010
clone that repo and then we're gonna

00:02:05,090 --> 00:02:10,820
jump into it real quick and do a thing

00:02:07,010 --> 00:02:12,710
as you can see there's a zip file I

00:02:10,820 --> 00:02:15,440
sipped up all of these sound samples

00:02:12,710 --> 00:02:17,150
because it was kind of messing with get

00:02:15,440 --> 00:02:19,130
I think or something or I got out of

00:02:17,150 --> 00:02:21,470
wack anyway we're just gonna go ahead

00:02:19,130 --> 00:02:23,480
and unzip that okay

00:02:21,470 --> 00:02:27,050
and then we're gonna go back so now we

00:02:23,480 --> 00:02:30,050
have our project directory we have some

00:02:27,050 --> 00:02:32,540
samples in there so rather than going

00:02:30,050 --> 00:02:34,250
with the slides right away which I have

00:02:32,540 --> 00:02:36,590
about a million slides that I hope we

00:02:34,250 --> 00:02:39,950
don't get to I'd like to just go ahead

00:02:36,590 --> 00:02:42,320
and show you what it does and and start

00:02:39,950 --> 00:02:48,910
off that way so we're gonna say Ruby

00:02:42,320 --> 00:02:51,590
Ruby lo-fi and the classic app dot RB so

00:02:48,910 --> 00:02:54,970
the window is pretty small but I hope

00:02:51,590 --> 00:02:57,770
that you can see the text is rather tiny

00:02:54,970 --> 00:02:59,959
it's kind of weird making a little app

00:02:57,770 --> 00:03:02,780
that then you expect people to like look

00:02:59,959 --> 00:03:05,209
at a big screen to interact with but

00:03:02,780 --> 00:03:10,160
anyway we're gonna hit new this is a

00:03:05,209 --> 00:03:11,810
file browser it is a UI element that

00:03:10,160 --> 00:03:13,550
we're all familiar with but actually I

00:03:11,810 --> 00:03:15,650
had to make it myself because the

00:03:13,550 --> 00:03:17,930
graphic library that I'm using Ruby 2d

00:03:15,650 --> 00:03:20,000
doesn't have any more complex objects

00:03:17,930 --> 00:03:21,770
like file browsers buttons or you know

00:03:20,000 --> 00:03:23,810
so whenever you see me interacting with

00:03:21,770 --> 00:03:25,250
like a checkbox or a slider that's

00:03:23,810 --> 00:03:27,320
something I had to make for this project

00:03:25,250 --> 00:03:29,810
which is something I'll probably get to

00:03:27,320 --> 00:03:34,520
later so let's jump into tracks and this

00:03:29,810 --> 00:03:36,620
interesting track here one problem this

00:03:34,520 --> 00:03:38,300
is a single-threaded aphid it doesn't do

00:03:36,620 --> 00:03:40,130
anything concurrently so whenever you're

00:03:38,300 --> 00:03:42,820
loading something you get the nice beach

00:03:40,130 --> 00:03:45,770
ball that would be a good future

00:03:42,820 --> 00:03:48,770
improvement to load things

00:03:45,770 --> 00:03:51,100
asynchronously so now we have this kind

00:03:48,770 --> 00:03:53,209
of confusing jumble and mess of things

00:03:51,100 --> 00:03:54,830
once again these are all like UI

00:03:53,209 --> 00:03:57,200
elements that I had to make for this

00:03:54,830 --> 00:04:02,180
project let's start at the top with the

00:03:57,200 --> 00:04:05,150
sample editor over here as you might be

00:04:02,180 --> 00:04:09,050
familiar that is a

00:04:05,150 --> 00:04:12,800
they track an audiophile represented in

00:04:09,050 --> 00:04:15,560
wave form something like that you're

00:04:12,800 --> 00:04:17,510
probably familiar the next heading down

00:04:15,560 --> 00:04:20,690
is sample effects as you might imagine

00:04:17,510 --> 00:04:23,060
those apply effects to a sample the

00:04:20,690 --> 00:04:25,580
third thing down says make a beat and

00:04:23,060 --> 00:04:31,750
you see tons and tons of circles

00:04:25,580 --> 00:04:36,410
well the rows of circles represent 16

00:04:31,750 --> 00:04:39,800
segments of one measure so as you can

00:04:36,410 --> 00:04:42,470
imagine every fourth circle represents a

00:04:39,800 --> 00:04:45,320
beat one two three four and finally

00:04:42,470 --> 00:04:47,180
track settings and this is probably the

00:04:45,320 --> 00:04:50,030
most confusing part of it but we'll get

00:04:47,180 --> 00:04:51,680
to that so if you've used audacity or

00:04:50,030 --> 00:04:53,270
another music program before you're

00:04:51,680 --> 00:04:56,419
probably familiar with the selecting

00:04:53,270 --> 00:04:58,570
part of a of a larger track and we're

00:04:56,419 --> 00:05:00,530
going to go ahead and do that now

00:04:58,570 --> 00:05:06,440
actually let's wind it back a little bit

00:05:00,530 --> 00:05:09,590
farther so I just dragged a little

00:05:06,440 --> 00:05:11,870
selection over a part of a larger track

00:05:09,590 --> 00:05:14,150
and if you look at the bottom you see a

00:05:11,870 --> 00:05:15,979
build button there's lots of compromises

00:05:14,150 --> 00:05:18,200
I had to make in this first version this

00:05:15,979 --> 00:05:19,880
app we already mentioned that it's

00:05:18,200 --> 00:05:22,039
single threaded so everything kind of

00:05:19,880 --> 00:05:23,960
blocks everything else another thing is

00:05:22,039 --> 00:05:27,919
that operations take quite a while

00:05:23,960 --> 00:05:30,970
because of the large arrays of numbers

00:05:27,919 --> 00:05:33,650
that we're using to represent audio so

00:05:30,970 --> 00:05:35,630
when I had it working where any change

00:05:33,650 --> 00:05:38,210
that you made immediately built a new

00:05:35,630 --> 00:05:40,099
version of your track it was very slow

00:05:38,210 --> 00:05:43,039
to the point of unusable 'ti so

00:05:40,099 --> 00:05:46,130
compromise two there is a build button

00:05:43,039 --> 00:05:47,510
which we're just gonna go ahead and hit

00:05:46,130 --> 00:05:49,280
there and we're gonna see what it is

00:05:47,510 --> 00:05:54,600
that we actually selected

00:05:49,280 --> 00:05:54,600
[Music]

00:05:55,660 --> 00:06:00,990
so that's a little loop you can see now

00:05:59,050 --> 00:06:04,960
let's get to the complicated part

00:06:00,990 --> 00:06:08,890
measures in sample so if I have selected

00:06:04,960 --> 00:06:11,080
a sample right here I can now say how

00:06:08,890 --> 00:06:13,510
many measures are in that sample right

00:06:11,080 --> 00:06:16,480
now it's set to one I can set it up to

00:06:13,510 --> 00:06:18,490
four you'll notice that the BPM changes

00:06:16,480 --> 00:06:23,370
when I move the slider what does that

00:06:18,490 --> 00:06:25,630
mean well the BPM or beats per minute is

00:06:23,370 --> 00:06:28,120
fixed to the length of sample that

00:06:25,630 --> 00:06:29,710
you've selected so the more beats that

00:06:28,120 --> 00:06:32,170
you have to fit into that sample length

00:06:29,710 --> 00:06:35,650
obviously the BPM is going to change

00:06:32,170 --> 00:06:38,650
there so 45 is kind of slow let's set it

00:06:35,650 --> 00:06:42,220
to 2 so now we have 91 beats per minute

00:06:38,650 --> 00:06:45,250
and there are 2 measures in a sample pop

00:06:42,220 --> 00:06:48,310
quiz time if there are 2 measures in a

00:06:45,250 --> 00:06:51,810
sample and there are 4 measures in a

00:06:48,310 --> 00:06:57,310
loop I just forgot what I was gonna say

00:06:51,810 --> 00:07:00,520
I wanted to be clever I'll come back to

00:06:57,310 --> 00:07:02,170
it measures in loop means how many

00:07:00,520 --> 00:07:03,580
measures are in a loop and loops and

00:07:02,170 --> 00:07:05,110
track means how many loops are in a

00:07:03,580 --> 00:07:07,210
track it's pretty straightforward but

00:07:05,110 --> 00:07:09,430
messing with these sliders and standing

00:07:07,210 --> 00:07:12,760
up here trying to explain it is kind of

00:07:09,430 --> 00:07:15,580
messing with me so instead let's get to

00:07:12,760 --> 00:07:17,560
the beat part I just clicked down on

00:07:15,580 --> 00:07:20,500
this none and we have all these samples

00:07:17,560 --> 00:07:21,760
here you might recognize some of these

00:07:20,500 --> 00:07:24,670
names 808

00:07:21,760 --> 00:07:28,720
I know 9 let's go ahead and add an 808

00:07:24,670 --> 00:07:34,410
kick they're just kind of throw down a

00:07:28,720 --> 00:07:39,280
couple kicks here let's pick another one

00:07:34,410 --> 00:07:43,480
h HC which is very creatively named it

00:07:39,280 --> 00:07:46,660
stands for hi-hat closed so we'll go

00:07:43,480 --> 00:07:49,410
ahead and select some circles and then

00:07:46,660 --> 00:07:51,820
let's add one more thing 808 snare

00:07:49,410 --> 00:07:53,590
alright so we remember what it sounded

00:07:51,820 --> 00:07:56,040
like the first time let's go ahead and

00:07:53,590 --> 00:07:56,040
build this

00:07:59,360 --> 00:08:11,360
[Music]

00:08:06,860 --> 00:08:13,640
is taking all of these silent files

00:08:11,360 --> 00:08:15,170
these and turning them into their arrays

00:08:13,640 --> 00:08:17,990
of numbers which is how we represent

00:08:15,170 --> 00:08:20,120
audio in computers and then layering

00:08:17,990 --> 00:08:22,460
them on top of each other there's some

00:08:20,120 --> 00:08:24,050
interesting stuff involved that is

00:08:22,460 --> 00:08:25,820
handled in the beats gem and we'll talk

00:08:24,050 --> 00:08:28,700
about that in a little bit but other

00:08:25,820 --> 00:08:30,410
than that I mean we've kind of covered

00:08:28,700 --> 00:08:32,570
the basics of creating a little beat

00:08:30,410 --> 00:08:35,410
loop there's one other checkbox that we

00:08:32,570 --> 00:08:38,750
can check it's called swing when we

00:08:35,410 --> 00:08:43,300
swing the beat that means delaying the

00:08:38,750 --> 00:08:43,300
eighth and sixteenth in every measure

00:08:48,520 --> 00:08:54,590
so we'll turn that off for now we'll

00:08:51,650 --> 00:09:01,190
rebuild it we'll hit save

00:08:54,590 --> 00:09:05,630
we'll save that as a z1 export and let's

00:09:01,190 --> 00:09:07,160
say we want to get weird with it and put

00:09:05,630 --> 00:09:08,480
some of the FEC's on it and slow the

00:09:07,160 --> 00:09:10,660
track down let's see what that sounds

00:09:08,480 --> 00:09:10,660
like

00:09:11,850 --> 00:09:26,370
[Music]

00:09:21,270 --> 00:09:28,890
so that's kind of the whole tool and it

00:09:26,370 --> 00:09:32,279
took me about two to three months to

00:09:28,890 --> 00:09:34,980
build it it's still very immature as far

00:09:32,279 --> 00:09:36,899
as you know good software goes but I

00:09:34,980 --> 00:09:42,899
feel like it kind of accomplished what I

00:09:36,899 --> 00:09:44,940
was there's one other feature that I

00:09:42,899 --> 00:09:53,910
could talk about let's go ahead and save

00:09:44,940 --> 00:09:56,250
this slowdown bit z2 I made another tool

00:09:53,910 --> 00:10:00,899
called stitch and that just allows one

00:09:56,250 --> 00:10:04,110
to add successive exported tracks and

00:10:00,899 --> 00:10:15,240
stitch them together you'll see a stitch

00:10:04,110 --> 00:10:16,770
directory pop up on my desktop my

00:10:15,240 --> 00:10:21,860
thinking there was provide a way to

00:10:16,770 --> 00:10:24,029
stitch multiple smaller beats together I

00:10:21,860 --> 00:10:25,529
was hoping that after I talked for a

00:10:24,029 --> 00:10:32,100
while I was like calm down a little bit

00:10:25,529 --> 00:10:34,950
but it's really not happening yeah I

00:10:32,100 --> 00:10:37,260
need though like a floatation tank or

00:10:34,950 --> 00:10:40,200
something so that's kind of the the

00:10:37,260 --> 00:10:42,089
application and now it's time to get

00:10:40,200 --> 00:10:44,700
into some other things that I'd like to

00:10:42,089 --> 00:10:48,120
talk about as they pertain to this app

00:10:44,700 --> 00:10:53,839
and to other things in general and now I

00:10:48,120 --> 00:10:53,839
have to turn on display mirroring

00:11:02,890 --> 00:11:05,490
well

00:11:10,870 --> 00:11:16,780
am i doing something weird like Oh

00:11:13,620 --> 00:11:20,350
arrangement there we go all right

00:11:16,780 --> 00:11:21,910
I must go ahead and play that okay so I

00:11:20,350 --> 00:11:23,980
just bumbled through a little talk about

00:11:21,910 --> 00:11:28,810
that app that I made called the Ruby low

00:11:23,980 --> 00:11:30,610
fly hi my name is Zack as I have said I

00:11:28,810 --> 00:11:34,690
made Ruby low five

00:11:30,610 --> 00:11:36,790
it's a project I have a very specific

00:11:34,690 --> 00:11:37,830
definition of project and we'll get to

00:11:36,790 --> 00:11:40,150
that in a second

00:11:37,830 --> 00:11:42,520
so this slide deck is gonna be about

00:11:40,150 --> 00:11:48,940
that but it's also going to be about you

00:11:42,520 --> 00:11:52,990
and your project I have a question you

00:11:48,940 --> 00:11:55,480
have a project using my very specific

00:11:52,990 --> 00:11:58,870
definition do you have something that's

00:11:55,480 --> 00:12:04,420
not work that's for fun for the joy of

00:11:58,870 --> 00:12:05,710
it as Maps would say to use Ruby it's

00:12:04,420 --> 00:12:08,710
like a fun little choose your own

00:12:05,710 --> 00:12:11,110
adventure game there's no requirements

00:12:08,710 --> 00:12:13,030
there's nothing that you have to do it

00:12:11,110 --> 00:12:17,830
can be like a fun little thing for you

00:12:13,030 --> 00:12:23,200
experience any style you want you can

00:12:17,830 --> 00:12:26,920
write test or not you can be your own

00:12:23,200 --> 00:12:31,780
boss but importantly just relax and have

00:12:26,920 --> 00:12:34,870
fun with you when starting a project we

00:12:31,780 --> 00:12:39,100
often wonder how do I start where do I

00:12:34,870 --> 00:12:41,710
get inspiration from well there's two

00:12:39,100 --> 00:12:45,880
scenarios either you have an idea or you

00:12:41,710 --> 00:12:51,520
don't let's say you have an idea is it a

00:12:45,880 --> 00:12:56,650
good idea what is good let's rear

00:12:51,520 --> 00:12:59,560
efference that slide another definition

00:12:56,650 --> 00:13:02,500
of good might be thinking small it's my

00:12:59,560 --> 00:13:04,330
experience I'm a serial starter of

00:13:02,500 --> 00:13:07,330
projects and it almost never finisher

00:13:04,330 --> 00:13:11,080
projects the smaller the project the

00:13:07,330 --> 00:13:15,430
easier will be to finish it I showed you

00:13:11,080 --> 00:13:17,579
Ruby loaf I it's not finished but it

00:13:15,430 --> 00:13:21,480
does what I set out to have

00:13:17,579 --> 00:13:23,279
so I think that was the right size maybe

00:13:21,480 --> 00:13:25,199
you should think this should take me a

00:13:23,279 --> 00:13:27,839
couple weeks or months to finish rather

00:13:25,199 --> 00:13:31,740
than you know we should take a couple

00:13:27,839 --> 00:13:35,670
years and say you your idea is to take

00:13:31,740 --> 00:13:39,839
on Facebook head-on the odds of

00:13:35,670 --> 00:13:43,259
finishing that are approaching zero but

00:13:39,839 --> 00:13:44,819
it's your choice I mean it's for fun so

00:13:43,259 --> 00:13:50,129
that's the case of if you have an idea

00:13:44,819 --> 00:13:54,110
let's say you don't have you could ask

00:13:50,129 --> 00:13:57,750
people do you have a problem I can solve

00:13:54,110 --> 00:14:00,269
or an idea that I can bring to life this

00:13:57,750 --> 00:14:04,350
is surprisingly successful people have a

00:14:00,269 --> 00:14:06,750
lot of ideas but what if it yields

00:14:04,350 --> 00:14:08,790
nothing then what I came up with a fun

00:14:06,750 --> 00:14:11,370
little game it's not my invention but I

00:14:08,790 --> 00:14:13,620
applied it to this particular purpose

00:14:11,370 --> 00:14:17,040
turning random words into gems and kind

00:14:13,620 --> 00:14:22,079
of you know giving up control for the

00:14:17,040 --> 00:14:27,149
universe let's see if I can get my

00:14:22,079 --> 00:14:32,040
chrome over here this is a random word

00:14:27,149 --> 00:14:34,189
generator and we're just gonna go ahead

00:14:32,040 --> 00:14:34,189
and

00:14:36,250 --> 00:14:42,240
[Applause]

00:14:42,710 --> 00:14:48,909
[Laughter]

00:14:44,250 --> 00:14:48,909
[Applause]

00:14:52,470 --> 00:14:58,410
I don't know what's going on I'm kind of

00:14:55,470 --> 00:15:00,990
scared to click the button again so

00:14:58,410 --> 00:15:03,089
let's say we could copy this fool let's

00:15:00,990 --> 00:15:10,470
go to rubygems and just go ahead and

00:15:03,089 --> 00:15:15,269
dump that in there all right

00:15:10,470 --> 00:15:19,620
it came up with some results they have

00:15:15,269 --> 00:15:24,899
this look inspired Vodafone location SAS

00:15:19,620 --> 00:15:27,149
color helpers that maybe has some

00:15:24,899 --> 00:15:28,589
potential what I'm saying is that you

00:15:27,149 --> 00:15:32,399
don't need to have an idea

00:15:28,589 --> 00:15:35,699
there are so many gems out there made by

00:15:32,399 --> 00:15:38,190
people who had an idea or you know had a

00:15:35,699 --> 00:15:40,050
utility they wanted to make and that can

00:15:38,190 --> 00:15:42,750
be your inspiration for something that

00:15:40,050 --> 00:15:46,339
you can do that's all I wanted to say

00:15:42,750 --> 00:15:49,230
with that before I got embarrassed by

00:15:46,339 --> 00:15:51,899
alright so once you have an idea it's

00:15:49,230 --> 00:15:54,360
time to get started I would like to talk

00:15:51,899 --> 00:15:57,120
about Ruby lo-fi real quick I didn't

00:15:54,360 --> 00:16:00,510
make it what I did was coordinate

00:15:57,120 --> 00:16:03,899
basically three gems Ruby TV for

00:16:00,510 --> 00:16:07,139
graphics Ruby audio for handling WAV

00:16:03,899 --> 00:16:11,220
files and Ruby beats for sequencing so

00:16:07,139 --> 00:16:14,399
really my job was quite easy and I'm

00:16:11,220 --> 00:16:16,050
more or less accomplished it but let's

00:16:14,399 --> 00:16:22,980
let's look at the Internet for a second

00:16:16,050 --> 00:16:24,689
here this is Ruby 2d it's a pretty

00:16:22,980 --> 00:16:26,819
simple graphics library that works

00:16:24,689 --> 00:16:28,800
extremely well for creating 2d

00:16:26,819 --> 00:16:30,959
applications gives you all the things

00:16:28,800 --> 00:16:34,130
that you need rendering shapes rendering

00:16:30,959 --> 00:16:36,710
text writing a loop so that you can

00:16:34,130 --> 00:16:38,750
handle mouse and keyboard interaction if

00:16:36,710 --> 00:16:41,690
you have any ideas for creating a

00:16:38,750 --> 00:16:44,810
desktop application in Ruby I would

00:16:41,690 --> 00:16:49,880
highly recommend Ruby QT shout-out to

00:16:44,810 --> 00:16:52,340
warhammer kid I don't know him but he

00:16:49,880 --> 00:16:55,250
forked Ruby audio and turned it into a

00:16:52,340 --> 00:16:57,620
gem and it's somewhat old actually eight

00:16:55,250 --> 00:17:02,450
years ago nine years ago and the commits

00:16:57,620 --> 00:17:04,790
14 years ago it worked right out of the

00:17:02,450 --> 00:17:10,130
box for loading WAV files and

00:17:04,790 --> 00:17:12,140
manipulating them look it beats drum

00:17:10,130 --> 00:17:14,959
machine this one is really cool so this

00:17:12,140 --> 00:17:18,020
guy named Joel straight makes tons of

00:17:14,959 --> 00:17:21,410
stuff highly creative person beats

00:17:18,020 --> 00:17:24,860
allows you to define a yamo file and a

00:17:21,410 --> 00:17:30,710
set of WAV file samples and sequence

00:17:24,860 --> 00:17:32,420
them into well Pete very cool I can talk

00:17:30,710 --> 00:17:35,750
about a little bit about how I use this

00:17:32,420 --> 00:17:38,960
later I highly recommend checking this

00:17:35,750 --> 00:17:41,120
out and some of his other apps this I'd

00:17:38,960 --> 00:17:45,470
get somewhat envious of people who have

00:17:41,120 --> 00:17:50,540
this amount of creative output alright

00:17:45,470 --> 00:17:52,480
let's get back to the slides what I mean

00:17:50,540 --> 00:17:56,930
to say is on the shoulders of giants

00:17:52,480 --> 00:17:58,940
right ok so when you're starting your

00:17:56,930 --> 00:18:01,970
project you need to do some research as

00:17:58,940 --> 00:18:05,450
I did look up jams but not just gems

00:18:01,970 --> 00:18:08,150
there's uh concepts things involved with

00:18:05,450 --> 00:18:10,940
your idea for example in terms of Ruby

00:18:08,150 --> 00:18:14,450
lo-fi I knew I needed a normalization

00:18:10,940 --> 00:18:18,320
algorithm now what does that mean it's a

00:18:14,450 --> 00:18:21,380
process by which you make a sound file

00:18:18,320 --> 00:18:23,690
as loud as possible without clipping it

00:18:21,380 --> 00:18:27,560
in clipping means going outside of the

00:18:23,690 --> 00:18:29,780
bounds of non distorted audio I didn't

00:18:27,560 --> 00:18:31,670
know what to do i sat down and thought

00:18:29,780 --> 00:18:33,470
about it for a little bit how do I move

00:18:31,670 --> 00:18:36,500
you late wave forms to stretch them

00:18:33,470 --> 00:18:42,530
without stretching them to flood I came

00:18:36,500 --> 00:18:50,140
up with a great idea and in fact I can

00:18:42,530 --> 00:18:52,900
show you right now very helpful person

00:18:50,140 --> 00:18:55,700
jumped in like a ninja and dropped this

00:18:52,900 --> 00:18:58,520
normalized algorithm I messed with that

00:18:55,700 --> 00:19:02,260
a little bit it seemed to work what I'm

00:18:58,520 --> 00:19:05,990
trying to say is outside of Ruby even

00:19:02,260 --> 00:19:08,360
don't be afraid to just dig deep and

00:19:05,990 --> 00:19:12,470
look up subject matter related to your

00:19:08,360 --> 00:19:14,960
idea that being said let's see we have

00:19:12,470 --> 00:19:17,060
about 20 minutes left so I better make

00:19:14,960 --> 00:19:18,800
this fast I'd like to talk about two

00:19:17,060 --> 00:19:21,580
things that I dealt with a lot and Ruby

00:19:18,800 --> 00:19:23,720
loaf I just to give you an example of

00:19:21,580 --> 00:19:25,400
some of the stuff that went into my

00:19:23,720 --> 00:19:28,010
thinking let's talk about digital audio

00:19:25,400 --> 00:19:32,320
for a second it's not very mysterious

00:19:28,010 --> 00:19:35,120
it's not a magic box it's just numbers

00:19:32,320 --> 00:19:35,720
here is an example of what I'm talking

00:19:35,120 --> 00:19:39,230
about

00:19:35,720 --> 00:19:44,680
these are 13 float numbers they range

00:19:39,230 --> 00:19:47,710
from negative one to positive one and i

00:19:44,680 --> 00:19:51,650
roughly drew a curve that matches up to

00:19:47,710 --> 00:19:52,970
these values so as you can see at you

00:19:51,650 --> 00:19:57,260
know zero on the left

00:19:52,970 --> 00:20:00,950
imagine a midpoint line at 0.44 that's

00:19:57,260 --> 00:20:04,760
kind of our upper peak negative 0.5

00:20:00,950 --> 00:20:07,040
that's our lower peak that's really all

00:20:04,760 --> 00:20:10,790
audio is and your computer is just giant

00:20:07,040 --> 00:20:12,890
arrays of numbers three concepts real

00:20:10,790 --> 00:20:17,840
quick frequency amplitude and sample

00:20:12,890 --> 00:20:19,850
rate what is frequency one cycle per

00:20:17,840 --> 00:20:22,130
second what's a cycle let's jump back to

00:20:19,850 --> 00:20:26,600
that slide this is one cycle

00:20:22,130 --> 00:20:28,970
it's a peak and a trough so one Hertz is

00:20:26,600 --> 00:20:33,230
one of these per second that's too low

00:20:28,970 --> 00:20:35,860
for people to hear a equals 440 who

00:20:33,230 --> 00:20:35,860
knows what that is

00:20:37,660 --> 00:20:47,810
right a above middle C and it vibrates

00:20:41,360 --> 00:20:49,940
at 440 Hertz so that is audible to the

00:20:47,810 --> 00:20:53,770
human ear great so now we know what

00:20:49,940 --> 00:20:57,710
frequency is what's amplitude its power

00:20:53,770 --> 00:21:00,530
the most powerful peak we have is 0.44

00:20:57,710 --> 00:21:04,570
you see up at the top there and the

00:21:00,530 --> 00:21:06,980
bottom of our amplitude is negative 0.5

00:21:04,570 --> 00:21:09,800
as I mentioned earlier too much power

00:21:06,980 --> 00:21:12,290
equals clipping we can only handle so

00:21:09,800 --> 00:21:13,760
high of a number in whatever frame of

00:21:12,290 --> 00:21:16,280
reference were talking about negative 1

00:21:13,760 --> 00:21:18,740
to 1 so if you have like one point to

00:21:16,280 --> 00:21:21,740
your gonna clip you don't want to do

00:21:18,740 --> 00:21:24,320
that so frequency versus amplitude is

00:21:21,740 --> 00:21:28,220
count versus strength ie the number of

00:21:24,320 --> 00:21:30,680
Hertz versus the amplitude of those

00:21:28,220 --> 00:21:32,480
signals finally sample rate is an

00:21:30,680 --> 00:21:36,260
important concept for computer audio

00:21:32,480 --> 00:21:37,870
that means samples per second pop quiz

00:21:36,260 --> 00:21:40,850
this one I actually know the answer to

00:21:37,870 --> 00:21:43,030
what is standard CD quality sample he

00:21:40,850 --> 00:21:43,030
knows

00:21:44,800 --> 00:21:50,900
you got it

00:21:46,510 --> 00:21:52,940
it is 44,100 samples per second so let's

00:21:50,900 --> 00:21:58,180
look back at this thing that I drew this

00:21:52,940 --> 00:22:01,760
is 13 samples I only need another 44,000

00:21:58,180 --> 00:22:04,100
87 two to make one second of computer

00:22:01,760 --> 00:22:06,860
audio at CD quality so you can imagine

00:22:04,100 --> 00:22:09,590
when manipulating arrays like in Ruby

00:22:06,860 --> 00:22:14,360
loaf I if I have a few seconds of audio

00:22:09,590 --> 00:22:16,940
and it's at 44 100 I mean dealing with

00:22:14,360 --> 00:22:20,030
hundreds of thousands of numbers to

00:22:16,940 --> 00:22:21,590
process and that's what makes it slow of

00:22:20,030 --> 00:22:25,160
course people have solved this problem

00:22:21,590 --> 00:22:26,780
already but you know for a first chop

00:22:25,160 --> 00:22:29,300
I'm basically just dealing with the

00:22:26,780 --> 00:22:32,930
limitation of processing thousands or

00:22:29,300 --> 00:22:34,670
millions of array location so sample

00:22:32,930 --> 00:22:36,890
rate doesn't equal frequency sample rate

00:22:34,670 --> 00:22:42,920
doesn't equal amplitude you can have a

00:22:36,890 --> 00:22:47,530
44 40 Hertz tone 44,100 samples per

00:22:42,920 --> 00:22:47,530
second all very clear right

00:22:47,649 --> 00:22:57,289
this is a sentence here's an example of

00:22:53,059 --> 00:22:59,149
what I'm talking about I think this is

00:22:57,289 --> 00:23:05,830
big enough to see can anyone guess what

00:22:59,149 --> 00:23:09,950
this code block does it fades a sound

00:23:05,830 --> 00:23:12,019
from zero to whatever it's Max's as you

00:23:09,950 --> 00:23:15,019
can see we're iterating through every

00:23:12,019 --> 00:23:19,669
sample inside of an array of samples for

00:23:15,019 --> 00:23:23,440
every sample we're multiplying it by the

00:23:19,669 --> 00:23:26,210
index divided by the number of samples

00:23:23,440 --> 00:23:30,379
very very simple but this is basically

00:23:26,210 --> 00:23:35,029
how computer audio works it gets more

00:23:30,379 --> 00:23:36,349
complicated but loops of arrays so now

00:23:35,029 --> 00:23:38,539
you're an audio expert let's talk about

00:23:36,349 --> 00:23:40,539
graphics real quick what do you need to

00:23:38,539 --> 00:23:43,070
make graphics you need three things

00:23:40,539 --> 00:23:45,590
probably more than that but three at

00:23:43,070 --> 00:23:48,200
least you need to be able to render

00:23:45,590 --> 00:23:52,369
basic elements like limes rectangles and

00:23:48,200 --> 00:23:55,309
text you need a coordinate system x and

00:23:52,369 --> 00:23:59,299
y for 2d XY and Z for 3d does that make

00:23:55,309 --> 00:24:00,889
sense you have a rectangle that's X&Y if

00:23:59,299 --> 00:24:04,789
you have a rectangle that shoots into

00:24:00,889 --> 00:24:08,059
space ABS easy you need an update loop

00:24:04,789 --> 00:24:10,690
to handle input redraw your graphics you

00:24:08,059 --> 00:24:13,749
could always draw it just once but then

00:24:10,690 --> 00:24:16,429
can't do anything with it it's a picture

00:24:13,749 --> 00:24:18,499
all right so with those three things we

00:24:16,429 --> 00:24:20,570
can make a graphical interface for

00:24:18,499 --> 00:24:24,789
example making a button and I actually

00:24:20,570 --> 00:24:27,109
had to do this for the Ruby low Phi a

00:24:24,789 --> 00:24:30,200
rectangle for the clickable area a

00:24:27,109 --> 00:24:33,700
rectangle for the border text for the

00:24:30,200 --> 00:24:36,289
label of the button and a click handler

00:24:33,700 --> 00:24:39,379
this is a little smaller but I think you

00:24:36,289 --> 00:24:41,749
can still see let's say we get next and

00:24:39,379 --> 00:24:45,229
a Y from an event and we have a button

00:24:41,749 --> 00:24:47,539
that says click now to know is that x

00:24:45,229 --> 00:24:51,769
and y are inside the button it's pretty

00:24:47,539 --> 00:24:54,019
straightforward is X less than or is X

00:24:51,769 --> 00:24:55,849
greater than the buttons X is it less

00:24:54,019 --> 00:24:59,389
than the buttons X plus the buttons with

00:24:55,849 --> 00:25:00,559
is that make sense this is basically a

00:24:59,389 --> 00:25:04,480
lot of what

00:25:00,559 --> 00:25:06,799
app does when dealing with user input is

00:25:04,480 --> 00:25:10,249
detecting if I had clicked inside of

00:25:06,799 --> 00:25:12,950
something or not and then everything

00:25:10,249 --> 00:25:14,809
else is just you know now all right

00:25:12,950 --> 00:25:17,269
let's go back to projects making

00:25:14,809 --> 00:25:19,309
progress in a project this is something

00:25:17,269 --> 00:25:21,889
that I really struggle with so let's say

00:25:19,309 --> 00:25:25,249
you're making something but then it

00:25:21,889 --> 00:25:29,720
starts to get difficult the easy stuff

00:25:25,249 --> 00:25:32,139
is done the obvious stuff is done maybe

00:25:29,720 --> 00:25:37,119
you start to flail around a little bit

00:25:32,139 --> 00:25:41,200
maybe your progress looks like this I

00:25:37,119 --> 00:25:46,029
have a lot of trouble staying on task

00:25:41,200 --> 00:25:48,139
for example Ruby loaf I it's about audio

00:25:46,029 --> 00:25:50,720
so why did I spend way more time

00:25:48,139 --> 00:25:52,309
building like UI elements and the

00:25:50,720 --> 00:25:54,919
visuals rather than actually dealing

00:25:52,309 --> 00:25:58,490
with the audio itself adding more audio

00:25:54,919 --> 00:26:01,330
effects making it function faster I lost

00:25:58,490 --> 00:26:03,440
focus I got really deep in the weeds I

00:26:01,330 --> 00:26:05,960
don't have any answers to this problem

00:26:03,440 --> 00:26:09,320
but I do have a suggestion when you find

00:26:05,960 --> 00:26:11,929
yourself straying from what you feel

00:26:09,320 --> 00:26:12,470
like the correct path might be stop

00:26:11,929 --> 00:26:14,570
working

00:26:12,470 --> 00:26:16,899
show someone what you have and ask for

00:26:14,570 --> 00:26:19,429
feedback if I would have done this

00:26:16,899 --> 00:26:21,919
someone what it might have said it takes

00:26:19,429 --> 00:26:23,809
up to 10 seconds to load one audio file

00:26:21,919 --> 00:26:25,909
in your app it's basically useless I

00:26:23,809 --> 00:26:28,190
would have said yes that's true I should

00:26:25,909 --> 00:26:30,769
probably focus on speed before I make

00:26:28,190 --> 00:26:37,070
another like slider you know that kind

00:26:30,769 --> 00:26:40,249
of thing overall though as much as I

00:26:37,070 --> 00:26:41,779
rambled in this talk I think you know

00:26:40,249 --> 00:26:45,919
the overall thing that you should take

00:26:41,779 --> 00:26:49,159
away is code for happiness in code for

00:26:45,919 --> 00:26:50,690
joy I kind of front-loaded the demo so

00:26:49,159 --> 00:26:52,549
we really don't have to talk about that

00:26:50,690 --> 00:26:54,610
although we can go back to it I covered

00:26:52,549 --> 00:26:58,940
making a beat and stitching beats

00:26:54,610 --> 00:27:00,889
somewhat clearly maybe a couple things

00:26:58,940 --> 00:27:04,039
to remember about Ruby lo-fi it only

00:27:00,889 --> 00:27:06,139
handles waves you always have to hit the

00:27:04,039 --> 00:27:09,310
build button before playing or saving

00:27:06,139 --> 00:27:11,470
its otherwise it's too slow to use

00:27:09,310 --> 00:27:13,540
and there are some keyboard shortcuts

00:27:11,470 --> 00:27:18,850
but that's not really important at this

00:27:13,540 --> 00:27:20,350
time here's the big thing and I sort of

00:27:18,850 --> 00:27:21,730
I'm a little disappointed in myself

00:27:20,350 --> 00:27:25,090
because I wanted to have the app a

00:27:21,730 --> 00:27:28,080
little bit more complete for people to

00:27:25,090 --> 00:27:32,460
use I think it's usable but it's it's

00:27:28,080 --> 00:27:35,560
borderline I wanted to issue a challenge

00:27:32,460 --> 00:27:39,540
to everyone here does everyone know what

00:27:35,560 --> 00:27:42,700
socks is does anyone know what socks is

00:27:39,540 --> 00:27:44,530
it's a very useful command line utility

00:27:42,700 --> 00:27:46,870
that's sort of the standard for

00:27:44,530 --> 00:27:50,140
manipulating audio especially in Linux

00:27:46,870 --> 00:27:53,110
but on Mac and Windows - I love this

00:27:50,140 --> 00:27:57,820
webpage by the way this looks like like

00:27:53,110 --> 00:28:02,560
the old web this is the page you can

00:27:57,820 --> 00:28:04,660
google Sox s o X sound exchange if you

00:28:02,560 --> 00:28:06,760
want to user to be lo-fi you need to

00:28:04,660 --> 00:28:08,740
have Sox its dependency that I couldn't

00:28:06,760 --> 00:28:11,730
figure out how to get rid of because it

00:28:08,740 --> 00:28:15,160
actually turns the audio data into sound

00:28:11,730 --> 00:28:18,280
and I did not have the ability to do

00:28:15,160 --> 00:28:21,400
that on my own there is a download link

00:28:18,280 --> 00:28:25,900
here who remembers SourceForge that's

00:28:21,400 --> 00:28:27,640
the thing it auto selects you know your

00:28:25,900 --> 00:28:29,440
your operating system so really it's a

00:28:27,640 --> 00:28:31,770
one-click install if you want to try

00:28:29,440 --> 00:28:38,530
Ruby lo-fi you do need it though

00:28:31,770 --> 00:28:43,470
unfortunately next I showed you cloning

00:28:38,530 --> 00:28:47,710
the repo Robo Bluebird is my github and

00:28:43,470 --> 00:28:51,430
Ruby - load 5 there's one other weird

00:28:47,710 --> 00:28:57,690
step you have to unzip the sounds

00:28:51,430 --> 00:29:00,130
directory inside the kind of a pain but

00:28:57,690 --> 00:29:02,290
maybe in the future you won't have to I

00:29:00,130 --> 00:29:04,000
experimented briefly with serializing

00:29:02,290 --> 00:29:07,830
all of those samples into just a big

00:29:04,000 --> 00:29:10,930
data chunk and then deserializing it

00:29:07,830 --> 00:29:14,980
couldn't get it to work and then you run

00:29:10,930 --> 00:29:17,410
it you run the app dot RB and you can

00:29:14,980 --> 00:29:19,030
make a beat - I think the interface is

00:29:17,410 --> 00:29:20,320
pretty straightforward but it has enough

00:29:19,030 --> 00:29:22,090
little like

00:29:20,320 --> 00:29:25,179
professional qualities that it might be

00:29:22,090 --> 00:29:29,620
difficult to use although I would like

00:29:25,179 --> 00:29:31,840
to say if anyone has the wherewithal to

00:29:29,620 --> 00:29:35,350
download this and play around with it

00:29:31,840 --> 00:29:38,919
I would really appreciate it if you make

00:29:35,350 --> 00:29:40,539
something with it you can send it to me

00:29:38,919 --> 00:29:44,139
or tweet it I don't know can you tweet

00:29:40,539 --> 00:29:48,279
audio I think you can but I did pick up

00:29:44,139 --> 00:29:51,159
specifically for this purpose 3 they're

00:29:48,279 --> 00:29:54,879
knock-offs but they're still the real

00:29:51,159 --> 00:30:01,649
deal the Amazon special as I as I like

00:29:54,879 --> 00:30:06,220
to say here they are I'm not lying

00:30:01,649 --> 00:30:07,990
little nano M Ruby C is still too big to

00:30:06,220 --> 00:30:11,230
fit on a nano but there's another

00:30:07,990 --> 00:30:14,049
project called mm Ruby see if anyone saw

00:30:11,230 --> 00:30:15,940
the M Ruby C talked yesterday someone

00:30:14,049 --> 00:30:17,700
took that and made it even smaller and

00:30:15,940 --> 00:30:23,470
actually you can get a little Ruby

00:30:17,700 --> 00:30:25,179
program to run on a man if anybody wants

00:30:23,470 --> 00:30:28,120
to try Ruby low 5 but you don't remember

00:30:25,179 --> 00:30:31,779
all of these like kind of stupid steps I

00:30:28,120 --> 00:30:33,820
would I would love to help you out and

00:30:31,779 --> 00:30:35,470
obviously the app needs work if this

00:30:33,820 --> 00:30:37,720
seems like something interesting that

00:30:35,470 --> 00:30:41,440
you would like to work on as well

00:30:37,720 --> 00:30:43,450
I would appreciate the help I can you

00:30:41,440 --> 00:30:45,850
know give you the repo name again if you

00:30:43,450 --> 00:30:47,769
need it but never really collaborated on

00:30:45,850 --> 00:30:50,110
a hobby project before so if anyone

00:30:47,769 --> 00:30:52,389
looks at it and they're like it's a good

00:30:50,110 --> 00:30:56,730
idea but not here let me help

00:30:52,389 --> 00:30:59,470
I would appreciate it a lot that's

00:30:56,730 --> 00:31:03,210
almost all I have I want to thank you

00:30:59,470 --> 00:31:06,970
guys for listening before we go to the

00:31:03,210 --> 00:31:09,460
question round I do want to say that my

00:31:06,970 --> 00:31:11,559
company did send me here I really

00:31:09,460 --> 00:31:16,090
appreciate that and I have to have the

00:31:11,559 --> 00:31:19,059
obligatory off theme slide I work for

00:31:16,090 --> 00:31:20,919
General Dynamics in Pittsburgh we do a

00:31:19,059 --> 00:31:23,169
lot of interesting things with large

00:31:20,919 --> 00:31:25,299
datasets turning into useful

00:31:23,169 --> 00:31:26,470
visualizations to help people make

00:31:25,299 --> 00:31:29,140
decisions and

00:31:26,470 --> 00:31:31,510
and things we're hiring at all

00:31:29,140 --> 00:31:34,299
experience levels beginner up through

00:31:31,510 --> 00:31:36,490
senior principal I think we stubbed some

00:31:34,299 --> 00:31:39,100
positions open for like DevOps and data

00:31:36,490 --> 00:31:43,000
scientist I've only worked there since

00:31:39,100 --> 00:31:45,070
April but it's been good so far I am in

00:31:43,000 --> 00:31:48,809
this picture on the hot metal bridge in

00:31:45,070 --> 00:31:51,760
Pittsburgh I don't remember where though

00:31:48,809 --> 00:31:53,710
so anyway I have business cards if

00:31:51,760 --> 00:31:55,960
anyone has an interest in living and

00:31:53,710 --> 00:31:59,260
working in the steel city please let me

00:31:55,960 --> 00:32:12,549
know and that actually is the end of my

00:31:59,260 --> 00:32:15,460
presentation sure yeah and the cool

00:32:12,549 --> 00:32:17,289
thing about it is when you deconstruct

00:32:15,460 --> 00:32:20,409
some of the stuff that you hear like on

00:32:17,289 --> 00:32:22,000
the YouTube stream it's it's really

00:32:20,409 --> 00:32:25,840
quite simple of course it's better

00:32:22,000 --> 00:32:26,650
produced than this would be but the idea

00:32:25,840 --> 00:32:28,990
is the same

00:32:26,650 --> 00:32:31,330
taking four eight bars of music putting

00:32:28,990 --> 00:32:33,840
a beat under it and and going from there

00:32:31,330 --> 00:32:36,309
unfortunately I only prepared one

00:32:33,840 --> 00:32:40,559
example file and this is actually from

00:32:36,309 --> 00:32:43,390
Majora's Mask if anyone recognized that

00:32:40,559 --> 00:32:46,900
so here we have to get a little spinny

00:32:43,390 --> 00:32:48,549
ball again this is the biggest problem

00:32:46,900 --> 00:32:50,470
to tackle it right here if I ever want

00:32:48,549 --> 00:32:54,789
anyone to use this let's kind of just

00:32:50,470 --> 00:32:57,030
select a bit of audio and see what we

00:32:54,789 --> 00:32:57,030
found

00:32:57,760 --> 00:33:02,289
[Music]

00:33:02,820 --> 00:33:06,149
there's a better

00:33:07,980 --> 00:33:28,820
let's try that yeah and go ahead and add

00:33:24,210 --> 00:33:28,820
what's that a fat check underneath it

00:33:30,590 --> 00:33:34,460
let's add a little snare

00:33:39,310 --> 00:33:42,180
oh thank you

00:33:46,180 --> 00:33:54,909
[Music]

00:33:47,679 --> 00:33:57,169
so we're running at 154 right now we can

00:33:54,909 --> 00:33:58,850
notice how when I change the number of

00:33:57,169 --> 00:34:01,130
sample or measures that are in that

00:33:58,850 --> 00:34:03,590
sample will it change the BPM down to

00:34:01,130 --> 00:34:07,029
well we don't want 38 let's go for 77

00:34:03,590 --> 00:34:07,029
that's nice and chill

00:34:07,090 --> 00:34:20,100
[Music]

00:34:15,110 --> 00:34:23,000
not a little delay to that and really

00:34:20,100 --> 00:34:23,000
like space it out

00:34:23,290 --> 00:34:26,449
[Music]

00:34:28,480 --> 00:34:32,670
[Music]

00:34:33,080 --> 00:34:38,619
I'm floating down the river of stars

00:34:35,690 --> 00:34:42,099
[Music]

00:34:38,619 --> 00:34:55,059
and that's the idea you can use any any

00:34:42,099 --> 00:34:56,769
track more the steps to making a little

00:34:55,059 --> 00:35:00,339
loop are actually fairly straightforward

00:34:56,769 --> 00:35:02,979
once you deal with the the weirdness of

00:35:00,339 --> 00:35:04,269
it so I'm very serious about this if you

00:35:02,979 --> 00:35:06,069
if you want one of these

00:35:04,269 --> 00:35:10,150
make a little track and send it to me I

00:35:06,069 --> 00:35:14,950
will ship it to you if I have to that's

00:35:10,150 --> 00:35:16,499
a threat no it's not it's not that's all

00:35:14,950 --> 00:35:18,460
I have

00:35:16,499 --> 00:35:19,260
thanks again

00:35:18,460 --> 00:35:24,659
[Music]

00:35:19,260 --> 00:35:24,659
[Applause]

00:35:24,880 --> 00:35:35,339

YouTube URL: https://www.youtube.com/watch?v=taYx6Dy6dwI


