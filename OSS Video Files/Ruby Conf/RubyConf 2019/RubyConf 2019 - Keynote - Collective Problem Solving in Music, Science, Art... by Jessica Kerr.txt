Title: RubyConf 2019 - Keynote - Collective Problem Solving in Music, Science, Art... by Jessica Kerr
Publication date: 2019-11-27
Playlist: RubyConf 2019
Description: 
	RubyConf 2019 - Keynote - Collective Problem Solving in Music, Science, Art and Software by Jessica Kerr

#confreaks #rubyconf2019 #rubyconf
Captions: 
	00:00:12,380 --> 00:00:13,380
Good afternoon. Hey, everybody. We're going to go ahead and get started. Hello. How's

00:00:13,380 --> 00:00:14,380
it going? How's day one been for everybody?  [ Cheers and Applause ]

00:00:14,380 --> 00:00:15,380
Good to hear it. I am one of the directors with Ruby Central. So, we have got a couple

00:00:15,380 --> 00:00:16,380
of announcements before we get started with the afternoon keynote. First off, as you

00:00:16,380 --> 00:00:17,380
probably heard this morning, we have enough seats for everyone, but that is only if we

00:00:17,380 --> 00:00:18,380
don't have a bunch of seats in the middle that go unoccupied. So, if you have a seat

00:00:18,380 --> 00:00:19,380
next to you right now, please stand up and just move in. We're all friends here. We

00:00:19,380 --> 00:00:20,380
are a friendly community here in the Ruby world. So, say hi. Get to know one another. So,

00:00:20,380 --> 00:00:21,380
that everybody coming in can see those aisle seats and grab them. Everybody will greatly,

00:00:21,380 --> 00:00:22,380
greatly appreciate it. Thank you all!  So if anybody's looking for something to do

00:00:22,380 --> 00:00:23,380
this evening, we do have a physical events board full of all kinds of great stuff to

00:00:23,380 --> 00:00:24,380
do this evening and the next few evenings. That's over by registration. Earlier today we tweeted

00:00:24,380 --> 00:00:25,380
out a link to a site online that has a bunch of events including a board game night this

00:00:25,380 --> 00:00:26,380
evening, a bunch of great stuff to do all around the conference. Additionally, in terms

00:00:26,380 --> 00:00:27,380
of t‑shirts, hopefully most of you got yours today at lunch. If you did not, you can come

00:00:27,380 --> 00:00:28,380
and get your shirts tomorrow at lunch unless you were explicitly told not to come back

00:00:28,380 --> 00:00:29,380
until Wednesday to get your shirt. In which case, please do that. For anybody else, if

00:00:29,380 --> 00:00:30,380
you would like to purchase an additional shirt or exchange your shirt for a different size

00:00:30,380 --> 00:00:31,380
or if you registered late and you didn't get a badge with your name printed on it or a

00:00:31,380 --> 00:00:32,380
t‑shirt, you can get those also Wednesday at lunch. Come back and get your extra shirts

00:00:32,380 --> 00:00:33,380
there.  So without further ado, that's it for our

00:00:33,380 --> 00:00:34,380
afternoon announcements. We hope you enjoy your first evening with RubyConf. Without

00:00:34,380 --> 00:00:35,380
further a, do I would like to welcome Jessica Kerr to the stage. 

00:00:35,380 --> 00:00:36,380
[ Applause ]

00:00:36,380 --> 00:00:37,380
>> In the years around 1580, in the city of Florence, Italy, a group of people came together

00:00:37,380 --> 00:00:38,380
to solve a common problem. They called themselves the Florentine camerata. Their mission? To

00:00:38,380 --> 00:00:45,890
reform modern music! That music was polyphony, and it sounded like this. 

00:00:45,890 --> 00:01:07,079
[ Multi voice music ] Very pretty. It consisted of four or five

00:01:07,079 --> 00:01:13,710
melodies all equally important, all entwined with each other, and it maximizes for a feeling

00:01:13,710 --> 00:01:22,061
of holiness. The camerata dared to ask the revolutionary question: What if we could understand

00:01:22,061 --> 00:01:25,400
the words?!  [ Laughter ]

00:01:25,400 --> 00:01:34,850
Specifically, they wanted music with an optimum balance of words and music to convey experience,

00:01:34,850 --> 00:01:40,310
to convey emotions, and a whole array of emotions, not always holiness. 

00:01:40,310 --> 00:01:50,460
The camerata said out to do this. And what interests me about this group is how much

00:01:50,460 --> 00:01:56,359
they remind me of a modern agile team. First of all, they're multidisciplinary. You have

00:01:56,359 --> 00:02:04,959
got musicians like composers and singers but you also have poets and astrologers and scientists

00:02:04,959 --> 00:02:09,740
and philosophers. And they're all coming together in a group because they all care

00:02:09,740 --> 00:02:17,180
about solving this problem. They have sponsorship. So, they met in the homes ‑‑ in some ways

00:02:17,180 --> 00:02:21,910
it was more like a meet‑up than a team, but roll with it. They had that common purpose

00:02:21,910 --> 00:02:28,160
that was important, and they had agreed upon methods. How are we going to reform muse

00:02:28,160 --> 00:02:32,581
snick back then they thought history moved in a circle rather than a progression or a

00:02:32,581 --> 00:02:38,860
spiral. So, to go forward you needed to go backwards. So, they researched how the ancient

00:02:38,860 --> 00:02:47,860
Greeks set words to music. The thing is this lent legitimacy to their work, this method. So,

00:02:47,860 --> 00:02:53,680
it's like when I cite computer science papers from the 1970s. 

00:02:53,680 --> 00:02:59,350
Caccini remarked that he learned more from their learned discussions than from 30 years

00:02:59,350 --> 00:03:07,870
of descant. That means lecturing, so what you're getting now. Fortunately this conference

00:03:07,870 --> 00:03:14,020
is full of learned discussions. They met every week or two and talked about this. They

00:03:14,020 --> 00:03:22,880
didn't just talk. They also played music. The camerata was for performance. They had code

00:03:22,880 --> 00:03:28,850
review. I liked the part where the censors were nominated for the occasion. It wasn't

00:03:28,850 --> 00:03:34,400
always the asshole who hates you and took it out on your card. They didn't always get

00:03:34,400 --> 00:03:44,560
along. Bardi wanted to do more talking and Corsi wanted to do more playing of music. And

00:03:44,560 --> 00:03:51,620
similarly the musical stars, Caccini is like it's about the music and Peri is, it's about

00:03:51,620 --> 00:03:58,540
the words. Your architects can't agree on everything. But balance was achieved. The

00:03:58,540 --> 00:04:10,319
camerata totally made history. They succeeded. They came up with the radical innovation of a single

00:04:10,319 --> 00:04:19,090
melody with a little bit of musical accompaniment. Everything obvious wasn't always. And this style, it

00:04:19,090 --> 00:04:24,560
spread through their network of correspondence to Rome and Italy and the world. And then

00:04:24,560 --> 00:04:38,630
people were listening to this.  [ Music ]

00:04:38,630 --> 00:04:43,700
I still can't understand the words. But I don't speak Italian, and I'm told that if

00:04:43,700 --> 00:04:52,070
you do speak Italian, that doesn't help either. Because this is ancient Italian. Back in the day,

00:04:52,070 --> 00:04:56,840
oh my gosh, people got it and they felt it and it spread through the world because it

00:04:56,840 --> 00:05:03,780
connected a whole generation of people with music. And they couldn't have appreciated

00:05:03,780 --> 00:05:09,370
it otherwise. So, the camerata totally changed the world. They invented opera, which is

00:05:09,370 --> 00:05:15,190
how we marked the beginning of the baroque era. That's huge. But that's not what interests

00:05:15,190 --> 00:05:21,340
me. What interests me is what happened with the individuals in the camerata afterwards,

00:05:21,340 --> 00:05:27,310
so after 1600. These are some of their publications from Wikipedia, and there's a couple of operas

00:05:27,310 --> 00:05:37,950
on here, ya ya. But there's math and philosophy. Vincenzo Galilei contributed his son, Galileo. 

00:05:37,950 --> 00:05:53,760
They did not expect that in 16th century Florence. So, that I found really fascinating, so I went

00:05:53,760 --> 00:06:01,040
looking for more information, and I came upon this paper, collective problem‑solving in

00:06:01,040 --> 00:06:12,990
the history of music. Published in the journal of the history of ideas. This paper compares ‑‑

00:06:12,990 --> 00:06:16,220
all the quotes in this presentation are from this paper unless otherwise attributed. And

00:06:16,220 --> 00:06:23,380
Dr. Katz compares the camerata to the kind of invisible college that is known to be the

00:06:23,380 --> 00:06:29,400
source of progress in science. Invisible college is the group of people in your lab

00:06:29,400 --> 00:06:34,720
or that you share a faculty lounge with or that you correspond with. All the people

00:06:34,720 --> 00:06:41,550
who are working on a similar problem to you or criticizing your work. And invisible colleges

00:06:41,550 --> 00:06:47,150
are essential and they have these characteristics. They have tacit understandings concerning appropriate

00:06:47,150 --> 00:06:56,140
methods of research. They have priority problems, that means fighting over who was first. More

00:06:56,140 --> 00:07:02,200
of that later. And they have the shorthand communication, a shared language kind of like

00:07:02,200 --> 00:07:07,960
do main‑driven design. They are able to talk to each other, and therefore when one

00:07:07,960 --> 00:07:12,610
of them hits on the right idea, that I can spread it. These are found throughout science.

00:07:12,610 --> 00:07:21,639
We love to tell the hero stories of the great discoverer, but that's not how it goes. We're

00:07:21,639 --> 00:07:28,010
taught in school that Benjamin Franklin discovered electricity. Franklin was a cool dude and

00:07:28,010 --> 00:07:36,350
did a lot of work but he was building on and collaborating with dozens if not hundreds

00:07:36,350 --> 00:07:41,699
of amateur electricians around the world. Lots of people were doing experiments about the

00:07:41,699 --> 00:07:55,140
unexplained phenomenon that we now call electricity. But he gets all the credit. Ben Franklin, one

00:07:55,140 --> 00:08:02,930
of his cameratas was called the club of honest Whigs. We're up to around 1770 in London. They

00:08:02,930 --> 00:08:12,050
met fortnightly to dine and imbibe and discuss religion and politics and other matters. This

00:08:12,050 --> 00:08:24,900
is a book about Joseph Priestley. He's credited with the discovery of oxygen because he noticed

00:08:24,900 --> 00:08:36,979
it. He passed to the man who founded chemistry. He did a lot of experiments ‑‑ he would

00:08:36,979 --> 00:08:43,130
get a mouse and weigh it and put it in a jar and see how long it took to die. Sorry mice. And

00:08:43,130 --> 00:08:46,700
then weigh it again. And he would put a plant in a jar and see how long it took to die. And

00:08:46,700 --> 00:08:52,850
one day he put a mouse and a plant in the same jar and they didn't die nearly as soon. This

00:08:52,850 --> 00:09:02,170
wasn't appreciated until the 1920s when ecology became a thing. But more currently, he also

00:09:02,170 --> 00:09:08,580
invented the carbonated beverage. He passed that to someone who made a lot of money. 

00:09:08,580 --> 00:09:17,110
But Priestley was built up and encouraged by the Club of honest Whigs. This was during

00:09:17,110 --> 00:09:26,670
the enlightenment, a time of great progress in the world. And one of the reasons for

00:09:26,670 --> 00:09:31,610
that was coffee. Coffee had just been imported into all of Europe, so people were drinking

00:09:31,610 --> 00:09:38,000
coffee with breakfast now instead of beer... [ Laughter ]

00:09:38,000 --> 00:09:44,760
Every discipline was new again, and whole new disciplines emerged. Of course, this

00:09:44,760 --> 00:09:52,020
also happens in art, and Dr. Katz talks about the salons in Paris and the coffee houses

00:09:52,020 --> 00:09:57,460
there where you've got artists but also critics and collectors and all the stakeholders in

00:09:57,460 --> 00:10:03,830
the art world, everyone who cares coming together to talk about the latest advances. And in

00:10:03,830 --> 00:10:09,440
art, the idea of a common problem corresponds to a new artistic style. So the impressionists

00:10:09,440 --> 00:10:18,350
answered the question, what if I painted not what is, but what I see? 

00:10:18,350 --> 00:10:22,459
Here's a picture of one of those salons where they talked about this. This one, I took

00:10:22,459 --> 00:10:30,580
this in Paris when I went there. Its name is the agile bunny ‑‑ except in French. And

00:10:30,580 --> 00:10:35,010
just down the street from that, here's a plaque on the side of the house. Here's a house and

00:10:35,010 --> 00:10:40,910
a bunch of famous painters and poets and print makers who happened to live there all at the

00:10:40,910 --> 00:10:48,390
same time and then went on to become famous. Not a coincidence. One of the people who got

00:10:48,390 --> 00:10:54,020
a lot out of hanging out in Paris was van Gogh. So, here's a painting that he did in

00:10:54,020 --> 00:10:59,700
the Netherlands. There's a cabbage and a carrot, maybe. Meanwhile, his brother Theo

00:10:59,700 --> 00:11:06,850
is in Paris and Theo is like Vincent, you must come here. You have no idea what colors

00:11:06,850 --> 00:11:12,890
they're using. So, Vincent gets evicted in the Netherlands so he does go to paste. And

00:11:12,890 --> 00:11:18,790
sure enough, he learns all of the colors that we associate with his paintings today. And

00:11:18,790 --> 00:11:26,610
Theo was like wow, you have created for us a circle of artists and friends. A lot of

00:11:26,610 --> 00:11:41,650
other painters grew and evolved with van Gogh. Toulouse Lautrec, his paintings show up later. Gertrude and

00:11:41,650 --> 00:11:50,230
her brother were Americans and they fed a lot of artists. Gertrude Stein had the first

00:11:50,230 --> 00:12:04,080
collection of modern art. The other people who came to her atelier, I think that means

00:12:04,080 --> 00:12:14,030
big room. Whitehead is a philosopher, and there's a poet and writers, a bunch of interesting

00:12:14,030 --> 00:12:21,680
people. People who were interested in what was going on in the day. Later, Picasso and

00:12:21,680 --> 00:12:29,350
Braque, they defined cubism, which answers the question, what if I want to paint all

00:12:29,350 --> 00:12:37,120
the perspectives. Picasso made money during his lifetime and so he ran a salon, and many

00:12:37,120 --> 00:12:47,101
came out of that including henry Miller. One of the painters was Aleksandra Ekster and

00:12:47,101 --> 00:12:59,260
she was from Kiev. These other Alexes hung out with her. And this goat head is on my

00:12:59,260 --> 00:13:07,300
bedroom wall today. Ideas get bigger as we pass them on. 

00:13:07,300 --> 00:13:15,660
I've seen this in software, too. I've noticed from going to conferences that I keep running

00:13:15,660 --> 00:13:22,410
into other speakers on all different topics who, when I ask them about their history,

00:13:22,410 --> 00:13:28,800
they talk about being on this really cool team in ThoughtWorks London around 2003 to

00:13:28,800 --> 00:13:36,810
2006. They all worked as consultants for different clients, but they came together

00:13:36,810 --> 00:13:41,399
to solve the problem of how do we deliver software in under two weeks and without hating

00:13:41,399 --> 00:13:55,170
life. And Jez went on to write more books and Dan goes to create behavior‑driven design. Nat Pryce

00:13:55,170 --> 00:14:06,010
wrote and Sam Newman is the prophet of microservices. They all started in one critical team. I also

00:14:06,010 --> 00:14:13,150
see it in a team that started Spring around the same time in London and across the world. Rod

00:14:13,150 --> 00:14:19,870
wrote the initial book and the objective there, the problem statement is how do we do Enterprise

00:14:19,870 --> 00:14:26,120
java without stabbing our eyes out? And they all came together to produce a software solution

00:14:26,120 --> 00:14:31,500
and a company that solved that problem for people by not making humans write all of this

00:14:31,500 --> 00:14:38,540
ridiculous amount of repetitive code. And a couple years ago, I'm in an elevator at

00:14:38,540 --> 00:14:46,850
KubeCon London and Rod and Christian are like we know him! Sure enough you have the founder

00:14:46,850 --> 00:14:55,700
of Elasticsearch and venture capitalists, all from this one same team. I gave this

00:14:55,700 --> 00:15:00,410
talk in Australia and Kent Beck came up to me and was like oh my gosh, have you heard

00:15:00,410 --> 00:15:05,709
of the Hillside group? That was one of his early cameratas. They came together on a

00:15:05,709 --> 00:15:10,910
hillside, among other places, other a course of years. They were trying to solve the problem

00:15:10,910 --> 00:15:16,829
of is it possible to write software such that two years later, we can look at it and actually

00:15:16,829 --> 00:15:23,940
understand it?  They had architecture patterns to start with. So,

00:15:23,940 --> 00:15:39,510
Ralph Johnson, Grady Booch, ward Cunningham created the wiki. And these days Martin Fowler

00:15:39,510 --> 00:15:44,899
is bet known for refactoring and Michael Feathers invented legacy code. 

00:15:44,899 --> 00:15:59,230
The pattern repeats. The pattern keeps showing itself. That these teams have some sort of

00:15:59,230 --> 00:16:05,310
magic. You want to think that you can hire a bunch of great developers, put them together,

00:16:05,310 --> 00:16:11,190
and poof! Get a great team. I have never seen that work. But what I have seen is the

00:16:11,190 --> 00:16:21,550
other way around. Great teams make great people. Great teams make great people. 

00:16:21,550 --> 00:16:31,390
Okay, why? The next question is why? Because if we know why, then we can do it on purpose. I

00:16:31,390 --> 00:16:36,860
have a model for that, a theory that also answers some of my other burning questions

00:16:36,860 --> 00:16:42,740
about software development, and I want to share it with you. It starts with Gregory

00:16:42,740 --> 00:16:49,620
Bateson. His father was William Bateson, who coined the term genetics and he along

00:16:49,620 --> 00:17:00,950
with women in his lab made genetics a thing. He had a dozen octopuses in his livin groom for

00:17:00,950 --> 00:17:07,919
a year to study animal cognition.  One of his early cameratas is the Macy conference

00:17:07,919 --> 00:17:29,760
on cybernetics. John von Neumann. Claude Shannon, Margaret Mead. Warren McCullough, Kurt Lewin. They

00:17:29,760 --> 00:17:39,590
came together many times, and we're up to 1950 here. They talked about feedback loops

00:17:39,590 --> 00:17:45,370
and circular causality and how could we take this newly recognized pattern and apply it

00:17:45,370 --> 00:17:52,350
in different fields. The concept of feedback loops feeds into systems thinking. Gregory

00:17:52,350 --> 00:18:04,380
Bateson was huge into systems thinking. You can't look at parts individually and get anything. You're

00:18:04,380 --> 00:18:08,460
missing the important bits, because the important bits are between the parts in the relations

00:18:08,460 --> 00:18:15,160
and in the feedback loops between them. That's what makes the system. Bateson applied this

00:18:15,160 --> 00:18:19,780
in a lot of fields with a bunch of psychologists. He came up with the concept of the double blind

00:18:19,780 --> 00:18:26,070
and the idea of family therapy. The radical idea that maybe if we care about someone's

00:18:26,070 --> 00:18:31,460
psychological health, maybe we don't just go deeper into their individual head. Maybe

00:18:31,460 --> 00:18:37,210
their situation matters. Maybe their family is relevant to this. Everything now obvious

00:18:37,210 --> 00:18:42,480
wasn't always. So Bateson loved systems thinking. One of

00:18:42,480 --> 00:18:49,330
Gregory's other contributions is his daughter, Nora. Nora Bateson is also an anthropologist. So,

00:18:49,330 --> 00:18:58,650
she grew up steeped in systems, in relationships, in deep context, in the idea that one perspective

00:18:58,650 --> 00:19:05,700
is not enough. We need many perspectives. And she says this word systems is not cutting

00:19:05,700 --> 00:19:10,520
it any more. When you think about a system, you might think about something mechanical,

00:19:10,520 --> 00:19:16,810
like a big machine or assembly line that okay, yeah, you need to understand the parts and

00:19:16,810 --> 00:19:21,230
how they interrelate. But if you got enough formulas and put them into the computer, you

00:19:21,230 --> 00:19:26,690
could master it. They tried to do this we co‑systems in the '50s and '60s. So,

00:19:26,690 --> 00:19:36,260
you have dozens of grad students spending thousands of hours counting blades of grass,

00:19:36,260 --> 00:19:41,160
separating the bugs into species and weighing them and burning them and then weighing them

00:19:41,160 --> 00:19:46,780
again, because they thought if they just got enough numbers and formulas into the computer

00:19:46,780 --> 00:19:52,590
they could master the ecosystem. They could predict outcomes and how to intervene constructively

00:19:52,590 --> 00:19:59,520
and it never worked. No. That's not how it goes. Because those species don't hold

00:19:59,520 --> 00:20:04,440
still! They don't relate the same from year to year or month to month. They're constantly

00:20:04,440 --> 00:20:13,730
evolving and they're constantly finding new niches and generating new species. So, Nora

00:20:13,730 --> 00:20:22,820
says look, when you've got a learning system made of learning parts, that's something different

00:20:22,820 --> 00:20:27,260
that we don't necessarily associate with this word "system." We need a new word for it. So,

00:20:27,260 --> 00:20:35,440
she coined the term symmathesy from the Latin, sym for together and mathesi, which is learning. It's

00:20:35,440 --> 00:20:40,410
a system where all the parts are learning from each other which enables the system as

00:20:40,410 --> 00:20:45,799
a whole to learn.  This is an extremely powerful concept. We

00:20:45,799 --> 00:20:51,380
know a system is not the sum of its parts. That would be an aggregate. We have it's also

00:20:51,380 --> 00:20:57,150
a product of their interactions. Yeah yeah. But Nora Bateson points out that the parts are

00:20:57,150 --> 00:21:04,840
a product of past interactions. That's a symmathesy. This is really powerful. There

00:21:04,840 --> 00:21:13,800
are no zero sum gains in a symmathesy. For me to win, you also have to win. 

00:21:13,800 --> 00:21:19,070
Of course our teams fit this. We know our teams are not an aggregate. We're more than

00:21:19,070 --> 00:21:26,440
the people and the environment represents the desks and chairs, the leafy thing here. Our

00:21:26,440 --> 00:21:34,410
relationships matter, too. Thank you, agile. Yes, we communicate. But also, we're each colored

00:21:34,410 --> 00:21:42,000
by our past interactions with each other. I am the product of many teams and families

00:21:42,000 --> 00:21:51,220
and communities that I've been a part of. So, yeah our teams are symmathesies. I think

00:21:51,220 --> 00:21:59,299
a software team is even more of a symmathesy than other human teams. With software, it's

00:21:59,299 --> 00:22:05,050
not just the people involved. So, for my team to succeed, we need to be operating useful

00:22:05,050 --> 00:22:10,540
software in production. And that takes the people, yeah yeah yeah, and it takes that

00:22:10,540 --> 00:22:18,530
software running in production. That running software is essential to completing our success

00:22:18,530 --> 00:22:24,490
criteria. And! It learns from us, because we change it. That's our job. And we learn

00:22:24,490 --> 00:22:28,830
from it! We learn from the exceptions that it throws, the day that that it changed, the

00:22:28,830 --> 00:22:35,360
event traces. So, the running software is participating in the symmathesy. If we don't

00:22:35,360 --> 00:22:42,270
learn from it directly, we need our SQL queries, our event agitators, our screens, and our

00:22:42,270 --> 00:22:48,720
logs. We need our IDEs and our source controls and deployment pipeline and automated tests. So,

00:22:48,720 --> 00:22:54,380
the tools are essential. We only learn through the tools. We learn when the test fails, and

00:22:54,380 --> 00:23:00,930
the tool learns from us because we change it. We add automated tests, we write SQL

00:23:00,930 --> 00:23:05,840
queries. Hopefully we can improve our deployment pipeline and add entirely new automations

00:23:05,840 --> 00:23:11,150
because we have that power. We work on the computer and we work in the computer. We

00:23:11,150 --> 00:23:16,480
can change the world we live in.  So the tools are part of the symmathesy. It's

00:23:16,480 --> 00:23:23,510
one big socio‑technical system, if you want an even longer but older word. This answers

00:23:23,510 --> 00:23:29,620
a couple questions for me. One, why do I need to be able to bring my whole self to

00:23:29,620 --> 00:23:38,000
work? Well, to be part of a living, learning system, I need to be alive in it. And also,

00:23:38,000 --> 00:23:45,799
when I look at all the interrelations here, when I think about how many connections there

00:23:45,799 --> 00:23:51,361
are that are important, I start to understand why this is so hard. Because in 20 years

00:23:51,361 --> 00:23:58,580
of software development, it has not gotten easier! It's only gotten more interesting...

00:23:58,580 --> 00:24:04,191
[ Laughter ] Now it wasn't always so complicated, at least

00:24:04,191 --> 00:24:10,190
I didn't feel it. When I first started developing, it was me and the piece of the system that

00:24:10,190 --> 00:24:14,720
I worked on, which was pretty small. And somebody handed me the requirements, make it do this

00:24:14,720 --> 00:24:19,790
thing. Okay. I'll make it do this thing. I said how do I use the database and they gave

00:24:19,790 --> 00:24:23,779
me a book on oracle. Just kidding. I bought it myself. 

00:24:23,779 --> 00:24:29,140
[ Laughter ] But that was it. It was a closed world. I

00:24:29,140 --> 00:24:41,630
felt like it was. Not any more. These days, oh my God, we need to save some space. Which

00:24:41,630 --> 00:24:45,260
databases? Migrations? Back‑ups? Caching? Ahhh! My scope that I look at is a lot wider and my

00:24:45,260 --> 00:24:51,600
influence is a lot wider. I'm able to think about more and change more about the system. And

00:24:51,600 --> 00:24:58,040
this tells me what it means to be a senior developer. Or an Enterprise architect or

00:24:58,040 --> 00:25:02,679
a high level individual contributor, whatever you want to call them. A senior developer

00:25:02,679 --> 00:25:09,710
thinks even more widely and influences even more widely. So, the senior dev knows about

00:25:09,710 --> 00:25:13,970
the systems that our system connects to, the infrastructure or system runs on and what

00:25:13,970 --> 00:25:20,480
the purposes of those systems are and knows people on those teams. Because we're always

00:25:20,480 --> 00:25:25,360
gonna need some of the knowledge that they have. The senior dev knows people outside

00:25:25,360 --> 00:25:29,370
of the company like meeting them at conferences because you never have all of the knowledge

00:25:29,370 --> 00:25:33,299
that you need in‑house, and you need people to ask. 

00:25:33,299 --> 00:25:37,840
Another reason this is important is that our team needs to have influence on the other

00:25:37,840 --> 00:25:48,290
teams. It's a thing that you can't take a team and say, "You, go self‑organize in

00:25:48,290 --> 00:25:55,419
this box!" And don't bother us. Just keep to yourselves. That's not how it works. Because

00:25:55,419 --> 00:26:00,130
we are impacted by other teams, and other teams are impacted by us, and that's healthy

00:26:00,130 --> 00:26:04,000
because they're learning from us and we're learning from them. We don't control them,

00:26:04,000 --> 00:26:09,240
but we need to influence them. And the organization as a whole is learning from this. It's symmathesis

00:26:09,240 --> 00:26:17,890
all the way up.  There's one more thing I need to add to this

00:26:17,890 --> 00:26:24,299
diagram, and then I'll pretend it's complete. And that is a big red line between the human and

00:26:24,299 --> 00:26:29,770
the digital space. Because if I want to learn from my co‑worker, I can be like yo, what's

00:26:29,770 --> 00:26:35,929
going on? Tap them on the shoulder, ping them in Slack. Here's what I'm doing. But

00:26:35,929 --> 00:26:40,850
if I want to know what the software is doing, I can't just look down and see what's going

00:26:40,850 --> 00:26:46,280
on in there. I am limited to my screens and my keyboards until Tron is a thing, I can't

00:26:46,280 --> 00:26:54,030
get down there and kick it to make it do something different. I am limited to my IDEs and my

00:26:54,030 --> 00:27:03,270
deploy buttons. All we have is these representations of the software. This barrier is called the

00:27:03,270 --> 00:27:08,330
line of representation, because that's all that gets through. What's going on in our

00:27:08,330 --> 00:27:13,830
software? I can look at the app screens. I can look at my event tracing. I can look

00:27:13,830 --> 00:27:19,270
at the database. I can look at the exceptions or the logs. But all of these are just representations

00:27:19,270 --> 00:27:23,850
of what's going on. I can look at the code. That's another representation, and I can change the

00:27:23,850 --> 00:27:31,390
code and push that through into source control and the deployment pipeline, and that represents

00:27:31,390 --> 00:27:37,929
what I want the software to do next.  This line of representation is a barrier to

00:27:37,929 --> 00:27:43,880
learning in the system, in the symmathesy. It's a tricky one. In particular, it makes it

00:27:43,880 --> 00:27:50,920
really hard to get an accurate mental model of the system. Because when we're doing our

00:27:50,920 --> 00:27:56,050
work, and let me be specific here, our work is not typing. You can tell, because we don't

00:27:56,050 --> 00:27:59,519
type all day. And most of what we type, we delete. 

00:27:59,519 --> 00:28:05,000
[ Laughter ] Our work is making decisions. What to type,

00:28:05,000 --> 00:28:10,550
what questions to ask, what to look at, what to change next, what buttons to push. Decisions

00:28:10,550 --> 00:28:17,100
are the hard part, and those decisions are based on knowledge. Including our mental

00:28:17,100 --> 00:28:21,980
model of the system. And here's the thing, because of that barrier, because we can't

00:28:21,980 --> 00:28:28,240
look at it directly and really see what's going on, the mental models are never perfect. For

00:28:28,240 --> 00:28:35,240
any system of sufficient complexity ‑‑ and we're way past that in our software ‑‑

00:28:35,240 --> 00:28:44,529
everyone's mental model is necessarily incomplete and out of date and in different ways. Now,

00:28:44,529 --> 00:28:49,919
that part has its advantages because there's a reason we have a team, and it's because

00:28:49,919 --> 00:28:56,140
this whole system doesn't fit in one person's head. And in his book "Why Information Grows,"

00:28:56,140 --> 00:29:03,470
a statistical physicist talks about the concept of a person byte. A person byte is the maximum

00:29:03,470 --> 00:29:08,730
amount of information you can cram into one person's head over their lifetime. It doesn't

00:29:08,730 --> 00:29:14,049
matter how much that is. What matters is that it's finite. Our brains do not scale

00:29:14,049 --> 00:29:20,340
infinitely. We have to go outward. We have to form a team. And in that team, we need

00:29:20,340 --> 00:29:26,799
overlapping mental models, meaning that shared language of communication. But then we also

00:29:26,799 --> 00:29:33,169
need diversity of knowledge so collectively we can come up with some idea of what's going

00:29:33,169 --> 00:29:39,500
on in the software. It doesn't matter just what is; it matters what we see. Because

00:29:39,500 --> 00:29:44,661
that's how we make decisions. These mental models are super valuable. They're how we

00:29:44,661 --> 00:29:50,490
do our work, and they're super hard to acquire. I started to appreciate how hard when I read

00:29:50,490 --> 00:29:59,909
the book "Vehicles" by Valentino Brightonberg, a 1970 philosopher, and he illustrates the

00:29:59,909 --> 00:30:07,880
philosophy of downhill invention, uphill analysis. This says if you start with a system that you're

00:30:07,880 --> 00:30:14,530
building and they start out simple and then you add features and complications and complexity

00:30:14,530 --> 00:30:21,410
and you make it more and more interesting, that is easier. Oh, and you build up your

00:30:21,410 --> 00:30:26,300
mental model as you go, as you're building it, that is so much easier than coming to

00:30:26,300 --> 00:30:33,190
an existing working complex system and gaining an understanding of it. That is really, really

00:30:33,190 --> 00:30:40,280
hard. It's counter intuitive, but it does explain the thousands of JavaScript frameworks. 

00:30:40,280 --> 00:30:47,809
[ Laughter ] Because it really is easier. Oh, I just needed

00:30:47,809 --> 00:30:52,850
to do this one thing. I don't need all of this other stuff. You make it do that one

00:30:52,850 --> 00:30:56,850
thing and then the next thing that you need and then the next thing. And every step here

00:30:56,850 --> 00:31:05,330
is obvious to you and no one else in the entire world. But that is easier. It's not less

00:31:05,330 --> 00:31:10,350
work. It's not less typing. But it's easier to build your own JavaScript framework and

00:31:10,350 --> 00:31:16,309
to build it up in your head than it is to learn React despite hundreds of people who

00:31:16,309 --> 00:31:21,760
spent thousands of hours on documentation, tutorials, API design, making this as approachable

00:31:21,760 --> 00:31:27,220
as possible, you're still starting at the bottom of the hill. And mentally it's more

00:31:27,220 --> 00:31:34,580
challenging to learn React than to write your own JavaScript framework. So, these mental

00:31:34,580 --> 00:31:39,510
models are really hard to build and they're really crucial. This leads to situations

00:31:39,510 --> 00:31:46,640
like this. Okay. Here you have a piece of the system. And you have purple developer. Purple

00:31:46,640 --> 00:31:50,899
developer has a great model, great mental model of how that system works. They probably

00:31:50,899 --> 00:31:56,320
wrote it. But maybe purple has been making changes, but maybe they want to go on and

00:31:56,320 --> 00:32:01,440
do something else, or maybe we need more people on this, we think. So, here come blue and

00:32:01,440 --> 00:32:06,669
green. Blue and green have been assigned to this project, probably part‑time, and

00:32:06,669 --> 00:32:13,430
they don't have a good mental model. So, they come in and they're trying to gain understanding.

00:32:13,430 --> 00:32:16,950
Purple is churning through tickets and making changes, and it is very, very possible and

00:32:16,950 --> 00:32:23,610
even likely that purple can change the system so fast that no matter how hard they work,

00:32:23,610 --> 00:32:30,360
no matter how smart they are, blue and green will never get a solid mental model of it. Never. I

00:32:30,360 --> 00:32:38,730
have been in that situation. Meanwhile purple's over here looking like a 10X developer, being

00:32:38,730 --> 00:32:45,789
like what's wrong with those morons, everything takes them a week and then they get it wrong. There's

00:32:45,789 --> 00:32:52,220
one solution to this, and that requires purple to take their hands off the keyboard, stop

00:32:52,220 --> 00:32:58,309
making changes to the system except through the hands of blue and green. Para programming. This

00:32:58,309 --> 00:33:04,040
way blue and green get the chance to ask questions. How did you know to look there? How would

00:33:04,040 --> 00:33:12,490
you test that? What about that? I was gonna delete that. Purple learned what was not

00:33:12,490 --> 00:33:19,520
obvious.  But is purple gonna do that if what they're

00:33:19,520 --> 00:33:27,730
rewarded for is closing tickets? If these developers are stack‑ranked, why would purple

00:33:27,730 --> 00:33:32,220
bother transferring their mental model over to blue and green? Why would they take that

00:33:32,220 --> 00:33:36,190
time to work alongside them, which is the only way the mental models transfer. 

00:33:36,190 --> 00:33:45,090
This gets to the conflict between individual and group interests in an invisible college

00:33:45,090 --> 00:33:51,820
and in a team. In science, it's about who's first. Two people invented information theory,

00:33:51,820 --> 00:33:57,740
but Shannon published first and he's the name we know. We have two working on calculus. They

00:33:57,740 --> 00:34:10,139
would send each other messages in secret code. If you can decode my message, then maybe you'll

00:34:10,139 --> 00:34:17,359
be slowed down enough that I can publish first! That's not what I want in my team. I don't want

00:34:17,359 --> 00:34:23,089
to conserve ideas. Because ideas are not like matter and energy. This is not zero

00:34:23,089 --> 00:34:28,959
sum. If I give you an idea, I don't not have it any more. It gets bigger. You're gonna

00:34:28,959 --> 00:34:36,169
make it better. Ideas grow with sharing. Like Coraline mentioned today, she quoted that

00:34:36,169 --> 00:34:42,179
transferring knowledge is multiplicative. It gets bigger as we share, and that's what I

00:34:42,179 --> 00:34:47,059
want on my team, because I want my team to grow! 

00:34:47,059 --> 00:34:53,239
What does it mean to grow this kind of team, a software team? If it were an aggregate,

00:34:53,239 --> 00:35:00,660
we would grow the team by adding people. But we know that all of those people need relationships

00:35:00,660 --> 00:35:07,009
with each other and those matter, and this is a system. And how do you grow a system? Well,

00:35:07,009 --> 00:35:15,190
it depends. In the economy, the economy is definitely a symmathesy. We don't talk about

00:35:15,190 --> 00:35:20,989
geographic area or the quantity of money in circulation. We talk about flows. So if I

00:35:20,989 --> 00:35:27,069
buy coffee for $5 and the coffee shop pays the barista and rent, that goes to GDP. More

00:35:27,069 --> 00:35:38,499
flows, bigger economy. In ecology, they measure the size of 

00:35:38,499 --> 00:35:54,489
the prairie eco‑system by flows of key nutrient, carbon, nitrogen, phosphorous. If carbon

00:35:54,489 --> 00:36:01,400
flows between each species that represent the magnitude, the richness, the meat of the

00:36:01,400 --> 00:36:07,119
ecosystem. It gets bigger by adding more species and by increasing the flows. So,

00:36:07,119 --> 00:36:15,059
our team as a symmathesy, it's a system based on flows of learning, then we grow our team

00:36:15,059 --> 00:36:19,609
by growing the flows of learning. Especially across the line of representation, because

00:36:19,609 --> 00:36:26,509
that's a bottleneck. But purple grows by moving that mental model to blue and green,

00:36:26,509 --> 00:36:32,299
by increasing the size of the team. And that is how purple is gonna be a real 10X developer

00:36:32,299 --> 00:36:38,890
instead of just looking like it. It's one of those oblique goals, to be great, put the

00:36:38,890 --> 00:36:44,759
team first and the team will make you a great developer. It's like happiness. You can't

00:36:44,759 --> 00:36:49,410
just aim for happiness. You have to do something that happens to make you happy. You have

00:36:49,410 --> 00:36:54,049
to produce something that happens to make a profit as a business. 

00:36:54,049 --> 00:37:01,009
To become great, put the team first. And if you think you can't hire enough great developers,

00:37:01,009 --> 00:37:05,499
look inward, because great developers aren't born and they're not trained. You can only

00:37:05,499 --> 00:37:15,589
get so much from college and YouTube. Great developers are symmathesized. This is the

00:37:15,589 --> 00:37:20,920
point that I wanted to get to in this talk. This is what led me to research the camerata. This

00:37:20,920 --> 00:37:28,140
is the similarity that I saw between those software teams and this team from the renaissance. But

00:37:28,140 --> 00:37:34,499
as I was reading the paper about collective problem solving, I came upon something else,

00:37:34,499 --> 00:37:40,299
something that surprised me and made me say wait? What? And gave me an even more audacious

00:37:40,299 --> 00:37:48,630
idea, and I want to share that with you. It starts with the surrounding culture. So,

00:37:48,630 --> 00:37:54,329
the camerata were in Florence, the center of the renaissance, at the height of the renaissance. And

00:37:54,329 --> 00:37:58,420
there was innovation in the air. Side note on the word innovation, back in the days of

00:37:58,420 --> 00:38:05,500
Priestley and Franklin, it meant something that would disrupt the existing order, and

00:38:05,500 --> 00:38:14,549
that was bad back then. But Priestley and Franklin and John Adams, in the age of reason,

00:38:14,549 --> 00:38:20,730
they were like we can use reason to come up with ideas that will improve the current system,

00:38:20,730 --> 00:38:25,499
that will make it better. And now that's what innovation means now, something that

00:38:25,499 --> 00:38:31,131
improves on the current system. And that's the sense Dr. Katz used here. The camerata

00:38:31,131 --> 00:38:39,369
were like mid wives to a century full of social, political, and cultural ideas from which opera

00:38:39,369 --> 00:38:46,219
emerged. One of those ideas was about systematic testing and measurement. So, the scientific

00:38:46,219 --> 00:38:57,069
method is just becoming a thing. We have the first known person to rigorously measure

00:38:57,069 --> 00:39:02,809
string and the weight on a string. You stretch out string and you get a note. Bing bing

00:39:02,809 --> 00:39:11,579
bing. Pretend that's a C. And he increases the weight until he gets the same C an octave

00:39:11,579 --> 00:39:17,339
higher. And then shorten the string. Bing bing bing! He measured what it took to get

00:39:17,339 --> 00:39:23,410
different notes at different octaves and cords and he found ratios between them and he brought

00:39:23,410 --> 00:39:26,209
the math into music. I'm sure that was useful to the camerata somehow. 

00:39:26,209 --> 00:39:49,239
Today, we have new ways of thinking about the world. We have computers. We can do

00:39:49,239 --> 00:39:54,969
math that we couldn't before, because we can offload those calculations from our brains

00:39:54,969 --> 00:40:04,309
to software. Back then in the camerata, they had the printing press to disseminate knowledge. We

00:40:04,309 --> 00:40:12,039
have the internet for maximum knowledge dissemination. But dissemination is not enough because you can

00:40:12,039 --> 00:40:18,180
only fit so much in one human head. It takes a team of people to hold all the knowledge

00:40:18,180 --> 00:40:25,180
that we need. And that is the other thing about the surrounding culture. The very existence

00:40:25,180 --> 00:40:32,480
of such groups as the camerata was new.  It was new. And one of the things that made

00:40:32,480 --> 00:40:37,569
it possible for the singers and the poets and the scientists and the philosophers to

00:40:37,569 --> 00:40:46,339
all be in a room together was the recognition of Art as a thing. This is the part that

00:40:46,339 --> 00:40:53,039
made me say wait, what? There was a time when Art wasn't a thing? I would go to the

00:40:53,039 --> 00:40:59,579
Art museum and I would see statues from like 5,000 years ago. They're not pretty, but

00:40:59,579 --> 00:41:08,009
they're definitely Art. And that's the thing. People were doing sculpting and painting and playing

00:41:08,009 --> 00:41:16,219
music, but those were crafts. In the middle ages, painters were craftsmen and they joined

00:41:16,219 --> 00:41:21,780
the painting guild and you got into the painting guild because your dad was in the painting

00:41:21,780 --> 00:41:27,530
guild. It wasn't about talent. And at the end of the day, you went home and you had

00:41:27,530 --> 00:41:33,229
a beer with the other painters in the painting guild or maybe the gold Smiths, the next guild

00:41:33,229 --> 00:41:39,599
over, and the sculptors hung out with the bricklayers. It was just a craft. Competence

00:41:39,599 --> 00:41:47,069
was basic. If you hired a painter, you could be sure they could come up with a reasonable

00:41:47,069 --> 00:41:59,219
facsimile of what you asked for.  But with the renaissance, you have painters

00:41:59,219 --> 00:42:07,660
who maybe specialize in landscapes or sculptures of people or cupids on ceilings and you have

00:42:07,660 --> 00:42:14,180
merchants who can hire these artists. It's a little riskier. Not everybody has a computer

00:42:14,180 --> 00:42:21,180
science degree any more. But then people noticed that there was some common thread

00:42:21,180 --> 00:42:30,499
between sculpting, painting, music. They didn't have a name for the common thread. Today

00:42:30,499 --> 00:42:40,369
we would say creativity. But they knew it couldn't be taught, and that gave it prestige. So,

00:42:40,369 --> 00:42:47,799
now you've got these artists having prestige studying in academies with other artists in

00:42:47,799 --> 00:42:54,920
different areas and philosophers and they are in the cultured circles like the camerata. Suddenly,

00:42:54,920 --> 00:43:04,369
the painters, the musicians, the composers have status. And you get to talk to them

00:43:04,369 --> 00:43:10,690
and the camerata became possible. The renaissance was a time of transformation, of homogenous

00:43:10,690 --> 00:43:15,880
artistic circles into cultured circles. So, the painters are not just talking to painters

00:43:15,880 --> 00:43:22,619
any more. It was a period of decompartmentalization. Breaking down barriers that kept things in

00:43:22,619 --> 00:43:34,479
order, but also apart. Programmers, testers, operations. Given enough time, you might

00:43:34,479 --> 00:43:40,280
get what you asked for from that arrangement, but you will not get what you need. 

00:43:40,280 --> 00:43:52,300
And the new style emphasized expressive qualities' impact on the world over beauty of design

00:43:52,300 --> 00:44:01,279
and craftsman code coverage. Design patterns. I want my software to be useful and grow more

00:44:01,279 --> 00:44:08,479
useful over time. And that is what I care about. Software is not a craft, and I am

00:44:08,479 --> 00:44:13,559
not a crafts person.  [ Applause ]

00:44:13,559 --> 00:44:19,549
Programming is a skill. And it is a crucial skill, and we need it, and we need to be good

00:44:19,549 --> 00:44:27,700
at it. A painter needs to know how to hold a brush and mix paints and pull a canvas ‑‑

00:44:27,700 --> 00:44:37,339
back then at least. But java, it's acrylic paint. Ruby is like water color. BASH is

00:44:37,339 --> 00:44:50,180
a song on a loop. Don't put it in your orchestra!  This is an essential skill. We can't do our

00:44:50,180 --> 00:45:01,880
work without it, but it is not the essence of what we do. Art has impact on the world. If

00:45:01,880 --> 00:45:07,559
I listen to music or look at a painting, that can have an impact on me and that changes

00:45:07,559 --> 00:45:14,880
how I interact with the world. Software is more direct. We change physics. If I pick

00:45:14,880 --> 00:45:21,210
up this box and I move my finger just right, a car shows up and takes me where I want to

00:45:21,210 --> 00:45:29,050
go! That is amazing. That did not happen five years ago! 

00:45:29,050 --> 00:45:34,749
Now it takes people, too. It's not just software. It takes technical systems, but code is an essential

00:45:34,749 --> 00:45:44,710
part of that change in the world.  Code as a medium is unlike anything we have

00:45:44,710 --> 00:45:51,079
ever worked with before. It's more moldable than metal, more flexible than plastic. You

00:45:51,079 --> 00:45:59,359
can almost design right into it. And the feedback loops. We don't have to wait 15

00:45:59,359 --> 00:46:04,449
years to see if the bridge falls down. Or ten years to see if people liked that house

00:46:04,449 --> 00:46:09,430
or if it holds its value. We can get feedback on whether this worked in seconds in our unit

00:46:09,430 --> 00:46:18,069
tests, in days from our web app, in days or weeks at the most, not decades. We can learn

00:46:18,069 --> 00:46:26,489
so much faster! And we can learn how to work with a complex system that's too big to fit

00:46:26,489 --> 00:46:34,119
in a single person's head. And we are, this is different. So, I'm not saying that software

00:46:34,119 --> 00:46:41,920
is art. I'm saying that software is the next thing after art that we don't have a name

00:46:41,920 --> 00:46:48,099
for yet.  The closest I can come in words is that ongoing

00:46:48,099 --> 00:47:03,631
software development is the practice of symmathesy. And that makes me a symmathecist. I like this

00:47:03,631 --> 00:47:17,029
slide except for one thing: It has my name on it. It takes a camerata, an idea, and

00:47:17,029 --> 00:47:24,510
a culture. So, we are all symmathecists if we choose to think of ourselves that way. I

00:47:24,510 --> 00:47:32,719
am thrilled to be alive right now and in software. Software is the next thing after art, and this is the

00:47:32,719 --> 00:47:38,249
next age after the renaissance. We have new ways of thinking about the world, and new

00:47:38,249 --> 00:47:42,369
ways of changing the world.  [ Singing ]

00:47:42,369 --> 00:47:56,519
If you manage to get this right, they will surrender by early night. The world will

00:47:56,519 --> 00:48:03,239
never be the same.  That's my daughter, Evelyn singing "Hamilton,"

00:48:03,239 --> 00:48:08,869
the modern opera. May our work have such impact 400 years from now. Thank you. 

00:48:08,869 --> 00:48:09,869
[ Applause ]

00:48:09,869 --> 00:48:10,869
I have symmathecist stickers.  >> Have a great evening. See you all back

00:48:10,869 --> 00:48:10,872

YouTube URL: https://www.youtube.com/watch?v=1oeigCANJVQ


