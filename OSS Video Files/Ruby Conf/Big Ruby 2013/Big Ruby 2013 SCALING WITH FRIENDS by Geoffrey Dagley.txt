Title: Big Ruby 2013 SCALING WITH FRIENDS by Geoffrey Dagley
Publication date: 2020-01-28
Playlist: Big Ruby 2013
Description: 
	What started with two brothers in the McKinney Public Library is now a world wide word phenomenon on multiple mobile platforms. We'll look at how we have grown, the mistakes we made, and the changes we have made along the way:

Serving millions of players a day: Stats, stats, stats!
Working with constraints: * 1 service, 6 games (and counting) * Native clients means backward compatibility, ftw!
How do I know what to fix? Instrumenting and reporting on everything
Where is the data? Using the database, memcache, Redis to the fullest
What we did wrong? What we did right? What would we do differently?

Help us caption & translate this video!

http://amara.org/v/FGd5/
Captions: 
	00:00:18,830 --> 00:00:26,730
alright so yeah I'm Jeff dagley i work

00:00:23,160 --> 00:00:28,890
at zynga formally we were new toy so how

00:00:26,730 --> 00:00:34,050
many of you have played a width friends

00:00:28,890 --> 00:00:36,320
game I like that you keep me in a job so

00:00:34,050 --> 00:00:39,720
yeah we've got the with friends family

00:00:36,320 --> 00:00:42,030
and the backend is a rail service on the

00:00:39,720 --> 00:00:44,550
front end we've got let's see how many

00:00:42,030 --> 00:00:45,930
play chess chess friends chess with

00:00:44,550 --> 00:00:48,799
friends play yeah there's a few of you

00:00:45,930 --> 00:00:51,690
words with friends are most popular ya

00:00:48,799 --> 00:00:54,000
scramble with friends few scramble

00:00:51,690 --> 00:00:55,409
players on that that's actually the

00:00:54,000 --> 00:00:56,820
older icon of hanging with friends

00:00:55,409 --> 00:01:00,449
anybody still play hanging with friends

00:00:56,820 --> 00:01:02,629
yeah matching with friends any matching

00:01:00,449 --> 00:01:07,590
players out there yeah a few of you and

00:01:02,629 --> 00:01:09,570
gyms with friends yes that's the one I

00:01:07,590 --> 00:01:11,220
work on currently so Jim's with friends

00:01:09,570 --> 00:01:13,520
actually we've done a little bit of

00:01:11,220 --> 00:01:16,280
everything all these games came out of

00:01:13,520 --> 00:01:18,330
mckinney so if you're wondering where

00:01:16,280 --> 00:01:20,220
words with friends test with friends

00:01:18,330 --> 00:01:23,310
started it was in the downtown public

00:01:20,220 --> 00:01:25,920
library of mckinney so the two brothers

00:01:23,310 --> 00:01:28,410
Paul and David buettner left their job

00:01:25,920 --> 00:01:29,730
when the iphone came out they said we're

00:01:28,410 --> 00:01:32,490
going to make we're going to do

00:01:29,730 --> 00:01:35,340
something on this it seems great so they

00:01:32,490 --> 00:01:37,140
went up to they they lived in mckinney

00:01:35,340 --> 00:01:38,700
they went to the public library sat in

00:01:37,140 --> 00:01:40,620
there because it was quiet they could

00:01:38,700 --> 00:01:42,540
get out of the house and started

00:01:40,620 --> 00:01:43,800
building chess with friends so for those

00:01:42,540 --> 00:01:46,560
of you don't know chess with friends was

00:01:43,800 --> 00:01:48,650
actually first then they they released

00:01:46,560 --> 00:01:50,730
it it was kind of chugging along and

00:01:48,650 --> 00:01:52,530
moving up and then they built words with

00:01:50,730 --> 00:01:55,770
friends so words with friends came along

00:01:52,530 --> 00:01:57,570
second i joined i started doing some

00:01:55,770 --> 00:02:00,630
contract work for new toy in october of

00:01:57,570 --> 00:02:02,640
2009 joined them full-time today is my

00:02:00,630 --> 00:02:06,830
three year anniversary with new toy /

00:02:02,640 --> 00:02:09,239
Zynga so I'm excited that's fun stuff

00:02:06,830 --> 00:02:10,530
three years I mean who stays at a

00:02:09,239 --> 00:02:14,569
company for three years these days

00:02:10,530 --> 00:02:19,590
really yeah so uh yeah that's crazy

00:02:14,569 --> 00:02:21,570
what's that yeah all right yeah we'll

00:02:19,590 --> 00:02:23,710
talk about that later

00:02:21,570 --> 00:02:25,450
so what are we going to talk about today

00:02:23,710 --> 00:02:27,610
so these are we're going to talk about

00:02:25,450 --> 00:02:28,840
some of the mistakes I made so I've been

00:02:27,610 --> 00:02:30,580
sitting in here listening to a lot of

00:02:28,840 --> 00:02:32,950
these talks about solving big problems

00:02:30,580 --> 00:02:34,420
which you need to do to get this and I'm

00:02:32,950 --> 00:02:35,920
going to talk about how we got to those

00:02:34,420 --> 00:02:39,280
problems we didn't start off trying to

00:02:35,920 --> 00:02:43,300
solve those problems we started off two

00:02:39,280 --> 00:02:45,940
guys in a in a library building a game

00:02:43,300 --> 00:02:47,350
on the iOS that they didn't know they

00:02:45,940 --> 00:02:49,180
didn't know the server back in they were

00:02:47,350 --> 00:02:50,170
just building it as I went along so

00:02:49,180 --> 00:02:51,850
we're going to talk about the mistakes

00:02:50,170 --> 00:02:54,220
we made how we've corrected as those

00:02:51,850 --> 00:02:57,970
times have come along and where we're

00:02:54,220 --> 00:02:59,260
going forward so on the I guess to you

00:02:57,970 --> 00:03:02,980
it's the right hand side of the screen

00:02:59,260 --> 00:03:05,710
is the day the iphone 4 launched we had

00:03:02,980 --> 00:03:07,510
we were the number one app in the itunes

00:03:05,710 --> 00:03:10,060
app store so that's an exciting place to

00:03:07,510 --> 00:03:12,760
be to kind of show where we where we're

00:03:10,060 --> 00:03:14,260
coming from so what do we have here's

00:03:12,760 --> 00:03:15,550
the with friends games we've got chess

00:03:14,260 --> 00:03:17,140
with friends this is just to kind of

00:03:15,550 --> 00:03:19,180
show you the ecosystem of what we're

00:03:17,140 --> 00:03:20,710
currently supporting we have one

00:03:19,180 --> 00:03:23,500
back-end system that supports all of

00:03:20,710 --> 00:03:24,970
these different games and then each game

00:03:23,500 --> 00:03:27,040
has various clients that we're

00:03:24,970 --> 00:03:29,230
supporting and then each client has

00:03:27,040 --> 00:03:32,080
various versions that they're supporting

00:03:29,230 --> 00:03:35,290
out in the wild so chess has two free

00:03:32,080 --> 00:03:37,000
and a paid hanging has a free and a paid

00:03:35,290 --> 00:03:39,430
on iphone it also has an android version

00:03:37,000 --> 00:03:41,410
same with scramble matching and Jim's

00:03:39,430 --> 00:03:44,709
both have iphone free and paid versions

00:03:41,410 --> 00:03:47,140
words obviously our big one has iphone

00:03:44,709 --> 00:03:49,660
versions ipad versions android versions

00:03:47,140 --> 00:03:52,930
on google play and on the kindle we've

00:03:49,660 --> 00:03:54,640
got windows versions now and facebook so

00:03:52,930 --> 00:03:56,980
talk about supporting multiple clients

00:03:54,640 --> 00:03:59,380
multiple platforms this is what we're

00:03:56,980 --> 00:04:01,330
doing each of those version each of

00:03:59,380 --> 00:04:03,850
those clients may have multiple versions

00:04:01,330 --> 00:04:05,110
out there so we may release a version

00:04:03,850 --> 00:04:07,480
but it doesn't mean that everybody

00:04:05,110 --> 00:04:10,360
immediately goes and updates right away

00:04:07,480 --> 00:04:12,640
we still have people that are playing on

00:04:10,360 --> 00:04:17,230
older versions of the of the games out

00:04:12,640 --> 00:04:19,299
there so it's a fun in quotes a fun

00:04:17,230 --> 00:04:23,140
problem to try and solve to make sure

00:04:19,299 --> 00:04:25,060
that you don't break older versions in

00:04:23,140 --> 00:04:27,880
case you haven't heard a few people like

00:04:25,060 --> 00:04:29,770
our games you might have heard of Alec

00:04:27,880 --> 00:04:31,150
Baldwin who apparently got kicked off of

00:04:29,770 --> 00:04:32,860
a plane because he was playing Words

00:04:31,150 --> 00:04:34,480
With Friends these are some of the

00:04:32,860 --> 00:04:38,910
various people that have

00:04:34,480 --> 00:04:44,140
of tweeted or mentioned us in their

00:04:38,910 --> 00:04:45,900
various media outlets when they do stuff

00:04:44,140 --> 00:04:49,210
like this it's it's interesting because

00:04:45,900 --> 00:04:52,630
we had in one case Fred Durst the lead

00:04:49,210 --> 00:04:56,020
singer of limp biscuit he tweeted his

00:04:52,630 --> 00:04:58,210
username they said hey in their game you

00:04:56,020 --> 00:05:00,640
can tweet hey play games with me so he

00:04:58,210 --> 00:05:04,630
did that and apparently a lot of people

00:05:00,640 --> 00:05:06,580
wanted to play games with him and we had

00:05:04,630 --> 00:05:08,350
we had done certain things like making

00:05:06,580 --> 00:05:12,070
sure there's a game limit you can only

00:05:08,350 --> 00:05:14,320
start I think 20 maybe 30 games now how

00:05:12,070 --> 00:05:16,150
many games you were you can start at the

00:05:14,320 --> 00:05:19,930
time we didn't have a limit on how many

00:05:16,150 --> 00:05:21,430
games could be started with you so all

00:05:19,930 --> 00:05:23,080
of a sudden one evening the server

00:05:21,430 --> 00:05:24,520
starts to go down we're trying to figure

00:05:23,080 --> 00:05:26,050
out what happened we finally track it

00:05:24,520 --> 00:05:28,240
down to the fact that everybody's trying

00:05:26,050 --> 00:05:30,100
to start games with him so every time he

00:05:28,240 --> 00:05:32,530
starts up his phone we're trying to pull

00:05:30,100 --> 00:05:37,060
that down onto his phone and the servers

00:05:32,530 --> 00:05:38,830
are not liking us very much so we

00:05:37,060 --> 00:05:40,690
decided to put game limits on the other

00:05:38,830 --> 00:05:42,670
side as well so now if you try to start

00:05:40,690 --> 00:05:44,860
a game with somebody who's over there 20

00:05:42,670 --> 00:05:46,510
game limit it may tell you hey this

00:05:44,860 --> 00:05:49,810
person has too many games going on right

00:05:46,510 --> 00:05:52,480
now so it's one of the the fun problem

00:05:49,810 --> 00:05:55,000
so we've had along the way we all know

00:05:52,480 --> 00:05:57,100
that rails can't scale this is my friend

00:05:55,000 --> 00:06:00,700
Jason Seaver who's worked on as he does

00:05:57,100 --> 00:06:02,740
the Ruby show has nicely put up a couple

00:06:00,700 --> 00:06:05,470
of websites for us to check to see if

00:06:02,740 --> 00:06:07,750
rails can scale yet you can check those

00:06:05,470 --> 00:06:10,270
out I'm pretty sure that the answer is

00:06:07,750 --> 00:06:13,450
still no despite the fact that we're

00:06:10,270 --> 00:06:15,340
supporting many many users but yeah this

00:06:13,450 --> 00:06:20,280
is we all know that rails can't scale

00:06:15,340 --> 00:06:24,010
sets a fun little joke when I is joined

00:06:20,280 --> 00:06:25,900
Paul and David we we went to lunch one

00:06:24,010 --> 00:06:27,670
day we were talking about it they were

00:06:25,900 --> 00:06:29,620
telling me about this these games that

00:06:27,670 --> 00:06:31,360
they had built on the iPhone and they

00:06:29,620 --> 00:06:34,060
said they had built to this back end web

00:06:31,360 --> 00:06:37,420
service for the games and they said it

00:06:34,060 --> 00:06:40,060
was in rails and I said why rails and

00:06:37,420 --> 00:06:42,850
Paul told me he said well because rails

00:06:40,060 --> 00:06:44,770
was sexy which seems like a very good

00:06:42,850 --> 00:06:48,249
technical decision so I you haven't

00:06:44,770 --> 00:06:49,739
heard that one thrown out yet as it is

00:06:48,249 --> 00:06:53,229
you know helping you make your decisions

00:06:49,739 --> 00:06:57,149
for what technologies to use but if your

00:06:53,229 --> 00:06:59,979
technology is sexy it just might work so

00:06:57,149 --> 00:07:02,529
to which I asked him because he was

00:06:59,979 --> 00:07:04,209
talking me to me to help do some work on

00:07:02,529 --> 00:07:10,659
their rails back in was that because I

00:07:04,209 --> 00:07:11,979
was sexy as well I don't know what are

00:07:10,659 --> 00:07:14,139
we dealing with we've got lots of

00:07:11,979 --> 00:07:15,549
constraints one of them is backwards

00:07:14,139 --> 00:07:18,189
compatibility I mentioned that earlier

00:07:15,549 --> 00:07:21,309
that we have obviously the current iOS

00:07:18,189 --> 00:07:24,759
version is 6.1 to the current android

00:07:21,309 --> 00:07:27,189
version is 4.22 the number of android

00:07:24,759 --> 00:07:29,769
versions out there is is huge the number

00:07:27,189 --> 00:07:32,229
of devices out there we do have the

00:07:29,769 --> 00:07:34,149
ability to force upgrade a client so if

00:07:32,229 --> 00:07:35,919
a client if we put out its server change

00:07:34,149 --> 00:07:38,589
that we know is going to be break

00:07:35,919 --> 00:07:40,899
backwards incompatible we do have the

00:07:38,589 --> 00:07:42,789
ability that when a client starts up it

00:07:40,899 --> 00:07:45,729
will check with the server and say I'm

00:07:42,789 --> 00:07:47,679
this version and the client the server

00:07:45,729 --> 00:07:49,119
can send back and say no pop up an alert

00:07:47,679 --> 00:07:51,129
tell them to go to the App Store

00:07:49,119 --> 00:07:54,159
download that because it's such a

00:07:51,129 --> 00:07:55,539
disruptive process to the end-user we

00:07:54,159 --> 00:07:57,849
don't we don't want to do that on a

00:07:55,539 --> 00:07:59,739
regular basis so every time we push out

00:07:57,849 --> 00:08:02,439
a server change we don't make everybody

00:07:59,739 --> 00:08:05,379
for soap grade which means that there

00:08:02,439 --> 00:08:07,029
are parts of our code that are still in

00:08:05,379 --> 00:08:10,360
there that are checking to see if you're

00:08:07,029 --> 00:08:12,819
this version then do this or parts of

00:08:10,360 --> 00:08:16,809
the parts of the code that are in there

00:08:12,819 --> 00:08:18,489
and for example one of them is to check

00:08:16,809 --> 00:08:21,159
to see if for some reason you're getting

00:08:18,489 --> 00:08:23,110
a negative ID coming up from the client

00:08:21,159 --> 00:08:26,379
from the scenarios where they were

00:08:23,110 --> 00:08:29,379
trying to convert a long long into an

00:08:26,379 --> 00:08:31,839
integer and in those cases you ended up

00:08:29,379 --> 00:08:34,000
getting a negative ID passed up and so

00:08:31,839 --> 00:08:37,089
we have to explicitly say oh wait we

00:08:34,000 --> 00:08:38,469
recognize this scenario and we know what

00:08:37,089 --> 00:08:41,769
to do with it on the server side so

00:08:38,469 --> 00:08:45,220
we're a lot more a lot more capable of

00:08:41,769 --> 00:08:50,129
reacting to problems on the server side

00:08:45,220 --> 00:08:53,500
and can push out fixes to those but yeah

00:08:50,129 --> 00:08:56,139
the i/o this is another fun when the

00:08:53,500 --> 00:08:58,839
when the clients were built it was

00:08:56,139 --> 00:09:01,880
basically built around the active record

00:08:58,839 --> 00:09:04,160
to XML so this was very very early on

00:09:01,880 --> 00:09:07,520
we weren't using any of the JSON stuff

00:09:04,160 --> 00:09:10,070
basically what we had done well what had

00:09:07,520 --> 00:09:13,340
been done was rails generate scaffold

00:09:10,070 --> 00:09:15,520
and by default you got to xml in there

00:09:13,340 --> 00:09:18,590
and then on the phone we just started

00:09:15,520 --> 00:09:20,750
requesting xml content so that was what

00:09:18,590 --> 00:09:24,350
the early days of actually still most of

00:09:20,750 --> 00:09:28,220
the clients are requesting exim xml data

00:09:24,350 --> 00:09:30,290
from the service we are moving new

00:09:28,220 --> 00:09:33,380
content over our new endpoints new

00:09:30,290 --> 00:09:36,650
functionality over to json responses but

00:09:33,380 --> 00:09:39,260
we still have a lot of stuff that is in

00:09:36,650 --> 00:09:43,070
XML XML responses between the client and

00:09:39,260 --> 00:09:44,450
servers and then the game type we do

00:09:43,070 --> 00:09:46,340
have multiple game types that we're

00:09:44,450 --> 00:09:48,230
supporting so like I said we have one

00:09:46,340 --> 00:09:51,410
service the games with friends service

00:09:48,230 --> 00:09:53,630
that supports all six games today there

00:09:51,410 --> 00:09:55,460
are more games coming and basically a

00:09:53,630 --> 00:09:57,860
request comes in and it says I'm this

00:09:55,460 --> 00:10:00,020
game and from there we figure out how to

00:09:57,860 --> 00:10:02,180
how does this get how does the logic get

00:10:00,020 --> 00:10:03,740
handled in there so we've we have early

00:10:02,180 --> 00:10:05,330
on there were a lot of conditionals that

00:10:03,740 --> 00:10:08,000
say if this game typed and do this if

00:10:05,330 --> 00:10:10,820
this game type do this we have since

00:10:08,000 --> 00:10:14,060
split out the game specific logic into

00:10:10,820 --> 00:10:16,250
smaller smaller classes that can be

00:10:14,060 --> 00:10:18,950
where all the the game logic can be

00:10:16,250 --> 00:10:21,280
consolidated but at the same time for

00:10:18,950 --> 00:10:23,810
all the shared stuff so things like

00:10:21,280 --> 00:10:25,820
coins when I'm when I'm purchasing

00:10:23,810 --> 00:10:27,290
things if I'm purchasing energy or if

00:10:25,820 --> 00:10:29,440
I'm purchasing coins and that's

00:10:27,290 --> 00:10:31,880
something that all games are doing

00:10:29,440 --> 00:10:33,620
purchasing products if I roll out a

00:10:31,880 --> 00:10:35,360
change to one of those I've got to make

00:10:33,620 --> 00:10:38,180
sure that it doesn't break the other

00:10:35,360 --> 00:10:39,890
five clients we have run into scenarios

00:10:38,180 --> 00:10:41,540
where you'll push something out and it

00:10:39,890 --> 00:10:42,710
seems like it worked great on words and

00:10:41,540 --> 00:10:44,570
scramble and all of a sudden you find

00:10:42,710 --> 00:10:48,440
out it didn't work nicely on Jim's and

00:10:44,570 --> 00:10:51,440
matching so those are fun things to to

00:10:48,440 --> 00:10:53,420
to have to deal with but we do have test

00:10:51,440 --> 00:10:54,920
suites that we've put in place to catch

00:10:53,420 --> 00:10:59,660
a lot of those they don't catch them all

00:10:54,920 --> 00:11:03,710
but we can catch quite a few of them so

00:10:59,660 --> 00:11:05,450
what did we do we did not have a big

00:11:03,710 --> 00:11:07,130
ruby conference to come to we did not

00:11:05,450 --> 00:11:10,550
sit around and think about how do we

00:11:07,130 --> 00:11:13,130
support you know 10 to 15 million people

00:11:10,550 --> 00:11:14,900
playing your game a day we were trying

00:11:13,130 --> 00:11:15,620
to the brothers were trying to figure

00:11:14,900 --> 00:11:17,029
out how to get

00:11:15,620 --> 00:11:18,830
people to play chess with friends and

00:11:17,029 --> 00:11:21,980
that was what they were trying to solve

00:11:18,830 --> 00:11:23,810
so all of our all of the growth that

00:11:21,980 --> 00:11:26,779
we've had all of the problems that we've

00:11:23,810 --> 00:11:28,610
had have have come along organically our

00:11:26,779 --> 00:11:30,800
code base shows that there's a lot of

00:11:28,610 --> 00:11:33,560
patches here and there to plug systems

00:11:30,800 --> 00:11:35,420
and to to keep it going but at the same

00:11:33,560 --> 00:11:37,580
time that's kind of its kind of what fun

00:11:35,420 --> 00:11:39,980
about it is to to grow it and to have

00:11:37,580 --> 00:11:44,480
seen it kind of grow up and and and deal

00:11:39,980 --> 00:11:47,690
with it so how many yeah Guinea anybody

00:11:44,480 --> 00:11:50,990
want yell it out what is it you aren't

00:11:47,690 --> 00:11:53,450
going to need it we SAT around early on

00:11:50,990 --> 00:11:56,990
as we were starting to grow and we'll

00:11:53,450 --> 00:11:58,430
talk some about this was a as our

00:11:56,990 --> 00:12:00,290
database was growing we SAT around and

00:11:58,430 --> 00:12:01,820
talked about how should we chard should

00:12:00,290 --> 00:12:04,670
we shard the databases is just getting

00:12:01,820 --> 00:12:07,970
one of our constraints was the database

00:12:04,670 --> 00:12:09,589
and so could should sharding be the

00:12:07,970 --> 00:12:10,880
solution and and we decided that we

00:12:09,589 --> 00:12:12,470
weren't we didn't need to do that there

00:12:10,880 --> 00:12:15,200
were other solutions that we could come

00:12:12,470 --> 00:12:16,850
to before we needed to shard so we were

00:12:15,200 --> 00:12:19,040
trying to do the simplest possible thing

00:12:16,850 --> 00:12:20,660
and all the way along that was one of

00:12:19,040 --> 00:12:24,200
our mantras was do the simplest possible

00:12:20,660 --> 00:12:26,870
thing that related to servers as we were

00:12:24,200 --> 00:12:28,550
growing up which servers we were

00:12:26,870 --> 00:12:30,589
choosing what was our schema going to

00:12:28,550 --> 00:12:32,450
look like what does our overall

00:12:30,589 --> 00:12:34,279
architecture look like did we need to

00:12:32,450 --> 00:12:36,140
split out the user service so it could

00:12:34,279 --> 00:12:38,480
be shared with all the independent games

00:12:36,140 --> 00:12:40,310
and we could run each game independently

00:12:38,480 --> 00:12:42,230
of each other which sounds like a great

00:12:40,310 --> 00:12:45,200
idea until you realize that you're

00:12:42,230 --> 00:12:47,810
basically less than 10 people in a room

00:12:45,200 --> 00:12:49,490
trying to support three or four or five

00:12:47,810 --> 00:12:51,290
different games with all of their

00:12:49,490 --> 00:12:52,940
servers and all of their databases and

00:12:51,290 --> 00:12:55,130
all of the stuff that goes along with

00:12:52,940 --> 00:12:59,870
that so we would do the simplest

00:12:55,130 --> 00:13:02,529
possible solution as we went along so

00:12:59,870 --> 00:13:04,459
how did we how do we scale our

00:13:02,529 --> 00:13:06,980
infrastructure well we started off on

00:13:04,459 --> 00:13:09,290
slicehost I think today the equivalent

00:13:06,980 --> 00:13:10,940
would be we'd started off on Heroku at

00:13:09,290 --> 00:13:14,120
the time it was just easy to get up on

00:13:10,940 --> 00:13:16,339
slicehost so we started off there we

00:13:14,120 --> 00:13:18,680
eventually moved over to two rails

00:13:16,339 --> 00:13:21,110
machine they did a great job of actually

00:13:18,680 --> 00:13:22,610
getting us hardware that we could use it

00:13:21,110 --> 00:13:26,780
was a little bit more dedicated still

00:13:22,610 --> 00:13:29,390
virtualized but we we grew we use rails

00:13:26,780 --> 00:13:31,940
machine to also help us do some of our

00:13:29,390 --> 00:13:35,150
scaling as the code as well they came in

00:13:31,940 --> 00:13:38,330
and helped us optimize a lot of our our

00:13:35,150 --> 00:13:41,000
rails code we eventually moved over to

00:13:38,330 --> 00:13:43,970
softlayer softlayer actually gave us

00:13:41,000 --> 00:13:44,990
dedicated bare metal machines so we we

00:13:43,970 --> 00:13:47,720
were able to do that and they were able

00:13:44,990 --> 00:13:50,750
to spin up machines really quickly for

00:13:47,720 --> 00:13:52,670
us as we continued to grow and then

00:13:50,750 --> 00:13:54,410
lastly we were acquired by zynga and

00:13:52,670 --> 00:13:56,150
we've now moved into the zynga

00:13:54,410 --> 00:13:58,360
datacenter and if you want to feel what

00:13:56,150 --> 00:14:01,340
it what it's like to have jet packs on

00:13:58,360 --> 00:14:04,250
that's go to their data centers and they

00:14:01,340 --> 00:14:05,680
are just it's a it's a great experience

00:14:04,250 --> 00:14:10,040
it's an interesting experience they

00:14:05,680 --> 00:14:12,290
continue to to grow so just some little

00:14:10,040 --> 00:14:15,200
bit of stats behind it talk about what

00:14:12,290 --> 00:14:18,020
we're dealing with we've got 400 plus

00:14:15,200 --> 00:14:20,090
app servers that we're deploying on each

00:14:18,020 --> 00:14:23,480
of those app servers is running about 35

00:14:20,090 --> 00:14:25,460
unicorns we're dealing with we've got 40

00:14:23,480 --> 00:14:26,780
worker machines or 40 or more worker

00:14:25,460 --> 00:14:28,690
machines that we're dealing with that

00:14:26,780 --> 00:14:31,940
are just processing background queues

00:14:28,690 --> 00:14:35,270
where Dooley we have about 70 memcache

00:14:31,940 --> 00:14:39,260
servers or 70 Plus memcache servers we

00:14:35,270 --> 00:14:41,360
finally did shard we've got 125 + my

00:14:39,260 --> 00:14:44,150
sequel shards that we're sharted are

00:14:41,360 --> 00:14:46,520
charted our database across and each of

00:14:44,150 --> 00:14:51,860
those has a slave that's for the backup

00:14:46,520 --> 00:14:56,090
so x 2 which is fun when we get ready to

00:14:51,860 --> 00:14:59,870
run migrations we have three fairly

00:14:56,090 --> 00:15:02,000
beefy databases that store some of our

00:14:59,870 --> 00:15:04,760
data that didn't make sense to get

00:15:02,000 --> 00:15:07,220
sharted so we still have three three

00:15:04,760 --> 00:15:08,840
fairly large databases with that we have

00:15:07,220 --> 00:15:10,780
two reddest databases that are also

00:15:08,840 --> 00:15:13,990
being backed up that we're using for

00:15:10,780 --> 00:15:17,600
things like res q and for our idea

00:15:13,990 --> 00:15:19,940
generation so we're doing that we are

00:15:17,600 --> 00:15:21,680
using Capistrano for deployment so we do

00:15:19,940 --> 00:15:24,740
have we're still doing a lot of the

00:15:21,680 --> 00:15:30,860
traditional rails deployments even on

00:15:24,740 --> 00:15:33,980
something that size so what were some of

00:15:30,860 --> 00:15:38,260
our pains early on it was my sequel

00:15:33,980 --> 00:15:43,490
related when I sat I was in the office

00:15:38,260 --> 00:15:45,170
and started in October of 2009

00:15:43,490 --> 00:15:46,850
there was one day we're watching all of

00:15:45,170 --> 00:15:48,560
a sudden looking at the iTunes data

00:15:46,850 --> 00:15:51,230
there had been an uptick in the number

00:15:48,560 --> 00:15:52,520
of people playing are downloading the

00:15:51,230 --> 00:15:54,410
game and we were tracking that down

00:15:52,520 --> 00:15:56,240
trying to figure out what had caused

00:15:54,410 --> 00:15:57,740
that little bend in the graph if people

00:15:56,240 --> 00:15:59,810
starting to play and finally tracked it

00:15:57,740 --> 00:16:01,660
down to John Mayer had tweeted that

00:15:59,810 --> 00:16:03,980
words with friends was a new Twitter and

00:16:01,660 --> 00:16:05,180
apparently people wanted to go download

00:16:03,980 --> 00:16:06,709
the game and find out what that was all

00:16:05,180 --> 00:16:09,610
about so we start getting more people

00:16:06,709 --> 00:16:12,080
how many of you played three years ago

00:16:09,610 --> 00:16:14,450
there's a few of you how many of you

00:16:12,080 --> 00:16:17,839
remember how painful it was to play at

00:16:14,450 --> 00:16:20,390
night how many of you were dedicated

00:16:17,839 --> 00:16:23,930
enough to wait 60 seconds for your move

00:16:20,390 --> 00:16:26,510
to go through and then come back so you

00:16:23,930 --> 00:16:28,279
could and hopefully it went through for

00:16:26,510 --> 00:16:30,350
your movie it would take I trained for

00:16:28,279 --> 00:16:32,390
us to make a move and push it up to the

00:16:30,350 --> 00:16:34,760
server and for the server to process it

00:16:32,390 --> 00:16:37,310
and get back to you at times in the

00:16:34,760 --> 00:16:38,990
evenings would take 60 seconds it was

00:16:37,310 --> 00:16:41,180
fun to watch the new relic charts every

00:16:38,990 --> 00:16:42,500
night there was a there was definitely a

00:16:41,180 --> 00:16:44,000
cycle that would come across and it

00:16:42,500 --> 00:16:45,830
would go up and then it would flatline

00:16:44,000 --> 00:16:48,560
because we had peaked at we could not do

00:16:45,830 --> 00:16:51,490
anything more and then it would fall off

00:16:48,560 --> 00:16:53,990
and it happened every night and the

00:16:51,490 --> 00:16:56,360
itunes store would just light up this

00:16:53,990 --> 00:16:58,130
game fixture servers do stuff you know

00:16:56,360 --> 00:17:02,089
people were very upset that their 99

00:16:58,130 --> 00:17:04,760
cent or free game was not working they

00:17:02,089 --> 00:17:12,170
will let you know because it is ruining

00:17:04,760 --> 00:17:14,120
their life yeah so some of the things we

00:17:12,170 --> 00:17:16,579
dealt with early on it's things like my

00:17:14,120 --> 00:17:19,490
i Sam versus nodb we got to something

00:17:16,579 --> 00:17:21,319
called the move pakka lips right bounds

00:17:19,490 --> 00:17:22,699
we were right down to the database we

00:17:21,319 --> 00:17:25,579
talked about partitioning we talked

00:17:22,699 --> 00:17:28,570
about sharding so what is this so early

00:17:25,579 --> 00:17:31,010
on like I said we were on slicehost

00:17:28,570 --> 00:17:32,780
fallen David said ok we're going to spin

00:17:31,010 --> 00:17:35,600
up some servers will just install my

00:17:32,780 --> 00:17:37,910
sequel will install will get the basic

00:17:35,600 --> 00:17:40,160
stack up and going and we'll work and

00:17:37,910 --> 00:17:42,770
get it going but they didn't realize at

00:17:40,160 --> 00:17:46,280
the time was my sequel installs with my

00:17:42,770 --> 00:17:48,740
I same as the default engine which when

00:17:46,280 --> 00:17:50,780
you get ready to insert data into a

00:17:48,740 --> 00:17:53,840
table it goes ahead and locks the entire

00:17:50,780 --> 00:17:55,880
table versus nodb which will do row

00:17:53,840 --> 00:17:57,410
locking but the problem obviously you

00:17:55,880 --> 00:17:58,850
see where this is going with locking in

00:17:57,410 --> 00:18:01,610
tire table is that when you're trying to

00:17:58,850 --> 00:18:06,020
insert a move one at a time and testing

00:18:01,610 --> 00:18:07,790
it you don't see it when half a million

00:18:06,020 --> 00:18:10,150
people are trying to all play the game

00:18:07,790 --> 00:18:14,510
at the same time this could be a problem

00:18:10,150 --> 00:18:16,640
so unfortunately for us we I mean we

00:18:14,510 --> 00:18:18,980
couldn't find this hook working with

00:18:16,640 --> 00:18:21,020
some small-time contractors to come in

00:18:18,980 --> 00:18:22,790
and realize oh you have it they have

00:18:21,020 --> 00:18:24,830
this setup so it's eat even little

00:18:22,790 --> 00:18:26,750
things like this or like that seems

00:18:24,830 --> 00:18:28,550
pretty obvious now everybody uses nodb

00:18:26,750 --> 00:18:32,840
but these these little things can come

00:18:28,550 --> 00:18:37,190
and bite you move paka lips this was a

00:18:32,840 --> 00:18:39,830
fun one rails my default starts off with

00:18:37,190 --> 00:18:43,280
integer IDs which is great as long as

00:18:39,830 --> 00:18:45,230
you're not inserting one row per move

00:18:43,280 --> 00:18:48,200
that's ever being made and keeping those

00:18:45,230 --> 00:18:50,480
around so we ran into the problem where

00:18:48,200 --> 00:18:53,150
we foresaw we got started getting close

00:18:50,480 --> 00:18:56,660
to the problem where we were about to

00:18:53,150 --> 00:18:58,340
run a run out of ids and actually we

00:18:56,660 --> 00:19:00,170
wouldn't run out of ideas i guess it

00:18:58,340 --> 00:19:02,060
would just keep going i'm not sure what

00:19:00,170 --> 00:19:05,870
the default behavior was but it was not

00:19:02,060 --> 00:19:07,550
going to be pretty and this was an

00:19:05,870 --> 00:19:09,410
interesting scenario because we not only

00:19:07,550 --> 00:19:12,860
had to fix the database on the server

00:19:09,410 --> 00:19:14,960
side but all of the clients also and at

00:19:12,860 --> 00:19:16,820
the time it was words in chess but words

00:19:14,960 --> 00:19:18,560
in chess had to be updated as well so

00:19:16,820 --> 00:19:21,230
there was a coordinated effort where we

00:19:18,560 --> 00:19:24,050
had to make the change on the client

00:19:21,230 --> 00:19:26,210
side push those out to the app store get

00:19:24,050 --> 00:19:28,550
them reviewed in time to get them pushed

00:19:26,210 --> 00:19:31,310
out so that they could support the

00:19:28,550 --> 00:19:33,050
ability for our servers to now convert

00:19:31,310 --> 00:19:35,570
over to supporting long Long's on the

00:19:33,050 --> 00:19:37,700
database so this was what we we went

00:19:35,570 --> 00:19:42,170
ahead and got that rolled over you can

00:19:37,700 --> 00:19:44,000
see that date jun 21st 2010 was when we

00:19:42,170 --> 00:19:47,090
first saw this is when it's going to

00:19:44,000 --> 00:19:49,190
happen which is a good thing to know

00:19:47,090 --> 00:19:51,290
it's also very scary to see it coming

00:19:49,190 --> 00:19:54,290
and be the weekend that we were getting

00:19:51,290 --> 00:19:57,020
ready to make the cut over how do you

00:19:54,290 --> 00:20:00,200
get you so this was the other problem is

00:19:57,020 --> 00:20:02,240
with a table that large my sequel you

00:20:00,200 --> 00:20:04,820
cannot just change the data type on that

00:20:02,240 --> 00:20:08,060
column so we had to get all of the data

00:20:04,820 --> 00:20:11,149
into a new table that had been set up

00:20:08,060 --> 00:20:15,559
with the correct the correct data type

00:20:11,149 --> 00:20:17,509
and we were doing that and it halfway

00:20:15,559 --> 00:20:20,119
through or if I don't even know if I got

00:20:17,509 --> 00:20:23,419
halfway through the copy it actually the

00:20:20,119 --> 00:20:25,339
copy failed and so we're stuck with okay

00:20:23,419 --> 00:20:26,779
what's the next solution I'll tell you

00:20:25,339 --> 00:20:29,509
the next solution here in a couple

00:20:26,779 --> 00:20:32,869
slides another scenario that we ran into

00:20:29,509 --> 00:20:34,820
there was also on moves we had our move

00:20:32,869 --> 00:20:37,519
paka lips on the other side of things

00:20:34,820 --> 00:20:39,589
was the chat paka lips we thought I

00:20:37,519 --> 00:20:43,159
we're making a lot more moves will never

00:20:39,589 --> 00:20:45,349
have to fix chats we did end up having

00:20:43,159 --> 00:20:47,989
to fix chats especially when we sharted

00:20:45,349 --> 00:20:49,879
what happened again was the fact that

00:20:47,989 --> 00:20:52,339
when we started our database we had to

00:20:49,879 --> 00:20:53,960
have an ID generator and what we put in

00:20:52,339 --> 00:20:56,269
place was an ID generator and we said

00:20:53,960 --> 00:20:58,279
let's make sure that the first idea that

00:20:56,269 --> 00:20:59,899
it generates is far enough away from the

00:20:58,279 --> 00:21:01,519
last ID generator that was auto

00:20:59,899 --> 00:21:04,789
incrementing in the my sequel tape and

00:21:01,519 --> 00:21:07,669
they the main my sequel table so it was

00:21:04,789 --> 00:21:09,950
supposed to be bumped by 10 million or

00:21:07,669 --> 00:21:13,190
100 million i think somebody added an

00:21:09,950 --> 00:21:16,239
extra 0 or two in there and so all of a

00:21:13,190 --> 00:21:19,700
sudden we were bumping over the integer

00:21:16,239 --> 00:21:21,619
integer value on the server side the

00:21:19,700 --> 00:21:24,769
clients were not updated to handle the

00:21:21,619 --> 00:21:26,539
server saw the larger value and again we

00:21:24,769 --> 00:21:28,759
ran into that problem of very angry

00:21:26,539 --> 00:21:32,649
people with their 99 cent app now no

00:21:28,759 --> 00:21:37,099
longer able to chat in their apps so

00:21:32,649 --> 00:21:41,210
they will let you know this is what it

00:21:37,099 --> 00:21:43,609
looked like each evening so we've got ya

00:21:41,210 --> 00:21:47,419
December 20th 21st 22nd it's when this

00:21:43,609 --> 00:21:49,399
is probably 2009 maybe 2000 this was

00:21:47,419 --> 00:21:51,529
probably 2010 we were stealing still

00:21:49,399 --> 00:21:53,479
dealing with some of that now that would

00:21:51,529 --> 00:21:56,929
have been 2009 to deal with looking like

00:21:53,479 --> 00:21:58,609
this we found that we were right bound

00:21:56,929 --> 00:22:00,559
so we had gone through and we're trying

00:21:58,609 --> 00:22:02,809
to find you know what is the problem why

00:22:00,559 --> 00:22:05,509
can't we why can't we just do more and

00:22:02,809 --> 00:22:08,149
so when we began analyzing what had

00:22:05,509 --> 00:22:10,249
happened we were using some cash columns

00:22:08,149 --> 00:22:12,259
so rails makes it very easy to go ahead

00:22:10,249 --> 00:22:15,169
and cash these values and we'll store it

00:22:12,259 --> 00:22:16,759
in a database column for you so we were

00:22:15,169 --> 00:22:19,700
storing on the game what was the last

00:22:16,759 --> 00:22:22,609
move user ID we wanted to know who made

00:22:19,700 --> 00:22:24,499
the last move on the user what was your

00:22:22,609 --> 00:22:24,990
last move that you made and the reason

00:22:24,499 --> 00:22:28,050
for this we

00:22:24,990 --> 00:22:29,970
so that when the client would the client

00:22:28,050 --> 00:22:31,890
sits and pulls the server to say hey is

00:22:29,970 --> 00:22:33,929
there anything new since the last time I

00:22:31,890 --> 00:22:35,940
checked and here's the last thing that I

00:22:33,929 --> 00:22:37,440
know about so it was just really easy if

00:22:35,940 --> 00:22:38,760
we just say hey let's just store the

00:22:37,440 --> 00:22:41,910
last thing that you know about so when

00:22:38,760 --> 00:22:44,040
you pull us we will just look it up and

00:22:41,910 --> 00:22:45,450
say okay this he sent me this and we

00:22:44,040 --> 00:22:47,280
look on the table nope there's something

00:22:45,450 --> 00:22:49,260
bigger than that we'll send it back well

00:22:47,280 --> 00:22:52,190
the problem was that every move you made

00:22:49,260 --> 00:22:55,380
meant that you had for database rights

00:22:52,190 --> 00:22:57,929
which again works that the smaller scale

00:22:55,380 --> 00:23:00,720
doesn't work at the big scale so we

00:22:57,929 --> 00:23:03,350
started looking for ways to oh man we

00:23:00,720 --> 00:23:08,070
start looking at ways to to improve this

00:23:03,350 --> 00:23:10,350
and moving a bunch of it to catch that

00:23:08,070 --> 00:23:12,330
should have been cash and the the

00:23:10,350 --> 00:23:14,250
frustrating thing is when I proof read

00:23:12,330 --> 00:23:19,470
it earlier I said I'm going to fix that

00:23:14,250 --> 00:23:23,330
and I did not so we also have run into

00:23:19,470 --> 00:23:27,150
things like 512 simultaneous connections

00:23:23,330 --> 00:23:29,850
on my sequel database so being able to

00:23:27,150 --> 00:23:31,500
to have those connections writing to to

00:23:29,850 --> 00:23:34,920
my sequel to our my sequel databases

00:23:31,500 --> 00:23:36,960
which sounds who's going to hit 512 well

00:23:34,920 --> 00:23:41,460
when you have 200 servers running 35

00:23:36,960 --> 00:23:42,870
unicorns and you've got workers also all

00:23:41,460 --> 00:23:44,820
trying to connect to those databases

00:23:42,870 --> 00:23:47,550
it's not hard for you to run over that

00:23:44,820 --> 00:23:48,900
that limit so we put into play some

00:23:47,550 --> 00:23:53,700
connection pooling that we could make

00:23:48,900 --> 00:23:56,160
use of so that was a fun one I I should

00:23:53,700 --> 00:23:58,530
have at least put some charts on there

00:23:56,160 --> 00:24:00,150
that would have shown how much some of

00:23:58,530 --> 00:24:02,820
the improvements it is it is fun to see

00:24:00,150 --> 00:24:07,080
these though because it was just painful

00:24:02,820 --> 00:24:09,960
time so how did we deal with the move

00:24:07,080 --> 00:24:12,570
pakka lips and how did we deal with the

00:24:09,960 --> 00:24:15,690
the growing size of our databases so we

00:24:12,570 --> 00:24:17,940
kept all of the moves around so every

00:24:15,690 --> 00:24:20,100
move that's been made from the beginning

00:24:17,940 --> 00:24:22,320
of chess with friends is still around

00:24:20,100 --> 00:24:26,100
somewhere all of your games are still

00:24:22,320 --> 00:24:27,929
around somewhere and we started off you

00:24:26,100 --> 00:24:29,550
some of you may recognize this from your

00:24:27,929 --> 00:24:32,010
rails world we start off with a moves

00:24:29,550 --> 00:24:34,350
table because that's the default rails

00:24:32,010 --> 00:24:36,900
you just you if you have a move model

00:24:34,350 --> 00:24:38,429
you've got two moves table when we had

00:24:36,900 --> 00:24:41,039
to move paka lips

00:24:38,429 --> 00:24:43,590
we tried to the original solution was

00:24:41,039 --> 00:24:45,389
let's just create a new table will copy

00:24:43,590 --> 00:24:47,309
everything over there and it'll just

00:24:45,389 --> 00:24:49,320
work well like I said half way through

00:24:47,309 --> 00:24:51,629
the copy it didn't work so the next

00:24:49,320 --> 00:24:53,730
solution was this is how we came to this

00:24:51,629 --> 00:24:55,830
one was partitioning let's just create a

00:24:53,730 --> 00:24:57,840
new table it will cut be called the

00:24:55,830 --> 00:24:59,879
bigint table and we'll put in some logic

00:24:57,840 --> 00:25:01,649
that says if you're an ID greater than X

00:24:59,879 --> 00:25:03,389
then you're going to go to the bigot

00:25:01,649 --> 00:25:04,860
table and you're going to find your move

00:25:03,389 --> 00:25:06,779
data there if you're less than this and

00:25:04,860 --> 00:25:09,720
you'll end up in the moves table which

00:25:06,779 --> 00:25:12,139
was great but we quickly found out that

00:25:09,720 --> 00:25:14,519
we started filling those tables up and

00:25:12,139 --> 00:25:16,830
they just got slower and slower and

00:25:14,519 --> 00:25:19,980
slower so we already had this mechanism

00:25:16,830 --> 00:25:21,749
in place to partition the tables and so

00:25:19,980 --> 00:25:23,399
we said well let's just make one more

00:25:21,749 --> 00:25:25,379
table let me that let me just tell you

00:25:23,399 --> 00:25:27,629
these tables did not all originally

00:25:25,379 --> 00:25:31,619
exist we started with moves we got too

00:25:27,629 --> 00:25:34,049
big it moves the third table one of the

00:25:31,619 --> 00:25:35,850
developers thought let's just come up

00:25:34,049 --> 00:25:37,590
with a fun name bigint moves was it very

00:25:35,850 --> 00:25:40,110
entertaining how about the make you want

00:25:37,590 --> 00:25:43,649
two moves table that seems like a great

00:25:40,110 --> 00:25:44,970
idea until you get ready to query the

00:25:43,649 --> 00:25:46,440
database and every time you want to

00:25:44,970 --> 00:25:51,090
select something from the make you want

00:25:46,440 --> 00:25:54,629
to moves table hence the fourth one was

00:25:51,090 --> 00:25:55,919
dumb moves table much easier to decree

00:25:54,629 --> 00:25:58,850
from the database if you only have to

00:25:55,919 --> 00:26:01,940
type the underscore so we got that

00:25:58,850 --> 00:26:04,950
continuing on we've got smooth moves

00:26:01,940 --> 00:26:06,720
we've got night moves and then the final

00:26:04,950 --> 00:26:10,200
iteration of that and this is the move

00:26:06,720 --> 00:26:13,619
table that is now sharted across the 125

00:26:10,200 --> 00:26:16,980
plus my sequel tables is dance moves so

00:26:13,619 --> 00:26:19,049
now if you are a one of the database are

00:26:16,980 --> 00:26:20,759
the dbas you get to look in the table

00:26:19,049 --> 00:26:23,490
structure and you find a dance moves

00:26:20,759 --> 00:26:25,259
table out there and you probably have to

00:26:23,490 --> 00:26:29,309
scratch your head and go what was going

00:26:25,259 --> 00:26:31,619
on the other interesting thing about

00:26:29,309 --> 00:26:33,029
this is we couldn't at some point we

00:26:31,619 --> 00:26:35,429
couldn't keep these all on the same

00:26:33,029 --> 00:26:37,440
machine they were just getting too big

00:26:35,429 --> 00:26:39,690
and too big early on our solution was

00:26:37,440 --> 00:26:41,730
just throw more hardware at it so

00:26:39,690 --> 00:26:44,549
actually not more hardware throw bigger

00:26:41,730 --> 00:26:46,679
hardware at it so as we're at rails

00:26:44,549 --> 00:26:48,179
machine as we're growing and they were

00:26:46,679 --> 00:26:49,679
saying your date your database is just

00:26:48,179 --> 00:26:52,140
isn't it's not big enough it can't keep

00:26:49,679 --> 00:26:53,850
all the everything in memory you

00:26:52,140 --> 00:26:55,860
you don't have enough disk space we said

00:26:53,850 --> 00:26:57,780
well can you solve that prop for us and

00:26:55,860 --> 00:27:00,030
they said yes we can we'll just get a

00:26:57,780 --> 00:27:01,620
bigger machine and then we'd go through

00:27:00,030 --> 00:27:03,720
that that dance again and they'd say

00:27:01,620 --> 00:27:05,100
it's just if you're having problems can

00:27:03,720 --> 00:27:06,900
you solve it you need a bigger machine

00:27:05,100 --> 00:27:10,770
and so we went and continue to do that

00:27:06,900 --> 00:27:12,360
until we had pretty much maxed out the

00:27:10,770 --> 00:27:15,150
size of the database that we could get

00:27:12,360 --> 00:27:17,190
and that by that time we were getting

00:27:15,150 --> 00:27:19,350
ready to we were moving into the ding a

00:27:17,190 --> 00:27:22,980
data center so sharding became a lot

00:27:19,350 --> 00:27:25,260
more a possibility at that point the

00:27:22,980 --> 00:27:27,330
other interesting thing with tables that

00:27:25,260 --> 00:27:29,430
moves tables chats tables users tables

00:27:27,330 --> 00:27:31,440
all these tables that are this size one

00:27:29,430 --> 00:27:34,590
of the problems you run into is that you

00:27:31,440 --> 00:27:36,330
just can't add a new column at least not

00:27:34,590 --> 00:27:38,460
in the my sequel world where you can

00:27:36,330 --> 00:27:41,040
just say hey go alter this table add a

00:27:38,460 --> 00:27:43,440
new column so that i can start tracking

00:27:41,040 --> 00:27:47,850
this data one of the solutions we found

00:27:43,440 --> 00:27:49,500
up found was eventually we had on at

00:27:47,850 --> 00:27:51,690
least on the moves table and on the

00:27:49,500 --> 00:27:55,050
games table we had this generic text

00:27:51,690 --> 00:27:56,880
column that we said hey it's generic we

00:27:55,050 --> 00:28:00,180
can use for use it for whatever we want

00:27:56,880 --> 00:28:01,920
let's just store json in it so we just

00:28:00,180 --> 00:28:05,850
start sticking json in it and so now we

00:28:01,920 --> 00:28:07,920
have a document store inside of our my

00:28:05,850 --> 00:28:10,680
sequel database so we can stick stuff in

00:28:07,920 --> 00:28:16,140
there too and get around the problem of

00:28:10,680 --> 00:28:19,490
having to having to add new columns so

00:28:16,140 --> 00:28:22,920
sharding how many have sharted databases

00:28:19,490 --> 00:28:24,660
yeah a few of you it's not fun it's a

00:28:22,920 --> 00:28:26,370
little bit scary I mean just the whole

00:28:24,660 --> 00:28:28,800
terminology my favorite quote was from

00:28:26,370 --> 00:28:32,370
John nunamaker who's saying he hated the

00:28:28,800 --> 00:28:35,550
word shard he said it sounded so

00:28:32,370 --> 00:28:38,760
dangerous and part and pointy and it's

00:28:35,550 --> 00:28:40,440
just the way John is but yeah like I

00:28:38,760 --> 00:28:42,150
said we SAT around early on and talked

00:28:40,440 --> 00:28:44,430
about what do we partition do we shard

00:28:42,150 --> 00:28:47,790
now can we come up with something that

00:28:44,430 --> 00:28:49,620
we can that we can some solution where

00:28:47,790 --> 00:28:51,000
we're sharding was the answer and we

00:28:49,620 --> 00:28:53,010
actually pushed it off for as long as

00:28:51,000 --> 00:28:55,230
possible eventually once we're in the

00:28:53,010 --> 00:28:57,480
zynga datacenter we couldn't continue

00:28:55,230 --> 00:29:00,810
adding more machines just the cost of

00:28:57,480 --> 00:29:03,000
that at some point we were 5 to 10 of

00:29:00,810 --> 00:29:05,760
these large beefy database machines and

00:29:03,000 --> 00:29:08,580
we just could not sustain the cost

00:29:05,760 --> 00:29:10,920
of buying those machines and running

00:29:08,580 --> 00:29:13,350
those machines so we did have to deal

00:29:10,920 --> 00:29:16,290
with sharding fortunately for us by that

00:29:13,350 --> 00:29:18,300
point Zynga has a lot of experience

00:29:16,290 --> 00:29:21,150
sharding databases so they were able to

00:29:18,300 --> 00:29:22,920
come in and help us get the hardware up

00:29:21,150 --> 00:29:25,140
and running come up with strategies of

00:29:22,920 --> 00:29:26,310
how we're going to shard we did end up

00:29:25,140 --> 00:29:30,330
with about a hundred and twenty

00:29:26,310 --> 00:29:32,490
five-plus primary are shards that we

00:29:30,330 --> 00:29:36,360
were dealing with that all have a backup

00:29:32,490 --> 00:29:39,870
so that we can fail over to those let's

00:29:36,360 --> 00:29:41,400
see how do we get there well we had

00:29:39,870 --> 00:29:43,680
these large databases had these large

00:29:41,400 --> 00:29:47,070
tables and now all of a sudden we have

00:29:43,680 --> 00:29:49,560
these 125 + databases with smaller

00:29:47,070 --> 00:29:51,780
tables and we needed to make sure that

00:29:49,560 --> 00:29:53,130
the sharding that we had set up was

00:29:51,780 --> 00:29:55,080
working and I think somebody mentioned

00:29:53,130 --> 00:29:57,000
it yesterday that as we sharted the

00:29:55,080 --> 00:29:58,830
databases we would start double writing

00:29:57,000 --> 00:30:01,410
somebody was talking about it with their

00:29:58,830 --> 00:30:04,050
services but we would actually double

00:30:01,410 --> 00:30:06,150
right to both tables the main table that

00:30:04,050 --> 00:30:08,040
we were using and to the the newly

00:30:06,150 --> 00:30:10,200
sharded tables to make sure that

00:30:08,040 --> 00:30:12,360
everything was working when we were

00:30:10,200 --> 00:30:14,340
confident that the data was being

00:30:12,360 --> 00:30:16,470
written correctly to both sets of the

00:30:14,340 --> 00:30:18,540
data we would then switch it over from

00:30:16,470 --> 00:30:20,190
where the reeds were happening the reeds

00:30:18,540 --> 00:30:21,900
would then happen off of the sharted

00:30:20,190 --> 00:30:25,770
tables and but we were still double

00:30:21,900 --> 00:30:27,480
writing to the older tables and then at

00:30:25,770 --> 00:30:29,100
some point we'd say okay we're confident

00:30:27,480 --> 00:30:31,830
this is working we can shut down the

00:30:29,100 --> 00:30:36,060
older writing to the older tables and we

00:30:31,830 --> 00:30:38,250
will run primarily off of the sharted

00:30:36,060 --> 00:30:41,010
tables we also went through the effort

00:30:38,250 --> 00:30:43,410
of back filling all of the data so we

00:30:41,010 --> 00:30:45,900
were taking all of the data out of the

00:30:43,410 --> 00:30:48,330
older tables that were on these those

00:30:45,900 --> 00:30:50,370
other six or five different tables that

00:30:48,330 --> 00:30:52,770
were out there we took all that data and

00:30:50,370 --> 00:30:54,210
put it on the shards so that we had all

00:30:52,770 --> 00:30:56,310
the data there and that way we could

00:30:54,210 --> 00:30:58,680
decommission those large machines that

00:30:56,310 --> 00:31:02,430
were really only sitting around to serve

00:30:58,680 --> 00:31:05,040
up moves tables moves data we also used

00:31:02,430 --> 00:31:07,530
a one of the problems you run into a

00:31:05,040 --> 00:31:09,780
sharding is now which you had been using

00:31:07,530 --> 00:31:13,500
for auto incrementing IDs no longer

00:31:09,780 --> 00:31:17,010
works because 125 different mice equals

00:31:13,500 --> 00:31:18,750
all saying my next idea is to isn't

00:31:17,010 --> 00:31:19,740
quite going to work so we moved to Redis

00:31:18,750 --> 00:31:25,230
for its unique ID

00:31:19,740 --> 00:31:27,950
generation using us to to generate IDs

00:31:25,230 --> 00:31:31,200
for all of our different shorted tables

00:31:27,950 --> 00:31:33,890
early on we didn't have any cashing it

00:31:31,200 --> 00:31:36,300
was basically a single rail server

00:31:33,890 --> 00:31:38,790
eventually we would we would add more

00:31:36,300 --> 00:31:40,679
rail servers that was how we scaled but

00:31:38,790 --> 00:31:42,150
we didn't have any caching when we were

00:31:40,679 --> 00:31:43,950
dealing with rails machine they were

00:31:42,150 --> 00:31:45,900
very good about coming in and helping us

00:31:43,950 --> 00:31:48,360
set up some caching we set up memcache

00:31:45,900 --> 00:31:51,240
we would look for the problem areas we

00:31:48,360 --> 00:31:53,010
used New Relic to find problem areas and

00:31:51,240 --> 00:31:55,140
then go and attack that problem and say

00:31:53,010 --> 00:31:57,990
okay what in here can I cash those

00:31:55,140 --> 00:32:00,750
things like the the last move user ID

00:31:57,990 --> 00:32:03,210
we'd cash that excuse me we'd find other

00:32:00,750 --> 00:32:05,820
other areas in ink and cash those

00:32:03,210 --> 00:32:08,610
nowadays we cash a lot more we've got

00:32:05,820 --> 00:32:11,760
like I said 70 plus mem cache server so

00:32:08,610 --> 00:32:13,830
we keep as much in memory as we can and

00:32:11,760 --> 00:32:17,070
so we're trying to catch that has

00:32:13,830 --> 00:32:18,030
definitely improved it to reduce the

00:32:17,070 --> 00:32:23,730
number of times that we're actually

00:32:18,030 --> 00:32:25,860
having to to hit the database we use

00:32:23,730 --> 00:32:28,500
cash money plugin we've migrated it to

00:32:25,860 --> 00:32:31,770
rails 32 we've done a lot of tweaks on

00:32:28,500 --> 00:32:33,000
our side to actually get it working with

00:32:31,770 --> 00:32:36,090
a lot of the things that we're doing

00:32:33,000 --> 00:32:37,679
internally so I don't think that the

00:32:36,090 --> 00:32:39,360
changes all the changes we've made have

00:32:37,679 --> 00:32:41,940
been contributed back but we were using

00:32:39,360 --> 00:32:44,640
cash money initially and we have some

00:32:41,940 --> 00:32:47,630
now hybrid of that going forward thanks

00:32:44,640 --> 00:32:50,040
to to be careful with with caching

00:32:47,630 --> 00:32:51,630
expiration times so how long is

00:32:50,040 --> 00:32:53,370
something going to live in the cache are

00:32:51,630 --> 00:32:55,800
you going to if it goes away what are

00:32:53,370 --> 00:32:58,500
your cache misses look like those type

00:32:55,800 --> 00:33:00,570
of things growing the cash pool is

00:32:58,500 --> 00:33:02,640
interesting because when you add more

00:33:00,570 --> 00:33:03,990
servers now your algorithm of trying to

00:33:02,640 --> 00:33:06,809
figure out where something should be in

00:33:03,990 --> 00:33:08,250
the cache changes so adding more servers

00:33:06,809 --> 00:33:09,870
doesn't mean you immediately see a

00:33:08,250 --> 00:33:12,140
performance boost now you've got empty

00:33:09,870 --> 00:33:15,270
caches that have to fill themselves

00:33:12,140 --> 00:33:17,400
watching out for cached versions so this

00:33:15,270 --> 00:33:19,530
version out there may be cached version

00:33:17,400 --> 00:33:21,540
number one but you since made some

00:33:19,530 --> 00:33:23,280
changes to that and you increment it its

00:33:21,540 --> 00:33:25,530
cache version or you were supposed to

00:33:23,280 --> 00:33:28,440
increment the catch version and now it's

00:33:25,530 --> 00:33:30,120
cached version two but if you forget

00:33:28,440 --> 00:33:32,220
that and we've run into this problem a

00:33:30,120 --> 00:33:33,170
few times where you forget to increment

00:33:32,220 --> 00:33:34,910
the cache version

00:33:33,170 --> 00:33:37,340
all of a sudden the version it's getting

00:33:34,910 --> 00:33:40,640
out of cash is the wrong version and

00:33:37,340 --> 00:33:43,430
can't it ends up breaking the last one

00:33:40,640 --> 00:33:46,700
is was a fun story was don't actually

00:33:43,430 --> 00:33:48,440
accidentally flush the entire cash for

00:33:46,700 --> 00:33:49,850
your system your databases will probably

00:33:48,440 --> 00:33:51,410
not like you when everybody all of a

00:33:49,850 --> 00:33:54,110
sudden says oh I've got to go load this

00:33:51,410 --> 00:33:57,860
from the database one day I was sitting

00:33:54,110 --> 00:33:59,450
around and we were watching the service

00:33:57,860 --> 00:34:01,220
and all of a sudden you get these alerts

00:33:59,450 --> 00:34:03,710
that go off and you look on New Relic

00:34:01,220 --> 00:34:05,780
and everything's red because the service

00:34:03,710 --> 00:34:07,130
has gone down and we're all scrambling

00:34:05,780 --> 00:34:09,140
to figure out what happened and we

00:34:07,130 --> 00:34:11,929
finally realized that for some reason

00:34:09,140 --> 00:34:14,240
the all the cash hits we were just

00:34:11,929 --> 00:34:15,650
everything's a cache miss and finally

00:34:14,240 --> 00:34:19,550
figured out that what somebody had done

00:34:15,650 --> 00:34:21,620
was we had we had set up our environment

00:34:19,550 --> 00:34:23,240
we had these configuration files and

00:34:21,620 --> 00:34:25,280
made it very easy to set up development

00:34:23,240 --> 00:34:26,780
environments based off of the the

00:34:25,280 --> 00:34:28,100
configuration files and a lot of times

00:34:26,780 --> 00:34:29,990
what you would do is just copy an

00:34:28,100 --> 00:34:31,940
existing environments configuration file

00:34:29,990 --> 00:34:34,160
for your new development environment

00:34:31,940 --> 00:34:35,419
somebody had done that and copied their

00:34:34,160 --> 00:34:37,580
development had copied their

00:34:35,419 --> 00:34:39,140
configuration file and the configuration

00:34:37,580 --> 00:34:41,660
file for memcache they'd used was the

00:34:39,140 --> 00:34:43,280
production memcache configuration and

00:34:41,660 --> 00:34:45,590
they were trying to do some stuff and

00:34:43,280 --> 00:34:48,110
decided to do a dollar sign flesh or

00:34:45,590 --> 00:34:51,620
cash flush and had flushed the the

00:34:48,110 --> 00:34:56,960
entire production server cache so that's

00:34:51,620 --> 00:35:01,070
a fun one but you recover you can you

00:34:56,960 --> 00:35:04,250
can get over it it does work let's see

00:35:01,070 --> 00:35:05,630
caching we're also using Redis so we use

00:35:04,250 --> 00:35:08,900
the reddest Jim we're using the reddest

00:35:05,630 --> 00:35:09,980
server I love Redis it's great we've

00:35:08,900 --> 00:35:13,400
been able to move a lot of our

00:35:09,980 --> 00:35:15,710
background processing 22 Redis for and

00:35:13,400 --> 00:35:17,840
rescue for things like Apple push

00:35:15,710 --> 00:35:20,660
notifications so basically we every time

00:35:17,840 --> 00:35:22,190
you make a move we send out a push

00:35:20,660 --> 00:35:24,680
notification to let your opponent move

00:35:22,190 --> 00:35:27,740
it's now your know that it's now your

00:35:24,680 --> 00:35:29,360
turn so we cue those up facebook queries

00:35:27,740 --> 00:35:30,950
when we want to find out you know and

00:35:29,360 --> 00:35:33,230
let you know that your Facebook friends

00:35:30,950 --> 00:35:35,360
are now playing words with friends or

00:35:33,230 --> 00:35:37,070
gems with friends we cue that up so that

00:35:35,360 --> 00:35:39,890
we can go query facebook and find out

00:35:37,070 --> 00:35:41,690
who all's playing but we only do it as

00:35:39,890 --> 00:35:43,850
needed so again this is another one of

00:35:41,690 --> 00:35:45,710
those strategies of where am i where am

00:35:43,850 --> 00:35:47,150
I bottlenecks what are the problems that

00:35:45,710 --> 00:35:48,829
I'm running into can I move

00:35:47,150 --> 00:35:50,990
at off and this Redis and rescue have

00:35:48,829 --> 00:35:53,390
been a great tool for sending that up

00:35:50,990 --> 00:35:55,160
like I mentioned we've got to reddit

00:35:53,390 --> 00:35:57,260
servers we use them for ID generation

00:35:55,160 --> 00:35:59,270
for the my sequel tables we're also

00:35:57,260 --> 00:36:00,980
using them for the 40-plus workers that

00:35:59,270 --> 00:36:06,170
we have processing these risks these

00:36:00,980 --> 00:36:07,700
background queues at scale let's see so

00:36:06,170 --> 00:36:10,640
problems tend to reveal themselves at

00:36:07,700 --> 00:36:14,029
scale it's fun because the works on my

00:36:10,640 --> 00:36:15,440
machine the only gets you so far but

00:36:14,029 --> 00:36:17,690
when you push it out to production and

00:36:15,440 --> 00:36:20,720
all of a sudden 10 million people start

00:36:17,690 --> 00:36:24,109
hitting that that that feature and it

00:36:20,720 --> 00:36:25,670
crashes you'll be very sad when to see

00:36:24,109 --> 00:36:29,210
that reddit that new relic chart or

00:36:25,670 --> 00:36:31,490
whatever the chart is go red so we we

00:36:29,210 --> 00:36:33,589
tend to roll things out not only

00:36:31,490 --> 00:36:36,069
performance improvements or just any

00:36:33,589 --> 00:36:39,170
feature we use something called roll out

00:36:36,069 --> 00:36:41,450
that we can check to see is this feature

00:36:39,170 --> 00:36:43,490
live so is when we are rolling out the

00:36:41,450 --> 00:36:45,710
sharding we would say is the sharding

00:36:43,490 --> 00:36:48,319
live if the shoutings live then let's go

00:36:45,710 --> 00:36:50,240
ahead and start writing to the table and

00:36:48,319 --> 00:36:52,490
we can ramp it up with like one percent

00:36:50,240 --> 00:36:54,440
to make sure it's okay two percent five

00:36:52,490 --> 00:36:57,079
percent what does it look like and just

00:36:54,440 --> 00:36:59,270
keep watching the charts as we ramp it

00:36:57,079 --> 00:37:00,799
up and this allows us to roll back and

00:36:59,270 --> 00:37:03,079
turn off features if we see that they're

00:37:00,799 --> 00:37:06,740
not working correctly so that's been a

00:37:03,079 --> 00:37:08,510
big benefit for us to be able to roll

00:37:06,740 --> 00:37:14,109
things out and roll things back as well

00:37:08,510 --> 00:37:17,450
when something doesn't work let's see

00:37:14,109 --> 00:37:20,690
okay instrument the little things so at

00:37:17,450 --> 00:37:24,829
scale five milliseconds two milliseconds

00:37:20,690 --> 00:37:27,289
may not seem like a big deal but you do

00:37:24,829 --> 00:37:29,210
want to go and see okay where am I

00:37:27,289 --> 00:37:30,710
spinning the most amount of time one of

00:37:29,210 --> 00:37:32,809
the things we tracked down was okay it's

00:37:30,710 --> 00:37:34,730
it's taking it's hard to see in this

00:37:32,809 --> 00:37:38,510
chart but it's taking two milliseconds

00:37:34,730 --> 00:37:40,400
to to process the move to xml so we were

00:37:38,510 --> 00:37:42,049
still using the default to xml from

00:37:40,400 --> 00:37:46,069
active record instead of generating the

00:37:42,049 --> 00:37:48,260
xml programmatically for us and in the

00:37:46,069 --> 00:37:51,890
user the user was cut was taking about

00:37:48,260 --> 00:37:53,569
five milliseconds so again we look at

00:37:51,890 --> 00:37:55,460
and we say well what's the what problem

00:37:53,569 --> 00:37:56,779
should they attack should i attack the

00:37:55,460 --> 00:37:58,609
user because it's taking five

00:37:56,779 --> 00:38:00,440
milliseconds or should i attack the the

00:37:58,609 --> 00:38:00,980
move generation because it's taking two

00:38:00,440 --> 00:38:03,140
millisecond

00:38:00,980 --> 00:38:05,600
but when you look at the volume I'm

00:38:03,140 --> 00:38:07,310
doing a lot more moves so it probably

00:38:05,600 --> 00:38:09,230
makes more sense for me to attack that

00:38:07,310 --> 00:38:12,020
and try and prove that also come back

00:38:09,230 --> 00:38:13,609
and and fix the move but but being able

00:38:12,020 --> 00:38:16,609
to do things New Relic made it very easy

00:38:13,609 --> 00:38:18,320
to add traces to see how things were how

00:38:16,609 --> 00:38:20,150
long things were taking we would build

00:38:18,320 --> 00:38:22,790
custom charts to go and watch those

00:38:20,150 --> 00:38:24,619
again as we rolled out features we would

00:38:22,790 --> 00:38:26,750
go and watch those charts to see that

00:38:24,619 --> 00:38:28,310
okay at we rolled out this feature we're

00:38:26,750 --> 00:38:30,140
ramping it up what are what sort of

00:38:28,310 --> 00:38:32,780
improvement so we're constantly modern

00:38:30,140 --> 00:38:37,460
monitoring the improvement of the

00:38:32,780 --> 00:38:41,270
service as we go along deploying with

00:38:37,460 --> 00:38:43,609
confidence early on is the we were just

00:38:41,270 --> 00:38:46,310
a bunch of guys in a room or like a

00:38:43,609 --> 00:38:48,800
we'll just well push things out we

00:38:46,310 --> 00:38:51,710
didn't have any tests so rails generate

00:38:48,800 --> 00:38:54,050
scaffold just generate tests for you it

00:38:51,710 --> 00:38:56,990
turns out it doesn't actually tell you

00:38:54,050 --> 00:38:58,820
anything so we had tests but they

00:38:56,990 --> 00:39:01,100
weren't they weren't doing anything for

00:38:58,820 --> 00:39:03,530
us so pushing things out deploying with

00:39:01,100 --> 00:39:05,660
no tests gave us no confidence we

00:39:03,530 --> 00:39:07,640
eventually started adding test we didn't

00:39:05,660 --> 00:39:10,700
go and rewrite tez or write test for the

00:39:07,640 --> 00:39:12,920
entire application we just as we added

00:39:10,700 --> 00:39:14,950
new as we added new code or we

00:39:12,920 --> 00:39:17,540
refactored code we made sure that it had

00:39:14,950 --> 00:39:19,730
tests to go with it we used a

00:39:17,540 --> 00:39:23,300
combination of our spec we use cucumber

00:39:19,730 --> 00:39:27,350
to do some actual integration testing

00:39:23,300 --> 00:39:29,000
and now any code that gets pushed when

00:39:27,350 --> 00:39:31,010
we get a pull request if that pull

00:39:29,000 --> 00:39:33,350
request does not have the associated

00:39:31,010 --> 00:39:35,720
tests with it it doesn't it get merged

00:39:33,350 --> 00:39:37,640
in if the test suite does not the entire

00:39:35,720 --> 00:39:39,619
test suite doesn't pass it doesn't get

00:39:37,640 --> 00:39:41,630
pushed out to production so we have a

00:39:39,619 --> 00:39:43,820
lot more confidence that we can push

00:39:41,630 --> 00:39:45,650
things out and not break it that being

00:39:43,820 --> 00:39:47,810
said it doesn't mean it everything gets

00:39:45,650 --> 00:39:49,340
caught in the test there are still

00:39:47,810 --> 00:39:52,190
instances where they obviously

00:39:49,340 --> 00:39:53,740
supporting six different game types we

00:39:52,190 --> 00:39:56,570
do run into those scenarios where

00:39:53,740 --> 00:39:58,400
something may slip through but we we can

00:39:56,570 --> 00:40:00,590
catch those early right the test for

00:39:58,400 --> 00:40:02,030
those scenarios and be confident that

00:40:00,590 --> 00:40:04,730
the next time we deploy we haven't

00:40:02,030 --> 00:40:09,440
broken the existing games or any of the

00:40:04,730 --> 00:40:13,070
other games as well failing early we

00:40:09,440 --> 00:40:14,420
were very good at this this one right

00:40:13,070 --> 00:40:16,400
here

00:40:14,420 --> 00:40:19,579
i think if i remember correctly this

00:40:16,400 --> 00:40:22,339
chart was we did we would do things like

00:40:19,579 --> 00:40:25,520
caching off the number of games that you

00:40:22,339 --> 00:40:27,770
had that you had played basically we

00:40:25,520 --> 00:40:30,710
would cash off I think in a in a list of

00:40:27,770 --> 00:40:33,680
all your game IDs based on your ID that

00:40:30,710 --> 00:40:36,440
was a fun one but for those anybody pay

00:40:33,680 --> 00:40:37,970
playplace pass and play in their games

00:40:36,440 --> 00:40:39,680
where you just play the game you hand it

00:40:37,970 --> 00:40:41,540
over to a friend they play there's a few

00:40:39,680 --> 00:40:44,329
of you that pass and played user

00:40:41,540 --> 00:40:47,569
actually exists on the database its ID

00:40:44,329 --> 00:40:51,500
number four okay anybody see where this

00:40:47,569 --> 00:40:53,270
is going pass and play was a fairly

00:40:51,500 --> 00:40:54,650
popular thing that people would do I

00:40:53,270 --> 00:40:56,329
always thought you'd play with people on

00:40:54,650 --> 00:40:58,190
the internet but a lot of people start

00:40:56,329 --> 00:41:00,020
pass and play games and they'd hand it

00:40:58,190 --> 00:41:01,940
over and so we have a lot of pass and

00:41:00,020 --> 00:41:04,339
play games on the internet and when you

00:41:01,940 --> 00:41:06,589
start when you start trying to cash

00:41:04,339 --> 00:41:09,079
things like give me all the the game IDs

00:41:06,589 --> 00:41:11,720
for the pass and play user you can take

00:41:09,079 --> 00:41:13,730
down your databases so there were little

00:41:11,720 --> 00:41:15,859
things like that we're like OB shirt in

00:41:13,730 --> 00:41:17,150
your test to exclude the tatt the pass

00:41:15,859 --> 00:41:21,559
and play user when you want to catch

00:41:17,150 --> 00:41:23,930
something little things like that also a

00:41:21,559 --> 00:41:26,450
little note of trivia pass and play user

00:41:23,930 --> 00:41:28,579
is number for facebook user number for

00:41:26,450 --> 00:41:35,329
anybody know who Facebook ID number four

00:41:28,579 --> 00:41:38,750
is it is Mark Zuckerberg so you have to

00:41:35,329 --> 00:41:41,420
be careful that he what he is the pass

00:41:38,750 --> 00:41:42,740
and play user so yeah it was another

00:41:41,420 --> 00:41:44,390
thing when we added Facebook integration

00:41:42,740 --> 00:41:46,099
you had to make sure that you knew where

00:41:44,390 --> 00:41:47,119
that ID was coming from because you

00:41:46,099 --> 00:41:48,290
didn't want to all of a sudden let

00:41:47,119 --> 00:41:52,339
people know that they were starting a

00:41:48,290 --> 00:41:54,349
game with Mark Zuckerberg this was a big

00:41:52,339 --> 00:41:56,210
one that we got right early on was

00:41:54,349 --> 00:42:01,339
trying not to deploy before you wanted

00:41:56,210 --> 00:42:04,130
to go home yes if you want to get any if

00:42:01,339 --> 00:42:06,710
you want to get sleep you don't deploy

00:42:04,130 --> 00:42:08,390
before you go home we have now even back

00:42:06,710 --> 00:42:10,569
that up even more we don't deploy on

00:42:08,390 --> 00:42:13,490
Fridays not without special permission

00:42:10,569 --> 00:42:15,950
so now we don't deploy and leave for the

00:42:13,490 --> 00:42:17,630
weekend when everything can go wrong and

00:42:15,950 --> 00:42:19,579
typically what I found is that's when

00:42:17,630 --> 00:42:20,930
the users want everything to go wrong is

00:42:19,579 --> 00:42:23,569
when you're not there either on the

00:42:20,930 --> 00:42:25,880
weekend or in the evenings and again

00:42:23,569 --> 00:42:26,850
they'll let you know they're very

00:42:25,880 --> 00:42:29,340
adamant about it

00:42:26,850 --> 00:42:31,770
other things we've done when things do

00:42:29,340 --> 00:42:34,410
fail and did I have a few extra minutes

00:42:31,770 --> 00:42:37,260
is that okay I've just got a few more

00:42:34,410 --> 00:42:39,960
when things do fail being able to solve

00:42:37,260 --> 00:42:41,760
them on the server has been a big big

00:42:39,960 --> 00:42:44,820
advantage for us it's also kind of funny

00:42:41,760 --> 00:42:46,740
the client rollout cycle obviously for

00:42:44,820 --> 00:42:48,780
those of you who know iOS it's you got

00:42:46,740 --> 00:42:50,430
about a two week cycle if to get the app

00:42:48,780 --> 00:42:51,690
submitted and get it reviewed and get it

00:42:50,430 --> 00:42:54,000
pushed out and then hopefully people

00:42:51,690 --> 00:42:56,970
start updating so you have to be able to

00:42:54,000 --> 00:42:59,280
react fairly quickly on the on the

00:42:56,970 --> 00:43:02,100
server side one of the things that we

00:42:59,280 --> 00:43:04,070
found this was a little bit before I got

00:43:02,100 --> 00:43:07,170
there but still exists in the code today

00:43:04,070 --> 00:43:09,000
was there was a problem with one of the

00:43:07,170 --> 00:43:11,400
chess clients that went out that the

00:43:09,000 --> 00:43:12,660
data coming back was wrong or they

00:43:11,400 --> 00:43:14,640
couldn't handle the data that they were

00:43:12,660 --> 00:43:16,020
getting and so what they did was I said

00:43:14,640 --> 00:43:17,850
okay let's fix the data on the server

00:43:16,020 --> 00:43:19,890
side but we need to keep track of which

00:43:17,850 --> 00:43:23,250
users have already had their data fixed

00:43:19,890 --> 00:43:24,780
so that we can go forward so they said

00:43:23,250 --> 00:43:26,730
let's just add a timestamp in the

00:43:24,780 --> 00:43:28,620
database add a new column with a time

00:43:26,730 --> 00:43:30,390
stamp that says this user was fixed at

00:43:28,620 --> 00:43:34,140
this time and we know that we don't have

00:43:30,390 --> 00:43:36,720
to fix them being the developers that

00:43:34,140 --> 00:43:45,270
they were the tape the column name is

00:43:36,720 --> 00:43:47,640
unfucked at yes which into xml comes

00:43:45,270 --> 00:43:51,590
down so in the client code you do get

00:43:47,640 --> 00:43:54,410
that and it's still out there today

00:43:51,590 --> 00:43:57,410
keeping track of everybody who has been

00:43:54,410 --> 00:43:57,410
fixed

00:44:00,279 --> 00:44:04,759
monitoring we do in a whole lot of

00:44:03,019 --> 00:44:07,400
monitoring early on we were doing things

00:44:04,759 --> 00:44:10,279
with New Relic we were doing things with

00:44:07,400 --> 00:44:12,380
Scout we've since moved over we had some

00:44:10,279 --> 00:44:14,630
friends build instrumental app com I

00:44:12,380 --> 00:44:16,700
can't say enough about those guys they

00:44:14,630 --> 00:44:19,640
have really slick charts very easy to

00:44:16,700 --> 00:44:22,099
track not only rails stuff but also your

00:44:19,640 --> 00:44:23,869
custom metrics so being able to say hey

00:44:22,099 --> 00:44:26,390
I want to track how many users are

00:44:23,869 --> 00:44:28,460
signing up or how many the different

00:44:26,390 --> 00:44:30,410
business metrics as well so they can do

00:44:28,460 --> 00:44:32,390
that you get these nice charts we've

00:44:30,410 --> 00:44:34,489
actually built a custom HUD using all of

00:44:32,390 --> 00:44:36,349
their graphs coming off of their service

00:44:34,489 --> 00:44:38,660
so that we can get this but they have a

00:44:36,349 --> 00:44:40,400
really nice user interface as well so

00:44:38,660 --> 00:44:42,259
we're tracking a lot of this if anything

00:44:40,400 --> 00:44:45,259
goes wrong we get alerts we're using

00:44:42,259 --> 00:44:46,789
splunk as well for monitoring we've got

00:44:45,259 --> 00:44:49,549
I think nagios we've got all the

00:44:46,789 --> 00:44:51,170
traditional monitoring services but for

00:44:49,549 --> 00:44:54,349
the day-to-day operations this is what

00:44:51,170 --> 00:44:57,650
the server guys are looking at we are

00:44:54,349 --> 00:45:00,079
hiring we have a student couple Studios

00:44:57,650 --> 00:45:01,880
here in Dallas the zynga dallas in the

00:45:00,079 --> 00:45:05,269
zynga with friends studio where I'm at

00:45:01,880 --> 00:45:07,160
we are hiring most a lot of the the

00:45:05,269 --> 00:45:08,960
server work is now out of San Francisco

00:45:07,160 --> 00:45:10,400
so if you're looking to move to San

00:45:08,960 --> 00:45:11,690
Francisco I can hook you up with that

00:45:10,400 --> 00:45:14,539
and you can do some really fun

00:45:11,690 --> 00:45:16,969
large-scale rails work out there but we

00:45:14,539 --> 00:45:20,089
do do some Ruby stuff here in town as

00:45:16,969 --> 00:45:22,009
well I wouldn't it wouldn't be right of

00:45:20,089 --> 00:45:24,410
me to actually leave you without giving

00:45:22,009 --> 00:45:27,680
you some words with friends tips so this

00:45:24,410 --> 00:45:30,829
I believe is a fairly extensive list of

00:45:27,680 --> 00:45:34,130
the two three two and three letter words

00:45:30,829 --> 00:45:35,239
a lot of X words a lot of q words so if

00:45:34,130 --> 00:45:39,140
you want to jot those down real quick

00:45:35,239 --> 00:45:42,619
before I go to the next slide and good

00:45:39,140 --> 00:45:46,339
okay so that's all I've got again I'm

00:45:42,619 --> 00:45:48,680
Jeff and you can find me mg dagley and

00:45:46,339 --> 00:45:50,089
most places and G dagley at zynga if you

00:45:48,680 --> 00:45:52,420
want to get in touch with me so thank

00:45:50,089 --> 00:45:52,420
you very much

00:46:08,980 --> 00:46:11,010

YouTube URL: https://www.youtube.com/watch?v=DQQmhqZgXDk


