Title: Ruby On Ales 2013 Ruby Systems Programming by Andy Delcambre
Publication date: 2020-01-28
Playlist: Ruby on Ales 2013
Description: 
	We as rubyists tend to write software that runs on the web, without a deep understanding of what it would take to write the plumbing for that same software. I think it's useful to have a basic understanding of how some of the lower level components of a system work. I'll discuss the basics of systems programming, using Ruby. I'll talk about syscalls and kernel space vs user space. I'll cover a bit about file descriptors and what they're for. And hopefully I'll walk through a small example of a working webserver using those primitive syscalls.

Help us caption & translate this video!

http://amara.org/v/FGbB/
Captions: 
	00:00:12,650 --> 00:00:14,710
you

00:00:20,120 --> 00:00:24,680
all right so yeah talk about systems

00:00:21,980 --> 00:00:27,080
programming my name's Andy Dalton go buy

00:00:24,680 --> 00:00:30,230
a home on the internet my last name is

00:00:27,080 --> 00:00:34,070
nothing that I got all to welcome our

00:00:30,230 --> 00:00:35,750
it's a raid I were to give up in San

00:00:34,070 --> 00:00:37,520
Francisco burning there Belinda there

00:00:35,750 --> 00:00:39,410
about four months almost and I've been

00:00:37,520 --> 00:00:41,420
working on just heard motions I started

00:00:39,410 --> 00:00:43,489
having a blast on it you just relaunched

00:00:41,420 --> 00:00:49,400
right after I started anything but a lot

00:00:43,489 --> 00:00:51,380
of fun it's so similar to Jessica before

00:00:49,400 --> 00:00:54,050
I kind of got the same background with

00:00:51,380 --> 00:00:55,489
my parents weren't kidding and so I kind

00:00:54,050 --> 00:00:57,530
of came about this an interesting

00:00:55,489 --> 00:01:01,210
direction my own potential a computer

00:00:57,530 --> 00:01:03,379
science professor at problem safe and I

00:01:01,210 --> 00:01:04,489
swore up and down and closed about

00:01:03,379 --> 00:01:06,590
senior high school that I would never

00:01:04,489 --> 00:01:07,670
ever do what my parents did I was going

00:01:06,590 --> 00:01:12,590
to rhode island because something like

00:01:07,670 --> 00:01:14,540
civil engineering said so then I tried

00:01:12,590 --> 00:01:16,640
it I third class event was to hearing

00:01:14,540 --> 00:01:19,940
and I really really liked it I end up

00:01:16,640 --> 00:01:21,260
getting your that scream so I tried to

00:01:19,940 --> 00:01:23,659
find my degree because i'm going to put

00:01:21,260 --> 00:01:25,400
it up here wrote relevant I can't even

00:01:23,659 --> 00:01:26,780
hide it somewhere my apartment no one's

00:01:25,400 --> 00:01:29,180
ever asked me for it I don't believe

00:01:26,780 --> 00:01:31,370
that this got me sort of much in the way

00:01:29,180 --> 00:01:34,280
of jobs nose or even asking if I had

00:01:31,370 --> 00:01:35,690
agree so I don't believe that it's

00:01:34,280 --> 00:01:38,180
important to how to agree but I also

00:01:35,690 --> 00:01:39,920
feel like there's there's pieces that

00:01:38,180 --> 00:01:41,060
might agree they're really happy that I

00:01:39,920 --> 00:01:44,090
have a sort of background knowledge

00:01:41,060 --> 00:01:46,100
let's talk about some of the species so

00:01:44,090 --> 00:01:48,380
another little piece of history here if

00:01:46,100 --> 00:01:50,540
you google for belkin software on the

00:01:48,380 --> 00:01:54,380
internet you don't find me off by my mom

00:01:50,540 --> 00:01:56,300
actually find my company that my father

00:01:54,380 --> 00:01:59,780
my grandfather started together that

00:01:56,300 --> 00:02:01,010
Melissa baseball don't offer that my

00:01:59,780 --> 00:02:04,790
grandpa died started taking night

00:02:01,010 --> 00:02:07,640
classes in late 60s soul mate is coming

00:02:04,790 --> 00:02:09,200
summer and they made an accounting

00:02:07,640 --> 00:02:13,430
software for small local governments

00:02:09,200 --> 00:02:14,080
Louisiana till the pointers until really

00:02:13,430 --> 00:02:16,790
nice

00:02:14,080 --> 00:02:18,410
so needless to say my grappler did not

00:02:16,790 --> 00:02:20,810
have a CS degree again I do not believe

00:02:18,410 --> 00:02:25,600
that CS degree is required for being

00:02:20,810 --> 00:02:29,330
successful so this is one of my cover

00:02:25,600 --> 00:02:32,300
from these are the two glasses in at PSU

00:02:29,330 --> 00:02:33,530
that I so really not always but a little

00:02:32,300 --> 00:02:34,730
bits of both of these and it's kind of

00:02:33,530 --> 00:02:36,920
its kind of incident you just wrote

00:02:34,730 --> 00:02:39,020
background about all the stuff that we

00:02:36,920 --> 00:02:40,520
do every day that all the older pieces

00:02:39,020 --> 00:02:42,650
of code how are the things that we do

00:02:40,520 --> 00:02:44,900
every day but not the stuff will be

00:02:42,650 --> 00:02:47,690
right every day I find it really cool it

00:02:44,900 --> 00:02:52,970
sounds so my curiosity to know how all

00:02:47,690 --> 00:02:55,460
these pieces most of the code will run a

00:02:52,970 --> 00:02:57,920
very much any an exciting system the

00:02:55,460 --> 00:03:00,650
examples in the show are kind of more

00:02:57,920 --> 00:03:05,840
specifically clinic space to see a

00:03:00,650 --> 00:03:12,260
couple cats all like specific the code

00:03:05,840 --> 00:03:14,600
that i will show so the title of Ruby

00:03:12,260 --> 00:03:17,180
systems programming and what I mean by

00:03:14,600 --> 00:03:21,620
systems program and it's basically

00:03:17,180 --> 00:03:24,290
writing any sort of system software this

00:03:21,620 --> 00:03:25,640
is cylinder wikipedia verbatim but it

00:03:24,290 --> 00:03:27,530
says the operating control the computer

00:03:25,640 --> 00:03:29,810
hardware and to provide a platform for

00:03:27,530 --> 00:03:32,870
application software there's kind of two

00:03:29,810 --> 00:03:34,760
pieces right you have the piece where

00:03:32,870 --> 00:03:36,910
you're interacting with the computer

00:03:34,760 --> 00:03:40,700
partner successfully maybe networking

00:03:36,910 --> 00:03:43,310
disks things like that io screens

00:03:40,700 --> 00:03:45,709
displays and then you have this platform

00:03:43,310 --> 00:03:48,770
move on where it's sort of like it's not

00:03:45,709 --> 00:03:50,510
the end to itself it's the piece that

00:03:48,770 --> 00:03:53,900
you build on top because I'm a different

00:03:50,510 --> 00:03:56,570
angles so I'm coming out start low sorry

00:03:53,900 --> 00:03:58,340
about like how good it's like here or go

00:03:56,570 --> 00:04:00,440
away at the sack at the end we're going

00:03:58,340 --> 00:04:01,910
to talk a little bit about how actual

00:04:00,440 --> 00:04:06,590
web server might be written in read

00:04:01,910 --> 00:04:08,420
using air bones so first we're going to

00:04:06,590 --> 00:04:10,940
talk about how code actually gets

00:04:08,420 --> 00:04:14,560
executed locket here it's basically two

00:04:10,940 --> 00:04:17,049
modes that code me as a geology

00:04:14,560 --> 00:04:18,340
in the seat you these remote it colonel

00:04:17,049 --> 00:04:21,489
basically all the code that we write

00:04:18,340 --> 00:04:24,030
every day you know unless you're hacking

00:04:21,489 --> 00:04:26,020
on the current you're operating any code

00:04:24,030 --> 00:04:27,130
these are very different they're

00:04:26,020 --> 00:04:28,360
actually floating to see you two have

00:04:27,130 --> 00:04:32,440
different Christian different things

00:04:28,360 --> 00:04:34,540
that your remote is basically only two

00:04:32,440 --> 00:04:36,910
for a fundamental you can do without

00:04:34,540 --> 00:04:41,070
talk of the curve you can do what I call

00:04:36,910 --> 00:04:44,230
math so actual map string manipulation

00:04:41,070 --> 00:04:46,410
floating point security Sutter like Kurt

00:04:44,230 --> 00:04:49,510
those up anything like that you can do

00:04:46,410 --> 00:04:51,040
and you can access memory you can only

00:04:49,510 --> 00:04:54,550
access them to rate you've been getting

00:04:51,040 --> 00:04:56,169
access to so 80 days to the SEC you can

00:04:54,550 --> 00:04:58,510
get an access you can rewrite that

00:04:56,169 --> 00:05:00,669
memory basically everything else so all

00:04:58,510 --> 00:05:03,210
the things that are not great can't do I

00:05:00,669 --> 00:05:05,740
owe candy that you can try to this camp

00:05:03,210 --> 00:05:08,950
how puts the screen anything like that

00:05:05,740 --> 00:05:11,139
cannot do without for so the code that

00:05:08,950 --> 00:05:12,460
runs in kernel mode completely offensive

00:05:11,139 --> 00:05:15,040
you can have anything you can have

00:05:12,460 --> 00:05:16,389
everything critical reading right to any

00:05:15,040 --> 00:05:19,210
member in the system index you any

00:05:16,389 --> 00:05:21,789
instruction at any time it can talk to

00:05:19,210 --> 00:05:23,919
any blogger rights disk file system

00:05:21,789 --> 00:05:26,410
right over the network I can talk to the

00:05:23,919 --> 00:05:27,550
display drivers again everything but

00:05:26,410 --> 00:05:31,030
anything you can think of it you're

00:05:27,550 --> 00:05:35,169
doing so you have these two modes in all

00:05:31,030 --> 00:05:37,090
of your code rotten San user right and

00:05:35,169 --> 00:05:39,520
let's say for example you were like

00:05:37,090 --> 00:05:41,680
writing blogging de grasa log files so

00:05:39,520 --> 00:05:43,150
you need to write this can't do any

00:05:41,680 --> 00:05:44,650
remotes how do we do this you might

00:05:43,150 --> 00:05:46,870
think they'd be like writing the code

00:05:44,650 --> 00:05:48,490
it's going along and you add switch

00:05:46,870 --> 00:05:49,810
modes you like okay now I want to be in

00:05:48,490 --> 00:05:50,889
kernel mode you're right a couple of

00:05:49,810 --> 00:05:52,510
lines of code maybe rights on to the

00:05:50,889 --> 00:05:53,950
file you so if I keys are going to

00:05:52,510 --> 00:05:56,500
continue on your merry way this is not

00:05:53,950 --> 00:05:58,720
how this works out all the way go to be

00:05:56,500 --> 00:06:03,220
right elenco be right runs a girl that's

00:05:58,720 --> 00:06:06,360
all this works is that in your program

00:06:03,220 --> 00:06:07,880
you make calls in system punk you

00:06:06,360 --> 00:06:09,770
execute

00:06:07,880 --> 00:06:13,070
again going back to that mod file

00:06:09,770 --> 00:06:14,300
example chugging along you say okay well

00:06:13,070 --> 00:06:16,850
right so I'm filing a building without

00:06:14,300 --> 00:06:19,070
green you make the API call Colonel

00:06:16,850 --> 00:06:21,050
handle confusion pure codes no longer

00:06:19,070 --> 00:06:23,180
running kernel mode runs the kernel code

00:06:21,050 --> 00:06:25,850
guns so was the file the puzzle the

00:06:23,180 --> 00:06:27,260
things are necessary but file system and

00:06:25,850 --> 00:06:29,170
hand you back point in your code

00:06:27,260 --> 00:06:34,010
contains you can make another API call

00:06:29,170 --> 00:06:36,130
hand off that pointer and say you want

00:06:34,010 --> 00:06:47,980
to write something to it again do that

00:06:36,130 --> 00:06:52,760
the necessary so that we have faces so I

00:06:47,980 --> 00:06:55,610
was going to curious how many syscalls

00:06:52,760 --> 00:06:57,350
that you sort of make every day I didn't

00:06:55,610 --> 00:07:00,160
actually know the answer since I a try

00:06:57,350 --> 00:07:02,540
this out estrace is how you can see what

00:07:00,160 --> 00:07:04,760
system calls particular program is

00:07:02,540 --> 00:07:09,050
running this is automatically for us

00:07:04,760 --> 00:07:10,850
because the decrease API mat so you run

00:07:09,050 --> 00:07:14,270
this unit up it just prints out one line

00:07:10,850 --> 00:07:17,180
purposes in August so I put it up and

00:07:14,270 --> 00:07:18,650
just a blip we got crimes I hair for

00:07:17,180 --> 00:07:23,300
requesting them recorded all the

00:07:18,650 --> 00:07:27,290
vehicles are happy goodbye kind of a lot

00:07:23,300 --> 00:07:31,820
takes a few seconds let's go along stuff

00:07:27,290 --> 00:07:35,210
you can see some stuff in there closing

00:07:31,820 --> 00:07:37,340
the file somewhere in there except but

00:07:35,210 --> 00:07:39,950
both layers get Pete parent press this

00:07:37,340 --> 00:07:42,830
ad sets of change process and asks all

00:07:39,950 --> 00:07:44,570
kinds of stuff so this actually it's

00:07:42,830 --> 00:07:47,830
significantly faster than fragrance

00:07:44,570 --> 00:07:54,160
video across that entire work last night

00:07:47,830 --> 00:07:56,860
but they're 120,000 600 to 1 levels so

00:07:54,160 --> 00:07:58,960
some people might say that this is a

00:07:56,860 --> 00:08:01,419
result of Ruby being an efficient

00:07:58,960 --> 00:08:03,430
assistant pulse is probably true this is

00:08:01,419 --> 00:08:06,400
running it would probably be some lower

00:08:03,430 --> 00:08:07,750
in Russian SOP insanity example and

00:08:06,400 --> 00:08:11,740
really doing a lot of stuff that needs

00:08:07,750 --> 00:08:14,620
to talk to a firm your time connecting

00:08:11,740 --> 00:08:16,330
to my sequel in cash redis reading the

00:08:14,620 --> 00:08:18,069
right over network probably writing out

00:08:16,330 --> 00:08:20,470
some long files you're reading templates

00:08:18,069 --> 00:08:22,539
off disc that doesn't even put any of

00:08:20,470 --> 00:08:24,849
the web servers up missing connections

00:08:22,539 --> 00:08:27,130
accepting connections reading off the

00:08:24,849 --> 00:08:28,479
network right back tonight if you have

00:08:27,130 --> 00:08:30,009
all these pieces that are actually doing

00:08:28,479 --> 00:08:33,419
systems so it kind of makes sense

00:08:30,009 --> 00:08:36,039
there's a bunch of other stuff that soon

00:08:33,419 --> 00:08:37,750
do you might think that with all these

00:08:36,039 --> 00:08:39,099
system calls in fact you can't really do

00:08:37,750 --> 00:08:41,110
anything about how making system calls

00:08:39,099 --> 00:08:43,560
that this API would be a really big yep

00:08:41,110 --> 00:08:47,260
Department understand the Herkimer

00:08:43,560 --> 00:08:49,750
there's 326 security this is out of legs

00:08:47,260 --> 00:08:51,640
on the girl this is well master and so a

00:08:49,750 --> 00:08:53,170
couple days ago restraining replaces

00:08:51,640 --> 00:08:56,020
here cannot make a system filter not

00:08:53,170 --> 00:08:59,110
statement little aside this is how you

00:08:56,020 --> 00:09:01,120
actually made this is football so this

00:08:59,110 --> 00:09:03,970
is the loop system called basically

00:09:01,120 --> 00:09:05,589
though CA and CB xzx with registers es

00:09:03,970 --> 00:09:08,200
is where you always put the ID of the

00:09:05,589 --> 00:09:12,100
system community and that last line is

00:09:08,200 --> 00:09:14,320
an interrupt interrupt 80 x is the

00:09:12,100 --> 00:09:16,870
siskel interrupted a so that's how you

00:09:14,320 --> 00:09:19,959
hand off execution that sounds okay I'm

00:09:16,870 --> 00:09:23,290
done you take over so the interesting

00:09:19,959 --> 00:09:25,600
part of that is that that number there

00:09:23,290 --> 00:09:27,100
can't be blank spaces in that table it's

00:09:25,600 --> 00:09:28,209
not like there's a map which is like

00:09:27,100 --> 00:09:32,800
openness I'm provide this is hopeless

00:09:28,209 --> 00:09:37,990
and so I can't have places in xslt so of

00:09:32,800 --> 00:09:39,640
those 346 system calls that we had 65 of

00:09:37,990 --> 00:09:42,570
them are the system is called the

00:09:39,640 --> 00:09:45,610
limitation in I stands for not implement

00:09:42,570 --> 00:09:47,860
these ones are all ones that are like

00:09:45,610 --> 00:09:49,779
historical deprecated are used anymore

00:09:47,860 --> 00:09:52,120
you cannot blank spots intensity Cisco

00:09:49,779 --> 00:09:55,000
people so rolling broth with like 260

00:09:52,120 --> 00:09:58,770
actual calls there's a new TV it's a

00:09:55,000 --> 00:09:58,770
personal idea it's pretty impressive

00:09:59,050 --> 00:10:04,910
so we're kind of switching gears here so

00:10:03,500 --> 00:10:07,190
talking about system all consistent

00:10:04,910 --> 00:10:08,210
Falls it's already hot rize samosa and

00:10:07,190 --> 00:10:10,339
now let's talk a little bit more

00:10:08,210 --> 00:10:11,930
specifically about how we do web the

00:10:10,339 --> 00:10:14,480
program and like how we write a web

00:10:11,930 --> 00:10:16,700
server yes not gonna be able to cover up

00:10:14,480 --> 00:10:17,930
to 60 actually do sup we're kind of got

00:10:16,700 --> 00:10:21,140
a little bit down suggest some of the

00:10:17,930 --> 00:10:22,850
deal receiving connections so first a

00:10:21,140 --> 00:10:26,480
little bit of history I think this is

00:10:22,850 --> 00:10:30,529
not interesting how they think as amused

00:10:26,480 --> 00:10:31,640
today have been filmed so back 1960s

00:10:30,529 --> 00:10:34,580
there's an operating system called

00:10:31,640 --> 00:10:36,980
politics this was a research operating

00:10:34,580 --> 00:10:39,680
system developed by MIT as AT&T Bell

00:10:36,980 --> 00:10:42,980
Labs as well as a few others ken

00:10:39,680 --> 00:10:46,550
Thompson and devorah she worked on this

00:10:42,980 --> 00:10:47,779
at Bell Labs the program it was

00:10:46,550 --> 00:10:49,100
successful it was a research opera

00:10:47,779 --> 00:10:50,540
consistent so developed a bunch of new

00:10:49,100 --> 00:10:52,430
concepts but it wasn't it wasn't really

00:10:50,540 --> 00:10:53,870
used for anything real it had a lot of

00:10:52,430 --> 00:10:57,620
problems it was kind of too ambitious

00:10:53,870 --> 00:11:00,740
for its time so some of the people on

00:10:57,620 --> 00:11:02,480
the multis team words at bell labs and

00:11:00,740 --> 00:11:04,100
at bell labs they developed with a cloth

00:11:02,480 --> 00:11:07,580
eunuchs which was intended to be sort of

00:11:04,100 --> 00:11:09,800
produce problems it's intended to be

00:11:07,580 --> 00:11:11,270
originally similar users of personal

00:11:09,800 --> 00:11:14,209
teaser it's just how they came up with

00:11:11,270 --> 00:11:16,640
the name will takes unix they eventually

00:11:14,209 --> 00:11:21,950
develop the user support so they renamed

00:11:16,640 --> 00:11:26,510
it rebranded and drop the cs so she that

00:11:21,950 --> 00:11:28,990
wasn't in consent so at that time asean

00:11:26,510 --> 00:11:32,390
team was under restrictions due to the

00:11:28,990 --> 00:11:34,940
trust settlements in the 1950s so MGMT

00:11:32,390 --> 00:11:36,920
was not permitted to sell the operating

00:11:34,940 --> 00:11:40,310
system to copy a license off brings an

00:11:36,920 --> 00:11:42,410
emphasis you ask so a bunch of

00:11:40,310 --> 00:11:44,779
universities including Berkeley UC

00:11:42,410 --> 00:11:47,930
Berkeley God licenses from source code

00:11:44,779 --> 00:11:51,500
source captain's there are a lot of it

00:11:47,930 --> 00:11:54,589
it's happened around the 19 late

00:11:51,500 --> 00:11:56,390
nineteen seventies 1978 the first EST

00:11:54,589 --> 00:12:00,470
was released this was Bill Jewish

00:11:56,390 --> 00:12:04,790
brother largely at Berkeley he basically

00:12:00,470 --> 00:12:07,550
took he took the source code from AT&T

00:12:04,790 --> 00:12:09,020
Bell Labs unix compaq is it up run well

00:12:07,550 --> 00:12:10,940
together and how did a few programs to

00:12:09,020 --> 00:12:13,010
it he's famous for two programs that you

00:12:10,940 --> 00:12:14,839
got into it one with seashell want the

00:12:13,010 --> 00:12:17,270
first actual shuttles that it uses

00:12:14,839 --> 00:12:19,430
anymore for better of course the other

00:12:17,270 --> 00:12:24,130
one is VI which you may have heard up

00:12:19,430 --> 00:12:26,839
that's an asset for that came from so

00:12:24,130 --> 00:12:28,310
over the next five years the SUV at

00:12:26,839 --> 00:12:29,510
least a few more versions they ported it

00:12:28,310 --> 00:12:32,000
to a couple of different operating or

00:12:29,510 --> 00:12:33,740
hardware this was back in the days you

00:12:32,000 --> 00:12:37,339
had to kind of change things to get from

00:12:33,740 --> 00:12:40,520
each computer and in 1983 also the year

00:12:37,339 --> 00:12:44,630
I was born bsd 4.2 came out this was the

00:12:40,520 --> 00:12:47,870
first version tcp/ip stack it was like

00:12:44,630 --> 00:12:49,040
widespread abuse tcp/ip was actually are

00:12:47,870 --> 00:12:50,570
receiving like a little bit earlier than

00:12:49,040 --> 00:12:53,029
this but what I really primarily used

00:12:50,570 --> 00:12:54,830
until around now a little bit later so

00:12:53,029 --> 00:12:58,339
what's interesting is that the API it

00:12:54,830 --> 00:13:00,620
was developed in 1983 30 years ago is

00:12:58,339 --> 00:13:02,360
the same one used today we still use DSD

00:13:00,620 --> 00:13:03,920
sockets and it's one of the threads of

00:13:02,360 --> 00:13:05,360
UNIX that was has been ported almost

00:13:03,920 --> 00:13:07,550
everyone reads it's basically the only

00:13:05,360 --> 00:13:09,529
way we interact with it there's a few

00:13:07,550 --> 00:13:11,420
other ones that give you very often you

00:13:09,529 --> 00:13:15,770
go on windows are still using that same

00:13:11,420 --> 00:13:19,220
aren't the same iki not to come so that

00:13:15,770 --> 00:13:21,529
code IE is called bsd sockets it's a

00:13:19,220 --> 00:13:23,420
really simple API it's kind of I'm agile

00:13:21,529 --> 00:13:25,130
that's why Samantha's house but pretty

00:13:23,420 --> 00:13:28,250
amazing we're still using really the

00:13:25,130 --> 00:13:30,230
technology from 40 or 50 years ago and

00:13:28,250 --> 00:13:33,260
raising a guy for three years ago pretty

00:13:30,230 --> 00:13:35,360
much much changed so this is the kind of

00:13:33,260 --> 00:13:38,930
server parts of the ESD socket API

00:13:35,360 --> 00:13:40,940
there's another probably four or five

00:13:38,930 --> 00:13:44,120
their comm used for client stuff like

00:13:40,940 --> 00:13:47,510
this lookups this is the supplement web

00:13:44,120 --> 00:13:49,970
server 03 into the new turn the first

00:13:47,510 --> 00:13:50,450
one there everything in the su sockets

00:13:49,970 --> 00:13:55,370
it guys

00:13:50,450 --> 00:13:58,550
doing something as fundamental unit so i

00:13:55,370 --> 00:14:01,250
gave ya socket method calls or creates a

00:13:58,550 --> 00:14:02,900
socket for you interactable miss little

00:14:01,250 --> 00:14:05,930
socket you want you get that back all

00:14:02,900 --> 00:14:07,730
the other things deal with that the

00:14:05,930 --> 00:14:09,470
second function there is mines so this

00:14:07,730 --> 00:14:11,840
bonds that psychic to a specific or

00:14:09,470 --> 00:14:12,890
interfere in your case you're on a

00:14:11,840 --> 00:14:14,420
server you might have multiple your

00:14:12,890 --> 00:14:19,010
business especially with one listen long

00:14:14,420 --> 00:14:21,410
and you bind what poor girls third one

00:14:19,010 --> 00:14:23,300
there's listen listen tells that that

00:14:21,410 --> 00:14:26,060
socket to turn into passive mode work

00:14:23,300 --> 00:14:27,680
and receive incoming connections and you

00:14:26,060 --> 00:14:30,470
accept those incoming connections

00:14:27,680 --> 00:14:32,810
homicide so every time sony connects

00:14:30,470 --> 00:14:35,180
except will return a new socket which is

00:14:32,810 --> 00:14:36,440
connected once you have that client

00:14:35,180 --> 00:14:40,220
socket you instantly receive the press

00:14:36,440 --> 00:14:44,660
it and then the ending closes sighs this

00:14:40,220 --> 00:14:47,720
is what largely the TCP sockets web

00:14:44,660 --> 00:14:52,100
server she's a little bit of overview

00:14:47,720 --> 00:14:55,730
about TCP works this is a very common

00:14:52,100 --> 00:14:57,470
diagram for how you show flows he

00:14:55,730 --> 00:14:59,900
collects on the left there the servers

00:14:57,470 --> 00:15:01,910
on the right and time flows from top and

00:14:59,900 --> 00:15:03,290
I don't even see their head so basically

00:15:01,910 --> 00:15:04,640
everything's back down the hill any 12

00:15:03,290 --> 00:15:08,030
those lines of packet because across

00:15:04,640 --> 00:15:10,880
tentacles so it's basically green parts

00:15:08,030 --> 00:15:13,040
to a TCP first we have what we call the

00:15:10,880 --> 00:15:15,710
three-way handshake studs up a TCP

00:15:13,040 --> 00:15:17,450
connection so you a client person to

00:15:15,710 --> 00:15:20,060
send packet for synchronized this

00:15:17,450 --> 00:15:23,030
becomes setting up some of the internals

00:15:20,060 --> 00:15:24,890
to TCP server receives that you need

00:15:23,030 --> 00:15:26,630
certain collagen hackett every single

00:15:24,890 --> 00:15:29,540
packet in TCP is always a college stuff

00:15:26,630 --> 00:15:32,140
at the protocol camp pre-training but it

00:15:29,540 --> 00:15:34,100
doesn't if it didn't get the

00:15:32,140 --> 00:15:36,320
so the server respond to the

00:15:34,100 --> 00:15:38,360
acknowledgement and its own son I get to

00:15:36,320 --> 00:15:40,760
synchronize from that direction TCP is

00:15:38,360 --> 00:15:42,589
by directional you can do those both on

00:15:40,760 --> 00:15:44,570
the same packet and the client

00:15:42,589 --> 00:15:46,100
acknowledges that sometimes once those

00:15:44,570 --> 00:15:48,740
pretty things have happened now we have

00:15:46,100 --> 00:15:51,079
a bi-directional communication center

00:15:48,740 --> 00:15:52,760
screening communication to so happy API

00:15:51,079 --> 00:15:55,459
level no wonder dealing with packets

00:15:52,760 --> 00:15:56,980
it's just giving the streets tcp the

00:15:55,459 --> 00:16:02,300
underlying architecture candles all

00:15:56,980 --> 00:16:04,100
local sitting person so once the those

00:16:02,300 --> 00:16:06,320
three packets inhabit the chi shows will

00:16:04,100 --> 00:16:07,550
tell established from here on out

00:16:06,320 --> 00:16:09,769
basically you're just dealing with

00:16:07,550 --> 00:16:11,510
sending data back at Norfolk wrestle so

00:16:09,769 --> 00:16:13,880
this is a really small connection maybe

00:16:11,510 --> 00:16:16,279
just like tiny number bust there might

00:16:13,880 --> 00:16:17,750
actually want to be a pre-pack sir if

00:16:16,279 --> 00:16:19,250
it's slang a long run its the same

00:16:17,750 --> 00:16:21,829
session or like your horse tank across

00:16:19,250 --> 00:16:26,810
the network lots of data this could be

00:16:21,829 --> 00:16:30,110
any min maintenance but in general the

00:16:26,810 --> 00:16:31,490
it all looks the same so the clients can

00:16:30,110 --> 00:16:35,810
sense the data maybe this is a lot more

00:16:31,490 --> 00:16:38,000
plus the that could be like a to your

00:16:35,810 --> 00:16:40,310
bus the server again sort of knowledge

00:16:38,000 --> 00:16:41,810
that packet since the hack again you can

00:16:40,310 --> 00:16:45,410
put both in acknowledgement and data

00:16:41,810 --> 00:16:47,899
packet so it respond with the response

00:16:45,410 --> 00:16:51,350
potentially this my lady my maggot then

00:16:47,899 --> 00:16:54,290
our maximum packet size and TCPS 1500

00:16:51,350 --> 00:16:57,050
bytes like small HTML page neatly bitmap

00:16:54,290 --> 00:16:59,890
and then the client again instead of

00:16:57,050 --> 00:17:03,440
college that a packet of the sentence

00:16:59,890 --> 00:17:05,059
this can be much longer again if one

00:17:03,440 --> 00:17:06,380
side like the server was refined with a

00:17:05,059 --> 00:17:08,689
really big plastic sending lots of

00:17:06,380 --> 00:17:09,919
packets the clients I need to

00:17:08,689 --> 00:17:11,689
acknowledge every single one of those

00:17:09,919 --> 00:17:14,179
those things those tricky things you can

00:17:11,689 --> 00:17:17,230
do where you can offer those someone I

00:17:14,179 --> 00:17:17,230
can keep that gets up

00:17:17,430 --> 00:17:24,670
like it's been John offers one packet it

00:17:20,770 --> 00:17:27,670
was not good even if you folded it so

00:17:24,670 --> 00:17:29,470
finally all of these packets or you're

00:17:27,670 --> 00:17:30,910
done from transmitting data in shut down

00:17:29,470 --> 00:17:32,500
the connection you do what's called the

00:17:30,910 --> 00:17:34,930
for waiting so because this is

00:17:32,500 --> 00:17:36,220
bi-directional each side can be shut

00:17:34,930 --> 00:17:37,480
down in turn you don't have to shut down

00:17:36,220 --> 00:17:39,580
the entire connection at the same time

00:17:37,480 --> 00:17:40,750
so at this point let's say that the

00:17:39,580 --> 00:17:42,730
server is done sending data to the

00:17:40,750 --> 00:17:44,560
client it sends a thin packets as fine

00:17:42,730 --> 00:17:46,720
as the connections a client acknowledges

00:17:44,560 --> 00:17:48,280
that and then it's on point later often

00:17:46,720 --> 00:17:50,200
this happens immediately but it's

00:17:48,280 --> 00:17:52,420
something later the client it's been

00:17:50,200 --> 00:17:54,100
packet deserve a real responsive

00:17:52,420 --> 00:17:57,460
development at this point in connection

00:17:54,100 --> 00:18:00,820
exposed no more data can you do you can

00:17:57,460 --> 00:18:04,120
come see this this is a commands in

00:18:00,820 --> 00:18:06,220
Linux UNIX runs on mac you can see this

00:18:04,120 --> 00:18:07,870
Ella so at this list open L descriptors

00:18:06,220 --> 00:18:10,780
all these things are published rivers

00:18:07,870 --> 00:18:12,100
unity passions so this is a sample

00:18:10,780 --> 00:18:15,520
section of the code that I'll show a

00:18:12,100 --> 00:18:18,190
minute running this is a program listing

00:18:15,520 --> 00:18:22,120
operating and then a client is connected

00:18:18,190 --> 00:18:24,700
on port 80 it's currently transiting you

00:18:22,120 --> 00:18:26,500
can see the socket itself is in alyssum

00:18:24,700 --> 00:18:28,810
sink because it's ready davis receive

00:18:26,500 --> 00:18:30,430
income connections and then that client

00:18:28,810 --> 00:18:31,750
connected the three-way handshake

00:18:30,430 --> 00:18:33,690
announced in the process of granting

00:18:31,750 --> 00:18:35,680
data so that connection is established

00:18:33,690 --> 00:18:37,900
Kevin we see in the closing on the

00:18:35,680 --> 00:18:39,070
disappearing last but again yeah and

00:18:37,900 --> 00:18:41,110
sometimes like if you look at this

00:18:39,070 --> 00:18:45,540
something the web server maybe the exit

00:18:41,110 --> 00:18:48,430
there we'll see lots of practice

00:18:45,540 --> 00:18:50,110
so this is kind of like we're still

00:18:48,430 --> 00:18:51,610
working our back in stock now talk a

00:18:50,110 --> 00:18:53,620
little bit off the curl a little bit

00:18:51,610 --> 00:18:58,420
about syscalls a little bit about TCP

00:18:53,620 --> 00:18:59,620
and now let's move on eh so this is

00:18:58,420 --> 00:19:01,210
probably moving in the familiar

00:18:59,620 --> 00:19:02,920
territory we've all seen this before but

00:19:01,210 --> 00:19:06,550
this is the actual length taxed at his

00:19:02,920 --> 00:19:08,020
grin been across that so na sure best

00:19:06,550 --> 00:19:10,930
that first one is kind of the most

00:19:08,020 --> 00:19:12,840
important line it sends the method it

00:19:10,930 --> 00:19:15,250
gets called so in this case it to get

00:19:12,840 --> 00:19:18,100
the second parameter there is in half

00:19:15,250 --> 00:19:21,280
they come in Pacific will be in the

00:19:18,100 --> 00:19:24,310
family car roll bar and then the version

00:19:21,280 --> 00:19:26,860
HD almost always 1.1 but I guess every

00:19:24,310 --> 00:19:29,860
time and you have superb uh stutters

00:19:26,860 --> 00:19:33,400
it's as the user asian girl a post

00:19:29,860 --> 00:19:35,770
google something any sort of content

00:19:33,400 --> 00:19:39,400
type back here again browser business

00:19:35,770 --> 00:19:40,570
exactly didn't curl google video isn't

00:19:39,400 --> 00:19:42,730
rouser died except we actually have

00:19:40,570 --> 00:19:45,400
solution silly stuff in it and user

00:19:42,730 --> 00:19:46,510
agent Lee be different because st. so if

00:19:45,400 --> 00:19:48,700
you're opposed evening you set the

00:19:46,510 --> 00:19:50,920
responsible or bus money like maybe but

00:19:48,700 --> 00:19:52,390
upload there's going to be a blank line

00:19:50,920 --> 00:19:54,250
after he accept and then all the

00:19:52,390 --> 00:19:58,840
post-money data it's just just right

00:19:54,250 --> 00:20:01,780
there so the other side us happens we

00:19:58,840 --> 00:20:04,480
get the response looks very similar we

00:20:01,780 --> 00:20:07,770
have the first line again with a header

00:20:04,480 --> 00:20:10,690
Phillips from response again the version

00:20:07,770 --> 00:20:13,690
1.1 and then we have status code that

00:20:10,690 --> 00:20:15,610
comes back in this case this is a 200 ok

00:20:13,690 --> 00:20:17,470
this was a successful connection always

00:20:15,610 --> 00:20:19,930
the both sexes code number and then the

00:20:17,470 --> 00:20:25,260
text version of the SAS code this is ok

00:20:19,930 --> 00:20:28,210
before found 302 found three or modify

00:20:25,260 --> 00:20:31,180
its always got them then you have some

00:20:28,210 --> 00:20:33,370
response headers sets the date some

00:20:31,180 --> 00:20:36,220
caching information this is a brigade

00:20:33,370 --> 00:20:39,040
emacka HTML content what server room for

00:20:36,220 --> 00:20:39,520
paying people observe it and some

00:20:39,040 --> 00:20:42,630
transparent

00:20:39,520 --> 00:20:45,340
so again blank line that's just one

00:20:42,630 --> 00:20:46,900
spray support and that all this will

00:20:45,340 --> 00:20:51,820
just be the HTML that comes back in this

00:20:46,900 --> 00:20:56,160
case truncated formerly so we're kind of

00:20:51,820 --> 00:20:59,680
at the point now let's look it's so okay

00:20:56,160 --> 00:21:01,480
there was a no-show some good i slide

00:20:59,680 --> 00:21:04,020
don't try and read it I go through it

00:21:01,480 --> 00:21:07,240
line by line literally every single line

00:21:04,020 --> 00:21:10,000
this is not production code this is like

00:21:07,240 --> 00:21:12,100
don't use it approaches it's an example

00:21:10,000 --> 00:21:13,590
it says human security vulnerabilities

00:21:12,100 --> 00:21:15,970
you can access any about the file system

00:21:13,590 --> 00:21:18,280
but it's cool because we're using lowest

00:21:15,970 --> 00:21:20,380
level possible big gaps in the system to

00:21:18,280 --> 00:21:22,420
be able to achieve server if one thing

00:21:20,380 --> 00:21:23,860
this is it it's only 20 points this is

00:21:22,420 --> 00:21:28,530
the entire sea serpents hold on I'll

00:21:23,860 --> 00:21:30,340
show so first part of the socket library

00:21:28,530 --> 00:21:33,730
this is just in the standard library

00:21:30,340 --> 00:21:38,230
symbols for baseline fundamental number

00:21:33,730 --> 00:21:40,720
gated guy exists in roomie we find some

00:21:38,230 --> 00:21:43,030
constants or later just to save some

00:21:40,720 --> 00:21:46,000
lines down there then we get to the new

00:21:43,030 --> 00:21:48,340
to the program so first we create a new

00:21:46,000 --> 00:21:52,240
socket this is equivalent to the socket

00:21:48,340 --> 00:21:53,470
then you get AC socket API we're getting

00:21:52,240 --> 00:21:55,480
the two parameters there this basically

00:21:53,470 --> 00:21:59,410
pulled up book type of sake do the first

00:21:55,480 --> 00:22:01,900
grammar is the spynet that is the sort

00:21:59,410 --> 00:22:06,430
of later 311 so whatever talking about

00:22:01,900 --> 00:22:08,470
90° v6 APB for us Dean or its duggan

00:22:06,430 --> 00:22:09,760
sockets a few other ones that are much

00:22:08,470 --> 00:22:11,320
less commonly used in this case we're

00:22:09,760 --> 00:22:15,250
just going to join TV for herb your

00:22:11,320 --> 00:22:18,730
normal 32-bit addressing a 98 98 or

00:22:15,250 --> 00:22:20,350
whatever then the second one is saying

00:22:18,730 --> 00:22:25,080
that we're going to do a TCP is in the

00:22:20,350 --> 00:22:27,340
layer portal so in screen means of TCP

00:22:25,080 --> 00:22:29,410
have a bidirectional screaming it gal

00:22:27,340 --> 00:22:31,480
you if this was set Datagram that would

00:22:29,410 --> 00:22:33,820
be a UDP and yeah there's a few more

00:22:31,480 --> 00:22:35,380
options but those are comments you also

00:22:33,820 --> 00:22:37,330
get a socket basically just let you do

00:22:35,380 --> 00:22:37,960
what everyone doesn't do anything as far

00:22:37,330 --> 00:22:40,720
as

00:22:37,960 --> 00:22:45,370
I'll get you out you're just talking

00:22:40,720 --> 00:22:47,470
right on top of the key player thanks

00:22:45,370 --> 00:22:49,539
lying down that's our two months

00:22:47,470 --> 00:22:51,700
together that first one there is just

00:22:49,539 --> 00:22:52,899
it's a cobra method in ryvita can create

00:22:51,700 --> 00:22:55,059
the correct structure that the little

00:22:52,899 --> 00:22:58,059
guy can handle but it doesn't really

00:22:55,059 --> 00:23:00,730
listen to what with us 127 that zero dot

00:22:58,059 --> 00:23:03,370
0 dot one on court 11 and we just summer

00:23:00,730 --> 00:23:05,200
and my poor dr. asleep so I doesn't

00:23:03,370 --> 00:23:08,620
actually make make a consignment that's

00:23:05,200 --> 00:23:10,299
all them in then we take that structure

00:23:08,620 --> 00:23:12,399
that we just created passive divine

00:23:10,299 --> 00:23:19,690
that's like it's an outbound support 10

00:23:12,399 --> 00:23:24,010
video logos next we a call listen method

00:23:19,690 --> 00:23:25,450
on the socket this turns out that socket

00:23:24,010 --> 00:23:28,090
into a passive socket so it's ready for

00:23:25,450 --> 00:23:29,529
any connections and at this point like

00:23:28,090 --> 00:23:31,510
how to sneak hear something like that

00:23:29,529 --> 00:23:33,100
before we start accepting connections if

00:23:31,510 --> 00:23:36,190
anybody connected in that point that

00:23:33,100 --> 00:23:38,710
that client would be cute waiting for us

00:23:36,190 --> 00:23:40,270
to accept my attention that grammar that

00:23:38,710 --> 00:23:43,840
we house what is how to eat that Cubans

00:23:40,270 --> 00:23:45,220
so up to 55 clients can connect they'll

00:23:43,840 --> 00:23:47,230
be held in queue and soul ratings and

00:23:45,220 --> 00:23:50,919
pasta process then the sex one exit be

00:23:47,230 --> 00:23:52,630
dropped so now this kind of done with

00:23:50,919 --> 00:23:55,179
the setup that's the socket is ready for

00:23:52,630 --> 00:23:57,610
us to accept commissions so now this

00:23:55,179 --> 00:23:59,440
blocks and waits for the clients and

00:23:57,610 --> 00:24:00,940
connects and then half grades of new

00:23:59,440 --> 00:24:02,289
clients on it for that connection that

00:24:00,940 --> 00:24:04,899
we can we invite over to club that

00:24:02,289 --> 00:24:06,520
second in the room bapi this returns a

00:24:04,899 --> 00:24:08,559
tuple we're going to care about the

00:24:06,520 --> 00:24:11,220
first ground was the actual suck it so I

00:24:08,559 --> 00:24:15,940
have zero their first parameter

00:24:11,220 --> 00:24:17,289
apartment up great this is my one

00:24:15,940 --> 00:24:19,770
hundred percent Sanderson plant

00:24:17,289 --> 00:24:22,980
high-performance HDD berserk

00:24:19,770 --> 00:24:25,500
and if you remember this is what the

00:24:22,980 --> 00:24:27,390
first line of NH bus looks like so I'm

00:24:25,500 --> 00:24:31,890
just pointing the first kilobyte off the

00:24:27,390 --> 00:24:34,800
network because ones might be and we're

00:24:31,890 --> 00:24:37,890
taking this video spaces so we have the

00:24:34,800 --> 00:24:40,860
method space path space and a bunch of

00:24:37,890 --> 00:24:45,480
stuff the second one which is the path

00:24:40,860 --> 00:24:47,100
we move on we take the path of you got

00:24:45,480 --> 00:24:50,370
weed sampath it against the current

00:24:47,100 --> 00:24:53,820
referee get anything off the current

00:24:50,370 --> 00:24:55,800
record most browsers moment you put that

00:24:53,820 --> 00:24:58,470
thought into the command line rather

00:24:55,800 --> 00:25:00,060
than you are i curl doesn't care this

00:24:58,470 --> 00:25:06,450
will let you pull off a tee password if

00:25:00,060 --> 00:25:09,300
you want don't use this we check to see

00:25:06,450 --> 00:25:11,130
if it's actually a files and that it

00:25:09,300 --> 00:25:13,130
actually exists in a lot system if it

00:25:11,130 --> 00:25:15,600
does we're going to respond with that by

00:25:13,130 --> 00:25:17,580
directly over the wire we're going to

00:25:15,600 --> 00:25:20,610
read the contents on disk we're going to

00:25:17,580 --> 00:25:22,650
send the 200 ok we're going to send the

00:25:20,610 --> 00:25:24,360
content link this is kind of just to

00:25:22,650 --> 00:25:26,130
show that we send headers how you send

00:25:24,360 --> 00:25:27,420
headers below but they look like the

00:25:26,130 --> 00:25:29,700
browser's really don't care you actually

00:25:27,420 --> 00:25:31,320
design 18 years old girl was not happy

00:25:29,700 --> 00:25:34,110
even some accountant like to complain

00:25:31,320 --> 00:25:35,400
but browsers girls were fine and then we

00:25:34,110 --> 00:25:36,660
just in the contents and we have those

00:25:35,400 --> 00:25:38,670
two new lines we have a blank space

00:25:36,660 --> 00:25:41,580
separated headers from natural causes

00:25:38,670 --> 00:25:44,960
the plans if on the other hand that was

00:25:41,580 --> 00:25:48,270
not a system file system assembly sound

00:25:44,960 --> 00:25:50,940
which is abundant that 37 44 pounds

00:25:48,270 --> 00:25:54,780
again the concept like literal string

00:25:50,940 --> 00:25:56,880
for work and finally we close the socket

00:25:54,780 --> 00:25:58,500
this triggers that for when handshake

00:25:56,880 --> 00:26:00,269
they're closed the TCP connection with

00:25:58,500 --> 00:26:03,749
other the proctors not to save her

00:26:00,269 --> 00:26:13,549
yeah so that's a little neck that's a

00:26:03,749 --> 00:26:21,330
full budget let's see it rot so prove

00:26:13,549 --> 00:26:27,899
the same file okay some insane no

00:26:21,330 --> 00:26:30,139
tricking us no extra libraries bothell

00:26:27,899 --> 00:26:30,139
foo

00:26:40,160 --> 00:26:45,470
three have plowed and current directory

00:26:42,320 --> 00:26:46,700
have welcomed on it it works the

00:26:45,470 --> 00:26:57,080
highlighting is just as I've employment

00:26:46,700 --> 00:27:00,560
from we forgot cell and we get something

00:26:57,080 --> 00:27:10,210
that's not there okay so it's actually

00:27:00,560 --> 00:27:13,550
the real lips are actually serve back so

00:27:10,210 --> 00:27:16,880
even though this is cool and I get this

00:27:13,550 --> 00:27:18,350
one why we care like I expect that

00:27:16,880 --> 00:27:20,900
someone will probably write another HP

00:27:18,350 --> 00:27:23,980
web server issue a parser in review

00:27:20,900 --> 00:27:26,180
before I don't know yours out students

00:27:23,980 --> 00:27:29,900
i'd like to read immense up right here

00:27:26,180 --> 00:27:31,370
but i think this is really cool so just

00:27:29,900 --> 00:27:33,830
kind of know the funnels about how the

00:27:31,370 --> 00:27:35,960
pieces of code me actually important so

00:27:33,830 --> 00:27:38,090
I looked inside of you important I found

00:27:35,960 --> 00:27:40,010
code that is basically exactly like the

00:27:38,090 --> 00:27:42,010
code I'm sure its bearing down in

00:27:40,010 --> 00:27:43,670
there's a lot of good wrapped around it

00:27:42,010 --> 00:27:46,100
there's a couple of lines here that

00:27:43,670 --> 00:27:48,290
might look familiar this is the ipv6

00:27:46,100 --> 00:27:51,830
code as opposed to a PDF or code because

00:27:48,290 --> 00:27:54,260
give you for buzzer and then see Ruby I

00:27:51,830 --> 00:27:58,790
theory on this is that we uses I music

00:27:54,260 --> 00:28:00,380
so if he cares but you can see we're

00:27:58,790 --> 00:28:02,090
still creating the same reason the same

00:28:00,380 --> 00:28:04,880
exact again so reason the ball socket

00:28:02,090 --> 00:28:07,340
API here we're using the subunit version

00:28:04,880 --> 00:28:09,560
uses constant sort of assembles I made

00:28:07,340 --> 00:28:11,990
it shorter simples clipper calling a

00:28:09,560 --> 00:28:15,080
 six they're just can use ipv6 and

00:28:11,990 --> 00:28:17,600
then we are passing streaming protocol

00:28:15,080 --> 00:28:20,570
against safety tcp we have a couple of

00:28:17,600 --> 00:28:22,400
options they can set behind using the

00:28:20,570 --> 00:28:24,970
same again as before we're doing that

00:28:22,400 --> 00:28:27,270
same saw that are in with a port address

00:28:24,970 --> 00:28:29,610
this isn't actually given

00:28:27,270 --> 00:28:31,920
to the same the tax on Iran psychotics

00:28:29,610 --> 00:28:36,210
using and which is in short one slide

00:28:31,920 --> 00:28:38,220
and then in the code that i showed were

00:28:36,210 --> 00:28:43,200
using except the way through connections

00:28:38,220 --> 00:28:44,790
and a unicorn we use silicates so except

00:28:43,200 --> 00:28:47,340
allah except someone connection but

00:28:44,790 --> 00:28:49,860
uniform of the smell horrible interfaces

00:28:47,340 --> 00:28:51,810
at the same time so select basically a

00:28:49,860 --> 00:28:53,190
very good most fundamental level can

00:28:51,810 --> 00:28:55,650
look at a bunch of different sockets are

00:28:53,190 --> 00:28:57,630
currently accessible and the first one

00:28:55,650 --> 00:28:59,370
to respond so you get back video from so

00:28:57,630 --> 00:29:01,080
this is basically inside the unit bart

00:28:59,370 --> 00:29:03,470
workers this is the code my code that

00:29:01,080 --> 00:29:06,060
actually runs that l is an array of

00:29:03,470 --> 00:29:09,360
sockets connected or file descriptors

00:29:06,060 --> 00:29:11,160
bridge anything this is ìhow actually so

00:29:09,360 --> 00:29:13,230
because it's really cool i find this

00:29:11,160 --> 00:29:16,290
fascinating to play with this stuff i'm

00:29:13,230 --> 00:29:18,780
not really probably gonna break a web

00:29:16,290 --> 00:29:21,120
server tomorrow but it's fun to look at

00:29:18,780 --> 00:29:22,770
I find it satisfied my curiosity to kind

00:29:21,120 --> 00:29:26,190
of dive down and know how this stuff

00:29:22,770 --> 00:29:27,960
works and i find it probably makes me a

00:29:26,190 --> 00:29:32,240
better programmer can repeat even the

00:29:27,960 --> 00:29:32,240
hotness so that's it thanks a lot

00:30:04,700 --> 00:30:06,760

YouTube URL: https://www.youtube.com/watch?v=174m6GpYQfs


