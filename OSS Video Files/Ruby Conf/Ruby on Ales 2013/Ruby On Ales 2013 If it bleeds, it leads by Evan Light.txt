Title: Ruby On Ales 2013 If it bleeds, it leads by Evan Light
Publication date: 2020-01-28
Playlist: Ruby on Ales 2013
Description: 
	Many of us came to Ruby by way of Rails (including yours truly about six years ago). We came because our current solutions were clumsy and inconvenient. We came because we appreciated the relative simplicity that Rails offered. And we came because we believe that change is often a good thing. But not all changes are beneficial. Over several blog posts, books, and a couple of years, the Rails community has begun to choose complexity over simplicity.

Let's talk about why. And let's talk about how we can try to recapture that simplicity that we so once adored.

Help us caption & translate this video!

http://amara.org/v/FGbE/
Captions: 
	00:00:12,650 --> 00:00:14,710
you

00:00:19,940 --> 00:00:24,530
so he already got the lowdown I'm Evan

00:00:22,610 --> 00:00:26,720
light I may I call myself a freelance

00:00:24,530 --> 00:00:28,820
mentor and coach janitor I used to just

00:00:26,720 --> 00:00:31,250
say co janitor that's to say I clean up

00:00:28,820 --> 00:00:32,930
a lot of other developers a

00:00:31,250 --> 00:00:34,880
freelance mentor in the sense that I

00:00:32,930 --> 00:00:37,040
like to help other people write better

00:00:34,880 --> 00:00:39,800
software usually if your remote pairing

00:00:37,040 --> 00:00:42,820
and or help them clean up their own

00:00:39,800 --> 00:00:45,379
software so that way I don't have to and

00:00:42,820 --> 00:00:49,489
these are a couple things that I do I

00:00:45,379 --> 00:00:51,440
run Ruby Dee camp which the shirt it's

00:00:49,489 --> 00:00:54,320
an unconference well open space event /

00:00:51,440 --> 00:00:56,360
on conference in the DC area it's about

00:00:54,320 --> 00:01:00,409
75 people it's going into its sixth year

00:00:56,360 --> 00:01:02,330
now and in 2014 sorry it's usually the

00:01:00,409 --> 00:01:05,630
end of September early October it's

00:01:02,330 --> 00:01:07,420
three holy three evenings for well it's

00:01:05,630 --> 00:01:10,040
three days and three evenings really

00:01:07,420 --> 00:01:11,150
first day is a all day code retreat if

00:01:10,040 --> 00:01:12,740
you don't know what that is you can just

00:01:11,150 --> 00:01:15,020
do a quick Google and the next two days

00:01:12,740 --> 00:01:16,790
are an open space event you can google

00:01:15,020 --> 00:01:18,530
open space technology if you're curious

00:01:16,790 --> 00:01:20,030
to learn more about it but basically

00:01:18,530 --> 00:01:22,610
decamp just takes a little conference

00:01:20,030 --> 00:01:24,080
model and you know like this except well

00:01:22,610 --> 00:01:25,580
I'm not going to talk about beer and

00:01:24,080 --> 00:01:27,380
decamp talk to Aaron about that if

00:01:25,580 --> 00:01:28,520
you're curious we kind of take the

00:01:27,380 --> 00:01:31,340
conference model we turn it upside down

00:01:28,520 --> 00:01:32,570
so our usual conference is really the

00:01:31,340 --> 00:01:35,390
hallway track it's not to say it's

00:01:32,570 --> 00:01:36,350
completely unstructured but anyway it's

00:01:35,390 --> 00:01:38,660
a kind of neat thing if you're

00:01:36,350 --> 00:01:41,180
interested look around talk to people

00:01:38,660 --> 00:01:42,230
it's and it's not exactly the invite

00:01:41,180 --> 00:01:44,270
only thing but you have to know someone

00:01:42,230 --> 00:01:46,550
who knows someone in order to get in I

00:01:44,270 --> 00:01:48,620
invite a few people but then the rest of

00:01:46,550 --> 00:01:50,510
it's up to everyone else i'm also on the

00:01:48,620 --> 00:01:51,800
Ruby freelancers podcast that's pretty

00:01:50,510 --> 00:01:54,200
much exactly what it sounds like a bunch

00:01:51,800 --> 00:01:56,060
of freelancers you do Ruby work tennis

00:01:54,200 --> 00:01:58,210
it around and ruminate on how to get

00:01:56,060 --> 00:02:00,260
more work out of manager clients etc etc

00:01:58,210 --> 00:02:02,300
what I don't have on here cuz we don't

00:02:00,260 --> 00:02:03,830
have a logo yet as I started doing a

00:02:02,300 --> 00:02:05,210
screencast with Z Spencer and a few

00:02:03,830 --> 00:02:08,780
other folks called growing software

00:02:05,210 --> 00:02:10,519
developers which is about starting off

00:02:08,780 --> 00:02:12,080
as a software developer and how you can

00:02:10,519 --> 00:02:14,780
become a better software developer once

00:02:12,080 --> 00:02:16,700
you start when you're starting out so

00:02:14,780 --> 00:02:18,200
having said all that I'm sure most of

00:02:16,700 --> 00:02:20,769
you are familiar with this comic strip

00:02:18,200 --> 00:02:23,480
if you're not just take a quick look and

00:02:20,769 --> 00:02:25,970
in a nutshell this is the way I do

00:02:23,480 --> 00:02:27,560
presentations because someone is wrong

00:02:25,970 --> 00:02:29,950
it pisses me off and I have to talk

00:02:27,560 --> 00:02:32,990
about it so that's why I'm up here again

00:02:29,950 --> 00:02:33,710
it's also why I write blog posts usually

00:02:32,990 --> 00:02:35,090
I don't

00:02:33,710 --> 00:02:36,860
write that off because I don't get that

00:02:35,090 --> 00:02:38,450
pissed off that often but when I when I

00:02:36,860 --> 00:02:41,690
see someone who's very wrong I have to

00:02:38,450 --> 00:02:44,090
write a blog post and that's kind of

00:02:41,690 --> 00:02:46,280
where this presentation came from this

00:02:44,090 --> 00:02:48,790
blog post let's see was basically about

00:02:46,280 --> 00:02:51,500
loosely coupling all the things in rails

00:02:48,790 --> 00:02:54,050
that's kind of become de rigueur the

00:02:51,500 --> 00:02:55,520
latest fashion I'm sure most of you are

00:02:54,050 --> 00:02:57,140
familiar with it because while it's a

00:02:55,520 --> 00:02:59,480
ruby conference this is a ruby

00:02:57,140 --> 00:03:00,740
conference most of us work in rails I'm

00:02:59,480 --> 00:03:03,830
not going to ask her show of hands it

00:03:00,740 --> 00:03:06,080
would be too obvious and as I said the

00:03:03,830 --> 00:03:08,570
latest fashion is well let's be

00:03:06,080 --> 00:03:11,120
extremely oo with rails well reals isn't

00:03:08,570 --> 00:03:13,670
exactly all that oo and rails is

00:03:11,120 --> 00:03:16,400
designed to make small app development

00:03:13,670 --> 00:03:18,890
fast but emphasis on the small it's good

00:03:16,400 --> 00:03:21,230
at small app development and it does

00:03:18,890 --> 00:03:23,240
that among other ways with shortcuts

00:03:21,230 --> 00:03:26,510
that take advantage of selective tight

00:03:23,240 --> 00:03:27,380
coupling for example the coupling we

00:03:26,510 --> 00:03:28,610
have between the views and the

00:03:27,380 --> 00:03:30,320
controllers and rails and we pass

00:03:28,610 --> 00:03:33,050
instance variables around between them

00:03:30,320 --> 00:03:34,730
that is considered very nasty by some

00:03:33,050 --> 00:03:36,500
people but it's a really handy shortcut

00:03:34,730 --> 00:03:39,020
for just look up the data get into the

00:03:36,500 --> 00:03:41,210
template and off you go and then I'm

00:03:39,020 --> 00:03:42,530
sure as most of you are aware that rails

00:03:41,210 --> 00:03:44,480
has a lot of constraints and they're

00:03:42,530 --> 00:03:46,790
intentional its opinionated software

00:03:44,480 --> 00:03:49,100
that helps us maybe the first eighty

00:03:46,790 --> 00:03:51,380
percent of our apps but what do we do

00:03:49,100 --> 00:03:52,520
for those are the examples are ready so

00:03:51,380 --> 00:03:54,710
what do we do for the remaining twenty

00:03:52,520 --> 00:03:58,580
percent what techniques do you use what

00:03:54,710 --> 00:04:01,040
gems do you use well that's a kind of

00:03:58,580 --> 00:04:03,710
tricky topic it really depends because

00:04:01,040 --> 00:04:05,750
there are so many choices there are so

00:04:03,710 --> 00:04:09,650
many patterns books out there so many

00:04:05,750 --> 00:04:11,840
rails recipes out there so really it's a

00:04:09,650 --> 00:04:14,690
heuristic which is a fancy word for

00:04:11,840 --> 00:04:16,970
saying it's based on experience so if

00:04:14,690 --> 00:04:18,230
you're fairly new rails developer know

00:04:16,970 --> 00:04:20,870
that's another way of saying you're

00:04:18,230 --> 00:04:24,620
screwed or you have to know someone

00:04:20,870 --> 00:04:26,570
who's more experienced so moving right

00:04:24,620 --> 00:04:28,730
along the sarah said earlier in her talk

00:04:26,570 --> 00:04:32,540
yesterday essentially the anecdotes suck

00:04:28,730 --> 00:04:34,550
is evidence and i agree so i did a lot

00:04:32,540 --> 00:04:36,020
of research and then when I was done

00:04:34,550 --> 00:04:37,370
doing research I started working on

00:04:36,020 --> 00:04:39,020
slides and then I caught myself doing

00:04:37,370 --> 00:04:42,830
more research became kind of a

00:04:39,020 --> 00:04:45,110
compulsion I read through a few

00:04:42,830 --> 00:04:47,360
different books and I have lots of

00:04:45,110 --> 00:04:49,789
citations in here I linked the citation

00:04:47,360 --> 00:04:51,469
bears mentioning these slides are done

00:04:49,789 --> 00:04:53,060
in something called keydown that is that

00:04:51,469 --> 00:04:54,889
they're really just HTML and JavaScript

00:04:53,060 --> 00:04:56,840
and I'm going to have them up on and

00:04:54,889 --> 00:04:58,460
github pages after the presentation so

00:04:56,840 --> 00:04:59,719
you don't have to worry about taking any

00:04:58,460 --> 00:05:03,319
notes unless there's something

00:04:59,719 --> 00:05:04,699
interesting that I say maybe otherwise

00:05:03,319 --> 00:05:06,199
you'll just be able to get the slides

00:05:04,699 --> 00:05:07,849
page forgive them and click on all the

00:05:06,199 --> 00:05:09,199
links and there are a lot of links so

00:05:07,849 --> 00:05:13,159
all the source material is easy to get

00:05:09,199 --> 00:05:15,199
to so first book they'll talk about just

00:05:13,159 --> 00:05:16,849
a little bit or in passing here is the

00:05:15,199 --> 00:05:19,520
paradox of choice because realizing that

00:05:16,849 --> 00:05:20,569
there are so many options how do people

00:05:19,520 --> 00:05:21,949
deal with those options this is

00:05:20,569 --> 00:05:24,379
something I'd heard about anything from

00:05:21,949 --> 00:05:26,180
actually a talk at Google there's a

00:05:24,379 --> 00:05:28,580
youtube video of the author giving a

00:05:26,180 --> 00:05:29,870
talk there so a couple of quotes here

00:05:28,580 --> 00:05:32,029
one of them is your choosing well is

00:05:29,870 --> 00:05:33,110
especially difficult for those of us who

00:05:32,029 --> 00:05:35,629
are determined to make only the best

00:05:33,110 --> 00:05:37,520
choices I've worked with a lot of

00:05:35,629 --> 00:05:40,009
clients as a consultant I mean I've been

00:05:37,520 --> 00:05:41,840
a freelancer for three and a half years

00:05:40,009 --> 00:05:44,330
now i guess and i worked a lot of

00:05:41,840 --> 00:05:47,210
different shops and usually they bring

00:05:44,330 --> 00:05:49,099
me in because they don't have any

00:05:47,210 --> 00:05:50,509
experience rails developers or they

00:05:49,099 --> 00:05:52,849
don't have any veteran really rails

00:05:50,509 --> 00:05:54,469
developers they don't know what choices

00:05:52,849 --> 00:05:57,710
to make so they asked me to help them

00:05:54,469 --> 00:06:00,319
make them on their behalf but a lot of

00:05:57,710 --> 00:06:02,919
shops don't do that so they just make

00:06:00,319 --> 00:06:06,050
choices so if they make choices without

00:06:02,919 --> 00:06:07,819
the benefit of experience what kind of

00:06:06,050 --> 00:06:10,879
choices the average developer make let's

00:06:07,819 --> 00:06:12,889
talk about that some so we would be

00:06:10,879 --> 00:06:14,659
better off if we embrace certain

00:06:12,889 --> 00:06:16,189
voluntary constraints on our freedom of

00:06:14,659 --> 00:06:20,150
choice instead of rebelling against them

00:06:16,189 --> 00:06:22,539
sound a little bit like rails maybe so

00:06:20,150 --> 00:06:27,159
one interesting phenomena of choice

00:06:22,539 --> 00:06:30,199
mentioned in the book is that apparently

00:06:27,159 --> 00:06:32,569
we are not too rational about how we

00:06:30,199 --> 00:06:37,009
choose we'd like to think we are but we

00:06:32,569 --> 00:06:39,259
have a tendency to select to go with

00:06:37,009 --> 00:06:42,020
information that's readily available as

00:06:39,259 --> 00:06:44,089
opposed to information that's reliable

00:06:42,020 --> 00:06:45,560
the example the author gives them the

00:06:44,089 --> 00:06:47,060
book I believe there was a study or two

00:06:45,560 --> 00:06:49,520
that he cited as well but the example is

00:06:47,060 --> 00:06:52,939
a simple one shopping for new car you

00:06:49,520 --> 00:06:54,020
want to find a nice safe new car well so

00:06:52,939 --> 00:06:55,279
with the one of the best things you

00:06:54,020 --> 00:06:56,240
could probably do and talks about in the

00:06:55,279 --> 00:06:57,770
book also as you could go to the

00:06:56,240 --> 00:06:59,990
Consumer Reports website it's a

00:06:57,770 --> 00:07:01,370
non-profit they do tons of research they

00:06:59,990 --> 00:07:03,500
collect a lot of data

00:07:01,370 --> 00:07:05,720
so its rival information it's just

00:07:03,500 --> 00:07:08,449
fairly objective it's a bit dry but it's

00:07:05,720 --> 00:07:10,460
a great way to shop for a car but say

00:07:08,449 --> 00:07:12,800
say you find that the most reliable car

00:07:10,460 --> 00:07:14,810
or the rather the safest car is a Volvo

00:07:12,800 --> 00:07:16,520
now we'll talk about that one in a

00:07:14,810 --> 00:07:18,440
minute later but say you find that the

00:07:16,520 --> 00:07:19,880
safest cars a Volvo but then a good

00:07:18,440 --> 00:07:22,250
friend of your says no the Volvo is not

00:07:19,880 --> 00:07:24,740
that safe you really want say a Cadillac

00:07:22,250 --> 00:07:26,180
because the boat and I have a Cadillac

00:07:24,740 --> 00:07:27,949
and I got an accident everything was

00:07:26,180 --> 00:07:30,530
great that's an anecdote but it's from

00:07:27,949 --> 00:07:32,240
someone we know so we tend to favor that

00:07:30,530 --> 00:07:34,010
information maybe the people in this

00:07:32,240 --> 00:07:36,650
room wouldn't do that i mean i use

00:07:34,010 --> 00:07:38,090
consumer reports for example and i will

00:07:36,650 --> 00:07:39,350
listen two anecdotes of people give me

00:07:38,090 --> 00:07:42,320
but usually i'm going to go with what I

00:07:39,350 --> 00:07:44,660
see in consumer reports but most people

00:07:42,320 --> 00:07:47,750
are actually fairly vulnerable to

00:07:44,660 --> 00:07:50,120
effective advertising and I know you're

00:07:47,750 --> 00:07:52,280
probably thinking well that's not me but

00:07:50,120 --> 00:07:54,320
it probably is by degrees I'm not going

00:07:52,280 --> 00:07:56,180
to go into graphic detail here but the

00:07:54,320 --> 00:07:58,340
paradox of choice talks about several

00:07:56,180 --> 00:07:59,900
different very simple techniques that

00:07:58,340 --> 00:08:01,130
advertisers use that are highly reliable

00:07:59,900 --> 00:08:02,600
and I was reading through him thinking

00:08:01,130 --> 00:08:03,740
oh yep they fool I've been fooled with

00:08:02,600 --> 00:08:05,990
that I've been fooled with that I've

00:08:03,740 --> 00:08:08,060
been fooled with that there are some

00:08:05,990 --> 00:08:09,650
obvious ones that maybe we're good at

00:08:08,060 --> 00:08:12,740
avoiding but one of their is mentioning

00:08:09,650 --> 00:08:13,849
of like anchoring shoot and I can't

00:08:12,740 --> 00:08:16,370
remember the descriptions all that well

00:08:13,849 --> 00:08:20,210
so it's a worthwhile book to read it's a

00:08:16,370 --> 00:08:22,250
fairly fast read too so let's get a

00:08:20,210 --> 00:08:24,020
little bit more into the software

00:08:22,250 --> 00:08:26,120
culture here so Alan Kay the guy who

00:08:24,020 --> 00:08:27,470
invented small talk once said once you

00:08:26,120 --> 00:08:29,539
have something that grows faster than

00:08:27,470 --> 00:08:32,539
education grows you're always going to

00:08:29,539 --> 00:08:35,719
get a pop culture so I'll just take a

00:08:32,539 --> 00:08:37,310
moment to observe that I don't know how

00:08:35,719 --> 00:08:39,650
many of you were fresh out of school but

00:08:37,310 --> 00:08:41,450
most of us if not all of us we didn't

00:08:39,650 --> 00:08:43,490
learn the program in Ruby in school we

00:08:41,450 --> 00:08:46,760
didn't learn the program rails in school

00:08:43,490 --> 00:08:50,089
we got it from blog posts in books and

00:08:46,760 --> 00:08:52,820
not any kind of formal education or

00:08:50,089 --> 00:08:55,779
really structured education I think that

00:08:52,820 --> 00:08:59,480
kind of qualifies us for a pop culture

00:08:55,779 --> 00:09:01,279
so let me introduce this word I actually

00:08:59,480 --> 00:09:02,510
cobbled it together in my brain Google

00:09:01,279 --> 00:09:05,180
didn't lo and behold someone already

00:09:02,510 --> 00:09:07,790
come up with it neo filia knew and loved

00:09:05,180 --> 00:09:11,510
basically loving new things kind of an

00:09:07,790 --> 00:09:13,160
obsession with new things that's us you

00:09:11,510 --> 00:09:14,510
mean you can't you probably came to Ruby

00:09:13,160 --> 00:09:14,960
because you were dissatisfied came to

00:09:14,510 --> 00:09:16,220
rails

00:09:14,960 --> 00:09:18,710
were dissatisfied with whatever you're

00:09:16,220 --> 00:09:20,240
using before for me it was j2ee made me

00:09:18,710 --> 00:09:22,580
want to cry and quit being a software

00:09:20,240 --> 00:09:23,660
engineer and become a manager and be

00:09:22,580 --> 00:09:26,210
miserable and that would have been

00:09:23,660 --> 00:09:28,250
better than working in j2ee i'm sure you

00:09:26,210 --> 00:09:30,350
guys probably had some kind of similar

00:09:28,250 --> 00:09:32,090
experience but once you got to the rails

00:09:30,350 --> 00:09:33,440
community you know how it is that

00:09:32,090 --> 00:09:35,270
there's always a new gem coming out

00:09:33,440 --> 00:09:36,950
maybe every few months or every year to

00:09:35,270 --> 00:09:39,500
replace the functionality some other gym

00:09:36,950 --> 00:09:40,820
you were using before the new hotness is

00:09:39,500 --> 00:09:41,750
not what you were using a few months ago

00:09:40,820 --> 00:09:43,850
you have running in your production

00:09:41,750 --> 00:09:46,850
application so do you upgrade to the new

00:09:43,850 --> 00:09:48,140
hotness or not well a lot of developers

00:09:46,850 --> 00:09:50,060
who are less experienced might do that

00:09:48,140 --> 00:09:51,140
so what I'd like to say to borrow from

00:09:50,060 --> 00:09:52,430
journalists and you've probably seen

00:09:51,140 --> 00:09:55,910
this image if you were here last year is

00:09:52,430 --> 00:09:58,640
if it bleeds it leads except not in the

00:09:55,910 --> 00:09:59,570
sense of if it's bloody and murder then

00:09:58,640 --> 00:10:01,760
it's gonna be on the front page of the

00:09:59,570 --> 00:10:03,280
paper but if it's bleeding edge it's

00:10:01,760 --> 00:10:06,080
what we're talking about all the time

00:10:03,280 --> 00:10:07,370
because we just all our blog posts all

00:10:06,080 --> 00:10:08,900
of our conferences we're usually talking

00:10:07,370 --> 00:10:10,970
about if we're not talking about meta

00:10:08,900 --> 00:10:14,990
stuff like this we're talking about new

00:10:10,970 --> 00:10:18,890
tools and new techniques and that is our

00:10:14,990 --> 00:10:21,260
pop culture new tools and techniques so

00:10:18,890 --> 00:10:22,880
there this is a maybe somewhat obscure

00:10:21,260 --> 00:10:24,740
reference that I suspect maybe one

00:10:22,880 --> 00:10:28,670
percent of this audience will actually

00:10:24,740 --> 00:10:31,160
get Erin did you get it yeah oh cool

00:10:28,670 --> 00:10:33,500
Corey get there so this is from Star

00:10:31,160 --> 00:10:35,690
Trek the motion picture this is probably

00:10:33,500 --> 00:10:37,160
dating me is getting a little bit old

00:10:35,690 --> 00:10:40,220
now finally because this is from the

00:10:37,160 --> 00:10:41,840
late 70s and this is the line dr. McCoy

00:10:40,220 --> 00:10:45,080
is is saying the captain kirk when he's

00:10:41,840 --> 00:10:46,640
bitching about the medical Bay or sick

00:10:45,080 --> 00:10:48,230
bay and the newton the upgraded

00:10:46,640 --> 00:10:49,820
enterprise he says I know engineers they

00:10:48,230 --> 00:10:51,710
love to change things expects of the

00:10:49,820 --> 00:10:53,000
sick bay to be all rearranged well

00:10:51,710 --> 00:10:54,620
that's what we're always doing in the

00:10:53,000 --> 00:10:56,000
rails community where the Ruby community

00:10:54,620 --> 00:10:59,170
at large we're always coming with new

00:10:56,000 --> 00:11:01,730
tools new techniques there and we don't

00:10:59,170 --> 00:11:03,440
necessarily have the new tools and

00:11:01,730 --> 00:11:04,730
techniques there its evolutionary we

00:11:03,440 --> 00:11:06,350
don't necessarily have the best ideas

00:11:04,730 --> 00:11:08,630
ideally were weeding out the bad ones

00:11:06,350 --> 00:11:10,730
through experience but experimentation

00:11:08,630 --> 00:11:12,830
is necessary so let's talk about

00:11:10,730 --> 00:11:15,020
patterns a little bit we'll get the

00:11:12,830 --> 00:11:16,250
tools in a little bit later I'm sure

00:11:15,020 --> 00:11:17,900
you're all familiar with the basic idea

00:11:16,250 --> 00:11:20,090
what a pattern is it's basically just an

00:11:17,900 --> 00:11:22,310
example something that emulates there's

00:11:20,090 --> 00:11:25,370
a precondition and then apply this

00:11:22,310 --> 00:11:28,100
technique so we identify the practice

00:11:25,370 --> 00:11:30,380
and how we get our patterns then input

00:11:28,100 --> 00:11:32,180
as a pattern it ends up in one of many

00:11:30,380 --> 00:11:35,060
books or I'm blog post or what have you

00:11:32,180 --> 00:11:36,980
but then if it can be imitated then

00:11:35,060 --> 00:11:38,449
maybe can be automated so some wise guy

00:11:36,980 --> 00:11:39,649
comes along and says hey I don't want to

00:11:38,449 --> 00:11:41,930
go bang out all this code every time I

00:11:39,649 --> 00:11:44,000
see myself using this I've used this a

00:11:41,930 --> 00:11:46,430
bunch of times it's repetitive or I see

00:11:44,000 --> 00:11:47,509
myself potentially using this a lot so

00:11:46,430 --> 00:11:50,149
I'm going to just try to implement a

00:11:47,509 --> 00:11:53,060
generic case so we create a tool from

00:11:50,149 --> 00:11:54,560
the pattern then we use a tool and then

00:11:53,060 --> 00:11:57,350
we identify its best practice patterns

00:11:54,560 --> 00:11:59,600
because the tools themselves have

00:11:57,350 --> 00:12:02,889
patterns that they are better suited to

00:11:59,600 --> 00:12:05,839
like say rails there's the rails web and

00:12:02,889 --> 00:12:07,759
then we tend to identify the failings of

00:12:05,839 --> 00:12:10,279
the tools so familiarity breeds contempt

00:12:07,759 --> 00:12:12,199
because for whatever reason I guess in

00:12:10,279 --> 00:12:13,790
this particular year it seems like it's

00:12:12,199 --> 00:12:15,769
kind of cool to hate on rails a bit and

00:12:13,790 --> 00:12:19,670
pick on it and say it needs to be more

00:12:15,769 --> 00:12:23,560
object-oriented so step six is go to one

00:12:19,670 --> 00:12:26,089
and look for the next new shiny pattern

00:12:23,560 --> 00:12:28,100
so that supposed to say rails pattern

00:12:26,089 --> 00:12:29,889
not raised pattern some looks like I'm

00:12:28,100 --> 00:12:33,170
trying to speak in bad Spanish or French

00:12:29,889 --> 00:12:34,329
these are some patterns out of a book

00:12:33,170 --> 00:12:36,290
I'm going to mention in just a minute

00:12:34,329 --> 00:12:37,250
don't concern yourself too much with

00:12:36,290 --> 00:12:39,139
them you'll be able to look them all up

00:12:37,250 --> 00:12:41,560
later if you want but some of those

00:12:39,139 --> 00:12:44,000
should look kind of familiar to you and

00:12:41,560 --> 00:12:45,860
they're from this book by martin fowler

00:12:44,000 --> 00:12:48,350
the patterns of enterprise application

00:12:45,860 --> 00:12:50,180
architecture if you get nothing else out

00:12:48,350 --> 00:12:52,639
of this presentation if i put you to

00:12:50,180 --> 00:12:56,089
sleep I'm sorry but read this book

00:12:52,639 --> 00:12:58,759
please the it's not an easy read I'll

00:12:56,089 --> 00:13:00,410
grant you that but it's pretty mind

00:12:58,759 --> 00:13:03,350
opening and eye-opening least it very

00:13:00,410 --> 00:13:05,060
much was for me it was actually go back

00:13:03,350 --> 00:13:07,360
just a sec was written in 2003 so it's

00:13:05,060 --> 00:13:10,550
kind of a bit dated it predated rails

00:13:07,360 --> 00:13:14,360
and it came up just a little bit after

00:13:10,550 --> 00:13:18,050
the j2ee revolution if you will so it's

00:13:14,360 --> 00:13:20,060
kind of a step up from the initial j2ee

00:13:18,050 --> 00:13:21,139
web frameworks that we had I'm talking

00:13:20,060 --> 00:13:23,120
about Java because that was my

00:13:21,139 --> 00:13:25,819
perspective but I think I think that's

00:13:23,120 --> 00:13:27,589
where Fowler came from too but so I

00:13:25,819 --> 00:13:30,350
mentioned these patterns here they came

00:13:27,589 --> 00:13:33,740
from that book these kind of forecasts a

00:13:30,350 --> 00:13:35,360
lot of what is in rails so it's a little

00:13:33,740 --> 00:13:38,389
bit I opening in terms of seeing how the

00:13:35,360 --> 00:13:42,259
patterns work how they could work better

00:13:38,389 --> 00:13:44,029
as well so let's

00:13:42,259 --> 00:13:46,879
talk about just briefly i'm just going

00:13:44,029 --> 00:13:48,169
to cite a list of some patterns that we

00:13:46,879 --> 00:13:51,139
come up with lately i call them post

00:13:48,169 --> 00:13:53,119
rails rails patterns because if we're in

00:13:51,139 --> 00:13:55,609
a post raise these are the tools we've

00:13:53,119 --> 00:13:57,589
come up with because we think rail sucks

00:13:55,609 --> 00:14:00,979
in particular ways i'm going to spare

00:13:57,589 --> 00:14:03,169
you the details on most of these so the

00:14:00,979 --> 00:14:05,179
question again is why what's wrong with

00:14:03,169 --> 00:14:08,449
rails so let's go into a little bit of

00:14:05,179 --> 00:14:10,759
detail so the popular wisdom says

00:14:08,449 --> 00:14:13,369
persistence and domain logic should not

00:14:10,759 --> 00:14:15,199
coexist in a model class lately it's

00:14:13,369 --> 00:14:16,699
become very popular to hate on active

00:14:15,199 --> 00:14:19,029
record I think Brian mentioned in his

00:14:16,699 --> 00:14:23,539
presentation at one point I sympathize

00:14:19,029 --> 00:14:26,119
yeah yay callbacks gave filters yay this

00:14:23,539 --> 00:14:27,289
yay that well then after your appt grows

00:14:26,119 --> 00:14:30,160
a little bit or models get a little

00:14:27,289 --> 00:14:33,829
complex of the callbacks he had in there

00:14:30,160 --> 00:14:36,889
so active record as defined by Martin

00:14:33,829 --> 00:14:39,319
Fowler which I recall hearing anecdote

00:14:36,889 --> 00:14:42,309
Oh bear with me that um the active

00:14:39,319 --> 00:14:43,999
record gem is actually the most accurate

00:14:42,309 --> 00:14:46,149
implementation of the active record

00:14:43,999 --> 00:14:48,769
pattern that he has defined in the book

00:14:46,149 --> 00:14:50,199
defines an object that wraps a row in a

00:14:48,769 --> 00:14:52,459
database or tape the table or view

00:14:50,199 --> 00:14:57,709
encapsulate the database access and adds

00:14:52,459 --> 00:14:59,329
domain logic on that data so this though

00:14:57,709 --> 00:15:01,220
is a UML for what the prevailing wisdom

00:14:59,329 --> 00:15:02,779
says to do is you guys know what active

00:15:01,220 --> 00:15:03,889
record is already most of you guys do

00:15:02,779 --> 00:15:07,429
rails all the time and know there are a

00:15:03,889 --> 00:15:09,499
few who don't but this has a domain

00:15:07,429 --> 00:15:12,169
model object on the left side then we

00:15:09,499 --> 00:15:15,529
have some finder that goes out to and

00:15:12,169 --> 00:15:17,059
gets a gateway object which is a fancy

00:15:15,529 --> 00:15:18,919
way of saying an object that knows that

00:15:17,059 --> 00:15:20,869
a person is persist itself and contains

00:15:18,919 --> 00:15:23,179
the data but it doesn't do any

00:15:20,869 --> 00:15:25,489
operations on it and that's what the

00:15:23,179 --> 00:15:27,649
prevailing wisdom says to do but there's

00:15:25,489 --> 00:15:29,449
a pattern for that and it's called the

00:15:27,649 --> 00:15:30,889
real data gateway this is actually in

00:15:29,449 --> 00:15:33,619
the patterns of enterprise application

00:15:30,889 --> 00:15:35,600
architecture it exactly describes how

00:15:33,619 --> 00:15:38,089
we're trying to use rails and active

00:15:35,600 --> 00:15:40,369
record now so I want to kind of

00:15:38,089 --> 00:15:45,079
reiterate here that active record is a

00:15:40,369 --> 00:15:47,269
pattern it says data plus logic rotated

00:15:45,079 --> 00:15:48,739
gateway says separate them and the way

00:15:47,269 --> 00:15:50,539
we're trying to use active record a lot

00:15:48,739 --> 00:15:51,949
these days the contemporary wisdom says

00:15:50,539 --> 00:15:55,490
separate them but that's not active

00:15:51,949 --> 00:15:56,930
record anymore so

00:15:55,490 --> 00:15:58,820
seeing that prevailing wisdom says that

00:15:56,930 --> 00:16:01,279
this quote kind of early in the book

00:15:58,820 --> 00:16:02,360
jumped out at me it's just been it's

00:16:01,279 --> 00:16:04,339
been bugging me that's where this

00:16:02,360 --> 00:16:07,880
presentation came from it's been bugging

00:16:04,339 --> 00:16:09,649
me so what I propose is really kind of

00:16:07,880 --> 00:16:11,270
simple instead of fighting rails why

00:16:09,649 --> 00:16:12,830
don't we just try to be more rails than

00:16:11,270 --> 00:16:15,770
rails why don't we just try to evolve

00:16:12,830 --> 00:16:17,120
along the same idioms that we already

00:16:15,770 --> 00:16:19,130
have instead of trying to go off

00:16:17,120 --> 00:16:23,000
obliquely and fighting and work against

00:16:19,130 --> 00:16:25,490
the grain so also to borrow from fowler

00:16:23,000 --> 00:16:27,830
here I'm sure you can read the quote for

00:16:25,490 --> 00:16:32,200
yourself but in a nutshell he says

00:16:27,830 --> 00:16:35,990
active record is for simple models

00:16:32,200 --> 00:16:38,029
datamapper a pattern another pattern is

00:16:35,990 --> 00:16:41,570
good for more complex mappings between

00:16:38,029 --> 00:16:43,760
the database and your data models so

00:16:41,570 --> 00:16:46,910
again if the mapping is simple active

00:16:43,760 --> 00:16:48,980
record if it's complex data mapper so

00:16:46,910 --> 00:16:52,029
simple complex which one you want well

00:16:48,980 --> 00:16:54,560
guess what that's another heuristic but

00:16:52,029 --> 00:16:56,930
let's go and talk some about data mapper

00:16:54,560 --> 00:17:00,290
this is some UML feed a mapper pattern

00:16:56,930 --> 00:17:02,390
just explain very simply the thing on

00:17:00,290 --> 00:17:04,429
the left is your domain model object the

00:17:02,390 --> 00:17:06,230
mapper does most of the work the mapper

00:17:04,429 --> 00:17:08,630
goes out to the database gets the data

00:17:06,230 --> 00:17:10,640
creates a domain model object and

00:17:08,630 --> 00:17:12,559
returns it to the caller similarly you

00:17:10,640 --> 00:17:14,059
pass a domain model object is input to

00:17:12,559 --> 00:17:15,380
the mapper and then the mapper

00:17:14,059 --> 00:17:17,420
deconstructs it puts the data into the

00:17:15,380 --> 00:17:19,160
database the persistence is completely

00:17:17,420 --> 00:17:20,360
separate from the domain model this is

00:17:19,160 --> 00:17:23,209
what we're trying to accomplish right

00:17:20,360 --> 00:17:25,250
now with active record this is a

00:17:23,209 --> 00:17:28,910
completely different pattern than active

00:17:25,250 --> 00:17:31,280
record anyone noticed a problem here so

00:17:28,910 --> 00:17:33,530
we get a clear separation between the

00:17:31,280 --> 00:17:35,150
data source the mapping of the source to

00:17:33,530 --> 00:17:36,200
the model in the model itself this is

00:17:35,150 --> 00:17:40,790
pretty much what people have been

00:17:36,200 --> 00:17:43,130
clamoring for lately so one particularly

00:17:40,790 --> 00:17:45,290
odd thing idea i had heard was people

00:17:43,130 --> 00:17:49,040
are trying to essentially use active

00:17:45,290 --> 00:17:55,130
record as a data mapper and this was

00:17:49,040 --> 00:17:56,210
kind of my reaction to that but but

00:17:55,130 --> 00:17:57,590
let's talk about this a little bit

00:17:56,210 --> 00:17:58,820
because there's this other pattern in

00:17:57,590 --> 00:18:01,220
the book called the repository pattern

00:17:58,820 --> 00:18:05,990
and really what the repository pattern

00:18:01,220 --> 00:18:09,380
does is it hides the mapping of from the

00:18:05,990 --> 00:18:11,510
database to the domain model object

00:18:09,380 --> 00:18:14,300
it also provides a gateway for

00:18:11,510 --> 00:18:16,880
performing a query so it's just a really

00:18:14,300 --> 00:18:18,800
a rapper layer around some hypothetical

00:18:16,880 --> 00:18:21,560
mapper so the details of the map are

00:18:18,800 --> 00:18:23,120
hidden from you so there's okay so

00:18:21,560 --> 00:18:24,350
actually let me go through these these

00:18:23,120 --> 00:18:25,670
particular citations here then we're

00:18:24,350 --> 00:18:28,970
going to get onto a gem that kind of

00:18:25,670 --> 00:18:31,130
tries to do this so I've long held to

00:18:28,970 --> 00:18:33,440
the belief that layering and abstraction

00:18:31,130 --> 00:18:35,360
has a cost it's not something that's pop

00:18:33,440 --> 00:18:36,740
that's discussed popularly we love to

00:18:35,360 --> 00:18:38,690
abstract things we love to break things

00:18:36,740 --> 00:18:40,850
apart into little pieces and make them

00:18:38,690 --> 00:18:41,810
simple and write lots of nice unit tests

00:18:40,850 --> 00:18:43,160
around them but you have to put them

00:18:41,810 --> 00:18:45,050
together eventually you have to use them

00:18:43,160 --> 00:18:46,400
in a context and that means you have to

00:18:45,050 --> 00:18:47,690
think about it in a higher level you

00:18:46,400 --> 00:18:49,250
have more moving parts to deal with

00:18:47,690 --> 00:18:52,970
there's more burden on your brain

00:18:49,250 --> 00:18:54,020
managing all those parts so again Martin

00:18:52,970 --> 00:18:55,280
Fowler you should be used to seeing the

00:18:54,020 --> 00:18:56,540
name by now patterns of enterprise

00:18:55,280 --> 00:18:59,300
application architecture read the damn

00:18:56,540 --> 00:19:01,850
book I'm not going to read the quote to

00:18:59,300 --> 00:19:05,290
you again but in a nutshell layering is

00:19:01,850 --> 00:19:08,150
a good thing but it can also hurt you in

00:19:05,290 --> 00:19:09,350
direction oops sorry sometimes get

00:19:08,150 --> 00:19:11,300
cascading changes right that's the

00:19:09,350 --> 00:19:12,830
problem with layering is that I'm sure

00:19:11,300 --> 00:19:14,600
you're familiar where when you tease

00:19:12,830 --> 00:19:16,160
something apart into multiple pieces

00:19:14,600 --> 00:19:18,050
sometimes if your sake dependency

00:19:16,160 --> 00:19:20,030
injecting a value you might have to pass

00:19:18,050 --> 00:19:21,080
that to another object that you wrap

00:19:20,030 --> 00:19:23,660
that might have to pass it to another

00:19:21,080 --> 00:19:26,870
object that you wrap and then so the

00:19:23,660 --> 00:19:28,190
dependency Cascades and so one change in

00:19:26,870 --> 00:19:30,230
one place might actually end up

00:19:28,190 --> 00:19:32,210
cascading in several places so you might

00:19:30,230 --> 00:19:34,670
look might believe that you don't have

00:19:32,210 --> 00:19:36,500
too much you might believe that you have

00:19:34,670 --> 00:19:40,130
low coupling and actually you have

00:19:36,500 --> 00:19:46,040
somewhat high coupling in direction is a

00:19:40,130 --> 00:19:47,630
lot like layering also cuts both ways so

00:19:46,040 --> 00:19:49,130
every time you break one thing into two

00:19:47,630 --> 00:19:51,380
pieces you have more than one thing to

00:19:49,130 --> 00:19:52,820
manage what I was saying earlier that's

00:19:51,380 --> 00:19:53,600
also martin fowler i'd like to think if

00:19:52,820 --> 00:19:57,620
you're not going to listen to me at

00:19:53,600 --> 00:19:59,900
least listen to him so managing software

00:19:57,620 --> 00:20:03,790
complexity is hard take a break have

00:19:59,900 --> 00:20:07,850
another beer no ok fine I'll keep going

00:20:03,790 --> 00:20:09,200
so ed r is a gem that I came upon lately

00:20:07,850 --> 00:20:11,480
that implements this repository pattern

00:20:09,200 --> 00:20:13,250
that i mentioned earlier really tiny

00:20:11,480 --> 00:20:15,590
text here but that's a link to a blog

00:20:13,250 --> 00:20:17,510
post that talks quite a bit about it but

00:20:15,590 --> 00:20:20,030
i have some code samples from the blog

00:20:17,510 --> 00:20:22,970
post in here so this is an example a

00:20:20,030 --> 00:20:26,809
dr's an example of using active record

00:20:22,970 --> 00:20:28,340
as a data mapper a very simple data

00:20:26,809 --> 00:20:31,330
mapper but using active record is a very

00:20:28,340 --> 00:20:34,700
simple data mapper in a repository so

00:20:31,330 --> 00:20:36,830
active record obvious as you know does a

00:20:34,700 --> 00:20:38,240
one-to-one mapping between a table and a

00:20:36,830 --> 00:20:39,770
domain model object data mapper doesn't

00:20:38,240 --> 00:20:41,600
require that so you could say that

00:20:39,770 --> 00:20:43,760
active record can be used as a really

00:20:41,600 --> 00:20:44,929
dumb data mapper where it's a highly

00:20:43,760 --> 00:20:47,450
constrained one that only doesn't

00:20:44,929 --> 00:20:50,000
one-to-one mapping so this is your

00:20:47,450 --> 00:20:51,890
active record object in this case all it

00:20:50,000 --> 00:20:55,429
does is define the relationships and

00:20:51,890 --> 00:20:58,100
validations then you have a domain model

00:20:55,429 --> 00:21:02,090
object that has an extra eonline 3 so

00:20:58,100 --> 00:21:04,100
just pretend that's not there and but

00:21:02,090 --> 00:21:06,950
you look at this and note that this

00:21:04,100 --> 00:21:10,190
doesn't look like a plain old Ruby

00:21:06,950 --> 00:21:12,530
object there's a some EDR specific stuff

00:21:10,190 --> 00:21:15,140
going on in here and if that doesn't

00:21:12,530 --> 00:21:16,640
make you happy then welcome to the club

00:21:15,140 --> 00:21:18,890
I didn't really like that so much when I

00:21:16,640 --> 00:21:22,340
saw it earlier so we'll talk more about

00:21:18,890 --> 00:21:23,570
that in a minute and then there's where

00:21:22,340 --> 00:21:25,429
you declare the mapping between the

00:21:23,570 --> 00:21:27,169
domain model object and the active

00:21:25,429 --> 00:21:29,450
record object anyone notice a little bit

00:21:27,169 --> 00:21:32,000
of repetition there it may be something

00:21:29,450 --> 00:21:33,200
that could be cleaned up and then you

00:21:32,000 --> 00:21:36,980
need to find their posit or e itself

00:21:33,200 --> 00:21:38,299
which just mediates the the queries and

00:21:36,980 --> 00:21:39,470
creating of the domain model so it's

00:21:38,299 --> 00:21:41,270
really pretty simple it's just you

00:21:39,470 --> 00:21:43,610
define classical methods in your

00:21:41,270 --> 00:21:46,070
repository performs the query gets you

00:21:43,610 --> 00:21:48,950
back your domain model object and if I

00:21:46,070 --> 00:21:51,049
submerse the other way around so I think

00:21:48,950 --> 00:21:53,260
we could be done with edr to make it

00:21:51,049 --> 00:21:57,950
potentially useful in the short term is

00:21:53,260 --> 00:22:00,110
that we could say do this via standard

00:21:57,950 --> 00:22:01,520
because you see order order data looks

00:22:00,110 --> 00:22:04,159
like a convention waiting to happen

00:22:01,520 --> 00:22:05,630
right so if you say that your active

00:22:04,159 --> 00:22:06,890
record object will always end in data

00:22:05,630 --> 00:22:09,260
and so you just look for the domain

00:22:06,890 --> 00:22:10,760
model object and use that or actually

00:22:09,260 --> 00:22:12,380
probably better look for the active

00:22:10,760 --> 00:22:15,320
record object shave off data look for

00:22:12,380 --> 00:22:17,510
the domain model object and then this

00:22:15,320 --> 00:22:18,919
guy declaring fields why do we need the

00:22:17,510 --> 00:22:20,240
clear fields active record or e does

00:22:18,919 --> 00:22:22,940
that so couldn't we just have the

00:22:20,240 --> 00:22:25,390
framework reflect on the attributes say

00:22:22,940 --> 00:22:27,200
for example and wrapping associations

00:22:25,390 --> 00:22:28,730
why do we have to declare the

00:22:27,200 --> 00:22:30,950
associations on the model can't we also

00:22:28,730 --> 00:22:32,450
get that off active record so what I'm

00:22:30,950 --> 00:22:34,730
left with is can't we just have a plain

00:22:32,450 --> 00:22:36,650
old domain model entirely by convention

00:22:34,730 --> 00:22:38,660
maybe mix in

00:22:36,650 --> 00:22:41,090
you know any specific behavior we need

00:22:38,660 --> 00:22:43,670
for the framework at runtime and then

00:22:41,090 --> 00:22:45,140
your domain model class is just a plain

00:22:43,670 --> 00:22:47,870
old Ruby object and you could just test

00:22:45,140 --> 00:22:49,850
it ordinarily just without a database so

00:22:47,870 --> 00:22:51,560
I saw that and I thought gee that'd be

00:22:49,850 --> 00:22:54,920
really nice and I do it right now except

00:22:51,560 --> 00:22:58,070
been working on these damn slides so you

00:22:54,920 --> 00:23:00,440
know PDI please do investigate I might

00:22:58,070 --> 00:23:02,540
actually also after this talk but as I

00:23:00,440 --> 00:23:04,610
said it's kind of busy I think this

00:23:02,540 --> 00:23:06,950
might be a good stopgap but really I

00:23:04,610 --> 00:23:09,050
think we should consider using the data

00:23:06,950 --> 00:23:11,510
mapper pattern I don't mean the data

00:23:09,050 --> 00:23:13,010
mapper gem the data mapper gem there

00:23:11,510 --> 00:23:14,690
there's I guess one and a half

00:23:13,010 --> 00:23:17,240
incarnations right now the current data

00:23:14,690 --> 00:23:18,740
mapper is actually an active record

00:23:17,240 --> 00:23:19,730
object but an active record but let me

00:23:18,740 --> 00:23:20,870
get there the reason we don't want to

00:23:19,730 --> 00:23:22,880
use data mapper is because it's all

00:23:20,870 --> 00:23:24,470
Jessica's fault but I'm gonna keep

00:23:22,880 --> 00:23:25,730
moving right along here the real reason

00:23:24,470 --> 00:23:27,680
we don't want to use data mapper is

00:23:25,730 --> 00:23:29,960
because it's not a true data mapper as I

00:23:27,680 --> 00:23:31,640
said it's actually an active record I

00:23:29,960 --> 00:23:34,070
hope that's not confusing note the white

00:23:31,640 --> 00:23:36,050
space between data and mapper and white

00:23:34,070 --> 00:23:37,370
space between active and record talking

00:23:36,050 --> 00:23:42,770
about patterns on the right gems on the

00:23:37,370 --> 00:23:44,420
left datamapper to however is still very

00:23:42,770 --> 00:23:45,830
much a work in progress you don't want

00:23:44,420 --> 00:23:48,710
to try using it in production yet it's

00:23:45,830 --> 00:23:51,200
not ready it's still missing any kind of

00:23:48,710 --> 00:23:53,030
session management so application

00:23:51,200 --> 00:23:55,520
specific transactions of the pattern

00:23:53,030 --> 00:23:57,200
that martin fowler uses is he calls it a

00:23:55,520 --> 00:23:59,180
unit of work something that tracks all

00:23:57,200 --> 00:24:00,410
the different changes that are that have

00:23:59,180 --> 00:24:02,030
been made to the domain model so that

00:24:00,410 --> 00:24:05,060
way when you say go persist it that it

00:24:02,030 --> 00:24:06,170
knows which things to persist it doesn't

00:24:05,060 --> 00:24:08,120
have that as missing a few other

00:24:06,170 --> 00:24:09,950
capabilities but it's been coming along

00:24:08,120 --> 00:24:11,350
and quite frankly after this talk I want

00:24:09,950 --> 00:24:13,670
to go work on it I've been talking to

00:24:11,350 --> 00:24:16,340
before this talk i was talking to dan

00:24:13,670 --> 00:24:18,620
cub the guy who's the lead developer on

00:24:16,340 --> 00:24:21,530
it there peterson look actually to

00:24:18,620 --> 00:24:24,530
people who work with matt their smile

00:24:21,530 --> 00:24:27,380
over there yes good to people that work

00:24:24,530 --> 00:24:28,460
with matt and dan's a great guy i'm

00:24:27,380 --> 00:24:30,560
hoping to work with them a little bit on

00:24:28,460 --> 00:24:31,880
it because i think this is the future

00:24:30,560 --> 00:24:35,660
i'll talk about that a little more later

00:24:31,880 --> 00:24:37,280
but as i already said they're still work

00:24:35,660 --> 00:24:39,230
in progress always looking for help dan

00:24:37,280 --> 00:24:40,760
is a great guy if you're looking for an

00:24:39,230 --> 00:24:43,280
open source project maybe to get your

00:24:40,760 --> 00:24:45,320
feet wet on really is a super nice guy

00:24:43,280 --> 00:24:47,960
very bright great to work with couldn't

00:24:45,320 --> 00:24:49,370
recommend more highly so be a great

00:24:47,960 --> 00:24:50,150
project to work on if you want to try to

00:24:49,370 --> 00:24:52,550
get an open sore

00:24:50,150 --> 00:24:54,170
so his contact information on Twitter

00:24:52,550 --> 00:24:58,030
again you don't have to write all this

00:24:54,170 --> 00:25:01,160
down and the data mapper channel on IRC

00:24:58,030 --> 00:25:04,040
so let's give another example as we all

00:25:01,160 --> 00:25:05,660
know rails templating sucks but you can

00:25:04,040 --> 00:25:09,890
more easily say really templating just

00:25:05,660 --> 00:25:11,330
sucks it sucked for the past oh what 15

00:25:09,890 --> 00:25:15,260
years 20 years almost now hard to

00:25:11,330 --> 00:25:17,180
believe so because we've had we had jsps

00:25:15,260 --> 00:25:18,590
asp is all that business and then we had

00:25:17,180 --> 00:25:19,970
er b which is really not all that

00:25:18,590 --> 00:25:21,500
terribly different when applied to web

00:25:19,970 --> 00:25:23,210
pages and Hammel makes it a little bit

00:25:21,500 --> 00:25:25,310
better and they're all kinds of other

00:25:23,210 --> 00:25:26,660
templating approaches and yes you could

00:25:25,310 --> 00:25:28,160
say things like mustache make it may be

00:25:26,660 --> 00:25:30,010
a little better getting more logic out

00:25:28,160 --> 00:25:32,840
of the templates but templating sucks

00:25:30,010 --> 00:25:34,160
which is basically what valor is saying

00:25:32,840 --> 00:25:35,810
here that templating is hard to maintain

00:25:34,160 --> 00:25:39,290
and hard to change and hard to test

00:25:35,810 --> 00:25:41,570
rather one of the modern or a few the

00:25:39,290 --> 00:25:43,880
modern techniques that are often applied

00:25:41,570 --> 00:25:45,680
our presenters decorators view models

00:25:43,880 --> 00:25:47,720
I'm not going to go into that right now

00:25:45,680 --> 00:25:49,760
because I don't know where Mike Moore is

00:25:47,720 --> 00:25:52,370
if he's in the screen right now but in

00:25:49,760 --> 00:25:53,420
any event he did a presentation I guess

00:25:52,370 --> 00:25:55,880
he's not going to see that I mentioned

00:25:53,420 --> 00:25:58,370
him he did a presentation on all about

00:25:55,880 --> 00:26:00,800
all the differences between these good

00:25:58,370 --> 00:26:02,720
presentation watch that Jeff Casimir did

00:26:00,800 --> 00:26:03,920
a presentation on how we need to try to

00:26:02,720 --> 00:26:05,930
get away from fat models where he

00:26:03,920 --> 00:26:08,300
introduces Draper which is a presenter

00:26:05,930 --> 00:26:09,680
gem go watch that I'm not going to talk

00:26:08,300 --> 00:26:11,870
about those this has been very well

00:26:09,680 --> 00:26:13,970
covered but i'm going to traduce another

00:26:11,870 --> 00:26:15,890
alternative really one of the things

00:26:13,970 --> 00:26:18,320
that helped inspire this talk was i was

00:26:15,890 --> 00:26:22,270
introduced to the cells gem by nick

00:26:18,320 --> 00:26:24,470
cetera about a year ago and sells

00:26:22,270 --> 00:26:27,200
proposes that we just don't use partials

00:26:24,470 --> 00:26:29,930
anymore instead we try a more

00:26:27,200 --> 00:26:32,930
model-view-controller approach to our

00:26:29,930 --> 00:26:35,330
views and what an example of cells look

00:26:32,930 --> 00:26:37,310
like here's a template instead of render

00:26:35,330 --> 00:26:39,010
you know partial we're rendering a cell

00:26:37,310 --> 00:26:41,420
so we have a different method called and

00:26:39,010 --> 00:26:42,770
a cell should look kind of familiar

00:26:41,420 --> 00:26:45,320
because in a lot of ways it's like a

00:26:42,770 --> 00:26:47,540
controller although I think it requires

00:26:45,320 --> 00:26:49,430
that we explicitly call render at the

00:26:47,540 --> 00:26:50,510
end of the action I don't know if Nick's

00:26:49,430 --> 00:26:52,430
going to change that at some point in

00:26:50,510 --> 00:26:54,050
the future but hey you could always

00:26:52,430 --> 00:26:57,470
contribute to it it's open the source as

00:26:54,050 --> 00:26:59,390
well but the idea behind cells is that

00:26:57,470 --> 00:27:02,570
instead of these partials we just have

00:26:59,390 --> 00:27:03,770
layers of nested components inside

00:27:02,570 --> 00:27:05,480
overview

00:27:03,770 --> 00:27:06,650
instead of having one controller that

00:27:05,480 --> 00:27:08,540
has all these different instance

00:27:06,650 --> 00:27:11,720
variables you have a controller that

00:27:08,540 --> 00:27:13,670
refers to a view that refers to a nested

00:27:11,720 --> 00:27:15,530
controller nested controllers for

00:27:13,670 --> 00:27:18,920
different components that have their own

00:27:15,530 --> 00:27:20,480
views and so on and so on so if you want

00:27:18,920 --> 00:27:22,220
to make your views and your controllers

00:27:20,480 --> 00:27:26,150
more testable you could break them into

00:27:22,220 --> 00:27:29,030
more pieces already mentioned in MVP if

00:27:26,150 --> 00:27:30,710
you see and we end up with the layering

00:27:29,030 --> 00:27:32,420
problem i mentioned earlier the

00:27:30,710 --> 00:27:34,370
indirection can cost you because then

00:27:32,420 --> 00:27:36,110
you might have a cascading changes

00:27:34,370 --> 00:27:38,240
problem where something that you passed

00:27:36,110 --> 00:27:39,380
and this is not entirely unique the

00:27:38,240 --> 00:27:40,700
cells though you probably have this with

00:27:39,380 --> 00:27:42,530
your partial so you have an instance

00:27:40,700 --> 00:27:43,910
variable you set in the controller you

00:27:42,530 --> 00:27:45,080
pass it to a partial which has to get

00:27:43,910 --> 00:27:47,330
past to a partial which has to get past

00:27:45,080 --> 00:27:50,900
to a partial and maintaining that can be

00:27:47,330 --> 00:27:53,960
a pain so can we be more rails than

00:27:50,900 --> 00:27:55,100
rails cells maybe I think you could

00:27:53,960 --> 00:27:58,310
possibly use a little bit of help

00:27:55,100 --> 00:28:02,240
datamapper too definitely but it's not

00:27:58,310 --> 00:28:03,950
there yet needs a lot of help but also

00:28:02,240 --> 00:28:05,300
i'm also going to recommend that you

00:28:03,950 --> 00:28:07,270
guys be careful about which ideas you

00:28:05,300 --> 00:28:10,420
promote especially if you're a a

00:28:07,270 --> 00:28:14,750
quote-unquote pundit or domain expert

00:28:10,420 --> 00:28:16,100
because when a less experienced person

00:28:14,750 --> 00:28:17,870
is looking for information if they don't

00:28:16,100 --> 00:28:19,640
have someone readily available they're

00:28:17,870 --> 00:28:21,140
going to turn a Google right and Google

00:28:19,640 --> 00:28:23,180
is probably going to come up with blog

00:28:21,140 --> 00:28:24,800
posts and presentations and blog posts

00:28:23,180 --> 00:28:26,960
and presentations are usually full of

00:28:24,800 --> 00:28:29,870
everyone's latest favorite pet projects

00:28:26,960 --> 00:28:31,640
and pet patterns a lot of people are

00:28:29,870 --> 00:28:33,380
putting patterns and tools out there

00:28:31,640 --> 00:28:34,970
that haven't been particularly well

00:28:33,380 --> 00:28:36,320
tested like this red tape gym at some

00:28:34,970 --> 00:28:40,250
jerk wrote a few weeks ago a few months

00:28:36,320 --> 00:28:42,500
ago and then promoting them publicly so

00:28:40,250 --> 00:28:44,150
these new tools have the potential to be

00:28:42,500 --> 00:28:47,030
very useful but if they haven't been

00:28:44,150 --> 00:28:48,350
well tried then we could just be setting

00:28:47,030 --> 00:28:51,470
up less experienced people for a lot of

00:28:48,350 --> 00:28:56,120
pain so what I recommend instead is that

00:28:51,470 --> 00:28:58,850
we try to contrite to agree on an

00:28:56,120 --> 00:29:00,650
augmentative stack on top of rails

00:28:58,850 --> 00:29:02,750
because there's that that extra twenty

00:29:00,650 --> 00:29:05,030
percent we know it's there we know what

00:29:02,750 --> 00:29:07,730
some of the problems are these days why

00:29:05,030 --> 00:29:09,260
don't we try to agree on how we can go a

00:29:07,730 --> 00:29:11,210
little bit further than rails maybe go

00:29:09,260 --> 00:29:12,440
another five or ten percent does that's

00:29:11,210 --> 00:29:13,670
going to make it easier not just for the

00:29:12,440 --> 00:29:15,490
experts but especially for the new

00:29:13,670 --> 00:29:17,350
people

00:29:15,490 --> 00:29:18,850
so that's what I mean when I say here

00:29:17,350 --> 00:29:20,770
consider your audience frankly the

00:29:18,850 --> 00:29:22,120
average developer is not as talented as

00:29:20,770 --> 00:29:23,980
most of the people in this room and i'm

00:29:22,120 --> 00:29:25,150
not just pandering when i say that

00:29:23,980 --> 00:29:26,470
you're going to a conference because

00:29:25,150 --> 00:29:29,170
you're interested in growing as a

00:29:26,470 --> 00:29:30,520
developer average developers are not

00:29:29,170 --> 00:29:33,850
really interested in growing I know I've

00:29:30,520 --> 00:29:35,830
worked with a lot as a consultant so if

00:29:33,850 --> 00:29:37,690
we can give them more low-hanging fruit

00:29:35,830 --> 00:29:39,070
to work with then they're going to come

00:29:37,690 --> 00:29:41,440
up with better work which will make our

00:29:39,070 --> 00:29:45,090
jobs easier two things we can focus on

00:29:41,440 --> 00:29:48,010
the hard problems so I already mentioned

00:29:45,090 --> 00:29:49,660
datamapper to and cells cells can help

00:29:48,010 --> 00:29:51,580
you now although I think it could

00:29:49,660 --> 00:29:54,520
probably a little bit better the Draper

00:29:51,580 --> 00:29:55,630
gem is a very nice interface actually

00:29:54,520 --> 00:29:58,660
the maintainer is right over there so

00:29:55,630 --> 00:30:02,020
blame him Steve cloud Nick hi steve has

00:29:58,660 --> 00:30:03,640
a very nice interface a nice way to help

00:30:02,020 --> 00:30:06,370
you get some of your logic out of your

00:30:03,640 --> 00:30:07,540
templates again that downside in terms

00:30:06,370 --> 00:30:08,830
of object orientation is we're

00:30:07,540 --> 00:30:09,790
introducing a whole their different kind

00:30:08,830 --> 00:30:11,320
of objects so it's a little more

00:30:09,790 --> 00:30:13,480
complexity so maybe it's not so friendly

00:30:11,320 --> 00:30:16,360
to the average developer but might be

00:30:13,480 --> 00:30:17,980
good for you guys already mentioned for

00:30:16,360 --> 00:30:20,400
the future data mapper to and Ed are

00:30:17,980 --> 00:30:23,940
both of these could use your love and

00:30:20,400 --> 00:30:23,940
that's all I've got

00:30:59,890 --> 00:31:01,950

YouTube URL: https://www.youtube.com/watch?v=HUgtPaiOL_8


