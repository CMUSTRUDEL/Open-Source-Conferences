Title: Ruby On Ales 2013 How Ruby makes Better Beer by Andrew Nordman
Publication date: 2020-01-28
Playlist: Ruby on Ales 2013
Description: 
	Craft beer is great. Ruby is great. When you can combine the two, you get a product that can only be described as Liquid Awesome. In this session, we will go over the brewing process and show how Ruby can help make better beer using automation, temperature control, and recipe analysis. We will look at a Ruby application created with recipe design and testing in mind, as well as a Ruby-based brewery control system run on a Raspberry Pi.

Help us caption & translate this video!

http://amara.org/v/FGbK/
Captions: 
	00:00:12,650 --> 00:00:14,710
you

00:00:20,560 --> 00:00:25,070
first up I'm glad that I'm right before

00:00:23,270 --> 00:00:26,720
lunch because it gives enough time for

00:00:25,070 --> 00:00:28,130
people have had enough alcohol that any

00:00:26,720 --> 00:00:32,570
scripts that I have in this talk will be

00:00:28,130 --> 00:00:34,670
mitigated how many people are fans of

00:00:32,570 --> 00:00:35,900
beer if you don't raise your hand and

00:00:34,670 --> 00:00:40,129
you're at this conference I'm a little

00:00:35,900 --> 00:00:43,180
confused okay now how many people are

00:00:40,129 --> 00:00:46,489
into making their own beer homebrewing

00:00:43,180 --> 00:00:48,200
okay not a huge amount but that's okay

00:00:46,489 --> 00:00:50,930
i'm prepared to give you a four hour

00:00:48,200 --> 00:00:52,519
lecture on how home brewing works and

00:00:50,930 --> 00:00:54,800
how fantastic it is but unfortunately

00:00:52,519 --> 00:00:59,510
they've only given me 30 minutes so

00:00:54,800 --> 00:01:01,750
let's begin I as mentioned a mangie

00:00:59,510 --> 00:01:06,979
Nordmann and I like two main things one

00:01:01,750 --> 00:01:09,890
Ruby Ruby is great beer beer is great so

00:01:06,979 --> 00:01:12,950
what happens when you combine Ruby and

00:01:09,890 --> 00:01:14,720
beer there's only one possible picture

00:01:12,950 --> 00:01:19,340
that can describe how I feel about my

00:01:14,720 --> 00:01:22,370
two passions that is it that is it right

00:01:19,340 --> 00:01:23,720
there um so what I want to talk about

00:01:22,370 --> 00:01:25,970
and part of the reason why I did know

00:01:23,720 --> 00:01:29,330
all of this is I started home brewing in

00:01:25,970 --> 00:01:31,250
2010 a friend of mine said hey you need

00:01:29,330 --> 00:01:34,610
to start making beer I said hey I don't

00:01:31,250 --> 00:01:36,800
like beer is that okay uh here start

00:01:34,610 --> 00:01:38,840
making beer I was very confused as to

00:01:36,800 --> 00:01:40,670
why some one that told me that I that

00:01:38,840 --> 00:01:42,770
knows that I don't like beer wanted me

00:01:40,670 --> 00:01:44,690
to make it and i made my first batch it

00:01:42,770 --> 00:01:46,550
was terrible i made my second batch it

00:01:44,690 --> 00:01:48,050
was also terrible finally on the third

00:01:46,550 --> 00:01:49,310
batch i finally realized that hey

00:01:48,050 --> 00:01:50,960
there's more to this than just throwing

00:01:49,310 --> 00:01:52,280
a few things together and hoping that at

00:01:50,960 --> 00:01:54,740
the end something doesn't taste terrible

00:01:52,280 --> 00:01:56,870
so i really started getting into the

00:01:54,740 --> 00:02:00,310
process of home brewing and how you make

00:01:56,870 --> 00:02:03,410
beer and i found that it is a beautiful

00:02:00,310 --> 00:02:05,360
combination of what i do in programming

00:02:03,410 --> 00:02:08,119
and I just immediately got hooked on to

00:02:05,360 --> 00:02:09,709
it and actually as of last year started

00:02:08,119 --> 00:02:12,470
up my own Brewing Company Kadim and

00:02:09,709 --> 00:02:14,870
Brewing Company we are a nano-scale

00:02:12,470 --> 00:02:17,060
brewery what that means is we make less

00:02:14,870 --> 00:02:21,680
than seven barrels per batch which is

00:02:17,060 --> 00:02:24,379
217 gallons at a time gent much larger

00:02:21,680 --> 00:02:27,080
microscale stuff will do at least that

00:02:24,379 --> 00:02:30,400
if not considerably more and we're

00:02:27,080 --> 00:02:32,090
actually in progress process of

00:02:30,400 --> 00:02:33,800
licensing actually be able to sell

00:02:32,090 --> 00:02:34,850
anything so all I can do is set

00:02:33,800 --> 00:02:37,070
around making beer and working on

00:02:34,850 --> 00:02:41,930
recipes it's a terrible terrible task

00:02:37,070 --> 00:02:44,030
but I am up for the challenge so craft

00:02:41,930 --> 00:02:47,900
brewing is the blending of art and

00:02:44,030 --> 00:02:50,870
science you have the art and creativity

00:02:47,900 --> 00:02:53,330
of creating these recipes and taking

00:02:50,870 --> 00:02:54,920
just a single concept or a few key

00:02:53,330 --> 00:02:57,980
characteristics of a particular recipe

00:02:54,920 --> 00:03:00,290
or an idea and then you blend that into

00:02:57,980 --> 00:03:03,020
the science of extracting your sugars

00:03:00,290 --> 00:03:09,100
and being able to have the final result

00:03:03,020 --> 00:03:12,320
come out in the reproducible fashion so

00:03:09,100 --> 00:03:17,930
what I ended up doing was implementing

00:03:12,320 --> 00:03:20,060
all of this automation side and let me

00:03:17,930 --> 00:03:21,470
back up so one of the main problems that

00:03:20,060 --> 00:03:23,900
you have when dealing with recipe design

00:03:21,470 --> 00:03:26,840
is you need to be able to consistently

00:03:23,900 --> 00:03:28,700
but monitor what you're doing when

00:03:26,840 --> 00:03:31,970
you're making a batch if I put in the

00:03:28,700 --> 00:03:34,160
same ingredients both in two different

00:03:31,970 --> 00:03:36,560
batches and I want the same recipe I

00:03:34,160 --> 00:03:39,140
need to be able to control all of the

00:03:36,560 --> 00:03:42,020
human error because we are bad at doing

00:03:39,140 --> 00:03:44,239
things and being able to reproduce so

00:03:42,020 --> 00:03:46,550
what did i do when i normally have

00:03:44,239 --> 00:03:49,310
problems of having to reproduce things I

00:03:46,550 --> 00:03:51,620
automated it so one of the things that I

00:03:49,310 --> 00:03:53,330
did was take a Raspberry Pi which I had

00:03:51,620 --> 00:03:55,160
sitting around because I said hey cool I

00:03:53,330 --> 00:03:57,200
want to raspberry PI's $35 for a

00:03:55,160 --> 00:03:59,930
computer I picked one up initially and

00:03:57,200 --> 00:04:01,370
said great what the hell do I do with a

00:03:59,930 --> 00:04:03,620
computer this small it doesn't do

00:04:01,370 --> 00:04:06,520
anything so I started writing some

00:04:03,620 --> 00:04:08,690
software in order to help brew it and

00:04:06,520 --> 00:04:10,070
the one of the thing the initial

00:04:08,690 --> 00:04:12,290
responses i had when i started talking

00:04:10,070 --> 00:04:14,120
to people about this was why a raspberry

00:04:12,290 --> 00:04:19,450
pi over something like an arduino you're

00:04:14,120 --> 00:04:21,500
handling lower level mechanics and and

00:04:19,450 --> 00:04:22,700
you you should be focusing on lower

00:04:21,500 --> 00:04:24,200
level stuff like arduinos that can

00:04:22,700 --> 00:04:26,360
handle temperature integrations and

00:04:24,200 --> 00:04:29,000
things like that and the main answer is

00:04:26,360 --> 00:04:30,470
arduino zar expensive raspberry PI's are

00:04:29,000 --> 00:04:34,010
cheap and I like Ruby and you can't

00:04:30,470 --> 00:04:35,390
right Ruby on an arduino directly so now

00:04:34,010 --> 00:04:37,130
that that slide is completely out of

00:04:35,390 --> 00:04:38,780
order and I can get back to how it

00:04:37,130 --> 00:04:40,330
should actually have been we're going to

00:04:38,780 --> 00:04:43,010
talk about what it takes to go from

00:04:40,330 --> 00:04:45,169
coming up with an idea on a beer to

00:04:43,010 --> 00:04:47,420
finishing a beer and being able to drink

00:04:45,169 --> 00:04:51,140
it first thing you have to do is

00:04:47,420 --> 00:04:52,910
create a recipe recipes are basically

00:04:51,140 --> 00:04:54,170
coming up without certain style that

00:04:52,910 --> 00:04:56,570
characteristic I want to make a

00:04:54,170 --> 00:04:59,000
ridiculous IPA that blows my mouth away

00:04:56,570 --> 00:05:02,360
every time or I want a really bitter

00:04:59,000 --> 00:05:04,340
dark beer that reminds me of s'mores

00:05:02,360 --> 00:05:06,230
something like that and then you start

00:05:04,340 --> 00:05:08,390
picking in your grains your hops your

00:05:06,230 --> 00:05:11,870
water profile your yeasts all of these

00:05:08,390 --> 00:05:14,120
things that blend together and create

00:05:11,870 --> 00:05:15,680
that final product then you start

00:05:14,120 --> 00:05:17,210
planning how it's going to ferment what

00:05:15,680 --> 00:05:18,320
the temperatures are going to be like so

00:05:17,210 --> 00:05:20,380
that the yeast that's going to be

00:05:18,320 --> 00:05:23,510
converting all those sugars into alcohol

00:05:20,380 --> 00:05:25,760
can operate at maximum capacity and then

00:05:23,510 --> 00:05:29,390
you carbonate that sucker because flat

00:05:25,760 --> 00:05:31,160
beer doesn't taste good so one way that

00:05:29,390 --> 00:05:34,280
software has already been able to help

00:05:31,160 --> 00:05:36,200
improve making recipes is a software

00:05:34,280 --> 00:05:39,440
called beer Smith what it does is it

00:05:36,200 --> 00:05:41,210
takes a lot of the science of how much

00:05:39,440 --> 00:05:43,550
your how many sugars you're going to get

00:05:41,210 --> 00:05:46,040
out of a particular batch and based on

00:05:43,550 --> 00:05:48,320
your equipment rates and how how

00:05:46,040 --> 00:05:51,620
everything how you're making your beer

00:05:48,320 --> 00:05:55,580
what you can expect and a lot of people

00:05:51,620 --> 00:05:58,400
think that a beer Smith is a little

00:05:55,580 --> 00:06:00,290
primitive ah but at the end of the day

00:05:58,400 --> 00:06:02,390
there's just there's way too much math

00:06:00,290 --> 00:06:04,160
that has been put into software that

00:06:02,390 --> 00:06:05,420
helps design recipes for me to really

00:06:04,160 --> 00:06:07,070
want to turn around and reinvent the

00:06:05,420 --> 00:06:08,180
wheel as you see there's a lot of other

00:06:07,070 --> 00:06:09,950
tech that I've already had to write on

00:06:08,180 --> 00:06:13,310
my own recreating beer Smith was just

00:06:09,950 --> 00:06:15,860
not on the list so the next thing when

00:06:13,310 --> 00:06:18,260
you're creating recipes is you need had

00:06:15,860 --> 00:06:20,330
to have a lot of notes you need to take

00:06:18,260 --> 00:06:23,450
a look at every time that you're making

00:06:20,330 --> 00:06:24,740
a batch how much in what's what the

00:06:23,450 --> 00:06:27,680
flavors are like what sort of

00:06:24,740 --> 00:06:29,180
temperature variations you had the main

00:06:27,680 --> 00:06:30,830
things that you're dealing with both as

00:06:29,180 --> 00:06:33,320
you're brewing and as you're fermenting

00:06:30,830 --> 00:06:36,020
is consistency in temperature and in

00:06:33,320 --> 00:06:39,140
duration so being able to take notes

00:06:36,020 --> 00:06:41,390
saying on this particular batch I had

00:06:39,140 --> 00:06:43,400
temperatures dropped by five degrees and

00:06:41,390 --> 00:06:46,640
as a result the flavors are a little off

00:06:43,400 --> 00:06:48,380
or my the yeast ended up fermenting a

00:06:46,640 --> 00:06:51,350
little too aggressively things of that

00:06:48,380 --> 00:06:52,820
nature and then you need to be able to

00:06:51,350 --> 00:06:54,890
look at individual batches and how that

00:06:52,820 --> 00:06:58,240
reflects recipes so that you can have a

00:06:54,890 --> 00:07:00,200
further iterations on that you're

00:06:58,240 --> 00:07:01,009
essentially treating your recipes like

00:07:00,200 --> 00:07:02,659
your application

00:07:01,009 --> 00:07:05,300
and your equipment that allows you to

00:07:02,659 --> 00:07:07,729
brew as your servers you're actively

00:07:05,300 --> 00:07:09,619
monitoring and engaging how effective

00:07:07,729 --> 00:07:12,199
your equipment is and then compensating

00:07:09,619 --> 00:07:13,699
for that for how your recipes and how

00:07:12,199 --> 00:07:18,110
your brewing and how you're making your

00:07:13,699 --> 00:07:21,979
beer and seriously I cannot mention

00:07:18,110 --> 00:07:24,139
enough log everything log everything I

00:07:21,979 --> 00:07:25,969
have talked to brewers and all they'll

00:07:24,139 --> 00:07:29,449
end up writing from when they make a

00:07:25,969 --> 00:07:31,939
particular batch is how how long it took

00:07:29,449 --> 00:07:33,439
them and if something some major

00:07:31,939 --> 00:07:34,999
cataclysmic thing happened like oh I

00:07:33,439 --> 00:07:36,860
happen to dump all the beer on the floor

00:07:34,999 --> 00:07:38,779
and that's it as far as what they've

00:07:36,860 --> 00:07:41,180
written down that does not help at all

00:07:38,779 --> 00:07:44,059
especially when you're trying to create

00:07:41,180 --> 00:07:46,189
recipes when you're trying to expand out

00:07:44,059 --> 00:07:49,300
and be able to do your own thing rather

00:07:46,189 --> 00:07:53,689
than taking other people's recipes

00:07:49,300 --> 00:07:56,839
careful notes are important so what I

00:07:53,689 --> 00:07:59,479
ended up doing is doing is creating a

00:07:56,839 --> 00:08:01,159
new application called brew lab what it

00:07:59,479 --> 00:08:03,589
does is it create work picks up where

00:08:01,159 --> 00:08:05,809
beer Smith left leaves off where in beer

00:08:03,589 --> 00:08:07,999
Smith creates your recipes you get the

00:08:05,809 --> 00:08:09,740
general high-concept and this is what's

00:08:07,999 --> 00:08:12,199
what's going to happen what it doesn't

00:08:09,740 --> 00:08:15,709
do is look at how individual batches

00:08:12,199 --> 00:08:16,759
work and how you're going to what

00:08:15,709 --> 00:08:19,009
happened when you're making the beer

00:08:16,759 --> 00:08:21,469
what adjustments you made because you

00:08:19,009 --> 00:08:23,959
may find that on batch number seven

00:08:21,469 --> 00:08:24,949
you've made enough tweaks that you

00:08:23,959 --> 00:08:26,899
really don't like the direction that

00:08:24,949 --> 00:08:28,309
you're going you really like bachelor

00:08:26,899 --> 00:08:30,080
number four but what did you really do

00:08:28,309 --> 00:08:32,060
in batch number four and what changes

00:08:30,080 --> 00:08:34,069
did you have between those batches that

00:08:32,060 --> 00:08:37,069
impacted whether you liked it or didn't

00:08:34,069 --> 00:08:39,979
like it so what it ends up doing is it

00:08:37,069 --> 00:08:42,769
imports beer Smith recipes it associates

00:08:39,979 --> 00:08:44,720
those batch it keeps kate's the idea of

00:08:42,769 --> 00:08:46,940
batches with recipes rather than just

00:08:44,720 --> 00:08:48,500
creating a new recipe and making tweaks

00:08:46,940 --> 00:08:49,940
and if you want to make another recipe

00:08:48,500 --> 00:08:51,500
or another derivation of the recipe

00:08:49,940 --> 00:08:53,930
you're creating a whole new recipe and

00:08:51,500 --> 00:08:55,940
it stores all of your time's your

00:08:53,930 --> 00:08:57,740
temperatures and all of that notation

00:08:55,940 --> 00:09:00,170
for you so you have an easy way to be

00:08:57,740 --> 00:09:02,240
able to take a look at that reference

00:09:00,170 --> 00:09:04,819
information but most importantly also

00:09:02,240 --> 00:09:07,699
has an API that allows it to integrate

00:09:04,819 --> 00:09:09,860
with your brewing equipment so of course

00:09:07,699 --> 00:09:12,199
if you you have a system that allows you

00:09:09,860 --> 00:09:14,390
to integrate with your brewing equipment

00:09:12,199 --> 00:09:17,900
now you need to have the ability

00:09:14,390 --> 00:09:19,790
you to make fancy pants equipment that

00:09:17,900 --> 00:09:27,590
automatically sends information to your

00:09:19,790 --> 00:09:30,080
lab which I have out of order so

00:09:27,590 --> 00:09:32,930
initially in order to be able to pull in

00:09:30,080 --> 00:09:34,700
from beer Smith I created brew scribe

00:09:32,930 --> 00:09:36,080
and this is currently open source and

00:09:34,700 --> 00:09:39,880
what it does is that actually takes the

00:09:36,080 --> 00:09:42,110
exported files from beer Smith and and

00:09:39,880 --> 00:09:44,420
imports them into straight Ruby objects

00:09:42,110 --> 00:09:47,120
if you can see a code sample there it's

00:09:44,420 --> 00:09:50,270
basically pulling out a particular beer

00:09:47,120 --> 00:09:51,620
Smith file and now you have access to

00:09:50,270 --> 00:09:55,040
start manipulating and pulling that

00:09:51,620 --> 00:09:56,630
information in from there it allows brew

00:09:55,040 --> 00:09:59,240
lab to be able to take that information

00:09:56,630 --> 00:10:03,710
created within its own with an its rails

00:09:59,240 --> 00:10:06,650
application so brewing a batch this is

00:10:03,710 --> 00:10:08,480
an awesome picture with used with the

00:10:06,650 --> 00:10:10,250
Mac equivalent of ms paint but it

00:10:08,480 --> 00:10:13,160
thoroughly describes the overall process

00:10:10,250 --> 00:10:16,100
of brewing you what we're looking at

00:10:13,160 --> 00:10:18,140
here is what's called a heated heat

00:10:16,100 --> 00:10:20,660
exchange recirculated mash system or

00:10:18,140 --> 00:10:24,170
Herms which uses three vessels in order

00:10:20,660 --> 00:10:26,180
to operate the basic flow is you put

00:10:24,170 --> 00:10:27,830
some water in that left tank and that

00:10:26,180 --> 00:10:30,230
little red thing is a heating element

00:10:27,830 --> 00:10:31,610
and the little gray thing the swirled

00:10:30,230 --> 00:10:34,310
around is actually a stainless steel

00:10:31,610 --> 00:10:36,890
coil and you put your grain in the

00:10:34,310 --> 00:10:40,250
middle one with a little slotted thing

00:10:36,890 --> 00:10:41,960
at the bottom there is a filter and what

00:10:40,250 --> 00:10:44,510
you end up doing is you heat up some

00:10:41,960 --> 00:10:46,850
water in the first tank you then pump it

00:10:44,510 --> 00:10:48,830
over into your mash pond where all your

00:10:46,850 --> 00:10:51,440
grain is located and you just let it

00:10:48,830 --> 00:10:53,870
recirculate and temperature sensors will

00:10:51,440 --> 00:10:55,130
actually pick up the information pick up

00:10:53,870 --> 00:10:56,570
the Tet the current rate of the liquid

00:10:55,130 --> 00:10:59,690
as it's coming out of the mash liquor

00:10:56,570 --> 00:11:02,210
ton before it hits the pump and says

00:10:59,690 --> 00:11:04,130
okay given this information I need to

00:11:02,210 --> 00:11:07,550
increase the heat of the water in a hot

00:11:04,130 --> 00:11:10,280
liquor tank by five degrees and as a

00:11:07,550 --> 00:11:13,640
result it will automatically calibrate

00:11:10,280 --> 00:11:15,530
and maintain an even heat of the liquid

00:11:13,640 --> 00:11:19,510
as a three circulating and what that's

00:11:15,530 --> 00:11:22,460
really doing is called the mash process

00:11:19,510 --> 00:11:23,630
that's the the first two vessels in the

00:11:22,460 --> 00:11:26,540
system and what that's doing is that's

00:11:23,630 --> 00:11:28,010
extracting the sugars from the grains

00:11:26,540 --> 00:11:30,440
that you're putting into there

00:11:28,010 --> 00:11:33,650
and allowing it to turn it into a nice

00:11:30,440 --> 00:11:36,590
lick it combines with the water itself

00:11:33,650 --> 00:11:38,570
and creates that nice sweet work which

00:11:36,590 --> 00:11:41,450
is what happens before you add yeast it

00:11:38,570 --> 00:11:44,150
gets really delicious and that takes

00:11:41,450 --> 00:11:46,010
about 60 to 90 minutes so being able to

00:11:44,150 --> 00:11:47,900
automate that process so that you're

00:11:46,010 --> 00:11:50,570
maintaining an even temperature for that

00:11:47,900 --> 00:11:54,650
long of a period of time is important

00:11:50,570 --> 00:11:58,310
and a great opportunity for for Ruby to

00:11:54,650 --> 00:12:00,200
come into play finally you have the

00:11:58,310 --> 00:12:03,020
boiling process which fight back it back

00:12:00,200 --> 00:12:04,700
up to here after you've recirculated for

00:12:03,020 --> 00:12:07,280
your 60 to 90 minutes in the middle tank

00:12:04,700 --> 00:12:08,990
you pump over to the third vessel all

00:12:07,280 --> 00:12:11,210
the way on the right which is the boil

00:12:08,990 --> 00:12:14,450
kettle you heat up all that liquid you

00:12:11,210 --> 00:12:16,040
create a reduction to the desired

00:12:14,450 --> 00:12:17,360
concentration that is the point where

00:12:16,040 --> 00:12:18,860
you start adding in your hops for all

00:12:17,360 --> 00:12:20,630
that bitterness in a Roma goodness and

00:12:18,860 --> 00:12:23,120
then you pump that off into your

00:12:20,630 --> 00:12:25,280
fermenter add in your yeast and wait

00:12:23,120 --> 00:12:27,770
around because your takes a while before

00:12:25,280 --> 00:12:30,530
it actually is ready to drink so the

00:12:27,770 --> 00:12:33,470
boiling process uh thus this is where

00:12:30,530 --> 00:12:35,570
you get all the individual hop additions

00:12:33,470 --> 00:12:37,310
your bought your flavorants and has a

00:12:35,570 --> 00:12:39,890
great time for automation as well

00:12:37,310 --> 00:12:41,840
because you need to keep that beer at a

00:12:39,890 --> 00:12:43,610
rolling boil for the entire duration

00:12:41,840 --> 00:12:46,520
because it helps remove some of the

00:12:43,610 --> 00:12:47,900
chemicals that cause off flavors in your

00:12:46,520 --> 00:12:51,380
beer if you've ever had a beer that has

00:12:47,900 --> 00:12:53,900
a little bit of a sweet corn type smell

00:12:51,380 --> 00:12:55,730
to it or a little bit of a tinge like

00:12:53,900 --> 00:12:59,420
that that's a sign that it hasn't had a

00:12:55,730 --> 00:13:01,280
consistent in a foil and you need to it

00:12:59,420 --> 00:13:03,200
that they needed to keep that boiling

00:13:01,280 --> 00:13:05,000
going on for a bit longer so here we

00:13:03,200 --> 00:13:08,080
have another perfect opportunity to be

00:13:05,000 --> 00:13:11,690
able to start automating the process and

00:13:08,080 --> 00:13:15,590
so I created brooby brooby currently

00:13:11,690 --> 00:13:18,470
runs on MRI 1.9 i'm in the process now

00:13:15,590 --> 00:13:21,380
that mr be gems has been moved into M

00:13:18,470 --> 00:13:24,380
Ruby I've been putting it over to there

00:13:21,380 --> 00:13:27,320
using some of the new extensions to add

00:13:24,380 --> 00:13:29,150
in file i/o and things of that nature it

00:13:27,320 --> 00:13:31,220
handles Herms or another version of

00:13:29,150 --> 00:13:33,080
brewing called rims where instead of

00:13:31,220 --> 00:13:34,880
having a separate tank it just runs

00:13:33,080 --> 00:13:37,460
through a pipe that has that hot way of

00:13:34,880 --> 00:13:40,790
water the water heating element inside

00:13:37,460 --> 00:13:41,900
of it and it runs directly off of the

00:13:40,790 --> 00:13:44,540
Raspberry Pi with just

00:13:41,900 --> 00:13:48,500
very small expansion board with relay

00:13:44,540 --> 00:13:52,190
and sensor connectors I brought said

00:13:48,500 --> 00:13:57,110
expansion board with me and then the TSA

00:13:52,190 --> 00:13:58,670
managed to break it so I don't have a

00:13:57,110 --> 00:14:00,290
fancy little thing about this big to

00:13:58,670 --> 00:14:02,690
show you but if you imagine it's about

00:14:00,290 --> 00:14:05,000
this big it's great it's got little

00:14:02,690 --> 00:14:06,650
connectors on it but the main thing is

00:14:05,000 --> 00:14:10,030
that it's running entirely off of

00:14:06,650 --> 00:14:20,240
raspberry PI's GPI of ports it uses the

00:14:10,030 --> 00:14:21,680
11 wire protocol and Dallas ds18b20 safe

00:14:20,240 --> 00:14:25,250
place that control the water heater

00:14:21,680 --> 00:14:27,530
elements themselves so as a result you

00:14:25,250 --> 00:14:30,130
get constant and continuous movement it

00:14:27,530 --> 00:14:35,390
also operates off of a touchscreen GUI

00:14:30,130 --> 00:14:39,380
which looks like that here's our

00:14:35,390 --> 00:14:42,650
hardware we've got it says 16 by eight

00:14:39,380 --> 00:14:44,630
by eight control panel with a nice touch

00:14:42,650 --> 00:14:46,550
screen display a keypad on the side for

00:14:44,630 --> 00:14:48,290
additional information and funny toggle

00:14:46,550 --> 00:14:50,210
switches so that i don't actually

00:14:48,290 --> 00:14:52,880
shocked myself because this does run on

00:14:50,210 --> 00:14:55,250
240 volt 30 amp power running into the

00:14:52,880 --> 00:14:56,690
thing so if you are not a licensed

00:14:55,250 --> 00:14:58,820
electrician and you are interested in

00:14:56,690 --> 00:15:00,950
doing something like this have a friends

00:14:58,820 --> 00:15:02,480
do it preferably a friend that you don't

00:15:00,950 --> 00:15:10,040
have a problem with suddenly going to

00:15:02,480 --> 00:15:11,000
the hospital with and you sure you and I

00:15:10,040 --> 00:15:13,550
have different different opinions on

00:15:11,000 --> 00:15:17,030
friends so here's a picture of my

00:15:13,550 --> 00:15:19,670
current system and it ain't much but

00:15:17,030 --> 00:15:21,470
it's good and it's how I work on all of

00:15:19,670 --> 00:15:23,920
my recipe designs so you see our three

00:15:21,470 --> 00:15:29,060
kettles and all of our little

00:15:23,920 --> 00:15:30,950
attachments pumping back up so um using

00:15:29,060 --> 00:15:32,840
the touchscreen GUI one of the problems

00:15:30,950 --> 00:15:35,780
that you immediately run into is that if

00:15:32,840 --> 00:15:38,120
you want to do GUI development with Ruby

00:15:35,780 --> 00:15:39,950
you're in for a bad time you're

00:15:38,120 --> 00:15:42,140
basically dealing with wrapping around

00:15:39,950 --> 00:15:44,660
other systems and I actually started out

00:15:42,140 --> 00:15:46,850
just using gosu in order to pretend that

00:15:44,660 --> 00:15:50,450
it works like a game and knocked it out

00:15:46,850 --> 00:15:51,980
that way for touch events but I realized

00:15:50,450 --> 00:15:54,560
that one that doesn't work all that well

00:15:51,980 --> 00:15:55,400
too I didn't think I could move it over

00:15:54,560 --> 00:15:57,740
to mr be

00:15:55,400 --> 00:16:00,740
very easily in three that's a lot of

00:15:57,740 --> 00:16:03,740
intensity on the Raspberry Pi so what I

00:16:00,740 --> 00:16:05,210
actually did instead is wrote one of the

00:16:03,740 --> 00:16:07,580
benefits of raspberry PI's that actually

00:16:05,210 --> 00:16:10,040
comes with its own OpenGL ES headers

00:16:07,580 --> 00:16:14,480
bill shipped with the operating system

00:16:10,040 --> 00:16:16,820
so i wrote a wrapper around opengl yes

00:16:14,480 --> 00:16:18,890
so it actually runs through the command

00:16:16,820 --> 00:16:21,920
line but boots up and runs the entire

00:16:18,890 --> 00:16:23,990
thing through OpenGL talk about super

00:16:21,920 --> 00:16:26,450
hacks in order to make a basic system

00:16:23,990 --> 00:16:28,820
work but it functions and it allows me

00:16:26,450 --> 00:16:32,570
to not have to run X in order to have a

00:16:28,820 --> 00:16:34,700
nice touch screen system so the way that

00:16:32,570 --> 00:16:37,940
it actually handles temperature control

00:16:34,700 --> 00:16:39,560
is by running a pig base that anger pit

00:16:37,940 --> 00:16:42,950
based temperature management system I

00:16:39,560 --> 00:16:44,870
wrote called temper and it's a lit takes

00:16:42,950 --> 00:16:47,630
the basic pit algorithm that you would

00:16:44,870 --> 00:16:50,060
find in arduino essentially and ports it

00:16:47,630 --> 00:16:52,880
over to Ruby I open sourced at about 10

00:16:50,060 --> 00:16:55,250
days ago it's it works pretty decently

00:16:52,880 --> 00:16:57,140
and it also operates on bi-directional

00:16:55,250 --> 00:16:59,290
so you can actually reuse it not only

00:16:57,140 --> 00:17:02,180
for heating but also for cooling and

00:16:59,290 --> 00:17:03,830
dual stage fermentation dual-stage

00:17:02,180 --> 00:17:08,030
temperature control so if you wanted to

00:17:03,830 --> 00:17:10,730
have sloping between a hot and cold to

00:17:08,030 --> 00:17:14,600
help mitigate your jumps and spikes it

00:17:10,730 --> 00:17:17,000
has that capability as well so what this

00:17:14,600 --> 00:17:19,520
does is temper is being put into Berube

00:17:17,000 --> 00:17:22,010
and uses it to read in the sensor data

00:17:19,520 --> 00:17:23,360
as you can see here if you're unfamiliar

00:17:22,010 --> 00:17:25,370
with a pit algorithm what it does is

00:17:23,360 --> 00:17:28,459
uses the proportional integral and

00:17:25,370 --> 00:17:30,380
derivative readings on it pulls in the

00:17:28,459 --> 00:17:32,690
input sensor data and then use his time

00:17:30,380 --> 00:17:34,430
between the last cysts between the last

00:17:32,690 --> 00:17:36,950
reading check and then automatically

00:17:34,430 --> 00:17:40,310
calibrates so in this system we create a

00:17:36,950 --> 00:17:43,550
new pit based off of temper we tune it

00:17:40,310 --> 00:17:46,490
it unfortunately i have not extracted

00:17:43,550 --> 00:17:48,590
out the auto tuning system that is in

00:17:46,490 --> 00:17:50,900
bru be into temper that's something i'm

00:17:48,590 --> 00:17:53,450
hoping to have done in the next I'd say

00:17:50,900 --> 00:17:56,180
week or so is getting that set up and

00:17:53,450 --> 00:17:57,710
then you just use a simple while loop to

00:17:56,180 --> 00:18:00,590
read in your sensor data and it

00:17:57,710 --> 00:18:03,620
automatically calibrates based on the

00:18:00,590 --> 00:18:07,730
time sins last reading how much power

00:18:03,620 --> 00:18:09,230
needs to be out so for the purposes here

00:18:07,730 --> 00:18:12,860
it takes the writ the sensor data

00:18:09,230 --> 00:18:16,010
in it says okay between zero and a

00:18:12,860 --> 00:18:18,710
thousand which is its interval here that

00:18:16,010 --> 00:18:22,130
rates into a percentage of power so

00:18:18,710 --> 00:18:23,929
however many milliseconds the whatever

00:18:22,130 --> 00:18:27,130
the output is for the confer temperature

00:18:23,929 --> 00:18:30,740
control that's how many milliseconds per

00:18:27,130 --> 00:18:33,520
second that the heater should be on so

00:18:30,740 --> 00:18:35,690
if the in this instance if the output is

00:18:33,520 --> 00:18:38,480
700 then that means seven hundred

00:18:35,690 --> 00:18:40,040
milliseconds in every thousand

00:18:38,480 --> 00:18:42,140
milliseconds the heater will be on and

00:18:40,040 --> 00:18:44,390
it will actually buffer the beginning

00:18:42,140 --> 00:18:49,190
and end so that it's consistent on and

00:18:44,390 --> 00:18:51,200
off between cycles so the other things

00:18:49,190 --> 00:18:53,870
the proving needs to integrate is in

00:18:51,200 --> 00:18:56,450
order to handle temperature control for

00:18:53,870 --> 00:18:58,070
boiling you can't just set I want two

00:18:56,450 --> 00:18:59,809
hundred and twelve point five degrees

00:18:58,070 --> 00:19:01,490
Fahrenheit and hope that you're going to

00:18:59,809 --> 00:19:03,440
get the boil brought the boil rate that

00:19:01,490 --> 00:19:07,000
you want you need manual intervention in

00:19:03,440 --> 00:19:09,559
order to make it run so what we use is

00:19:07,000 --> 00:19:11,600
pulse with management pulse width

00:19:09,559 --> 00:19:13,520
modulation to do a using the same

00:19:11,600 --> 00:19:16,130
process as I mentioned for auto only

00:19:13,520 --> 00:19:17,780
using the keypad you're able to say I

00:19:16,130 --> 00:19:20,270
want ninety percent power I want twenty

00:19:17,780 --> 00:19:22,820
percent power and easily switch it up so

00:19:20,270 --> 00:19:25,100
that now it's boiling it whatever rate

00:19:22,820 --> 00:19:26,480
your choosing so it's it's not full

00:19:25,100 --> 00:19:28,580
automation in that sense you're still

00:19:26,480 --> 00:19:30,169
having to monitor but it's a

00:19:28,580 --> 00:19:31,850
considerable better bet than just

00:19:30,169 --> 00:19:34,190
looking at a thermometer and saying oh

00:19:31,850 --> 00:19:38,090
let me tweak the power just a little bit

00:19:34,190 --> 00:19:41,630
and more importantly it also is pulling

00:19:38,090 --> 00:19:44,240
recipes from bru lap so the system

00:19:41,630 --> 00:19:46,730
actually you don't you tell it either

00:19:44,240 --> 00:19:49,160
your brute the brule abbott connection

00:19:46,730 --> 00:19:50,929
information or you load a beer smith

00:19:49,160 --> 00:19:52,429
file onto the raspberry pi itself and

00:19:50,929 --> 00:19:54,530
the screen the first thing that you end

00:19:52,429 --> 00:19:56,030
up seeing is here's every recipe that

00:19:54,530 --> 00:19:59,179
brooby knows about are you going to make

00:19:56,030 --> 00:20:01,370
a new batch one of these or find a file

00:19:59,179 --> 00:20:04,490
that's on the system to do it and then

00:20:01,370 --> 00:20:06,260
if you're using brew lab in the system

00:20:04,490 --> 00:20:08,600
it actually sends the data back up to

00:20:06,260 --> 00:20:11,690
the API so that you're getting all of

00:20:08,600 --> 00:20:13,340
that data up for review later so you get

00:20:11,690 --> 00:20:15,710
real-time look from the screen as well

00:20:13,340 --> 00:20:17,780
as later referential for monitoring and

00:20:15,710 --> 00:20:20,260
tweaking and decide hey my equipment has

00:20:17,780 --> 00:20:22,390
a problem let's start tweaking things

00:20:20,260 --> 00:20:24,880
so as mentioned that's what the control

00:20:22,390 --> 00:20:26,260
panel looks like it's all pretty when

00:20:24,880 --> 00:20:29,410
it's you know in real life instead of

00:20:26,260 --> 00:20:32,140
the digital representation so operation

00:20:29,410 --> 00:20:34,750
is is basically all that has to happen

00:20:32,140 --> 00:20:38,770
from a manual process in order to make

00:20:34,750 --> 00:20:40,600
beer you push start and your initial

00:20:38,770 --> 00:20:42,880
water in the hot liquor tank on the Left

00:20:40,600 --> 00:20:45,040
gets filled up it gets heated up to your

00:20:42,880 --> 00:20:48,160
initial temperature when it hits that

00:20:45,040 --> 00:20:50,530
and alarm sounds you go hey I need to

00:20:48,160 --> 00:20:53,410
pay attention now so you put your mat

00:20:50,530 --> 00:20:55,360
your grain into your mash tun you hit

00:20:53,410 --> 00:20:56,590
start starts the mash process turn on

00:20:55,360 --> 00:20:58,000
your pump and then you go have a pint

00:20:56,590 --> 00:21:00,550
because you got 60 to 90 minutes to

00:20:58,000 --> 00:21:02,680
doing nothing then the alarm sounds

00:21:00,550 --> 00:21:03,850
again says hey your mash is done you

00:21:02,680 --> 00:21:05,620
need to start law during which is the

00:21:03,850 --> 00:21:07,180
process of make taking the liquid from

00:21:05,620 --> 00:21:10,060
the middle tank into the right tank

00:21:07,180 --> 00:21:12,340
before boiling so you flip on your pump

00:21:10,060 --> 00:21:13,510
you push the next button and then you go

00:21:12,340 --> 00:21:15,790
have another point because that's going

00:21:13,510 --> 00:21:19,510
to take about 40 minutes to then when

00:21:15,790 --> 00:21:21,040
you're all set you quit you can you

00:21:19,510 --> 00:21:23,410
don't get an alarm here so you do have

00:21:21,040 --> 00:21:24,760
to actually pay attention but when

00:21:23,410 --> 00:21:27,490
you've got the desired amount of liquid

00:21:24,760 --> 00:21:29,800
you push start boil and since brew lab

00:21:27,490 --> 00:21:31,330
is already pulled in all the recipe

00:21:29,800 --> 00:21:33,700
information it also knows about your hop

00:21:31,330 --> 00:21:35,890
timings and your flavoring additives so

00:21:33,700 --> 00:21:37,810
you're now at a manual state there so

00:21:35,890 --> 00:21:39,730
all you're doing is waiting for it to

00:21:37,810 --> 00:21:41,470
tell you hey put some hops in put a

00:21:39,730 --> 00:21:43,300
flavoring in and you're pushing a button

00:21:41,470 --> 00:21:45,070
and drinking a pint of beer then when

00:21:43,300 --> 00:21:46,690
you're all done it automatically turns

00:21:45,070 --> 00:21:48,520
off the heat so that you don't forget

00:21:46,690 --> 00:21:49,870
and have had too much alcohol because

00:21:48,520 --> 00:21:52,420
you've had at least two and a half pints

00:21:49,870 --> 00:21:54,280
by now and then you turn on your pump

00:21:52,420 --> 00:21:56,110
pump it into your fermenter and you have

00:21:54,280 --> 00:21:58,630
finished with the first stage of

00:21:56,110 --> 00:22:01,930
burrowing and that gets you to

00:21:58,630 --> 00:22:04,330
fermentation fermentation is similar

00:22:01,930 --> 00:22:06,430
process only on the cold side of brewing

00:22:04,330 --> 00:22:07,840
you're focusing on maintaining specific

00:22:06,430 --> 00:22:09,880
temperature for a very long period of

00:22:07,840 --> 00:22:11,850
time and monitoring it to make sure that

00:22:09,880 --> 00:22:14,830
it doesn't have an extensive amount of

00:22:11,850 --> 00:22:16,630
dips in that because yeast is very

00:22:14,830 --> 00:22:18,700
particular at what depending upon your

00:22:16,630 --> 00:22:20,950
strain it really likes to stay at a

00:22:18,700 --> 00:22:24,190
particular range most ale strains are

00:22:20,950 --> 00:22:26,170
sitting between sixty and seventy two

00:22:24,190 --> 00:22:31,210
and most lager strains are sitting

00:22:26,170 --> 00:22:33,850
between lagering temperatures are like

00:22:31,210 --> 00:22:35,710
30 to 255 depending upon your string

00:22:33,850 --> 00:22:38,049
at what point in it so it needs to be at

00:22:35,710 --> 00:22:39,910
specific temperatures based on the yeast

00:22:38,049 --> 00:22:41,770
for extended periods of time and the

00:22:39,910 --> 00:22:44,080
ability to fluctuate that there's some

00:22:41,770 --> 00:22:45,669
yeast like loggers for example that need

00:22:44,080 --> 00:22:47,919
to be at a higher temperature to start

00:22:45,669 --> 00:22:49,900
say 60 degrees Fahrenheit for a few days

00:22:47,919 --> 00:22:52,990
and then drop down to lower temperatures

00:22:49,900 --> 00:22:54,280
for Al in extended period of time so you

00:22:52,990 --> 00:22:56,260
need the ability to control that

00:22:54,280 --> 00:22:58,600
temperature be able to adjust it and

00:22:56,260 --> 00:23:01,270
also be able to make sure that if things

00:22:58,600 --> 00:23:03,400
are going crazy you can correct it as

00:23:01,270 --> 00:23:06,610
quickly as poss so let's automate this

00:23:03,400 --> 00:23:08,590
as well and that's when we start running

00:23:06,610 --> 00:23:11,110
into the first problem with using a

00:23:08,590 --> 00:23:12,640
raspberry pi because you're dealing with

00:23:11,110 --> 00:23:14,309
a threaded environment you're not

00:23:12,640 --> 00:23:16,900
getting as close to real time

00:23:14,309 --> 00:23:19,809
connections so if you have anything that

00:23:16,900 --> 00:23:22,210
is very very time sensitive and your

00:23:19,809 --> 00:23:24,039
algorithms are dependent upon time they

00:23:22,210 --> 00:23:26,230
will actually potentially be thrown off

00:23:24,039 --> 00:23:28,120
and cause a bit of craziness that's

00:23:26,230 --> 00:23:30,100
actually part of the reason why temper

00:23:28,120 --> 00:23:32,919
took a huge refactoring before I

00:23:30,100 --> 00:23:35,049
released it is that when I initially put

00:23:32,919 --> 00:23:37,299
it in the amount of time between sensor

00:23:35,049 --> 00:23:40,030
readings the temperature would go so it

00:23:37,299 --> 00:23:43,480
would vary so so much because it always

00:23:40,030 --> 00:23:46,120
had to do the math for for the pit

00:23:43,480 --> 00:23:49,000
algorithm that the next cycle around

00:23:46,120 --> 00:23:50,440
would actually have incorrect data and

00:23:49,000 --> 00:23:53,799
then the information would be completely

00:23:50,440 --> 00:23:56,590
wrong so between that and the limited

00:23:53,799 --> 00:23:59,500
number of GPIO slots also there's only

00:23:56,590 --> 00:24:02,559
one pulse width management gpio slot and

00:23:59,500 --> 00:24:04,360
only one one wire gpio spot on the

00:24:02,559 --> 00:24:06,520
Raspberry Pi means that if you want to

00:24:04,360 --> 00:24:09,039
start scaling up into larger systems for

00:24:06,520 --> 00:24:11,860
example right now we run for fermenters

00:24:09,039 --> 00:24:13,150
but if I wanted to run 15 fermenters

00:24:11,860 --> 00:24:15,909
because I have a lot of different ideas

00:24:13,150 --> 00:24:17,350
and I like beer you're going to run into

00:24:15,909 --> 00:24:20,770
a problem with just having a small

00:24:17,350 --> 00:24:22,590
expansion board so we bring our do we

00:24:20,770 --> 00:24:25,809
know back into the equation and

00:24:22,590 --> 00:24:28,690
raspberry pi ships with I to see which

00:24:25,809 --> 00:24:31,000
allows you to control other slave

00:24:28,690 --> 00:24:33,610
hardware devices and you it allows you

00:24:31,000 --> 00:24:35,440
to have the Arduino focus on what it's

00:24:33,610 --> 00:24:36,549
good at low level hardware interfacing

00:24:35,440 --> 00:24:39,760
it does temperature sensor and

00:24:36,549 --> 00:24:42,790
integration it does easy to work with

00:24:39,760 --> 00:24:45,640
other hobby electronic stuff but the one

00:24:42,790 --> 00:24:47,530
caveat is that raspberry pi runs on 3 V

00:24:45,640 --> 00:24:49,540
3 whereas Arduino

00:24:47,530 --> 00:24:50,980
runs on 5 volts so you do need a logic

00:24:49,540 --> 00:24:53,500
level shifter if you're going to be

00:24:50,980 --> 00:24:56,230
integrating those things together so

00:24:53,500 --> 00:25:01,240
what I ended up doing is creating yeast

00:24:56,230 --> 00:25:03,240
Iman fun name is team on is the

00:25:01,240 --> 00:25:06,100
culmination of the Raspberry Pi

00:25:03,240 --> 00:25:09,880
interface to handle the networking I oh

00:25:06,100 --> 00:25:12,250
and the high level stuff and the Arduino

00:25:09,880 --> 00:25:15,190
Uno and those temperature control and

00:25:12,250 --> 00:25:17,350
also I have not only from a monitoring

00:25:15,190 --> 00:25:19,270
standpoint I have an active temperature

00:25:17,350 --> 00:25:21,730
control system that recirculates water

00:25:19,270 --> 00:25:24,220
so it actually activates a pump through

00:25:21,730 --> 00:25:27,010
another solid state relay and so that

00:25:24,220 --> 00:25:29,080
cools the fermenters down whenever

00:25:27,010 --> 00:25:30,880
temperature gets too hot I have an

00:25:29,080 --> 00:25:32,380
integrated dual stage into the system

00:25:30,880 --> 00:25:34,480
but that is something for the futures to

00:25:32,380 --> 00:25:37,810
be able to have a heater and a cooler to

00:25:34,480 --> 00:25:39,850
properly regulate and also it's and it

00:25:37,810 --> 00:25:42,190
also integrates with brew lab to send

00:25:39,850 --> 00:25:45,970
fermentation data so now you've got from

00:25:42,190 --> 00:25:47,980
end to end creating your recipe brewing

00:25:45,970 --> 00:25:52,210
the hot side brewing and cold side

00:25:47,980 --> 00:25:53,830
brewing you have logging monitoring and

00:25:52,210 --> 00:25:56,320
information to be able to more

00:25:53,830 --> 00:25:58,690
effectively create your recipes all with

00:25:56,320 --> 00:26:01,030
fantastic Ruby the exception of the

00:25:58,690 --> 00:26:03,850
little bit of code on the Arduino that I

00:26:01,030 --> 00:26:06,640
have on there that's actually c++ with

00:26:03,850 --> 00:26:10,000
the AVR bootloader hacked on to that

00:26:06,640 --> 00:26:12,790
because i don't like processing so the

00:26:10,000 --> 00:26:15,400
future i want to add support for

00:26:12,790 --> 00:26:17,560
solenoid valves because turning on pumps

00:26:15,400 --> 00:26:20,320
requires me to reach over and flip a

00:26:17,560 --> 00:26:22,420
switch and then flip the switch off and

00:26:20,320 --> 00:26:24,010
that's a lot of effort so i'd rather

00:26:22,420 --> 00:26:25,930
instead completely automate it to run

00:26:24,010 --> 00:26:27,550
solenoid valves the entire system i'll

00:26:25,930 --> 00:26:31,660
hands it on its own because that gives

00:26:27,550 --> 00:26:34,270
me more time to drink also I want to

00:26:31,660 --> 00:26:36,180
switch brew be over to i2c because it's

00:26:34,270 --> 00:26:39,700
actually the one that has more

00:26:36,180 --> 00:26:41,980
complexity going on then yeast Iman does

00:26:39,700 --> 00:26:45,610
so switching that over would be nice

00:26:41,980 --> 00:26:47,980
also since I am opening up a brewery

00:26:45,610 --> 00:26:50,620
we're moving to a large onion building a

00:26:47,980 --> 00:26:56,370
large scale brewery panel that does 100

00:26:50,620 --> 00:26:58,540
amps it's 115 max capability with six

00:26:56,370 --> 00:27:00,640
water heater elements across the entire

00:26:58,540 --> 00:27:01,299
system so i can really electrocute

00:27:00,640 --> 00:27:03,730
myself one thing

00:27:01,299 --> 00:27:05,320
go wrong but most importantly is that

00:27:03,730 --> 00:27:07,509
I'm opening a brew lab to the public

00:27:05,320 --> 00:27:09,850
completely free no problems whatsoever

00:27:07,509 --> 00:27:12,249
I'm hoping to have that up by April

00:27:09,850 --> 00:27:14,950
first I'm just removing some of the bits

00:27:12,249 --> 00:27:16,269
that are kludgy that I did because I

00:27:14,950 --> 00:27:19,269
needed things running operationally

00:27:16,269 --> 00:27:21,039
quickly and then a brew lab API gem I

00:27:19,269 --> 00:27:22,210
have already written in and that will be

00:27:21,039 --> 00:27:26,350
released as soon as this thing goes

00:27:22,210 --> 00:27:27,940
public so I was a lot of information to

00:27:26,350 --> 00:27:30,340
throw all at once and I'm sure that it

00:27:27,940 --> 00:27:34,899
confused it because that's how it rolls

00:27:30,340 --> 00:27:37,989
but a ruby plus beer equals good Ruby

00:27:34,899 --> 00:27:39,609
plus brewing equals even better and if

00:27:37,989 --> 00:27:42,669
anyone wants to talk to me more about

00:27:39,609 --> 00:27:43,809
brewing or Ruby or anything that I may

00:27:42,669 --> 00:27:45,700
have screwed up in the middle of my

00:27:43,809 --> 00:27:48,179
process let me have a pint first and

00:27:45,700 --> 00:27:48,179
then I will

00:28:25,639 --> 00:28:27,700

YouTube URL: https://www.youtube.com/watch?v=sD_fN5Gyur4


