Title: Ruby Conf 2013 - "Bioruby"...understanding the intricacies of 'Life' using Ruby
Publication date: 2020-01-27
Playlist: RubyConf 2013
Description: 
	By Doel Sengupta & Manu Singhal

Learn about the genes, which controls everything you do and find out how you can ease the task of your similarity with a salamander using Bioruby!

Bioruby is great Bioinformatics tool which helps to process biological data and analyze it. 5 years after ruby programming language came into vogue(1995), bioruby came into existence in 2000, both developed in Japan. BioRuby project provides an integrated environment in bioinformatics for the Ruby language. This project is supported by University of Tokyo (Human Genome Center), Kyoto University (Bioinformatics Center) and the Open Bio Foundation.Welcome to the ruby in the living world, integrating ruby with the Bioinformatics and have fun.

On one hand we have the Bioinformatics, the large database of the huge genome sequences, the search algorithms to search the gene similarity between different organisms, gene-mutations using the popular search tool Blast, Fasta etc. BioRuby helps us to do the same searching thing using ruby programming language. As ruby is a pure object-oriented programming language(everything in ruby is an object) and being a easy to read and write, it's fun to use here without being lost in the plethora of genomic data.

One of the greatest contributions from Bioruby is Biogems, which like any other rubygems helps to perform modular approaches in order to perform specific functionality. One such gem is bio-ucsc-api gem, which helps to fetch record from UCSC DB and the best part is the gem has been implemented using the Actice Record Framework thereby easing the record fetch, instead of complex sql queries. We explained the basic concepts of Gene, DNA. RNA, Amino-acids, Human Genome Project and how these huge data are stored and analyzed by the famous Bioinformatics tools like BLAST, Fasta and how Bioruby interacts with the different biological databases like Genbank, Swissprot etc.

Help us caption & translate this video!

http://amara.org/v/FG51/
Captions: 
	00:00:15,770 --> 00:00:20,310
okay good afternoon everyone hope you

00:00:18,540 --> 00:00:23,279
are having a great time at rubyconf it

00:00:20,310 --> 00:00:25,200
some fabulous talks this is my this is

00:00:23,279 --> 00:00:33,150
our first time in us so at least we are

00:00:25,200 --> 00:00:35,220
enjoying a lot so the topic of a today's

00:00:33,150 --> 00:00:38,430
talk is bio Ruby understanding the

00:00:35,220 --> 00:00:39,750
intricacies of life using Ruby so any

00:00:38,430 --> 00:00:43,460
thoughts came to your mind when you

00:00:39,750 --> 00:00:43,460
first seen this topic or heard about it

00:00:50,930 --> 00:00:58,860
okay okay the game of life great

00:00:54,649 --> 00:01:04,170
anything else ok let's see as we move on

00:00:58,860 --> 00:01:09,630
this topic so Doyle would you mind if

00:01:04,170 --> 00:01:12,990
you are to reborn as a mouse no ok maybe

00:01:09,630 --> 00:01:14,610
as a cat or a monkey no no ok so forget

00:01:12,990 --> 00:01:16,979
the rebirth let me tell you that you

00:01:14,610 --> 00:01:19,350
know we all are like seventy-five

00:01:16,979 --> 00:01:22,710
percent similar to a mouse you all look

00:01:19,350 --> 00:01:24,299
like Mouse oh my god ok so you don't

00:01:22,710 --> 00:01:27,420
need to look like a mouse to be a

00:01:24,299 --> 00:01:29,909
similar to a mouse all right so let's

00:01:27,420 --> 00:01:34,200
see how how the similarity is being

00:01:29,909 --> 00:01:36,030
shown ok now for fun making of myself ok

00:01:34,200 --> 00:01:40,200
who all are taking part in Rubicon 5k

00:01:36,030 --> 00:01:42,030
tomorrow ok I know a person here ready

00:01:40,200 --> 00:01:45,030
one who will be taking part ok I'll be

00:01:42,030 --> 00:01:46,799
definitely there tomorrow ok have you

00:01:45,030 --> 00:01:49,200
ever wondered have you ever wondered

00:01:46,799 --> 00:01:53,340
whether Usain Bolt was a bond sprinter

00:01:49,200 --> 00:01:56,630
or Michael Phelps was born to perform at

00:01:53,340 --> 00:01:58,790
lightning speed in the pool you know

00:01:56,630 --> 00:02:01,590
scientists have recently found out that

00:01:58,790 --> 00:02:03,570
there is something special and common in

00:02:01,590 --> 00:02:06,299
all the athletes that are performing at

00:02:03,570 --> 00:02:10,049
top class level and what is that special

00:02:06,299 --> 00:02:11,489
thing that they have all in common so

00:02:10,049 --> 00:02:13,530
the special element which is also

00:02:11,489 --> 00:02:15,600
present in all of us is nothing but the

00:02:13,530 --> 00:02:19,739
gene so let us found out that what is

00:02:15,600 --> 00:02:21,959
gene and where its present so gene is a

00:02:19,739 --> 00:02:23,580
blueprint of our body we get half of our

00:02:21,959 --> 00:02:26,610
gene from our Father and half from

00:02:23,580 --> 00:02:29,700
our model and where are these genes

00:02:26,610 --> 00:02:35,790
present so they are present in each and

00:02:29,700 --> 00:02:38,280
every cell of our body okay so here we

00:02:35,790 --> 00:02:40,050
see all the cells which are present and

00:02:38,280 --> 00:02:41,520
within the cell each of the cell is

00:02:40,050 --> 00:02:43,800
having a circular shape structure on a

00:02:41,520 --> 00:02:45,360
nucleus and within each of the nucleus

00:02:43,800 --> 00:02:47,280
we have this X shape structures called

00:02:45,360 --> 00:02:50,130
chromosomes within which we have the

00:02:47,280 --> 00:02:51,750
bundled DNA or the genes so sometimes

00:02:50,130 --> 00:02:53,520
we'll be using the term gene and

00:02:51,750 --> 00:02:55,770
sometime the DNA so they are

00:02:53,520 --> 00:02:57,690
interchangeably used loosely so long

00:02:55,770 --> 00:03:00,630
stretches of DNA having a definite

00:02:57,690 --> 00:03:03,330
function is called a gene so we have

00:03:00,630 --> 00:03:05,700
around 75 200 trillions of cells in our

00:03:03,330 --> 00:03:07,620
body together with ourselves and 30

00:03:05,700 --> 00:03:10,410
several bacteria and viruses which live

00:03:07,620 --> 00:03:12,720
together with us and there are 46

00:03:10,410 --> 00:03:15,330
chromosomes in each of the cell 23 from

00:03:12,720 --> 00:03:17,550
our Father and 23 from our mother and as

00:03:15,330 --> 00:03:19,980
of now it has been identified as 20,500

00:03:17,550 --> 00:03:23,940
functional genes which are present in

00:03:19,980 --> 00:03:27,000
our body ok so let us look at deep into

00:03:23,940 --> 00:03:30,030
the DNA ok so DNA I am sure you all must

00:03:27,000 --> 00:03:32,130
be aware something or other about DNA so

00:03:30,030 --> 00:03:35,220
I will just briefly touch so DNA is a

00:03:32,130 --> 00:03:39,269
double standard biological molecule with

00:03:35,220 --> 00:03:42,420
bassist a TG and see now so the basic

00:03:39,269 --> 00:03:45,239
rule is like a pairs with T and G pairs

00:03:42,420 --> 00:03:47,760
with C so in one strand if we have a

00:03:45,239 --> 00:03:49,680
corresponding a position in the other

00:03:47,760 --> 00:03:51,360
strand we'll have tea and if we have G

00:03:49,680 --> 00:03:53,550
in one strand the corresponding position

00:03:51,360 --> 00:03:56,880
will have C so that was just the basic

00:03:53,550 --> 00:03:59,760
rule so I guess you guys already seemed

00:03:56,880 --> 00:04:06,650
little bored so let me do a quick wake

00:03:59,760 --> 00:04:10,500
up excise so this is a DNA sequence and

00:04:06,650 --> 00:04:15,480
can you spot any errors in it according

00:04:10,500 --> 00:04:21,780
to rules that i just mentioned ok one

00:04:15,480 --> 00:04:23,010
two ok greet so these were the basis

00:04:21,780 --> 00:04:26,580
that shouldn't have been there in the

00:04:23,010 --> 00:04:28,979
DNA sequence right I am sure this was

00:04:26,580 --> 00:04:31,680
this was just a 10 to 12 lines of the

00:04:28,979 --> 00:04:34,110
sequence but it will be surprised to

00:04:31,680 --> 00:04:37,529
know that in real time what is the

00:04:34,110 --> 00:04:40,949
magnitude of a DNA sequence so this is

00:04:37,529 --> 00:04:43,469
an actual DNA sequence so you can see

00:04:40,949 --> 00:04:45,899
that you know it's 46 lakhs for 25

00:04:43,469 --> 00:04:49,229
million of bases in a single DNA

00:04:45,899 --> 00:04:50,759
sequence so just imagine the amount of

00:04:49,229 --> 00:04:52,469
data that we are talking about like if

00:04:50,759 --> 00:04:54,419
we need to store this DNA sequence

00:04:52,469 --> 00:04:56,729
somewhere so how much this single DNA

00:04:54,419 --> 00:04:59,369
sequence and you know that we have

00:04:56,729 --> 00:05:03,569
plenty of DNA so to store all so it

00:04:59,369 --> 00:05:06,089
requires a lot of data and there are

00:05:03,569 --> 00:05:08,879
three billion base pairs in a genome so

00:05:06,089 --> 00:05:11,009
it is present in all of us all know it

00:05:08,879 --> 00:05:13,349
was just a single genome that has three

00:05:11,009 --> 00:05:14,639
billions of base pairs okay only one

00:05:13,349 --> 00:05:16,289
person is having three billions of

00:05:14,639 --> 00:05:21,629
billions of base pairs that's right

00:05:16,289 --> 00:05:24,779
that's P so okay so we have a learned

00:05:21,629 --> 00:05:27,989
few concepts let's see how by Ruby

00:05:24,779 --> 00:05:30,509
leverages that oh so basically today's

00:05:27,989 --> 00:05:32,249
intention of the talk is not about only

00:05:30,509 --> 00:05:34,829
about increasing the Ruby skills it is

00:05:32,249 --> 00:05:36,659
how bio ruby is being used in a

00:05:34,829 --> 00:05:38,249
different field and non-id feel like

00:05:36,659 --> 00:05:40,979
biological field and it is helping out

00:05:38,249 --> 00:05:42,569
the band furmity shins and so this is a

00:05:40,979 --> 00:05:44,939
talk about something which we can be

00:05:42,569 --> 00:05:48,119
very proud of that Ruby's being used in

00:05:44,939 --> 00:05:50,610
this field as well as Lauren was saying

00:05:48,119 --> 00:05:54,689
in the morning a ruby ring used as a

00:05:50,610 --> 00:06:01,439
scientific tool in this bio Ruby okay so

00:05:54,689 --> 00:06:03,329
this is a structure of bio Ruby to

00:06:01,439 --> 00:06:06,769
install bio Ruby we just need to do a

00:06:03,329 --> 00:06:10,829
gem install bio it will install this and

00:06:06,769 --> 00:06:17,209
as you can see that you know it has a

00:06:10,829 --> 00:06:20,729
bio folder inside it it has a DB folder

00:06:17,209 --> 00:06:22,499
so there are various databases and that

00:06:20,729 --> 00:06:25,259
contained biological data data spread

00:06:22,499 --> 00:06:28,259
all across the world so we have some

00:06:25,259 --> 00:06:31,409
famous embl fasta genebank egg these are

00:06:28,259 --> 00:06:33,179
famous biological data that have that

00:06:31,409 --> 00:06:35,729
data spread all across the world and

00:06:33,179 --> 00:06:39,439
also by ruby has their support for these

00:06:35,729 --> 00:06:39,439
databases in its kool library

00:06:45,960 --> 00:06:53,950
right so this is a structure of bio Ruby

00:06:49,680 --> 00:06:57,640
so next we'll look upon trying to create

00:06:53,950 --> 00:07:00,190
a sequence so we learnt what is the DNA

00:06:57,640 --> 00:07:03,520
sequence so here we will try and create

00:07:00,190 --> 00:07:06,240
a sample DNA sequence so how does it is

00:07:03,520 --> 00:07:10,030
created it is sequence equal to x 0 and

00:07:06,240 --> 00:07:12,490
then sequence so by ruby has different

00:07:10,030 --> 00:07:14,410
classes for DNA RNA amino acids of the

00:07:12,490 --> 00:07:16,780
different biological molecules and the

00:07:14,410 --> 00:07:19,360
different methods which are normally

00:07:16,780 --> 00:07:22,240
executed within our system are then

00:07:19,360 --> 00:07:24,880
defined within the vial bio Ruby so it

00:07:22,240 --> 00:07:26,530
is actually a string if you can just see

00:07:24,880 --> 00:07:28,990
it within the double quotes so what is

00:07:26,530 --> 00:07:30,250
the sequence in a DNA sequence so Ruby

00:07:28,990 --> 00:07:32,380
doesn't doesn't understand what is the

00:07:30,250 --> 00:07:34,330
DNA or RNA right so it is understanding

00:07:32,380 --> 00:07:36,580
what is the string so whatever is the

00:07:34,330 --> 00:07:38,440
sequence enviro is just a string in Ruby

00:07:36,580 --> 00:07:41,050
only the difference is the first

00:07:38,440 --> 00:07:44,860
position of a string is normally 0 which

00:07:41,050 --> 00:07:46,510
we know but in bio be it is one so in to

00:07:44,860 --> 00:07:48,640
keep imperative at the biological world

00:07:46,510 --> 00:07:51,010
it is starting with the one as a first

00:07:48,640 --> 00:07:52,810
position and what all performance what

00:07:51,010 --> 00:07:55,360
all operations you can perform on string

00:07:52,810 --> 00:07:59,410
in Ruby you can perform those on a DNA

00:07:55,360 --> 00:08:03,820
sequence so the next function will see

00:07:59,410 --> 00:08:06,160
is the composition so now as we just saw

00:08:03,820 --> 00:08:08,770
that DNA sequence is made up of basis

00:08:06,160 --> 00:08:12,340
and you can see that the sequence we

00:08:08,770 --> 00:08:16,330
took was 80 GCAT GCAA so there were 5 s

00:08:12,340 --> 00:08:18,370
to t 2 g's and to see so it gives just

00:08:16,330 --> 00:08:20,650
the function gives the composition that

00:08:18,370 --> 00:08:23,380
is how many bases each bases are present

00:08:20,650 --> 00:08:26,590
in that frequency just imagine in real

00:08:23,380 --> 00:08:28,300
time the sequences not this but what we

00:08:26,590 --> 00:08:33,460
saw some time back so four to five

00:08:28,300 --> 00:08:36,450
billion bases bases so next next

00:08:33,460 --> 00:08:40,330
function that will see is a compliment

00:08:36,450 --> 00:08:44,020
so this is a very frequently used

00:08:40,330 --> 00:08:45,880
function so what is a compliment so we

00:08:44,020 --> 00:08:49,570
learned that DNA is a double standard

00:08:45,880 --> 00:08:52,060
structure so very often it is like in

00:08:49,570 --> 00:08:54,730
one strand the sequence biologists know

00:08:52,060 --> 00:08:56,110
what is the sequence of the bases in one

00:08:54,730 --> 00:08:56,769
strength and they need to find the

00:08:56,110 --> 00:09:00,399
sequence

00:08:56,769 --> 00:09:03,309
in the other strength so this compliment

00:09:00,399 --> 00:09:06,160
gets the answer so how it is we know

00:09:03,309 --> 00:09:08,470
that a pairs with T and as you can see

00:09:06,160 --> 00:09:11,920
in the original sequence the sequence

00:09:08,470 --> 00:09:15,009
ends with a triple a and a pairs with T

00:09:11,920 --> 00:09:16,899
so we have triple T and I forgot to

00:09:15,009 --> 00:09:19,259
mention that you know these compliments

00:09:16,899 --> 00:09:21,970
are being calculated in reverse order so

00:09:19,259 --> 00:09:24,129
the end part of that will be the first

00:09:21,970 --> 00:09:26,939
in this so a pairs with T and the fourth

00:09:24,129 --> 00:09:29,470
loss we have C C pairs with G so we have

00:09:26,939 --> 00:09:31,329
4g here so this is the complement

00:09:29,470 --> 00:09:37,119
function that is very often used in by

00:09:31,329 --> 00:09:41,319
Ruby let us try and create a new

00:09:37,119 --> 00:09:43,389
sequence and in this sequence what we

00:09:41,319 --> 00:09:48,189
will do is we will intentionally creep

00:09:43,389 --> 00:09:50,649
in few errors like you might have

00:09:48,189 --> 00:09:55,809
noticed already think it's spring cut

00:09:50,649 --> 00:10:00,249
off ok so we have our V so these are

00:09:55,809 --> 00:10:03,519
bases that shouldn't be there right so

00:10:00,249 --> 00:10:05,319
what is the solution to find these bases

00:10:03,519 --> 00:10:07,119
that shouldn't have been there so we

00:10:05,319 --> 00:10:09,999
have a simple function called illegal

00:10:07,119 --> 00:10:12,819
basis and it returns the illegal basis

00:10:09,999 --> 00:10:15,879
that that are erroneously entered into

00:10:12,819 --> 00:10:18,670
the DNA sequence so this is how by ruby

00:10:15,879 --> 00:10:27,420
is making life simpler for the

00:10:18,670 --> 00:10:31,990
biologists ok so any questions no

00:10:27,420 --> 00:10:36,990
normally no row if we do it manually

00:10:31,990 --> 00:10:44,439
then it can go but otherwise it is not

00:10:36,990 --> 00:10:47,049
ok any other questions ok so we know

00:10:44,439 --> 00:10:49,809
about the by DNA sequences and what is a

00:10:47,049 --> 00:10:52,059
DNN all so DNA is actually the blueprint

00:10:49,809 --> 00:10:54,730
which we knew but the actual functions

00:10:52,059 --> 00:10:56,079
are not performed by the DNA they are

00:10:54,730 --> 00:10:58,749
performed by something called the

00:10:56,079 --> 00:11:00,819
proteins so the proteins tells us what

00:10:58,749 --> 00:11:04,269
to do whether I will shake my hand or

00:11:00,819 --> 00:11:06,759
whether I'll smile I'll cry so these are

00:11:04,269 --> 00:11:08,740
the functions all these are performed by

00:11:06,759 --> 00:11:10,209
the proteins and amino acids are the

00:11:08,740 --> 00:11:13,449
building blocks of protein

00:11:10,209 --> 00:11:15,670
so how is our DNA sequence maps to a

00:11:13,449 --> 00:11:19,240
protein so we know about the sequences

00:11:15,670 --> 00:11:21,879
atg see the bases so the way these bases

00:11:19,240 --> 00:11:25,119
are arranged our determines which amino

00:11:21,879 --> 00:11:27,759
acid will be formed so if three persons

00:11:25,119 --> 00:11:30,639
are sitting side-by-side so if a B and C

00:11:27,759 --> 00:11:32,740
is sitting so the way a b c or c a b

00:11:30,639 --> 00:11:34,660
will sit determines which amino acid

00:11:32,740 --> 00:11:38,559
will be formed for example for the first

00:11:34,660 --> 00:11:39,929
one we are seeing that TT see will form

00:11:38,559 --> 00:11:43,449
one of the minor acids phenylalanine

00:11:39,929 --> 00:11:46,709
while see TT will formed another of the

00:11:43,449 --> 00:11:50,800
minor acids so they are not the same and

00:11:46,709 --> 00:11:53,050
this these three bases is called a codon

00:11:50,800 --> 00:11:57,610
because it codes for a definite amino

00:11:53,050 --> 00:12:00,240
acid so in order to better explain it we

00:11:57,610 --> 00:12:10,779
need three volunteers from the audience

00:12:00,240 --> 00:12:15,600
any three people sure okay thank you

00:12:10,779 --> 00:12:18,549
thank you what's your name Jerry Jerry

00:12:15,600 --> 00:12:28,920
mourad run the business what you're on

00:12:18,549 --> 00:12:28,920
read on ok thank you

00:12:31,370 --> 00:12:48,310
and then I way we were special all right

00:12:53,260 --> 00:12:59,330
so when the DA is gets copied that is

00:12:57,740 --> 00:13:02,390
when the cell is getting manufactured

00:12:59,330 --> 00:13:04,820
then this DNA gets copied and when the

00:13:02,390 --> 00:13:08,020
when we will I'll say just copy one then

00:13:04,820 --> 00:13:12,350
we'll guests get a step forward okay

00:13:08,020 --> 00:13:14,300
okay copy one you can just come forward

00:13:12,350 --> 00:13:16,550
so this is first copy of the DNA that is

00:13:14,300 --> 00:13:19,550
being produced when we are being

00:13:16,550 --> 00:13:21,890
manufactured so DNA that gets replicated

00:13:19,550 --> 00:13:25,550
so supposing this is the first copy of

00:13:21,890 --> 00:13:28,640
DNA so atg get replicated correctly and

00:13:25,550 --> 00:13:31,480
it is very possible you know that during

00:13:28,640 --> 00:13:34,820
replication errors might creep in so

00:13:31,480 --> 00:13:36,860
supposing during the second copy we take

00:13:34,820 --> 00:13:39,140
step two and I think we do not have

00:13:36,860 --> 00:13:43,640
space will put in the step 2 error only

00:13:39,140 --> 00:13:46,130
okay okay that's better so step to a

00:13:43,640 --> 00:13:51,440
copy to was also fine but maybe during

00:13:46,130 --> 00:13:53,240
copy three what we do is yeah come in so

00:13:51,440 --> 00:13:56,240
during copy three erroneously what

00:13:53,240 --> 00:13:58,940
happened is P converted to a C so what

00:13:56,240 --> 00:14:03,980
we have what we saw is the sequence is a

00:13:58,940 --> 00:14:08,120
CG but not a atg so what we learnt is a

00:14:03,980 --> 00:14:14,660
CT was forming in a TG was forming

00:14:08,120 --> 00:14:16,580
methanol but a CT a CG is for methionine

00:14:14,660 --> 00:14:18,410
so it's a completely different amino

00:14:16,580 --> 00:14:20,240
acid which has been formed and this is

00:14:18,410 --> 00:14:22,850
this actually goes on within the

00:14:20,240 --> 00:14:25,700
biological world so we can have a great

00:14:22,850 --> 00:14:27,550
round of applause for all before thank

00:14:25,700 --> 00:14:36,380
you

00:14:27,550 --> 00:14:41,950
thank you I'll do help you I think thank

00:14:36,380 --> 00:14:41,950
you for watching just to say there we go

00:14:44,170 --> 00:14:51,770
ok so these single base pair replacement

00:14:49,280 --> 00:14:54,440
is what is known as snips single

00:14:51,770 --> 00:14:58,040
nucleotide polymorphisms and these kind

00:14:54,440 --> 00:14:59,600
of changes is what makes us unique so we

00:14:58,040 --> 00:15:01,580
are ninety-nine point nine nine percent

00:14:59,600 --> 00:15:04,310
similar all of our genomes are similar

00:15:01,580 --> 00:15:07,340
but this one genome while replication

00:15:04,310 --> 00:15:13,640
one sequence replacement can make us a

00:15:07,340 --> 00:15:16,430
tall person or a short person right it

00:15:13,640 --> 00:15:20,480
what it can make us someone having a

00:15:16,430 --> 00:15:22,370
blonde brown or black hair so these kind

00:15:20,480 --> 00:15:34,970
of differences creeps in due to the

00:15:22,370 --> 00:15:39,680
snips in all of us let us see now how by

00:15:34,970 --> 00:15:41,840
ruby is helping with these things so we

00:15:39,680 --> 00:15:45,710
are creating our DNA sequence like

00:15:41,840 --> 00:15:49,700
before with all these 80 GC base pairs

00:15:45,710 --> 00:15:52,010
and then we call the translate method so

00:15:49,700 --> 00:15:54,740
translation is actually the method name

00:15:52,010 --> 00:15:58,280
which forms the amino acid from these

00:15:54,740 --> 00:16:00,440
DNA bases so when we call on the

00:15:58,280 --> 00:16:03,350
Transnet method it actually shows us

00:16:00,440 --> 00:16:05,990
that which amino acids are formed so

00:16:03,350 --> 00:16:08,270
three bases are required to form one

00:16:05,990 --> 00:16:11,120
amino acid so 80 g is forming methionine

00:16:08,270 --> 00:16:14,300
the CIT is forming histidine and

00:16:11,120 --> 00:16:15,740
likewise and when we call the dot names

00:16:14,300 --> 00:16:18,650
method we actually get the names

00:16:15,740 --> 00:16:20,450
otherwise it's a short name and then we

00:16:18,650 --> 00:16:24,860
can call the codes method which is just

00:16:20,450 --> 00:16:27,890
a three-letter code for these names now

00:16:24,860 --> 00:16:30,980
as we can find out from a string we can

00:16:27,890 --> 00:16:33,740
find out the molecular weight of these

00:16:30,980 --> 00:16:35,480
amino acids itself so all these molecule

00:16:33,740 --> 00:16:38,600
Mullock eular weight of all the minus is

00:16:35,480 --> 00:16:41,370
combined together and for a string as we

00:16:38,600 --> 00:16:43,500
can perform the subsequence method

00:16:41,370 --> 00:16:46,200
for a string similarly if you like to

00:16:43,500 --> 00:16:48,480
analyze a part of the NN of the entire

00:16:46,200 --> 00:16:51,930
one we can just call the subsequence

00:16:48,480 --> 00:16:54,180
method on that DNA sequence so 4 comma

00:16:51,930 --> 00:16:55,410
sex gives me that the fourth from the

00:16:54,180 --> 00:16:57,810
fourth position to the sixth position

00:16:55,410 --> 00:17:02,360
whatever be the DNA sequence give me the

00:16:57,810 --> 00:17:02,360
output and probably I'll analyze over it

00:17:05,839 --> 00:17:12,780
ok any questions till now you can do

00:17:10,260 --> 00:17:29,700
minor set proteins now by ruby's

00:17:12,780 --> 00:17:33,300
interacting what are the advantage by

00:17:29,700 --> 00:17:35,720
using bio Ruby versus language I r and

00:17:33,300 --> 00:17:35,720
bioconductor

00:17:41,140 --> 00:17:44,860
mainly the value you'll find we are in

00:17:42,970 --> 00:17:46,630
the flat file come back so violently

00:17:44,860 --> 00:17:48,700
gives access to that and other

00:17:46,630 --> 00:17:51,490
advantages of bio gems which will be

00:17:48,700 --> 00:17:53,590
covering later so we have the gems in

00:17:51,490 --> 00:17:55,300
movie so they are also fat they have

00:17:53,590 --> 00:17:57,430
also come up with the bio James concept

00:17:55,300 --> 00:17:59,740
that if you have modular approaches and

00:17:57,430 --> 00:18:01,510
we can interact with the different

00:17:59,740 --> 00:18:03,460
databases which are also not supported

00:18:01,510 --> 00:18:05,830
by the very core library what they are

00:18:03,460 --> 00:18:09,040
dealt up as a gym so we can come up with

00:18:05,830 --> 00:18:11,170
the Jets by five James is a very growing

00:18:09,040 --> 00:18:25,960
community and it adds up to the

00:18:11,170 --> 00:18:28,420
viability librarian ok so how bio Ruby

00:18:25,960 --> 00:18:31,180
is interacting with bioinformatics so

00:18:28,420 --> 00:18:33,700
whatever we know now is bioinformatics

00:18:31,180 --> 00:18:36,670
so however the biological data is being

00:18:33,700 --> 00:18:38,500
used by the information technology how

00:18:36,670 --> 00:18:40,570
it is stored retrieved analyzed

00:18:38,500 --> 00:18:42,670
everything is bioinformatics but the

00:18:40,570 --> 00:18:45,640
major role of bioinformatics came into

00:18:42,670 --> 00:18:48,250
vogue after the Human Genome Project so

00:18:45,640 --> 00:18:50,890
human genome project was a milestone so

00:18:48,250 --> 00:18:54,760
it says that how the entire DNA

00:18:50,890 --> 00:18:57,070
sequences is arranged in our body in the

00:18:54,760 --> 00:19:00,190
entire genome genome isn't a sequence of

00:18:57,070 --> 00:19:02,110
all the genes in human beings so it told

00:19:00,190 --> 00:19:04,330
us that there are three billion base

00:19:02,110 --> 00:19:07,240
pairs in each of us how they are

00:19:04,330 --> 00:19:09,880
arranged it told us that around three gb

00:19:07,240 --> 00:19:12,670
of data is stored in each sale and there

00:19:09,880 --> 00:19:14,860
are around 75 200 trillions of cells so

00:19:12,670 --> 00:19:16,480
it has been mapped and it was a joint

00:19:14,860 --> 00:19:19,320
venture of different labs around the

00:19:16,480 --> 00:19:22,810
world and was completed around 2003 and

00:19:19,320 --> 00:19:25,930
after that the role of bioinformatics

00:19:22,810 --> 00:19:28,600
was huge so it is not only the genomic

00:19:25,930 --> 00:19:30,100
sequence that is the atg see it is about

00:19:28,600 --> 00:19:32,650
the different amino acids which are

00:19:30,100 --> 00:19:35,680
produced different proteins which can go

00:19:32,650 --> 00:19:39,070
wrong which can make a person diabetic

00:19:35,680 --> 00:19:41,440
have more prone to cancer so all these

00:19:39,070 --> 00:19:44,620
things are being getting added in human

00:19:41,440 --> 00:19:47,710
genome database d by d so it is a huge

00:19:44,620 --> 00:19:51,820
database which has to be maintained so

00:19:47,710 --> 00:19:54,669
by ruby was formed in the year 2000 and

00:19:51,820 --> 00:19:57,429
in the same place as ruby was developed

00:19:54,669 --> 00:20:00,039
man and the first version was published

00:19:57,429 --> 00:20:01,809
in 2001 and we have the latest version

00:20:00,039 --> 00:20:06,220
as of now as one point four point three

00:20:01,809 --> 00:20:09,549
in the last mate has been published okay

00:20:06,220 --> 00:20:11,769
so as a bioinformatics tools there are

00:20:09,549 --> 00:20:14,139
several tools which are present which

00:20:11,769 --> 00:20:17,409
will make us understand that how we are

00:20:14,139 --> 00:20:19,869
similar to a mouse or a rat so something

00:20:17,409 --> 00:20:22,989
a very important tool is blast that is

00:20:19,869 --> 00:20:26,529
not a bomb blast but a acronym of basic

00:20:22,989 --> 00:20:29,679
local alignment search tool so it tells

00:20:26,529 --> 00:20:31,809
us that how two sequences are similar or

00:20:29,679 --> 00:20:34,119
how to organisms are similar to each

00:20:31,809 --> 00:20:37,419
other so first we can see here that

00:20:34,119 --> 00:20:39,639
there is one like the query where is a

00:20:37,419 --> 00:20:41,049
sequence which we are giving probably

00:20:39,639 --> 00:20:43,779
the rat sample protein which is an

00:20:41,049 --> 00:20:45,940
example here and the subject is we are

00:20:43,779 --> 00:20:50,499
comparing it the rat sample protein with

00:20:45,940 --> 00:20:52,359
a human amino acid sequence so this 70

00:20:50,499 --> 00:20:55,059
is the position of that ranch sample

00:20:52,359 --> 00:20:58,299
protein in the DNA sequence so if we get

00:20:55,059 --> 00:21:00,759
exactly the same amino acid present then

00:20:58,299 --> 00:21:03,070
we replace it in the middle in the

00:21:00,759 --> 00:21:05,799
second line as the name of the minor

00:21:03,070 --> 00:21:08,739
acid but if they are related like

00:21:05,799 --> 00:21:11,739
leucine and valine L&V we give a plus

00:21:08,739 --> 00:21:13,539
sign which means positive and if they

00:21:11,739 --> 00:21:15,429
are no we're related like a histidine

00:21:13,539 --> 00:21:18,309
and isoleucine in these two we just

00:21:15,429 --> 00:21:20,470
leave it as a blank or a gap so the way

00:21:18,309 --> 00:21:23,109
this blast or the algorithm is

00:21:20,470 --> 00:21:25,239
calculated is combining these three

00:21:23,109 --> 00:21:27,489
things so this is called the identity

00:21:25,239 --> 00:21:29,169
the percentage of the exact position of

00:21:27,489 --> 00:21:33,100
the minor side which are present it can

00:21:29,169 --> 00:21:34,929
be also be our DNA sequence so 100 by

00:21:33,100 --> 00:21:38,529
179 so it comes around fifty five

00:21:34,929 --> 00:21:40,989
percent in this case this is a gap it

00:21:38,529 --> 00:21:43,210
came around one so we can just neglect

00:21:40,989 --> 00:21:45,340
it zero percent and this is a positive

00:21:43,210 --> 00:21:47,919
so they are similar but they are not

00:21:45,340 --> 00:21:50,309
exactly the same so this is a typical

00:21:47,919 --> 00:21:53,320
blast output which we can get from the

00:21:50,309 --> 00:21:55,989
NCBI website similarly if you can

00:21:53,320 --> 00:22:01,290
perform this using the bio Ruby tool so

00:21:55,989 --> 00:22:04,920
let us find out how okay

00:22:01,290 --> 00:22:10,660
so what we are doing here is we are

00:22:04,920 --> 00:22:12,340
creating a blast object so the creation

00:22:10,660 --> 00:22:16,630
of the blast object is we are connecting

00:22:12,340 --> 00:22:20,080
to a remote blast database so blastp and

00:22:16,630 --> 00:22:23,740
we are performing the blast p so p

00:22:20,080 --> 00:22:25,420
stands for protein so as we are finding

00:22:23,740 --> 00:22:27,910
out the similarity between different

00:22:25,420 --> 00:22:30,010
amino acids or proteins it is a blastp

00:22:27,910 --> 00:22:32,020
otherwise we'll do a blast and naughty

00:22:30,010 --> 00:22:35,050
blast and for nucleic acids or DNA

00:22:32,020 --> 00:22:37,750
sequences we are connecting to swissprot

00:22:35,050 --> 00:22:41,770
database with a database name easy

00:22:37,750 --> 00:22:44,140
expect value that is what the number of

00:22:41,770 --> 00:22:47,470
times we can expect it to get the match

00:22:44,140 --> 00:22:50,050
so lesser is a expect value lesser is

00:22:47,470 --> 00:22:52,720
our discrepancy of finding a false

00:22:50,050 --> 00:22:55,720
positive result and then is the name of

00:22:52,720 --> 00:22:56,860
the database via genomic net is a name

00:22:55,720 --> 00:22:59,070
of the database of the human genome

00:22:56,860 --> 00:23:02,110
which we are conveying comparing it with

00:22:59,070 --> 00:23:04,380
so we have given an example of a rat

00:23:02,110 --> 00:23:07,090
sample protein that is bio sequence a

00:23:04,380 --> 00:23:09,580
stands for a minor acid and then the

00:23:07,090 --> 00:23:13,720
minus is sequence and then we are

00:23:09,580 --> 00:23:15,730
performing the blast so this is a remote

00:23:13,720 --> 00:23:17,800
blast which we are doing similarly we

00:23:15,730 --> 00:23:21,309
can also do a local blast by installing

00:23:17,800 --> 00:23:24,400
the blast tool in our machine and then

00:23:21,309 --> 00:23:27,640
performing the same thing so when we

00:23:24,400 --> 00:23:30,700
just execute this ruby file and put it

00:23:27,640 --> 00:23:32,740
in a blast output text result we will

00:23:30,700 --> 00:23:34,950
show that we will be getting similar

00:23:32,740 --> 00:23:39,250
result as we got from the NCBI website

00:23:34,950 --> 00:23:41,530
itself that how these two sequences are

00:23:39,250 --> 00:23:44,770
similar to each other so we get an

00:23:41,530 --> 00:23:46,840
expected value of 5.7 e to the power 10

00:23:44,770 --> 00:23:49,570
to power minus 3 identity is a

00:23:46,840 --> 00:23:52,510
percentage that these two amino acids

00:23:49,570 --> 00:23:57,480
will be positioned at the same position

00:23:52,510 --> 00:24:00,250
so 179 is a person when a rat protein is

00:23:57,480 --> 00:24:03,309
positioned at the same position as we

00:24:00,250 --> 00:24:05,620
are and then length of the overlapping

00:24:03,309 --> 00:24:08,320
regions and some details about the human

00:24:05,620 --> 00:24:12,070
protein the gene which is coding that

00:24:08,320 --> 00:24:14,559
protein so we have several of these hits

00:24:12,070 --> 00:24:16,840
or the regions which are similar so

00:24:14,559 --> 00:24:26,730
we are actually similar to rats or

00:24:16,840 --> 00:24:30,009
mouse's ok so next topic is bio gems so

00:24:26,730 --> 00:24:32,289
like we all know that you know in Ruby

00:24:30,009 --> 00:24:35,139
we have Ruby gems and in bio Ruby we

00:24:32,289 --> 00:24:37,419
have bio James so all the gems that are

00:24:35,139 --> 00:24:40,330
made for bio Ruby are automatically

00:24:37,419 --> 00:24:44,799
listed on this website Biogen sort info

00:24:40,330 --> 00:24:46,330
they start with bio and you know this we

00:24:44,799 --> 00:24:48,460
mentioned that you know bio jumps is a

00:24:46,330 --> 00:24:51,429
fabulous concept that they've introduced

00:24:48,460 --> 00:24:52,960
so it gives a modular approach so there

00:24:51,429 --> 00:24:55,600
are plenty of databases all across the

00:24:52,960 --> 00:24:58,149
world that have genomic data so but by

00:24:55,600 --> 00:25:01,230
Oh Ruby code library has only support

00:24:58,149 --> 00:25:04,659
for few of them so this is biogenesis

00:25:01,230 --> 00:25:08,379
how it helps out in overcoming that so

00:25:04,659 --> 00:25:11,320
it provides us supposing we need to

00:25:08,379 --> 00:25:13,269
connect to a database which which does

00:25:11,320 --> 00:25:15,549
not have support and we can create a

00:25:13,269 --> 00:25:18,779
Biogen for that and at the same time it

00:25:15,549 --> 00:25:23,950
won't affect the code library of by Ruby

00:25:18,779 --> 00:25:27,610
so we'll see one such bio gem that is

00:25:23,950 --> 00:25:30,129
called bio UCSC API and it will connect

00:25:27,610 --> 00:25:33,070
to a famous database called UCSC

00:25:30,129 --> 00:25:36,190
database so as you can see that we have

00:25:33,070 --> 00:25:40,629
that has plenty of databases g18 sg19

00:25:36,190 --> 00:25:42,669
SNP 130 is a table in that and of course

00:25:40,629 --> 00:25:44,649
it is based on famous activerecord

00:25:42,669 --> 00:25:46,450
framework so we do not have to write

00:25:44,649 --> 00:25:51,600
bulky queries it's just a finder method

00:25:46,450 --> 00:25:57,580
that we write alright so let's try and

00:25:51,600 --> 00:25:59,889
connect twitch so we enter the bio Ruby

00:25:57,580 --> 00:26:02,909
shell so we just type in the bio Ruby

00:25:59,889 --> 00:26:02,909
way into the by Ruby shell

00:26:13,110 --> 00:26:21,660
okay so we do the first require bio UCSC

00:26:16,679 --> 00:26:23,370
it would require gym and we would we

00:26:21,660 --> 00:26:27,290
would try to connect to a specific

00:26:23,370 --> 00:26:30,179
database in the UCSC that is AG 18 so

00:26:27,290 --> 00:26:32,520
okay so we have the connection now it is

00:26:30,179 --> 00:26:34,380
connected to a G 18 and what we will try

00:26:32,520 --> 00:26:38,670
to do now is we will try to find a

00:26:34,380 --> 00:26:42,570
particular particular sequence or a

00:26:38,670 --> 00:26:47,340
particular gene I mean so in the SNP 130

00:26:42,570 --> 00:26:51,240
table so we just use this have off

00:26:47,340 --> 00:26:57,360
specify the gene so gene is actually rs4

00:26:51,240 --> 00:26:59,220
826 something so that is nothing but the

00:26:57,360 --> 00:27:01,890
single nucleotide polymorphisms we were

00:26:59,220 --> 00:27:03,809
telling the snips so we have many snips

00:27:01,890 --> 00:27:06,059
in our body hence the table names are

00:27:03,809 --> 00:27:12,270
with the name of the snips so it is snip

00:27:06,059 --> 00:27:15,720
130 otherwise it resultset and what it

00:27:12,270 --> 00:27:17,400
is often needed out of this is location

00:27:15,720 --> 00:27:20,970
of the gene so where was this gene

00:27:17,400 --> 00:27:23,850
located the RS 482 that we specified so

00:27:20,970 --> 00:27:26,280
the results comes out to be that we can

00:27:23,850 --> 00:27:29,100
check it with result from so it gets out

00:27:26,280 --> 00:27:32,870
that this particular gene was located in

00:27:29,100 --> 00:27:38,179
chromosome X of that particular database

00:27:32,870 --> 00:27:38,179
so this is how we do with my Ruby

00:27:42,880 --> 00:27:48,310
yeah so there were plenty of chromosomes

00:27:45,700 --> 00:27:55,840
but the chromosome X had that particular

00:27:48,310 --> 00:27:58,000
gene so the next thing next upcoming

00:27:55,840 --> 00:28:00,190
thing which is by Ruby also walking with

00:27:58,000 --> 00:28:02,770
is the next generation sequencing so the

00:28:00,190 --> 00:28:05,410
name confirms right so how sequencing is

00:28:02,770 --> 00:28:08,170
done nowadays is the same as a Sangha

00:28:05,410 --> 00:28:10,750
method which we use to do earlier the

00:28:08,170 --> 00:28:13,240
principle is same but the way it is

00:28:10,750 --> 00:28:15,880
performed here nowadays is pretty faster

00:28:13,240 --> 00:28:18,970
so we can sequence the entire genome at

00:28:15,880 --> 00:28:21,580
around eight days now so 3 billions of

00:28:18,970 --> 00:28:23,260
base pairs can be sequenced so we need

00:28:21,580 --> 00:28:25,540
to give the DNA samples collected from

00:28:23,260 --> 00:28:28,480
the saliva or from a blood just a drop

00:28:25,540 --> 00:28:30,220
will do we put it in a microarray micro

00:28:28,480 --> 00:28:33,370
areas are small pellets similar to a

00:28:30,220 --> 00:28:35,590
chip in a computer and then we put it in

00:28:33,370 --> 00:28:38,260
such a high sequencer so it is a image

00:28:35,590 --> 00:28:41,140
of a alumina high-tech 2000 model of a

00:28:38,260 --> 00:28:42,820
next-generation sequencer we put it and

00:28:41,140 --> 00:28:47,260
after eight days it gives out the result

00:28:42,820 --> 00:28:51,190
that how these DNA bases are arranged in

00:28:47,260 --> 00:28:53,440
that person so it is pretty fast it is a

00:28:51,190 --> 00:28:56,410
high-throughput analysis it is massively

00:28:53,440 --> 00:28:59,890
having a parallel sequencing going on at

00:28:56,410 --> 00:29:02,310
present so what by ruby is doing is it

00:28:59,890 --> 00:29:05,110
has come up with a gem like bio ngh

00:29:02,310 --> 00:29:06,310
next-generation sequencing gem which

00:29:05,110 --> 00:29:08,500
fetches the data from these

00:29:06,310 --> 00:29:10,690
next-generation sequences in the

00:29:08,500 --> 00:29:13,510
different file formats and then give us

00:29:10,690 --> 00:29:18,430
the result and we can manipulate or we

00:29:13,510 --> 00:29:23,350
can play out with the result okay so how

00:29:18,430 --> 00:29:26,170
can we contribute to the bio Ruby so we

00:29:23,350 --> 00:29:28,420
can publish more bio gems or we can add

00:29:26,170 --> 00:29:30,400
to the bio gems which are present we can

00:29:28,420 --> 00:29:32,080
add more features to it we can connect

00:29:30,400 --> 00:29:34,030
to other biological databases we can

00:29:32,080 --> 00:29:36,930
come up with other analysis which are

00:29:34,030 --> 00:29:40,120
present presently done in manually or

00:29:36,930 --> 00:29:42,310
supported by other bio projects and then

00:29:40,120 --> 00:29:44,500
we can incorporate it in by Ruby so they

00:29:42,310 --> 00:29:46,240
have a beautiful bunch of people whom

00:29:44,500 --> 00:29:49,060
you can just mail it and they will reply

00:29:46,240 --> 00:29:51,280
regarding whatever your queries it you

00:29:49,060 --> 00:29:54,250
can just clone the repository from this

00:29:51,280 --> 00:29:56,260
github and add to it you can add your

00:29:54,250 --> 00:29:59,350
bio gem just submit it

00:29:56,260 --> 00:30:00,760
they will review and if it is a good

00:29:59,350 --> 00:30:02,980
amount of submission they'll incorporate

00:30:00,760 --> 00:30:07,030
in the biopic or library or device it

00:30:02,980 --> 00:30:10,750
will be a gem and it is pretty active

00:30:07,030 --> 00:30:14,290
members so we have this bio Ruby team

00:30:10,750 --> 00:30:17,260
with active members from Japan and other

00:30:14,290 --> 00:30:18,880
parts of the world and these are the

00:30:17,260 --> 00:30:20,890
communities open source communities

00:30:18,880 --> 00:30:22,660
which actively participate and spread

00:30:20,890 --> 00:30:24,610
the word of bio Ruby to open

00:30:22,660 --> 00:30:26,860
bioinformatics foundation database

00:30:24,610 --> 00:30:28,680
Center for life sciences google Summer

00:30:26,860 --> 00:30:31,240
of Code have also had a hackathon

00:30:28,680 --> 00:30:33,310
regarding the by Ruby and the National

00:30:31,240 --> 00:30:35,290
evolutionary synthesis center so

00:30:33,310 --> 00:30:40,360
together they all are walking to make by

00:30:35,290 --> 00:30:42,070
Ruby a prominent project okay so last

00:30:40,360 --> 00:30:45,160
but not the least we came to know that

00:30:42,070 --> 00:30:48,610
about gene so how's n gold or Michael

00:30:45,160 --> 00:30:50,320
cells are based out about this act n 3

00:30:48,610 --> 00:30:51,910
is the name of the G in the sport gene

00:30:50,320 --> 00:30:56,250
which is present in all the world class

00:30:51,910 --> 00:31:01,270
athletes and that makes them very

00:30:56,250 --> 00:31:04,300
probably that makes them the world class

00:31:01,270 --> 00:31:06,300
athletes but not only dusting we need

00:31:04,300 --> 00:31:09,460
the hard work and sheer dedication

00:31:06,300 --> 00:31:12,700
without that only a gene cannot make the

00:31:09,460 --> 00:31:16,210
person the person who eaters so a gene

00:31:12,700 --> 00:31:18,940
cannot stop me but I dream of it should

00:31:16,210 --> 00:31:21,040
not stop us we can go beyond the gene

00:31:18,940 --> 00:31:22,780
and the gene will make the change it

00:31:21,040 --> 00:31:24,400
will make the change depending upon the

00:31:22,780 --> 00:31:27,880
environment the mutation will change and

00:31:24,400 --> 00:31:30,240
we can live our dream so gene is not our

00:31:27,880 --> 00:31:35,760
destiny we should take the lesson from

00:31:30,240 --> 00:31:40,690
kovanda ok ma knew we forgot something

00:31:35,760 --> 00:31:45,220
ok so this is where we come from I am a

00:31:40,690 --> 00:31:47,370
new single dwells in Gupta come from

00:31:45,220 --> 00:31:47,370
India

00:31:50,680 --> 00:31:57,670
okay okay thank you thank you

00:32:13,430 --> 00:32:15,490

YouTube URL: https://www.youtube.com/watch?v=aMvA7lhHN7c


