Title: Ruby Conf 2013 - Your Development Machine in the Cloud by Charles Wood
Publication date: 2020-01-27
Playlist: RubyConf 2013
Description: 
	Can you do your work anywhere? All you need is a laptop and internet, right? What if your laptop blows up? Can you work on your phone? ipad? When you reboot your computer, does it pick up where you left off?

What if your developer machine was just another machine in the cloud? Then all you need is a terminal and an internet connection. To get work done, all you do is connect remotely to your cloud machine.

What this allows you to do is: 
- Pick up where you left off (using tmux and SSH) 
- Work from any device that has a terminal or terminal emulator 
- Make your work available from anywhere with an internet connection. (Clients like this.) 
- Do only one setup (across multiple workstations). This makes replacing your machine easy. 
- Use your friend's machine without compromising any security on the project 
- Pair program using tmux in your normal working environment 
- Use a cheap VPS on an inexpensive laptop

Software/Packages/Services I'm using to make this work: 
- SSH 
- BASH 
- tmux 
- Emacs 
- Git 
- Apache/Passenger 
- DigitalOcean 
- Guard 
- Database software (PostgreSQL/MongoDB)

I've been using this setup for about a year and it has made things VERY painless for me. I've paired with clients and subcontractors with it and traveled and picked up work on devices you can't normally do development on.

It also makes demo's a freaking breeze.

Help us caption & translate this video!

http://amara.org/v/FG5H/
Captions: 
	00:00:16,000 --> 00:00:18,300
CHARLES WOOD: All right. I'm Charles Max Wood

00:00:18,320 --> 00:00:25,320
and I'm gonna be talking about my dev machine in the cloud.

00:00:26,119 --> 00:00:27,529
When was it, it was like a year and

00:00:27,529 --> 00:00:30,320
a half ago, I started working for a company

00:00:30,320 --> 00:00:32,369
as a- I'm, I'm a freelancer. So I was

00:00:32,369 --> 00:00:34,730
contracting with a company, and they decided that they

00:00:34,730 --> 00:00:38,140
wanted us to pair with each other even though

00:00:38,140 --> 00:00:40,120
we were all remote. And so what they did

00:00:40,120 --> 00:00:44,610
was they set up their development machines in AWS,

00:00:44,610 --> 00:00:45,940
and we would all login to them and we

00:00:45,940 --> 00:00:47,719
would work off of them. And I've kind of

00:00:47,719 --> 00:00:50,000
adapted that, so that now when I work on

00:00:50,000 --> 00:00:52,690
things, I work on it in a cloud server.

00:00:52,690 --> 00:00:54,820
And so I'm just gonna explain a little bit

00:00:54,820 --> 00:00:57,390
of why I like it, and then I'll do

00:00:57,390 --> 00:00:58,780
a little bit of demo and show you how

00:00:58,780 --> 00:01:01,090
I use it.

00:01:01,090 --> 00:01:04,190
So one thing that I run into a lot

00:01:04,190 --> 00:01:06,710
is why. Why would you do this, right? Why

00:01:06,710 --> 00:01:09,750
would you put your development environment in the cloud

00:01:09,750 --> 00:01:12,830
when you can get a rockin', awesome machine, a

00:01:12,830 --> 00:01:16,270
Mac Pro or something, that has all the resources

00:01:16,270 --> 00:01:18,880
you want. Why would you put it up in

00:01:18,880 --> 00:01:20,979
the cloud and, and do things that way?

00:01:20,979 --> 00:01:23,979
Well, one of the big things for me is

00:01:23,979 --> 00:01:26,070
that I like to be able to move around.

00:01:26,070 --> 00:01:28,869
I generally work from home. Sometimes that doesn't work

00:01:28,869 --> 00:01:30,530
out. And so I need to be able to

00:01:30,530 --> 00:01:33,110
go somewhere. Do something a little bit different. Work

00:01:33,110 --> 00:01:35,579
from a coffee shop. I like being flexible as

00:01:35,579 --> 00:01:38,140
far as which machine I use. I mean, obviously

00:01:38,140 --> 00:01:41,000
I've got this 2009 white MacBook, so it's not

00:01:41,000 --> 00:01:45,149
always the ideal machine to work off of.

00:01:45,149 --> 00:01:46,579
And so it, it gives me that mobility. It

00:01:46,579 --> 00:01:49,750
lets me work from anywhere. It doesn't matter where

00:01:49,750 --> 00:01:51,399
I'm at. It doesn't matter if I've just got

00:01:51,399 --> 00:01:54,040
my iPad with me. I've worked off of that

00:01:54,040 --> 00:01:56,700
before. I can just, I can do things wherever

00:01:56,700 --> 00:01:58,530
I want. If I'm working on somebody else's machine,

00:01:58,530 --> 00:02:02,310
somebody else's environment, somebody else's network, it doesn't matter

00:02:02,310 --> 00:02:03,770
because I can just get on the machine where

00:02:03,770 --> 00:02:06,090
I'm at, where ever I'm at.

00:02:06,090 --> 00:02:11,120
Another reason is pairing. I have a handful of

00:02:11,120 --> 00:02:15,180
subcontractors that work for me on a regular basis.

00:02:15,180 --> 00:02:16,290
And a lot of times it's nice to be

00:02:16,290 --> 00:02:18,160
able to get in and look up the code

00:02:18,160 --> 00:02:20,489
that they wrote or write some code with them,

00:02:20,489 --> 00:02:22,290
and work with them and work in an environment

00:02:22,290 --> 00:02:25,420
that I'm familiar with. Or work in a way

00:02:25,420 --> 00:02:29,190
that allows us to just move ahead and, and

00:02:29,190 --> 00:02:31,020
have things already setup so that we can do

00:02:31,020 --> 00:02:31,379
pairing.

00:02:31,379 --> 00:02:32,540
And so it's really nice to be able to

00:02:32,540 --> 00:02:37,390
do that as well. It's really simple. It's pretty

00:02:37,390 --> 00:02:39,450
straightforward. You don't have to install a whole bunch

00:02:39,450 --> 00:02:41,180
of stuff to make this work. I'll talk about

00:02:41,180 --> 00:02:43,840
what I'm using in a minute. But really they're

00:02:43,840 --> 00:02:47,099
just a handful of critical pieces and so it's,

00:02:47,099 --> 00:02:49,010
it's relatively simple to setup and it's pretty simple

00:02:49,010 --> 00:02:50,940
to use.

00:02:50,940 --> 00:02:53,550
And then the last one is cost. It costs

00:02:53,550 --> 00:02:56,099
me twenty dollars a month for my development machine

00:02:56,099 --> 00:03:00,209
in the cloud. I'm hosting it on DigitalOcean, which

00:03:00,209 --> 00:03:02,840
means that I get two gigs of ram, forty

00:03:02,840 --> 00:03:05,560
gigabytes of hard drive space, which is plenty for

00:03:05,560 --> 00:03:08,459
my development work. And it costs me twenty bucks

00:03:08,459 --> 00:03:09,739
a month.

00:03:09,739 --> 00:03:12,659
And they actually have solid state drives, so it's

00:03:12,659 --> 00:03:15,440
reasonably fast.

00:03:15,440 --> 00:03:17,450
One other reason, like I said before, is you

00:03:17,450 --> 00:03:19,310
can do it on the iPad. Now, this is

00:03:19,310 --> 00:03:23,800
an iPad first generation, so it doesn't do Air-

00:03:23,800 --> 00:03:28,510
what is it? Airplay? Airplay mirroring. But my iPhone's

00:03:28,510 --> 00:03:31,159
an iPhone5 so it does. So let me go

00:03:31,159 --> 00:03:38,159
ahead and show you this really quickly.

00:03:38,220 --> 00:03:45,220
Now, I have, on my machine, a program called

00:03:49,970 --> 00:03:56,970
Reflector App. Turn on mirroring. Live demos. I've had

00:03:59,689 --> 00:04:01,519
several people tell me I'm brave for doing something

00:04:01,519 --> 00:04:04,939
like this.

00:04:04,939 --> 00:04:11,939
So you can see my phone. And the app

00:04:13,510 --> 00:04:15,970
that I use on my iOS devices is called

00:04:15,970 --> 00:04:22,970
prompt. So there, you can see it. So now

00:04:23,220 --> 00:04:25,370
I'm logged into my system. I can hide the

00:04:25,370 --> 00:04:29,130
keyboard. This is much nicer on my iPad. Can,

00:04:29,130 --> 00:04:33,080
can you all not read that? I can't read

00:04:33,080 --> 00:04:37,580
that.

00:04:37,580 --> 00:04:39,060
I'm not sure if I can bump the font

00:04:39,060 --> 00:04:42,470
size up. I can read it on my phone.

00:04:42,470 --> 00:04:46,740
But anyway, so.

00:04:46,740 --> 00:04:53,740
This isn't. Let's see, connect. Hang on. You've gotta

00:04:56,380 --> 00:05:00,000
love technology, right?

00:05:00,000 --> 00:05:01,750
So the only way to go, by the way,

00:05:01,750 --> 00:05:05,560
is to have this bluetooth keyboard, have a bluetooth

00:05:05,560 --> 00:05:08,320
keyboard. This case that I have for my iPad

00:05:08,320 --> 00:05:15,320
cost about twenty or thirty bucks on, on Amazon.

00:05:18,220 --> 00:05:21,310
So now we're back to Prompt. Boy, I wish

00:05:21,310 --> 00:05:28,310
I could zoom in or something. Nope, that's arrow

00:05:31,590 --> 00:05:36,169
keys. Anyway. So you can't read it, but it

00:05:36,169 --> 00:05:42,830
works. So.

00:05:42,830 --> 00:05:45,090
That's the directory I'm changing to. So now I'm

00:05:45,090 --> 00:05:49,080
in projects. So then I can list the directories.

00:05:49,080 --> 00:05:51,600
I can do whatever else I need to. And

00:05:51,600 --> 00:05:54,350
it works right here on my iPhone. Now typically

00:05:54,350 --> 00:05:55,740
I do this on the iPad. It's a lot

00:05:55,740 --> 00:05:57,660
easier to see. But you kind of get the

00:05:57,660 --> 00:05:59,340
idea that you can really do it from whatever

00:05:59,340 --> 00:06:01,539
device you have, as long as it allows you

00:06:01,539 --> 00:06:06,300
SSH into the other machine.

00:06:06,300 --> 00:06:13,300
Now, where'd I put my remote?

00:06:16,280 --> 00:06:18,580
So a lot of people ask, then, well what

00:06:18,580 --> 00:06:19,960
do you use? What do you do with it?

00:06:19,960 --> 00:06:21,900
So obviously the big deal is you have to

00:06:21,900 --> 00:06:25,120
be able SSH into the machine. SSH is good

00:06:25,120 --> 00:06:28,740
because it's encrypted, and there are some other things

00:06:28,740 --> 00:06:29,479
that you can do to make it a little

00:06:29,479 --> 00:06:32,520
bit more secure.

00:06:32,520 --> 00:06:35,289
I host on DigitalOcean. I was talking to my

00:06:35,289 --> 00:06:37,870
friend Evan, and he made sad faces at me

00:06:37,870 --> 00:06:39,419
because he works for RackSpace. You can do this

00:06:39,419 --> 00:06:43,870
anywhere. I just like DigitalOcean because it's inexpensive. I

00:06:43,870 --> 00:06:46,419
use Tmux. A lot of you out there who

00:06:46,419 --> 00:06:48,380
have been involved in some of the remote pairing

00:06:48,380 --> 00:06:50,919
discussions out there, you probably know what Tmux is.

00:06:50,919 --> 00:06:53,060
And I'll talk through these a little bit more.

00:06:53,060 --> 00:06:55,210
I, I like Emacs. You can do this with

00:06:55,210 --> 00:06:56,300
Vim. I know a lot of people who do

00:06:56,300 --> 00:06:58,789
it with Vim. And Chef is what I use

00:06:58,789 --> 00:07:00,020
to set it up.

00:07:00,020 --> 00:07:04,039
So let's talk about SSH for a minute. I

00:07:04,039 --> 00:07:06,380
just use an SSH Config. So all I have

00:07:06,380 --> 00:07:08,009
to do is SSH the name of the machine

00:07:08,009 --> 00:07:11,060
and then it knows which public/private key to use.

00:07:11,060 --> 00:07:13,270
It knows what the username is. It knows what

00:07:13,270 --> 00:07:16,069
the IP address is. And so, it just kind

00:07:16,069 --> 00:07:18,910
of works. There's nothing else to it. It's kind

00:07:18,910 --> 00:07:21,910
of like a shortcut for your SSH.

00:07:21,910 --> 00:07:24,020
And then you can setup a public/private key for

00:07:24,020 --> 00:07:26,889
each machine. You can set one up that you

00:07:26,889 --> 00:07:29,949
just use everywhere, and however it works is, is

00:07:29,949 --> 00:07:33,050
really up to you. So it's, it's really handy

00:07:33,050 --> 00:07:36,620
that way.

00:07:36,620 --> 00:07:39,190
DigitalOcean is a VPS service. So you just pay

00:07:39,190 --> 00:07:42,630
for the virtual private server. Like I said, they

00:07:42,630 --> 00:07:46,370
use SSH, solid-state hard drives, and I use the

00:07:46,370 --> 00:07:48,699
two gigabyte version and that seems to work really

00:07:48,699 --> 00:07:49,690
nicely.

00:07:49,690 --> 00:07:52,280
I am looking into how to use their API

00:07:52,280 --> 00:07:54,660
to just provision the server. But as it works

00:07:54,660 --> 00:07:56,639
right now, I go in, I tell them I

00:07:56,639 --> 00:07:58,620
want a new server. I get the email back

00:07:58,620 --> 00:08:01,389
with the root password and then I login and

00:08:01,389 --> 00:08:04,139
setup Chef.

00:08:04,139 --> 00:08:09,440
Tmux is also really nice. Now I use Tmux

00:08:09,440 --> 00:08:12,190
for a variety of reasons. The main reason is,

00:08:12,190 --> 00:08:15,780
is that with Tmux, if you setup a session,

00:08:15,780 --> 00:08:18,150
and you work in it for awhile and then

00:08:18,150 --> 00:08:20,370
you have to go do something else, Tmux will

00:08:20,370 --> 00:08:22,080
remember your session, so when you come back you

00:08:22,080 --> 00:08:24,169
just join that same session and you can pick

00:08:24,169 --> 00:08:26,840
up right where you left off.

00:08:26,840 --> 00:08:29,410
It's also really handy for pairing, because, again, multiple

00:08:29,410 --> 00:08:32,349
machines can connect to the same session. And so

00:08:32,349 --> 00:08:34,969
with my subcontractors, they just login to the guest

00:08:34,969 --> 00:08:38,250
account on my machine. They join the Tmux session.

00:08:38,250 --> 00:08:39,789
You have to make sure you setup the permissions

00:08:39,789 --> 00:08:43,260
so that they can see the socket file. And

00:08:43,260 --> 00:08:46,190
then you're good to go.

00:08:46,190 --> 00:08:47,760
One other thing I really like is that you

00:08:47,760 --> 00:08:49,170
can set it up to split screen. You can

00:08:49,170 --> 00:08:52,820
do that with Emacs as well. But I found

00:08:52,820 --> 00:08:54,860
that it's a little more convenient with Tmux, and

00:08:54,860 --> 00:08:56,420
so a lot of times I'll have my code

00:08:56,420 --> 00:08:58,060
on one side and then tests on the other

00:08:58,060 --> 00:09:00,230
or my code on one side and have, like,

00:09:00,230 --> 00:09:02,310
Guard or something running on the other side.

00:09:02,310 --> 00:09:04,820
And, and Tmux allows you to do that. And

00:09:04,820 --> 00:09:06,490
the really cool thing is you can configure it

00:09:06,490 --> 00:09:08,410
to actually start all that stuff up when you

00:09:08,410 --> 00:09:12,160
get in. And, like I said, I mean it's

00:09:12,160 --> 00:09:15,220
so configurable that you can setup an environment, you

00:09:15,220 --> 00:09:17,130
can make it run, and then if you have

00:09:17,130 --> 00:09:20,399
to go to the coffee shop, or you're driving

00:09:20,399 --> 00:09:23,490
somewhere, going to users' group, and you connect from

00:09:23,490 --> 00:09:24,870
there, you can just pick up that session and

00:09:24,870 --> 00:09:28,490
you're right back where you left off.

00:09:28,490 --> 00:09:32,810
Emacs. I'm not gonna go into all of the

00:09:32,810 --> 00:09:36,010
details, Emacs versus Vim. I like them both. I

00:09:36,010 --> 00:09:40,040
just like Emacs a little bit better. But it's,

00:09:40,040 --> 00:09:42,890
it's very configurable. You can program Emacs lisp to

00:09:42,890 --> 00:09:45,500
make it do whatever you want. It's text-based, which

00:09:45,500 --> 00:09:49,670
is what you need for an SSH thing. And

00:09:49,670 --> 00:09:54,550
you have a gazillion plugins.

00:09:54,550 --> 00:09:56,410
One other thing that I've, I've been able to

00:09:56,410 --> 00:09:58,720
work through with this, I have all my dotfiles,

00:09:58,720 --> 00:10:01,560
so like your dot bash rc and all of

00:10:01,560 --> 00:10:04,160
your setup stuff for all of your different scripts

00:10:04,160 --> 00:10:06,660
and things, all of that's in GitHub. I'm looking

00:10:06,660 --> 00:10:09,720
to move all this into Chef, with templates for

00:10:09,720 --> 00:10:12,050
files, but I haven't done that yet. So for

00:10:12,050 --> 00:10:13,940
right now I just do a GitPull and then

00:10:13,940 --> 00:10:16,140
I have an install script that puts everything where

00:10:16,140 --> 00:10:18,209
it goes.

00:10:18,209 --> 00:10:21,700
I also setup an SSH key with Chef. It's

00:10:21,700 --> 00:10:23,480
just part of the setup. It generates a new

00:10:23,480 --> 00:10:25,570
key. And that way, each machine has its own

00:10:25,570 --> 00:10:27,200
key and I can just disable it when I

00:10:27,200 --> 00:10:30,390
need to.

00:10:30,390 --> 00:10:34,250
Deployments are real nice with GitHub, or working with

00:10:34,250 --> 00:10:37,029
GitHub, because all of that stuff is running out

00:10:37,029 --> 00:10:39,370
there instead of on my local machine. So if

00:10:39,370 --> 00:10:41,470
I'm in any kind of a position where I

00:10:41,470 --> 00:10:44,850
have bandwidth constraints, like, for example, if I'm running

00:10:44,850 --> 00:10:47,310
off of the wifi on my phone, then it's

00:10:47,310 --> 00:10:50,060
not that much of an issue, because it pulls

00:10:50,060 --> 00:10:51,760
it all down, it connects to the other machine.

00:10:51,760 --> 00:10:54,170
All of that stuff happens off of the, the

00:10:54,170 --> 00:10:59,230
network at the data center that I'm running from.

00:10:59,230 --> 00:11:01,930
And I put RVM on here. I didn't mean

00:11:01,930 --> 00:11:06,730
to. That should have been on Chef.

00:11:06,730 --> 00:11:10,709
So Chef is really nice for provisioning the machine.

00:11:10,709 --> 00:11:12,459
All you really have to do, once you have

00:11:12,459 --> 00:11:15,399
your Chef Recipe setup, which there's a little bit

00:11:15,399 --> 00:11:17,510
of a learning curve to Chef, but it's not

00:11:17,510 --> 00:11:20,600
terrible. But now that I have all of the

00:11:20,600 --> 00:11:22,230
recipes and things, I have a role for a

00:11:22,230 --> 00:11:25,589
development machine. And so that role lists all of

00:11:25,589 --> 00:11:27,800
the recipes and all the cookbooks that you need

00:11:27,800 --> 00:11:30,570
in order to setup a machine like this, and

00:11:30,570 --> 00:11:32,160
it's so, then all I have to do is

00:11:32,160 --> 00:11:34,209
Bootstrap the machine and then go onto the machine

00:11:34,209 --> 00:11:37,760
run Chef client, and it installs Ruby, it installs

00:11:37,760 --> 00:11:42,740
RVM, it installs Tmux, it installs Emacs.

00:11:42,740 --> 00:11:44,600
And I'm pretty much good to go. It sets

00:11:44,600 --> 00:11:47,490
up my user and generates that SSH, or the,

00:11:47,490 --> 00:11:50,730
yeah, the SSH key for GitHub. So I do

00:11:50,730 --> 00:11:53,350
have to copy that and send it to GitHub.

00:11:53,350 --> 00:11:54,660
But the rest of that's all done. It takes

00:11:54,660 --> 00:11:56,839
about five minutes for it to provision a new

00:11:56,839 --> 00:12:00,399
machine for me. And so if anything ever happens,

00:12:00,399 --> 00:12:02,410
you know, heaven forbid my machine gets compromised or

00:12:02,410 --> 00:12:05,110
something like that, then I can just shut it

00:12:05,110 --> 00:12:07,510
down, turn off the key. I don't have to

00:12:07,510 --> 00:12:11,050
worry about anybody getting into my GitHub account. And

00:12:11,050 --> 00:12:16,470
I have a new machine in like five minutes.

00:12:16,470 --> 00:12:19,149
So let's talk about security for a minute. This

00:12:19,149 --> 00:12:22,149
is something I get asked a lot. You have

00:12:22,149 --> 00:12:24,440
your machine in the cloud. What if you get

00:12:24,440 --> 00:12:27,880
hacked? For the most part, I learned my lesson.

00:12:27,880 --> 00:12:29,500
I used to host things on the same machine

00:12:29,500 --> 00:12:31,510
I was doing development on. That's generally not a

00:12:31,510 --> 00:12:35,320
good idea. Mainly because it provides a target for

00:12:35,320 --> 00:12:39,519
people to hit, and it's your development environment as

00:12:39,519 --> 00:12:39,760
well.

00:12:39,760 --> 00:12:41,649
So since I have it setup to deploy client

00:12:41,649 --> 00:12:45,410
apps and things like that, it's not really ideal.

00:12:45,410 --> 00:12:48,380
So now it's its own machine, and the only

00:12:48,380 --> 00:12:53,200
thing that's consistently running is the SSH server. As

00:12:53,200 --> 00:12:55,220
far as outside access goes.

00:12:55,220 --> 00:12:57,630
And then if I need to run a Rails

00:12:57,630 --> 00:12:59,360
server or something like that, then I can just

00:12:59,360 --> 00:13:02,660
fire it up and I'm good to go.

00:13:02,660 --> 00:13:05,980
So some of the security measures that I take.

00:13:05,980 --> 00:13:11,220
I generally turn, turn on public/private authentication only, once

00:13:11,220 --> 00:13:13,290
I get it setup. So I typically have to

00:13:13,290 --> 00:13:17,240
login once with that root password that DigitalOcean sends

00:13:17,240 --> 00:13:21,769
me. And then after that I just turn that

00:13:21,769 --> 00:13:24,450
off so that you can't login with a password.

00:13:24,450 --> 00:13:25,839
The reason is that because a lot of the

00:13:25,839 --> 00:13:27,950
scripts out there will just try passwords and try

00:13:27,950 --> 00:13:30,100
and get into your system, and so even if

00:13:30,100 --> 00:13:31,839
they guess the right password that way, they still

00:13:31,839 --> 00:13:36,480
can't get in.

00:13:36,480 --> 00:13:37,480
Another thing that I do is I turn off

00:13:37,480 --> 00:13:41,209
the root SSH access, which is obviously turned on

00:13:41,209 --> 00:13:45,050
by default by DigitalOcean. And you don't want people

00:13:45,050 --> 00:13:47,709
hacking your root account. And they'll come, they'll hit

00:13:47,709 --> 00:13:50,800
port twenty-two, root is the user name, and then

00:13:50,800 --> 00:13:52,860
they'll just go for it.

00:13:52,860 --> 00:13:54,690
And so anybody who can pull a script off

00:13:54,690 --> 00:13:56,420
the internet can do that, so you just turn

00:13:56,420 --> 00:13:59,420
it off and then that way they have to

00:13:59,420 --> 00:14:00,810
get into your account and then figure out what

00:14:00,810 --> 00:14:02,579
your sudo password is.

00:14:02,579 --> 00:14:05,389
So it's just another layer of indirection.

00:14:05,389 --> 00:14:08,199
Setup a firewall. Again, the only thing that I

00:14:08,199 --> 00:14:11,380
really run, that I, that I need access to

00:14:11,380 --> 00:14:16,130
from outside is typically SSH. Sometimes database. But there

00:14:16,130 --> 00:14:17,649
are Chef recipes for that, if you want to

00:14:17,649 --> 00:14:22,350
turn those ports back on, or if you, you

00:14:22,350 --> 00:14:24,250
know, if all you're gonna do is SSH then

00:14:24,250 --> 00:14:26,449
you can turn that on. And then, you know,

00:14:26,449 --> 00:14:27,740
you just, I just open up a block of

00:14:27,740 --> 00:14:30,529
ports around 3000 so that I can turn on

00:14:30,529 --> 00:14:32,500
Rails server and get to it from my, my

00:14:32,500 --> 00:14:35,350
machine.

00:14:35,350 --> 00:14:36,800
One other thing I didn't put up here is

00:14:36,800 --> 00:14:39,750
that I usually change the SSH port to something

00:14:39,750 --> 00:14:42,589
other than twenty-two. And again, those folks, they pull

00:14:42,589 --> 00:14:45,029
out the script and they're just trying to blast

00:14:45,029 --> 00:14:48,959
any servers in a vlan that they can find.

00:14:48,959 --> 00:14:51,000
So you turn that off and then that can't

00:14:51,000 --> 00:14:52,190
get to it.

00:14:52,190 --> 00:14:59,190
I also use a tunneling service called ProXPN, and

00:14:59,579 --> 00:15:02,730
they are really, really awesome. And you can pay

00:15:02,730 --> 00:15:05,220
for different levels of access. But then essentially what

00:15:05,220 --> 00:15:06,860
it does is it sets up a tunnel from

00:15:06,860 --> 00:15:13,480
your machine to their machines, and it just, it

00:15:13,480 --> 00:15:16,010
just works out well that way.

00:15:16,010 --> 00:15:18,329
And finally I, I setup sudo, and I make

00:15:18,329 --> 00:15:22,339
that work. So I just realized for the camera

00:15:22,339 --> 00:15:23,940
people, I forgot to hit play on this thing.

00:15:23,940 --> 00:15:28,699
Is that a problem? OK.

00:15:28,699 --> 00:15:30,690
So I use sudo to control all the access

00:15:30,690 --> 00:15:34,389
there.

00:15:34,389 --> 00:15:36,440
Other than that, it just works. One thing that's

00:15:36,440 --> 00:15:38,709
nice about this setup is that I have a

00:15:38,709 --> 00:15:40,730
standing desk and a sitting, a place that I

00:15:40,730 --> 00:15:43,300
sit in my office. And so when I switch

00:15:43,300 --> 00:15:45,290
between the two I can just move seamlessly between

00:15:45,290 --> 00:15:50,290
the two. I can make things work. And yeah.

00:15:50,290 --> 00:15:52,180
So.

00:15:52,180 --> 00:15:54,269
So it's worked out really well for me, and

00:15:54,269 --> 00:15:57,910
I really like the flexibility that it offers. And

00:15:57,910 --> 00:16:00,290
I just realized that I blew through a, what

00:16:00,290 --> 00:16:01,889
I rehearsed to be a forty minute talk in

00:16:01,889 --> 00:16:03,320
ten minutes.

00:16:03,320 --> 00:16:09,310
Well, I feel bad, cause this went way faster

00:16:09,310 --> 00:16:15,259
than I thought it would. But. Yeah, the pics

00:16:15,259 --> 00:16:18,430
are right there.

00:16:18,430 --> 00:16:24,970
All right. So anyway. Well, thanks for coming. If

00:16:24,970 --> 00:16:30,190
you want Ruby Rogue stickers, come find me. And

00:16:30,190 --> 00:16:31,690
if you have any questions, come talk to me

00:16:31,690 --> 00:16:34,720
afterward as well. And yeah. Thanks for coming out

00:16:34,720 --> 00:16:35,390

YouTube URL: https://www.youtube.com/watch?v=PChy7noL-zw


