Title: Ruby Conf 2013 - Maintaining Sanity by Nathaniel Talbott
Publication date: 2020-01-27
Playlist: RubyConf 2013
Description: 
	I stumbled into being a maintainer on a big open source project pretty much by accident; I was contributing patches a lot and didn't want to be a nuisance, so I asked for commit privileges. At first I was just expediting my own patches, but then there were all these outstanding issues, and before I knew it I was a top committer on the project.

Being a maintainer is fun, but it can also be annoying and exhausting. I'll talk about the things that I've struggled with as a maintainer and the workflow I've developed over time to keep myself sane. There will be Git tips gleaned from kernel maintainers, ideas on encouraging contributions without feeling the need to accept every patch, straight talk on avoiding burnout, and most importantly I'll try to get across the joy that comes from being instrumental in moving a useful piece of software forward.

Not an open source maintainer and have no plans to ever be one? You should still come, since everything I talk about will also help you be a better open source contributor as well!

Help us caption & translate this video!

http://amara.org/v/FG5K/
Captions: 
	00:00:16,000 --> 00:00:19,800
NATHANIEL TALBOTT: All right. About time to get started.

00:00:19,820 --> 00:00:26,449
Thanks everybody for coming out on a Sunday afternoon.

00:00:26,449 --> 00:00:30,810
I knew one friend who did a fair amount of speaking,

00:00:30,810 --> 00:00:33,660
and he said he always told the conference organizers

00:00:33,660 --> 00:00:36,680
that he had to leave before the last,

00:00:36,680 --> 00:00:38,890
before the last day to make sure that they

00:00:38,890 --> 00:00:40,860
would schedule him earlier in the conference.

00:00:40,860 --> 00:00:43,320
So, but somebody has to go on the last day,

00:00:43,320 --> 00:00:46,810
and I appreciate you coming out for this talk.

00:00:46,810 --> 00:00:50,740
My name is Nathaniel Talbott. I work at a

00:00:50,740 --> 00:00:53,140
company called Spreely, and we do a lot of

00:00:53,140 --> 00:00:59,680
payment stuff. We process payments and make it really

00:00:59,680 --> 00:01:04,559
easy to work with multiple gateways, vault credit cards,

00:01:04,559 --> 00:01:08,189
this number is like ticking down in a way,

00:01:08,189 --> 00:01:12,060
like, I mean, no pressure.

00:01:12,060 --> 00:01:13,780
I'm gonna put it over there.

00:01:13,780 --> 00:01:18,469
So we process payments and do a lot of

00:01:18,469 --> 00:01:21,890
work with payments and I've been in the Ruby

00:01:21,890 --> 00:01:26,950
community for a long time. Way back when I

00:01:26,950 --> 00:01:30,020
made this little project called testUnit in the early

00:01:30,020 --> 00:01:33,850
days of Ruby, and that somehow ended up in

00:01:33,850 --> 00:01:38,899
Ruby itself. And thankfully somebody else took over maintaining

00:01:38,899 --> 00:01:43,409
that. And I'm one of those groupies that's been

00:01:43,409 --> 00:01:48,679
to every Ruby Conference. So that's, that's how much

00:01:48,679 --> 00:01:49,479
I'm into Ruby.

00:01:49,479 --> 00:01:52,579
But this thing happened as I was going along,

00:01:52,579 --> 00:01:55,229
and suddenly I found myself a maintainer of a

00:01:55,229 --> 00:02:01,459
rather large project. I don't, it's one of those

00:02:01,459 --> 00:02:04,539
things that I don't remember exactly how it happened.

00:02:04,539 --> 00:02:08,539
All the sudden. But, no, I was working along

00:02:08,539 --> 00:02:12,580
on the ActiveMerchant project. Who's used ActiveMerchant?

00:02:12,580 --> 00:02:15,280
OK, so actually a fair amount of the room.

00:02:15,280 --> 00:02:17,870
Which is awesome. And I was working along an

00:02:17,870 --> 00:02:21,580
ActiveMerchant project. Spreely uses ActiveMerchant a lot. A lot

00:02:21,580 --> 00:02:24,510
of our functionality is built around it. And I

00:02:24,510 --> 00:02:29,760
was committing, I was doing pull requests and generally

00:02:29,760 --> 00:02:34,209
the, like, I was sort of insistent enough that

00:02:34,209 --> 00:02:36,260
my pull requests were getting merged. But there was

00:02:36,260 --> 00:02:39,939
like five pages of old issues and pull requests,

00:02:39,939 --> 00:02:42,260
or more, and it just started to bug me

00:02:42,260 --> 00:02:44,129
that they were all there, and I didn't want

00:02:44,129 --> 00:02:48,159
to wait for people to, for the current maintainers

00:02:48,159 --> 00:02:51,090
of ActiveMerchant to merge my stuff.

00:02:51,090 --> 00:02:53,120
I'm like, hey guys, maybe you guys could just

00:02:53,120 --> 00:02:54,489
give me commit privileges and then I could take

00:02:54,489 --> 00:02:58,480
care of my own stuff. And then I got

00:02:58,480 --> 00:03:00,569
commit privileges. Then I got annoyed that there were

00:03:00,569 --> 00:03:02,659
so many things in the issue tracker and I

00:03:02,659 --> 00:03:05,019
started actually dealing with other peoples' issues, and all

00:03:05,019 --> 00:03:09,379
of the sudden I was a maintainer of ActiveMerchant.

00:03:09,379 --> 00:03:11,439
And one of the primary maintainers.

00:03:11,439 --> 00:03:15,000
And I didn't realize it until Matz's keynote, but

00:03:15,000 --> 00:03:19,150
I had become a garbage collector. Which is actually

00:03:19,150 --> 00:03:22,959
pretty awesome. And we're gonna talk about that a

00:03:22,959 --> 00:03:26,599
bunch, and why being a garbage collector is actually

00:03:26,599 --> 00:03:27,390
pretty cool.

00:03:27,390 --> 00:03:31,109
But, before we get into that, you might be

00:03:31,109 --> 00:03:34,189
saying to yourself, well, Nathaniel you're gonna talk about

00:03:34,189 --> 00:03:35,439
how to be a good maintainer, but what if

00:03:35,439 --> 00:03:39,620
I'm not a maintainer? Well, the thing is, understanding

00:03:39,620 --> 00:03:41,790
the issues that the maintainer has to deal with,

00:03:41,790 --> 00:03:45,780
the, the things that they run into as they're

00:03:45,780 --> 00:03:48,060
taking in contributions and trying to maintain a project

00:03:48,060 --> 00:03:49,810
will make you a better contributor.

00:03:49,810 --> 00:03:52,840
So even if you're not a maintainer, you can

00:03:52,840 --> 00:03:56,569
be a better contributor by understanding these things. And

00:03:56,569 --> 00:03:58,519
being a better contributor means it's more likely that

00:03:58,519 --> 00:04:02,769
your patches and the things, your issues get resolved.

00:04:02,769 --> 00:04:04,400
And I don't know about you, but when I

00:04:04,400 --> 00:04:07,310
go to the trouble of submitting something to an

00:04:07,310 --> 00:04:10,200
opensource project, it's really nice when something actually gets

00:04:10,200 --> 00:04:12,540
done with it. And so if you understand what

00:04:12,540 --> 00:04:14,590
maintainers are dealing with, you're much more likely to

00:04:14,590 --> 00:04:16,509
get your stuff merged.

00:04:16,509 --> 00:04:18,359
And also, you could be like me and just

00:04:18,359 --> 00:04:20,220
be going along, and all the sudden, you're like,

00:04:20,220 --> 00:04:22,520
what happened? And you're the maintainer on a project.

00:04:22,520 --> 00:04:25,199
So this could happen to you too. So listen

00:04:25,199 --> 00:04:27,229
up.

00:04:27,229 --> 00:04:31,199
Now, one of the things about becoming an opensource

00:04:31,199 --> 00:04:33,490
maintainer is you didn't, like, for me, I didn't

00:04:33,490 --> 00:04:36,069
think about, oh, OK, this is a big life

00:04:36,069 --> 00:04:39,220
decision and I really need to think this through.

00:04:39,220 --> 00:04:42,060
What does it mean to be a maintainer? And

00:04:42,060 --> 00:04:43,620
actually putting this talk together was a really great

00:04:43,620 --> 00:04:48,120
opportunity to think about, what is a maintainer's job?

00:04:48,120 --> 00:04:51,069
What is it, as an opensource maintainer, that you're

00:04:51,069 --> 00:04:54,210
trying to do? What are your responsibilities? What makes

00:04:54,210 --> 00:04:55,750
you effective.

00:04:55,750 --> 00:04:57,789
So let me just go through a few things

00:04:57,789 --> 00:04:59,150
here.

00:04:59,150 --> 00:05:01,150
First of all, I think it's a maintainer's job,

00:05:01,150 --> 00:05:05,270
every maintainer's job, to maximize the contributions to their

00:05:05,270 --> 00:05:12,270
projects. Opensource works because many eyes make for small

00:05:12,759 --> 00:05:16,009
bugs. And the more people that we can bring

00:05:16,009 --> 00:05:19,250
in and, the more contributions and the more contributors

00:05:19,250 --> 00:05:21,370
we can get involved, the better our projects will

00:05:21,370 --> 00:05:22,620
be.

00:05:22,620 --> 00:05:25,440
However, that has to be balanced with the second

00:05:25,440 --> 00:05:27,400
job of a maintainer, and that's the ensure that

00:05:27,400 --> 00:05:31,380
the code improves over time. It's not enough to

00:05:31,380 --> 00:05:33,840
just say, oh great, another patch, let me hit

00:05:33,840 --> 00:05:37,190
that merge button. Fantastic! Another patch, hit the merge

00:05:37,190 --> 00:05:39,160
button. Because before long you've got a big bloated

00:05:39,160 --> 00:05:39,460
mess.

00:05:39,460 --> 00:05:41,380
Cause there's a lot of different forces that are

00:05:41,380 --> 00:05:45,500
coming to play on your project, and it's the

00:05:45,500 --> 00:05:48,460
maintainer's job to ensure that that code gets better

00:05:48,460 --> 00:05:52,800
over time and isn't just - you don't count

00:05:52,800 --> 00:05:55,879
as a maintainer if you just merge every patch.

00:05:55,879 --> 00:05:57,620
You've got to, your job is to make sure

00:05:57,620 --> 00:05:59,960
that it gets better. Because you are in context

00:05:59,960 --> 00:06:02,259
to that project.

00:06:02,259 --> 00:06:06,930
Thirdly, I think that it's a maintainer's job to

00:06:06,930 --> 00:06:10,229
ensure that the users of their opensource project are

00:06:10,229 --> 00:06:13,569
happy. And it's really important to understand that this

00:06:13,569 --> 00:06:18,750
isn't happy contributors. This is happy users. Because opensource

00:06:18,750 --> 00:06:22,150
is just like anything else that takes in input

00:06:22,150 --> 00:06:23,030
from a crowd of people.

00:06:23,030 --> 00:06:24,620
And that is you'll have ten percent of people

00:06:24,620 --> 00:06:27,150
who actually contribute stuff back, and you've got this

00:06:27,150 --> 00:06:29,660
great, a mass of people who are using your

00:06:29,660 --> 00:06:31,389
code, you don't even know about, you've never heard

00:06:31,389 --> 00:06:33,770
about them.

00:06:33,770 --> 00:06:36,300
And you've got to be thinking of them, not

00:06:36,300 --> 00:06:38,660
just of the people who are coming in and

00:06:38,660 --> 00:06:40,919
contributing to your project. You've got to balance that

00:06:40,919 --> 00:06:43,349
out and, and ensure that everyone that's using your

00:06:43,349 --> 00:06:48,610
code and the project you're maintaining is happy.

00:06:48,610 --> 00:06:50,520
And then fourth, I think it's really important, and

00:06:50,520 --> 00:06:52,669
it's part of an opensource maintainer's job, to actually

00:06:52,669 --> 00:06:57,440
enjoy the process of maintaining opensource. Because it really

00:06:57,440 --> 00:07:01,180
stinks when there's a good maintainer of an opensource

00:07:01,180 --> 00:07:03,819
project and then they quit because they get burned

00:07:03,819 --> 00:07:06,009
out. And it does the community no good for

00:07:06,009 --> 00:07:07,090
that to happen.

00:07:07,090 --> 00:07:10,520
So, but we, I, as an opensource maintainer, am

00:07:10,520 --> 00:07:14,659
responsible for managing that and making sure that I

00:07:14,659 --> 00:07:17,389
can actually do this for the long haul. So

00:07:17,389 --> 00:07:20,690
this is definitely a, a critical piece of my

00:07:20,690 --> 00:07:22,210
job.

00:07:22,210 --> 00:07:26,729
So here's the thing. This is hard.

00:07:26,729 --> 00:07:29,949
It's not something that you're gonna go and take

00:07:29,949 --> 00:07:33,569
a course on in school. It's not something even,

00:07:33,569 --> 00:07:35,789
like, you can go and talk to open, other

00:07:35,789 --> 00:07:39,159
opensource maintainers and they'll kind of throw some anecdotes

00:07:39,159 --> 00:07:44,039
at you, and that's great, but it's hard, it,

00:07:44,039 --> 00:07:46,449
it's context dependent, and so what I want to

00:07:46,449 --> 00:07:49,080
try to do today is say, OK, great, now

00:07:49,080 --> 00:07:52,000
you're a maintainer, so as you're starting to do

00:07:52,000 --> 00:07:55,620
your job, what are the hurdles that are gonna

00:07:55,620 --> 00:07:57,210
pop up in front of you? What are the

00:07:57,210 --> 00:08:00,120
things that you're gonna run into, and what are

00:08:00,120 --> 00:08:02,129
the things that I've learned that have helped me

00:08:02,129 --> 00:08:03,650
make me more effective, and I hope will make

00:08:03,650 --> 00:08:05,990
you more effective as an opensource maintainer.

00:08:05,990 --> 00:08:08,639
Now, I'm gonna make some assumptions. First of all

00:08:08,639 --> 00:08:10,889
- and these are assumptions for the sake of

00:08:10,889 --> 00:08:14,819
the narratives, not assumptions that you can't tweak and

00:08:14,819 --> 00:08:16,639
apply to your own situation. I'm gonna assume that

00:08:16,639 --> 00:08:18,970
you're a maintainer right now. So everybody in the

00:08:18,970 --> 00:08:21,449
room, you're now an opensource maintainer, whether you are

00:08:21,449 --> 00:08:22,889
or not.

00:08:22,889 --> 00:08:27,229
I'm going to assume that you've created a project

00:08:27,229 --> 00:08:30,729
and that that project actually has users. I know

00:08:30,729 --> 00:08:33,409
that we probably all have those projects we pushed

00:08:33,409 --> 00:08:37,279
up to our GitHub repos, public repos, and we're

00:08:37,279 --> 00:08:40,940
like opensource, and it's us using them. That's fine.

00:08:40,940 --> 00:08:42,229
I mean we all do that. We all have

00:08:42,229 --> 00:08:44,450
those repos. But that's not really what I'm talking

00:08:44,450 --> 00:08:44,680
about.

00:08:44,680 --> 00:08:46,980
I'm talking about projects that actually have some users

00:08:46,980 --> 00:08:49,800
and, and a few contributions rolling in at least.

00:08:49,800 --> 00:08:51,560
And I'm also gonna make the assumption that you're

00:08:51,560 --> 00:08:55,140
using Git and GitHub. I'm actually a little curious.

00:08:55,140 --> 00:08:58,670
Who in the room today maintains an opensource project

00:08:58,670 --> 00:09:02,060
that's not on GitHub? It's OK, you can admit

00:09:02,060 --> 00:09:04,329
it. So, like, two people.

00:09:04,329 --> 00:09:07,160
And just for context, who maintains an opensource project

00:09:07,160 --> 00:09:11,880
on GitHub? OK. Yeah. So I'm gonna make that

00:09:11,880 --> 00:09:15,010
assumption. I think these things are adaptable. Other than

00:09:15,010 --> 00:09:17,390
a few of the more technical details that I'm

00:09:17,390 --> 00:09:19,760
gonna get into the middle where we talk a

00:09:19,760 --> 00:09:21,980
little bit more about git and how it enables

00:09:21,980 --> 00:09:23,970
maintainers to do their job.

00:09:23,970 --> 00:09:27,110
So let's start talking through the issues. This talk

00:09:27,110 --> 00:09:29,000
is kind of a little bit of a sandwich.

00:09:29,000 --> 00:09:32,240
We've got sort of people stuff, and then we've

00:09:32,240 --> 00:09:34,860
got, is the bread on one side, we've got

00:09:34,860 --> 00:09:37,579
meaty technical issues, a few meaty technical things in

00:09:37,579 --> 00:09:39,250
the middle, and then we've got the, some more

00:09:39,250 --> 00:09:41,810
people stuff on the bread on the other side.

00:09:41,810 --> 00:09:43,279
So here we go.

00:09:43,279 --> 00:09:45,310
So the first thing that I ran into when

00:09:45,310 --> 00:09:47,459
I started maintaining ActiveMerchant was the big pile o'

00:09:47,459 --> 00:09:51,000
issues problem. And you'll see this on opensource project

00:09:51,000 --> 00:09:53,709
after opensource project as you go out and look

00:09:53,709 --> 00:09:55,350
at them.

00:09:55,350 --> 00:09:58,149
Issue trackers that are chock full of like five

00:09:58,149 --> 00:10:01,029
to ten to twenty to, like, so many pages

00:10:01,029 --> 00:10:03,350
of issues. And a lot of them are like,

00:10:03,350 --> 00:10:05,660
the issues are like three years old, and you're

00:10:05,660 --> 00:10:09,350
like, what is this even? I don't even know.

00:10:09,350 --> 00:10:12,779
And this was, this is, I think, especially common

00:10:12,779 --> 00:10:15,440
if you are becoming a maintainer on an existing

00:10:15,440 --> 00:10:17,779
project, which was my scenario when I started maintaining

00:10:17,779 --> 00:10:22,680
ActiveMerchant. It, it had maintainers, and they were, they

00:10:22,680 --> 00:10:24,779
were making sure that it continued to work, but

00:10:24,779 --> 00:10:29,209
they weren't really spending much time integrating things that

00:10:29,209 --> 00:10:33,910
contributors were bringing in and, and gardening and taking

00:10:33,910 --> 00:10:36,600
out the trash, as it were.

00:10:36,600 --> 00:10:41,269
And so there's a really simple solution to this.

00:10:41,269 --> 00:10:46,070
And it is triage without mercy. Like, when it

00:10:46,070 --> 00:10:48,920
comes down to it, as an opensource maintainer, I

00:10:48,920 --> 00:10:53,709
have so much time. And if there's an issue

00:10:53,709 --> 00:10:55,420
that's been there for three years and no one

00:10:55,420 --> 00:10:57,810
else has even come in and commented on it,

00:10:57,810 --> 00:11:01,320
that sucker's dead. Like, why, I wouldn't spend another

00:11:01,320 --> 00:11:03,260
minute on him. Close it out with a nice

00:11:03,260 --> 00:11:05,519
comment. Say, hey, thanks for this, if you have

00:11:05,519 --> 00:11:07,850
anything else - and they're probably going, I don't

00:11:07,850 --> 00:11:10,139
even remember submitting that issue.

00:11:10,139 --> 00:11:13,310
But you close it out and so really fast,

00:11:13,310 --> 00:11:16,680
if you triage really aggressively, especially in a project

00:11:16,680 --> 00:11:19,040
that's built up a lot of this history, you

00:11:19,040 --> 00:11:22,279
can, you can quickly slim that list down to

00:11:22,279 --> 00:11:24,350
a manageable list of things that are really active

00:11:24,350 --> 00:11:29,910
and really, really need attention.

00:11:29,910 --> 00:11:31,589
The second thing that I've seen as a big

00:11:31,589 --> 00:11:38,279
problem is low quality contributions. And a, I find

00:11:38,279 --> 00:11:44,610
that, well, this isn't necessarily low quality coders. Sometimes

00:11:44,610 --> 00:11:47,620
it's just people not understanding the project. And so

00:11:47,620 --> 00:11:51,040
my first solution is just to take responsibility for

00:11:51,040 --> 00:11:53,100
it. I'm the maintainer of the project. I'm in

00:11:53,100 --> 00:11:56,279
the context of the project, you know, several times

00:11:56,279 --> 00:11:59,589
a week. I know what the code standards are.

00:11:59,589 --> 00:12:01,589
I know what the design patterns are. I know

00:12:01,589 --> 00:12:03,290
how to interact with the project. I've got to

00:12:03,290 --> 00:12:05,970
take responsibility for the contributions that are coming in.

00:12:05,970 --> 00:12:07,690
And if all of them are crappy, I need

00:12:07,690 --> 00:12:10,199
to take responsibility for the fact that that might

00:12:10,199 --> 00:12:12,070
be my fault. I might need to put up

00:12:12,070 --> 00:12:14,920
some contributing guidelines. I might need to clean up

00:12:14,920 --> 00:12:18,260
the code so that, you know, the, it, it's

00:12:18,260 --> 00:12:20,410
more obvious how to contribute to it, or it

00:12:20,410 --> 00:12:23,269
engenders better code and better contributions.

00:12:23,269 --> 00:12:27,760
I've got to take responsibility for the fact that,

00:12:27,760 --> 00:12:30,149
if these contributions are coming in. And also take

00:12:30,149 --> 00:12:32,940
responsibility for the fact of, if it's a two-line

00:12:32,940 --> 00:12:36,480
change and it's slightly crappy, who cares? Like, I'll

00:12:36,480 --> 00:12:40,010
just fix it. Like it's not, like, it solves

00:12:40,010 --> 00:12:42,000
a problem. I can take it in, make a

00:12:42,000 --> 00:12:44,399
tweak and change it.

00:12:44,399 --> 00:12:46,320
And that kind of gets to the second thing

00:12:46,320 --> 00:12:50,029
that I do to help manage low-quality contributions, and

00:12:50,029 --> 00:12:52,889
that is, I rewrite history all the time when

00:12:52,889 --> 00:12:55,610
I'm taking in contributions. So I'll get a pile

00:12:55,610 --> 00:12:58,290
of commits of like four commits, and I look

00:12:58,290 --> 00:13:01,070
at the diff and it's like one-line change. cause

00:13:01,070 --> 00:13:04,170
they like tried something and then, no, that didn't

00:13:04,170 --> 00:13:06,750
work. And let me try this, and oh, this

00:13:06,750 --> 00:13:07,570
is what it is.

00:13:07,570 --> 00:13:11,180
Well, I mean, that's cool, but I don't need

00:13:11,180 --> 00:13:14,490
all those commits in my history, and so I

00:13:14,490 --> 00:13:16,980
leverage git, regularly, and we'll talk about that a

00:13:16,980 --> 00:13:19,620
little more later, to rewrite history and just make

00:13:19,620 --> 00:13:21,019
it look good. And it's cool because I get

00:13:21,019 --> 00:13:23,670
to make the contributor look good, cause it actually,

00:13:23,670 --> 00:13:26,180
like, squashes all their stuff down. I change and

00:13:26,180 --> 00:13:28,370
fix some stuff. it goes in with their name

00:13:28,370 --> 00:13:31,720
on it and just says contr, committed by me.

00:13:31,720 --> 00:13:33,170
And I don't need credit for that. I just

00:13:33,170 --> 00:13:37,300
want clean code.

00:13:37,300 --> 00:13:40,110
Communicate expectations. I covered this earlier. Have a, have

00:13:40,110 --> 00:13:44,050
a contributing guideline. If a low-quality contribution comes in,

00:13:44,050 --> 00:13:46,860
just clearly say, hey, here's the issue, can you

00:13:46,860 --> 00:13:49,329
correct this? And that kind of goes to making

00:13:49,329 --> 00:13:52,339
it their problem, if it is.

00:13:52,339 --> 00:13:55,839
If, if I get something that's really like, like

00:13:55,839 --> 00:13:58,850
for instance, sometimes I'll get a issue, so it's

00:13:58,850 --> 00:14:02,389
the, it's the hey, this thing doesn't work. I'm

00:14:02,389 --> 00:14:04,320
not actually gonna tell you what doesn't work and

00:14:04,320 --> 00:14:05,820
I'm not gonna give you any details as to

00:14:05,820 --> 00:14:07,769
how it doesn't work, but could you please fix

00:14:07,769 --> 00:14:10,529
it for me? Well, no. But if you give

00:14:10,529 --> 00:14:12,300
me more details, so I'll push it back on

00:14:12,300 --> 00:14:14,380
them and say give me more information. Tell me

00:14:14,380 --> 00:14:16,860
more. And I'll try to help you. BUt I,

00:14:16,860 --> 00:14:19,050
I have no trouble pushing it back, you know,

00:14:19,050 --> 00:14:21,139
if it comes in and it's a big change

00:14:21,139 --> 00:14:23,160
that has no tests, I'm gonna say hey, can

00:14:23,160 --> 00:14:25,410
you give me some tests for this?

00:14:25,410 --> 00:14:28,000
If I can't, if I've tried, like, five times

00:14:28,000 --> 00:14:30,060
to merge it in and there's so many conflicts

00:14:30,060 --> 00:14:31,470
I can't figure out how to do it, hey,

00:14:31,470 --> 00:14:34,980
look, can you get this cleanly applying to master?

00:14:34,980 --> 00:14:38,800
So it, there's no trouble pushing it back to

00:14:38,800 --> 00:14:40,620
people.

00:14:40,620 --> 00:14:44,509
The next problem, and, this is a really good

00:14:44,509 --> 00:14:48,120
problem to have, you want this problem. But that's

00:14:48,120 --> 00:14:50,509
the overwhelming volume. When you've really got a lot

00:14:50,509 --> 00:14:55,399
of changes coming in really fast. And you're trying

00:14:55,399 --> 00:14:57,459
to keep your issue tracker from ending up at

00:14:57,459 --> 00:15:00,050
ten pages.

00:15:00,050 --> 00:15:02,699
And you know, the first, the first thing I

00:15:02,699 --> 00:15:04,949
do for that is I adapt effort to volume.

00:15:04,949 --> 00:15:08,880
So some months, ActiveMerchant gets, like, you know, three

00:15:08,880 --> 00:15:11,920
contributions. And some months it gets twenty. And depending

00:15:11,920 --> 00:15:13,480
on which of those months it is and how

00:15:13,480 --> 00:15:16,110
much time I have to spend, I will, I

00:15:16,110 --> 00:15:19,279
will push things back onto contributors more if there's

00:15:19,279 --> 00:15:20,320
more stuff to do.

00:15:20,320 --> 00:15:22,339
Like, normal, I might be like, oh I could

00:15:22,339 --> 00:15:24,079
write a test for this, but I've got like

00:15:24,079 --> 00:15:26,699
ten other patches that might be more complete that

00:15:26,699 --> 00:15:28,610
I need to spend time on. Hey, contributor, can

00:15:28,610 --> 00:15:30,480
you, can you give me more on this.

00:15:30,480 --> 00:15:33,509
So really just adapting it, recognizing that it's not

00:15:33,509 --> 00:15:37,670
your responsibility to do everything. You're trying to, again,

00:15:37,670 --> 00:15:39,029
going back to the goal, is you're trying to

00:15:39,029 --> 00:15:41,420
maximize the contributions you can take in. And that

00:15:41,420 --> 00:15:44,600
means doing what you can.

00:15:44,600 --> 00:15:47,269
And, of course, you can always add contributors. Like,

00:15:47,269 --> 00:15:48,980
look for those people who are coming in over

00:15:48,980 --> 00:15:51,480
and over again with high quality stuff. Cause if

00:15:51,480 --> 00:15:53,759
somebody comes back multiple times, it generally means that

00:15:53,759 --> 00:15:56,970
they're using it for something really actively, and they're

00:15:56,970 --> 00:15:59,000
gonna have, they're gonna have the context and they're

00:15:59,000 --> 00:16:00,459
gonna be able to contribute to it. And don't

00:16:00,459 --> 00:16:03,040
hesitate to add contributors once you see high quality

00:16:03,040 --> 00:16:06,040
contributions from them.

00:16:06,040 --> 00:16:09,970
Now, what about when it's not so much the

00:16:09,970 --> 00:16:12,139
volume, even, it's just that you've got a lot

00:16:12,139 --> 00:16:16,540
of stuff to do, opensource or otherwise? And, but

00:16:16,540 --> 00:16:22,259
there are also contributions to take in. This is,

00:16:22,259 --> 00:16:25,279
this is an ongoing struggle, I think for every

00:16:25,279 --> 00:16:28,880
opensource maintainer. Cause we typically have day jobs and

00:16:28,880 --> 00:16:34,050
we, we have a limited time to do opensource

00:16:34,050 --> 00:16:38,170
end, and I know, for me, there are definitely

00:16:38,170 --> 00:16:40,319
- I feel sorry sometimes, cause I get this,

00:16:40,319 --> 00:16:42,329
I get this chance and I go through and

00:16:42,329 --> 00:16:45,000
I add comments and ask for feedback and stuff,

00:16:45,000 --> 00:16:46,920
and then people are like, oh great, he's paying

00:16:46,920 --> 00:16:49,509
attention! And they come in and they're like, yeah,

00:16:49,509 --> 00:16:51,790
and I'm, and then like, ten days later, they're

00:16:51,790 --> 00:16:54,610
like, hey, are you still there? Did you forget

00:16:54,610 --> 00:16:56,459
about me? And I'm like, no, I'm coming back.

00:16:56,459 --> 00:16:57,329
I'm coming back.

00:16:57,329 --> 00:16:58,690
So the first thing that I try to do

00:16:58,690 --> 00:17:00,790
is try to have some focused time. It doesn't,

00:17:00,790 --> 00:17:02,029
there's some kinds of things you can do in

00:17:02,029 --> 00:17:05,120
terms of giving immediate feedback on patches, et cetera.

00:17:05,120 --> 00:17:07,410
But to actually merge, to actually get in and

00:17:07,410 --> 00:17:09,830
take in contributions, you gotta have focused time. For

00:17:09,830 --> 00:17:12,390
me, it's like, thirty, at least thirty minutes, an

00:17:12,390 --> 00:17:14,570
hour is better, of time when I can put

00:17:14,570 --> 00:17:16,670
my headphones on and be like, I've got some

00:17:16,670 --> 00:17:19,220
internet here and I'm just gonna look at patches.

00:17:19,220 --> 00:17:21,880
I'm gonna merge the ones that I can.

00:17:21,880 --> 00:17:23,700
And I put that together with a getting things

00:17:23,700 --> 00:17:28,920
done workflow. And just a really simplified one that

00:17:28,920 --> 00:17:32,280
allows me to process through things, make sure I'm

00:17:32,280 --> 00:17:36,940
making more progress, not getting hung up on things

00:17:36,940 --> 00:17:38,970
and, and really moving through things.

00:17:38,970 --> 00:17:41,730
So what I'll do is I'll hop into GitHub

00:17:41,730 --> 00:17:47,560
issues on GitHub, on the project, sort by updated.

00:17:47,560 --> 00:17:49,930
First, I really try to be really good about

00:17:49,930 --> 00:17:52,750
first in first out. So if you contri, if

00:17:52,750 --> 00:17:55,290
it's been, like, two weeks since I worked on

00:17:55,290 --> 00:17:57,110
stuff, I want the guy who submitted something two

00:17:57,110 --> 00:17:58,840
weeks ago to get feedback first.

00:17:58,840 --> 00:18:01,410
The guy who submitted something yesterday, I hope to

00:18:01,410 --> 00:18:03,860
get to you today, but you're gonna have to

00:18:03,860 --> 00:18:06,710
wait. I gotta, I gotta really respect the contributors

00:18:06,710 --> 00:18:08,410
who have been waiting longer.

00:18:08,410 --> 00:18:13,350
I do a quick review of the submitted info,

00:18:13,350 --> 00:18:17,050
and the diff on GitHub. And then I'm basically

00:18:17,050 --> 00:18:19,050
trying to figure out, look, is this something I

00:18:19,050 --> 00:18:21,680
can merge, like in five minutes? Does it look

00:18:21,680 --> 00:18:23,130
ready to go and I just need to load

00:18:23,130 --> 00:18:26,790
it up, right a README, or a changelog entry,

00:18:26,790 --> 00:18:30,460
and it's good? Is this gonna be a bigger

00:18:30,460 --> 00:18:30,560
contribution?

00:18:30,560 --> 00:18:33,970
Like, for ActiveMerchant, that to me is somebody added

00:18:33,970 --> 00:18:35,330
a gateway. When I need to add a whole

00:18:35,330 --> 00:18:38,010
new gateway, that's like a big process. That's gonna

00:18:38,010 --> 00:18:41,180
take me a half hour or forty five minutes.

00:18:41,180 --> 00:18:42,410
SO I want to go through and try to

00:18:42,410 --> 00:18:46,380
get the smaller fixes first. And then I'll queue

00:18:46,380 --> 00:18:49,660
it up, queu up those bigger things. And by

00:18:49,660 --> 00:18:51,500
queue it up I basically mean skip to the

00:18:51,500 --> 00:18:53,400
next thing, and then when I get to the

00:18:53,400 --> 00:18:55,460
bottom then I go back to the top again

00:18:55,460 --> 00:18:57,910
and start working on longer things, but I know

00:18:57,910 --> 00:19:01,130
I've knocked out the smaller stuff.

00:19:01,130 --> 00:19:04,100
Now the next thing, in terms of time management,

00:19:04,100 --> 00:19:07,110
that I've done that has been a huge help

00:19:07,110 --> 00:19:11,530
- like when I first started, I really sucked

00:19:11,530 --> 00:19:14,250
at being an opensource maintainer. Like, I was just

00:19:14,250 --> 00:19:19,690
spending so much time working, like, doing busywork. Doing

00:19:19,690 --> 00:19:21,780
stuff that I didn't need to be doing. But

00:19:21,780 --> 00:19:23,190
I didn't know I didn't need to be doing

00:19:23,190 --> 00:19:23,400
it.

00:19:23,400 --> 00:19:25,510
So the first thing is, hub is your friend.

00:19:25,510 --> 00:19:29,880
If you're using GitHub, hub is awesome. Who's used

00:19:29,880 --> 00:19:32,660
Hub? OK. If you haven't used HUb, like, even

00:19:32,660 --> 00:19:35,010
if you're just, like, you just work on private

00:19:35,010 --> 00:19:39,370
repos for your company, hub is amazing. It basically

00:19:39,370 --> 00:19:42,190
wraps the git command in all kinds of GitHub

00:19:42,190 --> 00:19:45,890
specific goodness. it allows you to clone a repo

00:19:45,890 --> 00:19:48,220
off of GitGub without having to figure out the

00:19:48,220 --> 00:19:52,290
whole url. You just like, ntalbott slash whatever and

00:19:52,290 --> 00:19:55,530
boom, it, it'll clone that for you.

00:19:55,530 --> 00:20:00,250
And the really cool part if it wraps the,

00:20:00,250 --> 00:20:05,000
so git am is what the linux kernel maintainers

00:20:05,000 --> 00:20:06,830
use to take a mailbox directory and pull the

00:20:06,830 --> 00:20:09,390
patches out of it and ply them.

00:20:09,390 --> 00:20:12,450
And hub wraps the git command to adapt that

00:20:12,450 --> 00:20:14,830
where you can pace, you can say git am

00:20:14,830 --> 00:20:18,950
and paste to GitHub url. Pull request url. And

00:20:18,950 --> 00:20:21,060
it'll apply that locally, just like it would apply

00:20:21,060 --> 00:20:23,120
a patch off of a mailing list.

00:20:23,120 --> 00:20:25,630
it's awesome. And then you can go in and

00:20:25,630 --> 00:20:27,800
edit it. You can rebase, et cetera. You don't

00:20:27,800 --> 00:20:30,820
have to like go and like add a branch

00:20:30,820 --> 00:20:33,070
for that pers, like that person's branch and try

00:20:33,070 --> 00:20:36,440
to muck around with it. It just takes in

00:20:36,440 --> 00:20:38,280
the stuff for their PR.

00:20:38,280 --> 00:20:40,970
So let me actually show this to you. Let's

00:20:40,970 --> 00:20:44,000
do a little live coding, which is always fun.

00:20:44,000 --> 00:20:46,910
We're gonna actually contri, like, take in a contribution

00:20:46,910 --> 00:20:51,900
and merge it for ActiveMerchant. So I've got a

00:20:51,900 --> 00:20:58,900
few here. I'm gonna, let's try, 896. So.

00:21:07,230 --> 00:21:11,470
So this is the ActiveMerchant GitHub repo. I'm gonna

00:21:11,470 --> 00:21:15,170
hop over here into issues, which of course includes

00:21:15,170 --> 00:21:17,920
pull requests. I'm actually gonna skip over a bunch

00:21:17,920 --> 00:21:19,680
of stuff cause there's a bunch of more involved

00:21:19,680 --> 00:21:23,530
stuff here that I need to work on later.

00:21:23,530 --> 00:21:30,530
Eight, which one was it? 896. Yeah, this one.

00:21:32,280 --> 00:21:34,880
So this is a really easy one. I like

00:21:34,880 --> 00:21:39,220
really easy, especially for live coding. SO basically all

00:21:39,220 --> 00:21:43,000
this does is fix some docs. Awesome. You know

00:21:43,000 --> 00:21:47,000
what, honestly, this is the one time when I

00:21:47,000 --> 00:21:49,210
will actually use the merge pull request button on

00:21:49,210 --> 00:21:52,480
GitHub. I do not usually use it, but this

00:21:52,480 --> 00:21:55,480
is the one time we're just gonna do that.

00:21:55,480 --> 00:21:56,530
Done.

00:21:56,530 --> 00:21:58,580
There you go my man.

00:21:58,580 --> 00:22:02,850
OK, I've got another one though. 898. I'm actually

00:22:02,850 --> 00:22:06,640
just gonna do this.

00:22:06,640 --> 00:22:11,250
OK, so somebody's contributed something for the Mercury Gateway.

00:22:11,250 --> 00:22:14,550
I'm loving they're, they're following the convention that we

00:22:14,550 --> 00:22:18,730
have in ActiveMerchant of referencing the Gateway.

00:22:18,730 --> 00:22:20,940
You'll notice I've already had interaction with him. I

00:22:20,940 --> 00:22:23,180
asked him to change something. He came back in

00:22:23,180 --> 00:22:26,010
and changed it, so we've got two commits in

00:22:26,010 --> 00:22:29,150
this pull request, which is great. We'll just go

00:22:29,150 --> 00:22:30,600
over and look at the diff real quick. He's

00:22:30,600 --> 00:22:35,500
basically added a, a store method and the backing

00:22:35,500 --> 00:22:37,740
code for that. He added a test, which is

00:22:37,740 --> 00:22:41,450
awesome.

00:22:41,450 --> 00:22:44,770
And so what I'm going to do is really

00:22:44,770 --> 00:22:48,320
cool. Oops, that's not what I want. GitHub, you

00:22:48,320 --> 00:22:53,670
broke the back button. OK, so check this out.

00:22:53,670 --> 00:22:55,200
So we're gonna go over here. I've already got

00:22:55,200 --> 00:22:57,720
Git- ActiveMerchant checked out. I'm actually gonna do a

00:22:57,720 --> 00:23:04,720
pull cause we just merged that thing. And now

00:23:04,900 --> 00:23:07,830
check this out. Git am, and I paste the

00:23:07,830 --> 00:23:13,910
pull request url, and it applies those two commits,

00:23:13,910 --> 00:23:17,800
right there on top of my master branch here.

00:23:17,800 --> 00:23:20,370
And then what we're gonna do is hop over,

00:23:20,370 --> 00:23:23,770
well first, we're gonna run rake and make sure

00:23:23,770 --> 00:23:30,770
our tests pass. Which I expect them too. No

00:23:31,170 --> 00:23:34,460
reason for them not.

00:23:34,460 --> 00:23:37,010
Sweet. All good.

00:23:37,010 --> 00:23:38,500
If you look at the git status, you'll notice

00:23:38,500 --> 00:23:40,650
there aren't any local changes. There's just the two

00:23:40,650 --> 00:23:43,680
commits from this, from this guy. I'm gonna go

00:23:43,680 --> 00:23:46,870
over and actually add something to the change log

00:23:46,870 --> 00:23:50,230
now. So this is another thing. I ask people

00:23:50,230 --> 00:23:52,540
who contribute to ActiveMerchant to actually not change the

00:23:52,540 --> 00:23:56,670
changelog. It turns into merge craziness, because everybody changes

00:23:56,670 --> 00:23:59,060
it and then it becomes this point of conflict

00:23:59,060 --> 00:24:01,180
whenever you're trying to merge in, especially if you're

00:24:01,180 --> 00:24:03,020
doing a bunch in a row. And so it

00:24:03,020 --> 00:24:04,950
works much better for me to just come in,

00:24:04,950 --> 00:24:07,160
make that change and then merge it into their

00:24:07,160 --> 00:24:07,610
change.

00:24:07,610 --> 00:24:09,610
So I'm actually just gonna go over here, since

00:24:09,610 --> 00:24:16,610
he has this awesome message already, and let's give

00:24:16,820 --> 00:24:21,720
him some credit here, Casey Dragon, you're awesome. And

00:24:21,720 --> 00:24:26,220
we're gonna save that and then I want to

00:24:26,220 --> 00:24:30,080
go over here. Now you'll notice I have another

00:24:30,080 --> 00:24:33,390
commit here, so I'm just gonna git ci dash

00:24:33,390 --> 00:24:38,870
a, it'll pop up my editor here. Oops.

00:24:38,870 --> 00:24:45,870
So I'm gonna add that and he had this

00:24:47,720 --> 00:24:54,720
nice comment here, too. Just take that in, paste

00:25:07,340 --> 00:25:08,500
it in here.

00:25:08,500 --> 00:25:10,580
K. Now, the other trick I'm gonna do here

00:25:10,580 --> 00:25:13,990
is I'm actually gonna add magic comment to close

00:25:13,990 --> 00:25:16,750
this out automatically. Because what's gonna happen is when

00:25:16,750 --> 00:25:19,190
I merge this in, because I'm gonna do a

00:25:19,190 --> 00:25:22,070
rebase, it's not going, GitHub won't know that I

00:25:22,070 --> 00:25:24,640
am actually merging that pull request. So I'm gonna

00:25:24,640 --> 00:25:29,240
put that there.

00:25:29,240 --> 00:25:31,960
So now if I go over here, you'll see

00:25:31,960 --> 00:25:33,550
I've got three commits. Well, I don't want three

00:25:33,550 --> 00:25:36,420
commits. This is one logical change. There's absolutely no

00:25:36,420 --> 00:25:39,090
reason to have multiple commits here. And I like,

00:25:39,090 --> 00:25:40,950
I, call me pedantic, but when I want to

00:25:40,950 --> 00:25:43,180
go back and figure out why something's broken, I

00:25:43,180 --> 00:25:45,020
don't want to be looking through peoples' work in

00:25:45,020 --> 00:25:48,030
progress commits, or even my work in progress commits,

00:25:48,030 --> 00:25:49,780
especially in a library like this. So what I'm

00:25:49,780 --> 00:25:52,240
gonna do is I'm just gonna git rebase dash

00:25:52,240 --> 00:25:57,640
i origin/master.

00:25:57,640 --> 00:26:03,310
And I'm going to fix up this one and

00:26:03,310 --> 00:26:10,000
squash this one. And that's basically gonna pop me

00:26:10,000 --> 00:26:13,410
in here. I'm gonna delete that. Now, check out

00:26:13,410 --> 00:26:17,040
the git status. One commit. So now I've got

00:26:17,040 --> 00:26:20,410
clean history to work with. I'm just gonna do

00:26:20,410 --> 00:26:24,920
a git push. Now, if we go over here

00:26:24,920 --> 00:26:27,990
to GitHub, that's cool. Is that cool? It like

00:26:27,990 --> 00:26:30,880
knows that I just closed that, and automatically updates

00:26:30,880 --> 00:26:32,280
the page.

00:26:32,280 --> 00:26:34,010
And if we go over now and look at

00:26:34,010 --> 00:26:37,620
ActiveMerchant, you'll see Casey Dragon still gets full credit

00:26:37,620 --> 00:26:40,110
for that, and I'm just the committer, which is

00:26:40,110 --> 00:26:44,380
exactly how I like it.

00:26:44,380 --> 00:26:51,050
All right.

00:26:51,050 --> 00:26:55,070
So to run over that again really quick, I

00:26:55,070 --> 00:26:57,980
do a sanity review on GitHub. I use git

00:26:57,980 --> 00:27:00,990
am to pull that thing in, resolve conflicts. There's

00:27:00,990 --> 00:27:03,230
even a little dash three option you can pass

00:27:03,230 --> 00:27:07,250
to get am, that does a three-way merge. And

00:27:07,250 --> 00:27:10,360
we'll sometimes merge stuff that basic git am will

00:27:10,360 --> 00:27:13,890
not. Sanity test run, review it, clean/tweak - I'll

00:27:13,890 --> 00:27:17,830
go, like, I'll do everything from nothing, except adding

00:27:17,830 --> 00:27:19,840
a change log line, or maybe even not even

00:27:19,840 --> 00:27:23,190
that if it's really minor, to completely changing the

00:27:23,190 --> 00:27:25,720
code and cleaning up the Gateway because I understand

00:27:25,720 --> 00:27:28,000
how Gateways should be.

00:27:28,000 --> 00:27:30,620
Do a final test run, add a changelog entry,

00:27:30,620 --> 00:27:32,680
do a Git CI. if it's just one, and

00:27:32,680 --> 00:27:34,560
I'm just like adding a, a changelog entry, I'll

00:27:34,560 --> 00:27:37,160
just to an amend. If it's multiple stuff, I'll

00:27:37,160 --> 00:27:38,900
go ahead and do the rebase and squash it

00:27:38,900 --> 00:27:41,830
all together. And sometimes, not very often, but sometimes,

00:27:41,830 --> 00:27:44,530
there are actually multiple logical changes in one pull

00:27:44,530 --> 00:27:47,090
request. Sometimes I'll ask the contributor, actually, to split

00:27:47,090 --> 00:27:49,140
those up, but sometimes I'll take them together and

00:27:49,140 --> 00:27:51,920
actually have two, two commits, and then push it

00:27:51,920 --> 00:27:53,210
up.

00:27:53,210 --> 00:27:55,970
So that's, that's a big part of how I've

00:27:55,970 --> 00:27:59,570
managed to just manage my time and make it

00:27:59,570 --> 00:28:01,430
so that I'm really effective when I'm in the

00:28:01,430 --> 00:28:05,460
mode of, it's time to take in contributions.

00:28:05,460 --> 00:28:11,150
So next problem. Original poster does not deliver. This

00:28:11,150 --> 00:28:13,530
happens a lot. Somebody comes in, they're like, this

00:28:13,530 --> 00:28:15,460
is a problem, or like, here's this awesome PR,

00:28:15,460 --> 00:28:17,540
and you're like, OK, well that's cool, but I

00:28:17,540 --> 00:28:23,730
need this or I need that. And silence. And

00:28:23,730 --> 00:28:26,670
more silence. And you're like, awhile later you're like,

00:28:26,670 --> 00:28:29,650
hey anything? Silence. It's just like they disappeared off

00:28:29,650 --> 00:28:31,930
the face of the earth. And, and, that's cool.

00:28:31,930 --> 00:28:34,480
I have a thirty day rule for that. Look,

00:28:34,480 --> 00:28:36,850
if I've given you feedback and you haven't gotten

00:28:36,850 --> 00:28:38,590
back to me in thirty days, this must not

00:28:38,590 --> 00:28:40,800
be important to you. And it's not important enough

00:28:40,800 --> 00:28:43,340
to me to, to want to work through the

00:28:43,340 --> 00:28:45,050
issues that I brought up, and I don't think

00:28:45,050 --> 00:28:47,090
it's serious enough for that. I put a nice

00:28:47,090 --> 00:28:49,640
comment on there, say, hey, if you have more

00:28:49,640 --> 00:28:52,920
for me on this, please reopen. I invite them

00:28:52,920 --> 00:28:54,770
to reopen it, but I'm gonna close this out

00:28:54,770 --> 00:28:55,970
for now.

00:28:55,970 --> 00:28:59,540
Nasty contributors. Thankfully, this isn't one I've had to

00:28:59,540 --> 00:29:02,250
deal with too much. I've had a few heated

00:29:02,250 --> 00:29:04,880
sort of exchanges, but nothing really major. But I've

00:29:04,880 --> 00:29:07,400
seen them. Oh, have I seen them. I mean,

00:29:07,400 --> 00:29:12,380
we've all seen the ultra opensource maintainer versus contributor

00:29:12,380 --> 00:29:18,560
flame wars, right. Like, yeah. I could name some

00:29:18,560 --> 00:29:22,070
from like Rails history and I think Ruby dramas

00:29:22,070 --> 00:29:27,170
has like a nice little history of them.

00:29:27,170 --> 00:29:29,140
You know, the first thing that I try to

00:29:29,140 --> 00:29:30,580
do with anything like this is I try to

00:29:30,580 --> 00:29:32,850
make it about the code. Or about the problem.

00:29:32,850 --> 00:29:36,230
It's like, there's no personality here. I don't even

00:29:36,230 --> 00:29:38,660
want it to be about my style versus your

00:29:38,660 --> 00:29:40,470
style. I just want to talk about the code.

00:29:40,470 --> 00:29:43,230
What works best in the context of this project

00:29:43,230 --> 00:29:46,220
and what makes sense.

00:29:46,220 --> 00:29:48,740
You know, a project like ActiveMerchant, it's about getting

00:29:48,740 --> 00:29:50,800
stuff done with Gateways. it's not the prettiest thing.

00:29:50,800 --> 00:29:53,070
It's plumbing. So there's not really like tons of

00:29:53,070 --> 00:29:55,860
stylistic things. It's really about, hey, does this make

00:29:55,860 --> 00:29:57,660
it simpler to maintain. Does it make it simpler

00:29:57,660 --> 00:29:59,470
to contribute to, et cetera. So I try to

00:29:59,470 --> 00:30:00,960
make it about the code.

00:30:00,960 --> 00:30:03,420
Secondly, I will like, I will squash people with

00:30:03,420 --> 00:30:07,660
civility. Like, you will not get me mad. I

00:30:07,660 --> 00:30:11,690
dare you to try. No, don't. But no, when

00:30:11,690 --> 00:30:13,390
people come in and they're kind of heated, it's

00:30:13,390 --> 00:30:16,320
like, I'm just nice. I'm just like cool, chill,

00:30:16,320 --> 00:30:19,040
like, I don't care if you're like heated. I'm

00:30:19,040 --> 00:30:23,050
just gonna tell you, it's cool. I'm not, I

00:30:23,050 --> 00:30:26,390
mean, honestly if people get really heated I'll just,

00:30:26,390 --> 00:30:29,370
like, patronize them to some extent. It's like, it's

00:30:29,370 --> 00:30:31,120
OK.

00:30:31,120 --> 00:30:35,600
So I just, I don't find that huge amounts

00:30:35,600 --> 00:30:40,290
of return anger is very productive as a maintainer.

00:30:40,290 --> 00:30:42,260
And then the third thing, I think it's really

00:30:42,260 --> 00:30:44,670
important as an opensource maintainer, is you are a

00:30:44,670 --> 00:30:48,830
volunteer. This is not, like, you do not have

00:30:48,830 --> 00:30:52,440
this huge responsibility to the contributors. Your real responsibility

00:30:52,440 --> 00:30:54,800
is to the project. You getting all heated at

00:30:54,800 --> 00:30:57,040
a contributor and going off in a huff, that's

00:30:57,040 --> 00:30:59,500
bad for the project. Don't do that. Just be

00:30:59,500 --> 00:31:01,210
like, I'm a volunteer. I'm gonna back out of

00:31:01,210 --> 00:31:03,110
this. Maybe there's another contributor you could, or another

00:31:03,110 --> 00:31:04,780
maintainer you can hand it off to and say,

00:31:04,780 --> 00:31:06,630
look, I just need to back away from this.

00:31:06,630 --> 00:31:08,990
Can you take this guy and deal with him?

00:31:08,990 --> 00:31:10,960
Hopefully your other maintainers have your back and they'll

00:31:10,960 --> 00:31:13,410
just hop in and do that for you anyhow.

00:31:13,410 --> 00:31:14,740
But be a volunteer. If you need to walk

00:31:14,740 --> 00:31:16,460
away from it for a week or two, that

00:31:16,460 --> 00:31:18,960
is fully your prerogative, and it's better that you

00:31:18,960 --> 00:31:20,400
do that than that you get burnt out and

00:31:20,400 --> 00:31:23,060
leave the project.

00:31:23,060 --> 00:31:27,340
Now, other maintainers can be a problem. Again, I

00:31:27,340 --> 00:31:29,720
haven't had too much trouble with this. My fellow

00:31:29,720 --> 00:31:32,430
maintainers mostly do just what they need for the

00:31:32,430 --> 00:31:34,540
project. They, but they don't really, like, create new

00:31:34,540 --> 00:31:36,550
messes or anything like that. But I think it

00:31:36,550 --> 00:31:39,200
is really important to communicate expectations to fellow maintainers,

00:31:39,200 --> 00:31:41,480
especially when you're bringing somebody new on.

00:31:41,480 --> 00:31:43,950
Just be like, look, here's how we do stuff.

00:31:43,950 --> 00:31:46,590
You've been contributing for awhile, and that's awesome, here's

00:31:46,590 --> 00:31:47,880
some things that you should know about the way

00:31:47,880 --> 00:31:50,550
that we maintain the project, and just make sure

00:31:50,550 --> 00:31:53,480
everybody knows what's up. Secondly I think it's really

00:31:53,480 --> 00:31:57,110
important to open up channels of communication with your

00:31:57,110 --> 00:31:58,010
fellow maintainers.

00:31:58,010 --> 00:32:02,190
A lot of times, this means a channel other

00:32:02,190 --> 00:32:04,760
than GitHub, like, a private channel. You need a

00:32:04,760 --> 00:32:07,370
back channel with your fellow contributors. You need their

00:32:07,370 --> 00:32:10,010
email addresses so you can just, like, email everybody

00:32:10,010 --> 00:32:11,820
and be like, hey, this flame war has opened

00:32:11,820 --> 00:32:13,880
up on this issue, we should probably talk about

00:32:13,880 --> 00:32:15,710
this a little bit. Not so much to gang

00:32:15,710 --> 00:32:17,470
up on anybody but just so that we're all

00:32:17,470 --> 00:32:21,800
on the same page and aren't working at cross

00:32:21,800 --> 00:32:23,050
purposes to each other.

00:32:23,050 --> 00:32:25,490
So, it's more like, if something happens, and you're

00:32:25,490 --> 00:32:27,280
like, oh, why did he do that? You don't

00:32:27,280 --> 00:32:29,040
have to like, call them out in public and

00:32:29,040 --> 00:32:32,380
be like, hey, you idiot, fellow maintainer, why did

00:32:32,380 --> 00:32:35,320
you do this? You can say that in a

00:32:35,320 --> 00:32:37,620
private email instead.

00:32:37,620 --> 00:32:40,080
Now, these are my, but what about x's, and

00:32:40,080 --> 00:32:41,440
these are the things that I haven't figured out

00:32:41,440 --> 00:32:45,950
yet. I'm still trying to figure out this maintainer

00:32:45,950 --> 00:32:50,630
game. It's not, there's always new stuff to learn

00:32:50,630 --> 00:32:52,220
and there's always ways to get better. These are

00:32:52,220 --> 00:32:53,850
things that I haven't figured out.

00:32:53,850 --> 00:32:56,240
The first one is mailing lists. Mailing lists for

00:32:56,240 --> 00:33:01,350
opensource projects suck. And, especially if you're not a

00:33:01,350 --> 00:33:03,890
big enough project like the Linux kernel or something,

00:33:03,890 --> 00:33:07,780
that has like dedicated sysadmin neck beards to manage

00:33:07,780 --> 00:33:11,150
archaic mailing list software for you.

00:33:11,150 --> 00:33:15,110
GitHub issues are cool. I find, like, you can

00:33:15,110 --> 00:33:17,370
use them sort of like a mailing list, but

00:33:17,370 --> 00:33:19,120
it's not quite the same. Sometimes you just want

00:33:19,120 --> 00:33:21,810
to like, open up a topic and see what

00:33:21,810 --> 00:33:25,830
people say. And it's also challenging, too, cause it's

00:33:25,830 --> 00:33:28,360
so disconnected from sort of the GitHub work flow.

00:33:28,360 --> 00:33:30,910
You can have, like, this thing over here, and,

00:33:30,910 --> 00:33:34,110
but people don't know about it and they, like,

00:33:34,110 --> 00:33:35,900
they don't, and you kind of have to reach

00:33:35,900 --> 00:33:37,790
a certain size before you have enough people signed

00:33:37,790 --> 00:33:40,180
up where you're having interesting conversations and stuff.

00:33:40,180 --> 00:33:43,610
So mailing list, is like, that's an open painful

00:33:43,610 --> 00:33:45,100
thing. I think if you want to get acquired

00:33:45,100 --> 00:33:47,950
by GitHub, you should go and write a mailing

00:33:47,950 --> 00:33:52,210
list awesome thing that latches onto GitHub and they'll

00:33:52,210 --> 00:33:54,580
just buy you. I promise.

00:33:54,580 --> 00:33:57,080
No, I don't. I don't know. But I would

00:33:57,080 --> 00:34:00,610
think that - and I've dropped this in a

00:34:00,610 --> 00:34:04,320
few different circumstances now with GitHub people around, and

00:34:04,320 --> 00:34:05,990
they always just give me this knowing look and

00:34:05,990 --> 00:34:07,780
they're like, yeah, we're working on it.

00:34:07,780 --> 00:34:12,190
I'm like, come on. Give me something.

00:34:12,190 --> 00:34:14,560
Another one that's, can be really hard as a

00:34:14,560 --> 00:34:16,270
maintainer. Like, a lot of time you're down in

00:34:16,270 --> 00:34:19,860
the plumbing. You're fixing stuff. And you're taking in

00:34:19,860 --> 00:34:22,240
contributions from other people. but sometimes a project needs

00:34:22,240 --> 00:34:25,200
a big sweeping change. This is hard. Like, and

00:34:25,200 --> 00:34:26,889
I still don't know how to do it really

00:34:26,889 --> 00:34:29,659
well. ActiveMerchant needs some significant changes, and some of

00:34:29,659 --> 00:34:31,300
it's just time, it's like, when I have time,

00:34:31,300 --> 00:34:34,010
it's like I'm spending it taking in contributions from

00:34:34,010 --> 00:34:36,570
people, and I need some time and, and probably

00:34:36,570 --> 00:34:38,030
I just need to add, we need to add

00:34:38,030 --> 00:34:40,830
two more contributors and some more people doing maintenance

00:34:40,830 --> 00:34:42,899
stuff so that we also have time to work

00:34:42,899 --> 00:34:44,240
on some of the big sweeping stuff.

00:34:44,240 --> 00:34:45,899
But this is a hard one, and, and it's

00:34:45,899 --> 00:34:49,639
something that I'm still thinking about a lot.

00:34:49,639 --> 00:34:51,730
Forks could be a problem. I feel like GitHub's

00:34:51,730 --> 00:34:53,679
made them less of a problem. It's never been

00:34:53,679 --> 00:34:56,940
a problem that I've had so much. And since

00:34:56,940 --> 00:34:58,230
I haven't had to deal with it I haven't

00:34:58,230 --> 00:35:01,540
really sort of figured it out, but it could

00:35:01,540 --> 00:35:03,620
be a problem for you. I don't know. I

00:35:03,620 --> 00:35:05,290
threw it in there, cause you have, you can't

00:35:05,290 --> 00:35:08,650
talk about maintaining opensource without talking about forks. it's

00:35:08,650 --> 00:35:10,600
what they tell me.

00:35:10,600 --> 00:35:14,630
Now, the payoff. So great, wow. You told us

00:35:14,630 --> 00:35:16,800
about all these problems. Why would I ever want

00:35:16,800 --> 00:35:19,480
to be an opensource maintainer? It sounds really hard.

00:35:19,480 --> 00:35:21,020
It is really hard. But there is a big

00:35:21,020 --> 00:35:23,020
payoff.

00:35:23,020 --> 00:35:25,470
You know, for me, the multiplication of value that

00:35:25,470 --> 00:35:27,570
you get out of opensource is amazing, and it's

00:35:27,570 --> 00:35:30,710
why we see so many companies now, even opensourcing

00:35:30,710 --> 00:35:32,530
things that are sort of a core competency. I

00:35:32,530 --> 00:35:36,440
mean, Shopify, opensourcing ActiveMerchant. I mean, I remember Toby

00:35:36,440 --> 00:35:41,570
said, at one point, I think, he was just

00:35:41,570 --> 00:35:43,480
kind of amazed at how many of his competitors

00:35:43,480 --> 00:35:44,870
were using ActiveMerchant.

00:35:44,870 --> 00:35:47,160
And, and kind of like, thought that was awesome,

00:35:47,160 --> 00:35:49,000
too, just like, that they'd been able to do

00:35:49,000 --> 00:35:52,130
this thing that was so useful, even to competitors.

00:35:52,130 --> 00:35:54,940
But there is so much value, I mean. Spreely

00:35:54,940 --> 00:35:58,690
currently supports fifty-three payment gateways, all via ActiveMerchant. And

00:35:58,690 --> 00:36:01,100
ActiveMerchant even has even more of those, cause we

00:36:01,100 --> 00:36:03,630
only add them as customers request them.

00:36:03,630 --> 00:36:05,650
And we wouldn't be able to do that, like

00:36:05,650 --> 00:36:07,790
we wouldn't have nearly that many gateways if not

00:36:07,790 --> 00:36:10,850
for the contributions that come in via opensource. So

00:36:10,850 --> 00:36:14,660
it's totally worth it from that perspective. It's awesome

00:36:14,660 --> 00:36:16,540
to get to be a hero. I don't know

00:36:16,540 --> 00:36:19,760
exactly what the garbage collector super hero costume looks

00:36:19,760 --> 00:36:23,360
like, but it is pretty fun.

00:36:23,360 --> 00:36:26,680
And it's, it's pretty, like, when you, like, to

00:36:26,680 --> 00:36:28,590
me, I take in a patch, I merge it,

00:36:28,590 --> 00:36:31,140
I'm like, OK, like I'm just doing my job.

00:36:31,140 --> 00:36:32,910
BUt then people come along and they're like, thanks

00:36:32,910 --> 00:36:34,830
so much! I got that in! That makes my

00:36:34,830 --> 00:36:39,900
life better, simpler, whatever. And that feels good, man.

00:36:39,900 --> 00:36:43,860
Accelerated learning. I've learned so much from being an

00:36:43,860 --> 00:36:47,240
opensource maintainer. Even just about git, but then about

00:36:47,240 --> 00:36:49,620
code, and you're taking in all these contributions from

00:36:49,620 --> 00:36:53,100
wicked smart people, and getting to, to review them

00:36:53,100 --> 00:36:55,610
and change them. You get to start to understand

00:36:55,610 --> 00:36:57,140
some of the things that make it easier for

00:36:57,140 --> 00:36:59,250
other people to contribute to code, which is a

00:36:59,250 --> 00:37:01,650
useful thing no matter what project you're working on.

00:37:01,650 --> 00:37:03,870
It's a really great way to learn stuff really

00:37:03,870 --> 00:37:08,220
fast. Sometimes the hard way, but really fast.

00:37:08,220 --> 00:37:10,360
It's an opportunity to give back. We've all benefited

00:37:10,360 --> 00:37:17,360
so much from, from opensource. There is definitely, and

00:37:17,800 --> 00:37:20,860
this is maybe, actually my favorite one. There is

00:37:20,860 --> 00:37:25,220
just this amazing thing of working on something that's

00:37:25,220 --> 00:37:27,230
so much bigger than anything you could have done

00:37:27,230 --> 00:37:29,340
yourself, and getting to be a part of that.

00:37:29,340 --> 00:37:31,970
Like, being like, wow, there are all these people

00:37:31,970 --> 00:37:35,110
writing this awesome code, and I get to be,

00:37:35,110 --> 00:37:37,560
like a part of bringing that together and making

00:37:37,560 --> 00:37:40,280
it happen and getting it out there. And there's

00:37:40,280 --> 00:37:43,000
just something really thrilling to me about that.

00:37:43,000 --> 00:37:44,990
Maybe, maybe I'm just odd that way, but I,

00:37:44,990 --> 00:37:47,070
I think it's really pretty amazing.

00:37:47,070 --> 00:37:50,270
So that's all I have. Thank you so much.

00:37:50,270 --> 00:37:51,860
I'm not gonna take questions right now, but feel

00:37:51,860 --> 00:37:53,970
free to come up and ask me whatever you

00:37:53,970 --> 00:37:54,300

YouTube URL: https://www.youtube.com/watch?v=tamk2uMwW8A


