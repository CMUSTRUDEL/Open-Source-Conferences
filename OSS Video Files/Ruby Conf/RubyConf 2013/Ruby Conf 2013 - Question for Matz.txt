Title: Ruby Conf 2013 - Question for Matz
Publication date: 2020-01-27
Playlist: RubyConf 2013
Description: 
	Help us caption & translate this video!

http://amara.org/v/FG5J/
Captions: 
	00:00:15,950 --> 00:00:22,920
okay so the first question that we had

00:00:19,950 --> 00:00:27,680
was Oh anything you want to say before

00:00:22,920 --> 00:00:30,150
we get started yeah thank you for coming

00:00:27,680 --> 00:00:32,430
well thank thank you for coming I know

00:00:30,150 --> 00:00:34,379
it's a long ways it was a long way it

00:00:32,430 --> 00:00:36,360
took me down a little bit less than 30

00:00:34,379 --> 00:00:39,470
hours well San Diego will be a little

00:00:36,360 --> 00:00:44,270
closer yeah a little bit cool yeah yeah

00:00:39,470 --> 00:00:47,250
ok so we dispense with the pleasantries

00:00:44,270 --> 00:00:52,739
so I one one question that somebody

00:00:47,250 --> 00:00:55,590
brought up to me is when will 19 be end

00:00:52,739 --> 00:00:57,680
of life so it's one that one question

00:00:55,590 --> 00:01:01,350
that I wasn't sure on is one dot to

00:00:57,680 --> 00:01:04,860
officially end of life now yes ok I

00:01:01,350 --> 00:01:07,440
think and write how long how long do you

00:01:04,860 --> 00:01:09,660
see 13 going on I mean I know that I

00:01:07,440 --> 00:01:11,250
know the last year we talked you talked

00:01:09,660 --> 00:01:13,710
a lot about people should just switch to

00:01:11,250 --> 00:01:16,260
20 so how long do you want to continue

00:01:13,710 --> 00:01:19,710
with doing one dot three patches and

00:01:16,260 --> 00:01:22,409
stuff ah you know duh we we cannot

00:01:19,710 --> 00:01:25,530
maintain the three versions so after do

00:01:22,409 --> 00:01:28,200
we going to have the really 21 in next

00:01:25,530 --> 00:01:30,689
to silver so the route the maintenance

00:01:28,200 --> 00:01:33,060
for their weight 193 will gradually

00:01:30,689 --> 00:01:35,729
disappear okay so you know another year

00:01:33,060 --> 00:01:39,659
or so probably for 193 yeah maybe okay

00:01:35,729 --> 00:01:41,729
okay i know a lot of people want to know

00:01:39,659 --> 00:01:43,170
you know what's been going on with em

00:01:41,729 --> 00:01:45,299
Ruby you want to talk a little about

00:01:43,170 --> 00:01:47,310
what you would like cool stuff is work

00:01:45,299 --> 00:01:51,390
going on with em Ruby the emer be is

00:01:47,310 --> 00:01:54,240
kind it's conducting usable so we we are

00:01:51,390 --> 00:01:57,689
not in the we cannot declare it as a

00:01:54,240 --> 00:02:02,340
stable yet so that we didn't put it any

00:01:57,689 --> 00:02:06,390
version number on it so just latest but

00:02:02,340 --> 00:02:09,329
buyer beware yeah but it's it's usable

00:02:06,390 --> 00:02:11,790
and then some companies still under the

00:02:09,329 --> 00:02:14,459
experiment in using a movie in their

00:02:11,790 --> 00:02:17,100
production like a internist router so

00:02:14,459 --> 00:02:18,810
embedded a movie in there well internet

00:02:17,100 --> 00:02:22,180
router that that's all that they can

00:02:18,810 --> 00:02:25,689
write routing routing rule

00:02:22,180 --> 00:02:27,760
in will be des will be dsl or some other

00:02:25,689 --> 00:02:30,340
company is gives commitment embedding m

00:02:27,760 --> 00:02:32,920
ruby in vending machines oh yeah yeah

00:02:30,340 --> 00:02:34,689
back in japan the bit they are vending

00:02:32,920 --> 00:02:38,049
machine all over the street oh I

00:02:34,689 --> 00:02:40,540
remember yeah and then and then that the

00:02:38,049 --> 00:02:43,480
most of bending machine their computers

00:02:40,540 --> 00:02:44,859
with depending bending features so can

00:02:43,480 --> 00:02:47,560
you get a computer from a vending

00:02:44,859 --> 00:02:49,389
machine yet yep you know either get em

00:02:47,560 --> 00:02:53,079
ruby from a vending machine that's run

00:02:49,389 --> 00:02:56,769
off em ruby is amazing yeah so you know

00:02:53,079 --> 00:03:00,189
that we have the vending machine with

00:02:56,769 --> 00:03:02,530
some kind without LED display in it and

00:03:00,189 --> 00:03:04,689
then we have the feature to play games

00:03:02,530 --> 00:03:08,469
on that or that's maybe a lottery or

00:03:04,689 --> 00:03:10,569
something like that so so they got to

00:03:08,469 --> 00:03:13,000
create a software for new vending

00:03:10,569 --> 00:03:14,650
machines so then they we need to create

00:03:13,000 --> 00:03:16,510
a tons of software and for vending

00:03:14,650 --> 00:03:19,719
machines so the they need to be

00:03:16,510 --> 00:03:22,450
productive so they allow they would love

00:03:19,719 --> 00:03:24,639
to embed a higher-level language in work

00:03:22,450 --> 00:03:26,560
to develop their their software that's

00:03:24,639 --> 00:03:29,889
cool yeah I have seen I think I saw that

00:03:26,560 --> 00:03:31,359
there's a an engine X module that to run

00:03:29,889 --> 00:03:33,099
em ruby stuff and stuff like that I

00:03:31,359 --> 00:03:34,569
guess that's the probably the target

00:03:33,099 --> 00:03:37,060
that's what the idea of them are we to

00:03:34,569 --> 00:03:41,769
begin with right so emily is target to

00:03:37,060 --> 00:03:44,709
be embedded in devices and software so

00:03:41,769 --> 00:03:47,919
that a guy was working on and the

00:03:44,709 --> 00:03:51,790
post-mortem Ruby and XM Ruby which both

00:03:47,919 --> 00:03:55,419
embeds of em Ruby and there are web

00:03:51,790 --> 00:03:57,970
servers so so that they can write da the

00:03:55,419 --> 00:03:59,709
extend web servers by using Ruby

00:03:57,970 --> 00:04:03,579
programs like for example so you can

00:03:59,709 --> 00:04:06,909
replace the mod wheel light by Ruby a

00:04:03,579 --> 00:04:09,370
regular expression and every like

00:04:06,909 --> 00:04:11,439
programs and in the other application is

00:04:09,370 --> 00:04:13,359
the in combination of the sea group

00:04:11,439 --> 00:04:17,380
which is the kind of resource management

00:04:13,359 --> 00:04:24,099
of the that functionality of Linux so

00:04:17,380 --> 00:04:27,310
you can say this limit the bandwidth to

00:04:24,099 --> 00:04:31,060
to each request or something that so you

00:04:27,310 --> 00:04:33,539
can control the the web service is very

00:04:31,060 --> 00:04:39,009
fine-grain sure that

00:04:33,539 --> 00:04:41,020
so how much does how much time have has

00:04:39,009 --> 00:04:43,379
how do you split your time between em

00:04:41,020 --> 00:04:45,819
Ruby and MRIs at mostly em Ruby now or

00:04:43,379 --> 00:04:48,909
you know daza programa I spent know

00:04:45,819 --> 00:04:51,129
sometime time in EM Ruby so the we we

00:04:48,909 --> 00:04:55,179
have tons of the smart to develop up

00:04:51,129 --> 00:04:57,339
back there i I don't I don't you ever

00:04:55,179 --> 00:05:01,269
forget for sale would be in any more any

00:04:57,339 --> 00:05:04,599
longer so so I know I as a language

00:05:01,269 --> 00:05:06,939
designer I still work on on making

00:05:04,599 --> 00:05:10,619
decision for the language spec and

00:05:06,939 --> 00:05:16,449
behavior so after that I just order them

00:05:10,619 --> 00:05:19,539
to implement so so so I I no longer work

00:05:16,449 --> 00:05:21,219
as a program of weimar I have so have

00:05:19,539 --> 00:05:23,409
you had to do have you had to sort of

00:05:21,219 --> 00:05:25,449
delegate to others more this last year

00:05:23,409 --> 00:05:28,389
has that been harder or has it been sort

00:05:25,449 --> 00:05:31,029
of a progression that you can deceive me

00:05:28,389 --> 00:05:33,429
yeah serious a bit yeah you know do we

00:05:31,029 --> 00:05:36,639
you know do we have the one of the

00:05:33,429 --> 00:05:38,709
smartest programa in the world as our

00:05:36,639 --> 00:05:45,669
the lead committee so I don't have to

00:05:38,709 --> 00:05:50,589
worry about them a very good so another

00:05:45,669 --> 00:05:52,089
question that we had was if that we've

00:05:50,589 --> 00:05:53,860
had this question before some of these

00:05:52,089 --> 00:05:55,419
some of these you've heard before but

00:05:53,860 --> 00:05:58,689
people like asking you every year so I

00:05:55,419 --> 00:06:00,490
figured I'll indulge them if you had

00:05:58,689 --> 00:06:03,069
Ruby to do over what would you do

00:06:00,490 --> 00:06:04,029
differently like one-on-one yeah you

00:06:03,069 --> 00:06:07,839
must get this question all the time

00:06:04,029 --> 00:06:10,959
though yeah and then I can't think of

00:06:07,839 --> 00:06:14,349
two things like a photo the one is to

00:06:10,959 --> 00:06:17,860
remove the for the variable inherited

00:06:14,349 --> 00:06:21,699
from Pro like Dallas la something

00:06:17,860 --> 00:06:23,559
something so I you know in the very

00:06:21,699 --> 00:06:27,629
early stage of the Ruby development will

00:06:23,559 --> 00:06:32,439
be designing so I wanted to replace pro

00:06:27,629 --> 00:06:37,809
Soto we took many features from pro but

00:06:32,439 --> 00:06:40,029
like I admit I did too much so I'd love

00:06:37,809 --> 00:06:42,579
to remove these kind of the global right

00:06:40,029 --> 00:06:44,729
ah the special variables gotcha then the

00:06:42,579 --> 00:06:48,800
second things is a you know

00:06:44,729 --> 00:06:54,270
in the 220 years ago when i started

00:06:48,800 --> 00:06:55,999
designing Ruby so the the multi-core or

00:06:54,270 --> 00:06:59,759
the parallel programming is now very

00:06:55,999 --> 00:07:03,599
popular other us so we only have the

00:06:59,759 --> 00:07:05,249
computer with one's GPU so so we don't

00:07:03,599 --> 00:07:07,409
have to worry about multi-core or

00:07:05,249 --> 00:07:11,449
something like that so the concurrency

00:07:07,409 --> 00:07:14,069
is for that the you know the the

00:07:11,449 --> 00:07:16,379
programming architecture so not for that

00:07:14,069 --> 00:07:19,699
performance so that's a that's okay for

00:07:16,379 --> 00:07:23,039
to be half x I'm kind of green thread so

00:07:19,699 --> 00:07:27,330
that's what I did but you know the I

00:07:23,039 --> 00:07:30,300
didn't expect forecast that the current

00:07:27,330 --> 00:07:34,080
situation the HP she has the several

00:07:30,300 --> 00:07:37,020
several cores and that's right you know

00:07:34,080 --> 00:07:39,779
the performance of their each core is

00:07:37,020 --> 00:07:43,009
not growing any longer right so that we

00:07:39,779 --> 00:07:47,969
have to utilize these calls are

00:07:43,009 --> 00:07:50,219
synchronously so the upon that situation

00:07:47,969 --> 00:07:58,949
the programming model should be changed

00:07:50,219 --> 00:08:02,339
so if i telled ah myself if I could tell

00:07:58,949 --> 00:08:04,800
my dad I can whisper to yourself did you

00:08:02,339 --> 00:08:07,560
really buy prime machines so i will tell

00:08:04,800 --> 00:08:11,189
you to remove the stress and then then

00:08:07,560 --> 00:08:13,559
put something different like actors okay

00:08:11,189 --> 00:08:16,529
yeah that's a good that's a good segue

00:08:13,559 --> 00:08:18,629
to another question we have which is I

00:08:16,529 --> 00:08:20,309
think we talked about this last last

00:08:18,629 --> 00:08:22,080
year too is have you had any more

00:08:20,309 --> 00:08:24,509
thoughts about sort of like immutable

00:08:22,080 --> 00:08:26,899
data structures should they be part of

00:08:24,509 --> 00:08:29,129
the core Ruby I know there's there's

00:08:26,899 --> 00:08:31,020
there was some discussion at rubyconf

00:08:29,129 --> 00:08:33,990
this year about a gem called hamster

00:08:31,020 --> 00:08:36,329
that provides a lot of immutable data

00:08:33,990 --> 00:08:38,339
structures but it can be slow just

00:08:36,329 --> 00:08:40,260
because of various things and it would

00:08:38,339 --> 00:08:41,729
be you know they people were asking me

00:08:40,260 --> 00:08:43,560
Oh it'd be faster if we could have it in

00:08:41,729 --> 00:08:47,240
the core of Ruby we have you thought

00:08:43,560 --> 00:08:50,190
about that at all uh you know the

00:08:47,240 --> 00:08:52,680
object-oriented programming itself it

00:08:50,190 --> 00:08:56,810
was some kind of the mutability so that

00:08:52,680 --> 00:08:59,240
having some immutable data does

00:08:56,810 --> 00:09:02,150
help that nuts if we program in the

00:08:59,240 --> 00:09:04,400
object-oriented way and there will be is

00:09:02,150 --> 00:09:08,150
still considered as alpha started

00:09:04,400 --> 00:09:12,020
ramming language so that's I'm not sure

00:09:08,150 --> 00:09:15,560
yet that the having then in a coal mine

00:09:12,020 --> 00:09:17,900
would have a very huger a performance

00:09:15,560 --> 00:09:20,540
boost it seems like we're kind of that

00:09:17,900 --> 00:09:22,160
you're that maybe see Ruby is sort of

00:09:20,540 --> 00:09:24,529
slowly I know that there was the whole

00:09:22,160 --> 00:09:26,180
discussion about frozen strings the

00:09:24,529 --> 00:09:28,400
ability to easily make frozen sea rings

00:09:26,180 --> 00:09:32,510
which you know there is there a kind of

00:09:28,400 --> 00:09:37,910
immutable data stream yeah so the you

00:09:32,510 --> 00:09:40,190
know do I'm we gradually moving towards

00:09:37,910 --> 00:09:42,950
some kind of the the supporting

00:09:40,190 --> 00:09:47,830
functional programming or the maybe mute

00:09:42,950 --> 00:09:53,660
with you miss immutable data so but I

00:09:47,830 --> 00:09:56,360
don't just I'm not sure yet yeah you

00:09:53,660 --> 00:10:01,700
know they're having having you know

00:09:56,360 --> 00:10:04,760
having see within our jab can be as

00:10:01,700 --> 00:10:07,490
wrong as fast as that the court so you

00:10:04,760 --> 00:10:09,560
have to be in a built-in right I guess

00:10:07,490 --> 00:10:14,510
that's true so you know you do you feel

00:10:09,560 --> 00:10:17,210
more like that you you you want to see

00:10:14,510 --> 00:10:18,890
more of that kind of branching out in

00:10:17,210 --> 00:10:20,570
gems rather than having to figure out

00:10:18,890 --> 00:10:22,910
how to pull it into the core probably

00:10:20,570 --> 00:10:27,650
yeah so so we cannot provide everything

00:10:22,910 --> 00:10:30,320
in the core so that we need to be keep

00:10:27,650 --> 00:10:37,940
the standard decision as small as it

00:10:30,320 --> 00:10:40,370
could okay see where should we go next

00:10:37,940 --> 00:10:41,780
here and this is a good one that's a

00:10:40,370 --> 00:10:44,120
really important one everybody wants to

00:10:41,780 --> 00:10:49,339
know they answer this question is no boo

00:10:44,120 --> 00:10:50,750
a robot it's a very I'm it's a very

00:10:49,339 --> 00:10:53,990
important question that we want to know

00:10:50,750 --> 00:10:56,480
as far as I know he is a human being

00:10:53,990 --> 00:11:00,380
okay he wasn't correct he wasn't created

00:10:56,480 --> 00:11:02,089
in a lab in a no and nacl lab no okay no

00:11:00,380 --> 00:11:06,709
all right well you heard it here folks

00:11:02,089 --> 00:11:09,030
yeah but then you know I I didn't watch

00:11:06,709 --> 00:11:11,940
him 24 hours

00:11:09,030 --> 00:11:13,800
he may plug into a charger yes I know

00:11:11,940 --> 00:11:16,890
watching that's what you're saying okay

00:11:13,800 --> 00:11:22,890
well so the mystery the mystery remains

00:11:16,890 --> 00:11:26,490
miss amazed okay you know we where

00:11:22,890 --> 00:11:29,610
you're getting ready to to do to da one

00:11:26,490 --> 00:11:32,730
very soon what do you think is the most

00:11:29,610 --> 00:11:40,590
exciting thing in into that one you know

00:11:32,730 --> 00:11:43,640
the after 2020 we we try to keep the

00:11:40,590 --> 00:11:46,860
compatibility a lot so the there's no

00:11:43,640 --> 00:11:49,080
big change in the language sure but you

00:11:46,860 --> 00:11:50,820
know as implementation she would be

00:11:49,080 --> 00:11:54,870
finally introduced a generational

00:11:50,820 --> 00:11:59,220
garbage collection by for the sake of

00:11:54,870 --> 00:12:01,590
the coaches work so the the you know the

00:11:59,220 --> 00:12:04,590
memory heavy program would be around

00:12:01,590 --> 00:12:06,960
much far much much faster so that that

00:12:04,590 --> 00:12:09,150
would be that you can expect the

00:12:06,960 --> 00:12:11,880
performance boost any other little maybe

00:12:09,150 --> 00:12:14,220
little things that you know for you you

00:12:11,880 --> 00:12:16,950
can anything really add the several

00:12:14,220 --> 00:12:19,590
suffixes to the number we chose so you

00:12:16,950 --> 00:12:24,690
can write a rational number or the

00:12:19,590 --> 00:12:26,130
imaginable number the in literal okay so

00:12:24,690 --> 00:12:28,470
you don't have to work right up at the

00:12:26,130 --> 00:12:30,480
complex knew something something not

00:12:28,470 --> 00:12:33,990
sure yeah instead you can write the 1

00:12:30,480 --> 00:12:37,950
plus 1 I to create a complex number oh

00:12:33,990 --> 00:12:40,020
gotcha what's wrong we've got a

00:12:37,950 --> 00:12:44,430
mathematician an imaginary mathematician

00:12:40,020 --> 00:12:48,840
in the audience I guess had it you had

00:12:44,430 --> 00:12:51,150
to work that in right um have you

00:12:48,840 --> 00:12:53,640
thought much about 22 yet I mean I know

00:12:51,150 --> 00:12:55,920
it's a ways down you know and you I know

00:12:53,640 --> 00:12:57,240
you've got a ways for 421 but is there

00:12:55,920 --> 00:12:59,630
anything that you while you were working

00:12:57,240 --> 00:13:01,950
on two dot one or discussing with other

00:12:59,630 --> 00:13:03,630
developers on to that one that you said

00:13:01,950 --> 00:13:05,040
this is a really great thing but we're

00:13:03,630 --> 00:13:06,360
gonna wait for 2 dot to have you thought

00:13:05,040 --> 00:13:10,950
about that anything like that anything

00:13:06,360 --> 00:13:13,500
that we could get excited about not yet

00:13:10,950 --> 00:13:16,290
right now so I'm we are still focusing

00:13:13,500 --> 00:13:19,730
on too long throw to delegate to to to

00:13:16,290 --> 00:13:19,730
the future okay cool

00:13:21,089 --> 00:13:30,899
see any questions from the audience yeah

00:13:28,740 --> 00:13:33,059
it does have a nice I'm just coming the

00:13:30,899 --> 00:13:35,879
questions that i have here you can feel

00:13:33,059 --> 00:13:38,819
free to get up and and used Mike's

00:13:35,879 --> 00:13:41,370
answer questions obviously I'm you can

00:13:38,819 --> 00:13:43,050
ask sort of whatever you'd like go back

00:13:41,370 --> 00:13:46,110
to the mic I'd ask you to use the mics

00:13:43,050 --> 00:13:47,819
mostly because it's recorded and if you

00:13:46,110 --> 00:13:49,110
don't use the mic then I have to repeat

00:13:47,819 --> 00:13:51,420
the question and I might get it wrong

00:13:49,110 --> 00:13:52,949
and all that kind of stuff yeah so when

00:13:51,420 --> 00:13:54,629
we take a couple questions yeah so you

00:13:52,949 --> 00:13:57,240
mentioned that if you could go back and

00:13:54,629 --> 00:13:58,709
talk to yourself you would plan more

00:13:57,240 --> 00:14:00,870
from the beginning to deal with

00:13:58,709 --> 00:14:03,629
multi-threaded cords and processors um

00:14:00,870 --> 00:14:05,939
do you have any plans of improving that

00:14:03,629 --> 00:14:10,949
type of support moving forward you know

00:14:05,939 --> 00:14:12,720
uh maybe 15 years ago the verdict this

00:14:10,949 --> 00:14:15,870
version they were no virtually no one

00:14:12,720 --> 00:14:18,360
using Ruby extensively but right now the

00:14:15,870 --> 00:14:21,779
probably millions people using Ruby and

00:14:18,360 --> 00:14:25,620
there's a play on living programs so

00:14:21,779 --> 00:14:29,360
that we don't want to break these all at

00:14:25,620 --> 00:14:32,929
once so that we the change will be that

00:14:29,360 --> 00:14:36,709
must be gradual so that we have to

00:14:32,929 --> 00:14:39,629
create some kind of transitional path

00:14:36,709 --> 00:14:42,120
yeah that's unfortunate hi this is a

00:14:39,629 --> 00:14:44,490
question from the Vancouver Ruby users

00:14:42,120 --> 00:14:47,339
group uh do you have any plans on

00:14:44,490 --> 00:14:53,249
separating the development of ruby from

00:14:47,339 --> 00:14:57,720
the development of see Ruby uh what what

00:14:53,249 --> 00:15:00,600
do you mean oh so we will like maybe

00:14:57,720 --> 00:15:02,519
more like you know there it's been a few

00:15:00,600 --> 00:15:04,529
years now but the working towards the

00:15:02,519 --> 00:15:06,300
standardization and looking at the

00:15:04,529 --> 00:15:08,189
standardization I know that you've

00:15:06,300 --> 00:15:10,679
you've previously said that you you

00:15:08,189 --> 00:15:12,959
consider see Ruby the reference

00:15:10,679 --> 00:15:14,730
implementation of that standard would

00:15:12,959 --> 00:15:16,470
you ever say like you know maybe

00:15:14,730 --> 00:15:18,569
continue your work with em Ruby and you

00:15:16,470 --> 00:15:20,249
want to say okay this standard I want to

00:15:18,569 --> 00:15:22,079
work on the standard and maybe there

00:15:20,249 --> 00:15:23,749
isn't a reference implementation anymore

00:15:22,079 --> 00:15:26,459
because you maybe you've got multiple

00:15:23,749 --> 00:15:30,329
sort of a quorum of implementations

00:15:26,459 --> 00:15:34,350
doing that so it appears look good in in

00:15:30,329 --> 00:15:37,020
the first look but you know that we

00:15:34,350 --> 00:15:39,030
a very limited we have there we have

00:15:37,020 --> 00:15:42,440
their limited ability to understand the

00:15:39,030 --> 00:15:45,540
behavior of the language without I

00:15:42,440 --> 00:15:48,180
actually experimenting on it so we

00:15:45,540 --> 00:15:50,190
really really really need a reference

00:15:48,180 --> 00:15:55,290
implementation before making the final

00:15:50,190 --> 00:15:59,130
decision so the separating you know the

00:15:55,290 --> 00:16:01,650
fixing fixing the longest behavior

00:15:59,130 --> 00:16:03,930
without any implementation women

00:16:01,650 --> 00:16:06,330
reference movement issue or even the

00:16:03,930 --> 00:16:09,690
experimental implementation so there's

00:16:06,330 --> 00:16:12,870
the there's no that's I don't think

00:16:09,690 --> 00:16:15,630
that's a good idea so maybe the

00:16:12,870 --> 00:16:18,930
reference implementation will be changed

00:16:15,630 --> 00:16:22,230
to say Rubinius maybe in the future but

00:16:18,930 --> 00:16:25,380
anyway we will ha we still need to have

00:16:22,230 --> 00:16:31,130
a single reference implementation before

00:16:25,380 --> 00:16:34,380
fixing the their longest behavior okay

00:16:31,130 --> 00:16:36,840
in the book we had a question about you

00:16:34,380 --> 00:16:38,310
know so concurrency things have

00:16:36,840 --> 00:16:41,070
obviously come up and you know there's a

00:16:38,310 --> 00:16:42,750
lot of talk about concurrency here you

00:16:41,070 --> 00:16:44,610
know is there anything that you know the

00:16:42,750 --> 00:16:47,010
the other implementations or the

00:16:44,610 --> 00:16:49,650
community could do to to help with that

00:16:47,010 --> 00:16:52,320
to help with concurrency in generals or

00:16:49,650 --> 00:16:55,410
maybe gems that you would you'd want to

00:16:52,320 --> 00:16:56,850
see you know people use more or things

00:16:55,410 --> 00:17:00,890
that the other implementations could

00:16:56,850 --> 00:17:07,320
help out on too I know to assist with

00:17:00,890 --> 00:17:09,720
yeah so so you know to their lost so

00:17:07,320 --> 00:17:11,820
many ideas to improve the concurrency in

00:17:09,720 --> 00:17:17,730
there will be programs but you know the

00:17:11,820 --> 00:17:21,900
many of them are just an idea so we need

00:17:17,730 --> 00:17:27,660
to prove them to work well with the ruby

00:17:21,900 --> 00:17:30,180
implementation and so so if if any of

00:17:27,660 --> 00:17:34,380
you oh I'm any more before the screen

00:17:30,180 --> 00:17:38,340
yeah I've got any ideas so just just

00:17:34,380 --> 00:17:41,250
feel free to that the contact us of true

00:17:38,340 --> 00:17:43,950
that you know the bug tracking system or

00:17:41,250 --> 00:17:47,070
in any way enough to mechanism or any

00:17:43,950 --> 00:17:47,390
place so that we can work together to

00:17:47,070 --> 00:17:52,280
make

00:17:47,390 --> 00:17:55,760
ah to experiment it to be better ideas

00:17:52,280 --> 00:17:58,760
so if it turns out to be a good idea so

00:17:55,760 --> 00:18:01,160
we will love to improve implement a

00:17:58,760 --> 00:18:02,900
droopy fermentation okay like a good

00:18:01,160 --> 00:18:06,440
example I guess maybe there's a number

00:18:02,900 --> 00:18:08,630
of actor gems out there would it mean

00:18:06,440 --> 00:18:11,450
what you think it would be good if the

00:18:08,630 --> 00:18:13,580
the the authors of those actor james

00:18:11,450 --> 00:18:16,190
looked at them and said oh well if ruby

00:18:13,580 --> 00:18:17,420
had this feature my actor gem could work

00:18:16,190 --> 00:18:19,550
a lot better that might be something

00:18:17,420 --> 00:18:21,380
that they could contribute back to say

00:18:19,550 --> 00:18:23,840
like could could we add this feature in

00:18:21,380 --> 00:18:25,460
so that my actor jim could be more

00:18:23,840 --> 00:18:27,710
performant or work better or whatever

00:18:25,460 --> 00:18:31,270
you know yeah absolutely at least we'd

00:18:27,710 --> 00:18:35,450
love to discuss about sure yeah great

00:18:31,270 --> 00:18:38,690
yeah hey I see you're wearing a goes

00:18:35,450 --> 00:18:40,280
t-shirt ha I was wondering first are we

00:18:38,690 --> 00:18:45,050
gonna drop see Ruby and just have go

00:18:40,280 --> 00:18:47,420
Ruby Wow um but for real what is it you

00:18:45,050 --> 00:18:50,210
like about go and maybe more broadly

00:18:47,420 --> 00:18:51,560
what features from other languages do

00:18:50,210 --> 00:18:57,310
you think we might see in ruby in the

00:18:51,560 --> 00:19:01,220
future uh nope I'm a/c guy so I used C

00:18:57,310 --> 00:19:04,880
program in C for a long long time maybe

00:19:01,220 --> 00:19:07,700
before uh before you have been born some

00:19:04,880 --> 00:19:10,130
of us are born and it you know I love

00:19:07,700 --> 00:19:12,710
seed pretty much and then but still you

00:19:10,130 --> 00:19:14,930
know the sea is pretty old so that we

00:19:12,710 --> 00:19:16,310
need to have some kind of system now

00:19:14,930 --> 00:19:20,240
more than system programming language

00:19:16,310 --> 00:19:22,310
that and then that could be a could be

00:19:20,240 --> 00:19:26,030
go in the future so that I pretty

00:19:22,310 --> 00:19:28,460
expecting go but it 10 it but but it's

00:19:26,030 --> 00:19:30,830
too young so we are they just wanted

00:19:28,460 --> 00:19:32,780
watch on what do you what what's your

00:19:30,830 --> 00:19:35,600
favorite have you done much go

00:19:32,780 --> 00:19:39,650
programming not much but I love Go Go

00:19:35,600 --> 00:19:42,050
routine and channels yeah just that sort

00:19:39,650 --> 00:19:44,600
of multiplexing on top of like sort of

00:19:42,050 --> 00:19:46,280
fibers in a way if you ate

00:19:44,600 --> 00:19:48,890
object-oriented system is pretty much

00:19:46,280 --> 00:19:52,460
interesting like a duck typing on top of

00:19:48,890 --> 00:19:54,260
static static typing gotcha anything in

00:19:52,460 --> 00:19:56,810
those the second part of his quest with

00:19:54,260 --> 00:19:58,190
any any other any other features and

00:19:56,810 --> 00:19:59,770
other languages that you wish we could

00:19:58,190 --> 00:20:04,950
figure out how to put into

00:19:59,770 --> 00:20:07,270
Ruby well duh as a language wise there's

00:20:04,950 --> 00:20:09,120
you know I mean that didn't have to be

00:20:07,270 --> 00:20:11,080
just there's somebody syntax it could be

00:20:09,120 --> 00:20:13,120
functionality or something yeah the

00:20:11,080 --> 00:20:15,940
function otherwise I pretty interesting

00:20:13,120 --> 00:20:20,050
in the behavior of the beams like an

00:20:15,940 --> 00:20:22,930
hour-long virtual machine so the you

00:20:20,050 --> 00:20:26,680
know we have luggage like Alexa or

00:20:22,930 --> 00:20:32,220
something so we time yeah I'm watching

00:20:26,680 --> 00:20:32,220
it putting them and then you know I i

00:20:33,630 --> 00:20:44,530
I'd love to ah and I like some kind of

00:20:39,310 --> 00:20:51,760
that the soft soft attraction monitor in

00:20:44,530 --> 00:21:02,380
line language like closure oh oh okay

00:20:51,760 --> 00:21:05,260
let's see what else we got oh so it

00:21:02,380 --> 00:21:08,800
seems like this year there was a number

00:21:05,260 --> 00:21:11,530
of new people at a new see Ruby

00:21:08,800 --> 00:21:14,170
committers added and I noticed that most

00:21:11,530 --> 00:21:16,180
of them were not Japanese they were they

00:21:14,170 --> 00:21:19,690
or didn't speak Japanese has it been

00:21:16,180 --> 00:21:21,400
hard integrating more non-japanese

00:21:19,690 --> 00:21:24,130
speakers into the mix I know that

00:21:21,400 --> 00:21:26,830
especially you know I know that that

00:21:24,130 --> 00:21:28,810
Zack had done a lot of documentation and

00:21:26,830 --> 00:21:30,820
various other things has it been it's a

00:21:28,810 --> 00:21:37,210
bit hard as I've been much of a change

00:21:30,820 --> 00:21:40,030
or so since several years ago maybe me

00:21:37,210 --> 00:21:43,150
for five years ago so the main decision

00:21:40,030 --> 00:21:45,190
was made in English suit so you guys

00:21:43,150 --> 00:21:48,250
don't have any problems and have the

00:21:45,190 --> 00:21:51,430
tracing that our decisions so the having

00:21:48,250 --> 00:21:54,340
committed not speak Japanese it's not

00:21:51,430 --> 00:21:57,280
that much problem so but we still have

00:21:54,340 --> 00:21:59,950
some kind of the you know the the issue

00:21:57,280 --> 00:22:02,950
tracking meeting in Japanese but it's

00:21:59,950 --> 00:22:05,500
not that mad that big issue so we have

00:22:02,950 --> 00:22:08,190
the desire language designers meeting in

00:22:05,500 --> 00:22:14,759
IRC or you're one of them so

00:22:08,190 --> 00:22:18,179
oh the domain so we make the you make

00:22:14,759 --> 00:22:20,269
the big decision in English so you guys

00:22:18,179 --> 00:22:24,690
and having the core committee

00:22:20,269 --> 00:22:28,139
non-japanese committee it is not a

00:22:24,690 --> 00:22:30,870
problem anymore longer huh any other

00:22:28,139 --> 00:22:35,120
questions out there I've got a few more

00:22:30,870 --> 00:22:39,750
of my list but I wanted to open it up oh

00:22:35,120 --> 00:22:41,460
we got one coming up Lou I thought I'd

00:22:39,750 --> 00:22:44,580
borrow from a panel discussion in the

00:22:41,460 --> 00:22:47,190
other room do you believe in good verse

00:22:44,580 --> 00:22:53,879
bad code and if so what is the

00:22:47,190 --> 00:22:56,909
difference between them it does you know

00:22:53,879 --> 00:23:01,429
the good that bad a very subjective so

00:22:56,909 --> 00:23:08,720
that depends on the context so and this

00:23:01,429 --> 00:23:12,480
you know the in a Chinese proverb the

00:23:08,720 --> 00:23:15,720
white no matter what white or black the

00:23:12,480 --> 00:23:19,500
cat catches the mouse is a good chat you

00:23:15,720 --> 00:23:23,759
know the working code is good cold i

00:23:19,500 --> 00:23:27,379
believe and then you know as for the

00:23:23,759 --> 00:23:31,559
maintenance ah you know the some code is

00:23:27,379 --> 00:23:35,909
less maintenance unpleasant or not so

00:23:31,559 --> 00:23:38,610
that that in the longer for the longer

00:23:35,909 --> 00:23:42,870
project the maintenance II might be more

00:23:38,610 --> 00:23:49,470
important than others so did I answer

00:23:42,870 --> 00:23:52,049
your questions yeah quite high so as you

00:23:49,470 --> 00:23:55,620
two are on stage I would like to hear

00:23:52,049 --> 00:24:01,769
what do you think about the Rubinius

00:23:55,620 --> 00:24:04,919
extinct trollface um oh oh you want me

00:24:01,769 --> 00:24:07,320
to go first okay you know I think no

00:24:04,919 --> 00:24:10,080
Brian I've talked about it you know and

00:24:07,320 --> 00:24:11,909
I think it's a good place to to do

00:24:10,080 --> 00:24:13,980
experiments to try and figure out you

00:24:11,909 --> 00:24:16,110
know like what could we take away where

00:24:13,980 --> 00:24:17,820
could we where could we see things going

00:24:16,110 --> 00:24:20,009
in the future and then you know once

00:24:17,820 --> 00:24:21,309
you've kind of thing you know it's it's

00:24:20,009 --> 00:24:23,320
difficult to know

00:24:21,309 --> 00:24:24,700
how to get somewhere unless you know

00:24:23,320 --> 00:24:26,470
where you're going you otherwise you

00:24:24,700 --> 00:24:28,840
just wander around and maybe you show up

00:24:26,470 --> 00:24:30,759
somewhere it can be very useful to say

00:24:28,840 --> 00:24:32,830
okay well I want to be out here I know

00:24:30,759 --> 00:24:34,179
that I can't get there directly but I

00:24:32,830 --> 00:24:36,549
know that I want to be there and

00:24:34,179 --> 00:24:38,620
Rubinius X can provide the ability to

00:24:36,549 --> 00:24:40,809
know where we might want to be and with

00:24:38,620 --> 00:24:42,549
experiments and all kinds of things and

00:24:40,809 --> 00:24:44,919
then once we figure that out then it's

00:24:42,549 --> 00:24:46,509
eat then it becomes the next discussion

00:24:44,919 --> 00:24:47,620
is okay how do we get to that place now

00:24:46,509 --> 00:24:49,799
that we know that that's where we want

00:24:47,620 --> 00:24:53,409
to be so I think it could be very useful

00:24:49,799 --> 00:24:56,590
for that kind of that kind of thing yeah

00:24:53,409 --> 00:24:58,179
and then the I believe do it's our

00:24:56,590 --> 00:25:00,100
responsibility to keep keep

00:24:58,179 --> 00:25:02,110
compatibility just because you know we

00:25:00,100 --> 00:25:04,659
have to maintain the tons of tons of

00:25:02,110 --> 00:25:08,080
ruby program running all over the world

00:25:04,659 --> 00:25:10,360
so the it's it is kind of difficult to

00:25:08,080 --> 00:25:15,389
make some kind of drastic change on that

00:25:10,360 --> 00:25:18,850
language for the day Ruby but you know

00:25:15,389 --> 00:25:21,610
but you know I'm actually relieved of a

00:25:18,850 --> 00:25:25,590
diversity to diverse so you have to make

00:25:21,610 --> 00:25:30,730
progress so without burden to keep

00:25:25,590 --> 00:25:33,309
backward compatibility so the I could

00:25:30,730 --> 00:25:37,360
still rovenia sex as is that kind that

00:25:33,309 --> 00:25:40,659
tempt to the seat the future so it may

00:25:37,360 --> 00:25:44,110
or may not succeed but that's okay we at

00:25:40,659 --> 00:25:49,029
least we make challenge to the future so

00:25:44,110 --> 00:25:52,690
the other to repeat as a true vivo

00:25:49,029 --> 00:25:55,600
diversity so I welcome that attempt like

00:25:52,690 --> 00:25:58,749
that vania sex yeah I mean I think that

00:25:55,600 --> 00:26:01,960
someone someone comment recently that

00:25:58,749 --> 00:26:04,059
you know the when a language tries to

00:26:01,960 --> 00:26:07,480
make a big compatibility change whether

00:26:04,059 --> 00:26:08,860
it be from 18 to 19 which you know

00:26:07,480 --> 00:26:11,799
wasn't really that big but it still

00:26:08,860 --> 00:26:13,570
required a lot of time even like Python

00:26:11,799 --> 00:26:17,529
2 to python 3 I guess is going to be a

00:26:13,570 --> 00:26:18,850
10 year transition now / 05 the pro 6 I

00:26:17,529 --> 00:26:22,450
don't even have to say anything more

00:26:18,850 --> 00:26:23,860
than that own thing hahaha 30 years

00:26:22,450 --> 00:26:25,749
unless it takes a long time unless

00:26:23,860 --> 00:26:27,519
there's very small migrations I mean

00:26:25,749 --> 00:26:29,529
there's even you know there's there's

00:26:27,519 --> 00:26:31,860
lots of C code out there that has never

00:26:29,529 --> 00:26:35,400
been updated for like c89 or

00:26:31,860 --> 00:26:36,630
or let alone 99 for that matter so it

00:26:35,400 --> 00:26:39,360
has to be it has to be a slow process

00:26:36,630 --> 00:26:41,580
but you have to know what that process

00:26:39,360 --> 00:26:42,720
should you have to know where you want

00:26:41,580 --> 00:26:49,320
to be in order to figure out what the

00:26:42,720 --> 00:26:50,910
process is yeah I agree yeah hi this

00:26:49,320 --> 00:26:53,010
question is about functional programming

00:26:50,910 --> 00:26:54,510
and ruby but before I get to the

00:26:53,010 --> 00:26:55,590
question I just want to say as an aside

00:26:54,510 --> 00:26:57,450
I've heard some people complain about

00:26:55,590 --> 00:26:59,760
the the stabby lambda and the dot

00:26:57,450 --> 00:27:01,679
parentheses notation but I think they're

00:26:59,760 --> 00:27:03,120
brilliant because if you're doing a lot

00:27:01,679 --> 00:27:04,679
of functional programming in Ruby and

00:27:03,120 --> 00:27:07,380
you have to use the word lambda and the

00:27:04,679 --> 00:27:09,799
word call it just becomes it's so much

00:27:07,380 --> 00:27:12,210
more cumbersome so I really like that

00:27:09,799 --> 00:27:14,460
anything that you'd like to tell us

00:27:12,210 --> 00:27:16,500
about your view of the role of

00:27:14,460 --> 00:27:17,910
functional programming Ruby and any

00:27:16,500 --> 00:27:21,330
developments that may be coming in the

00:27:17,910 --> 00:27:24,270
future with that estoy be lambda so I

00:27:21,330 --> 00:27:26,040
remember a few years ago the everyone

00:27:24,270 --> 00:27:27,450
was complaining but it's really gone now

00:27:26,040 --> 00:27:28,919
though isn't it no one really kitten

00:27:27,450 --> 00:27:33,450
owns everyone's like yeah fine whatever

00:27:28,919 --> 00:27:37,500
we'll use it yeah I want you did win you

00:27:33,450 --> 00:27:39,299
absolutely one well you know we've got

00:27:37,500 --> 00:27:41,669
more unicode now should we you know

00:27:39,299 --> 00:27:43,890
should we put the actual unit lambda

00:27:41,669 --> 00:27:46,740
unicode character as the eye for it in

00:27:43,890 --> 00:27:49,980
the grammar is it easy for you guys to

00:27:46,740 --> 00:27:53,010
write this out myself it's like shift

00:27:49,980 --> 00:27:55,740
alt k L M or something like that I don't

00:27:53,010 --> 00:27:57,750
know what it is you yeah for us yeah

00:27:55,740 --> 00:27:59,309
it's a lot easier to write emoji now

00:27:57,750 --> 00:28:03,690
that it is to write a lambda character

00:27:59,309 --> 00:28:06,299
yeah okay you say boys are lambda emoji

00:28:03,690 --> 00:28:08,700
oh what a missed opportunity that is

00:28:06,299 --> 00:28:12,720
yeah maybe maybe train kak so something

00:28:08,700 --> 00:28:15,750
yeah the Train character definitely not

00:28:12,720 --> 00:28:18,059
smiley poo not smiley poo but the Train

00:28:15,750 --> 00:28:19,919
character i like but there's there's

00:28:18,059 --> 00:28:22,020
someone's exercise for tonight's and the

00:28:19,919 --> 00:28:27,410
patch in to parsed out why yeah maybe

00:28:22,020 --> 00:28:30,179
you have a low yeah anyway so yeah

00:28:27,410 --> 00:28:32,340
stabby lambda yeah does good thing for

00:28:30,179 --> 00:28:34,410
invention do you I have a question now

00:28:32,340 --> 00:28:37,320
sort of i had this i wrote this down

00:28:34,410 --> 00:28:40,679
this is a good segue do you write stabby

00:28:37,320 --> 00:28:42,929
lambda where the arguments artin are not

00:28:40,679 --> 00:28:44,460
in parentheses do you ever do that do

00:28:42,929 --> 00:28:49,560
you ever write

00:28:44,460 --> 00:28:52,720
hyphen eggs stabbed space X comma Y

00:28:49,560 --> 00:28:54,070
curly brace that might not really how

00:28:52,720 --> 00:28:55,870
that's that's always my thing I have a

00:28:54,070 --> 00:28:57,690
friend that super hard to read but

00:28:55,870 --> 00:29:04,300
that's just me do you ever write that I

00:28:57,690 --> 00:29:07,900
sometimes yeah alright yeah I don't know

00:29:04,300 --> 00:29:15,220
I don't is that Eric was that a seattle

00:29:07,900 --> 00:29:16,900
style stabby lambda okay so so no

00:29:15,220 --> 00:29:19,630
seattle style on the stabby lambda yet

00:29:16,900 --> 00:29:22,300
yeah maybe in the end of the Cold goals

00:29:19,630 --> 00:29:25,360
yeah yeah yeah we can read this two

00:29:22,300 --> 00:29:27,520
characters yeah anyway yeah what was the

00:29:25,360 --> 00:29:29,020
Christian functional programming yeah i

00:29:27,520 --> 00:29:33,270
think the other question was what about

00:29:29,020 --> 00:29:39,700
dot / ends da the actual question was

00:29:33,270 --> 00:29:42,340
sorry it's okay to make a diversion oh

00:29:39,700 --> 00:29:44,950
yeah yeah but you got time to burn go

00:29:42,340 --> 00:29:46,720
ahead the actual question was what do

00:29:44,950 --> 00:29:48,670
you see as the role of functional

00:29:46,720 --> 00:29:50,380
programming in Ruby development and

00:29:48,670 --> 00:29:53,920
other any developments coming in the

00:29:50,380 --> 00:29:55,930
future you think ah you know it's it's

00:29:53,920 --> 00:29:57,250
quite difficult to adopt the full

00:29:55,930 --> 00:29:59,470
functional programming in the

00:29:57,250 --> 00:30:02,140
object-oriented german-language Luby rec

00:29:59,470 --> 00:30:03,790
will be but you know adapt some kind of

00:30:02,140 --> 00:30:06,580
adaptation to the functional programming

00:30:03,790 --> 00:30:08,260
is good food good good like a like a

00:30:06,580 --> 00:30:13,060
functional combination with an only that

00:30:08,260 --> 00:30:16,570
so good improved efficiency or the

00:30:13,060 --> 00:30:22,360
productivity of your program so as as

00:30:16,570 --> 00:30:27,340
long as it's good ah wanna say good good

00:30:22,360 --> 00:30:29,860
practice to I'm pretty positive about

00:30:27,340 --> 00:30:33,270
that does accepting some part of the

00:30:29,860 --> 00:30:36,490
functional programming so I if it is

00:30:33,270 --> 00:30:40,750
useful as long as it's useful I'd love

00:30:36,490 --> 00:30:46,750
to support some part of the functional

00:30:40,750 --> 00:30:48,910
programming good so 20 years ago this

00:30:46,750 --> 00:30:51,580
was kind of a pet project you were

00:30:48,910 --> 00:30:54,030
working on as a language and it's grown

00:30:51,580 --> 00:30:56,559
into something that we all use and is

00:30:54,030 --> 00:31:01,389
used in many different con

00:30:56,559 --> 00:31:03,429
texts I wonder how much risk are you

00:31:01,389 --> 00:31:06,669
usually willing to take in implementing

00:31:03,429 --> 00:31:08,679
a feature and how much you feel like you

00:31:06,669 --> 00:31:12,039
can't take the risks and put in a

00:31:08,679 --> 00:31:16,749
feature just because you want to as long

00:31:12,039 --> 00:31:18,850
as it as long as it doesn't break the

00:31:16,749 --> 00:31:20,919
existing code I'm pretty positive about

00:31:18,850 --> 00:31:22,480
the changing away enhancing framing

00:31:20,919 --> 00:31:26,080
language I didn't have a good example

00:31:22,480 --> 00:31:28,059
then you can dig back and we might need

00:31:26,080 --> 00:31:30,940
your laptop to figure this one out ok I

00:31:28,059 --> 00:31:33,509
went back and I was playing with writing

00:31:30,940 --> 00:31:36,610
some new language whatever for fun and

00:31:33,509 --> 00:31:44,110
and this is where related to dot / ends

00:31:36,610 --> 00:31:46,059
I found that in 2007 maybe that there

00:31:44,110 --> 00:31:48,340
had their that you had put in the

00:31:46,059 --> 00:31:51,100
ability for if there was a local

00:31:48,340 --> 00:31:52,659
variable that you could just call that

00:31:51,100 --> 00:31:54,549
local variable width / ends no dot

00:31:52,659 --> 00:31:57,580
remember that yeah I remember why didn't

00:31:54,549 --> 00:32:02,950
you take it out you know the too many

00:31:57,580 --> 00:32:05,740
people use local variable P oh and the

00:32:02,950 --> 00:32:08,559
mess of P and so they would do p / ends

00:32:05,740 --> 00:32:10,419
and you end up calling call oh that's

00:32:08,559 --> 00:32:12,519
the best answer I would never have

00:32:10,419 --> 00:32:15,970
thought of that answer but that totally

00:32:12,519 --> 00:32:18,789
makes sense oh yeah okay yeah but for

00:32:15,970 --> 00:32:23,110
those of you who haven't trawled back in

00:32:18,789 --> 00:32:25,330
the annals of our history there was a

00:32:23,110 --> 00:32:27,850
patch it was in it I think you had it

00:32:25,330 --> 00:32:29,740
was it was during like the one early one

00:32:27,850 --> 00:32:32,230
experimentation first I got that the

00:32:29,740 --> 00:32:37,330
idea I was I thought it was free yeah

00:32:32,230 --> 00:32:41,730
absolutely yeah so I was there were like

00:32:37,330 --> 00:32:41,730
a little myself was genius yeah yeah

00:32:41,789 --> 00:32:49,149
what about that yeah so soon after that

00:32:46,090 --> 00:32:50,590
I must have got troubled oh yeah because

00:32:49,149 --> 00:32:52,869
it was it was in her for like six months

00:32:50,590 --> 00:32:55,119
but it was like it was pretty early 19

00:32:52,869 --> 00:32:57,610
experimentation branch where there was a

00:32:55,119 --> 00:33:00,519
lot of things in there basically it was

00:32:57,610 --> 00:33:02,590
that I think you probably got it now

00:33:00,519 --> 00:33:04,509
that if there was a local a local

00:33:02,590 --> 00:33:06,610
variable you could just if you have the

00:33:04,509 --> 00:33:09,400
name of the local and / ends it would

00:33:06,610 --> 00:33:12,370
actually turn into dock haul

00:33:09,400 --> 00:33:16,780
the the local variable and so it's sort

00:33:12,370 --> 00:33:19,750
of what now dot / ends is but I told

00:33:16,780 --> 00:33:23,250
that totally makes sense that yet you p

00:33:19,750 --> 00:33:29,020
would sort of screw it up entirely

00:33:23,250 --> 00:33:33,100
stupid p right wait there in a good

00:33:29,020 --> 00:33:35,050
thing is this is a another good question

00:33:33,100 --> 00:33:38,590
do you feel like you're you know so

00:33:35,050 --> 00:33:40,540
you've been you've been working on one

00:33:38,590 --> 00:33:42,790
project you've worked on another project

00:33:40,540 --> 00:33:46,540
certainly but one big project for 20

00:33:42,790 --> 00:33:48,580
years have you seen your your the style

00:33:46,540 --> 00:33:50,530
of the code your style of your code

00:33:48,580 --> 00:33:51,970
evolved over time in such a way that

00:33:50,530 --> 00:33:54,100
like sometimes you go back and look at

00:33:51,970 --> 00:33:55,780
something be like oh man why did I ever

00:33:54,100 --> 00:33:57,970
think this was good style that kind of

00:33:55,780 --> 00:33:59,980
thing it has it been do you find that

00:33:57,970 --> 00:34:01,330
interesting because it's been one big

00:33:59,980 --> 00:34:03,130
code base obviously there's a lot of

00:34:01,330 --> 00:34:05,320
authors but you always sometimes you go

00:34:03,130 --> 00:34:07,570
back and find like oh I wrote this back

00:34:05,320 --> 00:34:08,919
in who knows how long ago because I can

00:34:07,570 --> 00:34:12,220
tell because the Styles weird or

00:34:08,919 --> 00:34:14,620
something like that I don't know the my

00:34:12,220 --> 00:34:19,210
style has been changed for a long time

00:34:14,620 --> 00:34:21,490
so do interestingly so when I I'm like

00:34:19,210 --> 00:34:23,830
his geek so I'd love to look into the

00:34:21,490 --> 00:34:26,860
the others pregnant language sauce cold

00:34:23,830 --> 00:34:29,440
and then when I look look into the other

00:34:26,860 --> 00:34:32,320
language I don't my name anymore any

00:34:29,440 --> 00:34:38,560
longer but you know that so school looks

00:34:32,320 --> 00:34:41,020
so familiar so you know I look back into

00:34:38,560 --> 00:34:43,510
the Ruby a counterpart of the Ruby

00:34:41,020 --> 00:34:48,880
source code it was identical it was

00:34:43,510 --> 00:34:51,700
copied the sort that so school was a

00:34:48,880 --> 00:34:55,750
micelle Wow yeah this is quite him

00:34:51,700 --> 00:34:57,730
amazing huh yeah but I the my prime

00:34:55,750 --> 00:35:02,530
minister hasn't been changed for last 20

00:34:57,730 --> 00:35:06,040
years so as a as a programming promised

00:35:02,530 --> 00:35:09,820
I wise so I haven't that kind of feeling

00:35:06,040 --> 00:35:12,010
but you know the I as a knowledge wise

00:35:09,820 --> 00:35:17,530
island I have the improved that I

00:35:12,010 --> 00:35:20,530
believe so so the maybe the algorithm I

00:35:17,530 --> 00:35:22,520
to chose was wrong sometime and maybe

00:35:20,530 --> 00:35:25,250
the data structure

00:35:22,520 --> 00:35:28,340
I chose was wrong in back into any

00:35:25,250 --> 00:35:30,710
tariffs few if they are 20 years ago so

00:35:28,340 --> 00:35:34,090
me by the the premium style-wise I

00:35:30,710 --> 00:35:36,980
haven't changed has your sort of a

00:35:34,090 --> 00:35:40,430
another sort of soft question if you

00:35:36,980 --> 00:35:42,350
will has your like development setup

00:35:40,430 --> 00:35:45,260
changed much I remember or do you still

00:35:42,350 --> 00:35:47,810
do most rework on linux yeah i still

00:35:45,260 --> 00:35:51,080
using linux and I you still use Emacs

00:35:47,810 --> 00:35:53,870
okay I'm old guy have you have you

00:35:51,080 --> 00:35:57,770
upgraded your laptop really yeah okay

00:35:53,870 --> 00:36:01,250
good oh yeah but my laptop is two year

00:35:57,770 --> 00:36:03,440
old so I maybe it's time to upgrade okay

00:36:01,250 --> 00:36:07,430
so I'm sure you can find someone to get

00:36:03,440 --> 00:36:13,450
you a laptop if you're gonna need it uh

00:36:07,430 --> 00:36:18,320
uh yeah we have a question ma-mutt yes

00:36:13,450 --> 00:36:24,620
how how Ruby is changing Japan is what

00:36:18,320 --> 00:36:26,630
how how Ruby is changing Japan ah do you

00:36:24,620 --> 00:36:28,880
see a lot of Japanese programmers I know

00:36:26,630 --> 00:36:31,130
that for a long time ruby was bigger in

00:36:28,880 --> 00:36:32,870
the u.s. than it was in Japan has it

00:36:31,130 --> 00:36:38,030
said do you feel like it's changed over

00:36:32,870 --> 00:36:39,770
time uh maybe I don't know I know that

00:36:38,030 --> 00:36:42,470
it's I know that what one thing that we

00:36:39,770 --> 00:36:44,180
talked about the years ago was it was it

00:36:42,470 --> 00:36:46,010
was harder that one of the reasons to do

00:36:44,180 --> 00:36:48,800
the standardization was you wanted to

00:36:46,010 --> 00:36:50,570
allow Ruby to be used in more Japanese

00:36:48,800 --> 00:36:53,090
companies a lot of times they required

00:36:50,570 --> 00:36:57,230
using a standardized language it has

00:36:53,090 --> 00:37:02,090
that helped or help do you know I guess

00:36:57,230 --> 00:37:03,980
so so some Sun you know the government

00:37:02,090 --> 00:37:08,350
subsidiary organization requires that

00:37:03,980 --> 00:37:12,770
kind of standard to be to use language

00:37:08,350 --> 00:37:16,040
in the assistance and the having iso

00:37:12,770 --> 00:37:19,250
standard could help to choose Ruby as

00:37:16,040 --> 00:37:22,150
the implementation language and it may

00:37:19,250 --> 00:37:25,190
be some big bigger company like a

00:37:22,150 --> 00:37:27,110
Japanese registry in the industries are

00:37:25,190 --> 00:37:29,180
basically controlled by bigger companies

00:37:27,110 --> 00:37:31,460
like Toshiba giochi and is he also

00:37:29,180 --> 00:37:35,120
looked at and fidgeted and

00:37:31,460 --> 00:37:37,820
and these companies gladly accepting

00:37:35,120 --> 00:37:42,370
Ruby to to implement the assistance so

00:37:37,820 --> 00:37:46,160
the you know the few years ago so the

00:37:42,370 --> 00:37:49,760
you know Ruby is used as a hobby program

00:37:46,160 --> 00:37:53,440
orders small startups which is not as

00:37:49,760 --> 00:37:58,060
popular as in the states and but right

00:37:53,440 --> 00:38:00,620
currently the ruby is or used by the

00:37:58,060 --> 00:38:05,390
from bigger company to small companies

00:38:00,620 --> 00:38:07,640
so so as a slit as long as in the web

00:38:05,390 --> 00:38:10,400
field the ruby is pretty popular in

00:38:07,640 --> 00:38:12,710
Japan as well that's a good segue I know

00:38:10,400 --> 00:38:14,660
that Ruby world is coming up and I know

00:38:12,710 --> 00:38:17,510
that we've also got the Ruby Association

00:38:14,660 --> 00:38:19,040
do you d do you want to give us a

00:38:17,510 --> 00:38:20,680
preview of what's going to go on at Ruby

00:38:19,040 --> 00:38:23,030
world and the other question I had was

00:38:20,680 --> 00:38:26,960
do you feel like you know has the Ruby

00:38:23,030 --> 00:38:28,490
Association bin has helped Ruby inside

00:38:26,960 --> 00:38:30,080
Japan or how Ruby in general do you

00:38:28,490 --> 00:38:37,670
think it's been has it been supposed to

00:38:30,080 --> 00:38:40,130
have you know the will be in back in 927

00:38:37,670 --> 00:38:44,060
I guess you know the the open source

00:38:40,130 --> 00:38:47,870
world and the IT industry world are

00:38:44,060 --> 00:38:49,640
pretty separated back then so the one of

00:38:47,870 --> 00:38:53,480
the purpose of the Ruby association is

00:38:49,640 --> 00:38:58,280
to to bridge the gap between the suit

00:38:53,480 --> 00:39:00,950
people there the geek people so the we

00:38:58,280 --> 00:39:03,980
are doing pretty well at least in Japan

00:39:00,950 --> 00:39:09,950
so we have some kind the certification

00:39:03,980 --> 00:39:12,320
to to provide proof to be a Ruby

00:39:09,950 --> 00:39:17,300
programmer to suit people yeah and then

00:39:12,320 --> 00:39:24,890
some kind of the you know the grant to

00:39:17,300 --> 00:39:28,790
to help the the TD hook seeing if to ask

00:39:24,890 --> 00:39:31,400
to TD works 22 thus the geek people like

00:39:28,790 --> 00:39:33,170
our maintaining 193 or three yeah

00:39:31,400 --> 00:39:35,330
meeting the old version is kind of

00:39:33,170 --> 00:39:38,030
supporting Ruby itself yeah calling

00:39:35,330 --> 00:39:40,370
itself you know and we have some kind of

00:39:38,030 --> 00:39:43,040
grant like a helping side will be

00:39:40,370 --> 00:39:44,250
scientific will be to enhance the Ruby

00:39:43,040 --> 00:39:46,650
application to

00:39:44,250 --> 00:39:53,550
the scientific computing or maybe some

00:39:46,650 --> 00:39:59,090
kinda the improvement on well of the web

00:39:53,550 --> 00:40:02,400
or even and our mobile mobile world so

00:39:59,090 --> 00:40:04,830
what well you know what kind of stuffs

00:40:02,400 --> 00:40:06,660
gonna go on at ruby world no you know

00:40:04,830 --> 00:40:08,310
like I don't think probably most of the

00:40:06,660 --> 00:40:10,590
people here have yeah there will be

00:40:08,310 --> 00:40:14,550
world confidence here is held in japan

00:40:10,590 --> 00:40:18,030
in two weeks later i guess yeah and then

00:40:14,550 --> 00:40:20,490
and it would be held in the monthly

00:40:18,030 --> 00:40:22,200
japan which is my hometown and then the

00:40:20,490 --> 00:40:25,470
local government sponsored that

00:40:22,200 --> 00:40:29,040
conference so then the the conference

00:40:25,470 --> 00:40:32,310
itself is mostly focus on businesses so

00:40:29,040 --> 00:40:34,770
that maybe half of the attendees wear

00:40:32,310 --> 00:40:38,700
suits it's kind of exceptional for a

00:40:34,770 --> 00:40:42,480
conference yes in it it's very rare yeah

00:40:38,700 --> 00:40:44,790
and then the part of the the purpose is

00:40:42,480 --> 00:40:48,750
the to introduce some kind of the use

00:40:44,790 --> 00:40:52,770
case of the ruby in the nit field okay

00:40:48,750 --> 00:40:54,930
like our suit people won't know how

00:40:52,770 --> 00:41:00,270
other companies use Ruby for their

00:40:54,930 --> 00:41:02,250
businesses so the how the decisions half

00:41:00,270 --> 00:41:05,910
of the session is focusing on the use

00:41:02,250 --> 00:41:08,130
cases the other half is focusing on into

00:41:05,910 --> 00:41:12,090
this new technology to two people and

00:41:08,130 --> 00:41:15,470
then we invited Maj on board the of

00:41:12,090 --> 00:41:17,970
github as a keynote speaker so too we

00:41:15,470 --> 00:41:20,100
even introduced about some time of the

00:41:17,970 --> 00:41:23,700
social calling to to Japanese people

00:41:20,100 --> 00:41:26,760
cool yeah and it's this world conference

00:41:23,700 --> 00:41:30,330
oh that right we have this and we have

00:41:26,760 --> 00:41:33,450
aa that attendees and speakers from

00:41:30,330 --> 00:41:34,860
other countries as well it's it's

00:41:33,450 --> 00:41:37,590
beautiful there if you guys ever get the

00:41:34,860 --> 00:41:40,950
chance to go it's a lot of fun yeah um

00:41:37,590 --> 00:41:42,390
yeah we've questioned imats i came in a

00:41:40,950 --> 00:41:44,790
few minutes late so I apologize if

00:41:42,390 --> 00:41:46,730
someone already asked um but Matt a man

00:41:44,790 --> 00:41:49,380
Eddie told me on this morning that you

00:41:46,730 --> 00:41:52,350
told him we should be using a different

00:41:49,380 --> 00:41:55,530
version of the Mallik c library called

00:41:52,350 --> 00:41:57,720
team Alec Dima look I guess Jay Malik

00:41:55,530 --> 00:41:58,980
that it would allow us to run you know

00:41:57,720 --> 00:42:01,800
to garbage collection it would help us

00:41:58,980 --> 00:42:04,290
run our programs faster or release

00:42:01,800 --> 00:42:06,869
memory back to the system were quickly

00:42:04,290 --> 00:42:11,720
yours can you explain what you meant oh

00:42:06,869 --> 00:42:14,070
yeah you know the the syrupy with our

00:42:11,720 --> 00:42:16,380
delegates the underlining memory

00:42:14,070 --> 00:42:20,160
management to malloc and free so that

00:42:16,380 --> 00:42:24,060
it's up to that these implementation to

00:42:20,160 --> 00:42:26,640
how return these pages to operate the

00:42:24,060 --> 00:42:30,630
system or not so some implementation

00:42:26,640 --> 00:42:34,650
Malik keep every page is allocated

00:42:30,630 --> 00:42:37,260
inside to improve the performance but

00:42:34,650 --> 00:42:40,650
you know that means that the process

00:42:37,260 --> 00:42:43,380
will grow and grow and grow so the a

00:42:40,650 --> 00:42:45,830
friend of mine working in a program

00:42:43,380 --> 00:42:48,750
named the flu and D which is kind of

00:42:45,830 --> 00:42:51,810
high performance educate logging system

00:42:48,750 --> 00:42:58,190
and they had some kind of memory program

00:42:51,810 --> 00:43:03,060
the soul the process will brought using

00:42:58,190 --> 00:43:06,780
using da Jie Jie lipsy Mellark so the

00:43:03,060 --> 00:43:09,300
day without about that garbage collector

00:43:06,780 --> 00:43:12,960
so there should be no only like they did

00:43:09,300 --> 00:43:16,170
out and then we I walk with him but we

00:43:12,960 --> 00:43:20,910
then so they found out its Malik that

00:43:16,170 --> 00:43:24,570
keep smell memory so they later they

00:43:20,910 --> 00:43:27,390
replace the Mallik from she would she

00:43:24,570 --> 00:43:30,900
leave Malaga to je malach the which

00:43:27,390 --> 00:43:33,000
returns the the memory pages the unused

00:43:30,900 --> 00:43:36,990
memory pages and then the process size

00:43:33,000 --> 00:43:39,480
will reduce dramatically so the day it's

00:43:36,990 --> 00:43:44,970
it's quite easy to use that just use the

00:43:39,480 --> 00:43:47,520
LD play world so then the for them the

00:43:44,970 --> 00:43:49,740
it has a drumming dramatic effect okay

00:43:47,520 --> 00:43:52,859
so maybe you have some kind of thermal

00:43:49,740 --> 00:43:55,980
problem memory size problem you can at

00:43:52,859 --> 00:43:58,650
least you can try jayma lock for if if

00:43:55,980 --> 00:44:02,130
you are using a linux a real pro tip

00:43:58,650 --> 00:44:03,420
here people pro tip thank you I think

00:44:02,130 --> 00:44:06,400
we've got time for a couple more

00:44:03,420 --> 00:44:09,010
questions so yeah

00:44:06,400 --> 00:44:12,279
no I'm walking Oh dr. Connor and

00:44:09,010 --> 00:44:18,609
jealousy so then I Assad radius

00:44:12,279 --> 00:44:22,869
Christian so country or oak moda Marik

00:44:18,609 --> 00:44:27,940
have passed with organization but we

00:44:22,869 --> 00:44:32,859
have severe to them so this optimization

00:44:27,940 --> 00:44:37,690
and Ruby usage conflict several times so

00:44:32,859 --> 00:44:41,470
our integrity people realized why it

00:44:37,690 --> 00:44:47,970
makes and we plan to implement so they I

00:44:41,470 --> 00:44:51,190
expect so this situation can be improved

00:44:47,970 --> 00:44:55,569
next to your whole thing that's good

00:44:51,190 --> 00:44:58,990
news yeah great so after that you don't

00:44:55,569 --> 00:45:03,339
have to worry about Jay okay double

00:44:58,990 --> 00:45:05,500
protip look at that yes I find the

00:45:03,339 --> 00:45:07,270
internal C code that you wrote for the

00:45:05,500 --> 00:45:08,980
MRI to be very elegant in a source of

00:45:07,270 --> 00:45:12,359
inspiration but at the time you were

00:45:08,980 --> 00:45:17,289
writing it C++ seem to be very in vogue

00:45:12,359 --> 00:45:19,000
why did you not use C++ for Ruby if you

00:45:17,289 --> 00:45:21,400
talk about that a little bit why did not

00:45:19,000 --> 00:45:24,490
choose the c++ full to implement will be

00:45:21,400 --> 00:45:28,240
you meet us it was the early 90s you

00:45:24,490 --> 00:45:30,279
know c++ was cool uh-huh yeah but you

00:45:28,240 --> 00:45:35,680
know you wanted to be cool you were

00:45:30,279 --> 00:45:38,579
young kid you know but the this decent

00:45:35,680 --> 00:45:42,190
of reasons but the biggest one is the

00:45:38,579 --> 00:45:45,569
having support of object sustained and a

00:45:42,190 --> 00:45:50,650
ruby object system will confuse my brain

00:45:45,569 --> 00:45:54,339
very much so the sea not having object

00:45:50,650 --> 00:45:56,650
system is much better for me so and the

00:45:54,339 --> 00:46:00,460
second one is the i used to be a tsipras

00:45:56,650 --> 00:46:04,809
programmer and I was troubled I hate a

00:46:00,460 --> 00:46:07,690
c++ attack back then you know the bad

00:46:04,809 --> 00:46:09,400
day we didn't have apps at em place we

00:46:07,690 --> 00:46:13,119
didn't have the multiple inheritance so

00:46:09,400 --> 00:46:17,470
it the better compile time was so slow

00:46:13,119 --> 00:46:18,340
it would take hours to compile so so

00:46:17,470 --> 00:46:20,770
that's

00:46:18,340 --> 00:46:22,540
that's one of the reason I didn't used

00:46:20,770 --> 00:46:25,990
to what were you you know when you

00:46:22,540 --> 00:46:28,090
started it I don't know I have asked

00:46:25,990 --> 00:46:32,830
this question to you when you started

00:46:28,090 --> 00:46:35,590
were you thinking at the time oh this is

00:46:32,830 --> 00:46:36,790
just a hobby I'll open source it I mean

00:46:35,590 --> 00:46:38,950
there were probably you probably weren't

00:46:36,790 --> 00:46:41,260
thinking in the terms open source but I

00:46:38,950 --> 00:46:42,940
know that you when you you were talking

00:46:41,260 --> 00:46:44,140
with your friends and you put the source

00:46:42,940 --> 00:46:46,300
code up were you thinking at the time

00:46:44,140 --> 00:46:48,370
like I'll just let anybody play with

00:46:46,300 --> 00:46:51,610
this that kind of thing is that true

00:46:48,370 --> 00:46:54,010
yeah i was i was raised by the free

00:46:51,610 --> 00:46:56,500
software died I learned program great

00:46:54,010 --> 00:46:59,230
rip through being a mac sauce cold and

00:46:56,500 --> 00:47:01,690
they used in CC to compile program so I

00:46:59,230 --> 00:47:04,030
learned a lot from reading other free

00:47:01,690 --> 00:47:06,280
software free free parameters of the

00:47:04,030 --> 00:47:11,080
programming languages so it's quite

00:47:06,280 --> 00:47:14,650
natural for me to make my software to as

00:47:11,080 --> 00:47:19,900
up sauce so you know time I'm a free

00:47:14,650 --> 00:47:21,640
soft guy so so so I didn't any I didn't

00:47:19,900 --> 00:47:24,160
have any trouble too so if you were

00:47:21,640 --> 00:47:25,720
precisely to get back to his question if

00:47:24,160 --> 00:47:27,340
you were reading a lot of free software

00:47:25,720 --> 00:47:28,420
a lot of free software at the time was

00:47:27,340 --> 00:47:29,950
all in seat they're probably there

00:47:28,420 --> 00:47:33,160
probably wasn't very much free software

00:47:29,950 --> 00:47:36,010
in C++ no but I don't think GCC got c++

00:47:33,160 --> 00:47:37,810
support until after that anyway so it

00:47:36,010 --> 00:47:40,000
would be very difficult to be piece of

00:47:37,810 --> 00:47:43,920
free software and B c++ that might be

00:47:40,000 --> 00:47:43,920
another another sort of good reason

00:47:44,070 --> 00:47:49,690
that's about that so this is a question

00:47:47,290 --> 00:47:51,700
another question the hurricane to me

00:47:49,690 --> 00:47:54,070
sort of maybe wrap up fun question for

00:47:51,700 --> 00:47:57,220
the end do you want to tell the like

00:47:54,070 --> 00:47:59,260
story about how it was almost called

00:47:57,220 --> 00:48:01,330
like it started off as a list Evelyn

00:47:59,260 --> 00:48:03,010
tation before it turned into Ruby max

00:48:01,330 --> 00:48:04,450
list nationally yeah I do want to tell

00:48:03,010 --> 00:48:07,450
that story and then we'll kind of close

00:48:04,450 --> 00:48:09,520
on that uh-huh you know I I had been a

00:48:07,450 --> 00:48:14,680
big gamble is programming language for a

00:48:09,520 --> 00:48:17,710
long time but I but you know I i would

00:48:14,680 --> 00:48:20,680
just just wanna be I had been in just

00:48:17,710 --> 00:48:25,650
wanna be so I had never never had a

00:48:20,680 --> 00:48:28,750
chance to to program in Lisp in in

00:48:25,650 --> 00:48:30,820
reality shuttle so I just write some

00:48:28,750 --> 00:48:31,190
small piece of loot is cold and this is

00:48:30,820 --> 00:48:33,440
all this

00:48:31,190 --> 00:48:35,960
is quite nice I said this language has a

00:48:33,440 --> 00:48:37,910
lot of features this language give gave

00:48:35,960 --> 00:48:41,180
me a lot of freedom so I like this

00:48:37,910 --> 00:48:43,579
programming language and then then at

00:48:41,180 --> 00:48:47,869
the time I started to create my own

00:48:43,579 --> 00:48:51,260
programming language so I wanted to buy

00:48:47,869 --> 00:48:54,170
programming language as free as Lisp as

00:48:51,260 --> 00:48:57,560
powerful as list but without will but

00:48:54,170 --> 00:49:02,030
with those parentheses and object system

00:48:57,560 --> 00:49:04,010
so that in that way so I take them some

00:49:02,030 --> 00:49:08,750
come to that i implement that some kind

00:49:04,010 --> 00:49:11,599
of the list virtual machine and then I

00:49:08,750 --> 00:49:14,240
put some kind of small talk objects to

00:49:11,599 --> 00:49:16,670
stand at the subset of small dog object

00:49:14,240 --> 00:49:19,640
system and put the pro functionality on

00:49:16,670 --> 00:49:23,630
top of the object system so that that is

00:49:19,640 --> 00:49:26,780
the kind of like the process to create

00:49:23,630 --> 00:49:29,630
the printer that of the imprint a design

00:49:26,780 --> 00:49:31,460
and implement implementation of there

00:49:29,630 --> 00:49:33,500
will be programming language so did it

00:49:31,460 --> 00:49:35,690
look like it was a time where it looked

00:49:33,500 --> 00:49:37,280
like was actually a lisp before you

00:49:35,690 --> 00:49:40,970
started like being like I think I want

00:49:37,280 --> 00:49:45,560
my own syntax know it okay it is like

00:49:40,970 --> 00:49:48,290
that from the beginning okay okay oh yes

00:49:45,560 --> 00:49:50,480
so I actually have two questions okay

00:49:48,290 --> 00:49:55,790
did you know that grape nuts are neither

00:49:50,480 --> 00:49:57,310
a nut or a great great it's just TV just

00:49:55,790 --> 00:50:01,390
being silly

00:49:57,310 --> 00:50:04,120
with grape grape nuts are a serial rape

00:50:01,390 --> 00:50:06,820
enough they're sick they're there is

00:50:04,120 --> 00:50:09,180
cereal and they are neither a grape

00:50:06,820 --> 00:50:15,010
Noren it is don't worry about it yeah

00:50:09,180 --> 00:50:16,930
I'm sorry so the second so the second

00:50:15,010 --> 00:50:18,820
question is and this is a this is I'm

00:50:16,930 --> 00:50:20,980
just asking this because it's a ruby

00:50:18,820 --> 00:50:25,440
comp tradition when are we gonna get a

00:50:20,980 --> 00:50:28,300
macro system in Ruby it's a good lift

00:50:25,440 --> 00:50:30,750
only telling you traditional answer

00:50:28,300 --> 00:50:30,750
never

00:50:35,810 --> 00:50:40,910
well I think that's probably a great

00:50:38,570 --> 00:50:43,820
place to end if you no one has any other

00:50:40,910 --> 00:50:47,120
questions thanks again for coming

00:50:43,820 --> 00:50:50,090
everybody to Ruby comp this here be sure

00:50:47,120 --> 00:50:51,740
to say thank you to everybody working

00:50:50,090 --> 00:50:54,530
the registration desk on the way out and

00:50:51,740 --> 00:50:57,460
I will see you all in San Diego next

00:50:54,530 --> 00:50:57,460

YouTube URL: https://www.youtube.com/watch?v=-8299n-Kusg


