Title: Garden City Ruby Conference - Fun with Ruby and Arduino
Publication date: 2020-01-23
Playlist: Garden City Ruby 2015
Description: 
	By, Anmol Agarwal

“Internet of things” is the concept of basically connecting any device with an on and off switch to the Internet. IoT has been possible through devices like Arduino, Raspberry Pi and many more. Although most of the APIs to work with them are available in Ruby, I haven’t seen many projects programmed in Ruby, but C++, Python or JS. I would like to share my approach, resources etc I learned from and show things that are possible. I hope audience would learn new possibilities with Ruby and not have to spent time learning a new language to interact with hardware.

Help us caption & translate this video!

http://amara.org/v/GF2l/
Captions: 
	00:00:14,240 --> 00:00:20,190
for the introduction good afternoon

00:00:17,430 --> 00:00:22,560
everyone and I hope you guys are

00:00:20,190 --> 00:00:24,330
enjoying the conference so first of all

00:00:22,560 --> 00:00:26,640
just a quick show of hands how many

00:00:24,330 --> 00:00:29,509
people have world with our Reno or

00:00:26,640 --> 00:00:34,910
raspberry pi internet of things before

00:00:29,509 --> 00:00:34,910
okay some numbers what language you use

00:00:35,420 --> 00:00:42,510
jaws yeah let's pick up speaker

00:00:37,940 --> 00:00:47,510
JavaScript Ruby okay great there's

00:00:42,510 --> 00:00:52,199
somebody from C C++ anything else python

00:00:47,510 --> 00:01:01,980
by then okay so you have worked with

00:00:52,199 --> 00:01:04,110
Ruby nice so great okay so because most

00:01:01,980 --> 00:01:08,430
of the people here are not aware of it

00:01:04,110 --> 00:01:10,230
so this is kind of a perfect talk to get

00:01:08,430 --> 00:01:11,970
you introduced to internal things and

00:01:10,230 --> 00:01:15,540
how you could make it possible through

00:01:11,970 --> 00:01:19,829
be so my name is Anne Milagro land I'm a

00:01:15,540 --> 00:01:22,470
UX UI designer I started coding about a

00:01:19,829 --> 00:01:24,960
year and a half back with Ruby and rails

00:01:22,470 --> 00:01:27,750
and I've been working on just side

00:01:24,960 --> 00:01:30,630
projects but the throughout time I have

00:01:27,750 --> 00:01:32,759
gained some experience and I'm otter

00:01:30,630 --> 00:01:35,310
direct means everything that I know is

00:01:32,759 --> 00:01:39,119
self-taught during my free time I sketch

00:01:35,310 --> 00:01:40,890
and play basketball so first of all I

00:01:39,119 --> 00:01:42,960
would like to show you a video which

00:01:40,890 --> 00:01:46,920
actually got me hooked to Internet of

00:01:42,960 --> 00:01:49,500
Things and after watching that video

00:01:46,920 --> 00:01:52,350
only I decided okay I need to learn this

00:01:49,500 --> 00:01:58,040
means how is it even happening so it is

00:01:52,350 --> 00:01:58,040
just a two-minute video okay

00:02:08,600 --> 00:02:11,830
amazon yeah

00:03:44,570 --> 00:03:49,710
everyone is an adventure so we created

00:03:47,460 --> 00:03:52,110
thankee thankee to let you invent just

00:03:49,710 --> 00:03:53,910
buy a yearbook alligator clip stuff like

00:03:52,110 --> 00:03:55,830
bananas to your make you make when you

00:03:53,910 --> 00:03:58,500
touch the banana your computer justins

00:03:55,830 --> 00:04:01,350
you're touching people the front has

00:03:58,500 --> 00:04:03,300
arrogance spacebar and mouse left click

00:04:01,350 --> 00:04:04,800
when you're ready for more clip the mix

00:04:03,300 --> 00:04:06,630
makes you over and you've got more

00:04:04,800 --> 00:04:08,760
keyboard keys and support for the mouse

00:04:06,630 --> 00:04:11,010
you can even use the board like gardena

00:04:08,760 --> 00:04:12,840
when you are ready no program no red

00:04:11,010 --> 00:04:15,930
word you don't even have to install

00:04:12,840 --> 00:04:18,299
software just plug it into recipe or

00:04:15,930 --> 00:04:27,540
your meeting today start changing how

00:04:18,299 --> 00:04:31,340
the world works yeah no doubt see you

00:04:27,540 --> 00:04:35,010
Dave and I could play bananas as piano

00:04:31,340 --> 00:04:36,750
anyway so this is the video that my

00:04:35,010 --> 00:04:39,210
friend should and I was immediately hope

00:04:36,750 --> 00:04:43,470
that okay I need to learn this stuff how

00:04:39,210 --> 00:04:46,100
is this even happening so this concept

00:04:43,470 --> 00:04:49,950
is called Internet of Things AK IOT and

00:04:46,100 --> 00:04:52,380
you might ask her what is IOT and there

00:04:49,950 --> 00:04:55,080
are like numerous explanations to that i

00:04:52,380 --> 00:04:56,430
will give explain differently but i

00:04:55,080 --> 00:04:59,370
would give you just a simplest

00:04:56,430 --> 00:05:01,530
definition which is coyotes basically

00:04:59,370 --> 00:05:05,100
connecting any device with an on and off

00:05:01,530 --> 00:05:07,560
switch to the internet or and/or to each

00:05:05,100 --> 00:05:09,980
other so what does it mean so the

00:05:07,560 --> 00:05:13,200
usually we have smartphones and laptops

00:05:09,980 --> 00:05:17,150
which communicates with the server and

00:05:13,200 --> 00:05:20,070
stored it into databases and all but

00:05:17,150 --> 00:05:22,350
with Internet of Things it's not just as

00:05:20,070 --> 00:05:26,370
smartphones and tablets and desktops

00:05:22,350 --> 00:05:27,900
miss you could use everyday the things

00:05:26,370 --> 00:05:30,700
that you see around yourself everyday

00:05:27,900 --> 00:05:32,860
like your lamp camera bicycle

00:05:30,700 --> 00:05:35,890
machine coffee maker anything and

00:05:32,860 --> 00:05:37,630
basically you can make those things talk

00:05:35,890 --> 00:05:41,950
to you they can understand you so

00:05:37,630 --> 00:05:44,740
suppose you are coming back to home from

00:05:41,950 --> 00:05:47,320
work your home understands that okay you

00:05:44,740 --> 00:05:50,040
had just arrived so let's turn on the

00:05:47,320 --> 00:05:52,600
fan and light for you and maybe clear

00:05:50,040 --> 00:05:56,140
relaxing music at the background so

00:05:52,600 --> 00:05:58,150
things are means nonliving things our

00:05:56,140 --> 00:06:02,470
daily life things are talking to use

00:05:58,150 --> 00:06:04,390
that is Internet of Things and I one of

00:06:02,470 --> 00:06:06,970
I hope that by the end of this talk

00:06:04,390 --> 00:06:09,670
means you would be excited about what I

00:06:06,970 --> 00:06:14,020
OD is and make many projects and

00:06:09,670 --> 00:06:17,830
libraries for of in Ruby so what about

00:06:14,020 --> 00:06:20,140
Ruby means how is a Miss how's Ruby in

00:06:17,830 --> 00:06:21,970
the landscape of peyote so when I

00:06:20,140 --> 00:06:24,280
started learning water and I found out

00:06:21,970 --> 00:06:27,760
that I OT is currently dominated by

00:06:24,280 --> 00:06:30,220
three languages he C++ Python and

00:06:27,760 --> 00:06:32,550
JavaScript and I found out that there

00:06:30,220 --> 00:06:35,710
were not many projects in Ruby and and

00:06:32,550 --> 00:06:37,420
it was quite surprising and the because

00:06:35,710 --> 00:06:39,910
Ruby supports modular programming means

00:06:37,420 --> 00:06:42,190
we reuse the code we use gems all the

00:06:39,910 --> 00:06:44,080
time and although I know John was

00:06:42,190 --> 00:06:47,230
preferred I loved would be too much to

00:06:44,080 --> 00:06:49,840
even go to do this internet of things in

00:06:47,230 --> 00:06:54,070
JavaScript so I wanted to do it in Ruby

00:06:49,840 --> 00:06:56,440
only then I began to look nice have

00:06:54,070 --> 00:06:59,080
somebody even contributed to this so i

00:06:56,440 --> 00:07:01,480
YouTubed a ruby and Audrina and these

00:06:59,080 --> 00:07:04,120
three people came up Austin Vance wrong

00:07:01,480 --> 00:07:07,600
events and jim furyk and i'll tell you

00:07:04,120 --> 00:07:09,520
what those guys have done and so the

00:07:07,600 --> 00:07:12,490
Ruby tends to work with re no currently

00:07:09,520 --> 00:07:16,810
are three of them serial port are two

00:07:12,490 --> 00:07:18,400
and Dino so if you guys most of the

00:07:16,810 --> 00:07:21,400
people haven't worked here with her

00:07:18,400 --> 00:07:25,230
internet of things so you have a

00:07:21,400 --> 00:07:27,700
microcontroller like re no board and

00:07:25,230 --> 00:07:31,300
basically you define what components are

00:07:27,700 --> 00:07:33,280
connected to which pins and send me said

00:07:31,300 --> 00:07:36,400
it value as digital high or digital know

00:07:33,280 --> 00:07:39,580
those kind of things so the same thing

00:07:36,400 --> 00:07:42,449
of digital higher digital no read right

00:07:39,580 --> 00:07:45,120
so those exact so I see

00:07:42,449 --> 00:07:47,039
thing that you do in C C++ it's in Ruby

00:07:45,120 --> 00:07:50,999
style so that's what's your code Jam is

00:07:47,039 --> 00:07:52,740
about next racer r2 r2 is a very

00:07:50,999 --> 00:07:54,960
extensive Ruby library and i highly

00:07:52,740 --> 00:07:57,870
recommend you guys to check it out r 2

00:07:54,960 --> 00:07:59,819
is Ruby on robots and as it you see you

00:07:57,870 --> 00:08:01,639
can see that we believe that it's time

00:07:59,819 --> 00:08:04,860
to bring ruby and robots together and

00:08:01,639 --> 00:08:07,650
well it's very extensive because if you

00:08:04,860 --> 00:08:09,389
check out these this website it supports

00:08:07,650 --> 00:08:11,490
the platform not of just are you know

00:08:09,389 --> 00:08:16,650
but also cross bleep I'll be reborn as

00:08:11,490 --> 00:08:19,560
Pharaoh Joyce take even groans so it's

00:08:16,650 --> 00:08:24,029
very it's a means you could really build

00:08:19,560 --> 00:08:26,099
a lot of stuffs in this and next the

00:08:24,029 --> 00:08:29,310
last with Dino gem which I started

00:08:26,099 --> 00:08:34,019
learning from and then this gem is made

00:08:29,310 --> 00:08:36,510
by Austin vans and this r2 is actually

00:08:34,019 --> 00:08:40,589
has been talked by ron evans and jim

00:08:36,510 --> 00:08:42,479
furyk so Dinah Jane is a if you see here

00:08:40,589 --> 00:08:45,300
time is a ruby gem that helps you

00:08:42,479 --> 00:08:47,550
bootstrap prototyping with Audino so

00:08:45,300 --> 00:08:50,550
it's a very simple gem and i'll be using

00:08:47,550 --> 00:08:52,110
this to show my demos in the coming

00:08:50,550 --> 00:08:54,959
slides because i think it's

00:08:52,110 --> 00:08:56,850
comparatively simpler to read and

00:08:54,959 --> 00:09:00,449
understand Reed Ryder and nostrand so

00:08:56,850 --> 00:09:02,339
that's what we are going to use today so

00:09:00,449 --> 00:09:05,790
the demos that I am going to show is

00:09:02,339 --> 00:09:08,610
just based on LEDs and the Isle of LEDs

00:09:05,790 --> 00:09:10,440
because a couple of reasons because it's

00:09:08,610 --> 00:09:12,420
just a simple light mode with two legs

00:09:10,440 --> 00:09:16,370
one for signal and one for the ground

00:09:12,420 --> 00:09:19,670
and they come in various colors and eyes

00:09:16,370 --> 00:09:22,440
sketch artist i really love colors and

00:09:19,670 --> 00:09:24,990
lastly means you could create lot of the

00:09:22,440 --> 00:09:26,730
fits with just that simple component you

00:09:24,990 --> 00:09:30,810
could turn it on you could turn it off

00:09:26,730 --> 00:09:32,610
good make it a blink blink faster or

00:09:30,810 --> 00:09:35,610
slower or maybe blink in a pattern like

00:09:32,610 --> 00:09:39,899
a mall sport so you just buy a single

00:09:35,610 --> 00:09:42,329
component you could do so many things I

00:09:39,899 --> 00:09:44,730
would like to take a time to tell you

00:09:42,329 --> 00:09:47,160
about a little bit about little bits pun

00:09:44,730 --> 00:09:51,660
intended so little bits is a company

00:09:47,160 --> 00:09:53,400
which makes electronics and if you will

00:09:51,660 --> 00:09:57,690
see here means electro they local

00:09:53,400 --> 00:10:03,740
legos means the these guys have designed

00:09:57,690 --> 00:10:03,740
his electronics I try to show here

00:10:22,529 --> 00:10:27,990
so I don't know if it's a clearly

00:10:25,529 --> 00:10:36,680
visible or not but that's the best right

00:10:27,990 --> 00:10:46,230
now possible so here is a battery and

00:10:36,680 --> 00:10:49,110
here is the LED component and yeah so

00:10:46,230 --> 00:10:53,069
the cool thing about this little bits is

00:10:49,110 --> 00:10:55,980
that these components literally snap to

00:10:53,069 --> 00:10:59,160
each other means these components have

00:10:55,980 --> 00:11:01,379
magnets at the end so and there they

00:10:59,160 --> 00:11:04,259
have the polarity so I can't stick with

00:11:01,379 --> 00:11:06,149
them in the wrong order means they stick

00:11:04,259 --> 00:11:09,170
it in the particular order early so this

00:11:06,149 --> 00:11:14,160
makes rapid prototyping even faster so

00:11:09,170 --> 00:11:16,529
what you do is that it just snap it

00:11:14,160 --> 00:11:19,379
together and write the code if you want

00:11:16,529 --> 00:11:22,230
it works without even without code so it

00:11:19,379 --> 00:11:24,990
just lights up and they have the modules

00:11:22,230 --> 00:11:30,629
for almost everything means input output

00:11:24,990 --> 00:11:32,970
sensors or in a board and so I think you

00:11:30,629 --> 00:11:36,029
guys should really check out and I want

00:11:32,970 --> 00:11:38,399
to thank a little bits for donating me

00:11:36,029 --> 00:11:41,819
the kit to make this talk even possible

00:11:38,399 --> 00:11:43,439
and we'll see how this makes rapid

00:11:41,819 --> 00:11:49,699
prototyping even more fun in the

00:11:43,439 --> 00:11:52,980
upcoming demos so enough talk let's demo

00:11:49,699 --> 00:11:54,899
first of all whenever we start running

00:11:52,980 --> 00:11:56,910
any program we usually start with the

00:11:54,899 --> 00:11:59,220
hello world so what is the hello world

00:11:56,910 --> 00:12:01,740
of the hardware programming means there

00:11:59,220 --> 00:12:04,470
has to be something so it's called LED

00:12:01,740 --> 00:12:08,429
blink and ready blink is as the name

00:12:04,470 --> 00:12:11,899
states we are just blinking the LED so

00:12:08,429 --> 00:12:11,899
if we look into the code of it

00:12:21,760 --> 00:12:26,800
so first of all we have to find whatever

00:12:24,220 --> 00:12:29,050
the gems that are required here we are

00:12:26,800 --> 00:12:31,600
using the Dino gem I am NOT getting

00:12:29,050 --> 00:12:35,050
going into the details of how to use how

00:12:31,600 --> 00:12:37,360
to install the gem so but it's a very

00:12:35,050 --> 00:12:39,250
simple three-step process you go to go

00:12:37,360 --> 00:12:41,620
through the documentation so you install

00:12:39,250 --> 00:12:44,410
the gem then there is a terminal command

00:12:41,620 --> 00:12:46,750
line terminal command which generates a

00:12:44,410 --> 00:12:50,410
sketch and you upload it to the Arduino

00:12:46,750 --> 00:12:53,050
so the purpose of that file is that your

00:12:50,410 --> 00:13:00,340
re no understands the ruby file that you

00:12:53,050 --> 00:13:03,120
will be executing so I am connecting the

00:13:00,340 --> 00:13:03,120
re no right now

00:13:11,450 --> 00:13:15,830
so if you just briefly go to the code

00:13:13,730 --> 00:13:18,230
means it's very simple here first of all

00:13:15,830 --> 00:13:21,500
I am defining your board this is the

00:13:18,230 --> 00:13:24,470
from the gem itself then we are defining

00:13:21,500 --> 00:13:27,350
an LED so LED is a new component which

00:13:24,470 --> 00:13:31,130
is on pin one on the board which we just

00:13:27,350 --> 00:13:33,470
define then here is a blocker of a where

00:13:31,130 --> 00:13:37,460
we are cycling between on and off values

00:13:33,470 --> 00:13:41,570
and at a one time whatever the value is

00:13:37,460 --> 00:13:44,650
it's a sin to the LED for half second so

00:13:41,570 --> 00:13:44,650
if we try to run this

00:13:53,209 --> 00:14:00,889
okay I think that I won't be able to

00:13:57,319 --> 00:14:04,249
photo because cable is little small but

00:14:00,889 --> 00:14:13,519
still otherwise I could show the video

00:14:04,249 --> 00:14:15,589
directly so here is the code and this is

00:14:13,519 --> 00:14:18,499
how the little bits work means i'm

00:14:15,589 --> 00:14:20,990
connecting it live Fermi's means at a

00:14:18,499 --> 00:14:23,240
real-time speed you can see so it is

00:14:20,990 --> 00:14:26,449
sticking to each other because of their

00:14:23,240 --> 00:14:30,129
magnets at the end and Here I am ready

00:14:26,449 --> 00:14:30,129
running that same ruby file

00:14:41,399 --> 00:14:48,129
and steady and that it is blinking so we

00:14:46,180 --> 00:14:52,660
got the hello world working in Ruby on

00:14:48,129 --> 00:14:56,470
Arduino so you can see how small that

00:14:52,660 --> 00:15:01,750
cole was means under the like 10 lines

00:14:56,470 --> 00:15:04,149
really so next demo we'll take a look at

00:15:01,750 --> 00:15:06,370
is good where everything is not blinking

00:15:04,149 --> 00:15:09,009
in this world so we control things so

00:15:06,370 --> 00:15:12,220
why not control the LED with a button so

00:15:09,009 --> 00:15:15,160
if you look into the core of that it's

00:15:12,220 --> 00:15:18,009
almost same as the LED blink but we add

00:15:15,160 --> 00:15:21,220
a button so we have a button added here

00:15:18,009 --> 00:15:23,769
and initially we are turning the LED off

00:15:21,220 --> 00:15:26,170
so these on and off and whatever the

00:15:23,769 --> 00:15:28,360
methods that you will see with each and

00:15:26,170 --> 00:15:31,079
every component it's a built in the gem

00:15:28,360 --> 00:15:35,050
itself so it's very simple to understand

00:15:31,079 --> 00:15:38,500
so here when we are calling the down

00:15:35,050 --> 00:15:40,420
method on the button so down it doesn't

00:15:38,500 --> 00:15:42,790
mean pressing the button down but the

00:15:40,420 --> 00:15:45,279
voltage is down so that is one gotcha

00:15:42,790 --> 00:15:48,759
that has to be taken care of that's what

00:15:45,279 --> 00:15:51,850
the Austrian nerd thought of when he was

00:15:48,759 --> 00:15:55,000
building it so when the voltage is down

00:15:51,850 --> 00:15:58,029
the bat it puts button not pressed on

00:15:55,000 --> 00:16:01,029
the terminal and LEDs off if it's button

00:15:58,029 --> 00:16:06,870
is pressed voltage is up and LEDs turned

00:16:01,029 --> 00:16:06,870
on so if we look at the video of that

00:16:10,769 --> 00:16:19,110
this is the same almost is the same code

00:16:13,769 --> 00:16:20,519
I am connecting it life is the so the

00:16:19,110 --> 00:16:23,999
pink color that you see is that the

00:16:20,519 --> 00:16:31,799
button green color is the LED so all the

00:16:23,999 --> 00:16:34,679
components are color-coded too so if you

00:16:31,799 --> 00:16:36,929
look at here means pink color is usually

00:16:34,679 --> 00:16:38,459
the inputs orange is something

00:16:36,929 --> 00:16:41,730
connecting it's why our Arduino and

00:16:38,459 --> 00:16:44,040
green color is the outputs so I'm

00:16:41,730 --> 00:16:47,339
pressing three button and LEDs turning

00:16:44,040 --> 00:16:49,920
on and off if you check into the

00:16:47,339 --> 00:16:51,509
terminal we can see ya it's running

00:16:49,920 --> 00:16:53,579
through code although this could run

00:16:51,509 --> 00:16:59,790
without code but in this instance we are

00:16:53,579 --> 00:17:02,699
running it through code so let's take it

00:16:59,790 --> 00:17:04,439
to another level how about controlling

00:17:02,699 --> 00:17:07,439
the LED through raised in and local

00:17:04,439 --> 00:17:09,029
server so you can kind of see what's

00:17:07,439 --> 00:17:11,480
coming means we are through we have

00:17:09,029 --> 00:17:17,970
started to build up on our last program

00:17:11,480 --> 00:17:19,559
so if they look into the code of that so

00:17:17,970 --> 00:17:21,929
here's the rails app that I generated

00:17:19,559 --> 00:17:25,049
it's it's got no models because i am not

00:17:21,929 --> 00:17:26,490
storing any values in the databases or

00:17:25,049 --> 00:17:30,899
anything so it's just got the controller

00:17:26,490 --> 00:17:32,549
and views so the most important file in

00:17:30,899 --> 00:17:35,190
this program would be the LED controller

00:17:32,549 --> 00:17:39,360
that i generated and LED controller has

00:17:35,190 --> 00:17:44,070
got three actions only index on and off

00:17:39,360 --> 00:17:47,070
so when it's on the LED is turned on

00:17:44,070 --> 00:17:52,020
when it's and we redirect to the root

00:17:47,070 --> 00:17:54,029
path so a and same with the off so well

00:17:52,020 --> 00:17:56,789
it is turned off and it's because the

00:17:54,029 --> 00:17:58,799
root path is the index page the index

00:17:56,789 --> 00:18:01,080
action that will be executing and the

00:17:58,799 --> 00:18:03,149
just at the last we will see there's a

00:18:01,080 --> 00:18:05,279
private method called set of LED so

00:18:03,149 --> 00:18:07,350
turning on and off before that we have

00:18:05,279 --> 00:18:10,409
to define the LED and the we do that

00:18:07,350 --> 00:18:15,779
before action here in the line second so

00:18:10,409 --> 00:18:18,440
if we try to that i'll try to show you

00:18:15,779 --> 00:18:18,440
the video of that

00:18:29,910 --> 00:18:37,790
so here I am running the rails app I'll

00:18:32,310 --> 00:18:37,790
start I'm starting the server it's ready

00:18:42,950 --> 00:18:50,210
and here's the videos little blurry

00:18:46,490 --> 00:18:52,550
sorry but you can see so we got on and

00:18:50,210 --> 00:18:54,710
off buttons that's those are the two

00:18:52,550 --> 00:18:56,360
main components and right now I'm just

00:18:54,710 --> 00:19:02,360
clicking it to see what happens on the

00:18:56,360 --> 00:19:05,150
screen you see LED is turned on and off

00:19:02,360 --> 00:19:08,590
through rails on local server and if I

00:19:05,150 --> 00:19:17,510
try to show it both at the same time

00:19:08,590 --> 00:19:19,190
it's on and oh so now this is a this

00:19:17,510 --> 00:19:21,020
that was pretty amazing because it was

00:19:19,190 --> 00:19:23,210
running on rails on local servers so

00:19:21,020 --> 00:19:26,420
that's very close to what we would build

00:19:23,210 --> 00:19:30,140
in a real life let's take it to other

00:19:26,420 --> 00:19:32,720
level let's go let's control led through

00:19:30,140 --> 00:19:37,280
physical buttons with problem is the

00:19:32,720 --> 00:19:40,760
problem is a real-time service which you

00:19:37,280 --> 00:19:42,470
can use to so it's based on a WebSocket

00:19:40,760 --> 00:19:44,450
protocol publish and subscribe model so

00:19:42,470 --> 00:19:47,030
you could send mail send and receive

00:19:44,450 --> 00:19:48,950
messages in real time anywhere and any

00:19:47,030 --> 00:19:51,410
way in the world and pub napper claims

00:19:48,950 --> 00:19:55,250
that it could send messages anywhere in

00:19:51,410 --> 00:19:57,860
the world within 125 seconds and it is

00:19:55,250 --> 00:20:00,350
so we'll see through her although we can

00:19:57,860 --> 00:20:02,330
I could have done with the rails but it

00:20:00,350 --> 00:20:04,340
would have this just the same as the

00:20:02,330 --> 00:20:08,390
last one but this is a physical button

00:20:04,340 --> 00:20:12,890
so this is a very kind of a big bang

00:20:08,390 --> 00:20:21,370
theory stuff if you run the video of

00:20:12,890 --> 00:20:21,370
that yeah so just the code before that

00:20:25,190 --> 00:20:30,809
this code is already long because of the

00:20:27,750 --> 00:20:32,610
pub now just as the last year program

00:20:30,809 --> 00:20:34,950
that we don't we are defining the but

00:20:32,610 --> 00:20:36,929
bored button led here we are

00:20:34,950 --> 00:20:38,490
initializing the pub knob so we are

00:20:36,929 --> 00:20:40,110
creating the public's new instance

00:20:38,490 --> 00:20:42,450
without subscribe key and publish to

00:20:40,110 --> 00:20:43,830
publish he is responsible for publishing

00:20:42,450 --> 00:20:46,470
the messages to the channel and

00:20:43,830 --> 00:20:49,080
subscribe key is responsible for getting

00:20:46,470 --> 00:20:51,480
the messages from the channel and here

00:20:49,080 --> 00:20:52,890
is a subscriber block of of the Indian

00:20:51,480 --> 00:20:54,870
instance it is connected to the

00:20:52,890 --> 00:20:57,929
particular channel called button pub

00:20:54,870 --> 00:21:00,419
knob and we whatever the data we get and

00:20:57,929 --> 00:21:03,390
I will just come back to this block of

00:21:00,419 --> 00:21:06,870
code and same as the last program when

00:21:03,390 --> 00:21:10,290
the button is down we publish the

00:21:06,870 --> 00:21:13,290
message that is button status not rest

00:21:10,290 --> 00:21:16,350
as a payload to the pub novel instance

00:21:13,290 --> 00:21:19,770
and same with the app it publishes the

00:21:16,350 --> 00:21:22,799
message button status as pressed when

00:21:19,770 --> 00:21:24,870
it's to the pub novel instance and when

00:21:22,799 --> 00:21:27,390
we saw subscribed it we are running the

00:21:24,870 --> 00:21:30,360
logic on the data means message that we

00:21:27,390 --> 00:21:32,309
received so it's already Jason so we are

00:21:30,360 --> 00:21:34,590
looking for the button status key in the

00:21:32,309 --> 00:21:37,500
object that is written if it's not

00:21:34,590 --> 00:21:42,090
pressed turn the LED off if it's pressed

00:21:37,500 --> 00:21:47,820
turn the LED on dead simple so let's try

00:21:42,090 --> 00:21:50,280
to run the video of that so here I am

00:21:47,820 --> 00:21:54,590
just going through glancing through the

00:21:50,280 --> 00:21:54,590
cold what it is it's the same

00:22:01,760 --> 00:22:08,630
and again making the connection so this

00:22:05,900 --> 00:22:10,820
is an example where you can imagine that

00:22:08,630 --> 00:22:13,790
you have a button here in bangalore and

00:22:10,820 --> 00:22:15,920
suppose this LED is connected to the re

00:22:13,790 --> 00:22:17,750
knows somewhere Harper on the world and

00:22:15,920 --> 00:22:20,390
subscribe to the same channel you could

00:22:17,750 --> 00:22:22,870
turn it on from here and that would turn

00:22:20,390 --> 00:22:25,670
on in real time between point 25 seconds

00:22:22,870 --> 00:22:28,340
so here I am showing just confirming

00:22:25,670 --> 00:22:30,560
showing the channel making sure that

00:22:28,340 --> 00:22:40,840
both are on the same channel the same

00:22:30,560 --> 00:22:43,640
page and from here I running the program

00:22:40,840 --> 00:22:45,650
so it takes a while because it's kind of

00:22:43,640 --> 00:22:48,950
creating the handshake between the

00:22:45,650 --> 00:22:52,780
program and and the pub knob and once

00:22:48,950 --> 00:22:52,780
it's connected it will show the message

00:23:05,760 --> 00:23:14,580
yeah so he got connected and now I'm

00:23:10,050 --> 00:23:16,980
turning on the LED although the response

00:23:14,580 --> 00:23:19,290
looks very real time like you are using

00:23:16,980 --> 00:23:21,120
it locally but believe me it's going

00:23:19,290 --> 00:23:25,800
through all through the servers wherever

00:23:21,120 --> 00:23:27,930
it is nearby in Singapore in u.s. it's

00:23:25,800 --> 00:23:30,780
going there coming back analyzing the

00:23:27,930 --> 00:23:33,810
logic turning on the LED so that's

00:23:30,780 --> 00:23:36,270
happening in real time really fast so

00:23:33,810 --> 00:23:38,340
this is terminal just to make sure that

00:23:36,270 --> 00:23:40,530
it's actually going there and coming

00:23:38,340 --> 00:23:42,360
back this is the public developer

00:23:40,530 --> 00:23:45,240
console and you could see the messages

00:23:42,360 --> 00:23:48,180
getting published there so here I

00:23:45,240 --> 00:23:50,970
pressed the not pressed expressed not

00:23:48,180 --> 00:23:53,480
pressed so you could see the response

00:23:50,970 --> 00:23:53,480
time here

00:24:00,760 --> 00:24:05,080
so we got the LD bling then we

00:24:02,980 --> 00:24:07,000
controlled it through the button then we

00:24:05,080 --> 00:24:12,850
build it on the loop raised server and

00:24:07,000 --> 00:24:15,100
then we took it to the real time but the

00:24:12,850 --> 00:24:16,720
world is not just full of LEDs the we

00:24:15,100 --> 00:24:18,100
have to interact with in environment

00:24:16,720 --> 00:24:23,050
somehow and that's where senses come

00:24:18,100 --> 00:24:27,880
into play so for the sensors if we look

00:24:23,050 --> 00:24:30,100
into the code of that again it's very

00:24:27,880 --> 00:24:32,620
simple we are defining the board then

00:24:30,100 --> 00:24:35,800
the defining sensor and sensory have a

00:24:32,620 --> 00:24:38,590
just one method on it when data received

00:24:35,800 --> 00:24:41,230
because purpose of all the sensors is to

00:24:38,590 --> 00:24:43,540
receive the data whatever they are built

00:24:41,230 --> 00:24:46,750
for with its humidity or temperature or

00:24:43,540 --> 00:24:48,490
motion or anything so we are calling

00:24:46,750 --> 00:24:52,750
this method and whatever the data we get

00:24:48,490 --> 00:24:55,800
we want to put back on the terminal so

00:24:52,750 --> 00:24:55,800
if we look into it

00:25:04,720 --> 00:25:10,830
so here I am using the pressure sensor

00:25:06,520 --> 00:25:10,830
which measures the pressure overhead

00:25:11,190 --> 00:25:15,390
again starting the program

00:25:22,570 --> 00:25:28,679
and we start getting the values so right

00:25:24,909 --> 00:25:31,029
now it's all zero the sense is nothing

00:25:28,679 --> 00:25:32,919
and i'm showing you how i am changing

00:25:31,029 --> 00:25:35,259
the values just by putting some pressure

00:25:32,919 --> 00:25:39,519
on the sensor and we could change the

00:25:35,259 --> 00:25:41,169
value on the terminal like this so you

00:25:39,519 --> 00:25:43,600
could see how sensitive it is now I'm

00:25:41,169 --> 00:25:47,610
trying to do it fast please it is

00:25:43,600 --> 00:25:47,610
collecting lot of data in one second

00:25:52,470 --> 00:25:57,960
so there is cool now how could we

00:25:54,900 --> 00:26:00,270
connect the input to the output so for

00:25:57,960 --> 00:26:04,080
that let's try to control the LED

00:26:00,270 --> 00:26:05,880
through sensors again just this is a

00:26:04,080 --> 00:26:08,370
very simple mean so now we got to

00:26:05,880 --> 00:26:10,110
combine the LED control of the button

00:26:08,370 --> 00:26:13,620
but instead of button we just put the

00:26:10,110 --> 00:26:17,539
sensors so I i think i will just badly

00:26:13,620 --> 00:26:17,539
go into the demo of it

00:26:50,480 --> 00:26:56,630
I read now LEDs turn off and now it's

00:26:54,559 --> 00:26:58,900
controlled through a sensor not just the

00:26:56,630 --> 00:26:58,900
button

00:27:06,150 --> 00:27:11,520
one of the things that I really wanted

00:27:09,600 --> 00:27:14,790
to do was to control the led through

00:27:11,520 --> 00:27:17,340
voice but unfortunately series not open

00:27:14,790 --> 00:27:21,990
source and integrating google now with

00:27:17,340 --> 00:27:25,650
ruby was almost impossible so but i

00:27:21,990 --> 00:27:28,470
found out a open source library called

00:27:25,650 --> 00:27:31,080
wit dot AI which is on natural language

00:27:28,470 --> 00:27:32,700
processing which makes the task really

00:27:31,080 --> 00:27:39,080
easy and it supports three a ruby

00:27:32,700 --> 00:27:45,000
platform so yay so how does it happen

00:27:39,080 --> 00:27:46,710
running through the code so again the

00:27:45,000 --> 00:27:51,720
same thing but here i am using be a bit

00:27:46,710 --> 00:27:53,970
dot a is API its access token and here i

00:27:51,720 --> 00:27:56,820
am initializing in it after that i'm

00:27:53,970 --> 00:28:00,060
starting the loop where i'm using this

00:27:56,820 --> 00:28:02,160
method called voice query auto so what

00:28:00,060 --> 00:28:05,220
it does is that it starts a mic it's a

00:28:02,160 --> 00:28:08,250
gets your recording and it sends the

00:28:05,220 --> 00:28:11,220
whatever is recorded where to the

00:28:08,250 --> 00:28:14,550
application that's in the API and you

00:28:11,220 --> 00:28:17,790
get a response and the response and on

00:28:14,550 --> 00:28:21,090
the base of the response I'm running the

00:28:17,790 --> 00:28:24,450
logic so just a quick the show of what

00:28:21,090 --> 00:28:26,580
NLP is me so you want it's comprised of

00:28:24,450 --> 00:28:28,830
intense in the expressions so like if

00:28:26,580 --> 00:28:31,890
you want to turn on the LED so the

00:28:28,830 --> 00:28:34,350
intent is supposed turn on but means

00:28:31,890 --> 00:28:36,650
lights on but there are different ways

00:28:34,350 --> 00:28:39,660
of saying that same thing you could say

00:28:36,650 --> 00:28:41,430
lights on turn on the lights or do not

00:28:39,660 --> 00:28:43,730
turn off the lights so these are

00:28:41,430 --> 00:28:49,110
different ways of saying things so

00:28:43,730 --> 00:28:52,610
that's what we match upon and if I run

00:28:49,110 --> 00:28:52,610
the video of that

00:28:59,380 --> 00:29:02,640
voice please

00:29:08,360 --> 00:29:11,230
like so

00:29:14,780 --> 00:29:17,920
turn on the lights

00:29:21,370 --> 00:29:24,570
turn out the lights

00:29:29,299 --> 00:29:35,299
and just to make sure i'm not doing some

00:29:32,720 --> 00:29:36,499
magic behind the scenes here's the in

00:29:35,299 --> 00:29:45,769
the command terminal it's getting

00:29:36,499 --> 00:29:48,009
updated in real time yeah that was gone

00:29:45,769 --> 00:29:52,730
means our surprise means a friend like

00:29:48,009 --> 00:29:54,320
magicians really so they say we have

00:29:52,730 --> 00:29:55,700
covered the fundamental so right now

00:29:54,320 --> 00:29:57,409
we'll take it to the practical

00:29:55,700 --> 00:29:59,059
applications so one of the things that I

00:29:57,409 --> 00:30:01,519
worked on was a package delivery

00:29:59,059 --> 00:30:03,710
detector so whenever you get a mail or

00:30:01,519 --> 00:30:05,960
parcel in your mailbox you will get a

00:30:03,710 --> 00:30:08,299
SMS or email telling that you got a

00:30:05,960 --> 00:30:10,190
piracy and don't forget to pick it up so

00:30:08,299 --> 00:30:11,690
I'm not going through the code here but

00:30:10,190 --> 00:30:13,609
i'll show you the demo and don't worry

00:30:11,690 --> 00:30:15,529
about it though all the codes are

00:30:13,609 --> 00:30:17,559
available which i'll tell you in the

00:30:15,529 --> 00:30:17,559
last

00:30:24,530 --> 00:30:29,770
so is the pressure sensor I'm using for

00:30:27,080 --> 00:30:34,010
this it will measure if the package has

00:30:29,770 --> 00:30:37,130
I got a package or not and here i just

00:30:34,010 --> 00:30:39,830
created a demo email gcrc bangalore @

00:30:37,130 --> 00:30:43,300
gmail.com okay so right now it's empty

00:30:39,830 --> 00:30:43,300
there's nothing Indian box

00:30:51,230 --> 00:30:59,690
I'm running it and I just put a person

00:30:56,840 --> 00:31:04,549
on opponent for it to detect something

00:30:59,690 --> 00:31:09,470
and if I check the email I got the

00:31:04,549 --> 00:31:11,480
message and if I go into it I can read

00:31:09,470 --> 00:31:14,750
you got a package don't forget to pick

00:31:11,480 --> 00:31:17,570
it up so that's one has a practical

00:31:14,750 --> 00:31:19,040
application and the one is a street

00:31:17,570 --> 00:31:21,200
lighting that you see on the streets

00:31:19,040 --> 00:31:25,400
that when it gets dark the street lights

00:31:21,200 --> 00:31:28,010
turn on so simple it's also dead simple

00:31:25,400 --> 00:31:30,530
but here i am using the LED light sensor

00:31:28,010 --> 00:31:32,900
which since it is the value of flight

00:31:30,530 --> 00:31:39,530
around it and based on that it turns the

00:31:32,900 --> 00:31:41,860
LED on and off so right now i'm using

00:31:39,530 --> 00:31:45,020
this angle because i want to show the

00:31:41,860 --> 00:31:47,240
setup itself and the terminal itself so

00:31:45,020 --> 00:31:49,490
you could change see the change in value

00:31:47,240 --> 00:31:51,500
so right now lights are on and the

00:31:49,490 --> 00:31:55,160
values that you can see in the terminal

00:31:51,500 --> 00:31:57,679
right now is like 790 or something in

00:31:55,160 --> 00:32:00,470
three digits but if I turn out the

00:31:57,679 --> 00:32:02,330
lights lights turn on itself

00:32:00,470 --> 00:32:05,299
automatically and it's you can see the

00:32:02,330 --> 00:32:08,710
value it's 1022 four digits so it could

00:32:05,299 --> 00:32:08,710
really see the change in the value

00:32:11,760 --> 00:32:21,840
so that's cool stuff just just a quick

00:32:18,360 --> 00:32:23,910
show of a what no this is the last demo

00:32:21,840 --> 00:32:25,350
that I am going to show it's the project

00:32:23,910 --> 00:32:28,920
that I worked on it's an earthquake

00:32:25,350 --> 00:32:32,960
warning system and as we know means how

00:32:28,920 --> 00:32:35,960
quick happens there is a very less very

00:32:32,960 --> 00:32:38,940
less time for us to reactor to it and

00:32:35,960 --> 00:32:42,930
say ourselves but I wanted to try for

00:32:38,940 --> 00:32:44,520
India and the these were the couple of

00:32:42,930 --> 00:32:46,350
hurdles that I found out means I found

00:32:44,520 --> 00:32:49,050
him Indian meteorological so we have a

00:32:46,350 --> 00:32:52,890
website which shows the latest

00:32:49,050 --> 00:32:55,620
earthquake report but it there was no

00:32:52,890 --> 00:32:57,870
api's for that and other that's why I

00:32:55,620 --> 00:32:59,520
had to crawl at like every 10 20 seconds

00:32:57,870 --> 00:33:02,640
because earthquake is such a crucial

00:32:59,520 --> 00:33:04,740
event where every second matters and the

00:33:02,640 --> 00:33:06,420
doubt was that the leaders earthquake

00:33:04,740 --> 00:33:08,460
report on the website was it updated in

00:33:06,420 --> 00:33:10,140
real time or after 2 oz of when the

00:33:08,460 --> 00:33:13,320
earthquake game otherwise it wouldn't

00:33:10,140 --> 00:33:16,080
have been it wouldn't make sense because

00:33:13,320 --> 00:33:18,750
imagine what 20 seconds can do to your

00:33:16,080 --> 00:33:24,210
life your business or a school so I had

00:33:18,750 --> 00:33:27,300
developed a model for that and this is a

00:33:24,210 --> 00:33:30,600
complete solution means from sensing to

00:33:27,300 --> 00:33:32,850
sending in real time to the dashboard so

00:33:30,600 --> 00:33:34,620
it's not just sensing in all means it's

00:33:32,850 --> 00:33:39,270
monitoring and controlling an even

00:33:34,620 --> 00:33:41,070
warning so the code is pretty longer

00:33:39,270 --> 00:33:43,620
don't worry about it everything will be

00:33:41,070 --> 00:33:47,040
available so here's the dashboard i'm

00:33:43,620 --> 00:33:48,360
using free board dot IO and Hills you

00:33:47,040 --> 00:33:50,370
can see the pain right right now it's

00:33:48,360 --> 00:33:52,110
receiving nothing this is the pub nap

00:33:50,370 --> 00:33:57,090
channel through which I am publishing

00:33:52,110 --> 00:34:01,110
the messages and right now I've just run

00:33:57,090 --> 00:34:02,940
the code and I'm here I'm a replicating

00:34:01,110 --> 00:34:06,060
the earthquake effect because I cannot

00:34:02,940 --> 00:34:08,600
wait for it so I'm using the pressure

00:34:06,060 --> 00:34:12,000
sensor to generate that kind of effect

00:34:08,600 --> 00:34:15,090
so if we see into the terminal ok it's

00:34:12,000 --> 00:34:16,169
nine point nine mins that's scary so

00:34:15,090 --> 00:34:18,210
right now i'm getting the earthquake

00:34:16,169 --> 00:34:20,700
alert means so i'll set the logic that

00:34:18,210 --> 00:34:23,190
if the Earthquaker it does is more than

00:34:20,700 --> 00:34:24,810
suppose six send a print earthquake

00:34:23,190 --> 00:34:32,040
alert

00:34:24,810 --> 00:34:35,490
so you can see it's firing on and it's

00:34:32,040 --> 00:34:37,380
this trail sensing and here you can see

00:34:35,490 --> 00:34:40,470
in the pop number developer console me

00:34:37,380 --> 00:34:44,790
sir it's a get message is getting sent

00:34:40,470 --> 00:34:49,860
there and after this I will show the

00:34:44,790 --> 00:34:51,390
freeboard so you can see it got it got

00:34:49,860 --> 00:34:54,510
updated in real time you can see the

00:34:51,390 --> 00:34:56,700
slope this harm so this is around nine I

00:34:54,510 --> 00:35:01,950
was I was just for overall though it's

00:34:56,700 --> 00:35:03,840
not to play about 9.6 9.7 and as you

00:35:01,950 --> 00:35:05,760
will see this graph moving it's

00:35:03,840 --> 00:35:08,390
happening in real time so you are

00:35:05,760 --> 00:35:14,160
getting the data in real time with its

00:35:08,390 --> 00:35:16,440
what the present systems use and I just

00:35:14,160 --> 00:35:19,230
wanted to put an idea means how much is

00:35:16,440 --> 00:35:21,660
possible with Ruby and arduino and at

00:35:19,230 --> 00:35:23,460
last I would like to just show you tell

00:35:21,660 --> 00:35:25,620
you a couple of resources so for the

00:35:23,460 --> 00:35:27,300
books you can read getting started with

00:35:25,620 --> 00:35:29,180
Audrina and Ruby and that is probably

00:35:27,300 --> 00:35:32,010
the only book right now in the market

00:35:29,180 --> 00:35:34,770
related to that topic you can really

00:35:32,010 --> 00:35:37,770
make magazines to get the ideas what

00:35:34,770 --> 00:35:40,530
others are doing what are they get

00:35:37,770 --> 00:35:44,460
updated about the IOT industry and get

00:35:40,530 --> 00:35:46,590
some inspiration for the AP IM in web

00:35:44,460 --> 00:35:50,040
services you can use Timbo web shell

00:35:46,590 --> 00:35:52,560
mashup and IFTTT which is if this then

00:35:50,040 --> 00:35:55,910
that although if this then that is into

00:35:52,560 --> 00:35:58,230
doesn't support a language but it's very

00:35:55,910 --> 00:36:01,260
special for rapid prototyping so I

00:35:58,230 --> 00:36:04,170
highly recommend you to check it out for

00:36:01,260 --> 00:36:06,540
the dashboards I used a free board you

00:36:04,170 --> 00:36:08,640
can use in flux DB it supports Ruby and

00:36:06,540 --> 00:36:11,610
just yesterday only I found out about

00:36:08,640 --> 00:36:14,730
kenai oh and looking at their examples

00:36:11,610 --> 00:36:17,520
it looks really good and even I want to

00:36:14,730 --> 00:36:19,950
try it out miss how it goes for the /

00:36:17,520 --> 00:36:21,780
Buckner for the real time services I

00:36:19,950 --> 00:36:26,010
used problem you could use pusher or

00:36:21,780 --> 00:36:28,050
socket i/o and for the databases no

00:36:26,010 --> 00:36:29,460
sequel is usually the best for Internet

00:36:28,050 --> 00:36:30,900
of Things so you know if you are

00:36:29,460 --> 00:36:33,540
developing locally you could go for

00:36:30,900 --> 00:36:36,600
mongodb or a graph database like neo4j

00:36:33,540 --> 00:36:37,200
and if you are concerned with like

00:36:36,600 --> 00:36:39,359
pushing

00:36:37,200 --> 00:36:41,460
data to the cloud database you can use

00:36:39,359 --> 00:36:43,410
firebase of parts and there's this

00:36:41,460 --> 00:36:46,349
article on pugna where you could use a

00:36:43,410 --> 00:36:51,619
ruby gem called pipe which does

00:36:46,349 --> 00:36:54,570
the same thing and at last it's my I'm a

00:36:51,619 --> 00:36:56,490
announcing Ruby bits which is my own

00:36:54,570 --> 00:36:58,250
series the blog post series that i have

00:36:56,490 --> 00:37:01,200
just started working from this new year

00:36:58,250 --> 00:37:03,089
rue it says ruby plus little bits as you

00:37:01,200 --> 00:37:04,680
can see Ruby is a modular approach to

00:37:03,089 --> 00:37:06,900
programming and little bits a modular

00:37:04,680 --> 00:37:09,089
approach to hardware so I felt that what

00:37:06,900 --> 00:37:10,589
they were made for each other so you

00:37:09,089 --> 00:37:13,710
could find it out at tinker four

00:37:10,589 --> 00:37:15,750
life.com and all the source code of the

00:37:13,710 --> 00:37:20,400
demos that i showed you are a liberal on

00:37:15,750 --> 00:37:22,079
github and the slides also and i can't

00:37:20,400 --> 00:37:24,900
wait to see what you guys could come up

00:37:22,079 --> 00:37:27,839
with and if you build something feel

00:37:24,900 --> 00:37:33,980
free to share with me and I'll spread

00:37:27,839 --> 00:37:33,980
the word so thank you I think we had

00:37:49,370 --> 00:37:51,430

YouTube URL: https://www.youtube.com/watch?v=t2jL0OrpILw


