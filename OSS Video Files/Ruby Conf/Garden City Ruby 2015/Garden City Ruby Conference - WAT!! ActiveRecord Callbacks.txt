Title: Garden City Ruby Conference - WAT!! ActiveRecord Callbacks
Publication date: 2020-01-23
Playlist: Garden City Ruby 2015
Description: 
	By,Monika M

The talk is about the gotchas of ActiveRecord callbacks even in the most common usage patterns and touches upon some possible alternatives to avoid each of these pitfalls. As Rails developers most of us would have inevitably have run into callbacks. This is something easy to get started with but is even easier to lead you into unexpected behaviour in production. Also, due to their unobtrusive nature they can become forgotten landmines. Structured in the popular and fun “WAT” style, the focus is mostly on beginner to intermediate levels, others might find one or two anecdotes surprising.

Help us caption & translate this video!

http://amara.org/v/GF2m/
Captions: 
	00:00:13,800 --> 00:00:21,960
my name is Monica I loved it when my

00:00:18,990 --> 00:00:24,869
first C program printed in a world on

00:00:21,960 --> 00:00:28,410
its script and it gave me kick every

00:00:24,869 --> 00:00:33,390
time i did it with either java python

00:00:28,410 --> 00:00:34,590
hadoop or Ruby on Rails recently and

00:00:33,390 --> 00:00:36,780
there's one more thing I want you to

00:00:34,590 --> 00:00:40,200
know about me besides I applied for our

00:00:36,780 --> 00:00:43,110
deal I was damn sure I would be getting

00:00:40,200 --> 00:00:47,070
the deal but it so happened that they

00:00:43,110 --> 00:00:49,469
rejected my application with this I

00:00:47,070 --> 00:00:51,300
realized one thing even after a lot of

00:00:49,469 --> 00:00:54,120
preparation and a lot of conference

00:00:51,300 --> 00:00:55,940
sometimes things can go wrong even

00:00:54,120 --> 00:00:59,280
though I being practicing speaking at

00:00:55,940 --> 00:01:02,219
Toastmasters this is my first tech talk

00:00:59,280 --> 00:01:05,820
at a tech conference so please don't

00:01:02,219 --> 00:01:13,350
shoot me if at all I think or I freeze

00:01:05,820 --> 00:01:19,760
in between the talk this talk is series

00:01:13,350 --> 00:01:22,290
of incidents that made me go lad

00:01:19,760 --> 00:01:25,080
definitely this is not my style of

00:01:22,290 --> 00:01:27,990
presentation for the talk this style of

00:01:25,080 --> 00:01:30,990
presentation is taken from this awesome

00:01:27,990 --> 00:01:33,420
dog given by Grady been added if you

00:01:30,990 --> 00:01:35,430
have already washed it please don't kill

00:01:33,420 --> 00:01:37,590
me if i am not doing justice to the

00:01:35,430 --> 00:01:39,180
presentation and if you had actually

00:01:37,590 --> 00:01:41,490
watched it please to watch it it's

00:01:39,180 --> 00:01:45,300
because definitely you will have demons

00:01:41,490 --> 00:01:47,610
of loads of laughter okay going on how

00:01:45,300 --> 00:01:50,460
many of you know rage please be humble

00:01:47,610 --> 00:01:54,950
to raise the hands how many of you know

00:01:50,460 --> 00:02:00,300
active record how many of you know

00:01:54,950 --> 00:02:03,180
active record callbacks but the thing is

00:02:00,300 --> 00:02:05,490
I i was told i must be asking the

00:02:03,180 --> 00:02:07,710
questions to include the to get the

00:02:05,490 --> 00:02:13,290
audience focused and to get their

00:02:07,710 --> 00:02:16,110
attention i hope i did it and then okay

00:02:13,290 --> 00:02:19,200
there was not my friend he called me and

00:02:16,110 --> 00:02:21,450
then he asked me a can you up can you

00:02:19,200 --> 00:02:23,910
see any difference in this code as like

00:02:21,450 --> 00:02:24,370
dude I know I've aspects but still I can

00:02:23,910 --> 00:02:26,049
pick it

00:02:24,370 --> 00:02:28,239
that is faster customer control

00:02:26,049 --> 00:02:31,200
controller and another is comments

00:02:28,239 --> 00:02:34,360
controller it's like no can you tell me

00:02:31,200 --> 00:02:37,659
which model is using callbacks and which

00:02:34,360 --> 00:02:40,930
model is not using callbacks I thought

00:02:37,659 --> 00:02:43,690
for a moment and then I gave him an

00:02:40,930 --> 00:02:46,180
awesome gap as I do do not have things

00:02:43,690 --> 00:02:48,549
so much to use carmex all that you have

00:02:46,180 --> 00:02:54,329
to do is just use it and forget it and

00:02:48,549 --> 00:02:58,690
that also is toughest and I just love it

00:02:54,329 --> 00:03:01,329
and going on I was made by level and

00:02:58,690 --> 00:03:04,540
that was my first and it was the

00:03:01,329 --> 00:03:07,060
springtime in foyer I was able to do my

00:03:04,540 --> 00:03:09,370
first production code and because it

00:03:07,060 --> 00:03:13,810
this requirement for this class account

00:03:09,370 --> 00:03:18,930
or to activate the account only when the

00:03:13,810 --> 00:03:23,739
password matters like any good teleport

00:03:18,930 --> 00:03:25,870
idealistic I notice back to test it

00:03:23,739 --> 00:03:28,030
should activate the account only when

00:03:25,870 --> 00:03:31,090
the password matches and then I went to

00:03:28,030 --> 00:03:33,489
my code and then I added this method

00:03:31,090 --> 00:03:36,819
which returns either true or false and

00:03:33,489 --> 00:03:39,519
then was that awesome moment of adding

00:03:36,819 --> 00:03:41,440
the callback to the code first I call

00:03:39,519 --> 00:03:45,190
back i was adding to the production code

00:03:41,440 --> 00:03:47,139
I just did do activate the account when

00:03:45,190 --> 00:03:48,549
the password matches like before you

00:03:47,139 --> 00:03:51,190
create you make sure that you're

00:03:48,549 --> 00:03:53,440
activating the account whenever the

00:03:51,190 --> 00:03:58,209
password matches I went on and I run

00:03:53,440 --> 00:04:01,269
this back bingo it runs successfully and

00:03:58,209 --> 00:04:06,519
I was intelligent as I consider myself

00:04:01,269 --> 00:04:09,280
to be and I added another test to test

00:04:06,519 --> 00:04:11,879
it should not activate the account when

00:04:09,280 --> 00:04:15,849
the password doesn't match us simple and

00:04:11,879 --> 00:04:22,599
as each and every one of you I was

00:04:15,849 --> 00:04:27,090
expecting the coke text to us but oh the

00:04:22,599 --> 00:04:29,880
code did not the test it was fast

00:04:27,090 --> 00:04:32,430
what what in the world can go wrong to

00:04:29,880 --> 00:04:36,449
make this this simple three or four

00:04:32,430 --> 00:04:38,940
lines of code to fail and I thought that

00:04:36,449 --> 00:04:40,710
should be my oh my setup error I got

00:04:38,940 --> 00:04:42,479
that should be our some error in the

00:04:40,710 --> 00:04:44,580
world but that definitely not my phone

00:04:42,479 --> 00:04:47,190
definitely not my code which is a crock

00:04:44,580 --> 00:04:50,010
and even after you you come out of that

00:04:47,190 --> 00:04:53,790
movement of your like my code is think

00:04:50,010 --> 00:04:55,530
affect time I took a lot of time like it

00:04:53,790 --> 00:04:58,650
actually took me or like a couple of

00:04:55,530 --> 00:05:00,960
hours to figure out it was that callback

00:04:58,650 --> 00:05:05,010
which was making which was making that

00:05:00,960 --> 00:05:08,250
test to fail if you if you already got

00:05:05,010 --> 00:05:11,580
the reason why it is failing please help

00:05:08,250 --> 00:05:13,169
please please leave me to that horrid of

00:05:11,580 --> 00:05:15,180
telling the reason why the spec was

00:05:13,169 --> 00:05:18,570
failing due to that active record come

00:05:15,180 --> 00:05:20,760
back it was failing because as each and

00:05:18,570 --> 00:05:23,280
every one of us know Ruby method returns

00:05:20,760 --> 00:05:26,039
the value of the last statement and

00:05:23,280 --> 00:05:29,910
though i have read it I ignored the

00:05:26,039 --> 00:05:32,850
point died before callbacks face and

00:05:29,910 --> 00:05:36,780
repeat rows back the transaction if it

00:05:32,850 --> 00:05:38,760
returns was so the assignment I was

00:05:36,780 --> 00:05:40,110
assigning fall store where he fell and

00:05:38,760 --> 00:05:42,270
it so happened that it was returning

00:05:40,110 --> 00:05:44,610
false from the before call back and it

00:05:42,270 --> 00:05:48,330
was making the road transaction to faith

00:05:44,610 --> 00:05:50,700
and so was my test was failing I was

00:05:48,330 --> 00:05:53,490
like okay one Herod can happen but stick

00:05:50,700 --> 00:05:56,639
called accessible and it was like the

00:05:53,490 --> 00:06:01,320
summer time and I was on another project

00:05:56,639 --> 00:06:04,740
of anger and in that project what

00:06:01,320 --> 00:06:08,330
happened was the best sweet time it

00:06:04,740 --> 00:06:11,280
suddenly got spiked up by ten minutes

00:06:08,330 --> 00:06:14,460
frankly speaking we do not know white

00:06:11,280 --> 00:06:16,979
was happening and honestly speaking will

00:06:14,460 --> 00:06:18,960
link with it for a month we ignored it

00:06:16,979 --> 00:06:22,650
because we did not know where to look at

00:06:18,960 --> 00:06:24,810
and up but like if you are like waiting

00:06:22,650 --> 00:06:27,500
ten extra minutes for your test you to

00:06:24,810 --> 00:06:30,570
run every time definitely it will of

00:06:27,500 --> 00:06:34,229
irritates you and when we found that

00:06:30,570 --> 00:06:38,130
come it which actually made despite to

00:06:34,229 --> 00:06:40,340
happen we were like like person coupon

00:06:38,130 --> 00:06:44,570
like I found it I am beaver like being

00:06:40,340 --> 00:06:49,220
bc and he was like this innocent-looking

00:06:44,570 --> 00:06:53,440
code which is what caused your test you

00:06:49,220 --> 00:06:56,930
time to spike up by tonnage we were like

00:06:53,440 --> 00:07:00,080
what dude do you make sense that is a

00:06:56,930 --> 00:07:04,040
some kind of a hectic John don't to play

00:07:00,080 --> 00:07:07,669
pranks like this and then and then he

00:07:04,040 --> 00:07:09,979
explained see the user object is is the

00:07:07,669 --> 00:07:12,440
object it is mostly used in art acid

00:07:09,979 --> 00:07:14,450
it's like you know overly a login and

00:07:12,440 --> 00:07:16,970
other stuff this is a like most usually

00:07:14,450 --> 00:07:19,130
used object and it's usually created in

00:07:16,970 --> 00:07:22,280
each and every time senior defensive and

00:07:19,130 --> 00:07:26,389
when you are creating your user object

00:07:22,280 --> 00:07:28,669
it's also calling your after contact and

00:07:26,389 --> 00:07:30,919
it's also creating your delayed job at

00:07:28,669 --> 00:07:33,740
it in that creating one delay job a

00:07:30,919 --> 00:07:35,240
synchronous job really doesn't haunts

00:07:33,740 --> 00:07:38,060
you but if you're creating if you're

00:07:35,240 --> 00:07:39,949
calling oh I have to call back thousand

00:07:38,060 --> 00:07:41,360
times like it's just a number like then

00:07:39,949 --> 00:07:43,160
admit that many number of tests that you

00:07:41,360 --> 00:07:45,169
have that many delayed jobs you're

00:07:43,160 --> 00:07:49,880
creating and then that when that time

00:07:45,169 --> 00:07:52,310
multiplies the hood costume we actually

00:07:49,880 --> 00:07:56,330
knew it we actually do it but with not

00:07:52,310 --> 00:07:59,419
realized that after callback would not

00:07:56,330 --> 00:08:02,870
after convex the callbacks would powers

00:07:59,419 --> 00:08:05,930
like this and after all this definitely

00:08:02,870 --> 00:08:09,729
the time hold on and then it was the

00:08:05,930 --> 00:08:13,010
autumn time and I was like well or I

00:08:09,729 --> 00:08:15,289
became more little more of discipline

00:08:13,010 --> 00:08:17,150
and profile or sibling of discipline and

00:08:15,289 --> 00:08:20,210
then I went through the documentation

00:08:17,150 --> 00:08:24,830
and pyrite that after commit suppresses

00:08:20,210 --> 00:08:26,840
the exceptions I was like okay like I

00:08:24,830 --> 00:08:29,060
handsome a leader who has resigned code

00:08:26,840 --> 00:08:30,830
which doesn't have bug like if at all

00:08:29,060 --> 00:08:33,680
you write it buggy for a man it doesn't

00:08:30,830 --> 00:08:35,599
throw exceptions where to go and then

00:08:33,680 --> 00:08:40,339
when I was googling like goodbye to use

00:08:35,599 --> 00:08:42,169
the after commit I found this race best

00:08:40,339 --> 00:08:44,060
practices use the earth to commit

00:08:42,169 --> 00:08:46,279
instead of the upper create to create

00:08:44,060 --> 00:08:49,400
your notifications or to create batch

00:08:46,279 --> 00:08:51,300
process or to create in anything you

00:08:49,400 --> 00:08:54,420
want to create after the transaction

00:08:51,300 --> 00:08:56,250
Isaac how does it make sense like if

00:08:54,420 --> 00:08:58,620
there is a if there is the exception

00:08:56,250 --> 00:09:00,480
thrown in your after commit and there is

00:08:58,620 --> 00:09:03,300
some notification not Center your

00:09:00,480 --> 00:09:05,399
browser your user is not getting a maze

00:09:03,300 --> 00:09:07,019
but you are not notified about it your

00:09:05,399 --> 00:09:09,360
cash is not updating but you are not

00:09:07,019 --> 00:09:12,839
notified about it Jordan you would know

00:09:09,360 --> 00:09:14,519
it only when it's like to link so please

00:09:12,839 --> 00:09:17,130
be careful if at all you are thinking of

00:09:14,519 --> 00:09:20,040
using after coming after seeing such

00:09:17,130 --> 00:09:22,140
kind of work or reference or you should

00:09:20,040 --> 00:09:24,810
be aware back offer to commit soft

00:09:22,140 --> 00:09:28,010
suppresses the exceptions but the good

00:09:24,810 --> 00:09:31,019
the good news is but the good news is

00:09:28,010 --> 00:09:33,029
actually raised 4.2 or after coming and

00:09:31,019 --> 00:09:34,350
also after rollback would be throwing

00:09:33,029 --> 00:09:36,149
the exceptions instead of suppressing

00:09:34,350 --> 00:09:41,610
the exceptions like that's a good news

00:09:36,149 --> 00:09:43,620
actually like yeah and after all this i

00:09:41,610 --> 00:09:46,440
was i was thinking like okay or like

00:09:43,620 --> 00:09:48,360
when the spring was started I was like

00:09:46,440 --> 00:09:50,220
okay by the time of the winter I would

00:09:48,360 --> 00:09:52,649
be like the master of the callbacks and

00:09:50,220 --> 00:09:54,959
I would be like this no man smiling all

00:09:52,649 --> 00:09:57,990
the time but it so happened that I was

00:09:54,959 --> 00:09:59,850
like I don't know I don't know when to

00:09:57,990 --> 00:10:01,500
yours for pacsun up everywhere it's

00:09:59,850 --> 00:10:05,760
troubling me everywhere it's cooking

00:10:01,500 --> 00:10:09,570
it's not and then I asked a lot of

00:10:05,760 --> 00:10:13,320
people and I linked a lot and whoa i

00:10:09,570 --> 00:10:16,170
found that secret sauce when to use the

00:10:13,320 --> 00:10:18,209
callback but before I give you the

00:10:16,170 --> 00:10:20,490
secret sauce let me ask you one question

00:10:18,209 --> 00:10:23,130
or can assign parameters to call backs

00:10:20,490 --> 00:10:24,959
now please don't tell me that a lot of

00:10:23,130 --> 00:10:27,240
high key ways to send a fat which is to

00:10:24,959 --> 00:10:31,290
come back I know you are all very very

00:10:27,240 --> 00:10:33,839
sad but this was never designed or never

00:10:31,290 --> 00:10:35,190
meant to be used like that you can

00:10:33,839 --> 00:10:38,040
actually send the parameters because

00:10:35,190 --> 00:10:40,680
you're of the callbacks should deal with

00:10:38,040 --> 00:10:42,720
okay let me give the secret sauce the

00:10:40,680 --> 00:10:45,180
compacts like should deal with it or

00:10:42,720 --> 00:10:48,300
call back should be used only when the

00:10:45,180 --> 00:10:50,940
logic refers to the internal state of

00:10:48,300 --> 00:10:52,290
the object so now it makes sense like

00:10:50,940 --> 00:10:53,430
you're an actual sin the param do like

00:10:52,290 --> 00:10:55,320
something someone something from outside

00:10:53,430 --> 00:10:57,149
because callbacks they think that they

00:10:55,320 --> 00:10:58,980
already have everything that a callback

00:10:57,149 --> 00:11:02,250
should know the internal state of the

00:10:58,980 --> 00:11:03,040
object so yes like if at all you're

00:11:02,250 --> 00:11:05,110
using a

00:11:03,040 --> 00:11:10,389
Beck's music only when it's referring to

00:11:05,110 --> 00:11:12,130
the internal state of the object the the

00:11:10,389 --> 00:11:14,740
problem with the callbacks is like it is

00:11:12,130 --> 00:11:17,170
like very easy to use and then it will

00:11:14,740 --> 00:11:20,019
it will make you a couple a lot of

00:11:17,170 --> 00:11:22,300
things a couple of couple multiple

00:11:20,019 --> 00:11:24,009
things to get out and when this becomes

00:11:22,300 --> 00:11:26,980
like many couples a lot of things like

00:11:24,009 --> 00:11:28,720
you definitely know what would happen if

00:11:26,980 --> 00:11:30,940
you have not listened to my talk till

00:11:28,720 --> 00:11:32,829
now it's ok but if at all if your code

00:11:30,940 --> 00:11:34,839
base has the callbacks and you are

00:11:32,829 --> 00:11:36,579
thinking of running some migrations

00:11:34,839 --> 00:11:38,290
please do take care of migrations

00:11:36,579 --> 00:11:40,180
because there is a lot of scenarios

00:11:38,290 --> 00:11:42,430
where it has just sent a whale and then

00:11:40,180 --> 00:11:46,860
a dub is not even like knowing that it's

00:11:42,430 --> 00:11:46,860
stunning the main thanks

00:12:03,910 --> 00:12:05,970

YouTube URL: https://www.youtube.com/watch?v=bQBC501kiRY


