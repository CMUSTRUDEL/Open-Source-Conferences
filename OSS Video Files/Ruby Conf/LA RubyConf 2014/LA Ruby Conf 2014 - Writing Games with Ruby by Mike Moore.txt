Title: LA Ruby Conf 2014 - Writing Games with Ruby by Mike Moore
Publication date: 2020-01-24
Playlist: LA RubyConf 2014
Description: 
	Creating games is crazy fun and dirt simple with Ruby. You will leave this session with a working game; no previous game development experience necessary. We will introduce basic concepts of game programming and show how to implement them using the Gosu library. This includes the game loop, sprites, animation, camera movement and hit detection. We will build a complete game, so you might want to bring your notebook and follow along.

Help us caption & translate this video!

http://amara.org/v/FG2u/
Captions: 
	00:00:25,410 --> 00:00:32,190
Thank You Koby I did a workshop the last

00:00:30,039 --> 00:00:37,480
two days and my voice is starting to go

00:00:32,190 --> 00:00:41,670
so I apologize for that let's see my

00:00:37,480 --> 00:00:44,140
presentation is writing games in Ruby if

00:00:41,670 --> 00:00:45,670
we have time we can go a little bit

00:00:44,140 --> 00:00:49,989
slower you guys if you want to follow

00:00:45,670 --> 00:00:52,839
along you can gem install gosu which is

00:00:49,989 --> 00:00:54,249
the library that all these all these

00:00:52,839 --> 00:00:56,949
examples that were going to go through

00:00:54,249 --> 00:01:00,699
are built upon and you can even go to

00:00:56,949 --> 00:01:03,339
github my repo here in github if you

00:01:00,699 --> 00:01:10,840
want to follow along with the with the

00:01:03,339 --> 00:01:14,219
examples so I have a confession my

00:01:10,840 --> 00:01:20,609
confession is is that writing games is

00:01:14,219 --> 00:01:20,609
fun you may not have known that right

00:01:22,799 --> 00:01:29,560
which is awesome but it's even more fun

00:01:25,390 --> 00:01:33,939
because why why is it so much fun

00:01:29,560 --> 00:01:35,740
because Ruby Ruby is super fun writing

00:01:33,939 --> 00:01:42,640
games is fun you put it together and

00:01:35,740 --> 00:01:44,439
it's fun squared so this is my little

00:01:42,640 --> 00:01:48,729
Ruby guy this is one of my claims to

00:01:44,439 --> 00:01:51,130
fame but I love this because this is how

00:01:48,729 --> 00:01:54,189
I feel about Ruby right adventurous and

00:01:51,130 --> 00:01:58,179
awesome and ready to tackle so I would

00:01:54,189 --> 00:01:59,829
like to see more fun at you know why I'd

00:01:58,179 --> 00:02:03,640
like to see us have more fun with Ruby

00:01:59,829 --> 00:02:05,799
and games are a great way to do it so

00:02:03,640 --> 00:02:08,290
let's talk about gosu go sees a

00:02:05,799 --> 00:02:11,170
fantastic game library I guess show of

00:02:08,290 --> 00:02:12,950
hands who is familiar with game

00:02:11,170 --> 00:02:16,069
programming

00:02:12,950 --> 00:02:19,370
oh cool so maybe like a fifth of the

00:02:16,069 --> 00:02:22,160
room who's familiar with gosu or is

00:02:19,370 --> 00:02:24,080
heard of gosu before pretty much the

00:02:22,160 --> 00:02:26,630
same audience okay this is great so this

00:02:24,080 --> 00:02:27,680
is new stuff and that's exciting

00:02:26,630 --> 00:02:30,380
because you'll get to learn new things

00:02:27,680 --> 00:02:32,450
at conferences so if you've got internet

00:02:30,380 --> 00:02:35,000
which you should because it's great up

00:02:32,450 --> 00:02:37,010
here it's horrible downstairs gem

00:02:35,000 --> 00:02:40,790
install goes to and it will try to

00:02:37,010 --> 00:02:43,610
compile and we'll move on okay you can

00:02:40,790 --> 00:02:45,950
also go to Lib go see org and look at

00:02:43,610 --> 00:02:48,350
the documentation and we'll step through

00:02:45,950 --> 00:02:52,790
some of this documentation in this

00:02:48,350 --> 00:02:57,410
presentation all right so what can you

00:02:52,790 --> 00:02:59,300
do with go sue go Sue's I guess we

00:02:57,410 --> 00:03:01,040
should talk about what go sue is and

00:02:59,300 --> 00:03:04,610
we're going to talk a little bit about

00:03:01,040 --> 00:03:08,870
what you can do with it so here's the

00:03:04,610 --> 00:03:14,209
website Lib go sue org has a bunch of

00:03:08,870 --> 00:03:18,260
information go sue is a C++ library and

00:03:14,209 --> 00:03:20,930
so all of it's a low level game library

00:03:18,260 --> 00:03:23,930
written in C++ but it has first-class

00:03:20,930 --> 00:03:26,239
Ruby bindings which means that all of

00:03:23,930 --> 00:03:29,750
the concepts that if you wanted to use

00:03:26,239 --> 00:03:31,250
go suit with C++ map directly to Ruby so

00:03:29,750 --> 00:03:33,290
it just means that it's a really

00:03:31,250 --> 00:03:38,709
fantastic Ruby library as well as the

00:03:33,290 --> 00:03:42,049
C++ library okay let's take a look at

00:03:38,709 --> 00:03:47,209
what we can do and go sue so I'm going

00:03:42,049 --> 00:03:53,989
to check out my go sue library I just

00:03:47,209 --> 00:03:57,970
thought you guys see this yeah I'm

00:03:53,989 --> 00:03:57,970
wondering what my resolution is here

00:04:03,710 --> 00:04:13,590
how's that all right so if you check out

00:04:09,150 --> 00:04:19,560
the go through git repo you can change

00:04:13,590 --> 00:04:22,350
it into the examples directory this is

00:04:19,560 --> 00:04:24,330
just go sue so if you go to Lib go

00:04:22,350 --> 00:04:31,740
through here what is my resolution my

00:04:24,330 --> 00:04:34,740
resolution is crazy big so if you go

00:04:31,740 --> 00:04:36,810
here you'll get to the github repo for

00:04:34,740 --> 00:04:39,720
gosu so this is just if you check out

00:04:36,810 --> 00:04:41,690
the gosu repo on github

00:04:39,720 --> 00:04:46,100
there will be an examples directory I

00:04:41,690 --> 00:04:50,340
need to switch to my gosu gem set and

00:04:46,100 --> 00:04:53,010
once you have gosu installed as a gem

00:04:50,340 --> 00:04:56,580
you can go to the the repo and there's a

00:04:53,010 --> 00:05:00,090
file called captain ruby which is a

00:04:56,580 --> 00:05:02,610
pretty fun I'm going to go down I'm

00:05:00,090 --> 00:05:10,430
going to change my displays here get it

00:05:02,610 --> 00:05:10,430
a little bit bigger there we go

00:05:11,510 --> 00:05:19,070
all right so this is a little game that

00:05:14,960 --> 00:05:22,880
comes with gosu shows you how to play

00:05:19,070 --> 00:05:31,400
gosu and it's just a little platformer

00:05:22,880 --> 00:05:33,260
game and it's super hard alright this

00:05:31,400 --> 00:05:41,960
one does not have sound I'll show you

00:05:33,260 --> 00:05:44,320
some other ones that do okay I'll try

00:05:41,960 --> 00:05:46,940
not to talk when we have sound them ah

00:05:44,320 --> 00:05:49,130
it's horrible I can never get to that

00:05:46,940 --> 00:05:52,070
upper right hand corner because you got

00:05:49,130 --> 00:05:59,720
to go all the way back down yeah that's

00:05:52,070 --> 00:06:01,270
a cane oh yeah good luck getting all the

00:05:59,720 --> 00:06:04,520
rubies all right

00:06:01,270 --> 00:06:08,330
alright so that's that's possible the

00:06:04,520 --> 00:06:13,820
code to all this is is available in the

00:06:08,330 --> 00:06:15,410
gosu library so it is 224 lines long for

00:06:13,820 --> 00:06:18,500
the entire thing which is not too bad

00:06:15,410 --> 00:06:21,470
that includes the other code to do the

00:06:18,500 --> 00:06:24,350
to build the map and all the input to

00:06:21,470 --> 00:06:30,530
move around so in less than 250 lines of

00:06:24,350 --> 00:06:35,210
code you've got that game the what what

00:06:30,530 --> 00:06:37,460
about the graphics yep that's all Ruby

00:06:35,210 --> 00:06:40,850
could write that all that logic to play

00:06:37,460 --> 00:06:43,820
that game is is all Ruby code so here's

00:06:40,850 --> 00:06:44,570
another example so I've got some little

00:06:43,820 --> 00:06:46,670
kids all right

00:06:44,570 --> 00:06:51,530
they were littler a couple years ago and

00:06:46,670 --> 00:06:53,570
I had a I had an old netbook like the

00:06:51,530 --> 00:06:55,640
really small nine inch and they always

00:06:53,570 --> 00:06:57,080
wanted to sit in my lap and like you

00:06:55,640 --> 00:06:59,750
know be like dad and work on the

00:06:57,080 --> 00:07:02,030
computer and I needed to move them off

00:06:59,750 --> 00:07:03,710
and focus them on something else and I

00:07:02,030 --> 00:07:05,810
had this little computer that looked

00:07:03,710 --> 00:07:10,880
just the right size for them so I

00:07:05,810 --> 00:07:13,310
created this little this little app

00:07:10,880 --> 00:07:14,840
called little brat because usually I was

00:07:13,310 --> 00:07:17,690
frustrated when they got in front of me

00:07:14,840 --> 00:07:20,540
and so I just type little brat and you

00:07:17,690 --> 00:07:22,870
uh here we're gonna have some sound here

00:07:20,540 --> 00:07:22,870
Coby

00:07:37,380 --> 00:07:47,949
so they would play that for hours and

00:07:39,729 --> 00:07:50,139
was awesome another one that I wrote so

00:07:47,949 --> 00:07:51,639
I didn't write the captain Ruby but I

00:07:50,139 --> 00:07:55,030
did write this I did I wrote this in

00:07:51,639 --> 00:07:57,760
2010 I gave an earlier version of this

00:07:55,030 --> 00:08:00,400
talk in 2010 and I created another gem

00:07:57,760 --> 00:08:06,340
that uses gosu this is all written in

00:08:00,400 --> 00:08:10,419
Ruby called Skagen and so this is a very

00:08:06,340 --> 00:08:14,220
2010 big big into ninjas right and the

00:08:10,419 --> 00:08:20,919
whole point fail begin is to try and get

00:08:14,220 --> 00:08:26,530
to the exits you win and again keep

00:08:20,919 --> 00:08:39,039
doing it and keep adding more snakes you

00:08:26,530 --> 00:08:41,289
win big in you win all right so that was

00:08:39,039 --> 00:08:45,100
me as well

00:08:41,289 --> 00:08:49,150
there is a gaming contest where you get

00:08:45,100 --> 00:08:51,339
a weekend 48 hours called Ludlum dare to

00:08:49,150 --> 00:08:52,870
build a game completely on your own as a

00:08:51,339 --> 00:08:56,410
single person and they want to see how

00:08:52,870 --> 00:08:59,080
far you can get in 48 hours to build

00:08:56,410 --> 00:09:01,839
your own game all the all the art assets

00:08:59,080 --> 00:09:04,779
all the code needs to be done in the 24

00:09:01,839 --> 00:09:08,440
hours and this library is a fantastic

00:09:04,779 --> 00:09:13,260
little library too to compete in the

00:09:08,440 --> 00:09:17,140
global of them dare contest alright

00:09:13,260 --> 00:09:19,720
so lots are possible we saw lots of

00:09:17,140 --> 00:09:21,400
different types of games we saw captain

00:09:19,720 --> 00:09:24,550
Ruby which is more of a classical

00:09:21,400 --> 00:09:28,240
platformer we had my little brat which

00:09:24,550 --> 00:09:29,860
is a key Smasher for little kids and

00:09:28,240 --> 00:09:32,770
that escaped a rubyconf which is more of

00:09:29,860 --> 00:09:35,620
an arcade kind of style game so there's

00:09:32,770 --> 00:09:37,540
lots of things that we can do with Ruby

00:09:35,620 --> 00:09:40,389
with gaming

00:09:37,540 --> 00:09:43,810
and so show of hands who would like to

00:09:40,389 --> 00:09:46,449
write games in Ruby all right good

00:09:43,810 --> 00:09:48,010
almost half everybody good so what we're

00:09:46,449 --> 00:09:50,560
going to talk about that here's the

00:09:48,010 --> 00:09:54,100
thing it's super easy to do it's not

00:09:50,560 --> 00:09:56,709
complex right and it's actually really

00:09:54,100 --> 00:09:59,019
fun as well so here's how we're going to

00:09:56,709 --> 00:10:00,519
do it here's the first thing there is

00:09:59,019 --> 00:10:02,079
that there's only a handful of concepts

00:10:00,519 --> 00:10:05,500
we need to understand in order to write

00:10:02,079 --> 00:10:07,680
games the first is we need to understand

00:10:05,500 --> 00:10:10,449
this thing called the game loop right

00:10:07,680 --> 00:10:13,660
and so if you've done any kind of

00:10:10,449 --> 00:10:15,279
Windows or or UI programming you're

00:10:13,660 --> 00:10:19,329
familiar with kind of the evented model

00:10:15,279 --> 00:10:21,190
where your application will raise event

00:10:19,329 --> 00:10:23,019
so you'll have to respond to it that's

00:10:21,190 --> 00:10:25,240
the exact same thing we have within a

00:10:23,019 --> 00:10:27,579
game loop your game is going to have a

00:10:25,240 --> 00:10:29,980
game loop that loop is going to just

00:10:27,579 --> 00:10:33,600
loop over and over and over and over

00:10:29,980 --> 00:10:37,510
again the game loop is run and by gosu

00:10:33,600 --> 00:10:39,970
by the gosu window object and what it's

00:10:37,510 --> 00:10:42,610
going to do is it's going to run over

00:10:39,970 --> 00:10:45,790
and over and 60 times a second it's

00:10:42,610 --> 00:10:47,550
going to call the update method and then

00:10:45,790 --> 00:10:51,100
it's going to call the draw method and

00:10:47,550 --> 00:10:53,350
then every time you press or depress a

00:10:51,100 --> 00:10:55,899
button it will call the button down and

00:10:53,350 --> 00:10:56,709
the button up method right and that's

00:10:55,899 --> 00:11:01,350
basically it

00:10:56,709 --> 00:11:10,990
that's all there is to it kick over here

00:11:01,350 --> 00:11:13,209
on lib gosu we'll see here is the go

00:11:10,990 --> 00:11:17,250
here's the our document eight our doc

00:11:13,209 --> 00:11:22,000
documentation for gosu for window and

00:11:17,250 --> 00:11:23,500
down here and these callbacks will see

00:11:22,000 --> 00:11:26,170
that there is an update method and

00:11:23,500 --> 00:11:28,389
there's a draw method a button up method

00:11:26,170 --> 00:11:30,490
and a button down method right and so

00:11:28,389 --> 00:11:32,199
that's all it is you're going to create

00:11:30,490 --> 00:11:34,360
a new instance of this go through window

00:11:32,199 --> 00:11:36,160
and then we're going to define what we

00:11:34,360 --> 00:11:37,380
want to do within those methods that's

00:11:36,160 --> 00:11:40,899
basically it

00:11:37,380 --> 00:11:43,949
okay so let's let's do that let's begin

00:11:40,899 --> 00:11:43,949
as it were

00:11:48,500 --> 00:11:59,730
okay so let's start so what I'm going to

00:11:55,800 --> 00:12:00,779
do is I'm going to open up my editor and

00:11:59,730 --> 00:12:03,209
I'm going to create this directory

00:12:00,779 --> 00:12:06,949
called hello world and in this hello

00:12:03,209 --> 00:12:09,360
world is a very very simple ruby file

00:12:06,949 --> 00:12:11,550
I'm going to create a new class called

00:12:09,360 --> 00:12:14,670
hello world game that is going to

00:12:11,550 --> 00:12:16,829
inherit from gosu window my initializer

00:12:14,670 --> 00:12:19,079
is going to take three parameters which

00:12:16,829 --> 00:12:20,730
is going to be a width a height and

00:12:19,079 --> 00:12:24,360
whether or not this game is going to be

00:12:20,730 --> 00:12:27,449
running in full-screen I call super

00:12:24,360 --> 00:12:28,470
because gosu is intending to have that

00:12:27,449 --> 00:12:31,410
initialize called

00:12:28,470 --> 00:12:38,399
if I didn't want to pass that in I could

00:12:31,410 --> 00:12:39,540
just put like 1024 by 768 here and then

00:12:38,399 --> 00:12:42,389
false or true

00:12:39,540 --> 00:12:44,910
and super and then I wouldn't have to

00:12:42,389 --> 00:12:46,769
have it defined in my initializer but I

00:12:44,910 --> 00:12:52,110
like to have those default values in my

00:12:46,769 --> 00:12:53,880
initializer okay and simply we're going

00:12:52,110 --> 00:12:55,920
to do hello world app so we're going to

00:12:53,880 --> 00:12:58,440
print out hello world in the caption and

00:12:55,920 --> 00:13:00,750
that's all it is we've got our methods

00:12:58,440 --> 00:13:02,310
defined for update and draw so we can

00:13:00,750 --> 00:13:05,550
put stuff in there that makes sense

00:13:02,310 --> 00:13:09,690
everybody's following so to call it it's

00:13:05,550 --> 00:13:12,060
pretty easy well we're going to CD to

00:13:09,690 --> 00:13:14,699
the hello world directory and we're just

00:13:12,060 --> 00:13:18,839
going to call Ruby hello world dot RB

00:13:14,699 --> 00:13:20,579
and there it is hello world and it

00:13:18,839 --> 00:13:24,060
doesn't do anything but it's an 800 by

00:13:20,579 --> 00:13:28,709
600 window and that caption at the top

00:13:24,060 --> 00:13:29,940
says hello world okay if I hit escape or

00:13:28,709 --> 00:13:31,560
space it's not going to do anything

00:13:29,940 --> 00:13:33,449
because we haven't told it to do

00:13:31,560 --> 00:13:36,660
anything so let's tell it to do

00:13:33,449 --> 00:13:38,790
something the first thing I'm going to

00:13:36,660 --> 00:13:43,709
do is I'm going to define that

00:13:38,790 --> 00:13:46,110
button-down method and it's going to get

00:13:43,709 --> 00:13:52,100
passed an ID and I'm going to call

00:13:46,110 --> 00:13:55,570
closed if that ID is the same as gosu

00:13:52,100 --> 00:13:57,850
keyboard escape

00:13:55,570 --> 00:14:00,579
right and this is the first thing I do

00:13:57,850 --> 00:14:02,050
and pretty much every gosu game is I

00:14:00,579 --> 00:14:03,699
just find a way to escape it because I

00:14:02,050 --> 00:14:06,550
don't have to try and click that little

00:14:03,699 --> 00:14:10,870
that little red dot all right

00:14:06,550 --> 00:14:12,639
rerun it I hit escape and it closes so

00:14:10,870 --> 00:14:16,990
we see that it's working we got these

00:14:12,639 --> 00:14:18,730
callbacks happening now there's more

00:14:16,990 --> 00:14:21,100
that we could do I like to actually see

00:14:18,730 --> 00:14:23,019
a bigger hello world not in the title

00:14:21,100 --> 00:14:26,110
bar of the window but actually see or

00:14:23,019 --> 00:14:27,850
something real now there's a couple of

00:14:26,110 --> 00:14:30,339
ways I could do that one I could create

00:14:27,850 --> 00:14:34,000
an image that says hello world and just

00:14:30,339 --> 00:14:36,130
put that into that screen or we can use

00:14:34,000 --> 00:14:38,680
gosu to do that for us so that's what

00:14:36,130 --> 00:14:41,589
I'm going to do here in my initializer

00:14:38,680 --> 00:14:45,519
I'm going to create a new object called

00:14:41,589 --> 00:14:47,440
image and I'm going to call I'm gonna

00:14:45,519 --> 00:14:48,519
ask gosu to create this image for me

00:14:47,440 --> 00:14:51,699
because I don't want to go to photoshop

00:14:48,519 --> 00:14:58,029
and build an image so we'll ask gosu

00:14:51,699 --> 00:15:01,959
image to create a new image from text

00:14:58,029 --> 00:15:04,510
okay so let's kick over to the

00:15:01,959 --> 00:15:07,420
documentation we looked here this is the

00:15:04,510 --> 00:15:10,060
window documentation here's image we

00:15:07,420 --> 00:15:12,699
know that this image object is going to

00:15:10,060 --> 00:15:15,730
have a height and width but there's also

00:15:12,699 --> 00:15:17,589
these class methods from text load tiles

00:15:15,730 --> 00:15:20,920
and then the initialize when we call new

00:15:17,589 --> 00:15:24,069
okay so it's this from text that we want

00:15:20,920 --> 00:15:27,370
to call from text takes five arguments

00:15:24,069 --> 00:15:29,319
it takes the window that this text is

00:15:27,370 --> 00:15:31,180
going to be printed to it's going to

00:15:29,319 --> 00:15:34,300
we're going to pass the text that's

00:15:31,180 --> 00:15:37,120
going to be created for that image the

00:15:34,300 --> 00:15:39,310
font name the font height and then line

00:15:37,120 --> 00:15:41,410
spacing width and the alignment we can

00:15:39,310 --> 00:15:44,860
start there our default values for those

00:15:41,410 --> 00:15:47,529
so we can drop those so here I'm going

00:15:44,860 --> 00:15:49,839
to say from text the first is self

00:15:47,529 --> 00:15:53,980
because that's the window we're passing

00:15:49,839 --> 00:15:57,370
our self into this next thing I do is

00:15:53,980 --> 00:16:02,800
I'm going to say hello I know

00:15:57,370 --> 00:16:07,420
la Ruby conf okay

00:16:02,800 --> 00:16:10,390
the third is the font name and I need to

00:16:07,420 --> 00:16:12,130
specify a font name if you have a font

00:16:10,390 --> 00:16:15,490
file you can actually specify that

00:16:12,130 --> 00:16:17,260
either that path or yes specify the path

00:16:15,490 --> 00:16:22,180
and then it will build that image with

00:16:17,260 --> 00:16:23,620
that font I don't want to remember where

00:16:22,180 --> 00:16:27,760
that is or look it up because this can

00:16:23,620 --> 00:16:31,720
be different across platform so one of

00:16:27,760 --> 00:16:33,959
the things I'm going to do is where are

00:16:31,720 --> 00:16:33,959
you

00:16:37,840 --> 00:16:46,660
here we go default font name gosu will

00:16:42,010 --> 00:16:50,340
give me a default font name and then

00:16:46,660 --> 00:16:53,650
let's make that 100 pixels tall okay and

00:16:50,340 --> 00:16:55,900
then on draw in order to actually put

00:16:53,650 --> 00:17:06,580
that on the screen I'm just going to say

00:16:55,900 --> 00:17:07,750
we want image to draw at 0 0 0 and we'll

00:17:06,580 --> 00:17:11,500
talk about what those mean

00:17:07,750 --> 00:17:14,290
later okay let's see if we can get that

00:17:11,500 --> 00:17:20,950
to work and there it is hello la

00:17:14,290 --> 00:17:21,850
rubyconf all right what's that it's the

00:17:20,950 --> 00:17:23,530
best game ever

00:17:21,850 --> 00:17:30,780
what's great is that you press escape

00:17:23,530 --> 00:17:30,780
and it goes away I escaped

00:17:33,440 --> 00:17:41,850
all right let's change it just LA and do

00:17:39,659 --> 00:17:44,490
it again all right there we go

00:17:41,850 --> 00:17:49,380
all right the next thing is I want to

00:17:44,490 --> 00:17:52,889
make this centered right so let's take a

00:17:49,380 --> 00:17:55,500
look at the draw method the draw method

00:17:52,889 --> 00:17:56,850
takes a bunch of arguments really the

00:17:55,500 --> 00:17:58,500
first three are the ones that we care

00:17:56,850 --> 00:18:00,149
about and the rest have default values

00:17:58,500 --> 00:18:00,990
so we can leave them off if we're not

00:18:00,149 --> 00:18:04,200
going to change it

00:18:00,990 --> 00:18:07,889
the first is X the next is Y and the

00:18:04,200 --> 00:18:10,340
third is Z so let's see what what those

00:18:07,889 --> 00:18:14,340
mean

00:18:10,340 --> 00:18:19,200
all right um here's our screen we have

00:18:14,340 --> 00:18:22,049
an 800 by 600 screen the X and the y are

00:18:19,200 --> 00:18:24,990
the coordinates on the screen where we

00:18:22,049 --> 00:18:28,710
want something placed right so the upper

00:18:24,990 --> 00:18:31,230
left-hand corner is 0 X and 0 Y the

00:18:28,710 --> 00:18:34,710
bottom right-hand corner is 800 X and

00:18:31,230 --> 00:18:41,789
600 Y the middle is going to be 400 X

00:18:34,710 --> 00:18:44,789
and 300 Y makes sense okay so let's move

00:18:41,789 --> 00:18:47,669
over to back to our code so we know this

00:18:44,789 --> 00:18:54,179
is 800 by 600 so we can pray for hundred

00:18:47,669 --> 00:18:57,330
by 300 and get it in the middle let's

00:18:54,179 --> 00:19:00,019
run that but it doesn't get it in the

00:18:57,330 --> 00:19:03,149
middle because that middle point is also

00:19:00,019 --> 00:19:08,789
the upper left-hand corner of our image

00:19:03,149 --> 00:19:10,500
right what's that okay all right so

00:19:08,789 --> 00:19:14,250
let's try and fix it let's see what we

00:19:10,500 --> 00:19:16,129
could do is price 8 maybe 400 this is

00:19:14,250 --> 00:19:20,730
the same thing as like self dot width

00:19:16,129 --> 00:19:23,700
actually so you say self dot with -

00:19:20,730 --> 00:19:29,039
image dot width because I don't know how

00:19:23,700 --> 00:19:36,629
big that image is right so self dot

00:19:29,039 --> 00:19:38,039
height - image height oh man I am live

00:19:36,629 --> 00:19:39,710
coding from a lot of people I just

00:19:38,039 --> 00:19:46,429
realized that

00:19:39,710 --> 00:19:51,890
okay I didn't work either now I didn't

00:19:46,429 --> 00:19:56,539
work oh I know I need no yeah we need to

00:19:51,890 --> 00:19:58,520
divide it in half so we'll divide that

00:19:56,539 --> 00:20:02,000
in half try it again oh it doesn't work

00:19:58,520 --> 00:20:09,850
again why doesn't it work again I don't

00:20:02,000 --> 00:20:09,850
know all right okay so we're getting a

00:20:10,690 --> 00:20:18,830
we are getting a advice on how to get it

00:20:15,890 --> 00:20:20,179
centered right so what we want is we

00:20:18,830 --> 00:20:22,760
want the center point of the screen

00:20:20,179 --> 00:20:25,610
which is self dot with self dealt with

00:20:22,760 --> 00:20:28,909
divided by two so if it's a hundred wide

00:20:25,610 --> 00:20:31,130
we want that 400 value and the the

00:20:28,909 --> 00:20:33,890
vertical position we want the total

00:20:31,130 --> 00:20:35,809
height which is 600 divided by two but

00:20:33,890 --> 00:20:38,029
because we want the image centered now

00:20:35,809 --> 00:20:41,090
we have to move that we have to move

00:20:38,029 --> 00:20:42,770
those values up by half the height of

00:20:41,090 --> 00:20:46,429
the image and half the width of the

00:20:42,770 --> 00:20:50,890
image right and so let's see you so

00:20:46,429 --> 00:20:56,529
we'll see if this works and it does yeah

00:20:50,890 --> 00:21:00,860
all right so here's the thing about this

00:20:56,529 --> 00:21:02,720
it's math right writing games in Ruby is

00:21:00,860 --> 00:21:05,500
fun but there's math involved and

00:21:02,720 --> 00:21:10,730
sometimes you'll get that mouth wrong

00:21:05,500 --> 00:21:14,510
math right solve that for the Wi-Fi

00:21:10,730 --> 00:21:16,610
password right math you thought you were

00:21:14,510 --> 00:21:21,289
done with after-school but you're not

00:21:16,610 --> 00:21:22,970
math is coming back okay so there is

00:21:21,289 --> 00:21:26,240
math involved that can be frustrating

00:21:22,970 --> 00:21:28,370
but we're going to try and work through

00:21:26,240 --> 00:21:30,260
it so one of the things that I would

00:21:28,370 --> 00:21:31,909
really like to do is I would like this

00:21:30,260 --> 00:21:33,919
image to do something kind of

00:21:31,909 --> 00:21:34,789
interesting right because it's just

00:21:33,919 --> 00:21:35,870
sitting there

00:21:34,789 --> 00:21:38,539
not really doing anything it's not

00:21:35,870 --> 00:21:42,020
earning its keep so let's make it earn

00:21:38,539 --> 00:21:45,470
its keep all these things right here

00:21:42,020 --> 00:21:47,360
this calculation I don't know I really

00:21:45,470 --> 00:21:49,309
don't want that in my draw I don't want

00:21:47,360 --> 00:21:50,870
to add logic to my draw I just want it

00:21:49,309 --> 00:21:52,920
to be responsible for drawing so what

00:21:50,870 --> 00:21:55,980
I'm going to do is I'm going to come up

00:21:52,920 --> 00:22:01,170
and I'm going to make an X instance

00:21:55,980 --> 00:22:04,470
variable and I'm going to put that put

00:22:01,170 --> 00:22:07,610
that logic in X okay

00:22:04,470 --> 00:22:16,490
and then I'm going to come over here and

00:22:07,610 --> 00:22:16,490
I'm going to put that and why you know

00:22:16,610 --> 00:22:24,920
this podium is the worst for trying to

00:22:21,510 --> 00:22:27,750
type thank you okay

00:22:24,920 --> 00:22:29,790
now this shouldn't change it it doesn't

00:22:27,750 --> 00:22:36,090
same thing so we're good to go we've got

00:22:29,790 --> 00:22:38,280
these x and y values now we can we can

00:22:36,090 --> 00:22:39,990
change them so one of the ways that we

00:22:38,280 --> 00:22:42,240
can change them is to make them kind of

00:22:39,990 --> 00:22:46,710
time-dependent so one of the things I

00:22:42,240 --> 00:22:53,090
like to do is I'm going to add a value

00:22:46,710 --> 00:22:58,530
so I'm going to say math dot sign match

00:22:53,090 --> 00:23:01,740
of time dot now dot 2f which is going to

00:22:58,530 --> 00:23:07,140
give me a float:right and I'm going to

00:23:01,740 --> 00:23:08,790
multiply that times about 150 okay if I

00:23:07,140 --> 00:23:12,450
do that and now it's when we go back and

00:23:08,790 --> 00:23:14,130
forth right so time is always going to

00:23:12,450 --> 00:23:15,060
be updating every time you call update

00:23:14,130 --> 00:23:18,240
we're going to get a slightly different

00:23:15,060 --> 00:23:20,490
time and so we're going to move that

00:23:18,240 --> 00:23:24,210
position slightly you know every

00:23:20,490 --> 00:23:27,660
fraction of a second 60 times a second

00:23:24,210 --> 00:23:36,150
we're going to move that image let's do

00:23:27,660 --> 00:23:43,830
it again let's add math cosine of time

00:23:36,150 --> 00:23:46,290
dot now dot 2f and let's multiply that

00:23:43,830 --> 00:23:50,580
times 200 so it'll be just a little more

00:23:46,290 --> 00:23:52,710
exaggerated and they go so math sine and

00:23:50,580 --> 00:23:54,330
cosine gives us a circle we didn't do

00:23:52,710 --> 00:23:57,960
anything with that this is all more math

00:23:54,330 --> 00:24:01,029
math is fun okay

00:23:57,960 --> 00:24:05,580
viii and cosine are so blase let's

00:24:01,029 --> 00:24:08,979
change this out to like a tangent right

00:24:05,580 --> 00:24:11,639
lower that so it doesn't actually shows

00:24:08,979 --> 00:24:11,639
up on the screen

00:24:12,730 --> 00:24:25,040
all right yeah there we go so we haven't

00:24:19,910 --> 00:24:28,550
really done much in this game you can

00:24:25,040 --> 00:24:33,290
call the game we built an image off of

00:24:28,550 --> 00:24:35,180
some text we are taking input so we know

00:24:33,290 --> 00:24:38,480
that we press the escape button we're

00:24:35,180 --> 00:24:40,220
going to close and we are calculating

00:24:38,480 --> 00:24:42,950
position that we want this image to be

00:24:40,220 --> 00:24:48,050
now there is math involved we're saying

00:24:42,950 --> 00:24:49,760
however wide the window is we're going

00:24:48,050 --> 00:24:51,620
to try and find the center mark we're

00:24:49,760 --> 00:24:53,690
going to offset that by the size of the

00:24:51,620 --> 00:24:57,020
image and then we're going to offset

00:24:53,690 --> 00:24:59,120
that by some value sine and cosine of

00:24:57,020 --> 00:25:07,160
the current time cool

00:24:59,120 --> 00:25:10,100
all right there's more we could do why

00:25:07,160 --> 00:25:12,280
don't we try to not only see the image

00:25:10,100 --> 00:25:16,730
but see if we can hear stuff as well

00:25:12,280 --> 00:25:20,000
gosu has more that it offers us not just

00:25:16,730 --> 00:25:21,410
B we don't just have the ability to

00:25:20,000 --> 00:25:23,620
print things to the screen we can

00:25:21,410 --> 00:25:26,809
actually play songs play sounds as well

00:25:23,620 --> 00:25:29,960
so there are two different classes one

00:25:26,809 --> 00:25:31,760
is song which is intended to be a sound

00:25:29,960 --> 00:25:33,860
that's going to be playing for a long

00:25:31,760 --> 00:25:35,750
time the other is a sample which is

00:25:33,860 --> 00:25:37,850
intended to be a sound that you might

00:25:35,750 --> 00:25:40,850
have happening that might be happening

00:25:37,850 --> 00:25:42,460
multiple times multiple instances of a

00:25:40,850 --> 00:25:44,840
sample could be playing at the same time

00:25:42,460 --> 00:25:46,610
they're typically smaller so just

00:25:44,840 --> 00:25:48,050
performance wise there's different

00:25:46,610 --> 00:25:50,540
characteristics for dealing with that

00:25:48,050 --> 00:25:53,330
those resources within a game and so

00:25:50,540 --> 00:25:55,429
there are the two let's look at what

00:25:53,330 --> 00:26:01,010
that documentation looks like again on

00:25:55,429 --> 00:26:04,520
the lib gosu org site the methods once

00:26:01,010 --> 00:26:08,120
we create it we give it a window and a

00:26:04,520 --> 00:26:11,000
file name we have a play and a stop for

00:26:08,120 --> 00:26:14,030
the song and then the sample is pretty

00:26:11,000 --> 00:26:18,170
much the same we haven't initialize and

00:26:14,030 --> 00:26:19,790
then also a play when we play it we can

00:26:18,170 --> 00:26:22,660
give it a volume and a speed and whether

00:26:19,790 --> 00:26:22,660
or not we want to loop

00:26:24,999 --> 00:26:35,029
so let's open this up on my desktop I've

00:26:32,149 --> 00:26:37,879
got a couple of the songs I'm just going

00:26:35,029 --> 00:26:43,239
to drop into this project so let's see

00:26:37,879 --> 00:26:44,570
let's do bubble that's a good one and

00:26:43,239 --> 00:26:47,019
here you go

00:26:44,570 --> 00:26:55,090
any Kim Possible fans in the audience

00:26:47,019 --> 00:26:58,669
I'll do a communicator so back in our

00:26:55,090 --> 00:27:01,340
initializer I'm going to create a song

00:26:58,669 --> 00:27:10,669
object and that's going to be coming

00:27:01,340 --> 00:27:13,190
from gosu song new again passing itself

00:27:10,669 --> 00:27:15,859
gosu window is a special object

00:27:13,190 --> 00:27:17,869
you really shouldn't ever initialize one

00:27:15,859 --> 00:27:19,429
instance of window and that's because

00:27:17,869 --> 00:27:21,679
it's going to do a bunch of low-level

00:27:19,429 --> 00:27:24,739
system resource stuff in order to print

00:27:21,679 --> 00:27:27,679
to the to the screen so that's why we're

00:27:24,739 --> 00:27:30,049
passing this window around so much so

00:27:27,679 --> 00:27:35,960
call self and then it's going to be

00:27:30,049 --> 00:27:39,320
bubbles mp3 is that right yep bubbled

00:27:35,960 --> 00:27:42,679
mp3 this is a why the lucky stiff song

00:27:39,320 --> 00:27:48,230
from long long long ago and then we'll

00:27:42,679 --> 00:27:53,419
do sound is going to be goes to sample

00:27:48,230 --> 00:27:56,230
dot new also self and it'll be a

00:27:53,419 --> 00:27:56,230
communicator

00:28:00,510 --> 00:28:05,820
thank you live coding ladies and

00:28:03,270 --> 00:28:07,590
gentlemen all these all these commits

00:28:05,820 --> 00:28:08,940
are available in my github repo if you

00:28:07,590 --> 00:28:11,250
guys want to follow along with that and

00:28:08,940 --> 00:28:15,660
just in case I can always check that out

00:28:11,250 --> 00:28:19,590
if I totally screw something up just go

00:28:15,660 --> 00:28:33,530
to github.com slash blancmange what's

00:28:19,590 --> 00:28:38,580
that blow mage dlow ma GE alright so

00:28:33,530 --> 00:28:42,620
blow mage all right so what I'm going to

00:28:38,580 --> 00:28:50,280
do is I'm going to say sample play

00:28:42,620 --> 00:28:57,179
whenever ID is going to be X so keyboard

00:28:50,280 --> 00:28:59,880
X right so I know so the song is always

00:28:57,179 --> 00:29:02,070
going to play and then the sample is

00:28:59,880 --> 00:29:04,429
going to play whenever I hit X so we

00:29:02,070 --> 00:29:04,429
good for

00:29:08,929 --> 00:29:15,039
oh I see yeah

00:29:16,659 --> 00:29:20,909
okay let's see if this even works

00:29:25,089 --> 00:29:33,659
cannot open yeah it is away that's

00:29:27,999 --> 00:29:33,659
right I did not convert that

00:29:51,179 --> 00:29:58,779
okay there you go so that's how easy it

00:29:56,140 --> 00:30:01,270
is to use right you create an image

00:29:58,779 --> 00:30:03,460
object you can either create that from

00:30:01,270 --> 00:30:05,799
text or you can load an image on your on

00:30:03,460 --> 00:30:08,580
the file system you can create a song

00:30:05,799 --> 00:30:11,350
object or a sample you can play that

00:30:08,580 --> 00:30:14,370
it's straightforward it's not very

00:30:11,350 --> 00:30:15,820
difficult less than 25 lines of code and

00:30:14,370 --> 00:30:19,200
we're good to go

00:30:15,820 --> 00:30:23,860
so let's take a look at maybe a little a

00:30:19,200 --> 00:30:26,380
little bit different example I think we

00:30:23,860 --> 00:30:28,320
have to go through some more slides okay

00:30:26,380 --> 00:30:34,929
was that fun show of hands who like that

00:30:28,320 --> 00:30:37,120
yes okay when we are working within

00:30:34,929 --> 00:30:39,549
games it is very common for people to

00:30:37,120 --> 00:30:41,620
talk about sprites has anybody heard the

00:30:39,549 --> 00:30:43,990
term sprite before but I don't mean CSS

00:30:41,620 --> 00:30:46,960
sprites who is heard of sprite before

00:30:43,990 --> 00:30:49,330
but and not a CSS sprite cool I have you

00:30:46,960 --> 00:30:55,690
so what is a sprite somebody tell me

00:30:49,330 --> 00:31:00,070
what a sprite is what's that it's a

00:30:55,690 --> 00:31:02,080
bitmap typically yeah it's it's a region

00:31:00,070 --> 00:31:05,049
on the screen that you're going to

00:31:02,080 --> 00:31:09,309
you're going to draw too right it's

00:31:05,049 --> 00:31:11,169
pretty it's pretty common when I folks

00:31:09,309 --> 00:31:12,250
are you know in their games that they'll

00:31:11,169 --> 00:31:13,539
create an object it's going to be

00:31:12,250 --> 00:31:16,049
responsible for printing to the screen

00:31:13,539 --> 00:31:21,340
and they're going to call that a sprite

00:31:16,049 --> 00:31:22,809
it's also really common for for these

00:31:21,340 --> 00:31:26,590
concepts to have something known as a

00:31:22,809 --> 00:31:29,140
sprite sheet a sprite sheet is a special

00:31:26,590 --> 00:31:33,640
case image that can be divided into

00:31:29,140 --> 00:31:36,760
columns and rows and each each cell of

00:31:33,640 --> 00:31:38,980
this larger image has a small

00:31:36,760 --> 00:31:40,870
incremental change and some animation

00:31:38,980 --> 00:31:43,659
that we're going to show so in this case

00:31:40,870 --> 00:31:47,169
we've got my little Ruby guy and he's

00:31:43,659 --> 00:31:50,830
slowly moving his legs his inverted feet

00:31:47,169 --> 00:31:52,870
to walk I didn't do the animation it

00:31:50,830 --> 00:31:57,220
looks kind of funny to me but it works

00:31:52,870 --> 00:31:59,160
and this is a sprite sheet okay so let's

00:31:57,220 --> 00:32:00,690
uh

00:31:59,160 --> 00:32:01,880
let's see if we can get this working so

00:32:00,690 --> 00:32:09,660
we're going to create a new directory

00:32:01,880 --> 00:32:11,460
called sprite all right and we're going

00:32:09,660 --> 00:32:15,060
to create a brand new file we're going

00:32:11,460 --> 00:32:16,020
to save that as sprite dot RB we're

00:32:15,060 --> 00:32:22,680
going to do the same thing we did before

00:32:16,020 --> 00:32:26,190
we're going to require gosu all right a

00:32:22,680 --> 00:32:32,450
new class called sprite game it's going

00:32:26,190 --> 00:32:34,560
to inherit from gosu window okay and

00:32:32,450 --> 00:32:41,310
then at the end of it we're going to

00:32:34,560 --> 00:32:44,910
call sprite game new show and that will

00:32:41,310 --> 00:32:53,250
tell gosu to play this game for us we

00:32:44,910 --> 00:33:07,070
need an initializer with a width of 800

00:32:53,250 --> 00:33:07,070
a height of 600 and fullscreen of false

00:33:08,270 --> 00:33:15,270
and then call super to let gosu know

00:33:13,290 --> 00:33:21,350
about this let's see if we get this to

00:33:15,270 --> 00:33:21,350
work sprite

00:33:23,300 --> 00:33:27,530
okay cool so we got the window we don't

00:33:26,120 --> 00:33:29,750
have anything happening in here yet but

00:33:27,530 --> 00:33:39,160
we'll add to this in fact I can't even

00:33:29,750 --> 00:33:42,940
exit canceled out let's check out

00:33:39,160 --> 00:33:42,940
exercise 2.1

00:33:59,950 --> 00:34:09,419
I'm confused by that unable to read

00:34:05,860 --> 00:34:09,419
current working directory no the file

00:34:25,130 --> 00:34:37,010
okay hit check out e^x 2 point 1 there

00:34:30,470 --> 00:34:39,730
we go see this right here's all my files

00:34:37,010 --> 00:34:40,970
we've got a sprite and this player image

00:34:39,730 --> 00:34:46,850
ok

00:34:40,970 --> 00:34:49,730
so in my sprite game again the width and

00:34:46,850 --> 00:34:52,040
height are 800 by 600 I'm going to

00:34:49,730 --> 00:34:55,250
create a new sprite object passing in

00:34:52,040 --> 00:34:58,070
the window on button down if it's

00:34:55,250 --> 00:35:00,500
escaped we're going to close when the

00:34:58,070 --> 00:35:02,210
window has update called we're just

00:35:00,500 --> 00:35:04,880
going to pass that update down to this

00:35:02,210 --> 00:35:06,470
sprite object and then when draw is

00:35:04,880 --> 00:35:09,230
called we're going to also tell the

00:35:06,470 --> 00:35:11,120
sprite object to draw so let's look

00:35:09,230 --> 00:35:12,740
what's in this sprite object the sprite

00:35:11,120 --> 00:35:16,010
object who is responsible for printing

00:35:12,740 --> 00:35:17,420
to the screen when it's created we're

00:35:16,010 --> 00:35:19,250
going to have this window object we're

00:35:17,420 --> 00:35:22,510
going to store that in at window for

00:35:19,250 --> 00:35:25,700
later we're going to create a new image

00:35:22,510 --> 00:35:28,400
from player dot PNG and then we're just

00:35:25,700 --> 00:35:29,690
going to Center that image by taking the

00:35:28,400 --> 00:35:31,430
window height dividing it by 2

00:35:29,690 --> 00:35:33,530
offsetting it by the image height

00:35:31,430 --> 00:35:39,770
divided by 2 and we're going to draw

00:35:33,530 --> 00:35:42,770
that so Rubi sprite there we go our

00:35:39,770 --> 00:35:45,440
little guy doesn't do anything but again

00:35:42,770 --> 00:35:50,630
hit escape he closes so let's make him

00:35:45,440 --> 00:35:52,670
do something in update because we're

00:35:50,630 --> 00:35:55,250
holding on to this window object we can

00:35:52,670 --> 00:35:57,740
inspect the window object to ask it

00:35:55,250 --> 00:35:59,630
questions one of the questions we can

00:35:57,740 --> 00:36:05,210
ask is whether or not a button is down

00:35:59,630 --> 00:36:09,890
right so what I might say is like I want

00:36:05,210 --> 00:36:17,030
my x value my position my x-coordinate I

00:36:09,890 --> 00:36:30,250
want to I want to update it by negative

00:36:17,030 --> 00:36:30,250
5 negative 5 if my my button down is

00:36:33,800 --> 00:36:43,740
keyboard left okay let's see if that guy

00:36:40,170 --> 00:36:45,810
works okay so when I press left and if I

00:36:43,740 --> 00:36:47,730
hold left he's just going to move I

00:36:45,810 --> 00:36:50,250
don't need to press left every single

00:36:47,730 --> 00:36:51,900
time for every single loop because every

00:36:50,250 --> 00:36:58,490
loop we're checking to see if it's pret

00:36:51,900 --> 00:36:58,490
depressed so let's do the same thing for

00:36:58,790 --> 00:37:08,610
for button right okay run it again and

00:37:04,980 --> 00:37:12,600
now if I go left and right we can move

00:37:08,610 --> 00:37:13,950
our guy all right okay now even though

00:37:12,600 --> 00:37:17,100
we're moving left and right he's not

00:37:13,950 --> 00:37:19,170
changing direction so the next thing I

00:37:17,100 --> 00:37:21,930
want to do is I want to take this little

00:37:19,170 --> 00:37:25,470
dude and when he goes left I want him to

00:37:21,930 --> 00:37:28,980
look left okay that's pretty easy to do

00:37:25,470 --> 00:37:31,440
actually when we call draw we're giving

00:37:28,980 --> 00:37:34,050
it our x coordinate or y coordinate and

00:37:31,440 --> 00:37:36,690
this last one is the Z index that's the

00:37:34,050 --> 00:37:40,020
same for CSS on the web so I'm assuming

00:37:36,690 --> 00:37:43,140
most everyone here is you know knows

00:37:40,020 --> 00:37:44,940
what the Z index is it's just how close

00:37:43,140 --> 00:37:48,090
to the camera something is so if

00:37:44,940 --> 00:37:49,710
something's going to overlap the asset

00:37:48,090 --> 00:37:54,840
with the higher Z index is going to be

00:37:49,710 --> 00:37:57,780
on top after x y&z there's a an X Factor

00:37:54,840 --> 00:38:03,210
and a y factor these default to 1 and

00:37:57,780 --> 00:38:05,430
these are just like how how proportional

00:38:03,210 --> 00:38:08,640
the images so if we said for example

00:38:05,430 --> 00:38:12,480
that we wanted it to be 2 & 2

00:38:08,640 --> 00:38:13,770
and we really ran this our guy is bigger

00:38:12,480 --> 00:38:17,820
so he's been stretched

00:38:13,770 --> 00:38:19,560
he's now 200% the size one of the things

00:38:17,820 --> 00:38:22,410
we could do is we could say we wanted to

00:38:19,560 --> 00:38:26,910
be negative 1 right that's going to take

00:38:22,410 --> 00:38:31,200
that X index and then reverse it so now

00:38:26,910 --> 00:38:35,490
because he's negative 1 he's facing the

00:38:31,200 --> 00:38:38,670
other way so I want to know if he's

00:38:35,490 --> 00:38:40,590
moving left or he's moving right so I'm

00:38:38,670 --> 00:38:45,230
going to put like a direction value in

00:38:40,590 --> 00:38:49,730
here and he's going to default to right

00:38:45,230 --> 00:38:53,780
and I'm going to say if we're pressing

00:38:49,730 --> 00:39:03,470
left then I want my direction to equal

00:38:53,780 --> 00:39:06,530
left and then otherwise if we're

00:39:03,470 --> 00:39:08,230
pointing right I want to move right and

00:39:06,530 --> 00:39:12,859
I want my direction

00:39:08,230 --> 00:39:14,960
to equal right okay and then when we

00:39:12,859 --> 00:39:21,609
draw I'm just going to check for

00:39:14,960 --> 00:39:21,609
direction here so I know that thank you

00:39:22,000 --> 00:39:33,560
so if direction is right okay then I'm

00:39:27,020 --> 00:39:36,980
going to draw as normal otherwise we're

00:39:33,560 --> 00:39:42,710
going to be pointing left and I want him

00:39:36,980 --> 00:39:45,140
to be facing the other way okay does

00:39:42,710 --> 00:39:47,770
that make sense so what we've added is

00:39:45,140 --> 00:39:50,990
we've added this value left or right

00:39:47,770 --> 00:39:52,460
when we move left we're going to set it

00:39:50,990 --> 00:39:54,890
to left when we move right we're going

00:39:52,460 --> 00:39:55,940
to set it to right when we draw we're

00:39:54,890 --> 00:39:59,470
going to take a look at that value and

00:39:55,940 --> 00:40:02,329
determine how we're going to draw okay

00:39:59,470 --> 00:40:05,960
so I can move right we're good to go I'm

00:40:02,329 --> 00:40:09,829
going to post left and he goes way far

00:40:05,960 --> 00:40:14,619
left right I'd you see how he's flipping

00:40:09,829 --> 00:40:14,619
on that positioned at first position

00:40:15,369 --> 00:40:26,359
right here his origin is right there so

00:40:21,079 --> 00:40:29,359
when we flip it he's jumping so we can

00:40:26,359 --> 00:40:31,490
fix this as well when we draw the left

00:40:29,359 --> 00:40:39,930
what we're going to do is we are going

00:40:31,490 --> 00:40:45,210
to subtract it by the image width okay

00:40:39,930 --> 00:40:45,210
no we're going to add the image width

00:40:46,620 --> 00:40:55,330
okay so now he looks a little happier

00:40:50,770 --> 00:40:57,520
right so he can go left he can go right

00:40:55,330 --> 00:41:02,620
he can leave the screen no one will ever

00:40:57,520 --> 00:41:04,930
see him again okay that works but it

00:41:02,620 --> 00:41:09,190
would work even better if he was

00:41:04,930 --> 00:41:10,870
actually animating okay so what we're

00:41:09,190 --> 00:41:13,870
going to do is instead of having this

00:41:10,870 --> 00:41:17,800
image here which is a static image we're

00:41:13,870 --> 00:41:21,670
going to have this idle object and if

00:41:17,800 --> 00:41:25,240
remember from the documentation on image

00:41:21,670 --> 00:41:27,520
we have our normal constructor or did it

00:41:25,240 --> 00:41:29,620
go here you initialize but we also have

00:41:27,520 --> 00:41:31,510
these other class ones we talked about

00:41:29,620 --> 00:41:34,060
from text which will build an image from

00:41:31,510 --> 00:41:36,430
text there's also also this load tiles

00:41:34,060 --> 00:41:41,890
this is where we're going to be able to

00:41:36,430 --> 00:41:44,380
look at and get our our that sprite

00:41:41,890 --> 00:41:46,960
sheet and it will take that sprite sheet

00:41:44,380 --> 00:41:51,940
and cut it up into several images so

00:41:46,960 --> 00:41:54,370
here let's say load tiles we're still

00:41:51,940 --> 00:41:56,470
going to ask it to do it from our window

00:41:54,370 --> 00:41:58,930
but instead of player we're going to go

00:41:56,470 --> 00:42:02,800
and we're going to grab a different file

00:41:58,930 --> 00:42:10,750
now I don't have that here right now so

00:42:02,800 --> 00:42:14,340
what I'm going to do is I'm going to

00:42:10,750 --> 00:42:14,340
quickly check that out

00:42:15,210 --> 00:42:18,570
let's see

00:42:19,800 --> 00:42:22,800
okay

00:42:25,430 --> 00:42:32,990
okay so the only thing that we've added

00:42:28,910 --> 00:42:35,359
here we've set instead of having an app

00:42:32,990 --> 00:42:37,700
image object we have this idle object

00:42:35,359 --> 00:42:39,829
now that's going to be populated by this

00:42:37,700 --> 00:42:44,450
load tiles and we're going to grab it

00:42:39,829 --> 00:42:48,140
from this file and that is the file

00:42:44,450 --> 00:42:49,910
right so it's a sprite sheet the other

00:42:48,140 --> 00:42:53,059
thing we did is we have this new

00:42:49,910 --> 00:42:55,069
variable called frame right this is the

00:42:53,059 --> 00:42:57,710
frame that we want to choose from our

00:42:55,069 --> 00:43:01,510
sprite sheet every time we call update

00:42:57,710 --> 00:43:05,480
we're going to increment that frame and

00:43:01,510 --> 00:43:08,750
then when we call draw what we're going

00:43:05,480 --> 00:43:13,400
to do is we're going to take the modulus

00:43:08,750 --> 00:43:16,040
of the frame and the idle size so we're

00:43:13,400 --> 00:43:18,950
going to have 32 images so if our frame

00:43:16,040 --> 00:43:20,780
is a hundred and seventy four you know

00:43:18,950 --> 00:43:24,890
we want to pull out whatever frame that

00:43:20,780 --> 00:43:27,849
is which is like 18 or something so we

00:43:24,890 --> 00:43:31,640
always want a number in our range of

00:43:27,849 --> 00:43:33,829
images for idle and then we're just

00:43:31,640 --> 00:43:35,780
going to ask for that image out of our

00:43:33,829 --> 00:43:37,910
idle object which is actually just an

00:43:35,780 --> 00:43:42,349
array so that's the only change we've

00:43:37,910 --> 00:43:44,630
made we've pulled our image out and now

00:43:42,349 --> 00:43:47,359
we have an array a list a collection of

00:43:44,630 --> 00:43:49,910
images we're keeping track of frame

00:43:47,359 --> 00:43:53,180
we're incrementing frame on update and

00:43:49,910 --> 00:43:55,880
we're using that frame to pull out the

00:43:53,180 --> 00:43:58,040
image from our collection so we can

00:43:55,880 --> 00:44:04,760
print it everything else is exactly the

00:43:58,040 --> 00:44:08,690
same so if we run this now he moves ever

00:44:04,760 --> 00:44:10,369
so slightly right but he still turns

00:44:08,690 --> 00:44:14,420
around he doesn't jump anymore

00:44:10,369 --> 00:44:16,910
like he did before okay

00:44:14,420 --> 00:44:19,309
so he's good we're getting better um I

00:44:16,910 --> 00:44:21,140
would really like it I think it makes

00:44:19,309 --> 00:44:23,359
sense for him to just be like you know

00:44:21,140 --> 00:44:25,010
breathing and stuff while he's standing

00:44:23,359 --> 00:44:29,859
still but if he's moving I'd like him to

00:44:25,010 --> 00:44:29,859
look like he's moving so let's add that

00:44:31,119 --> 00:44:35,920
so let's check out e^x two point six

00:44:40,810 --> 00:44:47,800
okay the difference here is now we have

00:44:44,230 --> 00:44:51,420
this second move object the second

00:44:47,800 --> 00:44:53,920
collection of images we've got one

00:44:51,420 --> 00:44:55,900
coming from this idle image and the

00:44:53,920 --> 00:44:57,970
other coming from this move image if we

00:44:55,900 --> 00:45:01,270
look at the move image you notice he's

00:44:57,970 --> 00:45:05,710
got a lot more movement everything else

00:45:01,270 --> 00:45:07,300
stays the same we're still going to set

00:45:05,710 --> 00:45:09,490
a frame count we're still going to

00:45:07,300 --> 00:45:13,480
increment it now we've also added this

00:45:09,490 --> 00:45:15,580
moving value here and so when every time

00:45:13,480 --> 00:45:17,680
we call update we're going to reset

00:45:15,580 --> 00:45:19,330
moving defaults and if we have a left or

00:45:17,680 --> 00:45:22,120
right key down then we're going to flip

00:45:19,330 --> 00:45:25,060
it back to true and then when we draw

00:45:22,120 --> 00:45:26,680
all we're going to do is if we're moving

00:45:25,060 --> 00:45:28,630
we're going to pull out the image from

00:45:26,680 --> 00:45:29,740
our move collection otherwise we're

00:45:28,630 --> 00:45:34,440
going to pull it out from our idle

00:45:29,740 --> 00:45:34,440
collection right so incremental change

00:45:36,540 --> 00:45:46,510
so now as we move at a glorious 60

00:45:42,640 --> 00:45:47,830
frames a second to look at that okay so

00:45:46,510 --> 00:45:50,890
that's it that's all it is

00:45:47,830 --> 00:45:52,870
now this is running at as fast as we can

00:45:50,890 --> 00:45:55,660
do it so 60 frames a second we're

00:45:52,870 --> 00:45:58,090
pushing a new image up there are other

00:45:55,660 --> 00:46:00,340
games that intentionally reduce the

00:45:58,090 --> 00:46:02,440
frame rate of the sprites down to like

00:46:00,340 --> 00:46:05,140
six or eight frames a second because

00:46:02,440 --> 00:46:07,300
it's got that vintage feel right but

00:46:05,140 --> 00:46:09,700
here's an example of something you know

00:46:07,300 --> 00:46:11,410
these games are too popular to have that

00:46:09,700 --> 00:46:13,480
vintage feel they don't have to actually

00:46:11,410 --> 00:46:15,640
have that vintage feel because the

00:46:13,480 --> 00:46:19,050
capabilities are here to make a really

00:46:15,640 --> 00:46:19,050
compelling and interesting looking game

00:46:20,520 --> 00:46:23,850
am i over

00:46:24,310 --> 00:46:37,440
oh geez okay so one wow that was fast

00:46:33,430 --> 00:46:37,440
all right so one thing I want to show is

00:46:38,040 --> 00:46:42,810
next I was going to build this there's a

00:46:40,180 --> 00:46:46,480
couple other examples actually let me

00:46:42,810 --> 00:47:00,190
let me check this out real quick so if

00:46:46,480 --> 00:47:04,060
we check out e^x 3.5 we can do some

00:47:00,190 --> 00:47:05,470
parallax stuff so parallax is a effect

00:47:04,060 --> 00:47:06,940
where you're going to move the

00:47:05,470 --> 00:47:10,120
background and the foreground at

00:47:06,940 --> 00:47:13,360
slightly different speeds to give the

00:47:10,120 --> 00:47:16,300
illusion of depth alright so we've got

00:47:13,360 --> 00:47:18,550
that that code is all there this is

00:47:16,300 --> 00:47:21,970
actually really easy there's a there's a

00:47:18,550 --> 00:47:26,350
method in gosu called translate that

00:47:21,970 --> 00:47:28,600
will let you print your your sprite to

00:47:26,350 --> 00:47:32,050
the background and then change the

00:47:28,600 --> 00:47:34,120
camera to follow it so that's not very

00:47:32,050 --> 00:47:37,150
difficult at all and then the last one

00:47:34,120 --> 00:47:41,470
is this game that I built that is hoping

00:47:37,150 --> 00:47:42,700
to hear sounds of this I was hoping to

00:47:41,470 --> 00:47:44,500
kind of walk through how this is

00:47:42,700 --> 00:47:46,780
implemented but very simple thing we

00:47:44,500 --> 00:47:48,820
have the velocity and then every frame

00:47:46,780 --> 00:47:50,890
we're going to try and pull that

00:47:48,820 --> 00:47:54,010
velocity down pull that position down

00:47:50,890 --> 00:47:56,980
and if you hit space you'll you'll jump

00:47:54,010 --> 00:47:59,050
back up on that velocity and so we get

00:47:56,980 --> 00:48:01,500
this a kind of positional game called

00:47:59,050 --> 00:48:01,500
Ruby ha

00:48:07,420 --> 00:48:15,040
there should be sound yeah I don't know

00:48:10,329 --> 00:48:17,280
why there's not sound let's open that up

00:48:15,040 --> 00:48:17,280
too

00:48:24,530 --> 00:48:27,530
okay

00:48:31,180 --> 00:48:46,269
this sounds really important this game

00:48:43,400 --> 00:48:46,269
is incredibly difficult

00:49:06,940 --> 00:49:14,440
all right so I did that last night in

00:49:11,119 --> 00:49:17,390
this morning okay

00:49:14,440 --> 00:49:19,609
lots of stuff you can do parallax with

00:49:17,390 --> 00:49:25,670
it which is kind of fun

00:49:19,609 --> 00:49:27,319
parallax yeah so Ruby hop I did again I

00:49:25,670 --> 00:49:29,569
just did that last night it's super fun

00:49:27,319 --> 00:49:32,089
the point I want to end on here is that

00:49:29,569 --> 00:49:33,890
if you're ever at a ruby conference or

00:49:32,089 --> 00:49:37,339
if you're ever at a hackfest if you're

00:49:33,890 --> 00:49:39,799
ever at a user group write a game pair

00:49:37,339 --> 00:49:43,210
up with people have fun and thank you

00:49:39,799 --> 00:49:43,210
very much my name is Mike Moore

00:50:32,520 --> 00:50:35,520

YouTube URL: https://www.youtube.com/watch?v=jJhbpY70miE


