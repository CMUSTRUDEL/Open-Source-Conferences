Title: LoneStarRuby Conf 2013 - Functional Reactive Programming with Frappuccino
Publication date: 2020-01-28
Playlist: Lone Star Ruby Conf 2013
Description: 
	By Steve Klabnik

Help us caption & translate this video!

http://amara.org/v/FG88/
Captions: 
	00:00:14,920 --> 00:00:22,100
everybody Steve apparently a little

00:00:18,140 --> 00:00:23,119
feedback II sorry so this is a talk

00:00:22,100 --> 00:00:26,300
called functional reactive programming

00:00:23,119 --> 00:00:27,380
with cappuccino as you just found for

00:00:26,300 --> 00:00:28,850
those of you who are in the room minute

00:00:27,380 --> 00:00:31,880
ago I wrote a wigga gem called

00:00:28,850 --> 00:00:33,680
Frappuccino but to get a little a little

00:00:31,880 --> 00:00:36,260
meta I'm going to talk about what I'm

00:00:33,680 --> 00:00:37,850
going to talk about basically the gem is

00:00:36,260 --> 00:00:39,740
actually like at the end so this talk is

00:00:37,850 --> 00:00:43,940
actually largely not about Frappuccino

00:00:39,740 --> 00:00:47,090
but it also is at the same time so first

00:00:43,940 --> 00:00:49,550
of all as we just mentioned I teach

00:00:47,090 --> 00:00:51,260
classes with jumpstart lab we do the

00:00:49,550 --> 00:00:52,700
best Ruby and rails training in the

00:00:51,260 --> 00:00:54,350
world so if you would like your team to

00:00:52,700 --> 00:00:55,910
level up please give us a call it's the

00:00:54,350 --> 00:00:57,530
only reason I can be here it's the only

00:00:55,910 --> 00:01:01,370
reason I can do all the open-source work

00:00:57,530 --> 00:01:04,129
that I do um so yeah jump start super

00:01:01,370 --> 00:01:05,479
awesome Jeff's great guy um this

00:01:04,129 --> 00:01:07,310
conference is a really special

00:01:05,479 --> 00:01:10,729
conference to me and I missed it last

00:01:07,310 --> 00:01:13,310
year but it's very special because this

00:01:10,729 --> 00:01:15,320
is actually the first ruby conference I

00:01:13,310 --> 00:01:18,140
ever spoke at way back in the day when I

00:01:15,320 --> 00:01:19,880
was first starting so Adams dacovia can

00:01:18,140 --> 00:01:21,200
win netherland were found out that I was

00:01:19,880 --> 00:01:23,240
going to be speaking at rubyconf in the

00:01:21,200 --> 00:01:24,859
fall and they said hey Steve when it

00:01:23,240 --> 00:01:28,490
comes to begin our conference so do that

00:01:24,859 --> 00:01:31,369
first and so I came and spoke about

00:01:28,490 --> 00:01:32,780
shoes very long time ago so so this

00:01:31,369 --> 00:01:34,399
conference will always be very special

00:01:32,780 --> 00:01:36,079
to me so thank you for having me here

00:01:34,399 --> 00:01:38,960
and it's great to like be back up on the

00:01:36,079 --> 00:01:41,799
stage again um this is important so

00:01:38,960 --> 00:01:41,799
thanks

00:01:45,330 --> 00:01:49,870
alright so now the actual meta of gonna

00:01:48,760 --> 00:01:51,370
be talking what I'm going to talk about

00:01:49,870 --> 00:01:52,750
let's let's talk about what I'm to talk

00:01:51,370 --> 00:01:53,830
about and i'll talk about it and i'll

00:01:52,750 --> 00:01:57,970
talk about the stuff i want to talk

00:01:53,830 --> 00:02:00,310
about um so this talk is nominally about

00:01:57,970 --> 00:02:02,920
a ruby gem called frappuccino however

00:02:00,310 --> 00:02:04,480
there's a bunch of stuff that i realized

00:02:02,920 --> 00:02:06,670
while building this ruby gem and this

00:02:04,480 --> 00:02:08,530
talk is actually more about the

00:02:06,670 --> 00:02:10,180
implications of what this ruby gem and

00:02:08,530 --> 00:02:12,040
what it means to me and what it should

00:02:10,180 --> 00:02:13,870
mean to you even though you've not heard

00:02:12,040 --> 00:02:18,430
of this gem or probably installed it at

00:02:13,870 --> 00:02:20,680
all so frappuccino came born out of this

00:02:18,430 --> 00:02:22,390
thing where I like to joke that Aaron

00:02:20,680 --> 00:02:24,090
Patterson wrote a gist and then I turned

00:02:22,390 --> 00:02:27,580
it into this like a life philosophy

00:02:24,090 --> 00:02:29,380
called irresponsible Ruby so we're going

00:02:27,580 --> 00:02:32,050
to talk about responsible pneus and

00:02:29,380 --> 00:02:34,709
irresponsible pneus and Ruby programming

00:02:32,050 --> 00:02:37,540
and sort of like what all of that means

00:02:34,709 --> 00:02:39,220
but one of the biggest things that I

00:02:37,540 --> 00:02:43,300
really want to point out and making this

00:02:39,220 --> 00:02:44,770
talk is that this talk specifically is a

00:02:43,300 --> 00:02:47,470
little interesting and a little weird

00:02:44,770 --> 00:02:49,600
and a little off-putting because I think

00:02:47,470 --> 00:02:51,700
that one of the weird things about me

00:02:49,600 --> 00:02:54,100
being up here on stage and you all being

00:02:51,700 --> 00:02:56,769
out there listening to me is that when

00:02:54,100 --> 00:02:59,140
we give presentations at conferences you

00:02:56,769 --> 00:03:01,150
actually tend to see the end result of

00:02:59,140 --> 00:03:02,680
months of work right so I imagine how

00:03:01,150 --> 00:03:04,390
much work sandy put into that keynote

00:03:02,680 --> 00:03:06,280
this morning right so you see the end

00:03:04,390 --> 00:03:08,200
result of like all of that effort and

00:03:06,280 --> 00:03:10,930
you did not see all the research and the

00:03:08,200 --> 00:03:12,100
trial and error when someone talks about

00:03:10,930 --> 00:03:14,050
the code they wrote like when I talk

00:03:12,100 --> 00:03:15,730
about me ruby gem you don't see all the

00:03:14,050 --> 00:03:17,950
hours of debugging and banging your head

00:03:15,730 --> 00:03:19,720
off the wall and frustration you see the

00:03:17,950 --> 00:03:21,130
wonderful perfect majestic code that

00:03:19,720 --> 00:03:23,140
came out of it and so there's this

00:03:21,130 --> 00:03:24,790
uncomfortable tendency whenever you see

00:03:23,140 --> 00:03:27,100
your favorite programmers come and speak

00:03:24,790 --> 00:03:28,900
onstage that you don't see all the hard

00:03:27,100 --> 00:03:31,300
work and struggles that they put into

00:03:28,900 --> 00:03:34,390
making code and therefore they appear

00:03:31,300 --> 00:03:35,800
like perfect when we are very much not I

00:03:34,390 --> 00:03:37,480
remember when like before Aaron

00:03:35,800 --> 00:03:39,820
Patterson was like a friend of mine when

00:03:37,480 --> 00:03:41,260
I thought he was like untouchable right

00:03:39,820 --> 00:03:43,810
because he was amazing and perfect and

00:03:41,260 --> 00:03:45,820
now we're all just people so I really

00:03:43,810 --> 00:03:48,370
don't want us to continue to have a like

00:03:45,820 --> 00:03:49,690
celebrity culture as programmers I was

00:03:48,370 --> 00:03:51,220
pair programming remotely with someone

00:03:49,690 --> 00:03:53,110
when Abdi did they like pair with me

00:03:51,220 --> 00:03:55,390
hashtag if you haven't seen that like

00:03:53,110 --> 00:03:55,870
remote pair programming is a thing I was

00:03:55,390 --> 00:03:57,879
working with

00:03:55,870 --> 00:03:59,049
on a rescue issue and we had witnessed

00:03:57,879 --> 00:04:01,870
and it was failing so we were like

00:03:59,049 --> 00:04:02,980
trying to fix it and we are like working

00:04:01,870 --> 00:04:05,019
to make it pass and the code didn't work

00:04:02,980 --> 00:04:06,340
and we tried to make it pass and the

00:04:05,019 --> 00:04:08,049
code didn't work when we tried to make a

00:04:06,340 --> 00:04:09,730
pass and the code didn't work and the

00:04:08,049 --> 00:04:11,200
person said to me like hey I'm really

00:04:09,730 --> 00:04:12,760
sorry about this this must be really

00:04:11,200 --> 00:04:14,290
boring for you and it's like I don't

00:04:12,760 --> 00:04:15,819
know what you think I do all day but my

00:04:14,290 --> 00:04:18,519
code doesn't work like most of the time

00:04:15,819 --> 00:04:20,139
right so so it's really important to

00:04:18,519 --> 00:04:22,210
like obviously to give each other like

00:04:20,139 --> 00:04:24,699
the respect that we deserve but this

00:04:22,210 --> 00:04:26,199
talk specifically is again a little off

00:04:24,699 --> 00:04:28,090
a little weird a little unpolished I

00:04:26,199 --> 00:04:31,120
will be doing live coding and two

00:04:28,090 --> 00:04:32,530
different versions of Ruby and this is

00:04:31,120 --> 00:04:34,840
if you didn't notice this presentation

00:04:32,530 --> 00:04:37,120
software is a little odd this is

00:04:34,840 --> 00:04:38,949
actually rabbit which is what a lot of

00:04:37,120 --> 00:04:40,449
the Japanese Ruby is presented you can

00:04:38,949 --> 00:04:43,180
actually see that there's so it's got

00:04:40,449 --> 00:04:45,460
slide numbers on the bottom and then the

00:04:43,180 --> 00:04:47,380
tortoise moves so I told it how long the

00:04:45,460 --> 00:04:49,930
talk is and it will end at the ending so

00:04:47,380 --> 00:04:51,940
you can see where the rabbit ends up and

00:04:49,930 --> 00:04:53,470
so anyway so yeah so all this is a

00:04:51,940 --> 00:04:55,690
little unfinished but on purpose because

00:04:53,470 --> 00:04:57,250
I wanted to like present that kind of

00:04:55,690 --> 00:04:59,470
thing to you as opposed to like here's

00:04:57,250 --> 00:05:01,330
my perfection so like let's all have

00:04:59,470 --> 00:05:02,830
some fun for the rest of this talk plus

00:05:01,330 --> 00:05:04,630
it's the end of the day on Friday like

00:05:02,830 --> 00:05:08,710
why should we be serious that's kind of

00:05:04,630 --> 00:05:09,970
ridiculous right okay so irresponsible

00:05:08,710 --> 00:05:12,669
Ruby I already touched on this a little

00:05:09,970 --> 00:05:14,349
bit but like what is irresponsible Ruby

00:05:12,669 --> 00:05:19,270
when I say irresponsible Ruby what do I

00:05:14,349 --> 00:05:21,039
mean the short answer is Ruby code you

00:05:19,270 --> 00:05:24,729
would not deploy your day job because it

00:05:21,039 --> 00:05:28,599
is just too interesting or creative and

00:05:24,729 --> 00:05:32,550
so I've come up with four criteria maybe

00:05:28,599 --> 00:05:34,810
it's five four or five criteria for what

00:05:32,550 --> 00:05:36,520
specifically I mean by this this is like

00:05:34,810 --> 00:05:40,270
the one sentence description what would

00:05:36,520 --> 00:05:42,190
the rest of this be so this consists

00:05:40,270 --> 00:05:44,770
mostly of neat hacks weird

00:05:42,190 --> 00:05:47,830
metaprogramming generally unusual

00:05:44,770 --> 00:05:50,440
techniques and absolutely no unit tests

00:05:47,830 --> 00:05:52,990
whatsoever now I say unit tests

00:05:50,440 --> 00:05:54,250
specifically for a reason and we're

00:05:52,990 --> 00:05:56,470
gonna talk a little bit mom about this

00:05:54,250 --> 00:05:59,440
more in a minute but basically I mean no

00:05:56,470 --> 00:06:02,770
unit tests as in TDD as in tests guide

00:05:59,440 --> 00:06:03,820
the design of my code I think that when

00:06:02,770 --> 00:06:05,510
you're trying to be in this

00:06:03,820 --> 00:06:07,760
irresponsible load having

00:06:05,510 --> 00:06:09,800
integration tests or acceptance tests is

00:06:07,760 --> 00:06:11,570
really useful to verify that you didn't

00:06:09,800 --> 00:06:13,880
break stuff while you're doing it but

00:06:11,570 --> 00:06:16,970
TVD and the reason that we do it is to

00:06:13,880 --> 00:06:18,890
guide us in down a certain path and so I

00:06:16,970 --> 00:06:20,960
don't want us to be guided down a

00:06:18,890 --> 00:06:23,320
certain path by our tests so i make i

00:06:20,960 --> 00:06:28,370
say unit tests with very like specific

00:06:23,320 --> 00:06:31,490
reasoning here so so that's yes this is

00:06:28,370 --> 00:06:33,320
the crux of irresponsible Ruby now the

00:06:31,490 --> 00:06:36,020
person that most embodies irresponsible

00:06:33,320 --> 00:06:37,460
Ruby is this guy and for the benefit of

00:06:36,020 --> 00:06:39,200
all the people so we just had like raise

00:06:37,460 --> 00:06:40,940
your hand I hate raise your hand stuff

00:06:39,200 --> 00:06:42,560
but I'm gonna do it anyway so we just

00:06:40,940 --> 00:06:44,120
had like who is on their first rails job

00:06:42,560 --> 00:06:45,380
right now for the benefit all the people

00:06:44,120 --> 00:06:46,550
have been around for a while as an

00:06:45,380 --> 00:06:47,660
experiment something I've been talking

00:06:46,550 --> 00:06:52,250
about people and surprised about who

00:06:47,660 --> 00:06:54,470
does not know who this guy is right so

00:06:52,250 --> 00:06:56,780
that's awesome it's not awesome but it's

00:06:54,470 --> 00:06:59,390
also kind of Awesome so this is a this

00:06:56,780 --> 00:07:01,460
is a man named why the lucky stiff he is

00:06:59,390 --> 00:07:03,440
someone who was a very prominent member

00:07:01,460 --> 00:07:07,670
of the Ruby community and then decided

00:07:03,440 --> 00:07:09,500
to commit info suicide and leave but one

00:07:07,670 --> 00:07:11,690
of the funny things about why is that

00:07:09,500 --> 00:07:13,430
because we all think of it as being like

00:07:11,690 --> 00:07:16,370
something that happened very little

00:07:13,430 --> 00:07:18,320
while ago but the Ruby world has grown

00:07:16,370 --> 00:07:20,630
so much and we have so many new friends

00:07:18,320 --> 00:07:22,340
now with us that when someone leaves and

00:07:20,630 --> 00:07:24,560
they're no longer around their legacy

00:07:22,340 --> 00:07:25,760
does not always carry on so I'm sure

00:07:24,560 --> 00:07:27,350
that the people who do not raise their

00:07:25,760 --> 00:07:29,270
hand or like what seriously this many

00:07:27,350 --> 00:07:30,650
people don't know who I is but I've been

00:07:29,270 --> 00:07:32,570
joking I'm gonna have to stop talking

00:07:30,650 --> 00:07:34,330
about why pretty soon because as we get

00:07:32,570 --> 00:07:36,020
more and more and more new people

00:07:34,330 --> 00:07:37,550
they're not going to know what I'm

00:07:36,020 --> 00:07:40,610
talking about so for the benefit of all

00:07:37,550 --> 00:07:44,300
of you who did raise your hand this is

00:07:40,610 --> 00:07:46,760
why why I like to define y as an artist

00:07:44,300 --> 00:07:48,320
whose medium with software and he

00:07:46,760 --> 00:07:51,640
developed a whole lot of really

00:07:48,320 --> 00:07:54,830
interesting really complex neat

00:07:51,640 --> 00:07:57,890
irresponsible Ruby code and then he left

00:07:54,830 --> 00:07:59,510
and one of the things that like got me

00:07:57,890 --> 00:08:00,980
the one of the reasons that I'm on this

00:07:59,510 --> 00:08:03,260
stage today and why I was on the stage

00:08:00,980 --> 00:08:05,300
two years ago actually is because I

00:08:03,260 --> 00:08:06,950
decided that wise projects were so

00:08:05,300 --> 00:08:09,980
important but I didn't want them to die

00:08:06,950 --> 00:08:11,990
even though he did effectively the man

00:08:09,980 --> 00:08:14,300
that is depicted in this photo is alive

00:08:11,990 --> 00:08:17,690
and well but why the character the

00:08:14,300 --> 00:08:18,529
persona is gone so um and that's

00:08:17,690 --> 00:08:20,359
actually what I came

00:08:18,529 --> 00:08:22,069
to talk about two years ago that's what

00:08:20,359 --> 00:08:23,749
I'm up here again as you can tell it's

00:08:22,069 --> 00:08:25,579
obviously like it's weird when you take

00:08:23,749 --> 00:08:27,019
someone else's life's work and make it

00:08:25,579 --> 00:08:28,789
your life's work so this is like a

00:08:27,019 --> 00:08:32,839
person who I never met who I obviously

00:08:28,789 --> 00:08:35,120
care a lot about so anyway so why

00:08:32,839 --> 00:08:37,969
embodied the spirit and it's funny

00:08:35,120 --> 00:08:39,499
because um as I said I basically took

00:08:37,969 --> 00:08:41,209
over a lot of his project so hackneyed

00:08:39,499 --> 00:08:45,079
action shoes were mentioned we'll talk

00:08:41,209 --> 00:08:46,339
more about shoes later but since when

00:08:45,079 --> 00:08:48,139
you take over a project that has an

00:08:46,339 --> 00:08:50,329
absent creator and that product that

00:08:48,139 --> 00:08:54,379
creator has been very irresponsible it

00:08:50,329 --> 00:08:56,389
sucks it sucks a lot um so if those of

00:08:54,379 --> 00:08:58,399
you are here for Brian's talk on like

00:08:56,389 --> 00:09:00,410
code quality this talk is sort of in

00:08:58,399 --> 00:09:04,699
many ways like the ante code quality

00:09:00,410 --> 00:09:07,579
talk sort of but it's it's very

00:09:04,699 --> 00:09:09,889
difficult whenever you've been creative

00:09:07,579 --> 00:09:13,699
to like maintain things into the future

00:09:09,889 --> 00:09:15,499
and so a a while after why disappeared

00:09:13,699 --> 00:09:18,170
someone decided to write this blog post

00:09:15,499 --> 00:09:20,959
called a letter from why and they had

00:09:18,170 --> 00:09:23,629
realized like oh hey why's been gone for

00:09:20,959 --> 00:09:26,029
a little while and I wrote him an email

00:09:23,629 --> 00:09:27,829
one time and I got this really great

00:09:26,029 --> 00:09:29,509
response back and so I want to share it

00:09:27,829 --> 00:09:31,160
with all of you so he posted to his blog

00:09:29,509 --> 00:09:32,329
so if you google for this you can find

00:09:31,160 --> 00:09:34,730
the whole text but I'm going to share

00:09:32,329 --> 00:09:37,459
with you the most important part of what

00:09:34,730 --> 00:09:40,160
why said so this person emailed why and

00:09:37,459 --> 00:09:42,439
they said why I love your work what do I

00:09:40,160 --> 00:09:44,180
need to do to be an amazing programmer

00:09:42,439 --> 00:09:46,309
like how can I get there what can i do

00:09:44,180 --> 00:09:49,579
to be like you this is what well I had

00:09:46,309 --> 00:09:52,009
to say it do not write tests for my code

00:09:49,579 --> 00:09:55,819
I do not write very many comments I

00:09:52,009 --> 00:09:57,920
change styles very frequently and most

00:09:55,819 --> 00:09:59,540
of all I shun the predominant styles of

00:09:57,920 --> 00:10:02,750
coding because that would go against the

00:09:59,540 --> 00:10:06,889
very essence of experimentation in short

00:10:02,750 --> 00:10:09,050
all i do is muck around I admire

00:10:06,889 --> 00:10:11,290
programmers who take risks they aren't

00:10:09,050 --> 00:10:15,379
afraid to write dangerous or crappy code

00:10:11,290 --> 00:10:17,029
insert irresponsible if you worry too

00:10:15,379 --> 00:10:20,420
much about being clean and tidy you

00:10:17,029 --> 00:10:24,800
cannot push the boundaries until an

00:10:20,420 --> 00:10:25,970
asteroid why it's just like that this is

00:10:24,800 --> 00:10:28,189
like the most thing I can communicate

00:10:25,970 --> 00:10:30,579
wise personality to you is this this

00:10:28,189 --> 00:10:33,429
line so

00:10:30,579 --> 00:10:35,049
if you google that blog post and you

00:10:33,429 --> 00:10:37,089
read it and you scroll down on the

00:10:35,049 --> 00:10:39,699
screen there is a discuss thread at the

00:10:37,089 --> 00:10:41,739
bottom of that blog post and at the top

00:10:39,699 --> 00:10:43,149
of that discuss thread you will find a

00:10:41,739 --> 00:10:46,899
certain individual who looks familiar

00:10:43,149 --> 00:10:49,569
saying this as someone who maintains

00:10:46,899 --> 00:10:55,239
wise code these days please write some

00:10:49,569 --> 00:10:57,670
tests so to give you an idea of the kind

00:10:55,239 --> 00:11:02,309
of effort that I had to put in to acne

00:10:57,670 --> 00:11:05,679
and shoes I happen to purchase a new

00:11:02,309 --> 00:11:07,449
macbook right around the time that snow

00:11:05,679 --> 00:11:08,499
leopard came out for those of you that

00:11:07,449 --> 00:11:10,149
have been around the map for a while

00:11:08,499 --> 00:11:11,949
you'll remember that snow leopard was

00:11:10,149 --> 00:11:13,869
the first release that Apple deprecated

00:11:11,949 --> 00:11:15,759
there are removed their deprecated

00:11:13,869 --> 00:11:17,230
carbon framework husband was the

00:11:15,759 --> 00:11:19,329
framework that they used to transition

00:11:17,230 --> 00:11:21,220
applications from mac OS 9 to mac OS 10

00:11:19,329 --> 00:11:22,660
and so previously before that they had

00:11:21,220 --> 00:11:23,889
left it in and said it's going to be

00:11:22,660 --> 00:11:24,759
going away in the next release it's

00:11:23,889 --> 00:11:28,389
going to be going away in the next

00:11:24,759 --> 00:11:29,769
release so I had this new mac which had

00:11:28,389 --> 00:11:33,160
the first release where that was gone

00:11:29,769 --> 00:11:35,169
guess what why wrote his stuff using

00:11:33,160 --> 00:11:37,299
carbon and he decided to bail before he

00:11:35,169 --> 00:11:39,699
finished porting things over to cocoa so

00:11:37,299 --> 00:11:41,739
it actually took me six months of work

00:11:39,699 --> 00:11:45,279
before I could even compile the project

00:11:41,739 --> 00:11:47,169
on my machine uh so why was very

00:11:45,279 --> 00:11:48,999
irresponsible and I was very frustrated

00:11:47,169 --> 00:11:51,429
and that was just the wind that was just

00:11:48,999 --> 00:11:54,369
the the map part the windows park was

00:11:51,429 --> 00:11:56,049
even more ridiculous because I the same

00:11:54,369 --> 00:11:58,269
sort of deal he had written it for

00:11:56,049 --> 00:12:00,009
windows XP Windows Vista was the one

00:11:58,269 --> 00:12:01,299
windows that was out now and I'm sure

00:12:00,009 --> 00:12:04,809
that you know how we all feel about

00:12:01,299 --> 00:12:06,669
Windows Vista I like simultaneous they

00:12:04,809 --> 00:12:11,199
both hate and don't hate windows more

00:12:06,669 --> 00:12:15,850
all the time but that's something for a

00:12:11,199 --> 00:12:17,889
ruby parle thread now so I woke this

00:12:15,850 --> 00:12:19,509
thing and to now a video like Steve now

00:12:17,889 --> 00:12:21,069
you up here on stage saying like the

00:12:19,509 --> 00:12:24,790
opposite of what you said two years ago

00:12:21,069 --> 00:12:26,470
um why is that so basically i think that

00:12:24,790 --> 00:12:27,999
actually the end both of us were right

00:12:26,470 --> 00:12:29,529
which may sort of sound like a cop-out

00:12:27,999 --> 00:12:32,559
answer but i think the important part

00:12:29,529 --> 00:12:34,029
here is context so i had sort of been

00:12:32,559 --> 00:12:35,379
saying for a long time that I thought

00:12:34,029 --> 00:12:38,980
that why the lucky stiff was a great

00:12:35,379 --> 00:12:39,590
programmer but that he was like his code

00:12:38,980 --> 00:12:42,370
was kind of

00:12:39,590 --> 00:12:44,030
but that was the point and so my

00:12:42,370 --> 00:12:46,070
understanding was that was like I'm

00:12:44,030 --> 00:12:47,540
trying to create engineered good quality

00:12:46,070 --> 00:12:49,160
code and that was something that why I

00:12:47,540 --> 00:12:51,080
was not trying to do and so we're just

00:12:49,160 --> 00:12:53,720
different and so I think that's that's

00:12:51,080 --> 00:12:56,030
sort of almost the right thing basically

00:12:53,720 --> 00:12:57,680
I think that there are certain times to

00:12:56,030 --> 00:13:01,280
be irresponsible in certain times to not

00:12:57,680 --> 00:13:03,710
be irresponsible so we as programmers

00:13:01,280 --> 00:13:05,030
build stuff we're builders we make

00:13:03,710 --> 00:13:07,130
things this is actually what I like most

00:13:05,030 --> 00:13:10,100
about programmers is that we like do

00:13:07,130 --> 00:13:12,110
things actually so before I was a

00:13:10,100 --> 00:13:15,500
professional programmer i worked in

00:13:12,110 --> 00:13:17,660
pizza and as much as I hated being open

00:13:15,500 --> 00:13:19,370
past when the bar is closed so that

00:13:17,660 --> 00:13:21,530
people could order more pizza for me at

00:13:19,370 --> 00:13:23,150
three o'clock in the morning I really

00:13:21,530 --> 00:13:24,620
really enjoyed making pizza with my

00:13:23,150 --> 00:13:27,410
hands and I've always enjoyed building

00:13:24,620 --> 00:13:31,580
stuff now I just do it with this instead

00:13:27,410 --> 00:13:33,950
of with these so we think a lot about

00:13:31,580 --> 00:13:36,950
the ways in which we build stuff like a

00:13:33,950 --> 00:13:38,480
lot of the stuff that we do is focus

00:13:36,950 --> 00:13:40,880
around the act of building and how we

00:13:38,480 --> 00:13:42,020
build things right so half the talks

00:13:40,880 --> 00:13:43,550
here will be about developing

00:13:42,020 --> 00:13:45,890
methodologies and like the way that you

00:13:43,550 --> 00:13:50,240
can apply them to your software TDD be

00:13:45,890 --> 00:13:52,220
ddddd every letter D D you know all

00:13:50,240 --> 00:13:53,900
these things that we we care a lot about

00:13:52,220 --> 00:13:55,760
and we talk a lot about them we blog

00:13:53,900 --> 00:13:57,200
about them people you know people talk

00:13:55,760 --> 00:13:59,780
about Ruby people or sort of test

00:13:57,200 --> 00:14:01,550
obsessed we are all like bought into

00:13:59,780 --> 00:14:03,110
agile really heavily right we care a lot

00:14:01,550 --> 00:14:05,000
about these processes around how we

00:14:03,110 --> 00:14:07,130
build things but there's this thing

00:14:05,000 --> 00:14:08,300
called linguistic relativity and if

00:14:07,130 --> 00:14:10,250
you're like me and you've read the

00:14:08,300 --> 00:14:12,890
wikipedia page on the sapir-whorf

00:14:10,250 --> 00:14:14,570
hypothesis you'll know that sapir and

00:14:12,890 --> 00:14:16,850
Worf both did not actually work together

00:14:14,570 --> 00:14:18,080
and did not produce hypothesis so you

00:14:16,850 --> 00:14:20,510
actually should call it linguistic

00:14:18,080 --> 00:14:22,550
relativity that's the extent of my

00:14:20,510 --> 00:14:24,110
knowledge of the details of that history

00:14:22,550 --> 00:14:25,910
but if you've heard of that previously

00:14:24,110 --> 00:14:28,100
sapir-whorf hypothesis actually called

00:14:25,910 --> 00:14:30,830
linguistic relativity there's two forms

00:14:28,100 --> 00:14:32,330
of this scientist or concept um the

00:14:30,830 --> 00:14:33,710
strong form in the weak form so the

00:14:32,330 --> 00:14:35,240
general idea that language influences

00:14:33,710 --> 00:14:37,760
the way that we think of the things that

00:14:35,240 --> 00:14:39,800
we do so the weak form says that

00:14:37,760 --> 00:14:41,600
language influences of what we do and

00:14:39,800 --> 00:14:43,520
what we think the strong form says that

00:14:41,600 --> 00:14:46,070
language determines what we do and what

00:14:43,520 --> 00:14:46,899
we think so again according to the

00:14:46,070 --> 00:14:49,809
Wikipedia page

00:14:46,899 --> 00:14:51,339
read thoroughly not any the literature

00:14:49,809 --> 00:14:54,129
linked at the bottom but the wikipedia

00:14:51,339 --> 00:14:56,079
page that I like read thoroughly there's

00:14:54,129 --> 00:14:58,660
evidence to demonstrate that the weak

00:14:56,079 --> 00:15:01,240
form of the hypothesis is accurate but

00:14:58,660 --> 00:15:03,459
the strong form is not so what this

00:15:01,240 --> 00:15:08,019
means is is that language to a certain

00:15:03,459 --> 00:15:10,569
degree influences our reality now the

00:15:08,019 --> 00:15:12,579
problem is is that if we have these two

00:15:10,569 --> 00:15:14,439
different ways of thinking and the way

00:15:12,579 --> 00:15:16,839
that we like think and talk about stuff

00:15:14,439 --> 00:15:18,910
shapes the way that we do things and we

00:15:16,839 --> 00:15:20,230
build stuff by doing things then the way

00:15:18,910 --> 00:15:21,939
that we talk about designing software

00:15:20,230 --> 00:15:25,990
ends up influence in the way we build

00:15:21,939 --> 00:15:29,230
software so sort of what I posit to you

00:15:25,990 --> 00:15:30,610
is that we need to take into account the

00:15:29,230 --> 00:15:32,350
fact that we need these two different

00:15:30,610 --> 00:15:34,029
modes of building things we need a

00:15:32,350 --> 00:15:36,009
responsible mode and we need an

00:15:34,029 --> 00:15:37,420
irresponsible mode and the reason that

00:15:36,009 --> 00:15:39,309
we need the two different modes is

00:15:37,420 --> 00:15:42,249
because there are certain programs that

00:15:39,309 --> 00:15:45,490
you cannot TDD effectively it's just

00:15:42,249 --> 00:15:48,790
it's just true there exists a programs

00:15:45,490 --> 00:15:52,779
of which TVD could not get you there and

00:15:48,790 --> 00:15:55,120
so we we sort of like if we say TDD is

00:15:52,779 --> 00:15:57,309
the only way to build software the only

00:15:55,120 --> 00:16:00,220
way to do quality software then we are

00:15:57,309 --> 00:16:02,529
leaving out possibilities for things now

00:16:00,220 --> 00:16:04,449
I love TDD and I love testing and I

00:16:02,529 --> 00:16:06,879
spend lots of time on this too but I

00:16:04,449 --> 00:16:08,230
think that it's important that so like

00:16:06,879 --> 00:16:10,300
engineering is great and all but

00:16:08,230 --> 00:16:11,439
engineering is largely about refinement

00:16:10,300 --> 00:16:13,720
and one of the tricky things about

00:16:11,439 --> 00:16:15,699
refining ideas is that they tend to make

00:16:13,720 --> 00:16:17,800
you go towards local maximums rather

00:16:15,699 --> 00:16:21,610
than global maximums and we achieve

00:16:17,800 --> 00:16:23,410
global maximum you need a revolution and

00:16:21,610 --> 00:16:24,879
you need to like break out of the way of

00:16:23,410 --> 00:16:26,589
thinking completely and go on to

00:16:24,879 --> 00:16:27,939
something entirely different and then

00:16:26,589 --> 00:16:29,589
you can refine that to make it even

00:16:27,939 --> 00:16:31,240
better and even better but without the

00:16:29,589 --> 00:16:33,670
sort of like creative streak without

00:16:31,240 --> 00:16:35,049
that like spark of inspiration you're

00:16:33,670 --> 00:16:36,579
not going to break out of that local

00:16:35,049 --> 00:16:38,350
maximum right this is like the problem

00:16:36,579 --> 00:16:39,670
with a be testing to is that like you

00:16:38,350 --> 00:16:42,249
can refine the design that you have a

00:16:39,670 --> 00:16:44,829
lot but you get stuck in these in these

00:16:42,249 --> 00:16:46,629
local maxima so I think we need to

00:16:44,829 --> 00:16:48,549
acknowledge and embrace and make a

00:16:46,629 --> 00:16:50,829
conscious decision about when to be

00:16:48,549 --> 00:16:52,689
responsible but then also like make sure

00:16:50,829 --> 00:16:54,399
that we are being equally irresponsible

00:16:52,689 --> 00:16:54,790
and one of the things that I fear in the

00:16:54,399 --> 00:16:57,010
Ruby

00:16:54,790 --> 00:16:58,900
is that in the last couple of years we

00:16:57,010 --> 00:17:00,970
have developed a whole lot of stuff

00:16:58,900 --> 00:17:02,940
towards responsible mode and not a whole

00:17:00,970 --> 00:17:05,530
lot of stuff towards irresponsible mode

00:17:02,940 --> 00:17:08,710
and so I would like to see you all be

00:17:05,530 --> 00:17:13,410
way more irresponsible not when you're

00:17:08,710 --> 00:17:16,870
at work and that's the important part so

00:17:13,410 --> 00:17:18,400
a gym wyrick gave a talk right before

00:17:16,870 --> 00:17:20,290
mine the one time and so I stole his

00:17:18,400 --> 00:17:22,810
term for this but basically I sort of

00:17:20,290 --> 00:17:24,490
call this other mode exploratory mode so

00:17:22,810 --> 00:17:26,170
if TDD is the way that we're responsible

00:17:24,490 --> 00:17:29,980
or any of our other like programming

00:17:26,170 --> 00:17:32,890
practices then exploring the possibility

00:17:29,980 --> 00:17:35,080
space is the like is what irresponsible

00:17:32,890 --> 00:17:36,670
pneus means so the original

00:17:35,080 --> 00:17:39,250
irresponsible really code is a just

00:17:36,670 --> 00:17:41,470
stupid see on Aaron's github basically

00:17:39,250 --> 00:17:44,680
what it does is its object class equals

00:17:41,470 --> 00:17:46,870
you going to see this just so basically

00:17:44,680 --> 00:17:48,190
it uses this library that's in the

00:17:46,870 --> 00:17:50,650
rubric standard library called fiddle

00:17:48,190 --> 00:17:54,010
fiddle allows you to manipulate pointers

00:17:50,650 --> 00:17:56,020
in Ruby so what object out class equals

00:17:54,010 --> 00:17:59,200
does is it gives you a method names

00:17:56,020 --> 00:18:03,370
class equals so you can say for example

00:17:59,200 --> 00:18:06,370
0 equals object new Oh class equals

00:18:03,370 --> 00:18:09,490
string and then IRB will print out quote

00:18:06,370 --> 00:18:13,480
quote quote quote you can do 0 equals

00:18:09,490 --> 00:18:18,670
object new Oh class equals class new do

00:18:13,480 --> 00:18:20,590
def lo put slow and end oh LOL and it

00:18:18,670 --> 00:18:22,420
will actually call the code the way that

00:18:20,590 --> 00:18:25,780
Aaron made this work is by when you pass

00:18:22,420 --> 00:18:27,880
in the class it actually goes and it

00:18:25,780 --> 00:18:30,280
finds the location in memory where that

00:18:27,880 --> 00:18:32,730
class object is stored and then it goes

00:18:30,280 --> 00:18:35,800
into the object you're calling it ons

00:18:32,730 --> 00:18:37,510
like the sea level like header where it

00:18:35,800 --> 00:18:39,340
points to where the class object of that

00:18:37,510 --> 00:18:41,230
object is and then just swaps the

00:18:39,340 --> 00:18:43,610
pointers and turns out that that just

00:18:41,230 --> 00:18:46,800
works today

00:18:43,610 --> 00:18:48,780
so uh so he made this and it's in a

00:18:46,800 --> 00:18:53,400
module called I'm a horrible person and

00:18:48,780 --> 00:18:57,240
then mixes that into object and so I saw

00:18:53,400 --> 00:18:59,250
that I thought that was great and so and

00:18:57,240 --> 00:19:01,260
so that's like--that's exploratory right

00:18:59,250 --> 00:19:02,700
he's like I want to see a more about how

00:19:01,260 --> 00:19:05,070
Ruby object headers I wonder if I can

00:19:02,700 --> 00:19:07,140
manipulate those at the bit level turns

00:19:05,070 --> 00:19:10,470
out you can turns out it works but he

00:19:07,140 --> 00:19:12,870
could not have TD deed that right so we

00:19:10,470 --> 00:19:14,670
have this like really wacky silly gift a

00:19:12,870 --> 00:19:18,360
gift that if you displayed it in

00:19:14,670 --> 00:19:20,490
production I would quit but we have it

00:19:18,360 --> 00:19:23,510
right and it's awesome so that's like

00:19:20,490 --> 00:19:27,720
what's important about all this stuff so

00:19:23,510 --> 00:19:29,850
we need both of these things before i

00:19:27,720 --> 00:19:31,380
talk about my latest irresponsible

00:19:29,850 --> 00:19:33,960
project which if you hadn't gathered is

00:19:31,380 --> 00:19:37,590
Frappuccino and frp i want to talk

00:19:33,960 --> 00:19:39,570
briefly about shoes so when i came here

00:19:37,590 --> 00:19:41,190
two years ago my talk was specifically

00:19:39,570 --> 00:19:44,460
about how I taken over shoes and what I

00:19:41,190 --> 00:19:46,050
had done with it and two for those of

00:19:44,460 --> 00:19:48,480
you who do not know shoes as a way of

00:19:46,050 --> 00:19:50,700
building GUI applications in Ruby so

00:19:48,480 --> 00:19:53,520
desktop apps and this is like you know

00:19:50,700 --> 00:19:56,520
this is lone star ruby not lone star

00:19:53,520 --> 00:19:58,590
rails right so while we all use rails a

00:19:56,520 --> 00:20:01,080
lot and I use rails as much as everyone

00:19:58,590 --> 00:20:04,770
else does there's a whole lot more to

00:20:01,080 --> 00:20:06,630
Ruby than rails and so chooses a way

00:20:04,770 --> 00:20:08,040
that you can build desktop applications

00:20:06,630 --> 00:20:10,230
which I know are going out of fashion

00:20:08,040 --> 00:20:13,590
it's like really ridiculous to me that

00:20:10,230 --> 00:20:16,080
on this I want to use a web browser but

00:20:13,590 --> 00:20:18,000
on this I want to use a native installed

00:20:16,080 --> 00:20:21,210
application like it just seems like

00:20:18,000 --> 00:20:22,620
totally weird to me so I would like to

00:20:21,210 --> 00:20:27,120
see us build more desktop applications

00:20:22,620 --> 00:20:29,070
in in Ruby yeah lots of complicated

00:20:27,120 --> 00:20:32,160
feels about that like if we need

00:20:29,070 --> 00:20:34,290
world-class desktop quality applications

00:20:32,160 --> 00:20:36,690
in the browser why can't we just have

00:20:34,290 --> 00:20:41,360
world-class desktop quality applications

00:20:36,690 --> 00:20:44,730
on our desktop where those things exist

00:20:41,360 --> 00:20:46,890
anyway so shoes is a way to even build

00:20:44,730 --> 00:20:48,780
us up to absent Ruby and as I told you

00:20:46,890 --> 00:20:51,480
before shoes as code in an extremely

00:20:48,780 --> 00:20:54,420
irresponsible manner there's a file in a

00:20:51,480 --> 00:20:55,710
shoe source that is called Ruby see and

00:20:54,420 --> 00:20:59,580
there's a comment

00:20:55,710 --> 00:21:00,929
that file written by why that says just

00:20:59,580 --> 00:21:03,840
a few little bits of Ruby that I've

00:21:00,929 --> 00:21:06,059
become accustomed to followed by about

00:21:03,840 --> 00:21:14,279
twenty-five hundred lines of uncommented

00:21:06,059 --> 00:21:15,990
C code so after one of the other things

00:21:14,279 --> 00:21:17,880
that was almost done but not finished

00:21:15,990 --> 00:21:20,640
when y left is porting shoes from Ruby

00:21:17,880 --> 00:21:22,980
1872 Ruby 191 and Ruby one night and one

00:21:20,640 --> 00:21:24,480
had just come out and as rubios we are

00:21:22,980 --> 00:21:26,279
all infatuated with what's new and shiny

00:21:24,480 --> 00:21:27,270
so me and one or two the other people

00:21:26,279 --> 00:21:29,850
that were working with me on shoes

00:21:27,270 --> 00:21:32,700
finished porting it to review 191 now

00:21:29,850 --> 00:21:35,190
here's the problem movie one on one was

00:21:32,700 --> 00:21:36,600
terrible right like I don't know for

00:21:35,190 --> 00:21:39,330
those of you who use it but it was

00:21:36,600 --> 00:21:40,950
actually categorized as a development

00:21:39,330 --> 00:21:42,840
release like movie one on one was never

00:21:40,950 --> 00:21:44,250
intended for production I only say it's

00:21:42,840 --> 00:21:45,960
terrible because of all the things about

00:21:44,250 --> 00:21:47,760
tell you in a minute but like it was not

00:21:45,960 --> 00:21:49,740
intended for me to do it that way I

00:21:47,760 --> 00:21:51,840
didn't know any better because I was

00:21:49,740 --> 00:21:53,880
still relatively new to Ruby the real

00:21:51,840 --> 00:21:55,590
problem though was that because again

00:21:53,880 --> 00:21:57,990
shoes is written with thousands of lines

00:21:55,590 --> 00:21:59,429
of uncommon at C code once it got to

00:21:57,990 --> 00:22:01,950
would be one on one and then would be

00:21:59,429 --> 00:22:04,559
one I too came out I couldn't actually

00:22:01,950 --> 00:22:06,510
get it to work with Ruby 192 so I spent

00:22:04,559 --> 00:22:09,029
a year actually trying to port it to

00:22:06,510 --> 00:22:10,919
Ruby 192 and could not get it to work to

00:22:09,029 --> 00:22:12,929
the point where when movie 193 came out

00:22:10,919 --> 00:22:15,029
I tried for again almost a year to

00:22:12,929 --> 00:22:17,100
Puerto sir Ruby 193 and that didn't work

00:22:15,029 --> 00:22:19,950
either and then finally said okay we

00:22:17,100 --> 00:22:21,360
need to have a talk now here's the real

00:22:19,950 --> 00:22:23,760
problem of why it was really important

00:22:21,360 --> 00:22:25,230
get away from Ruby 191 one of the things

00:22:23,760 --> 00:22:27,120
that was really really bad about Ruby

00:22:25,230 --> 00:22:29,390
191 was that the new like threading

00:22:27,120 --> 00:22:32,039
stuff was just like not fully baked yet

00:22:29,390 --> 00:22:35,909
and then there's like I remember I said

00:22:32,039 --> 00:22:37,049
earlier about Windows Vista so on about

00:22:35,909 --> 00:22:39,149
thirty percent of the shoes

00:22:37,049 --> 00:22:40,860
installations on Windows Vista of course

00:22:39,149 --> 00:22:42,600
not one of mine but on other people's

00:22:40,860 --> 00:22:44,820
thirty percent of machines of indecisive

00:22:42,600 --> 00:22:47,909
a threading that's used in shoes just

00:22:44,820 --> 00:22:49,559
like dead locks and breaks and dies and

00:22:47,909 --> 00:22:51,600
so it's really unfortunate when you

00:22:49,559 --> 00:22:53,279
built a kadhi hack a way for people to

00:22:51,600 --> 00:22:54,779
learn programming and people that are

00:22:53,279 --> 00:22:56,820
learning programming often have Windows

00:22:54,779 --> 00:22:58,230
machines and then they install it and

00:22:56,820 --> 00:23:00,149
they'll get to learn that programming

00:22:58,230 --> 00:23:04,850
consists of programs crashing every 30

00:23:00,149 --> 00:23:06,470
there every like 10 or 15 minutes um so

00:23:04,850 --> 00:23:09,310
is important we broke away so I'm here

00:23:06,470 --> 00:23:11,600
to tell you if is that shoes is not dead

00:23:09,310 --> 00:23:12,650
if you've been following development of

00:23:11,600 --> 00:23:15,170
shoes I've been sort of quiet about it

00:23:12,650 --> 00:23:16,910
for a while but we decided that we would

00:23:15,170 --> 00:23:18,920
rather let Charlie another deal with the

00:23:16,910 --> 00:23:20,480
cross-platform issues and not have to

00:23:18,920 --> 00:23:22,190
deal with it ourselves so we are

00:23:20,480 --> 00:23:25,100
actually completely writing shoes in

00:23:22,190 --> 00:23:26,420
JRuby and it is almost done and sort of

00:23:25,100 --> 00:23:29,060
kind of working already and I'm about

00:23:26,420 --> 00:23:29,930
chilis and stuff with it today so if

00:23:29,060 --> 00:23:33,820
you're interested in desktop

00:23:29,930 --> 00:23:37,310
applications check out some shoes now

00:23:33,820 --> 00:23:38,660
I'm not gonna go into this is well all

00:23:37,310 --> 00:23:41,300
right we'll do a teeny little bit of

00:23:38,660 --> 00:23:45,080
shoes let me get to the correct terminal

00:23:41,300 --> 00:23:48,200
all right here so um and I'll do this

00:23:45,080 --> 00:23:51,350
one I used show Ruby nowadays to switch

00:23:48,200 --> 00:23:53,330
Ruby's it's pretty awesome if you don't

00:23:51,350 --> 00:23:56,180
use it it's pretty cool so all right

00:23:53,330 --> 00:23:57,800
let's check out a shoes darby file this

00:23:56,180 --> 00:24:01,610
is also part of the irresponsible pneus

00:23:57,800 --> 00:24:02,990
is that coding live always goes wrong so

00:24:01,610 --> 00:24:04,490
I decided will be fun to do it in front

00:24:02,990 --> 00:24:05,650
of all of you because you know that's

00:24:04,490 --> 00:24:09,020
the whole point is being irresponsible

00:24:05,650 --> 00:24:10,970
so it's fun all right so to make an

00:24:09,020 --> 00:24:16,160
application and shoes you just shoes got

00:24:10,970 --> 00:24:19,430
app do end that's it and then if you run

00:24:16,160 --> 00:24:23,360
um I'm gonna need a dot slash let's see

00:24:19,430 --> 00:24:24,890
how this goes uh if you run it's not

00:24:23,360 --> 00:24:27,830
actually in this one oh that's right

00:24:24,890 --> 00:24:31,130
because they see I told you it always

00:24:27,830 --> 00:24:34,850
goes wrong it doesn't matter um source

00:24:31,130 --> 00:24:37,490
shoes for bin shoes percentage this

00:24:34,850 --> 00:24:41,000
should work and then we have the amazing

00:24:37,490 --> 00:24:42,410
nope see doesn't work there either why

00:24:41,000 --> 00:24:46,100
is the 0 because it doesn't actually do

00:24:42,410 --> 00:24:47,300
that from Ruby okay whatever i will show

00:24:46,100 --> 00:24:49,010
you some shoes out the do work that i

00:24:47,300 --> 00:24:51,320
ran before i decide to live code them

00:24:49,010 --> 00:24:54,890
but the point is is that shoes that updo

00:24:51,320 --> 00:24:57,380
and gives you a window with application

00:24:54,890 --> 00:24:59,270
on it and then the great thing i love

00:24:57,380 --> 00:25:03,920
about shoes is it uses rubies blocks to

00:24:59,270 --> 00:25:05,960
great effect so to make a button that

00:25:03,920 --> 00:25:09,980
you click you type button and then you

00:25:05,960 --> 00:25:13,400
say push me also I'm really bad at vim

00:25:09,980 --> 00:25:16,890
by the way so this button will come up

00:25:13,400 --> 00:25:18,600
and it'll say push me and then you

00:25:16,890 --> 00:25:23,490
the block runs and the button is pushed

00:25:18,600 --> 00:25:24,810
so you can get an alert good job all

00:25:23,490 --> 00:25:26,100
right I'm gonna try one more time to

00:25:24,810 --> 00:25:28,410
actually get this to work the right way

00:25:26,100 --> 00:25:30,510
I'm gonna do this by doing this shoes

00:25:28,410 --> 00:25:32,640
for there's some real stuff of the paths

00:25:30,510 --> 00:25:37,980
again we're in development so like who

00:25:32,640 --> 00:25:39,120
knows in shoes temp shoes dot RB hey

00:25:37,980 --> 00:25:41,760
that looks like that might actually be

00:25:39,120 --> 00:25:46,410
working so after the wonderful JVM

00:25:41,760 --> 00:25:47,910
startup time you get a window that says

00:25:46,410 --> 00:25:54,570
push me and you push the button and this

00:25:47,910 --> 00:25:56,880
is a good job and that's it yes now if

00:25:54,570 --> 00:25:58,170
you've ever done desktop has anyone

00:25:56,880 --> 00:26:00,000
actually done he's done desktop

00:25:58,170 --> 00:26:02,520
application stuff before okay so you

00:26:00,000 --> 00:26:05,160
know how terribly horribly painfully

00:26:02,520 --> 00:26:08,070
terribly horrible that is and so when I

00:26:05,160 --> 00:26:09,990
saw this I was like oh my god a desktop

00:26:08,070 --> 00:26:12,810
GUI tool kit that does not make me want

00:26:09,990 --> 00:26:15,600
to cry this is amazing I actually

00:26:12,810 --> 00:26:21,360
implemented so here's another fun little

00:26:15,600 --> 00:26:22,830
thing in shoes so if you want to set a

00:26:21,360 --> 00:26:25,260
background you can do something like

00:26:22,830 --> 00:26:29,190
this background and then you can give it

00:26:25,260 --> 00:26:33,300
a range so percent 0002 percent or not

00:26:29,190 --> 00:26:35,490
percent you know what I mean hash FFF

00:26:33,300 --> 00:26:39,450
and this will actually give us a

00:26:35,490 --> 00:26:40,440
gradient background I'm just not gonna

00:26:39,450 --> 00:26:41,640
run from inside of them because

00:26:40,440 --> 00:26:43,590
apparently messed with my paths it's

00:26:41,640 --> 00:26:44,910
probably i don't even speculate so this

00:26:43,590 --> 00:26:47,490
gives us this nice awesome gradient

00:26:44,910 --> 00:26:49,550
background um when we were evaluating

00:26:47,490 --> 00:26:51,390
different options to rewrite shoes in

00:26:49,550 --> 00:26:54,690
one of the things that we talked about

00:26:51,390 --> 00:26:56,310
was cutie and there's cutie works on all

00:26:54,690 --> 00:26:58,590
the platforms so I started implementing

00:26:56,310 --> 00:27:00,120
stuff in in cutie and I was like all

00:26:58,590 --> 00:27:04,290
right I'll implement the background

00:27:00,120 --> 00:27:06,120
thing so implementing that like using a

00:27:04,290 --> 00:27:08,160
background that's a gradient involves

00:27:06,120 --> 00:27:10,440
creating a gradient object creating a

00:27:08,160 --> 00:27:12,720
pen object creating two color objects

00:27:10,440 --> 00:27:14,910
telling the gradient object how many

00:27:12,720 --> 00:27:16,680
types of colors it's going to gradient

00:27:14,910 --> 00:27:19,020
through and what percentage they all go

00:27:16,680 --> 00:27:20,400
down from assigning those pen objects to

00:27:19,020 --> 00:27:22,230
this color objects and assigning the

00:27:20,400 --> 00:27:24,000
colored pen objects to the gradient

00:27:22,230 --> 00:27:24,460
object and then inserting it into the

00:27:24,000 --> 00:27:26,110
run

00:27:24,460 --> 00:27:30,070
and then making it work and this was

00:27:26,110 --> 00:27:32,170
like in the ruby port of you know cutie

00:27:30,070 --> 00:27:33,220
so it was like super intense and so I

00:27:32,170 --> 00:27:34,810
was like man this is what it's like

00:27:33,220 --> 00:27:35,950
normally to build these desktop apps no

00:27:34,810 --> 00:27:37,240
wonder everyone wants to use the web

00:27:35,950 --> 00:27:39,790
like as much as we complain about

00:27:37,240 --> 00:27:41,830
JavaScript like writing some C++ to use

00:27:39,790 --> 00:27:43,150
QT is like I would much rather their

00:27:41,830 --> 00:27:46,720
code in JavaScript as much as I dislike

00:27:43,150 --> 00:27:48,190
it and have to do that so this is what I

00:27:46,720 --> 00:27:50,650
really love about this is really super

00:27:48,190 --> 00:27:52,150
simple and also this feeds into so

00:27:50,650 --> 00:27:53,830
happies mission is sort of like to teach

00:27:52,150 --> 00:27:55,570
people programming and people's

00:27:53,830 --> 00:27:57,070
expectations are so much higher nowadays

00:27:55,570 --> 00:27:58,900
that we need a simple way to produce

00:27:57,070 --> 00:28:00,640
graphical applications so that people

00:27:58,900 --> 00:28:02,380
get excited because when I was a kid

00:28:00,640 --> 00:28:03,910
when I back in my I've been teaching

00:28:02,380 --> 00:28:05,590
high school kids for last two weeks and

00:28:03,910 --> 00:28:09,160
it made its never made me feel so old

00:28:05,590 --> 00:28:11,110
like I'm 27 I'm 27 and basically I'm

00:28:09,160 --> 00:28:12,670
always like back when I was in high

00:28:11,110 --> 00:28:17,980
school and house like I seriously just

00:28:12,670 --> 00:28:19,780
say that so back when I was in school

00:28:17,980 --> 00:28:22,720
and I was a little programmer kid

00:28:19,780 --> 00:28:27,130
younger than you we played adventure on

00:28:22,720 --> 00:28:28,570
our terminals and we liked it and that

00:28:27,130 --> 00:28:30,070
was like how i learned programming was

00:28:28,570 --> 00:28:31,150
through text adventures and that was

00:28:30,070 --> 00:28:32,740
where i was really psyched about and

00:28:31,150 --> 00:28:34,060
that's why i was here the problem is you

00:28:32,740 --> 00:28:35,830
get a kid that's playing like Call of

00:28:34,060 --> 00:28:37,540
Duty and you tell them like listen

00:28:35,830 --> 00:28:40,300
programming is super awesome you can

00:28:37,540 --> 00:28:42,760
type punch the pirate in the face and a

00:28:40,300 --> 00:28:45,910
you know and it'll say you died idiot

00:28:42,760 --> 00:28:47,470
like it's almost kind of like the voice

00:28:45,910 --> 00:28:53,230
chat in college ooty actually look like

00:28:47,470 --> 00:28:54,610
with with Wes cussing so but the point

00:28:53,230 --> 00:28:57,070
is that people have higher expectations

00:28:54,610 --> 00:28:59,680
nowadays and so it's important that we

00:28:57,070 --> 00:29:02,080
like do graphical stuff I actually it's

00:28:59,680 --> 00:29:04,240
so funny so when I'm teaching these high

00:29:02,080 --> 00:29:06,100
school kids they they're like oh yeah

00:29:04,240 --> 00:29:07,810
Ruby programming it's kind of fun and I

00:29:06,100 --> 00:29:10,060
showed them a little bit of HTML and CSS

00:29:07,810 --> 00:29:11,920
and I literally like made an h1 with a

00:29:10,060 --> 00:29:14,170
neon green background and made it as

00:29:11,920 --> 00:29:15,880
garish red colored like on the main body

00:29:14,170 --> 00:29:17,290
of the page and they were like super

00:29:15,880 --> 00:29:19,620
psyched all of a sudden and they're like

00:29:17,290 --> 00:29:21,880
wait wait i can make movie make this to

00:29:19,620 --> 00:29:23,620
hold on and they just got like really

00:29:21,880 --> 00:29:26,440
excited so graphics like really speaks

00:29:23,620 --> 00:29:28,660
to people um anyway I need to stop

00:29:26,440 --> 00:29:31,180
talking about shoes because I'm gonna

00:29:28,660 --> 00:29:34,210
run out sometime so it's that sort of

00:29:31,180 --> 00:29:35,350
shoes now let's talk about function of

00:29:34,210 --> 00:29:36,509
active programming I'm just gonna drop

00:29:35,350 --> 00:29:38,399
shoes for a while and come back to

00:29:36,509 --> 00:29:42,719
later um let's talk about function

00:29:38,399 --> 00:29:44,539
reactive programming no does anyone here

00:29:42,719 --> 00:29:47,489
know functional reactive programming

00:29:44,539 --> 00:29:50,129
yeah one guy this is two people this is

00:29:47,489 --> 00:29:51,809
awesome okay so a function reactive

00:29:50,129 --> 00:29:53,609
programming is this really really

00:29:51,809 --> 00:29:56,429
interesting programming paradigm that

00:29:53,609 --> 00:29:59,159
sort of came out of the sky khon all

00:29:56,429 --> 00:30:00,899
Eliot's graduate work it was sort of

00:29:59,159 --> 00:30:02,879
invented in a school for different

00:30:00,899 --> 00:30:04,769
reasons basically combines two different

00:30:02,879 --> 00:30:06,749
paradigms into one awesome paradigm

00:30:04,769 --> 00:30:09,089
functional programming and reactive

00:30:06,749 --> 00:30:11,429
programming so let's go without real

00:30:09,089 --> 00:30:14,069
quick first so functional programming is

00:30:11,429 --> 00:30:16,229
as you probably know functions as a

00:30:14,069 --> 00:30:18,089
first class concept which is not gonna

00:30:16,229 --> 00:30:19,619
satisfy any of the pedantic people who

00:30:18,089 --> 00:30:21,449
love functional programming in terms of

00:30:19,619 --> 00:30:23,369
a definition but whatever this is a talk

00:30:21,449 --> 00:30:26,549
it's my talk I could say what I want um

00:30:23,369 --> 00:30:28,019
this is fine for now I'm it's cool i've

00:30:26,549 --> 00:30:29,879
written haskell before I almost got a

00:30:28,019 --> 00:30:33,269
high school tattoo I can like skim over

00:30:29,879 --> 00:30:35,279
details cool um so I do I have a really

00:30:33,269 --> 00:30:37,199
tattoo by the way that's how much me and

00:30:35,279 --> 00:30:38,399
shames always argue about who likes Ruby

00:30:37,199 --> 00:30:39,779
more because I'm like Ivan would be

00:30:38,399 --> 00:30:45,389
tattoo and he's like I married a woman

00:30:39,779 --> 00:30:48,089
named Ruby so anyway so functions is a

00:30:45,389 --> 00:30:50,369
first-class concept as a way of you know

00:30:48,089 --> 00:30:52,199
doing this kind of programming stuff so

00:30:50,369 --> 00:30:54,479
we all do this ruby is sort of

00:30:52,199 --> 00:30:56,129
functionally inflected and we enjoy it

00:30:54,479 --> 00:30:58,169
and doing it so I don't need to talk

00:30:56,129 --> 00:30:59,639
about it anymore reactive programming

00:30:58,169 --> 00:31:02,819
though is something we don't necessarily

00:30:59,639 --> 00:31:04,739
do a lot of and that is data flows as a

00:31:02,819 --> 00:31:08,429
first class concept what is the data

00:31:04,739 --> 00:31:09,839
flow Steve I'm glad you asked but before

00:31:08,429 --> 00:31:11,309
I tell you that basically function

00:31:09,839 --> 00:31:13,499
reactive programming is using first

00:31:11,309 --> 00:31:16,199
class functions to manipulate flows of

00:31:13,499 --> 00:31:18,149
data Stephen think of these data flows

00:31:16,199 --> 00:31:19,859
is like Excel right so if you do

00:31:18,149 --> 00:31:21,690
programming excel and people do

00:31:19,859 --> 00:31:23,159
programming excel I actually like to

00:31:21,690 --> 00:31:26,849
think that the banking crisis was caused

00:31:23,159 --> 00:31:28,289
by Excel not buy anything else when I

00:31:26,849 --> 00:31:29,909
had a startup back in the day my

00:31:28,289 --> 00:31:31,979
co-founder actually wanted to learn

00:31:29,909 --> 00:31:33,629
Python so that he could write a syntax

00:31:31,979 --> 00:31:36,089
highlighting plugin for G edit that

00:31:33,629 --> 00:31:37,440
would highlight his excel macros and I

00:31:36,089 --> 00:31:40,670
was like I'm not helping you learn

00:31:37,440 --> 00:31:44,640
programming anymore sorry

00:31:40,670 --> 00:31:46,740
but so in Excel when you're writing your

00:31:44,640 --> 00:31:48,630
like you know application to manage

00:31:46,740 --> 00:31:51,270
thousands of houses that are going to be

00:31:48,630 --> 00:31:54,780
underwater and make people homeless you

00:31:51,270 --> 00:31:58,590
decide to link up like column 1 a plus

00:31:54,780 --> 00:32:04,320
column 1 B equals you know family is on

00:31:58,590 --> 00:32:06,360
the street no sorry equals you know C

00:32:04,320 --> 00:32:07,590
and then that changes so when you modify

00:32:06,360 --> 00:32:10,350
the fact that you're making way more

00:32:07,590 --> 00:32:12,150
money on one column it does get updates

00:32:10,350 --> 00:32:13,320
things automatically sorry that was

00:32:12,150 --> 00:32:14,850
gonna get a nothing political in this

00:32:13,320 --> 00:32:17,490
talk and it just came out I was trying

00:32:14,850 --> 00:32:18,990
to hold it down so the point is is that

00:32:17,490 --> 00:32:20,760
you link these things up and then when

00:32:18,990 --> 00:32:22,410
you change the inputs the outputs change

00:32:20,760 --> 00:32:24,570
automatically this is running me by flow

00:32:22,410 --> 00:32:27,110
data flows through your program it's not

00:32:24,570 --> 00:32:31,140
imperative in the way that we say things

00:32:27,110 --> 00:32:35,550
data flows so this is Ruby code right

00:32:31,140 --> 00:32:39,630
hey equals 5 B equals a plus 6b is 11 if

00:32:35,550 --> 00:32:42,060
you change a 26 B is still 11 right this

00:32:39,630 --> 00:32:43,050
is easy this makes sense this is not the

00:32:42,060 --> 00:32:45,030
way that function reactive programming

00:32:43,050 --> 00:32:46,650
works in functional reactive programming

00:32:45,030 --> 00:32:48,360
and I'm using the colon just to

00:32:46,650 --> 00:32:51,660
differentiate it because you know it's

00:32:48,360 --> 00:32:54,060
different a would be equal to 5 B would

00:32:51,660 --> 00:32:56,100
be sort of better rather than say equals

00:32:54,060 --> 00:32:58,050
it's like bound to the expression of the

00:32:56,100 --> 00:33:00,750
sort of the language so b is bound to

00:32:58,050 --> 00:33:04,320
the value of a plus 6 so b is currently

00:33:00,750 --> 00:33:09,540
11 but whenever I go to a and I set it

00:33:04,320 --> 00:33:11,010
to 6 B becomes 12 so this is sort of a

00:33:09,540 --> 00:33:13,470
little bit different than what we're

00:33:11,010 --> 00:33:16,830
used to doing and I think in many ways

00:33:13,470 --> 00:33:18,690
much more interesting not necessarily

00:33:16,830 --> 00:33:20,400
more so here's the big words that Cano

00:33:18,690 --> 00:33:22,110
likes to use in his papers and you can

00:33:20,400 --> 00:33:24,150
go read those papers if it interests you

00:33:22,110 --> 00:33:26,010
but basically there's like three main

00:33:24,150 --> 00:33:27,690
concepts in frp so there's a time

00:33:26,010 --> 00:33:29,220
varying value which is called like a

00:33:27,690 --> 00:33:32,460
behavior so that's what a and B would be

00:33:29,220 --> 00:33:35,580
they value they've vary over time events

00:33:32,460 --> 00:33:36,690
are things that occur many times over a

00:33:35,580 --> 00:33:38,520
certain period of time and then

00:33:36,690 --> 00:33:41,130
switching is like the ability for

00:33:38,520 --> 00:33:42,900
time-varying values to react to events

00:33:41,130 --> 00:33:45,300
I'm not gonna use any of those big words

00:33:42,900 --> 00:33:46,650
anymore because they're silly I'm gonna

00:33:45,300 --> 00:33:47,789
talk to you about us like slightly

00:33:46,650 --> 00:33:50,009
easier word

00:33:47,789 --> 00:33:51,509
wording that I use in frappuccino but

00:33:50,009 --> 00:33:52,470
before I talk to about fabbity know I

00:33:51,509 --> 00:33:54,840
want to talk to you about my friend

00:33:52,470 --> 00:33:56,759
philip so i think that it's really

00:33:54,840 --> 00:33:58,649
important that we go and explore things

00:33:56,759 --> 00:34:00,389
again this irresponsible pneus is also

00:33:58,649 --> 00:34:03,119
about exploration so I think it's really

00:34:00,389 --> 00:34:05,279
important that we go and explore other

00:34:03,119 --> 00:34:06,450
programming paradigms and topics this is

00:34:05,279 --> 00:34:08,460
one of the reasons why i was interested

00:34:06,450 --> 00:34:11,490
in frp is that i didn't know anybody who

00:34:08,460 --> 00:34:12,809
did it in ruby but I went to this

00:34:11,490 --> 00:34:15,629
JavaScript conference called the

00:34:12,809 --> 00:34:17,429
real-time conference EU 2013 it was

00:34:15,629 --> 00:34:19,079
super cool Philip gave a talk there

00:34:17,429 --> 00:34:19,980
that's really awesome called enemy of

00:34:19,079 --> 00:34:21,629
the state functional reactive

00:34:19,980 --> 00:34:24,359
programming with bacon Jas and you

00:34:21,629 --> 00:34:26,970
should totally watch it sometime but he

00:34:24,359 --> 00:34:28,260
decided to present about bacon jas which

00:34:26,970 --> 00:34:32,579
is a functional reactive programming

00:34:28,260 --> 00:34:34,829
library in javascript for writing UI

00:34:32,579 --> 00:34:36,899
stuff and I was like whoa this is really

00:34:34,829 --> 00:34:38,339
neat we should totally have this in Ruby

00:34:36,899 --> 00:34:39,899
so I sort of stopped paying attention

00:34:38,339 --> 00:34:41,639
was talk for a minute and busted out

00:34:39,899 --> 00:34:43,169
bundled gem and I was like oh I gotta

00:34:41,639 --> 00:34:45,500
think of a name I can't I can't write a

00:34:43,169 --> 00:34:48,359
gem another name and it was like frp

00:34:45,500 --> 00:34:49,470
pacino so I guys like that's what

00:34:48,359 --> 00:34:51,329
frappuccino comes from because

00:34:49,470 --> 00:34:53,639
functional reactive programming and I

00:34:51,329 --> 00:34:56,669
drink a lot of coffee is turns into

00:34:53,639 --> 00:34:59,309
Frappuccino so we were doing the rest of

00:34:56,669 --> 00:35:01,890
his talk I started like stealing the UI

00:34:59,309 --> 00:35:04,410
or the interface like elements to make

00:35:01,890 --> 00:35:05,849
this work and then ended up like writing

00:35:04,410 --> 00:35:07,319
a ruby gem over the rest of the

00:35:05,849 --> 00:35:11,059
conference to sort of be similar to

00:35:07,319 --> 00:35:14,069
bacon j/s so that is the complex

00:35:11,059 --> 00:35:16,319
heritage of this ruby gem is that it

00:35:14,069 --> 00:35:20,460
comes from bacon das which comes from

00:35:16,319 --> 00:35:26,609
like our xjx which comes from Elm which

00:35:20,460 --> 00:35:28,040
comes from Haskell stuff so uh now let's

00:35:26,609 --> 00:35:30,240
talk about frappuccino real quick and

00:35:28,040 --> 00:35:31,770
same deal all right I'm gonna go into

00:35:30,240 --> 00:35:35,819
the other terminal which has Ruby to

00:35:31,770 --> 00:35:38,040
instead of now does it all have jruby

00:35:35,819 --> 00:35:41,609
whatever i'll switch into the right one

00:35:38,040 --> 00:35:45,569
truly to switching it would be two point

00:35:41,609 --> 00:35:51,630
oh okay so um let's talk about

00:35:45,569 --> 00:35:52,859
frappuccino real quick so um so oh hey

00:35:51,630 --> 00:35:54,329
look I already have this example from

00:35:52,859 --> 00:35:56,859
the last time I gave this talk because I

00:35:54,329 --> 00:36:01,059
totally forgot to delete it um

00:35:56,859 --> 00:36:02,739
so first of all we need to in order to

00:36:01,059 --> 00:36:05,529
do this we need to require frappuccino

00:36:02,739 --> 00:36:07,809
of course it's a ruby gem you require it

00:36:05,529 --> 00:36:09,400
then in this case I'm going to be

00:36:07,809 --> 00:36:11,349
pushing a button that's going to be like

00:36:09,400 --> 00:36:12,819
the thing that changes and so I'm gonna

00:36:11,349 --> 00:36:14,589
make a class called button with a method

00:36:12,819 --> 00:36:15,970
called push and then what the button is

00:36:14,589 --> 00:36:18,430
going to do is whenever the button is

00:36:15,970 --> 00:36:20,799
pushed it's going to emit an event which

00:36:18,430 --> 00:36:23,309
is a symbol called plus so this button

00:36:20,799 --> 00:36:27,579
like adds one now you may be wondering

00:36:23,309 --> 00:36:28,960
where amit came from this is my

00:36:27,579 --> 00:36:30,549
irresponsible pneus we'll talk about

00:36:28,960 --> 00:36:33,339
that later or maybe you'll have to

00:36:30,549 --> 00:36:34,749
source dive but it works so we call this

00:36:33,339 --> 00:36:39,279
method call dammit which doesn't exist

00:36:34,749 --> 00:36:41,319
anywhere and then what we do is we make

00:36:39,279 --> 00:36:44,440
a button I'm going to scroll this down

00:36:41,319 --> 00:36:46,599
here so we make a button by button new

00:36:44,440 --> 00:36:49,299
and then we create a frappuccino stream

00:36:46,599 --> 00:36:51,640
out of that button so what the stream

00:36:49,299 --> 00:36:53,680
does is the stream collects up all of

00:36:51,640 --> 00:36:55,119
the events that occur and allows you to

00:36:53,680 --> 00:36:57,549
do processing on them this is the

00:36:55,119 --> 00:36:59,170
functional part so the reactive part is

00:36:57,549 --> 00:37:01,119
those things flowing through the stream

00:36:59,170 --> 00:37:03,450
and the functional part is this map and

00:37:01,119 --> 00:37:05,799
inject so we make this stream and then

00:37:03,450 --> 00:37:07,059
um well actually I guess we technically

00:37:05,799 --> 00:37:09,039
make the whole stream and then assigned

00:37:07,059 --> 00:37:10,630
to the stream variable but whatever the

00:37:09,039 --> 00:37:12,430
point is we make this dream then we call

00:37:10,630 --> 00:37:13,539
map on the stream map is just from

00:37:12,430 --> 00:37:15,670
innumerable it's the exact same

00:37:13,539 --> 00:37:18,819
innumerable thing that you know of we

00:37:15,670 --> 00:37:20,470
get events and then just for maximum

00:37:18,819 --> 00:37:21,999
unreal bility because it's functional

00:37:20,470 --> 00:37:25,059
programming I decided to use a ternary

00:37:21,999 --> 00:37:26,980
operator instead of an if so we get an

00:37:25,059 --> 00:37:28,809
event and we say if the event is a plus

00:37:26,980 --> 00:37:30,700
map it to one otherwise mappa two is

00:37:28,809 --> 00:37:32,319
zero in this case we know that all the

00:37:30,700 --> 00:37:33,640
events are going to be ones but I just

00:37:32,319 --> 00:37:35,650
wanted to make the logic you know be

00:37:33,640 --> 00:37:37,329
there so I made it so that it could

00:37:35,650 --> 00:37:39,339
theoretically take other events but this

00:37:37,329 --> 00:37:40,839
should only ever get pluses so we map

00:37:39,339 --> 00:37:43,299
those events into ones and zeros and

00:37:40,839 --> 00:37:48,420
then we call object to sum them up and

00:37:43,299 --> 00:37:51,849
then um that stream I didn't actually

00:37:48,420 --> 00:37:54,489
assign yeah okay I actually modify this

00:37:51,849 --> 00:37:56,049
code will not totally work because this

00:37:54,489 --> 00:37:59,019
actually would not live every stream it

00:37:56,049 --> 00:38:01,150
would be a total because since I was

00:37:59,019 --> 00:38:03,849
showing off some formatting stuff now

00:38:01,150 --> 00:38:04,960
might terminals too low okay um so we

00:38:03,849 --> 00:38:06,710
would assign this to a total right

00:38:04,960 --> 00:38:09,740
because we're injecting to

00:38:06,710 --> 00:38:11,599
some right so then we can put total dot

00:38:09,740 --> 00:38:13,160
now and that should be zero and then

00:38:11,599 --> 00:38:15,920
when we push the button three times and

00:38:13,160 --> 00:38:19,070
then puts total now it should be three

00:38:15,920 --> 00:38:22,820
right so let's let's see if this works

00:38:19,070 --> 00:38:26,570
properly should yeah totally almost live

00:38:22,820 --> 00:38:29,030
coding but not quite 0 1 & 3 um tunes

00:38:26,570 --> 00:38:34,940
are the basics of how this works in Ruby

00:38:29,030 --> 00:38:36,260
um okay so um then I was thinking about

00:38:34,940 --> 00:38:38,030
this and the problem was i okay so i

00:38:36,260 --> 00:38:40,760
wrote this gem it's a copy of bacon da

00:38:38,030 --> 00:38:42,619
che s but like I still had no idea how

00:38:40,760 --> 00:38:43,880
it would actually be useful to anyone I

00:38:42,619 --> 00:38:47,480
was just like this thing thing thing

00:38:43,880 --> 00:38:48,890
seems kind of cool and so one of the

00:38:47,480 --> 00:38:50,839
things in the ways that I think that it

00:38:48,890 --> 00:38:52,460
could be possibly useful to us as rubios

00:38:50,839 --> 00:38:54,920
is building desktop applications and

00:38:52,460 --> 00:38:57,050
shoes because bacon da je s is useful

00:38:54,920 --> 00:38:59,089
for building GUI applications in the

00:38:57,050 --> 00:39:01,640
browser so i was like oh GUI

00:38:59,089 --> 00:39:05,060
applications outside of the browser so

00:39:01,640 --> 00:39:06,650
i'm gonna show you this other thing

00:39:05,060 --> 00:39:16,880
which again i just cannot get in the

00:39:06,650 --> 00:39:18,260
right terminal whatsoever so in there

00:39:16,880 --> 00:39:21,500
was a shoes application that looks like

00:39:18,260 --> 00:39:24,349
this let's see here it is referenced at

00:39:21,500 --> 00:39:26,839
RB so this is a very simple shoes

00:39:24,349 --> 00:39:29,150
application and what it does is it sets

00:39:26,839 --> 00:39:32,180
of a background color and then you get a

00:39:29,150 --> 00:39:33,740
button with plus one and you increment

00:39:32,180 --> 00:39:35,690
account so when the button is pushed we

00:39:33,740 --> 00:39:37,820
increment a count instance variable and

00:39:35,690 --> 00:39:39,980
then we replace the value of this label

00:39:37,820 --> 00:39:41,599
with the current count then we have a

00:39:39,980 --> 00:39:43,609
minus one button where we decrement the

00:39:41,599 --> 00:39:45,830
same count variable and we replace it

00:39:43,609 --> 00:39:47,780
with the current count then we set our

00:39:45,830 --> 00:39:49,550
instance variable 20 and we set the

00:39:47,780 --> 00:39:50,960
label equal to a paragraph that prints

00:39:49,550 --> 00:39:53,720
out the count which initially of course

00:39:50,960 --> 00:39:56,900
is 0 so when I press the buttons it will

00:39:53,720 --> 00:39:57,859
add stuff together and print this out so

00:39:56,900 --> 00:39:59,570
this is like the way you would write a

00:39:57,859 --> 00:40:01,190
shoes application now there's some stuff

00:39:59,570 --> 00:40:03,200
about shoes you didn't see yet but like

00:40:01,190 --> 00:40:05,000
whatever instance variables reference

00:40:03,200 --> 00:40:08,599
stuff you know do boxes I think it's

00:40:05,000 --> 00:40:10,040
relatively viewable so of course because

00:40:08,599 --> 00:40:11,960
this is a conference talk I'm gonna take

00:40:10,040 --> 00:40:12,980
this incredibly simple relatively clear

00:40:11,960 --> 00:40:14,480
Ruby code and they

00:40:12,980 --> 00:40:18,560
more complicated by recommending a

00:40:14,480 --> 00:40:21,140
design pattern but if your application

00:40:18,560 --> 00:40:22,940
was bigger than this I think Fabio Chino

00:40:21,140 --> 00:40:24,650
could be useful and like hockey for

00:40:22,940 --> 00:40:26,359
example is a couple thousand lines of

00:40:24,650 --> 00:40:27,710
this kind of stuff so when you have all

00:40:26,359 --> 00:40:29,060
these complicated like these instance

00:40:27,710 --> 00:40:31,369
variables manipulated all over the place

00:40:29,060 --> 00:40:34,220
right we assign it in one spot and then

00:40:31,369 --> 00:40:36,500
we actually edit the count in two places

00:40:34,220 --> 00:40:38,030
and we edit the label in two places this

00:40:36,500 --> 00:40:40,609
is like a perfect example for function

00:40:38,030 --> 00:40:42,650
reactive programming I want to bind the

00:40:40,609 --> 00:40:44,690
result of the label to be the outcome of

00:40:42,650 --> 00:40:46,880
whatever the total is right that's

00:40:44,690 --> 00:40:48,530
actually my logic we've split up the

00:40:46,880 --> 00:40:49,910
business logic here into a bunch of

00:40:48,530 --> 00:40:52,760
different places and it doesn't actually

00:40:49,910 --> 00:40:53,960
represent what we do is we do right we

00:40:52,760 --> 00:40:55,520
always say in Ruby that we don't write

00:40:53,960 --> 00:40:57,260
comments because our code just says what

00:40:55,520 --> 00:41:01,280
we want it to do but this does not

00:40:57,260 --> 00:41:04,090
actually say what we want it to do so if

00:41:01,280 --> 00:41:07,310
you look at the frp version of this

00:41:04,090 --> 00:41:09,650
using frappuccino I made a button which

00:41:07,310 --> 00:41:10,850
takes an event of some kind this is just

00:41:09,650 --> 00:41:12,770
so i could use plus and minus buttons

00:41:10,850 --> 00:41:14,270
the same and we just omit that event

00:41:12,770 --> 00:41:16,730
when they get pushed and then I make a

00:41:14,270 --> 00:41:18,410
plus button with the button new plus and

00:41:16,730 --> 00:41:20,030
a minus button with the button others- I

00:41:18,410 --> 00:41:22,250
make a stream out of the both of them

00:41:20,030 --> 00:41:23,600
and then I made a convenient since I

00:41:22,250 --> 00:41:25,430
found that when I was writing code in

00:41:23,600 --> 00:41:27,170
this way I would always end up using map

00:41:25,430 --> 00:41:28,910
with an if so I just wrote this thing

00:41:27,170 --> 00:41:30,950
lets you take hashes with keys and

00:41:28,910 --> 00:41:33,050
values so it maps events to other stuff

00:41:30,950 --> 00:41:34,700
so this would map a plus event to a 1 a

00:41:33,050 --> 00:41:37,250
minus event to another one and then

00:41:34,700 --> 00:41:40,460
anything else to a zero and then we sum

00:41:37,250 --> 00:41:42,140
it up and now the bed just says that hey

00:41:40,460 --> 00:41:47,090
when the book when the +1 button gets

00:41:42,140 --> 00:41:50,960
pushed in the AI or AI Wow in the UI hmm

00:41:47,090 --> 00:41:52,850
I'm not that far advanced yet you you

00:41:50,960 --> 00:41:54,530
push the plus button and when the minus

00:41:52,850 --> 00:41:56,630
1 button gets pushed you push the minus

00:41:54,530 --> 00:41:58,340
button and then the label I to do some

00:41:56,630 --> 00:42:00,290
hackery I'm coming with some like better

00:41:58,340 --> 00:42:01,940
integration for this but animate is

00:42:00,290 --> 00:42:04,460
basically a loop that runs all the time

00:42:01,940 --> 00:42:07,369
so I basically just like every half

00:42:04,460 --> 00:42:09,800
second or so replace the current counts

00:42:07,369 --> 00:42:11,660
the label with the value of whatever the

00:42:09,800 --> 00:42:14,180
outcome of the counter is now so now

00:42:11,660 --> 00:42:15,920
this says exactly what I mean please

00:42:14,180 --> 00:42:18,170
continually update the label with this

00:42:15,920 --> 00:42:20,390
value push those buttons when they get

00:42:18,170 --> 00:42:22,640
pushed and

00:42:20,390 --> 00:42:24,589
because apparently I'm still gonna do

00:42:22,640 --> 00:42:31,250
this all the time I will run this to

00:42:24,589 --> 00:42:32,869
show you that it works and now we get

00:42:31,250 --> 00:42:35,809
our little plus 1 minus ones i mean hit

00:42:32,869 --> 00:42:37,130
the button and it like updates so I know

00:42:35,809 --> 00:42:38,720
this is obviously a super useful

00:42:37,130 --> 00:42:41,059
application that you are all going to go

00:42:38,720 --> 00:42:42,349
steal the source code to immediately let

00:42:41,059 --> 00:42:47,059
me show you another one that is very

00:42:42,349 --> 00:42:49,220
similar to that one so actually I'm

00:42:47,059 --> 00:42:52,480
gonna do this first I want to show you

00:42:49,220 --> 00:42:54,440
the code as it runs actually rather than

00:42:52,480 --> 00:43:00,289
before I show you the code itself

00:42:54,440 --> 00:43:01,760
samples and circle so there's this other

00:43:00,289 --> 00:43:03,230
little example that I've showed where

00:43:01,760 --> 00:43:05,359
it's a little more complicated where you

00:43:03,230 --> 00:43:07,730
have multiple event kinds going on so

00:43:05,359 --> 00:43:10,309
here is this a little circle when you

00:43:07,730 --> 00:43:12,140
hit start it starts animating up and

00:43:10,309 --> 00:43:14,180
down in an oscillation and it also

00:43:12,140 --> 00:43:18,170
prints started to my console and then we

00:43:14,180 --> 00:43:26,660
hit stop it stops start/stop pretty

00:43:18,170 --> 00:43:29,569
simple um but if we check out the code

00:43:26,660 --> 00:43:31,519
for this basically we have a clock that

00:43:29,569 --> 00:43:33,740
like keeps track of the current count

00:43:31,519 --> 00:43:35,329
and we have a reference to we pass it

00:43:33,740 --> 00:43:36,980
our application and it keeps a reference

00:43:35,329 --> 00:43:38,869
to the application around and it starts

00:43:36,980 --> 00:43:40,849
off with the clock being off and then

00:43:38,869 --> 00:43:44,210
when you press the start button on the

00:43:40,849 --> 00:43:48,230
clock it sets up an animation where it

00:43:44,210 --> 00:43:49,490
emits events of I which is like the

00:43:48,230 --> 00:43:50,809
current number of seconds that have

00:43:49,490 --> 00:43:53,390
occurred while the animation is running

00:43:50,809 --> 00:43:55,670
if the clock is on we also emit a

00:43:53,390 --> 00:43:57,410
started event it's a string and then set

00:43:55,670 --> 00:43:59,359
the instance variable on to true and

00:43:57,410 --> 00:44:02,680
then in the stop we basically emit a

00:43:59,359 --> 00:44:05,690
stopped event and we set on to false

00:44:02,680 --> 00:44:08,960
then in the actual shoes application we

00:44:05,690 --> 00:44:11,059
make a clock we set up a frappuccino

00:44:08,960 --> 00:44:12,769
stream out of that clock and then we

00:44:11,059 --> 00:44:15,680
make two different streams out of that

00:44:12,769 --> 00:44:17,509
stream so I you select which again is

00:44:15,680 --> 00:44:19,339
your normal innumerable select and this

00:44:17,509 --> 00:44:21,529
time for like sake of ease I decided to

00:44:19,339 --> 00:44:23,750
just say if it's a fixnum then we want

00:44:21,529 --> 00:44:25,910
to keep track of this as ticks and then

00:44:23,750 --> 00:44:27,619
i have this actual this is another verse

00:44:25,910 --> 00:44:28,600
frappuccino feature I did not show you

00:44:27,619 --> 00:44:30,340
called on value

00:44:28,600 --> 00:44:32,710
well basically every time a new event

00:44:30,340 --> 00:44:34,810
gets processed through the stream run

00:44:32,710 --> 00:44:36,670
this call back so I could have done the

00:44:34,810 --> 00:44:38,950
animate version in this way if I wanted

00:44:36,670 --> 00:44:40,630
to to this is sort of us working on the

00:44:38,950 --> 00:44:43,900
details but basically when we get a new

00:44:40,630 --> 00:44:45,220
tic event move the circle in this math

00:44:43,900 --> 00:44:47,500
pattern that makes some oscillation

00:44:45,220 --> 00:44:49,780
happen and then there's a start/stop

00:44:47,500 --> 00:44:51,490
event that grabs all the string events

00:44:49,780 --> 00:44:53,050
out of the same stream so this is built

00:44:51,490 --> 00:44:54,460
on the original ones we've sort of split

00:44:53,050 --> 00:44:56,620
the stream into two different things and

00:44:54,460 --> 00:44:58,630
then just print it out to the console

00:44:56,620 --> 00:45:00,700
and that's it and the start button on

00:44:58,630 --> 00:45:03,760
the stop button just start and stop the

00:45:00,700 --> 00:45:06,130
clock now what's interesting about this

00:45:03,760 --> 00:45:08,140
is that this shows how you can like grab

00:45:06,130 --> 00:45:09,730
streams and then like copy them to make

00:45:08,140 --> 00:45:10,900
other streams so this is one of the

00:45:09,730 --> 00:45:12,790
things that makes frp a really

00:45:10,900 --> 00:45:14,500
interesting solution is that basically

00:45:12,790 --> 00:45:16,090
it's trivial to add extra functionality

00:45:14,500 --> 00:45:17,950
because you can leave all the older

00:45:16,090 --> 00:45:19,060
stuff alone and sort of grab the pieces

00:45:17,950 --> 00:45:21,190
of the stream that you find interesting

00:45:19,060 --> 00:45:24,370
so we want to add a new button to our UI

00:45:21,190 --> 00:45:25,900
we could add the new button and then

00:45:24,370 --> 00:45:27,490
maybe grab events from it if that's

00:45:25,900 --> 00:45:28,810
possible we're from the clock like if we

00:45:27,490 --> 00:45:30,580
wanted to respond to the clock in some

00:45:28,810 --> 00:45:32,530
other way we wouldn't actually need to

00:45:30,580 --> 00:45:34,300
change any of this code we just be

00:45:32,530 --> 00:45:37,630
grabbing something else from the initial

00:45:34,300 --> 00:45:39,370
stream and that can be really useful in

00:45:37,630 --> 00:45:42,580
different times but that's being way too

00:45:39,370 --> 00:45:44,950
serious for this whole point so just

00:45:42,580 --> 00:45:46,780
gonna go back to this so circle example

00:45:44,950 --> 00:45:48,100
so frappuccino in general is the most

00:45:46,780 --> 00:45:49,390
irresponsible Ruby code that I've

00:45:48,100 --> 00:45:50,920
written lately again I just sort of made

00:45:49,390 --> 00:45:52,180
a gem on a whim and I didn't know how

00:45:50,920 --> 00:45:54,430
I'll be useful and decided just like

00:45:52,180 --> 00:45:56,140
kind of put it out there for funsies and

00:45:54,430 --> 00:45:58,060
so as you know as I said before I

00:45:56,140 --> 00:46:00,790
mentioned the emit method is not defined

00:45:58,060 --> 00:46:02,680
anymore so how does that work LOL i

00:46:00,790 --> 00:46:04,030
don't have time to tell you so you can

00:46:02,680 --> 00:46:05,350
look at the code or think about it

00:46:04,030 --> 00:46:07,150
yourself and see if you've been figure

00:46:05,350 --> 00:46:08,440
it out i'll give this talk with mats in

00:46:07,150 --> 00:46:09,910
the audience and then i had to give it

00:46:08,440 --> 00:46:11,260
away before I could find I was curious

00:46:09,910 --> 00:46:13,000
if he would be able to guess what I did

00:46:11,260 --> 00:46:14,890
cuz it's not that complicated but like

00:46:13,000 --> 00:46:17,110
when I figured it out I was like oh man

00:46:14,890 --> 00:46:19,780
this is awesome but it's kind of also

00:46:17,110 --> 00:46:23,080
really bizarre so um not really really

00:46:19,780 --> 00:46:25,120
bizarre about like kind of bizarre so I

00:46:23,080 --> 00:46:26,740
think that frappuccino and Frappuccino

00:46:25,120 --> 00:46:28,750
as I said before about tests by bachina

00:46:26,740 --> 00:46:30,130
is a full acceptance test suite so I

00:46:28,750 --> 00:46:32,560
make sure I don't break my old features

00:46:30,130 --> 00:46:34,270
and I build new stuff but it is not TDD

00:46:32,560 --> 00:46:35,710
whatsoever because I felt that that

00:46:34,270 --> 00:46:36,170
would guide me towards a certain way of

00:46:35,710 --> 00:46:37,609
building

00:46:36,170 --> 00:46:39,589
and this is about fun and interesting

00:46:37,609 --> 00:46:42,680
stuff more than like mega productive

00:46:39,589 --> 00:46:44,000
stuff so this is my message to you and

00:46:42,680 --> 00:46:45,950
what I wish that you take away from what

00:46:44,000 --> 00:46:48,710
I'm here to say to you today please go

00:46:45,950 --> 00:46:51,349
forth and be irresponsible do creative

00:46:48,710 --> 00:46:52,970
stuff and build fun things in Ruby do

00:46:51,349 --> 00:46:54,589
things that you might consider to be bad

00:46:52,970 --> 00:46:57,140
to see if you get interesting outcomes

00:46:54,589 --> 00:46:58,520
from them and I wish that we just let's

00:46:57,140 --> 00:47:02,260
have a lot more fun with Ruby these days

00:46:58,520 --> 00:47:02,260

YouTube URL: https://www.youtube.com/watch?v=rffDdYBpyYM


