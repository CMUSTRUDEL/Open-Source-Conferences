Title: LoneStarRuby Conf 2013 - Ruby Rogues Panel
Publication date: 2020-01-28
Playlist: Lone Star Ruby Conf 2013
Description: 
	Help us caption & translate this video!

http://amara.org/v/FG8d/
Captions: 
	00:00:14,780 --> 00:00:20,840
hi so we so we may not be an

00:00:19,580 --> 00:00:24,169
introduction when they're giving you one

00:00:20,840 --> 00:00:30,619
anyway okay so where the Ruby roads I'm

00:00:24,169 --> 00:00:34,460
Josh Abdi David Chuck Katrina and Jake's

00:00:30,619 --> 00:00:38,059
pretty good and we're almost ready to

00:00:34,460 --> 00:00:39,760
get started here for slides so but I'm

00:00:38,059 --> 00:00:41,960
not going to wait for them because the

00:00:39,760 --> 00:00:44,420
the intro here doesn't really need them

00:00:41,960 --> 00:00:54,589
may not know what the Ruby Rosa hey who

00:00:44,420 --> 00:00:57,980
listens to us how many people here are

00:00:54,589 --> 00:00:59,809
on the parlay email list that's really

00:00:57,980 --> 00:01:02,300
cool so I'm gonna make the announcement

00:00:59,809 --> 00:01:03,859
now rather than later um one of the

00:01:02,300 --> 00:01:06,140
things that we've been working on for a

00:01:03,859 --> 00:01:09,110
little bit we've had we had Jeff Atwood

00:01:06,140 --> 00:01:11,360
on the show a couple weeks ago a month

00:01:09,110 --> 00:01:13,130
or two ago something like that and we

00:01:11,360 --> 00:01:15,440
talked we talked about discourse which

00:01:13,130 --> 00:01:19,670
is this really cool open source project

00:01:15,440 --> 00:01:21,890
they're doing to reinvent like farm

00:01:19,670 --> 00:01:25,880
groups build on rails built on wheels

00:01:21,890 --> 00:01:27,649
with ember is the front end and we're

00:01:25,880 --> 00:01:29,630
going to be setting moving the roads

00:01:27,649 --> 00:01:32,780
partly list from a google group email

00:01:29,630 --> 00:01:34,340
list to a discourse forum so we'll have

00:01:32,780 --> 00:01:36,020
much more flexibility and how to manage

00:01:34,340 --> 00:01:37,670
conversations we can have plenty of off

00:01:36,020 --> 00:01:41,060
topic stuff there'll be a place for

00:01:37,670 --> 00:01:43,130
recruiters to send their spam so it will

00:01:41,060 --> 00:01:45,259
all be wonderful okay so we have slides

00:01:43,130 --> 00:01:46,880
up now so now I'll talk about what we're

00:01:45,259 --> 00:01:48,829
talking about today I'm just gonna do a

00:01:46,880 --> 00:01:50,450
quick intro then we're all going to each

00:01:48,829 --> 00:01:52,250
take three minutes and tell you our

00:01:50,450 --> 00:01:53,930
position and then we'll have a little

00:01:52,250 --> 00:01:56,329
fun debate and you can ask us questions

00:01:53,930 --> 00:02:01,039
too and the topic today is best practice

00:01:56,329 --> 00:02:02,719
is so many of you may have heard of this

00:02:01,039 --> 00:02:05,810
book small talk best practice patterns

00:02:02,719 --> 00:02:08,090
we had Kent on the show quite a while

00:02:05,810 --> 00:02:11,480
ago now and talked about this book and

00:02:08,090 --> 00:02:14,870
everybody says we really need a ruby

00:02:11,480 --> 00:02:19,240
version of this book so we're waiting

00:02:14,870 --> 00:02:19,240
one yeah

00:02:21,880 --> 00:02:29,270
so we'll be working with Pearson they do

00:02:25,610 --> 00:02:30,950
the professional Ruby series you know

00:02:29,270 --> 00:02:33,470
the books with the red covers I'm sure

00:02:30,950 --> 00:02:35,510
you've seen all a lot of them and so

00:02:33,470 --> 00:02:38,240
tomorrow we're going to be going down to

00:02:35,510 --> 00:02:39,710
the south of the river here in Austin

00:02:38,240 --> 00:02:41,000
and spending a few days in a house and

00:02:39,710 --> 00:02:43,670
having a retreat and starting the book

00:02:41,000 --> 00:02:45,770
so sometime next year you'll be able to

00:02:43,670 --> 00:02:47,990
buy this book and now we're going to

00:02:45,770 --> 00:02:50,630
tell you why you should care about best

00:02:47,990 --> 00:02:54,050
practice patterns or best practices and

00:02:50,630 --> 00:02:57,350
so James can you start us yes but we

00:02:54,050 --> 00:02:59,810
have to switch side things cuz there's a

00:02:57,350 --> 00:03:07,040
lot of us by the way how do you like the

00:02:59,810 --> 00:03:16,010
Hat that's not the right question who

00:03:07,040 --> 00:03:17,780
wins best I couldn't bring myself to

00:03:16,010 --> 00:03:20,260
wear a hat I spent too much money on

00:03:17,780 --> 00:03:20,260
this hair

00:03:27,200 --> 00:03:33,030
okay so if you listen to Ruby legs at

00:03:31,080 --> 00:03:35,370
all you know I'm the super talkative one

00:03:33,030 --> 00:03:38,370
which is why they made me put in this

00:03:35,370 --> 00:03:43,410
slide so I'm gonna show you my one point

00:03:38,370 --> 00:03:46,860
there days if you can't see that it's a

00:03:43,410 --> 00:03:49,739
period right now um ok so that's it and

00:03:46,860 --> 00:03:51,660
thank you no I'm just kidding it does

00:03:49,739 --> 00:03:53,130
tell you about my personality there that

00:03:51,660 --> 00:03:54,900
they give me a really tight time limit

00:03:53,130 --> 00:03:59,580
and I would still burn through slides on

00:03:54,900 --> 00:04:04,380
a joke sorry to tell you why should have

00:03:59,580 --> 00:04:07,140
our best practices and tease an example

00:04:04,380 --> 00:04:10,260
this is a discussion we had online

00:04:07,140 --> 00:04:12,840
recently with several people bad winner

00:04:10,260 --> 00:04:14,910
Justin some comments these are the

00:04:12,840 --> 00:04:17,669
different ways you can use struct if you

00:04:14,910 --> 00:04:19,410
want to add custom methods why the times

00:04:17,669 --> 00:04:21,720
people use the top form where they just

00:04:19,410 --> 00:04:23,490
inherit from what struck returns and put

00:04:21,720 --> 00:04:26,190
the methods in there but you can also

00:04:23,490 --> 00:04:29,940
choose to pass a block to shock and I

00:04:26,190 --> 00:04:32,010
use that I like the latter one but

00:04:29,940 --> 00:04:35,030
that's not the point so try not to get

00:04:32,010 --> 00:04:37,860
hung up on that as we talk about this

00:04:35,030 --> 00:04:40,560
one of the reasons i do prefer the

00:04:37,860 --> 00:04:44,070
rather one is that if you use the latter

00:04:40,560 --> 00:04:47,070
one thing a struct with custom methods

00:04:44,070 --> 00:04:49,800
looks similar to a struct without custom

00:04:47,070 --> 00:04:51,570
methods right and is this concept that

00:04:49,800 --> 00:04:54,660
Josh talks about a lot about code

00:04:51,570 --> 00:04:57,750
malleability where it's easy to

00:04:54,660 --> 00:05:00,630
transform code so in this case you can

00:04:57,750 --> 00:05:06,780
just add or remove the block to turn it

00:05:00,630 --> 00:05:09,630
into the opposite one right and give a

00:05:06,780 --> 00:05:12,660
complete I have against the inheritance

00:05:09,630 --> 00:05:14,520
one is that it actually uses two classes

00:05:12,660 --> 00:05:18,330
the one that gets returned from struct

00:05:14,520 --> 00:05:21,360
and then the one that you inherited that

00:05:18,330 --> 00:05:24,150
from this can cause problems if you're

00:05:21,360 --> 00:05:24,580
using any kind of code reloading because

00:05:24,150 --> 00:05:26,500
it's just

00:05:24,580 --> 00:05:29,080
gets executed the second time you'll get

00:05:26,500 --> 00:05:30,759
a different class the movie will

00:05:29,080 --> 00:05:35,530
complain that the parent classes don't

00:05:30,759 --> 00:05:38,050
actually you get yeah my ways Moses

00:05:35,530 --> 00:05:40,750
Aaron Patterson pointed out that if you

00:05:38,050 --> 00:05:42,430
do use the class inheritance point then

00:05:40,750 --> 00:05:44,169
you have access to super you can write

00:05:42,430 --> 00:05:46,180
methods like you're always too because

00:05:44,169 --> 00:05:48,219
there's a higher level in the class

00:05:46,180 --> 00:05:50,770
hierarchy so you're fine to super up to

00:05:48,219 --> 00:05:53,080
them or include some mixing the supers

00:05:50,770 --> 00:05:55,210
up to them well as if used my way you

00:05:53,080 --> 00:05:59,050
need to use this alternate syntax to

00:05:55,210 --> 00:06:02,379
access the hash version of it and then

00:05:59,050 --> 00:06:04,300
Ruby to kind of subs the mixing problem

00:06:02,379 --> 00:06:08,229
since we can just pretend it and instead

00:06:04,300 --> 00:06:09,610
of included but the point is it that I'm

00:06:08,229 --> 00:06:11,830
trying to tell you the right way you

00:06:09,610 --> 00:06:13,960
should code your structs I'm just saying

00:06:11,830 --> 00:06:15,969
that this is interesting right there's a

00:06:13,960 --> 00:06:18,310
lot of interesting concepts around this

00:06:15,969 --> 00:06:20,949
why code malleability and stuff like

00:06:18,310 --> 00:06:23,259
that and by having these discussions we

00:06:20,949 --> 00:06:25,300
learn from each other and get to you a

00:06:23,259 --> 00:06:29,370
better style of programming until we get

00:06:25,300 --> 00:06:29,370
back to the point that's all I have

00:06:42,130 --> 00:06:49,280
I'd like to talk about naming things I

00:06:46,210 --> 00:06:56,350
started a project recently sandy

00:06:49,280 --> 00:06:58,970
mentioned it it's called exorcism and

00:06:56,350 --> 00:07:03,560
one of the first exercise is there the

00:06:58,970 --> 00:07:06,530
first exercise there is a simple simple

00:07:03,560 --> 00:07:09,710
class named bob bob is a lackadaisical

00:07:06,530 --> 00:07:12,140
teenager and he has a very limited set

00:07:09,710 --> 00:07:14,630
of responses one of them is if you shout

00:07:12,140 --> 00:07:18,050
at him in all caps he responds whoa

00:07:14,630 --> 00:07:23,050
chill out and to everything else who

00:07:18,050 --> 00:07:26,270
responds whatever so the simplest

00:07:23,050 --> 00:07:27,860
absolutely simplest form of this usually

00:07:26,270 --> 00:07:30,740
looks something like this you get a

00:07:27,860 --> 00:07:32,270
string you check whether or not the up

00:07:30,740 --> 00:07:34,550
case version of that string is the same

00:07:32,270 --> 00:07:38,860
as the string and if so it's low chill

00:07:34,550 --> 00:07:41,570
out and otherwise it's whatever I I

00:07:38,860 --> 00:07:44,360
found that some people suggest that you

00:07:41,570 --> 00:07:46,460
should name this piece of logic that s

00:07:44,360 --> 00:07:48,590
equal blah blah blah is implementation

00:07:46,460 --> 00:07:51,920
details we can hide it and if we go back

00:07:48,590 --> 00:07:56,090
to the the readme it says that if if the

00:07:51,920 --> 00:07:59,830
string is all caps then do the one thing

00:07:56,090 --> 00:08:03,440
so some people then say is it all caps

00:07:59,830 --> 00:08:05,870
and name that concept and I'd like to

00:08:03,440 --> 00:08:08,030
say that that is still an implementation

00:08:05,870 --> 00:08:12,200
detail what we're actually talking about

00:08:08,030 --> 00:08:14,810
here is is someone shouting and so

00:08:12,200 --> 00:08:16,700
shouting is interesting in this context

00:08:14,810 --> 00:08:19,100
because it's telling the story of Bob

00:08:16,700 --> 00:08:22,580
and his interlocutor however that's

00:08:19,100 --> 00:08:26,270
pronounced so I'd rather see this thing

00:08:22,580 --> 00:08:28,130
called shouting there's more here this

00:08:26,270 --> 00:08:31,010
shouting right now we're passing the

00:08:28,130 --> 00:08:33,349
message into shouting Bob is determining

00:08:31,010 --> 00:08:35,900
whether he's shouting or not we can move

00:08:33,349 --> 00:08:37,960
this we can say no shouting is a phrase

00:08:35,900 --> 00:08:42,800
and we can check if the phrases shouted

00:08:37,960 --> 00:08:45,370
and this leaves the the logic of

00:08:42,800 --> 00:08:49,700
determining what is shouting what is

00:08:45,370 --> 00:08:53,820
eventually than yelling or whatever to

00:08:49,700 --> 00:08:58,600
the phrase itself there's more

00:08:53,820 --> 00:09:00,010
s is very very generic and in this

00:08:58,600 --> 00:09:02,709
context we're actually talking about

00:09:00,010 --> 00:09:06,310
dribble it's a conversation that's not

00:09:02,709 --> 00:09:09,670
it's meaningless and using choosing the

00:09:06,310 --> 00:09:12,880
name drivel will tell the reader that

00:09:09,670 --> 00:09:16,839
this is meaningless this is drivel this

00:09:12,880 --> 00:09:18,670
isn't a serious conversation so this is

00:09:16,839 --> 00:09:20,709
a lot more complex than what we started

00:09:18,670 --> 00:09:24,459
out with but there are names here that

00:09:20,709 --> 00:09:26,769
tell us the story of Bob and his and the

00:09:24,459 --> 00:09:29,040
person he's talking to and that's all

00:09:26,769 --> 00:09:29,040
I've got

00:09:38,639 --> 00:09:43,149
all right before I get going um I just

00:09:41,410 --> 00:09:48,600
want to give a quick shout out to Mandy

00:09:43,149 --> 00:09:48,600
she's over there no shows

00:09:51,260 --> 00:09:57,030
so she does a lot for the show and a lot

00:09:55,110 --> 00:09:59,010
for me personally in fact before i came

00:09:57,030 --> 00:10:01,710
down my wife told me but i had to tell

00:09:59,010 --> 00:10:03,540
her that she's not going because my wife

00:10:01,710 --> 00:10:07,500
appreciates the time that she saves me

00:10:03,540 --> 00:10:12,120
so anyway i just i just want to give

00:10:07,500 --> 00:10:15,630
credit where it's due so let's talk a

00:10:12,120 --> 00:10:17,670
minute here about best practices one of

00:10:15,630 --> 00:10:19,380
the issues that i have a lot with some

00:10:17,670 --> 00:10:21,630
of the best practice discussions out

00:10:19,380 --> 00:10:24,840
there are the discussions washington

00:10:21,630 --> 00:10:26,760
sessions have always do this you should

00:10:24,840 --> 00:10:30,090
always do that and there's there's

00:10:26,760 --> 00:10:33,690
always a situation where i just used

00:10:30,090 --> 00:10:37,190
that word there's usually a situation

00:10:33,690 --> 00:10:39,870
with most of these best practices where

00:10:37,190 --> 00:10:42,140
there's a trade-off now the interesting

00:10:39,870 --> 00:10:45,570
thing if you listen to katrina's talk

00:10:42,140 --> 00:10:47,460
earlier was that she talked about the

00:10:45,570 --> 00:10:50,220
Dreyfus model and she talked about how

00:10:47,460 --> 00:10:52,590
with beginners with novices advanced

00:10:50,220 --> 00:10:54,270
beginners a lot of times they they just

00:10:52,590 --> 00:10:56,340
kind of follow the rules okay so there

00:10:54,270 --> 00:10:57,900
are there are things that they do and

00:10:56,340 --> 00:10:59,610
they do it because somebody told them to

00:10:57,900 --> 00:11:01,950
and they don't completely understand

00:10:59,610 --> 00:11:03,780
those trade-offs and I think it's an

00:11:01,950 --> 00:11:07,560
important thing to consider with best

00:11:03,780 --> 00:11:09,690
practices because they don't have the

00:11:07,560 --> 00:11:11,250
information to make the determination of

00:11:09,690 --> 00:11:15,180
what's the best practice given a certain

00:11:11,250 --> 00:11:18,170
context so under those circumstances a

00:11:15,180 --> 00:11:20,640
list of best practices or a set of rules

00:11:18,170 --> 00:11:24,050
pulled together into a style guide can

00:11:20,640 --> 00:11:27,720
be really helpful for beginners and so

00:11:24,050 --> 00:11:29,490
that's a lot of I think what the book is

00:11:27,720 --> 00:11:33,120
about going start putting together a

00:11:29,490 --> 00:11:35,280
list of best practices it'll help people

00:11:33,120 --> 00:11:36,900
you know start the conversation if they

00:11:35,280 --> 00:11:39,150
have the experience to have that but for

00:11:36,900 --> 00:11:42,060
beginners it tells them where to start

00:11:39,150 --> 00:11:45,120
and how to avoid some of the issues they

00:11:42,060 --> 00:11:48,710
don't even know they're going to have so

00:11:45,120 --> 00:11:51,660
I started looking at the style guide for

00:11:48,710 --> 00:11:54,000
forget hub github has a style guide up

00:11:51,660 --> 00:11:54,750
for Ruby and I just picked a few

00:11:54,000 --> 00:11:57,720
examples

00:11:54,750 --> 00:11:59,940
I like for various reasons now this

00:11:57,720 --> 00:12:03,360
example you can see that the difference

00:11:59,940 --> 00:12:06,660
is just if condition dan vs if condition

00:12:03,360 --> 00:12:09,900
and in the body and this isn't a major

00:12:06,660 --> 00:12:11,250
thing but if you've listened to I keep

00:12:09,900 --> 00:12:15,480
talking about Katrina but she gave a

00:12:11,250 --> 00:12:18,030
talk a while ago about refactoring and

00:12:15,480 --> 00:12:21,060
she mentioned code junk and in this case

00:12:18,030 --> 00:12:22,770
the then doesn't mean anything it was a

00:12:21,060 --> 00:12:25,170
do only thing it doesn't add anything to

00:12:22,770 --> 00:12:27,660
the conversations just clutter and so

00:12:25,170 --> 00:12:30,120
some of the best practices are simply

00:12:27,660 --> 00:12:31,740
about readability about focusing on

00:12:30,120 --> 00:12:34,170
what's important and you're probably

00:12:31,740 --> 00:12:36,420
going to hear a lot of that as you ask

00:12:34,170 --> 00:12:37,890
questions and my book and talk to us and

00:12:36,420 --> 00:12:44,940
hear us talk about these things on the

00:12:37,890 --> 00:12:47,940
show some other ideas out there such as

00:12:44,940 --> 00:12:50,670
and I'm not going to go into the y on a

00:12:47,940 --> 00:12:53,100
lot of these but feeling full control

00:12:50,670 --> 00:12:55,230
with exceptions how many of you have

00:12:53,100 --> 00:12:58,290
done something like the top example

00:12:55,230 --> 00:13:03,210
where you rest it's an exception really

00:12:58,290 --> 00:13:04,860
what it was was a fancy else so I think

00:13:03,210 --> 00:13:07,980
if I made that mistake I've done it

00:13:04,860 --> 00:13:09,870
other people have done it it ghetto it's

00:13:07,980 --> 00:13:12,420
my favorite is where you do a rescue and

00:13:09,870 --> 00:13:15,300
then return nil so you have rescue mill

00:13:12,420 --> 00:13:16,950
at the end of the line it is full

00:13:15,300 --> 00:13:20,310
control because you're you're saying

00:13:16,950 --> 00:13:23,760
that you don't care that something bad

00:13:20,310 --> 00:13:25,770
happened but you know get it so it'll

00:13:23,760 --> 00:13:27,870
soon as these troubles and if you give

00:13:25,770 --> 00:13:29,400
it a style guide like this then they

00:13:27,870 --> 00:13:30,780
make this mistake they'll just do it

00:13:29,400 --> 00:13:32,790
that way because you told them to and

00:13:30,780 --> 00:13:34,830
then as they move ahead then they can

00:13:32,790 --> 00:13:38,610
start to build context around why they

00:13:34,830 --> 00:13:40,589
should or shouldn't do something the

00:13:38,610 --> 00:13:42,510
single quote double quote how many of

00:13:40,589 --> 00:13:47,150
you've had that debate that's one of my

00:13:42,510 --> 00:13:49,380
favorites yeah well as it was on parle

00:13:47,150 --> 00:13:53,250
you can go look at the benchmarks it

00:13:49,380 --> 00:13:55,710
doesn't make any difference but anyway

00:13:53,250 --> 00:13:58,080
so you know github recommendation is to

00:13:55,710 --> 00:14:00,270
use double quotes because there's no

00:13:58,080 --> 00:14:04,290
penalty for using double quotes for a

00:14:00,270 --> 00:14:05,760
string and those are all of my examples

00:14:04,290 --> 00:14:07,560
but the whole

00:14:05,760 --> 00:14:08,910
idea is is that you can avoid some of

00:14:07,560 --> 00:14:10,350
these issues you can make sure people

00:14:08,910 --> 00:14:13,590
are doing the right things at least to

00:14:10,350 --> 00:14:15,240
start with by giving them a set of rules

00:14:13,590 --> 00:14:17,100
to follow and then as they gain

00:14:15,240 --> 00:14:19,260
experience as they move up that Dreyfus

00:14:17,100 --> 00:14:20,850
scale then they can start to use that

00:14:19,260 --> 00:14:22,950
experience and knowledge to actually

00:14:20,850 --> 00:14:24,180
make their own best practices and choose

00:14:22,950 --> 00:14:48,810
the things that they should be doing and

00:14:24,180 --> 00:14:52,260
that's that's all I have so it's just

00:14:48,810 --> 00:14:54,090
over this talk and ended up throwing

00:14:52,260 --> 00:14:57,360
everything out last night because I had

00:14:54,090 --> 00:15:02,040
this huge epiphany that I oh that's not

00:14:57,360 --> 00:15:04,320
good okay we're not doing with slides

00:15:02,040 --> 00:15:11,610
because the disk appears to have

00:15:04,320 --> 00:15:12,690
corrupted them awesome so I have a code

00:15:11,610 --> 00:15:14,720
examples and I have three minutes to

00:15:12,690 --> 00:15:16,920
give them and I was joking about how

00:15:14,720 --> 00:15:18,570
they needed to be so simple that i could

00:15:16,920 --> 00:15:20,100
give them without needing slides if i

00:15:18,570 --> 00:15:24,300
wanna do this in three minutes so all

00:15:20,100 --> 00:15:26,970
right broken slide deck rock okay so um

00:15:24,300 --> 00:15:29,190
I wanted to do on talk about patterns

00:15:26,970 --> 00:15:33,470
and why I patterns and when you should

00:15:29,190 --> 00:15:37,020
and wherefore and what I realized was I

00:15:33,470 --> 00:15:38,340
wanted to talk about a cognitive load

00:15:37,020 --> 00:15:39,660
which the amount of crap you have to

00:15:38,340 --> 00:15:41,820
keep in your head when you're trying to

00:15:39,660 --> 00:15:44,190
debug code and work and understand stuff

00:15:41,820 --> 00:15:45,780
and then I realized well late last night

00:15:44,190 --> 00:15:46,950
well what I want to do is just come up

00:15:45,780 --> 00:15:50,180
here for three minutes inches beg you

00:15:46,950 --> 00:15:50,180
please write readable code

00:15:54,430 --> 00:15:59,980
the first example I have is is an array

00:15:56,800 --> 00:16:01,660
1 2 1 2 3 dot inject colon plus right

00:15:59,980 --> 00:16:02,860
this is rubys method if you've got a

00:16:01,660 --> 00:16:05,680
functional programming background this

00:16:02,860 --> 00:16:08,500
is reduce or if you're from Haskell this

00:16:05,680 --> 00:16:10,029
is fold and be four from Ruby this is

00:16:08,500 --> 00:16:12,700
going to add up all these things by

00:16:10,029 --> 00:16:15,010
injecting the plus things well from a

00:16:12,700 --> 00:16:17,200
functional standpoint and talk about

00:16:15,010 --> 00:16:19,510
primitives that's great but from an oo

00:16:17,200 --> 00:16:22,000
standpoint what I really want to do is

00:16:19,510 --> 00:16:23,649
ask this array please mr. array I love

00:16:22,000 --> 00:16:26,350
that phrase from sandy please can show

00:16:23,649 --> 00:16:28,690
what is the sum of your elements so I

00:16:26,350 --> 00:16:31,149
want to say I got some and so I would

00:16:28,690 --> 00:16:33,760
like that in code and the problem is

00:16:31,149 --> 00:16:35,770
that it well the great thing is if

00:16:33,760 --> 00:16:37,720
you're new to Ruby you look at one two

00:16:35,770 --> 00:16:40,120
three dots imma go hat should be six and

00:16:37,720 --> 00:16:42,279
if you were the problem is if you're

00:16:40,120 --> 00:16:44,370
advanced it Ruby you will go wait a

00:16:42,279 --> 00:16:48,700
minute there is no some method on array

00:16:44,370 --> 00:16:51,040
where how I debug this and you can get

00:16:48,700 --> 00:16:52,630
in a big arguing about what is this

00:16:51,040 --> 00:16:54,820
valid and this is a monkey patch I've

00:16:52,630 --> 00:16:58,149
I've inserted the Sun method into array

00:16:54,820 --> 00:17:00,730
guess what it's self dot inject plus if

00:16:58,149 --> 00:17:03,250
you work with me you know that you know

00:17:00,730 --> 00:17:05,140
that you can go to live patches array

00:17:03,250 --> 00:17:06,790
actually in this case a new mobile in

00:17:05,140 --> 00:17:09,160
darby and that's where you're going to

00:17:06,790 --> 00:17:10,449
find the in patch but if you don't know

00:17:09,160 --> 00:17:12,970
this you might go to innumerable so

00:17:10,449 --> 00:17:15,280
cognitive load where do we make things

00:17:12,970 --> 00:17:16,390
more readable and so it's a discussion

00:17:15,280 --> 00:17:19,179
it's and what I'm saying is it's a

00:17:16,390 --> 00:17:25,059
trade-off it's always a trade-off how

00:17:19,179 --> 00:17:27,610
about that except for when it's not the

00:17:25,059 --> 00:17:31,450
second example that I had was I wrote

00:17:27,610 --> 00:17:32,740
this a quick little bit of code suddenly

00:17:31,450 --> 00:17:35,320
this sandwich and it was like you know

00:17:32,740 --> 00:17:37,059
if sandwich has bred do this thing if

00:17:35,320 --> 00:17:39,400
sandwich has mayo do this thing if

00:17:37,059 --> 00:17:40,360
vending machine includes sandwich wait a

00:17:39,400 --> 00:17:42,010
minute I was having a lovely

00:17:40,360 --> 00:17:44,160
conversation with the sandwich and now I

00:17:42,010 --> 00:17:46,330
have to talk to the vending machine so

00:17:44,160 --> 00:17:49,240
there's another monkey patch that I love

00:17:46,330 --> 00:17:51,340
to write which is object in ? collection

00:17:49,240 --> 00:17:54,490
and it just as collection include me

00:17:51,340 --> 00:17:55,780
will sell right and again an entry-level

00:17:54,490 --> 00:17:57,640
witness will way through this and go

00:17:55,780 --> 00:18:00,190
sandwich in vending machine that's

00:17:57,640 --> 00:18:01,540
really clear makes total sense but boy

00:18:00,190 --> 00:18:02,800
out if you don't know what it does and

00:18:01,540 --> 00:18:04,999
you're trying to debug it and you try to

00:18:02,800 --> 00:18:06,829
go to ruby lane or Ruby doctor

00:18:04,999 --> 00:18:09,289
or you're not going to find this method

00:18:06,829 --> 00:18:10,429
so there's cognitive load and you have

00:18:09,289 --> 00:18:13,039
to have this discussion with your

00:18:10,429 --> 00:18:15,049
teammates you have to kind of know you

00:18:13,039 --> 00:18:18,019
know where this stuff is coming from for

00:18:15,049 --> 00:18:21,249
this to work this is great that I don't

00:18:18,019 --> 00:18:23,989
have a slide for this the last example

00:18:21,249 --> 00:18:25,699
you want to make intention revealing

00:18:23,989 --> 00:18:30,469
names but this can go horribly horribly

00:18:25,699 --> 00:18:32,449
wrong and one method we had users and

00:18:30,469 --> 00:18:33,979
groups groups have muses to send a

00:18:32,449 --> 00:18:37,009
message to people that are in your

00:18:33,979 --> 00:18:38,449
groups it's you can imagine the code

00:18:37,009 --> 00:18:41,839
user that group top members map

00:18:38,449 --> 00:18:44,179
flattened unique right so I had coworker

00:18:41,839 --> 00:18:47,059
who wrote the method user about all

00:18:44,179 --> 00:18:49,459
users in groups this user is a member of

00:18:47,059 --> 00:18:52,279
I just want to point out that if your

00:18:49,459 --> 00:18:54,469
method name has a dependent clause you

00:18:52,279 --> 00:18:56,659
are revealing your intent to violate the

00:18:54,469 --> 00:18:59,029
law of Demeter so it is my intention

00:18:56,659 --> 00:19:04,039
Vivian or josh said it's self

00:18:59,029 --> 00:19:05,209
incriminating everything's a trade-off I

00:19:04,039 --> 00:19:07,249
argued that this should be renamed to

00:19:05,209 --> 00:19:09,559
pierce I lost the argument user dot

00:19:07,249 --> 00:19:11,329
peers lost because that was not a domain

00:19:09,559 --> 00:19:13,969
name in our project on our designers are

00:19:11,329 --> 00:19:15,169
like what our peers and so it actually

00:19:13,969 --> 00:19:17,149
would have increased cognitive load

00:19:15,169 --> 00:19:18,829
across everything so everything is

00:19:17,149 --> 00:19:20,179
always a trade-off think about that

00:19:18,829 --> 00:19:22,629
trade-off please please please write

00:19:20,179 --> 00:19:22,629
readable code

00:19:46,110 --> 00:19:54,000
hi so best practices we've been talking

00:19:51,070 --> 00:19:57,340
about style is a big part of that and

00:19:54,000 --> 00:20:00,100
encode style and in any conversation

00:19:57,340 --> 00:20:04,120
about code style where'd my notes go

00:20:00,100 --> 00:20:12,490
remove them somebody always plays the

00:20:04,120 --> 00:20:16,240
aesthetics card right and what happens

00:20:12,490 --> 00:20:20,679
in your life okay oh I know you have my

00:20:16,240 --> 00:20:25,300
slides I want my notes so great got him

00:20:20,679 --> 00:20:27,610
so people you know aesthetic so what are

00:20:25,300 --> 00:20:31,540
aesthetics which is the button I could

00:20:27,610 --> 00:20:34,870
push the big one it's on the right Hey

00:20:31,540 --> 00:20:39,790
okay so aesthetics are something it's a

00:20:34,870 --> 00:20:42,190
sense of beauty or the appreciation of

00:20:39,790 --> 00:20:45,330
beauty I should have my slides here so I

00:20:42,190 --> 00:20:49,929
can see what's going on I guess and the

00:20:45,330 --> 00:20:54,460
so it but it's not just something that's

00:20:49,929 --> 00:20:57,240
a sense of something it's also a set of

00:20:54,460 --> 00:20:59,500
principles that underlie and guide

00:20:57,240 --> 00:21:01,150
either the work of an artist or an

00:20:59,500 --> 00:21:06,880
artistic movement or in our case the

00:21:01,150 --> 00:21:08,170
style of code but what that doesn't mean

00:21:06,880 --> 00:21:11,980
is that you look at code and you say oh

00:21:08,170 --> 00:21:13,510
it just looks better because you know

00:21:11,980 --> 00:21:16,059
now you're comparing a set of principles

00:21:13,510 --> 00:21:21,160
to evaluate something with your gut feel

00:21:16,059 --> 00:21:24,220
and a gut feel that develops over years

00:21:21,160 --> 00:21:25,870
or decades of experience you can you

00:21:24,220 --> 00:21:28,750
know someone who's that experience can

00:21:25,870 --> 00:21:32,320
look at something and know intuitively

00:21:28,750 --> 00:21:34,030
oh that's bad code or that's good code

00:21:32,320 --> 00:21:37,300
because they have all this experience to

00:21:34,030 --> 00:21:39,820
draw on but for someone who doesn't have

00:21:37,300 --> 00:21:43,600
that kind of experience a gut feel is

00:21:39,820 --> 00:21:45,190
often misleading and you know it can be

00:21:43,600 --> 00:21:46,690
it can be something that you've

00:21:45,190 --> 00:21:48,280
transferred from experience in another

00:21:46,690 --> 00:21:51,100
language that works somewhat differently

00:21:48,280 --> 00:21:55,140
or it could just be the result of

00:21:51,100 --> 00:21:57,440
inexperienced or even lazy thinking

00:21:55,140 --> 00:21:59,850
so I think that when somebody play's the

00:21:57,440 --> 00:22:01,380
aesthetics card and says I think that

00:21:59,850 --> 00:22:03,030
code just looks better I like the way it

00:22:01,380 --> 00:22:05,280
looks it's more pleasing to me it's more

00:22:03,030 --> 00:22:07,710
beautiful but they can't back that up

00:22:05,280 --> 00:22:12,860
with an actual rational evidence-based

00:22:07,710 --> 00:22:15,270
justification for why it's better then I

00:22:12,860 --> 00:22:17,490
think that that's a compound I think

00:22:15,270 --> 00:22:19,230
that that that's an excuse for not

00:22:17,490 --> 00:22:20,790
really doing your homework to understand

00:22:19,230 --> 00:22:25,290
why your code is doing what it's doing

00:22:20,790 --> 00:22:27,090
and why you're writing it that way so

00:22:25,290 --> 00:22:29,820
let's talk about let's get concrete a

00:22:27,090 --> 00:22:33,900
bit in rubin libby on rails the core

00:22:29,820 --> 00:22:35,730
team has a style preference to prefer

00:22:33,900 --> 00:22:38,490
symbols to string so in any case in

00:22:35,730 --> 00:22:41,940
almost all cases in the API were where

00:22:38,490 --> 00:22:43,470
it's a huge set of cases you can use

00:22:41,940 --> 00:22:45,240
symbols and strings interchangeably

00:22:43,470 --> 00:22:47,130
because they just send to s2 whatever

00:22:45,240 --> 00:22:49,260
you pass in and a spent symbol works

00:22:47,130 --> 00:22:52,320
just as well as a string and that can be

00:22:49,260 --> 00:22:54,570
really convenient in places so I can see

00:22:52,320 --> 00:22:56,640
there might be an argument for ok we

00:22:54,570 --> 00:22:59,250
have a string a symbol looks a little

00:22:56,640 --> 00:23:01,410
better to some people maybe you know

00:22:59,250 --> 00:23:03,660
it's one fewer carrot stands out a

00:23:01,410 --> 00:23:07,020
little bit in a different way but that

00:23:03,660 --> 00:23:09,540
can go wrong so here's a here's a

00:23:07,020 --> 00:23:12,900
migration from rails and this is the

00:23:09,540 --> 00:23:14,580
standard way that that the rails core

00:23:12,900 --> 00:23:17,460
team prefers migrations to be written

00:23:14,580 --> 00:23:20,160
the generators work that way the scheme

00:23:17,460 --> 00:23:21,960
in our schema dump task unfortunately

00:23:20,160 --> 00:23:24,000
still use strings so it's not consistent

00:23:21,960 --> 00:23:26,970
and that got me in trouble and a bit of

00:23:24,000 --> 00:23:30,510
an argument recently but this is how I

00:23:26,970 --> 00:23:32,070
prefer it with strings and I prefer it

00:23:30,510 --> 00:23:35,040
this way because you can actually tell

00:23:32,070 --> 00:23:36,690
that the strings have a different role

00:23:35,040 --> 00:23:39,330
than the symbols the symbols are the

00:23:36,690 --> 00:23:42,210
names of options that you pass to the to

00:23:39,330 --> 00:23:45,840
the type methods whereas the strings are

00:23:42,210 --> 00:23:48,360
the names of the of the things and those

00:23:45,840 --> 00:23:50,340
strings don't actually mean anything to

00:23:48,360 --> 00:23:54,060
the Ruby code all they are is something

00:23:50,340 --> 00:23:56,190
that you pass to the SQL DD DD l and

00:23:54,060 --> 00:23:58,200
tells the database what to name the

00:23:56,190 --> 00:24:01,440
column you never actually care how that

00:23:58,200 --> 00:24:03,540
thing is spelled within the Ruby code so

00:24:01,440 --> 00:24:05,100
it says okay great you know I don't have

00:24:03,540 --> 00:24:06,240
to compare these things the identity is

00:24:05,100 --> 00:24:07,230
not that important it's just a

00:24:06,240 --> 00:24:10,040
pass-through

00:24:07,230 --> 00:24:15,260
so I actually have some rational

00:24:10,040 --> 00:24:17,669
reasoning behind that dip there's also

00:24:15,260 --> 00:24:19,890
places where that can get that style of

00:24:17,669 --> 00:24:21,929
not distinguishing between symbols and

00:24:19,890 --> 00:24:23,880
strings can get you in trouble so

00:24:21,929 --> 00:24:27,600
everybody anywhere else plug numbers

00:24:23,880 --> 00:24:30,630
here know what this does right how about

00:24:27,600 --> 00:24:32,580
this if you've been using rails for a

00:24:30,630 --> 00:24:33,990
while you've been trained to think that

00:24:32,580 --> 00:24:39,780
symbols and strings are interchangeable

00:24:33,990 --> 00:24:43,500
but when you use a symbol it's telling

00:24:39,780 --> 00:24:46,049
rails Oh call that method on me send

00:24:43,500 --> 00:24:48,230
that message to me and then the result

00:24:46,049 --> 00:24:51,809
of that method is what's used as the

00:24:48,230 --> 00:24:56,040
layout name so this is it this is an

00:24:51,809 --> 00:24:57,330
instance where the style can actually

00:24:56,040 --> 00:25:00,179
get you in trouble because it's not well

00:24:57,330 --> 00:25:02,270
reasoned out so that's all I got thank

00:25:00,179 --> 00:25:02,270
you

00:25:24,330 --> 00:25:26,929
what

00:25:28,060 --> 00:25:35,690
okay hello so um if if you have followed

00:25:33,380 --> 00:25:38,180
my blog at all you probably know that I

00:25:35,690 --> 00:25:40,250
get a kick out of clever solutions for

00:25:38,180 --> 00:25:41,720
things kind of a hobby of mine finding

00:25:40,250 --> 00:25:43,880
clever things to do with Ruby so I

00:25:41,720 --> 00:25:45,770
thought that my little addition to this

00:25:43,880 --> 00:25:50,210
would be talking about when it's not

00:25:45,770 --> 00:25:53,300
such a good idea to be clever a quick

00:25:50,210 --> 00:25:57,130
pop quiz this this code here uses

00:25:53,300 --> 00:26:00,920
standard libraries only what does the

00:25:57,130 --> 00:26:07,970
what does the true argument mean to

00:26:00,920 --> 00:26:10,760
transaction so um if you if you're like

00:26:07,970 --> 00:26:14,080
me and you use P store all the time you

00:26:10,760 --> 00:26:17,030
know that true their means read-only

00:26:14,080 --> 00:26:19,070
except actually that's not unlike every

00:26:17,030 --> 00:26:23,900
single time I use that method I have to

00:26:19,070 --> 00:26:25,790
look it up okay pop quiz number two

00:26:23,900 --> 00:26:28,880
here's something similar in this case

00:26:25,790 --> 00:26:32,240
what does the false pass to instance

00:26:28,880 --> 00:26:34,880
methods mean in this case it means don't

00:26:32,240 --> 00:26:37,310
include the super class methods again I

00:26:34,880 --> 00:26:40,700
have to look it up every single time and

00:26:37,310 --> 00:26:43,790
great baby has so clearly this is this

00:26:40,700 --> 00:26:46,840
is a style problem because those

00:26:43,790 --> 00:26:51,080
bullion's are meaningless to the reader

00:26:46,840 --> 00:26:52,190
um there's a solution to this there's an

00:26:51,080 --> 00:26:53,450
approach to this that I've seen

00:26:52,190 --> 00:26:55,060
suggested by a number of people

00:26:53,450 --> 00:26:58,130
including some of my fellow panelists

00:26:55,060 --> 00:26:59,450
which says which it's it's it's an

00:26:58,130 --> 00:27:03,890
interesting solution that says well

00:26:59,450 --> 00:27:08,030
symbols are truthy right so rather than

00:27:03,890 --> 00:27:11,510
passing a literal true to that method we

00:27:08,030 --> 00:27:12,950
could just pass a symbol to stand in for

00:27:11,510 --> 00:27:15,400
that true value and we could give that

00:27:12,950 --> 00:27:20,990
symbol nice readable name like read-only

00:27:15,400 --> 00:27:23,570
um clever right this is a really clever

00:27:20,990 --> 00:27:27,440
solution um but unfortunately there are

00:27:23,570 --> 00:27:29,960
some drawbacks to this approach first of

00:27:27,440 --> 00:27:31,550
all uh if I didn't know anything about p

00:27:29,960 --> 00:27:33,950
store and I came to this code for the

00:27:31,550 --> 00:27:36,200
first time I might look at that and I

00:27:33,950 --> 00:27:37,950
would think oh that's interesting that

00:27:36,200 --> 00:27:40,080
must read only must be us

00:27:37,950 --> 00:27:41,880
flag to that method that you know that

00:27:40,080 --> 00:27:44,039
method understands a read-only flag so I

00:27:41,880 --> 00:27:45,480
might want to know more about that to

00:27:44,039 --> 00:27:47,580
find out what else I could pass in there

00:27:45,480 --> 00:27:49,260
and i might go searching through the

00:27:47,580 --> 00:27:52,110
documents or through the code for that

00:27:49,260 --> 00:27:57,809
string you know colon read-only and i

00:27:52,110 --> 00:28:00,720
come to a dead end because it's actually

00:27:57,809 --> 00:28:02,460
not part of the API i could just as well

00:28:00,720 --> 00:28:04,740
as past chunky bacon in there and it

00:28:02,460 --> 00:28:06,480
would have would work the same way so

00:28:04,740 --> 00:28:11,460
it's it's suggesting an API that

00:28:06,480 --> 00:28:12,929
actually isn't there another little

00:28:11,460 --> 00:28:15,299
problem with it at least in my opinion

00:28:12,929 --> 00:28:17,309
is when we get to the negative case so

00:28:15,299 --> 00:28:19,679
here's that instance methods where we

00:28:17,309 --> 00:28:22,950
want to pass false in and in this case

00:28:19,679 --> 00:28:24,960
there's no false version of a symbol and

00:28:22,950 --> 00:28:27,090
so to sort of simulate that we have to

00:28:24,960 --> 00:28:29,399
negate a symbol and I don't know about

00:28:27,090 --> 00:28:32,549
you but I'm not a fan of this dollar

00:28:29,399 --> 00:28:34,200
colon business or not a bank hole in

00:28:32,549 --> 00:28:37,860
business it's it's just not that

00:28:34,200 --> 00:28:40,169
readable to me so so there are some some

00:28:37,860 --> 00:28:42,720
drawbacks to this clever solution so I

00:28:40,169 --> 00:28:47,070
want I want to suggest to you that that

00:28:42,720 --> 00:28:49,769
that the clever solution not always the

00:28:47,070 --> 00:28:52,409
best solution on I want to show you an

00:28:49,769 --> 00:28:54,059
alternative here now this is very

00:28:52,409 --> 00:28:57,139
technical code so I'm going to walk you

00:28:54,059 --> 00:28:57,139
through it one line at a time

00:28:57,610 --> 00:29:02,830
on the first line I assign a variable

00:29:00,460 --> 00:29:05,410
with a meaningful name called read-only

00:29:02,830 --> 00:29:07,360
and I assign it the value true and then

00:29:05,410 --> 00:29:13,179
on the next line I passed that variable

00:29:07,360 --> 00:29:16,110
end wait can you go to leveling if you

00:29:13,179 --> 00:29:20,260
can get that I can go through it again

00:29:16,110 --> 00:29:21,730
so here it is the same technique in case

00:29:20,260 --> 00:29:24,160
you can catch that applied to the other

00:29:21,730 --> 00:29:26,260
method call this time I assign the false

00:29:24,160 --> 00:29:28,780
value to a variable with a meaningful

00:29:26,260 --> 00:29:33,520
name and then I pass that variable in as

00:29:28,780 --> 00:29:37,630
the argument so um okay it's an extra

00:29:33,520 --> 00:29:39,309
line of code but I feel like this is

00:29:37,630 --> 00:29:41,559
probably a better solution even though

00:29:39,309 --> 00:29:45,429
it isn't as clever now we can take this

00:29:41,559 --> 00:29:48,130
a little bit further um because it you

00:29:45,429 --> 00:29:49,660
can actually do an inline assignment

00:29:48,130 --> 00:29:52,450
within that method call so actually

00:29:49,660 --> 00:29:54,190
assigning the variable and and you then

00:29:52,450 --> 00:29:57,880
using the value right there inside the

00:29:54,190 --> 00:30:03,130
method called uh but I think you know

00:29:57,880 --> 00:30:05,679
what I'm gonna say next don't get clever

00:30:03,130 --> 00:30:06,940
I've actually watched programmers look

00:30:05,679 --> 00:30:09,160
at code like this or write code like

00:30:06,940 --> 00:30:11,080
this the thing is this looks like a kind

00:30:09,160 --> 00:30:12,280
of like a keyword argument and I've

00:30:11,080 --> 00:30:13,660
watched programmers look at this and

00:30:12,280 --> 00:30:15,250
think that they were using keyword

00:30:13,660 --> 00:30:17,530
arguments even in versions of Ruby that

00:30:15,250 --> 00:30:19,929
didn't have fewer arguments um you know

00:30:17,530 --> 00:30:22,059
they were Newton language and they so

00:30:19,929 --> 00:30:23,350
they had false expectations about the

00:30:22,059 --> 00:30:24,910
code they were writing and it would was

00:30:23,350 --> 00:30:26,950
working by accident and then when they

00:30:24,910 --> 00:30:29,919
tried to change it it didn't behave the

00:30:26,950 --> 00:30:32,020
way they expected so uh yeah don't get

00:30:29,919 --> 00:30:34,870
clever um sometimes the simplest

00:30:32,020 --> 00:30:35,950
solution is the best solution and this

00:30:34,870 --> 00:30:38,500
is the one time i'm going to plug my

00:30:35,950 --> 00:30:40,480
stuff while i'm here if you're not

00:30:38,500 --> 00:30:41,890
already solve a subscriber and you wanna

00:30:40,480 --> 00:30:44,760
get a month free there's a few RL you

00:30:41,890 --> 00:30:44,760
can go to thank you very much

00:30:49,640 --> 00:30:55,890
we talked about the actual problem there

00:30:52,620 --> 00:30:59,100
if you define a method it takes one true

00:30:55,890 --> 00:31:01,980
false flag we will send David Brady to

00:30:59,100 --> 00:31:06,960
the house I will sing Christmas carols

00:31:01,980 --> 00:31:09,750
out here actually I don't know why you

00:31:06,960 --> 00:31:12,720
didn't reopen the read-only another we

00:31:09,750 --> 00:31:16,350
have the include super single and have

00:31:12,720 --> 00:31:18,240
it return nil three true so do you could

00:31:16,350 --> 00:31:20,700
just say include renal and it would be

00:31:18,240 --> 00:31:22,800
false it would be fussy you can't make

00:31:20,700 --> 00:31:27,360
make arbitrary objects full scene Ruby

00:31:22,800 --> 00:31:29,460
can't be done everyone oh yeah oh wait

00:31:27,360 --> 00:31:32,280
quick note that whole problem is caused

00:31:29,460 --> 00:31:36,210
by by api's where a keyword argument

00:31:32,280 --> 00:31:39,030
would be better but you know okay swing

00:31:36,210 --> 00:31:42,680
take some questions cuz we have lots of

00:31:39,030 --> 00:31:50,690
people here so we went to talk to you

00:31:42,680 --> 00:31:50,690
question time bring one good ones yes

00:32:00,340 --> 00:32:10,940
I'm a judge in many ways it sounds like

00:32:09,440 --> 00:32:13,159
the book that you're planning to write

00:32:10,940 --> 00:32:14,480
there's some there's some overlap in the

00:32:13,159 --> 00:32:17,059
conceptualization of the book that

00:32:14,480 --> 00:32:20,080
you're talking about writing or at least

00:32:17,059 --> 00:32:23,780
surface there seems and a book like

00:32:20,080 --> 00:32:24,980
eloquent Ruby or or other books that you

00:32:23,780 --> 00:32:28,700
kind of intend to sort of teach

00:32:24,980 --> 00:32:30,970
beginners the usual patterns how's your

00:32:28,700 --> 00:32:33,530
book going to be different we actually

00:32:30,970 --> 00:32:35,570
figured maybe we could just take

00:32:33,530 --> 00:32:39,350
confident ribby change the name and put

00:32:35,570 --> 00:32:40,820
all our names at the body I was honestly

00:32:39,350 --> 00:32:44,870
hoping for a cage match with Russ

00:32:40,820 --> 00:32:47,360
because I think I could take him fastest

00:32:44,870 --> 00:32:50,230
thanks this best I should actually have

00:32:47,360 --> 00:32:53,210
a serious answer this and that's that

00:32:50,230 --> 00:32:55,880
there's there's the things that you that

00:32:53,210 --> 00:32:59,360
you read and learn when you're leveling

00:32:55,880 --> 00:33:01,580
up to master the language and those and

00:32:59,360 --> 00:33:03,710
those kind of things change as you get

00:33:01,580 --> 00:33:05,809
better right the the kind of things that

00:33:03,710 --> 00:33:07,460
you that you do is you're as you're when

00:33:05,809 --> 00:33:08,720
you're beginner you start doing

00:33:07,460 --> 00:33:11,570
different things as you could become

00:33:08,720 --> 00:33:13,370
more proficient the things that in the

00:33:11,570 --> 00:33:15,799
in chem textbook smells like best

00:33:13,370 --> 00:33:18,020
practice patterns those are things that

00:33:15,799 --> 00:33:21,049
you do throughout your whole career and

00:33:18,020 --> 00:33:22,490
they're things that you do multiple

00:33:21,049 --> 00:33:26,570
times a day whenever you're working on

00:33:22,490 --> 00:33:28,760
code when I work on code I intention

00:33:26,570 --> 00:33:31,070
revealing message names intention

00:33:28,760 --> 00:33:32,539
revealing variables I will extract

00:33:31,070 --> 00:33:36,260
method objects as a refactoring

00:33:32,539 --> 00:33:39,260
technique those those patterns in Kent's

00:33:36,260 --> 00:33:41,299
book are you know might in my opinion

00:33:39,260 --> 00:33:42,590
their eternal it's like I will use them

00:33:41,299 --> 00:33:45,140
throughout my entire career of

00:33:42,590 --> 00:33:48,049
object-oriented programming and you know

00:33:45,140 --> 00:33:51,919
Russ's book is a good book I like it and

00:33:48,049 --> 00:33:54,350
but it it I think it has a limited shelf

00:33:51,919 --> 00:33:56,890
life in terms of utility to me as a

00:33:54,350 --> 00:33:56,890
developer

00:33:58,110 --> 00:34:03,690
next one playing back right there

00:34:03,960 --> 00:34:14,080
doesn't like be hundred it's more for

00:34:11,710 --> 00:34:16,000
like a low shelf life and your career

00:34:14,080 --> 00:34:19,240
driven approach or by water will be

00:34:16,000 --> 00:34:21,700
specific version help if the value

00:34:19,240 --> 00:34:25,840
spelled out best practices that's really

00:34:21,700 --> 00:34:29,230
good question actually um so I know and

00:34:25,840 --> 00:34:31,900
it's not a talk to read smell talk best

00:34:29,230 --> 00:34:34,090
practice pens baby wails minute

00:34:31,900 --> 00:34:39,580
seriously one small talk to read that

00:34:34,090 --> 00:34:42,100
one book right and yeah okay yeah oh

00:34:39,580 --> 00:34:45,910
yeah it was I learned a lot and that is

00:34:42,100 --> 00:34:48,610
cool maybe even cool to have wine in

00:34:45,910 --> 00:34:50,950
Ruby not just because they said you were

00:34:48,610 --> 00:34:54,250
in the other language but it also gives

00:34:50,950 --> 00:34:57,490
us an opportunity to address Ruby isms

00:34:54,250 --> 00:35:00,040
they movie is not small targets closed

00:34:57,490 --> 00:35:02,020
in some ways you know and they're

00:35:00,040 --> 00:35:04,060
different in other ways like one of the

00:35:02,020 --> 00:35:05,500
things we've been looking at is we take

00:35:04,060 --> 00:35:08,470
the table of contents and move it over

00:35:05,500 --> 00:35:11,260
will be needs an entire section on its

00:35:08,470 --> 00:35:13,330
scripting capabilities which small-time

00:35:11,260 --> 00:35:16,120
doesn't even have right it's not doesn't

00:35:13,330 --> 00:35:18,130
work like that so it gives us an

00:35:16,120 --> 00:35:21,000
opportunity to address things that are

00:35:18,130 --> 00:35:21,000
specific to us

00:35:31,770 --> 00:35:36,670
so my question was actually a very good

00:35:34,690 --> 00:35:38,560
follow-up to what you just said about

00:35:36,670 --> 00:35:41,230
having sections in the book to address

00:35:38,560 --> 00:35:44,440
things that are unique to maybe I think

00:35:41,230 --> 00:35:47,020
a great idea bringing over that book to

00:35:44,440 --> 00:35:49,030
an audience for whom snow talk isn't

00:35:47,020 --> 00:35:51,580
really a option they have the time to

00:35:49,030 --> 00:35:53,260
learn to go through the other I'm in

00:35:51,580 --> 00:35:54,670
that group what I wanted to lead it but

00:35:53,260 --> 00:35:58,090
I did not have time to pick up on the

00:35:54,670 --> 00:36:00,250
language to do so I think it'd be great

00:35:58,090 --> 00:36:02,320
if in the new version of the book of

00:36:00,250 --> 00:36:05,050
working on you could include sections on

00:36:02,320 --> 00:36:07,210
using things like medical ramen in

00:36:05,050 --> 00:36:08,620
dynamic languages and skirts and dynamic

00:36:07,210 --> 00:36:10,660
languages and as you said you're trying

00:36:08,620 --> 00:36:12,010
to make it silly that's not just you

00:36:10,660 --> 00:36:13,660
know just what I need to do is a really

00:36:12,010 --> 00:36:14,860
developer but here's career things I

00:36:13,660 --> 00:36:17,710
think we're seeing a lot of languages

00:36:14,860 --> 00:36:19,930
pick up on a lot of these features and I

00:36:17,710 --> 00:36:22,090
think you know using these examples you

00:36:19,930 --> 00:36:24,190
know things work in every language or

00:36:22,090 --> 00:36:26,170
not and I think it'd be good to see

00:36:24,190 --> 00:36:28,210
examples of doing things like that there

00:36:26,170 --> 00:36:29,890
are practices that might not really have

00:36:28,210 --> 00:36:32,110
existed in that form back when the

00:36:29,890 --> 00:36:37,510
original book was written I guess it's

00:36:32,110 --> 00:36:39,370
not a question that's a comment but yeah

00:36:37,510 --> 00:36:45,130
we do have a section in the outline on

00:36:39,370 --> 00:36:47,560
meta programming so we agree so um I

00:36:45,130 --> 00:36:49,120
think I'd like to kind of point the

00:36:47,560 --> 00:36:51,850
conversation more towards just the

00:36:49,120 --> 00:36:54,040
general area of best practices best

00:36:51,850 --> 00:36:54,820
practice patterns rather than like the

00:36:54,040 --> 00:36:56,140
book that we're going to write because

00:36:54,820 --> 00:37:01,390
we can all you know discuss on partly

00:36:56,140 --> 00:37:03,700
and stuff like that uh yes there's a

00:37:01,390 --> 00:37:05,980
case where um if you might have a

00:37:03,700 --> 00:37:09,010
conflict between your two different

00:37:05,980 --> 00:37:13,320
ideas and allow the gentleman and what

00:37:09,010 --> 00:37:13,320
the Red Hat the cable guy

00:37:22,340 --> 00:37:25,900
signika brewers

00:37:29,750 --> 00:37:32,750


00:37:33,590 --> 00:37:43,880
we'll bring to the show and you know why

00:37:38,180 --> 00:37:50,840
people like to think you're playing my

00:37:43,880 --> 00:37:54,110
question so it's official this is an

00:37:50,840 --> 00:37:55,520
aggressive man it brings out point you

00:37:54,110 --> 00:37:59,870
know that there's probably never ever

00:37:55,520 --> 00:38:02,870
any good answer but your statement was

00:37:59,870 --> 00:38:06,440
with single quotes versus double quotes

00:38:02,870 --> 00:38:09,980
and I think some of the panelists

00:38:06,440 --> 00:38:16,720
following that were the point was is to

00:38:09,980 --> 00:38:19,010
write code to show your intent and I

00:38:16,720 --> 00:38:21,620
like to I've been following the theme

00:38:19,010 --> 00:38:24,710
lately to using single quotes when I

00:38:21,620 --> 00:38:29,420
don't do any interpolation so that's

00:38:24,710 --> 00:38:31,430
clear in my writing that it's not going

00:38:29,420 --> 00:38:38,090
to be interpolated and can't be

00:38:31,430 --> 00:38:41,060
interpolated so how how does that bounce

00:38:38,090 --> 00:38:44,330
off you so that there's a trade-off

00:38:41,060 --> 00:38:45,770
again you know that there is that

00:38:44,330 --> 00:38:48,350
intention you know the string can't be

00:38:45,770 --> 00:38:49,580
interpolated however if things change

00:38:48,350 --> 00:38:52,640
down the road and I do need to

00:38:49,580 --> 00:38:54,020
interpolate it's it's easier just to

00:38:52,640 --> 00:38:55,790
refactor something that already has

00:38:54,020 --> 00:38:59,210
double quotes i just added in and go

00:38:55,790 --> 00:39:01,040
ahead it's not a huge cost to change but

00:38:59,210 --> 00:39:02,930
at the same time there is still a little

00:39:01,040 --> 00:39:05,360
bit of trade-off the other thing that's

00:39:02,930 --> 00:39:07,460
interesting about style guides like the

00:39:05,360 --> 00:39:09,920
one that i was looking through is that

00:39:07,460 --> 00:39:12,080
it keeps things consistent and so if I'm

00:39:09,920 --> 00:39:14,570
looking for strings or if I am

00:39:12,080 --> 00:39:16,670
identifying strings I can identify them

00:39:14,570 --> 00:39:19,550
by the double quote and not have to

00:39:16,670 --> 00:39:20,840
worry about the single quote case and so

00:39:19,550 --> 00:39:22,570
that you know they're out of the

00:39:20,840 --> 00:39:25,490
trade-offs and it really just depends on

00:39:22,570 --> 00:39:28,369
what's important to you so here's

00:39:25,490 --> 00:39:31,279
specific example you say that

00:39:28,369 --> 00:39:34,309
a single quoted string reveals your

00:39:31,279 --> 00:39:36,529
intent by which hey it does and the

00:39:34,309 --> 00:39:39,380
train up is you've sacrificed some code

00:39:36,529 --> 00:39:41,420
malleability right if I need to use

00:39:39,380 --> 00:39:44,029
interpolation now I have to stop and

00:39:41,420 --> 00:39:45,289
switch the string to double quotes so

00:39:44,029 --> 00:39:47,630
that then I can include the

00:39:45,289 --> 00:39:49,670
interpolation yeah okay sees way you

00:39:47,630 --> 00:39:52,970
know that won't happen right you're

00:39:49,670 --> 00:39:55,039
pretty damn sure it's not gonna get

00:39:52,970 --> 00:39:56,990
interpolated so it made sense to make

00:39:55,039 --> 00:39:59,630
that trade-off so if you're asking me

00:39:56,990 --> 00:40:01,999
like how would I handle that case first

00:39:59,630 --> 00:40:05,470
I think it's wrong to say always use

00:40:01,999 --> 00:40:09,589
double quotes I think it's better to say

00:40:05,470 --> 00:40:11,630
usually use double quotes because and

00:40:09,589 --> 00:40:13,009
then if you give good evening then you

00:40:11,630 --> 00:40:14,690
can go through the reasoning and when

00:40:13,009 --> 00:40:18,319
you reach the point where because

00:40:14,690 --> 00:40:20,390
doesn't apply you know that then and I

00:40:18,319 --> 00:40:22,880
agree you know that I've done a lot of

00:40:20,390 --> 00:40:27,160
single quoting and have gone back to

00:40:22,880 --> 00:40:27,160
double quotes on the same material so

00:40:37,410 --> 00:40:43,089
the man who's gonna beat your tuna so um

00:40:41,140 --> 00:40:44,560
this is not about the book but it's

00:40:43,089 --> 00:40:48,069
going to sound a little bit like it I

00:40:44,560 --> 00:40:50,740
think all right so you guys you're not

00:40:48,069 --> 00:40:52,000
all the same person so I suspect that

00:40:50,740 --> 00:40:54,730
you're going to have differences of

00:40:52,000 --> 00:40:57,010
opinion and I suspect that you have

00:40:54,730 --> 00:41:00,010
already had discussions about how to

00:40:57,010 --> 00:41:02,980
resolve differences of opinion for style

00:41:00,010 --> 00:41:05,290
guides and I'm interested in how you can

00:41:02,980 --> 00:41:06,940
take that discussion whatever process

00:41:05,290 --> 00:41:09,250
you're already thinking about for

00:41:06,940 --> 00:41:10,990
resolving the differences and talk about

00:41:09,250 --> 00:41:12,490
how other people can apply them back in

00:41:10,990 --> 00:41:13,869
their offices for the teams that they

00:41:12,490 --> 00:41:16,210
work on to reserve their style

00:41:13,869 --> 00:41:22,690
differences will let you know how that

00:41:16,210 --> 00:41:25,990
goes first I think the first thing is to

00:41:22,690 --> 00:41:28,450
say that we know we have different

00:41:25,990 --> 00:41:31,720
opinions because we get into it all the

00:41:28,450 --> 00:41:34,270
time about it the interesting thing is

00:41:31,720 --> 00:41:35,770
to discuss the reasoning behind it this

00:41:34,270 --> 00:41:38,550
is what Josh was talking about it's not

00:41:35,770 --> 00:41:43,000
just a gut feeling we have our reasons I

00:41:38,550 --> 00:41:44,890
usually i seed in this group Abdi will

00:41:43,000 --> 00:41:46,599
always have like a really good reason

00:41:44,890 --> 00:41:49,060
that I hadn't thought about and I'll

00:41:46,599 --> 00:41:53,140
cede my like I'll just change my mind

00:41:49,060 --> 00:41:57,250
you know um and I can do that which is

00:41:53,140 --> 00:42:00,069
kind of cool right um we haven't had

00:41:57,250 --> 00:42:01,810
like discuss the strategy I mean maybe

00:42:00,069 --> 00:42:06,819
it's rock paper scissors I don't know my

00:42:01,810 --> 00:42:10,079
paper scissors lizard spock I like your

00:42:06,819 --> 00:42:10,079
strategy aw he's always right

00:42:13,590 --> 00:42:22,540
these slides could have also been titled

00:42:16,540 --> 00:42:23,980
why josh and James are stupid so I want

00:42:22,540 --> 00:42:26,620
to just add something to that and that

00:42:23,980 --> 00:42:28,660
is that we kind of alluded to it but

00:42:26,620 --> 00:42:30,370
we're going to talk deeply about it but

00:42:28,660 --> 00:42:34,360
there is also the conversation around

00:42:30,370 --> 00:42:37,690
context so sometimes the best practice

00:42:34,360 --> 00:42:42,460
isn't a global thing it doesn't always

00:42:37,690 --> 00:42:44,670
apply and so in some cases will disagree

00:42:42,460 --> 00:42:47,530
because we have a different experience

00:42:44,670 --> 00:42:49,150
due to a different context and so it's

00:42:47,530 --> 00:42:51,610
possible that we'll have conflicting

00:42:49,150 --> 00:42:53,350
best practices and little conflicting

00:42:51,610 --> 00:42:55,750
simply because under these circumstances

00:42:53,350 --> 00:42:57,400
you'll probably want to do a and others

00:42:55,750 --> 00:43:00,910
you want to do so there's always a

00:42:57,400 --> 00:43:04,090
constructive discussion over it applies

00:43:00,910 --> 00:43:06,550
how it applies and what our experience

00:43:04,090 --> 00:43:08,800
is but but everybody here is really good

00:43:06,550 --> 00:43:10,330
about explaining why and providing

00:43:08,800 --> 00:43:12,400
examples and things like that so the

00:43:10,330 --> 00:43:14,140
discussions will be very well reasoned

00:43:12,400 --> 00:43:16,210
and I'm really excited about having

00:43:14,140 --> 00:43:19,870
those conversations so I I think it's

00:43:16,210 --> 00:43:22,720
actually a feature not a bug if half of

00:43:19,870 --> 00:43:25,240
us disagree then is that really a good

00:43:22,720 --> 00:43:28,090
best practice you know what I mean if we

00:43:25,240 --> 00:43:31,420
if we want cause over and we can't bring

00:43:28,090 --> 00:43:33,280
the the others around and if we can then

00:43:31,420 --> 00:43:36,430
where's the better right if we made it

00:43:33,280 --> 00:43:40,210
my copy often does and and save the rest

00:43:36,430 --> 00:43:42,910
of us you know they agree if if not then

00:43:40,210 --> 00:43:45,640
maybe that's not a best practice or at

00:43:42,910 --> 00:43:47,830
the very least it's a signal that we

00:43:45,640 --> 00:43:51,430
need to show it both ways and explain

00:43:47,830 --> 00:43:53,500
the trader right yeah in the isthmus

00:43:51,430 --> 00:43:57,070
yeah you have to have good because it's

00:43:53,500 --> 00:43:58,390
not do this it's do this because the

00:43:57,070 --> 00:44:01,990
book would be real short without the

00:43:58,390 --> 00:44:04,680
explanations i feel so i wanna say well

00:44:01,990 --> 00:44:09,040
quick that the phrase best practice is a

00:44:04,680 --> 00:44:12,730
is a term of art in many professions and

00:44:09,040 --> 00:44:15,280
if you follow best practices if you're a

00:44:12,730 --> 00:44:19,770
lawyer or doctor or electrical engineer

00:44:15,280 --> 00:44:22,360
or a plumber you do these things then

00:44:19,770 --> 00:44:24,430
it's to some extent it shields you from

00:44:22,360 --> 00:44:26,230
liability you say i did the thing that

00:44:24,430 --> 00:44:29,560
everybody does and everybody accepts

00:44:26,230 --> 00:44:32,110
expects or accept as the proper thing to

00:44:29,560 --> 00:44:34,000
do and then if somebody Sue's you for

00:44:32,110 --> 00:44:36,040
malpractice you say but I was just doing

00:44:34,000 --> 00:44:39,160
the thing that my entire industry says

00:44:36,040 --> 00:44:42,730
we should be doing and and so that

00:44:39,160 --> 00:44:45,910
that's from you know that perspective so

00:44:42,730 --> 00:44:48,940
you know we have a I think it's harder

00:44:45,910 --> 00:44:50,380
to come up with that baseline in what we

00:44:48,940 --> 00:44:53,730
do in engineering because the problems

00:44:50,380 --> 00:44:57,220
we solve appear to be much more varied

00:44:53,730 --> 00:44:59,320
that so the whole point of best practice

00:44:57,220 --> 00:45:01,570
is i think it's a it's potentially a

00:44:59,320 --> 00:45:04,060
misnomer we're going with the name

00:45:01,570 --> 00:45:06,760
because there's some tradition there but

00:45:04,060 --> 00:45:08,200
it's not you know because it's a best

00:45:06,760 --> 00:45:14,230
practice doesn't mean it's the only

00:45:08,200 --> 00:45:16,480
practice okay yeah somebody i was

00:45:14,230 --> 00:45:18,340
talking to somebody yesterday forgive me

00:45:16,480 --> 00:45:20,320
i can't remember who i believe is one of

00:45:18,340 --> 00:45:24,670
the conference volunteers organizers

00:45:20,320 --> 00:45:26,620
about about the book and he he asked me

00:45:24,670 --> 00:45:28,480
are you going to just take all six year

00:45:26,620 --> 00:45:30,880
voices and just blend it into one

00:45:28,480 --> 00:45:32,470
homogenous thing because if you do

00:45:30,880 --> 00:45:36,850
please God I don't ever want to read

00:45:32,470 --> 00:45:40,000
that book and and I yeah there's gonna

00:45:36,850 --> 00:45:42,100
be a time when five of us stand against

00:45:40,000 --> 00:45:44,580
Josh and Josh kicked our butt right and

00:45:42,100 --> 00:45:46,470
then their ends up here's

00:45:44,580 --> 00:45:47,850
who's the best practice here's why we

00:45:46,470 --> 00:45:50,550
think it is and then there's a crazy

00:45:47,850 --> 00:45:53,280
little sidebar you know from Josh it's

00:45:50,550 --> 00:45:55,230
in his voice of you know the loan the

00:45:53,280 --> 00:45:56,610
loan you know pariah crying in the

00:45:55,230 --> 00:46:00,660
wilderness actually probably to be me in

00:45:56,610 --> 00:46:02,070
the sidebar mostly but but I mean if we

00:46:00,660 --> 00:46:04,500
create if we can create a book with six

00:46:02,070 --> 00:46:06,150
different voices in it and still have a

00:46:04,500 --> 00:46:11,340
coherent narrative I think we win

00:46:06,150 --> 00:46:13,200
everything we went all the things are

00:46:11,340 --> 00:46:15,330
you going to publish the discourse in

00:46:13,200 --> 00:46:17,600
github so we can fork early and often on

00:46:15,330 --> 00:46:19,890
that discourse or what's the mechanisms

00:46:17,600 --> 00:46:22,920
when discourse is an open source project

00:46:19,890 --> 00:46:25,680
so you can already for I can contribute

00:46:22,920 --> 00:46:29,250
to it so that the applica discourse

00:46:25,680 --> 00:46:31,980
application is open source the content

00:46:29,250 --> 00:46:33,810
is going to be private because it's you

00:46:31,980 --> 00:46:36,480
know we have a of the roads parlay list

00:46:33,810 --> 00:46:38,370
it's a are you familiar with the roads

00:46:36,480 --> 00:46:41,370
pilotless okay so so for those of you

00:46:38,370 --> 00:46:44,370
not familiar we last year we set up an

00:46:41,370 --> 00:46:47,310
email list so the listeners of the show

00:46:44,370 --> 00:46:49,350
how to had a way to to support the show

00:46:47,310 --> 00:46:52,020
production so you can pay anywhere from

00:46:49,350 --> 00:46:54,950
ten dollars a year to what how much

00:46:52,020 --> 00:46:57,360
what's the top rate fifty bucks a month

00:46:54,950 --> 00:46:59,850
and we've had a few people do that and

00:46:57,360 --> 00:47:03,270
then we maintain a militia and because

00:46:59,850 --> 00:47:05,670
you love you dearly ya head big it so

00:47:03,270 --> 00:47:07,500
it's a private email list it's very high

00:47:05,670 --> 00:47:09,750
signal-to-noise ratio a lot of good

00:47:07,500 --> 00:47:12,420
content all of the guests who come on

00:47:09,750 --> 00:47:14,220
the show get get instant membership to

00:47:12,420 --> 00:47:16,110
the list in many of them come under on

00:47:14,220 --> 00:47:18,290
the list and talk with us from Martin

00:47:16,110 --> 00:47:21,060
Fowler to Kent Beck yes immediately

00:47:18,290 --> 00:47:22,470
recently we did some episode and Martin

00:47:21,060 --> 00:47:26,760
family try and gained about all the

00:47:22,470 --> 00:47:29,740
things we got over which is awesome okay

00:47:26,760 --> 00:47:31,990
you can't be probably have no idea how

00:47:29,740 --> 00:47:34,360
it happened but we actually own like the

00:47:31,990 --> 00:47:36,730
best ruby-on-rails feeling was her not

00:47:34,360 --> 00:47:41,590
will be on grounds ready feelings too

00:47:36,730 --> 00:47:43,900
yeah it does have some ass over here so

00:47:41,590 --> 00:47:46,630
I can't touch him what I mean I be said

00:47:43,900 --> 00:47:48,130
about not being clever and God tells off

00:47:46,630 --> 00:47:50,530
of what Steve cloud Nick presented

00:47:48,130 --> 00:47:52,780
yesterday about using irresponsible Ruby

00:47:50,530 --> 00:47:54,670
to still be creative and I found myself

00:47:52,780 --> 00:47:56,230
in situations where I'm correcting you

00:47:54,670 --> 00:47:57,970
know people are junior to Ruby maybe

00:47:56,230 --> 00:47:59,440
they've experienced developers and I'm

00:47:57,970 --> 00:48:00,700
like that's not the right way to do it

00:47:59,440 --> 00:48:01,780
because they show me something that

00:48:00,700 --> 00:48:04,240
they're excited about they think it's

00:48:01,780 --> 00:48:06,100
cool right and I just want to ask you

00:48:04,240 --> 00:48:07,630
guys like how do you get people to use a

00:48:06,100 --> 00:48:10,780
best practice without squashing their

00:48:07,630 --> 00:48:13,390
spirit in the process all right so the

00:48:10,780 --> 00:48:17,170
best the best way to avoid being clever

00:48:13,390 --> 00:48:19,960
is to be clever a lot you gotta get it

00:48:17,170 --> 00:48:22,090
out of your system um if you're anything

00:48:19,960 --> 00:48:23,890
like me and you enjoy that kind of thing

00:48:22,090 --> 00:48:25,690
which you know hopefully a lot of you

00:48:23,890 --> 00:48:27,670
are i mean that's like a lot of like why

00:48:25,690 --> 00:48:32,080
we get into this awesome hacks right um

00:48:27,670 --> 00:48:34,900
and um you know I mean Steve kind of

00:48:32,080 --> 00:48:40,750
nailed it he said but don't do what it

00:48:34,900 --> 00:48:42,609
work quick right or I will quit um you

00:48:40,750 --> 00:48:45,250
know you've got a you've got to have

00:48:42,609 --> 00:48:47,800
time and opportunities to to do

00:48:45,250 --> 00:48:49,240
irresponsible coding and you know you

00:48:47,800 --> 00:48:50,890
got to make time after hours you should

00:48:49,240 --> 00:48:53,590
honestly you should I would hope that

00:48:50,890 --> 00:48:54,970
you know that you have a enlightened

00:48:53,590 --> 00:48:56,830
enough work place that you can you know

00:48:54,970 --> 00:48:59,470
have some hack nights or something where

00:48:56,830 --> 00:49:01,869
you just do fun stuff um you know I've

00:48:59,470 --> 00:49:03,700
definitely batted around crazy crazy

00:49:01,869 --> 00:49:08,230
code in offices over the years you know

00:49:03,700 --> 00:49:11,440
and and um yeah what I would hate to see

00:49:08,230 --> 00:49:14,080
is a culture of like somebody somebody

00:49:11,440 --> 00:49:17,080
says hey check this out and then like

00:49:14,080 --> 00:49:21,070
the you know lead developer says that's

00:49:17,080 --> 00:49:22,000
the worst thing I've ever seen I don't

00:49:21,070 --> 00:49:24,070
ever want to see anything like that

00:49:22,000 --> 00:49:25,540
again you know it's now you got to

00:49:24,070 --> 00:49:26,920
celebrate these hacks but you also have

00:49:25,540 --> 00:49:28,300
to recognize that you know if you're not

00:49:26,920 --> 00:49:29,890
sure what the implications are of

00:49:28,300 --> 00:49:32,350
something clever then maybe it's not

00:49:29,890 --> 00:49:35,350
time to put it into production yet but

00:49:32,350 --> 00:49:37,650
by all means you know um forced it on an

00:49:35,350 --> 00:49:40,030
unsuspecting public in on github and

00:49:37,650 --> 00:49:42,400
watch what other people do with it the

00:49:40,030 --> 00:49:43,780
one thing I want to add to that and I'm

00:49:42,400 --> 00:49:46,270
just basically going to say the same

00:49:43,780 --> 00:49:47,410
thing in a different way but it's it's a

00:49:46,270 --> 00:49:49,420
different way of thinking about it and

00:49:47,410 --> 00:49:52,180
that is that best practices usually

00:49:49,420 --> 00:49:54,970
revolve around some commonly solvable

00:49:52,180 --> 00:49:56,860
case and if you're out there writing

00:49:54,970 --> 00:49:58,360
irresponsible code like what Steve was

00:49:56,860 --> 00:50:00,070
talking about the other day you're

00:49:58,360 --> 00:50:03,160
probably going to transcend a lot of

00:50:00,070 --> 00:50:05,470
best practices by doing so you know the

00:50:03,160 --> 00:50:08,530
idea the crazy thing that you're doing

00:50:05,470 --> 00:50:11,650
there's probably not a best-case best

00:50:08,530 --> 00:50:13,750
practice way to do it and so you know

00:50:11,650 --> 00:50:17,470
you follow the ones that are you know

00:50:13,750 --> 00:50:21,450
sort of idiomatic Ruby or you know what

00:50:17,470 --> 00:50:24,400
will help make exploring the idea easier

00:50:21,450 --> 00:50:26,110
but at the same time you know you're

00:50:24,400 --> 00:50:27,820
probably going to go beyond what we're

00:50:26,110 --> 00:50:29,560
talking about with how to solve a

00:50:27,820 --> 00:50:31,990
particular problem if that's the whole

00:50:29,560 --> 00:50:33,760
point of your irresponsible code Steve

00:50:31,990 --> 00:50:36,880
did also cover very well the day two

00:50:33,760 --> 00:50:39,070
different modes of thinking and wondered

00:50:36,880 --> 00:50:40,990
has a time and a place in the other mode

00:50:39,070 --> 00:50:43,840
has a time in place right and when he

00:50:40,990 --> 00:50:47,110
engaged in that mode he suspended the

00:50:43,840 --> 00:50:49,750
normal rules you know don't do costuming

00:50:47,110 --> 00:50:52,690
right don't you need us right it changed

00:50:49,750 --> 00:50:55,090
the rules it and what one of the things

00:50:52,690 --> 00:50:57,910
that I said in the panel we did at

00:50:55,090 --> 00:50:59,050
Rascoff last year okay i don't have the

00:50:57,910 --> 00:51:02,290
club in front of me right now so i'll

00:50:59,050 --> 00:51:05,740
paraphrase it but it is Baudelaire said

00:51:02,290 --> 00:51:08,080
something about be conservative in your

00:51:05,740 --> 00:51:11,260
daily life so that you can hurt so that

00:51:08,080 --> 00:51:13,210
you can be daring in your in your work

00:51:11,260 --> 00:51:16,030
in the things that are important to you

00:51:13,210 --> 00:51:18,880
so if you have a foundation of best

00:51:16,030 --> 00:51:20,950
practices that you follow then you have

00:51:18,880 --> 00:51:23,020
a stable thing that you that you can

00:51:20,950 --> 00:51:24,160
rely on and have some confidence that

00:51:23,020 --> 00:51:26,620
that's not going to be the thing that's

00:51:24,160 --> 00:51:28,120
messing you up and then when you when

00:51:26,620 --> 00:51:32,470
you want to take risks and do

00:51:28,120 --> 00:51:34,900
irresponsible things or explore then you

00:51:32,470 --> 00:51:36,400
know that you you know that's going to

00:51:34,900 --> 00:51:38,050
be the thing that you have to worry

00:51:36,400 --> 00:51:40,920
about breaking not everything else in

00:51:38,050 --> 00:51:43,440
your system thank you

00:51:40,920 --> 00:51:46,020
history foundation wins to extend our

00:51:43,440 --> 00:51:50,600
sincere gratitude for the max coming

00:51:46,020 --> 00:51:50,600
here and having a panel saying

00:51:59,230 --> 00:52:05,530
business very often thank you yeah a big

00:52:01,880 --> 00:52:05,530

YouTube URL: https://www.youtube.com/watch?v=Eg7IaRAnASM


