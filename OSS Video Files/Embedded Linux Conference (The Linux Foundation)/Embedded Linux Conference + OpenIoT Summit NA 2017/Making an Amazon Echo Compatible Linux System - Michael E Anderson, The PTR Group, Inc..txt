Title: Making an Amazon Echo Compatible Linux System - Michael E Anderson, The PTR Group, Inc.
Publication date: 2017-02-27
Playlist: Embedded Linux Conference + OpenIoT Summit NA 2017
Description: 
	Making an Amazon Echo Compatible Linux System - Michael E Anderson, The PTR Group, Inc.

In this session, attendees will gain an understanding of how the Amazon Echo interfaces to Amazon Voice Services and how to construct their very own Amazon Echo using an embedded Linux platform. We will explain how the "skills" interface works, the issues with voice recognition and how to use AVS to perform command recognition to do simple tasks. 

About Michael E Anderson
Mike Anderson is currently CTO and Chief Scientist for The PTR Group, Inc. With over 35 years in the embedded and real-time computing industry, Mike works with a number of RTOS, Linux and Android-based devices in applications ranging from satellites and robotics to SCADA platforms. However, his focus over the past few years has been the use of Linux and Android in embedded sensor applications and the deployment of the Internet of Things.
Captions: 
	00:00:00,000 --> 00:00:04,200
all right it's just about time to get

00:00:02,310 --> 00:00:07,770
started here so we'll go ahead and crank

00:00:04,200 --> 00:00:09,929
this up welcome my name is Mike Anderson

00:00:07,770 --> 00:00:13,740
I'm a chief scientist for the PTR group

00:00:09,929 --> 00:00:15,000
and just who are the PTR group and what

00:00:13,740 --> 00:00:17,430
do they do

00:00:15,000 --> 00:00:21,779
our big projects right now are all

00:00:17,430 --> 00:00:23,760
related to NASA robotics I'm hoping at

00:00:21,779 --> 00:00:26,550
some point to get our good friends at

00:00:23,760 --> 00:00:29,660
NASA to give me permission to talk about

00:00:26,550 --> 00:00:32,460
what we're doing in a public forum but

00:00:29,660 --> 00:00:36,090
suffice to say at this point is a

00:00:32,460 --> 00:00:38,040
project called restore L and it is all

00:00:36,090 --> 00:00:43,170
about being able to come up underneath

00:00:38,040 --> 00:00:46,410
Landsat 7 and dock with it and refuel it

00:00:43,170 --> 00:00:48,180
in orbit so all the robotics all the

00:00:46,410 --> 00:00:52,219
controls everything and it's running

00:00:48,180 --> 00:00:57,390
Linux how about that in that special one

00:00:52,219 --> 00:00:59,430
okay so we also do a lot of flight

00:00:57,390 --> 00:01:02,010
software we're basically in the business

00:00:59,430 --> 00:01:04,500
of writing flight software we do a lot

00:01:02,010 --> 00:01:06,360
of work in the IOT as well and it was

00:01:04,500 --> 00:01:08,850
actually because of our work in the

00:01:06,360 --> 00:01:12,090
Internet of Things that brought me to

00:01:08,850 --> 00:01:14,130
this particular project so we've spent a

00:01:12,090 --> 00:01:15,869
lot of time doing real-time operating

00:01:14,130 --> 00:01:18,470
systems and then of course running Linux

00:01:15,869 --> 00:01:20,939
on lots of very small embedded platforms

00:01:18,470 --> 00:01:23,820
we also are into offensive and defensive

00:01:20,939 --> 00:01:26,430
cyber operations the defensive is pretty

00:01:23,820 --> 00:01:28,290
obvious I'll leave your imagination to

00:01:26,430 --> 00:01:31,920
what offensive cyber operations are all

00:01:28,290 --> 00:01:34,290
dup that's me I've been in the business

00:01:31,920 --> 00:01:36,869
now for years this year how about that I

00:01:34,290 --> 00:01:38,939
got my first job as a programmer in 77

00:01:36,869 --> 00:01:41,369
go figure

00:01:38,939 --> 00:01:44,369
of course we've been I've been in the

00:01:41,369 --> 00:01:46,920
real-time industry most of that time so

00:01:44,369 --> 00:01:49,979
it's been an interesting transition as

00:01:46,920 --> 00:01:53,610
we've seen embedded systems going from

00:01:49,979 --> 00:01:55,860
IBM 360 mod 30s mainframes that would

00:01:53,610 --> 00:01:57,780
fill this room down to things like the

00:01:55,860 --> 00:02:02,250
little laptop that I have here running

00:01:57,780 --> 00:02:04,439
Raspberry Pi so what we're going to do

00:02:02,250 --> 00:02:06,750
is we'll talk about why would you want

00:02:04,439 --> 00:02:09,060
to do this I mean what is the purpose of

00:02:06,750 --> 00:02:11,610
doing something like this and then we'll

00:02:09,060 --> 00:02:14,850
get into exactly how Amazon echo works

00:02:11,610 --> 00:02:16,920
how does it do what it does and how can

00:02:14,850 --> 00:02:20,400
you go about doing voice enablement on

00:02:16,920 --> 00:02:21,630
your individual devices then we'll look

00:02:20,400 --> 00:02:23,370
at setting up the system and what we

00:02:21,630 --> 00:02:25,620
have to do to register with Amazon voice

00:02:23,370 --> 00:02:27,150
services and then getting an application

00:02:25,620 --> 00:02:32,280
up and running and then we'll kind of

00:02:27,150 --> 00:02:34,170
hit the summary here so why do this well

00:02:32,280 --> 00:02:36,750
it turns out that in our business with

00:02:34,170 --> 00:02:38,760
the Internet of Things we had a customer

00:02:36,750 --> 00:02:43,520
who came to us and said I want to do

00:02:38,760 --> 00:02:43,520
voice enablement of plumbing fixtures

00:02:44,150 --> 00:02:49,130
and I go you want to do what

00:02:49,860 --> 00:02:57,560
so the concept of Alexa clean mic

00:02:52,770 --> 00:03:01,350
toilets is not too far away I think

00:02:57,560 --> 00:03:03,570
we'll see how that plays out but in in

00:03:01,350 --> 00:03:06,989
trying to think about what the use cases

00:03:03,570 --> 00:03:10,110
are for voice enablement it really

00:03:06,989 --> 00:03:12,209
caused me to go down this path of ok how

00:03:10,110 --> 00:03:15,810
do you do voice enablement on a platform

00:03:12,209 --> 00:03:17,299
what does that mean how do you handle

00:03:15,810 --> 00:03:19,440
the voice recognition of course

00:03:17,299 --> 00:03:22,130
traditionally voice recognition has been

00:03:19,440 --> 00:03:25,110
a major problem for a lot of systems and

00:03:22,130 --> 00:03:28,950
required a lot of horsepower so how do

00:03:25,110 --> 00:03:31,530
you enable a you know a plumbing fixture

00:03:28,950 --> 00:03:36,140
with voice how do you do that and

00:03:31,530 --> 00:03:38,970
exactly how what is the process so I

00:03:36,140 --> 00:03:42,570
managed to get my hands on an echo dot

00:03:38,970 --> 00:03:45,930
and the echo dot is about actually about

00:03:42,570 --> 00:03:49,410
this size about same size is this the

00:03:45,930 --> 00:03:53,640
original echo they actually have two of

00:03:49,410 --> 00:03:55,980
them the first one over here is the one

00:03:53,640 --> 00:03:56,730
that is the the original one that was

00:03:55,980 --> 00:03:58,410
for sale

00:03:56,730 --> 00:04:01,380
and of course that one's got a Bluetooth

00:03:58,410 --> 00:04:04,110
speaker inside of it the echo dot on the

00:04:01,380 --> 00:04:06,030
other hand is a very small device that

00:04:04,110 --> 00:04:08,400
is focused just on doing the voice

00:04:06,030 --> 00:04:10,980
recognition piece it does have an option

00:04:08,400 --> 00:04:13,530
for a Bluetooth speaker it also has an

00:04:10,980 --> 00:04:15,480
option for a normal plug in speaker if

00:04:13,530 --> 00:04:16,950
you do in fact want to do music enable

00:04:15,480 --> 00:04:20,150
meant and things of that sort on it but

00:04:16,950 --> 00:04:24,360
it is an interesting little device and

00:04:20,150 --> 00:04:24,940
having seen it on iFixit they did a

00:04:24,360 --> 00:04:26,560
teardown

00:04:24,940 --> 00:04:28,180
of it and they did a pretty decent

00:04:26,560 --> 00:04:31,630
teardown it turns out that the main

00:04:28,180 --> 00:04:34,720
thing that drives it is a TI DaVinci so

00:04:31,630 --> 00:04:35,800
it uses one of their DM 3730 parts or

00:04:34,720 --> 00:04:38,500
something like that I think I have it in

00:04:35,800 --> 00:04:40,240
here in the in the presentation so when

00:04:38,500 --> 00:04:42,420
you look at that you go okay it's

00:04:40,240 --> 00:04:45,880
basically a BeagleBone black with some

00:04:42,420 --> 00:04:51,490
audio processing in it how hard can that

00:04:45,880 --> 00:04:52,570
be so one of the things you have to

00:04:51,490 --> 00:04:54,490
first think about when we're talking

00:04:52,570 --> 00:04:57,940
about doing voice recognition and voice

00:04:54,490 --> 00:05:01,450
enablement you have to understand why

00:04:57,940 --> 00:05:03,940
why are you going to do this in the case

00:05:01,450 --> 00:05:05,320
of you know say plumbing fixtures and

00:05:03,940 --> 00:05:07,570
that kind of thing maybe you've got your

00:05:05,320 --> 00:05:09,340
hands are all covered with chicken slime

00:05:07,570 --> 00:05:11,530
and you don't want to touch the handle

00:05:09,340 --> 00:05:13,720
because then you'll transfer Salmonella

00:05:11,530 --> 00:05:15,370
or something else to it those are the

00:05:13,720 --> 00:05:17,320
kinds of things that you really have to

00:05:15,370 --> 00:05:20,830
think about what is the use case here

00:05:17,320 --> 00:05:24,670
what am I trying to do and you also have

00:05:20,830 --> 00:05:27,100
to understand that the voice recognition

00:05:24,670 --> 00:05:28,810
and we'll get into this as we go to

00:05:27,100 --> 00:05:30,310
further the presentation the voice

00:05:28,810 --> 00:05:33,730
recognition in this particular case

00:05:30,310 --> 00:05:35,680
isn't actually done on the echo it's not

00:05:33,730 --> 00:05:38,800
actually done on the Raspberry Pi it's

00:05:35,680 --> 00:05:40,360
actually done up in the cloud and so one

00:05:38,800 --> 00:05:42,100
of the key pieces that you have to have

00:05:40,360 --> 00:05:44,890
in order to make all this work is the

00:05:42,100 --> 00:05:46,450
internet connection and you then have to

00:05:44,890 --> 00:05:48,790
associate the internet and do all that

00:05:46,450 --> 00:05:53,140
wonderful happy stuff now when you think

00:05:48,790 --> 00:05:57,040
about a device that is really an

00:05:53,140 --> 00:05:59,950
appliance let's see here like that guy

00:05:57,040 --> 00:06:02,400
right there there's no mouse keyboard

00:05:59,950 --> 00:06:04,540
anything like that associated with it so

00:06:02,400 --> 00:06:08,140
provisioning these devices is a

00:06:04,540 --> 00:06:10,530
perpetual problem in the IOT we've seen

00:06:08,140 --> 00:06:14,410
this time and time again we're using

00:06:10,530 --> 00:06:16,450
silicon labs silicon their mighty gecko

00:06:14,410 --> 00:06:17,500
parts to do thread and a couple of other

00:06:16,450 --> 00:06:20,590
things

00:06:17,500 --> 00:06:22,570
provisioning is a major problem and how

00:06:20,590 --> 00:06:24,790
do you get credentials on it how you get

00:06:22,570 --> 00:06:27,010
certificates on it how do you make sure

00:06:24,790 --> 00:06:30,340
that it's associated with your Wi-Fi has

00:06:27,010 --> 00:06:32,800
the right Wi-Fi SSID and password all

00:06:30,340 --> 00:06:34,510
that sort of stuff has to be done with a

00:06:32,800 --> 00:06:36,300
device that has no mechanism for

00:06:34,510 --> 00:06:39,129
interacting with it other than a button

00:06:36,300 --> 00:06:40,779
so in many cases what

00:06:39,129 --> 00:06:43,209
a lot of the manufacturers do is they'll

00:06:40,779 --> 00:06:46,719
enable these with bluetooth and they'll

00:06:43,209 --> 00:06:49,269
just simply use the Bluetooth SEO model

00:06:46,719 --> 00:06:51,789
you know that particular profile so it

00:06:49,269 --> 00:06:54,339
looks like a serial port so you download

00:06:51,789 --> 00:06:57,610
an app from the App Store you then start

00:06:54,339 --> 00:06:59,529
the app you plug in the device and then

00:06:57,610 --> 00:07:01,989
it starts looking for something to pair

00:06:59,529 --> 00:07:03,729
with and in many of these cases

00:07:01,989 --> 00:07:06,879
especially today it's all being done

00:07:03,729 --> 00:07:09,339
with Bluetooth Low Energy ble and ble

00:07:06,879 --> 00:07:12,099
doesn't have pairing so it just simply

00:07:09,339 --> 00:07:14,860
says oh hey Here I am and what can I do

00:07:12,099 --> 00:07:16,929
for you and your mobile app then

00:07:14,860 --> 00:07:18,069
provisions it so the mobile app is the

00:07:16,929 --> 00:07:20,169
thing that actually downloads the

00:07:18,069 --> 00:07:23,939
certificates get the SS IDs and all that

00:07:20,169 --> 00:07:26,439
sort of stuff taken care of so that

00:07:23,939 --> 00:07:30,159
where we're finding that that model

00:07:26,439 --> 00:07:32,979
works well for people like her in this

00:07:30,159 --> 00:07:36,699
audience does not work well for my

00:07:32,979 --> 00:07:41,919
grandmother she has just discovered what

00:07:36,699 --> 00:07:45,039
a smart phone is and unfortunately she's

00:07:41,919 --> 00:07:50,289
now on whatsapp so I get lots of traffic

00:07:45,039 --> 00:07:52,689
from her nonetheless so what's going to

00:07:50,289 --> 00:07:54,490
happen here you have to have a

00:07:52,689 --> 00:07:57,189
microphone a speaker and an internet

00:07:54,490 --> 00:07:59,469
connection now one of the things that I

00:07:57,189 --> 00:08:02,709
found is that the microphone piece of

00:07:59,469 --> 00:08:04,509
this is an interesting challenge we'll

00:08:02,709 --> 00:08:07,389
talk more about that a little bit later

00:08:04,509 --> 00:08:08,649
there is a wake word that's associated

00:08:07,389 --> 00:08:11,019
with this and any of the voice

00:08:08,649 --> 00:08:13,300
recognition systems that you will run

00:08:11,019 --> 00:08:16,959
into will typically have some magic wake

00:08:13,300 --> 00:08:20,110
word now the thing about the wake word

00:08:16,959 --> 00:08:22,089
is fortunately it can be changed I have

00:08:20,110 --> 00:08:25,559
one of them at home that I've done that

00:08:22,089 --> 00:08:28,779
the wake word is now compute that up so

00:08:25,559 --> 00:08:30,879
and then it wakes up but the downside of

00:08:28,779 --> 00:08:34,419
the wake word is that the system is

00:08:30,879 --> 00:08:36,729
always listening and it's always waiting

00:08:34,419 --> 00:08:39,550
for that magic wake word or something

00:08:36,729 --> 00:08:42,519
that sounds close enough to it that it

00:08:39,550 --> 00:08:45,759
will suddenly wake up so if you're a

00:08:42,519 --> 00:08:48,819
privacy fan then these types of devices

00:08:45,759 --> 00:08:50,589
are probably not for you because they

00:08:48,819 --> 00:08:52,510
are listening all the time they are

00:08:50,589 --> 00:08:55,510
connected to the cloud most

00:08:52,510 --> 00:08:57,820
to the time and as a consequence any

00:08:55,510 --> 00:09:00,130
sort of thing that comes close to the

00:08:57,820 --> 00:09:02,380
wake word will then open up a connection

00:09:00,130 --> 00:09:06,310
up to the cloud and it will start doing

00:09:02,380 --> 00:09:08,380
vodi of voice processing and if you're

00:09:06,310 --> 00:09:12,280
the paranoid type this is probably not a

00:09:08,380 --> 00:09:14,440
good thing for your house it is one of

00:09:12,280 --> 00:09:16,990
those cases of all right this is kind of

00:09:14,440 --> 00:09:19,050
cool and you can do a burr and you can

00:09:16,990 --> 00:09:22,090
order pizza and a few things like that

00:09:19,050 --> 00:09:25,210
but in the long run is it something that

00:09:22,090 --> 00:09:27,340
I want in my house being a security guy

00:09:25,210 --> 00:09:29,470
it makes me very nervous so I unplug it

00:09:27,340 --> 00:09:34,270
most of the time but every now and then

00:09:29,470 --> 00:09:36,160
it's fun to play with it is not much

00:09:34,270 --> 00:09:38,560
different than your cell phones except

00:09:36,160 --> 00:09:40,000
that they are in this particular case

00:09:38,560 --> 00:09:44,290
it's automatically doing the cloud

00:09:40,000 --> 00:09:45,340
processing all the time so if you're

00:09:44,290 --> 00:09:49,630
paranoid you shouldn't have a cell phone

00:09:45,340 --> 00:09:51,460
anyway so yeah let's just unplug and go

00:09:49,630 --> 00:09:54,100
out into the middle of Canada someplace

00:09:51,460 --> 00:09:58,270
and wait for the beavers to show up I

00:09:54,100 --> 00:10:01,420
guess about in any case so let's move on

00:09:58,270 --> 00:10:03,760
here now once you have made the

00:10:01,420 --> 00:10:05,620
connection to Amazon Web Services and of

00:10:03,760 --> 00:10:07,180
course this is Amazon echo so everything

00:10:05,620 --> 00:10:11,110
has to involve their cloud system

00:10:07,180 --> 00:10:12,850
somehow the Amazon Web Services they

00:10:11,110 --> 00:10:14,830
have a little over well they actually

00:10:12,850 --> 00:10:18,130
have several thousands of these things

00:10:14,830 --> 00:10:20,710
called skills now so one of the things

00:10:18,130 --> 00:10:24,670
about the way the Alexa system works is

00:10:20,710 --> 00:10:26,530
I can develop my own skills which means

00:10:24,670 --> 00:10:28,900
I can develop new skills for the device

00:10:26,530 --> 00:10:30,880
so if I wanted to have and this is one

00:10:28,900 --> 00:10:34,540
of the things I'm working on in my hotel

00:10:30,880 --> 00:10:37,480
room an Alexa enabled robot that you can

00:10:34,540 --> 00:10:39,910
just say Alexa drive forward and it

00:10:37,480 --> 00:10:42,550
starts moving and have it be completely

00:10:39,910 --> 00:10:44,950
voice controlled you can develop those

00:10:42,550 --> 00:10:48,940
skills so the skills can be written

00:10:44,950 --> 00:10:51,220
either in nodejs or they can be written

00:10:48,940 --> 00:10:54,910
in java so those are the two flavors

00:10:51,220 --> 00:10:56,830
they have right now and your device then

00:10:54,910 --> 00:11:00,940
implements the skill so basically the

00:10:56,830 --> 00:11:04,120
flow is my device is listening I say the

00:11:00,940 --> 00:11:06,010
wait word and a command they then take

00:11:04,120 --> 00:11:08,800
the voice that they just recorded

00:11:06,010 --> 00:11:11,020
send it up to the cloud the cloud does

00:11:08,800 --> 00:11:13,600
the audio processing the cloud then

00:11:11,020 --> 00:11:17,260
figures out what skill that's related to

00:11:13,600 --> 00:11:19,870
and then sends a command back and when

00:11:17,260 --> 00:11:21,460
it sends the command back then your

00:11:19,870 --> 00:11:24,550
device does whatever it was that your

00:11:21,460 --> 00:11:27,250
skill said it was supposed to do this

00:11:24,550 --> 00:11:29,380
implies lots of interesting things also

00:11:27,250 --> 00:11:32,740
from a security perspective because now

00:11:29,380 --> 00:11:35,410
I have a message that I have initiated

00:11:32,740 --> 00:11:37,690
from the inside of my firewall going up

00:11:35,410 --> 00:11:39,870
to the cloud the cloud does some

00:11:37,690 --> 00:11:42,520
processing and sends me something back

00:11:39,870 --> 00:11:44,290
well it has to maintain the connection

00:11:42,520 --> 00:11:47,020
the connection has to be open for the

00:11:44,290 --> 00:11:48,310
cloud to send me something back so as

00:11:47,020 --> 00:11:49,840
soon as it sends me something back that

00:11:48,310 --> 00:11:52,090
I'm supposed to go off and do something

00:11:49,840 --> 00:11:55,240
else like order pizza or send for an

00:11:52,090 --> 00:11:59,170
uber so the whole process of

00:11:55,240 --> 00:12:02,950
implementing the skill is as secure as

00:11:59,170 --> 00:12:04,690
they can make it at the moment but again

00:12:02,950 --> 00:12:07,290
if you're paranoid you probably don't

00:12:04,690 --> 00:12:11,980
want one of these devices in your house

00:12:07,290 --> 00:12:15,370
now aw originally the Amazon voice

00:12:11,980 --> 00:12:16,660
services AVS was a litt was launched

00:12:15,370 --> 00:12:19,510
here in the United States and it was

00:12:16,660 --> 00:12:22,510
only available in the US so as long as

00:12:19,510 --> 00:12:25,690
you spoke us English then you were able

00:12:22,510 --> 00:12:28,090
to use service if you spoke British

00:12:25,690 --> 00:12:30,550
English or something else then you were

00:12:28,090 --> 00:12:31,930
just kind of out of luck fortunately in

00:12:30,550 --> 00:12:35,170
the past couple of months they've now

00:12:31,930 --> 00:12:37,270
done new voice recognition engines that

00:12:35,170 --> 00:12:41,440
will allow them to recognize both UK

00:12:37,270 --> 00:12:43,060
English and German so I guess they

00:12:41,440 --> 00:12:45,490
assume that those are the two high tech

00:12:43,060 --> 00:12:47,140
places they want to go first obviously

00:12:45,490 --> 00:12:49,530
they're going to be doing enablement for

00:12:47,140 --> 00:12:52,170
other languages certainly Mandarin

00:12:49,530 --> 00:12:54,970
probably Japanese and a few others but

00:12:52,170 --> 00:12:56,920
at this point the only three places that

00:12:54,970 --> 00:12:59,980
are currently supported for Alexa voice

00:12:56,920 --> 00:13:03,190
services are the US the UK and Germany

00:12:59,980 --> 00:13:05,350
or if you happen to speak English

00:13:03,190 --> 00:13:07,120
us English or British English or

00:13:05,350 --> 00:13:09,790
whatever in whatever country you're in

00:13:07,120 --> 00:13:12,910
then you can still use the service but

00:13:09,790 --> 00:13:15,580
it connects back to the US servers to do

00:13:12,910 --> 00:13:18,370
its processing so obviously that's going

00:13:15,580 --> 00:13:20,110
to imply some delay associated with it

00:13:18,370 --> 00:13:22,390
and there are some issues

00:13:20,110 --> 00:13:24,579
data sovereignty some nations don't like

00:13:22,390 --> 00:13:27,700
the idea of servers in the US touching

00:13:24,579 --> 00:13:30,220
any of their data so that has its own

00:13:27,700 --> 00:13:33,430
set of implications associated with

00:13:30,220 --> 00:13:35,260
doing all the processing their each

00:13:33,430 --> 00:13:37,000
additional region though is going to

00:13:35,260 --> 00:13:40,480
have to have its own speech engine built

00:13:37,000 --> 00:13:42,820
and they're working on these but they

00:13:40,480 --> 00:13:44,950
don't have a kit out at this point for

00:13:42,820 --> 00:13:47,620
being able to develop new speech engines

00:13:44,950 --> 00:13:50,950
so that's all being done internally with

00:13:47,620 --> 00:13:52,779
Amazon now in general your design

00:13:50,950 --> 00:13:54,910
guidelines before you try to add voice

00:13:52,779 --> 00:13:56,950
recognition to any project you've got to

00:13:54,910 --> 00:13:59,680
work through the use cases why do you

00:13:56,950 --> 00:14:01,480
want this what is it that you think

00:13:59,680 --> 00:14:03,459
you're going to be able to do with voice

00:14:01,480 --> 00:14:06,760
recognition that you can't do with

00:14:03,459 --> 00:14:10,810
something simpler like a cell phone or a

00:14:06,760 --> 00:14:12,700
button or something really easy we've

00:14:10,810 --> 00:14:15,820
seen this kind of creeping elegance in

00:14:12,700 --> 00:14:18,430
the IOT of course when I have my

00:14:15,820 --> 00:14:20,170
Phillips hue light bulbs and I walk into

00:14:18,430 --> 00:14:22,870
my room and I have to have my cell phone

00:14:20,170 --> 00:14:24,970
to control the color of the light bulb

00:14:22,870 --> 00:14:27,250
or to turn the light bulbs noisy to turn

00:14:24,970 --> 00:14:28,600
the lights on it's one of those cases of

00:14:27,250 --> 00:14:31,300
you know they had this thing they

00:14:28,600 --> 00:14:33,370
invented called a light switch it's

00:14:31,300 --> 00:14:36,100
worked really well for the past hundred

00:14:33,370 --> 00:14:38,110
years it still seems to work but now I

00:14:36,100 --> 00:14:39,940
have to have my smart phone in order to

00:14:38,110 --> 00:14:42,310
turn on the lights

00:14:39,940 --> 00:14:43,630
interesting approach but this is part of

00:14:42,310 --> 00:14:46,000
the creeping elegance that goes along

00:14:43,630 --> 00:14:47,440
with the IOT they basically have

00:14:46,000 --> 00:14:50,829
solutions that are looking for problems

00:14:47,440 --> 00:14:52,300
and in this particular case yes they

00:14:50,829 --> 00:14:54,070
have an interesting solution with voice

00:14:52,300 --> 00:14:55,540
recognition they're looking for use

00:14:54,070 --> 00:15:00,100
cases they're always trying to come up

00:14:55,540 --> 00:15:01,990
with new problems to solve the Amazon of

00:15:00,100 --> 00:15:04,240
this particular speech recognition

00:15:01,990 --> 00:15:06,760
engine the automatic speech recognition

00:15:04,240 --> 00:15:08,380
engine then goes into Alexa's natural

00:15:06,760 --> 00:15:10,029
language understanding engine and this

00:15:08,380 --> 00:15:12,490
is where all the heavy processing is

00:15:10,029 --> 00:15:13,930
done in order to do voice recognition so

00:15:12,490 --> 00:15:15,459
all that's going to be done up in the

00:15:13,930 --> 00:15:18,070
cloud fortunately your device doesn't

00:15:15,459 --> 00:15:19,779
have to do that in order to get started

00:15:18,070 --> 00:15:22,089
with this what you have to do is you do

00:15:19,779 --> 00:15:24,880
have to register at amazon.com as a

00:15:22,089 --> 00:15:25,959
developer now registering at amazon.com

00:15:24,880 --> 00:15:28,480
as the developer doesn't cost you

00:15:25,959 --> 00:15:31,550
anything you just simply given a user ID

00:15:28,480 --> 00:15:34,950
and a password and your air

00:15:31,550 --> 00:15:36,000
email address and then the next thing

00:15:34,950 --> 00:15:38,130
you have to do is you have to start

00:15:36,000 --> 00:15:40,170
learning about what Alexis skills are

00:15:38,130 --> 00:15:42,450
all about so they have a thing called

00:15:40,170 --> 00:15:45,150
the Alexis skills kit and the Alexis

00:15:42,450 --> 00:15:46,890
skills kit takes you through the process

00:15:45,150 --> 00:15:49,350
they have two versions of it one for

00:15:46,890 --> 00:15:51,990
JavaScript with nodejs they have another

00:15:49,350 --> 00:15:55,250
one for Java and you download whichever

00:15:51,990 --> 00:15:57,570
skillset kit you're interested in and

00:15:55,250 --> 00:16:00,320
you start going through the kit

00:15:57,570 --> 00:16:03,270
basically it describes what a skill is

00:16:00,320 --> 00:16:06,450
how its implemented and what you have to

00:16:03,270 --> 00:16:08,580
do in order to turn on a new skill they

00:16:06,450 --> 00:16:10,890
do have several different classes of

00:16:08,580 --> 00:16:13,050
skills if you will they have those that

00:16:10,890 --> 00:16:15,210
are public skills so if you've developed

00:16:13,050 --> 00:16:17,550
this really cool skill like driving a

00:16:15,210 --> 00:16:19,080
robot and you want to put that out in

00:16:17,550 --> 00:16:20,880
the public space so that everybody can

00:16:19,080 --> 00:16:23,610
see it and use it then you can declare

00:16:20,880 --> 00:16:25,470
it as a public skill alternatively you

00:16:23,610 --> 00:16:27,900
can also declare them as private skills

00:16:25,470 --> 00:16:30,750
and as a private skill nobody can see it

00:16:27,900 --> 00:16:32,490
except you so you typically want to

00:16:30,750 --> 00:16:33,600
develop as a private skill and then if

00:16:32,490 --> 00:16:35,040
you decide at some point in the future

00:16:33,600 --> 00:16:36,620
you're going to make it public then

00:16:35,040 --> 00:16:39,690
you'll declare it as a public skill

00:16:36,620 --> 00:16:41,970
there are fortunately several different

00:16:39,690 --> 00:16:44,460
examples of skills on the Amazon

00:16:41,970 --> 00:16:46,830
developer site so as I say there's now

00:16:44,460 --> 00:16:48,630
several thousands of these things that

00:16:46,830 --> 00:16:51,270
have been developed and they range

00:16:48,630 --> 00:16:52,650
anywhere from you know using the Philips

00:16:51,270 --> 00:16:54,090
hue light bulb that's none of the

00:16:52,650 --> 00:16:57,300
options you can control the nest

00:16:54,090 --> 00:17:00,600
thermostat you can order pizza from

00:16:57,300 --> 00:17:01,890
dominos you can get uber there are lots

00:17:00,600 --> 00:17:04,560
of these different skills that they have

00:17:01,890 --> 00:17:07,200
connected and all of them seem to be

00:17:04,560 --> 00:17:11,070
operational at this point and people are

00:17:07,200 --> 00:17:12,810
using them so the cloud part of this now

00:17:11,070 --> 00:17:15,150
when you're developing a skill there's

00:17:12,810 --> 00:17:17,220
two pieces there's the piece that runs

00:17:15,150 --> 00:17:19,410
on your local machine which is basically

00:17:17,220 --> 00:17:21,270
the thing that understands okay I've got

00:17:19,410 --> 00:17:22,830
this new skill I'm going to implement

00:17:21,270 --> 00:17:24,630
turning on the light bulb or I'm going

00:17:22,830 --> 00:17:27,750
to implement changing the thermostat

00:17:24,630 --> 00:17:30,270
temperature then you have the cloud part

00:17:27,750 --> 00:17:32,700
of this so this is where the nodejs

00:17:30,270 --> 00:17:35,340
piece of it comes into play I'm going to

00:17:32,700 --> 00:17:37,170
go up into the Amazon Cloud it doesn't

00:17:35,340 --> 00:17:38,820
run a VM it runs one of their new

00:17:37,170 --> 00:17:41,630
services which is just basically a

00:17:38,820 --> 00:17:43,710
remote procedure call like service and

00:17:41,630 --> 00:17:44,750
you'll develop this remote procedure

00:17:43,710 --> 00:17:46,670
call up

00:17:44,750 --> 00:17:49,460
the cloud you'll test it up in the cloud

00:17:46,670 --> 00:17:50,960
it will then connect to your device and

00:17:49,460 --> 00:17:54,710
you'll go ahead and implement that as a

00:17:50,960 --> 00:17:57,050
skill so fortunately there's a github

00:17:54,710 --> 00:17:59,330
repo for all of this so you can go to

00:17:57,050 --> 00:18:01,910
the github repo download the skill

00:17:59,330 --> 00:18:06,380
development kit and take a look at what

00:18:01,910 --> 00:18:08,270
it is built for they do have most of the

00:18:06,380 --> 00:18:10,940
codes they can they claim they'll be

00:18:08,270 --> 00:18:14,380
able to run on Windows and of course

00:18:10,940 --> 00:18:16,730
under OS 10 but of course I run Linux

00:18:14,380 --> 00:18:18,230
fortunately they have completely enabled

00:18:16,730 --> 00:18:20,030
the Linux side of it so it's not like

00:18:18,230 --> 00:18:21,590
Linux as a second-class citizen here

00:18:20,030 --> 00:18:23,660
it's like Linux is the first platform

00:18:21,590 --> 00:18:28,190
and then they enable the other ones

00:18:23,660 --> 00:18:30,110
which is a nice change of pace so once

00:18:28,190 --> 00:18:32,900
you have that skills kit and you write

00:18:30,110 --> 00:18:34,640
the cloud part now you need to say ok

00:18:32,900 --> 00:18:36,590
well I've got this skill that's defined

00:18:34,640 --> 00:18:39,380
and you can test the skill with the

00:18:36,590 --> 00:18:42,260
Amazon echo the echo itself a little

00:18:39,380 --> 00:18:45,230
echo dot is something like $40 so you

00:18:42,260 --> 00:18:46,760
can get that plug it in test it make

00:18:45,230 --> 00:18:49,730
sure you've got your skill working up in

00:18:46,760 --> 00:18:51,590
the cloud and then move things over to

00:18:49,730 --> 00:18:53,660
your local platform your local embedded

00:18:51,590 --> 00:18:56,510
Linux platform now what are you going to

00:18:53,660 --> 00:19:01,520
need well it turns out that there as I

00:18:56,510 --> 00:19:04,250
said the echo dot uses a TI 37:25 it's

00:19:01,520 --> 00:19:05,270
basically at the BeagleBone black class

00:19:04,250 --> 00:19:07,730
ship

00:19:05,270 --> 00:19:10,090
it's a cortex a8 it doesn't have much

00:19:07,730 --> 00:19:14,150
memory I think it's got 256 Meg's of RAM

00:19:10,090 --> 00:19:16,100
not a whole lot of flash so in this

00:19:14,150 --> 00:19:18,290
particular case that pretty much means

00:19:16,100 --> 00:19:21,320
that you can enable almost any of the

00:19:18,290 --> 00:19:24,110
current development boards even if you

00:19:21,320 --> 00:19:27,040
had an early generation BeagleBone black

00:19:24,110 --> 00:19:29,390
or even just the original BeagleBoard

00:19:27,040 --> 00:19:30,500
you're still plenty fast enough for

00:19:29,390 --> 00:19:33,080
doing the kinds of things that this

00:19:30,500 --> 00:19:34,630
particular application requires you have

00:19:33,080 --> 00:19:38,060
to have an internet connection and

00:19:34,630 --> 00:19:39,080
therein lies an interesting problem how

00:19:38,060 --> 00:19:40,370
are you going to get connected to the

00:19:39,080 --> 00:19:42,110
Internet obviously if you've got either

00:19:40,370 --> 00:19:44,020
net that's one thing but most of the

00:19:42,110 --> 00:19:46,670
devices these days want to be Wireless

00:19:44,020 --> 00:19:50,330
so it says that you have to have Wi-Fi

00:19:46,670 --> 00:19:52,490
on the board and of course unless you're

00:19:50,330 --> 00:19:54,530
using one of the newer boards that has

00:19:52,490 --> 00:19:55,670
Wi-Fi built into it then you have to

00:19:54,530 --> 00:19:58,290
figure out how you're going to get Wi-Fi

00:19:55,670 --> 00:20:01,530
on the platform USB dongles I found

00:19:58,290 --> 00:20:03,450
actually work reasonably well the Wi-Fi

00:20:01,530 --> 00:20:04,680
interface that you can get from Adafruit

00:20:03,450 --> 00:20:07,560
there are a couple of others out there

00:20:04,680 --> 00:20:09,600
that work reasonably well and so they do

00:20:07,560 --> 00:20:11,850
you just plug them in and they go that's

00:20:09,600 --> 00:20:13,440
an excellent thing and certainly speaks

00:20:11,850 --> 00:20:15,270
a lot to the kind of progress we've made

00:20:13,440 --> 00:20:18,330
in the linux world where you can just

00:20:15,270 --> 00:20:19,680
buy a USB device off the shelf and just

00:20:18,330 --> 00:20:22,350
plug it in and not really have to worry

00:20:19,680 --> 00:20:24,540
about you know who's driver is it and

00:20:22,350 --> 00:20:26,870
all over the stuff it does work pretty

00:20:24,540 --> 00:20:30,120
much with most of the devices out there

00:20:26,870 --> 00:20:33,120
you also have to have a microphone and a

00:20:30,120 --> 00:20:34,710
speaker now the microphone that I happen

00:20:33,120 --> 00:20:37,260
to use in this particular case is the

00:20:34,710 --> 00:20:39,810
bluetooth microphone here but a USB

00:20:37,260 --> 00:20:41,520
microphone and an audio amplifier going

00:20:39,810 --> 00:20:45,120
to the speaker works really well

00:20:41,520 --> 00:20:47,730
obviously the audio output on the

00:20:45,120 --> 00:20:49,740
Raspberry Pi in because that's the one I

00:20:47,730 --> 00:20:52,890
happen to be using in this case the

00:20:49,740 --> 00:20:55,050
audio output is not amplified it's made

00:20:52,890 --> 00:20:56,970
for headphones so you're going to have

00:20:55,050 --> 00:20:58,530
to run it into like a Class B amplifier

00:20:56,970 --> 00:21:02,370
if you want to be able to actually have

00:20:58,530 --> 00:21:05,250
somebody hear what it says the Bluetooth

00:21:02,370 --> 00:21:08,130
speaker and actually this device that I

00:21:05,250 --> 00:21:10,710
have is a it's for cellphones you can

00:21:08,130 --> 00:21:13,440
it's then a microphone and speaker but I

00:21:10,710 --> 00:21:16,440
found there's a latency in what it takes

00:21:13,440 --> 00:21:19,350
to wake it up so you know you can say

00:21:16,440 --> 00:21:21,870
Alexa and it'll actually cut off it will

00:21:19,350 --> 00:21:23,220
clip it a little bit so you have to kind

00:21:21,870 --> 00:21:25,550
of wait for it to wake up and then say

00:21:23,220 --> 00:21:27,990
Alexa again and then it'll be alright

00:21:25,550 --> 00:21:30,120
and that's just a the nature of the

00:21:27,990 --> 00:21:32,130
Bluetooth speaker obviously if you're

00:21:30,120 --> 00:21:34,050
using hard line connections either

00:21:32,130 --> 00:21:36,480
speakers or microphones it's a little

00:21:34,050 --> 00:21:38,640
bit better than that obviously you've

00:21:36,480 --> 00:21:40,740
got the usual power supply ethernet SD

00:21:38,640 --> 00:21:42,030
card etc etc that you have to have in

00:21:40,740 --> 00:21:44,700
order to get the platform up and running

00:21:42,030 --> 00:21:46,890
in my case as I said I'm using Raspberry

00:21:44,700 --> 00:21:51,450
Pi 3 because it came with bluetooth and

00:21:46,890 --> 00:21:53,880
it came with Wi-Fi built into it there's

00:21:51,450 --> 00:21:55,980
not really a whole lot of processing

00:21:53,880 --> 00:21:58,140
that has to be done on the Raspberry Pi

00:21:55,980 --> 00:22:00,660
3 so you could have easily used a

00:21:58,140 --> 00:22:03,380
BeagleBone green Wireless or the new

00:22:00,660 --> 00:22:05,000
BeagleBone black wireless Azure

00:22:03,380 --> 00:22:08,720
you do boards or any of those platforms

00:22:05,000 --> 00:22:10,549
that have Wi-Fi built into them but it

00:22:08,720 --> 00:22:11,929
just happened that I've got like a dozen

00:22:10,549 --> 00:22:15,130
of these things sitting around the house

00:22:11,929 --> 00:22:18,470
so it was a convenient platform for me

00:22:15,130 --> 00:22:20,169
so setting up the Raspberry Pi this is

00:22:18,470 --> 00:22:23,360
an interesting challenge because

00:22:20,169 --> 00:22:25,130
obviously you get raspbian and you start

00:22:23,360 --> 00:22:29,990
off you can actually use raspbian or you

00:22:25,130 --> 00:22:32,539
can use Ubuntu mate but the raspbian has

00:22:29,990 --> 00:22:34,370
a completely worked path so there are

00:22:32,539 --> 00:22:36,020
several places that you can find on the

00:22:34,370 --> 00:22:37,220
web that you will actually kind of walk

00:22:36,020 --> 00:22:39,740
you through the process of getting

00:22:37,220 --> 00:22:41,630
raspbian set up in order to be able to

00:22:39,740 --> 00:22:44,870
do the voice recognition piece and to

00:22:41,630 --> 00:22:47,840
run Alexa because the Alexa sample app

00:22:44,870 --> 00:22:50,570
happens to use both no js' and it uses

00:22:47,840 --> 00:22:53,510
java so it means you got to get the Java

00:22:50,570 --> 00:22:56,360
8 engine down on the platform and that

00:22:53,510 --> 00:22:58,789
of course takes quite a bit of not only

00:22:56,360 --> 00:23:00,470
disk space on the platform but also a

00:22:58,789 --> 00:23:03,200
lot of time and a fairly reasonable

00:23:00,470 --> 00:23:07,460
internet connection in order to do it in

00:23:03,200 --> 00:23:09,500
your lifetime so the ability to make

00:23:07,460 --> 00:23:11,059
sure that all this happens obviously

00:23:09,500 --> 00:23:12,890
it's pretty straightforward once you

00:23:11,059 --> 00:23:14,029
start to run the script and we'll show

00:23:12,890 --> 00:23:17,090
you what that script looks like here at

00:23:14,029 --> 00:23:19,190
a moment once it starts to run it takes

00:23:17,090 --> 00:23:21,200
about an hour and a half to two hours on

00:23:19,190 --> 00:23:24,010
a fast internet connection to get the

00:23:21,200 --> 00:23:26,679
Raspberry Pi set up and ready to go the

00:23:24,010 --> 00:23:29,690
since it uses the Debian distribution

00:23:26,679 --> 00:23:33,620
anything that runs a flavor of Jesse

00:23:29,690 --> 00:23:35,179
will probably work just fine as well now

00:23:33,620 --> 00:23:39,020
it might particular case I happen to be

00:23:35,179 --> 00:23:42,770
using this little gizmo this is a

00:23:39,020 --> 00:23:45,049
Raspberry Pi laptop so it's a kit that

00:23:42,770 --> 00:23:47,570
my wife asked me what I wanted for

00:23:45,049 --> 00:23:51,200
Christmas when I go this was cool

00:23:47,570 --> 00:23:53,090
so she said it she bought it and of

00:23:51,200 --> 00:23:54,860
course they have two flavors they have

00:23:53,090 --> 00:23:56,390
the gray one and then they have this

00:23:54,860 --> 00:23:57,980
lime green one and of course I went with

00:23:56,390 --> 00:24:01,610
a lime green because it's different

00:23:57,980 --> 00:24:03,799
right so this particular device it will

00:24:01,610 --> 00:24:06,770
actually power the Raspberry Pi 3 for

00:24:03,799 --> 00:24:12,409
about 10 hours off of its battery the

00:24:06,770 --> 00:24:15,860
screen is a 1366 by 768 display so it's

00:24:12,409 --> 00:24:16,960
a fairly reasonable display size and it

00:24:15,860 --> 00:24:19,870
builds the keyboard

00:24:16,960 --> 00:24:22,720
mouth and the touchpad and everything

00:24:19,870 --> 00:24:25,720
all right off the USB so it's actually a

00:24:22,720 --> 00:24:27,549
pretty interesting approach and this

00:24:25,720 --> 00:24:28,950
made it easy for me to sit there and

00:24:27,549 --> 00:24:30,730
interact with the Raspberry Pi

00:24:28,950 --> 00:24:32,890
because normally when you're dealing

00:24:30,730 --> 00:24:35,350
with the PI if you first power it up

00:24:32,890 --> 00:24:37,720
you got to plug in HDMI and a keyboard

00:24:35,350 --> 00:24:39,100
and a mouse and get all the cabling and

00:24:37,720 --> 00:24:42,760
everything set up and that's kind of a

00:24:39,100 --> 00:24:44,950
hassle so this because I had a I had

00:24:42,760 --> 00:24:46,870
ready access to some of my robotics

00:24:44,950 --> 00:24:49,240
students because I'm a mentor on FIRST

00:24:46,870 --> 00:24:50,230
robotics team I had a robotic student

00:24:49,240 --> 00:24:51,580
was sitting around twiddling your thumbs

00:24:50,230 --> 00:24:53,409
she didn't have anything else to do as

00:24:51,580 --> 00:24:54,850
hey you want to build a laptop sure

00:24:53,409 --> 00:24:57,940
let's come over here and I'll steal the

00:24:54,850 --> 00:25:01,720
laptop so I used slave I mean student

00:24:57,940 --> 00:25:02,559
labor to put it together for me and then

00:25:01,720 --> 00:25:04,210
I had to go through and verify

00:25:02,559 --> 00:25:07,630
everything was done right but hey that

00:25:04,210 --> 00:25:10,210
was kind of cool as well all right so

00:25:07,630 --> 00:25:12,600
next we need to clone the Alexa sample

00:25:10,210 --> 00:25:15,850
application and again it's out at github

00:25:12,600 --> 00:25:19,090
we can do a git clone of that repo and

00:25:15,850 --> 00:25:21,789
that will bring down all the sources for

00:25:19,090 --> 00:25:24,640
the audio recognition engine the wait

00:25:21,789 --> 00:25:26,559
word engine and the client that actually

00:25:24,640 --> 00:25:29,289
implements the services that you're

00:25:26,559 --> 00:25:31,529
going to have up in the cloud so that

00:25:29,289 --> 00:25:34,630
will then ultimately connect up to

00:25:31,529 --> 00:25:35,980
Amazon and establish its connection in

00:25:34,630 --> 00:25:39,309
this verification and all that sort of

00:25:35,980 --> 00:25:42,279
stuff but first before we can do that we

00:25:39,309 --> 00:25:44,559
have to pull down the credentials for

00:25:42,279 --> 00:25:46,360
the device because we're going to be

00:25:44,559 --> 00:25:48,669
actually going up into Amazon Cloud

00:25:46,360 --> 00:25:50,980
System they're not too keen about us

00:25:48,669 --> 00:25:52,059
just allowing any device up there they

00:25:50,980 --> 00:25:53,710
want to make sure that it's got

00:25:52,059 --> 00:25:56,559
certificates and it has security

00:25:53,710 --> 00:25:58,539
passwords and it has the whole Schmeer

00:25:56,559 --> 00:26:00,789
in order to be able to access their

00:25:58,539 --> 00:26:01,960
cloud system and there's a couple of

00:26:00,789 --> 00:26:04,299
other things that you end up having to

00:26:01,960 --> 00:26:06,399
do which we'll talk about here in a

00:26:04,299 --> 00:26:08,919
moment so we got to register the device

00:26:06,399 --> 00:26:12,850
now when you go into the Amazon Cloud

00:26:08,919 --> 00:26:16,360
system there is an option it says Alexa

00:26:12,850 --> 00:26:18,000
and if you click on Alexa it will then

00:26:16,360 --> 00:26:20,409
show you a couple of different

00:26:18,000 --> 00:26:22,720
characters here this particular option

00:26:20,409 --> 00:26:27,549
is the one you want which is to go into

00:26:22,720 --> 00:26:29,350
the Amazon voice service you will click

00:26:27,549 --> 00:26:30,750
on there get started button there and

00:26:29,350 --> 00:26:33,330
then that will bring you

00:26:30,750 --> 00:26:35,130
to a new page called register a device

00:26:33,330 --> 00:26:37,410
or register a product type

00:26:35,130 --> 00:26:39,750
so in registering the product type you

00:26:37,410 --> 00:26:42,000
have to give your device an ID whatever

00:26:39,750 --> 00:26:43,940
name you want is fine I think I call

00:26:42,000 --> 00:26:47,670
mine pie top echo or something like that

00:26:43,940 --> 00:26:49,620
and then click Next then it's going to

00:26:47,670 --> 00:26:51,420
take you to a security screen that then

00:26:49,620 --> 00:26:55,440
asks you to create a new security

00:26:51,420 --> 00:26:57,870
profile now the security profile is not

00:26:55,440 --> 00:27:00,660
as scary as it sounds basically they're

00:26:57,870 --> 00:27:02,460
looking for a name and a description for

00:27:00,660 --> 00:27:04,320
the device it's a security profile

00:27:02,460 --> 00:27:07,200
description and I'm looking at that

00:27:04,320 --> 00:27:10,350
going security profile description what

00:27:07,200 --> 00:27:12,960
does that mean does that mean that I'm

00:27:10,350 --> 00:27:15,150
going to say what kinds of services it

00:27:12,960 --> 00:27:17,580
can do what does that mean it actually

00:27:15,150 --> 00:27:20,490
just means they want you to in Word say

00:27:17,580 --> 00:27:23,460
this is a PI laptop or something similar

00:27:20,490 --> 00:27:27,600
to that so it really isn't nearly as

00:27:23,460 --> 00:27:30,840
scary as it sounds then once we collect

00:27:27,600 --> 00:27:33,480
next it'll then generate a series of

00:27:30,840 --> 00:27:36,870
credentials so the credentials that it

00:27:33,480 --> 00:27:38,670
produces as screen washed out the

00:27:36,870 --> 00:27:40,200
credentials that it produces there's a

00:27:38,670 --> 00:27:43,050
whole bunch of stuff that's entered the

00:27:40,200 --> 00:27:45,630
blue here that goes with your security

00:27:43,050 --> 00:27:47,580
profile ID your client ID and then the

00:27:45,630 --> 00:27:50,790
client secret which is basically the

00:27:47,580 --> 00:27:51,540
certificate that they generate and what

00:27:50,790 --> 00:27:53,220
you're going to have to do is you're

00:27:51,540 --> 00:27:56,250
going to have to copy this stuff out of

00:27:53,220 --> 00:27:58,020
this webpage and copy it into the Alexa

00:27:56,250 --> 00:28:02,010
build environment in order for you to be

00:27:58,020 --> 00:28:06,390
able to authenticate now that gets you

00:28:02,010 --> 00:28:09,480
at least part of the way there now I

00:28:06,390 --> 00:28:12,240
need to register the device so I have to

00:28:09,480 --> 00:28:14,910
describe the device specify what kind of

00:28:12,240 --> 00:28:17,010
category it is and they have consumer

00:28:14,910 --> 00:28:19,650
electronics and TVs and other kinds of

00:28:17,010 --> 00:28:21,360
categories this one I couldn't find a

00:28:19,650 --> 00:28:23,090
category that matched what I wanted to

00:28:21,360 --> 00:28:26,640
do with it so I just called it other and

00:28:23,090 --> 00:28:28,350
you have to give it a description and in

00:28:26,640 --> 00:28:30,210
this particular case they actually have

00:28:28,350 --> 00:28:32,910
an option for uploading a picture of it

00:28:30,210 --> 00:28:34,380
so it's like oh cool I'll upload a

00:28:32,910 --> 00:28:37,320
picture and then I'll have an icon that

00:28:34,380 --> 00:28:38,700
sounds like a good idea they have a

00:28:37,320 --> 00:28:40,800
couple of other questions that they ask

00:28:38,700 --> 00:28:43,050
you and one of the major ones here is do

00:28:40,800 --> 00:28:43,960
you want to have access to Amazon music

00:28:43,050 --> 00:28:46,450
service

00:28:43,960 --> 00:28:48,070
if you want to have access to Amazon

00:28:46,450 --> 00:28:51,820
music services so if I want to say you

00:28:48,070 --> 00:28:53,919
know play you know Fall Out Boy's then I

00:28:51,820 --> 00:28:56,410
have to sign an extra piece of paper

00:28:53,919 --> 00:28:58,870
basically obviously it's digital but

00:28:56,410 --> 00:29:00,580
it's going to then ask me for a whole

00:28:58,870 --> 00:29:02,200
bunch of additional questions a whole

00:29:00,580 --> 00:29:04,720
another form that has to be filled out

00:29:02,200 --> 00:29:07,780
that deals specifically with accessing

00:29:04,720 --> 00:29:09,640
Amazon music services so if you want to

00:29:07,780 --> 00:29:11,200
do Amazon music services on the device

00:29:09,640 --> 00:29:13,150
you got to go through some extra hoops

00:29:11,200 --> 00:29:14,380
but that's simply because of all the

00:29:13,150 --> 00:29:16,600
copyrights and everything that are

00:29:14,380 --> 00:29:18,700
associated with music these days if you

00:29:16,600 --> 00:29:20,530
don't care about Amazon music services

00:29:18,700 --> 00:29:24,039
then you can skip that whole page don't

00:29:20,530 --> 00:29:27,610
check the box and everything's good now

00:29:24,039 --> 00:29:28,809
what will also happen and this is one of

00:29:27,610 --> 00:29:32,980
the things that's a little confusing

00:29:28,809 --> 00:29:35,140
about the way the echo works and that is

00:29:32,980 --> 00:29:37,510
when you're using Amazon of the Alexa

00:29:35,140 --> 00:29:40,390
voice services it's actually going to

00:29:37,510 --> 00:29:43,960
reach back up into the cloud and present

00:29:40,390 --> 00:29:46,210
security credentials but what's going to

00:29:43,960 --> 00:29:48,280
happen is when it asked the cloud for

00:29:46,210 --> 00:29:50,020
the security credentials the cloud is

00:29:48,280 --> 00:29:51,669
then going to respond back here's your

00:29:50,020 --> 00:29:54,880
security credentials and this is where

00:29:51,669 --> 00:29:58,390
you should go to find them and so the

00:29:54,880 --> 00:30:00,460
client that runs in a BSD on the on the

00:29:58,390 --> 00:30:02,530
local device then has to talk to this

00:30:00,460 --> 00:30:06,429
server that is now in communications

00:30:02,530 --> 00:30:11,950
with Amazon so it has these redirect

00:30:06,429 --> 00:30:14,110
URLs so there's an Origin URL which if

00:30:11,950 --> 00:30:16,659
you go through the original security

00:30:14,110 --> 00:30:21,100
piece of it so if you go back up here to

00:30:16,659 --> 00:30:25,630
the actual device there's an option in

00:30:21,100 --> 00:30:28,150
the security profile if you click on web

00:30:25,630 --> 00:30:30,760
settings there there is an option that

00:30:28,150 --> 00:30:35,350
has this mysterious thing called you a

00:30:30,760 --> 00:30:37,990
redirect URL and it's not entirely clear

00:30:35,350 --> 00:30:41,620
exactly what that is they don't describe

00:30:37,990 --> 00:30:45,640
what it is they just simply say edit ok

00:30:41,620 --> 00:30:46,900
now what what we found is that what

00:30:45,640 --> 00:30:50,340
they're really looking for is they're

00:30:46,900 --> 00:30:54,520
looking for the port number of where the

00:30:50,340 --> 00:30:56,230
connection to Amazon is so you're going

00:30:54,520 --> 00:30:57,370
to connect to Amazon you'll present your

00:30:56,230 --> 00:31:00,940
credentials it'll then

00:30:57,370 --> 00:31:03,190
down a thing this redirect URL to say

00:31:00,940 --> 00:31:06,700
these are the places you are allowed to

00:31:03,190 --> 00:31:08,230
connect to so it's another security step

00:31:06,700 --> 00:31:10,270
there to make sure that you don't just

00:31:08,230 --> 00:31:12,370
have arbitrary devices hooking up into

00:31:10,270 --> 00:31:13,570
Amazon you only have those devices that

00:31:12,370 --> 00:31:16,840
have actually been authorized

00:31:13,570 --> 00:31:20,559
so these redirect URLs there's an Origin

00:31:16,840 --> 00:31:22,870
URL and then there is a return URL that

00:31:20,559 --> 00:31:26,980
has the authentication pieces built into

00:31:22,870 --> 00:31:28,780
it so those have to be filled in and the

00:31:26,980 --> 00:31:31,750
first time I tried this it's saying oh I

00:31:28,780 --> 00:31:34,120
can't connect to do whatever and it says

00:31:31,750 --> 00:31:37,570
enter in your redirect URL and I go

00:31:34,120 --> 00:31:39,610
what's a redirect URL and so after quite

00:31:37,570 --> 00:31:41,290
a bit of searching and poking around in

00:31:39,610 --> 00:31:43,390
various other systems I found out what

00:31:41,290 --> 00:31:46,179
the redirect URL is and that actually

00:31:43,390 --> 00:31:48,910
turns out to be the redirect URL that

00:31:46,179 --> 00:31:52,470
you need to make in these things work so

00:31:48,910 --> 00:31:56,460
it's secure sort of kind of maybe not

00:31:52,470 --> 00:31:56,460
it's just a different process

00:32:02,650 --> 00:32:04,710
you

00:35:15,410 --> 00:35:18,440
windows so we start up the wakeboard

00:35:17,360 --> 00:35:20,329
engine action

00:35:18,440 --> 00:35:22,910
start up in order you start the web

00:35:20,329 --> 00:35:25,790
service client then you start the no djf

00:35:22,910 --> 00:35:28,310
skill implementation then you start the

00:35:25,790 --> 00:35:30,770
wake engine and then assuming that all

00:35:28,310 --> 00:35:33,770
of that is working and that you have a

00:35:30,770 --> 00:35:35,750
working speaker and microphone as soon

00:35:33,770 --> 00:35:39,470
as it does this this will then actually

00:35:35,750 --> 00:35:42,230
start a connection up to Amazon and

00:35:39,470 --> 00:35:45,680
it'll ask you do you want me to use your

00:35:42,230 --> 00:35:49,190
default browser to connect to Amazon if

00:35:45,680 --> 00:35:52,099
you say yes then it'll actually allow

00:35:49,190 --> 00:35:53,990
you to login to Amazon and then that's

00:35:52,099 --> 00:35:56,480
where I am right now where it said

00:35:53,990 --> 00:35:58,210
Amazon is experiencing problems we'll

00:35:56,480 --> 00:36:01,280
get back to you as soon as we fix them

00:35:58,210 --> 00:36:04,550
which is just what happens not 20

00:36:01,280 --> 00:36:06,650
minutes ago so in the second window this

00:36:04,550 --> 00:36:08,990
is where we're running our application

00:36:06,650 --> 00:36:12,589
so this is the actually this is the Java

00:36:08,990 --> 00:36:14,300
client implementation so it'll then open

00:36:12,589 --> 00:36:16,280
up that boxes please register your

00:36:14,300 --> 00:36:19,250
device by followed by visiting the

00:36:16,280 --> 00:36:21,470
following URL and then it has

00:36:19,250 --> 00:36:24,770
instructions in there for provisioning

00:36:21,470 --> 00:36:26,540
the device then once your browser opens

00:36:24,770 --> 00:36:28,700
you're going to get a warning that the

00:36:26,540 --> 00:36:30,290
connection isn't private and of course

00:36:28,700 --> 00:36:31,310
you have to make your decision as to

00:36:30,290 --> 00:36:34,910
whether or not you're going to allow

00:36:31,310 --> 00:36:37,099
that to happen in the directed page that

00:36:34,910 --> 00:36:38,960
you the patient get directed to you're

00:36:37,099 --> 00:36:41,780
going to log into your Amazon account

00:36:38,960 --> 00:36:43,790
and then once you've done that you'll be

00:36:41,780 --> 00:36:46,069
redirected to something called developer

00:36:43,790 --> 00:36:48,440
authorization so the developer

00:36:46,069 --> 00:36:50,780
authorization page you will then paste

00:36:48,440 --> 00:36:54,970
in the security profile that you used

00:36:50,780 --> 00:36:59,770
before and that little dialog box that

00:36:54,970 --> 00:37:03,440
was popped up here oh there it is sorry

00:36:59,770 --> 00:37:06,560
so that little thing that is the

00:37:03,440 --> 00:37:08,359
provision token and as soon as you've

00:37:06,560 --> 00:37:11,810
got the provision token in there it

00:37:08,359 --> 00:37:14,750
should connect and then say that it has

00:37:11,810 --> 00:37:16,460
accepted the tokens if it accepts the

00:37:14,750 --> 00:37:18,770
tokens than you're live at that point

00:37:16,460 --> 00:37:21,589
and you can start asking for you can

00:37:18,770 --> 00:37:22,940
start asking questions you can then

00:37:21,589 --> 00:37:24,500
minimize the browser because you don't

00:37:22,940 --> 00:37:25,880
need it anymore actually you can

00:37:24,500 --> 00:37:26,820
minimize all the windows because you

00:37:25,880 --> 00:37:28,470
don't need them anymore

00:37:26,820 --> 00:37:30,050
or you don't want to kill them but you

00:37:28,470 --> 00:37:33,690
don't need to be watching them either

00:37:30,050 --> 00:37:36,570
then you start the wakeboard engine and

00:37:33,690 --> 00:37:38,640
in the wakeboard engine you have the

00:37:36,570 --> 00:37:39,900
individual samples of course we talked

00:37:38,640 --> 00:37:42,180
about the wakeboard engines and what

00:37:39,900 --> 00:37:44,970
their dialects are in my particular case

00:37:42,180 --> 00:37:47,430
the KITT AI wakeboard engine seemed to

00:37:44,970 --> 00:37:50,010
work reasonably well now it is possible

00:37:47,430 --> 00:37:53,610
as I said to change the Wake word so if

00:37:50,010 --> 00:37:56,670
you don't like using alexa then they

00:37:53,610 --> 00:37:57,900
have other you there are other options

00:37:56,670 --> 00:37:59,880
you have to actually go in and hack the

00:37:57,900 --> 00:38:01,980
code it's not just like here put the

00:37:59,880 --> 00:38:04,890
wait word here it's not that simple

00:38:01,980 --> 00:38:07,230
but it's not that complicated either and

00:38:04,890 --> 00:38:10,200
then after I had it up and running I

00:38:07,230 --> 00:38:13,470
asked olestra who make me a sandwich and

00:38:10,200 --> 00:38:14,790
then she said okay but she wouldn't do

00:38:13,470 --> 00:38:15,410
it unless I said Alexa make me a

00:38:14,790 --> 00:38:18,600
sandwich

00:38:15,410 --> 00:38:20,400
that's what's required now if everything

00:38:18,600 --> 00:38:23,070
works you've got alexa running and it's

00:38:20,400 --> 00:38:25,590
time to try and button this thing up so

00:38:23,070 --> 00:38:27,510
how do you make it stand alone well

00:38:25,590 --> 00:38:28,950
obviously in my particular case had a

00:38:27,510 --> 00:38:30,930
keyboard mouse and monitor attached to

00:38:28,950 --> 00:38:32,580
this thing so it was pretty easy but

00:38:30,930 --> 00:38:33,840
when we want to actually make this into

00:38:32,580 --> 00:38:36,360
an appliance so we can actually have

00:38:33,840 --> 00:38:38,190
setting out on a desktop or on our

00:38:36,360 --> 00:38:40,080
countertop then we need to do something

00:38:38,190 --> 00:38:41,520
to make it so that it doesn't require

00:38:40,080 --> 00:38:44,400
keyboard mouse and monitor to get

00:38:41,520 --> 00:38:46,380
everything going obviously in this

00:38:44,400 --> 00:38:48,540
particular case I was using type V and C

00:38:46,380 --> 00:38:51,960
just so that I could login to the device

00:38:48,540 --> 00:38:54,420
if I had to the other thing that is now

00:38:51,960 --> 00:38:56,550
much more prevalent and was not

00:38:54,420 --> 00:39:00,870
automatically installed as it turned out

00:38:56,550 --> 00:39:03,510
is avahi one of the things that we have

00:39:00,870 --> 00:39:08,130
of course is once we associate and do a

00:39:03,510 --> 00:39:10,200
DHCP of the Wi-Fi interface then how do

00:39:08,130 --> 00:39:12,960
we know what the IP address is how do we

00:39:10,200 --> 00:39:14,700
deal with all of that so it turns out

00:39:12,960 --> 00:39:16,680
that if you set up the avahi daemon that

00:39:14,700 --> 00:39:19,320
you can just simply refer to it as you

00:39:16,680 --> 00:39:20,850
know pi Alexa or whatever it is you want

00:39:19,320 --> 00:39:23,550
to call it and then it'll be able to

00:39:20,850 --> 00:39:25,700
find it on your local network segment so

00:39:23,550 --> 00:39:28,140
that's one of those little things that

00:39:25,700 --> 00:39:30,030
they don't really talk about much in any

00:39:28,140 --> 00:39:33,180
of the setup documentation anything like

00:39:30,030 --> 00:39:35,420
that that I found if I have no idea what

00:39:33,180 --> 00:39:39,160
its IP address is how do I talk to it

00:39:35,420 --> 00:39:42,310
although he makes it make that possible

00:39:39,160 --> 00:39:45,460
we also have in this case setting up

00:39:42,310 --> 00:39:47,800
type B and C is an auto start so you

00:39:45,460 --> 00:39:49,570
simply plug these files in and then save

00:39:47,800 --> 00:39:51,369
the file and then as soon as the system

00:39:49,570 --> 00:39:53,710
reboots it will automatically start B

00:39:51,369 --> 00:39:55,480
and C and then you can do a type that

00:39:53,710 --> 00:39:58,690
you can actually do the reminisce what I

00:39:55,480 --> 00:40:00,880
use and I just simply go to my Raspberry

00:39:58,690 --> 00:40:03,160
Pi top and it finds it on the network

00:40:00,880 --> 00:40:06,070
using M DNS and lo and behold I'm now

00:40:03,160 --> 00:40:08,680
connected obviously we need to also then

00:40:06,070 --> 00:40:10,930
create the three different processes

00:40:08,680 --> 00:40:12,310
that will then run automatically instead

00:40:10,930 --> 00:40:13,900
of opening them up in Windows you can

00:40:12,310 --> 00:40:17,670
then run them automatically that way as

00:40:13,900 --> 00:40:19,510
well and as soon as all of that is done

00:40:17,670 --> 00:40:22,630
depending on how you want to work

00:40:19,510 --> 00:40:25,630
obviously we can do like I didn't use

00:40:22,630 --> 00:40:27,630
BNC or we can actually have it be just

00:40:25,630 --> 00:40:32,800
normal startup scripts if you're using

00:40:27,630 --> 00:40:34,300
system D private garbage that's not I've

00:40:32,800 --> 00:40:36,640
had lots of problems with system D

00:40:34,300 --> 00:40:38,650
especially on the Raspberry Pi and not

00:40:36,640 --> 00:40:40,089
wanting to start things like SSH servers

00:40:38,650 --> 00:40:42,640
and things that they should normally be

00:40:40,089 --> 00:40:45,369
able to start but have managed to beat

00:40:42,640 --> 00:40:48,310
it into submission at this point so we

00:40:45,369 --> 00:40:51,430
have at this point we have a connection

00:40:48,310 --> 00:40:53,580
we have a very simple skill the skills

00:40:51,430 --> 00:40:56,710
that it knows about out of the box are

00:40:53,580 --> 00:40:59,560
Alexa and then you ask it a question

00:40:56,710 --> 00:41:01,630
where is Uganda and it will then come

00:40:59,560 --> 00:41:04,359
back and tell you Uganda is located in

00:41:01,630 --> 00:41:07,390
Africa so those kinds of skills

00:41:04,359 --> 00:41:10,570
uber is automatically there the pizza

00:41:07,390 --> 00:41:12,220
ordering is already there so all of

00:41:10,570 --> 00:41:14,140
those skills are already there and then

00:41:12,220 --> 00:41:17,260
you can go through the list of skills

00:41:14,140 --> 00:41:19,540
and say I want that skill on my device

00:41:17,260 --> 00:41:21,820
and so you can kind of pick and choose

00:41:19,540 --> 00:41:23,380
which skill sets you want on the device

00:41:21,820 --> 00:41:26,020
and of course you can customize your own

00:41:23,380 --> 00:41:29,230
skills you know this becomes kind of

00:41:26,020 --> 00:41:31,930
that intelligent agent that you didn't

00:41:29,230 --> 00:41:34,060
know you wanted or needed and it sets

00:41:31,930 --> 00:41:37,030
there and just listens for things and if

00:41:34,060 --> 00:41:39,130
you ask it a question it answers which

00:41:37,030 --> 00:41:41,260
some of my neighbors find particularly

00:41:39,130 --> 00:41:43,210
enjoyable they will come over to my

00:41:41,260 --> 00:41:45,520
house just to ask it stupid questions

00:41:43,210 --> 00:41:48,580
and get an answer I go why don't you buy

00:41:45,520 --> 00:41:50,240
your own now yours is green that's much

00:41:48,580 --> 00:41:53,010
more

00:41:50,240 --> 00:41:54,930
so there are lots of opportunities here

00:41:53,010 --> 00:42:03,119
for expanding the system adding new

00:41:54,930 --> 00:42:04,890
skills adding new capabilities what you

00:42:03,119 --> 00:42:08,400
do is you actually import their skill

00:42:04,890 --> 00:42:10,109
into your particular system and you then

00:42:08,400 --> 00:42:12,240
it has a unique name that you can

00:42:10,109 --> 00:42:13,710
provide it so it'll actually use the

00:42:12,240 --> 00:42:15,030
credentials that you have created for

00:42:13,710 --> 00:42:17,430
your particular device and then it

00:42:15,030 --> 00:42:20,190
extends it out it's kind of like you

00:42:17,430 --> 00:42:22,320
know scoping and C++ having a variable

00:42:20,190 --> 00:42:23,700
called Sam isn't Sam anymore it's now

00:42:22,320 --> 00:42:27,869
Sam plus a whole bunch of garbage

00:42:23,700 --> 00:42:29,400
somewhere sort of thing so in this

00:42:27,869 --> 00:42:32,130
particular session of course we did kind

00:42:29,400 --> 00:42:34,680
of a quick whirlwind tour of setting

00:42:32,130 --> 00:42:39,150
Alexa up and getting the Amazon voice

00:42:34,680 --> 00:42:42,240
services interface I really all things

00:42:39,150 --> 00:42:44,190
considered the only significant problem

00:42:42,240 --> 00:42:47,430
that I've run into with this device so

00:42:44,190 --> 00:42:50,849
far has always been you know continues

00:42:47,430 --> 00:42:54,240
to be related to security and our good

00:42:50,849 --> 00:42:55,770
friend Amazon timing out on me and then

00:42:54,240 --> 00:42:57,690
saying it can't do something and they're

00:42:55,770 --> 00:43:00,060
working on it and they'll get back to me

00:42:57,690 --> 00:43:02,010
as soon as they finish which they've

00:43:00,060 --> 00:43:03,660
never gotten back to me so in any case I

00:43:02,010 --> 00:43:08,430
just simply restart it usually and it'll

00:43:03,660 --> 00:43:10,740
it'll reconnect but the the process of

00:43:08,430 --> 00:43:14,970
actually getting the device to be voice

00:43:10,740 --> 00:43:18,900
enabled is really not that hard once we

00:43:14,970 --> 00:43:20,130
get past the initial setup now once you

00:43:18,900 --> 00:43:21,390
get to that point where you've

00:43:20,130 --> 00:43:22,920
registered as a developer you've

00:43:21,390 --> 00:43:24,510
registered the device you've got the

00:43:22,920 --> 00:43:27,210
security credentials and all that sort

00:43:24,510 --> 00:43:28,400
of administrative stuff the actual code

00:43:27,210 --> 00:43:31,619
itself is not that complicated

00:43:28,400 --> 00:43:34,109
especially the node.js stuff if you have

00:43:31,619 --> 00:43:35,849
any facility at all with JavaScript it's

00:43:34,109 --> 00:43:40,680
pretty easy to set up a new interface

00:43:35,849 --> 00:43:42,690
and again it does not require a VM

00:43:40,680 --> 00:43:44,339
setting up in the Amazon Cloud it uses

00:43:42,690 --> 00:43:46,560
their remote procedure call mechanism

00:43:44,339 --> 00:43:49,500
for doing all their voice processing and

00:43:46,560 --> 00:43:51,540
I assume that if you're going to become

00:43:49,500 --> 00:43:53,339
a manufacturer and this is what you're

00:43:51,540 --> 00:43:54,930
going to be selling there's probably

00:43:53,339 --> 00:43:57,810
some money that has to change hands

00:43:54,930 --> 00:43:59,369
somewhere but at least for Hobby work

00:43:57,810 --> 00:44:00,930
there it doesn't really cost you

00:43:59,369 --> 00:44:02,700
anything other than the cost of the

00:44:00,930 --> 00:44:06,180
device itself and

00:44:02,700 --> 00:44:09,810
audio engine the microphone --ax and the

00:44:06,180 --> 00:44:13,050
speaker there is one thing that I found

00:44:09,810 --> 00:44:15,089
that is a bit of a problem and if you

00:44:13,050 --> 00:44:18,119
look in the actual design for the Amazon

00:44:15,089 --> 00:44:20,490
dot the echo dot it actually has like

00:44:18,119 --> 00:44:21,750
six different speakers around six

00:44:20,490 --> 00:44:24,300
different microphones around it and

00:44:21,750 --> 00:44:26,400
there's a lot of additional voice

00:44:24,300 --> 00:44:27,990
processing processing that's done to do

00:44:26,400 --> 00:44:30,839
echo cancellation and things of that

00:44:27,990 --> 00:44:31,859
sort and that doesn't happen on this

00:44:30,839 --> 00:44:35,070
device because I only have one

00:44:31,859 --> 00:44:37,920
microphone that's going to be a problem

00:44:35,070 --> 00:44:40,290
and that is one of the places where you

00:44:37,920 --> 00:44:41,010
know we really need to set up a

00:44:40,290 --> 00:44:43,650
steerable

00:44:41,010 --> 00:44:45,450
phased array of microphones and use beam

00:44:43,650 --> 00:44:47,130
formers in order to be able to do the

00:44:45,450 --> 00:44:50,010
echo cancellation correctly

00:44:47,130 --> 00:44:51,599
maybe that's next year's talking we'll

00:44:50,010 --> 00:44:58,800
talk about beam formers and how we do

00:44:51,599 --> 00:45:01,550
audio processing any questions yeah no

00:44:58,800 --> 00:45:01,550
I'm not familiar with them

00:45:11,240 --> 00:45:13,300
you

00:45:51,640 --> 00:45:56,289
figured out yet but there certainly is

00:45:54,579 --> 00:45:58,869
enough stuff out in the open source to

00:45:56,289 --> 00:46:02,140
be able to voice enable almost anything

00:45:58,869 --> 00:46:12,940
if you really want any other questions

00:46:02,140 --> 00:46:16,900
yeah that that's something that's

00:46:12,940 --> 00:46:20,979
peculiar to this piece of crap that I

00:46:16,900 --> 00:46:22,839
happen to buy and I just noticed that

00:46:20,979 --> 00:46:24,940
what happens is yeah that particular

00:46:22,839 --> 00:46:27,880
unit it just takes too long to wake up

00:46:24,940 --> 00:46:30,819
it shouldn't but it does

00:46:27,880 --> 00:46:32,650
so it also doesn't speak English so

00:46:30,819 --> 00:46:34,239
nonetheless that's probably my mistake

00:46:32,650 --> 00:46:36,969
for having purchased that particular

00:46:34,239 --> 00:46:38,979
unit in the first place the easy way to

00:46:36,969 --> 00:46:41,859
avoid that problem is just simply use

00:46:38,979 --> 00:46:44,170
wired audio wired microphone and you

00:46:41,859 --> 00:46:46,479
know something something like this

00:46:44,170 --> 00:46:49,269
little dongle which is I think it's like

00:46:46,479 --> 00:46:51,819
five to five bucks and it works with

00:46:49,269 --> 00:46:54,039
pulse audio so obviously you're going to

00:46:51,819 --> 00:46:56,289
be doing any audio work on it you have

00:46:54,039 --> 00:46:57,309
to install pulse audio and all the rest

00:46:56,289 --> 00:46:58,839
of the stuff that goes along with that

00:46:57,309 --> 00:47:01,239
for those people who don't like

00:46:58,839 --> 00:47:02,650
pulseaudio that's the solution they have

00:47:01,239 --> 00:47:04,630
worked right now is pulseaudio

00:47:02,650 --> 00:47:09,099
you want to use Jack or something else

00:47:04,630 --> 00:47:11,880
than by all means any other yes next

00:47:09,099 --> 00:47:11,880
question in second

00:47:17,270 --> 00:47:24,440
yes you can yep you don't have to use

00:47:20,520 --> 00:47:24,440
Java mercifully yeah

00:47:30,400 --> 00:47:37,239
ah actually be talking about that on

00:47:34,080 --> 00:47:37,239
[Music]

00:47:37,660 --> 00:47:43,730
they are can

00:47:39,320 --> 00:47:46,520
qgg so that's the one that I've worked

00:47:43,730 --> 00:47:47,480
with so far there may be others but

00:47:46,520 --> 00:47:50,210
that's the one that I found

00:47:47,480 --> 00:47:53,000
documentation on so it's a pub

00:47:50,210 --> 00:48:01,880
sub-standard MQTT type in implementation

00:47:53,000 --> 00:48:06,890
yeah question no no in this particular

00:48:01,880 --> 00:48:10,400
case the see here the wakeboard engine

00:48:06,890 --> 00:48:13,790
is not Java the client in this case was

00:48:10,400 --> 00:48:15,410
Java but that was just the choice of the

00:48:13,790 --> 00:48:18,080
implementation that didn't have to be in

00:48:15,410 --> 00:48:20,890
Java and then the the skills are done in

00:48:18,080 --> 00:48:20,890
either Java or node.js

00:48:27,970 --> 00:48:34,690
at this point I'm getting about 65

00:48:31,119 --> 00:48:36,850
percent success it'll come up most of

00:48:34,690 --> 00:48:39,220
the time unfortunately not all of the

00:48:36,850 --> 00:48:41,680
time but I'm trying to figure out

00:48:39,220 --> 00:48:43,720
exactly why it's there's some weird

00:48:41,680 --> 00:48:45,310
timing thing in the Raspberry Pi when it

00:48:43,720 --> 00:48:48,160
starts to bring up all these individual

00:48:45,310 --> 00:48:49,300
engines remember that's the problem if I

00:48:48,160 --> 00:48:49,840
would say there's a problem the

00:48:49,300 --> 00:48:52,600
Raspberry Pi

00:48:49,840 --> 00:48:53,770
unlike the BeagleBone that has an emmc

00:48:52,600 --> 00:48:56,740
built into it

00:48:53,770 --> 00:48:59,440
Raspberry Pi relies on the SD card and

00:48:56,740 --> 00:49:02,380
any you know oxidation on the SD card

00:48:59,440 --> 00:49:06,130
any jostling of the device when it's

00:49:02,380 --> 00:49:07,750
coming up you know if your dog barks

00:49:06,130 --> 00:49:10,300
really loudly I don't know whatever it

00:49:07,750 --> 00:49:12,640
is but something happens and sometimes

00:49:10,300 --> 00:49:14,500
it doesn't start up but if you were

00:49:12,640 --> 00:49:17,470
doing this on something that had a real

00:49:14,500 --> 00:49:20,170
emmc implementation with a much more

00:49:17,470 --> 00:49:22,230
solid sort of boot device than I suspect

00:49:20,170 --> 00:49:31,570
it would probably be much more reliable

00:49:22,230 --> 00:49:34,690
yeah mm-hm yeah now the the native

00:49:31,570 --> 00:49:36,460
language understanding piece of it there

00:49:34,690 --> 00:49:38,320
is some tweaks that you can do I don't

00:49:36,460 --> 00:49:41,560
know exactly the level that you can

00:49:38,320 --> 00:49:43,240
tweak it for but there are some as I

00:49:41,560 --> 00:49:45,670
said in the case of the two different

00:49:43,240 --> 00:49:47,050
wait word engines there was one of them

00:49:45,670 --> 00:49:48,340
that worked reasonably well for my

00:49:47,050 --> 00:49:49,990
dialect one of them that worked

00:49:48,340 --> 00:49:52,119
reasonably well for my wife's dialect

00:49:49,990 --> 00:49:53,500
from the Northeast so you may have to

00:49:52,119 --> 00:49:55,000
experiment around a little bit to figure

00:49:53,500 --> 00:49:57,700
out which one's going to do the best job

00:49:55,000 --> 00:49:59,290
for you but they definitely they have at

00:49:57,700 --> 00:50:07,060
least two of them so far hopefully

00:49:59,290 --> 00:50:09,090
there'll be more sorry I'm sorry about

00:50:07,060 --> 00:50:09,090
that

00:50:12,410 --> 00:50:17,330
there's no real training sequence that

00:50:14,869 --> 00:50:19,160
I've been able to find there may in fact

00:50:17,330 --> 00:50:21,800
be something that you can do inside the

00:50:19,160 --> 00:50:23,270
wakeboard engine itself to train it to

00:50:21,800 --> 00:50:27,560
be better at being able to recognize

00:50:23,270 --> 00:50:30,920
things because I found that words that

00:50:27,560 --> 00:50:35,359
sound like Alexa will also set it off

00:50:30,920 --> 00:50:37,130
and so you know it's there was something

00:50:35,359 --> 00:50:39,560
some technical discussion I was having

00:50:37,130 --> 00:50:41,990
to somebody on the phone and I said this

00:50:39,560 --> 00:50:43,400
sequence and it woke up and I go oh

00:50:41,990 --> 00:50:45,380
that's interesting I wouldn't have

00:50:43,400 --> 00:50:48,710
expected it to have done that but it did

00:50:45,380 --> 00:50:50,390
so as far as the wakeboard engine is

00:50:48,710 --> 00:50:52,250
concerned I'm sure there's some tuning

00:50:50,390 --> 00:50:54,830
that you can do to it but there's no

00:50:52,250 --> 00:50:56,480
particular training or calibration cycle

00:50:54,830 --> 00:50:57,740
that you have to go through so unlike a

00:50:56,480 --> 00:50:59,630
lot of what we see with voice

00:50:57,740 --> 00:51:02,599
recognition systems you don't have to

00:50:59,630 --> 00:51:04,190
train it to understand you which is one

00:51:02,599 --> 00:51:05,810
of the reasons why they send all this

00:51:04,190 --> 00:51:07,520
stuff up into the cloud because they are

00:51:05,810 --> 00:51:09,260
going to have a lot of horsepower up

00:51:07,520 --> 00:51:13,420
there in order to be able to do the

00:51:09,260 --> 00:51:13,420
audio processing yeah

00:51:19,920 --> 00:51:28,660
if you the answer I suspect you think

00:51:25,600 --> 00:51:30,400
through I think the answer is yes what

00:51:28,660 --> 00:51:33,520
you can do is you can use the Alexis

00:51:30,400 --> 00:51:53,220
peace process processing and the skill

00:51:33,520 --> 00:51:53,220
is to simply return you the text correct

00:52:00,170 --> 00:52:04,529
no no it's not at all is not required to

00:52:02,819 --> 00:52:06,809
be an audio response thing because I can

00:52:04,529 --> 00:52:08,910
say Alexa you know set the nest

00:52:06,809 --> 00:52:10,920
thermostat 70 degrees and the nest

00:52:08,910 --> 00:52:13,799
thermostat then turns over to 70 degrees

00:52:10,920 --> 00:52:17,269
so you can have it do anything in terms

00:52:13,799 --> 00:52:17,269
of the way you implement your skill

00:52:21,289 --> 00:52:24,289
mm-hmm

00:52:26,760 --> 00:52:30,360
oh yeah yeah yeah so you can have the

00:52:29,070 --> 00:52:32,100
skill come right back to your local

00:52:30,360 --> 00:52:35,580
device and your local device implements

00:52:32,100 --> 00:52:37,380
the skill so if you say you know Alexa

00:52:35,580 --> 00:52:39,300
do blah blah blah blah blah and the

00:52:37,380 --> 00:52:42,690
skill that you have set up is to simply

00:52:39,300 --> 00:52:44,880
send the process speech the actual text

00:52:42,690 --> 00:52:47,220
out of the speech to text recognition

00:52:44,880 --> 00:52:50,970
back to you then absolutely you can do

00:52:47,220 --> 00:52:56,910
that less yeah we're getting close last

00:52:50,970 --> 00:52:59,610
question a problem yeah

00:52:56,910 --> 00:53:01,020
but it turns out that in the web setup

00:52:59,610 --> 00:53:04,340
they actually have an entry there for

00:53:01,020 --> 00:53:06,270
proxies so if you do use a proxy it will

00:53:04,340 --> 00:53:07,620
basically and when you're setting up the

00:53:06,270 --> 00:53:22,560
device you'll tell it that it's got a

00:53:07,620 --> 00:53:26,160
proxy yeah I have not done the reverse

00:53:22,560 --> 00:53:28,130
engineer on the actual firmware yet and

00:53:26,160 --> 00:53:30,750
I would never I would never do that

00:53:28,130 --> 00:53:34,830
because that would be a violation of the

00:53:30,750 --> 00:53:37,400
Digital Millennium Copyright Act that's

00:53:34,830 --> 00:53:37,400
it thanks guys

00:53:38,440 --> 00:53:41,519

YouTube URL: https://www.youtube.com/watch?v=v7cnNauG9VY


