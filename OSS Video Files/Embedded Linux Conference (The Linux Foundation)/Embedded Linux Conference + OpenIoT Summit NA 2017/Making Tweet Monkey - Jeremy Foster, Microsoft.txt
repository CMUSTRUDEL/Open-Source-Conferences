Title: Making Tweet Monkey - Jeremy Foster, Microsoft
Publication date: 2017-02-27
Playlist: Embedded Linux Conference + OpenIoT Summit NA 2017
Description: 
	Making Tweet Monkey - Jeremy Foster, Microsoft

Tweet Monkey is a hilariously simple maker project that anyone and their mother can make. Tweet Monkey responds to tweets. Send a tweet using #tweetmonkey and he dances! Usually, creating an IoT projects means dusting off your college reference book on the C language and trying to wrangle a low-level language to do modern, high-level tasks. In this course, however, we're going to talk about the hardware devices available that enable writing JavaScript with Node.js to control motors, sensors, and switches while simultaneously using easy and modern node modules. We'll walk all the way through the creation of Tweet Monkey including modifying the monkey, setting up a Raspberry Pi 2, wiring a circuit, and writing the code to access Twitter's streaming API using Node.js. Absolute beginners, students, and kids are completely welcome.

About Jeremy Foster
I studied Computer Engineering and Math, and have thoroughly enjoyed my career course ever since - primarily teaching and software development and primarily on the web stack. I gained experience in education, aerospace manufacturing, and insurance, and eventually joined Microsoft with the goal of informing and inspiring software developers. I try hard to keep up with audiences via my blog at codefoster.com and my Twitter feed @codefoster.
Captions: 
	00:00:00,030 --> 00:00:05,250
okay let's go ahead and get started and

00:00:02,490 --> 00:00:08,400
I think that the rest of the folks can

00:00:05,250 --> 00:00:12,900
trickle in and catch the context as we

00:00:08,400 --> 00:00:15,599
go this is the making tweet monkey

00:00:12,900 --> 00:00:17,220
session so I think the title is distinct

00:00:15,599 --> 00:00:18,210
enough you probably didn't get confused

00:00:17,220 --> 00:00:21,420
about where you're at

00:00:18,210 --> 00:00:23,539
I am code foster I go by code foster

00:00:21,420 --> 00:00:27,240
online my name is Jeremy Foster I'm a

00:00:23,539 --> 00:00:30,300
software engineer at Microsoft and my

00:00:27,240 --> 00:00:32,340
job is working with the community with

00:00:30,300 --> 00:00:34,649
developers in the community I'm up in

00:00:32,340 --> 00:00:37,500
the Seattle area actually Portland is

00:00:34,649 --> 00:00:40,820
one of my jurisdictions so I'm kind of

00:00:37,500 --> 00:00:43,710
over Seattle and Portland and Boise and

00:00:40,820 --> 00:00:46,500
this is a great part of the world to be

00:00:43,710 --> 00:00:48,090
to be in this is kind of a fun place I

00:00:46,500 --> 00:00:49,579
really like all three of those

00:00:48,090 --> 00:00:52,980
communities for their own unique

00:00:49,579 --> 00:00:56,460
contributions to development making

00:00:52,980 --> 00:00:58,829
tweet monkey as a topic is a bit of a

00:00:56,460 --> 00:01:00,629
unique one for this conference I think I

00:00:58,829 --> 00:01:02,730
actually submitted a bunch of sessions

00:01:00,629 --> 00:01:05,180
and this is the one that they chose so I

00:01:02,730 --> 00:01:07,920
guess we're talking about tweet monkey

00:01:05,180 --> 00:01:12,240
and it's kind of a fun project I

00:01:07,920 --> 00:01:14,790
normally use tweet monkey for younger

00:01:12,240 --> 00:01:17,220
and and beginning crowds but if you're

00:01:14,790 --> 00:01:20,009
like me whenever I'm working in a new

00:01:17,220 --> 00:01:22,770
space with either a new platform or in

00:01:20,009 --> 00:01:25,770
the new paradigm or whatever I love the

00:01:22,770 --> 00:01:28,229
really really simple projects that help

00:01:25,770 --> 00:01:30,240
me to just really grasp the concepts and

00:01:28,229 --> 00:01:33,540
I you I designed the tweet monkey

00:01:30,240 --> 00:01:35,250
project so that it was fun so that I'm

00:01:33,540 --> 00:01:37,229
gonna be able to talk to newbies about

00:01:35,250 --> 00:01:39,000
it and it's gonna you know kind of pull

00:01:37,229 --> 00:01:41,340
them in an easy easy thing to climb on

00:01:39,000 --> 00:01:42,930
top of but it also involves a lot of

00:01:41,340 --> 00:01:45,259
different concepts

00:01:42,930 --> 00:01:48,780
in the IOT in the embedded space

00:01:45,259 --> 00:01:51,780
essentially and and really invites new

00:01:48,780 --> 00:01:54,299
and beginner developers in to IOT and

00:01:51,780 --> 00:01:56,390
gets their imagination working the fact

00:01:54,299 --> 00:01:59,460
that I'm working with a monkey here is

00:01:56,390 --> 00:02:01,619
completely incidental it could be most

00:01:59,460 --> 00:02:04,680
any device that you find around so when

00:02:01,619 --> 00:02:06,930
I talked to these student groups in like

00:02:04,680 --> 00:02:09,840
to say as young as middle school I asked

00:02:06,930 --> 00:02:12,650
them what kinds of devices they have in

00:02:09,840 --> 00:02:14,659
their rooms that take batteries and

00:02:12,650 --> 00:02:17,180
if it takes batteries it's an electronic

00:02:14,659 --> 00:02:21,049
device and it's something that we could

00:02:17,180 --> 00:02:24,409
control so that's fun yeah the slides

00:02:21,049 --> 00:02:25,819
that you're gonna see today are are just

00:02:24,409 --> 00:02:27,500
basically placeholder slides

00:02:25,819 --> 00:02:30,409
everything's gonna be referencing a

00:02:27,500 --> 00:02:32,930
github repository and so if you just

00:02:30,409 --> 00:02:34,189
know where my github repository is which

00:02:32,930 --> 00:02:37,220
is easy to remember because it's

00:02:34,189 --> 00:02:39,470
github.com slash code foster if you go

00:02:37,220 --> 00:02:41,450
to slash tweet monkey that's the root of

00:02:39,470 --> 00:02:43,400
all of this and all of my Doc's are up

00:02:41,450 --> 00:02:46,370
there the the step by step for the

00:02:43,400 --> 00:02:48,230
entire project as well as all the code

00:02:46,370 --> 00:02:50,420
that you can run on the project as well

00:02:48,230 --> 00:02:51,980
as a list of everything that you might

00:02:50,420 --> 00:02:53,569
want to buy if you wanted to put

00:02:51,980 --> 00:02:55,040
together a tweet monkey of your own or

00:02:53,569 --> 00:02:58,069
say you have kids that want to do that

00:02:55,040 --> 00:03:01,340
so you don't really need to save the

00:02:58,069 --> 00:03:03,700
slides they're just a transition point

00:03:01,340 --> 00:03:07,250
to keep us kind of on track

00:03:03,700 --> 00:03:09,379
Who am I like I said I'm code foster you

00:03:07,250 --> 00:03:11,950
can find me online at code foster comm

00:03:09,379 --> 00:03:15,019
and also on twitter at code foster I

00:03:11,950 --> 00:03:17,569
have a presence on github and up murder

00:03:15,019 --> 00:03:19,910
and probably all of the other social

00:03:17,569 --> 00:03:22,310
areas but as many times as I could I

00:03:19,910 --> 00:03:24,859
tried to have code Foster's so that I'm

00:03:22,310 --> 00:03:28,669
nice and consistent now in the interest

00:03:24,859 --> 00:03:31,099
of open source software and being open I

00:03:28,669 --> 00:03:33,230
just wanted to relay that I myself am

00:03:31,099 --> 00:03:35,510
quite open and you're welcome to just

00:03:33,230 --> 00:03:38,599
send me a direct email geremy dot foster

00:03:35,510 --> 00:03:40,849
at Microsoft com there's my phone number

00:03:38,599 --> 00:03:42,859
feel free to call me I've never had

00:03:40,849 --> 00:03:44,750
somebody take me up on that but I'm

00:03:42,859 --> 00:03:46,609
actually very open there's my social

00:03:44,750 --> 00:03:48,799
security number and here's my private

00:03:46,609 --> 00:03:52,129
SSH key so have at it there and there

00:03:48,799 --> 00:03:54,620
you go yeah like I said you can follow

00:03:52,129 --> 00:03:56,599
along with this on github.com slash code

00:03:54,620 --> 00:03:58,389
foster slash tweet monkey and here are

00:03:56,599 --> 00:04:00,590
the steps that we're gonna go through

00:03:58,389 --> 00:04:02,959
step one you're gonna have to buy some

00:04:00,590 --> 00:04:06,260
stuff this is an IOT project a maker

00:04:02,959 --> 00:04:10,669
project that involves materials it's

00:04:06,260 --> 00:04:13,180
inconvenient when I am kind of newer to

00:04:10,669 --> 00:04:15,440
the space and IOT I actually have

00:04:13,180 --> 00:04:17,239
schooling in electronics but then I've

00:04:15,440 --> 00:04:19,010
spent most of my career in software and

00:04:17,239 --> 00:04:20,239
the interesting thing about software is

00:04:19,010 --> 00:04:23,000
that you could basically take your

00:04:20,239 --> 00:04:24,529
laptop anywhere plug in and as long as

00:04:23,000 --> 00:04:26,800
you have internet you can do your whole

00:04:24,529 --> 00:04:29,229
job right well enter

00:04:26,800 --> 00:04:31,330
IOT hobbyist space the maker movement

00:04:29,229 --> 00:04:33,759
and all of a sudden we have things again

00:04:31,330 --> 00:04:35,800
and now when I go to a community event

00:04:33,759 --> 00:04:37,960
like a hackathon or something I've got

00:04:35,800 --> 00:04:39,280
to bring a toolbox with resistors in it

00:04:37,960 --> 00:04:41,680
because there's no getting around that

00:04:39,280 --> 00:04:43,090
right we're in the hardware space and so

00:04:41,680 --> 00:04:44,650
when you do a project like this you're

00:04:43,090 --> 00:04:47,590
gonna need to buy stuff you're gonna

00:04:44,650 --> 00:04:49,479
need to acquire stuff it's it's a pain

00:04:47,590 --> 00:04:53,379
in the butt it's also one of the magics

00:04:49,479 --> 00:04:58,000
of the maker movement an IOT hobbyist

00:04:53,379 --> 00:05:00,909
area when I go into a student group I

00:04:58,000 --> 00:05:02,889
can show them whatever I want I could

00:05:00,909 --> 00:05:04,900
have a fire-breathing dragon on the

00:05:02,889 --> 00:05:07,000
screen and they're not impressed they

00:05:04,900 --> 00:05:09,970
just saw one on a TV program last night

00:05:07,000 --> 00:05:12,190
okay but if I have a robot in front of

00:05:09,970 --> 00:05:15,009
them or a monkey with clanging cymbals

00:05:12,190 --> 00:05:17,830
they're like wow that's amazing they

00:05:15,009 --> 00:05:20,319
just absolutely love it so yeah there's

00:05:17,830 --> 00:05:23,169
their stuff attached to projects like

00:05:20,319 --> 00:05:25,240
this and that's a bad and good step to

00:05:23,169 --> 00:05:26,740
we're gonna have to take this physical

00:05:25,240 --> 00:05:28,389
thing this monkey in this case we're

00:05:26,740 --> 00:05:30,849
gonna have to modify it and somehow in

00:05:28,389 --> 00:05:31,270
this case we've got to find out how it

00:05:30,849 --> 00:05:34,389
works

00:05:31,270 --> 00:05:36,370
intercept a circuit and and facilitate

00:05:34,389 --> 00:05:40,000
communicating with this monkey by way of

00:05:36,370 --> 00:05:40,620
a logical electronic circuit so we'll

00:05:40,000 --> 00:05:43,150
look at that

00:05:40,620 --> 00:05:45,479
step three we're going to have to create

00:05:43,150 --> 00:05:48,580
this circuit this circuit that is

00:05:45,479 --> 00:05:50,169
compatible with our existing electronic

00:05:48,580 --> 00:05:52,539
circuit with this thing that we're

00:05:50,169 --> 00:05:54,669
hacking this hardware hack so we'll look

00:05:52,539 --> 00:05:56,770
at a very simple circuit so you can see

00:05:54,669 --> 00:05:59,080
already how we're implementing these

00:05:56,770 --> 00:06:02,289
various concepts you can get an

00:05:59,080 --> 00:06:04,389
introduction to hacking some hardware as

00:06:02,289 --> 00:06:07,419
well as some electronics design some

00:06:04,389 --> 00:06:09,580
circuit design as well as working with

00:06:07,419 --> 00:06:12,340
IOT devices so we're going to be working

00:06:09,580 --> 00:06:16,719
with a Raspberry Pi I actually had this

00:06:12,340 --> 00:06:18,819
entire talk done on an Intel Edison as

00:06:16,719 --> 00:06:20,469
well and that works extremely well it's

00:06:18,819 --> 00:06:23,199
just that it's a higher price point so

00:06:20,469 --> 00:06:24,909
whenever somebody wants to get into this

00:06:23,199 --> 00:06:27,039
and I have to tell them it's gonna cost

00:06:24,909 --> 00:06:29,130
one hundred and thirty dollars to buy

00:06:27,039 --> 00:06:31,360
the whole kit it's it's a little bit

00:06:29,130 --> 00:06:33,099
counterproductive so the raspberry PI's

00:06:31,360 --> 00:06:35,589
are a bit cheaper and I'm just gonna

00:06:33,099 --> 00:06:36,940
kind of default on that device so we'll

00:06:35,589 --> 00:06:39,099
learn how to set that up we'll also

00:06:36,940 --> 00:06:40,849
learn how to sign up for Twitter because

00:06:39,099 --> 00:06:43,939
this involves a lot

00:06:40,849 --> 00:06:46,429
Apio modern social API in namely Twitter

00:06:43,939 --> 00:06:50,179
relatively easy to work with it's one of

00:06:46,429 --> 00:06:53,240
those api's though that you if you have

00:06:50,179 --> 00:06:56,149
to talk to it using like a sea library

00:06:53,240 --> 00:06:58,490
like wiring or if you have to talk to it

00:06:56,149 --> 00:07:00,580
from low level it's a pain in the butt

00:06:58,490 --> 00:07:03,709
because you've got all kinds of

00:07:00,580 --> 00:07:05,539
exchanges of keys and tokens and

00:07:03,709 --> 00:07:07,639
authentication that has to happen and

00:07:05,539 --> 00:07:09,259
nobody wants to do that in in sea

00:07:07,639 --> 00:07:11,509
libraries in fact if you're working on

00:07:09,259 --> 00:07:13,009
certain devices you may not even be

00:07:11,509 --> 00:07:14,959
capable of it they may not have the

00:07:13,009 --> 00:07:18,019
stacks where it's they're able to

00:07:14,959 --> 00:07:20,749
communicate with Twitter but since we're

00:07:18,019 --> 00:07:24,080
using an embedded Linux system raspberry

00:07:20,749 --> 00:07:26,119
pie we have no js' and we've reached

00:07:24,080 --> 00:07:28,699
what I like to call the node threshold

00:07:26,119 --> 00:07:30,860
of glory if you have a device that's

00:07:28,699 --> 00:07:33,110
capable of installing and running node

00:07:30,860 --> 00:07:35,719
which even the Raspberry Pi hasn't had

00:07:33,110 --> 00:07:38,569
it for ever it don't really only entered

00:07:35,719 --> 00:07:42,499
in somewhere in the 0.12 of node the

00:07:38,569 --> 00:07:43,819
ability to run v8 on an ARM processor

00:07:42,499 --> 00:07:47,269
but we have it now and all the later

00:07:43,819 --> 00:07:49,430
versions of it have it if you reach the

00:07:47,269 --> 00:07:51,199
node threshold of glory then all of a

00:07:49,430 --> 00:07:53,779
sudden you're opened up to literally

00:07:51,199 --> 00:07:56,059
hundreds of thousands of packages out

00:07:53,779 --> 00:07:58,399
there that you can install and run on

00:07:56,059 --> 00:07:59,779
your device so very exciting because

00:07:58,399 --> 00:08:01,369
somebody's already written your code for

00:07:59,779 --> 00:08:04,219
you and we like it when somebody's

00:08:01,369 --> 00:08:06,019
already written our code then we'll

00:08:04,219 --> 00:08:09,829
write the code actually since you just

00:08:06,019 --> 00:08:12,349
cloned a repo by going to code foster

00:08:09,829 --> 00:08:15,110
slash tweet monkey on github you have

00:08:12,349 --> 00:08:17,749
the code but you can configure the code

00:08:15,110 --> 00:08:19,939
and and reverse-engineer the code make

00:08:17,749 --> 00:08:22,869
sure you understand what's going on with

00:08:19,939 --> 00:08:25,909
it and then probably modify it so that

00:08:22,869 --> 00:08:28,629
yours your and your solution does

00:08:25,909 --> 00:08:31,069
something a bit unique it's not quite as

00:08:28,629 --> 00:08:33,289
it's not exactly the same as tweet

00:08:31,069 --> 00:08:35,060
monkey and then we've got to deploy that

00:08:33,289 --> 00:08:36,769
code out to the device and run the

00:08:35,060 --> 00:08:39,919
program ok so we've got to do the ops

00:08:36,769 --> 00:08:42,769
part of the equation now before I dive

00:08:39,919 --> 00:08:44,750
into this any questions there were a

00:08:42,769 --> 00:08:47,209
small group so you guys can feel free to

00:08:44,750 --> 00:08:49,040
steer me and maybe if you ask questions

00:08:47,209 --> 00:08:52,180
now it'll determine a little bit of the

00:08:49,040 --> 00:08:52,180
content of the presentation

00:08:52,470 --> 00:08:59,200
how much of this do I get the kids to do

00:08:55,300 --> 00:09:00,760
I usually engine engineer a workshop for

00:08:59,200 --> 00:09:02,440
the audience and if I know they're gonna

00:09:00,760 --> 00:09:04,720
be very young kids and I aren't I have

00:09:02,440 --> 00:09:07,030
devices that already have the code on

00:09:04,720 --> 00:09:08,590
them if I just plug them in plug in the

00:09:07,030 --> 00:09:11,890
tweet monkey and send a tweet it's gonna

00:09:08,590 --> 00:09:13,270
work so I don't have to fret about

00:09:11,890 --> 00:09:15,640
whether or not they're actually going to

00:09:13,270 --> 00:09:18,670
get the deploy process right and I'll

00:09:15,640 --> 00:09:20,200
still take them through the steps um so

00:09:18,670 --> 00:09:21,730
they feel like they've done the whole

00:09:20,200 --> 00:09:25,090
thing it's just that it works on a

00:09:21,730 --> 00:09:27,460
percent of the time so there are the the

00:09:25,090 --> 00:09:30,340
most fun part of this for the kids I

00:09:27,460 --> 00:09:32,590
think is the modification of the monkey

00:09:30,340 --> 00:09:33,940
and the completing of the circuit the

00:09:32,590 --> 00:09:36,460
hands-on part they're you know they're

00:09:33,940 --> 00:09:38,320
very tactile the code is like something

00:09:36,460 --> 00:09:42,400
we're always trying to get our kids into

00:09:38,320 --> 00:09:44,620
you know because it's it's a it's a good

00:09:42,400 --> 00:09:48,730
field frankly for them to be involved in

00:09:44,620 --> 00:09:54,940
there's it's a it's a real mind career

00:09:48,730 --> 00:09:56,830
yeah yeah because I don't think it's

00:09:54,940 --> 00:09:58,000
ideal for this I mean of course being at

00:09:56,830 --> 00:10:00,010
Microsoft you might think that I would

00:09:58,000 --> 00:10:02,860
just use it by default but and maybe

00:10:00,010 --> 00:10:05,370
that's the way if we used to work but at

00:10:02,860 --> 00:10:07,480
Microsoft we're not so concerned

00:10:05,370 --> 00:10:09,070
necessarily with that we want we want

00:10:07,480 --> 00:10:13,780
you to have the right tool for the job

00:10:09,070 --> 00:10:15,790
and in this case using raspbian is it's

00:10:13,780 --> 00:10:18,760
kind of a native operating system on the

00:10:15,790 --> 00:10:21,190
Raspberry Pi it's something that we feel

00:10:18,760 --> 00:10:23,080
like audiences like the students that

00:10:21,190 --> 00:10:25,690
I'm talking to I want them to learn that

00:10:23,080 --> 00:10:27,730
I want them to learn that that version

00:10:25,690 --> 00:10:29,470
of it and certainly you know I can show

00:10:27,730 --> 00:10:30,250
them how to use Windows 10 IOT core to

00:10:29,470 --> 00:10:31,660
do this as well

00:10:30,250 --> 00:10:34,930
IOT core has some pretty interesting

00:10:31,660 --> 00:10:37,090
stuff in it you when you work with uwp

00:10:34,930 --> 00:10:39,040
applications they're very easy because

00:10:37,090 --> 00:10:40,510
they're very predictable and homogeneous

00:10:39,040 --> 00:10:42,880
on the device so they're very easy for

00:10:40,510 --> 00:10:44,980
the device to manage you can go to a web

00:10:42,880 --> 00:10:46,870
interface and say set this as the

00:10:44,980 --> 00:10:49,030
default app and now whenever the thing

00:10:46,870 --> 00:10:51,430
reboots it starts that app well that's

00:10:49,030 --> 00:10:52,780
not a no-brainer in Linux right how do

00:10:51,430 --> 00:10:55,870
you do that you've got to go create a

00:10:52,780 --> 00:10:57,520
system D service you know to start up

00:10:55,870 --> 00:10:58,930
whenever the the machine boots up I

00:10:57,520 --> 00:11:01,030
think you guys probably know a lot more

00:10:58,930 --> 00:11:02,320
about that than I do but it's not the

00:11:01,030 --> 00:11:03,730
simplest thing in the world and doesn't

00:11:02,320 --> 00:11:05,170
always work and you've got to find some

00:11:03,730 --> 00:11:07,570
log file and then your bear

00:11:05,170 --> 00:11:09,070
log files and sometimes it's just you

00:11:07,570 --> 00:11:13,510
know banging your head against a wall

00:11:09,070 --> 00:11:16,570
and also on Windows 10 IOT core a uwp

00:11:13,510 --> 00:11:19,690
can actually host a nodejs

00:11:16,570 --> 00:11:21,430
console application so all of this node

00:11:19,690 --> 00:11:24,250
stuff that I do at the console I can do

00:11:21,430 --> 00:11:26,170
that inside of a Windows 10 uwp app as

00:11:24,250 --> 00:11:28,269
well so I really like the way that

00:11:26,170 --> 00:11:30,370
they've architected it and I think that

00:11:28,269 --> 00:11:33,220
the operating system makes tons of sense

00:11:30,370 --> 00:11:34,720
whenever you are a trying to create an

00:11:33,220 --> 00:11:36,339
application that's shared across

00:11:34,720 --> 00:11:38,800
multiple devices because that same

00:11:36,339 --> 00:11:41,680
codebase can be used on that Raspberry

00:11:38,800 --> 00:11:45,220
Pi as well as on a hololens and on your

00:11:41,680 --> 00:11:46,899
website and on windows desktop app I

00:11:45,220 --> 00:11:49,750
mean it's really phenomenal that we have

00:11:46,899 --> 00:11:51,459
so much code sharing so if you're going

00:11:49,750 --> 00:11:53,529
to share the code then that's one really

00:11:51,459 --> 00:11:55,300
good reason another really good reason

00:11:53,529 --> 00:11:58,990
to do it is if you're creating any sort

00:11:55,300 --> 00:12:00,790
of a user interface especially like a

00:11:58,990 --> 00:12:03,279
media server or something like that

00:12:00,790 --> 00:12:06,399
because it's very good at doing UI you

00:12:03,279 --> 00:12:08,410
have your choice of a full sam'l UI or a

00:12:06,399 --> 00:12:10,180
full HTML UI and you've got a lot of

00:12:08,410 --> 00:12:13,120
really good controls media playback

00:12:10,180 --> 00:12:15,760
controls and things like that I'm more

00:12:13,120 --> 00:12:18,399
of a command line geek and so I do the

00:12:15,760 --> 00:12:20,260
Linux II stuff and the nodes stuff and I

00:12:18,399 --> 00:12:24,910
leave it to my colleagues to do more of

00:12:20,260 --> 00:12:30,160
the dotnet stuff so any other questions

00:12:24,910 --> 00:12:33,310
I was gonna say too on the kids doing

00:12:30,160 --> 00:12:35,350
this the younger folks doing this

00:12:33,310 --> 00:12:37,329
the plugging the circuit together is a

00:12:35,350 --> 00:12:39,220
lot like a puzzle you know just figuring

00:12:37,329 --> 00:12:41,620
I'll show you I actually have not just a

00:12:39,220 --> 00:12:43,750
schematic which is you know great if

00:12:41,620 --> 00:12:45,279
you're a electronics engineer but if

00:12:43,750 --> 00:12:48,069
you're a kid what you really want is

00:12:45,279 --> 00:12:50,110
just a diagram of the devices being

00:12:48,069 --> 00:12:51,579
plugged into the breadboard and trying

00:12:50,110 --> 00:12:53,380
to translate that and do it in real life

00:12:51,579 --> 00:12:57,130
is a really fun practice reading

00:12:53,380 --> 00:13:00,370
resistor codes and orienting components

00:12:57,130 --> 00:13:03,250
and things like that okay step one buy

00:13:00,370 --> 00:13:06,430
stuff so in order to show you this I'm

00:13:03,250 --> 00:13:08,500
going to jump you out to the repo the

00:13:06,430 --> 00:13:10,839
repo like I said is that github code

00:13:08,500 --> 00:13:13,269
foster tweet monkey and there's just an

00:13:10,839 --> 00:13:17,199
introduction here I mean I intend to get

00:13:13,269 --> 00:13:18,730
a image up on this page so that it looks

00:13:17,199 --> 00:13:20,529
a little bit more welcoming but if you

00:13:18,730 --> 00:13:22,510
jump into the docs folder or click here

00:13:20,529 --> 00:13:26,709
on read the docs it's going to take you

00:13:22,510 --> 00:13:29,620
into another readme file that's broken

00:13:26,709 --> 00:13:30,430
down into these seven steps for putting

00:13:29,620 --> 00:13:33,579
this together

00:13:30,430 --> 00:13:36,850
and my MiFi is apparently a little on

00:13:33,579 --> 00:13:38,709
the slow side but I guess we'll live and

00:13:36,850 --> 00:13:41,889
so here we are number one by the stuff

00:13:38,709 --> 00:13:44,350
to modify the monkey and so on if there

00:13:41,889 --> 00:13:46,360
are any problems with these docs that

00:13:44,350 --> 00:13:48,310
you find I would love either just an

00:13:46,360 --> 00:13:51,519
issue or a pull request even that would

00:13:48,310 --> 00:13:53,769
be wonderful kind of want to work on

00:13:51,519 --> 00:13:56,470
this with others so here's how you buy

00:13:53,769 --> 00:13:58,899
the stuff I put links to Amazon and

00:13:56,470 --> 00:14:01,959
digi-key which i've found are the best

00:13:58,899 --> 00:14:04,389
suppliers for things and that's what you

00:14:01,959 --> 00:14:07,810
need now this as I mentioned here sums

00:14:04,389 --> 00:14:10,060
up to 84 dollars which is still a bit of

00:14:07,810 --> 00:14:12,760
an entry point but that gives you a

00:14:10,060 --> 00:14:14,440
number of read quite a bit of redundancy

00:14:12,760 --> 00:14:16,449
you know you get like six mini bread

00:14:14,440 --> 00:14:19,630
boards and a lot of wire and a whole

00:14:16,449 --> 00:14:21,279
bunch of jumpers and so it's it's giving

00:14:19,630 --> 00:14:22,810
you more than just one thing and so

00:14:21,279 --> 00:14:25,420
certainly if you wanted to create four

00:14:22,810 --> 00:14:28,329
or five of these with a small group of

00:14:25,420 --> 00:14:31,120
folks it's not going to cost eighty four

00:14:28,329 --> 00:14:33,550
times four or five but this is where you

00:14:31,120 --> 00:14:37,899
go to buy everything

00:14:33,550 --> 00:14:41,889
the monkeys are on here there's the

00:14:37,899 --> 00:14:43,510
monkey and it's it's a it's a kind of a

00:14:41,889 --> 00:14:45,550
crapshoot finding the monkeys up

00:14:43,510 --> 00:14:48,550
sometimes you'll find one supplier on

00:14:45,550 --> 00:14:51,310
Amazon that has 40 of them and sometimes

00:14:48,550 --> 00:14:53,920
the quantities seem to be low so I did

00:14:51,310 --> 00:14:56,350
an event at the Intel IDF conference at

00:14:53,920 --> 00:15:00,610
the Moscone Center in San Francisco and

00:14:56,350 --> 00:15:02,380
we did 60 monkeys which I don't know if

00:15:00,610 --> 00:15:05,430
it was one of us telling us just before

00:15:02,380 --> 00:15:08,769
but 60 of these monkeys is pretty creepy

00:15:05,430 --> 00:15:10,360
to be staring back at these 60 plastic

00:15:08,769 --> 00:15:13,839
faces it's just enough to give you the

00:15:10,360 --> 00:15:15,670
heebie-jeebies so but anyway that I

00:15:13,839 --> 00:15:17,440
actually had to go to like three or four

00:15:15,670 --> 00:15:20,260
different suppliers in order to find

00:15:17,440 --> 00:15:23,139
enough monkeys for that one but but

00:15:20,260 --> 00:15:25,870
you'll find them on there eventually so

00:15:23,139 --> 00:15:28,540
that's pretty straightforward just a

00:15:25,870 --> 00:15:30,640
matter of clicking order on all of that

00:15:28,540 --> 00:15:33,220
I find that

00:15:30,640 --> 00:15:37,690
if you there's one purchase that I made

00:15:33,220 --> 00:15:39,930
that I think is really helpful when

00:15:37,690 --> 00:15:42,820
especially when you're doing this like

00:15:39,930 --> 00:15:44,890
out of vents or something like if you're

00:15:42,820 --> 00:15:47,500
gonna go to a kids school or if you're

00:15:44,890 --> 00:15:52,180
going to do this with others this is a

00:15:47,500 --> 00:15:54,670
Leatherman squirt es4 pocketknife thingy

00:15:52,180 --> 00:15:57,220
multi-tool and it's actually not just

00:15:54,670 --> 00:15:59,529
pliers up here this is wire strippers

00:15:57,220 --> 00:16:01,060
and then the nose of it does give you

00:15:59,529 --> 00:16:02,860
just a little bit of grip a little bit

00:16:01,060 --> 00:16:04,990
of pliers and then wire cutters back

00:16:02,860 --> 00:16:08,620
there too so really great for working

00:16:04,990 --> 00:16:10,180
with with wires and wiring and then you

00:16:08,620 --> 00:16:13,600
kind of have most of the basic tools

00:16:10,180 --> 00:16:16,029
back here as well including full-on

00:16:13,600 --> 00:16:19,120
scissors which I find very handy as well

00:16:16,029 --> 00:16:20,920
so this has been an awesome tool for

00:16:19,120 --> 00:16:22,839
whatever it is like thirty dollars or

00:16:20,920 --> 00:16:25,720
something and I use that all the time

00:16:22,839 --> 00:16:30,060
and TSA has yet to take it away from me

00:16:25,720 --> 00:16:34,899
but we'll see about that I suppose I

00:16:30,060 --> 00:16:36,880
need to knock on wood okay so modifying

00:16:34,899 --> 00:16:39,220
the monkey oops I accidentally just hit

00:16:36,880 --> 00:16:41,050
back and didn't mean to get forward

00:16:39,220 --> 00:16:44,620
modifying the monkey is a matter of

00:16:41,050 --> 00:16:46,959
taking this thing that this monkey I'll

00:16:44,620 --> 00:16:50,170
go ahead and take my should've had this

00:16:46,959 --> 00:16:55,260
out for you already but this is tweet

00:16:50,170 --> 00:16:57,370
monkey number two and the monkey is a

00:16:55,260 --> 00:17:00,100
like I said just kind of an

00:16:57,370 --> 00:17:03,100
off-the-shelf toy and the first time you

00:17:00,100 --> 00:17:04,839
you get this item that you want to

00:17:03,100 --> 00:17:06,520
modify using this type of thing you've

00:17:04,839 --> 00:17:08,829
got to just check it out and see how

00:17:06,520 --> 00:17:11,919
it's made this has a little battery bay

00:17:08,829 --> 00:17:13,540
at the bottom and it takes two double-a

00:17:11,919 --> 00:17:15,490
batteries and they're oriented like they

00:17:13,540 --> 00:17:17,709
normally are one with plus up one with

00:17:15,490 --> 00:17:19,569
the minus up and in case you didn't

00:17:17,709 --> 00:17:21,339
figure this out a hundred years ago the

00:17:19,569 --> 00:17:22,419
what they're actually doing there is

00:17:21,339 --> 00:17:24,069
they're putting those two batteries in

00:17:22,419 --> 00:17:25,439
series right the the negative of ones

00:17:24,069 --> 00:17:28,600
touching the positive of the other and

00:17:25,439 --> 00:17:29,890
the battery bay door here has contacts

00:17:28,600 --> 00:17:31,480
for both of those and then the little

00:17:29,890 --> 00:17:33,429
switchers on the door so we're just

00:17:31,480 --> 00:17:35,950
making contact there and completing that

00:17:33,429 --> 00:17:39,610
circuit and so I know that obviously I

00:17:35,950 --> 00:17:42,390
can close that gap and he means I want

00:17:39,610 --> 00:17:44,300
and it's going to complete that circuit

00:17:42,390 --> 00:17:46,790
my first iteration

00:17:44,300 --> 00:17:49,370
of tweet monkey involved drilling

00:17:46,790 --> 00:17:51,590
through the door here with some fine

00:17:49,370 --> 00:17:53,300
drill bit running the wires through that

00:17:51,590 --> 00:17:55,040
and then soldering them just a real

00:17:53,300 --> 00:17:58,340
quick tack solder to these little metal

00:17:55,040 --> 00:18:00,830
points here worked wonderfully but kids

00:17:58,340 --> 00:18:04,280
and soldering irons are you know they're

00:18:00,830 --> 00:18:06,350
not necessarily good fellows so the

00:18:04,280 --> 00:18:09,200
better way is on the side of the battery

00:18:06,350 --> 00:18:10,400
bay there's a it's totally convenient

00:18:09,200 --> 00:18:11,630
there's a nice little hole in it and you

00:18:10,400 --> 00:18:14,270
can just run the wire in through that

00:18:11,630 --> 00:18:16,310
hole run it up and then electrical tape

00:18:14,270 --> 00:18:18,500
it to the lead of the battery to the end

00:18:16,310 --> 00:18:20,750
of the battery of the contact and then

00:18:18,500 --> 00:18:22,310
it doesn't necessarily feel like it's

00:18:20,750 --> 00:18:25,340
gonna hold it that well but by the time

00:18:22,310 --> 00:18:28,130
you close the door on it and lock it it

00:18:25,340 --> 00:18:30,590
holds those contacts on there very well

00:18:28,130 --> 00:18:32,120
if you do it this way if you actually

00:18:30,590 --> 00:18:34,190
solder it it's great because you still

00:18:32,120 --> 00:18:36,320
have use of the switch if you do it this

00:18:34,190 --> 00:18:38,750
way you've you've covered that up and so

00:18:36,320 --> 00:18:40,760
now the switch doesn't work anymore but

00:18:38,750 --> 00:18:42,680
if you touch these two wires together

00:18:40,760 --> 00:18:46,880
that makes the monkey enemy okay

00:18:42,680 --> 00:18:50,150
so if I take these two wires touch them

00:18:46,880 --> 00:18:51,350
together I'm completing the circuit I'm

00:18:50,150 --> 00:18:53,060
doing the same thing that I was with

00:18:51,350 --> 00:18:55,820
that switch so we know now that all I

00:18:53,060 --> 00:18:59,330
really have to do is somehow logically

00:18:55,820 --> 00:19:01,160
connect these two wires together but I

00:18:59,330 --> 00:19:03,830
have to consider the fact that whenever

00:19:01,160 --> 00:19:06,080
I do I'm gonna be carrying some current

00:19:03,830 --> 00:19:07,910
right so we have to know what kind of a

00:19:06,080 --> 00:19:10,880
device this is well I did a little

00:19:07,910 --> 00:19:14,300
surgery I actually took the monkey apart

00:19:10,880 --> 00:19:16,160
he basically consists of a DC motor and

00:19:14,300 --> 00:19:19,250
the two batteries that's it

00:19:16,160 --> 00:19:21,400
the DC motor mechanically drives a bunch

00:19:19,250 --> 00:19:24,440
of stuff in there there's a little

00:19:21,400 --> 00:19:28,130
squeaker that it mechanically squeezes

00:19:24,440 --> 00:19:29,570
to go and his legs go up and down in his

00:19:28,130 --> 00:19:31,280
arms go in and out that's all just

00:19:29,570 --> 00:19:33,500
mechanics the only thing in there is a

00:19:31,280 --> 00:19:34,940
little DC motor and so when I connect

00:19:33,500 --> 00:19:39,530
those together it's got to spin that

00:19:34,940 --> 00:19:43,100
motor now DC motors are relatively high

00:19:39,530 --> 00:19:45,020
power usage it takes something like 350

00:19:43,100 --> 00:19:47,330
milliamps to run that motor that's

00:19:45,020 --> 00:19:49,040
relatively high and that's the type of

00:19:47,330 --> 00:19:51,740
thing you don't want to drive with your

00:19:49,040 --> 00:19:54,050
IOT board right if you want to keep your

00:19:51,740 --> 00:19:56,450
IOT board that is it might work for a

00:19:54,050 --> 00:19:57,860
few milliseconds but that would be about

00:19:56,450 --> 00:20:00,679
it

00:19:57,860 --> 00:20:02,630
so we've got to figure out a circuit and

00:20:00,679 --> 00:20:04,429
we'll go ahead and move on to the next

00:20:02,630 --> 00:20:06,620
concept here we've got to figure out a

00:20:04,429 --> 00:20:09,080
circuit that's going to allow us to

00:20:06,620 --> 00:20:10,700
logically connect these together and I

00:20:09,080 --> 00:20:12,740
went through a few iterations here can

00:20:10,700 --> 00:20:16,510
you guys think of any ways in which we

00:20:12,740 --> 00:20:18,590
could complete a circuit logically

00:20:16,510 --> 00:20:22,360
transistor that's right that was one of

00:20:18,590 --> 00:20:25,010
my approaches a relay would do it yeah

00:20:22,360 --> 00:20:27,620
relay was my first attempt transistor

00:20:25,010 --> 00:20:32,030
was my second attempt my third and final

00:20:27,620 --> 00:20:34,070
attempt is a MOSFET so the relay is a no

00:20:32,030 --> 00:20:35,360
brainer it's a very mechanical solution

00:20:34,070 --> 00:20:37,429
you give it enough of a signal and it

00:20:35,360 --> 00:20:39,140
goes okay cool I'll put this metal

00:20:37,429 --> 00:20:40,910
together and that'll complete a circuit

00:20:39,140 --> 00:20:43,640
we can use that for all kinds of things

00:20:40,910 --> 00:20:46,070
actually bought a relay and installed it

00:20:43,640 --> 00:20:48,650
under my stove because I've got the

00:20:46,070 --> 00:20:50,030
stove that's the old microvolt and all I

00:20:48,650 --> 00:20:51,530
really needed to do is kind of touch

00:20:50,030 --> 00:20:53,780
these two wires together so I installed

00:20:51,530 --> 00:20:55,250
a relay and it just basically touches

00:20:53,780 --> 00:20:57,350
those two wires together and turns my

00:20:55,250 --> 00:20:59,660
stove on so now my modern thermostat

00:20:57,350 --> 00:21:01,400
works with my old microvolt stove

00:20:59,660 --> 00:21:03,890
because I've just got to relay under

00:21:01,400 --> 00:21:06,410
there doing this monkey work for me so

00:21:03,890 --> 00:21:08,750
the relay works fine but it ends up

00:21:06,410 --> 00:21:10,580
being kind of a big and mechanical

00:21:08,750 --> 00:21:13,460
solution depending on the relay that you

00:21:10,580 --> 00:21:15,470
buy it there's a bit of a click whenever

00:21:13,460 --> 00:21:17,419
it engages go click click and just

00:21:15,470 --> 00:21:18,620
didn't feel like the best thing I wanted

00:21:17,419 --> 00:21:20,450
something that was a little bit more

00:21:18,620 --> 00:21:23,150
streamlined plus I wanted to learn what

00:21:20,450 --> 00:21:25,040
was the best circuit for here so I tried

00:21:23,150 --> 00:21:27,110
a transistor well the problem with the

00:21:25,040 --> 00:21:30,500
transistor is that a transistor is

00:21:27,110 --> 00:21:32,480
essentially a current driven device it's

00:21:30,500 --> 00:21:37,669
a device that when you give it gate

00:21:32,480 --> 00:21:39,260
current it translates that into current

00:21:37,669 --> 00:21:42,169
that that falls across the sink and

00:21:39,260 --> 00:21:44,210
source right well that's pretty good

00:21:42,169 --> 00:21:47,299
except that it still takes a certain

00:21:44,210 --> 00:21:49,130
amount of current to drive it it's not

00:21:47,299 --> 00:21:51,710
it's not a huge amount but it takes a

00:21:49,130 --> 00:21:53,600
certain amount of current and I'm really

00:21:51,710 --> 00:21:55,400
just talking about logic here I'm not

00:21:53,600 --> 00:21:59,720
talking about like an amplifier where I

00:21:55,400 --> 00:22:02,270
have to amplify a gate current to to a

00:21:59,720 --> 00:22:06,169
source current I I'm talking about just

00:22:02,270 --> 00:22:09,380
logically turning on a flow of current

00:22:06,169 --> 00:22:10,909
and logically turning it off and one of

00:22:09,380 --> 00:22:12,679
my colleagues recommended

00:22:10,909 --> 00:22:14,960
AFET so that it would be perfect and in

00:22:12,679 --> 00:22:18,859
fact it was a MOSFET is a lot like a

00:22:14,960 --> 00:22:21,859
transistor except it uses it actually

00:22:18,859 --> 00:22:25,489
uses an IC internally an integrated

00:22:21,859 --> 00:22:28,039
circuit that has a field effect such

00:22:25,489 --> 00:22:32,629
that when it gets just enough gate

00:22:28,039 --> 00:22:35,059
voltage that field internally collapses

00:22:32,629 --> 00:22:39,409
and allows current to flow from source

00:22:35,059 --> 00:22:42,679
to drain and it doesn't take any are

00:22:39,409 --> 00:22:45,950
hardly any amount of gate current going

00:22:42,679 --> 00:22:48,169
from the gate to the drain because it's

00:22:45,950 --> 00:22:51,200
it's voltage based as long as it gets

00:22:48,169 --> 00:22:53,720
that 0.7 or whatever it is volts in this

00:22:51,200 --> 00:22:55,729
case this is a logic level MOSFET so

00:22:53,720 --> 00:22:58,039
it's going to take like the 3.3 volts

00:22:55,729 --> 00:23:00,979
that the Raspberry Pi is going to output

00:22:58,039 --> 00:23:03,169
on its GPIO pins but as soon as it gets

00:23:00,979 --> 00:23:06,440
that voltage it's just going to turn it

00:23:03,169 --> 00:23:09,499
on and it's going to stay on until I

00:23:06,440 --> 00:23:11,470
take that off okay so MOSFET ended up

00:23:09,499 --> 00:23:14,809
being a really good solution for this

00:23:11,470 --> 00:23:20,989
now before I show you this diagram I'm

00:23:14,809 --> 00:23:23,989
going to show you a couple of one other

00:23:20,989 --> 00:23:25,789
diagram that is the this is the actual

00:23:23,989 --> 00:23:28,220
circuit diagram this is the one I do not

00:23:25,789 --> 00:23:30,080
show middle-schoolers if I'm if I'm

00:23:28,220 --> 00:23:31,399
doing this for them but I think for many

00:23:30,080 --> 00:23:33,320
of you this will make sense how many of

00:23:31,399 --> 00:23:36,470
you understand electronic circuits so

00:23:33,320 --> 00:23:38,659
this makes good sense already okay so I

00:23:36,470 --> 00:23:41,179
modeled the monkey here by basically

00:23:38,659 --> 00:23:42,739
just putting a motor and then here's one

00:23:41,179 --> 00:23:44,119
battery here's the other battery and

00:23:42,739 --> 00:23:45,289
I've got the negative end of one and the

00:23:44,119 --> 00:23:48,919
positive end of the other and I'm

00:23:45,289 --> 00:23:50,960
basically intercepting that area the

00:23:48,919 --> 00:23:52,970
existing switch as long as you do the

00:23:50,960 --> 00:23:55,580
solder thing is still there so you can

00:23:52,970 --> 00:24:00,019
close it but our switch is this MOSFET

00:23:55,580 --> 00:24:03,320
and this MOSFET has of course it's got a

00:24:00,019 --> 00:24:05,859
common ground but then it's got a gate

00:24:03,320 --> 00:24:08,989
resistor here a current limiting

00:24:05,859 --> 00:24:11,210
resistor on the gate to make sure that I

00:24:08,989 --> 00:24:12,619
don't overload this thing and then do

00:24:11,210 --> 00:24:19,129
you guys know what this resistor is here

00:24:12,619 --> 00:24:21,169
for no assign I mean it kind of acts

00:24:19,129 --> 00:24:24,029
that way a little bit but in a MOSFET

00:24:21,169 --> 00:24:26,909
circuit this is pretty common this is

00:24:24,029 --> 00:24:29,969
a gate gate drain this is to make sure

00:24:26,909 --> 00:24:33,179
that if I take my signal off of here

00:24:29,969 --> 00:24:35,820
that the any voltage on here goes away

00:24:33,179 --> 00:24:37,440
this is a very big resistor 33 K it

00:24:35,820 --> 00:24:39,809
really doesn't matter what size it is it

00:24:37,440 --> 00:24:41,669
just needs to be large enough that it's

00:24:39,809 --> 00:24:44,399
not going to change appreciably your

00:24:41,669 --> 00:24:47,399
voltage level at the gate so we use a

00:24:44,399 --> 00:24:50,700
very large resistor and this makes sure

00:24:47,399 --> 00:24:53,190
that as soon as I take my pin low and

00:24:50,700 --> 00:24:55,590
say monkey turn off all that current

00:24:53,190 --> 00:24:57,629
goes bye-bye down to ground and it

00:24:55,590 --> 00:24:59,129
actually does turn off otherwise this

00:24:57,629 --> 00:24:59,729
would kind of stick high and be like

00:24:59,129 --> 00:25:01,379
wait a minute

00:24:59,729 --> 00:25:03,629
I told this guy to turn off and it would

00:25:01,379 --> 00:25:05,489
just have some residual voltage there

00:25:03,629 --> 00:25:08,219
and then it might just turn off randomly

00:25:05,489 --> 00:25:11,879
on its own when it finally drained

00:25:08,219 --> 00:25:14,249
through natural means okay so that's the

00:25:11,879 --> 00:25:17,639
basic circuit but then it's nice to look

00:25:14,249 --> 00:25:19,889
at this diagram so I jump directly to

00:25:17,639 --> 00:25:21,479
here for the students they see the

00:25:19,889 --> 00:25:23,070
Raspberry Pi sitting in front of them

00:25:21,479 --> 00:25:25,200
they see the monkey and they've got two

00:25:23,070 --> 00:25:26,999
leads coming off of the monkey and then

00:25:25,200 --> 00:25:30,839
they go oh good this is all I have to do

00:25:26,999 --> 00:25:33,479
is plug this in just like this and so

00:25:30,839 --> 00:25:36,539
we've got the MOSFET going in here we've

00:25:33,479 --> 00:25:38,820
got three different values of resistors

00:25:36,539 --> 00:25:41,460
and we've got an LED and that's it four

00:25:38,820 --> 00:25:43,559
components so they get to learn a little

00:25:41,460 --> 00:25:46,229
bit about the components the resistors

00:25:43,559 --> 00:25:48,149
the LEDs the MOSFETs and then how to

00:25:46,229 --> 00:25:50,489
plug all these wires in how to interface

00:25:48,149 --> 00:25:53,399
with the Raspberry Pi pins and so on and

00:25:50,489 --> 00:25:59,399
so forth so relatively simple any

00:25:53,399 --> 00:26:04,399
questions on the circuit okay the next

00:25:59,399 --> 00:26:07,859
step is prepping your Raspberry Pi now

00:26:04,399 --> 00:26:10,739
this step is the one we're in there be

00:26:07,859 --> 00:26:13,619
dragons because we're talking about a

00:26:10,739 --> 00:26:15,899
system where it has a lot of complicated

00:26:13,619 --> 00:26:18,479
software on it it's got an entire Linux

00:26:15,899 --> 00:26:20,639
distribution on it it's got a node stack

00:26:18,479 --> 00:26:23,519
on it and it's got your code on it and

00:26:20,639 --> 00:26:25,499
things can go wrong and often times do

00:26:23,519 --> 00:26:27,539
I've run into various situations with

00:26:25,499 --> 00:26:29,849
where I found out oh man this node

00:26:27,539 --> 00:26:31,950
module they changed the version and so

00:26:29,849 --> 00:26:36,400
that had this part broken I needed to do

00:26:31,950 --> 00:26:38,410
this and this had me up last night until

00:26:36,400 --> 00:26:40,360
almost midnight and I had to drive here

00:26:38,410 --> 00:26:42,550
from Seattle this morning so I got very

00:26:40,360 --> 00:26:45,640
little sleep because of this step right

00:26:42,550 --> 00:26:47,830
here it was actually a stupid problem it

00:26:45,640 --> 00:26:50,050
doesn't end up being an extremely

00:26:47,830 --> 00:26:52,360
difficult process but and I imagine that

00:26:50,050 --> 00:26:54,190
this is gonna be the simplest part for

00:26:52,360 --> 00:26:56,290
folks like yourself that are at

00:26:54,190 --> 00:26:57,340
conference like this but what we need to

00:26:56,290 --> 00:26:59,460
do is we need to install an operating

00:26:57,340 --> 00:27:02,410
system like I said I always recommend

00:26:59,460 --> 00:27:05,200
raspbian and I always recommend raspbian

00:27:02,410 --> 00:27:06,820
light because I don't feel like on an

00:27:05,200 --> 00:27:08,770
embedded system I really need all that

00:27:06,820 --> 00:27:10,320
UI that's at least not for this project

00:27:08,770 --> 00:27:13,870
that's not what we're what we're using

00:27:10,320 --> 00:27:16,480
and I don't like to have to tell kids

00:27:13,870 --> 00:27:18,190
that they've got to have a monitor and a

00:27:16,480 --> 00:27:19,600
keyboard and a mouse and get the whole

00:27:18,190 --> 00:27:21,820
thing set up and it's an administrative

00:27:19,600 --> 00:27:23,890
nightmare because we've got to swap the

00:27:21,820 --> 00:27:25,630
PI's out or carry a ton of monitors or

00:27:23,890 --> 00:27:28,120
whatever and so I've got this really

00:27:25,630 --> 00:27:30,940
great flow for provisioning these

00:27:28,120 --> 00:27:33,400
devices very easily without using a

00:27:30,940 --> 00:27:35,830
monitor keyboard or mouse at all and the

00:27:33,400 --> 00:27:37,150
way that we do that is once again I

00:27:35,830 --> 00:27:38,830
might be just preaching to the choir

00:27:37,150 --> 00:27:40,720
here but we basically just plug them in

00:27:38,830 --> 00:27:43,990
over Ethernet and the raspbian light

00:27:40,720 --> 00:27:46,480
does mdns by default and raspberry PI's

00:27:43,990 --> 00:27:48,010
are called Raspberry Pi by default so as

00:27:46,480 --> 00:27:49,600
long as you make sure you're on the same

00:27:48,010 --> 00:27:52,330
network or you can even plug it directly

00:27:49,600 --> 00:27:54,700
into your PC and I feel like an idiot

00:27:52,330 --> 00:27:58,000
because I just learned this a few months

00:27:54,700 --> 00:28:00,610
ago that modern network interface

00:27:58,000 --> 00:28:02,080
controllers are smart enough to

00:28:00,610 --> 00:28:03,790
determine that you're in a crossover

00:28:02,080 --> 00:28:06,190
scenario and you don't have to have

00:28:03,790 --> 00:28:08,070
separate crossover cables I came from

00:28:06,190 --> 00:28:10,390
the days where you did so I thought I

00:28:08,070 --> 00:28:12,100
can't plug that directly in it's not a

00:28:10,390 --> 00:28:13,720
crossover cable but apparently that's

00:28:12,100 --> 00:28:15,760
gone and you could just use patch cables

00:28:13,720 --> 00:28:18,130
for everything and I love that so you

00:28:15,760 --> 00:28:20,850
just plug it into this directly or to

00:28:18,130 --> 00:28:24,010
the same network and then you can pane

00:28:20,850 --> 00:28:25,780
raspberry pi dot local and it's going to

00:28:24,010 --> 00:28:28,000
discover it and it's gonna find its IP

00:28:25,780 --> 00:28:30,300
address for you or you can even SSH

00:28:28,000 --> 00:28:33,580
directly to raspberry pi dot local

00:28:30,300 --> 00:28:36,310
perfect from there you can train it on

00:28:33,580 --> 00:28:39,040
your Wi-Fi network you can give it a

00:28:36,310 --> 00:28:42,640
better hostname one that makes sense and

00:28:39,040 --> 00:28:46,240
one that avoids having 13 raspberry pi

00:28:42,640 --> 00:28:47,710
named devices in the room but those are

00:28:46,240 --> 00:28:49,900
all the kinds of things that you need to

00:28:47,710 --> 00:28:52,360
do with the operating system I

00:28:49,900 --> 00:28:54,310
walk you through the the raspy config

00:28:52,360 --> 00:28:56,250
and what what are some good things to do

00:28:54,310 --> 00:28:59,440
set your locale and your keyboard layout

00:28:56,250 --> 00:29:01,510
make sure your to turn on i2c in case

00:28:59,440 --> 00:29:03,340
you want to use that one of the

00:29:01,510 --> 00:29:05,560
workshops I do involves using the

00:29:03,340 --> 00:29:07,300
Raspberry Pi camera to take a picture

00:29:05,560 --> 00:29:09,940
and send that to Azure cognitive

00:29:07,300 --> 00:29:11,890
services and it will tell you what's in

00:29:09,940 --> 00:29:14,320
that picture so that's always really fun

00:29:11,890 --> 00:29:15,880
because I can point it at a table with a

00:29:14,320 --> 00:29:18,790
bunch of stuff on it and it'll say I see

00:29:15,880 --> 00:29:20,860
a red apple and a can of coke and it

00:29:18,790 --> 00:29:22,930
looks like we're indoors it looks like a

00:29:20,860 --> 00:29:25,330
hotel it's it's able to determine a

00:29:22,930 --> 00:29:26,950
bunch of stuff with some really amazing

00:29:25,330 --> 00:29:29,200
machine learning models that are built

00:29:26,950 --> 00:29:31,150
into cognitive services well if you want

00:29:29,200 --> 00:29:33,010
to do that and you don't want to spend

00:29:31,150 --> 00:29:35,980
two hours trying to figure out why your

00:29:33,010 --> 00:29:37,630
camera's not working it's because it's

00:29:35,980 --> 00:29:38,890
in the RasPi config you have to turn on

00:29:37,630 --> 00:29:41,710
the camera module does it sound like

00:29:38,890 --> 00:29:45,610
I've run into that problem before I have

00:29:41,710 --> 00:29:48,190
you go into your WPA supplicant

00:29:45,610 --> 00:29:49,750
I won't even insult your intelligence by

00:29:48,190 --> 00:29:51,670
assuming that you don't know how to do

00:29:49,750 --> 00:29:54,270
this type of thing in Linux but for

00:29:51,670 --> 00:29:57,280
somebody like me who works at Microsoft

00:29:54,270 --> 00:29:59,680
and it's just this remarkable didn't

00:29:57,280 --> 00:30:02,830
know how to do that it's not really not

00:29:59,680 --> 00:30:05,370
so much anymore it is important and this

00:30:02,830 --> 00:30:08,920
is what ended up keeping me up until

00:30:05,370 --> 00:30:12,700
midnight last night if you do raspbian

00:30:08,920 --> 00:30:16,060
light you do not get wiring pie and at

00:30:12,700 --> 00:30:17,890
least the versions of raspy i/o which is

00:30:16,060 --> 00:30:21,580
the adapter that I'm using an ode to

00:30:17,890 --> 00:30:24,130
talk to the GPIO the at least the

00:30:21,580 --> 00:30:26,110
version that I'm using here requires the

00:30:24,130 --> 00:30:28,630
wiring PI package to be installed on the

00:30:26,110 --> 00:30:31,240
device so the way I finally figured this

00:30:28,630 --> 00:30:33,160
out was after countless efforts I

00:30:31,240 --> 00:30:35,320
installed the full version of raspbian

00:30:33,160 --> 00:30:37,240
and I inspected the packages that were

00:30:35,320 --> 00:30:38,950
installed and I saw wiring PI in there

00:30:37,240 --> 00:30:40,150
and I thought I remembered seeing

00:30:38,950 --> 00:30:41,770
something like that and my error

00:30:40,150 --> 00:30:45,100
messages and lo and behold after an

00:30:41,770 --> 00:30:50,230
install of simply wiring PI it worked

00:30:45,100 --> 00:30:53,050
and oh yeah that's fine okay and then

00:30:50,230 --> 00:30:55,240
you need to install node J s now the

00:30:53,050 --> 00:30:57,190
means here of installing nodejs

00:30:55,240 --> 00:30:59,050
is the simplest that I currently

00:30:57,190 --> 00:31:03,250
recommend which is just doing a double

00:30:59,050 --> 00:31:06,250
you get and stuffing that and putting

00:31:03,250 --> 00:31:09,429
in your user local bin and then setting

00:31:06,250 --> 00:31:11,710
up some soft links to note this has been

00:31:09,429 --> 00:31:13,780
an absolutely bulletproof means of

00:31:11,710 --> 00:31:16,809
installing node on a device and it's

00:31:13,780 --> 00:31:19,840
actually not a bad way to switch

00:31:16,809 --> 00:31:22,390
versions as well because you can instead

00:31:19,840 --> 00:31:24,010
of just putting this in user local node

00:31:22,390 --> 00:31:26,799
you can put that in user local node

00:31:24,010 --> 00:31:28,690
slash version seven seven point five

00:31:26,799 --> 00:31:30,760
point O or whatever version you're

00:31:28,690 --> 00:31:32,530
interested in and you can hold multiple

00:31:30,760 --> 00:31:34,450
versions and then you can switch between

00:31:32,530 --> 00:31:37,360
the versions by just changing your soft

00:31:34,450 --> 00:31:41,710
links so that's a pretty good solution

00:31:37,360 --> 00:31:44,440
there is a cross-platform node version

00:31:41,710 --> 00:31:46,600
selector called nvs that's a really cool

00:31:44,440 --> 00:31:47,860
package you guys have probably if you've

00:31:46,600 --> 00:31:52,210
done anything with node you've probably

00:31:47,860 --> 00:31:55,750
heard of nvm nvm is good but it only

00:31:52,210 --> 00:31:57,429
works on some operating systems it

00:31:55,750 --> 00:31:58,900
doesn't work on Windows and then there

00:31:57,429 --> 00:32:01,000
are there's a version on Windows that

00:31:58,900 --> 00:32:03,159
doesn't work on Linux NDS works

00:32:01,000 --> 00:32:04,900
everywhere and it has a relatively sane

00:32:03,159 --> 00:32:08,140
syntax whereas some of the other ones

00:32:04,900 --> 00:32:10,390
the syntax is really weird so I really

00:32:08,140 --> 00:32:12,700
like nvs I just haven't fully tested it

00:32:10,390 --> 00:32:17,230
yet so I'm not I'm still recommending

00:32:12,700 --> 00:32:21,340
this method all right

00:32:17,230 --> 00:32:23,169
and then you just then you have node

00:32:21,340 --> 00:32:25,600
installed test it make sure that node is

00:32:23,169 --> 00:32:28,210
working and then we look at the next one

00:32:25,600 --> 00:32:30,429
and I don't have my follow-on link

00:32:28,210 --> 00:32:32,530
created yet but the next one is

00:32:30,429 --> 00:32:33,940
essentially writing the code now in

00:32:32,530 --> 00:32:36,850
order to show you the code I'm gonna

00:32:33,940 --> 00:32:40,270
jump over to my actual repository in my

00:32:36,850 --> 00:32:46,480
IDE and my IDE is Visual Studio code

00:32:40,270 --> 00:32:48,400
free cross-platform IDE works great for

00:32:46,480 --> 00:32:50,440
all kinds of code bases

00:32:48,400 --> 00:32:53,730
it's especially adept at node and that's

00:32:50,440 --> 00:32:57,900
as you can probably tell my sweet spot

00:32:53,730 --> 00:32:57,900
it's usually faster than this

00:32:58,940 --> 00:33:02,529
of course when trying to show off

00:33:25,910 --> 00:33:31,560
normally it takes less than a second for

00:33:29,550 --> 00:33:34,680
node to open air for code to open and

00:33:31,560 --> 00:33:37,230
that took ridiculously long but that's

00:33:34,680 --> 00:33:40,290
life okay now here is the code base it

00:33:37,230 --> 00:33:42,360
is this is the whole repo there's the

00:33:40,290 --> 00:33:45,240
docks and the node modules in the github

00:33:42,360 --> 00:33:48,000
and all this stuff all the code is under

00:33:45,240 --> 00:33:49,440
index J s and I want to I want to zoom

00:33:48,000 --> 00:33:52,200
out here not that you'll be able to read

00:33:49,440 --> 00:33:55,590
it but just so you can see that this is

00:33:52,200 --> 00:33:59,180
not a huge amount of code okay

00:33:55,590 --> 00:34:02,100
now this code is talking to Twitter

00:33:59,180 --> 00:34:04,170
doing a search and looking for a kind of

00:34:02,100 --> 00:34:06,570
a constant search it's actually letting

00:34:04,170 --> 00:34:08,520
Twitter search for us it's not doing the

00:34:06,570 --> 00:34:10,560
search ourselves and then whenever

00:34:08,520 --> 00:34:12,510
there's any kind of whenever there's a

00:34:10,560 --> 00:34:14,730
tweet that meets certain qualifications

00:34:12,510 --> 00:34:16,050
it is turning the monkey on and then

00:34:14,730 --> 00:34:17,670
it's waiting two seconds and turning the

00:34:16,050 --> 00:34:20,070
monkey off and it's also managing the

00:34:17,670 --> 00:34:22,880
little LED light on there and so it's

00:34:20,070 --> 00:34:26,220
encouraging to me that that amount of

00:34:22,880 --> 00:34:28,890
logic that that amount of functionality

00:34:26,220 --> 00:34:30,990
can happen in this little code and this

00:34:28,890 --> 00:34:33,540
includes you know a lot of comments and

00:34:30,990 --> 00:34:37,440
kind of a relatively verbose syntax to

00:34:33,540 --> 00:34:40,470
make it easy for folks to learn so

00:34:37,440 --> 00:34:42,150
that's fun so let's look through this

00:34:40,470 --> 00:34:43,470
code just a little bit now the first

00:34:42,150 --> 00:34:46,800
thing that we're doing is we are

00:34:43,470 --> 00:34:51,780
requiring johnny-five and raspy i/o now

00:34:46,800 --> 00:34:54,680
I can go down to this board and I'm

00:34:51,780 --> 00:34:57,090
gonna jump into here I'm going to SSH to

00:34:54,680 --> 00:35:05,760
using the PI user I just left it at the

00:34:57,090 --> 00:35:09,500
default user CF PI 3 dot local and I'm

00:35:05,760 --> 00:35:14,700
going to take you into sis class and

00:35:09,500 --> 00:35:16,830
then into GPIO and has anybody ever

00:35:14,700 --> 00:35:21,180
worked with the GPIO pins on a Raspberry

00:35:16,830 --> 00:35:24,510
Pi okay so you can do it directly in

00:35:21,180 --> 00:35:28,350
here you can do things like you can take

00:35:24,510 --> 00:35:29,400
pin 16 or like in this case we'll say 24

00:35:28,350 --> 00:35:33,600
because that's the one with the light

00:35:29,400 --> 00:35:34,730
and I can send that out to export and

00:35:33,600 --> 00:35:38,150
[Music]

00:35:34,730 --> 00:35:38,150
echo thank you

00:35:38,760 --> 00:35:50,590
it won't why not maybe I don't need see

00:35:47,230 --> 00:35:51,820
there yeah there you go

00:35:50,590 --> 00:35:56,320
I didn't need it thank you though okay

00:35:51,820 --> 00:36:00,790
so now I have this GPIO 24 and I can say

00:35:56,320 --> 00:36:07,120
echo I don't remember whether I need

00:36:00,790 --> 00:36:12,510
quotes or not out to GPIO 24 direction

00:36:07,120 --> 00:36:15,220
and now I can say echo 1 to GPIO 24

00:36:12,510 --> 00:36:17,130
value and my light comes on over here

00:36:15,220 --> 00:36:21,060
did you guys see the light come on and

00:36:17,130 --> 00:36:24,450
I'll go ahead and turn that off again

00:36:21,060 --> 00:36:27,850
there we go so that's the the way that

00:36:24,450 --> 00:36:30,190
raspbian decided to implement this

00:36:27,850 --> 00:36:32,800
subsystem this microcontroller that's

00:36:30,190 --> 00:36:34,180
built into their platform but of course

00:36:32,800 --> 00:36:36,880
that's extended into the various

00:36:34,180 --> 00:36:39,520
frameworks and one of those is into node

00:36:36,880 --> 00:36:45,280
j s now I think that what I need to do

00:36:39,520 --> 00:36:47,430
is uh NEX port hopefully hopefully that

00:36:45,280 --> 00:36:49,780
worked and it's not gonna block me now

00:36:47,430 --> 00:36:52,660
okay so let's go look at this code so uh

00:36:49,780 --> 00:36:54,670
johnny-five and raspy IO worked together

00:36:52,660 --> 00:36:58,600
to give me the ability at a high level

00:36:54,670 --> 00:37:00,550
to talk to my GPIO and raspy IO is like

00:36:58,600 --> 00:37:02,050
the connector for this board but

00:37:00,550 --> 00:37:03,370
johnny-five works with lots of different

00:37:02,050 --> 00:37:04,930
boards so if you want to work with an

00:37:03,370 --> 00:37:07,660
Edison you would just swap out raspy I

00:37:04,930 --> 00:37:09,750
owe for the Edison connector Twitter is

00:37:07,660 --> 00:37:13,330
a node module it's one of the like

00:37:09,750 --> 00:37:16,120
400,000 node packages that allows me to

00:37:13,330 --> 00:37:17,830
talk to the streaming API at Twitter and

00:37:16,120 --> 00:37:19,900
I'm just recognizing that I'm not I'm a

00:37:17,830 --> 00:37:22,240
little bit I've got about 13 minutes

00:37:19,900 --> 00:37:25,270
left so I'm gonna speed up just a little

00:37:22,240 --> 00:37:28,030
bit and it gives me a really really easy

00:37:25,270 --> 00:37:30,580
way to do something that is it's kind of

00:37:28,030 --> 00:37:33,190
impressive everything that's happening I

00:37:30,580 --> 00:37:36,610
basically just go to Twitter and sign up

00:37:33,190 --> 00:37:40,060
for my API keys I put those here and

00:37:36,610 --> 00:37:43,420
then I can with a relatively terse

00:37:40,060 --> 00:37:44,860
syntax I can sign up for tweets but

00:37:43,420 --> 00:37:46,810
we'll get there in just a second first

00:37:44,860 --> 00:37:48,910
thing I want to do is I want to define a

00:37:46,810 --> 00:37:50,740
board and I want that board to be a

00:37:48,910 --> 00:37:50,920
Raspberry Pi so that's just a little bit

00:37:50,740 --> 00:37:52,660
of

00:37:50,920 --> 00:37:56,650
ceremony we have to do when we're using

00:37:52,660 --> 00:37:58,630
johnny-five and now here I'm defining my

00:37:56,650 --> 00:37:59,950
Twitter keys as some environment

00:37:58,630 --> 00:38:01,720
variables so you need to make sure that

00:37:59,950 --> 00:38:04,390
those are on there by the way if you're

00:38:01,720 --> 00:38:06,039
using Visual Studio code you've got a

00:38:04,390 --> 00:38:08,109
really nice facility here you've got a

00:38:06,039 --> 00:38:12,160
lunch file that you don't normally check

00:38:08,109 --> 00:38:15,839
in to your github repo and this launch

00:38:12,160 --> 00:38:18,519
file has launch configurations and this

00:38:15,839 --> 00:38:20,380
configuration here can include a bunch

00:38:18,519 --> 00:38:23,170
of environment variables and so now if I

00:38:20,380 --> 00:38:24,819
just hit f5 and visual studio code this

00:38:23,170 --> 00:38:27,309
is what its gonna do it's gonna run the

00:38:24,819 --> 00:38:28,630
index J s using node and it's gonna

00:38:27,309 --> 00:38:31,930
configure these environment variables

00:38:28,630 --> 00:38:33,700
for me so for that run it's going to use

00:38:31,930 --> 00:38:35,980
those as environment variables and I can

00:38:33,700 --> 00:38:40,960
set up different runs there so that's

00:38:35,980 --> 00:38:43,000
pretty slick ok so I want whenever the

00:38:40,960 --> 00:38:45,549
monkey gets a tweet I want him to come

00:38:43,000 --> 00:38:47,380
on and and I don't want to get too

00:38:45,549 --> 00:38:49,480
annoyed so I want him to turn back off

00:38:47,380 --> 00:38:51,640
after two seconds and wait for another

00:38:49,480 --> 00:38:53,920
one so we'll set 2,000 milliseconds for

00:38:51,640 --> 00:38:56,170
our on duration and in this case we'll

00:38:53,920 --> 00:38:58,089
set the search term to be tweet monkey

00:38:56,170 --> 00:39:00,220
now for the duration of this conference

00:38:58,089 --> 00:39:02,410
it's been open IOT so if you guys were

00:39:00,220 --> 00:39:04,420
in the expo hall and you heard tweet

00:39:02,410 --> 00:39:08,049
monkey going off it was because somebody

00:39:04,420 --> 00:39:10,569
was tweeting about open IOT which is

00:39:08,049 --> 00:39:12,940
gonna happen and an event like this okay

00:39:10,569 --> 00:39:15,309
and then kind of like in jQuery how you

00:39:12,940 --> 00:39:17,049
say don't do this until the document is

00:39:15,309 --> 00:39:19,960
ready here we're gonna say don't do all

00:39:17,049 --> 00:39:22,990
of this until the board is ready you can

00:39:19,960 --> 00:39:24,880
see that I'm using a nice es6 syntax in

00:39:22,990 --> 00:39:27,190
my java script here because this is

00:39:24,880 --> 00:39:29,349
using the latest version of node so it's

00:39:27,190 --> 00:39:31,750
very much capable of that and then I

00:39:29,349 --> 00:39:37,180
like giving nice friendly names to my

00:39:31,750 --> 00:39:40,630
actual pins here GPIO 23 and 24 you can

00:39:37,180 --> 00:39:43,690
look at a raspy Raspberry Pi pin map to

00:39:40,630 --> 00:39:45,519
see which pins those are but I want 23

00:39:43,690 --> 00:39:48,250
to be the pin that goes to my monkey and

00:39:45,519 --> 00:39:49,660
turns the monkey on and pin 24 to be the

00:39:48,250 --> 00:39:53,140
one that goes to the light so that later

00:39:49,660 --> 00:39:55,240
on I can say monkey high or light on

00:39:53,140 --> 00:39:58,660
that one's not showing but notice that

00:39:55,240 --> 00:40:01,150
the monkey is a pin and the light is an

00:39:58,660 --> 00:40:03,190
LED they're really doing the same thing

00:40:01,150 --> 00:40:04,040
but in Johnny 5 you get to specify a

00:40:03,190 --> 00:40:06,350
driver

00:40:04,040 --> 00:40:08,240
and that determines what functions you

00:40:06,350 --> 00:40:10,550
call on it so the calls make sense it

00:40:08,240 --> 00:40:12,770
makes sense to take a digital pin and

00:40:10,550 --> 00:40:14,810
set it higher low but if you have

00:40:12,770 --> 00:40:16,490
something that you know is a light then

00:40:14,810 --> 00:40:19,400
it makes more sense to say something

00:40:16,490 --> 00:40:21,740
like light on or light off or you also

00:40:19,400 --> 00:40:23,680
get things like light blink or light

00:40:21,740 --> 00:40:27,500
stop things like that

00:40:23,680 --> 00:40:30,050
okay so let's break this down now assume

00:40:27,500 --> 00:40:33,200
I've got all my keys correct and I'm

00:40:30,050 --> 00:40:35,390
signed in to the Twitter API the board

00:40:33,200 --> 00:40:37,910
is ready so I define a couple of pins

00:40:35,390 --> 00:40:40,130
great now I can just say light on or

00:40:37,910 --> 00:40:42,590
monkey high and I can control those pins

00:40:40,130 --> 00:40:45,800
but when do I want those to happen well

00:40:42,590 --> 00:40:48,770
I need to do this call into the Twitter

00:40:45,800 --> 00:40:51,260
client so clients stream I'm interested

00:40:48,770 --> 00:40:53,120
in filtering the statuses the status is

00:40:51,260 --> 00:40:55,310
the text of a tweets the hundred and

00:40:53,120 --> 00:40:57,080
forty characters so I need to filter the

00:40:55,310 --> 00:40:59,540
statuses this is just the way their API

00:40:57,080 --> 00:41:01,700
works and then I pass in this search

00:40:59,540 --> 00:41:03,920
term so this is that hash tag in this

00:41:01,700 --> 00:41:06,680
case tweet monkey I pass in that search

00:41:03,920 --> 00:41:09,740
term and I get a stream and with that

00:41:06,680 --> 00:41:12,470
stream I can wire up some events so the

00:41:09,740 --> 00:41:15,140
stream on data is what happens whenever

00:41:12,470 --> 00:41:17,060
a tweet occurs so this is gorgeous

00:41:15,140 --> 00:41:19,640
because this means that I'm defining a

00:41:17,060 --> 00:41:21,560
function and I'm kind of sending that

00:41:19,640 --> 00:41:23,900
function to Twitter and saying would you

00:41:21,560 --> 00:41:26,090
call this on my machine

00:41:23,900 --> 00:41:28,580
whenever you get a tweet that matches

00:41:26,090 --> 00:41:31,160
these criteria now I'm not polling

00:41:28,580 --> 00:41:32,870
Twitter and searching tweets and parsing

00:41:31,160 --> 00:41:33,410
them I'm not doing any of that funny

00:41:32,870 --> 00:41:35,300
business

00:41:33,410 --> 00:41:37,640
I'm just saying call me when you get one

00:41:35,300 --> 00:41:40,070
with this in it because Twitter knows

00:41:37,640 --> 00:41:43,220
how to search Twitter right far better

00:41:40,070 --> 00:41:45,260
than I do so Twitter searches Twitter I

00:41:43,220 --> 00:41:48,050
can also handle that error case but

00:41:45,260 --> 00:41:50,810
whenever I do get data it gives me a

00:41:48,050 --> 00:41:52,880
tweet and I can say first of all let's

00:41:50,810 --> 00:41:54,410
console.log that a tweet was received

00:41:52,880 --> 00:41:57,050
from this person and here's what they

00:41:54,410 --> 00:42:00,800
said but also let's set the monkey hi

00:41:57,050 --> 00:42:05,450
that sets the digital pin 23 to a value

00:42:00,800 --> 00:42:09,650
of 3.3 volts or a logical one okay those

00:42:05,450 --> 00:42:11,810
pins have built-in divider built-in

00:42:09,650 --> 00:42:15,020
pulldown resistors so there by default

00:42:11,810 --> 00:42:16,339
going to be zero volts unless you tell

00:42:15,020 --> 00:42:19,489
it hi and then it's going

00:42:16,339 --> 00:42:23,150
be and by the way that pulldown resistor

00:42:19,489 --> 00:42:25,670
is by default you can change that with

00:42:23,150 --> 00:42:27,969
software and make it be a default of

00:42:25,670 --> 00:42:30,589
high and then you have to pull it down

00:42:27,969 --> 00:42:32,839
programmatically and then I do a set

00:42:30,589 --> 00:42:35,479
timeout for the on duration so two in

00:42:32,839 --> 00:42:36,829
two seconds call monkey low it'll so in

00:42:35,479 --> 00:42:38,150
two seconds it's going to turn the

00:42:36,829 --> 00:42:40,009
monkey back down low

00:42:38,150 --> 00:42:42,319
if I get any errors just tell me what

00:42:40,009 --> 00:42:44,719
the error is and then Bourdon warned

00:42:42,319 --> 00:42:47,150
gets called whenever this process gets

00:42:44,719 --> 00:42:50,239
terminated or anything goes wrong with

00:42:47,150 --> 00:42:51,469
it if it's a board closing event then I

00:42:50,239 --> 00:42:52,729
want to make sure that the monkeys off

00:42:51,469 --> 00:42:54,499
and the light is off so I don't get

00:42:52,729 --> 00:42:56,599
stuck in a weird case where the

00:42:54,499 --> 00:42:59,059
application gets exited but the light's

00:42:56,599 --> 00:43:01,579
still on or the monkeys still going

00:42:59,059 --> 00:43:03,349
because it hadn't turned off yet that's

00:43:01,579 --> 00:43:05,809
that's really it for the code it's

00:43:03,349 --> 00:43:09,349
really really simple code the most

00:43:05,809 --> 00:43:11,539
difficult concepts here are the calling

00:43:09,349 --> 00:43:14,599
of this client stream and the defining

00:43:11,539 --> 00:43:16,819
of what happens whenever data lands

00:43:14,599 --> 00:43:19,819
those are might be new concepts for you

00:43:16,819 --> 00:43:22,039
you may also not have seen even if

00:43:19,819 --> 00:43:23,479
you've seen some JavaScript may not have

00:43:22,039 --> 00:43:28,460
had time to come up to speed on the

00:43:23,479 --> 00:43:31,519
latest es6 syntax and seen this fat

00:43:28,460 --> 00:43:33,739
arrow function syntax but i love it and

00:43:31,519 --> 00:43:35,269
so i use it and i'm trying to encourage

00:43:33,739 --> 00:43:37,759
people to get used to it even though i

00:43:35,269 --> 00:43:42,710
know it's a little bit a little bit of a

00:43:37,759 --> 00:43:44,450
tax so any questions on the code alright

00:43:42,710 --> 00:43:46,849
we've got about 6 minutes to get this

00:43:44,450 --> 00:43:49,400
code to the device and actually call it

00:43:46,849 --> 00:43:52,039
so at a conference like this

00:43:49,400 --> 00:43:55,069
this is gonna be child's play for you

00:43:52,039 --> 00:43:59,479
guys i basically just go into my tweet

00:43:55,069 --> 00:44:03,170
monkey and i do either an SCP or an r

00:43:59,479 --> 00:44:06,829
sync i like doing an r sync normally and

00:44:03,170 --> 00:44:08,359
that does it I'm just gonna skip over

00:44:06,829 --> 00:44:09,799
that so we can see something more

00:44:08,359 --> 00:44:12,319
interesting because you got it's already

00:44:09,799 --> 00:44:13,969
out there on the on the PI and you guys

00:44:12,319 --> 00:44:17,809
have probably seen that at least four

00:44:13,969 --> 00:44:21,349
times in your life so if I go into tweet

00:44:17,809 --> 00:44:23,809
monkey and show everything I have a node

00:44:21,349 --> 00:44:26,690
modules folder but if you just SCP that

00:44:23,809 --> 00:44:29,630
out all you really need is the index J s

00:44:26,690 --> 00:44:30,140
and the package jason because the index

00:44:29,630 --> 00:44:33,500
J

00:44:30,140 --> 00:44:36,740
is all the code and the package.json is

00:44:33,500 --> 00:44:39,529
the definition of this node package and

00:44:36,740 --> 00:44:41,930
which dependencies it has it defines

00:44:39,529 --> 00:44:45,079
things like I need Johnny Five I need

00:44:41,930 --> 00:44:48,589
raspy IO and I need Twitter and so if

00:44:45,079 --> 00:44:50,720
you just if you just SCP index J s and

00:44:48,589 --> 00:44:53,960
package JSON out there that's a nice

00:44:50,720 --> 00:44:56,510
fast way to deploy and then from here

00:44:53,960 --> 00:44:58,220
you need to do an NPM install and when

00:44:56,510 --> 00:45:00,170
you do that you get your node modules

00:44:58,220 --> 00:45:03,880
all flushed out everything's there and

00:45:00,170 --> 00:45:07,250
then you can call it except you can't

00:45:03,880 --> 00:45:11,599
because raspberry pi demands that you

00:45:07,250 --> 00:45:15,740
are elevated in order to access the GPIO

00:45:11,599 --> 00:45:17,630
and so you need to sue do that but if

00:45:15,740 --> 00:45:20,180
you sue do that then your environment

00:45:17,630 --> 00:45:31,480
variables are different and so you need

00:45:20,180 --> 00:45:35,059
to sue do with a big e know this and

00:45:31,480 --> 00:45:36,650
then I'll open my Twitter client now you

00:45:35,059 --> 00:45:37,970
see the light came on that light

00:45:36,650 --> 00:45:42,079
basically just means yeah we're

00:45:37,970 --> 00:45:44,769
listening and this this repple here is a

00:45:42,079 --> 00:45:47,720
feature of johnny-five you can actually

00:45:44,769 --> 00:45:49,309
talk directly to the device run commands

00:45:47,720 --> 00:45:51,529
against the device straight from this

00:45:49,309 --> 00:45:53,599
rebel so it's kind of nice I saw a nice

00:45:51,529 --> 00:45:55,849
illustration at a local event where a

00:45:53,599 --> 00:45:59,630
guy was using johnny-five to control a

00:45:55,849 --> 00:46:01,730
drone a drone mid-flight and from right

00:45:59,630 --> 00:46:03,710
here he would say you know left three

00:46:01,730 --> 00:46:06,170
and thing

00:46:03,710 --> 00:46:08,890
it was pretty pretty impressive just

00:46:06,170 --> 00:46:11,150
using that repple okay so I'm going to

00:46:08,890 --> 00:46:13,280
let's see what am I gonna do I'm gonna

00:46:11,150 --> 00:46:15,500
jump over to my Twitter client and you

00:46:13,280 --> 00:46:20,770
guys can do the same it's looking for

00:46:15,500 --> 00:46:29,150
tweet monkey so showing off the amazing

00:46:20,770 --> 00:46:37,520
wonderful brilliant tweet monkey at open

00:46:29,150 --> 00:46:41,630
IOT as we speak it's all that right two

00:46:37,520 --> 00:46:43,610
seconds and he's done alright and if you

00:46:41,630 --> 00:46:45,380
get a classroom full of Minister middle

00:46:43,610 --> 00:46:50,620
schoolers with Twitter clients this is

00:46:45,380 --> 00:46:50,620
just an absolute hoot questions

00:47:03,370 --> 00:47:08,000
high-frequency yeah I knew you were

00:47:06,050 --> 00:47:11,540
gonna ask that cuz there's always that

00:47:08,000 --> 00:47:13,970
one guy so what he's talking about is if

00:47:11,540 --> 00:47:16,730
you look at my code I'm turning on the

00:47:13,970 --> 00:47:18,410
monkey here and then I'm two seconds

00:47:16,730 --> 00:47:20,450
later I'm turning it off but it's very

00:47:18,410 --> 00:47:22,370
possible to get another high signal

00:47:20,450 --> 00:47:24,500
before this one's actually been called

00:47:22,370 --> 00:47:26,870
and so you'd run into a timing thing you

00:47:24,500 --> 00:47:28,010
caught me I could I could fix it but

00:47:26,870 --> 00:47:31,400
then that would make my code more

00:47:28,010 --> 00:47:34,520
complicated and and this this makes more

00:47:31,400 --> 00:47:36,200
sense right you have your lines it's a

00:47:34,520 --> 00:47:40,130
feature that's absolutely right it's a

00:47:36,200 --> 00:47:42,610
feature okay thanks everybody for

00:47:40,130 --> 00:47:42,610
joining me

00:47:43,450 --> 00:47:48,050

YouTube URL: https://www.youtube.com/watch?v=LA-a_SklUjo


