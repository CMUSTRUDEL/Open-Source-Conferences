Title: IoT Lockdown - Battling Bot Net Builders - Adam Englander, iovation
Publication date: 2017-02-27
Playlist: Embedded Linux Conference + OpenIoT Summit NA 2017
Description: 
	IoT Lockdown - Battling Bot Net Builders - Adam Englander, iovation

Internet of Things (IoT) devices are being used by bot net builders to target high profile applications with Distributed Denial of Service (DDoS) attacks. There are some very basic steps an IoT developer can take to ensure their devices are not suspect to takeover from a malicious intruder. Learn what those steps are and help battle the bot net builders.

About Adam Englander
Adam Englander is a virtual crime fighter for iovation with over 25 years of experience in building communities and applications. He travels the globe increasing awareness and understanding of the threats facing the computer science community from hackers and fraudsters. Adam is heavily involved in the developer community in his home town of Las Vegas. He is the founder of PHP Vegas, and a coordinator for PyVegas and the Las Vegas Developers group.
Captions: 
	00:00:00,000 --> 00:00:08,250
afternoon everybody and welcome to is he

00:00:05,759 --> 00:00:12,150
locked down battling the botnet builders

00:00:08,250 --> 00:00:19,619
I am Adam Englander and I work at high

00:00:12,150 --> 00:00:21,060
elevation actually here in town and hope

00:00:19,619 --> 00:00:23,250
everybody has a nice little break and

00:00:21,060 --> 00:00:25,740
they're ready for some some security

00:00:23,250 --> 00:00:27,269
it's a little sparse crowd so if you

00:00:25,740 --> 00:00:29,279
have any questions the middle feel free

00:00:27,269 --> 00:00:32,009
to bring it up it's pretty interactive

00:00:29,279 --> 00:00:35,130
if you want it to be I don't have a

00:00:32,009 --> 00:00:37,200
problem that at all so the first

00:00:35,130 --> 00:00:43,040
question I have for everybody is what

00:00:37,200 --> 00:00:47,480
happened on October 21st 2016 anyway no

00:00:43,040 --> 00:00:51,030
right that happened all right

00:00:47,480 --> 00:00:54,079
this is an outage right I was actually

00:00:51,030 --> 00:00:58,289
in Las Vegas so I was right about there

00:00:54,079 --> 00:01:00,660
when it happened my company's data

00:00:58,289 --> 00:01:04,769
center here was about there are other

00:01:00,660 --> 00:01:06,090
data center and Seattle was there you

00:01:04,769 --> 00:01:07,560
could not connect to our services we

00:01:06,090 --> 00:01:10,340
could not connect anything to manage it

00:01:07,560 --> 00:01:13,560
monitor it you a these types of things

00:01:10,340 --> 00:01:14,970
this was one of the first DDoS attacks

00:01:13,560 --> 00:01:17,220
I've ever seen or any kind of attack

00:01:14,970 --> 00:01:19,770
that the entire world noticed right

00:01:17,220 --> 00:01:22,320
because you couldn't get to Netflix you

00:01:19,770 --> 00:01:26,939
couldn't get to Gmail right you couldn't

00:01:22,320 --> 00:01:28,829
resolve names and some places had issues

00:01:26,939 --> 00:01:30,920
with traffic so i lured places had issue

00:01:28,829 --> 00:01:33,960
would just not be able to resolve DNS

00:01:30,920 --> 00:01:35,280
and this was a tough day I was a little

00:01:33,960 --> 00:01:36,180
conference when this happened trying to

00:01:35,280 --> 00:01:41,100
figure out what the heck's going on

00:01:36,180 --> 00:01:44,939
stuff flying around it's a good time and

00:01:41,100 --> 00:01:48,060
what this was is this was a distributed

00:01:44,939 --> 00:01:53,159
denial-of-service attack on Dyne which

00:01:48,060 --> 00:01:56,070
used up to 380,000 IOT devices all right

00:01:53,159 --> 00:01:59,250
this is why it was so hard to stop is

00:01:56,070 --> 00:02:03,840
there were 380,000 non-related IP

00:01:59,250 --> 00:02:08,069
addresses slamming died generating up to

00:02:03,840 --> 00:02:10,119
1.2 terabits per second of DNS requests

00:02:08,069 --> 00:02:12,330
all right

00:02:10,119 --> 00:02:14,530
massive flood of data coming in

00:02:12,330 --> 00:02:16,690
producing even while they were

00:02:14,530 --> 00:02:19,930
mitigating it it was still producing 50

00:02:16,690 --> 00:02:21,849
external traffic and this was one month

00:02:19,930 --> 00:02:23,580
after basically the exact same thing

00:02:21,849 --> 00:02:26,019
happened to Krebs on security

00:02:23,580 --> 00:02:29,440
so Krebs on security was attacked by the

00:02:26,019 --> 00:02:31,299
exact same botnet maybe not the same

00:02:29,440 --> 00:02:33,459
devices but the same basically the same

00:02:31,299 --> 00:02:35,530
software the same attack except they

00:02:33,459 --> 00:02:39,459
weren't doing DNS flooding they were

00:02:35,530 --> 00:02:42,910
doing HTTP requests and it was so bad it

00:02:39,459 --> 00:02:44,640
was double the worst thing that Akamai

00:02:42,910 --> 00:02:47,650
had ever seen

00:02:44,640 --> 00:02:50,980
Akamai actually dropped Krebs on

00:02:47,650 --> 00:02:52,420
security from their network because they

00:02:50,980 --> 00:02:53,709
were doing a pro bono and they said this

00:02:52,420 --> 00:02:56,829
cost us too much now that you're being

00:02:53,709 --> 00:02:59,230
attacked like this we cannot afford to

00:02:56,829 --> 00:03:03,459
deal with mitigating assaults on your on

00:02:59,230 --> 00:03:08,200
your site it is our job to prevent this

00:03:03,459 --> 00:03:12,220
from ever happening again this is 100

00:03:08,200 --> 00:03:15,849
percent IOT related I'm assuming that

00:03:12,220 --> 00:03:19,959
you care because you're here there are a

00:03:15,849 --> 00:03:20,889
lot of other people that aren't so I'm

00:03:19,959 --> 00:03:23,019
going to try and help you out a little

00:03:20,889 --> 00:03:24,669
bit and maybe give you some information

00:03:23,019 --> 00:03:29,010
that you might not have hopefully a

00:03:24,669 --> 00:03:31,690
couple tricks and tips that you can use

00:03:29,010 --> 00:03:33,730
and I'm assuming based on this

00:03:31,690 --> 00:03:36,730
conference that we're all doing embedded

00:03:33,730 --> 00:03:39,489
Linux development some of these things

00:03:36,730 --> 00:03:41,260
may apply to non embedded Linux but

00:03:39,489 --> 00:03:44,579
embedded Linux is where these attacks

00:03:41,260 --> 00:03:44,579
are coming from for the most part

00:03:44,790 --> 00:03:50,169
because there's been a wave of IOT

00:03:47,290 --> 00:03:52,329
development or an IOT development with

00:03:50,169 --> 00:03:54,459
embedded Linux it's made developing and

00:03:52,329 --> 00:03:57,329
manufacturing more accessible alright we

00:03:54,459 --> 00:03:59,919
can rapidly prototype something and just

00:03:57,329 --> 00:04:01,389
do it on a very easy development board

00:03:59,919 --> 00:04:02,889
move it over to a production board

00:04:01,389 --> 00:04:05,859
running embedded Linux super easy super

00:04:02,889 --> 00:04:07,900
quick and it's reducing time to market

00:04:05,859 --> 00:04:10,660
right so it's becoming more more popular

00:04:07,900 --> 00:04:11,859
but have you have more access right you

00:04:10,660 --> 00:04:14,139
don't have to be able to write stuff

00:04:11,859 --> 00:04:16,419
onto a chip in situ be able to do IOT

00:04:14,139 --> 00:04:17,500
development and you can do that with

00:04:16,419 --> 00:04:19,419
things that actually go into production

00:04:17,500 --> 00:04:21,010
now so that's the exciting of the

00:04:19,419 --> 00:04:22,400
brand-new dawn of a new day for IOT

00:04:21,010 --> 00:04:25,410
development

00:04:22,400 --> 00:04:28,410
there's also Security benefits for embed

00:04:25,410 --> 00:04:31,500
Linux right Linux provides facilities

00:04:28,410 --> 00:04:36,600
for tantastic security right the the

00:04:31,500 --> 00:04:37,800
internet runs on Linux or a UNIX variant

00:04:36,600 --> 00:04:39,420
for the most part right there's some

00:04:37,800 --> 00:04:43,530
there's some of the world that runs on

00:04:39,420 --> 00:04:46,020
Windows but it's not a lot it's not a

00:04:43,530 --> 00:04:50,310
lot of things like Facebook which runs

00:04:46,020 --> 00:04:51,720
on Linux Google which runs on some of

00:04:50,310 --> 00:04:55,080
their own stuff kind of weird but mostly

00:04:51,720 --> 00:04:58,560
some sort of Star addicts type variant

00:04:55,080 --> 00:04:59,820
and these people have and over the just

00:04:58,560 --> 00:05:02,130
you know the decades that it's been

00:04:59,820 --> 00:05:04,980
around with the other conference that

00:05:02,130 --> 00:05:06,360
we're kind of joined up with you can

00:05:04,980 --> 00:05:09,330
tell there's a lot of stuff for making

00:05:06,360 --> 00:05:10,920
it fantastically secure and because of

00:05:09,330 --> 00:05:13,920
that there's numerous resources that

00:05:10,920 --> 00:05:15,570
exist already for implementing super

00:05:13,920 --> 00:05:17,040
secure Linux because people have been

00:05:15,570 --> 00:05:18,900
doing this for a very long time

00:05:17,040 --> 00:05:23,130
hard anything's making these things very

00:05:18,900 --> 00:05:26,970
very very secure but all that we have to

00:05:23,130 --> 00:05:29,040
remember two things I'm come from sorry

00:05:26,970 --> 00:05:30,180
I come for a security background so I

00:05:29,040 --> 00:05:32,430
know that number one you will be

00:05:30,180 --> 00:05:33,960
attacked okay if you have something

00:05:32,430 --> 00:05:38,160
connected to the Internet it's being

00:05:33,960 --> 00:05:39,960
scanned right now there are good actors

00:05:38,160 --> 00:05:41,910
and bad actors right now that are

00:05:39,960 --> 00:05:44,250
scanning every single IP they literally

00:05:41,910 --> 00:05:45,540
just go through the numbers and they

00:05:44,250 --> 00:05:47,190
connect to it they start knocking is

00:05:45,540 --> 00:05:48,980
this here is this here is this here is

00:05:47,190 --> 00:05:51,300
this here and it just records it

00:05:48,980 --> 00:05:52,770
sometimes are looking to see just be

00:05:51,300 --> 00:05:54,540
able to researchers to find out

00:05:52,770 --> 00:05:55,620
information how many DNS servers are out

00:05:54,540 --> 00:05:58,770
there how many people have an oboe an

00:05:55,620 --> 00:06:01,590
FTP port they may come back later and

00:05:58,770 --> 00:06:03,170
say do you have security on FTP do you

00:06:01,590 --> 00:06:08,310
have security and SSH

00:06:03,170 --> 00:06:10,110
so just being on the Internet you will

00:06:08,310 --> 00:06:15,300
be scanned and the likelihood that

00:06:10,110 --> 00:06:16,890
you'll be attacked is 100% and you will

00:06:15,300 --> 00:06:18,630
be exposed to a zero-day vulnerability

00:06:16,890 --> 00:06:22,770
okay if you don't know where a zero-day

00:06:18,630 --> 00:06:26,180
vulnerability is that is when the if you

00:06:22,770 --> 00:06:29,760
if you have good actors and you have a

00:06:26,180 --> 00:06:31,260
good ecosystem someone will find an

00:06:29,760 --> 00:06:33,690
issue a security issue with your system

00:06:31,260 --> 00:06:35,460
and they will alert the community and

00:06:33,690 --> 00:06:36,220
say hi I'm not going to tell anybody

00:06:35,460 --> 00:06:38,200
else

00:06:36,220 --> 00:06:42,310
but I found this really terrible

00:06:38,200 --> 00:06:44,230
vulnerability that you have and I would

00:06:42,310 --> 00:06:46,030
like you to fix it and I'm going to give

00:06:44,230 --> 00:06:47,470
you X number of days to fix it before I

00:06:46,030 --> 00:06:49,930
tell the rest of the world because it's

00:06:47,470 --> 00:06:52,470
a really bad vulnerability and the world

00:06:49,930 --> 00:06:54,910
is vulnerable and they need to know this

00:06:52,470 --> 00:06:56,260
sometimes they don't fix it they decide

00:06:54,910 --> 00:06:58,860
it's not a problem or they decide that

00:06:56,260 --> 00:07:01,270
they're just not going to do it and

00:06:58,860 --> 00:07:03,760
sometimes it's just not found and it's

00:07:01,270 --> 00:07:07,210
not a good actor that exposes it and you

00:07:03,760 --> 00:07:08,410
find out after a hack happens a year and

00:07:07,210 --> 00:07:10,780
a half ago heartbleed was one of those

00:07:08,410 --> 00:07:12,610
all right if you were doing anything

00:07:10,780 --> 00:07:13,600
with Linux right you know I said

00:07:12,610 --> 00:07:14,290
everybody else uh nobody started

00:07:13,600 --> 00:07:16,360
freaking about this thing called

00:07:14,290 --> 00:07:17,740
heartbleed all right it was a vol really

00:07:16,360 --> 00:07:20,620
an open SSL there was a zero-day

00:07:17,740 --> 00:07:21,970
vulnerability you found out the day that

00:07:20,620 --> 00:07:24,580
you needed to pick today you need to fix

00:07:21,970 --> 00:07:26,200
it and so you had to apply all these

00:07:24,580 --> 00:07:28,120
crazy patches to prevent the problem

00:07:26,200 --> 00:07:30,700
before open SSL actually came out with

00:07:28,120 --> 00:07:32,820
with the things so these things are just

00:07:30,700 --> 00:07:35,560
going to happen right you're using Linux

00:07:32,820 --> 00:07:36,640
it's just going to happen it's going to

00:07:35,560 --> 00:07:38,530
be way better than what you can do if

00:07:36,640 --> 00:07:39,820
you wrote your own operating system but

00:07:38,530 --> 00:07:43,930
it's going to happen it's part of the as

00:07:39,820 --> 00:07:45,130
part of the system the other super

00:07:43,930 --> 00:07:49,690
important thing is you have to know your

00:07:45,130 --> 00:07:51,700
adversary and when we're building small

00:07:49,690 --> 00:07:54,250
products that do small things we don't

00:07:51,700 --> 00:07:55,900
think very large right we don't think

00:07:54,250 --> 00:07:57,520
about I mean there's the lone gunman

00:07:55,900 --> 00:07:59,020
right there's someone who's just tried

00:07:57,520 --> 00:08:00,940
to hack things they hack things for the

00:07:59,020 --> 00:08:02,229
sake of hacking things and they they

00:08:00,940 --> 00:08:03,729
have things like I say they're really

00:08:02,229 --> 00:08:05,590
cool and they broke into stuff right

00:08:03,729 --> 00:08:07,630
they have no really other ulterior

00:08:05,590 --> 00:08:09,669
motives they're just kind of seeing what

00:08:07,630 --> 00:08:13,510
they can do right these people age range

00:08:09,669 --> 00:08:16,180
from the age of 10 to 90 they're usually

00:08:13,510 --> 00:08:17,620
not terribly dangerous but they probably

00:08:16,180 --> 00:08:18,970
don't follow the same protocols that

00:08:17,620 --> 00:08:20,890
ethical hacker does of letting you know

00:08:18,970 --> 00:08:22,510
before the rest of the world right so

00:08:20,890 --> 00:08:23,830
they might find something and just you

00:08:22,510 --> 00:08:25,210
know spin it out to the world they found

00:08:23,830 --> 00:08:26,380
this terrible vulnerability but not tell

00:08:25,210 --> 00:08:29,740
you beforehand and give you a chance to

00:08:26,380 --> 00:08:32,500
fix it there's local criminals IOT has a

00:08:29,740 --> 00:08:34,780
very specific different problem that

00:08:32,500 --> 00:08:37,599
most of your other linux brethren don't

00:08:34,780 --> 00:08:39,190
have is that you're not giving

00:08:37,599 --> 00:08:41,320
information about a specific individual

00:08:39,190 --> 00:08:43,390
when you think about what you're doing

00:08:41,320 --> 00:08:45,490
if you have let's say you're writing a

00:08:43,390 --> 00:08:48,610
thermostat or some smart home or smart

00:08:45,490 --> 00:08:49,840
office piece one device by itself

00:08:48,610 --> 00:08:51,850
doesn't do much

00:08:49,840 --> 00:08:54,810
but a lot of devices throwing out data

00:08:51,850 --> 00:08:56,890
allows criminals to have a profile of

00:08:54,810 --> 00:08:58,660
tracking the garage door opener the

00:08:56,890 --> 00:09:01,000
thermostat the lights oh I know when

00:08:58,660 --> 00:09:03,340
they come home I know when they leave I

00:09:01,000 --> 00:09:04,720
know when they're not expecting to be

00:09:03,340 --> 00:09:06,250
coming back because they have different

00:09:04,720 --> 00:09:07,300
parameters on what they set things so if

00:09:06,250 --> 00:09:09,460
I'm not going out for the day

00:09:07,300 --> 00:09:11,080
I've drop it ten degrees if I'm going

00:09:09,460 --> 00:09:13,450
out for a week I drop it sixty degrees

00:09:11,080 --> 00:09:15,460
all right on the heater because you're

00:09:13,450 --> 00:09:16,600
not that worried about it and if they

00:09:15,460 --> 00:09:18,310
drop it really far down that means they

00:09:16,600 --> 00:09:20,380
probably don't have a dog all right so

00:09:18,310 --> 00:09:21,550
there's a lot of things that one little

00:09:20,380 --> 00:09:22,750
piece might have anything to do with but

00:09:21,550 --> 00:09:24,760
if you put all this stuff together and

00:09:22,750 --> 00:09:27,310
you build a profile of someone that a

00:09:24,760 --> 00:09:29,440
local criminal just leeching off of

00:09:27,310 --> 00:09:31,210
information being sent IOT devices they

00:09:29,440 --> 00:09:32,170
have the ability to create profiles to

00:09:31,210 --> 00:09:35,110
be able to know when they can do an

00:09:32,170 --> 00:09:36,520
attack whether that's a high profile

00:09:35,110 --> 00:09:37,750
individual or even just a low profile

00:09:36,520 --> 00:09:42,700
individual where it's just kind of

00:09:37,750 --> 00:09:44,200
standard theft activist groups I haven't

00:09:42,700 --> 00:09:46,270
seen that a lot and IOT but it does

00:09:44,200 --> 00:09:49,270
happen and it's going to happen right if

00:09:46,270 --> 00:09:51,550
you have there are groups that think

00:09:49,270 --> 00:09:54,190
that certain things shouldn't exist or

00:09:51,550 --> 00:09:56,170
that things were bad right there's a few

00:09:54,190 --> 00:09:58,390
fairly recent examples Ashley Madison

00:09:56,170 --> 00:09:59,650
was a big example of that where they got

00:09:58,390 --> 00:10:01,030
hacked because someone said you're a

00:09:59,650 --> 00:10:03,760
terrible person you're doing terrible

00:10:01,030 --> 00:10:05,680
things and you shut down or I expose you

00:10:03,760 --> 00:10:08,650
and they didn't shut down they got

00:10:05,680 --> 00:10:10,840
exposed so if your devices are being

00:10:08,650 --> 00:10:13,450
used in some place that someone doesn't

00:10:10,840 --> 00:10:15,100
like they may use your devices to do

00:10:13,450 --> 00:10:16,420
terrible things to people and weather

00:10:15,100 --> 00:10:17,680
that weather depending on what side

00:10:16,420 --> 00:10:19,300
you're on you may be really upset or

00:10:17,680 --> 00:10:20,470
really happy about it but the likelihood

00:10:19,300 --> 00:10:21,730
that's going to be used on something

00:10:20,470 --> 00:10:23,140
that you're gonna be upset that it

00:10:21,730 --> 00:10:26,170
happens that your device was responsible

00:10:23,140 --> 00:10:29,580
for it it's pretty high because there

00:10:26,170 --> 00:10:33,520
are angry people about everything

00:10:29,580 --> 00:10:36,520
competitors so competitors either

00:10:33,520 --> 00:10:37,840
competitors of yours right they can find

00:10:36,520 --> 00:10:39,820
these things they'll find these bugs

00:10:37,840 --> 00:10:41,560
these vulnerabilities and inform the

00:10:39,820 --> 00:10:43,330
world that you're not secure or

00:10:41,560 --> 00:10:45,460
competitors of people who use your

00:10:43,330 --> 00:10:46,510
devices using your devices to gain that

00:10:45,460 --> 00:10:50,340
access through network and get

00:10:46,510 --> 00:10:53,110
information organized crime is a big one

00:10:50,340 --> 00:10:54,550
for organized crime tends to be

00:10:53,110 --> 00:10:56,110
something where they're doing extortion

00:10:54,550 --> 00:10:59,380
where they're finding out information

00:10:56,110 --> 00:11:01,000
about individuals and using that to

00:10:59,380 --> 00:11:03,700
extort money from them so it's not

00:11:01,000 --> 00:11:07,060
released and then nation-states

00:11:03,700 --> 00:11:09,700
so nation states it's a really kind of

00:11:07,060 --> 00:11:12,580
weird thing nation states just collect a

00:11:09,700 --> 00:11:13,720
ton of data because they're just they

00:11:12,580 --> 00:11:16,000
just want to collect all the data they

00:11:13,720 --> 00:11:18,250
possibly can because they have the

00:11:16,000 --> 00:11:22,540
computing resources and power to use

00:11:18,250 --> 00:11:24,280
that to make determinations so they just

00:11:22,540 --> 00:11:25,570
used just massive massive data

00:11:24,280 --> 00:11:27,580
collection whether it's our government

00:11:25,570 --> 00:11:30,910
or somebody else's they're all doing

00:11:27,580 --> 00:11:32,260
massive data collection and if they can

00:11:30,910 --> 00:11:34,360
use your devices for doing those data

00:11:32,260 --> 00:11:36,580
collections you're probably not doing

00:11:34,360 --> 00:11:38,320
your users a favor by giving them the

00:11:36,580 --> 00:11:41,830
privacy that they are expecting that you

00:11:38,320 --> 00:11:43,630
think that you're giving them so that we

00:11:41,830 --> 00:11:46,210
kind of know that we start talking about

00:11:43,630 --> 00:11:47,980
security so security is like an ogre it

00:11:46,210 --> 00:11:49,590
has layers I hope somebody gets that

00:11:47,980 --> 00:11:51,150
joke because it's one of my favorites

00:11:49,590 --> 00:11:54,430
[Music]

00:11:51,150 --> 00:11:56,020
and it's layered security it's

00:11:54,430 --> 00:11:57,820
defense-in-depth right this is not

00:11:56,020 --> 00:11:59,470
something that is specific to security

00:11:57,820 --> 00:12:01,420
this is something that is specific to

00:11:59,470 --> 00:12:04,270
defense right if you go take a look at a

00:12:01,420 --> 00:12:06,610
castle it has a moat three walls and a

00:12:04,270 --> 00:12:08,170
keep because they know that any one of

00:12:06,610 --> 00:12:12,490
these things can fail but all of them

00:12:08,170 --> 00:12:16,300
probably won't and the way we do that in

00:12:12,490 --> 00:12:19,210
defense is that we do it through layers

00:12:16,300 --> 00:12:21,400
in the system right so your applications

00:12:19,210 --> 00:12:24,040
running on an embedded Linux system has

00:12:21,400 --> 00:12:25,570
layers and what we have to do is we have

00:12:24,040 --> 00:12:28,360
to understand these layers a little bit

00:12:25,570 --> 00:12:30,010
and we have to understand how each one

00:12:28,360 --> 00:12:30,940
of these layers really takes place and

00:12:30,010 --> 00:12:33,820
what the things that we can do to help

00:12:30,940 --> 00:12:35,290
protect them at that network the

00:12:33,820 --> 00:12:38,830
application of service file system an

00:12:35,290 --> 00:12:40,990
operating system level if you're if

00:12:38,830 --> 00:12:45,100
you're like me you're probably not a

00:12:40,990 --> 00:12:47,680
great sysadmin but you're writing things

00:12:45,100 --> 00:12:49,030
that run on a system whether that's your

00:12:47,680 --> 00:12:50,500
doing IOT there's oh there's another

00:12:49,030 --> 00:12:53,350
huge problem is coming up with

00:12:50,500 --> 00:12:54,190
containers right the docker world you

00:12:53,350 --> 00:12:55,330
now have people that are writing

00:12:54,190 --> 00:12:57,160
applications that are running in

00:12:55,330 --> 00:12:58,300
containers that run on Linux they don't

00:12:57,160 --> 00:13:01,060
really pay attention to the Linux side

00:12:58,300 --> 00:13:03,190
so containers and running in these

00:13:01,060 --> 00:13:05,890
systems on Amazon and Google have their

00:13:03,190 --> 00:13:08,260
own problems the same that IOT has

00:13:05,890 --> 00:13:10,510
because neither of them are really good

00:13:08,260 --> 00:13:12,040
at none of us are really good at being

00:13:10,510 --> 00:13:14,110
system administrators and being Linux

00:13:12,040 --> 00:13:16,120
security specialists but now we don't

00:13:14,110 --> 00:13:19,240
need those other people to run

00:13:16,120 --> 00:13:23,500
systems and not having them as crazing

00:13:19,240 --> 00:13:27,850
is creating some havoc so in the

00:13:23,500 --> 00:13:30,250
operating system level you have to have

00:13:27,850 --> 00:13:31,660
a patching strategy so there are

00:13:30,250 --> 00:13:33,370
vulnerabilities that you're going to

00:13:31,660 --> 00:13:35,400
have and you're gonna have a device

00:13:33,370 --> 00:13:37,480
that's out there in the wild somewhere

00:13:35,400 --> 00:13:40,870
you have to come up with a way to be

00:13:37,480 --> 00:13:42,100
able to patch the operating system past

00:13:40,870 --> 00:13:44,890
the operating system in a manner that is

00:13:42,100 --> 00:13:46,540
secure it's something that a lot of us

00:13:44,890 --> 00:13:48,970
don't think about right if you I don't

00:13:46,540 --> 00:13:50,800
know how many drones I have that have no

00:13:48,970 --> 00:13:52,900
way to update their the firmware or to

00:13:50,800 --> 00:13:53,920
update their actual operating system all

00:13:52,900 --> 00:13:55,420
right they're running on a Linux system

00:13:53,920 --> 00:13:56,740
and they're always going to be on the

00:13:55,420 --> 00:13:58,480
wrong Linux system and it's whatever

00:13:56,740 --> 00:14:00,070
vulnerability it has when I bought it is

00:13:58,480 --> 00:14:02,620
the vulnerabilities gonna have to the

00:14:00,070 --> 00:14:06,730
end of time because they did not give me

00:14:02,620 --> 00:14:09,730
an upgrade opportunity one way one of

00:14:06,730 --> 00:14:11,470
the things that you can do it's becoming

00:14:09,730 --> 00:14:14,050
actually we might be able to leverage

00:14:11,470 --> 00:14:16,750
some of the container world is minimal

00:14:14,050 --> 00:14:19,150
distributions so there are Linux

00:14:16,750 --> 00:14:21,660
distributions out there that are super

00:14:19,150 --> 00:14:23,470
tiny they're meant to be super tiny

00:14:21,660 --> 00:14:25,870
because they're meant to take up as

00:14:23,470 --> 00:14:27,640
little memory as possible because in the

00:14:25,870 --> 00:14:28,839
container world if you can reduce the

00:14:27,640 --> 00:14:30,459
amount of stuff that's rolling out there

00:14:28,839 --> 00:14:33,430
in containers you can have help

00:14:30,459 --> 00:14:35,920
application developers stop doing as

00:14:33,430 --> 00:14:38,140
many terrible things we can leverage

00:14:35,920 --> 00:14:39,610
that the IOT world is - as well right

00:14:38,140 --> 00:14:41,020
one of the things that you normally do

00:14:39,610 --> 00:14:43,920
is you figure out I've got a standard

00:14:41,020 --> 00:14:46,589
Linux distribution well it's Yocto or

00:14:43,920 --> 00:14:48,430
raspbian or whatever the case may be and

00:14:46,589 --> 00:14:50,470
what you want to try and do is start

00:14:48,430 --> 00:14:52,360
paring down well the other option is is

00:14:50,470 --> 00:14:54,370
you can start with nearly nothing and

00:14:52,360 --> 00:14:57,130
then add an add a couple things that you

00:14:54,370 --> 00:14:59,380
need because most of us we don't need

00:14:57,130 --> 00:15:00,730
SMTP we don't need FTP right we don't

00:14:59,380 --> 00:15:02,440
need all these other services that come

00:15:00,730 --> 00:15:06,100
with it will normally provide that in

00:15:02,440 --> 00:15:08,130
the application layer the number one

00:15:06,100 --> 00:15:11,080
problem with if you take a look at the

00:15:08,130 --> 00:15:12,670
statistics on how these botnets actually

00:15:11,080 --> 00:15:14,110
happened and you actually take a look at

00:15:12,670 --> 00:15:16,089
a lot of the early drones and how they

00:15:14,110 --> 00:15:19,089
were actually hacked it's because they

00:15:16,089 --> 00:15:21,130
used a default username and password for

00:15:19,089 --> 00:15:22,110
every single one and they never changed

00:15:21,130 --> 00:15:24,280
and there was no way to change it

00:15:22,110 --> 00:15:27,220
alright you've got a limit Linux system

00:15:24,280 --> 00:15:29,860
that has a user root and that neither

00:15:27,220 --> 00:15:31,870
root user either has no password

00:15:29,860 --> 00:15:34,839
or it has the same password for every

00:15:31,870 --> 00:15:37,420
device which means all I have to do is

00:15:34,839 --> 00:15:40,510
get into one and I can get into all of

00:15:37,420 --> 00:15:41,980
them so my suggestion to you is to find

00:15:40,510 --> 00:15:43,870
a way to do some randomization with that

00:15:41,980 --> 00:15:45,370
if you can print out a serial number you

00:15:43,870 --> 00:15:47,470
can associate a random value with that

00:15:45,370 --> 00:15:50,470
and that value can be the random

00:15:47,470 --> 00:15:52,750
password so that if they managed to get

00:15:50,470 --> 00:15:54,940
into your source code and find the

00:15:52,750 --> 00:15:56,950
default username and password they don't

00:15:54,940 --> 00:15:58,510
find everybody's password they have to

00:15:56,950 --> 00:16:00,610
go crack your database and go find a few

00:15:58,510 --> 00:16:02,290
things all right that's that defense and

00:16:00,610 --> 00:16:03,339
death make it a little harder for them

00:16:02,290 --> 00:16:04,720
to get through make it more expensive

00:16:03,339 --> 00:16:10,890
make it more difficult for them to get

00:16:04,720 --> 00:16:15,149
in and require strong passwords so

00:16:10,890 --> 00:16:17,290
authentication modules allow you to

00:16:15,149 --> 00:16:18,220
inside of Linux allow you to require

00:16:17,290 --> 00:16:22,060
strong passwords

00:16:18,220 --> 00:16:23,140
don't let your users hurt themselves you

00:16:22,060 --> 00:16:24,519
probably hate it as much as everybody

00:16:23,140 --> 00:16:26,610
else right when someone requires a

00:16:24,519 --> 00:16:29,190
strong password that you don't remember

00:16:26,610 --> 00:16:31,990
but we're talking about devices and if

00:16:29,190 --> 00:16:34,089
the users probably should never be able

00:16:31,990 --> 00:16:35,920
to connect through the terminal all

00:16:34,089 --> 00:16:37,449
right we're supposed to be building

00:16:35,920 --> 00:16:39,790
applications so they never have to

00:16:37,449 --> 00:16:41,380
connect to the terminal so why would you

00:16:39,790 --> 00:16:42,760
not want to have a super secure password

00:16:41,380 --> 00:16:44,350
for that one case where someone might

00:16:42,760 --> 00:16:49,680
have to do that just to recover their

00:16:44,350 --> 00:16:51,880
system somehow at the file system level

00:16:49,680 --> 00:16:53,380
named application users are a really big

00:16:51,880 --> 00:16:54,970
deal all right when your application is

00:16:53,380 --> 00:16:58,870
running on this device it should not be

00:16:54,970 --> 00:17:00,610
running as root depending if you're

00:16:58,870 --> 00:17:02,199
using something standard right if you're

00:17:00,610 --> 00:17:04,809
using like a Python server or if you're

00:17:02,199 --> 00:17:08,860
using node or maybe you're running a JVM

00:17:04,809 --> 00:17:09,910
or if you're running C the other ones

00:17:08,860 --> 00:17:11,350
are a little easier they're pretty well

00:17:09,910 --> 00:17:13,650
stand out but you can basically you

00:17:11,350 --> 00:17:16,449
start your application as the root user

00:17:13,650 --> 00:17:18,280
connected to port 80 or whatever port is

00:17:16,449 --> 00:17:20,290
as a high level port that you need root

00:17:18,280 --> 00:17:22,780
access for and then you just spawn off

00:17:20,290 --> 00:17:24,819
another fork and that Fork is a much

00:17:22,780 --> 00:17:27,189
lower level and that fork is going to

00:17:24,819 --> 00:17:28,360
process your request it's the same thing

00:17:27,189 --> 00:17:29,799
that nginx does the same thing that

00:17:28,360 --> 00:17:32,679
Apache does the same thing that the the

00:17:29,799 --> 00:17:34,419
Java servers do you start up his root

00:17:32,679 --> 00:17:36,160
but when you're actually running the

00:17:34,419 --> 00:17:38,140
code that fork is not running as root

00:17:36,160 --> 00:17:39,940
because if you give somebody root access

00:17:38,140 --> 00:17:41,980
they can do terrible terrible things

00:17:39,940 --> 00:17:45,030
basically anything that you can possibly

00:17:41,980 --> 00:17:45,030
think of they can do it

00:17:45,289 --> 00:17:50,039
restrict your application to only the

00:17:47,609 --> 00:17:51,480
files necessary to run right it's super

00:17:50,039 --> 00:17:53,190
easy for development to give yourself

00:17:51,480 --> 00:17:54,859
access to everything so you don't have

00:17:53,190 --> 00:17:57,269
to start figuring out file permissions

00:17:54,859 --> 00:17:58,679
and that's fine for development but once

00:17:57,269 --> 00:18:00,029
you start actually getting ready to put

00:17:58,679 --> 00:18:01,409
your application out there you've got to

00:18:00,029 --> 00:18:02,609
harden that up and say what is my

00:18:01,409 --> 00:18:04,739
thought what does this actually need

00:18:02,609 --> 00:18:06,659
access to should ia be able to write to

00:18:04,739 --> 00:18:07,889
Etsy alright should I be able to write

00:18:06,659 --> 00:18:10,440
to the configuration files for the

00:18:07,889 --> 00:18:12,299
entire Linux system absolutely not

00:18:10,440 --> 00:18:14,429
all right if your application needs to

00:18:12,299 --> 00:18:16,759
right there and it's not for just the

00:18:14,429 --> 00:18:21,350
initial setup it's probably a bad thing

00:18:16,759 --> 00:18:23,940
and avoid write access forever possible

00:18:21,350 --> 00:18:25,499
there may be certain issues instances

00:18:23,940 --> 00:18:27,239
where your application has to write but

00:18:25,499 --> 00:18:29,070
limit those as much as possible because

00:18:27,239 --> 00:18:31,710
giving your application right access is

00:18:29,070 --> 00:18:33,239
giving it the ability to change things

00:18:31,710 --> 00:18:34,859
that that operating system level at the

00:18:33,239 --> 00:18:36,779
application level possibly even

00:18:34,859 --> 00:18:37,739
overwrite your own source code all right

00:18:36,779 --> 00:18:39,600
if you're running something it's not

00:18:37,739 --> 00:18:42,179
compiled if you're running something

00:18:39,600 --> 00:18:44,340
like a Python or JavaScript right

00:18:42,179 --> 00:18:47,249
someone can just rewrite your code and

00:18:44,340 --> 00:18:49,139
now you're executing all new code which

00:18:47,249 --> 00:18:53,279
is a really really bad thing that you

00:18:49,139 --> 00:18:54,539
don't want to get people to do once you

00:18:53,279 --> 00:18:57,389
get outside the file system you get to

00:18:54,539 --> 00:19:00,600
service security this is a problem with

00:18:57,389 --> 00:19:01,830
application servers everywhere and one

00:19:00,600 --> 00:19:04,080
of the things that I've done over the

00:19:01,830 --> 00:19:06,419
years in application development and

00:19:04,080 --> 00:19:11,549
more recently an outtie development is

00:19:06,419 --> 00:19:13,169
reduced local dependencies so and the

00:19:11,549 --> 00:19:15,629
reason way that you do that is you don't

00:19:13,169 --> 00:19:19,109
process things locally if you don't have

00:19:15,629 --> 00:19:20,100
to a lot of a lot of IOT devices we're

00:19:19,109 --> 00:19:21,389
finding the best way to do that is

00:19:20,100 --> 00:19:22,679
you're going to have some sort of proxy

00:19:21,389 --> 00:19:23,879
to go do all these things you're

00:19:22,679 --> 00:19:28,499
connecting to an external service to

00:19:23,879 --> 00:19:31,320
manage don't use SMTP locally it may be

00:19:28,499 --> 00:19:34,109
easier but now you've got an SMTP server

00:19:31,320 --> 00:19:36,779
running on your IOT device all right and

00:19:34,109 --> 00:19:37,919
that IOT device is going to be accessed

00:19:36,779 --> 00:19:40,320
and if you've done something bad

00:19:37,919 --> 00:19:41,460
someone's gonna go great now I've got a

00:19:40,320 --> 00:19:43,619
Linux computer I could start sending

00:19:41,460 --> 00:19:46,730
spam from all right we all become part

00:19:43,619 --> 00:19:46,730
of the spam problem whenever we do that

00:19:47,389 --> 00:19:53,099
FTP SMTP right if you don't need to get

00:19:50,909 --> 00:19:56,009
SSH access just don't even install it

00:19:53,099 --> 00:19:56,960
all right like I said most of time we

00:19:56,009 --> 00:19:58,220
don't

00:19:56,960 --> 00:20:02,030
users should never have to go to a

00:19:58,220 --> 00:20:03,950
console to run our applications if you

00:20:02,030 --> 00:20:05,000
do have services and it's something that

00:20:03,950 --> 00:20:06,440
you do have to have so you have

00:20:05,000 --> 00:20:08,690
something that's completely separated

00:20:06,440 --> 00:20:11,360
it's not going to be connecting to

00:20:08,690 --> 00:20:13,100
anybody else's systems it's not it's a

00:20:11,360 --> 00:20:14,870
single standalone device that needs to

00:20:13,100 --> 00:20:17,210
be a single standalone device require

00:20:14,870 --> 00:20:18,020
authentication for those services your

00:20:17,210 --> 00:20:19,550
application knows where the

00:20:18,020 --> 00:20:21,170
authentication is but someone can't just

00:20:19,550 --> 00:20:23,450
get out of the box and start using and

00:20:21,170 --> 00:20:24,920
setting it out it makes a little more

00:20:23,450 --> 00:20:27,140
difficult on your sites you have to pass

00:20:24,920 --> 00:20:30,080
credentials through to SMTP or whatever

00:20:27,140 --> 00:20:31,930
the case may be but just make sure you

00:20:30,080 --> 00:20:33,920
have them so that someone can't just

00:20:31,930 --> 00:20:38,480
start sending things to your IP address

00:20:33,920 --> 00:20:40,940
on port 27:27 or anywhere they want to

00:20:38,480 --> 00:20:42,500
and just start sending 25 SMTP alright

00:20:40,940 --> 00:20:46,190
don't turn yourself to an SMTP transport

00:20:42,500 --> 00:20:48,730
it would be a really bad day and be as

00:20:46,190 --> 00:20:50,480
secure as possible with service data

00:20:48,730 --> 00:20:53,720
understand the data that you're putting

00:20:50,480 --> 00:20:54,680
in these services understand that most

00:20:53,720 --> 00:20:57,110
of this stuff when you're talking about

00:20:54,680 --> 00:21:00,530
the Linux side it goes into a file that

00:20:57,110 --> 00:21:02,480
is text and can be read all right SMTP

00:21:00,530 --> 00:21:04,130
goes into a queue how's it going to a

00:21:02,480 --> 00:21:06,080
queue it's a file it just gets written

00:21:04,130 --> 00:21:08,030
to a directory so if there's

00:21:06,080 --> 00:21:09,710
super-secret information there you've

00:21:08,030 --> 00:21:12,650
got a problem because it's accessible

00:21:09,710 --> 00:21:14,450
for the filesystem so be as secure as

00:21:12,650 --> 00:21:15,590
possible that data if you've got data

00:21:14,450 --> 00:21:18,230
that's secure that you're going to be

00:21:15,590 --> 00:21:21,560
sending encrypted they'll give it a

00:21:18,230 --> 00:21:25,190
little bit more I'll the network

00:21:21,560 --> 00:21:27,830
security layer if you can do it right

00:21:25,190 --> 00:21:29,810
and if we're all talking about you know

00:21:27,830 --> 00:21:32,630
that it seems an IOT for the most part

00:21:29,810 --> 00:21:35,450
is moving towards kind of Dumber devices

00:21:32,630 --> 00:21:38,270
with a smarter central brain at the

00:21:35,450 --> 00:21:39,590
location if that's your case you don't

00:21:38,270 --> 00:21:41,300
even need inbound connections right

00:21:39,590 --> 00:21:43,880
everything's outbound you should be

00:21:41,300 --> 00:21:46,460
connecting to whatever your brain is

00:21:43,880 --> 00:21:48,940
that particular time and you're going to

00:21:46,460 --> 00:21:51,530
proxy through that to talk to the user

00:21:48,940 --> 00:21:52,880
that is the most secure way to do it

00:21:51,530 --> 00:21:54,200
right not everybody's gonna be able to

00:21:52,880 --> 00:21:56,510
do that but that is absolutely the most

00:21:54,200 --> 00:21:58,970
secure way to do it do not allow direct

00:21:56,510 --> 00:22:00,830
connections to your device ever right

00:21:58,970 --> 00:22:02,300
you have a device that you're gonna tell

00:22:00,830 --> 00:22:03,380
to connect to and you know that device

00:22:02,300 --> 00:22:06,330
is and you're always going to connect

00:22:03,380 --> 00:22:07,830
there a reason for anybody to come in

00:22:06,330 --> 00:22:11,279
but again that might not be your

00:22:07,830 --> 00:22:14,850
situation if it is restricting inbound

00:22:11,279 --> 00:22:16,860
and outbound traffic restrict you know

00:22:14,850 --> 00:22:18,390
there's no if you don't have ports if

00:22:16,860 --> 00:22:19,830
let's say you have to have an SMTP

00:22:18,390 --> 00:22:22,289
server all right for whatever reason

00:22:19,830 --> 00:22:26,010
you've got to have an SMTP server don't

00:22:22,289 --> 00:22:29,519
allow inbound traffic to that port you

00:22:26,010 --> 00:22:31,380
just don't want to do that because you

00:22:29,519 --> 00:22:32,640
don't expect anybody to be sending SMTP

00:22:31,380 --> 00:22:37,679
to you right you're just sending it out

00:22:32,640 --> 00:22:40,710
if you're not going to be having if

00:22:37,679 --> 00:22:43,620
you're not setting on SMTP restrict SMTP

00:22:40,710 --> 00:22:45,389
going out all right it's a it's a very

00:22:43,620 --> 00:22:47,460
common thing that's just restricted the

00:22:45,389 --> 00:22:49,500
data going house that you don't even if

00:22:47,460 --> 00:22:51,299
someone is running code on your system

00:22:49,500 --> 00:22:53,159
if they found a vulnerability they can't

00:22:51,299 --> 00:22:55,440
do bad things by going out on something

00:22:53,159 --> 00:22:56,760
that you shouldn't be using anyway that

00:22:55,440 --> 00:23:01,760
your application doesn't use on that

00:22:56,760 --> 00:23:04,559
device prefer pair bluetooth all right

00:23:01,760 --> 00:23:06,149
for some of our stuff we need le alright

00:23:04,559 --> 00:23:09,299
it's absolutely essential that we have

00:23:06,149 --> 00:23:12,210
le if it's not absolutely essential that

00:23:09,299 --> 00:23:14,700
you have le but you want bluetooth using

00:23:12,210 --> 00:23:17,039
standard bluetooth creates a very secure

00:23:14,700 --> 00:23:22,350
pairing connection that cannot be it

00:23:17,039 --> 00:23:23,700
cannot be you someone can't connect to

00:23:22,350 --> 00:23:25,200
it without having the correct keys right

00:23:23,700 --> 00:23:26,279
there's a key exchange that prevents

00:23:25,200 --> 00:23:28,649
someone else for being able to do that

00:23:26,279 --> 00:23:31,380
we're talking about le you just get a

00:23:28,649 --> 00:23:35,190
device ID and any one of us can bring up

00:23:31,380 --> 00:23:37,440
light blue on our on our phones we can

00:23:35,190 --> 00:23:39,590
copy that ID and we can say hi on this

00:23:37,440 --> 00:23:42,450
ID now and start talking back and forth

00:23:39,590 --> 00:23:44,760
when you use standard Bluetooth the

00:23:42,450 --> 00:23:45,840
pairing process is the key exchange it

00:23:44,760 --> 00:23:48,029
actually encrypts the data going back

00:23:45,840 --> 00:23:50,970
and forth so that you can't you can't

00:23:48,029 --> 00:23:53,639
sniff it you can't pose yourself as that

00:23:50,970 --> 00:23:55,200
device it's much more secure not

00:23:53,639 --> 00:23:56,250
everybody can use it not everybody has

00:23:55,200 --> 00:23:58,169
the ability to do it but if you're doing

00:23:56,250 --> 00:24:00,500
Bluetooth think about why you're using

00:23:58,169 --> 00:24:03,799
le and not just standard Bluetooth and

00:24:00,500 --> 00:24:04,980
if you are using standard Bluetooth

00:24:03,799 --> 00:24:07,019
challenge-response

00:24:04,980 --> 00:24:08,309
so that you at least have you know that

00:24:07,019 --> 00:24:09,779
this isn't happening remotely that

00:24:08,309 --> 00:24:11,940
somebody's not trying to spoof bluetooth

00:24:09,779 --> 00:24:14,639
or they're not on the other side of a

00:24:11,940 --> 00:24:17,170
wall trying to connect your device they

00:24:14,639 --> 00:24:18,580
have to be able to see an actual

00:24:17,170 --> 00:24:21,190
that actual value that they're gonna

00:24:18,580 --> 00:24:25,810
have to put in to be able to complete

00:24:21,190 --> 00:24:27,790
the challenge which brings us to what we

00:24:25,810 --> 00:24:29,860
all do right now we've got through the

00:24:27,790 --> 00:24:32,410
kind of the basic stuff of here's how we

00:24:29,860 --> 00:24:33,340
will protect the system but now we get

00:24:32,410 --> 00:24:35,740
to our application

00:24:33,340 --> 00:24:36,900
I assume that we're all application

00:24:35,740 --> 00:24:40,750
developers we'd be in the other rooms

00:24:36,900 --> 00:24:42,970
with all the Linux folks so we have to

00:24:40,750 --> 00:24:45,130
know we're preventing and do as much as

00:24:42,970 --> 00:24:47,350
reasonably possible and that that's

00:24:45,130 --> 00:24:48,400
always a difficult thing in security is

00:24:47,350 --> 00:24:51,400
that we want to be as secure as possible

00:24:48,400 --> 00:24:53,500
we also have to be easy to use that's

00:24:51,400 --> 00:24:55,090
always a struggle any time you get

00:24:53,500 --> 00:24:58,090
through that is making it easy to use

00:24:55,090 --> 00:24:59,740
but still be fairly secure and again

00:24:58,090 --> 00:25:01,240
with your application you have to have a

00:24:59,740 --> 00:25:03,490
passion at an update strategy that is

00:25:01,240 --> 00:25:06,670
secure so you have to be able to update

00:25:03,490 --> 00:25:07,780
your code on your device how do you do

00:25:06,670 --> 00:25:09,460
that to make sure that somebody else

00:25:07,780 --> 00:25:11,200
can't do that on code that you don't

00:25:09,460 --> 00:25:15,460
want on the device I'll get into that in

00:25:11,200 --> 00:25:18,400
just a minute so here's the things that

00:25:15,460 --> 00:25:19,270
you're preventing account hijacking all

00:25:18,400 --> 00:25:21,730
right

00:25:19,270 --> 00:25:24,130
sensitive data exposure escalation of

00:25:21,730 --> 00:25:26,050
privilege denial of service and remote

00:25:24,130 --> 00:25:28,630
code execution these are the real big

00:25:26,050 --> 00:25:31,530
ones these are the things that are the

00:25:28,630 --> 00:25:34,450
terrible things are going on every day

00:25:31,530 --> 00:25:36,790
it's sensitive data exposure all right

00:25:34,450 --> 00:25:38,140
the way that you prevent that is you

00:25:36,790 --> 00:25:41,950
have to start getting into the terrible

00:25:38,140 --> 00:25:44,890
world of crypto all right crypto is

00:25:41,950 --> 00:25:46,930
confusing and it's very hard I may be

00:25:44,890 --> 00:25:48,520
giving a talk on crypto on Thursday I

00:25:46,930 --> 00:25:49,480
haven't got the response back they said

00:25:48,520 --> 00:25:52,240
they wanted me to do it but I haven't

00:25:49,480 --> 00:25:53,290
heard back yet but that's how you

00:25:52,240 --> 00:25:55,180
protect your data

00:25:53,290 --> 00:25:57,670
all right protect your data in transit

00:25:55,180 --> 00:26:01,480
now an easy way to do crypto and transit

00:25:57,670 --> 00:26:03,040
is TLS also called SSL you should not be

00:26:01,480 --> 00:26:07,030
using what's actually SSL anymore should

00:26:03,040 --> 00:26:09,220
be sick TLS because SSL on all of its

00:26:07,030 --> 00:26:10,510
versions is no longer secure but we it's

00:26:09,220 --> 00:26:13,860
just something we call it right we clone

00:26:10,510 --> 00:26:16,570
SSL those protocols are available to you

00:26:13,860 --> 00:26:18,190
straight through open SSL or whatever

00:26:16,570 --> 00:26:21,630
library you want to use on your Linux

00:26:18,190 --> 00:26:24,670
distro so if you're setting data out and

00:26:21,630 --> 00:26:26,980
you have the networking capability and

00:26:24,670 --> 00:26:30,130
the processing capability crypto uses

00:26:26,980 --> 00:26:33,760
power crypto uses CPU crypto use

00:26:30,130 --> 00:26:35,530
memory you're talking about chips and an

00:26:33,760 --> 00:26:36,490
embedded code on chips that is really

00:26:35,530 --> 00:26:38,020
hard but when we're talking about

00:26:36,490 --> 00:26:39,960
embedded Linux you probably have the

00:26:38,020 --> 00:26:42,310
memory and the CPU to be able to do that

00:26:39,960 --> 00:26:46,030
so think about it think about why you're

00:26:42,310 --> 00:26:47,920
not using SSL to connect back and forth

00:26:46,030 --> 00:26:50,070
it's a little more difficult and you

00:26:47,920 --> 00:26:52,540
have to figure a couple more things out

00:26:50,070 --> 00:26:54,130
but it's not that hard there's a lot of

00:26:52,540 --> 00:26:55,600
information out there especially a lot

00:26:54,130 --> 00:26:58,270
of lives of your distro whatever distro

00:26:55,600 --> 00:26:59,920
you're using and it means it makes the

00:26:58,270 --> 00:27:01,840
world of difference it means that when

00:26:59,920 --> 00:27:03,190
you're going in connecting somewhere and

00:27:01,840 --> 00:27:05,440
you can do validation to make sure that

00:27:03,190 --> 00:27:08,260
you're getting the actual response

00:27:05,440 --> 00:27:09,190
someone hasn't stuck a little router in

00:27:08,260 --> 00:27:10,540
the middle of that and they're just

00:27:09,190 --> 00:27:11,800
changing the response that's coming back

00:27:10,540 --> 00:27:14,280
to you and putting code that you want it

00:27:11,800 --> 00:27:18,040
don't want to execute on the system and

00:27:14,280 --> 00:27:20,650
protect data arrest with encryption if

00:27:18,040 --> 00:27:22,390
you have things that are you know that

00:27:20,650 --> 00:27:24,100
you don't want anyone else to be able

00:27:22,390 --> 00:27:25,420
just get on the box and see you want to

00:27:24,100 --> 00:27:27,340
encrypt the data that's sitting there

00:27:25,420 --> 00:27:28,450
you want to do your best to protect as

00:27:27,340 --> 00:27:30,370
much as you can again it's

00:27:28,450 --> 00:27:32,320
defense-in-depth all right you're

00:27:30,370 --> 00:27:33,490
protecting it every single layer even

00:27:32,320 --> 00:27:34,810
down the application and then your

00:27:33,490 --> 00:27:36,940
application has multiple layers right

00:27:34,810 --> 00:27:39,910
you have a network layer you have memory

00:27:36,940 --> 00:27:42,880
you have file system all those types of

00:27:39,910 --> 00:27:45,910
things and so one thing that you can do

00:27:42,880 --> 00:27:48,100
which again it's a little more advanced

00:27:45,910 --> 00:27:51,940
is certificate verification of your

00:27:48,100 --> 00:27:53,320
fingerprint so when you're doing SSL

00:27:51,940 --> 00:27:56,650
communication back and forth with

00:27:53,320 --> 00:27:58,750
another device or outside on the

00:27:56,650 --> 00:28:00,700
Internet I'm you're going over SSL

00:27:58,750 --> 00:28:04,210
you're using a certificate this is a

00:28:00,700 --> 00:28:05,950
public/private key pair and you're

00:28:04,210 --> 00:28:07,120
making certain assumptions it's telling

00:28:05,950 --> 00:28:08,350
you that you know this is why I search

00:28:07,120 --> 00:28:09,940
this is the authority that gave me the

00:28:08,350 --> 00:28:13,870
certificate and you go and validate it

00:28:09,940 --> 00:28:15,280
everything's great but if I'm going to

00:28:13,870 --> 00:28:16,870
perform a sophisticated man in the

00:28:15,280 --> 00:28:18,610
middle attack I'm going to give you a

00:28:16,870 --> 00:28:19,960
valid cert that is not the sort that

00:28:18,610 --> 00:28:21,940
came from this one from a certificate

00:28:19,960 --> 00:28:25,960
authority that somehow through the chain

00:28:21,940 --> 00:28:27,160
proves out to be okay or if you've done

00:28:25,960 --> 00:28:28,720
development with self-signed

00:28:27,160 --> 00:28:32,550
certificates and you forgot to turn off

00:28:28,720 --> 00:28:34,720
the verify SSL flag super easy to hack

00:28:32,550 --> 00:28:37,060
one of the ways that I do that we do

00:28:34,720 --> 00:28:39,430
just a lot at my company is that we use

00:28:37,060 --> 00:28:41,290
pinning or we say that I'm only going to

00:28:39,430 --> 00:28:43,799
allow a certificate from this

00:28:41,290 --> 00:28:45,539
certificate authority to validate

00:28:43,799 --> 00:28:50,129
my communication back and forth of this

00:28:45,539 --> 00:28:52,200
server over SSL again it is a little

00:28:50,129 --> 00:28:53,639
more advanced but if you have a device

00:28:52,200 --> 00:28:57,240
that's got information going back and

00:28:53,639 --> 00:29:06,470
forth that is important and secret you

00:28:57,240 --> 00:29:06,470
really should think about it yeah yes oh

00:29:08,840 --> 00:29:14,460
sure

00:29:10,080 --> 00:29:16,620
all day long right so so a lot of times

00:29:14,460 --> 00:29:19,169
when people are developing now let's

00:29:16,620 --> 00:29:20,399
encrypt is made this easier right right

00:29:19,169 --> 00:29:22,679
and so if you're in development and you

00:29:20,399 --> 00:29:26,610
don't change your code to verify after

00:29:22,679 --> 00:29:28,620
or self-signed then you're wide open but

00:29:26,610 --> 00:29:33,659
even if you validate the cert even if

00:29:28,620 --> 00:29:37,289
you validate the authority if you have

00:29:33,659 --> 00:29:38,850
an old so what hat is up happening is if

00:29:37,289 --> 00:29:40,230
you've got an old distro all right these

00:29:38,850 --> 00:29:43,080
old distros have these old search these

00:29:40,230 --> 00:29:44,129
certificate authorities if you're using

00:29:43,080 --> 00:29:46,799
an old distro that hasn't been updated

00:29:44,129 --> 00:29:49,620
and someone has gotten the private key

00:29:46,799 --> 00:29:51,600
for a side Authority that's in the list

00:29:49,620 --> 00:29:52,710
they can now and personate all of these

00:29:51,600 --> 00:29:54,090
different things and that happens from

00:29:52,710 --> 00:29:54,570
time to time it's very rare but it does

00:29:54,090 --> 00:29:56,549
happen

00:29:54,570 --> 00:29:58,710
and those things go for good money on

00:29:56,549 --> 00:30:00,120
the black market to be able to say hi

00:29:58,710 --> 00:30:02,669
I'm a certificate authority and this

00:30:00,120 --> 00:30:04,889
certificate is good but like I said it's

00:30:02,669 --> 00:30:07,110
when you're talking about this is kind

00:30:04,889 --> 00:30:09,210
of more nation-state or very organized

00:30:07,110 --> 00:30:13,200
crime is going to be doing these kind of

00:30:09,210 --> 00:30:15,980
attacks but it has been done and you can

00:30:13,200 --> 00:30:15,980
protect against it yes

00:30:19,550 --> 00:30:22,540
situation

00:30:23,120 --> 00:30:25,480
correct

00:30:31,419 --> 00:30:36,380
so certain protocols are going to allow

00:30:34,309 --> 00:30:41,240
some sort of TLS so you can either do

00:30:36,380 --> 00:30:43,789
some sort of sorry that you can create a

00:30:41,240 --> 00:30:48,020
tunnel over TLS and then use UDP over

00:30:43,789 --> 00:30:49,190
that point-to-point UDP you kind of

00:30:48,020 --> 00:30:50,840
losing the whole idea of UDP at that

00:30:49,190 --> 00:30:52,539
point though the other options that you

00:30:50,840 --> 00:30:54,980
can encrypt your data encrypt your data

00:30:52,539 --> 00:30:56,720
that's going across so that you encrypt

00:30:54,980 --> 00:30:59,299
the data before it goes into transit and

00:30:56,720 --> 00:31:00,409
if you're like me and you're really

00:30:59,299 --> 00:31:02,179
really where I'm concerned about that

00:31:00,409 --> 00:31:05,240
stuff you don't just use TLS you encrypt

00:31:02,179 --> 00:31:06,710
the date on top of it because again

00:31:05,240 --> 00:31:08,539
there's gonna be a zero day

00:31:06,710 --> 00:31:10,789
vulnerability right so just say I found

00:31:08,539 --> 00:31:12,559
a vulnerability in SSL open SSL where I

00:31:10,789 --> 00:31:16,309
can just bypass all of your validation

00:31:12,559 --> 00:31:17,720
on your certificates so you could use

00:31:16,309 --> 00:31:19,220
some of the things that I use as a

00:31:17,720 --> 00:31:20,419
paranoid individual that you could use

00:31:19,220 --> 00:31:22,460
in every day is that you encrypt the

00:31:20,419 --> 00:31:24,350
data before it goes out and there's a

00:31:22,460 --> 00:31:26,809
there's some stuff at the end of the on

00:31:24,350 --> 00:31:28,039
this where if you're doing that and

00:31:26,809 --> 00:31:30,110
you're doing kind of more binary data

00:31:28,039 --> 00:31:33,200
which is more prevalent in IOT because

00:31:30,110 --> 00:31:35,780
you want smaller packets you can do kind

00:31:33,200 --> 00:31:39,230
of C bore a binary object representation

00:31:35,780 --> 00:31:41,210
and there's a an offshoot of Jose which

00:31:39,230 --> 00:31:43,730
is the JavaScript object signing and

00:31:41,210 --> 00:31:45,860
encryption that keeps at a binary level

00:31:43,730 --> 00:31:47,600
for being able to do provide libraries

00:31:45,860 --> 00:31:50,030
to do encryption of just binary data and

00:31:47,600 --> 00:31:53,870
pass along and validate it that is your

00:31:50,030 --> 00:31:55,520
question okay if I get way too

00:31:53,870 --> 00:31:57,200
complicated you don't know I'm saying

00:31:55,520 --> 00:31:59,720
please just say like just let me know

00:31:57,200 --> 00:32:01,070
because I I forget sometimes I not

00:31:59,720 --> 00:32:07,190
everybody understands all this stuff I

00:32:01,070 --> 00:32:08,630
apologize so encrypting data if you

00:32:07,190 --> 00:32:11,630
don't want attackers to have access to

00:32:08,630 --> 00:32:14,480
it then encrypt it all right sometimes

00:32:11,630 --> 00:32:16,690
it's super super super secret and you

00:32:14,480 --> 00:32:19,400
don't want anybody to have it if you're

00:32:16,690 --> 00:32:21,409
recording information right that should

00:32:19,400 --> 00:32:23,679
not be available to anyone except for

00:32:21,409 --> 00:32:25,789
the individuals that are collecting it

00:32:23,679 --> 00:32:26,929
they may care enough and you may care

00:32:25,789 --> 00:32:30,110
enough to encrypt it when it goes across

00:32:26,929 --> 00:32:32,840
and use a strongest encryption that's

00:32:30,110 --> 00:32:35,750
feasible IOT we all have restrictions

00:32:32,840 --> 00:32:38,299
right we only have so much CPU we only

00:32:35,750 --> 00:32:40,940
have so much memory encryption takes up

00:32:38,299 --> 00:32:44,460
CPU and memory and we can't just you

00:32:40,940 --> 00:32:46,890
know it you have to do what's reasonable

00:32:44,460 --> 00:32:50,070
and with most of the ships out there

00:32:46,890 --> 00:32:51,630
they're using embedded Linux you can do

00:32:50,070 --> 00:32:54,320
something that is secure right you can

00:32:51,630 --> 00:32:58,350
do a es 256 which is perfectly secure

00:32:54,320 --> 00:33:00,090
perfectly quick you can use RSA 2048 on

00:32:58,350 --> 00:33:01,740
most of them and you can kind of use the

00:33:00,090 --> 00:33:06,150
combination to get super secure and

00:33:01,740 --> 00:33:08,280
super speed to do that so I always

00:33:06,150 --> 00:33:09,780
remember that the if you're sending data

00:33:08,280 --> 00:33:11,910
and it's important it could be around

00:33:09,780 --> 00:33:15,570
forever all right and if it's something

00:33:11,910 --> 00:33:17,430
that's going to be more while the use of

00:33:15,570 --> 00:33:20,850
user information percent data file

00:33:17,430 --> 00:33:21,960
information that's collected or things

00:33:20,850 --> 00:33:24,360
biometric data that's collected

00:33:21,960 --> 00:33:25,770
biometrics is the like you really need

00:33:24,360 --> 00:33:27,840
to watch out for biometric data to hold

00:33:25,770 --> 00:33:30,360
all that really well because that never

00:33:27,840 --> 00:33:32,340
changes and just because you're

00:33:30,360 --> 00:33:34,530
encrypting it today but we thought was

00:33:32,340 --> 00:33:36,390
safe five years ago it's not safe today

00:33:34,530 --> 00:33:37,560
all right everybody got these little

00:33:36,390 --> 00:33:40,590
warnings on our browsers and everybody

00:33:37,560 --> 00:33:43,110
had to update their SSL certs recently

00:33:40,590 --> 00:33:44,190
to 2048 keys instead of 1024 because

00:33:43,110 --> 00:33:45,960
Google wouldn't allow it all right

00:33:44,190 --> 00:33:47,760
there's a reason for that it's not

00:33:45,960 --> 00:33:50,880
secure anymore so when you're taking

00:33:47,760 --> 00:33:52,860
something like biometric data that has

00:33:50,880 --> 00:33:56,490
to be safe forever it releases forever

00:33:52,860 --> 00:33:58,200
as you can make it so always use the

00:33:56,490 --> 00:33:59,910
best you can the highest level of

00:33:58,200 --> 00:34:02,540
encryption that you can because it's got

00:33:59,910 --> 00:34:04,950
to live a long time

00:34:02,540 --> 00:34:11,760
just try and think of that when you do

00:34:04,950 --> 00:34:15,540
this stuff so digital signatures digital

00:34:11,760 --> 00:34:16,560
signatures are used to verify data so

00:34:15,540 --> 00:34:17,790
one of the things that you can do other

00:34:16,560 --> 00:34:20,700
ways is you can keep people from

00:34:17,790 --> 00:34:23,610
changing your code and being able to run

00:34:20,700 --> 00:34:28,230
it is with a digital signature so if you

00:34:23,610 --> 00:34:30,480
send your code for a patch you can sign

00:34:28,230 --> 00:34:32,850
that code you can stick a file on there

00:34:30,480 --> 00:34:34,020
with the signature and then you can

00:34:32,850 --> 00:34:36,030
verify that signature against the code

00:34:34,020 --> 00:34:38,220
whenever you start up to make sure the

00:34:36,030 --> 00:34:39,840
code has not been modified and there

00:34:38,220 --> 00:34:43,200
doesn't have to be any information on

00:34:39,840 --> 00:34:44,880
your sit on your device that actually

00:34:43,200 --> 00:34:47,640
gives you the information to recreate a

00:34:44,880 --> 00:34:50,790
signature so when you're talking about a

00:34:47,640 --> 00:34:52,830
symmetric key encryption a public key is

00:34:50,790 --> 00:34:54,000
enough to verify a signature but the

00:34:52,830 --> 00:34:56,580
private key only has enough information

00:34:54,000 --> 00:34:58,980
to create the signature so you can

00:34:56,580 --> 00:35:01,260
create the signature

00:34:58,980 --> 00:35:03,240
from your central repository where

00:35:01,260 --> 00:35:04,770
you're getting your updates from with

00:35:03,240 --> 00:35:06,810
the signature and you can verify that it

00:35:04,770 --> 00:35:08,280
hasn't changed there's no way that

00:35:06,810 --> 00:35:11,730
anybody's going to be able to recreate

00:35:08,280 --> 00:35:13,080
that so that's super awesome way to make

00:35:11,730 --> 00:35:14,910
sure someone hasn't modified your code

00:35:13,080 --> 00:35:15,960
gotten into your system and given it

00:35:14,910 --> 00:35:18,210
something else to run that you don't

00:35:15,960 --> 00:35:19,470
want or they haven't found a

00:35:18,210 --> 00:35:22,230
vulnerability in your application to

00:35:19,470 --> 00:35:23,850
write new code to execute you can also

00:35:22,230 --> 00:35:24,660
do that in memory if you're really

00:35:23,850 --> 00:35:26,340
worried about those types of things

00:35:24,660 --> 00:35:27,480
right it depends on what level you want

00:35:26,340 --> 00:35:30,240
to get at but there's a lot of things

00:35:27,480 --> 00:35:32,160
that you can do and then sending data in

00:35:30,240 --> 00:35:33,420
transit how do you know that you your

00:35:32,160 --> 00:35:35,460
data hasn't been changed in the middle

00:35:33,420 --> 00:35:37,050
if you're not worried if it's not secret

00:35:35,460 --> 00:35:38,880
data all right you're not worried about

00:35:37,050 --> 00:35:40,020
whether anybody can read it but you are

00:35:38,880 --> 00:35:42,990
worried about whether or not somebody

00:35:40,020 --> 00:35:45,150
changed it on the way you can sign the

00:35:42,990 --> 00:35:46,470
data and as you're sending it and you

00:35:45,150 --> 00:35:47,850
can validate that signature to make sure

00:35:46,470 --> 00:35:50,820
no one has messed with the data coming

00:35:47,850 --> 00:35:52,530
in that it's good valid data that's what

00:35:50,820 --> 00:35:59,040
you're expecting to be it's what it was

00:35:52,530 --> 00:36:02,090
supposed to be so account hijacking this

00:35:59,040 --> 00:36:07,920
is actually number one in the top 10

00:36:02,090 --> 00:36:11,040
again application passwords so and just

00:36:07,920 --> 00:36:13,470
user credentials in general so we call

00:36:11,040 --> 00:36:14,250
it password hashing we call it password

00:36:13,470 --> 00:36:16,770
hashing because that's what people

00:36:14,250 --> 00:36:21,480
understand but if you're using a hash

00:36:16,770 --> 00:36:25,740
for passwords it's a bad thing if you're

00:36:21,480 --> 00:36:27,360
using md5 or sha-1 sha-1 or sha to even

00:36:25,740 --> 00:36:31,140
with a salt salt makes a little more

00:36:27,360 --> 00:36:34,860
difficult you should really be using

00:36:31,140 --> 00:36:38,570
some sort of key derivation function and

00:36:34,860 --> 00:36:42,090
key derivation functions are pbkdf2

00:36:38,570 --> 00:36:44,400
bcrypt s crypt argon 2i all right these

00:36:42,090 --> 00:36:46,230
are all available and basically every

00:36:44,400 --> 00:36:49,680
Linux distro would open SSL you can get

00:36:46,230 --> 00:36:52,200
pbkdf2 out of the box which is not as

00:36:49,680 --> 00:36:54,810
good as the others but it will do it's

00:36:52,200 --> 00:36:58,920
way better than using you know a simple

00:36:54,810 --> 00:37:02,430
hash password it the ability to crack

00:36:58,920 --> 00:37:03,960
hash passwords has gotten so fast that

00:37:02,430 --> 00:37:05,400
they've stopped making rainbow tables

00:37:03,960 --> 00:37:07,410
right a rainbow table is just they would

00:37:05,400 --> 00:37:09,300
come up with every permutation so you go

00:37:07,410 --> 00:37:11,450
oh there's the password and there's the

00:37:09,300 --> 00:37:14,150
actual the value is supposed to be

00:37:11,450 --> 00:37:15,410
because that is so large and the amount

00:37:14,150 --> 00:37:17,359
of time it takes to just actually read

00:37:15,410 --> 00:37:22,160
them in and go through them and find it

00:37:17,359 --> 00:37:25,190
it's faster just to crack it now so yeah

00:37:22,160 --> 00:37:27,470
it's pretty great yeah so do your users

00:37:25,190 --> 00:37:30,140
a favor and make sure that you're using

00:37:27,470 --> 00:37:33,440
you know some sort of key derivation

00:37:30,140 --> 00:37:37,750
function like I said pbkdf2 comes on

00:37:33,440 --> 00:37:37,750
almost every district see with open SSL

00:37:38,140 --> 00:37:43,190
another word prevent account hijacking

00:37:40,520 --> 00:37:45,290
is secure the initial setup via hardware

00:37:43,190 --> 00:37:48,069
or for swipe all right so there's only

00:37:45,290 --> 00:37:49,970
one time when you can reset a password

00:37:48,069 --> 00:37:51,109
and that's either going to be that you

00:37:49,970 --> 00:37:53,540
have to physically be there with the

00:37:51,109 --> 00:37:57,589
hardware and you can put it in that

00:37:53,540 --> 00:38:00,349
state or hey if we reset this we reset

00:37:57,589 --> 00:38:01,880
this all right you're not going to be

00:38:00,349 --> 00:38:02,809
able to gain access to the information

00:38:01,880 --> 00:38:04,280
that's in here by resetting the password

00:38:02,809 --> 00:38:05,839
because there's not to be anything left

00:38:04,280 --> 00:38:06,799
so as a user you better know if we're

00:38:05,839 --> 00:38:09,920
going to change the password on here

00:38:06,799 --> 00:38:14,299
it's gonna be completely gone like I

00:38:09,920 --> 00:38:17,390
said you still have to kind of you know

00:38:14,299 --> 00:38:18,530
use usability versus security what

00:38:17,390 --> 00:38:19,549
information is on the device well they

00:38:18,530 --> 00:38:21,140
gonna be able to do you have to really

00:38:19,549 --> 00:38:22,670
kind of think about that but if you've

00:38:21,140 --> 00:38:24,349
got something that's you know super

00:38:22,670 --> 00:38:25,520
important you know think about what can

00:38:24,349 --> 00:38:27,230
happen when they when that password

00:38:25,520 --> 00:38:28,670
reset happens right everybody forgets

00:38:27,230 --> 00:38:29,960
your password because now you're doing

00:38:28,670 --> 00:38:31,220
strong passwords so now it'll be

00:38:29,960 --> 00:38:32,420
remembered for passwords so now they

00:38:31,220 --> 00:38:34,339
always got to reset their password and

00:38:32,420 --> 00:38:37,280
what are you gonna allow your user to do

00:38:34,339 --> 00:38:38,750
and what threat are you putting out

00:38:37,280 --> 00:38:40,760
there by so on being able to just do

00:38:38,750 --> 00:38:42,440
that for them you know one of the super

00:38:40,760 --> 00:38:44,890
popular things on the world right now is

00:38:42,440 --> 00:38:48,530
just oh I will send you an SMS message

00:38:44,890 --> 00:38:50,000
with a special code and it's super easy

00:38:48,530 --> 00:38:51,980
just to you know there's a lot of things

00:38:50,000 --> 00:38:53,540
that you can do just through social

00:38:51,980 --> 00:38:55,910
engineering where I can take over your

00:38:53,540 --> 00:38:57,619
phone number today in an hour

00:38:55,910 --> 00:39:02,510
I can take over your phone number and

00:38:57,619 --> 00:39:03,770
get SMS text so you have but it's

00:39:02,510 --> 00:39:05,270
important when you think about security

00:39:03,770 --> 00:39:07,280
to think one level up don't think about

00:39:05,270 --> 00:39:09,049
yourself think about somebody who's like

00:39:07,280 --> 00:39:10,970
super important all right I'm just some

00:39:09,049 --> 00:39:14,059
peon all right I come here I write code

00:39:10,970 --> 00:39:15,619
and nobody wants to hack me personally

00:39:14,059 --> 00:39:20,240
because I have nothing for them to take

00:39:15,619 --> 00:39:21,650
right but the code that I write could be

00:39:20,240 --> 00:39:24,380
used by somebody who actually does have

00:39:21,650 --> 00:39:25,339
something people want and that

00:39:24,380 --> 00:39:27,019
individuals life

00:39:25,339 --> 00:39:28,999
be completely ruined by me running bad

00:39:27,019 --> 00:39:32,299
software that's something that I have to

00:39:28,999 --> 00:39:33,890
take into consideration every day and an

00:39:32,299 --> 00:39:35,569
important thing too is alert for changes

00:39:33,890 --> 00:39:38,479
to accounts right if someone goes then

00:39:35,569 --> 00:39:39,680
changes if they do a password reset on

00:39:38,479 --> 00:39:41,630
your system or they change the

00:39:39,680 --> 00:39:44,509
configuration and you have the ability

00:39:41,630 --> 00:39:46,999
to do that externally send alert saying

00:39:44,509 --> 00:39:49,069
hi I got changed if you change me that's

00:39:46,999 --> 00:39:50,450
cool if not you should really like

00:39:49,069 --> 00:39:54,819
freaked out because somebody's doing

00:39:50,450 --> 00:39:54,819
something and doing something weird yeah

00:39:55,660 --> 00:40:04,880
that's an actual picture Google Images

00:40:00,650 --> 00:40:05,989
is an amazing thing yeah you put it any

00:40:04,880 --> 00:40:08,469
question it'll come out with stuff I

00:40:05,989 --> 00:40:13,460
said this is really crazy

00:40:08,469 --> 00:40:15,289
so nonces are super awesome and what

00:40:13,460 --> 00:40:16,249
Ananse is it's a really weird word I

00:40:15,289 --> 00:40:17,719
have no idea of the origin that's

00:40:16,249 --> 00:40:21,109
probably out one day but if something

00:40:17,719 --> 00:40:23,719
can only be used once not none but it's

00:40:21,109 --> 00:40:27,019
a single use token and if enforced

00:40:23,719 --> 00:40:28,400
properly it so many things right it can

00:40:27,019 --> 00:40:30,559
make sure that that request only happens

00:40:28,400 --> 00:40:32,299
once so one of the things that you can

00:40:30,559 --> 00:40:33,319
do is you can basically keep running the

00:40:32,299 --> 00:40:35,839
same request over and over and over

00:40:33,319 --> 00:40:39,469
again and finding out what bad things

00:40:35,839 --> 00:40:41,599
can happen or you can try and hijack and

00:40:39,469 --> 00:40:44,559
do kind of cross-site request forgery if

00:40:41,599 --> 00:40:47,329
you have if you have a web interface

00:40:44,559 --> 00:40:49,900
also not having to go get the nonce

00:40:47,329 --> 00:40:52,130
first before they process the request

00:40:49,900 --> 00:40:53,719
it's half the processing time they need

00:40:52,130 --> 00:40:55,369
there's a lot more processing ahead if

00:40:53,719 --> 00:40:57,109
you just need to go start slamming some

00:40:55,369 --> 00:40:59,479
webpage and trying to see what

00:40:57,109 --> 00:41:01,549
combination works that goes really fast

00:40:59,479 --> 00:41:03,859
if you've got to read the web page parse

00:41:01,549 --> 00:41:05,660
the web page get a value for the web

00:41:03,859 --> 00:41:08,660
page stick it into your thing and then

00:41:05,660 --> 00:41:12,019
then process that is incredibly more

00:41:08,660 --> 00:41:14,150
expensive to a hacker and a lot of the

00:41:12,019 --> 00:41:16,190
just default hacker tools won't be able

00:41:14,150 --> 00:41:18,619
to do that so you can protect yourself a

00:41:16,190 --> 00:41:20,450
lot just by using some sort of single

00:41:18,619 --> 00:41:22,640
use token if you're having to submit

00:41:20,450 --> 00:41:24,410
form so people can't just try and just

00:41:22,640 --> 00:41:26,420
wail on your forms all day to find out

00:41:24,410 --> 00:41:28,460
what the what's actually broken and the

00:41:26,420 --> 00:41:31,249
one spot that you forgot about it gives

00:41:28,460 --> 00:41:31,910
them access but the important thing for

00:41:31,249 --> 00:41:34,039
them is they have to be

00:41:31,910 --> 00:41:35,119
cryptographically random this is a

00:41:34,039 --> 00:41:36,529
really kind of weird thing

00:41:35,119 --> 00:41:38,140
cryptographically secure pseudo-random

00:41:36,529 --> 00:41:39,460
number generators

00:41:38,140 --> 00:41:42,640
some very meeting words and they shrink

00:41:39,460 --> 00:41:45,970
down a sea spring but the reason for

00:41:42,640 --> 00:41:48,190
that is if most most software if you ask

00:41:45,970 --> 00:41:51,010
it to give you a random value it will

00:41:48,190 --> 00:41:52,539
give you a random value but it's based

00:41:51,010 --> 00:41:55,720
on the time that it gave it to you

00:41:52,539 --> 00:41:57,490
and a smart attacker can actually

00:41:55,720 --> 00:41:58,690
recreate those and know what they're

00:41:57,490 --> 00:42:00,700
going to be before you generate them

00:41:58,690 --> 00:42:03,400
because of when they asked for it so

00:42:00,700 --> 00:42:04,750
they can actually generate things that

00:42:03,400 --> 00:42:06,279
are that are going to come Val about

00:42:04,750 --> 00:42:07,809
having to actually use it validated or

00:42:06,279 --> 00:42:11,710
do any of those things because all

00:42:07,809 --> 00:42:14,289
computers there's no actual random

00:42:11,710 --> 00:42:17,559
number on a computer it's just a list of

00:42:14,289 --> 00:42:20,200
values and where it starts and which one

00:42:17,559 --> 00:42:22,480
it picks is based on information that it

00:42:20,200 --> 00:42:25,359
has and the fastest way to do that is to

00:42:22,480 --> 00:42:28,240
take the current time turn that into an

00:42:25,359 --> 00:42:29,650
integer find the number that starts

00:42:28,240 --> 00:42:31,920
there and that is the number that you

00:42:29,650 --> 00:42:34,299
pick for your pseudo-random number

00:42:31,920 --> 00:42:35,650
cryptographically secure as additional

00:42:34,299 --> 00:42:39,029
information the current temperature of

00:42:35,650 --> 00:42:42,130
the CPU whatever information that it has

00:42:39,029 --> 00:42:43,839
plus speed possibly the operating system

00:42:42,130 --> 00:42:45,700
version it depends on the operating

00:42:43,839 --> 00:42:47,400
system and what it's going to do but

00:42:45,700 --> 00:42:50,230
there's way more better ways to get

00:42:47,400 --> 00:42:51,759
something that is pseudo-random all

00:42:50,230 --> 00:42:54,759
right no such thing as random in a

00:42:51,759 --> 00:42:57,339
computer it's all pseudo-random but so

00:42:54,759 --> 00:42:59,859
cryptic Radek libraries or dev random

00:42:57,339 --> 00:43:01,779
those are going to be cryptographically

00:42:59,859 --> 00:43:03,279
secure and you can you can count on

00:43:01,779 --> 00:43:05,289
those and if you don't want to have to

00:43:03,279 --> 00:43:06,730
know which one it's going to be that's

00:43:05,289 --> 00:43:09,789
going to be secure on your version of

00:43:06,730 --> 00:43:11,019
linux you can always kind of cheat using

00:43:09,789 --> 00:43:13,380
one of the libraries it's going to give

00:43:11,019 --> 00:43:17,170
it to you because they would and they

00:43:13,380 --> 00:43:20,170
should expire so in order for a nonce to

00:43:17,170 --> 00:43:24,190
work it has to be associated with a

00:43:20,170 --> 00:43:27,579
certain amount of time or that it will

00:43:24,190 --> 00:43:29,200
be valid otherwise you can just you'd

00:43:27,579 --> 00:43:30,640
have to hold on to that value so they

00:43:29,200 --> 00:43:34,900
can't send it to you again forever

00:43:30,640 --> 00:43:36,579
so if in your request or even in

00:43:34,900 --> 00:43:38,289
generation of your nots if you can mix

00:43:36,579 --> 00:43:39,549
it with some time that'll be super

00:43:38,289 --> 00:43:41,289
helpful because you don't have to hold

00:43:39,549 --> 00:43:43,809
on to it forever alright if you just

00:43:41,289 --> 00:43:45,609
want to say hey my value that I'm

00:43:43,809 --> 00:43:47,619
sending is the you know the time the

00:43:45,609 --> 00:43:49,269
nonce it's going to go away and you can

00:43:47,619 --> 00:43:50,470
if it's there's a way that you can

00:43:49,269 --> 00:43:52,840
validate that it has been modified

00:43:50,470 --> 00:43:55,390
through it like a signature

00:43:52,840 --> 00:43:58,680
it's a much smaller window that you have

00:43:55,390 --> 00:43:58,680
where you have to hold on to the knots

00:43:59,850 --> 00:44:07,690
so replay a denial-of-service if you

00:44:05,020 --> 00:44:11,620
have a device that is a home security

00:44:07,690 --> 00:44:14,500
device you don't want someone being able

00:44:11,620 --> 00:44:16,360
to load that device with so many

00:44:14,500 --> 00:44:18,010
requests and so much data that it can't

00:44:16,360 --> 00:44:20,470
actually send out alarm when somebody

00:44:18,010 --> 00:44:24,030
breaks in alright if you have something

00:44:20,470 --> 00:44:26,590
that's monitoring the temperature of a

00:44:24,030 --> 00:44:27,730
room that has sensitive equipment you

00:44:26,590 --> 00:44:29,380
don't want someone to be able to jam

00:44:27,730 --> 00:44:31,480
that up so it doesn't tell you when the

00:44:29,380 --> 00:44:32,650
heat gets raised up to 200 degrees and

00:44:31,480 --> 00:44:36,310
someone fries out all of your equipment

00:44:32,650 --> 00:44:38,350
all right bad actors will do bad things

00:44:36,310 --> 00:44:40,870
and they will find these simplest ways

00:44:38,350 --> 00:44:42,490
to do it and a lot of the times the

00:44:40,870 --> 00:44:43,990
simplest way to do it is to send an

00:44:42,490 --> 00:44:48,190
invalid request that you're going to

00:44:43,990 --> 00:44:50,770
process anyway and that's what a denial

00:44:48,190 --> 00:44:52,540
of service is and a replay is taking a

00:44:50,770 --> 00:44:55,450
valid request and playing it over and

00:44:52,540 --> 00:44:57,760
over and over and over again so that you

00:44:55,450 --> 00:44:58,900
have to process it over and over and

00:44:57,760 --> 00:45:03,160
over again so they don't have to think

00:44:58,900 --> 00:45:04,600
right if you the initial part of hacking

00:45:03,160 --> 00:45:06,040
is just I'm going to just try and do

00:45:04,600 --> 00:45:08,380
something super easy and see if I can do

00:45:06,040 --> 00:45:10,030
bad things and then if they can't do it

00:45:08,380 --> 00:45:11,380
then they have to they have to evaluate

00:45:10,030 --> 00:45:15,910
whether or not they want to take the

00:45:11,380 --> 00:45:17,740
time to try and take you down so the

00:45:15,910 --> 00:45:20,700
important thing is is that you at least

00:45:17,740 --> 00:45:22,570
make it a little difficult for them

00:45:20,700 --> 00:45:24,730
there's a couple different ways that you

00:45:22,570 --> 00:45:27,180
can do that fairly easily and that's

00:45:24,730 --> 00:45:29,890
either by tracking utilization and

00:45:27,180 --> 00:45:32,530
identifying things that are weird so

00:45:29,890 --> 00:45:35,890
like if someone's if you have a system

00:45:32,530 --> 00:45:37,360
that is has an end point there's

00:45:35,890 --> 00:45:38,950
perfectly valid to go configure

00:45:37,360 --> 00:45:41,200
something it probably is not gonna

00:45:38,950 --> 00:45:44,830
happen 100 times in a second all right

00:45:41,200 --> 00:45:47,020
so if you trapped it oh this same IP hit

00:45:44,830 --> 00:45:49,840
this same end point to update the system

00:45:47,020 --> 00:45:51,250
a hundred times in a second you can cut

00:45:49,840 --> 00:45:53,440
them out because they're not doing

00:45:51,250 --> 00:45:56,620
normal behavior the other thing is you

00:45:53,440 --> 00:46:00,070
can do which is a fantastic trick it's

00:45:56,620 --> 00:46:02,770
called a honeypot and so before I told

00:46:00,070 --> 00:46:05,100
you remove all these services from your

00:46:02,770 --> 00:46:06,930
system and don't give access to them

00:46:05,100 --> 00:46:10,080
but sometimes what you do is you remove

00:46:06,930 --> 00:46:11,820
the services but you keep the ports open

00:46:10,080 --> 00:46:14,340
and you listen to those with your

00:46:11,820 --> 00:46:17,190
application because no one should ever

00:46:14,340 --> 00:46:19,440
connect you at port 25 if an IP address

00:46:17,190 --> 00:46:22,170
connects you at point 25 you never list

00:46:19,440 --> 00:46:23,490
that IP address again because they're

00:46:22,170 --> 00:46:26,700
not connecting to your app they're just

00:46:23,490 --> 00:46:28,950
trying to do something terrible so you

00:46:26,700 --> 00:46:30,300
can set up these nice things like on you

00:46:28,950 --> 00:46:32,640
know if you're if you listen on a

00:46:30,300 --> 00:46:36,120
non-standard web port right if you if

00:46:32,640 --> 00:46:37,410
you're able to do that then if they come

00:46:36,120 --> 00:46:39,360
to other normal web port then they're

00:46:37,410 --> 00:46:41,250
they're trying to attack you all right

00:46:39,360 --> 00:46:42,870
or if they try to connect over SMTP or

00:46:41,250 --> 00:46:44,340
they try to connect over SSH or they try

00:46:42,870 --> 00:46:45,750
to connect over telnet right there's

00:46:44,340 --> 00:46:48,270
scanners out there that will try all

00:46:45,750 --> 00:46:50,580
these things they just try every port

00:46:48,270 --> 00:46:52,410
that's known a couple of the known off

00:46:50,580 --> 00:46:55,680
ports all right eighty eighty eight

00:46:52,410 --> 00:46:57,960
thousand nine four four three they try

00:46:55,680 --> 00:47:00,480
all these standard things to see if your

00:46:57,960 --> 00:47:03,900
attackable and if you listen on those

00:47:00,480 --> 00:47:07,800
ports then you can determine they're bad

00:47:03,900 --> 00:47:09,060
actors now mitigating those there's a

00:47:07,800 --> 00:47:10,620
couple different ways that you can do it

00:47:09,060 --> 00:47:12,210
one of the ways that you can do it is

00:47:10,620 --> 00:47:16,770
you can respond to them as if you had

00:47:12,210 --> 00:47:17,610
done something but that doesn't

00:47:16,770 --> 00:47:20,820
necessarily mean they're not going to

00:47:17,610 --> 00:47:22,230
keep hitting you now you're not spending

00:47:20,820 --> 00:47:24,450
any processing time you're just doing

00:47:22,230 --> 00:47:26,220
that the initial very small check you

00:47:24,450 --> 00:47:29,130
normally you'll take you'll make a hash

00:47:26,220 --> 00:47:31,410
a Shia or an md5 a very quick hash of

00:47:29,130 --> 00:47:33,540
the IP address so you can go look up in

00:47:31,410 --> 00:47:35,220
some memory table and say yep this one's

00:47:33,540 --> 00:47:38,460
bad I'm not gonna do anything with it

00:47:35,220 --> 00:47:40,410
return 200 or return whatever is valid

00:47:38,460 --> 00:47:42,330
for telnet or whatever your your

00:47:40,410 --> 00:47:44,100
application is doing the other thing

00:47:42,330 --> 00:47:46,440
that you can do is you can just not

00:47:44,100 --> 00:47:48,480
respond to them at all and just lose the

00:47:46,440 --> 00:47:51,440
connection so they're gonna think that

00:47:48,480 --> 00:47:53,070
up I got no response back from this port

00:47:51,440 --> 00:47:54,270
there's nothing there

00:47:53,070 --> 00:47:58,980
so if you're using something that's

00:47:54,270 --> 00:48:02,070
doing asynchronous i/o and I I have to

00:47:58,980 --> 00:48:04,530
use mostly a secure as I am you can then

00:48:02,070 --> 00:48:06,960
just end that right if you don't tell it

00:48:04,530 --> 00:48:08,790
to do anything with the response you can

00:48:06,960 --> 00:48:10,140
just end right there it's not going to

00:48:08,790 --> 00:48:11,250
take up any of your resources it's not

00:48:10,140 --> 00:48:12,930
going to take up any of your connections

00:48:11,250 --> 00:48:14,010
but they never going to response back

00:48:12,930 --> 00:48:15,300
eventually they're going to timeout

00:48:14,010 --> 00:48:17,760
they're going to say there is nothing on

00:48:15,300 --> 00:48:18,690
this port so you can do that on your

00:48:17,760 --> 00:48:20,250
actual port

00:48:18,690 --> 00:48:22,710
right if you see them come in at 4:43

00:48:20,250 --> 00:48:25,260
then they come in on port 80 or port 4/4

00:48:22,710 --> 00:48:26,910
are they coming on 25 right horns are

00:48:25,260 --> 00:48:28,020
not supposed to be on then all of a

00:48:26,910 --> 00:48:30,570
sudden they come here and you say nope

00:48:28,020 --> 00:48:32,280
they went to port 25 they're a bad actor

00:48:30,570 --> 00:48:33,960
I'm not going to respond they don't

00:48:32,280 --> 00:48:36,030
think that you have anything exposed on

00:48:33,960 --> 00:48:39,450
the web there it's a really really cool

00:48:36,030 --> 00:48:42,210
way to just shut them out but it does

00:48:39,450 --> 00:48:44,820
require either you being in control the

00:48:42,210 --> 00:48:46,770
threads or some sort of asynchronous i/o

00:48:44,820 --> 00:48:49,230
for you to be able to not lock up a

00:48:46,770 --> 00:48:56,000
connection until they timeout by not

00:48:49,230 --> 00:48:56,000
responding any questions about that yeah

00:49:01,790 --> 00:49:06,000
so this is something you would set up so

00:49:03,900 --> 00:49:08,100
if you have an application that has a

00:49:06,000 --> 00:49:10,620
web that it's going to be accessible

00:49:08,100 --> 00:49:14,040
externally and so let's say you have a

00:49:10,620 --> 00:49:18,410
web admin for your device you would also

00:49:14,040 --> 00:49:18,410
listen on port 25 on your application

00:49:28,700 --> 00:49:37,410
there are a lot I know that my

00:49:33,870 --> 00:49:39,420
applications do that there is actually

00:49:37,410 --> 00:49:41,100
an entire honeypot like if you there's

00:49:39,420 --> 00:49:42,270
there's actually some IOT stuff that's

00:49:41,100 --> 00:49:47,550
getting used for what's called a

00:49:42,270 --> 00:49:49,020
honeypot Network which is used to just

00:49:47,550 --> 00:49:51,060
kind of throw them everywhere as a

00:49:49,020 --> 00:49:52,860
security company we actually put honey

00:49:51,060 --> 00:49:54,660
pots on every segment of our network to

00:49:52,860 --> 00:50:00,150
see who's coming in and identify them

00:49:54,660 --> 00:50:01,500
kind of on a larger scale I don't know

00:50:00,150 --> 00:50:03,990
of any applications that will have

00:50:01,500 --> 00:50:06,750
source code that you could view offhand

00:50:03,990 --> 00:50:08,340
but basically it's just I listen to the

00:50:06,750 --> 00:50:10,730
port I just don't create a function for

00:50:08,340 --> 00:50:10,730
the response

00:50:18,920 --> 00:50:23,269
so it's gonna update the IP tables but

00:50:21,799 --> 00:50:25,160
they and the issue you have there though

00:50:23,269 --> 00:50:28,369
is that you have a Python script that

00:50:25,160 --> 00:50:29,539
has root access alright you have

00:50:28,369 --> 00:50:34,160
something that's accepting incoming

00:50:29,539 --> 00:50:35,450
requests that now has root access so you

00:50:34,160 --> 00:50:37,250
can't write you can't connect it you

00:50:35,450 --> 00:50:41,089
can't how you updating IP cables without

00:50:37,250 --> 00:50:45,230
root access okay okay sorry you're right

00:50:41,089 --> 00:50:47,119
so they have net admin access which most

00:50:45,230 --> 00:50:49,279
of us that don't know the difference

00:50:47,119 --> 00:50:51,589
between any root are probably gonna set

00:50:49,279 --> 00:50:53,420
up is root but again you're giving

00:50:51,589 --> 00:50:55,519
somebody very high light you're giving a

00:50:53,420 --> 00:50:58,789
script that has that's exposed to the

00:50:55,519 --> 00:50:59,990
internet a very high level of access but

00:50:58,789 --> 00:51:02,809
that is that is absolutely one way to go

00:50:59,990 --> 00:51:03,890
about it and there are some some stuff

00:51:02,809 --> 00:51:07,970
out there that's configurable that you

00:51:03,890 --> 00:51:09,920
can do that with I don't really suggest

00:51:07,970 --> 00:51:11,390
that when you can solve it in your

00:51:09,920 --> 00:51:12,769
application if you can't figure how to

00:51:11,390 --> 00:51:14,809
do that and it's probably it's

00:51:12,769 --> 00:51:16,849
definitely better than exposing

00:51:14,809 --> 00:51:20,089
everything on the planet I do that for

00:51:16,849 --> 00:51:22,190
IP tables but they said on the honeypot

00:51:20,089 --> 00:51:24,019
side I would say that you're going to

00:51:22,190 --> 00:51:25,309
listen in and just drop the response

00:51:24,019 --> 00:51:32,869
from there and understand who the actors

00:51:25,309 --> 00:51:34,609
are coming in right but then you but

00:51:32,869 --> 00:51:36,170
eventually right you've got thousands

00:51:34,609 --> 00:51:37,339
and thousands and thousands of IPS and

00:51:36,170 --> 00:51:41,950
your IP tables and how does that slow

00:51:37,339 --> 00:51:41,950
much less let your sister go what's that

00:51:45,579 --> 00:51:49,309
correct but then when it comes in to

00:51:47,420 --> 00:51:51,470
port 80 you don't know that that's them

00:51:49,309 --> 00:51:53,180
again all right so with them with the

00:51:51,470 --> 00:51:54,890
honeypot system it's I'm going to take

00:51:53,180 --> 00:51:56,960
your request on 25 I'm not gonna respond

00:51:54,890 --> 00:51:59,089
to it but I'm also not going to respond

00:51:56,960 --> 00:52:01,369
to you on port 80 because I know you're

00:51:59,089 --> 00:52:02,869
a bad actor all right so that's that's

00:52:01,369 --> 00:52:04,910
been stopping the denial of service on

00:52:02,869 --> 00:52:06,319
your actual application yeah IP tables

00:52:04,910 --> 00:52:09,079
you can absolutely just shut everybody

00:52:06,319 --> 00:52:10,460
off in 425 or all this type of stuff but

00:52:09,079 --> 00:52:11,869
what you're on a honeypot what you're

00:52:10,460 --> 00:52:14,150
trying to do is you're trying to suck

00:52:11,869 --> 00:52:15,349
them in to find out that uh because

00:52:14,150 --> 00:52:17,690
they're just going to do a port scan

00:52:15,349 --> 00:52:19,279
right anybody who's going to try and

00:52:17,690 --> 00:52:21,319
invade your system it's going to start

00:52:19,279 --> 00:52:22,609
doing a port scan unless they know where

00:52:21,319 --> 00:52:24,589
your application is and they're doing

00:52:22,609 --> 00:52:25,730
the directed attack so the first thing

00:52:24,589 --> 00:52:26,839
you do is a port scan they try and find

00:52:25,730 --> 00:52:27,710
out what's available right because

00:52:26,839 --> 00:52:30,430
they're not attacking your device

00:52:27,710 --> 00:52:32,720
specifically they're attacking a

00:52:30,430 --> 00:52:34,460
location or just an IP rain

00:52:32,720 --> 00:52:36,800
and they're going in there and trying to

00:52:34,460 --> 00:52:38,690
find this particular thing to attack and

00:52:36,800 --> 00:52:39,530
if you expose this things out there

00:52:38,690 --> 00:52:40,670
they're going to say oh now I've got

00:52:39,530 --> 00:52:42,319
things I can go out later so now I've

00:52:40,670 --> 00:52:43,730
got SMTP let me go try this one I've got

00:52:42,319 --> 00:52:46,130
SSH and we go try that one

00:52:43,730 --> 00:52:47,300
I've got port 80 I'm gonna go try these

00:52:46,130 --> 00:52:49,280
other things I'm gonna start hitting

00:52:47,300 --> 00:52:50,510
with web attacks and trying to do sequel

00:52:49,280 --> 00:52:53,810
injection and all these crazy terrible

00:52:50,510 --> 00:52:55,790
things but a honeypot will allow you to

00:52:53,810 --> 00:52:58,150
kind of mitigate that before it starts

00:52:55,790 --> 00:52:58,150
happening

00:52:59,590 --> 00:53:02,729
[Music]

00:53:11,250 --> 00:53:15,420
it's very difficult to IP spoofing get a

00:53:13,230 --> 00:53:18,210
response back because the rather the

00:53:15,420 --> 00:53:20,099
never doesn't know how to come back so I

00:53:18,210 --> 00:53:20,460
mean you can only get so far going that

00:53:20,099 --> 00:53:21,720
way

00:53:20,460 --> 00:53:24,060
right and that's that's a pretty

00:53:21,720 --> 00:53:36,119
sophisticated attack outside the network

00:53:24,060 --> 00:53:37,319
alright it's very doable but then again

00:53:36,119 --> 00:53:38,819
you have to decide which one is like

00:53:37,319 --> 00:53:40,079
that's a pretty sophisticated attack all

00:53:38,819 --> 00:53:42,410
right doing IP spoofing inside of

00:53:40,079 --> 00:53:44,880
network is a fairly sophisticated attack

00:53:42,410 --> 00:53:46,740
especially you first have to get in the

00:53:44,880 --> 00:53:47,609
network but again it's one of those

00:53:46,740 --> 00:53:50,609
things where you have to kind of weigh

00:53:47,609 --> 00:53:52,500
it out is what's the likelihood that I'm

00:53:50,609 --> 00:53:54,329
going to have someone tonight and do you

00:53:52,500 --> 00:53:55,560
care more about denial of an individual

00:53:54,329 --> 00:53:57,900
being able to talk connect to something

00:53:55,560 --> 00:54:00,060
or my system not being available right

00:53:57,900 --> 00:54:01,260
so we run a DDoS it's yes you may not be

00:54:00,060 --> 00:54:03,480
able to configure me for a little while

00:54:01,260 --> 00:54:04,670
because somebody's done something but it

00:54:03,480 --> 00:54:07,650
doesn't mean the system is stopped

00:54:04,670 --> 00:54:08,819
alright so it depends on what your

00:54:07,650 --> 00:54:13,400
what's more important to you and what

00:54:08,819 --> 00:54:16,400
you need to stop more that make sense

00:54:13,400 --> 00:54:16,400
yeah

00:54:39,080 --> 00:54:50,770
[Music]

00:54:56,820 --> 00:55:00,760
butts in farting is something you're not

00:54:58,930 --> 00:55:02,080
you would stop at a network level yeah

00:55:00,760 --> 00:55:03,220
right you keep you're not gonna stop at

00:55:02,080 --> 00:55:05,100
a device level it's gonna be a network

00:55:03,220 --> 00:55:09,070
clover going to stop send funny right

00:55:05,100 --> 00:55:09,070
[Music]

00:55:11,910 --> 00:55:16,450
read again

00:55:14,170 --> 00:55:18,070
you can't stop everything right but what

00:55:16,450 --> 00:55:20,260
you can stop is you can stop people from

00:55:18,070 --> 00:55:21,640
finding vulnerabilities on your port 80

00:55:20,260 --> 00:55:22,900
if you don't allow them to get on the

00:55:21,640 --> 00:55:24,700
port 80 when they tried port 25

00:55:22,900 --> 00:55:26,770
alright you can't stop everything

00:55:24,700 --> 00:55:29,500
alright I mean there's a lot of things

00:55:26,770 --> 00:55:30,550
as you can't stop and you can try and

00:55:29,500 --> 00:55:32,170
prevent things but if somebody really

00:55:30,550 --> 00:55:33,640
wants to get at you and they find a fine

00:55:32,170 --> 00:55:36,970
of all abilities gonna be there which is

00:55:33,640 --> 00:55:39,610
why you have defensive depth remote code

00:55:36,970 --> 00:55:42,160
execution don't execute unverified code

00:55:39,610 --> 00:55:43,960
right if you don't know where came from

00:55:42,160 --> 00:55:45,070
if you have a validate that it's good we

00:55:43,960 --> 00:55:47,380
talked about that kind of like in the

00:55:45,070 --> 00:55:49,690
patch that you can put a signature there

00:55:47,380 --> 00:55:52,960
to make sure the codes valid don't run

00:55:49,690 --> 00:55:55,840
it and then if you're storing data in a

00:55:52,960 --> 00:55:57,310
database alright there's ways to verify

00:55:55,840 --> 00:55:59,550
that you mitigating it gets sequel

00:55:57,310 --> 00:56:02,620
injection right if you're using a a

00:55:59,550 --> 00:56:05,130
local database whether it's sequel Lite

00:56:02,620 --> 00:56:07,360
or you're using one of the variants for

00:56:05,130 --> 00:56:10,540
key value stores that you're doing for

00:56:07,360 --> 00:56:11,650
speed make sure that your value no in

00:56:10,540 --> 00:56:13,480
your data make sure that you're not

00:56:11,650 --> 00:56:16,800
doing something terrible like on no js'

00:56:13,480 --> 00:56:18,730
and having a a local store

00:56:16,800 --> 00:56:19,960
that allows you that doesn't validate

00:56:18,730 --> 00:56:22,090
the difference between an integer and a

00:56:19,960 --> 00:56:25,510
string and creates a buffer that will

00:56:22,090 --> 00:56:26,650
just spit out people's data so be

00:56:25,510 --> 00:56:29,670
careful for those things that's really

00:56:26,650 --> 00:56:29,670
dependent on the different ones yes

00:56:39,680 --> 00:56:44,460
securement only secures it but you stick

00:56:42,000 --> 00:56:45,600
in there right so if you can't get a you

00:56:44,460 --> 00:56:47,550
can't get at it once it's in there and

00:56:45,600 --> 00:56:48,869
that's going to be dependent on your

00:56:47,550 --> 00:56:49,980
operating system and how you're gonna be

00:56:48,869 --> 00:56:51,540
able to execute inside of there and

00:56:49,980 --> 00:56:53,359
whether or not your virtual machine or

00:56:51,540 --> 00:56:55,710
your code executes in that environment

00:56:53,359 --> 00:56:56,880
what I've talked about mostly is what

00:56:55,710 --> 00:56:59,970
most people are doing is you're going to

00:56:56,880 --> 00:57:00,930
have to patch your code or there you're

00:56:59,970 --> 00:57:02,640
going to get information going to be

00:57:00,930 --> 00:57:03,780
sticking in the database protect

00:57:02,640 --> 00:57:06,720
yourself against the sequel objection

00:57:03,780 --> 00:57:08,520
the trusted code environment is its

00:57:06,720 --> 00:57:09,990
particular and different and it's going

00:57:08,520 --> 00:57:11,670
to be based on the vendor on how they've

00:57:09,990 --> 00:57:12,990
implemented it I know that there's some

00:57:11,670 --> 00:57:14,609
standards coming out around that but

00:57:12,990 --> 00:57:16,350
everybody seems to be just a little bit

00:57:14,609 --> 00:57:19,520
different so far

00:57:16,350 --> 00:57:21,420
Leeson the stuff that I've seen so

00:57:19,520 --> 00:57:24,720
really quickly I want to give you some

00:57:21,420 --> 00:57:27,630
tools that'll be did some of these will

00:57:24,720 --> 00:57:29,040
be super helpful for you so here it is

00:57:27,630 --> 00:57:30,330
your ink test force right we're talking

00:57:29,040 --> 00:57:31,410
we keep talk about crypto and signature

00:57:30,330 --> 00:57:33,359
verification and all this kind of stuff

00:57:31,410 --> 00:57:36,060
they have two standards that do that

00:57:33,359 --> 00:57:38,970
stuff for you one is called Jose and one

00:57:36,060 --> 00:57:41,160
it's called cozy one is using JSON and

00:57:38,970 --> 00:57:43,530
one is using C war which is the binary

00:57:41,160 --> 00:57:46,109
object representation we all care about

00:57:43,530 --> 00:57:48,480
small packet sizes and not having to

00:57:46,109 --> 00:57:49,830
move between text and binary so there

00:57:48,480 --> 00:57:51,570
are libraries written around these

00:57:49,830 --> 00:57:53,730
standards that will allow you to encrypt

00:57:51,570 --> 00:57:54,690
and sign data in transit and be super

00:57:53,730 --> 00:58:00,240
simple

00:57:54,690 --> 00:58:02,780
same thing with storing data locally the

00:58:00,240 --> 00:58:05,780
open web application security project

00:58:02,780 --> 00:58:10,980
okay this is used by websites everywhere

00:58:05,780 --> 00:58:11,970
it's also used by IOT they have top ten

00:58:10,980 --> 00:58:13,290
vulnerabilities they have all the

00:58:11,970 --> 00:58:14,940
information you need to determine what

00:58:13,290 --> 00:58:17,490
your vulnerabilities are and how to

00:58:14,940 --> 00:58:18,480
actually fix them all right so if you

00:58:17,490 --> 00:58:25,109
think there's something I want to do go

00:58:18,480 --> 00:58:27,060
there bug bounties okay these are super

00:58:25,109 --> 00:58:30,180
awesome you can pay the best hackers on

00:58:27,060 --> 00:58:32,430
the planet to come check your site and

00:58:30,180 --> 00:58:35,700
tell you what's wrong with it before the

00:58:32,430 --> 00:58:37,200
bad guys - all right my company we've

00:58:35,700 --> 00:58:39,869
had one for four years we paid out about

00:58:37,200 --> 00:58:41,160
two thousand dollars in serious bugs

00:58:39,869 --> 00:58:43,800
that were found and their Security's in

00:58:41,160 --> 00:58:45,300
our systems and these are literally

00:58:43,800 --> 00:58:47,100
people who write the books all right

00:58:45,300 --> 00:58:49,530
they do it for a little bit of money a

00:58:47,100 --> 00:58:52,340
little bit recognition part of their

00:58:49,530 --> 00:58:52,340
career path make it up

00:58:52,390 --> 00:58:57,320
using ethical hackers is a great way to

00:58:54,619 --> 00:58:59,390
keep your stuff secure I really really

00:58:57,320 --> 00:59:01,910
really suggested and there's some places

00:58:59,390 --> 00:59:02,720
out there like bugcrowd and things like

00:59:01,910 --> 00:59:04,520
that where you can get that information

00:59:02,720 --> 00:59:08,570
and they will manage it for you or you

00:59:04,520 --> 00:59:09,680
can do it yourself so if anybody has any

00:59:08,570 --> 00:59:10,640
additional questions it looks like I'm

00:59:09,680 --> 00:59:15,800
running a little bit late and I

00:59:10,640 --> 00:59:18,080
apologize so you could just basically

00:59:15,800 --> 00:59:20,090
look up bug bounty ethical hacker so

00:59:18,080 --> 00:59:22,850
it's like there's a bug crowd there's a

00:59:20,090 --> 00:59:23,390
few others hacker one yes hacker ones

00:59:22,850 --> 00:59:25,340
one of them

00:59:23,390 --> 00:59:26,540
like I said we're on our own because we

00:59:25,340 --> 00:59:29,030
have security researchers and experts

00:59:26,540 --> 00:59:30,410
but if you don't have that there's the

00:59:29,030 --> 00:59:32,090
sites out that will help you do that get

00:59:30,410 --> 00:59:32,930
it set up setting up your boundaries and

00:59:32,090 --> 00:59:34,100
what they're allowed to do what not

00:59:32,930 --> 00:59:35,810
allowed to do and get you in contact

00:59:34,100 --> 00:59:40,100
with them you might have to find out

00:59:35,810 --> 00:59:41,420
what bitcoin is to be able to pay these

00:59:40,100 --> 00:59:45,440
individuals because they don't normally

00:59:41,420 --> 00:59:48,170
live in the United States so and if you

00:59:45,440 --> 00:59:49,580
have any more questions don't feel feel

00:59:48,170 --> 00:59:51,619
free to just grab me but I'm gonna let

00:59:49,580 --> 00:59:53,630
her get set up so she can go because I'm

00:59:51,619 --> 01:00:00,949
running late thank you

00:59:53,630 --> 01:00:00,949

YouTube URL: https://www.youtube.com/watch?v=fMsb5nEUPd8


