Title: Drinking From The CVE Firehose: Or How To Ensure Your Open Source Product Survives
Publication date: 2017-02-27
Playlist: Embedded Linux Conference + OpenIoT Summit NA 2017
Description: 
	Drinking From The CVE Firehose: Or How To Ensure Your Open Source Product Survives the Onslaught Of Publicly Known Security Vulnerabilities - Ryan Ware, Intel Corporation

Picture your product. Now picture your product trying to withstand the coriolis force winds of Dune that can eat the flesh off a sandworm. Those winds are made up of Common Vulnerability Enumeration (CVE) IDs, privately known security vulnerabilities and finally, dreaded 0-day vulnerabilities. How can your product possibly survive? In this talk, I will present strategies for how you survive this onslaught allowing you to manage the security of your product and even make your product better over time without feeling like you're running on a treadmill with no off switch.

About Ryan Ware
Ryan Ware has worked at Intel for 17 years. During that time he has been in many different Intel organizations but always focused on product security related to Linux/*NIX systems. He has been in Intel's Open Source Technology Center for the past 7 years where he has been the lead security architect and worked on projects such as MeeGo, Tizen, ChromeOS, Android, the Linux kernel and many other open source projects. He is currently Intel's W3C Advisory Committee representative helping to create web standards and is the open source Web Security Architect.
Captions: 
	00:00:00,030 --> 00:00:10,080
so my name is Ryan where I work at Intel

00:00:02,879 --> 00:00:15,089
and wanted to give a talk one of the

00:00:10,080 --> 00:00:17,910
things that I see in the open-source

00:00:15,089 --> 00:00:20,760
community is a lot of times people don't

00:00:17,910 --> 00:00:23,340
actually have all of the information

00:00:20,760 --> 00:00:27,449
they need to figure out how to to build

00:00:23,340 --> 00:00:29,189
a product that will withstand a lot of

00:00:27,449 --> 00:00:31,619
the security vulnerabilities that that

00:00:29,189 --> 00:00:40,290
happen and that that come along that

00:00:31,619 --> 00:00:42,360
affect their product so I you know given

00:00:40,290 --> 00:00:46,320
the title of my talk I had to include

00:00:42,360 --> 00:00:49,530
this in my slides I don't know how many

00:00:46,320 --> 00:00:52,140
of you have seen UHF a very old movie

00:00:49,530 --> 00:00:56,149
you can tell from how young Michael

00:00:52,140 --> 00:00:56,149
Richards from Seinfeld looks there

00:00:56,449 --> 00:01:03,390
anyway you know I wanted to start by

00:01:00,840 --> 00:01:07,140
talking about what is a security

00:01:03,390 --> 00:01:10,049
vulnerability and and no really I'm not

00:01:07,140 --> 00:01:14,060
joking what is a security vulnerability

00:01:10,049 --> 00:01:18,240
a lot of people have some problems

00:01:14,060 --> 00:01:19,860
sometimes really understanding what is a

00:01:18,240 --> 00:01:22,080
security vulnerability and what is not

00:01:19,860 --> 00:01:24,960
you might think it's natural in many

00:01:22,080 --> 00:01:29,790
cases it is but people have a problem

00:01:24,960 --> 00:01:31,920
enunciated it sometimes so I have this

00:01:29,790 --> 00:01:34,560
Venn diagram that that I like to show

00:01:31,920 --> 00:01:37,439
when when I'm talking about this so so

00:01:34,560 --> 00:01:41,040
this when you look here this is your

00:01:37,439 --> 00:01:43,290
products design and by design I mean

00:01:41,040 --> 00:01:46,259
things like your architecture your

00:01:43,290 --> 00:01:48,390
high-level daya design your low-level

00:01:46,259 --> 00:01:51,149
design your requirements your

00:01:48,390 --> 00:01:56,250
specifications any compliance that you

00:01:51,149 --> 00:01:59,159
need to to be compliant with you know

00:01:56,250 --> 00:02:01,740
and these are you know this is what you

00:01:59,159 --> 00:02:07,489
you start out with and then you know

00:02:01,740 --> 00:02:11,099
this is your implementation so this is

00:02:07,489 --> 00:02:13,290
your intended it you know this is what

00:02:11,099 --> 00:02:20,700
you actually end up building

00:02:13,290 --> 00:02:23,299
and this and this is things like source

00:02:20,700 --> 00:02:25,530
code object code libraries executables

00:02:23,299 --> 00:02:29,519
your dependencies in your environment

00:02:25,530 --> 00:02:32,879
and and this is is the how those two

00:02:29,519 --> 00:02:35,159
actually intersect so here in the middle

00:02:32,879 --> 00:02:39,269
are our you know this is the intended

00:02:35,159 --> 00:02:41,220
product that you want to build and this

00:02:39,269 --> 00:02:45,900
is the product that that you know you're

00:02:41,220 --> 00:02:47,430
trying to get out the door this little

00:02:45,900 --> 00:02:50,370
area over here on the left

00:02:47,430 --> 00:02:54,510
these are things that you design but

00:02:50,370 --> 00:02:56,639
didn't actually implement and this over

00:02:54,510 --> 00:03:00,180
here on this side is something for the

00:02:56,639 --> 00:03:02,790
moment I'll call extra functionality and

00:03:00,180 --> 00:03:06,389
I'll go over some of that here in a

00:03:02,790 --> 00:03:10,440
minute but when you look at this things

00:03:06,389 --> 00:03:13,109
in the middle here things that are

00:03:10,440 --> 00:03:17,669
security vulnerabilities here in this

00:03:13,109 --> 00:03:20,370
section are things like you designed

00:03:17,669 --> 00:03:23,370
your product incorrectly in some way so

00:03:20,370 --> 00:03:27,900
for example you know you designed your

00:03:23,370 --> 00:03:31,940
product - sorry screen just went out

00:03:27,900 --> 00:03:34,829
here you designed your product to

00:03:31,940 --> 00:03:37,470
negotiate your cryptographic codes and

00:03:34,829 --> 00:03:41,129
an in an incorrect manner or or you

00:03:37,470 --> 00:03:44,040
designed your your access controls in an

00:03:41,129 --> 00:03:46,560
incorrect way these kind of

00:03:44,040 --> 00:03:48,500
vulnerabilities happen but they're

00:03:46,560 --> 00:03:52,109
they're not the majority of

00:03:48,500 --> 00:03:54,540
vulnerabilities that happen over here on

00:03:52,109 --> 00:03:56,790
the left designed but not implemented

00:03:54,540 --> 00:04:00,389
you can actually have security issues

00:03:56,790 --> 00:04:03,060
from here as well with things that you

00:04:00,389 --> 00:04:05,340
actually drop out of your product the

00:04:03,060 --> 00:04:10,290
that actually have security implications

00:04:05,340 --> 00:04:12,959
so for example turning off a security

00:04:10,290 --> 00:04:14,370
feature that that you actually intended

00:04:12,959 --> 00:04:17,489
to ship in the product and now your

00:04:14,370 --> 00:04:19,380
product is insecure by default and then

00:04:17,489 --> 00:04:21,539
over here on the right the the extra

00:04:19,380 --> 00:04:23,039
functionality these are things like you

00:04:21,539 --> 00:04:25,500
hear all the time and this is where the

00:04:23,039 --> 00:04:27,000
vast majority of security problems come

00:04:25,500 --> 00:04:29,430
from so staff

00:04:27,000 --> 00:04:32,670
Gover flows Heep overflows pointer

00:04:29,430 --> 00:04:34,680
dereference string format errors input

00:04:32,670 --> 00:04:37,440
validation problems return oriented

00:04:34,680 --> 00:04:39,000
programming these are all extra

00:04:37,440 --> 00:04:41,010
functionality that you never designed to

00:04:39,000 --> 00:04:42,240
be a part of your product but actually

00:04:41,010 --> 00:04:45,690
get shipped with your product whether

00:04:42,240 --> 00:04:48,690
you want it to or not in you need to

00:04:45,690 --> 00:04:51,330
keep that in mind as you you ship your

00:04:48,690 --> 00:04:53,580
product out to consumers

00:04:51,330 --> 00:04:55,800
you know these extra bits of

00:04:53,580 --> 00:05:03,150
functionality creep in whether you want

00:04:55,800 --> 00:05:07,380
them to or not now I get this question

00:05:03,150 --> 00:05:11,130
all the time is it secure when you look

00:05:07,380 --> 00:05:13,020
at this so so you could ask this

00:05:11,130 --> 00:05:18,600
question you look at this think of this

00:05:13,020 --> 00:05:22,560
dot this dot is a bit is is it secure a

00:05:18,600 --> 00:05:26,669
binary question so you could treat it

00:05:22,560 --> 00:05:30,060
like a binary question the problem if

00:05:26,669 --> 00:05:35,070
you do this is there's only one way to

00:05:30,060 --> 00:05:36,510
make your system completely secure these

00:05:35,070 --> 00:05:40,860
guys are making their systems secure

00:05:36,510 --> 00:05:43,620
okay there's only one way to do it it's

00:05:40,860 --> 00:05:45,950
actually you know destroy it don't ever

00:05:43,620 --> 00:05:50,400
turn it on make it so it never functions

00:05:45,950 --> 00:05:52,320
there is no way at all to have something

00:05:50,400 --> 00:05:56,760
be completely secure it just can't

00:05:52,320 --> 00:06:00,210
happen so you know is this the right

00:05:56,760 --> 00:06:04,650
question no is it secure the answer is

00:06:00,210 --> 00:06:06,570
always no so so when you get this

00:06:04,650 --> 00:06:08,280
question from somebody and actually it

00:06:06,570 --> 00:06:10,490
was interesting because Lyn us and the

00:06:08,280 --> 00:06:13,190
QA this morning kind of brought this up

00:06:10,490 --> 00:06:16,050
people talking about questions like this

00:06:13,190 --> 00:06:18,000
if somebody comes to you and says is it

00:06:16,050 --> 00:06:23,750
secure you know that they don't know

00:06:18,000 --> 00:06:25,830
what they're talking about so you know

00:06:23,750 --> 00:06:30,930
there's a number of questions that are

00:06:25,830 --> 00:06:32,490
like this is it compromised so this

00:06:30,930 --> 00:06:36,320
seems like it could be a binary question

00:06:32,490 --> 00:06:36,320
yes it's compromised no it's not

00:06:37,420 --> 00:06:44,210
this is actually the wrong way to look

00:06:40,610 --> 00:06:48,500
at this it's really a yes or maybe kind

00:06:44,210 --> 00:06:51,800
of thing so I want you all to to take a

00:06:48,500 --> 00:06:56,690
second and think of this

00:06:51,800 --> 00:06:58,430
so you right now some folks are on their

00:06:56,690 --> 00:07:00,260
computers right now like this gentleman

00:06:58,430 --> 00:07:02,840
in the front row and that's okay I'm not

00:07:00,260 --> 00:07:05,810
criticizing people have their cell

00:07:02,840 --> 00:07:08,090
phones in their pockets people are on

00:07:05,810 --> 00:07:10,820
their devices all here at this

00:07:08,090 --> 00:07:12,980
conference and later on this week you're

00:07:10,820 --> 00:07:15,980
gonna wrap up and go home and go back to

00:07:12,980 --> 00:07:19,070
work and go back to your offices once

00:07:15,980 --> 00:07:21,970
you're there how do you know you were

00:07:19,070 --> 00:07:24,740
not compromised while you were here

00:07:21,970 --> 00:07:27,080
you're using your devices there's

00:07:24,740 --> 00:07:31,550
hackers in the world how do you know

00:07:27,080 --> 00:07:35,510
that you weren't compromised and you

00:07:31,550 --> 00:07:38,660
know what it's almost impossible to say

00:07:35,510 --> 00:07:42,110
hey I know for sure my device wasn't

00:07:38,660 --> 00:07:45,650
compromised devices are just too complex

00:07:42,110 --> 00:07:48,380
these days it is impossible to tell that

00:07:45,650 --> 00:07:50,990
some guy like this actually without the

00:07:48,380 --> 00:07:53,919
mask probably one of you one of you I

00:07:50,990 --> 00:07:58,160
know is in this pic from this picture

00:07:53,919 --> 00:08:00,650
you know your device very well can be

00:07:58,160 --> 00:08:02,870
compromised you can definitely tell yes

00:08:00,650 --> 00:08:07,040
this device is compromised because it

00:08:02,870 --> 00:08:09,140
has whatever virus on it or or whatever

00:08:07,040 --> 00:08:12,380
malware but it's it's not a

00:08:09,140 --> 00:08:15,260
straightforward question this is also a

00:08:12,380 --> 00:08:18,020
danger question whenever somebody is

00:08:15,260 --> 00:08:24,200
coming to you to talk about security you

00:08:18,020 --> 00:08:28,130
know is it vulnerable this also seems

00:08:24,200 --> 00:08:32,360
like a binary question guess what it's

00:08:28,130 --> 00:08:34,760
not there's one answer to this it is you

00:08:32,360 --> 00:08:37,099
are absolutely vulnerable you are never

00:08:34,760 --> 00:08:40,270
going to ship a product that has no

00:08:37,099 --> 00:08:44,390
vulnerabilities in it at all whatsoever

00:08:40,270 --> 00:08:48,890
actually so if you went back in time to

00:08:44,390 --> 00:08:49,940
the end of 2015 and you decided hey I'm

00:08:48,890 --> 00:08:51,980
gonna ship a product

00:08:49,940 --> 00:08:56,570
and you ship a product at the end of 20

00:08:51,980 --> 00:08:58,850
2015 and it's based on Linux so you have

00:08:56,570 --> 00:09:05,960
things in it like the Linux kernel and

00:08:58,850 --> 00:09:08,510
open SSL and Lib tip and ffmpeg despite

00:09:05,960 --> 00:09:12,020
the fact that you knew when you shipped

00:09:08,510 --> 00:09:14,750
it of no vulnerabilities in that

00:09:12,020 --> 00:09:16,310
software stack these are all the

00:09:14,750 --> 00:09:20,840
vulnerabilities that happen in those

00:09:16,310 --> 00:09:22,640
pieces of software over 2016 these are

00:09:20,840 --> 00:09:25,820
all vulnerabilities that you would have

00:09:22,640 --> 00:09:27,620
to address as part of your product now

00:09:25,820 --> 00:09:31,220
by the way it's a logarithmic scale

00:09:27,620 --> 00:09:34,610
because it was just too jumbled but you

00:09:31,220 --> 00:09:37,100
know if you look at this for just these

00:09:34,610 --> 00:09:39,950
four pieces of software there were two

00:09:37,100 --> 00:09:41,600
hundred and ninety four total CVEs that

00:09:39,950 --> 00:09:46,040
were published against those particular

00:09:41,600 --> 00:09:49,070
packages so if you have a product out in

00:09:46,040 --> 00:09:51,470
the field you are going to have to at

00:09:49,070 --> 00:09:54,530
least on a monthly cadence go address

00:09:51,470 --> 00:09:56,060
these security vulnerabilities in you

00:09:54,530 --> 00:09:59,960
need to keep that in mind when you're

00:09:56,060 --> 00:10:02,030
planning what how you're going to to

00:09:59,960 --> 00:10:04,990
respond to security vulnerabilities in

00:10:02,030 --> 00:10:04,990
your product out in the field

00:10:08,270 --> 00:10:15,860
now you may say hey you know okay so so

00:10:13,910 --> 00:10:22,330
I have something vulnerable in my

00:10:15,860 --> 00:10:26,270
product how quickly can it really be

00:10:22,330 --> 00:10:30,500
exploited and there's actually been a

00:10:26,270 --> 00:10:33,620
very interesting example that has

00:10:30,500 --> 00:10:34,970
happened here recently and you know to

00:10:33,620 --> 00:10:37,520
be honest this one's a little bit of an

00:10:34,970 --> 00:10:40,760
outlier but it is something that I think

00:10:37,520 --> 00:10:46,180
is also very illustrative of the problem

00:10:40,760 --> 00:10:50,720
so on January 26 of this year

00:10:46,180 --> 00:10:52,700
WordPress released a bug fix of four

00:10:50,720 --> 00:10:55,310
point seven point two was the version

00:10:52,700 --> 00:10:56,779
number when they released it one of the

00:10:55,310 --> 00:10:59,450
things they didn't say at the time was

00:10:56,779 --> 00:11:02,270
that it was a bug fix to fix a a

00:10:59,450 --> 00:11:06,320
specific security vulnerability in their

00:11:02,270 --> 00:11:08,240
product they actually waited for a

00:11:06,320 --> 00:11:09,709
little while before they announced this

00:11:08,240 --> 00:11:12,110
they actually waited until February

00:11:09,709 --> 00:11:13,910
first to say hey yeah by the way that

00:11:12,110 --> 00:11:17,060
that bug fix it's got a security

00:11:13,910 --> 00:11:18,829
vulnerability that afix it and one of

00:11:17,060 --> 00:11:21,260
the reasons why they they say they did

00:11:18,829 --> 00:11:23,720
that was because they wanted people to

00:11:21,260 --> 00:11:31,550
have time to be able to go upgrade and

00:11:23,720 --> 00:11:33,290
fix it and so on February 3rd all of a

00:11:31,550 --> 00:11:36,740
sudden two days after they announced

00:11:33,290 --> 00:11:41,050
that the fix you could see WordPress

00:11:36,740 --> 00:11:44,500
sites out in the wild being attacked

00:11:41,050 --> 00:11:47,959
against this new vulnerability and

00:11:44,500 --> 00:11:50,329
actually if you look here one of the

00:11:47,959 --> 00:11:52,520
nice things about you know looking at

00:11:50,329 --> 00:11:55,279
attacks for against WordPress sites

00:11:52,520 --> 00:11:57,470
especially with these which were just

00:11:55,279 --> 00:11:59,240
defacement attacks it's very easy to go

00:11:57,470 --> 00:12:04,850
counts how many of these sites there

00:11:59,240 --> 00:12:07,310
were that were vulnerable and so when

00:12:04,850 --> 00:12:10,000
you look at this you can see on February

00:12:07,310 --> 00:12:13,730
4th things just started to take off and

00:12:10,000 --> 00:12:15,170
all of these various different worms and

00:12:13,730 --> 00:12:18,650
botnets actually started going to

00:12:15,170 --> 00:12:20,620
exploit WordPress and actually got these

00:12:18,650 --> 00:12:23,440
numbers down here yes

00:12:20,620 --> 00:12:26,950
day so so you know they were defaced by

00:12:23,440 --> 00:12:30,880
things like say hacked by Mohammad Ahmad

00:12:26,950 --> 00:12:32,530
in hacked by sa 3d hacked 3d if you

00:12:30,880 --> 00:12:34,510
actually go search for these terms in

00:12:32,530 --> 00:12:36,880
Google right now actually as of

00:12:34,510 --> 00:12:38,410
yesterday that one shows three hundred

00:12:36,880 --> 00:12:41,500
or nine hundred and twenty three

00:12:38,410 --> 00:12:44,860
thousand defaced websites at this point

00:12:41,500 --> 00:12:49,600
in time and you know similar numbers

00:12:44,860 --> 00:12:51,790
here it this shows how quickly something

00:12:49,600 --> 00:12:55,500
went from zero just at the beginning of

00:12:51,790 --> 00:12:58,930
this month to today which still has

00:12:55,500 --> 00:13:01,870
millions of websites that are still des

00:12:58,930 --> 00:13:05,340
faced from WordPress instances out there

00:13:01,870 --> 00:13:07,870
in the wild now this was able to to

00:13:05,340 --> 00:13:11,110
proceed so quickly because you know it's

00:13:07,870 --> 00:13:13,060
WordPress its internet sites it's all on

00:13:11,110 --> 00:13:15,550
the network but you have to remember too

00:13:13,060 --> 00:13:18,340
that that most products are connecting

00:13:15,550 --> 00:13:21,820
on the network as well so they're able

00:13:18,340 --> 00:13:32,050
to people attackers are able to go reach

00:13:21,820 --> 00:13:34,600
out and touched your products so who are

00:13:32,050 --> 00:13:39,010
finding the vulnerabilities in these

00:13:34,600 --> 00:13:42,070
software packages so you know a lot of

00:13:39,010 --> 00:13:45,790
folks they look and they think of the

00:13:42,070 --> 00:13:49,990
traditional hacker you know somebody who

00:13:45,790 --> 00:13:52,750
lives in their mother's basement who you

00:13:49,990 --> 00:13:54,760
know lives in the dark and and is on the

00:13:52,750 --> 00:13:58,360
computer all the time you know something

00:13:54,760 --> 00:14:03,060
like this guy poor Kevin Smith I'll

00:13:58,360 --> 00:14:05,530
never stop using this picture you know

00:14:03,060 --> 00:14:10,510
that's the stereotypical hacker right

00:14:05,530 --> 00:14:14,260
there it's not really true anymore you

00:14:10,510 --> 00:14:16,870
know to be honest you know things have

00:14:14,260 --> 00:14:19,840
moved on this is probably true 20 25 30

00:14:16,870 --> 00:14:22,540
years ago but you know things are

00:14:19,840 --> 00:14:25,770
different now now hackers they like to

00:14:22,540 --> 00:14:25,770
view themselves like this

00:14:25,790 --> 00:14:32,900
you know they think oh I'm cooler than

00:14:28,670 --> 00:14:37,970
neo and to be honest you know things are

00:14:32,900 --> 00:14:41,480
actually much more like this just guys

00:14:37,970 --> 00:14:44,150
who are smart who are working in an

00:14:41,480 --> 00:14:46,250
interesting field trying to do what they

00:14:44,150 --> 00:14:47,450
they they think is right yeah and

00:14:46,250 --> 00:14:51,320
they're actually you know people who

00:14:47,450 --> 00:14:53,750
have grown up to be people like me I

00:14:51,320 --> 00:14:55,100
mean I at one point in time which is

00:14:53,750 --> 00:14:58,640
probably more like the stereotypical

00:14:55,100 --> 00:15:00,770
hacker when I was quite young now one

00:14:58,640 --> 00:15:03,590
thing I do want to point out is hackers

00:15:00,770 --> 00:15:09,530
never look like this and don't go see

00:15:03,590 --> 00:15:11,870
see black hat it's a horrible movie and

00:15:09,530 --> 00:15:14,390
so I wanted to talk a little bit about

00:15:11,870 --> 00:15:17,870
this this kind of ecosystem that's out

00:15:14,390 --> 00:15:21,520
there of hackers here on the the

00:15:17,870 --> 00:15:24,440
horizontal access is is increasing

00:15:21,520 --> 00:15:27,590
capabilities so so going from script

00:15:24,440 --> 00:15:31,130
kitty to hobbyist hacker to an expert

00:15:27,590 --> 00:15:35,000
all the way to specialist and here on

00:15:31,130 --> 00:15:36,740
the vertical is is increasing impact of

00:15:35,000 --> 00:15:39,620
what somebody's trying to do so

00:15:36,740 --> 00:15:42,710
curiosity personal Fame personal gain

00:15:39,620 --> 00:15:44,990
national interest so it's going all the

00:15:42,710 --> 00:15:48,320
way down here on the lower left hand

00:15:44,990 --> 00:15:50,360
side from from script kiddies who are

00:15:48,320 --> 00:15:52,610
just trying to vandalize websites which

00:15:50,360 --> 00:15:53,990
by the way this is exactly the kind of

00:15:52,610 --> 00:15:56,600
people that were counted in that

00:15:53,990 --> 00:16:00,610
WordPress a vole 'nor ability that I

00:15:56,600 --> 00:16:03,770
just pointed to all the way up to two

00:16:00,610 --> 00:16:06,070
nation-states with specialists who do

00:16:03,770 --> 00:16:13,580
nothing but focus on computer security

00:16:06,070 --> 00:16:16,370
below NSA can you protect against

00:16:13,580 --> 00:16:19,040
everything in this in this entire

00:16:16,370 --> 00:16:21,850
spectrum do you think you can build a

00:16:19,040 --> 00:16:26,270
product to protect yourself from the NSA

00:16:21,850 --> 00:16:29,330
I work for a very large company I don't

00:16:26,270 --> 00:16:31,130
think we can but you do have to figure

00:16:29,330 --> 00:16:34,460
out where you're trying to protect

00:16:31,130 --> 00:16:36,380
against and I think where are you really

00:16:34,460 --> 00:16:38,630
trying to protect against yes you need

00:16:36,380 --> 00:16:42,370
to protect from the script kitties

00:16:38,630 --> 00:16:46,150
if you aren't doing that god help you

00:16:42,370 --> 00:16:50,660
you're going to have an interesting time

00:16:46,150 --> 00:16:54,260
but this part right here this is the

00:16:50,660 --> 00:16:56,090
fastest-growing segment of this entire

00:16:54,260 --> 00:17:03,680
spectrum and I'll tell you why here in a

00:16:56,090 --> 00:17:05,530
couple of slides excuse me there's some

00:17:03,680 --> 00:17:08,839
interesting things that happen with this

00:17:05,530 --> 00:17:12,650
part of the spectrum as well so these

00:17:08,839 --> 00:17:15,620
folks are people who are experts but who

00:17:12,650 --> 00:17:18,430
are also looking for personal gain in

00:17:15,620 --> 00:17:23,420
that personal gain comes down to money

00:17:18,430 --> 00:17:27,230
okay and it used to be I don't know a

00:17:23,420 --> 00:17:29,180
while ago probably ten years ago say you

00:17:27,230 --> 00:17:31,750
know the kind of money that that these

00:17:29,180 --> 00:17:35,540
folks were making was was all due to

00:17:31,750 --> 00:17:37,820
criminal activity you know finding

00:17:35,540 --> 00:17:40,190
vulnerabilities and selling them to to

00:17:37,820 --> 00:17:44,900
nefarious organizations like organized

00:17:40,190 --> 00:17:47,390
crime or potentially governments but

00:17:44,900 --> 00:17:49,010
that's changed a little bit here and in

00:17:47,390 --> 00:17:50,840
again I'll explain why in a couple of

00:17:49,010 --> 00:17:55,610
slides but one of the things that's very

00:17:50,840 --> 00:17:59,030
interesting is that these guys they

00:17:55,610 --> 00:18:02,680
along with these other experts here they

00:17:59,030 --> 00:18:05,420
create all sorts of interesting tools so

00:18:02,680 --> 00:18:10,430
for example if I go figure out how to

00:18:05,420 --> 00:18:12,140
hack into a system I don't want to go do

00:18:10,430 --> 00:18:17,210
it by hand every time I want to build

00:18:12,140 --> 00:18:20,390
tools that actually work for me so I can

00:18:17,210 --> 00:18:24,250
actually go ahead and and go ahead and

00:18:20,390 --> 00:18:28,700
use the tools to make my date job easier

00:18:24,250 --> 00:18:30,590
now people will actually end up getting

00:18:28,700 --> 00:18:32,600
this tool who are more hobbyist hackers

00:18:30,590 --> 00:18:36,410
who don't actually understand what the

00:18:32,600 --> 00:18:37,880
tools really do and then people who are

00:18:36,410 --> 00:18:40,610
looking for personal gain

00:18:37,880 --> 00:18:42,680
will go start using these tools again

00:18:40,610 --> 00:18:44,090
these are people like the the script

00:18:42,680 --> 00:18:46,790
kiddies that I mentioned earlier and

00:18:44,090 --> 00:18:49,670
it's interesting you know these tools

00:18:46,790 --> 00:18:50,580
they float around and people start using

00:18:49,670 --> 00:18:52,770
them

00:18:50,580 --> 00:18:55,020
and the authors don't even necessarily

00:18:52,770 --> 00:19:00,630
really know what what how they're being

00:18:55,020 --> 00:19:03,000
used I was taking a sans 660 course this

00:19:00,630 --> 00:19:05,130
is probably four years ago now and it

00:19:03,000 --> 00:19:08,970
was it for those of you who don't know

00:19:05,130 --> 00:19:11,910
sans gives security training in and San

00:19:08,970 --> 00:19:15,450
660 is a five day course of penetration

00:19:11,910 --> 00:19:17,250
testing and we start the second day and

00:19:15,450 --> 00:19:20,340
I'm there with a bunch of members from

00:19:17,250 --> 00:19:24,420
my team and all of a sudden I hear hear

00:19:20,340 --> 00:19:27,420
him say out loud and Mark will laugh

00:19:24,420 --> 00:19:32,490
because this was Dean Pierce and Dean

00:19:27,420 --> 00:19:34,800
just goes hey wait this is my tool so so

00:19:32,490 --> 00:19:36,810
the sans course has a chapter on how to

00:19:34,800 --> 00:19:40,530
use the tool that he wrote when he was

00:19:36,810 --> 00:19:42,630
in college and he had no idea that that

00:19:40,530 --> 00:19:44,670
sans was actually talking about his tool

00:19:42,630 --> 00:19:48,540
he actually thought his tool was dead

00:19:44,670 --> 00:19:50,520
but it was like oh okay so these tools

00:19:48,540 --> 00:19:55,320
float around everywhere you have no idea

00:19:50,520 --> 00:19:57,030
where they're gonna end up now let's

00:19:55,320 --> 00:20:00,360
talk about the money aspect here so it

00:19:57,030 --> 00:20:05,850
used to be and this is actually a good

00:20:00,360 --> 00:20:11,180
example from 2008 2008 I went to CANSEC

00:20:05,850 --> 00:20:14,010
West and CANSEC West is where a a a new

00:20:11,180 --> 00:20:17,220
contest called poni own has started in

00:20:14,010 --> 00:20:20,160
in 2008 was the first year and you know

00:20:17,220 --> 00:20:22,860
they gave out a hundred and sixty

00:20:20,160 --> 00:20:23,970
thousand dollars in prize money actually

00:20:22,860 --> 00:20:26,060
know somebody who could have gotten

00:20:23,970 --> 00:20:28,350
fifteen thousand of that but he said I

00:20:26,060 --> 00:20:31,590
can sell it

00:20:28,350 --> 00:20:33,810
and and he did sell it but that's not

00:20:31,590 --> 00:20:37,500
really the money that's driving this

00:20:33,810 --> 00:20:39,120
today so so bug bounty programs so if

00:20:37,500 --> 00:20:42,720
you read this here actually I stole this

00:20:39,120 --> 00:20:45,810
from Wikipedia because it's a reasonable

00:20:42,720 --> 00:20:48,060
definition a bug bounty program is a

00:20:45,810 --> 00:20:50,580
deal offered by many websites and

00:20:48,060 --> 00:20:52,800
software developers by which individuals

00:20:50,580 --> 00:20:54,840
can receive recognition and compensation

00:20:52,800 --> 00:20:55,950
for reporting bugs especially those

00:20:54,840 --> 00:21:00,750
pertaining to exploits and

00:20:55,950 --> 00:21:02,070
vulnerabilities the first real bug

00:21:00,750 --> 00:21:04,230
bounty program was actually started by

00:21:02,070 --> 00:21:07,169
Netscape in 95

00:21:04,230 --> 00:21:09,960
a long time ago it was kind of quiet but

00:21:07,169 --> 00:21:15,080
it was something that actually helped

00:21:09,960 --> 00:21:15,080
them a lot but in the last few years

00:21:15,990 --> 00:21:21,870
bug bounty programs have really really

00:21:18,750 --> 00:21:26,070
taken off there are hundreds of them at

00:21:21,870 --> 00:21:28,559
this point in time and you know there

00:21:26,070 --> 00:21:32,040
are major players that have them such as

00:21:28,559 --> 00:21:35,690
Google Facebook Microsoft Dell PayPal

00:21:32,040 --> 00:21:43,730
Yahoo wait there's something wrong here

00:21:35,690 --> 00:21:43,730
major players Yahoo wait let's fix that

00:21:45,020 --> 00:21:53,610
and you know these companies are all

00:21:50,070 --> 00:21:58,049
paying external people to find security

00:21:53,610 --> 00:22:01,049
vulnerabilities in their software in

00:21:58,049 --> 00:22:02,880
addition to any testing and validation

00:22:01,049 --> 00:22:06,480
that they do internally for their

00:22:02,880 --> 00:22:09,809
products so what kind of money can you

00:22:06,480 --> 00:22:12,809
make by doing this so a typical one is

00:22:09,809 --> 00:22:15,210
for the the chromium bug bounties so

00:22:12,809 --> 00:22:20,460
interestingly so so there's a whole

00:22:15,210 --> 00:22:22,679
range of $500 up to $100,000 there is a

00:22:20,460 --> 00:22:25,710
standing hundred thousand dollar reward

00:22:22,679 --> 00:22:28,320
for participants that can compromise a

00:22:25,710 --> 00:22:31,700
Chromebook or chrome box with device

00:22:28,320 --> 00:22:34,169
persistence in guest mode so basically

00:22:31,700 --> 00:22:36,419
you know if you can compromise a

00:22:34,169 --> 00:22:38,280
Chromebook as it comes out of the box

00:22:36,419 --> 00:22:46,230
you can go score a hundred thousand

00:22:38,280 --> 00:22:47,790
dollars you know - taxes and there's a

00:22:46,230 --> 00:22:50,220
whole range for it for different kinds

00:22:47,790 --> 00:22:53,460
of things that you can actually go get

00:22:50,220 --> 00:22:55,740
paid for so you know low quality bug

00:22:53,460 --> 00:22:59,190
reports these are like hey I found a bug

00:22:55,740 --> 00:23:00,330
I think it's here you know you can even

00:22:59,190 --> 00:23:03,690
get five hundred bucks for something

00:23:00,330 --> 00:23:07,350
that's as rudimentary as that baseline

00:23:03,690 --> 00:23:09,090
bugs which will find for example you

00:23:07,350 --> 00:23:11,610
know a buffer overflow or something like

00:23:09,090 --> 00:23:15,360
that that it just exists that that it

00:23:11,610 --> 00:23:18,220
might be possible given a hope and a

00:23:15,360 --> 00:23:20,530
prayer to be able to to exploit it

00:23:18,220 --> 00:23:23,530
you can get two to five thousand dollars

00:23:20,530 --> 00:23:26,169
if it escapes the sandbox or one to

00:23:23,530 --> 00:23:28,390
three thousand dollars for a remote code

00:23:26,169 --> 00:23:30,580
execution excuse me

00:23:28,390 --> 00:23:33,000
this goes all the way up to fifteen

00:23:30,580 --> 00:23:36,309
thousand dollars for for a high-quality

00:23:33,000 --> 00:23:39,010
report with a functional exploit showing

00:23:36,309 --> 00:23:42,159
how they how you can actually break out

00:23:39,010 --> 00:23:45,480
of their sandbox and in actuality for

00:23:42,159 --> 00:23:49,659
some people that they found to actually

00:23:45,480 --> 00:23:51,580
create a exceptional exploit against

00:23:49,659 --> 00:23:53,200
their software they've paid a number of

00:23:51,580 --> 00:23:54,909
times thirty thousand dollars to folks

00:23:53,200 --> 00:24:00,940
even though they don't talk about it on

00:23:54,909 --> 00:24:04,210
their site so actually if part of me

00:24:00,940 --> 00:24:06,190
wants to just you know go independent

00:24:04,210 --> 00:24:08,020
and just go make money from these

00:24:06,190 --> 00:24:11,370
because I I know how to do this stuff

00:24:08,020 --> 00:24:14,230
but I enjoy working at Intel too much so

00:24:11,370 --> 00:24:17,770
but you know this is kind of the the

00:24:14,230 --> 00:24:20,590
typical how much money you can make you

00:24:17,770 --> 00:24:22,480
know what's the the the you know high

00:24:20,590 --> 00:24:25,090
range of what you can make there's a

00:24:22,480 --> 00:24:27,610
company called zero diem this is their

00:24:25,090 --> 00:24:29,950
payout ranges from their website they go

00:24:27,610 --> 00:24:34,090
anywhere from ten thousand dollars all

00:24:29,950 --> 00:24:35,830
the way up to 1.5 million ok so so if

00:24:34,090 --> 00:24:41,919
you want to become a millionaire today

00:24:35,830 --> 00:24:48,030
you find a remote exploit for for Apple

00:24:41,919 --> 00:24:48,030
iOS that jailbreaks out of its sandbox

00:24:48,510 --> 00:24:51,820
they're paying 1.5 million dollars for

00:24:51,280 --> 00:24:54,280
that right now

00:24:51,820 --> 00:24:56,020
and I can tell you why they're paying

00:24:54,280 --> 00:25:00,270
that so that they can sell this to the

00:24:56,020 --> 00:25:04,539
FBI so the FBI can go break in iPhones

00:25:00,270 --> 00:25:06,580
but you know it's it's a huge chunk of

00:25:04,539 --> 00:25:09,070
money I mean even so if you can get a

00:25:06,580 --> 00:25:12,190
remote exploit on on Android that's two

00:25:09,070 --> 00:25:13,570
hundred thousand flash I mean you've

00:25:12,190 --> 00:25:16,919
seen how many issues there are with

00:25:13,570 --> 00:25:20,400
flash flash up to a hundred thousand

00:25:16,919 --> 00:25:23,860
these are significant chunks of change

00:25:20,400 --> 00:25:25,750
and to be honest there are still

00:25:23,860 --> 00:25:27,820
nefarious organizations out there who

00:25:25,750 --> 00:25:30,510
will pay even more than these depending

00:25:27,820 --> 00:25:35,200
upon what their goals are

00:25:30,510 --> 00:25:40,390
so okay great can we get back to the CVE

00:25:35,200 --> 00:25:42,190
thing here so what does a cv cv e stands

00:25:40,390 --> 00:25:45,630
for common vulnerabilities and exposures

00:25:42,190 --> 00:25:48,789
it's actually the name of a database

00:25:45,630 --> 00:25:51,640
it's a database of you know quote

00:25:48,789 --> 00:25:54,340
unquote all publicly known software

00:25:51,640 --> 00:25:59,320
security vulnerabilities starting from

00:25:54,340 --> 00:26:01,630
1999 and a lot of times you'll you'll

00:25:59,320 --> 00:26:05,620
hear security researchers talk about ok

00:26:01,630 --> 00:26:08,020
there's a new CBE for this over the

00:26:05,620 --> 00:26:09,850
years CVE has become then you know that

00:26:08,020 --> 00:26:11,620
the term used for individual

00:26:09,850 --> 00:26:15,100
vulnerabilities even though it's just

00:26:11,620 --> 00:26:18,610
the name of a database so it was never

00:26:15,100 --> 00:26:22,149
intended for that purpose but that's ok

00:26:18,610 --> 00:26:26,049
it's actually run by a non-profit called

00:26:22,149 --> 00:26:28,480
miter miter manage this manages this

00:26:26,049 --> 00:26:33,730
database on behalf of the US National

00:26:28,480 --> 00:26:37,179
Cyber Security Division they you know

00:26:33,730 --> 00:26:38,940
you know they've been doing this being

00:26:37,179 --> 00:26:42,490
paid by the US government to do this for

00:26:38,940 --> 00:26:47,049
forever at this point there's currently

00:26:42,490 --> 00:26:53,799
80 1,785 vulnerabilities in the database

00:26:47,049 --> 00:26:55,149
as of yesterday ok currently and this

00:26:53,799 --> 00:26:57,659
actually freaks me out a little bit but

00:26:55,149 --> 00:27:01,120
currently this year so far there's been

00:26:57,659 --> 00:27:03,760
1822 and if you calculate that out it's

00:27:01,120 --> 00:27:07,230
it's a little bit more than than 35 new

00:27:03,760 --> 00:27:11,710
CBE's per day so far this year which

00:27:07,230 --> 00:27:14,440
outpaces things dramatically from all

00:27:11,710 --> 00:27:16,270
previous years if it keeps up this way I

00:27:14,440 --> 00:27:18,159
don't think it will but but if it does

00:27:16,270 --> 00:27:23,470
keep up this way it'll be more than

00:27:18,159 --> 00:27:26,110
12,000 issues this year alone and if you

00:27:23,470 --> 00:27:30,390
look there's there's a you know long

00:27:26,110 --> 00:27:33,460
going trend of of here you know back in

00:27:30,390 --> 00:27:35,890
2006 you know we kind of peaked in

00:27:33,460 --> 00:27:39,100
petered out a little bit and then now we

00:27:35,890 --> 00:27:41,350
peaked again in in 2014 and the last

00:27:39,100 --> 00:27:47,740
couple of years there's been a

00:27:41,350 --> 00:27:49,210
but fewer and I actually think then I'll

00:27:47,740 --> 00:27:51,130
talk about this here and a little bit to

00:27:49,210 --> 00:27:53,919
why but I actually think the reason that

00:27:51,130 --> 00:27:55,770
there's been fewer since 2014 is because

00:27:53,919 --> 00:27:59,440
the bug bounty programs have taken off

00:27:55,770 --> 00:28:04,990
and I'll explain that here in a few

00:27:59,440 --> 00:28:08,440
slides so there's also the silent bug

00:28:04,990 --> 00:28:12,520
fix this is also something that you need

00:28:08,440 --> 00:28:16,960
to keep in mind yes the CVE database is

00:28:12,520 --> 00:28:19,960
great but many companies do not publish

00:28:16,960 --> 00:28:24,880
CVEs for internally found security

00:28:19,960 --> 00:28:27,100
issues I don't know of a company that

00:28:24,880 --> 00:28:29,860
that publishes CVEs for every security

00:28:27,100 --> 00:28:34,270
issue they find in their products it

00:28:29,860 --> 00:28:37,179
just doesn't happen and this is one of

00:28:34,270 --> 00:28:41,130
the reasons why I think the bug bounty

00:28:37,179 --> 00:28:47,169
programs aren't actually showing that

00:28:41,130 --> 00:28:50,650
the true CVE rate so if in general if

00:28:47,169 --> 00:28:53,140
you file a bug bounty it's treated as

00:28:50,650 --> 00:28:57,850
internal so you don't generally get a

00:28:53,140 --> 00:29:00,760
CVE for that if you're paid it's a lot

00:28:57,850 --> 00:29:03,280
of things that in the past would be CVEs

00:29:00,760 --> 00:29:05,679
are now being silently fixed by the

00:29:03,280 --> 00:29:09,159
companies who are paying bug bounties

00:29:05,679 --> 00:29:10,570
for people to find their bugs because

00:29:09,159 --> 00:29:12,549
they're treating it just like they would

00:29:10,570 --> 00:29:17,049
their their own you know internal

00:29:12,549 --> 00:29:20,799
validation and testing bug bounty

00:29:17,049 --> 00:29:24,429
programs don't publish CVEs for founder

00:29:20,799 --> 00:29:29,740
issues also many bugs that may have a

00:29:24,429 --> 00:29:33,780
security impact they will get fixed as

00:29:29,740 --> 00:29:36,840
just traditional functional bugs and

00:29:33,780 --> 00:29:39,130
even though it had security implications

00:29:36,840 --> 00:29:40,809
m'as fixed by somebody who wasn't even

00:29:39,130 --> 00:29:43,330
thinking that'll be a security issue or

00:29:40,809 --> 00:29:45,280
that a.m. might be a security issue but

00:29:43,330 --> 00:29:47,500
it's also a functional issue so they fix

00:29:45,280 --> 00:29:50,770
it and that does not end up being a CVE

00:29:47,500 --> 00:29:53,020
either so you have buffer overflows for

00:29:50,770 --> 00:29:54,460
example that get fixed just because you

00:29:53,020 --> 00:29:59,260
know their code crashes in

00:29:54,460 --> 00:30:01,780
okay well we need to fix that so you

00:29:59,260 --> 00:30:03,790
know there are many security bugs that

00:30:01,780 --> 00:30:10,270
happen that don't end up in the CVE

00:30:03,790 --> 00:30:13,450
database great info how does this help

00:30:10,270 --> 00:30:20,830
me by the way I just always loved this

00:30:13,450 --> 00:30:23,380
picture of this kid very so you need to

00:30:20,830 --> 00:30:25,420
think about the survivability of your

00:30:23,380 --> 00:30:29,260
product okay

00:30:25,420 --> 00:30:32,380
so you must include an update mechanism

00:30:29,260 --> 00:30:36,280
of some type in your product if you

00:30:32,380 --> 00:30:39,000
aren't including a update mechanism for

00:30:36,280 --> 00:30:43,390
example if you're shipping a a

00:30:39,000 --> 00:30:46,990
internet-connected webcam that that has

00:30:43,390 --> 00:30:49,780
a backdoor in it that the murari worm is

00:30:46,990 --> 00:30:53,620
exploiting and you don't have an update

00:30:49,780 --> 00:30:56,620
mechanism in that which they don't you

00:30:53,620 --> 00:31:01,570
can't actually have your customers go

00:30:56,620 --> 00:31:05,890
fix this issue you need to be able to

00:31:01,570 --> 00:31:07,750
update it you know if you don't have an

00:31:05,890 --> 00:31:09,610
update mechanism in there you're

00:31:07,750 --> 00:31:13,570
essentially telling your customers I'm

00:31:09,610 --> 00:31:15,490
sorry we don't care about you and that's

00:31:13,570 --> 00:31:20,110
really not the message you want to give

00:31:15,490 --> 00:31:22,450
people who just gave you money something

00:31:20,110 --> 00:31:27,670
else is that you want to make it easy

00:31:22,450 --> 00:31:32,590
for your customers to update you know I

00:31:27,670 --> 00:31:35,920
look back as you can tell I use Apple

00:31:32,590 --> 00:31:39,610
products for various reasons which we

00:31:35,920 --> 00:31:41,890
can go into privately if you want but I

00:31:39,610 --> 00:31:45,010
remember back in the days when when I've

00:31:41,890 --> 00:31:47,110
had my first iPhone and in the way I had

00:31:45,010 --> 00:31:50,860
to update it was I had to go connect it

00:31:47,110 --> 00:31:53,800
to my Mac and then get the image from

00:31:50,860 --> 00:31:56,320
Apple and use iTunes and and do all of

00:31:53,800 --> 00:32:02,500
this rigmarole it's like well screw that

00:31:56,320 --> 00:32:04,420
I'm not doing all that you definitely

00:32:02,500 --> 00:32:05,770
don't want your customer to think I

00:32:04,420 --> 00:32:08,170
don't want to go through all of this

00:32:05,770 --> 00:32:12,790
process to go just update something

00:32:08,170 --> 00:32:16,510
may not affect me at all I've actually

00:32:12,790 --> 00:32:21,750
recently actually just a couple weeks

00:32:16,510 --> 00:32:21,750
ago I get the the new Linksys of Vallabh

00:32:22,800 --> 00:32:28,330
and by the way if you want to spend the

00:32:25,240 --> 00:32:31,200
money it's a great setup I don't own

00:32:28,330 --> 00:32:34,390
stock but you know it's a good product

00:32:31,200 --> 00:32:36,100
and it actually has an update mechanism

00:32:34,390 --> 00:32:39,400
in it that that is almost completely

00:32:36,100 --> 00:32:41,350
transparent to the user so it will about

00:32:39,400 --> 00:32:43,330
2:00 a.m. every night it will go check

00:32:41,350 --> 00:32:45,070
to see if there's updates on the server

00:32:43,330 --> 00:32:47,830
if there is it will automatically

00:32:45,070 --> 00:32:50,770
download it install it and do a quick

00:32:47,830 --> 00:32:54,340
reboot the system is off for about 2

00:32:50,770 --> 00:32:56,080
minutes and it all happens transparently

00:32:54,340 --> 00:32:57,610
behind the scenes you can go configure

00:32:56,080 --> 00:33:00,490
it if you want to happen at other times

00:32:57,610 --> 00:33:05,080
of the day for your for example a night

00:33:00,490 --> 00:33:06,910
owl who's up all the time but it's

00:33:05,080 --> 00:33:10,360
completely transparent to the end-user

00:33:06,910 --> 00:33:12,130
and it works great and that's the kind

00:33:10,360 --> 00:33:15,940
of goal you should have for your product

00:33:12,130 --> 00:33:17,770
is to have a update mechanism that your

00:33:15,940 --> 00:33:22,570
customer almost doesn't even know is

00:33:17,770 --> 00:33:24,970
there there's many different mechanisms

00:33:22,570 --> 00:33:27,100
you can actually use if you're looking

00:33:24,970 --> 00:33:29,920
for an update mechanism so if you're

00:33:27,100 --> 00:33:34,870
using an Android based stack you can use

00:33:29,920 --> 00:33:39,630
Android OTA swept D is is a very good

00:33:34,870 --> 00:33:39,630
tool that is used by clear Linux

00:33:39,810 --> 00:33:47,230
software updates meander OS tree even I

00:33:45,040 --> 00:33:52,000
mean you know you can even use published

00:33:47,230 --> 00:33:56,280
repos if you're using app tour or YUM

00:33:52,000 --> 00:33:56,280
I mean just you have to have something

00:33:58,430 --> 00:34:05,450
now how do you track these so this is a

00:34:02,150 --> 00:34:07,970
great website I really love this site

00:34:05,450 --> 00:34:14,330
CVE details you could actually get to it

00:34:07,970 --> 00:34:18,140
at CBE details calm it it is a different

00:34:14,330 --> 00:34:20,929
view of the CVE database than what is

00:34:18,140 --> 00:34:25,730
presented by mitre these folks they

00:34:20,929 --> 00:34:27,350
actually take the data and actually you

00:34:25,730 --> 00:34:28,790
can generate graphs and actually I have

00:34:27,350 --> 00:34:31,550
some graphs in here from this site a

00:34:28,790 --> 00:34:33,980
little bit later or you know you

00:34:31,550 --> 00:34:35,630
generate graphs and do all sorts of

00:34:33,980 --> 00:34:37,790
things but one of the nicest things you

00:34:35,630 --> 00:34:39,440
could do is like for example if you care

00:34:37,790 --> 00:34:41,330
about open SSL you have openness to

00:34:39,440 --> 00:34:44,380
selling your product you can actually go

00:34:41,330 --> 00:34:48,230
in and use their little tool to create a

00:34:44,380 --> 00:34:51,710
RSS feed or or embedded vulnerability

00:34:48,230 --> 00:34:53,780
list widget or a JSON API call Earl so

00:34:51,710 --> 00:34:55,790
that you can actually keep up to date on

00:34:53,780 --> 00:34:58,190
new vulnerabilities that come out with

00:34:55,790 --> 00:35:01,430
that software stack and all you have to

00:34:58,190 --> 00:35:05,660
do is follow the the RSS feed or the

00:35:01,430 --> 00:35:07,970
JSON API curl and this will actually

00:35:05,660 --> 00:35:09,290
allow you to follow all new software

00:35:07,970 --> 00:35:14,750
vulnerabilities in the package you

00:35:09,290 --> 00:35:16,610
should care about it's great tool you

00:35:14,750 --> 00:35:18,290
should go check it out it's fun even you

00:35:16,610 --> 00:35:22,840
just go poke around and see different

00:35:18,290 --> 00:35:27,170
trends that are going on in the data I

00:35:22,840 --> 00:35:29,990
also want to talk about and I guess you

00:35:27,170 --> 00:35:30,410
know embarrass a little bit I key Aikido

00:35:29,990 --> 00:35:33,050
dirty

00:35:30,410 --> 00:35:34,880
he works for Intel in the open-source

00:35:33,050 --> 00:35:37,400
technology center he works on clear

00:35:34,880 --> 00:35:39,620
Linux he has this tool that he created

00:35:37,400 --> 00:35:42,890
which is absolutely an utterly awesome

00:35:39,620 --> 00:35:47,840
called CVE check tool it's used by the

00:35:42,890 --> 00:35:51,680
the clear linux folks it will scan your

00:35:47,840 --> 00:35:53,120
source code for a known CVEs i can't sit

00:35:51,680 --> 00:35:57,500
here and say it is a hundred percent

00:35:53,120 --> 00:36:00,080
perfect we actually found a case last

00:35:57,500 --> 00:36:03,470
week week before where where it actually

00:36:00,080 --> 00:36:05,600
missed a couple CVEs for some reason and

00:36:03,470 --> 00:36:10,250
we're looking into that but it's a great

00:36:05,600 --> 00:36:11,840
tool we forced Ikey to rewrite it from

00:36:10,250 --> 00:36:14,480
purlins to see

00:36:11,840 --> 00:36:16,790
Thank You Ikey for doing that there's

00:36:14,480 --> 00:36:18,140
also various commercial solutions you

00:36:16,790 --> 00:36:23,600
know I'm not here endorsing any

00:36:18,140 --> 00:36:27,860
commercial solutions but you know Black

00:36:23,600 --> 00:36:30,590
Duck Hub is good from what I've heard so

00:36:27,860 --> 00:36:32,300
is a white hat software's open-source

00:36:30,590 --> 00:36:38,480
checker there's a number of good

00:36:32,300 --> 00:36:40,130
solutions I do want to talk about

00:36:38,480 --> 00:36:42,440
attackable surface area here for a

00:36:40,130 --> 00:36:44,000
minute so and actually it was funny

00:36:42,440 --> 00:36:46,970
because Linda's brought it up this

00:36:44,000 --> 00:36:50,390
morning with Dirk and you know the

00:36:46,970 --> 00:36:52,760
attack surface as it says here in

00:36:50,390 --> 00:36:55,280
Wikipedia of software environment is the

00:36:52,760 --> 00:36:58,460
sum of the different points or attack

00:36:55,280 --> 00:37:00,920
vectors where an unauthorized user the

00:36:58,460 --> 00:37:03,530
attacker can try to enter data or

00:37:00,920 --> 00:37:06,770
extract data from an environment and you

00:37:03,530 --> 00:37:08,720
can imagine in the Linux kernel there's

00:37:06,770 --> 00:37:11,420
a bit of a taxable surface area given

00:37:08,720 --> 00:37:12,890
that it's 14 million lines of code at

00:37:11,420 --> 00:37:15,050
the same time you also have to remember

00:37:12,890 --> 00:37:19,610
you know the vast majority of that code

00:37:15,050 --> 00:37:20,660
is actually drivers so you know when you

00:37:19,610 --> 00:37:22,850
build your product if you're only

00:37:20,660 --> 00:37:25,430
limiting the drivers to to what you need

00:37:22,850 --> 00:37:31,070
you're limiting your attackable surface

00:37:25,430 --> 00:37:33,580
area but one of the things that you want

00:37:31,070 --> 00:37:36,080
to make sure you do is you want to

00:37:33,580 --> 00:37:38,030
ensure that you're only including

00:37:36,080 --> 00:37:40,670
software in your product that you

00:37:38,030 --> 00:37:44,840
actually need for your product and I had

00:37:40,670 --> 00:37:49,610
an interesting interesting experience so

00:37:44,840 --> 00:37:51,800
a long time ago well in probably 2006 I

00:37:49,610 --> 00:37:55,580
was working on a product or that we were

00:37:51,800 --> 00:37:57,590
actually building out of Gen 2 and I

00:37:55,580 --> 00:37:59,330
like Gen 2 for a lot of reasons and it

00:37:57,590 --> 00:38:01,640
was great for that particular project or

00:37:59,330 --> 00:38:04,270
at least seemingly great because we were

00:38:01,640 --> 00:38:06,650
able to build from from bottom up

00:38:04,270 --> 00:38:11,690
including just the things that we wanted

00:38:06,650 --> 00:38:13,760
in there and that sounds great but all

00:38:11,690 --> 00:38:15,260
of a sudden one day I was going through

00:38:13,760 --> 00:38:18,230
the package list of everything that was

00:38:15,260 --> 00:38:22,220
installed in our product how many people

00:38:18,230 --> 00:38:24,800
here know what frak is pH our ACK hey

00:38:22,220 --> 00:38:27,290
there's at least one couple out there

00:38:24,800 --> 00:38:28,460
frak it's a hacker magazine I was

00:38:27,290 --> 00:38:31,670
looking through the package list I'm

00:38:28,460 --> 00:38:34,250
like why is there a package in here

00:38:31,670 --> 00:38:38,290
called frack okay

00:38:34,250 --> 00:38:42,020
and I was working on a a medical device

00:38:38,290 --> 00:38:44,720
and some package we were including had a

00:38:42,020 --> 00:38:46,490
dependency on this other package that

00:38:44,720 --> 00:38:49,640
included all the copies of frack

00:38:46,490 --> 00:38:53,080
magazine up until that point in time not

00:38:49,640 --> 00:38:53,080
something you want on a medical device

00:38:53,380 --> 00:38:59,150
so you know not that frack magazine

00:38:56,900 --> 00:39:00,800
would have been exploitable but you want

00:38:59,150 --> 00:39:04,310
to make sure that you're only including

00:39:00,800 --> 00:39:06,170
things on in your product that are are

00:39:04,310 --> 00:39:08,930
actually part of your product because

00:39:06,170 --> 00:39:10,880
you know why there's nothing more

00:39:08,930 --> 00:39:13,190
satisfying than be able to say oh

00:39:10,880 --> 00:39:15,860
there's a CV II guess what I don't have

00:39:13,190 --> 00:39:19,340
to do anything for this because it's not

00:39:15,860 --> 00:39:24,050
my product there's a big bummer of a day

00:39:19,340 --> 00:39:27,230
conversely if you go oh well we included

00:39:24,050 --> 00:39:29,390
Telenet in here for something and it's

00:39:27,230 --> 00:39:32,030
exploitable even though we aren't using

00:39:29,390 --> 00:39:34,670
it in our product we still have to go

00:39:32,030 --> 00:39:40,820
fix it that's not something you want to

00:39:34,670 --> 00:39:42,770
go spend money on and resources a few

00:39:40,820 --> 00:39:46,910
other important concepts here at least

00:39:42,770 --> 00:39:49,640
privilege you know if you have a

00:39:46,910 --> 00:39:56,320
developer that comes to you and says but

00:39:49,640 --> 00:39:56,320
I need to run his route Danger Danger

00:39:56,710 --> 00:40:01,810
nobody well almost nobody should ever

00:40:00,020 --> 00:40:04,100
need to actually run his route and

00:40:01,810 --> 00:40:06,200
usually by the way this this phrase has

00:40:04,100 --> 00:40:13,340
followed with the phrase of but I'm

00:40:06,200 --> 00:40:15,350
special I it's OK for me you know

00:40:13,340 --> 00:40:19,430
software needs to run with minimal

00:40:15,350 --> 00:40:21,290
privileges you know you do not want to

00:40:19,430 --> 00:40:23,300
have you know some random piece of

00:40:21,290 --> 00:40:26,120
software that is running as root and has

00:40:23,300 --> 00:40:28,850
complete physical complete access to

00:40:26,120 --> 00:40:30,860
your physical memory layout that's not

00:40:28,850 --> 00:40:34,280
something that that you want to have in

00:40:30,860 --> 00:40:36,470
your product also you want to keep

00:40:34,280 --> 00:40:37,619
defense-in-depth in mind you need to

00:40:36,470 --> 00:40:43,589
have multiple protections

00:40:37,619 --> 00:40:45,539
place code reviews you need to make sure

00:40:43,589 --> 00:40:49,710
that that your developers are doing code

00:40:45,539 --> 00:40:51,420
reviews is there anybody else in here

00:40:49,710 --> 00:40:56,609
other than me who has written perfect

00:40:51,420 --> 00:40:59,630
code people are shaking their heads like

00:40:56,609 --> 00:41:01,980
no I haven't written perfect code I mean

00:40:59,630 --> 00:41:04,410
nobody writes perfect code in by the way

00:41:01,980 --> 00:41:09,509
when when I I say this joke I mean my

00:41:04,410 --> 00:41:13,710
wife says you're not perfect so you know

00:41:09,509 --> 00:41:15,779
no one writes perfect code you know look

00:41:13,710 --> 00:41:17,700
for code reviews that are like submitted

00:41:15,779 --> 00:41:20,339
and then accepted like within minutes of

00:41:17,700 --> 00:41:24,690
each other there's usually something

00:41:20,339 --> 00:41:26,430
wrong there and you should use static

00:41:24,690 --> 00:41:29,400
code analysis tools whenever you can

00:41:26,430 --> 00:41:31,769
it's a it's a nice free easy automated

00:41:29,400 --> 00:41:35,309
way to get it extra set of you know

00:41:31,769 --> 00:41:37,259
quote-unquote eyes on your code and then

00:41:35,309 --> 00:41:39,150
you know I've actually seen people that

00:41:37,259 --> 00:41:44,819
actually ship products without actually

00:41:39,150 --> 00:41:46,170
testing them actually do some tests some

00:41:44,819 --> 00:41:48,839
validation make sure that you're

00:41:46,170 --> 00:41:55,049
actually your product actually does what

00:41:48,839 --> 00:41:57,569
it says it does and you know just some

00:41:55,049 --> 00:41:59,730
things here real quick you know I've

00:41:57,569 --> 00:42:01,589
talked to you about you know what

00:41:59,730 --> 00:42:05,069
constitutes a security bug versus other

00:42:01,589 --> 00:42:08,819
bugs and questions that are danger signs

00:42:05,069 --> 00:42:10,920
for those unfamiliar with security how

00:42:08,819 --> 00:42:12,920
quickly vulnerabilities can start to be

00:42:10,920 --> 00:42:14,789
exploited once they're out in the wild

00:42:12,920 --> 00:42:17,190
what kinds of people find

00:42:14,789 --> 00:42:19,230
vulnerabilities and home bug bunny bug

00:42:17,190 --> 00:42:23,390
bounty programs kind of play into this

00:42:19,230 --> 00:42:26,249
whole cycle of feeding on itself and

00:42:23,390 --> 00:42:27,539
what C V's are and how to track them and

00:42:26,249 --> 00:42:30,839
the various tools and techniques that

00:42:27,539 --> 00:42:35,130
may help you survive you know I

00:42:30,839 --> 00:42:38,279
appreciate you on this rainy Portland

00:42:35,130 --> 00:42:41,579
morning being here to to listen to me

00:42:38,279 --> 00:42:47,150
drone on about security you know this

00:42:41,579 --> 00:42:47,150
does anybody have any questions yes

00:42:49,550 --> 00:42:52,659
[Music]

00:42:54,619 --> 00:42:59,260
so the question is is should an outside

00:42:56,720 --> 00:43:05,029
company or a small company seek outside

00:42:59,260 --> 00:43:08,660
expertise to help them scale you know it

00:43:05,029 --> 00:43:10,460
depends on who you have internally but

00:43:08,660 --> 00:43:12,440
if you do not feel that you have the

00:43:10,460 --> 00:43:15,049
expertise internally absolutely you

00:43:12,440 --> 00:43:17,960
should because you need to make sure

00:43:15,049 --> 00:43:19,700
you're protecting yourself when you're

00:43:17,960 --> 00:43:22,609
shipping your product by covering all of

00:43:19,700 --> 00:43:23,809
these various issues and if you don't

00:43:22,609 --> 00:43:25,400
know how to do it internally and

00:43:23,809 --> 00:43:31,460
definitely go outside and get the

00:43:25,400 --> 00:43:32,510
expertise there's some interesting ways

00:43:31,460 --> 00:43:34,430
to be able to go find the right people

00:43:32,510 --> 00:43:40,510
to go help you but yes you should

00:43:34,430 --> 00:43:40,510
definitely look at that yes Alexios

00:43:43,660 --> 00:43:48,970
how well does a CVE cover the open

00:43:46,780 --> 00:43:52,420
source landscape actually it probably

00:43:48,970 --> 00:43:55,059
covers it better than then the more

00:43:52,420 --> 00:43:57,849
proprietary software because generally

00:43:55,059 --> 00:44:01,950
the open source projects are fairly

00:43:57,849 --> 00:44:04,089
amenable to saying here yeah by the way

00:44:01,950 --> 00:44:07,299
there's this bug that we're fixing up

00:44:04,089 --> 00:44:11,190
here and all the development happens out

00:44:07,299 --> 00:44:14,770
in the open for commercial products a

00:44:11,190 --> 00:44:16,660
lot of what happens happens behind the

00:44:14,770 --> 00:44:20,470
scenes and they don't want to talk about

00:44:16,660 --> 00:44:24,250
it so so actually if you go do the

00:44:20,470 --> 00:44:25,450
breakdown it's a significant percentage

00:44:24,250 --> 00:44:27,190
larger than you would think just

00:44:25,450 --> 00:44:32,319
naturally from from security

00:44:27,190 --> 00:44:37,740
vulnerability density of open source in

00:44:32,319 --> 00:44:37,740
the CVE database yes

00:44:56,740 --> 00:45:03,560
so the question is is does somebody is

00:45:01,460 --> 00:45:06,110
somebody doing work to to incorporate

00:45:03,560 --> 00:45:09,550
kind of CV cheat checking into Yocto

00:45:06,110 --> 00:45:11,810
build and I don't know of anybody

00:45:09,550 --> 00:45:13,400
specifically doing that but it would be

00:45:11,810 --> 00:45:16,270
a great idea of somebody in the Yocto

00:45:13,400 --> 00:45:21,970
community incorporated a CBE checker

00:45:16,270 --> 00:45:21,970
into the build process yes

00:45:31,650 --> 00:45:38,550
so the CVE checker tool that I talked

00:45:34,440 --> 00:45:40,950
about Ikeys is already incorporated into

00:45:38,550 --> 00:45:42,330
Yocto you just have to turn it on I I

00:45:40,950 --> 00:45:43,740
knew they were doing it but I didn't

00:45:42,330 --> 00:45:47,210
want to bring it up in case it was like

00:45:43,740 --> 00:45:47,210
well it's not there yet

00:45:51,230 --> 00:45:57,860
cool any other questions yes

00:46:10,099 --> 00:46:18,109
so the question is is are there plans to

00:46:13,440 --> 00:46:21,869
put CVE messages in kernel commits and

00:46:18,109 --> 00:46:23,579
to be honest I don't know it the kernel

00:46:21,869 --> 00:46:27,930
has a very interesting dance it has to

00:46:23,579 --> 00:46:29,880
do it has a dance of hey we're we're

00:46:27,930 --> 00:46:32,849
open and everything we does happens in

00:46:29,880 --> 00:46:35,940
public but at the same time we don't

00:46:32,849 --> 00:46:36,960
want to you know essentially start

00:46:35,940 --> 00:46:40,140
talking about a security vulnerability

00:46:36,960 --> 00:46:43,440
in the kernel which which ends up being

00:46:40,140 --> 00:46:48,509
a starting pistol for everybody who has

00:46:43,440 --> 00:46:51,779
a product based on the kernel so you

00:46:48,509 --> 00:46:53,549
know I don't have a problem giving the

00:46:51,779 --> 00:46:56,099
kernel a little bit of leeway as long as

00:46:53,549 --> 00:46:57,480
they're fixing issues whether or not

00:46:56,099 --> 00:47:00,140
they say it's a CVE

00:46:57,480 --> 00:47:04,559
when they actually do the commit message

00:47:00,140 --> 00:47:06,450
I'm not stringent on so I don't know of

00:47:04,559 --> 00:47:12,890
any current effort to go make that

00:47:06,450 --> 00:47:12,890
happen yes

00:47:29,290 --> 00:47:35,610
so so the question is is you know what's

00:47:33,220 --> 00:47:39,240
my view on the the trade-off between

00:47:35,610 --> 00:47:41,110
fixing security issues and in

00:47:39,240 --> 00:47:43,800
potentially increasing platform

00:47:41,110 --> 00:47:52,480
instability based upon a a known Delta

00:47:43,800 --> 00:47:56,830
and we struggle with that okay my

00:47:52,480 --> 00:48:03,280
personal view on this is that you should

00:47:56,830 --> 00:48:05,740
stick with the latest upstream release

00:48:03,280 --> 00:48:08,710
for your major kernel version that

00:48:05,740 --> 00:48:10,210
you're using so you know if it's 4.4 you

00:48:08,710 --> 00:48:13,840
know make sure that you're on 4.4

00:48:10,210 --> 00:48:16,720
whatever X is the latest and the reason

00:48:13,840 --> 00:48:19,110
why I say that is because generally the

00:48:16,720 --> 00:48:24,340
changes that happen in the long-term

00:48:19,110 --> 00:48:26,620
stable releases they generally don't

00:48:24,340 --> 00:48:29,860
cause regression issues when it comes to

00:48:26,620 --> 00:48:31,570
performance in platform stability now I

00:48:29,860 --> 00:48:33,990
won't sit here and say that never

00:48:31,570 --> 00:48:33,990
happens

00:48:34,110 --> 00:48:44,020
but if you don't do that you are letting

00:48:41,680 --> 00:48:46,630
your platform be vulnerable to known

00:48:44,020 --> 00:48:48,460
issues now can you back port those

00:48:46,630 --> 00:48:49,900
issues to your particular kernel just so

00:48:48,460 --> 00:48:51,760
you have just that chunk of code in

00:48:49,900 --> 00:48:54,610
there yeah you can do that but that

00:48:51,760 --> 00:48:56,280
starts becoming quite expensive to do as

00:48:54,610 --> 00:48:58,540
time goes on

00:48:56,280 --> 00:49:00,370
additionally there may be security

00:48:58,540 --> 00:49:02,800
issues in your kernel that aren't in

00:49:00,370 --> 00:49:06,190
future kernels so you might be

00:49:02,800 --> 00:49:09,340
exploitable for something that isn't

00:49:06,190 --> 00:49:13,330
even published as a CVE later on so it's

00:49:09,340 --> 00:49:15,520
it's hard to bite the bullet and just go

00:49:13,330 --> 00:49:18,870
ahead and keep with the latest version

00:49:15,520 --> 00:49:23,440
of the kernel but in the end I think

00:49:18,870 --> 00:49:25,030
it's most beneficial in generally the

00:49:23,440 --> 00:49:27,670
performance issues that people fear

00:49:25,030 --> 00:49:30,610
don't come up at least that's my

00:49:27,670 --> 00:49:32,500
experience we have interesting

00:49:30,610 --> 00:49:37,710
discussions with internal partners at

00:49:32,500 --> 00:49:37,710
Intel on this very topic so

00:49:38,370 --> 00:49:47,940
I have one minute left any other

00:49:40,680 --> 00:49:54,460
questions people are like no I want

00:49:47,940 --> 00:49:58,760
coffee cool thank you

00:49:54,460 --> 00:49:58,760

YouTube URL: https://www.youtube.com/watch?v=WOBU4ibPxVA


