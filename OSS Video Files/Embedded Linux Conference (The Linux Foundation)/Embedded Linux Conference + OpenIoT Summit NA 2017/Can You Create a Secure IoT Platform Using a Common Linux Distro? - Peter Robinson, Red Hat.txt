Title: Can You Create a Secure IoT Platform Using a Common Linux Distro? - Peter Robinson, Red Hat
Publication date: 2017-02-27
Playlist: Embedded Linux Conference + OpenIoT Summit NA 2017
Description: 
	Can You Create a Secure IoT Platform Using a Common Linux Distro? - Peter Robinson, Red Hat

Can you take a common Linux distro like Fedora and enhance it to be a secure, stable base for IoT? What is secure in IoT? How do you secure a device, or in the case of a gateway, the entire network today and into the future? In this session I'll outline my vision and direction for a secure, modular Linux IoT platform based on Open Source tech, what we're doing right now in conjuction with the Linaro LITE initiative as well as the roadmap vision towards tomorrow's IoT world using multiple platforms/architectures with technogolies such as OSTree and Atomic to ensure to ensure smooth upgrades/rollbacks, security technologies such as toolchain enhancements, KSPP, seccomp and selinux to try to ensure secure robust platforms, device and policy management across thousands of devices as well as a modular container platform to enable a stable edge to data centre or the cloud end to end solutions.

About Peter Robinson
Peter is IoT platform lead at Red Hat working with Fedora and RHEL on IoT platforms and direction. Previously Fedora release engineering and Red Hat EMEA Professional Services and prior to Red Hat he was at a large global telco in their EU enterprise hosting division. He's previously spoken at numerous Fedora events, DevConf, LinuxCon Berlin and other local Linux Meetups.
Captions: 
	00:00:00,030 --> 00:00:03,179
okay I think we should be going good to

00:00:02,879 --> 00:00:06,810
go

00:00:03,179 --> 00:00:12,150
hi I'm Peter Robinson I work at Red Hat

00:00:06,810 --> 00:00:15,360
on i-80 primarily in Fedora but in other

00:00:12,150 --> 00:00:19,350
parts of the organization as well and

00:00:15,360 --> 00:00:23,880
I'll be today discussing architecting a

00:00:19,350 --> 00:00:30,720
secure IOT platform using a standard

00:00:23,880 --> 00:00:34,290
Linux distro such as Fedora so IOT will

00:00:30,720 --> 00:00:35,940
certainly change the world but whether

00:00:34,290 --> 00:00:43,170
that's a good thing or not remains to be

00:00:35,940 --> 00:00:47,789
seen and a distro like Fedora is a great

00:00:43,170 --> 00:00:51,989
place to define that because you know we

00:00:47,789 --> 00:00:53,989
already have you know things like

00:00:51,989 --> 00:00:57,030
maintenance and updates security

00:00:53,989 --> 00:01:00,390
lifecycle management already embedded as

00:00:57,030 --> 00:01:03,180
part of the destroy philosophy and and

00:01:00,390 --> 00:01:09,330
the things we do deal with on a day to

00:01:03,180 --> 00:01:12,360
day basis which is at this point not the

00:01:09,330 --> 00:01:15,210
only but one of the major issues that a

00:01:12,360 --> 00:01:18,420
lot of linux-based IOT platforms don't

00:01:15,210 --> 00:01:21,390
have they don't have you know any

00:01:18,420 --> 00:01:23,759
concept of updates and security and

00:01:21,390 --> 00:01:27,060
maintenance and lifecycle management

00:01:23,759 --> 00:01:29,880
it's very much a ship ship the product

00:01:27,060 --> 00:01:31,470
and let it go and and that's it we're

00:01:29,880 --> 00:01:37,350
done on to the next generation of

00:01:31,470 --> 00:01:40,590
platform so this is vaguely what an IOT

00:01:37,350 --> 00:01:42,630
stack looks like it's based on cortex

00:01:40,590 --> 00:01:45,360
and one day I'll actually get around and

00:01:42,630 --> 00:01:48,720
do a nice shiny graphics version of that

00:01:45,360 --> 00:01:52,920
or bribe someone to do so but but that's

00:01:48,720 --> 00:01:58,350
a rough overview of a typical you know

00:01:52,920 --> 00:02:06,090
linux gateway or endpoint style IOT

00:01:58,350 --> 00:02:13,140
stack so so what would we base a secure

00:02:06,090 --> 00:02:17,330
robust IOT platform on Fedora has a

00:02:13,140 --> 00:02:23,310
platform called atomic or os3 it does

00:02:17,330 --> 00:02:26,490
atomic based upgrades roll back and gets

00:02:23,310 --> 00:02:30,900
away from the sort of yum upgrade may

00:02:26,490 --> 00:02:34,290
fail halfway through sort of no way to

00:02:30,900 --> 00:02:37,850
roll back if something goes wrong we'd

00:02:34,290 --> 00:02:42,140
definitely have a focus on security

00:02:37,850 --> 00:02:45,030
focus on three key architectures

00:02:42,140 --> 00:02:48,000
although you know being open source and

00:02:45,030 --> 00:02:50,850
a standard Linux distribution as there's

00:02:48,000 --> 00:02:55,709
no reason that if you know some other

00:02:50,850 --> 00:02:58,140
great architecture for IOT comes along

00:02:55,709 --> 00:03:02,150
that we can't expand out to that fedora

00:02:58,140 --> 00:03:04,230
itself currently supports around seven

00:03:02,150 --> 00:03:07,650
architectures from your small sort of

00:03:04,230 --> 00:03:12,720
arm v7i 686 right through those sort of

00:03:07,650 --> 00:03:17,549
Zedd series mainframes and from there

00:03:12,720 --> 00:03:20,400
would build a base platform as a decent

00:03:17,549 --> 00:03:24,620
foundation to build IOT verticals on so

00:03:20,400 --> 00:03:29,070
a good foundation secure stable minimal

00:03:24,620 --> 00:03:32,070
building block with an initial focus on

00:03:29,070 --> 00:03:35,940
a gateway platform but with intentions

00:03:32,070 --> 00:03:40,019
on moving to you know other edge gate

00:03:35,940 --> 00:03:43,530
edge based systems that the community

00:03:40,019 --> 00:03:47,340
might be interested in and while we

00:03:43,530 --> 00:03:51,420
could so fedora runs on millions of

00:03:47,340 --> 00:03:53,280
different types of devices and you know

00:03:51,420 --> 00:03:56,579
hundreds and hundreds of armed devices

00:03:53,280 --> 00:04:04,079
for example will initially have a focus

00:03:56,579 --> 00:04:05,850
on a handful of devices so you know some

00:04:04,079 --> 00:04:07,410
of the proposed devices would be things

00:04:05,850 --> 00:04:10,500
like you know the Intel dual the

00:04:07,410 --> 00:04:13,709
Raspberry Pi simply because it has quite

00:04:10,500 --> 00:04:17,400
a good I Oh t following similarly with

00:04:13,709 --> 00:04:20,100
the beaglebones but you know larger

00:04:17,400 --> 00:04:23,789
devices like you know I'm 64 SBS a

00:04:20,100 --> 00:04:26,880
compliant platforms and I mean

00:04:23,789 --> 00:04:27,510
ultimately we're not limited I'm just

00:04:26,880 --> 00:04:30,630
trying to focus

00:04:27,510 --> 00:04:34,710
on a handful of devices so that we can

00:04:30,630 --> 00:04:42,630
get some good CI and QA happening

00:04:34,710 --> 00:04:45,420
against and you use them as a focus so

00:04:42,630 --> 00:04:49,710
what would a fedora IOT gateway look

00:04:45,420 --> 00:04:52,380
like but part of my role doing IOT at

00:04:49,710 --> 00:04:56,040
Red Hat is where a member of Lennar

00:04:52,380 --> 00:04:59,280
Olight so as part of that partnership

00:04:56,040 --> 00:05:04,650
where we're building gateway a gateway

00:04:59,280 --> 00:05:06,690
reference device and you know that

00:05:04,650 --> 00:05:09,150
that's part of my job and my role so

00:05:06,690 --> 00:05:13,380
obviously I'll have a personal focus on

00:05:09,150 --> 00:05:16,440
that using Fedora atomic as a minimal

00:05:13,380 --> 00:05:18,300
base image and then using containers as

00:05:16,440 --> 00:05:22,110
a means of adding functionality on top

00:05:18,300 --> 00:05:26,270
of that so things like you know MQTT you

00:05:22,110 --> 00:05:26,270
know various different IOT stacks

00:05:26,720 --> 00:05:32,010
bridging four different networks both

00:05:28,770 --> 00:05:35,960
wired and wireless and other you know

00:05:32,010 --> 00:05:39,720
sort of IOT gateway functionality

00:05:35,960 --> 00:05:44,280
security is obviously going to be a key

00:05:39,720 --> 00:05:47,100
focus everything from UEFI or trusted

00:05:44,280 --> 00:05:51,560
execution environment secure boot

00:05:47,100 --> 00:05:54,480
functionality so OS verification

00:05:51,560 --> 00:05:57,000
dependency minimization I mean who needs

00:05:54,480 --> 00:06:02,090
to support three or four or even more

00:05:57,000 --> 00:06:07,170
TLS stacks within a single minimal OS

00:06:02,090 --> 00:06:11,960
using SELinux set comp and other related

00:06:07,170 --> 00:06:14,160
technologies to reduce attack vectors

00:06:11,960 --> 00:06:17,510
enhanced tool chain security

00:06:14,160 --> 00:06:21,620
functionality some of the recent GCC

00:06:17,510 --> 00:06:26,100
releases have had quite a focus on

00:06:21,620 --> 00:06:31,050
dealing with various you know security

00:06:26,100 --> 00:06:35,070
technologies system D to sandbox

00:06:31,050 --> 00:06:40,720
services and containers there was a

00:06:35,070 --> 00:06:44,290
recent CVA which affected

00:06:40,720 --> 00:06:46,680
I have packet functionality and with

00:06:44,290 --> 00:06:49,690
system D functionality you can actually

00:06:46,680 --> 00:06:52,570
which you relies on sat-comm you can

00:06:49,690 --> 00:06:56,350
actually remove things like you know AF

00:06:52,570 --> 00:07:00,070
packet from services so that you can

00:06:56,350 --> 00:07:02,020
effectively mitigate a bunch of CVS it's

00:07:00,070 --> 00:07:05,260
sort of you know the CV is obviously

00:07:02,020 --> 00:07:08,650
still there but it's effectively

00:07:05,260 --> 00:07:11,410
non-functional and non compromisable and

00:07:08,650 --> 00:07:13,330
and then looking at you know various

00:07:11,410 --> 00:07:16,690
security projects like the kernel self

00:07:13,330 --> 00:07:19,000
protection with GCC plugins and things

00:07:16,690 --> 00:07:24,160
like that to help mitigate entire

00:07:19,000 --> 00:07:26,830
classes of sort of vulnerabilities and

00:07:24,160 --> 00:07:28,930
things like that so that even though you

00:07:26,830 --> 00:07:35,440
might have a device that is vulnerable

00:07:28,930 --> 00:07:41,020
to certain CVS it can't actually be

00:07:35,440 --> 00:07:43,180
compromised as part of that minimize the

00:07:41,020 --> 00:07:47,770
services shipped obviously some of the

00:07:43,180 --> 00:07:50,440
recent compromised devices that have

00:07:47,770 --> 00:07:53,500
been used in in in various DDoS attacks

00:07:50,440 --> 00:07:56,880
have things like telnet actually shipped

00:07:53,500 --> 00:08:00,520
like who you users turn out these days

00:07:56,880 --> 00:08:03,310
you know use the gateway device as a

00:08:00,520 --> 00:08:07,150
means of controlling access to networks

00:08:03,310 --> 00:08:10,000
both inbound and outbound using you know

00:08:07,150 --> 00:08:13,479
network isolation device isolation

00:08:10,000 --> 00:08:17,050
policy routing so that you know if there

00:08:13,479 --> 00:08:19,720
is a compromise available against

00:08:17,050 --> 00:08:24,190
devices that are sitting behind that you

00:08:19,720 --> 00:08:29,530
you can have policies that basically no

00:08:24,190 --> 00:08:34,240
root or you know the the attack vectors

00:08:29,530 --> 00:08:36,669
or the control hosts or control networks

00:08:34,240 --> 00:08:38,979
and various of other bits and pieces and

00:08:36,669 --> 00:08:41,260
obviously you know have things like you

00:08:38,979 --> 00:08:44,500
know centralized update platforms to

00:08:41,260 --> 00:08:50,920
push out you know atomic updates for

00:08:44,500 --> 00:08:54,540
those for the atomic platforms from a

00:08:50,920 --> 00:08:56,580
network point of view for gate weights

00:08:54,540 --> 00:08:59,540
we're going to be focusing on open

00:08:56,580 --> 00:09:03,690
standards obviously Red Hat and fedora

00:08:59,540 --> 00:09:06,690
in particular actively pushes for open

00:09:03,690 --> 00:09:08,790
standards and open platforms so we're

00:09:06,690 --> 00:09:12,740
going to look at things like a day 215

00:09:08,790 --> 00:09:17,790
for Bluetooth le or Bluetooth smart

00:09:12,740 --> 00:09:19,709
6lowpan sitting on top of that and also

00:09:17,790 --> 00:09:24,029
from an industrial point of view things

00:09:19,709 --> 00:09:28,140
like support for can rs-485 some of the

00:09:24,029 --> 00:09:32,399
older protocols to sort of interface

00:09:28,140 --> 00:09:35,790
with existing platforms this is a sort

00:09:32,399 --> 00:09:40,020
of diagram of a typical IOT wireless and

00:09:35,790 --> 00:09:45,570
network topology with you know 6lowpan

00:09:40,020 --> 00:09:47,910
mesh and what-have-you so some of the

00:09:45,570 --> 00:09:50,120
sample containers that would be looking

00:09:47,910 --> 00:09:54,300
at running on the Gateway platform

00:09:50,120 --> 00:09:58,230
obviously this is quite you and and in

00:09:54,300 --> 00:10:01,230
Fedora 26 we'll get the initial preview

00:09:58,230 --> 00:10:02,610
of the base platform and and some sample

00:10:01,230 --> 00:10:07,620
containers that we'll be able to run on

00:10:02,610 --> 00:10:09,990
top of that so things like you know the

00:10:07,620 --> 00:10:13,250
various different wireless technologies

00:10:09,990 --> 00:10:17,040
open thread and related sort of

00:10:13,250 --> 00:10:21,120
platforms MQTT and other messaging

00:10:17,040 --> 00:10:24,390
stacks might be a MTP or whatever you

00:10:21,120 --> 00:10:26,310
know fairly the idea of being able to

00:10:24,390 --> 00:10:30,660
run containers on top is it's fairly

00:10:26,310 --> 00:10:33,860
flexible so you can add you know mqt T

00:10:30,660 --> 00:10:38,670
caching modules other middleware maybe

00:10:33,860 --> 00:10:41,160
update platforms for smaller saves

00:10:38,670 --> 00:10:45,450
effort or various other devices that you

00:10:41,160 --> 00:10:47,760
may be hanging off the network and then

00:10:45,450 --> 00:10:50,040
possible IOT specific stacks that sit on

00:10:47,760 --> 00:10:53,610
top of that you know edge data

00:10:50,040 --> 00:10:56,930
processing and reduction policy and

00:10:53,610 --> 00:11:00,810
control and other business rules engines

00:10:56,930 --> 00:11:04,529
things like the Apache Curran hanno and

00:11:00,810 --> 00:11:08,100
all the other replayed related Apache

00:11:04,529 --> 00:11:11,100
eclipses and various other IOT stacks

00:11:08,100 --> 00:11:14,069
no dread and then you know things like

00:11:11,100 --> 00:11:17,699
solid RI activity homer system pretty

00:11:14,069 --> 00:11:22,050
much anything that you would you know

00:11:17,699 --> 00:11:24,120
potentially want to run on these so how

00:11:22,050 --> 00:11:25,860
do we evolve just from the gateway I

00:11:24,120 --> 00:11:28,649
mean how do we scale to hundreds of

00:11:25,860 --> 00:11:31,680
thousands of Gateway how do we you know

00:11:28,649 --> 00:11:34,829
deal with centralized update processes

00:11:31,680 --> 00:11:39,149
you know stage rolled out stage like

00:11:34,829 --> 00:11:41,430
monitoring of beta or test sort of

00:11:39,149 --> 00:11:43,620
things similar to how you you know

00:11:41,430 --> 00:11:45,660
Google rolls out updates for an hour

00:11:43,620 --> 00:11:49,529
Android phone or Facebook rolls out

00:11:45,660 --> 00:11:52,519
updates to their you know their apps you

00:11:49,529 --> 00:11:57,269
know they they start with a constrained

00:11:52,519 --> 00:11:59,759
group of people you know and then test

00:11:57,269 --> 00:12:01,829
and monitor and and see how that rolls

00:11:59,759 --> 00:12:04,050
are I mean you don't want to roll out an

00:12:01,829 --> 00:12:07,050
update for a hundred thousand devices

00:12:04,050 --> 00:12:10,290
and move from a hundred thousand devices

00:12:07,050 --> 00:12:14,279
to a hundred thousand bricks as a few

00:12:10,290 --> 00:12:16,709
IOT companies have experienced you know

00:12:14,279 --> 00:12:19,350
centralized policy frameworks you know

00:12:16,709 --> 00:12:23,189
if you've got a device on your network

00:12:19,350 --> 00:12:27,360
that is compromised that can be part of

00:12:23,189 --> 00:12:32,279
a DDoS you know how do you push out you

00:12:27,360 --> 00:12:34,740
know firewall policies to now route you

00:12:32,279 --> 00:12:36,740
know traffic to the control networks and

00:12:34,740 --> 00:12:39,389
things like that so these you know

00:12:36,740 --> 00:12:43,019
potentially compromised devices that are

00:12:39,389 --> 00:12:44,459
sitting you're on your I 18 network can

00:12:43,019 --> 00:12:48,930
continue to function as they're supposed

00:12:44,459 --> 00:12:50,550
to but you know not participate in you

00:12:48,930 --> 00:12:57,300
know massive D doses and things like

00:12:50,550 --> 00:12:59,279
that you know how do you have you know

00:12:57,300 --> 00:13:02,209
message buses and deal with devices that

00:12:59,279 --> 00:13:04,290
may come and go from your network

00:13:02,209 --> 00:13:07,439
periodically because they run on

00:13:04,290 --> 00:13:10,350
batteries in in the middle of you know

00:13:07,439 --> 00:13:12,269
farmers fields somewhere you know had

00:13:10,350 --> 00:13:16,319
how do you cash updates how do you risk

00:13:12,269 --> 00:13:18,439
cash like message bus input and output

00:13:16,319 --> 00:13:20,819
from those devices as they come and go

00:13:18,439 --> 00:13:22,380
how do you deal with things like edge

00:13:20,819 --> 00:13:24,480
analytics and data

00:13:22,380 --> 00:13:26,310
action so that you're not pushing you

00:13:24,480 --> 00:13:28,770
know tens of thousands or petabytes

00:13:26,310 --> 00:13:31,170
worth of data into the cloud and getting

00:13:28,770 --> 00:13:34,770
a big bill each month for that these are

00:13:31,170 --> 00:13:38,250
all sort of things that are on my radar

00:13:34,770 --> 00:13:39,840
to look at and as we're obviously not

00:13:38,250 --> 00:13:44,010
going to be able to solve them straight

00:13:39,840 --> 00:13:46,740
away and you know these are things that

00:13:44,010 --> 00:13:48,900
I'll be looking at and you know other

00:13:46,740 --> 00:13:51,840
people will be looking at to evolve the

00:13:48,900 --> 00:13:55,790
gateway and the IOT stack as a whole as

00:13:51,840 --> 00:14:01,200
we move forward so is it just a gateway

00:13:55,790 --> 00:14:04,320
no it's a starting point to to drive

00:14:01,200 --> 00:14:06,930
focus you know I like a lot of tech

00:14:04,320 --> 00:14:09,180
people have it the ability to be a

00:14:06,930 --> 00:14:11,520
little bit shiny squirrel and run here

00:14:09,180 --> 00:14:14,280
and there between you know all sorts of

00:14:11,520 --> 00:14:17,220
shiny projects so we need to start

00:14:14,280 --> 00:14:19,410
somewhere and we need to focus I have

00:14:17,220 --> 00:14:22,170
lots of ideas I mean I come from a

00:14:19,410 --> 00:14:24,630
farming background and there's a lot of

00:14:22,170 --> 00:14:27,960
IOT starting to happen in that space and

00:14:24,630 --> 00:14:29,610
my brothers who are the farmers have

00:14:27,960 --> 00:14:34,770
lots of ideas they would like me to do

00:14:29,610 --> 00:14:38,520
but but I mean ultimately a gateway is a

00:14:34,770 --> 00:14:42,930
good place to start it's a good base to

00:14:38,520 --> 00:14:44,400
grow on and you know we can focus on the

00:14:42,930 --> 00:14:47,820
Gateway as a combination of both

00:14:44,400 --> 00:14:50,010
industrial IOT and home I mean Red Hat

00:14:47,820 --> 00:14:52,800
obviously has more of a focus on

00:14:50,010 --> 00:14:54,630
enterprise related things from a

00:14:52,800 --> 00:14:57,270
community and Fedora point-of-view it

00:14:54,630 --> 00:14:59,130
tends to be more focused on smaller

00:14:57,270 --> 00:15:01,200
things and a lot of people I speak to

00:14:59,130 --> 00:15:03,150
have an interest in like home gateways

00:15:01,200 --> 00:15:05,070
and the ability to be able to have

00:15:03,150 --> 00:15:09,150
control over the smart devices in their

00:15:05,070 --> 00:15:12,180
home I think you know both of these well

00:15:09,150 --> 00:15:14,040
to a degree compete with each other or

00:15:12,180 --> 00:15:15,570
also very complementary I mean there's

00:15:14,040 --> 00:15:21,450
really not that much difference between

00:15:15,570 --> 00:15:25,230
the two and and so in Fedora 26 I plan

00:15:21,450 --> 00:15:27,140
on doing a proof of concept and we'll

00:15:25,230 --> 00:15:29,580
start with that and we'll evolve it

00:15:27,140 --> 00:15:31,560
nothing will be set in stone and if we

00:15:29,580 --> 00:15:33,060
throw it away and have to start again in

00:15:31,560 --> 00:15:34,320
a few months time because we don't get

00:15:33,060 --> 00:15:37,810
it right

00:15:34,320 --> 00:15:44,230
need to be open to that and feedback

00:15:37,810 --> 00:15:47,890
from you know people companies ideas so

00:15:44,230 --> 00:15:51,100
other options I mean I've had people ask

00:15:47,890 --> 00:15:55,330
me about imaging stacks image processing

00:15:51,100 --> 00:15:57,149
like identification so anything from a

00:15:55,330 --> 00:15:59,170
security device looking for movement

00:15:57,149 --> 00:16:01,779
against doors or what-have-you

00:15:59,170 --> 00:16:07,860
through the number plate recognition and

00:16:01,779 --> 00:16:10,660
that style of almost stuff you know

00:16:07,860 --> 00:16:11,770
artificial intelligence Amazon Alexis

00:16:10,660 --> 00:16:15,580
style

00:16:11,770 --> 00:16:19,690
hello fedora I mean Alexis an

00:16:15,580 --> 00:16:21,820
interesting IOT home device but me

00:16:19,690 --> 00:16:23,529
personally you couldn't give me one well

00:16:21,820 --> 00:16:25,630
at least not one that's plugged in and

00:16:23,529 --> 00:16:29,920
turned on because I don't want it

00:16:25,630 --> 00:16:31,540
listening to me you know ultimately it

00:16:29,920 --> 00:16:34,529
would generally just hear a lot of

00:16:31,540 --> 00:16:38,680
expletives from me as I work from home

00:16:34,529 --> 00:16:40,959
talking or muttering to myself you know

00:16:38,680 --> 00:16:42,339
there's lots of ideas like every time I

00:16:40,959 --> 00:16:45,459
speak to someone about this they have

00:16:42,339 --> 00:16:48,660
different ideas and so there's just too

00:16:45,459 --> 00:16:52,000
many to put on a slide deck to mention

00:16:48,660 --> 00:16:54,580
so an overall summit summary you know

00:16:52,000 --> 00:16:58,060
atomic OS tree is the right way to go it

00:16:54,580 --> 00:17:01,630
gives us stable updates rollbacks almost

00:16:58,060 --> 00:17:03,040
unbreakable devices you know you put

00:17:01,630 --> 00:17:05,679
health checks in place so when a new

00:17:03,040 --> 00:17:09,130
update applies you set a watchdog you

00:17:05,679 --> 00:17:11,470
reboot the device if it doesn't boot or

00:17:09,130 --> 00:17:13,750
it doesn't come back or it comes up and

00:17:11,470 --> 00:17:15,670
there's no networking or it comes up and

00:17:13,750 --> 00:17:18,670
it can't speak to the sensor networks or

00:17:15,670 --> 00:17:21,579
the sensors on the devices you know you

00:17:18,670 --> 00:17:23,230
fail the watchdog or you fail it you

00:17:21,579 --> 00:17:26,230
wait for the watchdog to hit and you

00:17:23,230 --> 00:17:28,690
roll back so it's definitely the right

00:17:26,230 --> 00:17:30,670
way to go so that we don't get you know

00:17:28,690 --> 00:17:33,670
brick devices you know this is a stable

00:17:30,670 --> 00:17:37,480
foundation we want to build on multiple

00:17:33,670 --> 00:17:40,450
architecture support from the outset had

00:17:37,480 --> 00:17:44,620
some initial reference devices as a

00:17:40,450 --> 00:17:47,830
focus with focus on a base IOT platform

00:17:44,620 --> 00:17:49,750
and Gateway functionality to give

00:17:47,830 --> 00:17:55,529
like a solid foundation to build on top

00:17:49,750 --> 00:17:55,529
of any questions

00:18:21,600 --> 00:18:28,240
so that so the question is about initial

00:18:24,640 --> 00:18:32,620
device and how we plan on adding support

00:18:28,240 --> 00:18:37,510
for devices moving forward so at the

00:18:32,620 --> 00:18:40,060
moment it at the moment a little bit

00:18:37,510 --> 00:18:43,870
away for Dora ads so in the case of x86

00:18:40,060 --> 00:18:47,440
I mean it we already support thousands

00:18:43,870 --> 00:18:51,640
of devices in the case of like arm SBS a

00:18:47,440 --> 00:18:53,560
reference platforms any new SBS a device

00:18:51,640 --> 00:18:56,110
that comes along is automatically

00:18:53,560 --> 00:18:58,330
supported if it's SBS a compliant

00:18:56,110 --> 00:19:02,080
because that's the way that works and

00:18:58,330 --> 00:19:07,540
it's a CPI and UEFI and things like that

00:19:02,080 --> 00:19:10,420
in terms of other like so we support

00:19:07,540 --> 00:19:13,180
actually around 300 devices in fedora at

00:19:10,420 --> 00:19:16,080
the moment and all of those devices will

00:19:13,180 --> 00:19:21,430
work already out of the box with this

00:19:16,080 --> 00:19:23,230
the intention is not to have like we're

00:19:21,430 --> 00:19:25,930
not excluding those devices and they

00:19:23,230 --> 00:19:30,160
will work it's more just to focus on

00:19:25,930 --> 00:19:34,000
specific devices and we haven't looked

00:19:30,160 --> 00:19:35,950
at a BSP style you know add an extra

00:19:34,000 --> 00:19:39,660
kernel vendor kernel and anything else

00:19:35,950 --> 00:19:43,050
at the moment there is certainly

00:19:39,660 --> 00:19:46,870
intention to look at that functionality

00:19:43,050 --> 00:19:50,560
but in the short to medium term I mean I

00:19:46,870 --> 00:19:54,010
found I've been working on arm in fedora

00:19:50,560 --> 00:19:56,470
now for six or seven years and we've

00:19:54,010 --> 00:19:58,990
been a little bit slow on supporting

00:19:56,470 --> 00:20:01,510
some of I to shiny devices but at the

00:19:58,990 --> 00:20:04,360
same time by not dealing with vendor

00:20:01,510 --> 00:20:05,950
kernels and basically having a kernel

00:20:04,360 --> 00:20:08,500
for every single device we wish to

00:20:05,950 --> 00:20:11,440
support and going the upstream kernel

00:20:08,500 --> 00:20:15,250
route we've had us with you know there's

00:20:11,440 --> 00:20:18,190
been issues where vendor kernels have

00:20:15,250 --> 00:20:21,370
had you know backdoors and major CVS and

00:20:18,190 --> 00:20:23,860
are based on tend to be 314 ancient

00:20:21,370 --> 00:20:26,920
kernels that aren't maintained and we

00:20:23,860 --> 00:20:30,280
don't end up in a situation where we

00:20:26,920 --> 00:20:32,830
have to deal with that hell and we don't

00:20:30,280 --> 00:20:35,500
need to try and audit and

00:20:32,830 --> 00:20:39,120
you are a vendor colonel there is

00:20:35,500 --> 00:20:42,250
certainly the intention on enabling

00:20:39,120 --> 00:20:45,399
people to do that if that's the way they

00:20:42,250 --> 00:20:48,429
wish to go but how with how we nail that

00:20:45,399 --> 00:20:52,510
down hasn't really been resolved yet and

00:20:48,429 --> 00:20:53,890
our our focus tends to be getting in the

00:20:52,510 --> 00:20:58,929
upstream colonel and then it will

00:20:53,890 --> 00:21:09,690
support it out in the box by default any

00:20:58,929 --> 00:21:16,779
yeah sure the questions are about

00:21:09,690 --> 00:21:18,309
requiring reboots for upgrades I mean

00:21:16,779 --> 00:21:20,230
there's pros and cons to it right if

00:21:18,309 --> 00:21:22,059
there's a new kernel with a CV you you

00:21:20,230 --> 00:21:24,610
don't have any choice but up great or

00:21:22,059 --> 00:21:27,130
reboot I'm sure you can live patch the

00:21:24,610 --> 00:21:29,799
kernel and things like that but the

00:21:27,130 --> 00:21:33,130
support for that tends to be for

00:21:29,799 --> 00:21:36,760
specific parts of the kernel and in a

00:21:33,130 --> 00:21:38,049
lot of cases sure up times a great thing

00:21:36,760 --> 00:21:41,169
but if you don't have a resilient

00:21:38,049 --> 00:21:49,510
platform that can cope with upgrades

00:21:41,169 --> 00:21:52,059
it's probably not a 80 so I'm you know

00:21:49,510 --> 00:21:53,980
ultimately if you're upgrading like a

00:21:52,059 --> 00:21:57,309
single service or a container or

00:21:53,980 --> 00:21:58,870
something like that that sits on top you

00:21:57,309 --> 00:22:00,429
know you restart the container or you

00:21:58,870 --> 00:22:02,260
deploy a new version of the container

00:22:00,429 --> 00:22:04,269
and tear the other one down it depends

00:22:02,260 --> 00:22:05,620
on which bit of the OS or which bit of

00:22:04,269 --> 00:22:07,649
the stack you're dealing with at the

00:22:05,620 --> 00:22:07,649
time

00:22:19,200 --> 00:22:33,610
sorry can you repeat that is there a

00:22:28,390 --> 00:22:35,230
great reduction in size so that that's

00:22:33,610 --> 00:22:38,140
something that we're focusing on at the

00:22:35,230 --> 00:22:41,140
moment to try and reduce actively reduce

00:22:38,140 --> 00:22:43,030
the dependency size so that we don't

00:22:41,140 --> 00:22:46,900
need to deal with things like five

00:22:43,030 --> 00:22:49,060
different TLS stats it also tends to be

00:22:46,900 --> 00:22:52,600
a bit of a whack-a-mole constant

00:22:49,060 --> 00:22:54,040
evolutionary process you know you'll

00:22:52,600 --> 00:22:55,570
think you've got things in hand and

00:22:54,040 --> 00:22:57,730
suddenly there'll be a slight change and

00:22:55,570 --> 00:23:03,280
it pulls in an entire you know new path

00:22:57,730 --> 00:23:05,830
of software so it tends fedora is in the

00:23:03,280 --> 00:23:07,870
process of putting a new CI platform in

00:23:05,830 --> 00:23:10,270
place and we're hoping to be able to

00:23:07,870 --> 00:23:13,360
have some of the dependency checks and

00:23:10,270 --> 00:23:14,770
dependency watch as part of that CI so

00:23:13,360 --> 00:23:17,320
if someone commits something to a

00:23:14,770 --> 00:23:19,030
package that suddenly bloats out you

00:23:17,320 --> 00:23:21,820
know that depends it seized by a couple

00:23:19,030 --> 00:23:24,550
of dozen libraries you know we'll be

00:23:21,820 --> 00:23:27,850
able to at least order that and control

00:23:24,550 --> 00:23:30,280
it from that point but it certainly

00:23:27,850 --> 00:23:33,160
tends to be a bit of sort of chasing

00:23:30,280 --> 00:23:41,340
your tail whack-a-mole style gain that's

00:23:33,160 --> 00:23:41,340
sort of ongoing any more questions

00:23:43,850 --> 00:23:54,020
cool well I'm going to be around for the

00:23:47,059 --> 00:23:58,039
rest of the conference and there's going

00:23:54,020 --> 00:24:01,130
to be some possible drinks tonight so if

00:23:58,039 --> 00:24:02,450
you're around catch me on Twitter or

00:24:01,130 --> 00:24:07,160
what have you and I can give you the

00:24:02,450 --> 00:24:08,600
details of that thankfully am i speaking

00:24:07,160 --> 00:24:10,130
spot was quite early in the conference

00:24:08,600 --> 00:24:15,260
so I can sort of relax a little bit now

00:24:10,130 --> 00:24:17,840
and I'm I'll be around to speak to

00:24:15,260 --> 00:24:19,990
anyone that's interested in listening to

00:24:17,840 --> 00:24:23,700
me rabbit on about IOT or anything else

00:24:19,990 --> 00:24:28,990
regarding that stuff thank you

00:24:23,700 --> 00:24:28,990

YouTube URL: https://www.youtube.com/watch?v=--bZyHlVi34


