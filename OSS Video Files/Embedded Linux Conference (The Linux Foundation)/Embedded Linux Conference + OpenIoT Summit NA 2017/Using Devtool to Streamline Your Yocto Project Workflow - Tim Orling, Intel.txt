Title: Using Devtool to Streamline Your Yocto Project Workflow - Tim Orling, Intel
Publication date: 2017-02-27
Playlist: Embedded Linux Conference + OpenIoT Summit NA 2017
Description: 
	Using Devtool to Streamline Your Yocto Project Workflow - Tim Orling, Intel Open Source Technology Center

Devtool is a set of tools which has simplified the process of creating, maintaining and deploying packages built from source by the OpenEmbedded build system. Operating in either the standard build environment or the Extensible SDK it can either modify an existing package or create a new one based on project source code. Devtool can deploy the resulting package to a target, add the recipe to a bitbake layer and build an image that includes the package. This presentation will summarize how devtool has improved since its initial release in Yocto 1.8 then describe its current capabilities in detail and finish by sharing plans for enhancing existing features and adding new ones.

About Tim Orling
Tim Orling is a software engineer at the Intel Open Source Technology Center. Tim joined Intel to work full-time on the Yocto Project in early 2016 after many years as a volunteer developer for OpenEmbedded and the Yocto Project. He has been an open source software and embedded hardware enthusiast for many years. He taught in a university setting for more than 5 years and has given many technical talks at conferences.
Captions: 
	00:00:00,060 --> 00:00:04,140
so I'm going to talk about using dev

00:00:02,100 --> 00:00:07,200
tools to streamline your yatra project

00:00:04,140 --> 00:00:08,820
workflow my name is Tim orling I work

00:00:07,200 --> 00:00:11,790
for open source technology center at

00:00:08,820 --> 00:00:14,700
Intel I've been involved with Yahoo

00:00:11,790 --> 00:00:16,800
product and open embedded since open

00:00:14,700 --> 00:00:17,110
embedded classic days so quite a quite a

00:00:16,800 --> 00:00:18,690
while now

00:00:17,110 --> 00:00:20,369
[Music]

00:00:18,690 --> 00:00:24,240
so first I want to ask how many people

00:00:20,369 --> 00:00:26,810
have used Yocto project ok everybody

00:00:24,240 --> 00:00:29,580
how many people have used dev tools

00:00:26,810 --> 00:00:33,180
that's exactly what I expected ok so

00:00:29,580 --> 00:00:35,040
that's the reason for today's talk

00:00:33,180 --> 00:00:37,160
so what I'm gonna talk about today is

00:00:35,040 --> 00:00:41,280
why dev tool why do we create it

00:00:37,160 --> 00:00:43,379
overview of how it works some the types

00:00:41,280 --> 00:00:45,660
of packages are currently or projects

00:00:43,379 --> 00:00:49,289
that are currently supported the most

00:00:45,660 --> 00:00:51,840
common dev tool commands including demos

00:00:49,289 --> 00:00:55,430
of those and just a little bit about how

00:00:51,840 --> 00:00:59,910
how dev tool is evolving and improving

00:00:55,430 --> 00:01:06,180
so why dev tool what was the workflow

00:00:59,910 --> 00:01:07,799
before fire up your trusty editor figure

00:01:06,180 --> 00:01:11,880
it let's figure out where the recipes

00:01:07,799 --> 00:01:14,400
should go or where is it and then copy

00:01:11,880 --> 00:01:18,960
and paste errors over and over and over

00:01:14,400 --> 00:01:20,759
again odd instan item and then you have

00:01:18,960 --> 00:01:24,920
to figure out what is the minimum recipe

00:01:20,759 --> 00:01:27,420
to actually build what's valid

00:01:24,920 --> 00:01:30,090
what was that variable name again I

00:01:27,420 --> 00:01:31,409
really can't remember and I didn't

00:01:30,090 --> 00:01:35,070
remember to look at up in the reference

00:01:31,409 --> 00:01:37,920
manual how do I do it md5sum

00:01:35,070 --> 00:01:42,090
in my editor because I need license file

00:01:37,920 --> 00:01:46,920
checksums and force URI checksum what's

00:01:42,090 --> 00:01:48,600
that yes that is an answer yet the

00:01:46,920 --> 00:01:50,970
comment was run at once and that that's

00:01:48,600 --> 00:01:54,090
very true the fact you're going to see

00:01:50,970 --> 00:01:55,680
that later um so then you have to ask

00:01:54,090 --> 00:01:58,439
yourself what should I hear it or

00:01:55,680 --> 00:01:59,610
require or depends or hour depends and

00:01:58,439 --> 00:02:03,680
so you may not even know what those

00:01:59,610 --> 00:02:07,140
things mean and it can be confusing

00:02:03,680 --> 00:02:09,239
oops I forgot to commit that I have no

00:02:07,140 --> 00:02:10,740
get history of all the work I've just

00:02:09,239 --> 00:02:14,520
been doing and I really

00:02:10,740 --> 00:02:16,590
that oops I should put that in a new

00:02:14,520 --> 00:02:18,930
layer because I just put everything in

00:02:16,590 --> 00:02:22,770
tree and that is not the right thing to

00:02:18,930 --> 00:02:27,000
do trust me I just want to build it

00:02:22,770 --> 00:02:28,830
that's it just build it please and try

00:02:27,000 --> 00:02:29,570
just deploy it and try it out and see if

00:02:28,830 --> 00:02:32,550
it'll work

00:02:29,570 --> 00:02:33,990
this was the workflow before a little

00:02:32,550 --> 00:02:39,270
bit frustrating I'm trying to be comical

00:02:33,990 --> 00:02:40,440
here so what do we have now so the list

00:02:39,270 --> 00:02:43,590
on the left we're going to tick them off

00:02:40,440 --> 00:02:45,690
as we go so in development phase on your

00:02:43,590 --> 00:02:48,410
host you're going to be running dev tool

00:02:45,690 --> 00:02:51,920
ad for instance so this is a sub command

00:02:48,410 --> 00:02:55,200
which is going to create a workspace

00:02:51,920 --> 00:02:59,480
that is going to have a recipe inside of

00:02:55,200 --> 00:03:02,460
it and your source code inside of it

00:02:59,480 --> 00:03:04,350
so which check checked off a whole bunch

00:03:02,460 --> 00:03:06,810
of things we got rid of copy and paste

00:03:04,350 --> 00:03:10,080
errors because an automated system

00:03:06,810 --> 00:03:12,420
generated recipe for you we got rid of a

00:03:10,080 --> 00:03:15,300
bunch of these other things right we got

00:03:12,420 --> 00:03:16,950
rid of the minimum valid recipe it knows

00:03:15,300 --> 00:03:20,730
about variable names so use the right

00:03:16,950 --> 00:03:22,890
ones and didn't misspell them it did the

00:03:20,730 --> 00:03:28,080
md5 sums for you on your source your eye

00:03:22,890 --> 00:03:29,790
and your license files it did a best

00:03:28,080 --> 00:03:31,950
attempt if figuring out what to inherit

00:03:29,790 --> 00:03:35,760
what you require what to depend what's

00:03:31,950 --> 00:03:39,570
our depend it starts off with a git repo

00:03:35,760 --> 00:03:41,550
when that makes sense and it creates a

00:03:39,570 --> 00:03:45,630
layer right off the bat so the workspace

00:03:41,550 --> 00:03:47,400
is a layer so this is a sandbox for you

00:03:45,630 --> 00:03:49,830
this is for you to do your development

00:03:47,400 --> 00:03:53,430
for a short period of time before you

00:03:49,830 --> 00:03:54,840
move it to where it should really be so

00:03:53,430 --> 00:03:59,730
I'm going to dev tool build that gives

00:03:54,840 --> 00:04:02,180
me my binary so that gets rid of our I

00:03:59,730 --> 00:04:04,950
just want to build it part right

00:04:02,180 --> 00:04:06,810
then we've got dev tool deploy target

00:04:04,950 --> 00:04:08,760
this gets us to the testing phase you

00:04:06,810 --> 00:04:13,370
actually take that binary that you built

00:04:08,760 --> 00:04:17,370
and you SSH it or SFTP it over to your

00:04:13,370 --> 00:04:18,840
test hardware or your Q mu M image so

00:04:17,370 --> 00:04:21,140
that gets rid of our I just want to

00:04:18,840 --> 00:04:21,140
deploy it

00:04:21,829 --> 00:04:26,030
so we collect some issues figure out

00:04:24,379 --> 00:04:29,270
some things we go back we edit our

00:04:26,030 --> 00:04:31,460
recipe and we go through a loop here

00:04:29,270 --> 00:04:33,620
until this is you know to our

00:04:31,460 --> 00:04:36,349
satisfaction right so we're basically

00:04:33,620 --> 00:04:37,970
editing recipe maybe editing source code

00:04:36,349 --> 00:04:40,039
we're building it we're deploying to

00:04:37,970 --> 00:04:42,169
target we're checking things out maybe

00:04:40,039 --> 00:04:44,000
you're running testing and then we're

00:04:42,169 --> 00:04:46,940
going to edit the recipe and so on and

00:04:44,000 --> 00:04:49,550
loop back till we're happy so now when

00:04:46,940 --> 00:04:51,139
we finally want to end this dev tool

00:04:49,550 --> 00:04:55,250
edit recipe actually fires up your

00:04:51,139 --> 00:04:58,009
default editor for you so now the last

00:04:55,250 --> 00:05:00,349
thing we need to do is finalize it so

00:04:58,009 --> 00:05:03,110
dev tools finish will actually push it

00:05:00,349 --> 00:05:05,750
to the repo layer or the meta layer that

00:05:03,110 --> 00:05:07,370
you are attempting to target for this

00:05:05,750 --> 00:05:11,569
and this is sort of the release phase

00:05:07,370 --> 00:05:14,090
and that figures out where that recipe

00:05:11,569 --> 00:05:18,110
actually should go in that layer it's

00:05:14,090 --> 00:05:20,629
really cool so just a little bit of

00:05:18,110 --> 00:05:22,129
overview of how it works and this isn't

00:05:20,629 --> 00:05:25,039
the nuts and bolts I can get into that

00:05:22,129 --> 00:05:26,659
in detail outside of this room because

00:05:25,039 --> 00:05:29,680
it's too much detail to go into today

00:05:26,659 --> 00:05:32,210
and most people won't want to know so

00:05:29,680 --> 00:05:34,580
let's just say we do dev tool create

00:05:32,210 --> 00:05:36,590
workspace and then we're going to call

00:05:34,580 --> 00:05:39,199
that workspace workspace because it's a

00:05:36,590 --> 00:05:41,180
nice name you don't normally actually

00:05:39,199 --> 00:05:42,830
have to run this dev tool ad will run

00:05:41,180 --> 00:05:44,150
this command for you but I'm just I just

00:05:42,830 --> 00:05:46,669
want to show you what the basic

00:05:44,150 --> 00:05:49,009
workspace is so workspace is just a

00:05:46,669 --> 00:05:51,770
directory which has a readme in it and

00:05:49,009 --> 00:05:54,129
it's got to config directory with a

00:05:51,770 --> 00:05:56,629
layer comps right because it's a layer

00:05:54,129 --> 00:06:00,259
it's the first thing it does it also

00:05:56,629 --> 00:06:03,500
injects itself into your BB layers comps

00:06:00,259 --> 00:06:05,990
file and so it added itself as a layer

00:06:03,500 --> 00:06:09,979
to your build system that you've already

00:06:05,990 --> 00:06:11,629
got going on so let's just look at dev

00:06:09,979 --> 00:06:13,580
tool ad because this is probably a

00:06:11,629 --> 00:06:15,319
pretty common command you guys are going

00:06:13,580 --> 00:06:16,639
to want to be doing so let's say I'm

00:06:15,319 --> 00:06:19,669
going to do the hello

00:06:16,639 --> 00:06:21,469
g10 from Canadia right so what's

00:06:19,669 --> 00:06:24,800
different this is going to put it into

00:06:21,469 --> 00:06:27,710
the workspace a directory called appends

00:06:24,800 --> 00:06:29,479
which may or may not be used it's going

00:06:27,710 --> 00:06:33,649
to create a recipes directory where it's

00:06:29,479 --> 00:06:35,120
going to put the hello and the hello BB

00:06:33,649 --> 00:06:36,350
that it created

00:06:35,120 --> 00:06:37,670
it's also gonna have the sources

00:06:36,350 --> 00:06:39,110
directory so it's going to download the

00:06:37,670 --> 00:06:41,270
tarball it's going to fetch it for you

00:06:39,110 --> 00:06:43,340
it's going to uncompress it and

00:06:41,270 --> 00:06:45,590
everything and it's going to create a

00:06:43,340 --> 00:06:48,500
git directory for you right it made a

00:06:45,590 --> 00:06:50,300
git repo right off the bat so even

00:06:48,500 --> 00:06:50,780
though this is a tarball that has no git

00:06:50,300 --> 00:06:53,630
history

00:06:50,780 --> 00:06:57,200
it started off by creating your initial

00:06:53,630 --> 00:06:58,940
commit of git history and it's smart

00:06:57,200 --> 00:07:00,950
enough to look at the files that are

00:06:58,940 --> 00:07:02,540
there and attempt to figure out what

00:07:00,950 --> 00:07:04,700
kind of build is this what kind of

00:07:02,540 --> 00:07:07,190
project is this and so in this case it's

00:07:04,700 --> 00:07:09,890
going to look at either the config AC or

00:07:07,190 --> 00:07:12,290
the make file dot am and know that

00:07:09,890 --> 00:07:14,510
that's an inherit Auto Tools type of or

00:07:12,290 --> 00:07:18,170
an auto tool type of project and so it's

00:07:14,510 --> 00:07:20,570
going to inherit Auto tools so all of

00:07:18,170 --> 00:07:23,300
that actually goes into a separate tool

00:07:20,570 --> 00:07:25,850
it's called recipe tool and this is what

00:07:23,300 --> 00:07:28,070
actually knows how to do this stuff so

00:07:25,850 --> 00:07:29,930
there's actually a command line you can

00:07:28,070 --> 00:07:33,320
do recipe tool create which does all

00:07:29,930 --> 00:07:36,470
this same stuff but why do that when dev

00:07:33,320 --> 00:07:38,870
tool will do it for you well how does it

00:07:36,470 --> 00:07:42,050
know all this stuff it knows all of the

00:07:38,870 --> 00:07:44,270
stuff because it knows about the already

00:07:42,050 --> 00:07:47,060
parsh cached data so when you first run

00:07:44,270 --> 00:07:49,760
bitbake it says parsing that's the

00:07:47,060 --> 00:07:51,290
cached data it also knows about the

00:07:49,760 --> 00:07:52,760
built package data so you've already

00:07:51,290 --> 00:07:55,460
been building a bunch of packages it

00:07:52,760 --> 00:07:57,260
knows about that history and use that

00:07:55,460 --> 00:07:59,840
information to attempt to figure out

00:07:57,260 --> 00:08:01,490
what your depends are depends inherit

00:07:59,840 --> 00:08:03,920
and all that stuff is going to be and

00:08:01,490 --> 00:08:10,370
all these things are actually written

00:08:03,920 --> 00:08:12,200
into plugins for these tools what kind

00:08:10,370 --> 00:08:15,250
of projects are currently supported so

00:08:12,200 --> 00:08:17,540
we've got Auto Tools see make queue make

00:08:15,250 --> 00:08:19,760
plain old make file that's been there

00:08:17,540 --> 00:08:22,970
for a long time we can do out of tree

00:08:19,760 --> 00:08:26,480
kernel kernel modules sorry we can also

00:08:22,970 --> 00:08:29,570
do binary packages recent addition is

00:08:26,480 --> 00:08:32,600
node.js modules and that's actually

00:08:29,570 --> 00:08:34,850
quite powerful and we can also do Python

00:08:32,600 --> 00:08:39,680
modules if they use setup tools or disk

00:08:34,850 --> 00:08:42,050
details so what are the most common

00:08:39,680 --> 00:08:44,300
commands so I'm trying to get you to

00:08:42,050 --> 00:08:45,980
walk out of this room today and go use

00:08:44,300 --> 00:08:46,630
these commands that's what the demos are

00:08:45,980 --> 00:08:49,400
going to be

00:08:46,630 --> 00:08:53,240
so devtool ad you want to create a new

00:08:49,400 --> 00:08:56,960
recipe so you've got a local source tree

00:08:53,240 --> 00:08:59,390
you have a internal github or git

00:08:56,960 --> 00:09:00,920
repository whatever it is right you want

00:08:59,390 --> 00:09:04,010
to you want to use that to add a new

00:09:00,920 --> 00:09:06,350
recipe that will modify you've got

00:09:04,010 --> 00:09:07,850
existing stuff it's be an OE core or in

00:09:06,350 --> 00:09:10,970
some layer you're already pulling you

00:09:07,850 --> 00:09:13,400
and you need to modify the source code

00:09:10,970 --> 00:09:14,900
itself and you want to generate all

00:09:13,400 --> 00:09:18,740
those patches and you want those patches

00:09:14,900 --> 00:09:21,620
to go into your build system and dev

00:09:18,740 --> 00:09:23,810
tool upgrade this is as a layer

00:09:21,620 --> 00:09:27,680
maintainer of multiple layers actually

00:09:23,810 --> 00:09:29,840
now this is part of my workflow is how

00:09:27,680 --> 00:09:34,190
do I upgrade to a newer rest and nubuck

00:09:29,840 --> 00:09:35,660
newer version right so yeah I can do

00:09:34,190 --> 00:09:38,480
that I can download a new char ball I

00:09:35,660 --> 00:09:42,530
can you know do the md5 checksum all

00:09:38,480 --> 00:09:44,720
that stuff myself but so why right so

00:09:42,530 --> 00:09:48,800
one thing I want you to get get in your

00:09:44,720 --> 00:09:50,990
head is to go out and do dev tool help

00:09:48,800 --> 00:09:54,770
or dev tool sub commands in this case

00:09:50,990 --> 00:09:56,960
add dash dash help it's really really

00:09:54,770 --> 00:09:59,840
well self documented I cannot stress

00:09:56,960 --> 00:10:01,550
that enough if you if you can't figure

00:09:59,840 --> 00:10:03,740
out you know basically what you need to

00:10:01,550 --> 00:10:07,040
do from this then just try some stuff

00:10:03,740 --> 00:10:09,800
and see if it works but the most common

00:10:07,040 --> 00:10:11,480
thing for me is dev tool add that URI

00:10:09,800 --> 00:10:12,050
because I'm going to go off and get some

00:10:11,480 --> 00:10:19,990
tarballs

00:10:12,050 --> 00:10:19,990
upstream so let me ask you a question

00:10:20,050 --> 00:10:27,710
why are you creating recipes from

00:10:22,460 --> 00:10:31,300
scratch you have extra time to spare

00:10:27,710 --> 00:10:31,300
because I do not

00:10:31,970 --> 00:10:37,249
so let me do my first demo this depth

00:10:35,029 --> 00:10:38,989
will add we're going to do a complete

00:10:37,249 --> 00:10:45,759
workflow from start to finish so this is

00:10:38,989 --> 00:10:50,539
the longest of the demos and this is all

00:10:45,759 --> 00:10:53,749
screencast so in my directory I've got

00:10:50,539 --> 00:10:55,189
pakhi this happens to be a link and I

00:10:53,749 --> 00:10:58,339
did my Oh a in it

00:10:55,189 --> 00:11:01,779
and I'm just going to give you best

00:10:58,339 --> 00:11:04,849
practices use an S state mirror so

00:11:01,779 --> 00:11:06,409
unfortunately my ASCII cinema did not do

00:11:04,849 --> 00:11:08,599
a great job of capturing some of the

00:11:06,409 --> 00:11:11,329
wraps so some of these things are a

00:11:08,599 --> 00:11:13,129
little hard to read when I put videos up

00:11:11,329 --> 00:11:20,059
to YouTube I'll correct some of these

00:11:13,129 --> 00:11:21,829
issues and this is slower than I

00:11:20,059 --> 00:11:24,979
remember but anyway

00:11:21,829 --> 00:11:28,069
pretend I'm typing so I'm just going to

00:11:24,979 --> 00:11:32,409
do a local estate mirror so I did this

00:11:28,069 --> 00:11:35,119
just by running Python m simple HTTP

00:11:32,409 --> 00:11:38,899
HTTP server in the directory where my

00:11:35,119 --> 00:11:43,659
estate cash flows so I'll put that in a

00:11:38,899 --> 00:11:43,659
wiki that all have later

00:11:47,850 --> 00:11:51,420
because I want to use the model that

00:11:49,800 --> 00:11:53,010
you've got a team which is using an S

00:11:51,420 --> 00:11:54,930
state mirror that's shared amongst the

00:11:53,010 --> 00:11:58,500
team because I think that's the place

00:11:54,930 --> 00:12:04,110
where most people want to use it that's

00:11:58,500 --> 00:12:05,730
that's my my model so okay so now I also

00:12:04,110 --> 00:12:06,930
want to get you in the habit of adding a

00:12:05,730 --> 00:12:09,240
new layer whenever you're going to do a

00:12:06,930 --> 00:12:10,920
new application so I'm going to go

00:12:09,240 --> 00:12:12,510
through and just create a layer I'm

00:12:10,920 --> 00:12:14,490
going to go ahead and put some metadata

00:12:12,510 --> 00:12:19,260
in there because it makes it easier to

00:12:14,490 --> 00:12:21,870
use it and I need to add that layer into

00:12:19,260 --> 00:12:24,240
my BB layers so I'm going to add that

00:12:21,870 --> 00:12:26,670
layer in so here's my meta food layer

00:12:24,240 --> 00:12:28,590
and now I'm going to finally get to use

00:12:26,670 --> 00:12:35,790
the stuff you actually care about dev

00:12:28,590 --> 00:12:38,070
tool create workspace with a very

00:12:35,790 --> 00:12:41,220
imaginative name so what's in there it's

00:12:38,070 --> 00:12:46,050
just got a cache coughs and a workspace

00:12:41,220 --> 00:12:48,270
directory so what's in that local comp

00:12:46,050 --> 00:12:50,280
there's my estate mirror stuff you can

00:12:48,270 --> 00:12:54,420
see that it added the meta foo layer

00:12:50,280 --> 00:12:58,620
when I did the BD layers and the build

00:12:54,420 --> 00:12:59,940
demo workspace got added in so if I just

00:12:58,620 --> 00:13:02,310
look at that you see what I talked about

00:12:59,940 --> 00:13:04,130
earlier that there's a comp layer cons

00:13:02,310 --> 00:13:06,480
and to read me in there and

00:13:04,130 --> 00:13:09,000
unfortunately it really really helps for

00:13:06,480 --> 00:13:11,670
the step right after I do the ad when I

00:13:09,000 --> 00:13:13,950
build to target something that I've

00:13:11,670 --> 00:13:16,670
actually got something to target and so

00:13:13,950 --> 00:13:19,680
I'm going to just use the default cube

00:13:16,670 --> 00:13:22,140
x86 machine and rather than build

00:13:19,680 --> 00:13:24,000
minimal which is really hard to work

00:13:22,140 --> 00:13:26,250
with because it's Internet RAM FS and

00:13:24,000 --> 00:13:27,810
it's hard to add stuff to it I'm going

00:13:26,250 --> 00:13:29,460
to start with and it doesn't have much

00:13:27,810 --> 00:13:34,770
in it I'm going to do core image full

00:13:29,460 --> 00:13:39,780
command line and now through the magic

00:13:34,770 --> 00:13:43,390
of television we're going to do a full

00:13:39,780 --> 00:13:44,649
build in just a few seconds here

00:13:43,390 --> 00:13:46,269
so notice it's telling me there's

00:13:44,649 --> 00:13:47,950
nothing to add because I did devtool

00:13:46,269 --> 00:13:49,690
build

00:13:47,950 --> 00:13:51,600
that's because devtool knows about its

00:13:49,690 --> 00:13:56,800
workspace there were no recipes there

00:13:51,600 --> 00:13:59,500
okay so our build is done so that was

00:13:56,800 --> 00:14:04,470
about 40 minutes on a server class

00:13:59,500 --> 00:14:04,470
machine it'd be four hours on a laptop

00:14:05,160 --> 00:14:11,410
so I built my image now I want to

00:14:10,120 --> 00:14:13,570
finally add something really interesting

00:14:11,410 --> 00:14:19,300
so I'm going to add the Nano editor

00:14:13,570 --> 00:14:20,980
because what the heck it works so I did

00:14:19,300 --> 00:14:24,130
cherry-pick the things I'm demoing today

00:14:20,980 --> 00:14:26,910
so I have to admit that but we're just

00:14:24,130 --> 00:14:33,100
going to go get a tarball from upstream

00:14:26,910 --> 00:14:37,959
and it's going to download that stuff

00:14:33,100 --> 00:14:40,870
created a recipe so in my workspace what

00:14:37,959 --> 00:14:43,959
did we add in the recipes directory

00:14:40,870 --> 00:14:47,130
we've got a nano folder with nano Bibi

00:14:43,959 --> 00:14:47,130
recipe in it right

00:14:54,610 --> 00:14:59,350
so mentioned that it starts off with a

00:14:57,579 --> 00:15:02,470
git repo right so it's going to do the

00:14:59,350 --> 00:15:09,009
initial commit for you with a dummy

00:15:02,470 --> 00:15:12,069
username so it will let you edit the

00:15:09,009 --> 00:15:13,360
recipe with your default editor and what

00:15:12,069 --> 00:15:16,509
does it got in there it's got things

00:15:13,360 --> 00:15:18,399
like the license and the license files

00:15:16,509 --> 00:15:21,549
checksum because it figured out by

00:15:18,399 --> 00:15:23,290
guessing what the license file was it's

00:15:21,549 --> 00:15:25,239
telling us unknown because there's some

00:15:23,290 --> 00:15:30,790
documentation in there that doesn't have

00:15:25,239 --> 00:15:34,739
an obvious license and here you see the

00:15:30,790 --> 00:15:37,600
beginnings of ASCII cinema not liking

00:15:34,739 --> 00:15:40,029
rap and so anyway so I just got rid of

00:15:37,600 --> 00:15:45,579
the unknown because we don't really need

00:15:40,029 --> 00:15:48,790
that and you can see that it knows that

00:15:45,579 --> 00:15:50,980
it depends on G Lib and curses and so on

00:15:48,790 --> 00:15:53,410
you can see that it inherited get text

00:15:50,980 --> 00:15:55,449
package config and auto tools right so

00:15:53,410 --> 00:16:02,949
all that is all totally automated I did

00:15:55,449 --> 00:16:05,279
nothing but fig dev tool ad okay let's

00:16:02,949 --> 00:16:05,279
build it

00:16:06,639 --> 00:16:12,849
again through the magic of television

00:16:08,859 --> 00:16:12,849
we're going to build very very quickly

00:16:14,229 --> 00:16:19,459
but this really didn't take that long I

00:16:16,519 --> 00:16:22,759
just sped it up in order for us to make

00:16:19,459 --> 00:16:25,279
the most of our time together today so

00:16:22,759 --> 00:16:27,709
it's built so it did not did not blow up

00:16:25,279 --> 00:16:30,559
on me right so it's a good sign so it

00:16:27,709 --> 00:16:33,039
was valid and in order for us to have

00:16:30,559 --> 00:16:36,859
something to look at I'm doing run qmu

00:16:33,039 --> 00:16:39,619
slurp public view NC so in case I wanted

00:16:36,859 --> 00:16:41,619
to look at it I could do so slurps and

00:16:39,619 --> 00:16:46,339
selects me not have to do sudo to create

00:16:41,619 --> 00:16:48,379
the network interfaces so go ahead and

00:16:46,339 --> 00:16:51,319
run QM you that's going on in the

00:16:48,379 --> 00:16:58,729
background and I'm now going to deploy

00:16:51,319 --> 00:17:01,219
to target right so so right here I did

00:16:58,729 --> 00:17:03,979
come across a workflow issue when I was

00:17:01,219 --> 00:17:07,519
doing these demos and that it wanted to

00:17:03,979 --> 00:17:09,199
default to port 22 and that wasn't going

00:17:07,519 --> 00:17:11,389
to work for me to show you anything all

00:17:09,199 --> 00:17:13,309
in one console window today I would have

00:17:11,389 --> 00:17:15,529
had to have another window open and so

00:17:13,309 --> 00:17:18,350
on so I actually submitted a patch

00:17:15,529 --> 00:17:22,879
upstream do you add this option to use

00:17:18,350 --> 00:17:26,209
the host vine mounted port or so sorry

00:17:22,879 --> 00:17:29,480
by it bound port so the host tweetsie to

00:17:26,209 --> 00:17:31,639
port T 2 T 2 port goes to the target TT

00:17:29,480 --> 00:17:35,629
4 right that's that's what I'm trying to

00:17:31,639 --> 00:17:40,690
do here so because of that it's route at

00:17:35,629 --> 00:17:42,950
localhost not route at my 192 168 72 and

00:17:40,690 --> 00:17:46,519
it tells me it's successfully deployed

00:17:42,950 --> 00:17:48,590
it to the target so it basically runs a

00:17:46,519 --> 00:17:53,269
little shell script that if F copies

00:17:48,590 --> 00:17:57,139
over and it installs everything so I'm

00:17:53,269 --> 00:18:02,960
going to go ahead and SSH in again we're

00:17:57,139 --> 00:18:04,460
using the host 2 T 2 2 port and just to

00:18:02,960 --> 00:18:06,259
prove that I'm actually running Yocto

00:18:04,460 --> 00:18:09,500
and not cheating by using fedora

00:18:06,259 --> 00:18:15,510
it is the octave that we built the stool

00:18:09,500 --> 00:18:18,330
bit ago and guess what I can read Nana

00:18:15,510 --> 00:18:22,440
how long did that take five minutes

00:18:18,330 --> 00:18:24,990
right not long so pretty awesome where

00:18:22,440 --> 00:18:26,040
did it put it where you would expect it

00:18:24,990 --> 00:18:29,400
to be user bin

00:18:26,040 --> 00:18:32,490
so there's user bin Nana right so let's

00:18:29,400 --> 00:18:34,470
get out of there I want to clean up I'm

00:18:32,490 --> 00:18:39,800
going to uninstall I'm going to under

00:18:34,470 --> 00:18:39,800
ploy it same syntax basically

00:18:41,870 --> 00:18:48,590
successfully undeployed again at ran a

00:18:44,250 --> 00:18:50,940
shell script on the target and just to

00:18:48,590 --> 00:18:54,980
beat it to death I want to make sure you

00:18:50,940 --> 00:19:00,020
come out knowing what's going on here

00:18:54,980 --> 00:19:02,580
Nano is no longer on the target and as

00:19:00,020 --> 00:19:11,850
expected it's not in the user bin file

00:19:02,580 --> 00:19:14,850
anymore so we're happy right it ran we

00:19:11,850 --> 00:19:15,570
tested it we runtime tested it we want

00:19:14,850 --> 00:19:18,330
to put it away

00:19:15,570 --> 00:19:21,900
so dev tool finish Nano put it to the

00:19:18,330 --> 00:19:23,190
meta food layer that we created and

00:19:21,900 --> 00:19:29,490
we're going to go ahead and clean up and

00:19:23,190 --> 00:19:30,930
remove the local workspace stuff dev

00:19:29,490 --> 00:19:32,520
tool doesn't want to assume that it

00:19:30,930 --> 00:19:34,410
knows that you're done and so it leaves

00:19:32,520 --> 00:19:37,590
the stuff here but if you keep it here

00:19:34,410 --> 00:19:40,010
it actually clutters things later on so

00:19:37,590 --> 00:19:44,820
let's go ahead and look at the lair and

00:19:40,010 --> 00:19:49,040
very lucky it went by too quick but your

00:19:44,820 --> 00:19:49,040
your BD recipe was created there

00:19:52,870 --> 00:19:58,480
no that did not remove the workspace so

00:19:56,650 --> 00:20:00,760
it removed I all I did was remove it

00:19:58,480 --> 00:20:02,440
from the workspace so that my sandbox

00:20:00,760 --> 00:20:05,980
didn't have it any more because I want

00:20:02,440 --> 00:20:07,750
it right I wanted it just to be clear I

00:20:05,980 --> 00:20:11,050
wanted that to be in my meta food layer

00:20:07,750 --> 00:20:12,640
as its final resting place right I don't

00:20:11,050 --> 00:20:14,650
want it in sandbox anymore I don't want

00:20:12,640 --> 00:20:16,450
to be playing with it I'm considering it

00:20:14,650 --> 00:20:22,020
done I'm probably going to hand it off

00:20:16,450 --> 00:20:24,460
to my build engineer guy now yes sorry

00:20:22,020 --> 00:20:26,230
some of the stuff I went really quick so

00:20:24,460 --> 00:20:35,170
my apologies because I'm trying to get a

00:20:26,230 --> 00:20:38,530
lot in today and yes no it's just using

00:20:35,170 --> 00:20:44,350
SSH and s copy that's ep that's that's

00:20:38,530 --> 00:20:46,420
it that's what's there right now correct

00:20:44,350 --> 00:20:49,210
at this moment right now what's what's

00:20:46,420 --> 00:20:52,660
there for simplicity because it covers

00:20:49,210 --> 00:21:01,390
most use cases it just use the fact that

00:20:52,660 --> 00:21:02,710
you got it it SCP available okay I'm not

00:21:01,390 --> 00:21:04,450
going to show that today I'm really

00:21:02,710 --> 00:21:04,660
happy to talk to anybody I'm here all

00:21:04,450 --> 00:21:06,910
week

00:21:04,660 --> 00:21:09,340
I'll be at the octopus probably most of

00:21:06,910 --> 00:21:11,470
Thursday so if you've got questions

00:21:09,340 --> 00:21:13,270
about stuff and I know you do just come

00:21:11,470 --> 00:21:15,460
find me I'm really really happy to talk

00:21:13,270 --> 00:21:19,630
you through a lot more stuff than and

00:21:15,460 --> 00:21:20,860
I've got time to do today patches we're

00:21:19,630 --> 00:21:24,010
going to I'm going to show you patches

00:21:20,860 --> 00:21:30,309
but but I didn't specifically do it get

00:21:24,010 --> 00:21:34,780
a git repo today so let me ask you

00:21:30,309 --> 00:21:38,170
another question here's another demo why

00:21:34,780 --> 00:21:42,910
are you modifying source code patches

00:21:38,170 --> 00:21:45,250
with quilt by hand starting to sense the

00:21:42,910 --> 00:21:49,420
theme here right you have extra time to

00:21:45,250 --> 00:21:50,970
spare because I sure don't so we're

00:21:49,420 --> 00:21:53,530
gonna do a little bit shorter demo but

00:21:50,970 --> 00:21:56,530
just dev tool modify so we're going to

00:21:53,530 --> 00:21:58,059
take a already existing recipe I'm

00:21:56,530 --> 00:22:00,160
actually going to create one again but

00:21:58,059 --> 00:22:01,450
and we're just going to go through and

00:22:00,160 --> 00:22:03,970
we're going to modify the source code

00:22:01,450 --> 00:22:05,330
itself and generate patches which are

00:22:03,970 --> 00:22:15,140
going to go into

00:22:05,330 --> 00:22:18,110
your build system and play so same same

00:22:15,140 --> 00:22:25,090
layer our same workspace I had earlier I

00:22:18,110 --> 00:22:28,760
do have to re initialize environment and

00:22:25,090 --> 00:22:30,890
just to give me something to actually

00:22:28,760 --> 00:22:32,540
work with that I know will work I'm

00:22:30,890 --> 00:22:36,040
going to go ahead and download Ginny's

00:22:32,540 --> 00:22:36,040
hello project

00:22:43,340 --> 00:22:46,690
and we're going to build it

00:22:55,140 --> 00:22:58,920
it turns out the first time through it

00:22:56,880 --> 00:23:00,330
doesn't build clean for some reason I

00:22:58,920 --> 00:23:03,210
didn't have time to figure out exactly

00:23:00,330 --> 00:23:06,780
why if you build it again at work so

00:23:03,210 --> 00:23:07,980
sorry hand waving argument so we're

00:23:06,780 --> 00:23:09,450
going to deploy the target just because

00:23:07,980 --> 00:23:12,150
I want to see the thing I built actually

00:23:09,450 --> 00:23:13,950
works before we modify it right and you

00:23:12,150 --> 00:23:16,110
know what's going to say right and of

00:23:13,950 --> 00:23:19,740
course I forgot how to type the command

00:23:16,110 --> 00:23:24,990
in the right way so I'm human and it's

00:23:19,740 --> 00:23:28,680
not nano it's hello but hey we're all

00:23:24,990 --> 00:23:31,590
friends so we're going to deploy it I

00:23:28,680 --> 00:23:34,310
still got that ki mu machine running so

00:23:31,590 --> 00:23:37,080
we're going to go ahead and SSH into it

00:23:34,310 --> 00:23:42,150
so again it just s copied in right had a

00:23:37,080 --> 00:23:45,560
manifest installed it hello hello world

00:23:42,150 --> 00:23:48,990
hey yeh it's what we expected

00:23:45,560 --> 00:23:55,410
just for a cleanliness I'm going to

00:23:48,990 --> 00:23:57,120
under ploy it I'm also just trying to

00:23:55,410 --> 00:23:59,750
get this to sink in a little bit

00:23:57,120 --> 00:23:59,750
question

00:24:05,250 --> 00:24:09,820
probably I didn't test it I'm almost

00:24:07,870 --> 00:24:13,510
positive that is the case because it's

00:24:09,820 --> 00:24:15,430
not a very smart mechanism that it's

00:24:13,510 --> 00:24:17,350
using but it wouldn't necessarily

00:24:15,430 --> 00:24:19,210
it would not necessarily clean up

00:24:17,350 --> 00:24:20,710
anything that's the problem right so the

00:24:19,210 --> 00:24:24,130
reason I'm doing unda ploys it'll clean

00:24:20,710 --> 00:24:25,510
up any garbage but I think you're

00:24:24,130 --> 00:24:27,880
probably safe if you want to just do a

00:24:25,510 --> 00:24:29,500
really quick turn and burn I would

00:24:27,880 --> 00:24:31,950
recommend you can just go ahead and just

00:24:29,500 --> 00:24:38,380
keep deploying you're probably fine

00:24:31,950 --> 00:24:40,990
it's going to overwrite yep okay so it

00:24:38,380 --> 00:24:43,660
ran so we're happy so much for today's

00:24:40,990 --> 00:24:46,840
demo we're going to finish that to our

00:24:43,660 --> 00:24:49,480
meta food layer so that I have actually

00:24:46,840 --> 00:24:50,560
something that I can modify right you

00:24:49,480 --> 00:24:52,870
can probably even guess what I'm going

00:24:50,560 --> 00:24:54,640
to do to modify a bit so I'm going to

00:24:52,870 --> 00:24:56,290
clear out my workspace so I'm removing

00:24:54,640 --> 00:24:58,960
that source because I'm considering that

00:24:56,290 --> 00:25:02,320
done right done with mice mice and

00:24:58,960 --> 00:25:05,320
boxing depth will reset hello hey it's

00:25:02,320 --> 00:25:08,680
not there okay I'm good to go to have to

00:25:05,320 --> 00:25:11,890
a modify hello so it knows how to go and

00:25:08,680 --> 00:25:17,710
find the hello recipe right because it

00:25:11,890 --> 00:25:19,780
knows about the cache data so it's going

00:25:17,710 --> 00:25:22,780
to go ahead and do the fetch and all the

00:25:19,780 --> 00:25:28,140
stuff that it normally would do but it's

00:25:22,780 --> 00:25:28,140
going to unpack into the workspace and

00:25:28,590 --> 00:25:35,230
now if I look at workspace sources hello

00:25:32,280 --> 00:25:39,520
this is where my demo are sorry my

00:25:35,230 --> 00:25:42,730
source tree is going to be and it is not

00:25:39,520 --> 00:25:45,580
hello dot C its hello its source hello

00:25:42,730 --> 00:25:51,280
dot C and I'm going to change world to

00:25:45,580 --> 00:25:52,810
Portland and this is when I found out

00:25:51,280 --> 00:25:54,880
that vim worked a lot better than VI

00:25:52,810 --> 00:25:58,300
which is what caused some rap issues

00:25:54,880 --> 00:26:01,120
earlier so I do a git log as to show you

00:25:58,300 --> 00:26:05,680
that it did have a created a git repo

00:26:01,120 --> 00:26:08,080
for me and I'm going to do the regular

00:26:05,680 --> 00:26:09,760
git workflow right it's dev tools not

00:26:08,080 --> 00:26:11,470
going to replace everything right you've

00:26:09,760 --> 00:26:13,450
already got hammers in your toolbox we

00:26:11,470 --> 00:26:14,580
don't need to replace all of them but we

00:26:13,450 --> 00:26:17,429
do need to improve

00:26:14,580 --> 00:26:23,340
some of them so I'm going to go ahead

00:26:17,429 --> 00:26:24,720
and commit and I'm going to fin or I'm

00:26:23,340 --> 00:26:32,070
going to build because I need to show

00:26:24,720 --> 00:26:39,809
you what we did get into the magic of

00:26:32,070 --> 00:26:42,210
television fairly quick build deployed

00:26:39,809 --> 00:26:45,360
target again starting to get the pattern

00:26:42,210 --> 00:26:50,059
right so this workflow is pretty quick

00:26:45,360 --> 00:26:53,340
and especially if you're using TM use or

00:26:50,059 --> 00:26:54,600
hardware that supports Ethernet you're

00:26:53,340 --> 00:27:04,080
really going to be able to turn and burn

00:26:54,600 --> 00:27:05,820
very quickly and just to prove again

00:27:04,080 --> 00:27:08,190
that we are running Yocto and I didn't

00:27:05,820 --> 00:27:13,169
use anything else and what do you know

00:27:08,190 --> 00:27:15,120
hello hello Portland so again I'm a

00:27:13,169 --> 00:27:17,039
little bit anal about cleaning up right

00:27:15,120 --> 00:27:19,980
I don't really like dirty data around I

00:27:17,039 --> 00:27:22,529
always I personally always run sorry for

00:27:19,980 --> 00:27:26,279
the mic I always run deploy target

00:27:22,529 --> 00:27:28,409
personally I'm in Stefan those nodding

00:27:26,279 --> 00:27:30,480
his head up here I'm almost positive you

00:27:28,409 --> 00:27:31,950
don't have to do that okay so we're done

00:27:30,480 --> 00:27:36,029
right we're happy it built

00:27:31,950 --> 00:27:43,470
we made our changes we're going to go

00:27:36,029 --> 00:27:45,510
ahead and finish and what's up yes yeah

00:27:43,470 --> 00:27:49,889
I'm going to show you that right now

00:27:45,510 --> 00:27:51,899
I'm going to show you that right now so

00:27:49,889 --> 00:27:53,789
I'm going to clean up my workspace again

00:27:51,899 --> 00:27:57,960
because I am fairly anal about being

00:27:53,789 --> 00:28:00,990
clean and we're going to go ahead and go

00:27:57,960 --> 00:28:03,630
to where that stuff went to so here's my

00:28:00,990 --> 00:28:05,840
directory right I've got my hello BB a

00:28:03,630 --> 00:28:08,460
pen that was sorry my hello underscore

00:28:05,840 --> 00:28:11,220
2.10 DB that was created by the original

00:28:08,460 --> 00:28:15,210
recipe right or the original dev tool ad

00:28:11,220 --> 00:28:17,789
that we first did and then we've got and

00:28:15,210 --> 00:28:20,490
I'm going to show you what's in that

00:28:17,789 --> 00:28:23,850
really quickly so that's got your source

00:28:20,490 --> 00:28:26,220
URI it's got your check sum it's got

00:28:23,850 --> 00:28:27,730
your license and your license checksum

00:28:26,220 --> 00:28:34,520
right

00:28:27,730 --> 00:28:37,670
so it also created a BB append and this

00:28:34,520 --> 00:28:40,280
is where the patch went so here you see

00:28:37,670 --> 00:28:43,010
that added your zero zero zero one

00:28:40,280 --> 00:28:45,140
change world to Portland patch right so

00:28:43,010 --> 00:28:48,130
it just used your git commit as the name

00:28:45,140 --> 00:28:48,130
of the patch okay

00:28:49,120 --> 00:28:53,960
so you could have merge those together

00:28:51,140 --> 00:28:55,550
if you wanted to right but again it's

00:28:53,960 --> 00:28:59,720
not assuming everything it doesn't want

00:28:55,550 --> 00:29:02,480
to clobber everything for you I don't

00:28:59,720 --> 00:29:05,150
remember and there probably is I don't

00:29:02,480 --> 00:29:17,690
know I I'm still dogfooding this a bit

00:29:05,150 --> 00:29:19,850
myself so yep it's going to put the

00:29:17,690 --> 00:29:21,890
correct data where it so it's only going

00:29:19,850 --> 00:29:25,280
to put in that case the beabea pens and

00:29:21,890 --> 00:29:34,040
the patch two meta food it would leave

00:29:25,280 --> 00:29:36,410
the original alone exactly yes but I

00:29:34,040 --> 00:29:39,890
believe that there is another option and

00:29:36,410 --> 00:29:42,410
I don't remember anything up let me get

00:29:39,890 --> 00:29:44,360
back to you on that one so here you just

00:29:42,410 --> 00:29:50,560
see the very very simple patch right and

00:29:44,360 --> 00:29:54,920
and that's the end of that demo but

00:29:50,560 --> 00:29:57,790
that's not what I want to do now I

00:29:54,920 --> 00:29:57,790
didn't want to do that either

00:30:07,010 --> 00:30:15,590
okay so you're definitely sensing a

00:30:11,929 --> 00:30:16,280
theme now because why upgrade recipes by

00:30:15,590 --> 00:30:19,700
hand

00:30:16,280 --> 00:30:24,320
okay do you have extra time to spare

00:30:19,700 --> 00:30:25,850
because I sure don't so in this case I'm

00:30:24,320 --> 00:30:29,059
actually going to show you an actual

00:30:25,850 --> 00:30:33,679
real layer maintenance that I just did

00:30:29,059 --> 00:30:35,330
in the last week and I had to but I'm

00:30:33,679 --> 00:30:40,309
not going to show you the one I did for

00:30:35,330 --> 00:30:43,820
meta selinux so turns out that I went

00:30:40,309 --> 00:30:46,429
back and looked at a Perl module that I

00:30:43,820 --> 00:30:48,590
did about three years ago and it had

00:30:46,429 --> 00:30:54,320
updated three months after I submitted

00:30:48,590 --> 00:30:56,890
the original recipe always happened so

00:30:54,320 --> 00:30:58,940
I'm going to add the meta Perl layer

00:30:56,890 --> 00:31:03,710
this is all sold at cleaner because it

00:30:58,940 --> 00:31:05,450
only depends on meta pearl actually

00:31:03,710 --> 00:31:08,059
earlier in my other workflow that I

00:31:05,450 --> 00:31:14,000
didn't show you I had also added meadow

00:31:08,059 --> 00:31:15,980
II just to be fully clear but okay so

00:31:14,000 --> 00:31:20,330
here we've got Lib module build tiny

00:31:15,980 --> 00:31:21,890
pearl version zero three six turns out

00:31:20,330 --> 00:31:24,860
that three months after I submitted to

00:31:21,890 --> 00:31:29,270
zero three nine came out so what am I

00:31:24,860 --> 00:31:31,429
going to do dev tool upgrade Lib module

00:31:29,270 --> 00:31:38,419
build tiny pearl because we use Debian

00:31:31,429 --> 00:31:42,200
meaning version zero three nine could

00:31:38,419 --> 00:31:44,120
that get any easier than that I don't

00:31:42,200 --> 00:31:46,280
need to know the source URI the fetch

00:31:44,120 --> 00:31:50,290
where it's coming from anything all I

00:31:46,280 --> 00:31:50,290
need to know is what's the new version

00:31:59,370 --> 00:32:05,100
so here it's doing the fetch in this

00:32:02,520 --> 00:32:08,180
case it new to look at a github repo and

00:32:05,100 --> 00:32:08,180
grab the newer version

00:32:13,250 --> 00:32:26,110
I'm going to go just edit the recipe

00:32:15,410 --> 00:32:29,240
just to show you that it added a new

00:32:26,110 --> 00:32:31,960
source URI and so on to this so it's

00:32:29,240 --> 00:32:31,960
kind of boring but

00:32:36,400 --> 00:32:39,600
so go ahead and build it

00:32:42,590 --> 00:32:47,299
just to make sure that devtool is doing

00:32:45,770 --> 00:32:55,190
something good and things are building

00:32:47,299 --> 00:32:57,890
cleanly and of course at this moment I

00:32:55,190 --> 00:32:59,659
would also want to runtime test this but

00:32:57,890 --> 00:33:10,250
I'm not going to beat a dead horse right

00:32:59,659 --> 00:33:12,200
now so yes no it's just going to so

00:33:10,250 --> 00:33:13,909
actually all it does is in place it

00:33:12,200 --> 00:33:16,190
takes the variables that it's looking

00:33:13,909 --> 00:33:18,440
for like source URI and license file

00:33:16,190 --> 00:33:20,419
checksum and things like that and in

00:33:18,440 --> 00:33:24,649
place changes the value that's that's

00:33:20,419 --> 00:33:25,940
all it's doing so I'm just going to

00:33:24,649 --> 00:33:40,970
pretend that everything was great oh

00:33:25,940 --> 00:33:42,919
sorry Tom to 7/4 is the current version

00:33:40,970 --> 00:33:47,149
and it'll barf but yes it's going to

00:33:42,919 --> 00:33:49,940
figure out right right yeah so there is

00:33:47,149 --> 00:33:52,820
a there is a outstanding issue if the

00:33:49,940 --> 00:33:55,850
upstream changed to a different source

00:33:52,820 --> 00:33:56,929
URI we need we don't have that yet so if

00:33:55,850 --> 00:33:59,630
you actually need to change where

00:33:56,929 --> 00:34:02,899
upgraded from we don't have that but if

00:33:59,630 --> 00:34:05,510
it's just a new you know reg X for the

00:34:02,899 --> 00:34:08,780
tarball or it's just a new tag for the

00:34:05,510 --> 00:34:11,320
git git repo then it works and it's it's

00:34:08,780 --> 00:34:11,320
really clean

00:34:14,099 --> 00:34:23,399
I don't know sorry I I can get back to

00:34:18,629 --> 00:34:24,929
you on that so again I'm still kind of

00:34:23,399 --> 00:34:26,789
dogfooding this myself I've been

00:34:24,929 --> 00:34:28,589
preaching about using it for years and I

00:34:26,789 --> 00:34:30,929
finally forced myself to start using it

00:34:28,589 --> 00:34:34,589
in my workflow so here's another place

00:34:30,929 --> 00:34:37,470
where my rap went bad so I went ahead

00:34:34,589 --> 00:34:39,659
and assumed it was good and I finished

00:34:37,470 --> 00:34:42,029
it but just to make sure I'm going to

00:34:39,659 --> 00:34:47,399
double check and bitbake it and there's

00:34:42,029 --> 00:34:49,559
a reason for this because right now dev

00:34:47,399 --> 00:34:51,690
tool is not checking the license file

00:34:49,559 --> 00:34:54,839
checksum and everything properly we have

00:34:51,690 --> 00:34:56,970
a bug open for this as well and so it

00:34:54,839 --> 00:34:59,609
turns out when I build this boom guess

00:34:56,970 --> 00:35:04,559
what the license file changed okay well

00:34:59,609 --> 00:35:06,630
let change the address for Free Software

00:35:04,559 --> 00:35:09,049
Foundation change that's that's all that

00:35:06,630 --> 00:35:09,049
changed

00:35:15,320 --> 00:35:22,350
I just did it yeah I just went ahead and

00:35:19,860 --> 00:35:24,300
ran bitbake so devtool should be doing

00:35:22,350 --> 00:35:25,740
this in the near future it would

00:35:24,300 --> 00:35:28,140
actually warn you that things had

00:35:25,740 --> 00:35:36,630
changed and show you the disk on the

00:35:28,140 --> 00:35:38,760
license file okay and again my ASCII

00:35:36,630 --> 00:35:41,160
cinema is failing me but bass cries went

00:35:38,760 --> 00:35:43,200
in because that tells you what the

00:35:41,160 --> 00:35:45,090
checksum should have been and I actually

00:35:43,200 --> 00:35:48,030
did go and check what it was I saw that

00:35:45,090 --> 00:35:49,290
it was just the address and so we're

00:35:48,030 --> 00:35:53,670
going to go ahead and we're done now

00:35:49,290 --> 00:35:55,800
right so we want to go in and do our get

00:35:53,670 --> 00:35:58,790
commit so I'll build it one more time

00:35:55,800 --> 00:35:58,790
make sure it's clean

00:36:04,740 --> 00:36:08,730
so I'm trying to make sure I leave time

00:36:06,300 --> 00:36:11,540
for questions at the end so trying to

00:36:08,730 --> 00:36:11,540
power through here

00:36:17,530 --> 00:36:21,040
all right and again you would normally

00:36:19,480 --> 00:36:27,340
run time check this and everything right

00:36:21,040 --> 00:36:30,220
but so here in the when I finished it it

00:36:27,340 --> 00:36:31,540
put the new recipe and let the old

00:36:30,220 --> 00:36:33,820
recipe alone right

00:36:31,540 --> 00:36:35,710
it is not presumptuous enough to clobber

00:36:33,820 --> 00:36:37,990
your old data right you don't you really

00:36:35,710 --> 00:36:40,960
wouldn't want it to be doing that and so

00:36:37,990 --> 00:36:43,450
we're going to go ahead and get removed

00:36:40,960 --> 00:36:47,370
the old version get add the new version

00:36:43,450 --> 00:36:47,370
so I'll do the effect of a rename

00:36:53,710 --> 00:36:59,500
this is not how slow I type so I think

00:36:55,630 --> 00:37:03,730
asked you cinema did something go ahead

00:36:59,500 --> 00:37:05,740
and get committed and sign it off

00:37:03,730 --> 00:37:08,920
because this mail this is going to be

00:37:05,740 --> 00:37:14,590
mailing list and I'm going to write some

00:37:08,920 --> 00:37:17,800
kind of good get commit so following the

00:37:14,590 --> 00:37:20,410
open embedded guidelines and to keep CEM

00:37:17,800 --> 00:37:23,170
happy I'm going to tell you why the

00:37:20,410 --> 00:37:25,030
license file changed because I always

00:37:23,170 --> 00:37:27,520
forget to do that and Kim always catches

00:37:25,030 --> 00:37:36,280
it thank God because if this isn't in

00:37:27,520 --> 00:37:38,590
the get commit how do we know so

00:37:36,280 --> 00:37:47,260
basically I'm done get send email right

00:37:38,590 --> 00:37:49,180
so okay so enough of that okay so that's

00:37:47,260 --> 00:37:51,760
it for the demos just want to talk a

00:37:49,180 --> 00:37:54,370
little bit more about how things are

00:37:51,760 --> 00:37:58,120
changed so this came out of an OE dam

00:37:54,370 --> 00:38:00,940
meeting back in 2013 or 2014 timeframe

00:37:58,120 --> 00:38:02,650
and so we realized we needed some

00:38:00,940 --> 00:38:07,840
workflow tools so the first time it was

00:38:02,650 --> 00:38:10,960
introduced was in Fido 1.8 in then in

00:38:07,840 --> 00:38:12,970
JETRO is improved in CRO Goff's

00:38:10,960 --> 00:38:15,040
it really actually became totally

00:38:12,970 --> 00:38:17,920
completely useful if you are not on

00:38:15,040 --> 00:38:20,800
Krogh ah come talk to me in the hallway

00:38:17,920 --> 00:38:24,160
later on so I can help you understand

00:38:20,800 --> 00:38:27,160
how to get to CRO guys do not do not

00:38:24,160 --> 00:38:30,550
keep yourself in the dark ages or sorry

00:38:27,160 --> 00:38:32,200
an older release because you're stuck

00:38:30,550 --> 00:38:34,390
with a vendor kernel or something like

00:38:32,200 --> 00:38:36,660
that you have reasons that you think you

00:38:34,390 --> 00:38:40,600
are stuck I assure you they are not

00:38:36,660 --> 00:38:42,250
valid all the way across the board it is

00:38:40,600 --> 00:38:46,360
easier to upgrade than you think

00:38:42,250 --> 00:38:48,280
okay so that's my soapbox so in more tea

00:38:46,360 --> 00:38:51,750
it was refined in particular in more tea

00:38:48,280 --> 00:38:55,570
is when the npm nodejs stuff was added

00:38:51,750 --> 00:38:57,910
flips in pyro we polished some things up

00:38:55,570 --> 00:39:00,610
caught some bugs and so on because it

00:38:57,910 --> 00:39:03,040
has been getting used a lot more so more

00:39:00,610 --> 00:39:05,260
things have been reported and we still

00:39:03,040 --> 00:39:05,760
got 2.4 you know planning out for the

00:39:05,260 --> 00:39:09,500
rest of the

00:39:05,760 --> 00:39:12,380
here so pyro will be released in April a

00:39:09,500 --> 00:39:15,540
2.4 you know really start hitting

00:39:12,380 --> 00:39:17,130
development in June and so we've got a

00:39:15,540 --> 00:39:20,250
lot of possibilities where we could go

00:39:17,130 --> 00:39:22,860
and I really want you guys to get best

00:39:20,250 --> 00:39:27,560
your ideas and in fact contribute your

00:39:22,860 --> 00:39:29,820
ideas to the tool so gratuitous plug I

00:39:27,560 --> 00:39:33,060
didn't show it today I was planning on

00:39:29,820 --> 00:39:34,950
it but I had a little bit of issues

00:39:33,060 --> 00:39:37,830
so rather than bog you guys down with

00:39:34,950 --> 00:39:40,560
those anyway I did the demo the way I

00:39:37,830 --> 00:39:43,200
did it so tomorrow Randy Witt is talking

00:39:40,560 --> 00:39:45,870
about cross platform enabling enablement

00:39:43,200 --> 00:39:47,910
for Yocto project with containers this

00:39:45,870 --> 00:39:49,560
stuff is really really cool even if

00:39:47,910 --> 00:39:51,960
you're on Linux you should be using it

00:39:49,560 --> 00:39:52,860
it is really really awesome because one

00:39:51,960 --> 00:39:54,540
of the things that happens in

00:39:52,860 --> 00:39:57,360
development workflow is yet you got a

00:39:54,540 --> 00:40:00,930
ctrl C to kill bitbake and it leaves

00:39:57,360 --> 00:40:03,960
stuff behind okay so this is really

00:40:00,930 --> 00:40:06,000
really awesome also tomorrow is going to

00:40:03,960 --> 00:40:08,250
be Yocto project extensible sdk

00:40:06,000 --> 00:40:11,070
simplifying the workflow for application

00:40:08,250 --> 00:40:15,450
developers today I was targeting build

00:40:11,070 --> 00:40:17,640
engineers and integrators okay Henry is

00:40:15,450 --> 00:40:19,800
going to be talking about application

00:40:17,640 --> 00:40:22,320
developers and the rest of your team is

00:40:19,800 --> 00:40:25,200
beyond you that wants to can actually

00:40:22,320 --> 00:40:28,890
use the SDK to create web you know web

00:40:25,200 --> 00:40:30,600
spaces and things like that okay so a

00:40:28,890 --> 00:40:32,520
call to action I want you guys to go out

00:40:30,600 --> 00:40:34,530
and use this tool immediately right

00:40:32,520 --> 00:40:36,450
start using it just start playing with

00:40:34,530 --> 00:40:38,760
it trust me you're going to save so much

00:40:36,450 --> 00:40:41,160
time unbelievable how much time you're

00:40:38,760 --> 00:40:43,110
going to save and this is open source so

00:40:41,160 --> 00:40:45,540
please please contribute to it

00:40:43,110 --> 00:40:47,490
this is Oh a core yes it was created by

00:40:45,540 --> 00:40:50,400
Yocto project people but it is Oh Igor

00:40:47,490 --> 00:40:53,190
so if you have any patches it goes to

00:40:50,400 --> 00:40:56,490
you the OE core mailing list that QR

00:40:53,190 --> 00:41:00,750
code is that a web address for where to

00:40:56,490 --> 00:41:03,450
sign up for the mailing list also we've

00:41:00,750 --> 00:41:06,420
got great documentation from Scott who's

00:41:03,450 --> 00:41:09,330
in the room thank you and this is the

00:41:06,420 --> 00:41:11,250
URL for that so this link will take you

00:41:09,330 --> 00:41:13,860
to the currently released version and

00:41:11,250 --> 00:41:15,480
this is just a show of basically hey

00:41:13,860 --> 00:41:17,420
what do you know des will add depth will

00:41:15,480 --> 00:41:21,730
modified dev tool upgrade

00:41:17,420 --> 00:41:25,400
okay again QR code will take you to that

00:41:21,730 --> 00:41:27,020
we also have a wiki and Henry has

00:41:25,400 --> 00:41:29,630
created this developer workflow

00:41:27,020 --> 00:41:31,880
improvements page I'll be adding to that

00:41:29,630 --> 00:41:33,380
after this or during the rest of this

00:41:31,880 --> 00:41:35,930
week to add some of the stuff that I

00:41:33,380 --> 00:41:38,569
didn't quite get in yet

00:41:35,930 --> 00:41:40,309
just show you that and this is a place

00:41:38,569 --> 00:41:42,410
that you can go and edit and add your

00:41:40,309 --> 00:41:44,630
own experiences and so on or you know

00:41:42,410 --> 00:41:48,440
ideas and whatever it's we're a

00:41:44,630 --> 00:41:51,410
community right so finally I really want

00:41:48,440 --> 00:41:54,380
to thank Paul Eagleton he was really the

00:41:51,410 --> 00:41:59,299
main force behind this and the original

00:41:54,380 --> 00:42:01,790
author of recipe tool and dev tool Chris

00:41:59,299 --> 00:42:07,700
Larson who's one of the grandfather's of

00:42:01,790 --> 00:42:10,880
bitbake was instrumental in creating the

00:42:07,700 --> 00:42:13,309
Python plug-in that creates the Python

00:42:10,880 --> 00:42:15,200
recipes and Leo sign Duvall and others

00:42:13,309 --> 00:42:17,540
have been adding to this from the last

00:42:15,200 --> 00:42:19,490
few releases really want to thank Henry

00:42:17,540 --> 00:42:21,290
Bruce because without him I wouldn't

00:42:19,490 --> 00:42:24,760
even have the abstract for this talk and

00:42:21,290 --> 00:42:27,770
he's been doing an awful lot of work for

00:42:24,760 --> 00:42:29,859
for the developer workflow of stuff and

00:42:27,770 --> 00:42:32,270
it's really really helping us out a lot

00:42:29,859 --> 00:42:35,180
also I want to thank the crops team I

00:42:32,270 --> 00:42:39,260
was going to show you always done in

00:42:35,180 --> 00:42:42,440
containers I just needed to cut bait and

00:42:39,260 --> 00:42:44,839
run but it's a total Misha

00:42:42,440 --> 00:42:48,410
Randy Witt and Brian Avery were really

00:42:44,839 --> 00:42:50,180
really helping out with the crop scheme

00:42:48,410 --> 00:42:53,450
to create the container stuff which

00:42:50,180 --> 00:42:56,740
works really awesome I had a minor flaw

00:42:53,450 --> 00:43:03,670
that I didn't have time to figure out so

00:42:56,740 --> 00:43:03,670
any questions I think we have time yeah

00:43:07,400 --> 00:43:13,320
what would upgrade do is an underscored

00:43:10,290 --> 00:43:16,680
get recipe it knows about get so it's

00:43:13,320 --> 00:43:20,250
going to actually go and figure out the

00:43:16,680 --> 00:43:22,190
probably head I think there are options

00:43:20,250 --> 00:43:25,080
in the command line to tell it which

00:43:22,190 --> 00:43:27,420
specific tag you want it or which

00:43:25,080 --> 00:43:28,920
commute issue wanted but you're still

00:43:27,420 --> 00:43:36,330
going to have to do some human

00:43:28,920 --> 00:43:38,660
intervention in that regard no it's

00:43:36,330 --> 00:43:51,120
going to create a BB a pen by default

00:43:38,660 --> 00:43:53,850
yes you have a question if you have

00:43:51,120 --> 00:43:56,870
multiple patches already in your recipe

00:43:53,850 --> 00:44:00,750
and you do a dev tool modify does it

00:43:56,870 --> 00:44:03,180
like apply those patches to the tree and

00:44:00,750 --> 00:44:06,000
allow you to like can you like into an

00:44:03,180 --> 00:44:09,210
interactive rebase and then go back and

00:44:06,000 --> 00:44:11,670
like modify one of the patches and have

00:44:09,210 --> 00:44:14,790
it actually pulled that back through and

00:44:11,670 --> 00:44:16,770
yes the back basically yes we also have

00:44:14,790 --> 00:44:19,010
plans for adding a more interactive mode

00:44:16,770 --> 00:44:22,050
that would enable even more of that but

00:44:19,010 --> 00:44:25,140
but yes it it's going to go and fetch

00:44:22,050 --> 00:44:26,760
and patch and then at that point you can

00:44:25,140 --> 00:44:29,760
apply a changes on top of it and then

00:44:26,760 --> 00:44:32,070
it'll instead out a BB append or it'll

00:44:29,760 --> 00:44:34,620
yes okay but default is going to be a BB

00:44:32,070 --> 00:44:37,470
append so and so your new patches would

00:44:34,620 --> 00:44:40,320
go in the same directory but the actual

00:44:37,470 --> 00:44:42,600
patch source URI would actually go into

00:44:40,320 --> 00:44:47,540
the BB append file which you can merge

00:44:42,600 --> 00:44:53,010
yourself later on okay more questions

00:44:47,540 --> 00:44:55,710
good is is devtool adders

00:44:53,010 --> 00:44:58,620
create is that just a like totally a

00:44:55,710 --> 00:45:00,480
wrapper around recipe tool create yes

00:44:58,620 --> 00:45:02,190
does it do really have to add is totally

00:45:00,480 --> 00:45:04,080
a wrapper around recipe tools okay so

00:45:02,190 --> 00:45:05,940
I'm familiar with that so I guess I

00:45:04,080 --> 00:45:11,180
should probably be pretty familiar yes

00:45:05,940 --> 00:45:13,130
okay yeah any other questions

00:45:11,180 --> 00:45:15,470
and again if you want to see under the

00:45:13,130 --> 00:45:17,540
hood it's all Python it's plug-in based

00:45:15,470 --> 00:45:19,130
I can show you way more about that I

00:45:17,540 --> 00:45:22,700
just didn't have time today and I don't

00:45:19,130 --> 00:45:24,140
think that would have helped anybody so

00:45:22,700 --> 00:45:26,600
I was trying to get you guys to go out

00:45:24,140 --> 00:45:27,350
and use with tools because it's such a

00:45:26,600 --> 00:45:28,820
time-saver

00:45:27,350 --> 00:45:31,460
I mean I've been doing this stuff by

00:45:28,820 --> 00:45:33,080
hand for years right I've been preaching

00:45:31,460 --> 00:45:35,810
about using the tool and not actually

00:45:33,080 --> 00:45:37,940
using it and I just said I have to start

00:45:35,810 --> 00:45:41,630
dogfooding so I started using it and I

00:45:37,940 --> 00:45:44,950
kicked myself for the time I wasted it's

00:45:41,630 --> 00:45:44,950
really cool yes

00:45:53,260 --> 00:45:58,310
okay so the question is if you do

00:45:56,300 --> 00:45:59,720
devtool ad and there are dependencies or

00:45:58,310 --> 00:46:02,690
not in the original image would it

00:45:59,720 --> 00:46:04,190
deploy those as well and no it does not

00:46:02,690 --> 00:46:05,810
that would be great we're trying to

00:46:04,190 --> 00:46:08,870
figure out a the right way to do that

00:46:05,810 --> 00:46:11,390
because it's harder than you think and

00:46:08,870 --> 00:46:12,920
in particular the unda ploy becomes hard

00:46:11,390 --> 00:46:15,200
because you need to have a mana fit so

00:46:12,920 --> 00:46:17,060
what if what if your dependencies you

00:46:15,200 --> 00:46:17,900
want to do all your dependencies right

00:46:17,060 --> 00:46:19,940
so you're going to do a simple

00:46:17,900 --> 00:46:21,670
dependency approach and you can install

00:46:19,940 --> 00:46:23,420
all your dependencies onto the image

00:46:21,670 --> 00:46:25,190
because you don't know what's on the

00:46:23,420 --> 00:46:27,260
image right it's just a box that you're

00:46:25,190 --> 00:46:28,970
talking to you is your s copy so you

00:46:27,260 --> 00:46:30,940
might be blowing stuff away you didn't

00:46:28,970 --> 00:46:33,950
intend to blow away so you might have to

00:46:30,940 --> 00:46:36,500
store that create a manifest of what you

00:46:33,950 --> 00:46:38,980
storage and what you blew away yadda

00:46:36,500 --> 00:46:42,380
yadda yadda so yes that is an obvious

00:46:38,980 --> 00:46:44,900
need right and if I might came across

00:46:42,380 --> 00:46:48,020
that in my work up here because that's

00:46:44,900 --> 00:46:50,660
why I didn't show us the lid module Perl

00:46:48,020 --> 00:46:54,350
thing because it's like it needed 23

00:46:50,660 --> 00:46:59,170
dependencies right so so yes we're

00:46:54,350 --> 00:46:59,170
working on that as a future enhancement

00:47:01,900 --> 00:47:07,070
that is that is probably another great

00:47:05,390 --> 00:47:09,170
approach and if anybody would like to

00:47:07,070 --> 00:47:13,880
try to implement that and send patches

00:47:09,170 --> 00:47:15,860
you know it might it really might and so

00:47:13,880 --> 00:47:18,620
you know I mean seriously I'm not I mean

00:47:15,860 --> 00:47:20,090
I I know it sort of sounds funny bit if

00:47:18,620 --> 00:47:22,190
you want to go out and implement that or

00:47:20,090 --> 00:47:24,650
try it and send it to the mailing list

00:47:22,190 --> 00:47:30,340
we'll make it work right I mean it's a

00:47:24,650 --> 00:47:30,340
great idea it's a great way to do it yes

00:47:37,740 --> 00:47:42,270
you can only deploy what is in your

00:47:40,530 --> 00:47:44,040
workspace and so it has to have been

00:47:42,270 --> 00:47:45,780
built in the workspace and you can't

00:47:44,040 --> 00:47:47,940
build it in the workplace unless it was

00:47:45,780 --> 00:47:59,130
already there be a debt to lad or debts

00:47:47,940 --> 00:48:01,140
will modify or depth will upgrade indeed

00:47:59,130 --> 00:48:03,420
you could just use devtool modified

00:48:01,140 --> 00:48:05,089
don't do a dang thing to it and deploy

00:48:03,420 --> 00:48:12,230
it it's that easy

00:48:05,089 --> 00:48:12,230
absolutely I have done that yeah

00:48:12,290 --> 00:48:15,829
any other questions

00:48:16,280 --> 00:48:22,559
okay so disclaimer Intel's a trademark

00:48:21,210 --> 00:48:26,190
and there were some other trademarks in

00:48:22,559 --> 00:48:28,220
there and this was brought to you by in

00:48:26,190 --> 00:48:33,620
Tulsa thank you

00:48:28,220 --> 00:48:33,620

YouTube URL: https://www.youtube.com/watch?v=CiD7rB35CRE


