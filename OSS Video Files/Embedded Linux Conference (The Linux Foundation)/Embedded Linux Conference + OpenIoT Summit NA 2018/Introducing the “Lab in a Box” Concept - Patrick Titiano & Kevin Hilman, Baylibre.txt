Title: Introducing the “Lab in a Box” Concept - Patrick Titiano & Kevin Hilman, Baylibre
Publication date: 2018-03-13
Playlist: Embedded Linux Conference + OpenIoT Summit NA 2018
Description: 
	Introducing the “Lab in a Box” Concept - Patrick Titiano & Kevin Hilman, Baylibre

Continuous Integration (CI) has been a hot topic for long time. With the growing number of architectures and boards, it becomes impossible for maintainers to validate a patch on all configurations, making it harder and harder to keep the same quality level without leveraging CI and test automation. Recent initiatives like LAVA, KernelCI.org, Fuego, (…) started providing a first answer, however the learning curve remains high, and the HW setup part is not covered.

Baylibre, already involved in KernelCI.org, decided, as part of the AGL project, to go one step further in CI automation and has developed a turnkey solution for developers and companies willing to instantiate a LAVA lab; called “Lab in a Box", it aims at simplifying the configuration of a board farm (HW, SW).

Motivations, challenges, benefits and results will be discussed, with a demo of a first “Lab in a Box” instantiation.

About Kevin Hilman
Kevin has been a Linux user since 1994, and a kernel hacker since 1999 when he started writing drivers and working on kernel ports to new embedded platforms. He has been a driver/kernel developer for Equator Technologies, Texas Instruments, MontaVista, Linaro, and now works for BayLibre.

About Patrick Titiano
Patrick Titiano has 18 years of engineering experience in embedded technologies. Patrick spent 9 years at Texas Instruments as a Power Management (PM) Expert (including OMAP SW PM architecture, requirements, prototyping, System PM use-case optimization). Patrick also developed embedded diagnostic open source tools (“omapconf”, “cpuloadgen”) to debug/track power and performance regressions. In 2012, in association with ex-TI Linux experts, Patrick co-founded BayLibre, an Embedded Linux Consulting Firm, to continue sharing its expertise with the Community. Patrick is used to train a wide range of audiences: engineers, customers, sales, marketing. More recently, Patrick was involved in Google ProjectAra, leading the SW Power Management Team and also joined the AGL initiative, focusing on Continuous Integration.
Captions: 
	00:00:00,000 --> 00:00:05,490
all right thank you everybody for coming

00:00:01,979 --> 00:00:08,400
welcome welcome to your after lunch talk

00:00:05,490 --> 00:00:10,920
hopefully you can stay awake and we can

00:00:08,400 --> 00:00:15,509
as well we'll try to help a little bit

00:00:10,920 --> 00:00:17,369
with that my name is Kevin Hillman and

00:00:15,509 --> 00:00:18,990
this is Patrick Tuohey Tiano hello from

00:00:17,369 --> 00:00:21,300
Bailey bro we're gonna be presenting the

00:00:18,990 --> 00:00:26,490
next talk called Labin about introducing

00:00:21,300 --> 00:00:28,380
lab in a box so a little bit about us

00:00:26,490 --> 00:00:30,689
were kind of embedded Linux consulting

00:00:28,380 --> 00:00:32,669
company doing all sorts of things around

00:00:30,689 --> 00:00:34,110
embedded Linux you can read kind of this

00:00:32,669 --> 00:00:36,030
as you like

00:00:34,110 --> 00:00:38,280
but actually I want to tell a small a

00:00:36,030 --> 00:00:40,230
funny story before I start because last

00:00:38,280 --> 00:00:41,190
time we did a talk like this where they

00:00:40,230 --> 00:00:42,989
cut the ballroom

00:00:41,190 --> 00:00:45,210
yeah they split the ballroom in half I

00:00:42,989 --> 00:00:47,160
was just about to start talking and I

00:00:45,210 --> 00:00:48,930
opened my mouth and then the person from

00:00:47,160 --> 00:00:50,309
the next room over started talking and

00:00:48,930 --> 00:00:52,680
they had missed they had misfired the

00:00:50,309 --> 00:00:54,239
sound so I opened my mouth and somebody

00:00:52,680 --> 00:00:56,309
else's voice started actually coming

00:00:54,239 --> 00:00:57,809
when I was talking it was really weird

00:00:56,309 --> 00:00:59,250
it was like coming from above it was

00:00:57,809 --> 00:01:01,680
kind of it was pretty it was pretty

00:00:59,250 --> 00:01:03,420
funny but that didn't happen this time

00:01:01,680 --> 00:01:04,680
so thanks to our audio team they're

00:01:03,420 --> 00:01:08,840
there on top of it

00:01:04,680 --> 00:01:11,909
you sound ok today yeah sound different

00:01:08,840 --> 00:01:13,850
what was those I don't know what that

00:01:11,909 --> 00:01:16,439
was

00:01:13,850 --> 00:01:18,689
anyway this is a this is a little

00:01:16,439 --> 00:01:20,549
preview so this is the lava box so if

00:01:18,689 --> 00:01:22,530
you if you really are more interested in

00:01:20,549 --> 00:01:25,140
somebody else's talk then our talk

00:01:22,530 --> 00:01:26,340
basically what lava box is I'll tell you

00:01:25,140 --> 00:01:28,259
in one minute and you can go to the

00:01:26,340 --> 00:01:30,030
other talks if you want this is a this

00:01:28,259 --> 00:01:31,920
is a PC case with a bunch of embedded

00:01:30,030 --> 00:01:34,820
Linux boards jammed inside running lava

00:01:31,920 --> 00:01:37,110
and set up for automated testing so

00:01:34,820 --> 00:01:39,270
that's what the lava box they'll have in

00:01:37,110 --> 00:01:41,880
a box is we're gonna go through all the

00:01:39,270 --> 00:01:44,490
details but this is kind of the the

00:01:41,880 --> 00:01:46,590
preview and tomorrow night that the

00:01:44,490 --> 00:01:48,090
technical showcase will have the lava

00:01:46,590 --> 00:01:50,850
box there if you want to come and see it

00:01:48,090 --> 00:01:55,320
you can see inside and and and have a

00:01:50,850 --> 00:01:58,259
look for yourself as well so a little

00:01:55,320 --> 00:01:59,939
bit of background I want to tell you a

00:01:58,259 --> 00:02:01,680
little bit about the kernel CI org

00:01:59,939 --> 00:02:03,240
project because that's kind of the the

00:02:01,680 --> 00:02:04,560
framework or the environment that we've

00:02:03,240 --> 00:02:06,659
been working in and developing and

00:02:04,560 --> 00:02:08,129
contributing that made us kind of come

00:02:06,659 --> 00:02:11,069
to a point of wanting to develop this

00:02:08,129 --> 00:02:13,120
this lava box so if you haven't heard a

00:02:11,069 --> 00:02:15,250
kernel see id or gets kind of a

00:02:13,120 --> 00:02:18,069
a distributed test framework kind of

00:02:15,250 --> 00:02:20,830
built towards built focused on testing

00:02:18,069 --> 00:02:23,500
the upstream Linux kernel so we are

00:02:20,830 --> 00:02:25,360
testing the Linux kernel the latest

00:02:23,500 --> 00:02:26,920
Linux kernel from main line from Linux

00:02:25,360 --> 00:02:28,780
NEX from all the stable trees and

00:02:26,920 --> 00:02:31,599
everything we're testing it on over 250

00:02:28,780 --> 00:02:32,829
different boards so every day any time

00:02:31,599 --> 00:02:36,010
there's a new commit in any of these

00:02:32,829 --> 00:02:38,560
trees main line next stable a handful of

00:02:36,010 --> 00:02:40,329
developer trees it gets built and it

00:02:38,560 --> 00:02:44,049
gets boot tested on a whole bunch of

00:02:40,329 --> 00:02:46,989
platforms mostly arm-in-arm 64 but also

00:02:44,049 --> 00:02:48,549
x86 we're starting to get some interest

00:02:46,989 --> 00:02:50,340
in MIPS and so we have some mips

00:02:48,549 --> 00:02:53,470
platforms that are being added right now

00:02:50,340 --> 00:02:57,519
also risk v is under is in conversation

00:02:53,470 --> 00:02:59,319
as well but that's that's basically what

00:02:57,519 --> 00:03:01,599
kernel CI org is is so it's its main

00:02:59,319 --> 00:03:03,970
thing as it's distributed so there are

00:03:01,599 --> 00:03:05,500
labs all over the world they're about

00:03:03,970 --> 00:03:07,090
ten different labs that have a handful

00:03:05,500 --> 00:03:11,319
of boards each that kind of contribute

00:03:07,090 --> 00:03:12,879
to the kernel CI org and the results are

00:03:11,319 --> 00:03:14,319
reported on the website there's also a

00:03:12,879 --> 00:03:15,819
mailing list where you can sign up for

00:03:14,319 --> 00:03:18,069
this so the kind of target audience has

00:03:15,819 --> 00:03:19,569
been kernel developers so they want to

00:03:18,069 --> 00:03:21,040
see if you make a change to some

00:03:19,569 --> 00:03:22,389
subsystem and you don't you can't test

00:03:21,040 --> 00:03:24,880
it on obviously all the hardware that

00:03:22,389 --> 00:03:26,650
Linux runs on it's kind of a useful tool

00:03:24,880 --> 00:03:28,930
for especially for maintainer x' and

00:03:26,650 --> 00:03:30,489
kernel developers to find out if the

00:03:28,930 --> 00:03:31,840
stuff that they just recently submitted

00:03:30,489 --> 00:03:34,329
actually is still working on the

00:03:31,840 --> 00:03:36,849
mainline on the linux kernel has a test

00:03:34,329 --> 00:03:38,349
on a bunch of different boards so that's

00:03:36,849 --> 00:03:41,109
a little just a little background on

00:03:38,349 --> 00:03:43,030
kernel CI org if you want to know more

00:03:41,109 --> 00:03:44,889
about this project the previous ELC s

00:03:43,030 --> 00:03:47,139
we've done talks on kernel co.org

00:03:44,889 --> 00:03:51,549
project as a whole so there's stuff in

00:03:47,139 --> 00:03:53,290
the ELC archives on on this as well just

00:03:51,549 --> 00:03:55,510
a little bit about the kernel CI loop so

00:03:53,290 --> 00:03:57,280
just standard CI loop there's there's

00:03:55,510 --> 00:03:59,560
you know you check something in to get

00:03:57,280 --> 00:04:01,150
it gets built it gets distributed to all

00:03:59,560 --> 00:04:04,510
the test equipment and then it goes back

00:04:01,150 --> 00:04:07,030
into the so this is kind of the kernel

00:04:04,510 --> 00:04:09,730
see that kernel see i.org piece here has

00:04:07,030 --> 00:04:10,750
kind of contribute is the web UI and

00:04:09,730 --> 00:04:13,629
kind of the back end where all the

00:04:10,750 --> 00:04:15,459
results are stored in the database and

00:04:13,629 --> 00:04:17,109
what's interesting in this context the

00:04:15,459 --> 00:04:18,489
lab in a box contest is so we're talking

00:04:17,109 --> 00:04:20,169
me we're going to be talking mainly

00:04:18,489 --> 00:04:22,120
about this piece so how do you actually

00:04:20,169 --> 00:04:23,710
how the test could actually once the

00:04:22,120 --> 00:04:25,300
once the kernel gets built and is ready

00:04:23,710 --> 00:04:26,590
to run how does it get distributed to

00:04:25,300 --> 00:04:29,650
the hardware that it runs

00:04:26,590 --> 00:04:31,330
so these these this box here is

00:04:29,650 --> 00:04:32,980
basically in one example of a lab a

00:04:31,330 --> 00:04:35,410
board farm and we've done it kind of a

00:04:32,980 --> 00:04:37,600
simple board form crammed into a PC case

00:04:35,410 --> 00:04:41,340
and that'll be in just an example lab

00:04:37,600 --> 00:04:41,340
that can contribute to Colonel CIO org

00:04:44,550 --> 00:04:49,060
so on a related project the Linux

00:04:47,350 --> 00:04:53,560
Foundation automotive-grade Linux

00:04:49,060 --> 00:04:55,840
project is the CI 80 part this

00:04:53,560 --> 00:04:58,810
continuous integration automated testing

00:04:55,840 --> 00:05:00,520
expert group inside of AGL is also

00:04:58,810 --> 00:05:02,800
leveraging lava and kernel CI

00:05:00,520 --> 00:05:05,500
infrastructure as well so we've been

00:05:02,800 --> 00:05:08,290
working with AGL actually to to leverage

00:05:05,500 --> 00:05:10,630
kernel CI and expand the testing for AGL

00:05:08,290 --> 00:05:14,410
to a wider variety of hardware and

00:05:10,630 --> 00:05:16,419
especially more tests so it's it's also

00:05:14,410 --> 00:05:18,100
using this kernel CI infrastructure and

00:05:16,419 --> 00:05:19,690
has a handful of boards that need to be

00:05:18,100 --> 00:05:21,520
tested and also be distributed to

00:05:19,690 --> 00:05:23,200
different labs so different member

00:05:21,520 --> 00:05:24,610
companies from AGL for example could

00:05:23,200 --> 00:05:26,740
have lat the boards that they care about

00:05:24,610 --> 00:05:32,410
and collect them all together and have a

00:05:26,740 --> 00:05:34,960
distributed test infrastructure so all

00:05:32,410 --> 00:05:36,580
that's just kind of background to to get

00:05:34,960 --> 00:05:38,260
to what this lab in the box is and

00:05:36,580 --> 00:05:39,880
that's kind of motivation that brought

00:05:38,260 --> 00:05:40,990
us to actually developing it so Patrick

00:05:39,880 --> 00:05:44,440
will tell you a little bit more about

00:05:40,990 --> 00:05:50,200
the lab in the box itself thank you

00:05:44,440 --> 00:05:53,110
Kevin yeah so in this context let me try

00:05:50,200 --> 00:05:56,140
to explain you and develop what the lab

00:05:53,110 --> 00:06:00,720
in the box concept is and first I start

00:05:56,140 --> 00:06:03,610
with the motivations why did we want to

00:06:00,720 --> 00:06:05,800
design this lab Edinburgh's what it is

00:06:03,610 --> 00:06:08,460
what's the starting point so first our

00:06:05,800 --> 00:06:11,890
motivations well the number one

00:06:08,460 --> 00:06:15,370
motivation was this one this is

00:06:11,890 --> 00:06:18,700
currently what a lab looks like in most

00:06:15,370 --> 00:06:22,590
of the cases and well I think it's time

00:06:18,700 --> 00:06:25,360
to go pro we have done enough of the

00:06:22,590 --> 00:06:28,720
experimental phase and now it has to go

00:06:25,360 --> 00:06:31,090
pro and be a projection great thing yes

00:06:28,720 --> 00:06:33,130
this one is my office by the way yeah I

00:06:31,090 --> 00:06:33,610
know I'm not trying to shame anybody but

00:06:33,130 --> 00:06:34,740
myself

00:06:33,610 --> 00:06:38,970
exactly

00:06:34,740 --> 00:06:40,680
exactly and this is the on the Left this

00:06:38,970 --> 00:06:43,979
is the one we have in available from

00:06:40,680 --> 00:06:47,039
France so that's the first motivation

00:06:43,979 --> 00:06:49,919
but that's not the only one the other

00:06:47,039 --> 00:06:54,240
ones is that we really want to simplify

00:06:49,919 --> 00:06:57,150
the administration of the lava rubs we

00:06:54,240 --> 00:07:00,360
have around the world lava is clearly

00:06:57,150 --> 00:07:02,310
today the leading technology it's a nice

00:07:00,360 --> 00:07:05,130
technology it's still evolving

00:07:02,310 --> 00:07:08,220
technology but it is still difficult to

00:07:05,130 --> 00:07:11,000
get into it the installation process is

00:07:08,220 --> 00:07:14,669
known to be painful it's getting better

00:07:11,000 --> 00:07:17,400
particularly thanks to the doc use the

00:07:14,669 --> 00:07:20,759
use of docker technology but it's still

00:07:17,400 --> 00:07:22,199
complicated we have to do is we we have

00:07:20,759 --> 00:07:24,330
to deal with many different

00:07:22,199 --> 00:07:27,750
configuration files like device types

00:07:24,330 --> 00:07:31,440
devices this is pretty difficult to set

00:07:27,750 --> 00:07:34,440
up particularly for new boards we also

00:07:31,440 --> 00:07:36,180
need to deal with the the serial console

00:07:34,440 --> 00:07:39,510
you may know that when you connect your

00:07:36,180 --> 00:07:42,030
serial USB cable you need to look for

00:07:39,510 --> 00:07:44,820
the right tty device it's not something

00:07:42,030 --> 00:07:49,620
that is automated and well for newcomers

00:07:44,820 --> 00:07:54,470
it's always a pain or just to say that

00:07:49,620 --> 00:07:58,620
we believe that at some point both farms

00:07:54,470 --> 00:08:00,449
users should not actually be aware of

00:07:58,620 --> 00:08:03,000
all these internal technologies at the

00:08:00,449 --> 00:08:06,659
end we'd like someone to build to be

00:08:03,000 --> 00:08:09,180
able to build a CI lab without having to

00:08:06,659 --> 00:08:12,030
deal with all that you just build and

00:08:09,180 --> 00:08:14,430
run and that's it so that's really what

00:08:12,030 --> 00:08:17,669
we want to achieve here author

00:08:14,430 --> 00:08:20,940
motivation is B allow people to easily

00:08:17,669 --> 00:08:23,400
duplicate or scale their labs in the

00:08:20,940 --> 00:08:25,979
first picture we show clearly it will

00:08:23,400 --> 00:08:31,860
break at some point it's ok if we have

00:08:25,979 --> 00:08:34,320
10 20 30 balls eventually but you think

00:08:31,860 --> 00:08:36,899
about 100 board that's not possible

00:08:34,320 --> 00:08:38,909
just think also about cooperations you

00:08:36,899 --> 00:08:41,399
are not going to sell that solution to

00:08:38,909 --> 00:08:44,550
anyone so that that's really one

00:08:41,399 --> 00:08:47,000
motivation here and in the end

00:08:44,550 --> 00:08:49,950
we can say that we want to accelerate

00:08:47,000 --> 00:08:51,720
the deployment of such labs because the

00:08:49,950 --> 00:08:53,820
more labs we have the more testing we

00:08:51,720 --> 00:08:57,029
can do the more branches we can test and

00:08:53,820 --> 00:09:01,620
so the the higher the quality of the

00:08:57,029 --> 00:09:06,240
Linux kernel carrier can be based on

00:09:01,620 --> 00:09:09,450
those motivations we we have listed some

00:09:06,240 --> 00:09:11,459
requirements number one requirement

00:09:09,450 --> 00:09:12,330
being that we want to do an all-in-one

00:09:11,459 --> 00:09:14,850
solution

00:09:12,330 --> 00:09:17,790
integrating everything so the lava

00:09:14,850 --> 00:09:20,640
instance is the master the dispatcher

00:09:17,790 --> 00:09:24,120
all the devices on the test so the

00:09:20,640 --> 00:09:27,089
board's all all the power supply units

00:09:24,120 --> 00:09:29,810
all the connectivity driving everything

00:09:27,089 --> 00:09:32,339
it has to be an all-in-one solution

00:09:29,810 --> 00:09:35,730
because this is developed in the context

00:09:32,339 --> 00:09:37,589
of the idea project we will integrate

00:09:35,730 --> 00:09:40,800
also we want to integrate all the

00:09:37,589 --> 00:09:46,800
community and with reference boards for

00:09:40,800 --> 00:09:49,110
idea as usual the lower the cost is the

00:09:46,800 --> 00:09:50,670
better it is so we'd like to keep the

00:09:49,110 --> 00:09:52,350
cost down

00:09:50,670 --> 00:09:56,459
we want something scalable and

00:09:52,350 --> 00:10:00,029
reproducible but also safe robust and

00:09:56,459 --> 00:10:03,029
maintainable just imagine having those

00:10:00,029 --> 00:10:05,399
wires on the table anything can happen

00:10:03,029 --> 00:10:08,399
you can just stop by and remove a cable

00:10:05,399 --> 00:10:12,930
you have no idea which device it was you

00:10:08,399 --> 00:10:15,180
can wear you know a cup of coffee or a

00:10:12,930 --> 00:10:18,420
glass of water I can fall into it and

00:10:15,180 --> 00:10:20,910
bam it's gone and when you want to add

00:10:18,420 --> 00:10:23,490
or remove a board it's always taking

00:10:20,910 --> 00:10:27,660
it's always taking some time so we want

00:10:23,490 --> 00:10:32,220
to get rid of all that we are we also

00:10:27,660 --> 00:10:34,740
thought of all the home workers so again

00:10:32,220 --> 00:10:37,410
no one we would like to have this in his

00:10:34,740 --> 00:10:39,690
apartment but a PC case what you have

00:10:37,410 --> 00:10:45,420
your PC already sold it's just another

00:10:39,690 --> 00:10:46,200
one and last but not least it has to be

00:10:45,420 --> 00:10:48,959
well-documented

00:10:46,200 --> 00:10:52,860
which we know is a difficult point for

00:10:48,959 --> 00:10:54,990
open source projects what I should have

00:10:52,860 --> 00:10:56,140
actually we should have listed one one

00:10:54,990 --> 00:11:01,570
more requirement is that

00:10:56,140 --> 00:11:05,440
within his open source and it is okay so

00:11:01,570 --> 00:11:07,060
for so there there will be challenges we

00:11:05,440 --> 00:11:10,510
we knew there there will be challenges

00:11:07,060 --> 00:11:13,600
for driving this concept and here are

00:11:10,510 --> 00:11:16,030
the two main ones we know that there

00:11:13,600 --> 00:11:19,480
will be a lot there is a lot of stuff to

00:11:16,030 --> 00:11:22,120
integrate all together all the board

00:11:19,480 --> 00:11:24,460
which has died or they all have

00:11:22,120 --> 00:11:26,410
different dimensions there's no

00:11:24,460 --> 00:11:28,360
standards in to both sides eventually

00:11:26,410 --> 00:11:31,330
you have the business card size and

00:11:28,360 --> 00:11:33,460
couple of standard size but the wiring

00:11:31,330 --> 00:11:36,180
the way to the place the placement of

00:11:33,460 --> 00:11:39,970
all the connectors it's all custom

00:11:36,180 --> 00:11:41,950
we need something what we call a power

00:11:39,970 --> 00:11:45,120
control unit so something that will be

00:11:41,950 --> 00:11:49,450
able to power one power of boards

00:11:45,120 --> 00:11:52,390
dynamically all the connections so the

00:11:49,450 --> 00:11:55,080
wires we need local networking we need

00:11:52,390 --> 00:11:59,380
some we need to connect all the USB

00:11:55,080 --> 00:12:02,520
debugging source and so for each boss

00:11:59,380 --> 00:12:06,610
that we will have to be under test into

00:12:02,520 --> 00:12:09,370
lava box concept we will need to have a

00:12:06,610 --> 00:12:16,660
cable for power for the debug console

00:12:09,370 --> 00:12:19,770
and for the Ethernet so 10.30 cables you

00:12:16,660 --> 00:12:22,840
can imagine the other challenges will be

00:12:19,770 --> 00:12:25,270
given that there's a lot of integrate it

00:12:22,840 --> 00:12:29,860
it still has to be maintainable so

00:12:25,270 --> 00:12:35,320
should be easy for maintainer to add or

00:12:29,860 --> 00:12:38,740
remove board if it is needed and here it

00:12:35,320 --> 00:12:42,280
is this is our lava box so everything

00:12:38,740 --> 00:12:44,590
packed into a PC case so there has been

00:12:42,280 --> 00:12:46,360
you can see that compared to the first

00:12:44,590 --> 00:12:50,910
pictures of the board forms we will

00:12:46,360 --> 00:12:55,320
shown well there's been some road taken

00:12:50,910 --> 00:12:57,520
but let's let's have a look inside so

00:12:55,320 --> 00:13:00,100
here you can see all the different

00:12:57,520 --> 00:13:03,520
pieces we have integrated into this PC

00:13:00,100 --> 00:13:05,260
case and I'm going to try I will

00:13:03,520 --> 00:13:08,390
describe all the pieces all the parts

00:13:05,260 --> 00:13:12,220
but also explain why we have made this

00:13:08,390 --> 00:13:15,680
so why your PC case well

00:13:12,220 --> 00:13:20,240
the PCs you can have a PC for quite

00:13:15,680 --> 00:13:22,250
cheap price today and you already have

00:13:20,240 --> 00:13:24,470
everything you need for to run the lava

00:13:22,250 --> 00:13:31,550
instances you have to know that running

00:13:24,470 --> 00:13:33,740
lava today is it's quite difficult on on

00:13:31,550 --> 00:13:35,560
regular arm-based development boards

00:13:33,740 --> 00:13:39,980
because there is some requirements on

00:13:35,560 --> 00:13:46,280
processing and also on storage and also

00:13:39,980 --> 00:13:49,610
on run we have to download large tough

00:13:46,280 --> 00:13:52,700
files with all the the corner and the

00:13:49,610 --> 00:13:54,620
root FS it has to be decompressed so

00:13:52,700 --> 00:13:57,560
that that's requiring some processing

00:13:54,620 --> 00:14:00,110
and some storage and also all the time

00:13:57,560 --> 00:14:02,480
so we cannot use something that is based

00:14:00,110 --> 00:14:05,930
on flash memory because it's going to be

00:14:02,480 --> 00:14:08,420
burnt into burnt very quickly sorry so

00:14:05,930 --> 00:14:10,370
that means more SSD kind of thing or

00:14:08,420 --> 00:14:14,810
hard drive

00:14:10,370 --> 00:14:17,750
lava is based on Python Java and it runs

00:14:14,810 --> 00:14:20,780
web web server and everything so RAM

00:14:17,750 --> 00:14:23,210
usage is quite high and so in the end we

00:14:20,780 --> 00:14:26,780
decided to use a regular PC but it's an

00:14:23,210 --> 00:14:30,980
only only all-in-one so a mini ITX board

00:14:26,780 --> 00:14:35,150
with a fanless pod core cpu so it's fast

00:14:30,980 --> 00:14:39,560
it has eight gigs of ram and SSD drive

00:14:35,150 --> 00:14:41,780
for fast access the second interesting

00:14:39,560 --> 00:14:44,839
point of using a PC case is because

00:14:41,780 --> 00:14:49,670
there is a very powerful and cheap power

00:14:44,839 --> 00:14:53,390
supply unit so for like a few tens of

00:14:49,670 --> 00:14:56,330
dollars you can get a 500 watt power

00:14:53,390 --> 00:14:58,960
supply regulated stabilized protected

00:14:56,330 --> 00:15:02,540
you have five volt and twelve volts

00:14:58,960 --> 00:15:05,900
output which are the standard voltage

00:15:02,540 --> 00:15:08,270
supplies for our development boards so

00:15:05,900 --> 00:15:15,560
it has many connectors so we could reuse

00:15:08,270 --> 00:15:18,030
that for to power all the boards or I

00:15:15,560 --> 00:15:19,710
mentioned that we needed something you

00:15:18,030 --> 00:15:23,780
need to control the power to the board

00:15:19,710 --> 00:15:26,160
and here we have decided to reuse or own

00:15:23,780 --> 00:15:29,640
power measurement and power cycling

00:15:26,160 --> 00:15:33,090
solution it's called Acme so it's based

00:15:29,640 --> 00:15:34,800
on a cape for the big urban black and

00:15:33,090 --> 00:15:38,310
with power measurements and power

00:15:34,800 --> 00:15:41,400
switching probes so that's what we are

00:15:38,310 --> 00:15:45,330
using here to control the there is six

00:15:41,400 --> 00:15:47,550
boards integrating in this example there

00:15:45,330 --> 00:15:51,120
is obviously a USB europe to collect all

00:15:47,550 --> 00:15:55,110
the debug consoles there's a network

00:15:51,120 --> 00:15:56,700
switch to give connectivity local

00:15:55,110 --> 00:15:59,700
connectivity to all the device on those

00:15:56,700 --> 00:16:05,160
tests so this generates a local internal

00:15:59,700 --> 00:16:09,930
network and what what we have integrated

00:16:05,160 --> 00:16:14,850
in this example is a raspberry pi 3 good

00:16:09,930 --> 00:16:19,010
ol big urban black brand-new Lou potato

00:16:14,850 --> 00:16:21,840
ball so this is running am logic s 905 X

00:16:19,010 --> 00:16:23,910
processor and the Libra is actually in

00:16:21,840 --> 00:16:25,680
charge of doing G upstream support for

00:16:23,910 --> 00:16:28,650
this board so that's why it's integrated

00:16:25,680 --> 00:16:35,670
here we have a dragon board from

00:16:28,650 --> 00:16:38,580
Qualcomm based on Snapdragon 410 C since

00:16:35,670 --> 00:16:44,130
this is used for the AGL project we have

00:16:38,580 --> 00:16:47,430
the mandatory okay Erica m3 starter

00:16:44,130 --> 00:16:50,760
keyboard from witnesses and then also we

00:16:47,430 --> 00:16:56,130
have integrated the cyber light imx6

00:16:50,760 --> 00:16:58,470
bought from annex B so here's a closer

00:16:56,130 --> 00:17:00,390
loop on the riving and all the different

00:16:58,470 --> 00:17:02,600
parts we have integrated into the PC

00:17:00,390 --> 00:17:02,600
case

00:17:06,750 --> 00:17:11,740
okay so let's talk a little bit more

00:17:09,460 --> 00:17:14,340
about the internals of the the hardware

00:17:11,740 --> 00:17:18,520
and the and the software especially

00:17:14,340 --> 00:17:19,990
pardon me seems to be related to it

00:17:18,520 --> 00:17:23,350
seems to be related to me pushing the

00:17:19,990 --> 00:17:25,660
button on this than win it so maybe I'll

00:17:23,350 --> 00:17:30,100
use the maybe I'll use the new keyboard

00:17:25,660 --> 00:17:31,390
here unless that's actually somebody

00:17:30,100 --> 00:17:35,680
else's voice that I'm from another

00:17:31,390 --> 00:17:38,470
matter okay so as Patrick mentioned

00:17:35,680 --> 00:17:40,990
there's lots of USB so there's actually

00:17:38,470 --> 00:17:43,630
USB hub inside the case to connect all

00:17:40,990 --> 00:17:46,270
this together so primarily the USB is

00:17:43,630 --> 00:17:48,100
used we're using USB for USB serial

00:17:46,270 --> 00:17:49,930
converters for all the serial consoles

00:17:48,100 --> 00:17:51,520
for all the board's so because this is

00:17:49,930 --> 00:17:53,260
an embedded conference everybody knows

00:17:51,520 --> 00:17:55,200
about hooking up the serial to their to

00:17:53,260 --> 00:17:58,120
their board so that's no surprise

00:17:55,200 --> 00:17:59,770
one thing we did notice over the years

00:17:58,120 --> 00:18:02,790
of kind of maintaining lots of boards in

00:17:59,770 --> 00:18:05,320
a few labs is that I've or we've have

00:18:02,790 --> 00:18:06,850
USB serial dongles from just about every

00:18:05,320 --> 00:18:08,350
vendor on the planet whatever it happens

00:18:06,850 --> 00:18:10,120
to be cheap when we're buying and what

00:18:08,350 --> 00:18:11,680
we've noticed over the years is the the

00:18:10,120 --> 00:18:13,420
cheaper ones just after a couple months

00:18:11,680 --> 00:18:16,030
you find them they just they just flake

00:18:13,420 --> 00:18:17,470
out they just stop working you unplug it

00:18:16,030 --> 00:18:19,120
you physically unplug it you plug it

00:18:17,470 --> 00:18:21,130
back in boom it's working again but

00:18:19,120 --> 00:18:23,590
obviously that's not very that's not

00:18:21,130 --> 00:18:25,960
useful for automation so what we found

00:18:23,590 --> 00:18:27,730
over the years is the FTDI ones are just

00:18:25,960 --> 00:18:30,220
you know they're way more expensive but

00:18:27,730 --> 00:18:32,200
they're also way more reliable and then

00:18:30,220 --> 00:18:34,540
in general the FTDI ones also have

00:18:32,200 --> 00:18:37,000
unique serial numbers on them so like

00:18:34,540 --> 00:18:39,520
you dev rules can be nice for unique you

00:18:37,000 --> 00:18:41,590
know identifying a cable that's put to a

00:18:39,520 --> 00:18:43,900
board because it's got a unique ID so

00:18:41,590 --> 00:18:45,370
that just it simplifies things cost a

00:18:43,900 --> 00:18:48,700
little more but it greatly simplifies

00:18:45,370 --> 00:18:50,680
things and yeah I have no idea why some

00:18:48,700 --> 00:18:52,690
of those some of those USB dongles just

00:18:50,680 --> 00:18:54,520
stopped working there the tty just

00:18:52,690 --> 00:18:55,990
disappears from Linux and you unplug and

00:18:54,520 --> 00:19:00,310
they come back so I haven't actually

00:18:55,990 --> 00:19:04,570
debug that but anyway so yeah so we use

00:19:00,310 --> 00:19:06,460
FTDI for that so USB the serial consoles

00:19:04,570 --> 00:19:09,490
are one USB some boards also have

00:19:06,460 --> 00:19:12,700
another USB just for power so you can

00:19:09,490 --> 00:19:14,830
power that from the hub or you can

00:19:12,700 --> 00:19:17,020
so there's yet yet more USB serial

00:19:14,830 --> 00:19:18,909
cables also some boards that are driven

00:19:17,020 --> 00:19:20,770
over fastboot you sometimes there's a

00:19:18,909 --> 00:19:22,960
separate USB connection for the fastboot

00:19:20,770 --> 00:19:24,700
as well so you have one for the serial

00:19:22,960 --> 00:19:26,230
console one for the fastboot so this is

00:19:24,700 --> 00:19:28,659
why you don't just need a you don't need

00:19:26,230 --> 00:19:32,380
a single USB part for port per board

00:19:28,659 --> 00:19:33,460
sometimes you need two and also some of

00:19:32,380 --> 00:19:34,899
the board's that if they don't have

00:19:33,460 --> 00:19:36,429
actually physically networking they

00:19:34,899 --> 00:19:38,649
might have USB gadget Ethernet or

00:19:36,429 --> 00:19:40,360
something so there's another USB cable

00:19:38,649 --> 00:19:42,399
to do the so that they can do their

00:19:40,360 --> 00:19:44,860
networking over USB gadget for example

00:19:42,399 --> 00:19:46,029
so you end up with you know for just a

00:19:44,860 --> 00:19:48,610
few boards you end up with quite a few

00:19:46,029 --> 00:19:51,130
USB cables and so you want to have a you

00:19:48,610 --> 00:19:56,140
know reasonable sized hub and reliable

00:19:51,130 --> 00:19:57,730
hub as well and yeah so that's just all

00:19:56,140 --> 00:20:01,240
the different types of USB that are

00:19:57,730 --> 00:20:03,429
involved in this how big is the USB port

00:20:01,240 --> 00:20:06,010
I think we only we we have a 10 port USB

00:20:03,429 --> 00:20:08,760
in there right now for six boards yeah

00:20:06,010 --> 00:20:08,760
yeah go ahead

00:20:10,049 --> 00:20:13,230
how do you

00:20:14,600 --> 00:20:21,509
mm-hmm yeah so the question is how do

00:20:20,009 --> 00:20:22,980
you secure the jumpers on some of these

00:20:21,509 --> 00:20:24,600
boards like a Raspberry Pi where there

00:20:22,980 --> 00:20:25,860
might not be good connections I mean you

00:20:24,600 --> 00:20:27,960
can answer that because you actually put

00:20:25,860 --> 00:20:30,480
it all together yeah we usually try to

00:20:27,960 --> 00:20:34,049
stick the cable so because yes we know

00:20:30,480 --> 00:20:36,450
that the connection is could be tricky

00:20:34,049 --> 00:20:41,370
and so we secure the cable itself so

00:20:36,450 --> 00:20:46,139
that it sticks everything together and

00:20:41,370 --> 00:20:47,940
it works we eat it the lava box took the

00:20:46,139 --> 00:20:52,559
plane a couple of times and it's still

00:20:47,940 --> 00:20:55,320
working so that's all test you also have

00:20:52,559 --> 00:21:04,440
a hot glue at the end if you really you

00:20:55,320 --> 00:21:08,460
actually yes yes so the question was can

00:21:04,440 --> 00:21:12,720
you can you buy it preassembled yes and

00:21:08,460 --> 00:21:14,159
so power distribution so like patrick

00:21:12,720 --> 00:21:16,110
said we're using just a standard PC

00:21:14,159 --> 00:21:18,389
power supply the nice thing about these

00:21:16,110 --> 00:21:20,700
ATX applies there's five volts and 12

00:21:18,389 --> 00:21:23,759
volts and there's also the standby power

00:21:20,700 --> 00:21:25,440
on the ATX supply that's the five volts

00:21:23,759 --> 00:21:26,999
so you could use that to run like the

00:21:25,440 --> 00:21:29,399
BeagleBone that's controlling the Acne

00:21:26,999 --> 00:21:31,950
for example so there are there are ways

00:21:29,399 --> 00:21:35,340
you could use the the non switched 5

00:21:31,950 --> 00:21:37,289
volt as well and the other thing we

00:21:35,340 --> 00:21:39,419
learned the hard way the first build we

00:21:37,289 --> 00:21:41,330
did of this box in France we bought a

00:21:39,419 --> 00:21:43,679
kind of a lower end power supply and

00:21:41,330 --> 00:21:45,509
didn't realize until a couple months ago

00:21:43,679 --> 00:21:47,369
when we took the box to Japan that it

00:21:45,509 --> 00:21:50,490
actually didn't do 110 volts it only did

00:21:47,369 --> 00:21:51,720
220 volts for Europe and so we actually

00:21:50,490 --> 00:21:53,220
had to replace them had to buy another

00:21:51,720 --> 00:21:55,590
power supply one that we could actually

00:21:53,220 --> 00:21:57,539
do 110 volts so that worked because the

00:21:55,590 --> 00:22:00,629
this lava box was travelling to Japan

00:21:57,539 --> 00:22:02,190
and then traveling here so yeah if we

00:22:00,629 --> 00:22:03,480
learned that we didn't even we just kind

00:22:02,190 --> 00:22:04,740
of assumed that the power supply was

00:22:03,480 --> 00:22:06,690
going to do both but it turns out the

00:22:04,740 --> 00:22:10,320
cheaper ones may only may only do one

00:22:06,690 --> 00:22:11,909
voltage show so for power switching

00:22:10,320 --> 00:22:13,999
there's a couple ways to do this the the

00:22:11,909 --> 00:22:16,440
cheap way there's lots of cheap kind of

00:22:13,999 --> 00:22:19,049
GPIO controlled relay boards out there

00:22:16,440 --> 00:22:20,460
you know four of them or 16 of them or

00:22:19,049 --> 00:22:22,049
whatever those are pretty inexpensive

00:22:20,460 --> 00:22:24,179
you can drive them right from a

00:22:22,049 --> 00:22:25,240
BeagleBone or from a Raspberry Pi or any

00:22:24,179 --> 00:22:28,960
sort of embedded board

00:22:25,240 --> 00:22:30,880
doing as GPIO connectors so that's one

00:22:28,960 --> 00:22:32,620
way we chose to do because we have this

00:22:30,880 --> 00:22:34,330
Bailey Brack kneeboard we use that

00:22:32,620 --> 00:22:37,300
because we have them and they're easy

00:22:34,330 --> 00:22:38,800
for us to use and so that gives it a

00:22:37,300 --> 00:22:40,510
little bit more expensive but it also

00:22:38,800 --> 00:22:42,340
gives you the ability to not only switch

00:22:40,510 --> 00:22:44,290
power and power cycle but it also gives

00:22:42,340 --> 00:22:46,600
you the measure power at the at the

00:22:44,290 --> 00:22:49,030
board level so that's a useful feature

00:22:46,600 --> 00:22:50,710
and because there's only we can only fit

00:22:49,030 --> 00:22:52,390
a finite number of boards in here that

00:22:50,710 --> 00:22:54,430
the Acne actually does eight eight

00:22:52,390 --> 00:22:58,750
channels and so that's about what you

00:22:54,430 --> 00:23:04,060
could cram into a PC at this point at

00:22:58,750 --> 00:23:05,950
least and have it look reasonable so

00:23:04,060 --> 00:23:07,240
networking that you saw the switch in

00:23:05,950 --> 00:23:09,700
there so all the boards are doing

00:23:07,240 --> 00:23:11,440
networking because the the way that lava

00:23:09,700 --> 00:23:12,760
works typically is the board boots up

00:23:11,440 --> 00:23:14,410
and did the bootloader whether it's you

00:23:12,760 --> 00:23:17,170
boot to bear box or something and it

00:23:14,410 --> 00:23:18,820
uses TFTP to actually fetch its kernel

00:23:17,170 --> 00:23:20,050
and it's device tree and it's RAM disk

00:23:18,820 --> 00:23:22,450
and so on so all the boards are

00:23:20,050 --> 00:23:24,520
essentially net booting to get off the

00:23:22,450 --> 00:23:27,760
ground and so they all need to be

00:23:24,520 --> 00:23:29,530
connected on the network and we've done

00:23:27,760 --> 00:23:31,330
this with docker internal networking so

00:23:29,530 --> 00:23:32,740
all the boards inside the PC are

00:23:31,330 --> 00:23:35,590
actually on kind of their own private

00:23:32,740 --> 00:23:37,090
network and then the Lava server kind of

00:23:35,590 --> 00:23:38,350
exposes itself to the rest of the world

00:23:37,090 --> 00:23:41,830
but all the boards are kind of on an

00:23:38,350 --> 00:23:43,480
internal lan which is nice because

00:23:41,830 --> 00:23:45,040
sometimes boards especially running

00:23:43,480 --> 00:23:47,380
mainline kernels do interesting things

00:23:45,040 --> 00:23:48,610
to your network and if you just hook it

00:23:47,380 --> 00:23:50,500
up to your office land you might have

00:23:48,610 --> 00:23:52,180
some surprises when boards come up with

00:23:50,500 --> 00:23:53,620
hard-coded IP addresses that happen to

00:23:52,180 --> 00:23:55,900
match your router or something and it's

00:23:53,620 --> 00:23:59,080
in your it's in your office you might

00:23:55,900 --> 00:24:00,400
have some problems so it's a way to just

00:23:59,080 --> 00:24:03,850
it's a nice way to keep things kind of

00:24:00,400 --> 00:24:05,380
isolated and the it doesn't need

00:24:03,850 --> 00:24:06,820
internet access if you want to hook it

00:24:05,380 --> 00:24:08,500
up to something like kernel CI because

00:24:06,820 --> 00:24:10,360
kernel CI is doing some centralized

00:24:08,500 --> 00:24:12,370
build and stuff and then can send jobs

00:24:10,360 --> 00:24:14,020
you can do push or pull from kernel CI

00:24:12,370 --> 00:24:16,120
so you need an internet connection if

00:24:14,020 --> 00:24:18,220
you wanted to hook it up to you know

00:24:16,120 --> 00:24:19,420
some external projects but there's no

00:24:18,220 --> 00:24:21,370
reason you can't run this on its

00:24:19,420 --> 00:24:23,580
internal land and submit jobs locally as

00:24:21,370 --> 00:24:23,580
well

00:24:27,120 --> 00:24:31,630
so on to the software piece we've been

00:24:30,309 --> 00:24:33,960
talking about lava a little bit so I'll

00:24:31,630 --> 00:24:36,549
give a little bit of background on lava

00:24:33,960 --> 00:24:37,960
similarly the ELC is over the years has

00:24:36,549 --> 00:24:40,120
had several talks on kind of other

00:24:37,960 --> 00:24:41,620
aspects of lava and details so I'm going

00:24:40,120 --> 00:24:43,120
to give kind of a high-level picture of

00:24:41,620 --> 00:24:45,760
lava and particularly just the pieces

00:24:43,120 --> 00:24:48,700
that we are so you see how it's used in

00:24:45,760 --> 00:24:50,380
this project but lavas basically cut

00:24:48,700 --> 00:24:52,929
into two pieces it's got a master in

00:24:50,380 --> 00:24:55,809
slave part so the slave is also called a

00:24:52,929 --> 00:24:58,450
dispatcher and lava documentation so the

00:24:55,809 --> 00:25:00,010
lava dispatcher is kind of the the piece

00:24:58,450 --> 00:25:01,299
that actually manages physically all

00:25:00,010 --> 00:25:03,370
that the physical in actions to the

00:25:01,299 --> 00:25:05,380
board's and it provides all the services

00:25:03,370 --> 00:25:07,419
that the board's use so like I said when

00:25:05,380 --> 00:25:10,150
the board boots up it does net booting

00:25:07,419 --> 00:25:12,160
so typically do a DHCP and to get an IP

00:25:10,150 --> 00:25:14,740
address and then TFTP its kernel and

00:25:12,160 --> 00:25:16,720
device tree and ram disk and sometimes

00:25:14,740 --> 00:25:18,760
it'll then mount a file system over NFS

00:25:16,720 --> 00:25:20,470
so the lava the lava dispatcher is

00:25:18,760 --> 00:25:23,559
actually what's serving the NFS file

00:25:20,470 --> 00:25:26,080
system or in some cases NBD file system

00:25:23,559 --> 00:25:27,340
and sometimes for running tests you the

00:25:26,080 --> 00:25:29,620
the board will boot up and then it wants

00:25:27,340 --> 00:25:31,870
to go fetch some tests or set fetch some

00:25:29,620 --> 00:25:34,120
files to run tests and so the dispatcher

00:25:31,870 --> 00:25:35,590
can also provide a web service so that

00:25:34,120 --> 00:25:38,320
the boards can actually fetch things or

00:25:35,590 --> 00:25:39,850
tests and web web tools or whatever so

00:25:38,320 --> 00:25:41,919
the dispatcher basically provides kind

00:25:39,850 --> 00:25:43,210
of the interface between the boards and

00:25:41,919 --> 00:25:45,520
the rest of the world and also a bunch

00:25:43,210 --> 00:25:49,270
of services that it can use so those are

00:25:45,520 --> 00:25:51,370
all managed by the lava dispatcher it

00:25:49,270 --> 00:25:53,350
also manages the power control so when

00:25:51,370 --> 00:25:56,470
when the lava gets a job for a given

00:25:53,350 --> 00:25:58,120
board it knows it just has to power

00:25:56,470 --> 00:25:59,950
cycle that board to start a booting so

00:25:58,120 --> 00:26:01,870
the dispatcher manages all that stuff so

00:25:59,950 --> 00:26:03,790
you have to when you define a board you

00:26:01,870 --> 00:26:05,230
tell it what you know how basically you

00:26:03,790 --> 00:26:06,730
give it a command line or give it some

00:26:05,230 --> 00:26:08,860
some tool that it's going to use to

00:26:06,730 --> 00:26:10,720
actually will do the power cycling so in

00:26:08,860 --> 00:26:12,940
this case it'll be a little command line

00:26:10,720 --> 00:26:14,500
that tells the the Acne board to to

00:26:12,940 --> 00:26:16,830
switch the switch the power on a

00:26:14,500 --> 00:26:19,270
particular port or something like that

00:26:16,830 --> 00:26:21,309
there's also this project called PD you

00:26:19,270 --> 00:26:23,169
daemon that's out there that's that's

00:26:21,309 --> 00:26:25,299
pretty that's used in a lot of lava labs

00:26:23,169 --> 00:26:27,280
it's kind of a it's kind of way to

00:26:25,299 --> 00:26:29,020
abstract different types of PD use so it

00:26:27,280 --> 00:26:31,510
can do acne it could do you know a rack

00:26:29,020 --> 00:26:33,130
mount a pc type web web switchers and

00:26:31,510 --> 00:26:35,530
things like that it's just an

00:26:33,130 --> 00:26:37,179
abstraction for PDUs that's a it's a

00:26:35,530 --> 00:26:38,370
useful tool it's not a necessary tool

00:26:37,179 --> 00:26:40,600
but

00:26:38,370 --> 00:26:42,520
but anyway the point is that that it's

00:26:40,600 --> 00:26:44,680
the Lava dispatcher that actually you

00:26:42,520 --> 00:26:47,220
configure for that very device basically

00:26:44,680 --> 00:26:49,900
how to how to do the power cycling it

00:26:47,220 --> 00:26:51,700
also knows about the serial consoles and

00:26:49,900 --> 00:26:54,490
where the you Dev rules are for your

00:26:51,700 --> 00:26:57,160
nice you nice FTDI cables with unique

00:26:54,490 --> 00:26:59,590
IDs that all gets configured on the Lava

00:26:57,160 --> 00:27:01,030
dispatcher side and then basically how

00:26:59,590 --> 00:27:03,850
to connect to the consoles whether it's

00:27:01,030 --> 00:27:05,260
sir to net or some other you need to

00:27:03,850 --> 00:27:06,670
tell Lava how it's going to connect to

00:27:05,260 --> 00:27:08,170
the serial console thetic so they can

00:27:06,670 --> 00:27:08,860
start sending commands to you mood and

00:27:08,170 --> 00:27:11,320
things like that

00:27:08,860 --> 00:27:12,880
so all that stuff and all the other USB

00:27:11,320 --> 00:27:18,250
connections fast food and everything is

00:27:12,880 --> 00:27:20,050
managed by the the Lava dispatcher and

00:27:18,250 --> 00:27:22,210
yeah feel free to stop or raise your

00:27:20,050 --> 00:27:25,650
hand or yell any time if you have if you

00:27:22,210 --> 00:27:28,510
have questions along the way all right

00:27:25,650 --> 00:27:32,110
so the Lava master side or the Lava

00:27:28,510 --> 00:27:33,940
server side is kind of the the basically

00:27:32,110 --> 00:27:36,220
provides the web interface or provides a

00:27:33,940 --> 00:27:38,830
way that you interact with lava from the

00:27:36,220 --> 00:27:40,570
web to control things and stop things it

00:27:38,830 --> 00:27:43,150
also provides when you're sending lots

00:27:40,570 --> 00:27:44,760
of jobs to say you have one one

00:27:43,150 --> 00:27:46,960
particular type of board and you have

00:27:44,760 --> 00:27:49,150
want to send a whole bunch of jobs to a

00:27:46,960 --> 00:27:51,250
BeagleBone for example and you only have

00:27:49,150 --> 00:27:53,050
one BeagleBone the lava server is the

00:27:51,250 --> 00:27:54,610
thing that kind of gets all the jobs and

00:27:53,050 --> 00:27:56,860
schedules them based on priority and

00:27:54,610 --> 00:27:59,140
kind of queues them all up so it has a

00:27:56,860 --> 00:28:01,120
it has a probably already type of thing

00:27:59,140 --> 00:28:04,030
where jobs can have different levels of

00:28:01,120 --> 00:28:06,940
priority and preempted and so on it also

00:28:04,030 --> 00:28:09,010
provides an XML RPC API for other tools

00:28:06,940 --> 00:28:11,770
non web type tools where you can drive

00:28:09,010 --> 00:28:14,290
lava from some Python scripts or other

00:28:11,770 --> 00:28:15,520
the lava project itself provides a few

00:28:14,290 --> 00:28:17,110
command line tools that actually

00:28:15,520 --> 00:28:19,510
interact directly with this API so you

00:28:17,110 --> 00:28:21,190
can do a lot of stuff by driving lava

00:28:19,510 --> 00:28:22,990
from the command line that's all

00:28:21,190 --> 00:28:25,900
interacting with the lava server and

00:28:22,990 --> 00:28:27,460
then it also provides kind of the the

00:28:25,900 --> 00:28:29,050
way that boards are actually described

00:28:27,460 --> 00:28:31,840
all the stuff about that I was saying

00:28:29,050 --> 00:28:33,520
about how boards are configured the

00:28:31,840 --> 00:28:35,920
serial port the power switches all that

00:28:33,520 --> 00:28:37,480
stuff that description the description

00:28:35,920 --> 00:28:39,520
files actually even though they're

00:28:37,480 --> 00:28:41,080
connected to the lava slave the

00:28:39,520 --> 00:28:42,760
description and configure files actually

00:28:41,080 --> 00:28:44,440
live on the lava master this is one of

00:28:42,760 --> 00:28:46,810
the more confusing things about about

00:28:44,440 --> 00:28:50,050
lava but even though all the physical

00:28:46,810 --> 00:28:51,670
connections are on the slave you define

00:28:50,050 --> 00:28:51,910
the configuration files and store them

00:28:51,670 --> 00:28:55,540
on

00:28:51,910 --> 00:28:56,950
master anyway and the these types of

00:28:55,540 --> 00:28:59,740
files are thinking in lava the

00:28:56,950 --> 00:29:02,800
terminology is device type and device so

00:28:59,740 --> 00:29:04,930
a device type is like a board like a

00:29:02,800 --> 00:29:07,300
Beagle bone or a dragon board or

00:29:04,930 --> 00:29:10,000
something so it defines about a kind of

00:29:07,300 --> 00:29:12,460
a class of boards so you might have you

00:29:10,000 --> 00:29:14,860
might have ten beaglebones they'd all

00:29:12,460 --> 00:29:17,440
share the same device type but each one

00:29:14,860 --> 00:29:19,450
of them has a unique serial console and

00:29:17,440 --> 00:29:21,100
an unique way to power side of a cycle

00:29:19,450 --> 00:29:23,080
it so they're all of the same device

00:29:21,100 --> 00:29:25,120
type but every one would have a separate

00:29:23,080 --> 00:29:26,470
device configuration file where you tell

00:29:25,120 --> 00:29:29,230
it where the serial console is and where

00:29:26,470 --> 00:29:30,790
the power is and stuff like that so

00:29:29,230 --> 00:29:32,950
that's kind of the device type and

00:29:30,790 --> 00:29:34,560
device is the Lava terminology for the

00:29:32,950 --> 00:29:38,350
terminology for making that difference

00:29:34,560 --> 00:29:40,270
and the important part here is what

00:29:38,350 --> 00:29:42,670
we've done is kind of taken a lava

00:29:40,270 --> 00:29:44,860
install and kind of docker eyes dit so

00:29:42,670 --> 00:29:47,260
we've made separate docker container for

00:29:44,860 --> 00:29:49,330
the the master separate docker container

00:29:47,260 --> 00:29:52,570
for the slave and we kind of put them

00:29:49,330 --> 00:29:53,770
together using docker compose so you

00:29:52,570 --> 00:29:55,630
can't really read this

00:29:53,770 --> 00:29:57,370
yeah mo file probably very well but it

00:29:55,630 --> 00:29:59,350
doesn't really matter the the point is

00:29:57,370 --> 00:30:02,160
that it's it's kind of using this docker

00:29:59,350 --> 00:30:04,240
compose tool which allows you to define

00:30:02,160 --> 00:30:05,470
basically applications that are made up

00:30:04,240 --> 00:30:07,050
of multiple containers and how the

00:30:05,470 --> 00:30:09,220
containers actually talk to each other

00:30:07,050 --> 00:30:11,550
so that's what we've done so we've got

00:30:09,220 --> 00:30:14,620
the the slave as a separate container

00:30:11,550 --> 00:30:16,300
the masters as a separate container and

00:30:14,620 --> 00:30:17,980
by default they'll run on the same

00:30:16,300 --> 00:30:19,390
machine but you could also run those you

00:30:17,980 --> 00:30:23,310
could run them on different machines as

00:30:19,390 --> 00:30:23,310
well if you want to run yeah go ahead

00:30:23,520 --> 00:30:29,320
pardon so right now in the in the

00:30:27,670 --> 00:30:31,750
current software that's available it's

00:30:29,320 --> 00:30:34,000
still totally plugged into the lava

00:30:31,750 --> 00:30:35,860
master but we have a work-in-progress

00:30:34,000 --> 00:30:37,240
actually have a development branch where

00:30:35,860 --> 00:30:40,090
we yet you can actually connect it to an

00:30:37,240 --> 00:30:42,670
ax either have the the database itself

00:30:40,090 --> 00:30:45,910
be a separate container or just connect

00:30:42,670 --> 00:30:46,870
to some existing database yeah sorry I

00:30:45,910 --> 00:30:48,490
didn't repeat the question the question

00:30:46,870 --> 00:30:50,380
was what about the the post grey

00:30:48,490 --> 00:30:53,470
database and you know where is it and

00:30:50,380 --> 00:30:55,900
how was it containerized so it's yeah

00:30:53,470 --> 00:30:57,610
right now it's it's still still into

00:30:55,900 --> 00:31:00,750
integrated but it is a it's been a

00:30:57,610 --> 00:31:00,750
request and it's in progress

00:31:01,670 --> 00:31:09,680
oh the other thing I the down here the

00:31:07,820 --> 00:31:11,840
the third container here is actually a

00:31:09,680 --> 00:31:14,630
squid it's a with just a web cache

00:31:11,840 --> 00:31:16,310
because lavas lava will when you give it

00:31:14,630 --> 00:31:17,720
a lava job you can tell it to download

00:31:16,310 --> 00:31:19,010
the kernel from here and download the

00:31:17,720 --> 00:31:20,990
RAM disk from here and so often it's

00:31:19,010 --> 00:31:22,970
running the same jobs over and over with

00:31:20,990 --> 00:31:24,380
the same kernel so we put a squid cache

00:31:22,970 --> 00:31:26,090
in here as well so if you're actually

00:31:24,380 --> 00:31:27,380
doing multiple jobs that are downloading

00:31:26,090 --> 00:31:29,800
the same images it's just a little bit

00:31:27,380 --> 00:31:29,800
of a speed-up

00:31:34,720 --> 00:31:39,860
so all the stuff we're talking about

00:31:37,820 --> 00:31:42,890
here is just kind of the way we decided

00:31:39,860 --> 00:31:45,290
to put things together so this is just

00:31:42,890 --> 00:31:47,120
one example obviously we've had a lot of

00:31:45,290 --> 00:31:48,890
questions on what can I do can I add

00:31:47,120 --> 00:31:51,020
this and can I add that and can I change

00:31:48,890 --> 00:31:53,240
this and you know this is open source

00:31:51,020 --> 00:31:54,770
this is this is an open world you can

00:31:53,240 --> 00:31:56,990
basically do whatever you want so I just

00:31:54,770 --> 00:31:58,670
wanted to be clear that what we've done

00:31:56,990 --> 00:32:00,620
and put it all together is kind of our

00:31:58,670 --> 00:32:04,190
way of doing it our demo it's mainly a

00:32:00,620 --> 00:32:05,810
idea to demonstrate the concept you can

00:32:04,190 --> 00:32:08,090
pick your own boards you can do whatever

00:32:05,810 --> 00:32:10,160
you want you can pick a large board and

00:32:08,090 --> 00:32:11,630
jam it in there any way you want we've

00:32:10,160 --> 00:32:14,060
done only small boards because we're

00:32:11,630 --> 00:32:15,350
using slidable basically disk drawers to

00:32:14,060 --> 00:32:16,940
get in there but if you have a big board

00:32:15,350 --> 00:32:19,220
you want to get in there well you buy a

00:32:16,940 --> 00:32:21,050
bigger PC and cram it in there and do do

00:32:19,220 --> 00:32:24,680
whatever you want but the so yeah it's

00:32:21,050 --> 00:32:27,770
obviously it's this is kind of DIY we

00:32:24,680 --> 00:32:29,030
have our example but you can do you can

00:32:27,770 --> 00:32:31,130
do it however you like and we've

00:32:29,030 --> 00:32:33,950
documented on the I didn't mention here

00:32:31,130 --> 00:32:36,380
on the the bottom of this this page here

00:32:33,950 --> 00:32:38,990
shows the lava docker project the github

00:32:36,380 --> 00:32:40,580
for the lava docker project and the

00:32:38,990 --> 00:32:42,080
readme on that project actually goes

00:32:40,580 --> 00:32:43,370
through the documentation that the

00:32:42,080 --> 00:32:44,630
different pieces here and how we put it

00:32:43,370 --> 00:32:47,000
together and how you actually would

00:32:44,630 --> 00:32:48,950
configure if you are again the the

00:32:47,000 --> 00:32:52,130
QuickStart for the lava doctor project

00:32:48,950 --> 00:32:53,990
is a QM you only so there's no hardware

00:32:52,130 --> 00:32:55,670
but so the it'll show you how you set

00:32:53,990 --> 00:32:57,620
this up really quickly with just a qmu

00:32:55,670 --> 00:33:00,170
device and then it'll go through how to

00:32:57,620 --> 00:33:01,580
start adding boards one by one but

00:33:00,170 --> 00:33:03,110
obviously the qmu is the easiest one to

00:33:01,580 --> 00:33:09,040
describe because there's no there's no

00:33:03,110 --> 00:33:09,040
physical connections to worry about yeah

00:33:16,370 --> 00:33:20,539
yeah that's the way we're doing it now I

00:33:18,590 --> 00:33:22,490
believe I mean you could set up your you

00:33:20,539 --> 00:33:24,710
dev rules as well to create devices that

00:33:22,490 --> 00:33:26,390
have more more general access and you

00:33:24,710 --> 00:33:27,860
wouldn't sorry I the question was do we

00:33:26,390 --> 00:33:30,200
need to run the docker containers as

00:33:27,860 --> 00:33:32,870
privileged to access the the physical

00:33:30,200 --> 00:33:34,190
devices and stuff and we are doing it

00:33:32,870 --> 00:33:35,600
privilege at the moment but it's not a

00:33:34,190 --> 00:33:37,700
requirement I think that's one of the

00:33:35,600 --> 00:33:38,900
things we have on the things to do is

00:33:37,700 --> 00:33:41,659
basically clean that up so it doesn't

00:33:38,900 --> 00:33:42,679
have to run with privileges I think the

00:33:41,659 --> 00:33:44,330
other reason it needs to run with

00:33:42,679 --> 00:33:45,860
privileges if you want to expose if you

00:33:44,330 --> 00:33:47,419
want docker to actually proxy some

00:33:45,860 --> 00:33:50,169
privilege ports and things like that you

00:33:47,419 --> 00:33:50,169
need privilege ism

00:34:04,540 --> 00:34:11,350
the question is do we have a bomb with a

00:34:06,280 --> 00:34:16,410
part list yeah some kind of yeah yeah

00:34:11,350 --> 00:34:16,410
was a text file count okay

00:34:19,179 --> 00:34:27,609
yeah yeah yeah to be honest we are

00:34:25,929 --> 00:34:30,099
little bit behind on the documentation

00:34:27,609 --> 00:34:31,690
sign but we've been working mostly on

00:34:30,099 --> 00:34:33,279
the documentation for the software

00:34:31,690 --> 00:34:35,409
pieces of how it all fits together but

00:34:33,279 --> 00:34:37,000
yeah we can work on the that should be

00:34:35,409 --> 00:34:40,740
relatively easy to put together a list

00:34:37,000 --> 00:34:40,740
of hardware pieces

00:34:44,770 --> 00:34:51,490
okay go ahead okay Thanksgiving so have

00:34:49,179 --> 00:34:57,040
we achieved all goal but that's the

00:34:51,490 --> 00:35:00,040
question I would say do you remember the

00:34:57,040 --> 00:35:04,000
first motivation we started from that

00:35:00,040 --> 00:35:10,210
and we achieved that so I guess the

00:35:04,000 --> 00:35:15,090
number one motivation was achieved we we

00:35:10,210 --> 00:35:20,260
change from a messy desk to a nice

00:35:15,090 --> 00:35:23,560
all-in-one solution in a PC case but

00:35:20,260 --> 00:35:25,660
that's not the only achievement we

00:35:23,560 --> 00:35:32,400
believe so we have a fully functional

00:35:25,660 --> 00:35:35,530
lab so it processes kernel CI jobs on

00:35:32,400 --> 00:35:39,760
every board that's inside and it's a

00:35:35,530 --> 00:35:42,270
veritable 24/7 so yeah we have a fully

00:35:39,760 --> 00:35:44,710
functional lab from this perspective

00:35:42,270 --> 00:35:47,320
everything has been integrated into a

00:35:44,710 --> 00:35:50,470
single PC case so what's nice with this

00:35:47,320 --> 00:35:53,680
prototype or concept is that you have

00:35:50,470 --> 00:35:57,960
this case you just need to connect the

00:35:53,680 --> 00:36:00,280
power to plug in the network that's it

00:35:57,960 --> 00:36:02,920
obviously load the software and

00:36:00,280 --> 00:36:07,390
configure it to some extent but in terms

00:36:02,920 --> 00:36:10,690
of wiring that's all so we think this is

00:36:07,390 --> 00:36:15,340
a great achievement we have no more y

00:36:10,690 --> 00:36:18,730
wiring no more boards on your desk or

00:36:15,340 --> 00:36:21,730
shelves it's okay to have it in our

00:36:18,730 --> 00:36:24,390
apartment for home workers it's under

00:36:21,730 --> 00:36:27,460
your desk you just forget about it it's

00:36:24,390 --> 00:36:29,350
it's fun it's fun less actually so you

00:36:27,460 --> 00:36:32,430
don't you know you don't hear anything

00:36:29,350 --> 00:36:32,430
it could be furnace

00:36:34,270 --> 00:36:38,600
we believe it's a very good demonstrator

00:36:36,830 --> 00:36:41,210
you will see it tomorrow if you come at

00:36:38,600 --> 00:36:43,580
the technical showcase it's catching

00:36:41,210 --> 00:36:46,940
eyes and it shows everything worldwide

00:36:43,580 --> 00:36:50,540
together or integrated so to demonstrate

00:36:46,940 --> 00:36:53,960
it's possible to do some some

00:36:50,540 --> 00:36:57,470
generalizing of the need of CI while

00:36:53,960 --> 00:37:00,620
it's a good demonstrator we have put all

00:36:57,470 --> 00:37:04,610
the device under test into a drive trace

00:37:00,620 --> 00:37:06,500
so that means it's easy to maintain if

00:37:04,610 --> 00:37:08,300
we want to change the board whether

00:37:06,500 --> 00:37:11,990
because it's broken or we need I don't

00:37:08,300 --> 00:37:15,700
know one we just slide out the tray put

00:37:11,990 --> 00:37:15,700
the new board back in that's it

00:37:16,150 --> 00:37:23,480
someone asked about the the the bomb and

00:37:19,700 --> 00:37:26,840
the cost so it's quite reasonable today

00:37:23,480 --> 00:37:30,370
the cost is about 500 euros everything

00:37:26,840 --> 00:37:33,650
included except the devices under test

00:37:30,370 --> 00:37:38,230
this could be further reduce if you can

00:37:33,650 --> 00:37:41,030
recycle an old PC because any PC from

00:37:38,230 --> 00:37:43,430
more than five years is still ok it's

00:37:41,030 --> 00:37:47,420
just it requires if you have 4 gigs of

00:37:43,430 --> 00:37:49,310
RAM that's it it's ok so again if you

00:37:47,420 --> 00:37:51,500
have some USB hubs already or some

00:37:49,310 --> 00:37:53,480
networks which you can just reuse it

00:37:51,500 --> 00:37:57,410
there is no requirement need to accept

00:37:53,480 --> 00:37:59,210
the number of ports obviously we have

00:37:57,410 --> 00:38:01,220
done so much from a software from

00:37:59,210 --> 00:38:04,100
software perspective we have done some

00:38:01,220 --> 00:38:07,010
automation for the regarding the

00:38:04,100 --> 00:38:09,760
installation but it's still a work in

00:38:07,010 --> 00:38:12,290
progress to be honest we have

00:38:09,760 --> 00:38:17,750
containerized and scalable software so

00:38:12,290 --> 00:38:22,610
that makes life more easy still even if

00:38:17,750 --> 00:38:25,820
we shift maybe mainly many or four goals

00:38:22,610 --> 00:38:28,310
there are still some limitations the

00:38:25,820 --> 00:38:30,050
first one is that it's pretty tedious to

00:38:28,310 --> 00:38:32,480
build and quite difficult to

00:38:30,050 --> 00:38:35,300
mass-produce today it's handmade

00:38:32,480 --> 00:38:39,350
everything is custom so and it's packed

00:38:35,300 --> 00:38:42,440
into a PC chasm to be honest we did not

00:38:39,350 --> 00:38:46,840
really realize the amount of work we we

00:38:42,440 --> 00:38:46,840
had to do to put all those cables inside

00:38:47,369 --> 00:38:51,420
there are some limitations with the

00:38:49,380 --> 00:38:53,760
dimensions of the board you may

00:38:51,420 --> 00:38:56,730
integrate into this PC case so we have

00:38:53,760 --> 00:39:00,840
the three inch and five inch to

00:38:56,730 --> 00:39:02,400
traditional base PC base well there are

00:39:00,840 --> 00:39:04,230
some limitation coming with that and

00:39:02,400 --> 00:39:06,060
also D but also the eight of the board

00:39:04,230 --> 00:39:09,630
if you have a board that as I don't know

00:39:06,060 --> 00:39:15,450
high radiator or fan could be a problem

00:39:09,630 --> 00:39:19,980
to integrate eventually that's not only

00:39:15,450 --> 00:39:23,580
a limitation but each ATX connector from

00:39:19,980 --> 00:39:25,470
so from the PC as a maximum current it

00:39:23,580 --> 00:39:28,950
can arose so it's typically around four

00:39:25,470 --> 00:39:32,490
amps so when you use a SATA or molex

00:39:28,950 --> 00:39:35,369
connector you can get five amp or 4 M of

00:39:32,490 --> 00:39:37,470
that and well you need to balance that

00:39:35,369 --> 00:39:40,619
power among all the boards you have in

00:39:37,470 --> 00:39:43,050
your PC case to not exceed this maximum

00:39:40,619 --> 00:39:45,570
power okay

00:39:43,050 --> 00:39:48,240
initially we thought that well today we

00:39:45,570 --> 00:39:50,760
have we've used the standard tower case

00:39:48,240 --> 00:39:53,160
but if we put a larger one we will

00:39:50,760 --> 00:39:53,690
integrate more boards that's not exactly

00:39:53,160 --> 00:39:57,570
true

00:39:53,690 --> 00:40:00,000
because of this internal wiring actually

00:39:57,570 --> 00:40:02,820
yeah there might be more slots for the

00:40:00,000 --> 00:40:07,500
boards but that's too many wiring and

00:40:02,820 --> 00:40:09,599
too many network switch orbs so that

00:40:07,500 --> 00:40:12,990
doesn't scale very well in terms of PC

00:40:09,599 --> 00:40:15,510
case a size it's it scales well because

00:40:12,990 --> 00:40:18,930
just okay you have 16 one will you with

00:40:15,510 --> 00:40:21,330
one PC case you can drive six six boards

00:40:18,930 --> 00:40:28,500
if you need twelve you just put two PC

00:40:21,330 --> 00:40:30,930
cases and so the last limitation is that

00:40:28,500 --> 00:40:33,060
well that's because it's all custom is

00:40:30,930 --> 00:40:36,000
that every new board you have to

00:40:33,060 --> 00:40:38,550
integrate as a custom location for the

00:40:36,000 --> 00:40:42,380
connectors and so you have to deal with

00:40:38,550 --> 00:40:42,380
that there's no nothing standard

00:40:43,540 --> 00:40:51,760
there's always things to improve of

00:40:46,210 --> 00:40:53,530
course here are a few ones first well

00:40:51,760 --> 00:40:55,390
it's not really improved but it's a

00:40:53,530 --> 00:40:58,230
better choice we could have made a

00:40:55,390 --> 00:41:03,130
better choice with the ATX power supply

00:40:58,230 --> 00:41:07,540
because we used the the power itself is

00:41:03,130 --> 00:41:09,490
pretty sufficient we used a 500 what PSU

00:41:07,540 --> 00:41:12,720
and that's more than enough to drive all

00:41:09,490 --> 00:41:16,360
the boards but the fact is the larger

00:41:12,720 --> 00:41:18,610
PSU you use the more subtle and more

00:41:16,360 --> 00:41:21,880
excavators connectors you get and that

00:41:18,610 --> 00:41:24,190
means that makes it easier to power the

00:41:21,880 --> 00:41:26,860
different device under test typically we

00:41:24,190 --> 00:41:29,440
if we have used a larger one we could

00:41:26,860 --> 00:41:31,930
have directly one drive use one SATA

00:41:29,440 --> 00:41:38,380
connector per board and so we didn't

00:41:31,930 --> 00:41:40,210
have to balance in terms of development

00:41:38,380 --> 00:41:42,160
board while we need to think about how

00:41:40,210 --> 00:41:47,380
to integrate larger ones so more than

00:41:42,160 --> 00:41:50,890
five inch in terms of administration we

00:41:47,380 --> 00:41:53,680
haven't yet really provided any control

00:41:50,890 --> 00:41:55,720
panel that's I think we think it's

00:41:53,680 --> 00:41:58,240
something that that is key and missing

00:41:55,720 --> 00:42:00,790
in many of the tools we use today if we

00:41:58,240 --> 00:42:04,720
had a panel that we would just use to

00:42:00,790 --> 00:42:07,750
you know use menu and click some box

00:42:04,720 --> 00:42:10,150
Texas or some checkbox to configure all

00:42:07,750 --> 00:42:12,520
the things that makes life very easy so

00:42:10,150 --> 00:42:15,910
that's where we want to go to some

00:42:12,520 --> 00:42:21,040
extent and also in terms of complexity

00:42:15,910 --> 00:42:24,550
and pricing if we you wanted to use such

00:42:21,040 --> 00:42:28,420
a con solution just for a singer or to

00:42:24,550 --> 00:42:34,020
do all boards lab it's actually pretty

00:42:28,420 --> 00:42:36,460
difficult and expensive and in terms of

00:42:34,020 --> 00:42:39,190
documentation as I said previously we

00:42:36,460 --> 00:42:40,920
are little bit behind but it's a work in

00:42:39,190 --> 00:42:43,050
progress

00:42:40,920 --> 00:42:47,230
so what's next

00:42:43,050 --> 00:42:50,350
well our lab in the Box concept was a

00:42:47,230 --> 00:42:52,720
first experimentation to validate the

00:42:50,350 --> 00:42:55,540
concept actually so we wanted something

00:42:52,720 --> 00:42:56,690
really low cost as much as possible to

00:42:55,540 --> 00:43:01,400
target individual

00:42:56,690 --> 00:43:04,819
in small groups and next we want to

00:43:01,400 --> 00:43:07,490
address more use cases so the one one

00:43:04,819 --> 00:43:10,130
board lab so what we call it the mini

00:43:07,490 --> 00:43:11,930
lava box so you just have one board

00:43:10,130 --> 00:43:15,470
that's the ball you are using every day

00:43:11,930 --> 00:43:19,460
and you just want to run CI on it so how

00:43:15,470 --> 00:43:22,700
to address that we want to also address

00:43:19,460 --> 00:43:25,400
more professional grade solution where

00:43:22,700 --> 00:43:29,410
we would use racks the standard rights

00:43:25,400 --> 00:43:33,890
instead of PC cases that's to address

00:43:29,410 --> 00:43:36,710
corporations we really want to enable

00:43:33,890 --> 00:43:39,589
most software automation both in terms

00:43:36,710 --> 00:43:42,440
of installation and in administration

00:43:39,589 --> 00:43:45,170
perspectives we need to address the

00:43:42,440 --> 00:43:48,670
connectivity side of it you may have

00:43:45,170 --> 00:43:51,859
noticed that it's all wired connectivity

00:43:48,670 --> 00:43:54,799
networking there's no Wi-Fi or Bluetooth

00:43:51,859 --> 00:44:00,289
and we know that well today in the IOT

00:43:54,799 --> 00:44:02,809
world it's pretty mandatory we'd like

00:44:00,289 --> 00:44:04,940
then once I would say the CI thing is

00:44:02,809 --> 00:44:07,250
running we'd like to start working on

00:44:04,940 --> 00:44:10,339
stopping jobs standard jobs that would

00:44:07,250 --> 00:44:13,819
run on the board so again to help people

00:44:10,339 --> 00:44:17,660
not have to develop their own tests and

00:44:13,819 --> 00:44:19,490
we reinvent the wheel every time and of

00:44:17,660 --> 00:44:21,880
course works work on the documentation

00:44:19,490 --> 00:44:27,410
so by the way we have put on this slide

00:44:21,880 --> 00:44:30,799
the documentation available today and

00:44:27,410 --> 00:44:32,420
that's it and if you do if you do play

00:44:30,799 --> 00:44:33,980
with the github projects you'll feel

00:44:32,420 --> 00:44:36,109
free to raise issues or questions just

00:44:33,980 --> 00:44:37,970
using the github you know issue tracker

00:44:36,109 --> 00:44:39,020
or whatever and we'll we'll get back to

00:44:37,970 --> 00:44:40,130
you on that if you want to play with it

00:44:39,020 --> 00:44:41,480
or if you find stuff in the

00:44:40,130 --> 00:44:44,660
documentation that's not clear or

00:44:41,480 --> 00:44:47,150
whatever let us let us know it's it's a

00:44:44,660 --> 00:44:50,470
QuickStart is available now but the more

00:44:47,150 --> 00:44:55,059
full stuff is still being worked on so

00:44:50,470 --> 00:44:55,059
any any other questions yeah go ahead

00:45:01,310 --> 00:45:04,469
[Music]

00:45:05,040 --> 00:45:09,510
you know so the question is that we

00:45:07,950 --> 00:45:11,760
given any thought to adding additional

00:45:09,510 --> 00:45:13,890
boards like GPIO connected things or I

00:45:11,760 --> 00:45:16,200
squared C connected things yeah we have

00:45:13,890 --> 00:45:17,550
in the in our kind of regular lab we

00:45:16,200 --> 00:45:19,650
have more setups like that where there's

00:45:17,550 --> 00:45:21,150
additional hardware but I mean we

00:45:19,650 --> 00:45:22,650
haven't thought about it in in the

00:45:21,150 --> 00:45:24,870
context of this in the sense other than

00:45:22,650 --> 00:45:26,430
yeah it just complicates the wiring but

00:45:24,870 --> 00:45:28,440
it it doesn't it doesn't make anything

00:45:26,430 --> 00:45:30,030
harder except for finding space in the

00:45:28,440 --> 00:45:34,170
PC case is really where again

00:45:30,030 --> 00:45:37,530
yeah there's no yeah if it if it's small

00:45:34,170 --> 00:45:43,040
enough to fit in a bay okay you may have

00:45:37,530 --> 00:45:45,840
noticed we can go back there's one board

00:45:43,040 --> 00:45:51,990
so it may not be possible for all the

00:45:45,840 --> 00:45:55,500
boards but yeah this for this one you

00:45:51,990 --> 00:45:57,780
see you have more space so it's already

00:45:55,500 --> 00:46:00,510
possible and you may reuse here you have

00:45:57,780 --> 00:46:02,310
two bays through five inch bays you

00:46:00,510 --> 00:46:05,280
could fit more more peripheral but it's

00:46:02,310 --> 00:46:07,890
true that because it's leveraging the

00:46:05,280 --> 00:46:11,430
canal CI dot or project currently it's

00:46:07,890 --> 00:46:13,740
kernel booting and some kernel testing

00:46:11,430 --> 00:46:17,160
but there's not much yet peripheral

00:46:13,740 --> 00:46:19,530
testing this has been already discussed

00:46:17,160 --> 00:46:23,490
and potentially we could try to find a

00:46:19,530 --> 00:46:26,270
way to provide connectors for outside

00:46:23,490 --> 00:46:28,890
like the box is still the box with

00:46:26,270 --> 00:46:32,850
internal peripheral devices but also

00:46:28,890 --> 00:46:36,410
allow external device under test to be

00:46:32,850 --> 00:46:36,410
connected to it that

00:46:38,510 --> 00:46:51,829
exactly exactly so that that's an ID any

00:46:48,540 --> 00:46:51,829
other questions or comments yeah

00:46:52,720 --> 00:46:56,280
you might have to be a little bit louder

00:47:02,809 --> 00:47:06,529
right so how much custom hardware is in

00:47:05,089 --> 00:47:08,539
there so the only thing custom is

00:47:06,529 --> 00:47:12,429
basically the the acne cape that it's a

00:47:08,539 --> 00:47:15,169
it's a standard it's a standard beta

00:47:12,429 --> 00:47:17,179
BeagleBone black cape that we built at

00:47:15,169 --> 00:47:19,429
bay Libre and we sell as a product but

00:47:17,179 --> 00:47:21,409
you could also just put in you could put

00:47:19,429 --> 00:47:22,819
in any sort of relays to switch power in

00:47:21,409 --> 00:47:24,409
there that you like but that's the only

00:47:22,819 --> 00:47:25,759
thing that's not really well it's off

00:47:24,409 --> 00:47:28,039
the shelf in the sense you can go to our

00:47:25,759 --> 00:47:29,529
website and buy it but that there's

00:47:28,039 --> 00:47:31,489
nothing else custom in there other than

00:47:29,529 --> 00:47:32,989
you know yeah actually the cost of

00:47:31,489 --> 00:47:34,669
cutting of the wires to the right length

00:47:32,989 --> 00:47:37,359
so they're not you know a bunch of loops

00:47:34,669 --> 00:47:37,359
of cable around

00:47:43,700 --> 00:47:48,720
yeah the the cutter is a comment on the

00:47:47,100 --> 00:47:51,180
install page but you need to have good

00:47:48,720 --> 00:47:53,460
soldering skills and yes so the yes yeah

00:47:51,180 --> 00:47:56,190
and so to speak to that a little bit yes

00:47:53,460 --> 00:47:59,520
so yeah in terms of tinkering skills and

00:47:56,190 --> 00:48:03,000
soldering skills so we have done a lot

00:47:59,520 --> 00:48:04,950
of integration in this work so this acne

00:48:03,000 --> 00:48:06,990
solution is a the standard one so you

00:48:04,950 --> 00:48:09,150
buy it to the store and usually you use

00:48:06,990 --> 00:48:10,950
it as it no problem it's more about the

00:48:09,150 --> 00:48:14,550
mechanics and putting all together that

00:48:10,950 --> 00:48:21,570
was all handmade and custom so cutting

00:48:14,550 --> 00:48:25,410
wires also the the older connections

00:48:21,570 --> 00:48:29,340
from the PSU so the ATX PSU to the

00:48:25,410 --> 00:48:31,320
different to drive the power to the to

00:48:29,340 --> 00:48:37,590
the different boards we had to cut all

00:48:31,320 --> 00:48:41,430
the molex connectors and find use things

00:48:37,590 --> 00:48:43,560
to cable that together so it's not

00:48:41,430 --> 00:48:46,140
really shown here the the reader

00:48:43,560 --> 00:48:49,140
yeah it's about finding a mechanical

00:48:46,140 --> 00:48:52,170
solution to to obviously have it

00:48:49,140 --> 00:48:53,940
something fixed in the in the case the

00:48:52,170 --> 00:48:55,410
other soldering might be that if your

00:48:53,940 --> 00:48:57,690
some of these boards the connection

00:48:55,410 --> 00:49:00,540
between the power switch the relay or

00:48:57,690 --> 00:49:02,040
the Acme and your board you know you buy

00:49:00,540 --> 00:49:03,330
a cut you have barrel connector and you

00:49:02,040 --> 00:49:04,620
might just you know when you make that

00:49:03,330 --> 00:49:06,630
custom cable just the right length you

00:49:04,620 --> 00:49:08,040
solder the connections on yeah it little

00:49:06,630 --> 00:49:09,720
little things like that we're not doing

00:49:08,040 --> 00:49:11,370
any sought we didn't modify any boards

00:49:09,720 --> 00:49:13,290
and like little soldering on boards or

00:49:11,370 --> 00:49:16,700
nothing in terms of sort of totally

00:49:13,290 --> 00:49:18,780
making custom cables that's it

00:49:16,700 --> 00:49:21,840
everything by the way everything was

00:49:18,780 --> 00:49:27,000
ordered on Amazon so it's it's very easy

00:49:21,840 --> 00:49:30,080
to get and here's a question anything

00:49:27,000 --> 00:49:30,080
else yeah

00:49:38,130 --> 00:49:46,619
thank you thank you okay yeah yeah

00:49:41,439 --> 00:49:46,619
thanks yes

00:49:52,569 --> 00:49:56,499
yeah so there seems to be a lot of

00:49:54,669 --> 00:49:58,660
custom cut acrylic also promote the

00:49:56,499 --> 00:50:03,160
melting the devices the Plexiglas yes

00:49:58,660 --> 00:50:08,019
yes yes so again yes we we just about a

00:50:03,160 --> 00:50:11,799
large large pieces of Plexiglas and we

00:50:08,019 --> 00:50:14,259
cut it ourselves and make all the holes

00:50:11,799 --> 00:50:16,209
that we needed so yeah that's the

00:50:14,259 --> 00:50:18,609
mechanical and tinkering skills I was

00:50:16,209 --> 00:50:20,849
referring to there's nothing standard

00:50:18,609 --> 00:50:20,849
here

00:50:44,330 --> 00:50:48,000
yeah

00:50:46,080 --> 00:50:49,980
that would that would make sense if we

00:50:48,000 --> 00:50:51,570
won if every lava box was gonna have

00:50:49,980 --> 00:50:53,580
exactly the same boards in it but I

00:50:51,570 --> 00:50:54,840
think in this in this environment I

00:50:53,580 --> 00:50:56,520
think people are putting different

00:50:54,840 --> 00:50:57,930
boards in different and every board has

00:50:56,520 --> 00:50:59,460
a slightly different form factor and

00:50:57,930 --> 00:51:02,550
different mounting holes and stuff so

00:50:59,460 --> 00:51:05,490
it's it's so on this noise yeah so yes

00:51:02,550 --> 00:51:06,540
for this one's for these guys that would

00:51:05,490 --> 00:51:08,820
be very helpful

00:51:06,540 --> 00:51:11,220
we have it standard that's standard but

00:51:08,820 --> 00:51:14,940
that for these guys on the right-hand

00:51:11,220 --> 00:51:20,490
side it's it's gonna be custom every

00:51:14,940 --> 00:51:22,920
time almost okay I think we're out of

00:51:20,490 --> 00:51:24,180
time here's 10 10 till yeah so I think

00:51:22,920 --> 00:51:26,000
we're out of time so thank you very much

00:51:24,180 --> 00:51:30,519
thanks for coming

00:51:26,000 --> 00:51:30,519

YouTube URL: https://www.youtube.com/watch?v=aavoHUpzBGU


