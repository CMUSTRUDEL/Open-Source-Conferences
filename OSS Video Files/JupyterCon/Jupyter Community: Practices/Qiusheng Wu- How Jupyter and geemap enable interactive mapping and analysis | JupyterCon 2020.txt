Title: Qiusheng Wu- How Jupyter and geemap enable interactive mapping and analysis | JupyterCon 2020
Publication date: 2020-11-02
Playlist: Jupyter Community: Practices
Description: 
	Brief Summary
geemap is a Python package for interactive mapping and analysis of large-scale geospatial datasets hosted in the Google Earth Engine cloud computing platform. This presentation highlights the use of geemap, ipyleaflet, and Jupyter widgets for interactive mapping and analysis of Earth Engine datasets, and demonstrates how to build and deploy interactive apps using Jupyter and Voilà.

Outline
The Earth is constantly changing, which brings profound challenges for the environment and human society. To address these challenges at the global scale, the Earth science community is heavily relying on geospatial datasets acquired from satellite, aerial, and mobile sensors. The explosive growth in geospatial datasets during the past decades is overwhelming the Earth science community’s capacity for storage, analysis, and visualization.

The advent of the Google Earth Engine (GEE) cloud computing platform makes it possible to access, manipulate, and analyze large volumes of geospatial datasets on-the-fly. During the past few years, GEE has become very popular in the geospatial community and it has empowered numerous Earth science applications at local, regional, and global scales. GEE provides both JavaScript and Python APIs for making computational requests to the Earth Engine servers. However, compared with the comprehensive documentation and interactive IDE (i.e., GEE JavaScript Code Editor) of the GEE JavaScript API, the GEE Python API has relatively little documentation and limited functionality for visualizing datasets and computational results interactively. The geemap Python package was created to fill this gap. It is built upon ipyleaflet and ipywidgets, and enables users to analyze and visualize Earth Engine datasets interactively within a Jupyter-based environment. Geemap users can utilize the Python ecosystem of diverse libraries and tools to explore Google Earth Engine and perform planetary-scale geospatial analysis. Geemap was originally created to support teaching university classes. Since its initial release on GitHub, geemap has been widely used by the Earth Engine community for scientific research.

This presentation highlights the use of geemap and the Jupyter ecosystem for interactive mapping and analysis of large-scale geospatial datasets, and demonstrates how to build and deploy interactive apps using Jupyter and Voilà.

This presentation is intended for scientific programmers, data scientists, data journalists, geospatial analysts, and concerned citizens of Earth. The attendees are expected to have a basic understanding of Python and the Jupyter ecosystem. Familiarity with Earth science and geospatial datasets is useful but not required.

Outline:

Motivation: Overview of Earth science data analysis workflows, needed tools, and current issues.
How to access Earth science data: Google Earth Engine
Jupyter components relevant for geospatial data analysis; 3.1. mapping (ipyleaflet); 3.2. time series visualization (bqplot); 3.3. data presentation (ipytree, ipywidgets)
Example usage; 4.1. data analysis in JupyterLab / Colab; 4.2. building and deploying interactive apps with Voilà
Installation options
Relevant resources:

Google Earth Engine: https://earthengine.google.com/
Geemap: https://github.com/giswqs/geemap
Tutorials: https://github.com/giswqs/geemap/tree/master/examples

----

JupyterCon brings together data scientists, business analysts, researchers, educators, developers, core Project contributors, and tool creators for in-depth training, insightful keynotes, networking, and practical talks exploring the Project Jupyter ecosystem.

https://jupytercon.com/ 

JupyterCon is possible thanks to the generous support of our sponsors, and the labor of many volunteer organizers. 

https://jupytercon.com/sponsors/ 

https://jupytercon.com/about/#Organizing%20Committee
YouTube URL: https://www.youtube.com/watch?v=5Nab84IssxA


