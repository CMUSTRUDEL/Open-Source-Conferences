Title: Flock 2018 - RHEL, Fedora and CentOS: Solving The Penrose Triangle
Publication date: 2018-08-29
Playlist: Flock 2018
Description: 
	Wednesday, August 8, 2018
1:30pm - 2:20pm
@Meissen + Radebeul

Talk: RHEL, Fedora and CentOS: Solving The Penrose Triangle
Presenters: Josh Boyer, Brendan Conoboy

Description: The relationship between Fedora, RHEL, and CentOS is anything but obvious. Over time the interests of each distro and its patrons have grown and shifted, often filling in gaps and creating opportunities. Join us to hear how Red Hat and RHEL have evolved, why Fedora and CentOS are treasured, and how they fit together. From there we will discuss the road ahead, the problems Red Hat is working on, and the opportunities to work on them together.
Captions: 
	00:00:03,290 --> 00:00:08,700
all right we're gonna get rolling my

00:00:07,290 --> 00:00:11,370
name is Josh Boyer for those that don't

00:00:08,700 --> 00:00:13,590
know you I don't know which I think I

00:00:11,370 --> 00:00:15,750
know or I have met quite a few of you

00:00:13,590 --> 00:00:18,359
already so that's cool this is Brendan

00:00:15,750 --> 00:00:21,510
Conroy he is my counterpart over in rel

00:00:18,359 --> 00:00:23,310
and he comes up with crazy ideas I try

00:00:21,510 --> 00:00:26,130
to make them reality sometimes it pays

00:00:23,310 --> 00:00:29,429
off we'll see how this talk goes sound

00:00:26,130 --> 00:00:30,929
good excellent all right before we get

00:00:29,429 --> 00:00:32,250
started you all had lunch before you

00:00:30,929 --> 00:00:34,079
fall asleep I want to do an audience

00:00:32,250 --> 00:00:39,480
poll raise your hand if you participate

00:00:34,079 --> 00:00:41,790
or use in fedora good keep your hands up

00:00:39,480 --> 00:00:47,460
keep your hands up leave your hand up if

00:00:41,790 --> 00:00:49,289
you also participate or use rel okay

00:00:47,460 --> 00:00:53,399
that's a good cross-section same

00:00:49,289 --> 00:00:55,260
question but sent to us Wow

00:00:53,399 --> 00:00:56,520
like that is actually way more overlap

00:00:55,260 --> 00:00:59,190
than I thought we would have across all

00:00:56,520 --> 00:01:01,590
three one big happy family you guys are

00:00:59,190 --> 00:01:03,170
definitely in the right talk so all

00:01:01,590 --> 00:01:09,030
right let's get going

00:01:03,170 --> 00:01:12,119
all right so the title today's talk is

00:01:09,030 --> 00:01:13,680
solving the Penrose triangle and if

00:01:12,119 --> 00:01:15,240
you're looking at this screen you can

00:01:13,680 --> 00:01:18,390
see that that doesn't exactly make sense

00:01:15,240 --> 00:01:20,220
it's kind of hard to understand what's

00:01:18,390 --> 00:01:22,200
happening but I submit to you that this

00:01:20,220 --> 00:01:25,909
is actually just a visual representation

00:01:22,200 --> 00:01:27,909
of a mobius strip that has three sides

00:01:25,909 --> 00:01:32,409
so

00:01:27,909 --> 00:01:35,140
with that in mind as we need to refute

00:01:32,409 --> 00:01:36,909
one thing the Matthew said this is not

00:01:35,140 --> 00:01:38,710
the continuation of what RedHat wants

00:01:36,909 --> 00:01:46,060
that was the thing that we kind of

00:01:38,710 --> 00:01:53,229
talked about screensaver oh man

00:01:46,060 --> 00:02:00,069
amateur hour that's your password use

00:01:53,229 --> 00:02:04,659
your luggage will be going so fast you

00:02:00,069 --> 00:02:06,250
just put this alright alright so this is

00:02:04,659 --> 00:02:09,119
not a continuation of what Red Hat once

00:02:06,250 --> 00:02:13,420
we talked about that for five years and

00:02:09,119 --> 00:02:15,760
I think the that question has been well

00:02:13,420 --> 00:02:18,340
answered the question is what is Red Hat

00:02:15,760 --> 00:02:21,340
doing so we've long had this problem

00:02:18,340 --> 00:02:23,739
where we can't talk about our product

00:02:21,340 --> 00:02:26,220
plans but we can talk about technology

00:02:23,739 --> 00:02:28,930
we can talk about what we're up to and

00:02:26,220 --> 00:02:31,630
why we're up to that so we're going to

00:02:28,930 --> 00:02:32,890
talk about a lot of things that we're

00:02:31,630 --> 00:02:35,290
doing right now that we haven't really

00:02:32,890 --> 00:02:37,000
talked about before but I think if

00:02:35,290 --> 00:02:38,890
you've seen anybody's slides earlier

00:02:37,000 --> 00:02:40,900
today there's like a and go to this

00:02:38,890 --> 00:02:42,310
presentation later on or tomorrow or

00:02:40,900 --> 00:02:43,630
whatever and that's because there's a

00:02:42,310 --> 00:02:44,230
lot more coordination than there's ever

00:02:43,630 --> 00:02:47,260
been before

00:02:44,230 --> 00:02:50,079
so first of all in case anybody has

00:02:47,260 --> 00:02:52,299
never heard this before there is a

00:02:50,079 --> 00:02:54,310
relationship between fedora and X row

00:02:52,299 --> 00:02:56,470
and CentOS and the conventional

00:02:54,310 --> 00:03:00,190
understanding of it is that everything

00:02:56,470 --> 00:03:02,350
kind of starts in fedora and then rel

00:03:00,190 --> 00:03:05,280
gets built from that and then sent to us

00:03:02,350 --> 00:03:08,170
gets built from that and that's true

00:03:05,280 --> 00:03:11,560
sometimes but it's also misleading

00:03:08,170 --> 00:03:13,600
so when Fedora started that was kind of

00:03:11,560 --> 00:03:15,730
like the big picture right but things

00:03:13,600 --> 00:03:18,940
have changed a little bit in that

00:03:15,730 --> 00:03:21,010
technology has gotten more advanced

00:03:18,940 --> 00:03:23,770
around Linux so Linux is still the thing

00:03:21,010 --> 00:03:29,660
that runs on the hardware

00:03:23,770 --> 00:03:33,500
and we have that's the you light up your

00:03:29,660 --> 00:03:35,690
hardware but after that sometimes you

00:03:33,500 --> 00:03:39,080
add a virtualization layer and then

00:03:35,690 --> 00:03:41,690
sometimes after that you have a virtual

00:03:39,080 --> 00:03:42,110
Hardware OS that may or may not be the

00:03:41,690 --> 00:03:46,310
same thing

00:03:42,110 --> 00:03:48,440
and after that sometimes you want to run

00:03:46,310 --> 00:03:51,980
containers a bunch of containers then

00:03:48,440 --> 00:03:53,810
after that you have a user space inside

00:03:51,980 --> 00:03:55,550
that control container Orchestrator and

00:03:53,810 --> 00:03:58,460
after that you have at like an actual

00:03:55,550 --> 00:04:01,400
application that runs so it's it's been

00:03:58,460 --> 00:04:04,820
a long time since the OS was the only

00:04:01,400 --> 00:04:07,430
thing and I think it's time to kind of

00:04:04,820 --> 00:04:10,400
reset and say all right what are we

00:04:07,430 --> 00:04:13,580
doing especially when there is fedora

00:04:10,400 --> 00:04:18,680
rail and sent to us or sent all to be

00:04:13,580 --> 00:04:20,450
considered so let start with fedora okay

00:04:18,680 --> 00:04:22,310
so this is kind of you know preaching to

00:04:20,450 --> 00:04:24,020
the choir here but what is Fedora right

00:04:22,310 --> 00:04:27,200
if you look at it from a Linux

00:04:24,020 --> 00:04:28,490
distribution standpoint there's 21,000

00:04:27,200 --> 00:04:31,220
packages is that what it was Matthew

00:04:28,490 --> 00:04:33,050
some large multi thousand number of

00:04:31,220 --> 00:04:35,570
packages they get pulled into what we

00:04:33,050 --> 00:04:37,970
call a Linux distribution right they all

00:04:35,570 --> 00:04:40,850
converge we pretend that we can manage

00:04:37,970 --> 00:04:44,930
them as a single unit sometimes that's

00:04:40,850 --> 00:04:47,600
true sometimes it's not so we talk about

00:04:44,930 --> 00:04:51,470
things like packages and repositories

00:04:47,600 --> 00:04:53,270
and ISOs and images right these are all

00:04:51,470 --> 00:04:54,590
things that people think about when they

00:04:53,270 --> 00:04:57,440
think of Fedora and they all have value

00:04:54,590 --> 00:05:00,470
our packages are high quality right our

00:04:57,440 --> 00:05:02,510
repositories for the most part generally

00:05:00,470 --> 00:05:04,990
work they have repo closure things like

00:05:02,510 --> 00:05:07,700
that people use them they expect them

00:05:04,990 --> 00:05:09,050
our ISOs you know obviously if you can't

00:05:07,700 --> 00:05:11,120
install your operating system it's not

00:05:09,050 --> 00:05:13,340
really worth a whole lot in our images

00:05:11,120 --> 00:05:15,110
images are kind of a new not really new

00:05:13,340 --> 00:05:18,230
but they're getting more focused right

00:05:15,110 --> 00:05:19,880
so container images qk2 images for

00:05:18,230 --> 00:05:21,500
virtual machines things like that we're

00:05:19,880 --> 00:05:24,080
getting better at producing those in

00:05:21,500 --> 00:05:26,750
fedora you know atomic images clearly

00:05:24,080 --> 00:05:29,030
are in there as well but these are

00:05:26,750 --> 00:05:32,090
artifacts like that's not what Fedora is

00:05:29,030 --> 00:05:33,590
that's what Fedora produces right so

00:05:32,090 --> 00:05:34,850
it's really interesting to have

00:05:33,590 --> 00:05:36,740
conversations with the people about what

00:05:34,850 --> 00:05:37,249
is Fedora and they say all these things

00:05:36,740 --> 00:05:40,069
but really

00:05:37,249 --> 00:05:41,839
it's not what Fedora is so what else

00:05:40,069 --> 00:05:44,809
does it do well we have editions we have

00:05:41,839 --> 00:05:46,459
spins we have tools we have desktops IOT

00:05:44,809 --> 00:05:48,139
Apple we have all these other things and

00:05:46,459 --> 00:05:49,729
people like to take basically what I

00:05:48,139 --> 00:05:51,049
said to begin with and move it to a

00:05:49,729 --> 00:05:52,849
higher level right

00:05:51,049 --> 00:05:55,219
these are focal points for things right

00:05:52,849 --> 00:05:57,529
we created additions so we can have kind

00:05:55,219 --> 00:05:59,629
of opinionated collections of the

00:05:57,529 --> 00:06:00,979
artifacts that we produce but that's not

00:05:59,629 --> 00:06:03,049
all so what fedora is those are just

00:06:00,979 --> 00:06:06,679
collections right there's nothing

00:06:03,049 --> 00:06:09,409
magical about them it's still content so

00:06:06,679 --> 00:06:10,789
what actually makes fedora valuable and

00:06:09,409 --> 00:06:14,089
valuable is an interesting word right

00:06:10,789 --> 00:06:16,279
it's valuable to itself it's valuable to

00:06:14,089 --> 00:06:18,739
others being up streams down streams

00:06:16,279 --> 00:06:20,419
like what makes it valuable in my

00:06:18,739 --> 00:06:22,279
opinion and I think this actually ties

00:06:20,419 --> 00:06:24,079
in with what Matthew said earlier and we

00:06:22,279 --> 00:06:26,360
didn't play in this I promise it's the

00:06:24,079 --> 00:06:32,049
people right so this this picture here

00:06:26,360 --> 00:06:34,249
is actually from flock in Brno Prague

00:06:32,049 --> 00:06:38,179
sorry I was in Brno before I went to

00:06:34,249 --> 00:06:40,219
Prague so so yes flock Prague and that

00:06:38,179 --> 00:06:42,139
that's package maintainer x' that's

00:06:40,219 --> 00:06:44,329
release engineering that's users QA

00:06:42,139 --> 00:06:46,939
right Fedor is a community and the

00:06:44,329 --> 00:06:51,019
community itself is what is valuable to

00:06:46,939 --> 00:06:53,599
a wide variety of people so why is it

00:06:51,019 --> 00:06:56,179
valuable because we have collaboration

00:06:53,599 --> 00:06:57,889
we have innovation and we have solutions

00:06:56,179 --> 00:07:00,259
ok solutions kind of fall into the

00:06:57,889 --> 00:07:03,349
artifacts section or the additions or

00:07:00,259 --> 00:07:06,529
whatever you may say the innovation

00:07:03,349 --> 00:07:07,279
thing I think in some areas we're really

00:07:06,529 --> 00:07:10,939
good at it

00:07:07,279 --> 00:07:12,979
in other areas it looks like failure

00:07:10,939 --> 00:07:14,629
when we innovate and it doesn't exactly

00:07:12,979 --> 00:07:16,249
pan out and I think that's something we

00:07:14,629 --> 00:07:18,589
have to correct right like Fedora is

00:07:16,249 --> 00:07:21,229
this space where we can do experiments

00:07:18,589 --> 00:07:23,209
we can fail fast and we can learn fast

00:07:21,229 --> 00:07:25,879
and if something doesn't pan out we

00:07:23,209 --> 00:07:27,019
shouldn't we shouldn't be sorry to put

00:07:25,879 --> 00:07:29,839
you on the spot Matthew but we shouldn't

00:07:27,019 --> 00:07:32,659
be down in the dumpster fire of optimism

00:07:29,839 --> 00:07:33,919
because every time I fail I try to look

00:07:32,659 --> 00:07:35,719
at it as a positive thing we learn

00:07:33,919 --> 00:07:37,159
something right we learned what not to

00:07:35,719 --> 00:07:39,110
do or we maybe we learned how to do it

00:07:37,159 --> 00:07:40,009
better next time and I think we need to

00:07:39,110 --> 00:07:41,989
get a little bit better at that than

00:07:40,009 --> 00:07:43,639
what we've become in Fedora where we've

00:07:41,989 --> 00:07:44,929
kind of stagnated on the innovation

00:07:43,639 --> 00:07:47,119
thing and that's particularly true for

00:07:44,929 --> 00:07:48,619
stuff that comes from outside

00:07:47,119 --> 00:07:50,009
contributors that maybe aren't

00:07:48,619 --> 00:07:51,479
necessarily like

00:07:50,009 --> 00:07:53,129
in line with what fedoras doing today

00:07:51,479 --> 00:07:55,199
but sometimes that space is really

00:07:53,129 --> 00:07:58,800
interesting and I'm not to be tuning if

00:07:55,199 --> 00:08:00,539
we have good success there as well so if

00:07:58,800 --> 00:08:01,830
you actually read our mission statement

00:08:00,539 --> 00:08:03,240
which I'm not going to do it and you can

00:08:01,830 --> 00:08:04,830
just trust me that that's what it says

00:08:03,240 --> 00:08:06,569
it basically says all the things that we

00:08:04,830 --> 00:08:09,089
just talked about right like that is

00:08:06,569 --> 00:08:10,439
what Fedora is supposed to be for and

00:08:09,089 --> 00:08:17,089
that's what we're going to actually try

00:08:10,439 --> 00:08:19,499
to strive for going forward with RL so

00:08:17,089 --> 00:08:23,639
well in a sense is a downstream of

00:08:19,499 --> 00:08:26,069
Fedora but what is it unto itself it's a

00:08:23,639 --> 00:08:28,889
long-term supported operating system for

00:08:26,069 --> 00:08:30,990
commercial use and when we're making a

00:08:28,889 --> 00:08:33,449
rail our particular concern is security

00:08:30,990 --> 00:08:36,569
performance stability like cut all those

00:08:33,449 --> 00:08:38,669
ops things right like even though we

00:08:36,569 --> 00:08:42,060
experiment in Fedora we try to never

00:08:38,669 --> 00:08:43,440
experiment in fail and rel and one of

00:08:42,060 --> 00:08:44,699
the things that distinguishes it from

00:08:43,440 --> 00:08:46,319
the Fedora development is that we

00:08:44,699 --> 00:08:51,149
co-developed with hardware and software

00:08:46,319 --> 00:08:53,250
partners like while we pull from up

00:08:51,149 --> 00:08:55,380
streams we actually insist the partners

00:08:53,250 --> 00:08:58,170
get their code into upstream before we

00:08:55,380 --> 00:08:59,639
pull it down again and the other thing

00:08:58,170 --> 00:09:01,740
about rel is that it is the foundation

00:08:59,639 --> 00:09:03,779
for Red Hat's entire commercial product

00:09:01,740 --> 00:09:05,730
portfolio because again it's been a long

00:09:03,779 --> 00:09:08,550
time since it was like rel and maybe

00:09:05,730 --> 00:09:10,740
satellite so what makes rel most

00:09:08,550 --> 00:09:12,660
valuable well as Enterprise versus

00:09:10,740 --> 00:09:14,639
fast-moving stable versus feature is

00:09:12,660 --> 00:09:16,920
back port versus upstream and it's all

00:09:14,639 --> 00:09:18,120
about Western getting things working

00:09:16,920 --> 00:09:21,000
really well and then leaving them alone

00:09:18,120 --> 00:09:22,290
for the rest of your life and when you

00:09:21,000 --> 00:09:25,079
actually do have to make a change make

00:09:22,290 --> 00:09:26,910
the most minimal change you can so

00:09:25,079 --> 00:09:30,329
here's a question where does the rel

00:09:26,910 --> 00:09:33,990
user space come from well about thirteen

00:09:30,329 --> 00:09:37,889
percent of fedora is chosen to become

00:09:33,990 --> 00:09:40,560
rel packages and in that other eighty

00:09:37,889 --> 00:09:41,880
seven percent that is other things that

00:09:40,560 --> 00:09:43,589
are happening in fedora that aren't

00:09:41,880 --> 00:09:45,690
directly related to rel maybe their

00:09:43,589 --> 00:09:47,250
experiments maybe other things are

00:09:45,690 --> 00:09:48,600
happening there it's really cool stuff

00:09:47,250 --> 00:09:50,160
because I don't know about the rest of

00:09:48,600 --> 00:09:52,529
you but I couldn't get my job done if I

00:09:50,160 --> 00:09:54,120
didn't have a floor desktop like it is

00:09:52,529 --> 00:09:56,819
an essential ingredient of my life

00:09:54,120 --> 00:09:59,880
but the last time we actually did that

00:09:56,819 --> 00:10:00,990
13 percent transfer was 2014 I think

00:09:59,880 --> 00:10:02,870
there's room for improvement there

00:10:00,990 --> 00:10:05,030
because it's been for years

00:10:02,870 --> 00:10:12,080
and then where does the real cream will

00:10:05,030 --> 00:10:14,570
come from Josh thank you so so where

00:10:12,080 --> 00:10:16,310
does it come from right if we look back

00:10:14,570 --> 00:10:18,830
to the original graphic of the flow of

00:10:16,310 --> 00:10:20,630
Fedora Tyrell to CentOS everybody would

00:10:18,830 --> 00:10:22,310
assume that the rel kernel comes from

00:10:20,630 --> 00:10:24,800
fedora that's not true

00:10:22,310 --> 00:10:26,990
there's some spec file stuff that in

00:10:24,800 --> 00:10:30,020
that 2014 time frame maybe we pulled

00:10:26,990 --> 00:10:31,910
that in and we looked at it and just

00:10:30,020 --> 00:10:33,830
because of the development workflow and

00:10:31,910 --> 00:10:36,050
the vast number of people inside of Red

00:10:33,830 --> 00:10:37,490
Hat that are working on the kernel they

00:10:36,050 --> 00:10:40,820
threw most of it away they have a

00:10:37,490 --> 00:10:43,460
totally different set up they kept some

00:10:40,820 --> 00:10:45,710
of the structure right of the spec file

00:10:43,460 --> 00:10:48,800
itself but the workflow is completely

00:10:45,710 --> 00:10:51,860
different and also the source is

00:10:48,800 --> 00:10:52,940
upstream now you could argue that that's

00:10:51,860 --> 00:10:54,920
also Fedora

00:10:52,940 --> 00:10:57,290
because Fedora ties very closely to the

00:10:54,920 --> 00:10:59,360
upstream kernel but the development

00:10:57,290 --> 00:11:01,640
space the maintainer ship of this kernel

00:10:59,360 --> 00:11:03,860
in rel is it has very very little to do

00:11:01,640 --> 00:11:05,420
with fedora and so that's kind of an

00:11:03,860 --> 00:11:09,020
interesting point because when we talk

00:11:05,420 --> 00:11:10,400
to hardware partners or is bees that

00:11:09,020 --> 00:11:11,690
have kernel space drivers and things

00:11:10,400 --> 00:11:13,010
like that they say well where do we

00:11:11,690 --> 00:11:15,740
where do we do our work and our answer

00:11:13,010 --> 00:11:18,200
is upstream it's not fedora that's kind

00:11:15,740 --> 00:11:19,670
of a problem sometimes because we tell

00:11:18,200 --> 00:11:21,110
them fedora for other things but we

00:11:19,670 --> 00:11:23,990
don't tell them for the kernel which is

00:11:21,110 --> 00:11:31,580
obviously a major component of a Linux

00:11:23,990 --> 00:11:34,430
distribution so can we do better I think

00:11:31,580 --> 00:11:37,580
we can and actually Laura Abbott and

00:11:34,430 --> 00:11:42,740
stuff Walter or Walters depending on

00:11:37,580 --> 00:11:44,960
who's saying it they have a talk it is

00:11:42,740 --> 00:11:46,850
right after this talk I think we

00:11:44,960 --> 00:11:49,250
establish that and they're gonna talk

00:11:46,850 --> 00:11:51,800
about kernel maintenance and how we

00:11:49,250 --> 00:11:54,320
could possibly do make fedora a better

00:11:51,800 --> 00:11:56,750
place to contribute not develop the

00:11:54,320 --> 00:11:59,390
kernel because development happens

00:11:56,750 --> 00:12:01,460
upstream but integration maintainer ship

00:11:59,390 --> 00:12:02,570
etc etc for the kernel so I would highly

00:12:01,460 --> 00:12:06,070
recommend if you're interested in that

00:12:02,570 --> 00:12:06,070
area to stay for her talk

00:12:06,840 --> 00:12:13,330
all right so that we use number three

00:12:10,150 --> 00:12:17,040
CentOS it's a rebuild of all the rail

00:12:13,330 --> 00:12:19,210
packages and some assembly is required

00:12:17,040 --> 00:12:23,650
but I'm sure it's very straightforward

00:12:19,210 --> 00:12:25,300
just like this schematic so why is sent

00:12:23,650 --> 00:12:26,980
us the most valuable so we know why

00:12:25,300 --> 00:12:30,460
rails value we know why fedoras valued

00:12:26,980 --> 00:12:32,680
but CentOS gets all the free all of the

00:12:30,460 --> 00:12:34,510
rail op stuff it's free and there's this

00:12:32,680 --> 00:12:37,390
one other cool thing which are the

00:12:34,510 --> 00:12:40,960
special interest groups which kind of

00:12:37,390 --> 00:12:43,800
give a space to take rel and then change

00:12:40,960 --> 00:12:46,089
the parts that are important for

00:12:43,800 --> 00:12:48,120
inclusion in future rail and that's the

00:12:46,089 --> 00:12:51,400
thing we just can't do with fedora today

00:12:48,120 --> 00:12:54,790
so maybe there's room for improvement

00:12:51,400 --> 00:12:57,190
there too so remember that technology

00:12:54,790 --> 00:12:58,450
attack we showed you let's let's talk

00:12:57,190 --> 00:13:02,200
about how that actually affects the Red

00:12:58,450 --> 00:13:03,790
Hat portfolio okay he said the portfolio

00:13:02,200 --> 00:13:05,350
word I promise is not market texture

00:13:03,790 --> 00:13:07,779
we're just gonna talk about where

00:13:05,350 --> 00:13:11,770
redheads products land in these these

00:13:07,779 --> 00:13:13,480
spaces so this is the stack if you look

00:13:11,770 --> 00:13:15,070
you know obviously hardware's hardware

00:13:13,480 --> 00:13:17,170
partners and OEMs and things like that

00:13:15,070 --> 00:13:18,970
right Red Hat doesn't make hardware but

00:13:17,170 --> 00:13:20,620
we have a lot of partners that do and we

00:13:18,970 --> 00:13:21,730
work very hard to help picture that

00:13:20,620 --> 00:13:25,920
their Hardware lights up with our

00:13:21,730 --> 00:13:28,810
operating system also cloud also cloud

00:13:25,920 --> 00:13:30,460
so the operating system layer is

00:13:28,810 --> 00:13:32,320
obviously rel right like that is our

00:13:30,460 --> 00:13:33,940
main bread-and-butter product and it is

00:13:32,320 --> 00:13:35,980
very stable is it very secure very

00:13:33,940 --> 00:13:38,020
performant right so that's the focus

00:13:35,980 --> 00:13:42,070
there for the light up your hardware and

00:13:38,020 --> 00:13:45,760
your cloud layer so for guests we have

00:13:42,070 --> 00:13:48,430
management of guests through Rev and we

00:13:45,760 --> 00:13:50,290
have OpenStack okay I'm not going into

00:13:48,430 --> 00:13:53,350
details here this is very high level and

00:13:50,290 --> 00:13:54,790
also anything that I say is my opinion

00:13:53,350 --> 00:13:56,380
and not necessarily what Red Hat

00:13:54,790 --> 00:13:59,620
marketing or sales would be telling you

00:13:56,380 --> 00:14:02,920
so for the virtual hardware or less we

00:13:59,620 --> 00:14:05,440
have rel obviously we also have fedora

00:14:02,920 --> 00:14:07,120
you can put that in there core OS we

00:14:05,440 --> 00:14:08,589
added to this slide you could possibly

00:14:07,120 --> 00:14:10,660
call it container Linux I know container

00:14:08,589 --> 00:14:12,250
Linux also runs on bare metal there's a

00:14:10,660 --> 00:14:13,480
lot of interesting things going around

00:14:12,250 --> 00:14:15,940
there and we announced our core OS

00:14:13,480 --> 00:14:17,230
acquisition and this is just a guess on

00:14:15,940 --> 00:14:18,940
where we're gonna land it like this is

00:14:17,230 --> 00:14:20,889
me just making stuff up so

00:14:18,940 --> 00:14:22,300
kind of ignore the core OS part there's

00:14:20,889 --> 00:14:24,250
more details coming on that when they

00:14:22,300 --> 00:14:25,600
actually have plans container

00:14:24,250 --> 00:14:26,170
orchestration obviously a redhead

00:14:25,600 --> 00:14:28,480
OpenShift

00:14:26,170 --> 00:14:30,370
and our okay D product from an

00:14:28,480 --> 00:14:33,000
open-source perspective is where the

00:14:30,370 --> 00:14:35,350
container orchestration happens the

00:14:33,000 --> 00:14:36,130
application stacking libraries like who

00:14:35,350 --> 00:14:38,589
knows

00:14:36,130 --> 00:14:40,089
sometimes it's rel sometimes it's you

00:14:38,589 --> 00:14:42,970
know stuff that you pip install on your

00:14:40,089 --> 00:14:44,889
machine it the point is there's a wide

00:14:42,970 --> 00:14:46,959
variety of applications and libraries

00:14:44,889 --> 00:14:49,000
and they don't all necessarily come from

00:14:46,959 --> 00:14:50,290
anything that Red Hat provides right so

00:14:49,000 --> 00:14:52,569
that's kind of a key thing to keep in

00:14:50,290 --> 00:14:54,250
mind and then the container applications

00:14:52,569 --> 00:14:57,100
obviously we have open shift as to I

00:14:54,250 --> 00:14:58,690
weave customer applications we have pod

00:14:57,100 --> 00:15:00,190
men and bilder and other things that we

00:14:58,690 --> 00:15:02,649
can use to create these containers and

00:15:00,190 --> 00:15:04,240
run them in this technology space so

00:15:02,649 --> 00:15:08,009
that's just kind of a mapping of where

00:15:04,240 --> 00:15:11,310
we're at so if you look at all that

00:15:08,009 --> 00:15:15,490
fedora plays in exactly one of those

00:15:11,310 --> 00:15:18,459
none of the other products really use

00:15:15,490 --> 00:15:21,240
fedora as their upstream as their source

00:15:18,459 --> 00:15:24,279
that's not to say that they don't have

00:15:21,240 --> 00:15:26,290
packages in them but they don't do so

00:15:24,279 --> 00:15:28,000
what do they use right so obviously rail

00:15:26,290 --> 00:15:30,699
uses fedora plus plus some upstream

00:15:28,000 --> 00:15:32,980
stuff directly from upstream OpenStack

00:15:30,699 --> 00:15:35,920
uses RTO which is based on top of CentOS

00:15:32,980 --> 00:15:37,810
Red Hat virtualization uses overt they

00:15:35,920 --> 00:15:39,519
also use CentOS and I should I should

00:15:37,810 --> 00:15:41,350
qualify this slide here when I look this

00:15:39,519 --> 00:15:42,850
up sometimes I could figure out where

00:15:41,350 --> 00:15:45,459
they do like their CI CD or their

00:15:42,850 --> 00:15:47,949
development space like RTO is very well

00:15:45,459 --> 00:15:49,630
known to be on top of CentOS sometimes I

00:15:47,949 --> 00:15:51,759
couldn't find that so I look to see what

00:15:49,630 --> 00:15:52,899
their install guide said like what did

00:15:51,759 --> 00:15:54,670
they say to lay down for your host

00:15:52,899 --> 00:15:57,639
operating system and almost all of them

00:15:54,670 --> 00:15:59,139
were Santos except for SEF SEF is weird

00:15:57,639 --> 00:16:01,209
they have this really awesome quick

00:15:59,139 --> 00:16:02,740
install video and they say using bundu

00:16:01,209 --> 00:16:05,130
so we maybe want to talk to them a

00:16:02,740 --> 00:16:05,130
little bit but

00:16:05,439 --> 00:16:10,029
so open shave container platform

00:16:07,389 --> 00:16:12,009
obviously they use rel they also have a

00:16:10,029 --> 00:16:14,319
platform as-a-service sig in the CentOS

00:16:12,009 --> 00:16:16,619
SIG's where they do some integration

00:16:14,319 --> 00:16:18,489
there but mostly they're kind of a

00:16:16,619 --> 00:16:20,259
self-contained thing they do a lot of

00:16:18,489 --> 00:16:22,839
upstream development through github as

00:16:20,259 --> 00:16:24,009
well and then Gluster they're actually

00:16:22,839 --> 00:16:26,139
the overachievers here they they

00:16:24,009 --> 00:16:28,599
actually have install instructions for

00:16:26,139 --> 00:16:31,239
every major OS which is really cool to

00:16:28,599 --> 00:16:34,839
see I was happy on that one but the

00:16:31,239 --> 00:16:39,249
point is only one really claims to have

00:16:34,839 --> 00:16:40,359
fedora as its upstream source I can't

00:16:39,249 --> 00:16:45,279
remember are you covering this one or am

00:16:40,359 --> 00:16:46,989
i I'll take it okay all right sue this

00:16:45,279 --> 00:16:50,049
isn't arbitrary right there are actual

00:16:46,989 --> 00:16:53,559
reasons for this and and it really comes

00:16:50,049 --> 00:16:56,859
down to the things that make rel

00:16:53,559 --> 00:16:58,239
valuable to customers if you aren't

00:16:56,859 --> 00:17:00,279
developing an operating system if you

00:16:58,239 --> 00:17:02,319
want to develop on top of it it's a lot

00:17:00,279 --> 00:17:06,189
easier to develop on top of an operating

00:17:02,319 --> 00:17:07,929
system that isn't moving and so this is

00:17:06,189 --> 00:17:11,079
why they choose sent to us they're like

00:17:07,929 --> 00:17:12,850
inside Retta we have tons of discretion

00:17:11,079 --> 00:17:14,679
on what we do and we do the thing that's

00:17:12,850 --> 00:17:15,909
easiest most of the time as long as it

00:17:14,679 --> 00:17:18,610
lines with like upstream first

00:17:15,909 --> 00:17:20,139
principles but that upstream is not is

00:17:18,610 --> 00:17:22,600
not necessarily fedoras unnecessarily

00:17:20,139 --> 00:17:23,860
sent to us it is it is like the the

00:17:22,600 --> 00:17:26,220
highest point of the mountain where the

00:17:23,860 --> 00:17:29,100
snow falls

00:17:26,220 --> 00:17:31,980
so we started with this view then we go

00:17:29,100 --> 00:17:35,840
from Fedora Linux Tyrell descent OS but

00:17:31,980 --> 00:17:38,400
the truth is that it's more like this

00:17:35,840 --> 00:17:40,860
because every once in a while we make a

00:17:38,400 --> 00:17:42,930
new rail release but most of the time

00:17:40,860 --> 00:17:47,070
we're spending our our days and nights

00:17:42,930 --> 00:17:51,750
on updates so between 2014 and now there

00:17:47,070 --> 00:17:54,720
have been a lot of rail updates and her

00:17:51,750 --> 00:17:56,160
package may be an individual maintainer

00:17:54,720 --> 00:17:58,890
is gonna pull and run their stuff

00:17:56,160 --> 00:18:00,420
through fedora but often they're

00:17:58,890 --> 00:18:02,280
actually going to push their stuff

00:18:00,420 --> 00:18:04,710
through CentOS test their stuff in

00:18:02,280 --> 00:18:06,960
CentOS because it is highly stable and

00:18:04,710 --> 00:18:09,720
if they need to interact with a hardware

00:18:06,960 --> 00:18:11,700
partner or a community member and that's

00:18:09,720 --> 00:18:15,810
their upstream then they're gonna work

00:18:11,700 --> 00:18:17,280
there too so sometimes upstream is

00:18:15,810 --> 00:18:21,210
feeding itself sometimes the waterfall

00:18:17,280 --> 00:18:22,680
goes backwards and the problem that we

00:18:21,210 --> 00:18:24,480
have is that we just want to have a

00:18:22,680 --> 00:18:26,850
functioning community like we want to be

00:18:24,480 --> 00:18:29,040
able to give consistent messaging this

00:18:26,850 --> 00:18:33,300
is where I don't I say that I used to be

00:18:29,040 --> 00:18:35,400
an engineer I swear so which is when

00:18:33,300 --> 00:18:37,850
people tell people go here work on your

00:18:35,400 --> 00:18:40,980
stuff share enjoy make it good

00:18:37,850 --> 00:18:43,320
so these are the problems that we see

00:18:40,980 --> 00:18:46,380
right now that we're actually working on

00:18:43,320 --> 00:18:47,850
I mean within within this audience there

00:18:46,380 --> 00:18:50,970
are tons of other things that we're

00:18:47,850 --> 00:18:53,250
working on and many of them feed into

00:18:50,970 --> 00:18:56,730
this many of them are are there other

00:18:53,250 --> 00:19:00,369
experiments but you know like that

00:18:56,730 --> 00:19:03,249
we're Josh and I are this is this is the

00:19:00,369 --> 00:19:04,840
thing we care about a lot so the Fedora

00:19:03,249 --> 00:19:08,499
kernel and the rail kernels are

00:19:04,840 --> 00:19:11,499
unrelated we could do so much better

00:19:08,499 --> 00:19:14,110
than that fedora releases available to

00:19:11,499 --> 00:19:16,269
individuals but statistically speaking

00:19:14,110 --> 00:19:18,580
irrelevant to red hats business but for

00:19:16,269 --> 00:19:22,360
a few years

00:19:18,580 --> 00:19:25,090
Red Hat partners participate to get

00:19:22,360 --> 00:19:27,519
content in Darrell but usually not

00:19:25,090 --> 00:19:30,340
through fedora and again what we want is

00:19:27,519 --> 00:19:32,379
for for fedora to be red hats upstream

00:19:30,340 --> 00:19:35,889
not Rell's up so you want to be red hats

00:19:32,379 --> 00:19:38,440
upstream and again most of red hats

00:19:35,889 --> 00:19:40,539
product portfolio is using a scent OS

00:19:38,440 --> 00:19:43,090
and not fedora and so this is a thing

00:19:40,539 --> 00:19:45,669
that we would like to would like to fix

00:19:43,090 --> 00:19:48,009
because it's it's not valuable

00:19:45,669 --> 00:19:50,080
differentiation so summed up there's no

00:19:48,009 --> 00:19:52,779
clear answer that we can provide to

00:19:50,080 --> 00:19:58,210
anybody if they're a user or developer a

00:19:52,779 --> 00:19:59,590
partner software developer is B for how

00:19:58,210 --> 00:20:01,539
they should engage the community which

00:19:59,590 --> 00:20:04,059
communication engage in like what is

00:20:01,539 --> 00:20:07,119
what is the path to to join and work

00:20:04,059 --> 00:20:10,029
with us but it doesn't have to be this

00:20:07,119 --> 00:20:13,049
way we have we have other options I

00:20:10,029 --> 00:20:17,520
think you have option one do you

00:20:13,049 --> 00:20:20,380
remember why I picked option one so

00:20:17,520 --> 00:20:21,370
revisiting Linux distributions again

00:20:20,380 --> 00:20:22,870
right

00:20:21,370 --> 00:20:24,910
like Matthew's talked about this with

00:20:22,870 --> 00:20:27,100
rings Langdon's talked about this at

00:20:24,910 --> 00:20:28,660
length for the past couple flocks this

00:20:27,100 --> 00:20:30,070
is something that we talked about it's

00:20:28,660 --> 00:20:32,590
something we have to really start doing

00:20:30,070 --> 00:20:34,179
so I started off saying we have a pile

00:20:32,590 --> 00:20:37,330
of packages we try to manage them as a

00:20:34,179 --> 00:20:40,600
unit sometimes it works we get a release

00:20:37,330 --> 00:20:42,520
every six months out the door after that

00:20:40,600 --> 00:20:44,380
release happens what happens to that

00:20:42,520 --> 00:20:48,220
pile of packages do they stay cohesive

00:20:44,380 --> 00:20:50,110
do they move at the same pace no after

00:20:48,220 --> 00:20:51,940
that people update the package willy

00:20:50,110 --> 00:20:55,059
nilly we're based on whatever they want

00:20:51,940 --> 00:20:56,530
to do and that's okay unless you're

00:20:55,059 --> 00:21:00,909
still claiming that it's a cohesive unit

00:20:56,530 --> 00:21:03,340
as a distribution the rules don't apply

00:21:00,909 --> 00:21:04,720
evenly right and we mean that two ways

00:21:03,340 --> 00:21:06,280
one the maintainer still paying

00:21:04,720 --> 00:21:08,740
attention to the rules evenly across the

00:21:06,280 --> 00:21:10,840
package set which is human nature but

00:21:08,740 --> 00:21:14,350
also to the rules don't make sense

00:21:10,840 --> 00:21:15,970
across the package set right if you have

00:21:14,350 --> 00:21:18,429
something that is slow moving upstream

00:21:15,970 --> 00:21:20,830
and stable you don't really need to

00:21:18,429 --> 00:21:22,480
update it every single release Brendan

00:21:20,830 --> 00:21:24,700
likes to use the examples bash how

00:21:22,480 --> 00:21:27,429
different really at a fundamental level

00:21:24,700 --> 00:21:30,070
is the version of bash and rel seven and

00:21:27,429 --> 00:21:31,630
the version of bash in Fedora 28 the

00:21:30,070 --> 00:21:33,909
bash maintainer can probably get up here

00:21:31,630 --> 00:21:35,530
and talk an hour on the differences the

00:21:33,909 --> 00:21:38,770
average user would be like I don't know

00:21:35,530 --> 00:21:41,200
like it makes me run my commands right

00:21:38,770 --> 00:21:45,220
I'm sure that there's a whole spectrum

00:21:41,200 --> 00:21:47,380
of opinions within there but the rules

00:21:45,220 --> 00:21:48,640
don't necessarily apply generally so we

00:21:47,380 --> 00:21:53,080
have to start focusing on that a little

00:21:48,640 --> 00:21:56,799
bit okay so the first thing we want to

00:21:53,080 --> 00:22:00,100
cover is the distribution and is it time

00:21:56,799 --> 00:22:01,270
to reevaluate that we think it is but I

00:22:00,100 --> 00:22:02,980
want to say something before hand which

00:22:01,270 --> 00:22:06,460
is that we're each reading some ground

00:22:02,980 --> 00:22:07,510
here and previously when we looked at

00:22:06,460 --> 00:22:09,280
each one of these things in isolation

00:22:07,510 --> 00:22:11,169
they didn't make sense for practical

00:22:09,280 --> 00:22:14,169
reasons but when you put them together

00:22:11,169 --> 00:22:15,700
it makes a lot more sense so I know

00:22:14,169 --> 00:22:16,870
everybody's going to have a healthy dose

00:22:15,700 --> 00:22:20,470
of skepticism for some of these things

00:22:16,870 --> 00:22:23,070
and wild enthusiasm for others except

00:22:20,470 --> 00:22:26,610
for Matthews crossing crossing his arms

00:22:23,070 --> 00:22:30,059
but so first one does it make sense to

00:22:26,610 --> 00:22:34,620
split the distribution into an operating

00:22:30,059 --> 00:22:37,559
system and applications Windows doesn't

00:22:34,620 --> 00:22:38,940
have a distribution it splits them back

00:22:37,559 --> 00:22:40,649
West doesn't have a distribution it

00:22:38,940 --> 00:22:42,450
splits them iOS doesn't have a

00:22:40,649 --> 00:22:44,580
distribution Android doesn't have a

00:22:42,450 --> 00:22:46,620
distribution it has an operating system

00:22:44,580 --> 00:22:48,899
it has applications there are

00:22:46,620 --> 00:22:50,700
distinctions between the two there are

00:22:48,899 --> 00:22:53,580
different rules for the two there is a

00:22:50,700 --> 00:22:55,620
different App Store for the two I don't

00:22:53,580 --> 00:22:57,750
think we have to go quite that far but

00:22:55,620 --> 00:22:59,970
maybe we create some opportunities for

00:22:57,750 --> 00:23:02,220
ourselves by having different policies

00:22:59,970 --> 00:23:04,139
for the operating system side of the

00:23:02,220 --> 00:23:09,659
distribution in the application side of

00:23:04,139 --> 00:23:13,649
the distribution so let's let's consider

00:23:09,659 --> 00:23:15,809
what that gets us so what are the rules

00:23:13,649 --> 00:23:18,659
so operating systems you need one to

00:23:15,809 --> 00:23:20,309
boot you don't actually just boot an

00:23:18,659 --> 00:23:22,529
operating system for the fun of it like

00:23:20,309 --> 00:23:24,509
you want to run something so you need be

00:23:22,529 --> 00:23:27,480
able to boot you need a certain set of

00:23:24,509 --> 00:23:28,950
features generally once it boots you

00:23:27,480 --> 00:23:31,259
don't want to change it very much and

00:23:28,950 --> 00:23:33,179
the smaller it is the better because

00:23:31,259 --> 00:23:34,320
again you're not booting it for the fun

00:23:33,179 --> 00:23:38,100
of it you're booting up so you can run

00:23:34,320 --> 00:23:40,259
something so we have a lot of operating

00:23:38,100 --> 00:23:42,929
system distributions right now we have

00:23:40,259 --> 00:23:47,970
fedora row atomic container Linux core

00:23:42,929 --> 00:23:49,679
OS and they all have a role but we treat

00:23:47,970 --> 00:23:51,570
them the same way we treat applications

00:23:49,679 --> 00:23:52,919
and then on the application side people

00:23:51,570 --> 00:23:55,259
usually want the latest more features

00:23:52,919 --> 00:23:57,149
are good they can be closer to upstream

00:23:55,259 --> 00:23:59,129
and more is more like if it's if you

00:23:57,149 --> 00:24:00,990
have a one gigabyte application yeah

00:23:59,129 --> 00:24:02,460
it's kind of big but you wanted that and

00:24:00,990 --> 00:24:03,480
you were okay with it for operating

00:24:02,460 --> 00:24:06,330
systems it's non-negotiable

00:24:03,480 --> 00:24:09,059
so one thing though is that variation

00:24:06,330 --> 00:24:11,669
between the different OS distributions

00:24:09,059 --> 00:24:13,110
is wasteful when it comes to

00:24:11,669 --> 00:24:15,929
applications so if you could have one

00:24:13,110 --> 00:24:18,570
version of bash that ran on fedora and

00:24:15,929 --> 00:24:20,100
sent to us and rel that's probably the

00:24:18,570 --> 00:24:22,379
same maintainer they have one third the

00:24:20,100 --> 00:24:23,789
amount of work nominally and even if

00:24:22,379 --> 00:24:25,860
that's just sharing the source and

00:24:23,789 --> 00:24:27,659
changing the binaries out because of

00:24:25,860 --> 00:24:30,090
static linking rules or dynamic linking

00:24:27,659 --> 00:24:32,100
rules they're still coming out ahead so

00:24:30,090 --> 00:24:34,110
if we split the operating system in

00:24:32,100 --> 00:24:36,400
applications maybe there's more room for

00:24:34,110 --> 00:24:38,530
sharing between the different

00:24:36,400 --> 00:24:42,880
communities at least on the application

00:24:38,530 --> 00:24:46,990
side so anyone who's paid attention to

00:24:42,880 --> 00:24:50,320
rings or modules is probably thinking

00:24:46,990 --> 00:24:51,670
but these things the gray area is how do

00:24:50,320 --> 00:24:54,190
you know if it's an operating system or

00:24:51,670 --> 00:24:55,960
an application dependencies get very

00:24:54,190 --> 00:24:58,540
complicated if you start intermixing

00:24:55,960 --> 00:25:01,620
them and the QA matrix gets huge so

00:24:58,540 --> 00:25:04,810
we've got kind of three things there

00:25:01,620 --> 00:25:06,280
it's okay to iterate if you do it once

00:25:04,810 --> 00:25:08,380
and it doesn't make sense you can do it

00:25:06,280 --> 00:25:12,130
again and again and again this is a work

00:25:08,380 --> 00:25:14,860
in progress but it is not it is not

00:25:12,130 --> 00:25:18,880
final opinions these are complicated but

00:25:14,860 --> 00:25:21,190
all that work on modularity two of the

00:25:18,880 --> 00:25:23,770
things that came out of it for from my

00:25:21,190 --> 00:25:25,380
standpoint are stream branches which

00:25:23,770 --> 00:25:27,310
provide the option of parallel instant

00:25:25,380 --> 00:25:29,170
availability even if you don't have

00:25:27,310 --> 00:25:31,210
parallel installation and that means

00:25:29,170 --> 00:25:33,910
that you can have a situation where your

00:25:31,210 --> 00:25:35,920
operating system and your applications

00:25:33,910 --> 00:25:38,080
have different provides and dependencies

00:25:35,920 --> 00:25:39,550
as long as you have some sort of

00:25:38,080 --> 00:25:41,550
repository some sort of module stream

00:25:39,550 --> 00:25:44,530
that gives the apps what they need and

00:25:41,550 --> 00:25:47,650
the QA matrix the Q matrix is already

00:25:44,530 --> 00:25:50,140
huge like we've done from just an OS to

00:25:47,650 --> 00:25:52,780
all these other technologies like 26 Red

00:25:50,140 --> 00:25:54,820
Hat products but all of them nearly all

00:25:52,780 --> 00:25:57,010
of them exist in some capacity inside

00:25:54,820 --> 00:25:59,380
fedora and we're definitely not testing

00:25:57,010 --> 00:26:01,960
them and NCI is the way the community is

00:25:59,380 --> 00:26:05,980
actually bind together and can trust

00:26:01,960 --> 00:26:10,120
each other so real CI is no longer

00:26:05,980 --> 00:26:11,950
optional all right so let's say actually

00:26:10,120 --> 00:26:14,830
are you doing this sure I'll do this all

00:26:11,950 --> 00:26:17,640
right why not can you tell we finished

00:26:14,830 --> 00:26:21,310
these slides at 2:30 in the morning

00:26:17,640 --> 00:26:23,920
so revisiting a life cycle right life

00:26:21,310 --> 00:26:25,870
cycles can be different as a as Brennan

00:26:23,920 --> 00:26:27,370
said between OS and applications now he

00:26:25,870 --> 00:26:29,260
actually said maybe you want your OS to

00:26:27,370 --> 00:26:31,270
be longer sometimes you want to be

00:26:29,260 --> 00:26:33,130
shorter right and atomic is already kind

00:26:31,270 --> 00:26:35,620
of doing this in the way that they're

00:26:33,130 --> 00:26:37,690
doing like a two-week release of their

00:26:35,620 --> 00:26:39,400
images there's all kinds of different

00:26:37,690 --> 00:26:41,890
reasons for having different life cycles

00:26:39,400 --> 00:26:45,170
for things Fedora has a single life

00:26:41,890 --> 00:26:46,970
cycle across the entire package set

00:26:45,170 --> 00:26:48,650
except for a tonic who's cheating but

00:26:46,970 --> 00:26:51,220
that's okay because that's the kind of

00:26:48,650 --> 00:26:53,840
innovation that we're looking for huh

00:26:51,220 --> 00:26:55,310
KDE is also cheating right like that

00:26:53,840 --> 00:26:57,410
goes back to the whole the general rules

00:26:55,310 --> 00:26:59,030
don't apply so when I say cheat I'm

00:26:57,410 --> 00:26:59,870
actually kind of like applauding them

00:26:59,030 --> 00:27:01,400
right because they're getting away with

00:26:59,870 --> 00:27:04,460
something that people actually want to

00:27:01,400 --> 00:27:08,060
do and we're not really yelling at them

00:27:04,460 --> 00:27:09,920
so that's okay but if you have different

00:27:08,060 --> 00:27:12,920
life cycles you got to figure out how

00:27:09,920 --> 00:27:14,300
does that work right how do you have an

00:27:12,920 --> 00:27:15,830
OS that moves out from underneath the

00:27:14,300 --> 00:27:17,750
applications but the applications still

00:27:15,830 --> 00:27:19,100
work and there's a lot of really smart

00:27:17,750 --> 00:27:20,750
people working on this problem and I

00:27:19,100 --> 00:27:23,270
think we can actually carry it forward I

00:27:20,750 --> 00:27:26,990
think there's also a lot of benefit to

00:27:23,270 --> 00:27:29,660
having an OS a set of content that is

00:27:26,990 --> 00:27:32,390
small that you can update and you can

00:27:29,660 --> 00:27:34,700
trust right now Fedora is pretty good

00:27:32,390 --> 00:27:36,080
about this from release to release I'm

00:27:34,700 --> 00:27:38,270
gonna say it's through a lot of heroics

00:27:36,080 --> 00:27:40,310
from people in this room and people that

00:27:38,270 --> 00:27:42,080
couldn't make it today but that's the

00:27:40,310 --> 00:27:44,330
case it's not because we have CI in

00:27:42,080 --> 00:27:46,640
place it's not because the package set

00:27:44,330 --> 00:27:48,350
is inherently stable it is because we

00:27:46,640 --> 00:27:49,880
literally crush ourselves every six

00:27:48,350 --> 00:27:51,680
months to get it released out the door

00:27:49,880 --> 00:27:54,500
that we know will update from the prior

00:27:51,680 --> 00:27:57,440
release so earlier today I actually

00:27:54,500 --> 00:27:58,970
updated Android on my phone and somebody

00:27:57,440 --> 00:28:00,650
from the core OS team looked at me and

00:27:58,970 --> 00:28:02,090
said good luck right like you're doing

00:28:00,650 --> 00:28:04,070
that at a conference you're crazy it

00:28:02,090 --> 00:28:05,630
worked fine Fedora has also done that

00:28:04,070 --> 00:28:08,360
for me for the past four releases it's

00:28:05,630 --> 00:28:10,340
been very boring but at the cost of a

00:28:08,360 --> 00:28:12,710
lot of work so we got to figure out how

00:28:10,340 --> 00:28:14,750
to make it less work do it automated and

00:28:12,710 --> 00:28:17,200
figure out how to split those OS and

00:28:14,750 --> 00:28:21,940
applications

00:28:17,200 --> 00:28:24,700
so can we do better all fields after

00:28:21,940 --> 00:28:27,370
Laura it's going to tell us that he

00:28:24,700 --> 00:28:34,780
thinks so and how and Josh is going to

00:28:27,370 --> 00:28:36,930
be there I am so it must be true all

00:28:34,780 --> 00:28:40,960
right so the next one on the list is

00:28:36,930 --> 00:28:42,880
again because the place that we hope we

00:28:40,960 --> 00:28:45,400
can get to is consistent guidance on

00:28:42,880 --> 00:28:48,310
where to send anybody we want to send

00:28:45,400 --> 00:28:49,720
them into the community is there there

00:28:48,310 --> 00:28:51,730
are differences between the fedora and

00:28:49,720 --> 00:28:54,460
CentOS community and and we have to like

00:28:51,730 --> 00:28:55,930
honor the founding principles of them

00:28:54,460 --> 00:28:57,610
and make it work

00:28:55,930 --> 00:29:00,820
but that doesn't mean that we can't

00:28:57,610 --> 00:29:02,860
narrow the gap between them one of the

00:29:00,820 --> 00:29:04,600
things that we can do is reduce the

00:29:02,860 --> 00:29:08,050
differentiation in the infrastructure

00:29:04,600 --> 00:29:12,670
it's more efficient it lets the effort

00:29:08,050 --> 00:29:14,530
team do more and there is a talk by our

00:29:12,670 --> 00:29:18,340
fearless leader matthew miller and jim

00:29:14,530 --> 00:29:20,500
heron on this after paul fields so again

00:29:18,340 --> 00:29:22,270
this is we are spending a lot of time

00:29:20,500 --> 00:29:24,310
coordinating these things because we

00:29:22,270 --> 00:29:26,080
think when you put it all together it

00:29:24,310 --> 00:29:29,110
makes sense in a way that by itself it

00:29:26,080 --> 00:29:32,200
just does not and the last thing on the

00:29:29,110 --> 00:29:36,010
list is just commitment to continuous

00:29:32,200 --> 00:29:37,540
integration i think a lot of people hear

00:29:36,010 --> 00:29:40,330
the word CI and they think oh that's

00:29:37,540 --> 00:29:42,250
Adams problem he's the QA guy he's in

00:29:40,330 --> 00:29:46,180
Seattle he can just go to Starbucks and

00:29:42,250 --> 00:29:49,450
it'll it'll work out and that has been

00:29:46,180 --> 00:29:51,700
true kind of but at the same time it is

00:29:49,450 --> 00:29:53,260
not is he in Vancouver he's in

00:29:51,700 --> 00:29:55,980
Washington he's he's in the northwest

00:29:53,260 --> 00:29:59,280
area anyway

00:29:55,980 --> 00:30:04,770
I like how you guys out of all the stuff

00:29:59,280 --> 00:30:05,760
we've said so far he's fantastic I'm

00:30:04,770 --> 00:30:11,280
gonna take this as a read that we're

00:30:05,760 --> 00:30:15,390
doing pretty good so far so he's in the

00:30:11,280 --> 00:30:18,390
Puget Sound area so the thing is that

00:30:15,390 --> 00:30:20,520
it's not a QA problem ci is is

00:30:18,390 --> 00:30:23,130
fundamentally a development problem and

00:30:20,520 --> 00:30:24,990
the more packages you have the more

00:30:23,130 --> 00:30:28,110
complexity you have the more essential

00:30:24,990 --> 00:30:29,820
that it becomes so this has already been

00:30:28,110 --> 00:30:32,010
like pitched once today but Brian

00:30:29,820 --> 00:30:34,890
Stinson is doing a talk on Thursday at

00:30:32,010 --> 00:30:38,010
11:30 in to Hamburg where he's talking

00:30:34,890 --> 00:30:41,130
about the current state of CI and again

00:30:38,010 --> 00:30:43,169
when when all of those other products

00:30:41,130 --> 00:30:45,900
are doing their upstream work and with

00:30:43,169 --> 00:30:48,870
sent to us a big part of that is because

00:30:45,900 --> 00:30:50,250
send OSC I is in great shape and it's

00:30:48,870 --> 00:30:51,690
something that they trust and believe in

00:30:50,250 --> 00:30:55,710
and that's something that we need to

00:30:51,690 --> 00:30:58,290
have in fedora too so let's put it all

00:30:55,710 --> 00:31:03,080
together so we have some problems do we

00:30:58,290 --> 00:31:03,080
have solutions curl problem

00:31:03,620 --> 00:31:11,400
talk to Laura no inside so yes we have

00:31:09,330 --> 00:31:12,510
we have some possible ideas there

00:31:11,400 --> 00:31:15,510
Laura's going to go into them a little

00:31:12,510 --> 00:31:17,630
bit more in detail obviously but we

00:31:15,510 --> 00:31:20,130
really want to have that incubation of

00:31:17,630 --> 00:31:29,780
the kernel across a bunch of different

00:31:20,130 --> 00:31:29,780
stacks problem - apparently talk to me

00:31:30,740 --> 00:31:35,160
there's a lot of time between rail

00:31:33,270 --> 00:31:38,040
releases where Fedora just isn't used by

00:31:35,160 --> 00:31:40,500
Red Hat can we do something about that I

00:31:38,040 --> 00:31:43,520
think so Paul thinks so he's going to

00:31:40,500 --> 00:31:47,340
talk about it this afternoon after aura

00:31:43,520 --> 00:31:49,020
problem three hardware partners actually

00:31:47,340 --> 00:31:52,740
yeah okay I'll give this one

00:31:49,020 --> 00:31:55,140
okay so hardware partners for Red Hat or

00:31:52,740 --> 00:31:56,340
really any any partner right it could be

00:31:55,140 --> 00:31:56,910
an arm partner that's interested in

00:31:56,340 --> 00:32:00,510
fedora

00:31:56,910 --> 00:32:02,250
so they participate sometimes is a step

00:32:00,510 --> 00:32:04,320
just to get content into row right like

00:32:02,250 --> 00:32:05,760
the first question they always ask is

00:32:04,320 --> 00:32:07,920
how can I get this random hardware or

00:32:05,760 --> 00:32:10,050
specific package into rel we tell them

00:32:07,920 --> 00:32:12,240
fedora because that's upstream that's

00:32:10,050 --> 00:32:13,680
how it should be but if it's just a

00:32:12,240 --> 00:32:16,350
process step are they really engaging

00:32:13,680 --> 00:32:17,790
right like do they participate some of

00:32:16,350 --> 00:32:19,820
them are a lot better than others Dan

00:32:17,790 --> 00:32:22,410
knows IBM actually pays attention to

00:32:19,820 --> 00:32:24,120
fedora they run fedora they donate

00:32:22,410 --> 00:32:26,010
hardware for fedora to have multi arch

00:32:24,120 --> 00:32:28,790
capabilities they're actually a really

00:32:26,010 --> 00:32:31,350
good partner in that space they do it

00:32:28,790 --> 00:32:32,910
one because it's fun I know the people

00:32:31,350 --> 00:32:34,800
that work at IBM to do it and they enjoy

00:32:32,910 --> 00:32:36,450
it right like that's cool but also from

00:32:34,800 --> 00:32:38,310
a business standpoint they do it because

00:32:36,450 --> 00:32:41,430
they think it's a view into the next

00:32:38,310 --> 00:32:43,350
realm release and that's really poor

00:32:41,430 --> 00:32:45,840
visibility for them they're guessing

00:32:43,350 --> 00:32:48,630
right if somebody comes up with this

00:32:45,840 --> 00:32:50,070
cool atomic thing they are that they're

00:32:48,630 --> 00:32:52,920
like they're trying to guess is atomic

00:32:50,070 --> 00:32:55,080
the future of rel is module is the

00:32:52,920 --> 00:32:57,450
future of rel like they don't know and

00:32:55,080 --> 00:32:58,620
they can't ask and we can't tell them so

00:32:57,450 --> 00:33:00,540
we want to make sure that we make it

00:32:58,620 --> 00:33:03,210
clear why they want to participate in

00:33:00,540 --> 00:33:04,650
fedora and it can't just be to play

00:33:03,210 --> 00:33:06,040
guessing games on what the next rail

00:33:04,650 --> 00:33:08,980
releases

00:33:06,040 --> 00:33:11,140
so we have a little bit of twist here

00:33:08,980 --> 00:33:13,870
for them and that's let's make it

00:33:11,140 --> 00:33:18,040
possible to participate in fedora rel

00:33:13,870 --> 00:33:19,630
and CentOS in an easier way so that they

00:33:18,040 --> 00:33:21,070
can understand what's going to happen

00:33:19,630 --> 00:33:22,600
where their content is going to go how

00:33:21,070 --> 00:33:25,300
they can get that feedback loop across

00:33:22,600 --> 00:33:27,280
all three distributions we can

00:33:25,300 --> 00:33:28,660
experiment in fedora and they can engage

00:33:27,280 --> 00:33:33,460
in fedora and not get burned by the

00:33:28,660 --> 00:33:34,420
experiments all right four or five those

00:33:33,460 --> 00:33:36,930
the great announce product portfolio

00:33:34,420 --> 00:33:41,950
uses sent to us not fedora as a solution

00:33:36,930 --> 00:33:43,840
or as a foundation and this is in some

00:33:41,950 --> 00:33:46,810
ways this is fundamental in other ways

00:33:43,840 --> 00:33:49,450
infrastructure wise it is not and if we

00:33:46,810 --> 00:33:50,860
can get to the point where the

00:33:49,450 --> 00:33:53,200
distinction between is this of fedora

00:33:50,860 --> 00:33:56,050
builder is as a sent us build it's like

00:33:53,200 --> 00:33:57,580
the branch it came out of and the

00:33:56,050 --> 00:33:59,290
builder that was used that'd be pretty

00:33:57,580 --> 00:34:00,640
cool though would that would be hyper

00:33:59,290 --> 00:34:03,010
efficient which is a thing that we're

00:34:00,640 --> 00:34:05,200
looking for but it would also just open

00:34:03,010 --> 00:34:08,409
additional possibilities for where

00:34:05,200 --> 00:34:12,100
people participate so we have some

00:34:08,409 --> 00:34:13,179
problems do we have solutions yes but

00:34:12,100 --> 00:34:15,490
actually let's not talk about problems

00:34:13,179 --> 00:34:17,820
I'll talk about opportunities because

00:34:15,490 --> 00:34:21,909
Fedora is growing

00:34:17,820 --> 00:34:24,220
sometimes by organic growth sometimes by

00:34:21,909 --> 00:34:26,080
acquisition but in any case fedoras

00:34:24,220 --> 00:34:28,090
getting bigger and and we're really

00:34:26,080 --> 00:34:33,280
happy about that and we want to keep

00:34:28,090 --> 00:34:34,690
everybody inside the fedora tent so we

00:34:33,280 --> 00:34:37,899
want to serve more people to grow bigger

00:34:34,690 --> 00:34:39,310
community and that would provide a clear

00:34:37,899 --> 00:34:40,780
answer on where users developers

00:34:39,310 --> 00:34:43,149
partners is we used in every other kind

00:34:40,780 --> 00:34:44,889
of community should participate when we

00:34:43,149 --> 00:34:46,870
started this journey we didn't even know

00:34:44,889 --> 00:34:49,179
what community meant we had a user

00:34:46,870 --> 00:34:49,690
community there was a memo list thread

00:34:49,179 --> 00:34:51,970
about it

00:34:49,690 --> 00:34:55,960
and we don't even know but there's a

00:34:51,970 --> 00:34:57,280
thing called Fedora us and it like six

00:34:55,960 --> 00:34:58,960
months later we had the announcement

00:34:57,280 --> 00:35:00,400
that a year later after we had the

00:34:58,960 --> 00:35:01,570
announcement we actually had some kind

00:35:00,400 --> 00:35:04,030
of traction on what that meant a little

00:35:01,570 --> 00:35:06,910
bit but we haven't gone all the way we

00:35:04,030 --> 00:35:08,470
haven't gotten to the point that every

00:35:06,910 --> 00:35:10,510
kind of community can participate in

00:35:08,470 --> 00:35:12,370
Fedora not every kind of participant can

00:35:10,510 --> 00:35:14,020
be in the community and that is where

00:35:12,370 --> 00:35:16,119
we'd like to get to

00:35:14,020 --> 00:35:18,330
and of course it's already happening

00:35:16,119 --> 00:35:20,740
like organically Fedora is addressing

00:35:18,330 --> 00:35:22,869
additional opportunities as they come up

00:35:20,740 --> 00:35:24,970
but there are some that are just kind of

00:35:22,869 --> 00:35:28,210
intractable because there there is a

00:35:24,970 --> 00:35:30,730
business side so even though it's

00:35:28,210 --> 00:35:33,070
happening and this is a thing that

00:35:30,730 --> 00:35:34,600
redhead is working on because we think

00:35:33,070 --> 00:35:36,910
upstream first we think Fedora first is

00:35:34,600 --> 00:35:38,230
important we're telling you about this

00:35:36,910 --> 00:35:39,850
because we want you to join in that's

00:35:38,230 --> 00:35:41,560
why these talks are taking place so that

00:35:39,850 --> 00:35:45,700
you can say you know I think this is

00:35:41,560 --> 00:35:47,980
good and I want to make it better and

00:35:45,700 --> 00:35:49,720
lastly this is a thing that we are

00:35:47,980 --> 00:35:51,820
working on but we do not have all the

00:35:49,720 --> 00:35:53,500
answers you'll be wrong for us to come

00:35:51,820 --> 00:35:55,840
to you and say we have all the answers

00:35:53,500 --> 00:35:57,430
we're doing this thing again we

00:35:55,840 --> 00:35:58,960
participate in fedora like you

00:35:57,430 --> 00:36:01,300
participate in fedora it is the place

00:35:58,960 --> 00:36:03,670
that we take our ideas we do our

00:36:01,300 --> 00:36:05,500
experiments and some of them work out

00:36:03,670 --> 00:36:10,060
and some of them require rebooting three

00:36:05,500 --> 00:36:12,970
or four times but ultimately the

00:36:10,060 --> 00:36:15,550
community to us is people and if we work

00:36:12,970 --> 00:36:17,380
together we'll make the best choices so

00:36:15,550 --> 00:36:19,150
in other words today we have this

00:36:17,380 --> 00:36:22,300
Penrose triangle where it's really hard

00:36:19,150 --> 00:36:23,680
to explain what is the right place to

00:36:22,300 --> 00:36:26,470
engage what is going on what is the

00:36:23,680 --> 00:36:28,150
relationship but with with a little bit

00:36:26,470 --> 00:36:32,500
more community focus we can at least

00:36:28,150 --> 00:36:34,840
turn that into a a nice mobius strip and

00:36:32,500 --> 00:36:36,970
if that looks familiar to you it's

00:36:34,840 --> 00:36:39,690
because I've co-opted the Fedora logo

00:36:36,970 --> 00:36:39,690
for it to be so

00:36:40,550 --> 00:36:45,740
questions Laura

00:36:52,339 --> 00:36:54,579
that

00:36:55,000 --> 00:36:58,000
feature

00:37:03,340 --> 00:37:06,840
in future whatever exactly

00:37:17,860 --> 00:37:22,640
so I'm gonna repeat the question

00:37:20,360 --> 00:37:24,590
question was with separating operating

00:37:22,640 --> 00:37:28,040
system from applications what do you do

00:37:24,590 --> 00:37:29,390
about things like containers and

00:37:28,040 --> 00:37:31,840
features that you want to exploit in

00:37:29,390 --> 00:37:31,840
those containers

00:37:45,450 --> 00:37:49,720
sure

00:37:46,660 --> 00:37:52,809
so I'm gonna say I can't make

00:37:49,720 --> 00:37:53,829
forward-looking statements no I know

00:37:52,809 --> 00:37:55,180
that's a very good question so

00:37:53,829 --> 00:37:56,440
containers are an interesting one when

00:37:55,180 --> 00:37:58,299
we talk about the operating system in

00:37:56,440 --> 00:38:00,279
the applications right because a lot of

00:37:58,299 --> 00:38:02,980
people take an operating system

00:38:00,279 --> 00:38:04,420
container like a base image they use it

00:38:02,980 --> 00:38:06,609
and they build their application

00:38:04,420 --> 00:38:08,230
container on top of it so if we have a

00:38:06,609 --> 00:38:09,489
separation at the base image layer

00:38:08,230 --> 00:38:11,200
obviously you have a separation between

00:38:09,489 --> 00:38:12,700
your OS and your applications in your

00:38:11,200 --> 00:38:15,339
container now what does it mean to

00:38:12,700 --> 00:38:17,380
switch your base image like that's a

00:38:15,339 --> 00:38:19,359
really good question that's hard because

00:38:17,380 --> 00:38:21,700
we don't know yet right we're still

00:38:19,359 --> 00:38:22,989
trying to figure that one out you

00:38:21,700 --> 00:38:25,089
wouldn't necessarily be able to take

00:38:22,989 --> 00:38:27,910
your layers and swap out the Fedora

00:38:25,089 --> 00:38:30,400
image at the bottom for a rail image or

00:38:27,910 --> 00:38:33,339
for an Amazon Linux image or whatever

00:38:30,400 --> 00:38:35,319
other operating system you have so we

00:38:33,339 --> 00:38:38,079
have to definitely keep containers in

00:38:35,319 --> 00:38:41,079
mind as we go forward and I think there

00:38:38,079 --> 00:38:41,559
will be a separation that does make

00:38:41,079 --> 00:38:43,630
sense

00:38:41,559 --> 00:38:44,980
and I think containers already kind of

00:38:43,630 --> 00:38:47,680
do it for us in the way that they're

00:38:44,980 --> 00:38:49,480
built right like layered images are it's

00:38:47,680 --> 00:38:52,239
a unique take on how you actually

00:38:49,480 --> 00:38:53,769
construct your application which

00:38:52,239 --> 00:38:56,259
includes your operating system at that

00:38:53,769 --> 00:38:57,579
point so I think there's some stuff we

00:38:56,259 --> 00:38:59,499
can learn there but I think there's also

00:38:57,579 --> 00:39:01,119
some stuff that we need to really focus

00:38:59,499 --> 00:39:04,029
on to make sure that the fundamental

00:39:01,119 --> 00:39:06,339
base images one they're small cuz

00:39:04,029 --> 00:39:08,440
containers they want to be like tiny and

00:39:06,339 --> 00:39:10,930
our containers are large right now but

00:39:08,440 --> 00:39:12,640
they're also stable and easier to to

00:39:10,930 --> 00:39:14,230
move along I know that doesn't answer

00:39:12,640 --> 00:39:16,660
your question but that's because I don't

00:39:14,230 --> 00:39:17,890
think we know the answer yet it's

00:39:16,660 --> 00:39:20,739
because there's a thousand answers to

00:39:17,890 --> 00:39:22,119
your question yeah containers are

00:39:20,739 --> 00:39:24,450
awesome I'll put it that way next

00:39:22,119 --> 00:39:24,450
question

00:39:25,850 --> 00:39:32,830
use that tissue applications

00:39:33,250 --> 00:39:38,109
can be sold quite speeding up the river

00:39:52,200 --> 00:39:55,160
just going to be cool

00:39:56,090 --> 00:39:59,189
[Music]

00:40:07,160 --> 00:40:11,820
so I'm not pausing to answer your

00:40:10,290 --> 00:40:15,540
question I'm trying to summarize it

00:40:11,820 --> 00:40:17,130
succinctly the question was what about

00:40:15,540 --> 00:40:21,290
the contrarian view where you want to

00:40:17,130 --> 00:40:23,790
move everything at a faster rate as

00:40:21,290 --> 00:40:27,240
opposed to keeping your OS stable and

00:40:23,790 --> 00:40:28,680
and doing that so Brendan said shorter

00:40:27,240 --> 00:40:30,600
life side or longer life cycles for the

00:40:28,680 --> 00:40:32,910
OS bits because he's from the rail land

00:40:30,600 --> 00:40:33,840
right I actually happen to agree that we

00:40:32,910 --> 00:40:36,240
need both

00:40:33,840 --> 00:40:38,640
we need an operating system that moves

00:40:36,240 --> 00:40:41,070
at the pace but it doesn't have to be

00:40:38,640 --> 00:40:43,140
relevant or oh right like that's the

00:40:41,070 --> 00:40:46,260
focal point we're talking about here if

00:40:43,140 --> 00:40:49,230
we want to do a slower OS release in

00:40:46,260 --> 00:40:50,850
Fedora for the core bits we can do that

00:40:49,230 --> 00:40:52,830
but we can also do a faster one at the

00:40:50,850 --> 00:40:54,990
same time like variable life cycles is

00:40:52,830 --> 00:40:56,880
the point of that particular thing

00:40:54,990 --> 00:40:59,280
because you're right there is no single

00:40:56,880 --> 00:41:00,780
use case that will be solved by oh slow

00:40:59,280 --> 00:41:02,220
down your OS because then you

00:41:00,780 --> 00:41:03,840
disenfranchise people who want to move

00:41:02,220 --> 00:41:05,490
fast and take advantage of features and

00:41:03,840 --> 00:41:07,530
things like that so it's not necessarily

00:41:05,490 --> 00:41:09,720
that the separation is solving that it's

00:41:07,530 --> 00:41:12,090
the variable life cycle piece if the

00:41:09,720 --> 00:41:13,410
separation makes it possibly easier we

00:41:12,090 --> 00:41:16,170
don't know we're experimenting with it

00:41:13,410 --> 00:41:18,360
right I think the thing is there the

00:41:16,170 --> 00:41:20,790
one-size-fits-all world is no longer

00:41:18,360 --> 00:41:22,680
true so this morning Peter Robinson

00:41:20,790 --> 00:41:24,060
talked about the IOT release cadence

00:41:22,680 --> 00:41:26,280
it's pretty aggressive it's not quite

00:41:24,060 --> 00:41:28,740
atomic aggressive but here's the

00:41:26,280 --> 00:41:31,170
question would you block your like

00:41:28,740 --> 00:41:33,360
one-month IOT release because there's a

00:41:31,170 --> 00:41:35,370
bug in Firefox that's considered a

00:41:33,360 --> 00:41:36,780
release blocker if you split these into

00:41:35,370 --> 00:41:40,820
two you don't have to answer that

00:41:36,780 --> 00:41:40,820
question anymore because it's distinct

00:41:44,070 --> 00:41:51,340
no seriously questions there's got to be

00:41:47,230 --> 00:41:54,070
more questions alright questions for the

00:41:51,340 --> 00:41:59,940
audience who thinks this all makes a lot

00:41:54,070 --> 00:42:03,730
of sense and is a good idea all right

00:41:59,940 --> 00:42:05,650
no we are we're told no so who thinks

00:42:03,730 --> 00:42:08,160
that we're all smoking something up here

00:42:05,650 --> 00:42:12,660
and we want to be sharing right now

00:42:08,160 --> 00:42:16,300
Laura does alright that's cool spot does

00:42:12,660 --> 00:42:19,050
okay Peter does which is interesting the

00:42:16,300 --> 00:42:19,050
core OS guy does

00:42:36,000 --> 00:42:44,160
I just answered that I said we need both

00:42:38,730 --> 00:42:46,940
oh sure

00:42:44,160 --> 00:42:50,570
so why would you want to make it slower

00:42:46,940 --> 00:42:54,870
I'll take that yeah good all right so

00:42:50,570 --> 00:42:56,760
let's go back to 25 out of 26 red hat

00:42:54,870 --> 00:42:59,220
products or using a sent to us as their

00:42:56,760 --> 00:43:02,210
base the reason they do that is because

00:42:59,220 --> 00:43:02,210
the OS is slower

00:43:21,440 --> 00:43:33,090
but assuming this vacation so when we

00:43:31,830 --> 00:43:35,100
talk about the split between the

00:43:33,090 --> 00:43:37,950
application in the OS it is not a

00:43:35,100 --> 00:43:41,130
concrete artifact it is a separation in

00:43:37,950 --> 00:43:42,810
theory right such that it might be a set

00:43:41,130 --> 00:43:44,760
of packages or a set of sources that

00:43:42,810 --> 00:43:47,040
moves at independent rates from other

00:43:44,760 --> 00:43:48,360
things it's not you do it in a container

00:43:47,040 --> 00:43:50,820
like that's a technical implementation

00:43:48,360 --> 00:43:52,350
of a split we're talking about from a

00:43:50,820 --> 00:43:55,110
process standpoint from what you

00:43:52,350 --> 00:43:57,180
consider your traditional OS core bits

00:43:55,110 --> 00:43:58,380
and the rules that kind of go around

00:43:57,180 --> 00:44:01,670
them versus the rules that go around

00:43:58,380 --> 00:44:01,670
applications right like Brendon

00:44:04,910 --> 00:44:11,509
Oh s1 pace and the applications as a set

00:44:08,900 --> 00:44:12,890
to visit a separate my face and I think

00:44:11,509 --> 00:44:15,740
that's where the disconnect is here's no

00:44:12,890 --> 00:44:17,890
applications the story each individual

00:44:15,740 --> 00:44:17,890
application

00:44:18,030 --> 00:44:23,800
right yeah Brenda's example of would you

00:44:21,730 --> 00:44:25,990
block your OS release because Firefox

00:44:23,800 --> 00:44:29,200
doesn't work is a good example right

00:44:25,990 --> 00:44:32,530
like I wouldn't if I have an OS that's

00:44:29,200 --> 00:44:35,230
has a specific purpose and it's passed

00:44:32,530 --> 00:44:37,510
it CI and we think it's good to go I

00:44:35,230 --> 00:44:39,730
would release it if Firefox doesn't work

00:44:37,510 --> 00:44:40,960
on it maybe Firefox doesn't have to work

00:44:39,730 --> 00:44:44,740
on it because it has a different purpose

00:44:40,960 --> 00:44:47,050
right I had one other thing which is

00:44:44,740 --> 00:44:48,960
that we have multiple os's so maybe you

00:44:47,050 --> 00:44:52,089
want to have a really slow moving

00:44:48,960 --> 00:44:57,280
Hardware enable in OS and really fast

00:44:52,089 --> 00:44:58,869
moving virtual OS that that's where the

00:44:57,280 --> 00:45:02,310
containers run from and maybe that's

00:44:58,869 --> 00:45:02,310
where the user space comes from too

00:45:11,570 --> 00:45:16,500
if Fedora is running on nuclear

00:45:14,100 --> 00:45:24,570
submarines I would be pretty proud that

00:45:16,500 --> 00:45:28,790
would cool you're right yeah all right

00:45:24,570 --> 00:45:28,790
so question way in the back

00:45:59,240 --> 00:46:04,280
so Justin asks why wouldn't you just

00:46:02,660 --> 00:46:07,369
have a single source that build across

00:46:04,280 --> 00:46:10,070
all the versions and use the Fedora

00:46:07,369 --> 00:46:11,630
kernel as an example because way back in

00:46:10,070 --> 00:46:14,570
time when I was on the Fedora core own

00:46:11,630 --> 00:46:16,190
team and they still do this today they

00:46:14,570 --> 00:46:17,690
use literally the same upstream kernel

00:46:16,190 --> 00:46:18,890
across all the Fedora releases is

00:46:17,690 --> 00:46:23,720
supported now there's a little bit of a

00:46:18,890 --> 00:46:25,490
staged rollout based on reasons but why

00:46:23,720 --> 00:46:27,320
wouldn't you do that right and so my

00:46:25,490 --> 00:46:27,710
answer to you is that's what we're

00:46:27,320 --> 00:46:29,150
asking

00:46:27,710 --> 00:46:31,280
that's essentially what we want to do

00:46:29,150 --> 00:46:32,480
right I have a single common source and

00:46:31,280 --> 00:46:33,650
if you can run it across all the

00:46:32,480 --> 00:46:35,270
distributions and build it for all the

00:46:33,650 --> 00:46:36,740
distributions and oh by the way we have

00:46:35,270 --> 00:46:39,880
technology called modularity that makes

00:46:36,740 --> 00:46:39,880
it really easy to do that

00:47:05,680 --> 00:47:11,540
yeah so I mean this is getting a little

00:47:08,960 --> 00:47:14,210
bit into the infrastructure we have in

00:47:11,540 --> 00:47:16,580
fedora where it is set up such that our

00:47:14,210 --> 00:47:19,190
branches are released specific rather

00:47:16,580 --> 00:47:20,690
than content specific and Jim and

00:47:19,190 --> 00:47:23,270
Matthew are going to talk a little bit

00:47:20,690 --> 00:47:24,500
about how this kit is organized in their

00:47:23,270 --> 00:47:26,060
talk and I would recommend to go there

00:47:24,500 --> 00:47:27,560
because I think we can dive into the

00:47:26,060 --> 00:47:30,230
technical details a little bit more in

00:47:27,560 --> 00:47:31,850
that session but stream branches were

00:47:30,230 --> 00:47:33,740
designed for the exact thing that you're

00:47:31,850 --> 00:47:36,080
talking about where you have a a stream

00:47:33,740 --> 00:47:37,430
branch that covers your source and then

00:47:36,080 --> 00:47:40,700
you build it for the targets that you're

00:47:37,430 --> 00:47:43,370
looking for and one of the really cool

00:47:40,700 --> 00:47:45,260
things about stream branches are that if

00:47:43,370 --> 00:47:47,630
you have a common nomenclature it's the

00:47:45,260 --> 00:47:50,720
sort of thing that we could develop in

00:47:47,630 --> 00:47:52,130
Fedora we could absorb in Durrell we

00:47:50,720 --> 00:47:54,830
could develop in rel we could push back

00:47:52,130 --> 00:47:56,840
out to fedora again or into sent to us

00:47:54,830 --> 00:47:58,910
as it is today but we could have a

00:47:56,840 --> 00:48:00,200
continuous back and forth development

00:47:58,910 --> 00:48:01,730
loop and we think that would be

00:48:00,200 --> 00:48:04,760
incredibly valuable because that would

00:48:01,730 --> 00:48:07,040
be a way that we could have like an

00:48:04,760 --> 00:48:09,980
interaction between major releases which

00:48:07,040 --> 00:48:13,180
is most of the time speaking of time we

00:48:09,980 --> 00:48:13,180
have time for one more question

00:48:14,530 --> 00:48:22,300
all of this mission

00:48:17,920 --> 00:48:22,300
providing life talking about

00:48:26,020 --> 00:48:31,950
so maybe this can be solved the

00:48:28,839 --> 00:48:31,950
popularity yourself

00:48:37,180 --> 00:48:42,500
so the observation was that modularity

00:48:40,280 --> 00:48:44,780
itself allows some amount of

00:48:42,500 --> 00:48:48,200
differentiation I think the thing it

00:48:44,780 --> 00:48:50,810
doesn't allow is at least in current

00:48:48,200 --> 00:48:53,390
policy to have different streams be

00:48:50,810 --> 00:48:54,970
released blocking versus not and that's

00:48:53,390 --> 00:48:57,710
probably just something that we need to

00:48:54,970 --> 00:48:59,540
consider because we have this new

00:48:57,710 --> 00:49:02,060
technology that it's actually starting

00:48:59,540 --> 00:49:04,640
to deliver results and we haven't really

00:49:02,060 --> 00:49:06,980
kind of integrated it into our rules or

00:49:04,640 --> 00:49:08,450
a thought processes and so that's kind

00:49:06,980 --> 00:49:10,070
of be going to be one of the next steps

00:49:08,450 --> 00:49:12,380
so you're you're probably right there

00:49:10,070 --> 00:49:14,750
there is some opportunity there but it

00:49:12,380 --> 00:49:17,450
probably won't work on its own because

00:49:14,750 --> 00:49:18,830
not every package is a strain branch we

00:49:17,450 --> 00:49:20,060
don't always have like the working

00:49:18,830 --> 00:49:22,340
version and then the experimental

00:49:20,060 --> 00:49:25,150
version maybe we'll get there and maybe

00:49:22,340 --> 00:49:25,150
that's the direction we should go

00:49:27,910 --> 00:49:33,920
alright I think we are out of time so

00:49:30,200 --> 00:49:36,800
again we've got Laura then Paul then

00:49:33,920 --> 00:49:38,360
Matthew and Jim so we can dig into a few

00:49:36,800 --> 00:49:40,790
of these details and hopefully their

00:49:38,360 --> 00:49:41,210
their slides are kind of aligned with

00:49:40,790 --> 00:49:42,710
ours

00:49:41,210 --> 00:49:43,670
I think we're all aligned in our

00:49:42,710 --> 00:49:47,830
thinking but we've all got different

00:49:43,670 --> 00:49:51,900
takes on it so thank you for coming

00:49:47,830 --> 00:49:51,900

YouTube URL: https://www.youtube.com/watch?v=1JmgOkEznjw


