Title: Flock 2018 -  At Long Last, Rings: Split Lifecycles
Publication date: 2018-08-29
Playlist: Flock 2018
Description: 
	Wednesday, August 8, 2018
3:40pm - 4:30pm
@Meissen + Radebeul

Talk: At Long Last, Rings: Split Lifecycles
Presenters: Josh Boyer, Paul Frields

Description: Fedora was conceived at a time where Linux was still seen as a “do anything and everything at once” OS. The way we handle the package universe -- core platform, software stacks, high level applications -- still reflects that view. System owners, on the other hand, now expect apps and OS to rev differently. Come listen to some ideas on how Fedora can better meet their expectations. We’ll also cover how will this benefit the community and open up new possibilities for Fedora to entice contributors.
Captions: 
	00:00:00,800 --> 00:00:09,210
okay alright so my name is Paul fields

00:00:06,480 --> 00:00:11,790
for those who don't know me I see a few

00:00:09,210 --> 00:00:13,110
faces that I do not recognize which I'm

00:00:11,790 --> 00:00:16,980
really happy about because that means

00:00:13,110 --> 00:00:19,350
new friends to make also for those who

00:00:16,980 --> 00:00:25,439
don't know me former Fedora project

00:00:19,350 --> 00:00:27,119
leader and also I worked on the rel

00:00:25,439 --> 00:00:30,330
product as well as the development

00:00:27,119 --> 00:00:31,800
coordinator for rel seven which means

00:00:30,330 --> 00:00:33,750
that if you found something wrong in rel

00:00:31,800 --> 00:00:36,480
seven I will point you to whoever's

00:00:33,750 --> 00:00:41,040
fault it was definitely wasn't mine

00:00:36,480 --> 00:00:43,950
I'm just kidding so now nowadays I

00:00:41,040 --> 00:00:46,170
manage a team of people who work in and

00:00:43,950 --> 00:00:48,600
around Fedora on platform related

00:00:46,170 --> 00:00:50,309
problems they don't work a hundred

00:00:48,600 --> 00:00:52,140
percent on Fedora not all of them but

00:00:50,309 --> 00:00:54,750
they are they spend a lot of time around

00:00:52,140 --> 00:00:59,100
fedora and you probably know many or all

00:00:54,750 --> 00:01:01,020
of them and so how did I get involved in

00:00:59,100 --> 00:01:03,180
doing this talk

00:01:01,020 --> 00:01:05,309
basically because Brendon tricked me

00:01:03,180 --> 00:01:07,140
into it he has a super power for that so

00:01:05,309 --> 00:01:09,990
we're going to talk a little bit about

00:01:07,140 --> 00:01:12,240
life cycle and this was alluded to in a

00:01:09,990 --> 00:01:13,830
previous talk some of this may be a bit

00:01:12,240 --> 00:01:16,200
repetitive with that but again the idea

00:01:13,830 --> 00:01:18,630
is that to get the concepts I think to

00:01:16,200 --> 00:01:20,520
sink in what I'm not going to do is I'm

00:01:18,630 --> 00:01:22,049
not going to cover a full implementation

00:01:20,520 --> 00:01:24,750
of how this would work because

00:01:22,049 --> 00:01:27,689
undoubtedly that is more complex than I

00:01:24,750 --> 00:01:29,250
can cover here in 50 minutes it would

00:01:27,689 --> 00:01:30,840
leave no time for questions and really

00:01:29,250 --> 00:01:33,570
there's a lot that needs to be figured

00:01:30,840 --> 00:01:36,750
out by people smarter than me which is

00:01:33,570 --> 00:01:38,430
why Josh is here because undoubtedly you

00:01:36,750 --> 00:01:40,259
guys are gonna have questions and if I

00:01:38,430 --> 00:01:42,420
can't answer when Josh is gonna save me

00:01:40,259 --> 00:01:43,950
hopefully apparently Paul was not paying

00:01:42,420 --> 00:01:47,280
attention in my earlier presentation

00:01:43,950 --> 00:01:50,040
where I said I do not have any answers

00:01:47,280 --> 00:01:51,950
between two of us we have no answers so

00:01:50,040 --> 00:01:56,190
we'll see what happens

00:01:51,950 --> 00:02:06,119
all right one second here let me

00:01:56,190 --> 00:02:09,720
straighten this out okay so why don't we

00:02:06,119 --> 00:02:11,459
call this talk at long last rings well

00:02:09,720 --> 00:02:14,010
basically because Matthew Miller the

00:02:11,459 --> 00:02:19,010
current Fedora project leader some years

00:02:14,010 --> 00:02:22,709
ago talked about rings as a way to solve

00:02:19,010 --> 00:02:26,880
different contributors and different

00:02:22,709 --> 00:02:28,890
consumers problem sets inside the

00:02:26,880 --> 00:02:30,690
universe of the things that fedora

00:02:28,890 --> 00:02:35,870
builds so we're going to talk a little

00:02:30,690 --> 00:02:39,840
bit about that in this talk what we are

00:02:35,870 --> 00:02:41,280
what we are not going to do is it's kind

00:02:39,840 --> 00:02:43,890
of outlined in this slide what we aren't

00:02:41,280 --> 00:02:45,420
are not going to do can be I'm sorry

00:02:43,890 --> 00:02:47,700
give me one second this is this turns

00:02:45,420 --> 00:02:48,989
out to be much more difficult to read

00:02:47,700 --> 00:02:53,370
from over there than I planned

00:02:48,989 --> 00:03:00,120
okay this is easier alright so what this

00:02:53,370 --> 00:03:03,000
talk is and is not what it is not is it

00:03:00,120 --> 00:03:04,290
is not a hand wavy concept that's going

00:03:03,000 --> 00:03:06,330
to disappear now that doesn't mean that

00:03:04,290 --> 00:03:10,350
you're not going to see some some hand

00:03:06,330 --> 00:03:13,290
waving this here you may and it all

00:03:10,350 --> 00:03:14,760
starts here but this is not a concept

00:03:13,290 --> 00:03:16,350
that I think is going to go away because

00:03:14,760 --> 00:03:19,170
the problems have been floating around

00:03:16,350 --> 00:03:20,730
long enough that parts of the open

00:03:19,170 --> 00:03:22,769
source world and parts of the commercial

00:03:20,730 --> 00:03:25,230
world already have started to address

00:03:22,769 --> 00:03:27,690
this the problems that people had as

00:03:25,230 --> 00:03:29,459
consumers several years ago still exist

00:03:27,690 --> 00:03:31,489
and they've been solved by technologies

00:03:29,459 --> 00:03:34,530
that you know largely progressed

00:03:31,489 --> 00:03:37,140
ignoring what Fedora has done to put out

00:03:34,530 --> 00:03:39,209
our our main distribution and again you

00:03:37,140 --> 00:03:41,970
know I allude back to talks that Matthew

00:03:39,209 --> 00:03:43,079
has has done in the past where he talks

00:03:41,970 --> 00:03:44,840
about those problems like why

00:03:43,079 --> 00:03:46,709
distributions may not be as as

00:03:44,840 --> 00:03:49,200
interesting as they used to be

00:03:46,709 --> 00:03:50,880
what this talk is though is talking

00:03:49,200 --> 00:03:52,860
about a plan that RedHat wants to put

00:03:50,880 --> 00:03:54,510
effort into and that's why I think it

00:03:52,860 --> 00:03:56,760
goes part and parcel with some of the

00:03:54,510 --> 00:03:57,959
other talks that you've heard because it

00:03:56,760 --> 00:04:00,700
is something that we want to put effort

00:03:57,959 --> 00:04:04,600
into as community members

00:04:00,700 --> 00:04:05,950
this is not about core and extras why

00:04:04,600 --> 00:04:07,750
did I bring that up well you'll see

00:04:05,950 --> 00:04:10,150
later in the talk there is something

00:04:07,750 --> 00:04:11,500
where the word core comes up and I want

00:04:10,150 --> 00:04:15,370
to make sure that people understand that

00:04:11,500 --> 00:04:19,840
this is not about differing the pieces

00:04:15,370 --> 00:04:21,609
of kit that we build by who is allowed

00:04:19,840 --> 00:04:22,510
to work on them talk a little bit more

00:04:21,609 --> 00:04:25,180
about that later

00:04:22,510 --> 00:04:28,630
it is about treating packaged lifecycles

00:04:25,180 --> 00:04:30,310
differently but affecting people equally

00:04:28,630 --> 00:04:31,540
so in other words people will be able to

00:04:30,310 --> 00:04:33,520
contribute to them equally

00:04:31,540 --> 00:04:35,860
we'll have consumers out there who are

00:04:33,520 --> 00:04:38,800
able to use them but the life cycles

00:04:35,860 --> 00:04:41,950
themselves would differ and it is not

00:04:38,800 --> 00:04:44,560
also this talk is not about defining a

00:04:41,950 --> 00:04:46,300
minimal image which frequently is

00:04:44,560 --> 00:04:47,770
another bike shed that we run into when

00:04:46,300 --> 00:04:49,990
we talk about problems like this we're

00:04:47,770 --> 00:04:51,940
not going to get into defining what that

00:04:49,990 --> 00:04:53,980
minimal size image means what goes into

00:04:51,940 --> 00:04:58,150
an edition these are all problems that

00:04:53,980 --> 00:05:01,060
are are largely not irrelevant to this

00:04:58,150 --> 00:05:03,370
to this particular talk but it is about

00:05:01,060 --> 00:05:05,380
distinguishing between the operating

00:05:03,370 --> 00:05:07,120
system platform and the many

00:05:05,380 --> 00:05:10,180
applications and the many kinds of

00:05:07,120 --> 00:05:12,840
consumers and producers out there who

00:05:10,180 --> 00:05:12,840
make them

00:05:17,110 --> 00:05:25,389
okay so a little bit of a history lesson

00:05:20,590 --> 00:05:27,909
here so how many people here were around

00:05:25,389 --> 00:05:30,000
when core and extras were combined this

00:05:27,909 --> 00:05:33,460
would have been around fedora quarter 7

00:05:30,000 --> 00:05:35,229
ok quite a lot but not not everybody how

00:05:33,460 --> 00:05:37,930
many people were how many people here

00:05:35,229 --> 00:05:40,389
were involved in Red Hat Linux or fedora

00:05:37,930 --> 00:05:43,810
when they were separate when Fedora was

00:05:40,389 --> 00:05:45,909
first first came around right I guess

00:05:43,810 --> 00:05:49,870
kind me kind of I was around in Fedora

00:05:45,909 --> 00:05:54,729
core 1 I am old you know it happens it

00:05:49,870 --> 00:05:56,650
happens Josh to us all so here's a

00:05:54,729 --> 00:06:00,370
little bit of a history lesson so when

00:05:56,650 --> 00:06:03,340
Red Hat premiered Fedora they did it by

00:06:00,370 --> 00:06:05,110
opening of a package set or package repo

00:06:03,340 --> 00:06:08,590
called Fedora core and essentially this

00:06:05,110 --> 00:06:11,440
kind of open sourced what was going into

00:06:08,590 --> 00:06:13,330
what was Red Hat Linux 9 that kind of

00:06:11,440 --> 00:06:15,310
became Fedora core 1 or what would have

00:06:13,330 --> 00:06:17,919
been right at Linux 10 became Fedora

00:06:15,310 --> 00:06:20,650
core 1 because who would ever go to a

00:06:17,919 --> 00:06:22,569
number higher than 9 10 that's

00:06:20,650 --> 00:06:24,729
ridiculous why would you ever have

00:06:22,569 --> 00:06:28,210
numbers bigger than that I don't know

00:06:24,729 --> 00:06:29,370
Matthews up here see putting his his

00:06:28,210 --> 00:06:32,319
head in his hands

00:06:29,370 --> 00:06:34,210
but still when when Red Hat did this

00:06:32,319 --> 00:06:36,759
most of the community members couldn't

00:06:34,210 --> 00:06:39,339
do anything with those packages we there

00:06:36,759 --> 00:06:43,150
was a notable repository in those days

00:06:39,339 --> 00:06:44,349
that Warren tegami used to run out of I

00:06:43,150 --> 00:06:47,020
think it was at the University of Hawaii

00:06:44,349 --> 00:06:49,779
at the time which allowed you to

00:06:47,020 --> 00:06:51,279
basically add packages to your Red Hat

00:06:49,779 --> 00:06:54,310
Linux distribution to do things that

00:06:51,279 --> 00:06:55,990
didn't come out of the box and that was

00:06:54,310 --> 00:06:58,990
that really became extras and became

00:06:55,990 --> 00:07:00,909
Fedora extras and those those packages

00:06:58,990 --> 00:07:03,969
were really the only place that non Red

00:07:00,909 --> 00:07:06,129
Hatters could contribute to fedora at

00:07:03,969 --> 00:07:08,710
Fedora 7 one of the things that then

00:07:06,129 --> 00:07:10,089
Fedora project leader Mac Spivak who was

00:07:08,710 --> 00:07:13,449
my predecessor

00:07:10,089 --> 00:07:15,639
as project lead one of his big projects

00:07:13,449 --> 00:07:18,310
was to bring together core and extras

00:07:15,639 --> 00:07:21,250
into one Fedora packaged universe which

00:07:18,310 --> 00:07:24,639
has consistently been produced to this

00:07:21,250 --> 00:07:27,490
day so that was that was a really nice

00:07:24,639 --> 00:07:29,440
thing to have for a few reasons not the

00:07:27,490 --> 00:07:30,860
least among them being that all the

00:07:29,440 --> 00:07:33,050
packaged requirements were kind of

00:07:30,860 --> 00:07:34,280
down the overall quality of what was

00:07:33,050 --> 00:07:37,789
being produced went up because we

00:07:34,280 --> 00:07:39,889
started applying the same rules to all

00:07:37,789 --> 00:07:43,759
the packages whether they were built by

00:07:39,889 --> 00:07:46,550
Red Hatters or by volunteers so that all

00:07:43,759 --> 00:07:48,770
in all a very good thing to have okay so

00:07:46,550 --> 00:07:52,159
I mentioned that this this talk was

00:07:48,770 --> 00:07:54,710
going to was it was going to reference

00:07:52,159 --> 00:07:57,590
rings right and right here on the screen

00:07:54,710 --> 00:08:00,110
you're gonna see ye olde rings proposal

00:07:57,590 --> 00:08:02,330
this is circa 2013 I realized when

00:08:00,110 --> 00:08:05,270
earlier I think Matthew showed a slide I

00:08:02,330 --> 00:08:08,779
realized that I had missed the revision

00:08:05,270 --> 00:08:12,289
of of this of this diagram so you'll see

00:08:08,779 --> 00:08:14,599
that here and it's you know it's roughly

00:08:12,289 --> 00:08:16,009
the same the idea the idea is the same

00:08:14,599 --> 00:08:18,259
this one's up maybe a little a little

00:08:16,009 --> 00:08:24,409
more readable but it's really about

00:08:18,259 --> 00:08:27,919
having a several different components or

00:08:24,409 --> 00:08:32,120
several different regions that we treat

00:08:27,919 --> 00:08:34,010
differently in policy rather than really

00:08:32,120 --> 00:08:35,899
thinking about this on and on a purely

00:08:34,010 --> 00:08:37,789
policy standpoint I think this talk is

00:08:35,899 --> 00:08:39,949
more about thinking about them in terms

00:08:37,789 --> 00:08:41,120
of what their lifecycle looks like but

00:08:39,949 --> 00:08:43,519
you're gonna see a lot of the things

00:08:41,120 --> 00:08:44,870
here that you would think about in when

00:08:43,519 --> 00:08:47,660
you separate base and less and apps

00:08:44,870 --> 00:08:50,660
right you still have a base crunchy

00:08:47,660 --> 00:08:53,510
nougat core here and then outside again

00:08:50,660 --> 00:08:55,100
there's that word core will we'll talk

00:08:53,510 --> 00:08:56,660
to that in a minute but you're also

00:08:55,100 --> 00:08:59,839
gonna see a lot of the other apps tax

00:08:56,660 --> 00:09:01,850
that you would expect so you see there's

00:08:59,839 --> 00:09:04,130
a lot of dakka dakka dakka containers do

00:09:01,850 --> 00:09:06,829
come into this and way third-party

00:09:04,130 --> 00:09:09,019
applications there are different stacks

00:09:06,829 --> 00:09:12,500
here you've got editions all this stuff

00:09:09,019 --> 00:09:14,870
and really with this what this talk is

00:09:12,500 --> 00:09:16,880
about is okay let's forget about all of

00:09:14,870 --> 00:09:19,010
these various particles that are sort of

00:09:16,880 --> 00:09:21,170
orbiting here just think think of this

00:09:19,010 --> 00:09:23,449
in a very simple way which is just again

00:09:21,170 --> 00:09:25,970
this sort of crunchy nougat core and

00:09:23,449 --> 00:09:28,810
then this nice fluffy outside which is

00:09:25,970 --> 00:09:28,810
our applications

00:09:30,310 --> 00:09:36,529
so what do I mean by simplified well for

00:09:33,589 --> 00:09:40,040
one thing what I'm not going to be what

00:09:36,529 --> 00:09:42,199
we're not proposing here is something

00:09:40,040 --> 00:09:43,069
like parallel install stacks here's how

00:09:42,199 --> 00:09:44,839
you're going to get them into the

00:09:43,069 --> 00:09:47,720
distribution right really that is a

00:09:44,839 --> 00:09:51,500
great use for containers nowadays what

00:09:47,720 --> 00:09:55,790
we found is that people who are using a

00:09:51,500 --> 00:09:59,240
stack of say no js' six versus nodejs

00:09:55,790 --> 00:10:02,389
eight or someone who's using Python 2

00:09:59,240 --> 00:10:03,769
versus Python 3 for their stack well

00:10:02,389 --> 00:10:06,800
maybe less Python because of how it

00:10:03,769 --> 00:10:09,170
works but Perl say Perl 5 verses Perl 6

00:10:06,800 --> 00:10:10,970
or not generally going to be doing that

00:10:09,170 --> 00:10:12,920
on one system right they're not trying

00:10:10,970 --> 00:10:15,470
to they're not trying to merge the use

00:10:12,920 --> 00:10:18,170
cases together instead that's a great

00:10:15,470 --> 00:10:20,569
case for using containers where you have

00:10:18,170 --> 00:10:21,949
a user space that is going to support

00:10:20,569 --> 00:10:23,689
the stack that you need you'll build

00:10:21,949 --> 00:10:26,300
your application on that that's how

00:10:23,689 --> 00:10:29,420
you'll you'll bend it it also is not

00:10:26,300 --> 00:10:33,139
about separating out the just enough OS

00:10:29,420 --> 00:10:34,579
and the platform which was a a feature

00:10:33,139 --> 00:10:38,680
of the original rings proposal but

00:10:34,579 --> 00:10:41,870
instead again focusing on the lifecycle

00:10:38,680 --> 00:10:44,870
all right so why do we care about life

00:10:41,870 --> 00:10:47,209
cycles well I think again this was set

00:10:44,870 --> 00:10:50,269
out earlier but we push a lot of content

00:10:47,209 --> 00:10:52,939
into an official release thousands of

00:10:50,269 --> 00:10:56,959
packages thousands of rpms go into

00:10:52,939 --> 00:10:59,930
building what we ship on say Fedor

00:10:56,959 --> 00:11:01,670
workstation or fedora server I might you

00:10:59,930 --> 00:11:03,290
might hear me tend a little tend to talk

00:11:01,670 --> 00:11:05,089
a little bit more about workstation here

00:11:03,290 --> 00:11:06,769
the only reason for that is it's the

00:11:05,089 --> 00:11:08,660
working group I've been most heavily

00:11:06,769 --> 00:11:11,000
involved in and it's typically what I

00:11:08,660 --> 00:11:12,559
run but I think you could probably apply

00:11:11,000 --> 00:11:15,350
any of this to fit our server you can

00:11:12,559 --> 00:11:19,399
apply to fedora cloud as well we push a

00:11:15,350 --> 00:11:21,139
lot of content into those releases we

00:11:19,399 --> 00:11:23,329
pushed out there are thousands of rpms

00:11:21,139 --> 00:11:25,370
that become part of what's ultimately

00:11:23,329 --> 00:11:28,790
going to go out to consumers and what

00:11:25,370 --> 00:11:31,399
that means is we have a huge testing and

00:11:28,790 --> 00:11:34,189
integration service the combinatoric s--

00:11:31,399 --> 00:11:36,079
for that surface are enormous and when

00:11:34,189 --> 00:11:38,509
you're trying to ship something out on a

00:11:36,079 --> 00:11:41,089
time-based release that inevitably means

00:11:38,509 --> 00:11:43,729
that there's going to be a lot of things

00:11:41,089 --> 00:11:45,559
can escalate to blocking that release

00:11:43,729 --> 00:11:47,359
when you don't really want them to and

00:11:45,559 --> 00:11:49,399
it also means an inordinately large

00:11:47,359 --> 00:11:51,169
number of people have to be involved in

00:11:49,399 --> 00:11:54,049
release mechanics whether you like it or

00:11:51,169 --> 00:11:57,079
not right if your package is part of

00:11:54,049 --> 00:11:59,089
that release and because of a very long

00:11:57,079 --> 00:12:01,939
dependency chain something you know very

00:11:59,089 --> 00:12:03,769
high up the stack is causing a problem

00:12:01,939 --> 00:12:05,839
that then reflects back into that

00:12:03,769 --> 00:12:08,389
release then you're gonna be dragged

00:12:05,839 --> 00:12:10,699
into the mechanics of oh how do i how do

00:12:08,389 --> 00:12:12,409
I get this this package fixed in time I

00:12:10,699 --> 00:12:14,389
need to get an exception I'm going to be

00:12:12,409 --> 00:12:16,729
involved in a blocker meeting that get

00:12:14,389 --> 00:12:18,439
pulled into etc etc and all these happen

00:12:16,729 --> 00:12:20,539
at the same time right so thousands of

00:12:18,439 --> 00:12:23,769
packages or all kind of causing the same

00:12:20,539 --> 00:12:25,849
problem at the same time and worse yet

00:12:23,769 --> 00:12:27,919
because of the way we run our releases

00:12:25,849 --> 00:12:29,479
it means that if you're trying to get a

00:12:27,919 --> 00:12:33,409
feature out if it's something that is

00:12:29,479 --> 00:12:35,209
part of let's say that there's a

00:12:33,409 --> 00:12:37,339
particular feature and you know more

00:12:35,209 --> 00:12:37,879
particular feature in KDE or something

00:12:37,339 --> 00:12:40,519
like that

00:12:37,879 --> 00:12:43,909
if you miss the boat for the release

00:12:40,519 --> 00:12:46,279
then more often than not it means you're

00:12:43,909 --> 00:12:48,469
gonna have to wait six months to get any

00:12:46,279 --> 00:12:50,749
publicity around that release especially

00:12:48,469 --> 00:12:52,909
and sometimes you may have to wait just

00:12:50,749 --> 00:12:54,769
to get your feature included just by din

00:12:52,909 --> 00:12:56,359
of the way that the features work of

00:12:54,769 --> 00:12:57,919
course we have we have rawhide which is

00:12:56,359 --> 00:13:00,139
kind of a fallback but the problem is of

00:12:57,919 --> 00:13:01,459
course we only have you know maybe a few

00:13:00,139 --> 00:13:04,719
hundred people in the world who were

00:13:01,459 --> 00:13:04,719
running rawhide day-to-day

00:13:06,960 --> 00:13:13,860
all right so how do we make these

00:13:11,200 --> 00:13:16,300
releases well right now we bag up

00:13:13,860 --> 00:13:19,680
thousands of these rpms on a single

00:13:16,300 --> 00:13:22,270
cycle to make a product and the cutoff

00:13:19,680 --> 00:13:24,040
for what is allowed to block the

00:13:22,270 --> 00:13:27,400
platform release is sometimes insert

00:13:24,040 --> 00:13:28,990
uncertain because that really because

00:13:27,400 --> 00:13:30,580
that release is so is so big because

00:13:28,990 --> 00:13:33,700
these dependency chains can sometimes

00:13:30,580 --> 00:13:35,470
reach up and down the stack it creates a

00:13:33,700 --> 00:13:37,570
really large surface where things can

00:13:35,470 --> 00:13:40,290
break and affect our timeliness and I

00:13:37,570 --> 00:13:43,450
think if you were to look back at the

00:13:40,290 --> 00:13:46,630
the number of times that the Fedora

00:13:43,450 --> 00:13:48,940
release has slipped past its its release

00:13:46,630 --> 00:13:50,410
date that is many times because the

00:13:48,940 --> 00:13:52,090
amount of coordination that's required

00:13:50,410 --> 00:13:54,820
around all of these different packages

00:13:52,090 --> 00:13:56,460
now thankfully we actually hit a release

00:13:54,820 --> 00:14:01,780
date for the first time in I think ever

00:13:56,460 --> 00:14:02,980
in in an f28 and that was fantastic it

00:14:01,780 --> 00:14:04,630
was a great release and I think there's

00:14:02,980 --> 00:14:08,050
a lot of people who deserve great credit

00:14:04,630 --> 00:14:13,450
for that however I think that ought to

00:14:08,050 --> 00:14:17,110
be more than rule than the exception now

00:14:13,450 --> 00:14:20,290
so what if we had a different kind of

00:14:17,110 --> 00:14:23,440
release so what if our release surface

00:14:20,290 --> 00:14:25,630
were smaller I'm not necessarily saying

00:14:23,440 --> 00:14:27,730
how small but imagine that it were

00:14:25,630 --> 00:14:30,490
smaller it doesn't necessarily mean that

00:14:27,730 --> 00:14:32,170
we ignore testing we ignore integration

00:14:30,490 --> 00:14:35,620
with other pieces doesn't mean kind of

00:14:32,170 --> 00:14:37,420
rolling that release on and and and you

00:14:35,620 --> 00:14:38,860
know let everybody else kind of throw

00:14:37,420 --> 00:14:40,720
their fate to the winds we don't really

00:14:38,860 --> 00:14:43,540
care what happens to them that's not a

00:14:40,720 --> 00:14:45,580
very community friendly way to work this

00:14:43,540 --> 00:14:48,130
is not about excluding those folks

00:14:45,580 --> 00:14:50,530
rather it is about concentrating on a

00:14:48,130 --> 00:14:54,870
platform that we know we can put out on

00:14:50,530 --> 00:14:58,990
a fairly regular and and routine basis

00:14:54,870 --> 00:15:01,060
without fear right now I think we fear

00:14:58,990 --> 00:15:04,750
releases more than we look forward to

00:15:01,060 --> 00:15:06,880
them a lot of us do now how do we do

00:15:04,750 --> 00:15:09,960
this well one of the things that we need

00:15:06,880 --> 00:15:12,790
to do is we need to increasingly use CI

00:15:09,960 --> 00:15:16,420
the reason being is that

00:15:12,790 --> 00:15:18,160
it would if we have more dedication to

00:15:16,420 --> 00:15:20,500
the CI effort and when I say the CI

00:15:18,160 --> 00:15:22,600
effort what I mean is a good set of

00:15:20,500 --> 00:15:26,590
tests a good set of integration tests

00:15:22,600 --> 00:15:29,830
that let us release new packages and new

00:15:26,590 --> 00:15:31,450
stacks of software with confidence the

00:15:29,830 --> 00:15:35,380
confidence that we don't always have

00:15:31,450 --> 00:15:36,820
right now so increasingly using CI so

00:15:35,380 --> 00:15:39,280
that those pieces can move at their own

00:15:36,820 --> 00:15:40,930
pace and layer on top of the platform

00:15:39,280 --> 00:15:42,760
so we'd have more confidence in platform

00:15:40,930 --> 00:15:46,360
we also gonna have more confidence in

00:15:42,760 --> 00:15:48,190
these these stacks now as luck would

00:15:46,360 --> 00:15:50,620
have it there's kind of a ready-made

00:15:48,190 --> 00:15:52,360
surface coming our way one way we can

00:15:50,620 --> 00:15:55,690
look at this is hey this is kind of a

00:15:52,360 --> 00:15:58,000
unique opportunity for us to look at the

00:15:55,690 --> 00:16:01,180
new Fedora core OS project that's out

00:15:58,000 --> 00:16:06,520
there get interested and see if we can

00:16:01,180 --> 00:16:12,070
build on that Fedora core OS as you guys

00:16:06,520 --> 00:16:15,550
know our it's rpm OS 3 based system it

00:16:12,070 --> 00:16:19,330
or I guess on the way and that presents

00:16:15,550 --> 00:16:22,300
a lot of unique opportunities right one

00:16:19,330 --> 00:16:24,220
of them being that the the whole

00:16:22,300 --> 00:16:28,180
operating system comes out as a piece

00:16:24,220 --> 00:16:30,280
and it's tested together it if we if we

00:16:28,180 --> 00:16:32,410
do our jobs right we can see I that

00:16:30,280 --> 00:16:35,290
whole thing together hopefully we can

00:16:32,410 --> 00:16:37,860
automate a lot of that and and because

00:16:35,290 --> 00:16:40,090
it's smaller we can create it faster

00:16:37,860 --> 00:16:41,950
it's my belief that one of the major

00:16:40,090 --> 00:16:45,400
problems that we face right now

00:16:41,950 --> 00:16:47,940
is that the time it takes to create the

00:16:45,400 --> 00:16:50,950
thing that we call the Fedora OS is

00:16:47,940 --> 00:16:53,230
extremely long hours and hours and hours

00:16:50,950 --> 00:16:54,820
and if we get it wrong and we sometimes

00:16:53,230 --> 00:16:56,980
we can do another one that day maybe

00:16:54,820 --> 00:16:58,960
even a couple more that day but mainly

00:16:56,980 --> 00:17:02,320
that happens because the heroic efforts

00:16:58,960 --> 00:17:05,530
of people like Mohan I don't have more

00:17:02,320 --> 00:17:08,530
on bones here great you know Mohan

00:17:05,530 --> 00:17:11,440
basically works his fingers to the bone

00:17:08,530 --> 00:17:14,770
to make sure that we get releases out on

00:17:11,440 --> 00:17:16,810
a regular basis and it pains me to see

00:17:14,770 --> 00:17:18,370
that he has to work so hard to get that

00:17:16,810 --> 00:17:21,520
done especially as we roll down the

00:17:18,370 --> 00:17:23,290
weeks towards the big release date it

00:17:21,520 --> 00:17:25,250
will be wonderful if we were able to

00:17:23,290 --> 00:17:27,880
create smaller things

00:17:25,250 --> 00:17:30,560
faster as opposed to a gigantic

00:17:27,880 --> 00:17:32,330
cornucopia which has to be complete and

00:17:30,560 --> 00:17:34,160
everything has to be in the right place

00:17:32,330 --> 00:17:35,720
the grapes have to be over here the

00:17:34,160 --> 00:17:37,760
oranges have to be over here the bananas

00:17:35,720 --> 00:17:39,590
have to be here etc etc in order for

00:17:37,760 --> 00:17:41,930
that cornucopia to be presented to

00:17:39,590 --> 00:17:43,550
people instead of maybe just presenting

00:17:41,930 --> 00:17:45,470
the thing they really wanted which was a

00:17:43,550 --> 00:17:47,780
grapefruit right they just wanted that

00:17:45,470 --> 00:17:49,220
that grapefruit in the center I don't

00:17:47,780 --> 00:17:52,010
know how well this analogy is working

00:17:49,220 --> 00:17:55,850
but are you gonna use it from now on

00:17:52,010 --> 00:17:57,560
you're welcome to it so one of the

00:17:55,850 --> 00:17:59,600
things that we need to be able to do to

00:17:57,560 --> 00:18:01,550
comfortably achieve this level of

00:17:59,600 --> 00:18:04,610
automation is we need to be able to spin

00:18:01,550 --> 00:18:06,290
a whole installable artifact for every

00:18:04,610 --> 00:18:08,930
change that we made for every change

00:18:06,290 --> 00:18:11,360
that we propose not necessarily mate

00:18:08,930 --> 00:18:14,450
right and the change that actually gets

00:18:11,360 --> 00:18:17,090
made is the one that still allows that

00:18:14,450 --> 00:18:19,340
artifact to be created and to pass a

00:18:17,090 --> 00:18:21,670
series of tests now right now the amount

00:18:19,340 --> 00:18:25,310
of time that takes for us to create our

00:18:21,670 --> 00:18:26,930
artifact or artifacts is so large that

00:18:25,310 --> 00:18:29,000
there's no possible way that we can do

00:18:26,930 --> 00:18:31,940
this easily at least not with the

00:18:29,000 --> 00:18:34,040
artifacts that we're making right now so

00:18:31,940 --> 00:18:37,100
one of the ideas I think that that we

00:18:34,040 --> 00:18:38,780
ought to be looking at is slicing that

00:18:37,100 --> 00:18:40,760
base OS down to a smaller level

00:18:38,780 --> 00:18:44,690
something that we could reasonably

00:18:40,760 --> 00:18:46,850
create an in an on-demand basis in maybe

00:18:44,690 --> 00:18:49,270
just a matter of minutes who knows maybe

00:18:46,850 --> 00:18:51,590
even less depending on how it was built

00:18:49,270 --> 00:18:54,530
so that's something I feel like we we

00:18:51,590 --> 00:18:56,690
desperately need to address and I think

00:18:54,530 --> 00:18:58,190
this is that again the area where the

00:18:56,690 --> 00:18:59,720
thing that might scare some of you have

00:18:58,190 --> 00:19:01,700
been around a very long time is the idea

00:18:59,720 --> 00:19:03,500
of the words fedora and cord together

00:19:01,700 --> 00:19:06,320
and so I just want to make sure

00:19:03,500 --> 00:19:08,180
everybody understands just to be clear

00:19:06,320 --> 00:19:10,220
like I can't we can't avoid that those

00:19:08,180 --> 00:19:12,860
two words being together because that is

00:19:10,220 --> 00:19:13,970
a thing that exists but I just want to

00:19:12,860 --> 00:19:16,240
make sure everyone is clear on the

00:19:13,970 --> 00:19:19,190
concept that what this does not mean is

00:19:16,240 --> 00:19:20,900
protecting a group of packages and not

00:19:19,190 --> 00:19:22,520
letting community members have input

00:19:20,900 --> 00:19:24,740
into how it's built not letting people

00:19:22,520 --> 00:19:27,080
put in things like pull requests to make

00:19:24,740 --> 00:19:29,360
changes and improvements those things

00:19:27,080 --> 00:19:31,850
can still continue so this is really

00:19:29,360 --> 00:19:34,820
just about being this is about one

00:19:31,850 --> 00:19:37,160
possible Avenue to build a small tightly

00:19:34,820 --> 00:19:38,800
integrated platform concentrate on that

00:19:37,160 --> 00:19:41,260
and do it well

00:19:38,800 --> 00:19:44,950
hey Paul can I yeah can I add one thing

00:19:41,260 --> 00:19:46,540
on the CIS but you so how many of you

00:19:44,950 --> 00:19:50,670
that are Fedora package maintainer x'

00:19:46,540 --> 00:19:50,670
opted into CI when it was up and running

00:19:50,760 --> 00:19:55,510
probably one problem number one so

00:19:53,530 --> 00:19:57,670
here's here's the deal CI is often

00:19:55,510 --> 00:20:00,700
talked about as a magical solution to

00:19:57,670 --> 00:20:02,440
quality but you only get what you put

00:20:00,700 --> 00:20:04,810
into it right and so it's not only

00:20:02,440 --> 00:20:07,150
enabling C on your package it's making

00:20:04,810 --> 00:20:10,030
sure you're adding and of depth adapting

00:20:07,150 --> 00:20:11,680
the test cases right both for unit tests

00:20:10,030 --> 00:20:14,230
that are run and for the artifacts

00:20:11,680 --> 00:20:17,470
across the entire compose this is work

00:20:14,230 --> 00:20:20,230
now it's work that pays off in the long

00:20:17,470 --> 00:20:22,060
run but it's work upfront that we really

00:20:20,230 --> 00:20:25,120
need people to buy into otherwise having

00:20:22,060 --> 00:20:26,620
gating on CI and not keeping the tests

00:20:25,120 --> 00:20:28,780
up to date and not adding more tests

00:20:26,620 --> 00:20:31,560
over time like that doesn't it doesn't

00:20:28,780 --> 00:20:31,560
pay off Peter

00:20:32,770 --> 00:20:37,390
and you Axl

00:20:37,660 --> 00:20:43,600
that sorry I tried

00:21:02,520 --> 00:21:10,630
okay so to summarize the soliloquy from

00:21:07,120 --> 00:21:12,100
the Australian map the original

00:21:10,630 --> 00:21:13,570
implementation was broken we know this

00:21:12,100 --> 00:21:15,370
right

00:21:13,570 --> 00:21:17,020
it was so poor that people are probably

00:21:15,370 --> 00:21:19,690
gonna be shy about enabling it in the

00:21:17,020 --> 00:21:23,440
future I'm asking you to give it a

00:21:19,690 --> 00:21:25,270
second chance at the best right I know

00:21:23,440 --> 00:21:27,420
it's not but it's going to be let's be

00:21:25,270 --> 00:21:27,420
optimistic

00:22:18,480 --> 00:22:23,170
so okay I'm not gonna I'm definitely not

00:22:21,880 --> 00:22:25,210
repeating everything I'm gonna I'll

00:22:23,170 --> 00:22:27,850
summarize that the summary the summary

00:22:25,210 --> 00:22:29,200
was when we have these systems we need

00:22:27,850 --> 00:22:31,150
to make sure that they are well

00:22:29,200 --> 00:22:33,700
documented and people know how to use

00:22:31,150 --> 00:22:36,460
them and that they work at least to the

00:22:33,700 --> 00:22:38,620
to an extent that they're their effect

00:22:36,460 --> 00:22:41,620
they're effective at doing what they

00:22:38,620 --> 00:22:43,090
claim to do and while respecting the

00:22:41,620 --> 00:22:44,920
fact that in open source we do try to

00:22:43,090 --> 00:22:46,810
hit a rate right so perfect is not an

00:22:44,920 --> 00:22:48,730
option but they have to be good enough

00:22:46,810 --> 00:22:50,620
and they have to be documented so people

00:22:48,730 --> 00:22:52,510
can use them yeah I guess the only thing

00:22:50,620 --> 00:22:56,020
the only response I would have is that

00:22:52,510 --> 00:23:00,370
you're not necessarily wrong I actually

00:22:56,020 --> 00:23:02,800
agree with most and that the point I

00:23:00,370 --> 00:23:04,030
would take away from that is a lot of

00:23:02,800 --> 00:23:05,320
times people don't pay attention to

00:23:04,030 --> 00:23:08,050
something until it smacks them in the

00:23:05,320 --> 00:23:10,720
face right like they just they literally

00:23:08,050 --> 00:23:12,160
unless they have to do something or they

00:23:10,720 --> 00:23:14,890
somehow hear about it and are interested

00:23:12,160 --> 00:23:17,890
they ignore it and so it's very hard to

00:23:14,890 --> 00:23:20,020
iterate on aux and provide the things

00:23:17,890 --> 00:23:21,580
that people are expecting when nobody's

00:23:20,020 --> 00:23:23,350
giving feedback at all so I'm not using

00:23:21,580 --> 00:23:25,540
that as a defense for the rollout I'm

00:23:23,350 --> 00:23:28,000
not even necessarily saying that it's

00:23:25,540 --> 00:23:29,260
the maintainer x' fault because it's not

00:23:28,000 --> 00:23:32,050
like I think there's a middle ground

00:23:29,260 --> 00:23:36,390
between having something that works and

00:23:32,050 --> 00:23:36,390
being able to iterate like Paul said

00:23:39,330 --> 00:23:45,249
complexity is not more exact but I have

00:23:43,120 --> 00:23:47,259
a completely separate release

00:23:45,249 --> 00:23:49,990
engineering process where like instead

00:23:47,259 --> 00:23:53,200
only have one point and I mean I have

00:23:49,990 --> 00:23:55,389
the knowledge behind us do that in that

00:23:53,200 --> 00:23:59,350
right so I can be more independence and

00:23:55,389 --> 00:24:02,980
then the IOT great compromise bosses we

00:23:59,350 --> 00:24:06,490
want to be painted but when I move I

00:24:02,980 --> 00:24:07,340
want to see us anything he wanted

00:24:06,490 --> 00:24:11,920
because

00:24:07,340 --> 00:24:14,870
I'm lazy and let's title that one and so

00:24:11,920 --> 00:24:19,490
don't get me wrong like I'm quite happy

00:24:14,870 --> 00:24:22,070
to be the sort of person or the group or

00:24:19,490 --> 00:24:26,320
one of the critics that so tribe as its

00:24:22,070 --> 00:24:29,420
top but I tried to sit down Jordan but I

00:24:26,320 --> 00:24:31,280
barely was fighting because to the wife

00:24:29,420 --> 00:24:33,940
of the origin destruction or

00:24:31,280 --> 00:24:33,940
relationship

00:24:44,030 --> 00:24:49,020
so I think I created volunteering yeah I

00:24:47,280 --> 00:24:51,660
was just gonna say like it sounds like

00:24:49,020 --> 00:24:52,950
you have a solution maybe we should have

00:24:51,660 --> 00:24:57,080
you talk to the people who are trying to

00:24:52,950 --> 00:24:57,080
implement a solution yeah Steph

00:25:25,450 --> 00:25:27,480
Oh

00:25:32,700 --> 00:25:42,410
so sorry just notice if I could see it

00:25:37,970 --> 00:25:42,410
involved that's being able to

00:25:54,990 --> 00:25:59,150
and then ultimately I don't expect her

00:26:11,440 --> 00:26:16,130
all right so so things things need to

00:26:14,450 --> 00:26:18,830
improve and and it's gonna require

00:26:16,130 --> 00:26:20,630
effort from all of us in this room to

00:26:18,830 --> 00:26:22,670
help improve them right I think that's

00:26:20,630 --> 00:26:24,290
less my takeaway can we come back to

00:26:22,670 --> 00:26:26,540
your point because we I think Paul has

00:26:24,290 --> 00:26:27,890
more slides well I I do no no I'm only

00:26:26,540 --> 00:26:29,900
taking the replies so make sure we don't

00:26:27,890 --> 00:26:35,500
become like just a dialogue but yeah no

00:26:29,900 --> 00:26:35,500
that's fine add a comment Langdon

00:27:00,220 --> 00:27:21,950
for two weeks immediately all right so

00:27:20,330 --> 00:27:23,480
I'm gonna summarize that remember when

00:27:21,950 --> 00:27:26,390
you guys give answers I have to repeat

00:27:23,480 --> 00:27:29,360
everything you say so that's hard so so

00:27:26,390 --> 00:27:31,070
so lankans point was it's not enough to

00:27:29,360 --> 00:27:32,780
be done with a project you have to be

00:27:31,070 --> 00:27:34,220
there to help educate help solve

00:27:32,780 --> 00:27:36,350
problems that come up when people start

00:27:34,220 --> 00:27:38,330
trying to use it I would actually add to

00:27:36,350 --> 00:27:40,700
that you know build it into the schedule

00:27:38,330 --> 00:27:42,470
piece Langdon and say we need time in

00:27:40,700 --> 00:27:44,330
our schedule to actually improve our

00:27:42,470 --> 00:27:45,530
tools and not crush ourselves just

00:27:44,330 --> 00:27:48,799
trying to get the next release out the

00:27:45,530 --> 00:27:54,559
door that's a bit

00:27:48,799 --> 00:27:55,790
ignores right I know we have now is

00:27:54,559 --> 00:27:56,990
about it because if we don't we're just

00:27:55,790 --> 00:28:00,200
gonna keep talking about it and nothing

00:27:56,990 --> 00:28:01,549
will improve jim-jim or could be part of

00:28:00,200 --> 00:28:05,270
the story guy could be part of the

00:28:01,549 --> 00:28:07,280
problem all right hey guys all right

00:28:05,270 --> 00:28:08,480
guys we're gonna stop dialoguing here

00:28:07,280 --> 00:28:11,290
I'm gonna recognize Jim and then we're

00:28:08,480 --> 00:28:11,290
gonna move on yeah

00:28:29,250 --> 00:28:31,640
test

00:28:39,060 --> 00:28:41,630
yeah

00:28:42,249 --> 00:28:46,369
yeah that's a good point so let's let's

00:28:44,570 --> 00:28:48,649
summarize that so Jim Perrin pointed out

00:28:46,369 --> 00:28:51,049
which i think is he's absolutely right

00:28:48,649 --> 00:28:52,820
ci is an iterative process and having a

00:28:51,049 --> 00:28:54,470
certain tool chain that's broken does

00:28:52,820 --> 00:28:55,909
not keep us from using another tool

00:28:54,470 --> 00:28:58,220
chain it also doesn't keep us from

00:28:55,909 --> 00:29:00,860
writing tests or coming up with a

00:28:58,220 --> 00:29:03,259
framework for our testing that we can

00:29:00,860 --> 00:29:04,759
agree on before we actually implement it

00:29:03,259 --> 00:29:07,820
any of those things we can spend some

00:29:04,759 --> 00:29:09,320
time on as we go okay so I'm gonna go

00:29:07,820 --> 00:29:11,330
ahead and move on

00:29:09,320 --> 00:29:13,369
so I don't know if we my train of

00:29:11,330 --> 00:29:15,980
thought is probably broken here I guess

00:29:13,369 --> 00:29:16,190
since the sorry but no no it's fine it's

00:29:15,980 --> 00:29:18,919
fine

00:29:16,190 --> 00:29:22,460
comments questions are always good so I

00:29:18,919 --> 00:29:24,649
think that the key here is that people

00:29:22,460 --> 00:29:27,019
want applications right they want

00:29:24,649 --> 00:29:29,359
containers they may want flat packs etc

00:29:27,019 --> 00:29:30,379
and those are based on packages so what

00:29:29,359 --> 00:29:32,570
I'm not saying is we're not going to

00:29:30,379 --> 00:29:34,399
throw away the baby with the bathwater

00:29:32,570 --> 00:29:36,799
we're not going to do away with the idea

00:29:34,399 --> 00:29:38,869
of rpms is something that's important

00:29:36,799 --> 00:29:40,850
something where quality really comes

00:29:38,869 --> 00:29:42,590
through from the community there's

00:29:40,850 --> 00:29:46,269
auditable source etc etcetera they're

00:29:42,590 --> 00:29:49,639
all these ways that that RPM packages

00:29:46,269 --> 00:29:52,879
can allow us to produce good quality

00:29:49,639 --> 00:29:55,220
outputs for people but I am arguing that

00:29:52,879 --> 00:29:57,289
by and large the rest of the world

00:29:55,220 --> 00:30:00,080
doesn't tend to be interested in those

00:29:57,289 --> 00:30:01,190
there was a time where and I and let me

00:30:00,080 --> 00:30:03,710
back up because I don't want to say

00:30:01,190 --> 00:30:05,929
they're not interested in rpms what I

00:30:03,710 --> 00:30:09,519
want to say is they are not interested

00:30:05,929 --> 00:30:12,889
by and large in individual linux

00:30:09,519 --> 00:30:15,019
packages and that might mean rpms it

00:30:12,889 --> 00:30:17,659
might mean debs whatever by and large

00:30:15,019 --> 00:30:20,119
the rest of the world has moved on we

00:30:17,659 --> 00:30:21,980
have not that doesn't mean that we

00:30:20,119 --> 00:30:23,480
should give up rpms but it doesn't mean

00:30:21,980 --> 00:30:26,600
that we need to stop thinking on them of

00:30:23,480 --> 00:30:29,029
them as the be-all end-all of how we

00:30:26,600 --> 00:30:30,950
build things and what we offer so I

00:30:29,029 --> 00:30:34,669
really hopefully this is a way for us to

00:30:30,950 --> 00:30:37,220
kind of take the the discussion I guess

00:30:34,669 --> 00:30:39,799
so maybe away from looking at the RPM as

00:30:37,220 --> 00:30:41,830
the single artifact that we that we care

00:30:39,799 --> 00:30:41,830
about

00:30:43,060 --> 00:30:48,170
so what about applications then well

00:30:46,250 --> 00:30:49,970
well how would they work in this in this

00:30:48,170 --> 00:30:51,680
idea what I've talked about so far is

00:30:49,970 --> 00:30:53,060
really more about the the operating

00:30:51,680 --> 00:30:56,390
system and kind of reducing that

00:30:53,060 --> 00:30:58,220
platform down to a smaller level well in

00:30:56,390 --> 00:30:59,900
this kind of system are larger important

00:30:58,220 --> 00:31:01,940
stacks might be able to release on their

00:30:59,900 --> 00:31:04,340
own timeline right they might do that as

00:31:01,940 --> 00:31:05,510
modules as flat packs as containers and

00:31:04,340 --> 00:31:07,700
all of these are going to get some air

00:31:05,510 --> 00:31:09,800
time here at phlox so if you have a

00:31:07,700 --> 00:31:11,540
chance I encourage you to go see the

00:31:09,800 --> 00:31:13,490
talks that are about modularity that are

00:31:11,540 --> 00:31:16,000
about flat packs that are about

00:31:13,490 --> 00:31:18,680
container technology so some examples

00:31:16,000 --> 00:31:23,000
desktop environments integrated Suites

00:31:18,680 --> 00:31:26,620
or tools our language support right all

00:31:23,000 --> 00:31:30,410
might be eligible for for that space

00:31:26,620 --> 00:31:32,780
what I think this buys us is more

00:31:30,410 --> 00:31:34,490
independent community work around the

00:31:32,780 --> 00:31:36,740
releases well first obviously there's

00:31:34,490 --> 00:31:41,060
the there's the the hopefully the

00:31:36,740 --> 00:31:42,230
self-explanatory by-product that you

00:31:41,060 --> 00:31:43,820
know if those are able to release on

00:31:42,230 --> 00:31:46,310
their own timeline we can actually get

00:31:43,820 --> 00:31:48,320
them out on their timeline as opposed to

00:31:46,310 --> 00:31:50,690
on the timeline of Fedora which is not

00:31:48,320 --> 00:31:52,040
always a good match sometimes it is I

00:31:50,690 --> 00:31:54,530
think there are some times where it is

00:31:52,040 --> 00:31:56,450
and isn't at the same time and maybe a

00:31:54,530 --> 00:31:59,330
good example of that might be something

00:31:56,450 --> 00:32:02,150
like gnome we tend to not be able to

00:31:59,330 --> 00:32:03,830
release genome directly on time with its

00:32:02,150 --> 00:32:05,870
releases because the very large stack

00:32:03,830 --> 00:32:08,510
and there's some time that goes by and

00:32:05,870 --> 00:32:12,260
even though we are on roughly the same

00:32:08,510 --> 00:32:14,000
kind of cadence we're on a delay so on

00:32:12,260 --> 00:32:15,860
the one hand it doesn't allow us to

00:32:14,000 --> 00:32:17,120
release it on time on the other hand it

00:32:15,860 --> 00:32:19,130
has actually bought us something good

00:32:17,120 --> 00:32:21,710
which is a lot of times we inherit the

00:32:19,130 --> 00:32:23,450
dot one bug-fix release after the

00:32:21,710 --> 00:32:24,860
release and that is good because it

00:32:23,450 --> 00:32:26,690
means our implementation looks really

00:32:24,860 --> 00:32:29,870
good when it comes out the gate on the

00:32:26,690 --> 00:32:31,700
other hand we lose the the partnership

00:32:29,870 --> 00:32:33,860
that we might be able to have by

00:32:31,700 --> 00:32:36,640
releasing on time if we were able to do

00:32:33,860 --> 00:32:38,570
both I think that will be wonderful so

00:32:36,640 --> 00:32:40,420
there are opportunities around that

00:32:38,570 --> 00:32:43,250
there are also opportunities for

00:32:40,420 --> 00:32:44,510
contribution around the work of this

00:32:43,250 --> 00:32:46,460
marketing who are the people who are

00:32:44,510 --> 00:32:48,470
going to reach out and talk to these

00:32:46,460 --> 00:32:50,300
different communities and get engaged

00:32:48,470 --> 00:32:52,940
and help bring the package maintainer

00:32:50,300 --> 00:32:55,130
Zin fedora together with the upstream

00:32:52,940 --> 00:32:55,950
where needed if those people are already

00:32:55,130 --> 00:32:57,120
there if there

00:32:55,950 --> 00:32:59,250
already working closely with the

00:32:57,120 --> 00:33:00,990
upstream which often they are how can

00:32:59,250 --> 00:33:02,909
they reach out then to people in our

00:33:00,990 --> 00:33:05,370
Fodor mindshare community and engage

00:33:02,909 --> 00:33:07,080
them so that we can have build up more

00:33:05,370 --> 00:33:09,990
awareness around the good stuff that

00:33:07,080 --> 00:33:12,389
we're able to ship on top of an well

00:33:09,990 --> 00:33:13,919
integrated platform so those are just

00:33:12,389 --> 00:33:18,419
some of the things that that we can

00:33:13,919 --> 00:33:19,470
improve so I what I guess the point that

00:33:18,419 --> 00:33:22,260
I want to get at is that there's not

00:33:19,470 --> 00:33:23,669
really a one-size-fits-all life cycle

00:33:22,260 --> 00:33:25,620
here right you know maybe an example

00:33:23,669 --> 00:33:28,950
where we do have a good cadence match

00:33:25,620 --> 00:33:30,840
but genome isn't is is definitely not

00:33:28,950 --> 00:33:33,149
the be-all end-all of all open source

00:33:30,840 --> 00:33:36,510
out there so there are different life

00:33:33,149 --> 00:33:39,120
cycles that we could embrace one being

00:33:36,510 --> 00:33:40,529
based on upstream cadence and again

00:33:39,120 --> 00:33:43,139
these are these are alternatives so

00:33:40,529 --> 00:33:44,760
these are not to all be done at once

00:33:43,139 --> 00:33:46,769
these are going to have different

00:33:44,760 --> 00:33:48,750
weights depending on the nature of the

00:33:46,769 --> 00:33:51,570
upstream and depending on how it fits in

00:33:48,750 --> 00:33:53,610
with fedora so one way to to release

00:33:51,570 --> 00:33:55,649
might be along with the upstream cadence

00:33:53,610 --> 00:33:58,049
let that dictate how the release for

00:33:55,649 --> 00:34:00,480
that stack goes down another basis might

00:33:58,049 --> 00:34:02,190
be releasing on a quality basis right

00:34:00,480 --> 00:34:04,350
our operating system platform might be

00:34:02,190 --> 00:34:05,700
managed that way or maybe not maybe

00:34:04,350 --> 00:34:07,200
there's an application platform that we

00:34:05,700 --> 00:34:09,419
want to manage that way based on its

00:34:07,200 --> 00:34:11,129
integration with fedora initiative

00:34:09,419 --> 00:34:12,869
planning might involve a stack of

00:34:11,129 --> 00:34:15,060
software that we need to push out in

00:34:12,869 --> 00:34:16,589
association with that initiative so we

00:34:15,060 --> 00:34:18,720
could have that fit into an initiative

00:34:16,589 --> 00:34:20,159
planning without regard for whether it's

00:34:18,720 --> 00:34:22,589
going to go out on is it going to make

00:34:20,159 --> 00:34:25,260
Fedora 28 is it going to make Fedora 29

00:34:22,589 --> 00:34:27,629
rather we produce that stack and we can

00:34:25,260 --> 00:34:30,319
use it on top of the platform that that

00:34:27,629 --> 00:34:30,319
makes the most sense

00:34:31,609 --> 00:34:36,809
so again I I think part of the reason

00:34:35,009 --> 00:34:39,269
that Fedora ought to look at any

00:34:36,809 --> 00:34:41,729
initiative like this is encouraging

00:34:39,269 --> 00:34:44,969
contribution right if any of you saw

00:34:41,729 --> 00:34:47,579
Matthews presentation earlier I you know

00:34:44,969 --> 00:34:49,609
I I know that we have a really good base

00:34:47,579 --> 00:34:51,889
we have a really good base of

00:34:49,609 --> 00:34:55,619
experienced people involved in fedora

00:34:51,889 --> 00:34:57,959
the thing that I worry about and I I

00:34:55,619 --> 00:34:59,759
think that I want to maybe highlight is

00:34:57,959 --> 00:35:01,859
the fact that the other bands of new

00:34:59,759 --> 00:35:05,940
people have not been growing in some

00:35:01,859 --> 00:35:07,289
time and that to me is a worry I think

00:35:05,940 --> 00:35:09,420
that ways that we can encourage

00:35:07,289 --> 00:35:12,869
contribution and have that contribution

00:35:09,420 --> 00:35:14,999
come in in a in a methodology that

00:35:12,869 --> 00:35:18,119
people are used to using in the open

00:35:14,999 --> 00:35:20,119
source world is a good thing so having

00:35:18,119 --> 00:35:23,670
more automation of integration testing

00:35:20,119 --> 00:35:25,680
is is hopeful then anyone can help by

00:35:23,670 --> 00:35:26,789
contributing tests right we have and we

00:35:25,680 --> 00:35:29,339
have a way to do this we have a

00:35:26,789 --> 00:35:31,589
mechanism for this using figure using

00:35:29,339 --> 00:35:34,319
the tests repo so this is a way that

00:35:31,589 --> 00:35:36,299
anybody can write a test send a pull

00:35:34,319 --> 00:35:40,140
request have it considered and even have

00:35:36,299 --> 00:35:42,029
that test tested right increasing our

00:35:40,140 --> 00:35:43,920
linkage with upstream efforts and cross

00:35:42,029 --> 00:35:46,410
projects sharing so again these are ways

00:35:43,920 --> 00:35:48,509
that our contributors can get more

00:35:46,410 --> 00:35:51,029
involved with a release without having

00:35:48,509 --> 00:35:53,369
to be tied in necessarily with to the

00:35:51,029 --> 00:35:55,079
same deadlines as hundreds of other

00:35:53,369 --> 00:35:56,759
Fedora contributors all at once

00:35:55,079 --> 00:35:59,940
basically sucking all the wind out of

00:35:56,759 --> 00:36:02,190
our forward motion so working with UPS

00:35:59,940 --> 00:36:05,959
train to boost our our ability to get

00:36:02,190 --> 00:36:05,959
new things out while they are new

00:36:07,670 --> 00:36:11,900
also I want to note I feel like

00:36:10,160 --> 00:36:14,030
modularity deserves to be called out

00:36:11,900 --> 00:36:16,610
here I think people don't focus on it

00:36:14,030 --> 00:36:18,500
largely because we're fitting into a

00:36:16,610 --> 00:36:20,210
single site a single cycle platform

00:36:18,500 --> 00:36:23,420
right now but the problems that

00:36:20,210 --> 00:36:25,400
modularity solves are important to

00:36:23,420 --> 00:36:26,990
developers and a system owners if you

00:36:25,400 --> 00:36:28,940
want to if you're still not up on

00:36:26,990 --> 00:36:30,290
modularity you not haven't really bought

00:36:28,940 --> 00:36:32,330
into it you're not really sure what it

00:36:30,290 --> 00:36:34,520
means they're gonna be talks here on

00:36:32,330 --> 00:36:37,940
modular I think Langdon has a has a talk

00:36:34,520 --> 00:36:40,190
on modularity happening when is it 10:30

00:36:37,940 --> 00:36:41,690
tomorrow and I is there anybody else

00:36:40,190 --> 00:36:42,290
Stephen you're given one on modularity

00:36:41,690 --> 00:36:44,510
as well

00:36:42,290 --> 00:36:47,570
three three more talks so there's enough

00:36:44,510 --> 00:36:49,580
modularity for everybody so look up

00:36:47,570 --> 00:36:53,840
their talks and and and definitely drop

00:36:49,580 --> 00:36:55,220
by to be more useful to consumers right

00:36:53,840 --> 00:36:57,050
those people who are those developers

00:36:55,220 --> 00:36:58,640
and system owners we need to pay

00:36:57,050 --> 00:37:01,340
attention to lifecycle issues because

00:36:58,640 --> 00:37:02,690
they're by and large not interested in a

00:37:01,340 --> 00:37:05,150
platform that's really only kind of

00:37:02,690 --> 00:37:06,730
leapfrogging every six months they want

00:37:05,150 --> 00:37:09,980
what they want when they want it and

00:37:06,730 --> 00:37:14,000
largely they wanted to run on a platform

00:37:09,980 --> 00:37:15,500
that is that's that always works so if

00:37:14,000 --> 00:37:17,360
we are not paying attention to these

00:37:15,500 --> 00:37:20,270
lifecycle issues we're constricting

00:37:17,360 --> 00:37:22,520
Fedora's user base and the outcome from

00:37:20,270 --> 00:37:24,620
that is that we are also restricting our

00:37:22,520 --> 00:37:26,510
contributor pipeline because the reason

00:37:24,620 --> 00:37:28,880
people get involved in Fedora is usually

00:37:26,510 --> 00:37:31,790
not disconnected from their own needs

00:37:28,880 --> 00:37:33,200
it's because they find Fedora works well

00:37:31,790 --> 00:37:36,020
for them or because they find it

00:37:33,200 --> 00:37:37,850
fascinating to use and they find that

00:37:36,020 --> 00:37:40,580
the community around it is a compelling

00:37:37,850 --> 00:37:41,960
way for them to give back something of

00:37:40,580 --> 00:37:45,590
what they've gotten from the gift

00:37:41,960 --> 00:37:47,420
culture that Fedora represents so again

00:37:45,590 --> 00:37:49,270
by constricting the user base we

00:37:47,420 --> 00:37:51,650
constrict the contributor pipeline by

00:37:49,270 --> 00:37:53,360
consequently by widening it we

00:37:51,650 --> 00:37:54,980
potentially widen our contributor

00:37:53,360 --> 00:38:00,770
pipeline which i think is an important

00:37:54,980 --> 00:38:03,680
outcome so what in short I guess what

00:38:00,770 --> 00:38:06,890
I'm what I'm proposing is that we can

00:38:03,680 --> 00:38:09,700
increase focus on a core OS base

00:38:06,890 --> 00:38:12,530
deliverable as a possible Avenue forward

00:38:09,700 --> 00:38:14,390
on an agreed-upon cycle it's not my

00:38:12,530 --> 00:38:15,830
intention to propose a cycle here I

00:38:14,390 --> 00:38:17,690
think this is something that the

00:38:15,830 --> 00:38:18,800
community needs to talk about and figure

00:38:17,690 --> 00:38:20,690
out what's going to work best

00:38:18,800 --> 00:38:22,910
it may be that that cycle is what we

00:38:20,690 --> 00:38:25,880
have now it may be that that cycle is

00:38:22,910 --> 00:38:27,590
twice as long or half as long but it

00:38:25,880 --> 00:38:30,850
needs to be something that will support

00:38:27,590 --> 00:38:34,250
the the purposes that we have in mind

00:38:30,850 --> 00:38:36,470
increasing and by we I mean at the

00:38:34,250 --> 00:38:37,730
community at large so increasing

00:38:36,470 --> 00:38:39,080
automation I think is going to be

00:38:37,730 --> 00:38:40,730
required no matter what and so that

00:38:39,080 --> 00:38:43,310
really directly goes towards the efforts

00:38:40,730 --> 00:38:45,620
like CI that will help us keep quality

00:38:43,310 --> 00:38:47,270
high while reducing the manual effort

00:38:45,620 --> 00:38:51,260
and the heroics that we have to build

00:38:47,270 --> 00:38:53,900
around each release currently we should

00:38:51,260 --> 00:38:56,360
establish some key stacks perhaps two

00:38:53,900 --> 00:38:58,580
modular eyes that are on different

00:38:56,360 --> 00:39:01,520
cycles in the base platform even using

00:38:58,580 --> 00:39:05,840
these as as a straw men to start with

00:39:01,520 --> 00:39:07,460
and the implication here I guess is you

00:39:05,840 --> 00:39:09,320
know one possibility here is moving

00:39:07,460 --> 00:39:10,460
there are a couple possibilities one of

00:39:09,320 --> 00:39:12,800
them is moving towards a release

00:39:10,460 --> 00:39:15,190
whenever we want model I mean imagine a

00:39:12,800 --> 00:39:18,110
future in which we could cut a fedora

00:39:15,190 --> 00:39:20,240
release at any time that we want to

00:39:18,110 --> 00:39:21,980
right within reason and say you know

00:39:20,240 --> 00:39:24,230
what next month we're gonna we're gonna

00:39:21,980 --> 00:39:27,290
make this the release right or next week

00:39:24,230 --> 00:39:30,170
who knows or last week's last week's

00:39:27,290 --> 00:39:31,700
Fedora was great right right it might

00:39:30,170 --> 00:39:33,350
depend on yeah I might depend on what

00:39:31,700 --> 00:39:35,330
those measures are it may depend on what

00:39:33,350 --> 00:39:37,190
the what level of automation we have to

00:39:35,330 --> 00:39:39,200
give us confidence it may it may depend

00:39:37,190 --> 00:39:41,150
on what level of effort is required

00:39:39,200 --> 00:39:43,670
around that release kind of like the

00:39:41,150 --> 00:39:46,490
meta release types of things but being

00:39:43,670 --> 00:39:47,720
able to decide that on a floating basis

00:39:46,490 --> 00:39:49,580
might be helpful

00:39:47,720 --> 00:39:50,870
another thing that Steven and I were

00:39:49,580 --> 00:39:52,460
talking about before the break which I

00:39:50,870 --> 00:39:56,500
also wanted to point out here well

00:39:52,460 --> 00:39:59,510
another possibility is having rawhide

00:39:56,500 --> 00:40:02,380
either either rawhide being the thing

00:39:59,510 --> 00:40:04,910
that most people able to are able to run

00:40:02,380 --> 00:40:08,150
continuously as opposed to just a few

00:40:04,910 --> 00:40:09,800
hundred people having 80 or 90% of the

00:40:08,150 --> 00:40:11,840
Fedora user base able to use it would be

00:40:09,800 --> 00:40:13,880
great or perhaps there is no rawhide

00:40:11,840 --> 00:40:16,040
because something else has taken its

00:40:13,880 --> 00:40:18,320
place some stream that we can now use as

00:40:16,040 --> 00:40:21,020
a target so what in whatever in whatever

00:40:18,320 --> 00:40:23,450
world this is basically having people be

00:40:21,020 --> 00:40:25,550
able to live on the edge without it

00:40:23,450 --> 00:40:28,070
being a bleeding edge which I think we

00:40:25,550 --> 00:40:29,540
continue we always want to avoid right

00:40:28,070 --> 00:40:30,880
so this is directly in line I think with

00:40:29,540 --> 00:40:32,500
the messaging that Matt

00:40:30,880 --> 00:40:34,480
talked about earlier what we do not want

00:40:32,500 --> 00:40:37,480
is to turn everyone into a bleeding edge

00:40:34,480 --> 00:40:42,430
consumer but being a leading edge

00:40:37,480 --> 00:40:44,319
consumer is definitely helpful all right

00:40:42,430 --> 00:40:46,089
and so that leads us some time for for

00:40:44,319 --> 00:40:48,460
Q&A and discussion so again I know this

00:40:46,089 --> 00:40:50,470
is a kind of a high-level talk a lot of

00:40:48,460 --> 00:40:52,180
the mechanics around this I think are

00:40:50,470 --> 00:40:53,710
contained in talks that are gonna happen

00:40:52,180 --> 00:40:55,240
around here flock the some of you guys

00:40:53,710 --> 00:40:57,640
are giving them so as you're thinking

00:40:55,240 --> 00:40:59,589
about it you can sort of keep part of

00:40:57,640 --> 00:41:01,599
this in mind maybe actually Peter you've

00:40:59,589 --> 00:41:04,750
you've had your share of comments I'm

00:41:01,599 --> 00:41:07,829
gonna go to Laura what we'll come back I

00:41:04,750 --> 00:41:07,829
promise you we'll come back

00:41:35,200 --> 00:41:40,150
but to leave

00:41:37,420 --> 00:41:42,300
in work

00:41:40,150 --> 00:41:48,530
system

00:41:42,300 --> 00:41:48,530
we have 4 + 4 xx that think there

00:42:00,440 --> 00:42:04,109
yeah

00:42:01,710 --> 00:42:07,290
so okay so the question to boil down is

00:42:04,109 --> 00:42:10,550
this this talk doesn't seem to propose

00:42:07,290 --> 00:42:13,859
like radically altering what the Fedora

00:42:10,550 --> 00:42:15,930
deliverable looks like right now but

00:42:13,859 --> 00:42:20,070
could it look different down down the

00:42:15,930 --> 00:42:22,619
line I think I think it could I I would

00:42:20,070 --> 00:42:24,060
actually say it should and I would say

00:42:22,619 --> 00:42:26,849
it should you know maybe sooner rather

00:42:24,060 --> 00:42:29,220
than later because I feel like the rest

00:42:26,849 --> 00:42:32,580
of the world's model has kind of gone on

00:42:29,220 --> 00:42:34,770
without us and by not focusing on that

00:42:32,580 --> 00:42:36,030
model we're kind of losing out on some

00:42:34,770 --> 00:42:37,740
of the benefits and we're losing out on

00:42:36,030 --> 00:42:39,030
some of the audience maybe without and

00:42:37,740 --> 00:42:41,880
we're not really getting anything in

00:42:39,030 --> 00:42:45,240
return except a lot of work I think I

00:42:41,880 --> 00:42:48,030
think I agree with you with a twist and

00:42:45,240 --> 00:42:50,160
that the question was posed as either/or

00:42:48,030 --> 00:42:52,560
right there's no reason why you can't

00:42:50,160 --> 00:42:55,260
continue to produce a fedora that looks

00:42:52,560 --> 00:42:57,630
like a fedora today for a desktop user

00:42:55,260 --> 00:42:58,200
or a server user or whatever the case

00:42:57,630 --> 00:43:00,690
may be

00:42:58,200 --> 00:43:03,480
with variable life cycles and also have

00:43:00,690 --> 00:43:04,589
something cool and different I won't

00:43:03,480 --> 00:43:07,500
even say it's cool maybe some people

00:43:04,589 --> 00:43:11,010
think it's stupid but fundamental

00:43:07,500 --> 00:43:12,300
different right like a core OS or a

00:43:11,010 --> 00:43:14,190
silver/blue that moves at a different

00:43:12,300 --> 00:43:16,980
pace if you guys remember back when we

00:43:14,190 --> 00:43:18,810
introduced additions like part of that

00:43:16,980 --> 00:43:20,190
reason was maybe these additions have

00:43:18,810 --> 00:43:22,230
different focal points and they need

00:43:20,190 --> 00:43:24,420
different life cycles and because of the

00:43:22,230 --> 00:43:25,980
way fedora is built we literally could

00:43:24,420 --> 00:43:27,920
not do it yeah so we're talking about

00:43:25,980 --> 00:43:29,070
opening up possibilities to do things

00:43:27,920 --> 00:43:30,990
okay

00:43:29,070 --> 00:43:32,910
hangouts so there's a few questions I'm

00:43:30,990 --> 00:43:35,330
gonna take this woman and about five

00:43:32,910 --> 00:43:35,330
rows back

00:44:10,840 --> 00:44:13,969
[Music]

00:45:16,980 --> 00:45:19,790
right

00:45:24,980 --> 00:45:28,050
[Music]

00:45:29,570 --> 00:45:34,520
okay I'm all right I'm gonna have to

00:45:32,540 --> 00:45:36,220
summarize grids that was a really long

00:45:34,520 --> 00:45:39,980
come and I think the point was though

00:45:36,220 --> 00:45:43,910
not to assume that the base OS is simply

00:45:39,980 --> 00:45:46,490
one size or one set of packages and one

00:45:43,910 --> 00:45:48,830
deliverable only versus the applications

00:45:46,490 --> 00:45:50,390
and that we might have an opportunity to

00:45:48,830 --> 00:45:52,100
have several different kinds of sets

00:45:50,390 --> 00:45:54,920
there now they might they might share a

00:45:52,100 --> 00:45:56,840
some sort of common core but there may

00:45:54,920 --> 00:45:58,550
be different sets intended for different

00:45:56,840 --> 00:46:00,470
purposes I don't think anything here

00:45:58,550 --> 00:46:01,640
precludes that and so I think that's

00:46:00,470 --> 00:46:03,770
certainly something we should keep in

00:46:01,640 --> 00:46:07,430
mind I think I think we should keep it

00:46:03,770 --> 00:46:09,230
in mind I also think I think we should

00:46:07,430 --> 00:46:11,000
allow for the possibility but I think we

00:46:09,230 --> 00:46:13,100
shouldn't be afraid to be opinionated

00:46:11,000 --> 00:46:15,380
either right like people come to a Linux

00:46:13,100 --> 00:46:17,930
distribution not because they package

00:46:15,380 --> 00:46:19,670
all the things but because they do it in

00:46:17,930 --> 00:46:21,220
a way that they curate the content and

00:46:19,670 --> 00:46:23,930
so if you want to produce multiple

00:46:21,220 --> 00:46:25,940
multiple bases with different variables

00:46:23,930 --> 00:46:27,440
that's fine but each one of those should

00:46:25,940 --> 00:46:29,150
have an opinion right it shouldn't just

00:46:27,440 --> 00:46:30,980
be some random collection of things that

00:46:29,150 --> 00:46:36,200
support this one application like you

00:46:30,980 --> 00:46:37,700
should yeah right like we already kind

00:46:36,200 --> 00:46:39,170
of do this in the way Fedora does it but

00:46:37,700 --> 00:46:40,790
our build system our infrastructure

00:46:39,170 --> 00:46:42,940
isn't set up to allow what you're

00:46:40,790 --> 00:46:42,940
suggesting

00:46:53,539 --> 00:46:56,139
like

00:47:02,090 --> 00:47:06,330
so I I think there's I think unpacking

00:47:05,100 --> 00:47:08,430
that there are probably a lot of

00:47:06,330 --> 00:47:09,720
concerns that would have to be resolved

00:47:08,430 --> 00:47:11,570
I think you know that that's gonna be

00:47:09,720 --> 00:47:14,220
the that's gonna take the form of

00:47:11,570 --> 00:47:16,410
probably hundreds or thousands of email

00:47:14,220 --> 00:47:18,090
messages following you know this this

00:47:16,410 --> 00:47:19,650
conference so I don't think we're gonna

00:47:18,090 --> 00:47:20,160
untangle it all here I want to get one

00:47:19,650 --> 00:47:21,960
more question

00:47:20,160 --> 00:47:22,980
Owen and we're going to be out of time I

00:47:21,960 --> 00:47:25,280
think after that because we have one

00:47:22,980 --> 00:47:25,280
more minute

00:47:35,360 --> 00:47:39,760
and where do you see is our business

00:47:44,319 --> 00:47:48,530
okay so the question was is there a

00:47:46,369 --> 00:47:52,190
right forum for talking about lifecycle

00:47:48,530 --> 00:47:53,780
I mean I hesitate to say medieval I mean

00:47:52,190 --> 00:47:58,280
that's that's the one place that we have

00:47:53,780 --> 00:48:00,440
for these things right now is it well

00:47:58,280 --> 00:48:06,800
okay so yes so fest goes the other

00:48:00,440 --> 00:48:08,900
suggestion yeah yeah that's that's just

00:48:06,800 --> 00:48:10,880
starting up and I think we can take

00:48:08,900 --> 00:48:12,920
advantage of some enthusiasm there maybe

00:48:10,880 --> 00:48:14,900
and not necessarily co-opt it with a

00:48:12,920 --> 00:48:19,339
life cycle discussion but the point is

00:48:14,900 --> 00:48:21,650
like sorry oh sorry dusty suggested the

00:48:19,339 --> 00:48:23,599
Container sig as well as a as a

00:48:21,650 --> 00:48:25,339
possibility to discuss that so it sounds

00:48:23,599 --> 00:48:26,599
like we don't have one singular answer

00:48:25,339 --> 00:48:28,880
yeah but we should try and come up with

00:48:26,599 --> 00:48:31,550
that maybe by the end of the week no and

00:48:28,880 --> 00:48:33,319
I think first of all that was a very

00:48:31,550 --> 00:48:35,000
well thought out and posed question that

00:48:33,319 --> 00:48:37,369
nobody's really addressed ever so I'm

00:48:35,000 --> 00:48:38,180
glad that you asked that we did

00:48:37,369 --> 00:48:39,980
summarize it right

00:48:38,180 --> 00:48:42,680
I think we did summarize this summary

00:48:39,980 --> 00:48:44,210
the summary was where where where is the

00:48:42,680 --> 00:48:45,950
best place for us to have the discussion

00:48:44,210 --> 00:48:49,220
about this kind of split and how we

00:48:45,950 --> 00:48:51,920
enable this sort of different life cycle

00:48:49,220 --> 00:48:53,690
yeah in our in our policy and

00:48:51,920 --> 00:48:54,950
infrastructure I think if we wait for

00:48:53,690 --> 00:48:56,270
one person to decide where we're gonna

00:48:54,950 --> 00:48:57,859
have the discussion we're never gonna

00:48:56,270 --> 00:48:59,329
have that discussion so let's start it

00:48:57,859 --> 00:48:59,869
in multiple places and see what we come

00:48:59,329 --> 00:49:02,270
up with

00:48:59,869 --> 00:49:03,800
it sucks from the people who want to get

00:49:02,270 --> 00:49:06,770
concrete answers but sometimes you have

00:49:03,800 --> 00:49:08,690
to you have to drive the conversation as

00:49:06,770 --> 00:49:11,060
much as you want okay

00:49:08,690 --> 00:49:12,890
we've been waiting to say stuff he has

00:49:11,060 --> 00:49:16,089
we have a lot of we're at we're a minute

00:49:12,890 --> 00:49:16,089
over but go ahead make it short

00:49:17,340 --> 00:49:24,720
but I did want to clarify that you said

00:49:20,700 --> 00:49:26,560
the software world is leaking phosphide

00:49:24,720 --> 00:49:28,450
it's not just us

00:49:26,560 --> 00:49:30,670
yeah it's all the districts and its

00:49:28,450 --> 00:49:33,330
operating systems it's everybody

00:49:30,670 --> 00:49:35,650
yes because they are a hundred percent

00:49:33,330 --> 00:49:39,160
launching do two scenarios where they

00:49:35,650 --> 00:49:41,980
can do you know kind of self perfect

00:49:39,160 --> 00:49:44,500
solutions to the problem that they have

00:49:41,980 --> 00:49:46,430
and none of the operating systems or

00:49:44,500 --> 00:49:48,750
discos

00:49:46,430 --> 00:49:50,370
okay so that that goes back to your

00:49:48,750 --> 00:49:52,500
point there's only summarize for Langdon

00:49:50,370 --> 00:49:53,730
and then we're gonna be done so like

00:49:52,500 --> 00:49:55,320
what Langdon said was a really good

00:49:53,730 --> 00:49:56,790
point now I tried to make this more

00:49:55,320 --> 00:49:58,980
agnostic when I talked about Linux

00:49:56,790 --> 00:50:00,870
packaging and I did not make it

00:49:58,980 --> 00:50:02,940
abundantly clear when I said we are not

00:50:00,870 --> 00:50:06,090
keeping up that the we does not mean

00:50:02,940 --> 00:50:07,860
fedora the we means sort of operating

00:50:06,090 --> 00:50:09,900
systems the whole Langdon pointed out I

00:50:07,860 --> 00:50:11,670
probably would have even just kept it to

00:50:09,900 --> 00:50:12,930
Linux OS is but I think Langdon

00:50:11,670 --> 00:50:14,850
correctly point out that operating

00:50:12,930 --> 00:50:16,710
systems as a whole are not keeping up

00:50:14,850 --> 00:50:18,510
with that space and that's a really good

00:50:16,710 --> 00:50:20,310
point so you know we have an opportunity

00:50:18,510 --> 00:50:22,200
here along with the problem comes an

00:50:20,310 --> 00:50:23,820
opportunity so it's a big problem to

00:50:22,200 --> 00:50:25,530
solve but if we do it well it could

00:50:23,820 --> 00:50:30,840
actually put us in the forefront as

00:50:25,530 --> 00:50:33,930
opposed to following Justin giving quick

00:50:30,840 --> 00:50:35,490
ones all right so here's the deal

00:50:33,930 --> 00:50:37,770
I'm here all week I have no more

00:50:35,490 --> 00:50:39,180
sessions Paul's also here hit us up in

00:50:37,770 --> 00:50:40,170
the hallway we're like we want to get

00:50:39,180 --> 00:50:41,250
the feedback we want to get the

00:50:40,170 --> 00:50:43,760
questions we want to have the

00:50:41,250 --> 00:50:47,149
discussions all right thank you guys

00:50:43,760 --> 00:50:47,149

YouTube URL: https://www.youtube.com/watch?v=fJvcKRTVQ2M


