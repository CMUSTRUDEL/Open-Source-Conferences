Title: Flock 2018 -  Befriending the elephant in the room: Fedora RHEL kernel
Publication date: 2018-08-29
Playlist: Flock 2018
Description: 
	Wednesday, August 8, 2018
2:30pm - 3:20pm
@Meissen + Radebeul

Talk: Befriending the elephant in the room: Fedora/RHEL kernel
Presenters: Laura Abbot, Stef Tobias Walter

Description: Fedora serves as an important part of the development process for Red Hat Enterprise Linux (RHEL), despite the two distributions having different focuses and development processes. The kernel in particular has long diverged to an extreme degree between RHEL and Fedora. There’s an increased interest to make Fedora more useful as a RHEL upstream by sharing a common kernel. The focus of this talk is to explain why Red Hat wants to synchronize with Fedora, what’s going to change and how this will be beneficial to both RHEL and Fedora.
Captions: 
	00:00:02,870 --> 00:00:09,019
all right I think it's about that time

00:00:05,580 --> 00:00:16,740
friend so let's see about getting

00:00:09,019 --> 00:00:20,580
started hey guys friends are we ready to

00:00:16,740 --> 00:00:22,859
start alright alright thank you for

00:00:20,580 --> 00:00:24,750
coming to this talk this is the top of

00:00:22,859 --> 00:00:29,220
this talk is befriending the elephant in

00:00:24,750 --> 00:00:30,619
the room and just to clarify for those

00:00:29,220 --> 00:00:33,059
who may not have heard this term before

00:00:30,619 --> 00:00:35,309
the phrase elephant in the room refers

00:00:33,059 --> 00:00:37,200
to something that everyone is a that

00:00:35,309 --> 00:00:39,210
everyone is aware that is there but

00:00:37,200 --> 00:00:40,800
nobody actually wants to talk about so

00:00:39,210 --> 00:00:43,590
I'll explain this metaphor a little bit

00:00:40,800 --> 00:00:45,149
as we go on but okay here's what we're

00:00:43,590 --> 00:00:48,090
going to cover today we're going to be

00:00:45,149 --> 00:00:51,719
talking about the kernel and the way

00:00:48,090 --> 00:00:55,710
things are today what exactly we want to

00:00:51,719 --> 00:00:57,480
see and change for the kernel and then

00:00:55,710 --> 00:01:00,239
what changes we actually plan on making

00:00:57,480 --> 00:01:03,030
to make this all happen okay so first a

00:01:00,239 --> 00:01:04,949
little bit about us my name is Laura

00:01:03,030 --> 00:01:07,439
Abbott I'm one of the Fedora kernel

00:01:04,949 --> 00:01:09,990
maintain heirs my full-time job is to

00:01:07,439 --> 00:01:11,790
deliver kernel releases and fir Fedora

00:01:09,990 --> 00:01:14,040
antics bugs and everything really to

00:01:11,790 --> 00:01:16,860
that and stuff t1 introduce yourself and

00:01:14,040 --> 00:01:18,540
I'm stuff I've worked on many many open

00:01:16,860 --> 00:01:22,950
source projects integrating them I

00:01:18,540 --> 00:01:26,220
worked on cockpit as one of the folks

00:01:22,950 --> 00:01:28,500
who created cockpit and more recently

00:01:26,220 --> 00:01:33,210
been working on CI automation in fedora

00:01:28,500 --> 00:01:36,619
and in row as well and we both work for

00:01:33,210 --> 00:01:39,240
Red Hat and we're both Fedora users and

00:01:36,619 --> 00:01:44,250
contributors in yeah we like fedora a

00:01:39,240 --> 00:01:46,049
lot so okay as a kernel maintainer I

00:01:44,250 --> 00:01:48,210
spend a lot of time talking about the

00:01:46,049 --> 00:01:50,130
upstream kernel release process to

00:01:48,210 --> 00:01:51,390
various people and I always like to

00:01:50,130 --> 00:01:53,939
start with this when talking about

00:01:51,390 --> 00:01:55,950
kernel releases just because a lot of

00:01:53,939 --> 00:01:59,130
how the upstream kernel works tends to

00:01:55,950 --> 00:02:02,899
drive how distributions work so there's

00:01:59,130 --> 00:02:06,030
a new kernel release major version bomb

00:02:02,899 --> 00:02:07,770
about every three months you can see

00:02:06,030 --> 00:02:09,360
there's an address up there that will

00:02:07,770 --> 00:02:11,819
show you the schedule it happens fairly

00:02:09,360 --> 00:02:12,560
regularly for context where we are right

00:02:11,819 --> 00:02:14,540
now

00:02:12,560 --> 00:02:16,010
we just had our c8 come out on last

00:02:14,540 --> 00:02:18,470
Sunday and everything if everything goes

00:02:16,010 --> 00:02:20,660
well we should get a 4.18 final this

00:02:18,470 --> 00:02:23,420
coming Sunday and three months is

00:02:20,660 --> 00:02:24,860
actually pretty fast as far as things

00:02:23,420 --> 00:02:26,690
goes if you look at the velocity of how

00:02:24,860 --> 00:02:30,470
many things are coming in this includes

00:02:26,690 --> 00:02:34,090
everything new features and which

00:02:30,470 --> 00:02:34,090
everyone always likes but also some bugs

00:02:34,569 --> 00:02:37,430
which people like less of you might

00:02:37,010 --> 00:02:41,510
expect

00:02:37,430 --> 00:02:43,730
so for fedora how what Fedora chooses to

00:02:41,510 --> 00:02:46,280
do for its kernel laces is to roughly

00:02:43,730 --> 00:02:49,190
track the latest stable release so what

00:02:46,280 --> 00:02:53,720
this means this is that Fedora 28 footer

00:02:49,190 --> 00:02:55,519
27 are currently on the 4.17 stream and

00:02:53,720 --> 00:02:57,980
are picking up stays stable updates

00:02:55,519 --> 00:03:00,560
which means just bug fixes so that's

00:02:57,980 --> 00:03:02,150
what's coming in which means is that

00:03:00,560 --> 00:03:05,299
technically the set of features that are

00:03:02,150 --> 00:03:07,670
in for Fedora 28 Fedora 27 are fixed

00:03:05,299 --> 00:03:11,360
versus rawhide which is on the RC

00:03:07,670 --> 00:03:16,430
release and for the most part this works

00:03:11,360 --> 00:03:18,440
pretty well we this lets people get the

00:03:16,430 --> 00:03:20,720
new newer features they want for stable

00:03:18,440 --> 00:03:23,239
releases and generally keep things going

00:03:20,720 --> 00:03:25,640
and part of our philosophy with Fedora

00:03:23,239 --> 00:03:27,920
is to really have a breadth of focus we

00:03:25,640 --> 00:03:30,500
tend to focus on enabling as many

00:03:27,920 --> 00:03:31,760
drivers as possible and really giving

00:03:30,500 --> 00:03:33,709
the community a chance to tell us what

00:03:31,760 --> 00:03:35,390
they want um generally if someone files

00:03:33,709 --> 00:03:38,090
a Bugzilla and says hey can you turn

00:03:35,390 --> 00:03:40,160
this this kernel feature on and it seems

00:03:38,090 --> 00:03:42,049
like it's reasonable we'll turn it on

00:03:40,160 --> 00:03:45,739
and assuming nothing breaks that's how

00:03:42,049 --> 00:03:47,660
it happens and we will also aggressively

00:03:45,739 --> 00:03:50,060
pick up bug fixes and patches that

00:03:47,660 --> 00:03:51,829
people find and again this is because

00:03:50,060 --> 00:03:53,660
people are finding problems it's pretty

00:03:51,829 --> 00:03:56,329
easy for us as Fedora Colonel McCain

00:03:53,660 --> 00:03:57,650
ears to want to bring stuff in and that

00:03:56,329 --> 00:03:58,970
this is kind of our philosophy as is

00:03:57,650 --> 00:04:02,000
that we want to try and stay as close as

00:03:58,970 --> 00:04:03,889
possible and use our freedom to that we

00:04:02,000 --> 00:04:05,720
have is kernel maintainers to try and

00:04:03,889 --> 00:04:07,670
make the fort or kernel as best as we

00:04:05,720 --> 00:04:10,940
can

00:04:07,670 --> 00:04:12,890
this is kind of in contrast to how well

00:04:10,940 --> 00:04:15,650
the Red Hat Enterprise Linux kernel

00:04:12,890 --> 00:04:17,150
works the way that kernel works is that

00:04:15,650 --> 00:04:18,949
they tend to pick a single kernel base

00:04:17,150 --> 00:04:21,440
and stay on that for the entire

00:04:18,949 --> 00:04:24,260
lifecycle so the current kernel base

00:04:21,440 --> 00:04:28,729
they have is 3.10 which is nominally

00:04:24,260 --> 00:04:30,830
very old but they make this work by

00:04:28,729 --> 00:04:32,720
taking a lot of very experienced kernel

00:04:30,830 --> 00:04:34,220
engineers and having them do all kinds

00:04:32,720 --> 00:04:36,740
of backports they will backports bug

00:04:34,220 --> 00:04:39,590
fixes and features so what you end up

00:04:36,740 --> 00:04:43,490
getting is you get possibly some set of

00:04:39,590 --> 00:04:45,860
features and bug fixes but with a gnome

00:04:43,490 --> 00:04:48,590
level of stability so there's a lot of

00:04:45,860 --> 00:04:50,720
validation and part of this validation

00:04:48,590 --> 00:04:53,300
also includes a bit of a very long

00:04:50,720 --> 00:04:54,560
process to actually get anything in so

00:04:53,300 --> 00:04:57,380
this means if you actually want to get a

00:04:54,560 --> 00:04:59,090
new feature in Tyrell you have to go

00:04:57,380 --> 00:05:05,060
through a lot of internal approval bla

00:04:59,090 --> 00:05:08,090
bla bla bla and this so comparing the

00:05:05,060 --> 00:05:11,060
two rel is obviously not fedora but

00:05:08,090 --> 00:05:12,289
that's okay I'm not up here to make a

00:05:11,060 --> 00:05:14,570
value judgment about whether you should

00:05:12,289 --> 00:05:15,530
be using rel versus fedora for kernel

00:05:14,570 --> 00:05:17,539
philosophies just because they're

00:05:15,530 --> 00:05:21,590
targeting two very different things

00:05:17,539 --> 00:05:22,610
and there are good reasons do you might

00:05:21,590 --> 00:05:24,830
want to use one versus the other

00:05:22,610 --> 00:05:27,470
slow versus fast as you've kind of heard

00:05:24,830 --> 00:05:30,830
about other parts the other people talk

00:05:27,470 --> 00:05:32,570
about okay so like I said this talk was

00:05:30,830 --> 00:05:36,169
called the elephant in the room so as

00:05:32,570 --> 00:05:39,590
Josh already alluded to fedora is

00:05:36,169 --> 00:05:41,330
supposed to be the upstream of row but

00:05:39,590 --> 00:05:43,970
the elephant in the room is is that this

00:05:41,330 --> 00:05:45,889
really isn't the case is that the two

00:05:43,970 --> 00:05:48,530
have basically diverged completely and

00:05:45,889 --> 00:05:50,240
there's a as a result testing and work

00:05:48,530 --> 00:05:53,660
that happens on fedora does not have a

00:05:50,240 --> 00:05:55,910
direct impact on rel what ends up

00:05:53,660 --> 00:05:57,139
happening is is that rel developers put

00:05:55,910 --> 00:05:59,330
their work into the upstream kernel

00:05:57,139 --> 00:06:01,310
which Fedora picks up indirectly but

00:05:59,330 --> 00:06:05,389
again there's no direct connection and

00:06:01,310 --> 00:06:09,550
that's what we want to fix now pet sums

00:06:05,389 --> 00:06:09,550
up to stuff okay

00:06:12,990 --> 00:06:19,600
so we're talking about an elephant in

00:06:17,020 --> 00:06:21,280
the room so we need to say hi we need to

00:06:19,600 --> 00:06:22,840
address it we need to be explicit about

00:06:21,280 --> 00:06:29,830
previously what may have been implicit

00:06:22,840 --> 00:06:34,120
or assumed let's do that so we've

00:06:29,830 --> 00:06:37,300
written up what we think rel and Red Hat

00:06:34,120 --> 00:06:42,400
want from an upstream in fedora before

00:06:37,300 --> 00:06:46,240
the kernel keep in mind that most of the

00:06:42,400 --> 00:06:50,530
upstream development by and large almost

00:06:46,240 --> 00:06:52,420
100% goes all the way to the Linux

00:06:50,530 --> 00:06:53,740
kernel development the various mailing

00:06:52,420 --> 00:06:56,080
lists involved in it the various

00:06:53,740 --> 00:06:58,780
maintainer x' there and so on so what we

00:06:56,080 --> 00:07:00,490
don't want is a place to do actual

00:06:58,780 --> 00:07:02,140
hacking on the the code of the kernel

00:07:00,490 --> 00:07:04,690
that's that's typically not something

00:07:02,140 --> 00:07:06,310
that happens in fedora so here's what

00:07:04,690 --> 00:07:11,260
what we do want let's look at this

00:07:06,310 --> 00:07:14,020
together we want a future rel kernel and

00:07:11,260 --> 00:07:15,640
its config to see validation by a

00:07:14,020 --> 00:07:18,640
production usage of fedora

00:07:15,640 --> 00:07:22,270
long before rel development and testing

00:07:18,640 --> 00:07:25,810
on that kernel begins you all see this

00:07:22,270 --> 00:07:28,150
already for your laptops this is very

00:07:25,810 --> 00:07:30,550
common right you'll see features coming

00:07:28,150 --> 00:07:32,110
into the upstream kernel and landing on

00:07:30,550 --> 00:07:34,000
your laptops something not working quite

00:07:32,110 --> 00:07:35,530
right it's awkward for us but this

00:07:34,000 --> 00:07:38,500
really is something that's worthwhile

00:07:35,530 --> 00:07:40,540
for Red Hat the the various drivers

00:07:38,500 --> 00:07:43,030
graphics drivers and so on see

00:07:40,540 --> 00:07:45,790
validation from all of us we want to

00:07:43,030 --> 00:07:48,670
expand that so that more broadly that

00:07:45,790 --> 00:07:52,810
example what we're more broadly applied

00:07:48,670 --> 00:07:56,910
to server cases to cluster cases to many

00:07:52,810 --> 00:08:02,080
more places that that production usage

00:07:56,910 --> 00:08:04,330
applies to and secondly we want a kernel

00:08:02,080 --> 00:08:07,260
developer a Red Hat kernel developer or

00:08:04,330 --> 00:08:10,060
other developer or hardware partner a

00:08:07,260 --> 00:08:11,740
software vendor or a Red Hat product

00:08:10,060 --> 00:08:15,610
team those products that were listed in

00:08:11,740 --> 00:08:17,770
last talk to be able to debug test and

00:08:15,610 --> 00:08:20,140
evaluate new features in the Fedora

00:08:17,770 --> 00:08:22,450
kernel with a confidence that their

00:08:20,140 --> 00:08:23,230
effort builds towards the next rel

00:08:22,450 --> 00:08:25,630
Connell

00:08:23,230 --> 00:08:29,560
currently that confidence doesn't exist

00:08:25,630 --> 00:08:31,630
and that's why you see people evaluating

00:08:29,560 --> 00:08:33,669
CentOS are using CentOS or having

00:08:31,630 --> 00:08:40,150
nowhere to go trying to find a place to

00:08:33,669 --> 00:08:44,400
do such testing and development so when

00:08:40,150 --> 00:08:47,170
when Red Hat started working with fedora

00:08:44,400 --> 00:08:51,520
this is one of the one of the reasons

00:08:47,170 --> 00:08:53,860
that that the investment happened was we

00:08:51,520 --> 00:08:55,990
want Red Hat wanted feature incubation

00:08:53,860 --> 00:08:57,910
and innovation to be have a place to

00:08:55,990 --> 00:09:02,050
happen let's look at both of those

00:08:57,910 --> 00:09:02,830
things so incubation is taking features

00:09:02,050 --> 00:09:04,720
that have been developed elsewhere

00:09:02,830 --> 00:09:07,840
bringing them together distributing them

00:09:04,720 --> 00:09:10,000
and seeing if they stick so a good

00:09:07,840 --> 00:09:12,700
example of this is new drivers that land

00:09:10,000 --> 00:09:14,770
in the upstream kernel and like Laura

00:09:12,700 --> 00:09:16,510
said Fedora kernel will enable as many

00:09:14,770 --> 00:09:18,160
of them as possible so we can see if

00:09:16,510 --> 00:09:20,950
they're worthwhile if they're stable if

00:09:18,160 --> 00:09:23,200
they work but there's many other places

00:09:20,950 --> 00:09:24,580
like this outside of the kernel and you

00:09:23,200 --> 00:09:27,310
can think of all sorts of examples of

00:09:24,580 --> 00:09:28,420
things here and then of course a place

00:09:27,310 --> 00:09:32,350
to integrate all the different

00:09:28,420 --> 00:09:35,190
components together different pieces the

00:09:32,350 --> 00:09:38,560
kernel require user line components and

00:09:35,190 --> 00:09:40,360
there's various api's exposed and so on

00:09:38,560 --> 00:09:41,680
making sure that those work together and

00:09:40,360 --> 00:09:43,870
getting some sense of whether something

00:09:41,680 --> 00:09:46,990
is stable and worth shipping in reule

00:09:43,870 --> 00:09:51,190
let's say a new firewall a new a new way

00:09:46,990 --> 00:09:55,080
of the C group stuff is a good example a

00:09:51,190 --> 00:09:59,170
new way of partitioning up a system

00:09:55,080 --> 00:10:01,600
innovate innovation is about stuff

00:09:59,170 --> 00:10:02,920
that's actually developed in fedora so

00:10:01,600 --> 00:10:04,540
the way an operating system is put

00:10:02,920 --> 00:10:09,000
together the way you boot the operating

00:10:04,540 --> 00:10:11,530
system the whole grub to init rd2

00:10:09,000 --> 00:10:13,360
to the Linux kernel and all of that

00:10:11,530 --> 00:10:14,980
those angles these are places where you

00:10:13,360 --> 00:10:16,420
can act we can actually do some work in

00:10:14,980 --> 00:10:18,850
Fedora itself rather than just reading

00:10:16,420 --> 00:10:22,810
features that are done elsewhere we need

00:10:18,850 --> 00:10:26,440
to be very able all of us to try out new

00:10:22,810 --> 00:10:27,760
ideas but also to fail at them to say

00:10:26,440 --> 00:10:30,180
hey we tried that out was a bad idea

00:10:27,760 --> 00:10:31,990
let's replace it with something else and

00:10:30,180 --> 00:10:35,110
instead of treating that as a failure

00:10:31,990 --> 00:10:36,490
treat that as something that we want in

00:10:35,110 --> 00:10:38,440
fedora

00:10:36,490 --> 00:10:40,960
so those failures are literally one of

00:10:38,440 --> 00:10:42,400
the cool things about Fedora the ability

00:10:40,960 --> 00:10:45,580
to back something out and change it a

00:10:42,400 --> 00:10:47,230
couple of versions later and in Braille

00:10:45,580 --> 00:10:49,330
we can't do that this is a place where

00:10:47,230 --> 00:10:51,610
were handcuffed to something for 10

00:10:49,330 --> 00:10:53,320
years or more right so 4 door is the

00:10:51,610 --> 00:10:54,910
place where we want to be able to do

00:10:53,320 --> 00:10:58,270
that and it's really cool that we have a

00:10:54,910 --> 00:11:00,340
place to do this so here's some examples

00:10:58,270 --> 00:11:01,270
we'll talk more about these in depth

00:11:00,340 --> 00:11:05,500
later but this is to get you thinking

00:11:01,270 --> 00:11:06,730
right so if the rel kernel and Fedora

00:11:05,500 --> 00:11:08,560
kernel have completely different

00:11:06,730 --> 00:11:10,990
configurations set especially for the

00:11:08,560 --> 00:11:13,740
core functionality unnecessarily drivers

00:11:10,990 --> 00:11:16,270
but for the core aspects of the kernel

00:11:13,740 --> 00:11:18,250
then it's not a useful place for kernel

00:11:16,270 --> 00:11:20,650
developers hardware partners software

00:11:18,250 --> 00:11:24,550
vendors and users to evaluate latest

00:11:20,650 --> 00:11:25,840
released kernel features do four PAP

00:11:24,550 --> 00:11:29,440
sets if they have completely different

00:11:25,840 --> 00:11:30,220
patch set supplied or one is not a

00:11:29,440 --> 00:11:32,650
subset of the other

00:11:30,220 --> 00:11:34,300
if the if the Fedora patch sets are not

00:11:32,650 --> 00:11:38,730
a subset of the kind of patches that are

00:11:34,300 --> 00:11:42,790
carried and rel the same situation but

00:11:38,730 --> 00:11:45,940
if we have consistent or plausibly

00:11:42,790 --> 00:11:48,520
consistent config options Packaging

00:11:45,940 --> 00:11:51,160
patch sets and so on then we do start to

00:11:48,520 --> 00:11:54,730
achieve those goals that we had that you

00:11:51,160 --> 00:11:58,780
saw earlier so and reddit really wants

00:11:54,730 --> 00:12:03,550
to be a significant participant in the

00:11:58,780 --> 00:12:04,810
Fedora kernel be able to show hey here's

00:12:03,550 --> 00:12:06,400
the here's the ways we want to use this

00:12:04,810 --> 00:12:07,780
here's how we can get other more people

00:12:06,400 --> 00:12:09,190
involved here's how we can get hardware

00:12:07,780 --> 00:12:12,160
partners involved in the Fedora kernel

00:12:09,190 --> 00:12:14,800
or or different different software

00:12:12,160 --> 00:12:17,320
vendors or expand the community along

00:12:14,800 --> 00:12:20,500
those axis we've been we've been focused

00:12:17,320 --> 00:12:22,090
on community participation in a certain

00:12:20,500 --> 00:12:24,070
way but this is a way to even bring more

00:12:22,090 --> 00:12:26,850
people in and be a significant

00:12:24,070 --> 00:12:26,850
participant here

00:12:28,610 --> 00:12:34,019
okay so we talked about how rail wants

00:12:32,699 --> 00:12:37,050
to be a participant in the Fedora kernel

00:12:34,019 --> 00:12:38,339
but sometimes when people hear this they

00:12:37,050 --> 00:12:40,380
think that means that Red Hat wants to

00:12:38,339 --> 00:12:43,529
come in take over the Fedora project and

00:12:40,380 --> 00:12:46,500
dictate stuff and this is not really

00:12:43,529 --> 00:12:48,180
true and I want to talk a little bit

00:12:46,500 --> 00:12:50,519
about the upstream kernel again just

00:12:48,180 --> 00:12:54,510
because if you've ever read a port for

00:12:50,519 --> 00:12:56,040
report from lwn or the Linux Foundation

00:12:54,510 --> 00:12:58,470
you'll see that the effect the matter is

00:12:56,040 --> 00:13:00,240
is that the majority of contributors to

00:12:58,470 --> 00:13:02,670
the upstream Linux kernel project are

00:13:00,240 --> 00:13:05,070
people who are working for companies so

00:13:02,670 --> 00:13:07,290
companies have put a lot of money behind

00:13:05,070 --> 00:13:10,019
engineers to actually get what they want

00:13:07,290 --> 00:13:13,230
and I would say I'm pointing this out

00:13:10,019 --> 00:13:17,399
just because the kernel project itself

00:13:13,230 --> 00:13:18,360
is still a community project even though

00:13:17,399 --> 00:13:20,610
you have people who working for

00:13:18,360 --> 00:13:22,079
engineers because ultimately the

00:13:20,610 --> 00:13:24,029
community trusts the individual

00:13:22,079 --> 00:13:25,410
engineers well you'll find this is that

00:13:24,029 --> 00:13:27,089
people in the kernel community may

00:13:25,410 --> 00:13:30,329
switch jobs gen from company to company

00:13:27,089 --> 00:13:32,730
and that trust goes with them and this

00:13:30,329 --> 00:13:34,709
works because the engineers know that

00:13:32,730 --> 00:13:36,810
other members of the kernel community

00:13:34,709 --> 00:13:38,160
are not going to be to take their

00:13:36,810 --> 00:13:40,560
patches or want to work with them if

00:13:38,160 --> 00:13:42,449
they're pushing crap so if you start

00:13:40,560 --> 00:13:44,220
trying to push say I need to get this in

00:13:42,449 --> 00:13:46,079
because my boss told me to that's not

00:13:44,220 --> 00:13:49,410
going to fly and you're going to lose

00:13:46,079 --> 00:13:51,360
that trust so I point this out to say

00:13:49,410 --> 00:13:53,310
that it's ultimately going to be in red

00:13:51,360 --> 00:13:55,410
hats hats best interest when they're you

00:13:53,310 --> 00:13:57,779
want to work with the Fedora community

00:13:55,410 --> 00:14:01,350
to do the same thing is that Red Hat

00:13:57,779 --> 00:14:02,970
needs to push ultimately push things

00:14:01,350 --> 00:14:04,040
that are good for the community if it

00:14:02,970 --> 00:14:06,329
wants to actually be successful

00:14:04,040 --> 00:14:11,750
otherwise nobody's actually going to

00:14:06,329 --> 00:14:14,940
want to do anything so yeah and again

00:14:11,750 --> 00:14:18,389
what we really want to see is that Red

00:14:14,940 --> 00:14:20,399
Hat making and proposing changes as part

00:14:18,389 --> 00:14:22,949
of the Fedora community I'd absolutely

00:14:20,399 --> 00:14:25,500
love to see more rail car engineers

00:14:22,949 --> 00:14:28,920
participating on the manless making

00:14:25,500 --> 00:14:30,959
changes on Bugzilla this happens on an

00:14:28,920 --> 00:14:33,329
infrequent basis I think I just saw a

00:14:30,959 --> 00:14:35,310
request from someone on Bugzilla just

00:14:33,329 --> 00:14:37,589
before I want to give this talk so it

00:14:35,310 --> 00:14:39,329
does happen but we'd like to see it be a

00:14:37,589 --> 00:14:41,370
bit more of a formal process and be even

00:14:39,329 --> 00:14:43,800
more involved and also continuing to

00:14:41,370 --> 00:14:46,829
give us some some feedback on how things

00:14:43,800 --> 00:14:50,010
work so again it's really being part of

00:14:46,829 --> 00:14:52,649
the community okay so we've talked about

00:14:50,010 --> 00:14:54,899
you know changes and maybe at an

00:14:52,649 --> 00:14:57,029
abstract level but there are some

00:14:54,899 --> 00:14:58,649
specific things we are looking to do at

00:14:57,029 --> 00:15:01,199
least is a first pass to try and

00:14:58,649 --> 00:15:04,079
actually hopefully make Fedora a little

00:15:01,199 --> 00:15:07,260
bit more useable to row a big one is

00:15:04,079 --> 00:15:10,470
kernel configuration so as Steph alluded

00:15:07,260 --> 00:15:13,230
to there's the fact that the Fedora

00:15:10,470 --> 00:15:15,149
kernel and Relkin kernels use different

00:15:13,230 --> 00:15:17,399
curl configurations means is that people

00:15:15,149 --> 00:15:19,380
have a hard time saying that testing on

00:15:17,399 --> 00:15:21,120
fedora will make any sense and so what

00:15:19,380 --> 00:15:25,350
we're looking to do is to hopefully

00:15:21,120 --> 00:15:26,519
align the core configuration options by

00:15:25,350 --> 00:15:28,290
core options I mean things that are

00:15:26,519 --> 00:15:32,130
fundamentally part the system as opposed

00:15:28,290 --> 00:15:35,029
to drivers Braille is never going to

00:15:32,130 --> 00:15:39,800
care about some drivers like say all the

00:15:35,029 --> 00:15:42,389
infinite number of arms 64 modules or

00:15:39,800 --> 00:15:43,980
LED drivers out there but to make sure

00:15:42,389 --> 00:15:45,600
core things that affect things like say

00:15:43,980 --> 00:15:47,160
the scheduler of power management are

00:15:45,600 --> 00:15:48,300
aligned that can help people give

00:15:47,160 --> 00:15:50,579
confidence to know that if they're

00:15:48,300 --> 00:15:54,180
testing on fedora it's probably going to

00:15:50,579 --> 00:15:57,540
be this give similar results as if it

00:15:54,180 --> 00:16:00,029
were testing on roll another one is

00:15:57,540 --> 00:16:01,439
packaging so this is one that people

00:16:00,029 --> 00:16:04,319
don't always think about in terms of

00:16:01,439 --> 00:16:07,380
actually being part of it but it turns

00:16:04,319 --> 00:16:09,750
out that a lot of this some of the

00:16:07,380 --> 00:16:11,880
features we do actually deliver for the

00:16:09,750 --> 00:16:14,339
kernel have a lot to do with packaging a

00:16:11,880 --> 00:16:16,790
good example is a secure boot currently

00:16:14,339 --> 00:16:20,339
the secure boot signing happens is

00:16:16,790 --> 00:16:21,990
specified in the spec file so if that's

00:16:20,339 --> 00:16:24,389
specified incorrectly or different

00:16:21,990 --> 00:16:26,040
between fedora and rail that's another

00:16:24,389 --> 00:16:28,889
area of difference where you can't

00:16:26,040 --> 00:16:31,649
actually validate that now yet another

00:16:28,889 --> 00:16:33,510
example is third-party modules again

00:16:31,649 --> 00:16:35,699
that requires changes to the devel and

00:16:33,510 --> 00:16:38,410
that'll happen to the spec so again it's

00:16:35,699 --> 00:16:41,470
just more places that things can differ

00:16:38,410 --> 00:16:45,310
okay so carried patches is another one

00:16:41,470 --> 00:16:47,470
that's interesting well I mentioned that

00:16:45,310 --> 00:16:49,750
Fedora tries to take the upstream kernel

00:16:47,470 --> 00:16:51,310
we do end up carrying some subset of

00:16:49,750 --> 00:16:53,079
patches that are not yet applied to the

00:16:51,310 --> 00:16:56,019
upstream kernel we try and keep this

00:16:53,079 --> 00:16:59,410
number as small as possible but what we

00:16:56,019 --> 00:17:00,790
end up having is is either very small

00:16:59,410 --> 00:17:04,120
fix up patches that have been there

00:17:00,790 --> 00:17:06,130
forever or sometimes longer live

00:17:04,120 --> 00:17:08,169
features a good example for this here is

00:17:06,130 --> 00:17:09,819
secure boot secure boot is a feature

00:17:08,169 --> 00:17:11,770
we've been working for a very long time

00:17:09,819 --> 00:17:14,740
to try and get accepted upstream it's

00:17:11,770 --> 00:17:17,679
you know making slow progress but as a

00:17:14,740 --> 00:17:19,419
result both Fedor and rel have to have

00:17:17,679 --> 00:17:21,640
to carry some sort of patch to be able

00:17:19,419 --> 00:17:23,890
to do this be able to be able to support

00:17:21,640 --> 00:17:25,689
the secure boot feature and again if

00:17:23,890 --> 00:17:27,039
you're not carrying the same patch the

00:17:25,689 --> 00:17:28,419
fact that you validate is secure but on

00:17:27,039 --> 00:17:30,940
Fedora means you don't actually don't

00:17:28,419 --> 00:17:33,880
feel that will validate things on rel

00:17:30,940 --> 00:17:35,679
and again it's the two will never

00:17:33,880 --> 00:17:37,510
actually be able to carry the same set

00:17:35,679 --> 00:17:39,970
of patches but the focus is to be able

00:17:37,510 --> 00:17:42,130
to make the DIF measurable and small

00:17:39,970 --> 00:17:43,659
enough that we'll be able to give people

00:17:42,130 --> 00:17:47,500
more confidence to know exactly what

00:17:43,659 --> 00:17:51,210
they're testing it really ultimately the

00:17:47,500 --> 00:17:55,350
goal is to make both fedora and rel

00:17:51,210 --> 00:17:59,590
better and I do think that by trying to

00:17:55,350 --> 00:18:03,070
get rel more involved it will provide a

00:17:59,590 --> 00:18:04,870
net positive benefit for fedora one

00:18:03,070 --> 00:18:07,090
thing at least I'd like to see is to try

00:18:04,870 --> 00:18:10,150
and get more lol developers interested

00:18:07,090 --> 00:18:11,710
in fedora directly so currently the flow

00:18:10,150 --> 00:18:13,539
ends up being right now is that someone

00:18:11,710 --> 00:18:15,549
reports a bug to the Fedora kernel

00:18:13,539 --> 00:18:17,860
maintainer x' and one of us takes a look

00:18:15,549 --> 00:18:19,780
and usually it ends up we go and look

00:18:17,860 --> 00:18:21,880
upstream see if someone's reported if

00:18:19,780 --> 00:18:24,400
not we end up having to go try and

00:18:21,880 --> 00:18:26,370
report the bug upstream and this is

00:18:24,400 --> 00:18:29,049
sometimes kind of a slow process and

00:18:26,370 --> 00:18:30,940
instead what we're hoping is that if

00:18:29,049 --> 00:18:32,380
more rel developers are testing they

00:18:30,940 --> 00:18:34,059
will hopefully find the bug themselves

00:18:32,380 --> 00:18:36,610
report it and then just tell us to say

00:18:34,059 --> 00:18:37,720
hey pick up this patch because when

00:18:36,610 --> 00:18:40,240
people tell us to pick up patches

00:18:37,720 --> 00:18:43,690
because fix a bug that makes our life a

00:18:40,240 --> 00:18:45,520
lot easier it's much smoother so the and

00:18:43,690 --> 00:18:48,210
there are old only three full-time

00:18:45,520 --> 00:18:51,119
Fedora kernel developers

00:18:48,210 --> 00:18:53,369
so getting more people to be up to look

00:18:51,119 --> 00:18:54,570
at bugs and do that again just make

00:18:53,369 --> 00:18:58,049
things make our lives a little bit

00:18:54,570 --> 00:19:01,019
easier we're also looking to get broader

00:18:58,049 --> 00:19:03,240
validation so justin has done a

00:19:01,019 --> 00:19:06,210
fantastic job with the existing kernel

00:19:03,240 --> 00:19:09,179
tests he gets a lot of credit from me

00:19:06,210 --> 00:19:11,909
and everyone for being able to support

00:19:09,179 --> 00:19:17,340
that but he you know hits a certain kind

00:19:11,909 --> 00:19:20,879
of testing but but there's other more

00:19:17,340 --> 00:19:22,769
focused testing that the rel side is

00:19:20,879 --> 00:19:25,049
interested in so again the whole the

00:19:22,769 --> 00:19:27,299
goal is to find a different set of bugs

00:19:25,049 --> 00:19:28,980
that might affect people and get those

00:19:27,299 --> 00:19:30,539
validated from the rel side that we

00:19:28,980 --> 00:19:32,240
might have not been able to cotton to

00:19:30,539 --> 00:19:36,629
catch so hopefully everyone else then

00:19:32,240 --> 00:19:38,970
has fewer bugs okay so I want to talk

00:19:36,629 --> 00:19:43,279
about what I think is a good example of

00:19:38,970 --> 00:19:45,600
something we might try and fix atomic so

00:19:43,279 --> 00:19:47,490
it seems like every couple of months I

00:19:45,600 --> 00:19:49,409
get a message from dusty saying hey

00:19:47,490 --> 00:19:51,090
atomic is broken and we think it's

00:19:49,409 --> 00:19:53,909
caused by something in the kernel and

00:19:51,090 --> 00:19:54,960
usually when he does this he's correct

00:19:53,909 --> 00:19:57,679
and it's because there's something

00:19:54,960 --> 00:19:59,519
pretty pretty fundamentally broken in

00:19:57,679 --> 00:20:00,960
somewhere in the stack that's broken

00:19:59,519 --> 00:20:03,179
container ISM we've had container

00:20:00,960 --> 00:20:05,460
networking break broken somewhere times

00:20:03,179 --> 00:20:07,799
virtualization the point is is that

00:20:05,460 --> 00:20:09,539
these are pretty core issues and then

00:20:07,799 --> 00:20:10,679
what ends up happening is this again we

00:20:09,539 --> 00:20:12,960
have to go through a cycle of trying to

00:20:10,679 --> 00:20:14,909
report to upstream get them to actually

00:20:12,960 --> 00:20:16,649
notice the bug sometimes eventually get

00:20:14,909 --> 00:20:19,200
them to fix the bugs and back port and

00:20:16,649 --> 00:20:21,749
this is a pretty long process and it

00:20:19,200 --> 00:20:23,419
ultimately means that the atomic project

00:20:21,749 --> 00:20:26,129
just now having to deal with this entire

00:20:23,419 --> 00:20:27,840
bug while this and debugging accessory

00:20:26,129 --> 00:20:31,700
is going on and it's really hard to make

00:20:27,840 --> 00:20:33,899
this go faster the way things are now so

00:20:31,700 --> 00:20:36,330
part of the goal here would be is that

00:20:33,899 --> 00:20:38,039
if rel developers are actively more

00:20:36,330 --> 00:20:42,559
interested in using this they would find

00:20:38,039 --> 00:20:45,269
the bug sooner to hopefully be able to

00:20:42,559 --> 00:20:47,549
identify and even fix either themselves

00:20:45,269 --> 00:20:49,919
or reporting to upstream to get the bug

00:20:47,549 --> 00:20:51,659
faster and they also have a motivation

00:20:49,919 --> 00:20:54,899
because um you know we talk about atomic

00:20:51,659 --> 00:20:56,669
as being a Fedora project but again Red

00:20:54,899 --> 00:20:59,429
Hat is also interested in a long term as

00:20:56,669 --> 00:21:01,330
well so the rel developers have an

00:20:59,429 --> 00:21:02,830
incentive to try and

00:21:01,330 --> 00:21:03,999
fix things now because they know they

00:21:02,830 --> 00:21:07,960
will eventually have to deal with it

00:21:03,999 --> 00:21:09,340
later alright and so this is a summary

00:21:07,960 --> 00:21:13,090
about hopefully you got what we talked

00:21:09,340 --> 00:21:15,700
about today the rel and Fedora kernels

00:21:13,090 --> 00:21:17,110
have very different bases and this means

00:21:15,700 --> 00:21:19,179
that the two don't really get a lot of

00:21:17,110 --> 00:21:20,799
test fit or doesn't really get a lot of

00:21:19,179 --> 00:21:23,440
testing from the rail side of things and

00:21:20,799 --> 00:21:27,340
it kind of exists as its separate entity

00:21:23,440 --> 00:21:30,850
and what we want to see is that rail is

00:21:27,340 --> 00:21:33,759
a place to incubate the latest features

00:21:30,850 --> 00:21:35,889
and what we really want to see is that

00:21:33,759 --> 00:21:39,249
even more Fedora developers and

00:21:35,889 --> 00:21:41,320
contributors are available and using and

00:21:39,249 --> 00:21:44,379
I think at least for our first steps

00:21:41,320 --> 00:21:48,210
what we're looking to do is try and sync

00:21:44,379 --> 00:21:51,159
up on kernel configs packaging and

00:21:48,210 --> 00:21:54,429
carried patches and hopefully get more

00:21:51,159 --> 00:21:56,919
rel developers participating ok

00:21:54,429 --> 00:21:58,899
so spend a lot of time talking about

00:21:56,919 --> 00:22:00,580
what we want to see but you know we do

00:21:58,899 --> 00:22:03,639
also want your feedback here about

00:22:00,580 --> 00:22:05,859
things you want to see is that you know

00:22:03,639 --> 00:22:08,259
if more rel developers we're to be

00:22:05,859 --> 00:22:15,039
involved what kind of things community

00:22:08,259 --> 00:22:16,869
would want to see so I think yeah ok so

00:22:15,039 --> 00:22:19,149
the things that were raised how do we

00:22:16,869 --> 00:22:20,499
implement those are there any gaps are

00:22:19,149 --> 00:22:22,570
there things that you think are missing

00:22:20,499 --> 00:22:25,149
here that we needed that we need to do

00:22:22,570 --> 00:22:27,009
and our encouraged this is a discussion

00:22:25,149 --> 00:22:28,570
if you have more than a question you

00:22:27,009 --> 00:22:30,940
want to participate come up you're

00:22:28,570 --> 00:22:34,389
talking to the mic will work or work

00:22:30,940 --> 00:22:37,649
this out together I will talk into the

00:22:34,389 --> 00:22:37,649
mic a good stuff

00:22:38,030 --> 00:22:41,920
yeah then we'll repeat the question

00:22:52,960 --> 00:22:57,400
instead of like carrying your own

00:22:54,940 --> 00:22:59,389
consciousness like sentimental reporting

00:22:57,400 --> 00:23:02,079
confession

00:22:59,389 --> 00:23:02,079
they just keep you

00:23:03,899 --> 00:23:08,579
the question was about the Linux stable

00:23:06,659 --> 00:23:10,379
branch so that's a good question and

00:23:08,579 --> 00:23:12,749
something we've thought about before the

00:23:10,379 --> 00:23:15,059
real problem is is that when the long

00:23:12,749 --> 00:23:18,329
term Linux stable branches are released

00:23:15,059 --> 00:23:23,309
does it not actually correspond well to

00:23:18,329 --> 00:23:24,659
a Fedora release cycle so trying to sync

00:23:23,309 --> 00:23:26,369
those two up hasn't really worked in the

00:23:24,659 --> 00:23:30,089
past so we've discovered it just turns

00:23:26,369 --> 00:23:31,229
out to be easier to go on to the latest

00:23:30,089 --> 00:23:32,639
version but that's something we've

00:23:31,229 --> 00:23:42,659
considered in the past and I think if

00:23:32,639 --> 00:23:44,489
they were more well aligned yeah Justin

00:23:42,659 --> 00:23:47,459
I think you're not really being recorded

00:23:44,489 --> 00:23:48,599
you come up and be part of this for

00:23:47,459 --> 00:23:50,429
those who don't know this is just in

00:23:48,599 --> 00:23:56,159
Forbes he's one of the other kernel

00:23:50,429 --> 00:23:58,949
maintainer x' and so the the long-term

00:23:56,159 --> 00:24:00,709
releases have been used before and once

00:23:58,949 --> 00:24:06,079
we have an issue now like I just did the

00:24:00,709 --> 00:24:09,690
4.17 dot 12 kernel a little while ago

00:24:06,079 --> 00:24:11,909
Friday I think and it's got 18 karma on

00:24:09,690 --> 00:24:14,399
Fedora 28 because people are testing and

00:24:11,909 --> 00:24:17,819
saying yes it's great it's got to karma

00:24:14,399 --> 00:24:19,529
on Fedora 27 so what happens is it gets

00:24:17,819 --> 00:24:22,440
very difficult to push and it gets very

00:24:19,529 --> 00:24:23,729
difficult to push REE basis particularly

00:24:22,440 --> 00:24:25,349
as you get close to the end of the

00:24:23,729 --> 00:24:26,279
lifecycle on our product and there have

00:24:25,349 --> 00:24:29,190
been times where we've said all right

00:24:26,279 --> 00:24:30,839
well since it's currently on a long-term

00:24:29,190 --> 00:24:32,879
stable we're just going to leave it

00:24:30,839 --> 00:24:34,169
there because there's not a point in

00:24:32,879 --> 00:24:37,399
pushing a rebase when there's three

00:24:34,169 --> 00:24:40,529
months left and nobody seems to care

00:24:37,399 --> 00:24:43,859
there's there's two problems that we've

00:24:40,529 --> 00:24:45,419
run into that with that and that is you

00:24:43,859 --> 00:24:46,919
know sometimes we need to respond to

00:24:45,419 --> 00:24:50,219
things quicker than they go into the

00:24:46,919 --> 00:24:51,749
long-term stable upstream so we ended up

00:24:50,219 --> 00:24:56,279
having to do back porting and that's

00:24:51,749 --> 00:24:57,719
more work and the other one is people do

00:24:56,279 --> 00:25:01,259
seem to actually want features going

00:24:57,719 --> 00:25:03,149
forward so from a fedora 28 standpoint

00:25:01,259 --> 00:25:05,339
people would be fairly annoyed if we're

00:25:03,149 --> 00:25:08,200
not releasing new kernels and not

00:25:05,339 --> 00:25:10,749
rebasing as they come across

00:25:08,200 --> 00:25:12,519
from a 20-7 standpoint those the people

00:25:10,749 --> 00:25:13,989
that don't care right that they're

00:25:12,519 --> 00:25:15,700
they're happy that it

00:25:13,989 --> 00:25:17,799
they're running something that's working

00:25:15,700 --> 00:25:20,350
and they don't necessarily care about

00:25:17,799 --> 00:25:21,249
the rebase but then you've got two

00:25:20,350 --> 00:25:24,159
different kernels you're maintaining

00:25:21,249 --> 00:25:27,970
right and two to the elephant in the

00:25:24,159 --> 00:25:30,669
room it we need to walk a tightrope

00:25:27,970 --> 00:25:33,789
between keeping Fedora stable enough or

00:25:30,669 --> 00:25:35,799
usage but also having evaluating the new

00:25:33,789 --> 00:25:38,289
features as they come out and so that

00:25:35,799 --> 00:25:40,690
people can debug tests against them fix

00:25:38,289 --> 00:25:43,419
them can work on them so that's an

00:25:40,690 --> 00:25:45,999
interesting balance and in many cases it

00:25:43,419 --> 00:25:50,220
feels like the stable branches are too

00:25:45,999 --> 00:25:50,220
stable too slow for that second part

00:26:03,389 --> 00:26:06,629
second question

00:26:16,410 --> 00:26:23,890
yes yes the question is is that what's

00:26:21,580 --> 00:26:26,950
the policy about kernels do you have

00:26:23,890 --> 00:26:29,320
multiple kernels for multiple targets a

00:26:26,950 --> 00:26:30,910
kernel server kernel cloud and the short

00:26:29,320 --> 00:26:35,140
answer is that right now we have had we

00:26:30,910 --> 00:26:37,690
have a one kernel policy for fedora

00:26:35,140 --> 00:26:39,430
mostly because again there's only three

00:26:37,690 --> 00:26:42,610
of us and it takes a lot of work to

00:26:39,430 --> 00:26:44,860
maintain multiple ones and rel has a

00:26:42,610 --> 00:26:46,570
single kernel policy although they may

00:26:44,860 --> 00:26:48,070
do some other stuff but I don't know

00:26:46,570 --> 00:26:50,310
about that I'm not able to speak about

00:26:48,070 --> 00:26:53,140
that in detail but as far as Fedora goes

00:26:50,310 --> 00:26:54,970
we've sometimes thrown out the idea

00:26:53,140 --> 00:26:57,280
about having multiple kernels but it's

00:26:54,970 --> 00:26:59,470
never really gone anywhere on the other

00:26:57,280 --> 00:27:01,060
hand there are things like app stream or

00:26:59,470 --> 00:27:04,300
stream branches now which is you know a

00:27:01,060 --> 00:27:05,740
generic Fedora feature so we haven't

00:27:04,300 --> 00:27:07,540
really looked at that from the kernel

00:27:05,740 --> 00:27:10,180
side whether using something like that

00:27:07,540 --> 00:27:13,750
might make sense it certainly and I

00:27:10,180 --> 00:27:15,490
would say it's become more plausible as

00:27:13,750 --> 00:27:18,520
time has gone on for us to consider

00:27:15,490 --> 00:27:22,230
doing multiple kernels but at this point

00:27:18,520 --> 00:27:22,230
in time we have a single kernel policy

00:27:23,400 --> 00:27:28,180
one other thing to consider with the

00:27:26,020 --> 00:27:29,800
configs and though what the options and

00:27:28,180 --> 00:27:32,710
one thing that I would like to see come

00:27:29,800 --> 00:27:34,060
out of this integration is you know as

00:27:32,710 --> 00:27:36,100
Laura said there's there's three of us

00:27:34,060 --> 00:27:38,280
right now in the Fedora kernel team at

00:27:36,100 --> 00:27:41,590
times there have been only two of us and

00:27:38,280 --> 00:27:44,800
we're basically journalists right so

00:27:41,590 --> 00:27:47,350
when a new kernel comes out and you go

00:27:44,800 --> 00:27:50,020
through the merge window you have dozens

00:27:47,350 --> 00:27:52,360
of new config options and we look at

00:27:50,020 --> 00:27:53,920
them and we make a best guess I mean

00:27:52,360 --> 00:27:56,260
we've we've got some experience doing

00:27:53,920 --> 00:28:02,650
this so we can usually pick the option

00:27:56,260 --> 00:28:05,620
that is good or safe but rel has several

00:28:02,650 --> 00:28:08,080
kernel into orders of magnitude kernel

00:28:05,620 --> 00:28:10,000
engineers more than we have and it has

00:28:08,080 --> 00:28:12,670
specialists in every single area of the

00:28:10,000 --> 00:28:14,200
kernel so we might make a best guess

00:28:12,670 --> 00:28:16,270
effort and we push that out there and

00:28:14,200 --> 00:28:18,700
rawhide but if we get feedback from the

00:28:16,270 --> 00:28:20,560
rel developers saying hey actually if

00:28:18,700 --> 00:28:23,890
you change this config option to this

00:28:20,560 --> 00:28:27,120
it's better for this reason fedora

00:28:23,890 --> 00:28:27,120
benefits hugely from that

00:28:28,809 --> 00:28:39,070
any other thoughts or questions yep

00:28:42,799 --> 00:28:49,549
the question is do we have a kernel

00:28:44,059 --> 00:28:50,629
stick in fedora no we don't I would

00:28:49,549 --> 00:28:52,070
probably say is that if your incident

00:28:50,629 --> 00:28:55,899
being more involved you're welcome to

00:28:52,070 --> 00:28:58,849
post on the mailing list or you know

00:28:55,899 --> 00:29:04,039
talk to one of us um I think cigs tend

00:28:58,849 --> 00:29:06,259
to be more for more for items that are

00:29:04,039 --> 00:29:07,549
across the entire distribution as

00:29:06,259 --> 00:29:11,029
opposed to a single package like the

00:29:07,549 --> 00:29:13,309
kernel so but but we will always welcome

00:29:11,029 --> 00:29:18,139
more interval more involvement we've

00:29:13,309 --> 00:29:21,700
tried to do our best to do this so not

00:29:18,139 --> 00:29:21,700
not really um no

00:29:28,400 --> 00:29:31,919
yeah so the suggestion was to have

00:29:30,600 --> 00:29:35,120
meetings um that's a great suggestion

00:29:31,919 --> 00:29:35,120
when we'll certainly think about that

00:29:51,310 --> 00:30:07,180
so that would be awesome if it worked

00:29:55,750 --> 00:30:08,800
out so I always think so we're having

00:30:07,180 --> 00:30:10,030
okay I just kind of cut you off a little

00:30:08,800 --> 00:30:11,410
bit Paul so we're having a lot of

00:30:10,030 --> 00:30:12,760
discussion that's not being recorded and

00:30:11,410 --> 00:30:13,870
this is all very good and I'm actually

00:30:12,760 --> 00:30:15,280
going to propose this is something

00:30:13,870 --> 00:30:17,380
that's probably better off to handle

00:30:15,280 --> 00:30:19,620
afterwards and off camera

00:30:17,380 --> 00:30:22,450
so are there any further questions oh

00:30:19,620 --> 00:30:24,160
okay I just like to just double down on

00:30:22,450 --> 00:30:25,930
that is like part of the intent here is

00:30:24,160 --> 00:30:27,760
to get more people involved in the

00:30:25,930 --> 00:30:30,370
Fedora kernel and set things up for that

00:30:27,760 --> 00:30:31,810
so yeah I agree that it didn't work out

00:30:30,370 --> 00:30:33,070
before but we should imagine that it's

00:30:31,810 --> 00:30:35,110
gonna be different going home yes

00:30:33,070 --> 00:30:36,250
absolutely and I would say certainly is

00:30:35,110 --> 00:30:38,530
that it seemed like there were a lot of

00:30:36,250 --> 00:30:40,600
if there were a reason to start forming

00:30:38,530 --> 00:30:42,400
a sick or having regular Karl meetings I

00:30:40,600 --> 00:30:43,900
would absolutely be all for it I would

00:30:42,400 --> 00:30:45,460
be thrilled to discuss you know kernel

00:30:43,900 --> 00:30:47,140
development you know once or twice a

00:30:45,460 --> 00:30:51,660
week or month or however often people

00:30:47,140 --> 00:30:51,660
want so yes

00:31:01,230 --> 00:31:03,320
Oh

00:31:18,950 --> 00:31:24,450
right so the the question was about

00:31:21,710 --> 00:31:26,130
maybe concerns about dropping partially

00:31:24,450 --> 00:31:28,380
supported drivers because Red Hat wasn't

00:31:26,130 --> 00:31:29,880
interested them and yes I agree that

00:31:28,380 --> 00:31:30,960
it's absolutely a concern and that was

00:31:29,880 --> 00:31:33,510
you know part of the point of this talk

00:31:30,960 --> 00:31:34,950
was to talk about we want rel to

00:31:33,510 --> 00:31:36,720
participate as members of the community

00:31:34,950 --> 00:31:38,730
and just for the record low maintainer

00:31:36,720 --> 00:31:40,650
ultimately we are responsible and held

00:31:38,730 --> 00:31:42,419
accountable by the fedora fedora

00:31:40,650 --> 00:31:43,890
community which means you know we are

00:31:42,419 --> 00:31:45,900
thinking about what the Fedora kernel

00:31:43,890 --> 00:31:48,090
what the Fedora community wants which

00:31:45,900 --> 00:31:50,070
may not be exactly what the rel

00:31:48,090 --> 00:31:51,600
community wants and there's been a kind

00:31:50,070 --> 00:31:53,220
of question about come up about okay

00:31:51,600 --> 00:31:54,750
what happens if two comes in conflict

00:31:53,220 --> 00:31:57,210
and I think the answer is is that if

00:31:54,750 --> 00:31:58,770
there's any other conflict in the Fedora

00:31:57,210 --> 00:32:00,659
community there's the fest code there's

00:31:58,770 --> 00:32:03,299
the fedora council and I would expect

00:32:00,659 --> 00:32:05,520
them to make the decision that is

00:32:03,299 --> 00:32:07,200
ultimately best for fedora and if

00:32:05,520 --> 00:32:08,730
something were to get escalated and they

00:32:07,200 --> 00:32:10,679
would tell you no fedora Karla

00:32:08,730 --> 00:32:12,120
maintained errs you made this change you

00:32:10,679 --> 00:32:13,860
made an incorrect decision you need to

00:32:12,120 --> 00:32:14,940
do something differently we would

00:32:13,860 --> 00:32:19,100
absolutely have to go with that because

00:32:14,940 --> 00:32:19,100
that's how the community wants so

00:32:20,429 --> 00:32:40,990
yes so one of the cases that I brought

00:32:39,850 --> 00:32:42,789
when we were discussing some of this

00:32:40,990 --> 00:32:44,620
before when you might have a conflict is

00:32:42,789 --> 00:32:46,929
there are areas because Fodor gets a lot

00:32:44,620 --> 00:32:50,200
more laptop use then say rel does so

00:32:46,929 --> 00:32:53,710
there are areas where if a config option

00:32:50,200 --> 00:32:55,690
has two choices and one of them excuse

00:32:53,710 --> 00:32:57,669
me one of them is is going to yield

00:32:55,690 --> 00:32:59,799
higher performance and one of them is

00:32:57,669 --> 00:33:01,840
going to yield better power usage

00:32:59,799 --> 00:33:04,720
sometimes Fedora is going to opt for the

00:33:01,840 --> 00:33:08,230
power usage right and and so I think the

00:33:04,720 --> 00:33:11,350
idea is we converge where we can and

00:33:08,230 --> 00:33:13,030
where we can't hopefully doesn't run

00:33:11,350 --> 00:33:14,710
time configurable right because Fedora

00:33:13,030 --> 00:33:16,659
server users also probably want the

00:33:14,710 --> 00:33:18,370
power side of it so you know hopefully

00:33:16,659 --> 00:33:20,409
their runtime configurable and if

00:33:18,370 --> 00:33:22,870
they're not then maybe we should look at

00:33:20,409 --> 00:33:24,220
trying to make them so but I think that

00:33:22,870 --> 00:33:27,190
the Fedora kernel should always be a

00:33:24,220 --> 00:33:28,750
superset of because rel is not going to

00:33:27,190 --> 00:33:30,100
ship anything enabled that they they're

00:33:28,750 --> 00:33:31,929
not going to support right they've got

00:33:30,100 --> 00:33:33,820
contracts and SLA s and all of those

00:33:31,929 --> 00:33:35,919
things around that so they're not going

00:33:33,820 --> 00:33:37,510
to turn on a bunch of drivers that

00:33:35,919 --> 00:33:39,820
nobody has an interest in because then

00:33:37,510 --> 00:33:43,059
they have a legal obligation to support

00:33:39,820 --> 00:33:44,710
those we don't have that and so we

00:33:43,059 --> 00:33:47,140
should always be a superset as far as

00:33:44,710 --> 00:33:50,200
those drivers and things go but for the

00:33:47,140 --> 00:33:51,850
core config did they've got a lot more

00:33:50,200 --> 00:33:53,950
testing they've got a lot more hardware

00:33:51,850 --> 00:33:56,970
there's a lot that we can leverage there

00:33:53,950 --> 00:33:56,970
that just makes Fedora better

00:34:22,340 --> 00:34:27,300
so the question was about if there's a

00:34:24,660 --> 00:34:30,780
supported versus unsupported flag and I

00:34:27,300 --> 00:34:33,120
don't believe we are carrying a patch in

00:34:30,780 --> 00:34:35,550
fedora I believe there might be a

00:34:33,120 --> 00:34:36,870
similar patch in RAL but that's actually

00:34:35,550 --> 00:34:39,060
a good example of another feature you

00:34:36,870 --> 00:34:41,010
know we need to possibly look at

00:34:39,060 --> 00:34:43,500
aligning just because they're oftentimes

00:34:41,010 --> 00:34:45,210
little tweaks like that that the rel has

00:34:43,500 --> 00:34:47,250
that Fedora might actually want for one

00:34:45,210 --> 00:34:48,930
reason or another but we have them so

00:34:47,250 --> 00:34:51,570
that's an example of one of the

00:34:48,930 --> 00:35:03,120
packaging changes that could help the

00:34:51,570 --> 00:35:06,120
two sync up we're gonna do our best

00:35:03,120 --> 00:35:09,330
efforts to try to support anything that

00:35:06,120 --> 00:35:10,680
we're shipping turned on but we're not

00:35:09,330 --> 00:35:12,060
going to we know we don't have the

00:35:10,680 --> 00:35:13,530
resources to go and fix it all either

00:35:12,060 --> 00:35:15,810
that's the same type of thing you're

00:35:13,530 --> 00:35:18,450
seeing right now with I 686 right we're

00:35:15,810 --> 00:35:20,490
not shutting it off as long as people

00:35:18,450 --> 00:35:22,500
won't do the work but we can't do the

00:35:20,490 --> 00:35:23,700
work on it either you know if it gets to

00:35:22,500 --> 00:35:25,200
a point where the community can't do the

00:35:23,700 --> 00:35:27,270
work and it's not a supportable thing

00:35:25,200 --> 00:35:29,630
anymore then then it has to get shut off

00:35:27,270 --> 00:35:29,630
but

00:35:40,190 --> 00:35:44,730
sure I've looked at I looked at that

00:35:43,200 --> 00:35:49,290
before when I first joined the team and

00:35:44,730 --> 00:35:51,450
there's a kind of a long tail of minor

00:35:49,290 --> 00:35:53,160
tweaks and patches we've been carrying a

00:35:51,450 --> 00:35:54,869
good example of something like to not

00:35:53,160 --> 00:35:57,690
automatically load the floppy driver and

00:35:54,869 --> 00:35:59,670
maybe a bunch of other minor fix ups I

00:35:57,690 --> 00:36:01,800
think the real thing is that it's not

00:35:59,670 --> 00:36:04,650
actually that much of a problem to be

00:36:01,800 --> 00:36:06,540
carrying patches if they're not actually

00:36:04,650 --> 00:36:08,400
causing us any problems and the point is

00:36:06,540 --> 00:36:10,920
is to make the diff as small as possible

00:36:08,400 --> 00:36:15,300
so it's mostly little weird quirks like

00:36:10,920 --> 00:36:16,500
that we occasionally carry patches big

00:36:15,300 --> 00:36:17,940
features for the long term that are

00:36:16,500 --> 00:36:19,530
still making their way upstream I

00:36:17,940 --> 00:36:22,530
mentioned secure boot another good

00:36:19,530 --> 00:36:25,859
example was Yui UAF ice of ACP ie

00:36:22,530 --> 00:36:27,900
support for arm 64 that was one that

00:36:25,859 --> 00:36:30,440
took a very long time to get in and we

00:36:27,900 --> 00:36:33,000
were carrying that for a very long time

00:36:30,440 --> 00:36:34,470
but more common than patches were

00:36:33,000 --> 00:36:36,510
carrying long term our patches we carry

00:36:34,470 --> 00:36:38,339
for a single kernel version because they

00:36:36,510 --> 00:36:41,270
haven't quite made their way in yet so

00:36:38,339 --> 00:36:43,619
we it's much more common to see patches

00:36:41,270 --> 00:36:49,080
come in for kernel cycle then drop out

00:36:43,619 --> 00:36:52,310
later when they actually show up so yeah

00:36:49,080 --> 00:36:52,310
we silence were a lot of warnings

00:36:53,710 --> 00:37:02,200
but just there's there's no actual body

00:36:57,320 --> 00:37:02,200
to or for users so there's a

00:37:03,240 --> 00:37:08,610
and if you make sense of star horsemen

00:37:05,760 --> 00:37:13,620
before stay home

00:37:08,610 --> 00:37:16,860
I mean we've tried to do that where we

00:37:13,620 --> 00:37:18,840
can I have a lot of opinions on secure

00:37:16,860 --> 00:37:21,720
boot which you know are probably best

00:37:18,840 --> 00:37:22,770
discussed at the pub and we have

00:37:21,720 --> 00:37:24,450
actually you know had this conversation

00:37:22,770 --> 00:37:26,370
with people before we have said no to

00:37:24,450 --> 00:37:28,950
people when they asked us if we could

00:37:26,370 --> 00:37:31,500
carry carry something when it wasn't yet

00:37:28,950 --> 00:37:32,850
upstream I think general our preferences

00:37:31,500 --> 00:37:34,830
is that if it seems like it stands a

00:37:32,850 --> 00:37:37,230
good chance of being accepted we will

00:37:34,830 --> 00:37:39,510
take it into the kernel but we don't

00:37:37,230 --> 00:37:42,570
want to be carrying experimental patches

00:37:39,510 --> 00:37:44,520
that are will take a long time to go

00:37:42,570 --> 00:37:46,710
through multiple reviews and have no

00:37:44,520 --> 00:37:47,940
chance of actually getting in so the

00:37:46,710 --> 00:37:49,020
course the closer they are to getting

00:37:47,940 --> 00:37:50,730
into more like we are to take them

00:37:49,020 --> 00:38:11,240
especially if they're adding like a user

00:37:50,730 --> 00:38:11,240
ABI or things like that yeah yeah

00:38:23,950 --> 00:38:27,410
yeah

00:38:25,820 --> 00:38:37,520
any other questions sir were you gonna

00:38:27,410 --> 00:38:39,440
say something so the question of us

00:38:37,520 --> 00:38:41,600
about the the floppy driver I think it's

00:38:39,440 --> 00:38:43,640
honestly just from a lot of legacy

00:38:41,600 --> 00:38:45,080
things is that once upon a time how you

00:38:43,640 --> 00:38:46,190
booted Linux cheese you probably know

00:38:45,080 --> 00:38:47,990
more than anything was you're stuck in a

00:38:46,190 --> 00:38:52,250
floppy and that's how it got up there

00:38:47,990 --> 00:38:54,080
and I think a lot of distro song or no

00:38:52,250 --> 00:38:58,400
one has really saw a reason you know not

00:38:54,080 --> 00:39:06,050
to change that so versus fedora so ok

00:38:58,400 --> 00:39:07,340
yep good question the biggest pain

00:39:06,050 --> 00:39:09,860
points between the core config

00:39:07,340 --> 00:39:11,660
differences this isn't this is actually

00:39:09,860 --> 00:39:15,170
something we're going to work on

00:39:11,660 --> 00:39:16,970
probably in the coming months um I don't

00:39:15,170 --> 00:39:18,920
actually know I can speculate I would I

00:39:16,970 --> 00:39:21,619
would honestly this is suspect it's

00:39:18,920 --> 00:39:24,080
going to be in options that are you know

00:39:21,619 --> 00:39:25,550
is just a little too or likely to give

00:39:24,080 --> 00:39:27,440
rel better performance versus what

00:39:25,550 --> 00:39:29,090
Fedora chose where Fedora probably made

00:39:27,440 --> 00:39:30,710
a best educated guess to get something

00:39:29,090 --> 00:39:33,109
that does that certainly works but may

00:39:30,710 --> 00:39:35,330
not be optimized so I can't give a great

00:39:33,109 --> 00:39:37,310
answer but you know keep an eye out for

00:39:35,330 --> 00:39:38,690
for the kernel listen you know usual

00:39:37,310 --> 00:39:40,990
blogs and stuff as we find interesting

00:39:38,690 --> 00:39:40,990
things

00:39:45,510 --> 00:39:49,730
[Music]

00:39:46,810 --> 00:39:51,280
actually supports it went to Robert

00:39:49,730 --> 00:39:54,570
Ranger part

00:39:51,280 --> 00:39:54,570
there's some areas

00:40:00,760 --> 00:40:12,160
anything else okay you have time okay

00:40:17,140 --> 00:40:23,150
Maxie fee is I think actually maybe one

00:40:19,580 --> 00:40:26,950
where it may have not been the same for

00:40:23,150 --> 00:40:26,950
a while too than I think we fixed it so

00:40:39,750 --> 00:40:43,980
hey SGI is actually using 10 or as a

00:40:42,030 --> 00:40:45,840
test these massive systems including

00:40:43,980 --> 00:40:49,650
police tested it might have to be

00:40:45,840 --> 00:40:54,110
redressed and starting to be able to

00:40:49,650 --> 00:40:54,110
wire system for quarters or 64 threads

00:41:03,770 --> 00:41:08,740
cool alright thank you very much

00:41:06,420 --> 00:41:13,070
[Music]

00:41:08,740 --> 00:41:13,070

YouTube URL: https://www.youtube.com/watch?v=7zZ9RSHTQTE


