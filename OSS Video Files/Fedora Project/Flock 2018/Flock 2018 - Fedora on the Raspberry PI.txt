Title: Flock 2018 - Fedora on the Raspberry PI
Publication date: 2018-09-08
Playlist: Flock 2018
Description: 
	Friday, August 10, 2018 
9:00am - 9:50am
@Dresden

Talk: Fedora on the Raspberry PI
Presenters: Tom Callaway, Peter Robinson

Description: Fedora has come a long way from the days of Pidora, and so has the Raspberry Pi. The little $35 microcomputer still has a huge userbase, and a lot of work has been done to get Fedora to run on the hardware. In this talk, I will talk about where we are today, what works (and doesn't work) and where we hope to go tomorrow.
Captions: 
	00:00:01,700 --> 00:00:16,350
hi hi everyone I'm Peter Robinson I

00:00:07,740 --> 00:00:19,800
think everyone knows Tom spot and thank

00:00:16,350 --> 00:00:21,119
you spot for proposing this talk spot

00:00:19,800 --> 00:00:22,080
came to me and said how do you want to

00:00:21,119 --> 00:00:24,600
co-present with me

00:00:22,080 --> 00:00:27,150
and I sat there for a full five minutes

00:00:24,600 --> 00:00:29,220
before I decided whether I would sit in

00:00:27,150 --> 00:00:33,300
the audience and troll him or stand up

00:00:29,220 --> 00:00:34,590
on stage and contribute yeah we felt it

00:00:33,300 --> 00:00:36,989
would be for the best if you know

00:00:34,590 --> 00:00:38,610
because if I tried to give this talk I I

00:00:36,989 --> 00:00:40,050
do know most of what I'm talking about

00:00:38,610 --> 00:00:41,640
here but it would be the sort of thing

00:00:40,050 --> 00:00:44,610
where Peter be like actually I changed

00:00:41,640 --> 00:00:46,170
that last night and so I figured it'd be

00:00:44,610 --> 00:00:49,440
better if he was up on stage to give

00:00:46,170 --> 00:00:52,410
some of the color so I wrote some slides

00:00:49,440 --> 00:00:53,820
I gave them to Peter and then he sends

00:00:52,410 --> 00:00:55,500
me this email on the first night of

00:00:53,820 --> 00:00:57,719
flock and it says I rewrote all of the

00:00:55,500 --> 00:00:59,129
slides I hope that's okay and we should

00:00:57,719 --> 00:01:01,890
sit down and talk about it and then that

00:00:59,129 --> 00:01:02,550
didn't happen and so it's gonna be fun

00:01:01,890 --> 00:01:04,110
for everybody

00:01:02,550 --> 00:01:07,740
I didn't rewrite all of them I just

00:01:04,110 --> 00:01:08,820
added some sort of more truths so I

00:01:07,740 --> 00:01:09,840
really don't know what I'm clicking

00:01:08,820 --> 00:01:11,570
through here I'm just gonna it's gonna

00:01:09,840 --> 00:01:17,189
be interesting it's gonna be like

00:01:11,570 --> 00:01:19,170
PowerPoint karaoke alright so a little

00:01:17,189 --> 00:01:21,659
bit of history here the first riser air

00:01:19,170 --> 00:01:24,619
bike comes out it's intended to be a $35

00:01:21,659 --> 00:01:28,920
microcomputer to try to teach children

00:01:24,619 --> 00:01:30,900
how to code obviously it does way more

00:01:28,920 --> 00:01:33,119
than that now but that was the original

00:01:30,900 --> 00:01:35,700
purpose for the design the pros for this

00:01:33,119 --> 00:01:37,439
thing it is super cheap it has standard

00:01:35,700 --> 00:01:40,560
connectors a lot of the other micro

00:01:37,439 --> 00:01:43,470
computers in the space have fun you know

00:01:40,560 --> 00:01:45,030
power or weird serial connectors that

00:01:43,470 --> 00:01:47,850
you've got to use you you end up having

00:01:45,030 --> 00:01:49,110
like a rat's nest of do I need this with

00:01:47,850 --> 00:01:51,810
this board and what do I need for that

00:01:49,110 --> 00:01:53,130
board I have a collection of several

00:01:51,810 --> 00:01:55,170
microcomputers that all need

00:01:53,130 --> 00:01:56,640
non-standard cables everything on the PI

00:01:55,170 --> 00:01:58,950
is relatively standard as far as

00:01:56,640 --> 00:02:01,049
connections go and relatively cheap most

00:01:58,950 --> 00:02:02,549
importantly yes exactly

00:02:01,049 --> 00:02:04,619
a nice thing about it was it was

00:02:02,549 --> 00:02:08,099
designed to be connected to a television

00:02:04,619 --> 00:02:09,780
and thus the outputs are HDMI and on the

00:02:08,099 --> 00:02:11,520
original PI you had the composite video

00:02:09,780 --> 00:02:12,270
loud as well you actually still have it

00:02:11,520 --> 00:02:14,020
on this pi

00:02:12,270 --> 00:02:16,590
it's just throw the headphones can

00:02:14,020 --> 00:02:19,780
yep so it's sneaky it's hidden there

00:02:16,590 --> 00:02:22,750
again in reducing cost basically yes

00:02:19,780 --> 00:02:25,720
the cons it is an RV six chip in the

00:02:22,750 --> 00:02:27,160
first pie because they had that chip

00:02:25,720 --> 00:02:28,720
lying around at Broadcom and it wasn't

00:02:27,160 --> 00:02:30,220
really being used very broadly but they

00:02:28,720 --> 00:02:32,740
had it and they said hey you can use

00:02:30,220 --> 00:02:34,890
this if you want so interesting side

00:02:32,740 --> 00:02:38,590
point that evan tells about the original

00:02:34,890 --> 00:02:42,040
Broadcom chip he had visions for this

00:02:38,590 --> 00:02:45,790
chip it's primarily used in VoIP phones

00:02:42,040 --> 00:02:50,020
and in set-top boxes and when they were

00:02:45,790 --> 00:02:52,720
tapping out the silicon he had a one

00:02:50,020 --> 00:02:55,660
millimeter by five millimeter spare spot

00:02:52,720 --> 00:02:58,870
on the chip and he basically begged his

00:02:55,660 --> 00:03:00,160
bosses at Broadcom can I put an arm core

00:02:58,870 --> 00:03:04,180
in there because it was never going to

00:03:00,160 --> 00:03:07,240
have an arm core so basically one of the

00:03:04,180 --> 00:03:09,820
main reasons for the v6 was that he

00:03:07,240 --> 00:03:12,340
could fit it in this spare spot on the

00:03:09,820 --> 00:03:15,640
silicon and it basically added a very

00:03:12,340 --> 00:03:17,400
small amount to the cost of producing

00:03:15,640 --> 00:03:19,840
this chip

00:03:17,400 --> 00:03:23,380
unfortunately because it is an arm v6

00:03:19,840 --> 00:03:25,060
chip it is slow and it was slow when it

00:03:23,380 --> 00:03:27,340
was at the time but as Peter points out

00:03:25,060 --> 00:03:28,600
it was really the the point was not to

00:03:27,340 --> 00:03:30,100
make it fast it was what was available

00:03:28,600 --> 00:03:32,770
what could fit in the space what was

00:03:30,100 --> 00:03:35,980
cheap yeah and I mean ultimately arm

00:03:32,770 --> 00:03:38,560
themselves had already announced like

00:03:35,980 --> 00:03:41,950
anything that wasn't on v7 was

00:03:38,560 --> 00:03:44,530
end-of-life and so we'll get to that a

00:03:41,950 --> 00:03:45,519
few slides down also the only networking

00:03:44,530 --> 00:03:47,620
that was on that original board was

00:03:45,519 --> 00:03:49,840
Ethernet there was no wireless built

00:03:47,620 --> 00:03:51,370
into it at all and there's no real-time

00:03:49,840 --> 00:03:53,110
clock there continues to be no real-time

00:03:51,370 --> 00:04:01,420
clock but that's a problem you can work

00:03:53,110 --> 00:04:04,470
around don't click too many times so

00:04:01,420 --> 00:04:04,470
you'll end up five slides soon

00:04:13,370 --> 00:04:16,760
what did you do to the slides nothing

00:04:15,560 --> 00:04:21,530
did you put a video in there

00:04:16,760 --> 00:04:27,050
no I troll other people's talks not my

00:04:21,530 --> 00:04:28,340
own you came in late aren't realizing

00:04:27,050 --> 00:04:31,720
this we were attempting to give this

00:04:28,340 --> 00:04:36,190
talk on her eyes very running for 28

00:04:31,720 --> 00:04:36,190
it's working

00:04:37,780 --> 00:04:46,820
nobody has any plans for dinner

00:04:39,860 --> 00:04:49,550
do they good news

00:04:46,820 --> 00:04:51,580
alive bad news LibreOffice is not

00:04:49,550 --> 00:04:54,290
appearing

00:04:51,580 --> 00:04:56,840
shall we switch to the laptop at this

00:04:54,290 --> 00:05:03,620
point we kind of feel like I think that

00:04:56,840 --> 00:05:06,010
maybe a better I don't have that many

00:05:03,620 --> 00:05:06,010
jokes

00:05:17,920 --> 00:05:27,200
yes Oh Fedora 18 was last official on v5

00:05:22,850 --> 00:05:30,530
release we made a decision about six

00:05:27,200 --> 00:05:32,990
months prior to the PI being announced

00:05:30,530 --> 00:05:35,180
that we were going to move to an Li

00:05:32,990 --> 00:05:37,850
seven hard flight because arm themselves

00:05:35,180 --> 00:05:42,620
had said basically anything that's not

00:05:37,850 --> 00:05:46,660
on v7 ie the cortex series of chips was

00:05:42,620 --> 00:05:49,960
dead and at the time we had a handful of

00:05:46,660 --> 00:05:53,060
Kirkwood boards that were MV 5 and

00:05:49,960 --> 00:05:56,620
absolutely no v6 chips our devices

00:05:53,060 --> 00:05:59,720
whatsoever the other issue was that

00:05:56,620 --> 00:06:02,420
because the v6 had only ever been

00:05:59,720 --> 00:06:05,720
focused on phones and primarily even

00:06:02,420 --> 00:06:07,790
low-end phones arm themselves had never

00:06:05,720 --> 00:06:10,330
really invested in like the GCC

00:06:07,790 --> 00:06:13,910
toolchain and and things like that and

00:06:10,330 --> 00:06:16,700
it basically while it worked it had huge

00:06:13,910 --> 00:06:19,670
amounts of problems and nobody had any

00:06:16,700 --> 00:06:21,740
interest in fixing them and so it was

00:06:19,670 --> 00:06:23,480
primarily actually the state of things

00:06:21,740 --> 00:06:25,669
like the tool chains and stuff like that

00:06:23,480 --> 00:06:28,400
for arm v6 and the fact that there was

00:06:25,669 --> 00:06:30,650
no chips out there that we made the

00:06:28,400 --> 00:06:35,470
decision in Fedora that it was going to

00:06:30,650 --> 00:06:35,470
be only seven hard flight and who cares

00:06:36,100 --> 00:06:41,510
yeah and so that was basically it

00:06:39,310 --> 00:06:45,620
and then of course you get you know

00:06:41,510 --> 00:06:47,780
almost overnight the raspberry pie sells

00:06:45,620 --> 00:06:49,310
out of the store immediately everyone is

00:06:47,780 --> 00:06:52,810
rushing to buy one of these things and

00:06:49,310 --> 00:06:58,190
the instant demand for environments for

00:06:52,810 --> 00:07:01,310
this little $35 micro computer so over

00:06:58,190 --> 00:07:03,650
at Seneca College and in Canada who

00:07:01,310 --> 00:07:06,950
decided they would like to run Fedora on

00:07:03,650 --> 00:07:10,040
the Raspberry Pi so they went in and did

00:07:06,950 --> 00:07:13,450
a full rebuild of everything in fedora I

00:07:10,040 --> 00:07:16,610
think it was 18 or 19 one of the two

00:07:13,450 --> 00:07:17,900
yeah something like that and then they

00:07:16,610 --> 00:07:21,380
rent and rebuild it

00:07:17,900 --> 00:07:22,910
optimized optimized isn't the right word

00:07:21,380 --> 00:07:26,720
but compiled so that it will actually

00:07:22,910 --> 00:07:28,250
run on the Raspberry Pi one and then the

00:07:26,720 --> 00:07:29,360
task was completed and the students got

00:07:28,250 --> 00:07:30,889
a grade on that and

00:07:29,360 --> 00:07:33,229
they went off in two different things

00:07:30,889 --> 00:07:34,580
and they sat there and bit rotted yeah

00:07:33,229 --> 00:07:36,169
so they actually did a couple of

00:07:34,580 --> 00:07:41,479
different Fedora releases I think the

00:07:36,169 --> 00:07:43,610
last was about 22 and but obviously like

00:07:41,479 --> 00:07:45,620
each year a new influx of students would

00:07:43,610 --> 00:07:49,520
come in they would be given certain bits

00:07:45,620 --> 00:07:51,319
of it as a project and you know the

00:07:49,520 --> 00:07:53,659
teachers would sort of vaguely keep

00:07:51,319 --> 00:07:56,949
stuff glued together in between classes

00:07:53,659 --> 00:08:00,770
and stuff like that but you know it was

00:07:56,949 --> 00:08:03,949
primarily students we did get a few very

00:08:00,770 --> 00:08:06,860
good fedora contributors from them there

00:08:03,949 --> 00:08:11,259
was some controversies around the pide

00:08:06,860 --> 00:08:19,039
or a name and and generally it was an

00:08:11,259 --> 00:08:20,360
interesting time so if you if you go on

00:08:19,039 --> 00:08:22,550
the Raspberry Pi foundation's website

00:08:20,360 --> 00:08:23,930
you will see them recommending raspbian

00:08:22,550 --> 00:08:24,860
is the default operating system they

00:08:23,930 --> 00:08:29,150
delivered this through a number of

00:08:24,860 --> 00:08:30,590
channels and basically raspbian is is a

00:08:29,150 --> 00:08:32,529
fork of debian straight up that the

00:08:30,590 --> 00:08:37,010
Raspberry Pi foundation put together and

00:08:32,529 --> 00:08:40,399
he started as Debian at one point but it

00:08:37,010 --> 00:08:42,469
really doesn't resemble Debian in a lot

00:08:40,399 --> 00:08:43,820
of ways one of the big changes is that

00:08:42,469 --> 00:08:45,740
the Raspberry Pi foundation has their

00:08:43,820 --> 00:08:48,230
own Fork of the Linux kernel and they

00:08:45,740 --> 00:08:51,740
use that fork for driving raspbian

00:08:48,230 --> 00:08:54,800
entirely they also have a whole bunch of

00:08:51,740 --> 00:08:58,339
firmware inside of it to not only boot

00:08:54,800 --> 00:08:59,800
the device itself but also to power up

00:08:58,339 --> 00:09:02,300
most of the peripherals on the board

00:08:59,800 --> 00:09:06,260
yeah so they have a number of utilities

00:09:02,300 --> 00:09:09,170
for controlling the video chip so the

00:09:06,260 --> 00:09:13,640
raspberry or the Broadcom chip is quite

00:09:09,170 --> 00:09:15,680
different than most chips in that you

00:09:13,640 --> 00:09:19,850
have firmware that's on a fat petition

00:09:15,680 --> 00:09:22,640
and it's actually the GPU that boots the

00:09:19,850 --> 00:09:26,149
machine and then the GPU starts up the

00:09:22,640 --> 00:09:28,940
young core and hands over control but

00:09:26,149 --> 00:09:31,970
the GPU still keeps control of a lot of

00:09:28,940 --> 00:09:34,699
the hardware peripherals and so you have

00:09:31,970 --> 00:09:36,350
this mailbox interface where the Linux

00:09:34,699 --> 00:09:38,930
kernel actually speaks to the mailbox

00:09:36,350 --> 00:09:40,370
and that says hey I need to scale up or

00:09:38,930 --> 00:09:43,100
down the speed of the CPU

00:09:40,370 --> 00:09:46,370
um can you adjust these voltages in the

00:09:43,100 --> 00:09:48,950
GPU so that I can do that so you know if

00:09:46,370 --> 00:09:50,900
it's running it like the pi3 is running

00:09:48,950 --> 00:09:52,640
at 600 megahertz and it needs to go to

00:09:50,900 --> 00:09:53,150
1.2 because there's a bunch of stuff

00:09:52,640 --> 00:09:55,220
happening

00:09:53,150 --> 00:09:57,200
it actually has to go and ask the GPU

00:09:55,220 --> 00:09:59,090
for permission for that yeah and in fact

00:09:57,200 --> 00:10:01,190
one of the early libraries that they did

00:09:59,090 --> 00:10:03,560
was a library and user space that

00:10:01,190 --> 00:10:05,450
allowed for programs to bypass the

00:10:03,560 --> 00:10:07,700
operating system almost entirely and

00:10:05,450 --> 00:10:11,000
talk directly to the GPU to do output

00:10:07,700 --> 00:10:14,420
and so a lot of the early piling that

00:10:11,000 --> 00:10:16,550
library to get high performance 1080p

00:10:14,420 --> 00:10:17,720
video out of the Raspberry Pi because

00:10:16,550 --> 00:10:18,770
they just sort of said to the operating

00:10:17,720 --> 00:10:19,880
system you don't need to know anything

00:10:18,770 --> 00:10:21,260
about what I'm pushing through over

00:10:19,880 --> 00:10:23,000
there just all this is going over there

00:10:21,260 --> 00:10:24,530
to get handled yeah I mean and

00:10:23,000 --> 00:10:26,360
ultimately that comes back to its

00:10:24,530 --> 00:10:31,430
history is as a chip designed primarily

00:10:26,360 --> 00:10:34,280
for set-top boxes so Raspberry Pi 2

00:10:31,430 --> 00:10:37,780
comes out the big change here is that we

00:10:34,280 --> 00:10:39,560
get every seven CPU in the mix

00:10:37,780 --> 00:10:42,410
unfortunately because of the unique

00:10:39,560 --> 00:10:44,330
design of the architecture and the

00:10:42,410 --> 00:10:45,950
hardware you still can't use the

00:10:44,330 --> 00:10:50,990
upstream kernel for this just because it

00:10:45,950 --> 00:10:53,450
got a newer CPU um and by this time like

00:10:50,990 --> 00:10:55,070
there were people you know sending

00:10:53,450 --> 00:10:57,350
support for the Raspberry Pi chip

00:10:55,070 --> 00:11:00,260
upstream you could actually boot fedora

00:10:57,350 --> 00:11:04,370
on it if you wanted serial console and

00:11:00,260 --> 00:11:06,050
no USB so it was certainly getting there

00:11:04,370 --> 00:11:08,540
there was work being done to get things

00:11:06,050 --> 00:11:11,810
upstream the PI Foundation had done

00:11:08,540 --> 00:11:13,580
their first major sort of kernel rebase

00:11:11,810 --> 00:11:15,620
because they needed a newer kernel for

00:11:13,580 --> 00:11:17,630
the newer hardware and realize that oh

00:11:15,620 --> 00:11:20,360
my god all the work that we have to do

00:11:17,630 --> 00:11:23,510
because none of its upstream funny that

00:11:20,360 --> 00:11:25,940
yeah one of the big choices that they

00:11:23,510 --> 00:11:27,260
made was to do things in a what they

00:11:25,940 --> 00:11:29,450
thought was a reasonable sensible way

00:11:27,260 --> 00:11:31,490
but was completely different from how

00:11:29,450 --> 00:11:33,350
everyone else was doing arm embedded

00:11:31,490 --> 00:11:37,580
work in the Linux kernel upstream and so

00:11:33,350 --> 00:11:41,240
every time they rebased for a while they

00:11:37,580 --> 00:11:44,300
had different models for things yeah and

00:11:41,240 --> 00:11:46,640
I mean to be honest it's still the model

00:11:44,300 --> 00:11:48,230
for a lot of the arm SOC vendors that

00:11:46,640 --> 00:11:51,830
they don't do a lot of stuff upstream

00:11:48,230 --> 00:11:54,560
and if you look at most of the arm

00:11:51,830 --> 00:11:56,209
vendor kernels you'll see that they very

00:11:54,560 --> 00:11:59,899
very closely aligned with the

00:11:56,209 --> 00:12:03,290
stated by Android and Google with its

00:11:59,899 --> 00:12:06,230
push to get newer kernels and newer

00:12:03,290 --> 00:12:08,329
functionality and and say and like if

00:12:06,230 --> 00:12:11,379
you're running Android P it has to have

00:12:08,329 --> 00:12:14,569
at least this kernel is helping drive

00:12:11,379 --> 00:12:15,920
the vendors towards the upstream so that

00:12:14,569 --> 00:12:25,429
they don't have to do all this extra

00:12:15,920 --> 00:12:28,189
work for newer versions of Android so

00:12:25,429 --> 00:12:30,559
fedora as a policy has a one kernel

00:12:28,189 --> 00:12:35,600
policy because we have like three kernel

00:12:30,559 --> 00:12:37,369
developers and basically to support

00:12:35,600 --> 00:12:40,939
hundreds of thousands of hardware

00:12:37,369 --> 00:12:43,429
combinations I do most of the arm kernel

00:12:40,939 --> 00:12:46,850
stuff and it's done in the evenings and

00:12:43,429 --> 00:12:49,550
it's like not my day job basically and

00:12:46,850 --> 00:12:52,189
when I first started doing arm eight

00:12:49,550 --> 00:12:55,129
years ago I started poking at kernels

00:12:52,189 --> 00:12:56,749
because we had problems and now I know

00:12:55,129 --> 00:12:58,819
more about kernel code that I ever

00:12:56,749 --> 00:13:01,819
thought I wanted to know but it's still

00:12:58,819 --> 00:13:05,929
a hackathon in the evening and on the

00:13:01,819 --> 00:13:08,689
weekends sort of thing there are people

00:13:05,929 --> 00:13:13,100
that have put the Raspberry Pi kernel

00:13:08,689 --> 00:13:17,119
source into an RPM and use it in Fedora

00:13:13,100 --> 00:13:21,410
remixes and the current raspbian kernel

00:13:17,119 --> 00:13:26,299
is either for nine or fourteen and so it

00:13:21,410 --> 00:13:28,429
does work fine but basically Fedora as a

00:13:26,299 --> 00:13:31,040
project doesn't have enough kernel

00:13:28,429 --> 00:13:32,829
developers to be able to deal with a

00:13:31,040 --> 00:13:39,110
thousand different Forks of the kernel

00:13:32,829 --> 00:13:42,709
so and also by Fedora doing that it's

00:13:39,110 --> 00:13:44,779
amazing how many of the board vendors

00:13:42,709 --> 00:13:46,819
and that have actually switched to

00:13:44,779 --> 00:13:49,759
upstream so that they will get Fedora

00:13:46,819 --> 00:13:52,610
support and so it's taken us a while but

00:13:49,759 --> 00:13:55,639
that sort of we're not going to have

00:13:52,610 --> 00:13:59,170
display on the Raspberry Pi and it was

00:13:55,639 --> 00:14:03,499
funny because like I first tried to get

00:13:59,170 --> 00:14:06,079
so on the non free binary bits the

00:14:03,499 --> 00:14:09,710
things that we needed in Fedora was the

00:14:06,079 --> 00:14:13,280
boot firmware and at the time

00:14:09,710 --> 00:14:16,130
like when it took us about five years

00:14:13,280 --> 00:14:18,770
and spot is notionally like the Fedora

00:14:16,130 --> 00:14:21,110
legal person he kept her to her anything

00:14:18,770 --> 00:14:25,580
to do with legal through the lawyers for

00:14:21,110 --> 00:14:27,650
the project so that tech nerds like me

00:14:25,580 --> 00:14:31,400
no don't need to deal with legal nerds

00:14:27,650 --> 00:14:34,520
and it took us about five years to work

00:14:31,400 --> 00:14:37,280
with the PI foundation and Broadcom to

00:14:34,520 --> 00:14:39,230
get them to change the wording because

00:14:37,280 --> 00:14:42,590
there were destroys that was shipping

00:14:39,230 --> 00:14:43,820
the PI firmware but the license

00:14:42,590 --> 00:14:46,220
explicitly said it couldn't be

00:14:43,820 --> 00:14:49,640
redistributed and and so it took us

00:14:46,220 --> 00:14:52,820
about five years to get just be able to

00:14:49,640 --> 00:14:59,500
redistribute the firmware to boot the

00:14:52,820 --> 00:15:02,600
device and then around that time we got

00:14:59,500 --> 00:15:06,710
that like the PI 2 came out which was on

00:15:02,600 --> 00:15:08,780
v7 and I packaged up the firmware and it

00:15:06,710 --> 00:15:10,610
was actually in fedora for probably two

00:15:08,780 --> 00:15:13,610
years before we could actually support

00:15:10,610 --> 00:15:15,440
it and like people that looked at the

00:15:13,610 --> 00:15:17,840
kernel stuff would see commit messages

00:15:15,440 --> 00:15:20,270
from me that were like at support for

00:15:17,840 --> 00:15:22,550
Broadcom device and like I wasn't

00:15:20,270 --> 00:15:25,460
screaming it but we officially started

00:15:22,550 --> 00:15:28,670
to support it in Fedora 25 you could run

00:15:25,460 --> 00:15:30,320
it in fedora from about Fedora 22 but it

00:15:28,670 --> 00:15:32,710
wasn't what I considered minimum viable

00:15:30,320 --> 00:15:37,700
product and we'll get to that shortly

00:15:32,710 --> 00:15:41,080
so the Raspberry Pi has like four major

00:15:37,700 --> 00:15:43,790
binary blobs one was the boot firmware

00:15:41,080 --> 00:15:45,890
we eventually got that fixed fired

00:15:43,790 --> 00:15:52,430
probably a few lenses of change in a

00:15:45,890 --> 00:15:57,020
text file the video core of VC 4 is it's

00:15:52,430 --> 00:15:59,840
generally known as a binary driver and a

00:15:57,020 --> 00:16:03,890
binary user space that's not Meza and

00:15:59,840 --> 00:16:06,710
it's all very proprietary and we could

00:16:03,890 --> 00:16:09,710
never use that either and the fact of

00:16:06,710 --> 00:16:11,480
the matter is most for like most

00:16:09,710 --> 00:16:13,570
rust-proof high users want the graphical

00:16:11,480 --> 00:16:13,570
interface

00:16:14,200 --> 00:16:21,020
Broadcom via the Raspberry Pi foundation

00:16:17,170 --> 00:16:23,839
employed a developer to actually develop

00:16:21,020 --> 00:16:26,000
an open-source dry

00:16:23,839 --> 00:16:28,300
and that's all upstream in Messner and

00:16:26,000 --> 00:16:32,079
Jeep in the kernel and things like that

00:16:28,300 --> 00:16:34,879
and there was a bunch of other things

00:16:32,079 --> 00:16:36,889
there's a bunch of user space libraries

00:16:34,879 --> 00:16:39,230
for the driver a spot mention there's a

00:16:36,889 --> 00:16:41,480
bunch of user space libraries to be able

00:16:39,230 --> 00:16:45,769
to speak directly to the video core to

00:16:41,480 --> 00:16:48,579
do things like 1080p video rendering to

00:16:45,769 --> 00:16:54,500
speak to the ISP which is the camera and

00:16:48,579 --> 00:16:56,660
sensor processor to get stuff from from

00:16:54,500 --> 00:16:59,720
the camera you can actually speak to the

00:16:56,660 --> 00:17:01,519
camera sensor and tell it to take this

00:16:59,720 --> 00:17:04,850
stream of videos and write it straight

00:17:01,519 --> 00:17:06,650
to the HDMI output and so it doesn't

00:17:04,850 --> 00:17:07,280
even hit the Linux kernel and things

00:17:06,650 --> 00:17:10,549
like that

00:17:07,280 --> 00:17:14,480
and so that's why you get a very CPU low

00:17:10,549 --> 00:17:17,419
powered crappy SOC that can actually do

00:17:14,480 --> 00:17:18,530
like full 1080 video streaming and

00:17:17,419 --> 00:17:20,780
things like that

00:17:18,530 --> 00:17:22,970
and so there was a bunch of that stuff

00:17:20,780 --> 00:17:25,220
that was binary only and then a bunch of

00:17:22,970 --> 00:17:28,850
random utilities to poke at various

00:17:25,220 --> 00:17:31,760
registers on it to adjust things like

00:17:28,850 --> 00:17:33,440
memory clock speeds and and various

00:17:31,760 --> 00:17:35,179
other bits and pieces like that yeah I

00:17:33,440 --> 00:17:36,200
think you know speaking of someone that

00:17:35,179 --> 00:17:38,110
worked with them for a number of years

00:17:36,200 --> 00:17:40,309
to try to get a lot of this opened up

00:17:38,110 --> 00:17:41,990
initially there was this intent that

00:17:40,309 --> 00:17:43,400
they didn't think that anyone was really

00:17:41,990 --> 00:17:44,539
going to care about any of this code and

00:17:43,400 --> 00:17:45,650
that it would be sufficient for them to

00:17:44,539 --> 00:17:47,690
just be the people who are the experts

00:17:45,650 --> 00:17:49,549
in that space but when it was obvious

00:17:47,690 --> 00:17:51,080
after a couple of years that there were

00:17:49,549 --> 00:17:53,270
a lot of people that wanted to help

00:17:51,080 --> 00:17:54,950
improve the situation of the environment

00:17:53,270 --> 00:17:56,240
and make it maintainable then they

00:17:54,950 --> 00:17:57,919
started to open up as much as they

00:17:56,240 --> 00:17:59,990
possibly could in that space and we're

00:17:57,919 --> 00:18:03,140
really eager to figure out how they

00:17:59,990 --> 00:18:04,159
could get more eyes into the mix I think

00:18:03,140 --> 00:18:07,100
they really didn't necessarily

00:18:04,159 --> 00:18:08,470
understood the the box they had opened

00:18:07,100 --> 00:18:12,080
when they started working in this

00:18:08,470 --> 00:18:14,270
technology area so pretty much

00:18:12,080 --> 00:18:16,940
everything except for some of the boot

00:18:14,270 --> 00:18:18,200
firmware has been put under an

00:18:16,940 --> 00:18:19,730
open-source license and the boot

00:18:18,200 --> 00:18:22,450
firmware has been relicensed like Peter

00:18:19,730 --> 00:18:25,010
said to allow people to distribute it

00:18:22,450 --> 00:18:26,960
yeah and I mean ultimately if you look

00:18:25,010 --> 00:18:29,030
at what the Raspberry Pi foundation

00:18:26,960 --> 00:18:34,190
wanted to achieve they're primarily

00:18:29,030 --> 00:18:36,320
focused on education and so you know

00:18:34,190 --> 00:18:36,679
they wanted to basically make it easier

00:18:36,320 --> 00:18:38,509
for

00:18:36,679 --> 00:18:41,720
kids the fact that they produce this

00:18:38,509 --> 00:18:43,309
device that was $35 and absolutely

00:18:41,720 --> 00:18:46,730
changed the single board computer

00:18:43,309 --> 00:18:50,539
industry with a single announcement was

00:18:46,730 --> 00:18:51,860
extraordinary but like if you speak to

00:18:50,539 --> 00:18:55,700
most of the people at the organization

00:18:51,860 --> 00:18:59,299
it was about kids getting hold of

00:18:55,700 --> 00:19:01,100
devices to code and you know like you

00:18:59,299 --> 00:19:03,950
look at kids faces when they first get

00:19:01,100 --> 00:19:07,490
to light up an LED and it's like you

00:19:03,950 --> 00:19:09,289
know you can fully understand why but as

00:19:07,490 --> 00:19:11,629
far as they were concerned the actual

00:19:09,289 --> 00:19:14,299
device itself was more a tool to it or

00:19:11,629 --> 00:19:16,700
an enabling tool to enable that so

00:19:14,299 --> 00:19:18,409
they're not so much focused on things

00:19:16,700 --> 00:19:20,259
like open-source if they have a kernel

00:19:18,409 --> 00:19:22,669
that works and that they can support and

00:19:20,259 --> 00:19:24,740
ninety and like one of the biggest

00:19:22,669 --> 00:19:27,619
problems we have with the open VC for

00:19:24,740 --> 00:19:29,330
driver versus the closed driver is that

00:19:27,619 --> 00:19:32,450
the amount of monitors that it just goes

00:19:29,330 --> 00:19:36,110
black on it because it can't negotiate

00:19:32,450 --> 00:19:38,059
the edid and work out what's there has

00:19:36,110 --> 00:19:39,730
caused and it's improved a huge amount

00:19:38,059 --> 00:19:44,480
I'll get to that shortly

00:19:39,730 --> 00:19:46,129
but yeah it's an interesting problem so

00:19:44,480 --> 00:19:47,840
they continued to either eight the

00:19:46,129 --> 00:19:50,629
hardware we have the Raspberry Pi 3 and

00:19:47,840 --> 00:19:55,220
the three plus the hardware now has it

00:19:50,629 --> 00:19:59,269
in a arch 64 core inside of it it's arm

00:19:55,220 --> 00:20:02,960
v7 compatible we do have a are 64 builds

00:19:59,269 --> 00:20:06,049
for the PI yeah but but what should

00:20:02,960 --> 00:20:09,799
people use this well I mean I'm 64 on

00:20:06,049 --> 00:20:12,320
the Raspberry Pi is interesting the

00:20:09,799 --> 00:20:14,960
image that i promote primarily is the

00:20:12,320 --> 00:20:17,059
arm v7 one because you can have one SD

00:20:14,960 --> 00:20:20,450
card and you can put it in the 2 the 3

00:20:17,059 --> 00:20:23,960
and the 3 plus and it will automatically

00:20:20,450 --> 00:20:26,570
detect everything and just boot it's

00:20:23,960 --> 00:20:28,759
only got a gig of memory and the problem

00:20:26,570 --> 00:20:31,999
with the 64-bit address space is you

00:20:28,759 --> 00:20:35,090
actually end up on low resource machines

00:20:31,999 --> 00:20:37,220
end up wasting a lot of that memory so

00:20:35,090 --> 00:20:39,049
depending on what you want to do with it

00:20:37,220 --> 00:20:43,159
you're much better with the 32-bit

00:20:39,049 --> 00:20:45,559
version a lot of people on the PI want

00:20:43,159 --> 00:20:48,619
to run things like kubernetes and other

00:20:45,559 --> 00:20:50,000
such things that and basically stuff

00:20:48,619 --> 00:20:53,600
that really

00:20:50,000 --> 00:20:56,840
sixty four-bit so a lot of people use it

00:20:53,600 --> 00:20:58,910
in the server space with 64-bit but if

00:20:56,840 --> 00:21:01,610
people just want a desktop - you know

00:20:58,910 --> 00:21:04,040
browse around and you know blink LEDs

00:21:01,610 --> 00:21:06,200
and things like that I always recommend

00:21:04,040 --> 00:21:08,030
the 32-bit one because it's just a

00:21:06,200 --> 00:21:08,990
little bit faster yeah exactly the

00:21:08,030 --> 00:21:11,150
performance difference is noticeable

00:21:08,990 --> 00:21:14,330
between the a are 64 build in the arm of

00:21:11,150 --> 00:21:17,570
v7 build and when spot did the slides he

00:21:14,330 --> 00:21:19,640
said more USB also more reliable USB all

00:21:17,570 --> 00:21:23,120
Y is to me I put that in there to draw

00:21:19,640 --> 00:21:26,210
Peter yeah I mean like when they went

00:21:23,120 --> 00:21:29,750
from the v6 to the quad-core v7 from the

00:21:26,210 --> 00:21:31,880
quad-core v7 to the quad-core VA all the

00:21:29,750 --> 00:21:33,530
peripherals and everything changed

00:21:31,880 --> 00:21:37,760
stayed the same and they were just

00:21:33,530 --> 00:21:41,480
swapping out bits of silicon and the USB

00:21:37,760 --> 00:21:44,990
controller is terrible and if you look

00:21:41,480 --> 00:21:48,350
at most arm SOC s you'll have you know

00:21:44,990 --> 00:21:51,880
five or six MMC you know half a dozen

00:21:48,350 --> 00:21:57,680
serial you know a couple of kin a

00:21:51,880 --> 00:22:00,320
real-time clock or two half a dozen USB

00:21:57,680 --> 00:22:04,250
root ports and various other bits and

00:22:00,320 --> 00:22:08,750
pieces the Raspberry Pi has one buggy

00:22:04,250 --> 00:22:11,780
USB bit of silicon which basically with

00:22:08,750 --> 00:22:16,090
the upstream kernel runs half duplex and

00:22:11,780 --> 00:22:17,750
so your 480 megabits is much closer to

00:22:16,090 --> 00:22:22,100
240 megabits

00:22:17,750 --> 00:22:25,250
in reality I think we can push a little

00:22:22,100 --> 00:22:27,980
bit more than that the way the PI

00:22:25,250 --> 00:22:32,150
Foundation deals with that and basically

00:22:27,980 --> 00:22:34,010
it doesn't have a bit of hardware

00:22:32,150 --> 00:22:36,470
silicon in there so it has to be that

00:22:34,010 --> 00:22:39,080
bit of the USB stack which is normally

00:22:36,470 --> 00:22:41,750
done in hardware is emulated in software

00:22:39,080 --> 00:22:43,370
in the kernel the way the PI foundation

00:22:41,750 --> 00:22:46,910
works around that to get a bit more

00:22:43,370 --> 00:22:49,100
speed is they use the f IQ when that

00:22:46,910 --> 00:22:50,840
patch was proposed upstream basically

00:22:49,100 --> 00:22:52,280
the USB stack maintainer and a whole

00:22:50,840 --> 00:22:54,020
bunch of other people like fell off

00:22:52,280 --> 00:22:57,170
their chairs laughing and went no not

00:22:54,020 --> 00:22:58,820
ever not over my dead body so the PI

00:22:57,170 --> 00:23:02,210
foundations kernel has this terrible

00:22:58,820 --> 00:23:03,570
hack to make it go faster because you

00:23:02,210 --> 00:23:05,070
know cheap

00:23:03,570 --> 00:23:07,350
and you know it doesn't have a lot of

00:23:05,070 --> 00:23:09,780
other things that a standard armboard

00:23:07,350 --> 00:23:12,000
has it doesn't have a jig which is a

00:23:09,780 --> 00:23:14,010
global interrupt controller and various

00:23:12,000 --> 00:23:17,220
other bits and pieces which makes the

00:23:14,010 --> 00:23:21,300
performance compared to you know a

00:23:17,220 --> 00:23:24,420
similar arm SOC substandard yeah there's

00:23:21,300 --> 00:23:27,330
an entire chapter in my ear as Barry PI

00:23:24,420 --> 00:23:29,310
book on why your USB devices aren't

00:23:27,330 --> 00:23:31,320
working properly in the Raspberry Pi it

00:23:29,310 --> 00:23:32,670
has gotten slightly better in that

00:23:31,320 --> 00:23:34,650
regard because we've been able to do

00:23:32,670 --> 00:23:35,970
some clever workarounds to tout to see

00:23:34,650 --> 00:23:37,230
devices when they're plugged in as

00:23:35,970 --> 00:23:38,820
before where you would have a device

00:23:37,230 --> 00:23:41,720
plugged in and the PI might just turn

00:23:38,820 --> 00:23:46,230
off or refuse to see the device at all

00:23:41,720 --> 00:23:48,150
but it's it's still unreliable and so

00:23:46,230 --> 00:23:49,470
one of the things I tell people when

00:23:48,150 --> 00:23:50,940
they're trying to build kit based on the

00:23:49,470 --> 00:23:52,200
Raspberry Pi is that if they can figure

00:23:50,940 --> 00:23:53,490
out some way to wire it directly into

00:23:52,200 --> 00:23:54,900
the GPIO they're gonna have a much

00:23:53,490 --> 00:23:57,180
better experience and if they try to go

00:23:54,900 --> 00:23:59,670
through the USB port well and USB

00:23:57,180 --> 00:24:01,860
devices draw power and one probably the

00:23:59,670 --> 00:24:04,980
number one biggest support problem we

00:24:01,860 --> 00:24:08,790
see in fedora is that the power supply

00:24:04,980 --> 00:24:10,770
is not rated enough which was actually

00:24:08,790 --> 00:24:16,890
the problem we were having from 8:15 to

00:24:10,770 --> 00:24:19,850
8:45 this morning yeah so I mentioned

00:24:16,890 --> 00:24:23,640
we've mentioned the boot firmware

00:24:19,850 --> 00:24:28,170
there's the open source VC for driver so

00:24:23,640 --> 00:24:31,400
we have fully accelerated meza so gnome

00:24:28,170 --> 00:24:38,090
will run with Waylon fully accelerated

00:24:31,400 --> 00:24:40,920
it's still not exactly fast there's

00:24:38,090 --> 00:24:43,530
still a whole bunch of kernel changes

00:24:40,920 --> 00:24:46,440
not upstream there's no camera driver

00:24:43,530 --> 00:24:52,410
there's no video acceleration offload

00:24:46,440 --> 00:24:54,950
drivers and there's no support for the

00:24:52,410 --> 00:24:58,650
official Raspberry Pi touchscreen yet

00:24:54,950 --> 00:25:00,950
and like there's a bunch of that stuff

00:24:58,650 --> 00:25:03,660
in motion but we're not quite there yet

00:25:00,950 --> 00:25:08,400
the PI foundation is now actually

00:25:03,660 --> 00:25:11,160
looking and it's at moving from their

00:25:08,400 --> 00:25:14,310
closest driver to the upstream open

00:25:11,160 --> 00:25:16,590
driver in raspbian as well I believe the

00:25:14,310 --> 00:25:17,410
latest release that just happened to

00:25:16,590 --> 00:25:19,540
support the three

00:25:17,410 --> 00:25:21,460
Plus actually has it there and people

00:25:19,540 --> 00:25:23,400
can enable it but it's not there by

00:25:21,460 --> 00:25:30,310
default

00:25:23,400 --> 00:25:32,410
amusingly so about a year ago like the

00:25:30,310 --> 00:25:34,300
Fedora project hadn't had a lot of

00:25:32,410 --> 00:25:36,790
communication with the PI Foundation

00:25:34,300 --> 00:25:40,630
because of something happened in the

00:25:36,790 --> 00:25:45,550
early years of the existence of that

00:25:40,630 --> 00:25:47,410
device and finally last year I got

00:25:45,550 --> 00:25:50,550
connected with eben and I went up there

00:25:47,410 --> 00:25:53,890
and we actually had a very fun

00:25:50,550 --> 00:25:57,610
face-to-face meeting I demoed I think it

00:25:53,890 --> 00:26:00,850
was Fedora 26 running arm 64 gnome shell

00:25:57,610 --> 00:26:03,460
fully OpenStack on the Raspberry Pi that

00:26:00,850 --> 00:26:05,260
was with grub menus and everything and

00:26:03,460 --> 00:26:07,750
eben was blown away it was the first

00:26:05,260 --> 00:26:10,060
time he'd ever seen his device running a

00:26:07,750 --> 00:26:14,590
fully open source stack and that was

00:26:10,060 --> 00:26:17,620
kind of cool and so we've had you know

00:26:14,590 --> 00:26:21,310
and the PI foundation hosted back in May

00:26:17,620 --> 00:26:23,320
a knowing performance hackfest so in

00:26:21,310 --> 00:26:24,700
Fedora 29 there's going to be a bunch of

00:26:23,320 --> 00:26:26,710
changes that are landing into gnome

00:26:24,700 --> 00:26:28,900
which help should help speed things up

00:26:26,710 --> 00:26:31,360
and give more memory and make it

00:26:28,900 --> 00:26:34,780
generally better for Raspberry Pi and

00:26:31,360 --> 00:26:39,070
other low resource devices so so that's

00:26:34,780 --> 00:26:42,880
kind of cool and and yeah and so there's

00:26:39,070 --> 00:26:44,140
still some clothes binaries and you know

00:26:42,880 --> 00:26:46,630
bits and pieces but we're certainly

00:26:44,140 --> 00:26:49,210
getting there most notably we can't ship

00:26:46,630 --> 00:26:52,650
the firmware for the wireless or the

00:26:49,210 --> 00:26:56,200
Bluetooth controllers because Broadcom

00:26:52,650 --> 00:26:58,440
yeah so the wireless is interesting we

00:26:56,200 --> 00:27:04,630
actually do ship the firmware

00:26:58,440 --> 00:27:07,090
what we don't ship is the NVRAM and the

00:27:04,630 --> 00:27:10,060
interesting well most wireless firmware

00:27:07,090 --> 00:27:13,270
has some form of envy ran in something

00:27:10,060 --> 00:27:18,880
like a $2000 laptop you know they have

00:27:13,270 --> 00:27:22,390
an onboard chip that has that so and in

00:27:18,880 --> 00:27:25,870
a lot of the Broadcom cases the firmware

00:27:22,390 --> 00:27:30,340
configuration for the nvram is actually

00:27:25,870 --> 00:27:31,030
shoved into vendor-specific ACPI tables

00:27:30,340 --> 00:27:34,450
and

00:27:31,030 --> 00:27:36,550
so the Broadcom driver will read from a

00:27:34,450 --> 00:27:38,170
try to ride for find and read from an

00:27:36,550 --> 00:27:40,720
EEPROM and then it will fall back to

00:27:38,170 --> 00:27:43,750
BIOS tables and finally it looks for a

00:27:40,720 --> 00:27:45,540
text file that it's expecting to be

00:27:43,750 --> 00:27:47,980
there

00:27:45,540 --> 00:27:52,030
Broadcom a couple of years ago sold all

00:27:47,980 --> 00:27:54,520
their wireless stack off to Cyprus I

00:27:52,030 --> 00:27:56,500
spoke to the PI Foundation a year ago

00:27:54,520 --> 00:27:58,510
and we've had follow-up emails about it

00:27:56,500 --> 00:28:00,460
and it's not just the pie that has an

00:27:58,510 --> 00:28:02,350
issue here but a number of low-end

00:28:00,460 --> 00:28:07,540
tablets and a huge amount of other arm s

00:28:02,350 --> 00:28:10,690
PCs and so the play foundation escalated

00:28:07,540 --> 00:28:13,050
it to Broadcom Cyprus and there is now a

00:28:10,690 --> 00:28:16,540
combination a conversation happening

00:28:13,050 --> 00:28:19,840
between the PI foundations lawyers

00:28:16,540 --> 00:28:21,720
Cyprus lawyers and Broadcom lawyers so I

00:28:19,840 --> 00:28:25,750
don't ever expect to get that resolved

00:28:21,720 --> 00:28:28,900
and we're looking like the PI foundation

00:28:25,750 --> 00:28:30,640
is actively working to look at whether

00:28:28,900 --> 00:28:33,970
they can just license it themselves

00:28:30,640 --> 00:28:36,040
because it is PI specific and you know

00:28:33,970 --> 00:28:38,650
their rate is other discussions going on

00:28:36,040 --> 00:28:41,260
upstream for other devices as well and

00:28:38,650 --> 00:28:43,570
we're hoping we'll get there the

00:28:41,260 --> 00:28:45,760
Bluetooth firmware the firmware will

00:28:43,570 --> 00:28:48,250
actually run with the built-in default

00:28:45,760 --> 00:28:51,490
firmware it has issues and it's not

00:28:48,250 --> 00:28:53,530
particularly stable I'm hoping we should

00:28:51,490 --> 00:28:55,270
be able to get the the firmware for that

00:28:53,530 --> 00:28:59,200
into the upstream kernel real soon now

00:28:55,270 --> 00:29:02,800
so again the stuff like that that's

00:28:59,200 --> 00:29:05,020
happening and there's a bunch of other

00:29:02,800 --> 00:29:07,960
drivers and improvements that are

00:29:05,020 --> 00:29:11,820
happening of course it just never

00:29:07,960 --> 00:29:11,820
happens as fast as everyone would like

00:29:20,300 --> 00:29:24,290
yes sir the only thing I wanted to

00:29:22,700 --> 00:29:25,400
mention for here I mentioned Minimum

00:29:24,290 --> 00:29:29,210
Viable Product

00:29:25,400 --> 00:29:32,390
a lot of the arm devices we support you

00:29:29,210 --> 00:29:35,390
know a USB SD card slot

00:29:32,390 --> 00:29:37,010
maybe SATA and serial console in a lot

00:29:35,390 --> 00:29:38,810
of cases that display doesn't work and

00:29:37,010 --> 00:29:41,330
things like that and we enable them

00:29:38,810 --> 00:29:45,100
because you know the people that tend to

00:29:41,330 --> 00:29:47,840
use those devices are a lot more

00:29:45,100 --> 00:29:50,510
computer savvy and and know what a USB

00:29:47,840 --> 00:29:52,670
TTL is and things like that when it came

00:29:50,510 --> 00:29:54,200
to the Raspberry Pi there was no way in

00:29:52,670 --> 00:29:55,970
hell I was going to announce that we had

00:29:54,200 --> 00:29:58,660
Raspberry Pi support if they couldn't

00:29:55,970 --> 00:30:01,400
plug in a keyboard and a mouse and

00:29:58,660 --> 00:30:03,170
basically get output like this and a

00:30:01,400 --> 00:30:06,710
graphical display and various other bits

00:30:03,170 --> 00:30:09,290
and pieces so just and like the fedora

00:30:06,710 --> 00:30:10,670
arm team is relatively small and so I

00:30:09,290 --> 00:30:14,060
didn't want to get into a situation

00:30:10,670 --> 00:30:15,770
where we had a million users download

00:30:14,060 --> 00:30:17,420
and try and use their Raspberry Pi and I

00:30:15,770 --> 00:30:20,420
said oh you have to go on spend another

00:30:17,420 --> 00:30:24,290
three four bucks and get a USB TTL so

00:30:20,420 --> 00:30:26,600
when I added PI support I had we have to

00:30:24,290 --> 00:30:29,660
have a minimum viable product we have to

00:30:26,600 --> 00:30:31,670
have HDMI output we have to have USB

00:30:29,660 --> 00:30:34,070
keyboard mouse we have to be able to get

00:30:31,670 --> 00:30:39,290
xfce or something like that up and

00:30:34,070 --> 00:30:42,260
running so that you know the user will

00:30:39,290 --> 00:30:45,380
plug in what they expect and so Fedora

00:30:42,260 --> 00:30:48,860
25 was when we landed what I considered

00:30:45,380 --> 00:30:51,140
the Minimum Viable Product 1 SD card you

00:30:48,860 --> 00:30:53,840
could poke it plug it into a PI 2 or a

00:30:51,140 --> 00:30:55,820
PI 3 it would automatically boot up and

00:30:53,840 --> 00:30:58,460
like literally you can just dealer it

00:30:55,820 --> 00:31:00,620
out on windows it is the one device that

00:30:58,460 --> 00:31:03,710
the SD card for all our images is set up

00:31:00,620 --> 00:31:05,660
to boot on and so you can literally DD

00:31:03,710 --> 00:31:09,020
it out plug it in boot it up and you'll

00:31:05,660 --> 00:31:11,690
get to a login prompt so so that's why I

00:31:09,020 --> 00:31:13,940
felt like as I mentioned we had support

00:31:11,690 --> 00:31:16,100
there since about Fedora 22 but it

00:31:13,940 --> 00:31:18,800
wasn't what I consider the minimal

00:31:16,100 --> 00:31:24,290
Viable Product for the average Raspberry

00:31:18,800 --> 00:31:26,960
Pi user I don't think we need to go into

00:31:24,290 --> 00:31:30,260
huge amounts of detail and we use you

00:31:26,960 --> 00:31:30,740
boot on top of the PI firmware raspbian

00:31:30,260 --> 00:31:35,450
boot

00:31:30,740 --> 00:31:37,700
the colonel directly but you boot gives

00:31:35,450 --> 00:31:41,720
us the ability to put multiple kernels

00:31:37,700 --> 00:31:44,750
in the art a art 64 you actually get it

00:31:41,720 --> 00:31:48,980
boots then grew up via UEFI and you get

00:31:44,750 --> 00:31:52,370
the standard grub menu in Fedora 25 good

00:31:48,980 --> 00:31:57,410
too many numbers I'm in Fedora 29 on V 7

00:31:52,370 --> 00:31:59,690
will also have grub so in both on 32 and

00:31:57,410 --> 00:32:01,580
64-bit arm you'll get exactly the same

00:31:59,690 --> 00:32:08,960
experience as you get on your Intel

00:32:01,580 --> 00:32:12,500
laptop yes so like and obviously once we

00:32:08,960 --> 00:32:15,260
had a Minimum Viable Product we sort of

00:32:12,500 --> 00:32:19,160
extended stuff you know Wi-Fi support

00:32:15,260 --> 00:32:21,860
HDMI audio video that was more stable

00:32:19,160 --> 00:32:24,770
the problems we had with black screens

00:32:21,860 --> 00:32:31,270
from 25 to 26 was an order of magnitude

00:32:24,770 --> 00:32:31,270
lower we've gone into why I'm 64 support

00:32:32,860 --> 00:32:40,910
the Raspberry Pi 3 plus was an

00:32:38,990 --> 00:32:46,280
interesting turning point I mentioned

00:32:40,910 --> 00:32:51,550
last year I had meeting with Evan and

00:32:46,280 --> 00:32:55,850
the PI foundation we had support in

00:32:51,550 --> 00:32:59,840
fedora 28ga for the Raspberry Pi 3 plus

00:32:55,850 --> 00:33:01,700
I actually got an email from Evan about

00:32:59,840 --> 00:33:03,110
a month before the 3 plus was announced

00:33:01,700 --> 00:33:06,080
and basically just saying what's your

00:33:03,110 --> 00:33:09,020
shipping address and a 3 plus arrived in

00:33:06,080 --> 00:33:11,090
the mail about a month before and so we

00:33:09,020 --> 00:33:12,650
had an opportunity to bootstrap this and

00:33:11,090 --> 00:33:14,630
get firmware and various other bits and

00:33:12,650 --> 00:33:17,840
pieces into place so that when it was

00:33:14,630 --> 00:33:21,860
announced and we missed it getting I

00:33:17,840 --> 00:33:27,679
think one bit needed into like the beta

00:33:21,860 --> 00:33:29,720
freeze by I think about 12 hours so beta

00:33:27,679 --> 00:33:32,450
didn't actually have support for the 3

00:33:29,720 --> 00:33:36,020
plus but the nightly soon after right

00:33:32,450 --> 00:33:38,929
after when we unfroze did and so that

00:33:36,020 --> 00:33:41,300
was incredible and actually quite cool

00:33:38,929 --> 00:33:43,700
because like when f28 came out most

00:33:41,300 --> 00:33:44,630
people going Wednesday 3 plus going to

00:33:43,700 --> 00:33:51,500
be supported

00:33:44,630 --> 00:33:54,650
years so that that was fantastic so the

00:33:51,500 --> 00:33:57,200
future one of the biggest problems and

00:33:54,650 --> 00:34:00,790
one of the biggest support issues we

00:33:57,200 --> 00:34:03,200
have and it's not just fedora but it is

00:34:00,790 --> 00:34:06,890
distributions that aren't raspbian have

00:34:03,200 --> 00:34:10,220
is that people go oh I've enabled this

00:34:06,890 --> 00:34:13,879
hat in the config text file and it

00:34:10,220 --> 00:34:17,330
doesn't work we don't support it like

00:34:13,879 --> 00:34:19,669
that well in Fedora 29 and I need to do

00:34:17,330 --> 00:34:22,820
some testing and and we've got a few

00:34:19,669 --> 00:34:25,280
bits to sort out but in Fedora 29 the

00:34:22,820 --> 00:34:27,530
vast majority of config techs should

00:34:25,280 --> 00:34:30,889
work just like it does in raspbian some

00:34:27,530 --> 00:34:32,899
of it does now it won't all like so any

00:34:30,889 --> 00:34:35,240
of the stuff that's around the VC for

00:34:32,899 --> 00:34:37,700
driver versus the close driver won't

00:34:35,240 --> 00:34:40,850
work but for the vast majority of cases

00:34:37,700 --> 00:34:43,370
the config text files and that's

00:34:40,850 --> 00:34:45,950
fantastic because the PI foundation and

00:34:43,370 --> 00:34:47,780
the entire ecosystem around the

00:34:45,950 --> 00:34:49,909
Raspberry Pi has all this documentation

00:34:47,780 --> 00:34:51,530
where they say enable this in the config

00:34:49,909 --> 00:34:55,129
text so

00:34:51,530 --> 00:34:57,380
fedora suzy all the other distros have

00:34:55,129 --> 00:35:00,500
been working with the PI foundation to

00:34:57,380 --> 00:35:03,680
ensure that this happens so it enables

00:35:00,500 --> 00:35:07,820
us to much more easily support hats and

00:35:03,680 --> 00:35:12,470
cameras and various things but it brings

00:35:07,820 --> 00:35:14,570
us much closer to raspbian and so we

00:35:12,470 --> 00:35:22,760
don't have to go here where the

00:35:14,570 --> 00:35:24,440
exception not the norm and so we've got

00:35:22,760 --> 00:35:26,180
some stuff I need to deal with around

00:35:24,440 --> 00:35:31,660
you boot and I'm hoping that that should

00:35:26,180 --> 00:35:34,720
be in place in time for beta camera

00:35:31,660 --> 00:35:37,310
there is a whole bunch of patch series

00:35:34,720 --> 00:35:39,740
that have been posted that should make

00:35:37,310 --> 00:35:42,590
the camera work a part of that is

00:35:39,740 --> 00:35:46,930
waiting for me to test and part of that

00:35:42,590 --> 00:35:46,930
is getting the config tech stuff working

00:35:47,620 --> 00:35:55,490
but things around the camera have had

00:35:53,120 --> 00:35:57,110
they've had to like the person getting

00:35:55,490 --> 00:35:58,430
this driver up streamers had to have

00:35:57,110 --> 00:36:02,119
changes in the core

00:35:58,430 --> 00:36:03,650
for Linux stack and people who said oh

00:36:02,119 --> 00:36:05,780
why don't you just write this book well

00:36:03,650 --> 00:36:08,869
one I'm not a kernel developer of that

00:36:05,780 --> 00:36:10,400
night until you need Broadcom NDA's for

00:36:08,869 --> 00:36:14,300
hardware Docs and various other bits and

00:36:10,400 --> 00:36:17,569
pieces it probably the camera support in

00:36:14,300 --> 00:36:21,319
particular probably won't land in f29 GA

00:36:17,569 --> 00:36:24,800
but I'm hoping and we'll probably have a

00:36:21,319 --> 00:36:27,440
419 kernel as a zero day update or

00:36:24,800 --> 00:36:29,480
fairly close and I'm looking at Laura

00:36:27,440 --> 00:36:31,040
and she's not screaming at me so I'm

00:36:29,480 --> 00:36:34,730
pretty sure I'm not completely wrong

00:36:31,040 --> 00:36:37,280
there and so I'm hoping very early in

00:36:34,730 --> 00:36:40,280
the f29 cycle we should be able to use

00:36:37,280 --> 00:36:41,540
the camera my brothers will be very

00:36:40,280 --> 00:36:49,130
happy because they want to use it on the

00:36:41,540 --> 00:36:51,550
farm official touchscreen it needs two

00:36:49,130 --> 00:36:54,170
bits it has the actual touch interface

00:36:51,550 --> 00:36:56,450
the driver for that's not quite upstream

00:36:54,170 --> 00:36:59,059
yet and it needs support for the DSi

00:36:56,450 --> 00:37:01,730
interface most of that is upstream but

00:36:59,059 --> 00:37:06,099
it needs a bunch of glue also probably

00:37:01,730 --> 00:37:08,930
needs a config text support but again

00:37:06,099 --> 00:37:12,260
hopefully getting that in f29

00:37:08,930 --> 00:37:15,410
I know Beck's and the ambassador's with

00:37:12,260 --> 00:37:17,329
the federal Raider will be very happy

00:37:15,410 --> 00:37:23,329
about that I have one of those sitting

00:37:17,329 --> 00:37:25,369
on my desk at home and then beyond once

00:37:23,329 --> 00:37:28,849
we get the config tech support it

00:37:25,369 --> 00:37:32,720
enables us to enable hats and there's a

00:37:28,849 --> 00:37:34,369
vast array of hats in the ecosystem

00:37:32,720 --> 00:37:36,650
there's lots of people that want to use

00:37:34,369 --> 00:37:38,990
fedora on there are three pies for

00:37:36,650 --> 00:37:41,619
various audio stuff with the various

00:37:38,990 --> 00:37:43,849
audio file hats that you can put on top

00:37:41,619 --> 00:37:46,849
I'm sure you could probably get a

00:37:43,849 --> 00:37:50,319
hundred dollar audiophile Ethernet cable

00:37:46,849 --> 00:37:52,849
for your Raspberry Pi and so that's

00:37:50,319 --> 00:37:55,730
official touchscreen an official camera

00:37:52,849 --> 00:37:59,059
support is something that I get almost

00:37:55,730 --> 00:38:00,770
more queries about than I did so in the

00:37:59,059 --> 00:38:04,160
five years it took us to support the

00:38:00,770 --> 00:38:05,809
Raspberry Pi I think I ever ibly you

00:38:04,160 --> 00:38:08,809
know one query a day as to when it was

00:38:05,809 --> 00:38:11,099
going to be supported when the PI 2 came

00:38:08,809 --> 00:38:14,489
out that went up to probably you

00:38:11,099 --> 00:38:15,719
ten queries an hour level the

00:38:14,489 --> 00:38:20,579
touchscreen and the camera support

00:38:15,719 --> 00:38:22,739
aren't that quite that obviously hat

00:38:20,579 --> 00:38:26,009
support a lot of people want support for

00:38:22,739 --> 00:38:29,569
things like the sense hat and and then

00:38:26,009 --> 00:38:31,979
basically just stuff in the ecosystem

00:38:29,569 --> 00:38:34,259
part of the issue there is that a lot of

00:38:31,979 --> 00:38:37,259
the Hat support is involved Maestri

00:38:34,259 --> 00:38:40,049
overlays and the device tree overlays

00:38:37,259 --> 00:38:42,959
that exist for the upstream Raspberry Pi

00:38:40,049 --> 00:38:44,670
foundation kernel are good reference

00:38:42,959 --> 00:38:45,839
points reporting to the upstream model

00:38:44,670 --> 00:38:47,249
but they can't be dropped in place

00:38:45,839 --> 00:38:49,289
they're not going to be able to work as

00:38:47,249 --> 00:38:52,410
is so there is some porting some of them

00:38:49,289 --> 00:38:54,930
just will never be portable but most of

00:38:52,410 --> 00:38:57,690
them can be fixed and applied I've done

00:38:54,930 --> 00:39:01,170
some basic work in theory to get this

00:38:57,690 --> 00:39:04,410
ready to go when the config file

00:39:01,170 --> 00:39:05,910
pass-through actually works so it's

00:39:04,410 --> 00:39:07,949
totally doable and I imagine that a lot

00:39:05,910 --> 00:39:11,640
of the hats will very quickly get proper

00:39:07,949 --> 00:39:13,319
upstream support well and and like some

00:39:11,640 --> 00:39:15,420
of the hats will be the same and just

00:39:13,319 --> 00:39:18,089
work and again we've done a bunch of

00:39:15,420 --> 00:39:22,109
work with the PI foundation as to how

00:39:18,089 --> 00:39:23,789
that works and I mean ultimately now

00:39:22,109 --> 00:39:26,339
they're more focused on getting things

00:39:23,789 --> 00:39:28,589
like the open VC for driver working and

00:39:26,339 --> 00:39:30,719
things like that all the work that we've

00:39:28,589 --> 00:39:33,529
done in fedora actually ends up being a

00:39:30,719 --> 00:39:37,219
really good enabler for them and like

00:39:33,529 --> 00:39:40,619
we've belted out a huge amounts of

00:39:37,219 --> 00:39:43,109
issues with the VC for and the edid

00:39:40,619 --> 00:39:45,089
detection staff that they now don't need

00:39:43,109 --> 00:39:49,739
to do and so they're not starting from

00:39:45,089 --> 00:39:52,650
the ground zero like we were it was very

00:39:49,739 --> 00:39:55,499
amusing to me when F Fedora 25 landed

00:39:52,650 --> 00:39:58,319
where you know we have a five year old

00:39:55,499 --> 00:40:02,579
device and Fedora as a very old

00:39:58,319 --> 00:40:06,329
distribution and I was having sort of

00:40:02,579 --> 00:40:10,199
early adopter problems with such a

00:40:06,329 --> 00:40:11,999
device that was five years old I get

00:40:10,199 --> 00:40:15,599
over like um and you know some of the

00:40:11,999 --> 00:40:18,890
other stuff is like the GPIO stuff that

00:40:15,599 --> 00:40:21,779
the PI Foundation uses is an end-of-life

00:40:18,890 --> 00:40:24,510
deprecated interface in the kernel that

00:40:21,779 --> 00:40:27,150
basically is extra

00:40:24,510 --> 00:40:28,590
insecure I'm so funnily enough we've

00:40:27,150 --> 00:40:30,240
turned that off in the Fedora kernel

00:40:28,590 --> 00:40:34,470
because it's deprecated and I never want

00:40:30,240 --> 00:40:38,730
to support it but the Python GPIO

00:40:34,470 --> 00:40:42,410
bindings if you run them on Fedora it

00:40:38,730 --> 00:40:56,220
says this is not a Raspberry Pi go away

00:40:42,410 --> 00:41:00,410
and so there's a new library libgdx and

00:40:56,220 --> 00:41:04,530
what I'm hoping is that the our Pi GPIO

00:41:00,410 --> 00:41:07,020
Python bindings we can get upstream to

00:41:04,530 --> 00:41:08,940
accept some patches where it will use

00:41:07,020 --> 00:41:11,850
that interface and if that interface

00:41:08,940 --> 00:41:14,960
into not available it will fall back to

00:41:11,850 --> 00:41:17,400
the old interface and people are like

00:41:14,960 --> 00:41:19,170
like I've spoken to people about it and

00:41:17,400 --> 00:41:22,170
they're like oh it'll be just easier to

00:41:19,170 --> 00:41:23,970
copy it and have you know a clone of it

00:41:22,170 --> 00:41:26,280
and it's like no that's not going to

00:41:23,970 --> 00:41:28,740
work because there is literally 10,000

00:41:26,280 --> 00:41:32,010
how-to guide two out there that say pip

00:41:28,740 --> 00:41:34,830
install this library and a bit similar

00:41:32,010 --> 00:41:38,000
to the config text staff or the

00:41:34,830 --> 00:41:40,440
documentation says it so it's like if

00:41:38,000 --> 00:41:43,560
your raspberry and do this if your

00:41:40,440 --> 00:41:46,440
Fedora do that for you know a ten year

00:41:43,560 --> 00:41:49,980
old working off a worksheet in a lab

00:41:46,440 --> 00:41:52,170
that's not going to work so you know we

00:41:49,980 --> 00:41:53,940
need to get support into the up strip

00:41:52,170 --> 00:41:55,850
and like I explain that to people and

00:41:53,940 --> 00:41:58,560
they're like oh yeah that makes sense

00:41:55,850 --> 00:42:01,410
because ultimately we're not going to be

00:41:58,560 --> 00:42:04,080
able to go out to every like how-to

00:42:01,410 --> 00:42:07,140
guide and get them to add if raspbian do

00:42:04,080 --> 00:42:09,210
this else you know do this and so it's

00:42:07,140 --> 00:42:10,800
stuff like that that people don't

00:42:09,210 --> 00:42:12,630
necessarily understand all it's just

00:42:10,800 --> 00:42:13,350
going to be quicker to recreate it no

00:42:12,630 --> 00:42:15,840
it's not

00:42:13,350 --> 00:42:20,400
and so it's things like that that I'm

00:42:15,840 --> 00:42:21,660
hoping we'll get support for so even

00:42:20,400 --> 00:42:23,370
though it is Fedora all the

00:42:21,660 --> 00:42:24,660
documentation out there all the

00:42:23,370 --> 00:42:26,820
classroom guides and things like that

00:42:24,660 --> 00:42:30,300
will work just as if it was raspbian

00:42:26,820 --> 00:42:32,580
we're not there yet but this is what I'm

00:42:30,300 --> 00:42:36,240
looking to do and if anyone's any good

00:42:32,580 --> 00:42:37,560
at writing Python bindings or things

00:42:36,240 --> 00:42:38,400
like that and want to get involved in

00:42:37,560 --> 00:42:46,770
that sort of

00:42:38,400 --> 00:42:57,059
come and let me know do we have any

00:42:46,770 --> 00:42:58,710
questions um so the question is when is

00:42:57,059 --> 00:43:02,579
camera support going to be a value will

00:42:58,710 --> 00:43:06,210
leave he's trolling us Anna Thoreau 25

00:43:02,579 --> 00:43:08,640
go back in time or what's the video

00:43:06,210 --> 00:43:17,210
afterwards you can see where I talked

00:43:08,640 --> 00:43:17,210
about it about 10 minutes ago no one

00:43:27,690 --> 00:43:32,339
so the question is even though the talks

00:43:29,549 --> 00:43:38,130
about raspberry pi what is the best arm

00:43:32,339 --> 00:43:40,799
device to use on Fedora my my answer to

00:43:38,130 --> 00:43:42,180
that is always another question the

00:43:40,799 --> 00:43:46,950
question is what are you going to do

00:43:42,180 --> 00:43:51,780
with it and and we support without

00:43:46,950 --> 00:43:57,059
exaggeration 200 plus devices on fedora

00:43:51,780 --> 00:43:59,549
arm 32 and 64-bit if what you want to do

00:43:57,059 --> 00:44:01,859
is like turn LEDs on and off and maybe

00:43:59,549 --> 00:44:06,059
run some Bluetooth house stuff you know

00:44:01,859 --> 00:44:07,440
the PI is a perfectly fine device you

00:44:06,059 --> 00:44:09,359
know if you want to do AI and machine

00:44:07,440 --> 00:44:11,400
learning the PI is not the device for

00:44:09,359 --> 00:44:14,130
that it just doesn't have the power if

00:44:11,400 --> 00:44:15,900
you want to run a nose bugs you know the

00:44:14,130 --> 00:44:18,780
PI is not that even though hundreds and

00:44:15,900 --> 00:44:21,359
hundreds and hundreds of people do you

00:44:18,780 --> 00:44:24,180
know the orange PI series have four USB

00:44:21,359 --> 00:44:29,099
controllers on board that run at 480

00:44:24,180 --> 00:44:31,760
megabits a second and have proper SOC

00:44:29,099 --> 00:44:35,250
attached Gigabit Ethernet as opposed to

00:44:31,760 --> 00:44:37,740
us like 100 Meg or in the case of the

00:44:35,250 --> 00:44:39,240
three plus Gigabit Ethernet that runs at

00:44:37,740 --> 00:44:45,150
around 300 Meg if you're running

00:44:39,240 --> 00:44:47,430
raspbian so it basically depends on what

00:44:45,150 --> 00:44:50,430
you want like you know we have a bunch

00:44:47,430 --> 00:44:52,410
like the jets and devices run known

00:44:50,430 --> 00:44:54,960
desktop for you celebrated and really

00:44:52,410 --> 00:44:57,390
really well the imx6 stuff along with

00:44:54,960 --> 00:44:59,609
the PI and the dragon board

00:44:57,390 --> 00:45:02,789
410 will all run fully accelerated

00:44:59,609 --> 00:45:04,710
wayland so you know they're all not bad

00:45:02,789 --> 00:45:08,520
but you know a gig of ram is just really

00:45:04,710 --> 00:45:10,500
not enough what we land there was a

00:45:08,520 --> 00:45:13,260
patch that landed in GD and the other

00:45:10,500 --> 00:45:19,470
day which will literally reduce the

00:45:13,260 --> 00:45:22,170
shell utilization by 230 odd Meg which

00:45:19,470 --> 00:45:24,510
you know when it comes to the PI's 25

00:45:22,170 --> 00:45:27,930
you're 23 percent of you memory

00:45:24,510 --> 00:45:29,700
utilization there's some patches going

00:45:27,930 --> 00:45:31,410
into package kit various other bits and

00:45:29,700 --> 00:45:33,900
pieces and again that will improve

00:45:31,410 --> 00:45:37,680
utilization across all the arm ecosystem

00:45:33,900 --> 00:45:40,980
and even even the cheap low and x86

00:45:37,680 --> 00:45:41,570
stuff as well so yeah it very much

00:45:40,980 --> 00:45:43,430
depends on

00:45:41,570 --> 00:45:46,780
what you want to do and how much you

00:45:43,430 --> 00:45:46,780
want to spend exactly

00:45:48,460 --> 00:46:02,630
till the question is is there anything

00:45:59,960 --> 00:46:07,730
better on fedora than raspbian for the

00:46:02,630 --> 00:46:09,410
Raspberry Pi everything even the things

00:46:07,730 --> 00:46:14,840
that don't work aren't better because

00:46:09,410 --> 00:46:18,350
it's Fedora the feedback I generally get

00:46:14,840 --> 00:46:20,840
from the people that use Fedora on the

00:46:18,350 --> 00:46:24,470
Raspberry Pi is that we have things like

00:46:20,840 --> 00:46:28,210
kubernetes and docker and a lot of the

00:46:24,470 --> 00:46:31,790
server ecosystem where it just works

00:46:28,210 --> 00:46:34,070
people like the fact that because we're

00:46:31,790 --> 00:46:35,780
using the upstream Fedora kernel they

00:46:34,070 --> 00:46:38,300
can boot up there as we pie and it's

00:46:35,780 --> 00:46:40,730
running SELinux just like their x86

00:46:38,300 --> 00:46:43,040
desktop you know they can use the server

00:46:40,730 --> 00:46:47,110
edition and cockpit is there and they

00:46:43,040 --> 00:46:50,900
can you know and so I think probably

00:46:47,110 --> 00:46:54,290
like if you want to use hats and blink

00:46:50,900 --> 00:46:56,900
you know LEDs and that sort of stuff

00:46:54,290 --> 00:46:59,570
whereas being at the moment is by far

00:46:56,900 --> 00:47:02,840
the improved thing because they're

00:46:59,570 --> 00:47:04,910
focusing on that device like if you try

00:47:02,840 --> 00:47:06,620
and use raspbian on other devices it'll

00:47:04,910 --> 00:47:11,030
work but you'll have a substandard

00:47:06,620 --> 00:47:13,280
experience so any of the server-side

00:47:11,030 --> 00:47:17,090
stuff cloud stuff docker various other

00:47:13,280 --> 00:47:19,960
bits and pieces works because it's

00:47:17,090 --> 00:47:22,760
Fedora we have the latest and greatest

00:47:19,960 --> 00:47:25,460
you know libraries and optimizations and

00:47:22,760 --> 00:47:28,250
meza and stuff like that two years ago I

00:47:25,460 --> 00:47:31,190
went to my first one ro Connect Lennar

00:47:28,250 --> 00:47:33,490
Oh for those that don't know is a bit

00:47:31,190 --> 00:47:39,650
like OpenStack foundation for the arm

00:47:33,490 --> 00:47:41,840
ecosystem it's a organization where SOC

00:47:39,650 --> 00:47:44,990
manufacturers and all of that congregate

00:47:41,840 --> 00:47:48,260
to talk about the arm Eco sits or open

00:47:44,990 --> 00:47:50,810
source in the arm ecosystem and I ran

00:47:48,260 --> 00:47:54,050
into a vast array of kernel developers

00:47:50,810 --> 00:47:55,430
that had been I've been dealing with

00:47:54,050 --> 00:47:57,020
upstream for support for

00:47:55,430 --> 00:48:00,410
everything from the pie through to

00:47:57,020 --> 00:48:02,720
whatever and they were like holy God

00:48:00,410 --> 00:48:04,640
you're actually here because like the

00:48:02,720 --> 00:48:06,140
arm SOC kernel maintainer had been

00:48:04,640 --> 00:48:11,630
asking me for five years when I was

00:48:06,140 --> 00:48:14,030
coming and they just said the thing we

00:48:11,630 --> 00:48:17,270
love about Fedora all the latest

00:48:14,030 --> 00:48:19,640
packages stable it works exactly the way

00:48:17,270 --> 00:48:22,280
Fedora does on my laptop and they were

00:48:19,640 --> 00:48:25,339
all like even the kernel where we boot

00:48:22,280 --> 00:48:29,540
our device and we have serial console

00:48:25,339 --> 00:48:31,730
USB Ethernet and storage is great and

00:48:29,540 --> 00:48:33,470
they leave the default Fedora and kernel

00:48:31,730 --> 00:48:35,750
in place even though their kernel

00:48:33,470 --> 00:48:37,460
developers so that when they blow up

00:48:35,750 --> 00:48:39,200
their kernel and the device ceases to

00:48:37,460 --> 00:48:41,540
boot they can just select Fedora from

00:48:39,200 --> 00:48:42,800
the menu of the Fedora kernel from the

00:48:41,540 --> 00:48:43,569
menu and they can get back up and

00:48:42,800 --> 00:48:47,210
running again

00:48:43,569 --> 00:48:48,859
I've spent vast array of time looking

00:48:47,210 --> 00:48:51,230
through all the libraries to make sure

00:48:48,859 --> 00:48:54,410
we have all the arm optimizations in

00:48:51,230 --> 00:48:56,329
place and everything else and so the

00:48:54,410 --> 00:49:00,140
feedback I get from a lot of people is

00:48:56,329 --> 00:49:02,030
that SELinux just works and you know

00:49:00,140 --> 00:49:04,730
there are some patches that I work with

00:49:02,030 --> 00:49:07,460
upstream form where we literally tripled

00:49:04,730 --> 00:49:10,549
the throughput I think between fedora 25

00:49:07,460 --> 00:49:12,170
and 26 of the MMC stuff so like we're

00:49:10,549 --> 00:49:15,530
not even the fastest but we're certainly

00:49:12,170 --> 00:49:17,599
getting there but the general thing is

00:49:15,530 --> 00:49:19,730
that it's like fedora and they can like

00:49:17,599 --> 00:49:22,579
I see blog posts are how to build

00:49:19,730 --> 00:49:25,520
kubernetes on your arse berry pie and I

00:49:22,579 --> 00:49:30,500
reply to them or you can just run fedora

00:49:25,520 --> 00:49:32,359
and go DNF install kubernetes and a lot

00:49:30,500 --> 00:49:34,130
of people do yeah I think the

00:49:32,359 --> 00:49:35,809
consistency is a big part of that I

00:49:34,130 --> 00:49:37,520
think you know being able to get this

00:49:35,809 --> 00:49:39,200
exact same fedora experience no matter

00:49:37,520 --> 00:49:41,180
what hardware you're running on is a

00:49:39,200 --> 00:49:44,960
really valuable selling point for why

00:49:41,180 --> 00:49:47,000
you would consider doing that and like I

00:49:44,960 --> 00:49:51,650
hope that we can get to a place where

00:49:47,000 --> 00:49:53,900
you know fedora is a reasonable choice

00:49:51,650 --> 00:49:57,589
to use it in the classroom for all these

00:49:53,900 --> 00:50:01,309
things you know I do support for the

00:49:57,589 --> 00:50:04,670
Raspberry Pi primarily in my own time

00:50:01,309 --> 00:50:06,680
like I have a love-hate relationship

00:50:04,670 --> 00:50:08,420
with the Raspberry Pi I generally

00:50:06,680 --> 00:50:09,330
actually refer to it as the raspberry

00:50:08,420 --> 00:50:11,280


00:50:09,330 --> 00:50:13,050
because it's caused me so much stress

00:50:11,280 --> 00:50:18,090
but at the same time it's a huge

00:50:13,050 --> 00:50:20,640
ecosystem and I want to get all the

00:50:18,090 --> 00:50:22,680
stuff working camera display and

00:50:20,640 --> 00:50:27,240
everything so it is all just plug and

00:50:22,680 --> 00:50:28,800
play like raspbian if you could clone me

00:50:27,240 --> 00:50:30,690
three or four times or someone would

00:50:28,800 --> 00:50:33,780
like to come along and help out with the

00:50:30,690 --> 00:50:36,270
Python bindings for GPIO and things like

00:50:33,780 --> 00:50:39,210
that you know it's just a small project

00:50:36,270 --> 00:50:41,130
that people can work on an hour here an

00:50:39,210 --> 00:50:43,920
hour hour there but it will greatly help

00:50:41,130 --> 00:50:46,740
the Fedora ecosystem and in fact the

00:50:43,920 --> 00:50:50,790
Linux ecosystem in general on the

00:50:46,740 --> 00:50:54,240
Raspberry Pi and help expand it and you

00:50:50,790 --> 00:50:57,150
know I have semi regular conversations

00:50:54,240 --> 00:50:59,580
sometimes we spot sometimes we think how

00:50:57,150 --> 00:51:01,440
we can get fedora better supported so

00:50:59,580 --> 00:51:03,420
that it can be used in classrooms on the

00:51:01,440 --> 00:51:07,200
Raspberry Pi there is a lot of interest

00:51:03,420 --> 00:51:08,760
in doing so and we are well over our x

00:51:07,200 --> 00:51:10,250
line so thank you all for coming out

00:51:08,760 --> 00:51:14,760
thank you

00:51:10,250 --> 00:51:14,760

YouTube URL: https://www.youtube.com/watch?v=QMEI9ugcfhU


