Title: Flock 2018 - What next with spec files? [Part 1]
Publication date: 2018-08-29
Playlist: Flock 2018
Description: 
	Wednesday, August 8, 2018
2:30am - 3:20pm
@Hamburg 1+2

Talk: What next with spec files?
Presenters: Florian Festi

Description: The basics of RPM spec files have been unchanged for decades. I want to survey for use cases that no longer fit the traditional model or need new features. We are for now going to focus on larger groups of packages. E.g. packages in a given programming language or packages with a given function like language packs or add-on documentation.

Issue could be
* Difficulties moving from one interpreter version to another
* Supporting multiple versions of a language in parallel
* Not enough flexibility when creating sub packages
* The dependency system not quite cutting it
Captions: 
	00:00:00,030 --> 00:00:09,019
so sorry so that's so don't know me I'm

00:00:03,840 --> 00:00:13,370
Tori feste I'm one of the rpm developers

00:00:09,019 --> 00:00:16,920
set up this workshop to create a bit of

00:00:13,370 --> 00:00:20,550
user feedback on basically what we are

00:00:16,920 --> 00:00:30,599
going to do the next big around are

00:00:20,550 --> 00:00:33,840
features we are going to stop after so

00:00:30,599 --> 00:00:36,360
why we are doing this issue that has

00:00:33,840 --> 00:00:41,730
always played rpms that rpm developers

00:00:36,360 --> 00:00:43,980
are not I mean after dates and stuff but

00:00:41,730 --> 00:00:46,260
we're not really maintaining a huge set

00:00:43,980 --> 00:00:53,090
of packages so we always there's always

00:00:46,260 --> 00:00:56,309
a huge few from for my picture so that's

00:00:53,090 --> 00:00:58,410
more problems and less of a problem but

00:00:56,309 --> 00:01:01,500
even the features we implemented like

00:00:58,410 --> 00:01:04,799
the last couple of years or at least in

00:01:01,500 --> 00:01:09,470
my mind maybe panelist bit different on

00:01:04,799 --> 00:01:09,470
this but it's

00:01:09,749 --> 00:01:14,579
it's basically from the perspective of a

00:01:12,329 --> 00:01:17,219
user basically from the installation

00:01:14,579 --> 00:01:18,750
process so well yes all those

00:01:17,219 --> 00:01:21,090
descriptors are running and they are

00:01:18,750 --> 00:01:25,469
confusing and complicated that we don't

00:01:21,090 --> 00:01:27,840
like this so we had final triggers but

00:01:25,469 --> 00:01:31,740
it's not actually these are my mind not

00:01:27,840 --> 00:01:33,599
from an eye-catcher perspective yes

00:01:31,740 --> 00:01:36,149
simplify spectrum a lot and of course

00:01:33,599 --> 00:01:38,549
it's an considerations of like an ex

00:01:36,149 --> 00:01:42,750
identity simplifies packaging but it's

00:01:38,549 --> 00:01:46,259
not been like the main focus on on many

00:01:42,750 --> 00:01:49,250
stuff we do and what this obviously

00:01:46,259 --> 00:01:53,280
that's a problem and so I thought well

00:01:49,250 --> 00:01:54,959
if I'm in flock we can basically take

00:01:53,280 --> 00:01:59,310
the opportunity to get us some feedback

00:01:54,959 --> 00:02:06,869
and to get access to to maybe stuff that

00:01:59,310 --> 00:02:10,979
we are missing maybe as a prerequisite

00:02:06,869 --> 00:02:12,420
so that the interaction between RPM

00:02:10,979 --> 00:02:16,980
upstream and Fagaras always be an

00:02:12,420 --> 00:02:20,130
interesting one so obviously our period

00:02:16,980 --> 00:02:22,230
is a very red hat project with we have

00:02:20,130 --> 00:02:26,489
two and a half people working on on RPM

00:02:22,230 --> 00:02:29,040
and Fedora is basically from our point

00:02:26,489 --> 00:02:33,750
of view the purpose of fedora is being a

00:02:29,040 --> 00:02:36,329
test bed for the next rpm release maybe

00:02:33,750 --> 00:02:44,569
among some other minor things but that's

00:02:36,329 --> 00:02:47,579
the main it's also there's this weird

00:02:44,569 --> 00:02:49,620
interaction for what we are equipment

00:02:47,579 --> 00:02:52,349
for something new and you have to feel

00:02:49,620 --> 00:02:56,940
we should like push it into fedora and

00:02:52,349 --> 00:02:59,099
we are not really proud of fedora and so

00:02:56,940 --> 00:03:01,919
we always had a feeling like fedora

00:02:59,099 --> 00:03:03,930
needs to have its own opinion on what it

00:03:01,919 --> 00:03:07,069
actually wants from its package ancestor

00:03:03,930 --> 00:03:10,200
it's not like our crop to die tell

00:03:07,069 --> 00:03:13,110
fedora how packages should look like

00:03:10,200 --> 00:03:15,690
but another hand of course we do I mean

00:03:13,110 --> 00:03:18,510
if we limit any feature that's what you

00:03:15,690 --> 00:03:20,940
get it's not like you can choose you can

00:03:18,510 --> 00:03:32,130
choose not to use it which still makes

00:03:20,940 --> 00:03:35,250
me unhappy but so it's always been

00:03:32,130 --> 00:03:37,620
interesting makes it even more

00:03:35,250 --> 00:03:40,530
complicated is that rpm of course is

00:03:37,620 --> 00:03:42,870
also the packaging system for low of

00:03:40,530 --> 00:03:45,930
auto distribution so it's very important

00:03:42,870 --> 00:03:49,049
for us not to look like we're and

00:03:45,930 --> 00:03:51,030
redhead or fedora sandwich project so

00:03:49,049 --> 00:03:53,190
we've been working very hard on this the

00:03:51,030 --> 00:03:57,420
last couple of years I don't know it's

00:03:53,190 --> 00:04:00,390
long enough with this to know how things

00:03:57,420 --> 00:04:07,319
look like years ago where the

00:04:00,390 --> 00:04:10,500
communication was always today but we've

00:04:07,319 --> 00:04:14,040
come a long way to to present ourselves

00:04:10,500 --> 00:04:16,109
as an upstream that's independent and

00:04:14,040 --> 00:04:18,690
open from input from all our

00:04:16,109 --> 00:04:21,000
distribution that's something we stress

00:04:18,690 --> 00:04:22,760
a lot it's very important and to have to

00:04:21,000 --> 00:04:26,039
trust of order other of them

00:04:22,760 --> 00:04:29,250
distributions and it has actually paid

00:04:26,039 --> 00:04:36,210
off with many other distributions coming

00:04:29,250 --> 00:04:41,039
back to our online of development but

00:04:36,210 --> 00:04:45,830
still Fedora is something special and so

00:04:41,039 --> 00:04:45,830
I'm hoping for more

00:04:46,030 --> 00:04:53,060
the day I have a suspicion about but I

00:04:51,440 --> 00:04:58,640
don't really know and I want to find out

00:04:53,060 --> 00:05:00,560
today is I think that packaging problem

00:04:58,640 --> 00:05:03,380
in general is not that interesting I

00:05:00,560 --> 00:05:06,560
think the interesting thing is in my

00:05:03,380 --> 00:05:08,690
mind is there's 11 like Islands of

00:05:06,560 --> 00:05:10,400
packages that have special needs and two

00:05:08,690 --> 00:05:14,780
special things in that but probably

00:05:10,400 --> 00:05:16,940
worth looking into probably based on the

00:05:14,780 --> 00:05:19,340
languages that there are that

00:05:16,940 --> 00:05:23,120
implementing these packages I hear

00:05:19,340 --> 00:05:26,150
there's a big header all worked to get

00:05:23,120 --> 00:05:28,420
Python from the Python to being the

00:05:26,150 --> 00:05:31,220
default to switch it over to Python 3

00:05:28,420 --> 00:05:35,350
and my guess is there are a lot of other

00:05:31,220 --> 00:05:38,540
issues like that that are very

00:05:35,350 --> 00:05:41,930
time-consuming and and have special

00:05:38,540 --> 00:05:47,390
problems that probably or maybe need

00:05:41,930 --> 00:05:49,310
some support from rpm or at least may be

00:05:47,390 --> 00:05:51,350
supported better than we are doing today

00:05:49,310 --> 00:05:55,430
that's what I want to find out so I hope

00:05:51,350 --> 00:06:00,170
you all have like your small pile of

00:05:55,430 --> 00:06:02,300
packages that and you can basically tell

00:06:00,170 --> 00:06:07,100
a story of what that package is about

00:06:02,300 --> 00:06:09,860
and what what problems they run into so

00:06:07,100 --> 00:06:13,910
this is the workshop and the idea is

00:06:09,860 --> 00:06:19,220
that you work and I shop for five years

00:06:13,910 --> 00:06:22,430
and if you're all happy with how rpm

00:06:19,220 --> 00:06:25,040
works and your pictures are just fine

00:06:22,430 --> 00:06:29,650
we'll be like done in like five minutes

00:06:25,040 --> 00:06:32,020
which is also nice if not

00:06:29,650 --> 00:06:34,600
take a break for coffee and then you can

00:06:32,020 --> 00:06:41,520
continue for a second hour depending on

00:06:34,600 --> 00:06:44,650
how this goes I so many a few remarks on

00:06:41,520 --> 00:06:48,009
on features and rpm in general and and

00:06:44,650 --> 00:06:52,389
that may be good to get a discussion

00:06:48,009 --> 00:06:54,430
starter there's there there a couple of

00:06:52,389 --> 00:06:55,930
things that makes it difficult to add

00:06:54,430 --> 00:06:58,870
new features to rpm because they're

00:06:55,930 --> 00:07:02,889
pulsating forces trading in two

00:06:58,870 --> 00:07:05,199
different directions one of this is yeah

00:07:02,889 --> 00:07:08,110
everyone has the small little feature

00:07:05,199 --> 00:07:10,120
they want to have to get rid of each one

00:07:08,110 --> 00:07:14,169
line or two lines in this one package

00:07:10,120 --> 00:07:17,770
it's really really annoying but we want

00:07:14,169 --> 00:07:20,169
and I can tell you why because every

00:07:17,770 --> 00:07:22,000
feature we had its burden to all the

00:07:20,169 --> 00:07:24,130
packagers who need to know about it who

00:07:22,000 --> 00:07:28,840
need to look it up if they encounter it

00:07:24,130 --> 00:07:34,860
so having many small features that help

00:07:28,840 --> 00:07:37,570
with long things is actually adding

00:07:34,860 --> 00:07:39,310
costs that we would rather write to

00:07:37,570 --> 00:07:42,580
avoid I mean we already have too many

00:07:39,310 --> 00:07:44,500
features to be honest packages package

00:07:42,580 --> 00:07:46,870
installment is so complicated there was

00:07:44,500 --> 00:07:49,389
but he so many things you have to know

00:07:46,870 --> 00:07:52,030
about and on top of that you have the

00:07:49,389 --> 00:07:54,909
packaging guidelines that don't only

00:07:52,030 --> 00:07:56,229
tell you what features that are but how

00:07:54,909 --> 00:07:58,810
to use them how to use them properly

00:07:56,229 --> 00:08:01,030
which not to use which not to use in a

00:07:58,810 --> 00:08:03,789
special way that's too complicated

00:08:01,030 --> 00:08:07,539
already so and we added a lot of

00:08:03,789 --> 00:08:10,630
features of the last year so I'm

00:08:07,539 --> 00:08:12,430
hesitant to add small features unless

00:08:10,630 --> 00:08:14,800
there's a really good use case for it

00:08:12,430 --> 00:08:17,440
like either things that cannot be solved

00:08:14,800 --> 00:08:20,620
birthday or actually have an impact that

00:08:17,440 --> 00:08:25,300
after that odd sets the additional

00:08:20,620 --> 00:08:26,410
weight which for example five triggers

00:08:25,300 --> 00:08:28,840
clearly do

00:08:26,410 --> 00:08:32,050
being able to shrink the size of all the

00:08:28,840 --> 00:08:35,620
spec files a lot with their units and it

00:08:32,050 --> 00:08:39,090
justifies the additional feature even if

00:08:35,620 --> 00:08:41,350
it's a bit complicated in his nature

00:08:39,090 --> 00:08:44,860
then there's another very interesting

00:08:41,350 --> 00:08:51,070
thing that I've been thinking about this

00:08:44,860 --> 00:08:54,660
is where to put the control over what's

00:08:51,070 --> 00:08:57,940
happening and there's basically three

00:08:54,660 --> 00:09:01,090
places that are fighting over are

00:08:57,940 --> 00:09:03,010
struggling over over control what's

00:09:01,090 --> 00:09:05,050
happening that's four on of course rpm

00:09:03,010 --> 00:09:07,720
upstream which does stuff and that

00:09:05,050 --> 00:09:12,460
basically creates law and how things

00:09:07,720 --> 00:09:15,250
happens and has the forest off off of C

00:09:12,460 --> 00:09:16,420
code implementation behind it then

00:09:15,250 --> 00:09:19,210
there's the distribution which is

00:09:16,420 --> 00:09:22,240
currently in my estimation the weakest

00:09:19,210 --> 00:09:24,430
part because they are mainly down to

00:09:22,240 --> 00:09:26,580
policy and and and good will of the

00:09:24,430 --> 00:09:33,010
packager and then asset managers who are

00:09:26,580 --> 00:09:35,530
able to do some things and the what

00:09:33,010 --> 00:09:38,590
makes it complicated is that there's

00:09:35,530 --> 00:09:42,760
justification to push the control out to

00:09:38,590 --> 00:09:45,430
the details but about a hand you have at

00:09:42,760 --> 00:09:47,110
the burn of things being non-uniform and

00:09:45,430 --> 00:09:52,080
complicated and repeated all over the

00:09:47,110 --> 00:09:54,940
place so to maintain something that this

00:09:52,080 --> 00:09:56,890
can be work with it's important to

00:09:54,940 --> 00:09:59,640
basically pull back the control and

00:09:56,890 --> 00:10:04,150
centralize things in canonical form

00:09:59,640 --> 00:10:09,970
create policies to unify to make things

00:10:04,150 --> 00:10:12,410
look more uniform in there and that's

00:10:09,970 --> 00:10:18,949
that's something I'm clearly not too

00:10:12,410 --> 00:10:21,170
happy with in a way that the lot of

00:10:18,949 --> 00:10:23,059
things are done in the distributions but

00:10:21,170 --> 00:10:26,420
I'm not shared between distribution

00:10:23,059 --> 00:10:29,209
where our pair is not like gaining

00:10:26,420 --> 00:10:32,089
control by by applying a lot of force

00:10:29,209 --> 00:10:35,300
it's something I would just pray merely

00:10:32,089 --> 00:10:37,939
not that much for this discussion but in

00:10:35,300 --> 00:10:40,790
the long run I would the distribution

00:10:37,939 --> 00:10:44,899
coming together a closer in having share

00:10:40,790 --> 00:10:50,149
more ofter after things like my profile

00:10:44,899 --> 00:10:53,300
and send dependency generators basically

00:10:50,149 --> 00:10:56,629
rules how packages are done because this

00:10:53,300 --> 00:10:57,559
has run away quite a bit we have put it

00:10:56,629 --> 00:10:59,240
pulled it together

00:10:57,559 --> 00:11:05,139
to some extent but it's of course an

00:10:59,240 --> 00:11:05,139
ongoing struggle to keep that back

00:11:05,820 --> 00:11:09,440
guess what not a point of us

00:11:17,220 --> 00:11:24,809
so that's basically my introduction so I

00:11:21,629 --> 00:11:30,980
would start with Pacific collecting use

00:11:24,809 --> 00:11:35,429
cases and packages and so maybe he's

00:11:30,980 --> 00:11:55,920
started with we're talking to who's not

00:11:35,429 --> 00:12:10,939
maintaining any dishes five for us five

00:11:55,920 --> 00:12:17,790
for Less take notice 21s 50 on us $100

00:12:10,939 --> 00:12:22,889
more than 100 okay so we have I think

00:12:17,790 --> 00:12:26,569
the movement so we also set of packages

00:12:22,889 --> 00:12:26,569
he wants to showcase

00:12:27,660 --> 00:12:32,339
the questions are they are sets of

00:12:29,790 --> 00:12:36,050
packages that are special in some way

00:12:32,339 --> 00:12:45,800
and it may be interesting to look at for

00:12:36,050 --> 00:12:45,800
additional support to make them anyone

00:12:46,699 --> 00:12:55,670
go there okay so what's the problem with

00:12:51,120 --> 00:12:55,670
that what is what's the challenge

00:13:49,430 --> 00:14:06,860
and duplicates all the information that

00:13:52,790 --> 00:14:08,810
we already have okay so it's to

00:14:06,860 --> 00:14:12,370
something that make sure II puts Grodin

00:14:08,810 --> 00:14:12,370
on the package Shores is just annoying

00:14:20,710 --> 00:14:29,810
problem not only for Caroline we have

00:14:24,589 --> 00:14:34,520
multiple tools to generate spec files -

00:14:29,810 --> 00:14:36,740
who may be trust and there is a lot of

00:14:34,520 --> 00:14:39,290
things that this automatically generated

00:14:36,740 --> 00:14:41,750
when you add the package to the

00:14:39,290 --> 00:14:44,150
distribution and then when you update it

00:14:41,750 --> 00:14:46,220
you either generate again for the new

00:14:44,150 --> 00:14:48,650
version and compare it or you just

00:14:46,220 --> 00:14:50,690
update the version and hope for the best

00:14:48,650 --> 00:14:52,839
and if it doesn't build you out the

00:14:50,690 --> 00:14:56,200
missing don't require but you sometimes

00:14:52,839 --> 00:15:00,050
figure to remove the obsolete one and

00:14:56,200 --> 00:15:01,940
like having a way to either have

00:15:00,050 --> 00:15:03,350
automatic bill requires which is

00:15:01,940 --> 00:15:07,820
something that I think there is an issue

00:15:03,350 --> 00:15:09,620
for it on github or even more having

00:15:07,820 --> 00:15:13,850
something that would generate the spec

00:15:09,620 --> 00:15:17,249
file as a thing that we don't maintain

00:15:13,850 --> 00:15:22,559
anymore that we also

00:15:17,249 --> 00:15:26,189
so it's basically a build system so

00:15:22,559 --> 00:15:29,249
basically the economic software would

00:15:26,189 --> 00:15:33,480
generate an RPM spec file automatically

00:15:29,249 --> 00:15:36,029
but we are assuming they are edited by

00:15:33,480 --> 00:15:40,609
hand basically and the problem is

00:15:36,029 --> 00:15:43,859
basically to integrate this into the

00:15:40,609 --> 00:15:47,419
build service or the build system and

00:15:43,859 --> 00:15:47,419
the build workflow

00:16:01,510 --> 00:16:07,010
so the question I have of course are

00:16:05,090 --> 00:16:09,260
people obviously cannot do anything

00:16:07,010 --> 00:16:13,640
about workflow which is outside of rpm

00:16:09,260 --> 00:16:16,030
but I'm wondering if the problem is we

00:16:13,640 --> 00:16:19,820
actually do many will work with with

00:16:16,030 --> 00:16:22,580
with our pants of course like doing

00:16:19,820 --> 00:16:24,650
updates back protections so how does it

00:16:22,580 --> 00:16:28,040
work here so this is a mixed workflow

00:16:24,650 --> 00:16:31,970
for you you rerun this if you update if

00:16:28,040 --> 00:16:33,590
you do in rebase but you do also mine

00:16:31,970 --> 00:16:36,250
you will work on this sources basically

00:16:33,590 --> 00:16:44,510
could you actually just automatically

00:16:36,250 --> 00:16:46,870
it's a question the question is could it

00:16:44,510 --> 00:16:56,630
be automated or do you actually have to

00:16:46,870 --> 00:16:58,940
still like put patches generate the

00:16:56,630 --> 00:17:02,870
spectrum of the package directly forever

00:16:58,940 --> 00:17:05,810
and this is what I add for it like like

00:17:02,870 --> 00:17:08,600
a badge for respect our additional data

00:17:05,810 --> 00:17:10,910
our additional steps or so so if you

00:17:08,600 --> 00:17:14,000
have a perfect upstream it could be

00:17:10,910 --> 00:17:17,630
automated so we could get up streams and

00:17:14,000 --> 00:17:19,040
attach it yeah so we say that either we

00:17:17,630 --> 00:17:21,320
want the petrol click because that's

00:17:19,040 --> 00:17:23,209
basically what RPM probably builds up as

00:17:21,320 --> 00:17:26,600
a bar it's basically about putting

00:17:23,209 --> 00:17:29,690
patches on top of something else yeah

00:17:26,600 --> 00:17:32,270
and then build a Tesla yeah yeah we do a

00:17:29,690 --> 00:17:34,220
few model things but but men but domain

00:17:32,270 --> 00:17:36,650
design thing from an hour from

00:17:34,220 --> 00:17:38,720
respectable Vegas I mean the the table

00:17:36,650 --> 00:17:42,380
all and then doing some petrus which are

00:17:38,720 --> 00:17:45,140
separate and extra so the trickier would

00:17:42,380 --> 00:17:46,790
be basically find a way to put in the

00:17:45,140 --> 00:17:49,750
patches and probably the changelog

00:17:46,790 --> 00:17:55,169
associated with them one

00:17:49,750 --> 00:17:55,169
and insert that back into a regenerator

00:18:05,159 --> 00:18:19,179
okay why rpm doesn't know about my

00:18:14,220 --> 00:18:24,730
library I said of course the answer is

00:18:19,179 --> 00:18:31,330
obvious question is why we can do

00:18:24,730 --> 00:18:34,890
something like our - - I forcefully

00:18:31,330 --> 00:18:41,140
install using something like this select

00:18:34,890 --> 00:18:49,539
manually insert by Python parentheses

00:18:41,140 --> 00:18:51,909
something so well I don't I think you

00:18:49,539 --> 00:18:53,890
just cook you will probably need root

00:18:51,909 --> 00:18:55,809
for that so one of the problems of

00:18:53,890 --> 00:18:58,600
course that the models installers are

00:18:55,809 --> 00:19:03,130
basically run ask user which is a tricky

00:18:58,600 --> 00:19:07,620
thing for again especially if you we can

00:19:03,130 --> 00:19:07,620
start the user root instead of this

00:19:07,799 --> 00:19:19,330
dummy dummy 13 I will just run some

00:19:13,090 --> 00:19:22,330
command or I believe with some direct at

00:19:19,330 --> 00:19:29,970
okay he doesn't come from an ERP and I

00:19:22,330 --> 00:19:29,970
was installed using by by or Jen or some

00:19:30,179 --> 00:19:35,320
technically Provost that difficult and

00:19:33,400 --> 00:19:39,550
say yeah we have not done it across it's

00:19:35,320 --> 00:19:42,010
basically a bit of otoscope for rpm and

00:19:39,550 --> 00:19:44,410
for stuff like this the question with

00:19:42,010 --> 00:19:46,570
actually doing that so that's that's

00:19:44,410 --> 00:19:49,350
also something that that's an

00:19:46,570 --> 00:19:52,420
interesting problem for rpm right now

00:19:49,350 --> 00:19:56,380
the question is what actually is rpm

00:19:52,420 --> 00:19:59,110
watches actually proud of the different

00:19:56,380 --> 00:20:01,540
languages surrounding it so we still

00:19:59,110 --> 00:20:05,890
have a lot of dependency generators in

00:20:01,540 --> 00:20:07,660
Dar p.m. package itself the question is

00:20:05,890 --> 00:20:10,690
do they really belong there or do you

00:20:07,660 --> 00:20:12,990
actually would want them would have like

00:20:10,690 --> 00:20:16,720
the Python depends the generate of

00:20:12,990 --> 00:20:21,490
Python or something in between the use

00:20:16,720 --> 00:20:27,270
cases I have some application which

00:20:21,490 --> 00:20:31,590
requires by - - but for some other

00:20:27,270 --> 00:20:50,710
application I need fighting food to be

00:20:31,590 --> 00:20:53,740
most recent so value is so vital from

00:20:50,710 --> 00:20:54,430
upstream feed an RPM doesn't know about

00:20:53,740 --> 00:20:57,370
it

00:20:54,430 --> 00:21:03,400
so the first application doesn't have

00:20:57,370 --> 00:21:06,010
the re-entry in rpm database so you are

00:21:03,400 --> 00:21:08,980
somehow stuck saying why does it work

00:21:06,010 --> 00:21:12,580
that's the usual question

00:21:08,980 --> 00:21:14,230
understood okay basically as far as I

00:21:12,580 --> 00:21:16,150
understand the date makeup the end

00:21:14,230 --> 00:21:20,050
somehow aware of the non our tabletop

00:21:16,150 --> 00:21:22,060
files for forever and I know some sort

00:21:20,050 --> 00:21:25,740
of making digression for the language

00:21:22,060 --> 00:21:25,740
specific project manager like

00:21:26,080 --> 00:21:32,039
which would be of course with an aspirin

00:21:28,000 --> 00:21:35,049
for our treatment but I really think

00:21:32,039 --> 00:21:36,460
user perspective because those packages

00:21:35,049 --> 00:21:39,130
we already know that you know it's

00:21:36,460 --> 00:21:46,600
suppose to install facutly sort of

00:21:39,130 --> 00:21:48,220
things the system our team was able to

00:21:46,600 --> 00:21:59,549
recognize you know it is not coming from

00:21:48,220 --> 00:22:02,950
the or anything it would promote

00:21:59,549 --> 00:22:07,789
creation of various tools also wrong so

00:22:02,950 --> 00:22:11,539
yeah I think might be periscope

00:22:07,789 --> 00:22:19,940
like two minutes before way many people

00:22:11,539 --> 00:22:25,019
at this time well they're dears we had a

00:22:19,940 --> 00:22:27,570
similar in the different context and the

00:22:25,019 --> 00:22:29,159
question was if you could actually for

00:22:27,570 --> 00:22:30,559
our p.m. to actually look on the disk

00:22:29,159 --> 00:22:32,909
what's there

00:22:30,559 --> 00:22:35,970
it's truly not done basically

00:22:32,909 --> 00:22:39,210
traditionally to like it for people to

00:22:35,970 --> 00:22:41,730
not install stuff otherwise and there's

00:22:39,210 --> 00:22:45,809
course an argument to be made its kind

00:22:41,730 --> 00:22:50,659
of the right thing but let me not this

00:22:45,809 --> 00:22:50,659
is actually people

00:23:03,580 --> 00:23:20,150
so did you slides no okay we're getting

00:23:17,560 --> 00:23:21,920
there a couple of things that can be

00:23:20,150 --> 00:23:24,740
done so sort of the reason we've not

00:23:21,920 --> 00:23:28,760
done it is because it's weird space in

00:23:24,740 --> 00:23:32,210
between rpm and the tools but I

00:23:28,760 --> 00:23:35,380
understand that that's an issue probably

00:23:32,210 --> 00:23:35,380
try to figure out

00:23:44,440 --> 00:23:48,720
I believe there is some something like

00:23:46,090 --> 00:23:52,560
use ever be

00:23:48,720 --> 00:23:55,470
say deliver venturi fighting two fools

00:23:52,560 --> 00:23:57,620
eventually with some special device so

00:23:55,470 --> 00:24:00,470
basically

00:23:57,620 --> 00:24:02,210
rpm or so many other tool just to refile

00:24:00,470 --> 00:24:04,670
system find those files which others

00:24:02,210 --> 00:24:10,960
will play any packages and just run both

00:24:04,670 --> 00:24:10,960
genders and so basically we have

00:24:12,660 --> 00:24:16,040
package patterns

00:24:37,630 --> 00:24:40,630
libraries

00:24:44,820 --> 00:24:51,050
so maybe I repeat everything laughs over

00:24:47,940 --> 00:24:54,840
here was basically to have patterns that

00:24:51,050 --> 00:24:58,370
from files on disk that would be turned

00:24:54,840 --> 00:25:00,810
into packages that can be installed to

00:24:58,370 --> 00:25:04,980
basically tell their rpm database well

00:25:00,810 --> 00:25:07,350
you you have displeased Python packages

00:25:04,980 --> 00:25:09,780
installed from from different sources

00:25:07,350 --> 00:25:12,300
and stuff like this this would have been

00:25:09,780 --> 00:25:18,300
the benefit of not relying too much on

00:25:12,300 --> 00:25:20,370
the package format of the library just

00:25:18,300 --> 00:25:22,680
wow these are the vocations we're

00:25:20,370 --> 00:25:26,360
interested in if we can't have some of

00:25:22,680 --> 00:25:26,360
them we will just pick them up and

00:25:27,860 --> 00:25:32,820
problem with that update one of those

00:25:30,870 --> 00:25:36,440
packages using some other systems and

00:25:32,820 --> 00:25:36,440
BMF everything

00:25:37,269 --> 00:25:47,480
yeah well the problem with with business

00:25:43,429 --> 00:25:49,490
so I mean that's generally the problem

00:25:47,480 --> 00:25:53,779
if you have like multiple sources for

00:25:49,490 --> 00:25:56,149
packages that are not managed in a

00:25:53,779 --> 00:25:58,279
centralized way that it's basically or

00:25:56,149 --> 00:26:01,100
get outdated I mean if you if you're

00:25:58,279 --> 00:26:03,710
installed if you do pip install and then

00:26:01,100 --> 00:26:06,080
delete it from a disk it's gone and no

00:26:03,710 --> 00:26:07,999
one knows about it I mean yeah if you

00:26:06,080 --> 00:26:10,899
just delete it from disk and doing

00:26:07,999 --> 00:26:14,629
something with rpm it's also just gone

00:26:10,899 --> 00:26:16,369
exhausted I mean and if you do it on not

00:26:14,629 --> 00:26:22,129
laughing yeah but we don't care about

00:26:16,369 --> 00:26:23,659
those people but it's more likely to

00:26:22,129 --> 00:26:27,909
happen if you have like a second

00:26:23,659 --> 00:26:27,909
secondary tool that actually does that

00:26:40,340 --> 00:26:43,150
dangerous

00:26:54,030 --> 00:27:01,179
yeah you should be we all should be but

00:26:58,990 --> 00:27:04,260
but the thing that the thing is what's

00:27:01,179 --> 00:27:06,880
what's the what's the proper use of

00:27:04,260 --> 00:27:08,620
something like this yeah if you have a

00:27:06,880 --> 00:27:13,330
production machine you do something like

00:27:08,620 --> 00:27:19,090
this you probably deserve hell and you

00:27:13,330 --> 00:27:23,490
will find yourself in their cuisine yeah

00:27:19,090 --> 00:27:27,070
that's that's a problem but but I mean

00:27:23,490 --> 00:27:28,840
for developer basically just sets up his

00:27:27,070 --> 00:27:33,010
small project as well as what's the

00:27:28,840 --> 00:27:35,020
fastest way okay that way they just

00:27:33,010 --> 00:27:36,760
supposed to stack overflow question

00:27:35,020 --> 00:27:38,260
later when I don't you feel breaks yeah

00:27:36,760 --> 00:27:40,660
it doesn't really something doesn't

00:27:38,260 --> 00:27:45,990
really look like if they already know

00:27:40,660 --> 00:27:48,190
how they should do it they fine if it's

00:27:45,990 --> 00:27:50,650
available or make a virtual environment

00:27:48,190 --> 00:27:53,559
oh yeah do it the proper way

00:27:50,650 --> 00:27:57,450
I didn't mean to top this properly it

00:27:53,559 --> 00:27:57,450
would basically mean hacking into doors

00:27:57,630 --> 00:28:03,190
packaging systems are basically

00:27:59,880 --> 00:28:05,730
synchronized from there to the database

00:28:03,190 --> 00:28:08,650
well and I think you can solve it by

00:28:05,730 --> 00:28:10,480
creating the RPM based on the upstream

00:28:08,650 --> 00:28:14,240
format and then installing it in here

00:28:10,480 --> 00:28:18,039
rpm in calling that tool or

00:28:14,240 --> 00:28:20,539
that way you know if rpms you know

00:28:18,039 --> 00:28:22,940
feature-wise a super set of it or the

00:28:20,539 --> 00:28:26,149
other ones that could be possible but I

00:28:22,940 --> 00:28:31,899
don't really see a way to do that around

00:28:26,149 --> 00:28:35,450
and update problem by mixing deposit

00:28:31,899 --> 00:28:37,580
package databases if you want this to

00:28:35,450 --> 00:28:41,149
really reliable if you have to do it

00:28:37,580 --> 00:28:45,520
properly that's the story Northrop Ian

00:28:41,149 --> 00:28:48,100
unfortunately any of those language

00:28:45,520 --> 00:28:51,279
install mechanisms have any sort of

00:28:48,100 --> 00:28:52,720
centralized database for tracking what

00:28:51,279 --> 00:28:54,460
is good

00:28:52,720 --> 00:28:56,860
most of these tools also want you to use

00:28:54,460 --> 00:28:58,360
that they get out and not you have you

00:28:56,860 --> 00:29:00,370
go randomly deleting files on the

00:28:58,360 --> 00:29:02,200
process yeah the time because I think

00:29:00,370 --> 00:29:04,650
it's far more likely that users when we

00:29:02,200 --> 00:29:04,650
stop there

00:29:04,790 --> 00:29:10,670
they used to take it out if we can again

00:29:08,060 --> 00:29:13,280
I'm not speaking for hunters here but if

00:29:10,670 --> 00:29:15,710
that tooling has a database that says

00:29:13,280 --> 00:29:18,830
this is what I had put in on the system

00:29:15,710 --> 00:29:21,140
it would be very valuable if rpm could

00:29:18,830 --> 00:29:23,330
directly query that database in a

00:29:21,140 --> 00:29:25,640
standardized language on the way so that

00:29:23,330 --> 00:29:27,230
if you user use that tool to install

00:29:25,640 --> 00:29:29,210
something that our can can at least

00:29:27,230 --> 00:29:32,720
expose that information of what that

00:29:29,210 --> 00:29:34,010
other database says it has we have to

00:29:32,720 --> 00:29:37,010
trust it to a certain extent because out

00:29:34,010 --> 00:29:39,740
of the truth is trusting that so one

00:29:37,010 --> 00:29:42,170
problem with that rpm is actually really

00:29:39,740 --> 00:29:44,090
nice my thunks Pig doesn't have a dev

00:29:42,170 --> 00:29:47,360
solver so if you take something you

00:29:44,090 --> 00:29:48,740
break your system and it's not going to

00:29:47,360 --> 00:29:50,240
work for every single one of those

00:29:48,740 --> 00:29:51,740
systems it's going to have to be looking

00:29:50,240 --> 00:29:54,830
at those ecosystems and saying which of

00:29:51,740 --> 00:29:56,330
these are built sanely in a way where we

00:29:54,830 --> 00:29:59,750
can ask and get answers to these

00:29:56,330 --> 00:30:01,220
questions some of them probably are I

00:29:59,750 --> 00:30:02,960
haven't spent a lot of time character

00:30:01,220 --> 00:30:05,570
who are trying to do them in the RPM but

00:30:02,960 --> 00:30:08,720
I would wager based on what I see from

00:30:05,570 --> 00:30:11,060
NGO that there's a possibility of being

00:30:08,720 --> 00:30:12,890
able to pull from its transaction

00:30:11,060 --> 00:30:15,340
history and being able to do reasonable

00:30:12,890 --> 00:30:19,210
data generation back so we can see what

00:30:15,340 --> 00:30:19,210
go father littered all over

00:30:19,270 --> 00:30:25,950
four receptor you just have dependency

00:30:27,700 --> 00:30:35,630
it's a way that right now we couldn't do

00:30:31,940 --> 00:30:38,180
anything about it so again we will

00:30:35,630 --> 00:30:41,510
provide you our gum and it's up to you

00:30:38,180 --> 00:30:44,980
to shut your to life or you are you know

00:30:41,510 --> 00:30:48,230
what you are doing so if we do something

00:30:44,980 --> 00:30:51,980
and if you know what you are doing you

00:30:48,230 --> 00:30:54,440
can do something if you don't know you

00:30:51,980 --> 00:30:56,390
see yourself in July or into the body

00:30:54,440 --> 00:30:59,000
well that's that's the problem we're

00:30:56,390 --> 00:31:00,650
trying to solve here in October for

00:30:59,000 --> 00:31:01,910
questions from people who don't I

00:31:00,650 --> 00:31:06,680
wouldn't have shot themselves in the

00:31:01,910 --> 00:31:14,090
foot if that's not a problem then the

00:31:06,680 --> 00:31:15,350
problem and and thus how do we how do we

00:31:14,090 --> 00:31:18,500
have these two ecosystems that are

00:31:15,350 --> 00:31:20,090
mixing how do we how do we minimize the

00:31:18,500 --> 00:31:22,460
pain for people who are mixing these

00:31:20,090 --> 00:31:24,730
ecosystems and what understanding that

00:31:22,460 --> 00:31:26,780
we cannot necessarily change the

00:31:24,730 --> 00:31:27,890
ecosystem we can certainly suggest

00:31:26,780 --> 00:31:31,160
changes and they can tell us to go

00:31:27,890 --> 00:31:36,710
Thomas and but what can we do on the our

00:31:31,160 --> 00:31:41,360
side to minimize the pain that a user or

00:31:36,710 --> 00:31:43,220
vo mean the question is always even if

00:31:41,360 --> 00:31:45,200
people have like pit road stalled

00:31:43,220 --> 00:31:47,179
something say well IPM doesn't find it

00:31:45,200 --> 00:31:50,740
Microsoft doesn't install it but I have

00:31:47,179 --> 00:31:54,429
it like this basically having a way of

00:31:50,740 --> 00:31:57,919
reinstalling this properly through an

00:31:54,429 --> 00:32:00,200
RPM build thing on the right place on

00:31:57,919 --> 00:32:03,379
disk it's probably a good enough

00:32:00,200 --> 00:32:05,330
solution to actually not use the one

00:32:03,379 --> 00:32:09,200
thing they put somewhere in their home

00:32:05,330 --> 00:32:11,570
area let's say well I mean the problem

00:32:09,200 --> 00:32:13,999
is even if they ask a question you can

00:32:11,570 --> 00:32:16,009
say well just do enf install something

00:32:13,999 --> 00:32:16,700
but it's not helping if the stuff is not

00:32:16,009 --> 00:32:20,659
available

00:32:16,700 --> 00:32:23,059
I mean that if it were if it we're all

00:32:20,659 --> 00:32:25,100
wearable as a package it wouldn't be a

00:32:23,059 --> 00:32:28,309
big deal to say well you need pip

00:32:25,100 --> 00:32:41,749
install just just typing again with

00:32:28,309 --> 00:32:45,320
another prefix but actually problem is

00:32:41,749 --> 00:32:47,119
that telling people just use DNF won't

00:32:45,320 --> 00:32:49,190
help them because most of the stuff is

00:32:47,119 --> 00:32:51,909
actually not packaged so we need a

00:32:49,190 --> 00:32:54,350
solution that actually will put

00:32:51,909 --> 00:32:57,799
everything basically that's available on

00:32:54,350 --> 00:33:03,249
pip on the disk somehow in the same way

00:32:57,799 --> 00:33:03,249
I don't think try to solve this

00:33:04,140 --> 00:33:10,500
the problem this solution so there is an

00:33:08,429 --> 00:33:12,899
4/5 because this all I know I don't know

00:33:10,500 --> 00:33:15,779
how that makes a lot of things for there

00:33:12,899 --> 00:33:19,529
is an upstream issue that if we install

00:33:15,779 --> 00:33:22,200
stuff in our care packages and market us

00:33:19,529 --> 00:33:24,269
installed by rpm which is there is a way

00:33:22,200 --> 00:33:28,110
there is an installer file that would

00:33:24,269 --> 00:33:30,210
say bit or DNA or rpm or whatever people

00:33:28,110 --> 00:33:32,909
could behave in a way that if it dries

00:33:30,210 --> 00:33:35,580
if the user tries to stood up to upgrade

00:33:32,909 --> 00:33:37,169
or package then was not installed by bit

00:33:35,580 --> 00:33:40,500
but by some distribution package

00:33:37,169 --> 00:33:43,799
management the pit would refuse until

00:33:40,500 --> 00:33:47,519
the flesh horse or something and then it

00:33:43,799 --> 00:33:49,620
could tell you you don't do this instead

00:33:47,519 --> 00:33:52,139
do something else and that something

00:33:49,620 --> 00:33:54,059
else doesn't necessarily mean do tnf

00:33:52,139 --> 00:33:56,399
install because we know become packaging

00:33:54,059 --> 00:33:58,440
it could tell you use a virtual

00:33:56,399 --> 00:34:00,299
environment or you snitch - easier to

00:33:58,440 --> 00:34:02,429
install it to your home directory or

00:34:00,299 --> 00:34:05,250
whatever and I think this is a better

00:34:02,429 --> 00:34:08,040
solution for bit than to try to pack

00:34:05,250 --> 00:34:09,720
around it on the RPM side but the other

00:34:08,040 --> 00:34:12,240
hand this means we would need to solve

00:34:09,720 --> 00:34:13,950
it for fit then we need to solve it for

00:34:12,240 --> 00:34:16,530
rubygems and we need to solve it for

00:34:13,950 --> 00:34:19,260
seat on then we need to solve it for

00:34:16,530 --> 00:34:22,169
whatever else is there and it's a lot of

00:34:19,260 --> 00:34:24,659
work and every each of these ecosystems

00:34:22,169 --> 00:34:27,359
and storage is different and the fix

00:34:24,659 --> 00:34:29,879
would work is a very different way but

00:34:27,359 --> 00:34:31,950
trying to like comprehend this from the

00:34:29,879 --> 00:34:34,020
RPMs I like guessing oh this looks like

00:34:31,950 --> 00:34:37,830
a pittance not packaged because of this

00:34:34,020 --> 00:34:38,660
then do something different kind of

00:34:37,830 --> 00:34:41,210
package

00:34:38,660 --> 00:34:42,920
anyways I agree that's probably the

00:34:41,210 --> 00:34:44,720
reason why was not really looked at it

00:34:42,920 --> 00:34:47,540
because the proper solution is probably

00:34:44,720 --> 00:35:04,760
coming from all those different domains

00:34:47,540 --> 00:35:16,070
that need to offer a solution put

00:35:04,760 --> 00:35:19,940
something into for example then put

00:35:16,070 --> 00:35:21,710
something into rpm so at least you you

00:35:19,940 --> 00:35:23,570
don't need to provide it for the RPM

00:35:21,710 --> 00:35:26,690
common you just need to provide

00:35:23,570 --> 00:35:32,720
something in rpm Lee library so I can

00:35:26,690 --> 00:35:36,130
call rpm it and say ok I somehow I'm

00:35:32,720 --> 00:35:41,810
putting something into to our MeV of

00:35:36,130 --> 00:35:43,730
your market installed by excellent the

00:35:41,810 --> 00:35:46,700
product and everything will be done in

00:35:43,730 --> 00:35:49,640
those application and not rpm just

00:35:46,700 --> 00:35:52,090
provide way out the problem really is

00:35:49,640 --> 00:35:54,380
there's just basically matrix of

00:35:52,090 --> 00:35:56,540
problems you have two different

00:35:54,380 --> 00:36:01,130
languages on the one hand not only you

00:35:56,540 --> 00:36:02,750
have two different packaging systems on

00:36:01,130 --> 00:36:05,570
the distribution side also it's not like

00:36:02,750 --> 00:36:07,490
you have to tell the Python people well

00:36:05,570 --> 00:36:10,250
do this for rpm and everything's good

00:36:07,490 --> 00:36:12,950
know there's billion people coming and

00:36:10,250 --> 00:36:16,850
who else who will basically smake come

00:36:12,950 --> 00:36:20,060
up with the same demands so I think

00:36:16,850 --> 00:36:23,570
there's a hunting thing to do actually

00:36:20,060 --> 00:36:25,570
probably basically have interface in the

00:36:23,570 --> 00:36:28,550
middle where you can basically merge

00:36:25,570 --> 00:36:31,450
both sides onto each other without

00:36:28,550 --> 00:36:31,450
having the full

00:36:32,950 --> 00:36:38,270
and probably want to stop this

00:36:36,620 --> 00:36:40,070
discussion here and look for other

00:36:38,270 --> 00:36:43,550
packet shots because I mean it's a very

00:36:40,070 --> 00:36:46,370
interesting thing if we saw that force

00:36:43,550 --> 00:36:48,800
and we can pick it up and later on but I

00:36:46,370 --> 00:36:53,650
would rather have more looks in two

00:36:48,800 --> 00:36:53,650
different packages in federal action

00:37:04,810 --> 00:37:08,360
whatever you want

00:37:06,380 --> 00:37:13,280
the main package that the main question

00:37:08,360 --> 00:37:16,190
I have s I have is what do we need to do

00:37:13,280 --> 00:37:23,620
to make the Python 3 to Python for

00:37:16,190 --> 00:37:35,810
transition Morrissey never do right

00:37:23,620 --> 00:37:38,440
that's awesome I don't I don't think if

00:37:35,810 --> 00:37:38,440
modules

00:37:39,810 --> 00:37:47,310
which step yeah

00:38:01,870 --> 00:38:08,560
I actually don't know my Muscovy okay

00:38:05,020 --> 00:38:11,290
said what I don't like is the RPM of

00:38:08,560 --> 00:38:14,890
stream makes a lot of assumptions about

00:38:11,290 --> 00:38:18,040
Python itself like Paris user for title

00:38:14,890 --> 00:38:19,630
that says D - this is the only type of

00:38:18,040 --> 00:38:22,990
everything should use and then you can

00:38:19,630 --> 00:38:25,630
use ax to work around this one example

00:38:22,990 --> 00:38:28,240
is the automatic fight compilation thing

00:38:25,630 --> 00:38:32,410
there are everything that happens to be

00:38:28,240 --> 00:38:34,480
called dr. dy this fight compiled by

00:38:32,410 --> 00:38:36,430
user profile which is completely various

00:38:34,480 --> 00:38:38,700
assumptions and then if you need to

00:38:36,430 --> 00:38:42,520
change this on the on the distro level

00:38:38,700 --> 00:38:45,250
there is no clear way where would we do

00:38:42,520 --> 00:38:47,830
this because there is RPM upstream the

00:38:45,250 --> 00:38:50,710
neural patches in the RPM package of RPM

00:38:47,830 --> 00:38:52,990
etc and then there is Red Hat RPM config

00:38:50,710 --> 00:38:55,690
and then somehow have to squeeze all

00:38:52,990 --> 00:38:58,390
these free things and something comes

00:38:55,690 --> 00:39:00,460
out of it and then RPM upstream changes

00:38:58,390 --> 00:39:02,370
something a little bit and then it's

00:39:00,460 --> 00:39:07,540
defined in two different ways and

00:39:02,370 --> 00:39:12,490
against this again not working so so the

00:39:07,540 --> 00:39:14,380
main problem is that RPM and this is

00:39:12,490 --> 00:39:17,830
maybe a good thing generally or bad I

00:39:14,380 --> 00:39:19,900
don't know it's trying to do do you stop

00:39:17,830 --> 00:39:21,330
that I think that this drop should

00:39:19,900 --> 00:39:25,480
decide how it should work

00:39:21,330 --> 00:39:28,810
however several visitors might want to

00:39:25,480 --> 00:39:31,620
share this so it's a it's a two-way

00:39:28,810 --> 00:39:33,490
problem yeah that's something I actually

00:39:31,620 --> 00:39:36,920
want to

00:39:33,490 --> 00:39:38,600
before it's also that that's something

00:39:36,920 --> 00:39:42,940
that's very interesting for me so the

00:39:38,600 --> 00:39:46,760
question is how how to solve it us my

00:39:42,940 --> 00:39:49,420
initial idea basically would be to split

00:39:46,760 --> 00:39:52,760
the Python ankling out of our PMF stream

00:39:49,420 --> 00:39:55,850
and make this a broad check on its own

00:39:52,760 --> 00:39:59,030
that would probably live on github just

00:39:55,850 --> 00:40:01,550
beside of our p.m. and if people from

00:39:59,030 --> 00:40:04,100
different distribution could have access

00:40:01,550 --> 00:40:06,230
to and of course we would Srbija

00:40:04,100 --> 00:40:09,290
maintain us help with all the technical

00:40:06,230 --> 00:40:12,350
stuff but we are actually not that

00:40:09,290 --> 00:40:15,910
interested in getting into the policy

00:40:12,350 --> 00:40:20,750
decisions on how those packages are

00:40:15,910 --> 00:40:27,290
created package because we just don't

00:40:20,750 --> 00:40:29,060
know and we actually don't so so

00:40:27,290 --> 00:40:30,560
something it would appeal to you like

00:40:29,060 --> 00:40:33,140
splitting this out having a separate

00:40:30,560 --> 00:40:36,680
package I mean basically having ten

00:40:33,140 --> 00:40:38,390
separate packages one on one of this

00:40:36,680 --> 00:40:40,280
would be Python and probably all the

00:40:38,390 --> 00:40:44,810
other languages could couldn't have

00:40:40,280 --> 00:40:48,410
their own repository in their own

00:40:44,810 --> 00:40:51,770
project basically we started having an

00:40:48,410 --> 00:40:53,660
RPM extras repository which has not

00:40:51,770 --> 00:40:56,900
really taken off and if not put in

00:40:53,660 --> 00:40:59,330
enough to actually get it somewhere to

00:40:56,900 --> 00:41:01,760
basically push everything into that we

00:40:59,330 --> 00:41:03,950
don't want upstream but basically it

00:41:01,760 --> 00:41:08,560
needs to go somewhere at least other

00:41:03,950 --> 00:41:08,560
than some packages in some dispose

00:41:10,090 --> 00:41:19,030
guided with its package but that's a

00:41:15,220 --> 00:41:23,400
that's something I would push for in the

00:41:19,030 --> 00:41:23,400
next year or something

00:41:27,220 --> 00:41:32,430
and packages at the same time

00:41:37,220 --> 00:41:43,579
yeah this is not so much is not so much

00:41:40,250 --> 00:41:45,049
about not installing them although that

00:41:43,579 --> 00:41:50,839
could be interesting to actually not

00:41:45,049 --> 00:41:53,089
installing them in booths but for me a

00:41:50,839 --> 00:41:59,420
small question of who's in control who's

00:41:53,089 --> 00:42:02,450
with ownership over code or the and and

00:41:59,420 --> 00:42:05,030
our PR stream just can't deal with all

00:42:02,450 --> 00:42:09,440
the different languages be proficient in

00:42:05,030 --> 00:42:11,480
how in order details and I think it

00:42:09,440 --> 00:42:15,020
would be good to leverage the knowledge

00:42:11,480 --> 00:42:17,569
from the distributions but not I I don't

00:42:15,020 --> 00:42:19,190
want to hand over this to you because I

00:42:17,569 --> 00:42:20,119
know you will change something and

00:42:19,190 --> 00:42:23,690
there's some so people will change

00:42:20,119 --> 00:42:25,250
something else and there are a couple of

00:42:23,690 --> 00:42:27,799
other distributions and after like two

00:42:25,250 --> 00:42:30,950
months we have five different versions

00:42:27,799 --> 00:42:33,579
of Python dependency generators that all

00:42:30,950 --> 00:42:33,579
do different things

00:42:39,289 --> 00:42:43,819
we'll still I mean we will not abandon

00:42:40,880 --> 00:42:46,210
that I mean we would still probably good

00:42:43,819 --> 00:42:46,210
older

00:42:49,420 --> 00:43:00,410
so yeah but I mean things are

00:42:55,520 --> 00:43:03,520
complicated deal with it that's that's

00:43:00,410 --> 00:43:10,880
basically answer but it would at least

00:43:03,520 --> 00:43:13,070
like set up the proper boundaries on how

00:43:10,880 --> 00:43:15,680
it's supposed to work and then you can

00:43:13,070 --> 00:43:18,050
still hit each other over a head between

00:43:15,680 --> 00:43:20,270
the distributions and then fine and not

00:43:18,050 --> 00:43:22,550
I'm fine with different distribution

00:43:20,270 --> 00:43:24,020
doing different things if they know what

00:43:22,550 --> 00:43:25,550
they're doing if they have reasons I

00:43:24,020 --> 00:43:27,560
mean there's a reason why they do have

00:43:25,550 --> 00:43:29,690
different distributions they have

00:43:27,560 --> 00:43:34,760
different they are supposed to make

00:43:29,690 --> 00:43:38,450
different design decisions and to strive

00:43:34,760 --> 00:43:40,100
for different things but having

00:43:38,450 --> 00:43:41,480
difference just on the different things

00:43:40,100 --> 00:43:43,570
that that's not the game you want to

00:43:41,480 --> 00:43:43,570
play

00:43:44,840 --> 00:43:50,350
similar no I Sunday

00:43:51,440 --> 00:43:59,130
[Music]

00:43:52,950 --> 00:44:02,950
which are filled with rpm building

00:43:59,130 --> 00:44:11,200
breath install or build pace fine

00:44:02,950 --> 00:44:17,160
it's quite fine but once you be the face

00:44:11,200 --> 00:44:21,910
for my independence you're generated

00:44:17,160 --> 00:44:25,240
checks are it's like kind of magic even

00:44:21,910 --> 00:44:31,710
the dog face because we don't write

00:44:25,240 --> 00:44:37,630
something like running running dog % dog

00:44:31,710 --> 00:44:41,109
or entering dog face running scrape / g

00:44:37,630 --> 00:44:43,690
and b / and some random numbers I'm just

00:44:41,109 --> 00:44:50,890
really doesn't exist in the darkness is

00:44:43,690 --> 00:44:53,950
created and if it fails in this face you

00:44:50,890 --> 00:44:55,869
basically don't know why because even

00:44:53,950 --> 00:44:58,240
for the fighting generators it doesn't

00:44:55,869 --> 00:45:01,569
say it's ceramic pipe engineers or

00:44:58,240 --> 00:45:05,349
concerning this change so it will

00:45:01,569 --> 00:45:08,890
probably help me personally this face

00:45:05,349 --> 00:45:13,270
would be more proposed like I'm running

00:45:08,890 --> 00:45:16,180
this check for example barrage can find

00:45:13,270 --> 00:45:22,180
the script or a world where I can find

00:45:16,180 --> 00:45:26,040
the generator so I can say ok it's

00:45:22,180 --> 00:45:26,040
actually failed in this screen

00:45:26,150 --> 00:45:32,099
yeah actually it's not much but some

00:45:28,650 --> 00:45:43,259
black magic there's a chicken sacrificed

00:45:32,099 --> 00:45:54,479
a rectangular somewhere but the thing is

00:45:43,259 --> 00:45:58,650
there a couple of places most places in

00:45:54,479 --> 00:46:01,910
our PMS 10 years ago but nothing good

00:45:58,650 --> 00:46:01,910
just a couple of places

00:46:07,570 --> 00:46:15,180
and all stuff that's needs to be cleaned

00:46:11,440 --> 00:46:15,180
up at some special

00:46:15,589 --> 00:46:22,109
to build your policies quirks which are

00:46:19,369 --> 00:46:25,580
yeah come on other things in there which

00:46:22,109 --> 00:46:25,580
are quite interesting

00:46:26,089 --> 00:46:38,430
but I would want to continue on on the

00:46:31,760 --> 00:46:41,010
Perl language stuff so so first is are

00:46:38,430 --> 00:46:42,690
there other languages that that would be

00:46:41,010 --> 00:46:48,230
interested actually retaining your own

00:46:42,690 --> 00:46:48,230
stuff within our beside archaea

00:46:56,330 --> 00:47:03,360
so Russ already is basically set up this

00:46:59,610 --> 00:47:05,600
way yeah does it the federal specific

00:47:03,360 --> 00:47:05,600
thing

00:47:15,630 --> 00:47:19,440
mr. Watterson

00:47:21,480 --> 00:47:25,680
yeah it's easier if you're intrigued do

00:47:23,550 --> 00:47:27,900
it the first time yeah properly if you

00:47:25,680 --> 00:47:30,780
have something for years yeah yeah

00:47:27,900 --> 00:47:34,670
that's a problem with that's one that

00:47:30,780 --> 00:47:34,670
you have to take from these two decades

00:47:52,260 --> 00:47:58,500
rubygems canary how are they where are

00:47:57,390 --> 00:48:02,220
they finished

00:47:58,500 --> 00:48:04,950
I don't know from double - I'm nothing

00:48:02,220 --> 00:48:07,890
both I just know it from his point of

00:48:04,950 --> 00:48:14,750
view so okay so it's also somewhere in

00:48:07,890 --> 00:48:14,750
the fedora yeah get respects okay

00:48:19,650 --> 00:48:25,720
yeah but but this is a dependence is a

00:48:22,990 --> 00:48:29,099
spec generator Ruby which is not quite

00:48:25,720 --> 00:48:29,099
the same as any two generators

00:48:32,410 --> 00:48:36,640
I mean there's nothing wrong like hello

00:48:34,509 --> 00:48:40,079
I'm having a repository but it's it's

00:48:36,640 --> 00:48:43,089
there are one more step remove from OPM

00:48:40,079 --> 00:48:46,779
independence which is not necessarily a

00:48:43,089 --> 00:48:49,170
bad thing just just to to to know we're

00:48:46,779 --> 00:48:49,170
talking about

00:48:57,670 --> 00:49:04,230
they're basically all outside of rpm

00:49:00,099 --> 00:49:07,220
they're basically not within our scope

00:49:04,230 --> 00:49:10,819
yeah basically

00:49:07,220 --> 00:49:13,599
so people that are involved in RPN

00:49:10,819 --> 00:49:13,599
development obviously

00:49:18,350 --> 00:49:23,350
one is that you can create us in Spain

00:49:21,820 --> 00:49:26,730
like my eight filters can release

00:49:23,350 --> 00:49:26,730
missile and then

00:49:35,020 --> 00:49:42,030
all the trees say and there's a problem

00:49:38,110 --> 00:49:42,030
is Felicity of ginger some patience

00:49:44,489 --> 00:49:50,529
producing those problems and also party

00:49:47,789 --> 00:49:52,839
poopers then you don't need any extra

00:49:50,529 --> 00:49:55,259
generators because you know you have

00:49:52,839 --> 00:49:55,259
nothing

00:50:02,700 --> 00:50:08,160
sections those sections because if I

00:50:05,619 --> 00:50:11,559
have some some like battery definition

00:50:08,160 --> 00:50:13,630
build system she made and then which

00:50:11,559 --> 00:50:15,759
would expand to somewhat remote build

00:50:13,630 --> 00:50:17,999
and basil we can't have a second food

00:50:15,759 --> 00:50:17,999
section

00:50:25,120 --> 00:50:28,450
so you would

00:50:34,390 --> 00:50:39,580
there are a couple of things because

00:50:36,280 --> 00:50:42,400
there the first thing is do we have

00:50:39,580 --> 00:50:46,930
multiple reboots or do we have multiple

00:50:42,400 --> 00:50:53,730
directories in those boots and if we

00:50:46,930 --> 00:50:59,860
have we could probably exit expand that

00:50:53,730 --> 00:51:02,560
my false to macros and set up it's it's

00:50:59,860 --> 00:51:07,690
another magic thing but with a different

00:51:02,560 --> 00:51:11,520
color kind of chicken but it could

00:51:07,690 --> 00:51:11,520
basically explain that multiple times

00:51:15,210 --> 00:51:23,840
princess my skates I hope to have

00:51:18,390 --> 00:51:23,840
Petrovic resolute system which

00:51:26,629 --> 00:51:33,709
sometimes you also want to restore some

00:51:29,009 --> 00:51:36,299
additional parts from it if it maybe

00:51:33,709 --> 00:51:38,519
create a macro in a way that it does

00:51:36,299 --> 00:51:40,889
this at some kind of like there's OS and

00:51:38,519 --> 00:51:44,069
installed post and we should have books

00:51:40,889 --> 00:51:46,139
for every section like free build any

00:51:44,069 --> 00:51:49,649
post titled and premium style and

00:51:46,139 --> 00:51:51,449
posting stuff and actually yeah and then

00:51:49,649 --> 00:51:54,059
you would invent macro put it everything

00:51:51,449 --> 00:51:56,909
in the pre built and pre in style and if

00:51:54,059 --> 00:51:58,499
L star is empty it does nothing and it

00:51:56,909 --> 00:52:00,659
doesn't jump on you which is probably

00:51:58,499 --> 00:52:02,669
not the current case I'm not sure but it

00:52:00,659 --> 00:52:06,149
that's the bill and if you money on the

00:52:02,669 --> 00:52:08,329
app and style it executes after the pre

00:52:06,149 --> 00:52:08,329
installed

00:52:15,720 --> 00:52:20,130
you'll really find all those microbes

00:52:17,460 --> 00:52:24,200
and its really loudly yep especially

00:52:20,130 --> 00:52:24,200
with the horses football which is 3500

00:52:28,800 --> 00:52:51,610
yeah I don't know what's the time so

00:52:43,690 --> 00:52:54,240
there anything to recruit us so so we

00:52:51,610 --> 00:52:54,240

YouTube URL: https://www.youtube.com/watch?v=3ydXdURvGhk


