Title: Flock 2018 -  CentOS infra explained, and how it uses more and more Fedora tooling
Publication date: 2018-09-03
Playlist: Flock 2018
Description: 
	Thursday, August 9, 2018 
1:30pm - 2:20pm 
@Hamburg 3+5

Talk: CentOS infra explained, and how it uses more and more Fedora tooling
Presenters: Fabian Arrotin

Description: In this talk, we can have a quick overview of how the CentOS Infra runs, the used technologies, but also how we are slowly getting more and more Fedora applications in our own infra, making it easier for Fedora contributors to also become CentOS contributors, as underlying tools for the platform are common and so well understood.
Captions: 
	00:00:02,899 --> 00:00:09,030
okay my my clock says that it's time to

00:00:06,120 --> 00:00:11,639
start so maybe we can start now

00:00:09,030 --> 00:00:14,820
thank you for coming especially after

00:00:11,639 --> 00:00:18,020
lunch or maybe you came for just you to

00:00:14,820 --> 00:00:21,480
sleep that's that's also a possibility I

00:00:18,020 --> 00:00:24,119
will try to explain because brand in the

00:00:21,480 --> 00:00:26,400
first session just before the the lunch

00:00:24,119 --> 00:00:29,010
explain how we were accepting for the

00:00:26,400 --> 00:00:31,500
rusty eye jobs in the Santos system

00:00:29,010 --> 00:00:33,989
ecosystem so I will try to give you a

00:00:31,500 --> 00:00:36,809
little bit of information about what

00:00:33,989 --> 00:00:40,230
happened behind the scene but also outer

00:00:36,809 --> 00:00:44,430
centers in France what we share already

00:00:40,230 --> 00:00:48,539
our stool with some with fedora and the

00:00:44,430 --> 00:00:50,550
future so the first thing is the

00:00:48,539 --> 00:00:54,329
mandatory slide for where am I

00:00:50,550 --> 00:00:56,699
if people don't know me yet my name is

00:00:54,329 --> 00:00:59,850
Fabio no time a Belgian guy I work in

00:00:56,699 --> 00:01:04,320
the Santos project I think I'd showed

00:00:59,850 --> 00:01:08,549
officially in 2007 and I'm in the season

00:01:04,320 --> 00:01:14,490
mean infra team also QA team and Santos

00:01:08,549 --> 00:01:17,009
board member so we'll cover some of

00:01:14,490 --> 00:01:18,450
those things like I will give you a

00:01:17,009 --> 00:01:21,750
little bit of history about Santos

00:01:18,450 --> 00:01:23,520
because it can explain from where we are

00:01:21,750 --> 00:01:25,830
coming especially from the infra side

00:01:23,520 --> 00:01:27,900
that will give you an overview and then

00:01:25,830 --> 00:01:31,170
we can dive into our you will we are

00:01:27,900 --> 00:01:33,119
slowly changing thing in the process so

00:01:31,170 --> 00:01:36,630
what's different and what's coming with

00:01:33,119 --> 00:01:38,960
the Fedora infra those days and the

00:01:36,630 --> 00:01:38,960
future

00:01:39,200 --> 00:01:46,730
so it started a long time ago remembers

00:01:44,010 --> 00:01:49,440
when red had decided to split between

00:01:46,730 --> 00:01:56,010
red underpriced and fedora raise the

00:01:49,440 --> 00:01:58,320
hand three guys only okay so it started

00:01:56,010 --> 00:02:01,800
a long time ago and that's how it

00:01:58,320 --> 00:02:06,030
started on the house side we embraced

00:02:01,800 --> 00:02:08,490
that myself I was happy to test fit was

00:02:06,030 --> 00:02:10,679
for the record 0 to 99 if I remember

00:02:08,490 --> 00:02:14,400
well the the one that was supposed to be

00:02:10,679 --> 00:02:16,590
cut to to be read at Linux 10 and we

00:02:14,400 --> 00:02:19,650
were just happy with that except that

00:02:16,590 --> 00:02:23,010
for our system at the emperor level we

00:02:19,650 --> 00:02:25,860
decide to have something that was really

00:02:23,010 --> 00:02:28,350
interesting to rebuild just for academic

00:02:25,860 --> 00:02:31,230
purposes and only nobody would ever

00:02:28,350 --> 00:02:34,230
expect in those days that the CentOS

00:02:31,230 --> 00:02:39,900
project would be so used by other people

00:02:34,230 --> 00:02:43,440
all over the world so it started from a

00:02:39,900 --> 00:02:45,810
project go cows Linux which doesn't

00:02:43,440 --> 00:02:48,150
exist anymore those days the goal was

00:02:45,810 --> 00:02:50,310
for cows project itself was just through

00:02:48,150 --> 00:02:54,590
build a new distribution based on

00:02:50,310 --> 00:02:54,590
existing technology like oh p.m. mostly

00:02:54,620 --> 00:02:59,070
sub-project of cows annex was interested

00:02:57,239 --> 00:03:00,959
in to rebuilding rather than prices and

00:02:59,070 --> 00:03:04,350
exhaust just to for academic purposes

00:03:00,959 --> 00:03:07,019
see how it was possible to do it to her

00:03:04,350 --> 00:03:08,820
built on itself a distribution and it

00:03:07,019 --> 00:03:12,450
was just for fun believe me it was just

00:03:08,820 --> 00:03:14,550
for fun so it started basically from

00:03:12,450 --> 00:03:16,830
people having one machine in the

00:03:14,550 --> 00:03:18,180
basement or in the garage doing nothing

00:03:16,830 --> 00:03:21,930
spare time and that was used to

00:03:18,180 --> 00:03:26,420
recompile package mostly so we started

00:03:21,930 --> 00:03:30,650
from zero infra at all nothing

00:03:26,420 --> 00:03:32,420
but then we add some publicity

00:03:30,650 --> 00:03:32,630
advertising I don't know how to call

00:03:32,420 --> 00:03:34,489
that

00:03:32,630 --> 00:03:37,849
from steveandjenna cos who did a

00:03:34,489 --> 00:03:39,230
comparison of the rebuild of Red Hat

00:03:37,849 --> 00:03:41,569
Enterprise Linux at that time so there

00:03:39,230 --> 00:03:44,239
was Tower Linux if some people remind me

00:03:41,569 --> 00:03:46,790
I remember scientists started to become

00:03:44,239 --> 00:03:48,950
a thing we were there and the first one

00:03:46,790 --> 00:03:52,700
was white box Linux which myself I was

00:03:48,950 --> 00:03:54,800
also using at a time we started with

00:03:52,700 --> 00:03:57,080
that and suddenly some people were a

00:03:54,800 --> 00:03:59,989
that's great we are starting to use your

00:03:57,080 --> 00:04:01,550
package in your distribution so what do

00:03:59,989 --> 00:04:03,800
you need well at the moment we have

00:04:01,550 --> 00:04:06,799
nothing so just one public machine with

00:04:03,800 --> 00:04:09,080
public presence like a website or forums

00:04:06,799 --> 00:04:10,880
will help here we go

00:04:09,080 --> 00:04:13,519
do you want to use the same machine as

00:04:10,880 --> 00:04:15,590
the first mirror of course we want

00:04:13,519 --> 00:04:17,680
nobody refused a machine connected at

00:04:15,590 --> 00:04:21,200
undred megabit connection in those days

00:04:17,680 --> 00:04:25,820
so which started slowly and we got one

00:04:21,200 --> 00:04:29,630
two three four five machines officially

00:04:25,820 --> 00:04:31,640
it really kicked out in 2007 when we add

00:04:29,630 --> 00:04:36,320
the first official presence for the

00:04:31,640 --> 00:04:38,780
project at at FOSDEM in 2007 and we had

00:04:36,320 --> 00:04:40,700
a lot of we started believe we believe

00:04:38,780 --> 00:04:42,800
that or not but we started discussion

00:04:40,700 --> 00:04:44,150
with discoursing with the federal people

00:04:42,800 --> 00:04:48,460
because we were sharing the same

00:04:44,150 --> 00:04:53,180
destroyed a room in that foursome event

00:04:48,460 --> 00:04:57,130
so we started really from scratch but we

00:04:53,180 --> 00:05:02,510
need it to automate as much as possible

00:04:57,130 --> 00:05:05,360
really because we were all having

00:05:02,510 --> 00:05:07,010
different jobs and we didn't want to

00:05:05,360 --> 00:05:09,560
spend too much time on dissenters in Fri

00:05:07,010 --> 00:05:12,410
itself so that's where we started to

00:05:09,560 --> 00:05:15,350
invest time into things called puppet

00:05:12,410 --> 00:05:17,600
which we use since version zero that's

00:05:15,350 --> 00:05:19,430
something I myself I remember having

00:05:17,600 --> 00:05:25,810
migrated from zero to 23

00:05:19,430 --> 00:05:25,810
- then 2.4 2.5 2.6 etc up to 3.8

00:05:26,880 --> 00:05:31,870
yeah before Geeta was also another thing

00:05:30,010 --> 00:05:33,370
called subversion which we use a lot

00:05:31,870 --> 00:05:38,040
those days to put everything into

00:05:33,370 --> 00:05:41,590
control and before the cloud was a thing

00:05:38,040 --> 00:05:45,250
we had already the putz versus kettle

00:05:41,590 --> 00:05:48,910
syndrome because all the machine that

00:05:45,250 --> 00:05:51,100
were donated to us we had no guarantee

00:05:48,910 --> 00:05:55,120
that the machine would be there the next

00:05:51,100 --> 00:05:56,830
day or two weeks after so we had to

00:05:55,120 --> 00:05:58,200
consider the Machine it's great a

00:05:56,830 --> 00:06:02,530
machine is there the Machine disappear

00:05:58,200 --> 00:06:06,310
we don't care so we had to automate as

00:06:02,530 --> 00:06:09,340
much as possible from day one the reason

00:06:06,310 --> 00:06:11,680
why machine disappear well yeah there

00:06:09,340 --> 00:06:15,420
plenty of reason first one which is

00:06:11,680 --> 00:06:20,260
logical is because of a network failure

00:06:15,420 --> 00:06:23,290
so we have we had a lot of machine in

00:06:20,260 --> 00:06:27,130
those day which were just single machine

00:06:23,290 --> 00:06:29,350
was just single drive SATA drive dying

00:06:27,130 --> 00:06:32,050
in machine die on us so I would consider

00:06:29,350 --> 00:06:33,700
that normal for machine to disappear the

00:06:32,050 --> 00:06:35,290
monitoring system pop-ups and said oh

00:06:33,700 --> 00:06:39,430
machine is not there we have contacted

00:06:35,290 --> 00:06:41,470
okay we get a sometimes replacement what

00:06:39,430 --> 00:06:44,860
is really more interesting is the next

00:06:41,470 --> 00:06:46,990
case where we get contact with a company

00:06:44,860 --> 00:06:50,950
we decide to say hey we want to sponsor

00:06:46,990 --> 00:06:53,530
you a machine of Chu but the machine

00:06:50,950 --> 00:06:55,120
runs you don't notify the fact that that

00:06:53,530 --> 00:06:58,660
company was acquired by another company

00:06:55,120 --> 00:07:00,490
and sometimes that second company was

00:06:58,660 --> 00:07:04,180
even acquired by another one a third one

00:07:00,490 --> 00:07:06,430
company and the third one say oh we

00:07:04,180 --> 00:07:08,760
don't care about open source we don't

00:07:06,430 --> 00:07:12,010
have any special program open source and

00:07:08,760 --> 00:07:13,900
that's machines is abusing a little bit

00:07:12,010 --> 00:07:17,020
too much of a bandwidth because it's

00:07:13,900 --> 00:07:19,060
successful so the machine sometimes we

00:07:17,020 --> 00:07:21,660
if we are lucky they contact us back to

00:07:19,060 --> 00:07:24,130
say we don't we want to stop helping you

00:07:21,660 --> 00:07:25,750
but most of the key or most of the time

00:07:24,130 --> 00:07:28,230
the machine just disappear without not

00:07:25,750 --> 00:07:28,230
efficient at all

00:07:29,139 --> 00:07:35,380
or the company goes bankrupt completely

00:07:32,440 --> 00:07:37,900
and the only way to know is that you use

00:07:35,380 --> 00:07:39,669
Google you find some press release the

00:07:37,900 --> 00:07:41,380
fact that your company just go bankrupt

00:07:39,669 --> 00:07:44,860
and when went bankrupt and you just

00:07:41,380 --> 00:07:46,660
discovered so I I don't think that I

00:07:44,860 --> 00:07:48,430
have a bullet points for for the another

00:07:46,660 --> 00:07:50,289
case interesting case is that sometimes

00:07:48,430 --> 00:07:52,569
we just proactively contact them just to

00:07:50,289 --> 00:07:55,889
see if they are still alive I do that on

00:07:52,569 --> 00:07:58,539
a regular basis to just reach out and

00:07:55,889 --> 00:07:59,770
sometimes they do their answer yeah we

00:07:58,539 --> 00:08:01,750
have still happy if you want a new node

00:07:59,770 --> 00:08:04,389
a better known replacement that's better

00:08:01,750 --> 00:08:07,210
and sometimes I have some kind of answer

00:08:04,389 --> 00:08:10,270
like what no we don't run any machine

00:08:07,210 --> 00:08:12,160
for you yes you do here's the IP yes

00:08:10,270 --> 00:08:13,930
it's enough subnet but no we don't

00:08:12,160 --> 00:08:15,610
and then I'm scared because I'm just

00:08:13,930 --> 00:08:22,330
wondering what kind of inventory they

00:08:15,610 --> 00:08:24,789
use and we we had that issue two weeks

00:08:22,330 --> 00:08:27,250
ago I had one of the discs dying machine

00:08:24,789 --> 00:08:29,620
I tried to contact and say no is it the

00:08:27,250 --> 00:08:32,169
machine are still running no no no so

00:08:29,620 --> 00:08:33,729
you know it happens to us a lot that's

00:08:32,169 --> 00:08:35,909
one of the big difference maybe with the

00:08:33,729 --> 00:08:39,550
forum Fry's that we just ran from

00:08:35,909 --> 00:08:42,190
community donated machine the scene sent

00:08:39,550 --> 00:08:44,829
us means community not in the sense that

00:08:42,190 --> 00:08:47,680
we have a lot of developer contributing

00:08:44,829 --> 00:08:50,589
back in those days but mostly company

00:08:47,680 --> 00:08:52,770
sponsoring machine bandwidth because we

00:08:50,589 --> 00:08:52,770
needed

00:08:54,370 --> 00:09:01,130
so we started with a kind of trust

00:08:57,980 --> 00:09:03,430
relationship with those donor because

00:09:01,130 --> 00:09:06,830
you don't want to run something crucial

00:09:03,430 --> 00:09:08,960
sensitive if just someone from your

00:09:06,830 --> 00:09:12,260
trust and say oh I just want to rent to

00:09:08,960 --> 00:09:14,990
give you a machine so we just start by

00:09:12,260 --> 00:09:18,650
using those with something that's none

00:09:14,990 --> 00:09:20,270
crucial like a middle machine because on

00:09:18,650 --> 00:09:23,780
the memory itself everything is GP

00:09:20,270 --> 00:09:25,400
design checked control and the first

00:09:23,780 --> 00:09:27,380
thing we do is we don't want to spend

00:09:25,400 --> 00:09:28,850
too much time doing an audit on machine

00:09:27,380 --> 00:09:32,480
itself so we just reinstall it from

00:09:28,850 --> 00:09:36,100
scratch automatically that's how we

00:09:32,480 --> 00:09:38,390
start with those donated machine and

00:09:36,100 --> 00:09:40,190
something that we we have a kind of

00:09:38,390 --> 00:09:42,800
automatic process for that is we try to

00:09:40,190 --> 00:09:45,800
as I said to reach out to see if the

00:09:42,800 --> 00:09:48,050
support mechanism works fine or not and

00:09:45,800 --> 00:09:49,250
based on the experience you know if that

00:09:48,050 --> 00:09:53,390
machine can be used for something else

00:09:49,250 --> 00:09:58,160
or just stay at it as it is as a member

00:09:53,390 --> 00:10:01,130
of the kettle and depending on response

00:09:58,160 --> 00:10:04,880
time and the experience we have with

00:10:01,130 --> 00:10:08,450
those guys we just slowly move more

00:10:04,880 --> 00:10:10,310
critical roles like NS records because

00:10:08,450 --> 00:10:13,030
it's the running from donated machine

00:10:10,310 --> 00:10:13,030
even those days

00:10:15,150 --> 00:10:20,460
so the in front was growing up but we

00:10:18,600 --> 00:10:25,740
add more or less the same issue as in

00:10:20,460 --> 00:10:28,680
Federer except maybe that surprising we

00:10:25,740 --> 00:10:31,350
add those days we've even I have more

00:10:28,680 --> 00:10:32,910
external that what Fedora has so we have

00:10:31,350 --> 00:10:35,279
at the moment more than 600 external

00:10:32,910 --> 00:10:38,100
mirror fetching everything from us for

00:10:35,279 --> 00:10:39,839
the package the update the ISO image so

00:10:38,100 --> 00:10:41,850
it's quite successful I would say

00:10:39,839 --> 00:10:43,920
because on outside even with the number

00:10:41,850 --> 00:10:47,400
of machine we got from community it's

00:10:43,920 --> 00:10:51,839
not possible to sustain the number of

00:10:47,400 --> 00:10:54,690
requests and we had to well for example

00:10:51,839 --> 00:10:57,210
just to feed to send this package to

00:10:54,690 --> 00:10:58,860
those 600 external mirror we have what

00:10:57,210 --> 00:11:02,130
we call the EM sing row which is mirror

00:10:58,860 --> 00:11:04,430
and nursing using access control is to

00:11:02,130 --> 00:11:07,320
just let those external me fetch from us

00:11:04,430 --> 00:11:09,150
so sorry if you don't you you are not

00:11:07,320 --> 00:11:11,250
able to fetch directly from us but we

00:11:09,150 --> 00:11:15,330
have to protect the bandwidth because

00:11:11,250 --> 00:11:20,490
some machine in those 67 machines are

00:11:15,330 --> 00:11:22,140
connected at very slow speed I have some

00:11:20,490 --> 00:11:24,660
machine in mine in some part of the

00:11:22,140 --> 00:11:26,459
world like in Malaysia for example we

00:11:24,660 --> 00:11:30,300
have machine connected that 10 megabit

00:11:26,459 --> 00:11:34,230
per second to us it's international

00:11:30,300 --> 00:11:38,370
level so wait a minutes we are in 2018

00:11:34,230 --> 00:11:41,610
10 megabit per second yes but keep in

00:11:38,370 --> 00:11:44,850
mind that bandwidth costs a lot in those

00:11:41,610 --> 00:11:46,650
area and they've international internal

00:11:44,850 --> 00:11:49,230
international connection that is really

00:11:46,650 --> 00:11:50,970
limited but in locally in the country

00:11:49,230 --> 00:11:53,100
that's under gabador gigabit

00:11:50,970 --> 00:11:55,500
connectivity so even if it takes time

00:11:53,100 --> 00:11:57,450
just for us to see that machine there

00:11:55,500 --> 00:11:58,860
suddenly it's really fast for the other

00:11:57,450 --> 00:12:01,680
people another mirror in the same

00:11:58,860 --> 00:12:03,870
country to to get contents so it saves

00:12:01,680 --> 00:12:05,870
bandwidth on outside as well so it's a

00:12:03,870 --> 00:12:08,400
win-win situation

00:12:05,870 --> 00:12:10,830
we had quickly to implement something

00:12:08,400 --> 00:12:15,120
that exists also at the federal side we

00:12:10,830 --> 00:12:16,950
do geoip of course for yam for the

00:12:15,120 --> 00:12:18,570
middle lists so you are directed to

00:12:16,950 --> 00:12:21,540
machine that are validated in your own

00:12:18,570 --> 00:12:24,060
country or nearby country if there is no

00:12:21,540 --> 00:12:27,600
middle in your country but we do that

00:12:24,060 --> 00:12:29,650
also at the dns for record like milk or

00:12:27,600 --> 00:12:31,000
descent of the rogue

00:12:29,650 --> 00:12:38,320
you are redirected to the machine that

00:12:31,000 --> 00:12:42,520
is closest to you so what's different

00:12:38,320 --> 00:12:44,560
from the Fedora infra some of the

00:12:42,520 --> 00:12:46,480
application that we still run for them

00:12:44,560 --> 00:12:47,830
the users like as I said the Miller

00:12:46,480 --> 00:12:50,890
management at the moment is still

00:12:47,830 --> 00:12:54,610
different so it started from custom

00:12:50,890 --> 00:12:56,890
script pearl initially slowly converted

00:12:54,610 --> 00:12:59,640
to bite on those days versus mineral

00:12:56,890 --> 00:13:02,800
manager there's some description about

00:12:59,640 --> 00:13:04,780
switching to middle manager or not in

00:13:02,800 --> 00:13:07,540
the past that was not possible at all

00:13:04,780 --> 00:13:10,030
because we add no authentication system

00:13:07,540 --> 00:13:12,720
that was required for that now that we

00:13:10,030 --> 00:13:15,040
have fast I will cover that later

00:13:12,720 --> 00:13:16,840
different instance of fast our own

00:13:15,040 --> 00:13:19,450
version that would be eventually

00:13:16,840 --> 00:13:23,260
possible but we have a discussion with

00:13:19,450 --> 00:13:26,080
Adrian by the way just you to eventually

00:13:23,260 --> 00:13:28,450
move to that the bug tracker will

00:13:26,080 --> 00:13:31,570
probably just remain difference we had

00:13:28,450 --> 00:13:33,970
in the past whom to select one of the

00:13:31,570 --> 00:13:36,460
open source solution bugzilla was not on

00:13:33,970 --> 00:13:39,040
the shortlist back in the days so we are

00:13:36,460 --> 00:13:41,340
still upgrading from Monty's back

00:13:39,040 --> 00:13:44,950
tracker version 2 to the latest version

00:13:41,340 --> 00:13:46,630
so we still we are still autonomous it

00:13:44,950 --> 00:13:48,610
can be problematic from time to time

00:13:46,630 --> 00:13:51,070
because we just have to link to app

00:13:48,610 --> 00:13:53,260
stream bug in Bugzilla detroit.com

00:13:51,070 --> 00:13:54,880
and so you still have to fill on outside

00:13:53,260 --> 00:13:57,220
a bug and then we have to link to an

00:13:54,880 --> 00:13:58,810
external bug report so it can be tricky

00:13:57,220 --> 00:14:02,830
from time to time but there is no

00:13:58,810 --> 00:14:07,090
solution for that right now for the wiki

00:14:02,830 --> 00:14:10,450
or if you use for a for quite some time

00:14:07,090 --> 00:14:12,970
you are probably you know that it was

00:14:10,450 --> 00:14:15,070
used for for the right was mine which

00:14:12,970 --> 00:14:18,940
was migrating MediaWiki we are still

00:14:15,070 --> 00:14:21,339
running moines those days there on that

00:14:18,940 --> 00:14:23,470
aspect we are also investigating two

00:14:21,339 --> 00:14:25,300
things even just migrating continuing

00:14:23,470 --> 00:14:28,270
migrating from my own version to the

00:14:25,300 --> 00:14:30,790
other or switch to media wiki for a

00:14:28,270 --> 00:14:33,370
simple reason because we know that it

00:14:30,790 --> 00:14:36,210
works for fedora is the open ID

00:14:33,370 --> 00:14:40,319
authentication that can work on outside

00:14:36,210 --> 00:14:43,779
so that's one of the open points

00:14:40,319 --> 00:14:47,259
a big difference is probably the message

00:14:43,779 --> 00:14:48,910
bus for Federer there is a huge huge

00:14:47,259 --> 00:14:50,500
huge message to the Federal my message

00:14:48,910 --> 00:14:52,779
about the Fed message bus is really used

00:14:50,500 --> 00:14:54,339
for almost everything it's reversed

00:14:52,779 --> 00:14:59,050
maybe there were a little bit too

00:14:54,339 --> 00:15:00,910
verbose some time on house side we had

00:14:59,050 --> 00:15:04,029
no requirement to have that kind of

00:15:00,910 --> 00:15:06,880
person place for the infra part we just

00:15:04,029 --> 00:15:09,490
with a small one but was based on MQTT

00:15:06,880 --> 00:15:12,790
which I liked a lot I use that for other

00:15:09,490 --> 00:15:14,680
project because it's lightweight it's

00:15:12,790 --> 00:15:17,620
super TLS of the box it support access

00:15:14,680 --> 00:15:19,540
control is out of the box so we have

00:15:17,620 --> 00:15:22,930
that in place for some part of the infra

00:15:19,540 --> 00:15:27,519
right now I will explain one specific

00:15:22,930 --> 00:15:29,130
case for example later and infra

00:15:27,519 --> 00:15:32,860
monitoring is also done differently

00:15:29,130 --> 00:15:36,040
further I still use Nigel's nagas on

00:15:32,860 --> 00:15:39,100
outside we decide to use zabbix a long

00:15:36,040 --> 00:15:40,600
time ago mostly because it's the center

00:15:39,100 --> 00:15:42,759
of steam infra demon was really small

00:15:40,600 --> 00:15:46,029
it's still small so basically at the

00:15:42,759 --> 00:15:49,110
moment it's just brain in me but when we

00:15:46,029 --> 00:15:51,910
started to investigate about monitoring

00:15:49,110 --> 00:15:54,730
zabbix had some really cool feature that

00:15:51,910 --> 00:15:58,769
we wanted to have built in that net

00:15:54,730 --> 00:16:01,290
Nagas was lacking those days for example

00:15:58,769 --> 00:16:05,529
the fact that out of the box it has

00:16:01,290 --> 00:16:08,019
central DB to log everything all the

00:16:05,529 --> 00:16:09,790
metrics that you collect so we have all

00:16:08,019 --> 00:16:13,420
data there because we migrated from

00:16:09,790 --> 00:16:15,850
zabbix version to the version for more

00:16:13,420 --> 00:16:18,939
than 10 years and we had no problem with

00:16:15,850 --> 00:16:22,959
that another concept that is interesting

00:16:18,939 --> 00:16:24,910
is the fact that you have proxies if you

00:16:22,959 --> 00:16:27,310
remember the fact that all the machine

00:16:24,910 --> 00:16:30,670
from centers are spread all around the

00:16:27,310 --> 00:16:31,899
world you can delegate at the attacking

00:16:30,670 --> 00:16:34,839
that everything works fine just to

00:16:31,899 --> 00:16:36,250
collect the metrics to proxies so for

00:16:34,839 --> 00:16:39,370
example you don't want them note in the

00:16:36,250 --> 00:16:42,850
USA to just it's all machine for example

00:16:39,370 --> 00:16:44,500
in Australia or Aegean just to check

00:16:42,850 --> 00:16:46,480
that everything is fine you just delete

00:16:44,500 --> 00:16:47,860
those tasks to a kind of proxy which

00:16:46,480 --> 00:16:49,910
keep off everything back into the

00:16:47,860 --> 00:16:53,250
central server

00:16:49,910 --> 00:16:57,720
it has also an API which we can use a

00:16:53,250 --> 00:16:59,730
lot to automate plenty of things so

00:16:57,720 --> 00:17:02,490
there are some tools available written

00:16:59,730 --> 00:17:04,920
in Python called ZB CLI or if you are

00:17:02,490 --> 00:17:08,550
using instable there are no modules just

00:17:04,920 --> 00:17:13,980
for that just to configure templates for

00:17:08,550 --> 00:17:19,560
example tied to a machine so one example

00:17:13,980 --> 00:17:22,380
is I mentioned I mentioned puppet which

00:17:19,560 --> 00:17:24,209
are women we are still running we

00:17:22,380 --> 00:17:26,699
migrated from puppet version to puppet

00:17:24,209 --> 00:17:28,920
version and we decide to use for man I'm

00:17:26,699 --> 00:17:31,470
pretty sure that everybody knows Foreman

00:17:28,920 --> 00:17:33,980
we use for manager form and as a puppet

00:17:31,470 --> 00:17:37,620
external node classifier so puppet

00:17:33,980 --> 00:17:41,310
everything from puppets is in the form

00:17:37,620 --> 00:17:43,680
and database so who in the room has

00:17:41,310 --> 00:17:46,650
already played with form puppets or

00:17:43,680 --> 00:17:49,580
we're still using puppets one guy two

00:17:46,650 --> 00:17:53,070
guys that I know you are lying I know so

00:17:49,580 --> 00:17:55,320
one of the main point on my site with

00:17:53,070 --> 00:17:55,950
puppet is that it's great for desired

00:17:55,320 --> 00:17:57,990
State

00:17:55,950 --> 00:18:01,020
so you declare the desired set for

00:17:57,990 --> 00:18:03,600
machine and you apply that locally but

00:18:01,020 --> 00:18:04,860
what about the fact that the monitoring

00:18:03,600 --> 00:18:07,950
has to know everything about the other

00:18:04,860 --> 00:18:10,230
node but by default had no solution back

00:18:07,950 --> 00:18:14,370
in the days so the only way to do that

00:18:10,230 --> 00:18:17,190
is to export all the thing back into

00:18:14,370 --> 00:18:19,350
another DB called puppet DB and then

00:18:17,190 --> 00:18:20,850
call the monitoring server roll it just

00:18:19,350 --> 00:18:23,370
consume everything and it fetched from

00:18:20,850 --> 00:18:25,470
the the puppet G beef so knowing all the

00:18:23,370 --> 00:18:27,960
facts from all the Machine and verify

00:18:25,470 --> 00:18:29,730
that it's still apply so if you multiply

00:18:27,960 --> 00:18:32,810
if you multiply that by the number of

00:18:29,730 --> 00:18:35,670
nodes you have some time puppet catalog

00:18:32,810 --> 00:18:37,440
apply that that takes more than 30

00:18:35,670 --> 00:18:41,760
minutes just to verify that nothing

00:18:37,440 --> 00:18:43,320
change and it's still good so it was a

00:18:41,760 --> 00:18:44,850
little bit consuming I said it's a

00:18:43,320 --> 00:18:48,060
little bit strange to have everything in

00:18:44,850 --> 00:18:49,980
Foreman being applied to the machine he

00:18:48,060 --> 00:18:52,770
popped it back into another DB and then

00:18:49,980 --> 00:18:55,680
applied by the the monitoring server so

00:18:52,770 --> 00:18:57,410
I decide to use some kind of shortcut

00:18:55,680 --> 00:19:00,620
with Foreman oops

00:18:57,410 --> 00:19:03,140
Foreman hooks is R interesting because

00:19:00,620 --> 00:19:04,880
it's triggered so when you had a node

00:19:03,140 --> 00:19:06,890
when you modify a node when you delete a

00:19:04,880 --> 00:19:09,440
node it triggers an something at the

00:19:06,890 --> 00:19:11,929
back with the Foreman hooks and that's

00:19:09,440 --> 00:19:14,630
where I was mentioning MQTT for example

00:19:11,929 --> 00:19:16,250
at the moment when for example we had a

00:19:14,630 --> 00:19:18,620
machine on we just tagged we just add

00:19:16,250 --> 00:19:20,929
some puppets modules on some puppet

00:19:18,620 --> 00:19:24,380
roles on the machines it will

00:19:20,929 --> 00:19:28,730
automatically notify the zabbix server

00:19:24,380 --> 00:19:31,059
through mqtt on a specific topic and at

00:19:28,730 --> 00:19:33,740
your site it just read it just

00:19:31,059 --> 00:19:36,320
subscribed to that topic and verify oh

00:19:33,740 --> 00:19:38,210
i'm just now a middle machine or i'm a

00:19:36,320 --> 00:19:39,409
dns or whatever i will automatically

00:19:38,210 --> 00:19:43,279
apply the template and the check

00:19:39,409 --> 00:19:46,250
directly so that it doesn't need to

00:19:43,279 --> 00:19:48,049
consume a lot a lot of resource so

00:19:46,250 --> 00:19:55,190
that's one of them that's one of the

00:19:48,049 --> 00:19:57,380
reason why we just decide to use that so

00:19:55,190 --> 00:20:00,830
what's common those days with further

00:19:57,380 --> 00:20:04,460
infra tool well it's not a secret that

00:20:00,830 --> 00:20:06,860
we use koji brand mentioned that it's

00:20:04,460 --> 00:20:09,919
not Fedora instances it's our own

00:20:06,860 --> 00:20:13,880
instances on CBS for community build

00:20:09,919 --> 00:20:15,740
system that sent to the rogue but if you

00:20:13,880 --> 00:20:17,360
are working and if you are contributing

00:20:15,740 --> 00:20:19,789
to federal n centers at the same time

00:20:17,360 --> 00:20:21,799
you are feeling like owned because you

00:20:19,789 --> 00:20:26,289
know the tool already it's there you

00:20:21,799 --> 00:20:29,260
know how to use it and nothing change

00:20:26,289 --> 00:20:32,899
same thing when we decided finally to

00:20:29,260 --> 00:20:35,659
use the same authentication system that

00:20:32,899 --> 00:20:38,600
fellow I was using fast except once

00:20:35,659 --> 00:20:41,419
again that it's not federated at the

00:20:38,600 --> 00:20:44,299
moment so it's still using its own fast

00:20:41,419 --> 00:20:48,890
database which is accounts that's into

00:20:44,299 --> 00:20:50,809
the rogue and we still use that heavily

00:20:48,890 --> 00:20:54,610
because we try to plumb more and more

00:20:50,809 --> 00:20:57,049
things on the fast system that we have

00:20:54,610 --> 00:20:59,140
because not everything can talk too fast

00:20:57,049 --> 00:21:02,090
directly we need something in between

00:20:59,140 --> 00:21:06,620
exactly the same requirement as for

00:21:02,090 --> 00:21:10,880
fedoras so nothing secret here Epsilon

00:21:06,620 --> 00:21:13,730
so we also use epsilon just to provide a

00:21:10,880 --> 00:21:17,150
way to get through fast through open ID

00:21:13,730 --> 00:21:18,980
looking or open ID connect and that

00:21:17,150 --> 00:21:21,230
permits us to have multiple no

00:21:18,980 --> 00:21:30,110
application using our authentication

00:21:21,230 --> 00:21:32,299
back-end so other common tools if we

00:21:30,110 --> 00:21:35,419
consider that both project have the same

00:21:32,299 --> 00:21:38,419
requirement more or less let's say 80 to

00:21:35,419 --> 00:21:41,659
90 percent of the problem to solve out

00:21:38,419 --> 00:21:44,210
the same we are slowly migrating to the

00:21:41,659 --> 00:21:47,179
same tooling the same - Oh Shane for in

00:21:44,210 --> 00:21:49,250
from one big change a disco well big

00:21:47,179 --> 00:21:51,649
that was a long time coming but his

00:21:49,250 --> 00:21:54,950
fanny lapping is migrating to ansible

00:21:51,649 --> 00:21:57,169
from puppet for varnish reason because

00:21:54,950 --> 00:21:59,779
we had already a lot a lot a lot of

00:21:57,169 --> 00:22:01,909
offensive all play books to that we were

00:21:59,779 --> 00:22:04,399
using in the center seam FRA for

00:22:01,909 --> 00:22:07,309
deployment for a doctor's orchestration

00:22:04,399 --> 00:22:10,070
etc that puppet was not able to do that

00:22:07,309 --> 00:22:14,149
not evil and em collective was something

00:22:10,070 --> 00:22:15,559
I was not keen on using so we are using

00:22:14,149 --> 00:22:18,470
a lot and Sibyl for the CI environment

00:22:15,559 --> 00:22:19,279
everything in CI in that environment I

00:22:18,470 --> 00:22:21,980
will cover that later

00:22:19,279 --> 00:22:25,909
it's just deployed through ansible

00:22:21,980 --> 00:22:28,220
end-to-end so will migrate to vincible

00:22:25,909 --> 00:22:29,419
soon and the fact that will migrate to

00:22:28,220 --> 00:22:31,700
interval soon if you are interested in

00:22:29,419 --> 00:22:33,919
to contributing to the infra or just

00:22:31,700 --> 00:22:35,690
have a look at that we'll just have some

00:22:33,919 --> 00:22:38,059
git repository well we'll just slowly

00:22:35,690 --> 00:22:41,690
publish everything all the roles that we

00:22:38,059 --> 00:22:44,080
are slowly converting from puppets to 2

00:22:41,690 --> 00:22:44,080
and 0

00:22:44,600 --> 00:22:49,130
so the the big change that is coming and

00:22:47,809 --> 00:22:52,490
that was probably announced if you were

00:22:49,130 --> 00:22:55,009
in the other room yesterday was the get

00:22:52,490 --> 00:22:58,519
smurfing I have to say thank you to Jim

00:22:55,009 --> 00:22:59,750
to have thrown me out on the bus now so

00:22:58,519 --> 00:23:03,230
now that I have to mention it

00:22:59,750 --> 00:23:05,029
so it's migrating to bugger off bugger

00:23:03,230 --> 00:23:08,389
if I want to say the correct if but

00:23:05,029 --> 00:23:10,759
clearly is not in the room so that's

00:23:08,389 --> 00:23:12,769
that one that change is coming we'll

00:23:10,759 --> 00:23:14,330
have to do a lot of messaging around

00:23:12,769 --> 00:23:18,320
that because it will change the way

00:23:14,330 --> 00:23:19,789
people are building through koji but at

00:23:18,320 --> 00:23:21,799
the same time it will just make more

00:23:19,789 --> 00:23:24,049
sense if you are already contributing to

00:23:21,799 --> 00:23:27,500
federal because suddenly oh I know it I

00:23:24,049 --> 00:23:30,289
know what to expect from it it's not

00:23:27,500 --> 00:23:32,269
migrating to bugger only what was

00:23:30,289 --> 00:23:35,000
announced yesterday was that slowly

00:23:32,269 --> 00:23:38,990
we'll have also some replication between

00:23:35,000 --> 00:23:44,029
the federal instance and our instance so

00:23:38,990 --> 00:23:46,070
when you when you will push to a branch

00:23:44,029 --> 00:23:48,230
that you have access to for the federal

00:23:46,070 --> 00:23:49,669
side it will be replicated and visible

00:23:48,230 --> 00:23:52,370
on get that sent to the rock in the

00:23:49,669 --> 00:23:54,769
federal branch a reverse is true if

00:23:52,370 --> 00:23:57,169
something is pushed on our side it will

00:23:54,769 --> 00:23:58,330
be pushed to the other side and visible

00:23:57,169 --> 00:24:01,570
for everybody

00:23:58,330 --> 00:24:04,460
one small he mark would that was not

00:24:01,570 --> 00:24:06,830
that was not said yesterday that's just

00:24:04,460 --> 00:24:09,350
for the git repository the leucocyte

00:24:06,830 --> 00:24:11,179
cache content will not be synced at

00:24:09,350 --> 00:24:14,090
least in the beginning because it has

00:24:11,179 --> 00:24:17,620
some different directory structure so

00:24:14,090 --> 00:24:17,620
something we can consider later

00:24:18,809 --> 00:24:26,399
another tool which is coming it's

00:24:22,519 --> 00:24:29,639
documentation and we'll reuse what was

00:24:26,399 --> 00:24:32,730
announced recently for fedora for dogs

00:24:29,639 --> 00:24:35,190
that fur drop Raja Grogg so we'll use

00:24:32,730 --> 00:24:36,619
also the same tool same tool chain no

00:24:35,190 --> 00:24:40,529
need to reinvent the wheel each time

00:24:36,619 --> 00:24:43,279
it's better to collaborate and reuse and

00:24:40,529 --> 00:24:43,279
that's what we'll do

00:24:44,090 --> 00:24:49,980
so a little bit remark some remark about

00:24:47,340 --> 00:24:52,259
it Center CI environment so Brandon give

00:24:49,980 --> 00:24:56,070
it give a talk about the process on how

00:24:52,259 --> 00:24:58,379
package work test it in the CM remedy

00:24:56,070 --> 00:25:01,830
target mostly absolute CI so which is

00:24:58,379 --> 00:25:05,940
the OpenShift setup but we have more

00:25:01,830 --> 00:25:07,919
than that so yeah we had some epic donor

00:25:05,940 --> 00:25:10,259
and sponsored and reddit is the biggest

00:25:07,919 --> 00:25:12,960
one in those days since we joined so

00:25:10,259 --> 00:25:16,980
thanks to them we have some bare metal

00:25:12,960 --> 00:25:18,869
nodes available for testing so outside

00:25:16,980 --> 00:25:20,700
of the machine that Brandon was

00:25:18,869 --> 00:25:23,399
mentioning when chief set up we have a

00:25:20,700 --> 00:25:26,999
moment 256 machine which are in the

00:25:23,399 --> 00:25:29,700
ready poll just to be used abused for

00:25:26,999 --> 00:25:34,499
reinstall and test I will cover that

00:25:29,700 --> 00:25:37,320
just after we have also audio based

00:25:34,499 --> 00:25:40,470
OpenStack cloud set up in place so that

00:25:37,320 --> 00:25:43,769
if you don't need a bare metal machine

00:25:40,470 --> 00:25:45,690
but can be running this in in virtual

00:25:43,769 --> 00:25:47,429
machine we can just abuse that cloud

00:25:45,690 --> 00:25:50,850
environment for that I will cover that

00:25:47,429 --> 00:25:53,730
later as well and yeah OpenShift because

00:25:50,850 --> 00:25:56,820
brian mentioned it already so we try to

00:25:53,730 --> 00:25:59,309
eat our own dog food all the components

00:25:56,820 --> 00:26:02,700
that we are using there I've also built

00:25:59,309 --> 00:26:05,539
and tested through CBS and tested in CI

00:26:02,700 --> 00:26:08,399
and then we use them as a kind of

00:26:05,539 --> 00:26:10,019
Matroska thing just to you test what you

00:26:08,399 --> 00:26:14,509
produce on top of what you built already

00:26:10,019 --> 00:26:16,919
so and it works pretty well so far

00:26:14,509 --> 00:26:20,369
so for the big metal node as I said it's

00:26:16,919 --> 00:26:23,460
just ansible deployment nothing fancy

00:26:20,369 --> 00:26:25,499
it's really simple tasks that just talk

00:26:23,460 --> 00:26:27,479
to the out we're provisioning machinery

00:26:25,499 --> 00:26:29,369
install machine have kickstart that are

00:26:27,479 --> 00:26:31,379
just basic ginger to template and

00:26:29,369 --> 00:26:34,159
depending on what we need because at the

00:26:31,379 --> 00:26:36,450
moment we cover sent us six enter seven

00:26:34,159 --> 00:26:40,830
it just means the machine it's covered

00:26:36,450 --> 00:26:45,259
now it covers also Power PC 64 le so

00:26:40,830 --> 00:26:49,440
pickle power pickle as Peter would say

00:26:45,259 --> 00:26:52,859
and yeah nothing really fancy but it

00:26:49,440 --> 00:26:55,379
works quite really well on top of that

00:26:52,859 --> 00:26:58,559
we just have a whole application written

00:26:55,379 --> 00:27:00,929
and maintained by Brian which is called

00:26:58,559 --> 00:27:04,559
Daffy which is a kind of abstraction

00:27:00,929 --> 00:27:07,139
layer for the CI project so when they

00:27:04,559 --> 00:27:09,839
want to get one two three node so multi

00:27:07,139 --> 00:27:11,219
node setup for one job is possible at

00:27:09,839 --> 00:27:13,969
the moment for bare metal you request

00:27:11,219 --> 00:27:16,979
for example up to I think the limit is

00:27:13,969 --> 00:27:19,499
six node six node per call so you want

00:27:16,979 --> 00:27:21,629
six node in one shot is one second later

00:27:19,499 --> 00:27:23,690
you get six machine available for you

00:27:21,629 --> 00:27:27,869
automatically with your SSH key

00:27:23,690 --> 00:27:29,549
provision inside that's what we more

00:27:27,869 --> 00:27:31,739
detail on the wiki page if you want and

00:27:29,549 --> 00:27:33,659
also there is a link on the on the get

00:27:31,739 --> 00:27:38,369
on get up for the source of that if you

00:27:33,659 --> 00:27:40,859
want or is it so quite simple a photo

00:27:38,369 --> 00:27:43,979
OpenStack set up I would say that it's

00:27:40,859 --> 00:27:46,109
simple as well but usually not today it

00:27:43,979 --> 00:27:48,809
seems some people say a are you crazy

00:27:46,109 --> 00:27:50,519
OpenStack you use OpenStack and easy in

00:27:48,809 --> 00:27:55,799
the same sentence something must be

00:27:50,519 --> 00:27:59,009
wrong with you and probably yes but we

00:27:55,799 --> 00:28:01,289
decide to keep it really simple so the

00:27:59,009 --> 00:28:03,299
current status is that we add a previous

00:28:01,289 --> 00:28:08,279
one based on Newton release and now it's

00:28:03,299 --> 00:28:10,950
running pike the deployment of the

00:28:08,279 --> 00:28:14,159
controller and all all the compute nodes

00:28:10,950 --> 00:28:17,549
in that set up is also unstable driven

00:28:14,159 --> 00:28:18,779
completely the the machine the machine

00:28:17,549 --> 00:28:20,879
deployment that the bare metal is done

00:28:18,779 --> 00:28:22,109
through ansible and then everything else

00:28:20,879 --> 00:28:24,210
is done through instable as well so

00:28:22,109 --> 00:28:25,430
adding machine into the OpenStack cloud

00:28:24,210 --> 00:28:30,620
said

00:28:25,430 --> 00:28:32,240
everything is automated one big

00:28:30,620 --> 00:28:34,040
difference is that we don't consume the

00:28:32,240 --> 00:28:37,430
cloud the usual way people would consume

00:28:34,040 --> 00:28:39,410
the cloud the in the CI environment all

00:28:37,430 --> 00:28:42,830
the project that want to run the test

00:28:39,410 --> 00:28:44,870
I cannot tenant so because as I said we

00:28:42,830 --> 00:28:47,450
are using defi as kind of abstraction

00:28:44,870 --> 00:28:50,090
layer to to let people consume a

00:28:47,450 --> 00:28:54,140
resource that's the same that's the same

00:28:50,090 --> 00:28:57,860
thing for the the cloud instance you ask

00:28:54,140 --> 00:28:59,540
a cloud instance through Daffy Daffy

00:28:57,860 --> 00:29:00,820
eats a pizza tenant and can consume a

00:28:59,540 --> 00:29:03,080
lot of Christmas from that cloud

00:29:00,820 --> 00:29:04,670
transparently and then when the machine

00:29:03,080 --> 00:29:06,860
would you know need a machine the

00:29:04,670 --> 00:29:08,210
machine is just kicked out that's the

00:29:06,860 --> 00:29:09,860
difference with barometer when the but

00:29:08,210 --> 00:29:13,280
the machine is just automatically

00:29:09,860 --> 00:29:14,750
reinstall with the kickstart I just had

00:29:13,280 --> 00:29:16,040
to look at the number by the way for the

00:29:14,750 --> 00:29:18,170
R install of the machine at the bare

00:29:16,040 --> 00:29:22,430
metal setup this morning we add more

00:29:18,170 --> 00:29:25,190
than five five hundred seventy thousand

00:29:22,430 --> 00:29:26,990
physical reinstallation in CI dots into

00:29:25,190 --> 00:29:30,140
the rope so I think that's quite

00:29:26,990 --> 00:29:33,470
impressive and even if that's the KISS

00:29:30,140 --> 00:29:35,540
principle we try to use the same

00:29:33,470 --> 00:29:39,260
principle especially because we are a

00:29:35,540 --> 00:29:40,700
lazy guy and we have to maintain that we

00:29:39,260 --> 00:29:43,250
try to when you have a look at the

00:29:40,700 --> 00:29:45,530
OpenStack setup the traditional

00:29:43,250 --> 00:29:47,540
geography a lot of components because

00:29:45,530 --> 00:29:49,820
OpenStack is nothing more a lot of

00:29:47,540 --> 00:29:51,830
services talking to API of each other

00:29:49,820 --> 00:29:53,930
components but you don't need

00:29:51,830 --> 00:29:55,970
specifically all the components we

00:29:53,930 --> 00:29:59,210
wanted to give something really fine

00:29:55,970 --> 00:30:01,670
really simple to manage we just wanted

00:29:59,210 --> 00:30:03,950
to go with a flat network for specific

00:30:01,670 --> 00:30:07,550
region he don't control the switches

00:30:03,950 --> 00:30:10,340
anyway so we had to keep things simple

00:30:07,550 --> 00:30:13,250
just by using for the neutron config

00:30:10,340 --> 00:30:14,600
just using layer 2 in bridge mode so

00:30:13,250 --> 00:30:16,220
that the virtual machine up in the same

00:30:14,600 --> 00:30:20,080
network as the bare metal machine for

00:30:16,220 --> 00:30:20,080
testing everything in a simple

00:30:21,090 --> 00:30:28,150
and as I said we try to be as minimal as

00:30:26,800 --> 00:30:30,730
possible

00:30:28,150 --> 00:30:32,140
meaning that we just needed Keystone of

00:30:30,730 --> 00:30:34,720
course because that's a cornerstone for

00:30:32,140 --> 00:30:37,780
keysto for OpenStack glens for the image

00:30:34,720 --> 00:30:39,250
store neutral for network and Nova for

00:30:37,780 --> 00:30:41,710
the compute node so it provides a role

00:30:39,250 --> 00:30:43,690
nothing more we don't even need horizon

00:30:41,710 --> 00:30:46,000
the web UI because it's just API

00:30:43,690 --> 00:30:54,280
I don't know it just debbie it-- talking

00:30:46,000 --> 00:30:55,570
to OpenStack API nothing more so it's

00:30:54,280 --> 00:30:57,100
not a secret that we started

00:30:55,570 --> 00:30:59,260
collaborating with the forum for a team

00:30:57,100 --> 00:31:04,090
because we were facing the same issue

00:30:59,260 --> 00:31:06,880
but it's happening more and more and I'd

00:31:04,090 --> 00:31:09,430
like myself to say thank you to some

00:31:06,880 --> 00:31:11,290
people like Patrick because Patrick was

00:31:09,430 --> 00:31:16,810
really helpful for some of the

00:31:11,290 --> 00:31:18,970
implementation like for fast for for

00:31:16,810 --> 00:31:20,890
epsilon and recently for a future boot

00:31:18,970 --> 00:31:23,590
so Thank You Patrick

00:31:20,890 --> 00:31:25,510
same goes for purely which is was not

00:31:23,590 --> 00:31:29,470
there today but it was really helpful

00:31:25,510 --> 00:31:31,210
for the packer in the integration some

00:31:29,470 --> 00:31:33,040
feature they will see coming in

00:31:31,210 --> 00:31:34,800
paragraph because we requested for that

00:31:33,040 --> 00:31:39,400
we thought that it would be interesting

00:31:34,800 --> 00:31:41,560
and smooth which is not there but yeah

00:31:39,400 --> 00:31:43,740
anyway that's even easier just to say

00:31:41,560 --> 00:31:45,760
thank you to the wall federline for team

00:31:43,740 --> 00:31:50,770
this will be easier for me and more

00:31:45,760 --> 00:31:53,680
collaboration later i think thats it for

00:31:50,770 --> 00:31:57,150
me on my side so if you have question we

00:31:53,680 --> 00:31:57,150
have time and microphone

00:32:01,090 --> 00:32:12,520
no question that's easier for me oh one

00:32:04,780 --> 00:32:13,870
question what can use a microphone so

00:32:12,520 --> 00:32:16,230
that I don't have to repeat your

00:32:13,870 --> 00:32:16,230
question

00:32:20,410 --> 00:32:31,200
it's supposed to be working at it back

00:32:24,480 --> 00:32:31,200
I'd should be both on

00:32:38,680 --> 00:32:51,040
and now it works collaboration effect

00:32:41,450 --> 00:32:53,900
thanks yeah how you how do you decide

00:32:51,040 --> 00:32:56,210
this kind of account management we use

00:32:53,900 --> 00:33:04,970
for example there are alternatives like

00:32:56,210 --> 00:33:10,970
free IPA I do such decisions and about

00:33:04,970 --> 00:33:13,340
switch from from puppet to ansible are

00:33:10,970 --> 00:33:16,460
you still using Foreman or are you using

00:33:13,340 --> 00:33:19,630
something like tower so two questions

00:33:16,460 --> 00:33:22,430
the first is about authentication so

00:33:19,630 --> 00:33:25,220
initially back in the days we decided to

00:33:22,430 --> 00:33:28,490
do to you something central centralized

00:33:25,220 --> 00:33:29,600
because it's it was a problem when the

00:33:28,490 --> 00:33:32,000
forum's were using their own

00:33:29,600 --> 00:33:33,800
authentication back-end and then another

00:33:32,000 --> 00:33:36,260
system another system in the wiki in the

00:33:33,800 --> 00:33:37,730
the book tracker so we will need to have

00:33:36,260 --> 00:33:42,080
central authentication we had to look at

00:33:37,730 --> 00:33:43,990
what was available and we also had I'd

00:33:42,080 --> 00:33:46,940
look at what federal was using because

00:33:43,990 --> 00:33:49,820
one of the the the the requirement was

00:33:46,940 --> 00:33:51,080
community portal so community self cozy

00:33:49,820 --> 00:33:54,230
situation people could serve register

00:33:51,080 --> 00:33:55,910
for an account and then be promoted if

00:33:54,230 --> 00:33:59,540
you have a look at IP AI please really

00:33:55,910 --> 00:34:02,210
looking at enterprise thing but they was

00:33:59,540 --> 00:34:05,240
lacking that kind of self bottle nobody

00:34:02,210 --> 00:34:09,200
can self register in IPA except if you

00:34:05,240 --> 00:34:11,960
write something on top which those days

00:34:09,200 --> 00:34:14,870
it was more like it was just for

00:34:11,960 --> 00:34:16,880
Kerberos authentication and the way we

00:34:14,870 --> 00:34:19,700
deploy Cugini initially for the build

00:34:16,880 --> 00:34:23,060
system we were using x.509 so TLS

00:34:19,700 --> 00:34:26,450
certificate authentication which fast

00:34:23,060 --> 00:34:29,090
was doing so fast well from meeting

00:34:26,450 --> 00:34:31,790
requirement but if you are contributed

00:34:29,090 --> 00:34:33,380
to federal you know that things are

00:34:31,790 --> 00:34:36,560
slowly changing at the far aside because

00:34:33,380 --> 00:34:39,350
there is already cables now behind the

00:34:36,560 --> 00:34:43,370
scene it's because of fast is talking to

00:34:39,350 --> 00:34:45,890
IP database back-end so that's something

00:34:43,370 --> 00:34:48,679
that will probably just need to spend

00:34:45,890 --> 00:34:50,120
time on to catch up but our be at the

00:34:48,679 --> 00:34:51,399
same level at the photographer of our

00:34:50,120 --> 00:34:54,349
guys

00:34:51,399 --> 00:34:56,629
to decide to finally migrate to IPA

00:34:54,349 --> 00:34:59,510
database for multi master replication

00:34:56,629 --> 00:35:01,760
etc so that was for a question does that

00:34:59,510 --> 00:35:05,020
does that answer your question okay the

00:35:01,760 --> 00:35:08,359
second one was about migrating from a

00:35:05,020 --> 00:35:12,320
patent foramen juice and Sybil that

00:35:08,359 --> 00:35:15,800
question is I would say maybe still open

00:35:12,320 --> 00:35:18,530
in the sense that I while I like Foreman

00:35:15,800 --> 00:35:20,090
a lot for puppets it made sense because

00:35:18,530 --> 00:35:23,780
it was his target it was the primary

00:35:20,090 --> 00:35:27,770
target so deployment and puppet but the

00:35:23,780 --> 00:35:30,619
dashboard but the way you can integrate

00:35:27,770 --> 00:35:33,170
and Sybil with whisper with Forman those

00:35:30,619 --> 00:35:35,359
days is really limited you come run

00:35:33,170 --> 00:35:37,609
adduct ask it's just you can just tag

00:35:35,359 --> 00:35:39,530
roll nothing more not even play books

00:35:37,609 --> 00:35:42,710
using the role of specific orchestration

00:35:39,530 --> 00:35:45,710
so it doesn't fit it doesn't you know it

00:35:42,710 --> 00:35:47,540
doesn't work for us so we had a look at

00:35:45,710 --> 00:35:52,580
our well not at our

00:35:47,540 --> 00:35:54,560
aw wax and aw wax at the moment I was

00:35:52,580 --> 00:35:59,359
surprised that it's lacking some of the

00:35:54,560 --> 00:36:01,099
feature we want like well on the other

00:35:59,359 --> 00:36:02,510
thing at the authentication level it

00:36:01,099 --> 00:36:05,000
should be possible to use sam'l token

00:36:02,510 --> 00:36:05,619
now through going through Absalon that

00:36:05,000 --> 00:36:08,030
would work

00:36:05,619 --> 00:36:09,230
i'm also discussing with the federal

00:36:08,030 --> 00:36:10,910
guys because they are facing the same

00:36:09,230 --> 00:36:13,390
issue they are already using ansible but

00:36:10,910 --> 00:36:15,710
just only just in Sibyl blip natively

00:36:13,390 --> 00:36:19,820
but on the other side

00:36:15,710 --> 00:36:23,859
I admit that what it's not a secret that

00:36:19,820 --> 00:36:26,980
we use Jenkins a lot right it's for CI

00:36:23,859 --> 00:36:30,589
for a previous job I was also already

00:36:26,980 --> 00:36:32,869
orchestrating what using abusing Jenkins

00:36:30,589 --> 00:36:34,849
for operation side launching ansible

00:36:32,869 --> 00:36:37,490
playbook and delegating those tasks or

00:36:34,849 --> 00:36:40,570
those role to for example people from

00:36:37,490 --> 00:36:44,300
release management and I revisited that

00:36:40,570 --> 00:36:48,619
doing a comparison of what a WX can do

00:36:44,300 --> 00:36:50,810
and Jenkins and it seems to be it scrum

00:36:48,619 --> 00:36:54,220
to crazy ID but for us it seems that

00:36:50,810 --> 00:36:57,440
even just using Jenkins as a kind of run

00:36:54,220 --> 00:37:00,020
executor on top of instable playbook

00:36:57,440 --> 00:37:01,580
makes sense I can explain you why in

00:37:00,020 --> 00:37:03,170
which I have a slide just for that

00:37:01,580 --> 00:37:03,990
because I give a talk just about that

00:37:03,170 --> 00:37:04,980
but

00:37:03,990 --> 00:37:06,750
I don't think that we'll have enough

00:37:04,980 --> 00:37:11,310
minute for that but in choose two

00:37:06,750 --> 00:37:14,910
minutes we have machine everywhere so

00:37:11,310 --> 00:37:17,369
latency is an issue especially for

00:37:14,910 --> 00:37:19,170
instable through SSH so there is now

00:37:17,369 --> 00:37:21,540
you've probably heard of a meter gen

00:37:19,170 --> 00:37:25,560
thing which is not in in Sybil core but

00:37:21,540 --> 00:37:27,000
it's developed by a guy from UK to speed

00:37:25,560 --> 00:37:28,700
up things you should have a look that's

00:37:27,000 --> 00:37:33,650
really promise'

00:37:28,700 --> 00:37:37,050
but still if you have one awx machine

00:37:33,650 --> 00:37:38,910
from whatever for in the US for example

00:37:37,050 --> 00:37:42,240
targeting machine in Australia or in

00:37:38,910 --> 00:37:43,770
China Malaysia Brazil that takes a lot a

00:37:42,240 --> 00:37:47,849
lot of time just to render serve the

00:37:43,770 --> 00:37:49,440
PlayBook while in Jenkins what you can

00:37:47,849 --> 00:37:53,250
do is that you have one master in

00:37:49,440 --> 00:37:55,349
multiple slaves right so that's the

00:37:53,250 --> 00:37:57,359
traditional way for CI and building

00:37:55,349 --> 00:37:59,940
package try to apply the same principle

00:37:57,359 --> 00:38:01,800
for operation you have one Jenkins

00:37:59,940 --> 00:38:03,810
master that knows everything about how

00:38:01,800 --> 00:38:06,119
to call a specific interval playbook and

00:38:03,810 --> 00:38:08,460
you can divide it by region for example

00:38:06,119 --> 00:38:11,339
you can have one slave per region or

00:38:08,460 --> 00:38:12,990
even per country depending and that is

00:38:11,339 --> 00:38:15,359
the executor to during the Machine

00:38:12,990 --> 00:38:17,849
launching playbook and report back the

00:38:15,359 --> 00:38:19,430
result to the Jenkins master in one

00:38:17,849 --> 00:38:24,119
location

00:38:19,430 --> 00:38:26,550
Jenkins report also g-unit which as well

00:38:24,119 --> 00:38:30,570
does by default it has a journey g-unit

00:38:26,550 --> 00:38:32,609
callback so you have even good graphs in

00:38:30,570 --> 00:38:34,830
Jenkins automatically it's not meant to

00:38:32,609 --> 00:38:39,300
be used on top of J of instable but it

00:38:34,830 --> 00:38:41,580
works fine at the moment in in awx there

00:38:39,300 --> 00:38:45,089
is no concept of you have multi node

00:38:41,580 --> 00:38:49,920
setup that's true but more like in HJ

00:38:45,089 --> 00:38:52,230
and using the same buzz grass DB so no I

00:38:49,920 --> 00:38:53,910
don't think that I win in in Europe

00:38:52,230 --> 00:38:55,589
accessing the progress of our VPN

00:38:53,910 --> 00:38:58,650
channel just to be able to locally

00:38:55,589 --> 00:38:59,339
launch my playbook do that does that

00:38:58,650 --> 00:39:01,240
answer your question

00:38:59,339 --> 00:39:04,240
great

00:39:01,240 --> 00:39:06,670
what we can just discuss later of after

00:39:04,240 --> 00:39:09,760
implementation details if you want so of

00:39:06,670 --> 00:39:12,210
the question yes the microphone at the

00:39:09,760 --> 00:39:12,210
back please

00:39:15,710 --> 00:39:20,700
okay I actually have two questions one

00:39:18,359 --> 00:39:22,770
is the instable repo that you guys use

00:39:20,700 --> 00:39:25,950
like in all the play books is that open

00:39:22,770 --> 00:39:28,680
source is that public not yet because I

00:39:25,950 --> 00:39:31,290
told you that initially I offer I said

00:39:28,680 --> 00:39:33,900
that obviously we were we were a puppet

00:39:31,290 --> 00:39:35,849
shop and I think that I probably just

00:39:33,900 --> 00:39:39,960
was a little bit too unstable to enter

00:39:35,849 --> 00:39:42,329
the so it was semi official but we as

00:39:39,960 --> 00:39:44,700
now we decide to roughly migrate from

00:39:42,329 --> 00:39:47,010
barbecue instable will just review

00:39:44,700 --> 00:39:48,930
everything and publish everything I'm

00:39:47,010 --> 00:39:50,490
probably on get up on first step but

00:39:48,930 --> 00:39:52,530
after that unpack your when we'll have

00:39:50,490 --> 00:39:55,170
migrated back your so yes that's a goal

00:39:52,530 --> 00:39:59,119
okay my second question is can you talk

00:39:55,170 --> 00:40:00,869
at all can you compare about if a

00:39:59,119 --> 00:40:03,450
contributor from the community wants to

00:40:00,869 --> 00:40:04,619
start volunteering on CentOS infra can

00:40:03,450 --> 00:40:06,599
you compare the process for doing that

00:40:04,619 --> 00:40:10,710
versus the process that we use in fedora

00:40:06,599 --> 00:40:12,780
for onboarding new people that's the

00:40:10,710 --> 00:40:15,000
answer can surprise you but that will be

00:40:12,780 --> 00:40:17,130
really easy in a sense that the question

00:40:15,000 --> 00:40:19,700
is about comparison there is nothing to

00:40:17,130 --> 00:40:22,650
compare you have a process we don't

00:40:19,700 --> 00:40:24,960
that's a problem and that's a problem

00:40:22,650 --> 00:40:26,520
that we have to solve really that's

00:40:24,960 --> 00:40:28,530
reason why I wanted to attend your talk

00:40:26,520 --> 00:40:31,040
but I was I wasn't able to because I was

00:40:28,530 --> 00:40:33,359
busy with Patrick doing something but

00:40:31,040 --> 00:40:35,280
sure that's the reason why I would like

00:40:33,359 --> 00:40:38,160
to collaborate more because we can learn

00:40:35,280 --> 00:40:40,470
a lot of you and probably you can learn

00:40:38,160 --> 00:40:42,150
some of the things from her because does

00:40:40,470 --> 00:40:44,190
it make sense to search on each on the

00:40:42,150 --> 00:40:45,720
outside to solve the exactly the same

00:40:44,190 --> 00:40:47,460
problem so we can learn from each other

00:40:45,720 --> 00:40:52,829
that's why we said collaboration more

00:40:47,460 --> 00:40:54,480
and more right so that's that's exactly

00:40:52,829 --> 00:40:56,390
the point where we want to go with the

00:40:54,480 --> 00:40:59,369
fact that we want you up to publicly

00:40:56,390 --> 00:41:01,440
show everything that is used so that

00:40:59,369 --> 00:41:03,030
people can just do poll requests for

00:41:01,440 --> 00:41:05,040
example against code in the infra

00:41:03,030 --> 00:41:08,220
without even a need to touch the machine

00:41:05,040 --> 00:41:10,950
or just get inspired or whatever so

00:41:08,220 --> 00:41:12,510
that's that's a process we need you

00:41:10,950 --> 00:41:14,310
that's basically how we want to do

00:41:12,510 --> 00:41:16,800
things but yeah that's a process that we

00:41:14,310 --> 00:41:18,569
really have to write and if some people

00:41:16,800 --> 00:41:22,800
probably spend time on because that's

00:41:18,569 --> 00:41:24,840
true that we have nothing that's

00:41:22,800 --> 00:41:27,630
that's probably one of the legacy issue

00:41:24,840 --> 00:41:29,790
with the Santos eco system that it was

00:41:27,630 --> 00:41:32,790
still based on the idea that it was just

00:41:29,790 --> 00:41:34,560
three guys doing that somewhere and so

00:41:32,790 --> 00:41:36,480
not thinking a lot because they had no

00:41:34,560 --> 00:41:38,910
time to communicate a lot or even have

00:41:36,480 --> 00:41:40,980
time to unwrap other people that's one

00:41:38,910 --> 00:41:44,070
thing that we should solve now that we

00:41:40,980 --> 00:41:48,750
try to with the CI system and also on

00:41:44,070 --> 00:41:53,800
diem for a level thank you no more

00:41:48,750 --> 00:41:59,260
questions they thank you

00:41:53,800 --> 00:41:59,260

YouTube URL: https://www.youtube.com/watch?v=Rg2GK4rqGXw


