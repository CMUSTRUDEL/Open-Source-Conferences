Title: Flock 2018 - [Keynote] State of Fedora Keynote Objectives & Editions [Part 2]
Publication date: 2018-08-29
Playlist: Flock 2018
Description: 
	Wednesday, August 8, 2018
11:00am - 12:30pm
@Meissen + Radebeul

Talk: Atomic Working Group Updates
Presenters: Dusty Mabe

Description: Join us for the traditional "State of Fedora" talk by Fedora Project Leader, Matthew Miller. You'll also hear a brief status from each of our Editions and Objectives.
Captions: 
	00:00:02,180 --> 00:00:12,510
we so how did everyone like that arm

00:00:05,519 --> 00:00:13,800
sponsored coffee break they didn't

00:00:12,510 --> 00:00:16,199
actually ask me to say their name that

00:00:13,800 --> 00:00:21,539
much so if you the gentleman who is here

00:00:16,199 --> 00:00:23,609
from arm this is a bonus so our next

00:00:21,539 --> 00:00:29,069
speaker is dusty mabe and he is going to

00:00:23,609 --> 00:00:34,200
be talking to us about atomic right on

00:00:29,069 --> 00:00:36,120
this one and I'm gonna stand over here

00:00:34,200 --> 00:00:40,830
to the side so I can actually see I

00:00:36,120 --> 00:00:42,480
actually switched can't do anything with

00:00:40,830 --> 00:00:45,030
my left hand okay

00:00:42,480 --> 00:00:47,220
so my name is dusty mabe I'm

00:00:45,030 --> 00:00:49,020
representing the atomic working group

00:00:47,220 --> 00:00:51,660
which has met a lot of different things

00:00:49,020 --> 00:00:54,300
to a lot of different people Lingnan

00:00:51,660 --> 00:00:56,820
just asked me to clarify I am NOT

00:00:54,300 --> 00:00:58,680
currently representing the cloud working

00:00:56,820 --> 00:01:01,050
group up here right now the cloud

00:00:58,680 --> 00:01:02,579
working group is the one that delivers

00:01:01,050 --> 00:01:06,450
the cloud base image which is

00:01:02,579 --> 00:01:11,130
essentially the classic login to your

00:01:06,450 --> 00:01:13,050
system and install rpms or use cloud in

00:01:11,130 --> 00:01:14,700
it to kind of boot it up he wanted me to

00:01:13,050 --> 00:01:17,040
clarify a lot of other things but I

00:01:14,700 --> 00:01:21,600
don't necessarily build that into this

00:01:17,040 --> 00:01:23,729
talk so so I'm representing the atomic

00:01:21,600 --> 00:01:25,950
working group what is the atomic working

00:01:23,729 --> 00:01:27,720
group we've kind of been three different

00:01:25,950 --> 00:01:30,720
parts up until this point obviously

00:01:27,720 --> 00:01:34,380
there's the atomic host part there's

00:01:30,720 --> 00:01:37,140
also the container run times part so we

00:01:34,380 --> 00:01:39,690
have a team of people that work on you

00:01:37,140 --> 00:01:41,520
know docker or pod man or other

00:01:39,690 --> 00:01:44,369
container runtimes so how do you run

00:01:41,520 --> 00:01:47,760
containers on your hosts and we also

00:01:44,369 --> 00:01:49,830
have a group that works on essentially

00:01:47,760 --> 00:01:52,130
application containers within fedora so

00:01:49,830 --> 00:01:54,299
helping take applications that are

00:01:52,130 --> 00:01:57,119
traditionally delivered by rpms in

00:01:54,299 --> 00:01:58,530
fedora and packaging them up in

00:01:57,119 --> 00:02:00,659
containers and putting them in a

00:01:58,530 --> 00:02:03,150
registry that Fedora users think can

00:02:00,659 --> 00:02:06,240
then download and use so let me start

00:02:03,150 --> 00:02:08,700
with the container steams updates so

00:02:06,240 --> 00:02:11,130
first of all we've had a lot of work

00:02:08,700 --> 00:02:13,620
done here in the containers teams and

00:02:11,130 --> 00:02:16,409
now each of our tools has it

00:02:13,620 --> 00:02:20,819
it's own little avatar so mo Duffy

00:02:16,409 --> 00:02:22,620
created a container container run times

00:02:20,819 --> 00:02:24,959
coloring book book I believe and

00:02:22,620 --> 00:02:27,269
essentially what we have is a different

00:02:24,959 --> 00:02:29,099
avatar for each tool we've got Padma and

00:02:27,269 --> 00:02:30,870
scope yo we've got builder we've got

00:02:29,099 --> 00:02:33,540
cryo and a little guy over there for

00:02:30,870 --> 00:02:35,670
openshift origin which is pretty awesome

00:02:33,540 --> 00:02:39,180
I think so I decided to include that in

00:02:35,670 --> 00:02:41,400
this portion of the talk but you know

00:02:39,180 --> 00:02:42,900
really what has happened with the

00:02:41,400 --> 00:02:45,269
containers teams in the past six months

00:02:42,900 --> 00:02:46,650
I asked Dan Walsh to give me kind of a

00:02:45,269 --> 00:02:49,410
condensed version and he gave me two

00:02:46,650 --> 00:02:51,810
pages of notes so like that's what we

00:02:49,410 --> 00:02:53,640
ended up with I essentially took that

00:02:51,810 --> 00:02:55,410
and tried to condense it down into

00:02:53,640 --> 00:02:58,260
something that was consumable for this

00:02:55,410 --> 00:03:01,890
audience so first off we'll start with a

00:02:58,260 --> 00:03:03,840
tool called cryo cryo is essentially a

00:03:01,890 --> 00:03:05,819
container runtime for kubernetes as

00:03:03,840 --> 00:03:07,859
version with kubernetes and released

00:03:05,819 --> 00:03:11,459
with kubernetes so for example if you

00:03:07,859 --> 00:03:14,370
want to run kubernetes 1.11 you would

00:03:11,459 --> 00:03:16,530
use cryo 1.11 and not another version

00:03:14,370 --> 00:03:18,660
which is really nice because you know

00:03:16,530 --> 00:03:20,459
that it was tested with kubernetes 111

00:03:18,660 --> 00:03:21,959
and it's more likely to work and you

00:03:20,459 --> 00:03:24,510
don't have to deal with version

00:03:21,959 --> 00:03:26,730
mismatches and all that which can be

00:03:24,510 --> 00:03:28,169
quite troublesome as we found out when

00:03:26,730 --> 00:03:31,139
trying to pair it with something like

00:03:28,169 --> 00:03:33,180
docker so it's a version with kubernetes

00:03:31,139 --> 00:03:35,669
released with kubernetes we also have

00:03:33,180 --> 00:03:38,250
open shift origin that is trying to

00:03:35,669 --> 00:03:38,730
target cryo and only target cryo at this

00:03:38,250 --> 00:03:41,940
point

00:03:38,730 --> 00:03:43,769
so using cryo as a runtime we're

00:03:41,940 --> 00:03:45,900
currently running openshift

00:03:43,769 --> 00:03:48,180
online which is essentially a place

00:03:45,900 --> 00:03:50,579
where you can go try out openshift if

00:03:48,180 --> 00:03:52,230
you want to you know just kick the tires

00:03:50,579 --> 00:03:55,620
with it and see if it's something that

00:03:52,230 --> 00:03:57,660
you could use so it actually runs on top

00:03:55,620 --> 00:04:00,239
of cryo now and we also have that

00:03:57,660 --> 00:04:03,060
running in Microsoft Azure for cata

00:04:00,239 --> 00:04:05,280
containers so cryo is running in the

00:04:03,060 --> 00:04:06,599
wild which is kind of cool so other

00:04:05,280 --> 00:04:08,699
things that they've done in cryo in the

00:04:06,599 --> 00:04:10,620
past six months is offer a better

00:04:08,699 --> 00:04:14,370
security through they added a rootless

00:04:10,620 --> 00:04:15,840
mode they've added no dev mount so you

00:04:14,370 --> 00:04:18,030
know if you had a file system that was

00:04:15,840 --> 00:04:19,829
mounted with device nodes on it the

00:04:18,030 --> 00:04:22,590
kernel will ignore that now and they've

00:04:19,829 --> 00:04:24,750
added some ability to control

00:04:22,590 --> 00:04:26,280
capabilities a little better for cryo

00:04:24,750 --> 00:04:28,500
containers

00:04:26,280 --> 00:04:30,360
the next tool is pod man which is

00:04:28,500 --> 00:04:33,000
essentially a way to run local

00:04:30,360 --> 00:04:35,810
containers on your system the CLI or API

00:04:33,000 --> 00:04:38,730
it's essentially a docker equivalent

00:04:35,810 --> 00:04:41,190
they you know one thing that we've done

00:04:38,730 --> 00:04:44,640
there is added the ability to actually

00:04:41,190 --> 00:04:46,590
build OCI images with pod man so

00:04:44,640 --> 00:04:49,800
previously pod meant bill was not a

00:04:46,590 --> 00:04:53,070
thing but they've actually coordinated

00:04:49,800 --> 00:04:55,260
with bilder and now you can run pod man

00:04:53,070 --> 00:04:57,390
build just as if you had done docker

00:04:55,260 --> 00:04:59,490
build and it will actually create an OCI

00:04:57,390 --> 00:05:02,250
container on your local system that you

00:04:59,490 --> 00:05:04,770
can then push or pull from a registry

00:05:02,250 --> 00:05:06,570
which is quite nice they also added a

00:05:04,770 --> 00:05:08,100
rootless mode so if you've ever had an

00:05:06,570 --> 00:05:09,810
issue where you wanted to run docker on

00:05:08,100 --> 00:05:11,610
a system but you didn't want to run it

00:05:09,810 --> 00:05:13,920
as root you can now do that with

00:05:11,610 --> 00:05:15,630
something called pod man which is pretty

00:05:13,920 --> 00:05:19,190
awesome they also did some work with

00:05:15,630 --> 00:05:22,020
rootless network namespaces which is

00:05:19,190 --> 00:05:23,250
actually something that's been pretty

00:05:22,020 --> 00:05:25,020
hard to do in the past they use a

00:05:23,250 --> 00:05:28,290
technology called slurp for net

00:05:25,020 --> 00:05:31,620
namespace and they added user name space

00:05:28,290 --> 00:05:34,260
report our support and remote API via

00:05:31,620 --> 00:05:37,890
VAR link this has enabled them to create

00:05:34,260 --> 00:05:42,660
essentially Python bindings or integrate

00:05:37,890 --> 00:05:45,030
with tools like cockpit bilder is

00:05:42,660 --> 00:05:47,490
essentially a tool that you can use to

00:05:45,030 --> 00:05:50,790
build OCI container images it's the back

00:05:47,490 --> 00:05:53,910
end for pod men build they also have

00:05:50,790 --> 00:05:55,890
added layer caching now so previously if

00:05:53,910 --> 00:05:58,530
you ran docker build you would get

00:05:55,890 --> 00:06:00,750
caching for every layer if for example

00:05:58,530 --> 00:06:03,060
you know part of your docker file had

00:06:00,750 --> 00:06:06,000
not changed you now get that with bilder

00:06:03,060 --> 00:06:07,830
and with pod man build and they added

00:06:06,000 --> 00:06:09,510
rootless container builds so if you're

00:06:07,830 --> 00:06:11,550
an unprivileged user on a system you can

00:06:09,510 --> 00:06:14,220
actually just inside your home directory

00:06:11,550 --> 00:06:18,380
create an OCI container image which is

00:06:14,220 --> 00:06:20,940
like you know us i guess more or less a

00:06:18,380 --> 00:06:22,560
sophisticated version of a tarball which

00:06:20,940 --> 00:06:24,660
you theoretically should not you need

00:06:22,560 --> 00:06:27,120
root for so they added it so you can do

00:06:24,660 --> 00:06:29,130
rootless container builds support for

00:06:27,120 --> 00:06:31,770
user namespaces again and integration

00:06:29,130 --> 00:06:33,120
and openshift so if you did any builds

00:06:31,770 --> 00:06:34,979
and OpenShift in the past you were

00:06:33,120 --> 00:06:37,080
running on top of docker build

00:06:34,979 --> 00:06:38,520
essentially now they have that

00:06:37,080 --> 00:06:39,780
integrated into OpenShift a little

00:06:38,520 --> 00:06:43,260
better so now your

00:06:39,780 --> 00:06:45,270
bilder instead of docker build all right

00:06:43,260 --> 00:06:47,610
condensing this down into a few other

00:06:45,270 --> 00:06:49,080
things scope EO container storage and

00:06:47,610 --> 00:06:51,750
containers image which are libraries

00:06:49,080 --> 00:06:53,550
that scope EO uses these are essentially

00:06:51,750 --> 00:06:56,960
used to push and pull container images

00:06:53,550 --> 00:06:59,370
from registries they added you know

00:06:56,960 --> 00:07:01,890
rootless support layer support better

00:06:59,370 --> 00:07:04,050
security compression etc another thing

00:07:01,890 --> 00:07:05,820
to note is a lot of upstream projects

00:07:04,050 --> 00:07:08,280
are now starting to use these tools like

00:07:05,820 --> 00:07:10,440
these libraries and scope EO itself

00:07:08,280 --> 00:07:11,790
openSUSE has to be happens to be one

00:07:10,440 --> 00:07:14,520
that we're collaborating with a lot

00:07:11,790 --> 00:07:16,410
there so this kind of shows you a little

00:07:14,520 --> 00:07:17,730
bit of the health of the project you

00:07:16,410 --> 00:07:20,340
know having different upstream

00:07:17,730 --> 00:07:23,400
communities work on these tools and use

00:07:20,340 --> 00:07:25,980
them is a really good thing okay

00:07:23,400 --> 00:07:27,900
so application containers so we have a

00:07:25,980 --> 00:07:31,400
thing called registry dot Fedora project

00:07:27,900 --> 00:07:34,169
org which is where you can go grab some

00:07:31,400 --> 00:07:37,140
different applications

00:07:34,169 --> 00:07:39,300
you know Postgres or you know we've got

00:07:37,140 --> 00:07:46,020
a whole list of them here and then cache

00:07:39,300 --> 00:07:47,640
d httpd etc etc we have had this ability

00:07:46,020 --> 00:07:52,380
for a little while but it's kind of been

00:07:47,640 --> 00:07:54,000
more of a you know come to the working

00:07:52,380 --> 00:07:56,310
group and try to figure out how to build

00:07:54,000 --> 00:07:58,560
it in a candidate registry and then

00:07:56,310 --> 00:08:01,380
figure out how to talk to in order to

00:07:58,560 --> 00:08:05,310
get it released so Clements been working

00:08:01,380 --> 00:08:07,229
on actually making this like an official

00:08:05,310 --> 00:08:09,000
thing within Fedora so you can get

00:08:07,229 --> 00:08:10,830
container updates and Bodhi you don't

00:08:09,000 --> 00:08:12,330
have to like talk to some person and

00:08:10,830 --> 00:08:14,100
release engineering that you might not

00:08:12,330 --> 00:08:15,270
necessarily know at the moment to try to

00:08:14,100 --> 00:08:16,740
figure out how to get it released

00:08:15,270 --> 00:08:19,080
because the current version less release

00:08:16,740 --> 00:08:20,820
has a bug in it etc so he's been doing a

00:08:19,080 --> 00:08:23,340
lot of good work there he's also been

00:08:20,820 --> 00:08:25,169
working on building flat packs using our

00:08:23,340 --> 00:08:28,890
tool that builds these container images

00:08:25,169 --> 00:08:30,510
called OS PS so I think it was mentioned

00:08:28,890 --> 00:08:33,120
earlier that we want to deliver flat

00:08:30,510 --> 00:08:35,669
packs in fedora and so he's been working

00:08:33,120 --> 00:08:37,409
with Owen I think there on making that

00:08:35,669 --> 00:08:39,320
happen both of those are in staging

00:08:37,409 --> 00:08:41,760
right now so they should hit pretty soon

00:08:39,320 --> 00:08:43,830
and the other thing that's been working

00:08:41,760 --> 00:08:46,530
on is multi arch container building and

00:08:43,830 --> 00:08:48,959
OS PS so actually building those

00:08:46,530 --> 00:08:50,600
applications for other architectures not

00:08:48,959 --> 00:08:55,699
just 64-bit

00:08:50,600 --> 00:08:59,209
AMD until okay so he actually sent out a

00:08:55,699 --> 00:09:03,319
I don't know call for something I call

00:08:59,209 --> 00:09:05,779
for interest recently on the devel

00:09:03,319 --> 00:09:08,089
mailing list and actually got a lot of

00:09:05,779 --> 00:09:11,589
interest in people wanting to join the

00:09:08,089 --> 00:09:15,040
special interest group for containers so

00:09:11,589 --> 00:09:17,600
there is a session later this week on

00:09:15,040 --> 00:09:19,610
Friday I think so

00:09:17,600 --> 00:09:22,660
August 10th whatever August 10th is I

00:09:19,610 --> 00:09:25,279
think this Friday from 122 3:10 p.m.

00:09:22,660 --> 00:09:28,190
later I also advertised another session

00:09:25,279 --> 00:09:31,069
and I use 24 hour format time so I'm

00:09:28,190 --> 00:09:32,990
keeping everybody on their toes and it

00:09:31,069 --> 00:09:35,690
is my sin and radical I don't know how

00:09:32,990 --> 00:09:37,100
to say that but that is where that will

00:09:35,690 --> 00:09:38,899
be so if you're interested you should

00:09:37,100 --> 00:09:40,699
definitely join that session so that we

00:09:38,899 --> 00:09:43,370
can actually get more application

00:09:40,699 --> 00:09:44,779
containers within fedora and help knock

00:09:43,370 --> 00:09:50,180
down some of the barriers there that

00:09:44,779 --> 00:09:53,360
people are having okay here all right

00:09:50,180 --> 00:09:57,199
atomic host so around the fedora 28

00:09:53,360 --> 00:09:59,060
timeframe for atomic host the atomic

00:09:57,199 --> 00:10:00,800
host community's been really growing and

00:09:59,060 --> 00:10:03,920
we've had a lot more engagement in the

00:10:00,800 --> 00:10:05,660
community for people that are interested

00:10:03,920 --> 00:10:08,209
in the technology and interesting

00:10:05,660 --> 00:10:10,550
interested in using it and interested in

00:10:08,209 --> 00:10:13,370
the unique features that it has

00:10:10,550 --> 00:10:15,230
one other thing to say is the the RPM OS

00:10:13,370 --> 00:10:17,870
tree technology itself has really been

00:10:15,230 --> 00:10:19,699
catching on so for example we actually

00:10:17,870 --> 00:10:22,579
have two other additions that are now

00:10:19,699 --> 00:10:24,589
using rpm OS tree underneath that's

00:10:22,579 --> 00:10:27,139
Fedora I of T which I think Peter will

00:10:24,589 --> 00:10:29,509
talk about and then Fedora silver blue

00:10:27,139 --> 00:10:31,250
which Matthias talked about earlier so

00:10:29,509 --> 00:10:33,620
both of those are using rpm OS tree

00:10:31,250 --> 00:10:35,449
underneath just delivering a different

00:10:33,620 --> 00:10:37,730
package set and packaging it up a little

00:10:35,449 --> 00:10:41,360
different way and delivering updates on

00:10:37,730 --> 00:10:43,250
their own cadence also in the fedora 28

00:10:41,360 --> 00:10:45,170
timeframe for atomic hosts we started

00:10:43,250 --> 00:10:46,850
shipping pod men by default the pod

00:10:45,170 --> 00:10:49,250
man's pretty new it's made a lot of

00:10:46,850 --> 00:10:51,439
progress over the past six months and

00:10:49,250 --> 00:10:56,630
you know definitely try that out if you

00:10:51,439 --> 00:10:58,009
haven't yet also automated updates so

00:10:56,630 --> 00:11:00,860
this is something that we did not have

00:10:58,009 --> 00:11:03,540
for a long time and Jonathan Lebon from

00:11:00,860 --> 00:11:05,970
the atomic team started working on that

00:11:03,540 --> 00:11:08,279
now for example your system can check

00:11:05,970 --> 00:11:09,870
for automatic update or check for

00:11:08,279 --> 00:11:12,720
updates automatically without you having

00:11:09,870 --> 00:11:15,240
to type our pmos tree upgrade or some

00:11:12,720 --> 00:11:18,000
you know otherwise script that via

00:11:15,240 --> 00:11:19,920
answer board or some other way we also

00:11:18,000 --> 00:11:22,589
have a unified server-side OS tree

00:11:19,920 --> 00:11:25,800
repository which means you know when you

00:11:22,589 --> 00:11:28,800
are pulling content from fedora you only

00:11:25,800 --> 00:11:31,920
need to look in one place previously we

00:11:28,800 --> 00:11:34,920
had a different repository for every

00:11:31,920 --> 00:11:38,160
release of fedora so Fedora 25 and 24

00:11:34,920 --> 00:11:39,540
had their own repositories now it's all

00:11:38,160 --> 00:11:41,130
in the same place all the different

00:11:39,540 --> 00:11:43,259
architectures are in the same place and

00:11:41,130 --> 00:11:45,300
then also atomic workstations life

00:11:43,259 --> 00:11:47,730
silver-blue and atomic host are in the

00:11:45,300 --> 00:11:49,459
same place which means that if they

00:11:47,730 --> 00:11:51,899
share any common files which is likely

00:11:49,459 --> 00:11:55,170
they'll also be dee-do we don't need to

00:11:51,899 --> 00:11:59,279
store that many many times multi arch

00:11:55,170 --> 00:12:01,800
basically we have AR 64 and PowerPC 64

00:11:59,279 --> 00:12:03,930
little-endian architectures with atomic

00:12:01,800 --> 00:12:05,940
host we've been releasing those at the

00:12:03,930 --> 00:12:13,019
same time that we released the 64-bit

00:12:05,940 --> 00:12:15,959
AMD x86 64 OS tree so those get you know

00:12:13,019 --> 00:12:17,790
released at the same time and have some

00:12:15,959 --> 00:12:21,540
level of testing not quite as much as

00:12:17,790 --> 00:12:24,300
the 64-bit Intel but we've been proud to

00:12:21,540 --> 00:12:25,920
actually offer that as well and those

00:12:24,300 --> 00:12:28,040
get shipped every two weeks and I'd like

00:12:25,920 --> 00:12:30,569
to thank everybody who helps enable that

00:12:28,040 --> 00:12:33,540
because we've automated a lot of stuff

00:12:30,569 --> 00:12:36,410
but it also still takes you know some

00:12:33,540 --> 00:12:39,449
manual work so like to appreciate

00:12:36,410 --> 00:12:41,670
everybody who helps us find find issues

00:12:39,449 --> 00:12:45,449
report issues and fix problems as they

00:12:41,670 --> 00:12:48,029
come out so what is the future of atomic

00:12:45,449 --> 00:12:51,449
host is the big question here and I'll

00:12:48,029 --> 00:12:53,850
take a side detour which is to say Matt

00:12:51,449 --> 00:12:55,920
mentioned it earlier but Red Hat

00:12:53,850 --> 00:12:58,889
acquired two core OS earlier this year I

00:12:55,920 --> 00:13:01,290
actually saw this exact tweet when I got

00:12:58,889 --> 00:13:02,939
home from DEFCON you know right about

00:13:01,290 --> 00:13:04,889
the same time that I got home from dev

00:13:02,939 --> 00:13:10,019
comp and this is actually really great

00:13:04,889 --> 00:13:13,050
because the core OS team the core OS

00:13:10,019 --> 00:13:15,360
company basically has or had I don't

00:13:13,050 --> 00:13:16,330
know which term you necessarily want to

00:13:15,360 --> 00:13:18,880
use

00:13:16,330 --> 00:13:21,400
like really excellent engineers a really

00:13:18,880 --> 00:13:25,090
great open source philosophy a focus on

00:13:21,400 --> 00:13:27,300
security and also a vast community and

00:13:25,090 --> 00:13:30,790
user base they really aligned well with

00:13:27,300 --> 00:13:33,910
a lot of the things that we believe in

00:13:30,790 --> 00:13:37,030
fedora and we believe at Red Hat so I

00:13:33,910 --> 00:13:39,700
was really happy to to see that they had

00:13:37,030 --> 00:13:41,770
agreed to join Red Hat and to join our

00:13:39,700 --> 00:13:44,410
community so one thing that I'd like to

00:13:41,770 --> 00:13:47,770
say is if you meet any of them here or

00:13:44,410 --> 00:13:49,900
you know virtually to welcome them into

00:13:47,770 --> 00:13:52,840
the Fedora community and to make them

00:13:49,900 --> 00:13:55,000
feel like this is a great place to be

00:13:52,840 --> 00:13:59,260
because it really is and we're really

00:13:55,000 --> 00:14:01,570
excited to have them with us ok so I'm

00:13:59,260 --> 00:14:04,390
going back to atomic host now so in the

00:14:01,570 --> 00:14:07,570
Fedora 29 timeframe atomic host will

00:14:04,390 --> 00:14:09,970
continue on for fedora 29 will have

00:14:07,570 --> 00:14:12,070
regular releases until Fedora 30 comes

00:14:09,970 --> 00:14:15,010
out and at that point basically we'd

00:14:12,070 --> 00:14:16,540
like to move on to Fedora core LS which

00:14:15,010 --> 00:14:20,440
is the new thing that we're going to

00:14:16,540 --> 00:14:23,560
have so the reason for not having a lot

00:14:20,440 --> 00:14:25,540
of new features our work in Fedora 29 is

00:14:23,560 --> 00:14:27,490
because we're figuring out what Fedora

00:14:25,540 --> 00:14:30,010
core OS will look like exactly and

00:14:27,490 --> 00:14:33,340
trying to build the community there so

00:14:30,010 --> 00:14:35,500
Fedora core OS so the goal here is

00:14:33,340 --> 00:14:37,810
basically to merge the container Linux

00:14:35,500 --> 00:14:43,180
and atomic host communities into one and

00:14:37,810 --> 00:14:47,260
also you know kind of take an

00:14:43,180 --> 00:14:49,630
opportunity to revisit the design goals

00:14:47,260 --> 00:14:51,550
for each operating system you know when

00:14:49,630 --> 00:14:53,260
they were originally designed and see if

00:14:51,550 --> 00:14:56,320
there's things that we want to change or

00:14:53,260 --> 00:14:57,820
improve upon so that's essentially what

00:14:56,320 --> 00:15:00,910
we've been doing and what we will be

00:14:57,820 --> 00:15:03,310
doing for a short time period for the

00:15:00,910 --> 00:15:06,460
next you know four to five months or so

00:15:03,310 --> 00:15:08,560
and then the goal is that we basically

00:15:06,460 --> 00:15:10,900
release Fedora core OS officially for

00:15:08,560 --> 00:15:14,320
fedora 30 so that's why we'll have a

00:15:10,900 --> 00:15:16,390
fedora 29 atomic host and I'd really

00:15:14,320 --> 00:15:18,730
like to ask people to get involved we

00:15:16,390 --> 00:15:21,490
have a forum mailing list IRC channel

00:15:18,730 --> 00:15:24,190
issue tracker weekly meeting so we

00:15:21,490 --> 00:15:25,930
basically got the the framework for a

00:15:24,190 --> 00:15:28,800
good community there we've had a decent

00:15:25,930 --> 00:15:31,350
level of engagement already so far

00:15:28,800 --> 00:15:32,760
and I have a link up there to our issue

00:15:31,350 --> 00:15:35,010
tracker which is where you can

00:15:32,760 --> 00:15:38,310
essentially click through to find the

00:15:35,010 --> 00:15:41,580
mailing list or forum or IRC channel and

00:15:38,310 --> 00:15:44,460
all that it's hash fedora - core OS on

00:15:41,580 --> 00:15:46,590
freenode and we also have a talk

00:15:44,460 --> 00:15:48,930
tomorrow me Benjamin Gilbert and myself

00:15:46,590 --> 00:15:51,720
Benjamin is from the container Linux

00:15:48,930 --> 00:15:53,970
team he does a good job representing all

00:15:51,720 --> 00:15:54,630
of their interests we have that talk

00:15:53,970 --> 00:15:58,670
tomorrow

00:15:54,630 --> 00:16:06,590
at 2:30 to 3:00 2014 30 to 1520 and

00:15:58,670 --> 00:16:06,590
Hamburg so come visit us who's next

00:16:07,030 --> 00:16:10,280

YouTube URL: https://www.youtube.com/watch?v=T3zMhAfwvtg


