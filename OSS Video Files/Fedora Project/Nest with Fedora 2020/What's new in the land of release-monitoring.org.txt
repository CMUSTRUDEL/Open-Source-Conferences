Title: What's new in the land of release-monitoring.org
Publication date: 2020-08-29
Playlist: Nest with Fedora 2020
Description: 
	This will be an update about what happened in the magic world of release-monitoring.org (Anitya, the-new-hotness) in the last year.

Presented at Nest With Fedora 2020.
Captions: 
	00:00:03,600 --> 00:00:09,040
first thing

00:00:04,480 --> 00:00:13,040
i want to introduce myself

00:00:09,040 --> 00:00:16,880
my name is michal konechni

00:00:13,040 --> 00:00:18,000
i'm a mage in a cp team and i'm taking

00:00:16,880 --> 00:00:22,160
care of the

00:00:18,000 --> 00:00:25,199
magicland of the releasemonitoring.org

00:00:22,160 --> 00:00:28,800
i must apologize for the wizard head

00:00:25,199 --> 00:00:32,240
i usually have it but right now

00:00:28,800 --> 00:00:32,240
i have some issues with it so

00:00:33,120 --> 00:00:35,920
i apologize

00:00:36,559 --> 00:00:43,559
okay so here you can see

00:00:40,879 --> 00:00:45,360
how the world of the what

00:00:43,559 --> 00:00:47,680
releasemonitoring.org

00:00:45,360 --> 00:00:47,680
looks

00:00:48,399 --> 00:00:54,960
i'm usually looking for

00:00:52,000 --> 00:00:58,079
for everything from the highest tower in

00:00:54,960 --> 00:01:01,680
the castle

00:00:58,079 --> 00:01:05,360
there is uh uh part of it is also

00:01:01,680 --> 00:01:08,880
also island of the new hotness which is

00:01:05,360 --> 00:01:12,799
not seen of this on this uh

00:01:08,880 --> 00:01:16,640
image but yeah it is there

00:01:12,799 --> 00:01:16,640
as you can see it's pretty nice work

00:01:17,680 --> 00:01:26,720
and here is some basic sorcery so

00:01:21,840 --> 00:01:30,159
everybody is kind of

00:01:26,720 --> 00:01:33,439
knows who what release monitoring.org is

00:01:30,159 --> 00:01:36,479
it's actually have two parts the

00:01:33,439 --> 00:01:40,320
one part is anika the anika

00:01:36,479 --> 00:01:43,119
is most of the is the magic realm you

00:01:40,320 --> 00:01:43,119
actually saw

00:01:43,360 --> 00:01:49,680
it is taking uh

00:01:47,119 --> 00:01:51,360
it is uh taking care of checking for the

00:01:49,680 --> 00:01:53,360
new versions of projects

00:01:51,360 --> 00:01:55,040
it allows users to add projects they

00:01:53,360 --> 00:01:58,880
they want to

00:01:55,040 --> 00:02:00,000
add it's uh it sends federal messages

00:01:58,880 --> 00:02:03,840
where there are new

00:02:00,000 --> 00:02:07,360
versions it is more

00:02:03,840 --> 00:02:11,599
it is similar to services that are

00:02:07,360 --> 00:02:15,840
looking for the new versions of the

00:02:11,599 --> 00:02:18,959
of uh projects but

00:02:15,840 --> 00:02:21,200
and this case it allows users to

00:02:18,959 --> 00:02:24,000
specify their customs projects they

00:02:21,200 --> 00:02:26,800
could use their

00:02:24,000 --> 00:02:28,959
they could add almost everything that

00:02:26,800 --> 00:02:30,879
has some project page and there is a

00:02:28,959 --> 00:02:33,840
anything you could any page you could

00:02:30,879 --> 00:02:33,840
check for new version

00:02:34,319 --> 00:02:37,840
the second part is the island of the new

00:02:36,400 --> 00:02:43,120
hotness

00:02:37,840 --> 00:02:46,400
which is only used in the fedora itself

00:02:43,120 --> 00:02:48,319
uh if it is federal messaging consumer

00:02:46,400 --> 00:02:50,000
that is listening to the messages

00:02:48,319 --> 00:02:53,760
emitted by anitya and if

00:02:50,000 --> 00:02:56,800
you ever as a packagers get notification

00:02:53,760 --> 00:02:57,680
about the race monitoring find new

00:02:56,800 --> 00:03:01,360
version

00:02:57,680 --> 00:03:04,480
it was created by the new hotness

00:03:01,360 --> 00:03:05,519
it also can stretch start a scratch

00:03:04,480 --> 00:03:07,599
builds if

00:03:05,519 --> 00:03:10,000
you would configure this for your

00:03:07,599 --> 00:03:10,000
package

00:03:10,239 --> 00:03:17,040
okay so let's go so first we will

00:03:14,879 --> 00:03:17,920
talk about the anita this is a realm of

00:03:17,040 --> 00:03:22,720
magic that

00:03:17,920 --> 00:03:26,000
is really nice and uh fun

00:03:22,720 --> 00:03:29,200
and as every other visa

00:03:26,000 --> 00:03:31,519
mage i like the numbers so

00:03:29,200 --> 00:03:33,120
here we have some statistics from the

00:03:31,519 --> 00:03:36,480
last vlog

00:03:33,120 --> 00:03:39,519
i tried to find everything

00:03:36,480 --> 00:03:41,519
that i could that could be considered

00:03:39,519 --> 00:03:44,799
interesting

00:03:41,519 --> 00:03:47,840
from the last vlog we had four releases

00:03:44,799 --> 00:03:50,959
of anika most of them are only

00:03:47,840 --> 00:03:54,560
minor version there are

00:03:50,959 --> 00:04:00,239
there is myo release on the way

00:03:54,560 --> 00:04:02,959
right now we had 117 comments

00:04:00,239 --> 00:04:04,080
from seven different contributors thanks

00:04:02,959 --> 00:04:07,360
to everyone who

00:04:04,080 --> 00:04:10,879
helped with it we had

00:04:07,360 --> 00:04:14,000
68 new issues and closed 75

00:04:10,879 --> 00:04:16,720
which is nice because we are actually

00:04:14,000 --> 00:04:17,359
keeping with the base and closing the

00:04:16,720 --> 00:04:20,799
issues

00:04:17,359 --> 00:04:24,960
uh quickly there are still

00:04:20,799 --> 00:04:28,240
uh around 100 issues open

00:04:24,960 --> 00:04:28,800
on uh on danika right now the current

00:04:28,240 --> 00:04:35,360
version

00:04:28,800 --> 00:04:35,360
is 0.18.0

00:04:36,000 --> 00:04:39,759
which is the latest one and there are

00:04:38,880 --> 00:04:41,759
some

00:04:39,759 --> 00:04:43,919
issues that need to be addressed but

00:04:41,759 --> 00:04:47,520
they will be addressed in the next

00:04:43,919 --> 00:04:49,520
next release there

00:04:47,520 --> 00:04:50,720
are number of projects watched by

00:04:49,520 --> 00:04:55,759
director monitoring

00:04:50,720 --> 00:05:00,400
are currently 100 thousands

00:04:55,759 --> 00:05:00,400
hundred ten thousands for 147

00:05:03,039 --> 00:05:10,960
we have uh 17

00:05:06,960 --> 00:05:15,360
607 of those projects

00:05:10,960 --> 00:05:15,360
mapped to fedora packages so

00:05:17,199 --> 00:05:21,199
this is really nice there are plenty of

00:05:20,479 --> 00:05:24,720
projects

00:05:21,199 --> 00:05:25,520
created by some automation that was

00:05:24,720 --> 00:05:28,960
added

00:05:25,520 --> 00:05:32,880
that is actually listening to library

00:05:28,960 --> 00:05:36,080
libraries io which is

00:05:32,880 --> 00:05:37,520
and trying to catch the pi pi and

00:05:36,080 --> 00:05:40,880
rubygem projects

00:05:37,520 --> 00:05:44,479
and creating new new

00:05:40,880 --> 00:05:44,479
projects for them automatically

00:05:44,720 --> 00:05:52,080
okay and new we had now we have

00:05:48,720 --> 00:05:54,160
new features what goblins delivered we

00:05:52,080 --> 00:05:55,120
have plenty of goblins that were working

00:05:54,160 --> 00:05:58,240
as you can see

00:05:55,120 --> 00:06:00,240
as you could see in the last slide there

00:05:58,240 --> 00:06:04,160
was seven people that was

00:06:00,240 --> 00:06:07,360
working on this so pretty nice

00:06:04,160 --> 00:06:09,280
and what we add there is support for

00:06:07,360 --> 00:06:12,400
multiple version prefixes

00:06:09,280 --> 00:06:15,919
if you ever had issue

00:06:12,400 --> 00:06:15,919
with uh with uh

00:06:16,319 --> 00:06:21,120
having two versions that had different

00:06:19,199 --> 00:06:24,400
prefixes and you could only

00:06:21,120 --> 00:06:25,520
remove one which is only removed from

00:06:24,400 --> 00:06:27,919
the

00:06:25,520 --> 00:06:29,919
from the anika page the prefix is still

00:06:27,919 --> 00:06:31,759
there

00:06:29,919 --> 00:06:35,280
we now have support for multiple

00:06:31,759 --> 00:06:38,240
versions multiple prefixes so

00:06:35,280 --> 00:06:40,400
you could uh you could actually remove

00:06:38,240 --> 00:06:42,639
the prefixes from every version you

00:06:40,400 --> 00:06:42,639
need

00:06:43,520 --> 00:06:47,759
the next one is the checking for new

00:06:46,319 --> 00:06:51,680
versions

00:06:47,759 --> 00:06:55,680
only if there is any change on the url

00:06:51,680 --> 00:06:58,000
uh we use the the if

00:06:55,680 --> 00:06:59,199
if is modified or the header is

00:06:58,000 --> 00:07:02,479
something similar

00:06:59,199 --> 00:07:04,560
i'm not sure right now which is

00:07:02,479 --> 00:07:06,400
asking the page if it was modified from

00:07:04,560 --> 00:07:10,080
the last time we visited it

00:07:06,400 --> 00:07:13,840
if not we will actually not uh

00:07:10,080 --> 00:07:17,840
get it not get the full page and not

00:07:13,840 --> 00:07:17,840
parse it just do this

00:07:18,160 --> 00:07:25,120
allow fetching releases before we only

00:07:21,919 --> 00:07:28,319
release the tax and the tax sometimes

00:07:25,120 --> 00:07:31,360
contained bogus versions or

00:07:28,319 --> 00:07:32,240
just some things that people wanted to

00:07:31,360 --> 00:07:35,360
attack

00:07:32,240 --> 00:07:36,160
and not actual releases so we added this

00:07:35,360 --> 00:07:39,039
option

00:07:36,160 --> 00:07:39,680
to fetch the races it's still fetching

00:07:39,039 --> 00:07:44,000
the attack

00:07:39,680 --> 00:07:47,039
that is uh that is uh

00:07:44,000 --> 00:07:50,479
for the release but it's using the

00:07:47,039 --> 00:07:54,639
releases github releases page for uh

00:07:50,479 --> 00:07:57,199
checking this uh we add the

00:07:54,639 --> 00:07:58,080
calendar and semantic versioning because

00:07:57,199 --> 00:08:01,039
the versions

00:07:58,080 --> 00:08:01,039
are not

00:08:01,599 --> 00:08:09,199
not sorted by the order we get it

00:08:05,440 --> 00:08:12,720
but they are sorted by the anita itself

00:08:09,199 --> 00:08:14,879
so now you can choose by rpm versioning

00:08:12,720 --> 00:08:15,840
semantic versioning and calendar we're

00:08:14,879 --> 00:08:19,680
using

00:08:15,840 --> 00:08:22,639
all of these are working and

00:08:19,680 --> 00:08:23,360
there shouldn't be any issue but there

00:08:22,639 --> 00:08:25,440
is

00:08:23,360 --> 00:08:28,319
issue with the projects that are

00:08:25,440 --> 00:08:31,039
changing the versioning

00:08:28,319 --> 00:08:31,599
in the lifetime but this is something

00:08:31,039 --> 00:08:34,880
that is

00:08:31,599 --> 00:08:40,959
hard to address and

00:08:34,880 --> 00:08:44,159
not really solved for some projects

00:08:40,959 --> 00:08:47,680
next one next one

00:08:44,159 --> 00:08:48,640
is there is automation for deleting

00:08:47,680 --> 00:08:51,839
purchase

00:08:48,640 --> 00:08:53,839
that didn't have any versions and there

00:08:51,839 --> 00:08:55,120
is error threshold that if they reach

00:08:53,839 --> 00:08:59,600
this error three hole

00:08:55,120 --> 00:09:01,360
which means that we had uh

00:08:59,600 --> 00:09:03,519
we had to be checking for the new

00:09:01,360 --> 00:09:06,160
versions and if those

00:09:03,519 --> 00:09:06,880
versions uh if we can get those new

00:09:06,160 --> 00:09:09,920
versions

00:09:06,880 --> 00:09:13,279
it means that the page is not available

00:09:09,920 --> 00:09:16,560
the projects is actually abandoned

00:09:13,279 --> 00:09:19,279
and there is no page for it or

00:09:16,560 --> 00:09:20,560
there was some other error and there are

00:09:19,279 --> 00:09:23,839
100 errors

00:09:20,560 --> 00:09:27,360
in row we delete the project

00:09:23,839 --> 00:09:30,880
but there was there is one back

00:09:27,360 --> 00:09:33,839
that is known that for the github

00:09:30,880 --> 00:09:34,800
if there is no new release it's

00:09:33,839 --> 00:09:38,000
considered as

00:09:34,800 --> 00:09:41,200
failed check which is bad

00:09:38,000 --> 00:09:45,519
and because of this this

00:09:41,200 --> 00:09:49,200
feature isn't is now disabled for the

00:09:45,519 --> 00:09:50,959
on the releasemonitoring.org

00:09:49,200 --> 00:09:53,040
it will be introduced again with the

00:09:50,959 --> 00:09:56,320
next release which is fixing the

00:09:53,040 --> 00:09:59,680
this issue this

00:09:56,320 --> 00:10:02,640
uh i started to

00:09:59,680 --> 00:10:05,360
i started with this because there was

00:10:02,640 --> 00:10:08,560
plenty of bogus projects with

00:10:05,360 --> 00:10:10,320
from libraries i owe that was created in

00:10:08,560 --> 00:10:13,120
pi pi but

00:10:10,320 --> 00:10:13,680
was only for testing or something like

00:10:13,120 --> 00:10:16,800
this

00:10:13,680 --> 00:10:19,440
there was no version on it

00:10:16,800 --> 00:10:20,160
the project didn't even existed for

00:10:19,440 --> 00:10:23,200
after a few

00:10:20,160 --> 00:10:23,920
minutes so this was why i introduced

00:10:23,200 --> 00:10:27,040
this

00:10:23,920 --> 00:10:30,480
it uh deleted plenty of projects

00:10:27,040 --> 00:10:33,040
uh that were failure but

00:10:30,480 --> 00:10:33,519
some of the people actually found that

00:10:33,040 --> 00:10:35,920
they

00:10:33,519 --> 00:10:36,560
it is deleting their projector whereas

00:10:35,920 --> 00:10:39,680
uh

00:10:36,560 --> 00:10:40,800
configured uh correctly and it was

00:10:39,680 --> 00:10:44,880
because the github

00:10:40,800 --> 00:10:47,120
github issue okay

00:10:44,880 --> 00:10:49,120
the next one is the one that introduced

00:10:47,120 --> 00:10:51,600
the issue with the github

00:10:49,120 --> 00:10:53,839
uh we are trying to store and use the

00:10:51,600 --> 00:10:55,200
latest known version cursor so if we are

00:10:53,839 --> 00:10:58,160
checking for the

00:10:55,200 --> 00:11:01,200
new version we don't uh retrieve the all

00:10:58,160 --> 00:11:04,240
the tags that are on the projects

00:11:01,200 --> 00:11:04,240
but we are

00:11:04,880 --> 00:11:12,399
we are only here trying to

00:11:08,640 --> 00:11:15,680
get the news new ones that are

00:11:12,399 --> 00:11:19,279
newer which is uh considered

00:11:15,680 --> 00:11:22,320
by the corrosor which is on every attack

00:11:19,279 --> 00:11:25,680
and this uh

00:11:22,320 --> 00:11:28,160
this stack is this

00:11:25,680 --> 00:11:29,680
cursor is used to only retrieve new tags

00:11:28,160 --> 00:11:33,680
or new releases

00:11:29,680 --> 00:11:34,240
after this so it's actually helping us

00:11:33,680 --> 00:11:37,360
with the

00:11:34,240 --> 00:11:41,360
rate limit on the github

00:11:37,360 --> 00:11:44,720
but it it actually

00:11:41,360 --> 00:11:47,760
introduced the error with the github

00:11:44,720 --> 00:11:52,720
failing when not receiving any version

00:11:47,760 --> 00:11:56,320
because in the past it was considered

00:11:52,720 --> 00:11:58,959
as us fail

00:11:56,320 --> 00:11:59,760
when we didn't retrieve any version it

00:11:58,959 --> 00:12:03,519
meant that

00:11:59,760 --> 00:12:07,519
we couldn't contact the project

00:12:03,519 --> 00:12:10,800
issue but yeah

00:12:07,519 --> 00:12:11,360
it happened and the last is the timeout

00:12:10,800 --> 00:12:15,519
option

00:12:11,360 --> 00:12:18,320
for checks check services so

00:12:15,519 --> 00:12:20,560
we don't get stuck with uh when checking

00:12:18,320 --> 00:12:24,800
for new

00:12:20,560 --> 00:12:28,560
okay so right now

00:12:24,800 --> 00:12:31,440
we are working on the milestone

00:12:28,560 --> 00:12:31,440
1.0

00:12:32,560 --> 00:12:41,279
oh okay i took it up think

00:12:38,399 --> 00:12:42,160
oh okay i will get there for the last

00:12:41,279 --> 00:12:44,560
thing

00:12:42,160 --> 00:12:44,560
um

00:12:46,240 --> 00:12:53,839
uh okay um so that there is a timeout

00:12:50,399 --> 00:12:56,399
option for the check service which

00:12:53,839 --> 00:12:56,959
is helping with the check service being

00:12:56,399 --> 00:13:00,560
stopped

00:12:56,959 --> 00:13:01,519
stacked it was uh we had some issue with

00:13:00,560 --> 00:13:04,880
this before

00:13:01,519 --> 00:13:05,120
and i started to actually address this

00:13:04,880 --> 00:13:09,600
and

00:13:05,120 --> 00:13:09,600
time out this helping

00:13:12,320 --> 00:13:19,760
okay so the current situation

00:13:16,320 --> 00:13:23,120
we are working on the 1.0

00:13:19,760 --> 00:13:26,240
milestone we

00:13:23,120 --> 00:13:29,279
have few things done there are few that

00:13:26,240 --> 00:13:32,079
are left what is done is

00:13:29,279 --> 00:13:32,399
option to archive projects so if you now

00:13:32,079 --> 00:13:36,399
have

00:13:32,399 --> 00:13:36,399
projects that is currently not being

00:13:36,959 --> 00:13:40,399
maintained at upstream or there is

00:13:39,040 --> 00:13:43,120
another auto

00:13:40,399 --> 00:13:43,760
some water issue you could you could

00:13:43,120 --> 00:13:47,120
actually

00:13:43,760 --> 00:13:49,120
take it as archive if you are have it

00:13:47,120 --> 00:13:50,720
it means that it's not editable it will

00:13:49,120 --> 00:13:53,720
not be checked for new version

00:13:50,720 --> 00:13:55,760
but it's still in the fedora

00:13:53,720 --> 00:13:58,560
internalism.org and you still

00:13:55,760 --> 00:13:59,360
can look at it so it will not be deleted

00:13:58,560 --> 00:14:02,959
from

00:13:59,360 --> 00:14:04,160
anika but it will be it will not be

00:14:02,959 --> 00:14:06,560
checked for new version

00:14:04,160 --> 00:14:08,399
this will help with the projects that

00:14:06,560 --> 00:14:11,040
are currently checked and failing

00:14:08,399 --> 00:14:11,680
because uh the upstream is no longer no

00:14:11,040 --> 00:14:15,760
longer

00:14:11,680 --> 00:14:18,800
exist or we can't actually

00:14:15,760 --> 00:14:21,519
parse the versions because there is

00:14:18,800 --> 00:14:21,519
some other issue

00:14:22,160 --> 00:14:29,279
our removing more version at once if you

00:14:25,600 --> 00:14:31,199
were administrator of anika

00:14:29,279 --> 00:14:33,199
and somebody wanted to remove some

00:14:31,199 --> 00:14:36,880
version they obtain it

00:14:33,199 --> 00:14:40,399
by error or just right tried something

00:14:36,880 --> 00:14:44,000
you need to delete them one by one

00:14:40,399 --> 00:14:47,839
which is no longer a thing you could

00:14:44,000 --> 00:14:51,120
uh know remove all of them and

00:14:47,839 --> 00:14:55,360
just do a new check and

00:14:51,120 --> 00:14:58,959
go to only the correct ones

00:14:55,360 --> 00:14:59,519
uh and uh other thing is to separate

00:14:58,959 --> 00:15:03,680
stable and

00:14:59,519 --> 00:15:08,079
unstable releases because uh till now

00:15:03,680 --> 00:15:12,959
i need to actually get every version

00:15:08,079 --> 00:15:16,480
and every version was considered stable

00:15:12,959 --> 00:15:16,480
even if there was

00:15:16,560 --> 00:15:24,720
there was a method for the versioning to

00:15:20,160 --> 00:15:24,720
actually actually

00:15:24,880 --> 00:15:28,639
mark marked releases as parties or

00:15:27,600 --> 00:15:32,079
unstable

00:15:28,639 --> 00:15:36,639
so it will be it will add

00:15:32,079 --> 00:15:38,800
a new thing to the um to the message

00:15:36,639 --> 00:15:40,079
uh that is emitted with the version and

00:15:38,800 --> 00:15:43,279
there will be

00:15:40,079 --> 00:15:46,560
two new arrays one will con

00:15:43,279 --> 00:15:48,320
one will have the new version the stable

00:15:46,560 --> 00:15:49,680
version and one will have the unstable

00:15:48,320 --> 00:15:52,959
versions

00:15:49,680 --> 00:15:55,440
uh i plan to

00:15:52,959 --> 00:15:56,079
at this to the new hotness to work with

00:15:55,440 --> 00:15:58,480
it

00:15:56,079 --> 00:16:00,560
and actually for those who are not

00:15:58,480 --> 00:16:03,360
interested only in stable versions

00:16:00,560 --> 00:16:04,399
to have option monitor only stable

00:16:03,360 --> 00:16:07,680
versions

00:16:04,399 --> 00:16:10,959
so you will have you will not be

00:16:07,680 --> 00:16:14,399
bothered by some alpha beta or

00:16:10,959 --> 00:16:14,399
something like this

00:16:16,320 --> 00:16:20,160
yeah the next one is to fix for the

00:16:18,720 --> 00:16:23,360
github issue

00:16:20,160 --> 00:16:27,680
where there is no new version on the

00:16:23,360 --> 00:16:27,680
github again it's considered as error

00:16:28,480 --> 00:16:35,839
this is actually pretty bad because

00:16:32,240 --> 00:16:38,560
it was introduced with the cursors

00:16:35,839 --> 00:16:42,399
because the core source is actually

00:16:38,560 --> 00:16:45,759
marking the attack

00:16:42,399 --> 00:16:47,920
and we are only receiving what is uh

00:16:45,759 --> 00:16:49,040
after the dac and if we don't receive

00:16:47,920 --> 00:16:52,079
anything we

00:16:49,040 --> 00:16:54,320
just consider it that we have very

00:16:52,079 --> 00:16:55,199
unsuccessful to retrieve the versions at

00:16:54,320 --> 00:16:59,360
all

00:16:55,199 --> 00:17:02,000
so yeah this was an issue and

00:16:59,360 --> 00:17:02,800
it's currently why we uh delete the

00:17:02,000 --> 00:17:05,919
disabled

00:17:02,800 --> 00:17:09,120
automatic direction of projects

00:17:05,919 --> 00:17:12,559
what's left for the milestone 1.0

00:17:09,120 --> 00:17:15,600
is to report multiple versions at once

00:17:12,559 --> 00:17:17,919
and remove a message that message write

00:17:15,600 --> 00:17:18,880
things and add preview mode which will

00:17:17,919 --> 00:17:22,079
allow you to

00:17:18,880 --> 00:17:25,280
change to uh to

00:17:22,079 --> 00:17:28,720
try your things your changes

00:17:25,280 --> 00:17:31,039
before saving it and

00:17:28,720 --> 00:17:32,320
just doing the check in the actual

00:17:31,039 --> 00:17:35,039
database

00:17:32,320 --> 00:17:38,160
i hope this will be this will not be

00:17:35,039 --> 00:17:38,160
that hard to implement

00:17:38,480 --> 00:17:44,240
okay next slide the new hotness the new

00:17:42,000 --> 00:17:44,960
hotness is floating island in the realm

00:17:44,240 --> 00:17:48,400
of magic

00:17:44,960 --> 00:17:52,559
it's actually the nice island it doesn't

00:17:48,400 --> 00:17:56,400
have to it not robust as anita

00:17:52,559 --> 00:17:59,840
but it still does it does what

00:17:56,400 --> 00:18:01,919
needs to be done okay so uh

00:17:59,840 --> 00:18:03,280
quickly some statistics there were three

00:18:01,919 --> 00:18:05,919
universes

00:18:03,280 --> 00:18:07,520
uh 44 commits from seven different

00:18:05,919 --> 00:18:10,640
contributors

00:18:07,520 --> 00:18:11,120
uh 10 issues created because most of the

00:18:10,640 --> 00:18:14,720
issue

00:18:11,120 --> 00:18:17,600
for the new hotness is actually uh

00:18:14,720 --> 00:18:18,080
is actually open at uh in the anika

00:18:17,600 --> 00:18:22,160
because

00:18:18,080 --> 00:18:24,480
uh it's really smartdoing.org and

00:18:22,160 --> 00:18:26,160
there is not much people that know that

00:18:24,480 --> 00:18:29,200
there is a new hotness

00:18:26,160 --> 00:18:32,320
in the back of it

00:18:29,200 --> 00:18:35,600
uh v closed 22 which is uh

00:18:32,320 --> 00:18:38,720
nice because we are actually uh

00:18:35,600 --> 00:18:39,200
closing the backlog and the current

00:18:38,720 --> 00:18:44,559
version

00:18:39,200 --> 00:18:44,559
is zero 13 0.

00:18:45,840 --> 00:18:52,000
okay new things

00:18:49,600 --> 00:18:53,280
monitoring status retrieve directly from

00:18:52,000 --> 00:18:56,200
this kit so

00:18:53,280 --> 00:18:58,160
you could now configure into sorts

00:18:56,200 --> 00:19:01,039
fedoraproject.org

00:18:58,160 --> 00:19:02,640
you for the package if you want to be

00:19:01,039 --> 00:19:05,600
monitored or not

00:19:02,640 --> 00:19:08,320
and new hotness is taking this directly

00:19:05,600 --> 00:19:08,320
from bakur

00:19:09,760 --> 00:19:12,960
refactor configures center is a default

00:19:12,080 --> 00:19:16,240
this were more

00:19:12,960 --> 00:19:17,039
uh refactoring thing uh when we wanted

00:19:16,240 --> 00:19:20,000
to have uh

00:19:17,039 --> 00:19:21,039
configuration on one place and not in

00:19:20,000 --> 00:19:24,400
every

00:19:21,039 --> 00:19:26,720
script not every source code

00:19:24,400 --> 00:19:28,720
and plenty of bug fixes there weren't

00:19:26,720 --> 00:19:30,400
new new features because

00:19:28,720 --> 00:19:32,480
the new hotness is actually pretty

00:19:30,400 --> 00:19:36,240
simple

00:19:32,480 --> 00:19:39,679
okay okay

00:19:36,240 --> 00:19:43,600
so current situation uh

00:19:39,679 --> 00:19:47,520
i'm trying to create a milestone 1.0

00:19:43,600 --> 00:19:50,720
same as for uh anita uh what is done i

00:19:47,520 --> 00:19:55,120
added tone cryo to generate change locks

00:19:50,720 --> 00:19:57,120
more easily and automatically

00:19:55,120 --> 00:19:59,679
there was one issue when the unloading

00:19:57,120 --> 00:20:02,640
sources which was not

00:19:59,679 --> 00:20:03,200
like which didn't break the new hotness

00:20:02,640 --> 00:20:07,919
but

00:20:03,200 --> 00:20:12,159
it was an issue uh what's left

00:20:07,919 --> 00:20:14,640
what i want to have in 1.0 is to file pr

00:20:12,159 --> 00:20:16,640
instead for attaching patch to boxilla

00:20:14,640 --> 00:20:20,559
it will file pr directly

00:20:16,640 --> 00:20:23,919
against the source repo

00:20:20,559 --> 00:20:26,880
this is done by the ogre

00:20:23,919 --> 00:20:29,840
which is the library that the packet

00:20:26,880 --> 00:20:29,840
project is using

00:20:29,919 --> 00:20:33,200
because there is no staging environment

00:20:32,159 --> 00:20:36,000
right now i

00:20:33,200 --> 00:20:36,880
can't work on it anymore because it

00:20:36,000 --> 00:20:40,080
needs uh

00:20:36,880 --> 00:20:43,679
to have access to testing backzilla and

00:20:40,080 --> 00:20:48,320
uh the diskit and other things so

00:20:43,679 --> 00:20:52,559
it's not that easy to test um

00:20:48,320 --> 00:20:54,240
i want to have uh hash value locked when

00:20:52,559 --> 00:20:56,080
error happens during the comparing of

00:20:54,240 --> 00:20:59,360
sources because

00:20:56,080 --> 00:20:59,840
it will at least say if the sources are

00:20:59,360 --> 00:21:03,600
not

00:20:59,840 --> 00:21:06,720
the same or we had some issue

00:21:03,600 --> 00:21:07,440
that was that could be solved by this if

00:21:06,720 --> 00:21:11,120
this was

00:21:07,440 --> 00:21:12,880
in the in the actual lock

00:21:11,120 --> 00:21:14,480
refactoring of sorts using clean

00:21:12,880 --> 00:21:16,960
architecture design this is

00:21:14,480 --> 00:21:19,520
something i want to personally have

00:21:16,960 --> 00:21:19,520
inside

00:21:23,200 --> 00:21:25,520
and

00:21:27,039 --> 00:21:32,640
and clean the clean architecture should

00:21:30,480 --> 00:21:33,840
make the new hotness much more

00:21:32,640 --> 00:21:36,080
maintainable

00:21:33,840 --> 00:21:37,440
and it's small up a small project to

00:21:36,080 --> 00:21:40,799
actually work with it

00:21:37,440 --> 00:21:41,840
i have a design created for it a design

00:21:40,799 --> 00:21:47,440
document but

00:21:41,840 --> 00:21:47,440
didn't do any work on actual refactoring

00:21:47,520 --> 00:21:52,000
working with fedora messages containing

00:21:49,919 --> 00:21:55,360
multiple relexes this is

00:21:52,000 --> 00:21:55,679
the same as i talked about the stable

00:21:55,360 --> 00:22:00,400
and

00:21:55,679 --> 00:22:00,400
unstable releases for the

00:22:01,520 --> 00:22:08,640
ford uh anika so it will

00:22:04,720 --> 00:22:12,240
actually work with more versions at once

00:22:08,640 --> 00:22:13,679
discovered by anika and it will not just

00:22:12,240 --> 00:22:16,960
uh

00:22:13,679 --> 00:22:20,640
it will not just work with the latest

00:22:16,960 --> 00:22:24,000
uh there are some projects that want to

00:22:20,640 --> 00:22:26,880
uh want to have uh

00:22:24,000 --> 00:22:28,080
uh even just old versions because if

00:22:26,880 --> 00:22:31,280
there are

00:22:28,080 --> 00:22:34,480
um if there are streams like uh

00:22:31,280 --> 00:22:36,480
four point or a four uh or three point

00:22:34,480 --> 00:22:37,679
and you got a version three point

00:22:36,480 --> 00:22:40,400
something

00:22:37,679 --> 00:22:41,360
it's actually not emitted by anika

00:22:40,400 --> 00:22:44,720
because

00:22:41,360 --> 00:22:48,080
it is considered old version

00:22:44,720 --> 00:22:50,960
uh or

00:22:48,080 --> 00:22:51,760
it's uh it's i mean yeah it's emitted by

00:22:50,960 --> 00:22:54,880
anika

00:22:51,760 --> 00:22:58,159
if there is no non maneuver

00:22:54,880 --> 00:22:58,159
no newer version

00:22:58,240 --> 00:23:03,200
but the new hotness is uh skipping this

00:23:01,440 --> 00:23:06,000
because it's older than the

00:23:03,200 --> 00:23:06,720
what we have in uh in your repositories

00:23:06,000 --> 00:23:10,000
which is

00:23:06,720 --> 00:23:10,000
not good for some projects

00:23:11,600 --> 00:23:16,000
and the last thing is handle temporary

00:23:13,919 --> 00:23:18,799
errors more casefully right now

00:23:16,000 --> 00:23:19,120
the new hotness is running in openshift

00:23:18,799 --> 00:23:23,760
and

00:23:19,120 --> 00:23:26,559
every time

00:23:23,760 --> 00:23:27,200
every time we had a temporary error

00:23:26,559 --> 00:23:28,960
which is

00:23:27,200 --> 00:23:30,400
baxilla is not reachable or something

00:23:28,960 --> 00:23:34,559
like this we

00:23:30,400 --> 00:23:38,159
crash and just start it again

00:23:34,559 --> 00:23:41,039
which is not really great and i want to

00:23:38,159 --> 00:23:42,480
handle it more more gracefully and just

00:23:41,039 --> 00:23:45,679
on a coverage message

00:23:42,480 --> 00:23:51,120
and could and

00:23:45,679 --> 00:23:55,360
do it uh do the same again later

00:23:51,120 --> 00:23:58,799
okay so we are at the end

00:23:55,360 --> 00:24:01,279
so i hope you liked the

00:23:58,799 --> 00:24:03,600
uh the presentation and do you have any

00:24:01,279 --> 00:24:18,000
questions

00:24:03,600 --> 00:24:21,440
i don't see anything in chat

00:24:18,000 --> 00:24:24,720
uh luna i see that

00:24:21,440 --> 00:24:28,159
yeah i actually had uh this talk at the

00:24:24,720 --> 00:24:33,840
at the last vlog so i trying to

00:24:28,159 --> 00:24:33,840
talk about it more

00:24:34,080 --> 00:24:40,400
integration with packet i will use par

00:24:37,360 --> 00:24:40,400
of the packet

00:24:41,120 --> 00:24:49,600
but it is only only the ogre library

00:24:45,520 --> 00:24:53,039
i have some vision in the future which

00:24:49,600 --> 00:24:55,679
i'm not sure if ever be true is making

00:24:53,039 --> 00:25:00,159
the anita part of the

00:24:55,679 --> 00:25:03,840
part of the package workflow so uh

00:25:00,159 --> 00:25:06,480
if you create a new package in fedora

00:25:03,840 --> 00:25:07,279
you will actually get automatically

00:25:06,480 --> 00:25:10,320
project in

00:25:07,279 --> 00:25:12,640
anija that will take care of fetching

00:25:10,320 --> 00:25:15,760
for new version

00:25:12,640 --> 00:25:19,120
not about not any application with

00:25:15,760 --> 00:25:22,480
package but could be at least we will

00:25:19,120 --> 00:25:25,919
uh create a patch for the for the

00:25:22,480 --> 00:25:29,840
project and uh create a pr

00:25:25,919 --> 00:25:29,840
on the source git so

00:25:31,679 --> 00:25:37,760
i think it will be at least easier for

00:25:35,279 --> 00:25:37,760
everyone

00:25:38,960 --> 00:25:42,400
okay the zero zeros at the start are

00:25:41,919 --> 00:25:45,600
because

00:25:42,400 --> 00:25:49,760
when i took over it it was zero

00:25:45,600 --> 00:25:54,080
point something and i just uh

00:25:49,760 --> 00:25:57,440
i just did the same for the

00:25:54,080 --> 00:26:00,960
for the time being and uh

00:25:57,440 --> 00:26:04,080
decided uh i decided

00:26:00,960 --> 00:26:06,640
few the months ago

00:26:04,080 --> 00:26:07,840
to be sure that i should actually create

00:26:06,640 --> 00:26:09,760
1.0

00:26:07,840 --> 00:26:12,080
because i think the project is mature

00:26:09,760 --> 00:26:12,080
enough

00:26:13,919 --> 00:26:17,679
i see our time is

00:26:18,320 --> 00:26:25,840
is full so yeah

00:26:22,080 --> 00:26:28,960
we don't we don't have much much time so

00:26:25,840 --> 00:26:30,000
thanks everyone for for attending uh and

00:26:28,960 --> 00:26:38,400
i will go

00:26:30,000 --> 00:26:38,400

YouTube URL: https://www.youtube.com/watch?v=UvAkASmbxm8


