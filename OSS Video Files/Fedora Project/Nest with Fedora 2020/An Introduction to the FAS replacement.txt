Title: An Introduction to the FAS replacement
Publication date: 2020-09-14
Playlist: Nest with Fedora 2020
Description: 
	This talk will present the new Fedora AAA solution and its component parts, as well as the reason FAS is being retired and when.
Captions: 
	00:00:02,320 --> 00:00:06,480
all right so we'll be

00:00:03,600 --> 00:00:07,919
um we'll be talking about the uh the

00:00:06,480 --> 00:00:08,559
replacement too fast that we've been

00:00:07,919 --> 00:00:11,920
working on

00:00:08,559 --> 00:00:12,719
since january well actually earlier than

00:00:11,920 --> 00:00:16,160
that

00:00:12,719 --> 00:00:17,199
and um and yes that's going to be in

00:00:16,160 --> 00:00:19,840
production

00:00:17,199 --> 00:00:21,359
hopefully by the end of the year well

00:00:19,840 --> 00:00:23,680
certainly by the end of the year

00:00:21,359 --> 00:00:25,599
hopefully by the end of like october for

00:00:23,680 --> 00:00:28,800
example so soon

00:00:25,599 --> 00:00:31,920
um here is

00:00:28,800 --> 00:00:34,079
a bit about us so i'm going to be

00:00:31,920 --> 00:00:36,719
introducing myself because why not

00:00:34,079 --> 00:00:38,000
um i've been a federal contributor since

00:00:36,719 --> 00:00:40,559
uh basically since it's

00:00:38,000 --> 00:00:42,000
called thera and uh hey stephen can you

00:00:40,559 --> 00:00:44,079
talk now

00:00:42,000 --> 00:00:45,440
can you hear me oh that's fantastic and

00:00:44,079 --> 00:00:49,120
you're only one stephen

00:00:45,440 --> 00:00:50,879
okay perfect um i was just i just

00:00:49,120 --> 00:00:52,239
i was just arriving on that slide which

00:00:50,879 --> 00:00:54,320
is pretty much the first one so do you

00:00:52,239 --> 00:00:55,680
want to pick it up

00:00:54,320 --> 00:00:58,399
sure yeah we can did you introduce

00:00:55,680 --> 00:01:00,640
yourselves already or i i was just

00:00:58,399 --> 00:01:02,399
saying a couple was by myself but it's

00:01:00,640 --> 00:01:05,199
on the screen so

00:01:02,399 --> 00:01:06,400
uh feel free to out and share the screen

00:01:05,199 --> 00:01:12,240
if i manage to do that

00:01:06,400 --> 00:01:14,640
yep yes

00:01:12,240 --> 00:01:16,159
well i can actually finish that uh yeah

00:01:14,640 --> 00:01:17,280
yeah i've been i've been working on the

00:01:16,159 --> 00:01:20,479
infrastructure team

00:01:17,280 --> 00:01:22,240
uh since 2012 and uh

00:01:20,479 --> 00:01:24,479
and i've been attended on the on the

00:01:22,240 --> 00:01:28,000
replacement aaa project

00:01:24,479 --> 00:01:30,400
so um yeah people got

00:01:28,000 --> 00:01:34,320
got to ask me questions and i got to

00:01:30,400 --> 00:01:34,320
tell them weird answers and that was fun

00:01:36,079 --> 00:01:39,600
and that's about it i'm part of the free

00:01:38,479 --> 00:01:41,600
ipa team

00:01:39,600 --> 00:01:42,720
started right like a bit more than five

00:01:41,600 --> 00:01:45,920
years ago

00:01:42,720 --> 00:01:48,479
and i was the person who acted liaison

00:01:45,920 --> 00:01:51,840
between the ipa team and cpe team

00:01:48,479 --> 00:01:54,960
and helped the cpe team to develop

00:01:51,840 --> 00:01:55,759
the plugins and similar technical issues

00:01:54,960 --> 00:01:58,560
and

00:01:55,759 --> 00:01:58,560
recommendations

00:02:00,159 --> 00:02:04,240
hey i'm stephen the one having av

00:02:02,799 --> 00:02:07,520
problems

00:02:04,240 --> 00:02:09,440
i joined the cpe team at red hat about

00:02:07,520 --> 00:02:11,039
a year ago i was at red after about two

00:02:09,440 --> 00:02:14,879
years before that

00:02:11,039 --> 00:02:18,160
um i came in with little to minimum

00:02:14,879 --> 00:02:19,440
python experience and node in javascript

00:02:18,160 --> 00:02:22,000
was my background but

00:02:19,440 --> 00:02:23,600
like i said don't hold that against me

00:02:22,000 --> 00:02:26,400
um

00:02:23,600 --> 00:02:28,800
[Music]

00:02:26,400 --> 00:02:30,239
so we're going to talk about the the

00:02:28,800 --> 00:02:32,640
fast replacement

00:02:30,239 --> 00:02:34,000
and i suppose a good way to start off is

00:02:32,640 --> 00:02:35,280
why

00:02:34,000 --> 00:02:37,440
why was it actually being replaced in

00:02:35,280 --> 00:02:39,599
the first place um

00:02:37,440 --> 00:02:41,040
so there's a number of reasons um some

00:02:39,599 --> 00:02:42,720
of the smaller ones are it's based on

00:02:41,040 --> 00:02:45,760
the turbo gears framework

00:02:42,720 --> 00:02:48,800
that's lost quite a bit of traction

00:02:45,760 --> 00:02:51,599
and doesn't have a huge community

00:02:48,800 --> 00:02:52,080
a lot of the the code base is python 2

00:02:51,599 --> 00:02:54,560
only

00:02:52,080 --> 00:02:56,400
um and a lot of new stuff that we would

00:02:54,560 --> 00:02:57,040
have liked to use was obviously python 3

00:02:56,400 --> 00:02:59,760
so

00:02:57,040 --> 00:03:01,040
it didn't make sense to to stay python

00:02:59,760 --> 00:03:03,680
2.

00:03:01,040 --> 00:03:04,239
one of the bigger reasons was that fast

00:03:03,680 --> 00:03:06,720
only

00:03:04,239 --> 00:03:08,400
was supported on rail six which was

00:03:06,720 --> 00:03:10,640
released 10 years ago

00:03:08,400 --> 00:03:11,840
and actually goes end of life this

00:03:10,640 --> 00:03:15,599
november i believe

00:03:11,840 --> 00:03:16,400
and so yeah obviously it would be nice

00:03:15,599 --> 00:03:18,080
to have a

00:03:16,400 --> 00:03:20,800
fully supported version going forward

00:03:18,080 --> 00:03:24,000
and and get patches and things like that

00:03:20,800 --> 00:03:24,799
in a timely manner and also it's it's

00:03:24,000 --> 00:03:26,959
quite a large

00:03:24,799 --> 00:03:28,319
application fast and it makes it

00:03:26,959 --> 00:03:30,080
difficult to work on makes the

00:03:28,319 --> 00:03:32,080
maintenance tired

00:03:30,080 --> 00:03:34,319
and it just in general complicates the

00:03:32,080 --> 00:03:38,319
workflow so

00:03:34,319 --> 00:03:38,319
it doesn't also have a huge um

00:03:38,560 --> 00:03:42,400
it's it's not kept up to date at the

00:03:41,120 --> 00:03:43,519
moment because of some of the previous

00:03:42,400 --> 00:03:46,480
reasons i just mentioned

00:03:43,519 --> 00:03:48,000
as well so all of those kind of combined

00:03:46,480 --> 00:03:51,200
into

00:03:48,000 --> 00:03:52,720
let's replace it so

00:03:51,200 --> 00:03:54,239
just before i joined this team there was

00:03:52,720 --> 00:03:56,799
um

00:03:54,239 --> 00:03:58,840
a small team put together to investigate

00:03:56,799 --> 00:04:01,680
what the options were

00:03:58,840 --> 00:04:05,040
they compared a lot of

00:04:01,680 --> 00:04:08,000
different solutions um some from

00:04:05,040 --> 00:04:08,959
aws i believe and things like that so uh

00:04:08,000 --> 00:04:12,159
free ipa

00:04:08,959 --> 00:04:15,920
was the the winner and that's where

00:04:12,159 --> 00:04:18,959
christian came in i won't go into the

00:04:15,920 --> 00:04:21,359
prose okay so

00:04:18,959 --> 00:04:22,639
last year we were contacted by members

00:04:21,359 --> 00:04:25,120
of the cpe team

00:04:22,639 --> 00:04:26,479
and they were asking for a would be a

00:04:25,120 --> 00:04:28,560
potential solution

00:04:26,479 --> 00:04:30,400
so the old fast system already uses free

00:04:28,560 --> 00:04:34,000
ipa in the background for some

00:04:30,400 --> 00:04:36,320
things and with a longer debate and

00:04:34,000 --> 00:04:38,240
me and another co-worker then also

00:04:36,320 --> 00:04:39,520
pushed from our side and convinced our

00:04:38,240 --> 00:04:43,280
own management chain

00:04:39,520 --> 00:04:45,440
that would be a good idea to support

00:04:43,280 --> 00:04:46,639
fast and free ipa at the new solution

00:04:45,440 --> 00:04:48,160
for fast forward

00:04:46,639 --> 00:04:50,000
open source so the other solution were

00:04:48,160 --> 00:04:52,400
commercial solutions

00:04:50,000 --> 00:04:53,440
we know how to extend and improve free

00:04:52,400 --> 00:04:56,080
ipa

00:04:53,440 --> 00:04:57,280
and for us as engineers from the ipa

00:04:56,080 --> 00:04:59,919
sites also

00:04:57,280 --> 00:05:00,720
a great way to have a good showcase for

00:04:59,919 --> 00:05:03,360
customers

00:05:00,720 --> 00:05:03,840
and other communities and also to see

00:05:03,360 --> 00:05:06,560
how

00:05:03,840 --> 00:05:07,840
free ipa works like in the real field so

00:05:06,560 --> 00:05:10,000
engineers we

00:05:07,840 --> 00:05:11,919
usually don't get to see how customers

00:05:10,000 --> 00:05:13,039
use free ipa and we know that they're a

00:05:11,919 --> 00:05:15,440
pretty big consultation

00:05:13,039 --> 00:05:16,720
with over 100 000 users but we don't get

00:05:15,440 --> 00:05:18,720
to see them

00:05:16,720 --> 00:05:20,479
don't get interact with them directly

00:05:18,720 --> 00:05:24,240
one of the cons that we

00:05:20,479 --> 00:05:26,639
saw is that so self-hosting is an issue

00:05:24,240 --> 00:05:28,000
um getting that offloaded to commercial

00:05:26,639 --> 00:05:30,560
solution will probably

00:05:28,000 --> 00:05:32,000
get some resources off but rather it is

00:05:30,560 --> 00:05:32,639
already familiar with hosting that

00:05:32,000 --> 00:05:34,400
because

00:05:32,639 --> 00:05:35,759
reddit internally also is moving for

00:05:34,400 --> 00:05:38,639
free rpa

00:05:35,759 --> 00:05:39,919
and long-term maintenance costs so it's

00:05:38,639 --> 00:05:41,520
hard to see if

00:05:39,919 --> 00:05:43,039
paying a commercial distribution

00:05:41,520 --> 00:05:45,280
commercial system for that

00:05:43,039 --> 00:05:46,720
would pay off at the end or not but at

00:05:45,280 --> 00:05:50,320
least that way

00:05:46,720 --> 00:05:53,520
we have that all in-house development so

00:05:50,320 --> 00:05:58,240
thank you

00:05:53,520 --> 00:05:58,240
great so

00:05:58,560 --> 00:06:02,000
yeah obviously this this move is going

00:06:00,479 --> 00:06:05,120
to

00:06:02,000 --> 00:06:07,520
affect a lot of different people um

00:06:05,120 --> 00:06:08,720
three main groups really the actual end

00:06:07,520 --> 00:06:10,880
users

00:06:08,720 --> 00:06:13,120
uh to anybody who's fast system at the

00:06:10,880 --> 00:06:16,080
moment is obviously going to have

00:06:13,120 --> 00:06:18,160
a new ui to kind of feel their way

00:06:16,080 --> 00:06:21,280
around and figure out how things work

00:06:18,160 --> 00:06:24,479
and we hope that it feels natural and

00:06:21,280 --> 00:06:26,560
homely uh our ui expert trying to put a

00:06:24,479 --> 00:06:29,840
lot of effort into that so

00:06:26,560 --> 00:06:31,199
let us know um yeah

00:06:29,840 --> 00:06:34,080
some other things like group membership

00:06:31,199 --> 00:06:36,639
requests are manual for the moment

00:06:34,080 --> 00:06:38,720
and so yeah it's kind of similar to how

00:06:36,639 --> 00:06:41,039
it works the moment anyway

00:06:38,720 --> 00:06:43,360
um another thing is and i'll talk about

00:06:41,039 --> 00:06:46,319
the migration in a minute but

00:06:43,360 --> 00:06:46,639
once we do migrate just check your name

00:06:46,319 --> 00:06:49,199
check

00:06:46,639 --> 00:06:50,560
that your name works because names were

00:06:49,199 --> 00:06:53,759
hired

00:06:50,560 --> 00:06:55,360
so yeah we had to work around that

00:06:53,759 --> 00:06:57,360
um another group that it's going to

00:06:55,360 --> 00:07:00,639
affect is application developers

00:06:57,360 --> 00:07:02,000
so gone are the days of the admin user

00:07:00,639 --> 00:07:04,880
and password it's now

00:07:02,000 --> 00:07:05,919
key tabs in curb ros your application

00:07:04,880 --> 00:07:08,240
should have its own key tab

00:07:05,919 --> 00:07:09,520
and that's how it's going to communicate

00:07:08,240 --> 00:07:12,240
with the back end

00:07:09,520 --> 00:07:13,599
it's a rest api that we've also worked

00:07:12,240 --> 00:07:15,520
on and alien is going to talk about that

00:07:13,599 --> 00:07:19,120
rest api

00:07:15,520 --> 00:07:20,639
in a further slide um i suppose

00:07:19,120 --> 00:07:22,960
the next group it's going to affect his

00:07:20,639 --> 00:07:24,080
system admins um

00:07:22,960 --> 00:07:26,560
they're probably going to reap the most

00:07:24,080 --> 00:07:28,479
benefits they are going to have

00:07:26,560 --> 00:07:29,599
a lot easier management of users and

00:07:28,479 --> 00:07:33,360
groups

00:07:29,599 --> 00:07:34,080
and thanks to free ipa specifically and

00:07:33,360 --> 00:07:35,360
also

00:07:34,080 --> 00:07:36,880
just because of repair are going to have

00:07:35,360 --> 00:07:38,080
a much more fine-grained control over

00:07:36,880 --> 00:07:39,120
what they can do

00:07:38,080 --> 00:07:41,280
they're going to be able to do a lot

00:07:39,120 --> 00:07:44,160
more as well as be able to do it

00:07:41,280 --> 00:07:44,639
in a finer grain control way and they

00:07:44,160 --> 00:07:46,080
also

00:07:44,639 --> 00:07:49,120
everybody loves scripting so they're

00:07:46,080 --> 00:07:52,160
going to have access to

00:07:49,120 --> 00:07:54,720
a better cli and a better cli tool

00:07:52,160 --> 00:07:56,840
and a much improved api is a much more

00:07:54,720 --> 00:07:59,599
extensive

00:07:56,840 --> 00:08:03,520
api

00:07:59,599 --> 00:08:03,520
so what does the road map for

00:08:04,160 --> 00:08:09,840
the complete aaa look like um

00:08:07,199 --> 00:08:10,319
so there's two things that we're hoping

00:08:09,840 --> 00:08:12,800
to have

00:08:10,319 --> 00:08:14,960
complete by august 18th which is just a

00:08:12,800 --> 00:08:16,800
little under two weeks away

00:08:14,960 --> 00:08:18,319
and that's that the solution is deployed

00:08:16,800 --> 00:08:20,479
to staging

00:08:18,319 --> 00:08:21,680
and the first pass at user data

00:08:20,479 --> 00:08:23,039
immigration so there was a question in

00:08:21,680 --> 00:08:26,560
the chat

00:08:23,039 --> 00:08:29,840
um about that migration so yes that is

00:08:26,560 --> 00:08:30,879
part of this and what we hope to do is

00:08:29,840 --> 00:08:34,080
have the first

00:08:30,879 --> 00:08:35,519
migration run by the 18th or maybe begin

00:08:34,080 --> 00:08:36,640
at the 18th i'm not yeah probably begin

00:08:35,519 --> 00:08:40,000
at the 18th

00:08:36,640 --> 00:08:42,800
um but also to continue until

00:08:40,000 --> 00:08:44,959
basically that until fast goes read only

00:08:42,800 --> 00:08:47,600
and so it'll be run

00:08:44,959 --> 00:08:49,120
on maybe on a crown job or every x

00:08:47,600 --> 00:08:51,839
number of days

00:08:49,120 --> 00:08:53,760
and once that happens then we love

00:08:51,839 --> 00:08:54,399
community interaction so get involved

00:08:53,760 --> 00:08:56,560
help us

00:08:54,399 --> 00:08:58,000
test there'll be email on emails on all

00:08:56,560 --> 00:08:59,920
the lists

00:08:58,000 --> 00:09:03,600
and and we're going to have two testing

00:08:59,920 --> 00:09:06,240
phases so a testing phase and then

00:09:03,600 --> 00:09:07,519
patch fixes and then another testing

00:09:06,240 --> 00:09:09,839
phase and then patchfix

00:09:07,519 --> 00:09:11,680
again and that'll take us right up until

00:09:09,839 --> 00:09:14,800
october 20th

00:09:11,680 --> 00:09:16,160
and again once those are complete you

00:09:14,800 --> 00:09:18,000
can also get involved and help us fix

00:09:16,160 --> 00:09:21,760
whatever has been found that'd be

00:09:18,000 --> 00:09:23,120
that'd be great once that's done

00:09:21,760 --> 00:09:24,959
then we're going to deploy to production

00:09:23,120 --> 00:09:27,600
by november 3rd hopefully

00:09:24,959 --> 00:09:29,440
um it's at this point then as well fast

00:09:27,600 --> 00:09:33,360
is going to be made read only

00:09:29,440 --> 00:09:35,839
and that's just to help us kind of

00:09:33,360 --> 00:09:37,519
reduce any rights after the fact when

00:09:35,839 --> 00:09:38,959
we've already done the migration things

00:09:37,519 --> 00:09:40,320
like that so

00:09:38,959 --> 00:09:42,080
we'll be in production and fast will be

00:09:40,320 --> 00:09:43,600
read only it's and it's also as well

00:09:42,080 --> 00:09:45,200
because there's a lot of applications

00:09:43,600 --> 00:09:46,480
using fast and we don't want to just

00:09:45,200 --> 00:09:47,680
break those instantly they're going to

00:09:46,480 --> 00:09:50,800
have a

00:09:47,680 --> 00:09:52,000
window to to migrate which i'll also

00:09:50,800 --> 00:09:55,200
talk about

00:09:52,000 --> 00:09:55,760
so then november 30th fast just gets

00:09:55,200 --> 00:09:58,240
turned off

00:09:55,760 --> 00:09:58,240
unplugged

00:10:01,120 --> 00:10:08,480
so some of the design goals

00:10:05,360 --> 00:10:11,040
um one of them was obviously to keep the

00:10:08,480 --> 00:10:12,959
workload light on admins and stuff so a

00:10:11,040 --> 00:10:15,360
lot of it is to be self-service

00:10:12,959 --> 00:10:16,000
so users can register edit their own

00:10:15,360 --> 00:10:18,560
information

00:10:16,000 --> 00:10:19,680
change passwords uh otp tokens things

00:10:18,560 --> 00:10:21,519
like that

00:10:19,680 --> 00:10:23,760
and without having to go through a

00:10:21,519 --> 00:10:26,959
ticket system they can do it themselves

00:10:23,760 --> 00:10:27,519
we we did keep some operations on demand

00:10:26,959 --> 00:10:30,880
so that's

00:10:27,519 --> 00:10:32,640
a manual process and that's kind of to

00:10:30,880 --> 00:10:35,279
keep

00:10:32,640 --> 00:10:36,079
if if group creation was free-for-all it

00:10:35,279 --> 00:10:37,279
would be

00:10:36,079 --> 00:10:38,720
there'll be as many groups as there are

00:10:37,279 --> 00:10:40,560
people and that's just not helpful to

00:10:38,720 --> 00:10:44,640
anybody

00:10:40,560 --> 00:10:46,480
um yeah and another design goal was

00:10:44,640 --> 00:10:49,040
again to come back to to the admins

00:10:46,480 --> 00:10:49,519
to allow them to do a lot more a lot

00:10:49,040 --> 00:10:52,160
easier

00:10:49,519 --> 00:10:54,240
so the web uider free rpa gives us is

00:10:52,160 --> 00:10:57,440
pretty powerful

00:10:54,240 --> 00:11:00,000
and also we have red hat's backing

00:10:57,440 --> 00:11:02,000
which is great from even just a training

00:11:00,000 --> 00:11:03,600
point of view there's

00:11:02,000 --> 00:11:05,040
loads of training for free ipa which is

00:11:03,600 --> 00:11:08,480
brilliant for

00:11:05,040 --> 00:11:10,880
admins um and yeah the last

00:11:08,480 --> 00:11:11,839
design goal is for devs that if they

00:11:10,880 --> 00:11:14,240
don't have to work on

00:11:11,839 --> 00:11:14,880
the idm stuff then they can focus on

00:11:14,240 --> 00:11:16,800
other things

00:11:14,880 --> 00:11:18,240
they don't have to because ibm i can

00:11:16,800 --> 00:11:18,800
tell you from my limited experience with

00:11:18,240 --> 00:11:21,839
ldap

00:11:18,800 --> 00:11:24,399
idm is difficult

00:11:21,839 --> 00:11:25,519
so as christian can attest that not for

00:11:24,399 --> 00:11:29,440
christian for everybody else

00:11:25,519 --> 00:11:30,720
ldap is very difficult it's like

00:11:29,440 --> 00:11:32,640
it's like a completely different

00:11:30,720 --> 00:11:33,519
language it's different not difficult

00:11:32,640 --> 00:11:36,880
but yeah

00:11:33,519 --> 00:11:42,640
i'll explain a bit later about lap in my

00:11:36,880 --> 00:11:46,000
slides cool

00:11:42,640 --> 00:11:46,560
so yeah obviously we had some technical

00:11:46,000 --> 00:11:48,399
challenges

00:11:46,560 --> 00:11:50,399
most of which we first saw before we

00:11:48,399 --> 00:11:52,639
started um

00:11:50,399 --> 00:11:54,160
the first one i was involved it was the

00:11:52,639 --> 00:11:57,440
actual data migration

00:11:54,160 --> 00:11:59,920
from fast to free ipa um i think

00:11:57,440 --> 00:12:01,360
there's last time i checked it was 65

00:11:59,920 --> 00:12:03,839
000 70 000

00:12:01,360 --> 00:12:05,040
fast accounts so we had to come up with

00:12:03,839 --> 00:12:07,279
a way to actually

00:12:05,040 --> 00:12:08,079
migrate those along with the i think two

00:12:07,279 --> 00:12:10,959
or three thousand

00:12:08,079 --> 00:12:12,000
groups that exist in fast and do it

00:12:10,959 --> 00:12:15,279
safely

00:12:12,000 --> 00:12:17,360
um because another issue was that it's

00:12:15,279 --> 00:12:18,480
this solution is going to host sent us

00:12:17,360 --> 00:12:21,040
information as well

00:12:18,480 --> 00:12:24,480
so it's to make that make those schemas

00:12:21,040 --> 00:12:27,760
play together safely

00:12:24,480 --> 00:12:30,720
and then we also had some like

00:12:27,760 --> 00:12:31,680
we wanted to make sure that once one

00:12:30,720 --> 00:12:34,560
group's

00:12:31,680 --> 00:12:36,160
schemas didn't upset another groups like

00:12:34,560 --> 00:12:36,720
we wanted to make sure that if opensuse

00:12:36,160 --> 00:12:37,920
wanted to

00:12:36,720 --> 00:12:40,240
add something that they could and it

00:12:37,920 --> 00:12:42,720
wouldn't nothing would conflict

00:12:40,240 --> 00:12:43,760
um and then teaming stuff as well so to

00:12:42,720 --> 00:12:45,760
make it so that

00:12:43,760 --> 00:12:48,079
all three can be teamed separately if

00:12:45,760 --> 00:12:53,120
they like which we've done

00:12:48,079 --> 00:12:54,959
then like i said sent us we had

00:12:53,120 --> 00:12:57,120
we're going to have incentives people

00:12:54,959 --> 00:12:58,480
who have also have accounts and fasts

00:12:57,120 --> 00:13:00,320
even though centos uses fast it's a

00:12:58,480 --> 00:13:01,519
different fast instance so

00:13:00,320 --> 00:13:03,200
there's going to be duplicates like i

00:13:01,519 --> 00:13:04,639
have an account on both so when my

00:13:03,200 --> 00:13:05,200
account is migrated we need to make sure

00:13:04,639 --> 00:13:08,320
that that

00:13:05,200 --> 00:13:11,680
happens safely and

00:13:08,320 --> 00:13:13,279
yeah and then there are some

00:13:11,680 --> 00:13:15,279
incompatible properties between fast and

00:13:13,279 --> 00:13:16,079
free ipa like i previously mentioned the

00:13:15,279 --> 00:13:18,800
names

00:13:16,079 --> 00:13:20,000
so fast allows people to i think i

00:13:18,800 --> 00:13:23,600
haven't written down those

00:13:20,000 --> 00:13:26,240
three main issues um where

00:13:23,600 --> 00:13:27,600
you might either have one name no name

00:13:26,240 --> 00:13:27,920
on fast there was two accounts that had

00:13:27,600 --> 00:13:30,959
just

00:13:27,920 --> 00:13:32,320
no names at all um are you could have

00:13:30,959 --> 00:13:34,480
greater than two names so i think

00:13:32,320 --> 00:13:35,760
the highest i saw was eight somebody had

00:13:34,480 --> 00:13:36,959
eight names or nine names

00:13:35,760 --> 00:13:38,639
so we need to take that into account

00:13:36,959 --> 00:13:40,720
because free ipa expects a first name

00:13:38,639 --> 00:13:43,839
and last name only

00:13:40,720 --> 00:13:46,720
um and then yeah there was also

00:13:43,839 --> 00:13:47,120
we put together a list of applications

00:13:46,720 --> 00:13:50,240
that

00:13:47,120 --> 00:13:51,839
currently use fast and that was

00:13:50,240 --> 00:13:55,120
i can attest for somebody who's new to

00:13:51,839 --> 00:13:56,480
the community that was a long list

00:13:55,120 --> 00:13:58,800
of applications to try and get my head

00:13:56,480 --> 00:14:00,079
around and first of all to actually list

00:13:58,800 --> 00:14:02,079
and then secondly to figure out what

00:14:00,079 --> 00:14:03,760
each was doing how it was doing it

00:14:02,079 --> 00:14:06,399
and what needed to happen for it to

00:14:03,760 --> 00:14:11,120
migrate to the new api

00:14:06,399 --> 00:14:12,560
um yeah i think that was

00:14:11,120 --> 00:14:13,680
yeah we just wanted to make sure nothing

00:14:12,560 --> 00:14:16,480
broke there so that was that was

00:14:13,680 --> 00:14:21,760
definitely a technical challenge

00:14:16,480 --> 00:14:31,120
so i'm going to pass over to aurelion

00:14:21,760 --> 00:14:32,800
uh i'll try to share my screen um

00:14:31,120 --> 00:14:34,160
it worked a couple of minutes before so

00:14:32,800 --> 00:14:37,440
of course it's gonna work

00:14:34,160 --> 00:14:41,199
all right so um architecture

00:14:37,440 --> 00:14:43,360
um so these are the

00:14:41,199 --> 00:14:45,519
the applications that are composing the

00:14:43,360 --> 00:14:47,360
new uh the new solid system

00:14:45,519 --> 00:14:49,279
uh we've talked about free ipa a bit and

00:14:47,360 --> 00:14:51,760
we're going to talk more about it

00:14:49,279 --> 00:14:52,880
in in the next minutes uh it's basically

00:14:51,760 --> 00:14:54,959
our data store

00:14:52,880 --> 00:14:56,240
that's where all the data is located and

00:14:54,959 --> 00:14:59,199
it gives us also

00:14:56,240 --> 00:15:00,560
access to this data in various protocols

00:14:59,199 --> 00:15:02,560
we have an extensions to

00:15:00,560 --> 00:15:05,040
an extension to free api called free

00:15:02,560 --> 00:15:05,600
ipfs it's basically a plugin that gives

00:15:05,040 --> 00:15:07,680
us

00:15:05,600 --> 00:15:10,320
specific data that we need for for

00:15:07,680 --> 00:15:13,120
fedora but it's not needed anywhere else

00:15:10,320 --> 00:15:14,639
so there's that epsilon you already know

00:15:13,120 --> 00:15:15,839
it because you've been using it for a

00:15:14,639 --> 00:15:19,279
while already

00:15:15,839 --> 00:15:21,440
um it's uh it has um

00:15:19,279 --> 00:15:22,880
it's the the login frame that you're

00:15:21,440 --> 00:15:26,240
using currently to

00:15:22,880 --> 00:15:26,639
access web applications login is a new

00:15:26,240 --> 00:15:28,480
app

00:15:26,639 --> 00:15:30,160
it's going to be the self-service user

00:15:28,480 --> 00:15:31,279
portal so that's where users are going

00:15:30,160 --> 00:15:33,360
to log in

00:15:31,279 --> 00:15:34,480
um set their settings change their

00:15:33,360 --> 00:15:38,399
password

00:15:34,480 --> 00:15:39,040
um join the view groups and request to

00:15:38,399 --> 00:15:42,079
join them

00:15:39,040 --> 00:15:44,800
that kind of thing so it's all for users

00:15:42,079 --> 00:15:46,800
fast json on the other hand is uh is a

00:15:44,800 --> 00:15:48,079
rest json api so it's only for

00:15:46,800 --> 00:15:50,240
applications

00:15:48,079 --> 00:15:52,560
uh of course it can be your applications

00:15:50,240 --> 00:15:56,320
because we know you write stuff

00:15:52,560 --> 00:15:58,560
and and since we have a separate backend

00:15:56,320 --> 00:16:00,720
in free apa we can have applications

00:15:58,560 --> 00:16:02,240
that are dedicated to users on one side

00:16:00,720 --> 00:16:03,839
and applications on the other side

00:16:02,240 --> 00:16:06,079
fascism

00:16:03,839 --> 00:16:07,440
fascist client is just a client for for

00:16:06,079 --> 00:16:10,480
fast json that makes it

00:16:07,440 --> 00:16:11,759
a bit easier to use rest json is already

00:16:10,480 --> 00:16:14,800
pretty easy to use

00:16:11,759 --> 00:16:16,959
but we have something even nicer

00:16:14,800 --> 00:16:18,639
um and first two ipa is the migration

00:16:16,959 --> 00:16:21,839
script

00:16:18,639 --> 00:16:23,600
so this is how it it's all connected um

00:16:21,839 --> 00:16:24,160
you start with a nice user that is very

00:16:23,600 --> 00:16:27,360
happy

00:16:24,160 --> 00:16:30,480
on the left upper hand and that

00:16:27,360 --> 00:16:32,399
the user can first uh by following the

00:16:30,480 --> 00:16:33,839
i'm going to follow the first you see my

00:16:32,399 --> 00:16:37,040
my yeah you see my mouse here

00:16:33,839 --> 00:16:39,600
okay so um it can access noggin

00:16:37,040 --> 00:16:41,120
the user interface that is going to

00:16:39,600 --> 00:16:43,680
contact free apa

00:16:41,120 --> 00:16:44,639
via the python api that we're using in

00:16:43,680 --> 00:16:46,560
noggin

00:16:44,639 --> 00:16:48,160
and the python api and ldap are

00:16:46,560 --> 00:16:51,680
connected together in free ip

00:16:48,160 --> 00:16:54,240
we have our plugin here and um

00:16:51,680 --> 00:16:55,279
and applications are go maybe using the

00:16:54,240 --> 00:16:57,759
fast json client

00:16:55,279 --> 00:16:59,600
they can also access fast directly

00:16:57,759 --> 00:17:01,040
because fast.json client is python but

00:16:59,600 --> 00:17:02,160
you may want to access fast form

00:17:01,040 --> 00:17:03,920
anything

00:17:02,160 --> 00:17:06,559
and so they may want to access flash

00:17:03,920 --> 00:17:08,559
just on over http so it's totally fine

00:17:06,559 --> 00:17:12,160
and fast json is also using the python

00:17:08,559 --> 00:17:14,559
api but it's also calling ldap directly

00:17:12,160 --> 00:17:15,919
um it's using the python api for just

00:17:14,559 --> 00:17:17,039
one small thing that is kind of hard to

00:17:15,919 --> 00:17:18,799
do in old app

00:17:17,039 --> 00:17:20,959
but you don't really need to do do you

00:17:18,799 --> 00:17:24,559
know that

00:17:20,959 --> 00:17:26,959
fast.json has a cli that is currently

00:17:24,559 --> 00:17:27,760
only used to generate soft certificates

00:17:26,959 --> 00:17:31,679
and that's

00:17:27,760 --> 00:17:34,559
mostly for the centos users centos users

00:17:31,679 --> 00:17:36,640
use um koji with such client

00:17:34,559 --> 00:17:39,280
certificates as we used to do

00:17:36,640 --> 00:17:40,240
a few years ago before we moved to

00:17:39,280 --> 00:17:43,200
kerberos

00:17:40,240 --> 00:17:46,880
so they still need that and that is

00:17:43,200 --> 00:17:48,400
going to be available via the cli

00:17:46,880 --> 00:17:50,320
noggin and fast justin are going to run

00:17:48,400 --> 00:17:52,880
in openshift and um

00:17:50,320 --> 00:17:53,440
and yeah that's yeah free apa doesn't

00:17:52,880 --> 00:17:55,360
really

00:17:53,440 --> 00:17:56,720
run in openshift and also you would you

00:17:55,360 --> 00:17:57,360
would have some kind of chicken and

00:17:56,720 --> 00:18:00,799
program

00:17:57,360 --> 00:18:01,280
problem with who is going to uh answer

00:18:00,799 --> 00:18:03,520
the

00:18:01,280 --> 00:18:05,039
the queries for access in in openshift

00:18:03,520 --> 00:18:06,960
it's yeah

00:18:05,039 --> 00:18:09,600
we don't do that uh it's going to have

00:18:06,960 --> 00:18:09,600
its own vm

00:18:11,600 --> 00:18:15,600
also so fast jason um login doesn't

00:18:14,559 --> 00:18:17,919
really need

00:18:15,600 --> 00:18:19,039
much explanation because it's really

00:18:17,919 --> 00:18:21,280
made for users

00:18:19,039 --> 00:18:22,640
and you should be able to use it without

00:18:21,280 --> 00:18:25,200
much of an

00:18:22,640 --> 00:18:26,880
explanation or a manual and if you can't

00:18:25,200 --> 00:18:27,440
manage to use it with an explanation

00:18:26,880 --> 00:18:28,880
then

00:18:27,440 --> 00:18:31,120
it's a documentation bug and we should

00:18:28,880 --> 00:18:34,480
fix it or a

00:18:31,120 --> 00:18:37,280
ui bug fast json is a rest api

00:18:34,480 --> 00:18:38,400
that's how you get data from free ipa in

00:18:37,280 --> 00:18:40,960
your applications

00:18:38,400 --> 00:18:42,799
you are authenticated via kerberos so if

00:18:40,960 --> 00:18:44,559
you're a user and you want to make an

00:18:42,799 --> 00:18:46,960
api request you can just

00:18:44,559 --> 00:18:48,080
okay in it and you'll have the ticket

00:18:46,960 --> 00:18:50,720
that is going to be

00:18:48,080 --> 00:18:52,799
used to communicate with json but if

00:18:50,720 --> 00:18:54,080
you're an application you use key tabs

00:18:52,799 --> 00:18:56,160
i don't know if you're familiar with

00:18:54,080 --> 00:18:57,600
that but if not we have documentation

00:18:56,160 --> 00:18:59,760
for that also

00:18:57,600 --> 00:19:01,039
you'll get json responses you have a few

00:18:59,760 --> 00:19:02,960
endpoints right now

00:19:01,039 --> 00:19:04,880
basically getting a user getting a list

00:19:02,960 --> 00:19:07,520
of users getting a group

00:19:04,880 --> 00:19:08,080
getting a list of groups searching users

00:19:07,520 --> 00:19:10,960
and

00:19:08,080 --> 00:19:12,559
getting your certificate signed it has

00:19:10,960 --> 00:19:14,240
pagination which is something that was

00:19:12,559 --> 00:19:16,799
really lacking in fast

00:19:14,240 --> 00:19:17,360
um so there's a lot of applications that

00:19:16,799 --> 00:19:20,640
were

00:19:17,360 --> 00:19:22,880
querying fast by um querying

00:19:20,640 --> 00:19:23,679
all users starting with a then all users

00:19:22,880 --> 00:19:25,200
starting with b

00:19:23,679 --> 00:19:29,280
etcetera to try because it didn't have

00:19:25,200 --> 00:19:29,280
any pagination um that's fixed

00:19:29,360 --> 00:19:33,120
and it also follows the open api spec

00:19:32,160 --> 00:19:35,600
and has this

00:19:33,120 --> 00:19:36,880
swagger ui you know this nice javascript

00:19:35,600 --> 00:19:39,919
ui that you can explore

00:19:36,880 --> 00:19:42,320
that lets you explore the the api

00:19:39,919 --> 00:19:44,000
uh i will send you the link to the first

00:19:42,320 --> 00:19:45,200
json docs there will be links at the end

00:19:44,000 --> 00:19:48,559
if you need that

00:19:45,200 --> 00:19:51,120
um the client

00:19:48,559 --> 00:19:53,120
is just an easier way to query files

00:19:51,120 --> 00:19:55,679
json

00:19:53,120 --> 00:19:56,480
from python it's python only it will

00:19:55,679 --> 00:19:58,880
check that you are

00:19:56,480 --> 00:20:00,640
authenticated with kerberos properly it

00:19:58,880 --> 00:20:01,200
will code you will just be able to call

00:20:00,640 --> 00:20:03,039
methods

00:20:01,200 --> 00:20:05,280
instead of making http requests and

00:20:03,039 --> 00:20:07,039
you'll get dictionaries unless directly

00:20:05,280 --> 00:20:08,480
you can you'll have pagination support

00:20:07,039 --> 00:20:09,280
like you'll have a nice object that you

00:20:08,480 --> 00:20:11,520
can

00:20:09,280 --> 00:20:12,720
query for the page number the total

00:20:11,520 --> 00:20:14,640
number of pages

00:20:12,720 --> 00:20:17,200
uh what the next page number is get

00:20:14,640 --> 00:20:19,200
directly the next page etc

00:20:17,200 --> 00:20:21,280
and you will have a convenience method

00:20:19,200 --> 00:20:23,600
to get all the users in one core

00:20:21,280 --> 00:20:25,520
as most fast application used to do

00:20:23,600 --> 00:20:27,760
before

00:20:25,520 --> 00:20:28,799
there are better ways to do that now but

00:20:27,760 --> 00:20:30,799
if you don't want to

00:20:28,799 --> 00:20:33,200
make the loop yourself there's something

00:20:30,799 --> 00:20:36,080
that does it for you

00:20:33,200 --> 00:20:37,919
it also has a cli that will let you uh

00:20:36,080 --> 00:20:40,960
generate certificate signing requests

00:20:37,919 --> 00:20:45,919
and get them signed by the free apa

00:20:40,960 --> 00:20:47,600
ci no wait uh ca um

00:20:45,919 --> 00:20:50,880
and that's all and i'm going to hand

00:20:47,600 --> 00:20:50,880
over the floor to christian

00:20:53,520 --> 00:20:57,520
hi so um

00:20:58,080 --> 00:21:01,919
apparently just gonna try spoken for me

00:20:59,440 --> 00:21:02,320
hi so let's get started i'll explain to

00:21:01,919 --> 00:21:05,039
you what

00:21:02,320 --> 00:21:08,240
actually free idea is so uh no it's

00:21:05,039 --> 00:21:10,559
probably not a beer but i like that beer

00:21:08,240 --> 00:21:12,159
so uh free ipa is an open source

00:21:10,559 --> 00:21:14,720
identity management solution

00:21:12,159 --> 00:21:16,320
that means it manages some kinds of

00:21:14,720 --> 00:21:20,799
identity so that's users

00:21:16,320 --> 00:21:23,280
groups services machines and permissions

00:21:20,799 --> 00:21:24,400
users has already mentioned lab as a

00:21:23,280 --> 00:21:26,159
back-end

00:21:24,400 --> 00:21:27,919
we have an included public key

00:21:26,159 --> 00:21:30,799
infrastructure so ci

00:21:27,919 --> 00:21:31,440
to create certificates for services

00:21:30,799 --> 00:21:35,039
hosts

00:21:31,440 --> 00:21:35,919
and users uh internally rely heavily on

00:21:35,039 --> 00:21:38,640
cabarrus

00:21:35,919 --> 00:21:39,760
although most users will not see much of

00:21:38,640 --> 00:21:41,840
kerberos

00:21:39,760 --> 00:21:44,159
we have otp support that's for

00:21:41,840 --> 00:21:47,919
two-factor authentication

00:21:44,159 --> 00:21:51,039
currently no support for u2f

00:21:47,919 --> 00:21:52,640
but that's going to be added in the

00:21:51,039 --> 00:21:55,919
distance future

00:21:52,640 --> 00:21:56,480
we have a easy to use web user interface

00:21:55,919 --> 00:21:59,120
that's

00:21:56,480 --> 00:22:01,679
heavily javascript driven we have a

00:21:59,120 --> 00:22:04,159
command line tools written in python

00:22:01,679 --> 00:22:05,679
most of the things for the back ends are

00:22:04,159 --> 00:22:09,600
either using json rpc

00:22:05,679 --> 00:22:12,720
or ldap queries and as we have shown

00:22:09,600 --> 00:22:13,200
it's very extensible so you can add your

00:22:12,720 --> 00:22:16,320
own

00:22:13,200 --> 00:22:16,960
elf schema extension you can feed in all

00:22:16,320 --> 00:22:19,440
of things

00:22:16,960 --> 00:22:22,799
you can extend the api with python and

00:22:19,440 --> 00:22:24,640
extend the web interface with javascript

00:22:22,799 --> 00:22:25,840
and you want to play around with the ui

00:22:24,640 --> 00:22:29,039
there's a demo

00:22:25,840 --> 00:22:32,000
side ipa.demo1.3.org

00:22:29,039 --> 00:22:34,159
including if you follow the pop-up login

00:22:32,000 --> 00:22:36,880
credentials so you can play around

00:22:34,159 --> 00:22:37,600
please don't change the admin password

00:22:36,880 --> 00:22:40,320
um

00:22:37,600 --> 00:22:42,000
yeah and there are lots of online

00:22:40,320 --> 00:22:45,440
training courses available

00:22:42,000 --> 00:22:47,520
on the internet for free too

00:22:45,440 --> 00:22:48,559
so actually frappe is not just one

00:22:47,520 --> 00:22:50,480
project it's

00:22:48,559 --> 00:22:52,159
uh standing on the shoulder of lots of

00:22:50,480 --> 00:22:54,080
giants so

00:22:52,159 --> 00:22:56,080
we have the ldap server we have apache

00:22:54,080 --> 00:22:56,480
we have sambar we have dock type let's

00:22:56,080 --> 00:23:00,480
see

00:22:56,480 --> 00:23:01,919
ca ssd and three hounds on top right

00:23:00,480 --> 00:23:04,960
that's cabarrus and of course

00:23:01,919 --> 00:23:06,559
we're running on fedora although we have

00:23:04,960 --> 00:23:08,960
also support for

00:23:06,559 --> 00:23:09,679
pharrell for debian and just a couple of

00:23:08,960 --> 00:23:12,799
months ago

00:23:09,679 --> 00:23:16,080
for suse and the

00:23:12,799 --> 00:23:18,320
the core components of free ipa uh

00:23:16,080 --> 00:23:20,559
again um the most important ones are the

00:23:18,320 --> 00:23:21,760
kdc that's the camera's key distribution

00:23:20,559 --> 00:23:24,880
center

00:23:21,760 --> 00:23:26,400
doc tag that's the ca that manages

00:23:24,880 --> 00:23:29,600
certificates

00:23:26,400 --> 00:23:32,720
uh the threat line ds ldap server

00:23:29,600 --> 00:23:33,039
we also which we don't use and first we

00:23:32,720 --> 00:23:35,440
have

00:23:33,039 --> 00:23:38,159
bind support so you have integrated dns

00:23:35,440 --> 00:23:41,360
solution including dnsec

00:23:38,159 --> 00:23:42,960
um i don't think we use that uh

00:23:41,360 --> 00:23:45,440
what else we're also not going to use in

00:23:42,960 --> 00:23:47,279
files at the moment is a samba support

00:23:45,440 --> 00:23:49,520
for active directory so you can do

00:23:47,279 --> 00:23:51,440
something like across forest trust

00:23:49,520 --> 00:23:52,720
and get active directory users into free

00:23:51,440 --> 00:23:54,799
ipa

00:23:52,720 --> 00:23:56,480
and some of the help of components are

00:23:54,799 --> 00:23:59,360
sssd which i will

00:23:56,480 --> 00:24:00,640
explain in a minute kdc proxy and

00:23:59,360 --> 00:24:03,520
certmonger

00:24:00,640 --> 00:24:04,080
they run both on ssd and certain run

00:24:03,520 --> 00:24:07,919
also on

00:24:04,080 --> 00:24:11,039
clients and that makes actually the

00:24:07,919 --> 00:24:12,159
life of any administrator very easy

00:24:11,039 --> 00:24:14,720
because

00:24:12,159 --> 00:24:17,039
uh all the hard things like getting

00:24:14,720 --> 00:24:20,080
users created on different machines

00:24:17,039 --> 00:24:22,799
is now handled by free ipa

00:24:20,080 --> 00:24:24,159
and ssd and third monger so when you

00:24:22,799 --> 00:24:28,000
create a user

00:24:24,159 --> 00:24:28,480
a posix user in free ipa in a posix

00:24:28,000 --> 00:24:30,080
group

00:24:28,480 --> 00:24:32,400
then you will actually see them as

00:24:30,080 --> 00:24:36,480
standard groups in

00:24:32,400 --> 00:24:40,320
your linux machines and if you upload

00:24:36,480 --> 00:24:42,880
your ssh public keys to users

00:24:40,320 --> 00:24:43,440
then they will magically appear when you

00:24:42,880 --> 00:24:46,720
log in

00:24:43,440 --> 00:24:47,919
so you can just use ssh keys for logging

00:24:46,720 --> 00:24:51,360
in or can use

00:24:47,919 --> 00:24:54,000
the uh your coverage credentials to log

00:24:51,360 --> 00:24:57,039
into hosts using ssh

00:24:54,000 --> 00:24:58,640
and there's also rich host based access

00:24:57,039 --> 00:25:00,880
control so you can control

00:24:58,640 --> 00:25:02,640
which member of a group is allowed to

00:25:00,880 --> 00:25:05,520
access which kind of services

00:25:02,640 --> 00:25:06,400
on on host that's very very fine-grained

00:25:05,520 --> 00:25:09,440
including

00:25:06,400 --> 00:25:10,480
like defining groups of hosts where you

00:25:09,440 --> 00:25:13,039
can define

00:25:10,480 --> 00:25:14,640
and access different services i have

00:25:13,039 --> 00:25:16,720
two-factor authentication

00:25:14,640 --> 00:25:18,559
and for the though those people are

00:25:16,720 --> 00:25:20,080
worried about like cabarrus and how to

00:25:18,559 --> 00:25:20,880
configure and set up cabras on your

00:25:20,080 --> 00:25:23,600
machines

00:25:20,880 --> 00:25:25,279
the good news is if you have default

00:25:23,600 --> 00:25:28,080
configuration allow

00:25:25,279 --> 00:25:30,080
dns auto configuration then you get zero

00:25:28,080 --> 00:25:33,120
config covers so you just

00:25:30,080 --> 00:25:36,159
do something like username at and

00:25:33,120 --> 00:25:39,200
capitalize fedoraproject.org

00:25:36,159 --> 00:25:42,880
with k init and k will then ask you

00:25:39,200 --> 00:25:46,640
for your credentials and you're good

00:25:42,880 --> 00:25:49,200
so that works out of the box so um

00:25:46,640 --> 00:25:51,039
this integration with ssd and certain

00:25:49,200 --> 00:25:53,600
 make the life of admins

00:25:51,039 --> 00:25:54,640
easier and they plug it into sects like

00:25:53,600 --> 00:25:57,840
nss and pam

00:25:54,640 --> 00:25:57,840
and studio nsh

00:25:58,000 --> 00:26:04,960
and with the one of the core components

00:26:01,120 --> 00:26:07,120
uh which makes uh free apa

00:26:04,960 --> 00:26:08,080
for some people are a bit awkward to use

00:26:07,120 --> 00:26:10,960
is ldap

00:26:08,080 --> 00:26:11,919
and so this slide actually started by

00:26:10,960 --> 00:26:15,039
one of

00:26:11,919 --> 00:26:16,880
our co-workers uh so um

00:26:15,039 --> 00:26:18,880
and he put in like not regular sql

00:26:16,880 --> 00:26:21,039
database and i kept that because that

00:26:18,880 --> 00:26:23,279
basically sums up ldap a lot so if

00:26:21,039 --> 00:26:26,000
you're coming from sql

00:26:23,279 --> 00:26:27,520
and then all that was like very awkward

00:26:26,000 --> 00:26:29,279
to you but it's not

00:26:27,520 --> 00:26:31,679
that complicated it's more like a

00:26:29,279 --> 00:26:34,720
particle address book database

00:26:31,679 --> 00:26:37,440
or a fancy schema

00:26:34,720 --> 00:26:38,000
driven key value store so on the right

00:26:37,440 --> 00:26:39,919
side you see

00:26:38,000 --> 00:26:42,559
like an l.treat it's really good tree

00:26:39,919 --> 00:26:44,480
form and the nice thing is oh but oh

00:26:42,559 --> 00:26:45,679
it's a pretty old protocol and it's

00:26:44,480 --> 00:26:48,159
heavily standardized

00:26:45,679 --> 00:26:49,520
so it's not like myspace or postgres

00:26:48,159 --> 00:26:51,520
where you have different drivers

00:26:49,520 --> 00:26:53,360
different binary protocols

00:26:51,520 --> 00:26:54,880
or each application has its own like

00:26:53,360 --> 00:26:57,840
database tables

00:26:54,880 --> 00:26:58,720
uh the schema and the protocols are all

00:26:57,840 --> 00:27:02,080
standardized

00:26:58,720 --> 00:27:05,360
and that merge works mostly

00:27:02,080 --> 00:27:07,440
uh aleb is also not very well optimized

00:27:05,360 --> 00:27:08,000
for writing it's more done for heavy

00:27:07,440 --> 00:27:10,240
reading

00:27:08,000 --> 00:27:11,440
and replication of data across multiple

00:27:10,240 --> 00:27:13,200
order of servers so

00:27:11,440 --> 00:27:15,279
we do lots of writing with ldap you're

00:27:13,200 --> 00:27:17,600
probably doing it wrong

00:27:15,279 --> 00:27:18,320
it's extensible so you can both extend

00:27:17,600 --> 00:27:20,720
the schema

00:27:18,320 --> 00:27:22,320
and even the protocol with additional

00:27:20,720 --> 00:27:24,399
features so

00:27:22,320 --> 00:27:26,240
we have one extension for rba for

00:27:24,399 --> 00:27:27,760
example where you can send a server

00:27:26,240 --> 00:27:30,960
control i'm telling you

00:27:27,760 --> 00:27:33,200
when you log in that you require that

00:27:30,960 --> 00:27:35,120
the user also has during lock and

00:27:33,200 --> 00:27:37,919
supplied a two-factor authentication

00:27:35,120 --> 00:27:40,480
token and the elector will just refuse

00:27:37,919 --> 00:27:41,840
to let people in without two-factor

00:27:40,480 --> 00:27:44,240
authentication

00:27:41,840 --> 00:27:46,960
and we do a lot of access controlling

00:27:44,240 --> 00:27:49,679
permission checks on the server side

00:27:46,960 --> 00:27:50,799
which makes um that rather special

00:27:49,679 --> 00:27:54,080
because

00:27:50,799 --> 00:27:57,679
um i'm going to explain that on the

00:27:54,080 --> 00:28:00,000
slide after that slide so

00:27:57,679 --> 00:28:00,880
the lap schema is like the the table

00:28:00,000 --> 00:28:04,159
layout

00:28:00,880 --> 00:28:06,080
uh view to compare that to sql

00:28:04,159 --> 00:28:09,120
so in all that we don't have like tables

00:28:06,080 --> 00:28:11,840
and rows and columns we have entries

00:28:09,120 --> 00:28:12,480
and entries have like a distinguished

00:28:11,840 --> 00:28:15,520
name

00:28:12,480 --> 00:28:16,799
and they have an object class or usually

00:28:15,520 --> 00:28:19,600
multiple object classes

00:28:16,799 --> 00:28:21,120
and they have attributes and object plus

00:28:19,600 --> 00:28:22,960
is just an attribute but a rather

00:28:21,120 --> 00:28:25,600
special one

00:28:22,960 --> 00:28:27,919
the dn distinguished name is kind of a

00:28:25,600 --> 00:28:30,000
unique identifier and also a path

00:28:27,919 --> 00:28:31,440
that shows where the object is located

00:28:30,000 --> 00:28:34,559
in the tree so

00:28:31,440 --> 00:28:36,880
here's an example for a a user in my

00:28:34,559 --> 00:28:38,559
test instance so they say

00:28:36,880 --> 00:28:40,559
starting from the right side so dc fast

00:28:38,559 --> 00:28:41,440
easy example the root database and then

00:28:40,559 --> 00:28:45,039
you have an

00:28:41,440 --> 00:28:45,440
account subtree with a user subtree that

00:28:45,039 --> 00:28:50,080
has

00:28:45,440 --> 00:28:53,440
a user first user1 the object class of

00:28:50,080 --> 00:28:55,120
an entry lists both the mandatory and

00:28:53,440 --> 00:28:58,320
the optional attributes

00:28:55,120 --> 00:29:01,279
and in most cases you can add additional

00:28:58,320 --> 00:29:02,240
auxiliary object classes to an existing

00:29:01,279 --> 00:29:04,880
entry so you can

00:29:02,240 --> 00:29:06,720
just extend that with like object

00:29:04,880 --> 00:29:09,520
orientated you can even subclass

00:29:06,720 --> 00:29:12,480
in object class and create like extended

00:29:09,520 --> 00:29:14,159
subclass of an object class

00:29:12,480 --> 00:29:16,080
all of us user attributes so these are

00:29:14,159 --> 00:29:19,360
the attributes that an application

00:29:16,080 --> 00:29:22,000
is able to set and modify

00:29:19,360 --> 00:29:23,679
it also has something called operational

00:29:22,000 --> 00:29:25,440
and auto generated attributes so these

00:29:23,679 --> 00:29:27,200
are internal attributes

00:29:25,440 --> 00:29:28,640
or attributes generated by internal

00:29:27,200 --> 00:29:32,000
plugins

00:29:28,640 --> 00:29:34,320
and attributes are either

00:29:32,000 --> 00:29:36,240
single or multi-valued in most cases

00:29:34,320 --> 00:29:38,080
attributes are multi-valued so you can

00:29:36,240 --> 00:29:39,440
have like multiple names multiple group

00:29:38,080 --> 00:29:41,520
memberships

00:29:39,440 --> 00:29:43,039
and they also are strictly typed

00:29:41,520 --> 00:29:45,600
strongly typed so you have

00:29:43,039 --> 00:29:46,640
a different kind of text attributes uh

00:29:45,600 --> 00:29:50,240
both ascii

00:29:46,640 --> 00:29:51,760
and utf-8 like text you have numbers you

00:29:50,240 --> 00:29:54,799
have dates with binaries

00:29:51,760 --> 00:29:56,799
booleans and a special one

00:29:54,799 --> 00:29:58,080
little kind of type is distinguished

00:29:56,799 --> 00:30:00,880
name which is

00:29:58,080 --> 00:30:01,520
kind of like a foreign key reference in

00:30:00,880 --> 00:30:04,799
sql

00:30:01,520 --> 00:30:06,880
except you reference another entry by

00:30:04,799 --> 00:30:10,640
its distinguished name

00:30:06,880 --> 00:30:11,279
and we have in 390 as a plug-in that

00:30:10,640 --> 00:30:15,039
generates

00:30:11,279 --> 00:30:17,279
back references so if you add a user

00:30:15,039 --> 00:30:18,640
as a member of a group then the user

00:30:17,279 --> 00:30:20,559
gets a member of

00:30:18,640 --> 00:30:22,399
back reference attribute automation

00:30:20,559 --> 00:30:24,960
generated that points

00:30:22,399 --> 00:30:25,600
from member of of the user entry back to

00:30:24,960 --> 00:30:28,880
the group

00:30:25,600 --> 00:30:32,240
entry and these are internally managed

00:30:28,880 --> 00:30:35,520
by 390s so if you remove a user then

00:30:32,240 --> 00:30:36,880
also the group gets updated and

00:30:35,520 --> 00:30:40,320
the user is removed from the member

00:30:36,880 --> 00:30:40,320
entry or the other way around

00:30:40,960 --> 00:30:47,279
and so uh another core feature

00:30:44,000 --> 00:30:50,080
what makes ib idm free ipa

00:30:47,279 --> 00:30:50,559
usable and very large installations and

00:30:50,080 --> 00:30:52,720
makes us

00:30:50,559 --> 00:30:55,200
resilient against any kind of data

00:30:52,720 --> 00:30:57,679
center or connection issues of the fact

00:30:55,200 --> 00:31:00,080
that uh field on the s is a truly

00:30:57,679 --> 00:31:03,840
multi-primary application system so

00:31:00,080 --> 00:31:05,039
or the old name master master and it's a

00:31:03,840 --> 00:31:07,840
topology where you

00:31:05,039 --> 00:31:08,399
link multiple servers with other servers

00:31:07,840 --> 00:31:11,919
and

00:31:08,399 --> 00:31:13,919
they eventually reach a consistent state

00:31:11,919 --> 00:31:15,360
so you update one entry and the entry

00:31:13,919 --> 00:31:16,720
then gets propagated throughout the

00:31:15,360 --> 00:31:19,120
whole cluster and

00:31:16,720 --> 00:31:20,080
even with one or two of the uh servers

00:31:19,120 --> 00:31:22,000
up like

00:31:20,080 --> 00:31:23,760
in maintenance or maybe the hardware

00:31:22,000 --> 00:31:26,000
failed that's no issue

00:31:23,760 --> 00:31:26,880
and uh this is also one of the reasons

00:31:26,000 --> 00:31:29,679
why we have

00:31:26,880 --> 00:31:32,559
dns built in into free ipa we have

00:31:29,679 --> 00:31:35,120
location based dns so

00:31:32,559 --> 00:31:36,080
including server records so in a client

00:31:35,120 --> 00:31:39,519
tries to connect

00:31:36,080 --> 00:31:40,240
to a server it doesn't usually connect

00:31:39,519 --> 00:31:42,159
specific so

00:31:40,240 --> 00:31:44,480
just get me the nearest server that's

00:31:42,159 --> 00:31:46,000
alive and then it will be pointed to

00:31:44,480 --> 00:31:47,360
several host names

00:31:46,000 --> 00:31:49,200
and then we'll try to connect the

00:31:47,360 --> 00:31:52,799
different hosts and get the one that

00:31:49,200 --> 00:31:52,799
responds so

00:31:54,720 --> 00:32:03,039
and another core feature of free ipa

00:31:58,480 --> 00:32:06,640
it's very fine grain when it comes to

00:32:03,039 --> 00:32:08,320
access control uh and one thing that's

00:32:06,640 --> 00:32:09,200
also pretty different to what most

00:32:08,320 --> 00:32:11,519
people are used

00:32:09,200 --> 00:32:12,960
from single light sql databases like

00:32:11,519 --> 00:32:15,840
podcare at mysql

00:32:12,960 --> 00:32:16,880
there is no like a database user so the

00:32:15,840 --> 00:32:20,880
web framework

00:32:16,880 --> 00:32:23,200
the web ui the api does not have a

00:32:20,880 --> 00:32:25,200
database user like you used to it has a

00:32:23,200 --> 00:32:28,240
special kind of user

00:32:25,200 --> 00:32:31,279
that is able to impersonate users uh

00:32:28,240 --> 00:32:35,039
via credential delegation or it's called

00:32:31,279 --> 00:32:38,240
cabros so youtube proxy so what it means

00:32:35,039 --> 00:32:40,960
so you connect to the front end like to

00:32:38,240 --> 00:32:43,440
fast json or to free ipa with your

00:32:40,960 --> 00:32:47,360
kerberos credentials

00:32:43,440 --> 00:32:50,880
and the database then gets connected

00:32:47,360 --> 00:32:53,519
by the fast json with the same

00:32:50,880 --> 00:32:54,799
credentials delegated through so the

00:32:53,519 --> 00:32:57,360
actual user that

00:32:54,799 --> 00:32:58,480
queries the database is you it's not the

00:32:57,360 --> 00:33:01,360
fast json

00:32:58,480 --> 00:33:02,480
user and that allows us to do all the

00:33:01,360 --> 00:33:06,240
permission checks

00:33:02,480 --> 00:33:08,240
uh inside the database so you

00:33:06,240 --> 00:33:10,000
in theory we would be able to let

00:33:08,240 --> 00:33:11,679
anybody connect directly all dap and

00:33:10,000 --> 00:33:13,519
it wouldn't be any kind of commission

00:33:11,679 --> 00:33:16,320
issues or

00:33:13,519 --> 00:33:18,640
privilege issues with the role based

00:33:16,320 --> 00:33:21,120
access control we also have a way to

00:33:18,640 --> 00:33:21,919
define who's allowed to do what very

00:33:21,120 --> 00:33:24,799
fine grain

00:33:21,919 --> 00:33:25,519
so one example we have we have a

00:33:24,799 --> 00:33:27,279
agreement

00:33:25,519 --> 00:33:29,760
that allows you that you have to agree

00:33:27,279 --> 00:33:31,360
to before you're allowed to join a group

00:33:29,760 --> 00:33:32,960
and there are permissions to add or

00:33:31,360 --> 00:33:34,880
remove agreements

00:33:32,960 --> 00:33:36,640
uh they're then combined into a

00:33:34,880 --> 00:33:39,279
privilege that

00:33:36,640 --> 00:33:40,960
is called fast agreement administrators

00:33:39,279 --> 00:33:43,200
and the role fast agreement

00:33:40,960 --> 00:33:46,799
administrator has this privilege

00:33:43,200 --> 00:33:50,240
and then you can add either users or

00:33:46,799 --> 00:33:53,679
a user group given that role and

00:33:50,240 --> 00:33:54,240
members of that user group who have that

00:33:53,679 --> 00:33:57,120
role

00:33:54,240 --> 00:33:58,000
is able to add or remove agreements we

00:33:57,120 --> 00:34:00,960
also have a

00:33:58,000 --> 00:34:03,279
self-service permissions so by default

00:34:00,960 --> 00:34:04,159
the user is not allowed to read nor

00:34:03,279 --> 00:34:06,640
modify

00:34:04,159 --> 00:34:07,279
any attribute so you have to give users

00:34:06,640 --> 00:34:10,399
uh

00:34:07,279 --> 00:34:13,119
explicit rights to even get a value or

00:34:10,399 --> 00:34:14,800
change your value and there's special

00:34:13,119 --> 00:34:18,960
kind of ways to give this

00:34:14,800 --> 00:34:18,960
permission to say this is self-service

00:34:19,040 --> 00:34:22,159
permission so it means you can only

00:34:21,200 --> 00:34:24,879
modify your own

00:34:22,159 --> 00:34:26,639
entries you can't modify a like the rsc

00:34:24,879 --> 00:34:30,079
nickname of a different person

00:34:26,639 --> 00:34:31,040
and we can also do constraint delegation

00:34:30,079 --> 00:34:34,800
of permissions

00:34:31,040 --> 00:34:38,879
so we developed a four

00:34:34,800 --> 00:34:41,280
fedora accounting system a special new

00:34:38,879 --> 00:34:42,879
attribute called membership managers

00:34:41,280 --> 00:34:45,040
these are group permissions

00:34:42,879 --> 00:34:46,320
group attributes so each group has a set

00:34:45,040 --> 00:34:49,200
of member managers

00:34:46,320 --> 00:34:51,280
and these member managers allow to

00:34:49,200 --> 00:34:54,320
modify a specific attribute

00:34:51,280 --> 00:34:56,480
and add and remove users for a group and

00:34:54,320 --> 00:35:00,240
so this is fine grain delegation

00:34:56,480 --> 00:35:00,240
of permissions

00:35:00,640 --> 00:35:06,320
and that's really what we developed when

00:35:03,119 --> 00:35:09,359
we created the free ipa fast plugin so

00:35:06,320 --> 00:35:10,560
extend the ldap schema extend the api

00:35:09,359 --> 00:35:14,000
and extend the

00:35:10,560 --> 00:35:17,119
web interface so for example we extended

00:35:14,000 --> 00:35:18,000
the users to have rc next to have local

00:35:17,119 --> 00:35:20,560
information

00:35:18,000 --> 00:35:22,079
you can upload ugbg keys additional to

00:35:20,560 --> 00:35:25,200
existing ones and then

00:35:22,079 --> 00:35:25,440
allow users to all users to read them so

00:35:25,200 --> 00:35:27,119
all

00:35:25,440 --> 00:35:29,440
authenticated users are able to read

00:35:27,119 --> 00:35:30,000
this information and each use allowed to

00:35:29,440 --> 00:35:33,440
change its

00:35:30,000 --> 00:35:35,440
own rc neck for groups um

00:35:33,440 --> 00:35:37,839
it's similar their new attributes

00:35:35,440 --> 00:35:40,880
listening rc channels and mailing lists

00:35:37,839 --> 00:35:42,880
uh one rather big extension was the user

00:35:40,880 --> 00:35:46,560
agreement fields which we're going to

00:35:42,880 --> 00:35:49,839
demo eventually at the end of the talk

00:35:46,560 --> 00:35:52,000
so user agreements

00:35:49,839 --> 00:35:53,440
uh our requirement before you're allowed

00:35:52,000 --> 00:35:56,640
to join a group

00:35:53,440 --> 00:35:58,079
and the framework verifies that you're

00:35:56,640 --> 00:36:01,200
only allowed to join a group

00:35:58,079 --> 00:36:04,320
when you have agreed to all attached

00:36:01,200 --> 00:36:07,040
agreements for a group and if you

00:36:04,320 --> 00:36:07,680
if somebody so if a group membership

00:36:07,040 --> 00:36:11,680
manager

00:36:07,680 --> 00:36:13,520
or a fafsa agreement manager removes

00:36:11,680 --> 00:36:16,079
this agreement for you you can't even

00:36:13,520 --> 00:36:18,640
disagree from an agreement then you get

00:36:16,079 --> 00:36:21,280
already removed

00:36:18,640 --> 00:36:23,040
we created several new permissions and

00:36:21,280 --> 00:36:26,480
access controls to do

00:36:23,040 --> 00:36:27,839
things and several things that all knows

00:36:26,480 --> 00:36:30,320
the unique values so

00:36:27,839 --> 00:36:31,440
in free ipa we don't enforce that email

00:36:30,320 --> 00:36:34,160
address is unique

00:36:31,440 --> 00:36:35,760
but in fast we also enforce that unit

00:36:34,160 --> 00:36:39,040
errors are

00:36:35,760 --> 00:36:40,400
unique and finally a bit of javascript

00:36:39,040 --> 00:36:43,680
code so steven's

00:36:40,400 --> 00:36:47,280
power scan actually very handy um so we

00:36:43,680 --> 00:36:51,280
extended the ui with javascript

00:36:47,280 --> 00:36:51,280
and i think we're not to demo time

00:36:53,200 --> 00:36:55,839
cool

00:37:05,760 --> 00:37:09,839
i can't hear you steven

00:37:10,800 --> 00:37:18,160
it was muted okay perfect

00:37:14,320 --> 00:37:21,119
one penny in the jar okay um

00:37:18,160 --> 00:37:23,040
so let me start with the demonstration

00:37:21,119 --> 00:37:26,800
this is how it looks currently

00:37:23,040 --> 00:37:29,119
it's kind of small if you have the multi

00:37:26,800 --> 00:37:30,000
screen or i don't know maybe you want to

00:37:29,119 --> 00:37:33,119
click on the

00:37:30,000 --> 00:37:35,440
on the screen share to get it um

00:37:33,119 --> 00:37:37,520
big enough maybe i can zoom in actually

00:37:35,440 --> 00:37:41,520
yeah that should be a bit better

00:37:37,520 --> 00:37:44,560
all right okay um

00:37:41,520 --> 00:37:47,839
okay people can of course identify but

00:37:44,560 --> 00:37:47,839
first we're going to register

00:37:49,040 --> 00:37:52,640
let's say i create an account for myself

00:37:54,720 --> 00:37:58,320
and my email address

00:37:59,119 --> 00:38:04,000
well that's not much of a secret anyway

00:38:01,520 --> 00:38:07,680
um this is going to send me oh that's

00:38:04,000 --> 00:38:11,040
nice okay let me refresh that screen

00:38:07,680 --> 00:38:14,560
okay of course

00:38:11,040 --> 00:38:16,960
okay because i've been

00:38:14,560 --> 00:38:19,119
keeping that um that page open for too

00:38:16,960 --> 00:38:19,839
long yeah we have security right we have

00:38:19,119 --> 00:38:23,119
serious

00:38:19,839 --> 00:38:25,839
csrf tokens great um

00:38:23,119 --> 00:38:26,640
so now it's going to ask me to validate

00:38:25,839 --> 00:38:30,160
my email

00:38:26,640 --> 00:38:33,839
so i'm going to go look in my

00:38:30,160 --> 00:38:33,839
inbox slash terminal

00:38:35,040 --> 00:38:41,760
uh what the account what the

00:38:38,400 --> 00:38:41,760
validation link was

00:38:42,000 --> 00:38:46,240
[Music]

00:38:44,839 --> 00:38:49,760
um

00:38:46,240 --> 00:38:53,440
yeah so that's a long link

00:38:49,760 --> 00:38:56,800
with a token or like a dwt token

00:38:53,440 --> 00:39:01,440
that's nice even better

00:38:56,800 --> 00:39:03,839
what is this

00:39:01,440 --> 00:39:06,560
okay well we didn't pay enough to the

00:39:03,839 --> 00:39:09,760
demo girls sorry for that

00:39:06,560 --> 00:39:11,200
yeah that's always happened

00:39:09,760 --> 00:39:13,839
no we're just showing how everything

00:39:11,200 --> 00:39:13,839
works even

00:39:14,400 --> 00:39:17,680
right i'm trying to show you how it's

00:39:16,400 --> 00:39:19,200
very secured

00:39:17,680 --> 00:39:21,510
yeah i can't even do the things i was

00:39:19,200 --> 00:39:24,569
planning to do because it's so secure

00:39:21,510 --> 00:39:24,569
[Music]

00:39:26,960 --> 00:39:34,400
uh yes yes that is entirely normal

00:39:30,800 --> 00:39:34,400
that is exactly what i wanted to do

00:39:40,839 --> 00:39:43,839
okay

00:39:44,160 --> 00:39:46,640
there it is

00:39:47,920 --> 00:39:55,839
all right back to uh the first thing

00:39:52,880 --> 00:39:56,640
copy the link thank you very much pass

00:39:55,839 --> 00:39:59,200
that now

00:39:56,640 --> 00:40:00,000
hopefully it's gonna work ah no i got

00:39:59,200 --> 00:40:03,520
the right link

00:40:00,000 --> 00:40:05,440
woohoo wonderful um so now that i have

00:40:03,520 --> 00:40:07,040
proven that my email address is correct

00:40:05,440 --> 00:40:10,480
i'm going to have to be asked

00:40:07,040 --> 00:40:14,160
for a password which is going to be

00:40:10,480 --> 00:40:16,000
very interesting um and i'm going to

00:40:14,160 --> 00:40:17,839
activate my account

00:40:16,000 --> 00:40:20,480
i don't want to to remember that

00:40:17,839 --> 00:40:22,640
password thank you very much

00:40:20,480 --> 00:40:24,480
my account has been created i am not

00:40:22,640 --> 00:40:27,119
logged in and

00:40:24,480 --> 00:40:27,920
uh i it says that i have no groups

00:40:27,119 --> 00:40:30,319
membership because

00:40:27,920 --> 00:40:32,000
obviously i just like them that's the

00:40:30,319 --> 00:40:33,440
profile page that you will be able to

00:40:32,000 --> 00:40:35,599
see on each user

00:40:33,440 --> 00:40:37,040
uh it has a few information a few pieces

00:40:35,599 --> 00:40:38,400
of information that are useful for

00:40:37,040 --> 00:40:41,040
example the time zone

00:40:38,400 --> 00:40:42,400
that's pretty useful uh the current time

00:40:41,040 --> 00:40:44,800
of that user

00:40:42,400 --> 00:40:46,240
um and that's very useful obviously when

00:40:44,800 --> 00:40:48,240
you want to to talk to

00:40:46,240 --> 00:40:50,319
to people that are around the world such

00:40:48,240 --> 00:40:52,079
as people in our community

00:40:50,319 --> 00:40:53,839
there's a directing to the to the wiki

00:40:52,079 --> 00:40:57,040
page uh for that user

00:40:53,839 --> 00:40:58,560
and uh the fedora people page for that

00:40:57,040 --> 00:41:02,319
user

00:40:58,560 --> 00:41:05,520
um i'm going to edit my profile because

00:41:02,319 --> 00:41:08,400
i'm actually not living in utc time zone

00:41:05,520 --> 00:41:09,760
so let me check that that is correct it

00:41:08,400 --> 00:41:12,079
detected that i mean

00:41:09,760 --> 00:41:12,800
that i speak french but that is not

00:41:12,079 --> 00:41:15,839
correct

00:41:12,800 --> 00:41:15,839
uh europe

00:41:16,079 --> 00:41:23,680
paris there it is

00:41:20,319 --> 00:41:26,720
i can enter if my website url i can turn

00:41:23,680 --> 00:41:29,760
my ioc nicknames here

00:41:26,720 --> 00:41:33,040
very surprisingly that's about

00:41:29,760 --> 00:41:34,000
that is oh and i'll let you guess about

00:41:33,040 --> 00:41:37,359
my gitlab username

00:41:34,000 --> 00:41:40,640
is and um i'm going to

00:41:37,359 --> 00:41:42,560
save that and show you that on my

00:41:40,640 --> 00:41:45,040
profile if i go back to my profile

00:41:42,560 --> 00:41:46,800
view your profile thank you now it says

00:41:45,040 --> 00:41:47,440
that i'm in paris and it actually shows

00:41:46,800 --> 00:41:50,480
my right

00:41:47,440 --> 00:41:52,640
uh local time so

00:41:50,480 --> 00:41:53,920
it's 5 45 in the afternoon friday for me

00:41:52,640 --> 00:41:56,160
right now

00:41:53,920 --> 00:41:57,040
uh i'm going i could show you how to

00:41:56,160 --> 00:41:59,119
upload gpd

00:41:57,040 --> 00:42:00,640
gpg keys and fsh keys and all that stuff

00:41:59,119 --> 00:42:02,480
that's not very entirely

00:42:00,640 --> 00:42:04,800
interesting there's the agreements thing

00:42:02,480 --> 00:42:06,400
that we've talked about before

00:42:04,800 --> 00:42:08,240
it's a bit big so it's going to look

00:42:06,400 --> 00:42:08,800
less weird on your screen like it should

00:42:08,240 --> 00:42:13,599
be more

00:42:08,800 --> 00:42:16,000
like like this i could decide to

00:42:13,599 --> 00:42:16,800
sign the fpca here so i'm going to sign

00:42:16,000 --> 00:42:19,040
it

00:42:16,800 --> 00:42:20,880
that's the whole fpca thing no it's

00:42:19,040 --> 00:42:23,599
actually not right that's just

00:42:20,880 --> 00:42:24,240
random stuff that we got and passed it

00:42:23,599 --> 00:42:26,480
it means

00:42:24,240 --> 00:42:27,760
absolutely nothing but we can still sign

00:42:26,480 --> 00:42:31,119
it

00:42:27,760 --> 00:42:34,880
i'm gonna sign it and now

00:42:31,119 --> 00:42:36,880
i signed it and it doesn't show

00:42:34,880 --> 00:42:38,000
us signed maybe i need to refresh this

00:42:36,880 --> 00:42:41,200
no

00:42:38,000 --> 00:42:41,680
we'll look at that later one very fun

00:42:41,200 --> 00:42:44,319
thing

00:42:41,680 --> 00:42:46,000
is the the otp feature so now we can

00:42:44,319 --> 00:42:49,119
have tp tokens

00:42:46,000 --> 00:42:51,119
um i'll i'll try to demo that of course

00:42:49,119 --> 00:42:53,920
it's very very risky

00:42:51,119 --> 00:42:54,480
so i'm gonna try it and i'm sure it's

00:42:53,920 --> 00:42:58,079
gonna work

00:42:54,480 --> 00:43:00,000
first time once you get to two-factor

00:42:58,079 --> 00:43:01,040
authentication with an otp token you

00:43:00,000 --> 00:43:04,000
can't really go back

00:43:01,040 --> 00:43:07,760
so make sure you remember your tokens

00:43:04,000 --> 00:43:10,960
token name is going to be a test token

00:43:07,760 --> 00:43:14,319
and i'm going to use my password here to

00:43:10,960 --> 00:43:16,160
prove that it's actually me um this way

00:43:14,319 --> 00:43:18,319
if i leave my screen open and i move

00:43:16,160 --> 00:43:20,880
away to get a coffee nobody can

00:43:18,319 --> 00:43:22,240
come in and lock me out of my account by

00:43:20,880 --> 00:43:23,839
creating a token that i

00:43:22,240 --> 00:43:28,160
don't know about so i'm going to

00:43:23,839 --> 00:43:30,720
generate it please don't save that

00:43:28,160 --> 00:43:31,440
okay it's been generated now i can click

00:43:30,720 --> 00:43:33,920
on reveal

00:43:31,440 --> 00:43:34,640
when i'm ready with my application on my

00:43:33,920 --> 00:43:36,880
phone

00:43:34,640 --> 00:43:38,079
that you're not going to see if you have

00:43:36,880 --> 00:43:40,480
maxed up the screen

00:43:38,079 --> 00:43:41,920
but i can i'm going to get to that

00:43:40,480 --> 00:43:44,160
application

00:43:41,920 --> 00:43:45,119
so i'm using something called aegis but

00:43:44,160 --> 00:43:49,119
free otp

00:43:45,119 --> 00:43:52,240
also work that's on on android

00:43:49,119 --> 00:43:55,839
and i'm going to register a new token

00:43:52,240 --> 00:43:55,839
there it is

00:43:56,079 --> 00:44:00,640
aha i got my token i could also cut and

00:43:58,800 --> 00:44:01,200
pass it if i couldn't if i don't have

00:44:00,640 --> 00:44:04,480
this

00:44:01,200 --> 00:44:06,319
nice qr code feature and now

00:44:04,480 --> 00:44:07,680
i have a test token and i have the id of

00:44:06,319 --> 00:44:09,359
this test token

00:44:07,680 --> 00:44:13,359
and next time i'm going to log in it

00:44:09,359 --> 00:44:16,800
will ask me for a freud token

00:44:13,359 --> 00:44:18,319
um i can also list the other users

00:44:16,800 --> 00:44:19,920
i know that there are quite a few i

00:44:18,319 --> 00:44:21,440
could list the groups here oh it's in

00:44:19,920 --> 00:44:23,119
french by the way it's going to be to is

00:44:21,440 --> 00:44:26,240
going to be translated

00:44:23,119 --> 00:44:27,119
at some point um entirely so if you see

00:44:26,240 --> 00:44:31,119
frenchy things

00:44:27,119 --> 00:44:33,839
that's normal it's actually a feature um

00:44:31,119 --> 00:44:34,960
say we go to developers where we have

00:44:33,839 --> 00:44:36,880
test users

00:44:34,960 --> 00:44:39,040
so there's all these users that you

00:44:36,880 --> 00:44:39,839
could that are already members of the

00:44:39,040 --> 00:44:42,720
group

00:44:39,839 --> 00:44:42,720
if i want to

00:44:44,079 --> 00:44:48,319
meet user joshua here i could just click

00:44:47,119 --> 00:44:51,040
on the search bar

00:44:48,319 --> 00:44:51,839
very standard thing nothing too nothing

00:44:51,040 --> 00:44:55,119
very

00:44:51,839 --> 00:44:56,160
original here uh pretty picture all that

00:44:55,119 --> 00:44:58,319
stuff

00:44:56,160 --> 00:44:59,359
and i'm going to log back and log in

00:44:58,319 --> 00:45:03,599
again

00:44:59,359 --> 00:45:06,000
with my token now i'm here

00:45:03,599 --> 00:45:06,720
about so when you have a one-time

00:45:06,000 --> 00:45:09,599
password

00:45:06,720 --> 00:45:10,880
token um you enter your password as

00:45:09,599 --> 00:45:13,760
usual

00:45:10,880 --> 00:45:15,520
and then you um that's one more letter

00:45:13,760 --> 00:45:17,599
and then you enter the token that are

00:45:15,520 --> 00:45:21,599
given to you by the application

00:45:17,599 --> 00:45:25,680
so for me that is going to be

00:45:21,599 --> 00:45:26,960
zero three four seven zero zero

00:45:25,680 --> 00:45:29,200
of course don't remember that and i

00:45:26,960 --> 00:45:33,599
logged in and uh

00:45:29,200 --> 00:45:36,720
so that actually works fantastic

00:45:33,599 --> 00:45:38,079
uh what else can i show you not much

00:45:36,720 --> 00:45:41,680
actually the rest is just

00:45:38,079 --> 00:45:43,599
a standard thing that you want to do

00:45:41,680 --> 00:45:45,440
when you want to join a group here safe

00:45:43,599 --> 00:45:48,160
designers for example

00:45:45,440 --> 00:45:49,440
um you can't really join the group via

00:45:48,160 --> 00:45:50,800
noggin itself

00:45:49,440 --> 00:45:52,480
that's something that we haven't brought

00:45:50,800 --> 00:45:54,800
back from fast

00:45:52,480 --> 00:45:55,520
you have to contact your group sponsor

00:45:54,800 --> 00:45:57,359
thankfully

00:45:55,520 --> 00:45:58,640
sponsors are all listed there so it's

00:45:57,359 --> 00:46:02,000
easy to to

00:45:58,640 --> 00:46:04,079
see who they are and contact them

00:46:02,000 --> 00:46:05,839
and then if you're a group sponsor then

00:46:04,079 --> 00:46:07,200
you will be able to add users to your

00:46:05,839 --> 00:46:09,119
group

00:46:07,200 --> 00:46:11,200
if you want to create a new group also

00:46:09,119 --> 00:46:12,720
as we said before it's an admin request

00:46:11,200 --> 00:46:15,839
so you just open a ticket

00:46:12,720 --> 00:46:15,839
and admins will do it for you

00:46:17,200 --> 00:46:20,400
all right i think that's i think that's

00:46:18,640 --> 00:46:22,640
all i had for the demo so i'm going to

00:46:20,400 --> 00:46:25,920
stop here

00:46:22,640 --> 00:46:25,920
and get back to the slides

00:46:27,680 --> 00:46:31,599
i'm gonna cover that so the repositories

00:46:30,079 --> 00:46:33,440
with the code are in github

00:46:31,599 --> 00:46:35,680
uh they're all with a similar structure

00:46:33,440 --> 00:46:38,480
it's all python code

00:46:35,680 --> 00:46:39,520
handle via poetry instead of setup tools

00:46:38,480 --> 00:46:41,200
i don't know if you've worked with that

00:46:39,520 --> 00:46:42,560
before but it's great i encourage you to

00:46:41,200 --> 00:46:45,119
test it

00:46:42,560 --> 00:46:45,760
we have unit tests uh we do the linting

00:46:45,119 --> 00:46:48,160
with uh

00:46:45,760 --> 00:46:49,040
with flakk8 and uh and it's all covered

00:46:48,160 --> 00:46:51,680
by talks

00:46:49,040 --> 00:46:53,200
we have ci you can use vagrant for local

00:46:51,680 --> 00:46:53,920
development if you want to try that so

00:46:53,200 --> 00:46:56,319
you just

00:46:53,920 --> 00:46:57,440
download the code and run vagrant up it

00:46:56,319 --> 00:47:00,480
should set it all up

00:46:57,440 --> 00:47:02,720
it can take some time because ipa can um

00:47:00,480 --> 00:47:05,200
take some time to to install sometimes

00:47:02,720 --> 00:47:06,720
but um but yeah it does work

00:47:05,200 --> 00:47:08,480
there's developer documentation if you

00:47:06,720 --> 00:47:12,880
want in logins doc so

00:47:08,480 --> 00:47:12,880
what our standards are what rules we use

00:47:13,359 --> 00:47:18,720
uh it doesn't support hardware tokens uh

00:47:16,640 --> 00:47:20,240
now i think well christian can answer

00:47:18,720 --> 00:47:22,160
that maybe later

00:47:20,240 --> 00:47:24,079
um and there's we have a project to

00:47:22,160 --> 00:47:27,440
track progress

00:47:24,079 --> 00:47:30,559
so yeah it's uh it's a pretty good pro

00:47:27,440 --> 00:47:31,440
project uh codewise and uh i think we'll

00:47:30,559 --> 00:47:32,960
be happy to

00:47:31,440 --> 00:47:34,640
deploy that to production right now

00:47:32,960 --> 00:47:37,280
there are we are

00:47:34,640 --> 00:47:39,520
deploying it in staging and or in the

00:47:37,280 --> 00:47:41,599
process of deploying into staging

00:47:39,520 --> 00:47:44,400
and uh and are running out all the

00:47:41,599 --> 00:47:44,400
remaining parts

00:47:44,960 --> 00:47:49,760
so yeah we're pretty happy with it and

00:47:47,520 --> 00:47:53,520
uh i hope you'll like it too

00:47:49,760 --> 00:47:55,920
and um yes uh well

00:47:53,520 --> 00:47:57,200
i think that's all thanks for listening

00:47:55,920 --> 00:47:58,880
uh anybody of

00:47:57,200 --> 00:48:02,480
the christian and stephen do you want to

00:47:58,880 --> 00:48:02,480
see something that i may have missed

00:48:03,599 --> 00:48:08,400
thank you thank you and it's 10 minutes

00:48:06,480 --> 00:48:09,359
before so if you have questions we'll

00:48:08,400 --> 00:48:12,400
happy to

00:48:09,359 --> 00:48:12,400
listen and answer them

00:48:15,920 --> 00:48:22,480
so what do i have here

00:48:19,119 --> 00:48:25,599
that's popped up on the chat with the uh

00:48:22,480 --> 00:48:27,920
request for hardware tokens or utf

00:48:25,599 --> 00:48:29,440
that's currently not available in free

00:48:27,920 --> 00:48:31,359
ipa

00:48:29,440 --> 00:48:33,040
uh i think that it's a bit more

00:48:31,359 --> 00:48:35,920
complicated so it requires to

00:48:33,040 --> 00:48:36,559
write plugins both vocabularos and ldap

00:48:35,920 --> 00:48:40,400
and c

00:48:36,559 --> 00:48:42,480
and that's a bit annoying right but yeah

00:48:40,400 --> 00:48:45,760
okay alexander my co-worker

00:48:42,480 --> 00:48:47,599
just posted the upstream uh

00:48:45,760 --> 00:48:49,760
ticket for the features so they first

00:48:47,599 --> 00:48:54,240
have to implement that in ipa

00:48:49,760 --> 00:49:03,839
and then they will eventually land

00:48:54,240 --> 00:49:03,839
as a possible feature

00:49:04,400 --> 00:49:09,040
any more questions i think there aren't

00:49:07,440 --> 00:49:12,160
other questions already

00:49:09,040 --> 00:49:15,200
answered during the talk

00:49:12,160 --> 00:49:19,760
there was one about um

00:49:15,200 --> 00:49:22,960
publicly publicly visible profile urls

00:49:19,760 --> 00:49:25,680
uh so no it's

00:49:22,960 --> 00:49:28,000
it's all behind kerberos yeah you'll

00:49:25,680 --> 00:49:30,079
have to be logged in to see other users

00:49:28,000 --> 00:49:31,040
it's not going to be a public thing but

00:49:30,079 --> 00:49:33,520
there's a link to

00:49:31,040 --> 00:49:34,240
a wiki page uh for users if you want to

00:49:33,520 --> 00:49:37,440
have a public

00:49:34,240 --> 00:49:39,599
facing profile you can use that

00:49:37,440 --> 00:49:41,599
also question by mohan you've seen only

00:49:39,599 --> 00:49:42,319
two ssh key fields can we add more yes

00:49:41,599 --> 00:49:44,640
you can add more

00:49:42,319 --> 00:49:46,400
it's only there's always going to be two

00:49:44,640 --> 00:49:48,000
empty fields so you can add two keys at

00:49:46,400 --> 00:49:50,480
the same time but it's going to be

00:49:48,000 --> 00:49:51,119
you can have as many as you want to same

00:49:50,480 --> 00:49:59,839
thing for us

00:49:51,119 --> 00:49:59,839
for gpg

00:49:59,920 --> 00:50:03,599
and there was one from neil at this

00:50:01,680 --> 00:50:06,319
when's it being deployed so

00:50:03,599 --> 00:50:13,839
staging currently and then production

00:50:06,319 --> 00:50:13,839
early november

00:50:17,920 --> 00:50:22,559
yes um did we talk about that um so the

00:50:20,800 --> 00:50:23,520
people in opensuse are going to use this

00:50:22,559 --> 00:50:26,480
solution

00:50:23,520 --> 00:50:28,559
um the system free apa nor game fuzz

00:50:26,480 --> 00:50:29,599
json etc and they may even deploy it

00:50:28,559 --> 00:50:32,720
before we do

00:50:29,599 --> 00:50:35,760
and that's great i think that's great so

00:50:32,720 --> 00:50:36,319
um yay for community and uh and and

00:50:35,760 --> 00:50:40,720
sharing

00:50:36,319 --> 00:50:40,720
efforts in code fantastic

00:50:55,200 --> 00:50:58,319
i'm not hearing you well and i don't

00:50:56,480 --> 00:51:03,119
know if that's the case for everybody

00:50:58,319 --> 00:51:06,160
um okay okay closer to the microphone

00:51:03,119 --> 00:51:08,400
yeah uh so um

00:51:06,160 --> 00:51:09,680
initially started only to work on the

00:51:08,400 --> 00:51:12,400
solution for fedora

00:51:09,680 --> 00:51:14,079
then center sensor joined in a while ago

00:51:12,400 --> 00:51:16,720
we got every request

00:51:14,079 --> 00:51:18,559
from somebody from the kde community

00:51:16,720 --> 00:51:21,760
there was no follow-up yet

00:51:18,559 --> 00:51:22,880
and gnome has been using free ipa for a

00:51:21,760 --> 00:51:24,800
couple of years now

00:51:22,880 --> 00:51:26,480
so that's the back end for the nem

00:51:24,800 --> 00:51:27,440
community but they're not using fast

00:51:26,480 --> 00:51:30,960
they're using

00:51:27,440 --> 00:51:30,960
just stock free ipa

00:51:34,880 --> 00:51:51,839
open source for the win yep

00:51:56,800 --> 00:52:00,079
that's pretty hard to say actually

00:52:00,720 --> 00:52:04,000
yeah i think we started to use forever

00:52:02,800 --> 00:52:06,720
like five

00:52:04,000 --> 00:52:07,680
six years ago or four years ago

00:52:06,720 --> 00:52:18,079
alexander

00:52:07,680 --> 00:52:21,119
might know more about that

00:52:18,079 --> 00:52:23,119
also we didn't mention the name noggin

00:52:21,119 --> 00:52:26,559
so

00:52:23,119 --> 00:52:30,640
you can now log in with your noggin

00:52:26,559 --> 00:52:34,160
that's that's a pretty cool name

00:52:30,640 --> 00:52:36,880
the other two names are uh my so uh

00:52:34,160 --> 00:52:38,480
when i did like a dirty proof of concept

00:52:36,880 --> 00:52:40,079
hack to figure out how to get like a

00:52:38,480 --> 00:52:42,160
json interface

00:52:40,079 --> 00:52:43,440
for files i just called it first json

00:52:42,160 --> 00:52:47,119
and the name

00:52:43,440 --> 00:52:50,000
stuck so sorry that's my boring

00:52:47,119 --> 00:52:50,000
non-imagination

00:52:52,160 --> 00:52:56,640
it was like a one evening hack before a

00:52:54,880 --> 00:52:57,680
meeting to show that it's possible to

00:52:56,640 --> 00:53:01,839
write a

00:52:57,680 --> 00:53:01,839
quick hack and well

00:53:15,200 --> 00:53:18,319
the end of the hour i think that any

00:53:17,040 --> 00:53:21,680
more questions

00:53:18,319 --> 00:53:25,040
uh you can approach the team

00:53:21,680 --> 00:53:26,400
yeah on the aaa channel

00:53:25,040 --> 00:53:28,000
yes uh accounts are going to be

00:53:26,400 --> 00:53:29,440
transferred but yeah you're right uh

00:53:28,000 --> 00:53:31,760
it's about the end of the hour

00:53:29,440 --> 00:53:32,720
uh feel free to ask questions federer

00:53:31,760 --> 00:53:36,400
aaa

00:53:32,720 --> 00:53:36,400
and there will be account migration

00:53:38,079 --> 00:53:41,680
both accounts are going to be

00:53:39,200 --> 00:53:44,640
transferred yeah we are trying to

00:53:41,680 --> 00:53:45,359
manage uh collisions and how it's going

00:53:44,640 --> 00:53:47,520
to work

00:53:45,359 --> 00:53:49,040
but yeah uh accounts and groups are

00:53:47,520 --> 00:53:50,800
going to be migrated

00:53:49,040 --> 00:53:52,559
and uh centers groups are going to be

00:53:50,800 --> 00:53:57,440
prefixed i think

00:53:52,559 --> 00:53:59,280
but you'll see that

00:53:57,440 --> 00:54:01,359
just when the in the migration as we

00:53:59,280 --> 00:54:03,680
said before there might be

00:54:01,359 --> 00:54:04,480
hiccups with names that are not composed

00:54:03,680 --> 00:54:08,720
of two words

00:54:04,480 --> 00:54:10,240
so just check that but it should be fine

00:54:08,720 --> 00:54:11,920
unless you are one of the two people who

00:54:10,240 --> 00:54:14,079
has no names

00:54:11,920 --> 00:54:14,960
maybe if you can fix that before that'd

00:54:14,079 --> 00:54:16,559
be great

00:54:14,960 --> 00:54:18,480
this is one of the unfortunate side

00:54:16,559 --> 00:54:22,880
effects to having a standardized

00:54:18,480 --> 00:54:26,079
schema to and synonymous api

00:54:22,880 --> 00:54:27,920
i think we could fix that but it would

00:54:26,079 --> 00:54:29,680
take a while and free ipa to get that

00:54:27,920 --> 00:54:32,400
fixed that the only query like

00:54:29,680 --> 00:54:35,200
one name at the moment your we are

00:54:32,400 --> 00:54:37,520
restricted to first name last name so

00:54:35,200 --> 00:54:40,880
the very european north american view on

00:54:37,520 --> 00:54:40,880
names sorry for that

00:54:41,760 --> 00:54:47,359
okay well thank you for joining our talk

00:54:45,440 --> 00:54:48,799
and um yeah and you know the rest of

00:54:47,359 --> 00:54:52,799
luck or nest

00:54:48,799 --> 00:54:59,520
sorry nest with fedora and take care

00:54:52,799 --> 00:54:59,520

YouTube URL: https://www.youtube.com/watch?v=x1SevUmkE60


