Title: ELN: The New RHEL Pipeline
Publication date: 2020-08-27
Playlist: Nest with Fedora 2020
Description: 
	This will be an informational session explaining the Fedora ELN project and its relationship with CentOS Stream and the upcoming RHEL 9.

Presented at Nest With Fedora 2020.
Captions: 
	00:00:02,240 --> 00:00:05,600
hello

00:00:03,360 --> 00:00:07,839
and welcome to my talk on the new rel

00:00:05,600 --> 00:00:09,440
pipeline

00:00:07,839 --> 00:00:11,519
my name is stephen gallagher i'm a

00:00:09,440 --> 00:00:14,240
principal software engineer at red hat

00:00:11,519 --> 00:00:15,280
i work on redhead enterprise linux i'm

00:00:14,240 --> 00:00:17,279
also a member of

00:00:15,280 --> 00:00:19,840
the fedor engineering steering committee

00:00:17,279 --> 00:00:24,000
and you've probably seen my name on

00:00:19,840 --> 00:00:24,000
most of the mega threads on fedor devel

00:00:25,920 --> 00:00:29,519
so let's talk a little bit about what

00:00:28,480 --> 00:00:31,279
are the problems that we're trying to

00:00:29,519 --> 00:00:35,600
solve here

00:00:31,279 --> 00:00:37,200
the big one is this red hat

00:00:35,600 --> 00:00:38,719
and fedora and the open source community

00:00:37,200 --> 00:00:40,480
have always said that

00:00:38,719 --> 00:00:42,160
we should default to open we should make

00:00:40,480 --> 00:00:45,440
sure that

00:00:42,160 --> 00:00:46,079
everything we do is in the in the public

00:00:45,440 --> 00:00:48,960
eye

00:00:46,079 --> 00:00:50,079
can be viewed uh carefully and inspected

00:00:48,960 --> 00:00:53,760
for bugs and for

00:00:50,079 --> 00:00:54,640
security issues but then we don't we

00:00:53,760 --> 00:00:58,320
haven't really been

00:00:54,640 --> 00:01:00,480
living that in when developing rel

00:00:58,320 --> 00:01:02,800
at a certain point in its development we

00:01:00,480 --> 00:01:04,000
fork from the fedora project

00:01:02,800 --> 00:01:06,159
and then we do all the development

00:01:04,000 --> 00:01:08,880
behind closed doors

00:01:06,159 --> 00:01:10,479
with some interaction with uh with

00:01:08,880 --> 00:01:13,680
privileged users or

00:01:10,479 --> 00:01:16,880
partners software and hardware

00:01:13,680 --> 00:01:19,280
but in general we don't really

00:01:16,880 --> 00:01:20,320
we don't really involve the community in

00:01:19,280 --> 00:01:22,560
the actual building of

00:01:20,320 --> 00:01:22,560
rel

00:01:25,680 --> 00:01:29,759
on the other side part of this is

00:01:28,000 --> 00:01:33,119
because fedora is just

00:01:29,759 --> 00:01:34,960
too popular i know that seems like a

00:01:33,119 --> 00:01:37,759
good problem to have

00:01:34,960 --> 00:01:38,799
but what it means is that we actually

00:01:37,759 --> 00:01:42,240
have to be

00:01:38,799 --> 00:01:45,600
cautious in fedora about making

00:01:42,240 --> 00:01:48,960
radical changes uh thing big huge

00:01:45,600 --> 00:01:50,880
changes in fedora affect

00:01:48,960 --> 00:01:53,040
tens of thousands if not hundreds of

00:01:50,880 --> 00:01:55,840
thousands of people

00:01:53,040 --> 00:01:57,280
uh as you you certainly saw recently uh

00:01:55,840 --> 00:01:59,920
in the last couple of releases we

00:01:57,280 --> 00:02:00,560
landed modularity uh which was a major

00:01:59,920 --> 00:02:04,000
feature of

00:02:00,560 --> 00:02:04,000
red enterprise linux 8.

00:02:04,880 --> 00:02:10,000
to say that that didn't go smoothly

00:02:06,960 --> 00:02:13,520
would be a little bit uh

00:02:10,000 --> 00:02:16,720
a little bit of an understatement but

00:02:13,520 --> 00:02:18,800
the good news is that we have finally

00:02:16,720 --> 00:02:21,360
gotten that into a place where

00:02:18,800 --> 00:02:22,640
it's not as disruptive as it had been

00:02:21,360 --> 00:02:24,480
and it was kind of a it was kind of a

00:02:22,640 --> 00:02:25,040
mirror of other projects like that that

00:02:24,480 --> 00:02:28,720
we've done

00:02:25,040 --> 00:02:34,400
past certainly

00:02:28,720 --> 00:02:36,720
the switch from up start to system d was

00:02:34,400 --> 00:02:37,760
hardly a smooth transition and certainly

00:02:36,720 --> 00:02:41,840
didn't involve

00:02:37,760 --> 00:02:45,040
any kind of arguments or flame wars

00:02:41,840 --> 00:02:46,239
uh we could mention gnome 3.0

00:02:45,040 --> 00:02:49,440
but i don't think we'd like to talk

00:02:46,239 --> 00:02:50,879
about gnome 3.0 anymore

00:02:49,440 --> 00:02:52,879
but some of the things that we really

00:02:50,879 --> 00:02:54,640
want to do uh that we're going to that

00:02:52,879 --> 00:02:57,120
we know are going to be necessary for

00:02:54,640 --> 00:02:59,519
red hat enterprise linux are really hard

00:02:57,120 --> 00:03:02,720
to do in fedora because it would

00:02:59,519 --> 00:03:06,000
impact negatively a large subset of the

00:03:02,720 --> 00:03:07,760
of the users for example

00:03:06,000 --> 00:03:09,120
a while back we tried to consider the

00:03:07,760 --> 00:03:11,200
possibility of

00:03:09,120 --> 00:03:12,319
changing our processor optimizations so

00:03:11,200 --> 00:03:15,760
that when we built

00:03:12,319 --> 00:03:17,840
we required a processor that was

00:03:15,760 --> 00:03:19,440
more recent you know maybe something

00:03:17,840 --> 00:03:20,800
built in the last five years would be an

00:03:19,440 --> 00:03:21,920
absolute minimum instead of something

00:03:20,800 --> 00:03:26,480
built in the last uh

00:03:21,920 --> 00:03:26,480
what decade which is our current state

00:03:26,959 --> 00:03:31,519
and what we got for feedback from that

00:03:28,720 --> 00:03:33,440
was of course

00:03:31,519 --> 00:03:36,720
too many people are using it uh too many

00:03:33,440 --> 00:03:40,560
people are relying on that stuff

00:03:36,720 --> 00:03:42,560
similarly uh we have a we have a

00:03:40,560 --> 00:03:44,000
conflict with what we call dependency

00:03:42,560 --> 00:03:46,000
minimization

00:03:44,000 --> 00:03:48,000
there are places in the server world and

00:03:46,000 --> 00:03:50,239
in containers where we really really

00:03:48,000 --> 00:03:54,159
want to have an absolutely minimal

00:03:50,239 --> 00:03:56,000
set of dependencies on packages um and

00:03:54,159 --> 00:03:58,560
then that's not just at uh runtime but

00:03:56,000 --> 00:04:02,080
also at build time

00:03:58,560 --> 00:04:03,920
but in fedora we have a we have this

00:04:02,080 --> 00:04:06,159
general policy that we've always gone

00:04:03,920 --> 00:04:08,720
with of

00:04:06,159 --> 00:04:10,720
always carrying everything that is

00:04:08,720 --> 00:04:12,239
necessary to self-host and to build the

00:04:10,720 --> 00:04:15,120
entire os and to build

00:04:12,239 --> 00:04:16,639
every individual package and we don't

00:04:15,120 --> 00:04:19,759
always want to carry that into

00:04:16,639 --> 00:04:20,400
into rel for example um we don't always

00:04:19,759 --> 00:04:23,680
want to

00:04:20,400 --> 00:04:26,160
run all of the upstream tests in rel

00:04:23,680 --> 00:04:28,320
because that may require us to build

00:04:26,160 --> 00:04:30,320
to carry to carry a series of test

00:04:28,320 --> 00:04:32,560
suites that have an enormous dependency

00:04:30,320 --> 00:04:34,320
chain in that

00:04:32,560 --> 00:04:35,759
which we do sometimes but we don't we

00:04:34,320 --> 00:04:36,560
don't want to be shipping that because

00:04:35,759 --> 00:04:39,199
we can't

00:04:36,560 --> 00:04:41,520
support that it's unrealistic to support

00:04:39,199 --> 00:04:45,840
every package that has ever been used

00:04:41,520 --> 00:04:47,120
in that chain similarly we also uh often

00:04:45,840 --> 00:04:50,320
times in rel

00:04:47,120 --> 00:04:51,919
uh we will not build the documentation

00:04:50,320 --> 00:04:52,639
from the directly from source we will

00:04:51,919 --> 00:04:55,040
build it

00:04:52,639 --> 00:04:56,080
uh one we'll build it on fedora we'll

00:04:55,040 --> 00:04:58,880
tire it up

00:04:56,080 --> 00:05:00,720
and we'll carry it in the rel srpm

00:04:58,880 --> 00:05:03,120
because

00:05:00,720 --> 00:05:03,840
things like python sphinx for example

00:05:03,120 --> 00:05:05,680
pull in

00:05:03,840 --> 00:05:06,960
thousands literally thousands of

00:05:05,680 --> 00:05:10,080
packages

00:05:06,960 --> 00:05:11,600
and most of those exist

00:05:10,080 --> 00:05:13,120
solely for the purpose of supporting the

00:05:11,600 --> 00:05:15,280
documentation generators

00:05:13,120 --> 00:05:16,560
well that's not something we need to be

00:05:15,280 --> 00:05:19,520
maintaining and

00:05:16,560 --> 00:05:21,680
and patching constantly so we want to be

00:05:19,520 --> 00:05:23,600
able to remove those things

00:05:21,680 --> 00:05:25,360
but it's really hard to do in fedora

00:05:23,600 --> 00:05:27,280
proper and to make sure that it doesn't

00:05:25,360 --> 00:05:32,160
cont it doesn't get broken

00:05:27,280 --> 00:05:32,160
um today because we just we

00:05:32,240 --> 00:05:35,520
sure we can put conditionals in you know

00:05:33,919 --> 00:05:37,120
if rel then do that

00:05:35,520 --> 00:05:38,720
but if we're not actually building it

00:05:37,120 --> 00:05:39,360
constantly in that format we don't know

00:05:38,720 --> 00:05:41,440
that

00:05:39,360 --> 00:05:44,080
we haven't introduced a breaking some

00:05:41,440 --> 00:05:44,080
breakage there

00:05:47,360 --> 00:05:52,400
so why don't we just do all the stuff in

00:05:48,880 --> 00:05:54,560
rawhide um

00:05:52,400 --> 00:05:55,680
rawhide has it has its uses rawhide is

00:05:54,560 --> 00:05:58,800
definitely

00:05:55,680 --> 00:06:00,960
the next really cool stuff it's

00:05:58,800 --> 00:06:02,160
everything that we want to land in the

00:06:00,960 --> 00:06:06,000
open source community it's

00:06:02,160 --> 00:06:10,160
the best of the best all new features

00:06:06,000 --> 00:06:11,520
must go into rawhide absolutely

00:06:10,160 --> 00:06:13,280
but it's not really the right place to

00:06:11,520 --> 00:06:14,479
do this because as i said it's hard to

00:06:13,280 --> 00:06:16,240
make sure that you don't

00:06:14,479 --> 00:06:17,680
break things if you're not always

00:06:16,240 --> 00:06:18,840
building them in the right in the same

00:06:17,680 --> 00:06:21,840
way

00:06:18,840 --> 00:06:24,960
so what we're going to do is we

00:06:21,840 --> 00:06:29,360
recently instituted a new program called

00:06:24,960 --> 00:06:29,360
eln or enterprise linux next

00:06:30,240 --> 00:06:38,400
so what is eln

00:06:35,039 --> 00:06:41,759
essentially it is a an early preview

00:06:38,400 --> 00:06:44,880
of the next major release of rel

00:06:41,759 --> 00:06:47,520
so right now uh eln is going to be

00:06:44,880 --> 00:06:48,000
developing into what will ultimately

00:06:47,520 --> 00:06:51,599
become

00:06:48,000 --> 00:06:51,599
red hat enterprise linux 9.

00:06:52,160 --> 00:06:55,680
it's a subset of packages that we

00:06:54,000 --> 00:06:58,319
rebuild out of

00:06:55,680 --> 00:06:58,960
out of rawhide in a build route that is

00:06:58,319 --> 00:07:02,080
designed

00:06:58,960 --> 00:07:05,520
to be more like rel than fedora so

00:07:02,080 --> 00:07:07,680
macros that say if rel will trigger

00:07:05,520 --> 00:07:08,560
uh we may play around with those

00:07:07,680 --> 00:07:11,360
processor

00:07:08,560 --> 00:07:13,280
optimizations uh when we generate

00:07:11,360 --> 00:07:14,880
composers of eln they will be laid out

00:07:13,280 --> 00:07:17,039
the same way that a rel

00:07:14,880 --> 00:07:18,160
release tree would be so if you're used

00:07:17,039 --> 00:07:21,199
to using uh

00:07:18,160 --> 00:07:23,599
the rel the rel repositories for

00:07:21,199 --> 00:07:25,039
uh for your businesses and such it'll

00:07:23,599 --> 00:07:28,000
look the same

00:07:25,039 --> 00:07:29,599
but it'll be just rebuilt rawhide

00:07:28,000 --> 00:07:32,319
packages with no

00:07:29,599 --> 00:07:32,319
other changes

00:07:33,520 --> 00:07:38,080
so how does this work well first and

00:07:35,919 --> 00:07:39,280
foremost we need to have a package list

00:07:38,080 --> 00:07:41,360
because we don't want to rebuild the

00:07:39,280 --> 00:07:42,319
entirety of rawhide in a rel build route

00:07:41,360 --> 00:07:45,520
because that's

00:07:42,319 --> 00:07:48,400
unmaintainable there are

00:07:45,520 --> 00:07:50,000
probably tens of thousands of packages

00:07:48,400 --> 00:07:52,400
of binary packages

00:07:50,000 --> 00:07:53,039
in fedora that we just are never likely

00:07:52,400 --> 00:07:55,840
to carry

00:07:53,039 --> 00:07:56,400
in red enterprise linux so we want to

00:07:55,840 --> 00:07:59,280
get a

00:07:56,400 --> 00:08:00,879
view of what packages we do care about

00:07:59,280 --> 00:08:02,319
and of course that also means getting a

00:08:00,879 --> 00:08:04,080
list of all the things that they

00:08:02,319 --> 00:08:05,599
require at runtime and that they require

00:08:04,080 --> 00:08:07,759
to build

00:08:05,599 --> 00:08:10,240
so we generated this we created this uh

00:08:07,759 --> 00:08:13,240
project called the content resolver

00:08:10,240 --> 00:08:16,080
and you can find it at

00:08:13,240 --> 00:08:19,199
tiny.builddistro.builders

00:08:16,080 --> 00:08:22,479
as a web url and what it does

00:08:19,199 --> 00:08:23,280
is it is contributed to by all the

00:08:22,479 --> 00:08:27,120
people working

00:08:23,280 --> 00:08:31,680
inside of red hat on various subsystems

00:08:27,120 --> 00:08:33,599
networking kernel uh virtualization

00:08:31,680 --> 00:08:35,839
all of the all of the various uh

00:08:33,599 --> 00:08:38,399
different teams that work at red hat

00:08:35,839 --> 00:08:40,240
have provided input content into this

00:08:38,399 --> 00:08:41,680
content resolver and then it

00:08:40,240 --> 00:08:44,320
churns through it calculates all the

00:08:41,680 --> 00:08:47,360
dependencies and it provides

00:08:44,320 --> 00:08:47,839
output that we are going to be using to

00:08:47,360 --> 00:08:51,440
uh

00:08:47,839 --> 00:08:53,519
to uh provide an automatic list

00:08:51,440 --> 00:08:54,800
that we will then rebuild from rawhide

00:08:53,519 --> 00:08:56,640
every time

00:08:54,800 --> 00:08:58,720
to make sure that to make sure that we

00:08:56,640 --> 00:08:59,440
uh have only the content we need so that

00:08:58,720 --> 00:09:02,800
we don't waste

00:08:59,440 --> 00:09:03,680
too many resources on koji and so that

00:09:02,800 --> 00:09:05,680
we are not

00:09:03,680 --> 00:09:08,160
maintaining a separate branch in disk

00:09:05,680 --> 00:09:12,240
kit this was a major point of contention

00:09:08,160 --> 00:09:12,240
when we originally uh proposed this

00:09:12,640 --> 00:09:16,880
a lot of people uh a lot of maintainers

00:09:15,440 --> 00:09:19,040
dislike the idea of

00:09:16,880 --> 00:09:21,200
conditionalizing their code for rel

00:09:19,040 --> 00:09:23,360
versus fedora

00:09:21,200 --> 00:09:24,720
and what they wanted was that instead of

00:09:23,360 --> 00:09:25,680
having instead of rebuilding from

00:09:24,720 --> 00:09:28,720
rawhide

00:09:25,680 --> 00:09:30,080
just create an eln a branch in gist kit

00:09:28,720 --> 00:09:32,640
and build from that

00:09:30,080 --> 00:09:34,640
and try to write a code that maintained

00:09:32,640 --> 00:09:37,680
that keeps its in sync with rawhide or

00:09:34,640 --> 00:09:39,920
merging with rawhide constantly

00:09:37,680 --> 00:09:41,519
that turned out to be a bad idea for a

00:09:39,920 --> 00:09:44,080
couple of different reasons

00:09:41,519 --> 00:09:45,279
not the least of which that merges very

00:09:44,080 --> 00:09:48,560
quickly get

00:09:45,279 --> 00:09:49,920
complicated and

00:09:48,560 --> 00:09:51,839
manually merging doesn't make a whole

00:09:49,920 --> 00:09:56,399
lot of sense and also we

00:09:51,839 --> 00:09:58,560
want it to be the default that

00:09:56,399 --> 00:10:00,800
everything that is on that content

00:09:58,560 --> 00:10:05,279
resolved list

00:10:00,800 --> 00:10:08,079
must end up in eln it's uh at some point

00:10:05,279 --> 00:10:09,279
now for those pac for those packages

00:10:08,079 --> 00:10:12,560
that don't

00:10:09,279 --> 00:10:13,920
want to have conditionals that's fine

00:10:12,560 --> 00:10:15,519
what we're go what they can do is they

00:10:13,920 --> 00:10:17,279
can continue to build it just as fedora

00:10:15,519 --> 00:10:19,839
and it'll get into eln

00:10:17,279 --> 00:10:20,480
just as fedora just as it was packaged

00:10:19,839 --> 00:10:24,240
in fedora

00:10:20,480 --> 00:10:25,200
and that isn't an ideal situation but it

00:10:24,240 --> 00:10:27,920
still gets us

00:10:25,200 --> 00:10:28,959
a lot closer to what we want rel to look

00:10:27,920 --> 00:10:32,320
like

00:10:28,959 --> 00:10:32,640
and it still allows us to get a feel for

00:10:32,320 --> 00:10:34,880
what

00:10:32,640 --> 00:10:38,240
what content and what uh feature set is

00:10:34,880 --> 00:10:38,240
going to be available to us

00:10:38,640 --> 00:10:41,680
down the road there will be uh we'll be

00:10:40,640 --> 00:10:44,800
able to

00:10:41,680 --> 00:10:46,880
break that and

00:10:44,800 --> 00:10:48,720
move into a separated version where we

00:10:46,880 --> 00:10:52,000
can have

00:10:48,720 --> 00:10:53,600
individual packages uh make

00:10:52,000 --> 00:10:55,440
real specific changes that are

00:10:53,600 --> 00:10:58,480
independent from fedora but that won't

00:10:55,440 --> 00:10:58,480
happen in eln

00:10:58,640 --> 00:11:02,079
where that will happen i am proud to

00:11:01,120 --> 00:11:05,120
announce

00:11:02,079 --> 00:11:07,760
is in centos stream

00:11:05,120 --> 00:11:08,959
starting with red hat enterprise linux 9

00:11:07,760 --> 00:11:12,320
and eln

00:11:08,959 --> 00:11:15,040
we are going to be building a new

00:11:12,320 --> 00:11:16,399
form of centos centos stream today we

00:11:15,040 --> 00:11:18,320
have a centos stream that allows

00:11:16,399 --> 00:11:21,040
uh public the public to contribute

00:11:18,320 --> 00:11:23,519
contribute to

00:11:21,040 --> 00:11:24,640
uh the next why stream release we call

00:11:23,519 --> 00:11:28,240
uh that would be you know

00:11:24,640 --> 00:11:31,680
x dot y so rel 8.3

00:11:28,240 --> 00:11:33,920
8.4 8.5 the those contributions go

00:11:31,680 --> 00:11:36,160
through centos stream today

00:11:33,920 --> 00:11:37,360
starting with real nine the next

00:11:36,160 --> 00:11:39,920
evolution of eln

00:11:37,360 --> 00:11:41,120
will be a public disk repository for

00:11:39,920 --> 00:11:45,360
development towards

00:11:41,120 --> 00:11:48,320
the beta of rel so all rel features

00:11:45,360 --> 00:11:49,920
not including things that must be kept

00:11:48,320 --> 00:11:53,839
secret for uh

00:11:49,920 --> 00:11:57,120
proprietary license agreements or cve

00:11:53,839 --> 00:11:59,680
cves all of these things will go through

00:11:57,120 --> 00:12:01,200
and be committed to centos stream first

00:11:59,680 --> 00:12:02,720
and so for those packagers who didn't

00:12:01,200 --> 00:12:04,560
want eln

00:12:02,720 --> 00:12:06,480
uh want real specific changes in their

00:12:04,560 --> 00:12:08,800
rawhide packages

00:12:06,480 --> 00:12:11,360
they can wait for this phase and they

00:12:08,800 --> 00:12:13,600
can put those rel specific changes into

00:12:11,360 --> 00:12:16,240
the centos stream

00:12:13,600 --> 00:12:17,440
this will be uh constantly rebuilding

00:12:16,240 --> 00:12:20,240
and composing

00:12:17,440 --> 00:12:21,600
uh those composers will be publicly

00:12:20,240 --> 00:12:24,079
available and usable

00:12:21,600 --> 00:12:25,680
and we'll be working as hard as we can

00:12:24,079 --> 00:12:28,639
to get as many partners

00:12:25,680 --> 00:12:30,160
users software developers working with

00:12:28,639 --> 00:12:33,200
those so that when red hat enterprise

00:12:30,160 --> 00:12:35,240
linux 9 eventually launches

00:12:33,200 --> 00:12:36,399
they'll have those they'll have

00:12:35,240 --> 00:12:38,639
certifications

00:12:36,399 --> 00:12:40,160
all taken care of and they'll an early

00:12:38,639 --> 00:12:41,200
view of what it is that they'll be able

00:12:40,160 --> 00:12:43,600
to do

00:12:41,200 --> 00:12:45,440
or if they can't if they can't yet do it

00:12:43,600 --> 00:12:46,480
they'll have a place to contribute

00:12:45,440 --> 00:12:49,360
those features that they're going to

00:12:46,480 --> 00:12:49,360
want to depend on

00:12:51,200 --> 00:12:58,800
ultimately the point is this all

00:12:54,639 --> 00:13:01,839
leads to red hat enterprise linux

00:12:58,800 --> 00:13:04,959
a long-term stable platform

00:13:01,839 --> 00:13:07,680
run for the next 10 years

00:13:04,959 --> 00:13:08,560
supporting certified platforms hardware

00:13:07,680 --> 00:13:12,079
software

00:13:08,560 --> 00:13:13,839
applications and for the very first time

00:13:12,079 --> 00:13:15,519
we are going to be doing the majority of

00:13:13,839 --> 00:13:18,880
that process

00:13:15,519 --> 00:13:21,040
publicly in the open with with accepting

00:13:18,880 --> 00:13:24,720
comment and contribution

00:13:21,040 --> 00:13:28,880
from anyone uh the first

00:13:24,720 --> 00:13:28,880
i saw a question in the chat uh from uh

00:13:29,440 --> 00:13:33,839
let's see uh from uh michael ko

00:13:31,920 --> 00:13:36,000
connectchni

00:13:33,839 --> 00:13:38,480
apologize if i've mangled that uh will

00:13:36,000 --> 00:13:40,880
sent to us stream be created from fedora

00:13:38,480 --> 00:13:42,480
or will it be fedora tyrell to centos

00:13:40,880 --> 00:13:44,720
stream

00:13:42,480 --> 00:13:46,399
uh the answer is uh right now we're

00:13:44,720 --> 00:13:46,959
planning for it to actually come from

00:13:46,399 --> 00:13:49,279
eln

00:13:46,959 --> 00:13:50,880
we're going to we're going to fork um

00:13:49,279 --> 00:13:51,760
we're going to fork fedora at a certain

00:13:50,880 --> 00:13:54,880
point

00:13:51,760 --> 00:13:56,079
and then and that'll be become centos

00:13:54,880 --> 00:13:56,800
stream so it's actually it really is

00:13:56,079 --> 00:13:58,560
going to be a

00:13:56,800 --> 00:14:03,839
progression towards rel rather than

00:13:58,560 --> 00:14:03,839
building necessarily in rel and down um

00:14:04,000 --> 00:14:07,600
the actual logistics of that are a

00:14:05,839 --> 00:14:09,120
little funny because rel will also be

00:14:07,600 --> 00:14:10,800
forking from fedora for

00:14:09,120 --> 00:14:12,160
and they'll be keeping in parallel for a

00:14:10,800 --> 00:14:16,160
while but

00:14:12,160 --> 00:14:19,040
uh that's realistically uh yeah it's

00:14:16,160 --> 00:14:19,040
forking from fedora

00:14:19,279 --> 00:14:23,440
and let's see will composers for stream

00:14:22,160 --> 00:14:24,399
nine be published since the beginning as

00:14:23,440 --> 00:14:27,360
well yes

00:14:24,399 --> 00:14:28,800
yes they will uh they're gonna be all of

00:14:27,360 --> 00:14:30,240
them all the nightlys or

00:14:28,800 --> 00:14:32,240
periodic composers that we do will be

00:14:30,240 --> 00:14:34,720
released uh

00:14:32,240 --> 00:14:36,079
uh as they come as they come out and you

00:14:34,720 --> 00:14:39,279
know assuming they aren't broken

00:14:36,079 --> 00:14:42,720
but we're trying very hard uh

00:14:39,279 --> 00:14:44,720
pierre pierre pingu

00:14:42,720 --> 00:14:46,480
uh did you build that castle no my

00:14:44,720 --> 00:14:47,360
daughter did uh my two daughters

00:14:46,480 --> 00:14:50,720
actually built that

00:14:47,360 --> 00:14:52,959
thank you um let's see did i

00:14:50,720 --> 00:14:52,959
uh

00:14:56,320 --> 00:15:00,240
all right some offers to help which is

00:14:59,040 --> 00:15:02,880
always great

00:15:00,240 --> 00:15:03,920
uh let's see yeah the uh so there was a

00:15:02,880 --> 00:15:08,560
question

00:15:03,920 --> 00:15:10,000
is the or to the equivalent of uh

00:15:08,560 --> 00:15:12,000
how would this mean we have a regular

00:15:10,000 --> 00:15:13,120
cadence for rail releases yes at uh

00:15:12,000 --> 00:15:15,040
summit this year

00:15:13,120 --> 00:15:16,639
uh there was a formal announcement that

00:15:15,040 --> 00:15:17,920
red hat enterprise linux will be

00:15:16,639 --> 00:15:20,639
releasing from now on

00:15:17,920 --> 00:15:21,279
every three years a major release and

00:15:20,639 --> 00:15:23,040
every six

00:15:21,279 --> 00:15:25,040
approximately every six months will have

00:15:23,040 --> 00:15:26,480
a minor release so

00:15:25,040 --> 00:15:27,920
yeah so this is a this is part of how

00:15:26,480 --> 00:15:30,079
we're going to accommodate accomplish

00:15:27,920 --> 00:15:30,079
that

00:15:30,720 --> 00:15:36,240
so uh i look forward to the to

00:15:34,160 --> 00:15:37,440
any and all help and contribution that

00:15:36,240 --> 00:15:40,000
you can provide because

00:15:37,440 --> 00:15:41,839
it will make life easier so we'll so

00:15:40,000 --> 00:15:42,880
with this eln thing will that allow the

00:15:41,839 --> 00:15:44,399
community to contribute

00:15:42,880 --> 00:15:46,079
to rel feature and stabilization

00:15:44,399 --> 00:15:47,839
development uh

00:15:46,079 --> 00:15:49,279
yes and no it will allow you to

00:15:47,839 --> 00:15:51,920
contribute to uh

00:15:49,279 --> 00:15:52,480
feature to features uh and certainly if

00:15:51,920 --> 00:15:54,959
you

00:15:52,480 --> 00:15:56,959
contribute a bug fix to a bug fix i

00:15:54,959 --> 00:15:59,680
imagine we're going to take it

00:15:56,959 --> 00:16:01,040
um there will be a point after which uh

00:15:59,680 --> 00:16:03,600
we will

00:16:01,040 --> 00:16:04,079
close contribution uh to send a stream

00:16:03,600 --> 00:16:06,639
for

00:16:04,079 --> 00:16:08,240
9.0 and then and then subsequent pull

00:16:06,639 --> 00:16:10,720
requests will be headed for

00:16:08,240 --> 00:16:11,600
9.1 at that point we'll be going through

00:16:10,720 --> 00:16:14,160
the necessary

00:16:11,600 --> 00:16:15,279
uh stabilization to meet enterprise

00:16:14,160 --> 00:16:16,880
enterprise uh

00:16:15,279 --> 00:16:24,160
certifications and whatnot and that'll

00:16:16,880 --> 00:16:24,160
happen internally um let's see

00:16:24,959 --> 00:16:31,279
yes uh covet did play havoc with our

00:16:28,480 --> 00:16:32,320
plans we were of course you know that

00:16:31,279 --> 00:16:33,920
that's what we get for uh

00:16:32,320 --> 00:16:35,600
for saying we're going to do this on a

00:16:33,920 --> 00:16:39,360
schedule is that the world

00:16:35,600 --> 00:16:40,639
says ha but uh yeah we are really trying

00:16:39,360 --> 00:16:44,320
to accomplish this

00:16:40,639 --> 00:16:46,360
um we should get

00:16:44,320 --> 00:16:48,000
we should get that info on

00:16:46,360 --> 00:16:51,440
access.redhat.com i'm not

00:16:48,000 --> 00:16:54,240
uh entirely sure what that means uh

00:16:51,440 --> 00:16:55,920
what that link goes to so uh david

00:16:54,240 --> 00:16:56,880
duncan are there established community

00:16:55,920 --> 00:17:00,000
meetings now

00:16:56,880 --> 00:17:01,519
not yet um which

00:17:00,000 --> 00:17:02,880
we're trying to ramp it up we're still

00:17:01,519 --> 00:17:03,440
uh we're still in a point where we were

00:17:02,880 --> 00:17:05,839
trying to get

00:17:03,440 --> 00:17:08,079
eln to work uh we do have some we do

00:17:05,839 --> 00:17:10,319
have composers that are functional now

00:17:08,079 --> 00:17:11,199
but for a variety of reasons including

00:17:10,319 --> 00:17:14,000
the mass rebuild

00:17:11,199 --> 00:17:14,559
uh things are still in a little bit of a

00:17:14,000 --> 00:17:16,160
shaky

00:17:14,559 --> 00:17:17,760
state as soon as that's done hopefully

00:17:16,160 --> 00:17:18,400
in the next week we're going to be

00:17:17,760 --> 00:17:22,640
trying to

00:17:18,400 --> 00:17:24,880
open up much wider contribution

00:17:22,640 --> 00:17:25,760
uh can you clarify what you said in the

00:17:24,880 --> 00:17:27,839
talk about

00:17:25,760 --> 00:17:29,039
an eln diskette branch i got a bit

00:17:27,839 --> 00:17:31,440
confused

00:17:29,039 --> 00:17:33,840
so there isn't one that's the short

00:17:31,440 --> 00:17:35,840
answer uh there was

00:17:33,840 --> 00:17:37,840
when we first uh pitched this uh this

00:17:35,840 --> 00:17:38,320
process a lot of people wanted us to

00:17:37,840 --> 00:17:40,240
make

00:17:38,320 --> 00:17:42,080
eln its own separate branch so people

00:17:40,240 --> 00:17:43,600
could you know instead of having to put

00:17:42,080 --> 00:17:45,600
conditionals in their code they could

00:17:43,600 --> 00:17:48,480
just commit to the eln branch

00:17:45,600 --> 00:17:49,440
but the fact of the matter is that that

00:17:48,480 --> 00:17:51,360
leads

00:17:49,440 --> 00:17:52,720
that that made it it makes it harder to

00:17:51,360 --> 00:17:54,480
maintain and it means that the people

00:17:52,720 --> 00:17:56,000
who aren't directly interested in

00:17:54,480 --> 00:17:59,200
enterprise linux will just

00:17:56,000 --> 00:18:00,640
ignore it and that

00:17:59,200 --> 00:18:02,160
wasn't something we wanted we wanted to

00:18:00,640 --> 00:18:02,960
make sure that we were always building

00:18:02,160 --> 00:18:05,360
from the latest

00:18:02,960 --> 00:18:08,080
and so we needed to work uh find our way

00:18:05,360 --> 00:18:10,000
to work with rawhide and so

00:18:08,080 --> 00:18:11,120
we did we opted not to create a separate

00:18:10,000 --> 00:18:12,320
branch we're building everything from

00:18:11,120 --> 00:18:13,919
the rawhide commit and

00:18:12,320 --> 00:18:15,440
in those cases where we need something

00:18:13,919 --> 00:18:17,600
to be different for rel

00:18:15,440 --> 00:18:18,640
and the maintainer is not willing to do

00:18:17,600 --> 00:18:20,480
that

00:18:18,640 --> 00:18:21,840
we're just going to defer that that

00:18:20,480 --> 00:18:24,720
those changes until

00:18:21,840 --> 00:18:25,679
centos stream opens which is not ideal

00:18:24,720 --> 00:18:28,320
but

00:18:25,679 --> 00:18:30,640
uh it is a good compromise for everyone

00:18:28,320 --> 00:18:30,640
i think

00:18:30,720 --> 00:18:34,000
um let's see

00:18:32,480 --> 00:18:36,559
[Music]

00:18:34,000 --> 00:18:38,960
can you elin is built from rawhide

00:18:36,559 --> 00:18:41,360
branch not you okay yes carl thank you

00:18:38,960 --> 00:18:43,679
uh what is the scope the el of the eln

00:18:41,360 --> 00:18:46,960
sig in terms of deliverables

00:18:43,679 --> 00:18:49,840
uh realistically

00:18:46,960 --> 00:18:49,840
our scope is

00:18:50,960 --> 00:18:56,000
okay that's a good that is actually a

00:18:52,400 --> 00:18:59,520
trickier question to answer than uh

00:18:56,000 --> 00:19:01,200
expected um at its core

00:18:59,520 --> 00:19:03,200
our goal is to make sure that we can

00:19:01,200 --> 00:19:04,400
always start sent to us stream basically

00:19:03,200 --> 00:19:06,240
at any moment

00:19:04,400 --> 00:19:07,440
so we can so at any time we could

00:19:06,240 --> 00:19:10,320
arbitrarily just

00:19:07,440 --> 00:19:10,720
branch off and say ah rel n plus one is

00:19:10,320 --> 00:19:12,240
now

00:19:10,720 --> 00:19:14,799
is now uh getting started over here and

00:19:12,240 --> 00:19:16,080
sent to us stream so it's meant to be a

00:19:14,799 --> 00:19:19,520
continuously

00:19:16,080 --> 00:19:21,919
bootstrapped os rather than rather than

00:19:19,520 --> 00:19:23,280
every couple of years doing a big rel

00:19:21,919 --> 00:19:28,400
bootstrap

00:19:23,280 --> 00:19:28,400
to start everything over again um

00:19:28,880 --> 00:19:34,400
let's see and was this influenced by how

00:19:32,320 --> 00:19:36,840
ocp allowed folks to test nightly builds

00:19:34,400 --> 00:19:39,120
before release

00:19:36,840 --> 00:19:41,520
uh as that is actually the

00:19:39,120 --> 00:19:44,559
first i've heard of that no but i'm glad

00:19:41,520 --> 00:19:44,559
that they're doing this too

00:19:44,720 --> 00:19:48,720
uh did the did the eln have rel or

00:19:47,280 --> 00:19:51,760
fedora branding

00:19:48,720 --> 00:19:53,679
um it's fedora it's it is fedora branded

00:19:51,760 --> 00:19:56,400
is under the fedora umbrella it will

00:19:53,679 --> 00:19:57,520
it will have it will be fedora it'll

00:19:56,400 --> 00:20:00,320
just be fedora

00:19:57,520 --> 00:20:02,320
with uh with an enterprise linux flavor

00:20:00,320 --> 00:20:05,600
to it

00:20:02,320 --> 00:20:06,960
uh and yes as matthew miller says

00:20:05,600 --> 00:20:09,919
we want to make sure that we keep red

00:20:06,960 --> 00:20:13,280
hat engineering investment in fedora

00:20:09,919 --> 00:20:13,840
because the more that fedora has moved

00:20:13,280 --> 00:20:15,760
towards

00:20:13,840 --> 00:20:17,600
uh being a very desktop focus and a very

00:20:15,760 --> 00:20:19,039
successful desktop-focused linux

00:20:17,600 --> 00:20:20,400
distribution

00:20:19,039 --> 00:20:21,600
the more there has been question

00:20:20,400 --> 00:20:23,039
internally as to whether or not it's

00:20:21,600 --> 00:20:26,240
particularly useful as a

00:20:23,039 --> 00:20:28,880
place to develop rel and so by

00:20:26,240 --> 00:20:29,440
building eln and having us a very clear

00:20:28,880 --> 00:20:32,720
spot

00:20:29,440 --> 00:20:34,480
for that for that uh effort to go helps

00:20:32,720 --> 00:20:35,919
us make sure that we

00:20:34,480 --> 00:20:38,320
keep the people who are being paid to

00:20:35,919 --> 00:20:40,400
work on uh on rel

00:20:38,320 --> 00:20:42,320
to do their work in fedora so that we

00:20:40,400 --> 00:20:45,440
get that community contribution and we

00:20:42,320 --> 00:20:45,440
get that community feedback

00:20:45,679 --> 00:20:50,960
all right so if dusty says so if i see

00:20:48,640 --> 00:20:52,000
an eln build in koji it's not built from

00:20:50,960 --> 00:20:53,280
an eln branch

00:20:52,000 --> 00:20:55,039
it's built against a different build

00:20:53,280 --> 00:20:55,440
route with different macros yes exactly

00:20:55,039 --> 00:20:57,440
right

00:20:55,440 --> 00:20:59,360
it's always coming from the rawhide

00:20:57,440 --> 00:21:00,960
branch uh it will be coming from the

00:20:59,360 --> 00:21:02,720
exact same commit that the most recent

00:21:00,960 --> 00:21:07,280
successful rawhide commit

00:21:02,720 --> 00:21:10,480
build built from um

00:21:07,280 --> 00:21:14,159
and yep use the federal brand

00:21:10,480 --> 00:21:16,400
fedora enterprise linux next yes uh

00:21:14,159 --> 00:21:18,080
there's a there's a story behind the uh

00:21:16,400 --> 00:21:19,840
behind the acronym eln and i'll tell it

00:21:18,080 --> 00:21:20,480
to anyone who wants to hear over uh you

00:21:19,840 --> 00:21:22,559
know

00:21:20,480 --> 00:21:24,559
privately but uh we'll talk about it

00:21:22,559 --> 00:21:27,120
later how to join the sig

00:21:24,559 --> 00:21:29,360
uh look for information next week i hope

00:21:27,120 --> 00:21:30,960
uh i'm going to put out a wider call and

00:21:29,360 --> 00:21:31,440
try to and try to start setting up a

00:21:30,960 --> 00:21:35,120
regular

00:21:31,440 --> 00:21:37,840
uh probably bi-weekly meeting

00:21:35,120 --> 00:21:39,280
uh enterprise liberation front uh i feel

00:21:37,840 --> 00:21:40,080
like there's a monty python skit coming

00:21:39,280 --> 00:21:45,840
on

00:21:40,080 --> 00:21:47,360
but uh i will restrain myself

00:21:45,840 --> 00:21:49,120
yes there also may have been some eyes

00:21:47,360 --> 00:21:52,320
raised over butterfast but that

00:21:49,120 --> 00:21:54,400
really came later uh okay did

00:21:52,320 --> 00:21:56,159
earlier rel branch from fedora stable or

00:21:54,400 --> 00:21:58,080
rawhide is that different now

00:21:56,159 --> 00:21:59,600
with branching from rawhide since no

00:21:58,080 --> 00:22:03,360
separate branch

00:21:59,600 --> 00:22:03,360
um well actually it's it

00:22:04,960 --> 00:22:08,799
centos stream is actually is probably

00:22:07,039 --> 00:22:12,720
going to branch from

00:22:08,799 --> 00:22:16,400
uh fedora 34 that's pretty

00:22:12,720 --> 00:22:19,840
pretty obvious now um but

00:22:16,400 --> 00:22:21,600
it's eln will will stay on

00:22:19,840 --> 00:22:22,960
it will stay on rawhide but it will be

00:22:21,600 --> 00:22:24,960
uh but we will also be running some

00:22:22,960 --> 00:22:26,400
tests against the fedor 34 branch but

00:22:24,960 --> 00:22:27,360
general traditionally rel has always

00:22:26,400 --> 00:22:29,120
branched from

00:22:27,360 --> 00:22:30,320
the stable release of a fedora uh

00:22:29,120 --> 00:22:31,120
usually we've done an alpha on one

00:22:30,320 --> 00:22:33,120
release

00:22:31,120 --> 00:22:34,640
then rebased to the uh to the ga of the

00:22:33,120 --> 00:22:37,919
next release before we do

00:22:34,640 --> 00:22:41,120
to start stabilization for beta

00:22:37,919 --> 00:22:42,320
um but it

00:22:41,120 --> 00:22:43,760
i don't think it's going to have a huge

00:22:42,320 --> 00:22:45,200
impact because for the truth of the

00:22:43,760 --> 00:22:47,200
matter is that

00:22:45,200 --> 00:22:48,720
very little lands and very little

00:22:47,200 --> 00:22:50,080
happens in rawhide

00:22:48,720 --> 00:22:52,080
during the stabilization rants of a

00:22:50,080 --> 00:22:53,039
stable fedora some people get early

00:22:52,080 --> 00:22:55,039
features in

00:22:53,039 --> 00:22:56,320
and we'll be monitoring for that uh but

00:22:55,039 --> 00:22:59,520
realistically

00:22:56,320 --> 00:23:02,640
i don't think it's gonna change much

00:22:59,520 --> 00:23:03,919
and let's see did okay uh

00:23:02,640 --> 00:23:06,080
it's a great server too thanks i'm glad

00:23:03,919 --> 00:23:07,520
you hear that how different are the eln

00:23:06,080 --> 00:23:08,640
and fedora build systems will they

00:23:07,520 --> 00:23:10,159
converge over time

00:23:08,640 --> 00:23:12,159
well they're identical because we are

00:23:10,159 --> 00:23:14,159
using koji um

00:23:12,159 --> 00:23:16,720
the only the difference between them is

00:23:14,159 --> 00:23:19,440
entirely in the build root contents

00:23:16,720 --> 00:23:20,559
uh we prefer you know if there's an eln

00:23:19,440 --> 00:23:22,640
equivalent build we

00:23:20,559 --> 00:23:24,240
the builder will prefer that build for

00:23:22,640 --> 00:23:26,480
for the dependencies

00:23:24,240 --> 00:23:27,679
um it has some different macros set so

00:23:26,480 --> 00:23:30,400
that uh you can

00:23:27,679 --> 00:23:30,960
do if rel and it'll build like it was

00:23:30,400 --> 00:23:32,240
rel but

00:23:30,960 --> 00:23:34,720
for the most part they're pretty

00:23:32,240 --> 00:23:36,000
identical so and they are using the same

00:23:34,720 --> 00:23:37,919
exact hardware

00:23:36,000 --> 00:23:39,919
we just build with a lower priority so

00:23:37,919 --> 00:23:43,760
we don't cover anybody's

00:23:39,919 --> 00:23:47,520
important build with our rebuild

00:23:43,760 --> 00:23:49,600
uh people were asking if butterfest in

00:23:47,520 --> 00:23:51,840
33 meant related get it soon i am not

00:23:49,600 --> 00:23:55,440
answering that

00:23:51,840 --> 00:23:55,760
not not even a little rel 10 has to come

00:23:55,440 --> 00:23:57,440
with

00:23:55,760 --> 00:24:00,320
from somewhere so eln will go on and on

00:23:57,440 --> 00:24:00,320
yes thank you steve

00:24:02,840 --> 00:24:07,919
um are stable select drawing boards

00:24:05,679 --> 00:24:09,520
yeah okay uh do you think eln will be

00:24:07,919 --> 00:24:11,440
consumable for users

00:24:09,520 --> 00:24:13,120
like real fedora server users migrating

00:24:11,440 --> 00:24:15,520
to it or more like rawhide in number of

00:24:13,120 --> 00:24:15,520
users

00:24:16,840 --> 00:24:21,760
um

00:24:18,559 --> 00:24:23,440
is absolutely and unequivocally not

00:24:21,760 --> 00:24:26,400
intended for production use

00:24:23,440 --> 00:24:26,880
please don't use it on your servers uh

00:24:26,400 --> 00:24:28,880
it is

00:24:26,880 --> 00:24:30,240
it is intended entirely to be a place

00:24:28,880 --> 00:24:32,000
where we try out

00:24:30,240 --> 00:24:33,600
a new functionality where we start to

00:24:32,000 --> 00:24:35,360
help where we have partners working to

00:24:33,600 --> 00:24:36,400
land hardware support and things like

00:24:35,360 --> 00:24:39,840
that

00:24:36,400 --> 00:24:40,960
uh don't use it for any don't use it for

00:24:39,840 --> 00:24:41,919
anything you can afford to lose you

00:24:40,960 --> 00:24:44,159
can't afford to lose

00:24:41,919 --> 00:24:46,320
please i am not going to be held

00:24:44,159 --> 00:24:47,760
responsible for that

00:24:46,320 --> 00:24:49,039
how are you building the eln builds with

00:24:47,760 --> 00:24:50,400
different different macros since they

00:24:49,039 --> 00:24:51,200
are not defined in rawhide diskette

00:24:50,400 --> 00:24:54,320
branch

00:24:51,200 --> 00:24:55,200
uh so right now i'm surprised to hear

00:24:54,320 --> 00:24:56,400
that to get that

00:24:55,200 --> 00:24:59,039
that question from mohan because you

00:24:56,400 --> 00:25:01,360
helped me set it up but uh

00:24:59,039 --> 00:25:02,480
the answer is uh we are currently we're

00:25:01,360 --> 00:25:05,840
setting them in

00:25:02,480 --> 00:25:07,679
um in in the koji build tag

00:25:05,840 --> 00:25:09,440
or build target uh you can specify

00:25:07,679 --> 00:25:11,600
certain options and we're overriding

00:25:09,440 --> 00:25:13,279
uh the the ones that are coming from uh

00:25:11,600 --> 00:25:15,039
red hat rpm

00:25:13,279 --> 00:25:16,400
macros or i've had rpm config whatever

00:25:15,039 --> 00:25:18,559
it's called

00:25:16,400 --> 00:25:19,679
uh however we are actually planning in

00:25:18,559 --> 00:25:21,360
uh the next

00:25:19,679 --> 00:25:22,960
in the next week or so we're going to be

00:25:21,360 --> 00:25:26,559
changing uh the

00:25:22,960 --> 00:25:29,120
red hat rpm config package so that

00:25:26,559 --> 00:25:30,320
we'll bootstrap it with the uh with the

00:25:29,120 --> 00:25:33,200
eln

00:25:30,320 --> 00:25:34,720
tag target uh overrides and then after

00:25:33,200 --> 00:25:36,640
that it'll be able to check its own

00:25:34,720 --> 00:25:37,840
build route to see that okay we're in

00:25:36,640 --> 00:25:41,440
eln so use these

00:25:37,840 --> 00:25:43,840
mac set these macros it

00:25:41,440 --> 00:25:46,400
that's a bit low level for this talk i

00:25:43,840 --> 00:25:48,640
probably should have just said that

00:25:46,400 --> 00:25:50,080
so after sent to us stream we'll switch

00:25:48,640 --> 00:25:50,799
to minor do we expect that the build

00:25:50,080 --> 00:25:54,480
will go

00:25:50,799 --> 00:25:57,279
patch sent to us stream rail miner yes

00:25:54,480 --> 00:25:58,400
yeah just uh oh just like it does in

00:25:57,279 --> 00:26:01,679
reliance into us

00:25:58,400 --> 00:26:01,679
uh stream for rel8 now

00:26:03,039 --> 00:26:08,480
uh could centos stream be built in

00:26:05,360 --> 00:26:08,480
fedora koji as well

00:26:08,840 --> 00:26:11,840
uh

00:26:12,080 --> 00:26:16,799
i would probably say that from a

00:26:14,960 --> 00:26:20,480
technical perspective it could

00:26:16,799 --> 00:26:20,480
but i think that's

00:26:21,120 --> 00:26:24,640
probably not going to happen in the

00:26:22,559 --> 00:26:26,559
immediate future just because

00:26:24,640 --> 00:26:27,679
centos has its own build system set up

00:26:26,559 --> 00:26:29,600
and there's

00:26:27,679 --> 00:26:30,720
probably not a good financial reason to

00:26:29,600 --> 00:26:33,279
merge them at this point

00:26:30,720 --> 00:26:35,039
but i don't think that it's technically

00:26:33,279 --> 00:26:37,679
impossible

00:26:35,039 --> 00:26:40,400
uh steven smoojin says we're moving the

00:26:37,679 --> 00:26:41,760
fedora builders to eln next month

00:26:40,400 --> 00:26:44,000
that's okay we can afford to lose those

00:26:41,760 --> 00:26:44,000
right

00:26:46,559 --> 00:26:49,919
then uses fedora rawhide snapchat

00:26:48,240 --> 00:26:51,039
kernels that is enough not to not do

00:26:49,919 --> 00:26:55,360
that

00:26:51,039 --> 00:26:55,360
uh all right

00:26:56,640 --> 00:27:04,320
all right and i'm not okay could we

00:26:59,679 --> 00:27:04,320
branch eln2.elx in fedora district

00:27:04,840 --> 00:27:09,120
instead

00:27:07,200 --> 00:27:12,080
i'm not sure what that what uh you mean

00:27:09,120 --> 00:27:14,799
by that question neil sorry

00:27:12,080 --> 00:27:15,200
uh i'll move on to the next one and then

00:27:14,799 --> 00:27:17,360
if you

00:27:15,200 --> 00:27:18,880
put a clarification i'll come back to it

00:27:17,360 --> 00:27:22,559
what will be the cadence of centos

00:27:18,880 --> 00:27:22,559
stream when it switched to real minor

00:27:26,399 --> 00:27:30,240
i'm not sure that's a question for me

00:27:27,919 --> 00:27:30,559
anyway uh let's talk more about that

00:27:30,240 --> 00:27:31,760
here

00:27:30,559 --> 00:27:33,679
plans to keep stream eight better

00:27:31,760 --> 00:27:35,600
aligned to the latest eight beta

00:27:33,679 --> 00:27:38,080
is that a question james cassell i'm not

00:27:35,600 --> 00:27:38,080
sure i

00:27:38,960 --> 00:27:41,200
uh

00:27:42,320 --> 00:27:47,039
i'm i'm not i i'm not partic closely

00:27:45,520 --> 00:27:49,039
involved with the centos stream 8

00:27:47,039 --> 00:27:51,279
folks so i don't really know what to say

00:27:49,039 --> 00:27:51,279
there

00:27:51,440 --> 00:27:55,039
uh post eln to rel stabilization and

00:27:54,320 --> 00:27:57,919
centos

00:27:55,039 --> 00:27:57,919
stream i mean

00:27:59,679 --> 00:28:03,120
oh i mean there's lots of things we

00:28:02,159 --> 00:28:05,279
could do

00:28:03,120 --> 00:28:06,640
i'm not sure that it makes sense to do

00:28:05,279 --> 00:28:09,520
that uh

00:28:06,640 --> 00:28:11,279
at this point we are trying to to work

00:28:09,520 --> 00:28:13,200
on some tools to make the uh it make it

00:28:11,279 --> 00:28:14,960
easier to operate with uh

00:28:13,200 --> 00:28:16,880
the three different disc kits uh the one

00:28:14,960 --> 00:28:18,559
for fedora the one for centos and the

00:28:16,880 --> 00:28:20,720
internal one for rel

00:28:18,559 --> 00:28:22,960
but uh i don't think there is any

00:28:20,720 --> 00:28:26,640
particular need to have

00:28:22,960 --> 00:28:29,200
or as of right now i'm not aware of any

00:28:26,640 --> 00:28:31,440
uh hard plans to merge the center the

00:28:29,200 --> 00:28:33,120
diskettes

00:28:31,440 --> 00:28:34,559
uh i know that's been talked about but i

00:28:33,120 --> 00:28:38,720
don't know that it's happening

00:28:34,559 --> 00:28:41,520
um yeah that's right as a stream doesn't

00:28:38,720 --> 00:28:43,360
have a cadence it's a stream

00:28:41,520 --> 00:28:45,279
you can contributions can go into stream

00:28:43,360 --> 00:28:47,600
at any time it is never closed or

00:28:45,279 --> 00:28:48,799
and never frozen however it is branched

00:28:47,600 --> 00:28:50,559
from and then

00:28:48,799 --> 00:28:51,840
well internal stabilization happens and

00:28:50,559 --> 00:28:54,640
then they merge then when that's

00:28:51,840 --> 00:28:58,559
released it merges back into stream and

00:28:54,640 --> 00:28:59,840
carries on um so neil basically branch

00:28:58,559 --> 00:29:01,840
it there so that centos stream would

00:28:59,840 --> 00:29:03,440
operate in fedor koji

00:29:01,840 --> 00:29:05,200
then and then apple and centos would be

00:29:03,440 --> 00:29:07,039
in one place

00:29:05,200 --> 00:29:08,320
it is worth discussing with the centos

00:29:07,039 --> 00:29:11,200
stream folks um

00:29:08,320 --> 00:29:12,240
but it's not currently a it's not

00:29:11,200 --> 00:29:14,640
currently in the plan

00:29:12,240 --> 00:29:15,679
because it's not a blocker to doing any

00:29:14,640 --> 00:29:17,200
of the things that we've talked about

00:29:15,679 --> 00:29:20,880
today so

00:29:17,200 --> 00:29:22,399
and i think i may be over my time so

00:29:20,880 --> 00:29:27,360
i want to thank everyone who came and

00:29:22,399 --> 00:29:27,360

YouTube URL: https://www.youtube.com/watch?v=texULHMzI8k


