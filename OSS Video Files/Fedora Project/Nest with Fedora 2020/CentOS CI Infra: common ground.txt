Title: CentOS CI Infra: common ground
Publication date: 2020-09-01
Playlist: Nest with Fedora 2020
Description: 
	This talk will cover CentOS CI: the tools we are using, the resources we provide, our on-going efforts, future plans and how it all ties together.

Presented at Nest With Fedora 2020.
Captions: 
	00:00:01,920 --> 00:00:08,800
hey uh hello my name is david carwin and

00:00:05,520 --> 00:00:11,360
uh i created this talk alongside vippl

00:00:08,800 --> 00:00:13,599
um we're both members of red hat

00:00:11,360 --> 00:00:16,400
community platform engineering team

00:00:13,599 --> 00:00:17,359
and we're both responsible for the the

00:00:16,400 --> 00:00:20,960
centos

00:00:17,359 --> 00:00:22,480
ci infrastructure so

00:00:20,960 --> 00:00:24,560
just a quick overview of what we're

00:00:22,480 --> 00:00:26,480
going to talk about in this talk uh so

00:00:24,560 --> 00:00:27,680
like i said we'll give a brief overview

00:00:26,480 --> 00:00:29,599
and we'll talk about

00:00:27,680 --> 00:00:30,880
um some of the service that services

00:00:29,599 --> 00:00:34,480
that we provide so we have

00:00:30,880 --> 00:00:36,719
bare metal uh containers and vms

00:00:34,480 --> 00:00:38,000
uh and we give a little demo and

00:00:36,719 --> 00:00:39,600
hopefully there's gonna be lots of time

00:00:38,000 --> 00:00:40,879
at the end then to have questions and

00:00:39,600 --> 00:00:42,239
hopefully someone will actually have a

00:00:40,879 --> 00:00:45,600
question

00:00:42,239 --> 00:00:49,120
so let's go on so what is

00:00:45,600 --> 00:00:50,399
santa ci so the it's an initiative of

00:00:49,120 --> 00:00:55,199
the centos project

00:00:50,399 --> 00:00:58,719
and the idea is that we provide

00:00:55,199 --> 00:01:00,320
a place where projects that are

00:00:58,719 --> 00:01:01,920
about open source projects it's a place

00:01:00,320 --> 00:01:05,600
where open source projects

00:01:01,920 --> 00:01:08,159
can run their ci infrastructure

00:01:05,600 --> 00:01:09,119
and basically anybody can apply if

00:01:08,159 --> 00:01:11,920
they're um

00:01:09,119 --> 00:01:13,280
if they're open source and they somehow

00:01:11,920 --> 00:01:16,640
benefit fedora or sent

00:01:13,280 --> 00:01:20,080
us and yeah so that's that's what uh

00:01:16,640 --> 00:01:24,320
center ci is uh

00:01:20,080 --> 00:01:26,400
okay so i'll show on this slide like

00:01:24,320 --> 00:01:27,520
in the green it shows the the parts of

00:01:26,400 --> 00:01:29,920
the the ci

00:01:27,520 --> 00:01:30,640
uh story that we actually provide access

00:01:29,920 --> 00:01:33,200
to

00:01:30,640 --> 00:01:34,880
so we give you a workspace uh so it's

00:01:33,200 --> 00:01:38,400
basically open shift

00:01:34,880 --> 00:01:40,079
and like a project in openshift and

00:01:38,400 --> 00:01:41,600
optionally we can give you a jenkins

00:01:40,079 --> 00:01:43,840
instance um

00:01:41,600 --> 00:01:46,240
a persistent jenkins instance so you can

00:01:43,840 --> 00:01:48,320
basically you have a place where you can

00:01:46,240 --> 00:01:49,360
run a jenkins instance you can run your

00:01:48,320 --> 00:01:52,640
tests then

00:01:49,360 --> 00:01:54,560
on bare metal or vm or containers

00:01:52,640 --> 00:01:57,759
and then you have a place to store your

00:01:54,560 --> 00:01:59,439
artifacts temporarily just so you can

00:01:57,759 --> 00:02:01,360
check out your code and build an

00:01:59,439 --> 00:02:03,520
artifact and then run your tests against

00:02:01,360 --> 00:02:03,520
it

00:02:05,040 --> 00:02:11,280
so what's changing in center ci

00:02:08,399 --> 00:02:12,480
so we're hoping to stop support for at

00:02:11,280 --> 00:02:13,840
the moment we have like a central

00:02:12,480 --> 00:02:15,440
jenkins instance

00:02:13,840 --> 00:02:18,640
so we're hoping to turn that off pretty

00:02:15,440 --> 00:02:20,640
soon we also have an open shift 3.6

00:02:18,640 --> 00:02:22,480
cluster and we're hoping to

00:02:20,640 --> 00:02:23,680
switch that off hopefully by the end of

00:02:22,480 --> 00:02:25,760
the year but

00:02:23,680 --> 00:02:27,440
it may go on a little bit and what's

00:02:25,760 --> 00:02:30,800
replacing both of these then

00:02:27,440 --> 00:02:34,400
is it's a single uh openshift cluster

00:02:30,800 --> 00:02:36,400
and the whereas in the past

00:02:34,400 --> 00:02:39,120
on the central jenkins you had all of

00:02:36,400 --> 00:02:40,879
the projects were

00:02:39,120 --> 00:02:42,480
like if you had to make a configuration

00:02:40,879 --> 00:02:44,480
change it would require

00:02:42,480 --> 00:02:45,680
you opening a ticket with the and then

00:02:44,480 --> 00:02:46,720
one of us would have to go make the

00:02:45,680 --> 00:02:49,040
change for you

00:02:46,720 --> 00:02:50,800
whereas on the new openshift cluster

00:02:49,040 --> 00:02:51,280
you'll have your own namespace and like

00:02:50,800 --> 00:02:53,440
i said

00:02:51,280 --> 00:02:55,360
your own jenkins instance and you'll

00:02:53,440 --> 00:02:56,720
have admin access to it so you can make

00:02:55,360 --> 00:02:58,959
that change yourself

00:02:56,720 --> 00:03:00,400
so hopefully it'll free up a lot of our

00:02:58,959 --> 00:03:03,840
time where we don't have to answer

00:03:00,400 --> 00:03:07,200
a basic configuration change

00:03:03,840 --> 00:03:08,720
issues and you'll be able to fix it

00:03:07,200 --> 00:03:11,840
yourself in a self

00:03:08,720 --> 00:03:12,400
service manner and we're continuing now

00:03:11,840 --> 00:03:15,360
to

00:03:12,400 --> 00:03:17,680
to maintain the bare metal images the vm

00:03:15,360 --> 00:03:22,239
images and the container images that

00:03:17,680 --> 00:03:22,239
can be used then to run your tests on

00:03:22,319 --> 00:03:27,599
okay so yeah the openshift cluster yeah

00:03:25,360 --> 00:03:29,920
it's an openshift4 cluster we have three

00:03:27,599 --> 00:03:32,080
control and nine compute nodes

00:03:29,920 --> 00:03:33,519
uh you can see the the stats there below

00:03:32,080 --> 00:03:36,159
um

00:03:33,519 --> 00:03:37,280
you get a namespace like i said you get

00:03:36,159 --> 00:03:40,640
full admin access

00:03:37,280 --> 00:03:41,200
and we can provide uh read write money

00:03:40,640 --> 00:03:43,760
or

00:03:41,200 --> 00:03:46,159
we read one write once persistent

00:03:43,760 --> 00:03:49,920
storage via nfs

00:03:46,159 --> 00:03:51,680
you get an optional jenkins and we have

00:03:49,920 --> 00:03:54,319
things like a shared library so this is

00:03:51,680 --> 00:03:57,519
something we maintain on the team

00:03:54,319 --> 00:04:00,640
to make it easier to run python tests so

00:03:57,519 --> 00:04:03,040
you can integrate easily

00:04:00,640 --> 00:04:06,080
and run your python tests against one of

00:04:03,040 --> 00:04:06,080
the workloads that we offer

00:04:06,319 --> 00:04:12,799
okay so openshift was the containers

00:04:09,760 --> 00:04:14,640
so the system that we

00:04:12,799 --> 00:04:17,199
used to control the bare metal then is

00:04:14,640 --> 00:04:20,079
duffy so what is duffy it's um

00:04:17,199 --> 00:04:21,440
it's basically it's a rest api in the

00:04:20,079 --> 00:04:23,759
back end you have

00:04:21,440 --> 00:04:24,639
ansible playbooks that can communicate

00:04:23,759 --> 00:04:27,919
with the

00:04:24,639 --> 00:04:29,919
the bare metal nodes using ipmi and you

00:04:27,919 --> 00:04:32,880
can install then

00:04:29,919 --> 00:04:34,639
some of the various os versions using

00:04:32,880 --> 00:04:37,280
pixy

00:04:34,639 --> 00:04:39,040
we have a python client to make it easy

00:04:37,280 --> 00:04:41,680
to contact this

00:04:39,040 --> 00:04:43,280
this api and you can use this then to

00:04:41,680 --> 00:04:45,680
reserve the bare metal nodes

00:04:43,280 --> 00:04:46,720
so uh with multiple different

00:04:45,680 --> 00:04:48,080
architectures

00:04:46,720 --> 00:04:49,919
you can choose from whichever one you

00:04:48,080 --> 00:04:51,680
want and and you can

00:04:49,919 --> 00:04:53,680
you can hold it for a period of six

00:04:51,680 --> 00:04:54,800
hours so

00:04:53,680 --> 00:04:57,440
as you can see there's a couple of

00:04:54,800 --> 00:04:58,560
different versions of centos we offer

00:04:57,440 --> 00:05:00,800
and on the right hand side you can just

00:04:58,560 --> 00:05:02,479
see like a sample kind of json blob

00:05:00,800 --> 00:05:04,800
being returned by the api

00:05:02,479 --> 00:05:05,759
so you can use that then to discover

00:05:04,800 --> 00:05:08,400
like the host name

00:05:05,759 --> 00:05:10,800
that you need to ssh in or you know do

00:05:08,400 --> 00:05:13,840
something else later

00:05:10,800 --> 00:05:17,039
yeah so um right so

00:05:13,840 --> 00:05:19,919
we have a much we have a pretty large um

00:05:17,039 --> 00:05:21,520
pool of hardware at any one time you can

00:05:19,919 --> 00:05:24,800
see the numbers below there so

00:05:21,520 --> 00:05:27,680
we maintain a certain amount of numbers

00:05:24,800 --> 00:05:28,320
if possible um at any one time so you

00:05:27,680 --> 00:05:30,479
can see there

00:05:28,320 --> 00:05:31,440
we have them kind of back end workers

00:05:30,479 --> 00:05:33,840
and we have

00:05:31,440 --> 00:05:34,880
message queues that are sitting there

00:05:33,840 --> 00:05:37,120
which contain the

00:05:34,880 --> 00:05:38,080
metadata that maps to each of these

00:05:37,120 --> 00:05:41,199
nodes

00:05:38,080 --> 00:05:44,720
so basically when you make a call to the

00:05:41,199 --> 00:05:46,160
duffy api it'll consume one of the top

00:05:44,720 --> 00:05:48,000
and we have all kind of monitoring in

00:05:46,160 --> 00:05:51,039
place so if those pools drop

00:05:48,000 --> 00:05:52,240
too low it'll automatically um provision

00:05:51,039 --> 00:05:54,400
new ones or

00:05:52,240 --> 00:05:56,319
if it gets really critical or whatever

00:05:54,400 --> 00:05:58,800
it'll alert one of our engineers and we

00:05:56,319 --> 00:06:02,080
can go hopefully

00:05:58,800 --> 00:06:03,919
kill some instances that are stuck or

00:06:02,080 --> 00:06:05,280
something like that

00:06:03,919 --> 00:06:07,120
so on the right hand side there we have

00:06:05,280 --> 00:06:10,080
a little table uh so these are the

00:06:07,120 --> 00:06:11,840
the numbers that are the number of bare

00:06:10,080 --> 00:06:12,800
metal nodes that we have provisioned per

00:06:11,840 --> 00:06:15,520
year

00:06:12,800 --> 00:06:16,800
you can see it's a pretty sizable amount

00:06:15,520 --> 00:06:21,039
um

00:06:16,800 --> 00:06:22,560
we're up to 132 000 for 2020

00:06:21,039 --> 00:06:24,960
in the brackets there's just a number

00:06:22,560 --> 00:06:27,120
that it's likely to hit around that

00:06:24,960 --> 00:06:29,120
around that size by the end of the year

00:06:27,120 --> 00:06:29,600
so down in the bottom left then you can

00:06:29,120 --> 00:06:32,319
see

00:06:29,600 --> 00:06:33,199
in total we've provisioned 1.2 million

00:06:32,319 --> 00:06:38,160
uh beard

00:06:33,199 --> 00:06:41,280
metal instances using duffy

00:06:38,160 --> 00:06:42,560
okay so the the next uh category of

00:06:41,280 --> 00:06:45,759
workload that we can offer

00:06:42,560 --> 00:06:48,960
is vms so we recently

00:06:45,759 --> 00:06:50,000
provisioned an open nebula cluster and

00:06:48,960 --> 00:06:52,240
we're still in the process of

00:06:50,000 --> 00:06:53,680
integrating it but we're hoping to get

00:06:52,240 --> 00:06:55,520
this into the duffy api

00:06:53,680 --> 00:06:57,199
so you'll actually be able to check out

00:06:55,520 --> 00:06:59,280
a vm instead of a bare metal

00:06:57,199 --> 00:07:00,880
instance if you're if you're a choir but

00:06:59,280 --> 00:07:04,400
that's it's an ongoing

00:07:00,880 --> 00:07:09,599
work at the moment okay

00:07:04,400 --> 00:07:09,599
quick demo right so um

00:07:10,240 --> 00:07:15,840
how you would interact with us so

00:07:13,520 --> 00:07:16,560
this is to new people that want to

00:07:15,840 --> 00:07:19,120
become

00:07:16,560 --> 00:07:20,400
tenants of center ci or maybe the

00:07:19,120 --> 00:07:24,639
existing ones that

00:07:20,400 --> 00:07:27,280
are on the the central jenkins or the

00:07:24,639 --> 00:07:28,960
legacy openshift cluster so the first

00:07:27,280 --> 00:07:32,240
step is to um

00:07:28,960 --> 00:07:35,759
is to open a ticket on i'm trying to

00:07:32,240 --> 00:07:38,479
sure do it pronounce this right is it io

00:07:35,759 --> 00:07:40,240
and it's the the sent us infra board

00:07:38,479 --> 00:07:42,240
we've just go to issues

00:07:40,240 --> 00:07:44,240
and create a new issue so it's pretty

00:07:42,240 --> 00:07:47,280
simple you can go here

00:07:44,240 --> 00:07:50,639
and in the types here we have a template

00:07:47,280 --> 00:07:51,840
you can just click that and it will uh

00:07:50,639 --> 00:07:53,360
pre-populate the

00:07:51,840 --> 00:07:55,919
the issue with all the information that

00:07:53,360 --> 00:07:57,199
we need from you so it's basically

00:07:55,919 --> 00:07:59,520
do you have a namespace in the old

00:07:57,199 --> 00:08:01,919
cluster yes no do you require

00:07:59,520 --> 00:08:03,520
uh access to duffy so do you need to be

00:08:01,919 --> 00:08:06,479
able to check out bare metal or

00:08:03,520 --> 00:08:06,800
vms or are these containers enough yes

00:08:06,479 --> 00:08:10,319
no

00:08:06,800 --> 00:08:12,240
and then just and a list of the orally

00:08:10,319 --> 00:08:15,440
of course we need the project name

00:08:12,240 --> 00:08:18,000
and then the the aco accounts

00:08:15,440 --> 00:08:20,080
of the admins that you want to have

00:08:18,000 --> 00:08:20,960
admin access in your in your openshift

00:08:20,080 --> 00:08:22,319
project

00:08:20,960 --> 00:08:24,160
so once you fill out that information

00:08:22,319 --> 00:08:25,120
you just create the issue and you know

00:08:24,160 --> 00:08:27,120
one of us then

00:08:25,120 --> 00:08:28,400
we'll uh pick it up and one if it's

00:08:27,120 --> 00:08:30,800
approved then we'll we'll

00:08:28,400 --> 00:08:33,120
provision a name space on the on the

00:08:30,800 --> 00:08:36,320
cluster for you

00:08:33,120 --> 00:08:39,519
so i'll give you a quick look into into

00:08:36,320 --> 00:08:43,200
one that we've we've created earlier

00:08:39,519 --> 00:08:45,279
so we have okay so this

00:08:43,200 --> 00:08:47,360
is you can see the name of the project

00:08:45,279 --> 00:08:50,000
it's it's just a monitoring example

00:08:47,360 --> 00:08:50,560
it's one of my test projects and inside

00:08:50,000 --> 00:08:53,200
here i've

00:08:50,560 --> 00:08:54,560
applied deployed one of the jenkins

00:08:53,200 --> 00:08:57,839
instances

00:08:54,560 --> 00:09:02,080
and it's got a a little worker here

00:08:57,839 --> 00:09:05,279
so this worker it already has the um

00:09:02,080 --> 00:09:08,160
the the duffy api python client

00:09:05,279 --> 00:09:10,480
installed on it so if we go into the

00:09:08,160 --> 00:09:12,480
jenkins

00:09:10,480 --> 00:09:14,240
uh there's a kind of a sample pipeline

00:09:12,480 --> 00:09:16,640
here

00:09:14,240 --> 00:09:16,640
you can see

00:09:17,279 --> 00:09:23,040
just down here at the bottom

00:09:20,480 --> 00:09:24,560
you can see that it just uh checks out

00:09:23,040 --> 00:09:26,640
one of the nodes

00:09:24,560 --> 00:09:28,240
and then some crew within the groovy

00:09:26,640 --> 00:09:29,440
scripting we're just grabbing the host

00:09:28,240 --> 00:09:31,600
name and the ssid

00:09:29,440 --> 00:09:33,120
and printing them out and then at the

00:09:31,600 --> 00:09:35,360
end then of the pipeline it just

00:09:33,120 --> 00:09:36,399
returns it says we're done with the node

00:09:35,360 --> 00:09:39,200
so that'll uh

00:09:36,399 --> 00:09:40,399
duffy then we'll recycle it it'll tear

00:09:39,200 --> 00:09:42,080
it down

00:09:40,399 --> 00:09:43,680
and reinstall the operating system and

00:09:42,080 --> 00:09:45,360
once that that's complete then it'll

00:09:43,680 --> 00:09:47,440
make it available back in the in the

00:09:45,360 --> 00:09:50,640
pool

00:09:47,440 --> 00:10:05,839
just run it to show you

00:09:50,640 --> 00:10:05,839
build now

00:10:18,640 --> 00:10:25,440
so it makes the connection to duffy gets

00:10:21,839 --> 00:10:25,440
back the information and then

00:10:26,800 --> 00:10:29,360
prints out

00:10:29,920 --> 00:10:33,519
you can see there so it's re there's the

00:10:32,720 --> 00:10:36,880
the host name

00:10:33,519 --> 00:10:38,720
and the and the

00:10:36,880 --> 00:10:39,920
metadata that can be used to turn it

00:10:38,720 --> 00:10:43,040
back off

00:10:39,920 --> 00:10:44,240
or to tell duffy that we're done yes

00:10:43,040 --> 00:10:47,760
there's an example

00:10:44,240 --> 00:10:49,839
uh this is like it's a basic example of

00:10:47,760 --> 00:10:51,519
how you would interact with this so in

00:10:49,839 --> 00:10:54,320
in between these two

00:10:51,519 --> 00:10:54,959
you know provision and tear down you can

00:10:54,320 --> 00:10:57,839
um

00:10:54,959 --> 00:10:58,880
you can put your own tests in yeah so

00:10:57,839 --> 00:11:02,240
that's pretty much it

00:10:58,880 --> 00:11:02,240
uh let's see

00:11:04,240 --> 00:11:08,720
so it's some of the the resources that

00:11:05,760 --> 00:11:10,480
we have available uh

00:11:08,720 --> 00:11:12,160
the top one there you can how to

00:11:10,480 --> 00:11:14,959
interact with the

00:11:12,160 --> 00:11:16,079
the team on a day-to-day basis and you

00:11:14,959 --> 00:11:17,920
can see the

00:11:16,079 --> 00:11:19,440
place where you can create tickets if

00:11:17,920 --> 00:11:21,760
something's wrong with the

00:11:19,440 --> 00:11:23,600
the infrastructure or if you want to

00:11:21,760 --> 00:11:25,600
create a project with us

00:11:23,600 --> 00:11:27,040
uh you can see some of the wikis that

00:11:25,600 --> 00:11:28,399
show some of the architectures

00:11:27,040 --> 00:11:30,079
some of it's out of date like we need to

00:11:28,399 --> 00:11:33,120
get it updated and stuff

00:11:30,079 --> 00:11:36,240
but uh we're working on it at the moment

00:11:33,120 --> 00:11:37,519
yeah so god i'm after powering through

00:11:36,240 --> 00:11:43,839
that

00:11:37,519 --> 00:11:43,839
is for any questions

00:11:50,000 --> 00:11:57,839
go ahead brian

00:12:01,200 --> 00:12:11,839
hey uh

00:12:13,279 --> 00:12:19,600
if your workload is not

00:12:16,320 --> 00:12:22,160
a container or a vm or bare metal

00:12:19,600 --> 00:12:25,839
well give me an example of of what it

00:12:22,160 --> 00:12:25,839
could be

00:12:27,279 --> 00:12:30,880
ideally the least the resources you

00:12:29,200 --> 00:12:33,600
consume the better

00:12:30,880 --> 00:12:34,079
oh if you're not yet but yeah but the

00:12:33,600 --> 00:12:37,760
very

00:12:34,079 --> 00:12:40,240
much point comes in on what you need

00:12:37,760 --> 00:12:41,839
if you can if you're fine with just

00:12:40,240 --> 00:12:43,200
using a container that you can maintain

00:12:41,839 --> 00:12:45,519
somewhere and you can just

00:12:43,200 --> 00:12:46,560
use jenkins to pull it and run it and be

00:12:45,519 --> 00:12:49,680
fine with it then it's

00:12:46,560 --> 00:12:52,880
even better but if you

00:12:49,680 --> 00:12:54,160
if your job can't be containerized and

00:12:52,880 --> 00:12:56,959
you need a bare metal

00:12:54,160 --> 00:12:59,040
uh one of the examples would be say if

00:12:56,959 --> 00:13:02,399
you are from a storage team

00:12:59,040 --> 00:13:04,079
and you need four servers and four

00:13:02,399 --> 00:13:05,600
clients to interact with either each

00:13:04,079 --> 00:13:07,839
other in a storage pool and

00:13:05,600 --> 00:13:09,120
do right data and check regressions if

00:13:07,839 --> 00:13:11,279
in the speed

00:13:09,120 --> 00:13:12,959
so for that you would need vms or you

00:13:11,279 --> 00:13:14,720
would need a metal b metal much better

00:13:12,959 --> 00:13:16,880
for the exact performance if you want to

00:13:14,720 --> 00:13:19,040
check regression quality

00:13:16,880 --> 00:13:20,000
in that case it's much better to go for

00:13:19,040 --> 00:13:22,240
bare metal but

00:13:20,000 --> 00:13:23,920
it's very much the idea would be the

00:13:22,240 --> 00:13:24,399
least you can get away with because it

00:13:23,920 --> 00:13:26,320
is

00:13:24,399 --> 00:13:28,399
in it is infrastructure that we run for

00:13:26,320 --> 00:13:29,200
multiple projects it's not consume all

00:13:28,399 --> 00:13:31,040
you want

00:13:29,200 --> 00:13:32,800
so it's also very much dependent on you

00:13:31,040 --> 00:13:34,240
on what you think works the best

00:13:32,800 --> 00:13:36,160
i'm just reading the chat so that i'm

00:13:34,240 --> 00:13:37,040
aware of exact context if you have added

00:13:36,160 --> 00:13:38,959
anything

00:13:37,040 --> 00:13:40,320
if you are not 10 and yet so david went

00:13:38,959 --> 00:13:40,720
through it but i'm just going to run

00:13:40,320 --> 00:13:43,279
through

00:13:40,720 --> 00:13:45,279
the process once again if you are a

00:13:43,279 --> 00:13:47,279
non-tenant if you are not a 1098

00:13:45,279 --> 00:13:48,560
i would very much like you to go on for

00:13:47,279 --> 00:13:50,160
gear dot io slash

00:13:48,560 --> 00:13:52,160
david can you share the slides and then

00:13:50,160 --> 00:13:56,160
we can just one right

00:13:52,160 --> 00:13:59,199
yeah thank you so

00:13:56,160 --> 00:14:00,480
is that working yes so go on for gear

00:13:59,199 --> 00:14:03,680
dot i o slash

00:14:00,480 --> 00:14:05,680
centos hyphen infra and you would see a

00:14:03,680 --> 00:14:08,079
template where you would see ci

00:14:05,680 --> 00:14:10,240
migration right now it's the same thing

00:14:08,079 --> 00:14:11,519
it's the it has all the data if you can

00:14:10,240 --> 00:14:14,880
zoom in on the template would be

00:14:11,519 --> 00:14:17,680
good yeah so

00:14:14,880 --> 00:14:19,519
we have moved away from our older way of

00:14:17,680 --> 00:14:21,279
doing things on central jenkins because

00:14:19,519 --> 00:14:23,120
of the reasons they were told

00:14:21,279 --> 00:14:25,680
jenkins can be hard to maintain when the

00:14:23,120 --> 00:14:27,760
number of jobs grow on a single load

00:14:25,680 --> 00:14:29,120
and you there are more and more projects

00:14:27,760 --> 00:14:30,800
on boarding

00:14:29,120 --> 00:14:32,639
one is that problem second is that you

00:14:30,800 --> 00:14:34,160
can't add plugins you can't do things

00:14:32,639 --> 00:14:35,760
you can't add credentials in it because

00:14:34,160 --> 00:14:37,279
there are so many projects giving admin

00:14:35,760 --> 00:14:39,440
access to everyone is also not very

00:14:37,279 --> 00:14:41,760
feasible and security problems

00:14:39,440 --> 00:14:44,320
so we don't want that now what we do we

00:14:41,760 --> 00:14:46,320
create your namespace in openshift

00:14:44,320 --> 00:14:49,440
we give you an account that you can log

00:14:46,320 --> 00:14:51,600
in with seo your centos email address

00:14:49,440 --> 00:14:52,639
you authenticate with seo you are in the

00:14:51,600 --> 00:14:54,000
openshift account

00:14:52,639 --> 00:14:56,079
and once you have created the namespace

00:14:54,000 --> 00:14:58,800
you would see that on your dashboard

00:14:56,079 --> 00:15:00,560
there we can create a jenkins uh

00:14:58,800 --> 00:15:03,279
deployment for you jenkins workload for

00:15:00,560 --> 00:15:04,639
you or you can do your own thing if you

00:15:03,279 --> 00:15:06,880
if you know what you are exactly what

00:15:04,639 --> 00:15:08,959
exactly you are doing so that's why we

00:15:06,880 --> 00:15:10,639
call it center ci infrastructure and we

00:15:08,959 --> 00:15:12,959
don't want to claim that we do all your

00:15:10,639 --> 00:15:14,560
ci jobs because how you want to run your

00:15:12,959 --> 00:15:16,320
bills how you want to configure your

00:15:14,560 --> 00:15:18,079
jobs and how you want to trigger it

00:15:16,320 --> 00:15:20,240
those things are very much on you we can

00:15:18,079 --> 00:15:21,199
help to an extent that we can offer you

00:15:20,240 --> 00:15:24,240
a jenkins

00:15:21,199 --> 00:15:25,839
instance you can go to the root you'll

00:15:24,240 --> 00:15:26,639
see the jenkins you'll authenticate with

00:15:25,839 --> 00:15:29,360
seo you are

00:15:26,639 --> 00:15:30,240
in and now you own you are the admin of

00:15:29,360 --> 00:15:32,720
the jenkins

00:15:30,240 --> 00:15:33,440
that they will just give an example of

00:15:32,720 --> 00:15:35,839
so again

00:15:33,440 --> 00:15:38,079
going back the process would be to file

00:15:35,839 --> 00:15:40,160
a ticket on a gear dot io's less centros

00:15:38,079 --> 00:15:41,519
infra using the template or you cannot

00:15:40,160 --> 00:15:43,519
use a template but provide enough

00:15:41,519 --> 00:15:44,959
information for us so that we know

00:15:43,519 --> 00:15:46,880
information would be what is the name

00:15:44,959 --> 00:15:48,800
space name you need that's why i went to

00:15:46,880 --> 00:15:51,519
openshift site because we need to know

00:15:48,800 --> 00:15:52,399
what is the project you are going to use

00:15:51,519 --> 00:15:55,040
run this

00:15:52,399 --> 00:15:57,040
run your tests on the jenkins so as you

00:15:55,040 --> 00:16:00,560
see david is saying

00:15:57,040 --> 00:16:02,480
uh you have your project name and then

00:16:00,560 --> 00:16:05,120
who all will be the admins of that name

00:16:02,480 --> 00:16:07,199
spacing in openshift

00:16:05,120 --> 00:16:09,120
once all that is set up you are good to

00:16:07,199 --> 00:16:11,279
go you can configure your jenkins to

00:16:09,120 --> 00:16:12,240
run your jobs on however trigger you

00:16:11,279 --> 00:16:15,199
want

00:16:12,240 --> 00:16:15,199
brian was that clear

00:16:20,000 --> 00:16:24,560
while i wait for brian to confirm yeah

00:16:22,240 --> 00:16:24,560
thank you

00:16:25,199 --> 00:16:30,000
there's some kind of some cleanup

00:16:28,240 --> 00:16:31,680
cleanup policy for duffy vm such as

00:16:30,000 --> 00:16:33,120
running for internets without activity

00:16:31,680 --> 00:16:35,600
or something like that

00:16:33,120 --> 00:16:37,120
so right now since we are in process of

00:16:35,600 --> 00:16:38,800
integrating virtual machines

00:16:37,120 --> 00:16:40,399
we have not thought that far yet it's

00:16:38,800 --> 00:16:42,160
definitely a good idea

00:16:40,399 --> 00:16:44,079
but we have something like that in bare

00:16:42,160 --> 00:16:46,320
metal so if you have not

00:16:44,079 --> 00:16:48,000
is we you check out a node and you get

00:16:46,320 --> 00:16:50,959
it for six hours

00:16:48,000 --> 00:16:52,639
even if you have not done your builds we

00:16:50,959 --> 00:16:53,279
would take it back in success because we

00:16:52,639 --> 00:16:56,079
i i

00:16:53,279 --> 00:16:58,079
so far i have not seen a job that runs

00:16:56,079 --> 00:16:59,600
for six hours especially ci jobs imagine

00:16:58,079 --> 00:17:00,480
every pr there is a six hour jobs

00:16:59,600 --> 00:17:02,800
running

00:17:00,480 --> 00:17:04,640
uh but if it is in that case then you

00:17:02,800 --> 00:17:06,640
again you get an option to

00:17:04,640 --> 00:17:07,839
mark the nodes result for 12 hours you

00:17:06,640 --> 00:17:09,280
can just fail the nodes

00:17:07,839 --> 00:17:10,799
or in case let's say you saw some

00:17:09,280 --> 00:17:12,480
failure and you want to investigate more

00:17:10,799 --> 00:17:15,360
exactly why that failure happened

00:17:12,480 --> 00:17:17,760
you can go in and check it but if not

00:17:15,360 --> 00:17:19,760
then after six hours we automatically

00:17:17,760 --> 00:17:22,640
claim those notes back

00:17:19,760 --> 00:17:24,240
but again we don't want all tenants to

00:17:22,640 --> 00:17:25,679
think that okay anyway they'll claim

00:17:24,240 --> 00:17:27,360
after six hours because

00:17:25,679 --> 00:17:29,039
since this notes needs to be

00:17:27,360 --> 00:17:30,559
reprovisioned from scratch so that next

00:17:29,039 --> 00:17:33,600
tenant can use it

00:17:30,559 --> 00:17:36,080
it will be best if you do see code node

00:17:33,600 --> 00:17:37,200
done and the session id so that it's

00:17:36,080 --> 00:17:38,880
back to us and

00:17:37,200 --> 00:17:40,640
like if you're done in 15 minutes or one

00:17:38,880 --> 00:17:42,320
hour or two hours you give it back

00:17:40,640 --> 00:17:43,919
and then we can reinstall it from

00:17:42,320 --> 00:17:46,160
scratch for the next

00:17:43,919 --> 00:17:47,360
consumption so we have this thing in

00:17:46,160 --> 00:17:49,039
bare metal where we take it

00:17:47,360 --> 00:17:49,919
automatically in six hours if you don't

00:17:49,039 --> 00:17:53,360
give it back

00:17:49,919 --> 00:17:55,760
and in vms we definitely have to think

00:17:53,360 --> 00:18:00,080
i'm not sure if we can do it on if there

00:17:55,760 --> 00:18:02,960
is any activity or not because uh

00:18:00,080 --> 00:18:04,559
it's much more prone to error what if we

00:18:02,960 --> 00:18:06,240
start getting complaints that hey

00:18:04,559 --> 00:18:08,559
i was still running job and i took it

00:18:06,240 --> 00:18:10,320
back difficult to investigate i'm not

00:18:08,559 --> 00:18:14,080
trying to run away from

00:18:10,320 --> 00:18:16,400
a job but it's also it's very

00:18:14,080 --> 00:18:18,240
easy to say that hey your vms are

00:18:16,400 --> 00:18:19,120
claimed after six hours or five hours or

00:18:18,240 --> 00:18:21,280
two hours

00:18:19,120 --> 00:18:23,280
and then you can maintain however you

00:18:21,280 --> 00:18:25,200
want to run your jobs in there

00:18:23,280 --> 00:18:26,880
and i need to see how we can describe

00:18:25,200 --> 00:18:28,320
those things is it an open tabular

00:18:26,880 --> 00:18:29,200
feature where we can auto claim those

00:18:28,320 --> 00:18:31,679
vms back

00:18:29,200 --> 00:18:32,720
or we can integrate it in the duffy part

00:18:31,679 --> 00:18:34,559
where we do

00:18:32,720 --> 00:18:35,760
just as bare metal but that's definitely

00:18:34,559 --> 00:18:39,039
something to look at

00:18:35,760 --> 00:18:42,320
thanks a lot leo it's a great question

00:18:39,039 --> 00:18:44,400
to see steven's one there and i mean

00:18:42,320 --> 00:18:45,679
i more than happily run openshift or the

00:18:44,400 --> 00:18:48,880
communist shift but

00:18:45,679 --> 00:18:50,720
uh i mean how we can still have the gdp

00:18:48,880 --> 00:18:53,120
oranges

00:18:50,720 --> 00:18:54,240
yeah yeah we can start to take over the

00:18:53,120 --> 00:18:55,840
communist shift

00:18:54,240 --> 00:18:58,559
if steven is ready to give us exactly

00:18:55,840 --> 00:19:00,240
what gdpr is to deal with

00:18:58,559 --> 00:19:01,679
fine i mean well we just have to run

00:19:00,240 --> 00:19:02,320
open shift cluster we don't even have to

00:19:01,679 --> 00:19:04,320
run it

00:19:02,320 --> 00:19:06,080
we can communicate communicate if you

00:19:04,320 --> 00:19:08,400
know what i mean we can ask

00:19:06,080 --> 00:19:11,039
a community member to take care of it

00:19:08,400 --> 00:19:11,039
but yes

00:19:11,600 --> 00:19:15,039
we'll probably set up something similar

00:19:13,120 --> 00:19:17,679
to the past the pace that sent us like

00:19:15,039 --> 00:19:19,280
we'll just wipe it every 24 hours

00:19:17,679 --> 00:19:21,760
bran is a really good question sorry to

00:19:19,280 --> 00:19:24,320
interrupt david what if

00:19:21,760 --> 00:19:26,160
i want to run tests on fedora vm yes we

00:19:24,320 --> 00:19:27,280
do have plans for that right now there

00:19:26,160 --> 00:19:29,440
are

00:19:27,280 --> 00:19:30,480
reserved vms but once we start virtual

00:19:29,440 --> 00:19:33,840
machines

00:19:30,480 --> 00:19:36,559
the first job would be it in my opinion

00:19:33,840 --> 00:19:38,400
centos vms won't be priority although

00:19:36,559 --> 00:19:39,440
it's just adding vms templates the same

00:19:38,400 --> 00:19:41,120
day job

00:19:39,440 --> 00:19:43,039
but the way i would very much like to

00:19:41,120 --> 00:19:44,640
have fedora vms in say open nebula

00:19:43,039 --> 00:19:45,840
template already existing that you can

00:19:44,640 --> 00:19:47,760
create for your jobs

00:19:45,840 --> 00:19:49,600
so fedora virtual machines are the top

00:19:47,760 --> 00:19:52,400
priority and as soon as we have

00:19:49,600 --> 00:19:54,000
integrated the vm thing vm thing in a

00:19:52,400 --> 00:19:55,039
duffy that was the first few to come

00:19:54,000 --> 00:19:56,559
across so

00:19:55,039 --> 00:20:07,280
definitely plans for that and we have

00:19:56,559 --> 00:20:09,760
been waiting for it for a very long time

00:20:07,280 --> 00:20:10,320
commenting on open shift is a fun thing

00:20:09,760 --> 00:20:11,679
of mine

00:20:10,320 --> 00:20:14,559
not sure how much i can do it on the

00:20:11,679 --> 00:20:14,559
recorded position

00:20:16,799 --> 00:20:22,400
yeah now that that makes sense stephen

00:20:19,679 --> 00:20:22,400
got a loophole

00:20:23,039 --> 00:20:26,799
do you have any more questions on on how

00:20:25,039 --> 00:20:29,440
we have is there a way to check

00:20:26,799 --> 00:20:35,840
the for a vn state the get method will

00:20:29,440 --> 00:20:35,840
provision a new one right is

00:20:37,280 --> 00:20:41,280
so i'm just repeating the questions for

00:20:39,280 --> 00:20:44,240
the recording um

00:20:41,280 --> 00:20:45,679
uh yeah so i just said vm is still an

00:20:44,240 --> 00:20:47,600
integration process and

00:20:45,679 --> 00:20:49,520
definitely open nebula support openable

00:20:47,600 --> 00:20:50,320
has its own status thing and we can

00:20:49,520 --> 00:20:53,360
integrate it in

00:20:50,320 --> 00:20:54,320
a tough aps very easy uh in our bare

00:20:53,360 --> 00:20:57,760
metal

00:20:54,320 --> 00:20:59,600
if you go read the feed dock that

00:20:57,760 --> 00:21:01,440
i'll share the link or if you go to the

00:20:59,600 --> 00:21:03,760
slides on top

00:21:01,440 --> 00:21:04,960
david shared the slide link david if you

00:21:03,760 --> 00:21:05,679
can share this landing again it will be

00:21:04,960 --> 00:21:09,520
great

00:21:05,679 --> 00:21:11,039
so the way we work is we work on states

00:21:09,520 --> 00:21:12,640
there are different states of each and

00:21:11,039 --> 00:21:14,720
every bare metal nodes

00:21:12,640 --> 00:21:17,360
if it is in active nodes that means it's

00:21:14,720 --> 00:21:19,039
ready to be provisioned again

00:21:17,360 --> 00:21:21,200
and once it's provisioned it gets in

00:21:19,039 --> 00:21:23,360
ready state where you can

00:21:21,200 --> 00:21:24,320
so the way duffy works is it maintains

00:21:23,360 --> 00:21:27,280
the queue

00:21:24,320 --> 00:21:28,480
uh where you can go and so the pool the

00:21:27,280 --> 00:21:31,840
waterfront

00:21:28,480 --> 00:21:34,080
sorry david mentioned pool it's just

00:21:31,840 --> 00:21:34,880
that all those provision nodes are in a

00:21:34,080 --> 00:21:36,799
queue

00:21:34,880 --> 00:21:39,520
and you can go and query against what

00:21:36,799 --> 00:21:42,799
you have requested and you can claim it

00:21:39,520 --> 00:21:44,559
so it contains a state as well and if

00:21:42,799 --> 00:21:46,000
because our database the way we as i

00:21:44,559 --> 00:21:48,559
said it's active

00:21:46,000 --> 00:21:50,000
uh and ready and then once you claim it

00:21:48,559 --> 00:21:51,600
it's in deployed state so that no one

00:21:50,000 --> 00:21:52,159
else can claim it and once you give it

00:21:51,600 --> 00:21:54,480
up it

00:21:52,159 --> 00:21:55,760
it's again get back to active or if it

00:21:54,480 --> 00:21:57,600
if there's a there's a failure in

00:21:55,760 --> 00:21:59,520
provision it's put in failed state so

00:21:57,600 --> 00:22:02,320
that we can go and investigate and

00:21:59,520 --> 00:22:03,600
do things around it so we work on states

00:22:02,320 --> 00:22:04,720
and that is definitely something that

00:22:03,600 --> 00:22:07,120
you can

00:22:04,720 --> 00:22:08,480
get but leo if you have more idea around

00:22:07,120 --> 00:22:09,840
what kind of state you are expecting

00:22:08,480 --> 00:22:13,039
from a virtual machine

00:22:09,840 --> 00:22:17,919
definitely it is not

00:22:13,039 --> 00:22:20,400
yes so brian mentioned stuffy has an

00:22:17,919 --> 00:22:21,919
inventory call if you give it an api kit

00:22:20,400 --> 00:22:25,440
will show all the machines

00:22:21,919 --> 00:22:28,480
that you have requested so yeah

00:22:25,440 --> 00:22:28,480
that's that's very handy

00:22:35,840 --> 00:22:38,880
yeah i think we should highlight the

00:22:37,200 --> 00:22:40,080
features of this a lot more because i

00:22:38,880 --> 00:22:41,440
think more people would be

00:22:40,080 --> 00:22:43,200
interested in using it if they knew

00:22:41,440 --> 00:22:46,240
about it

00:22:43,200 --> 00:22:48,080
it's like our best best kept secret in

00:22:46,240 --> 00:22:50,480
some ways

00:22:48,080 --> 00:22:51,280
it's not a secret if you go on python

00:22:50,480 --> 00:22:54,320
sequel client

00:22:51,280 --> 00:22:56,640
doc it's very much mentioned there uh

00:22:54,320 --> 00:22:58,640
since we expect our tenants to like if

00:22:56,640 --> 00:23:00,720
you're using python sequel client in the

00:22:58,640 --> 00:23:02,799
jenkins that we have given

00:23:00,720 --> 00:23:04,720
uh or the jenkins you have provision

00:23:02,799 --> 00:23:06,640
with your using your daffy api key

00:23:04,720 --> 00:23:08,400
we kind of expect them to go and see

00:23:06,640 --> 00:23:10,480
what all this client can do

00:23:08,400 --> 00:23:11,919
which is python sql client if you go on

00:23:10,480 --> 00:23:13,840
python sql client

00:23:11,919 --> 00:23:16,480
documentation all its features are

00:23:13,840 --> 00:23:16,480
mentioned there

00:23:17,679 --> 00:23:22,080
right and we are definitely planning to

00:23:20,559 --> 00:23:24,480
hook the same feature in virtual

00:23:22,080 --> 00:23:27,600
machines as well

00:23:24,480 --> 00:23:28,880
and i really i'm not sure if leaving

00:23:27,600 --> 00:23:31,600
things

00:23:28,880 --> 00:23:33,280
for a longer time uh i just said that

00:23:31,600 --> 00:23:34,799
there'll seek a load done part

00:23:33,280 --> 00:23:36,320
we would also very much expect that once

00:23:34,799 --> 00:23:38,000
you consume virtual machines

00:23:36,320 --> 00:23:40,240
you do that so that the virtual machines

00:23:38,000 --> 00:23:42,480
are fed up but if not

00:23:40,240 --> 00:23:44,960
then we'll we'll find a way to auto

00:23:42,480 --> 00:23:47,120
claim those back because it's definitely

00:23:44,960 --> 00:23:48,799
resources are concerned especially when

00:23:47,120 --> 00:23:50,640
we try to do it for

00:23:48,799 --> 00:23:52,559
a wider amount of resource projects

00:23:50,640 --> 00:23:55,840
related to federance and to us

00:23:52,559 --> 00:23:57,919
it can get filled pretty quickly so

00:23:55,840 --> 00:23:59,600
just to talk about another thing that we

00:23:57,919 --> 00:24:03,360
just recently enabled is

00:23:59,600 --> 00:24:04,480
cube vert so it is possible that we'll

00:24:03,360 --> 00:24:06,480
be actually able to do

00:24:04,480 --> 00:24:07,679
vms directly on the openshift nodes

00:24:06,480 --> 00:24:10,400
themselves

00:24:07,679 --> 00:24:13,200
and then you can continue working with

00:24:10,400 --> 00:24:15,120
the openshift api or the kubernetes api

00:24:13,200 --> 00:24:17,039
it was a very good topic to include it

00:24:15,120 --> 00:24:18,640
in the talk but the reason we didn't

00:24:17,039 --> 00:24:20,480
because we right now we are a little bit

00:24:18,640 --> 00:24:23,440
torn apart in

00:24:20,480 --> 00:24:25,279
uh identifying what will be the problems

00:24:23,440 --> 00:24:27,120
coming across it like if you start using

00:24:25,279 --> 00:24:27,919
open shift and at some point it may

00:24:27,120 --> 00:24:29,679
become

00:24:27,919 --> 00:24:30,960
a throttling issue for the whole cluster

00:24:29,679 --> 00:24:33,120
and it can get slow

00:24:30,960 --> 00:24:35,120
uh other issue would be what kind of

00:24:33,120 --> 00:24:37,279
extra privilege scc will have to provide

00:24:35,120 --> 00:24:38,559
you to be able to use consume kvm or

00:24:37,279 --> 00:24:40,400
consume cube word

00:24:38,559 --> 00:24:41,600
and do we need to maintain them so there

00:24:40,400 --> 00:24:43,120
are some challenges around it we are

00:24:41,600 --> 00:24:44,559
definitely interested in making it as

00:24:43,120 --> 00:24:46,640
simple as possible

00:24:44,559 --> 00:24:48,640
and that's why we discussed that even if

00:24:46,640 --> 00:24:50,559
you are consuming vms through keyword or

00:24:48,640 --> 00:24:51,840
open nebula we'll do it through duffy so

00:24:50,559 --> 00:24:53,440
that you don't have to

00:24:51,840 --> 00:24:54,960
deal with that if you just make a call

00:24:53,440 --> 00:24:57,440
to duffy you provide

00:24:54,960 --> 00:24:58,559
so the example that we shared it was an

00:24:57,440 --> 00:25:01,039
example snippet

00:24:58,559 --> 00:25:02,480
you do iphone iphone type vm and it will

00:25:01,039 --> 00:25:05,840
give you a vm

00:25:02,480 --> 00:25:09,360
so we are excited about doing some more

00:25:05,840 --> 00:25:09,360
work around that and investigation

00:25:10,720 --> 00:25:14,720
are we actually out of time uh we have

00:25:13,919 --> 00:25:16,880
five minutes

00:25:14,720 --> 00:25:18,400
and so that's what that was our main

00:25:16,880 --> 00:25:19,919
goal like if we have a lot of questions

00:25:18,400 --> 00:25:20,880
because infrastructure questions can be

00:25:19,919 --> 00:25:23,760
tricky

00:25:20,880 --> 00:25:25,200
a lot of campaigns sometimes so if

00:25:23,760 --> 00:25:29,840
anyone has any more questions

00:25:25,200 --> 00:25:29,840
uh more than happy to answer

00:25:31,039 --> 00:25:36,240
question for leo how hard is it to make

00:25:33,600 --> 00:25:38,480
elephant plugin

00:25:36,240 --> 00:25:40,159
join the amazing yeah if you're

00:25:38,480 --> 00:25:41,600
interested you can do that uh

00:25:40,159 --> 00:25:43,840
right now we don't use from incentives

00:25:41,600 --> 00:25:46,640
ci at all just i want to make

00:25:43,840 --> 00:25:47,600
we use uh ansible two provision nodes

00:25:46,640 --> 00:25:57,840
and

00:25:47,600 --> 00:25:57,840
power off reinstall yeah

00:26:00,480 --> 00:26:04,720
so since uh we don't have a lot of

00:26:04,159 --> 00:26:07,760
questions

00:26:04,720 --> 00:26:08,240
uh i would like to go on the future

00:26:07,760 --> 00:26:11,600
plans

00:26:08,240 --> 00:26:13,760
just once more very shortly the most

00:26:11,600 --> 00:26:15,120
important one that is ongoing right now

00:26:13,760 --> 00:26:17,120
a lot of

00:26:15,120 --> 00:26:18,640
unders we need to make sure that how we

00:26:17,120 --> 00:26:21,360
handle and how we make

00:26:18,640 --> 00:26:22,960
sure that we know how much resources

00:26:21,360 --> 00:26:24,400
being used and that's where the

00:26:22,960 --> 00:26:27,200
problem is right now we want to make

00:26:24,400 --> 00:26:29,279
sure how many vms are consumed and

00:26:27,200 --> 00:26:30,559
providing virtual machines capability is

00:26:29,279 --> 00:26:34,000
the thing that we want to

00:26:30,559 --> 00:26:36,000
do the immediate next and then

00:26:34,000 --> 00:26:37,840
i would very much like to focus more on

00:26:36,000 --> 00:26:40,240
containerized test especially using

00:26:37,840 --> 00:26:43,520
fedora and centos container image

00:26:40,240 --> 00:26:45,440
is the effort should be more and more of

00:26:43,520 --> 00:26:46,880
how we can get most using least amount

00:26:45,440 --> 00:26:48,799
of resources

00:26:46,880 --> 00:26:49,919
and then our ongoing maintenance david

00:26:48,799 --> 00:26:51,679
has been doing great things on

00:26:49,919 --> 00:26:52,240
monitoring and we had fabian who hook up

00:26:51,679 --> 00:26:54,480
with

00:26:52,240 --> 00:26:55,360
nice xavix instance we have to yet look

00:26:54,480 --> 00:26:57,840
into how we can

00:26:55,360 --> 00:26:59,120
improve those a little bit smarter in

00:26:57,840 --> 00:27:01,279
monitoring so that

00:26:59,120 --> 00:27:03,120
before you notice i am aware of the

00:27:01,279 --> 00:27:05,120
problems which i guess

00:27:03,120 --> 00:27:07,360
has been going good since january i have

00:27:05,120 --> 00:27:08,799
not had to listen from

00:27:07,360 --> 00:27:10,960
emailing list that there is something

00:27:08,799 --> 00:27:13,520
going wrong i get

00:27:10,960 --> 00:27:14,640
notifications on time so monitoring is

00:27:13,520 --> 00:27:16,960
also one of the things that i want to

00:27:14,640 --> 00:27:16,960
fix

00:27:19,760 --> 00:27:22,880
all right so it was a great talk and

00:27:21,520 --> 00:27:25,760
thanks a lot david for

00:27:22,880 --> 00:27:26,080
volunteering to take the hard part of

00:27:25,760 --> 00:27:29,600
the

00:27:26,080 --> 00:27:31,760
slides and yes if you have any questions

00:27:29,600 --> 00:27:33,120
feel free to reach out to us on

00:27:31,760 --> 00:27:35,039
david can you go back to the resources

00:27:33,120 --> 00:27:37,440
slide if you don't mind

00:27:35,039 --> 00:27:39,520
on free notes sent to us hyphen ci is

00:27:37,440 --> 00:27:42,480
where you reach out to us

00:27:39,520 --> 00:27:43,919
or even better if you have anything if

00:27:42,480 --> 00:27:46,159
you just want to discuss with us

00:27:43,919 --> 00:27:48,080
center sci or centos devil would also

00:27:46,159 --> 00:27:49,440
work if you want to file a ticket if you

00:27:48,080 --> 00:27:50,799
want to have any request or if you want

00:27:49,440 --> 00:27:52,080
to know more about infrastructure and

00:27:50,799 --> 00:27:53,679
how to do things around it

00:27:52,080 --> 00:27:55,440
we very much appreciate ticket because

00:27:53,679 --> 00:27:56,960
we trace it and we worked according to

00:27:55,440 --> 00:28:01,200
the priority we see

00:27:56,960 --> 00:28:05,360
uh centuries hyphen infra on pager.io

00:28:01,200 --> 00:28:07,279
and read more about duffy on github.com

00:28:05,360 --> 00:28:09,159
centos duffy that's where you'll see the

00:28:07,279 --> 00:28:12,000
code and the wiki is on

00:28:09,159 --> 00:28:13,919
wiki.center.org the link in the slides

00:28:12,000 --> 00:28:15,520
and slides link in the chat

00:28:13,919 --> 00:28:22,399
thank you very much i guess it's time to

00:28:15,520 --> 00:28:22,399

YouTube URL: https://www.youtube.com/watch?v=LBMIdekVcbA


