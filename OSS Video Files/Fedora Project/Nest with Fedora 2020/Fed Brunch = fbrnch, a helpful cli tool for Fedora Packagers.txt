Title: Fed Brunch = fbrnch, a helpful cli tool for Fedora Packagers
Publication date: 2020-08-31
Playlist: Nest with Fedora 2020
Description: 
	In this talk I present a new project fbrnch (pronounced "f-branch"). It is a command line tool to make the life of Fedora Packagers easier.

Presented at Nest With Fedora 2020.
Captions: 
	00:00:02,080 --> 00:00:06,720
so welcome to

00:00:03,199 --> 00:00:07,520
the fred brunch session um my name is

00:00:06,720 --> 00:00:11,440
peterson

00:00:07,520 --> 00:00:14,920
um it's kind of funny

00:00:11,440 --> 00:00:16,960
doing this uh with no visual feedback

00:00:14,920 --> 00:00:18,320
and it's particularly when presenting

00:00:16,960 --> 00:00:19,920
you can't see any even the chat or

00:00:18,320 --> 00:00:21,039
anything so it's a little bit daunting

00:00:19,920 --> 00:00:24,160
but

00:00:21,039 --> 00:00:27,439
um hopefully everything will work

00:00:24,160 --> 00:00:31,840
all right well um

00:00:27,439 --> 00:00:31,840
let me get rid of this um

00:00:31,920 --> 00:00:35,200
so um

00:00:36,559 --> 00:00:40,239
yeah these are actually the slides so

00:00:40,879 --> 00:00:44,719
this talk is about new tool called life

00:00:43,840 --> 00:00:47,039
branch

00:00:44,719 --> 00:00:48,000
or fedbunch or whatever you want to call

00:00:47,039 --> 00:00:52,079
it um

00:00:48,000 --> 00:00:54,559
so um first i want to say good morning

00:00:52,079 --> 00:00:55,199
and good afternoon um good evening good

00:00:54,559 --> 00:00:58,800
night

00:00:55,199 --> 00:00:59,520
however you are um thanks for joining

00:00:58,800 --> 00:01:01,840
the session

00:00:59,520 --> 00:01:01,840
um

00:01:02,640 --> 00:01:07,920
so uh what is f branch um

00:01:08,240 --> 00:01:14,000
so f branch is a new tool which kind of

00:01:11,520 --> 00:01:14,880
well makes life easier for fedora

00:01:14,000 --> 00:01:18,479
packages

00:01:14,880 --> 00:01:20,000
um so it's kind of you can think of a

00:01:18,479 --> 00:01:23,280
bit like a layer of

00:01:20,000 --> 00:01:24,799
or fed package i mean fed f

00:01:23,280 --> 00:01:26,560
k g i haven't actually written it down

00:01:24,799 --> 00:01:27,040
in the slides but

00:01:26,560 --> 00:01:29,840
um

00:01:27,040 --> 00:01:32,640
[Music]

00:01:29,840 --> 00:01:33,360
and literally it does well the idea is

00:01:32,640 --> 00:01:35,520
to kind of

00:01:33,360 --> 00:01:37,840
make life easier and do more things

00:01:35,520 --> 00:01:41,200
slightly more automatically so

00:01:37,840 --> 00:01:44,960
originally branch came out of the idea

00:01:41,200 --> 00:01:45,600
of being able to build a package update

00:01:44,960 --> 00:01:48,079
across

00:01:45,600 --> 00:01:49,439
say all the current releases or current

00:01:48,079 --> 00:01:51,119
branches

00:01:49,439 --> 00:01:53,759
so that's why the word branch is in the

00:01:51,119 --> 00:01:57,280
name because it's

00:01:53,759 --> 00:02:00,320
and then

00:01:57,280 --> 00:02:00,960
later i added also like interactions

00:02:00,320 --> 00:02:03,920
with

00:02:00,960 --> 00:02:05,600
package reviews and bugzilla related to

00:02:03,920 --> 00:02:08,479
that so

00:02:05,600 --> 00:02:10,160
it's quite easy to yeah i mean i mean it

00:02:08,479 --> 00:02:13,360
doesn't do that much more than

00:02:10,160 --> 00:02:15,440
on the on the fedora create review but

00:02:13,360 --> 00:02:17,120
there's a few more checks and also it

00:02:15,440 --> 00:02:18,640
can update package reviews so which is

00:02:17,120 --> 00:02:22,000
something that the

00:02:18,640 --> 00:02:24,319
current tooling can't do i think um

00:02:22,000 --> 00:02:25,440
and and things like it'll it'll can do

00:02:24,319 --> 00:02:29,520
mock

00:02:25,440 --> 00:02:31,599
bills and stuff like that um

00:02:29,520 --> 00:02:32,800
and also building packages so yeah while

00:02:31,599 --> 00:02:35,440
we talk a little bit about it

00:02:32,800 --> 00:02:37,840
it also merges converge offers to merge

00:02:35,440 --> 00:02:39,840
branches and stuff like that and

00:02:37,840 --> 00:02:41,040
also it works both for diskid and

00:02:39,840 --> 00:02:43,680
non-disk kit

00:02:41,040 --> 00:02:45,840
so i mean certain commands obviously not

00:02:43,680 --> 00:02:48,080
all commands but um

00:02:45,840 --> 00:02:52,080
things like local builds you can build

00:02:48,080 --> 00:02:52,080
non-disket packages locally and

00:02:52,160 --> 00:02:58,720
create slpms and whatnot

00:02:55,840 --> 00:03:00,000
and well but well for some people maybe

00:02:58,720 --> 00:03:02,840
the killer feature is that

00:03:00,000 --> 00:03:05,120
it can do parallel builds so it's sort

00:03:02,840 --> 00:03:07,680
of goes rather beyond

00:03:05,120 --> 00:03:08,600
the chain bill that's supported by fed

00:03:07,680 --> 00:03:10,319
package

00:03:08,600 --> 00:03:12,879
[Music]

00:03:10,319 --> 00:03:14,480
where you can do chain bills there but

00:03:12,879 --> 00:03:16,720
you have to kind of set them up manually

00:03:14,480 --> 00:03:16,720
and

00:03:17,280 --> 00:03:20,480
um so yeah we'll go into a bit more

00:03:19,120 --> 00:03:23,040
detail about that and there are

00:03:20,480 --> 00:03:24,239
various other things it can also do also

00:03:23,040 --> 00:03:27,120
just recently

00:03:24,239 --> 00:03:30,319
it can also do copper bills now like

00:03:27,120 --> 00:03:30,319
incremental copper bills

00:03:30,840 --> 00:03:37,040
um yeah

00:03:33,680 --> 00:03:38,720
okay so

00:03:37,040 --> 00:03:40,720
there's a very short history here but i

00:03:38,720 --> 00:03:43,280
think i covered some of this already

00:03:40,720 --> 00:03:44,480
but yeah it sort of started off like i

00:03:43,280 --> 00:03:45,760
said it was a simple idea of just

00:03:44,480 --> 00:03:46,959
building across packages and then

00:03:45,760 --> 00:03:50,159
gradually

00:03:46,959 --> 00:03:53,040
okay it marries more features um

00:03:50,159 --> 00:03:53,040
some of the sort of

00:03:53,760 --> 00:03:58,159
build related stuff comes from some tool

00:03:56,560 --> 00:03:59,920
i had for high school

00:03:58,159 --> 00:04:02,080
called fedora haskell tools it's not in

00:03:59,920 --> 00:04:03,850
fedora but it's a

00:04:02,080 --> 00:04:05,680
product on github um

00:04:03,850 --> 00:04:08,080
[Music]

00:04:05,680 --> 00:04:09,439
and but a lot of those not well many of

00:04:08,080 --> 00:04:12,400
those could be generalized

00:04:09,439 --> 00:04:15,519
beyond just the particular particular

00:04:12,400 --> 00:04:19,040
packages so

00:04:15,519 --> 00:04:20,880
yeah um

00:04:19,040 --> 00:04:22,160
so let's look a little more closely at

00:04:20,880 --> 00:04:24,800
some of the features and

00:04:22,160 --> 00:04:24,800
use cases

00:04:25,520 --> 00:04:30,479
so first package reviews um

00:04:29,080 --> 00:04:33,520
[Music]

00:04:30,479 --> 00:04:35,919
maybe i can do it a quick demo maybe um

00:04:33,520 --> 00:04:38,639
i'll try and sort of insert leave it

00:04:35,919 --> 00:04:38,639
demo oops

00:04:40,840 --> 00:04:46,960
um so let's

00:04:43,040 --> 00:04:46,960
look at uh

00:04:47,120 --> 00:04:51,440
i don't know okay let's look at a random

00:04:50,880 --> 00:04:54,840
package

00:04:51,440 --> 00:04:56,960
um oh it's not here in the wrong

00:04:54,840 --> 00:05:00,240
directory

00:04:56,960 --> 00:05:03,120
um okay

00:05:00,240 --> 00:05:04,160
let's see if we could even create a page

00:05:03,120 --> 00:05:07,520
review for this thing

00:05:04,160 --> 00:05:08,720
um okay create review oh it does have

00:05:07,520 --> 00:05:10,960
completions now

00:05:08,720 --> 00:05:10,960
uh

00:05:13,840 --> 00:05:21,199
and i think that might be enough yeah

00:05:18,960 --> 00:05:22,080
so now it's noticed that i haven't got a

00:05:21,199 --> 00:05:25,840
valid

00:05:22,080 --> 00:05:28,880
bugzilla login so i need to

00:05:25,840 --> 00:05:28,880
remember my password

00:05:29,280 --> 00:05:36,240
okay that might work and okay

00:05:33,440 --> 00:05:39,919
and that didn't work okay so i forgot to

00:05:36,240 --> 00:05:43,039
pray to the demon gods um

00:05:39,919 --> 00:05:43,039
see oh

00:05:43,919 --> 00:05:46,880
let's try that again

00:05:47,360 --> 00:05:53,840
i think i typed my password wrong

00:05:55,759 --> 00:06:02,080
i was afraid i would get my password on

00:05:59,039 --> 00:06:04,000
okay this looks better now i hope it's

00:06:02,080 --> 00:06:07,840
not gonna do a mock build because anyone

00:06:04,000 --> 00:06:07,840
take a long time

00:06:11,039 --> 00:06:15,840
okay so it's it's also on rpm lint now

00:06:13,919 --> 00:06:16,720
and there's a few warnings but they

00:06:15,840 --> 00:06:19,759
don't look too

00:06:16,720 --> 00:06:20,800
bad so most mostly usual kind of

00:06:19,759 --> 00:06:22,319
sponsoring stuff

00:06:20,800 --> 00:06:24,160
uh there's no version in the last

00:06:22,319 --> 00:06:25,600
changelog okay i don't need to fix that

00:06:24,160 --> 00:06:28,560
later

00:06:25,600 --> 00:06:28,560
let's try submitting that

00:06:33,120 --> 00:06:36,479
okay so now there's a gorgeous crossbar

00:06:35,199 --> 00:06:37,280
all right we'll come back to that later

00:06:36,479 --> 00:06:39,600
movie

00:06:37,280 --> 00:06:39,600
um

00:06:41,280 --> 00:06:45,520
um oh um

00:06:45,680 --> 00:06:49,039
but then

00:06:56,000 --> 00:06:59,360
that's bad news um

00:06:58,130 --> 00:07:03,840
[Music]

00:06:59,360 --> 00:07:03,840
try one more time

00:07:06,800 --> 00:07:17,840
[Music]

00:07:08,400 --> 00:07:17,840
what's going on

00:07:28,400 --> 00:07:31,840
can't be extracted

00:07:36,560 --> 00:07:44,800
[Music]

00:07:42,840 --> 00:07:46,319
um

00:07:44,800 --> 00:07:48,160
yeah okay that's not so interesting

00:07:46,319 --> 00:07:49,520
because i mean this is a fedora crate

00:07:48,160 --> 00:07:51,520
where you can order that but then you

00:07:49,520 --> 00:07:54,479
can also update a package review

00:07:51,520 --> 00:07:56,800
in the same way you can if i had already

00:07:54,479 --> 00:07:58,080
submitted the review i could now write i

00:07:56,800 --> 00:08:00,080
say i have some changes i need to make

00:07:58,080 --> 00:08:04,240
the package i can now write fit branch

00:08:00,080 --> 00:08:08,319
update review and it will

00:08:04,240 --> 00:08:12,000
it will create a new srpm and

00:08:08,319 --> 00:08:16,639
upload it to there are people

00:08:12,000 --> 00:08:20,000
and post a comment on the review bug

00:08:16,639 --> 00:08:22,960
um okay

00:08:20,000 --> 00:08:23,599
and let's see if this works uh there's a

00:08:22,960 --> 00:08:26,639
f

00:08:23,599 --> 00:08:28,960
branch reviews command which lists my

00:08:26,639 --> 00:08:28,960
open

00:08:30,240 --> 00:08:34,279
open reviews

00:08:31,210 --> 00:08:34,279
[Music]

00:08:39,200 --> 00:08:42,320
okay something worked so these are some

00:08:41,279 --> 00:08:44,000
of the reviews

00:08:42,320 --> 00:08:45,839
um actually they're all been finished i

00:08:44,000 --> 00:08:47,600
think uh i think they've all been built

00:08:45,839 --> 00:08:52,080
in rawhide and i left them open

00:08:47,600 --> 00:08:52,080
to maybe back back build them too

00:08:52,800 --> 00:09:00,800
and uh yeah this it has various um

00:08:58,720 --> 00:09:02,800
you can do some filtering like only list

00:09:00,800 --> 00:09:05,120
approved reviews or unapproved or

00:09:02,800 --> 00:09:07,600
unbranched and stuff

00:09:05,120 --> 00:09:10,160
or ones that have had repos requested

00:09:07,600 --> 00:09:10,160
and whatnot

00:09:10,320 --> 00:09:17,600
and yeah maybe just to give an idea

00:09:14,480 --> 00:09:17,600
i um

00:09:19,279 --> 00:09:23,839
this is a list of all the commands um

00:09:24,640 --> 00:09:31,120
yeah a short list here

00:09:29,279 --> 00:09:32,800
um all right i need to be worried of

00:09:31,120 --> 00:09:36,160
time i think so

00:09:32,800 --> 00:09:36,959
10 minutes past okay let's move on um so

00:09:36,160 --> 00:09:38,560
the next

00:09:36,959 --> 00:09:41,200
interesting use case is building

00:09:38,560 --> 00:09:44,800
packages um

00:09:41,200 --> 00:09:47,600
so that so fred if

00:09:44,800 --> 00:09:48,000
branch build uh has the various options

00:09:47,600 --> 00:09:49,760
and what

00:09:48,000 --> 00:09:51,120
the minus b option means build all

00:09:49,760 --> 00:09:53,200
active branches

00:09:51,120 --> 00:09:54,430
like so it'll build rawhide fedora 32 of

00:09:53,200 --> 00:09:55,760
jordan 31

00:09:54,430 --> 00:09:57,279
[Music]

00:09:55,760 --> 00:09:59,839
plus what possibly apple if you have

00:09:57,279 --> 00:10:01,680
apple branches um

00:09:59,839 --> 00:10:03,120
you can also specify specific branches

00:10:01,680 --> 00:10:05,839
to build um

00:10:03,120 --> 00:10:07,040
a little offer to merge newer changes

00:10:05,839 --> 00:10:10,079
you have in the newer

00:10:07,040 --> 00:10:11,920
branch to the older branch and this is a

00:10:10,079 --> 00:10:12,880
command line option to kind of do that

00:10:11,920 --> 00:10:16,959
without asking

00:10:12,880 --> 00:10:19,040
um it also does things like it checks

00:10:16,959 --> 00:10:22,640
for an existing code you build

00:10:19,040 --> 00:10:25,760
and also checks for a kerberos ticket

00:10:22,640 --> 00:10:32,480
and it'll push your bills to body

00:10:25,760 --> 00:10:35,680
um at the end of the build

00:10:32,480 --> 00:10:36,800
okay um and if you have multiple

00:10:35,680 --> 00:10:40,160
packages

00:10:36,800 --> 00:10:42,480
i i think currently it bills

00:10:40,160 --> 00:10:43,920
by branch so it'll build package one for

00:10:42,480 --> 00:10:45,680
rawhide package two for rawhide page

00:10:43,920 --> 00:10:48,880
three for roy and it'll go to

00:10:45,680 --> 00:10:49,360
the 32 and build it constantly but maybe

00:10:48,880 --> 00:10:52,480
we could

00:10:49,360 --> 00:10:56,000
do it the other way too um

00:10:52,480 --> 00:10:57,200
yeah okay i'll keep going because i'm

00:10:56,000 --> 00:11:00,320
not sure i think time is

00:10:57,200 --> 00:11:02,720
moving short um then

00:11:00,320 --> 00:11:04,240
there's various local commands um for

00:11:02,720 --> 00:11:05,440
example you can do a local build like

00:11:04,240 --> 00:11:06,880
fed but

00:11:05,440 --> 00:11:08,560
package also account but you can also do

00:11:06,880 --> 00:11:12,399
that from for a non-discrete

00:11:08,560 --> 00:11:16,160
um package like for something like your

00:11:12,399 --> 00:11:18,160
review like something hasn't been

00:11:16,160 --> 00:11:19,760
packaged in fedora or a corporate

00:11:18,160 --> 00:11:23,600
package or something

00:11:19,760 --> 00:11:25,600
you can also install um so unlike fed

00:11:23,600 --> 00:11:27,440
package install this actually installs

00:11:25,600 --> 00:11:29,040
the packages in your system so

00:11:27,440 --> 00:11:30,160
this is quite useful for like testing or

00:11:29,040 --> 00:11:30,720
if you're doing when you're doing some

00:11:30,160 --> 00:11:32,079
local

00:11:30,720 --> 00:11:34,399
packaging and you want to test your

00:11:32,079 --> 00:11:35,440
stuff at first before pushing it out and

00:11:34,399 --> 00:11:37,680
then you can do that

00:11:35,440 --> 00:11:37,680
um

00:11:39,839 --> 00:11:45,680
yeah and you can use the sort command

00:11:43,519 --> 00:11:46,880
um to actually order the packages in

00:11:45,680 --> 00:11:50,720
dependency order

00:11:46,880 --> 00:11:52,639
um the razer command i mean

00:11:50,720 --> 00:11:54,000
obvious ones on the clone i mean it's

00:11:52,639 --> 00:11:55,680
obviously you can just do

00:11:54,000 --> 00:11:57,440
that package clone and song but the

00:11:55,680 --> 00:12:00,480
difference is with best brands you can

00:11:57,440 --> 00:12:02,000
you can clone multiple packages at once

00:12:00,480 --> 00:12:04,320
and in fact you can there's a user

00:12:02,000 --> 00:12:06,880
option um

00:12:04,320 --> 00:12:06,880
so you can

00:12:07,440 --> 00:12:12,320
if you do use that little clone it'll

00:12:10,320 --> 00:12:14,160
look in pagoda for all your packages and

00:12:12,320 --> 00:12:15,839
it will actually clone all of them so

00:12:14,160 --> 00:12:18,399
yeah which can take a lot of time if you

00:12:15,839 --> 00:12:20,079
have a lot of packages but you know

00:12:18,399 --> 00:12:22,079
and then yeah there's some things like

00:12:20,079 --> 00:12:23,680
prep and mock and you can also install

00:12:22,079 --> 00:12:25,920
basically same as build up but there's

00:12:23,680 --> 00:12:27,920
install depths and diff which is useful

00:12:25,920 --> 00:12:30,240
for if you're looking at many packages

00:12:27,920 --> 00:12:30,240
um

00:12:31,040 --> 00:12:34,800
there's also a switch command to switch

00:12:32,720 --> 00:12:36,800
branch but um yeah

00:12:34,800 --> 00:12:39,360
most of these also have obviously branch

00:12:36,800 --> 00:12:42,880
options and whatnot so

00:12:39,360 --> 00:12:42,880
um okay

00:12:43,120 --> 00:12:50,160
and that was most of the demos really i

00:12:46,720 --> 00:12:53,200
don't even have okay it's not

00:12:50,160 --> 00:12:55,200
13 but i'm sure there's any other

00:12:53,200 --> 00:12:58,639
interesting commands to show

00:12:55,200 --> 00:13:00,959
um yeah

00:12:58,639 --> 00:13:00,959
um

00:13:02,320 --> 00:13:06,399
so yeah there's a clone switch for

00:13:04,480 --> 00:13:08,079
switching brown status

00:13:06,399 --> 00:13:09,839
uh i think we're going to come to that

00:13:08,079 --> 00:13:11,600
one actually

00:13:09,839 --> 00:13:13,360
that just shows you the status of the

00:13:11,600 --> 00:13:14,240
build status of the package across

00:13:13,360 --> 00:13:17,360
branches

00:13:14,240 --> 00:13:20,959
um we'll talk about parallel later

00:13:17,360 --> 00:13:24,160
um yeah and

00:13:20,959 --> 00:13:25,279
uh okay bugs we'll list the bugs open

00:13:24,160 --> 00:13:29,839
bugs for a package

00:13:25,279 --> 00:13:31,440
um and you can yeah request repos but

00:13:29,839 --> 00:13:34,880
request repos actually

00:13:31,440 --> 00:13:36,399
looks at your approved um

00:13:34,880 --> 00:13:38,480
package reviews and then it will

00:13:36,399 --> 00:13:42,320
automatically create

00:13:38,480 --> 00:13:42,320
tickets in paco for those

00:13:43,279 --> 00:13:46,959
and similarly import will also you can

00:13:46,160 --> 00:13:49,120
give it a

00:13:46,959 --> 00:13:50,399
list of packages but you can it'll also

00:13:49,120 --> 00:13:53,680
just

00:13:50,399 --> 00:13:55,839
find the um approved

00:13:53,680 --> 00:13:57,360
packages which have now had reports

00:13:55,839 --> 00:14:01,040
created and import those

00:13:57,360 --> 00:14:05,040
um downloading the package from bugzilla

00:14:01,040 --> 00:14:08,160
links um there's also request branches

00:14:05,040 --> 00:14:11,760
um okay which by default

00:14:08,160 --> 00:14:14,320
i think will create for the latest two

00:14:11,760 --> 00:14:14,320
releases

00:14:15,199 --> 00:14:20,480
and yeah um to the copra maybe later

00:14:18,000 --> 00:14:20,480
this time

00:14:21,279 --> 00:14:26,560
all right um i wanted to pause for a

00:14:24,720 --> 00:14:28,399
moment but i think i better

00:14:26,560 --> 00:14:29,839
continue playing through and see if

00:14:28,399 --> 00:14:31,120
anytime within for any questions or

00:14:29,839 --> 00:14:33,839
discussion i know how this

00:14:31,120 --> 00:14:33,839
works um

00:14:34,480 --> 00:14:38,880
so yeah full disclosure so i found just

00:14:37,440 --> 00:14:40,160
written in haskell which sometimes

00:14:38,880 --> 00:14:43,680
raises my eyebrows

00:14:40,160 --> 00:14:46,000
and fedora but that's how

00:14:43,680 --> 00:14:47,040
i quite like haskell i like the type

00:14:46,000 --> 00:14:49,440
safety and

00:14:47,040 --> 00:14:51,040
it's very easy to refactor and when you

00:14:49,440 --> 00:14:54,639
can really refactor code

00:14:51,040 --> 00:14:56,800
with a lot of um yeah um confidence in

00:14:54,639 --> 00:14:58,480
haskell so it makes

00:14:56,800 --> 00:15:01,519
developing kind of pleasure it's quite

00:14:58,480 --> 00:15:05,440
good for this kind of script like

00:15:01,519 --> 00:15:08,560
programming too um and

00:15:05,440 --> 00:15:11,760
so currently it circle reads or queries

00:15:08,560 --> 00:15:12,639
fedora services natively so there are

00:15:11,760 --> 00:15:16,160
libraries

00:15:12,639 --> 00:15:19,680
with sort of um yeah web

00:15:16,160 --> 00:15:20,959
api bindings for pagora and koji and

00:15:19,680 --> 00:15:24,399
bodhi and copra

00:15:20,959 --> 00:15:24,880
and also uh blackzilla while bazila is

00:15:24,399 --> 00:15:28,079
not

00:15:24,880 --> 00:15:31,040
was created by someone else but um

00:15:28,079 --> 00:15:31,759
um this is box a little bit hard because

00:15:31,040 --> 00:15:34,320
the

00:15:31,759 --> 00:15:35,920
red hat box is always slightly very

00:15:34,320 --> 00:15:37,759
slightly different from the standard

00:15:35,920 --> 00:15:39,920
upstream bugzilla

00:15:37,759 --> 00:15:41,920
some of the fields have become lists

00:15:39,920 --> 00:15:44,480
basically just a few but

00:15:41,920 --> 00:15:46,480
and but well i say part but yeah it's

00:15:44,480 --> 00:15:47,440
still using python clients for writing

00:15:46,480 --> 00:15:50,480
so to speak i mean

00:15:47,440 --> 00:15:52,160
it's for pushing um the builds and

00:15:50,480 --> 00:15:54,959
that's mostly because of authentication

00:15:52,160 --> 00:15:54,959
i haven't quite come

00:15:58,880 --> 00:16:01,120
um

00:16:03,120 --> 00:16:06,079
okay so let's talk about parallel

00:16:04,480 --> 00:16:09,440
buildings this is sort of interesting at

00:16:06,079 --> 00:16:12,959
least for some people um

00:16:09,440 --> 00:16:16,000
so what this does is it um well

00:16:12,959 --> 00:16:16,560
firstly it uses this library or tool

00:16:16,000 --> 00:16:18,639
called

00:16:16,560 --> 00:16:21,360
rpm build order which is already a

00:16:18,639 --> 00:16:24,079
package in fedora

00:16:21,360 --> 00:16:25,360
but it's also a library and basically

00:16:24,079 --> 00:16:28,720
that can do

00:16:25,360 --> 00:16:32,720
create dependency graphs and sorting

00:16:28,720 --> 00:16:35,759
and dependency layers of packages

00:16:32,720 --> 00:16:36,560
and then and as branch parallel uh also

00:16:35,759 --> 00:16:40,000
uses this

00:16:36,560 --> 00:16:40,880
haskell async library so it it kicks off

00:16:40,000 --> 00:16:43,120
bills in the

00:16:40,880 --> 00:16:44,160
in the sort of uh the main thread but

00:16:43,120 --> 00:16:47,040
then it uses

00:16:44,160 --> 00:16:47,839
threads to monitor the build progress

00:16:47,040 --> 00:16:49,680
and

00:16:47,839 --> 00:16:51,040
wait on the weight repos and so on in

00:16:49,680 --> 00:16:53,120
the background

00:16:51,040 --> 00:16:54,240
so you can actually build quite a lot of

00:16:53,120 --> 00:16:58,000
packages in parallel

00:16:54,240 --> 00:16:58,000
um and it uses um

00:16:58,320 --> 00:17:02,639
background mode in kodi so it's got low

00:17:01,199 --> 00:17:05,439
priority builds so

00:17:02,639 --> 00:17:06,319
hopefully it shouldn't overwhelm the

00:17:05,439 --> 00:17:10,640
build system

00:17:06,319 --> 00:17:10,640
too much um

00:17:10,880 --> 00:17:15,919
yeah it i think it's nice to use side

00:17:14,559 --> 00:17:18,640
repo's for this i may

00:17:15,919 --> 00:17:20,240
even make that more or less mandatory

00:17:18,640 --> 00:17:23,600
later i don't know i'm not sure but

00:17:20,240 --> 00:17:25,199
um yeah um

00:17:23,600 --> 00:17:27,360
and recently i i refreshed all the

00:17:25,199 --> 00:17:29,440
haskell packages for fedora 33 so i

00:17:27,360 --> 00:17:30,960
built around 500 packages and

00:17:29,440 --> 00:17:32,640
the same heap of time actually it

00:17:30,960 --> 00:17:34,080
usually takes like more than a week i

00:17:32,640 --> 00:17:35,919
used to get all the packages through

00:17:34,080 --> 00:17:38,640
even there was some scripting but this

00:17:35,919 --> 00:17:40,400
i could do it in a few days so i thought

00:17:38,640 --> 00:17:46,559
i was going to be late for the uh

00:17:40,400 --> 00:17:49,520
freeze but i had extra time just bearish

00:17:46,559 --> 00:17:49,520
time is it okay

00:17:49,600 --> 00:17:53,840
um then i had another tool called code

00:17:53,200 --> 00:17:56,240
branch

00:17:53,840 --> 00:17:57,039
uh so you may also like code branch

00:17:56,240 --> 00:17:58,960
which

00:17:57,039 --> 00:18:00,240
you can basically just like it go pro

00:17:58,960 --> 00:18:02,400
bills i don't know i don't i don't

00:18:00,240 --> 00:18:04,880
really like pushing

00:18:02,400 --> 00:18:06,880
my builds out to copper just building

00:18:04,880 --> 00:18:08,480
everything and ending up with a dozen

00:18:06,880 --> 00:18:10,720
failures or something so

00:18:08,480 --> 00:18:12,240
what this does is that it it'll well

00:18:10,720 --> 00:18:15,840
there are various options

00:18:12,240 --> 00:18:15,840
it supports but um

00:18:16,240 --> 00:18:23,039
um we can sort of do various variations

00:18:20,880 --> 00:18:23,360
but by default it will build say first

00:18:23,039 --> 00:18:28,000
for

00:18:23,360 --> 00:18:31,360
rawhide x86 64 and then 32

00:18:28,000 --> 00:18:32,880
and 31 and then well um say epilate or

00:18:31,360 --> 00:18:34,880
whatever and then it'll go on to other

00:18:32,880 --> 00:18:37,280
arches doing

00:18:34,880 --> 00:18:38,400
um yeah but you can also do other

00:18:37,280 --> 00:18:40,960
versions you can build by

00:18:38,400 --> 00:18:43,520
release or build by arch or stuff like

00:18:40,960 --> 00:18:45,919
that um

00:18:43,520 --> 00:18:47,360
or you can do the default single build

00:18:45,919 --> 00:18:48,559
which is what the copper client does

00:18:47,360 --> 00:18:49,520
basically which is pushing everything

00:18:48,559 --> 00:18:52,240
out at once so

00:18:49,520 --> 00:18:52,240
if you're confident

00:18:53,200 --> 00:18:59,919
um and just recently i also added a

00:18:57,039 --> 00:19:01,440
exclude branch thing now so which is

00:18:59,919 --> 00:19:02,480
maybe more useful even for copper

00:19:01,440 --> 00:19:03,840
sometimes say

00:19:02,480 --> 00:19:05,520
like earlier i did a build where i

00:19:03,840 --> 00:19:08,160
wanted to exclude apple 7 because it

00:19:05,520 --> 00:19:11,840
doesn't build an f7 so

00:19:08,160 --> 00:19:11,840
um yeah

00:19:13,440 --> 00:19:17,600
all right let's keep going so i just

00:19:15,679 --> 00:19:19,760
wanted to give a thanks to some of the

00:19:17,600 --> 00:19:23,840
earlier testers and adopters and

00:19:19,760 --> 00:19:27,039
you know i've been testing

00:19:23,840 --> 00:19:29,760
mostly from my corporate build um

00:19:27,039 --> 00:19:32,400
my twist on mike elliott um they follow

00:19:29,760 --> 00:19:33,919
some a few other people who

00:19:32,400 --> 00:19:35,520
um i mean i haven't really announced it

00:19:33,919 --> 00:19:39,280
very widely yet it's been

00:19:35,520 --> 00:19:42,320
sort of coming up a bit in

00:19:39,280 --> 00:19:42,320
irc mostly

00:19:43,600 --> 00:19:46,720
a few places so

00:19:46,880 --> 00:19:53,360
yeah so what's next

00:19:50,240 --> 00:19:54,640
um well one thing is to package it uh

00:19:53,360 --> 00:19:56,160
it's actually getting into fedora

00:19:54,640 --> 00:20:00,000
remember it's only in copra

00:19:56,160 --> 00:20:03,039
um and actually that also requires

00:20:00,000 --> 00:20:05,039
uh building a few uh releasing some of

00:20:03,039 --> 00:20:06,400
those libraries i mentioned um that

00:20:05,039 --> 00:20:09,120
shouldn't be too bad

00:20:06,400 --> 00:20:09,760
um i could even bundle some of them

00:20:09,120 --> 00:20:12,400
maybe

00:20:09,760 --> 00:20:13,600
uh as a sort of modules or something but

00:20:12,400 --> 00:20:15,120
anyway

00:20:13,600 --> 00:20:17,520
and the other thing i'd like to do is

00:20:15,120 --> 00:20:18,640
make do the take the parallel building

00:20:17,520 --> 00:20:20,799
to the next stage so

00:20:18,640 --> 00:20:22,400
actually do full graphic builds rather

00:20:20,799 --> 00:20:24,720
than the moment it's doing these

00:20:22,400 --> 00:20:25,600
dependency layers that means it say

00:20:24,720 --> 00:20:27,840
finds that there's

00:20:25,600 --> 00:20:29,280
i don't know ten packages in the first

00:20:27,840 --> 00:20:31,039
layer and then eight packages in the

00:20:29,280 --> 00:20:32,799
second layer and

00:20:31,039 --> 00:20:34,720
three five more packages the next layer

00:20:32,799 --> 00:20:36,240
but but if you have one very big package

00:20:34,720 --> 00:20:36,960
in one of the layers it will slow down

00:20:36,240 --> 00:20:41,360
everything

00:20:36,960 --> 00:20:42,960
well slow down things a bit so if we

00:20:41,360 --> 00:20:44,960
not building by layers but actually just

00:20:42,960 --> 00:20:46,799
following the graph that could actually

00:20:44,960 --> 00:20:50,159
speed up things even more than it

00:20:46,799 --> 00:20:50,159
would be more parallel so

00:20:50,960 --> 00:20:57,039
um yeah

00:20:54,159 --> 00:20:58,799
um well there's a there's quite a few uh

00:20:57,039 --> 00:21:01,840
well sort of small fixmes and things in

00:20:58,799 --> 00:21:04,720
the source code and stuff but

00:21:01,840 --> 00:21:04,720
and uh

00:21:04,960 --> 00:21:11,200
yeah i think i covered most of it

00:21:08,400 --> 00:21:12,080
so yeah the source code is on github

00:21:11,200 --> 00:21:14,240
there's a

00:21:12,080 --> 00:21:15,360
as i said there's a copper repo you can

00:21:14,240 --> 00:21:18,640
install it um

00:21:15,360 --> 00:21:22,000
today various people have been

00:21:18,640 --> 00:21:22,720
using it and generally yeah i have been

00:21:22,000 --> 00:21:25,919
having

00:21:22,720 --> 00:21:26,400
positive feedback and i appreciate some

00:21:25,919 --> 00:21:28,480
of the

00:21:26,400 --> 00:21:31,280
feature requests and bug reports i've

00:21:28,480 --> 00:21:33,679
been getting for example one

00:21:31,280 --> 00:21:35,440
true logic asked me to improve the

00:21:33,679 --> 00:21:38,880
rendering of

00:21:35,440 --> 00:21:42,720
cycles um so if you have

00:21:38,880 --> 00:21:42,720
if you have cyclic dependencies in your

00:21:42,960 --> 00:21:46,559
your package set then

00:21:46,880 --> 00:21:56,080
i think i have here some example um

00:21:50,640 --> 00:21:56,080
let's try and sort these um i think it

00:21:57,600 --> 00:22:03,769
okay i'm just dispensing my branch

00:22:00,440 --> 00:22:03,769
[Music]

00:22:08,320 --> 00:22:15,360
it takes a moment

00:22:12,159 --> 00:22:16,480
um yeah so this so actually this has got

00:22:15,360 --> 00:22:18,720
a few dependencies so

00:22:16,480 --> 00:22:20,000
it's not a good example in that sense

00:22:18,720 --> 00:22:24,159
but anyway

00:22:20,000 --> 00:22:27,600
um yeah so i think

00:22:24,159 --> 00:22:30,720
elliot's trying to um improve this

00:22:27,600 --> 00:22:34,400
and so yeah so

00:22:30,720 --> 00:22:38,320
there's a boat strap uh bill cond

00:22:34,400 --> 00:22:41,840
uh oh i think i got that wrong uh

00:22:38,320 --> 00:22:41,840
i thought that was um

00:22:42,320 --> 00:22:47,669
i'd confuse myself

00:22:44,130 --> 00:22:47,669
[Music]

00:22:49,919 --> 00:22:53,440
that is worth it right so

00:22:53,679 --> 00:22:58,720
ah maybe i tapped it in the wrong place

00:22:55,520 --> 00:22:58,720
i think i'm too tired okay

00:22:58,960 --> 00:23:03,679
um anyway so these are all sub-cycles

00:23:01,600 --> 00:23:09,440
listed here but if you turn on the

00:23:03,679 --> 00:23:12,320
oh god

00:23:09,440 --> 00:23:14,480
if you turn on the bootstrap um build

00:23:12,320 --> 00:23:17,600
config then it will

00:23:14,480 --> 00:23:19,360
make things a bit better i think um

00:23:17,600 --> 00:23:21,520
okay yeah now you can see there's

00:23:19,360 --> 00:23:23,360
several cycles but there's only a few

00:23:21,520 --> 00:23:25,039
anyway i mean this is a bit of a little

00:23:23,360 --> 00:23:26,799
corner case i don't know i mean or

00:23:25,039 --> 00:23:28,240
extreme case i mean generally

00:23:26,799 --> 00:23:30,240
there aren't that well obviously if you

00:23:28,240 --> 00:23:32,080
try to sort the whole destroyer there's

00:23:30,240 --> 00:23:33,840
lots of cycles around like dependencies

00:23:32,080 --> 00:23:36,080
but

00:23:33,840 --> 00:23:38,720
for smaller package sets it's not that

00:23:36,080 --> 00:23:38,720
common but

00:23:39,280 --> 00:23:44,640
so let me see are there any questions

00:23:42,720 --> 00:23:46,080
how much time okay it's 25 past i don't

00:23:44,640 --> 00:23:51,520
know if i'm out of time already but

00:23:46,080 --> 00:23:54,000
um let's see

00:23:51,520 --> 00:23:54,000
um

00:23:55,200 --> 00:23:58,559
how to get it okay so it's incorporated

00:23:57,600 --> 00:24:01,919
um

00:23:58,559 --> 00:24:04,080
that's the best way to get it um okay i

00:24:01,919 --> 00:24:05,679
got got a few minutes thank you

00:24:04,080 --> 00:24:07,200
and anyone got any other questions i

00:24:05,679 --> 00:24:08,320
don't know i don't think there's audio

00:24:07,200 --> 00:24:09,440
questions but i think you can put

00:24:08,320 --> 00:24:13,679
questions in the chat

00:24:09,440 --> 00:24:16,799
um oh yeah thanks

00:24:13,679 --> 00:24:19,200
all right did you get it already

00:24:16,799 --> 00:24:20,000
okay well i think my password was wrong

00:24:19,200 --> 00:24:24,159
right so you

00:24:20,000 --> 00:24:24,159
didn't see it um

00:24:26,000 --> 00:24:30,559
oh yeah skipping foot package will go

00:24:27,840 --> 00:24:33,440
well yeah maybe i don't know i mean

00:24:30,559 --> 00:24:35,919
i'm not really i don't destroy fat

00:24:33,440 --> 00:24:39,039
package or anything i mean but um

00:24:35,919 --> 00:24:40,320
but yeah possibly um um i mean at the

00:24:39,039 --> 00:24:42,799
moment it's still

00:24:40,320 --> 00:24:44,080
fed bags just a little dependency of f

00:24:42,799 --> 00:24:46,000
branch but um

00:24:44,080 --> 00:24:48,559
but yeah maybe in the long term it might

00:24:46,000 --> 00:24:48,559
be possible

00:24:49,440 --> 00:24:52,799
i carried i can figure out with a

00:24:51,120 --> 00:24:55,520
password oh

00:24:52,799 --> 00:24:57,120
oh the log yeah okay yeah there was a

00:24:55,520 --> 00:24:58,880
log but

00:24:57,120 --> 00:25:00,640
the log contained my wrong password

00:24:58,880 --> 00:25:02,480
right yeah okay

00:25:00,640 --> 00:25:04,000
well i mean this type password but yeah

00:25:02,480 --> 00:25:07,120
okay i'll oh

00:25:04,000 --> 00:25:11,600
i just repeat the questions of course um

00:25:07,120 --> 00:25:11,600
okay um

00:25:11,679 --> 00:25:15,840
yeah i don't know there's any other

00:25:13,120 --> 00:25:15,840
questions

00:25:16,400 --> 00:25:29,840
yeah i'll update my uh

00:25:19,840 --> 00:25:29,840
um any other questions

00:25:30,400 --> 00:25:33,679
just wondering if there's anything else

00:25:31,520 --> 00:25:34,960
i can show you um i think i didn't show

00:25:33,679 --> 00:25:37,279
the status

00:25:34,960 --> 00:25:37,279
um

00:25:40,080 --> 00:25:43,679
okay so let's look at well this is a

00:25:42,159 --> 00:25:46,960
very interesting example but

00:25:43,679 --> 00:25:49,360
um so first is doing a git fetch

00:25:46,960 --> 00:25:50,400
and then it tells you because they

00:25:49,360 --> 00:25:52,320
didn't specify oh

00:25:50,400 --> 00:25:54,240
and it branches it to the branches and

00:25:52,320 --> 00:25:57,520
then it shows the

00:25:54,240 --> 00:25:58,240
tags and builds of the current branches

00:25:57,520 --> 00:26:00,320
so

00:25:58,240 --> 00:26:02,000
if there are local changes in here then

00:26:00,320 --> 00:26:04,080
it will uh

00:26:02,000 --> 00:26:05,279
mention those elements or summaries that

00:26:04,080 --> 00:26:11,039
get

00:26:05,279 --> 00:26:14,000
commits and things um

00:26:11,039 --> 00:26:14,000
check everything else

00:26:17,440 --> 00:26:24,320
um right bugs

00:26:20,720 --> 00:26:26,640
let's see oh okay let me see

00:26:24,320 --> 00:26:26,640
um

00:26:32,320 --> 00:26:36,080
okay how can people help with packaging

00:26:34,480 --> 00:26:38,000
this um

00:26:36,080 --> 00:26:39,919
well like if i mean the big help would

00:26:38,000 --> 00:26:42,960
be helping with the package reviews

00:26:39,919 --> 00:26:44,720
um and yeah so michelle said i should

00:26:42,960 --> 00:26:45,760
bring unplugged for the haskell sig yeah

00:26:44,720 --> 00:26:49,279
so we're actually

00:26:45,760 --> 00:26:51,760
quite low on resources um we have a few

00:26:49,279 --> 00:26:53,200
superheroes like uh robert andre and so

00:26:51,760 --> 00:26:53,520
on who help a lot with package release

00:26:53,200 --> 00:26:57,039
but

00:26:53,520 --> 00:26:59,360
um so that would

00:26:57,039 --> 00:27:00,640
be welcome and i mean a long time we

00:26:59,360 --> 00:27:02,159
really need more help also just

00:27:00,640 --> 00:27:05,440
maintaining and helping with the

00:27:02,159 --> 00:27:07,840
updating and so on since it's some work

00:27:05,440 --> 00:27:07,840
um

00:27:08,799 --> 00:27:12,559
okay so let's try and look at bugs i'm

00:27:10,799 --> 00:27:14,559
trying to think of an example okay let's

00:27:12,559 --> 00:27:16,480
look at this one maybe i'm not trying to

00:27:14,559 --> 00:27:17,679
pick on anything but

00:27:16,480 --> 00:27:21,840
i think i happen to know this one

00:27:17,679 --> 00:27:21,840
probably has some bugs so

00:27:24,000 --> 00:27:28,799
there you go it's listed the open get

00:27:25,919 --> 00:27:28,799
textbooks

00:27:29,200 --> 00:27:39,919
okay um

00:27:35,520 --> 00:27:42,159
um in this case there's pings

00:27:39,919 --> 00:27:49,840
so i i didn't understand about the ping

00:27:42,159 --> 00:27:49,840
question what do you mean by that

00:27:54,480 --> 00:28:02,720
um okay i think that's two minutes until

00:27:57,600 --> 00:28:04,480
it's half past so i may be out of time

00:28:02,720 --> 00:28:06,159
ah okay do i get pings i don't know i'm

00:28:04,480 --> 00:28:07,200
not sure i actually turned off

00:28:06,159 --> 00:28:10,480
notifications

00:28:07,200 --> 00:28:11,120
to not distract myself um it was a good

00:28:10,480 --> 00:28:14,840
question

00:28:11,120 --> 00:28:15,990
um maybe i don't know if i get pinged

00:28:14,840 --> 00:28:18,720
enough

00:28:15,990 --> 00:28:22,159
[Music]

00:28:18,720 --> 00:28:25,919
yeah that's a good question all right

00:28:22,159 --> 00:28:28,960
any last final questions um

00:28:25,919 --> 00:28:30,000
so yeah anyway um so just to summarize

00:28:28,960 --> 00:28:34,880
again so yeah

00:28:30,000 --> 00:28:34,880
you can install from the copra and um

00:28:35,520 --> 00:28:38,559
yeah just to prove that the originally

00:28:37,279 --> 00:28:43,039
it was called the fed branch

00:28:38,559 --> 00:28:46,159
there you go is the ci in travis

00:28:43,039 --> 00:28:48,320
and also rpm builder is also in fedora

00:28:46,159 --> 00:28:48,320
so

00:28:52,799 --> 00:28:56,240
all right i think i'm out of time so

00:28:54,640 --> 00:28:58,960
thanks very much thanks for

00:28:56,240 --> 00:29:00,480
joining the session i hope it was useful

00:28:58,960 --> 00:29:02,320
and

00:29:00,480 --> 00:29:04,000
if you have any feedback um yeah we

00:29:02,320 --> 00:29:06,399
welcome any

00:29:04,000 --> 00:29:11,840
feedback blog reports feature requests

00:29:06,399 --> 00:29:11,840

YouTube URL: https://www.youtube.com/watch?v=40kTBsA674U


