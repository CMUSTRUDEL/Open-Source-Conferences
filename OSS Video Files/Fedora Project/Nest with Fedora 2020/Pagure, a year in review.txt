Title: Pagure, a year in review
Publication date: 2020-08-29
Playlist: Nest with Fedora 2020
Description: 
	This session will review of the latest changes made to pagure as well as give some hints about its roadmap.

Presented at Nest With Fedora 2020.
Captions: 
	00:00:03,520 --> 00:00:08,080
hey

00:00:03,919 --> 00:00:08,080
uh so welcome everyone uh

00:00:08,480 --> 00:00:17,840
this is uh psp we have to get today

00:00:11,920 --> 00:00:20,960
uh nico the the equilibrium

00:00:17,840 --> 00:00:21,760
uh i will be monitoring the chat as i

00:00:20,960 --> 00:00:24,880
talks but

00:00:21,760 --> 00:00:26,080
uh i can try to focus on what i'm saying

00:00:24,880 --> 00:00:26,860
get it and then you can answer your

00:00:26,080 --> 00:00:28,080
question

00:00:26,860 --> 00:00:30,160
[Music]

00:00:28,080 --> 00:00:31,119
then welcome interrupt me to have

00:00:30,160 --> 00:00:34,640
someone

00:00:31,119 --> 00:00:38,719
answer the record here um

00:00:34,640 --> 00:00:40,160
so what's happened in the in peggy over

00:00:38,719 --> 00:00:43,200
the last year

00:00:40,160 --> 00:00:46,239
so i'll totally i'll start with a

00:00:43,200 --> 00:00:47,600
short presentation on what bugger is and

00:00:46,239 --> 00:00:49,120
what it does

00:00:47,600 --> 00:00:50,640
we'll go through some of the recent

00:00:49,120 --> 00:00:53,199
features that we've added

00:00:50,640 --> 00:00:54,079
some of them are upstream some of them

00:00:53,199 --> 00:00:57,840
are

00:00:54,079 --> 00:01:01,199
these kits so src.fireproject.org

00:00:57,840 --> 00:01:03,039
go through some of the roadmaps and ids

00:01:01,199 --> 00:01:06,479
and some of the statistics around the

00:01:03,039 --> 00:01:09,439
projects and then of course uh

00:01:06,479 --> 00:01:10,720
and we'll help you to to answer them so

00:01:09,439 --> 00:01:12,799
i might be a little bit chippy so i

00:01:10,720 --> 00:01:15,280
don't know if i should shut

00:01:12,799 --> 00:01:18,240
yes the only possibility which i have is

00:01:15,280 --> 00:01:18,240
to turn off my camera

00:01:18,720 --> 00:01:22,000
well then you won't have to you won't

00:01:20,640 --> 00:01:26,400
see me for what it's worth your camera

00:01:22,000 --> 00:01:27,840
is already

00:01:26,400 --> 00:01:29,520
well let well let's see if that works

00:01:27,840 --> 00:01:31,200
better then um

00:01:29,520 --> 00:01:32,880
so i'm not sending my camera anymore so

00:01:31,200 --> 00:01:33,439
you should only hear me and see the

00:01:32,880 --> 00:01:36,400
video

00:01:33,439 --> 00:01:38,640
the slides does that sound better yeah

00:01:36,400 --> 00:01:40,000
you seem to be okay now and i turned off

00:01:38,640 --> 00:01:42,560
my video so that it doesn't stress

00:01:40,000 --> 00:01:42,560
your connection

00:01:43,119 --> 00:01:48,720
okay let's keep it this way then

00:01:46,320 --> 00:01:51,200
so pagier for those of you who do not

00:01:48,720 --> 00:01:55,280
know uh it's a git centric

00:01:51,200 --> 00:01:57,600
python based project hosting platforms

00:01:55,280 --> 00:01:59,200
it's meant to ask for every project the

00:01:57,600 --> 00:01:59,840
source code of the project if there is

00:01:59,200 --> 00:02:01,759
any

00:01:59,840 --> 00:02:03,680
the documentation about the projects

00:02:01,759 --> 00:02:06,000
there is a ticket trackers

00:02:03,680 --> 00:02:07,200
and it offers the the possibility of

00:02:06,000 --> 00:02:10,479
having pull requests

00:02:07,200 --> 00:02:12,080
to the source code tracker well a git

00:02:10,479 --> 00:02:16,000
repository

00:02:12,080 --> 00:02:18,560
and this polyquest allows flags

00:02:16,000 --> 00:02:19,680
which are way for third party toolings

00:02:18,560 --> 00:02:23,520
to integrate

00:02:19,680 --> 00:02:26,800
with uh with these pro requests

00:02:23,520 --> 00:02:29,599
it is meant to have no locking

00:02:26,800 --> 00:02:30,959
uh it is also extensible it is built in

00:02:29,599 --> 00:02:33,120
a way that you can

00:02:30,959 --> 00:02:35,280
uh send the team in but you can also add

00:02:33,120 --> 00:02:36,720
your own endpoints your api endpoints

00:02:35,280 --> 00:02:39,120
dedicated endpoints

00:02:36,720 --> 00:02:40,400
uh new ui frame it's uh it's really

00:02:39,120 --> 00:02:43,280
meant to

00:02:40,400 --> 00:02:45,920
to be able to allow you to to customize

00:02:43,280 --> 00:02:48,160
it to to your needs

00:02:45,920 --> 00:02:49,440
that being said we've added a number of

00:02:48,160 --> 00:02:51,040
features upstream which

00:02:49,440 --> 00:02:53,519
you definitely no longer have to do if

00:02:51,040 --> 00:02:55,760
you interesting to have them

00:02:53,519 --> 00:02:57,040
one of them which actually landed only

00:02:55,760 --> 00:02:59,760
in production this week

00:02:57,040 --> 00:03:00,879
was the the boards feature so it's a

00:02:59,760 --> 00:03:03,680
very lightweight

00:03:00,879 --> 00:03:05,440
cabin board you can have as many board

00:03:03,680 --> 00:03:07,680
as you like per project

00:03:05,440 --> 00:03:09,280
every board is linked to a specific tag

00:03:07,680 --> 00:03:11,760
so when you add the ticket

00:03:09,280 --> 00:03:12,800
when you tag a ticket with that tag it

00:03:11,760 --> 00:03:15,840
will automatically

00:03:12,800 --> 00:03:17,840
be linked to the to the board

00:03:15,840 --> 00:03:19,360
it you can have different status so

00:03:17,840 --> 00:03:20,080
there are one suggestions one column on

00:03:19,360 --> 00:03:22,319
the board

00:03:20,080 --> 00:03:24,799
uh there is one of these studies that is

00:03:22,319 --> 00:03:26,560
set as the default one so when you tag

00:03:24,799 --> 00:03:28,159
the the ticket to the board it will

00:03:26,560 --> 00:03:29,760
automatically end up in the default

00:03:28,159 --> 00:03:32,239
status column

00:03:29,760 --> 00:03:33,360
you can also say that the status equals

00:03:32,239 --> 00:03:36,239
closing

00:03:33,360 --> 00:03:36,720
tickets and you can even specify which

00:03:36,239 --> 00:03:39,760
clause

00:03:36,720 --> 00:03:41,120
which which close status to use when

00:03:39,760 --> 00:03:42,799
closing the ticket

00:03:41,120 --> 00:03:44,959
so to give you some error some ideas on

00:03:42,799 --> 00:03:47,920
how it looks we're actually using this

00:03:44,959 --> 00:03:49,599
on the federal infrastructure project

00:03:47,920 --> 00:03:51,120
so as you can see we have a board that's

00:03:49,599 --> 00:03:54,239
called dave uh

00:03:51,120 --> 00:03:54,959
that board it comes with it with the tag

00:03:54,239 --> 00:03:57,840
dev

00:03:54,959 --> 00:03:58,400
it's an active board if once for

00:03:57,840 --> 00:03:59,920
projects

00:03:58,400 --> 00:04:01,920
you know that are that have been done

00:03:59,920 --> 00:04:04,560
are not no longer relevant

00:04:01,920 --> 00:04:05,519
uh and then if you click on the on the

00:04:04,560 --> 00:04:07,920
configure here

00:04:05,519 --> 00:04:09,519
you will end up in this uh in this page

00:04:07,920 --> 00:04:11,680
here

00:04:09,519 --> 00:04:13,920
every line is a is a status every status

00:04:11,680 --> 00:04:16,000
is a column on the board itself

00:04:13,920 --> 00:04:17,600
you can order them you can set which one

00:04:16,000 --> 00:04:20,079
is the default you can ch

00:04:17,600 --> 00:04:21,440
you can pick if one is close and the

00:04:20,079 --> 00:04:21,840
corresponding cluster juice and then you

00:04:21,440 --> 00:04:23,680
can have

00:04:21,840 --> 00:04:25,680
you know pretty colors because that

00:04:23,680 --> 00:04:28,240
makes things a little bit nicer

00:04:25,680 --> 00:04:30,639
uh the columns you see there you see

00:04:28,240 --> 00:04:31,600
there are basically the default statuses

00:04:30,639 --> 00:04:34,240
so when you

00:04:31,600 --> 00:04:35,680
create a board it basically uh has no

00:04:34,240 --> 00:04:37,040
status you have a button to create the

00:04:35,680 --> 00:04:37,840
default status and those are the ones

00:04:37,040 --> 00:04:41,360
you're going to get

00:04:37,840 --> 00:04:42,720
with this clear the default here and on

00:04:41,360 --> 00:04:44,400
the federal infrastructure we have added

00:04:42,720 --> 00:04:46,320
a few tickets here uh

00:04:44,400 --> 00:04:48,240
you know two some of them are in backlog

00:04:46,320 --> 00:04:50,160
some of them are try edge in progress

00:04:48,240 --> 00:04:52,479
in review if you look at the same board

00:04:50,160 --> 00:04:53,680
today uh you'll see that some of them

00:04:52,479 --> 00:04:55,759
are have moved to dawn

00:04:53,680 --> 00:04:57,040
uh some of them are moved to edge and so

00:04:55,759 --> 00:05:00,639
on

00:04:57,040 --> 00:05:02,000
so it's very simple uh road and i still

00:05:00,639 --> 00:05:04,000
want to be able to see

00:05:02,000 --> 00:05:06,880
if the ticket is assigned to someone or

00:05:04,000 --> 00:05:09,759
not which is missing the ui here

00:05:06,880 --> 00:05:09,759
but i'll be

00:05:10,240 --> 00:05:13,440
um it's pretty simple it's very

00:05:11,759 --> 00:05:14,960
straightforward but you know it uh

00:05:13,440 --> 00:05:16,800
it's about if you if you like

00:05:14,960 --> 00:05:19,840
representation for your ticket

00:05:16,800 --> 00:05:21,280
and i think that's pretty useful the

00:05:19,840 --> 00:05:21,759
second feature that we're gonna talk

00:05:21,280 --> 00:05:24,479
about

00:05:21,759 --> 00:05:24,880
are the collaborators level so we have

00:05:24,479 --> 00:05:27,680
three

00:05:24,880 --> 00:05:28,400
we had three seo so far you had the main

00:05:27,680 --> 00:05:31,440
admin

00:05:28,400 --> 00:05:34,479
uh you had admins uh you had

00:05:31,440 --> 00:05:36,080
so many was just uh is an admin

00:05:34,479 --> 00:05:39,199
just like the other six said that he has

00:05:36,080 --> 00:05:41,199
his name on the on the front page

00:05:39,199 --> 00:05:42,479
but his or her name in the front page

00:05:41,199 --> 00:05:44,400
actually the

00:05:42,479 --> 00:05:45,919
but so we had three levels officials you

00:05:44,400 --> 00:05:48,800
had admins you had

00:05:45,919 --> 00:05:50,160
commit and you had tickets um tickets

00:05:48,800 --> 00:05:51,840
you would just follow basically be

00:05:50,160 --> 00:05:54,560
allowed to edit tickets metadata

00:05:51,840 --> 00:05:55,360
assign tickets so people uh type them uh

00:05:54,560 --> 00:05:57,280
and so on

00:05:55,360 --> 00:05:59,840
commits give you commit access to the to

00:05:57,280 --> 00:06:01,680
the main git repository the sources

00:05:59,840 --> 00:06:03,759
uh as well as access to the private

00:06:01,680 --> 00:06:04,240
tickets because it's expected that if

00:06:03,759 --> 00:06:06,080
you

00:06:04,240 --> 00:06:07,919
can fix the code then you can access the

00:06:06,080 --> 00:06:09,600
private tickets and then admins have

00:06:07,919 --> 00:06:11,680
access to all the features to all the

00:06:09,600 --> 00:06:13,600
the settings as well so we've added a

00:06:11,680 --> 00:06:15,600
fourth level here which is called collab

00:06:13,600 --> 00:06:16,639
collaborators that sits between tickets

00:06:15,600 --> 00:06:18,400
and commits

00:06:16,639 --> 00:06:20,639
and basically it gives you a commit it

00:06:18,400 --> 00:06:22,880
gives you tickets level on the ui

00:06:20,639 --> 00:06:23,919
and on the main git report gives you

00:06:22,880 --> 00:06:26,319
commit level

00:06:23,919 --> 00:06:28,319
but on a specific set of branches that

00:06:26,319 --> 00:06:29,759
have been granted to you when

00:06:28,319 --> 00:06:32,000
you've been added to the project as a

00:06:29,759 --> 00:06:34,479
collaborator it uses

00:06:32,000 --> 00:06:35,840
pattern matching so you can give you

00:06:34,479 --> 00:06:36,880
know you can give someone access to

00:06:35,840 --> 00:06:38,720
everything that is

00:06:36,880 --> 00:06:40,240
starting every branch starting with

00:06:38,720 --> 00:06:42,800
features slash

00:06:40,240 --> 00:06:44,160
something feature slash is also going to

00:06:42,800 --> 00:06:47,280
be accepted by the way

00:06:44,160 --> 00:06:49,440
if you grant someone access to epl star

00:06:47,280 --> 00:06:52,000
or you'll get access to everything

00:06:49,440 --> 00:06:54,000
including the epo branch

00:06:52,000 --> 00:06:55,039
and so on so and you can also just you

00:06:54,000 --> 00:06:56,720
know train uh

00:06:55,039 --> 00:06:58,720
put the branch through and then they

00:06:56,720 --> 00:06:59,840
only have access to the exact branch foo

00:06:58,720 --> 00:07:02,960
and not

00:06:59,840 --> 00:07:04,319
foo star something and so on

00:07:02,960 --> 00:07:06,720
so that gives us a little bit more

00:07:04,319 --> 00:07:09,280
flexibility on adding people to to

00:07:06,720 --> 00:07:10,960
project including in this git

00:07:09,280 --> 00:07:13,520
so in this case this is screenshot on

00:07:10,960 --> 00:07:14,319
how it looks you just go to the add user

00:07:13,520 --> 00:07:16,720
to the project

00:07:14,319 --> 00:07:18,479
file settings you click on the drop down

00:07:16,720 --> 00:07:19,360
you set collaborators and it's going to

00:07:18,479 --> 00:07:22,560
ask you

00:07:19,360 --> 00:07:24,560
for the for the list of branches that uh

00:07:22,560 --> 00:07:26,720
of pattern of branches that this user is

00:07:24,560 --> 00:07:28,960
allowed to so in this case i was adding

00:07:26,720 --> 00:07:29,599
the silver user as a collaborator on the

00:07:28,960 --> 00:07:33,599
features

00:07:29,599 --> 00:07:36,639
and develop branch of fedor build

00:07:33,599 --> 00:07:40,400
we've also added http push

00:07:36,639 --> 00:07:43,599
so you can now you can now

00:07:40,400 --> 00:07:44,160
push you know via http and you don't

00:07:43,599 --> 00:07:47,280
have to go

00:07:44,160 --> 00:07:50,319
via ssh which is handy in some

00:07:47,280 --> 00:07:50,720
networking environments so it has two

00:07:50,319 --> 00:07:53,120
ways

00:07:50,720 --> 00:07:54,720
that it works uh depending on how packer

00:07:53,120 --> 00:07:56,479
is configured if it uses local

00:07:54,720 --> 00:07:59,599
authentication so if the

00:07:56,479 --> 00:08:01,280
user accounts and groups are managed

00:07:59,599 --> 00:08:02,879
within pager

00:08:01,280 --> 00:08:04,879
so to be clear this is not the case on

00:08:02,879 --> 00:08:06,000
packet.org that is not the case on this

00:08:04,879 --> 00:08:07,599
git

00:08:06,000 --> 00:08:09,440
but if you use that the local

00:08:07,599 --> 00:08:10,879
authentication then you know page knows

00:08:09,440 --> 00:08:12,000
about your password so you can provide

00:08:10,879 --> 00:08:15,199
username and password

00:08:12,000 --> 00:08:16,240
and push if you use the open id or the

00:08:15,199 --> 00:08:19,360
open id connect

00:08:16,240 --> 00:08:21,520
authentications uh currently pegadio and

00:08:19,360 --> 00:08:23,520
this guitar using the open id and we

00:08:21,520 --> 00:08:25,919
should be migrating them to idc

00:08:23,520 --> 00:08:28,000
at one point then we don't know your

00:08:25,919 --> 00:08:30,319
password and we have no way to verify

00:08:28,000 --> 00:08:32,080
your password so what you do is you

00:08:30,319 --> 00:08:32,959
you're going to have to create an api

00:08:32,080 --> 00:08:36,159
token

00:08:32,959 --> 00:08:39,200
with the commit scl and then when you

00:08:36,159 --> 00:08:40,640
get push over http it's going to ask you

00:08:39,200 --> 00:08:43,039
for your username which

00:08:40,640 --> 00:08:44,640
you know and the api token so instead of

00:08:43,039 --> 00:08:45,839
the password is going it's going to say

00:08:44,640 --> 00:08:46,640
password as you can see in the script

00:08:45,839 --> 00:08:48,800
chart here

00:08:46,640 --> 00:08:50,000
but you'll have to provide the api token

00:08:48,800 --> 00:08:51,519
and that will work

00:08:50,000 --> 00:08:53,680
this has been currently enabled on

00:08:51,519 --> 00:08:55,040
staging by gear and i need to make the

00:08:53,680 --> 00:08:57,440
changes to enable this

00:08:55,040 --> 00:08:58,480
on pagoda io production as well as this

00:08:57,440 --> 00:09:00,399
kit but

00:08:58,480 --> 00:09:02,000
we have it it's a matter of configuring

00:09:00,399 --> 00:09:05,519
and restarting apache

00:09:02,000 --> 00:09:07,839
basically we've added the possibility of

00:09:05,519 --> 00:09:09,519
customizing the new issue page

00:09:07,839 --> 00:09:11,839
so when you have what you see on the

00:09:09,519 --> 00:09:13,360
right here is uh creating a new issue on

00:09:11,839 --> 00:09:16,640
the federal infrastructure

00:09:13,360 --> 00:09:18,240
ticket tracker and you know it says

00:09:16,640 --> 00:09:19,839
you're about to open a ticket to the

00:09:18,240 --> 00:09:21,519
federal infrastructure team

00:09:19,839 --> 00:09:23,120
if this is the first time you're doing

00:09:21,519 --> 00:09:25,600
this you can find more information

00:09:23,120 --> 00:09:27,200
at this url here and that text is

00:09:25,600 --> 00:09:30,519
exactly the same one that is

00:09:27,200 --> 00:09:31,760
placed under a template folder filename

00:09:30,519 --> 00:09:34,720
contributing.md

00:09:31,760 --> 00:09:35,920
everything lowercase and the text that

00:09:34,720 --> 00:09:37,440
i've put there which

00:09:35,920 --> 00:09:40,000
you can see on the left side here

00:09:37,440 --> 00:09:42,000
actually shows on the on the new page uh

00:09:40,000 --> 00:09:43,279
on the new issue page so if you want

00:09:42,000 --> 00:09:45,360
if you want to inform your contributor

00:09:43,279 --> 00:09:46,080
or what's going to happen once they have

00:09:45,360 --> 00:09:47,600
opened a new

00:09:46,080 --> 00:09:51,519
a new issue page you know what's the

00:09:47,600 --> 00:09:54,399
workflow for issues are then going to be

00:09:51,519 --> 00:09:56,000
flagged tagged assigned processed uh if

00:09:54,399 --> 00:09:57,839
the tickets are automatically closed

00:09:56,000 --> 00:09:58,720
after two weeks of inactivity these kind

00:09:57,839 --> 00:10:00,560
of things

00:09:58,720 --> 00:10:02,720
well these are things you can now put

00:10:00,560 --> 00:10:06,640
forward when the people are opening the

00:10:02,720 --> 00:10:10,800
these tickets another feature is the

00:10:06,640 --> 00:10:13,519
the new issues uh in the static in the

00:10:10,800 --> 00:10:15,040
stats page of a project in the issue tab

00:10:13,519 --> 00:10:17,680
on the left here

00:10:15,040 --> 00:10:19,040
you can see these graphs uh so we have

00:10:17,680 --> 00:10:23,120
two graphs that we have

00:10:19,040 --> 00:10:23,680
we remade regenerated uh the old one

00:10:23,120 --> 00:10:26,079
looked

00:10:23,680 --> 00:10:27,600
didn't look as nice for one and there

00:10:26,079 --> 00:10:29,279
was actually some issues with the data

00:10:27,600 --> 00:10:30,720
itself i think they were not working as

00:10:29,279 --> 00:10:32,800
good as i

00:10:30,720 --> 00:10:34,160
planned them in the beginning so this is

00:10:32,800 --> 00:10:36,000
a v2 which

00:10:34,160 --> 00:10:37,760
uh so far it seems to be working quite

00:10:36,000 --> 00:10:40,640
well the first ticket

00:10:37,760 --> 00:10:43,279
is just a bar and for every week over

00:10:40,640 --> 00:10:46,160
the last year so it goes uh 50

00:10:43,279 --> 00:10:47,519
52 weeks or so it tells you the number

00:10:46,160 --> 00:10:48,800
of tickets that have been opened that

00:10:47,519 --> 00:10:49,680
week and a number of tickets that have

00:10:48,800 --> 00:10:52,240
been closed

00:10:49,680 --> 00:10:53,200
that week and in blue is the number of

00:10:52,240 --> 00:10:55,360
tickets opened

00:10:53,200 --> 00:10:56,959
and in red the number of tickets closed

00:10:55,360 --> 00:10:58,720
and as you can see there are a few weeks

00:10:56,959 --> 00:11:00,320
where we actually did close more tickets

00:10:58,720 --> 00:11:01,120
than were open so these are the good

00:11:00,320 --> 00:11:02,800
weeks

00:11:01,120 --> 00:11:04,560
and there are a few weeks where we got

00:11:02,800 --> 00:11:06,079
more tickets than we close and so those

00:11:04,560 --> 00:11:08,480
are the bad weeks

00:11:06,079 --> 00:11:09,760
and the bottom graph is the the same

00:11:08,480 --> 00:11:11,200
idea except that it's

00:11:09,760 --> 00:11:13,680
it's the number of tickets that were

00:11:11,200 --> 00:11:15,519
open in that week so

00:11:13,680 --> 00:11:18,000
if you look at this this is again for

00:11:15,519 --> 00:11:20,240
the last year 52 weeks

00:11:18,000 --> 00:11:21,200
and we can see that we started the in

00:11:20,240 --> 00:11:24,560
august uh

00:11:21,200 --> 00:11:27,120
2019 we had about 140 tickets it

00:11:24,560 --> 00:11:28,320
raised a little bit to 150 and then it

00:11:27,120 --> 00:11:30,880
it went down quite up

00:11:28,320 --> 00:11:31,760
quite nicely until may and then we had a

00:11:30,880 --> 00:11:33,440
little bit of an

00:11:31,760 --> 00:11:35,200
a peak and that's basically the

00:11:33,440 --> 00:11:37,680
beginning of the data center move

00:11:35,200 --> 00:11:39,040
and then it's slowing uh slowly going

00:11:37,680 --> 00:11:40,800
down again

00:11:39,040 --> 00:11:43,040
so that gives you an idea about what's

00:11:40,800 --> 00:11:44,640
your backlog size and how it evolves if

00:11:43,040 --> 00:11:46,160
it's growing up if it's going down if

00:11:44,640 --> 00:11:48,240
you're managing uh

00:11:46,160 --> 00:11:50,079
if you're managing to to keep up with it

00:11:48,240 --> 00:11:52,000
uh so this is the federal infrastructure

00:11:50,079 --> 00:11:52,880
tracker if you look at the same page for

00:11:52,000 --> 00:11:56,079
the pager

00:11:52,880 --> 00:11:57,839
project you'll see an upward trend

00:11:56,079 --> 00:11:59,279
on the number of tickets opened over the

00:11:57,839 --> 00:12:00,880
last year

00:11:59,279 --> 00:12:02,639
just because we have more people asking

00:12:00,880 --> 00:12:04,480
for things than uh then we're able to

00:12:02,639 --> 00:12:06,320
keep up with

00:12:04,480 --> 00:12:08,560
uh so that's interesting we first added

00:12:06,320 --> 00:12:10,399
a few new api endpoints

00:12:08,560 --> 00:12:11,920
i don't think this list is exhaustive

00:12:10,399 --> 00:12:13,200
but these are the ones which i wanted to

00:12:11,920 --> 00:12:16,160
put forward here

00:12:13,200 --> 00:12:18,079
we've added one for commits information

00:12:16,160 --> 00:12:19,839
uh we have had in one that lists the

00:12:18,079 --> 00:12:21,440
files in the git repo and we've added

00:12:19,839 --> 00:12:23,120
the possibility of deleting a project

00:12:21,440 --> 00:12:24,160
via the api where the possibility of

00:12:23,120 --> 00:12:25,600
creating so far

00:12:24,160 --> 00:12:27,279
this is adding the possibility of

00:12:25,600 --> 00:12:29,440
deleting

00:12:27,279 --> 00:12:30,880
so the commits info is uh this is an

00:12:29,440 --> 00:12:33,360
example of a commit

00:12:30,880 --> 00:12:35,600
uh you can see the author's name we

00:12:33,360 --> 00:12:38,720
don't display the other email

00:12:35,600 --> 00:12:41,519
you saw you have the commit date uh cut

00:12:38,720 --> 00:12:41,519
time as uh

00:12:44,160 --> 00:12:47,839
the number of seconds since the 1st of

00:12:46,320 --> 00:12:53,839
january 196

00:12:47,839 --> 00:12:53,839
17 that's timestamp uh

00:12:54,880 --> 00:12:58,240
what is the time offset based on

00:12:58,880 --> 00:13:02,320
that's the number of seconds that's uh

00:13:00,639 --> 00:13:05,040
directly what pi git uh

00:13:02,320 --> 00:13:06,079
g2 gives us oh okay and for the commit

00:13:05,040 --> 00:13:08,000
so these are information

00:13:06,079 --> 00:13:09,680
which if i get your extracts from this i

00:13:08,000 --> 00:13:12,720
guess that's the utc

00:13:09,680 --> 00:13:14,560
hours in in seconds that's what that

00:13:12,720 --> 00:13:16,880
looks like

00:13:14,560 --> 00:13:18,800
that's probably yeah that should be it

00:13:16,880 --> 00:13:20,639
it's it's gonna be the so it's gonna be

00:13:18,800 --> 00:13:22,240
the commit time and the question is is

00:13:20,639 --> 00:13:24,959
the comment time in local

00:13:22,240 --> 00:13:26,880
time or in utc and then the time zone

00:13:24,959 --> 00:13:29,040
it's probably going to be coming time in

00:13:26,880 --> 00:13:30,399
local time and then the offset records

00:13:29,040 --> 00:13:33,279
the difference between the local time

00:13:30,399 --> 00:13:36,320
and the utc time for that

00:13:33,279 --> 00:13:38,079
so yeah fun uh then we have the the

00:13:36,320 --> 00:13:39,279
committer because uh commits can be

00:13:38,079 --> 00:13:40,880
authored by someone and pushed by

00:13:39,279 --> 00:13:41,920
someone else uh in which

00:13:40,880 --> 00:13:44,240
in which case the author and the

00:13:41,920 --> 00:13:46,399
committer differ in this case uh

00:13:44,240 --> 00:13:48,880
there was a pro request that i merged

00:13:46,399 --> 00:13:50,160
and therefore i did not push the commit

00:13:48,880 --> 00:13:52,480
and neil did

00:13:50,160 --> 00:13:54,160
then you have the commit ash itself you

00:13:52,480 --> 00:13:56,240
have the message of the commit

00:13:54,160 --> 00:13:58,639
and finally you have the parents so the

00:13:56,240 --> 00:13:59,199
parents is actually a list because merch

00:13:58,639 --> 00:14:02,079
commits

00:13:59,199 --> 00:14:04,320
will have multiple parents this is a

00:14:02,079 --> 00:14:05,680
fast forward so you have only one parent

00:14:04,320 --> 00:14:09,600
and then you have the ash of the tree

00:14:05,680 --> 00:14:11,839
itself you know if you ever need it

00:14:09,600 --> 00:14:13,360
second example of an outcome is the the

00:14:11,839 --> 00:14:14,639
number of files in git so you can now

00:14:13,360 --> 00:14:16,720
browse

00:14:14,639 --> 00:14:18,399
the git repository to figure out if

00:14:16,720 --> 00:14:21,199
there are files or folders

00:14:18,399 --> 00:14:23,680
uh just using the api uh you can see the

00:14:21,199 --> 00:14:25,839
content url here is basically so

00:14:23,680 --> 00:14:26,959
the first item is a is the along big

00:14:25,839 --> 00:14:28,639
folder the name is

00:14:26,959 --> 00:14:30,240
at the name of the folder the pass is

00:14:28,639 --> 00:14:32,480
it's at the top level of the

00:14:30,240 --> 00:14:33,360
the project so the pass is just alembic

00:14:32,480 --> 00:14:35,600
uh if you

00:14:33,360 --> 00:14:36,880
if i had a full folder under alembics or

00:14:35,600 --> 00:14:39,760
version folders after

00:14:36,880 --> 00:14:40,800
alembic it would have an arambik slash

00:14:39,760 --> 00:14:43,519
versions

00:14:40,800 --> 00:14:44,000
uh it says it's a folder and not a file

00:14:43,519 --> 00:14:45,760
and then

00:14:44,000 --> 00:14:47,600
you have the content url so if you use

00:14:45,760 --> 00:14:49,199
the content url then

00:14:47,600 --> 00:14:51,600
and create that one then you will get

00:14:49,199 --> 00:14:52,240
one level uh lower in the in the git

00:14:51,600 --> 00:14:54,320
repo

00:14:52,240 --> 00:14:56,560
and go into what's the content of that

00:14:54,320 --> 00:14:57,839
alembic folder itself so you can now

00:14:56,560 --> 00:14:59,360
browse the contents of the get

00:14:57,839 --> 00:15:01,600
repositories

00:14:59,360 --> 00:15:04,959
via the api without having to do an

00:15:01,600 --> 00:15:04,959
actual git clone or anything

00:15:05,199 --> 00:15:11,360
we've also done a number of changes to

00:15:09,120 --> 00:15:13,040
tobacco itself we've parted the test

00:15:11,360 --> 00:15:15,040
suite to run with pi tests which is

00:15:13,040 --> 00:15:18,240
pretty nice because we were running nose

00:15:15,040 --> 00:15:21,199
until now and noz is no longer supported

00:15:18,240 --> 00:15:22,880
uh we are serving statics files with

00:15:21,199 --> 00:15:24,160
white noise

00:15:22,880 --> 00:15:26,399
i have no idea if i'm pronouncing that

00:15:24,160 --> 00:15:28,000
one correctly to be honest um

00:15:26,399 --> 00:15:29,600
and it's it's pretty nice because it

00:15:28,000 --> 00:15:32,079
means the

00:15:29,600 --> 00:15:34,399
apache the the the web server so apache

00:15:32,079 --> 00:15:36,240
or g unicorn is not the one serving the

00:15:34,399 --> 00:15:37,920
the assets which actually makes

00:15:36,240 --> 00:15:41,199
deploying packer and openshifts a lot

00:15:37,920 --> 00:15:43,120
more a lot easier we've also added the

00:15:41,199 --> 00:15:45,360
the possibility of specifying the

00:15:43,120 --> 00:15:46,959
default branch of the git repository

00:15:45,360 --> 00:15:48,880
upon creation

00:15:46,959 --> 00:15:50,959
so we've had the opportunity of

00:15:48,880 --> 00:15:53,360
specifying the default branch for a long

00:15:50,959 --> 00:15:54,720
long time in packer

00:15:53,360 --> 00:15:56,560
pretty much as far as i can remember

00:15:54,720 --> 00:15:58,240
basically it's in the settings and then

00:15:56,560 --> 00:15:59,199
you have the the default branch and you

00:15:58,240 --> 00:16:01,600
can set well

00:15:59,199 --> 00:16:02,399
uh you know master develop whichever you

00:16:01,600 --> 00:16:04,880
want

00:16:02,399 --> 00:16:05,839
um but you know you had to create a

00:16:04,880 --> 00:16:08,000
project

00:16:05,839 --> 00:16:09,839
push something and then go to the to the

00:16:08,000 --> 00:16:11,440
ui and specify that

00:16:09,839 --> 00:16:13,440
now you can directly do that at the

00:16:11,440 --> 00:16:15,279
creation there is one

00:16:13,440 --> 00:16:16,480
one thing to be aware of though is that

00:16:15,279 --> 00:16:19,040
if you create

00:16:16,480 --> 00:16:19,519
a git project on pager set the default

00:16:19,040 --> 00:16:23,199
branch

00:16:19,519 --> 00:16:25,199
for example to develop and git clone

00:16:23,199 --> 00:16:27,600
the the git repository unless you've

00:16:25,199 --> 00:16:29,440
asked for the the readme to be created

00:16:27,600 --> 00:16:32,000
so if you didn't ask following me to be

00:16:29,440 --> 00:16:34,399
created the git represent

00:16:32,000 --> 00:16:36,000
the git repository is going to be empty

00:16:34,399 --> 00:16:38,160
and by default

00:16:36,000 --> 00:16:39,440
uh git is going to make to place you in

00:16:38,160 --> 00:16:42,160
the master branch

00:16:39,440 --> 00:16:43,920
so at that point you'll have to do a git

00:16:42,160 --> 00:16:47,040
checkout minus b

00:16:43,920 --> 00:16:48,079
develop add your files there git push

00:16:47,040 --> 00:16:49,680
develop and

00:16:48,079 --> 00:16:51,199
everybody else who is going to clone

00:16:49,680 --> 00:16:53,600
your git repo is going to end up

00:16:51,199 --> 00:16:56,560
directly in the develop branch then

00:16:53,600 --> 00:16:56,959
but the first the first operations on on

00:16:56,560 --> 00:16:59,759
the

00:16:56,959 --> 00:17:01,600
anti-repo that you just cloned uh will

00:16:59,759 --> 00:17:03,920
be on the master branch even if

00:17:01,600 --> 00:17:05,439
the even if on pager you've set the

00:17:03,920 --> 00:17:06,160
default branch to be something else so

00:17:05,439 --> 00:17:08,720
note that

00:17:06,160 --> 00:17:10,799
um there's something that may like one

00:17:08,720 --> 00:17:13,199
thing that for this particular feature

00:17:10,799 --> 00:17:14,240
um at least that i'm tracking and i

00:17:13,199 --> 00:17:16,000
don't know whether this will

00:17:14,240 --> 00:17:17,760
make this particular feature better is

00:17:16,000 --> 00:17:20,000
that git is

00:17:17,760 --> 00:17:21,919
making this configurable i don't know if

00:17:20,000 --> 00:17:23,760
it's possible for us right now

00:17:21,919 --> 00:17:25,760
to make it so that we can make a default

00:17:23,760 --> 00:17:28,079
branch set

00:17:25,760 --> 00:17:30,720
um in an empty repo by setting the

00:17:28,079 --> 00:17:32,880
property in the bare repo that we create

00:17:30,720 --> 00:17:34,000
but if that is something that we can do

00:17:32,880 --> 00:17:36,400
um that

00:17:34,000 --> 00:17:38,799
might actually enhance this feature i i

00:17:36,400 --> 00:17:41,280
my reading of the feature in git itself

00:17:38,799 --> 00:17:42,240
is that this is not yet the case but it

00:17:41,280 --> 00:17:45,679
could be

00:17:42,240 --> 00:17:47,200
so um we will probably

00:17:45,679 --> 00:17:50,080
eventually be able to fix that

00:17:47,200 --> 00:17:50,080
particular quark

00:17:51,840 --> 00:17:56,640
which would be nice so a few of the

00:17:54,960 --> 00:17:58,880
changes that we've made here actually

00:17:56,640 --> 00:18:00,880
has made peggy a lot easier to deploy on

00:17:58,880 --> 00:18:02,400
containers in an open shift

00:18:00,880 --> 00:18:03,919
for example the fact that you can do

00:18:02,400 --> 00:18:05,679
http push now

00:18:03,919 --> 00:18:07,200
means that you no longer have to deal

00:18:05,679 --> 00:18:10,240
with ssh and

00:18:07,200 --> 00:18:13,280
access of the of ssh

00:18:10,240 --> 00:18:14,640
to the git repository and managing this

00:18:13,280 --> 00:18:16,799
so that's one less container to take

00:18:14,640 --> 00:18:18,559
care of and that's one less

00:18:16,799 --> 00:18:20,000
piece of security that you need to to

00:18:18,559 --> 00:18:22,480
look after

00:18:20,000 --> 00:18:24,320
white noise is also nice because it

00:18:22,480 --> 00:18:27,200
makes the the configuration configuring

00:18:24,320 --> 00:18:28,799
pager to work on container a lot easier

00:18:27,200 --> 00:18:31,039
again you don't have to deal with apache

00:18:28,799 --> 00:18:33,039
you can just use a unicorn

00:18:31,039 --> 00:18:34,400
and it will uh and bagger will take care

00:18:33,039 --> 00:18:35,919
of this entire section of the

00:18:34,400 --> 00:18:38,160
configuration for you

00:18:35,919 --> 00:18:40,000
and i have checked it actually so one of

00:18:38,160 --> 00:18:42,640
the things we were doing to

00:18:40,000 --> 00:18:44,240
force reload of statics files upon

00:18:42,640 --> 00:18:47,840
releases was that we

00:18:44,240 --> 00:18:50,080
we would append the the version number

00:18:47,840 --> 00:18:51,840
at the end of the static file so you

00:18:50,080 --> 00:18:56,240
know if you go from pager

00:18:51,840 --> 00:18:58,160
510 to 511 the url changes and therefore

00:18:56,240 --> 00:19:00,240
your browser reloads the file

00:18:58,160 --> 00:19:02,000
uh with white noise anymore with white

00:19:00,240 --> 00:19:03,840
wise we don't need this anymore so we'll

00:19:02,000 --> 00:19:05,120
just be able to remove that uh that

00:19:03,840 --> 00:19:07,360
little trickery

00:19:05,120 --> 00:19:08,880
and uh and white nice is smart enough to

00:19:07,360 --> 00:19:09,679
figure out if the file has changed or

00:19:08,880 --> 00:19:12,720
not

00:19:09,679 --> 00:19:14,480
and and we'll let you read or know

00:19:12,720 --> 00:19:16,640
detail or use your cache version for

00:19:14,480 --> 00:19:19,280
that

00:19:16,640 --> 00:19:20,480
so so now let's move from uh from the

00:19:19,280 --> 00:19:24,000
upstream to

00:19:20,480 --> 00:19:25,280
to the disk it well we've over the last

00:19:24,000 --> 00:19:26,480
year we've added integration with

00:19:25,280 --> 00:19:29,520
release monitoring

00:19:26,480 --> 00:19:31,840
uh so anita integration you can just

00:19:29,520 --> 00:19:33,919
specify uh if you want you know no

00:19:31,840 --> 00:19:34,960
monitoring monitoring or monitoring and

00:19:33,919 --> 00:19:37,039
scratch builds

00:19:34,960 --> 00:19:38,000
and anita creates that information from

00:19:37,039 --> 00:19:41,200
the api

00:19:38,000 --> 00:19:41,200
and behaves accordingly

00:19:42,480 --> 00:19:46,960
we have added bugzilla overrides so what

00:19:45,840 --> 00:19:49,600
you see on the

00:19:46,960 --> 00:19:52,720
right on the right hand side is the the

00:19:49,600 --> 00:19:54,320
screenshot of the information you see

00:19:52,720 --> 00:19:56,559
bugzilla signee for federer

00:19:54,320 --> 00:19:58,160
and epl uh you see two different people

00:19:56,559 --> 00:20:00,320
here if you click on the edit

00:19:58,160 --> 00:20:01,440
then you see uh the screenshot on the

00:20:00,320 --> 00:20:03,679
left side

00:20:01,440 --> 00:20:04,880
uh and you can reset to default and that

00:20:03,679 --> 00:20:07,039
will be the

00:20:04,880 --> 00:20:10,080
the main admin of the project or you can

00:20:07,039 --> 00:20:10,080
set it to someone else

00:20:10,880 --> 00:20:14,000
just there is just one thing there is

00:20:12,640 --> 00:20:16,960
that if you are

00:20:14,000 --> 00:20:17,360
the the epl field will show regardless

00:20:16,960 --> 00:20:21,360
of

00:20:17,360 --> 00:20:24,080
the of the project act

00:20:21,360 --> 00:20:25,200
uh branches or support in bachelor for

00:20:24,080 --> 00:20:28,559
epl

00:20:25,200 --> 00:20:29,360
uh that is um yeah that's just something

00:20:28,559 --> 00:20:32,159
to be aware of

00:20:29,360 --> 00:20:33,520
if your package doesn't have your field

00:20:32,159 --> 00:20:36,880
if it does then you can

00:20:33,520 --> 00:20:36,880
set it to whatever you want

00:20:37,440 --> 00:20:41,120
something else that we've added and that

00:20:39,280 --> 00:20:42,640
was something that just landed this

00:20:41,120 --> 00:20:44,159
morning because i love deploying things

00:20:42,640 --> 00:20:46,400
just before confronts

00:20:44,159 --> 00:20:48,400
uh i guess visual conference makes that

00:20:46,400 --> 00:20:50,480
a little bit less risky though

00:20:48,400 --> 00:20:52,480
single click or fan so when you are

00:20:50,480 --> 00:20:55,200
finding a product when you give

00:20:52,480 --> 00:20:56,960
the project to someone uh in this case

00:20:55,200 --> 00:20:57,679
if on this bit you were to give the

00:20:56,960 --> 00:21:00,720
project

00:20:57,679 --> 00:21:02,320
to your fan user uh you would still

00:21:00,720 --> 00:21:04,000
have access to the project it normally

00:21:02,320 --> 00:21:05,919
doesn't remove you from the project you

00:21:04,000 --> 00:21:08,880
just change the main admin

00:21:05,919 --> 00:21:09,600
and it doesn't change your watch studies

00:21:08,880 --> 00:21:11,919
so if you're

00:21:09,600 --> 00:21:13,200
uh if you're watching the project then

00:21:11,919 --> 00:21:14,960
after that after you give

00:21:13,200 --> 00:21:17,760
and potentially remove yourself you will

00:21:14,960 --> 00:21:20,480
still be set as watching the the project

00:21:17,760 --> 00:21:22,480
which makes you cc'd on bugzilla tickets

00:21:20,480 --> 00:21:25,280
and so on

00:21:22,480 --> 00:21:26,880
your phone uh your phone button here

00:21:25,280 --> 00:21:29,120
will do everything in one go for you

00:21:26,880 --> 00:21:30,720
and that is a feature from mikhail so if

00:21:29,120 --> 00:21:32,799
you see him on rsc feel free to give him

00:21:30,720 --> 00:21:34,640
cookies i'm sure he'll like it

00:21:32,799 --> 00:21:36,880
it basically will give to the the

00:21:34,640 --> 00:21:38,240
project to your phone user

00:21:36,880 --> 00:21:40,080
faction would do but you would also

00:21:38,240 --> 00:21:41,440
remove you from the

00:21:40,080 --> 00:21:43,120
from the package so you won't have the

00:21:41,440 --> 00:21:44,960
access anymore and it will reset the

00:21:43,120 --> 00:21:46,400
watch status of the project so

00:21:44,960 --> 00:21:48,559
if you use that button which i highly

00:21:46,400 --> 00:21:52,720
encourage uh you basically get

00:21:48,559 --> 00:21:55,360
everything done for you in one go in

00:21:52,720 --> 00:21:58,080
it also sends a federating notification

00:21:55,360 --> 00:22:02,159
on the bus that this project was offered

00:21:58,080 --> 00:22:04,559
and we have a dedicated uh our fan topic

00:22:02,159 --> 00:22:05,280
and the opposite is true also we've

00:22:04,559 --> 00:22:09,360
added uh

00:22:05,280 --> 00:22:11,280
the single click adapt so every so fan

00:22:09,360 --> 00:22:12,960
actually you know you have a single

00:22:11,280 --> 00:22:14,640
button and it will make you demand a

00:22:12,960 --> 00:22:17,039
minute project it will send a

00:22:14,640 --> 00:22:20,159
notification about it as well

00:22:17,039 --> 00:22:21,520
the only thing is that you will see um

00:22:20,159 --> 00:22:24,000
you will when you load the page you'll

00:22:21,520 --> 00:22:25,919
see a button is disabled

00:22:24,000 --> 00:22:27,039
it will appear and not and that's

00:22:25,919 --> 00:22:27,600
because it's going to check if the

00:22:27,039 --> 00:22:30,320
package

00:22:27,600 --> 00:22:32,080
is retired or not so if the package is

00:22:30,320 --> 00:22:34,799
required you won't be able to earn a

00:22:32,080 --> 00:22:38,240
fund it without going through a real

00:22:34,799 --> 00:22:40,400
process um if the package is oh

00:22:38,240 --> 00:22:41,679
but not retired uh you'll just click

00:22:40,400 --> 00:22:44,720
that one button

00:22:41,679 --> 00:22:46,640
and the package will be yours

00:22:44,720 --> 00:22:48,480
so those are the some of the things

00:22:46,640 --> 00:22:50,159
we've worked on this year

00:22:48,480 --> 00:22:52,320
uh we do have a few more ideas and

00:22:50,159 --> 00:22:55,840
roadmaps and i'll let nils uh

00:22:52,320 --> 00:22:55,840
comment too

00:22:55,919 --> 00:23:01,520
so uh with the with the road

00:22:59,039 --> 00:23:02,880
our current um existing roadmap that

00:23:01,520 --> 00:23:05,440
we're looking at right now this is

00:23:02,880 --> 00:23:07,200
like within the next few months or so

00:23:05,440 --> 00:23:09,679
depending on how things work out

00:23:07,200 --> 00:23:10,960
uh we are going to be retiring a whole

00:23:09,679 --> 00:23:11,520
bunch of functionality we don't use

00:23:10,960 --> 00:23:14,080
anymore

00:23:11,520 --> 00:23:15,120
and that's get a light um and we're

00:23:14,080 --> 00:23:16,720
going to switch to

00:23:15,120 --> 00:23:18,400
the packer off back end we'll probably

00:23:16,720 --> 00:23:19,520
use packer authorized keys for the

00:23:18,400 --> 00:23:20,960
default because

00:23:19,520 --> 00:23:22,880
that doesn't require people to figure

00:23:20,960 --> 00:23:23,600
out how to configure sshd which is no

00:23:22,880 --> 00:23:26,320
fun

00:23:23,600 --> 00:23:27,919
um but we did document all that so yay

00:23:26,320 --> 00:23:29,280
that should be very straightforward for

00:23:27,919 --> 00:23:31,360
people to

00:23:29,280 --> 00:23:33,120
go that route repos spanner support

00:23:31,360 --> 00:23:36,960
repos spanner is unfortunately

00:23:33,120 --> 00:23:37,440
um kind of dead and it doesn't quite

00:23:36,960 --> 00:23:40,159
work

00:23:37,440 --> 00:23:42,000
even when it wasn't dead so we're just

00:23:40,159 --> 00:23:43,039
going to rip it out and that'll simplify

00:23:42,000 --> 00:23:44,480
things considerably

00:23:43,039 --> 00:23:46,080
if somebody wants to revive this

00:23:44,480 --> 00:23:47,279
particular functionality of being able

00:23:46,080 --> 00:23:50,559
to do

00:23:47,279 --> 00:23:52,159
clustered or h a git storage i mean

00:23:50,559 --> 00:23:53,919
yeah we can look at it again i mean it's

00:23:52,159 --> 00:23:55,600
just going to be remove and get we can

00:23:53,919 --> 00:23:58,720
always revive it later

00:23:55,600 --> 00:23:59,919
python 2 support uh that is the only

00:23:58,720 --> 00:24:01,360
thing blocking this at this point is

00:23:59,919 --> 00:24:04,559
that we've got to upgrade

00:24:01,360 --> 00:24:06,159
packer.io because it's the only server

00:24:04,559 --> 00:24:07,520
left of the packer instances that are

00:24:06,159 --> 00:24:10,400
actually out in the wild

00:24:07,520 --> 00:24:12,559
that runs on on python 2. everybody else

00:24:10,400 --> 00:24:15,120
is python 3.

00:24:12,559 --> 00:24:16,000
fed message support obviously i think

00:24:15,120 --> 00:24:18,000
this has been

00:24:16,000 --> 00:24:20,000
beaten to death enough last year we

00:24:18,000 --> 00:24:22,320
switched from using fed message to

00:24:20,000 --> 00:24:24,559
fedora messaging based on amqp

00:24:22,320 --> 00:24:25,520
we're the only active instance of fed

00:24:24,559 --> 00:24:28,559
message today

00:24:25,520 --> 00:24:29,520
and ours is moribund is the nicest way

00:24:28,559 --> 00:24:31,520
to put it

00:24:29,520 --> 00:24:33,120
and so that's gonna that that'll be a

00:24:31,520 --> 00:24:35,440
nice bit of cleanup

00:24:33,120 --> 00:24:37,279
um oh right and and i forgot about

00:24:35,440 --> 00:24:38,159
centos also using python too yeah we

00:24:37,279 --> 00:24:40,320
need to

00:24:38,159 --> 00:24:42,640
we will we'll we'll get both of these

00:24:40,320 --> 00:24:45,679
guys both centos

00:24:42,640 --> 00:24:46,720
dot git.centus.org and packer.io up to

00:24:45,679 --> 00:24:49,520
the

00:24:46,720 --> 00:24:50,880
to using the el8 builds running on

00:24:49,520 --> 00:24:51,279
python 3 and then we'll be good to go

00:24:50,880 --> 00:24:53,120
there

00:24:51,279 --> 00:24:54,559
um but a couple of things that are kind

00:24:53,120 --> 00:24:57,039
of exciting that i think

00:24:54,559 --> 00:24:58,559
a lot of people will like is just little

00:24:57,039 --> 00:25:01,520
quality of life improvements

00:24:58,559 --> 00:25:03,360
is that moving to support kerberos as an

00:25:01,520 --> 00:25:05,520
authentication mechanism

00:25:03,360 --> 00:25:07,679
for everything um so we already do this

00:25:05,520 --> 00:25:10,400
for code you coach he uses kerberos

00:25:07,679 --> 00:25:11,520
um and fed package can already

00:25:10,400 --> 00:25:13,919
orchestrate

00:25:11,520 --> 00:25:16,080
kerberos um authentication tickets being

00:25:13,919 --> 00:25:18,799
passed through to different services

00:25:16,080 --> 00:25:20,480
so adding support for this into packer

00:25:18,799 --> 00:25:22,080
will make it so that people don't have

00:25:20,480 --> 00:25:25,279
to deal with

00:25:22,080 --> 00:25:27,120
different ways to

00:25:25,279 --> 00:25:28,640
authenticate across the services to

00:25:27,120 --> 00:25:29,840
complete the basic workflow so you do

00:25:28,640 --> 00:25:31,840
knit once

00:25:29,840 --> 00:25:34,159
then you'll be able to commit you'll be

00:25:31,840 --> 00:25:36,880
able to push you'll be able to build

00:25:34,159 --> 00:25:38,720
all of it um and this is pushed through

00:25:36,880 --> 00:25:40,320
https so

00:25:38,720 --> 00:25:42,640
um at that point we will no longer

00:25:40,320 --> 00:25:44,240
require that you need ssh access to do

00:25:42,640 --> 00:25:47,440
anything

00:25:44,240 --> 00:25:49,919
so yeah um so

00:25:47,440 --> 00:25:51,520
question in here cross repo code

00:25:49,919 --> 00:25:52,480
indexing you want to find usages of a

00:25:51,520 --> 00:25:54,880
macro

00:25:52,480 --> 00:25:56,559
um so i've been looking into this

00:25:54,880 --> 00:26:00,159
particular idea

00:25:56,559 --> 00:26:03,279
i am unsure of how to do this

00:26:00,159 --> 00:26:05,039
mostly because i think every avenue

00:26:03,279 --> 00:26:06,000
leads to us deploying elasticsearch

00:26:05,039 --> 00:26:08,880
somewhere

00:26:06,000 --> 00:26:10,720
which i don't know how i feel about that

00:26:08,880 --> 00:26:13,120
um

00:26:10,720 --> 00:26:14,480
it could work um if anyone's got any

00:26:13,120 --> 00:26:15,520
ideas of like how to do this

00:26:14,480 --> 00:26:17,679
implementation

00:26:15,520 --> 00:26:19,120
keep in mind packer itself is written in

00:26:17,679 --> 00:26:22,240
python we would really

00:26:19,120 --> 00:26:24,000
like to like integrate it nicely with

00:26:22,240 --> 00:26:27,520
all the other stuff that we have

00:26:24,000 --> 00:26:29,679
um please come and talk to us about it

00:26:27,520 --> 00:26:32,320
because like that would really be very

00:26:29,679 --> 00:26:34,480
helpful i think for a lot of use cases

00:26:32,320 --> 00:26:36,159
um and to the best of my knowledge there

00:26:34,480 --> 00:26:37,520
is no open source solution out there

00:26:36,159 --> 00:26:40,240
right now that does

00:26:37,520 --> 00:26:42,480
this sort of full global indexing to let

00:26:40,240 --> 00:26:45,440
you search and do stuff like that

00:26:42,480 --> 00:26:46,400
um so that is definitely something that

00:26:45,440 --> 00:26:48,080
i would

00:26:46,400 --> 00:26:50,480
i would be interested in if somebody

00:26:48,080 --> 00:26:53,520
wants to file an issue and ask for it

00:26:50,480 --> 00:26:55,520
uh i uh

00:26:53,520 --> 00:26:56,840
pingo i can't answer this question so

00:26:55,520 --> 00:26:58,240
what is the future of

00:26:56,840 --> 00:27:01,279
source.fedorproject.org

00:26:58,240 --> 00:27:04,799
i think you probably want to

00:27:01,279 --> 00:27:06,240
uh wait for the cpe talk that's going to

00:27:04,799 --> 00:27:08,559
happen later on in

00:27:06,240 --> 00:27:09,919
in nest um that's probably where that's

00:27:08,559 --> 00:27:11,840
going to be answered

00:27:09,919 --> 00:27:13,840
but i would say that right now i would

00:27:11,840 --> 00:27:14,960
say that it's it's probably going to

00:27:13,840 --> 00:27:17,840
stay

00:27:14,960 --> 00:27:19,919
um impacter based because there's a ton

00:27:17,840 --> 00:27:21,039
of integrations and support and custom

00:27:19,919 --> 00:27:24,559
functionality

00:27:21,039 --> 00:27:27,120
that is built around um our message bus

00:27:24,559 --> 00:27:28,960
around the api that we have for packer

00:27:27,120 --> 00:27:32,399
as well as a lot of other things so

00:27:28,960 --> 00:27:35,360
like if it's if the

00:27:32,399 --> 00:27:36,240
yeah so that for now just assume it's

00:27:35,360 --> 00:27:38,399
staying as it is

00:27:36,240 --> 00:27:39,679
and and don't worry about it we'll

00:27:38,399 --> 00:27:42,080
figure it out later

00:27:39,679 --> 00:27:43,679
um but yeah so like that's that's what

00:27:42,080 --> 00:27:44,159
we've got right now for the initial

00:27:43,679 --> 00:27:48,240
robot

00:27:44,159 --> 00:27:49,360
ideas um and so reasons for orphaning is

00:27:48,240 --> 00:27:50,240
something that's coming up next i

00:27:49,360 --> 00:27:53,840
believe

00:27:50,240 --> 00:27:54,960
uh mikhail has already got some initial

00:27:53,840 --> 00:27:56,960
work done for this

00:27:54,960 --> 00:27:58,640
and it'll just need to be plumbed

00:27:56,960 --> 00:27:59,440
through for a future for the future

00:27:58,640 --> 00:28:01,360
release

00:27:59,440 --> 00:28:02,799
um automatically notifying the devil

00:28:01,360 --> 00:28:03,520
list on the new orphan this is more

00:28:02,799 --> 00:28:06,799
message bus

00:28:03,520 --> 00:28:08,559
fun stuff um but yeah we this is these

00:28:06,799 --> 00:28:11,679
are all things that

00:28:08,559 --> 00:28:14,640
uh yeah yeah the julian mentions

00:28:11,679 --> 00:28:16,240
in the in the chat that the re adding

00:28:14,640 --> 00:28:18,880
the reason for orphaning is

00:28:16,240 --> 00:28:19,760
actually already a pull request that we

00:28:18,880 --> 00:28:22,080
are reviewing

00:28:19,760 --> 00:28:23,279
and that will and once we've merged that

00:28:22,080 --> 00:28:25,120
and cut a release for that that'll

00:28:23,279 --> 00:28:28,240
actually become available to everybody

00:28:25,120 --> 00:28:31,360
um notifying the devil new orphan

00:28:28,240 --> 00:28:33,200
that's gonna take probably landon 512

00:28:31,360 --> 00:28:35,120
and the notifications we just need to

00:28:33,200 --> 00:28:38,240
figure out if we

00:28:35,120 --> 00:28:39,360
put this as part of the of aguero if we

00:28:38,240 --> 00:28:42,080
use uh

00:28:39,360 --> 00:28:44,080
a third party thing like toddlers uh to

00:28:42,080 --> 00:28:46,320
do that

00:28:44,080 --> 00:28:47,840
yeah it might make sense to do it in the

00:28:46,320 --> 00:28:51,120
toddler's thing since it would

00:28:47,840 --> 00:28:54,480
um but because then that way it will be

00:28:51,120 --> 00:28:57,760
asynchronous and scale

00:28:54,480 --> 00:29:00,159
yeah so and to

00:28:57,760 --> 00:29:02,320
before we open up two more questions um

00:29:00,159 --> 00:29:05,520
some statistics about the projects

00:29:02,320 --> 00:29:06,960
um so this is basically uh every year

00:29:05,520 --> 00:29:08,880
the number of commits the number of

00:29:06,960 --> 00:29:10,480
contributors and the number of tickets

00:29:08,880 --> 00:29:11,120
opened and closed and progressed open

00:29:10,480 --> 00:29:13,360
and closed

00:29:11,120 --> 00:29:14,320
for the year so you can see that

00:29:13,360 --> 00:29:18,399
definitely

00:29:14,320 --> 00:29:20,960
2019 and 2020 are lower are much

00:29:18,399 --> 00:29:21,440
slower from the development side than

00:29:20,960 --> 00:29:23,440
they

00:29:21,440 --> 00:29:26,000
than we used to be the number of commits

00:29:23,440 --> 00:29:29,360
as was divided by three in 29

00:29:26,000 --> 00:29:30,559
in 2019 and uh divided by two again in

00:29:29,360 --> 00:29:33,039
00:29:30,559 --> 00:29:34,640
uh there are a few reasons for that uh i

00:29:33,039 --> 00:29:37,760
am no longer working on pager

00:29:34,640 --> 00:29:39,520
uh primarily uh

00:29:37,760 --> 00:29:41,360
so there is that there the number of

00:29:39,520 --> 00:29:42,960
contributors has decreased a little bit

00:29:41,360 --> 00:29:44,640
although holland is a child here is

00:29:42,960 --> 00:29:47,440
definitely one of the most active one

00:29:44,640 --> 00:29:49,360
at this day and nil is they're always uh

00:29:47,440 --> 00:29:49,760
good at doing in the the people relation

00:29:49,360 --> 00:29:51,520
or the

00:29:49,760 --> 00:29:54,320
the public relations side of the other

00:29:51,520 --> 00:29:55,600
project and doing a good job at this

00:29:54,320 --> 00:29:58,240
but it's interesting to look at the

00:29:55,600 --> 00:29:58,960
number of tickets closed so 2019 was not

00:29:58,240 --> 00:30:01,919
a good year

00:29:58,960 --> 00:30:02,880
uh we only closed it 36 of the ticket

00:30:01,919 --> 00:30:06,240
opened

00:30:02,880 --> 00:30:07,440
of the amount of ticket open 2019 2020

00:30:06,240 --> 00:30:10,240
is actually looking much

00:30:07,440 --> 00:30:12,159
nicer we are closing about 60 percent of

00:30:10,240 --> 00:30:14,159
the number of tickets that our plans

00:30:12,159 --> 00:30:15,600
uh but you we can see that the number

00:30:14,159 --> 00:30:17,520
for request

00:30:15,600 --> 00:30:19,679
the number of pro requests closed is

00:30:17,520 --> 00:30:21,120
actually uh we always basically

00:30:19,679 --> 00:30:22,960
every contribution that is made to

00:30:21,120 --> 00:30:24,640
beggar uh is closed

00:30:22,960 --> 00:30:26,320
uh we do have a few pro requests that

00:30:24,640 --> 00:30:27,360
are that are still open to this day but

00:30:26,320 --> 00:30:29,279
most of them are

00:30:27,360 --> 00:30:32,159
actually uh integrated and reviewed and

00:30:29,279 --> 00:30:34,880
integrated as they are opened

00:30:32,159 --> 00:30:36,480
so yeah we have more tickets we have

00:30:34,880 --> 00:30:37,760
more tickets opening than we have uh

00:30:36,480 --> 00:30:40,559
then we're about to close but

00:30:37,760 --> 00:30:41,919
the contributions that are made uh

00:30:40,559 --> 00:30:44,000
normally makes it uh

00:30:41,919 --> 00:30:46,559
into the code base and that's quite nice

00:30:44,000 --> 00:30:48,000
to see uh the number of contributors is

00:30:46,559 --> 00:30:50,480
also interesting to see it definitely

00:30:48,000 --> 00:30:53,600
dropped over the last few years

00:30:50,480 --> 00:30:56,240
but it's also 29 20 20 looks to be

00:30:53,600 --> 00:30:58,080
in the same range of 2019 uh which is

00:30:56,240 --> 00:31:00,159
also nice

00:30:58,080 --> 00:31:02,799
so yeah there is a we can see there is a

00:31:00,159 --> 00:31:04,960
dent we can see there is a

00:31:02,799 --> 00:31:06,799
lower turnaround of code than than we

00:31:04,960 --> 00:31:09,120
have seen uh years before

00:31:06,799 --> 00:31:10,240
uh we are so reaching project maturity

00:31:09,120 --> 00:31:11,600
to some extent

00:31:10,240 --> 00:31:13,519
uh i know some people still have

00:31:11,600 --> 00:31:15,919
problems with the ui with some

00:31:13,519 --> 00:31:18,480
there are still bugs for sure uh but in

00:31:15,919 --> 00:31:20,240
the number of features we also uh

00:31:18,480 --> 00:31:21,919
we're also not doing too bad for for

00:31:20,240 --> 00:31:24,799
what we need uh

00:31:21,919 --> 00:31:27,039
for what we need from figure um so that

00:31:24,799 --> 00:31:30,399
could explain that as well

00:31:27,039 --> 00:31:32,720
and with this well i want to say just a

00:31:30,399 --> 00:31:34,320
small bit about the stats um

00:31:32,720 --> 00:31:36,159
one thing to to when you when you look

00:31:34,320 --> 00:31:37,919
at this data what the as

00:31:36,159 --> 00:31:39,519
pierre said that there's this maturity

00:31:37,919 --> 00:31:40,720
in that level here that that's starting

00:31:39,519 --> 00:31:43,360
to show up

00:31:40,720 --> 00:31:43,840
uh oh pierre dropped off that's probably

00:31:43,360 --> 00:31:47,360
bad

00:31:43,840 --> 00:31:48,480
um uh so as pierre said that there's

00:31:47,360 --> 00:31:51,919
this maturity level

00:31:48,480 --> 00:31:55,279
in here um but also what it indicates is

00:31:51,919 --> 00:31:56,240
that there is uh from the the primary

00:31:55,279 --> 00:31:59,440
users of

00:31:56,240 --> 00:32:03,279
of packard today which are fedora

00:31:59,440 --> 00:32:04,320
and centos they have essentially reached

00:32:03,279 --> 00:32:06,320
the featured lit

00:32:04,320 --> 00:32:08,240
um levels that they expect that they

00:32:06,320 --> 00:32:10,320
want for the workflows

00:32:08,240 --> 00:32:11,360
and so there is there has been at least

00:32:10,320 --> 00:32:13,440
in my analysis

00:32:11,360 --> 00:32:14,880
having started doing a lot of the ticket

00:32:13,440 --> 00:32:18,240
triage this year

00:32:14,880 --> 00:32:21,600
uh a lot less requests for new stuff

00:32:18,240 --> 00:32:24,880
and just uh and and just a

00:32:21,600 --> 00:32:26,799
more mentioning of uh just more

00:32:24,880 --> 00:32:28,480
bugs or quirks kind of things to deal

00:32:26,799 --> 00:32:30,159
with i mean we've had feature

00:32:28,480 --> 00:32:32,320
requests and we've integrated those as

00:32:30,159 --> 00:32:33,519
we mentioned earlier we've got kanban

00:32:32,320 --> 00:32:36,640
boards now and we've got

00:32:33,519 --> 00:32:38,799
um an api for traversing

00:32:36,640 --> 00:32:40,320
a git repo without having to clone it

00:32:38,799 --> 00:32:43,200
those were feature requests from

00:32:40,320 --> 00:32:44,960
teams and people who needed it and we've

00:32:43,200 --> 00:32:46,240
got collaborators which is a disc it

00:32:44,960 --> 00:32:47,760
specific which is a feature that a lot

00:32:46,240 --> 00:32:49,919
of diskid people wanted

00:32:47,760 --> 00:32:51,360
so now we have those but in general i

00:32:49,919 --> 00:32:52,080
think we've we've started to reach a

00:32:51,360 --> 00:32:53,600
point where

00:32:52,080 --> 00:32:55,279
people are generally satisfied with the

00:32:53,600 --> 00:32:57,200
feature set that they have

00:32:55,279 --> 00:32:58,720
and and this a big part of what i've

00:32:57,200 --> 00:33:02,080
been doing now is

00:32:58,720 --> 00:33:05,840
getting new people to start um

00:33:02,080 --> 00:33:07,679
looking at at um packer as a solution

00:33:05,840 --> 00:33:09,440
and this is where things have started to

00:33:07,679 --> 00:33:13,600
get kind of exciting

00:33:09,440 --> 00:33:16,799
because we now have one of our

00:33:13,600 --> 00:33:21,519
first non-fedora

00:33:16,799 --> 00:33:24,799
instances out in the wild and that is

00:33:21,519 --> 00:33:25,120
from the midipix project where they've

00:33:24,799 --> 00:33:28,159
now

00:33:25,120 --> 00:33:32,159
got a uh and

00:33:28,159 --> 00:33:35,440
a nice um instance running based on

00:33:32,159 --> 00:33:37,760
packer 510 as of right now and it

00:33:35,440 --> 00:33:38,480
is the uh they were very happy about

00:33:37,760 --> 00:33:39,679
this min

00:33:38,480 --> 00:33:41,440
about the solution and they're actually

00:33:39,679 --> 00:33:43,279
the first instance i'm aware of that

00:33:41,440 --> 00:33:45,200
also doesn't even run on fedora send

00:33:43,279 --> 00:33:47,440
house it runs on open souza

00:33:45,200 --> 00:33:48,240
so this is actually an open souza based

00:33:47,440 --> 00:33:50,480
instance

00:33:48,240 --> 00:33:52,399
running on essentially the latest

00:33:50,480 --> 00:33:54,240
version of bagger and

00:33:52,399 --> 00:33:56,000
they're they're very happy with it so

00:33:54,240 --> 00:33:57,519
far like i've been talking to them about

00:33:56,000 --> 00:33:59,279
it and they're very pleased with it

00:33:57,519 --> 00:34:01,120
they love the api and there's some work

00:33:59,279 --> 00:34:05,039
going on right now to write

00:34:01,120 --> 00:34:06,240
some simple tools in c for being able to

00:34:05,039 --> 00:34:09,359
interface with packer

00:34:06,240 --> 00:34:09,679
um from the terminal um you know there's

00:34:09,359 --> 00:34:11,040
some

00:34:09,679 --> 00:34:12,720
in haskell there's some in python

00:34:11,040 --> 00:34:13,679
there's some in there's actually some in

00:34:12,720 --> 00:34:16,720
pearl i found

00:34:13,679 --> 00:34:17,679
a little while ago um but you know these

00:34:16,720 --> 00:34:19,359
guys are very

00:34:17,679 --> 00:34:20,960
sea-oriented and the project that

00:34:19,359 --> 00:34:22,800
they're working on

00:34:20,960 --> 00:34:24,000
is essentially implementing a posix

00:34:22,800 --> 00:34:27,679
environment

00:34:24,000 --> 00:34:30,960
for a posix environment for windows

00:34:27,679 --> 00:34:33,760
on top of windows nt directly um

00:34:30,960 --> 00:34:34,560
and so for them like c is the language

00:34:33,760 --> 00:34:36,320
that they're comfortable with and

00:34:34,560 --> 00:34:39,440
they're building tools based on that

00:34:36,320 --> 00:34:41,119
um leonardo's asking why no rust i mean

00:34:39,440 --> 00:34:42,480
if you want to write a rust one it's

00:34:41,119 --> 00:34:44,560
it's not hard

00:34:42,480 --> 00:34:46,560
if you can work with a rest api that

00:34:44,560 --> 00:34:48,960
returns responses in json

00:34:46,560 --> 00:34:51,440
you can write a client and do anything

00:34:48,960 --> 00:34:51,440
you want

00:34:52,480 --> 00:34:55,919
uh oh right and there's the free

00:34:54,320 --> 00:34:57,440
software foundation considering using

00:34:55,919 --> 00:34:58,640
packer as a hosting platform that is

00:34:57,440 --> 00:35:02,000
still ongoing

00:34:58,640 --> 00:35:04,560
um the um global um

00:35:02,000 --> 00:35:05,440
pandemic thing has sort of slowed

00:35:04,560 --> 00:35:07,599
everything down

00:35:05,440 --> 00:35:08,720
a lot but i'm actively talking to them

00:35:07,599 --> 00:35:12,320
and working with them

00:35:08,720 --> 00:35:14,240
on on this sort of thing uh so

00:35:12,320 --> 00:35:16,160
yeah the free software foundation is

00:35:14,240 --> 00:35:17,119
actively interested in this and i've

00:35:16,160 --> 00:35:19,200
been working with them

00:35:17,119 --> 00:35:20,880
on on that we've actually handled some

00:35:19,200 --> 00:35:24,160
bugs and feature requests

00:35:20,880 --> 00:35:27,200
for them um as part of this so

00:35:24,160 --> 00:35:29,440
it's generally been i think where

00:35:27,200 --> 00:35:31,599
the growth curve has been very slow and

00:35:29,440 --> 00:35:33,040
steady but people are starting to take

00:35:31,599 --> 00:35:34,320
interest and take note in it

00:35:33,040 --> 00:35:36,079
there's a few other projects that are

00:35:34,320 --> 00:35:39,359
also interested in deploying it

00:35:36,079 --> 00:35:41,040
um mainly because it's very flexible

00:35:39,359 --> 00:35:43,119
it's very customizable and it's very

00:35:41,040 --> 00:35:45,040
small

00:35:43,119 --> 00:35:46,800
and it being written in python makes it

00:35:45,040 --> 00:35:48,720
super extensible which is something that

00:35:46,800 --> 00:35:50,160
a lot of people have told me is

00:35:48,720 --> 00:35:51,760
something that they don't have from

00:35:50,160 --> 00:35:53,839
other solutions out there

00:35:51,760 --> 00:35:55,599
so that's been so i think we've got

00:35:53,839 --> 00:35:58,320
something really good here and it's very

00:35:55,599 --> 00:35:59,119
it's it's been it's been increasing in

00:35:58,320 --> 00:36:01,119
its in its

00:35:59,119 --> 00:36:02,240
slow binding of success slow bit of

00:36:01,119 --> 00:36:05,040
success so

00:36:02,240 --> 00:36:05,760
yeah um any other questions from anybody

00:36:05,040 --> 00:36:08,240
from

00:36:05,760 --> 00:36:09,440
to either pierre or myself oh yes and

00:36:08,240 --> 00:36:11,520
jen's peterson

00:36:09,440 --> 00:36:13,200
want to shout out for your for haskell

00:36:11,520 --> 00:36:16,960
binding to packard that you wrote

00:36:13,200 --> 00:36:16,960
for f branch which is super cool

00:36:18,160 --> 00:36:27,839
so any other questions and stuff

00:36:44,400 --> 00:36:49,280
and anyone interested in rolling out

00:36:46,560 --> 00:36:51,119
packer on their own instances somewhere

00:36:49,280 --> 00:36:53,280
oh can we have a dashboard view showing

00:36:51,119 --> 00:36:56,400
packages that are about to be retired

00:36:53,280 --> 00:36:57,839
and merge trains up pierre you wanna

00:36:56,400 --> 00:36:59,680
you wanna answer these particular

00:36:57,839 --> 00:37:02,640
questions like

00:36:59,680 --> 00:37:05,200
merge trains sounds uh interesting the

00:37:02,640 --> 00:37:08,400
dashboard thing is

00:37:05,200 --> 00:37:10,079
potentially simpler i'll start with the

00:37:08,400 --> 00:37:11,760
thoughts in the order in which they

00:37:10,079 --> 00:37:14,000
appear in the chat here uh

00:37:11,760 --> 00:37:14,800
the dashboard is something which we

00:37:14,000 --> 00:37:17,119
could do

00:37:14,800 --> 00:37:17,839
we have the information in the database

00:37:17,119 --> 00:37:21,520
so it's

00:37:17,839 --> 00:37:22,000
basically uh about carrying it and

00:37:21,520 --> 00:37:24,480
displaying

00:37:22,000 --> 00:37:26,000
it uh so that shouldn't be hard to do uh

00:37:24,480 --> 00:37:28,480
we'll need to figure out how to do

00:37:26,000 --> 00:37:30,800
how to but it shouldn't be hard to do uh

00:37:28,480 --> 00:37:31,599
the merge train id i think we already

00:37:30,800 --> 00:37:34,640
have it

00:37:31,599 --> 00:37:35,119
uh in the it has a different name that's

00:37:34,640 --> 00:37:38,720
called

00:37:35,119 --> 00:37:40,560
zul and zul has the possibility and

00:37:38,720 --> 00:37:42,000
supports beggar and has the possibility

00:37:40,560 --> 00:37:45,520
of running your test

00:37:42,000 --> 00:37:47,200
uh merging you can create a pure request

00:37:45,520 --> 00:37:49,920
dependencies in zuul

00:37:47,200 --> 00:37:51,200
uh so you can say well project a

00:37:49,920 --> 00:37:54,720
polarquest

00:37:51,200 --> 00:37:57,760
one in project a needs to be merged for

00:37:54,720 --> 00:37:59,599
pro request one in project two uh to

00:37:57,760 --> 00:38:01,040
search for for request three in project

00:37:59,599 --> 00:38:04,400
c to be merged

00:38:01,040 --> 00:38:06,960
and zul is going to test uh project c

00:38:04,400 --> 00:38:08,480
with the request uh two of product b

00:38:06,960 --> 00:38:12,000
merge with the progress a

00:38:08,480 --> 00:38:13,599
uh one of project a merged uh and if the

00:38:12,000 --> 00:38:15,119
tests are passing on every single pro

00:38:13,599 --> 00:38:17,040
request and if the tests are pressing on

00:38:15,119 --> 00:38:17,680
the last one with the previous one

00:38:17,040 --> 00:38:19,920
merged

00:38:17,680 --> 00:38:21,760
then it will merge uh requests one for

00:38:19,920 --> 00:38:24,800
request pro request three

00:38:21,760 --> 00:38:26,560
in one atomic operation

00:38:24,800 --> 00:38:28,160
they are not called merge train but they

00:38:26,560 --> 00:38:30,160
are already there and where

00:38:28,160 --> 00:38:32,000
the use and that is that i think one of

00:38:30,160 --> 00:38:32,800
the biggest ci system out there because

00:38:32,000 --> 00:38:36,079
that's what

00:38:32,800 --> 00:38:36,079
the openstack project use

00:38:36,160 --> 00:38:41,040
billion nutrients or quadrillions of

00:38:39,200 --> 00:38:42,800
items or projects i should say there are

00:38:41,040 --> 00:38:44,320
not even pythons only

00:38:42,800 --> 00:38:46,079
projects out there that they contribute

00:38:44,320 --> 00:38:49,200
and mentor

00:38:46,079 --> 00:38:49,200
and maintain for some of them

00:38:50,480 --> 00:38:54,480
yeah no that's uh i think uh the that

00:38:53,680 --> 00:38:56,720
might make

00:38:54,480 --> 00:38:58,480
this um concept a little easier for

00:38:56,720 --> 00:39:01,280
people to grok might be

00:38:58,480 --> 00:39:01,680
maybe we need some way to add reporting

00:39:01,280 --> 00:39:04,160
to

00:39:01,680 --> 00:39:05,040
packers interface about this sort of

00:39:04,160 --> 00:39:06,960
thing happening

00:39:05,040 --> 00:39:08,480
i don't know exactly how we would do

00:39:06,960 --> 00:39:10,800
that but this might

00:39:08,480 --> 00:39:11,839
dovetail into some of the enhancements

00:39:10,800 --> 00:39:14,160
uh into

00:39:11,839 --> 00:39:17,440
how pr flags work that we've been

00:39:14,160 --> 00:39:19,599
talking about for a little while

00:39:17,440 --> 00:39:20,960
so for background here we're looking at

00:39:19,599 --> 00:39:24,480
enhancing

00:39:20,960 --> 00:39:25,200
the way that ci systems can interface

00:39:24,480 --> 00:39:28,320
with

00:39:25,200 --> 00:39:30,320
with packard to give a richer

00:39:28,320 --> 00:39:31,760
information base for p for people to

00:39:30,320 --> 00:39:33,520
look at pull requests

00:39:31,760 --> 00:39:35,440
and so there might be some opportunities

00:39:33,520 --> 00:39:39,119
there to enhance this

00:39:35,440 --> 00:39:40,800
to uh to make this a more coherent view

00:39:39,119 --> 00:39:42,880
for people to understand that

00:39:40,800 --> 00:39:46,400
things like the merge train concept are

00:39:42,880 --> 00:39:46,400
actually already happening

00:39:47,839 --> 00:39:52,560
but we'll see the the main difference

00:39:51,119 --> 00:39:54,720
with the merge train is that they are

00:39:52,560 --> 00:39:56,800
not part of pegger itself

00:39:54,720 --> 00:40:00,000
which to some extent i would consider as

00:39:56,800 --> 00:40:02,560
a feature more than a problem

00:40:00,000 --> 00:40:04,960
yeah yeah so like something to keep in

00:40:02,560 --> 00:40:08,560
mind when we're talking about ci stuff

00:40:04,960 --> 00:40:09,520
for packer ci is not built into the

00:40:08,560 --> 00:40:12,319
system you were

00:40:09,520 --> 00:40:13,920
intended to plug a ci system into it the

00:40:12,319 --> 00:40:15,760
disadvantage of this is it makes it a

00:40:13,920 --> 00:40:17,040
little bit more difficult to have ci set

00:40:15,760 --> 00:40:20,560
up for your projects

00:40:17,040 --> 00:40:21,839
the positive for this is that if your ci

00:40:20,560 --> 00:40:24,880
needs to be weird

00:40:21,839 --> 00:40:26,800
it is a lot easier to handle that

00:40:24,880 --> 00:40:28,160
if you have to do very complicated or

00:40:26,800 --> 00:40:30,400
specialized things

00:40:28,160 --> 00:40:31,200
it is much easier to plug into packard

00:40:30,400 --> 00:40:33,920
than it is

00:40:31,200 --> 00:40:34,400
to other systems that have integrated ci

00:40:33,920 --> 00:40:36,880
because

00:40:34,400 --> 00:40:38,000
they have a model of how ci is supposed

00:40:36,880 --> 00:40:39,839
to work and

00:40:38,000 --> 00:40:41,680
don't provide you the flexibility to

00:40:39,839 --> 00:40:44,400
make those things

00:40:41,680 --> 00:40:46,079
so yeah it's uh there's pluses and

00:40:44,400 --> 00:40:49,200
minuses i think for what

00:40:46,079 --> 00:40:52,000
fedora does and what you know distros do

00:40:49,200 --> 00:40:53,599
which is heavily integration based are

00:40:52,000 --> 00:40:54,319
this model works out a lot better

00:40:53,599 --> 00:40:56,640
because

00:40:54,319 --> 00:40:57,599
we can be a lot more flexible and we can

00:40:56,640 --> 00:41:00,319
actually model

00:40:57,599 --> 00:41:03,200
model the way that we do stuff a lot

00:41:00,319 --> 00:41:03,200
more effectively

00:41:04,319 --> 00:41:09,680
so hopefully that answers that more

00:41:05,920 --> 00:41:09,680
completely for people

00:41:10,640 --> 00:41:14,000
well thank i mean it's not just you know

00:41:12,560 --> 00:41:15,440
like everyone's saying great project and

00:41:14,000 --> 00:41:17,359
stuff in the chat i want to say

00:41:15,440 --> 00:41:18,640
it's not just because of us it's because

00:41:17,359 --> 00:41:20,960
of all of you guys

00:41:18,640 --> 00:41:22,319
all of y'all you know you can you use it

00:41:20,960 --> 00:41:25,119
you contribute to it

00:41:22,319 --> 00:41:26,079
even with even filing issues or making

00:41:25,119 --> 00:41:28,240
pull requests

00:41:26,079 --> 00:41:29,520
or even helping with the documentation

00:41:28,240 --> 00:41:32,960
and things like that just

00:41:29,520 --> 00:41:35,440
the all that stuff makes this

00:41:32,960 --> 00:41:36,720
so much better we wouldn't be anywhere

00:41:35,440 --> 00:41:38,560
close to as good as we are

00:41:36,720 --> 00:41:40,319
if it weren't for all of y'all and so

00:41:38,560 --> 00:41:42,400
that is

00:41:40,319 --> 00:41:43,920
that is what makes this so successful

00:41:42,400 --> 00:41:48,000
and so great

00:41:43,920 --> 00:41:50,079
so thank you all for that

00:41:48,000 --> 00:41:51,839
if you and if you didn't know you now

00:41:50,079 --> 00:41:52,960
know why neil is the the public

00:41:51,839 --> 00:41:55,599
relations person

00:41:52,960 --> 00:41:55,599
for figure

00:41:58,800 --> 00:42:02,560
eduard if there if there needs some love

00:42:01,040 --> 00:42:05,599
for that please file an issue

00:42:02,560 --> 00:42:06,400
we don't lose it because like this chat

00:42:05,599 --> 00:42:09,440
is not perm

00:42:06,400 --> 00:42:17,839
persistent so

00:42:09,440 --> 00:42:20,720
um if there's issues

00:42:17,839 --> 00:42:20,720
sorry what pierre

00:42:22,079 --> 00:42:25,599
uh just yeah so the question from edward

00:42:24,480 --> 00:42:28,000
in the chat here is that the the

00:42:25,599 --> 00:42:30,800
documentation for the package

00:42:28,000 --> 00:42:31,599
needs some love and i just wanted to not

00:42:30,800 --> 00:42:35,119
change that we

00:42:31,599 --> 00:42:36,560
only the default

00:42:35,119 --> 00:42:38,800
markdown documentation so we didn't

00:42:36,560 --> 00:42:42,079
duplicate

00:42:38,800 --> 00:42:46,160
uh which i think we linked to so only

00:42:42,079 --> 00:42:49,280
the watch documentation the very basic

00:42:46,160 --> 00:42:50,880
and then what is specific to so

00:42:49,280 --> 00:42:52,319
and mentoring linking these kind of

00:42:50,880 --> 00:42:55,040
things uh the rest

00:42:52,319 --> 00:42:56,400
is supposed to be uh you know go and

00:42:55,040 --> 00:42:58,480
find it in the stream documentation

00:42:56,400 --> 00:43:00,400
about markdown

00:42:58,480 --> 00:43:01,760
but then having yet another place where

00:43:00,400 --> 00:43:06,240
we document

00:43:01,760 --> 00:43:09,599
mark it was a little bit of the idea but

00:43:06,240 --> 00:43:11,280
yeah it could be that doesn't mean that

00:43:09,599 --> 00:43:12,240
it doesn't need some love and i'm more

00:43:11,280 --> 00:43:16,240
than happy to uh

00:43:12,240 --> 00:43:16,240
to look into that if i'm pointed to

00:43:17,760 --> 00:43:24,400
your quest which is even nicer

00:43:20,960 --> 00:43:26,400
yeah sure um and the good

00:43:24,400 --> 00:43:27,520
the good thing about the documentation

00:43:26,400 --> 00:43:30,400
is that you get to

00:43:27,520 --> 00:43:32,000
mark down in the rest which is very nice

00:43:30,400 --> 00:43:34,000
and very

00:43:32,000 --> 00:43:35,520
uh restructured text is way nicer than

00:43:34,000 --> 00:43:36,319
almost all the other formats that we

00:43:35,520 --> 00:43:40,480
have to deal with

00:43:36,319 --> 00:43:43,200
i i like that

00:43:40,480 --> 00:43:44,400
um but yeah uh i think that's it for

00:43:43,200 --> 00:43:45,760
everyone is there any

00:43:44,400 --> 00:43:48,160
there's nothing else i think we'll just

00:43:45,760 --> 00:43:48,160
wrap up

00:43:48,960 --> 00:43:52,079
yeah everyone for joining uh haven't i

00:43:51,119 --> 00:43:55,839
say

00:43:52,079 --> 00:43:55,839

YouTube URL: https://www.youtube.com/watch?v=8yCC99xTzYM


