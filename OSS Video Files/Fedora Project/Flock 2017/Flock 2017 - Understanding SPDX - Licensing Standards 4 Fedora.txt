Title: Flock 2017 - Understanding SPDX - Licensing Standards 4 Fedora
Publication date: 2017-10-20
Playlist: Flock 2017
Description: 
	Wednesday August 30, 2017 2:00pm - 2:30pm
@Grand I
Talk: Understanding SPDX - Licensing Standards 4 Fedora
Presenter: Tom Callaway

Description:
The Linux Foundation has been working for several years on SPDX, a standard for understanding the licensing of open source code. Currently, Fedora uses its own naming scheme, but there are some potential benefits to using the SPDX names. However, there are some downsides as well. I'll talk through the problem and solicit volunteers to help.
Captions: 
	00:00:00,000 --> 00:00:03,810
thanks to to everyone who came it's so

00:00:02,280 --> 00:00:05,279
great she's just amazing I was just

00:00:03,810 --> 00:00:10,110
kidding there's nobody here

00:00:05,279 --> 00:00:10,950
I expect expert questions from all of

00:00:10,110 --> 00:00:13,139
you

00:00:10,950 --> 00:00:17,220
I honestly you know realize that this

00:00:13,139 --> 00:00:19,949
topic is extremely wonky for even those

00:00:17,220 --> 00:00:21,480
of us that care about licensing so if

00:00:19,949 --> 00:00:23,609
you at any point none of this makes

00:00:21,480 --> 00:00:26,130
sense just stop me and I will be happy

00:00:23,609 --> 00:00:30,119
to have a nice intimate discussion with

00:00:26,130 --> 00:00:36,719
you about this all right so let's talk

00:00:30,119 --> 00:00:38,219
about sp DX baby so the background is is

00:00:36,719 --> 00:00:40,980
that the SPD extends for software

00:00:38,219 --> 00:00:42,390
package data exchange and this is a set

00:00:40,980 --> 00:00:44,370
of standards for communicating the

00:00:42,390 --> 00:00:45,690
components licenses and copyrights of

00:00:44,370 --> 00:00:47,460
software technically have any

00:00:45,690 --> 00:00:50,270
copyrighted work although it's really

00:00:47,460 --> 00:00:52,289
only been applied to software this is a

00:00:50,270 --> 00:00:54,059
initiative that was created and driven

00:00:52,289 --> 00:00:55,649
by the Linux Foundation the Linux

00:00:54,059 --> 00:00:59,910
Foundation if you aren't familiar with

00:00:55,649 --> 00:01:01,590
them is a trade association that lots of

00:00:59,910 --> 00:01:02,910
big companies that have vested interests

00:01:01,590 --> 00:01:05,129
in Linux and now more broadly

00:01:02,910 --> 00:01:07,049
open-source are contributing to and

00:01:05,129 --> 00:01:09,450
trying to solve some of the bigger

00:01:07,049 --> 00:01:13,170
problems that is faced across the

00:01:09,450 --> 00:01:15,780
industry so this is the problem that SPX

00:01:13,170 --> 00:01:17,310
seeks to solve companies have pain

00:01:15,780 --> 00:01:20,820
ensuring that they are compliant with

00:01:17,310 --> 00:01:22,080
free and open-source licenses especially

00:01:20,820 --> 00:01:25,200
those companies who have a relatively

00:01:22,080 --> 00:01:27,390
small percentage of open source inside

00:01:25,200 --> 00:01:28,829
much larger proprietary stacks I think

00:01:27,390 --> 00:01:31,470
things like Smart TVs in-flight

00:01:28,829 --> 00:01:34,049
entertainment systems and car GPS that

00:01:31,470 --> 00:01:36,329
sort of thing and often these companies

00:01:34,049 --> 00:01:38,700
are sourcing code from third parties

00:01:36,329 --> 00:01:40,619
like hey I'll pay you to provide this

00:01:38,700 --> 00:01:42,060
component and then other company is

00:01:40,619 --> 00:01:43,530
paying someone else to provide that

00:01:42,060 --> 00:01:46,200
component and so you have like little

00:01:43,530 --> 00:01:47,520
Russian nesting doll of code where you

00:01:46,200 --> 00:01:49,110
know you keep opening and there's more

00:01:47,520 --> 00:01:51,270
code inside from someone else and you're

00:01:49,110 --> 00:01:55,049
not entirely sure what was in that

00:01:51,270 --> 00:01:56,460
originally so they really want to answer

00:01:55,049 --> 00:01:58,829
the question of who is your daddy and

00:01:56,460 --> 00:02:01,409
what does he do and the goal of the SPD

00:01:58,829 --> 00:02:03,170
X standard is to enable any party in the

00:02:01,409 --> 00:02:05,759
supply chain to accurately communicate

00:02:03,170 --> 00:02:07,439
the licensing data for any of the

00:02:05,759 --> 00:02:09,300
copyrighted material inside of it and

00:02:07,439 --> 00:02:11,489
for others to easily be able to consume

00:02:09,300 --> 00:02:13,180
that information so that you can break

00:02:11,489 --> 00:02:15,010
that chain of I don't know he

00:02:13,180 --> 00:02:22,030
it to me that you get when things like

00:02:15,010 --> 00:02:23,680
Volkswagen happen so they have this idea

00:02:22,030 --> 00:02:25,120
that by implementing this standard they

00:02:23,680 --> 00:02:26,680
will be able to effectively solve that

00:02:25,120 --> 00:02:28,090
problem and it sounds really good on

00:02:26,680 --> 00:02:33,099
paper but it's actually really difficult

00:02:28,090 --> 00:02:34,659
to do that so what they do is far beyond

00:02:33,099 --> 00:02:36,129
what has traditionally done in our

00:02:34,659 --> 00:02:40,329
communities which is to sort of just

00:02:36,129 --> 00:02:41,769
label software as GPL or BSD for example

00:02:40,329 --> 00:02:43,629
we all know it's not uncommon to come

00:02:41,769 --> 00:02:45,459
across a piece of software code where in

00:02:43,629 --> 00:02:47,439
the header of the file it says this is

00:02:45,459 --> 00:02:49,150
BSD and that is all the licensing

00:02:47,439 --> 00:02:51,430
information that is provided for this

00:02:49,150 --> 00:02:53,019
now in our sphere we're okay with that

00:02:51,430 --> 00:02:54,280
generally because we understand what

00:02:53,019 --> 00:02:57,400
that means we have a pretty good

00:02:54,280 --> 00:02:59,349
understanding of what BSD might be but

00:02:57,400 --> 00:03:02,290
the SVD extender goes well beyond that

00:02:59,349 --> 00:03:04,180
and says that you know the right way to

00:03:02,290 --> 00:03:05,590
do this is to track the copyrights and

00:03:04,180 --> 00:03:07,689
the licenses for every single source

00:03:05,590 --> 00:03:09,730
file inside of the distribution in a

00:03:07,689 --> 00:03:12,219
standardized way and they do this via an

00:03:09,730 --> 00:03:13,810
XML formatted file and so that in theory

00:03:12,219 --> 00:03:15,549
that you've got this file that says

00:03:13,810 --> 00:03:16,810
these are all the copyrights these are

00:03:15,549 --> 00:03:18,579
all the source files these are all the

00:03:16,810 --> 00:03:20,109
licenses that are in play in this mix

00:03:18,579 --> 00:03:21,459
and then you can take that file and run

00:03:20,109 --> 00:03:22,959
it through any number of tools to be

00:03:21,459 --> 00:03:24,579
able to determine what's inside of your

00:03:22,959 --> 00:03:26,199
supply chain and say ok well we looked

00:03:24,579 --> 00:03:28,269
at all the SP dx-format files and we

00:03:26,199 --> 00:03:30,010
know that there's all these GPL files

00:03:28,269 --> 00:03:31,359
all these PSD files all these MIT all

00:03:30,010 --> 00:03:33,340
these Apache all these eclipse all those

00:03:31,359 --> 00:03:36,699
whatever and we just know what's in

00:03:33,340 --> 00:03:38,379
there from that now the current spec the

00:03:36,699 --> 00:03:40,959
original spec from SP DX required that

00:03:38,379 --> 00:03:42,400
you do this on a per file basis the

00:03:40,959 --> 00:03:44,470
current spec doesn't require that you go

00:03:42,400 --> 00:03:46,299
per file but every time you talk to

00:03:44,470 --> 00:03:48,519
somebody about SPD X they probably want

00:03:46,299 --> 00:03:49,780
you to be doing this but you don't have

00:03:48,519 --> 00:03:51,430
to and that's important to keep in mind

00:03:49,780 --> 00:03:52,599
as we go forward because there's lots of

00:03:51,430 --> 00:03:55,209
things inside the spec that have been

00:03:52,599 --> 00:03:57,340
loosened in recent releases to say well

00:03:55,209 --> 00:03:58,689
you don't have to do it like that but

00:03:57,340 --> 00:03:59,919
then as soon as you start walking down

00:03:58,689 --> 00:04:00,939
that road a whole bunch of people show

00:03:59,919 --> 00:04:02,199
up and they're like no actually we

00:04:00,939 --> 00:04:07,509
really would like it if you'd go all the

00:04:02,199 --> 00:04:09,340
way down now SP D X also adopted a set

00:04:07,509 --> 00:04:11,139
of naming standards for the licenses so

00:04:09,340 --> 00:04:12,579
it treats every license with any

00:04:11,139 --> 00:04:15,599
difference in wording as a unique

00:04:12,579 --> 00:04:17,739
license including typos including

00:04:15,599 --> 00:04:20,799
differences slight minor differences in

00:04:17,739 --> 00:04:21,969
phrasing the only thing this wouldn't

00:04:20,799 --> 00:04:25,090
make a license different would be the

00:04:21,969 --> 00:04:26,669
copyright holder changing so regions at

00:04:25,090 --> 00:04:28,289
the University California

00:04:26,669 --> 00:04:32,069
if that changes to Tom Calloway then

00:04:28,289 --> 00:04:35,669
that's the same license but if I say a

00:04:32,069 --> 00:04:38,340
versus an or you know in the unlikely

00:04:35,669 --> 00:04:40,050
event of versus in the event of then

00:04:38,340 --> 00:04:43,050
these are individual licenses as far as

00:04:40,050 --> 00:04:45,139
SPD X is concerned now Fedora doesn't

00:04:43,050 --> 00:04:47,249
really work that way we treat

00:04:45,139 --> 00:04:49,499
functionally identical licenses as if

00:04:47,249 --> 00:04:51,449
they were the same license so we don't

00:04:49,499 --> 00:04:53,189
create new license identifiers every

00:04:51,449 --> 00:04:55,050
time we see a slightly different verted

00:04:53,189 --> 00:04:59,699
version of the bsd license or the MIT

00:04:55,050 --> 00:05:01,560
license and but in the SPD X universe

00:04:59,699 --> 00:05:03,120
every unique license gets an SPD X

00:05:01,560 --> 00:05:04,740
identifier so they use this pretty

00:05:03,120 --> 00:05:08,969
standard syntax of the name in the

00:05:04,740 --> 00:05:11,099
version and the variant and this results

00:05:08,969 --> 00:05:12,779
in a very very very long list of

00:05:11,099 --> 00:05:14,370
licenses on their part especially since

00:05:12,779 --> 00:05:15,629
they've gone through our license list

00:05:14,370 --> 00:05:18,479
and scraped them all into their own

00:05:15,629 --> 00:05:19,860
names so some of that is my fault

00:05:18,479 --> 00:05:21,569
because I found one of those licenses

00:05:19,860 --> 00:05:25,499
and they hadn't heard of them before so

00:05:21,569 --> 00:05:26,969
sorry but but it does mean that even

00:05:25,499 --> 00:05:29,129
with our very long list their list is

00:05:26,969 --> 00:05:31,469
even longer because every variant of VSD

00:05:29,129 --> 00:05:33,089
they gave a new name and we didn't we

00:05:31,469 --> 00:05:37,589
just said that's BSD move on with your

00:05:33,089 --> 00:05:41,219
life so let's talk about you and me in

00:05:37,589 --> 00:05:44,460
fedora and what we might be able to do

00:05:41,219 --> 00:05:46,770
in this universe of SB DX so full SPD X

00:05:44,460 --> 00:05:50,569
compliance would be really really hard

00:05:46,770 --> 00:05:53,129
and even if we automate that process

00:05:50,569 --> 00:05:55,050
there is some tooling out there's where

00:05:53,129 --> 00:05:56,909
you insert source code and out the other

00:05:55,050 --> 00:05:58,979
end comes an XML file that says this is

00:05:56,909 --> 00:06:01,979
the SPD X report that got generated for

00:05:58,979 --> 00:06:04,469
this a lot of the results will be wrong

00:06:01,979 --> 00:06:06,270
I know this from experience because I've

00:06:04,469 --> 00:06:09,029
done these hand audits for years and

00:06:06,270 --> 00:06:10,379
it's really really easy for these tools

00:06:09,029 --> 00:06:12,419
to not understand what they're looking

00:06:10,379 --> 00:06:14,729
at and not understand because human

00:06:12,419 --> 00:06:16,379
wrote down the license intent it wasn't

00:06:14,729 --> 00:06:17,699
a machine and so machines trying to

00:06:16,379 --> 00:06:19,889
parse the output of humans is very

00:06:17,699 --> 00:06:23,399
complicated very difficult certainly not

00:06:19,889 --> 00:06:25,050
impossible but it's probably not worth

00:06:23,399 --> 00:06:26,310
the cost in the investment to write try

00:06:25,050 --> 00:06:28,110
and write that engine to scrape through

00:06:26,310 --> 00:06:31,379
every single possible source file in

00:06:28,110 --> 00:06:33,899
fedora to figure it out and because we

00:06:31,379 --> 00:06:36,330
know that we're gonna get some stuff

00:06:33,899 --> 00:06:38,990
wrong in the process either humans make

00:06:36,330 --> 00:06:38,990
a mistake or

00:06:39,010 --> 00:06:43,510
the tooling makes a mistake these X P DX

00:06:41,770 --> 00:06:45,040
XML files are intended to be inheritable

00:06:43,510 --> 00:06:46,390
so that you can hand them to somebody

00:06:45,040 --> 00:06:47,620
else and they hand them to somebody else

00:06:46,390 --> 00:06:50,770
and they hand them to somebody else and

00:06:47,620 --> 00:06:52,390
they follow the code around and so wrong

00:06:50,770 --> 00:06:56,290
ones are gonna propagate out from us

00:06:52,390 --> 00:06:57,400
into other people's stuff and the

00:06:56,290 --> 00:06:58,900
standard says we're supposed to put our

00:06:57,400 --> 00:07:00,610
name on these XML files to one

00:06:58,900 --> 00:07:02,080
credibility to them so we generate them

00:07:00,610 --> 00:07:03,520
we put the Fedora projects name on them

00:07:02,080 --> 00:07:06,160
and that gives them credibility even

00:07:03,520 --> 00:07:08,080
though they're wrong they go out other

00:07:06,160 --> 00:07:09,880
people trust it because Fedora said it

00:07:08,080 --> 00:07:11,230
must be this way so it is this way and

00:07:09,880 --> 00:07:13,300
it can be as simple as a version of

00:07:11,230 --> 00:07:14,470
being wrong on the GPL detecting the

00:07:13,300 --> 00:07:16,240
wrong version of GPL can have a

00:07:14,470 --> 00:07:21,790
significant impact on compatibility as

00:07:16,240 --> 00:07:23,680
it moves through the chain so that's

00:07:21,790 --> 00:07:25,210
sort of why that problem is really

00:07:23,680 --> 00:07:26,710
complicated it's not as simple as well

00:07:25,210 --> 00:07:28,330
we'll just add a little script to runs

00:07:26,710 --> 00:07:29,590
through builds and scrapes through every

00:07:28,330 --> 00:07:33,400
build every time somebody does want to

00:07:29,590 --> 00:07:36,430
determine this file so who should go all

00:07:33,400 --> 00:07:37,870
in on this SP DX model well who knows

00:07:36,430 --> 00:07:41,340
all the corporate and licensing on all

00:07:37,870 --> 00:07:43,420
the source files upstream we hope and

00:07:41,340 --> 00:07:46,870
they really should be the ones that are

00:07:43,420 --> 00:07:48,130
generating that SP DX XML file including

00:07:46,870 --> 00:07:50,050
in their source code and saying you know

00:07:48,130 --> 00:07:51,160
as the person who wrote this code or who

00:07:50,050 --> 00:07:52,900
understands the copyright and the

00:07:51,160 --> 00:07:55,630
licensing for this code I am vouching

00:07:52,900 --> 00:07:57,130
for the statement of what its license

00:07:55,630 --> 00:07:58,660
and copyright holders are and then you

00:07:57,130 --> 00:07:59,920
can take that and trust it because if

00:07:58,660 --> 00:08:03,070
you can't trust me there's nobody above

00:07:59,920 --> 00:08:07,000
me basically and we can inherit it and

00:08:03,070 --> 00:08:10,570
pass it on down the chain except nobody

00:08:07,000 --> 00:08:12,160
does this like I'm sure somebody's doing

00:08:10,570 --> 00:08:14,520
it like there are some people that are

00:08:12,160 --> 00:08:17,530
following this pretty closely but

00:08:14,520 --> 00:08:20,740
effectively no upstream is including a

00:08:17,530 --> 00:08:22,360
SPD XML file at this point and the

00:08:20,740 --> 00:08:24,010
reasoning is that they just don't care

00:08:22,360 --> 00:08:25,510
about supply chain management at this

00:08:24,010 --> 00:08:29,530
level they aren't concerned about

00:08:25,510 --> 00:08:31,750
license compliant management no external

00:08:29,530 --> 00:08:34,270
tooling requires it no external tool and

00:08:31,750 --> 00:08:35,560
automatically generates it and they

00:08:34,270 --> 00:08:36,849
really care a lot more about that bug

00:08:35,560 --> 00:08:38,590
that crashes the library when you pass

00:08:36,849 --> 00:08:41,200
to fuzz data to it and they do anything

00:08:38,590 --> 00:08:42,580
regarding license compliance and a lot

00:08:41,200 --> 00:08:45,160
of upstreams feel for better or worse

00:08:42,580 --> 00:08:47,680
that it's sufficient to just include the

00:08:45,160 --> 00:08:49,210
license text and say you know copying is

00:08:47,680 --> 00:08:49,720
right over there worked great for 20

00:08:49,210 --> 00:08:53,199
years I don't

00:08:49,720 --> 00:08:55,930
anything on this now so if we ask the

00:08:53,199 --> 00:08:59,079
question should fedora do it my vote is

00:08:55,930 --> 00:09:01,120
no what if you disagree let me know if

00:08:59,079 --> 00:09:02,470
you're like no you know supply chain

00:09:01,120 --> 00:09:03,819
management and compliance are really

00:09:02,470 --> 00:09:05,470
important to our community we need to

00:09:03,819 --> 00:09:07,720
get this right we can have that

00:09:05,470 --> 00:09:11,560
conversation it's also worth noting that

00:09:07,720 --> 00:09:13,209
rel doesn't do any of this either so now

00:09:11,560 --> 00:09:14,769
there are customers of red hats that

00:09:13,209 --> 00:09:16,600
would really like us to be doing this

00:09:14,769 --> 00:09:17,709
because they take red hat and they

00:09:16,600 --> 00:09:18,879
bundle it in they ship it off to

00:09:17,709 --> 00:09:19,899
somebody else who ships it off to

00:09:18,879 --> 00:09:21,069
somebody else and ships it off to

00:09:19,899 --> 00:09:25,660
somebody else and it ends up in an

00:09:21,069 --> 00:09:27,339
airplane seat but we're not doing as PDX

00:09:25,660 --> 00:09:28,540
to solve those problems we have other

00:09:27,339 --> 00:09:29,019
ways of making them feel more

00:09:28,540 --> 00:09:30,790
comfortable

00:09:29,019 --> 00:09:36,879
usually by knocking zeros off the price

00:09:30,790 --> 00:09:40,120
so I just basically made the case that

00:09:36,879 --> 00:09:42,939
we don't care about it and the answer is

00:09:40,120 --> 00:09:46,379
its genome software that is a screenshot

00:09:42,939 --> 00:09:50,550
from genome software from Wikipedia and

00:09:46,379 --> 00:09:53,079
groom software uses app data files and

00:09:50,550 --> 00:09:55,000
these app data files to use the SPD X

00:09:53,079 --> 00:09:56,439
naming identifiers to identify the

00:09:55,000 --> 00:09:58,089
overall license for a software component

00:09:56,439 --> 00:10:00,220
now it's important to note that they're

00:09:58,089 --> 00:10:02,439
not actually doing anything with the SPD

00:10:00,220 --> 00:10:04,600
XML files they're just using the naming

00:10:02,439 --> 00:10:08,470
identifiers that as PDX assigns two

00:10:04,600 --> 00:10:09,939
licenses to map to applications so they

00:10:08,470 --> 00:10:11,620
decided early on that they weren't going

00:10:09,939 --> 00:10:14,709
to look at the distribution package

00:10:11,620 --> 00:10:16,209
licensing labeling metadata like the RPM

00:10:14,709 --> 00:10:17,769
data to determine what the licenses of a

00:10:16,209 --> 00:10:20,139
package but instead ask the app data

00:10:17,769 --> 00:10:22,300
file to provide that data back the idea

00:10:20,139 --> 00:10:24,069
of being that either a it's really

00:10:22,300 --> 00:10:25,509
complicated to have to figure out

00:10:24,069 --> 00:10:26,949
routines that you write in to genome

00:10:25,509 --> 00:10:28,959
software to strip all that data out of

00:10:26,949 --> 00:10:30,879
the packaging it's far easier to just

00:10:28,959 --> 00:10:32,620
hand it over to whatever the dependency

00:10:30,879 --> 00:10:34,809
resolver is and says go install that

00:10:32,620 --> 00:10:38,350
thing and not have to actually look at

00:10:34,809 --> 00:10:39,610
the package data and also be there's

00:10:38,350 --> 00:10:40,990
plenty of distributions that do a really

00:10:39,610 --> 00:10:42,819
lousy job of this and write the word

00:10:40,990 --> 00:10:44,920
distributable in that field and can't

00:10:42,819 --> 00:10:46,269
trust it to be consistent across all

00:10:44,920 --> 00:10:47,800
these things and they want the genome

00:10:46,269 --> 00:10:48,970
software experience to be identical no

00:10:47,800 --> 00:10:53,620
matter what distribution you're running

00:10:48,970 --> 00:10:55,509
on these updater files a lot of them are

00:10:53,620 --> 00:10:56,800
got generated by fedora specifically

00:10:55,509 --> 00:10:57,819
about one individual in Fedora who

00:10:56,800 --> 00:10:58,899
thought it was really important who

00:10:57,819 --> 00:10:59,699
happens to be the genome software

00:10:58,899 --> 00:11:02,489
maintainer and

00:10:59,699 --> 00:11:03,959
you know he sent a lot of these upstream

00:11:02,489 --> 00:11:05,129
and some of the upstream took them in

00:11:03,959 --> 00:11:07,169
and some of them just you know never

00:11:05,129 --> 00:11:08,220
paid attention to the fact that you know

00:11:07,169 --> 00:11:10,249
he sent them anything because that

00:11:08,220 --> 00:11:12,839
upstream has been dead for ten years but

00:11:10,249 --> 00:11:13,949
we really do want the upstreams to own

00:11:12,839 --> 00:11:15,449
these files we don't want to be

00:11:13,949 --> 00:11:16,709
generating them because you have the

00:11:15,449 --> 00:11:19,379
same sort of problem that you have with

00:11:16,709 --> 00:11:21,540
SPD X Files if you generate the license

00:11:19,379 --> 00:11:23,369
metadata wrong in the app data then we

00:11:21,540 --> 00:11:24,899
were passing that on them changing other

00:11:23,369 --> 00:11:26,600
people who are looking for an app data

00:11:24,899 --> 00:11:28,709
file are likely to inherit it from us

00:11:26,600 --> 00:11:32,089
carried in their package so that it

00:11:28,709 --> 00:11:34,109
shows up pretty and genome software so

00:11:32,089 --> 00:11:36,149
this is where we hit a disconnect

00:11:34,109 --> 00:11:37,709
because it's confusing for fedoras to

00:11:36,149 --> 00:11:40,350
have to deal with to license naming

00:11:37,709 --> 00:11:41,819
schemes they're being told by all the

00:11:40,350 --> 00:11:43,259
genome software folks that they want to

00:11:41,819 --> 00:11:44,699
have app data in here and your app data

00:11:43,259 --> 00:11:46,529
needs to have a license string but it

00:11:44,699 --> 00:11:47,850
needs to use the SPD X identifier but

00:11:46,529 --> 00:11:49,079
your package needs to have a license

00:11:47,850 --> 00:11:51,059
string and needs to use the Fedora

00:11:49,079 --> 00:11:52,290
identifier so we've already had a couple

00:11:51,059 --> 00:11:55,169
of cases where people have started

00:11:52,290 --> 00:11:58,049
putting the SPX names into the RPM spec

00:11:55,169 --> 00:11:59,819
file mistaking that that's the process

00:11:58,049 --> 00:12:01,470
thinking that that's the license name

00:11:59,819 --> 00:12:03,059
they need to use because they heard

00:12:01,470 --> 00:12:07,379
about app data before they got making

00:12:03,059 --> 00:12:10,739
the Fedora package so we use the SPD

00:12:07,379 --> 00:12:11,910
acts names the pros obviously that

00:12:10,739 --> 00:12:14,189
minimizes the confusion if we

00:12:11,910 --> 00:12:15,149
standardize on that set of names then we

00:12:14,189 --> 00:12:16,980
don't have to worry about it

00:12:15,149 --> 00:12:19,049
their names are machine possible

00:12:16,980 --> 00:12:21,089
technically fedoras names are - but

00:12:19,049 --> 00:12:23,459
there's a lot of inconsistencies in the

00:12:21,089 --> 00:12:26,730
naming schema that we use we call apache

00:12:23,459 --> 00:12:29,369
license ASL - oh and GPL - is GPL v2

00:12:26,730 --> 00:12:31,230
plus because the FSF made a really loud

00:12:29,369 --> 00:12:32,579
stink about the naming that we chose for

00:12:31,230 --> 00:12:33,989
it originally and said that it had to be

00:12:32,579 --> 00:12:35,519
named the way they liked and honestly

00:12:33,989 --> 00:12:37,889
the less I have to deal with the FSF

00:12:35,519 --> 00:12:38,999
getting angry at me the better so we

00:12:37,889 --> 00:12:40,439
went ahead and adopted their naming

00:12:38,999 --> 00:12:42,029
schema because it doesn't care as long

00:12:40,439 --> 00:12:43,649
as we're consistent every time we call

00:12:42,029 --> 00:12:46,829
GPL something the same thing it doesn't

00:12:43,649 --> 00:12:48,539
really matter but SPD X having the

00:12:46,829 --> 00:12:50,369
ability to sort of reinvent everything

00:12:48,539 --> 00:12:56,939
said no every license is going to meet

00:12:50,369 --> 00:12:58,649
that name - schema they also get to

00:12:56,939 --> 00:12:59,879
maintain the big list for us we don't

00:12:58,649 --> 00:13:01,379
have to worry about maintaining our own

00:12:59,879 --> 00:13:03,059
license list anymore we can just say the

00:13:01,379 --> 00:13:04,350
license list is over there it is the SPD

00:13:03,059 --> 00:13:05,189
X list if it's not on there you know

00:13:04,350 --> 00:13:09,839
tuff kitties

00:13:05,189 --> 00:13:11,249
but Seuss is already doing this for

00:13:09,839 --> 00:13:11,730
their packages Sousa has switched over

00:13:11,249 --> 00:13:13,499
to you

00:13:11,730 --> 00:13:14,669
the SPD extra names inside of all of

00:13:13,499 --> 00:13:16,859
their package schemas so we know that

00:13:14,669 --> 00:13:19,319
there's no real major scary things in

00:13:16,859 --> 00:13:21,389
the raw implementation of this soos is

00:13:19,319 --> 00:13:23,160
actually using a hybrid model of our

00:13:21,389 --> 00:13:25,259
model in the SPD X model where they're

00:13:23,160 --> 00:13:27,929
using the SPD X names but they're using

00:13:25,259 --> 00:13:30,720
our syntax for license parsing so if

00:13:27,929 --> 00:13:32,939
something is GPL or artistic they're

00:13:30,720 --> 00:13:34,889
using our parsing schema inside the

00:13:32,939 --> 00:13:40,439
string to determine how to actually tell

00:13:34,889 --> 00:13:44,220
what that means they don't have one they

00:13:40,439 --> 00:13:59,419
just list all the licenses in a work so

00:13:44,220 --> 00:13:59,419
you just in XML and dump it all out okay

00:14:12,559 --> 00:14:17,039
there might be operative exceptions that

00:14:15,809 --> 00:14:18,660
are out of the main chart there may be

00:14:17,039 --> 00:14:21,720
something where you can say an or later

00:14:18,660 --> 00:14:23,489
flag that applies to the XML criteria I

00:14:21,720 --> 00:14:37,589
don't know it's a good question

00:14:23,489 --> 00:14:40,049
something worth considering yes that is

00:14:37,589 --> 00:14:41,519
another con perhaps to using a

00:14:40,049 --> 00:14:42,899
specification that is a moving target

00:14:41,519 --> 00:14:45,509
and that they reserve the right to

00:14:42,899 --> 00:14:46,799
change the way they will and we could

00:14:45,509 --> 00:14:49,439
walk into a previous version of the

00:14:46,799 --> 00:14:50,459
specification if we wanted to but this

00:14:49,439 --> 00:14:52,199
isn't gonna help the folks that are

00:14:50,459 --> 00:14:54,869
trying to move forward so let's get to

00:14:52,199 --> 00:14:55,829
the cons every single packaging fedora

00:14:54,869 --> 00:14:57,959
will need to be fixed

00:14:55,829 --> 00:14:59,069
I used scare quotes there to make the

00:14:57,959 --> 00:15:02,039
emphasis around how much work that's

00:14:59,069 --> 00:15:04,439
going to be we're also gonna need to re

00:15:02,039 --> 00:15:06,480
audit because the Fedora licensed SPD X

00:15:04,439 --> 00:15:08,669
is not a one-to-one relationship it's

00:15:06,480 --> 00:15:10,769
not as simple as if you had that string

00:15:08,669 --> 00:15:13,350
you now use that string and we'll talk

00:15:10,769 --> 00:15:14,939
about that in the next slide there might

00:15:13,350 --> 00:15:16,489
also be some delay on new packages with

00:15:14,939 --> 00:15:18,600
licenses that SPD X doesn't know about

00:15:16,489 --> 00:15:21,210
what we wait for them to update the list

00:15:18,600 --> 00:15:22,620
as opposed to fedora where I find

00:15:21,210 --> 00:15:25,410
immediately and say it's good or it's

00:15:22,620 --> 00:15:27,690
not good they don't have any real

00:15:25,410 --> 00:15:29,400
interest in doing clearance like we've

00:15:27,690 --> 00:15:30,690
done where a new license comes along and

00:15:29,400 --> 00:15:32,430
we determine whether it's free and open

00:15:30,690 --> 00:15:34,740
they will just put it in the list and

00:15:32,430 --> 00:15:36,090
not care about its status because

00:15:34,740 --> 00:15:37,530
they're not interested in tracking open

00:15:36,090 --> 00:15:38,820
source software they're interested in

00:15:37,530 --> 00:15:40,710
tracking software

00:15:38,820 --> 00:15:42,180
now if the OSI proves that they do have

00:15:40,710 --> 00:15:43,920
a little checkbox that they'll check it

00:15:42,180 --> 00:15:45,000
as being OSI approved in the list you

00:15:43,920 --> 00:15:46,350
can look at that but they're not going

00:15:45,000 --> 00:15:48,210
to submit it to the OSI they're not

00:15:46,350 --> 00:15:49,830
gonna do the internal review so we'd

00:15:48,210 --> 00:15:51,270
still have to do that process and then

00:15:49,830 --> 00:15:53,250
submit it to them and wait for them to

00:15:51,270 --> 00:15:54,930
merge it but to be fair I'm not too

00:15:53,250 --> 00:15:56,250
concerned about that there's not a huge

00:15:54,930 --> 00:15:58,020
number of licenses that we're coming

00:15:56,250 --> 00:16:00,990
across these days that are new for a

00:15:58,020 --> 00:16:06,810
while we were seeing about 501 every

00:16:00,990 --> 00:16:08,820
quarter so it may also lead to the

00:16:06,810 --> 00:16:11,340
expectation that we plan on doing full

00:16:08,820 --> 00:16:13,800
SPD X at some point in Fedora people

00:16:11,340 --> 00:16:15,270
because of the naming is so symbolic

00:16:13,800 --> 00:16:16,830
across the board when we say we're doing

00:16:15,270 --> 00:16:18,090
SPD X people don't know whether we're

00:16:16,830 --> 00:16:21,480
doing just the naming or whether we're

00:16:18,090 --> 00:16:23,010
doing the xpx XML files and what they

00:16:21,480 --> 00:16:24,240
were doing it for just the package or

00:16:23,010 --> 00:16:25,830
they were doing it for every source file

00:16:24,240 --> 00:16:27,480
inside the package because there's

00:16:25,830 --> 00:16:29,280
multiple levels of depth you can sort of

00:16:27,480 --> 00:16:31,680
Traverse inside the standard as to how

00:16:29,280 --> 00:16:35,220
you implement and it may confuse people

00:16:31,680 --> 00:16:37,380
if we do this but let's get back to the

00:16:35,220 --> 00:16:39,480
then one-to-one problem which is the BSD

00:16:37,380 --> 00:16:41,040
and MIT problem and fedora we treat all

00:16:39,480 --> 00:16:43,230
these functionally identical variants is

00:16:41,040 --> 00:16:45,450
the same license so BSD variants get

00:16:43,230 --> 00:16:46,920
marked as BSD and it's not uncommon like

00:16:45,450 --> 00:16:48,660
I said before for the upstream to simply

00:16:46,920 --> 00:16:51,810
say BSD because we know what they mean

00:16:48,660 --> 00:16:54,030
if we use the SPD X list as is we can't

00:16:51,810 --> 00:16:55,350
do that there is an entry for BSD in

00:16:54,030 --> 00:16:58,230
their list but it means very

00:16:55,350 --> 00:17:00,390
specifically one variant of BSD the OSI

00:16:58,230 --> 00:17:02,250
approved a variant and we know there's

00:17:00,390 --> 00:17:04,490
30-plus other variants of this license

00:17:02,250 --> 00:17:07,680
that are out there and that's the X is

00:17:04,490 --> 00:17:09,480
given each one of them a new name and so

00:17:07,680 --> 00:17:10,709
it is BSD variants something something

00:17:09,480 --> 00:17:13,490
BSD variants something something

00:17:10,709 --> 00:17:16,110
something and there's all in there now

00:17:13,490 --> 00:17:17,280
this means that a fedora main Hamer's

00:17:16,110 --> 00:17:18,930
will have to figure out which variants

00:17:17,280 --> 00:17:20,570
they have and mark their packages

00:17:18,930 --> 00:17:22,500
correctly if we use this naming schema

00:17:20,570 --> 00:17:24,720
which means they'll have a lot more work

00:17:22,500 --> 00:17:26,130
to do and it's not fun work either it's

00:17:24,720 --> 00:17:27,900
not exciting to figure out which of the

00:17:26,130 --> 00:17:28,230
30-something BSD variants you have in

00:17:27,900 --> 00:17:30,720
your

00:17:28,230 --> 00:17:32,759
when you might have multiple of them in

00:17:30,720 --> 00:17:34,230
the same codebase and so what went from

00:17:32,759 --> 00:17:36,600
a package that just was able to say

00:17:34,230 --> 00:17:39,989
license BSD will now go to seeing

00:17:36,600 --> 00:17:42,840
license BSD variants 74 and license BSD

00:17:39,989 --> 00:17:44,220
variant when T 2 and BSD variant just

00:17:42,840 --> 00:17:46,440
because there's multiple sources from

00:17:44,220 --> 00:17:48,989
BSD code chromium's license string is

00:17:46,440 --> 00:17:50,549
going to triple if we move to this model

00:17:48,989 --> 00:17:52,200
just because of the sheer amount of

00:17:50,549 --> 00:17:56,309
different BSD variants that are inside

00:17:52,200 --> 00:17:58,019
of it but because chromium is evil is

00:17:56,309 --> 00:18:00,179
not necessarily a valid justification

00:17:58,019 --> 00:18:03,749
for not moving the rest of fedora off

00:18:00,179 --> 00:18:06,899
onto something else so what should we do

00:18:03,749 --> 00:18:09,029
here well I'm hoping you have opinions

00:18:06,899 --> 00:18:11,639
and would like to put them out there

00:18:09,029 --> 00:18:13,440
leaving up to me is a valid option we

00:18:11,639 --> 00:18:14,159
can just say you know Spock you seem to

00:18:13,440 --> 00:18:15,690
know what you're doing with the whole

00:18:14,159 --> 00:18:17,940
Fedora legal thing we have faith in you

00:18:15,690 --> 00:18:19,649
but if you do then you waive any right

00:18:17,940 --> 00:18:21,119
to complain when I ask you to fix all

00:18:19,649 --> 00:18:23,879
your packages before they can go into a

00:18:21,119 --> 00:18:25,649
footer or release and we probably won't

00:18:23,879 --> 00:18:27,600
do anything about this until r-la

00:18:25,649 --> 00:18:30,629
is long disconnected from the Fedora

00:18:27,600 --> 00:18:32,039
process we're post r-la because I don't

00:18:30,629 --> 00:18:33,389
think that the rel team really wants

00:18:32,039 --> 00:18:34,950
that level of excitement in their life

00:18:33,389 --> 00:18:36,389
to add to all the other pain that

00:18:34,950 --> 00:18:37,919
they're dealing with to have me go hey

00:18:36,389 --> 00:18:39,299
guys we're gonna rename all the licenses

00:18:37,919 --> 00:18:41,429
and all the tools that you wrote to

00:18:39,299 --> 00:18:42,659
generate your you know quality control

00:18:41,429 --> 00:18:44,220
and you're auditing they're gonna have a

00:18:42,659 --> 00:18:46,289
whole new set of strings that doesn't

00:18:44,220 --> 00:18:48,830
work and fedora about the only tooling

00:18:46,289 --> 00:18:50,999
that we would have to change would be

00:18:48,830 --> 00:18:53,460
would have been packaged DB but we

00:18:50,999 --> 00:18:54,629
killed that and RPM Lind which just

00:18:53,460 --> 00:18:56,159
needs to understand the new license

00:18:54,629 --> 00:18:57,119
strings to have validation but nothing

00:18:56,159 --> 00:18:58,440
else it's actually looking at the

00:18:57,119 --> 00:19:00,989
license string in any meaningful way

00:18:58,440 --> 00:19:02,429
Kochi doesn't care about it none of the

00:19:00,989 --> 00:19:03,960
other tooling cares about it as far as I

00:19:02,429 --> 00:19:05,580
can tell so I don't think we would need

00:19:03,960 --> 00:19:08,700
to make any other infrastructure changes

00:19:05,580 --> 00:19:09,809
to adopt the new licensing model Dennis

00:19:08,700 --> 00:19:12,499
I'm looking at you if you think there's

00:19:09,809 --> 00:19:12,499
anything I'm missing

00:19:25,150 --> 00:19:30,289
yeah license checking on the lookaside

00:19:27,620 --> 00:19:32,660
cash is really hard because you know

00:19:30,289 --> 00:19:35,090
that's that's as good as the tools are

00:19:32,660 --> 00:19:36,890
they're not as good as a human and so

00:19:35,090 --> 00:19:38,030
even if we had the lookaside cash doing

00:19:36,890 --> 00:19:39,350
some sort of parse where after you

00:19:38,030 --> 00:19:41,600
checked it in it unpacked the whole

00:19:39,350 --> 00:19:43,520
source tarball and ran it through a tool

00:19:41,600 --> 00:19:45,380
and said you know this lint detects some

00:19:43,520 --> 00:19:47,090
questionable files inside of it

00:19:45,380 --> 00:19:52,640
somebody's still gonna have to look at

00:19:47,090 --> 00:19:54,260
those files and yeah and that's in the

00:19:52,640 --> 00:19:55,520
number of positives of cases where

00:19:54,260 --> 00:19:57,350
people have uploaded stuff into the

00:19:55,520 --> 00:19:58,490
lookaside that ended up in a package

00:19:57,350 --> 00:20:01,400
that shouldn't have been there is

00:19:58,490 --> 00:20:03,770
relatively small it's not worth in my

00:20:01,400 --> 00:20:05,299
opinion adding a significant delay for

00:20:03,770 --> 00:20:07,280
everybody in the process to have to wait

00:20:05,299 --> 00:20:08,780
for somebody to sandy checked a source

00:20:07,280 --> 00:20:09,740
code when most of the tarballs are going

00:20:08,780 --> 00:20:13,309
to be clean and that going to be

00:20:09,740 --> 00:20:14,780
problematic we do have a good community

00:20:13,309 --> 00:20:16,340
that picks up on these changes

00:20:14,780 --> 00:20:17,480
relatively quickly and files bugs on

00:20:16,340 --> 00:20:19,700
them when they see things that are

00:20:17,480 --> 00:20:21,890
inappropriate we just need to make sure

00:20:19,700 --> 00:20:23,240
that we continue to educate newcomers to

00:20:21,890 --> 00:20:24,470
the community about the importance of

00:20:23,240 --> 00:20:27,890
catching these things early and not

00:20:24,470 --> 00:20:30,320
getting them widely distributed so

00:20:27,890 --> 00:20:33,770
that's kind of where we stand today on

00:20:30,320 --> 00:20:35,240
SPD X and the file format and so the

00:20:33,770 --> 00:20:38,210
real question that the core of all of

00:20:35,240 --> 00:20:40,039
this is is the gains that we might get

00:20:38,210 --> 00:20:42,110
from standardizing the potential

00:20:40,039 --> 00:20:46,179
confusion between your gnome software

00:20:42,110 --> 00:20:48,409
and the RPM packages worth the effort to

00:20:46,179 --> 00:20:50,030
undertake a full audit of all the

00:20:48,409 --> 00:20:51,409
licensing strings and fedora and then

00:20:50,030 --> 00:20:52,850
remapping all the things and then

00:20:51,409 --> 00:20:54,559
teaching all of the contributors that we

00:20:52,850 --> 00:20:55,789
now use this naming model that's longer

00:20:54,559 --> 00:20:59,360
and more complicated than the previous

00:20:55,789 --> 00:21:01,130
one and so that's where I'm interested

00:20:59,360 --> 00:21:02,840
in feedback from the community since

00:21:01,130 --> 00:21:05,950
this is a do a conference I was hoping

00:21:02,840 --> 00:21:05,950
there would be people that we like yes

00:21:40,470 --> 00:21:45,160
yeah that's a good point

00:21:42,670 --> 00:21:46,720
and I think that some of what mitigates

00:21:45,160 --> 00:21:48,220
that to a certain extent is the fact

00:21:46,720 --> 00:21:50,980
that most of the identify hers and their

00:21:48,220 --> 00:21:53,170
list came inherited from us where they

00:21:50,980 --> 00:21:54,850
had a very rather short list of licenses

00:21:53,170 --> 00:21:56,620
they started off with and then we they

00:21:54,850 --> 00:21:58,930
imported our entire list and when they

00:21:56,620 --> 00:22:00,310
didn't have an identifier they just used

00:21:58,930 --> 00:22:02,020
our identifier so a lot of our

00:22:00,310 --> 00:22:10,480
identifiers haven't been inherited over

00:22:02,020 --> 00:22:12,190
into their schema but there's a couple

00:22:10,480 --> 00:22:27,250
more that are slightly less common but

00:22:12,190 --> 00:22:29,950
those are the big ones and so so we

00:22:27,250 --> 00:22:32,290
could be lazy and sort of do a hybrid

00:22:29,950 --> 00:22:36,340
approach to this and what we could do is

00:22:32,290 --> 00:22:38,230
say that we're going to adopt SPD X 95%

00:22:36,340 --> 00:22:39,610
of the way through except for BSD and

00:22:38,230 --> 00:22:41,380
MIT which we're just gonna let people

00:22:39,610 --> 00:22:44,020
label BSD and MIT in there and not worry

00:22:41,380 --> 00:22:45,640
about the variance the biggest downside

00:22:44,020 --> 00:22:47,110
to that is that people who are expecting

00:22:45,640 --> 00:22:48,550
us to be fully compliant when they see

00:22:47,110 --> 00:22:49,990
us using the name of scheme and then

00:22:48,550 --> 00:22:51,520
come along and discover that we just

00:22:49,990 --> 00:22:53,590
sort of hand-wave over that entire

00:22:51,520 --> 00:22:55,540
problem are gonna be pretty angry

00:22:53,590 --> 00:22:58,320
I would imagine or confused or unhappy

00:22:55,540 --> 00:23:02,440
and I think that's probably worse than

00:22:58,320 --> 00:23:03,790
doing it you know I think we could go

00:23:02,440 --> 00:23:05,740
halfway and I honestly think that that's

00:23:03,790 --> 00:23:07,240
how Susan treats it I'm not sure that

00:23:05,740 --> 00:23:08,920
Zeus has actually patented their entire

00:23:07,240 --> 00:23:10,270
tree for all the variants I think they

00:23:08,920 --> 00:23:12,820
just leverage the fact that there's a

00:23:10,270 --> 00:23:14,170
BSD identifier and an MIT identifier and

00:23:12,820 --> 00:23:15,460
anytime somebody sees something that

00:23:14,170 --> 00:23:16,840
they recognize is one of those cases

00:23:15,460 --> 00:23:20,350
they just use that string and then

00:23:16,840 --> 00:23:21,940
license tag I haven't done a full audit

00:23:20,350 --> 00:23:24,820
of their tree to be sure but I really

00:23:21,940 --> 00:23:27,090
would back that they don't get down to

00:23:24,820 --> 00:23:27,090
that level

00:23:38,160 --> 00:23:44,710
well it's an Aikido but but I imagine

00:23:42,220 --> 00:23:46,360
that if I had to guess I would say

00:23:44,710 --> 00:23:48,040
probably a third of the Fedora packages

00:23:46,360 --> 00:23:51,850
have one of the BSD variants inside of

00:23:48,040 --> 00:23:54,010
them in some stage or level it's also

00:23:51,850 --> 00:23:56,980
worth noting that in the way that we do

00:23:54,010 --> 00:23:59,530
license tagging in fedora right now we

00:23:56,980 --> 00:24:01,360
allow people to do interpreted licensing

00:23:59,530 --> 00:24:06,400
which basically means that if your

00:24:01,360 --> 00:24:08,770
source code has 70% GPL and 30% BSD you

00:24:06,400 --> 00:24:10,360
can call it GPL because we know that by

00:24:08,770 --> 00:24:11,650
honoring the terms of the GPL license

00:24:10,360 --> 00:24:13,870
you're also honoring the terms of the

00:24:11,650 --> 00:24:15,760
BSD license and they're compatible so

00:24:13,870 --> 00:24:17,320
it's not a big deal some people are

00:24:15,760 --> 00:24:20,290
really sticklers about this will list

00:24:17,320 --> 00:24:22,420
GPL and BSD but we don't require that

00:24:20,290 --> 00:24:24,160
they do so as long as it's obvious that

00:24:22,420 --> 00:24:25,930
the interpretive license makes sense and

00:24:24,160 --> 00:24:28,060
we have a whole how do i parse my

00:24:25,930 --> 00:24:29,410
interpreted license page on the wiki for

00:24:28,060 --> 00:24:31,120
people who try to figure this out and

00:24:29,410 --> 00:24:32,320
want to understand how to do it and we

00:24:31,120 --> 00:24:34,540
make it clear to people that they don't

00:24:32,320 --> 00:24:36,040
necessarily have to try and interpret

00:24:34,540 --> 00:24:37,600
the license string down that they can

00:24:36,040 --> 00:24:39,010
list all the licenses that are inside of

00:24:37,600 --> 00:24:41,440
it but that's going to get a lot more

00:24:39,010 --> 00:24:43,120
complicated if we bring in all the

00:24:41,440 --> 00:24:44,350
variants and help people have people

00:24:43,120 --> 00:24:47,080
want to do that if they're gonna go to

00:24:44,350 --> 00:24:48,400
the problem process of ensuring they

00:24:47,080 --> 00:24:50,020
have to write variant listed in the

00:24:48,400 --> 00:24:52,210
strings then just go and interpret it

00:24:50,020 --> 00:24:54,040
down to just GPL again we're probably

00:24:52,210 --> 00:24:55,960
gonna end up in a situation where if we

00:24:54,040 --> 00:24:58,570
do go to the SPD X naming mano will

00:24:55,960 --> 00:25:01,080
probably drop the interpreted option for

00:24:58,570 --> 00:25:01,080
license

00:25:05,050 --> 00:25:08,620
so does anyone have any particular

00:25:06,880 --> 00:25:14,200
thoughts on whether we should go to the

00:25:08,620 --> 00:25:15,370
naming scheme or not cool well then I'll

00:25:14,200 --> 00:25:18,580
just figure it out I'll just tell you

00:25:15,370 --> 00:25:19,740
what we're doing now you think I should

00:25:18,580 --> 00:25:33,730
just figure it out and tell us where do

00:25:19,740 --> 00:25:34,930
you think we should do it it's true but

00:25:33,730 --> 00:25:37,890
the Linux Foundation isn't exactly

00:25:34,930 --> 00:25:37,890
running out of money right now

00:26:45,779 --> 00:26:50,110
sure I think that the biggest the

00:26:48,789 --> 00:26:51,159
biggest concern with making any sort of

00:26:50,110 --> 00:26:53,230
change to the schema whether we use

00:26:51,159 --> 00:26:55,120
their schema or update our own to be

00:26:53,230 --> 00:26:56,860
different or more consistent is just the

00:26:55,120 --> 00:26:59,110
sheer amount of work it's gonna be to

00:26:56,860 --> 00:27:00,429
get all the packages updated we know

00:26:59,110 --> 00:27:01,990
that there's a significant number of

00:27:00,429 --> 00:27:05,110
packages that have no effective

00:27:01,990 --> 00:27:06,370
maintainer at this point and if we're

00:27:05,110 --> 00:27:08,260
going to make this change across the

00:27:06,370 --> 00:27:10,600
board it is also the right time to do a

00:27:08,260 --> 00:27:13,330
riad of every package inside fedora and

00:27:10,600 --> 00:27:15,970
in the past that was a task that was

00:27:13,330 --> 00:27:17,230
manageable by me it is no longer

00:27:15,970 --> 00:27:19,740
manageable by me and has not been

00:27:17,230 --> 00:27:21,940
manageable by me since course six so

00:27:19,740 --> 00:27:23,500
it's going to have to be something where

00:27:21,940 --> 00:27:25,059
if we take this on we're gonna need a

00:27:23,500 --> 00:27:29,500
lot of volunteers to look through

00:27:25,059 --> 00:27:31,570
packages retag them commit them and and

00:27:29,500 --> 00:27:33,880
have everyone understand that you know

00:27:31,570 --> 00:27:35,500
we will not let things through into

00:27:33,880 --> 00:27:37,360
stable branch until they have been fixed

00:27:35,500 --> 00:27:43,029
on licensing so we will need a flagged a

00:27:37,360 --> 00:27:44,950
process for it and very few of us have

00:27:43,029 --> 00:27:47,740
gone through that process it's not fun

00:27:44,950 --> 00:27:49,179
but it could have benefits for us in

00:27:47,740 --> 00:27:50,620
general if we catch other things because

00:27:49,179 --> 00:27:52,149
every time I look at packages I catch

00:27:50,620 --> 00:27:55,570
things that have sort of slid in the

00:27:52,149 --> 00:27:56,980
cracks so but I also can hear everybody

00:27:55,570 --> 00:27:58,419
who doesn't care about licensing just

00:27:56,980 --> 00:28:00,100
generally groaning because I just added

00:27:58,419 --> 00:28:02,519
a month and a half to our release cycle

00:28:00,100 --> 00:28:02,519
so

00:28:03,340 --> 00:28:08,750
well we can we can script the best guess

00:28:05,870 --> 00:28:11,720
for things but again we're talking about

00:28:08,750 --> 00:28:13,730
the fact that if it was a one to one

00:28:11,720 --> 00:28:15,530
thing then we just script it all across

00:28:13,730 --> 00:28:37,550
the board it's not one-to-one BSD

00:28:15,530 --> 00:28:39,980
doesn't mean BSD and there is there is

00:28:37,550 --> 00:28:41,780
tooling to do that but I know from

00:28:39,980 --> 00:28:43,100
experience that a lot of these things

00:28:41,780 --> 00:28:44,990
are not going to be simple enough that

00:28:43,100 --> 00:28:46,790
we'll be able to just compare the

00:28:44,990 --> 00:28:48,590
copying file it's gonna be there's a

00:28:46,790 --> 00:28:51,410
number of cases where stuff has just

00:28:48,590 --> 00:28:52,700
lost its actual copying and because it's

00:28:51,410 --> 00:28:53,900
code has been copied from one place to

00:28:52,700 --> 00:28:55,760
the other and the only thing that

00:28:53,900 --> 00:29:00,230
survived was the header inside that says

00:28:55,760 --> 00:29:01,940
copyright foo license bsd which bsd

00:29:00,230 --> 00:29:03,320
variant is that we're going to have to

00:29:01,940 --> 00:29:05,090
do some digging to figure that out in

00:29:03,320 --> 00:29:06,680
the old fedora model we didn't care

00:29:05,090 --> 00:29:08,480
because we could trust the bsd was

00:29:06,680 --> 00:29:11,500
reasonably sane but in the new model we

00:29:08,480 --> 00:29:11,500
need to know which variant it is

00:29:15,220 --> 00:29:23,960
probably maybe it depends on what level

00:29:21,740 --> 00:29:25,610
of audit we care about again sort of

00:29:23,960 --> 00:29:27,200
this is the problem of have we let

00:29:25,610 --> 00:29:30,110
people do interpreted license mapping

00:29:27,200 --> 00:29:31,910
where before if it was GPL and there was

00:29:30,110 --> 00:29:34,400
a two or three bsd files we would let

00:29:31,910 --> 00:29:35,930
them call the package just GPL because

00:29:34,400 --> 00:29:38,270
you could honor the bsd terms with the

00:29:35,930 --> 00:29:39,890
GPL if we move to a we move to this

00:29:38,270 --> 00:29:41,750
model we kind of need to drop the

00:29:39,890 --> 00:29:43,100
interpreted license model and then each

00:29:41,750 --> 00:29:44,510
one of those things can't be trusted we

00:29:43,100 --> 00:29:46,160
can't trust the GPL is just going to

00:29:44,510 --> 00:29:48,200
transfer over to the GPL equivalent on

00:29:46,160 --> 00:29:49,640
the SPD acts side we need to re audit

00:29:48,200 --> 00:29:51,200
that treat and determine whether BSD

00:29:49,640 --> 00:29:55,670
variants are in play and then list them

00:29:51,200 --> 00:29:57,800
all out so we can give a guess like we

00:29:55,670 --> 00:30:00,350
can say okay your old license was this

00:29:57,800 --> 00:30:01,970
the new SP DX name for it is this but

00:30:00,350 --> 00:30:03,500
then we also have to say and now you

00:30:01,970 --> 00:30:05,180
have to go and audit the tree and

00:30:03,500 --> 00:30:06,800
determine if there's any other licenses

00:30:05,180 --> 00:30:10,190
that are in play inside of there and

00:30:06,800 --> 00:30:12,530
find the SPD ex names for those now what

00:30:10,190 --> 00:30:14,669
we could do is we could unpack every

00:30:12,530 --> 00:30:16,980
single source file and every single rpm

00:30:14,669 --> 00:30:19,169
running through a tool they did sort of

00:30:16,980 --> 00:30:20,759
an a license lint like there's a couple

00:30:19,169 --> 00:30:23,220
of license lenders that are out there SP

00:30:20,759 --> 00:30:25,049
DX has won and then returned the results

00:30:23,220 --> 00:30:26,580
at the same time to people but that's a

00:30:25,049 --> 00:30:27,840
time intensive process and we don't have

00:30:26,580 --> 00:30:29,429
any of that infrastructure currently

00:30:27,840 --> 00:30:31,019
running so we would have to put that in

00:30:29,429 --> 00:30:32,970
place in order to do that and so I'm

00:30:31,019 --> 00:30:34,919
always reluctant to commit we need to

00:30:32,970 --> 00:31:04,799
run you know license luncheons across

00:30:34,919 --> 00:31:06,720
everything yeah my experience with

00:31:04,799 --> 00:31:08,220
previous initiatives related to this has

00:31:06,720 --> 00:31:10,529
been that the vast majority of Fedora

00:31:08,220 --> 00:31:14,070
packagers have no idea whatsoever the

00:31:10,529 --> 00:31:16,259
answer to that question yeah and so I

00:31:14,070 --> 00:31:17,940
would almost err on the side of

00:31:16,259 --> 00:31:19,289
presenting them everybody with the

00:31:17,940 --> 00:31:21,090
information just to be on the safe side

00:31:19,289 --> 00:31:22,710
and then if somebody says well you know

00:31:21,090 --> 00:31:23,970
I don't understand I can be like well

00:31:22,710 --> 00:31:25,049
this is right here you can look at this

00:31:23,970 --> 00:31:26,549
what don't you understand about this

00:31:25,049 --> 00:31:28,619
versus if we don't provide them that

00:31:26,549 --> 00:31:30,690
information they're just not going to

00:31:28,619 --> 00:31:32,399
click it also we are we do know that

00:31:30,690 --> 00:31:34,049
there's a fair number of fedora packages

00:31:32,399 --> 00:31:35,669
that are effectively unmaintained that

00:31:34,049 --> 00:31:37,019
just continue to turn on forward we're

00:31:35,669 --> 00:31:38,850
the maintainer --zz don't touch them at

00:31:37,019 --> 00:31:41,460
all because they're either dead upstream

00:31:38,850 --> 00:31:42,989
they're you know fossils as far as

00:31:41,460 --> 00:31:44,309
stability is concerned they don't need

00:31:42,989 --> 00:31:46,109
to be touched or two digits got to

00:31:44,309 --> 00:31:48,210
automatically rebuild I could find these

00:31:46,109 --> 00:31:49,830
all the time when the changelog says

00:31:48,210 --> 00:31:51,359
automated rebuild automated Greenville

00:31:49,830 --> 00:31:52,499
automated rebuilt automated rebuilt

00:31:51,359 --> 00:31:54,269
automated rebuild the last time a

00:31:52,499 --> 00:31:56,940
maintainer of human had touched it was

00:31:54,269 --> 00:31:58,559
2013 so there was a fair number of

00:31:56,940 --> 00:32:00,090
packages that are in our ecosystem that

00:31:58,559 --> 00:32:01,320
meet that criteria and we cannot assume

00:32:00,090 --> 00:32:02,940
that the person who's that signed the

00:32:01,320 --> 00:32:06,470
maintainer on that package is going to

00:32:02,940 --> 00:32:06,470
show up and do the license audit for us

00:32:15,799 --> 00:32:18,029
yeah

00:32:16,979 --> 00:32:19,320
and that's true for any distribution

00:32:18,029 --> 00:32:21,839
machinist and that's not a fedora

00:32:19,320 --> 00:32:23,519
problem Debian has the same issue Sousa

00:32:21,839 --> 00:32:26,519
has the same issue as well so it's not

00:32:23,519 --> 00:32:30,209
it's not you know unique to us by any

00:32:26,519 --> 00:32:31,589
means it's just a lot of work and it's

00:32:30,209 --> 00:32:33,389
gonna take a lot of people to figure out

00:32:31,589 --> 00:32:35,070
the correct battle plan to do that and

00:32:33,389 --> 00:32:36,389
so half of the point of this

00:32:35,070 --> 00:32:37,739
presentation is trying to see if there's

00:32:36,389 --> 00:33:02,849
other people that are really interested

00:32:37,739 --> 00:33:04,200
in helping to put that plan together and

00:33:02,849 --> 00:33:05,669
then do it over time

00:33:04,200 --> 00:33:06,869
I think we probably would want to break

00:33:05,669 --> 00:33:08,700
it down and look at things like the core

00:33:06,869 --> 00:33:10,950
set of packages that are put into things

00:33:08,700 --> 00:33:12,509
like the atomic the containers and make

00:33:10,950 --> 00:33:13,679
sure that they are all correct first and

00:33:12,509 --> 00:33:15,419
then move our way outward into the

00:33:13,679 --> 00:33:17,399
ecosystem and try and fix it while

00:33:15,419 --> 00:33:18,629
telling people at the same time hey if

00:33:17,399 --> 00:33:20,789
you can get to one of these packages

00:33:18,629 --> 00:33:21,959
before we do that's great but we would

00:33:20,789 --> 00:33:23,639
like to have some way of being able to

00:33:21,959 --> 00:33:25,259
have people mark their packages as not

00:33:23,639 --> 00:33:27,899
just corrected the license string but

00:33:25,259 --> 00:33:29,429
also audited the source code and I think

00:33:27,899 --> 00:33:47,879
that in order to do that we need to help

00:33:29,429 --> 00:33:51,769
people understand what doing a manual I

00:33:47,879 --> 00:33:51,769
just don't want it to be something

00:34:04,120 --> 00:34:07,120
so

00:34:12,130 --> 00:34:17,239

YouTube URL: https://www.youtube.com/watch?v=j5eCbcrLutE


