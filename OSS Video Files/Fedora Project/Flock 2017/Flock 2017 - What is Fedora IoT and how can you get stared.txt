Title: Flock 2017 - What is Fedora IoT and how can you get stared
Publication date: 2017-10-20
Playlist: Flock 2017
Description: 
	Tuesday August 29, 2017 3:30pm - 4:00pm
@Orleans A + B
Talk: What is Fedora IoT and how can you get stared
Presenter: Peter Robinson

Description:
A brief overview of what we're aiming to achieve with Fedora IoT SIG, a current status of where we are and where we're going and a quick start to getting it running on a device.
Captions: 
	00:00:00,030 --> 00:00:08,370
well let's get started hi I'm Tim

00:00:02,700 --> 00:00:13,009
Robinson I'm here to talk about IOT T on

00:00:08,370 --> 00:00:16,260
Fedora where we are where we're going

00:00:13,009 --> 00:00:20,070
was when I originally proposed this talk

00:00:16,260 --> 00:00:24,150
a couple of months ago the intention was

00:00:20,070 --> 00:00:27,990
to actually have a shiny game i but the

00:00:24,150 --> 00:00:31,650
fedora gods haven't been on my side and

00:00:27,990 --> 00:00:36,890
everything's a little bit up in flames

00:00:31,650 --> 00:00:41,040
along pretty much with some of f27 so

00:00:36,890 --> 00:00:44,370
not quite where I wanted to be but you

00:00:41,040 --> 00:00:45,660
know so it's useful to have a sort of

00:00:44,370 --> 00:00:48,059
general discussion about where we're

00:00:45,660 --> 00:00:51,420
going anyway get some questions some

00:00:48,059 --> 00:00:52,890
ideas feel free to sort of ask questions

00:00:51,420 --> 00:00:57,809
as we go on and I'll do my best to

00:00:52,890 --> 00:00:59,780
answer them as best as possible so this

00:00:57,809 --> 00:01:02,129
is roughly what I'm going to go through

00:00:59,780 --> 00:01:05,580
as I mentioned not quite where I'd like

00:01:02,129 --> 00:01:07,799
to be planning on using a public on

00:01:05,580 --> 00:01:10,500
multi arch again we're not quite where

00:01:07,799 --> 00:01:12,210
we need to be there and various

00:01:10,500 --> 00:01:15,060
networking software stacks and things

00:01:12,210 --> 00:01:21,720
like that but I've been working towards

00:01:15,060 --> 00:01:27,030
and testing so the general idea is three

00:01:21,720 --> 00:01:31,409
architectures x86 64 and RAM 32 with a

00:01:27,030 --> 00:01:34,770
few proposed sort of demo platforms it

00:01:31,409 --> 00:01:35,990
won't be hard to these devices that will

00:01:34,770 --> 00:01:38,890
run on fedora

00:01:35,990 --> 00:01:42,980
or any of the fedora stuff and

00:01:38,890 --> 00:01:47,920
potentially and even like VMs and docker

00:01:42,980 --> 00:01:50,540
and various other images as well but

00:01:47,920 --> 00:01:55,250
originally was planning on using a

00:01:50,540 --> 00:01:58,160
slightly different x86 dev platform with

00:01:55,250 --> 00:02:00,229
Intel's changes around there

00:01:58,160 --> 00:02:09,070
I ate any architecture platforms would

00:02:00,229 --> 00:02:09,070
have to adjust that slightly so and

00:02:09,130 --> 00:02:14,570
Raspberry Pi some 96 boards hopefully in

00:02:13,250 --> 00:02:16,550
the next few months we should have some

00:02:14,570 --> 00:02:20,739
cool announcements with 96 for guys

00:02:16,550 --> 00:02:20,739
about some platforms as well

00:02:20,920 --> 00:02:28,900
Pyne 64 and you know various other

00:02:23,959 --> 00:02:33,080
fedora devices network hardware stacks

00:02:28,900 --> 00:02:35,630
Bluetooth le Boynton's mesh was just

00:02:33,080 --> 00:02:37,670
announced and all the bits are just

00:02:35,630 --> 00:02:41,410
going into the kernel and various piece

00:02:37,670 --> 00:02:43,970
of space utilities at the moment so

00:02:41,410 --> 00:02:45,769
before too long and be able to use that

00:02:43,970 --> 00:02:49,610
as well

00:02:45,769 --> 00:02:51,140
I know to 15-4 and potentially different

00:02:49,610 --> 00:02:53,680
software stacks that sit on top of that

00:02:51,140 --> 00:02:57,739
like thread

00:02:53,680 --> 00:03:00,830
rs40 up 485 and mud baths which has been

00:02:57,739 --> 00:03:03,920
some interesting use cases that have

00:03:00,830 --> 00:03:09,110
come up recently for a fantastic

00:03:03,920 --> 00:03:10,280
technology from the 1970s can and then

00:03:09,110 --> 00:03:12,799
others like you know dead wave

00:03:10,280 --> 00:03:15,790
industrial i/o directly on the Linux

00:03:12,799 --> 00:03:18,579
device and various other bits and pieces

00:03:15,790 --> 00:03:21,709
from a software stack point of view

00:03:18,579 --> 00:03:23,510
nothing major yet actually in fedora a

00:03:21,709 --> 00:03:27,200
lot of these stacks are moving quite

00:03:23,510 --> 00:03:30,300
fast and have all sorts of vast arrays

00:03:27,200 --> 00:03:33,990
of dependencies no great

00:03:30,300 --> 00:03:35,640
literally thousands of dependencies so

00:03:33,990 --> 00:03:37,940
there's been various discussions how we

00:03:35,640 --> 00:03:41,670
would package that up and consume it

00:03:37,940 --> 00:03:43,590
because some of the lower level packages

00:03:41,670 --> 00:03:46,320
it's taken me months to get a few

00:03:43,590 --> 00:03:48,390
reviews here and they're not read we

00:03:46,320 --> 00:03:50,340
would literally have to do thousands so

00:03:48,390 --> 00:03:53,550
did we just do that in one big back

00:03:50,340 --> 00:03:56,310
bundle at the end or do we just use NBN

00:03:53,550 --> 00:03:58,920
and consume it directly into the docker

00:03:56,310 --> 00:04:00,960
container so there's sort of discussions

00:03:58,920 --> 00:04:03,510
around content sets and various other

00:04:00,960 --> 00:04:06,540
bits and pieces that the distribution is

00:04:03,510 --> 00:04:10,010
having as a whole at the moment so with

00:04:06,540 --> 00:04:12,270
things like modularity and those sort of

00:04:10,010 --> 00:04:14,550
components being discussed I'm sort of

00:04:12,270 --> 00:04:16,350
holding off packaging some of that until

00:04:14,550 --> 00:04:18,630
some of the discussions around content

00:04:16,350 --> 00:04:22,430
set and various other bits and pieces

00:04:18,630 --> 00:04:25,320
have some sort of direct decisions and

00:04:22,430 --> 00:04:26,970
there's been a number of different

00:04:25,320 --> 00:04:31,200
discussions with different interested

00:04:26,970 --> 00:04:35,960
people about how things like machine

00:04:31,200 --> 00:04:40,350
learning and AI interacts with IOT so

00:04:35,960 --> 00:04:42,419
tensorflow there's a open source mycroft

00:04:40,350 --> 00:04:46,650
a stack called Bycroft which is similar

00:04:42,419 --> 00:04:52,230
to google home amazon echo style things

00:04:46,650 --> 00:04:54,780
and various other sort of sort of

00:04:52,230 --> 00:04:57,419
intelligent bits and pieces that can

00:04:54,780 --> 00:04:59,730
interact with a iot in different ways so

00:04:57,419 --> 00:05:02,430
there's lots of interest about lots of

00:04:59,730 --> 00:05:05,370
different things but you know where I've

00:05:02,430 --> 00:05:08,310
been over the last few months more about

00:05:05,370 --> 00:05:10,590
getting the low layer core bits and

00:05:08,310 --> 00:05:12,960
pieces into place to build these stacks

00:05:10,590 --> 00:05:15,780
on top of it

00:05:12,960 --> 00:05:17,069
and of course from a home like from an

00:05:15,780 --> 00:05:20,460
industrial point of view there was a

00:05:17,069 --> 00:05:22,860
recent announcement around a product out

00:05:20,460 --> 00:05:25,889
of Dell called edge X which has a lot of

00:05:22,860 --> 00:05:28,020
corporate interest in it but it's a

00:05:25,889 --> 00:05:30,060
little bit like OpenStack that when it

00:05:28,020 --> 00:05:32,039
was first released it was a massive big

00:05:30,060 --> 00:05:33,509
coder and I personally think it's

00:05:32,039 --> 00:05:39,560
probably going to be a couple of years

00:05:33,509 --> 00:05:42,680
away before that goes from a sort of

00:05:39,560 --> 00:05:46,440
kind of dumb out of the company to a

00:05:42,680 --> 00:05:50,759
usable sort of software stack community

00:05:46,440 --> 00:05:52,409
sort of thing that so and then you know

00:05:50,759 --> 00:05:54,300
from a home point of view which is not

00:05:52,409 --> 00:05:56,129
so much my focus but I know a lot of

00:05:54,300 --> 00:05:58,560
people were interested in there's things

00:05:56,129 --> 00:06:01,889
like home assistant and stuff like that

00:05:58,560 --> 00:06:04,500
and again I've not tested that on Fedora

00:06:01,889 --> 00:06:06,569
and I've don't believe stuff like that

00:06:04,500 --> 00:06:08,969
is packaged in fedora and similarly

00:06:06,569 --> 00:06:13,919
probably has vast chunks of dependencies

00:06:08,969 --> 00:06:16,680
around it and so similarly I think it'll

00:06:13,919 --> 00:06:18,690
be useful to look at how we can consume

00:06:16,680 --> 00:06:21,360
that and make sure the i/o to stuff in

00:06:18,690 --> 00:06:22,949
Fedora will run that stuff from a

00:06:21,360 --> 00:06:24,750
container point of view or similar to

00:06:22,949 --> 00:06:26,819
that but not necessarily package

00:06:24,750 --> 00:06:29,009
directly into Fedora because of the vast

00:06:26,819 --> 00:06:30,839
amount of work around it and the fact

00:06:29,009 --> 00:06:33,020
that it's changing and moving fairly

00:06:30,839 --> 00:06:33,020
quickly

00:06:33,400 --> 00:06:39,980
so timeframes plan on having something

00:06:37,520 --> 00:06:43,010
something to keep the tires in the f27

00:06:39,980 --> 00:06:45,320
timeframe there's a bunch of components

00:06:43,010 --> 00:06:48,500
and dependencies that have already

00:06:45,320 --> 00:06:52,940
landed into preneur 26 things like arm

00:06:48,500 --> 00:06:55,310
64-bit SPC's so running on 96 forwards

00:06:52,940 --> 00:06:56,180
and Raspberry Pi and 164 and stuff like

00:06:55,310 --> 00:07:00,880
that

00:06:56,180 --> 00:07:03,590
is already and similar I was hoping to

00:07:00,880 --> 00:07:08,600
hopefully have a demo that tomorrow room

00:07:03,590 --> 00:07:09,800
in my arm talk where we're going in that

00:07:08,600 --> 00:07:11,630
sort of direction so if you're

00:07:09,800 --> 00:07:14,630
interested in that side of things I've

00:07:11,630 --> 00:07:16,430
come to my talk tomorrow and then once

00:07:14,630 --> 00:07:19,910
we get the initial sort of atomic

00:07:16,430 --> 00:07:23,180
multi-touch releasing place as part of

00:07:19,910 --> 00:07:25,820
fedora playgrounds we'll sort of start

00:07:23,180 --> 00:07:28,460
doing a similar to the atomic two-week

00:07:25,820 --> 00:07:31,970
release but we're probably doing more

00:07:28,460 --> 00:07:35,000
monthly release so that we can roll up

00:07:31,970 --> 00:07:37,450
you know patches and fixes and features

00:07:35,000 --> 00:07:42,650
and what have you that we've landed in

00:07:37,450 --> 00:07:47,060
and then hopefully as the Fedora CI

00:07:42,650 --> 00:07:49,220
platform and stabilize and get more

00:07:47,060 --> 00:07:53,000
functionality in place we'll be able to

00:07:49,220 --> 00:07:55,750
use some of that as part of like CI CD

00:07:53,000 --> 00:07:59,690
pipeline interacting with some of our

00:07:55,750 --> 00:08:01,220
supported platforms or invent and docker

00:07:59,690 --> 00:08:03,020
containers together but everyone

00:08:01,220 --> 00:08:05,389
automate as much at the testing as

00:08:03,020 --> 00:08:07,800
possible

00:08:05,389 --> 00:08:09,570
so where is the conversation sort of

00:08:07,800 --> 00:08:14,040
happening well it's a little bit quiet

00:08:09,570 --> 00:08:16,110
at the moment but we have a IOT variety

00:08:14,040 --> 00:08:20,760
channel on freenode of annihilating list

00:08:16,110 --> 00:08:22,770
and just generally some bunch of

00:08:20,760 --> 00:08:26,790
different other standard fedora

00:08:22,770 --> 00:08:31,730
locations and has anyone got any

00:08:26,790 --> 00:08:31,730
questions yes

00:08:33,060 --> 00:08:40,659
that it's very good um so I'm getting

00:08:38,830 --> 00:08:42,610
into place a lot of things like the

00:08:40,659 --> 00:08:44,229
atomic composers and stuff like that and

00:08:42,610 --> 00:08:49,839
we've had some dependency issues there

00:08:44,229 --> 00:08:51,820
around multi art and some of the multi

00:08:49,839 --> 00:08:53,680
arts team has helped out and with fixed

00:08:51,820 --> 00:08:57,550
some of that so I'm hoping that should

00:08:53,680 --> 00:08:59,830
almost be there it depends a little bit

00:08:57,550 --> 00:09:01,930
on what you're interested in

00:08:59,830 --> 00:09:04,750
I should probably actually put up a wiki

00:09:01,930 --> 00:09:07,510
page with a this is what we're doing and

00:09:04,750 --> 00:09:10,660
this is what needs to be done so that I

00:09:07,510 --> 00:09:14,220
can consolidate that in my own and so

00:09:10,660 --> 00:09:14,220
that people can better help

00:09:20,100 --> 00:09:24,980
so the question is am i interested in

00:09:22,680 --> 00:09:27,560
other architectures like raspberry pi

00:09:24,980 --> 00:09:32,580
raspberry pi as an ARM architecture and

00:09:27,560 --> 00:09:36,660
it was will be one of the because

00:09:32,580 --> 00:09:39,500
they're very popular it's one of the

00:09:36,660 --> 00:09:39,500
proposed platforms

00:09:41,800 --> 00:09:49,220
well so the proposed platforms are more

00:09:47,480 --> 00:09:51,470
like reference architectures is probably

00:09:49,220 --> 00:09:53,630
the best so these are the ones that

00:09:51,470 --> 00:09:56,029
we'll be testing and integrating into CI

00:09:53,630 --> 00:09:58,130
and things like that so that's not to

00:09:56,029 --> 00:10:01,910
say that something like a banana pie or

00:09:58,130 --> 00:10:03,680
some other both devices or any of the

00:10:01,910 --> 00:10:05,149
arm-based devices such as a Beagle bone

00:10:03,680 --> 00:10:05,660
or what-have-you won't work perfectly

00:10:05,149 --> 00:10:08,000
fine

00:10:05,660 --> 00:10:11,200
it's just something won't necessarily be

00:10:08,000 --> 00:10:11,200
doing all the testing on those

00:10:20,160 --> 00:10:24,060
correct yes Oh proposed platform is

00:10:22,740 --> 00:10:27,540
probably better off reference

00:10:24,060 --> 00:10:33,449
architecture I'm jet-lagged and I only

00:10:27,540 --> 00:10:35,160
did the slides not that long ago so

00:10:33,449 --> 00:10:38,370
these are more reference architectures

00:10:35,160 --> 00:10:40,829
as opposed to IOT things like sensors

00:10:38,370 --> 00:10:48,930
and stuff like that what sort of sensors

00:10:40,829 --> 00:10:50,430
and things like that so this is some of

00:10:48,930 --> 00:10:53,250
the stuff that I've been getting into

00:10:50,430 --> 00:10:55,470
place in Fedora 26 so things like device

00:10:53,250 --> 00:10:57,389
other ways to support something like say

00:10:55,470 --> 00:11:01,829
the raspberry pi sense hat which has a

00:10:57,389 --> 00:11:06,329
bunch of sensors onboard the industrial

00:11:01,829 --> 00:11:08,850
Ione drivers have like literally

00:11:06,329 --> 00:11:13,529
hundreds or even thousands of drivers in

00:11:08,850 --> 00:11:15,959
there some of the interfaces so a lot of

00:11:13,529 --> 00:11:19,380
the like generic libraries that go

00:11:15,959 --> 00:11:20,990
between the software and like the

00:11:19,380 --> 00:11:24,389
sensors

00:11:20,990 --> 00:11:27,569
well dreadful basically there's there's

00:11:24,389 --> 00:11:30,509
like 20 different libraries to do it and

00:11:27,569 --> 00:11:34,170
in a lot of cases like I mean one of the

00:11:30,509 --> 00:11:37,110
most promising ones is like MRA a slash

00:11:34,170 --> 00:11:38,819
ppm which is two libraries of stacks

00:11:37,110 --> 00:11:43,290
from Intel

00:11:38,819 --> 00:11:46,500
but the upm staff really creates a whole

00:11:43,290 --> 00:11:48,540
bunch of the drivers for sensors and

00:11:46,500 --> 00:11:54,630
user space where they already have

00:11:48,540 --> 00:11:56,310
kernel space drivers in place so a bunch

00:11:54,630 --> 00:11:59,639
and then there's a couple of libraries

00:11:56,310 --> 00:12:02,750
like their bio which is relative but I

00:11:59,639 --> 00:12:06,449
mean for example the kernel has a

00:12:02,750 --> 00:12:07,420
temperature industrial i/o thing where

00:12:06,449 --> 00:12:09,190
they have a unified

00:12:07,420 --> 00:12:11,260
interface where you can query any of the

00:12:09,190 --> 00:12:12,610
sensors that may be available and get

00:12:11,260 --> 00:12:16,240
temperature back in a standardized

00:12:12,610 --> 00:12:17,950
format so why there's not a library with

00:12:16,240 --> 00:12:20,230
Python bindings and other such things

00:12:17,950 --> 00:12:22,330
that just say give me a list of the

00:12:20,230 --> 00:12:27,220
temperature centers and what they're

00:12:22,330 --> 00:12:29,950
recording I'm not sure and that's and

00:12:27,220 --> 00:12:30,370
like you know the industrial I know it

00:12:29,950 --> 00:12:33,330
has

00:12:30,370 --> 00:12:35,560
temperature analog to digital conversion

00:12:33,330 --> 00:12:39,010
like hundreds and hundreds of different

00:12:35,560 --> 00:12:42,490
sensor types in there but there's just

00:12:39,010 --> 00:12:44,530
at the moment the vast majority of the

00:12:42,490 --> 00:12:46,780
there's like dozens of different

00:12:44,530 --> 00:12:50,380
libraries to interface with them and

00:12:46,780 --> 00:12:52,780
most of them are terrible and like

00:12:50,380 --> 00:12:55,840
similarly like with Bluetooth le for

00:12:52,780 --> 00:12:59,980
example there's a standardized GATT

00:12:55,840 --> 00:13:01,840
server standard that is part of the boy

00:12:59,980 --> 00:13:04,180
to expect and there's a whole bunch of

00:13:01,840 --> 00:13:07,090
stuff around that so temperature you

00:13:04,180 --> 00:13:10,510
know human body stuff so like fitness

00:13:07,090 --> 00:13:14,020
bands and things like that so and it has

00:13:10,510 --> 00:13:15,370
like dictionaries about read this thing

00:13:14,020 --> 00:13:18,310
and you will get this data if it's

00:13:15,370 --> 00:13:19,900
available yeah there's about 20

00:13:18,310 --> 00:13:23,110
different Python bindings for it and

00:13:19,900 --> 00:13:24,670
most of them pretty much just rats like

00:13:23,110 --> 00:13:29,550
the Bluetooth command line interface

00:13:24,670 --> 00:13:34,260
where and yeah I've just dreadful so

00:13:29,550 --> 00:13:34,260
that kind of space is

00:13:34,529 --> 00:13:44,649
yet interesting and please so I did a

00:13:40,660 --> 00:13:48,759
bunch of cleanup and enablement around

00:13:44,649 --> 00:13:50,560
some of the kernel stuff but like as in

00:13:48,759 --> 00:13:54,069
the Fedora kernel comfy for the ìiî

00:13:50,560 --> 00:13:57,579
stuff to standardize some of our senses

00:13:54,069 --> 00:13:59,620
there in f26 there probably needs to be

00:13:57,579 --> 00:14:01,660
more done but like in the case of the

00:13:59,620 --> 00:14:04,170
Raspberry Pi sense at three out of the

00:14:01,660 --> 00:14:06,819
four sensors need patches that I haven't

00:14:04,170 --> 00:14:09,940
but I've started to write to get them to

00:14:06,819 --> 00:14:13,600
work and this ends up going down rabbit

00:14:09,940 --> 00:14:15,190
hole so it's that space is quite

00:14:13,600 --> 00:14:17,649
interesting there's a lot of stuff there

00:14:15,190 --> 00:14:20,410
and it's improving quickly but you know

00:14:17,649 --> 00:14:23,920
there's also still a lot of work to be

00:14:20,410 --> 00:14:26,139
done can you talk a little bit more

00:14:23,920 --> 00:14:27,790
about atomic and how you see it working

00:14:26,139 --> 00:14:33,550
out in the IOT space and what some of

00:14:27,790 --> 00:14:36,430
the benefits and challenges okay um so

00:14:33,550 --> 00:14:41,649
it's one of the nice things about atomic

00:14:36,430 --> 00:14:44,290
is that it's read only or primarily read

00:14:41,649 --> 00:14:47,110
only file system you can upgrade it in a

00:14:44,290 --> 00:14:51,790
single snapshot if that upgrade doesn't

00:14:47,110 --> 00:14:55,569
work you can roll it back so in theory

00:14:51,790 --> 00:14:58,810
so recently there was a what company

00:14:55,569 --> 00:15:00,990
that managed brick a whole bunch of

00:14:58,810 --> 00:15:04,470
blocks by shipping out the wrong

00:15:00,990 --> 00:15:06,360
and basically the option people had

00:15:04,470 --> 00:15:09,720
there is to ship back part of the walk

00:15:06,360 --> 00:15:11,580
to get the firmware fixed so you

00:15:09,720 --> 00:15:17,550
shouldn't be able to get into that

00:15:11,580 --> 00:15:20,610
situation and you know so the plan is

00:15:17,550 --> 00:15:25,020
there basically to have similar to what

00:15:20,610 --> 00:15:28,050
the in Fedora 26 the atomic guys are now

00:15:25,020 --> 00:15:30,959
just moving from F 26 to F 27 to F 28

00:15:28,050 --> 00:15:32,970
and it all just becomes one stable Louis

00:15:30,959 --> 00:15:36,420
Channel and so basically Beck's was

00:15:32,970 --> 00:15:39,180
always my plan in that regard we do

00:15:36,420 --> 00:15:43,200
basically monthly releases and it's like

00:15:39,180 --> 00:15:47,820
you know 1701 702 703 and it just rolls

00:15:43,200 --> 00:15:50,490
from F 26 to F 27 to F 28 so that

00:15:47,820 --> 00:15:53,370
devices out there that are running it

00:15:50,490 --> 00:15:57,060
can just keep moving forward and the

00:15:53,370 --> 00:16:01,290
intention with the base IOT OS image is

00:15:57,060 --> 00:16:03,839
to have just enough so it's not like

00:16:01,290 --> 00:16:05,940
something like a server and store or

00:16:03,839 --> 00:16:07,620
workstation so which has thousands and

00:16:05,940 --> 00:16:09,870
thousands of packages there that

00:16:07,620 --> 00:16:13,529
potentially it's a much smaller package

00:16:09,870 --> 00:16:14,490
set so you know things like jelly bean

00:16:13,529 --> 00:16:18,000
and things like that are a lot more

00:16:14,490 --> 00:16:20,250
stable so it's not the upgrade pain to

00:16:18,000 --> 00:16:21,450
jump from the rollout that maybe say the

00:16:20,250 --> 00:16:23,320
gnome stuff where they quite often

00:16:21,450 --> 00:16:25,240
change api's and things like that

00:16:23,320 --> 00:16:30,120
what are some of the challenges you've

00:16:25,240 --> 00:16:30,120
run into there and boy have we seen more

00:16:31,350 --> 00:16:37,480
probably my biggest challenge there is

00:16:33,670 --> 00:16:39,550
time so as part of my run this is part

00:16:37,480 --> 00:16:43,150
of my role but other parts of my role

00:16:39,550 --> 00:16:45,730
include evangelize

00:16:43,150 --> 00:16:48,220
so speaking conferences speaking

00:16:45,730 --> 00:16:51,700
internally speaking with customers and

00:16:48,220 --> 00:16:53,380
partners and and bits and pieces so the

00:16:51,700 --> 00:16:56,230
biggest challenges of them to day at a

00:16:53,380 --> 00:16:58,960
time and also we don't quite have all

00:16:56,230 --> 00:17:01,300
the multi art stuff in place yet so it's

00:16:58,960 --> 00:17:03,460
been working to get a bunch of that in

00:17:01,300 --> 00:17:04,630
place so that we can compose the single

00:17:03,460 --> 00:17:08,520
release across multiple architectures

00:17:04,630 --> 00:17:08,520
but again that's almost there

00:17:17,589 --> 00:17:22,510
so the question is about FPGAs and yes

00:17:20,860 --> 00:17:25,750
there is definitely interest in there

00:17:22,510 --> 00:17:30,550
similarly there's a bunch of interest

00:17:25,750 --> 00:17:32,680
around so OpenCL sort of gpgpu sort of

00:17:30,550 --> 00:17:35,710
stuff so tend to flow that sort of thing

00:17:32,680 --> 00:17:40,270
so yeah then I've had a number of

00:17:35,710 --> 00:17:41,980
conversations where FPGA GPGPU and that

00:17:40,270 --> 00:17:46,330
style of computing is certainly of

00:17:41,980 --> 00:17:48,070
interest because but I think one of the

00:17:46,330 --> 00:17:50,440
classic examples around that sort of

00:17:48,070 --> 00:17:52,470
space is like image recognition so

00:17:50,440 --> 00:17:56,260
there's you know whether it's

00:17:52,470 --> 00:17:58,630
identifying a vehicle versus a bird at a

00:17:56,260 --> 00:18:00,820
gap or an added a lot of gate versus I

00:17:58,630 --> 00:18:02,680
don't know detecting trains that are

00:18:00,820 --> 00:18:05,740
crossing or a number of plates and

00:18:02,680 --> 00:18:09,160
things like that the ability to do like

00:18:05,740 --> 00:18:11,050
a certain level of AI at the device so

00:18:09,160 --> 00:18:14,830
that they can independently make

00:18:11,050 --> 00:18:17,260
decisions about stuff without having to

00:18:14,830 --> 00:18:18,760
go up into the cloud or just simply

00:18:17,260 --> 00:18:21,460
because the speed and time and stuff

00:18:18,760 --> 00:18:24,010
like that like in their soft driving car

00:18:21,460 --> 00:18:26,830
the latency of going back to make a

00:18:24,010 --> 00:18:28,510
decision and going what do I do now and

00:18:26,830 --> 00:18:30,070
then coming back to the car well they

00:18:28,510 --> 00:18:34,150
could run a say in an accident sort of

00:18:30,070 --> 00:18:36,970
thing so there's certainly for certain

00:18:34,150 --> 00:18:39,490
workloads especially sort of Maureen I

00:18:36,970 --> 00:18:41,680
suppose the industrial space that as

00:18:39,490 --> 00:18:44,710
opposed to like the home space there's

00:18:41,680 --> 00:18:46,900
certainly a lot of interesting all sorts

00:18:44,710 --> 00:18:47,750
of like offload in the celebration

00:18:46,900 --> 00:18:52,690
weather

00:18:47,750 --> 00:18:52,690
at pga or GP GP who sort of stuff

00:18:56,140 --> 00:18:59,280
any more questions

00:19:03,830 --> 00:19:07,700
it's a video recording

00:19:16,290 --> 00:19:19,340
no more questions

00:19:19,690 --> 00:19:22,870

YouTube URL: https://www.youtube.com/watch?v=3Oji95Y1EyU


