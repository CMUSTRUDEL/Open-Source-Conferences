Title: Flock 2017 - Pagure Hackfest
Publication date: 2017-11-20
Playlist: Flock 2017
Description: 
	Tuesday August 29, 2017 1:30pm - 3:30pm
@Grand II
Talk: Pagure Hackfest
Presenter: Pierre-Yves Chibon

Description:
With pagure becoming more and more popular and being a front-end to dist-git, I would like to invite anyone interested to join and help closing tickets on pagure, easyfix and others.

This hackfest will welcome anyone with interest in pagure, python knowledge and a local instance of pagure running (follow the instructions on pagure's README).


Let's make pagure even more awesome than it is! :)
Captions: 
	00:00:00,030 --> 00:00:05,190
so the I'm starting again then so that

00:00:03,210 --> 00:00:07,170
this is the diagram of the architecture

00:00:05,190 --> 00:00:08,570
of Tiger which is also present on the

00:00:07,170 --> 00:00:11,099
documentation about Tiger

00:00:08,570 --> 00:00:13,349
so the main part is going to be the

00:00:11,099 --> 00:00:16,830
webserver just the flask application

00:00:13,349 --> 00:00:20,880
that people interact with on the on the

00:00:16,830 --> 00:00:23,730
back end we have a database that the web

00:00:20,880 --> 00:00:26,010
application updates and queries live and

00:00:23,730 --> 00:00:29,640
then we also have part of the the core

00:00:26,010 --> 00:00:32,099
application we have workers that was the

00:00:29,640 --> 00:00:34,739
way we ensured that we did not have to

00:00:32,099 --> 00:00:37,320
request writing to the same git repo at

00:00:34,739 --> 00:00:39,510
the same time so the the git repos are

00:00:37,320 --> 00:00:41,730
locked and the workers are the way to

00:00:39,510 --> 00:00:44,600
spread the load when we when you update

00:00:41,730 --> 00:00:48,030
when you interact with the git repos and

00:00:44,600 --> 00:00:51,539
to do that a synchronous Li so that we

00:00:48,030 --> 00:00:55,260
can we can return quicker to the user

00:00:51,539 --> 00:00:58,020
the page so the web page the database

00:00:55,260 --> 00:00:59,910
the workers also pick information from

00:00:58,020 --> 00:01:03,780
the database interact with the git repo

00:00:59,910 --> 00:01:06,930
they're mostly for updating them the the

00:01:03,780 --> 00:01:08,880
application itself reads them and the

00:01:06,930 --> 00:01:12,240
workers write them that's the that's the

00:01:08,880 --> 00:01:14,010
idea after that we have a post phase

00:01:12,240 --> 00:01:19,170
servers that's used for sending

00:01:14,010 --> 00:01:21,360
notifications so these are and get right

00:01:19,170 --> 00:01:23,880
at the top which is used to give to

00:01:21,360 --> 00:01:26,640
control access shell access get right is

00:01:23,880 --> 00:01:29,189
what when you you know get clone get at

00:01:26,640 --> 00:01:32,369
pagoda Oh blah blah get right is what

00:01:29,189 --> 00:01:35,310
she is what bugger uses to control who

00:01:32,369 --> 00:01:38,189
has access to what these are picked

00:01:35,310 --> 00:01:41,460
basically at the core part of tiger and

00:01:38,189 --> 00:01:44,610
everything else is premature optional so

00:01:41,460 --> 00:01:49,170
we have a military R who is part of post

00:01:44,610 --> 00:01:51,060
fixed and with role is to be able to you

00:01:49,170 --> 00:01:52,619
should be able to reply to a ticket a

00:01:51,060 --> 00:01:54,630
notification from Peggy bought a ticket

00:01:52,619 --> 00:01:58,590
and your command it directly had it to

00:01:54,630 --> 00:02:00,270
the ticket from the reply so that's one

00:01:58,590 --> 00:02:01,460
part that Adam has been working on at

00:02:00,270 --> 00:02:05,729
one point

00:02:01,460 --> 00:02:08,520
fixing it we have the web books

00:02:05,729 --> 00:02:11,940
so we book to get notification to third

00:02:08,520 --> 00:02:13,720
party basically we have the the CIA the

00:02:11,940 --> 00:02:17,370
CIA work that's something

00:02:13,720 --> 00:02:19,989
one of the GC accidents fahan worked on

00:02:17,370 --> 00:02:22,030
currently it supports only Jenkins but

00:02:19,989 --> 00:02:23,680
the way it's built is such that we

00:02:22,030 --> 00:02:26,709
should be able to add pretty much any

00:02:23,680 --> 00:02:29,410
other CI system that we would want to

00:02:26,709 --> 00:02:35,350
interact with easily I started to look

00:02:29,410 --> 00:02:37,840
at Travis recently but not enough that

00:02:35,350 --> 00:02:39,250
there is anything to work on that would

00:02:37,840 --> 00:02:41,709
be something interesting to work on but

00:02:39,250 --> 00:02:43,630
it's it's not going to be a small task I

00:02:41,709 --> 00:02:45,760
think but it would be would be nice to

00:02:43,630 --> 00:02:48,569
get there and then we have the the

00:02:45,760 --> 00:02:52,989
events or server here which is used for

00:02:48,569 --> 00:02:55,030
so when you update when you comment on a

00:02:52,989 --> 00:02:55,989
ticket on pull request or someone else

00:02:55,030 --> 00:02:57,790
comment on that you get all that

00:02:55,989 --> 00:02:59,110
ProQuest and you're viewing the page the

00:02:57,790 --> 00:03:01,000
comment appears directly on the page

00:02:59,110 --> 00:03:03,640
without the need for you to reload it

00:03:01,000 --> 00:03:07,840
and that's what the events or server is

00:03:03,640 --> 00:03:10,000
for so it's quite handy because you can

00:03:07,840 --> 00:03:11,530
basically then just chat with someone on

00:03:10,000 --> 00:03:13,930
a ticket if you're both looking at the

00:03:11,530 --> 00:03:16,480
page the documents will show up as they

00:03:13,930 --> 00:03:18,459
are posted so it's quite nice it's also

00:03:16,480 --> 00:03:22,630
very handy for pull request because it

00:03:18,459 --> 00:03:25,269
allows you to comment on a deef and not

00:03:22,630 --> 00:03:26,680
reload the entire page so you stay at

00:03:25,269 --> 00:03:28,180
the place where you are you command is

00:03:26,680 --> 00:03:30,040
sent it appears on the page and you

00:03:28,180 --> 00:03:31,989
still you're still at the same place on

00:03:30,040 --> 00:03:33,489
the page you're not sent back to to the

00:03:31,989 --> 00:03:37,570
top of the page as you would if you

00:03:33,489 --> 00:03:40,750
would to a regular post request and then

00:03:37,570 --> 00:03:43,209
the last item we have the packet dog

00:03:40,750 --> 00:03:45,880
server so that's what's runs the dog

00:03:43,209 --> 00:03:47,829
stop ago at work so it's a separate

00:03:45,880 --> 00:03:50,530
flask application that just displays the

00:03:47,829 --> 00:03:54,150
documentation of the talk ripples and at

00:03:50,530 --> 00:03:58,390
the top here we have the load JSON

00:03:54,150 --> 00:04:00,190
module service which is used for when

00:03:58,390 --> 00:04:02,319
you sew a project on Peggy

00:04:00,190 --> 00:04:04,390
as for get ripples there is to source

00:04:02,319 --> 00:04:07,230
git repos to is the documentation git

00:04:04,390 --> 00:04:10,450
repo and then there is the issues and

00:04:07,230 --> 00:04:13,060
pull requests good key triples and if

00:04:10,450 --> 00:04:16,239
you you can interact with the issues and

00:04:13,060 --> 00:04:20,680
per request get ripples manually locally

00:04:16,239 --> 00:04:24,340
on your phone your laptop but if you and

00:04:20,680 --> 00:04:25,599
if you turn on the propagate hook you

00:04:24,340 --> 00:04:27,090
can actually also update the database

00:04:25,599 --> 00:04:29,280
from

00:04:27,090 --> 00:04:33,090
to the ratio get Ripper for example and

00:04:29,280 --> 00:04:35,490
that's what the lodges on service is

00:04:33,090 --> 00:04:38,400
about you will push to the to the issue

00:04:35,490 --> 00:04:40,380
it will see which file change and update

00:04:38,400 --> 00:04:42,990
the database based on the the content of

00:04:40,380 --> 00:04:46,050
the files and then we have the log come

00:04:42,990 --> 00:04:47,699
service here who is basically a it's but

00:04:46,050 --> 00:04:50,820
it's actually part of the default look

00:04:47,699 --> 00:04:54,300
it's not a dedicated one and that book

00:04:50,820 --> 00:04:56,610
is log logging the activity the commit

00:04:54,300 --> 00:04:58,620
activities in the database so that we

00:04:56,610 --> 00:05:01,889
can we can fill up the calendar it map

00:04:58,620 --> 00:05:03,840
that shows up on every users profile so

00:05:01,889 --> 00:05:05,340
if you're looking to why certain

00:05:03,840 --> 00:05:07,050
activity does not show up in the

00:05:05,340 --> 00:05:09,419
calendar it map that's gonna be the

00:05:07,050 --> 00:05:11,490
outcome if you're looking for why

00:05:09,419 --> 00:05:14,030
certain issue is not refreshed while I

00:05:11,490 --> 00:05:16,770
pushed that's gonna be the lurch it's on

00:05:14,030 --> 00:05:18,990
these links so that's a little bit the

00:05:16,770 --> 00:05:22,800
overview of the architecture of the

00:05:18,990 --> 00:05:25,710
project now I guess what we can do is

00:05:22,800 --> 00:05:27,930
would you laugh so the easy way the

00:05:25,710 --> 00:05:29,430
first thing is to get yourself a pagar

00:05:27,930 --> 00:05:31,289
instance running on your machine if you

00:05:29,430 --> 00:05:33,180
don't already have one and then we can

00:05:31,289 --> 00:05:35,220
just go through the ISO so they're easy

00:05:33,180 --> 00:05:37,710
fix or through the regular tickets and

00:05:35,220 --> 00:05:38,850
see which one we can take off which

00:05:37,710 --> 00:05:41,190
means that I think we can stop a

00:05:38,850 --> 00:05:43,200
recording because yeah I'm not going to

00:05:41,190 --> 00:05:46,370
stand here if there is only the five of

00:05:43,200 --> 00:05:46,370

YouTube URL: https://www.youtube.com/watch?v=ShrVU82T9lU


