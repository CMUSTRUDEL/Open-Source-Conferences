Title: Flock 2017 - Modularity - the future, building and packaging
Publication date: 2017-10-20
Playlist: Flock 2017
Description: 
	Thursday August 31, 2017 2:00pm - 3:00pm
@Orleans A + B
Talk: Modularity - the future, building and packaging
Presenter: Ralph Bean

Description:
Collection of three short Modularity talks:

1/ Modularity Today & in the future! — Langdon White, Adam Samalik
We have now released the preview of the Modular Distro. We plan to release the Server Edition fully modular. Users can elect to take advantage of these components or use the system(s) in a more traditional way. So.. what's next?

Well, as many of you know, we still have a very large OS-layer and cannot be as independent in our application lifecycles as we would like. What can we do now?

During this talk we will propose various mechanisms for increasing the lifecycle independence including new packaging, packaging automation, considering dynamic loading of libraries using new mechanisms. We will also show how containers can be better leveraged as core parts of a user's system allowing for the independence of those components from the OS and other applications.

The future is exciting and allows for significant innovation. Let's work together to define it.


2/ The Module Build Service — Ralph Bean
The Module Build Service (MBS) is live! We presented the first
prototype of the MBS as part of the Modularity presentations at last
year’s Flock in Krakow. It has been a year now. Time to review! We’ll
discuss:

- The history of thinking on “how to build modules”. What has changed in the last year?
- A review of MBS internals. How does it work today? You can help make it better!
- What missing features we would like to see implemented in the coming year.

Come for a walk down memory lane and a glimpse at the future. Cheers!


3/ Packaging Modularity — Adam Samalik
Packaging in Modularity is different. There is not a single huge space where all the people work anymore. A package doesn't need to come just in a single version. All packages doesn't need to be supported on the same level. Your personal package does not need to break other people's work just because they started to using it...
I will compare packaging of the classic distribution with modularity. Will show you how modularity packaging looks now - what's good, what's bad, what's crazy
YouTube URL: https://www.youtube.com/watch?v=BbzO_-TKqic


