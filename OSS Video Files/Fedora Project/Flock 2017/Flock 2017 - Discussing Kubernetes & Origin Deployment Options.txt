Title: Flock 2017 - Discussing Kubernetes & Origin Deployment Options
Publication date: 2017-11-20
Playlist: Flock 2017
Description: 
	Wednesday August 30, 2017 11:00am - 12:00pm
@Grand II
Talk: Discussing Kubernetes & Origin Deployment Options
Presenter: Jason Brooks, Yu Qi Zhang

Decription:
When it comes to methods of deploying kubernetes and openshift origin clusters, the Fedora community faces an embarrassment of riches: ansible scripts, kubeadm, oc cluster up, minishift and minikube, among other options. In this work session, we'll try to lay out the main options for setting up these clusters, seek out discussion and feedback about which options are working best for our community members, and develop some plans around better improving, documenting, and promoting these options.
Captions: 
	00:00:00,000 --> 00:00:08,130
all right so this talk is really I like

00:00:06,029 --> 00:00:10,679
it to be somewhat of a discussion if we

00:00:08,130 --> 00:00:12,420
can make it so because there's there's

00:00:10,679 --> 00:00:15,650
some things that we need to discuss as

00:00:12,420 --> 00:00:20,100
Fedora surrounding communities and

00:00:15,650 --> 00:00:23,240
openshift specifically around you know

00:00:20,100 --> 00:00:25,800
how are we going to get this stuff onto

00:00:23,240 --> 00:00:28,439
Fedora or how do we get it onto Fedora

00:00:25,800 --> 00:00:32,040
how do we keep it updated and then you

00:00:28,439 --> 00:00:34,290
know getting the software onto fedora in

00:00:32,040 --> 00:00:36,989
fedora isn't enough we also have to

00:00:34,290 --> 00:00:39,899
configure it yeah on fedora and deploy

00:00:36,989 --> 00:00:41,570
it and maintain it know that so first

00:00:39,899 --> 00:00:44,579
just a bit you know white kubernetes

00:00:41,570 --> 00:00:46,950
containers are like ultra hot it's the

00:00:44,579 --> 00:00:49,520
new you know generations and in future

00:00:46,950 --> 00:00:51,809
everything so for all the people who are

00:00:49,520 --> 00:00:53,430
psyched about containers the line to run

00:00:51,809 --> 00:00:57,180
contain it their applications and

00:00:53,430 --> 00:00:59,100
containers you're gonna really do it you

00:00:57,180 --> 00:01:02,969
need to your apps need to span multiple

00:00:59,100 --> 00:01:06,600
hosts you're not gonna run your

00:01:02,969 --> 00:01:10,110
production app on your MacBook or

00:01:06,600 --> 00:01:14,250
whatever then kubernetes is great for

00:01:10,110 --> 00:01:16,259
this you take your container and or

00:01:14,250 --> 00:01:18,479
multiple containers if you want them to

00:01:16,259 --> 00:01:24,000
share resources together in a pod you

00:01:18,479 --> 00:01:26,189
toss it to the cluster and it's gets

00:01:24,000 --> 00:01:26,880
scheduled on one of the nodes that can

00:01:26,189 --> 00:01:28,890
handle it

00:01:26,880 --> 00:01:31,729
you've got services to make sure that

00:01:28,890 --> 00:01:34,170
the network traffic goes the right way

00:01:31,729 --> 00:01:35,759
so it works well and a lot of

00:01:34,170 --> 00:01:37,860
communities have adopted it and

00:01:35,759 --> 00:01:41,189
specifically a lot of communities that

00:01:37,860 --> 00:01:44,340
are important to Fedora project atomic

00:01:41,189 --> 00:01:49,020
which is this umbrella project that puts

00:01:44,340 --> 00:01:52,200
out Potomac coasts and a lot of other

00:01:49,020 --> 00:01:54,390
kind of container ish technologies kind

00:01:52,200 --> 00:01:57,030
of fin under that umbrella has been

00:01:54,390 --> 00:01:58,920
shipping in fedora atomic yeah and also

00:01:57,030 --> 00:02:01,740
sent to us atomic they'd be shipping

00:01:58,920 --> 00:02:05,250
kubernetes as part of the hosts from the

00:02:01,740 --> 00:02:07,069
beginning of those projects in Fedora

00:02:05,250 --> 00:02:09,989
Leon the Fedora atomic work group and

00:02:07,069 --> 00:02:12,900
kubernetes as part of what we do there

00:02:09,989 --> 00:02:16,020
Red Hat has you know huge investments in

00:02:12,900 --> 00:02:18,480
kubernetes through openshift openshift

00:02:16,020 --> 00:02:20,640
is based on kubernetes there's also like

00:02:18,480 --> 00:02:21,930
just a ton of really cool projects

00:02:20,640 --> 00:02:23,970
happening all the time when one of the

00:02:21,930 --> 00:02:26,250
projects that I'm really interested in

00:02:23,970 --> 00:02:29,790
right now it's called cube Merc and it

00:02:26,250 --> 00:02:32,220
is about running virtual machines along

00:02:29,790 --> 00:02:34,680
with all of the live migration and all

00:02:32,220 --> 00:02:37,170
of the stuff that we expect to get out

00:02:34,680 --> 00:02:38,879
of you know virtualization system but

00:02:37,170 --> 00:02:40,769
using kubernetes to do the scheduling

00:02:38,879 --> 00:02:42,209
and stuff so and that's one that I'm

00:02:40,769 --> 00:02:44,519
particularly interested in but there's

00:02:42,209 --> 00:02:46,590
just a ton of activity around kubernetes

00:02:44,519 --> 00:02:48,720
and you know just in the kind of

00:02:46,590 --> 00:02:50,670
container community in general a ton of

00:02:48,720 --> 00:02:51,959
action around kubernetes so i mean

00:02:50,670 --> 00:02:54,709
that's why we're talking about it it

00:02:51,959 --> 00:02:58,500
matters for fedora for all those reasons

00:02:54,709 --> 00:03:00,599
so this is important point you know open

00:02:58,500 --> 00:03:04,349
shipped origin is based on kubernetes

00:03:00,599 --> 00:03:06,239
but they are different they do some

00:03:04,349 --> 00:03:10,260
different things and you know I found

00:03:06,239 --> 00:03:12,780
personally that it's difficult to be

00:03:10,260 --> 00:03:14,970
deeply paying attention to kubernetes

00:03:12,780 --> 00:03:16,860
and OpenShift origin and at the same

00:03:14,970 --> 00:03:19,050
time we kind of just as an individual

00:03:16,860 --> 00:03:21,120
contributor need to make some decisions

00:03:19,050 --> 00:03:24,150
about where you're gonna place your

00:03:21,120 --> 00:03:26,670
attention and efforts and since I've

00:03:24,150 --> 00:03:28,709
been working with project atomic fedora

00:03:26,670 --> 00:03:29,280
atomic and Santos atomic and since

00:03:28,709 --> 00:03:32,190
kubernetes

00:03:29,280 --> 00:03:35,400
is comes baked into those images you

00:03:32,190 --> 00:03:37,769
know from the start it's like hey we're

00:03:35,400 --> 00:03:39,720
shipping this on our image it better

00:03:37,769 --> 00:03:43,080
work so I have put a lot of my effort

00:03:39,720 --> 00:03:46,580
into kubernetes you know more than an

00:03:43,080 --> 00:03:48,989
open shift and you know that's why but

00:03:46,580 --> 00:03:50,459
in kind of some of the reasons why you

00:03:48,989 --> 00:03:51,659
might run a lot of the other I kind of

00:03:50,459 --> 00:03:52,500
linked it to some of the fedora

00:03:51,659 --> 00:03:55,230
foundation

00:03:52,500 --> 00:03:57,900
values you know first if you want just

00:03:55,230 --> 00:04:00,450
the very latest stuff kubernetes leads

00:03:57,900 --> 00:04:03,090
open shipped origin you know it's on

00:04:00,450 --> 00:04:05,459
average it's about a release ahead of

00:04:03,090 --> 00:04:07,769
where open shift origin is even though

00:04:05,459 --> 00:04:12,049
OpenShift as you know that gap has

00:04:07,769 --> 00:04:12,049
gotten smaller over time that's just

00:04:12,880 --> 00:04:18,700
first also on the friends point

00:04:15,989 --> 00:04:20,890
kubernetes is just super popular I mean

00:04:18,700 --> 00:04:23,260
even if we decided that in Fedora we

00:04:20,890 --> 00:04:26,110
wanted to mainly focus on origin which

00:04:23,260 --> 00:04:28,360
whatever that that would be cool we

00:04:26,110 --> 00:04:30,430
can't we have to have a story for

00:04:28,360 --> 00:04:32,770
kubernetes around fedora Kirby's is just

00:04:30,430 --> 00:04:35,830
massive and a lot of people want to run

00:04:32,770 --> 00:04:38,200
that and we can't just turn them away

00:04:35,830 --> 00:04:41,800
you know or tell them oh just go use the

00:04:38,200 --> 00:04:44,110
boom - or something yeah or sent to us

00:04:41,800 --> 00:04:45,730
or something other I mean Fedora has to

00:04:44,110 --> 00:04:47,740
have some kind of game plan even if it

00:04:45,730 --> 00:04:50,770
is Doc's to show you how to use the

00:04:47,740 --> 00:04:53,050
upstream well you know why you might

00:04:50,770 --> 00:04:54,820
want to use origin you know again going

00:04:53,050 --> 00:04:56,710
back to some of the Fedora foundations

00:04:54,820 --> 00:04:58,990
features it adds on some really cool

00:04:56,710 --> 00:05:01,750
features on top of the base kubernetes I

00:04:58,990 --> 00:05:04,660
mean a lot of stuff around the kind of

00:05:01,750 --> 00:05:07,270
build pipeline stuff really slick you

00:05:04,660 --> 00:05:09,580
why it's kind of like a real good kind

00:05:07,270 --> 00:05:11,470
of a self-service story if I if I was

00:05:09,580 --> 00:05:14,590
going to be running a cluster and

00:05:11,470 --> 00:05:17,230
exposing it to multiple people I would

00:05:14,590 --> 00:05:22,510
want to use openshift for that just to

00:05:17,230 --> 00:05:27,700
help me manage together on the friends

00:05:22,510 --> 00:05:30,910
yep you know it's not you know it's not

00:05:27,700 --> 00:05:33,520
not it's safe to say that it is not as

00:05:30,910 --> 00:05:35,050
popular as playing kubernetes is on its

00:05:33,520 --> 00:05:37,020
own I mean that it just says that

00:05:35,050 --> 00:05:40,270
kubernetes has a bigger kind of

00:05:37,020 --> 00:05:42,550
mindshare footprint but we have a lot of

00:05:40,270 --> 00:05:44,290
friends working in openshift a ton of

00:05:42,550 --> 00:05:46,120
Red Hatters are working on it and

00:05:44,290 --> 00:05:48,850
they're doing awesome work I mean

00:05:46,120 --> 00:05:51,370
there's totally I mean there's great

00:05:48,850 --> 00:05:53,560
documentation the ansible scripts are

00:05:51,370 --> 00:05:56,590
really great there's just a ton there's

00:05:53,560 --> 00:05:58,720
a lot of goodness to be had in openshift

00:05:56,590 --> 00:06:02,830
and also because it's kind of coming

00:05:58,720 --> 00:06:04,630
from a you know red hat fedora place a

00:06:02,830 --> 00:06:07,240
lot of the ways that openshift works

00:06:04,630 --> 00:06:09,790
kind of fit well with not surprisingly

00:06:07,240 --> 00:06:11,350
kind of the way that Fedora works so

00:06:09,790 --> 00:06:13,150
there's there's a lot of good stuff to

00:06:11,350 --> 00:06:15,520
be gained there and for an individual

00:06:13,150 --> 00:06:17,800
contributor there's good reasons why you

00:06:15,520 --> 00:06:20,979
want might want to kind of focus on that

00:06:17,800 --> 00:06:24,700
I mean Fedora I can and should and does

00:06:20,979 --> 00:06:26,190
do both but but for both kubernetes and

00:06:24,700 --> 00:06:27,690
open chef their place there

00:06:26,190 --> 00:06:30,270
things that we're not doing and they're

00:06:27,690 --> 00:06:32,670
things that we could be doing better but

00:06:30,270 --> 00:06:35,310
we got to have contributors to do the

00:06:32,670 --> 00:06:38,400
work so you know that's that's a key

00:06:35,310 --> 00:06:40,050
obviously to everything so I kind of

00:06:38,400 --> 00:06:42,750
broke down to the three parts kind of

00:06:40,050 --> 00:06:45,660
the pieces that are involved in the

00:06:42,750 --> 00:06:47,520
kubernetes origin story on fedora and it

00:06:45,660 --> 00:06:51,600
first starts with just the software

00:06:47,520 --> 00:06:53,310
itself kubernetes every time there's a

00:06:51,600 --> 00:06:56,070
release they release binaries for all

00:06:53,310 --> 00:06:57,930
the components and there are a lot of

00:06:56,070 --> 00:07:00,000
releases like right now

00:06:57,930 --> 00:07:03,990
there are you know considered to be

00:07:00,000 --> 00:07:06,420
supported active releases 1.5 1.6 1.7

00:07:03,990 --> 00:07:09,210
and there's one that eight like alpha

00:07:06,420 --> 00:07:11,940
release right right now I mean that's

00:07:09,210 --> 00:07:14,280
four releases worth paying attention the

00:07:11,940 --> 00:07:16,920
people who are interested in kubernetes

00:07:14,280 --> 00:07:19,860
are going to be looking for on some

00:07:16,920 --> 00:07:22,680
level each one of those has these kind

00:07:19,860 --> 00:07:25,680
of z streams and those come out pretty

00:07:22,680 --> 00:07:27,930
frequently and so for all of those

00:07:25,680 --> 00:07:31,590
releases you can go to kubernetes and

00:07:27,930 --> 00:07:33,419
grab the binary I think that's that's

00:07:31,590 --> 00:07:36,120
cool also with multiple architectures a

00:07:33,419 --> 00:07:38,400
lot of installation methods they expect

00:07:36,120 --> 00:07:41,580
to see be able to say okay go give me

00:07:38,400 --> 00:07:44,550
1.6 not seven give me 1.5 dot you know

00:07:41,580 --> 00:07:46,950
three or whatever and so there's kind of

00:07:44,550 --> 00:07:48,660
this expectation that all these binaries

00:07:46,950 --> 00:07:51,630
are going to be available somewhere and

00:07:48,660 --> 00:07:53,460
they are upstream it's similar with open

00:07:51,630 --> 00:07:56,400
shipped origin they provide binaries but

00:07:53,460 --> 00:07:58,919
there are fewer individual releases so

00:07:56,400 --> 00:08:01,740
it's it's a little bit easier to kind of

00:07:58,919 --> 00:08:03,030
keep track of the thing about using the

00:08:01,740 --> 00:08:05,520
upstream binaries meaning like for

00:08:03,030 --> 00:08:07,710
instance again was our Fedora story we

00:08:05,520 --> 00:08:09,960
could just say okay go and grab the

00:08:07,710 --> 00:08:12,870
binaries from the project you know if

00:08:09,960 --> 00:08:14,910
you want to build an RPM grab the the

00:08:12,870 --> 00:08:17,370
pre-built binary and dump it into an RPM

00:08:14,910 --> 00:08:19,350
and use that from with that is that you

00:08:17,370 --> 00:08:21,000
know these are outside of our control we

00:08:19,350 --> 00:08:23,100
ship things that come from our build

00:08:21,000 --> 00:08:27,720
systems sometimes we want to patch

00:08:23,100 --> 00:08:29,820
things so you know we there are reasons

00:08:27,720 --> 00:08:32,880
why we don't want to just use playing

00:08:29,820 --> 00:08:36,000
upstream binaries so we know if Fedora

00:08:32,880 --> 00:08:39,330
rpms and we had them since the beginning

00:08:36,000 --> 00:08:40,130
and we get to distribute what we built

00:08:39,330 --> 00:08:45,140
we get a

00:08:40,130 --> 00:08:47,090
hash things but we haven't been tracking

00:08:45,140 --> 00:08:49,010
like I said there are these you know

00:08:47,090 --> 00:08:50,420
four releases worth paying attention to

00:08:49,010 --> 00:08:52,850
at a time you know three just kind of

00:08:50,420 --> 00:08:56,120
stable ones we're not tracking all those

00:08:52,850 --> 00:08:59,450
super closely and we bump against issues

00:08:56,120 --> 00:09:01,760
with the way that we do packages each

00:08:59,450 --> 00:09:05,240
pack we have a kubernetes package and so

00:09:01,760 --> 00:09:07,460
we can kind of have F 25 F 26 and

00:09:05,240 --> 00:09:09,290
rawhide are kind of this the places

00:09:07,460 --> 00:09:11,840
where we have where there can be

00:09:09,290 --> 00:09:14,390
separate kubernetes packages and then we

00:09:11,840 --> 00:09:17,000
can do things like do kubernetes you

00:09:14,390 --> 00:09:18,290
know coop 1/5 q1 I mean you know we can

00:09:17,000 --> 00:09:21,740
there's different things we can do we're

00:09:18,290 --> 00:09:27,200
not doing that right now or just so but

00:09:21,740 --> 00:09:29,660
in Fedora 25 in atomic we kind of we

00:09:27,200 --> 00:09:32,810
kind of pay attention to the latest

00:09:29,660 --> 00:09:35,360
stream so basically Fedora 25 kubernetes

00:09:32,810 --> 00:09:37,400
is 1.5 dot it's something I'm not sure

00:09:35,360 --> 00:09:41,360
but it's not the current 1.5 stream

00:09:37,400 --> 00:09:44,900
point release and then in Fedora 26

00:09:41,360 --> 00:09:47,390
right now we have 1.6 1.7 is in updates

00:09:44,900 --> 00:09:50,120
testing so when that goes stable we're

00:09:47,390 --> 00:09:51,950
going to have that shift from you know

00:09:50,120 --> 00:09:54,890
that point release so there are things

00:09:51,950 --> 00:09:57,650
that we're bumping up against the issues

00:09:54,890 --> 00:09:59,810
like that they're now modularity might

00:09:57,650 --> 00:10:02,840
help because it gives us a scheme to say

00:09:59,810 --> 00:10:05,810
instead of saying there's a F 25 of 26 F

00:10:02,840 --> 00:10:09,370
27 package there could be modules based

00:10:05,810 --> 00:10:11,780
on cube 1 5 cube 1 6 cube 1 7 cetera and

00:10:09,370 --> 00:10:15,230
we could especially be combine that with

00:10:11,780 --> 00:10:17,120
containers that gives us a way to sort

00:10:15,230 --> 00:10:18,590
of satisfy this expectation that I

00:10:17,120 --> 00:10:20,420
should be able to go out and grab a

00:10:18,590 --> 00:10:24,230
particular version of kubernetes the one

00:10:20,420 --> 00:10:26,990
that I want and again origin we have

00:10:24,230 --> 00:10:30,020
Fedora rpms for origin and you know they

00:10:26,990 --> 00:10:34,100
move at a slower pace and it's more you

00:10:30,020 --> 00:10:35,810
know it's we track the latest Fedora the

00:10:34,100 --> 00:10:41,420
latest origin you know release pretty

00:10:35,810 --> 00:10:42,860
well in Fedora I think ok so you know

00:10:41,420 --> 00:10:46,010
that's like where the binaries are

00:10:42,860 --> 00:10:48,680
coming from themselves but and I should

00:10:46,010 --> 00:10:50,300
say too about the the door RPMs you know

00:10:48,680 --> 00:10:52,430
one thing that we can do to help us

00:10:50,300 --> 00:10:53,089
track better and that individual

00:10:52,430 --> 00:10:59,059
contributors

00:10:53,089 --> 00:11:01,909
do is keep an eye on Bodi you know it we

00:10:59,059 --> 00:11:06,529
do not we often don't have like fast

00:11:01,909 --> 00:11:10,489
timely karma to get releases from one to

00:11:06,529 --> 00:11:14,869
the next so even if we did update the

00:11:10,489 --> 00:11:16,729
committee's in f25 it would probably sit

00:11:14,869 --> 00:11:19,819
there I mean it would probably sit there

00:11:16,729 --> 00:11:22,399
indefinitely without enough karma to get

00:11:19,819 --> 00:11:24,079
pushed to stable just based on the car

00:11:22,399 --> 00:11:25,939
you know the current level of kind of

00:11:24,079 --> 00:11:27,379
you know testing that we're getting just

00:11:25,939 --> 00:11:29,089
from individual contributors I mean

00:11:27,379 --> 00:11:31,309
that's an area if we want this to move

00:11:29,089 --> 00:11:33,499
faster and more efficiently and even if

00:11:31,309 --> 00:11:36,589
modularity solves some of our versioning

00:11:33,499 --> 00:11:39,259
issues we still need the testing and we

00:11:36,589 --> 00:11:41,659
still need contributors around that so

00:11:39,259 --> 00:11:44,089
the packaging part you can do no

00:11:41,659 --> 00:11:46,159
packaging you can just copy binaries to

00:11:44,089 --> 00:11:48,889
user bin local and you can run them you

00:11:46,159 --> 00:11:50,859
can make a system D get up file dan in

00:11:48,889 --> 00:11:53,689
his talk mention kubernetes the hard way

00:11:50,859 --> 00:11:55,999
Kelsey Hightower's really popular or

00:11:53,689 --> 00:11:59,329
how-to and that's what he does he's he

00:11:55,999 --> 00:12:02,029
says go to kubernetes download binaries

00:11:59,329 --> 00:12:06,579
dropping user ben local write these unit

00:12:02,029 --> 00:12:09,109
files and you you know go from there

00:12:06,579 --> 00:12:12,289
there's this hypercube image this is a

00:12:09,109 --> 00:12:17,409
super popular way to deploy kubernetes a

00:12:12,289 --> 00:12:20,749
lot of different installers use this and

00:12:17,409 --> 00:12:23,949
and it's one binary that basically is

00:12:20,749 --> 00:12:28,069
that does all the jobscheduler api

00:12:23,949 --> 00:12:31,579
server client you can use that one

00:12:28,069 --> 00:12:36,349
binary to run all the all the different

00:12:31,579 --> 00:12:38,029
roles now from upstream it's one of the

00:12:36,349 --> 00:12:41,689
most common ways that hypercube gets

00:12:38,029 --> 00:12:44,959
used is upstream makes a hypercube image

00:12:41,689 --> 00:12:46,969
and it's debian base plus the hypercube

00:12:44,959 --> 00:12:49,459
binary gets pulled in from there where

00:12:46,969 --> 00:12:51,199
their binaries are and goes out and

00:12:49,459 --> 00:12:53,479
that's the image and then they have one

00:12:51,199 --> 00:12:56,599
of those for every you know one up five

00:12:53,479 --> 00:12:58,309
but you know three four or five you know

00:12:56,599 --> 00:13:00,889
every single time they do a release they

00:12:58,309 --> 00:13:03,319
have a corresponding image for that and

00:13:00,889 --> 00:13:05,559
they're based on debian now we don't

00:13:03,319 --> 00:13:06,710
have a fedora based hypercube image yet

00:13:05,559 --> 00:13:10,160
we

00:13:06,710 --> 00:13:11,930
the way our food or our package uses

00:13:10,160 --> 00:13:14,090
actually use this hypercube for most of

00:13:11,930 --> 00:13:15,800
the components in our Fedora package and

00:13:14,090 --> 00:13:17,750
it doesn't use it for the API server

00:13:15,800 --> 00:13:20,960
because the API server needs an

00:13:17,750 --> 00:13:23,480
additional capability to bind a for 4:43

00:13:20,960 --> 00:13:26,380
and so that was kind of broken out and

00:13:23,480 --> 00:13:29,270
then to be less confusing I guess the

00:13:26,380 --> 00:13:31,640
ability to use the hypercube binary and

00:13:29,270 --> 00:13:33,770
as the API server was removed so then

00:13:31,640 --> 00:13:35,810
that stopped me from being able to make

00:13:33,770 --> 00:13:37,550
a hypercube image based off the door but

00:13:35,810 --> 00:13:41,270
I I talked to the maintainer and got

00:13:37,550 --> 00:13:45,410
that changed so I'm gonna make an image

00:13:41,270 --> 00:13:47,750
for hypercube so that you can if you

00:13:45,410 --> 00:13:49,280
wanted to you know use some of these in

00:13:47,750 --> 00:13:51,410
state same installers that require

00:13:49,280 --> 00:13:54,800
hypercube but you want to use the Fedora

00:13:51,410 --> 00:13:59,270
base image and Fedora rpm you could do

00:13:54,800 --> 00:14:01,220
that and in some places some things are

00:13:59,270 --> 00:14:03,650
actually hard-coded to use the

00:14:01,220 --> 00:14:06,980
kubernetes upstream you know Debian

00:14:03,650 --> 00:14:09,340
based image and those those are that

00:14:06,980 --> 00:14:11,750
would be a thing that we need to patch

00:14:09,340 --> 00:14:14,720
OpenShift origin as an origin image it's

00:14:11,750 --> 00:14:17,960
like hypercube and it's sent to us based

00:14:14,720 --> 00:14:19,970
I mean I almost I'm wrong you know

00:14:17,960 --> 00:14:23,650
someone correct me if I'm wrong but I

00:14:19,970 --> 00:14:26,510
don't think openshift actually makes any

00:14:23,650 --> 00:14:28,130
Fedora containers you know Fedora based

00:14:26,510 --> 00:14:30,470
containers when they run in containers

00:14:28,130 --> 00:14:32,060
they used to say to us and so this kind

00:14:30,470 --> 00:14:34,490
of raises a lot of questions that I want

00:14:32,060 --> 00:14:35,900
people to think about and you know I

00:14:34,490 --> 00:14:38,510
mean how do we feel about that is it

00:14:35,900 --> 00:14:41,450
does it bother us that if the main way

00:14:38,510 --> 00:14:43,190
to use like right now we have a well

00:14:41,450 --> 00:14:45,320
I'll talk more about cube ADM in a

00:14:43,190 --> 00:14:48,260
second but we have a cube ADM package in

00:14:45,320 --> 00:14:51,410
fedora right now but that package is

00:14:48,260 --> 00:14:52,970
hard-coded to use this upstream you know

00:14:51,410 --> 00:14:56,690
for for some of its components this

00:14:52,970 --> 00:14:59,570
Debian based image with the upstream

00:14:56,690 --> 00:15:00,500
built binaries or if you're gonna use

00:14:59,570 --> 00:15:03,470
openshift

00:15:00,500 --> 00:15:04,910
on Fedora you're gonna be using sent to

00:15:03,470 --> 00:15:05,420
us based images I mean I don't know do

00:15:04,910 --> 00:15:08,090
we care

00:15:05,420 --> 00:15:09,920
this is a thing where it's not the end

00:15:08,090 --> 00:15:12,860
of the world I don't think but if

00:15:09,920 --> 00:15:15,170
individual contributors think no we I

00:15:12,860 --> 00:15:16,580
want it to be all Fedora I mean this is

00:15:15,170 --> 00:15:18,910
the sort of thing where people have to

00:15:16,580 --> 00:15:23,560
have been you know do it

00:15:18,910 --> 00:15:25,840
you know so something to think about all

00:15:23,560 --> 00:15:27,700
right so Fedora rpms are both the way of

00:15:25,840 --> 00:15:30,640
building the binary but they're also way

00:15:27,700 --> 00:15:32,140
of packaging it and this has kind of

00:15:30,640 --> 00:15:35,370
been the default way that we have

00:15:32,140 --> 00:15:38,800
installed kubernetes out fedora so far

00:15:35,370 --> 00:15:42,070
and so we have the the we have a

00:15:38,800 --> 00:15:44,740
kubernetes the kubernetes package makes

00:15:42,070 --> 00:15:47,260
the kubernetes master package and a COO

00:15:44,740 --> 00:15:50,380
Bernays node package and then a client

00:15:47,260 --> 00:15:52,360
package and the other master runs on the

00:15:50,380 --> 00:15:54,580
master includes includes the three

00:15:52,360 --> 00:15:59,620
master services and the node includes

00:15:54,580 --> 00:16:01,630
the two node services those rpms have so

00:15:59,620 --> 00:16:04,330
far been built into the fedora atomic

00:16:01,630 --> 00:16:07,530
image so they're baked in there we're

00:16:04,330 --> 00:16:10,810
playing to remove them partly because

00:16:07,530 --> 00:16:13,210
they can be you don't need them then

00:16:10,810 --> 00:16:16,810
they're there extra kind of weight that

00:16:13,210 --> 00:16:18,400
we can get rid of and if you you might

00:16:16,810 --> 00:16:20,890
want to run a different version there

00:16:18,400 --> 00:16:23,620
are different things where you know we

00:16:20,890 --> 00:16:24,760
will be we've you know want to remove

00:16:23,620 --> 00:16:26,980
them from the image and we have other

00:16:24,760 --> 00:16:29,110
ways of getting them on there there's

00:16:26,980 --> 00:16:31,840
package layering which Jerry mentioned

00:16:29,110 --> 00:16:34,840
briefly works pretty well you know our

00:16:31,840 --> 00:16:36,550
PMO's tree kubernetes would if your

00:16:34,840 --> 00:16:38,860
system didn't already have kubernetes on

00:16:36,550 --> 00:16:44,800
it I believe there's a way to do some

00:16:38,860 --> 00:16:46,390
overrides that's here or coming and you

00:16:44,800 --> 00:16:49,420
can so that's a way that you can use the

00:16:46,390 --> 00:16:53,560
plane RPMs and the RPMs are cooled or

00:16:49,420 --> 00:16:55,720
managed by systemd the we have ansible

00:16:53,560 --> 00:16:59,470
scripts out there that use those that

00:16:55,720 --> 00:17:01,590
expect to use it that way and you know

00:16:59,470 --> 00:17:05,440
similarly I mentioned before about the

00:17:01,590 --> 00:17:06,760
fedora we have open shipped rpms for

00:17:05,440 --> 00:17:09,790
fedora and that's been we've been

00:17:06,760 --> 00:17:14,530
maintaining those pretty well so you can

00:17:09,790 --> 00:17:19,450
use the RPMs in further level of

00:17:14,530 --> 00:17:21,420
packaging and containers so I maintain

00:17:19,450 --> 00:17:25,210
in the federal registry per component

00:17:21,420 --> 00:17:27,760
images so for the API server for the

00:17:25,210 --> 00:17:30,150
controller manager for each of the

00:17:27,760 --> 00:17:34,140
components based on Fedora P

00:17:30,150 --> 00:17:36,060
and I have made those so they can run

00:17:34,140 --> 00:17:39,780
just as a regular docker container or is

00:17:36,060 --> 00:17:41,250
the system container and so if you're

00:17:39,780 --> 00:17:44,040
running it as regular docker container

00:17:41,250 --> 00:17:46,140
you can just write a unit file that will

00:17:44,040 --> 00:17:49,440
run the containers from the unit file

00:17:46,140 --> 00:17:52,590
you can also make a kubernetes manifest

00:17:49,440 --> 00:17:53,880
that you can drop in the cubelets

00:17:52,590 --> 00:17:55,680
manifest directory

00:17:53,880 --> 00:17:57,480
the only cubelet starts up and still

00:17:55,680 --> 00:17:59,910
looks in there to see what things i have

00:17:57,480 --> 00:18:05,190
to start out and it can start up it's

00:17:59,910 --> 00:18:08,190
the master components those are and then

00:18:05,190 --> 00:18:09,780
I have made them with an eye towards

00:18:08,190 --> 00:18:12,030
like particularly with the system

00:18:09,780 --> 00:18:14,430
containers yeah and I toward making

00:18:12,030 --> 00:18:17,940
drop-in replacements for the RPM so when

00:18:14,430 --> 00:18:20,340
you install it like the name of what

00:18:17,940 --> 00:18:22,440
package might be its kubernetes - API

00:18:20,340 --> 00:18:25,710
server but when I install it it has a

00:18:22,440 --> 00:18:28,500
system container I do you know - - name

00:18:25,710 --> 00:18:33,300
Q - API server because that's the name

00:18:28,500 --> 00:18:35,430
of the system D service that the RPM

00:18:33,300 --> 00:18:36,600
would install so that then if you're

00:18:35,430 --> 00:18:38,580
running if you have a script or

00:18:36,600 --> 00:18:41,760
something that was expecting that one it

00:18:38,580 --> 00:18:44,130
just replaces it so one thing with these

00:18:41,760 --> 00:18:45,540
and and so this is similar to the issues

00:18:44,130 --> 00:18:47,190
I mentioned around the building of the

00:18:45,540 --> 00:18:50,280
RPMs you know we need some better

00:18:47,190 --> 00:18:54,480
versioning and tang right now in our our

00:18:50,280 --> 00:18:59,940
the fedora build system we are just we

00:18:54,480 --> 00:19:01,770
want to add automatic version we want to

00:18:59,940 --> 00:19:04,890
add add it where the build system will

00:19:01,770 --> 00:19:09,420
automatically put the correct version of

00:19:04,890 --> 00:19:10,740
the package and in a tag we're not doing

00:19:09,420 --> 00:19:13,200
that right now but this is a thing that

00:19:10,740 --> 00:19:15,270
again people are expecting when they're

00:19:13,200 --> 00:19:17,220
coming from the upstream side upstream

00:19:15,270 --> 00:19:20,460
as every single release and they have

00:19:17,220 --> 00:19:24,030
the the component the architecture and

00:19:20,460 --> 00:19:26,190
the release number and so people expect

00:19:24,030 --> 00:19:27,960
to be able to access kubernetes in that

00:19:26,190 --> 00:19:31,560
way and that's something that we need to

00:19:27,960 --> 00:19:33,870
work on tagging that that matches those

00:19:31,560 --> 00:19:36,030
expectations and again I mentioned

00:19:33,870 --> 00:19:41,010
before modularity this is going to I

00:19:36,030 --> 00:19:42,500
think help I sped up for about just the

00:19:41,010 --> 00:19:44,120
like last week and a half or so

00:19:42,500 --> 00:19:46,960
looking at you know building some

00:19:44,120 --> 00:19:49,370
building a module for kubernetes and

00:19:46,960 --> 00:19:50,870
it's still early days I think for

00:19:49,370 --> 00:19:53,780
modularity but I think that's gonna be a

00:19:50,870 --> 00:19:56,420
big help and then I mentioned before

00:19:53,780 --> 00:19:59,750
unless I'm wrong there is no fedora

00:19:56,420 --> 00:20:02,090
based OpenShift origin container and

00:19:59,750 --> 00:20:05,270
that's something that you know I think

00:20:02,090 --> 00:20:06,710
should exist you know I think that you

00:20:05,270 --> 00:20:09,020
know we as Fedora pne's

00:20:06,710 --> 00:20:14,420
should want that but that's something

00:20:09,020 --> 00:20:16,790
that we'll have to do okay so the actual

00:20:14,420 --> 00:20:19,760
deployment part you know we've been

00:20:16,790 --> 00:20:21,770
including the you know packages in the

00:20:19,760 --> 00:20:23,420
atomic Coast since the beginning so you

00:20:21,770 --> 00:20:27,620
just download the atomic au secours

00:20:23,420 --> 00:20:29,510
Rene's is on there but it's kind of

00:20:27,620 --> 00:20:33,800
involved actually getting it up and

00:20:29,510 --> 00:20:35,390
running and so you can start from

00:20:33,800 --> 00:20:36,470
scratch a lot of people really want to

00:20:35,390 --> 00:20:38,960
do this especially when they're getting

00:20:36,470 --> 00:20:42,260
started like I think ansible is crazy

00:20:38,960 --> 00:20:43,340
easy and you know once you get a little

00:20:42,260 --> 00:20:46,340
bit the hang of it you know you can

00:20:43,340 --> 00:20:48,080
pretty well see what's going on but a

00:20:46,340 --> 00:20:51,590
lot of people who I talk to an IRC

00:20:48,080 --> 00:20:53,150
they're just like don't make me I mean I

00:20:51,590 --> 00:20:54,950
know it how they don't want to learn a

00:20:53,150 --> 00:20:57,050
new configuration management system it's

00:20:54,950 --> 00:20:58,640
like when I was doing stuff with our do

00:20:57,050 --> 00:21:02,120
and I was like I have to understand

00:20:58,640 --> 00:21:05,180
puppet you know and even though ansible

00:21:02,120 --> 00:21:07,220
is much easier I think than that until

00:21:05,180 --> 00:21:09,980
you invest a little bit of time to start

00:21:07,220 --> 00:21:12,260
to not be afraid you know afraid of it

00:21:09,980 --> 00:21:14,420
or you know it's can turn people off and

00:21:12,260 --> 00:21:16,880
also people want to understand you know

00:21:14,420 --> 00:21:18,380
they want us they don't want a scripted

00:21:16,880 --> 00:21:19,670
install they want to see exactly what's

00:21:18,380 --> 00:21:21,440
happening and that's totally

00:21:19,670 --> 00:21:22,670
understandable so I mentioned this

00:21:21,440 --> 00:21:25,310
kubernetes the hard way

00:21:22,670 --> 00:21:27,530
I mean Kelsey Hightower's like a total

00:21:25,310 --> 00:21:30,320
luminary in the kubernetes world and a

00:21:27,530 --> 00:21:34,250
ton of people reference and read his

00:21:30,320 --> 00:21:36,740
this how-to and a thing about the how-to

00:21:34,250 --> 00:21:39,230
though is that it's all about Debian

00:21:36,740 --> 00:21:42,830
it's all about the upstream binaries

00:21:39,230 --> 00:21:45,620
it's all about Google Cloud I mean it

00:21:42,830 --> 00:21:47,810
just sort of punts on some sort of hard

00:21:45,620 --> 00:21:50,150
topics because Google Cloud just

00:21:47,810 --> 00:21:51,260
magically does that part which is you

00:21:50,150 --> 00:21:52,970
know he works for Google I mean that's

00:21:51,260 --> 00:21:55,220
it's totally legit way to go about I

00:21:52,970 --> 00:21:56,010
mean Google is a great way to get your

00:21:55,220 --> 00:22:00,510
feet wet

00:21:56,010 --> 00:22:02,880
you know but I thought that you know

00:22:00,510 --> 00:22:04,770
would be cool to do a version of it and

00:22:02,880 --> 00:22:06,120
kind of dropped off his efforts but just

00:22:04,770 --> 00:22:09,030
change the bits that need to be changed

00:22:06,120 --> 00:22:14,220
to make it work with atomic so I started

00:22:09,030 --> 00:22:15,570
a fork of it and I you know it's it's

00:22:14,220 --> 00:22:16,920
something it might be worth thinking

00:22:15,570 --> 00:22:18,420
about we talked about a little bit about

00:22:16,920 --> 00:22:20,400
thinking about kind of including that

00:22:18,420 --> 00:22:22,950
and our more official atomic

00:22:20,400 --> 00:22:24,960
documentation or you know looking at the

00:22:22,950 --> 00:22:27,000
strategy of kind of drafting off of this

00:22:24,960 --> 00:22:28,980
popular existing from scratch effort

00:22:27,000 --> 00:22:31,020
because I'm personally not very

00:22:28,980 --> 00:22:34,680
interested in from scratch installation

00:22:31,020 --> 00:22:37,260
I like ansible but I recognize that it's

00:22:34,680 --> 00:22:38,790
important we have a project atomic

00:22:37,260 --> 00:22:41,280
getting started guide which is also a

00:22:38,790 --> 00:22:45,600
from scratch thing but it needs work

00:22:41,280 --> 00:22:47,700
it's a pretty it just it was written a

00:22:45,600 --> 00:22:51,360
while ago and there's some things that

00:22:47,700 --> 00:22:52,800
it doesn't do and you know this sort of

00:22:51,360 --> 00:22:54,600
thing requires maintenance this again

00:22:52,800 --> 00:22:56,730
part of why I like the idea of drafting

00:22:54,600 --> 00:22:59,430
of somebody else's you know efforts in

00:22:56,730 --> 00:23:02,930
part because we can minimize you know

00:22:59,430 --> 00:23:02,930
the maintenance that's that's required

00:23:04,610 --> 00:23:08,250
okay

00:23:05,820 --> 00:23:13,260
yeah that's and that's that's done by

00:23:08,250 --> 00:23:15,180
the openshift team right oh right okay

00:23:13,260 --> 00:23:22,890
good and now that is a flag up from

00:23:15,180 --> 00:23:24,960
scratch origin set up yeah that's why I

00:23:22,890 --> 00:23:26,910
mean I that's what I thought because I

00:23:24,960 --> 00:23:28,890
gotta looked around and everything kind

00:23:26,910 --> 00:23:34,680
of points you danceable which again I'm

00:23:28,890 --> 00:23:41,490
totally down with but you know what's

00:23:34,680 --> 00:23:44,490
that okay yeah okay speaking of which

00:23:41,490 --> 00:23:47,040
so make you a mini shift now this is a

00:23:44,490 --> 00:23:50,520
this is a great way to get started and I

00:23:47,040 --> 00:23:52,970
think it's a single node cluster which

00:23:50,520 --> 00:23:55,260
whatever I mean I think if you're if

00:23:52,970 --> 00:23:56,670
personally I mean if I want to get

00:23:55,260 --> 00:23:58,380
started with something more than single

00:23:56,670 --> 00:23:59,700
node because that's the whole point but

00:23:58,380 --> 00:24:01,980
but you know I think there's some value

00:23:59,700 --> 00:24:04,350
to it still but you're running it in a

00:24:01,980 --> 00:24:06,210
VM and so it's very cross-platform

00:24:04,350 --> 00:24:06,940
friendly they've got instructions for

00:24:06,210 --> 00:24:09,159
using the austere

00:24:06,940 --> 00:24:11,859
hypervisors now it's not fedora based

00:24:09,159 --> 00:24:14,799
like at all you're using the boot to

00:24:11,859 --> 00:24:16,509
doctor vm by default so you're using

00:24:14,799 --> 00:24:22,960
you're not using fedora you're not using

00:24:16,509 --> 00:24:25,749
our doctor your it pulls in a like a

00:24:22,960 --> 00:24:27,820
doctor local it's like a cube local

00:24:25,749 --> 00:24:30,509
there's a binary that it pulls in that's

00:24:27,820 --> 00:24:34,539
running kubernetes at a local setting

00:24:30,509 --> 00:24:36,580
and that's from upstream mini shift can

00:24:34,539 --> 00:24:39,340
use a cent o sv m so that's getting

00:24:36,580 --> 00:24:41,049
closer to us and if you use this vm

00:24:39,340 --> 00:24:44,259
driver 9 and you're running on Fedora

00:24:41,049 --> 00:24:46,359
you're using your hosts docker so you're

00:24:44,259 --> 00:24:49,779
running it on Fedora then so that's a

00:24:46,359 --> 00:24:51,399
that's more of a Fedora thing so this

00:24:49,779 --> 00:24:53,529
might be something you know again this

00:24:51,399 --> 00:24:55,840
might be something that may be worth

00:24:53,529 --> 00:24:58,090
Fedora saying well we want to have a

00:24:55,840 --> 00:25:06,940
really super easy way to get started for

00:24:58,090 --> 00:25:09,929
people and so maybe yep I think that

00:25:06,940 --> 00:25:13,330
might be linked to slides

00:25:09,929 --> 00:25:16,179
yeah that's that's a good one too no no

00:25:13,330 --> 00:25:19,450
no that's thank you so this is where our

00:25:16,179 --> 00:25:21,129
mini queue and mini shift live and it's

00:25:19,450 --> 00:25:26,769
the same thing it's just mini shift is

00:25:21,129 --> 00:25:30,369
the open shift version of it so cube ATM

00:25:26,769 --> 00:25:32,019
this is pretty cool this is you can have

00:25:30,369 --> 00:25:33,519
a single node cluster or you're gonna

00:25:32,019 --> 00:25:34,690
have a multi node cluster you can start

00:25:33,519 --> 00:25:37,149
your first node and then you can add

00:25:34,690 --> 00:25:38,739
additional nodes it's not high

00:25:37,149 --> 00:25:40,629
availability you're you have your master

00:25:38,739 --> 00:25:42,999
unless I'm wrong but you have your

00:25:40,629 --> 00:25:45,609
master and then you can add additional

00:25:42,999 --> 00:25:47,289
nodes to it it's considered beta it's

00:25:45,609 --> 00:25:49,119
kind of been considered beta for a

00:25:47,289 --> 00:25:50,859
little while and I guess there's like a

00:25:49,119 --> 00:25:54,849
mixture of different things that it uses

00:25:50,859 --> 00:25:59,009
that aren't considered fully GA yet and

00:25:54,849 --> 00:25:59,009
told this is kind of the future of

00:25:59,039 --> 00:26:07,479
deploying kubernetes and it's really

00:26:02,109 --> 00:26:10,389
nice as distributed by the upstream it

00:26:07,479 --> 00:26:13,599
uses kind of a mixture of installed rpms

00:26:10,389 --> 00:26:15,100
or they support CentOS and Debian in

00:26:13,599 --> 00:26:20,110
their dachshund

00:26:15,100 --> 00:26:22,299
packages they offer so but when you run

00:26:20,110 --> 00:26:24,990
it on scent OS they have sent to us our

00:26:22,299 --> 00:26:27,640
POS for the for cube ADM and for a

00:26:24,990 --> 00:26:30,220
container networking interface package

00:26:27,640 --> 00:26:32,860
and for the cube light and then it uses

00:26:30,220 --> 00:26:35,950
the hypercube image for the rest of it

00:26:32,860 --> 00:26:40,390
so you get the cubelet started and it

00:26:35,950 --> 00:26:44,020
pulls down hypercube month or two ago we

00:26:40,390 --> 00:26:45,370
got a cube ATM in fedora and there was

00:26:44,020 --> 00:26:47,110
an issue with the way that they were

00:26:45,370 --> 00:26:49,570
doing the packaging that made their

00:26:47,110 --> 00:26:54,340
packages not work with the Tonga coasts

00:26:49,570 --> 00:26:58,179
so we got that addressed and you can use

00:26:54,340 --> 00:27:01,809
package layering to get cube ATM on but

00:26:58,179 --> 00:27:05,770
when you but in the go source of cube

00:27:01,809 --> 00:27:08,500
ATM it's like it specifies the rapid the

00:27:05,770 --> 00:27:09,820
the google image repository so that's

00:27:08,500 --> 00:27:12,580
something that we would have to patch to

00:27:09,820 --> 00:27:16,240
use a fedora based hypercube so again

00:27:12,580 --> 00:27:19,150
you know and then I have a in the the

00:27:16,240 --> 00:27:21,100
atomic system containers repo and our

00:27:19,150 --> 00:27:24,070
project atomic I have a pull request

00:27:21,100 --> 00:27:26,830
that I have to address on the feedback

00:27:24,070 --> 00:27:29,679
I've got for a cube ADN system container

00:27:26,830 --> 00:27:32,320
where you can just install that on a

00:27:29,679 --> 00:27:36,370
system that has no kubernetes on it and

00:27:32,320 --> 00:27:39,010
it will you know you can run what it

00:27:36,370 --> 00:27:42,850
basically does is drops the cube ATM

00:27:39,010 --> 00:27:45,730
binary into user bin local and so you

00:27:42,850 --> 00:27:47,980
run that and then it goes off in it

00:27:45,730 --> 00:27:51,970
starts to the services it needs to it

00:27:47,980 --> 00:27:56,409
runs the cubelet containerized and then

00:27:51,970 --> 00:27:58,360
it runs the goes and grabs hypercube so

00:27:56,409 --> 00:28:01,570
there's no C cluster up so this is kind

00:27:58,360 --> 00:28:04,150
of the open shift answer to cube ATM and

00:28:01,570 --> 00:28:07,120
this works really well too now there

00:28:04,150 --> 00:28:09,070
there are options for making adding

00:28:07,120 --> 00:28:10,929
additional nodes to your your single

00:28:09,070 --> 00:28:13,780
node and I spent like an afternoon

00:28:10,929 --> 00:28:15,190
trying to get it working and I mean it

00:28:13,780 --> 00:28:16,870
was one of those things where I kind of

00:28:15,190 --> 00:28:20,159
got a bits closer a bit closer a bit

00:28:16,870 --> 00:28:26,530
closer but I didn't cut all the way so

00:28:20,159 --> 00:28:27,610
it's there and I think I think that it's

00:28:26,530 --> 00:28:29,980
probably just some minor

00:28:27,610 --> 00:28:32,770
to be fixed but that's a way to that you

00:28:29,980 --> 00:28:36,070
can you run the command OC cluster up

00:28:32,770 --> 00:28:37,720
and you're up pretty quickly with a open

00:28:36,070 --> 00:28:40,990
shift cluster on your one system and

00:28:37,720 --> 00:28:42,520
then you know pending you know this OC

00:28:40,990 --> 00:28:45,480
close to join getting straightened out

00:28:42,520 --> 00:28:48,400
you can add additional nodes to it

00:28:45,480 --> 00:28:51,400
this again is kind of a mix of installed

00:28:48,400 --> 00:28:52,660
our pins and container images you can

00:28:51,400 --> 00:28:58,000
install like when I run it on Fedora

00:28:52,660 --> 00:28:59,679
atomic well you can install through with

00:28:58,000 --> 00:29:02,080
package layering this origin clients

00:28:59,679 --> 00:29:03,549
that gives you OC and then when it'll go

00:29:02,080 --> 00:29:05,580
and pull down containers and it pulls

00:29:03,549 --> 00:29:08,890
down the center west base container and

00:29:05,580 --> 00:29:13,870
one issue though is that origin clients

00:29:08,890 --> 00:29:16,720
includes a cube control tool and that

00:29:13,870 --> 00:29:18,220
conflicts with the kubernetes client

00:29:16,720 --> 00:29:22,059
package that comes installed by default

00:29:18,220 --> 00:29:25,179
right now on fedora atomic but if you

00:29:22,059 --> 00:29:27,640
like rebase to the third or atomic 27 or

00:29:25,179 --> 00:29:29,620
rawhide version of the repo that's

00:29:27,640 --> 00:29:32,460
missing kubernetes and so you can

00:29:29,620 --> 00:29:35,410
install that cleanly without that that

00:29:32,460 --> 00:29:36,700
conflict and this would also be a good

00:29:35,410 --> 00:29:38,080
candidate probably for a system

00:29:36,700 --> 00:29:40,059
containerization I mean I bet you I

00:29:38,080 --> 00:29:43,150
could take my cube ADM container and

00:29:40,059 --> 00:29:45,790
change a couple things and bam you know

00:29:43,150 --> 00:29:49,540
have the OSI the origin clients

00:29:45,790 --> 00:29:51,429
container you know running so and that's

00:29:49,540 --> 00:29:54,840
another yet another opportunity for

00:29:51,429 --> 00:29:54,840
confident a contribution

00:29:55,290 --> 00:30:01,450
ok so construed answerable in in the

00:29:58,270 --> 00:30:03,570
communities contribute o our ansible

00:30:01,450 --> 00:30:05,799
scripts for installing kubernetes

00:30:03,570 --> 00:30:07,450
kubernetes cluster this is what I've

00:30:05,799 --> 00:30:12,549
always used the most and I've

00:30:07,450 --> 00:30:15,010
contributed to this you can you can use

00:30:12,549 --> 00:30:16,570
this with system containers well so I

00:30:15,010 --> 00:30:20,200
say here that it supports multiple

00:30:16,570 --> 00:30:22,000
distros for fedora it's if you're

00:30:20,200 --> 00:30:23,500
running on it checks to see if you're

00:30:22,000 --> 00:30:26,140
running on atomic if you're not running

00:30:23,500 --> 00:30:28,450
on atomic installs the RPMs if you are

00:30:26,140 --> 00:30:30,250
it assumes that they're there you can

00:30:28,450 --> 00:30:31,690
use it with system containers that you

00:30:30,250 --> 00:30:35,080
have to install the system containers

00:30:31,690 --> 00:30:39,220
first I actually have a fork of this

00:30:35,080 --> 00:30:40,690
that includes the way to just to specify

00:30:39,220 --> 00:30:42,669
I want to use system containers

00:30:40,690 --> 00:30:44,080
I'll do that part of automatically and I

00:30:42,669 --> 00:30:46,539
was just waiting to send a pull request

00:30:44,080 --> 00:30:49,210
for the system containers they actually

00:30:46,539 --> 00:30:51,070
be released and the fidor registry but

00:30:49,210 --> 00:30:55,919
they are now so I'm going to send that

00:30:51,070 --> 00:30:58,330
pull request there's there's a vagrant

00:30:55,919 --> 00:31:00,820
portion of it where you can run vagrant

00:30:58,330 --> 00:31:02,529
and install it on VM that our vagrant

00:31:00,820 --> 00:31:06,039
and you can use vagrant plug-ins for

00:31:02,529 --> 00:31:09,099
OpenStack and AWS to install it there

00:31:06,039 --> 00:31:11,649
but I don't know it's a little hacky

00:31:09,099 --> 00:31:13,570
error that you have to go through

00:31:11,649 --> 00:31:16,320
vagrant for those things and really it's

00:31:13,570 --> 00:31:19,479
it's kind of it's not a heavily active

00:31:16,320 --> 00:31:21,009
set of scripts in the sense I've got

00:31:19,479 --> 00:31:23,710
from targeting different people is that

00:31:21,009 --> 00:31:26,619
you know there's issues where I mean one

00:31:23,710 --> 00:31:28,779
issue is that you can run multiple node

00:31:26,619 --> 00:31:32,220
at CD but there it doesn't support

00:31:28,779 --> 00:31:35,019
running a highly available master and

00:31:32,220 --> 00:31:37,149
there's talk about contribs this big

00:31:35,019 --> 00:31:39,549
weird like crazy grab bag of a million

00:31:37,149 --> 00:31:40,330
different projects and I guess the idea

00:31:39,549 --> 00:31:43,080
in kubernetes

00:31:40,330 --> 00:31:46,119
is that they need to start moving to

00:31:43,080 --> 00:31:48,609
more appropriate locations there's talk

00:31:46,119 --> 00:31:50,859
of moving editor cube deploy but I mean

00:31:48,609 --> 00:31:55,440
this is this is this could use some

00:31:50,859 --> 00:31:57,729
attention and some opinion and some

00:31:55,440 --> 00:32:00,239
discussion about what's the future this

00:31:57,729 --> 00:32:04,720
this is what I use the most often myself

00:32:00,239 --> 00:32:07,419
when I am testing things there's this

00:32:04,720 --> 00:32:10,659
other ansible based option called cube

00:32:07,419 --> 00:32:14,710
spray that is kubernetes incubator

00:32:10,659 --> 00:32:17,019
project they've got a bunch of different

00:32:14,710 --> 00:32:20,950
options for running it on an AWS and

00:32:17,019 --> 00:32:23,220
Google Cloud as your OpenStack it does

00:32:20,950 --> 00:32:26,440
support the high availability master

00:32:23,220 --> 00:32:28,299
they support Relan sent to us and it

00:32:26,440 --> 00:32:31,720
didn't work for me out of the box with

00:32:28,299 --> 00:32:33,340
fedora but it was like three or four

00:32:31,720 --> 00:32:37,749
changes I had to make to the animal to

00:32:33,340 --> 00:32:39,249
make it work and I saved the DEF I was

00:32:37,749 --> 00:32:41,769
looking at the cycle we can have I say

00:32:39,249 --> 00:32:43,749
the DEF and so I'll probably send them a

00:32:41,769 --> 00:32:47,139
pull request to fix those few things so

00:32:43,749 --> 00:32:48,879
it can work for a fedora but a couple

00:32:47,139 --> 00:32:50,499
things here one thing I mean they're

00:32:48,879 --> 00:32:52,929
they they're pulling the hypercube

00:32:50,499 --> 00:32:53,860
images from coral s and interestingly I

00:32:52,929 --> 00:32:55,750
think the

00:32:53,860 --> 00:32:57,429
the only thing I think that the reason

00:32:55,750 --> 00:32:59,529
why they do that is chorus does the

00:32:57,429 --> 00:33:01,779
exact same hypercube images upstream

00:32:59,529 --> 00:33:05,620
does except they give the whole

00:33:01,779 --> 00:33:10,120
hypercube binary permissions to mount to

00:33:05,620 --> 00:33:12,610
bind to lower network ports and I mean

00:33:10,120 --> 00:33:15,190
upstream the idea is that still doing

00:33:12,610 --> 00:33:18,070
443 you'll do like 6 4 4 3 or something

00:33:15,190 --> 00:33:21,429
so you don't have to have that but in

00:33:18,070 --> 00:33:23,110
the ansible they have a place where you

00:33:21,429 --> 00:33:25,779
can change the registry that comes from

00:33:23,110 --> 00:33:28,179
so if we have a fedora cube a hypercube

00:33:25,779 --> 00:33:31,750
image we could use this and we could

00:33:28,179 --> 00:33:34,059
pretty easily just point it to use

00:33:31,750 --> 00:33:37,389
fedora so you know if this is this seems

00:33:34,059 --> 00:33:39,250
to be much more active so maybe you know

00:33:37,389 --> 00:33:41,110
those of us who've been focusing on

00:33:39,250 --> 00:33:42,279
contrarian scible maybe this is a place

00:33:41,110 --> 00:33:45,250
to where we might want to think about

00:33:42,279 --> 00:33:48,130
turning our efforts and getting Fedora

00:33:45,250 --> 00:33:51,730
working well and setting forth zero I

00:33:48,130 --> 00:33:52,929
mean this is a thing it's just I haven't

00:33:51,730 --> 00:33:54,669
looked deeper into this but I'm pretty

00:33:52,929 --> 00:33:57,760
sure that this is would be easy to get

00:33:54,669 --> 00:34:00,490
SELinux working but I mean people in the

00:33:57,760 --> 00:34:05,159
criminals community there's just by and

00:34:00,490 --> 00:34:08,169
large people are not super worried about

00:34:05,159 --> 00:34:09,550
just tossing a throw selinux into

00:34:08,169 --> 00:34:11,589
permissive mode and they're getting

00:34:09,550 --> 00:34:15,220
started Docs I mean it's it's pretty

00:34:11,589 --> 00:34:17,889
pervasive and so that's something that

00:34:15,220 --> 00:34:21,399
also needs to be fixed if we're gonna

00:34:17,889 --> 00:34:22,720
use this like the contributes a bowl you

00:34:21,399 --> 00:34:26,619
know when I first started using it was

00:34:22,720 --> 00:34:28,540
set in fourth zero but it's not now and

00:34:26,619 --> 00:34:30,220
it's not it's not like you know total

00:34:28,540 --> 00:34:33,609
rocket science to get that working but

00:34:30,220 --> 00:34:35,500
it needs a getting contribution so

00:34:33,609 --> 00:34:38,710
there's open ship danceable on the open

00:34:35,500 --> 00:34:39,339
ship side of this and it is pretty

00:34:38,710 --> 00:34:41,500
awesome

00:34:39,339 --> 00:34:43,030
you know you've got the high

00:34:41,500 --> 00:34:46,179
availability at CD and high availability

00:34:43,030 --> 00:34:47,770
master it's got a lot of activity you

00:34:46,179 --> 00:34:58,030
know a lot of Red Hatters are working on

00:34:47,770 --> 00:34:59,550
it they there's a contributes crypts for

00:34:58,030 --> 00:35:02,859
running on these different platforms

00:34:59,550 --> 00:35:07,000
this link I have here dusty mabe did a

00:35:02,859 --> 00:35:08,740
cool blog post

00:35:07,000 --> 00:35:10,559
I guess it's getting a little bit dated

00:35:08,740 --> 00:35:13,359
now but I'll probably still work on

00:35:10,559 --> 00:35:16,259
installing on Fedora 25 atomic Coast

00:35:13,359 --> 00:35:20,440
OpenShift using the open ship danceable

00:35:16,259 --> 00:35:23,380
you know again you're using these like

00:35:20,440 --> 00:35:24,910
yes you can use our PMS I think I have

00:35:23,380 --> 00:35:27,430
installed it using containers and you

00:35:24,910 --> 00:35:28,930
can use the system containers as Jerry

00:35:27,430 --> 00:35:31,420
mentioned these this is the same slide

00:35:28,930 --> 00:35:32,440
about the options for that again you

00:35:31,420 --> 00:35:34,180
know these are the centralized based

00:35:32,440 --> 00:35:38,470
containers so you know we have to decide

00:35:34,180 --> 00:35:42,250
do we care about that you know maybe

00:35:38,470 --> 00:35:44,740
maybe we're cool with it but I've used

00:35:42,250 --> 00:35:47,170
this myself I like I said I don't use

00:35:44,740 --> 00:35:49,029
OpenShift as or you know test and

00:35:47,170 --> 00:35:52,420
contribute as heavily as I do to

00:35:49,029 --> 00:35:54,670
kubernetes but I mean I like you know

00:35:52,420 --> 00:35:57,549
when I look at this compared to the

00:35:54,670 --> 00:35:59,829
state of our kubernetes ansible scripts

00:35:57,549 --> 00:36:03,789
i think gosh you know that's that's

00:35:59,829 --> 00:36:06,220
great you know and I also I find about

00:36:03,789 --> 00:36:09,039
and I've talked to some people about can

00:36:06,220 --> 00:36:13,720
we you know jump in here you know can we

00:36:09,039 --> 00:36:16,180
basically get some mods to these scripts

00:36:13,720 --> 00:36:20,500
where if someone wanted to just install

00:36:16,180 --> 00:36:23,200
plain kubernetes on you know fedora said

00:36:20,500 --> 00:36:25,480
unless we're all you know can we toss

00:36:23,200 --> 00:36:27,730
that in the in the many options you know

00:36:25,480 --> 00:36:30,190
that better there too to do that and

00:36:27,730 --> 00:36:32,019
that would be you know that might be a

00:36:30,190 --> 00:36:34,750
place to place to put our contributions

00:36:32,019 --> 00:36:37,809
or our efforts instead of some of these

00:36:34,750 --> 00:36:40,390
other places and then I've got this

00:36:37,809 --> 00:36:44,130
slide about SELinux I mean it's just

00:36:40,390 --> 00:36:46,690
like really there's just a ton of

00:36:44,130 --> 00:36:48,490
setting forth zero out there in the

00:36:46,690 --> 00:36:51,130
structions and it's just like it's just

00:36:48,490 --> 00:36:54,309
easy to toss that in and then just never

00:36:51,130 --> 00:36:56,589
go back to it and say oh yeah I mean and

00:36:54,309 --> 00:36:58,599
sometimes I have tested things where you

00:36:56,589 --> 00:37:00,460
don't even actually like something has

00:36:58,599 --> 00:37:03,670
subsequently changed where that's gotten

00:37:00,460 --> 00:37:05,950
fixed and the the documentation didn't

00:37:03,670 --> 00:37:09,490
get updated and just kind of perpetuates

00:37:05,950 --> 00:37:12,490
this idea that selinux is gonna get in

00:37:09,490 --> 00:37:15,670
your way and it's not going to work the

00:37:12,490 --> 00:37:17,470
way that I have gone about fixing a lot

00:37:15,670 --> 00:37:19,839
of things or at least you know getting

00:37:17,470 --> 00:37:20,380
things to where SELinux can be enforcing

00:37:19,839 --> 00:37:22,660
you

00:37:20,380 --> 00:37:26,170
is in the manner when things run as

00:37:22,660 --> 00:37:29,619
containers like Network plugins or some

00:37:26,170 --> 00:37:32,170
of the kubernetes add-ons usually those

00:37:29,619 --> 00:37:35,200
are the things that give a problem with

00:37:32,170 --> 00:37:37,029
SELinux Givi denials and rather than

00:37:35,200 --> 00:37:40,690
just I'm containing everything turning

00:37:37,029 --> 00:37:42,579
SELinux off you can run these containers

00:37:40,690 --> 00:37:45,369
you can put in the in the manifest just

00:37:42,579 --> 00:37:47,559
make them run as SPC T and just

00:37:45,369 --> 00:37:51,119
unconfined that specific container now

00:37:47,559 --> 00:37:54,519
it's better to have things contained

00:37:51,119 --> 00:37:58,000
properly but I just figured that rather

00:37:54,519 --> 00:38:01,599
than you know turn off selinux on your

00:37:58,000 --> 00:38:05,410
entire host it's better to unconfined

00:38:01,599 --> 00:38:07,240
the particulars Inge and then again you

00:38:05,410 --> 00:38:10,599
know we need to work on you know getting

00:38:07,240 --> 00:38:13,539
it contained properly

00:38:10,599 --> 00:38:17,799
another thing is sometimes it's on

00:38:13,539 --> 00:38:19,569
Fedora the you know you'll be a plugin

00:38:17,799 --> 00:38:26,019
we'll be mounting a location on the host

00:38:19,569 --> 00:38:30,460
and you you might need to change the

00:38:26,019 --> 00:38:34,000
context so that it's readable by the by

00:38:30,460 --> 00:38:35,680
the container of runtime but I mean I

00:38:34,000 --> 00:38:38,049
guess you know there can be issues with

00:38:35,680 --> 00:38:40,150
getting that to stick sometimes and this

00:38:38,049 --> 00:38:44,980
isn't I'm not like an SELinux master but

00:38:40,150 --> 00:38:47,140
I am I do care about having it disabled

00:38:44,980 --> 00:38:49,630
or permissive places and reversing that

00:38:47,140 --> 00:38:51,519
and I've tried to do a little bit of

00:38:49,630 --> 00:38:53,559
what I can to kind of you know get it

00:38:51,519 --> 00:38:58,079
and we get that at least running on the

00:38:53,559 --> 00:39:00,880
host but like when you run cube ATM you

00:38:58,079 --> 00:39:03,460
initialize your your cluster and then

00:39:00,880 --> 00:39:06,069
you need to set up you need to choose a

00:39:03,460 --> 00:39:08,170
network plug-in and those running

00:39:06,069 --> 00:39:10,630
containers and just like every single

00:39:08,170 --> 00:39:15,099
network plug-in has some kind of issue

00:39:10,630 --> 00:39:17,440
with SELinux or at least that I've seen

00:39:15,099 --> 00:39:20,049
and so but it's just as simple what I've

00:39:17,440 --> 00:39:22,359
done is like with the flannel network

00:39:20,049 --> 00:39:24,809
plug-in I just gotten the plug-in and

00:39:22,359 --> 00:39:27,880
made a fork of it and just added the

00:39:24,809 --> 00:39:30,880
security option to run

00:39:27,880 --> 00:39:37,510
SB CT and then at least I can have the

00:39:30,880 --> 00:39:39,460
host enforcing but we need help on you

00:39:37,510 --> 00:39:43,810
know spring the word and getting fixes

00:39:39,460 --> 00:39:49,090
out there around that so this is some

00:39:43,810 --> 00:39:50,950
places to contribute in the the atomic

00:39:49,090 --> 00:39:54,580
workgroup we kind of set up a separate

00:39:50,950 --> 00:39:59,080
little kubernetes sig and aperture here

00:39:54,580 --> 00:40:00,970
this is our our issue tracker for that

00:39:59,080 --> 00:40:05,470
and we're starting to track issues

00:40:00,970 --> 00:40:07,990
around that that relate to that affect

00:40:05,470 --> 00:40:10,590
kubernetes on fedora and sent to us to

00:40:07,990 --> 00:40:13,390
we're trying to pay attention to both I

00:40:10,590 --> 00:40:16,780
mentioned bode before you know you can

00:40:13,390 --> 00:40:19,180
at any time go and look for kubernetes

00:40:16,780 --> 00:40:21,070
or other packages in this world that you

00:40:19,180 --> 00:40:23,560
care about and just see is there

00:40:21,070 --> 00:40:28,000
something waiting for karma in bode and

00:40:23,560 --> 00:40:30,760
you can really help by testing it out

00:40:28,000 --> 00:40:32,440
and giving it karma and you know and if

00:40:30,760 --> 00:40:35,560
it's not clear how to test it out poke

00:40:32,440 --> 00:40:38,350
the maintainer or poke one of us in in

00:40:35,560 --> 00:40:39,790
atomic you know and freenode and ask us

00:40:38,350 --> 00:40:42,910
and we'll I mean that's something that

00:40:39,790 --> 00:40:46,960
people should be poked about this is the

00:40:42,910 --> 00:40:49,650
contribution page for OpenShift Jerry

00:40:46,960 --> 00:40:51,790
had mentioned the container guidelines

00:40:49,650 --> 00:40:53,560
that's a good way to help out some of

00:40:51,790 --> 00:40:55,210
these things I mentioned that you know

00:40:53,560 --> 00:40:56,860
we don't have a fit of our container for

00:40:55,210 --> 00:40:59,710
that's where you can kind of start your

00:40:56,860 --> 00:41:03,580
journey of rectifying that and then this

00:40:59,710 --> 00:41:05,620
last one the is a repo where we're doing

00:41:03,580 --> 00:41:08,440
atomic host documentation and a lot of

00:41:05,620 --> 00:41:13,240
it relates to kubernetes and openshift

00:41:08,440 --> 00:41:15,330
and we we had a virtual fad recently

00:41:13,240 --> 00:41:17,080
where we went through and we kind of

00:41:15,330 --> 00:41:19,090
identified a bunch of things that we

00:41:17,080 --> 00:41:21,520
need and then we hunted around and found

00:41:19,090 --> 00:41:25,300
reference materials and we put them in a

00:41:21,520 --> 00:41:27,460
bunch of issues and so that people who

00:41:25,300 --> 00:41:28,390
want to take one can see a blog post or

00:41:27,460 --> 00:41:30,550
something that's already been written

00:41:28,390 --> 00:41:34,480
and getting into shape and we have an

00:41:30,550 --> 00:41:37,000
activity session this week when when is

00:41:34,480 --> 00:41:40,980
the Josh when's our activity session to

00:41:37,000 --> 00:41:40,980
do some dark writing for atomic host

00:41:55,730 --> 00:42:04,369
so tomorrow afternoon we've got a but

00:42:01,569 --> 00:42:09,559
yeah but that the contribution is really

00:42:04,369 --> 00:42:11,000
welcome there so that's I mean questions

00:42:09,559 --> 00:42:12,319
and also you know some of these things

00:42:11,000 --> 00:42:14,119
I've been asking about I'm kind of

00:42:12,319 --> 00:42:19,339
curious like to hear what people think I

00:42:14,119 --> 00:42:20,809
mean does it bug you that all right

00:42:19,339 --> 00:42:23,510
tomorrow morning 9:30 we're going to do

00:42:20,809 --> 00:42:25,190
a work session writing up some Doc's are

00:42:23,510 --> 00:42:27,530
working over some atomic docs and

00:42:25,190 --> 00:42:29,150
that'll include helping to document some

00:42:27,530 --> 00:42:32,799
of this stuff but I'm curious I mean

00:42:29,150 --> 00:42:32,799
people what do you how do you feel about

00:43:06,560 --> 00:43:09,770
feel free

00:45:10,140 --> 00:45:15,900
mm-hmm it's kind of weird because the

00:45:13,049 --> 00:45:18,569
qadian like when we when you run that we

00:45:15,900 --> 00:45:20,160
run the from the Fedora package like

00:45:18,569 --> 00:45:21,900
that's what we're distributing but we're

00:45:20,160 --> 00:45:23,700
distributing something that in turn goes

00:45:21,900 --> 00:45:25,920
out and grabs something else and then

00:45:23,700 --> 00:45:29,460
it's also when you run kubernetes you

00:45:25,920 --> 00:45:32,880
grab some other images from from google

00:45:29,460 --> 00:45:35,400
- yeah i mean it's what the one trick

00:45:32,880 --> 00:45:36,960
will be if we do our own then we have to

00:45:35,400 --> 00:45:39,599
contend with this thing where you do

00:45:36,960 --> 00:45:41,549
cube ATM and you do you know you give an

00:45:39,599 --> 00:45:43,829
argument to give a particular version

00:45:41,549 --> 00:45:46,349
and if that version doesn't exist and

00:45:43,829 --> 00:45:47,789
are in our registry you know I don't

00:45:46,349 --> 00:45:49,650
know what do we what happens then do can

00:45:47,789 --> 00:45:52,559
we make it somehow that it feels over to

00:45:49,650 --> 00:45:54,420
use the upstream or you know but that's

00:45:52,559 --> 00:45:56,249
something we have to figure out but it's

00:45:54,420 --> 00:45:58,829
it's there's a challenge because there's

00:45:56,249 --> 00:46:01,410
this quantity of releases happening and

00:45:58,829 --> 00:46:05,809
it's just way more than we typically are

00:46:01,410 --> 00:46:05,809
set up to deal with in fedora

00:46:41,810 --> 00:46:46,860
yeah I mean you know I mean that's

00:46:45,630 --> 00:46:51,570
that's a question that we have to answer

00:46:46,860 --> 00:46:53,040
do do we I mean whether or not we set

00:46:51,570 --> 00:46:55,710
out to say we're only going to support

00:46:53,040 --> 00:46:58,710
these these ones and we say that we then

00:46:55,710 --> 00:47:00,030
throw our contributions only support are

00:46:58,710 --> 00:47:02,610
only going to support what we actually

00:47:00,030 --> 00:47:04,740
support you know so yeah it's better

00:47:02,610 --> 00:47:07,140
that we say this is what we're going to

00:47:04,740 --> 00:47:09,600
do and this is the thing too that I'd

00:47:07,140 --> 00:47:11,010
like to consolidate as much of our

00:47:09,600 --> 00:47:13,050
efforts as possible like if we were

00:47:11,010 --> 00:47:16,470
somehow able to get together with the

00:47:13,050 --> 00:47:18,720
openshift answer ball and like somehow

00:47:16,470 --> 00:47:21,000
be able to work together you know with

00:47:18,720 --> 00:47:22,860
doing origins stuff and cube stuff at

00:47:21,000 --> 00:47:25,770
the same time that would be ideal

00:47:22,860 --> 00:47:29,550
because at least one thing we know is

00:47:25,770 --> 00:47:31,710
that they're both caring about our you

00:47:29,550 --> 00:47:34,230
know distro and so you know because

00:47:31,710 --> 00:47:37,670
that's that's one thing that that you

00:47:34,230 --> 00:47:40,710
know we can assume is that adora but

00:47:37,670 --> 00:47:42,510
yeah I mean there's no way not to just

00:47:40,710 --> 00:47:44,190
support certain things because that's

00:47:42,510 --> 00:47:46,590
just the reality but we should be clear

00:47:44,190 --> 00:47:48,150
about what we support because right now

00:47:46,590 --> 00:47:50,040
when people show up to president Tomic

00:47:48,150 --> 00:47:53,220
and they do the getting started guide

00:47:50,040 --> 00:47:54,570
and some stuffs out-of-date and then you

00:47:53,220 --> 00:47:58,380
know there's all these other ways to do

00:47:54,570 --> 00:48:00,480
it it's confusing and they the free that

00:47:58,380 --> 00:48:03,030
we're giving people a bad experience and

00:48:00,480 --> 00:48:05,790
also we're not we don't really direct

00:48:03,030 --> 00:48:08,420
people towards origin much at all in the

00:48:05,790 --> 00:48:11,070
project atomic or you know world and

00:48:08,420 --> 00:48:12,420
there's a lot of fedoras specific things

00:48:11,070 --> 00:48:15,180
like I pointed out during the course of

00:48:12,420 --> 00:48:17,370
this they're just like missing from the

00:48:15,180 --> 00:48:18,960
open shipped origin kind of stack and

00:48:17,370 --> 00:48:21,000
experience and again maybe we're cool

00:48:18,960 --> 00:48:22,920
with and being missing or whatever but

00:48:21,000 --> 00:48:24,010
this I'd like to at least be moving

00:48:22,920 --> 00:48:32,550
forward

00:48:24,010 --> 00:48:35,550
you know intentionally all right awesome

00:48:32,550 --> 00:48:35,550

YouTube URL: https://www.youtube.com/watch?v=Y703n0emWUg


