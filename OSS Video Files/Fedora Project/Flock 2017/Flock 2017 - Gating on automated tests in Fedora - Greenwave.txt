Title: Flock 2017 - Gating on automated tests in Fedora - Greenwave
Publication date: 2017-10-20
Playlist: Flock 2017
Description: 
	Wednesday August 30, 2017 10:30am - 11:00am
@Orleans A + B
Talk: Gating on automated tests in Fedora - Greenwave
Presenter: Pengfei Jia

Description:
Have you ever noticed the automated test results in Bodhi? The Fedora QA team has done some great work, running lots of automated tests when you file a new update. Today those test results are aggregated in ResultsDB and appear in Bodhi when you file your update – so where do we go from here? In this talk, I will introduce two new services we are working on: Greenwave and WaiverDB. Greenwave is a service that Bodhi will query to decide if an update is ready to be pushed, based on its test results. And WaiverDB is how we deal with test results that are wrong. We'll cover:
- Why we need a service like Greenwave, and what problems it helps us to solve
- What happens when a test goes bad? – why we also need WaiverDB
- Oh no, not more red tape! – how Greenwave will help enable more automation in future, through Freshmaker
- How Greenwave works under the hood, and how it relates to ResultDB and WaiverDB
- How to define a policy in Greenwave, and how to waive a test result in WaiverDB
- Where we are at today with the implementation and our plans for the future
Captions: 
	00:00:00,060 --> 00:00:09,210
see we can't guys started good morning

00:00:02,310 --> 00:00:12,269
everyone so I'm proud trader is with

00:00:09,210 --> 00:00:15,089
such long way to coming here so this is

00:00:12,269 --> 00:00:17,609
my first talking is such a conversation

00:00:15,089 --> 00:00:20,340
so the first thing I would thank for

00:00:17,609 --> 00:00:26,750
flock and sang for right hand for bring

00:00:20,340 --> 00:00:28,920
me in here so over the next 30 minutes

00:00:26,750 --> 00:00:30,480
you're going to hear about something

00:00:28,920 --> 00:00:33,930
that will change the way you are doing

00:00:30,480 --> 00:00:36,780
package after a funeral so to be scared

00:00:33,930 --> 00:00:38,670
we're not making your heart with us or

00:00:36,780 --> 00:00:44,460
maybe we are not going to make your life

00:00:38,670 --> 00:00:46,829
harder so my name is my job but look I

00:00:44,460 --> 00:00:49,620
can feel I think it's showing my Chinese

00:00:46,829 --> 00:00:51,780
full name on vlog somewhere so if you

00:00:49,620 --> 00:00:55,079
want to reach me I wish me buy this you

00:00:51,780 --> 00:00:58,109
notice so I'm working in factory to

00:00:55,079 --> 00:01:01,289
double team I go ahead and I used to be

00:00:58,109 --> 00:01:03,620
a big developer I'm also present

00:01:01,289 --> 00:01:03,620
developer

00:01:07,850 --> 00:01:13,619
alright so have you ever noticed

00:01:10,590 --> 00:01:16,229
automated test results in body before so

00:01:13,619 --> 00:01:18,450
if we some of you have been cheap items

00:01:16,229 --> 00:01:22,020
talk about I think it's working miss

00:01:18,450 --> 00:01:24,240
automated test systems so you think you

00:01:22,020 --> 00:01:27,360
would have already cost immediate how

00:01:24,240 --> 00:01:29,610
this automated testing system work so I

00:01:27,360 --> 00:01:32,610
think the federal QE has done a great

00:01:29,610 --> 00:01:36,150
job running on lots of other making the

00:01:32,610 --> 00:01:38,070
test when you fair new updating body so

00:01:36,150 --> 00:01:41,729
this is a screenshot of you know

00:01:38,070 --> 00:01:44,880
automating Christ's head on the web UAE

00:01:41,729 --> 00:01:48,479
body where it shows the other title

00:01:44,880 --> 00:01:51,119
results from results TV so as shown in

00:01:48,479 --> 00:01:51,689
this picture you have it just some test

00:01:51,119 --> 00:01:55,560
results

00:01:51,689 --> 00:01:57,760
Peggy job day for stay deep say so how

00:01:55,560 --> 00:02:01,210
many of you have seen

00:01:57,760 --> 00:02:02,320
test results in results TV before okay

00:02:01,210 --> 00:02:05,020
great

00:02:02,320 --> 00:02:07,780
yeah so you you guys I think most of you

00:02:05,020 --> 00:02:10,180
knows how is that it was not TV work and

00:02:07,780 --> 00:02:12,880
works and what is not TV it's alright

00:02:10,180 --> 00:02:16,090
but I think it would be good just to

00:02:12,880 --> 00:02:19,090
refresh your memory you know you just TV

00:02:16,090 --> 00:02:22,030
it's a simple service for recording the

00:02:19,090 --> 00:02:24,880
automated test results in generated by

00:02:22,030 --> 00:02:27,820
many different testing systems so when

00:02:24,880 --> 00:02:31,300
we are talking about testing systems we

00:02:27,820 --> 00:02:33,490
are talking about Haskell on open QA or

00:02:31,300 --> 00:02:36,130
save everyone and you know many others

00:02:33,490 --> 00:02:38,950
cystic similar testing systems in fedora

00:02:36,130 --> 00:02:41,830
so you I see you can say if I have God

00:02:38,950 --> 00:02:43,690
you know money has result here hunting

00:02:41,830 --> 00:02:46,750
 you know which is cool right

00:02:43,690 --> 00:02:49,540
but we also have to still tries to

00:02:46,750 --> 00:02:51,400
result here so the way actually you

00:02:49,540 --> 00:02:54,730
really care about this building has the

00:02:51,400 --> 00:02:56,830
results I think the answer is we do need

00:02:54,730 --> 00:02:59,440
to care right so what can we do with

00:02:56,830 --> 00:03:01,930
this feeling that results can we use

00:02:59,440 --> 00:03:05,170
them to help us enforce our package

00:03:01,930 --> 00:03:06,790
update quality so let's fan out now so

00:03:05,170 --> 00:03:09,310
today I'm going to introduce two new

00:03:06,790 --> 00:03:11,800
services we are working on first one is

00:03:09,310 --> 00:03:14,489
called gran wave the other one is called

00:03:11,800 --> 00:03:14,489
we were giving

00:03:18,750 --> 00:03:25,140
so well grow my ways girl you know

00:03:22,170 --> 00:03:28,140
originally is no nice policy engine you

00:03:25,140 --> 00:03:31,650
know in Fedora so it's recently renamed

00:03:28,140 --> 00:03:33,810
to grooming because we want to you know

00:03:31,650 --> 00:03:36,270
make a clear diagram it's not driving

00:03:33,810 --> 00:03:39,570
any of the processes and it's not

00:03:36,270 --> 00:03:42,450
storing and applying any arbitrary

00:03:39,570 --> 00:03:45,690
policies about anything so the factory

00:03:42,450 --> 00:03:48,660
is growing with service just for making

00:03:45,690 --> 00:03:50,340
business decisions or answering yes or

00:03:48,660 --> 00:03:52,920
no questions

00:03:50,340 --> 00:03:57,120
it's about you know other facts so such

00:03:52,920 --> 00:04:00,930
as rpms modules containers so it can be

00:03:57,120 --> 00:04:03,300
used I serve Him 18 points you know were

00:04:00,930 --> 00:04:05,910
released hi Brian so when we say pinion

00:04:03,300 --> 00:04:07,980
points we're talking about body of

00:04:05,910 --> 00:04:11,910
internal tubes that I could run to you

00:04:07,980 --> 00:04:14,430
so the Saiga actually a base test

00:04:11,910 --> 00:04:18,209
results in results DB you know according

00:04:14,430 --> 00:04:20,489
to some policies so look you know these

00:04:18,209 --> 00:04:23,640
policies are just about what tracks need

00:04:20,489 --> 00:04:26,760
to pass before other factors to consider

00:04:23,640 --> 00:04:29,520
you know I secure enough so what I went

00:04:26,760 --> 00:04:32,340
to a Negro what problems can crew

00:04:29,520 --> 00:04:34,560
grooming help us to solve in body so

00:04:32,340 --> 00:04:37,370
right now we have identified two

00:04:34,560 --> 00:04:41,340
problems in body

00:04:37,370 --> 00:04:44,130
the first one is way we don't import any

00:04:41,340 --> 00:04:46,380
tracks across all the packages employees

00:04:44,130 --> 00:04:48,479
what what that means if you want you can

00:04:46,380 --> 00:04:50,880
reduce your package update together

00:04:48,479 --> 00:04:54,240
assignee field test results right so

00:04:50,880 --> 00:04:56,700
however you know if there's a test field

00:04:54,240 --> 00:04:59,460
which could be a sign that your package

00:04:56,700 --> 00:05:01,620
update is broken and you could you know

00:04:59,460 --> 00:05:05,340
enough breaking other people's packages

00:05:01,620 --> 00:05:07,919
which is not really like expecting so to

00:05:05,340 --> 00:05:10,979
solve this problem way as you know

00:05:07,919 --> 00:05:12,780
federal community want to enforce

00:05:10,979 --> 00:05:15,600
certain tracks across other

00:05:12,780 --> 00:05:18,240
distributions so we want to you know get

00:05:15,600 --> 00:05:18,930
paid package updates based on the test

00:05:18,240 --> 00:05:21,479
results in

00:05:18,930 --> 00:05:24,030
so when how big is going to be these

00:05:21,479 --> 00:05:27,449
three body so the goal here is just to

00:05:24,030 --> 00:05:29,400
prevent the broken changes would affect

00:05:27,449 --> 00:05:35,220
other packages as well as you know

00:05:29,400 --> 00:05:38,070
improve package quality so what wrecks

00:05:35,220 --> 00:05:40,770
the way want to import so here's just a

00:05:38,070 --> 00:05:44,070
straight take you know text we really

00:05:40,770 --> 00:05:46,530
want to enforce right now so he stole

00:05:44,070 --> 00:05:49,710
abhi you know distorted rpm deadly

00:05:46,530 --> 00:05:51,900
and these those are great pass you know

00:05:49,710 --> 00:05:55,020
basically Hawthorne is running these

00:05:51,900 --> 00:05:56,850
three text for for you know most of

00:05:55,020 --> 00:06:00,570
package up this you know because you

00:05:56,850 --> 00:06:02,729
know I think just ping goodness you know

00:06:00,570 --> 00:06:05,610
has reached the boiling issue for creamy

00:06:02,729 --> 00:06:09,449
with a couple days ago I we just

00:06:05,610 --> 00:06:13,470
realized that actually this API track is

00:06:09,449 --> 00:06:16,520
I think it's only applied a quick go

00:06:13,470 --> 00:06:16,520
past packages right

00:06:19,330 --> 00:06:26,630
all right yeah yeah the next one I think

00:06:24,050 --> 00:06:39,410
the upgrade path has some issues waist

00:06:26,630 --> 00:06:50,600
up right so but you mentally we want to

00:06:39,410 --> 00:06:52,990
import a little text for each of these

00:06:50,600 --> 00:06:52,990
three

00:06:54,889 --> 00:07:00,400
there how ABI check runs against that

00:06:57,650 --> 00:07:00,400
how are

00:07:03,720 --> 00:07:16,830
yeah yeah that would be good

00:07:07,020 --> 00:07:16,830
no they cannot because these are issues

00:07:17,340 --> 00:07:24,660
so if you want to deliver checks here it

00:07:21,280 --> 00:07:24,660
prevents someone from

00:07:24,820 --> 00:07:29,310
similar areas and that's something by

00:07:27,490 --> 00:07:32,650
policy does not once

00:07:29,310 --> 00:07:38,830
so if there is a burg unity I check the

00:07:32,650 --> 00:07:40,570
next service that allows you it's a

00:07:38,830 --> 00:07:44,310
pretty decision and as we love to be a

00:07:40,570 --> 00:07:44,310
real and action to actually leave

00:07:44,580 --> 00:07:49,810
something for a breakfast you need to

00:07:48,160 --> 00:07:51,880
that could be a great pass always

00:07:49,810 --> 00:07:53,770
compatible between better off and run

00:07:51,880 --> 00:07:56,919
facade right that's - that's pretty

00:07:53,770 --> 00:07:59,430
serious again so I said yeah you can

00:07:56,919 --> 00:08:05,630
in films that by

00:07:59,430 --> 00:08:05,630
to be their updates - so you can go in

00:08:12,449 --> 00:08:19,949
yeah happened a great party means and we

00:08:17,830 --> 00:08:19,949
are

00:08:34,409 --> 00:08:38,159
relations will move up Grady

00:08:38,649 --> 00:08:41,219
I know

00:08:45,680 --> 00:08:52,100
it's less it's arguably lesson

00:09:06,600 --> 00:09:11,240
so what that looking for is to make sure

00:09:08,940 --> 00:09:11,240
that

00:09:17,270 --> 00:09:19,990
00:09:26,240 --> 00:09:29,230
Dina

00:09:43,170 --> 00:09:47,820
okay question

00:09:46,020 --> 00:09:50,399
and for each of the checks that you're

00:09:47,820 --> 00:09:53,130
enforcing the PMI as a character able to

00:09:50,399 --> 00:09:54,330
run these without running to these

00:09:53,130 --> 00:09:56,610
checks against their package during

00:09:54,330 --> 00:09:58,910
development packaging without going

00:09:56,610 --> 00:09:58,910
through

00:10:00,210 --> 00:10:02,750
now

00:10:03,950 --> 00:10:07,660
I think is it yes with some people

00:10:35,490 --> 00:10:41,640
these are used for

00:10:41,730 --> 00:10:54,090
acceptance testing so is focusing on

00:10:47,850 --> 00:10:54,090
some the cage but more or less for I

00:10:54,990 --> 00:11:05,860
think it just helped husband husband

00:11:00,160 --> 00:11:11,950
running for each package a day it will

00:11:05,860 --> 00:11:15,390
be great system or or or it use order

00:11:11,950 --> 00:11:19,510
version and just use these one built

00:11:15,390 --> 00:11:22,060
inside some stable system using you know

00:11:19,510 --> 00:11:24,880
embody for each package up there you

00:11:22,060 --> 00:11:26,600
know this top filter and so I think

00:11:24,880 --> 00:11:28,900
basically touched on this one

00:11:26,600 --> 00:11:32,210
some tights on looking at these fields

00:11:28,900 --> 00:11:33,920
so that's what the results of you know

00:11:32,210 --> 00:11:37,060
the petrodollar okay and Bodie is

00:11:33,920 --> 00:11:37,060
actually just something that

00:12:03,620 --> 00:12:06,610
but I

00:12:10,600 --> 00:12:21,410
sorted out what that

00:12:14,480 --> 00:12:21,410
there's automatically

00:12:24,230 --> 00:12:30,550
so some of those gets to run but when

00:12:28,220 --> 00:12:30,550
you serve

00:12:33,850 --> 00:12:38,910
there's a certain amount of where'd you

00:12:35,860 --> 00:12:38,910
run them when you run

00:12:40,670 --> 00:12:46,810
it's a general principle that we should

00:12:42,110 --> 00:12:46,810
apply when we put you live in force and

00:13:09,670 --> 00:13:15,410
all right okay so so the reason we want

00:13:14,720 --> 00:13:17,120
you

00:13:15,410 --> 00:13:19,570
you know this tracks you know we think

00:13:17,120 --> 00:13:23,180
this texture consider extremely

00:13:19,570 --> 00:13:25,160
important by the distribution so you

00:13:23,180 --> 00:13:27,500
know this video is on the package after

00:13:25,160 --> 00:13:29,300
I would say we're almost you know

00:13:27,500 --> 00:13:32,150
certainly break applications or

00:13:29,300 --> 00:13:35,120
libraries but depend on this up in a

00:13:32,150 --> 00:13:36,890
packet at updates so this video should

00:13:35,120 --> 00:13:39,170
be I think in this video everything this

00:13:36,890 --> 00:13:41,000
spinner should be you know inspected as

00:13:39,170 --> 00:13:44,690
carefully by the package maintainer or

00:13:41,000 --> 00:13:48,200
you know all of it our QA so how many

00:13:44,690 --> 00:13:49,940
these checks could help us solve you

00:13:48,200 --> 00:13:52,490
know find the problem earlier in our

00:13:49,940 --> 00:13:54,500
release pipeline so in great way with

00:13:52,490 --> 00:13:56,630
these tracks you know could be expressed

00:13:54,500 --> 00:14:01,820
as a list of rules in you know policy

00:13:56,630 --> 00:14:04,670
for different products so the second

00:14:01,820 --> 00:14:07,430
problem is you know actually body types

00:14:04,670 --> 00:14:11,060
of feature to allow packages to specify

00:14:07,430 --> 00:14:12,920
actual crap text you know but you know

00:14:11,060 --> 00:14:14,840
people are not quite aware of I don't

00:14:12,920 --> 00:14:17,990
think anyone you use it because it's a

00:14:14,840 --> 00:14:20,240
manual process you know it's not big fun

00:14:17,990 --> 00:14:22,640
really the reason is you have to specify

00:14:20,240 --> 00:14:24,770
your extra checks in I read you know

00:14:22,640 --> 00:14:26,780
package are they so chrome will can

00:14:24,770 --> 00:14:30,200
automate this process by allowing

00:14:26,780 --> 00:14:32,690
packages to define policies what extra

00:14:30,200 --> 00:14:33,810
tags need to pass before package update

00:14:32,690 --> 00:14:36,389
expense to the right

00:14:33,810 --> 00:14:38,639
so as consequence you know government

00:14:36,389 --> 00:14:43,310
will automatically automatically apply

00:14:38,639 --> 00:14:43,310
those policies with making these Syrians

00:14:43,339 --> 00:14:48,329
so why do we heaters new service you

00:14:46,259 --> 00:14:50,999
know why not just defined policies

00:14:48,329 --> 00:14:53,759
embody a serve so you know police sounds

00:14:50,999 --> 00:14:55,730
like a perfect place for defining

00:14:53,759 --> 00:14:58,829
politics Isis you know it's already a

00:14:55,730 --> 00:14:59,730
rating system that you know packages are

00:14:58,829 --> 00:15:03,749
used to know

00:14:59,730 --> 00:15:05,639
so the drillin is body is not the only

00:15:03,749 --> 00:15:08,069
place we want to eat reduce gave him

00:15:05,639 --> 00:15:11,910
based on the test results we we also

00:15:08,069 --> 00:15:14,040
want to you know reuse the same logic to

00:15:11,910 --> 00:15:16,949
perform getting as much as possible in

00:15:14,040 --> 00:15:18,720
other you know gaining points so other

00:15:16,949 --> 00:15:21,389
gaining points don't need to really want

00:15:18,720 --> 00:15:22,769
to bail so this way we make all our life

00:15:21,389 --> 00:15:24,329
easier to maintain

00:15:22,769 --> 00:15:27,870
you know this sucks not a be in one

00:15:24,329 --> 00:15:29,759
place rather than many places so I think

00:15:27,870 --> 00:15:32,309
this we think that's why does make sense

00:15:29,759 --> 00:15:34,949
to you know put growing into a micro

00:15:32,309 --> 00:15:36,990
service along with other you know micro

00:15:34,949 --> 00:15:43,110
service stations we have developed you

00:15:36,990 --> 00:15:46,800
factory to product so in terms of the

00:15:43,110 --> 00:15:50,610
feeling test results so what happens you

00:15:46,800 --> 00:15:53,670
know we'll testicles bad so what happens

00:15:50,610 --> 00:15:56,000
when one machine is wrong so so if I

00:15:53,670 --> 00:15:58,649
just feel it could be because of if

00:15:56,000 --> 00:16:01,439
infrastructure problems or other known

00:15:58,649 --> 00:16:03,509
issues so you know I saw packet or you

00:16:01,439 --> 00:16:04,920
may want to wave it right so to Mumia

00:16:03,509 --> 00:16:07,709
package update

00:16:04,920 --> 00:16:11,069
forward so since the results in results

00:16:07,709 --> 00:16:13,980
PB are immutable and cannot be changed

00:16:11,069 --> 00:16:16,290
by humans so we just need a new service

00:16:13,980 --> 00:16:20,179
which is we ready be to allow humans to

00:16:16,290 --> 00:16:20,179
override the repetitive thoughts

00:16:21,279 --> 00:16:30,050
so he Mushaf summary waiver deviates

00:16:26,990 --> 00:16:33,110
just a microservice for storing waivers

00:16:30,050 --> 00:16:35,600
against the test results in result eb so

00:16:33,110 --> 00:16:37,940
generalize the existing women function

00:16:35,600 --> 00:16:40,899
energies that we have in some of the

00:16:37,940 --> 00:16:44,959
testing testing tools like okay and creo

00:16:40,899 --> 00:16:47,120
so just like the same ice result DB we

00:16:44,959 --> 00:16:49,810
were devious a central place for storing

00:16:47,120 --> 00:16:49,810
all the waivers

00:16:50,589 --> 00:16:54,350
all right so pull it off

00:16:52,580 --> 00:16:56,660
you know sync all these three services

00:16:54,350 --> 00:17:00,470
together so what I'll package update is

00:16:56,660 --> 00:17:03,950
going to be let's say pushed to a stable

00:17:00,470 --> 00:17:06,530
in body so body will ask grooving to

00:17:03,950 --> 00:17:10,130
make a decision whether the package

00:17:06,530 --> 00:17:13,610
update it's okay to go and then Corolla

00:17:10,130 --> 00:17:16,100
will query post results TV and waiver TV

00:17:13,610 --> 00:17:22,459
and look head to the results and we work

00:17:16,100 --> 00:17:24,620
together to make the decisions so Young

00:17:22,459 --> 00:17:27,410
has given a great talk about freshmaker

00:17:24,620 --> 00:17:30,850
I just want you know how many of you

00:17:27,410 --> 00:17:34,100
have been to talk I think most of you

00:17:30,850 --> 00:17:36,679
okay that's good but just to this is

00:17:34,100 --> 00:17:38,540
just to refresh your memory right so

00:17:36,679 --> 00:17:40,340
it's just a service for automatically

00:17:38,540 --> 00:17:43,400
reviewing other facts when their

00:17:40,340 --> 00:17:45,040
dependencies get updated so it can you

00:17:43,400 --> 00:17:47,780
know point that we can kami all

00:17:45,040 --> 00:17:51,230
container fraction when rpms are

00:17:47,780 --> 00:17:54,380
released to stable so yeah another

00:17:51,230 --> 00:17:54,530
example when you updated a spec fair you

00:17:54,380 --> 00:17:56,870
know

00:17:54,530 --> 00:17:59,059
IBM package freshmaker will

00:17:56,870 --> 00:18:02,390
automatically trigger the repeals of all

00:17:59,059 --> 00:18:04,820
the modules and you know containers that

00:18:02,390 --> 00:18:07,760
contain that you know rpm package so it

00:18:04,820 --> 00:18:09,770
will save you a lot of time and effort

00:18:07,760 --> 00:18:14,150
to rebuild all of the things by yourself

00:18:09,770 --> 00:18:14,600
so which is really nice so but at the

00:18:14,150 --> 00:18:17,450
moment

00:18:14,600 --> 00:18:20,059
freshmaker is unconditionally trigger to

00:18:17,450 --> 00:18:22,110
rebuild all the time so but in some

00:18:20,059 --> 00:18:24,539
situations the repeal

00:18:22,110 --> 00:18:27,510
so really in India right so for example

00:18:24,539 --> 00:18:30,059
if an underlying artifact is two days

00:18:27,510 --> 00:18:31,080
but not even past certain tracks which

00:18:30,059 --> 00:18:33,240
may be your Center

00:18:31,080 --> 00:18:35,220
that annoying unfriend is somehow broken

00:18:33,240 --> 00:18:36,899
right so freshmaker

00:18:35,220 --> 00:18:40,080
you know she's not trigger the reveals

00:18:36,899 --> 00:18:41,730
of all the upstream matter of facts in

00:18:40,080 --> 00:18:43,740
status to wait until you know the

00:18:41,730 --> 00:18:44,370
underlying on the fact called fixed

00:18:43,740 --> 00:18:47,669
first

00:18:44,370 --> 00:18:50,010
so wasting to make freshmaker and more

00:18:47,669 --> 00:18:52,080
inflation as well as seem false in

00:18:50,010 --> 00:18:54,389
fourth quality premium can be used

00:18:52,080 --> 00:18:57,269
either to pay the rebuild so based on

00:18:54,389 --> 00:18:58,019
the types of results and to decide when

00:18:57,269 --> 00:19:04,559
she revealed

00:18:58,019 --> 00:19:06,120
you know how much to rebuild the next

00:19:04,559 --> 00:19:08,720
hoping it can be hard because I'm going

00:19:06,120 --> 00:19:12,120
to talk about the implement our

00:19:08,720 --> 00:19:13,919
implementation details and so basically

00:19:12,120 --> 00:19:16,500
just about talk about how Corwin works

00:19:13,919 --> 00:19:20,519
under the hood and where are we I today

00:19:16,500 --> 00:19:24,289
with the current implementation so I say

00:19:20,519 --> 00:19:27,090
growing and waiver DB are implemented by

00:19:24,289 --> 00:19:31,559
plus you know so how many of you know

00:19:27,090 --> 00:19:33,330
flask so plus it just you know a some

00:19:31,559 --> 00:19:38,669
micro framework for peasant you know

00:19:33,330 --> 00:19:40,679
it's well-documented and easy to code so

00:19:38,669 --> 00:19:44,490
first let's talk about how to define our

00:19:40,679 --> 00:19:46,799
growing politic because it plays such an

00:19:44,490 --> 00:19:50,130
important role in growing a policy just

00:19:46,799 --> 00:19:55,260
a place where way packages could specify

00:19:50,130 --> 00:19:57,480
extra text so each policy can have Ivy

00:19:55,260 --> 00:19:59,789
product warranty certain common rules so

00:19:57,480 --> 00:20:03,169
I just know Mona you know unique and an

00:19:59,789 --> 00:20:07,169
affair product weirder than just

00:20:03,169 --> 00:20:08,690
PDC as a musical yeah right so PDC I'm

00:20:07,169 --> 00:20:11,960
an American

00:20:08,690 --> 00:20:14,050
six for our text 27 discerning compact

00:20:11,960 --> 00:20:17,350
size a label named as through

00:20:14,050 --> 00:20:20,300
coordination between policy officer and

00:20:17,350 --> 00:20:22,430
consuming to use so you know a nice toe

00:20:20,300 --> 00:20:25,910
for Jules just about what hat what ties

00:20:22,430 --> 00:20:28,190
are required to be passing so with the

00:20:25,910 --> 00:20:30,770
current implementation policies are

00:20:28,190 --> 00:20:33,650
extracts the llamo configuration fails

00:20:30,770 --> 00:20:35,420
deploy either with the application but

00:20:33,650 --> 00:20:39,170
this is my most likely changing the

00:20:35,420 --> 00:20:41,570
future because you know all my other

00:20:39,170 --> 00:20:44,660
Matheny we want the policies in falsify

00:20:41,570 --> 00:20:46,880
prevail to be served service so you know

00:20:44,660 --> 00:20:50,320
people have just come about and define a

00:20:46,880 --> 00:20:50,320
policy for themselves

00:20:50,860 --> 00:20:57,230
alright so let's imagine that we're

00:20:53,360 --> 00:21:00,740
going to push up happy package update

00:20:57,230 --> 00:21:04,250
you stable 42 if the embody and we have

00:21:00,740 --> 00:21:06,440
got one film entitled resulting result

00:21:04,250 --> 00:21:09,200
DB which is required by the policy I

00:21:06,440 --> 00:21:11,090
mentioned before if we are screwed to

00:21:09,200 --> 00:21:13,610
make up the Syrian I gonna pass the

00:21:11,090 --> 00:21:16,910
politics not size since we're yeah right

00:21:13,610 --> 00:21:20,120
they will say which ties please feel

00:21:16,910 --> 00:21:22,360
because we have helped install AV attack

00:21:20,120 --> 00:21:22,360
field

00:21:24,040 --> 00:21:30,310
so if you think the filming test is

00:21:27,220 --> 00:21:32,910
false positive you can you know create a

00:21:30,310 --> 00:21:36,640
waiver by calling we were db-api

00:21:32,910 --> 00:21:39,280
you know but the things you in the post

00:21:36,640 --> 00:21:42,250
request you need result ID and program

00:21:39,280 --> 00:21:44,320
Warren and you know good reason so you

00:21:42,250 --> 00:21:49,090
know other people can know who and why

00:21:44,320 --> 00:21:51,730
this feeling test result was waived so

00:21:49,090 --> 00:21:54,190
having said we're not expanding people

00:21:51,730 --> 00:21:56,740
to college API directly so you know make

00:21:54,190 --> 00:21:58,420
picturing that people will be able to

00:21:56,740 --> 00:22:01,150
waive the Phelan test results from the

00:21:58,420 --> 00:22:08,850
body by Vi this is still kind of thing

00:22:01,150 --> 00:22:08,850
we are currently working on yep

00:22:13,130 --> 00:22:16,289
[Music]

00:22:17,620 --> 00:22:21,670
so wait

00:22:33,290 --> 00:22:38,370
unfortunately we don't have that but we

00:22:35,190 --> 00:22:41,640
are considering this right now so we go

00:22:38,370 --> 00:22:43,470
in I think we we're talking about how

00:22:41,640 --> 00:22:48,230
we're going to introduce all the waving

00:22:43,470 --> 00:22:48,230
stories or something like that but yeah

00:22:56,090 --> 00:22:59,090
yeah

00:23:11,160 --> 00:23:16,950
okay cool no hard so this is just my

00:23:14,370 --> 00:23:19,050
last time so nice to have just bow the

00:23:16,950 --> 00:23:21,360
indication I think we have almost

00:23:19,050 --> 00:23:24,390
completed and you know we have been

00:23:21,360 --> 00:23:28,320
putting putting a lot of effort so thank

00:23:24,390 --> 00:23:29,790
you for body team so I said it's quite

00:23:28,320 --> 00:23:32,550
exciting to say that because it has been

00:23:29,790 --> 00:23:34,650
deployed since last Friday but I think

00:23:32,550 --> 00:23:37,740
we just have some small issues you know

00:23:34,650 --> 00:23:40,320
before carry on train but you will say

00:23:37,740 --> 00:23:42,780
that you know production minus one and

00:23:40,320 --> 00:23:45,390
next one is my safe path driven so

00:23:42,780 --> 00:23:47,880
basically we would like to use fine

00:23:45,390 --> 00:23:51,630
message to automatically type all the

00:23:47,880 --> 00:23:54,330
process lastly we want you all our

00:23:51,630 --> 00:23:59,010
passengers to the farm of policy for

00:23:54,330 --> 00:24:01,920
each package so okay I think that's

00:23:59,010 --> 00:24:03,570
really want to represent today so if we

00:24:01,920 --> 00:24:06,900
want to pay involved and if you want to

00:24:03,570 --> 00:24:11,600
contribute here other links welcomed any

00:24:06,900 --> 00:24:11,600
patron thank you yep question

00:24:15,370 --> 00:24:20,610
something we're talking about together

00:24:16,840 --> 00:24:20,610
later yeah I'm sure that

00:24:22,950 --> 00:24:28,769
I'm wondering if it's like you kind of

00:24:26,850 --> 00:24:31,980
wonder if it makes sense to third

00:24:28,769 --> 00:24:34,049
package policies in the way that we are

00:24:31,980 --> 00:24:35,789
pushing on one side to test in this case

00:24:34,049 --> 00:24:37,650
which are entirely in the hand of the

00:24:35,789 --> 00:24:40,150
packages

00:24:37,650 --> 00:24:45,030
which time being round

00:24:40,150 --> 00:24:45,030
just roll above checks being made

00:24:46,890 --> 00:24:51,790
but the package here what packager needs

00:24:50,290 --> 00:24:54,220
to controls on the testers various

00:24:51,790 --> 00:24:59,040
control over and what the district wants

00:24:54,220 --> 00:24:59,040
to control our controller

00:25:00,960 --> 00:25:08,410
I just Greenway then weather

00:25:05,350 --> 00:25:12,690
I mean when those policies are horrible

00:25:08,410 --> 00:25:12,690
decisions which are controlled by

00:25:17,580 --> 00:25:26,279
and every single which is my Quechua

00:25:19,739 --> 00:25:30,230
bone is based on yes that those in that

00:25:26,279 --> 00:25:30,230
does imply that this state

00:25:34,519 --> 00:25:39,750
all right max we're talking about this

00:25:37,980 --> 00:25:42,470
in terms of distro level checks because

00:25:39,750 --> 00:25:42,470
that's what

00:25:42,750 --> 00:25:49,919
but related to that so we could be thing

00:25:48,179 --> 00:25:51,720
that's available may be very exalted

00:25:49,919 --> 00:25:53,730
even well it's already basically

00:25:51,720 --> 00:25:56,330
everything so which makes you like to

00:25:53,730 --> 00:25:56,330
eat vegetables

00:26:00,110 --> 00:26:04,700
what so it doesn't have to just be

00:26:02,230 --> 00:26:06,320
tested or divided by roland right oh I

00:26:04,700 --> 00:26:09,490
mean get back if you could say I want to

00:26:06,320 --> 00:26:09,490
make sure that this

00:26:13,440 --> 00:26:16,440
-

00:26:26,840 --> 00:26:32,620
I think we can discuss this later right

00:26:30,260 --> 00:26:35,620
so Betty I'm running on all the time

00:26:32,620 --> 00:26:35,620
sorry

00:26:36,580 --> 00:26:39,619

YouTube URL: https://www.youtube.com/watch?v=kxTIJ6ZUD78


