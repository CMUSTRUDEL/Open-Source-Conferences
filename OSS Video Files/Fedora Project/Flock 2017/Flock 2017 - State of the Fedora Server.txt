Title: Flock 2017 - State of the Fedora Server
Publication date: 2017-10-20
Playlist: Flock 2017
Description: 
	Tuesday August 29, 2017 3:00pm - 3:30pm
@Grand I
Talk: State of the Fedora Server
Presenter: Stephen Gallagher

Description:
Our annual review of what changes have been made in Fedora Server over the past year and an audience-participation section on where to go next.
Captions: 
	00:00:00,000 --> 00:00:07,170
then I suppose we should get started

00:00:03,920 --> 00:00:10,860
good afternoon I'm Steve Gallagher I

00:00:07,170 --> 00:00:14,570
work on the fedora servicing for the

00:00:10,860 --> 00:00:17,029
most part I act as its chairperson so

00:00:14,570 --> 00:00:20,820
what are we going to talk about today

00:00:17,029 --> 00:00:25,740
I'm gonna go through why did we create

00:00:20,820 --> 00:00:28,859
the photo our server what what is our

00:00:25,740 --> 00:00:32,219
ultimate goal with it how are we getting

00:00:28,859 --> 00:00:38,579
there and last but not least where did

00:00:32,219 --> 00:00:42,450
we go so so wrong so let's start with a

00:00:38,579 --> 00:00:45,090
little bit of a history lesson when when

00:00:42,450 --> 00:00:49,289
Red Hat Linux was first created back in

00:00:45,090 --> 00:00:52,489
the days when I still had hair there it

00:00:49,289 --> 00:00:55,110
was very heavily driven by hobbyists and

00:00:52,489 --> 00:00:58,350
small and small server admins people who

00:00:55,110 --> 00:01:00,180
wanted to get things done people wanted

00:00:58,350 --> 00:01:05,460
to support their engineer their

00:01:00,180 --> 00:01:07,369
engineering habits or their or their

00:01:05,460 --> 00:01:12,090
science labs and things like that

00:01:07,369 --> 00:01:13,950
and over time as Linux and the

00:01:12,090 --> 00:01:16,380
open-source community grew and

00:01:13,950 --> 00:01:19,470
especially became Fedora and our Fedora

00:01:16,380 --> 00:01:22,320
community grew it kind of started to

00:01:19,470 --> 00:01:25,350
morph I'm getting off the camera it kind

00:01:22,320 --> 00:01:28,439
of started to morph into a more heavy

00:01:25,350 --> 00:01:31,079
desktop focus things like the genome

00:01:28,439 --> 00:01:32,939
project and the KDE project both started

00:01:31,079 --> 00:01:34,650
taking up all of the mind share of

00:01:32,939 --> 00:01:35,790
people who thought about a Linux

00:01:34,650 --> 00:01:38,280
distribution they were thinking about

00:01:35,790 --> 00:01:41,340
how do I use it to replace windows how

00:01:38,280 --> 00:01:43,439
do I use it to get a better to get a

00:01:41,340 --> 00:01:45,149
good UNIX experience without having to

00:01:43,439 --> 00:01:48,630
pay you know thousands of dollars for a

00:01:45,149 --> 00:01:52,579
Mac things like that and while this was

00:01:48,630 --> 00:01:56,070
happening it started it started to cause

00:01:52,579 --> 00:01:57,810
those longtime server admins to be kind

00:01:56,070 --> 00:01:59,640
of pushed aside all of the new

00:01:57,810 --> 00:02:01,140
functionality all the new features all

00:01:59,640 --> 00:02:04,229
the cool new things we were doing they

00:02:01,140 --> 00:02:06,600
were all in the desktop space and it got

00:02:04,229 --> 00:02:08,459
to the point where server administrators

00:02:06,600 --> 00:02:09,960
were starting to become the party of no

00:02:08,459 --> 00:02:11,880
in the

00:02:09,960 --> 00:02:14,160
the Atlantic's community they're kind of

00:02:11,880 --> 00:02:16,290
it was kind of a matter of they weren't

00:02:14,160 --> 00:02:18,110
getting an opportunity to innovate the

00:02:16,290 --> 00:02:21,720
way that they that they really should be

00:02:18,110 --> 00:02:24,960
and what they were ultimately getting

00:02:21,720 --> 00:02:28,350
getting to is no no please please don't

00:02:24,960 --> 00:02:30,240
make please don't open the firewall by

00:02:28,350 --> 00:02:32,820
default please don't do this please

00:02:30,240 --> 00:02:34,200
don't do that it's bad for servers was

00:02:32,820 --> 00:02:36,540
about all the linking managed to get

00:02:34,200 --> 00:02:40,880
through as far as changes in the Fedora

00:02:36,540 --> 00:02:44,070
project so when we embarked upon the

00:02:40,880 --> 00:02:45,870
Fedora next program one of the things

00:02:44,070 --> 00:02:47,850
that I pitched at the time was that we

00:02:45,870 --> 00:02:51,180
should consider and and we ultimately

00:02:47,850 --> 00:02:54,210
did changing up our set of deliverables

00:02:51,180 --> 00:02:56,760
so that we had a few primary at the time

00:02:54,210 --> 00:02:58,920
we called them products that would be

00:02:56,760 --> 00:03:00,810
Fedora workstation which would focus

00:02:58,920 --> 00:03:04,380
very heavily on the desktop and a use

00:03:00,810 --> 00:03:07,800
cases fedora cloud which would handle

00:03:04,380 --> 00:03:11,130
this at the time new and emerging public

00:03:07,800 --> 00:03:13,380
and private cloud environment and the

00:03:11,130 --> 00:03:16,830
fedora server whose goal would be

00:03:13,380 --> 00:03:20,040
essentially to really focus on the data

00:03:16,830 --> 00:03:26,460
center administrator of of our classic

00:03:20,040 --> 00:03:29,760
history and like I said this as all of

00:03:26,460 --> 00:03:32,580
you know here that idea took took wing

00:03:29,760 --> 00:03:36,360
we did we did split these out and so we

00:03:32,580 --> 00:03:38,070
built an environment where the server

00:03:36,360 --> 00:03:40,440
admins now had another voice they had a

00:03:38,070 --> 00:03:41,820
place where they could say hey now that

00:03:40,440 --> 00:03:43,590
we've got this our own deliverable

00:03:41,820 --> 00:03:44,700
here's some cool I think we can do that

00:03:43,590 --> 00:03:46,620
the desktop people would have said no

00:03:44,700 --> 00:03:48,540
about or the desktop people wouldn't

00:03:46,620 --> 00:03:50,030
have cared about and we can and we've

00:03:48,540 --> 00:03:55,470
started talking about some of that and

00:03:50,030 --> 00:03:59,850
one of the things we did there we came

00:03:55,470 --> 00:04:01,140
up with a few very specific programs

00:03:59,850 --> 00:04:03,740
that we started that we started to

00:04:01,140 --> 00:04:08,400
produce sorry I lost my place and I'm

00:04:03,740 --> 00:04:09,810
catching up to myself that would be it

00:04:08,400 --> 00:04:13,980
would be heavily focused on improving

00:04:09,810 --> 00:04:16,350
the data center OS things that would we

00:04:13,980 --> 00:04:18,840
hoped ultimately flow down into future

00:04:16,350 --> 00:04:20,850
versions of Red Hat Enterprise Linux and

00:04:18,840 --> 00:04:23,650
get them and pick up that audience as

00:04:20,850 --> 00:04:27,910
well so I'll get to some of the detail

00:04:23,650 --> 00:04:31,410
on that in a moment but what is the

00:04:27,910 --> 00:04:34,780
ultimate goal of the Fedora server

00:04:31,410 --> 00:04:37,630
Edition and the cig we debated this for

00:04:34,780 --> 00:04:40,780
a very long time in when we were

00:04:37,630 --> 00:04:43,030
originally doing the we had we had a

00:04:40,780 --> 00:04:45,250
series of PRDS a project of product

00:04:43,030 --> 00:04:46,540
requirement documents that we predict as

00:04:45,250 --> 00:04:49,270
submitted to the council a number of

00:04:46,540 --> 00:04:51,040
years ago that described what exactly

00:04:49,270 --> 00:04:53,440
our goals would be and we've revised

00:04:51,040 --> 00:04:56,400
them over time and I think the most

00:04:53,440 --> 00:05:01,510
recent revision of our vision statement

00:04:56,400 --> 00:05:04,389
is anyone should be able to confidently

00:05:01,510 --> 00:05:07,150
obtain configure and deploy software

00:05:04,389 --> 00:05:09,039
services that address their needs using

00:05:07,150 --> 00:05:12,280
readily available and trustworthy

00:05:09,039 --> 00:05:14,830
recipes so that's a little wordy for a

00:05:12,280 --> 00:05:16,270
vision statement but I think it's about

00:05:14,830 --> 00:05:20,470
a six synced as we can make it what we

00:05:16,270 --> 00:05:23,530
want is for anyone and I mean anyone to

00:05:20,470 --> 00:05:26,710
be able to turn on a machine and with a

00:05:23,530 --> 00:05:32,139
minimum amount of Education figure out

00:05:26,710 --> 00:05:34,870
how to do a common set of tasks I want I

00:05:32,139 --> 00:05:37,960
need a database server for my of for my

00:05:34,870 --> 00:05:40,120
house I need I want I want a simple web

00:05:37,960 --> 00:05:44,560
server to show off to show off Mike but

00:05:40,120 --> 00:05:48,460
my band's cool jams and we really have

00:05:44,560 --> 00:05:51,460
never had that the example I like to use

00:05:48,460 --> 00:05:56,050
is Microsoft Windows for all of its

00:05:51,460 --> 00:05:58,840
flaws of which they are legion they did

00:05:56,050 --> 00:06:02,680
one thing very much right when you

00:05:58,840 --> 00:06:06,280
install Windows Server you log into it

00:06:02,680 --> 00:06:08,199
for the very first time what happens is

00:06:06,280 --> 00:06:11,260
it comes up in a graphical environment

00:06:08,199 --> 00:06:13,720
and it brings up essentially a wizard it

00:06:11,260 --> 00:06:16,360
gives you a list of things about this

00:06:13,720 --> 00:06:18,490
server here's its current status here is

00:06:16,360 --> 00:06:20,110
a you know here's here's a set of links

00:06:18,490 --> 00:06:21,639
to say hey here's some stuff you might

00:06:20,110 --> 00:06:24,460
want to do with this server click here

00:06:21,639 --> 00:06:27,270
and do it here what happens when you

00:06:24,460 --> 00:06:31,330
stand you installed a fedora 19 server

00:06:27,270 --> 00:06:33,640
and then you logged in you got a

00:06:31,330 --> 00:06:35,950
blinking prompt you know what happens if

00:06:33,640 --> 00:06:37,460
you type help at that prompt you get the

00:06:35,950 --> 00:06:42,450
help from bash

00:06:37,460 --> 00:06:45,900
not for the OS - this is not a you this

00:06:42,450 --> 00:06:49,890
was not a user-friendly experience so in

00:06:45,900 --> 00:06:53,700
Fedora we came we decided that we really

00:06:49,890 --> 00:06:55,200
needed to do better than that we needed

00:06:53,700 --> 00:06:57,960
to find a way to make the experience

00:06:55,200 --> 00:07:00,390
better at the beginning for people and

00:06:57,960 --> 00:07:03,540
so nowadays even if you install a

00:07:00,390 --> 00:07:06,330
headless Fedora server before login even

00:07:03,540 --> 00:07:07,830
you will now be prompted with a login

00:07:06,330 --> 00:07:09,570
URL that you can choose to use instead

00:07:07,830 --> 00:07:12,240
of typing or logging at the local

00:07:09,570 --> 00:07:15,090
console and you'll get cockpit jump

00:07:12,240 --> 00:07:18,870
ahead in my slides but that's ok cockpit

00:07:15,090 --> 00:07:21,600
is really cool cockpit is very much

00:07:18,870 --> 00:07:24,660
among among many other things cockpit is

00:07:21,600 --> 00:07:29,430
our answer to that Windows Server

00:07:24,660 --> 00:07:32,970
manager login at a quick glance on a

00:07:29,430 --> 00:07:34,800
cockpit you get usage statistics you get

00:07:32,970 --> 00:07:36,360
that you can find out and if it's a part

00:07:34,800 --> 00:07:38,280
of a domain join it to a domain you can

00:07:36,360 --> 00:07:41,490
change the networking configuration you

00:07:38,280 --> 00:07:43,290
can change the storage configuration you

00:07:41,490 --> 00:07:45,030
can interact with kubernetes in most in

00:07:43,290 --> 00:07:46,620
recent versions you can it has an

00:07:45,030 --> 00:07:50,220
SELinux troubleshooter built in now

00:07:46,620 --> 00:07:53,310
which is fantastic we have a lot of

00:07:50,220 --> 00:07:55,050
really cool features included we have we

00:07:53,310 --> 00:07:59,880
can manage systemd services we can

00:07:55,050 --> 00:08:03,750
manage logs and we can do a lot of that

00:07:59,880 --> 00:08:06,270
from cockpit this was a huge step

00:08:03,750 --> 00:08:07,920
forward because we've now actually got a

00:08:06,270 --> 00:08:12,930
we've actually got a story we can tell

00:08:07,920 --> 00:08:15,330
that says hey it's not scary anymore we

00:08:12,930 --> 00:08:17,760
can take this and we can take this to a

00:08:15,330 --> 00:08:19,710
high school and say hey let's start

00:08:17,760 --> 00:08:21,870
let's start teaching these students how

00:08:19,710 --> 00:08:24,900
to set up their own domains how to set

00:08:21,870 --> 00:08:27,030
up data how to set up a data base and

00:08:24,900 --> 00:08:29,550
they can start doing some of that

00:08:27,030 --> 00:08:31,170
without without a whole lot of prep work

00:08:29,550 --> 00:08:33,120
a whole lot of understanding of how

00:08:31,170 --> 00:08:35,880
command lines work and what the hell VI

00:08:33,120 --> 00:08:39,380
is and why do I have to OS as one call

00:08:35,880 --> 00:08:39,380
one called fedora and one called Emacs

00:08:42,890 --> 00:08:48,060
so

00:08:45,570 --> 00:08:52,380
a cockpit has been a big piece of this

00:08:48,060 --> 00:08:55,200
but we did in fact actually come up with

00:08:52,380 --> 00:08:57,060
a lot of specific things that we wanted

00:08:55,200 --> 00:08:58,260
to fix now as you can see here it's very

00:08:57,060 --> 00:09:00,500
clear you can you can make out

00:08:58,260 --> 00:09:02,880
absolutely every bit of that I'm sure

00:09:00,500 --> 00:09:05,150
what we did is we found a variety of

00:09:02,880 --> 00:09:08,760
different places where we had a poor

00:09:05,150 --> 00:09:10,200
user experience a poor ability to for

00:09:08,760 --> 00:09:13,140
people to pick up and understand it and

00:09:10,200 --> 00:09:15,330
we realized that effectively these came

00:09:13,140 --> 00:09:18,000
down to being what we decided for a time

00:09:15,330 --> 00:09:19,680
at the time to call rolls it was a

00:09:18,000 --> 00:09:21,750
series of things that we wanted the

00:09:19,680 --> 00:09:25,080
machine to be able to do and we wanted

00:09:21,750 --> 00:09:26,330
to be able to set up a common well you

00:09:25,080 --> 00:09:28,710
know well-thought-out

00:09:26,330 --> 00:09:31,740
security best practices way of doing it

00:09:28,710 --> 00:09:35,790
so originally we came up with an idea

00:09:31,740 --> 00:09:38,550
called roll kit which was a simple D bus

00:09:35,790 --> 00:09:40,800
service that was essentially a server

00:09:38,550 --> 00:09:45,230
oriented installer and generalized

00:09:40,800 --> 00:09:52,050
installer and we had a prototype that

00:09:45,230 --> 00:09:53,880
was able to deploy two things it only it

00:09:52,050 --> 00:09:56,850
was able to install free IPA which was

00:09:53,880 --> 00:09:59,190
really cool I was one of the earliest

00:09:56,850 --> 00:10:02,370
times we were able to hand a system to

00:09:59,190 --> 00:10:05,910
people and say free IPA is one line is a

00:10:02,370 --> 00:10:08,190
one-line install and it would you

00:10:05,910 --> 00:10:11,760
wouldn't do replicas that wouldn't do it

00:10:08,190 --> 00:10:14,640
wouldn't do ad interaction sorry ad

00:10:11,760 --> 00:10:16,710
integration with Active Directory but it

00:10:14,640 --> 00:10:19,110
would give you a simple home office

00:10:16,710 --> 00:10:22,170
domain that you could that you could use

00:10:19,110 --> 00:10:24,000
and just and just get started with your

00:10:22,170 --> 00:10:29,250
with your own small small business for

00:10:24,000 --> 00:10:33,090
example the problem we had with roll kit

00:10:29,250 --> 00:10:34,710
was it it was a bit too generic and it

00:10:33,090 --> 00:10:38,780
was also a bit too specific at the same

00:10:34,710 --> 00:10:40,910
time it was it was a very generic

00:10:38,780 --> 00:10:43,890
implementation of an installer it was

00:10:40,910 --> 00:10:46,680
simple it was in Python it was it was

00:10:43,890 --> 00:10:48,990
fairly well it was fairly complicated to

00:10:46,680 --> 00:10:50,900
create a plug in at the time we had

00:10:48,990 --> 00:10:52,950
plans for how to make that much simpler

00:10:50,900 --> 00:10:55,560
but at the end of the day what happened

00:10:52,950 --> 00:10:57,180
is that we did not get the outside

00:10:55,560 --> 00:10:59,959
contributions we were expecting and

00:10:57,180 --> 00:11:02,339
hoping for we did not get

00:10:59,959 --> 00:11:03,930
inside of Red Hat or outside of Red Hat

00:11:02,339 --> 00:11:06,420
we did not get anyone writing server

00:11:03,930 --> 00:11:08,069
software that said oh let me help how

00:11:06,420 --> 00:11:10,740
can i how can I write a role kit plug-in

00:11:08,069 --> 00:11:12,660
so we can get that going and simile and

00:11:10,740 --> 00:11:14,189
at the same time we had a resource

00:11:12,660 --> 00:11:15,959
problem from the cockpit side who

00:11:14,189 --> 00:11:19,680
decided that who had just didn't have

00:11:15,959 --> 00:11:21,540
the the cycles to try and implement the

00:11:19,680 --> 00:11:25,110
ones the roles we had already created in

00:11:21,540 --> 00:11:27,300
the UI so what we ended up with was yet

00:11:25,110 --> 00:11:29,220
another command-line tool that was

00:11:27,300 --> 00:11:31,889
really useful only for two for two

00:11:29,220 --> 00:11:34,439
servers so as of right now role kit

00:11:31,889 --> 00:11:36,300
remains on life support mostly because

00:11:34,439 --> 00:11:37,980
it's still used in automation in photo

00:11:36,300 --> 00:11:39,779
in fedora land for doing a lot of the

00:11:37,980 --> 00:11:42,990
automated QA tests for release

00:11:39,779 --> 00:11:46,189
validation but we are planning to retire

00:11:42,990 --> 00:11:48,120
it probably at this point in Fedora 28

00:11:46,189 --> 00:11:51,089
because I haven't had a chance to work

00:11:48,120 --> 00:11:54,209
with atom yet to remove those from the

00:11:51,089 --> 00:11:56,430
egg from the QA environment what we are

00:11:54,209 --> 00:11:59,939
going to replace them with however is a

00:11:56,430 --> 00:12:02,189
new ansible based system that that

00:11:59,939 --> 00:12:05,910
marius Vollmer of the cockpit project

00:12:02,189 --> 00:12:08,220
has been working on and is trying to is

00:12:05,910 --> 00:12:10,860
trying to make a fairly generalized

00:12:08,220 --> 00:12:12,660
installer as well but do it through and

00:12:10,860 --> 00:12:14,699
through a series of ansible well-known

00:12:12,660 --> 00:12:17,129
ansible scripts that are powered that

00:12:14,699 --> 00:12:18,569
are generated originally by cockpit so

00:12:17,129 --> 00:12:23,100
it's going to be a cockpit originated in

00:12:18,569 --> 00:12:26,879
project which has at now a very wide and

00:12:23,100 --> 00:12:28,800
vibrant community will have them create

00:12:26,879 --> 00:12:30,689
they create these models set up the is

00:12:28,800 --> 00:12:34,910
set up there the domain controller set

00:12:30,689 --> 00:12:37,379
up the the database server and then

00:12:34,910 --> 00:12:38,759
apply it but also be able to output an

00:12:37,379 --> 00:12:40,410
ansible script that you can use if you

00:12:38,759 --> 00:12:42,959
want to recreate this or modify it and

00:12:40,410 --> 00:12:46,439
do an a instead but instead of deploying

00:12:42,959 --> 00:12:47,939
it be able to output this and then throw

00:12:46,439 --> 00:12:49,860
it on it point it at a cluster and say

00:12:47,939 --> 00:12:52,439
go and things like that load it into a

00:12:49,860 --> 00:12:53,910
passable tower and manage and manage an

00:12:52,439 --> 00:12:56,970
entire data center with this stuff and

00:12:53,910 --> 00:12:58,559
it'll do the it'll help you pass that

00:12:56,970 --> 00:13:01,949
initial hurdle of learning how to use

00:12:58,559 --> 00:13:04,680
ansible but will be able to also provide

00:13:01,949 --> 00:13:08,009
a nice simplified UI for the for

00:13:04,680 --> 00:13:09,990
beginners or for not for novices coming

00:13:08,009 --> 00:13:10,350
from another operating system who wanted

00:13:09,990 --> 00:13:13,560
to do

00:13:10,350 --> 00:13:18,420
who want to get things where I get

00:13:13,560 --> 00:13:19,560
things working in fedora server so that

00:13:18,420 --> 00:13:21,240
I think is going to be really

00:13:19,560 --> 00:13:24,030
interesting it's still it's in its very

00:13:21,240 --> 00:13:25,560
early phases and I'd love to hear I'd

00:13:24,030 --> 00:13:27,570
love for anybody here who's interested

00:13:25,560 --> 00:13:32,100
in that to join the cockpit de ville

00:13:27,570 --> 00:13:33,420
mailing list and and provide their

00:13:32,100 --> 00:13:34,920
feedback on what they would like to see

00:13:33,420 --> 00:13:38,400
from a user perspective in particular

00:13:34,920 --> 00:13:39,900
because right now there's some there's

00:13:38,400 --> 00:13:41,460
some user experience design going on

00:13:39,900 --> 00:13:46,290
they have a they have a dedicated uxd

00:13:41,460 --> 00:13:48,260
person but there's no there's a lack of

00:13:46,290 --> 00:13:50,190
subject matter expertise in terms of

00:13:48,260 --> 00:13:53,280
people who want to actually do those

00:13:50,190 --> 00:13:56,340
deployments so if you've got any ideas

00:13:53,280 --> 00:13:58,950
on how that should look or feel or just

00:13:56,340 --> 00:14:01,440
want to contribute because it's a really

00:13:58,950 --> 00:14:04,980
cool project I encourage you please join

00:14:01,440 --> 00:14:07,110
the a cockpit devel mailing list beyond

00:14:04,980 --> 00:14:09,360
that other things that we have worked on

00:14:07,110 --> 00:14:13,260
this year trying to remember I think

00:14:09,360 --> 00:14:15,120
there was something oh right boltron so

00:14:13,260 --> 00:14:16,920
the other really big thing that we have

00:14:15,120 --> 00:14:20,310
worked on in fedora server this past

00:14:16,920 --> 00:14:21,690
year was we decided given that our given

00:14:20,310 --> 00:14:23,580
that we had kind of faltered on our

00:14:21,690 --> 00:14:26,490
original roles plan we needed to find

00:14:23,580 --> 00:14:28,080
another place that we could if we could

00:14:26,490 --> 00:14:31,740
take the server that into its next

00:14:28,080 --> 00:14:35,220
stages and with modularity a initiative

00:14:31,740 --> 00:14:37,440
going on we realized that servers are

00:14:35,220 --> 00:14:41,430
one of those places where modularity

00:14:37,440 --> 00:14:44,370
feels most natural everybody wants to

00:14:41,430 --> 00:14:46,590
run there this really cool nodejs

00:14:44,370 --> 00:14:48,630
application but they really don't want

00:14:46,590 --> 00:14:49,530
anything else in the OS to change they

00:14:48,630 --> 00:14:52,890
want to make sure that they have too

00:14:49,530 --> 00:14:55,500
late they have no js' 9.7 which doesn't

00:14:52,890 --> 00:14:58,320
exist yet and they want to have you know

00:14:55,500 --> 00:15:01,290
the latest npm libraries but they really

00:14:58,320 --> 00:15:04,740
don't want they really want a firm base

00:15:01,290 --> 00:15:06,660
to run it on but then there's also the

00:15:04,740 --> 00:15:10,410
set of people that really really really

00:15:06,660 --> 00:15:11,610
want the latest httpd but they're okay

00:15:10,410 --> 00:15:12,990
running it old node.js because their

00:15:11,610 --> 00:15:14,100
application was written by a contractor

00:15:12,990 --> 00:15:15,120
they have no idea how it works and I

00:15:14,100 --> 00:15:16,350
don't want to say they don't want it to

00:15:15,120 --> 00:15:17,520
change for a couple more years until

00:15:16,350 --> 00:15:21,120
they can until they can hire a new

00:15:17,520 --> 00:15:22,250
contractor modularity allows us to

00:15:21,120 --> 00:15:24,770
address some of that

00:15:22,250 --> 00:15:26,810
too fast too slow problem by allowing

00:15:24,770 --> 00:15:29,600
people to pick you know pick a host

00:15:26,810 --> 00:15:32,320
that's fairly stable and then pull in

00:15:29,600 --> 00:15:35,570
whichever old or new versions of the

00:15:32,320 --> 00:15:38,360
frameworks they need to actually run it

00:15:35,570 --> 00:15:40,970
so we built a prototype that we called

00:15:38,360 --> 00:15:42,770
Voltron and I have to give credit where

00:15:40,970 --> 00:15:45,110
it is due I don't know if Stephen

00:15:42,770 --> 00:15:47,570
smoochin is currently in the room but

00:15:45,110 --> 00:15:50,210
that was that was his brainchild we were

00:15:47,570 --> 00:15:52,430
kind of like shedding on project names

00:15:50,210 --> 00:15:54,440
and we came up with well

00:15:52,430 --> 00:15:55,250
modularity we've got a whole bunch of

00:15:54,440 --> 00:15:56,810
parts that are come and get together

00:15:55,250 --> 00:15:58,850
into a greater whole so that's kind of

00:15:56,810 --> 00:16:00,590
like Voltron but we're also doing kind

00:15:58,850 --> 00:16:04,100
of a hacky job right now so what we'll

00:16:00,590 --> 00:16:06,470
say is it's also kind of bolted on so we

00:16:04,100 --> 00:16:08,780
came up with Ultron and it kind of stuck

00:16:06,470 --> 00:16:10,250
and I kind of hope it continues I'm

00:16:08,780 --> 00:16:15,110
thinking maybe we rename it to the

00:16:10,250 --> 00:16:17,840
Voltron sig what do you guys think okay

00:16:15,110 --> 00:16:19,210
I will I will bring that up at the next

00:16:17,840 --> 00:16:22,910
meeting

00:16:19,210 --> 00:16:25,330
so our next stage next steps there are

00:16:22,910 --> 00:16:28,370
we took we have this prototype it was

00:16:25,330 --> 00:16:30,470
functional but not shareable by any

00:16:28,370 --> 00:16:33,920
stretch of the imagination and our goal

00:16:30,470 --> 00:16:37,190
in Fedor 27 and 28 is really to have

00:16:33,920 --> 00:16:40,480
this become be put into shape such that

00:16:37,190 --> 00:16:44,770
we would retire our traditional legacy

00:16:40,480 --> 00:16:48,170
it you know one size fits nobody DVD and

00:16:44,770 --> 00:16:51,470
go fully into this Voltron inspired

00:16:48,170 --> 00:16:54,200
world there's a lot left to be done with

00:16:51,470 --> 00:16:56,780
that we need a lot of composed pieces I

00:16:54,200 --> 00:16:57,980
think we need we've discovered that

00:16:56,780 --> 00:17:00,350
there are a few bits and pieces of the

00:16:57,980 --> 00:17:02,450
modularity like the module metadata that

00:17:00,350 --> 00:17:04,130
still need to be updated to make sure

00:17:02,450 --> 00:17:06,290
that we have all the information we need

00:17:04,130 --> 00:17:08,660
to do things like set up end of life's

00:17:06,290 --> 00:17:11,319
and figure out which things are

00:17:08,660 --> 00:17:15,260
conflicting with other things but I

00:17:11,319 --> 00:17:17,780
think Fedor 28 is a very realistic date

00:17:15,260 --> 00:17:20,949
for that I think that by the time we I'm

00:17:17,780 --> 00:17:24,470
standing here at next year's flock I

00:17:20,949 --> 00:17:26,000
think we will have hopefully switched to

00:17:24,470 --> 00:17:30,890
the server over entirely into being a

00:17:26,000 --> 00:17:32,690
modular arised OS all right that is

00:17:30,890 --> 00:17:36,180
pretty much the presentation I had

00:17:32,690 --> 00:17:38,250
prepared so this is a good time for

00:17:36,180 --> 00:17:54,360
or suggestions on how we might actually

00:17:38,250 --> 00:17:58,950
accomplish these crazy ideas and go is

00:17:54,360 --> 00:18:02,670
our question there so the question I'm

00:17:58,950 --> 00:18:04,170
gonna rephrase the question so III think

00:18:02,670 --> 00:18:06,750
the real question there is how does this

00:18:04,170 --> 00:18:09,480
differ from the alternative system and

00:18:06,750 --> 00:18:15,390
the alternative system is really only

00:18:09,480 --> 00:18:17,190
designed to handle executables it's

00:18:15,390 --> 00:18:20,370
really only designed to handle it to

00:18:17,190 --> 00:18:21,900
take a couple of things that serve more

00:18:20,370 --> 00:18:23,520
or less exactly the same functions that

00:18:21,900 --> 00:18:26,640
have they say take the same inputs and

00:18:23,520 --> 00:18:29,790
produce similar outputs the modularity

00:18:26,640 --> 00:18:31,050
initiative is quite a lot more

00:18:29,790 --> 00:18:33,750
complicated than that

00:18:31,050 --> 00:18:37,190
it's meant to be able to say my

00:18:33,750 --> 00:18:40,050
application requires Python 3.6 or

00:18:37,190 --> 00:18:42,270
actually 3.6 is the standard one but my

00:18:40,050 --> 00:18:43,650
application doesn't work because they

00:18:42,270 --> 00:18:47,310
made it backwards incompatible change I

00:18:43,650 --> 00:18:49,950
must have Python 3.5 that's a much much

00:18:47,310 --> 00:18:52,050
larger spectrum of changes than just

00:18:49,950 --> 00:18:57,600
swapping out an executable like send

00:18:52,050 --> 00:18:59,730
mail format for XM or what have you is

00:18:57,600 --> 00:19:03,290
that a sufficient answer or do you have

00:18:59,730 --> 00:19:03,290
do you have a follow-up question there

00:19:21,740 --> 00:19:27,260
well that's a bad I'm gonna try to

00:19:25,279 --> 00:19:31,220
restate that and then disagree with it a

00:19:27,260 --> 00:19:34,250
little bit but right so what Steven

00:19:31,220 --> 00:19:35,899
smoochin was saying is that with

00:19:34,250 --> 00:19:37,490
alternatives if you swap an alternative

00:19:35,899 --> 00:19:40,669
the entire system sees that thing

00:19:37,490 --> 00:19:41,870
whereas with modularity only this part

00:19:40,669 --> 00:19:43,159
and portion of it would see that thing

00:19:41,870 --> 00:19:49,279
and then the rest of the system would

00:19:43,159 --> 00:19:54,320
have its default that is not true in the

00:19:49,279 --> 00:19:56,090
case of modularity that's okay what we

00:19:54,320 --> 00:19:58,429
are focusing on I mean that is an

00:19:56,090 --> 00:20:00,080
eventual goal but what we are focusing

00:19:58,429 --> 00:20:02,929
on right now is parallel availability

00:20:00,080 --> 00:20:04,190
not parallel install ability in cases of

00:20:02,929 --> 00:20:06,020
things like Python that's kind of a

00:20:04,190 --> 00:20:07,909
special case where yes you can do that

00:20:06,020 --> 00:20:10,820
but we are trying to solve the general

00:20:07,909 --> 00:20:12,350
problem first where you there are plenty

00:20:10,820 --> 00:20:16,000
of things that for which you can't

00:20:12,350 --> 00:20:16,000
actually have them coexist

00:20:17,200 --> 00:20:20,200
sorry

00:20:56,669 --> 00:20:58,730
you

00:21:02,230 --> 00:21:05,380
all right

00:21:08,669 --> 00:21:13,390
so would you bid if you're gonna go on

00:21:12,250 --> 00:21:16,890
do you mind if I just hand you the mic

00:21:13,390 --> 00:21:16,890
for so that I can get on the recording

00:21:20,580 --> 00:21:30,760
thank you

00:21:22,480 --> 00:21:34,299
so what I try to tell is an example here

00:21:30,760 --> 00:21:37,769
would be a factory that produces similar

00:21:34,299 --> 00:21:44,500
but not the same products let's say cars

00:21:37,769 --> 00:21:48,429
which Oh what all laptops yeah you you

00:21:44,500 --> 00:21:52,240
customize it according to maybe not to

00:21:48,429 --> 00:21:55,539
down to a single order but to different

00:21:52,240 --> 00:21:58,870
product lines we're still keeping the

00:21:55,539 --> 00:22:04,029
same way of assembling them on the

00:21:58,870 --> 00:22:08,769
conveyor here modules would represent a

00:22:04,029 --> 00:22:11,590
different type of components but within

00:22:08,769 --> 00:22:14,980
each similar module you would have

00:22:11,590 --> 00:22:18,039
enough differences that you would want

00:22:14,980 --> 00:22:21,190
to capture at the moment where you

00:22:18,039 --> 00:22:24,820
create this model but then the conveyor

00:22:21,190 --> 00:22:27,700
stays the same whether you take module a

00:22:24,820 --> 00:22:31,149
or module B that represents your web

00:22:27,700 --> 00:22:35,559
server regardless of what's inside as

00:22:31,149 --> 00:22:38,470
long as they consistent in expectations

00:22:35,559 --> 00:22:41,769
from other modules that would use these

00:22:38,470 --> 00:22:45,100
so in the end you would get an image for

00:22:41,769 --> 00:22:47,889
example if that's docker or if that's

00:22:45,100 --> 00:22:50,620
installer image you would get the same

00:22:47,889 --> 00:22:53,740
image we have certain things do you end

00:22:50,620 --> 00:22:57,700
up maybe that's just a question of

00:22:53,740 --> 00:23:01,960
tuning up configuration files maybe add

00:22:57,700 --> 00:23:04,539
in some steps that only activate that

00:23:01,960 --> 00:23:07,990
when you run this image first time but

00:23:04,539 --> 00:23:13,539
from the convair point of view all those

00:23:07,990 --> 00:23:15,830
modules are interchangeable yeah I think

00:23:13,539 --> 00:23:18,680
that's actually a pretty good analogy

00:23:15,830 --> 00:23:23,060
yeah but this is only a first step so

00:23:18,680 --> 00:23:27,470
effectively right now in Fedora project

00:23:23,060 --> 00:23:31,640
as a whole only Fedora infra and certain

00:23:27,470 --> 00:23:35,390
people are capable to change what on the

00:23:31,640 --> 00:23:38,270
conveyor can be built as Fedora range we

00:23:35,390 --> 00:23:42,820
have alternative images and right it's

00:23:38,270 --> 00:23:42,820
awesome so well with the modularity

00:23:43,390 --> 00:23:49,970
concept at least the goal would be that

00:23:46,580 --> 00:23:54,050
every Fedora contributor or user of

00:23:49,970 --> 00:23:57,200
Fedora contributed infrastructure would

00:23:54,050 --> 00:24:01,250
be able to build up their own can where

00:23:57,200 --> 00:24:04,540
we have enough configuration changes

00:24:01,250 --> 00:24:07,940
there that it suits for their use

00:24:04,540 --> 00:24:11,750
depending on whether this use is usable

00:24:07,940 --> 00:24:14,330
for others I mean helpful to solve

00:24:11,750 --> 00:24:16,070
others problem these modules might

00:24:14,330 --> 00:24:19,910
people might be published somewhere

00:24:16,070 --> 00:24:24,110
right but it also gives you ability to

00:24:19,910 --> 00:24:28,310
have people projects or companies doing

00:24:24,110 --> 00:24:33,020
enough tuning in their own versions of

00:24:28,310 --> 00:24:35,450
those modules yet not spreading out to

00:24:33,020 --> 00:24:37,400
work on the actual infrastructure that

00:24:35,450 --> 00:24:39,560
combines these modules together right

00:24:37,400 --> 00:24:43,610
another point to make it to bring up

00:24:39,560 --> 00:24:44,930
that's related is that what will what

00:24:43,610 --> 00:24:46,850
will probably happen is we'll probably

00:24:44,930 --> 00:24:48,800
have a module or a small set of modules

00:24:46,850 --> 00:24:50,570
that will effectively be the platform

00:24:48,800 --> 00:24:52,430
that we still release on of you know

00:24:50,570 --> 00:24:55,520
every six months to type of cycle and

00:24:52,430 --> 00:24:59,030
then individually then the modules that

00:24:55,520 --> 00:25:00,740
go on top that will likely be it will

00:24:59,030 --> 00:25:03,260
have arbitrary versioning so we'll have

00:25:00,740 --> 00:25:05,210
things like here's the node js8 stream

00:25:03,260 --> 00:25:06,950
and here's the Python 3/6 stream and

00:25:05,210 --> 00:25:09,200
within these streams you will get all

00:25:06,950 --> 00:25:11,630
all updates that are available in those

00:25:09,200 --> 00:25:13,010
streams but you won't ever you know you

00:25:11,630 --> 00:25:14,840
won't have the classic Fedora problem of

00:25:13,010 --> 00:25:16,490
okay I go to Fedora 28 and all of a

00:25:14,840 --> 00:25:18,470
sudden I have Python 3 7 and half of my

00:25:16,490 --> 00:25:19,970
stuff doesn't work anymore

00:25:18,470 --> 00:25:21,530
you'll be able to stay on that until its

00:25:19,970 --> 00:25:24,020
own until it's a previously stated

00:25:21,530 --> 00:25:25,970
end-of-life which is up to the packager

00:25:24,020 --> 00:25:27,950
to say up front I'm gonna I'm I'm

00:25:25,970 --> 00:25:29,179
willing to maintain this for two years

00:25:27,950 --> 00:25:33,739
or three years

00:25:29,179 --> 00:25:35,119
rather than six months or 13 months in

00:25:33,739 --> 00:25:40,039
you know rather than 13 months in the

00:25:35,119 --> 00:25:42,529
Fedora schedule so Italy is so yeah

00:25:40,039 --> 00:25:44,719
you'll be able to we'll be able to

00:25:42,529 --> 00:25:46,279
construct systems that you can swap out

00:25:44,719 --> 00:25:48,440
things like the base to get the newer

00:25:46,279 --> 00:25:49,999
kernels and what that and whatnot but

00:25:48,440 --> 00:25:52,849
your but your software stack that a

00:25:49,999 --> 00:26:05,539
complete comprises your application that

00:25:52,849 --> 00:26:07,179
you care about will remain stable and I

00:26:05,539 --> 00:26:10,309
just wanted to add one more point that

00:26:07,179 --> 00:26:11,749
it is very similar to alternatives it's

00:26:10,309 --> 00:26:13,549
also very similar to groups it's also

00:26:11,749 --> 00:26:17,839
very similar to meta packages so so very

00:26:13,549 --> 00:26:20,479
similar to like Python and similar to

00:26:17,839 --> 00:26:23,149
software collections basically the a lot

00:26:20,479 --> 00:26:26,330
of the point of modularity is also to

00:26:23,149 --> 00:26:29,299
make the concept of first-class citizen

00:26:26,330 --> 00:26:30,710
of the US so instead of alternatives

00:26:29,299 --> 00:26:32,749
which is kind of like an add-on and it

00:26:30,710 --> 00:26:35,450
solves one part of the use case problem

00:26:32,749 --> 00:26:37,039
it solves one symptom right and software

00:26:35,450 --> 00:26:39,649
collections which solves a different set

00:26:37,039 --> 00:26:42,019
of symptoms the idea was that

00:26:39,649 --> 00:26:43,519
all right let's step back a bit and stop

00:26:42,019 --> 00:26:45,529
trying to solve all the symptoms and

00:26:43,519 --> 00:26:49,009
instead say let's try to solve the

00:26:45,529 --> 00:26:51,109
problem and then you know and then it

00:26:49,009 --> 00:26:52,909
enables things like you described it

00:26:51,109 --> 00:26:54,499
enables potentially parallel install

00:26:52,909 --> 00:26:56,330
ability down the road or enables

00:26:54,499 --> 00:26:59,089
parallel availability or it enables

00:26:56,330 --> 00:27:01,070
containers but the idea is it's not it's

00:26:59,089 --> 00:27:03,139
not meant to be kind of the solution in

00:27:01,070 --> 00:27:05,599
and of itself as much as to say what's

00:27:03,139 --> 00:27:07,190
gonna fix the actual problem which are

00:27:05,599 --> 00:27:11,950
causing all these symptoms which are

00:27:07,190 --> 00:27:15,799
then in turn being fixed okay all right

00:27:11,950 --> 00:27:17,539
so we are actually at time and I don't

00:27:15,799 --> 00:27:21,379
want to I don't want to take up the next

00:27:17,539 --> 00:27:24,830
time slots available time so thank you

00:27:21,379 --> 00:27:25,759
everyone for participating I'll be at

00:27:24,830 --> 00:27:28,629
the back of the room for anybody who

00:27:25,759 --> 00:27:31,710
wants to continue this discussion but

00:27:28,629 --> 00:27:36,609
unfortunately I do have to stop

00:27:31,710 --> 00:27:36,609

YouTube URL: https://www.youtube.com/watch?v=wG6O2Uez5Eg


