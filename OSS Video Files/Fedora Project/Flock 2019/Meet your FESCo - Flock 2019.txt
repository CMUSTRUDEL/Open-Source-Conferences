Title: Meet your FESCo - Flock 2019
Publication date: 2019-08-28
Playlist: Flock 2019
Description: 
	Stephen Gallagher, Petr Šabata, Kevin Fenzi, Zbigniew Jędrzejewski-Szmek, Justin Forbes, Igor Gnatenko

An informal panel discussion with members of the Fedora Engineering Steering Committee, our community-elected technical oversight body. Put faces to email addresses and IRC nicks, and ask anything you want.

--
Recordings of talks at Flock are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:01,319 --> 00:00:06,450
I'm Matthew I hope you know baby by now

00:00:04,050 --> 00:00:07,590
if you don't come introduce yourself to

00:00:06,450 --> 00:00:10,290
me later

00:00:07,590 --> 00:00:12,270
this is vesco Fedora engineering

00:00:10,290 --> 00:00:14,010
steering committee one of our you know

00:00:12,270 --> 00:00:17,910
the technical leadership body in Fedora

00:00:14,010 --> 00:00:20,460
and all elected panel and we have most

00:00:17,910 --> 00:00:22,650
of the people here I'm not on this panel

00:00:20,460 --> 00:00:25,020
but I thought I'd you know introduce the

00:00:22,650 --> 00:00:26,430
general idea and I will run around with

00:00:25,020 --> 00:00:28,410
the microphone if you have questions

00:00:26,430 --> 00:00:30,290
because we're recording this and I'm

00:00:28,410 --> 00:00:32,449
sitting in that chair right there

00:00:30,290 --> 00:00:37,489
[Laughter]

00:00:32,449 --> 00:00:37,489
alright and with that here's Vesco

00:00:43,159 --> 00:00:48,510
should we do an introduction round do

00:00:45,839 --> 00:00:57,719
you want to know who actually those

00:00:48,510 --> 00:01:00,389
people so I'm Alexandra forever I'm book

00:00:57,719 --> 00:01:02,579
war on IRC I'm book war everywhere

00:01:00,389 --> 00:01:04,680
almost everywhere not on Twitter so it's

00:01:02,579 --> 00:01:08,430
not me who spamming Twitter from book

00:01:04,680 --> 00:01:09,090
wire account and yeah Federal Way is my

00:01:08,430 --> 00:01:14,640
real name

00:01:09,090 --> 00:01:17,310
so if you're just wondering i'm peter

00:01:14,640 --> 00:01:19,140
schibetta continue on IRC been doing

00:01:17,310 --> 00:01:21,120
this for a while you might know me I'm

00:01:19,140 --> 00:01:24,290
also responsible for modularity in a way

00:01:21,120 --> 00:01:24,290
so you can hate me

00:01:24,930 --> 00:01:30,210
I'm Kevin Finzi and I've been on fresco

00:01:27,990 --> 00:01:32,370
I think since it started so I've been

00:01:30,210 --> 00:01:37,410
around a long time and I'm not really

00:01:32,370 --> 00:01:39,060
sure what I do so so I'm eager it's

00:01:37,410 --> 00:01:41,640
probably me who was touching your

00:01:39,060 --> 00:01:44,550
packages and you don't like me because

00:01:41,640 --> 00:01:46,380
I'm doing that over and over I'm trying

00:01:44,550 --> 00:01:49,590
to do crazy things with modularity and

00:01:46,380 --> 00:01:54,770
whatnot so but I would love to talk to

00:01:49,590 --> 00:01:59,479
you I'm specific I work on system D and

00:01:54,770 --> 00:01:59,479
also sometimes touch many packages

00:01:59,659 --> 00:02:08,420
justin forbes fedora colonel maintainer

00:02:02,340 --> 00:02:08,420
and been around for a bit i suppose

00:02:10,009 --> 00:02:13,980
anybody in the panel what tell like say

00:02:12,389 --> 00:02:14,250
something or make a statement or should

00:02:13,980 --> 00:02:18,330
we go

00:02:14,250 --> 00:02:20,220
right two questions right - that's

00:02:18,330 --> 00:02:22,770
alright that that's what I figured all

00:02:20,220 --> 00:02:26,760
right does anybody have a question for

00:02:22,770 --> 00:02:42,600
Fusco wait

00:02:26,760 --> 00:02:44,910
I let me why do we do mass rebuilds to

00:02:42,600 --> 00:02:50,130
take advantage of new compiler features

00:02:44,910 --> 00:02:53,250
etc changes in rpm itself for payload

00:02:50,130 --> 00:02:56,100
and such not and to also see that things

00:02:53,250 --> 00:02:58,350
still build correctly because the best

00:02:56,100 --> 00:03:01,110
time to figure that out is at the mass

00:02:58,350 --> 00:03:03,360
rebuild time and not five minutes after

00:03:01,110 --> 00:03:04,520
the big exploit for your package was

00:03:03,360 --> 00:03:08,670
released

00:03:04,520 --> 00:03:11,880
actually we've ci engaging employees we

00:03:08,670 --> 00:03:14,280
have plans to add very build check for

00:03:11,880 --> 00:03:17,700
every change you do so it shouldn't

00:03:14,280 --> 00:03:20,820
happen like a mass revealed event just

00:03:17,700 --> 00:03:23,190
once in the release cycle but there is a

00:03:20,820 --> 00:03:25,440
very controversial topic I think at

00:03:23,190 --> 00:03:28,110
least I think it's controversial like if

00:03:25,440 --> 00:03:30,060
we need to check with packages are

00:03:28,110 --> 00:03:32,519
possible it is possible to rebuild

00:03:30,060 --> 00:03:34,680
packages after we change what should we

00:03:32,519 --> 00:03:36,810
actually do the rebuild and update

00:03:34,680 --> 00:03:40,739
packages which were depending on this

00:03:36,810 --> 00:03:42,930
one so I expect there will be heated

00:03:40,739 --> 00:03:47,930
conversation about race on Fedora

00:03:42,930 --> 00:03:47,930
develop memories so get ready to

00:03:54,400 --> 00:04:02,959
medic Suki speaking what's blocking

00:03:58,629 --> 00:04:06,799
federal as Windows Linux subsystem why

00:04:02,959 --> 00:04:11,120
we don't have fedora there that was a

00:04:06,799 --> 00:04:13,670
question for me this why why don't we

00:04:11,120 --> 00:04:16,039
have windows subsystem for Linux this is

00:04:13,670 --> 00:04:18,350
not a technical problem this is a legal

00:04:16,039 --> 00:04:20,810
agreement problem and it actually works

00:04:18,350 --> 00:04:23,630
fine the problem is getting it into the

00:04:20,810 --> 00:04:26,690
Microsoft App Store and this is a model

00:04:23,630 --> 00:04:28,699
we're not prepared for basically the

00:04:26,690 --> 00:04:30,710
Fedora model is we made some open source

00:04:28,699 --> 00:04:33,050
it's available in open source license

00:04:30,710 --> 00:04:34,760
come and get it there are things you can

00:04:33,050 --> 00:04:35,810
do with the license or things you can do

00:04:34,760 --> 00:04:37,250
with the trademark that we give you

00:04:35,810 --> 00:04:39,289
permission for are things you can ask

00:04:37,250 --> 00:04:42,139
for in order to get into the Windows

00:04:39,289 --> 00:04:45,560
Store there is an app agreement you sign

00:04:42,139 --> 00:04:47,479
with Microsoft and there are causes in

00:04:45,560 --> 00:04:49,550
that which we as an open source

00:04:47,479 --> 00:04:52,430
community and Red Hat as the company

00:04:49,550 --> 00:04:55,580
ultimately responsible for those that

00:04:52,430 --> 00:04:58,220
signing just couldn't agree to you so

00:04:55,580 --> 00:05:00,349
we're kind of stuck at that I would love

00:04:58,220 --> 00:05:02,150
for Microsoft to come and say hey we're

00:05:00,349 --> 00:05:04,010
part of the open source world we can

00:05:02,150 --> 00:05:06,919
just work in an open source way without

00:05:04,010 --> 00:05:09,949
having company company legal agreements

00:05:06,919 --> 00:05:13,789
blocking everything but we're not ready

00:05:09,949 --> 00:05:16,310
to do that yet I guess that's the it's

00:05:13,789 --> 00:05:19,419
stuck until we find some way around that

00:05:16,310 --> 00:05:21,380
particular legal problem basically

00:05:19,419 --> 00:05:23,780
possibly possibly forever

00:05:21,380 --> 00:05:25,520
I mean people there are new people at

00:05:23,780 --> 00:05:27,349
Microsoft and new ways of thinking of

00:05:25,520 --> 00:05:29,449
things at Microsoft that might change

00:05:27,349 --> 00:05:31,580
this because really right now if they

00:05:29,449 --> 00:05:35,720
wanted to Microsoft could take fedora

00:05:31,580 --> 00:05:38,180
put it in wsl use the Fedora logo and

00:05:35,720 --> 00:05:39,560
say here's fedora for wsl they just

00:05:38,180 --> 00:05:44,349
don't want to do that they want us to

00:05:39,560 --> 00:05:44,349
take on the risk and liability of that

00:05:46,449 --> 00:05:50,210
Yeah right

00:05:47,960 --> 00:05:52,310
Langdon says that it is mind-blowing

00:05:50,210 --> 00:05:55,729
that anyone has agreed to this but

00:05:52,310 --> 00:05:59,169
that's not something we can do anything

00:05:55,729 --> 00:06:06,099
about right

00:05:59,169 --> 00:06:06,099
vesko topics yeah

00:06:08,500 --> 00:06:14,389
general question for everyone what do

00:06:10,849 --> 00:06:16,009
you think the health of Fisk o as an

00:06:14,389 --> 00:06:18,530
organizational body is in terms of

00:06:16,009 --> 00:06:21,680
things like getting new members on

00:06:18,530 --> 00:06:24,259
productivity things like that do you see

00:06:21,680 --> 00:06:26,629
it as being generally healthy and or

00:06:24,259 --> 00:06:39,620
anything you need to improve or what's

00:06:26,629 --> 00:06:43,759
the general mood so we made some process

00:06:39,620 --> 00:06:45,680
improvements some last year they were

00:06:43,759 --> 00:06:51,400
also changed to approve more tickets

00:06:45,680 --> 00:06:53,659
offline and this year we changed the

00:06:51,400 --> 00:06:55,279
non-responsive maintain a process to

00:06:53,659 --> 00:06:57,080
actually put more work on fiscal but

00:06:55,279 --> 00:07:00,229
less work on people who report

00:06:57,080 --> 00:07:03,800
non-responsive maintain errs and I think

00:07:00,229 --> 00:07:06,949
that generally our voting speed and

00:07:03,800 --> 00:07:08,750
processing speed is good enough first

00:07:06,949 --> 00:07:11,419
girls should not in my opinion should

00:07:08,750 --> 00:07:15,589
not be a body that sets the policy and

00:07:11,419 --> 00:07:18,080
decides it should be that the community

00:07:15,589 --> 00:07:20,569
comes up with stuff and Fusco basically

00:07:18,080 --> 00:07:24,349
rubber-stamps things that have been

00:07:20,569 --> 00:07:26,690
discussed as to such an extent that it

00:07:24,349 --> 00:07:28,699
is technically clear what the right

00:07:26,690 --> 00:07:31,909
choice is I mean if there were multiple

00:07:28,699 --> 00:07:34,789
fiscal votes where we would have five to

00:07:31,909 --> 00:07:37,400
four votes this would be a sign of stuff

00:07:34,789 --> 00:07:39,860
being decided at the wrong level because

00:07:37,400 --> 00:07:43,099
fiscal members don't have enough

00:07:39,860 --> 00:07:46,279
technical knowledge to to to decide

00:07:43,099 --> 00:07:49,580
specific technical matters it's in my

00:07:46,279 --> 00:07:52,729
opinion Tesco should work as a mmm well

00:07:49,580 --> 00:07:54,440
as a mechanism to have public discussion

00:07:52,729 --> 00:07:56,719
and public approval of changes that will

00:07:54,440 --> 00:07:57,590
happen and I think we are doing okay in

00:07:56,719 --> 00:08:03,710
this regard

00:07:57,590 --> 00:08:05,120
I think that's true but also sometimes

00:08:03,710 --> 00:08:07,190
first go actually decides on the

00:08:05,120 --> 00:08:08,660
policies and that they defines the

00:08:07,190 --> 00:08:12,380
direction of the distribution on the

00:08:08,660 --> 00:08:15,680
technical level and those tickets they

00:08:12,380 --> 00:08:17,210
are open for years sometimes and they

00:08:15,680 --> 00:08:19,310
are not really moving anywhere I think

00:08:17,210 --> 00:08:21,350
we need actually to to figure out how to

00:08:19,310 --> 00:08:23,530
how to deal with those and I don't

00:08:21,350 --> 00:08:26,060
really have an answer to that though

00:08:23,530 --> 00:08:28,220
generally yes I would say if escrow is

00:08:26,060 --> 00:08:31,760
all three but it still there's space for

00:08:28,220 --> 00:08:33,529
improvement from my perspective like I

00:08:31,760 --> 00:08:36,409
mean you be member that's cool and

00:08:33,529 --> 00:08:38,770
physically so it comes to change process

00:08:36,409 --> 00:08:40,640
and non-responsive material process

00:08:38,770 --> 00:08:42,979
essentially there are two things which

00:08:40,640 --> 00:08:45,830
first quiz deal in most of a time for

00:08:42,979 --> 00:08:48,050
change process it feels like really when

00:08:45,830 --> 00:08:50,450
there is a help from community when

00:08:48,050 --> 00:08:52,820
community has a proper discussion of

00:08:50,450 --> 00:08:55,040
topics on Fedora development list then

00:08:52,820 --> 00:08:58,130
it makes the life of escrow so much

00:08:55,040 --> 00:09:00,470
easier you just go fetch free data

00:08:58,130 --> 00:09:03,470
community provides the feedback we have

00:09:00,470 --> 00:09:05,589
and you can actually make a decision on

00:09:03,470 --> 00:09:07,850
that so we think we are stuck with

00:09:05,589 --> 00:09:10,040
usually things which are not discussed

00:09:07,850 --> 00:09:13,250
enough on the community level and this

00:09:10,040 --> 00:09:16,010
is like really becomes painful because

00:09:13,250 --> 00:09:17,960
then it's fast core needs to figure out

00:09:16,010 --> 00:09:20,990
like how to even discuss those things

00:09:17,960 --> 00:09:22,760
and how to think about them so the more

00:09:20,990 --> 00:09:25,250
we have a feedback from a community on

00:09:22,760 --> 00:09:27,980
some changes the easier life of a

00:09:25,250 --> 00:09:29,930
squeeze and usually varies quite a quite

00:09:27,980 --> 00:09:32,960
good feedback before we even start

00:09:29,930 --> 00:09:34,850
voting on on something and based on this

00:09:32,960 --> 00:09:37,030
feedback of the life of escrow is quite

00:09:34,850 --> 00:09:37,030
easy

00:09:43,550 --> 00:09:48,779
hi my question is that when there is a

00:09:46,860 --> 00:09:51,209
policy change which is approved by

00:09:48,779 --> 00:09:53,760
fresco or when there's a new policy

00:09:51,209 --> 00:09:56,070
which is approved by fresco would it be

00:09:53,760 --> 00:09:58,410
fiscal responsibility to ensure that

00:09:56,070 --> 00:10:00,870
whoever is actually responsible for

00:09:58,410 --> 00:10:08,130
implementing the policy does actually

00:10:00,870 --> 00:10:10,950
implement it yes and no not really

00:10:08,130 --> 00:10:12,269
the what it comes down to is when you

00:10:10,950 --> 00:10:15,149
ask for a change you've approved a

00:10:12,269 --> 00:10:18,450
change we can approve that direction but

00:10:15,149 --> 00:10:21,720
you you can't force people to do work

00:10:18,450 --> 00:10:24,260
this is a community project this is you

00:10:21,720 --> 00:10:26,190
know if ESCO doesn't have a budget

00:10:24,260 --> 00:10:29,640
occasionally if we have something that

00:10:26,190 --> 00:10:33,240
that we can justify we might be able to

00:10:29,640 --> 00:10:35,519
get budget through a team that way but

00:10:33,240 --> 00:10:37,200
for a lot of things you know if you come

00:10:35,519 --> 00:10:39,209
up with a plan that you want to change

00:10:37,200 --> 00:10:40,829
you also need to get the people behind

00:10:39,209 --> 00:10:41,550
it who would actually implement that

00:10:40,829 --> 00:10:45,390
change

00:10:41,550 --> 00:10:47,010
we can ask nicely and a lot of times

00:10:45,390 --> 00:10:49,850
someone will step up and do that but we

00:10:47,010 --> 00:10:49,850
can't force it

00:11:06,010 --> 00:11:09,370
I know you laugh is there any question

00:11:07,990 --> 00:11:17,590
but what is the question you wish

00:11:09,370 --> 00:11:21,100
somebody would ask you I have actually

00:11:17,590 --> 00:11:24,550
topic which I wanted to discuss so the

00:11:21,100 --> 00:11:28,840
question is why do we need a change

00:11:24,550 --> 00:11:32,890
process and why do we have it and one of

00:11:28,840 --> 00:11:34,540
the concerns I have like sometimes I see

00:11:32,890 --> 00:11:37,390
the change coming when it says like

00:11:34,540 --> 00:11:40,450
let's update this package to a new

00:11:37,390 --> 00:11:43,860
version and then this change goes too

00:11:40,450 --> 00:11:47,140
fast and like honestly there is no

00:11:43,860 --> 00:11:49,630
reason for me as a fast way to say no to

00:11:47,140 --> 00:11:52,420
update in a package in fedora it's like

00:11:49,630 --> 00:11:56,860
this is what we do we take packages we

00:11:52,420 --> 00:11:59,290
update them so in this sense this app

00:11:56,860 --> 00:12:01,980
change approval process looks redundant

00:11:59,290 --> 00:12:04,600
but I think that it's just because it's

00:12:01,980 --> 00:12:07,180
approval of a change is only one small

00:12:04,600 --> 00:12:09,640
aspect of what change is supposed to be

00:12:07,180 --> 00:12:12,730
and so I think we are not doing a good

00:12:09,640 --> 00:12:14,740
job in making sense out of this change

00:12:12,730 --> 00:12:18,460
description and after this change

00:12:14,740 --> 00:12:20,560
process so what what is important even

00:12:18,460 --> 00:12:22,660
when you file a change is not that fast

00:12:20,560 --> 00:12:24,610
go prosit what's important it if it

00:12:22,660 --> 00:12:27,520
everyone knows what you're going to do

00:12:24,610 --> 00:12:30,610
you have a place to communicate this you

00:12:27,520 --> 00:12:32,530
have a place to explain the impact of

00:12:30,610 --> 00:12:34,870
this change you have a place for people

00:12:32,530 --> 00:12:36,910
to provide the feedback so it shouldn't

00:12:34,870 --> 00:12:38,620
be like oh I got the fescue approval I'm

00:12:36,910 --> 00:12:41,170
done with this change bureaucracy and

00:12:38,620 --> 00:12:43,600
I'm just going to do to keep working on

00:12:41,170 --> 00:12:46,300
myself so I really would like to ask

00:12:43,600 --> 00:12:48,190
people who work on changes in fedora to

00:12:46,300 --> 00:12:50,890
understand that change is not so fast

00:12:48,190 --> 00:12:54,220
code change is for you and for people

00:12:50,890 --> 00:12:56,650
who work with you and it's important to

00:12:54,220 --> 00:12:58,240
write down even like we know that the

00:12:56,650 --> 00:13:00,670
change will be approved because it's an

00:12:58,240 --> 00:13:03,850
update to upstream version like no no no

00:13:00,670 --> 00:13:06,700
problem with that but please still add

00:13:03,850 --> 00:13:09,310
the required information add the impact

00:13:06,700 --> 00:13:11,230
at the an on impact because all of these

00:13:09,310 --> 00:13:13,870
things are important for current change

00:13:11,230 --> 00:13:16,780
but we also important as a historical

00:13:13,870 --> 00:13:18,070
document and like three years later you

00:13:16,780 --> 00:13:20,530
can go back to this chain

00:13:18,070 --> 00:13:23,920
like we probably updated once with

00:13:20,530 --> 00:13:26,590
library before and then we had those

00:13:23,920 --> 00:13:28,120
impacts and so we cannot we keep this

00:13:26,590 --> 00:13:30,370
information when we reuse waste

00:13:28,120 --> 00:13:32,770
information so it's important also like

00:13:30,370 --> 00:13:35,500
once you find once you're done with

00:13:32,770 --> 00:13:36,880
change you record what you forgot while

00:13:35,500 --> 00:13:39,970
you were filing this change in the

00:13:36,880 --> 00:13:43,180
beginning so like changes the ultimate

00:13:39,970 --> 00:13:45,760
project organization tool it's not just

00:13:43,180 --> 00:13:48,250
something fast go ask you to do so fast

00:13:45,760 --> 00:13:51,550
go can say yes or no with one of the

00:13:48,250 --> 00:13:55,720
things I really like to communicate your

00:13:51,550 --> 00:13:57,910
wider audience in Fedora have you talked

00:13:55,720 --> 00:14:00,460
to Ben cotton were you at his talk about

00:13:57,910 --> 00:14:01,780
this I was just going to say often the

00:14:00,460 --> 00:14:03,640
changes are also a source of

00:14:01,780 --> 00:14:06,960
documentation or inspiration for other

00:14:03,640 --> 00:14:06,960
distributions to do things

00:14:23,190 --> 00:14:27,120
thank you first then Mike

00:14:31,220 --> 00:14:36,290
so I'd like to piggyback on the change

00:14:33,460 --> 00:14:38,930
question and I'd like to have a physical

00:14:36,290 --> 00:14:42,350
opinion about this a lot of the change

00:14:38,930 --> 00:14:46,340
proposals are actually regarding is very

00:14:42,350 --> 00:14:48,170
specific federal version so we want this

00:14:46,340 --> 00:14:50,270
change to land in ferocity one ferocity

00:14:48,170 --> 00:14:52,220
two and so on and something we've been

00:14:50,270 --> 00:14:55,190
doing with the right getting initiative

00:14:52,220 --> 00:14:57,050
is so so provide change proposal to

00:14:55,190 --> 00:14:59,090
fiscal and the wider community as well

00:14:57,050 --> 00:15:00,770
about changes that are not directly

00:14:59,090 --> 00:15:02,660
linked to a certain distribution but

00:15:00,770 --> 00:15:04,310
changes that happening in the world with

00:15:02,660 --> 00:15:07,670
do things in the community in general

00:15:04,310 --> 00:15:09,650
and I was wondering what fixico is is on

00:15:07,670 --> 00:15:11,450
this I actually think this is a good

00:15:09,650 --> 00:15:13,490
idea and we should build more on that

00:15:11,450 --> 00:15:18,620
but I don't know if I'm not seeking this

00:15:13,490 --> 00:15:20,870
or a term of people agreeing on that so

00:15:18,620 --> 00:15:23,230
that probably wouldn't be a fiscal thing

00:15:20,870 --> 00:15:26,000
that would be more like a council matter

00:15:23,230 --> 00:15:27,890
it might be somehow part of the of the

00:15:26,000 --> 00:15:29,990
change process that that Ben was talking

00:15:27,890 --> 00:15:33,590
about unfortunately he's not here but I

00:15:29,990 --> 00:15:35,210
think fiscal really is about driving the

00:15:33,590 --> 00:15:36,770
technical changes for specifically

00:15:35,210 --> 00:15:37,760
really is what you're talking about is a

00:15:36,770 --> 00:15:41,480
little bit different

00:15:37,760 --> 00:15:43,730
I agree disagree on that the the change

00:15:41,480 --> 00:15:45,260
proposal was much about - technically

00:15:43,730 --> 00:15:47,720
implement an objective that was already

00:15:45,260 --> 00:15:49,850
approved by council as something that is

00:15:47,720 --> 00:15:52,730
important for federal so it's not about

00:15:49,850 --> 00:15:55,070
do we want to do that or not but is this

00:15:52,730 --> 00:15:57,110
solution something that visco agrees

00:15:55,070 --> 00:15:59,030
with so it was much more under how to

00:15:57,110 --> 00:16:04,460
implement it rather than if we should

00:15:59,030 --> 00:16:06,890
implement it so there was discussion not

00:16:04,460 --> 00:16:08,900
too long ago about about trying to

00:16:06,890 --> 00:16:10,220
extend a release cycle so we could do

00:16:08,900 --> 00:16:11,390
some longer-term things and one of the

00:16:10,220 --> 00:16:13,940
things that came out of that discussion

00:16:11,390 --> 00:16:18,230
was you know it's okay to have things

00:16:13,940 --> 00:16:20,360
that we have goals that are not the next

00:16:18,230 --> 00:16:22,480
six months that are gonna be a year or

00:16:20,360 --> 00:16:25,430
two years to implement and go through

00:16:22,480 --> 00:16:29,150
the way that the change process is kind

00:16:25,430 --> 00:16:31,580
of written I think or implemented seems

00:16:29,150 --> 00:16:34,520
poorly suited to that but I don't

00:16:31,580 --> 00:16:36,500
believe that you have to think exactly

00:16:34,520 --> 00:16:39,200
within those lines I think it's it's

00:16:36,500 --> 00:16:41,510
pretty easy to say we want to do a

00:16:39,200 --> 00:16:44,130
change and you could say I want to do it

00:16:41,510 --> 00:16:47,130
I change for Fedora 32

00:16:44,130 --> 00:16:49,410
that is the start of this implementation

00:16:47,130 --> 00:16:52,589
and then you know we expect to be

00:16:49,410 --> 00:16:54,800
finished by Fedora 33 or 34 and as long

00:16:52,589 --> 00:16:57,000
as you've got a plan and laid that out I

00:16:54,800 --> 00:17:00,440
believed it that would work within the

00:16:57,000 --> 00:17:04,800
change process bounds fairly well

00:17:00,440 --> 00:17:06,380
probably the change is not the top level

00:17:04,800 --> 00:17:08,880
of hierarchy when you think about

00:17:06,380 --> 00:17:11,790
general Fedora development so you can

00:17:08,880 --> 00:17:14,550
have something on a higher level which

00:17:11,790 --> 00:17:16,920
then splits into multiple changes over

00:17:14,550 --> 00:17:19,050
several releases you don't have to try

00:17:16,920 --> 00:17:21,390
to fit in everything in in the one

00:17:19,050 --> 00:17:24,360
release and one change its it's okay to

00:17:21,390 --> 00:17:26,100
have initiatives which span several of

00:17:24,360 --> 00:17:29,610
those yes so a good example is the

00:17:26,100 --> 00:17:32,210
Python 3 rollover which is which has

00:17:29,610 --> 00:17:34,860
been going on and will be going on for a

00:17:32,210 --> 00:17:38,850
few more releases and it's split into

00:17:34,860 --> 00:17:41,330
multiple changes and I don't see this as

00:17:38,850 --> 00:17:41,330
a problem

00:17:46,550 --> 00:17:51,230
I guess we don't have a fixed words for

00:17:48,890 --> 00:17:54,620
this we're like we have objectives but

00:17:51,230 --> 00:17:57,040
but not not like so something which

00:17:54,620 --> 00:18:08,860
spends multiple changes but but anyway

00:17:57,040 --> 00:18:10,610
it were it exists yeah yeah hello oh my

00:18:08,860 --> 00:18:12,110
so

00:18:10,610 --> 00:18:13,730
Fedora's always been a really great

00:18:12,110 --> 00:18:15,320
place to put somewhat disruptive changes

00:18:13,730 --> 00:18:18,110
through so you'd mentioned Python 3 a

00:18:15,320 --> 00:18:19,430
little bit ago there's lots of stuff

00:18:18,110 --> 00:18:21,260
that come on the horizon and we kind of

00:18:19,430 --> 00:18:25,670
have this side boat in the couple repos

00:18:21,260 --> 00:18:28,100
to do sort of we'll call it oddball

00:18:25,670 --> 00:18:30,080
Fodor stuff but it still feels like

00:18:28,100 --> 00:18:31,850
there's not really a strong engine to

00:18:30,080 --> 00:18:33,110
test changes before they go in so like

00:18:31,850 --> 00:18:35,330
if somebody here said hey we should

00:18:33,110 --> 00:18:36,320
start doing a freebsd kernel like we

00:18:35,330 --> 00:18:38,000
don't really have a way to do that

00:18:36,320 --> 00:18:40,400
without forcing people and rawhide on a

00:18:38,000 --> 00:18:42,350
freebsd kernel for a while right so is

00:18:40,400 --> 00:18:47,090
there any plans or discussions or

00:18:42,350 --> 00:18:49,130
anything else about ways to do very

00:18:47,090 --> 00:18:52,250
disruptive operating system-level

00:18:49,130 --> 00:18:53,870
changes that are not official fedora

00:18:52,250 --> 00:18:55,400
because we kind of did this with core OS

00:18:53,870 --> 00:18:55,970
an atomic like it's a very different

00:18:55,400 --> 00:18:58,250
kind of thing

00:18:55,970 --> 00:19:01,310
but it was also very artisanal and

00:18:58,250 --> 00:19:07,250
white-gloved the way we did it is there

00:19:01,310 --> 00:19:08,750
some way to make coop repos more Machane

00:19:07,250 --> 00:19:11,090
if we were test major changes without

00:19:08,750 --> 00:19:13,730
forcing them into rawhide you know like

00:19:11,090 --> 00:19:16,640
like the future of selinux or something

00:19:13,730 --> 00:19:20,870
like that is there a way to do that so I

00:19:16,640 --> 00:19:23,630
think that we cannot expect the core

00:19:20,870 --> 00:19:27,350
fedora infrastructure to be the place to

00:19:23,630 --> 00:19:31,310
implement those changes I expected stuff

00:19:27,350 --> 00:19:33,800
like this is done in a separate system

00:19:31,310 --> 00:19:36,500
set up by one person or a group of

00:19:33,800 --> 00:19:38,510
people for a specific purpose like for

00:19:36,500 --> 00:19:41,660
example we spied on 3/8 now there is a

00:19:38,510 --> 00:19:43,430
corporate that has two thousand packages

00:19:41,660 --> 00:19:47,360
revealed with a different version of

00:19:43,430 --> 00:19:51,470
Python and this is this is possible

00:19:47,360 --> 00:19:53,810
because all stuff in Fedora is open

00:19:51,470 --> 00:19:56,600
source stuff that you can modify

00:19:53,810 --> 00:19:59,360
yourself as you as you see fit and as

00:19:56,600 --> 00:19:59,760
long as we keep this possible and not

00:19:59,360 --> 00:20:03,030
too

00:19:59,760 --> 00:20:05,760
and I think this is the way to go I mean

00:20:03,030 --> 00:20:07,020
I I have my own server on which I'll

00:20:05,760 --> 00:20:08,610
sometimes compile a few thousand

00:20:07,020 --> 00:20:13,080
packages if I want to test different

00:20:08,610 --> 00:20:17,180
things and it's not a big issue there

00:20:13,080 --> 00:20:20,700
were discussions about modularity and

00:20:17,180 --> 00:20:22,650
proposals to have modules set up in a

00:20:20,700 --> 00:20:25,560
way that would be really hard to do

00:20:22,650 --> 00:20:27,900
stuff on your own and it will actually

00:20:25,560 --> 00:20:29,580
interfere pretty strongly with this kind

00:20:27,900 --> 00:20:31,830
of approach because you wouldn't be able

00:20:29,580 --> 00:20:35,040
to do stuff outside of the core

00:20:31,830 --> 00:20:37,650
infrastructure so I think that as long

00:20:35,040 --> 00:20:47,370
as we avoid stuff like this we should be

00:20:37,650 --> 00:20:51,200
good question was if you avoid stuff

00:20:47,370 --> 00:20:54,540
like that how do you evolve distro well

00:20:51,200 --> 00:20:59,250
so let's say that I want to to us to

00:20:54,540 --> 00:21:01,410
switch to a freebsd kernel i gather a

00:20:59,250 --> 00:21:03,600
bunch of machines put them with federal

00:21:01,410 --> 00:21:06,300
running on the latest three bsd kernel i

00:21:03,600 --> 00:21:07,860
show everybody that it's good and after

00:21:06,300 --> 00:21:10,710
i have shown that this is good maybe fix

00:21:07,860 --> 00:21:11,820
a few bugs then I say ok let's let's

00:21:10,710 --> 00:21:14,180
switch over and then we switch over

00:21:11,820 --> 00:21:14,180
right

00:21:22,770 --> 00:21:28,690
well so I have to I mean forever it

00:21:27,250 --> 00:21:30,550
depends on the scope of the change right

00:21:28,690 --> 00:21:32,620
if this is a small change I can do it on

00:21:30,550 --> 00:21:34,120
my Raspberry Pi if it is a big change I

00:21:32,620 --> 00:21:37,590
will probably need to convince a bunch

00:21:34,120 --> 00:21:37,590
of people to work with me anyway

00:22:17,800 --> 00:22:22,910
well and this is the type of thing that

00:22:20,210 --> 00:22:24,470
actually so I mean I'm sure everybody's

00:22:22,910 --> 00:22:26,180
held the develops right about changing

00:22:24,470 --> 00:22:28,580
the baseline compiler flags and and

00:22:26,180 --> 00:22:31,820
basically making sure that everybody 90%

00:22:28,580 --> 00:22:33,320
of you need to buy new machines you know

00:22:31,820 --> 00:22:35,300
that was turned down but there's

00:22:33,320 --> 00:22:36,950
actually a lot of merit to what they

00:22:35,300 --> 00:22:39,080
were asking for and a reason that we may

00:22:36,950 --> 00:22:41,270
want to consider something similar so

00:22:39,080 --> 00:22:43,220
there there are there was some

00:22:41,270 --> 00:22:44,690
discussion about various ways we could

00:22:43,220 --> 00:22:45,920
implement that but that's definitely one

00:22:44,690 --> 00:22:48,410
of those things that you don't just

00:22:45,920 --> 00:22:51,020
shove into fedora we're going to rawhide

00:22:48,410 --> 00:22:52,730
we're going to have to sidechain somehow

00:22:51,020 --> 00:22:55,340
and figure out how to implement that and

00:22:52,730 --> 00:22:57,650
I don't know I don't know that we're far

00:22:55,340 --> 00:22:59,930
along done the thought process of how we

00:22:57,650 --> 00:23:02,240
would do that but I don't we don't have

00:22:59,930 --> 00:23:05,750
an infrastructure that will make that

00:23:02,240 --> 00:23:08,020
easy to do with you know what we have

00:23:05,750 --> 00:23:08,020
now

00:23:34,490 --> 00:23:39,419
but we are talking about extending the

00:23:37,409 --> 00:23:41,580
possibility what you did it for IOT you

00:23:39,419 --> 00:23:44,220
yeah currently we request is like for

00:23:41,580 --> 00:23:46,139
any kind of feature I'm coming to fedora

00:23:44,220 --> 00:23:48,179
and I want to try to do this it

00:23:46,139 --> 00:23:55,110
definitely doesn't scale well the

00:23:48,179 --> 00:23:56,850
approach we did with IOT yes so we know

00:23:55,110 --> 00:24:05,820
that if you get hit by a bus we're in

00:23:56,850 --> 00:24:07,440
trouble I think we can agree but fatzke

00:24:05,820 --> 00:24:10,259
doesn't have a solution for this problem

00:24:07,440 --> 00:24:12,899
I think we agree that we have a problem

00:24:10,259 --> 00:24:15,809
and we want to solve it somehow but we

00:24:12,899 --> 00:24:17,429
don't have answer inside vasco vistas

00:24:15,809 --> 00:24:20,549
answers should come from some other

00:24:17,429 --> 00:24:22,799
places and we need to just get into

00:24:20,549 --> 00:24:26,159
solving with yeah so this is a valid use

00:24:22,799 --> 00:24:28,049
case a reasonable problem but look

00:24:26,159 --> 00:24:30,090
fescue is not in position to solve this

00:24:28,049 --> 00:24:34,190
for you it's like you who were in

00:24:30,090 --> 00:24:34,190
position to propose solutions of it

00:25:14,000 --> 00:25:18,320
you can also not expect that you come to

00:25:16,370 --> 00:25:22,100
Fodor and say like I want to do a fedora

00:25:18,320 --> 00:25:24,800
for I don't know which kind of IOT you

00:25:22,100 --> 00:25:26,930
you you imagine and then like please

00:25:24,800 --> 00:25:28,880
Fedora provide me access to that this is

00:25:26,930 --> 00:25:31,820
also not going to work this way yeah so

00:25:28,880 --> 00:25:35,390
we cannot just provide as Fedora provide

00:25:31,820 --> 00:25:38,120
on-demand any type of hardware out where

00:25:35,390 --> 00:25:40,400
so the wear should be some process how

00:25:38,120 --> 00:25:42,980
you can start with some smaller things

00:25:40,400 --> 00:25:45,950
which you can manage and then you get

00:25:42,980 --> 00:25:59,180
into adora like where it gets supported

00:25:45,950 --> 00:26:02,930
properly by the fedora is a project so I

00:25:59,180 --> 00:26:05,420
think part of it like for IOT we have a

00:26:02,930 --> 00:26:07,640
specific thing we did here which was you

00:26:05,420 --> 00:26:09,980
made if at our council level objective

00:26:07,640 --> 00:26:11,030
and so this is something that is that at

00:26:09,980 --> 00:26:13,070
a top level

00:26:11,030 --> 00:26:15,170
you know we have prioritized this we

00:26:13,070 --> 00:26:16,910
have given a framework for it and you

00:26:15,170 --> 00:26:19,040
know we happen to know that you and

00:26:16,910 --> 00:26:21,020
people you're working with can do this

00:26:19,040 --> 00:26:24,470
without actually needing to drag Fusco

00:26:21,020 --> 00:26:25,970
into it so you know you're not just off

00:26:24,470 --> 00:26:27,800
doing a rogue operation and you're

00:26:25,970 --> 00:26:30,020
empowered to do that and if think that

00:26:27,800 --> 00:26:32,750
if there are other things that fit into

00:26:30,020 --> 00:26:34,010
that people can't come to the council

00:26:32,750 --> 00:26:36,820
with that as well and try and figure out

00:26:34,010 --> 00:26:36,820
a way for that to happen

00:26:40,050 --> 00:26:45,440
I know how long are you gonna talk yeah

00:26:45,920 --> 00:26:50,250
basically I just kind of fundamentally

00:26:48,120 --> 00:26:52,230
disagree with the whole discussion which

00:26:50,250 --> 00:26:53,310
is that I don't think it's fescues

00:26:52,230 --> 00:26:55,260
responsibility I think it's the

00:26:53,310 --> 00:26:58,710
council's responsibility to figure out

00:26:55,260 --> 00:27:02,430
how to enable you know kind of a new

00:26:58,710 --> 00:27:04,980
thing right you know vesko has a role

00:27:02,430 --> 00:27:08,490
but you know we've got to go and put a

00:27:04,980 --> 00:27:10,770
bunch of you know whatever will behind

00:27:08,490 --> 00:27:12,210
the fact that we wanted you IOT right

00:27:10,770 --> 00:27:14,910
the fact that we want to do modularity

00:27:12,210 --> 00:27:17,220
those aren't they're not like at least

00:27:14,910 --> 00:27:21,000
in in my opinion right it's like vesko

00:27:17,220 --> 00:27:24,180
is about the operational aspects of the

00:27:21,000 --> 00:27:27,170
things that we we have decided as Fedora

00:27:24,180 --> 00:27:30,120
to do the people who make that decision

00:27:27,170 --> 00:27:31,740
sort of is the council right you know

00:27:30,120 --> 00:27:33,420
again going back to Justin's point

00:27:31,740 --> 00:27:35,520
earlier is we we can't actually make

00:27:33,420 --> 00:27:37,530
anybody do anything but you know we can

00:27:35,520 --> 00:27:40,140
at least kind of guide where the

00:27:37,530 --> 00:27:41,400
approach is the right answer so you know

00:27:40,140 --> 00:27:43,890
when Peter comes along and says I want

00:27:41,400 --> 00:27:45,390
to do this IOT thing we say hey well if

00:27:43,890 --> 00:27:46,590
you write it up in this objective we can

00:27:45,390 --> 00:27:48,990
kind of support that we can figure out

00:27:46,590 --> 00:27:50,190
how to make it through there the next

00:27:48,990 --> 00:27:51,990
person who comes along and it's got that

00:27:50,190 --> 00:27:53,670
new thing I don't think they need to

00:27:51,990 --> 00:27:55,530
figure out how the release engineering

00:27:53,670 --> 00:27:57,480
process works either right I think they

00:27:55,530 --> 00:27:59,400
need to come to the council say I got

00:27:57,480 --> 00:28:01,410
this idea and then the council should be

00:27:59,400 --> 00:28:03,660
able to come back to them and say okay

00:28:01,410 --> 00:28:05,370
go follow these steps to go accomplish

00:28:03,660 --> 00:28:06,870
your goal and some of those steps might

00:28:05,370 --> 00:28:09,000
involve ESCO and some of them might not

00:28:06,870 --> 00:28:13,170
I think they're still like we're all a

00:28:09,000 --> 00:28:14,340
fast quote that we overview that all the

00:28:13,170 --> 00:28:16,650
initiatives which are currently

00:28:14,340 --> 00:28:19,710
implemented by implementing them we

00:28:16,650 --> 00:28:26,130
don't lose the possibility to offer for

00:28:19,710 --> 00:28:29,250
other like news beans or some derived

00:28:26,130 --> 00:28:30,870
work on top of fedora so the fast

00:28:29,250 --> 00:28:34,860
control is here is not to provide the

00:28:30,870 --> 00:28:39,270
like resources for new initiatives but

00:28:34,860 --> 00:28:43,770
it is to verify that new initiatives

00:28:39,270 --> 00:28:46,140
still can come or can can be worked on

00:28:43,770 --> 00:28:49,590
like I don't know if I explained it

00:28:46,140 --> 00:28:51,900
properly so so we we need to keep the

00:28:49,590 --> 00:28:53,360
possibility for people to do things on

00:28:51,900 --> 00:28:55,160
top of fedora and this

00:28:53,360 --> 00:28:57,170
first coral to make sure that these

00:28:55,160 --> 00:28:58,910
possibilities are still there but when

00:28:57,170 --> 00:29:02,170
you come with a new thing you want to

00:28:58,910 --> 00:29:04,820
build on top of fedora this is a council

00:29:02,170 --> 00:29:09,460
responsibility to sponsor you kind of

00:29:04,820 --> 00:29:09,460
with resources and support to do that I

00:29:10,809 --> 00:29:28,360
heard from Ben he's fine Brandon again

00:29:32,710 --> 00:29:42,440
hi so if somebody wanted to pursue a

00:29:38,770 --> 00:29:45,020
FreeBSD kernel or an alternate compiler

00:29:42,440 --> 00:29:47,960
flags that was incompatible what does

00:29:45,020 --> 00:29:49,640
the right-half to do that is it going to

00:29:47,960 --> 00:29:52,160
f----- ESCO is it going to the council

00:29:49,640 --> 00:29:55,220
like if if we have resources what's the

00:29:52,160 --> 00:29:56,809
responsible way to engage I think you

00:29:55,220 --> 00:29:58,760
should initially go to the council

00:29:56,809 --> 00:30:00,860
definitely and get such a major change

00:29:58,760 --> 00:30:03,200
approved that's an objective as Matthew

00:30:00,860 --> 00:30:05,360
said and after that we can definitely

00:30:03,200 --> 00:30:07,940
figure out like setting up a shadow

00:30:05,360 --> 00:30:09,799
shadow instance of Koji in or out of the

00:30:07,940 --> 00:30:12,980
other builders and such and to test

00:30:09,799 --> 00:30:15,049
those things out it's it wouldn't be

00:30:12,980 --> 00:30:17,240
right to just go go straight to Fez go

00:30:15,049 --> 00:30:18,559
and ask like I want the side stag where

00:30:17,240 --> 00:30:20,570
I will be testing and you know I think

00:30:18,559 --> 00:30:24,650
that might be too disruptive and it's

00:30:20,570 --> 00:30:26,419
just really working I mean with the

00:30:24,650 --> 00:30:29,179
compiler of like change that was a thing

00:30:26,419 --> 00:30:31,220
that I mean it we get changes for

00:30:29,179 --> 00:30:32,870
compiler flags every few releases

00:30:31,220 --> 00:30:35,720
usually around security and things like

00:30:32,870 --> 00:30:37,130
that so changing the baseline you know

00:30:35,720 --> 00:30:39,620
coming to festival with that first was

00:30:37,130 --> 00:30:42,530
fine except it was immediately shut down

00:30:39,620 --> 00:30:43,790
for obvious reasons

00:30:42,530 --> 00:30:46,100
like I said a lot of people have to

00:30:43,790 --> 00:30:48,350
replace hardware so now it becomes a

00:30:46,100 --> 00:30:50,510
different effort of yes it's a great

00:30:48,350 --> 00:30:55,040
idea to be able to provide binaries that

00:30:50,510 --> 00:30:57,410
have these these minimum baseline or in

00:30:55,040 --> 00:30:59,540
theory it's a good idea so we have to

00:30:57,410 --> 00:31:01,280
figure out a way to actually do that and

00:30:59,540 --> 00:31:02,750
test and now it becomes a much bigger

00:31:01,280 --> 00:31:06,230
effort than we're just changing our

00:31:02,750 --> 00:31:06,980
default compile Flags so that means

00:31:06,230 --> 00:31:09,559
somebody

00:31:06,980 --> 00:31:12,049
involvement in not just it's not just a

00:31:09,559 --> 00:31:14,990
straight Vasco thing maybe to give an

00:31:12,049 --> 00:31:18,230
example in the freebsd case like if you

00:31:14,990 --> 00:31:21,110
need a change in current RPM packages

00:31:18,230 --> 00:31:22,760
and policies to support this effort then

00:31:21,110 --> 00:31:24,650
you go to fast code to approve the

00:31:22,760 --> 00:31:27,140
change of its policy in the current

00:31:24,650 --> 00:31:30,380
state of quadric state of packages and

00:31:27,140 --> 00:31:32,090
so on but like just to start working on

00:31:30,380 --> 00:31:35,150
it you go to console because it's a new

00:31:32,090 --> 00:31:37,309
effort which you build on top I don't

00:31:35,150 --> 00:31:40,250
say I'm seeing the FIR onyx headline

00:31:37,309 --> 00:31:46,190
from this session fedora consider switch

00:31:40,250 --> 00:31:47,410
to FreeBSD kernel it's been it's been

00:31:46,190 --> 00:31:49,700
decided already

00:31:47,410 --> 00:31:52,610
so returning today to the question of

00:31:49,700 --> 00:31:56,270
flags I think that going either for the

00:31:52,610 --> 00:31:59,000
council or fresco or from the top down

00:31:56,270 --> 00:32:00,799
is just the wrong approach the right

00:31:59,000 --> 00:32:02,990
approach in my opinion would be to to

00:32:00,799 --> 00:32:06,590
start from the bottom to show that it

00:32:02,990 --> 00:32:09,380
actually has no measurable improvement

00:32:06,590 --> 00:32:12,590
in benchmarks and to convince people and

00:32:09,380 --> 00:32:14,710
to start small with a subset of packages

00:32:12,590 --> 00:32:17,870
where this makes a difference and then

00:32:14,710 --> 00:32:19,910
after it is well know that this is a

00:32:17,870 --> 00:32:22,280
useful thing and it is well known that

00:32:19,910 --> 00:32:24,890
it can be done without breaking the

00:32:22,280 --> 00:32:26,270
world then maybe we can talk at the

00:32:24,890 --> 00:32:30,230
fiscal level to make this the default

00:32:26,270 --> 00:32:31,970
policy that really depends on the nature

00:32:30,230 --> 00:32:34,850
of the change it's it's much easier to

00:32:31,970 --> 00:32:36,770
actually to switch kernel compiler flags

00:32:34,850 --> 00:32:38,780
or tend to change the infrastructure or

00:32:36,770 --> 00:32:41,660
the release model and things like that

00:32:38,780 --> 00:32:44,270
so for those things you need to go to

00:32:41,660 --> 00:32:49,370
the 2d to the body such as Council first

00:32:44,270 --> 00:32:50,600
I would say and yes you said you need to

00:32:49,370 --> 00:32:52,100
convince people that it's absolutely

00:32:50,600 --> 00:32:56,120
true you need to convince the council

00:32:52,100 --> 00:32:59,450
too so but the council should not be

00:32:56,120 --> 00:33:02,360
selling detailed technical policy

00:32:59,450 --> 00:33:04,220
decisions just setting the direction of

00:33:02,360 --> 00:33:06,530
demonstration yeah I also think the

00:33:04,220 --> 00:33:09,460
council should not be making decisions

00:33:06,530 --> 00:33:12,919
just in the council in our you know

00:33:09,460 --> 00:33:16,580
dinner party at flock situation we

00:33:12,919 --> 00:33:18,020
should the Federal Council decisions

00:33:16,580 --> 00:33:19,490
should reflect you know what the

00:33:18,020 --> 00:33:20,880
community is thinking it's kind of our

00:33:19,490 --> 00:33:24,210
job to be leaders the

00:33:20,880 --> 00:33:26,010
listen and yeah reflect the discussion

00:33:24,210 --> 00:33:28,020
that's already going on so if it comes

00:33:26,010 --> 00:33:31,110
to the council first we probably will

00:33:28,020 --> 00:33:33,420
say that sounds interesting can you make

00:33:31,110 --> 00:33:35,520
sure there's actually support for this

00:33:33,420 --> 00:33:38,010
thing that you want to do because we're

00:33:35,520 --> 00:33:39,270
not going to things can't be top-down

00:33:38,010 --> 00:33:43,010
because it just doesn't work because

00:33:39,270 --> 00:33:51,030
again we can't tell people to do work

00:33:43,010 --> 00:33:53,010
mini scan but she says no like we are

00:33:51,030 --> 00:33:56,280
talking about different paths here like

00:33:53,010 --> 00:33:59,250
if you're going if you choose wrong path

00:33:56,280 --> 00:34:01,620
and when to wrong body it's okay we will

00:33:59,250 --> 00:34:03,510
we will direct you to the right one so

00:34:01,620 --> 00:34:05,700
don't be afraid to come up with your

00:34:03,510 --> 00:34:07,830
ideas even if you are not sure who you

00:34:05,700 --> 00:34:09,750
supposed to said we said yes for like

00:34:07,830 --> 00:34:12,179
for consul for fair score just for

00:34:09,750 --> 00:34:13,980
contributor like you know we can start

00:34:12,179 --> 00:34:16,710
from something and then figure it out so

00:34:13,980 --> 00:34:18,210
don't don't be afraid of it yeah and on

00:34:16,710 --> 00:34:19,889
the flip side of that if you come to

00:34:18,210 --> 00:34:21,510
someone and then they say wait this is

00:34:19,889 --> 00:34:23,190
the wrong body go here it's actually

00:34:21,510 --> 00:34:25,620
trying to help it's not just giving you

00:34:23,190 --> 00:34:27,360
the runaround I think it's also

00:34:25,620 --> 00:34:29,490
important to note that like for the

00:34:27,360 --> 00:34:32,399
council thing to use the example of the

00:34:29,490 --> 00:34:34,290
compiler Flags the council may see that

00:34:32,399 --> 00:34:36,629
may see value in that and may see these

00:34:34,290 --> 00:34:39,149
this is great but what should come out

00:34:36,629 --> 00:34:41,250
of that objective should be provide

00:34:39,149 --> 00:34:44,010
faster support for newer hardware or

00:34:41,250 --> 00:34:46,050
something like that not that the the

00:34:44,010 --> 00:34:47,820
answer there shouldn't be dictating the

00:34:46,050 --> 00:34:49,409
solution it shouldn't say we are going

00:34:47,820 --> 00:34:51,600
to rebuild all fedora with these flags

00:34:49,409 --> 00:34:53,340
and have a separate distro and release

00:34:51,600 --> 00:34:55,409
it should be the it should be the goal

00:34:53,340 --> 00:34:57,960
and then the house should be determined

00:34:55,409 --> 00:34:59,940
after that as the best way to to get

00:34:57,960 --> 00:35:02,480
that goal given you a question or

00:34:59,940 --> 00:35:02,480
comment on this

00:35:19,350 --> 00:35:26,200
not what I in mind is more of I think

00:35:23,619 --> 00:35:27,369
it's fine for things to go to Facebook

00:35:26,200 --> 00:35:30,310
first because I think the change

00:35:27,369 --> 00:35:33,730
proposal in first code is actually much

00:35:30,310 --> 00:35:35,710
more open to community feedback and for

00:35:33,730 --> 00:35:38,290
something like the compiler flag I think

00:35:35,710 --> 00:35:40,090
I think it's like actually propose that

00:35:38,290 --> 00:35:41,740
two-face go see how the community

00:35:40,090 --> 00:35:46,210
reacted to it and that's one of their

00:35:41,740 --> 00:35:48,070
that's one of the it's one of the point

00:35:46,210 --> 00:35:49,810
that the fiscal members are taking into

00:35:48,070 --> 00:35:52,060
account when they design on a change or

00:35:49,810 --> 00:35:54,190
not and in this case the community said

00:35:52,060 --> 00:35:56,170
well we can't we can't do that because

00:35:54,190 --> 00:35:59,890
and these and these reasons and at that

00:35:56,170 --> 00:36:01,900
time then if we want to provide faster

00:35:59,890 --> 00:36:04,420
support for new hardware then it is fine

00:36:01,900 --> 00:36:07,090
to bring it to the to the console as we

00:36:04,420 --> 00:36:08,770
were different okay we tried the

00:36:07,090 --> 00:36:10,570
technical solution and that got shut

00:36:08,770 --> 00:36:12,760
down by the community for good reasons

00:36:10,570 --> 00:36:15,340
now that doesn't solve our problem to

00:36:12,760 --> 00:36:18,880
provide faster support for new hardware

00:36:15,340 --> 00:36:21,340
so it is consider agreeing with this

00:36:18,880 --> 00:36:23,920
objective and then okay let's go back to

00:36:21,340 --> 00:36:25,840
if we can't find the correct if the

00:36:23,920 --> 00:36:27,640
first solution doesn't work then we can

00:36:25,840 --> 00:36:29,710
come back and figure out what is option

00:36:27,640 --> 00:36:31,450
two of some Syrians and so on and then

00:36:29,710 --> 00:36:33,520
work with his code to figure out what is

00:36:31,450 --> 00:36:35,970
the correct way to to actually fill that

00:36:33,520 --> 00:36:35,970
objective

00:36:39,060 --> 00:36:44,820
maybe to it like rejected change is not

00:36:42,810 --> 00:36:47,550
a bad thing it's just like the first

00:36:44,820 --> 00:36:49,590
step if your change you like suggested

00:36:47,550 --> 00:36:51,060
to change we change what got rejected is

00:36:49,590 --> 00:36:53,370
that doesn't mean you should stop

00:36:51,060 --> 00:36:55,350
everything you do and you probably just

00:36:53,370 --> 00:36:59,460
need to rethink and find a different way

00:36:55,350 --> 00:37:02,220
to reach your goal so just rework it a

00:36:59,460 --> 00:37:05,100
bit and like people should be afraid of

00:37:02,220 --> 00:37:06,840
rejecting changes and don't treat this

00:37:05,100 --> 00:37:09,150
as a failure it's just the first

00:37:06,840 --> 00:37:15,480
approach the first method and when you

00:37:09,150 --> 00:37:17,340
go forward as the person who put in the

00:37:15,480 --> 00:37:20,100
change the quest for secure baseline

00:37:17,340 --> 00:37:23,730
compiler flags and it got torn down in a

00:37:20,100 --> 00:37:26,160
couple of days my question is that if I

00:37:23,730 --> 00:37:28,140
haven't if I if I want to change does

00:37:26,160 --> 00:37:30,150
fresco they comment that I should first

00:37:28,140 --> 00:37:33,000
go to Fedora devildis get some traction

00:37:30,150 --> 00:37:38,010
on it and then come to first go and ask

00:37:33,000 --> 00:37:40,560
for a change request so there is general

00:37:38,010 --> 00:37:45,240
policy that they change is first sent to

00:37:40,560 --> 00:37:50,550
Fedora DeVoe and after a week I believe

00:37:45,240 --> 00:37:52,980
it is only opened in the first call

00:37:50,550 --> 00:37:55,200
tracker and this is not not I mean this

00:37:52,980 --> 00:37:57,540
is on purpose right they did the change

00:37:55,200 --> 00:38:03,150
should always be discussed first at the

00:37:57,540 --> 00:38:04,950
mailing lists but if you are doing some

00:38:03,150 --> 00:38:06,420
bigger change for example some security

00:38:04,950 --> 00:38:08,160
compiler flex it definitely would not

00:38:06,420 --> 00:38:09,540
hurt if before filing the change

00:38:08,160 --> 00:38:11,310
figuring out all the details you would

00:38:09,540 --> 00:38:13,200
send them email to develop mailing lists

00:38:11,310 --> 00:38:15,360
asking i would like to implement these

00:38:13,200 --> 00:38:18,990
security flags i would like to do these

00:38:15,360 --> 00:38:21,060
things what do you think about it so do

00:38:18,990 --> 00:38:23,010
not create change proposal I will put

00:38:21,060 --> 00:38:24,570
these dis and this flag and wait for

00:38:23,010 --> 00:38:26,640
feedback for it you can do it in advance

00:38:24,570 --> 00:38:28,890
and I'm thinking about these 15

00:38:26,640 --> 00:38:31,980
different flags I'm not sure about this

00:38:28,890 --> 00:38:34,320
one what do you think and I think it's

00:38:31,980 --> 00:38:36,390
based on whether or not you are sure

00:38:34,320 --> 00:38:38,760
what you are trying to change yeah like

00:38:36,390 --> 00:38:40,890
if you if you have already a plan in

00:38:38,760 --> 00:38:42,780
mind when you is better to discuss the

00:38:40,890 --> 00:38:44,820
plan when you write it as a change and

00:38:42,780 --> 00:38:47,160
start discussing from starting from

00:38:44,820 --> 00:38:49,980
there but if you have idea which you

00:38:47,160 --> 00:38:52,410
need help to polish like because writing

00:38:49,980 --> 00:38:54,239
the change is actually a hard job and

00:38:52,410 --> 00:38:56,819
you may need some help from community

00:38:54,239 --> 00:38:58,710
just to get where to write a first draft

00:38:56,819 --> 00:39:01,019
of exchange and it's perfectly

00:38:58,710 --> 00:39:03,359
reasonable to go and start rounds of

00:39:01,019 --> 00:39:05,700
initial discussions in various mailing

00:39:03,359 --> 00:39:08,130
lists before you get to actually write

00:39:05,700 --> 00:39:11,069
in the draft so just mind the deadlines

00:39:08,130 --> 00:39:13,829
but you definitely can ask for the

00:39:11,069 --> 00:39:16,739
community for help to even start with a

00:39:13,829 --> 00:39:18,059
change the beginning of it well and and

00:39:16,739 --> 00:39:20,700
that's one of the things to that'll help

00:39:18,059 --> 00:39:22,739
you polish so you have a list of

00:39:20,700 --> 00:39:25,619
security compiler flags I want to do

00:39:22,739 --> 00:39:27,239
there is a specific reason that this one

00:39:25,619 --> 00:39:31,079
flag will cause problems for a large

00:39:27,239 --> 00:39:32,970
number of packages and a small tweak to

00:39:31,079 --> 00:39:35,069
that what would actually be fine

00:39:32,970 --> 00:39:37,289
but if all of this discussion happens

00:39:35,069 --> 00:39:39,479
before the change is is pushed through

00:39:37,289 --> 00:39:41,579
then you know that and you make that

00:39:39,479 --> 00:39:43,170
small tweak and you get mostly what you

00:39:41,579 --> 00:39:45,479
want or close to what you want instead

00:39:43,170 --> 00:39:46,799
of nothing at all you know when you just

00:39:45,479 --> 00:39:48,630
come through with the list and then it

00:39:46,799 --> 00:39:50,160
gets discussed um devel and and and

00:39:48,630 --> 00:39:52,200
people say this isn't going to work and

00:39:50,160 --> 00:39:54,660
why and then the change is not modified

00:39:52,200 --> 00:39:56,880
to reflect that the change does get

00:39:54,660 --> 00:39:58,469
turned down when you know chances are it

00:39:56,880 --> 00:40:07,340
could have gone to with some minor

00:39:58,469 --> 00:40:16,370
tweaks next question

00:40:07,340 --> 00:40:20,000
I was told to ask this I have no idea if

00:40:16,370 --> 00:40:22,550
we look at Matthew's dinosaur diagrams

00:40:20,000 --> 00:40:24,800
from the beginning and from the the the

00:40:22,550 --> 00:40:29,510
early presentations around fedora the

00:40:24,800 --> 00:40:32,000
Apple usage is fairly drastic and it

00:40:29,510 --> 00:40:34,130
does seem like Apple doesn't necessarily

00:40:32,000 --> 00:40:36,680
get the love that it should from the

00:40:34,130 --> 00:40:41,840
Fedora community what changes would Fez

00:40:36,680 --> 00:40:52,430
go like to see to help support the Apple

00:40:41,840 --> 00:40:53,990
user base that is there so modularity is

00:40:52,430 --> 00:40:56,870
one of the things that can help here in

00:40:53,990 --> 00:40:58,880
my opinion as we actually introduced

00:40:56,870 --> 00:41:01,430
support for modules in Apple a8

00:40:58,880 --> 00:41:04,160
that is upcoming still even though the

00:41:01,430 --> 00:41:06,170
beta was released just recently we can

00:41:04,160 --> 00:41:07,760
build any content that is released for

00:41:06,170 --> 00:41:09,620
rawhide for any version of photography

00:41:07,760 --> 00:41:12,830
can even get it automatically for Apple

00:41:09,620 --> 00:41:14,870
that means that you need to opt out to

00:41:12,830 --> 00:41:16,700
provide epic content I think that will

00:41:14,870 --> 00:41:18,920
that will definitely help with making

00:41:16,700 --> 00:41:20,330
more content available and making sure

00:41:18,920 --> 00:41:23,600
that the package is actually built on

00:41:20,330 --> 00:41:24,590
Apple and so on so I think that's that's

00:41:23,600 --> 00:41:26,930
one way to do it

00:41:24,590 --> 00:41:29,030
besides that Apple has its own steering

00:41:26,930 --> 00:41:32,510
committee so maybe maybe we can work

00:41:29,030 --> 00:41:35,900
together somehow so there have been

00:41:32,510 --> 00:41:40,270
various instances where stuff was added

00:41:35,900 --> 00:41:44,390
to fedora or rpm and it took a long time

00:41:40,270 --> 00:41:48,620
to trickle down to be available in Apple

00:41:44,390 --> 00:41:50,630
and this makes contributing to apple

00:41:48,620 --> 00:41:54,470
unnecessarily hard in my opinion I think

00:41:50,630 --> 00:41:57,380
there are many times where various

00:41:54,470 --> 00:42:01,460
powers that define how it all is built

00:41:57,380 --> 00:42:03,650
could make it easier to contribute to it

00:42:01,460 --> 00:42:10,340
by pushing some changes that are very

00:42:03,650 --> 00:42:13,190
siphon alike new macros without delay so

00:42:10,340 --> 00:42:15,470
is it the case with the modules that I

00:42:13,190 --> 00:42:17,060
get my magic wish if I have one stream

00:42:15,470 --> 00:42:19,280
and it just automatically gets built

00:42:17,060 --> 00:42:20,100
across all four releases and Apple

00:42:19,280 --> 00:42:22,170
that's

00:42:20,100 --> 00:42:33,960
okay thank you that's what that's all I

00:42:22,170 --> 00:42:35,970
wanted yeah something that is peeled

00:42:33,960 --> 00:42:37,980
automatically doesn't mean that there is

00:42:35,970 --> 00:42:41,880
automatically as support from the

00:42:37,980 --> 00:42:47,010
maintainer x' for any bugs that come in

00:42:41,880 --> 00:42:48,660
this newly peeled thing what I guess

00:42:47,010 --> 00:42:52,190
it's not only for the first coat but

00:42:48,660 --> 00:42:57,900
that's the question what do we foresee

00:42:52,190 --> 00:43:00,560
to help maintain errs to actually live

00:42:57,900 --> 00:43:06,090
with that reality that they need to

00:43:00,560 --> 00:43:14,820
expand their forces to support Apple if

00:43:06,090 --> 00:43:18,500
there's automatic rebuild so the

00:43:14,820 --> 00:43:25,470
feedback on packages in fedora

00:43:18,500 --> 00:43:29,070
right now 29 and 30 and rawhide they I

00:43:25,470 --> 00:43:31,680
mean this is very consistent that when

00:43:29,070 --> 00:43:36,240
updates are released you you get the

00:43:31,680 --> 00:43:38,610
Karma for the the package in the current

00:43:36,240 --> 00:43:42,500
release maybe within a day or sometimes

00:43:38,610 --> 00:43:44,900
even before the update hits testing and

00:43:42,500 --> 00:43:49,740
for further r29

00:43:44,900 --> 00:43:54,540
you get it maybe in a month and or maybe

00:43:49,740 --> 00:43:57,210
not at all so people who are testing

00:43:54,540 --> 00:44:00,000
stuff that we built in fedora are also

00:43:57,210 --> 00:44:03,030
the people who are running the latest

00:44:00,000 --> 00:44:08,040
stuff and then the people who use the

00:44:03,030 --> 00:44:10,470
older versions they don't seem to

00:44:08,040 --> 00:44:14,580
contribute to fedora either testing or

00:44:10,470 --> 00:44:18,450
development or anything else and I think

00:44:14,580 --> 00:44:20,730
it's even worse for Apple you have I

00:44:18,450 --> 00:44:26,190
mean I have built packages for Apple and

00:44:20,730 --> 00:44:29,850
fired an update and I don't recall

00:44:26,190 --> 00:44:31,800
getting any feedback ever so I think

00:44:29,850 --> 00:44:33,720
this is the problem right I mean that

00:44:31,800 --> 00:44:36,570
nothing is for free and

00:44:33,720 --> 00:44:39,690
so I think this ad answer is that sorry

00:44:36,570 --> 00:44:43,380
just this support will not happen

00:44:39,690 --> 00:44:47,310
without input from from people who use

00:44:43,380 --> 00:44:51,869
Apple Apple yeah Apple definitely has

00:44:47,310 --> 00:44:56,190
that problem as far as you know the the

00:44:51,869 --> 00:44:58,680
usage is just very high but those people

00:44:56,190 --> 00:45:00,150
who use the packages from Apple don't

00:44:58,680 --> 00:45:02,190
really engage in the community or

00:45:00,150 --> 00:45:04,290
they're not really part of our community

00:45:02,190 --> 00:45:05,820
they're more consumers they're using

00:45:04,290 --> 00:45:08,550
this package and if it breaks they just

00:45:05,820 --> 00:45:10,260
say oh too bad and go on if you even

00:45:08,550 --> 00:45:13,380
look at the number of bugs in Bugzilla

00:45:10,260 --> 00:45:16,590
on Apple packages versus fedora there's

00:45:13,380 --> 00:45:18,600
hardly any Apple bugs even and I'm sure

00:45:16,590 --> 00:45:20,910
that the packages are equally as buggy

00:45:18,600 --> 00:45:23,880
as fedoras but you don't see that

00:45:20,910 --> 00:45:25,890
reflected over there so I think one

00:45:23,880 --> 00:45:28,140
thing we should look at or the Apple

00:45:25,890 --> 00:45:30,690
steering committee or something this

00:45:28,140 --> 00:45:32,820
entire community is how do we engage

00:45:30,690 --> 00:45:35,609
those people to know to get feedback

00:45:32,820 --> 00:45:37,170
from them to get bugs from them to have

00:45:35,609 --> 00:45:40,200
them join the community and like test

00:45:37,170 --> 00:45:42,480
things that kind of thing is is really

00:45:40,200 --> 00:45:44,850
difficult and I think CentOS has this

00:45:42,480 --> 00:45:47,160
problem also in that there's so many

00:45:44,850 --> 00:45:48,630
people who use it but don't participate

00:45:47,160 --> 00:45:50,730
in the community that it's very

00:45:48,630 --> 00:45:52,830
difficult to get you know that kind of

00:45:50,730 --> 00:45:54,510
feedback so even though we don't get

00:45:52,830 --> 00:45:56,550
this the fact that we will be building

00:45:54,510 --> 00:45:58,650
from the same source even though the

00:45:56,550 --> 00:46:01,380
artifact is different and it's tested in

00:45:58,650 --> 00:46:04,800
fedora and we are starting to use osei

00:46:01,380 --> 00:46:06,390
more more seriously now and then I do

00:46:04,800 --> 00:46:08,760
actually do hope that we will improve

00:46:06,390 --> 00:46:11,400
the quality the fact that it will be

00:46:08,760 --> 00:46:13,440
built automatically also means that the

00:46:11,400 --> 00:46:16,290
packages won't have to do an extra

00:46:13,440 --> 00:46:18,960
effort to get the continent or maintain

00:46:16,290 --> 00:46:21,270
it or fix it and so on so I actually do

00:46:18,960 --> 00:46:25,890
hope that this point this will help yeah

00:46:21,270 --> 00:46:30,150
I I don't believe in that in in my

00:46:25,890 --> 00:46:34,680
particular area because there are a lot

00:46:30,150 --> 00:46:38,040
of tiny but important details that

00:46:34,680 --> 00:46:40,859
prevent direct rebuild and reuse of the

00:46:38,040 --> 00:46:44,700
year identity or authentication packages

00:46:40,859 --> 00:46:46,000
on centers as it is and we know about

00:46:44,700 --> 00:46:48,970
that because we

00:46:46,000 --> 00:46:53,730
have actually centers admins in the

00:46:48,970 --> 00:46:56,680
upstream community being very loud about

00:46:53,730 --> 00:46:59,860
wanting to have these new packages and

00:46:56,680 --> 00:47:03,700
not being able to actually run them

00:46:59,860 --> 00:47:07,150
there because of bugs and and the things

00:47:03,700 --> 00:47:09,520
and that actually goes much farther than

00:47:07,150 --> 00:47:14,200
just automatic availability of the

00:47:09,520 --> 00:47:18,610
packages nobody tests this Delta between

00:47:14,200 --> 00:47:21,400
what is in fedora and what is going

00:47:18,610 --> 00:47:24,610
through the rail back channel into

00:47:21,400 --> 00:47:27,640
Center s right let's say this way so if

00:47:24,610 --> 00:47:32,820
we are saying for example that fedora

00:47:27,640 --> 00:47:37,410
becomes an upstream for rail in real

00:47:32,820 --> 00:47:40,990
like there is no Delta that big that

00:47:37,410 --> 00:47:43,600
justifies the ABI differences and

00:47:40,990 --> 00:47:46,900
semantic behavioral differences in

00:47:43,600 --> 00:47:49,900
various pieces of the infrastructure and

00:47:46,900 --> 00:47:52,690
the distributions themselves then we

00:47:49,900 --> 00:47:54,970
might get some benefit from from

00:47:52,690 --> 00:47:58,840
automatically rebuilding in Apple and

00:47:54,970 --> 00:48:04,060
contributing to pre testing of what goes

00:47:58,840 --> 00:48:08,050
in rel so kind of this Apple plus Center

00:48:04,060 --> 00:48:12,070
as would become another upstream testbed

00:48:08,050 --> 00:48:16,750
for for rail but so far I don't see this

00:48:12,070 --> 00:48:20,620
happening and I'm really concerned how

00:48:16,750 --> 00:48:23,380
we get to solve those problems that we

00:48:20,620 --> 00:48:28,020
see particularly with a bi differences

00:48:23,380 --> 00:48:30,490
that inevitable coming from fedora to

00:48:28,020 --> 00:48:38,850
centers even we have the center has

00:48:30,490 --> 00:48:38,850
eight who all let's say where is the

00:48:39,270 --> 00:48:47,920
forum that where we should be discussing

00:48:42,130 --> 00:48:50,320
this is it fast applause Apple steering

00:48:47,920 --> 00:48:52,750
committee or it's why I guess it's a

00:48:50,320 --> 00:48:54,100
wider it's a good question I think we

00:48:52,750 --> 00:48:56,270
should we should start some joint

00:48:54,100 --> 00:49:01,010
discussion between EBSCO and Fusco

00:48:56,270 --> 00:49:03,400
and see where it takes us yep it

00:49:01,010 --> 00:49:06,290
probably would help a bit if we could

00:49:03,400 --> 00:49:08,300
it's not really easier if you want to

00:49:06,290 --> 00:49:11,570
get some new feature in packages which

00:49:08,300 --> 00:49:14,810
are in rel so rpm is my case I want to

00:49:11,570 --> 00:49:17,180
get some feature in rpm in rel seven

00:49:14,810 --> 00:49:18,980
let's say it's I cannot just send pool

00:49:17,180 --> 00:49:21,890
requests and get some approvals from

00:49:18,980 --> 00:49:24,980
those people it's just you can file bug

00:49:21,890 --> 00:49:27,850
somebody could look on it and say we

00:49:24,980 --> 00:49:30,710
don't want probably to support it and

00:49:27,850 --> 00:49:33,680
basically we're evolving in federal a

00:49:30,710 --> 00:49:35,270
lot we have Dayton the changelog we have

00:49:33,680 --> 00:49:38,210
reached depends we have so many new

00:49:35,270 --> 00:49:40,280
things but sometimes it's impossible to

00:49:38,210 --> 00:49:43,130
start using them for real packages so

00:49:40,280 --> 00:49:44,840
even those yeah we can try to build them

00:49:43,130 --> 00:49:46,370
automatically but sometimes they will

00:49:44,840 --> 00:49:48,500
start failing because we started doing

00:49:46,370 --> 00:49:50,240
new features in Fedora and they will

00:49:48,500 --> 00:49:51,410
start to be again out of sync so if

00:49:50,240 --> 00:49:54,710
there would be some easy way how to

00:49:51,410 --> 00:49:59,660
contribute to real packages then that

00:49:54,710 --> 00:50:02,110
could work I think but I'm saying that

00:49:59,660 --> 00:50:05,570
the automation is not an answer

00:50:02,110 --> 00:50:08,330
it's it's one of helpful steps but it's

00:50:05,570 --> 00:50:10,790
not an answer to the real question well

00:50:08,330 --> 00:50:13,700
and I think the modularity automatic

00:50:10,790 --> 00:50:17,140
rebuild thing happens with with certain

00:50:13,700 --> 00:50:20,260
modules not with every package right so

00:50:17,140 --> 00:50:23,870
there are things that if if I need a

00:50:20,260 --> 00:50:26,150
rust stack or something like that that's

00:50:23,870 --> 00:50:29,500
gonna be much better than yeah any low

00:50:26,150 --> 00:50:29,500
level system packages or

00:50:57,570 --> 00:51:01,599
but we are not going to solve this

00:50:59,980 --> 00:51:04,480
problem it's like in the end it's

00:51:01,599 --> 00:51:07,450
initiative of a community yes yes so I

00:51:04,480 --> 00:51:10,270
can see us trying to align the tool in

00:51:07,450 --> 00:51:13,150
trying to help with infrastructure tasks

00:51:10,270 --> 00:51:16,570
but like in vient it was a question to

00:51:13,150 --> 00:51:18,700
FL community like do people want that do

00:51:16,570 --> 00:51:21,400
people invest time invest so there is no

00:51:18,700 --> 00:51:23,080
magic answer we can just provide to

00:51:21,400 --> 00:51:25,119
resolve this problem if fertile people

00:51:23,080 --> 00:51:27,040
working on that they should have a

00:51:25,119 --> 00:51:31,270
tooling and the possibility this this is

00:51:27,040 --> 00:51:32,830
what we need to work provide but like we

00:51:31,270 --> 00:51:35,470
cannot replace those people with

00:51:32,830 --> 00:51:38,430
ourselves yeah we're not going to solve

00:51:35,470 --> 00:51:38,430
that problem for them

00:51:48,440 --> 00:51:53,100
yeah I see you like infrastructure

00:51:50,940 --> 00:51:55,680
tooling improvements I like easy

00:51:53,100 --> 00:51:58,260
branching easy cherry picking things

00:51:55,680 --> 00:52:00,120
like that but in the end like where it's

00:51:58,260 --> 00:52:01,740
not that much we can do and honestly

00:52:00,120 --> 00:52:03,270
it's like it's a different branch yeah

00:52:01,740 --> 00:52:06,510
you need to maintain a different branch

00:52:03,270 --> 00:52:08,940
it or not going to changes we've got

00:52:06,510 --> 00:52:15,090
like five more minutes maybe one more

00:52:08,940 --> 00:52:20,040
topic does anybody else have anything hi

00:52:15,090 --> 00:52:22,680
pv6 yeah I think the Facebook people are

00:52:20,040 --> 00:52:26,160
gonna help us with that yeah I got one I

00:52:22,680 --> 00:52:30,150
look up here and I see five people who

00:52:26,160 --> 00:52:35,070
are employed by Red Hat and 1x red

00:52:30,150 --> 00:52:37,050
header a lot of but most of the Red

00:52:35,070 --> 00:52:38,760
Hatters are people who did awesome stuff

00:52:37,050 --> 00:52:44,270
in the Fedora community and were hired

00:52:38,760 --> 00:52:48,510
into Red Hat maybe all of you what is

00:52:44,270 --> 00:52:50,160
this a problem is it it's a fully

00:52:48,510 --> 00:52:52,050
elected body there's no like a Red Hat

00:52:50,160 --> 00:52:56,070
appoints people think but we end up with

00:52:52,050 --> 00:52:57,300
with the Red Hat dominated Fusco it is

00:52:56,070 --> 00:52:59,130
it a problem is there something we

00:52:57,300 --> 00:53:01,560
should do about it what what should we

00:52:59,130 --> 00:53:03,360
you I think people more people who are

00:53:01,560 --> 00:53:06,960
not working through the head should go

00:53:03,360 --> 00:53:08,340
for the elections and people when

00:53:06,960 --> 00:53:11,100
they're voting they probably should

00:53:08,340 --> 00:53:13,470
think read the interviews and think like

00:53:11,100 --> 00:53:15,870
is it make sense or not because I just

00:53:13,470 --> 00:53:18,420
spoke to some number of people and what

00:53:15,870 --> 00:53:20,010
people say oh I know Kevin I'm going to

00:53:18,420 --> 00:53:22,500
vote for him because he was there

00:53:20,010 --> 00:53:25,860
forever he does Oh some things in infra

00:53:22,500 --> 00:53:28,740
he does a lot of nice things but people

00:53:25,860 --> 00:53:30,390
just need to think like do I vote just

00:53:28,740 --> 00:53:32,790
because I know that person he does nice

00:53:30,390 --> 00:53:34,620
things or do I vote for the person who

00:53:32,790 --> 00:53:46,520
wants to do this and this and this

00:53:34,620 --> 00:53:51,410
particular thing people consider

00:53:46,520 --> 00:53:54,960
employee different contributors like

00:53:51,410 --> 00:53:57,570
honestly in my case for example like I

00:53:54,960 --> 00:54:00,240
had 10 years fewer experience before and

00:53:57,570 --> 00:54:01,380
in just one year of red head the fact

00:54:00,240 --> 00:54:03,840
that I'm resident

00:54:01,380 --> 00:54:07,260
you know doesn't make me some evil

00:54:03,840 --> 00:54:09,750
person who just joins fedora for some

00:54:07,260 --> 00:54:12,360
evil agenda it says so I'm like still

00:54:09,750 --> 00:54:18,300
I'm still a fedora person I've been here

00:54:12,360 --> 00:54:20,490
for ten years you know I'm yes so let's

00:54:18,300 --> 00:54:22,500
let's not differentiate people based on

00:54:20,490 --> 00:54:25,140
their ploy employment status but as

00:54:22,500 --> 00:54:27,270
eager said like try to and also like not

00:54:25,140 --> 00:54:29,190
differentiate on on the years of

00:54:27,270 --> 00:54:31,980
experience that differentiate on top of

00:54:29,190 --> 00:54:34,380
what we are talking about in the

00:54:31,980 --> 00:54:38,580
interviews like ask questions engage

00:54:34,380 --> 00:54:40,140
with people we may consider like adding

00:54:38,580 --> 00:54:41,970
more interactive sessions to face

00:54:40,140 --> 00:54:44,090
collections not just like free written

00:54:41,970 --> 00:54:47,100
questions if there is a community

00:54:44,090 --> 00:54:49,050
request for it because like we really

00:54:47,100 --> 00:54:51,540
need people initiative like choose your

00:54:49,050 --> 00:54:54,150
fiscal wisely yeah you need to

00:54:51,540 --> 00:54:56,100
understand what are your criteria in and

00:54:54,150 --> 00:54:57,150
what you want to hear when you elect

00:54:56,100 --> 00:54:59,490
people to fasco

00:54:57,150 --> 00:55:01,620
and let's not focus like on be blown

00:54:59,490 --> 00:55:06,720
employment status here as we we are not

00:55:01,620 --> 00:55:09,600
here for employee tech yeah I'll add to

00:55:06,720 --> 00:55:12,420
that that in every election I've noted

00:55:09,600 --> 00:55:14,100
in my little questionnaire come ask me

00:55:12,420 --> 00:55:16,470
questions if you if you want to know

00:55:14,100 --> 00:55:19,470
what my opinion is on something not once

00:55:16,470 --> 00:55:22,170
has anyone ever done that so that kind

00:55:19,470 --> 00:55:23,820
of worries me I would think everyone

00:55:22,170 --> 00:55:27,630
should feel free to ask you know

00:55:23,820 --> 00:55:29,070
perspective elect ease questions what is

00:55:27,630 --> 00:55:30,480
your opinion on this what are you gonna

00:55:29,070 --> 00:55:33,600
do about this what do you think of this

00:55:30,480 --> 00:55:35,100
and I think that's very valuable and I

00:55:33,600 --> 00:55:39,800
think that will help you choose a good

00:55:35,100 --> 00:55:43,380
festival so as someone who is obviously

00:55:39,800 --> 00:55:45,270
a longtime contributor within the Fedora

00:55:43,380 --> 00:55:48,720
community and not employed by Red Hat

00:55:45,270 --> 00:55:51,510
one of the things that I that has

00:55:48,720 --> 00:55:53,100
stopped me in the past from considering

00:55:51,510 --> 00:55:56,700
being on vesco or FBC

00:55:53,100 --> 00:55:59,670
or Council or anywhere else is the mere

00:55:56,700 --> 00:56:03,150
fact that I don't know how I would

00:55:59,670 --> 00:56:05,010
actually be able to be part of it and

00:56:03,150 --> 00:56:06,810
make the time commitments and the

00:56:05,010 --> 00:56:10,560
availability and things like that I

00:56:06,810 --> 00:56:12,750
think one of the underlying problems is

00:56:10,560 --> 00:56:15,040
that if you are a Red Hatter and you

00:56:12,750 --> 00:56:17,500
become part of the

00:56:15,040 --> 00:56:20,440
Dora governance in some way it is a lot

00:56:17,500 --> 00:56:22,870
easier to be able to say I have to make

00:56:20,440 --> 00:56:24,610
time for this and be able to be there

00:56:22,870 --> 00:56:26,380
which is more or less that

00:56:24,610 --> 00:56:28,360
self-fulfilling prophecy that it winds

00:56:26,380 --> 00:56:29,710
up being Red Hatters even when it's not

00:56:28,360 --> 00:56:32,020
intended to be that way

00:56:29,710 --> 00:56:34,270
so at least from my point of view it's

00:56:32,020 --> 00:56:36,940
kind of hard because it's hard to figure

00:56:34,270 --> 00:56:38,830
out how to justify to other people what

00:56:36,940 --> 00:56:41,380
is the value of being part of the Fedora

00:56:38,830 --> 00:56:42,610
governance in some form or fashion even

00:56:41,380 --> 00:56:44,710
though maybe as a contributor it's

00:56:42,610 --> 00:56:47,650
obvious or someone who's deeply in the

00:56:44,710 --> 00:56:49,210
community but like it's hard when it's

00:56:47,650 --> 00:56:50,680
outside of that I mean I'm not asking

00:56:49,210 --> 00:56:52,630
for solutions here I'm just saying that

00:56:50,680 --> 00:56:54,520
this is this is the legit problem I have

00:56:52,630 --> 00:56:58,360
even though I would very much like to be

00:56:54,520 --> 00:57:00,070
part of those things and I think that's

00:56:58,360 --> 00:57:06,570
gonna be the last word here because

00:57:00,070 --> 00:57:13,480
we're running out of time one more okay

00:57:06,570 --> 00:57:15,580
okay so originally I wanted to ask how

00:57:13,480 --> 00:57:17,710
should Red Hat stop hiring awesome

00:57:15,580 --> 00:57:20,800
people from the Fedora community but the

00:57:17,710 --> 00:57:23,740
the answer is obvious so my question for

00:57:20,800 --> 00:57:25,720
thinking at home is should other

00:57:23,740 --> 00:57:28,060
companies hire awesome people from the

00:57:25,720 --> 00:57:33,820
Fedora community full time and how do we

00:57:28,060 --> 00:57:36,480
make that happen something for Facebook

00:57:33,820 --> 00:57:36,480

YouTube URL: https://www.youtube.com/watch?v=56HDTwyyutk


