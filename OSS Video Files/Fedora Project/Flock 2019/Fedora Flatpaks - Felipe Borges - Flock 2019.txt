Title: Fedora Flatpaks - Felipe Borges - Flock 2019
Publication date: 2019-08-28
Playlist: Flock 2019
Description: 
	Fedora Silverblue is the next-generation Fedora Workstation that promises painless upgrades, clear separation between the OS and applications, and secure and cross-platform applications. The basic operating system is an immutable OSTree image, and all the applications are Flatpaks.

In this talk we will present the existing infrastructure to create Flatpaks out of Fedora packages, and detail the process of converting a RPM into a Flatpak by demonstrating it live.

--
Recordings of talks at Flock are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:00,650 --> 00:00:05,870
so my name is Philip borders I work on

00:00:03,469 --> 00:00:08,390
the desktop team in Red Hat for a few

00:00:05,870 --> 00:00:11,150
years and I mostly work upstream on

00:00:08,390 --> 00:00:13,099
Ganahl and I've been started I start to

00:00:11,150 --> 00:00:15,259
be passionated about flood packs and

00:00:13,099 --> 00:00:19,040
changing the distribution model and

00:00:15,259 --> 00:00:20,780
super blue so yeah I'm going to talk

00:00:19,040 --> 00:00:23,750
today about the the fedora foot packs

00:00:20,780 --> 00:00:26,060
which are Fedora specific flood text

00:00:23,750 --> 00:00:28,910
building Fedora infrastructure and we

00:00:26,060 --> 00:00:32,419
are going to cover why we are doing this

00:00:28,910 --> 00:00:33,920
and how we are doing this so the first

00:00:32,419 --> 00:00:36,199
things the first concepts I would like

00:00:33,920 --> 00:00:39,499
to cover is the anatomy of a flood pack

00:00:36,199 --> 00:00:41,510
and then explain a bit of blue and I

00:00:39,499 --> 00:00:46,190
hope everything is going to make sense

00:00:41,510 --> 00:00:48,350
in the motivation part so flat pack is a

00:00:46,190 --> 00:00:50,030
application distribution model which is

00:00:48,350 --> 00:00:52,010
based on containers and the apps are

00:00:50,030 --> 00:00:55,730
bundle inside containers so you have

00:00:52,010 --> 00:00:57,890
this runtime which is slash user on your

00:00:55,730 --> 00:00:59,409
classic system which has the the common

00:00:57,890 --> 00:01:02,120
libraries that would come in a

00:00:59,409 --> 00:01:03,949
traditional image and then you have the

00:01:02,120 --> 00:01:07,670
applications which ship more specialized

00:01:03,949 --> 00:01:11,210
more specialized libraries bundled with

00:01:07,670 --> 00:01:12,680
them and the greatness about this is

00:01:11,210 --> 00:01:14,960
that you don't need to target a specific

00:01:12,680 --> 00:01:16,850
version of OS and you can just target

00:01:14,960 --> 00:01:18,530
specific version of a runtime and you

00:01:16,850 --> 00:01:21,380
can have multiple simultaneous runtimes

00:01:18,530 --> 00:01:22,910
running on your system and we can just

00:01:21,380 --> 00:01:28,820
source the runtime to the application

00:01:22,910 --> 00:01:30,170
and that's what it works and fedora

00:01:28,820 --> 00:01:32,390
super glue is the other concept that

00:01:30,170 --> 00:01:35,570
made us try to create federal flood

00:01:32,390 --> 00:01:38,720
packs because in as you heard lots today

00:01:35,570 --> 00:01:41,390
in federal silver blue applications are

00:01:38,720 --> 00:01:44,480
containers right the the basic system is

00:01:41,390 --> 00:01:46,280
pretty solid immutable and everything

00:01:44,480 --> 00:01:47,840
you want to ship on top of it should be

00:01:46,280 --> 00:01:50,090
on a container and containers can be

00:01:47,840 --> 00:01:51,350
bottom and docker containers for there

00:01:50,090 --> 00:01:53,710
are two blocks which are specialized

00:01:51,350 --> 00:01:59,840
containers that the bar she spoke and

00:01:53,710 --> 00:02:02,030
flatbacks Rushfield because i guess you

00:01:59,840 --> 00:02:05,780
already heard a lot of silver blow today

00:02:02,030 --> 00:02:10,219
so why if you see the anatomy of a flat

00:02:05,780 --> 00:02:11,689
pack in practice I'm going to I am the

00:02:10,219 --> 00:02:13,730
maintainer of known boxes upstream and

00:02:11,689 --> 00:02:16,069
the boxes has a flat pack in

00:02:13,730 --> 00:02:17,769
in flat hub and this is how the

00:02:16,069 --> 00:02:22,519
flat-pack manifest looks like four boxes

00:02:17,769 --> 00:02:23,810
so here we just described the beauty

00:02:22,519 --> 00:02:25,819
instructions and how the flat pack is

00:02:23,810 --> 00:02:28,370
composed and you can notice here on the

00:02:25,819 --> 00:02:30,380
beauty instructions all the the modules

00:02:28,370 --> 00:02:32,660
that are bundled together and how we

00:02:30,380 --> 00:02:35,269
need to still specify versions build

00:02:32,660 --> 00:02:37,430
systems I'm just going to go down here

00:02:35,269 --> 00:02:41,900
here we are setting config options for

00:02:37,430 --> 00:02:45,980
USB then here see make specifics here we

00:02:41,900 --> 00:02:48,200
are also passing config options and down

00:02:45,980 --> 00:02:49,640
here I guess we have some Bechet yeah

00:02:48,200 --> 00:02:53,739
yeah we are even scripting the

00:02:49,640 --> 00:02:57,890
installation because so peyten

00:02:53,739 --> 00:02:59,060
yeah here for instance we have spice gtk

00:02:57,890 --> 00:03:02,599
with some patches that we are carrying

00:02:59,060 --> 00:03:04,400
on and if you look at the Fedora

00:03:02,599 --> 00:03:05,870
repositories you notice that is actually

00:03:04,400 --> 00:03:09,200
a great collection of building

00:03:05,870 --> 00:03:12,140
structures for everything that Fedora

00:03:09,200 --> 00:03:13,970
maintainer x' have 15 years plus

00:03:12,140 --> 00:03:16,760
experience on building stuff they have

00:03:13,970 --> 00:03:19,510
credibility we have a security model of

00:03:16,760 --> 00:03:21,880
bringing people on the community and

00:03:19,510 --> 00:03:24,799
that's something we should be leveraging

00:03:21,880 --> 00:03:26,030
especially because flat pack has this

00:03:24,799 --> 00:03:28,040
distributed model where you can have

00:03:26,030 --> 00:03:31,280
various repositories and if you are

00:03:28,040 --> 00:03:34,880
willing to trust source to flat pack

00:03:31,280 --> 00:03:35,180
builds from flat hub just go for it

00:03:34,880 --> 00:03:37,790
right

00:03:35,180 --> 00:03:39,859
one doesn't exclude the other but if you

00:03:37,790 --> 00:03:41,959
trust fedora more and you want to try

00:03:39,859 --> 00:03:44,079
federal flood packs we have an

00:03:41,959 --> 00:03:47,090
alternative for you so it's all about

00:03:44,079 --> 00:03:53,389
option and those are not mutually

00:03:47,090 --> 00:03:55,760
exclusive and yeah I guess if we go to

00:03:53,389 --> 00:03:57,889
flat hub if you also showed it on his

00:03:55,760 --> 00:03:59,599
presentation today we have around 600

00:03:57,889 --> 00:04:02,989
apps there and Fedora has thousands of

00:03:59,599 --> 00:04:05,660
apps and our current registry has 50 and

00:04:02,989 --> 00:04:07,160
these I have here a Grom software recent

00:04:05,660 --> 00:04:08,450
change that actually allows you to

00:04:07,160 --> 00:04:09,769
choose the source where you're

00:04:08,450 --> 00:04:11,690
downloading our application so this is

00:04:09,769 --> 00:04:18,440
our like these things I just described

00:04:11,690 --> 00:04:20,979
to you coming out to life so here for

00:04:18,440 --> 00:04:23,210
instance if I would do a flatback remote

00:04:20,979 --> 00:04:24,190
LS in the internet connection is going

00:04:23,210 --> 00:04:29,380
to work

00:04:24,190 --> 00:04:30,820
and Fedora testing yeah here you can see

00:04:29,380 --> 00:04:34,390
everything that we have already on the

00:04:30,820 --> 00:04:41,920
federal repository and it's much more to

00:04:34,390 --> 00:04:44,350
come we're going to sorry so how do the

00:04:41,920 --> 00:04:46,180
photographer PACs are composed you saw

00:04:44,350 --> 00:04:49,090
it there front of boxes manifest that

00:04:46,180 --> 00:04:51,250
fat pack builder reads that manifests

00:04:49,090 --> 00:04:55,570
with a list of source codes and just

00:04:51,250 --> 00:04:57,940
composes a flat pack container and in

00:04:55,570 --> 00:05:00,480
Federer we have modularity which allows

00:04:57,940 --> 00:05:04,990
us to group package packs together and

00:05:00,480 --> 00:05:06,370
and we can compose application

00:05:04,990 --> 00:05:08,020
containers without using flat pack

00:05:06,370 --> 00:05:12,580
builder but using modularity to

00:05:08,020 --> 00:05:14,680
orchestrate the build the only issue is

00:05:12,580 --> 00:05:15,610
that as I described in the beginning

00:05:14,680 --> 00:05:17,650
that the flat pack has the different

00:05:15,610 --> 00:05:28,000
prefixes for for the application stuff

00:05:17,650 --> 00:05:30,570
so if I for instance would and I open a

00:05:28,000 --> 00:05:33,250
batch session inside the genome boxes

00:05:30,570 --> 00:05:36,190
flat pack container so here you have the

00:05:33,250 --> 00:05:38,980
different icon there and if I go to LS

00:05:36,190 --> 00:05:43,050
app leap 64 to get the libraries which

00:05:38,980 --> 00:05:43,050
are bundle inside with boxes

00:05:50,790 --> 00:05:59,550
oh yeah that's true so here you can see

00:05:57,540 --> 00:06:00,900
it live here to leave us be and all

00:05:59,550 --> 00:06:04,590
those things that you saw before in the

00:06:00,900 --> 00:06:08,160
manifest and these are in the way that

00:06:04,590 --> 00:06:14,780
this there is less a prefix why oh if I

00:06:08,160 --> 00:06:14,780
would go to to the Fedora project sorry

00:06:18,860 --> 00:06:23,640
yeah if spec files are using live dear

00:06:21,660 --> 00:06:25,290
that should probably be resolved but

00:06:23,640 --> 00:06:26,700
many of them are not and when I'm going

00:06:25,290 --> 00:06:28,710
to get to the details about how am i

00:06:26,700 --> 00:06:30,990
building things you see that most of the

00:06:28,710 --> 00:06:32,910
the painful job is fixing spec files

00:06:30,990 --> 00:06:36,060
which are not compliant to the the specs

00:06:32,910 --> 00:06:38,820
and so here for instance I will just

00:06:36,060 --> 00:06:42,060
show you a little bit how the federal

00:06:38,820 --> 00:06:45,830
project the federal runtime looks like

00:06:42,060 --> 00:06:45,830
so if I go to you user you can see that

00:06:49,550 --> 00:06:53,730
you can see what we have inside which

00:06:51,840 --> 00:06:56,040
are the basic building blocks on the

00:06:53,730 --> 00:06:57,870
runtime that ideally would be removed

00:06:56,040 --> 00:06:59,520
from the basic image on Fedora severe

00:06:57,870 --> 00:07:02,490
blue so you're actually not having

00:06:59,520 --> 00:07:05,430
duplicated files although OS 3 should be

00:07:02,490 --> 00:07:08,040
able to handle the duplicated files as

00:07:05,430 --> 00:07:11,880
well so the way we do is that we compose

00:07:08,040 --> 00:07:14,070
an associate images and OCR images our

00:07:11,880 --> 00:07:15,810
container so we distribute them as

00:07:14,070 --> 00:07:18,270
containers the registry that fedora

00:07:15,810 --> 00:07:20,040
project org is where federal containers

00:07:18,270 --> 00:07:24,780
are and the flat-pack apps are there as

00:07:20,040 --> 00:07:30,360
well so how we do it so we have a set of

00:07:24,780 --> 00:07:34,080
tools that can generate the basic

00:07:30,360 --> 00:07:36,780
modules for composing a flat back so I'm

00:07:34,080 --> 00:07:39,390
using a wings for my presentation so I'm

00:07:36,780 --> 00:07:40,290
going to show you how how it looks like

00:07:39,390 --> 00:07:42,600
a composer

00:07:40,290 --> 00:07:45,510
I've ins flat back from the avians RPM

00:07:42,600 --> 00:07:48,420
so we have this two fat mod and it can a

00:07:45,510 --> 00:07:51,060
set the RPM to flat pack here I can pass

00:07:48,420 --> 00:07:53,480
flat pack common which are the basic

00:07:51,060 --> 00:07:58,650
building blocks for for composing the

00:07:53,480 --> 00:08:00,300
the module and the container file and it

00:07:58,650 --> 00:08:02,940
has a very interesting option that I can

00:08:00,300 --> 00:08:04,230
pass a flat hub flag and so it is gonna

00:08:02,940 --> 00:08:07,560
copy the the permission

00:08:04,230 --> 00:08:09,060
and all the the holes in the in the

00:08:07,560 --> 00:08:12,030
container they have been poked on a

00:08:09,060 --> 00:08:13,890
Vin's upstream on flat hub so if your

00:08:12,030 --> 00:08:17,100
application is already on flat hub you

00:08:13,890 --> 00:08:19,560
can benefit from not having to to do the

00:08:17,100 --> 00:08:23,790
discovery of what your application needs

00:08:19,560 --> 00:08:27,480
to talk to and all so Vince and here

00:08:23,790 --> 00:08:29,760
Vince is the name of the RPM package so

00:08:27,480 --> 00:08:33,290
just wait a bit I hope the network is

00:08:29,760 --> 00:08:33,290
going to be on my side this time around

00:08:34,460 --> 00:08:38,880
so it's just going to produce two

00:08:36,510 --> 00:08:54,210
artifacts which are the basic for

00:08:38,880 --> 00:08:55,950
building oh gosh this is alright so

00:08:54,210 --> 00:08:58,290
there we go so we have basically these

00:08:55,950 --> 00:09:00,900
two files the container mo5 and the

00:08:58,290 --> 00:09:04,380
Vince llamo file I'm going to check this

00:09:00,900 --> 00:09:06,900
Vince llamo file and you can see it's a

00:09:04,380 --> 00:09:10,830
basic module file from modularity has a

00:09:06,900 --> 00:09:13,110
big basic description of it and here we

00:09:10,830 --> 00:09:14,820
have the beauty requires which tell the

00:09:13,110 --> 00:09:16,560
version of the runtime we are creating

00:09:14,820 --> 00:09:18,540
runtimes based on federal versions so

00:09:16,560 --> 00:09:20,520
they'll be a fedora 30 if it R 31

00:09:18,540 --> 00:09:23,130
runtime and these are all based on the

00:09:20,520 --> 00:09:25,460
free desktop runtime but ideally people

00:09:23,130 --> 00:09:27,900
should be able to create runtimes and

00:09:25,460 --> 00:09:29,520
that's the bar here in the bottom we

00:09:27,900 --> 00:09:31,560
have the components so if you can set

00:09:29,520 --> 00:09:32,760
this parallel from the source of boxes

00:09:31,560 --> 00:09:34,530
we are looking before and now the

00:09:32,760 --> 00:09:37,050
aleene's one you see here that we are

00:09:34,530 --> 00:09:38,910
building if Vince itself and then these

00:09:37,050 --> 00:09:42,000
specific libraries that are bundled

00:09:38,910 --> 00:09:45,350
together so if this is a PDF reader and

00:09:42,000 --> 00:09:47,610
you need respect for that and so on

00:09:45,350 --> 00:09:49,140
great thing about this we can set here

00:09:47,610 --> 00:09:52,680
the ref which can be a different branch

00:09:49,140 --> 00:09:57,060
so if your application depends on on a

00:09:52,680 --> 00:09:59,850
version on a branch of an RPM that that

00:09:57,060 --> 00:10:02,130
it's newer than then e current is or

00:09:59,850 --> 00:10:05,220
older Dennis I would be able to tell

00:10:02,130 --> 00:10:07,050
Vince to to you sleep spec from Fedora

00:10:05,220 --> 00:10:09,480
29 and that will be included in the

00:10:07,050 --> 00:10:13,290
bundle if I go to the container file

00:10:09,480 --> 00:10:14,970
though here I have the the container

00:10:13,290 --> 00:10:16,460
permission so I'm pretty much just

00:10:14,970 --> 00:10:18,470
telling it that

00:10:16,460 --> 00:10:22,420
you should use certain portals you

00:10:18,470 --> 00:10:24,650
should have access to D cones and

00:10:22,420 --> 00:10:27,410
certain environmental Flags that can be

00:10:24,650 --> 00:10:30,920
set and that's about it these are the

00:10:27,410 --> 00:10:32,740
two artifacts and we use this tool

00:10:30,920 --> 00:10:35,210
called flat pack module that is going to

00:10:32,740 --> 00:10:36,980
reboot everything because since we are

00:10:35,210 --> 00:10:38,270
setting a different prefix everything

00:10:36,980 --> 00:10:40,460
needs to be reviewed so we cannot just

00:10:38,270 --> 00:10:42,260
get the builds already existing and just

00:10:40,460 --> 00:10:45,650
put them together on flat packs

00:10:42,260 --> 00:10:47,360
unfortunately and we fight back module

00:10:45,650 --> 00:10:51,350
you can produce this all locally it's

00:10:47,360 --> 00:10:53,300
going to bring it's going to bring walk

00:10:51,350 --> 00:10:55,910
and make the local builds for you and

00:10:53,300 --> 00:10:58,490
it's going to take a while if you notice

00:10:55,910 --> 00:11:01,490
in eg and Tamar stock they said we still

00:10:58,490 --> 00:11:05,180
have a problem with cache because we are

00:11:01,490 --> 00:11:06,950
not using OS 3 and and things so we are

00:11:05,180 --> 00:11:09,560
still rebuilding things all the time and

00:11:06,950 --> 00:11:10,490
then we have fed pkg which is the

00:11:09,560 --> 00:11:12,260
traditional ooh you've been using

00:11:10,490 --> 00:11:15,280
already for your normal packages and

00:11:12,260 --> 00:11:17,570
it's able to build containers now and

00:11:15,280 --> 00:11:20,120
you can build them in coding federal

00:11:17,570 --> 00:11:21,800
infrastructure and that's how you get

00:11:20,120 --> 00:11:24,710
something on the repository in the

00:11:21,800 --> 00:11:28,010
registry you just need to fire a bode

00:11:24,710 --> 00:11:32,450
update with your beaut and that's about

00:11:28,010 --> 00:11:34,070
it yesterday we had this keynote speaker

00:11:32,450 --> 00:11:38,390
and she had like this African proverb

00:11:34,070 --> 00:11:40,040
about if you want to go fast go alone if

00:11:38,390 --> 00:11:43,450
you want to go far you should go

00:11:40,040 --> 00:11:46,040
together and nowadays in Red Hat we have

00:11:43,450 --> 00:11:48,830
three interns working on this effort of

00:11:46,040 --> 00:11:50,210
converting rpms to flat-pack myself and

00:11:48,830 --> 00:11:54,230
a few colleagues but we are still a

00:11:50,210 --> 00:11:57,380
handful of people and imagine them the

00:11:54,230 --> 00:11:59,510
maintenance burden of later on people

00:11:57,380 --> 00:12:02,870
are using fedora flat packs and we need

00:11:59,510 --> 00:12:04,730
to fix specific things and also it would

00:12:02,870 --> 00:12:06,820
be very nice if more people get engaged

00:12:04,730 --> 00:12:09,170
and that's why we have this true

00:12:06,820 --> 00:12:11,450
starting points for you this first one

00:12:09,170 --> 00:12:15,080
describes detail by detail the process

00:12:11,450 --> 00:12:17,660
how to make the conversion and the

00:12:15,080 --> 00:12:20,240
second one we have a automatic generated

00:12:17,660 --> 00:12:21,440
list of easy to convert applications of

00:12:20,240 --> 00:12:23,000
the applications are sorted by the

00:12:21,440 --> 00:12:24,740
amount of dependencies they involved

00:12:23,000 --> 00:12:25,970
because since you are building the

00:12:24,740 --> 00:12:28,010
dependencies and you notice that the

00:12:25,970 --> 00:12:29,520
dependencies they need some changes on

00:12:28,010 --> 00:12:31,590
their spec file because they're using

00:12:29,520 --> 00:12:34,290
and prefixes another thing that is

00:12:31,590 --> 00:12:35,970
pretty common to fix is applications

00:12:34,290 --> 00:12:37,890
installing system the unit files and

00:12:35,970 --> 00:12:41,420
flat-pack doesn't allow you to put files

00:12:37,890 --> 00:12:44,010
in those locations and things ladies and

00:12:41,420 --> 00:12:46,110
so the more dependencies your

00:12:44,010 --> 00:12:48,150
application has harder it is I am

00:12:46,110 --> 00:12:50,700
working on boxes we have grown boxes on

00:12:48,150 --> 00:12:52,590
flat hub but the Fedora flat pack of gum

00:12:50,700 --> 00:12:55,140
boxes is still not coming out because

00:12:52,590 --> 00:12:57,180
leave weird kaymu free RDP these guys

00:12:55,140 --> 00:13:01,100
take hours to build all together in the

00:12:57,180 --> 00:13:03,390
same bundle and they just have very a

00:13:01,100 --> 00:13:04,980
huge variety of dependencies who need

00:13:03,390 --> 00:13:06,720
fixing because they're just not

00:13:04,980 --> 00:13:09,660
following the the spec file standard

00:13:06,720 --> 00:13:11,730
soon you need correction so also if you

00:13:09,660 --> 00:13:13,260
are a package maintainer and you're

00:13:11,730 --> 00:13:17,190
receiving pull request for us please

00:13:13,260 --> 00:13:19,080
save them because I'm now trying to

00:13:17,190 --> 00:13:21,810
bypass anybody's Authority so we are

00:13:19,080 --> 00:13:24,660
feeling poor requests to fix specific

00:13:21,810 --> 00:13:26,130
things that need to be fixed so we can

00:13:24,660 --> 00:13:29,310
still build and we have this flat pack

00:13:26,130 --> 00:13:31,500
rpm macros so we can still conditionally

00:13:29,310 --> 00:13:35,270
do things or flood pack and still

00:13:31,500 --> 00:13:35,270
maintain your old ways of doing things

00:13:50,610 --> 00:13:55,540
right for our shared libraries is mostly

00:13:54,070 --> 00:13:58,660
they are doing things wrong

00:13:55,540 --> 00:14:03,880
they are those hard coding paths manual

00:13:58,660 --> 00:14:05,710
files are format specific and/or they

00:14:03,880 --> 00:14:07,930
are calling binaries to produce

00:14:05,710 --> 00:14:10,780
artifacts and these binaries have the

00:14:07,930 --> 00:14:13,120
path hard-coded things that is and then

00:14:10,780 --> 00:14:14,530
when you get to more like services then

00:14:13,120 --> 00:14:16,840
you have flatback specific issues

00:14:14,530 --> 00:14:20,050
because they are putting unit files and

00:14:16,840 --> 00:14:21,460
they are really installing themselves

00:14:20,050 --> 00:14:23,080
into the system and they are very core

00:14:21,460 --> 00:14:26,140
components right so that that becomes

00:14:23,080 --> 00:14:27,580
hardware so automatic reviews is

00:14:26,140 --> 00:14:29,320
something that you would be very nice to

00:14:27,580 --> 00:14:31,780
have something that would be able to

00:14:29,320 --> 00:14:35,880
just monitor that a dependency has

00:14:31,780 --> 00:14:38,260
changed has been updated so rpm and

00:14:35,880 --> 00:14:40,570
reboot everything produced this bundle

00:14:38,260 --> 00:14:43,080
give to the maintainer tell them to test

00:14:40,570 --> 00:14:45,340
and everything is ok you can just

00:14:43,080 --> 00:14:47,140
authorize the change to go because I

00:14:45,340 --> 00:14:48,790
still would like to have for instance

00:14:47,140 --> 00:14:50,830
for as a boxer's maintainer I still have

00:14:48,790 --> 00:14:54,520
to have the the privilege or the

00:14:50,830 --> 00:14:56,470
authority to control not to have the the

00:14:54,520 --> 00:14:58,060
master of everything because sometimes

00:14:56,470 --> 00:14:59,170
people are introducing regressions

00:14:58,060 --> 00:15:01,450
because they are just not thinking about

00:14:59,170 --> 00:15:03,370
us in the application level because they

00:15:01,450 --> 00:15:06,880
are just working on some library that

00:15:03,370 --> 00:15:12,220
provides some feature for kemell locally

00:15:06,880 --> 00:15:14,530
branches in in flat hub we have branches

00:15:12,220 --> 00:15:17,020
for languages and you don't need to

00:15:14,530 --> 00:15:19,050
build the whole set of languages in

00:15:17,020 --> 00:15:21,430
within the same thing which reduces

00:15:19,050 --> 00:15:23,790
significantly the size of your package

00:15:21,430 --> 00:15:26,590
we are still not able to compose

00:15:23,790 --> 00:15:30,130
containers splitting the languages out

00:15:26,590 --> 00:15:33,040
so we choose to go for just the c-loc

00:15:30,130 --> 00:15:35,410
Holly for now but ideally we would like

00:15:33,040 --> 00:15:38,110
to have a mechanism to download link

00:15:35,410 --> 00:15:39,340
packs or to provide languages port or

00:15:38,110 --> 00:15:40,720
integration this is something more like

00:15:39,340 --> 00:15:43,060
upstream for flat-tax still your

00:15:40,720 --> 00:15:45,220
converting rpms and most of them require

00:15:43,060 --> 00:15:47,140
access to things that flat pack is

00:15:45,220 --> 00:15:49,780
closing and we just don't have the

00:15:47,140 --> 00:15:53,110
portals of working on portals here I put

00:15:49,780 --> 00:15:54,460
a BRT but any other automatic bug report

00:15:53,110 --> 00:15:56,860
because since you don't have the debug

00:15:54,460 --> 00:16:00,529
info inside the container

00:15:56,860 --> 00:16:02,839
how do you just send a stack trace

00:16:00,529 --> 00:16:05,899
automatically to bugzilla it's still

00:16:02,839 --> 00:16:07,370
very it's very premature so if

00:16:05,899 --> 00:16:09,740
somebody's working maybe our key or

00:16:07,370 --> 00:16:11,750
something related to this please

00:16:09,740 --> 00:16:16,100
approaches they'll be very nice

00:16:11,750 --> 00:16:22,510
and yeah that's tonight I think I did in

00:16:16,100 --> 00:16:24,740
a good time so questions yeah I was

00:16:22,510 --> 00:16:26,209
going to go in details on super blow

00:16:24,740 --> 00:17:08,209
buddy and I realized everybody heard a

00:16:26,209 --> 00:17:17,179
lot about civil rule today hey does

00:17:08,209 --> 00:17:20,199
routine does really good to know I think

00:17:17,179 --> 00:17:20,199
that the computer is for

00:18:02,030 --> 00:18:05,180
[Music]

00:18:13,580 --> 00:18:17,399
it's natural evolution I think most of

00:18:16,470 --> 00:18:19,470
things will just be build up

00:18:17,399 --> 00:18:20,609
individually as snippets and prototypes

00:18:19,470 --> 00:18:26,220
and later on they're gonna become part

00:18:20,609 --> 00:18:30,919
of real life important software any more

00:18:26,220 --> 00:18:30,919
questions additional comments please

00:18:34,609 --> 00:18:41,460
right we have this list of the the

00:18:39,509 --> 00:18:46,519
flat-pack sorted by by how hard it is

00:18:41,460 --> 00:18:49,499
and it's already filtered by by whole

00:18:46,519 --> 00:18:52,559
how much we want them like the the

00:18:49,499 --> 00:18:58,169
colors are the levels and the order is

00:18:52,559 --> 00:18:59,519
how how much the they need to be done so

00:18:58,169 --> 00:19:01,499
here we have like some people assigned

00:18:59,519 --> 00:19:05,580
to them but many of them are like still

00:19:01,499 --> 00:19:08,580
yet to do is eat Agassi hear me out that

00:19:05,580 --> 00:19:11,450
you asked before he was done so there's

00:19:08,580 --> 00:19:14,549
this wiki page with the the apps ideally

00:19:11,450 --> 00:19:16,379
most of them right I I guess everybody

00:19:14,549 --> 00:19:20,779
should have an alternative to use fedora

00:19:16,379 --> 00:19:20,779
curated certificated

00:19:44,850 --> 00:20:09,790
like a percentage of it could be done

00:20:06,460 --> 00:20:12,190
but the the that's like as the the

00:20:09,790 --> 00:20:13,810
African from very like they could be

00:20:12,190 --> 00:20:15,610
done I could be packaging every day and

00:20:13,810 --> 00:20:18,310
I will produce like a thousand artifacts

00:20:15,610 --> 00:20:19,660
but once they break you would be very

00:20:18,310 --> 00:20:22,060
nice together to build up a community

00:20:19,660 --> 00:20:23,710
around the affort and get people to take

00:20:22,060 --> 00:20:41,860
care especially people who have

00:20:23,710 --> 00:20:43,780
expertise on these fields really yeah if

00:20:41,860 --> 00:20:45,490
I consider the most of packages kind of

00:20:43,780 --> 00:20:47,290
like a handful of dependencies and I'm

00:20:45,490 --> 00:20:50,500
just fixing one and through here I would

00:20:47,290 --> 00:20:53,290
say probably yeah that yeah at least

00:20:50,500 --> 00:20:55,720
four boxes we have 32 dependencies I've

00:20:53,290 --> 00:20:57,640
been fixing four or five but these are

00:20:55,720 --> 00:20:59,410
very specific with their camo and all

00:20:57,640 --> 00:21:01,990
but most of the other packages there is

00:20:59,410 --> 00:21:04,510
one or trooper per dependency I would

00:21:01,990 --> 00:21:12,090
say 90% is is reasonable still a

00:21:04,510 --> 00:21:12,090
thousand packages 90% good math please

00:21:20,470 --> 00:21:23,569
[Music]

00:21:37,049 --> 00:21:44,529
that's the one I probably asked Alex

00:21:40,119 --> 00:21:47,109
about this one better I yeah III we

00:21:44,529 --> 00:21:49,119
don't know how to how to answer that one

00:21:47,109 --> 00:21:51,779
yeah if you'd be worth it or not but

00:21:49,119 --> 00:21:51,779
make sense

00:22:35,280 --> 00:23:15,610
definitely forward a question no I don't

00:23:12,070 --> 00:23:17,500
think so I think Owen did a little bit

00:23:15,610 --> 00:23:19,060
of filtering on them yeah I don't know

00:23:17,500 --> 00:23:32,500
what's the criteria to filter them but

00:23:19,060 --> 00:23:34,180
yeah yeah and I also he sorry to

00:23:32,500 --> 00:23:37,600
interrupt you but I think there he also

00:23:34,180 --> 00:23:39,030
limited to to the last table of

00:23:37,600 --> 00:23:41,310
dependencies which is definitely not

00:23:39,030 --> 00:23:44,650
yeah I think it's up to five

00:23:41,310 --> 00:23:48,460
dependencies so they are easy to fly by

00:23:44,650 --> 00:23:53,290
the pages flap against it so so boxes

00:23:48,460 --> 00:23:59,650
with them would have it in a more

00:23:53,290 --> 00:24:04,320
comments alright so thanks everybody and

00:23:59,650 --> 00:24:04,320
have a great boat trip today

00:24:06,610 --> 00:24:09,740

YouTube URL: https://www.youtube.com/watch?v=BKkk31-ijvI


