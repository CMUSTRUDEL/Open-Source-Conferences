Title: Let the bot create your releases - Marek MaruÅ¡in - Flock 2019
Publication date: 2019-09-02
Playlist: Flock 2019
Description: 
	If you are repository maintainer and if you like automatization and making your life easier you can be also interested in release-bot. Release-bot helps upstream maintainers deliver their software to users, via automated releases at GitHub and PyPI. Just create an issue in your repository and bot will make its job and create a new release on PyPi/Github/Pagure in a minute. In this short 25 min talk, we will look at release-bot closer. Show how we can configure it and what is the release-bot future. 

--
Recordings of talks at Flock are a community effort.  Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:01,810 --> 00:00:11,459
hello everyone I am glad to see you here

00:00:06,450 --> 00:00:15,099
so my name is Marek marushin and I am a

00:00:11,459 --> 00:00:17,860
participant of one of many summer coding

00:00:15,099 --> 00:00:20,500
programs as actually disease google

00:00:17,860 --> 00:00:22,420
Summer of Code so I'm part of federal

00:00:20,500 --> 00:00:25,690
community around I don't know three

00:00:22,420 --> 00:00:28,390
months and before I start talking about

00:00:25,690 --> 00:00:31,870
one great automation tool I would just

00:00:28,390 --> 00:00:33,700
like to thank my mentors and and their

00:00:31,870 --> 00:00:36,820
team who really helped me with a lot of

00:00:33,700 --> 00:00:40,030
technical stuff and I think without them

00:00:36,820 --> 00:00:44,050
I won't be here so I will be talking

00:00:40,030 --> 00:00:46,539
about release boot release bot is

00:00:44,050 --> 00:00:49,449
especially useful when you are upstream

00:00:46,539 --> 00:00:54,309
developer or when you are maintaining of

00:00:49,449 --> 00:00:57,999
some project because as we know we still

00:00:54,309 --> 00:01:01,030
need to do quite a lot of manually when

00:00:57,999 --> 00:01:03,429
you work and hard work and actually

00:01:01,030 --> 00:01:08,350
that's why we are working on a release

00:01:03,429 --> 00:01:10,360
bot because imagine that you just

00:01:08,350 --> 00:01:13,149
created some you are working on some

00:01:10,360 --> 00:01:16,869
great project you create some amazing

00:01:13,149 --> 00:01:20,530
code push it and merge some great pool

00:01:16,869 --> 00:01:23,140
requests and then you need to do this

00:01:20,530 --> 00:01:28,200
hard work like clicking and making

00:01:23,140 --> 00:01:32,979
releases applauding to PI API or

00:01:28,200 --> 00:01:36,759
packaging and etc so that's why we are

00:01:32,979 --> 00:01:38,950
working on a release boat and at current

00:01:36,759 --> 00:01:42,280
state release bod can create releases on

00:01:38,950 --> 00:01:45,009
PI PR pi PI github and we are working on

00:01:42,280 --> 00:01:47,640
parkour but actually I believe that

00:01:45,009 --> 00:01:51,130
maybe some some some some in the future

00:01:47,640 --> 00:01:53,170
we can also publish help like JavaScript

00:01:51,130 --> 00:01:57,630
developers or Ruby developers and and

00:01:53,170 --> 00:02:03,759
create some inhale I'll upload their

00:01:57,630 --> 00:02:06,579
packages online so I think you will like

00:02:03,759 --> 00:02:08,950
the concept of the release but it's it's

00:02:06,579 --> 00:02:14,560
working in five step steps actually it's

00:02:08,950 --> 00:02:18,010
four so step one us upstream developer

00:02:14,560 --> 00:02:20,950
can open an issue in your upstream

00:02:18,010 --> 00:02:24,310
repository which basically tree will

00:02:20,950 --> 00:02:27,910
trigger our release boat step 2

00:02:24,310 --> 00:02:31,570
release both is triggered and it will

00:02:27,910 --> 00:02:33,970
look on our repository maybe work with

00:02:31,570 --> 00:02:37,060
some changelog changes basically file

00:02:33,970 --> 00:02:39,910
which describe differences between

00:02:37,060 --> 00:02:45,660
versions and it will create a pull

00:02:39,910 --> 00:02:48,280
request then in step 3 us admire us

00:02:45,660 --> 00:02:51,400
option developer you just check the pull

00:02:48,280 --> 00:02:54,130
request if everything is ok and match it

00:02:51,400 --> 00:02:59,640
and that for reasonable just created to

00:02:54,130 --> 00:03:03,460
release on pipe I on github or pool so

00:02:59,640 --> 00:03:05,790
that's it and it just depends what you

00:03:03,460 --> 00:03:08,680
set up in your configuration files and

00:03:05,790 --> 00:03:11,560
the five step 5

00:03:08,680 --> 00:03:13,510
your users are just very very happy but

00:03:11,560 --> 00:03:15,880
who actually benefits from from the

00:03:13,510 --> 00:03:18,100
release bot it's you as a maintainer

00:03:15,880 --> 00:03:21,640
because you know you can just put your

00:03:18,100 --> 00:03:25,390
legs on the table or you just doing much

00:03:21,640 --> 00:03:29,560
important stuff today I actually

00:03:25,390 --> 00:03:31,690
prepared a live demo but I'm not sure

00:03:29,560 --> 00:03:34,150
how internet I found out Internet is

00:03:31,690 --> 00:03:35,820
really slow here so you'll see how it

00:03:34,150 --> 00:03:41,940
will work

00:03:35,820 --> 00:03:48,640
okay so here I I have like clean

00:03:41,940 --> 00:03:53,440
environment Titan environment and I will

00:03:48,640 --> 00:03:56,709
be working with our readme file or in

00:03:53,440 --> 00:03:58,930
our release bot repository it there is

00:03:56,709 --> 00:04:02,200
quite a lot of text but you will see

00:03:58,930 --> 00:04:05,739
that it's pretty easy to work with this

00:04:02,200 --> 00:04:08,440
readme so there are several modes how

00:04:05,739 --> 00:04:10,930
you can run a release but you can run it

00:04:08,440 --> 00:04:13,630
on your local machine you can run it on

00:04:10,930 --> 00:04:17,049
openshift and in to the future we are

00:04:13,630 --> 00:04:19,480
preparing github application to make

00:04:17,049 --> 00:04:21,340
your process much more more easier but

00:04:19,480 --> 00:04:27,400
today I will show you just this more

00:04:21,340 --> 00:04:28,139
most easier wait how can you set up your

00:04:27,400 --> 00:04:31,379
really spot

00:04:28,139 --> 00:04:38,189
your local machine so let's install our

00:04:31,379 --> 00:04:41,669
release bot and while it in standing I

00:04:38,189 --> 00:04:45,389
will create a new repository on github

00:04:41,669 --> 00:04:46,919
let's say it will be our project where

00:04:45,389 --> 00:04:56,270
we want to create our release it so

00:04:46,919 --> 00:04:56,270
let's called it like most amazing

00:04:56,779 --> 00:05:03,620
presentation and create the repository

00:05:04,849 --> 00:05:20,159
ok and actually I will chrome this

00:05:09,629 --> 00:05:24,659
repository into my workspace it's here I

00:05:20,159 --> 00:05:35,639
don't know if you can see it and I will

00:05:24,659 --> 00:05:37,589
go inside this project ok now I'm going

00:05:35,639 --> 00:05:39,479
to read me of the release bot and there

00:05:37,589 --> 00:05:41,669
are two ways how you can set up your

00:05:39,479 --> 00:05:44,219
this configuration where this

00:05:41,669 --> 00:05:46,080
configuration files one way is just run

00:05:44,219 --> 00:05:49,770
release put in it but actually I want to

00:05:46,080 --> 00:05:53,639
show you some manual configuration to

00:05:49,770 --> 00:05:56,069
understand what actually how it works so

00:05:53,639 --> 00:05:58,439
basically there are two configuration

00:05:56,069 --> 00:06:03,810
files one configuration file we need to

00:05:58,439 --> 00:06:05,430
set up into our repository because make

00:06:03,810 --> 00:06:08,099
repository like compatible of its

00:06:05,430 --> 00:06:09,810
release bots and second second

00:06:08,099 --> 00:06:12,810
configuration file we need because it

00:06:09,810 --> 00:06:15,149
will contain some sensitive data so

00:06:12,810 --> 00:06:17,879
let's create our first configuration

00:06:15,149 --> 00:06:23,460
file we have some examples here so I

00:06:17,879 --> 00:06:29,490
will basically copy paste it into our

00:06:23,460 --> 00:06:40,090
project so I will create new file copy

00:06:29,490 --> 00:06:43,820
paste and save it as release condo Tiamo

00:06:40,090 --> 00:06:46,940
okay so now I will go from the button

00:06:43,820 --> 00:06:49,790
and I will explain a little this

00:06:46,940 --> 00:06:52,100
configuration file so basically here we

00:06:49,790 --> 00:06:54,500
have some some labels because religious

00:06:52,100 --> 00:06:56,750
bodies working with issues and pull

00:06:54,500 --> 00:06:59,540
requests in your in your github

00:06:56,750 --> 00:07:03,590
repository so we want to sometimes label

00:06:59,540 --> 00:07:10,190
it so let's say we want labels like boat

00:07:03,590 --> 00:07:13,910
and frog 2019 for this demo we don't

00:07:10,190 --> 00:07:18,110
want a publish our list on PI pi PI so I

00:07:13,910 --> 00:07:21,740
will choose false and basically there is

00:07:18,110 --> 00:07:25,760
some information for for change or we

00:07:21,740 --> 00:07:30,140
don't need for for now but we need one

00:07:25,760 --> 00:07:33,710
more flag actually its trigger on issue

00:07:30,140 --> 00:07:36,500
and this one basically means that our

00:07:33,710 --> 00:07:39,260
release but will be triggered when a new

00:07:36,500 --> 00:07:42,230
issue will be open in our repository so

00:07:39,260 --> 00:07:44,680
let's save it and I will put it to the

00:07:42,230 --> 00:07:44,680
master

00:07:52,689 --> 00:07:55,689
Figg

00:08:01,059 --> 00:08:09,379
okay fine so now when i refresh our

00:08:05,869 --> 00:08:12,409
repository it should be there yes it is

00:08:09,379 --> 00:08:14,539
and the last thing we need to setup is

00:08:12,409 --> 00:08:16,879
our second configuration we have also

00:08:14,539 --> 00:08:21,769
some example here so I will copy paste

00:08:16,879 --> 00:08:25,969
it as well but there is one important

00:08:21,769 --> 00:08:28,449
thing we shouldn't as I told the second

00:08:25,969 --> 00:08:33,139
configuration file contains some

00:08:28,449 --> 00:08:35,750
sensitive data so we shouldn't save it

00:08:33,139 --> 00:08:37,939
into our like project repository we can

00:08:35,750 --> 00:08:41,000
save it in into our local machine or

00:08:37,939 --> 00:08:48,079
into some private with hub repository so

00:08:41,000 --> 00:08:52,459
I will go to to my workspace create a

00:08:48,079 --> 00:08:56,209
new file I will save it like cons Tiamo

00:08:52,459 --> 00:08:59,899
and it's quite intuitive so I will feel

00:08:56,209 --> 00:09:01,370
all the all the Flex but actually if you

00:08:59,899 --> 00:09:04,759
want to know more about this

00:09:01,370 --> 00:09:07,370
configuration files we have two tables

00:09:04,759 --> 00:09:09,170
one for each configuration file where

00:09:07,370 --> 00:09:11,209
you can know more about all these Flex

00:09:09,170 --> 00:09:15,819
is what you can what you can set up into

00:09:11,209 --> 00:09:20,530
your configuration so repository name is

00:09:15,819 --> 00:09:22,029
this new most amazing presentation

00:09:20,530 --> 00:09:26,689
[Music]

00:09:22,029 --> 00:09:33,319
repository opener it's me and we will

00:09:26,689 --> 00:09:38,209
need also github username it's also me

00:09:33,319 --> 00:09:40,100
and I will set setup refresh interval

00:09:38,209 --> 00:09:42,740
for 15 seconds

00:09:40,100 --> 00:09:44,990
actually when release both run on your

00:09:42,740 --> 00:09:46,819
local machine it's it's based on pooling

00:09:44,990 --> 00:09:50,269
so there is some infinity loop and every

00:09:46,819 --> 00:09:52,029
now 15 seconds it will wake up and check

00:09:50,269 --> 00:09:56,540
the repository if there is some new

00:09:52,029 --> 00:09:58,399
issues let's say but but when you run

00:09:56,540 --> 00:10:00,440
release both for example in open shift

00:09:58,399 --> 00:10:02,810
it works on web who

00:10:00,440 --> 00:10:07,940
so you just call you just create some

00:10:02,810 --> 00:10:09,740
webhook URL and and github itself will

00:10:07,940 --> 00:10:11,660
modify the release but there is some new

00:10:09,740 --> 00:10:15,140
action and i want to create a new

00:10:11,660 --> 00:10:20,170
release and the last thing i need to set

00:10:15,140 --> 00:10:28,340
up is my very secure token from github

00:10:20,170 --> 00:10:31,160
so i will set up here and okay i

00:10:28,340 --> 00:10:34,100
actually think this is everything you

00:10:31,160 --> 00:10:37,100
can see that setup configuration file

00:10:34,100 --> 00:10:42,380
files for use but it's quite easy stuff

00:10:37,100 --> 00:10:45,410
up to five minutes so now i will do last

00:10:42,380 --> 00:10:51,820
thing and it will be a go copy paste the

00:10:45,410 --> 00:10:51,820
command how to run our release bot so

00:10:52,270 --> 00:11:01,690
you go to our workspace so i want to run

00:10:56,870 --> 00:11:05,570
a release boat with configuration file

00:11:01,690 --> 00:11:07,790
cons llamo and the bug flag which

00:11:05,570 --> 00:11:10,970
basically means it will just show us

00:11:07,790 --> 00:11:20,330
some prints what what actually is about

00:11:10,970 --> 00:11:23,540
do so now i will run it now it's now

00:11:20,330 --> 00:11:25,910
it's sleeping for 15 seconds so let's go

00:11:23,540 --> 00:11:28,430
to our most amazing presentation and i

00:11:25,910 --> 00:11:32,270
will create our first issue which will

00:11:28,430 --> 00:11:35,780
trigger like creating a new issue but

00:11:32,270 --> 00:11:40,910
before i how to know in which format i

00:11:35,780 --> 00:11:43,370
can create such issues so let's create a

00:11:40,910 --> 00:11:47,360
new issue and in our readme there are

00:11:43,370 --> 00:11:50,000
all the format you can use actually so

00:11:47,360 --> 00:11:54,530
let's create a new issue in our

00:11:50,000 --> 00:11:59,390
presentation let's call it version 0 0 1

00:11:54,530 --> 00:12:02,750
release and submit this issue as we can

00:11:59,390 --> 00:12:04,940
see there is our first release and our

00:12:02,750 --> 00:12:12,550
body is sleeping for 15 seconds so let's

00:12:04,940 --> 00:12:17,160
wait for a while yes so now it's

00:12:12,550 --> 00:12:17,160
during the hard job hard work now and

00:12:18,690 --> 00:12:24,610
yeah now when i refresh a repository

00:12:21,760 --> 00:12:28,330
that is one closed issue there are our

00:12:24,610 --> 00:12:30,670
labels like both and frog 2019 when I

00:12:28,330 --> 00:12:32,590
open it there is some message from our

00:12:30,670 --> 00:12:35,440
release boat I just made a pull request

00:12:32,590 --> 00:12:38,620
for release version zero zero one and

00:12:35,440 --> 00:12:41,140
here is the link so I will open a

00:12:38,620 --> 00:12:43,330
reporter request there is actually again

00:12:41,140 --> 00:12:45,220
some message from our release bot and

00:12:43,330 --> 00:12:46,900
there is no change all provided I will

00:12:45,220 --> 00:12:50,680
fix it in a next step

00:12:46,900 --> 00:12:54,460
so let's merge this pull request

00:12:50,680 --> 00:12:56,950
it's merged now when I check our

00:12:54,460 --> 00:12:59,920
repository there is still there are

00:12:56,950 --> 00:13:10,300
still zero releases but and our body

00:12:59,920 --> 00:13:16,780
sleeping so let's wait for a while what

00:13:10,300 --> 00:13:20,290
do mean okay yes I can see okay so

00:13:16,780 --> 00:13:23,500
actually now here we have our first

00:13:20,290 --> 00:13:28,590
release made by our release but so quite

00:13:23,500 --> 00:13:33,820
quite easy stuff how to how to do this

00:13:28,590 --> 00:13:39,010
for now I just quit the race but for a

00:13:33,820 --> 00:13:43,380
while I will go to our project and I

00:13:39,010 --> 00:13:43,380
will create a change lock

00:13:54,970 --> 00:14:02,650
and to pull all all changes from our

00:13:58,270 --> 00:14:14,740
project and and I will applaud empty

00:14:02,650 --> 00:14:24,010
changelog but changelog it push origin

00:14:14,740 --> 00:14:31,740
let's put it to the master and again I

00:14:24,010 --> 00:14:31,740
will run our release boat okay stop it

00:14:42,070 --> 00:14:49,930
okay so now I will show the last thing

00:14:46,019 --> 00:14:53,259
let's create a new minor release let's

00:14:49,930 --> 00:14:58,980
go again into our project and create a

00:14:53,259 --> 00:15:04,600
new issue new issue new Maya release

00:14:58,980 --> 00:15:07,230
submit new issue and let's wait for our

00:15:04,600 --> 00:15:07,230
release bot

00:15:15,430 --> 00:15:27,670
okay so there is full request and here

00:15:24,730 --> 00:15:29,740
we can see the commit and what what's

00:15:27,670 --> 00:15:33,820
what's new in our change log actually we

00:15:29,740 --> 00:15:38,950
can also edit it when we want some

00:15:33,820 --> 00:15:46,900
changes so our change log from release

00:15:38,950 --> 00:15:55,330
bought and commit and let's let's just

00:15:46,900 --> 00:15:58,470
merge this ok now again let's wait for

00:15:55,330 --> 00:15:58,470
our release bot

00:16:11,710 --> 00:16:17,800
so nice now we should have like two

00:16:15,430 --> 00:16:21,399
releases and the second release also

00:16:17,800 --> 00:16:25,990
content message from the changelog so

00:16:21,399 --> 00:16:30,250
actually this is everything I wanted to

00:16:25,990 --> 00:16:33,209
show you today in the future actually

00:16:30,250 --> 00:16:36,279
this is my task for this summer I

00:16:33,209 --> 00:16:39,490
working on the github application so it

00:16:36,279 --> 00:16:45,580
must be much more easier to set release

00:16:39,490 --> 00:16:48,730
both on your repository and if you have

00:16:45,580 --> 00:16:59,800
any questions now you can ask me or mmm

00:16:48,730 --> 00:17:04,689
yes labels you can use labels just just

00:16:59,800 --> 00:17:07,569
if you want to use labels like you know

00:17:04,689 --> 00:17:10,839
when you have your upstream project here

00:17:07,569 --> 00:17:13,059
you have a lot of a lot of issues and

00:17:10,839 --> 00:17:16,030
you just want to know which is from your

00:17:13,059 --> 00:17:18,459
from your boat so there is labels from

00:17:16,030 --> 00:17:21,309
from from the boat actually and the same

00:17:18,459 --> 00:17:25,390
is for the pull request you know what of

00:17:21,309 --> 00:17:27,970
people using labeling just to find

00:17:25,390 --> 00:17:30,840
difference between between all the poor

00:17:27,970 --> 00:17:30,840
requests and issues

00:17:44,230 --> 00:18:04,100
hmm actually you you mean my project

00:18:00,350 --> 00:18:07,460
name I specified yes because we need to

00:18:04,100 --> 00:18:10,340
do this actually because this there are

00:18:07,460 --> 00:18:12,769
two configuration files and I used a

00:18:10,340 --> 00:18:16,549
project name in in the second one which

00:18:12,769 --> 00:18:19,129
is actually private because there are

00:18:16,549 --> 00:18:22,369
some sensitive information like github

00:18:19,129 --> 00:18:35,359
token so this won't be saved somewhere

00:18:22,369 --> 00:18:38,889
in within my project actually this is

00:18:35,359 --> 00:18:38,889
actually true I

00:18:45,970 --> 00:18:49,109
[Music]

00:19:34,789 --> 00:19:40,559
not yet not actually now we are working

00:19:38,370 --> 00:19:43,860
on this github application and we want

00:19:40,559 --> 00:19:45,750
to figure out how how to use one

00:19:43,860 --> 00:19:48,990
release both instance for more

00:19:45,750 --> 00:19:51,620
deployments actually and there are two

00:19:48,990 --> 00:19:55,530
ways like we can hard code it in

00:19:51,620 --> 00:19:58,200
configuration file all your repositories

00:19:55,530 --> 00:20:00,870
what you want to use or actually if you

00:19:58,200 --> 00:20:03,630
run a github application there will be

00:20:00,870 --> 00:20:07,470
the book so github itself will modify

00:20:03,630 --> 00:20:11,640
which project won't new really so then

00:20:07,470 --> 00:20:26,059
these these lines maybe will be just

00:20:11,640 --> 00:20:26,059
deleted I'm not yet what do you mean

00:20:41,309 --> 00:21:10,590
at the currents at this yes

00:21:17,740 --> 00:21:20,819
[Music]

00:21:31,200 --> 00:21:36,280
okay actually I'm here to Sunday so if

00:21:34,030 --> 00:21:39,610
you have more questions you can just

00:21:36,280 --> 00:21:42,760
find me here and I just would like to

00:21:39,610 --> 00:21:46,540
invite you for two more presentation one

00:21:42,760 --> 00:21:48,400
is here from Tomas is also for about

00:21:46,540 --> 00:21:50,800
releases and how to bring your upstream

00:21:48,400 --> 00:21:54,640
movies to Federer in one step so again

00:21:50,800 --> 00:21:56,980
some ultimate it is spec it yes and the

00:21:54,640 --> 00:21:59,430
second one is I think it's tomorrow

00:21:56,980 --> 00:22:01,510
morning it's federal summer coding

00:21:59,430 --> 00:22:05,340
showcase and and Meetup

00:22:01,510 --> 00:22:05,340

YouTube URL: https://www.youtube.com/watch?v=Rgnkxm58MFo


