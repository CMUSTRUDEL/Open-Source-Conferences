Title: Tales from the crypt: packaging horrors - Dominik Mierzejewski - Flock 2019
Publication date: 2019-09-02
Playlist: Flock 2019
Description: 
	I'm a long-time Fedora user (since the beginning) and contributor (since 2006). I'm a proven packager, sponsor and I served on the Fedora Packaging Committee for many years.

This talk will cover examples of the most egregious violations of best packaging practices I encountered in the wild personally. I will present real-life spec file excerpts, show which packaging guidelines are violated and explain how to do things properly. The audience is encouraged to bring their own examples.

--
Recordings of talks at Flock are a community effort.  Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:01,469 --> 00:00:04,860
hello everyone

00:00:05,310 --> 00:00:12,219
good afternoon welcome to my talk

00:00:09,660 --> 00:00:18,340
actually quite surprised to see so many

00:00:12,219 --> 00:00:21,869
people thank you for coming the title I

00:00:18,340 --> 00:00:26,169
wanted to make it a bit catchy

00:00:21,869 --> 00:00:29,619
maybe overdramatized but still let's

00:00:26,169 --> 00:00:34,329
begin so some of you already know me but

00:00:29,619 --> 00:00:36,520
my name is Dominique Mira have ski I go

00:00:34,329 --> 00:00:40,390
by the by the handle

00:00:36,520 --> 00:00:43,180
Rihan I have come attack direct comet

00:00:40,390 --> 00:00:47,260
access to around 100 packages in fedora

00:00:43,180 --> 00:00:51,190
but being a proven packager lets me

00:00:47,260 --> 00:00:55,780
touch a bit more I'm also a proven I'm

00:00:51,190 --> 00:01:00,070
also a sponsor hold or used to hold some

00:00:55,780 --> 00:01:02,350
other titles in fedora over the years

00:01:00,070 --> 00:01:03,969
because yeah I've been contributing to

00:01:02,350 --> 00:01:09,880
fedora for quite some time

00:01:03,969 --> 00:01:18,250
I think it's around 13 years now a long

00:01:09,880 --> 00:01:25,540
time here in time today so today talking

00:01:18,250 --> 00:01:27,700
about what what you should not do in the

00:01:25,540 --> 00:01:30,490
package isn't fortunately a federal

00:01:27,700 --> 00:01:34,120
guidelines prevent us from doing that or

00:01:30,490 --> 00:01:37,750
at least give us clear guidance but

00:01:34,120 --> 00:01:40,660
still outside fedora there's a whole

00:01:37,750 --> 00:01:43,210
world of RPM packages that don't follow

00:01:40,660 --> 00:01:47,890
those rules and I will show you some

00:01:43,210 --> 00:01:52,960
examples of things people do in those

00:01:47,890 --> 00:01:57,540
packages make you cringe to say the

00:01:52,960 --> 00:02:01,300
least but first I will give a brief

00:01:57,540 --> 00:02:07,810
overview our best packaging practices as

00:02:01,300 --> 00:02:10,979
a reminder to reference when going over

00:02:07,810 --> 00:02:10,979
each case that I have

00:02:13,510 --> 00:02:17,990
most of you at least those who are

00:02:16,670 --> 00:02:20,870
package maintainer should already know

00:02:17,990 --> 00:02:22,460
the best practices packaging and of

00:02:20,870 --> 00:02:30,020
course these apply not only to fedora

00:02:22,460 --> 00:02:32,620
but to software packaging in general in

00:02:30,020 --> 00:02:36,440
the package metadata we need to have

00:02:32,620 --> 00:02:39,320
explicit list of files that the package

00:02:36,440 --> 00:02:42,500
owns or wants to touch because as you

00:02:39,320 --> 00:02:51,680
know our RPM can be crappy and database

00:02:42,500 --> 00:02:55,820
can be great for the list we can we can

00:02:51,680 --> 00:02:57,770
ask our PM database what which package a

00:02:55,820 --> 00:03:01,850
given file belongs to and so that's very

00:02:57,770 --> 00:03:06,320
important for discoverability

00:03:01,850 --> 00:03:09,260
maintainability of packages and keeping

00:03:06,320 --> 00:03:12,560
track of what we have on the machine on

00:03:09,260 --> 00:03:17,210
the filesystem other important thing

00:03:12,560 --> 00:03:21,110
which is in sum which is in my opinion

00:03:17,210 --> 00:03:25,400
it has in my opinion become bit more

00:03:21,110 --> 00:03:28,250
difficult these days is the no no

00:03:25,400 --> 00:03:32,900
bundling policy which we used to have in

00:03:28,250 --> 00:03:36,110
Fedora which is now relaxed but because

00:03:32,900 --> 00:03:42,400
it has its pros and cons as many of you

00:03:36,110 --> 00:03:42,400
know but in general we should avoid

00:03:42,790 --> 00:03:49,910
bundling more than one software project

00:03:46,340 --> 00:03:53,650
in our package and try to make use of

00:03:49,910 --> 00:03:56,990
the libraries and other projects

00:03:53,650 --> 00:03:59,570
available in the distribution or if if

00:03:56,990 --> 00:04:03,230
if we are bringing an entire new stack

00:03:59,570 --> 00:04:05,900
of software each each each component

00:04:03,230 --> 00:04:09,180
should be packaged separately so that it

00:04:05,900 --> 00:04:10,810
can be reused by other new consumers

00:04:09,180 --> 00:04:14,870
[Music]

00:04:10,810 --> 00:04:16,870
following that is the Monday to use

00:04:14,870 --> 00:04:19,690
shared libraries as much as possible

00:04:16,870 --> 00:04:22,750
because as we all know a new detector

00:04:19,690 --> 00:04:25,280
security vulnerability in a library

00:04:22,750 --> 00:04:29,120
updating just that one with a fixed

00:04:25,280 --> 00:04:31,460
version fixes all its consumers Oh in

00:04:29,120 --> 00:04:38,539
theory it should fix all these consumers

00:04:31,460 --> 00:04:40,910
unless someone D someone built against a

00:04:38,539 --> 00:04:45,880
static version that one is to be rebuilt

00:04:40,910 --> 00:04:51,520
of course some software ecosystems like

00:04:45,880 --> 00:04:56,000
go or I think rust as well not very

00:04:51,520 --> 00:05:02,470
familiar with either they basically

00:04:56,000 --> 00:05:07,090
mandate rendering or bundling and maybe

00:05:02,470 --> 00:05:11,990
moving towards shared libraries but not

00:05:07,090 --> 00:05:14,750
not so fast so everything needs to be

00:05:11,990 --> 00:05:18,169
rebuilt with with each oh I think Kokomo

00:05:14,750 --> 00:05:20,900
as well needs to be everything needs to

00:05:18,169 --> 00:05:28,220
be rebuilt and there is a new compiler

00:05:20,900 --> 00:05:31,310
orders a new library version so another

00:05:28,220 --> 00:05:36,070
thing is well at least in in Fedora or

00:05:31,310 --> 00:05:38,870
in rpm ecosystem we don't really support

00:05:36,070 --> 00:05:42,280
interactive installations that there is

00:05:38,870 --> 00:05:45,320
no guarantee that there will be a live

00:05:42,280 --> 00:05:48,260
user or when the terminal present when

00:05:45,320 --> 00:05:51,949
an RPM is being installed so that's

00:05:48,260 --> 00:06:00,190
another thing to avoid in RPM packages

00:05:51,949 --> 00:06:00,190
and for mostly for security reasons but

00:06:02,710 --> 00:06:09,020
we cannot assume that the the user

00:06:06,130 --> 00:06:11,990
account under the under package under

00:06:09,020 --> 00:06:17,060
which a package is built is in any way

00:06:11,990 --> 00:06:17,540
privileged so we we do installations in

00:06:17,060 --> 00:06:20,240
a

00:06:17,540 --> 00:06:24,950
a subdirectory with what we have access

00:06:20,240 --> 00:06:28,960
to right but we don't touch the root

00:06:24,950 --> 00:06:34,040
file system during build nor should we

00:06:28,960 --> 00:06:36,590
and this is a distribution specific of

00:06:34,040 --> 00:06:38,630
course but in general around rpm package

00:06:36,590 --> 00:06:41,900
should integrate with the rest of the

00:06:38,630 --> 00:06:45,110
distribution well it should follow the

00:06:41,900 --> 00:06:49,820
defaults like for example we should

00:06:45,110 --> 00:06:53,210
follow cryptographic policy that we have

00:06:49,820 --> 00:06:57,050
in fedora the distributions have their

00:06:53,210 --> 00:07:00,800
own standards policies or quirks so it

00:06:57,050 --> 00:07:02,870
depends from district to district but as

00:07:00,800 --> 00:07:06,230
a general rule yeah we should integrate

00:07:02,870 --> 00:07:10,490
well for example firewall Deever society

00:07:06,230 --> 00:07:14,090
tables we have firewall derive as a

00:07:10,490 --> 00:07:20,270
default right now so if your package

00:07:14,090 --> 00:07:23,210
supports both well I mean if it support

00:07:20,270 --> 00:07:25,310
five ulti as well I hope if possible and

00:07:23,210 --> 00:07:28,160
and that should be the default but I

00:07:25,310 --> 00:07:31,250
think with boomin dependencies we can

00:07:28,160 --> 00:07:35,690
for example if we put things in a sub

00:07:31,250 --> 00:07:38,630
package 1 4 5 will d1 for IP tables you

00:07:35,690 --> 00:07:40,870
could get those installed automatically

00:07:38,630 --> 00:07:44,090
depending on what the user has installed

00:07:40,870 --> 00:07:46,520
just a thought and of course the build

00:07:44,090 --> 00:07:50,840
should be reproducible so each time you

00:07:46,520 --> 00:07:54,650
build from the same exact source or

00:07:50,840 --> 00:07:57,920
commit in this kit if you get the same

00:07:54,650 --> 00:08:00,440
package so like I think it's a it's also

00:07:57,920 --> 00:08:06,310
yeah it is codified in the guidelines

00:08:00,440 --> 00:08:06,310
that we should actually try to patch out

00:08:06,520 --> 00:08:11,960
dates or time stamps from from generated

00:08:09,860 --> 00:08:13,880
from files that are generated at Build

00:08:11,960 --> 00:08:17,990
time to help reproduce with

00:08:13,880 --> 00:08:21,350
reproducibility all right so let's move

00:08:17,990 --> 00:08:25,310
on to the interesting cases which I

00:08:21,350 --> 00:08:26,910
actually encountered in the wild mostly

00:08:25,310 --> 00:08:35,339
during my

00:08:26,910 --> 00:08:40,360
that's it so this was actually well I

00:08:35,339 --> 00:08:46,360
did edit the excerpts so that the guilty

00:08:40,360 --> 00:08:48,720
parties are not named but yeah this

00:08:46,360 --> 00:08:54,339
would be most mostly in the script words

00:08:48,720 --> 00:08:59,310
so this ties very well with recent

00:08:54,339 --> 00:09:10,210
proposal - what was it called - to make

00:08:59,310 --> 00:09:12,910
RPM packages archives instead of what

00:09:10,210 --> 00:09:17,050
was the phrase privilege escalation

00:09:12,910 --> 00:09:19,120
bumps something like that because the

00:09:17,050 --> 00:09:22,860
script does run as root during

00:09:19,120 --> 00:09:27,880
installation actual rpm installation so

00:09:22,860 --> 00:09:31,540
you have to be careful so what what was

00:09:27,880 --> 00:09:35,020
done wrong in that in that excerpt user

00:09:31,540 --> 00:09:38,560
in interaction right as I mentioned as

00:09:35,020 --> 00:09:42,330
the best practices dictate RPM packages

00:09:38,560 --> 00:09:46,480
are non interactive by design unlike

00:09:42,330 --> 00:09:49,380
typical G for example so we cannot

00:09:46,480 --> 00:09:53,680
assume there is a user or terminal and

00:09:49,380 --> 00:09:55,570
we should provide a safe working default

00:09:53,680 --> 00:09:59,950
configuration if there is a need for one

00:09:55,570 --> 00:10:03,040
or if it really requires manual

00:09:59,950 --> 00:10:07,060
intervention by an admin or I don't know

00:10:03,040 --> 00:10:11,080
some configuration management tool then

00:10:07,060 --> 00:10:14,200
there should be at least some

00:10:11,080 --> 00:10:16,839
documentation provided on what

00:10:14,200 --> 00:10:22,500
parameters need to be specified because

00:10:16,839 --> 00:10:22,500
they cannot be guessed or detected

00:10:23,030 --> 00:10:28,880
right so millionaire of course you won't

00:10:26,840 --> 00:10:31,970
you won't see that in fedora although I

00:10:28,880 --> 00:10:34,460
think there's one maybe a couple of

00:10:31,970 --> 00:10:38,710
packages which try to be a distribution

00:10:34,460 --> 00:10:42,200
agnostic but we don't do this in fedora

00:10:38,710 --> 00:10:44,560
outside people try to write packages

00:10:42,200 --> 00:10:47,360
right spec files for multiple

00:10:44,560 --> 00:10:51,380
distributions and they end up with with

00:10:47,360 --> 00:10:54,790
constructs like this and well in my

00:10:51,380 --> 00:10:58,910
opinion it's not not a good practice

00:10:54,790 --> 00:11:04,780
because it well it's of course nice to

00:10:58,910 --> 00:11:04,780
have everything in one place but

00:11:05,650 --> 00:11:10,880
depending on which with distribution

00:11:07,940 --> 00:11:14,930
versions you want supports the scripts

00:11:10,880 --> 00:11:17,900
can get unwieldy and actually harder to

00:11:14,930 --> 00:11:22,310
maintain so I think it's better to just

00:11:17,900 --> 00:11:26,080
have separate spec files for for each

00:11:22,310 --> 00:11:26,080
distribution that you want to support

00:11:26,380 --> 00:11:36,640
because it also can lead to having files

00:11:32,390 --> 00:11:39,200
that I mean dropped on the file system

00:11:36,640 --> 00:11:41,510
from inside the scriptlet and they will

00:11:39,200 --> 00:11:45,160
not be honed by RPM unless you take

00:11:41,510 --> 00:11:47,780
special care to do that using Ghost

00:11:45,160 --> 00:11:50,780
interactive in the in the file section

00:11:47,780 --> 00:11:53,690
so yeah it gets complicated so it's

00:11:50,780 --> 00:11:54,560
better one spec file for one

00:11:53,690 --> 00:11:57,380
distribution

00:11:54,560 --> 00:12:00,530
unless it's you know I mean even even

00:11:57,380 --> 00:12:02,900
between fedora and Antrel there are some

00:12:00,530 --> 00:12:06,050
differences for many packages you can

00:12:02,900 --> 00:12:08,710
have the same spec file and build

00:12:06,050 --> 00:12:13,370
everything from from the master branch

00:12:08,710 --> 00:12:16,150
but sometimes the dependencies are

00:12:13,370 --> 00:12:19,400
different and you have to enable/disable

00:12:16,150 --> 00:12:23,690
things in configure or whatever the

00:12:19,400 --> 00:12:26,240
builds in the real system is so gets

00:12:23,690 --> 00:12:28,290
gets complicated and to them to do it in

00:12:26,240 --> 00:12:32,680
one spec file

00:12:28,290 --> 00:12:33,790
it's this is not not not the worst what

00:12:32,680 --> 00:12:37,120
I would suggest

00:12:33,790 --> 00:12:40,980
like I said separate branches separates

00:12:37,120 --> 00:12:44,860
spec files for for each distribution and

00:12:40,980 --> 00:12:46,720
doing automated builds which there are a

00:12:44,860 --> 00:12:54,030
lot of talks about doing automated

00:12:46,720 --> 00:12:54,030
builds these days so choose your poison

00:12:54,650 --> 00:13:03,630
[Music]

00:12:55,980 --> 00:13:06,940
this one was a killer actually yeah that

00:13:03,630 --> 00:13:08,910
the package did drop files in a specific

00:13:06,940 --> 00:13:11,950
directory that it was afterwards

00:13:08,910 --> 00:13:15,130
removing in a post uninstall scriptlet

00:13:11,950 --> 00:13:17,590
but that developer didn't take into

00:13:15,130 --> 00:13:21,790
account that another package might also

00:13:17,590 --> 00:13:26,170
drop files in the same directory so when

00:13:21,790 --> 00:13:28,840
actually I had one outage when we were

00:13:26,170 --> 00:13:34,750
in stock uninstalling some like a sip

00:13:28,840 --> 00:13:36,220
package from from all servers and a few

00:13:34,750 --> 00:13:40,360
minutes after we did it

00:13:36,220 --> 00:13:42,510
a colleague called me hey my software

00:13:40,360 --> 00:13:47,560
stopped working what hey what you doing

00:13:42,510 --> 00:13:51,000
I'm starting some other package but all

00:13:47,560 --> 00:13:54,280
the files are gone then I went inside

00:13:51,000 --> 00:13:56,290
the click I didn't have I didn't you

00:13:54,280 --> 00:14:00,310
must have a spec file and just the

00:13:56,290 --> 00:14:04,030
binary rpm I saw this in the script okay

00:14:00,310 --> 00:14:06,580
yeah we know what to do just use no no

00:14:04,030 --> 00:14:14,530
scripts in this case and never install

00:14:06,580 --> 00:14:17,290
this again yeah so have to be careful

00:14:14,530 --> 00:14:19,570
which had directories so let rpm do its

00:14:17,290 --> 00:14:24,040
job at least everything inspector in the

00:14:19,570 --> 00:14:28,840
Files section and now if if there are

00:14:24,040 --> 00:14:32,410
files generated at runtime you can also

00:14:28,840 --> 00:14:37,240
list them in files using the ghost

00:14:32,410 --> 00:14:40,190
directive you can specify the expected

00:14:37,240 --> 00:14:44,600
attributes also as well so that

00:14:40,190 --> 00:14:47,090
rpm - and capital D also works to the

00:14:44,600 --> 00:14:51,160
extent that it can to verify that the

00:14:47,090 --> 00:14:53,570
the final mode and ownership so on so

00:14:51,160 --> 00:15:00,640
there are better solutions than just

00:14:53,570 --> 00:15:00,640
running RM - sheriff in in a scripted

00:15:11,560 --> 00:15:17,300
yeah it's at the comer not run any

00:15:15,260 --> 00:15:20,530
script let's and yes there is a way to

00:15:17,300 --> 00:15:23,530
rebuild a binary package I mean like

00:15:20,530 --> 00:15:27,140
reverse-engineer binary package together

00:15:23,530 --> 00:15:32,330
spec file from it there's a tool called

00:15:27,140 --> 00:15:35,570
RPM rebuild and actually I was surprised

00:15:32,330 --> 00:15:40,490
to find it I wasn't aware of it a couple

00:15:35,570 --> 00:15:45,820
of years ago but I when I found some

00:15:40,490 --> 00:15:49,280
some of my colleagues were doing

00:15:45,820 --> 00:15:55,790
releases of a new package versions using

00:15:49,280 --> 00:15:57,830
that - that made me cringe a lot but

00:15:55,790 --> 00:15:59,900
yeah it's it's a tool and it's it's

00:15:57,830 --> 00:16:05,390
usually useful when when you don't have

00:15:59,900 --> 00:16:07,130
access to to the sources I don't think

00:16:05,390 --> 00:16:11,150
it's even installed by default but it's

00:16:07,130 --> 00:16:12,740
it's there somewhere you can install it

00:16:11,150 --> 00:16:17,930
by path I don't remember the package

00:16:12,740 --> 00:16:20,870
name so yeah there are ways around that

00:16:17,930 --> 00:16:22,190
well if it's a you know vendor package

00:16:20,870 --> 00:16:24,860
that cannot be modified because

00:16:22,190 --> 00:16:30,260
otherwise is not supported and not much

00:16:24,860 --> 00:16:34,779
you can do yeah this one also

00:16:30,260 --> 00:16:38,889
interesting because I

00:16:34,779 --> 00:16:41,470
I explained to a colleague how to help

00:16:38,889 --> 00:16:44,019
to make proper RPM packages and the

00:16:41,470 --> 00:16:47,110
first the first of his releases was fine

00:16:44,019 --> 00:16:49,300
and then he released an update and then

00:16:47,110 --> 00:16:51,610
I found this in he in his updated

00:16:49,300 --> 00:16:55,089
package and I said what are you think

00:16:51,610 --> 00:16:57,699
man I think I told you how to do things

00:16:55,089 --> 00:17:00,389
properly I don't even remember the

00:16:57,699 --> 00:17:15,360
explanation but yeah that was terrible

00:17:00,389 --> 00:17:18,839
because with VMware product was that a

00:17:15,360 --> 00:17:31,960
player okay I actually haven't haven't

00:17:18,839 --> 00:17:34,240
touched that or use that yeah

00:17:31,960 --> 00:17:38,150
[Music]

00:17:34,240 --> 00:17:44,890
yeah I hibm IBM software does that a lot

00:17:38,150 --> 00:17:49,820
I think I tried to force what was some

00:17:44,890 --> 00:17:54,550
Tivoli monitoring agents into into a

00:17:49,820 --> 00:17:54,550
proper rpm then I found it was actually

00:17:55,000 --> 00:18:00,980
it was an installer turbo input an

00:17:58,850 --> 00:18:03,820
installer script which which also

00:18:00,980 --> 00:18:07,070
contained RPM binaries and it was

00:18:03,820 --> 00:18:10,280
installing RPM during the RPM packages

00:18:07,070 --> 00:18:13,040
during this install process so it was it

00:18:10,280 --> 00:18:16,010
was terrible but it's what you have to

00:18:13,040 --> 00:18:18,380
work with in a in a big company which

00:18:16,010 --> 00:18:31,280
which uses a lot of proprietary software

00:18:18,380 --> 00:18:36,590
so I mean yeah nothing against IBM's

00:18:31,280 --> 00:18:39,650
personally just some pieces of it so

00:18:36,590 --> 00:18:45,160
yeah don't do this

00:18:39,650 --> 00:18:47,660
just put extract everything in the

00:18:45,160 --> 00:18:51,920
section where it is supposed to which is

00:18:47,660 --> 00:18:55,210
install if if the software is stubborn

00:18:51,920 --> 00:18:57,470
and for example was asking for route

00:18:55,210 --> 00:19:00,679
during install because they they were

00:18:57,470 --> 00:19:02,840
assuming that an admin would just run

00:19:00,679 --> 00:19:07,100
their instance krypton you can try using

00:19:02,840 --> 00:19:11,090
fake root or sudo and it it works in

00:19:07,100 --> 00:19:17,570
most most cases so I recommend trying at

00:19:11,090 --> 00:19:18,860
least and worst case you can you can

00:19:17,570 --> 00:19:21,740
actually run the Installer in the

00:19:18,860 --> 00:19:24,950
install in a post install script word

00:19:21,740 --> 00:19:30,050
but then put every file in the file

00:19:24,950 --> 00:19:33,740
section and is ghost but that's the

00:19:30,050 --> 00:19:36,190
absolutely worst case I actually try

00:19:33,740 --> 00:19:36,190
that one

00:19:46,350 --> 00:20:01,180
yeah exactly there is no no terminal

00:19:51,340 --> 00:20:05,170
even so people do things and that that's

00:20:01,180 --> 00:20:08,490
what I first the names of the libraries

00:20:05,170 --> 00:20:13,030
are of course real the paths are not but

00:20:08,490 --> 00:20:18,150
we had a package that did something like

00:20:13,030 --> 00:20:21,570
that and then I I think I tried to

00:20:18,150 --> 00:20:24,400
uninstall Carl and it succeeded and then

00:20:21,570 --> 00:20:26,860
something else stopped working because

00:20:24,400 --> 00:20:29,350
the car was already well late Carl in

00:20:26,860 --> 00:20:31,630
this case was already provided by my

00:20:29,350 --> 00:20:35,200
parents oh yeah I mean this is bundling

00:20:31,630 --> 00:20:41,020
right and bundling of things that we

00:20:35,200 --> 00:20:42,550
have in in the main distribution so you

00:20:41,020 --> 00:20:48,280
can of course do bonding but do it

00:20:42,550 --> 00:20:50,710
properly and and filter out those pipe

00:20:48,280 --> 00:20:52,600
duplicated libraries from from the

00:20:50,710 --> 00:21:01,330
metadata so they they are not exposed to

00:20:52,600 --> 00:21:03,520
OPM database and don't conflict or make

00:21:01,330 --> 00:21:05,230
your software pretend that it provides

00:21:03,520 --> 00:21:11,080
something that's not for general

00:21:05,230 --> 00:21:16,570
consumption so that's that's why tools

00:21:11,080 --> 00:21:17,080
like rpm if rpm inspects can help you

00:21:16,570 --> 00:21:19,900
also

00:21:17,080 --> 00:21:22,030
even for non fedora packages because

00:21:19,900 --> 00:21:24,460
they will file all the many of the

00:21:22,030 --> 00:21:26,470
Fedora tests but still the output will

00:21:24,460 --> 00:21:29,320
be useful and since you can select which

00:21:26,470 --> 00:21:32,830
tests to run all right I guess you can

00:21:29,320 --> 00:21:36,210
also write your own tests that will be

00:21:32,830 --> 00:21:39,630
useful that's

00:21:36,210 --> 00:21:42,300
that's all the cases I had but just

00:21:39,630 --> 00:21:45,200
before the talk we had a beginning of a

00:21:42,300 --> 00:21:48,540
interesting discussion with with Tom

00:21:45,200 --> 00:21:52,290
about about tech life being a real

00:21:48,540 --> 00:21:55,260
monster in in fedora and he did some

00:21:52,290 --> 00:22:03,870
more of those things to make it less

00:21:55,260 --> 00:22:06,060
horrible but so um yeah if you have any

00:22:03,870 --> 00:22:46,250
questions or have an interest in cases

00:22:06,060 --> 00:22:46,250
to discuss from trying to contact and I

00:22:46,370 --> 00:22:52,640
freedom packaging actually stick them in

00:22:49,500 --> 00:22:52,640
a table all expect that

00:23:03,980 --> 00:23:09,179
yeah that's what I would probably do as

00:23:07,289 --> 00:23:12,260
well when pressed for time because well

00:23:09,179 --> 00:23:15,210
you can't I mean it would take months to

00:23:12,260 --> 00:23:45,029
or maybe years to package 600

00:23:15,210 --> 00:23:46,950
dependencies I think I mean to do it

00:23:45,029 --> 00:23:50,820
properly I think automated packaging is

00:23:46,950 --> 00:23:53,669
the only way like like I think I know

00:23:50,820 --> 00:23:57,090
someone did it with Python just took all

00:23:53,669 --> 00:24:00,649
of pi PI and built rpms out of that

00:23:57,090 --> 00:24:04,470
automatically was it mural someone else

00:24:00,649 --> 00:24:09,149
think also we have a lot of work done

00:24:04,470 --> 00:24:11,690
for go ecosystem for this but yeah it

00:24:09,149 --> 00:24:11,690
would have to

00:24:25,230 --> 00:24:28,319
[Music]

00:25:14,530 --> 00:25:17,650
[Music]

00:25:35,290 --> 00:25:38,359
[Music]

00:25:45,889 --> 00:25:59,539
but requiring 200gr which was oh but it

00:25:57,089 --> 00:25:59,539
doesn't work

00:26:40,770 --> 00:27:01,060
good version but of course those correct

00:26:45,760 --> 00:27:03,790
class so it was the first all right so

00:27:01,060 --> 00:27:05,530
it was a case of name overlap not it

00:27:03,790 --> 00:27:08,590
wasn't the same software just didn't

00:27:05,530 --> 00:27:11,830
that's the same name yeah I have a

00:27:08,590 --> 00:27:14,050
similar case just came to my mind when I

00:27:11,830 --> 00:27:18,810
was trying to package something new and

00:27:14,050 --> 00:27:20,590
it had a dependency on broadly module

00:27:18,810 --> 00:27:25,300
there are actually two implementations

00:27:20,590 --> 00:27:29,680
which are I think completely or mostly

00:27:25,300 --> 00:27:32,040
API compatible one is broadly and one is

00:27:29,680 --> 00:27:35,410
broadly PI but they provide the same

00:27:32,040 --> 00:27:38,340
module name and what one is in Fedora

00:27:35,410 --> 00:27:40,300
one isn't or maybe it is already I

00:27:38,340 --> 00:27:44,500
haven't checked in the last few months

00:27:40,300 --> 00:27:48,640
but and the developers of the software I

00:27:44,500 --> 00:27:51,100
was trying to to package because I think

00:27:48,640 --> 00:27:54,850
the one in Fedora is implemented in

00:27:51,100 --> 00:27:59,740
Python and the one that was a dependency

00:27:54,850 --> 00:28:03,460
is rewritten in in C so it's a C Python

00:27:59,740 --> 00:28:06,310
module so that they said they want to

00:28:03,460 --> 00:28:08,810
use that one because that's faster but

00:28:06,310 --> 00:28:12,400
still there is an name

00:28:08,810 --> 00:28:12,400
well module name

00:28:18,380 --> 00:28:21,439
[Music]

00:29:11,710 --> 00:29:21,260
has four specific it doesn't need them

00:29:17,740 --> 00:29:23,660
it just makes the directory and it's not

00:29:21,260 --> 00:29:25,940
in their entry so part of chromium

00:29:23,660 --> 00:29:28,990
source file is a download of these files

00:29:25,940 --> 00:29:34,000
showing them in the directory

00:29:28,990 --> 00:29:47,350
I guess that was easier than touching

00:29:34,000 --> 00:29:54,670
the bill script yeah I know all right

00:29:47,350 --> 00:29:56,720
any more questions stories so thank you

00:29:54,670 --> 00:29:59,869
all for coming

00:29:56,720 --> 00:29:59,869

YouTube URL: https://www.youtube.com/watch?v=rthsDKWlEqU


