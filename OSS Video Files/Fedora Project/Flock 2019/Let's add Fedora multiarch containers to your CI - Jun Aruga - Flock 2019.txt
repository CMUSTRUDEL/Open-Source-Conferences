Title: Let's add Fedora multiarch containers to your CI - Jun Aruga - Flock 2019
Publication date: 2019-08-28
Playlist: Flock 2019
Description: 
	An introduction about multiarch project [1] to enable users to build, run and test Fedora multi arch (aarch64, 390x and etc) containers on your host architecture x86_64 easily.

Multiarch project is a collection of tools to emulate different architecture containers by QEMU and binfmt_misc and the compatible container images.

I also compare it with similar technologies docker buildx and podman buildx being developed by buildash and podman team.

[1] https://github.com/multiarch/qemu-user-static

--
Recordings of talks at Flock are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:01,790 --> 00:00:11,910
today I want to talk about how to add

00:00:07,940 --> 00:00:17,759
Federer March our countenance to your CI

00:00:11,910 --> 00:00:21,029
- you are upstream CI because now we

00:00:17,759 --> 00:00:27,229
need to work with March architecture our

00:00:21,029 --> 00:00:33,720
team packages as you know in a past time

00:00:27,229 --> 00:00:38,190
working with only x86 64 worked but now

00:00:33,720 --> 00:00:43,650
we need to work with other architecture

00:00:38,190 --> 00:00:47,190
RPM packages we need to fix architecture

00:00:43,650 --> 00:00:52,290
specific issues sending requests to

00:00:47,190 --> 00:00:57,990
upstream so how to do this how to deal

00:00:52,290 --> 00:01:05,969
with this that's a reason I will share

00:00:57,990 --> 00:01:11,240
this topic for you so first I introduce

00:01:05,969 --> 00:01:14,780
you a list of CPU architecture kind and

00:01:11,240 --> 00:01:17,069
by the way I will shorten the word

00:01:14,780 --> 00:01:21,780
architecture

00:01:17,069 --> 00:01:27,139
I call it arc ox because if it's too

00:01:21,780 --> 00:01:33,109
long to say there are two arcs

00:01:27,139 --> 00:01:38,130
host walk by you name commander under

00:01:33,109 --> 00:01:43,709
package shock that is used a part of our

00:01:38,130 --> 00:01:48,709
claim package in name and also some

00:01:43,709 --> 00:01:58,579
patterns of CPU we need to care for

00:01:48,709 --> 00:02:06,420
example CPU is Intel M or IBM IBM and

00:01:58,579 --> 00:02:10,940
the CPU is 64-bit or 32-bit literal

00:02:06,420 --> 00:02:10,940
Indian or bill India

00:02:12,780 --> 00:02:22,300
that series for mark

00:02:15,570 --> 00:02:28,330
the green check mark argument what I

00:02:22,300 --> 00:02:33,460
cover today QM we use a static QM is

00:02:28,330 --> 00:02:38,050
profess processor emulation user is QMS

00:02:33,460 --> 00:02:41,560
users model to emulate a process not a

00:02:38,050 --> 00:02:46,620
system mode for today the static is a

00:02:41,560 --> 00:02:50,980
Malaysian by static binaries and work

00:02:46,620 --> 00:02:54,820
MOOC has a future to run march

00:02:50,980 --> 00:02:59,470
architecture mock environment on qm use

00:02:54,820 --> 00:03:02,950
a static it's convenient under cozy as

00:02:59,470 --> 00:03:07,870
you know has a future to build a multi

00:03:02,950 --> 00:03:11,800
arc RPM packages in the pocket I have

00:03:07,870 --> 00:03:17,080
never used it but on Sunday at flock

00:03:11,800 --> 00:03:22,330
there is a workshop for packet so we can

00:03:17,080 --> 00:03:26,920
attend it and March rqm use the static

00:03:22,330 --> 00:03:32,590
image that is a main topic the project

00:03:26,920 --> 00:03:37,630
I'm working for now and finally the

00:03:32,590 --> 00:03:40,600
padang padang docker on dockable 2x that

00:03:37,630 --> 00:03:50,680
is a plugin of docker has a platform

00:03:40,600 --> 00:03:57,220
option to build mark images so qm & bean

00:03:50,680 --> 00:04:01,720
format to misc that is article a few

00:03:57,220 --> 00:04:04,810
months ago from dhaka company a qm on

00:04:01,720 --> 00:04:08,440
the bean format misc remarkable

00:04:04,810 --> 00:04:15,000
technology in container world that is

00:04:08,440 --> 00:04:15,000
used to build march arc images

00:04:18,240 --> 00:04:25,720
five steps to other federal March

00:04:22,210 --> 00:04:32,340
architecture continence to USC i-20 you

00:04:25,720 --> 00:04:35,380
are absolutely I the stock score so

00:04:32,340 --> 00:04:42,930
let's see it one by one

00:04:35,380 --> 00:04:48,700
from next slide the first step is about

00:04:42,930 --> 00:04:52,750
QM arc static that is an interpreter to

00:04:48,700 --> 00:04:53,740
run our specific binary in this case

00:04:52,750 --> 00:05:00,360
hello

00:04:53,740 --> 00:05:05,620
a arc 6-4 6-4 bit fire is the acquire

00:05:00,360 --> 00:05:09,670
the example sorts first the fire command

00:05:05,620 --> 00:05:13,660
is to show that kind of fire that shows

00:05:09,670 --> 00:05:19,180
an AR six for fire the second ruins

00:05:13,660 --> 00:05:21,580
command under arc fire shows era were

00:05:19,180 --> 00:05:25,570
running the command directory you can

00:05:21,580 --> 00:05:29,950
see cannot execute the binary but when

00:05:25,570 --> 00:05:33,280
learning the command with two mr6 for

00:05:29,950 --> 00:05:36,790
static that is interpreter the hello

00:05:33,280 --> 00:05:42,430
toxic smoke mondo prints hello world oak

00:05:36,790 --> 00:05:45,160
rectory so simple the QM arc static the

00:05:42,430 --> 00:05:49,840
corrections of the comm CPU named static

00:05:45,160 --> 00:05:56,140
binary files our interpreter so make

00:05:49,840 --> 00:06:00,550
sense okay so next step is about being

00:05:56,140 --> 00:06:06,550
format misc after it is a Connery future

00:06:00,550 --> 00:06:11,320
a binary format miscellaneous that it's

00:06:06,550 --> 00:06:15,610
useful to run our binary without

00:06:11,320 --> 00:06:20,560
specifying the interpreter the example

00:06:15,610 --> 00:06:23,470
shows how to other beam format Miska

00:06:20,560 --> 00:06:26,160
file that is specified as a fast

00:06:23,470 --> 00:06:27,700
condition fast right there are two files

00:06:26,160 --> 00:06:31,960
register under

00:06:27,700 --> 00:06:36,750
let us under the proc directory then

00:06:31,960 --> 00:06:41,020
echo some magical string redirect to

00:06:36,750 --> 00:06:47,710
register the string is colon separated

00:06:41,020 --> 00:06:56,680
string then new beam format or misfire

00:06:47,710 --> 00:07:01,150
is created so let's see the content of

00:06:56,680 --> 00:07:04,920
the created being format misfire there

00:07:01,150 --> 00:07:08,500
are items what important items are

00:07:04,920 --> 00:07:17,670
interpreter and floods F flux F

00:07:08,500 --> 00:07:21,040
important and as a result hello a 6:05

00:07:17,670 --> 00:07:25,360
runs correctly prints hello world

00:07:21,040 --> 00:07:29,350
without interpreter because interpreter

00:07:25,360 --> 00:07:31,330
information is in being format amidst

00:07:29,350 --> 00:07:35,230
fire okay

00:07:31,330 --> 00:07:44,490
and the flood safe what is what is frogs

00:07:35,230 --> 00:07:47,970
F the flux F is that example shows how

00:07:44,490 --> 00:07:52,390
frogs s works

00:07:47,970 --> 00:07:56,860
removing the interpreter removing the

00:07:52,390 --> 00:08:00,670
end of interpreter after that arc binary

00:07:56,860 --> 00:08:04,660
works printing the hello world that is

00:08:00,670 --> 00:08:08,380
the future of floods F the frogs F is

00:08:04,660 --> 00:08:13,150
the persistent option the information

00:08:08,380 --> 00:08:17,080
for qm is saved on a memory that is a

00:08:13,150 --> 00:08:26,560
PVC why this is important on a later

00:08:17,080 --> 00:08:32,500
slide and this is just example how to

00:08:26,560 --> 00:08:35,680
remove being format misfire echo -1

00:08:32,500 --> 00:08:40,360
redirect to the being format misfire is

00:08:35,680 --> 00:08:42,479
to remove the fire so is the example of

00:08:40,360 --> 00:08:46,269
some

00:08:42,479 --> 00:08:49,389
adding editing manually being formatted

00:08:46,269 --> 00:08:57,490
esquire it is important to understand

00:08:49,389 --> 00:09:05,560
the mechanism of the QM Sado step is

00:08:57,490 --> 00:09:10,889
about QM users tatak RPM on federal this

00:09:05,560 --> 00:09:15,850
RPM actually a when installing the RPM

00:09:10,889 --> 00:09:20,110
installs being formatted misc virus such

00:09:15,850 --> 00:09:24,399
command line that we learned on previous

00:09:20,110 --> 00:09:30,000
step that being from atmosphere is with

00:09:24,399 --> 00:09:30,000
flux F that is the condition of the RPM

00:09:32,939 --> 00:09:40,810
so this is the example how to reset

00:09:37,649 --> 00:09:43,920
install the pin format misc fire because

00:09:40,810 --> 00:09:49,300
sometimes we want to manually edit the

00:09:43,920 --> 00:09:52,269
special fire this page just shows how to

00:09:49,300 --> 00:09:57,430
add how to a to being format amiss file

00:09:52,269 --> 00:10:01,899
for testing after that what we can do is

00:09:57,430 --> 00:10:05,910
to run system control restart system

00:10:01,899 --> 00:10:10,680
deep informative service that command

00:10:05,910 --> 00:10:17,290
Vista is reset to the files

00:10:10,680 --> 00:10:21,459
the result is initial condition so this

00:10:17,290 --> 00:10:25,449
is a picture how it works when in

00:10:21,459 --> 00:10:33,040
storing under ie storing QM use a static

00:10:25,449 --> 00:10:36,959
rpm the RPM do restart in system OD pin

00:10:33,040 --> 00:10:41,439
hamato service as a postscript of RPM

00:10:36,959 --> 00:10:46,480
the service reading being formatted d

00:10:41,439 --> 00:10:50,740
config files then we create pin format

00:10:46,480 --> 00:10:54,700
misc files based on the config file the

00:10:50,740 --> 00:11:06,650
people MIDI config files are included

00:10:54,700 --> 00:11:11,210
qm use a static RPM the first step now

00:11:06,650 --> 00:11:16,570
we can learn our specific container on

00:11:11,210 --> 00:11:22,910
local with Padma as a initial condition

00:11:16,570 --> 00:11:26,060
learning our Contra arm 648 federal

00:11:22,910 --> 00:11:31,490
container is a federal a x64 container

00:11:26,060 --> 00:11:35,630
on docker hub with bottom an initial

00:11:31,490 --> 00:11:38,540
condition shows era cannot execute but

00:11:35,630 --> 00:11:41,270
after installing to use the static RPM

00:11:38,540 --> 00:11:45,590
that installs being format misfires with

00:11:41,270 --> 00:11:48,530
Travis F as a result running contra

00:11:45,590 --> 00:11:58,460
works on your local so today you can try

00:11:48,530 --> 00:12:03,500
this the big this picture shows how last

00:11:58,460 --> 00:12:08,110
command you name commando works well

00:12:03,500 --> 00:12:12,710
running you name commando in container

00:12:08,110 --> 00:12:15,550
you name command works in container on

00:12:12,710 --> 00:12:19,610
being format misfire

00:12:15,550 --> 00:12:24,770
the point is installed being format misc

00:12:19,610 --> 00:12:28,760
files are commonly used between host OS

00:12:24,770 --> 00:12:32,420
and inside of the container because that

00:12:28,760 --> 00:12:35,630
is a future of Connor the container use

00:12:32,420 --> 00:12:38,840
Connor also a scanner that is a secret

00:12:35,630 --> 00:12:43,730
how the binary commando in container

00:12:38,840 --> 00:12:46,160
works the Frog says F is important

00:12:43,730 --> 00:12:53,740
because incontinent use worry there is

00:12:46,160 --> 00:13:00,620
no interpreter so that is the reason now

00:12:53,740 --> 00:13:06,490
already fifth step 5 step much arc Jamie

00:13:00,620 --> 00:13:09,610
use a static under CI that example shows

00:13:06,490 --> 00:13:13,450
longing March up cuckoo use a static

00:13:09,610 --> 00:13:18,700
image with options using the portman

00:13:13,450 --> 00:13:21,190
commander that image running image is to

00:13:18,700 --> 00:13:24,870
install being format misc files with

00:13:21,190 --> 00:13:30,000
flux F that we learned on previous step

00:13:24,870 --> 00:13:35,050
same condition after that we can run a

00:13:30,000 --> 00:13:41,220
specific container correctly the last

00:13:35,050 --> 00:13:47,440
command line make sense good

00:13:41,220 --> 00:13:50,830
and this is actual example of Travis CI

00:13:47,440 --> 00:13:55,810
that also use the CI own upstream

00:13:50,830 --> 00:13:58,630
project you can see the fire later from

00:13:55,810 --> 00:14:02,200
the repository by the way you can see

00:13:58,630 --> 00:14:06,160
the footer URL this is a repository for

00:14:02,200 --> 00:14:10,630
your workshop after after this talk you

00:14:06,160 --> 00:14:17,410
can check it for detail yes helpful I'm

00:14:10,630 --> 00:14:21,310
helpful guy a back slide first picture

00:14:17,410 --> 00:14:24,970
left to talk top shows the result of the

00:14:21,310 --> 00:14:29,110
Travis CI maybe you see this kind of

00:14:24,970 --> 00:14:34,180
result on Travis CI that result for each

00:14:29,110 --> 00:14:40,470
our case the logic is right side the

00:14:34,180 --> 00:14:45,160
picture matrix include the each case and

00:14:40,470 --> 00:14:50,110
the point is it was more environment

00:14:45,160 --> 00:14:55,630
variable base image what is use the base

00:14:50,110 --> 00:15:03,570
container image URL using a common dacha

00:14:55,630 --> 00:15:12,630
fire right top the base image is used

00:15:03,570 --> 00:15:12,630
from image URL as a butyl argument and

00:15:12,690 --> 00:15:20,730
left bottom picture

00:15:16,660 --> 00:15:26,500
is the common logic to run our container

00:15:20,730 --> 00:15:32,069
three common rinds first doctor on a by

00:15:26,500 --> 00:15:36,370
the way this example is only for Nodoka

00:15:32,069 --> 00:15:40,899
because bottom our noggins package on

00:15:36,370 --> 00:15:45,759
trapeze as a issue right now and we are

00:15:40,899 --> 00:15:49,180
fixing on it now so first a container a

00:15:45,759 --> 00:15:52,180
first commando is to run march extreme

00:15:49,180 --> 00:15:56,319
use a static image with options that in

00:15:52,180 --> 00:16:01,240
stores being format misfires with flux F

00:15:56,319 --> 00:16:06,310
the second command to build dhaka

00:16:01,240 --> 00:16:10,589
builder to build our container using the

00:16:06,310 --> 00:16:16,420
base image argument then finally Leung

00:16:10,589 --> 00:16:20,350
our federal container with command in

00:16:16,420 --> 00:16:32,050
this example I executed make test

00:16:20,350 --> 00:16:36,699
command in container okay so this

00:16:32,050 --> 00:16:41,130
picture shows how the march rqm uses a

00:16:36,699 --> 00:16:46,839
static image works well on in the image

00:16:41,130 --> 00:16:49,779
left side the image exec use register

00:16:46,839 --> 00:16:54,220
script inside of the container the

00:16:49,779 --> 00:16:57,370
register script creates a new bin format

00:16:54,220 --> 00:17:00,459
to misfire from inside of the container

00:16:57,370 --> 00:17:03,759
the point is again being boom atomistic

00:17:00,459 --> 00:17:09,010
files a promenade inside of the

00:17:03,759 --> 00:17:12,250
container and host OS as a result good

00:17:09,010 --> 00:17:15,699
binary files work on being format

00:17:12,250 --> 00:17:20,459
misfire for boss inside of the container

00:17:15,699 --> 00:17:20,459
and outside side of the container

00:17:23,540 --> 00:17:35,390
okay so now extra topic I show you

00:17:31,280 --> 00:17:38,570
native arm supported ECI services in

00:17:35,390 --> 00:17:43,460
this slide because sometimes emulation

00:17:38,570 --> 00:17:49,580
by QM is not perfect there is a qme

00:17:43,460 --> 00:17:53,660
specific issue so Swiss Army support

00:17:49,580 --> 00:17:57,380
official services super bra CI under on

00:17:53,660 --> 00:18:01,580
CI and the works on arm works on army is

00:17:57,380 --> 00:18:10,910
a free arm Sava free on Sabha on for

00:18:01,580 --> 00:18:16,970
open source project under next topic

00:18:10,910 --> 00:18:22,300
next extra topic is how to build march

00:18:16,970 --> 00:18:27,190
are images from a coupon docker file

00:18:22,300 --> 00:18:31,910
using Pratt home the Pratt home option

00:18:27,190 --> 00:18:36,710
for Padma actually this is still working

00:18:31,910 --> 00:18:42,740
in progress in this ticket URL you can

00:18:36,710 --> 00:18:46,160
check it later so this is specifying are

00:18:42,740 --> 00:18:49,730
textual information other argument as a

00:18:46,160 --> 00:18:53,960
result we can build a container and we

00:18:49,730 --> 00:19:01,820
can run a container on QM use estatic on

00:18:53,960 --> 00:19:04,990
in this example and for dhoka dhoka

00:19:01,820 --> 00:19:09,260
command with Doukhobors docket

00:19:04,990 --> 00:19:13,880
environment variable provides trot home

00:19:09,260 --> 00:19:18,040
option and also a dhoka builder X that

00:19:13,880 --> 00:19:21,530
is the clogging of the Dhaka provides

00:19:18,040 --> 00:19:26,030
Pratt home option and the behavior is

00:19:21,530 --> 00:19:29,260
very similar so three ways are very

00:19:26,030 --> 00:19:29,260
similar behavior

00:19:32,390 --> 00:19:38,570
this picture just shows how the Platt

00:19:35,660 --> 00:19:42,590
home option works from common docker

00:19:38,570 --> 00:19:52,270
file to peer the arc image then Leung

00:19:42,590 --> 00:19:57,920
the container using chemical static so

00:19:52,270 --> 00:20:02,630
let's wrap up wrap up five steps to our

00:19:57,920 --> 00:20:06,920
the federal March arc to upstream CI the

00:20:02,630 --> 00:20:11,840
first step what we learned QM ecstatic

00:20:06,920 --> 00:20:16,040
is a interpreter to run our specific

00:20:11,840 --> 00:20:21,940
binary just interpreter the second step

00:20:16,040 --> 00:20:26,530
is a beam format misc is to run a binary

00:20:21,940 --> 00:20:32,140
without specifying the interpreter the

00:20:26,530 --> 00:20:36,080
third step is to use a static RPM that

00:20:32,140 --> 00:20:41,540
installs be informative misfires with

00:20:36,080 --> 00:20:45,290
drugs f the four-step cue is the static

00:20:41,540 --> 00:20:51,680
our team on the container we learned how

00:20:45,290 --> 00:20:57,020
to run a specific container on TM use a

00:20:51,680 --> 00:21:01,070
static RPM on the last step

00:20:57,020 --> 00:21:07,760
a fifth step we run the March

00:21:01,070 --> 00:21:11,870
rqm use a static image running the image

00:21:07,760 --> 00:21:15,530
to run a container I showed the example

00:21:11,870 --> 00:21:20,150
of the poem running with the image on

00:21:15,530 --> 00:21:27,320
local then and I also shared the actual

00:21:20,150 --> 00:21:31,010
example of Travis CI the popular CI so

00:21:27,320 --> 00:21:35,950
now you are ready to add your new

00:21:31,010 --> 00:21:38,780
federal container images make sense

00:21:35,950 --> 00:21:43,490
congratulations and later you can check

00:21:38,780 --> 00:21:45,610
the workshop repository and a special

00:21:43,490 --> 00:21:49,980
thanks for these projects that

00:21:45,610 --> 00:21:58,330
project helped me to create this talk

00:21:49,980 --> 00:22:02,830
under slider URL is this after this talk

00:21:58,330 --> 00:22:06,760
I will upload the slider also you can

00:22:02,830 --> 00:22:08,920
check the website of the flock

00:22:06,760 --> 00:22:13,330
scheduling system Agra throw the slider

00:22:08,920 --> 00:22:16,750
to and bonus point if you have a

00:22:13,330 --> 00:22:19,690
question open the ticket to ask your

00:22:16,750 --> 00:22:22,210
questions in this repository I am happy

00:22:19,690 --> 00:22:28,360
to answer and also I'm happy to discuss

00:22:22,210 --> 00:22:33,040
in person on site okay so my presents

00:22:28,360 --> 00:22:47,020
are finished a few minutes so any

00:22:33,040 --> 00:22:50,640
questions on km good question okay the

00:22:47,020 --> 00:22:58,830
question is what is the performance

00:22:50,640 --> 00:23:06,610
countenance on QM answers slope right

00:22:58,830 --> 00:23:13,020
throgh not Tory per but double over one

00:23:06,610 --> 00:23:13,020
point two five okay so sorry

00:23:46,960 --> 00:24:18,200
you mean the question is what is the

00:23:52,070 --> 00:24:24,050
reason to use docker hub exactly yes

00:24:18,200 --> 00:24:30,140
using the question is why I used the

00:24:24,050 --> 00:24:35,990
image basics for the federal image the

00:24:30,140 --> 00:24:40,460
reason is my way does not support to

00:24:35,990 --> 00:24:48,130
recognize from officer Fedora image to

00:24:40,460 --> 00:24:53,840
our specific image propped formal box

00:24:48,130 --> 00:24:58,310
because a platform is not so perfect to

00:24:53,840 --> 00:25:02,960
run every our cases actually you can see

00:24:58,310 --> 00:25:05,000
the case of using docker command on a

00:25:02,960 --> 00:25:08,570
dock ability ex-commando with platform

00:25:05,000 --> 00:25:11,060
on actually dot Optra BCI and that's

00:25:08,570 --> 00:25:20,600
that is still doesn't work on Travis CI

00:25:11,060 --> 00:25:23,440
and I'm asking for the issue and so

00:25:20,600 --> 00:25:23,440
madam

00:25:27,940 --> 00:25:41,990
sorry could you repeat I mean okay I see

00:25:39,200 --> 00:25:47,000
the question is have you tried building

00:25:41,990 --> 00:25:52,130
a continent image except x86 64 image as

00:25:47,000 --> 00:25:57,550
a host architecture the situation I yes

00:25:52,130 --> 00:26:04,250
the situation for monarch image is only

00:25:57,550 --> 00:26:09,260
supports x86 for as a host architecture

00:26:04,250 --> 00:26:12,800
that is that can be supporting other

00:26:09,260 --> 00:26:17,470
architecture is the new future I'm

00:26:12,800 --> 00:26:17,470
trying to other architecture

00:26:30,850 --> 00:26:52,540
for our architecture our building are

00:26:46,130 --> 00:26:52,540
six four images running on oxychloride I

00:27:03,309 --> 00:27:15,620
see target image is our 64 yeah right

00:27:09,500 --> 00:27:18,890
now okay maybe I understand the way of

00:27:15,620 --> 00:27:26,000
using multi a static image does not

00:27:18,890 --> 00:27:29,210
support the case yes looking there is a

00:27:26,000 --> 00:27:33,020
future request on the repository and we

00:27:29,210 --> 00:27:36,290
recognize how to implement so we will

00:27:33,020 --> 00:27:40,330
see it and yeah

00:27:36,290 --> 00:27:43,549
Doka apartment cloud home option now

00:27:40,330 --> 00:27:45,730
developing is an alternative to achieve

00:27:43,549 --> 00:27:45,730
it

00:27:51,640 --> 00:28:00,620
previously previously what Oh doesn't

00:27:58,070 --> 00:28:03,980
work on unpretty bridge mode because

00:28:00,620 --> 00:28:09,049
that controls being format misc from

00:28:03,980 --> 00:28:13,490
inside of the container okay I I think

00:28:09,049 --> 00:28:19,000
I'm sorry it's time right for next

00:28:13,490 --> 00:28:19,000
session okay so thank you audiences

00:28:19,530 --> 00:28:22,960
you

00:28:19,860 --> 00:28:22,960

YouTube URL: https://www.youtube.com/watch?v=StnJJZgQ5is


