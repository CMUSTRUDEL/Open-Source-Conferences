Title: Facebook Loves Fedora (and Chef) - Michel Alexandre Salim, Joseph Chilcote - Flock 2019
Publication date: 2019-09-02
Playlist: Flock 2019
Description: 
	Facebook as an organization has been using Chef to manage our CentOS servers for years, but recently we've started offering Fedora as a fully-supported desktop option for our employees. This talk will cover the challenges involved in managing a fast-moving platform (upgrade notifications, security updates), securing them (encryption and escrow, password strength enforcement), managing devices while not breaking interactive use cases (all those pesky locks!), and allowing users to customize their setup but in a way that is auditable through what we call API cookbooks.

--
Recordings of talks at Flock are a community effort.  Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:01,500 --> 00:00:08,200
so hi everyone I'm Michelle and if it's

00:00:07,509 --> 00:00:10,510
Joe

00:00:08,200 --> 00:00:13,209
we are from Facebook's client platform

00:00:10,510 --> 00:00:17,320
engineering team also city not the

00:00:13,209 --> 00:00:20,050
community platform naming is hard I

00:00:17,320 --> 00:00:21,540
think there's so many not enough yeah

00:00:20,050 --> 00:00:24,130
it's going on

00:00:21,540 --> 00:00:27,520
so the talk this talk is going to be

00:00:24,130 --> 00:00:33,610
about how we manage our federal fleet at

00:00:27,520 --> 00:00:43,810
Facebook and why we are managing the

00:00:33,610 --> 00:00:45,790
clan fleet so this is the agenda first

00:00:43,810 --> 00:00:48,430
why we want to manage our clan devices

00:00:45,790 --> 00:00:50,500
and then why it's actually hard to

00:00:48,430 --> 00:00:54,850
manage twine devices I suppose so many

00:00:50,500 --> 00:00:57,000
in servers and then we'll give an

00:00:54,850 --> 00:01:00,640
overview of what our fleet look like and

00:00:57,000 --> 00:01:02,410
how we manage them and then we want to

00:01:00,640 --> 00:01:04,930
talk about this is the most interesting

00:01:02,410 --> 00:01:07,539
part how we want to actually collaborate

00:01:04,930 --> 00:01:09,939
with the federal community to actually

00:01:07,539 --> 00:01:19,630
work on things we both care about and

00:01:09,939 --> 00:01:22,539
things that we so why use an experience

00:01:19,630 --> 00:01:24,969
Facebook is a big company we on board a

00:01:22,539 --> 00:01:26,889
lot of people every week and we want the

00:01:24,969 --> 00:01:29,139
experience to be good like you come in

00:01:26,889 --> 00:01:31,899
you get a new laptop everything should

00:01:29,139 --> 00:01:34,270
be set up for you automatically after a

00:01:31,899 --> 00:01:38,139
few years you get you replace your

00:01:34,270 --> 00:01:39,099
device everything should anything that

00:01:38,139 --> 00:01:44,549
you need to work and be productive

00:01:39,099 --> 00:01:48,189
should be there for you develop practice

00:01:44,549 --> 00:01:50,079
Facebook has a lot of internal tools

00:01:48,189 --> 00:01:52,659
that we built ourselves we want to make

00:01:50,079 --> 00:01:55,569
it easy for the teams that actually

00:01:52,659 --> 00:01:58,179
registers to be able to write them

00:01:55,569 --> 00:02:00,999
package them deploy them and have them

00:01:58,179 --> 00:02:06,299
work out of the box on other things

00:02:00,999 --> 00:02:09,160
actually need to use them security I

00:02:06,299 --> 00:02:10,830
mean I can there are some security

00:02:09,160 --> 00:02:13,480
standards we have to maintain right if

00:02:10,830 --> 00:02:14,780
like I'm setting up for this encryption

00:02:13,480 --> 00:02:16,670
making sure that

00:02:14,780 --> 00:02:19,640
if someone lose the device we can

00:02:16,670 --> 00:02:21,380
actually wipe device for making sure

00:02:19,640 --> 00:02:26,420
that security updates are applied

00:02:21,380 --> 00:02:29,840
automatically and auditability we want

00:02:26,420 --> 00:02:32,090
to make it so that when people make

00:02:29,840 --> 00:02:37,130
configuration changes they are actually

00:02:32,090 --> 00:02:40,630
like somewhere so so we know what's

00:02:37,130 --> 00:02:40,630
having is being applied on any device

00:02:40,870 --> 00:02:47,180
and also why it's hard it's hard because

00:02:44,060 --> 00:02:49,490
they're supplying if not it's not a

00:02:47,180 --> 00:02:53,150
server there's the person sitting in

00:02:49,490 --> 00:02:54,950
front of the keyboard so there are

00:02:53,150 --> 00:02:57,500
things that you can do that will be like

00:02:54,950 --> 00:03:00,040
breaking someone's flow you cannot

00:02:57,500 --> 00:03:02,209
assume that you don't want to say like

00:03:00,040 --> 00:03:04,340
we're on something that CPU intensive

00:03:02,209 --> 00:03:09,200
and then like someone's compiled job the

00:03:04,340 --> 00:03:14,480
answer much slower desktops are not

00:03:09,200 --> 00:03:15,680
connected all the time so and we cannot

00:03:14,480 --> 00:03:19,250
manage the desktop when it's offline

00:03:15,680 --> 00:03:21,650
it's also hard to actually always make

00:03:19,250 --> 00:03:25,030
sure that you can remote into a into a

00:03:21,650 --> 00:03:28,250
machine to troubleshoot the destination

00:03:25,030 --> 00:03:30,590
and those are just a general challenge

00:03:28,250 --> 00:03:36,650
we have Facebook specific challenges as

00:03:30,590 --> 00:03:38,590
well we are really big on ipv6 partly

00:03:36,650 --> 00:03:40,790
because we are such a huge company and

00:03:38,590 --> 00:03:43,910
some things don't work so well in our

00:03:40,790 --> 00:03:46,489
pv6 because nobody else actually has an

00:03:43,910 --> 00:03:47,570
ipv6 on the environment we'll get to the

00:03:46,489 --> 00:03:52,340
details later

00:03:47,570 --> 00:03:55,120
and then this is similar to what Matt

00:03:52,340 --> 00:03:56,269
talked about earlier today that

00:03:55,120 --> 00:03:57,980
federalized

00:03:56,269 --> 00:04:00,260
too fast and too slow at the same time

00:03:57,980 --> 00:04:03,019
for some people we have some teams we

00:04:00,260 --> 00:04:05,180
have unique needs that's always saying

00:04:03,019 --> 00:04:08,000
how we want to be on the older lilius

00:04:05,180 --> 00:04:10,040
for a bit longer and they keep getting

00:04:08,000 --> 00:04:11,630
nagged like no software hey there's a

00:04:10,040 --> 00:04:16,280
new federal available they want to

00:04:11,630 --> 00:04:17,570
upgrade and the team said the people

00:04:16,280 --> 00:04:19,760
that support those things are complained

00:04:17,570 --> 00:04:21,530
to us saying can we turn off this object

00:04:19,760 --> 00:04:24,400
notification because when they upgrade

00:04:21,530 --> 00:04:24,400
our tooling don't look

00:04:25,160 --> 00:04:31,740
themes that have either toboga tools or

00:04:29,000 --> 00:04:38,820
funky hardware and by funky and only

00:04:31,740 --> 00:04:41,280
beam nvidia and then training before

00:04:38,820 --> 00:04:43,800
we've choose to standardize on fedora

00:04:41,280 --> 00:04:46,139
for our Linux users if it's even more of

00:04:43,800 --> 00:04:48,060
a serious issue because imagine you have

00:04:46,139 --> 00:04:49,979
a help desk technician you are higher

00:04:48,060 --> 00:04:52,889
than your told Hey most people here use

00:04:49,979 --> 00:04:55,320
Mac's so we hire from say we hire those

00:04:52,889 --> 00:04:56,910
Apple geniuses and then someone comes in

00:04:55,320 --> 00:05:02,310
and say my actually nots cannot connect

00:04:56,910 --> 00:05:04,349
to Wi-Fi so it's it's getting better but

00:05:02,310 --> 00:05:06,630
it's also getting worse because now when

00:05:04,349 --> 00:05:08,849
we tell them like hey federalize a

00:05:06,630 --> 00:05:10,410
supported platform and now people go

00:05:08,849 --> 00:05:11,910
there and they have the expectation that

00:05:10,410 --> 00:05:23,009
it's supported like so you know

00:05:11,910 --> 00:05:25,080
everything to make this work so we are

00:05:23,009 --> 00:05:27,240
not majority in linux company at the

00:05:25,080 --> 00:05:30,270
desktop our servers are mostly nuts but

00:05:27,240 --> 00:05:32,669
not all deserts most people use Mac OS

00:05:30,270 --> 00:05:34,979
or Windows so it's an interesting

00:05:32,669 --> 00:05:37,430
experience like again if we get fed over

00:05:34,979 --> 00:05:42,570
right we're going to see a more uptick

00:05:37,430 --> 00:05:45,000
hopefully so in the past we don't

00:05:42,570 --> 00:05:46,740
actually some people want to run Linux

00:05:45,000 --> 00:05:48,690
on their desktops and they come to our

00:05:46,740 --> 00:05:51,930
team and if they am can you support it

00:05:48,690 --> 00:05:53,909
and we didn't set a direction so we let

00:05:51,930 --> 00:05:54,419
people pick whatever they are most

00:05:53,909 --> 00:05:57,240
familiar with

00:05:54,419 --> 00:05:59,599
so our Linux users are were mostly on

00:05:57,240 --> 00:06:03,150
Ubuntu and then there's a vocal

00:05:59,599 --> 00:06:05,729
community that uses ouch this is not

00:06:03,150 --> 00:06:08,400
officially supported so we find that in

00:06:05,729 --> 00:06:10,770
our experience people will contribute

00:06:08,400 --> 00:06:12,960
the minimum amount of fixes that they

00:06:10,770 --> 00:06:15,570
need to actually get what we need to

00:06:12,960 --> 00:06:17,130
work actually working so and after that

00:06:15,570 --> 00:06:19,680
they just throw it away and I got it

00:06:17,130 --> 00:06:21,830
don't touch the code anymore it's a bit

00:06:19,680 --> 00:06:26,190
of a nightmare

00:06:21,830 --> 00:06:31,529
so last year we decided to sanitize and

00:06:26,190 --> 00:06:34,020
pick fedora and multiple reasons one of

00:06:31,529 --> 00:06:35,680
them is that we already ran samples on

00:06:34,020 --> 00:06:41,460
our server fleet

00:06:35,680 --> 00:06:41,460
we have all the expertise HDM rpms

00:06:42,690 --> 00:06:48,340
because we you sent us there's already a

00:06:45,669 --> 00:06:51,190
lot of internal infrastructure needed to

00:06:48,340 --> 00:06:58,449
support it how to build rpms how to

00:06:51,190 --> 00:07:01,620
actually deploy them so for instance a

00:06:58,449 --> 00:07:03,940
lot of our internal tools like we have

00:07:01,620 --> 00:07:10,090
slightly modified version of mercurial

00:07:03,940 --> 00:07:11,560
that ship has an RPM and the same

00:07:10,090 --> 00:07:18,099
package can be used on both our server

00:07:11,560 --> 00:07:22,259
and our lessons so this is the view of

00:07:18,099 --> 00:07:25,030
our client fleet over the past year also

00:07:22,259 --> 00:07:27,910
as you can see like we finally became

00:07:25,030 --> 00:07:29,860
kind of a majority that's hopefully

00:07:27,910 --> 00:07:38,169
became mostly fight over earlier this

00:07:29,860 --> 00:07:42,240
year and if is the adoption curve for

00:07:38,169 --> 00:07:44,380
different federal versions so it's

00:07:42,240 --> 00:07:47,080
normally quite easy to persuade people

00:07:44,380 --> 00:07:48,580
on ThinkPad laptops to ships which the

00:07:47,080 --> 00:07:52,030
latest federal version as soon as

00:07:48,580 --> 00:07:52,840
they're released the people who are

00:07:52,030 --> 00:07:56,250
lagging behind

00:07:52,840 --> 00:07:59,289
as you can see federal at 28 drop

00:07:56,250 --> 00:08:02,199
precipitously pretty much around the

00:07:59,289 --> 00:08:04,419
time that it reach end of life but not

00:08:02,199 --> 00:08:07,150
before those are the people on

00:08:04,419 --> 00:08:08,979
workstations if Nvidia we have to knock

00:08:07,150 --> 00:08:10,810
them and make them as like hey come on

00:08:08,979 --> 00:08:17,139
you have to actually a move away from

00:08:10,810 --> 00:08:20,370
this and yeah we still need to get

00:08:17,139 --> 00:08:22,449
better at actually forcing people off

00:08:20,370 --> 00:08:25,419
unsupported releases because as you can

00:08:22,449 --> 00:08:27,750
see we're at 27 actually has a peak

00:08:25,419 --> 00:08:30,400
usage months after it was span of life

00:08:27,750 --> 00:08:33,389
when I reach out to one of them he said

00:08:30,400 --> 00:08:33,389
oh I didn't know its end of life

00:08:36,089 --> 00:08:42,729
so that's pretty much what our Freight

00:08:40,060 --> 00:08:47,700
look like I'm going to head over to you

00:08:42,729 --> 00:08:47,700
know for how we actually manage honestly

00:08:47,800 --> 00:08:53,559
although my name is Jojo I work with

00:08:52,420 --> 00:08:56,410
Michelle I'm the client platform

00:08:53,559 --> 00:08:58,059
engineering team I primarily work on Mac

00:08:56,410 --> 00:09:01,839
OS but they let me play with the cool

00:08:58,059 --> 00:09:04,360
kids in the Linux pod sometimes too in

00:09:01,839 --> 00:09:06,480
like he mentioned the some of the

00:09:04,360 --> 00:09:11,170
difficulties in managing client

00:09:06,480 --> 00:09:12,939
platforms can be pretty unique for

00:09:11,170 --> 00:09:14,470
instance imagine any one of your servers

00:09:12,939 --> 00:09:16,689
could go to sleep in San Francisco and

00:09:14,470 --> 00:09:18,819
wake up and Budapest and then expect to

00:09:16,689 --> 00:09:23,170
connect and update all of its

00:09:18,819 --> 00:09:25,709
configurations and each machine has a

00:09:23,170 --> 00:09:29,230
unique snowflake sitting at the keyboard

00:09:25,709 --> 00:09:32,410
you may be part of a group of similar

00:09:29,230 --> 00:09:35,949
snowflakes and so many of the

00:09:32,410 --> 00:09:38,799
configurations that you make we we build

00:09:35,949 --> 00:09:41,679
them to be configurable down to the

00:09:38,799 --> 00:09:44,589
machine or user setting I'm going to do

00:09:41,679 --> 00:09:47,589
this we use a chef for a configuration

00:09:44,589 --> 00:09:52,029
management and at Facebook we use a a

00:09:47,589 --> 00:09:54,220
specific API model with chef which is a

00:09:52,029 --> 00:10:00,009
deviates a little bit from the core

00:09:54,220 --> 00:10:04,079
chef's tools in that we can then set a

00:10:00,009 --> 00:10:07,389
base config for the fleet and then allow

00:10:04,079 --> 00:10:09,399
end users themselves to update certain

00:10:07,389 --> 00:10:15,610
portions of that configuration for their

00:10:09,399 --> 00:10:21,309
own machines chef runs in a declarative

00:10:15,610 --> 00:10:24,009
way in the the run list in chef is by

00:10:21,309 --> 00:10:27,160
design in order so we take advantage of

00:10:24,009 --> 00:10:29,860
that run list order to be able to make

00:10:27,160 --> 00:10:34,019
changes as the a chef proceeds through

00:10:29,860 --> 00:10:37,689
its run I mean chef actually does a few

00:10:34,019 --> 00:10:40,509
different loops through all of the the

00:10:37,689 --> 00:10:43,179
cookbooks it loops through everything to

00:10:40,509 --> 00:10:45,819
compile all of the settings into a node

00:10:43,179 --> 00:10:48,429
object and then it loops back through to

00:10:45,819 --> 00:10:51,040
execute on the resources and so we can

00:10:48,429 --> 00:10:54,249
take advantage of that as the compile

00:10:51,040 --> 00:10:56,679
phase runs in chain and make changes to

00:10:54,249 --> 00:10:59,260
that configuration based on groupings

00:10:56,679 --> 00:11:02,470
user name serial number

00:10:59,260 --> 00:11:08,950
Network any sorts of criteria that we

00:11:02,470 --> 00:11:13,620
might want to use in the lazy evaluation

00:11:08,950 --> 00:11:16,180
is another way that we can delay

00:11:13,620 --> 00:11:19,440
configurations that are to be applied to

00:11:16,180 --> 00:11:19,440
resources at the end of the chef's room

00:11:20,010 --> 00:11:25,390
the API model like I said is kind of a

00:11:23,620 --> 00:11:29,760
specific Facebook thing that we use chef

00:11:25,390 --> 00:11:34,089
in the way that we use chef we manage

00:11:29,760 --> 00:11:35,680
the platform but by default all of the

00:11:34,089 --> 00:11:38,140
settings are either going to be nil or

00:11:35,680 --> 00:11:41,830
false and then as the chef's run

00:11:38,140 --> 00:11:43,779
proceeds we start filling in those

00:11:41,830 --> 00:11:44,800
configs like I said we can we could say

00:11:43,779 --> 00:11:47,040
for the entire fleet

00:11:44,800 --> 00:11:50,200
you'll get one setting and then as that

00:11:47,040 --> 00:11:51,790
the chef compiles the process moves

00:11:50,200 --> 00:11:53,380
along then maybe a specific group

00:11:51,790 --> 00:11:55,330
updates one of those settings and by the

00:11:53,380 --> 00:11:59,529
time the resources run they apply was

00:11:55,330 --> 00:12:03,310
specific for that machine and we also

00:11:59,529 --> 00:12:05,079
promote user choice in that most of the

00:12:03,310 --> 00:12:07,930
any of the API settings that we have in

00:12:05,079 --> 00:12:10,180
chef can be changed by individual

00:12:07,930 --> 00:12:12,490
developers themselves and everything

00:12:10,180 --> 00:12:15,690
goes through change control force

00:12:12,490 --> 00:12:17,560
control product process peer review so

00:12:15,690 --> 00:12:19,480
anybody who wants to make a change to

00:12:17,560 --> 00:12:22,209
their system can get somebody else to

00:12:19,480 --> 00:12:26,860
sign up on it and you know perhaps maybe

00:12:22,209 --> 00:12:28,240
a security review as well and because

00:12:26,860 --> 00:12:30,399
everything is some source control it's

00:12:28,240 --> 00:12:32,860
all out of the bowls we know that you as

00:12:30,399 --> 00:12:35,680
an individual made a change to your

00:12:32,860 --> 00:12:37,750
specific machine and then they can track

00:12:35,680 --> 00:12:42,520
back and look at the notes and see why

00:12:37,750 --> 00:12:44,440
that was done example we're here is a

00:12:42,520 --> 00:12:47,140
screen saver and this is a good example

00:12:44,440 --> 00:12:50,589
because it's cross-platform chef is a

00:12:47,140 --> 00:12:52,740
form agnostic so we can run the same

00:12:50,589 --> 00:12:57,970
resource on Mac OS and Windows and Linux

00:12:52,740 --> 00:13:01,060
and the the underlying resource will

00:12:57,970 --> 00:13:03,700
take care of the platform specific code

00:13:01,060 --> 00:13:07,029
to make those changes so we can set a

00:13:03,700 --> 00:13:11,710
default value of true and max idle time

00:13:07,029 --> 00:13:18,730
of 5 minutes which is mean probably

00:13:11,710 --> 00:13:23,110
you do that it's awful and then when the

00:13:18,730 --> 00:13:26,290
resource runs it it knows what Parmesan

00:13:23,110 --> 00:13:28,780
serve runs the specific calls to the API

00:13:26,290 --> 00:13:31,990
is to make that screen saver change and

00:13:28,780 --> 00:13:33,070
this is example and again and we can set

00:13:31,990 --> 00:13:35,440
that default to five minutes but

00:13:33,070 --> 00:13:38,500
somebody may say now I need it to be 10

00:13:35,440 --> 00:13:39,970
minutes I mean they can go in and make

00:13:38,500 --> 00:13:44,190
that change and then in the chef run

00:13:39,970 --> 00:13:47,050
here you see halfway down it's changing

00:13:44,190 --> 00:13:51,250
it's actually going from 10 minutes to 5

00:13:47,050 --> 00:13:54,550
minutes there but it detects that the

00:13:51,250 --> 00:13:56,980
the initial base setting that we set for

00:13:54,550 --> 00:13:59,380
the corporate fleet was 10 minutes in

00:13:56,980 --> 00:14:03,880
this example that this user decided they

00:13:59,380 --> 00:14:07,060
wanted to be by from the other example

00:14:03,880 --> 00:14:09,310
was password policy and again it's a

00:14:07,060 --> 00:14:11,230
cross-platform recipe and cookbook

00:14:09,310 --> 00:14:15,010
within chef that can run on all of our

00:14:11,230 --> 00:14:17,770
platforms and the individual users pin

00:14:15,010 --> 00:14:19,540
should potentially make changes to their

00:14:17,770 --> 00:14:20,890
own policy in this instance it probably

00:14:19,540 --> 00:14:24,220
would we would want it to go through

00:14:20,890 --> 00:14:29,230
some sort security of you as well and

00:14:24,220 --> 00:14:31,770
again the setting the the policy on the

00:14:29,230 --> 00:14:35,020
resource level is platform specific

00:14:31,770 --> 00:14:37,860
whereas defining these settings as

00:14:35,020 --> 00:14:37,860
platform independent

00:14:41,370 --> 00:14:47,130
so one of the things we have serious

00:14:44,190 --> 00:14:50,070
problem with if a running package

00:14:47,130 --> 00:14:52,680
operations it's not so bad on forever

00:14:50,070 --> 00:14:54,720
Ubuntu this way worse because by default

00:14:52,680 --> 00:14:56,880
the first time you log into a desktop it

00:14:54,720 --> 00:14:58,980
starts running this update application

00:14:56,880 --> 00:15:01,920
that try to update the repo and then

00:14:58,980 --> 00:15:05,340
tell you how many updates Never but

00:15:01,920 --> 00:15:06,510
basically by default chef basically

00:15:05,340 --> 00:15:08,610
encourage you to actually use that

00:15:06,510 --> 00:15:12,930
package resource to actually say hey I

00:15:08,610 --> 00:15:15,150
want this rpm to be in salt and imagine

00:15:12,930 --> 00:15:17,850
if you have 20 cookbooks and each

00:15:15,150 --> 00:15:19,290
cookbook has five recipes and each of

00:15:17,850 --> 00:15:21,330
them basically say I want to install

00:15:19,290 --> 00:15:23,490
something you have 100 package

00:15:21,330 --> 00:15:25,170
operations going on each of them can

00:15:23,490 --> 00:15:32,250
basically be blocked because like Oh

00:15:25,170 --> 00:15:34,590
someone is holding a yam lock help so

00:15:32,250 --> 00:15:37,710
what we do is like we have a two-prong

00:15:34,590 --> 00:15:41,190
approach we find that in the past a lot

00:15:37,710 --> 00:15:42,960
of tools basically have all the

00:15:41,190 --> 00:15:45,180
optimistic assumption about how useful a

00:15:42,960 --> 00:15:49,350
tool is so they'll say like hey I'm

00:15:45,180 --> 00:15:52,500
going to install this tool on 20,000 max

00:15:49,350 --> 00:15:54,750
well like on older like 500 say federal

00:15:52,500 --> 00:15:56,850
machines and then we find that it's not

00:15:54,750 --> 00:16:00,030
actually being used that much so we can

00:15:56,850 --> 00:16:01,620
move them to be installed on demand so

00:16:00,030 --> 00:16:03,900
we can say hey yeah we are going to drop

00:16:01,620 --> 00:16:06,060
stop installer for you and when the user

00:16:03,900 --> 00:16:06,450
actually invoke the tool we say oh hang

00:16:06,060 --> 00:16:08,280
on a minute

00:16:06,450 --> 00:16:11,820
you actually have me installed a tool

00:16:08,280 --> 00:16:16,500
for you the other thing we do is instead

00:16:11,820 --> 00:16:18,930
of telling people instead of every

00:16:16,500 --> 00:16:21,000
recipe actually running a package

00:16:18,930 --> 00:16:23,670
installation we encourage people to use

00:16:21,000 --> 00:16:26,220
valve API and say tell us what you want

00:16:23,670 --> 00:16:28,560
to install we'll have a batch job that

00:16:26,220 --> 00:16:32,040
we configure system D and it will come

00:16:28,560 --> 00:16:34,020
along every one hour and say like oh

00:16:32,040 --> 00:16:36,270
these are the packages that need to be

00:16:34,020 --> 00:16:43,080
in salt let me run a single transaction

00:16:36,270 --> 00:16:45,120
and make sure they are in salt so here

00:16:43,080 --> 00:16:48,090
comes the exciting but what we actually

00:16:45,120 --> 00:16:52,610
want need help with from the community

00:16:48,090 --> 00:16:54,639
and also want to contribute back on I

00:16:52,610 --> 00:16:58,480
try this the

00:16:54,639 --> 00:16:59,589
Federer and Facebook color what is kind

00:16:58,480 --> 00:17:02,920
of hard because they are both really

00:16:59,589 --> 00:17:06,490
really similar colors so on the left

00:17:02,920 --> 00:17:09,760
part is what some of the federal

00:17:06,490 --> 00:17:11,289
initiatives on the right side is what we

00:17:09,760 --> 00:17:13,029
care about and as you can see there's a

00:17:11,289 --> 00:17:17,399
lot of overlap

00:17:13,029 --> 00:17:21,490
we run workstation on on our own fleet

00:17:17,399 --> 00:17:22,809
we are we might cut we are looking at

00:17:21,490 --> 00:17:26,409
silver blue and see whether it might be

00:17:22,809 --> 00:17:28,630
a good fit it depends on what you can do

00:17:26,409 --> 00:17:30,549
if containers one of the hot block is

00:17:28,630 --> 00:17:32,649
that there are a lot of things that we

00:17:30,549 --> 00:17:34,840
manage at the system level like we

00:17:32,649 --> 00:17:37,179
manage certificates we manage monitoring

00:17:34,840 --> 00:17:40,389
tools that those might be a bit

00:17:37,179 --> 00:17:43,019
difficult to replicate we want to get

00:17:40,389 --> 00:17:46,620
better at QA both one of and and also on

00:17:43,019 --> 00:17:49,659
helping fedora with their CI initiatives

00:17:46,620 --> 00:17:53,919
one of the problem we used to have in

00:17:49,659 --> 00:17:55,809
the past is we continuously install do

00:17:53,919 --> 00:17:59,919
network installations of federer every

00:17:55,809 --> 00:18:02,799
week in the past we actually install

00:17:59,919 --> 00:18:06,250
them with updates enabled and what we

00:18:02,799 --> 00:18:07,929
find is that every federal release there

00:18:06,250 --> 00:18:09,580
will be a post release update that

00:18:07,929 --> 00:18:12,490
accidentally broke a network

00:18:09,580 --> 00:18:14,440
installation sometimes we I discovered

00:18:12,490 --> 00:18:16,389
it sometimes we find that someone

00:18:14,440 --> 00:18:18,730
already reported it so we ended up

00:18:16,389 --> 00:18:21,340
switching to actually say let's do an

00:18:18,730 --> 00:18:22,779
installation without updates so at least

00:18:21,340 --> 00:18:25,389
we know that once it works it will keep

00:18:22,779 --> 00:18:26,919
working and then like we apply security

00:18:25,389 --> 00:18:31,260
updates when we start configuring

00:18:26,919 --> 00:18:34,419
machines but that's a bit not ideal

00:18:31,260 --> 00:18:37,809
gnome software there's a lot of feature

00:18:34,419 --> 00:18:41,919
requests we would like to make and also

00:18:37,809 --> 00:18:44,950
maybe help implement solver can coalesce

00:18:41,919 --> 00:18:48,100
we probably don't are not looking at

00:18:44,950 --> 00:18:51,669
that now and then after facebook

00:18:48,100 --> 00:18:56,139
specific issues ipv6 which we can

00:18:51,669 --> 00:18:57,730
probably contribute fixes for and how to

00:18:56,139 --> 00:19:00,639
deal with nvidia hardware which is

00:18:57,730 --> 00:19:02,940
probably sort of in scope but orosco

00:19:00,639 --> 00:19:06,059
because I guess federal cannot really

00:19:02,940 --> 00:19:06,059
solve it

00:19:06,120 --> 00:19:15,190
so some tools weaker but network manager

00:19:12,000 --> 00:19:18,030
we have problems of this in some of our

00:19:15,190 --> 00:19:21,280
newer offices where we only deploy ipv6

00:19:18,030 --> 00:19:22,830
and we find that network manager doesn't

00:19:21,280 --> 00:19:26,290
actually finish setting up a connection

00:19:22,830 --> 00:19:28,270
both Wi-Fi connection and VPN if it

00:19:26,290 --> 00:19:28,720
couldn't actually get a DHCP before

00:19:28,270 --> 00:19:30,850
release

00:19:28,720 --> 00:19:34,990
you just get confused and say you don't

00:19:30,850 --> 00:19:39,970
actually have a connection we open the

00:19:34,990 --> 00:19:41,470
bug a few months ago but I guess yep not

00:19:39,970 --> 00:19:44,890
enough people working on it

00:19:41,470 --> 00:19:48,250
genome software there we have some

00:19:44,890 --> 00:19:50,620
issues with a catch management in

00:19:48,250 --> 00:19:52,870
general anyway one is that as I said

00:19:50,620 --> 00:19:55,360
earlier gnome software will tell you

00:19:52,870 --> 00:19:57,250
there's nucleus coming out and we

00:19:55,360 --> 00:20:00,070
couldn't find a way to actually turn it

00:19:57,250 --> 00:20:03,070
off so for our user base that need to

00:20:00,070 --> 00:20:05,020
stay on further 29 the only solution we

00:20:03,070 --> 00:20:08,020
could find is basically disable gnome

00:20:05,020 --> 00:20:09,880
software all together except then there

00:20:08,020 --> 00:20:12,730
are other issues that happen if you

00:20:09,880 --> 00:20:14,380
actually try to run a tool that's not in

00:20:12,730 --> 00:20:16,570
salt by default it will try to actually

00:20:14,380 --> 00:20:18,580
ask gnome software in solid and that

00:20:16,570 --> 00:20:23,200
just fails saying like oh I don't know

00:20:18,580 --> 00:20:26,140
what I actually runs this d-bus service

00:20:23,200 --> 00:20:27,940
ideally we we can that's tunable and

00:20:26,140 --> 00:20:30,220
also we we can actually keep drum

00:20:27,940 --> 00:20:33,300
software for managing flat packs and for

00:20:30,220 --> 00:20:37,330
more updates but not for OPM's

00:20:33,300 --> 00:20:40,420
version locking we use DNF automatic to

00:20:37,330 --> 00:20:43,500
apply security updates we find that by

00:20:40,420 --> 00:20:46,960
default it doesn't actually honor the

00:20:43,500 --> 00:20:50,290
version locks that we have in in the

00:20:46,960 --> 00:20:53,140
version Walker plugin so we have to

00:20:50,290 --> 00:20:54,610
basically configure chef to actually say

00:20:53,140 --> 00:20:58,300
hey when someone say they want to lock

00:20:54,610 --> 00:21:02,770
version excluded from dnf'd automatic so

00:20:58,300 --> 00:21:05,920
it doesn't get updated and again gnome

00:21:02,770 --> 00:21:08,200
software because it has its own RPM back

00:21:05,920 --> 00:21:11,350
end so we have packaged kit and a DNF

00:21:08,200 --> 00:21:13,870
and package kit also doesn't understand

00:21:11,350 --> 00:21:15,080
version locking the same way that the

00:21:13,870 --> 00:21:18,679
NFS

00:21:15,080 --> 00:21:20,269
and genome kidding

00:21:18,679 --> 00:21:22,159
apparently I was told by our security

00:21:20,269 --> 00:21:25,549
team that no kidding doesn't actually

00:21:22,159 --> 00:21:31,340
speak to here as 1.3 and feature request

00:21:25,549 --> 00:21:34,999
has been out for a while under pesticide

00:21:31,340 --> 00:21:37,570
we we want to do better QE both

00:21:34,999 --> 00:21:40,129
internally on the Facebook side and also

00:21:37,570 --> 00:21:42,919
participating in Federalist QA process

00:21:40,129 --> 00:21:49,039
Oh for package updates and for

00:21:42,919 --> 00:21:51,799
distribution updates and this is kind of

00:21:49,039 --> 00:21:55,119
like a ditch but ideally if we can help

00:21:51,799 --> 00:21:58,039
push vendors like Lenovo to actually

00:21:55,119 --> 00:21:59,480
certify federal sent us out of the box

00:21:58,039 --> 00:22:01,580
for new machines that will really really

00:21:59,480 --> 00:22:03,710
help us because right now it means that

00:22:01,580 --> 00:22:05,600
any vendor that say this about me nots

00:22:03,710 --> 00:22:13,960
mean they have some special mobile to

00:22:05,600 --> 00:22:16,070
build and Vidya I'm not sure what is

00:22:13,960 --> 00:22:18,049
there are some federal developers

00:22:16,070 --> 00:22:24,080
helping and Vidya actually improved a

00:22:18,049 --> 00:22:28,220
tooling like so we need to talk so yeah

00:22:24,080 --> 00:22:32,350
that's our presentation so we'll just

00:22:28,220 --> 00:22:32,350
open up questions anyone

00:23:31,179 --> 00:23:35,320
so I'll repeat the question and an

00:23:33,249 --> 00:23:37,990
answer them the first question was

00:23:35,320 --> 00:23:39,039
whether we can dedicate resources to

00:23:37,990 --> 00:23:42,369
actually help

00:23:39,039 --> 00:23:42,999
Fedorov and Odessa and the answer is

00:23:42,369 --> 00:23:47,230
sort of

00:23:42,999 --> 00:23:51,480
maybe so to put a picture we have a team

00:23:47,230 --> 00:23:56,320
of 12 people we manage three OSS and and

00:23:51,480 --> 00:23:59,710
two mobile operating systems so in

00:23:56,320 --> 00:24:01,539
basically we have two people two or

00:23:59,710 --> 00:24:05,049
three people working full-time on Linux

00:24:01,539 --> 00:24:09,340
and not by full-time I mean we also

00:24:05,049 --> 00:24:10,840
manage other things as well so but yeah

00:24:09,340 --> 00:24:14,529
I mean like this is one of the things

00:24:10,840 --> 00:24:17,559
that's blocking us so and Facebook

00:24:14,529 --> 00:24:22,029
internally sort of work as as a

00:24:17,559 --> 00:24:23,799
community anyway and sometimes people do

00:24:22,029 --> 00:24:26,200
things to scratch Devon itch that's not

00:24:23,799 --> 00:24:28,470
really part of their team's main work so

00:24:26,200 --> 00:24:31,720
we might be able to find some volunteers

00:24:28,470 --> 00:24:34,149
who also like em you know I find is

00:24:31,720 --> 00:24:37,659
important and how fix it but otherwise

00:24:34,149 --> 00:24:39,610
here we we do have some manpower

00:24:37,659 --> 00:24:42,460
dedicated for this but I would say it's

00:24:39,610 --> 00:24:44,409
kind of probably on the order of a few

00:24:42,460 --> 00:24:47,649
hours a week instead of someone actually

00:24:44,409 --> 00:24:50,590
working full-time on a tool the next

00:24:47,649 --> 00:24:54,129
question was how to handle package

00:24:50,590 --> 00:24:55,690
operations if there are conflicts we

00:24:54,129 --> 00:24:58,509
find that the Fed of a default type now

00:24:55,690 --> 00:24:59,950
works for us like a by default it will

00:24:58,509 --> 00:25:01,690
just fail right and it'll say oh I

00:24:59,950 --> 00:25:04,149
cannot actually satisfy this operation

00:25:01,690 --> 00:25:07,409
and at least it doesn't leave the system

00:25:04,149 --> 00:25:07,409
in an inconsistent State

00:25:12,430 --> 00:25:14,460
Oh

00:25:19,810 --> 00:25:21,810
ah

00:25:27,700 --> 00:25:30,330
huh

00:25:35,520 --> 00:25:41,910
in that case since we are trying to move

00:25:38,100 --> 00:25:45,000
inside face oh yeah so apparently what

00:25:41,910 --> 00:25:46,590
what Federer what the NF does is it will

00:25:45,000 --> 00:25:50,309
skip back edges there cannot be insult

00:25:46,590 --> 00:25:52,770
but we'll do everything else so yeah

00:25:50,309 --> 00:25:55,410
actually that would work for us since we

00:25:52,770 --> 00:25:57,780
are trying to shift to a place where we

00:25:55,410 --> 00:26:00,179
actually say we're on one batch job that

00:25:57,780 --> 00:26:03,750
can solve everything we care about it's

00:26:00,179 --> 00:26:06,650
preferable if if as much as possible

00:26:03,750 --> 00:26:06,650
actually runs

00:26:29,210 --> 00:26:34,640
sorry do you mean whether we actually

00:26:31,800 --> 00:26:37,560
allow people to run non-english locales

00:26:34,640 --> 00:26:39,990
yeah we we have no policy on that so

00:26:37,560 --> 00:26:42,570
basically I'm pretty sure users

00:26:39,990 --> 00:26:55,290
outside of the US actually set the

00:26:42,570 --> 00:26:58,200
machine to to their own locales for our

00:26:55,290 --> 00:27:00,000
Linux users most of them are probably I

00:26:58,200 --> 00:27:02,580
cannot give specific numbers but most of

00:27:00,000 --> 00:27:04,080
them will be in the US the UK and

00:27:02,580 --> 00:27:06,950
Ireland so it's probably going to be

00:27:04,080 --> 00:27:06,950
mostly English anyway

00:27:18,580 --> 00:27:26,250
ah I would say hi hundreds and we hope

00:27:22,240 --> 00:27:26,250
to get into thousands sometimes in oh

00:27:26,880 --> 00:27:31,980
sorry yes how big is our user population

00:27:43,279 --> 00:27:49,220
so the question is whether we actually

00:27:45,590 --> 00:27:52,039
collaborate before 17 and the answer is

00:27:49,220 --> 00:27:54,650
yes actually these are the two verb

00:27:52,039 --> 00:27:56,330
Satori's that we open sourced the first

00:27:54,650 --> 00:27:58,250
one is managed by the server team the

00:27:56,330 --> 00:28:00,710
second one is the one we manage we

00:27:58,250 --> 00:28:04,360
actually try to reuse as much of the

00:28:00,710 --> 00:28:04,360
tooling and cookbooks as possible

00:28:10,350 --> 00:28:12,919
like

00:28:15,700 --> 00:28:18,570
hmm

00:28:20,120 --> 00:28:24,900
so the question is whether our users

00:28:23,130 --> 00:28:27,960
have good and whether they can actually

00:28:24,900 --> 00:28:30,630
run other desktops and the answer is yes

00:28:27,960 --> 00:28:32,850
to both so we we have some system

00:28:30,630 --> 00:28:35,790
monitoring tools running but we also

00:28:32,850 --> 00:28:37,380
don't want to disallow people from doing

00:28:35,790 --> 00:28:39,780
whatever they want so we have some

00:28:37,380 --> 00:28:43,380
people on KDE we have some people on I

00:28:39,780 --> 00:28:45,630
tree score table one snag is that we

00:28:43,380 --> 00:28:49,440
make this assumption that people have no

00:28:45,630 --> 00:28:51,000
mean salt so if people the further

00:28:49,440 --> 00:28:53,930
people stray away from that the more you

00:28:51,000 --> 00:28:53,930
might have to do things for themselves

00:28:59,030 --> 00:29:09,540
yeah everyone basically yeah everyone

00:29:02,430 --> 00:29:11,730
has solute access one of the weirder

00:29:09,540 --> 00:29:14,460
outages we had was actually when someone

00:29:11,730 --> 00:29:17,100
actually install Spotify to snap under

00:29:14,460 --> 00:29:19,110
desktop and I'm not sure what happened

00:29:17,100 --> 00:29:20,930
there but somehow like they had a

00:29:19,110 --> 00:29:23,370
partition mounted over etc' and

00:29:20,930 --> 00:29:26,850
shadowing some of our files that was fun

00:29:23,370 --> 00:29:27,990
yeah we try to entice flatbed as much as

00:29:26,850 --> 00:29:30,230
possible because it doesn't have that

00:29:27,990 --> 00:29:30,230
issue

00:29:38,279 --> 00:29:43,719
so yeah what are the big some what are

00:29:42,279 --> 00:29:47,049
some of the biggest issues we've had

00:29:43,719 --> 00:29:50,379
with federal on the desktop one of them

00:29:47,049 --> 00:29:52,539
is people who basically really prefer

00:29:50,379 --> 00:29:55,989
CentOS or something like one - LTS and

00:29:52,539 --> 00:30:00,969
so they complain about having to update

00:29:55,989 --> 00:30:04,570
at least once a year and NVIDIA hardware

00:30:00,969 --> 00:30:06,700
support is another big issue so I find

00:30:04,570 --> 00:30:09,369
it yeah it's mostly the same people in

00:30:06,700 --> 00:30:12,339
both situations so they find that when

00:30:09,369 --> 00:30:14,019
they upgrade from federal 29 to 30 for

00:30:12,339 --> 00:30:17,969
some reason Plymouth is broken for them

00:30:14,019 --> 00:30:20,649
and it doesn't display the graphical

00:30:17,969 --> 00:30:22,719
splash screen for unlocking your your

00:30:20,649 --> 00:30:25,330
hardest and then they say oh we cannot

00:30:22,719 --> 00:30:28,749
aspera 30 because we want that shiny

00:30:25,330 --> 00:30:31,479
thing so yeah it's a lot of the problem

00:30:28,749 --> 00:30:33,009
is that so to replicate their setup we

00:30:31,479 --> 00:30:36,070
basically need to have one of the

00:30:33,009 --> 00:30:40,529
station try to install like a exact

00:30:36,070 --> 00:30:42,999
setup and basically there's a lot of

00:30:40,529 --> 00:30:45,399
unpleasantness to do with binary

00:30:42,999 --> 00:30:46,989
packages I mean part of the reason they

00:30:45,399 --> 00:30:48,999
cannot upgrade as soon as federal comes

00:30:46,989 --> 00:30:51,599
out is also because the Nvidia drivers

00:30:48,999 --> 00:30:51,599
may not be ready

00:31:00,000 --> 00:31:07,530
in the ballpark I'll say probably maybe

00:31:04,380 --> 00:31:09,480
but wanted it's basically our desktops

00:31:07,530 --> 00:31:11,370
oh sorry

00:31:09,480 --> 00:31:14,630
how many what's the percentage of our

00:31:11,370 --> 00:31:18,770
fleet that actually has conveyed ahadith

00:31:14,630 --> 00:31:18,770
and the answer is all the desktops

00:31:24,349 --> 00:31:29,509
question is do we work with I know that

00:31:26,749 --> 00:31:33,169
with nvidia tween to improve federal

00:31:29,509 --> 00:31:34,969
support it's it's an ongoing process we

00:31:33,169 --> 00:31:40,659
are trying to get them to at least

00:31:34,969 --> 00:31:40,659
certify samples on on the server models

00:31:50,060 --> 00:31:53,840
[Music]

00:31:51,400 --> 00:31:56,330
like is it politically that's up yeah

00:31:53,840 --> 00:31:59,510
actually uh workstations that you know I

00:31:56,330 --> 00:32:02,660
can I know voting stations sitting under

00:31:59,510 --> 00:32:04,490
under someone's list also yeah the

00:32:02,660 --> 00:32:06,410
question was when I wanna say desktop do

00:32:04,490 --> 00:32:09,429
I actually mean desktop or I just mean

00:32:06,410 --> 00:32:09,429
like client machine

00:32:22,000 --> 00:32:26,350
yeah

00:32:24,399 --> 00:32:29,980
the question is what's the process for

00:32:26,350 --> 00:32:31,690
fixing an issue if there's a bad package

00:32:29,980 --> 00:32:34,690
going out or there's a bad configuration

00:32:31,690 --> 00:32:36,789
and the answer is so we have monitoring

00:32:34,690 --> 00:32:39,340
so we can actually see like hey of all

00:32:36,789 --> 00:32:41,679
our Chevron's what are the top errors at

00:32:39,340 --> 00:32:45,039
the moment and most of the time we can

00:32:41,679 --> 00:32:46,690
basically just fix it by making commits

00:32:45,039 --> 00:32:49,539
and eventually the next chef and should

00:32:46,690 --> 00:32:51,220
fix it sometime there are cases where

00:32:49,539 --> 00:32:55,679
something equally bad goes wrong and

00:32:51,220 --> 00:32:58,179
like am either like a chef stop smoking

00:32:55,679 --> 00:33:00,700
we we have an out-of-band remediation

00:32:58,179 --> 00:33:03,460
that basically tried to actually fix

00:33:00,700 --> 00:33:05,559
chef and run it manually but in the

00:33:03,460 --> 00:33:07,630
worst case we basically and that's why

00:33:05,559 --> 00:33:08,889
we have hub tests so we can tell the

00:33:07,630 --> 00:33:11,279
user hey go to the help desk and they

00:33:08,889 --> 00:33:11,279
will help you

00:33:23,190 --> 00:33:29,760
like question is whether we have user

00:33:26,580 --> 00:33:32,640
support so it's probably similar to ask

00:33:29,760 --> 00:33:35,400
fade over we basically we have an

00:33:32,640 --> 00:33:37,650
official support so basically for

00:33:35,400 --> 00:33:39,210
platforms we actually support we promise

00:33:37,650 --> 00:33:41,430
that we will actually get to someone and

00:33:39,210 --> 00:33:42,780
answer their questions we try to make

00:33:41,430 --> 00:33:47,220
sure they go to the help desk first

00:33:42,780 --> 00:33:50,370
because that way it scales better for

00:33:47,220 --> 00:33:53,370
people for people who use Ubuntu or Arch

00:33:50,370 --> 00:33:55,110
Linux those are technically not least

00:33:53,370 --> 00:33:59,000
ordered so we encourage the community to

00:33:55,110 --> 00:33:59,000
actually and help each other

00:34:12,129 --> 00:34:18,609
good question we sorry yeah the question

00:34:16,119 --> 00:34:22,599
was whether we support Maltese or

00:34:18,609 --> 00:34:30,429
environments and the answer is no so

00:34:22,599 --> 00:34:33,339
it's a bit simpler that way we are yeah

00:34:30,429 --> 00:34:39,309
I would say the average user probably

00:34:33,339 --> 00:34:41,169
has one point something machines yeah as

00:34:39,309 --> 00:34:42,940
some of our user population like a keep

00:34:41,169 --> 00:34:45,249
asking for this as well because I say

00:34:42,940 --> 00:34:47,739
hey we have expensive equations and can

00:34:45,249 --> 00:34:49,779
we share this please but our security

00:34:47,739 --> 00:34:52,149
team configure things in a way that it's

00:34:49,779 --> 00:34:53,200
actually hard to do this I mean we want

00:34:52,149 --> 00:34:54,789
to make sure that if something goes

00:34:53,200 --> 00:34:56,619
wrong we can actually trace it back to

00:34:54,789 --> 00:34:57,819
one person and if there are multiple

00:34:56,619 --> 00:35:01,710
people on the machine it's hard actually

00:34:57,819 --> 00:35:01,710
and for someone to be accountable

00:35:10,650 --> 00:35:13,339
hmm

00:35:17,970 --> 00:35:22,650
a good question question is whether

00:35:20,430 --> 00:35:24,690
since nvidia doesn't really have a good

00:35:22,650 --> 00:35:28,349
track record of working at the Linux

00:35:24,690 --> 00:35:31,410
community are we considering AMD the

00:35:28,349 --> 00:35:35,099
answer is yes and no some of our teams

00:35:31,410 --> 00:35:36,450
unfortunately wedded to CUDA so it's

00:35:35,099 --> 00:35:39,210
going to be really hard to convict

00:35:36,450 --> 00:35:42,440
Presidium to switch but from the desktop

00:35:39,210 --> 00:35:43,650
field we are actually really excited by

00:35:42,440 --> 00:35:45,630
Lenovo

00:35:43,650 --> 00:35:49,890
actually bringing out think that

00:35:45,630 --> 00:35:53,670
t-series with AMD GPU so we might

00:35:49,890 --> 00:35:55,289
basically just basically as start

00:35:53,670 --> 00:36:00,660
supporting it and see whether it works

00:35:55,289 --> 00:36:03,230
or not next question was from someone

00:36:00,660 --> 00:36:03,230
inside

00:36:29,460 --> 00:36:35,289
that's a good question and and we should

00:36:33,280 --> 00:36:37,569
have put that in the slides actually sir

00:36:35,289 --> 00:36:39,220
question was how do we do face the

00:36:37,569 --> 00:36:41,740
call-outs and how do you actually make

00:36:39,220 --> 00:36:44,230
sure that if something breaks early we

00:36:41,740 --> 00:36:48,520
actually don't continue to roll out the

00:36:44,230 --> 00:36:52,780
question is yes we do and it's up to the

00:36:48,520 --> 00:36:54,760
person doing developed so basically you

00:36:52,780 --> 00:36:57,309
can gate you can configure when you want

00:36:54,760 --> 00:36:59,799
the package to go out who actually gets

00:36:57,309 --> 00:37:02,170
it first so you can say hey I want

00:36:59,799 --> 00:37:03,910
people so for our own updates we

00:37:02,170 --> 00:37:06,520
normally say we are going to talk to

00:37:03,910 --> 00:37:09,750
this first if it works if it's a Linux

00:37:06,520 --> 00:37:12,609
update we we have an early adopter group

00:37:09,750 --> 00:37:15,520
and we push it to them and I can get a

00:37:12,609 --> 00:37:19,079
get their feedback and after that it's

00:37:15,520 --> 00:37:19,079
basically just Charlotte roll out

00:37:19,170 --> 00:37:23,440
Charlotte roll out

00:37:20,710 --> 00:37:25,569
so we basically compute the hash of your

00:37:23,440 --> 00:37:28,299
from your machine ID and gives you a

00:37:25,569 --> 00:37:29,650
shot from 0 to 99 and then say like oh

00:37:28,299 --> 00:37:33,240
let's do five percent of the population

00:37:29,650 --> 00:37:33,240
let's do 15 percent

00:37:41,530 --> 00:37:50,230
um question is whether we force updates

00:37:46,240 --> 00:37:52,330
and how we don't which is why if you can

00:37:50,230 --> 00:37:56,800
see from our adoption curve it's kind of

00:37:52,330 --> 00:37:58,300
lagging we'd nag people to update so not

00:37:56,800 --> 00:37:59,860
so much when a new version of it were

00:37:58,300 --> 00:38:00,550
comes out because hey if you want to be

00:37:59,860 --> 00:38:02,050
on 29

00:38:00,550 --> 00:38:05,170
we know software is already nagging you

00:38:02,050 --> 00:38:07,110
anyway we night people starting one

00:38:05,170 --> 00:38:10,570
month before Federer goes kind of

00:38:07,110 --> 00:38:13,690
Anopheles and we start making more and

00:38:10,570 --> 00:38:19,510
more aggressively about to two weeks

00:38:13,690 --> 00:38:21,520
before yeah we are if even if anyone has

00:38:19,510 --> 00:38:25,380
experience basically forcing people to

00:38:21,520 --> 00:38:25,380
update we really want to hear from that

00:38:31,650 --> 00:38:38,350
question is how people upgrade and the

00:38:34,810 --> 00:38:40,270
answer is we support a group of so some

00:38:38,350 --> 00:38:51,490
people upgrade from drum software some

00:38:40,270 --> 00:38:55,420
people are great from a DNF so if people

00:38:51,490 --> 00:38:56,980
want to actually image Federer so what

00:38:55,420 --> 00:38:59,020
happens because we have to boot slap all

00:38:56,980 --> 00:39:01,360
our tooling they need to actually be on

00:38:59,020 --> 00:39:04,240
especially what listed network villain

00:39:01,360 --> 00:39:06,850
so people try not to do that because

00:39:04,240 --> 00:39:09,330
then they need they need to go to the

00:39:06,850 --> 00:39:09,330
hub that suit

00:39:12,830 --> 00:39:24,760
so I don't want to keep people away from

00:39:15,470 --> 00:39:24,760

YouTube URL: https://www.youtube.com/watch?v=pcMD_5EAB-A


