Title: Fedora kernel tree... OF THE FUTURE - Laura Abbott, Jeremy Cline, Justin Forbes - Flock 2019
Publication date: 2019-09-02
Playlist: Flock 2019
Description: 
	The primary way Fedora kernel developers work on the Fedora kernel is via the kernel dist-git repo. This has served us well for years. The preferred way for most developers to interact with a kernel tree is via a src-git tree. The focus of this talk is about ongoing work to produce a src-git tree suitable for use in Fedora and the unique pain points for a kernel. Part of this talk is also a follow up to last years talk about aligning Fedora + RHEL and how this work fits into that.

--
Recordings of talks at Flock are a community effort.  Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:01,650 --> 00:00:07,180
okay I think it's probably about time so

00:00:04,840 --> 00:00:09,670
we can start it started quick pull the

00:00:07,180 --> 00:00:13,870
room who saw me give a talk with Steph

00:00:09,670 --> 00:00:16,550
at flock last year okay who's built the

00:00:13,870 --> 00:00:19,040
colonel the fedora colonel

00:00:16,550 --> 00:00:21,050
okay that's helpful for helping me know

00:00:19,040 --> 00:00:24,350
where to talk about because today I'm

00:00:21,050 --> 00:00:26,720
talking about the Fedora source kit tree

00:00:24,350 --> 00:00:29,690
as I just for a quick poll the room I

00:00:26,720 --> 00:00:32,270
asked about who it saw me talk last year

00:00:29,690 --> 00:00:34,400
were Stef Walter we talked about the

00:00:32,270 --> 00:00:36,320
elephant of the room which was talking

00:00:34,400 --> 00:00:38,210
about the fact that the rel and the

00:00:36,320 --> 00:00:40,820
fedora kernels are supposed to be the

00:00:38,210 --> 00:00:43,250
same but they aren't they differ

00:00:40,820 --> 00:00:45,410
drastically and we went through a lot of

00:00:43,250 --> 00:00:47,710
reasons why they why they were that way

00:00:45,410 --> 00:00:50,390
for some good and some bad reasons and

00:00:47,710 --> 00:00:52,430
why we wanted to potentially make them

00:00:50,390 --> 00:00:55,160
the same and had a whole bunch of grand

00:00:52,430 --> 00:00:58,130
plans and everything like that and as a

00:00:55,160 --> 00:01:00,020
short update on that what we wanted to

00:00:58,130 --> 00:01:02,059
do over the past year was hopefully have

00:01:00,020 --> 00:01:04,130
fedora and rel be the same just because

00:01:02,059 --> 00:01:06,140
if you've heard any of the number of

00:01:04,130 --> 00:01:08,509
talks the grand story is supposed to be

00:01:06,140 --> 00:01:10,100
okay here's fedora fedora is where we do

00:01:08,509 --> 00:01:12,410
all our testing everyone does all their

00:01:10,100 --> 00:01:13,759
work there you find all the bugs then we

00:01:12,410 --> 00:01:16,130
go off to rally make it even more stable

00:01:13,759 --> 00:01:18,710
we sell it we make a lot of money sounds

00:01:16,130 --> 00:01:21,920
great I know but it turns out that

00:01:18,710 --> 00:01:23,780
that's not quite the story and we wanted

00:01:21,920 --> 00:01:26,660
to make everything the same so we could

00:01:23,780 --> 00:01:29,990
be more stable but what ended up

00:01:26,660 --> 00:01:32,270
happening over the past year is I think

00:01:29,990 --> 00:01:34,459
when the fedora side there weren't a lot

00:01:32,270 --> 00:01:36,319
of changes that people would probably

00:01:34,459 --> 00:01:38,990
notice maybe a few spec file cleanups

00:01:36,319 --> 00:01:41,450
here and there there was a lot more work

00:01:38,990 --> 00:01:43,399
internally on the rel side of things

00:01:41,450 --> 00:01:45,920
mostly a lot of discussion about what

00:01:43,399 --> 00:01:48,229
Fedora actually mean what rail actually

00:01:45,920 --> 00:01:49,940
means one thing I always want to talk

00:01:48,229 --> 00:01:51,679
about whenever we bring up Fedora people

00:01:49,940 --> 00:01:53,750
always appreciate the Fedora community

00:01:51,679 --> 00:01:55,250
even if things aren't always aligned

00:01:53,750 --> 00:01:57,110
people love the Fedora community and all

00:01:55,250 --> 00:02:00,679
the work people put into it that's which

00:01:57,110 --> 00:02:02,330
is always great to hear there were some

00:02:00,679 --> 00:02:04,849
minor changes for Fedora spec file

00:02:02,330 --> 00:02:07,310
cleanups and one of the other big things

00:02:04,849 --> 00:02:12,260
that we've gotten over the past year is

00:02:07,310 --> 00:02:15,410
a lot more CI for the kernel and terms

00:02:12,260 --> 00:02:17,030
of the upstream cki project which Red

00:02:15,410 --> 00:02:18,530
Hat has started an attempt to try and do

00:02:17,030 --> 00:02:20,630
continuous integration for the kernel

00:02:18,530 --> 00:02:24,140
testing so there's been a lot of good

00:02:20,630 --> 00:02:27,020
news and one of the things that finally

00:02:24,140 --> 00:02:29,280
come out of this entire project is the

00:02:27,020 --> 00:02:33,329
fact that we now have

00:02:29,280 --> 00:02:36,000
a public get tree available and this is

00:02:33,329 --> 00:02:39,750
a good tree that matches something

00:02:36,000 --> 00:02:42,810
that's approximately what we want to see

00:02:39,750 --> 00:02:45,500
in the future versions of rel what this

00:02:42,810 --> 00:02:47,790
contains is patches we want to bring in

00:02:45,500 --> 00:02:49,769
various packaging scripts and it's

00:02:47,790 --> 00:02:52,739
designed to show exactly how we're

00:02:49,769 --> 00:02:54,810
building building the RAL kernel

00:02:52,739 --> 00:02:57,650
currently and being able to get that out

00:02:54,810 --> 00:03:00,090
there it's it's out there it's available

00:02:57,650 --> 00:03:01,940
it's certainly not public and there's a

00:03:00,090 --> 00:03:03,569
lot more things we need to do but

00:03:01,940 --> 00:03:09,170
getting it out there was a good

00:03:03,569 --> 00:03:12,750
milestone and the focus of this talk is

00:03:09,170 --> 00:03:16,049
talking about that tree as a source get

00:03:12,750 --> 00:03:17,909
tree and why eventually what we'd like

00:03:16,049 --> 00:03:20,010
to do is try and use the source get tree

00:03:17,909 --> 00:03:22,709
directly instead of going for the Diskin

00:03:20,010 --> 00:03:25,290
tree so pull of hands is that if I say

00:03:22,709 --> 00:03:28,200
source it versus disc it

00:03:25,290 --> 00:03:29,670
who needs clarification on what exactly

00:03:28,200 --> 00:03:36,959
the difference between source and disc

00:03:29,670 --> 00:03:39,180
it is okay yeah so just for the the 30

00:03:36,959 --> 00:03:41,669
second summaries for those who raise

00:03:39,180 --> 00:03:43,109
their hands just in case is that the

00:03:41,669 --> 00:03:45,269
disc it is where we end up with the

00:03:43,109 --> 00:03:46,590
Fedora packaging and something like the

00:03:45,269 --> 00:03:48,599
source kit tree is where the actual

00:03:46,590 --> 00:03:49,709
development happens and there are lots

00:03:48,599 --> 00:03:51,269
of reasons why these are two different

00:03:49,709 --> 00:03:53,220
things but the point is that we have two

00:03:51,269 --> 00:03:55,260
separate repositories so we end up

00:03:53,220 --> 00:03:57,660
needing to do two things slightly

00:03:55,260 --> 00:03:59,699
slightly different and part of this

00:03:57,660 --> 00:04:01,889
different reason why we want to possibly

00:03:59,699 --> 00:04:03,329
make these similar is is that developers

00:04:01,889 --> 00:04:05,099
on a day to day basis really like the

00:04:03,329 --> 00:04:07,079
source get dist tree they don't really

00:04:05,099 --> 00:04:11,549
want to deal with the diskette side of

00:04:07,079 --> 00:04:13,609
things and this is the dream really at

00:04:11,549 --> 00:04:16,139
least what we want to see is is that a

00:04:13,609 --> 00:04:18,419
developer or maintainer is does all

00:04:16,139 --> 00:04:21,090
their work in the source kit tree and

00:04:18,419 --> 00:04:22,650
then once they decide okay it's time to

00:04:21,090 --> 00:04:25,229
actually send this out for release they

00:04:22,650 --> 00:04:28,050
run a few commands and then a bunch of

00:04:25,229 --> 00:04:30,419
scripts or automation or magic basically

00:04:28,050 --> 00:04:32,580
moves it all into the disk it's and so

00:04:30,419 --> 00:04:34,050
the point is is that the developer or

00:04:32,580 --> 00:04:36,360
anyone else never really has to think

00:04:34,050 --> 00:04:38,099
about what exactly goes into the disk it

00:04:36,360 --> 00:04:39,450
because it turns out the purpose of the

00:04:38,099 --> 00:04:41,720
diskette is to be able to build an RPM

00:04:39,450 --> 00:04:43,510
and I mentioned maintainer

00:04:41,720 --> 00:04:48,260
commands but part of this could also be

00:04:43,510 --> 00:04:53,300
done by automation so the idea is that

00:04:48,260 --> 00:04:55,370
you'd have perhaps when you have a new

00:04:53,300 --> 00:04:57,200
release automation would automatically

00:04:55,370 --> 00:04:59,930
create a new release and committed to

00:04:57,200 --> 00:05:02,860
disc it so you wouldn't end up having to

00:04:59,930 --> 00:05:02,860
think about it at all

00:05:02,870 --> 00:05:07,570
yes this is talks about a lot of reasons

00:05:05,300 --> 00:05:10,550
why exactly we like the source get trees

00:05:07,570 --> 00:05:12,560
it ends up being when it comes time to

00:05:10,550 --> 00:05:15,860
actually build the kernel you can use

00:05:12,560 --> 00:05:17,630
the same build commands as upstream so I

00:05:15,860 --> 00:05:20,900
asked how many people had had built the

00:05:17,630 --> 00:05:22,790
kernel and it's usually when you do a

00:05:20,900 --> 00:05:25,550
build one to build a kernel you say do

00:05:22,790 --> 00:05:27,500
make def config make menu config to

00:05:25,550 --> 00:05:29,660
configure your options then you type

00:05:27,500 --> 00:05:31,460
make to build the kernel then do make

00:05:29,660 --> 00:05:33,260
modules install these are fairly

00:05:31,460 --> 00:05:34,700
standard instructions that if you google

00:05:33,260 --> 00:05:37,250
about how do I build a kernel you're

00:05:34,700 --> 00:05:38,810
going to find from experience as a

00:05:37,250 --> 00:05:41,240
maintainer and trying to help people on

00:05:38,810 --> 00:05:42,560
IRC and on various forums getting people

00:05:41,240 --> 00:05:44,870
to understand how to build a kernel of

00:05:42,560 --> 00:05:47,660
fedora way is not always the easiest

00:05:44,870 --> 00:05:49,430
task just because the instructions are

00:05:47,660 --> 00:05:51,380
documented but they're not always the

00:05:49,430 --> 00:05:52,820
first hit on Google so having something

00:05:51,380 --> 00:05:55,960
that people are actually familiar with

00:05:52,820 --> 00:05:58,310
makes everything a lot easier for users

00:05:55,960 --> 00:06:01,100
well I'll talk about this in a bit about

00:05:58,310 --> 00:06:02,990
making an RPM with the existing tree

00:06:01,100 --> 00:06:06,740
it's not quite the same as upstream but

00:06:02,990 --> 00:06:08,090
it's something similar if as long as

00:06:06,740 --> 00:06:10,160
we're also talking about users building

00:06:08,090 --> 00:06:12,229
their own kernels another sticking point

00:06:10,160 --> 00:06:13,669
is if people want to build custom

00:06:12,229 --> 00:06:15,680
kernels they're usually doing it because

00:06:13,669 --> 00:06:18,770
they have one of two things they want to

00:06:15,680 --> 00:06:20,780
make changes to either they want a new

00:06:18,770 --> 00:06:25,040
module a new configuration option or

00:06:20,780 --> 00:06:28,190
they want to apply their own patches who

00:06:25,040 --> 00:06:31,640
here for those who have been around a

00:06:28,190 --> 00:06:34,940
very long time has tried to patch an RPM

00:06:31,640 --> 00:06:40,970
using the RPM build method and manually

00:06:34,940 --> 00:06:42,950
yeah that's not a lot of fun these days

00:06:40,970 --> 00:06:46,040
git is the preferred tool of choice for

00:06:42,950 --> 00:06:48,560
almost all development and it turns out

00:06:46,040 --> 00:06:50,599
that being able to say okay I want to

00:06:48,560 --> 00:06:52,550
test this patch or even this branch just

00:06:50,599 --> 00:06:55,620
do a git merge into the same tree and

00:06:52,550 --> 00:06:58,169
then being able to run the same tree

00:06:55,620 --> 00:07:00,840
the same commands is so much easier for

00:06:58,169 --> 00:07:02,970
people than trying to explain how to get

00:07:00,840 --> 00:07:05,490
things into a diskette where you end up

00:07:02,970 --> 00:07:08,130
having to do more steps copy it into the

00:07:05,490 --> 00:07:12,570
disk it and bring things out really a

00:07:08,130 --> 00:07:14,880
big pain and so it can it just makes

00:07:12,570 --> 00:07:16,740
things so much easier and it really goes

00:07:14,880 --> 00:07:19,370
to this is what people want to consume

00:07:16,740 --> 00:07:21,360
and what we actually want to deliver and

00:07:19,370 --> 00:07:23,729
it also gets back to the point about

00:07:21,360 --> 00:07:25,410
talking about going from source get to

00:07:23,729 --> 00:07:29,669
disk writ more opportunities for

00:07:25,410 --> 00:07:31,199
automation as well it is is that the

00:07:29,669 --> 00:07:32,760
existing build and testing

00:07:31,199 --> 00:07:35,639
infrastructure can work on source get

00:07:32,760 --> 00:07:40,590
tree as opposed to disk in tree it's out

00:07:35,639 --> 00:07:42,780
there and so that's a lot of the

00:07:40,590 --> 00:07:47,039
benefits about why we should have one

00:07:42,780 --> 00:07:48,630
source get versus disk it and part of

00:07:47,039 --> 00:07:50,490
the point is when he talked about over

00:07:48,630 --> 00:07:52,860
the past year about we had this idea

00:07:50,490 --> 00:07:56,490
about well okay so fedora and rel should

00:07:52,860 --> 00:07:59,310
be the same it turns out that fedora and

00:07:56,490 --> 00:08:02,220
rel will never actually be identical for

00:07:59,310 --> 00:08:04,169
a lot of reasons a big thing is because

00:08:02,220 --> 00:08:07,620
of the things that make the Fedora

00:08:04,169 --> 00:08:11,760
community really great unique is being

00:08:07,620 --> 00:08:13,979
able to do things fast and

00:08:11,760 --> 00:08:16,200
experimentally we matthew miller likes

00:08:13,979 --> 00:08:17,400
to say we are the leading edge and the

00:08:16,200 --> 00:08:19,620
idea with being the leading edge is that

00:08:17,400 --> 00:08:24,150
there's a fairly low barrier to entry

00:08:19,620 --> 00:08:25,949
for trying new things for the kernel is

00:08:24,150 --> 00:08:28,380
that if people come in and say hey this

00:08:25,949 --> 00:08:30,449
module is off can we turn it on if the

00:08:28,380 --> 00:08:33,029
kernel maintainer is review it and see

00:08:30,449 --> 00:08:34,500
that okay looks like it's on looks like

00:08:33,029 --> 00:08:36,240
it's not gonna break anything we turn it

00:08:34,500 --> 00:08:38,580
on that can happen and turn around in

00:08:36,240 --> 00:08:39,779
less than a day the other side of things

00:08:38,580 --> 00:08:41,700
for rel is that there's a lot more

00:08:39,779 --> 00:08:43,860
process involved simply because they had

00:08:41,700 --> 00:08:46,020
firm requirements this all comes back to

00:08:43,860 --> 00:08:48,330
fedora and rel are never exactly going

00:08:46,020 --> 00:08:50,400
to be the same but there's a lot of

00:08:48,330 --> 00:08:54,690
things that it turns out they can

00:08:50,400 --> 00:08:56,910
actually share they should be able to

00:08:54,690 --> 00:08:58,920
share the same spec file there shouldn't

00:08:56,910 --> 00:09:00,660
be too much different between them for

00:08:58,920 --> 00:09:05,040
no reason to have different build

00:09:00,660 --> 00:09:07,170
processes the same packaging scripts in

00:09:05,040 --> 00:09:09,210
terms of being able to go from source

00:09:07,170 --> 00:09:11,370
get to disk it if we think about the

00:09:09,210 --> 00:09:14,130
what we're actually shipping maybe

00:09:11,370 --> 00:09:17,130
relatives a few more files in there but

00:09:14,130 --> 00:09:19,230
ultimately it's still just going to be

00:09:17,130 --> 00:09:22,740
the same thing between fedora and rel

00:09:19,230 --> 00:09:23,790
for shipping a kernel some modules and

00:09:22,740 --> 00:09:28,680
maybe a few other things out there

00:09:23,790 --> 00:09:30,900
hand-waving a lot there and I mentioned

00:09:28,680 --> 00:09:32,490
the configuration files and this has

00:09:30,900 --> 00:09:35,790
been one thing we I've spent a lot of

00:09:32,490 --> 00:09:39,000
time trying to figure out how exactly to

00:09:35,790 --> 00:09:41,280
manage that ideally what we eventually

00:09:39,000 --> 00:09:43,860
want to do is to have both the fedora

00:09:41,280 --> 00:09:46,650
and the rail configuration files in the

00:09:43,860 --> 00:09:48,180
same source get tree and make it very

00:09:46,650 --> 00:09:51,300
easy to for people be able to switch

00:09:48,180 --> 00:09:52,920
between them and test them we're looking

00:09:51,300 --> 00:09:55,470
about different ideas about how to do

00:09:52,920 --> 00:09:58,380
this but part of one of the ideas is

00:09:55,470 --> 00:10:02,310
possibly just to have one of this set

00:09:58,380 --> 00:10:04,530
for the rel versus fedora be another

00:10:02,310 --> 00:10:07,950
kernel variant how many of you have

00:10:04,530 --> 00:10:11,340
installed kernel debug before yeah so

00:10:07,950 --> 00:10:13,050
that's yeah I mean you've installed that

00:10:11,340 --> 00:10:14,760
for building and so the point is is that

00:10:13,050 --> 00:10:16,710
if we can have kernel debug it turns out

00:10:14,760 --> 00:10:18,510
it's pretty easy to expand on that

00:10:16,710 --> 00:10:21,750
concept and say if we have kernel debug

00:10:18,510 --> 00:10:22,860
why not have kernel rel or another name

00:10:21,750 --> 00:10:24,510
people want to come up with talking

00:10:22,860 --> 00:10:26,640
about it's another set of configs that

00:10:24,510 --> 00:10:28,620
people that's available automation

00:10:26,640 --> 00:10:33,840
contested people contested trying to try

00:10:28,620 --> 00:10:34,830
and see what's available and then with

00:10:33,840 --> 00:10:36,570
the point about having different

00:10:34,830 --> 00:10:39,240
variants is that it does get down to the

00:10:36,570 --> 00:10:42,000
point about well we do also carry

00:10:39,240 --> 00:10:44,850
different sets of patches between rel

00:10:42,000 --> 00:10:46,380
and fedora um some of these are

00:10:44,850 --> 00:10:49,710
different for good reasons some of these

00:10:46,380 --> 00:10:51,390
are different because people haven't put

00:10:49,710 --> 00:10:54,480
in the time to make in common but

00:10:51,390 --> 00:10:56,880
theoretically there's no reason why the

00:10:54,480 --> 00:10:58,860
two couldn't potentially carry these the

00:10:56,880 --> 00:11:01,350
same sets of patches at least just for

00:10:58,860 --> 00:11:03,060
building and then we have a have a

00:11:01,350 --> 00:11:05,400
single chrome tree again to testing and

00:11:03,060 --> 00:11:07,080
make it easier none of this is saying

00:11:05,400 --> 00:11:07,980
it'll actually be perfect or easy but

00:11:07,080 --> 00:11:10,050
the point is is that if we can get

00:11:07,980 --> 00:11:12,180
something that's approximately right to

00:11:10,050 --> 00:11:16,470
do the amount of testing we need it

00:11:12,180 --> 00:11:21,930
makes it easier ok so here's some

00:11:16,470 --> 00:11:24,860
gotchas about the existing model the

00:11:21,930 --> 00:11:24,860
tree we push public

00:11:25,199 --> 00:11:30,750
the tree that's currently public is that

00:11:28,199 --> 00:11:34,440
I did some work on top of that to be

00:11:30,750 --> 00:11:37,800
able to use Braille files versus Fedora

00:11:34,440 --> 00:11:39,720
files based on the distant tag so the

00:11:37,800 --> 00:11:43,350
idea is is that it's hard-coded to say

00:11:39,720 --> 00:11:47,220
list a rail tag versus a fedora detect

00:11:43,350 --> 00:11:49,380
uses the uses the he selects the correct

00:11:47,220 --> 00:11:50,850
set of files that makes it actually a

00:11:49,380 --> 00:11:54,480
little bit tricky to potentially have

00:11:50,850 --> 00:11:56,040
one tree that can work for both this is

00:11:54,480 --> 00:11:59,730
certainly something still trying to

00:11:56,040 --> 00:12:01,470
figure out another thing that is

00:11:59,730 --> 00:12:04,199
potentially a little bit interesting is

00:12:01,470 --> 00:12:06,810
looking at how rawhide does snapshots is

00:12:04,199 --> 00:12:09,209
is that the existing rail code didn't

00:12:06,810 --> 00:12:11,790
have support to do the daily rawhide

00:12:09,209 --> 00:12:14,149
snapshots that Fedora relies on I had to

00:12:11,790 --> 00:12:17,190
bring some of that in and potentially

00:12:14,149 --> 00:12:18,870
look at how that's generated and maybe

00:12:17,190 --> 00:12:20,940
is with something for fedora to look at

00:12:18,870 --> 00:12:24,120
as well to make sure that's good synced

00:12:20,940 --> 00:12:29,130
up and then there's a sticking point of

00:12:24,120 --> 00:12:31,350
chain of the changelog every RPM has a

00:12:29,130 --> 00:12:33,050
change log which is supposed to be

00:12:31,350 --> 00:12:34,920
updated with the description and

00:12:33,050 --> 00:12:36,930
sometimes people have brought up with

00:12:34,920 --> 00:12:39,420
well if we have everything and get these

00:12:36,930 --> 00:12:42,000
days why do we have the RPM change log

00:12:39,420 --> 00:12:45,000
and the answer comes back is that if we

00:12:42,000 --> 00:12:46,470
think about who the target of the RPM

00:12:45,000 --> 00:12:50,069
change log is it's not the developer

00:12:46,470 --> 00:12:51,959
it's the axis admin or someone else who

00:12:50,069 --> 00:12:53,550
is installing the package and wants to

00:12:51,959 --> 00:12:55,589
know exactly what's changed and they're

00:12:53,550 --> 00:12:58,949
used to running RPM change log to see

00:12:55,589 --> 00:13:01,019
what's in there so for now at least we

00:12:58,949 --> 00:13:03,389
still need to be able to keep things in

00:13:01,019 --> 00:13:05,579
the RPM change log but it also turns out

00:13:03,389 --> 00:13:07,649
that trying to generate the RPM change

00:13:05,579 --> 00:13:11,190
log from the existing scripts

00:13:07,649 --> 00:13:13,860
doesn't quite work with rebasing every

00:13:11,190 --> 00:13:15,510
kernel version because because of the

00:13:13,860 --> 00:13:17,250
way things are structured this should

00:13:15,510 --> 00:13:19,440
just be a to do that's to clean things

00:13:17,250 --> 00:13:24,089
up but it's just something more we need

00:13:19,440 --> 00:13:27,350
to work through more of things that

00:13:24,089 --> 00:13:30,060
drifted between fedora and braille our

00:13:27,350 --> 00:13:33,689
choices about how exactly we split

00:13:30,060 --> 00:13:35,510
things into different repositories who

00:13:33,689 --> 00:13:40,820
has installed the perfect

00:13:35,510 --> 00:13:43,730
before okay that comes from a package

00:13:40,820 --> 00:13:47,630
called Colonel tools and Colonel tools

00:13:43,730 --> 00:13:49,340
is a bunch of user space tools that get

00:13:47,630 --> 00:13:50,990
built that are part of the colonel tree

00:13:49,340 --> 00:13:53,750
but are not actually part of the kernel

00:13:50,990 --> 00:13:55,310
itself and it turns out because we're

00:13:53,750 --> 00:13:57,320
building a set of user space tools we

00:13:55,310 --> 00:13:59,300
end up into user space dependency

00:13:57,320 --> 00:14:01,550
problems and trying to build that all in

00:13:59,300 --> 00:14:03,800
the same kernel spec file as a separate

00:14:01,550 --> 00:14:07,010
package was kind of difficult at times

00:14:03,800 --> 00:14:09,680
so I split that off in fedora to be able

00:14:07,010 --> 00:14:11,750
to build that special specifically and

00:14:09,680 --> 00:14:13,700
then Justin did some other work to be

00:14:11,750 --> 00:14:15,260
able to split out kernel headers as well

00:14:13,700 --> 00:14:17,930
so we're now building that in separate

00:14:15,260 --> 00:14:19,610
repositories and for the most there are

00:14:17,930 --> 00:14:22,850
some sometimes some hiccups with fedora

00:14:19,610 --> 00:14:25,130
but I overall think that it's worked out

00:14:22,850 --> 00:14:26,780
fairly well to have because the core

00:14:25,130 --> 00:14:29,750
kernel being built in the kernel package

00:14:26,780 --> 00:14:31,270
user space packages user space tools

00:14:29,750 --> 00:14:34,070
user space headers and separate

00:14:31,270 --> 00:14:36,650
repositories but trying to bring this

00:14:34,070 --> 00:14:40,250
back together for rel is a little bit

00:14:36,650 --> 00:14:44,440
trickier so we need to figure out how

00:14:40,250 --> 00:14:49,100
exactly to bring those back together and

00:14:44,440 --> 00:14:51,260
another sticking point here is sometimes

00:14:49,100 --> 00:14:55,760
it turns out we may need to go back from

00:14:51,260 --> 00:15:00,140
disk to source get a good a good example

00:14:55,760 --> 00:15:01,550
is that system-wide package changes to

00:15:00,140 --> 00:15:03,350
clean up various parts of the spec file

00:15:01,550 --> 00:15:04,880
these sometimes happens because it turns

00:15:03,350 --> 00:15:06,890
because there are very dedicated people

00:15:04,880 --> 00:15:08,360
who take the time to garden all the

00:15:06,890 --> 00:15:10,070
packages and clean up cruft we don't

00:15:08,360 --> 00:15:11,450
need if those are just going to the

00:15:10,070 --> 00:15:12,830
diskette we need to make sure we have a

00:15:11,450 --> 00:15:16,750
way to get those back and forth and

00:15:12,830 --> 00:15:19,220
we're not over writing everything there

00:15:16,750 --> 00:15:22,940
there's also some details about secure

00:15:19,220 --> 00:15:24,470
boot but again so this is a long way of

00:15:22,940 --> 00:15:27,070
saying that we have a proof of concept

00:15:24,470 --> 00:15:33,430
out there but it's not quite ready and

00:15:27,070 --> 00:15:33,430
then I'm gonna give a short demo

00:15:35,500 --> 00:15:42,670
of a kernel tree okay this is the

00:15:40,390 --> 00:15:46,720
working tree that what I tend to do a

00:15:42,670 --> 00:15:51,490
lot of on my day to day basis so start

00:15:46,720 --> 00:15:54,550
with a make RH clean there are these are

00:15:51,490 --> 00:15:56,530
set of custom commands that have been

00:15:54,550 --> 00:15:57,840
added by Red Hat kernel engineers to be

00:15:56,530 --> 00:16:00,190
able to do all the Red Hat stuff

00:15:57,840 --> 00:16:04,480
everything lives inside the Red Hat

00:16:00,190 --> 00:16:06,850
directory so let's say I make a change

00:16:04,480 --> 00:16:08,110
to a kernel configuration option and I

00:16:06,850 --> 00:16:09,340
want to make sure the configs work I'll

00:16:08,110 --> 00:16:20,680
do make our age

00:16:09,340 --> 00:16:22,780
I will spell it correctly and it's going

00:16:20,680 --> 00:16:24,730
to go through build and process and do a

00:16:22,780 --> 00:16:27,960
bunch of the checks to make sure all the

00:16:24,730 --> 00:16:27,960
configs are actually ok

00:16:40,300 --> 00:16:44,140
and then if I want to do a little bit

00:16:42,730 --> 00:16:47,950
more checking maybe I made some changes

00:16:44,140 --> 00:16:52,899
to the how things are going into the RPM

00:16:47,950 --> 00:16:54,550
spec file I'm I do make RH prep we'll do

00:16:52,899 --> 00:16:58,510
some commands and it will run the prep

00:16:54,550 --> 00:17:01,300
stage of the RPM and this is pretty

00:16:58,510 --> 00:17:02,980
boring you can see exactly what I am

00:17:01,300 --> 00:17:05,260
doing with large portions of my day so

00:17:02,980 --> 00:17:08,199
if you ever wonder why curl developers

00:17:05,260 --> 00:17:09,370
seem to get so bored this is why we can

00:17:08,199 --> 00:17:11,559
watch this run for a little bit but also

00:17:09,370 --> 00:17:12,819
use this as an opportunity to take some

00:17:11,559 --> 00:17:14,350
questions right now I'm about halfway

00:17:12,819 --> 00:17:16,839
through I'll talk a little bit more but

00:17:14,350 --> 00:17:22,559
if anyone has questions right now I'm

00:17:16,839 --> 00:17:22,559
happy to take them yes

00:17:32,120 --> 00:17:36,570
yeah the the question was about was

00:17:34,980 --> 00:17:39,990
there any talk upstream about splitting

00:17:36,570 --> 00:17:42,780
the tools into separate projects perf

00:17:39,990 --> 00:17:45,090
BPF tools hyper-v into a separate

00:17:42,780 --> 00:17:49,800
project and the answer is is that yes

00:17:45,090 --> 00:17:53,280
often on this has been discussed and in

00:17:49,800 --> 00:17:54,990
that some at this a lot of this happened

00:17:53,280 --> 00:17:56,250
well before my time I got into kernel

00:17:54,990 --> 00:17:57,750
development but it sounded like this was

00:17:56,250 --> 00:18:01,470
kind of controversial about where they

00:17:57,750 --> 00:18:03,090
ended up and for now I think the plant

00:18:01,470 --> 00:18:05,100
is for everything to live in the single

00:18:03,090 --> 00:18:07,560
kernel repository but I've also heard

00:18:05,100 --> 00:18:08,790
some other people who are say on the

00:18:07,560 --> 00:18:11,010
tracing side of things who were

00:18:08,790 --> 00:18:13,170
interested interested in maybe splitting

00:18:11,010 --> 00:18:15,390
it out we'll have to wait and see

00:18:13,170 --> 00:18:17,100
exactly what happens there there is some

00:18:15,390 --> 00:18:26,760
interest but I don't see it happening

00:18:17,100 --> 00:18:28,260
any time super soon yeah you've just

00:18:26,760 --> 00:18:29,820
correctly described the kernel process

00:18:28,260 --> 00:18:39,980
about bringing stuff up every few years

00:18:29,820 --> 00:18:39,980
and then sometimes things change Kevin

00:18:48,400 --> 00:18:53,260
the question is about building the

00:18:50,230 --> 00:18:56,500
kernel is a sub package in the kernel at

00:18:53,260 --> 00:18:59,470
volt system is regular I'm not quite

00:18:56,500 --> 00:19:01,900
sure if you're using the same

00:18:59,470 --> 00:19:03,340
terminology I was that when you think of

00:19:01,900 --> 00:19:05,140
sub package are you thinking of having

00:19:03,340 --> 00:19:06,700
it be in a separate repository and then

00:19:05,140 --> 00:19:13,830
you change like a chain builder just

00:19:06,700 --> 00:19:17,080
another package that gets generated yeah

00:19:13,830 --> 00:19:18,460
yeah that's exactly what I was what I

00:19:17,080 --> 00:19:20,440
was looking at and possibly suggest

00:19:18,460 --> 00:19:22,150
who's suggesting and that's one of the

00:19:20,440 --> 00:19:24,250
ideas we've been kicking around to try

00:19:22,150 --> 00:19:25,750
and do things we don't have to have

00:19:24,250 --> 00:19:31,270
anything concrete right now to be able

00:19:25,750 --> 00:19:32,710
to do that you yes you have exactly hit

00:19:31,270 --> 00:19:36,610
on one of the key issues and trying to

00:19:32,710 --> 00:19:38,650
figure out what to do is that the kernel

00:19:36,610 --> 00:19:40,030
build process already takes a very very

00:19:38,650 --> 00:19:42,250
long time and building yet another

00:19:40,030 --> 00:19:44,380
variant adds more time to the build for

00:19:42,250 --> 00:19:45,580
things people may not actually want so

00:19:44,380 --> 00:19:48,550
these are trade-offs were going to have

00:19:45,580 --> 00:19:50,890
to figure out okay this is actually

00:19:48,550 --> 00:19:54,390
pretty boring so I'm just gonna get back

00:19:50,890 --> 00:19:58,540
to the actual stuff people want to see

00:19:54,390 --> 00:20:00,910
okay so one of the things that sometimes

00:19:58,540 --> 00:20:02,980
gets brought up is when we talk about

00:20:00,910 --> 00:20:05,290
making changes like this it says okay if

00:20:02,980 --> 00:20:06,790
the current team is potentially looking

00:20:05,290 --> 00:20:07,929
at moving to a service get tree model

00:20:06,790 --> 00:20:09,040
what does that mean for the Fedora

00:20:07,929 --> 00:20:10,630
community left to do

00:20:09,040 --> 00:20:11,950
well the Fedora community not be allowed

00:20:10,630 --> 00:20:14,650
to make any changes because it's all

00:20:11,950 --> 00:20:16,450
going to be restricted and I just kind

00:20:14,650 --> 00:20:18,880
of want to emphasize that what the

00:20:16,450 --> 00:20:23,950
Fedora community does is really helpful

00:20:18,880 --> 00:20:26,290
a lot of what we put out here is I that

00:20:23,950 --> 00:20:28,929
we push publicly is not actually what I

00:20:26,290 --> 00:20:32,410
consider core kernel development it's a

00:20:28,929 --> 00:20:34,780
lot of scripting and packaging and other

00:20:32,410 --> 00:20:36,850
work that isn't always the expertise of

00:20:34,780 --> 00:20:38,290
the kernel developers and this is one

00:20:36,850 --> 00:20:40,360
area where I think the overall the

00:20:38,290 --> 00:20:42,700
entire Fedora community really shines in

00:20:40,360 --> 00:20:44,290
terms of helping packages get up to

00:20:42,700 --> 00:20:46,450
scale there was a talk I didn't get a

00:20:44,290 --> 00:20:48,610
chance to see - about packaging mistakes

00:20:46,450 --> 00:20:50,650
and we were joking that the kernel spec

00:20:48,610 --> 00:20:52,410
file was probably doing a lot of them

00:20:50,650 --> 00:20:54,610
just because we end up trying to do

00:20:52,410 --> 00:20:56,710
workarounds for various things

00:20:54,610 --> 00:20:58,960
and so this is a sample about something

00:20:56,710 --> 00:21:01,419
where I think the footwear community can

00:20:58,960 --> 00:21:02,919
really help make make the kernel package

00:21:01,419 --> 00:21:05,529
better in terms of figuring out better

00:21:02,919 --> 00:21:07,360
ways to do things we certainly have our

00:21:05,529 --> 00:21:09,159
own scheme for generating current

00:21:07,360 --> 00:21:11,289
configuration options and how everything

00:21:09,159 --> 00:21:13,120
goes but I'm certain there's better

00:21:11,289 --> 00:21:16,149
ideas about how that could go up as well

00:21:13,120 --> 00:21:20,919
and really we just need help in terms of

00:21:16,149 --> 00:21:24,309
terms of trying to maintain things okay

00:21:20,919 --> 00:21:26,200
so this is I wanted to talk about the

00:21:24,309 --> 00:21:29,169
kernel configuration scheme that we were

00:21:26,200 --> 00:21:30,340
looking at trying to do how many people

00:21:29,169 --> 00:21:34,480
have ever looked at the kernel

00:21:30,340 --> 00:21:37,860
configuration scheme okay yeah that's a

00:21:34,480 --> 00:21:40,840
pretty small number how many of you had

00:21:37,860 --> 00:21:43,330
I asked about heavy people built the

00:21:40,840 --> 00:21:44,679
kernel and one of the steps people tend

00:21:43,330 --> 00:21:47,590
to do when they build the kernel is do

00:21:44,679 --> 00:21:50,019
make many config to get a nice menu of

00:21:47,590 --> 00:21:52,059
options to be able to scroll through and

00:21:50,019 --> 00:21:56,409
maybe find what you want to turn off and

00:21:52,059 --> 00:21:59,559
on to configure the kernel due to the

00:21:56,409 --> 00:22:01,480
way we produce kernels currently that

00:21:59,559 --> 00:22:04,840
doesn't quite work instead we have a

00:22:01,480 --> 00:22:07,269
series of directories that describe what

00:22:04,840 --> 00:22:09,730
what configuration options we turn off

00:22:07,269 --> 00:22:11,649
and on for various architectures it's

00:22:09,730 --> 00:22:13,929
kind of out of scope for this talk but

00:22:11,649 --> 00:22:16,600
I'm happy to describe it but one of the

00:22:13,929 --> 00:22:19,769
things we're looking to try and do is to

00:22:16,600 --> 00:22:22,179
actually have fedora and rel share

00:22:19,769 --> 00:22:24,760
configuration options in some way and

00:22:22,179 --> 00:22:26,919
the point is is that there's some number

00:22:24,760 --> 00:22:28,450
that are going to be common in terms of

00:22:26,919 --> 00:22:30,820
core features think about your file

00:22:28,450 --> 00:22:33,309
systems think about your core IPC

00:22:30,820 --> 00:22:35,019
functionality core drivers those are the

00:22:33,309 --> 00:22:38,500
same between rail and fedora let's keep

00:22:35,019 --> 00:22:39,669
them the same and there is always going

00:22:38,500 --> 00:22:40,960
to be some fedoras things that are

00:22:39,669 --> 00:22:43,480
different there's going to be real

00:22:40,960 --> 00:22:44,799
things they're different and one thing

00:22:43,480 --> 00:22:47,830
is that we're potentially looking at

00:22:44,799 --> 00:22:49,870
doing is having the fedora in common be

00:22:47,830 --> 00:22:52,029
updated and then just try and tell

00:22:49,870 --> 00:22:56,200
people please don't touch the rail

00:22:52,029 --> 00:22:58,360
configurations part of this is not this

00:22:56,200 --> 00:23:02,440
it's not because we don't trust the

00:22:58,360 --> 00:23:03,850
fedora community but because the rel

00:23:02,440 --> 00:23:07,059
kernel developers like to make sure

00:23:03,850 --> 00:23:07,930
they've reviewed all the options very

00:23:07,059 --> 00:23:10,510
closely because

00:23:07,930 --> 00:23:12,400
can have unintended side effects even

00:23:10,510 --> 00:23:14,590
turning on modules I thought would be

00:23:12,400 --> 00:23:16,060
safe that I've gotten before no no don't

00:23:14,590 --> 00:23:19,150
turn this on you're going to be doing

00:23:16,060 --> 00:23:23,940
something interesting and so it just

00:23:19,150 --> 00:23:25,960
makes a little bit easier okay and

00:23:23,940 --> 00:23:30,310
getting into a little bit of the

00:23:25,960 --> 00:23:33,400
nitty-gritty details is that you may

00:23:30,310 --> 00:23:35,890
have heard both Brendon and other people

00:23:33,400 --> 00:23:37,240
talk about the idea about okay we want

00:23:35,890 --> 00:23:38,650
to eventually by the time Braille 9

00:23:37,240 --> 00:23:43,390
rolls around have everything moving

00:23:38,650 --> 00:23:44,680
faster and up there and so the end part

00:23:43,390 --> 00:23:47,820
of this is hopefully to make Fedora

00:23:44,680 --> 00:23:51,040
rawhide more stable and poof Darrell so

00:23:47,820 --> 00:23:54,040
for everything to be able to do all the

00:23:51,040 --> 00:23:57,880
testing and this kind of gets back to

00:23:54,040 --> 00:23:59,230
the point then of sure we can certainly

00:23:57,880 --> 00:24:05,320
have people put up there but how exactly

00:23:59,230 --> 00:24:07,420
are people doing code reviews because if

00:24:05,320 --> 00:24:08,890
you've ever monitored anything about the

00:24:07,420 --> 00:24:12,610
kernel before is is that it still has a

00:24:08,890 --> 00:24:14,140
heavily email based workflow which some

00:24:12,610 --> 00:24:16,930
people will try to justify as being

00:24:14,140 --> 00:24:20,050
around for good reasons I don't think is

00:24:16,930 --> 00:24:23,770
around for as good reasons but that's a

00:24:20,050 --> 00:24:26,260
best discussed over beverages but the

00:24:23,770 --> 00:24:28,750
point is is that as we're moving to a

00:24:26,260 --> 00:24:30,460
workflow that say maybe having a tree

00:24:28,750 --> 00:24:33,310
more public we need to figure out

00:24:30,460 --> 00:24:35,530
exactly how people can do reviews and do

00:24:33,310 --> 00:24:36,970
these reviews publicly and this has been

00:24:35,530 --> 00:24:39,340
a lot of time but I've been discussing

00:24:36,970 --> 00:24:40,930
with people internally it's exactly says

00:24:39,340 --> 00:24:43,150
everyone is used to doing all these

00:24:40,930 --> 00:24:45,910
reviews and everything internally

00:24:43,150 --> 00:24:47,290
getting ready for this how exactly we're

00:24:45,910 --> 00:24:49,570
going to do this publicly are we going

00:24:47,290 --> 00:24:52,690
to do everything on a man list or if

00:24:49,570 --> 00:24:54,690
there's something else to try and do we

00:24:52,690 --> 00:24:59,170
do eventually want to have everything

00:24:54,690 --> 00:25:02,080
out there publicly my dream of some sort

00:24:59,170 --> 00:25:05,620
is that there is automation out there

00:25:02,080 --> 00:25:07,960
that generates a branch when say a new

00:25:05,620 --> 00:25:11,230
kernel or C comes out it does everything

00:25:07,960 --> 00:25:13,840
automatically generates it generates the

00:25:11,230 --> 00:25:15,700
commits generates a branch the bot also

00:25:13,840 --> 00:25:18,070
adds in all the appropriate kernel

00:25:15,700 --> 00:25:19,750
developers come and say hey this this

00:25:18,070 --> 00:25:21,190
change looks like it brought in some

00:25:19,750 --> 00:25:22,899
changes maybe in your area

00:25:21,190 --> 00:25:25,090
or added some new configuration options

00:25:22,899 --> 00:25:27,159
and this is happening somewhere publicly

00:25:25,090 --> 00:25:29,049
those curve developers get added they

00:25:27,159 --> 00:25:32,080
can review and take care of everything

00:25:29,049 --> 00:25:33,099
pipe dream were maybe right now but we

00:25:32,080 --> 00:25:34,840
still want to try and work through

00:25:33,099 --> 00:25:38,139
because the point is is that we're doing

00:25:34,840 --> 00:25:42,970
everything out there in public so you

00:25:38,139 --> 00:25:45,340
can see exactly what's going on ok this

00:25:42,970 --> 00:25:49,239
is about where I'm wrapping up and I

00:25:45,340 --> 00:25:50,830
know I gave people a lot of big dump of

00:25:49,239 --> 00:25:54,609
information and tried to show exactly

00:25:50,830 --> 00:25:55,749
what was out there and if I'm trying to

00:25:54,609 --> 00:25:57,700
make it sound like this is what we want

00:25:55,749 --> 00:26:00,580
to do and we're not actually committed

00:25:57,700 --> 00:26:02,109
to using this at the moment it's still

00:26:00,580 --> 00:26:05,139
certainly a work in progress there are

00:26:02,109 --> 00:26:06,729
things we need to figure out and I kind

00:26:05,139 --> 00:26:09,190
of like to use the rest of time to see

00:26:06,729 --> 00:26:11,259
if anyone out there has any objections

00:26:09,190 --> 00:26:13,869
or thoughts about what else we would

00:26:11,259 --> 00:26:15,580
need to make this work and what would

00:26:13,869 --> 00:26:18,359
make the Fedora commune be confident

00:26:15,580 --> 00:26:20,769
about switching to this model for

00:26:18,359 --> 00:26:22,239
developers to use obviously we don't

00:26:20,769 --> 00:26:25,320
want to risk regressing anything in

00:26:22,239 --> 00:26:25,320
Fedora and yes Peter

00:26:55,060 --> 00:27:00,260
yeah and I think the Peter talked about

00:26:58,400 --> 00:27:02,540
how group has its own set of scripts to

00:27:00,260 --> 00:27:04,280
be able to do this and I think that's

00:27:02,540 --> 00:27:05,120
actually a very good point is that part

00:27:04,280 --> 00:27:06,620
of the reason we want to do this

00:27:05,120 --> 00:27:08,660
publicly is at Ryan is because we're

00:27:06,620 --> 00:27:10,910
certain that the kernel is not the only

00:27:08,660 --> 00:27:13,130
package that is doing this or wants to

00:27:10,910 --> 00:27:15,110
do this and we'd like to be hopefully to

00:27:13,130 --> 00:27:16,430
be able to use common scripting because

00:27:15,110 --> 00:27:18,080
what we have is a whole bunch of shell

00:27:16,430 --> 00:27:19,190
scripts and some ox grips thrown in

00:27:18,080 --> 00:27:22,370
together to be able to tie everything

00:27:19,190 --> 00:27:23,630
together and if someone repeated always

00:27:22,370 --> 00:27:25,190
repeatedly says I can't believe you're

00:27:23,630 --> 00:27:31,550
still using the Ox script I wrote in

00:27:25,190 --> 00:27:32,750
2012 for something so yes I mean which

00:27:31,550 --> 00:27:35,240
kind of goes to a bigger a bigger point

00:27:32,750 --> 00:27:37,160
though is is is that is there something

00:27:35,240 --> 00:27:39,140
else out there that's maybe a better

00:27:37,160 --> 00:27:40,820
maintained package or anything else out

00:27:39,140 --> 00:27:43,850
there if you've seen the talk about

00:27:40,820 --> 00:27:45,830
packet or other work to try and do some

00:27:43,850 --> 00:27:48,470
of the diskette packaging automatically

00:27:45,830 --> 00:27:50,600
maybe that's an option I think packet

00:27:48,470 --> 00:27:52,730
has still focused on other things right

00:27:50,600 --> 00:27:54,590
now but the point is is that that may be

00:27:52,730 --> 00:27:57,160
an option to try and do things other out

00:27:54,590 --> 00:27:57,160
there so

00:28:01,380 --> 00:28:12,630
ah okay that's that's a a good question

00:28:09,990 --> 00:28:14,940
the question was about are there parts

00:28:12,630 --> 00:28:17,970
of the real tree that cannot be public

00:28:14,940 --> 00:28:19,830
and the answer is is that what you said

00:28:17,970 --> 00:28:22,350
was true in the past but we had actually

00:28:19,830 --> 00:28:24,090
went back to the rail council and for

00:28:22,350 --> 00:28:26,580
them in that we now have general

00:28:24,090 --> 00:28:29,550
approval to do most things publicly so

00:28:26,580 --> 00:28:31,110
the point is is that configs could not

00:28:29,550 --> 00:28:32,760
be public the packaging the Red Hat

00:28:31,110 --> 00:28:36,840
directory can be public the general

00:28:32,760 --> 00:28:38,670
packaging can be public as well the

00:28:36,840 --> 00:28:40,710
point is is that what we're proposing is

00:28:38,670 --> 00:28:43,110
things that are going ready for the next

00:28:40,710 --> 00:28:45,360
point time for Fedora rawhide you write

00:28:43,110 --> 00:28:48,120
that eventually at some point we will

00:28:45,360 --> 00:28:49,980
have to branch off Ferrell but the point

00:28:48,120 --> 00:29:12,480
is that until you branch off you can do

00:28:49,980 --> 00:29:14,070
all this work up there yeah there's that

00:29:12,480 --> 00:29:17,400
that is a good point about figuring out

00:29:14,070 --> 00:29:19,950
how to do embargoes and potentially hard

00:29:17,400 --> 00:29:22,770
word this brought up at meetings I went

00:29:19,950 --> 00:29:25,020
to a few weeks ago and I posted four the

00:29:22,770 --> 00:29:27,630
embargo it turns out that Fedora will

00:29:25,020 --> 00:29:29,400
probably just continue with its own

00:29:27,630 --> 00:29:30,870
thing because when I'm talking about

00:29:29,400 --> 00:29:32,460
trying to bring ghrelin Fedora closer

00:29:30,870 --> 00:29:35,820
together it's essentially just saying

00:29:32,460 --> 00:29:37,890
what we're calling the future rel is

00:29:35,820 --> 00:29:40,200
essentially just Fedora but with maybe a

00:29:37,890 --> 00:29:41,100
different disk tag or other magic behind

00:29:40,200 --> 00:29:42,780
the scenes so the point is is that

00:29:41,100 --> 00:29:44,310
anything that was embargoed for a fedora

00:29:42,780 --> 00:29:45,930
before would still be embargoed and

00:29:44,310 --> 00:29:47,940
released before as far as how

00:29:45,930 --> 00:29:49,080
pre-release Hardware works that is an

00:29:47,940 --> 00:29:51,290
open question we would need to figure

00:29:49,080 --> 00:29:51,290
out

00:29:58,270 --> 00:30:14,780
yes right and I'd say that that's

00:30:13,070 --> 00:30:16,370
because the real base that we're looking

00:30:14,780 --> 00:30:45,620
at is much older and there's a reason to

00:30:16,370 --> 00:30:48,500
do that so yeah Jim yes what I would

00:30:45,620 --> 00:30:51,679
love to see is we provide just the

00:30:48,500 --> 00:30:53,809
source get tree and then this the source

00:30:51,679 --> 00:30:55,490
get tree can potentially be built in any

00:30:53,809 --> 00:30:58,730
number of build routes out there so the

00:30:55,490 --> 00:31:00,770
point is is that it's covering all say

00:30:58,730 --> 00:31:04,789
fedora cases potentially a Cintas case

00:31:00,770 --> 00:31:06,320
potentially abstract rail case not an

00:31:04,789 --> 00:31:08,150
offer to you know do anything but the

00:31:06,320 --> 00:31:11,870
point is is that it's out there and

00:31:08,150 --> 00:31:13,400
because I sometimes under sell the point

00:31:11,870 --> 00:31:15,110
of the build route but I'd argue is that

00:31:13,400 --> 00:31:16,850
once you have the source get tree this

00:31:15,110 --> 00:31:18,620
should be something that there's no

00:31:16,850 --> 00:31:21,169
reason why with a few tweaks it couldn't

00:31:18,620 --> 00:31:22,190
build in other build routes which isn't

00:31:21,169 --> 00:31:24,289
to say that we don't have to think about

00:31:22,190 --> 00:31:26,270
what tools were using to do that but I

00:31:24,289 --> 00:31:29,000
think it should be a goal that this

00:31:26,270 --> 00:31:32,980
should be build in as many say

00:31:29,000 --> 00:31:32,980
forward-looking build routes as possible

00:31:33,640 --> 00:31:36,640
yes

00:32:10,610 --> 00:32:16,140
yeah I mean Italy comes down to it I

00:32:13,620 --> 00:32:17,970
think um we're trying to look at a

00:32:16,140 --> 00:32:21,120
course that have tests about things we

00:32:17,970 --> 00:32:22,380
can actually test out there I'd say I've

00:32:21,120 --> 00:32:24,390
been working to try and get things like

00:32:22,380 --> 00:32:26,070
making sure containers doesn't regress

00:32:24,390 --> 00:32:27,720
networking progressed some tests like

00:32:26,070 --> 00:32:30,000
that the examples you're giving though

00:32:27,720 --> 00:32:32,070
for things like say VirtualBox is is

00:32:30,000 --> 00:32:33,900
that if you can come up with a good test

00:32:32,070 --> 00:32:37,110
case that we can say plug into either

00:32:33,900 --> 00:32:38,490
cki or the kernel testing harness we

00:32:37,110 --> 00:32:42,350
will certainly take that to be able to

00:32:38,490 --> 00:32:42,350
make this more stable just yeah

00:33:16,230 --> 00:33:20,619
there's there's also the fact that if

00:33:18,759 --> 00:33:22,600
you've ever heard Steph Walter talk

00:33:20,619 --> 00:33:24,070
about this his dream is actually to try

00:33:22,600 --> 00:33:26,289
and push this further up streams at the

00:33:24,070 --> 00:33:27,580
point is that upstream is running CA on

00:33:26,289 --> 00:33:28,840
these things that upstream doesn't

00:33:27,580 --> 00:33:30,609
actually merge any of these things so

00:33:28,840 --> 00:33:31,960
upstream is running the VirtualBox

00:33:30,609 --> 00:33:33,489
tested things like that

00:33:31,960 --> 00:33:34,629
there is a lot of work to certainly be

00:33:33,489 --> 00:33:36,789
done there but I mean it's certainly

00:33:34,629 --> 00:33:38,529
something to think about that in terms

00:33:36,789 --> 00:33:41,039
of what's actually should be considered

00:33:38,529 --> 00:33:41,039
gating or not

00:34:29,360 --> 00:34:36,420
yeah um I've certainly seen open QA work

00:34:33,480 --> 00:34:39,090
before that's that's kind of a it

00:34:36,420 --> 00:34:40,620
certainly as a session something we will

00:34:39,090 --> 00:34:42,750
work to thinking your support as long as

00:34:40,620 --> 00:34:45,960
Fedora support to open QA will certainly

00:34:42,750 --> 00:34:47,550
work to do that as well also for the

00:34:45,960 --> 00:34:49,110
curious this is say what the output

00:34:47,550 --> 00:34:51,330
looks like when you finish running make

00:34:49,110 --> 00:34:54,090
our each prep so this means the kernel

00:34:51,330 --> 00:34:57,240
to go ahead past the prep step and I

00:34:54,090 --> 00:34:58,710
could sit here and do make rpm but given

00:34:57,240 --> 00:35:00,690
the Wi-Fi network I don't want to sit

00:34:58,710 --> 00:35:13,890
here and try and upload potentially

00:35:00,690 --> 00:35:15,600
upload things or to do that but yes the

00:35:13,890 --> 00:35:18,360
answer to both of those is yes we have

00:35:15,600 --> 00:35:20,790
both thought of about using it and it is

00:35:18,360 --> 00:35:22,980
very contentious there are a lot of

00:35:20,790 --> 00:35:25,260
reasons why we do want to move to pull

00:35:22,980 --> 00:35:26,820
requests mostly because one of the

00:35:25,260 --> 00:35:28,260
things people are looking at internally

00:35:26,820 --> 00:35:30,870
is about how to try and make the kernel

00:35:28,260 --> 00:35:32,970
maintainers job much easier because

00:35:30,870 --> 00:35:35,700
there are a series of maintained errs

00:35:32,970 --> 00:35:37,680
who do a fantastic job making sure

00:35:35,700 --> 00:35:39,780
everything gets in they read a lot of

00:35:37,680 --> 00:35:43,200
email they were they bring in patches

00:35:39,780 --> 00:35:44,970
they do builds they do so much valuable

00:35:43,200 --> 00:35:47,760
work to help make sure the rel kernel

00:35:44,970 --> 00:35:50,400
actually gets out but it's also a fairly

00:35:47,760 --> 00:35:51,720
tedious job and one of the things that

00:35:50,400 --> 00:35:53,700
we think polar requests could help with

00:35:51,720 --> 00:35:55,980
is making it so that things get merged

00:35:53,700 --> 00:35:58,290
and possibly tested atomically so yes we

00:35:55,980 --> 00:36:00,630
are looking at trying to do that but

00:35:58,290 --> 00:36:03,110
like any workflow change it has you know

00:36:00,630 --> 00:36:06,360
some people who want to make sure things

00:36:03,110 --> 00:36:07,860
don't break things too much so um if you

00:36:06,360 --> 00:36:10,410
have suggestions about helping to move

00:36:07,860 --> 00:36:14,210
people to pull request workflows who

00:36:10,410 --> 00:36:14,210
aren't familiar with it I'm certainly

00:36:16,510 --> 00:36:19,510
yes

00:36:44,920 --> 00:36:50,540
so internally we use a tool called

00:36:47,540 --> 00:36:52,070
patchwork to be able to help track the

00:36:50,540 --> 00:36:53,750
patches to see exactly the status of

00:36:52,070 --> 00:36:55,760
those and patchwork is an upstream

00:36:53,750 --> 00:36:57,170
project that all that internally we've

00:36:55,760 --> 00:36:58,849
provided some enhancements to for our

00:36:57,170 --> 00:37:01,550
needs but it gives you the status of

00:36:58,849 --> 00:37:03,470
things and part of it is is in fact that

00:37:01,550 --> 00:37:05,359
the maintainer czar required to read

00:37:03,470 --> 00:37:06,650
every mail that comes in and that is a

00:37:05,359 --> 00:37:08,210
lot of their job is reviewing all the

00:37:06,650 --> 00:37:09,770
patches to help to make sure things come

00:37:08,210 --> 00:37:12,140
in and one of the other things we're

00:37:09,770 --> 00:37:13,310
currently trying to help figure out for

00:37:12,140 --> 00:37:15,260
maintainers is that who's actually

00:37:13,310 --> 00:37:17,270
responsible for making sure things get

00:37:15,260 --> 00:37:18,560
don't get lost is that sometimes it

00:37:17,270 --> 00:37:20,000
comes down to the developer needs to

00:37:18,560 --> 00:37:22,609
make sure of that there the onus is on

00:37:20,000 --> 00:37:25,280
them to making sure things actually get

00:37:22,609 --> 00:37:26,510
in and again this is something that ends

00:37:25,280 --> 00:37:35,390
up trying to figure out how things work

00:37:26,510 --> 00:37:37,460
so well thank you very much for

00:37:35,390 --> 00:37:38,660
listening to me talk about kernels for a

00:37:37,460 --> 00:37:41,710
while I'm happy to take more questions

00:37:38,660 --> 00:37:41,710

YouTube URL: https://www.youtube.com/watch?v=kb2VS2_P6Ts


