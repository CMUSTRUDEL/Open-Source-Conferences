Title: Snaps ❤️ Fedora: Fedora ecosystem progress update - Neal Gompa, Maciek Borzecki - Flock 2019
Publication date: 2019-08-28
Playlist: Flock 2019
Description: 
	Since last year, the Snap upstream developers and I have been working to improve the quality of life for Fedora users with snaps.
From security improvements to simple enhancements to improve how snaps integrate with the system, there's been a lot of work specifically to improve how snaps work on Fedora and Enterprise Linux.
This talk will be about describing these improvements and the work in progress for feedback for improvement.

--
Recordings of talks at Flock are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:00,650 --> 00:00:09,860
so everyone welcome to second year of

00:00:07,129 --> 00:00:11,660
talking about snaps on fedora this time

00:00:09,860 --> 00:00:13,759
it's snaps love fedora

00:00:11,660 --> 00:00:18,400
so it's an ecosystem progress update by

00:00:13,759 --> 00:00:20,990
myself Neal and this is a Maciek who is

00:00:18,400 --> 00:00:21,800
you know from canonical oh I didn't talk

00:00:20,990 --> 00:00:27,340
about himself

00:00:21,800 --> 00:00:30,170
come on colonic oh yeah basically the

00:00:27,340 --> 00:00:32,000
upstream of snotty basically inside

00:00:30,170 --> 00:00:34,550
snipe the core teams have like a couple

00:00:32,000 --> 00:00:38,570
of guys working exclusively on snappy to

00:00:34,550 --> 00:00:42,649
think that those managers snaps and

00:00:38,570 --> 00:00:45,409
stuff so actually I I have a fasiq

00:00:42,649 --> 00:00:48,170
average like crazy years ago into like

00:00:45,409 --> 00:00:50,989
packaging anything so that's kind of

00:00:48,170 --> 00:00:53,329
crazy situation well before joining the

00:00:50,989 --> 00:00:55,399
comic I worked and embedded for like

00:00:53,329 --> 00:00:57,159
lots of years and culture beating the

00:00:55,399 --> 00:00:59,359
ostriches we hope to open and bear that

00:00:57,159 --> 00:01:02,979
therefore always like doing the first

00:00:59,359 --> 00:01:05,300
board of an officer fur to stm32 chips

00:01:02,979 --> 00:01:08,630
and then I should canonical started

00:01:05,300 --> 00:01:12,290
working that piece so by the way I used

00:01:08,630 --> 00:01:15,680
arch so it's like like I'm one of those

00:01:12,290 --> 00:01:17,630
guys who actually though not only use

00:01:15,680 --> 00:01:20,450
snaps and the booty because that's like

00:01:17,630 --> 00:01:22,700
most majority of canonical please do but

00:01:20,450 --> 00:01:27,730
I also use multi real distribution that

00:01:22,700 --> 00:01:27,730
is my home as to my work laughter this

00:01:29,460 --> 00:01:50,850
oh no no why by the way the 64 stands

00:01:40,470 --> 00:01:53,340
for 64 piece right four just to

00:01:50,850 --> 00:01:56,220
reiterate I am you know been around

00:01:53,340 --> 00:01:58,830
doing this for a little over a decade as

00:01:56,220 --> 00:02:00,630
a contributor and a packager in fedora

00:01:58,830 --> 00:02:02,220
I've been involved in other

00:02:00,630 --> 00:02:05,399
distributions like Maggio nope and

00:02:02,220 --> 00:02:07,979
openSUSE for the past four or so years I

00:02:05,399 --> 00:02:11,370
am involved largely in the in the

00:02:07,979 --> 00:02:15,360
software management stack rpm DNF OBS

00:02:11,370 --> 00:02:17,250
koji my day job I'm a DevOps engineer at

00:02:15,360 --> 00:02:19,850
Daddo to backup disaster recovery

00:02:17,250 --> 00:02:22,950
company there's my Twitter and my email

00:02:19,850 --> 00:02:28,890
but yeah not quite as interesting as

00:02:22,950 --> 00:02:35,519
exciting as Maciek here so what are

00:02:28,890 --> 00:02:38,100
snaps yes seems to be like what snaps

00:02:35,519 --> 00:02:40,110
are basically just squash surface image

00:02:38,100 --> 00:02:42,470
which contains your application your

00:02:40,110 --> 00:02:44,400
application and all the dependencies and

00:02:42,470 --> 00:02:46,739
supposedly it's a way to deliver

00:02:44,400 --> 00:02:48,269
applications into environment which

00:02:46,739 --> 00:02:50,250
doesn't really carry all the

00:02:48,269 --> 00:02:53,070
dependencies inside their native host

00:02:50,250 --> 00:02:56,700
distribution and so it's a way to

00:02:53,070 --> 00:02:59,310
provide like kind of like module sense

00:02:56,700 --> 00:03:01,320
and some streams like we can provide the

00:02:59,310 --> 00:03:03,390
number of channels which carry even like

00:03:01,320 --> 00:03:05,549
the latest greatest version of

00:03:03,390 --> 00:03:07,170
application or the stable version

00:03:05,549 --> 00:03:08,850
application or the beta version

00:03:07,170 --> 00:03:13,049
application can distinguish between the

00:03:08,850 --> 00:03:14,670
stability levels it's well it's also not

00:03:13,049 --> 00:03:17,130
just the application if we can deliver

00:03:14,670 --> 00:03:19,200
services just like you can dump a snap

00:03:17,130 --> 00:03:21,720
which contains services which are then

00:03:19,200 --> 00:03:24,120
integrating web with system D there's a

00:03:21,720 --> 00:03:25,560
snap store page which like a bunch of

00:03:24,120 --> 00:03:29,280
applications there's a bunch of snaps

00:03:25,560 --> 00:03:31,260
already available quick list of some of

00:03:29,280 --> 00:03:32,940
the featured snaps again basically you

00:03:31,260 --> 00:03:36,360
also see that we were so kind of

00:03:32,940 --> 00:03:38,370
dogfooding because alex these part of is

00:03:36,360 --> 00:03:40,600
actually delivered in a snap as a snap

00:03:38,370 --> 00:03:42,520
mode mostly

00:03:40,600 --> 00:03:46,990
it's also a bunch of chemical politics

00:03:42,520 --> 00:03:49,050
as well yeah but we are trying to be

00:03:46,990 --> 00:03:51,400
close to the upstream to try to

00:03:49,050 --> 00:03:53,260
accommodate all the needs because people

00:03:51,400 --> 00:03:55,240
have different needs people had

00:03:53,260 --> 00:04:00,160
different problems and you're trying to

00:03:55,240 --> 00:04:02,770
just find a way in this maze so snaps

00:04:00,160 --> 00:04:04,690
comes to deliver so there's second mode

00:04:02,770 --> 00:04:07,090
of snaps which is kind of not not

00:04:04,690 --> 00:04:08,980
confined applications and this is most

00:04:07,090 --> 00:04:12,370
used for development stack some very

00:04:08,980 --> 00:04:13,960
special applications that have to you

00:04:12,370 --> 00:04:16,540
have have to work in this kind of a

00:04:13,960 --> 00:04:18,520
classic distro mode which in which

00:04:16,540 --> 00:04:22,420
they're not really confined if access to

00:04:18,520 --> 00:04:24,460
the host system yeah dos is mostly used

00:04:22,420 --> 00:04:34,090
for the living as I said development

00:04:24,460 --> 00:04:35,650
stacks like go no no so last flock I

00:04:34,090 --> 00:04:37,570
came and talked about like how we were

00:04:35,650 --> 00:04:39,480
starting to roll this out and we had

00:04:37,570 --> 00:04:41,800
just gotten the integrations in place

00:04:39,480 --> 00:04:44,680
and things like that and there were some

00:04:41,800 --> 00:04:46,540
plans to like evolve the SE Lang support

00:04:44,680 --> 00:04:50,290
and things like that and along those

00:04:46,540 --> 00:04:52,600
lines and now we have snap D and snap 2g

00:04:50,290 --> 00:04:55,720
live in Epple 7 that actually happened

00:04:52,600 --> 00:04:57,040
at the end of last year which was when I

00:04:55,720 --> 00:04:58,990
got to the point where I was comfortable

00:04:57,040 --> 00:05:01,780
enough with my own selinux policy for

00:04:58,990 --> 00:05:06,000
snap D being good enough to make me not

00:05:01,780 --> 00:05:08,980
scared of it of it running on on on l7

00:05:06,000 --> 00:05:12,990
for for the Fedora 30 development cycle

00:05:08,980 --> 00:05:15,670
I started sketching out the work for the

00:05:12,990 --> 00:05:17,410
eventual Fedora based snap and we got

00:05:15,670 --> 00:05:19,480
the snappy variant added to fedora

00:05:17,410 --> 00:05:22,720
release for Fedora 30 this was more in

00:05:19,480 --> 00:05:26,050
line to be part of the the better

00:05:22,720 --> 00:05:28,870
counting thing that that Matt was trying

00:05:26,050 --> 00:05:32,530
to pull out somehow

00:05:28,870 --> 00:05:34,930
yeah the idea is that when people are

00:05:32,530 --> 00:05:36,640
building software with fedora stacks we

00:05:34,930 --> 00:05:39,520
will have an idea because that will ping

00:05:36,640 --> 00:05:40,870
us what snap craft and and DNF and

00:05:39,520 --> 00:05:42,880
things like that

00:05:40,870 --> 00:05:45,940
the SU Linux back and actually now

00:05:42,880 --> 00:05:48,850
exists it doesn't do a lot yet it is

00:05:45,940 --> 00:05:50,830
really new but it is it is written and

00:05:48,850 --> 00:05:52,930
it's in snap combined and it's in

00:05:50,830 --> 00:05:54,500
development that got that landed in

00:05:52,930 --> 00:05:56,570
March so for

00:05:54,500 --> 00:06:00,890
snappy what was it 236 I think what's

00:05:56,570 --> 00:06:05,240
with when that lattice 238 might be when

00:06:00,890 --> 00:06:08,810
I turned it on we now have the snappy

00:06:05,240 --> 00:06:12,560
SELinux policy and snap confine are now

00:06:08,810 --> 00:06:14,270
generating context for all of the snaps

00:06:12,560 --> 00:06:16,520
that are being executed on the system

00:06:14,270 --> 00:06:19,310
that's there's not too much happening

00:06:16,520 --> 00:06:22,130
yet because there's still a lot of work

00:06:19,310 --> 00:06:25,130
to go about plugging in dynamic policy

00:06:22,130 --> 00:06:26,800
loading into into the kernel which it

00:06:25,130 --> 00:06:29,630
doesn't really support doing right now

00:06:26,800 --> 00:06:32,870
but that's the thing we've also added

00:06:29,630 --> 00:06:35,180
more tests to the upstream CI to cover

00:06:32,870 --> 00:06:37,910
SELinux base behaviors as well as adding

00:06:35,180 --> 00:06:39,470
sent us to the test suite in addition to

00:06:37,910 --> 00:06:41,240
supporting the latest fedora we actually

00:06:39,470 --> 00:06:44,570
test the latest stable and rawhide and

00:06:41,240 --> 00:06:49,040
so that is continuously tested for every

00:06:44,570 --> 00:06:52,160
commit that goes into snap d upstream we

00:06:49,040 --> 00:06:56,510
did make the Fedora 29 base snap demo

00:06:52,160 --> 00:07:01,010
for last flock zigmund who was here last

00:06:56,510 --> 00:07:03,260
year did that that tooling I have kind

00:07:01,010 --> 00:07:05,360
of been working on revamping the and

00:07:03,260 --> 00:07:07,790
we've been working upstream to try to

00:07:05,360 --> 00:07:09,440
figure out a definition for what a base

00:07:07,790 --> 00:07:10,910
snaps supposed to look like and then we

00:07:09,440 --> 00:07:14,060
can kind of bring that together with

00:07:10,910 --> 00:07:16,490
what we consider the minimal environment

00:07:14,060 --> 00:07:18,320
that that should be included for

00:07:16,490 --> 00:07:20,660
application delivery runtimes like what

00:07:18,320 --> 00:07:22,160
is similar to flatback runtimes for the

00:07:20,660 --> 00:07:24,380
snap world

00:07:22,160 --> 00:07:27,260
and yes they are still fun and we have

00:07:24,380 --> 00:07:32,330
we do have cookies hopefully you're not

00:07:27,260 --> 00:07:34,370
allergic to chocolate so what's kind of

00:07:32,330 --> 00:07:36,410
going on right now the ongoing

00:07:34,370 --> 00:07:38,780
maintenance of snap T releases again is

00:07:36,410 --> 00:07:43,490
still think snappy releases on a monthly

00:07:38,780 --> 00:07:44,990
cadence more or less and a big part of

00:07:43,490 --> 00:07:46,490
this is you know we're still doing

00:07:44,990 --> 00:07:48,380
refinements and improvements to the

00:07:46,490 --> 00:07:50,150
policy and building up the backend as

00:07:48,380 --> 00:07:52,220
things keep changing we're actually now

00:07:50,150 --> 00:07:56,030
closely tracking changes in Fedora C

00:07:52,220 --> 00:07:58,610
Linux so as the SE leaves policy evolves

00:07:56,030 --> 00:08:00,380
we are adapting to it as well and

00:07:58,610 --> 00:08:03,349
because of our test suite we were

00:08:00,380 --> 00:08:05,330
actually validating as a saloons policy

00:08:03,349 --> 00:08:06,740
changes land in bra height and whether

00:08:05,330 --> 00:08:09,680
they still stay compatible with

00:08:06,740 --> 00:08:12,650
l7 which is as it turns out slightly

00:08:09,680 --> 00:08:15,759
complicated because the selinux policy

00:08:12,650 --> 00:08:18,770
tends to grow new forms of confinement

00:08:15,759 --> 00:08:22,599
that don't exist in the l7 and handling

00:08:18,770 --> 00:08:22,599
both of those is a interesting challenge

00:08:29,800 --> 00:08:34,010
so the basic confinement currently is

00:08:32,479 --> 00:08:38,390
seccomp cgroups

00:08:34,010 --> 00:08:40,279
namespaces and other types of Mack and

00:08:38,390 --> 00:08:52,100
DAC filtering that are applied at mount

00:08:40,279 --> 00:08:53,660
time so it is it is still reduced

00:08:52,100 --> 00:08:56,089
compared to how it is on a bun tube

00:08:53,660 --> 00:08:59,089
because the a barber one does the

00:08:56,089 --> 00:09:00,890
deepest mediation and so that's since

00:08:59,089 --> 00:09:03,529
for example in flat pack you have the

00:09:00,890 --> 00:09:05,390
portal mechanism but portal the portal

00:09:03,529 --> 00:09:08,330
mechanism essentially is an unfiltered D

00:09:05,390 --> 00:09:11,120
bus call and in snaps there's actually a

00:09:08,330 --> 00:09:14,300
way to granularly filter and what they

00:09:11,120 --> 00:09:17,779
call mediate d-bus and other types of

00:09:14,300 --> 00:09:19,670
IPC type actions which is a glorious

00:09:17,779 --> 00:09:22,670
hack and a Parmer that's not upstream

00:09:19,670 --> 00:09:24,200
but that is something that snappy relies

00:09:22,670 --> 00:09:26,329
on SEO links actually has equivalent

00:09:24,200 --> 00:09:27,890
functionality but it is really tricky to

00:09:26,329 --> 00:09:30,470
support because SE links does not

00:09:27,890 --> 00:09:32,200
support as far as I'm aware somebody who

00:09:30,470 --> 00:09:35,360
knows better can tell me otherwise

00:09:32,200 --> 00:09:36,980
directly dynamically loading policy

00:09:35,360 --> 00:09:40,399
instructions through Lube selinux at

00:09:36,980 --> 00:09:42,770
runtime that's the part that is that

00:09:40,399 --> 00:09:45,230
kind of is making this difficult to

00:09:42,770 --> 00:09:47,839
enhance the backend because for a farmer

00:09:45,230 --> 00:09:49,459
what they do is snap confine generates

00:09:47,839 --> 00:09:51,230
the policy as the mounts are being

00:09:49,459 --> 00:09:53,510
generated as the applications being

00:09:51,230 --> 00:09:55,850
loaded and then just shuts it into the

00:09:53,510 --> 00:09:58,940
kernel and then unloads it by poking the

00:09:55,850 --> 00:10:01,190
kernel until the profiles go away and so

00:09:58,940 --> 00:10:06,890
it's kind of scary and glorious at the

00:10:01,190 --> 00:10:08,750
same time so it's that that part is

00:10:06,890 --> 00:10:10,760
where like we're trying to abstract

00:10:08,750 --> 00:10:12,800
those differences and try to provide

00:10:10,760 --> 00:10:14,630
like a framework for us to fill in SEO

00:10:12,800 --> 00:10:16,490
leagues back and stuff as we keep going

00:10:14,630 --> 00:10:19,190
on that's largely what masa has been

00:10:16,490 --> 00:10:19,970
doing for the past few months and I've

00:10:19,190 --> 00:10:21,349
been kind of held

00:10:19,970 --> 00:10:24,439
him a little bit here and there with

00:10:21,349 --> 00:10:25,819
trying to fill in some of the roles and

00:10:24,439 --> 00:10:29,419
features and things like that and making

00:10:25,819 --> 00:10:31,639
sure that that stuff is working and then

00:10:29,419 --> 00:10:33,889
improving the integration in the desktop

00:10:31,639 --> 00:10:36,379
UI experiences gnome software and plasma

00:10:33,889 --> 00:10:39,289
discover have gotten a fair bit of work

00:10:36,379 --> 00:10:40,669
in the air upstream projects the KDE

00:10:39,289 --> 00:10:42,259
guys have actually done a lot of it by

00:10:40,669 --> 00:10:45,669
themselves cuz Katie and neon has been

00:10:42,259 --> 00:10:48,409
exploring this for a while for gnome

00:10:45,669 --> 00:10:51,259
canonical has been doing it upstream and

00:10:48,409 --> 00:10:52,729
principally to benefit us and other

00:10:51,259 --> 00:10:55,609
distributions that prefer the gnome

00:10:52,729 --> 00:10:57,439
software experience as well as because

00:10:55,609 --> 00:11:01,849
in the current open to LTS as they are

00:10:57,439 --> 00:11:03,229
shipping it as well I realized that

00:11:01,849 --> 00:11:06,229
there's been a little bit of a kerfuffle

00:11:03,229 --> 00:11:09,589
related to this in the gnome community

00:11:06,229 --> 00:11:12,169
but as far as basically everyone I

00:11:09,589 --> 00:11:14,179
talked to canonical is at this point

00:11:12,169 --> 00:11:15,589
saying that the the gnome software

00:11:14,179 --> 00:11:18,639
experience is something that they want

00:11:15,589 --> 00:11:21,409
to preserve and enhance out as they can

00:11:18,639 --> 00:11:26,629
provided upstream is okay with it so

00:11:21,409 --> 00:11:27,619
we'll see how that goes so here's kind

00:11:26,629 --> 00:11:29,899
of where we are now

00:11:27,619 --> 00:11:33,859
snappy has been in the Fedora repository

00:11:29,899 --> 00:11:36,379
since Fedora 26 I am actually fairly

00:11:33,859 --> 00:11:39,979
aggressive about updating things as they

00:11:36,379 --> 00:11:41,689
go as long as things still compiled they

00:11:39,979 --> 00:11:46,069
get updated if they get tested and

00:11:41,689 --> 00:11:48,229
updated one of the things I'd like to do

00:11:46,069 --> 00:11:50,929
in the near future is if when Fedora CI

00:11:48,229 --> 00:11:52,849
becomes like not broken for me I'd like

00:11:50,929 --> 00:11:54,889
to actually add some smoke tests and

00:11:52,849 --> 00:11:57,289
basic tests for the entire snappy stack

00:11:54,889 --> 00:12:00,619
to execute for package builds and

00:11:57,289 --> 00:12:02,659
updates don't know how that's going to

00:12:00,619 --> 00:12:06,109
happen any time soon because of some of

00:12:02,659 --> 00:12:07,929
the other bits related to that mm-hmm

00:12:06,109 --> 00:12:11,179
snap tee and gnome software integration

00:12:07,929 --> 00:12:12,949
the snap store is an extra source it

00:12:11,179 --> 00:12:15,409
works the same way you do when you're

00:12:12,949 --> 00:12:17,119
working with flat packs some snap

00:12:15,409 --> 00:12:19,549
specific features channels and

00:12:17,119 --> 00:12:21,919
interfaces and things like that it has

00:12:19,549 --> 00:12:24,109
been available also since Fedora 26 but

00:12:21,919 --> 00:12:25,839
except with fedora 31 things are in a

00:12:24,109 --> 00:12:28,399
wobbly state of affairs right now

00:12:25,839 --> 00:12:30,559
depending on how things kind of shake

00:12:28,399 --> 00:12:32,640
out over the next week or so it will

00:12:30,559 --> 00:12:33,990
show up it will be it'll return

00:12:32,640 --> 00:12:37,110
whether it's part of the gnome software

00:12:33,990 --> 00:12:38,730
saw source package or I wind up being

00:12:37,110 --> 00:12:40,410
forced to do the terrible deed of

00:12:38,730 --> 00:12:43,920
building gnome software all over again

00:12:40,410 --> 00:12:47,070
and shipping only parts of it it will

00:12:43,920 --> 00:12:48,540
still be there so at this point I can

00:12:47,070 --> 00:12:57,030
say it will be there I don't know how

00:12:48,540 --> 00:13:00,560
right now you you can ask for now if you

00:12:57,030 --> 00:13:02,850
want but I'd also like to finish let's

00:13:00,560 --> 00:13:04,530
plasmon discover integration has

00:13:02,850 --> 00:13:07,800
actually drastically improved since it

00:13:04,530 --> 00:13:10,770
was introduced in 428 it actually works

00:13:07,800 --> 00:13:12,420
kind of well it's similar to gnome

00:13:10,770 --> 00:13:14,820
software and I think the maturity level

00:13:12,420 --> 00:13:16,680
is about the same at this point there's

00:13:14,820 --> 00:13:20,700
just a little bit of weirdness because

00:13:16,680 --> 00:13:22,290
it is younger and people aren't paying

00:13:20,700 --> 00:13:25,050
as much attention to Katie as they are

00:13:22,290 --> 00:13:27,000
known which is sad because that's what I

00:13:25,050 --> 00:13:30,900
use

00:13:27,000 --> 00:13:33,630
but snap craft is still the problem and

00:13:30,900 --> 00:13:36,030
we still don't have it as it turns out

00:13:33,630 --> 00:13:38,400
it is really hard to add new backends to

00:13:36,030 --> 00:13:41,070
snap craft it is a massively complicated

00:13:38,400 --> 00:13:42,810
piece of software that does really crazy

00:13:41,070 --> 00:13:44,790
things to make it possible for you to

00:13:42,810 --> 00:13:46,650
not have to rebuild everything in order

00:13:44,790 --> 00:13:48,330
to make working snaps out of stuff that

00:13:46,650 --> 00:13:52,050
is that wasn't snapped it in the first

00:13:48,330 --> 00:13:55,200
place it's something that we will kind

00:13:52,050 --> 00:13:58,080
of get to but I don't have the bandwidth

00:13:55,200 --> 00:13:59,940
right now to do it and masya did some

00:13:58,080 --> 00:14:02,730
work actually in the past couple of

00:13:59,940 --> 00:14:06,810
weeks to try to get at least it working

00:14:02,730 --> 00:14:15,020
sort of in in the copper for rawhide do

00:14:06,810 --> 00:14:19,200
you want to talk a little business now

00:14:15,020 --> 00:14:23,370
which larger crusade to get working

00:14:19,200 --> 00:14:24,060
fedora because why not yeah it's kind of

00:14:23,370 --> 00:14:25,860
peckish

00:14:24,060 --> 00:14:28,490
the checks are disabled they managed to

00:14:25,860 --> 00:14:31,290
make all the unit tests working so

00:14:28,490 --> 00:14:34,260
there's that but you know ask you to log

00:14:31,290 --> 00:14:37,560
in to push the snaps and some basic

00:14:34,260 --> 00:14:39,660
operations still if you build it's not

00:14:37,560 --> 00:14:41,840
really running the build native wasted

00:14:39,660 --> 00:14:44,520
trying to launch multi-party logs

00:14:41,840 --> 00:14:46,330
under the hood so that's that's still

00:14:44,520 --> 00:14:50,900
[Music]

00:14:46,330 --> 00:15:00,530
but yeah we can try and see how far you

00:14:50,900 --> 00:15:04,730
can get I really don't know too much

00:15:00,530 --> 00:15:06,740
about this beyond like the I decided to

00:15:04,730 --> 00:15:08,870
kind of give up trying to make the snap

00:15:06,740 --> 00:15:11,260
crafts thing work now and I wanted to

00:15:08,870 --> 00:15:14,030
try to find a different path to getting

00:15:11,260 --> 00:15:16,280
fedora application ship two snaps for

00:15:14,030 --> 00:15:21,680
the benefit of the snap using community

00:15:16,280 --> 00:15:23,600
which is increasing quite a bit so the

00:15:21,680 --> 00:15:26,330
modularity tooling you know for all of

00:15:23,600 --> 00:15:29,060
its warts is actually pretty good at

00:15:26,330 --> 00:15:32,690
producing non RPM artifacts that are

00:15:29,060 --> 00:15:34,130
usable by humans because they're doing

00:15:32,690 --> 00:15:36,860
this right now for flat packs and it

00:15:34,130 --> 00:15:40,700
works kind of okay modulo bugs with the

00:15:36,860 --> 00:15:42,410
runtime and extending this to produce

00:15:40,700 --> 00:15:45,140
snaps and allowing fedora to publish

00:15:42,410 --> 00:15:46,850
them that way I don't think it'd be that

00:15:45,140 --> 00:15:49,820
difficult to add and it would actually

00:15:46,850 --> 00:15:52,280
allow for a familiar ish the pipeline to

00:15:49,820 --> 00:15:54,700
releasing maybe simultaneously from the

00:15:52,280 --> 00:15:57,530
same base runtime kind of environment

00:15:54,700 --> 00:15:59,300
software and in both formats for people

00:15:57,530 --> 00:16:01,640
to leverage because in the ability world

00:15:59,300 --> 00:16:05,060
you lapse by default on your system and

00:16:01,640 --> 00:16:07,790
seeing fedora produce content or Fedora

00:16:05,060 --> 00:16:09,710
deliver content for them to benefit from

00:16:07,790 --> 00:16:12,410
I think would be hugely valuable and

00:16:09,710 --> 00:16:16,070
raise the profile of what we're doing as

00:16:12,410 --> 00:16:18,770
a community and it and our tooling is

00:16:16,070 --> 00:16:21,410
already optimizing itself around

00:16:18,770 --> 00:16:23,810
producing modules and so it will make it

00:16:21,410 --> 00:16:25,220
a lot easier to scale out building out

00:16:23,810 --> 00:16:31,460
snaps in the same way that we're trying

00:16:25,220 --> 00:16:33,830
to scale out building flat packs so this

00:16:31,460 --> 00:16:35,480
is again like I said this last year as

00:16:33,830 --> 00:16:38,300
well but a little bit tweaked with new

00:16:35,480 --> 00:16:40,880
information building we want the door to

00:16:38,300 --> 00:16:42,950
be the best source for developers to

00:16:40,880 --> 00:16:45,800
build software for and that means that

00:16:42,950 --> 00:16:48,500
allows them to even if they're you know

00:16:45,800 --> 00:16:51,290
trapped in this abundant world they can

00:16:48,500 --> 00:16:52,650
actually use the best source of software

00:16:51,290 --> 00:16:56,970
which i think is for the

00:16:52,650 --> 00:16:59,910
and be able to create applications with

00:16:56,970 --> 00:17:01,470
that and support them effectively and

00:16:59,910 --> 00:17:03,150
that starts with the base snap and

00:17:01,470 --> 00:17:06,840
actually Maciek had just told me a few

00:17:03,150 --> 00:17:08,400
days ago that we have now finally kind

00:17:06,840 --> 00:17:09,930
of got a definition of what is the

00:17:08,400 --> 00:17:12,270
expectation of what a base snap is

00:17:09,930 --> 00:17:13,770
supposed to include so I'm gonna try to

00:17:12,270 --> 00:17:16,040
see if we can harmonize that with what

00:17:13,770 --> 00:17:18,090
we expect in a fedora based run time and

00:17:16,040 --> 00:17:20,130
produce something that we can have

00:17:18,090 --> 00:17:22,740
either at the near the end of the Fedora

00:17:20,130 --> 00:17:24,150
31 development cycle or at the beginning

00:17:22,740 --> 00:17:27,480
of the Fedora three-two-one

00:17:24,150 --> 00:17:29,340
to have that rolled out and in place the

00:17:27,480 --> 00:17:31,680
handoff to the infrastructure team for

00:17:29,340 --> 00:17:32,940
publishing and releasing does not mean

00:17:31,680 --> 00:17:34,440
that I'm going to go away as the

00:17:32,940 --> 00:17:36,330
maintainer of that particular piece of

00:17:34,440 --> 00:17:38,010
software that does that bit I'm I'm

00:17:36,330 --> 00:17:42,480
actually in the process of writing the

00:17:38,010 --> 00:17:44,820
tool and I intend to maintain it as part

00:17:42,480 --> 00:17:46,440
of working with relish and other

00:17:44,820 --> 00:17:47,940
infrastructure II people so it's not

00:17:46,440 --> 00:17:49,970
like I'm gonna throw it over the wall

00:17:47,940 --> 00:17:52,220
and it's all your fault if it breaks

00:17:49,970 --> 00:17:54,030
I'll still be around to help of course

00:17:52,220 --> 00:17:55,650
and of course this is all about

00:17:54,030 --> 00:17:58,110
producing snaps as an artifact for

00:17:55,650 --> 00:17:59,880
modules and then another bit is we want

00:17:58,110 --> 00:18:03,210
to also still get the snap craft bit

00:17:59,880 --> 00:18:05,850
there because it does provide certain

00:18:03,210 --> 00:18:07,230
things for people that are unique to the

00:18:05,850 --> 00:18:09,360
developer experience and one of the

00:18:07,230 --> 00:18:11,520
things that I have you know when I've

00:18:09,360 --> 00:18:12,930
been playing with the snap tooling snap

00:18:11,520 --> 00:18:14,760
craft I think is a major plus point

00:18:12,930 --> 00:18:19,470
despite how scary it is under the hood

00:18:14,760 --> 00:18:21,270
it is supremely easy to put together a

00:18:19,470 --> 00:18:23,910
piece of software as a well-crafted snap

00:18:21,270 --> 00:18:26,340
and ship that for people with the snap

00:18:23,910 --> 00:18:27,720
craft tooling I'm not saying we can't do

00:18:26,340 --> 00:18:29,070
that also with the fedora tooling but it

00:18:27,720 --> 00:18:31,860
is the native tooling and I'd like to

00:18:29,070 --> 00:18:34,910
also see that work well for for

00:18:31,860 --> 00:18:39,900
producing stock software based on fedora

00:18:34,910 --> 00:18:42,510
and then of course cgroups v2 which is

00:18:39,900 --> 00:18:44,250
now a thing that we're going to we're

00:18:42,510 --> 00:18:46,260
going to deal with actually I should

00:18:44,250 --> 00:18:47,880
thank the the container team for this

00:18:46,260 --> 00:18:50,190
because we have known about this for

00:18:47,880 --> 00:18:52,290
about two years and the change proposal

00:18:50,190 --> 00:18:56,070
actually made it was the final hurdle to

00:18:52,290 --> 00:18:57,540
push it to get work done on it so what

00:18:56,070 --> 00:19:00,030
everyone was complaining during the

00:18:57,540 --> 00:19:03,690
during the discussion on devil about how

00:19:00,030 --> 00:19:05,670
snappy would be broken by this I talked

00:19:03,690 --> 00:19:07,590
to the

00:19:05,670 --> 00:19:09,990
or team personnel the snappy core team

00:19:07,590 --> 00:19:11,940
and got it we basically got prioritized

00:19:09,990 --> 00:19:14,010
so that this is going to be fixed the

00:19:11,940 --> 00:19:17,610
expectation right now when I was talking

00:19:14,010 --> 00:19:21,000
to to one of the members of the team was

00:19:17,610 --> 00:19:23,040
that we should actually have it working

00:19:21,000 --> 00:19:26,370
by the end of the Fedora 31 life

00:19:23,040 --> 00:19:28,560
development cycle probably before beta

00:19:26,370 --> 00:19:32,340
freeze will have basic support in place

00:19:28,560 --> 00:19:34,380
and then by the end of after RC freeze

00:19:32,340 --> 00:19:36,870
we will probably have complete support

00:19:34,380 --> 00:19:41,640
as long as things don't go horribly

00:19:36,870 --> 00:19:44,130
wrong yeah yeah and so right now the the

00:19:41,640 --> 00:19:45,570
testing apparatus in ups in upstream is

00:19:44,130 --> 00:19:47,610
being adjusted so that we produce a

00:19:45,570 --> 00:19:50,400
second rawhide in Fedora 30 variant that

00:19:47,610 --> 00:19:52,560
has cgroups b2 switched on and so that

00:19:50,400 --> 00:19:54,570
will be used to add to the testing of it

00:19:52,560 --> 00:20:05,340
as soon as the initial patches that add

00:19:54,570 --> 00:20:07,170
support for this land bit as well so we

00:20:05,340 --> 00:20:08,730
started with rawhide then we moved to to

00:20:07,170 --> 00:20:10,830
further our thirdly because of different

00:20:08,730 --> 00:20:19,020
mounts problems with 5.3 kernels in the

00:20:10,830 --> 00:20:20,970
row height and so it's kind of like yeah

00:20:19,020 --> 00:20:23,700
because we're kind of like trying to

00:20:20,970 --> 00:20:26,490
exploit the kernel at least at the mount

00:20:23,700 --> 00:20:29,460
API is a bit we try we tend to hit

00:20:26,490 --> 00:20:33,540
different behavior scenarios when it's

00:20:29,460 --> 00:20:35,280
not really possible to fix that in an

00:20:33,540 --> 00:20:38,120
easy way so we have to kind of

00:20:35,280 --> 00:20:42,480
accommodate and find a stable distress

00:20:38,120 --> 00:20:45,150
so but also the switching to - oh hi - -

00:20:42,480 --> 00:20:47,220
TT unify seekers help identify suppose

00:20:45,150 --> 00:20:52,070
well XD snap so that's all tracked and

00:20:47,220 --> 00:21:00,960
our topic trackers which is this course

00:20:52,070 --> 00:21:03,270
yeah this experimentation with packets

00:21:00,960 --> 00:21:05,130
because kind of like like like the idea

00:21:03,270 --> 00:21:06,930
that we could bring because snap this

00:21:05,130 --> 00:21:09,480
bag actually which is which listen up

00:21:06,930 --> 00:21:12,540
which pushes upstream is really close to

00:21:09,480 --> 00:21:15,180
honest misuse plan you for for packaging

00:21:12,540 --> 00:21:16,559
they're slightly slight differences like

00:21:15,180 --> 00:21:18,419
Rama standing

00:21:16,559 --> 00:21:19,679
I guess we won outstanding patch then

00:21:18,419 --> 00:21:23,059
there's a couple of conditionals you

00:21:19,679 --> 00:21:23,059
have upstream that I don't want to have

00:21:24,240 --> 00:21:27,420
[Music]

00:21:31,580 --> 00:21:38,039
so I started a wolf pack and got some

00:21:35,159 --> 00:21:41,519
initial success by the kind of building

00:21:38,039 --> 00:21:43,919
and we'll see you there you can move

00:21:41,519 --> 00:21:45,889
that further maybe provide like from

00:21:43,919 --> 00:21:50,340
gate releases at least in some corporate

00:21:45,889 --> 00:21:51,960
repo just know yeah I used to provide in

00:21:50,340 --> 00:21:57,809
the in the early days of the bridge I

00:21:51,960 --> 00:22:00,990
used to provide a snap but it's a pain

00:21:57,809 --> 00:22:03,059
in the butt to do that by hand and so

00:22:00,990 --> 00:22:09,419
this might actually make it so we can

00:22:03,059 --> 00:22:13,200
bring that back yeah so as well about

00:22:09,419 --> 00:22:16,799
fedoraboys snap so as you mentioned lost

00:22:13,200 --> 00:22:18,419
last week basically kind of that we have

00:22:16,799 --> 00:22:20,669
some decisions about what would buy

00:22:18,419 --> 00:22:22,950
snaps you should actually do this were

00:22:20,669 --> 00:22:25,200
also triggered by a request from from

00:22:22,950 --> 00:22:28,559
community to create the baseline person

00:22:25,200 --> 00:22:32,820
based on free desktop runtime which kind

00:22:28,559 --> 00:22:34,830
of new start or new post some questions

00:22:32,820 --> 00:22:36,389
about whether base that should provide

00:22:34,830 --> 00:22:38,879
some environment profiles and how about

00:22:36,389 --> 00:22:40,980
confinement where they do what are the

00:22:38,879 --> 00:22:44,249
limits on what should be inside the base

00:22:40,980 --> 00:22:45,509
now so we were less of integration

00:22:44,249 --> 00:22:49,200
points which is based just mouth

00:22:45,509 --> 00:22:51,649
locations and we'll see how far we can

00:22:49,200 --> 00:22:51,649
get for that

00:22:59,640 --> 00:23:05,909
[Music]

00:23:02,240 --> 00:23:10,260
well I think we could say is that the

00:23:05,909 --> 00:23:11,820
good snaps that are in the snaps are

00:23:10,260 --> 00:23:14,159
actually all using two door libraries

00:23:11,820 --> 00:23:18,720
and tools because that's what that's the

00:23:14,159 --> 00:23:20,159
stuff that they wanted to use the game

00:23:18,720 --> 00:23:23,100
engine yeah

00:23:20,159 --> 00:23:25,650
although as far as as far as I know

00:23:23,100 --> 00:23:27,330
they're they use some really wacky birth

00:23:25,650 --> 00:23:29,549
process to quell means they remember it

00:23:27,330 --> 00:23:33,059
by hand so we already found it we're in

00:23:29,549 --> 00:23:34,950
the military but it also shows that the

00:23:33,059 --> 00:23:36,720
fedora stuff isn't incompatible with

00:23:34,950 --> 00:23:38,850
being in that kind of a confinement

00:23:36,720 --> 00:23:41,250
environment so we already know that this

00:23:38,850 --> 00:23:42,840
is possible and workable it's just the

00:23:41,250 --> 00:23:45,030
producing a standardized environment for

00:23:42,840 --> 00:23:46,679
everyone to consume is something that we

00:23:45,030 --> 00:23:50,909
need to do the sketch out and actually

00:23:46,679 --> 00:23:52,970
define yeah so we actually running all

00:23:50,909 --> 00:23:56,870
the time so maybe I'll just skip them or

00:23:52,970 --> 00:23:56,870
you know it was just basically

00:24:14,820 --> 00:24:21,540
so I'm probably the worst person to

00:24:18,050 --> 00:25:19,550
question yeah I'm the colliculus so sir

00:24:21,540 --> 00:25:21,750
my response that I previously talked to

00:25:19,550 --> 00:25:22,890
phenomenal people about and I think

00:25:21,750 --> 00:25:26,070
you're kind of aware because we were

00:25:22,890 --> 00:25:28,350
there for a few of them is that at least

00:25:26,070 --> 00:25:29,970
for development staging and all those

00:25:28,350 --> 00:25:32,460
kinds of things it'd be nice to have a

00:25:29,970 --> 00:25:36,270
way to put it all there somewhere and

00:25:32,460 --> 00:25:37,830
then yes publishing for other for lots

00:25:36,270 --> 00:25:40,200
of other people to consume like how we

00:25:37,830 --> 00:25:42,480
do with the docker hubs thing same thing

00:25:40,200 --> 00:25:44,610
for this but really nice token providing

00:25:42,480 --> 00:25:47,070
registry which is basically a way to

00:25:44,610 --> 00:25:48,690
upload something make it available but

00:25:47,070 --> 00:25:50,430
doesn't really mean that it has the same

00:25:48,690 --> 00:25:54,480
functionality as the full daughter right

00:25:50,430 --> 00:25:56,430
right so first thing I I don't really

00:25:54,480 --> 00:25:59,400
see a reason for this not happening

00:25:56,430 --> 00:26:02,580
because it seems like an easy way out to

00:25:59,400 --> 00:26:06,270
you know solve this controversy and hope

00:26:02,580 --> 00:26:08,190
we can we can make it work the I think

00:26:06,270 --> 00:26:12,000
the the real problem at this point is

00:26:08,190 --> 00:26:15,410
that still the story of the guys are

00:26:12,000 --> 00:26:19,090
unstable and so reimplemented it or

00:26:15,410 --> 00:26:21,880
splitting it out is still different

00:26:19,090 --> 00:26:25,180
and it is something that I do push for

00:26:21,880 --> 00:26:27,010
as I keep working with them and it is a

00:26:25,180 --> 00:26:29,080
concern that that they do keep in the

00:26:27,010 --> 00:26:30,220
back of their minds about it I it's

00:26:29,080 --> 00:26:32,530
definitely something I want to see

00:26:30,220 --> 00:26:35,140
happen before we get to the snappy

00:26:32,530 --> 00:26:36,970
Fedora edition or something like that

00:26:35,140 --> 00:26:38,890
where everything can be booted out of

00:26:36,970 --> 00:26:40,600
snap similar in this in a similar

00:26:38,890 --> 00:26:42,700
fashion to how it would do court works

00:26:40,600 --> 00:26:44,560
because if if I want to get to that one

00:26:42,700 --> 00:26:48,040
world I also want to be able to provide

00:26:44,560 --> 00:26:50,470
that kind of an experience for people I

00:26:48,040 --> 00:26:52,720
already know how I would if I needed to

00:26:50,470 --> 00:26:55,180
have a change snap be to allow us to do

00:26:52,720 --> 00:26:58,210
that it's just a matter of having an

00:26:55,180 --> 00:27:00,250
implementation to use so it's it's more

00:26:58,210 --> 00:27:02,590
of a function of time and effort and

00:27:00,250 --> 00:27:04,510
getting somebody to say this is what

00:27:02,590 --> 00:27:06,610
it's supposed to look like more than

00:27:04,510 --> 00:27:08,950
anything else because it totally can

00:27:06,610 --> 00:27:10,750
happen everything is all the bits are in

00:27:08,950 --> 00:27:13,630
place from the snappy side to make that

00:27:10,750 --> 00:27:15,970
kind of thing happen right now it's just

00:27:13,630 --> 00:27:18,460
that we don't the store is still

00:27:15,970 --> 00:27:20,020
churning API wise and that makes it very

00:27:18,460 --> 00:27:21,670
difficult for me to be able to pin down

00:27:20,020 --> 00:27:23,590
or anyone else to pin down and

00:27:21,670 --> 00:27:28,900
open-source implementation there was one

00:27:23,590 --> 00:27:30,670
and the reason again I know it's it's

00:27:28,900 --> 00:27:42,150
like some kind of thing with the

00:27:30,670 --> 00:27:43,750
namespace and a number and well I mean

00:27:42,150 --> 00:27:46,560
you know that's

00:27:43,750 --> 00:27:46,560
Blackstone's

00:27:47,870 --> 00:27:55,190
yeah for full support I mean what you're

00:27:52,460 --> 00:27:57,580
doing is cool and I'm not going to block

00:27:55,190 --> 00:28:00,350
it or anything but it's harder to get

00:27:57,580 --> 00:28:02,360
certainly nobody at Red Hat individual

00:28:00,350 --> 00:28:04,490
wearing the Red Hat capacity is going to

00:28:02,360 --> 00:28:07,820
be interested in this at all in that

00:28:04,490 --> 00:28:09,800
state and as a community project you

00:28:07,820 --> 00:28:13,190
know with the Dora's interests in mind

00:28:09,800 --> 00:28:15,530
it is only mildly interesting to me when

00:28:13,190 --> 00:28:17,870
it is basically they can be stuff into

00:28:15,530 --> 00:28:19,760
the canonical University a canonical at

00:28:17,870 --> 00:28:22,970
the center of gatekeeping for

00:28:19,760 --> 00:28:24,650
applications that's that's not a future

00:28:22,970 --> 00:28:28,400
that I want and it's not a future that's

00:28:24,650 --> 00:28:30,980
great for Dora so I mean I personally

00:28:28,400 --> 00:28:32,750
would like to see something more neutral

00:28:30,980 --> 00:28:35,900
happening to even the existing snap

00:28:32,750 --> 00:28:36,860
store implementation but I can't do

00:28:35,900 --> 00:28:40,120
anything about it

00:28:36,860 --> 00:28:40,120
I know

00:28:52,450 --> 00:28:55,619

YouTube URL: https://www.youtube.com/watch?v=nX0iNVLxoqg


