Title: Building CentOS with Familiar Tools - Brian Stinson - Flock 2019
Publication date: 2019-09-02
Playlist: Flock 2019
Description: 
	With the release of new technologies in Red Hat Enterprise Linux 8, we needed a new set of tools to build CentOS. Many of these tools: koji, mbs, pungi etc. have been proven out in Fedora, so we decided to explore using those to build our distribution. In this talk we'll discuss some changes to how we build CentOS, and what we've done so far to let folks in our community build their own stuff too, using a koji/mbs distribution called "Mbox".

--
Recordings of talks at Flock are a community effort.  Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:02,949 --> 00:00:10,210
so my name is Brian Stinson I work on

00:00:06,009 --> 00:00:12,160
the Santos project normally well I'd be

00:00:10,210 --> 00:00:15,099
working on some of the CI infrastructure

00:00:12,160 --> 00:00:17,470
and and things like that but for the the

00:00:15,099 --> 00:00:20,860
past few months I've actually been

00:00:17,470 --> 00:00:22,779
working on building Santos eight just as

00:00:20,860 --> 00:00:25,329
you know part of my day-to-day job and

00:00:22,779 --> 00:00:28,809
stuff so I'm talking here about building

00:00:25,329 --> 00:00:32,320
Santos with familiar tools but to do

00:00:28,809 --> 00:00:34,240
that I think it's probably those of you

00:00:32,320 --> 00:00:40,450
in here how many of you used Santos on

00:00:34,240 --> 00:00:41,950
your system once or twice yeah okay so

00:00:40,450 --> 00:00:45,100
talk a little bit about some some

00:00:41,950 --> 00:00:47,590
history and and kind of what we do is a

00:00:45,100 --> 00:00:50,079
project we take the sources that come as

00:00:47,590 --> 00:00:52,650
part of the source delivery process from

00:00:50,079 --> 00:00:56,020
Red Hat and for Red Hat Enterprise Linux

00:00:52,650 --> 00:01:00,910
and we rebuild those sources and produce

00:00:56,020 --> 00:01:02,980
a free distribution called CentOS that's

00:01:00,910 --> 00:01:05,320
you know there's a if we go back into

00:01:02,980 --> 00:01:06,490
ancient history about wine you know this

00:01:05,320 --> 00:01:09,250
all came about that'd be an interesting

00:01:06,490 --> 00:01:12,550
discussion but not for this this

00:01:09,250 --> 00:01:14,950
particular talk but I brought that up to

00:01:12,550 --> 00:01:16,420
say that you know it's basically a huge

00:01:14,950 --> 00:01:18,580
rebuild operation that we're going

00:01:16,420 --> 00:01:22,810
through here we're taking sources that

00:01:18,580 --> 00:01:24,729
have already been you know producing

00:01:22,810 --> 00:01:30,220
into an operating system and recreating

00:01:24,729 --> 00:01:33,369
it you know out in the open and I guess

00:01:30,220 --> 00:01:37,299
you could call it for the contemporary

00:01:33,369 --> 00:01:39,100
history of CentOS and by contemporary I

00:01:37,299 --> 00:01:42,119
mean you know going back to the the

00:01:39,100 --> 00:01:44,920
Santos 5 days you know four and three

00:01:42,119 --> 00:01:46,210
are also pretty similar in the in the

00:01:44,920 --> 00:01:49,030
patterns of the ways that we built the

00:01:46,210 --> 00:01:51,939
distribution but in typically in the in

00:01:49,030 --> 00:01:54,430
the sent house five and six days you

00:01:51,939 --> 00:01:55,869
know this was was kind of our our mode

00:01:54,430 --> 00:01:57,280
of operation that guy in the middle of

00:01:55,869 --> 00:01:59,920
his head kind of got cropped out that's

00:01:57,280 --> 00:02:03,640
Johnny Hughes he he's been building our

00:01:59,920 --> 00:02:05,560
PMS for CentOS for a long long time but

00:02:03,640 --> 00:02:10,509
basically we feed Johnny coffee and

00:02:05,560 --> 00:02:12,040
source rpms and outcome CentOS and for

00:02:10,509 --> 00:02:15,730
the

00:02:12,040 --> 00:02:22,120
for the the lifetime of of those two

00:02:15,730 --> 00:02:23,890
systems this was a it was a pretty

00:02:22,120 --> 00:02:26,170
manual operation as kind of what I'm

00:02:23,890 --> 00:02:29,170
going here to say we're the building

00:02:26,170 --> 00:02:32,709
sent us even today has some really kind

00:02:29,170 --> 00:02:34,660
of bespoke operations to it because our

00:02:32,709 --> 00:02:36,670
mission is to go out and recreate

00:02:34,660 --> 00:02:38,920
sources that have out there rebuild

00:02:36,670 --> 00:02:44,470
sources that have already been been

00:02:38,920 --> 00:02:48,450
produced so for for sent us six the

00:02:44,470 --> 00:02:51,430
sources come came from FTP Red Hat comm

00:02:48,450 --> 00:02:55,390
those were in source rpm format you know

00:02:51,430 --> 00:02:57,730
posted to there we have some some

00:02:55,390 --> 00:03:01,180
triggers that look for new new content

00:02:57,730 --> 00:03:05,980
at ftp ftps calm and run it through our

00:03:01,180 --> 00:03:08,319
build system so REMS dual is the build

00:03:05,980 --> 00:03:08,890
system that came out of the the Santa

00:03:08,319 --> 00:03:12,970
Sixto

00:03:08,890 --> 00:03:14,380
release we found that and this is this

00:03:12,970 --> 00:03:16,540
is kind of why I talked about Santos

00:03:14,380 --> 00:03:19,299
five and six being the sort of the start

00:03:16,540 --> 00:03:23,260
of the contemporary age of of Santos is

00:03:19,299 --> 00:03:25,450
because we kind of got away from you

00:03:23,260 --> 00:03:29,109
know local mock builds on a build farm

00:03:25,450 --> 00:03:31,359
somewhere to actually scheduling builds

00:03:29,109 --> 00:03:35,500
in a separate build system that started

00:03:31,359 --> 00:03:38,739
with the with sent us six rims will is a

00:03:35,500 --> 00:03:40,989
collection of is basically a beanstalk

00:03:38,739 --> 00:03:45,130
you if you're familiar with Bienstock

00:03:40,989 --> 00:03:47,350
messaging system and a bunch of moksha

00:03:45,130 --> 00:03:49,060
routes and a build farm you know

00:03:47,350 --> 00:03:52,299
obviously need builders for that sort of

00:03:49,060 --> 00:03:57,190
thing but it's a it's relatively simple

00:03:52,299 --> 00:03:59,980
compared to what even what was going on

00:03:57,190 --> 00:04:03,090
in the in the fedora space at the time

00:03:59,980 --> 00:04:05,440
that that these distributions started

00:04:03,090 --> 00:04:07,930
and it got a little more complicated as

00:04:05,440 --> 00:04:12,099
as things went on in the santa seven

00:04:07,930 --> 00:04:13,870
days this was around you might remember

00:04:12,099 --> 00:04:16,599
the the Red Hat partnership with the

00:04:13,870 --> 00:04:18,549
sent us project a bunch of the

00:04:16,599 --> 00:04:20,260
developers for CentOS were actually

00:04:18,549 --> 00:04:24,670
became Red Hat employees around this

00:04:20,260 --> 00:04:26,500
time and we started some extra

00:04:24,670 --> 00:04:28,750
extra activities in the project besides

00:04:26,500 --> 00:04:31,090
just producing the CentOS Linux that we

00:04:28,750 --> 00:04:33,850
know and love we added the special

00:04:31,090 --> 00:04:36,010
interest groups those were focused at

00:04:33,850 --> 00:04:37,240
projects that were layered on top of the

00:04:36,010 --> 00:04:40,600
operating system

00:04:37,240 --> 00:04:42,360
we started with folks like our do did a

00:04:40,600 --> 00:04:46,090
distribution of OpenStack on top of

00:04:42,360 --> 00:04:48,880
Santos and cluster Ceph folks like that

00:04:46,090 --> 00:04:51,790
and they're still delivering content to

00:04:48,880 --> 00:04:55,300
this day using a Koji instance that we

00:04:51,790 --> 00:04:58,720
stood up for that purpose and again this

00:04:55,300 --> 00:05:00,220
is you know this is kind of a tale of 15

00:04:58,720 --> 00:05:02,800
build systems or so because we've

00:05:00,220 --> 00:05:04,440
maintained the Remzi build system that

00:05:02,800 --> 00:05:08,740
we have 4 5 & 6

00:05:04,440 --> 00:05:12,100
Remz ool is also used in a separate

00:05:08,740 --> 00:05:14,500
capacity to build the CentOS 7 distro we

00:05:12,100 --> 00:05:17,830
have the Koji build system and we just

00:05:14,500 --> 00:05:21,160
ended up retiring you know a few months

00:05:17,830 --> 00:05:27,310
ago we had a plague set up to help us

00:05:21,160 --> 00:05:28,900
with a an army chief P bring up because

00:05:27,310 --> 00:05:30,580
traditionally with you know some of

00:05:28,900 --> 00:05:32,770
these other things that we've been

00:05:30,580 --> 00:05:35,350
talking about so far bringing up an

00:05:32,770 --> 00:05:40,330
extra architectures is kind of hard to

00:05:35,350 --> 00:05:41,830
do but with CentOS 7 the sources the Red

00:05:40,330 --> 00:05:45,730
Hat started shipping the sources to

00:05:41,830 --> 00:05:49,840
route the rel sources to get Santos org

00:05:45,730 --> 00:05:51,550
so that's a you know that's a place for

00:05:49,840 --> 00:05:54,240
them to dump all of their packages but

00:05:51,550 --> 00:05:57,160
it's also the the place of record for

00:05:54,240 --> 00:06:00,400
what goes into rel from a source

00:05:57,160 --> 00:06:01,530
perspective and we actually wrote REM

00:06:00,400 --> 00:06:03,640
Zhul

00:06:01,530 --> 00:06:05,920
it's open source you can find it on

00:06:03,640 --> 00:06:09,400
github under the the santos organization

00:06:05,920 --> 00:06:13,060
it's like I said it's a simple Beanstalk

00:06:09,400 --> 00:06:18,270
thing and built around some some mature

00:06:13,060 --> 00:06:23,320
roots but even in this in this process

00:06:18,270 --> 00:06:26,500
like the the workflow itself really

00:06:23,320 --> 00:06:29,170
didn't change a whole lot we're still

00:06:26,500 --> 00:06:30,940
back to you know handing coffee and

00:06:29,170 --> 00:06:34,510
source rpms to Johnny and then outcome

00:06:30,940 --> 00:06:37,300
CentOS because the the source layouts in

00:06:34,510 --> 00:06:38,280
get Santos org are basically take a

00:06:37,300 --> 00:06:40,420
source rpm

00:06:38,280 --> 00:06:44,650
exploded out into the directory that she

00:06:40,420 --> 00:06:46,270
used to with s rpms specs a couple of

00:06:44,650 --> 00:06:53,770
the metadata files in there and then

00:06:46,270 --> 00:06:56,470
just check it in to get and this is the

00:06:53,770 --> 00:06:58,560
sort of the handmade nature of the way

00:06:56,470 --> 00:07:01,360
that we've built sent us in the past

00:06:58,560 --> 00:07:05,170
it'll kind of give you a clue as to some

00:07:01,360 --> 00:07:06,190
of the problems that we've had and so

00:07:05,170 --> 00:07:08,650
some of the problems that transcend

00:07:06,190 --> 00:07:11,440
releases we've had these problems you

00:07:08,650 --> 00:07:13,390
know from from the day one this is

00:07:11,440 --> 00:07:15,960
things that we just deal with as a

00:07:13,390 --> 00:07:18,580
matter of course when building a Santos

00:07:15,960 --> 00:07:22,720
distribution each release has its own

00:07:18,580 --> 00:07:29,380
individual needs Santos six is probably

00:07:22,720 --> 00:07:30,700
I would say one of the one of one of the

00:07:29,380 --> 00:07:32,920
ones we have to spend the least amount

00:07:30,700 --> 00:07:34,900
of time on catering to its individual

00:07:32,920 --> 00:07:36,900
needs it's pretty straightforward we

00:07:34,900 --> 00:07:42,220
build the source rpms and it comes out

00:07:36,900 --> 00:07:44,050
sent a seven actually grew the the need

00:07:42,220 --> 00:07:46,890
for us to build different parts of the

00:07:44,050 --> 00:07:49,390
distribution with different tool chains

00:07:46,890 --> 00:07:51,370
so if you're familiar with the developer

00:07:49,390 --> 00:07:53,350
tool sets and stuff that that ended up

00:07:51,370 --> 00:07:56,650
being shipped in the middle of the the

00:07:53,350 --> 00:07:59,560
seven release stream we had to to kind

00:07:56,650 --> 00:08:05,170
of tweak the way that we build some of

00:07:59,560 --> 00:08:09,010
the packages and and leave the other

00:08:05,170 --> 00:08:11,770
stuff alone one of the other problems

00:08:09,010 --> 00:08:13,930
and we've we found this in the in the

00:08:11,770 --> 00:08:16,960
eighth series as well is we don't always

00:08:13,930 --> 00:08:20,680
get the what I call the filler from Red

00:08:16,960 --> 00:08:24,150
Hat and this comes in the form of

00:08:20,680 --> 00:08:26,770
intermediate build routes you know the

00:08:24,150 --> 00:08:30,730
the pathological case is you have a

00:08:26,770 --> 00:08:34,840
particular library or an application you

00:08:30,730 --> 00:08:39,669
know has a 10.1 release that requires

00:08:34,840 --> 00:08:42,729
100 to build when they release 1.0 got

00:08:39,669 --> 00:08:44,590
to it itself requires that middle build

00:08:42,729 --> 00:08:47,680
but Red Hat may or may not release that

00:08:44,590 --> 00:08:49,630
depending on where it lands in their in

00:08:47,680 --> 00:08:51,490
their update cycle so we may not get

00:08:49,630 --> 00:08:54,430
that intermediary package

00:08:51,490 --> 00:08:56,470
that was used to build something that

00:08:54,430 --> 00:08:59,800
was that they've produced and we have to

00:08:56,470 --> 00:09:02,110
kind of go in and engineer what was in

00:08:59,800 --> 00:09:04,390
the Builder at the time when RedHat

00:09:02,110 --> 00:09:06,220
built it so that we can go back and kind

00:09:04,390 --> 00:09:09,279
of inject those things in and that's

00:09:06,220 --> 00:09:12,899
that's part of why the process for

00:09:09,279 --> 00:09:16,480
Santos has been so manual and it's also

00:09:12,899 --> 00:09:20,110
it also speaks to some of the the

00:09:16,480 --> 00:09:23,890
requirements that we have that don't

00:09:20,110 --> 00:09:25,720
necessarily shoehorn nicely into build

00:09:23,890 --> 00:09:30,870
systems like Koji

00:09:25,720 --> 00:09:30,870
for example we we regularly rebuild

00:09:31,980 --> 00:09:37,990
particular binary rpms and use the same

00:09:34,720 --> 00:09:39,940
in VR against different components in

00:09:37,990 --> 00:09:42,459
the Builder depending on you know what

00:09:39,940 --> 00:09:44,529
we find about the libraries that were in

00:09:42,459 --> 00:09:48,070
there at the time and Koji doesn't like

00:09:44,529 --> 00:09:50,500
it when you do that there's a couple of

00:09:48,070 --> 00:09:52,270
operations you can do that that'll let

00:09:50,500 --> 00:09:54,910
you do that but some of the other tools

00:09:52,270 --> 00:09:58,630
end up breaking if you if you do that

00:09:54,910 --> 00:10:04,600
too often time bombs another package

00:09:58,630 --> 00:10:05,770
craft is a real problem so I don't know

00:10:04,600 --> 00:10:08,920
if they just think it's funny or

00:10:05,770 --> 00:10:11,709
something but a lot of you know far

00:10:08,920 --> 00:10:16,839
upstream developers will put in tests

00:10:11,709 --> 00:10:18,790
that include a certificate or some sort

00:10:16,839 --> 00:10:20,770
of date check or something like that

00:10:18,790 --> 00:10:23,079
that gets committed to the package and

00:10:20,770 --> 00:10:28,120
run as percent as part of percent check

00:10:23,079 --> 00:10:31,450
and that is brutal for us because there

00:10:28,120 --> 00:10:32,890
there are times when the certificate

00:10:31,450 --> 00:10:34,839
will be generated at the beginning of

00:10:32,890 --> 00:10:38,470
the rel development cycle and it'll

00:10:34,839 --> 00:10:41,410
expire before the actual rail release

00:10:38,470 --> 00:10:43,510
has has gone out so rel has actually

00:10:41,410 --> 00:10:46,209
built it at work just fine in their

00:10:43,510 --> 00:10:47,709
build system we go and try and rebuild

00:10:46,209 --> 00:10:50,290
it in Santos and the certificates

00:10:47,709 --> 00:10:54,880
expired that's a huge problem that we

00:10:50,290 --> 00:11:01,420
find in more packages than we should but

00:10:54,880 --> 00:11:04,399
then by the time we get to to even add

00:11:01,420 --> 00:11:08,420
ATO release especially

00:11:04,399 --> 00:11:10,850
the fedora relieves that it's you know

00:11:08,420 --> 00:11:13,009
that a rel major release is based on is

00:11:10,850 --> 00:11:16,639
usually two releases ahead at this point

00:11:13,009 --> 00:11:19,639
so if you take rel eight for example is

00:11:16,639 --> 00:11:22,579
based on Fedora 28 rel8 released on on

00:11:19,639 --> 00:11:25,759
May 5th of this year Fedora 28 when

00:11:22,579 --> 00:11:27,920
end-of-life on May 28th and we're still

00:11:25,759 --> 00:11:32,059
in the middle of the build process here

00:11:27,920 --> 00:11:34,699
for for CentOS 8 and we typically find

00:11:32,059 --> 00:11:38,480
that we need to go back and and sort of

00:11:34,699 --> 00:11:41,660
do some archeology to find things that

00:11:38,480 --> 00:11:43,639
satisfy dependencies or to use as part

00:11:41,660 --> 00:11:47,899
of our base infrastructure to actually

00:11:43,639 --> 00:11:51,889
get get this stuff out the door because

00:11:47,899 --> 00:11:54,170
we don't especially for the the older

00:11:51,889 --> 00:11:56,420
releases we don't really pay much

00:11:54,170 --> 00:12:00,139
attention to what goes on internally in

00:11:56,420 --> 00:12:03,230
Red Hat just to court sort of keep some

00:12:00,139 --> 00:12:04,970
separation there with eight we're

00:12:03,230 --> 00:12:06,620
relaxing some of those rules it's a

00:12:04,970 --> 00:12:09,110
little bit easier for us to operate as a

00:12:06,620 --> 00:12:13,429
team and figure out what what Red Hat

00:12:09,110 --> 00:12:14,779
was doing at the time but still we find

00:12:13,429 --> 00:12:16,249
ourselves going back to fedora quite a

00:12:14,779 --> 00:12:18,439
bit and we're going back to an

00:12:16,249 --> 00:12:20,269
end-of-life distribution to to kind of

00:12:18,439 --> 00:12:22,809
get some things bootstrapped and and

00:12:20,269 --> 00:12:25,519
that's that can be a problem

00:12:22,809 --> 00:12:29,749
so Cintas eight was an opportunity to

00:12:25,519 --> 00:12:31,519
automate some of our processes and we've

00:12:29,749 --> 00:12:35,569
always wanted to sort of abuse the tools

00:12:31,519 --> 00:12:38,480
that fedora and rel use just as a as a

00:12:35,569 --> 00:12:40,399
as part of the family you know it makes

00:12:38,480 --> 00:12:43,339
it it makes it easier to talk about

00:12:40,399 --> 00:12:45,769
things with other developers when we can

00:12:43,339 --> 00:12:47,839
hand them a koji build and they can see

00:12:45,769 --> 00:12:50,720
the output of of what happened at the

00:12:47,839 --> 00:12:53,230
process besides going on to the rest of

00:12:50,720 --> 00:12:55,309
our logs and trying to dig through the

00:12:53,230 --> 00:12:58,910
the way that we've done things before

00:12:55,309 --> 00:13:00,439
and CentOS eight was kind of a breaking

00:12:58,910 --> 00:13:01,699
point to allow us to reduce some of

00:13:00,439 --> 00:13:05,179
those problems that I was talking about

00:13:01,699 --> 00:13:10,639
before I'll talk about those in a minute

00:13:05,179 --> 00:13:17,990
but Santos eight also came with a few a

00:13:10,639 --> 00:13:21,320
few motivating problems and mostly it

00:13:17,990 --> 00:13:25,339
is around modules and this is not about

00:13:21,320 --> 00:13:26,779
the the usability of of that as a you

00:13:25,339 --> 00:13:29,420
know as an actual consumer of the

00:13:26,779 --> 00:13:33,860
operating system but more of how we

00:13:29,420 --> 00:13:36,440
gonna build these and that that turned

00:13:33,860 --> 00:13:37,910
into a particular challenge for us when

00:13:36,440 --> 00:13:42,800
we're actually trying to recreate what's

00:13:37,910 --> 00:13:45,830
going on after the fact and so we were

00:13:42,800 --> 00:13:47,860
we did allow ourselves to relax some of

00:13:45,830 --> 00:13:51,980
the rules

00:13:47,860 --> 00:13:56,089
so for sent us a module and SBC's can

00:13:51,980 --> 00:13:58,520
differ from RAL the the name in the

00:13:56,089 --> 00:14:00,529
stream are always going to match but the

00:13:58,520 --> 00:14:03,770
version in the context start generated

00:14:00,529 --> 00:14:06,920
by the build system and that's just

00:14:03,770 --> 00:14:09,350
something that we can that we're

00:14:06,920 --> 00:14:12,080
allowing ourself to to relax a little

00:14:09,350 --> 00:14:16,040
bit now I will say that we're not

00:14:12,080 --> 00:14:18,680
relaxing the the restriction on rpm in V

00:14:16,040 --> 00:14:20,720
ours in base OS so all of that's gonna

00:14:18,680 --> 00:14:25,250
maintain the you know same in V ours is

00:14:20,720 --> 00:14:27,500
as you know in love with with rel but

00:14:25,250 --> 00:14:29,420
the you know relaxing that that modular

00:14:27,500 --> 00:14:33,550
thing made things a little bit easier

00:14:29,420 --> 00:14:40,399
for us and separating the implementation

00:14:33,550 --> 00:14:42,410
of the build system itself for you know

00:14:40,399 --> 00:14:44,270
typically in the past we've sort of run

00:14:42,410 --> 00:14:46,940
everything including a bunch of our

00:14:44,270 --> 00:14:51,470
alternate architectures were run through

00:14:46,940 --> 00:14:53,959
the same build system same time you know

00:14:51,470 --> 00:14:55,850
Johnny would go in and drink his coffee

00:14:53,959 --> 00:14:57,920
and and submit a whole bunch of builds

00:14:55,850 --> 00:14:59,000
to the the same system but we've allowed

00:14:57,920 --> 00:15:02,089
ourselves to separate those

00:14:59,000 --> 00:15:05,120
implementations just as our policy

00:15:02,089 --> 00:15:07,430
changes a little bit there's some

00:15:05,120 --> 00:15:10,870
interesting things going on in multi

00:15:07,430 --> 00:15:14,029
arch for the the rel 707 release I think

00:15:10,870 --> 00:15:16,029
and we're kind of having to figure out

00:15:14,029 --> 00:15:18,070
what what that's going to mean for us

00:15:16,029 --> 00:15:20,450
what our policies are going to change

00:15:18,070 --> 00:15:24,980
especially as you know we go through the

00:15:20,450 --> 00:15:26,630
10-year life cycle and separating out

00:15:24,980 --> 00:15:29,660
some of the the build systems in

00:15:26,630 --> 00:15:31,340
different places will let us kind of

00:15:29,660 --> 00:15:34,460
manage things a little bit differently

00:15:31,340 --> 00:15:37,850
and so we came up with a tool called

00:15:34,460 --> 00:15:40,460
inbox and really all that this is it

00:15:37,850 --> 00:15:42,650
sounds fancy and like it's a you know an

00:15:40,460 --> 00:15:44,510
actual thing but basically it's just

00:15:42,650 --> 00:15:47,330
Koji MBs

00:15:44,510 --> 00:15:50,060
the Koji Hub koji web the module build

00:15:47,330 --> 00:15:51,830
service and a couple of helper services

00:15:50,060 --> 00:15:55,250
that can be deployed in an open shift

00:15:51,830 --> 00:15:59,930
namespace so we containerized the Koji

00:15:55,250 --> 00:16:00,980
Hub and MBS that way we can there's a

00:15:59,930 --> 00:16:04,130
couple of things that you can get from

00:16:00,980 --> 00:16:06,230
that you can use the some of the storage

00:16:04,130 --> 00:16:08,120
layers that are in openshift to actually

00:16:06,230 --> 00:16:10,580
manage your volumes and and things like

00:16:08,120 --> 00:16:12,950
that but you can also administrative Lee

00:16:10,580 --> 00:16:16,220
set things that need separate separate

00:16:12,950 --> 00:16:20,360
build systems but you can consolidate a

00:16:16,220 --> 00:16:21,529
little bit of the management and I'll

00:16:20,360 --> 00:16:23,270
talk about how we did that in just a

00:16:21,529 --> 00:16:25,610
minute but I wanted to put up a link

00:16:23,270 --> 00:16:27,860
this is sort of the upstream as it

00:16:25,610 --> 00:16:34,190
exists right now and yes there are two

00:16:27,860 --> 00:16:35,540
B's in that that repo name if you want

00:16:34,190 --> 00:16:39,500
to want to take a look this is something

00:16:35,540 --> 00:16:45,020
that Patrick wrote quickly forests while

00:16:39,500 --> 00:16:46,250
we were sort of scaffolding this out so

00:16:45,020 --> 00:16:48,770
how did it go

00:16:46,250 --> 00:16:52,640
we heavily modified our instance of

00:16:48,770 --> 00:16:54,860
inbox just as we you know did the

00:16:52,640 --> 00:16:58,310
day-to-day process of building 8 we

00:16:54,860 --> 00:17:00,350
ended up needing config changes that

00:16:58,310 --> 00:17:02,660
were different from the defaults and and

00:17:00,350 --> 00:17:04,189
things like that so we've diverged a

00:17:02,660 --> 00:17:06,380
little you know actually quite a bit

00:17:04,189 --> 00:17:08,780
from upstream but we started with two

00:17:06,380 --> 00:17:12,800
instances for CentOS 8 our primary

00:17:08,780 --> 00:17:16,810
architectures are x86 64 PPC 64 le and

00:17:12,800 --> 00:17:19,280
AR 64 we have a community member who is

00:17:16,810 --> 00:17:22,459
really interested in the 32-bit arm

00:17:19,280 --> 00:17:25,880
space and we gave him a whole Koji and

00:17:22,459 --> 00:17:30,170
NBS set up so that he could do arm each

00:17:25,880 --> 00:17:32,090
FP 4's and there's a link to the to the

00:17:30,170 --> 00:17:34,610
primary one this is what it looks like

00:17:32,090 --> 00:17:37,280
you know you're the koji interface that

00:17:34,610 --> 00:17:40,600
you know and love and this is something

00:17:37,280 --> 00:17:44,030
new for us too because typically we've

00:17:40,600 --> 00:17:44,970
for the for the 7 release we posted all

00:17:44,030 --> 00:17:48,539
of our build logs

00:17:44,970 --> 00:17:51,210
things to an Apache instance that we

00:17:48,539 --> 00:17:53,190
have and folks could go out and look but

00:17:51,210 --> 00:17:54,990
they didn't have this nice interface you

00:17:53,190 --> 00:17:58,740
know relatively nice interface compared

00:17:54,990 --> 00:18:02,220
to digging through Apache indexes and

00:17:58,740 --> 00:18:05,730
stuff of looking at what we were doing

00:18:02,220 --> 00:18:07,169
at the time and this has been you know

00:18:05,730 --> 00:18:08,820
kind of helpful we're we're still

00:18:07,169 --> 00:18:11,070
ironing out some of the policies with

00:18:08,820 --> 00:18:14,700
our QA group who kind of controls the

00:18:11,070 --> 00:18:18,870
release process of Santos so we're not

00:18:14,700 --> 00:18:22,559
we're not exposing the artifacts of the

00:18:18,870 --> 00:18:25,409
images that come out of Koji for example

00:18:22,559 --> 00:18:28,289
but we want to expose the RPMs the logs

00:18:25,409 --> 00:18:30,980
the you know other collateral that that

00:18:28,289 --> 00:18:33,510
runs through the build system as we go

00:18:30,980 --> 00:18:35,640
and that brings up another point since

00:18:33,510 --> 00:18:37,679
we have a Koji it's easier easier for us

00:18:35,640 --> 00:18:41,730
to use existing compose tooling like

00:18:37,679 --> 00:18:45,330
punji and it lets us build entire trees

00:18:41,730 --> 00:18:47,309
early so for the five six seven days you

00:18:45,330 --> 00:18:49,190
know we're building things by hand the

00:18:47,309 --> 00:18:52,830
trees actually didn't come the the

00:18:49,190 --> 00:18:55,710
repositories with the correct metadata

00:18:52,830 --> 00:18:57,299
and in the right places that actually

00:18:55,710 --> 00:19:01,909
didn't come until very very late in the

00:18:57,299 --> 00:19:05,010
process I would call that we did our

00:19:01,909 --> 00:19:07,919
repo structure as part of the RC process

00:19:05,010 --> 00:19:11,970
even before we pushed it out to the

00:19:07,919 --> 00:19:16,409
mirrors and that that also means that we

00:19:11,970 --> 00:19:18,750
did anaconda like last whenever we we

00:19:16,409 --> 00:19:22,380
pushed out a release which is entirely

00:19:18,750 --> 00:19:24,809
the wrong place to put that for for this

00:19:22,380 --> 00:19:26,669
distribution because a lot of times we

00:19:24,809 --> 00:19:27,840
need patches for deep branding and

00:19:26,669 --> 00:19:30,890
things like that

00:19:27,840 --> 00:19:33,030
so this lets us build entire trees early

00:19:30,890 --> 00:19:34,850
basically as soon as we had something

00:19:33,030 --> 00:19:37,679
that would close dependencies we can

00:19:34,850 --> 00:19:39,299
generate the entire trees and the images

00:19:37,679 --> 00:19:41,789
that go with them and that helped us

00:19:39,299 --> 00:19:45,740
quite a bit with with the QA process of

00:19:41,789 --> 00:19:47,760
running it through our test harnesses

00:19:45,740 --> 00:19:50,490
you know we check some of the the

00:19:47,760 --> 00:19:53,250
metadata things like that and having

00:19:50,490 --> 00:19:55,200
cloud images from day one was really

00:19:53,250 --> 00:19:56,750
nice to be able to spin up in in some of

00:19:55,200 --> 00:19:59,429
our

00:19:56,750 --> 00:20:03,090
some of our kayvyun environments that we

00:19:59,429 --> 00:20:05,429
have for testing so what's next for EM

00:20:03,090 --> 00:20:08,610
box we need to in reintegrate some of

00:20:05,429 --> 00:20:11,400
those customizations that we did the the

00:20:08,610 --> 00:20:13,650
random patches to the config files and

00:20:11,400 --> 00:20:14,780
updating the images and and things like

00:20:13,650 --> 00:20:16,860
that

00:20:14,780 --> 00:20:18,200
we need to work on getting those back

00:20:16,860 --> 00:20:20,880
upstream

00:20:18,200 --> 00:20:23,040
we've been you know kind of heads down

00:20:20,880 --> 00:20:24,840
in the build process we haven't really

00:20:23,040 --> 00:20:26,700
done much in the way of upstream

00:20:24,840 --> 00:20:28,830
contribution in that aspect but that's

00:20:26,700 --> 00:20:30,299
coming we plan on deploying more

00:20:28,830 --> 00:20:32,400
instances for other projects and

00:20:30,299 --> 00:20:33,990
architecture bring ups we don't know

00:20:32,400 --> 00:20:38,940
what those are going to look like yet

00:20:33,990 --> 00:20:40,340
but I don't know there's rumors of folks

00:20:38,940 --> 00:20:42,360
that are interested in other

00:20:40,340 --> 00:20:45,500
architecture projects and things and

00:20:42,360 --> 00:20:48,030
inbox would be a great resource for them

00:20:45,500 --> 00:20:49,470
the community builds service I mentioned

00:20:48,030 --> 00:20:52,590
we have that Koji instance for our

00:20:49,470 --> 00:20:55,230
special interest groups we're looking

00:20:52,590 --> 00:20:57,150
into deploying an instance of inbox for

00:20:55,230 --> 00:20:58,950
that as well

00:20:57,150 --> 00:21:03,410
just to sort of centralize the

00:20:58,950 --> 00:21:06,000
management of of these various instances

00:21:03,410 --> 00:21:10,320
the next is to kind of stabilize the

00:21:06,000 --> 00:21:14,130
services themselves in inbox we caught a

00:21:10,320 --> 00:21:16,290
couple of things you know just as things

00:21:14,130 --> 00:21:19,020
went on because we had it an open shift

00:21:16,290 --> 00:21:20,880
it was nice to be able to iterate on

00:21:19,020 --> 00:21:22,770
those containers and kind of update them

00:21:20,880 --> 00:21:27,480
in place because we actually caught a

00:21:22,770 --> 00:21:30,780
few a few bugs and the module build

00:21:27,480 --> 00:21:32,070
service has it updated and because it

00:21:30,780 --> 00:21:34,559
was an open shift we could just roll

00:21:32,070 --> 00:21:37,200
back to the previous image and go from

00:21:34,559 --> 00:21:40,110
there until we got that fixed so the

00:21:37,200 --> 00:21:42,059
last thing is to to come here to flock

00:21:40,110 --> 00:21:44,870
and to talk to other folks who might be

00:21:42,059 --> 00:21:47,130
interested in this particular pattern of

00:21:44,870 --> 00:21:50,040
you know it's almost a build system as a

00:21:47,130 --> 00:21:53,760
service pattern that folks can come you

00:21:50,040 --> 00:21:56,850
know I'd like to collaborate to get this

00:21:53,760 --> 00:21:59,910
into Fedora infrastructure as well in in

00:21:56,850 --> 00:22:02,160
case that's a useful pattern for folks

00:21:59,910 --> 00:22:05,340
and to really see if we can turn this

00:22:02,160 --> 00:22:09,559
into a general purpose tool that we can

00:22:05,340 --> 00:22:09,559
use for for both both distributions

00:22:09,800 --> 00:22:15,500
so what's next for Santos we need to

00:22:12,800 --> 00:22:19,250
finish the QA process we need to build

00:22:15,500 --> 00:22:20,990
and test this is for Santos a that is we

00:22:19,250 --> 00:22:24,230
need to build and test the non zero day

00:22:20,990 --> 00:22:27,500
updates so if you're familiar with with

00:22:24,230 --> 00:22:30,560
how things work we've had one batch

00:22:27,500 --> 00:22:33,350
already that's been posted and I think

00:22:30,560 --> 00:22:35,600
another one's coming pretty soon but

00:22:33,350 --> 00:22:38,870
we've got all of the zero day updates

00:22:35,600 --> 00:22:41,450
for a toe or already built and we need

00:22:38,870 --> 00:22:42,830
to update our C on CI infrastructure and

00:22:41,450 --> 00:22:46,970
some of our other services to include

00:22:42,830 --> 00:22:49,640
the c8 images just shortly after we we

00:22:46,970 --> 00:22:54,890
flip the bits over and and release

00:22:49,640 --> 00:22:58,100
everything to the mirrors yeah that's

00:22:54,890 --> 00:23:00,350
all that I have for today and to answer

00:22:58,100 --> 00:23:02,150
the first question we are going to

00:23:00,350 --> 00:23:03,350
release Santos 8 whenever it's ready we

00:23:02,150 --> 00:23:07,550
don't really know when that's going to

00:23:03,350 --> 00:23:09,650
be yet but we're we've got the builds

00:23:07,550 --> 00:23:11,810
done and the the QA folks are doing a

00:23:09,650 --> 00:23:14,600
really good job but I'm getting that

00:23:11,810 --> 00:23:22,490
tested so that's same for me

00:23:14,600 --> 00:23:25,340
what's that no most of them are you know

00:23:22,490 --> 00:23:28,070
out remote somewhere and typically those

00:23:25,340 --> 00:23:29,660
folks just engage with the with the sent

00:23:28,070 --> 00:23:32,600
off project I don't know many of them

00:23:29,660 --> 00:23:38,930
that that do much over here in fedora

00:23:32,600 --> 00:23:42,370
land but yeah same tree different

00:23:38,930 --> 00:23:45,220
branches and stuff so a lot of them do

00:23:42,370 --> 00:23:48,800
focus really heavily on the set aside

00:23:45,220 --> 00:23:53,020
and they do quite a bit of work for us

00:23:48,800 --> 00:23:53,020
so that's really helpful yeah

00:23:58,050 --> 00:24:05,049
[Music]

00:24:29,960 --> 00:24:37,680
yes we do have the base OS and app

00:24:33,540 --> 00:24:39,390
stream split and you know the way that

00:24:37,680 --> 00:24:42,600
Red Hat is working on that now they're

00:24:39,390 --> 00:24:44,940
they're kind of turning that into the

00:24:42,600 --> 00:24:46,080
different editions and and variants and

00:24:44,940 --> 00:24:48,960
stuff they're turning that more into a

00:24:46,080 --> 00:24:52,080
reporting problem than a content

00:24:48,960 --> 00:24:53,640
delivery problem so that's I don't know

00:24:52,080 --> 00:24:57,720
what their what they're doing with that

00:24:53,640 --> 00:24:59,640
the plan is to I mean basically we

00:24:57,720 --> 00:25:03,360
include the exact packages that are in

00:24:59,640 --> 00:25:05,430
rel base OS in Santos base OS and then

00:25:03,360 --> 00:25:07,350
the same module streams are in app

00:25:05,430 --> 00:25:10,350
stream and then also the non modular

00:25:07,350 --> 00:25:13,680
rpms are going in app stream as well so

00:25:10,350 --> 00:25:16,490
we're maintaining that split but and

00:25:13,680 --> 00:25:21,240
then adding on our extra bits we have

00:25:16,490 --> 00:25:23,490
Santos extras and sent us Plus that

00:25:21,240 --> 00:25:26,850
we'll also be maintaining in the in the

00:25:23,490 --> 00:25:29,790
eight release that's for just things

00:25:26,850 --> 00:25:32,840
that we add on that is never going to be

00:25:29,790 --> 00:25:35,760
relevant to the rel ecosystem like our

00:25:32,840 --> 00:25:37,020
our send-offs release packages for the

00:25:35,760 --> 00:25:39,960
special interest groups if you want to

00:25:37,020 --> 00:25:42,600
install cluster or RDO or something they

00:25:39,960 --> 00:25:46,740
put a santos release package in those

00:25:42,600 --> 00:25:53,300
repositories that you can enable I mean

00:25:46,740 --> 00:25:53,300
get that content but yeah yeah

00:25:54,850 --> 00:26:01,240
in box the name is is for actually I

00:25:58,330 --> 00:26:04,240
think it's an expansion of module build

00:26:01,240 --> 00:26:06,940
in a box because they're the original

00:26:04,240 --> 00:26:10,509
goal was we found out that we needed to

00:26:06,940 --> 00:26:12,970
do modules and didn't really have a good

00:26:10,509 --> 00:26:17,499
way to do that in a in a test

00:26:12,970 --> 00:26:20,549
environment and yeah there's I'm sure

00:26:17,499 --> 00:26:26,529
there are many things that right yep

00:26:20,549 --> 00:26:29,230
plenty of names gotta pick one but yeah

00:26:26,529 --> 00:26:35,169
and there's there's two B's in the in

00:26:29,230 --> 00:26:36,970
the repo name so I in the that's right

00:26:35,169 --> 00:26:41,019
that's right

00:26:36,970 --> 00:26:45,369
this is just a typo yeah

00:26:41,019 --> 00:26:50,559
something the one in our dns and yeah

00:26:45,369 --> 00:26:54,070
yeah they do is are we recording do you

00:26:50,559 --> 00:26:55,749
know okay I'll I'll tell you a couple of

00:26:54,070 --> 00:27:00,179
typos stories when we're not recording

00:26:55,749 --> 00:27:00,179
and okay there we go

00:27:00,240 --> 00:27:12,539
other questions yes

00:27:18,710 --> 00:27:24,110
yes of the we're not actually composing

00:27:21,560 --> 00:27:25,520
builder root-like so if you're a relish

00:27:24,110 --> 00:27:27,260
in here we're not composing build route

00:27:25,520 --> 00:27:30,710
as a separate thing

00:27:27,260 --> 00:27:32,990
those rpms exist in Koji you know in our

00:27:30,710 --> 00:27:36,740
inbox instance but that's not something

00:27:32,990 --> 00:27:50,480
that we're really interested in in

00:27:36,740 --> 00:27:53,410
composing as a release artifact no so

00:27:50,480 --> 00:27:57,380
there's there's a set of packages that

00:27:53,410 --> 00:28:02,720
that rel has used in the actual build

00:27:57,380 --> 00:28:06,260
routes to build individual rpms and read

00:28:02,720 --> 00:28:07,400
head is not shipping those to rel just

00:28:06,260 --> 00:28:11,530
because they're they're build read-only

00:28:07,400 --> 00:28:15,290
they have a separate life cycle and

00:28:11,530 --> 00:28:18,140
there's not a support engagement with

00:28:15,290 --> 00:28:20,690
that particular repository they shipped

00:28:18,140 --> 00:28:24,170
the sources for that particular

00:28:20,690 --> 00:28:25,640
repository to get the CentOS org we

00:28:24,170 --> 00:28:28,400
actually needed all of those packages to

00:28:25,640 --> 00:28:30,920
build CentOS 8 but we're not taking the

00:28:28,400 --> 00:28:32,360
build route only packages and turning

00:28:30,920 --> 00:28:34,850
that into a repo somewhere that you can

00:28:32,360 --> 00:28:37,030
enable because really they're only

00:28:34,850 --> 00:28:39,740
useful to build the distribution itself

00:28:37,030 --> 00:28:41,510
or they're only used to build the

00:28:39,740 --> 00:28:43,340
distribution itself I'm not going to

00:28:41,510 --> 00:28:48,070
comment on the usefulness or whatever

00:28:43,340 --> 00:28:48,070
but but yeah

00:29:42,610 --> 00:29:50,630
yes so it's a it's another thing where

00:29:46,010 --> 00:29:52,370
we don't for some of the same reasons

00:29:50,630 --> 00:29:54,920
that Red Hat doesn't want to support

00:29:52,370 --> 00:29:56,960
that as a you know something that they

00:29:54,920 --> 00:30:01,700
ship to customers it's something that we

00:29:56,960 --> 00:30:05,060
don't necessarily want to like we don't

00:30:01,700 --> 00:30:06,950
want to promote that as a thing that we

00:30:05,060 --> 00:30:10,370
sanction is a project just because of

00:30:06,950 --> 00:30:12,470
the you know the limited guarantees

00:30:10,370 --> 00:30:23,150
about security fixes and and things like

00:30:12,470 --> 00:30:27,200
that so yeah it it's it sucks like it

00:30:23,150 --> 00:30:29,930
it's you know on my laptop and and doing

00:30:27,200 --> 00:30:32,570
stuff it really does suck as a as an

00:30:29,930 --> 00:30:35,750
experience but but from a project

00:30:32,570 --> 00:30:39,580
perspective like we don't want to ship

00:30:35,750 --> 00:30:44,930
things to our users that you know has

00:30:39,580 --> 00:30:50,860
ambiguous support or ambiguous lifecycle

00:30:44,930 --> 00:30:50,860
stuff so that's the reason behind that

00:30:52,570 --> 00:31:03,160
anything else all right thanks guys

00:31:00,000 --> 00:31:03,160

YouTube URL: https://www.youtube.com/watch?v=_iBcgZOL0to


