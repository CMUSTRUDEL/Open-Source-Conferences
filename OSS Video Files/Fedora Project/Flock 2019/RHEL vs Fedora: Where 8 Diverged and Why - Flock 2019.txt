Title: RHEL vs Fedora: Where 8 Diverged and Why - Flock 2019
Publication date: 2019-09-02
Playlist: Flock 2019
Description: 
	Aleksandra Fedorova, Denise Dumas, Brendan Conoboy, Paul Frields

In May of 2019 Red Hat released Red Hat Enterprise Linux 8, based on Fedora 28 and other upstreams.  From package set to composition to defaults to update plans, RHEL 8 looks both more and less like Fedora than ever before.  Join in to learn about the intentional differences, the thinking that went into them, and how they might be desirable for Fedora to adopt as well.

--
Recordings of talks at Flock are a community effort.  Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:01,610 --> 00:00:08,510
all right let's let's go ahead and get

00:00:03,889 --> 00:00:11,120
started so the the topic for the next 50

00:00:08,510 --> 00:00:14,809
minutes is relvar so spot or well we're

00:00:11,120 --> 00:00:18,170
really diverged and why so as Denise

00:00:14,809 --> 00:00:22,789
mentioned previously rel is to drive

00:00:18,170 --> 00:00:25,430
from fedora primarily and that that

00:00:22,789 --> 00:00:27,800
generally means that we do things in

00:00:25,430 --> 00:00:31,820
fedora first and then we inherit them in

00:00:27,800 --> 00:00:34,610
rel and in some cases we end up doing

00:00:31,820 --> 00:00:36,680
things in rel and then we try to sort

00:00:34,610 --> 00:00:38,150
out what to do in fedora after so this

00:00:36,680 --> 00:00:43,970
is that latter case that we're talking

00:00:38,150 --> 00:00:45,650
about so first of all this is a panel so

00:00:43,970 --> 00:00:48,590
I would like to introduce our panelists

00:00:45,650 --> 00:00:56,780
we have Deniz students who presented

00:00:48,590 --> 00:00:59,890
just moments ago hull fields rock star

00:00:56,780 --> 00:01:03,980
former crops Fedora project lead and

00:00:59,890 --> 00:01:09,950
also mr. rel seven and Alexandra

00:01:03,980 --> 00:01:13,190
Fedorovna part of pesco and CI hacker

00:01:09,950 --> 00:01:16,760
extraordinaire and I'm the new Palfrey

00:01:13,190 --> 00:01:19,700
old sporulate and really do anything is

00:01:16,760 --> 00:01:23,600
definitely not a stale distribution Neal

00:01:19,700 --> 00:01:25,330
so let's let's talk about what we're

00:01:23,600 --> 00:01:29,060
talking about today so there's basically

00:01:25,330 --> 00:01:30,530
four things we're gonna cover background

00:01:29,060 --> 00:01:33,350
for anybody who hasn't been through a

00:01:30,530 --> 00:01:35,480
new rail release before the things that

00:01:33,350 --> 00:01:37,550
we actually changed inside when we were

00:01:35,480 --> 00:01:39,770
making the new rail release how we're

00:01:37,550 --> 00:01:41,840
doing updates like kind of the how we

00:01:39,770 --> 00:01:43,340
keep it stable and then what the

00:01:41,840 --> 00:01:44,780
opportunities are for reconciling those

00:01:43,340 --> 00:01:48,500
last two things with what happens in

00:01:44,780 --> 00:01:53,000
Fedora so let's talk about like the rail

00:01:48,500 --> 00:01:54,830
aid origin story first of all row alpha

00:01:53,000 --> 00:01:57,200
was derived from Fedora 27 it's kind of

00:01:54,830 --> 00:01:58,310
like the first pancake it tastes pretty

00:01:57,200 --> 00:02:01,909
good but it's also sort of funny-looking

00:01:58,310 --> 00:02:03,950
and generally you just throw that one

00:02:01,909 --> 00:02:06,049
away and that's what we did so really

00:02:03,950 --> 00:02:08,000
really is fundamentally derived from

00:02:06,049 --> 00:02:13,310
Fedora 28 that's where the really beta

00:02:08,000 --> 00:02:14,280
came from it it's delicious and 8ga will

00:02:13,310 --> 00:02:16,350
become

00:02:14,280 --> 00:02:18,840
we'll move to 8 1 beta a when beta will

00:02:16,350 --> 00:02:21,510
become a 1g8 1g8 will become 8 2 beta

00:02:18,840 --> 00:02:23,370
and basically that's just the case of us

00:02:21,510 --> 00:02:25,860
taking upstream patches applying them to

00:02:23,370 --> 00:02:28,880
the sources we already have and voicing

00:02:25,860 --> 00:02:31,380
it so we get a nice stack that way and

00:02:28,880 --> 00:02:33,870
it it has the unfortunate side-effect

00:02:31,380 --> 00:02:35,580
though that when we do this we actually

00:02:33,870 --> 00:02:38,610
stop inheriting from fedora most of the

00:02:35,580 --> 00:02:40,530
time so before really came out a couple

00:02:38,610 --> 00:02:44,130
months ago we hadn't really done a mass

00:02:40,530 --> 00:02:46,680
import from fedora since 2014 so it had

00:02:44,130 --> 00:02:49,550
been a while and we we've actually taken

00:02:46,680 --> 00:02:51,870
some measures inside a to make it

00:02:49,550 --> 00:02:53,940
conceivably possible that we could like

00:02:51,870 --> 00:02:56,940
interact more often and that's what

00:02:53,940 --> 00:03:00,510
we're really looking for so a few other

00:02:56,940 --> 00:03:02,160
things real previously the schedule for

00:03:00,510 --> 00:03:03,270
it was pretty sporadic we didn't know

00:03:02,160 --> 00:03:05,330
when the next release is going to be

00:03:03,270 --> 00:03:08,100
until the previous one was done and

00:03:05,330 --> 00:03:09,660
we've actually moved we were converging

00:03:08,100 --> 00:03:11,040
with Fedor on the six-month schedule

00:03:09,660 --> 00:03:13,910
this is like a brand new thing for us

00:03:11,040 --> 00:03:16,140
we're still learning how to do that

00:03:13,910 --> 00:03:18,030
basically Fedora has a head start on us

00:03:16,140 --> 00:03:19,320
on this one and we've also decided that

00:03:18,030 --> 00:03:21,390
we're and announced that we're going to

00:03:19,320 --> 00:03:24,600
try to do a new major release every

00:03:21,390 --> 00:03:27,390
three years so rl9 is about two years

00:03:24,600 --> 00:03:29,130
and ten months away now so it's

00:03:27,390 --> 00:03:31,410
surprisingly not a lot of time left for

00:03:29,130 --> 00:03:35,670
us to like figure out what we want to do

00:03:31,410 --> 00:03:38,370
next together and get it done so let's

00:03:35,670 --> 00:03:40,769
talk about where where we actually

00:03:38,370 --> 00:03:43,500
started diverging from from fedora and

00:03:40,769 --> 00:03:45,120
there's just a few a few fundamentals

00:03:43,500 --> 00:03:47,700
that are different and it has

00:03:45,120 --> 00:03:49,470
consequences the first one is that the

00:03:47,700 --> 00:03:50,760
Fedora infrastructure is completely

00:03:49,470 --> 00:03:54,660
separate from the rail infrastructure

00:03:50,760 --> 00:03:57,269
different Kouji builders different Kouji

00:03:54,660 --> 00:03:59,130
build system different storage different

00:03:57,269 --> 00:04:00,959
test equipment different disk it all

00:03:59,130 --> 00:04:02,190
those things are completely separate and

00:04:00,959 --> 00:04:05,489
what that means is when we're doing that

00:04:02,190 --> 00:04:07,950
bootstrap every single time we end up

00:04:05,489 --> 00:04:10,110
having to rebuild the world with

00:04:07,950 --> 00:04:12,840
whatever changes we do and it's it's

00:04:10,110 --> 00:04:14,730
kind of like a laborious activity for us

00:04:12,840 --> 00:04:15,570
and it has very little value other than

00:04:14,730 --> 00:04:18,660
that we have this separate

00:04:15,570 --> 00:04:19,799
infrastructure so where the divergence

00:04:18,660 --> 00:04:22,470
really begins though is in package

00:04:19,799 --> 00:04:24,570
selection Fedora is huge it has an

00:04:22,470 --> 00:04:25,950
enormous number of packages Braille has

00:04:24,570 --> 00:04:27,170
a very small number of packages by

00:04:25,950 --> 00:04:28,490
comparison

00:04:27,170 --> 00:04:30,530
there are a few things where rel is

00:04:28,490 --> 00:04:33,110
actually not a subset if it were like

00:04:30,530 --> 00:04:35,450
the kernel we take the spec file then we

00:04:33,110 --> 00:04:37,100
just pull from kernel.org because that's

00:04:35,450 --> 00:04:40,070
where most of our developers actually

00:04:37,100 --> 00:04:42,920
are living on the kernel side and then

00:04:40,070 --> 00:04:44,960
there's a few partner packages for for

00:04:42,920 --> 00:04:46,970
enabling weird hardware that are still

00:04:44,960 --> 00:04:49,820
open source but overall a lot of it is

00:04:46,970 --> 00:04:51,650
pretty common and this is kind of

00:04:49,820 --> 00:04:55,490
corporate looking all right then pancake

00:04:51,650 --> 00:04:58,820
so Fedora exclusive content it's pretty

00:04:55,490 --> 00:05:02,450
big Apple comes from this you love Apple

00:04:58,820 --> 00:05:05,030
and just over all there when we take a

00:05:02,450 --> 00:05:06,620
subset of the fedora content we also

00:05:05,030 --> 00:05:08,780
have to change the dependency tree

00:05:06,620 --> 00:05:11,780
because everything can depend on

00:05:08,780 --> 00:05:12,920
everything and when we when we bootstrap

00:05:11,780 --> 00:05:14,510
we actually have to solve all those

00:05:12,920 --> 00:05:16,310
build failures and we end up usually

00:05:14,510 --> 00:05:18,470
doing that internally first and then

00:05:16,310 --> 00:05:20,360
pushing them back out later hopefully

00:05:18,470 --> 00:05:23,840
the fact that we have a public schedule

00:05:20,360 --> 00:05:25,550
now and and greater reader ability to

00:05:23,840 --> 00:05:27,590
even admit that we're gonna do a rel 9

00:05:25,550 --> 00:05:30,460
it's totally gonna happen means that we

00:05:27,590 --> 00:05:34,250
can do things like put 9 diss tag

00:05:30,460 --> 00:05:37,520
comparison things in spec files so the

00:05:34,250 --> 00:05:39,560
other big change was when we did rel 7

00:05:37,520 --> 00:05:41,210
and earlier we had they composed for

00:05:39,560 --> 00:05:42,860
server for workstation and sounds kind

00:05:41,210 --> 00:05:44,930
of familiar we've actually done away

00:05:42,860 --> 00:05:46,340
with that we decided you know it's

00:05:44,930 --> 00:05:49,760
better to just have kind of the

00:05:46,340 --> 00:05:52,070
everything composed but we have two

00:05:49,760 --> 00:05:55,430
composes in the the foundation for that

00:05:52,070 --> 00:05:57,920
is we wanted to separate the operating

00:05:55,430 --> 00:06:01,040
system from the applications because

00:05:57,920 --> 00:06:02,570
nobody actually boots rel or Fedora or

00:06:01,040 --> 00:06:06,230
anything just so they can boot it it's

00:06:02,570 --> 00:06:08,150
not it boots ship it it's it boots I

00:06:06,230 --> 00:06:11,960
want to run my application I can remain

00:06:08,150 --> 00:06:15,020
that's my purpose so by having separate

00:06:11,960 --> 00:06:19,060
OS and application compose it gives us

00:06:15,020 --> 00:06:21,830
the ability in theory the ability to

00:06:19,060 --> 00:06:23,510
update the operating system independent

00:06:21,830 --> 00:06:27,710
of the applications and so this is kind

00:06:23,510 --> 00:06:29,750
of the the the early Framus is what's

00:06:27,710 --> 00:06:32,120
that set things up so that we can get

00:06:29,750 --> 00:06:34,970
out of just the everything depends on

00:06:32,120 --> 00:06:37,190
everything a position we're in which

00:06:34,970 --> 00:06:41,090
sounds that suspiciously like there were

00:06:37,190 --> 00:06:43,400
rings right like we

00:06:41,090 --> 00:06:45,590
we kind of did rings but it's not I

00:06:43,400 --> 00:06:49,370
wouldn't say it's done yet it's a good

00:06:45,590 --> 00:06:51,620
starting point so be for the story a

00:06:49,370 --> 00:06:53,000
little bit deeper on this one the rule

00:06:51,620 --> 00:06:55,970
that we ended up with to make this

00:06:53,000 --> 00:06:59,300
practical was that base OS cannot depend

00:06:55,970 --> 00:07:02,090
on apps tree and content except at Build

00:06:59,300 --> 00:07:04,100
time app stream can depend on at Build

00:07:02,090 --> 00:07:06,710
time and run time on base OS content so

00:07:04,100 --> 00:07:08,870
this is the way we found a tractable way

00:07:06,710 --> 00:07:10,970
to split things up but it's not perfect

00:07:08,870 --> 00:07:13,640
things like Perl are still in base OS so

00:07:10,970 --> 00:07:15,440
we want to keep working on that but this

00:07:13,640 --> 00:07:16,130
is this is the basic idea and it's not a

00:07:15,440 --> 00:07:17,840
new idea

00:07:16,130 --> 00:07:21,080
it's just one that we got to work on a

00:07:17,840 --> 00:07:24,560
little bit more than it had been done

00:07:21,080 --> 00:07:31,190
before the other place is that in some

00:07:24,560 --> 00:07:34,370
cases as I mentioned Fedora 28 was the

00:07:31,190 --> 00:07:36,920
basis of rl8 well but we're 19 was the

00:07:34,370 --> 00:07:39,650
basis of rel 7 so can you imagine like

00:07:36,920 --> 00:07:41,540
runnin Fedora 19 you do a yum update in

00:07:39,650 --> 00:07:43,220
the ER for our 28 it would not go well

00:07:41,540 --> 00:07:45,050
but that's kind of what our customers

00:07:43,220 --> 00:07:47,230
are we're going to experience if we

00:07:45,050 --> 00:07:50,120
didn't do a few things to address

00:07:47,230 --> 00:07:51,260
incompatible changes so inside Fedora

00:07:50,120 --> 00:07:55,070
there's the most excellent change

00:07:51,260 --> 00:07:57,740
process and going from eight nineteen to

00:07:55,070 --> 00:08:01,100
twenty to twenty one little gradual

00:07:57,740 --> 00:08:04,130
change is pretty reasonable it works

00:08:01,100 --> 00:08:05,300
well it seems modest but if you are not

00:08:04,130 --> 00:08:07,280
on that update train if you're just

00:08:05,300 --> 00:08:09,560
going from six to seven to eight these

00:08:07,280 --> 00:08:12,080
are giant jumps and so we had to make a

00:08:09,560 --> 00:08:14,600
few changes a few reverts if you will

00:08:12,080 --> 00:08:19,370
and I just want to cover three of them

00:08:14,600 --> 00:08:22,760
really quickly first one is DN f so DN f

00:08:19,370 --> 00:08:24,920
is really cool technology the the soft

00:08:22,760 --> 00:08:26,690
dependencies weak dependencies glowing

00:08:24,920 --> 00:08:29,000
dependencies are outstanding it opens up

00:08:26,690 --> 00:08:31,580
all kinds over opportunities of the

00:08:29,000 --> 00:08:34,340
ability to do modules and have parallel

00:08:31,580 --> 00:08:35,720
availability is outstanding we still had

00:08:34,340 --> 00:08:38,120
to call the package young because that

00:08:35,720 --> 00:08:40,300
is it was fundamental to customer

00:08:38,120 --> 00:08:42,740
experience to just be able to say

00:08:40,300 --> 00:08:44,930
install a package called yum run the

00:08:42,740 --> 00:08:47,720
command name young and have that young

00:08:44,930 --> 00:08:50,990
behave like young 3 which was rel sevens

00:08:47,720 --> 00:08:52,310
young there were other just minor things

00:08:50,990 --> 00:08:54,720
that happened in rel 7 that we had to

00:08:52,310 --> 00:08:56,250
revert like no default syslog

00:08:54,720 --> 00:08:59,160
made a lot of sense for fedora didn't

00:08:56,250 --> 00:09:01,740
make sense for us because of existing

00:08:59,160 --> 00:09:03,329
customer expectation and then finally we

00:09:01,740 --> 00:09:07,199
ended this thing called platform Python

00:09:03,329 --> 00:09:09,060
so Python 2 is going to go away someday

00:09:07,199 --> 00:09:13,709
we've known this for a while

00:09:09,060 --> 00:09:16,829
Python 3 is is pretty standard now 3 or

00:09:13,709 --> 00:09:18,509
4 years ago it wasn't and the challenge

00:09:16,829 --> 00:09:22,740
we had was we need to get everybody over

00:09:18,509 --> 00:09:25,769
to Python 3 but which Python 3 like

00:09:22,740 --> 00:09:27,300
Python 2 is like there's only one

00:09:25,769 --> 00:09:28,310
version of Python 2 anybody cares about

00:09:27,300 --> 00:09:30,689
it's the last one

00:09:28,310 --> 00:09:33,509
it's on 3 there's a new version coming

00:09:30,689 --> 00:09:35,670
out on a very regular basis so we added

00:09:33,509 --> 00:09:38,850
a thing called platform Python that is

00:09:35,670 --> 00:09:40,949
the one that is used per la that all of

00:09:38,850 --> 00:09:42,720
our applications use that is not use Erb

00:09:40,949 --> 00:09:45,029
in Python it's not use Erb in Python 3

00:09:42,720 --> 00:09:50,399
it doesn't exist anywhere but like user

00:09:45,029 --> 00:09:52,110
a live exec and by doing this we are the

00:09:50,399 --> 00:09:55,920
people that want to build exactly

00:09:52,110 --> 00:09:58,649
forelli ie rel developers to use the

00:09:55,920 --> 00:09:59,850
platform Python and customers who wanted

00:09:58,649 --> 00:10:02,790
to use Python for their actual

00:09:59,850 --> 00:10:06,329
application to install the version of

00:10:02,790 --> 00:10:09,629
Python that worked for them so user bin

00:10:06,329 --> 00:10:11,069
Python could be anything in really we

00:10:09,629 --> 00:10:12,839
don't know that's up to customers to use

00:10:11,069 --> 00:10:14,250
and that's that's the kind of direction

00:10:12,839 --> 00:10:16,050
we want to go is giving customers the

00:10:14,250 --> 00:10:17,970
option to use the thing they want to use

00:10:16,050 --> 00:10:19,470
and not force them to use a thing that

00:10:17,970 --> 00:10:25,230
we chose to use for our own internal

00:10:19,470 --> 00:10:32,939
pragmatic reasons so with that I want to

00:10:25,230 --> 00:10:36,000
hand it over to Sandra ok so first of

00:10:32,939 --> 00:10:38,160
all I would say testing updates and

00:10:36,000 --> 00:10:40,829
stability of a base is not a new concept

00:10:38,160 --> 00:10:43,139
we introduced in really it is kind of

00:10:40,829 --> 00:10:46,379
was we are from a very start and this is

00:10:43,139 --> 00:10:51,059
what redhead does actually but what's

00:10:46,379 --> 00:10:54,000
interesting in RL 8 is that given by the

00:10:51,059 --> 00:10:56,160
new a plan for a shorter release cycle

00:10:54,000 --> 00:10:58,949
and for regular release cycle we

00:10:56,160 --> 00:11:01,500
introduced the new concept which is CI

00:10:58,949 --> 00:11:04,679
and gating and I hope you heard about

00:11:01,500 --> 00:11:07,740
see I'm gating before and in fedora as

00:11:04,679 --> 00:11:08,370
well so basically what we were charging

00:11:07,740 --> 00:11:11,189
for

00:11:08,370 --> 00:11:15,509
is to bring the testing which redhead

00:11:11,189 --> 00:11:19,189
does bring it into earlier stages and

00:11:15,509 --> 00:11:21,990
like do it more often so if you prod the

00:11:19,189 --> 00:11:24,480
release early release often mantra when

00:11:21,990 --> 00:11:28,050
like here's our variant for this is

00:11:24,480 --> 00:11:32,129
that's early and test often as well so

00:11:28,050 --> 00:11:36,540
this goes together with the effort of

00:11:32,129 --> 00:11:40,290
upstream first for the tests in as well

00:11:36,540 --> 00:11:42,689
so we here in fedora know about upstream

00:11:40,290 --> 00:11:45,689
first it's the concept which we use we

00:11:42,689 --> 00:11:48,569
know the benefits but the fact is that

00:11:45,689 --> 00:11:50,029
it also works for Tesco today the same

00:11:48,569 --> 00:11:53,970
way it works for your regular

00:11:50,029 --> 00:11:56,670
applications the possibility to bring

00:11:53,970 --> 00:11:59,370
called Tesco to upstream gives you the

00:11:56,670 --> 00:12:01,740
opportunity to for betterment

00:11:59,370 --> 00:12:04,430
maintenance for easier maintenance and

00:12:01,740 --> 00:12:07,439
for these test early test often

00:12:04,430 --> 00:12:10,379
possibility so this with one of the

00:12:07,439 --> 00:12:14,610
effort which was introduced in rl8 cycle

00:12:10,379 --> 00:12:17,579
where qui teams of RL distribution or

00:12:14,610 --> 00:12:21,300
bringing tests to fedora into upstream

00:12:17,579 --> 00:12:23,249
and this was just the beginning of it

00:12:21,300 --> 00:12:28,769
but we are looking forward to continuing

00:12:23,249 --> 00:12:30,720
that path and also Alexi I in gating

00:12:28,769 --> 00:12:34,230
essentially is all about fast feedback

00:12:30,720 --> 00:12:37,079
so we are trying to provide feedback to

00:12:34,230 --> 00:12:40,529
those people who can act on it so you

00:12:37,079 --> 00:12:44,790
learn about the result of your change we

00:12:40,529 --> 00:12:46,860
feedback of your change when you do with

00:12:44,790 --> 00:12:48,600
change and not like several months later

00:12:46,860 --> 00:12:50,939
when someone else tries to figure out

00:12:48,600 --> 00:12:53,370
whose change caused the regression and

00:12:50,939 --> 00:12:55,860
we also provide feedback while there is

00:12:53,370 --> 00:12:59,759
still time to act on it so we earlier

00:12:55,860 --> 00:13:02,189
the better and to implement this we

00:12:59,759 --> 00:13:06,179
introduced a gating rel8

00:13:02,189 --> 00:13:09,449
development process while we talk a lot

00:13:06,179 --> 00:13:11,939
about gating and we will be talking

00:13:09,449 --> 00:13:14,399
about getting for fedora people always

00:13:11,939 --> 00:13:17,639
like associate gating with a picture of

00:13:14,399 --> 00:13:19,670
closed doors in front of them I would

00:13:17,639 --> 00:13:22,819
like to give you a diff

00:13:19,670 --> 00:13:25,519
mental picture of the gate so please

00:13:22,819 --> 00:13:28,100
don't consider it as a closed door in

00:13:25,519 --> 00:13:31,610
front of you consider it more likely

00:13:28,100 --> 00:13:34,490
airport gate is the place where you kind

00:13:31,610 --> 00:13:38,180
of regroup and review the changes or

00:13:34,490 --> 00:13:41,240
review what you're going to do here and

00:13:38,180 --> 00:13:43,249
this this gives you the opportunity like

00:13:41,240 --> 00:13:46,370
if you forget your luggage or if you

00:13:43,249 --> 00:13:49,180
forget to present for someone you can go

00:13:46,370 --> 00:13:52,790
to duty-free shop and get something this

00:13:49,180 --> 00:13:55,339
like and imagine like if you check your

00:13:52,790 --> 00:13:56,839
boarding pass only after you go to your

00:13:55,339 --> 00:13:59,300
destination place yeah you probably

00:13:56,839 --> 00:14:01,720
don't want that that's why we need gate

00:13:59,300 --> 00:14:05,720
and this is the kind of gate we built in

00:14:01,720 --> 00:14:08,029
red RL and you probably heard that we

00:14:05,720 --> 00:14:16,610
are going to try to build something for

00:14:08,029 --> 00:14:19,160
fedora as well I like the idea that cake

00:14:16,610 --> 00:14:25,970
because duty-free beans liquor so that's

00:14:19,160 --> 00:14:27,980
that's great thing okay so I was a very

00:14:25,970 --> 00:14:30,439
brief primer on the things that were

00:14:27,980 --> 00:14:32,180
that we changed and we'd had a few ideas

00:14:30,439 --> 00:14:35,600
for things that we like to kind of come

00:14:32,180 --> 00:14:38,779
back into the community and and worked

00:14:35,600 --> 00:14:42,139
together on but this is like a starting

00:14:38,779 --> 00:14:43,699
point not the things that we will do so

00:14:42,139 --> 00:14:45,500
we're looking for some audience

00:14:43,699 --> 00:14:46,699
participation here especially if we

00:14:45,500 --> 00:14:48,680
don't cover something you think this

00:14:46,699 --> 00:14:51,980
would be a good idea please like raise

00:14:48,680 --> 00:14:54,649
your hand and add in so just got four

00:14:51,980 --> 00:14:56,689
things basically and the first one is

00:14:54,649 --> 00:14:58,160
we're doing real nine development we'd

00:14:56,689 --> 00:15:00,139
like to be able to do more of that in

00:14:58,160 --> 00:15:01,250
the public space if you're a redhead or

00:15:00,139 --> 00:15:03,199
you know that there are things like

00:15:01,250 --> 00:15:07,309
don't even put yellow eat and your

00:15:03,199 --> 00:15:09,350
dystek like in your spec file like

00:15:07,309 --> 00:15:12,139
that's silly we know there's gonna be a

00:15:09,350 --> 00:15:15,649
nine and yeah that's fine to do but

00:15:12,139 --> 00:15:18,439
wouldn't it be cool yeah I wanted to

00:15:15,649 --> 00:15:20,209
talk to this one in specific so I don't

00:15:18,439 --> 00:15:22,189
know if Matthews in here is he in here

00:15:20,209 --> 00:15:24,679
he's not okay he has many things to do

00:15:22,189 --> 00:15:27,079
in which I very much sympathize with as

00:15:24,679 --> 00:15:28,970
a former Fedora project leader and so

00:15:27,079 --> 00:15:31,399
this is a topic that I feel very

00:15:28,970 --> 00:15:32,430
strongly about it is probably one of the

00:15:31,399 --> 00:15:34,410
most uncomfortable

00:15:32,430 --> 00:15:36,690
whole things about being the Fedora

00:15:34,410 --> 00:15:38,279
project leader is having a lot of

00:15:36,690 --> 00:15:41,190
knowledge about what's going on

00:15:38,279 --> 00:15:43,500
internally at Red Hat with our product

00:15:41,190 --> 00:15:46,110
development and not being able to share

00:15:43,500 --> 00:15:48,000
that with the community it's a very

00:15:46,110 --> 00:15:50,580
painful place to be because you want to

00:15:48,000 --> 00:15:52,680
be open and transparent with everybody

00:15:50,580 --> 00:15:55,020
about what's going on and yet there's

00:15:52,680 --> 00:15:57,209
this huge block of knowledge that you

00:15:55,020 --> 00:16:00,330
can't share which would make people's

00:15:57,209 --> 00:16:02,880
jobs and their and their their

00:16:00,330 --> 00:16:04,890
contribution so much easier it's so much

00:16:02,880 --> 00:16:07,020
easier to get people to work together if

00:16:04,890 --> 00:16:09,720
they know where they're going and when

00:16:07,020 --> 00:16:11,310
they need to get there right it's a lot

00:16:09,720 --> 00:16:14,070
harder to do that when you don't have

00:16:11,310 --> 00:16:16,080
those imperatives to share and so you

00:16:14,070 --> 00:16:17,700
know once again that we kind of breezed

00:16:16,080 --> 00:16:20,190
by this a little bit earlier and I

00:16:17,700 --> 00:16:22,620
wanted to call really strong attention

00:16:20,190 --> 00:16:24,330
to it just once more real quick if I

00:16:22,620 --> 00:16:26,790
could how many people in here do not

00:16:24,330 --> 00:16:28,620
work for Red Hat this is a as a helpful

00:16:26,790 --> 00:16:30,390
thing to know great it's it's yet again

00:16:28,620 --> 00:16:32,029
it's like it's maybe not quite half in

00:16:30,390 --> 00:16:34,350
half but it's still quite a few of you I

00:16:32,029 --> 00:16:36,390
would really like to call and everybody

00:16:34,350 --> 00:16:38,720
here whether you're employed by Red Hat

00:16:36,390 --> 00:16:41,790
or not and you you care about fedora

00:16:38,720 --> 00:16:46,950
just try to keep this in mind so we just

00:16:41,790 --> 00:16:49,709
released rel rel 8 in May right and so

00:16:46,950 --> 00:16:51,570
the public commitment by Red Hat is that

00:16:49,709 --> 00:16:53,910
we are going to try and turnout rl9 in

00:16:51,570 --> 00:16:55,890
three years now we don't have a hard

00:16:53,910 --> 00:16:57,720
date for that yet there's you know

00:16:55,890 --> 00:16:59,400
there's no published calendar but the

00:16:57,720 --> 00:17:01,770
commitment is three years so let's just

00:16:59,400 --> 00:17:05,040
think ahead and say well by spring or

00:17:01,770 --> 00:17:09,030
summer of 2022 you would expect to see

00:17:05,040 --> 00:17:10,500
well nine premiere and so I would like

00:17:09,030 --> 00:17:13,110
everybody to just be thinking about that

00:17:10,500 --> 00:17:15,150
as we have conversations in public you

00:17:13,110 --> 00:17:18,150
know on Fedora devel list you're gonna

00:17:15,150 --> 00:17:19,890
hear people talk about rel nine and I

00:17:18,150 --> 00:17:22,290
would hope that that's you know this we

00:17:19,890 --> 00:17:25,110
can kind of share this knowledge around

00:17:22,290 --> 00:17:26,760
with our fellow contributors if I were

00:17:25,110 --> 00:17:29,160
Matthew this is one of the things that

00:17:26,760 --> 00:17:31,830
would make me most happy about the

00:17:29,160 --> 00:17:34,320
coming few years because I don't have to

00:17:31,830 --> 00:17:37,620
keep a secret about whether or not there

00:17:34,320 --> 00:17:40,290
is an L 9 or rel 9 that we start

00:17:37,620 --> 00:17:43,800
thinking about how the things that we're

00:17:40,290 --> 00:17:45,240
committing into Fedora effect well 9 the

00:17:43,800 --> 00:17:45,960
fact that we can have those those

00:17:45,240 --> 00:17:49,190
conversation

00:17:45,960 --> 00:17:52,200
in public is a huge huge step forward

00:17:49,190 --> 00:17:54,059
and I'm kind of jealous of Matthew right

00:17:52,200 --> 00:17:55,590
now because I never had this and I hope

00:17:54,059 --> 00:17:57,809
that doesn't really come through too

00:17:55,590 --> 00:17:59,880
badly but yeah I just I just want to cry

00:17:57,809 --> 00:18:01,500
a little tear of happiness it really

00:17:59,880 --> 00:18:02,820
makes me happy but but again you know

00:18:01,500 --> 00:18:04,740
just keep these things in mind as we're

00:18:02,820 --> 00:18:06,690
having those conversations on the devel

00:18:04,740 --> 00:18:08,520
list you know that that some folks

00:18:06,690 --> 00:18:10,200
obviously are gonna be driven by their

00:18:08,520 --> 00:18:12,809
the fact that they're thinking about

00:18:10,200 --> 00:18:14,520
what does this mean to rl9 well if well

00:18:12,809 --> 00:18:16,529
nine comes out in the spring or summer

00:18:14,520 --> 00:18:18,929
of 2022 that means that at some point

00:18:16,529 --> 00:18:20,820
prior to that you know we've got to do

00:18:18,929 --> 00:18:22,620
freezes there's got to be testing that's

00:18:20,820 --> 00:18:24,779
happening inside RedHat some of those

00:18:22,620 --> 00:18:26,460
things are going to be a lot of those

00:18:24,779 --> 00:18:28,649
things we're trying to push out into

00:18:26,460 --> 00:18:30,299
upstream first like Alexandra is talking

00:18:28,649 --> 00:18:31,380
about there are always going to be a few

00:18:30,299 --> 00:18:32,520
things that are gonna be redhead

00:18:31,380 --> 00:18:34,230
value-adds they're gonna happen

00:18:32,520 --> 00:18:36,360
internally of course I think everybody

00:18:34,230 --> 00:18:38,760
would expect that but we're trying to

00:18:36,360 --> 00:18:41,130
you know kind of constrain what those

00:18:38,760 --> 00:18:43,380
things look like right and the fact that

00:18:41,130 --> 00:18:45,360
there is you know some time ahead of

00:18:43,380 --> 00:18:48,720
that means that you know from right now

00:18:45,360 --> 00:18:51,750
we probably have I don't know maybe two

00:18:48,720 --> 00:18:54,149
years at most to get things into Fedora

00:18:51,750 --> 00:18:55,679
to make sure that they make it into rl9

00:18:54,149 --> 00:18:57,240
so hopefully people are thinking about

00:18:55,679 --> 00:18:59,190
that when you see somebody introduce a

00:18:57,240 --> 00:19:00,720
change you'll be thinking about the fact

00:18:59,190 --> 00:19:02,730
that they're you're they're trying to

00:19:00,720 --> 00:19:03,960
also do you know right by upstream

00:19:02,730 --> 00:19:06,149
they're also trying to do right by

00:19:03,960 --> 00:19:07,799
what's happening internally to respond

00:19:06,149 --> 00:19:10,200
to customer needs for rel because

00:19:07,799 --> 00:19:12,390
remember Fedora is the upstream for rel

00:19:10,200 --> 00:19:14,610
and we want that to to continue being

00:19:12,390 --> 00:19:18,230
the case for you know the time time to

00:19:14,610 --> 00:19:18,230
come so I think that's all I had to say

00:19:18,380 --> 00:19:22,770
I'm just really happy that we can be

00:19:20,880 --> 00:19:26,039
more open about it right because for a

00:19:22,770 --> 00:19:27,899
long time we weren't you go as you say

00:19:26,039 --> 00:19:29,460
we weren't able to even talk about what

00:19:27,899 --> 00:19:32,100
the schedule is gonna be for the next

00:19:29,460 --> 00:19:34,470
round and now it's good we're out there

00:19:32,100 --> 00:19:36,090
right and I we want to be more open we

00:19:34,470 --> 00:19:38,700
want to be more transparent I'm really

00:19:36,090 --> 00:19:40,559
excited to see more of the tests moving

00:19:38,700 --> 00:19:45,390
upstream I think that's huge cuz that

00:19:40,559 --> 00:19:49,409
benefits fedora and just rounding that

00:19:45,390 --> 00:19:50,850
out like we know about usually there's

00:19:49,409 --> 00:19:53,610
about six months between beta and

00:19:50,850 --> 00:19:56,669
general availability about six months

00:19:53,610 --> 00:19:57,539
between alpha and beta so if you if you

00:19:56,669 --> 00:19:59,020
just assume that we're new a

00:19:57,539 --> 00:20:00,580
cookie-cutter repeat of a

00:19:59,020 --> 00:20:02,260
you probably guess the right for the

00:20:00,580 --> 00:20:04,809
reversion but you know depending on how

00:20:02,260 --> 00:20:07,480
things go with with gating if like if

00:20:04,809 --> 00:20:10,570
rawhide is suddenly a very stable source

00:20:07,480 --> 00:20:14,770
of trees because we have most excellent

00:20:10,570 --> 00:20:17,050
gating maybe it's not really what Fedora

00:20:14,770 --> 00:20:19,420
really so we drive from it's like what

00:20:17,050 --> 00:20:21,070
day of rawhide we derive from we don't

00:20:19,420 --> 00:20:22,210
know we're gonna figure that out

00:20:21,070 --> 00:20:23,890
together

00:20:22,210 --> 00:20:25,840
one thing that a certain is that we like

00:20:23,890 --> 00:20:28,330
to do more of it in public more of it

00:20:25,840 --> 00:20:30,130
shared and if we could somehow construct

00:20:28,330 --> 00:20:32,410
a way that we don't have to like redo a

00:20:30,130 --> 00:20:34,900
bootstrap of alpha and throw it away a

00:20:32,410 --> 00:20:36,160
bootstrap of beta in private and

00:20:34,900 --> 00:20:38,590
actually just have all that happen

00:20:36,160 --> 00:20:43,330
upfront that would mean that you get

00:20:38,590 --> 00:20:45,490
earlier insight and we'd also have like

00:20:43,330 --> 00:20:47,290
Apple immediately because those packages

00:20:45,490 --> 00:20:48,850
would have already been built so there's

00:20:47,290 --> 00:20:51,809
a lot of cool potential there we want to

00:20:48,850 --> 00:20:56,440
explore it so that's the first one

00:20:51,809 --> 00:21:04,230
second one is let's let's do Venn

00:20:56,440 --> 00:21:04,230
diagram pancake rings 2.0 9000 so that

00:21:04,320 --> 00:21:13,030
when we I'm being well on this so when

00:21:11,410 --> 00:21:15,490
we split the operating system from the

00:21:13,030 --> 00:21:17,140
applications such as we have we were

00:21:15,490 --> 00:21:19,030
trying to address the to fast to slow

00:21:17,140 --> 00:21:20,860
problem if you talked about it yesterday

00:21:19,030 --> 00:21:23,620
we've been talking about it for years

00:21:20,860 --> 00:21:27,580
for our customer base usually what

00:21:23,620 --> 00:21:30,820
people want is a much slower smaller

00:21:27,580 --> 00:21:33,370
steadier operating system and then

00:21:30,820 --> 00:21:38,290
really rapid application deployment like

00:21:33,370 --> 00:21:42,130
from from upstream to do their DNF repo

00:21:38,290 --> 00:21:45,250
or container host as quickly as possible

00:21:42,130 --> 00:21:47,890
and that's what a lot of the development

00:21:45,250 --> 00:21:49,750
went into eight is about Lee modules are

00:21:47,890 --> 00:21:51,760
fun mentally about parallel availability

00:21:49,750 --> 00:21:53,710
giving people the option to choose this

00:21:51,760 --> 00:21:55,150
or that and it's a great thing to have

00:21:53,710 --> 00:21:59,830
for your applications to give customers

00:21:55,150 --> 00:22:02,710
the option and one of the parts of this

00:21:59,830 --> 00:22:04,120
was that we assumed that if we separated

00:22:02,710 --> 00:22:07,570
these two things that we would be able

00:22:04,120 --> 00:22:10,050
to draw from fedora more often for the

00:22:07,570 --> 00:22:11,980
application side because that is

00:22:10,050 --> 00:22:14,830
constantly refreshing it as a

00:22:11,980 --> 00:22:17,679
fantastic machine at that and if we can

00:22:14,830 --> 00:22:19,870
find better ways to distinguish these

00:22:17,679 --> 00:22:24,150
two buckets then we can find better ways

00:22:19,870 --> 00:22:26,470
to pull from fedora and deliver upstream

00:22:24,150 --> 00:22:29,070
cause things to go through fedora first

00:22:26,470 --> 00:22:31,090
and otherwise just kind of have greater

00:22:29,070 --> 00:22:33,640
hesitate to say synergy because it's one

00:22:31,090 --> 00:22:36,160
of those words but everybody gets some

00:22:33,640 --> 00:22:38,559
benefit from it so this is this is a

00:22:36,160 --> 00:22:41,309
thing we'd like to pursue further that's

00:22:38,559 --> 00:22:44,020
the meaning for us the meaning for were

00:22:41,309 --> 00:22:45,520
or for community could be different we

00:22:44,020 --> 00:22:47,140
need to figure that out together so that

00:22:45,520 --> 00:22:50,919
we get something that is mutually

00:22:47,140 --> 00:22:53,080
agreeable and then update policy and

00:22:50,919 --> 00:22:54,730
infrastructure and whatnot to match and

00:22:53,080 --> 00:22:57,070
we think probably the minimization

00:22:54,730 --> 00:22:59,200
objective is the place where all of this

00:22:57,070 --> 00:23:01,990
pans out because when you're switching

00:22:59,200 --> 00:23:05,980
your packages when you're doing a subset

00:23:01,990 --> 00:23:08,559
the foundation of it is just tendencies

00:23:05,980 --> 00:23:10,480
change and the interrelationship has to

00:23:08,559 --> 00:23:11,890
be codified in the spec files and we

00:23:10,480 --> 00:23:13,720
can't do that if we can't do it with you

00:23:11,890 --> 00:23:15,760
or we have to do it on the side and it's

00:23:13,720 --> 00:23:20,790
very inefficient so that's the second

00:23:15,760 --> 00:23:24,220
thing we're looking to do and guess what

00:23:20,790 --> 00:23:27,580
we're going to have more CI so I

00:23:24,220 --> 00:23:30,250
mentioned that in rural development we'd

00:23:27,580 --> 00:23:32,950
like to shorten the gap and create a

00:23:30,250 --> 00:23:35,110
fast feedback loop from making a change

00:23:32,950 --> 00:23:37,390
and testing that but while we're doing

00:23:35,110 --> 00:23:39,970
that in RAL like why stop at rel level

00:23:37,390 --> 00:23:43,480
why don't we close the gap between

00:23:39,970 --> 00:23:46,120
making a change in upstream and testing

00:23:43,480 --> 00:23:48,760
it and integrating it on a rail level so

00:23:46,120 --> 00:23:50,620
why don't we talk about fedora and why

00:23:48,760 --> 00:23:52,960
don't we talk about forever going

00:23:50,620 --> 00:23:56,260
upstream we actually want all those

00:23:52,960 --> 00:23:59,549
things so this is one of the places

00:23:56,260 --> 00:24:02,080
where we can improve and increase our

00:23:59,549 --> 00:24:04,900
collaboration not just between fedora

00:24:02,080 --> 00:24:09,250
and red head and rel but also between

00:24:04,900 --> 00:24:12,900
fedora and upstream projects so this way

00:24:09,250 --> 00:24:17,350
related work what the related objectives

00:24:12,900 --> 00:24:19,630
for this kind of thing is the fast lane

00:24:17,350 --> 00:24:21,130
for straightforward updates like what

00:24:19,630 --> 00:24:24,470
will it cost rate for it update if

00:24:21,130 --> 00:24:27,169
something if upstream project is

00:24:24,470 --> 00:24:29,409
like simple enough or introduced in

00:24:27,169 --> 00:24:32,960
change which is simple enough which goes

00:24:29,409 --> 00:24:36,710
you get it merged upstream you consume

00:24:32,960 --> 00:24:40,250
it in Fedora directly we've no changes

00:24:36,710 --> 00:24:42,890
and then you consume it in rel with more

00:24:40,250 --> 00:24:45,409
or less no changes and then for this

00:24:42,890 --> 00:24:49,070
kind of work flow where the update can

00:24:45,409 --> 00:24:51,260
be like just doesn't require a lot of

00:24:49,070 --> 00:24:53,510
work on integration site and just you

00:24:51,260 --> 00:24:57,020
need to consume the upstream we are

00:24:53,510 --> 00:24:59,210
going to work on setting up a fast lane

00:24:57,020 --> 00:25:02,630
for this updates this is going to be

00:24:59,210 --> 00:25:05,240
packet service I not sure if Thomas is

00:25:02,630 --> 00:25:09,770
here there will be talk about this today

00:25:05,240 --> 00:25:11,750
later on please see and this is a very

00:25:09,770 --> 00:25:15,260
interesting effort so we basically you

00:25:11,750 --> 00:25:19,039
go from top upstream to bottom in the

00:25:15,260 --> 00:25:21,230
downstream in one go by one service this

00:25:19,039 --> 00:25:24,049
is an awesome effort to participate in

00:25:21,230 --> 00:25:27,500
to simplify your daily work as a package

00:25:24,049 --> 00:25:29,690
maintainer and the second part is distro

00:25:27,500 --> 00:25:31,700
tests can go upstream now again we've

00:25:29,690 --> 00:25:33,710
the packet service with a possibility to

00:25:31,700 --> 00:25:35,840
package upstream changes immediately

00:25:33,710 --> 00:25:38,600
into the package which can be then

00:25:35,840 --> 00:25:40,580
installed on Fedora or on rel you can

00:25:38,600 --> 00:25:42,980
actually use this opportunity to test

00:25:40,580 --> 00:25:44,659
upstream changes in upstream but test

00:25:42,980 --> 00:25:47,330
them against Fedor environment

00:25:44,659 --> 00:25:50,299
so again you can use fedora package

00:25:47,330 --> 00:25:53,059
service to implement this kind of test

00:25:50,299 --> 00:25:55,309
in upstream changes so but you don't

00:25:53,059 --> 00:25:57,710
have to deal with upstream breaking your

00:25:55,309 --> 00:26:00,710
Fedora stuff but you inform upstream as

00:25:57,710 --> 00:26:02,210
we do the change that they're going to

00:26:00,710 --> 00:26:04,640
break Fedora staff and you have the

00:26:02,210 --> 00:26:10,280
opportunity to fix that before it lands

00:26:04,640 --> 00:26:13,370
in the upstream even and we like to also

00:26:10,280 --> 00:26:18,770
provide more possibilities for teamwork

00:26:13,370 --> 00:26:21,559
so oh well he usually historically the

00:26:18,770 --> 00:26:24,230
maintainer concept in distributions in

00:26:21,559 --> 00:26:27,500
rail and in Fedora is about person

00:26:24,230 --> 00:26:29,630
owning the component and our processes

00:26:27,500 --> 00:26:32,240
are focused on updating the components

00:26:29,630 --> 00:26:34,610
we want to extend this and we want to

00:26:32,240 --> 00:26:37,920
extend gating to handle multiple

00:26:34,610 --> 00:26:41,940
component updates as a unit of work

00:26:37,920 --> 00:26:44,280
so you can focus rather on feature you

00:26:41,940 --> 00:26:46,200
want to implement and then discover

00:26:44,280 --> 00:26:48,690
which components are involved in this

00:26:46,200 --> 00:26:50,370
feature and how many work you need to do

00:26:48,690 --> 00:26:52,440
on those components and then you can

00:26:50,370 --> 00:26:54,450
group with changes in several components

00:26:52,440 --> 00:26:57,600
into one update which you can test as

00:26:54,450 --> 00:27:00,270
one thing which you can implement as one

00:26:57,600 --> 00:27:02,760
thing so I hope this will increase the

00:27:00,270 --> 00:27:05,190
possibility for a maintainer to

00:27:02,760 --> 00:27:08,460
communicate and collaborate and work

00:27:05,190 --> 00:27:11,880
together focused on a larger scope not

00:27:08,460 --> 00:27:17,630
just the fog of a scope of one

00:27:11,880 --> 00:27:22,110
individual component and these maps into

00:27:17,630 --> 00:27:25,410
Fedora CI objectives if you have been

00:27:22,110 --> 00:27:27,630
following we currently are imput working

00:27:25,410 --> 00:27:30,210
on the multi package gate which will

00:27:27,630 --> 00:27:32,310
allow such things so you will be able to

00:27:30,210 --> 00:27:35,520
group your changes in several components

00:27:32,310 --> 00:27:38,060
into one unit of work from a gating

00:27:35,520 --> 00:27:38,060
point of view

00:27:42,900 --> 00:27:48,240
all right so we have about 20 minutes

00:27:45,750 --> 00:27:53,930
for questions and I hope you have some

00:27:48,240 --> 00:27:53,930
so any questions yes

00:28:11,530 --> 00:28:18,490
so the question was why didn't we use

00:28:13,780 --> 00:28:26,560
the young bindings that were offered in

00:28:18,490 --> 00:28:29,530
our 21 21 22 I think so this was this

00:28:26,560 --> 00:28:31,870
was a deep debate within the

00:28:29,530 --> 00:28:34,180
organization can we just like offer

00:28:31,870 --> 00:28:37,870
another package that that kind of

00:28:34,180 --> 00:28:39,670
wrapped some top and it actually came

00:28:37,870 --> 00:28:41,620
down to our customer support

00:28:39,670 --> 00:28:43,780
organization and our product management

00:28:41,620 --> 00:28:46,270
organization and saying that this is

00:28:43,780 --> 00:28:48,340
such a deep fundamental that the package

00:28:46,270 --> 00:28:50,080
name has to remain the same the same

00:28:48,340 --> 00:28:53,230
command-line arguments need to produce

00:28:50,080 --> 00:28:57,130
roughly the same result plus or minus

00:28:53,230 --> 00:28:58,960
what the resolver came up with so it was

00:28:57,130 --> 00:29:01,030
it was really about maintaining

00:28:58,960 --> 00:29:02,410
continuity of customer experience and

00:29:01,030 --> 00:29:05,410
you can't quite get that with a wrapper

00:29:02,410 --> 00:29:07,120
even though in some sense it seems like

00:29:05,410 --> 00:29:08,560
you can if you look at like the full

00:29:07,120 --> 00:29:12,910
into end picture it's not quite

00:29:08,560 --> 00:29:15,790
sufficient they were terribly but they

00:29:12,910 --> 00:29:19,090
were terribly concerned about customer

00:29:15,790 --> 00:29:21,610
scripts right because at least at one

00:29:19,090 --> 00:29:24,940
point in time we're trying more and more

00:29:21,610 --> 00:29:28,150
now to make rel easier to manage easier

00:29:24,940 --> 00:29:30,730
to to install easier to deploy easier to

00:29:28,150 --> 00:29:34,540
manage but many of our customers have

00:29:30,730 --> 00:29:38,770
antique infrastructure and scripts that

00:29:34,540 --> 00:29:43,000
they developed themselves and yet yeah

00:29:38,770 --> 00:29:46,000
legacy and no customer of rails runs

00:29:43,000 --> 00:29:49,420
only the newest rel right so the day

00:29:46,000 --> 00:29:51,430
relic came out it wasn't like it was

00:29:49,420 --> 00:29:53,200
like like Citibank was gonna suddenly

00:29:51,430 --> 00:29:55,570
take rl8 and convert their entire

00:29:53,200 --> 00:29:57,310
infrastructure to relate so they have

00:29:55,570 --> 00:29:59,080
rel five and six and seven and eight and

00:29:57,310 --> 00:30:02,020
every one of our customers is like that

00:29:59,080 --> 00:30:04,930
and so maintaining consistency for the

00:30:02,020 --> 00:30:08,410
things that they counted upon is really

00:30:04,930 --> 00:30:10,930
important if you see us working on

00:30:08,410 --> 00:30:13,120
things like ansible system roles that's

00:30:10,930 --> 00:30:16,090
another reason for that stuff right they

00:30:13,120 --> 00:30:18,310
need really a system management API and

00:30:16,090 --> 00:30:21,820
we haven't really had one across the

00:30:18,310 --> 00:30:24,160
distro things change right but but

00:30:21,820 --> 00:30:25,059
customer infrastructure increasingly

00:30:24,160 --> 00:30:27,490
relies on

00:30:25,059 --> 00:30:28,659
Automation and so we have to give them

00:30:27,490 --> 00:30:33,070
something that they can run their

00:30:28,659 --> 00:30:36,190
automation against reliably yeah and as

00:30:33,070 --> 00:30:39,610
it works out the technical correctness

00:30:36,190 --> 00:30:42,279
is not quite as important as consistency

00:30:39,610 --> 00:30:44,049
so compatibility really meant looking

00:30:42,279 --> 00:30:46,240
and feeling more like rel seven

00:30:44,049 --> 00:30:49,240
yet also offering all these new things

00:30:46,240 --> 00:30:55,110
at the same time so it was walking a

00:30:49,240 --> 00:30:55,110
tightrope other questions Jim

00:31:25,200 --> 00:31:31,860
so everything that's in rl8 is

00:31:27,890 --> 00:31:34,680
open-source we we build it internally if

00:31:31,860 --> 00:31:37,590
it is going into fedora

00:31:34,680 --> 00:31:39,570
we generally pull it from fedora but if

00:31:37,590 --> 00:31:41,940
nobody has actually stepped up and said

00:31:39,570 --> 00:31:45,270
I want to maintain this in fedora it's

00:31:41,940 --> 00:31:47,580
not compulsory either so I would think

00:31:45,270 --> 00:31:49,590
if it's actually a problem as a busy

00:31:47,580 --> 00:31:51,570
been filed have the maintainer has been

00:31:49,590 --> 00:31:53,700
contacted is there like an actual

00:31:51,570 --> 00:31:55,650
request for it is that there is we

00:31:53,700 --> 00:31:56,970
should address it but if it just so

00:31:55,650 --> 00:32:00,450
happens that it's not something that's

00:31:56,970 --> 00:32:04,220
interesting to the Fedora community to

00:32:00,450 --> 00:32:06,570
have it doesn't need to be there I

00:32:04,220 --> 00:32:11,580
personally believe when that happens it

00:32:06,570 --> 00:32:13,560
is a bug de-facto that's just me what is

00:32:11,580 --> 00:32:15,810
it a bug file that particular case I

00:32:13,560 --> 00:32:24,810
happen to know is a bug but I would I

00:32:15,810 --> 00:32:28,550
believe in all cases it is a bug so we

00:32:24,810 --> 00:32:28,550
have dozens of bugs that need filed then

00:33:15,270 --> 00:33:22,840
so so yeah Colonel configs is a good

00:33:19,960 --> 00:33:25,600
example right I mean internal internal

00:33:22,840 --> 00:33:29,140
to Red Hat the colonel team goes through

00:33:25,600 --> 00:33:31,690
I mean they're oh sorry so how do we

00:33:29,140 --> 00:33:34,720
rationalize things like like differences

00:33:31,690 --> 00:33:37,000
in kernel configurations probably KVM

00:33:34,720 --> 00:33:40,270
configurations stuff like that where

00:33:37,000 --> 00:33:43,090
some things are appropriate for fedora

00:33:40,270 --> 00:33:44,950
and you know where the hardware

00:33:43,090 --> 00:33:47,530
environment is totally different right

00:33:44,950 --> 00:33:49,810
and and some things are more appropriate

00:33:47,530 --> 00:33:53,290
for the enterprise class big honkin

00:33:49,810 --> 00:33:55,390
hardware that you typically find as you

00:33:53,290 --> 00:33:58,470
go out and have to do things more at

00:33:55,390 --> 00:34:02,020
scale the kernel team reviews the

00:33:58,470 --> 00:34:04,870
configurations and there are hundreds of

00:34:02,020 --> 00:34:06,480
kernel options that you can choose right

00:34:04,870 --> 00:34:09,970
and every one of them that you choose

00:34:06,480 --> 00:34:11,740
causes changes large and small in what

00:34:09,970 --> 00:34:13,860
that kernel turns out looking like and

00:34:11,740 --> 00:34:16,510
so there's an exhaustive review

00:34:13,860 --> 00:34:19,240
conducted internal to Red Hat by the

00:34:16,510 --> 00:34:21,730
kernel team they have to look at what

00:34:19,240 --> 00:34:26,200
they think is ready upstream what they

00:34:21,730 --> 00:34:28,450
think is still buggy things that so they

00:34:26,200 --> 00:34:29,950
also they review like is this crufty old

00:34:28,450 --> 00:34:32,740
hardware that we don't want to support

00:34:29,950 --> 00:34:34,000
any more hardware that are work rough

00:34:32,740 --> 00:34:37,990
the old hardware that our customers

00:34:34,000 --> 00:34:39,550
still demand yeah and oftentimes the

00:34:37,990 --> 00:34:41,500
hardware support that you would want in

00:34:39,550 --> 00:34:43,899
fedora where a lot of its gonna be

00:34:41,500 --> 00:34:45,879
deployed on laptops on workstations is

00:34:43,899 --> 00:34:49,480
not at all what you want to deploy on a

00:34:45,879 --> 00:34:51,520
Superdome right and so the kernel team

00:34:49,480 --> 00:34:53,830
does a big review working with the

00:34:51,520 --> 00:34:55,419
performance team and they figure out

00:34:53,830 --> 00:34:57,940
they run lots and lots of performance

00:34:55,419 --> 00:34:59,710
testing and figure out what is gonna be

00:34:57,940 --> 00:35:01,960
the best compromise and then they put

00:34:59,710 --> 00:35:04,750
together two new profiles to help

00:35:01,960 --> 00:35:07,800
customers get to a working configuration

00:35:04,750 --> 00:35:07,800
for themselves as well

00:35:11,859 --> 00:35:18,920
if I may add the actual very the effort

00:35:17,869 --> 00:35:21,769
in the kernel

00:35:18,920 --> 00:35:24,859
I talked about closing the gap between

00:35:21,769 --> 00:35:28,700
upstream and rel in testing and in CI

00:35:24,859 --> 00:35:32,059
but this also works for kernel so we

00:35:28,700 --> 00:35:34,940
actually working now to bring in rel

00:35:32,059 --> 00:35:38,240
based kernel tests to the upstream and

00:35:34,940 --> 00:35:40,400
so we are looking forward for making

00:35:38,240 --> 00:35:44,089
more impact on upstream weave those

00:35:40,400 --> 00:35:48,049
testing we both infrastructure and we

00:35:44,089 --> 00:35:50,390
hope that we will be less divergent from

00:35:48,049 --> 00:35:53,180
the upstream and from Fedora in the rel

00:35:50,390 --> 00:35:55,640
in rel kernel as well so there's going

00:35:53,180 --> 00:35:58,160
to be an effort to actually minimize the

00:35:55,640 --> 00:36:00,740
set of differences between fedora and

00:35:58,160 --> 00:36:03,470
rel kernel so we don't maintain like

00:36:00,740 --> 00:36:06,019
completely different trees for that this

00:36:03,470 --> 00:36:09,890
is also like nicely tied to see I am

00:36:06,019 --> 00:36:11,960
getting story and it actually is in

00:36:09,890 --> 00:36:14,960
development in in progress right now and

00:36:11,960 --> 00:36:18,950
probably Laura Abbott is the best person

00:36:14,960 --> 00:36:22,279
to talk about it so yeah so she's given

00:36:18,950 --> 00:36:24,170
a talk today in a after Vilanch so we'll

00:36:22,279 --> 00:36:27,650
try to find it if you're interested in

00:36:24,170 --> 00:36:30,289
me in more detail and just rounding that

00:36:27,650 --> 00:36:32,900
one out sometimes there is a good reason

00:36:30,289 --> 00:36:34,210
to have one built that does one thing

00:36:32,900 --> 00:36:37,730
and one goal that does another thing

00:36:34,210 --> 00:36:40,670
like we have we have system-wide

00:36:37,730 --> 00:36:42,980
compiler flags that we use for for every

00:36:40,670 --> 00:36:45,740
architecture what if you want variation

00:36:42,980 --> 00:36:48,049
on that basically if you only have one

00:36:45,740 --> 00:36:51,680
build if you only have one compose then

00:36:48,049 --> 00:36:54,589
you only have one option but if there is

00:36:51,680 --> 00:36:57,200
some way that we can develop rel in a

00:36:54,589 --> 00:36:59,000
shared space we could do experiments

00:36:57,200 --> 00:37:01,880
where we have a second build with a

00:36:59,000 --> 00:37:04,160
second set of options and people could

00:37:01,880 --> 00:37:06,200
try one try the other do what works for

00:37:04,160 --> 00:37:08,720
them so it's definitely an area we'd

00:37:06,200 --> 00:37:10,430
like to explore and clearly that is

00:37:08,720 --> 00:37:13,069
something that you can only do when you

00:37:10,430 --> 00:37:22,809
have a really good suite of automated

00:37:13,069 --> 00:37:22,809
tests go Alexandre it's all about robots

00:38:27,770 --> 00:38:32,540
okay so that wasn't exactly a question

00:38:30,050 --> 00:38:35,900
but I will try and paraphrase like Neal

00:38:32,540 --> 00:38:39,110
is Neal Campos saying that it will be

00:38:35,900 --> 00:38:40,520
helpful to have more avenues with with

00:38:39,110 --> 00:38:42,800
greater transparency in the rel

00:38:40,520 --> 00:38:44,750
development process it would be helpful

00:38:42,800 --> 00:38:49,730
to have more transparency and input from

00:38:44,750 --> 00:38:53,030
people who are able to test in advance

00:38:49,730 --> 00:38:56,000
to provide feedback on changes obviously

00:38:53,030 --> 00:38:58,460
you know rel has a public beta program

00:38:56,000 --> 00:39:01,430
for every release that already exists

00:38:58,460 --> 00:39:03,650
but are there ways to build on that

00:39:01,430 --> 00:39:06,080
improve on it offer more in advance I

00:39:03,650 --> 00:39:08,900
think so do I know exactly how that

00:39:06,080 --> 00:39:11,300
would work not at the moment but I would

00:39:08,900 --> 00:39:13,600
say stay tuned right where this is

00:39:11,300 --> 00:39:22,640
definitely of interest I think to the

00:39:13,600 --> 00:39:24,560
the wrong product folks oh yeah sorry I

00:39:22,640 --> 00:39:26,720
yeah I I was thinking about it and

00:39:24,560 --> 00:39:28,100
didn't vocalize it which is would there

00:39:26,720 --> 00:39:31,880
be a way for people to actually

00:39:28,100 --> 00:39:34,850
contribute patches contribute specific

00:39:31,880 --> 00:39:37,040
fixes or inputs back back into the and

00:39:34,850 --> 00:39:39,260
tests back into the process on yeah I

00:39:37,040 --> 00:39:41,090
think that would be very useful right

00:39:39,260 --> 00:39:42,200
the that's kind of the spirit of open

00:39:41,090 --> 00:39:44,810
source and I think if you're gonna have

00:39:42,200 --> 00:39:47,560
a more open rel process I think it makes

00:39:44,810 --> 00:39:52,369
sense to build that kind of that kind of

00:39:47,560 --> 00:39:53,450
procedure into it as well just before we

00:39:52,369 --> 00:39:55,670
move on I just wanna make sure I didn't

00:39:53,450 --> 00:39:57,740
alright I didn't get fired for that so

00:39:55,670 --> 00:40:00,020
that's great that's it's always good

00:39:57,740 --> 00:40:01,340
like I'll know right away like I'll get

00:40:00,020 --> 00:40:04,160
kicked under the table and that's how

00:40:01,340 --> 00:40:05,300
long now and then yeah my my resume is

00:40:04,160 --> 00:40:08,710
ready so it's okay

00:40:05,300 --> 00:40:08,710
Domenic go ahead

00:40:31,200 --> 00:40:34,770
so let me alright i'll paraphrase again

00:40:33,329 --> 00:40:36,480
for the for the cameras

00:40:34,770 --> 00:40:39,270
dominic pointed out that part of the

00:40:36,480 --> 00:40:41,940
reason for having more of the testing

00:40:39,270 --> 00:40:43,680
moving upstream is that it gives people

00:40:41,940 --> 00:40:47,040
an immediate route that doesn't really

00:40:43,680 --> 00:40:48,839
lock on fedora as a community or rel as

00:40:47,040 --> 00:40:50,819
a product that really moving those

00:40:48,839 --> 00:40:52,710
things upstream is a benefit to the

00:40:50,819 --> 00:40:54,180
entire open-source community and that's

00:40:52,710 --> 00:40:56,099
something that fedora holds dear right i

00:40:54,180 --> 00:40:57,750
mean this is exactly what we've been

00:40:56,099 --> 00:41:00,359
saying for many years is that we try and

00:40:57,750 --> 00:41:02,880
drive changes upstream and I think the

00:41:00,359 --> 00:41:05,460
expanded upstream testing and CI that is

00:41:02,880 --> 00:41:07,319
an expression a better expression of

00:41:05,460 --> 00:41:09,569
that then maybe what we have been doing

00:41:07,319 --> 00:41:10,619
for for many years so I think it's

00:41:09,569 --> 00:41:13,680
something we should keep an eye on is

00:41:10,619 --> 00:41:17,490
that yo Fedora doesn't become sort of

00:41:13,680 --> 00:41:19,290
its own concentration of a value that it

00:41:17,490 --> 00:41:24,030
doesn't need to hold in other words that

00:41:19,290 --> 00:41:26,730
we're not maybe inadvertently hoarding

00:41:24,030 --> 00:41:29,430
change or inadvertently hoarding value

00:41:26,730 --> 00:41:30,930
into Fedora that we don't need to so

00:41:29,430 --> 00:41:35,190
driving that work upstream is really

00:41:30,930 --> 00:41:37,829
important just to add on on top of it so

00:41:35,190 --> 00:41:40,559
is from strategic point of view it's

00:41:37,829 --> 00:41:44,160
better to have the initial verification

00:41:40,559 --> 00:41:46,650
as early as possible because for when

00:41:44,160 --> 00:41:50,280
you try to provide feedback to rel it

00:41:46,650 --> 00:41:54,000
might be too too late in the process so

00:41:50,280 --> 00:41:56,430
we main like idea which you need to keep

00:41:54,000 --> 00:41:59,790
in mind is that the first verifications

00:41:56,430 --> 00:42:02,849
is happens in upstream or in Fedora and

00:41:59,790 --> 00:42:05,670
the goal of rel verification is mostly

00:42:02,849 --> 00:42:08,579
to make sure that we that things still

00:42:05,670 --> 00:42:10,829
work so it's not the first time we check

00:42:08,579 --> 00:42:13,770
what things work we in rel with the

00:42:10,829 --> 00:42:15,930
check that things still are working the

00:42:13,770 --> 00:42:19,109
same way it's supposed to be so this is

00:42:15,930 --> 00:42:22,819
our major goal well just checking of new

00:42:19,109 --> 00:42:25,740
things is going to be more upstream more

00:42:22,819 --> 00:42:28,890
community community project based and so

00:42:25,740 --> 00:42:31,829
on we are we still have some gaps like

00:42:28,890 --> 00:42:33,990
when we divert too much when we can

00:42:31,829 --> 00:42:35,880
introduce something but we're going to

00:42:33,990 --> 00:42:38,490
be closing this and this is one of the

00:42:35,880 --> 00:42:41,490
efforts with we are using upstream tests

00:42:38,490 --> 00:42:43,829
in testing rel to recheck that we didn't

00:42:41,490 --> 00:42:44,710
break all the things upstream did while

00:42:43,829 --> 00:42:46,960
we were

00:42:44,710 --> 00:42:50,010
integrating it in realms so this is

00:42:46,960 --> 00:42:52,210
going to be still working yep

00:42:50,010 --> 00:42:54,250
maybe if I if I get add just one bit of

00:42:52,210 --> 00:42:56,890
code this is just maybe a philosophical

00:42:54,250 --> 00:42:59,650
thing I'm sure how valuable it is but I

00:42:56,890 --> 00:43:02,830
think when you look at at how well

00:42:59,650 --> 00:43:04,720
diverges from upstream I wouldn't say

00:43:02,830 --> 00:43:07,060
that over the years we've gotten

00:43:04,720 --> 00:43:08,830
particularly better from major release

00:43:07,060 --> 00:43:11,260
to major release about that like there

00:43:08,830 --> 00:43:13,330
is a gap there continues to be a gap in

00:43:11,260 --> 00:43:15,910
each product I would say that it has not

00:43:13,330 --> 00:43:18,010
gotten particularly worse but it also

00:43:15,910 --> 00:43:20,980
hasn't gotten particularly better but I

00:43:18,010 --> 00:43:23,380
do feel that as as a development

00:43:20,980 --> 00:43:26,050
organization we continue to apply

00:43:23,380 --> 00:43:27,970
pressure on that gap and that's why it

00:43:26,050 --> 00:43:30,730
has not gotten worse because I think the

00:43:27,970 --> 00:43:32,890
tendency when an organization is not

00:43:30,730 --> 00:43:34,839
keeping the open-source principles in

00:43:32,890 --> 00:43:37,330
mind would be that that gap is gonna get

00:43:34,839 --> 00:43:39,849
wider naturally over time and the fact

00:43:37,330 --> 00:43:41,710
that we've kept it about where it is you

00:43:39,849 --> 00:43:44,320
know just just in this sort of you know

00:43:41,710 --> 00:43:45,730
maybe meta philosophical way is I think

00:43:44,320 --> 00:43:47,530
evidence of the fact that a lot of

00:43:45,730 --> 00:43:49,660
people think about this an inside Red

00:43:47,530 --> 00:43:51,550
Hat so I'm really grateful to have to

00:43:49,660 --> 00:43:53,500
work in an organization that that thinks

00:43:51,550 --> 00:43:55,510
about that but I think again we're

00:43:53,500 --> 00:43:58,900
always trying to do better whether we

00:43:55,510 --> 00:44:01,570
succeed in the end or not at closing

00:43:58,900 --> 00:44:04,480
that gap down I think if we do if we do

00:44:01,570 --> 00:44:06,640
no better than keeping it the same that

00:44:04,480 --> 00:44:08,260
is evidence of a lot of effort hopefully

00:44:06,640 --> 00:44:10,210
we can though you know we can close that

00:44:08,260 --> 00:44:17,770
gap more over the over the next two

00:44:10,210 --> 00:44:19,660
years all right anybody else all right

00:44:17,770 --> 00:44:21,070
then just one follow-up on Jim's

00:44:19,660 --> 00:44:22,990
question observing that there are some

00:44:21,070 --> 00:44:26,140
packages that are in realm but not in

00:44:22,990 --> 00:44:28,630
fedora or for those packages if we

00:44:26,140 --> 00:44:30,730
wanted to have well-developed

00:44:28,630 --> 00:44:32,800
more open more transparently more

00:44:30,730 --> 00:44:36,430
visibly it would definitely be a bug

00:44:32,800 --> 00:44:38,859
because how can you have it be a subset

00:44:36,430 --> 00:44:42,930
of fedora if it's not all there

00:44:38,859 --> 00:44:42,930
so please file bugs

00:44:43,289 --> 00:44:58,869
alright anybody else oh well thank you

00:44:51,039 --> 00:45:01,289
all for coming and thank you panel Thank

00:44:58,869 --> 00:45:01,289

YouTube URL: https://www.youtube.com/watch?v=z3zLT6nyEmE


