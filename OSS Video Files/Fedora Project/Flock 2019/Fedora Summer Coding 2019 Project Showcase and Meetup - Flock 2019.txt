Title: Fedora Summer Coding 2019 Project Showcase and Meetup - Flock 2019
Publication date: 2019-10-15
Playlist: Flock 2019
Description: 
	Leigh Griffin, Clement Verna, Stephen Gallagher, Alberto Rodríguez Sánchez, Brian Stinson, Bhagyashree Padalka, Laura Abbott, Tomas Tomecek, Rado Pitonak, Ben Cotton, Valentin Rothberg, Niharika Shrivastava, Manas Mangaonkar, Marek Marušin, Alisha Mohanty, Divyansh Kamboj, Lenka Segura, Shraddha Agrawal, Zubin Choudhary, Amita Sharma, Justin W. Flory, Sumantro Mukherjee, Jona Azizaj, Vipul Siddharth

The Fedora Summer Coding project showcase and meet-up is a recurring event each year that does the following:

    Gives a platform to Summer Coding interns to present their accomplishments and work to Fedora community
    Share knowledge and wisdom among mentors and empower more people in Fedora community to participate as mentors
    Provide unstructured time to network and meet others involved with Fedora Summer Coding

The goals for this session are to celebrate the accomplishments of the numerous interns working on Fedora and to build up the Fedora Summer Coding initiative. This gives interns a chance to share their work with a wider audience and to invite more people to participate as mentors or admins in future rounds of Fedora's Summer Coding initiatives like Google Summer of Code (GSoC) and Outreachy.

--
Recordings of talks at Flock are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:02,270 --> 00:00:07,550
we're gonna go ahead and get started

00:00:03,470 --> 00:00:10,309
with the session so this is the second

00:00:07,550 --> 00:00:12,559
year that we've done the showcase we're

00:00:10,309 --> 00:00:14,230
going to have a chance to hear from all

00:00:12,559 --> 00:00:17,360
all the different interns in the

00:00:14,230 --> 00:00:19,160
different mentored summer summer coding

00:00:17,360 --> 00:00:20,240
projects that Fedora is involved with

00:00:19,160 --> 00:00:22,220
and get to hear about some of their

00:00:20,240 --> 00:00:24,470
project work you'll also learn about

00:00:22,220 --> 00:00:26,660
some of the different mentor projects

00:00:24,470 --> 00:00:28,250
that the programs that fedora is

00:00:26,660 --> 00:00:31,430
involved with and you'll also get to

00:00:28,250 --> 00:00:33,500
hear from a panel of mentors later about

00:00:31,430 --> 00:00:36,680
different career opportunities and open

00:00:33,500 --> 00:00:38,750
source best practices for mentors and

00:00:36,680 --> 00:00:40,730
other opportunities to get involved with

00:00:38,750 --> 00:00:42,770
the Fedora community before we get

00:00:40,730 --> 00:00:45,670
started I wanted to say a big thanks to

00:00:42,770 --> 00:00:48,020
our program administrators sue montreux

00:00:45,670 --> 00:00:50,540
Brian axel beard who could not be here

00:00:48,020 --> 00:00:52,100
and Laura Abbott for outreach e so these

00:00:50,540 --> 00:00:54,020
they do a lot of work that's in the

00:00:52,100 --> 00:00:55,520
background and is not super visible all

00:00:54,020 --> 00:00:57,470
the time so we just give them a big

00:00:55,520 --> 00:01:05,479
round of applause for all their hard

00:00:57,470 --> 00:01:07,280
work so a quick overview of house is

00:01:05,479 --> 00:01:08,569
going to run today we'll have you'll

00:01:07,280 --> 00:01:10,810
hear a little bit from our different

00:01:08,569 --> 00:01:13,700
program admins about the different

00:01:10,810 --> 00:01:16,100
programs were involved with well do the

00:01:13,700 --> 00:01:18,170
firt we'll do five interim presentations

00:01:16,100 --> 00:01:20,689
to start off with we'll switch to the

00:01:18,170 --> 00:01:22,999
mentor panel after that and then we'll

00:01:20,689 --> 00:01:26,509
wrap up with the last four and any left

00:01:22,999 --> 00:01:29,299
over time we have will be unstructured

00:01:26,509 --> 00:01:32,479
social time hang out and chat a little

00:01:29,299 --> 00:01:34,909
bit so with that I'm going to go and

00:01:32,479 --> 00:01:38,209
hand over the mic to our program admins

00:01:34,909 --> 00:01:41,630
Laura for outreach e and sue montreux

00:01:38,209 --> 00:01:44,090
for google Summer of Code and google

00:01:41,630 --> 00:01:48,799
code-in so Laura do you want to start

00:01:44,090 --> 00:01:50,539
off with me I'm Laura Abbott my official

00:01:48,799 --> 00:01:53,479
job penalty is Fedora kernel engineer

00:01:50,539 --> 00:01:55,670
but one things I'm also do is coordinate

00:01:53,479 --> 00:01:57,079
the outreach qi program for those who

00:01:55,670 --> 00:01:59,679
aren't familiar without rishi

00:01:57,079 --> 00:02:02,689
preacher originally started as the

00:01:59,679 --> 00:02:04,490
genome outreach project for woman

00:02:02,689 --> 00:02:07,369
started by the canola foundation and was

00:02:04,490 --> 00:02:08,950
designed to help get more women into

00:02:07,369 --> 00:02:11,410
open source because based on

00:02:08,950 --> 00:02:13,269
they're reviewing statistics it was

00:02:11,410 --> 00:02:15,940
found that there was a remarkably few

00:02:13,269 --> 00:02:18,010
number of women contributing to google

00:02:15,940 --> 00:02:20,470
Summer of Code since then the program

00:02:18,010 --> 00:02:22,060
has expanded to include other

00:02:20,470 --> 00:02:24,340
underrepresented groups and open source

00:02:22,060 --> 00:02:27,519
and it is today it's just known as

00:02:24,340 --> 00:02:29,769
outreach e o ritchie is run twice a year

00:02:27,519 --> 00:02:33,190
it's designed to give underrepresented

00:02:29,769 --> 00:02:38,129
groups a chance to kind of contribute to

00:02:33,190 --> 00:02:40,209
a full time project it's paid it's all

00:02:38,129 --> 00:02:42,010
various groups of open-source get a

00:02:40,209 --> 00:02:45,099
chance contributed or has done it off

00:02:42,010 --> 00:02:47,739
and on over the past years thro I did it

00:02:45,099 --> 00:02:51,400
during when we still you know about you

00:02:47,739 --> 00:02:53,739
know an outreach for a woman and I think

00:02:51,400 --> 00:02:55,510
that's about all I have to say about

00:02:53,739 --> 00:02:58,150
outreach you right now I'm happy to talk

00:02:55,510 --> 00:02:59,709
more about it offline but and once again

00:02:58,150 --> 00:03:01,450
thank you for everyone who has done in

00:02:59,709 --> 00:03:05,230
the past I'm I feel I should acknowledge

00:03:01,450 --> 00:03:09,040
mo Duffy who did coordination and help

00:03:05,230 --> 00:03:10,870
from the program somewhat before I took

00:03:09,040 --> 00:03:17,200
over as well and yes thank you everyone

00:03:10,870 --> 00:03:21,040
thanks Hey

00:03:17,200 --> 00:03:22,810
good morning I'm shimanto and I'm the my

00:03:21,040 --> 00:03:25,870
official job title is federal key way

00:03:22,810 --> 00:03:29,049
and I coordinate with Brian axel beard

00:03:25,870 --> 00:03:31,299
for Google Gordon and google Summer of

00:03:29,049 --> 00:03:33,870
Code that I'll be talking about in a bit

00:03:31,299 --> 00:03:37,150
so Google's code and is targeted towards

00:03:33,870 --> 00:03:39,790
thirteen to seventeen year old high

00:03:37,150 --> 00:03:43,299
school students essentially it's the the

00:03:39,790 --> 00:03:45,940
purpose is to serve as a like a starting

00:03:43,299 --> 00:03:48,040
ground for students to get familiarize

00:03:45,940 --> 00:03:49,930
with open source the culture and the

00:03:48,040 --> 00:03:53,349
ethics and how they can like kind of

00:03:49,930 --> 00:03:55,900
start writing very small programs or

00:03:53,349 --> 00:04:00,519
documentation QA anything for that

00:03:55,900 --> 00:04:02,260
matter the the idea of coding so federal

00:04:00,519 --> 00:04:04,569
did not participate in coding for a long

00:04:02,260 --> 00:04:06,190
amount of time this is the first last

00:04:04,569 --> 00:04:09,160
year over the first angle rather the

00:04:06,190 --> 00:04:10,450
second time we did it and we ran super

00:04:09,160 --> 00:04:13,329
successfully I would like to thank

00:04:10,450 --> 00:04:15,010
people who has taken part in it as our

00:04:13,329 --> 00:04:18,760
guide man and he has done a fantastic

00:04:15,010 --> 00:04:20,539
job in making sure that we make we did

00:04:18,760 --> 00:04:22,280
the first cordon right

00:04:20,539 --> 00:04:24,169
feder is supposed to participate this

00:04:22,280 --> 00:04:28,789
year as well and we are hopeful to have

00:04:24,169 --> 00:04:33,439
more mentors would help us understand or

00:04:28,789 --> 00:04:35,990
write tasks for students the idea idea

00:04:33,439 --> 00:04:38,210
of like so when a person or a student

00:04:35,990 --> 00:04:40,340
graduates out of koden they can actually

00:04:38,210 --> 00:04:42,740
go ahead and have something like google

00:04:40,340 --> 00:04:45,289
Summer of Code Summer of Code is mostly

00:04:42,740 --> 00:04:46,939
like a full functional project and it's

00:04:45,289 --> 00:04:48,439
not just small tasks that they have to

00:04:46,939 --> 00:04:50,360
finish it's mostly about a full

00:04:48,439 --> 00:04:54,199
functional project and you would kind of

00:04:50,360 --> 00:04:55,939
see the mentees showcase their projects

00:04:54,199 --> 00:04:58,069
and how they have been working on the

00:04:55,939 --> 00:05:00,919
the whole summer

00:04:58,069 --> 00:05:02,599
the idea of google Summer of Code was to

00:05:00,919 --> 00:05:04,189
kind of make sure that a person

00:05:02,599 --> 00:05:06,349
understands the philosophy of the

00:05:04,189 --> 00:05:09,560
project they kind of bond with the

00:05:06,349 --> 00:05:11,840
community and then they try to adopt the

00:05:09,560 --> 00:05:13,370
best practices that the project follows

00:05:11,840 --> 00:05:16,460
while they are making the software so

00:05:13,370 --> 00:05:18,860
essentially you you would find most of

00:05:16,460 --> 00:05:20,599
these mentees talking about the the

00:05:18,860 --> 00:05:22,729
number of challenges they face and how

00:05:20,599 --> 00:05:25,819
they over overcome that with the

00:05:22,729 --> 00:05:28,490
community and you would basically find

00:05:25,819 --> 00:05:31,490
more and more people getting involved in

00:05:28,490 --> 00:05:33,020
google Summer of Code here as far as the

00:05:31,490 --> 00:05:35,810
statistics course there is a lot of

00:05:33,020 --> 00:05:37,159
contribution coming out from India there

00:05:35,810 --> 00:05:40,190
are a lot of contributors coming out of

00:05:37,159 --> 00:05:43,339
India and which is good for us in in

00:05:40,190 --> 00:05:44,870
terms of how we scale up the google

00:05:43,339 --> 00:05:47,599
Summer of Code in the coming years so

00:05:44,870 --> 00:05:50,089
yes like I hope more than enough

00:05:47,599 --> 00:05:52,460
interest to talk to any one of you about

00:05:50,089 --> 00:05:55,550
how we can make google Summer of Code

00:05:52,460 --> 00:05:59,379
and GCI better in fedora so moving

00:05:55,550 --> 00:06:02,629
forward and that's mostly all about me

00:05:59,379 --> 00:06:06,849
thanks everyone for coming here at Lee

00:06:02,629 --> 00:06:06,849
and I would like to move on

00:06:08,510 --> 00:06:12,620
[Applause]

00:06:11,120 --> 00:06:15,400
all right Thank You Laura and thank you

00:06:12,620 --> 00:06:18,199
soon Montreux so here's going to be our

00:06:15,400 --> 00:06:20,949
outline for the presentation so we'll go

00:06:18,199 --> 00:06:24,020
ahead and get started with the crank

00:06:20,949 --> 00:06:25,729
presentation first and we'll take a

00:06:24,020 --> 00:06:27,470
break about halfway through for coffee

00:06:25,729 --> 00:06:33,500
but right before we start the mentor

00:06:27,470 --> 00:06:39,380
panel linka are you here

00:06:33,500 --> 00:06:43,430
excellent hi I'm Lynne I'm the outreach

00:06:39,380 --> 00:06:47,500
ill intern from the past winterim my

00:06:43,430 --> 00:06:51,110
mentor is Alexandra fedorova there and

00:06:47,500 --> 00:06:54,979
my project was to create a command-line

00:06:51,110 --> 00:07:03,410
interface tool which I called crank or a

00:06:54,979 --> 00:07:06,020
girl playing the second video not the

00:07:03,410 --> 00:07:18,169
first one so this one is about creating

00:07:06,020 --> 00:07:20,810
the pool request work because an API

00:07:18,169 --> 00:07:23,870
token is necessary so what's happening

00:07:20,810 --> 00:07:29,570
you go to crank you see command click

00:07:23,870 --> 00:07:32,960
and that prompts you to get an API token

00:07:29,570 --> 00:07:41,530
on the web page then there is a tool

00:07:32,960 --> 00:07:41,530
which helps cast the URL of repo and and

00:07:41,860 --> 00:07:54,139
domain URL and it works the pool request

00:07:47,389 --> 00:07:58,570
is open you can also merge it with crank

00:07:54,139 --> 00:07:58,570
merge PR you need the request ID

00:08:08,039 --> 00:08:11,809
and it successful Mertz

00:08:17,680 --> 00:08:20,880
yep instead

00:08:29,949 --> 00:08:44,270
what there is the second video which is

00:08:34,940 --> 00:08:46,550
the first video yeah so this one is

00:08:44,270 --> 00:08:52,339
about getting the PRS and the issues

00:08:46,550 --> 00:09:00,320
Grande get issues there they're the same

00:08:52,339 --> 00:09:03,459
I have them here on my laptop like yeah

00:09:00,320 --> 00:09:03,459
that that's the same video

00:09:06,260 --> 00:09:22,040
okay never mind so okay mmm so the first

00:09:17,030 --> 00:09:25,460
video was about Commons grand get issues

00:09:22,040 --> 00:09:30,020
and kraang get pr's for this is not

00:09:25,460 --> 00:09:33,080
necessarily API token and it's always

00:09:30,020 --> 00:09:33,800
done from the current on the current

00:09:33,080 --> 00:09:39,110
directory

00:09:33,800 --> 00:09:41,030
and yes I tested it this works if you

00:09:39,110 --> 00:09:43,130
want to try it for yourself it's

00:09:41,030 --> 00:09:47,960
uploaded on pi PI

00:09:43,130 --> 00:09:52,430
you can put around pip install crank it

00:09:47,960 --> 00:09:54,290
should work and okay I'll have to

00:09:52,430 --> 00:09:58,810
continue with my presentation without

00:09:54,290 --> 00:10:01,790
slide so what I wanted to say is that

00:09:58,810 --> 00:10:03,860
what I took away there was a lot

00:10:01,790 --> 00:10:08,300
community wise and tech wise

00:10:03,860 --> 00:10:10,730
I learned a lot about what pull request

00:10:08,300 --> 00:10:18,110
is what is the working what is the

00:10:10,730 --> 00:10:20,030
workflow I learned I learned to think

00:10:18,110 --> 00:10:22,450
about the user experience because before

00:10:20,030 --> 00:10:26,230
writing it I had to do the research

00:10:22,450 --> 00:10:28,220
check the other common line interfaces

00:10:26,230 --> 00:10:31,940
think about the structure of the

00:10:28,220 --> 00:10:35,530
commands got to be so they would not be

00:10:31,940 --> 00:10:35,530
random they will follow some structure

00:10:37,550 --> 00:10:44,029
and also take away a lot of

00:10:39,910 --> 00:10:49,660
community-wise got involved in the open

00:10:44,029 --> 00:10:49,660
source community I even made a package

00:10:53,410 --> 00:11:01,750
with one package I would like to thank

00:10:56,329 --> 00:11:01,750
all who are organizing outreach programs

00:11:08,380 --> 00:11:16,190
thanks for attention all right so next

00:11:13,670 --> 00:11:19,130
up we have creating a set comp profile

00:11:16,190 --> 00:11:22,250
for a container using pod man I have

00:11:19,130 --> 00:11:25,370
even I'm the event this summer I was

00:11:22,250 --> 00:11:29,440
working on generating working with pod

00:11:25,370 --> 00:11:34,070
man with Valentin and Dan Dan Connolly

00:11:29,440 --> 00:11:36,769
so I was working with pod man to jet to

00:11:34,070 --> 00:11:38,839
generate a second profile for individual

00:11:36,769 --> 00:11:40,490
containers so generating a SATCOM

00:11:38,839 --> 00:11:43,730
profile for container is important but

00:11:40,490 --> 00:11:46,070
so what's a comp but those who don't

00:11:43,730 --> 00:11:50,750
know you're the SEC's a comp is a Linux

00:11:46,070 --> 00:11:54,410
security feature which blocks which

00:11:50,750 --> 00:11:57,079
filters is called by a process so me

00:11:54,410 --> 00:12:01,070
almost every container engine uses

00:11:57,079 --> 00:12:01,790
succumb to secure it's that secure the

00:12:01,070 --> 00:12:04,520
container

00:12:01,790 --> 00:12:05,990
secure the host so pod man ships with

00:12:04,520 --> 00:12:08,709
the default set comm profile which

00:12:05,990 --> 00:12:12,890
blocks around 40 forces calls which is

00:12:08,709 --> 00:12:16,520
really which has which is really loose

00:12:12,890 --> 00:12:18,800
for certain certain can take a certain

00:12:16,520 --> 00:12:21,290
workloads because we don't need a lot of

00:12:18,800 --> 00:12:23,270
Cisco's like if you want to run LS you

00:12:21,290 --> 00:12:27,410
don't need around 200 syscalls

00:12:23,270 --> 00:12:29,709
to run LS escaped if a thing in between

00:12:27,410 --> 00:12:33,880
so didn't talk about pod man first

00:12:29,709 --> 00:12:35,540
support man is a container engine which

00:12:33,880 --> 00:12:40,190
just like docker

00:12:35,540 --> 00:12:43,579
and so what man is designed to run OCI

00:12:40,190 --> 00:12:46,310
containers in pots and containers can

00:12:43,579 --> 00:12:48,230
run in rootless or root word so that's

00:12:46,310 --> 00:12:50,579
pretty great it works in folk exact

00:12:48,230 --> 00:12:54,660
model rather than a demon model

00:12:50,579 --> 00:12:58,949
a docker so it's a tad bit lighter than

00:12:54,660 --> 00:13:01,259
docker so yeah I was talking about why

00:12:58,949 --> 00:13:03,329
I've worked on this project so the idea

00:13:01,259 --> 00:13:06,059
was to trace all these calls made by the

00:13:03,329 --> 00:13:12,029
container and generators a comm profile

00:13:06,059 --> 00:13:15,149
using the all the SIS calls so how the

00:13:12,029 --> 00:13:18,290
initial proposal I wrote involved using

00:13:15,149 --> 00:13:21,869
P trace so P trace is a syscall which

00:13:18,290 --> 00:13:26,129
which gives the command of the sub

00:13:21,869 --> 00:13:29,429
process - it's the one the process above

00:13:26,129 --> 00:13:32,069
that at every step and the the process

00:13:29,429 --> 00:13:35,879
can inspect its registers to check which

00:13:32,069 --> 00:13:38,309
this call has been run so the initial

00:13:35,879 --> 00:13:40,439
proposal was to use Peters to trace all

00:13:38,309 --> 00:13:44,549
this is cause made by the container but

00:13:40,439 --> 00:13:47,399
there was a problem that retrace slows

00:13:44,549 --> 00:13:49,980
down the process the the running of the

00:13:47,399 --> 00:13:55,410
container and some time based decisions

00:13:49,980 --> 00:13:58,980
can be effective also Peters Peters

00:13:55,410 --> 00:14:00,899
can't I cook I wasn't able to get all

00:13:58,980 --> 00:14:03,929
the SIS calls using Pinterest because

00:14:00,899 --> 00:14:07,139
some sis calls are required by round C

00:14:03,929 --> 00:14:10,410
which makes the container before the

00:14:07,139 --> 00:14:13,019
before applying the second profile after

00:14:10,410 --> 00:14:17,819
that we tried using the ordered Damon in

00:14:13,019 --> 00:14:20,970
in the Linux kernel they when you apply

00:14:17,819 --> 00:14:23,429
a second profile the you can either

00:14:20,970 --> 00:14:25,169
block it or log it or taste it and many

00:14:23,429 --> 00:14:27,419
other things so we try to log every

00:14:25,169 --> 00:14:29,850
syscall made made by the container by

00:14:27,419 --> 00:14:32,759
applying the profile which logs all the

00:14:29,850 --> 00:14:35,069
containers logs all this is calls but

00:14:32,759 --> 00:14:37,949
the problem we encountered there was

00:14:35,069 --> 00:14:40,319
that we weren't able to figure out in a

00:14:37,949 --> 00:14:42,869
nice way that which process which

00:14:40,319 --> 00:14:46,279
process belongs to which container and

00:14:42,869 --> 00:14:48,689
does it is it in a container or not so

00:14:46,279 --> 00:14:50,519
there was a workaround about that that

00:14:48,689 --> 00:14:54,449
the order Damon was adding a container

00:14:50,519 --> 00:14:57,279
ID to you the order through a subsystem

00:14:54,449 --> 00:14:59,439
but that couldn't be merged in

00:14:57,279 --> 00:15:02,800
in the right time so we had to move past

00:14:59,439 --> 00:15:03,850
that then we tried using EVP F who trace

00:15:02,800 --> 00:15:07,959
all this as calls

00:15:03,850 --> 00:15:10,120
so what's EVPs EVP F is extended

00:15:07,959 --> 00:15:15,939
Berkeley packet filter so seccomp

00:15:10,120 --> 00:15:18,310
is also implemented BPF so BP f was also

00:15:15,939 --> 00:15:20,680
was also used in filtering packets and

00:15:18,310 --> 00:15:24,639
all but now it's extended and you can

00:15:20,680 --> 00:15:28,930
write your own programs to run inside

00:15:24,639 --> 00:15:33,399
the kernel resonating kernel modules so

00:15:28,930 --> 00:15:35,829
it compiles on the fly and its attaches

00:15:33,399 --> 00:15:39,009
to certain code paths in the kernel so

00:15:35,829 --> 00:15:42,040
in order to play so this is causing it

00:15:39,009 --> 00:15:43,839
it's solved it's it's now used in making

00:15:42,040 --> 00:15:45,910
tracing pools networking tools and a lot

00:15:43,839 --> 00:15:50,800
more so it's still being explored what

00:15:45,910 --> 00:15:53,560
kept it but what can it do or not so

00:15:50,800 --> 00:15:55,899
this summer I had two things to do

00:15:53,560 --> 00:15:57,250
research and implement the tool and most

00:15:55,899 --> 00:16:00,040
it will upstream with the help of the

00:15:57,250 --> 00:16:04,360
mattress so the PIR is still open

00:16:00,040 --> 00:16:07,389
waiting for some CI fixes other than

00:16:04,360 --> 00:16:09,720
that the tool is working and trans on a

00:16:07,389 --> 00:16:14,050
simple interface so you have to pass

00:16:09,720 --> 00:16:16,930
annotations to DC Li and then it

00:16:14,050 --> 00:16:20,230
generates the profile you have to

00:16:16,930 --> 00:16:22,269
provide it the path of the name of the

00:16:20,230 --> 00:16:27,329
file you want to create and and you can

00:16:22,269 --> 00:16:30,430
use the profile so the major takeaways

00:16:27,329 --> 00:16:34,059
by working on this project this whole

00:16:30,430 --> 00:16:37,720
summer was that it sounds it may sound

00:16:34,059 --> 00:16:41,709
silly but but after doing this project I

00:16:37,720 --> 00:16:43,689
feel like I didn't before that I didn't

00:16:41,709 --> 00:16:46,389
feel that there were people on the other

00:16:43,689 --> 00:16:48,459
side of screen like I could they was I

00:16:46,389 --> 00:16:51,220
couldn't approach people or something so

00:16:48,459 --> 00:16:52,779
after the project I was like if I can

00:16:51,220 --> 00:16:56,709
approach everyone people are willing to

00:16:52,779 --> 00:16:58,689
help it's really great awesome and like

00:16:56,709 --> 00:17:01,389
I had some initial anxiety about

00:16:58,689 --> 00:17:03,399
contributing to open source this phone

00:17:01,389 --> 00:17:10,240
it helped me a lot in getting started

00:17:03,399 --> 00:17:11,050
and working and the logistics civilized

00:17:10,240 --> 00:17:13,720
project

00:17:11,050 --> 00:17:17,140
so earlier than that I hand encountered

00:17:13,720 --> 00:17:19,449
CI and like working with huge project

00:17:17,140 --> 00:17:22,260
middle with many levels of abstraction

00:17:19,449 --> 00:17:26,470
and I had to work my way through it and

00:17:22,260 --> 00:17:28,809
write that I'm working remotely so I

00:17:26,470 --> 00:17:31,030
thought that working remotely is really

00:17:28,809 --> 00:17:33,700
really hard and I don't know how I do it

00:17:31,030 --> 00:17:41,260
so fortunately I was able to work

00:17:33,700 --> 00:17:43,750
through that yeah thanks thank you so

00:17:41,260 --> 00:17:48,179
now we have the Fedora GUI karma

00:17:43,750 --> 00:17:51,480
presentation so what I've done is a so

00:17:48,179 --> 00:17:55,720
it's the project is Fedora by karma and

00:17:51,480 --> 00:17:59,050
it it's basically a user interface for

00:17:55,720 --> 00:18:01,750
fedora easy karma which I guess most of

00:17:59,050 --> 00:18:04,480
you are familiar with what it does is

00:18:01,750 --> 00:18:06,280
like it connects with Bodhi and lists

00:18:04,480 --> 00:18:09,370
the packages that are available on both

00:18:06,280 --> 00:18:13,360
II and lets you post karma and basically

00:18:09,370 --> 00:18:20,320
that's that's pretty much it so let's go

00:18:13,360 --> 00:18:22,059
to project demo so this is what my

00:18:20,320 --> 00:18:25,870
application looks like looks like when

00:18:22,059 --> 00:18:28,410
it started up you have to first log it

00:18:25,870 --> 00:18:28,410
login

00:18:32,840 --> 00:18:40,640
I'm doing I'm logger I'm fetching the

00:18:35,780 --> 00:18:46,520
packages of old releases because I don't

00:18:40,640 --> 00:18:49,250
want to spam the new new ones so yeah it

00:18:46,520 --> 00:18:55,220
works I logged in so now what I'll do is

00:18:49,250 --> 00:18:58,160
I'll fetch packages yeah so Bodi servers

00:18:55,220 --> 00:19:01,670
are pretty slow right now so it takes a

00:18:58,160 --> 00:19:06,920
bit of time to read some packages then

00:19:01,670 --> 00:19:10,370
let's get python PI soft package I get

00:19:06,920 --> 00:19:16,490
the I get to post a comment so let's say

00:19:10,370 --> 00:19:20,330
I'll just post it works and karma 0-1 or

00:19:16,490 --> 00:19:22,930
one and then I'll just like zero are my

00:19:20,330 --> 00:19:22,930
and then some

00:19:25,490 --> 00:19:33,380
wait a second yeah and the car my poster

00:19:28,030 --> 00:19:35,810
can like fetch it again to get the leg a

00:19:33,380 --> 00:19:38,330
lot different Karma's that are already

00:19:35,810 --> 00:19:46,400
posted it it it should show your car my

00:19:38,330 --> 00:19:49,430
after like you fetch it again so like

00:19:46,400 --> 00:19:57,380
that's my it works basically yes

00:19:49,430 --> 00:19:59,860
and that's pretty much it what did I

00:19:57,380 --> 00:20:03,200
take away so before this I've never

00:19:59,860 --> 00:20:06,020
contributed to a community or a big

00:20:03,200 --> 00:20:11,900
project which has been already been like

00:20:06,020 --> 00:20:14,000
out there so and so like working with

00:20:11,900 --> 00:20:17,570
the community is a nice thing to do like

00:20:14,000 --> 00:20:20,240
it's it's nice I liked it and it was

00:20:17,570 --> 00:20:21,710
also nice working with people I I've

00:20:20,240 --> 00:20:23,660
never never met before

00:20:21,710 --> 00:20:25,730
so working I was working with someone

00:20:23,660 --> 00:20:39,350
through my mentor and like I've never

00:20:25,730 --> 00:20:40,370
met him before flock oh yeah good

00:20:39,350 --> 00:20:43,430
morning everyone

00:20:40,370 --> 00:20:45,770
so I'm Alicia Mahan P so I'm an outreach

00:20:43,430 --> 00:20:51,250
intern working on federal happiness

00:20:45,770 --> 00:20:53,200
packet I'm here to share my experience

00:20:51,250 --> 00:20:56,840
[Music]

00:20:53,200 --> 00:20:59,600
so what is happiness packet so federer

00:20:56,840 --> 00:21:02,650
happiness packet is a platform where we

00:20:59,600 --> 00:21:06,950
send emails and messages to people

00:21:02,650 --> 00:21:11,510
showcasing like sharing or love and

00:21:06,950 --> 00:21:15,110
gratitude for them then fedora happiness

00:21:11,510 --> 00:21:16,460
packet actually aim to make people feel

00:21:15,110 --> 00:21:19,820
good about themselves

00:21:16,460 --> 00:21:22,460
it's I know like you know in our culture

00:21:19,820 --> 00:21:24,470
like in fedora we actually do that but

00:21:22,460 --> 00:21:27,980
using fedora happiness packet we just

00:21:24,470 --> 00:21:31,250
make it bit explicit then we have

00:21:27,980 --> 00:21:34,610
happiness archiving out in our website

00:21:31,250 --> 00:21:37,070
which aims to like which is a kind of a

00:21:34,610 --> 00:21:40,009
hub where all the messages that mean

00:21:37,070 --> 00:21:44,990
Tseng is being showcased so we just need

00:21:40,009 --> 00:21:46,340
like the messages that are being sent in

00:21:44,990 --> 00:21:49,429
order to showcase in the happiness

00:21:46,340 --> 00:21:51,919
archive so the sender has to agree along

00:21:49,429 --> 00:21:56,630
with the recipient and then yeah it gets

00:21:51,919 --> 00:22:00,470
showcased then okay when we have the

00:21:56,630 --> 00:22:02,630
Liberty to showcase love and greetings

00:22:00,470 --> 00:22:06,289
we also have the freedom to use it

00:22:02,630 --> 00:22:09,289
wrongly so if we get an abusive message

00:22:06,289 --> 00:22:13,659
so we can blacklist the person who sent

00:22:09,289 --> 00:22:17,090
it we just report to the admins of

00:22:13,659 --> 00:22:19,250
fedora happiness packet and and what is

00:22:17,090 --> 00:22:21,980
an abusive message okay anything that

00:22:19,250 --> 00:22:24,710
this obeys federal code of conduct

00:22:21,980 --> 00:22:28,690
anything like any harsh comment or any

00:22:24,710 --> 00:22:34,029
hatred or any all the bad stuff is what

00:22:28,690 --> 00:22:37,190
is abusive message here so what are we

00:22:34,029 --> 00:22:40,309
like when we send a fedora happiness

00:22:37,190 --> 00:22:42,820
packet to someone then the message gets

00:22:40,309 --> 00:22:47,509
sent to the recipient via an email and

00:22:42,820 --> 00:22:50,269
it is and if the person agrees to

00:22:47,509 --> 00:22:51,710
showcase in the happiness archive along

00:22:50,269 --> 00:22:57,649
with the recipient then it gets

00:22:51,710 --> 00:22:59,870
showcased in the happiness archive so

00:22:57,649 --> 00:23:03,740
what I did in the project is that I

00:22:59,870 --> 00:23:06,529
implemented fed as user search user

00:23:03,740 --> 00:23:09,529
search where we can send a fedora

00:23:06,529 --> 00:23:11,779
happiness packet to any of the fast

00:23:09,529 --> 00:23:13,100
users by with the knowledge of only

00:23:11,779 --> 00:23:16,850
their fast user ID

00:23:13,100 --> 00:23:20,299
just drive the mails and name and we can

00:23:16,850 --> 00:23:22,460
send them happiness packets then more of

00:23:20,299 --> 00:23:26,360
my project was concerned with testing

00:23:22,460 --> 00:23:28,730
federal happiness packet so now we have

00:23:26,360 --> 00:23:30,289
a test coverage of almost 93 percent and

00:23:28,730 --> 00:23:34,370
I'm planning to increase in the

00:23:30,289 --> 00:23:36,830
forthcoming weights earlier fedora

00:23:34,370 --> 00:23:39,320
happiness packet was tested using

00:23:36,830 --> 00:23:42,379
Django's unit tests so I mean I created

00:23:39,320 --> 00:23:46,730
the test with high test which is really

00:23:42,379 --> 00:23:48,360
a good good platform then I also ensured

00:23:46,730 --> 00:23:53,159
that the test cases are

00:23:48,360 --> 00:23:56,100
and okay I got introduced to mocking and

00:23:53,159 --> 00:23:59,490
I tested the fast user search that

00:23:56,100 --> 00:24:04,620
implemented by using mocking with I test

00:23:59,490 --> 00:24:06,510
mark I also incorporated fed menu so

00:24:04,620 --> 00:24:07,919
that it gets connected to rest of the

00:24:06,510 --> 00:24:10,580
Fedora applications

00:24:07,919 --> 00:24:14,070
I also improved the discovery

00:24:10,580 --> 00:24:16,740
discoverability of the admin portal by

00:24:14,070 --> 00:24:19,740
incorporating it in the UI so that it

00:24:16,740 --> 00:24:22,679
can be more accessible okay

00:24:19,740 --> 00:24:25,919
now federer happiness packet is an Fork

00:24:22,679 --> 00:24:27,720
of happiness packet so the UI is very

00:24:25,919 --> 00:24:29,820
similar to the happiness packet and not

00:24:27,720 --> 00:24:32,730
consistent with the rest of the Fedora

00:24:29,820 --> 00:24:34,610
zy so I designed a fetch P for

00:24:32,730 --> 00:24:40,919
consistency with the rest of the fa2

00:24:34,610 --> 00:24:54,740
fedora apps that's those are my

00:24:40,919 --> 00:24:54,740
accomplishment now the good programming

00:24:55,700 --> 00:25:03,600
my takeaways were always the

00:25:01,409 --> 00:25:06,299
documentation does not come that handy

00:25:03,600 --> 00:25:08,909
so I referred lots and for a beginner

00:25:06,299 --> 00:25:12,630
logs come more handy and useful because

00:25:08,909 --> 00:25:15,899
we get a deeper insight and does not get

00:25:12,630 --> 00:25:19,260
lost in all those technical terms then I

00:25:15,899 --> 00:25:22,740
was very lucky to have an awesome mentor

00:25:19,260 --> 00:25:25,590
Justin who was very helpful and every

00:25:22,740 --> 00:25:32,700
time even I was very free to ask silly

00:25:25,590 --> 00:25:35,370
tout thanks Justin so what happened I

00:25:32,700 --> 00:25:37,649
asked Justin if I could incorporate a

00:25:35,370 --> 00:25:39,899
functionality and I thought if that

00:25:37,649 --> 00:25:42,149
functionality already present and Justin

00:25:39,899 --> 00:25:44,190
said if it's not we can ask them and

00:25:42,149 --> 00:25:46,679
Tanous to make that so it was easy I

00:25:44,190 --> 00:25:50,010
thought like how it could be but yeah

00:25:46,679 --> 00:25:53,190
there's always a way that what if I like

00:25:50,010 --> 00:25:55,110
the things we think that impossible that

00:25:53,190 --> 00:25:57,149
can be made actually we just need to

00:25:55,110 --> 00:26:00,620
minimize the gap between their existence

00:25:57,149 --> 00:26:04,309
and our knowledge of knowing it

00:26:00,620 --> 00:26:07,309
and also I feel rereading documentation

00:26:04,309 --> 00:26:09,590
is also handy because the first time we

00:26:07,309 --> 00:26:12,350
read documentation it's like it's very

00:26:09,590 --> 00:26:15,529
overwhelming for mine but as a beginner

00:26:12,350 --> 00:26:17,600
so every time I read the documentation I

00:26:15,529 --> 00:26:23,539
find something new something interesting

00:26:17,600 --> 00:26:31,429
and something worth learning so thank

00:26:23,539 --> 00:26:34,159
you now we have one more happiness

00:26:31,429 --> 00:26:36,679
packets presentation hello I'm Shraddha

00:26:34,159 --> 00:26:38,840
I was working on Federer happiness

00:26:36,679 --> 00:26:41,210
packets as well as Alicia just explained

00:26:38,840 --> 00:26:48,830
so I was working more in the backend and

00:26:41,210 --> 00:26:51,110
the day was part of it so my first job

00:26:48,830 --> 00:26:53,929
in this was to integrate batches into

00:26:51,110 --> 00:26:56,149
Federer happiness buckets I migrated it

00:26:53,929 --> 00:26:58,759
initially for a fairer happiness packets

00:26:56,149 --> 00:27:01,820
had fed message I migrated from fed

00:26:58,759 --> 00:27:04,009
message the new Federer messaging then I

00:27:01,820 --> 00:27:06,710
also made a pie pie package for the

00:27:04,009 --> 00:27:08,539
messaging module for the same I made an

00:27:06,710 --> 00:27:10,159
RPM package as well

00:27:08,539 --> 00:27:13,249
I made the yeah meal rules for the

00:27:10,159 --> 00:27:15,200
batches and while integrating federal

00:27:13,249 --> 00:27:17,990
messaging and making the RPM in the pie

00:27:15,200 --> 00:27:19,789
pie package I encountered some in the

00:27:17,990 --> 00:27:25,580
documentation like some editions that I

00:27:19,789 --> 00:27:28,850
could do which I also integrated in the

00:27:25,580 --> 00:27:31,369
backend features I made the web access I

00:27:28,850 --> 00:27:33,289
made the web interface for the sender

00:27:31,369 --> 00:27:37,340
and the received messages so that you

00:27:33,289 --> 00:27:39,590
could change the privacy settings I also

00:27:37,340 --> 00:27:42,950
migrated the entire application from

00:27:39,590 --> 00:27:45,820
fights in 2003 and from join Co 1.11 to

00:27:42,950 --> 00:27:45,820
django 2.0

00:27:48,890 --> 00:27:53,919
I wasn't expecting that thank you

00:27:54,110 --> 00:27:58,700
I also integrated the visible text

00:27:56,720 --> 00:28:02,090
editor so now you can like send fancy

00:27:58,700 --> 00:28:04,940
messages to I so during the development

00:28:02,090 --> 00:28:06,649
we had this really tiresome issue that

00:28:04,940 --> 00:28:09,890
we always had to build the containers

00:28:06,649 --> 00:28:12,350
again so I also made the auto reload

00:28:09,890 --> 00:28:14,899
code change so that it could be done

00:28:12,350 --> 00:28:18,250
like on the fly for the backend as well

00:28:14,899 --> 00:28:22,659
as the templates and I also made the

00:28:18,250 --> 00:28:24,980
custom admin interface as well as so

00:28:22,659 --> 00:28:26,450
automatically admin access to a couple

00:28:24,980 --> 00:28:29,090
of users which are in the config files

00:28:26,450 --> 00:28:31,120
that will be automatically given apart

00:28:29,090 --> 00:28:33,529
from all of that I was also working on

00:28:31,120 --> 00:28:35,779
deploying the entire application on

00:28:33,529 --> 00:28:38,510
OpenShift that is still under progress

00:28:35,779 --> 00:28:41,419
so I didn't put it up on the slides and

00:28:38,510 --> 00:28:43,279
yeah so my takeaways from the entire

00:28:41,419 --> 00:28:45,320
thing was I am NOT very good with

00:28:43,279 --> 00:28:48,950
communication with people even

00:28:45,320 --> 00:28:51,860
face-to-face so on a screen that was

00:28:48,950 --> 00:28:53,480
even more difficult but yeah Justin was

00:28:51,860 --> 00:28:55,789
an amazing mentor he made the

00:28:53,480 --> 00:28:57,110
communication very easy Jana if she's

00:28:55,789 --> 00:29:00,350
here she was awesome

00:28:57,110 --> 00:29:02,679
Alberto so I had great mentors which

00:29:00,350 --> 00:29:05,090
made that part really easy for me and

00:29:02,679 --> 00:29:07,669
documentation definitely I was working

00:29:05,090 --> 00:29:10,549
with many shift openshift Pythian 2 to

00:29:07,669 --> 00:29:12,350
Python 3 Django and a lot of that

00:29:10,549 --> 00:29:14,360
required documentation I had to look a

00:29:12,350 --> 00:29:16,429
couple of places for Fedora missing as

00:29:14,360 --> 00:29:17,899
well so whenever I encountered something

00:29:16,429 --> 00:29:20,090
which could be improved

00:29:17,899 --> 00:29:22,340
I definitely contributed to the

00:29:20,090 --> 00:29:24,860
documentation as well so yeah that was

00:29:22,340 --> 00:29:27,480
me thank you

00:29:24,860 --> 00:29:29,540
[Applause]

00:29:27,480 --> 00:29:29,540

YouTube URL: https://www.youtube.com/watch?v=hn2Cn6_vCxE


