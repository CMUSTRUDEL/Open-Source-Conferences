Title: Flock 2016 - Python Packaging in Fedora, Petr Viktorin
Publication date: 2016-08-21
Playlist: Flock 2016
Description: 
	Even though Fedora Workstation 23 shipped without Python 2 installed by default, the full transition to Python 3 is still going on. How are we doing on that? What still needs to be done, both upstream and in Fedora? And how you can help? And more importantly – how are we making life easier for future packagers? Now that Copr can build RPMs directly from the Python Package Index, will getting a Python library into Fedora be less of a chore? And how will system-python – an effort to slim down minimal installs – affect Python packaging?

https://flock2016.sched.org/event/6yp9/python-packaging-in-fedora

This video was recorded at the annual Fedora contributor conference, Flock, in Kraków, Poland, from August 2-5, 2016. You can learn more about Flock at https://flocktofedora.org.

#FlockToFedora

Slides: https://speakerdeck.com/encukou/python-packaging-in-fedora
Transcription: https://meetbot.fedoraproject.org/fedora-flock-chelmonski/2016-08-02/flock2016.2016-08-02-11.30.log.html
Captions: 
	00:00:00,000 --> 00:00:02,060
Oh

00:00:06,420 --> 00:00:22,840
it's fine all right hello Python fans if

00:00:15,100 --> 00:00:26,050
you're not a Python fam I well then

00:00:22,840 --> 00:00:28,240
welcome he will not be bored for the

00:00:26,050 --> 00:00:31,300
first five minutes so i will be talking

00:00:28,240 --> 00:00:33,550
about python packaging in fedora maybe

00:00:31,300 --> 00:00:36,460
you have seen this logo federer lost my

00:00:33,550 --> 00:00:40,899
call so I'll try to tell you what that

00:00:36,460 --> 00:00:44,979
means exactly first thing I'll be

00:00:40,899 --> 00:00:51,510
talking about is Python 3 so python is

00:00:44,979 --> 00:00:51,510
pretty old language older than Java and

00:00:51,809 --> 00:01:00,329
some years ago it turns out that the old

00:00:58,179 --> 00:01:04,089
baggage in the language was was

00:01:00,329 --> 00:01:07,570
accumulating so much that they needed to

00:01:04,089 --> 00:01:10,990
do a new version with with some

00:01:07,570 --> 00:01:14,140
backwards incompatibilities and that was

00:01:10,990 --> 00:01:17,500
Python 30 which was released eight years

00:01:14,140 --> 00:01:20,170
ago already been with us longer than for

00:01:17,500 --> 00:01:25,780
example an unfair so its pretty long

00:01:20,170 --> 00:01:28,990
time that was different then of course

00:01:25,780 --> 00:01:33,010
the evolutionists has gone on Python 3 5

00:01:28,990 --> 00:01:38,610
was released last year and a lot of the

00:01:33,010 --> 00:01:42,159
work between 5 30 and 35 was adding

00:01:38,610 --> 00:01:44,530
features to make it more compatible with

00:01:42,159 --> 00:01:47,429
do you live so if you tried boarding

00:01:44,530 --> 00:01:51,939
something to fight on 30 or 31 and

00:01:47,429 --> 00:01:54,310
realize that it's a very tough job then

00:01:51,939 --> 00:02:01,770
you might want to try again because it's

00:01:54,310 --> 00:02:05,140
gotten easier and another important date

00:02:01,770 --> 00:02:12,040
2020 is coming up when Python 2 will be

00:02:05,140 --> 00:02:14,670
officially unsupported upstream we'll

00:02:12,040 --> 00:02:17,140
see how that works out of course

00:02:14,670 --> 00:02:22,000
unsupported upstream means that somebody

00:02:17,140 --> 00:02:24,489
can still in pick it up and and support

00:02:22,000 --> 00:02:30,549
it further but it won't be me listen

00:02:24,489 --> 00:02:33,209
fedora so by 2020 we should we should

00:02:30,549 --> 00:02:39,670
have everything Tour de to find on 3 and

00:02:33,209 --> 00:02:42,220
running on the new version and if you

00:02:39,670 --> 00:02:46,420
look at the dates it's it's 12 years

00:02:42,220 --> 00:02:52,780
which for supporting a piece of software

00:02:46,420 --> 00:02:54,940
is pretty long time so we track the

00:02:52,780 --> 00:02:58,299
effort in fedora since we need to get

00:02:54,940 --> 00:03:00,790
done by 2020 we've created a website

00:02:58,299 --> 00:03:02,980
called the porting BB if you have

00:03:00,790 --> 00:03:06,160
internet you can look at it it's for the

00:03:02,980 --> 00:03:08,709
reporting DB dot XY Z unfortunately I

00:03:06,160 --> 00:03:11,069
don't have internet I was counting on

00:03:08,709 --> 00:03:13,690
that so i can show you but it's this

00:03:11,069 --> 00:03:16,720
colorful little dashboard that that

00:03:13,690 --> 00:03:19,959
shows you regardless one of using for

00:03:16,720 --> 00:03:21,880
modest because i came in about 20

00:03:19,959 --> 00:03:27,819
minutes earlier and it was open about

00:03:21,880 --> 00:03:32,919
didn't show up every Liam when are maybe

00:03:27,819 --> 00:03:35,730
I can give you local version usual all

00:03:32,919 --> 00:03:35,730
right so

00:03:36,190 --> 00:03:45,080
so you saw the URL before this is my

00:03:40,459 --> 00:03:46,850
local version I'll show you what all the

00:03:45,080 --> 00:03:49,490
graphs mean basically green means good

00:03:46,850 --> 00:03:53,959
the other colors mean we're not there

00:03:49,490 --> 00:03:56,810
yet so as you can see where go about

00:03:53,959 --> 00:04:01,070
about halfway down i'll talk more about

00:03:56,810 --> 00:04:04,070
it here he's like here's a graph from

00:04:01,070 --> 00:04:07,520
from the dashboard showing how how the

00:04:04,070 --> 00:04:13,040
how the effort evolved over time so this

00:04:07,520 --> 00:04:16,459
is i will be talking about that

00:04:13,040 --> 00:04:18,709
obviously so as you can see the the

00:04:16,459 --> 00:04:21,079
green part get keeps getting bigger and

00:04:18,709 --> 00:04:22,820
that's the proportion of packages that

00:04:21,079 --> 00:04:25,490
are ported to python 3 which means

00:04:22,820 --> 00:04:27,680
either there python 3 only in fedora or

00:04:25,490 --> 00:04:31,940
they have both Python 2 and iPhone free

00:04:27,680 --> 00:04:34,760
versions below that there's this little

00:04:31,940 --> 00:04:37,310
gray part thats packages that won't be

00:04:34,760 --> 00:04:39,620
ported but already have some kind of

00:04:37,310 --> 00:04:42,110
alternative in fedora so for example

00:04:39,620 --> 00:04:44,600
Python 2 would be in the gray part

00:04:42,110 --> 00:04:47,350
because that will be important time

00:04:44,600 --> 00:04:51,560
frame but it has a better alternative

00:04:47,350 --> 00:04:53,930
already then we have this yellow which

00:04:51,560 --> 00:04:58,700
is supposedly things people are working

00:04:53,930 --> 00:05:00,530
on but people marking something as

00:04:58,700 --> 00:05:02,419
working as being worked on doesn't

00:05:00,530 --> 00:05:05,500
really well and it work well in open

00:05:02,419 --> 00:05:08,479
source so don't rely on that too much

00:05:05,500 --> 00:05:10,970
this blue part is probably the most

00:05:08,479 --> 00:05:14,360
important for now it's packages that are

00:05:10,970 --> 00:05:16,280
already ported upstream so the the

00:05:14,360 --> 00:05:18,710
project has a Python free compatible

00:05:16,280 --> 00:05:21,590
version but it's not packaged in fedora

00:05:18,710 --> 00:05:26,660
yet we'll be talking more about that

00:05:21,590 --> 00:05:30,320
later the gray and red parts are things

00:05:26,660 --> 00:05:32,630
that are not good at upstream yet the

00:05:30,320 --> 00:05:34,860
red ones are things that are blocked by

00:05:32,630 --> 00:05:38,490
some dependency that's not good

00:05:34,860 --> 00:05:42,780
and the gray ones work and start on

00:05:38,490 --> 00:05:46,080
those right now it is the one so there's

00:05:42,780 --> 00:05:55,740
still quite a lot of things python to

00:05:46,080 --> 00:05:58,800
only upstream but where we're almost

00:05:55,740 --> 00:06:02,219
halfway there upstream so have the

00:05:58,800 --> 00:06:04,169
things in fedora which means there they

00:06:02,219 --> 00:06:07,020
have some standard of quality and some

00:06:04,169 --> 00:06:12,120
people care about them so half of those

00:06:07,020 --> 00:06:13,830
are boarded up stream however we're

00:06:12,120 --> 00:06:18,389
missing about a hundred and thirty

00:06:13,830 --> 00:06:21,419
packages to do to put them at fedora so

00:06:18,389 --> 00:06:27,930
this is a job for fedora packagers

00:06:21,419 --> 00:06:30,479
nobody else can do that and we'd like if

00:06:27,930 --> 00:06:34,319
if everybody chipped in and tried to

00:06:30,479 --> 00:06:37,949
help us port if you go to the porting DB

00:06:34,319 --> 00:06:41,250
again you'll get a guide to how to do

00:06:37,949 --> 00:06:43,319
that if you port a point on package to

00:06:41,250 --> 00:06:45,930
python 3 and fedora you'll get a badge

00:06:43,319 --> 00:06:53,460
if you poured more than you'll get more

00:06:45,930 --> 00:06:56,610
badges so it's it's quite fun actually

00:06:53,460 --> 00:07:00,560
maybe not the first time but you know

00:06:56,610 --> 00:07:00,560
learning all the all the new guidelines

00:07:00,860 --> 00:07:09,150
but if you do one or three packages it

00:07:04,199 --> 00:07:11,969
becomes quite easy and of course if you

00:07:09,150 --> 00:07:13,910
maintain something federal rights it's

00:07:11,969 --> 00:07:20,130
better to learn the new guys

00:07:13,910 --> 00:07:22,380
put it on three right then I'll go back

00:07:20,130 --> 00:07:25,200
to the things that are not ported even

00:07:22,380 --> 00:07:29,220
upstream which is a bit of a problem

00:07:25,200 --> 00:07:34,590
because they tend to be sometimes things

00:07:29,220 --> 00:07:36,030
that that might not make it into 20-21

00:07:34,590 --> 00:07:38,850
category of that is fedora

00:07:36,030 --> 00:07:44,010
infrastructure there has been a lot of

00:07:38,850 --> 00:07:46,080
work on that actually recently but still

00:07:44,010 --> 00:07:48,419
it's work that's only federal people can

00:07:46,080 --> 00:07:52,950
do nobody else will probably work on

00:07:48,419 --> 00:07:56,000
coccio or body so if you want to help

00:07:52,950 --> 00:08:00,200
that's that's an area to do at home

00:07:56,000 --> 00:08:06,470
another big areas desktop tool kits gtk2

00:08:00,200 --> 00:08:09,120
will never support python 3 they move to

00:08:06,470 --> 00:08:12,960
to a new mechanism kochi object

00:08:09,120 --> 00:08:15,630
introspection in gtk3 so every package

00:08:12,960 --> 00:08:18,140
needs to be ported to GTA 3 and then it

00:08:15,630 --> 00:08:25,169
will presumably get python3 support

00:08:18,140 --> 00:08:31,200
automatically in some way but porting to

00:08:25,169 --> 00:08:33,150
you from jin k 2 to 3 is is difficult at

00:08:31,200 --> 00:08:35,700
times and it's something that python

00:08:33,150 --> 00:08:38,820
people can't really help with so I'm a

00:08:35,700 --> 00:08:40,620
bit worried that this this magical time

00:08:38,820 --> 00:08:45,180
line we have will not be met by the

00:08:40,620 --> 00:08:49,440
weather gtk people also wxwidgets the

00:08:45,180 --> 00:08:52,430
python bindings there are bits but slow

00:08:49,440 --> 00:08:55,530
currently although i think work has been

00:08:52,430 --> 00:08:57,990
done there as well there's the sugar

00:08:55,530 --> 00:09:02,010
desktop where there are just talks about

00:08:57,990 --> 00:09:04,790
according to python 3 and gtk3 but they

00:09:02,010 --> 00:09:07,550
really like manpower so if you like

00:09:04,790 --> 00:09:11,510
uh desktops for kids that's that's a

00:09:07,550 --> 00:09:14,270
good way to to contribute and then of

00:09:11,510 --> 00:09:16,490
course there are big apps where the

00:09:14,270 --> 00:09:20,000
programmers aren't really Python people

00:09:16,490 --> 00:09:23,630
because if you have a package like

00:09:20,000 --> 00:09:26,150
Django or or numpy or something like

00:09:23,630 --> 00:09:29,090
that the programmers know python they

00:09:26,150 --> 00:09:31,250
know that python 3 is better language so

00:09:29,090 --> 00:09:33,380
there they have more incentives to port

00:09:31,250 --> 00:09:35,930
but if you develop something like

00:09:33,380 --> 00:09:40,610
which only has python bindings and lets

00:09:35,930 --> 00:09:42,710
other people use python you might not be

00:09:40,610 --> 00:09:45,620
you might not have that much incentive

00:09:42,710 --> 00:09:49,150
to go and do the work same goes for

00:09:45,620 --> 00:09:52,100
samba which I'm currently working on

00:09:49,150 --> 00:09:55,010
also the developers don't really care

00:09:52,100 --> 00:09:58,820
that much we'll see how that develops

00:09:55,010 --> 00:10:02,840
once once the deadline draws draws

00:09:58,820 --> 00:10:08,660
closer but those are the big problems

00:10:02,840 --> 00:10:10,460
upstream all right by the way if you

00:10:08,660 --> 00:10:12,410
have any questions some I'm happy to

00:10:10,460 --> 00:10:17,230
jump now I'm happy to take them during

00:10:12,410 --> 00:10:17,230
the talk about

00:10:24,350 --> 00:10:30,360
also Portuguese or paper also like

00:10:27,630 --> 00:10:34,230
foundation is around 20 s yeah lack of

00:10:30,360 --> 00:10:37,070
documentation in gtk3 personally

00:10:34,230 --> 00:10:39,600
whenever I wanted to find some kind of

00:10:37,070 --> 00:10:42,779
examples specifically a fight on example

00:10:39,600 --> 00:10:47,970
where gtk either two or three it was

00:10:42,779 --> 00:10:52,519
pretty hidden but I don't know why

00:10:47,970 --> 00:10:54,449
haven't I haven't really so a

00:10:52,519 --> 00:10:59,279
documentation that might be a problem

00:10:54,449 --> 00:11:03,630
project so let's move from Python free

00:10:59,279 --> 00:11:07,649
to another thing that we're doing in

00:11:03,630 --> 00:11:09,029
fedora if you're a packager you should

00:11:07,649 --> 00:11:10,860
know what a packager should do you

00:11:09,029 --> 00:11:14,610
should make sure that the software

00:11:10,860 --> 00:11:16,920
doesn't show too many ads and doesn't

00:11:14,610 --> 00:11:19,230
track people stuff like that you should

00:11:16,920 --> 00:11:21,540
make sure it integrates with the rest of

00:11:19,230 --> 00:11:23,760
the system doesn't conflict with any

00:11:21,540 --> 00:11:26,760
other packages to check that the

00:11:23,760 --> 00:11:28,769
licenses or check out and this is why we

00:11:26,760 --> 00:11:31,230
package them this is why we make a

00:11:28,769 --> 00:11:33,360
distribution this is why we curate the

00:11:31,230 --> 00:11:36,209
set of packages that are available to

00:11:33,360 --> 00:11:40,290
people unfortunately if you want to be

00:11:36,209 --> 00:11:42,990
packager you also need to read a lot of

00:11:40,290 --> 00:11:46,190
documentation most of which doesn't

00:11:42,990 --> 00:11:48,600
really apply to you and you also need to

00:11:46,190 --> 00:11:51,240
know how to write spec files which

00:11:48,600 --> 00:11:53,249
honestly is literally ancient black

00:11:51,240 --> 00:11:56,050
magic

00:11:53,249 --> 00:11:57,670
and that is a problem that is why we

00:11:56,050 --> 00:11:59,740
don't have enough packages because

00:11:57,670 --> 00:12:03,579
people don't just go and i'll make a

00:11:59,740 --> 00:12:06,459
package in the derive them they get two

00:12:03,579 --> 00:12:10,350
points four and five and they say so

00:12:06,459 --> 00:12:10,350
maybe i'll leave that to somebody else i

00:12:11,309 --> 00:12:18,399
mean if you just want to start the spec

00:12:16,509 --> 00:12:23,290
file isn't that hard you just copy it

00:12:18,399 --> 00:12:27,009
from somewhere put in put in the values

00:12:23,290 --> 00:12:32,889
that are that are relevant to your

00:12:27,009 --> 00:12:34,689
package the now you yes I get you can if

00:12:32,889 --> 00:12:36,910
you if you read the documentation

00:12:34,689 --> 00:12:38,800
carefully you may find that there's a

00:12:36,910 --> 00:12:43,600
tool that gives you a template good

00:12:38,800 --> 00:12:45,639
point yes do you need to read the

00:12:43,600 --> 00:12:47,889
guidelines and that's what beginners

00:12:45,639 --> 00:12:50,230
don't do unfortunately but yeah then

00:12:47,889 --> 00:12:56,439
there's a template but most people so

00:12:50,230 --> 00:12:58,929
copy yeah unfortunately what happens

00:12:56,439 --> 00:13:01,059
when you when you copy stuff you also

00:12:58,929 --> 00:13:05,829
copy over things that somebody had it

00:13:01,059 --> 00:13:09,370
for old versions of non Fedora systems

00:13:05,829 --> 00:13:12,160
and things that were that were useful

00:13:09,370 --> 00:13:15,249
five years ago and nobody understand

00:13:12,160 --> 00:13:18,790
that's that anymore and I do it gives my

00:13:15,249 --> 00:13:22,449
job but the hook not a lot of people

00:13:18,790 --> 00:13:29,170
understands this in it and can you just

00:13:22,449 --> 00:13:32,709
delete this probably what we'll break

00:13:29,170 --> 00:13:36,459
well you yeah if you don't that's not

00:13:32,709 --> 00:13:41,649
the most efficient way or you can just

00:13:36,459 --> 00:13:43,930
kinda waiting if you see what works yeah

00:13:41,649 --> 00:13:46,329
I mean if you're an experienced packager

00:13:43,930 --> 00:13:49,480
you can you know where to go and ask for

00:13:46,329 --> 00:13:53,920
help but again if you're just starting

00:13:49,480 --> 00:13:56,649
out it's it it's pretty hard now I'll

00:13:53,920 --> 00:13:59,889
compare that to python pythons native

00:13:56,649 --> 00:14:02,769
sit up which is set of that pie it again

00:13:59,889 --> 00:14:07,570
starts out pretty pretty easy it's just

00:14:02,769 --> 00:14:10,570
five on syntax and if you want to make

00:14:07,570 --> 00:14:12,459
something more complicated then you just

00:14:10,570 --> 00:14:14,380
write some Python which you presumably

00:14:12,459 --> 00:14:19,060
already know because you're making a

00:14:14,380 --> 00:14:21,160
python application so surprise surprise

00:14:19,060 --> 00:14:27,880
developers are doing this instead of

00:14:21,160 --> 00:14:31,660
making packages for fedora now another

00:14:27,880 --> 00:14:33,730
problem with with RPM and the display

00:14:31,660 --> 00:14:36,220
files is that that way they were made

00:14:33,730 --> 00:14:38,290
for an era where when software was

00:14:36,220 --> 00:14:41,050
distributed by putting a tarball

00:14:38,290 --> 00:14:43,029
somewhere on the internet and then the

00:14:41,050 --> 00:14:46,380
packager had to figure out what has to

00:14:43,029 --> 00:14:52,000
be done to install it and build it and

00:14:46,380 --> 00:14:54,820
integrated all that stuff now we're at

00:14:52,000 --> 00:14:56,440
least were by phone at least trying to

00:14:54,820 --> 00:14:59,050
have some kind of structured metadata

00:14:56,440 --> 00:15:01,720
and a standard way to install the

00:14:59,050 --> 00:15:05,500
software on all kinds of system and make

00:15:01,720 --> 00:15:07,449
it integrators as well as it can be done

00:15:05,500 --> 00:15:09,370
from within the language of course it's

00:15:07,449 --> 00:15:12,790
not perfect but there there are efforts

00:15:09,370 --> 00:15:15,399
to do that so we have structured

00:15:12,790 --> 00:15:17,260
metadata for every package for almost

00:15:15,399 --> 00:15:19,209
every Python package then we have a

00:15:17,260 --> 00:15:23,709
standard place to put those packages

00:15:19,209 --> 00:15:26,350
which is by PR so at least some of the

00:15:23,709 --> 00:15:29,920
things that packages do could be

00:15:26,350 --> 00:15:32,110
automated and that's where 50 rpm comes

00:15:29,920 --> 00:15:34,490
in which is a package thank you install

00:15:32,110 --> 00:15:38,380
you run it on a pack

00:15:34,490 --> 00:15:43,100
on 5e I and it gives you a spec file and

00:15:38,380 --> 00:15:47,330
it's magic and it's perfect yeah it it's

00:15:43,100 --> 00:15:50,529
still in development so it might not

00:15:47,330 --> 00:15:53,839
give you a fully functioning package it

00:15:50,529 --> 00:15:55,310
will most likely not give you a package

00:15:53,839 --> 00:15:58,910
that will make it through review at

00:15:55,310 --> 00:16:02,209
least if you get a good review but we're

00:15:58,910 --> 00:16:03,770
starting out this is this is probably

00:16:02,209 --> 00:16:09,709
the way to go this is probably better

00:16:03,770 --> 00:16:12,050
than a template this one then go to the

00:16:09,709 --> 00:16:13,760
other just if it's been formed become

00:16:12,050 --> 00:16:16,040
full functional done but what do you

00:16:13,760 --> 00:16:17,720
have to be a problem just a faster

00:16:16,040 --> 00:16:21,709
process to make a lot of punishing

00:16:17,720 --> 00:16:23,720
timeliness you know what is the more

00:16:21,709 --> 00:16:26,180
reliable to focus on me the other

00:16:23,720 --> 00:16:29,420
packages but if expansion is also an

00:16:26,180 --> 00:16:32,600
important right I don't think I got a

00:16:29,420 --> 00:16:34,850
question you know I interested it's like

00:16:32,600 --> 00:16:36,260
a satis- trying to say if it's going to

00:16:34,850 --> 00:16:39,320
be better if you finish this baggage

00:16:36,260 --> 00:16:41,690
becomes a functional about the GV spec

00:16:39,320 --> 00:16:47,060
file we actually needed the whole Canyon

00:16:41,690 --> 00:16:48,470
plan well it's it's probably never guess

00:16:47,060 --> 00:16:51,170
it's what are we never going to be full

00:16:48,470 --> 00:16:53,329
affectional also another problem is that

00:16:51,170 --> 00:16:56,450
this metadata is not complete in all

00:16:53,329 --> 00:16:58,520
cases the good thing there is that it's

00:16:56,450 --> 00:17:00,890
open source so we can actually go in and

00:16:58,520 --> 00:17:04,339
say pick to RP and it's this kind of

00:17:00,890 --> 00:17:06,709
metadata added to whatever Python users

00:17:04,339 --> 00:17:10,920
are going to stem appliance that was you

00:17:06,709 --> 00:17:14,070
can apply to her whole respect I dinner

00:17:10,920 --> 00:17:18,990
this would make my work yes my other

00:17:14,070 --> 00:17:21,030
than focus on this way okay this is what

00:17:18,990 --> 00:17:24,030
we are trying to do Cooper get through

00:17:21,030 --> 00:17:29,150
the garden maybe attract rather the

00:17:24,030 --> 00:17:33,030
whole body I and we used for 52 RPM

00:17:29,150 --> 00:17:38,640
council also can we were finding common

00:17:33,030 --> 00:17:41,010
errors and problems and we report it if

00:17:38,640 --> 00:17:46,470
you are p.m. making our my foots

00:17:41,010 --> 00:17:49,010
disappear so we were fixing that so we

00:17:46,470 --> 00:17:52,440
are trying to lose at least my work

00:17:49,010 --> 00:17:58,650
right now to find out and color patterns

00:17:52,440 --> 00:18:02,730
and not all those 70,000 Peggy modules

00:17:58,650 --> 00:18:06,000
will be able to Peggy but it's some

00:18:02,730 --> 00:18:08,430
small issue it will get us honey yeah

00:18:06,000 --> 00:18:10,350
I'm working cookies so we are trying to

00:18:08,430 --> 00:18:14,130
work on that it will be probably never

00:18:10,350 --> 00:18:16,800
one hundred percent right okay but we

00:18:14,130 --> 00:18:21,240
will probably give you a hundred

00:18:16,800 --> 00:18:24,540
thousand of piggies yeah we somehow work

00:18:21,240 --> 00:18:27,840
which may be for a lot of people enough

00:18:24,540 --> 00:18:30,810
eighty percent is really great for my

00:18:27,840 --> 00:18:33,870
bar so now now when we have the metadata

00:18:30,810 --> 00:18:38,490
and the common place where the packages

00:18:33,870 --> 00:18:40,710
are we can do exactly that why exactly

00:18:38,490 --> 00:18:44,400
are we doing that one reason is to just

00:18:40,710 --> 00:18:46,230
fit to uh p.m. giving an algorithm all

00:18:44,400 --> 00:18:48,360
possible inputs it needs to work all

00:18:46,230 --> 00:18:51,990
this it's a pretty good test suite I

00:18:48,360 --> 00:18:54,570
think I think in the future we should

00:18:51,990 --> 00:18:56,460
also use it to run upstream tests when I

00:18:54,570 --> 00:18:59,520
was at PyCon people were complaining

00:18:56,460 --> 00:19:03,480
that if you have for example Django and

00:18:59,520 --> 00:19:05,690
a django plugin then testing if one

00:19:03,480 --> 00:19:08,430
still works when the other is upgraded

00:19:05,690 --> 00:19:11,720
isn't really something the tooling

00:19:08,430 --> 00:19:15,060
around github can do and I think that a

00:19:11,720 --> 00:19:17,680
distribution is conceptually pretty good

00:19:15,060 --> 00:19:21,070
place for this kind of integration tests

00:19:17,680 --> 00:19:22,620
so combining this with coffee or

00:19:21,070 --> 00:19:26,500
something like that to detect these

00:19:22,620 --> 00:19:28,990
changes rerun the tests should be a good

00:19:26,500 --> 00:19:32,380
service not only to fedora but for the

00:19:28,990 --> 00:19:35,320
whole community and of course this will

00:19:32,380 --> 00:19:39,190
has to work first so a bit of a future

00:19:35,320 --> 00:19:41,530
future plan and we can provide a

00:19:39,190 --> 00:19:44,370
repository so if you want to get

00:19:41,530 --> 00:19:48,100
packages straight from ipi but not ease

00:19:44,370 --> 00:19:51,880
not use wheels but use our pms you'll be

00:19:48,100 --> 00:19:55,240
able to do that although niels Lewis all

00:19:51,880 --> 00:19:58,120
the things that's a human packager even

00:19:55,240 --> 00:20:01,290
package sure does also might not be the

00:19:58,120 --> 00:20:01,290
best idea to do it

00:20:03,610 --> 00:20:10,429
now when you have a repository you can

00:20:07,720 --> 00:20:13,519
theoretically write a dnf plug-in that

00:20:10,429 --> 00:20:16,450
will emulate what the Python packet

00:20:13,519 --> 00:20:19,549
python its dollar does and install

00:20:16,450 --> 00:20:23,990
fedora packages from your requirements

00:20:19,549 --> 00:20:26,480
doc txt file to do this you have to

00:20:23,990 --> 00:20:29,330
solve one more problem which is mapping

00:20:26,480 --> 00:20:33,380
the names they use on faith ipi to

00:20:29,330 --> 00:20:43,880
fedora which differ in lots of weird

00:20:33,380 --> 00:20:46,250
ways they they do because the pipe of

00:20:43,880 --> 00:20:49,309
the distribution name or the fight p i9

00:20:46,250 --> 00:20:52,460
is not always actually the name of the

00:20:49,309 --> 00:20:55,730
project itself and Fedora prefers to

00:20:52,460 --> 00:20:58,309
have the name of the project and there

00:20:55,730 --> 00:21:01,039
are historical incompatibilities between

00:20:58,309 --> 00:21:05,659
the names so it's better to keep them

00:21:01,039 --> 00:21:09,380
separate however we can add a virtual

00:21:05,659 --> 00:21:11,929
provides to every every Python package

00:21:09,380 --> 00:21:15,200
that says I'm providing this Python

00:21:11,929 --> 00:21:18,230
distribution so when you do that dnf pip

00:21:15,200 --> 00:21:21,080
install it can look at that and install

00:21:18,230 --> 00:21:24,529
this vertical provide the good news

00:21:21,080 --> 00:21:26,889
there is that's already done in 425 so

00:21:24,529 --> 00:21:31,669
if you have a package in fedora 25 and

00:21:26,889 --> 00:21:34,039
it uses standard Python installation it

00:21:31,669 --> 00:21:37,159
should have that provides already in

00:21:34,039 --> 00:21:39,940
there if it doesn't then it's in our

00:21:37,159 --> 00:21:48,050
pian bug yes thanks

00:21:39,940 --> 00:21:51,560
so things are looking better now I'd

00:21:48,050 --> 00:21:56,330
like to talk a bit about packaging fight

00:21:51,560 --> 00:21:58,520
on itself and rather than libraries for

00:21:56,330 --> 00:22:01,400
Python so we did this thing called

00:21:58,520 --> 00:22:03,040
system Python which is something you'll

00:22:01,400 --> 00:22:09,230
probably already have on your computer

00:22:03,040 --> 00:22:12,410
run I lives in live exact and and it

00:22:09,230 --> 00:22:15,230
came ever Bennifer to minimize the size

00:22:12,410 --> 00:22:18,440
of the minimal install if you look at

00:22:15,230 --> 00:22:20,870
the Python standard library a lot of

00:22:18,440 --> 00:22:22,520
this it is unneeded stuff there of

00:22:20,870 --> 00:22:25,130
course tests which you don't need at

00:22:22,520 --> 00:22:28,460
runtime there's lib do 23 which is

00:22:25,130 --> 00:22:30,110
development only there's I believe which

00:22:28,460 --> 00:22:33,590
is graphical you probably don't know

00:22:30,110 --> 00:22:35,450
need that in the cloud and now some of

00:22:33,590 --> 00:22:38,990
this like the graphical stuff and the

00:22:35,450 --> 00:22:41,090
tests are already separated so you don't

00:22:38,990 --> 00:22:43,100
get those in a minimal install but

00:22:41,090 --> 00:22:47,330
things like installation tools and

00:22:43,100 --> 00:22:49,670
development tools are still in there so

00:22:47,330 --> 00:22:54,770
what we did is split them out and when

00:22:49,670 --> 00:22:56,960
you install the system Python you get

00:22:54,770 --> 00:23:00,980
just a subset of the Python standard

00:22:56,960 --> 00:23:04,250
library so you use this this binary in

00:23:00,980 --> 00:23:07,970
your shebang you do some kind of macro

00:23:04,250 --> 00:23:13,040
magic in the in the spec file to remove

00:23:07,970 --> 00:23:15,050
the normal Python dependencies and then

00:23:13,040 --> 00:23:17,470
you will not drag in all of the all of

00:23:15,050 --> 00:23:22,820
the standard library with feel package

00:23:17,470 --> 00:23:24,650
this is probably useful only justified

00:23:22,820 --> 00:23:27,620
dnf and coordinate at the moment and

00:23:24,650 --> 00:23:29,540
we're trying to talk to them to to

00:23:27,620 --> 00:23:32,410
switch to system by console can actually

00:23:29,540 --> 00:23:32,410
get the size reduction

00:23:32,860 --> 00:23:41,900
in the future this might be used to

00:23:37,580 --> 00:23:44,090
isolate system tools from changes that

00:23:41,900 --> 00:23:48,290
the user does to the system for example

00:23:44,090 --> 00:23:50,390
if you do if you upgrade some kind of

00:23:48,290 --> 00:23:52,750
system right very using PIP which you

00:23:50,390 --> 00:23:56,540
shouldn't do what people still do it

00:23:52,750 --> 00:24:01,040
this might be useful to isolate to stuff

00:23:56,540 --> 00:24:04,700
like dnf so that it doesn't break but

00:24:01,040 --> 00:24:07,010
again that's that's future and probably

00:24:04,700 --> 00:24:11,320
what the name system Python implies more

00:24:07,010 --> 00:24:16,000
than more than reduce static library but

00:24:11,320 --> 00:24:16,000
so far we have we have this in fedora

00:24:16,600 --> 00:24:23,179
yeah so some technical details the

00:24:20,690 --> 00:24:25,870
illustration of how it works when you

00:24:23,179 --> 00:24:28,730
install system Python you only get

00:24:25,870 --> 00:24:30,890
important stuff when you install

00:24:28,730 --> 00:24:36,799
something that needs the whole Python

00:24:30,890 --> 00:24:42,940
you get all of that plus the development

00:24:36,799 --> 00:24:42,940
and installation tools documentation

00:24:43,920 --> 00:24:52,450
does that make sense and now we recharge

00:24:47,800 --> 00:24:55,260
libraries for this evening you can reach

00:24:52,450 --> 00:25:00,640
our libraries to for the system python

00:24:55,260 --> 00:25:03,640
like when our libraries it's a proper

00:25:00,640 --> 00:25:06,270
subset of psychosis that's the subset so

00:25:03,640 --> 00:25:10,030
if if your program doesn't need these

00:25:06,270 --> 00:25:11,710
these development and whatever is not

00:25:10,030 --> 00:25:15,460
there then you can just switch the

00:25:11,710 --> 00:25:17,110
system Python cap need anything else

00:25:15,460 --> 00:25:22,320
that you need to depend on from the

00:25:17,110 --> 00:25:24,400
bottom but the problem is the test now

00:25:22,320 --> 00:25:26,080
splitting the standard library is

00:25:24,400 --> 00:25:30,010
something that Python for developers

00:25:26,080 --> 00:25:32,710
don't really anticipate federer already

00:25:30,010 --> 00:25:35,260
doesn't like it splits out the test

00:25:32,710 --> 00:25:37,270
module because it's giant splits out the

00:25:35,260 --> 00:25:42,850
graphical stuff because that would bring

00:25:37,270 --> 00:25:44,500
out and text dependencies so but that's

00:25:42,850 --> 00:25:47,200
something that fit around at the end and

00:25:44,500 --> 00:25:51,190
all the description this is something

00:25:47,200 --> 00:25:53,980
that is not that well supported on

00:25:51,190 --> 00:25:56,970
street so the testing for it is it is

00:25:53,980 --> 00:25:59,860
much harder I wouldn't recommend

00:25:56,970 --> 00:26:03,550
actually switching to system Python for

00:25:59,860 --> 00:26:07,290
a random package yes they supported

00:26:03,550 --> 00:26:09,150
upstream or discouraged

00:26:07,290 --> 00:26:12,900
they weren't very happy about the idea

00:26:09,150 --> 00:26:16,140
of doing ah yes that was there was a

00:26:12,900 --> 00:26:21,240
pretty long discussion about about doing

00:26:16,140 --> 00:26:24,300
that you having read no strings I did it

00:26:21,240 --> 00:26:30,090
was long and rambling one argument in

00:26:24,300 --> 00:26:31,890
our favor is that Python already already

00:26:30,090 --> 00:26:33,510
if you build Python without some

00:26:31,890 --> 00:26:38,120
dependencies that the corresponding

00:26:33,510 --> 00:26:40,650
modules will just be missing and there

00:26:38,120 --> 00:26:45,810
yeah so Python already does something

00:26:40,650 --> 00:26:48,990
like this so yeah and about it being

00:26:45,810 --> 00:26:51,390
supported well python is community

00:26:48,990 --> 00:26:54,420
supported so if debian does it and

00:26:51,390 --> 00:26:56,010
Fedora does it an art does it then it's

00:26:54,420 --> 00:26:58,650
pretty much supported because there are

00:26:56,010 --> 00:27:00,750
pythons it a core developers in all the

00:26:58,650 --> 00:27:07,050
communities do those just do it the same

00:27:00,750 --> 00:27:09,990
way ah the test and and graphics I think

00:27:07,050 --> 00:27:13,590
they both there's not many ways to do

00:27:09,990 --> 00:27:15,390
that I don't mean to be registers debian

00:27:13,590 --> 00:27:17,610
has something called I think many more

00:27:15,390 --> 00:27:20,280
python that does something similar to

00:27:17,610 --> 00:27:23,490
this we specifically chose not to do it

00:27:20,280 --> 00:27:26,360
the same as if they do because there is

00:27:23,490 --> 00:27:26,360
some problem with that

00:27:26,780 --> 00:27:30,710
open up your articles

00:27:31,020 --> 00:27:36,700
simply open wrt packages also has some

00:27:34,800 --> 00:27:38,860
surface minimum

00:27:36,700 --> 00:27:42,610
54 countries like that is amazing three

00:27:38,860 --> 00:27:45,000
section right now so so my plan for for

00:27:42,610 --> 00:27:48,130
kind of long-term future is to actually

00:27:45,000 --> 00:27:52,240
make a supported way to do this upstream

00:27:48,130 --> 00:27:54,400
so you can choose what pieces of the

00:27:52,240 --> 00:27:56,830
standard library you want and have some

00:27:54,400 --> 00:27:59,460
good error reporting for the case where

00:27:56,830 --> 00:28:02,700
you should install something extra this

00:27:59,460 --> 00:28:08,680
the current place is pretty bad but

00:28:02,700 --> 00:28:11,710
we're doing what we want if we keep it

00:28:08,680 --> 00:28:14,970
to these two packages and test them and

00:28:11,710 --> 00:28:17,830
help them help them with with migrating

00:28:14,970 --> 00:28:23,350
it should it should serve as it as a

00:28:17,830 --> 00:28:26,620
good experiment about about how this

00:28:23,350 --> 00:28:29,470
finding has can be done as well so at

00:28:26,620 --> 00:28:33,850
least that hopefully it will give us

00:28:29,470 --> 00:28:36,160
some actual actual benefits as well the

00:28:33,850 --> 00:28:39,330
the size reduction is pretty good for

00:28:36,160 --> 00:28:39,330
the cloud image

00:28:42,250 --> 00:28:48,610
rent another part of my talk is about

00:28:45,820 --> 00:28:53,260
Python 36 which is the upcoming version

00:28:48,610 --> 00:28:57,780
of Python from the features point of

00:28:53,260 --> 00:29:01,090
view it's it's not it's not done yet but

00:28:57,780 --> 00:29:02,680
for the hobbyist programmer I guess

00:29:01,090 --> 00:29:05,170
there are no laws that make changes

00:29:02,680 --> 00:29:07,330
there are format strings so there

00:29:05,170 --> 00:29:12,490
another way to for my strings in Python

00:29:07,330 --> 00:29:15,490
I think it's the third now you can you

00:29:12,490 --> 00:29:17,290
can just try to string and use variables

00:29:15,490 --> 00:29:19,960
in it and you don't have to repeat the

00:29:17,290 --> 00:29:23,050
variable name so many times so it's

00:29:19,960 --> 00:29:25,470
pretty useful once you get used to it so

00:29:23,050 --> 00:29:31,930
hopeful it'll anti-smoking the switch

00:29:25,470 --> 00:29:34,000
excuse me our years 25 years in three

00:29:31,930 --> 00:29:35,650
iterations of a string interpolation to

00:29:34,000 --> 00:29:39,700
get to know whole string interpolation

00:29:35,650 --> 00:29:42,040
that yeah we're used oh yeah I mean it

00:29:39,700 --> 00:29:46,440
still looks pretty magic and I've done

00:29:42,040 --> 00:29:46,440
pythonic to most people but it's pretty

00:29:47,870 --> 00:29:58,160
I totally disagree with the concept of

00:29:51,410 --> 00:30:01,010
Python Accords oh cool yeah it's a tool

00:29:58,160 --> 00:30:06,140
and practicality feeds purity so there

00:30:01,010 --> 00:30:08,630
we go another thing is the you might be

00:30:06,140 --> 00:30:10,970
familiar with bytecode by falcon power

00:30:08,630 --> 00:30:13,940
source code white coat then interprets

00:30:10,970 --> 00:30:16,460
that byte code is gone it's replaced by

00:30:13,940 --> 00:30:19,870
word code which is like white pant but

00:30:16,460 --> 00:30:24,400
better it brings a pretty big speed up

00:30:19,870 --> 00:30:29,960
there are also planned speed ups for

00:30:24,400 --> 00:30:32,030
dictionary access and optimizations but

00:30:29,960 --> 00:30:34,040
it's not clear that they'll actually

00:30:32,030 --> 00:30:37,010
actually make it to fight on greece's

00:30:34,040 --> 00:30:42,020
but expect to expect some pretty big

00:30:37,010 --> 00:30:44,510
speed ups like tens of percent and if

00:30:42,020 --> 00:30:48,910
you're making a library like Jaguar and

00:30:44,510 --> 00:30:52,429
more or sequel alchemy or some kind of

00:30:48,910 --> 00:30:55,100
magic class class creation think there

00:30:52,429 --> 00:30:57,350
are some pretty useful tools there I'll

00:30:55,100 --> 00:31:01,730
not go into details about to read the

00:30:57,350 --> 00:31:03,770
release notes I've people that are

00:31:01,730 --> 00:31:06,440
really deep into Python word we're

00:31:03,770 --> 00:31:10,700
pretty happy with these I reckon

00:31:06,440 --> 00:31:14,509
reading done so how does Python 36 line

00:31:10,700 --> 00:31:17,090
work with fedora the Alpha priests was a

00:31:14,509 --> 00:31:20,509
few months before fedora alfin freeze

00:31:17,090 --> 00:31:24,049
pretty good the problem is pythons alpha

00:31:20,509 --> 00:31:30,950
phase is a lot longer than fit over us

00:31:24,049 --> 00:31:34,759
so the better freezes were were a lot

00:31:30,950 --> 00:31:37,519
closer together and the first release

00:31:34,759 --> 00:31:40,399
candidate will unfortunately come two

00:31:37,519 --> 00:31:43,519
months after fedoras funds for our 25

00:31:40,399 --> 00:31:48,230
final freeze so we're not getting Python

00:31:43,519 --> 00:31:51,919
36 in fedora fine there will be a copper

00:31:48,230 --> 00:31:55,970
repository if you want that if you want

00:31:51,919 --> 00:31:57,950
to live on the bleeding edge then you do

00:31:55,970 --> 00:32:01,190
what you do when you want to live on the

00:31:57,950 --> 00:32:04,669
bleeding edge and use right we'll try to

00:32:01,190 --> 00:32:09,980
get 36 intero high as soon as possible

00:32:04,669 --> 00:32:11,750
as soon as I mean we might go with with

00:32:09,980 --> 00:32:14,840
even the wrong RC one with the ends

00:32:11,750 --> 00:32:17,570
continent to get as much testing because

00:32:14,840 --> 00:32:20,299
it's another hood it's it's a breaking

00:32:17,570 --> 00:32:24,080
change this bytecode versus board code

00:32:20,299 --> 00:32:26,720
so it it's should get as much testing a

00:32:24,080 --> 00:32:29,409
successful require remember advantages

00:32:26,720 --> 00:32:29,409
yes

00:32:30,110 --> 00:32:35,370
well one one thing to note already in

00:32:33,420 --> 00:32:37,530
fedora 25 we had a rebuild of every

00:32:35,370 --> 00:32:39,420
Python package even though there was no

00:32:37,530 --> 00:32:42,570
master code for the hope that work to

00:32:39,420 --> 00:32:48,050
get the paper to the requirements but

00:32:42,570 --> 00:32:51,570
there are 25 was branched few days ago

00:32:48,050 --> 00:32:55,680
so you can do the apartment be point 6

00:32:51,570 --> 00:32:58,320
into your eyes right now I would rather

00:32:55,680 --> 00:33:00,809
put the release candidate there because

00:32:58,320 --> 00:33:06,290
before the release candidate the picture

00:33:00,809 --> 00:33:10,530
complete and it's it's broken a lot okay

00:33:06,290 --> 00:33:12,830
once the day sweden sees i know i think

00:33:10,530 --> 00:33:17,269
it's written the same

00:33:12,830 --> 00:33:25,190
oh right oh you're correct there's the

00:33:17,269 --> 00:33:31,120
others oh yeah yes yes it's Darcy they

00:33:25,190 --> 00:33:33,440
just rolled up sir yeah so the phone is

00:33:31,120 --> 00:33:36,169
alright but they're awesome yeah they

00:33:33,440 --> 00:33:40,610
are sedate is wrong I'm sorry I this

00:33:36,169 --> 00:33:42,789
copy I will fix that on the slides I put

00:33:40,610 --> 00:33:42,789
online

00:33:50,019 --> 00:33:55,940
or you can search google for the correct

00:33:52,669 --> 00:34:01,250
date so that's that's where we stand no

00:33:55,940 --> 00:34:06,289
Python 354 there are 25 and 36 and 26 as

00:34:01,250 --> 00:34:11,570
soon as possible now I have been talking

00:34:06,289 --> 00:34:13,990
a lot about what we do and stuff so I'd

00:34:11,570 --> 00:34:16,399
like to explain a bit about who was we

00:34:13,990 --> 00:34:21,109
unfortunately I have a bit of bad news

00:34:16,399 --> 00:34:24,619
because we is in most cases the Python

00:34:21,109 --> 00:34:26,990
maintenance team that red hat now here

00:34:24,619 --> 00:34:30,290
I'd live like to give a bit of internal

00:34:26,990 --> 00:34:35,240
history I was this Python maintenance

00:34:30,290 --> 00:34:37,609
team and I joined it I was supposed to

00:34:35,240 --> 00:34:40,550
work upstream like on salga and C Python

00:34:37,609 --> 00:34:44,659
and not touch fedora too much so I was

00:34:40,550 --> 00:34:47,780
happily doing that then a person went to

00:34:44,659 --> 00:34:50,419
another team new person was hired and

00:34:47,780 --> 00:34:53,149
more people left and more people were

00:34:50,419 --> 00:34:58,329
hired and suddenly I was the most

00:34:53,149 --> 00:35:01,099
experienced full timer in the team and

00:34:58,329 --> 00:35:02,599
this happened in a pretty short amount

00:35:01,099 --> 00:35:04,910
of time so we had problems with

00:35:02,599 --> 00:35:09,800
knowledge transfer and fighting fires

00:35:04,910 --> 00:35:12,290
and stuff like that and we skipped on

00:35:09,800 --> 00:35:14,119
some things and one of those things

00:35:12,290 --> 00:35:16,460
which was probably our biggest mistake

00:35:14,119 --> 00:35:22,640
was communicating communicating our

00:35:16,460 --> 00:35:25,730
plans with the community so we did a

00:35:22,640 --> 00:35:27,319
bunch of changes like an individual

00:35:25,730 --> 00:35:31,520
contributor would we are getting

00:35:27,319 --> 00:35:33,220
permission from fresco and doing doing

00:35:31,520 --> 00:35:35,630
all the processes but not really

00:35:33,220 --> 00:35:39,290
communicated with the where the fight on

00:35:35,630 --> 00:35:41,839
guys in fedora which either business

00:35:39,290 --> 00:35:44,829
story shouldn't be a an excuse it's

00:35:41,839 --> 00:35:47,720
supposed to be more like an explanation

00:35:44,829 --> 00:35:53,060
we made a mistake and I apologize for

00:35:47,720 --> 00:35:55,490
that hopefully ah poor well it'll be my

00:35:53,060 --> 00:35:57,519
goal to to make this better so now the

00:35:55,490 --> 00:36:00,459
next time I give a

00:35:57,519 --> 00:36:03,519
zation like this I'll be able to say

00:36:00,459 --> 00:36:06,969
with with a little more honesty that's

00:36:03,519 --> 00:36:09,419
where the clear fedoras python special

00:36:06,969 --> 00:36:13,059
interest group if you'd like what we do

00:36:09,419 --> 00:36:16,599
you want you should join the

00:36:13,059 --> 00:36:19,390
conversations on python devel or in the

00:36:16,599 --> 00:36:21,399
federal python IRC you should check out

00:36:19,390 --> 00:36:24,369
what's on github gone for the rock

00:36:21,399 --> 00:36:27,909
python and if you liked it a lot then

00:36:24,369 --> 00:36:30,509
please join us and help make my phone in

00:36:27,909 --> 00:36:30,509
fedora better

00:36:32,970 --> 00:36:39,349
she's currently kind of dated but we are

00:36:36,030 --> 00:36:39,349
also in the process for

00:36:41,420 --> 00:36:50,859
yeah you can see hopefully next week

00:36:46,460 --> 00:36:50,859
after a half applicants yeah

00:36:59,279 --> 00:37:03,439
right yeah

00:37:04,100 --> 00:37:11,560
that went faster than I rehearsed

00:37:07,630 --> 00:37:16,070
questions questions comments anything

00:37:11,560 --> 00:37:19,070
this one could you go back to the slide

00:37:16,070 --> 00:37:21,770
where are you going inside I already

00:37:19,070 --> 00:37:26,990
talked about running upstream tests for

00:37:21,770 --> 00:37:32,210
by the practice so what's your take on

00:37:26,990 --> 00:37:35,170
whether to include tests in the

00:37:32,210 --> 00:37:37,840
the sole distribution or just in the

00:37:35,170 --> 00:37:43,570
source repo

00:37:37,840 --> 00:37:46,710
once they do so this this is a long-term

00:37:43,570 --> 00:37:49,990
plan right so first copper needs to work

00:37:46,710 --> 00:37:54,580
for most packages and click to rpm leads

00:37:49,990 --> 00:37:57,640
to needs to work reliably and running

00:37:54,580 --> 00:38:03,880
the tests will probably require some

00:37:57,640 --> 00:38:06,040
changes to the metadata so we need to

00:38:03,880 --> 00:38:08,410
figure out a way for up streams to say

00:38:06,040 --> 00:38:10,600
these are our tests this is how their

00:38:08,410 --> 00:38:14,950
package this is how you get them this is

00:38:10,600 --> 00:38:17,290
our rumba and if we can get that in the

00:38:14,950 --> 00:38:19,120
setup pie and we can we can use it in

00:38:17,290 --> 00:38:22,660
fedora and of course everybody else can

00:38:19,120 --> 00:38:28,630
use it has been moved test is in the

00:38:22,660 --> 00:38:31,360
chat section problem here is currently

00:38:28,630 --> 00:38:35,350
if you have a random project with two

00:38:31,360 --> 00:38:37,360
RPM is rounded it tries set up by best

00:38:35,350 --> 00:38:40,360
right because this is the only thing

00:38:37,360 --> 00:38:42,760
that it can try and most of the upstream

00:38:40,360 --> 00:38:45,910
projects like infighting packages it

00:38:42,760 --> 00:38:48,850
just don't enable this they just keep

00:38:45,910 --> 00:38:50,830
snow fest or by theft or whatever I it

00:38:48,850 --> 00:38:52,690
yeah well nothing that's what problem

00:38:50,830 --> 00:38:55,480
another problem is that they get package

00:38:52,690 --> 00:38:57,340
the tests I don't reach that Jenny not

00:38:55,480 --> 00:38:59,170
only have people to give up yeah they

00:38:57,340 --> 00:39:01,869
don't do include them

00:38:59,170 --> 00:39:04,859
well you have to go that's the factory

00:39:01,869 --> 00:39:07,540
yeah in my my experience there was no

00:39:04,859 --> 00:39:09,940
standard later running Tessa I don't

00:39:07,540 --> 00:39:12,309
know why there is a standard the Senate

00:39:09,940 --> 00:39:14,740
pie tests it will follow and then yeah

00:39:12,309 --> 00:39:16,750
well it's like oh my i did a lot of work

00:39:14,740 --> 00:39:19,180
from perl module packaging before which

00:39:16,750 --> 00:39:22,180
seems to solve this problem about 20

00:39:19,180 --> 00:39:27,510
years ago and everything is standardized

00:39:22,180 --> 00:39:30,849
and it's all done automatically yeah and

00:39:27,510 --> 00:39:33,490
girl has to has the good fortune of

00:39:30,849 --> 00:39:36,299
being around when distributions we're

00:39:33,490 --> 00:39:39,670
still cared about by developers and

00:39:36,299 --> 00:39:42,130
nowadays people just put stuff on my p.i

00:39:39,670 --> 00:39:47,710
and people are still with a little bit

00:39:42,130 --> 00:39:51,010
so there's not as much initiative for

00:39:47,710 --> 00:39:56,940
promise to happen but we we need to do

00:39:51,010 --> 00:39:56,940
this to lower the work that needs to be

00:39:57,210 --> 00:40:01,990
ok because it's also home of

00:39:59,770 --> 00:40:03,269
dependencies it as bring all the

00:40:01,990 --> 00:40:05,219
practices that

00:40:03,269 --> 00:40:07,109
so yeah I think there is also

00:40:05,219 --> 00:40:09,949
standardized way to do this instead of

00:40:07,109 --> 00:40:12,390
my you can disappoint this requirement

00:40:09,949 --> 00:40:21,809
now that that's something to set up I

00:40:12,390 --> 00:40:24,630
just that doesn't well don't systems

00:40:21,809 --> 00:40:29,699
will be even though you don't do the

00:40:24,630 --> 00:40:33,719
next corner yes the system that comment

00:40:29,699 --> 00:40:35,699
given set of dividends and vengeance how

00:40:33,719 --> 00:40:39,599
to make sure that those two magical

00:40:35,699 --> 00:40:42,929
Jarvis a new things right and you to

00:40:39,599 --> 00:40:45,599
connect your parents were fighting ERT

00:40:42,929 --> 00:40:47,969
projekt the requirements text and test

00:40:45,599 --> 00:40:50,789
requirements is all the success and

00:40:47,969 --> 00:40:53,969
organize our vision from other than home

00:40:50,789 --> 00:40:57,239
soon so also is so the problem is out of

00:40:53,969 --> 00:40:59,640
it or so the problem is here that

00:40:57,239 --> 00:41:03,359
certified in Sinop I you can have

00:40:59,640 --> 00:41:06,449
dependencies but if you install the RPM

00:41:03,359 --> 00:41:08,249
you also have I mean the way to do that

00:41:06,449 --> 00:41:11,369
now is the NF install the package name

00:41:08,249 --> 00:41:12,689
and not give it the dependence there you

00:41:11,369 --> 00:41:16,229
have to be sure that their beds

00:41:12,689 --> 00:41:17,999
instances actually match and that's why

00:41:16,229 --> 00:41:21,479
we have a version version in this

00:41:17,999 --> 00:41:24,479
virtual provide so here if you install

00:41:21,479 --> 00:41:27,659
some Python package with dependency

00:41:24,479 --> 00:41:30,509
specified it will either install it or

00:41:27,659 --> 00:41:32,249
tell you such a version is not found in

00:41:30,509 --> 00:41:34,799
which case you have to use fit to get

00:41:32,249 --> 00:41:37,199
the version that's not a solemn genocide

00:41:34,799 --> 00:41:40,520
is their own work on the website who

00:41:37,199 --> 00:41:45,250
work visa versa also made food

00:41:40,520 --> 00:41:49,490
you know with their only file for people

00:41:45,250 --> 00:41:53,960
that is that we have nothing that is

00:41:49,490 --> 00:41:56,480
already there the problem so the problem

00:41:53,960 --> 00:42:00,170
is that if you're working on the system

00:41:56,480 --> 00:42:02,420
itself if you do sudo pick and install

00:42:00,170 --> 00:42:04,100
something that needs a new version you

00:42:02,420 --> 00:42:07,520
will upgrade the system package and

00:42:04,100 --> 00:42:10,400
break all the system use it so you

00:42:07,520 --> 00:42:12,110
shouldn't do use sudo fit ever just just

00:42:10,400 --> 00:42:15,530
don't get great stuff it's it doesn't

00:42:12,110 --> 00:42:18,050
work in the door for you can use a

00:42:15,530 --> 00:42:20,000
virtual environment which is completely

00:42:18,050 --> 00:42:25,220
isolated it doesn't use the system

00:42:20,000 --> 00:42:27,530
install packages so even you can set it

00:42:25,220 --> 00:42:33,290
up to but nobody's it doesn't it's not a

00:42:27,530 --> 00:42:35,120
refocus ocean yeah yeah that that is the

00:42:33,290 --> 00:42:39,830
solution so make your virtual on a few

00:42:35,120 --> 00:42:41,540
system packages and then possible it is

00:42:39,830 --> 00:42:43,910
possible and then people will use them

00:42:41,540 --> 00:42:46,180
if they have correct versions or install

00:42:43,910 --> 00:42:52,600
new versions into just the virtual alarm

00:42:46,180 --> 00:42:52,600
and the plan is to and

00:42:53,900 --> 00:43:03,440
and then whatever so far I need to use

00:42:57,480 --> 00:43:03,440
that building by then the range spices

00:43:11,000 --> 00:43:17,190
mixing pick and RPM this yes it's

00:43:15,960 --> 00:43:19,230
difficult and that's why we're doing

00:43:17,190 --> 00:43:24,780
this to make to bring them closer

00:43:19,230 --> 00:43:27,119
together I mean if you have if you have

00:43:24,780 --> 00:43:30,510
a specific problem then maybe talk to us

00:43:27,119 --> 00:43:34,740
after the to the top so I'm question

00:43:30,510 --> 00:43:36,810
about iphone 3 level there's been 50

00:43:34,740 --> 00:43:37,809
feet of three four packages that have

00:43:36,810 --> 00:43:41,319
been

00:43:37,809 --> 00:43:43,989
both know that are very few libraries

00:43:41,319 --> 00:43:46,029
built for the packages I've been

00:43:43,989 --> 00:43:47,769
building a lot of them for my because

00:43:46,029 --> 00:43:49,989
i'm i'm working on manor it's a pack of

00:43:47,769 --> 00:43:52,329
freedom package so i've been working on

00:43:49,989 --> 00:43:54,579
I've been building for changing aspects

00:43:52,329 --> 00:43:56,619
files to bill for my computer phone it's

00:43:54,579 --> 00:43:58,239
not very hard to change but I wonder

00:43:56,619 --> 00:44:00,910
which they do with most package because

00:43:58,239 --> 00:44:02,739
I have been my primary cook today like

00:44:00,910 --> 00:44:05,559
to this somewhere on helper or should I

00:44:02,739 --> 00:44:08,019
just change change the spec files in

00:44:05,559 --> 00:44:09,999
these kids and as we maintain is very

00:44:08,019 --> 00:44:12,519
simple to change yeah it's just a micro

00:44:09,999 --> 00:44:14,170
that replaces the Aspen ideas I mean any

00:44:12,519 --> 00:44:18,369
other so if somebody making the

00:44:14,170 --> 00:44:19,660
packaging FL they can help you what's

00:44:18,369 --> 00:44:21,910
the problem is if you're going to your

00:44:19,660 --> 00:44:27,189
heart is there are maintained and you

00:44:21,910 --> 00:44:28,779
know you want to maintain right I think

00:44:27,189 --> 00:44:30,789
it yeah you want to do not already there

00:44:28,779 --> 00:44:33,849
then you should request a branch in and

00:44:30,789 --> 00:44:36,729
maintain okay yeah sure well that's the

00:44:33,849 --> 00:44:39,189
best one so it's okay to have these new

00:44:36,729 --> 00:44:41,559
bike we three or four markers in depo

00:44:39,189 --> 00:44:44,769
and money out Mars yeah now we make sure

00:44:41,559 --> 00:44:46,869
that everything works all the way down

00:44:44,769 --> 00:44:50,739
as far as we can make it even in order

00:44:46,869 --> 00:44:53,619
Ethel sticks some stuff and then

00:44:50,739 --> 00:44:56,769
obviously by countries air so it doesn't

00:44:53,619 --> 00:44:59,140
this is to trigger if the Vikings if I

00:44:56,769 --> 00:45:02,529
if the fight funny to package is

00:44:59,140 --> 00:45:04,539
supplied by rail or sent to us you have

00:45:02,529 --> 00:45:07,239
to exclude to the type of package from

00:45:04,539 --> 00:45:09,999
living in right and that's such a thing

00:45:07,239 --> 00:45:13,840
does that complete just like excluded on

00:45:09,999 --> 00:45:17,050
the entire section right does it look

00:45:13,840 --> 00:45:19,150
yeah you can't do it okay so gathered

00:45:17,050 --> 00:45:22,120
are believers writes those packages

00:45:19,150 --> 00:45:23,910
remember the owner has a week so I deny

00:45:22,120 --> 00:45:27,370
you if they don't want it otherwise

00:45:23,910 --> 00:45:35,380
adaptive so you know publishable it

00:45:27,370 --> 00:45:40,090
works Louis another robot I needed time

00:45:35,380 --> 00:45:43,570
to generate some static websites so as a

00:45:40,090 --> 00:45:46,210
new me i typed Pelican and then I've

00:45:43,570 --> 00:45:51,670
told me if you want to use beta you have

00:45:46,210 --> 00:45:55,900
to install return to tell a very kind so

00:45:51,670 --> 00:45:59,620
I said well I have pivot Anakin returned

00:45:55,900 --> 00:46:02,970
three older users and I looked for few

00:45:59,620 --> 00:46:06,610
minutes and I didn't design how true

00:46:02,970 --> 00:46:10,910
when I when I am taking any time how to

00:46:06,610 --> 00:46:15,020
how to run it with the fitness three

00:46:10,910 --> 00:46:18,020
the thank yous up in the right so it was

00:46:15,020 --> 00:46:20,990
so the standard right so the standard

00:46:18,020 --> 00:46:24,980
way is to type Pelican three or Pelican

00:46:20,990 --> 00:46:26,900
Bay one of those is in the package

00:46:24,980 --> 00:46:29,450
guidelines i can never remember which

00:46:26,900 --> 00:46:33,530
ones but some package predates this

00:46:29,450 --> 00:46:37,609
guideline so you might want to run

00:46:33,530 --> 00:46:43,690
install Python 3 Pelican first year and

00:46:37,609 --> 00:46:48,559
then run the magic command RPM Curie

00:46:43,690 --> 00:46:56,210
list of files for Python 3 Pelican and

00:46:48,559 --> 00:46:58,549
maybe you can grip yeah so in this case

00:46:56,210 --> 00:47:06,890
it's not named according to the

00:46:58,549 --> 00:47:09,230
guidelines 00 50 bucks you shall 50

00:47:06,890 --> 00:47:13,849
 parking lot immediately yes so

00:47:09,230 --> 00:47:17,240
we got that business horrible Oh give it

00:47:13,849 --> 00:47:19,520
a fire again actually I guess I'll show

00:47:17,240 --> 00:47:22,160
with on this weapon nobody i should only

00:47:19,520 --> 00:47:24,859
have I think I do they should be Python

00:47:22,160 --> 00:47:27,230
3 dash know you'll be relevant you're

00:47:24,859 --> 00:47:29,510
right three which is their dash I've got

00:47:27,230 --> 00:47:34,099
yeah yeah yeah so it could be like this

00:47:29,510 --> 00:47:36,930
no one and okay so this is a

00:47:34,099 --> 00:47:39,210
because I try to type it again something

00:47:36,930 --> 00:47:41,510
that it just an existence and also

00:47:39,210 --> 00:47:43,589
another thing is what does this to do

00:47:41,510 --> 00:47:45,660
where's this for I don't know for the

00:47:43,589 --> 00:47:48,270
clock generator that is that generally

00:47:45,660 --> 00:47:49,920
what I'm get right and we carry one

00:47:48,270 --> 00:47:52,829
around with my pride that's the

00:47:49,920 --> 00:47:55,230
important I you do because it has

00:47:52,829 --> 00:47:57,240
potential to gauge yeah okay when you

00:47:55,230 --> 00:48:03,299
actually care for this place one

00:47:57,240 --> 00:48:07,849
actually kinda the comments bellingham

00:48:03,299 --> 00:48:11,029
is not done and I produce some people

00:48:07,849 --> 00:48:15,450
this month on some very young gun after

00:48:11,029 --> 00:48:19,049
made html5 and the world website shooter

00:48:15,450 --> 00:48:29,549
so I learned which I have the basic

00:48:19,049 --> 00:48:31,589
simple be done so well in 2020 we're

00:48:29,549 --> 00:48:34,260
dropping Python 2 and there will be only

00:48:31,589 --> 00:48:37,680
by Humphrey and no more confusion and I

00:48:34,260 --> 00:48:40,010
think we're out of time so our questions

00:48:37,680 --> 00:48:53,160
after this thank you for your attention

00:48:40,010 --> 00:48:56,160
hi collection is is is why I you how I

00:48:53,160 --> 00:49:02,430
fight the chips to keep my mind and I

00:48:56,160 --> 00:49:04,859
forget the stickers so you can I got

00:49:02,430 --> 00:49:06,900
online through the hotel in our network

00:49:04,859 --> 00:49:10,589
engineer arrival

00:49:06,900 --> 00:49:10,589

YouTube URL: https://www.youtube.com/watch?v=rp5jq-25nZg


