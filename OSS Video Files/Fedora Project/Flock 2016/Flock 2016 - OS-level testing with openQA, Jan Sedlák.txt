Title: Flock 2016 - OS-level testing with openQA, Jan Sedlák
Publication date: 2016-08-21
Playlist: Flock 2016
Description: 
	Rapidly develop robust scenarios using just your browser and a few lines of script. Currently used by the FedoraQE team for CI testing of the new Fedora releases and builds, saving the precious resources and allowing us to focus on the other cool stuff too. "Doing something constructive at once is better than figuring out the best thing to do hours later." -- Robert A. Heinlein

https://flock2016.sched.org/event/76mx/os-level-testing-with-openqa

This video was recorded at the annual Fedora contributor conference, Flock, in Kraków, Poland, from August 2-5, 2016. You can learn more about Flock at https://flocktofedora.org.

#FlockToFedora
Captions: 
	00:00:06,790 --> 00:00:14,059
so I'm young I'm from Morocco a team and

00:00:11,389 --> 00:00:17,510
our job is to make sure that nothing

00:00:14,059 --> 00:00:20,540
goes wrong with fedora and what is there

00:00:17,510 --> 00:00:24,140
when and when it happens we just sit

00:00:20,540 --> 00:00:26,780
there and laugh and pretty much do

00:00:24,140 --> 00:00:29,600
nothing yeah and open q is something

00:00:26,780 --> 00:00:32,570
we've discovered how your year and a

00:00:29,600 --> 00:00:37,940
half ago which helped us most live with

00:00:32,570 --> 00:00:41,569
the first part of our job so why do we

00:00:37,940 --> 00:00:43,940
need o'blickie way that's all some of

00:00:41,569 --> 00:00:47,839
you may know what it what it is its

00:00:43,940 --> 00:00:51,319
installation metrics for a very combos

00:00:47,839 --> 00:00:53,109
that is simulated for testing oh you

00:00:51,319 --> 00:00:56,179
used to be called as composed of

00:00:53,109 --> 00:00:59,589
matrices like this gets created there

00:00:56,179 --> 00:01:04,460
are dozens dozens of different tests and

00:00:59,589 --> 00:01:07,130
we had to go through them manually and I

00:01:04,460 --> 00:01:09,980
mean have to go through them and as each

00:01:07,130 --> 00:01:13,370
manually so that means that we have to

00:01:09,980 --> 00:01:16,790
drive at a Fed right installs me and

00:01:13,370 --> 00:01:18,620
today's weather installs so I mean full

00:01:16,790 --> 00:01:23,150
days and you can delete all partitions

00:01:18,620 --> 00:01:29,210
and it was tedious work and it took out

00:01:23,150 --> 00:01:32,300
of time we only could do that several

00:01:29,210 --> 00:01:37,430
times per week and then we just

00:01:32,300 --> 00:01:41,390
discovered OPP way we open QA fits our

00:01:37,430 --> 00:01:45,260
workflow miraculously it's designed to

00:01:41,390 --> 00:01:49,010
work on something like this so what

00:01:45,260 --> 00:01:53,300
actually is OPP you a this is my page of

00:01:49,010 --> 00:01:56,000
open QA opening QA is so service for OS

00:01:53,300 --> 00:01:58,760
level testing it's best suited for

00:01:56,000 --> 00:02:04,310
testing installations that means

00:01:58,760 --> 00:02:07,909
anaconda for fedora oh yeah it is

00:02:04,310 --> 00:02:09,319
developed by c uz open CU z or open see

00:02:07,909 --> 00:02:11,799
you don't know

00:02:09,319 --> 00:02:13,969
pronounce it it's collaborative effort

00:02:11,799 --> 00:02:17,980
which basically means that they are

00:02:13,969 --> 00:02:22,180
developing it and we are using it and

00:02:17,980 --> 00:02:25,310
yeah we're using it for more more than

00:02:22,180 --> 00:02:30,939
more than half a year and a half it's a

00:02:25,310 --> 00:02:38,150
developing peril so hopefully it doesn't

00:02:30,939 --> 00:02:42,950
doesn't make problem for you how open

00:02:38,150 --> 00:02:46,069
way works uh it spawns okey okey we move

00:02:42,950 --> 00:02:51,379
Myrtle machines it connects to them via

00:02:46,069 --> 00:02:56,480
a VNC and it simulates user input which

00:02:51,379 --> 00:02:59,629
means mouse clicking moving keep sending

00:02:56,480 --> 00:03:03,590
key strokes it takes screenshots of the

00:02:59,629 --> 00:03:07,609
whole screen and discuss the image

00:03:03,590 --> 00:03:11,689
recognition and image comparing and uses

00:03:07,609 --> 00:03:14,689
this for doing like a process like the

00:03:11,689 --> 00:03:19,009
user would do it which means that we can

00:03:14,689 --> 00:03:22,310
use unmodified isos for example the duck

00:03:19,009 --> 00:03:26,060
tail we had to modify the isos but

00:03:22,310 --> 00:03:28,729
correct programs here and so on with

00:03:26,060 --> 00:03:32,319
opening key way we can use the same isos

00:03:28,729 --> 00:03:36,459
that they are which are in trees and

00:03:32,319 --> 00:03:40,459
just put them and test them as ho oh

00:03:36,459 --> 00:03:42,949
yeah which fits again which fits our use

00:03:40,459 --> 00:03:49,040
case because we want to test what we are

00:03:42,949 --> 00:03:51,859
developed delivering to our users this

00:03:49,040 --> 00:03:56,359
is architecture opua opening you a

00:03:51,859 --> 00:03:59,659
consists of two parts one is this part

00:03:56,359 --> 00:04:02,020
is actually called open key way this

00:03:59,659 --> 00:04:05,140
other part is called always al Punto

00:04:02,020 --> 00:04:08,140
but the whole project is called this is

00:04:05,140 --> 00:04:12,100
the publication there you can review

00:04:08,140 --> 00:04:14,850
test so you can develop new tests at

00:04:12,100 --> 00:04:18,430
leave at least from the screenshot side

00:04:14,850 --> 00:04:22,780
you can see progress of running tests

00:04:18,430 --> 00:04:25,060
and so on and it spawns for it uses

00:04:22,780 --> 00:04:27,760
workers you can use as many workers to

00:04:25,060 --> 00:04:32,140
see if you want so it scales pretty well

00:04:27,760 --> 00:04:36,120
it sends jobs to workers I'm here runs

00:04:32,140 --> 00:04:38,740
project both OSF lens which again

00:04:36,120 --> 00:04:42,280
sponsored wrong machines and connects

00:04:38,740 --> 00:04:49,570
them via VNC and then it sends results

00:04:42,280 --> 00:04:55,210
back to the pocket of a fabrication what

00:04:49,570 --> 00:04:58,240
this isn't suited for we are we don't

00:04:55,210 --> 00:05:00,600
want to use it for something that that

00:04:58,240 --> 00:05:03,430
needs a human interest in Denver

00:05:00,600 --> 00:05:06,700
intervention for example we have a test

00:05:03,430 --> 00:05:10,630
that you can submit back to bugzilla

00:05:06,700 --> 00:05:12,520
from anaconda and then you have to go to

00:05:10,630 --> 00:05:14,740
bugzilla by yourself and close the back

00:05:12,520 --> 00:05:18,910
there's this is something we don't want

00:05:14,740 --> 00:05:21,720
to do automatically because there then

00:05:18,910 --> 00:05:26,830
we would have both spawning or bugzilla

00:05:21,720 --> 00:05:30,640
and also it would be pretty hard to know

00:05:26,830 --> 00:05:33,640
the exactly euro euro where bug was

00:05:30,640 --> 00:05:38,620
created we are not using it for non

00:05:33,640 --> 00:05:41,020
installation related tasks checksums or

00:05:38,620 --> 00:05:45,880
something like that this is so it mainly

00:05:41,020 --> 00:05:51,100
for installation but we have also some

00:05:45,880 --> 00:05:55,150
desktop desktop and also server tests in

00:05:51,100 --> 00:05:59,770
the milky way it is yeah it works well

00:05:55,150 --> 00:06:02,500
even for those things and another thing

00:05:59,770 --> 00:06:05,830
called for what only isn't sweet it for

00:06:02,500 --> 00:06:08,620
is where you need some specialized

00:06:05,830 --> 00:06:11,680
hardware it uses ki-moon it doesn't have

00:06:08,620 --> 00:06:15,550
to but the main use case is

00:06:11,680 --> 00:06:17,949
this is giving you so you have to have

00:06:15,550 --> 00:06:20,740
all your heart very virtualized in a

00:06:17,949 --> 00:06:22,419
human so if you want to test a film at

00:06:20,740 --> 00:06:26,199
filmfare right or something like that

00:06:22,419 --> 00:06:28,150
you can't because you would have to get

00:06:26,199 --> 00:06:30,759
from we're right in 20 people in taupe

00:06:28,150 --> 00:06:34,780
you emo we are testing for example armed

00:06:30,759 --> 00:06:41,800
with it we can emulate arm we are

00:06:34,780 --> 00:06:46,479
testing you fi but look for example

00:06:41,800 --> 00:06:51,130
right what is pain in the ass with open

00:06:46,479 --> 00:06:53,979
QA there are lots a lot of fun changes

00:06:51,130 --> 00:06:57,310
for example this is fabricated example

00:06:53,979 --> 00:07:00,210
this this didn't happen but we have lot

00:06:57,310 --> 00:07:03,789
of fun change font changes last year

00:07:00,210 --> 00:07:09,430
it's it's Sub Pop is something that the

00:07:03,789 --> 00:07:12,910
user don't really see but even though

00:07:09,430 --> 00:07:16,180
that oblique uses only partial or you

00:07:12,910 --> 00:07:20,789
can you can set a level how similar the

00:07:16,180 --> 00:07:23,169
images have to be but even even then Oh

00:07:20,789 --> 00:07:26,470
sometimes that's just failed on Becca

00:07:23,169 --> 00:07:28,360
commonly because the button moves or has

00:07:26,470 --> 00:07:30,099
a different different color or or

00:07:28,360 --> 00:07:33,250
different forms or something like that

00:07:30,099 --> 00:07:40,300
and then you have to go through all your

00:07:33,250 --> 00:07:43,060
screenshots and reward them we have Adam

00:07:40,300 --> 00:07:44,710
volumes in in our team so this doesn't

00:07:43,060 --> 00:07:46,960
post problem for us because every time

00:07:44,710 --> 00:07:50,320
this happens Adam just goes through all

00:07:46,960 --> 00:07:53,409
our tests or testing or screenshots and

00:07:50,320 --> 00:07:56,520
and do this I don't know how is the way

00:07:53,409 --> 00:07:56,520
but yeah

00:08:00,510 --> 00:08:09,760
I'm going to show you how developing

00:08:04,660 --> 00:08:11,680
tests for oblique you a works so first I

00:08:09,760 --> 00:08:14,440
we are we were going we're gonna a

00:08:11,680 --> 00:08:16,840
develop test that that's a federal

00:08:14,440 --> 00:08:19,150
installation its basic test that Federer

00:08:16,840 --> 00:08:23,190
installs in default configuration and

00:08:19,150 --> 00:08:27,100
then that it boots into login prompt

00:08:23,190 --> 00:08:29,110
first you have to think what you want to

00:08:27,100 --> 00:08:38,589
what do you want to code would you want

00:08:29,110 --> 00:08:46,800
to test video so this is yeah showing

00:08:38,589 --> 00:08:49,779
only on my laptop yeah so this is

00:08:46,800 --> 00:08:52,300
something called testers should know

00:08:49,779 --> 00:08:59,070
this is virtual machine with a federal

00:08:52,300 --> 00:09:02,980
22 running oh and you have to literally

00:08:59,070 --> 00:09:05,260
just yeah you have to go through the

00:09:02,980 --> 00:09:07,690
installation by ourselves and consider

00:09:05,260 --> 00:09:11,440
what what do you want to what do you

00:09:07,690 --> 00:09:17,020
want to do to achieve the test so first

00:09:11,440 --> 00:09:20,710
a federalist boot so here you we will

00:09:17,020 --> 00:09:23,250
wait until it shows so language

00:09:20,710 --> 00:09:23,250
selection screen

00:09:26,000 --> 00:09:31,570

YouTube URL: https://www.youtube.com/watch?v=nX12lphRR48


