Title: Flock 2016 - This is how we test Fedora now, Petr Schindler
Publication date: 2016-08-21
Playlist: Flock 2016
Description: 
	A. k. a. how we make sure that it's not utterly broken. This talk will be about Fedora QA team. About technologies used and developed by us. And also about the process of testing new releases.

https://flock2016.sched.org/event/76mw/this-is-how-we-test-fedora-now

This video was recorded at the annual Fedora contributor conference, Flock, in Kraków, Poland, from August 2-5, 2016. You can learn more about Flock at https://flocktofedora.org.

#FlockToFedora
Captions: 
	00:00:02,060 --> 00:00:09,230
so hello welcome to my presentation

00:00:06,660 --> 00:00:12,900
about testing of federer and how we test

00:00:09,230 --> 00:00:15,630
federer now my name is petitioner I'm

00:00:12,900 --> 00:00:20,580
part of the federer QA team in a redhead

00:00:15,630 --> 00:00:25,080
in Brno and I'd like to say a few words

00:00:20,580 --> 00:00:28,170
about tools we use and ways we test

00:00:25,080 --> 00:00:35,670
further and make sure that federer is

00:00:28,170 --> 00:00:40,370
not broken moves time so for our QA

00:00:35,670 --> 00:00:45,450
that's the pin which whose goal is to

00:00:40,370 --> 00:00:49,559
make sure that the federal works at

00:00:45,450 --> 00:00:53,969
least somehow and that it boots doesn't

00:00:49,559 --> 00:00:57,829
break your computer and doesn't delete

00:00:53,969 --> 00:01:03,000
your data and so if you want to know

00:00:57,829 --> 00:01:08,310
more information there is a QA page our

00:01:03,000 --> 00:01:12,080
wiki wiki as I said our primary

00:01:08,310 --> 00:01:21,420
objective is to ensure the quality of

00:01:12,080 --> 00:01:22,690
federal releases we produce so but what

00:01:21,420 --> 00:01:28,770
will you

00:01:22,690 --> 00:01:28,770
party we are trying to open automate as

00:01:29,370 --> 00:01:37,480
as much as we could so we are developing

00:01:33,370 --> 00:01:42,690
some automation tools we are using some

00:01:37,480 --> 00:01:47,230
tools from other distro it's open QA and

00:01:42,690 --> 00:01:51,070
we are working on some other support

00:01:47,230 --> 00:01:55,030
tools like blocker back apps and some

00:01:51,070 --> 00:01:58,510
things that are not so important from

00:01:55,030 --> 00:02:03,550
people outside of the team and of course

00:01:58,510 --> 00:02:08,100
we do some manual testing of stuff we do

00:02:03,550 --> 00:02:15,730
some testing the release as a whole and

00:02:08,100 --> 00:02:20,440
let's think about packages like we are

00:02:15,730 --> 00:02:24,280
posting updates before they went to the

00:02:20,440 --> 00:02:27,340
user who don't wants to have untested

00:02:24,280 --> 00:02:30,450
stuff on their computer and also the

00:02:27,340 --> 00:02:34,300
part of our work is the communication

00:02:30,450 --> 00:02:40,180
with other testers and with developers

00:02:34,300 --> 00:02:42,340
and the community in general we are

00:02:40,180 --> 00:02:46,810
quite a small team for such a big task

00:02:42,340 --> 00:02:49,360
like testing whole release internally in

00:02:46,810 --> 00:02:53,430
the redhead their work about I don't

00:02:49,360 --> 00:02:56,830
know eight people to nusa one in Canada

00:02:53,430 --> 00:03:02,920
he's very active than Williamson who

00:02:56,830 --> 00:03:05,019
knows him he works for ten people there

00:03:02,920 --> 00:03:09,700
are four people in czech republic on in

00:03:05,019 --> 00:03:14,890
China and in India we have manager and

00:03:09,700 --> 00:03:21,780
few interns but there is also community

00:03:14,890 --> 00:03:26,200
which helps us very tremendous Lee and I

00:03:21,780 --> 00:03:28,480
hoped it when you are when you come to

00:03:26,200 --> 00:03:30,260
this presentation you want to help us do

00:03:28,480 --> 00:03:34,010
so

00:03:30,260 --> 00:03:36,439
you can join us too because veena needs

00:03:34,010 --> 00:03:39,349
a lot of help from community there is a

00:03:36,439 --> 00:03:42,890
lot of packages we need to test your

00:03:39,349 --> 00:03:51,290
updates for those packages so everything

00:03:42,890 --> 00:03:54,379
is helpful so our work is from part some

00:03:51,290 --> 00:03:57,019
manual testing so we need some general

00:03:54,379 --> 00:04:01,970
linux knowledge about almost everything

00:03:57,019 --> 00:04:07,220
in the system kernel or how the genome

00:04:01,970 --> 00:04:11,420
works and so to the back we have to know

00:04:07,220 --> 00:04:16,000
how to debug some some problems and so

00:04:11,420 --> 00:04:21,500
and also because we do some automation

00:04:16,000 --> 00:04:26,180
tools we have to know some coding mostly

00:04:21,500 --> 00:04:30,530
in Python of course in bash and the open

00:04:26,180 --> 00:04:35,990
QA tool is making peril so yeah that's

00:04:30,530 --> 00:04:42,460
two for communication you mainly we use

00:04:35,990 --> 00:04:50,750
IRC channels on freenode various fedora

00:04:42,460 --> 00:04:55,510
testing and also mailing list and we use

00:04:50,750 --> 00:04:55,510
conferences to talk to people person

00:04:55,539 --> 00:05:01,580
yeah and the communication which

00:04:58,970 --> 00:05:04,960
community is the key to our work cause

00:05:01,580 --> 00:05:10,300
without the community we would be very

00:05:04,960 --> 00:05:15,560
small team and wouldn't put them the

00:05:10,300 --> 00:05:23,479
proper testing for the system so both

00:05:15,560 --> 00:05:26,780
automation tools we use the I most of

00:05:23,479 --> 00:05:31,190
the work is focused on task to turn its

00:05:26,780 --> 00:05:35,900
tool for running

00:05:31,190 --> 00:05:38,540
automated task task execution then we

00:05:35,900 --> 00:05:44,230
have open carry tool it's not the pool

00:05:38,540 --> 00:05:47,240
we wrote it stool from opensuse we just

00:05:44,230 --> 00:05:51,010
run it on federal and it works very nice

00:05:47,240 --> 00:05:57,920
and we don't have to maintain it because

00:05:51,010 --> 00:06:00,710
opensuse we so let's big help and also

00:05:57,920 --> 00:06:05,300
there's something new it's not from our

00:06:00,710 --> 00:06:09,970
team but is to use for test of newly

00:06:05,300 --> 00:06:14,960
built rpms and it's called crochet I

00:06:09,970 --> 00:06:22,160
won't talk about it much but you can

00:06:14,960 --> 00:06:26,810
look on Federer wiki very nice page boat

00:06:22,160 --> 00:06:30,380
crochet where you can read about what it

00:06:26,810 --> 00:06:32,480
does how it does and where you can see

00:06:30,380 --> 00:06:38,480
the results and what can you do with

00:06:32,480 --> 00:06:43,490
those and so so what is tops the drum

00:06:38,480 --> 00:06:46,940
taps cotton is ultimately task execution

00:06:43,490 --> 00:06:49,850
for a framework it means that it listen

00:06:46,940 --> 00:06:53,870
to some messages on third message when

00:06:49,850 --> 00:06:59,900
it catch some message which is important

00:06:53,870 --> 00:07:04,220
to us or to some task it will send it

00:06:59,900 --> 00:07:12,080
will try to trigger running tests there

00:07:04,220 --> 00:07:14,990
buildbot will run the task which is

00:07:12,080 --> 00:07:18,590
mostly some tests for example tests

00:07:14,990 --> 00:07:21,800
which are now running RPM RPM grill a

00:07:18,590 --> 00:07:24,860
big fat chick it's mostly when some

00:07:21,800 --> 00:07:28,760
packages build we make sure that the

00:07:24,860 --> 00:07:30,760
package or RPM is correct and that it

00:07:28,760 --> 00:07:35,950
can be

00:07:30,760 --> 00:07:45,370
be installed and it doesn't break your

00:07:35,950 --> 00:07:49,270
computer computer your system those you

00:07:45,370 --> 00:07:52,570
can also breathable task on astronaut

00:07:49,270 --> 00:07:57,400
federal project org we have very nice

00:07:52,570 --> 00:08:04,600
new newly designed page where you can

00:07:57,400 --> 00:08:08,320
look what it does what you can do we did

00:08:04,600 --> 00:08:10,750
this on documentation links to to the

00:08:08,320 --> 00:08:13,080
task which were around so if you have

00:08:10,750 --> 00:08:17,410
some packages you can look there oh

00:08:13,080 --> 00:08:24,430
which test test was around there and

00:08:17,410 --> 00:08:28,690
look on the results there will be talk

00:08:24,430 --> 00:08:32,169
about a tasket Ron or about how you can

00:08:28,690 --> 00:08:35,050
make your own tests in task don't know

00:08:32,169 --> 00:08:38,979
how you can run your own tests in tasks

00:08:35,050 --> 00:08:42,270
in plaster on it will be on front Friday

00:08:38,979 --> 00:08:46,050
name is past patron create automated

00:08:42,270 --> 00:08:49,240
automated package specific tests will be

00:08:46,050 --> 00:08:52,750
run by Camille pal she's also from

00:08:49,240 --> 00:08:55,600
melting so if you want to know about the

00:08:52,750 --> 00:08:58,420
spectrum how it works out to create out

00:08:55,600 --> 00:09:03,880
there on your own tests just go to this

00:08:58,420 --> 00:09:08,710
one presentation open QA as I said it's

00:09:03,880 --> 00:09:13,360
too made by opensuse in past we have to

00:09:08,710 --> 00:09:18,330
do all the testing manual we had no

00:09:13,360 --> 00:09:24,520
automated test and if I show you the

00:09:18,330 --> 00:09:30,130
messages we had to fill and we have to

00:09:24,520 --> 00:09:33,460
test all those cases it's really long

00:09:30,130 --> 00:09:36,400
creased it's like those are all test

00:09:33,460 --> 00:09:40,660
cases or every line with some test case

00:09:36,400 --> 00:09:45,889
we had to run manually and it took like

00:09:40,660 --> 00:09:49,639
two days of four people work so yeah it

00:09:45,889 --> 00:09:53,149
was very hard to test and usually there

00:09:49,639 --> 00:09:56,060
was some race composed and it has to be

00:09:53,149 --> 00:09:58,819
tested in one day because there was

00:09:56,060 --> 00:10:05,709
gonna go and we have to decide if it's

00:09:58,819 --> 00:10:11,089
okay to release it or not so that wasn't

00:10:05,709 --> 00:10:14,589
right like a time we have to work real

00:10:11,089 --> 00:10:17,839
robot and it's quite boring to run

00:10:14,589 --> 00:10:26,810
installation test like hundred time okay

00:10:17,839 --> 00:10:31,550
so Joseph Stalin kin-yuen say black came

00:10:26,810 --> 00:10:35,779
with the idea of trying to run something

00:10:31,550 --> 00:10:39,379
which put automated tests and open suse

00:10:35,779 --> 00:10:43,129
which I I think they use anaconda for

00:10:39,379 --> 00:10:47,120
installation too they had some tool

00:10:43,129 --> 00:10:50,360
which was used to test installation so

00:10:47,120 --> 00:10:53,660
yeah they try to run it on fedora they

00:10:50,360 --> 00:10:56,240
said okay let's try it this week we can

00:10:53,660 --> 00:10:58,579
we will work on running this on fedora

00:10:56,240 --> 00:11:01,670
if it will work we can use it if not

00:10:58,579 --> 00:11:05,149
let's find something else and it works

00:11:01,670 --> 00:11:11,120
and it works quite well if you look on

00:11:05,149 --> 00:11:14,180
those matrices there are like results

00:11:11,120 --> 00:11:20,680
from coconuts it's our project coconut

00:11:14,180 --> 00:11:23,710
wishes are open QA and it's you

00:11:20,680 --> 00:11:26,680
supposed to Europe yeah it's like

00:11:23,710 --> 00:11:29,830
automated automated testing and it

00:11:26,680 --> 00:11:33,520
tastes a lot of tests which should took

00:11:29,830 --> 00:11:36,850
us like a lot of time you can see that

00:11:33,520 --> 00:11:44,290
that that's all my working how in the

00:11:36,850 --> 00:11:46,750
installation so it helped a lot and now

00:11:44,290 --> 00:11:51,880
when there is some race almost

00:11:46,750 --> 00:11:55,170
everything gets tested by open QA and we

00:11:51,880 --> 00:12:00,490
have to test only some hardware specific

00:11:55,170 --> 00:12:05,290
things that for example the dvds or like

00:12:00,490 --> 00:12:08,430
life images will boot from USB or

00:12:05,290 --> 00:12:11,820
something which should be tested on

00:12:08,430 --> 00:12:15,250
hardware & locks in the virtual machine

00:12:11,820 --> 00:12:21,450
because open grave course uses virtual

00:12:15,250 --> 00:12:24,160
machine like this grammar is used so and

00:12:21,450 --> 00:12:27,160
the great thing is that it's made by

00:12:24,160 --> 00:12:33,279
opensuse they maintain it no or maintain

00:12:27,160 --> 00:12:38,350
the gold we just have our instance for

00:12:33,279 --> 00:12:42,959
fedora but if we have some bucks we just

00:12:38,350 --> 00:12:47,350
feel some ticket and they will probably

00:12:42,959 --> 00:12:50,680
fix it it uses opencv to match patterns

00:12:47,350 --> 00:12:54,459
on screen so it takes a screenshot you

00:12:50,680 --> 00:12:57,279
have some predefined screenshots or some

00:12:54,459 --> 00:13:01,300
parts of the screenshot and you it

00:12:57,279 --> 00:13:03,310
search if it's on somewhere on the

00:13:01,300 --> 00:13:07,380
screen shot which it made during the

00:13:03,310 --> 00:13:12,370
installation with fines if it can click

00:13:07,380 --> 00:13:16,870
or use the keyboard and it is VNC for

00:13:12,370 --> 00:13:20,410
this and so you just define those steps

00:13:16,870 --> 00:13:25,240
like wait for this image to appear click

00:13:20,410 --> 00:13:27,750
somewhere and it will go through the

00:13:25,240 --> 00:13:32,310
installation maybe the

00:13:27,750 --> 00:13:39,090
screenshots and then it has organized oh

00:13:32,310 --> 00:13:43,840
not a nice but it has some front-end and

00:13:39,090 --> 00:13:49,020
you can see those result this is those

00:13:43,840 --> 00:13:53,470
are results from 11 test of some build

00:13:49,020 --> 00:13:58,960
you can see those green ones are which

00:13:53,470 --> 00:14:05,790
past those threaten our which failed you

00:13:58,960 --> 00:14:10,240
can look on what fail like you see those

00:14:05,790 --> 00:14:13,330
screenshots and what it try to find and

00:14:10,240 --> 00:14:19,050
where it failed so you can see what

00:14:13,330 --> 00:14:23,710
happens and yeah it's really helpful and

00:14:19,050 --> 00:14:28,180
writing this for it isn't hard to there

00:14:23,710 --> 00:14:34,420
are some more complicated things that

00:14:28,180 --> 00:14:37,270
are armed easy to write and use but when

00:14:34,420 --> 00:14:40,150
you get rid its not so hard and it still

00:14:37,270 --> 00:14:45,960
takes a lot of time if you want to know

00:14:40,150 --> 00:14:50,710
more about Oh punky way there is a dalek

00:14:45,960 --> 00:14:55,510
made by young said locking you subscribe

00:14:50,710 --> 00:14:57,970
Anka it's today at half past four and

00:14:55,510 --> 00:15:02,770
it's called Oslo testing it open today

00:14:57,970 --> 00:15:08,710
so go there and see how it works and how

00:15:02,770 --> 00:15:13,840
green tea is ok that was everything from

00:15:08,710 --> 00:15:16,720
automation and what we ultimately now we

00:15:13,840 --> 00:15:19,710
have also other responsibilities or we

00:15:16,720 --> 00:15:24,790
have to test something still manually

00:15:19,710 --> 00:15:26,770
there are composites made now every day

00:15:24,790 --> 00:15:30,160
but from time to time there are some

00:15:26,770 --> 00:15:30,790
more important composites which for

00:15:30,160 --> 00:15:34,030
example

00:15:30,790 --> 00:15:37,300
then you anaconda or something and for

00:15:34,030 --> 00:15:40,540
those are new matrices testing matrices

00:15:37,300 --> 00:15:46,720
creative and we have to test as much

00:15:40,540 --> 00:15:52,920
test cases as we could also we try to we

00:15:46,720 --> 00:15:59,850
have to have to test during Greece I

00:15:52,920 --> 00:16:03,310
will talk about it a bit later and

00:15:59,850 --> 00:16:07,810
another thing we have to we should test

00:16:03,310 --> 00:16:10,960
our updates testing let's think that we

00:16:07,810 --> 00:16:14,470
don't have capacity to test all because

00:16:10,960 --> 00:16:19,030
there's a lot of updates in in system

00:16:14,470 --> 00:16:21,610
and we don't understand to every package

00:16:19,030 --> 00:16:24,250
or we don't all of the glass we don't

00:16:21,610 --> 00:16:29,350
know the package so and that's thing

00:16:24,250 --> 00:16:32,410
that their community helped solve and be

00:16:29,350 --> 00:16:37,570
great if the community will be much

00:16:32,410 --> 00:16:40,690
greater so that's not racist it's death

00:16:37,570 --> 00:16:44,970
notices to for testing composes there

00:16:40,690 --> 00:16:48,100
are more types with test installation

00:16:44,970 --> 00:16:53,340
that that's the longest matter is you

00:16:48,100 --> 00:16:57,130
see there is some base functionality of

00:16:53,340 --> 00:17:01,240
system like it would it looks nice and

00:16:57,130 --> 00:17:06,180
it's the logging is working salimos

00:17:01,240 --> 00:17:09,730
saline ox is working and its own and

00:17:06,180 --> 00:17:14,500
services are working and so and there is

00:17:09,730 --> 00:17:18,930
also metric matrix for this top where we

00:17:14,500 --> 00:17:22,630
try to bury test the test cases for our

00:17:18,930 --> 00:17:26,310
desktops like Guam and grey those are

00:17:22,630 --> 00:17:30,160
our primary or release blocking desktop

00:17:26,310 --> 00:17:33,350
environments and there are also two test

00:17:30,160 --> 00:17:37,170
cases for other likes you know

00:17:33,350 --> 00:17:39,600
except see but those that are not

00:17:37,170 --> 00:17:43,580
released blocking but they are there so

00:17:39,600 --> 00:17:49,670
if you use it you can test it and feel

00:17:43,580 --> 00:17:54,920
results so for example developer can see

00:17:49,670 --> 00:17:58,710
what works and what not and there are

00:17:54,920 --> 00:18:02,810
another matrix is for server because one

00:17:58,710 --> 00:18:06,120
of which are correct name product

00:18:02,810 --> 00:18:10,080
release there's workstation server and

00:18:06,120 --> 00:18:16,920
cloud so we test server and cold too and

00:18:10,080 --> 00:18:19,650
there are matrices for left to as I said

00:18:16,920 --> 00:18:23,870
we have those matrices only for some

00:18:19,650 --> 00:18:27,870
cocoa sees those more important which

00:18:23,870 --> 00:18:30,780
contains some big changes and also we

00:18:27,870 --> 00:18:33,450
test create the matrices for risk

00:18:30,780 --> 00:18:37,860
composites which are something which we

00:18:33,450 --> 00:18:43,590
would like release as alphabet our final

00:18:37,860 --> 00:18:46,890
release when it comes to new release

00:18:43,590 --> 00:18:51,780
cycle when the new federer is brand

00:18:46,890 --> 00:18:55,890
fruit from rawhide for example now the

00:18:51,780 --> 00:19:00,660
fair identify this branch and the

00:18:55,890 --> 00:19:03,930
testing of future federal 25 starts now

00:19:00,660 --> 00:19:08,820
we are in prayerful face that means that

00:19:03,930 --> 00:19:14,130
we have some we have some criteria which

00:19:08,820 --> 00:19:19,280
should be met with in alpha like it can

00:19:14,130 --> 00:19:28,290
be installed on locally on one disk and

00:19:19,280 --> 00:19:31,350
that's all if if there are no bugs which

00:19:28,290 --> 00:19:34,590
would broke those criteria we can really

00:19:31,350 --> 00:19:36,800
suffer then we move to put a fake beta

00:19:34,590 --> 00:19:39,190
phase where those criteria are most

00:19:36,800 --> 00:19:43,600
strict and

00:19:39,190 --> 00:19:46,260
at the end the is there are final

00:19:43,600 --> 00:19:49,510
criteria which are like most explain

00:19:46,260 --> 00:19:56,110
everything should work and installing

00:19:49,510 --> 00:19:58,420
two disks on network like using I study

00:19:56,110 --> 00:20:02,740
and something like that I have to work

00:19:58,420 --> 00:20:06,760
and and the logo or background have to

00:20:02,740 --> 00:20:10,450
be right and there is like small things

00:20:06,760 --> 00:20:14,440
which should work and when everything is

00:20:10,450 --> 00:20:17,830
okay when we test everything and there

00:20:14,440 --> 00:20:23,020
is no bugs which are important enough to

00:20:17,830 --> 00:20:26,320
block the race then we say go and if

00:20:23,020 --> 00:20:32,050
everything else is ok too then the

00:20:26,320 --> 00:20:35,550
release is released we text both on

00:20:32,050 --> 00:20:40,390
hardware but mostly on virtual machine

00:20:35,550 --> 00:20:43,150
there are tests which can't be or could

00:20:40,390 --> 00:20:47,410
be tested on with in virtual machine but

00:20:43,150 --> 00:20:50,890
the results could be different from

00:20:47,410 --> 00:20:56,470
those when you run it on other as I said

00:20:50,890 --> 00:20:59,320
for example booting from CD or USB quite

00:20:56,470 --> 00:21:02,830
important because it happened in past

00:20:59,320 --> 00:21:10,630
that we released image with which when

00:21:02,830 --> 00:21:14,260
we was placed on CD it didn't put so we

00:21:10,630 --> 00:21:19,590
try to make sure that it won't happen

00:21:14,260 --> 00:21:25,330
again if there are some bucks which

00:21:19,590 --> 00:21:27,520
break some or break some criteria then

00:21:25,330 --> 00:21:30,490
we call them blocker box there are

00:21:27,520 --> 00:21:33,970
meetings where we discuss if it if the

00:21:30,490 --> 00:21:36,180
particular buck is blocker or not if

00:21:33,970 --> 00:21:40,570
there is some Booker the risk can be

00:21:36,180 --> 00:21:41,740
released or compost can be alpha can be

00:21:40,570 --> 00:21:47,140
released and we

00:21:41,740 --> 00:21:51,820
wait for the figs and as I said open QA

00:21:47,140 --> 00:21:54,520
helps us a lot with this or for now it

00:21:51,820 --> 00:21:58,000
works just for installation tests and

00:21:54,520 --> 00:22:03,120
base this those like running services

00:21:58,000 --> 00:22:09,250
works and so but it helps a lot that's

00:22:03,120 --> 00:22:14,850
metrics okay during the release of new

00:22:09,250 --> 00:22:17,710
fedora we have events called these days

00:22:14,850 --> 00:22:20,860
those are dead the days which are

00:22:17,710 --> 00:22:24,880
focused on testing of one feature if

00:22:20,860 --> 00:22:29,110
there is some new feature in fedora for

00:22:24,880 --> 00:22:33,580
example newcomb or anything you can

00:22:29,110 --> 00:22:35,770
imagine and it has to be properly tested

00:22:33,580 --> 00:22:38,710
or developers want to test it more

00:22:35,770 --> 00:22:43,900
properly and we would be good to in our

00:22:38,710 --> 00:22:49,720
small numbers then we can or then the

00:22:43,900 --> 00:22:52,270
test day even is set and the great thing

00:22:49,720 --> 00:22:57,640
about it is that it's focused on one day

00:22:52,270 --> 00:23:01,270
so everyone can come test test case is

00:22:57,640 --> 00:23:07,150
prepared just for this one feature and

00:23:01,270 --> 00:23:08,800
there are developers on the IRC and so

00:23:07,150 --> 00:23:12,100
when you have some problem you can

00:23:08,800 --> 00:23:19,510
communicate with them but it helps debug

00:23:12,100 --> 00:23:24,700
those bugs and with the developers or

00:23:19,510 --> 00:23:28,660
testers and usually a lot of people come

00:23:24,700 --> 00:23:31,420
or not sometimes not a lot but more than

00:23:28,660 --> 00:23:35,429
it would be normally because it's

00:23:31,420 --> 00:23:39,120
usually more than four of us which who's

00:23:35,429 --> 00:23:43,770
normally tested more people will come on

00:23:39,120 --> 00:23:45,660
Thursday so the feature will get more

00:23:43,770 --> 00:23:51,600
coverage

00:23:45,660 --> 00:23:54,030
and also problems are really solved

00:23:51,600 --> 00:23:59,130
quicker because developer is focused

00:23:54,030 --> 00:24:03,270
just on this day he can have those data

00:23:59,130 --> 00:24:10,830
those he can debug it like in the time

00:24:03,270 --> 00:24:16,590
and it hopes salt one of those one of

00:24:10,830 --> 00:24:18,810
those rights more if this days was for

00:24:16,590 --> 00:24:21,360
example a work section can pick

00:24:18,810 --> 00:24:25,290
elaborate upgrade you can see that a lot

00:24:21,360 --> 00:24:28,890
of people came and tested those those

00:24:25,290 --> 00:24:34,560
are names of testers and there are

00:24:28,890 --> 00:24:39,720
problems which they found so yeah for

00:24:34,560 --> 00:24:44,100
example Camille and come to this as they

00:24:39,720 --> 00:24:48,410
found a lot of bugs just because we were

00:24:44,100 --> 00:24:52,830
focused on just one thing so it's really

00:24:48,410 --> 00:24:57,000
really beautiful opportunity to to

00:24:52,830 --> 00:25:01,830
developers to test their test a new

00:24:57,000 --> 00:25:08,460
feature and of course for example when

00:25:01,830 --> 00:25:11,130
there is some been on Thursday you acid

00:25:08,460 --> 00:25:13,440
ester can come and see if there are new

00:25:11,130 --> 00:25:17,130
features you can try them before they

00:25:13,440 --> 00:25:24,390
will be released and I from time to time

00:25:17,130 --> 00:25:27,180
I like find something new which I didn't

00:25:24,390 --> 00:25:30,210
know that it works in Rome for example I

00:25:27,180 --> 00:25:33,150
know recording of workstation of

00:25:30,210 --> 00:25:37,590
something so yeah you can find their new

00:25:33,150 --> 00:25:41,160
new stuff you didn't know about so it's

00:25:37,590 --> 00:25:44,220
good to look if there is some test day

00:25:41,160 --> 00:25:49,250
which would be important to you for

00:25:44,220 --> 00:25:53,780
example very good as day is usually

00:25:49,250 --> 00:25:53,780
power management because it's

00:25:54,820 --> 00:26:01,220
you can bring your own test your own

00:25:58,070 --> 00:26:04,000
laptop and test how it works if it

00:26:01,220 --> 00:26:09,080
doesn't work you can talk to developers

00:26:04,000 --> 00:26:17,390
what you can do to make the battery life

00:26:09,080 --> 00:26:22,990
longer so okay boker box as I said we

00:26:17,390 --> 00:26:28,370
have those great criteria for releases

00:26:22,990 --> 00:26:31,909
it looks like alpha whiskey for example

00:26:28,370 --> 00:26:35,570
there is a list of things that should

00:26:31,909 --> 00:26:39,559
work like requirements on wreck in

00:26:35,570 --> 00:26:44,929
insulator which is anaconda that it was

00:26:39,559 --> 00:26:49,210
some it has it has to use remote Piketty

00:26:44,929 --> 00:26:53,270
source and it's just basic things like

00:26:49,210 --> 00:26:58,909
that these playoffs have to quit has to

00:26:53,270 --> 00:27:02,600
use 11 disc and that's all we don't need

00:26:58,909 --> 00:27:06,280
anything else in alpha so yeah there are

00:27:02,600 --> 00:27:11,980
those criteria and we if we book find

00:27:06,280 --> 00:27:15,919
some bark which doesn't matter then we

00:27:11,980 --> 00:27:19,640
discuss it on our very long water back

00:27:15,919 --> 00:27:23,110
meeting and say that it's Walker then

00:27:19,640 --> 00:27:23,110
it's put on the page

00:27:29,549 --> 00:27:38,480
yeah it's a blocker box up there you can

00:27:35,330 --> 00:27:41,129
propose some if you find some broker

00:27:38,480 --> 00:27:46,669
find some bug and you think that it's

00:27:41,129 --> 00:27:51,210
blocker that it's important to have to

00:27:46,669 --> 00:27:55,980
have this bug fixed you can propose this

00:27:51,210 --> 00:28:03,779
bug here everything you need is be

00:27:55,980 --> 00:28:07,159
locked in with your first account and

00:28:03,779 --> 00:28:11,549
then you just put their the back ID

00:28:07,159 --> 00:28:14,190
which milestone it breaks off the final

00:28:11,549 --> 00:28:17,850
and if it's poker or freeze exception

00:28:14,190 --> 00:28:20,789
please exception is something what's not

00:28:17,850 --> 00:28:24,690
so important to block the release but

00:28:20,789 --> 00:28:27,809
it's when the back will be fixed we

00:28:24,690 --> 00:28:32,989
consider it important enough to put the

00:28:27,809 --> 00:28:37,320
courage to the compose even after the

00:28:32,989 --> 00:28:41,249
freeze happened this is something where

00:28:37,320 --> 00:28:46,769
it's moment after which no updates are

00:28:41,249 --> 00:28:50,549
put on the compose only updates which

00:28:46,769 --> 00:28:53,369
fix some blocker or this exception so

00:28:50,549 --> 00:28:57,619
please exception are for example bugs

00:28:53,369 --> 00:29:02,100
like some glitches in graphic or

00:28:57,619 --> 00:29:04,019
something what doesn isn't important

00:29:02,100 --> 00:29:07,529
enough to block the release but it's

00:29:04,019 --> 00:29:10,679
very annoying for ism for example yeah

00:29:07,529 --> 00:29:14,549
and if you propose the bar will appear

00:29:10,679 --> 00:29:17,749
here as proposed but then we discussed

00:29:14,549 --> 00:29:21,320
those on the poker bot meeting can

00:29:17,749 --> 00:29:23,940
decide if it's working or not of course

00:29:21,320 --> 00:29:27,590
you can join the blocker meeting

00:29:23,940 --> 00:29:27,590
too so you can say

00:29:28,930 --> 00:29:36,640
say what do you mean by the what's

00:29:32,650 --> 00:29:39,370
remaining a little bit but there is also

00:29:36,640 --> 00:29:44,620
list about accepted blockers do sir box

00:29:39,370 --> 00:29:51,600
which have to be fixed before for

00:29:44,620 --> 00:29:51,600
example alpha release will be will be

00:29:51,840 --> 00:29:54,840
released

00:29:58,029 --> 00:30:05,460
yes and the good thing about it is that

00:30:01,719 --> 00:30:09,070
developers usually see to it you see

00:30:05,460 --> 00:30:12,629
that if their buck is blocker back and

00:30:09,070 --> 00:30:19,119
they know that they should fix it very

00:30:12,629 --> 00:30:24,549
 really quickly because we would

00:30:19,119 --> 00:30:31,119
wait on their fix that's also why

00:30:24,549 --> 00:30:35,200
sometimes forgets some delays sometimes

00:30:31,119 --> 00:30:38,499
almost always here because when we when

00:30:35,200 --> 00:30:43,989
the releases for example delight for

00:30:38,499 --> 00:30:46,989
eight weeks it doesn't mean that that we

00:30:43,989 --> 00:30:49,359
are out of schedule it doesn't just mean

00:30:46,989 --> 00:30:53,589
that we want to have all those bugs

00:30:49,359 --> 00:30:58,539
fixed and wait for it so usually don't

00:30:53,589 --> 00:31:03,249
say ok let it be it may be breaks stuff

00:30:58,539 --> 00:31:07,809
and delete all data from users and kill

00:31:03,249 --> 00:31:13,450
all those kittens but we don't do that

00:31:07,809 --> 00:31:17,679
than usual mostly and just want to get

00:31:13,450 --> 00:31:21,549
those fixed properly box sometimes it's

00:31:17,679 --> 00:31:23,979
not so domestic because for example when

00:31:21,549 --> 00:31:28,409
you have feature where only one

00:31:23,979 --> 00:31:30,759
developer is there and he has to do

00:31:28,409 --> 00:31:35,019
something else or as a lot of work

00:31:30,759 --> 00:31:39,030
because he's alone for twenty important

00:31:35,019 --> 00:31:41,550
packages then p 12

00:31:39,030 --> 00:31:44,420
the big bug to be fixed at least somehow

00:31:41,550 --> 00:31:47,940
so from time to time it doesn't work

00:31:44,420 --> 00:31:55,310
correctly but at least it won't break

00:31:47,940 --> 00:31:58,920
your stuff like computer your data and

00:31:55,310 --> 00:32:01,020
we wait for it so and you will see some

00:31:58,920 --> 00:32:04,850
delay that's probably because open

00:32:01,020 --> 00:32:14,070
because federal Q a separate then the

00:32:04,850 --> 00:32:18,600
program's the most time-consuming stuff

00:32:14,070 --> 00:32:24,950
would be software updates testing up

00:32:18,600 --> 00:32:29,580
this those updates usually don't go

00:32:24,950 --> 00:32:35,580
directly to the to the distribution to

00:32:29,580 --> 00:32:39,630
the release it it gets to the updates

00:32:35,580 --> 00:32:43,590
testing repository firstly there it

00:32:39,630 --> 00:32:47,430
should be tested it gets some karma

00:32:43,590 --> 00:32:50,430
which is the way you say I think that it

00:32:47,430 --> 00:32:54,320
works you put it to the Karma to it and

00:32:50,430 --> 00:32:57,630
when it has enough of karma then it is

00:32:54,320 --> 00:33:01,320
pushed to the stable and all users still

00:32:57,630 --> 00:33:06,750
got those updates so that's something

00:33:01,320 --> 00:33:13,500
how we ensure that those updates won't

00:33:06,750 --> 00:33:17,760
break computer system but there is a lot

00:33:13,500 --> 00:33:20,370
of that's ideal case that there is a lot

00:33:17,760 --> 00:33:24,750
of updates for a lot of packages and

00:33:20,370 --> 00:33:28,140
that means that not every gets

00:33:24,750 --> 00:33:31,670
test it properly so there are some ways

00:33:28,140 --> 00:33:36,780
that for example if it's not critical

00:33:31,670 --> 00:33:38,790
update from some important package then

00:33:36,780 --> 00:33:42,590
in for example can be pushed to the

00:33:38,790 --> 00:33:46,080
stable after five days of being in

00:33:42,590 --> 00:33:50,910
updates testing so yeah we wait if

00:33:46,080 --> 00:33:58,200
someone tests it then it's great if

00:33:50,910 --> 00:33:59,850
notes then okay we push it anyway it

00:33:58,200 --> 00:34:05,990
would be nice if it would wouldn't

00:33:59,850 --> 00:34:09,510
happen so more testers will be useful

00:34:05,990 --> 00:34:11,700
updates are only in stable releases and

00:34:09,510 --> 00:34:18,929
soon to be stable release for example

00:34:11,700 --> 00:34:23,159
now f25 got some updates I guess starts

00:34:18,929 --> 00:34:25,080
to get some updates or no updates

00:34:23,159 --> 00:34:30,530
testing because after updates the

00:34:25,080 --> 00:34:30,530
thinking goes directly to to stable

00:34:41,660 --> 00:34:48,870
there's some dates texting which is

00:34:44,870 --> 00:34:53,310
repository usually not not use you can

00:34:48,870 --> 00:34:57,270
enable it and there is update repository

00:34:53,310 --> 00:35:01,500
which are updates to the starting point

00:34:57,270 --> 00:35:03,930
of the release when the sorry when the

00:35:01,500 --> 00:35:06,510
for example when the federal n t5 will

00:35:03,930 --> 00:35:09,690
get released it will be in stable for

00:35:06,510 --> 00:35:13,170
federal repository and everything after

00:35:09,690 --> 00:35:22,710
the moment we release it is going to

00:35:13,170 --> 00:35:26,370
updates repository yes yes only when

00:35:22,710 --> 00:35:30,120
during the face of releasing or testing

00:35:26,370 --> 00:35:32,880
the new release for example 25 those it

00:35:30,120 --> 00:35:36,150
goes from updates testing directly to

00:35:32,880 --> 00:35:39,570
the stable which will be very nice like

00:35:36,150 --> 00:35:44,030
federated parsippany but after G it will

00:35:39,570 --> 00:35:48,680
put updates instead so in fedora

00:35:44,030 --> 00:35:53,910
repository the original is the state of

00:35:48,680 --> 00:35:57,960
the system which was tested prop most

00:35:53,910 --> 00:36:01,640
culturally and then you can install

00:35:57,960 --> 00:36:04,920
dates which are updates repository and

00:36:01,640 --> 00:36:08,640
there is also row height and it has no

00:36:04,920 --> 00:36:15,440
updates this thing it's like testing on

00:36:08,640 --> 00:36:15,440
your system directly the system for

00:36:15,650 --> 00:36:26,940
updates is body looks like this where

00:36:20,700 --> 00:36:31,200
you can look both smoother who tested

00:36:26,940 --> 00:36:34,599
most most updates which updates are

00:36:31,200 --> 00:36:38,220
there the newest or everything

00:36:34,599 --> 00:36:41,920
you can also find for example if you

00:36:38,220 --> 00:36:47,920
believe that something doesn't work for

00:36:41,920 --> 00:36:53,309
example I don't know sevenoaks ok

00:36:47,920 --> 00:36:53,309
excellent fire folks

00:36:53,619 --> 00:37:03,359
then you can find all updates you can

00:36:59,589 --> 00:37:06,789
you can see the status it means in which

00:37:03,359 --> 00:37:08,730
repository it is for example testing

00:37:06,789 --> 00:37:11,559
means that its updates testing

00:37:08,730 --> 00:37:16,299
repository and it's not in stable and

00:37:11,559 --> 00:37:19,380
second means usually updates but if good

00:37:16,299 --> 00:37:22,829
means also when further identify which

00:37:19,380 --> 00:37:28,980
Arabia but usually its updates

00:37:22,829 --> 00:37:36,490
repository so you can look on the update

00:37:28,980 --> 00:37:44,380
update you can see update ID there

00:37:36,490 --> 00:37:48,039
should be a link to koji where you can

00:37:44,380 --> 00:37:52,180
see those packages and their comments

00:37:48,039 --> 00:37:54,970
from testers and you can put their karma

00:37:52,180 --> 00:37:58,539
if you could think that it works you can

00:37:54,970 --> 00:38:00,670
put the comma this one or you can say

00:37:58,539 --> 00:38:05,529
that it doesn't work which means minus

00:38:00,670 --> 00:38:10,720
one so you can download those updates

00:38:05,529 --> 00:38:12,730
cool if you find out that it breaks your

00:38:10,720 --> 00:38:16,420
system or it doesn't stop after the

00:38:12,730 --> 00:38:21,420
update you can put their negative karma

00:38:16,420 --> 00:38:27,190
and it won't be pushed to the stable and

00:38:21,420 --> 00:38:31,960
when you update to be has to be created

00:38:27,190 --> 00:38:35,769
again units only fuss account and then

00:38:31,960 --> 00:38:39,970
you can you can test and provide karma

00:38:35,769 --> 00:38:42,609
and you will get the badge for this so

00:38:39,970 --> 00:38:46,779
if you want to have a new batch and you

00:38:42,609 --> 00:38:48,180
don't have her it's now you can give

00:38:46,779 --> 00:38:51,960
carm up this

00:38:48,180 --> 00:38:55,900
multiple veggies is like for one car

00:38:51,960 --> 00:39:00,130
mount carmel ok so if you provide it is

00:38:55,900 --> 00:39:03,940
karma you go get veggies and everyone

00:39:00,130 --> 00:39:07,990
once projects it's great there are also

00:39:03,940 --> 00:39:10,770
some test cases in some not in a very

00:39:07,990 --> 00:39:14,650
package but some have some test cases so

00:39:10,770 --> 00:39:16,980
you can find find out how to test it or

00:39:14,650 --> 00:39:25,990
how developers want Vic to the statement

00:39:16,980 --> 00:39:30,120
so you can look there ok thanks for

00:39:25,990 --> 00:39:33,610
future sai said open q8 now that's only

00:39:30,120 --> 00:39:38,440
installation so we would like to test

00:39:33,610 --> 00:39:45,670
desktop too so one way to do it is to

00:39:38,440 --> 00:39:50,560
use behave and look tail which is behave

00:39:45,670 --> 00:39:52,849
driven testing and it's something what

00:39:50,560 --> 00:39:56,089
desktop QE in

00:39:52,849 --> 00:39:58,400
redhead does so that's one way and other

00:39:56,089 --> 00:40:00,470
way would be open cute to US open key

00:39:58,400 --> 00:40:03,799
way but there there would be a lot of

00:40:00,470 --> 00:40:08,690
problems with changing of phones and

00:40:03,799 --> 00:40:11,479
everything because it's very problem 24

00:40:08,690 --> 00:40:17,140
open cave and small things changes it

00:40:11,479 --> 00:40:21,680
makes the image recognition heart and

00:40:17,140 --> 00:40:25,089
yeah that's it we would like to have be

00:40:21,680 --> 00:40:30,440
crane stance in Federer in future so

00:40:25,089 --> 00:40:33,739
people who have some tests on beaker

00:40:30,440 --> 00:40:36,349
would be able to Randall in further up

00:40:33,739 --> 00:40:39,979
to and I'll also better coverage of

00:40:36,349 --> 00:40:43,940
testing automation and there is a lot of

00:40:39,979 --> 00:40:47,569
work on task i'm still yet so yeah

00:40:43,940 --> 00:40:51,099
there's a lot of things so how it can

00:40:47,569 --> 00:40:59,029
help us you can join us if you visit the

00:40:51,099 --> 00:41:01,719
wiki page to a /join then you will find

00:40:59,029 --> 00:41:04,940
out what you can do and how to join us

00:41:01,719 --> 00:41:09,140
you can communicate with us on the IRC

00:41:04,940 --> 00:41:16,359
channel it's Federer QA not testing as I

00:41:09,140 --> 00:41:20,210
said you can submit to test my wrinkly

00:41:16,359 --> 00:41:28,519
add QA calendar it's if you know federal

00:41:20,210 --> 00:41:31,460
code and we have we yeah o our calendar

00:41:28,519 --> 00:41:33,410
tool now there are only meetings and

00:41:31,460 --> 00:41:37,749
test days so if you want to know about

00:41:33,410 --> 00:41:42,680
these days just at fed up our QA Federer

00:41:37,749 --> 00:41:46,339
calendar their calendar or you can join

00:41:42,680 --> 00:41:50,509
on Thursdays you can find us on the

00:41:46,339 --> 00:41:53,630
calendar of course use a bird and

00:41:50,509 --> 00:41:59,269
something breaks you hurry we'll see

00:41:53,630 --> 00:42:02,450
popup message it failed so try to at

00:41:59,269 --> 00:42:03,890
least report it by a bag or click record

00:42:02,450 --> 00:42:07,220
the globe problem

00:42:03,890 --> 00:42:10,430
you can also refer you to Priscilla with

00:42:07,220 --> 00:42:14,299
it or you can directly use the box alone

00:42:10,430 --> 00:42:18,049
and of course if you have some packages

00:42:14,299 --> 00:42:23,930
which you use and you would be you would

00:42:18,049 --> 00:42:26,440
like to for them to be functional then

00:42:23,930 --> 00:42:32,450
you can provide karma it would be create

00:42:26,440 --> 00:42:36,890
more testers here also you can try row

00:42:32,450 --> 00:42:41,990
height that's really good place to find

00:42:36,890 --> 00:42:45,349
some hugs and it's very good for those

00:42:41,990 --> 00:42:48,319
who likes new technology so if you want

00:42:45,349 --> 00:42:52,039
to know how future Farrah will look like

00:42:48,319 --> 00:42:56,539
it it's the place where it can look

00:42:52,039 --> 00:43:03,230
right and there are some links I think

00:42:56,539 --> 00:43:09,259
there is a row eyes in a living on the

00:43:03,230 --> 00:43:13,420
edge ok so that's all for me from me if

00:43:09,259 --> 00:43:13,420
you have some questions now is the time

00:43:15,099 --> 00:43:20,200
no longer asian paints okay

00:43:18,609 --> 00:43:24,550
in the local Asian

00:43:20,200 --> 00:43:28,890
Manuel base is any possibility that can

00:43:24,550 --> 00:43:28,890
have over men

00:43:29,200 --> 00:43:37,370
localization in open cooing what is open

00:43:33,140 --> 00:43:41,750
doing by evolutionary stage that the

00:43:37,370 --> 00:43:44,660
manual pew intense is focusing able to

00:43:41,750 --> 00:43:47,270
pick up there any incomplete translation

00:43:44,660 --> 00:43:55,170
strings as well as any background

00:43:47,270 --> 00:43:59,880
searching for take time only

00:43:55,170 --> 00:43:59,880
but the company was already

00:43:59,940 --> 00:44:04,550
translation probably can be picked up

00:44:06,020 --> 00:44:15,060
well isn't the translation coverage in

00:44:10,830 --> 00:44:19,800
the translation system so you can like

00:44:15,060 --> 00:44:21,390
overall picture yeah but for example

00:44:19,800 --> 00:44:24,620
there are tests days for localization

00:44:21,390 --> 00:44:26,910
and they are trying to find bugs where

00:44:24,620 --> 00:44:32,280
something is not set in the way is

00:44:26,910 --> 00:44:42,750
properly for example or the transition

00:44:32,280 --> 00:44:46,370
is wrong i think the various incomplete

00:44:42,750 --> 00:44:50,550
transfer but it is not that as

00:44:46,370 --> 00:44:54,210
constraints by the people so we cannot

00:44:50,550 --> 00:45:01,560
provide translation either way we have

00:44:54,210 --> 00:45:06,570
thought about to be I have to say I am

00:45:01,560 --> 00:45:10,110
not sure how I can imagine it but it

00:45:06,570 --> 00:45:12,360
would be a long way and very hard work

00:45:10,110 --> 00:45:16,350
because you would have to take some

00:45:12,360 --> 00:45:19,410
picture for example find text and see if

00:45:16,350 --> 00:45:22,020
it's in a correct language and so but we

00:45:19,410 --> 00:45:26,720
read with be a bit for bit our current

00:45:22,020 --> 00:45:26,720
tools it wouldn't be possible probably

00:45:31,820 --> 00:45:39,900
I'm left you a so comical exactly how

00:45:35,490 --> 00:45:44,400
issue can be done in a one run against

00:45:39,900 --> 00:45:46,110
to the blue really yeah so damaged good

00:45:44,400 --> 00:45:47,970
can be running in task of terrain for

00:45:46,110 --> 00:45:49,830
women if you already have some clue

00:45:47,970 --> 00:45:52,380
which is able to detect some of these

00:45:49,830 --> 00:45:54,690
errors we get around for example if it

00:45:52,380 --> 00:46:07,640
is like we can write on a new budget

00:45:54,690 --> 00:46:11,610
bill if you can run the rpms or Japanese

00:46:07,640 --> 00:46:18,119
San hunger strings translated two days

00:46:11,610 --> 00:46:24,650
three we can look like

00:46:18,119 --> 00:46:24,650
yeah another questions

00:46:44,519 --> 00:46:48,839
Randy's Desmond

00:46:55,710 --> 00:47:06,500
ok I'm not really sure because open PA

00:46:59,480 --> 00:47:10,619
it uses a few Hugh Grant's them well

00:47:06,500 --> 00:47:15,750
then and/or live there but I defender

00:47:10,619 --> 00:47:19,800
and if you are able to run Gemma powerpc

00:47:15,750 --> 00:47:22,290
no it should be also possible I guess

00:47:19,800 --> 00:47:24,089
you are open today without pc but i

00:47:22,290 --> 00:47:26,820
don't really know if somebody build it

00:47:24,089 --> 00:47:29,980
from pc it is available it's an open

00:47:26,820 --> 00:47:32,330
source project so I

00:47:29,980 --> 00:47:34,370
if you want to know something about the

00:47:32,330 --> 00:47:39,170
reopen creator there will be talk and

00:47:34,370 --> 00:47:43,010
they would probably no more than half

00:47:39,170 --> 00:47:44,900
past four it's here in this room so yeah

00:47:43,010 --> 00:47:48,040
there they are the right person class

00:47:44,900 --> 00:47:50,750
okay so yeah but i think that is usable

00:47:48,040 --> 00:47:52,760
because we do not directly work cannot

00:47:50,750 --> 00:47:57,070
be created but we have other guys to do

00:47:52,760 --> 00:47:57,070
so you can ask them directly and

00:47:57,610 --> 00:48:05,840
interactivity we experience great don't

00:48:01,700 --> 00:48:07,730
primary or secondary just for instance

00:48:05,840 --> 00:48:15,860
primary ones so i don't really know was

00:48:07,730 --> 00:48:20,930
a state of integration has such as to

00:48:15,860 --> 00:48:24,740
describe our psyche do have an issue in

00:48:20,930 --> 00:48:29,620
stable say ah like three female fitness

00:48:24,740 --> 00:48:29,620
issues with these overpaid asks yeah

00:48:30,850 --> 00:48:38,680
look on vimeo sent without

00:48:39,450 --> 00:48:46,540
something some problem here like the

00:48:43,810 --> 00:48:49,420
descendant of those tests not that I

00:48:46,540 --> 00:48:52,270
half that we do not submit automatically

00:48:49,420 --> 00:48:53,859
failings we only submit passes and think

00:48:52,270 --> 00:48:56,890
there's a failure we have to manually

00:48:53,859 --> 00:49:00,780
look but it is a realtor or whether

00:48:56,890 --> 00:49:03,869
something you know the network the

00:49:00,780 --> 00:49:03,869

YouTube URL: https://www.youtube.com/watch?v=ODWFB8DXrUE


