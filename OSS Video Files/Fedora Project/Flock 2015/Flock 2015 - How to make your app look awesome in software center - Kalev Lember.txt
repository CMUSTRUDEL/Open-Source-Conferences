Title: Flock 2015 - How to make your app look awesome in software center - Kalev Lember
Publication date: 2015-08-26
Playlist: Flock 2015
Description: 
	In this talk I will explain what makes gnome-software tick and how it gets all its data. We will go together through the process of adding a new application and making it look good in the software center. If the time permits, we will also take a quick look at new features in gnome-software and look at what's coming next.
Captions: 
	00:00:00,140 --> 00:00:08,660
okay all right hello everybody my name

00:00:04,110 --> 00:00:10,920
is Caleb Lambert and I'm I've been

00:00:08,660 --> 00:00:17,039
working on Chrome software for a while

00:00:10,920 --> 00:00:18,960
now and and i'm not sure if everybody

00:00:17,039 --> 00:00:21,060
knows what comes after is clever

00:00:18,960 --> 00:00:25,439
software is this really nice piece of

00:00:21,060 --> 00:00:29,429
software that can install applications

00:00:25,439 --> 00:00:31,890
and one of the things that it does is

00:00:29,429 --> 00:00:36,270
that it tries to remain caps look really

00:00:31,890 --> 00:00:38,100
nice in yesterday it tries to make apps

00:00:36,270 --> 00:00:45,110
look nice so people would want to

00:00:38,100 --> 00:00:45,110
install them and the there's a lot of

00:00:45,230 --> 00:00:52,800
this or that there's a lot of screenshot

00:00:50,160 --> 00:00:55,579
center and icons and the heavy reliance

00:00:52,800 --> 00:00:58,230
of graphics to make absolutely good and

00:00:55,579 --> 00:01:01,800
and every app that shows up in gross

00:00:58,230 --> 00:01:03,329
after is a supposed to have a have nice

00:01:01,800 --> 00:01:04,739
descriptions so that people actually

00:01:03,329 --> 00:01:13,439
know what they are getting into when

00:01:04,739 --> 00:01:16,130
they install something and no software

00:01:13,439 --> 00:01:18,360
kinome software is basically the

00:01:16,130 --> 00:01:22,350
application center that is written for

00:01:18,360 --> 00:01:25,020
fedora workstation it's it's written by

00:01:22,350 --> 00:01:29,159
Richard huge and I've been hacking on it

00:01:25,020 --> 00:01:35,400
as well and and it's it's used on fedora

00:01:29,159 --> 00:01:39,210
workstation having for like four or five

00:01:35,400 --> 00:01:42,730
releases now and and

00:01:39,210 --> 00:01:44,980
started to work pretty well by now fixed

00:01:42,730 --> 00:01:48,970
a lot of parks and and made it try to

00:01:44,980 --> 00:01:52,090
make it look good the technology behind

00:01:48,970 --> 00:01:57,430
it distant it uses package get to

00:01:52,090 --> 00:01:59,170
actually install software and and it has

00:01:57,430 --> 00:02:01,300
a few other mechanisms as well do it

00:01:59,170 --> 00:02:06,490
stall stuff but back you script is the

00:02:01,300 --> 00:02:09,369
main one and and in addition to what the

00:02:06,490 --> 00:02:13,540
RPMs in addition to the metadata that

00:02:09,369 --> 00:02:16,870
the RPMs contain this is another side

00:02:13,540 --> 00:02:19,930
channel that provides screenshots and

00:02:16,870 --> 00:02:25,120
the application descriptions and it's

00:02:19,930 --> 00:02:27,580
called the upstream and and all of

00:02:25,120 --> 00:02:31,230
chrome software is application centric

00:02:27,580 --> 00:02:34,600
as opposed to being packaged centric

00:02:31,230 --> 00:02:36,070
because because it's written for fedora

00:02:34,600 --> 00:02:42,100
workstation at the door or workstation

00:02:36,070 --> 00:02:44,260
is a graphical thing right so so we we

00:02:42,100 --> 00:02:47,140
we are mainly concentrating on

00:02:44,260 --> 00:02:49,239
installing applications so there and the

00:02:47,140 --> 00:02:52,510
application is something that we define

00:02:49,239 --> 00:02:56,320
as something that has a desktop launcher

00:02:52,510 --> 00:03:01,860
and can be as a window and as opposed to

00:02:56,320 --> 00:03:10,989
a terminal program right

00:03:01,860 --> 00:03:15,190
so when I put together this talk I was

00:03:10,989 --> 00:03:19,330
trying to make it more practical thing

00:03:15,190 --> 00:03:24,670
to do so the people could come to this

00:03:19,330 --> 00:03:26,890
torrent and learn how to how to how to

00:03:24,670 --> 00:03:29,590
add support for their app so that it

00:03:26,890 --> 00:03:33,790
shows up properly in in our app

00:03:29,590 --> 00:03:38,110
installer so the technology for this is

00:03:33,790 --> 00:03:43,090
called up data it's just a small XML

00:03:38,110 --> 00:03:47,410
file that is that is shipped in rpm

00:03:43,090 --> 00:03:51,459
packages and that XML file describes the

00:03:47,410 --> 00:03:57,519
app it has descriptions for you it has

00:03:51,459 --> 00:04:00,040
it references screenshots and they are

00:03:57,519 --> 00:04:05,440
basically that's it and it's really

00:04:00,040 --> 00:04:08,410
really easy to write so what I'd like to

00:04:05,440 --> 00:04:11,880
do today is just to go through the

00:04:08,410 --> 00:04:16,140
process of writing one for an update

00:04:11,880 --> 00:04:18,820
file system just to show how it's done

00:04:16,140 --> 00:04:21,370
because it's really is easy and that

00:04:18,820 --> 00:04:24,030
makes makes apps look much nicer in

00:04:21,370 --> 00:04:24,030
chrome software

00:04:26,220 --> 00:04:30,940
so the bravest serving I mentioned was

00:04:28,930 --> 00:04:34,150
app data but there's another very

00:04:30,940 --> 00:04:35,910
similar concept called upstream the

00:04:34,150 --> 00:04:37,930
difference between those is that

00:04:35,910 --> 00:04:42,400
upstream is actually what kinome

00:04:37,930 --> 00:04:45,040
software consumes and app data is the

00:04:42,400 --> 00:04:52,240
one that the individual packages contain

00:04:45,040 --> 00:04:54,430
so what happens is that is that all the

00:04:52,240 --> 00:04:56,980
individual app data files that packages

00:04:54,430 --> 00:05:00,930
ship are combined together into one big

00:04:56,980 --> 00:05:03,490
xml file called upstream metadata and

00:05:00,930 --> 00:05:07,510
that is supposed to be distributed

00:05:03,490 --> 00:05:14,400
alongside regular IAM metadata or dnf

00:05:07,510 --> 00:05:17,710
metadata also during this process the

00:05:14,400 --> 00:05:20,590
met the process the color that the

00:05:17,710 --> 00:05:23,650
extracts all the descriptions and

00:05:20,590 --> 00:05:25,840
screenshots it also mirrors the

00:05:23,650 --> 00:05:29,590
screenshots and cashes them on that

00:05:25,840 --> 00:05:31,570
adoro infrastructure so which makes it

00:05:29,590 --> 00:05:34,450
possible like if you have our own web

00:05:31,570 --> 00:05:38,140
server you can easily upload the

00:05:34,450 --> 00:05:41,260
screenshot there for your own ax and you

00:05:38,140 --> 00:05:43,330
can be sure that when someone accesses

00:05:41,260 --> 00:05:45,400
that screenshot through chrome software

00:05:43,330 --> 00:05:47,740
it's actually casually uses the cache

00:05:45,400 --> 00:05:49,380
copy on the Fedora server and it doesn't

00:05:47,740 --> 00:05:54,550
kill download link it directly from your

00:05:49,380 --> 00:05:58,060
from your web server and and doesn't

00:05:54,550 --> 00:06:02,530
d-does it or bring it down to its knees

00:05:58,060 --> 00:06:06,130
because so much bandwidth uses also the

00:06:02,530 --> 00:06:07,680
stranger caching is good for privacy

00:06:06,130 --> 00:06:11,759
because people

00:06:07,680 --> 00:06:14,100
and then because third part is count

00:06:11,759 --> 00:06:15,660
down that track but what people are

00:06:14,100 --> 00:06:22,370
searching it's only pedorra

00:06:15,660 --> 00:06:22,370
infrastructure the tested as that info

00:06:23,780 --> 00:06:33,210
so a current state of upstream metadata

00:06:30,630 --> 00:06:36,900
is is that we aren't actually shipping

00:06:33,210 --> 00:06:40,740
it alongside with young metadata but the

00:06:36,900 --> 00:06:44,729
discipline to to starting to doing it

00:06:40,740 --> 00:06:47,250
really really soon now so what's

00:06:44,729 --> 00:06:50,400
happening right now is that instead of

00:06:47,250 --> 00:06:53,849
shipping it with the young metadata it's

00:06:50,400 --> 00:06:57,479
actually a separate package that has the

00:06:53,849 --> 00:07:00,090
upstream data and it's manually updated

00:06:57,479 --> 00:07:04,860
like once a month or so it's not the

00:07:00,090 --> 00:07:07,199
ideal but it works because we don't get

00:07:04,860 --> 00:07:11,510
so many new applications every so often

00:07:07,199 --> 00:07:15,570
and until the descriptions still work so

00:07:11,510 --> 00:07:19,889
if you're writing your new update and it

00:07:15,570 --> 00:07:21,659
doesn't show up in fedora instantly this

00:07:19,889 --> 00:07:25,650
is why because it's a manual process

00:07:21,659 --> 00:07:28,099
involved for regenerating the metadata

00:07:25,650 --> 00:07:28,099
package

00:07:28,380 --> 00:07:38,980
right so how the other ship and update

00:07:33,070 --> 00:07:40,870
the in your package and why so it's

00:07:38,980 --> 00:07:43,510
needed just to make sure that your app

00:07:40,870 --> 00:07:46,510
looks as good as possible in genome

00:07:43,510 --> 00:07:51,070
software and and it's also required

00:07:46,510 --> 00:07:53,230
because we decided that that it is

00:07:51,070 --> 00:07:55,570
really important that we only show good

00:07:53,230 --> 00:07:57,400
absent so we are only showing those apps

00:07:55,570 --> 00:08:01,270
that actually happen metadata and

00:07:57,400 --> 00:08:03,370
actually look good and and as it turns

00:08:01,270 --> 00:08:07,000
out it's actually a lot of apps that

00:08:03,370 --> 00:08:09,160
have have updated by now it's I'm not

00:08:07,000 --> 00:08:11,889
sure the exact numbers but it's close to

00:08:09,160 --> 00:08:16,180
ninety percent for Chrome apps and maybe

00:08:11,889 --> 00:08:18,430
50 for candy I actually i'm not sure if

00:08:16,180 --> 00:08:21,340
numbers alright day i was writing those

00:08:18,430 --> 00:08:23,880
slides on that plane last night there

00:08:21,340 --> 00:08:25,660
were the atlantic and i know a

00:08:23,880 --> 00:08:27,940
connection to actually look up the

00:08:25,660 --> 00:08:33,520
number spotted i'll instruct lee in that

00:08:27,940 --> 00:08:35,409
ballpark so and update writing this is

00:08:33,520 --> 00:08:37,960
really simple it's just one xml file

00:08:35,409 --> 00:08:41,669
read it and had a few lines and take a

00:08:37,960 --> 00:08:41,669

YouTube URL: https://www.youtube.com/watch?v=dXNckO08FLQ


