Title: Flock 2015 - Security threats at conferences - Till Maas
Publication date: 2015-08-26
Playlist: Flock 2015
Description: 
	In this talk I will raise awareness for security threats against developers and contributors during conferences and show mitigation techniques and best practices to avoid them. A lot of attacks that happen less likely if someone uses the Internet from a secure station at home become dangerous, if for example WiFi networks at conferences are used. But there are a lot of possibilities that allow to reduce the risk. Using the Fedora Project as an example I will show what can be done in the infrastructure and by the contributors to minimize the risk.
Captions: 
	00:00:01,139 --> 00:00:09,690
hey I would like to start thank you very

00:00:04,840 --> 00:00:15,039
much for coming my name is Tomas and I'm

00:00:09,690 --> 00:00:16,630
image there we go i'm here to talk to

00:00:15,039 --> 00:00:20,470
you about what security threats at

00:00:16,630 --> 00:00:22,150
conferences and i'm very excited and

00:00:20,470 --> 00:00:24,369
happy to be invited you it's my first

00:00:22,150 --> 00:00:32,939
time in the united states and i like it

00:00:24,369 --> 00:00:32,939
very much I inform know yesterday

00:00:34,310 --> 00:00:43,190
once oi so yes I'm from Germany it's a

00:00:40,310 --> 00:00:47,020
town located near the Dutchman very

00:00:43,190 --> 00:00:50,240
waters in Europe you see where this and

00:00:47,020 --> 00:00:51,850
i'm here today because i joined the

00:00:50,240 --> 00:00:54,980
fedora project about 10 years ago

00:00:51,850 --> 00:00:57,310
initially i started as a packager but i

00:00:54,980 --> 00:00:59,360
also contributed patches to several

00:00:57,310 --> 00:01:01,610
applications that we use at fado up

00:00:59,360 --> 00:01:04,460
whenever I found something that bugged

00:01:01,610 --> 00:01:07,490
me I tried to submit the pledge and

00:01:04,460 --> 00:01:12,200
recently I'm doing mostly release

00:01:07,490 --> 00:01:15,650
engineering and while I am contributing

00:01:12,200 --> 00:01:17,360
to the door mostly in my free time in my

00:01:15,650 --> 00:01:20,380
day job I work as a penetration tester

00:01:17,360 --> 00:01:23,600
it went in vain testing the company

00:01:20,380 --> 00:01:25,850
specialized on penetration test so all

00:01:23,600 --> 00:01:28,369
day long I try to find security

00:01:25,850 --> 00:01:30,560
vulnerabilities in our customer systems

00:01:28,369 --> 00:01:34,490
and then I document them and present

00:01:30,560 --> 00:01:36,800
them to our customers and because I do

00:01:34,490 --> 00:01:39,320
this all day long I get a certain

00:01:36,800 --> 00:01:41,869
feeling for security problems and now

00:01:39,320 --> 00:01:44,630
i'm here to present you song that I

00:01:41,869 --> 00:01:48,670
identify identified especially the

00:01:44,630 --> 00:01:51,649
conferences but I do not want to only

00:01:48,670 --> 00:01:56,600
point to problems I want to want to

00:01:51,649 --> 00:01:59,600
discuss some countermeasures there are

00:01:56,600 --> 00:02:01,700
some that you can do as a user but also

00:01:59,600 --> 00:02:04,729
important that projects provide secure

00:02:01,700 --> 00:02:06,289
access to their services and perform

00:02:04,729 --> 00:02:09,500
certain configurations to make it

00:02:06,289 --> 00:02:12,530
possible for users to actually be secure

00:02:09,500 --> 00:02:14,780
and what kind of threats am I'm talking

00:02:12,530 --> 00:02:16,520
about there's one that I'm conte exposed

00:02:14,780 --> 00:02:20,209
to because i use this wireless presenter

00:02:16,520 --> 00:02:23,540
and this should actually only allow me

00:02:20,209 --> 00:02:25,760
to switch the next slide but it's a full

00:02:23,540 --> 00:02:28,280
keyboard not on this side but on the

00:02:25,760 --> 00:02:28,940
receiver side so therefore you can wear

00:02:28,280 --> 00:02:31,010
custom

00:02:28,940 --> 00:02:33,880
transmitter and then it's an arbitrary

00:02:31,010 --> 00:02:35,900
commands to it because unfortunately the

00:02:33,880 --> 00:02:39,830
communication is not properly secured

00:02:35,900 --> 00:02:41,810
and I hope that you don't do this cause

00:02:39,830 --> 00:02:44,180
this book for example delete all my

00:02:41,810 --> 00:02:47,600
files it wouldn't work here because i

00:02:44,180 --> 00:02:50,960
use a dedicated user account but this is

00:02:47,600 --> 00:02:54,170
one thing that's here at least four

00:02:50,960 --> 00:02:58,580
speakers for all of us even if you are

00:02:54,170 --> 00:03:01,790
not giving a talk they are a threat that

00:02:58,580 --> 00:03:03,890
comes from other from from a more common

00:03:01,790 --> 00:03:06,890
by this communication that we're using

00:03:03,890 --> 00:03:10,520
it and this is the hotel network or the

00:03:06,890 --> 00:03:17,420
importer virus network and I wonder love

00:03:10,520 --> 00:03:20,870
using it relief canonical not so many

00:03:17,420 --> 00:03:30,200
and we know whether you right now using

00:03:20,870 --> 00:03:32,480
this little excess point yeah and this

00:03:30,200 --> 00:03:34,370
is the problem you might look you do not

00:03:32,480 --> 00:03:36,020
know if you're really using nexus point

00:03:34,370 --> 00:03:39,070
that i bought or if you're using the

00:03:36,020 --> 00:03:41,720
x-ray infrastructure from the outer and

00:03:39,070 --> 00:03:44,780
therefore certain attacks are possible

00:03:41,720 --> 00:03:46,820
because i can if you use this access

00:03:44,780 --> 00:03:49,640
point I can control other communication

00:03:46,820 --> 00:03:52,820
and this allows for sarcoid men in the

00:03:49,640 --> 00:03:56,000
middle effects and one basic attack is

00:03:52,820 --> 00:03:58,310
just to disturb the communication so I

00:03:56,000 --> 00:04:01,550
can either make you not communicate at

00:03:58,310 --> 00:04:03,830
all or just prevent you from using

00:04:01,550 --> 00:04:06,920
certain sites and what's more dangerous

00:04:03,830 --> 00:04:08,630
I can manipulate the communication in a

00:04:06,920 --> 00:04:11,540
way that you don't know what you're

00:04:08,630 --> 00:04:14,390
really excessive for example even if you

00:04:11,540 --> 00:04:17,299
open a certain web page might be that i

00:04:14,390 --> 00:04:21,530
manipulated it another word and it's

00:04:17,299 --> 00:04:24,140
doing manisha things to know whether or

00:04:21,530 --> 00:04:26,000
not you're using the right website is it

00:04:24,140 --> 00:04:28,520
important that you use strong

00:04:26,000 --> 00:04:31,550
cryptography and it's basically

00:04:28,520 --> 00:04:33,710
in signatures and with the keys you can

00:04:31,550 --> 00:04:36,139
encrypt and create signatures and the

00:04:33,710 --> 00:04:38,629
signatures can be used to verify whether

00:04:36,139 --> 00:04:40,610
or not you're using device or rather not

00:04:38,629 --> 00:04:43,159
you accessing the right system and the

00:04:40,610 --> 00:04:45,949
common protocol for this is HTTPS

00:04:43,159 --> 00:04:49,550
compared to plain HTTP which doesn't use

00:04:45,949 --> 00:04:51,770
encryption I don't want to get into more

00:04:49,550 --> 00:04:55,669
details about cryptography but there

00:04:51,770 --> 00:04:57,830
will be a presentation tomorrow at 11am

00:04:55,669 --> 00:05:01,340
they might be interesting for you if you

00:04:57,830 --> 00:05:03,800
want to know the basics of it but

00:05:01,340 --> 00:05:07,159
there's also another important detail

00:05:03,800 --> 00:05:09,830
about wireless attacks and it's not even

00:05:07,159 --> 00:05:11,750
necessarily but necessary that they use

00:05:09,830 --> 00:05:14,720
the wireless network that's available

00:05:11,750 --> 00:05:17,060
here but if your devices are configured

00:05:14,720 --> 00:05:20,180
to use any previous network for example

00:05:17,060 --> 00:05:22,190
from the airport or from some coffee at

00:05:20,180 --> 00:05:24,139
home it's still possible for me to

00:05:22,190 --> 00:05:25,849
create the access point property here

00:05:24,139 --> 00:05:28,550
and then your devices would connect to

00:05:25,849 --> 00:05:32,380
it and I wonder that is anyone one of

00:05:28,550 --> 00:05:38,120
you using wpa enterprise at your company

00:05:32,380 --> 00:05:40,520
and you will also have a problem because

00:05:38,120 --> 00:05:44,389
it's very hard with linux and android to

00:05:40,520 --> 00:05:47,449
use its security it's it's possible if

00:05:44,389 --> 00:05:50,060
you really probably configure your

00:05:47,449 --> 00:05:51,650
devices but it's not very easy and if

00:05:50,060 --> 00:05:53,479
you're using for example user name and

00:05:51,650 --> 00:05:55,789
password authentication with wpa

00:05:53,479 --> 00:05:57,889
enterprise it might be possible that I

00:05:55,789 --> 00:06:00,199
create just the excess find that you use

00:05:57,889 --> 00:06:03,080
it your company and your device it will

00:06:00,199 --> 00:06:05,750
also tell me what the what are the names

00:06:03,080 --> 00:06:07,729
of the networks that they are let they

00:06:05,750 --> 00:06:10,130
know and then i might get your username

00:06:07,729 --> 00:06:14,990
and password and would be maybe even

00:06:10,130 --> 00:06:17,029
possible to it access other accounts or

00:06:14,990 --> 00:06:20,360
services from your company to use the

00:06:17,029 --> 00:06:22,310
same accounts there if you are

00:06:20,360 --> 00:06:24,199
interested in the into the details you

00:06:22,310 --> 00:06:26,150
can grab me after the talk and you can

00:06:24,199 --> 00:06:31,340
discuss whether or not you're really

00:06:26,150 --> 00:06:32,139
affected by this and for everyone else

00:06:31,340 --> 00:06:36,699
is

00:06:32,139 --> 00:06:39,550
the sometimes more common to use oh let

00:06:36,699 --> 00:06:41,919
me begin again if you already know that

00:06:39,550 --> 00:06:44,860
there might be a text at a Wi-Fi network

00:06:41,919 --> 00:06:48,129
you might be using a VPN to protect

00:06:44,860 --> 00:06:51,870
yourself from these local attacks but

00:06:48,129 --> 00:06:54,279
you can is not really created to protect

00:06:51,870 --> 00:06:56,469
against this attacks but allow you to

00:06:54,279 --> 00:06:58,150
access your home systems and therefore

00:06:56,469 --> 00:07:01,180
there are still some problems that might

00:06:58,150 --> 00:07:05,169
be arise from just using a VPN for

00:07:01,180 --> 00:07:07,750
protection for example there are many

00:07:05,169 --> 00:07:10,810
conferences but like for example first

00:07:07,750 --> 00:07:13,439
then in verses that already provide ipv6

00:07:10,810 --> 00:07:17,650
excess but not so common to have ipv6

00:07:13,439 --> 00:07:20,229
exit or ipv6 networks everywhere so VPNs

00:07:17,650 --> 00:07:22,449
might not even handle it but they are

00:07:20,229 --> 00:07:26,469
used to access your home system if you

00:07:22,449 --> 00:07:29,560
don't have ipv6 at home the PPN might

00:07:26,469 --> 00:07:31,659
not be ipv6 avail and then if your

00:07:29,560 --> 00:07:34,539
system like clinic starts for a long

00:07:31,659 --> 00:07:37,000
time support ipv6 and the local network

00:07:34,539 --> 00:07:40,060
support ipv6 or your traffic might

00:07:37,000 --> 00:07:43,539
actually be in bypass and bypassing the

00:07:40,060 --> 00:07:46,689
VPN and not using not be protected by

00:07:43,539 --> 00:07:48,849
the VPN and additionally an attacker can

00:07:46,689 --> 00:07:51,969
also create or provide you that ipv6

00:07:48,849 --> 00:07:56,469
connectivity making sure that your VPN

00:07:51,969 --> 00:07:59,139
is bypassing the another partner which

00:07:56,469 --> 00:08:02,560
should not be forgotten is DNS even if

00:07:59,139 --> 00:08:05,409
all your regular traffic is protected we

00:08:02,560 --> 00:08:07,509
are the VPN might still be possible that

00:08:05,409 --> 00:08:09,879
you do not use your local DNS server

00:08:07,509 --> 00:08:12,219
sometimes they didn't set up the

00:08:09,879 --> 00:08:15,750
conference's they want to use the local

00:08:12,219 --> 00:08:18,310
DNS set up to access local services and

00:08:15,750 --> 00:08:20,710
then this can still be used by an

00:08:18,310 --> 00:08:25,439
attacker to make sure that certain

00:08:20,710 --> 00:08:27,169
traffic is not altered to the VPN and

00:08:25,439 --> 00:08:29,210
therefore you also

00:08:27,169 --> 00:08:31,909
additionally in fire one which makes it

00:08:29,210 --> 00:08:34,519
a lot of complex construct it's not just

00:08:31,909 --> 00:08:37,880
maybe the VPN and everything is working

00:08:34,519 --> 00:08:41,769
but there are several other things like

00:08:37,880 --> 00:08:46,699
I said that need to be considered

00:08:41,769 --> 00:08:48,920
another easy and good work around if for

00:08:46,699 --> 00:08:52,040
the meantime if you just watch via VPN

00:08:48,920 --> 00:08:55,130
but don't have one would be to use SSH

00:08:52,040 --> 00:08:58,040
you can use to support to create a

00:08:55,130 --> 00:09:02,360
so-called socks proxy server you need

00:08:58,040 --> 00:09:04,670
the dash upper case D parameter and then

00:09:02,360 --> 00:09:07,820
you can configure your browser for

00:09:04,670 --> 00:09:09,980
example Firefox to use the sorcerer and

00:09:07,820 --> 00:09:13,990
then on your local traffic is at least

00:09:09,980 --> 00:09:16,579
secured at this point and if you have

00:09:13,990 --> 00:09:19,070
software that does not support socks

00:09:16,579 --> 00:09:21,920
directly there are other two other dudes

00:09:19,070 --> 00:09:24,380
like boxing chains EG 40 sorts available

00:09:21,920 --> 00:09:29,779
that you can use to create to you turn

00:09:24,380 --> 00:09:32,870
to make them socks avail but there this

00:09:29,779 --> 00:09:35,420
still gives certain problems for example

00:09:32,870 --> 00:09:37,730
you are then secured at the conference

00:09:35,420 --> 00:09:40,790
but depending on where you are ssh

00:09:37,730 --> 00:09:43,130
server a VPN and violent is located the

00:09:40,790 --> 00:09:45,350
traffic between the VPN endpoint and the

00:09:43,130 --> 00:09:47,570
other service is still not protected so

00:09:45,350 --> 00:09:50,000
it's not really a final solution and

00:09:47,570 --> 00:09:51,920
also as an attacker i can just make sure

00:09:50,000 --> 00:09:54,290
that all traffic to your VPN is very

00:09:51,920 --> 00:09:57,529
slow and if your for example from europe

00:09:54,290 --> 00:09:59,959
you might just think it's because the

00:09:57,529 --> 00:10:02,060
traffic from the USA to do is currently

00:09:59,959 --> 00:10:04,670
not so good from this conference and may

00:10:02,060 --> 00:10:07,250
not be using the VPN with object really

00:10:04,670 --> 00:10:11,449
thinking that an attacker is currently

00:10:07,250 --> 00:10:13,819
performing an intake and of course it is

00:10:11,449 --> 00:10:16,430
also something where you have to

00:10:13,819 --> 00:10:18,860
consider who's really responsible to be

00:10:16,430 --> 00:10:20,569
to allow to access the service

00:10:18,860 --> 00:10:24,649
securities that the user has to make

00:10:20,569 --> 00:10:27,160
sure that everything is protected but we

00:10:24,649 --> 00:10:29,589
can't or he or she can't really

00:10:27,160 --> 00:10:31,839
it's not possible to have a VPN to the

00:10:29,589 --> 00:10:34,949
final service or is it the service

00:10:31,839 --> 00:10:38,889
provider that has to do something and

00:10:34,949 --> 00:10:41,589
also if it's if the OBP I'm not working

00:10:38,889 --> 00:10:43,870
what you really stop accessing it

00:10:41,589 --> 00:10:47,079
especially at the conference they have a

00:10:43,870 --> 00:10:49,779
workshop and you would like to attend

00:10:47,079 --> 00:10:51,939
and configure something I guess many

00:10:49,779 --> 00:10:55,569
people will just try to access the

00:10:51,939 --> 00:10:59,709
internet and not think about attackers

00:10:55,569 --> 00:11:01,149
and last but not least there's also at

00:10:59,709 --> 00:11:03,639
least one page that you will be

00:11:01,149 --> 00:11:05,139
accessing without the VPN and this is

00:11:03,639 --> 00:11:08,980
the login page for the wireless network

00:11:05,139 --> 00:11:10,810
because you can't access it because you

00:11:08,980 --> 00:11:13,000
can't access your VPN before you accept

00:11:10,810 --> 00:11:16,689
this login page there will be at least

00:11:13,000 --> 00:11:20,980
one request that's not secured and there

00:11:16,689 --> 00:11:24,790
are even it takes possible right now so

00:11:20,980 --> 00:11:27,879
the VPN is not the final solution and

00:11:24,790 --> 00:11:31,800
the problem is that in for the World

00:11:27,879 --> 00:11:34,480
Wide Web we use cookies and cookies

00:11:31,800 --> 00:11:36,819
especially used to store a secret value

00:11:34,480 --> 00:11:39,279
and this secret value is used to

00:11:36,819 --> 00:11:42,100
identify yourself to web pages and this

00:11:39,279 --> 00:11:43,839
allows you to access web pages without

00:11:42,100 --> 00:11:46,240
having to enter your username and

00:11:43,839 --> 00:11:48,970
password again and again again but it

00:11:46,240 --> 00:11:51,880
also means that the value of this cookie

00:11:48,970 --> 00:11:58,630
is as important as a password because

00:11:51,880 --> 00:12:00,519
once an attacker gets it then then the

00:11:58,630 --> 00:12:04,389
attacker can access the service with the

00:12:00,519 --> 00:12:06,730
same privileges as the original user and

00:12:04,389 --> 00:12:09,699
how can I do with this as an attacker if

00:12:06,730 --> 00:12:12,579
you're browsing any unprotected web page

00:12:09,699 --> 00:12:14,889
it's possible to insert content that

00:12:12,579 --> 00:12:17,059
doesn't belong there so for example an

00:12:14,889 --> 00:12:20,419
image in this

00:12:17,059 --> 00:12:22,269
from the drug scheduling the web

00:12:20,419 --> 00:12:25,159
application that also supports

00:12:22,269 --> 00:12:29,089
authentication as you can see it's in

00:12:25,159 --> 00:12:32,329
securely using HK HTTP instead of HTTPS

00:12:29,089 --> 00:12:35,119
and if the balls are has a cookie for

00:12:32,329 --> 00:12:37,399
this service and it's not well protected

00:12:35,119 --> 00:12:39,319
it will be sent we are the unencrypted

00:12:37,399 --> 00:12:41,449
connection and then the attacker can

00:12:39,319 --> 00:12:44,409
read it and use the scheduling

00:12:41,449 --> 00:12:48,859
application in this case with the same

00:12:44,409 --> 00:12:51,739
privileges but it's actually rather easy

00:12:48,859 --> 00:12:54,169
to make sure this doesn't happen cuz all

00:12:51,739 --> 00:12:56,079
you need to say is secure I don't know

00:12:54,169 --> 00:12:59,419
if you can see it there's it's

00:12:56,079 --> 00:13:01,879
highlighted in red you can send a cookie

00:12:59,419 --> 00:13:03,949
you just say secure and then the browser

00:13:01,879 --> 00:13:07,479
knows this is an important cookie and

00:13:03,949 --> 00:13:11,619
one centage over unencrypted connections

00:13:07,479 --> 00:13:15,649
this is something I believe that in the

00:13:11,619 --> 00:13:18,379
RFC for cookies since the beginning so

00:13:15,649 --> 00:13:20,299
seven years more than five years ago or

00:13:18,379 --> 00:13:24,019
something like this but there are still

00:13:20,299 --> 00:13:28,119
a modern fam works that don't do this by

00:13:24,019 --> 00:13:31,459
default I gave the similar talk

00:13:28,119 --> 00:13:34,369
defconfig earlier this year and when I

00:13:31,459 --> 00:13:36,559
look into this for enjoying good example

00:13:34,369 --> 00:13:39,649
from the fedora infrastructure I noticed

00:13:36,559 --> 00:13:41,389
that they are the new applications

00:13:39,649 --> 00:13:43,429
didn't do it right because a new

00:13:41,389 --> 00:13:47,299
framework didn't do it by default nobody

00:13:43,429 --> 00:13:50,659
looked into it until then now the

00:13:47,299 --> 00:13:53,479
question remains why does the flock

00:13:50,659 --> 00:13:58,479
scandal in service not to advise and if

00:13:53,479 --> 00:14:02,989
you does anyone notice what's wrong here

00:13:58,479 --> 00:14:06,109
yes it's plain HTTP and not https and

00:14:02,989 --> 00:14:12,589
this is currently 34 so did anyone

00:14:06,109 --> 00:14:15,109
notice it by logging in earlier yeah so

00:14:12,589 --> 00:14:16,170
yeah it's basically already the problem

00:14:15,109 --> 00:14:18,269
that if you

00:14:16,170 --> 00:14:20,190
login into this verification at this

00:14:18,269 --> 00:14:21,870
point you username and password will be

00:14:20,190 --> 00:14:24,959
sent unencrypted for the wireless

00:14:21,870 --> 00:14:26,820
network so it's even easier to get to

00:14:24,959 --> 00:14:29,940
the credential but this is also the

00:14:26,820 --> 00:14:31,920
reason why they can't protect the cookie

00:14:29,940 --> 00:14:36,570
because if the cookie would only be sent

00:14:31,920 --> 00:14:39,269
by our secure communication or HTTPS is

00:14:36,570 --> 00:14:41,790
you would have to log in again and again

00:14:39,269 --> 00:14:45,209
but the cells didn't know that you're

00:14:41,790 --> 00:14:47,699
already authenticated and why don't they

00:14:45,209 --> 00:14:49,980
do this because HTTPS actually works I

00:14:47,699 --> 00:14:52,800
asked them and they taught me that the

00:14:49,980 --> 00:14:54,600
problem is that they provide their

00:14:52,800 --> 00:14:56,370
service also for the customers to

00:14:54,600 --> 00:15:00,420
integrate them into the application and

00:14:56,370 --> 00:15:02,970
then they said it doesn't work always

00:15:00,420 --> 00:15:05,519
I'm not so sure if it's really a very

00:15:02,970 --> 00:15:08,220
good reason but at least for the fedora

00:15:05,519 --> 00:15:13,230
web applications also currently the case

00:15:08,220 --> 00:15:15,300
that the certificate is not correct so

00:15:13,230 --> 00:15:18,410
there you could login eggs as well it's

00:15:15,300 --> 00:15:20,910
not possible to do it why I HTTPS

00:15:18,410 --> 00:15:23,550
fortunately it's really a rare example

00:15:20,910 --> 00:15:26,790
that we have a web page in fedora which

00:15:23,550 --> 00:15:28,949
doesn't have proper certificate I just

00:15:26,790 --> 00:15:34,320
want to use it as an example in this

00:15:28,949 --> 00:15:36,149
case and therefore it's important to use

00:15:34,320 --> 00:15:39,480
poppers certificate and provide proper

00:15:36,149 --> 00:15:41,430
HTTPS service and if you buy and

00:15:39,480 --> 00:15:44,519
certificate it's also not that expensive

00:15:41,430 --> 00:15:47,670
anymore it's about ten dollars per year

00:15:44,519 --> 00:15:49,910
per certificate and hopefully next month

00:15:47,670 --> 00:15:56,430
it will also be possible to easily get

00:15:49,910 --> 00:15:59,490
secure and free certificates but does

00:15:56,430 --> 00:16:02,550
providing https servers not enough

00:15:59,490 --> 00:16:06,209
because initially https was not designed

00:16:02,550 --> 00:16:08,430
the security in mind there were secret

00:16:06,209 --> 00:16:10,560
agencies that influenced the creation of

00:16:08,430 --> 00:16:12,899
the protocol to make it secure insecure

00:16:10,560 --> 00:16:16,769
by default cervenka puts a blanket and

00:16:12,899 --> 00:16:19,440
in the recently there were several

00:16:16,769 --> 00:16:20,769
calculations about the problems that

00:16:19,440 --> 00:16:22,749
were found in earlier

00:16:20,769 --> 00:16:24,220
versions of the Santa so it's also

00:16:22,749 --> 00:16:28,050
important that you check your

00:16:24,220 --> 00:16:32,559
configuration and make it right and only

00:16:28,050 --> 00:16:35,170
enable recent and proper cipher suites

00:16:32,559 --> 00:16:37,899
for example in protocol versions this

00:16:35,170 --> 00:16:41,019
there are so many details about this

00:16:37,899 --> 00:16:43,179
that can also not extend right now but

00:16:41,019 --> 00:16:47,049
if you for example use of this web page

00:16:43,179 --> 00:16:50,499
and don't have a powerful keyword so you

00:16:47,049 --> 00:16:56,769
also find a lot you find help about what

00:16:50,499 --> 00:16:58,839
you have to do and I won't know show an

00:16:56,769 --> 00:17:02,559
attack that might also happen if you

00:16:58,839 --> 00:17:05,289
provide HTTPS and it's also secure

00:17:02,559 --> 00:17:07,000
configured secure knee cause they're

00:17:05,289 --> 00:17:09,069
possible as an attacker to make sure

00:17:07,000 --> 00:17:13,720
that you're not accessing the web server

00:17:09,069 --> 00:17:17,409
web service via HTTPS because by default

00:17:13,720 --> 00:17:19,899
if you enter an address in your browser

00:17:17,409 --> 00:17:23,189
it will default to plain HTTP and not

00:17:19,899 --> 00:17:27,520
https and if an attacker i block or

00:17:23,189 --> 00:17:30,820
https excess i can make sure that the

00:17:27,520 --> 00:17:35,799
user connects via plain HTTP and even if

00:17:30,820 --> 00:17:40,809
the server and the if the service server

00:17:35,799 --> 00:17:43,600
does not that's apart https i can make

00:17:40,809 --> 00:17:45,909
sure that a proxy program connects via

00:17:43,600 --> 00:17:52,840
HTTPS to themselves but only Povich

00:17:45,909 --> 00:17:57,010
provides plane it's HTTP to the for the

00:17:52,840 --> 00:17:58,809
user and to reduce this risk to make

00:17:57,010 --> 00:18:00,520
sure that users don't always have to

00:17:58,809 --> 00:18:05,350
check whether or not they're using plain

00:18:00,520 --> 00:18:08,380
HTTP or HTTPS there wasn't there are

00:18:05,350 --> 00:18:10,899
something added for HTTP header card

00:18:08,380 --> 00:18:13,899
strict Transport Security and if you use

00:18:10,899 --> 00:18:15,970
this it makes sure that every request to

00:18:13,899 --> 00:18:19,840
a certain domain it's only made securely

00:18:15,970 --> 00:18:22,179
via HTTPS by default it's for you have

00:18:19,840 --> 00:18:25,360
also you have to set a certain time so

00:18:22,179 --> 00:18:26,730
once your balls are connected to a web

00:18:25,360 --> 00:18:29,730
page security

00:18:26,730 --> 00:18:33,150
to connect with it for for example the

00:18:29,730 --> 00:18:36,450
next half a year and this still leaves a

00:18:33,150 --> 00:18:38,460
small window of opportunity because if

00:18:36,450 --> 00:18:41,309
you access the service for the first

00:18:38,460 --> 00:18:42,990
time your browser does not still no does

00:18:41,309 --> 00:18:47,130
not yet know that you have to access it

00:18:42,990 --> 00:18:49,919
via HTTPS and therefore there's a

00:18:47,130 --> 00:18:51,480
so-called free daughter list that is

00:18:49,919 --> 00:18:54,210
maintained that the chrome developers

00:18:51,480 --> 00:18:56,460
and there you can add your domain after

00:18:54,210 --> 00:18:59,340
you configure it correctly and then it

00:18:56,460 --> 00:19:01,710
will eventually be shipped with the on

00:18:59,340 --> 00:19:03,840
major borders and then the borders know

00:19:01,710 --> 00:19:06,630
this is a domain it should only be

00:19:03,840 --> 00:19:08,700
accessed security of course it takes a

00:19:06,630 --> 00:19:13,620
little time until it's available

00:19:08,700 --> 00:19:18,929
everywhere but this makes me sure with

00:19:13,620 --> 00:19:20,730
the user does not have to that's melt we

00:19:18,929 --> 00:19:24,960
begin again this makes sure that the

00:19:20,730 --> 00:19:28,020
user does not have any problems if and

00:19:24,960 --> 00:19:29,549
web page accidentally uses HTTP or if

00:19:28,020 --> 00:19:35,010
there's an attack that wants to make

00:19:29,549 --> 00:19:37,950
sure that HTTP is used and in figure you

00:19:35,010 --> 00:19:42,390
cannot still yeah use it for all of the

00:19:37,950 --> 00:19:45,270
door project aw but only for selected

00:19:42,390 --> 00:19:47,309
subpages got you we have still two or

00:19:45,270 --> 00:19:49,950
three services that we need to migrate

00:19:47,309 --> 00:19:55,169
your Papa CA but hopefully this will

00:19:49,950 --> 00:19:58,230
also happen soon until now I mainly

00:19:55,169 --> 00:20:00,299
discussed HTTP and HTTPS but there are

00:19:58,230 --> 00:20:03,030
also other protocols that are commonly

00:20:00,299 --> 00:20:05,520
user conferences and not everyone might

00:20:03,030 --> 00:20:08,730
be aware that they are not that secure

00:20:05,520 --> 00:20:11,840
for example if you skate there is with

00:20:08,730 --> 00:20:14,640
the native protocol you don't have any

00:20:11,840 --> 00:20:19,169
cryptographic cryptographic protection

00:20:14,640 --> 00:20:20,610
so if you use this in my attacker Wi-Fi

00:20:19,169 --> 00:20:22,710
network I could use it

00:20:20,610 --> 00:20:25,679
to insert arbitrary contents into the

00:20:22,710 --> 00:20:27,270
git repository that you're funny so of

00:20:25,679 --> 00:20:30,540
course it's not on the south side but on

00:20:27,270 --> 00:20:32,970
the darker side but later if you for

00:20:30,540 --> 00:20:36,840
example push you call it again back to

00:20:32,970 --> 00:20:41,700
run to the server repository it might

00:20:36,840 --> 00:20:44,910
also get there therefore you should only

00:20:41,700 --> 00:20:48,960
use secure protocols like HTTP s again

00:20:44,910 --> 00:20:52,440
or an ssh if you need to buy access it's

00:20:48,960 --> 00:20:55,559
also important to not do for example use

00:20:52,440 --> 00:20:58,860
the gate protocol at home because we

00:20:55,559 --> 00:21:00,630
feel it's safe there the column because

00:20:58,860 --> 00:21:02,760
then you have the problem if you do it

00:21:00,630 --> 00:21:05,580
again it's a conference you might not

00:21:02,760 --> 00:21:09,450
change the protocol and still be using

00:21:05,580 --> 00:21:12,480
the insecure method at fedora you

00:21:09,450 --> 00:21:15,120
already promote this secure photo card

00:21:12,480 --> 00:21:19,110
at certain pages especially for example

00:21:15,120 --> 00:21:21,750
at the door after and no new gate font

00:21:19,110 --> 00:21:25,410
and pedra will also only provide the

00:21:21,750 --> 00:21:28,679
secure access in this again make sure

00:21:25,410 --> 00:21:31,140
that users do not use insecure

00:21:28,679 --> 00:21:34,320
configuration by default but only secure

00:21:31,140 --> 00:21:37,070
configuration and the HTTPS protocol

00:21:34,320 --> 00:21:40,230
also supports a so-called smart

00:21:37,070 --> 00:21:42,059
transport which is basically a CGI

00:21:40,230 --> 00:21:44,429
script in the back end and this makes

00:21:42,059 --> 00:21:47,370
sure that you don't have huge

00:21:44,429 --> 00:21:50,250
performance penalties that were that

00:21:47,370 --> 00:21:53,850
existed when it was initially introduced

00:21:50,250 --> 00:21:58,650
or the HTTP transferred method was

00:21:53,850 --> 00:22:01,590
introduced but this awesome for the next

00:21:58,650 --> 00:22:06,179
problem if you have a used ssh to excess

00:22:01,590 --> 00:22:08,870
a certain people positive you probably

00:22:06,179 --> 00:22:12,990
saw this error message in this again

00:22:08,870 --> 00:22:14,880
this indicates that you're the sh2

00:22:12,990 --> 00:22:17,010
doesn't know whether or not it's talking

00:22:14,880 --> 00:22:18,600
to the right service so if you had a

00:22:17,010 --> 00:22:20,300
conference it might also be possible

00:22:18,600 --> 00:22:24,930
that there are

00:22:20,300 --> 00:22:29,610
accessing a service or the server from

00:22:24,930 --> 00:22:32,430
an attacker in fedora we therefore

00:22:29,610 --> 00:22:35,220
provide you with secure access to all

00:22:32,430 --> 00:22:37,320
the ssh keys that are needed to identify

00:22:35,220 --> 00:22:40,410
the proper service and you can for

00:22:37,320 --> 00:22:43,290
example easily download them and store

00:22:40,410 --> 00:22:45,420
them in your local system and then you

00:22:43,290 --> 00:22:48,210
won't be asked whether or not it's right

00:22:45,420 --> 00:22:50,820
sir it only gets one if it's one server

00:22:48,210 --> 00:22:52,950
this is something that what I would like

00:22:50,820 --> 00:22:55,260
to recommend for other services at well

00:22:52,950 --> 00:22:58,530
because it makes it really easy to do it

00:22:55,260 --> 00:23:02,070
securely by the body and it's not only

00:22:58,530 --> 00:23:04,740
HTTP not only SSH it's everything that

00:23:02,070 --> 00:23:08,460
we provide in fedora let's properly

00:23:04,740 --> 00:23:10,620
signed and you find whenever you donít

00:23:08,460 --> 00:23:15,180
something you find instructions how to

00:23:10,620 --> 00:23:17,790
verify everything that we submitted this

00:23:15,180 --> 00:23:19,890
is something it's also important

00:23:17,790 --> 00:23:21,960
whatever you provide access to sampling

00:23:19,890 --> 00:23:24,780
makes your for sure that's properly it

00:23:21,960 --> 00:23:30,720
can be properly verified in this case

00:23:24,780 --> 00:23:33,720
use gbg with gpg is important to verify

00:23:30,720 --> 00:23:36,780
the keys again that you have there many

00:23:33,720 --> 00:23:39,300
people only use the so-called key ID

00:23:36,780 --> 00:23:42,000
which is a small part of the fingerprint

00:23:39,300 --> 00:23:44,820
but this turnkey and you can easily be

00:23:42,000 --> 00:23:47,460
fought so you can create a second key

00:23:44,820 --> 00:23:49,890
which is which has the same key ally and

00:23:47,460 --> 00:23:52,440
therefore you have to you have to verify

00:23:49,890 --> 00:23:55,410
the whole thing up there or in this case

00:23:52,440 --> 00:23:59,070
is also possible to download the key

00:23:55,410 --> 00:24:01,850
directly from fedora over https protocol

00:23:59,070 --> 00:24:01,850
and

00:24:02,550 --> 00:24:08,820
earlier this year someone even showed

00:24:05,250 --> 00:24:12,240
how easy it is to take all these sharkey

00:24:08,820 --> 00:24:15,810
IDs and they key on a be publicly

00:24:12,240 --> 00:24:18,360
available gpg key and created the second

00:24:15,810 --> 00:24:20,550
one with the same key ID and they also

00:24:18,360 --> 00:24:22,650
added all the signatures that they found

00:24:20,550 --> 00:24:26,100
it earlier so if you look at their

00:24:22,650 --> 00:24:28,680
concern it all looks like the regular

00:24:26,100 --> 00:24:31,850
keys but there are keys that they get

00:24:28,680 --> 00:24:37,200
generated this shows again that this

00:24:31,850 --> 00:24:41,520
it's practical perspective possible to

00:24:37,200 --> 00:24:43,440
do this kind of attack and the other

00:24:41,520 --> 00:24:45,810
part in fedora you are not only

00:24:43,440 --> 00:24:51,150
providing users the top that we also

00:24:45,810 --> 00:24:53,600
consuming it in in the form of sauce for

00:24:51,150 --> 00:24:56,670
getting that you get from upstream

00:24:53,600 --> 00:24:59,220
project and when we are lucky they also

00:24:56,670 --> 00:25:01,590
provide a signal just for example year

00:24:59,220 --> 00:25:05,160
for YouTube key head and therefore it's

00:25:01,590 --> 00:25:09,480
also possible efforts also necessary to

00:25:05,160 --> 00:25:11,690
check these signatures whenever they are

00:25:09,480 --> 00:25:16,680
available to make sure that we are not

00:25:11,690 --> 00:25:19,410
distributing any modified content to our

00:25:16,680 --> 00:25:22,170
users and this is for example how it can

00:25:19,410 --> 00:25:24,360
be easy young you specify the sauce the

00:25:22,170 --> 00:25:26,160
signal Jackie the key in the spec five

00:25:24,360 --> 00:25:30,840
and they make sure before you do

00:25:26,160 --> 00:25:33,660
anything any spec five at you verify

00:25:30,840 --> 00:25:36,480
whether or not the sauce Ricky and the

00:25:33,660 --> 00:25:39,180
signatures match the only if this

00:25:36,480 --> 00:25:44,330
succeeds then you do anything with the

00:25:39,180 --> 00:25:47,610
source code so until now and I only

00:25:44,330 --> 00:25:49,650
talked about a technical risk especially

00:25:47,610 --> 00:25:52,140
for your passwords but there are also

00:25:49,650 --> 00:25:53,910
some other problems at the conference if

00:25:52,140 --> 00:25:56,370
you want to collaborate you probably

00:25:53,910 --> 00:25:58,080
need to access a lot of services and

00:25:56,370 --> 00:26:00,990
therefore you will enter your passwords

00:25:58,080 --> 00:26:03,780
a lot and butter people around you it

00:26:00,990 --> 00:26:06,450
might be easy that someone just noticed

00:26:03,780 --> 00:26:07,380
or can just see which kind of password

00:26:06,450 --> 00:26:08,820
you enter in

00:26:07,380 --> 00:26:11,670
but what's the password renting

00:26:08,820 --> 00:26:14,130
therefore it's also good to avoid

00:26:11,670 --> 00:26:16,860
password to avoid using password at the

00:26:14,130 --> 00:26:19,940
same in a mean of authentication there

00:26:16,860 --> 00:26:22,290
are several devices can be available at

00:26:19,940 --> 00:26:25,500
that you can use additionally to a

00:26:22,290 --> 00:26:28,890
password and a fedora we support a so

00:26:25,500 --> 00:26:32,030
called movie keys for the at least

00:26:28,890 --> 00:26:34,710
currently for critical access for

00:26:32,030 --> 00:26:37,650
administrative access in fedora

00:26:34,710 --> 00:26:40,350
infrastructure I know that there are

00:26:37,650 --> 00:26:42,720
plans to provide this kind of protection

00:26:40,350 --> 00:26:44,040
for future in the future for other

00:26:42,720 --> 00:26:48,090
services at we're in for regular

00:26:44,040 --> 00:26:50,370
services and this is one is the only

00:26:48,090 --> 00:26:52,590
protection it you have to protect your

00:26:50,370 --> 00:26:55,920
password from being spotted at a

00:26:52,590 --> 00:26:58,350
conference and here we have also another

00:26:55,920 --> 00:27:00,450
example that you not only provide this

00:26:58,350 --> 00:27:02,730
kind of security at least for

00:27:00,450 --> 00:27:07,260
administrative access we also promoted

00:27:02,730 --> 00:27:12,620
by giving people a teaser video of batch

00:27:07,260 --> 00:27:17,910
whenever they configure giving keys and

00:27:12,620 --> 00:27:21,210
there's there's another web page that I

00:27:17,910 --> 00:27:24,810
wanted to show you that wants to promote

00:27:21,210 --> 00:27:26,550
secure to TECA authentication button

00:27:24,810 --> 00:27:29,130
from the other point of view because

00:27:26,550 --> 00:27:31,020
they list or services or service

00:27:29,130 --> 00:27:33,150
providers that already provides secure

00:27:31,020 --> 00:27:36,030
access and whenever you're providing

00:27:33,150 --> 00:27:39,000
service and should be a motivation for

00:27:36,030 --> 00:27:42,390
you to be added to this list to may have

00:27:39,000 --> 00:27:47,520
an advantage compared to other service

00:27:42,390 --> 00:27:50,550
providers and this is well as what I

00:27:47,520 --> 00:27:52,530
wanted to talk to you about currently in

00:27:50,550 --> 00:27:55,680
conclusion I want to make sure that

00:27:52,530 --> 00:27:58,530
whenever you access something you try to

00:27:55,680 --> 00:28:00,630
use encryption are not even tried you

00:27:58,530 --> 00:28:03,180
enforce it and this is something that

00:28:00,630 --> 00:28:08,300
needs to be done especially as a project

00:28:03,180 --> 00:28:09,380
to protect the users and also encryption

00:28:08,300 --> 00:28:11,480
that's not protect you against

00:28:09,380 --> 00:28:13,520
everything you need to make sure that

00:28:11,480 --> 00:28:16,340
whenever you consume something is the

00:28:13,520 --> 00:28:19,280
right one therefore verify everything

00:28:16,340 --> 00:28:22,310
and allow others to verify but you've

00:28:19,280 --> 00:28:25,640
done by signing it and possible try to

00:28:22,310 --> 00:28:30,050
avoid passwords but this long-term try

00:28:25,640 --> 00:28:39,080
to get rid of them so i also got my back

00:28:30,050 --> 00:28:41,450
now thank you very much yeah I also like

00:28:39,080 --> 00:28:44,180
everyone who provided me with an image

00:28:41,450 --> 00:28:47,510
for this presentation you find the

00:28:44,180 --> 00:28:50,480
sources and if you ever want to consume

00:28:47,510 --> 00:28:53,450
something that I signed yeah here are

00:28:50,480 --> 00:28:56,300
the details about my dbg key but there

00:28:53,450 --> 00:29:00,890
will also be a kiss I'm party and on

00:28:56,300 --> 00:29:08,870
Friday a belief 5pm so are there any

00:29:00,890 --> 00:29:11,200
questions I another roll up stuff and at

00:29:08,870 --> 00:29:13,520
work I

00:29:11,200 --> 00:29:15,440
they said to do all the same things that

00:29:13,520 --> 00:29:16,669
you did because I don't actually know

00:29:15,440 --> 00:29:18,559
how to go about

00:29:16,669 --> 00:29:20,570
things like I know the words the effort

00:29:18,559 --> 00:29:22,129
than before and I just listened to your

00:29:20,570 --> 00:29:23,539
presentation but i still don't know what

00:29:22,129 --> 00:29:26,060
to do when i log into my work email

00:29:23,539 --> 00:29:30,860
capture I was not opposed to monitor

00:29:26,060 --> 00:29:37,040
so how do I actually the next that's

00:29:30,860 --> 00:29:39,110
actually doing it so the easiest thing

00:29:37,040 --> 00:29:44,840
for you to protect you would be if you

00:29:39,110 --> 00:29:48,710
have three no ssh or important okay so

00:29:44,840 --> 00:29:50,810
okay so this if someone if you know

00:29:48,710 --> 00:29:53,600
someone who is providing you with an ssh

00:29:50,810 --> 00:29:55,400
server you can probably easily use it to

00:29:53,600 --> 00:29:59,500
add this protect you against local

00:29:55,400 --> 00:30:03,380
attack us and the other thing is that

00:29:59,500 --> 00:30:05,000
actually your employer needs to make

00:30:03,380 --> 00:30:08,650
sure that your can access your web

00:30:05,000 --> 00:30:11,030
service securely so it's something can

00:30:08,650 --> 00:30:14,900
can check whether or not you're using

00:30:11,030 --> 00:30:17,270
HTTPS but it doesn't show you whether or

00:30:14,900 --> 00:30:22,510
not the cookies ism I really protected

00:30:17,270 --> 00:30:26,720
so its vigilance yeah so I've yeah

00:30:22,510 --> 00:30:29,090
really easy first steps se user I think

00:30:26,720 --> 00:30:31,040
it's only the only thing is would be

00:30:29,090 --> 00:30:36,490
using at least some kind of protection

00:30:31,040 --> 00:30:40,220
like necessary first of all on VPN yeah

00:30:36,490 --> 00:30:42,800
so I was on the southwest and this point

00:30:40,220 --> 00:30:46,310
i was on the southwest airlines and they

00:30:42,800 --> 00:30:50,600
have in flight Wi-Fi so i had to process

00:30:46,310 --> 00:30:52,670
one is firefox one is chrome on micro my

00:30:50,600 --> 00:30:54,650
disabled mike https everywhere that's an

00:30:52,670 --> 00:30:56,930
accepted ention all of a sudden I

00:30:54,650 --> 00:30:59,150
started loading noticing this bar on top

00:30:56,930 --> 00:31:02,330
of my web pages that showed the flight

00:30:59,150 --> 00:31:05,060
status so Southwest started injecting

00:31:02,330 --> 00:31:07,700
their own scripts inside web pages and

00:31:05,060 --> 00:31:10,490
started to show this bar and then when I

00:31:07,700 --> 00:31:12,890
turn back to my firefox where I have

00:31:10,490 --> 00:31:14,210
HTTPS Everywhere it didn't appear

00:31:12,890 --> 00:31:17,450
anymore because they cannot really

00:31:14,210 --> 00:31:24,190
inject anything in to https joyce comes

00:31:17,450 --> 00:31:24,190
down to looking out penny are in the

00:31:24,650 --> 00:31:30,880
similar interesting series Wi-Fi I tried

00:31:28,970 --> 00:31:34,270
to connect

00:31:30,880 --> 00:31:36,640
chrome and Chrome line it looks like

00:31:34,270 --> 00:31:42,460
you're being an in the middle I refuse

00:31:36,640 --> 00:31:45,970
to permit you to Exodus and good that

00:31:42,460 --> 00:31:49,270
it's perfusing to predict that you know

00:31:45,970 --> 00:31:52,120
this is also an actor watch out this is

00:31:49,270 --> 00:31:55,320
also something that you get as a service

00:31:52,120 --> 00:31:58,660
provider if you use the HS TS head up

00:31:55,320 --> 00:32:01,380
then the border will make will not allow

00:31:58,660 --> 00:32:04,240
you to bypass these kind of warnings but

00:32:01,380 --> 00:32:06,670
it will only show you or there's

00:32:04,240 --> 00:32:10,810
something wrong you might be a tech bad

00:32:06,670 --> 00:32:14,230
luck I mean I think the case to dps

00:32:10,810 --> 00:32:16,510
everywhere extinction is a good morn to

00:32:14,230 --> 00:32:23,050
mention in this presentation abysses and

00:32:16,510 --> 00:32:25,000
I've always forces to use HTTPS so maybe

00:32:23,050 --> 00:32:29,100
would be something for you there's an

00:32:25,000 --> 00:32:34,900
extension important browser that modest

00:32:29,100 --> 00:32:37,110
changes the HTTPS setting with h st s to

00:32:34,900 --> 00:32:39,820
the browser them so that your balls are

00:32:37,110 --> 00:32:41,620
remembers whether or not you can access

00:32:39,820 --> 00:32:50,160
something where i should be as if it

00:32:41,620 --> 00:32:50,160
ever got butcher any honest

00:32:50,590 --> 00:32:57,230
if you're using a DNS SEC it's obviously

00:32:54,320 --> 00:33:00,590
a good idea and when you verify it but

00:32:57,230 --> 00:33:02,570
on its own it does not add much

00:33:00,590 --> 00:33:06,590
protection because when you're using a

00:33:02,570 --> 00:33:14,350
dns server service unprotected and

00:33:06,590 --> 00:33:18,620
attacked i can also manipulate yes I

00:33:14,350 --> 00:33:21,860
think fedora also provides even secured

00:33:18,620 --> 00:33:24,680
in Essex secured access to ssh ping

00:33:21,860 --> 00:33:28,910
offense right now but the problem still

00:33:24,680 --> 00:33:35,170
is that the Giants don't check it

00:33:28,910 --> 00:33:35,170
properly yet all the investors have

00:33:35,210 --> 00:33:37,899
No

00:33:42,330 --> 00:33:47,039
okay then thank you very much if you

00:33:44,700 --> 00:33:51,769
have any more questions later you can

00:33:47,039 --> 00:33:51,769

YouTube URL: https://www.youtube.com/watch?v=ePpEJ5vOQMk


