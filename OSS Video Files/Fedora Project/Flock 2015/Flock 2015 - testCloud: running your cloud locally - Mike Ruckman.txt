Title: Flock 2015 - testCloud: running your cloud locally - Mike Ruckman
Publication date: 2015-08-26
Playlist: Flock 2015
Description: 
	This talk will focus on getting participants familiar with several aspects of the cloud ecosystem and how they can be replicated on your dev machine. This talk will cover: - what comprises a cloud image: how are they built, what goes into them, how are they different from a bare metal install - meta-data: what it is and how to get it - cloud-init: its purpose and capabilities - testCloud: what is it, how can it help me?
Captions: 
	00:00:00,860 --> 00:00:07,470
hopefully that's the right button but

00:00:05,220 --> 00:00:10,830
this is pretend cloud or how to

00:00:07,470 --> 00:00:13,469
accidentally an open source project my

00:00:10,830 --> 00:00:18,930
name is uh my crush ruckman you know me

00:00:13,469 --> 00:00:21,029
as bro she got IRC i worked for redhat

00:00:18,930 --> 00:00:24,080
specifically on fedora i'm on the QA

00:00:21,029 --> 00:00:26,519
team with a Des Moines and Tim fling and

00:00:24,080 --> 00:00:30,750
I work on the door full time which is

00:00:26,519 --> 00:00:35,610
awesome I have an accidental cloud

00:00:30,750 --> 00:00:37,559
working group member the cloud when we

00:00:35,610 --> 00:00:40,050
did the fedora next thing we needed a

00:00:37,559 --> 00:00:43,410
cue a red with each of the working

00:00:40,050 --> 00:00:45,149
groups and I got cloud and somehow I

00:00:43,410 --> 00:00:46,350
ended up on the cloud working group and

00:00:45,149 --> 00:00:49,020
actually like help them make decisions

00:00:46,350 --> 00:00:53,850
which I think's hilarious but it's been

00:00:49,020 --> 00:00:57,000
working out so well you know so far some

00:00:53,850 --> 00:00:59,579
of my dislikes I just like bells and

00:00:57,000 --> 00:01:01,050
whistles you know I like things simple

00:00:59,579 --> 00:01:03,239
and I want them to work and I don't

00:01:01,050 --> 00:01:05,700
usually care about the things that make

00:01:03,239 --> 00:01:08,460
it shiny main I typically end up using

00:01:05,700 --> 00:01:10,229
mate or I 3 is my window manager you

00:01:08,460 --> 00:01:12,869
know I just the bells and whistles don't

00:01:10,229 --> 00:01:15,630
do it for me and then also I really

00:01:12,869 --> 00:01:18,119
dislike magic like things that I don't

00:01:15,630 --> 00:01:21,450
understand how it works or it seems like

00:01:18,119 --> 00:01:24,000
magic I dislike them because I want to

00:01:21,450 --> 00:01:26,970
know how they work and my experience

00:01:24,000 --> 00:01:29,070
with cloud and specifically with test

00:01:26,970 --> 00:01:31,920
cloud has been that because so much of

00:01:29,070 --> 00:01:36,689
cloud is it was summed up than me I only

00:01:31,920 --> 00:01:39,030
saw the trailer some movie and guys like

00:01:36,689 --> 00:01:42,479
nobody understands what the cloud is

00:01:39,030 --> 00:01:45,450
it's pretty true i mean we hear about it

00:01:42,479 --> 00:01:49,259
all the time but the true understanding

00:01:45,450 --> 00:01:51,540
of how to build one and how it works you

00:01:49,259 --> 00:01:54,979
know isn't typically you know typical

00:01:51,540 --> 00:01:58,380
knowledge so we're going to go to intro

00:01:54,979 --> 00:01:59,969
the first thing and this is just for the

00:01:58,380 --> 00:02:02,729
purpose of this talk i got in an

00:01:59,969 --> 00:02:05,320
argument somebody on IRC about what

00:02:02,729 --> 00:02:07,479
cloud was

00:02:05,320 --> 00:02:12,250
but this is just for the purpose of this

00:02:07,479 --> 00:02:14,590
talk is you know what I needed to do on

00:02:12,250 --> 00:02:17,020
QA team was test and validate our images

00:02:14,590 --> 00:02:18,520
because for a long time the amount of

00:02:17,020 --> 00:02:22,380
testing that was being done on the cloud

00:02:18,520 --> 00:02:26,560
images sometimes would just be like

00:02:22,380 --> 00:02:30,370
Dennis Gilmore booting it once in ec2

00:02:26,560 --> 00:02:32,590
and saying okay and that one you know

00:02:30,370 --> 00:02:35,380
that was the Fedora 22 cloud of it which

00:02:32,590 --> 00:02:37,330
is it nearly enough testing to say that

00:02:35,380 --> 00:02:41,489
hey you should run your production on

00:02:37,330 --> 00:02:41,489
recently released cloud instance know

00:02:44,580 --> 00:02:50,950
what we try explicitly not to say that I

00:02:47,290 --> 00:02:53,140
guess but you know that was the extent

00:02:50,950 --> 00:02:54,970
of the test I mean we had and you know

00:02:53,140 --> 00:02:58,420
so for the purposes of this talk the

00:02:54,970 --> 00:03:01,060
cloud is literally just some means to

00:02:58,420 --> 00:03:03,220
boot an instance so that you can ssh

00:03:01,060 --> 00:03:05,380
into it make it do stuff you know it's

00:03:03,220 --> 00:03:07,930
it's none of the glue that allows all of

00:03:05,380 --> 00:03:09,519
the automatic scaling you know or

00:03:07,930 --> 00:03:12,430
anything like that this is just booting

00:03:09,519 --> 00:03:16,630
the raw q cow or raw image somewhere

00:03:12,430 --> 00:03:20,920
where you can test it so you know the

00:03:16,630 --> 00:03:24,430
cloud is collecting lots of user data

00:03:20,920 --> 00:03:26,230
that's what that's what cloud is in real

00:03:24,430 --> 00:03:30,790
life right and that's why I say it's

00:03:26,230 --> 00:03:34,209
almost a joke but you know when when we

00:03:30,790 --> 00:03:37,000
were you know cloud really isn't at a

00:03:34,209 --> 00:03:38,079
high level conceptually it isn't that

00:03:37,000 --> 00:03:40,870
different from what we've been doing for

00:03:38,079 --> 00:03:43,930
a really long time with DES you know we

00:03:40,870 --> 00:03:46,480
started out and and this is what this is

00:03:43,930 --> 00:03:48,880
how we did mass hosting you know we did

00:03:46,480 --> 00:03:53,260
it was a Model T and now we're to the

00:03:48,880 --> 00:03:55,959
point where it's you know a Tesla we've

00:03:53,260 --> 00:03:58,239
gotten really good at provisioning

00:03:55,959 --> 00:04:01,920
virtual machines and making them useful

00:03:58,239 --> 00:04:01,920
force allowing us to scale up

00:04:02,950 --> 00:04:08,520
in the old days we've got a server

00:04:11,260 --> 00:04:19,030
let's just move up so it's glow yeah

00:04:14,140 --> 00:04:20,109
yeah exactly combinations so you know

00:04:19,030 --> 00:04:22,030
that's that's how we're going to be

00:04:20,109 --> 00:04:23,979
looking at cloud today and I want to go

00:04:22,030 --> 00:04:26,290
over you know what goes into cloud image

00:04:23,979 --> 00:04:27,850
you know how does it get it information

00:04:26,290 --> 00:04:31,240
you know what makes it different from a

00:04:27,850 --> 00:04:33,250
traditional install and really the stuff

00:04:31,240 --> 00:04:35,889
that goes into a cloud image isn't isn't

00:04:33,250 --> 00:04:39,039
that different from a traditional

00:04:35,889 --> 00:04:44,260
install but the way that they're built

00:04:39,039 --> 00:04:46,330
is you run and install on a vm and then

00:04:44,260 --> 00:04:48,940
you take a snapshot of that virtual

00:04:46,330 --> 00:04:52,030
machine and duplicate it for all of your

00:04:48,940 --> 00:04:54,789
instances so that you can actually build

00:04:52,030 --> 00:04:57,520
your own custom cloud images just with

00:04:54,789 --> 00:05:00,250
third manager you know and you can run

00:04:57,520 --> 00:05:02,169
your snapshots and whatnot and we'll get

00:05:00,250 --> 00:05:03,850
into some of the intricacies of how a

00:05:02,169 --> 00:05:05,740
cloud instance is a little bit different

00:05:03,850 --> 00:05:07,210
than the normal install but that's

00:05:05,740 --> 00:05:10,229
basically how their bill is just a

00:05:07,210 --> 00:05:13,419
snapshot of an already installed machine

00:05:10,229 --> 00:05:15,130
so you'll have all of your well I

00:05:13,419 --> 00:05:17,050
recently learned you don't actually have

00:05:15,130 --> 00:05:22,180
all of the normal packages that you're

00:05:17,050 --> 00:05:24,940
used to but whatever is installed in a

00:05:22,180 --> 00:05:25,810
typical you know base fodor install is

00:05:24,940 --> 00:05:29,410
usually going to show up in your

00:05:25,810 --> 00:05:32,410
claddings there's been some transition

00:05:29,410 --> 00:05:34,120
to move like the breaking the colonel

00:05:32,410 --> 00:05:37,000
package into colonel core and then the

00:05:34,120 --> 00:05:38,860
colonel like extras was to bring the

00:05:37,000 --> 00:05:41,139
colonel package size down because like

00:05:38,860 --> 00:05:43,690
cloud doesn't be hardware drivers like

00:05:41,139 --> 00:05:46,300
cloud doesn't need a lot of the stuff

00:05:43,690 --> 00:05:49,840
that you know shift with your kernel you

00:05:46,300 --> 00:05:52,000
know for every install but one of the

00:05:49,840 --> 00:05:56,680
key things that makes a cloud image

00:05:52,000 --> 00:06:01,030
useful is clouding it with and cloud in

00:05:56,680 --> 00:06:05,639
it is a software tool for pulling in my

00:06:01,030 --> 00:06:05,639
identity information about that instance

00:06:07,240 --> 00:06:11,990
but it's not really that different from

00:06:10,100 --> 00:06:13,190
a normal install you ssh into a cloud

00:06:11,990 --> 00:06:16,250
instance and you're going to have most

00:06:13,190 --> 00:06:17,510
of the tools that you're used to and at

00:06:16,250 --> 00:06:22,730
the command line that you have on a

00:06:17,510 --> 00:06:26,300
normal installer or bare metal so it's

00:06:22,730 --> 00:06:28,430
for exists a metadata when you do a

00:06:26,300 --> 00:06:30,530
normal install on bare metal you know

00:06:28,430 --> 00:06:35,030
you give the machine a hostname you know

00:06:30,530 --> 00:06:36,980
it pulls its IP from dhcp you you tell

00:06:35,030 --> 00:06:38,570
it what users and what the passwords are

00:06:36,980 --> 00:06:41,360
going to be on that but the cloud

00:06:38,570 --> 00:06:43,760
instance has no way of knowing any of

00:06:41,360 --> 00:06:48,740
that so your metadata is all of the

00:06:43,760 --> 00:06:50,840
identity information you know so you've

00:06:48,740 --> 00:06:55,100
got an instance that's basically just a

00:06:50,840 --> 00:06:57,320
blob and then it has to ping some kind

00:06:55,100 --> 00:07:02,990
of service and this can be like on

00:06:57,320 --> 00:07:05,290
amazon its IP 169 250 for 169 254 and

00:07:02,990 --> 00:07:07,880
this will pull all of your instance data

00:07:05,290 --> 00:07:10,130
to that instance and then you know we'll

00:07:07,880 --> 00:07:11,840
give you your ssh keys also when you

00:07:10,130 --> 00:07:13,370
user data scripts and you say hey the

00:07:11,840 --> 00:07:15,050
first time I provision this instance I

00:07:13,370 --> 00:07:17,450
want you to create these users install

00:07:15,050 --> 00:07:19,760
these packages configure these services

00:07:17,450 --> 00:07:22,880
and you know that's what really allows

00:07:19,760 --> 00:07:29,960
cloud to be able to scale up and out is

00:07:22,880 --> 00:07:33,220
is the metadata service so but you can

00:07:29,960 --> 00:07:36,500
get it you know each cloud provider

00:07:33,220 --> 00:07:38,180
hosted a slightly different way but

00:07:36,500 --> 00:07:41,450
clouded in you know can do network

00:07:38,180 --> 00:07:42,830
resources the way that we use it in test

00:07:41,450 --> 00:07:45,950
cloud is you can actually do a local

00:07:42,830 --> 00:07:48,710
disk of local file system so we end up

00:07:45,950 --> 00:07:50,630
creating an ISO with the metadata in it

00:07:48,710 --> 00:07:53,090
and then attaching it and cloud and it

00:07:50,630 --> 00:07:55,310
is smart enough to look you know to go

00:07:53,090 --> 00:07:56,409
through its sources and take out the one

00:07:55,310 --> 00:07:58,989
that's actually available

00:07:56,409 --> 00:08:02,499
and I'm not there do you know the order

00:07:58,989 --> 00:08:07,509
of precedence on that visits network I

00:08:02,499 --> 00:08:14,259
haven't I haven't memorized it's always

00:08:07,509 --> 00:08:16,419
in the source code no I know but and

00:08:14,259 --> 00:08:18,729
cloud in it you know doesn't hold they

00:08:16,419 --> 00:08:21,429
just give instance information you can

00:08:18,729 --> 00:08:24,219
install packages you can do pretty much

00:08:21,429 --> 00:08:25,839
anything any you can run any bash script

00:08:24,219 --> 00:08:28,360
you can feed it a bash script and have

00:08:25,839 --> 00:08:30,759
it have it run through but it also has

00:08:28,360 --> 00:08:33,579
some sub useful directives so that you

00:08:30,759 --> 00:08:35,620
don't have to do everything in bash you

00:08:33,579 --> 00:08:37,930
know which makes it so that your cloud

00:08:35,620 --> 00:08:39,490
and in scripts if you been installing

00:08:37,930 --> 00:08:41,829
certain packages on all your instances

00:08:39,490 --> 00:08:45,970
and you want to try it on you know let's

00:08:41,829 --> 00:08:48,519
say you know a debian based instance

00:08:45,970 --> 00:08:51,459
your cloud init script will will

00:08:48,519 --> 00:08:53,410
transfer pretty easily to a new to a new

00:08:51,459 --> 00:08:56,310
district which is one of the nice things

00:08:53,410 --> 00:08:56,310
about covenant

00:09:00,970 --> 00:09:06,709
right exactly well it's ansible much the

00:09:04,189 --> 00:09:09,829
same way and like a lot of what you can

00:09:06,709 --> 00:09:12,709
do with ansible you can do is cloud in

00:09:09,829 --> 00:09:14,269
it and vice versa so I've run to do a

00:09:12,709 --> 00:09:16,609
couple times where cloud event like the

00:09:14,269 --> 00:09:18,739
package was failing but I still needed

00:09:16,609 --> 00:09:21,759
to configure my instances and so I was

00:09:18,739 --> 00:09:21,759
able to do that their answer

00:09:23,889 --> 00:09:29,049
so how does test cloud fit in well test

00:09:27,309 --> 00:09:32,980
cloud is the home-brewed electric moped

00:09:29,049 --> 00:09:36,100
of clouds you know compared to you know

00:09:32,980 --> 00:09:42,069
the model t and the tesla there this is

00:09:36,100 --> 00:09:44,799
test five it handles the giving you your

00:09:42,069 --> 00:09:47,949
metadata and instantiating your cloud

00:09:44,799 --> 00:09:52,480
instance locally on your machine it runs

00:09:47,949 --> 00:09:54,129
off of cumulative or and it just makes

00:09:52,480 --> 00:09:55,569
it a whole lot easier because one of the

00:09:54,129 --> 00:09:57,459
problems that I ran into is a new Q a

00:09:55,569 --> 00:10:00,699
guy as I had access to a couple

00:09:57,459 --> 00:10:03,369
OpenStack instances that were often

00:10:00,699 --> 00:10:04,959
running out of storage or you know there

00:10:03,369 --> 00:10:07,569
was some other issue with it and I

00:10:04,959 --> 00:10:09,220
didn't want I didn't want to use easy to

00:10:07,569 --> 00:10:11,739
because I didn't want to charge for the

00:10:09,220 --> 00:10:18,069
Fedora project money just for me testing

00:10:11,739 --> 00:10:20,339
if I could do it somewhere else and so

00:10:18,069 --> 00:10:22,989
what I hadn't been doing is I looked up

00:10:20,339 --> 00:10:25,509
some documentation in tutorials on how

00:10:22,989 --> 00:10:28,869
did how to just boot a cloud image in

00:10:25,509 --> 00:10:32,350
vert vert manager and it was a royal

00:10:28,869 --> 00:10:34,480
pain it was like 12 steps that I had to

00:10:32,350 --> 00:10:36,839
run each time I wanted to boot a new

00:10:34,480 --> 00:10:36,839
instance

00:10:38,620 --> 00:10:46,990
yeah so I was spending I was spending 10

00:10:42,910 --> 00:10:49,180
to 15 minutes each test just getting it

00:10:46,990 --> 00:10:52,120
set up and ran and I was like well this

00:10:49,180 --> 00:10:55,270
is a waste so I started scripting it out

00:10:52,120 --> 00:10:58,120
it was originally just a easy it was a

00:10:55,270 --> 00:10:59,680
dirty Python hack to do it all

00:10:58,120 --> 00:11:05,950
automatically for me that way I didn't

00:10:59,680 --> 00:11:11,100
have to but it requires vert install qu

00:11:05,950 --> 00:11:13,750
liver and then also it can by default

00:11:11,100 --> 00:11:15,550
spin a ver viewer so that you can get a

00:11:13,750 --> 00:11:17,860
GUI you don't have to use SSH if you

00:11:15,550 --> 00:11:21,910
don't want to and it's recently been

00:11:17,860 --> 00:11:23,740
ported to integrate with liver so now

00:11:21,910 --> 00:11:25,120
when you start an instance and test

00:11:23,740 --> 00:11:27,520
cloud it'll show up in Virtual Machine

00:11:25,120 --> 00:11:30,310
Manager and you can manage all of your

00:11:27,520 --> 00:11:32,110
machines like that which is proven to be

00:11:30,310 --> 00:11:34,600
a whole lot easier because when you're

00:11:32,110 --> 00:11:37,690
just doing rocky new commands it's

00:11:34,600 --> 00:11:39,310
really easy to lose instances and leave

00:11:37,690 --> 00:11:40,660
them running for days on end and not

00:11:39,310 --> 00:11:45,220
even know that you have them running

00:11:40,660 --> 00:11:48,460
because you weren't paying attention oh

00:11:45,220 --> 00:11:52,570
yeah accumulate sense is almost a whole

00:11:48,460 --> 00:11:54,160
terminal full of text it's and then that

00:11:52,570 --> 00:11:56,740
was the other thing I was doing by hand

00:11:54,160 --> 00:12:00,000
each time yeah but it got really old

00:11:56,740 --> 00:12:03,350
really fast Mike Mallory say the queue

00:12:00,000 --> 00:12:05,960
instance interface changes constantly

00:12:03,350 --> 00:12:07,520
yeah exactly well you know we just

00:12:05,960 --> 00:12:09,320
recently did the boarding for that and

00:12:07,520 --> 00:12:16,010
it's it's become a whole lot easier to

00:12:09,320 --> 00:12:17,960
use but the potential uses for test club

00:12:16,010 --> 00:12:19,280
you know initially I was just using it

00:12:17,960 --> 00:12:20,750
for testing and it was one of those

00:12:19,280 --> 00:12:23,600
things where I had an itch and I

00:12:20,750 --> 00:12:25,670
scratched it and I've never occurred to

00:12:23,600 --> 00:12:27,470
me that anybody else would ever want to

00:12:25,670 --> 00:12:31,340
use this because it was just a dirty

00:12:27,470 --> 00:12:34,130
Python act by an on cloud gap look you

00:12:31,340 --> 00:12:35,960
know I was taking information from

00:12:34,130 --> 00:12:38,240
tutorials and just jamming it into a

00:12:35,960 --> 00:12:39,980
Python script but it turns out that

00:12:38,240 --> 00:12:45,740
other piece of people also had the same

00:12:39,980 --> 00:12:49,400
itch if one person infected is she

00:12:45,740 --> 00:12:51,140
it's it's true when I I told a friend of

00:12:49,400 --> 00:12:52,700
mine that I that other people were using

00:12:51,140 --> 00:12:55,450
my code he just laughed at me and said

00:12:52,700 --> 00:12:59,720
haha now you have an open source project

00:12:55,450 --> 00:13:01,160
it's like welcome to the club so the

00:12:59,720 --> 00:13:02,480
other thing I've been using the test

00:13:01,160 --> 00:13:04,220
cloud for and other people have used

00:13:02,480 --> 00:13:06,680
test God for setting up dev instances

00:13:04,220 --> 00:13:09,110
like you know for instance I'm able to

00:13:06,680 --> 00:13:11,810
to test software stacks and one on a

00:13:09,110 --> 00:13:14,210
cloud in a long plane when I'm not going

00:13:11,810 --> 00:13:20,510
to pay for you know the four hundred

00:13:14,210 --> 00:13:23,270
dollar in wireless access also

00:13:20,510 --> 00:13:26,600
automation didn't you guys go to the ten

00:13:23,270 --> 00:13:29,630
years the talk on to new year okay well

00:13:26,600 --> 00:13:32,510
gineer is the small continuous

00:13:29,630 --> 00:13:35,540
integration application that they're

00:13:32,510 --> 00:13:37,520
that crucial boss is trying to use for

00:13:35,540 --> 00:13:39,980
for testing cloud images and it actually

00:13:37,520 --> 00:13:42,230
uses test cloud as its engine to boot

00:13:39,980 --> 00:13:46,160
its instances and ssh in and run the

00:13:42,230 --> 00:13:48,560
tests and then the larger project that

00:13:46,160 --> 00:13:49,910
tamira is going to be integrated into is

00:13:48,560 --> 00:13:53,150
called tasca traumas that you might her

00:13:49,910 --> 00:13:55,010
to task from okay well task at Ron like

00:13:53,150 --> 00:13:57,800
right now we're working on is disposable

00:13:55,010 --> 00:13:59,900
clients because right now tasket Ron can

00:13:57,800 --> 00:14:01,190
run tasks like any kind of generic past

00:13:59,900 --> 00:14:03,700
but one of the things we really want to

00:14:01,190 --> 00:14:06,230
be able to do is run destructive tests

00:14:03,700 --> 00:14:07,730
but currently the way it's set up you

00:14:06,230 --> 00:14:10,970
can't run a destructive test because

00:14:07,730 --> 00:14:13,790
then it you know it kills the slave but

00:14:10,970 --> 00:14:16,130
now we have with the disposable clients

00:14:13,790 --> 00:14:17,930
working with where you're going to be

00:14:16,130 --> 00:14:19,220
able to spin up an instance and run the

00:14:17,930 --> 00:14:22,160
destructive test and report the results

00:14:19,220 --> 00:14:24,050
all of safe and a safe manner and test

00:14:22,160 --> 00:14:28,790
out is is the engine that's being used

00:14:24,050 --> 00:14:31,310
to do that and then i have reports in

00:14:28,790 --> 00:14:34,580
the wild of somebody at their day job

00:14:31,310 --> 00:14:37,910
using test cloud to deploy their

00:14:34,580 --> 00:14:42,640
production services on their internal

00:14:37,910 --> 00:14:42,640
network which i do not recommend

00:14:42,770 --> 00:14:48,540
at all I do not recommend this at all

00:14:46,020 --> 00:14:54,780
but those those servers have been up for

00:14:48,540 --> 00:14:56,280
I think 11 months now and they're

00:14:54,780 --> 00:14:58,680
working fine because really old test

00:14:56,280 --> 00:15:00,090
cloud does is it handles handles the pre

00:14:58,680 --> 00:15:04,740
packaging and then it passes it off to

00:15:00,090 --> 00:15:06,540
differ you know so it's I guess you

00:15:04,740 --> 00:15:08,880
could do it but you know you have it

00:15:06,540 --> 00:15:16,320
from me the author don't use this as a

00:15:08,880 --> 00:15:18,210
perfect yeah well I was asked recently

00:15:16,320 --> 00:15:21,090
if I had any place to make test cloud

00:15:18,210 --> 00:15:25,890
its own proper like small cloud service

00:15:21,090 --> 00:15:28,980
and I don't that's that's an order of

00:15:25,890 --> 00:15:30,380
magnitude higher than you know somebody

00:15:28,980 --> 00:15:34,800
looked at it and like wow you're like a

00:15:30,380 --> 00:15:37,500
web UI away from an open stance probably

00:15:34,800 --> 00:15:39,000
work with well and that was one of the

00:15:37,500 --> 00:15:40,890
one of the things I was looking at is I

00:15:39,000 --> 00:15:42,750
didn't have when I started out testing

00:15:40,890 --> 00:15:46,680
cloud images i didn't have hardware to

00:15:42,750 --> 00:15:51,140
run an OpenStack instance of any like

00:15:46,680 --> 00:15:54,270
size but then also getting it to work

00:15:51,140 --> 00:15:55,620
was a non-trivial task and as a

00:15:54,270 --> 00:15:58,110
cattleman I don't want to have to

00:15:55,620 --> 00:15:59,550
maintain this day in and day out just so

00:15:58,110 --> 00:16:01,710
that I can you know make sure that I can

00:15:59,550 --> 00:16:07,620
install packages and test services on

00:16:01,710 --> 00:16:13,320
our cottages oh yeah now it's it's demo

00:16:07,620 --> 00:16:16,580
time oh don't worry it's recorded jr.

00:16:13,320 --> 00:16:16,580
alright alright

00:16:17,030 --> 00:16:23,330
so what what this is going to do is I

00:16:20,270 --> 00:16:26,480
recorded output with scripts everybody

00:16:23,330 --> 00:16:27,650
heard of script it's awesome I can't

00:16:26,480 --> 00:16:30,560
believe I didn't know about it before

00:16:27,650 --> 00:16:35,390
because I've done live demos before and

00:16:30,560 --> 00:16:36,830
that was a really bad idea script this

00:16:35,390 --> 00:16:38,900
length right now it's just

00:16:36,830 --> 00:16:40,850
script it's installed on on your machine

00:16:38,900 --> 00:16:43,460
already it's a it's a really old tool I

00:16:40,850 --> 00:16:45,740
guess it used to I guess used to be used

00:16:43,460 --> 00:16:49,670
for turning in homework like you turn in

00:16:45,740 --> 00:16:52,130
a timing file and the output and I was

00:16:49,670 --> 00:16:56,450
like I would I would I would have

00:16:52,130 --> 00:16:59,090
preferred that way to turn it on but

00:16:56,450 --> 00:17:01,250
it's going to install test cloud which

00:16:59,090 --> 00:17:03,140
is currently the LD build is in is in

00:17:01,250 --> 00:17:04,820
koper right now it's still pending

00:17:03,140 --> 00:17:06,530
package review to actually get into the

00:17:04,820 --> 00:17:09,140
fedora for pot scores but it's going to

00:17:06,530 --> 00:17:13,160
install it from koper and then it's

00:17:09,140 --> 00:17:15,740
going to download an image a cloud image

00:17:13,160 --> 00:17:17,990
and then boot it up and just run through

00:17:15,740 --> 00:17:20,570
some some basic tests but this will give

00:17:17,990 --> 00:17:23,240
you a feel for for what it does and I'll

00:17:20,570 --> 00:17:25,370
explain where it's saving information

00:17:23,240 --> 00:17:27,640
and how it's getting it because that a

00:17:25,370 --> 00:17:29,510
in my first iteration of test cloud

00:17:27,640 --> 00:17:32,840
every time we're going to test it

00:17:29,510 --> 00:17:34,430
downloaded afresh image but now now it

00:17:32,840 --> 00:17:36,170
will download the image once and cash it

00:17:34,430 --> 00:17:38,990
and then use that image as a backing

00:17:36,170 --> 00:17:40,910
store so each of your instances is fresh

00:17:38,990 --> 00:17:44,060
but it also doesn't eat up all your hard

00:17:40,910 --> 00:17:46,250
drive space so you can have is everybody

00:17:44,060 --> 00:17:49,790
familiar back in stores like cute you're

00:17:46,250 --> 00:17:52,400
cute cow to backing stores

00:17:49,790 --> 00:17:54,650
well it's it's really nice because it

00:17:52,400 --> 00:17:57,140
now for test cloud the instant storage

00:17:54,650 --> 00:18:02,150
is just the Delta between its backing

00:17:57,140 --> 00:18:03,860
store and what I've installed exact you

00:18:02,150 --> 00:18:05,510
know you can run that over network you

00:18:03,860 --> 00:18:08,050
can you can use back in stores from a

00:18:05,510 --> 00:18:08,050
lot of different places

00:18:15,080 --> 00:18:22,720
Gary no you can know it's a donation to

00:18:19,130 --> 00:18:22,720
haiti yeah

00:18:24,810 --> 00:18:31,450
yeah I kept on my type or this toy box

00:18:27,880 --> 00:18:33,040
oh yeah well yeah I want you to know

00:18:31,450 --> 00:18:35,590
that this actually happened i didn't

00:18:33,040 --> 00:18:39,190
just you know fabricate all of this is

00:18:35,590 --> 00:18:43,840
she did but it's in koper it's going to

00:18:39,190 --> 00:18:46,810
install a guest FS referred install /

00:18:43,840 --> 00:18:48,100
manager initially the way that the only

00:18:46,810 --> 00:18:50,590
one that I could get it to work with Kim

00:18:48,100 --> 00:18:52,090
you was I had to extract the colonel

00:18:50,590 --> 00:18:55,900
initial ram disk that way i can modify

00:18:52,090 --> 00:18:58,240
boo guards before it booted but now this

00:18:55,900 --> 00:19:00,010
handles all of that comfortably and I

00:18:58,240 --> 00:19:01,780
guess next time I should do this I'm 800

00:19:00,010 --> 00:19:11,530
x 600 screen that way it doesn't look at

00:19:01,780 --> 00:19:14,320
that the only test case yeah all I did

00:19:11,530 --> 00:19:17,650
is a strike to cook right names yeah

00:19:14,320 --> 00:19:20,950
yeah it doesn't do that anymore bad the

00:19:17,650 --> 00:19:22,690
CLI interfaces you know test cloud

00:19:20,950 --> 00:19:24,640
instance and then create stop or

00:19:22,690 --> 00:19:28,990
destroyed you know so you can create one

00:19:24,640 --> 00:19:31,930
and then you give it you give it a name

00:19:28,990 --> 00:19:33,820
and a URL and it'll go infects that

00:19:31,930 --> 00:19:38,740
image and it can do local storage or

00:19:33,820 --> 00:19:40,720
work you know from Koji and I ran it

00:19:38,740 --> 00:19:43,570
like I've learned a lot about liver with

00:19:40,720 --> 00:19:47,950
this entire process lid firts really

00:19:43,570 --> 00:19:49,450
hard to silence you know I have explicit

00:19:47,950 --> 00:19:51,820
mornings and nurses don't worry about

00:19:49,450 --> 00:19:55,210
these q mu driver errors libvirt is why

00:19:51,820 --> 00:19:56,950
and is no mathematician up like you know

00:19:55,210 --> 00:19:58,640
so basically I just have to keep

00:19:56,950 --> 00:20:02,480
pounding limpert until it gives me the

00:19:58,640 --> 00:20:04,250
domain name that I know that has but

00:20:02,480 --> 00:20:05,840
then it will it will return the IP

00:20:04,250 --> 00:20:08,480
address of your recently spawned

00:20:05,840 --> 00:20:10,970
instance which is one of the things that

00:20:08,480 --> 00:20:13,640
has been a pain if you launch something

00:20:10,970 --> 00:20:19,300
cooking liver there's no easy way to

00:20:13,640 --> 00:20:22,100
tell what the IP address is in place

00:20:19,300 --> 00:20:23,660
yeah it's you have to add a lot of stuff

00:20:22,100 --> 00:20:28,640
and do a lot of walking around so I

00:20:23,660 --> 00:20:31,070
magnetism so my solution is I dumped the

00:20:28,640 --> 00:20:34,490
XML of the guests just created I find

00:20:31,070 --> 00:20:36,680
the mac address I do art a and I search

00:20:34,490 --> 00:20:41,300
for it and then I spit it back on that

00:20:36,680 --> 00:20:43,220
bike and you know it works I haven't had

00:20:41,300 --> 00:20:49,180
any failures on that particular piece

00:20:43,220 --> 00:20:49,180
and then so the way test club works is I

00:20:52,060 --> 00:20:55,570
lost the home keys

00:20:59,100 --> 00:21:10,020
can everybody see that fun okay so Tesla

00:21:04,020 --> 00:21:12,270
has cash in instances which I'm apparent

00:21:10,020 --> 00:21:13,799
I need to rename cash is I guess that's

00:21:12,270 --> 00:21:15,690
caused some confusion in the past this

00:21:13,799 --> 00:21:22,830
is going to be packing stores or

00:21:15,690 --> 00:21:24,809
something similar yeah something I just

00:21:22,830 --> 00:21:30,140
ID was using cash as a generic term

00:21:24,809 --> 00:21:41,309
which I guess costs me some frustration

00:21:30,140 --> 00:21:45,330
the process of poverty standard yeah so

00:21:41,309 --> 00:21:47,460
if i do test cloud instance list it will

00:21:45,330 --> 00:21:51,409
look through and find me all of my

00:21:47,460 --> 00:21:54,179
running instances and then i can pass

00:21:51,409 --> 00:22:02,179
all and it'll tell me all the ones that

00:21:54,179 --> 00:22:02,179
stop better shut off no so if i do

00:22:07,810 --> 00:22:17,640
we're really going to do tab completion

00:22:09,490 --> 00:22:22,630
for this and now inside the instances

00:22:17,640 --> 00:22:32,080
there's a directory for each instance so

00:22:22,630 --> 00:22:33,970
if i go to my cloud so IP address is

00:22:32,080 --> 00:22:36,540
just a flat text file with the IP

00:22:33,970 --> 00:22:39,520
address that it that have found earlier

00:22:36,540 --> 00:22:41,500
because i have created instances and

00:22:39,520 --> 00:22:44,140
then gone away and come back and not

00:22:41,500 --> 00:22:45,850
been able to find the IP address of the

00:22:44,140 --> 00:22:51,730
instance that i created so i started

00:22:45,850 --> 00:22:54,330
saving in a file but the if we look at

00:22:51,730 --> 00:22:54,330
the metadata

00:23:04,440 --> 00:23:08,220
you know it gives it an instance ID and

00:23:06,390 --> 00:23:09,660
a local host name so like you can go in

00:23:08,220 --> 00:23:11,550
here and change this for each of your

00:23:09,660 --> 00:23:14,580
instances and it's all in a Python

00:23:11,550 --> 00:23:22,530
config object but it defaults to test

00:23:14,580 --> 00:23:26,910
cloud and it defaults to to a password

00:23:22,530 --> 00:23:29,340
of password and it allows ssh password

00:23:26,910 --> 00:23:31,290
authentication because the default on

00:23:29,340 --> 00:23:34,470
cloud instances is the only accept SSH

00:23:31,290 --> 00:23:39,150
keys which you can also use test cloud

00:23:34,470 --> 00:23:42,980
to inject SS 80s this was just easier

00:23:39,150 --> 00:23:42,980
for me and it stayed there for the past

00:23:47,120 --> 00:23:51,690
exactly and it's all local behind the

00:23:49,470 --> 00:23:54,540
firewall but you know anything that you

00:23:51,690 --> 00:23:57,390
like but I tried to meddle with as

00:23:54,540 --> 00:23:59,220
little as possible so anything that you

00:23:57,390 --> 00:24:01,830
can do incontinent you can still do with

00:23:59,220 --> 00:24:05,420
tests on you know you can feed it custom

00:24:01,830 --> 00:24:08,280
user scripts and metadata information

00:24:05,420 --> 00:24:11,550
and then still have some API work or

00:24:08,280 --> 00:24:14,190
some CLI interface stuff to work on to

00:24:11,550 --> 00:24:15,840
make it easier to do right now you'd

00:24:14,190 --> 00:24:21,200
have to manually edit the configuration

00:24:15,840 --> 00:24:21,200
object so

00:24:23,140 --> 00:24:30,410
stack exchange answers for weslaco

00:24:26,750 --> 00:24:32,950
capsular cloud yes and they're like who

00:24:30,410 --> 00:24:32,950
would 19

00:24:39,680 --> 00:24:41,680
Oh

00:25:01,220 --> 00:25:04,929
something is all mine

00:25:09,830 --> 00:25:12,399
huh

00:25:19,190 --> 00:25:36,730
that's my ssh key password you know that

00:25:25,340 --> 00:25:40,640
we have a a running cloud image locally

00:25:36,730 --> 00:25:42,650
which isn't isn't much but it saves you

00:25:40,640 --> 00:25:44,330
a lot of extra time getting all of the

00:25:42,650 --> 00:25:46,790
everything configured and it's going to

00:25:44,330 --> 00:25:49,430
be it's got what i think are relatively

00:25:46,790 --> 00:25:50,990
sane default so whenever you spin up a

00:25:49,430 --> 00:25:53,120
new instance you know it's gonna be the

00:25:50,990 --> 00:25:54,620
same user the same password you know

00:25:53,120 --> 00:25:56,480
unless you configure different and right

00:25:54,620 --> 00:26:00,890
now this is only tested on Ford or

00:25:56,480 --> 00:26:03,880
images I don't see any reason why it

00:26:00,890 --> 00:26:07,370
wouldn't also boot Debbie and abou to

00:26:03,880 --> 00:26:09,530
centos core OS you know whatever type of

00:26:07,370 --> 00:26:11,300
cute cow you can throw at it but that

00:26:09,530 --> 00:26:12,860
hasn't been tested yet that's something

00:26:11,300 --> 00:26:15,500
that we plan on doing in the future so

00:26:12,860 --> 00:26:17,780
that you can pick out you know you can

00:26:15,500 --> 00:26:19,880
test multiple images with it which will

00:26:17,780 --> 00:26:22,280
be especially useful for anybody else

00:26:19,880 --> 00:26:24,800
using is like in tasca trong know if you

00:26:22,280 --> 00:26:27,530
want to test that your package failed

00:26:24,800 --> 00:26:31,210
and also installs on centos you know we

00:26:27,530 --> 00:26:31,210
can do that in a disposable client

00:26:34,669 --> 00:26:39,169
so you can also do image list which will

00:26:37,730 --> 00:26:43,639
tell you all of the images that you have

00:26:39,169 --> 00:26:45,889
downloaded which is nice you know on my

00:26:43,639 --> 00:26:49,249
desktop back at the house there's like

00:26:45,889 --> 00:26:51,350
40 of them and right now it's just the

00:26:49,249 --> 00:26:56,480
filename of whatever gets spit out of

00:26:51,350 --> 00:26:59,570
code ears put on download the FBO but it

00:26:56,480 --> 00:27:02,059
also makes it really easy if you're if

00:26:59,570 --> 00:27:04,220
you want to reuse an instance all you

00:27:02,059 --> 00:27:06,139
need is that name that you pass it as

00:27:04,220 --> 00:27:07,580
the URL on it will look and say oh I

00:27:06,139 --> 00:27:09,820
already have that and then using you're

00:27:07,580 --> 00:27:09,820
good to go

00:27:14,830 --> 00:27:18,179
there any questions

00:27:22,200 --> 00:27:25,200
like

00:27:25,680 --> 00:27:31,650
yeah initially I had different arguments

00:27:29,880 --> 00:27:33,870
and commands that had to be passed into

00:27:31,650 --> 00:27:38,400
queue in portree direction and what not

00:27:33,870 --> 00:27:41,520
to allow VNC and and spice viewers to

00:27:38,400 --> 00:27:43,670
connect to to those guests and I haven't

00:27:41,520 --> 00:27:46,890
removed those flags out of the code yet

00:27:43,670 --> 00:27:48,540
but right now it it runs invert manager

00:27:46,890 --> 00:27:50,310
so you can change all of that you can

00:27:48,540 --> 00:27:52,080
twiddle those settings as much as you

00:27:50,310 --> 00:27:57,780
want you know for however you want to

00:27:52,080 --> 00:28:08,010
view it yeah one now now that lip verts

00:27:57,780 --> 00:28:09,900
handling all that it's automatic oh yeah

00:28:08,010 --> 00:28:12,180
well you know that's that's kind of the

00:28:09,900 --> 00:28:13,920
plan because you know with with tasket

00:28:12,180 --> 00:28:19,730
Ron of disposable clients we want to

00:28:13,920 --> 00:28:21,720
make tests cloud capable of also running

00:28:19,730 --> 00:28:24,000
desktop environments so like you know

00:28:21,720 --> 00:28:26,340
for gnome they have like a gnome test

00:28:24,000 --> 00:28:27,870
week that's you know relatively I you

00:28:26,340 --> 00:28:30,630
know runs through a bunch of stuff but

00:28:27,870 --> 00:28:33,030
we could spin that up and actually run

00:28:30,630 --> 00:28:36,740
the gnome tests on a fresh install in a

00:28:33,030 --> 00:28:36,740
vm before we sign off on that build

00:28:40,340 --> 00:28:49,590
the person who does these things yep

00:28:44,540 --> 00:28:52,590
look some more testing a little bit it

00:28:49,590 --> 00:28:54,480
lives baby exactly well I mean I'm

00:28:52,590 --> 00:28:58,040
working on right now courting a bunch of

00:28:54,480 --> 00:29:02,280
the centos tests to work on fedora and

00:28:58,040 --> 00:29:04,620
going to run them via via test cloud you

00:29:02,280 --> 00:29:07,080
know that way we can increase our our

00:29:04,620 --> 00:29:09,630
test coverage overall but that will fit

00:29:07,080 --> 00:29:11,580
right into tasket Ron and tasket Ron you

00:29:09,630 --> 00:29:13,920
know when there's you could write

00:29:11,580 --> 00:29:15,210
generic tasks with disposable clients

00:29:13,920 --> 00:29:20,780
you should be able to set that up as a

00:29:15,210 --> 00:29:24,870
task any time arista happens well or

00:29:20,780 --> 00:29:28,920
instead of a news of tests we could land

00:29:24,870 --> 00:29:33,510
an image into the pesky look that way oh

00:29:28,920 --> 00:29:36,110
yeah no it exactly you're you need test

00:29:33,510 --> 00:29:36,110
your level

00:29:38,980 --> 00:29:46,430
yeah well that was the hope but yeah I

00:29:43,309 --> 00:29:49,490
really learned a lot about what is ok

00:29:46,430 --> 00:29:53,270
for me have on a quick dirty hack that

00:29:49,490 --> 00:29:54,950
only I use and how next time I think

00:29:53,270 --> 00:29:58,280
somebody might find something useful i

00:29:54,950 --> 00:30:00,320
should try to you know design it right

00:29:58,280 --> 00:30:06,650
the first time because going back and

00:30:00,320 --> 00:30:08,510
refactoring it's not much but yeah so

00:30:06,650 --> 00:30:10,940
that's that's test cloud and you know

00:30:08,510 --> 00:30:12,170
we're going to be able to use it to you

00:30:10,940 --> 00:30:14,990
know so people want to try the cloud

00:30:12,170 --> 00:30:16,880
image say hey install test cloud fleet

00:30:14,990 --> 00:30:18,290
at this URL and now you can poke around

00:30:16,880 --> 00:30:19,790
at the cottage you know you don't have

00:30:18,290 --> 00:30:22,160
to have OpenStack running somewhere you

00:30:19,790 --> 00:30:25,220
don't have to have easy to you don't

00:30:22,160 --> 00:30:28,220
have to figure out the esoteric chicken

00:30:25,220 --> 00:30:34,760
sacrifice practices that you have to get

00:30:28,220 --> 00:30:36,260
it to run a clipper and you said well I

00:30:34,760 --> 00:30:40,280
tried to explain it to you so it's not

00:30:36,260 --> 00:30:41,780
magic but yeah the the source code is

00:30:40,280 --> 00:30:45,550
all I mean it's not it's not a very big

00:30:41,780 --> 00:30:48,710
project it's a some rapper commands and

00:30:45,550 --> 00:30:50,840
utility functions to handle extra data

00:30:48,710 --> 00:30:52,700
but it's really easy patches welcome

00:30:50,840 --> 00:30:54,110
we've gotta I need to come up with a

00:30:52,700 --> 00:30:57,559
roadmap on what all we're actually going

00:30:54,110 --> 00:31:01,100
to work work on but there's we have a

00:30:57,559 --> 00:31:02,850
list of things that need done if if

00:31:01,100 --> 00:31:10,620
anybody's interested in

00:31:02,850 --> 00:31:13,770
help us out on Adams working on that

00:31:10,620 --> 00:31:20,640
right now it's not he's got some some

00:31:13,770 --> 00:31:23,720
packages to fashion a test pilot company

00:31:20,640 --> 00:31:23,720

YouTube URL: https://www.youtube.com/watch?v=Z3ZqOer7Mn0


