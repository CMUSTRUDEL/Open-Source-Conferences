Title: Flock 2015 - Build your own (Ansible) lightsaber !! - Toshio Kuratomi
Publication date: 2015-08-26
Playlist: Flock 2015
Description: 
	Ansible allows sysadmins to do more work in less time by giving them a means to capture the desired state of machines in special configuration files and then apply those configurations to multiple remote machines. But for every labor saving tool there is some startup cost. In this case the price is recording the desired state into ansible playbooks. Several Fedora Infrastructure admins were faced with just this problem and solved it by building github.com/ralphbean/lightsaber , a common repository of playbooks and roles to configure their systems. Come to this session to learn how you can use their work to jumpstart your own ansible deployments on Fedora.

bitbucket.org/toshio/local-playbooks/src/db6498da4aab8d8893c0d68690ab8a3505ebed82/lightsaber/?at=master
Captions: 
	00:00:00,439 --> 00:00:05,160
this is the build room it's a lightsaber

00:00:02,850 --> 00:00:07,140
talk it's got two components we're going

00:00:05,160 --> 00:00:09,179
to talk about ansible so it's going to

00:00:07,140 --> 00:00:12,780
be really intro level there and then a

00:00:09,179 --> 00:00:15,599
little bit about lightsaber so first

00:00:12,780 --> 00:00:20,220
what is ansible ansible is a tool that

00:00:15,599 --> 00:00:23,029
lets you do make SSH connections to a

00:00:20,220 --> 00:00:25,970
large number of remote machines and then

00:00:23,029 --> 00:00:28,650
push commands over the wire to them

00:00:25,970 --> 00:00:31,830
there's three modes that you can use the

00:00:28,650 --> 00:00:34,559
expo in ad-hoc is kind of just running

00:00:31,830 --> 00:00:36,840
one command at a time on the remote

00:00:34,559 --> 00:00:38,489
machine you can use it as an

00:00:36,840 --> 00:00:40,710
orchestration tool which is really kind

00:00:38,489 --> 00:00:42,780
of doing the same thing you know running

00:00:40,710 --> 00:00:45,239
tasks on the remote machine but it's

00:00:42,780 --> 00:00:47,879
more of a time when you are able to

00:00:45,239 --> 00:00:50,280
pre-plan and say oh well you know I have

00:00:47,879 --> 00:00:52,890
this set of five tasks that all kind of

00:00:50,280 --> 00:00:54,360
make one logical action and I want to be

00:00:52,890 --> 00:00:55,649
able to run that on these remote

00:00:54,360 --> 00:00:57,149
machines so if you have time to prepare

00:00:55,649 --> 00:00:59,100
that in advance that's kind of work

00:00:57,149 --> 00:01:00,840
orchestration from Boone in

00:00:59,100 --> 00:01:03,840
configuration management is what people

00:01:00,840 --> 00:01:05,760
mostly associated ansible configuration

00:01:03,840 --> 00:01:07,320
management is also about running tasks

00:01:05,760 --> 00:01:09,360
on remote machines but instead of

00:01:07,320 --> 00:01:11,520
thinking about it in terms of I want to

00:01:09,360 --> 00:01:13,409
do this thing on a remote machine you

00:01:11,520 --> 00:01:15,000
think more along the lines of I want to

00:01:13,409 --> 00:01:22,909
make the remote machine match this

00:01:15,000 --> 00:01:22,909
certain state so here's some can we

00:01:26,840 --> 00:01:31,820
you guys see it we're not all the red

00:01:29,220 --> 00:01:37,590
looks very watch

00:01:31,820 --> 00:01:53,100
yeah you guys want to step forward we

00:01:37,590 --> 00:01:55,580
could do that hi love no no where does

00:01:53,100 --> 00:01:55,580
that PDF

00:02:05,740 --> 00:02:30,239
you could just read it or all the slides

00:02:09,069 --> 00:02:30,239
like that technical conferences

00:02:42,180 --> 00:02:47,219
no one calls the lights assuming they're

00:02:44,430 --> 00:02:57,629
not unless there are switches behind the

00:02:47,219 --> 00:03:01,040
screen i sees volume just turn all the

00:02:57,629 --> 00:03:01,040
lights off for everybody it'll be fine

00:03:22,180 --> 00:03:27,540
how these don't change them oh is this

00:03:24,549 --> 00:03:27,540
all in text

00:03:30,170 --> 00:03:43,740
click that in for me to watch out oh

00:03:37,140 --> 00:04:04,260
well see who cares he better know what

00:03:43,740 --> 00:04:10,670
you didn't have to read the Magnus I

00:04:04,260 --> 00:04:14,490
mean yes depends on my window manager

00:04:10,670 --> 00:04:15,900
okay so these are ad hoc tasks you know

00:04:14,490 --> 00:04:19,200
really quickly it's just kind of doing

00:04:15,900 --> 00:04:20,850
one task at a time ansibles the command

00:04:19,200 --> 00:04:23,820
I'm running here that I Stanford

00:04:20,850 --> 00:04:26,370
inventory inventory is all the hosts

00:04:23,820 --> 00:04:27,690
that Hansel is going to go about here

00:04:26,370 --> 00:04:30,480
i'm just giving it to host on the

00:04:27,690 --> 00:04:32,790
command line web server 1 2 i'm telling

00:04:30,480 --> 00:04:34,710
it all which means we're all of us that

00:04:32,790 --> 00:04:37,650
you know about an inventory go ahead and

00:04:34,710 --> 00:04:39,180
do this task so the story behind this

00:04:37,650 --> 00:04:41,370
could be something like oh you know I

00:04:39,180 --> 00:04:42,810
get a call at 10pm and someone says

00:04:41,370 --> 00:04:44,310
hello the web at was broken you know

00:04:42,810 --> 00:04:46,350
it's doing all these bad things you

00:04:44,310 --> 00:04:47,790
gotta go fix it right now and you know

00:04:46,350 --> 00:04:49,950
you start you look at the code Easter

00:04:47,790 --> 00:04:51,660
you do this and do that you finally come

00:04:49,950 --> 00:04:53,460
up with a big since midnight you're like

00:04:51,660 --> 00:04:55,740
now I've got to get this out all my web

00:04:53,460 --> 00:04:57,060
servers and go to sleep so that in the

00:04:55,740 --> 00:04:59,310
morning you know I can do all of

00:04:57,060 --> 00:05:02,280
everything correctly checking into gated

00:04:59,310 --> 00:05:04,680
whatever else so hands full here is is

00:05:02,280 --> 00:05:08,520
allowing me to copy using the copy

00:05:04,680 --> 00:05:11,310
module the fixed file that I have a live

00:05:08,520 --> 00:05:12,000
server up to a different directory on

00:05:11,310 --> 00:05:14,970
the

00:05:12,000 --> 00:05:17,160
server because the remote server is

00:05:14,970 --> 00:05:19,680
going to require special permissions it

00:05:17,160 --> 00:05:22,830
won't work with just my ssh user logging

00:05:19,680 --> 00:05:24,570
in as I'm use sudo and it's not asking

00:05:22,830 --> 00:05:27,570
for a password in order to do that and

00:05:24,570 --> 00:05:30,060
then after a copy that file up I'm going

00:05:27,570 --> 00:05:32,310
to run a second pencil task here calling

00:05:30,060 --> 00:05:34,320
the service module this time until I go

00:05:32,310 --> 00:05:38,850
ahead and restart apache on that machine

00:05:34,320 --> 00:05:40,950
so that it applies my changes and one

00:05:38,850 --> 00:05:43,680
thing about this the second one you can

00:05:40,950 --> 00:05:46,380
see the forks one that's constable

00:05:43,680 --> 00:05:49,770
instead of spotting off the new process

00:05:46,380 --> 00:05:51,720
for every every post here I just want to

00:05:49,770 --> 00:05:53,940
have one process and that way all kinds

00:05:51,720 --> 00:05:56,010
of serialize it and that way I won't end

00:05:53,940 --> 00:05:58,260
up we go bouncing all the web servers at

00:05:56,010 --> 00:05:59,940
once and everyone seen an outage if

00:05:58,260 --> 00:06:03,660
parts of the web app are still working

00:05:59,940 --> 00:06:06,600
doing with course one means that those

00:06:03,660 --> 00:06:08,460
will work users upon this load mount

00:06:06,600 --> 00:06:11,610
system will see things continue to work

00:06:08,460 --> 00:06:13,890
the whole time so here's the output the

00:06:11,610 --> 00:06:17,010
first task I've run it makes this copy

00:06:13,890 --> 00:06:19,740
of the file it has to last me for the

00:06:17,010 --> 00:06:22,470
password lesego password I type it in it

00:06:19,740 --> 00:06:23,880
goes out he uses ssh I've got no public

00:06:22,470 --> 00:06:26,760
private key setups that doesn't have to

00:06:23,880 --> 00:06:28,650
ask me for a password for that it then

00:06:26,760 --> 00:06:30,450
copies the file over to a remote system

00:06:28,650 --> 00:06:32,570
and then I returned some Jason

00:06:30,450 --> 00:06:35,790
information here that tells me about

00:06:32,570 --> 00:06:38,580
what it did changed true means yes it

00:06:35,790 --> 00:06:40,620
did in fact change the file it wasn't

00:06:38,580 --> 00:06:41,020
the correct file to begin with so its

00:06:40,620 --> 00:06:44,879
course

00:06:41,020 --> 00:06:46,840
it gets me a check some of the file

00:06:44,879 --> 00:06:48,520
destination is just wrong we work with

00:06:46,840 --> 00:06:51,370
it and it's got some other you know file

00:06:48,520 --> 00:06:54,129
system information about it and he knows

00:06:51,370 --> 00:06:55,780
it gives me both web services telling me

00:06:54,129 --> 00:06:57,639
what happened on both so if i had been

00:06:55,780 --> 00:06:59,949
experimenting like I'm one of those web

00:06:57,639 --> 00:07:01,960
servers live and I already had the file

00:06:59,949 --> 00:07:03,400
there they tell me he changed his falls

00:07:01,960 --> 00:07:06,430
for that web server but the other one

00:07:03,400 --> 00:07:09,129
would be changed true and then the

00:07:06,430 --> 00:07:11,770
second pass that Iran to do that is

00:07:09,129 --> 00:07:13,330
returning less information because the

00:07:11,770 --> 00:07:14,919
service module doesn't have as much

00:07:13,330 --> 00:07:17,560
information that feels like a skivvy

00:07:14,919 --> 00:07:22,150
it's just telling me that change is true

00:07:17,560 --> 00:07:27,539
it was a success and that HTTP on that

00:07:22,150 --> 00:07:29,849
server is now running so pretty simple

00:07:27,539 --> 00:07:32,740
here's an example of orchestration

00:07:29,849 --> 00:07:35,800
orchestration is is similar to running

00:07:32,740 --> 00:07:37,810
ad hoc task we're just telling ansible

00:07:35,800 --> 00:07:39,490
that you know we want you to go and do

00:07:37,810 --> 00:07:43,060
this that the other thing on the road

00:07:39,490 --> 00:07:44,409
server but instead of being at the

00:07:43,060 --> 00:07:46,419
command line coming to type everything

00:07:44,409 --> 00:07:48,849
out we've got the opportunity to

00:07:46,419 --> 00:07:51,580
pre-plan this so in this purpose

00:07:48,849 --> 00:07:54,310
duration task what we're saying is we

00:07:51,580 --> 00:07:57,520
want to run a yum update on the remote

00:07:54,310 --> 00:07:59,229
system now you know sometimes we yum

00:07:57,520 --> 00:08:01,150
update the package will get in there and

00:07:59,229 --> 00:08:02,349
say oh I really don't want to upgrade

00:08:01,150 --> 00:08:04,479
that average because it's kind of

00:08:02,349 --> 00:08:08,590
dangerous I want to evaluate the changes

00:08:04,479 --> 00:08:11,229
first so we're taking this this logical

00:08:08,590 --> 00:08:14,080
action of updating my server to all the

00:08:11,229 --> 00:08:15,759
newest packages and we're going to do it

00:08:14,080 --> 00:08:17,979
in four different tasks that allows us

00:08:15,759 --> 00:08:20,050
to stop right in the middle so the first

00:08:17,979 --> 00:08:23,110
task is calling the young module and

00:08:20,050 --> 00:08:25,090
it's going to do a list this is a

00:08:23,110 --> 00:08:27,310
parameter hope so playbooks this is the

00:08:25,090 --> 00:08:30,699
first time you seen a playbook playbook

00:08:27,310 --> 00:08:31,840
sorry Anna and llamo is kind of a data

00:08:30,699 --> 00:08:35,140
structure format

00:08:31,840 --> 00:08:38,050
xbase easy for people to read the top

00:08:35,140 --> 00:08:40,930
level of play book is a list so the

00:08:38,050 --> 00:08:44,830
heightened introduces our list and each

00:08:40,930 --> 00:08:48,040
place is each list entry is called a

00:08:44,830 --> 00:08:50,110
play within a play even have a name

00:08:48,040 --> 00:08:53,020
field that gives you a way to describe

00:08:50,110 --> 00:08:55,330
it so we're calling as one of they are

00:08:53,020 --> 00:08:57,339
host folks which just like on the

00:08:55,330 --> 00:08:58,839
command line specifies which posts that

00:08:57,339 --> 00:09:00,550
ansible knows about anything before

00:08:58,839 --> 00:09:02,470
you're going to get run so once again

00:09:00,550 --> 00:09:05,080
we're going to do them all call our

00:09:02,470 --> 00:09:08,200
machines and then we have an entry

00:09:05,080 --> 00:09:10,930
called tasks subjective these is a

00:09:08,200 --> 00:09:13,089
dictionary key and then value so the

00:09:10,930 --> 00:09:14,890
task dictionary key is going to

00:09:13,089 --> 00:09:16,750
reference another list and we have four

00:09:14,890 --> 00:09:18,339
entries in that list and those are the

00:09:16,750 --> 00:09:20,350
four tasks that we're going to run so

00:09:18,339 --> 00:09:23,740
like when we're an ad-hoc mode you know

00:09:20,350 --> 00:09:26,160
we're just doing one task at a time easy

00:09:23,740 --> 00:09:29,920
to represent one of those types of tasks

00:09:26,160 --> 00:09:32,620
we can name each of our tasks and then

00:09:29,920 --> 00:09:34,529
the main part is right here we say young

00:09:32,620 --> 00:09:37,769
that is the module that we are

00:09:34,529 --> 00:09:40,019
go ahead and and and use the young

00:09:37,769 --> 00:09:41,610
module which helped giving a pram list

00:09:40,019 --> 00:09:44,519
and we're calling it we want to list all

00:09:41,610 --> 00:09:47,040
the updates so it's going to copy that a

00:09:44,519 --> 00:09:49,079
command pod put that young module out to

00:09:47,040 --> 00:09:50,279
the road system and it's going to tell

00:09:49,079 --> 00:09:51,930
it to list the updates that are

00:09:50,279 --> 00:09:55,579
available on our system and return that

00:09:51,930 --> 00:09:58,139
information to us then we use register

00:09:55,579 --> 00:09:59,670
in order to register the results into

00:09:58,139 --> 00:10:01,589
this updates variables that we can

00:09:59,670 --> 00:10:03,839
access it later use it in the play what

00:10:01,589 --> 00:10:06,809
we decide what we want to do if you

00:10:03,839 --> 00:10:08,910
notice this is indented underneath young

00:10:06,809 --> 00:10:10,350
that means that it's a parameter the

00:10:08,910 --> 00:10:13,470
young model it belongs to the young

00:10:10,350 --> 00:10:15,689
model whereas register is at one level

00:10:13,470 --> 00:10:17,730
and that one is that's a parameter of

00:10:15,689 --> 00:10:19,410
this task so there are certain

00:10:17,730 --> 00:10:22,259
parameters that you can apply to any

00:10:19,410 --> 00:10:24,540
task like register and then the modules

00:10:22,259 --> 00:10:26,160
themselves also take parameters and the

00:10:24,540 --> 00:10:29,879
indentation level kind of determines

00:10:26,160 --> 00:10:31,829
where those well psychopaths here is

00:10:29,879 --> 00:10:33,899
debug debug just prints something to the

00:10:31,829 --> 00:10:35,790
screen so in this case we're telling it

00:10:33,899 --> 00:10:38,160
click the bar updates and inside of

00:10:35,790 --> 00:10:40,589
updates there's and attribute results

00:10:38,160 --> 00:10:42,420
and we're going to print that to them to

00:10:40,589 --> 00:10:44,459
the screen for the young model that's

00:10:42,420 --> 00:10:46,529
going to print a list of packages so

00:10:44,459 --> 00:10:49,170
that's kind of what we want next one is

00:10:46,529 --> 00:10:51,509
the pause module and what pause does

00:10:49,170 --> 00:10:53,189
this is just pauses ansibles execution

00:10:51,509 --> 00:10:55,439
and it lets you decide what you want to

00:10:53,189 --> 00:10:58,110
do so we're going to give it a prophet

00:10:55,439 --> 00:10:59,819
says okay user we want you to take a

00:10:58,110 --> 00:11:02,309
look at this list of packages if you

00:10:59,819 --> 00:11:04,170
want to apply them hit enter if you

00:11:02,309 --> 00:11:04,810
decide oh there's something dangerous in

00:11:04,170 --> 00:11:08,860
there I don't want

00:11:04,810 --> 00:11:11,200
control C a and abort and then finally

00:11:08,860 --> 00:11:13,840
if you didn't abort then we're going to

00:11:11,200 --> 00:11:15,580
run the next task with sudo with the

00:11:13,840 --> 00:11:18,040
young module again but this time we're

00:11:15,580 --> 00:11:19,960
telling it okay for every single package

00:11:18,040 --> 00:11:21,370
that's installed we want the latest

00:11:19,960 --> 00:11:24,940
version of that package that will

00:11:21,370 --> 00:11:29,380
actually run the update so here's the

00:11:24,940 --> 00:11:30,820
output ate one of the output it starts

00:11:29,380 --> 00:11:33,000
out of it as for the sudo password again

00:11:30,820 --> 00:11:35,529
we did a dash case that it can do that

00:11:33,000 --> 00:11:38,640
gather stats gathering facts is an

00:11:35,529 --> 00:11:41,200
implicit task that all the ansible

00:11:38,640 --> 00:11:43,360
playbooks always do and what it does is

00:11:41,200 --> 00:11:45,730
it gathers information about the remote

00:11:43,360 --> 00:11:48,250
systems that is talking to so you can

00:11:45,730 --> 00:11:50,890
decide for instance oh this is these

00:11:48,250 --> 00:11:52,960
hosts are running fedora and so then you

00:11:50,890 --> 00:11:55,000
wanted to in your PlayBook you could do

00:11:52,960 --> 00:11:57,610
something like say write a conditional

00:11:55,000 --> 00:12:00,279
that says if it's a thrower machine or

00:11:57,610 --> 00:12:03,490
red hat machine that use the manual if

00:12:00,279 --> 00:12:04,990
this is a this is an illusion machine or

00:12:03,490 --> 00:12:07,600
a debian machine that we use the app

00:12:04,990 --> 00:12:10,680
module and so you can manage a

00:12:07,600 --> 00:12:13,839
heterogeneous environment posts that way

00:12:10,680 --> 00:12:16,630
then we get for our first task which is

00:12:13,839 --> 00:12:18,220
that young list one and it goes out to

00:12:16,630 --> 00:12:21,040
the row machine it looks up that

00:12:18,220 --> 00:12:22,930
information and then it returns it it

00:12:21,040 --> 00:12:24,520
doesn't show it to us instead it gives

00:12:22,930 --> 00:12:26,440
it puts in the register variable it

00:12:24,520 --> 00:12:29,200
passes it to the debug pass and be

00:12:26,440 --> 00:12:30,240
specified and then the debugger Tascosa

00:12:29,200 --> 00:12:32,580
pen

00:12:30,240 --> 00:12:34,620
dimension so ansible is going through

00:12:32,580 --> 00:12:38,670
and is applying these tasks each post

00:12:34,620 --> 00:12:40,620
that we specify so if you notice in the

00:12:38,670 --> 00:12:43,440
inventory I used inventory of the

00:12:40,620 --> 00:12:45,060
command line again for a kalonian 21 so

00:12:43,440 --> 00:12:47,279
it's saying okay so i have two hopes

00:12:45,060 --> 00:12:49,140
that i know about so when you say do

00:12:47,279 --> 00:12:51,020
this to all the hosts you mean these two

00:12:49,140 --> 00:12:54,930
hosts because that's all it knows about

00:12:51,020 --> 00:12:58,200
and so for each house runs and if I the

00:12:54,930 --> 00:13:00,000
results so on one post it decides I live

00:12:58,200 --> 00:13:02,040
updated on the other one system to you

00:13:00,000 --> 00:13:06,420
guys python freeze is what needs to be

00:13:02,040 --> 00:13:07,980
updated and so then say okay those

00:13:06,420 --> 00:13:10,080
sounds safe I mean what could go wrong

00:13:07,980 --> 00:13:11,310
we update something to do is just impede

00:13:10,080 --> 00:13:12,980
you know it's not like you can break the

00:13:11,310 --> 00:13:15,120
world so we're going to press ENTER and

00:13:12,980 --> 00:13:18,690
then it goes at that and updating the

00:13:15,120 --> 00:13:20,790
packages and then it tells us a little

00:13:18,690 --> 00:13:23,040
bit of a summary here of what happens is

00:13:20,790 --> 00:13:25,890
all right all of our all of our teams

00:13:23,040 --> 00:13:29,580
are good okay five change one

00:13:25,890 --> 00:13:30,930
unreachable 0 so okay is saying we had

00:13:29,580 --> 00:13:34,250
five tasks they all completed

00:13:30,930 --> 00:13:37,920
successfully failed 0 means none of them

00:13:34,250 --> 00:13:40,680
fail came we change things I'm reachable

00:13:37,920 --> 00:13:43,190
0 all of us work on tactical we didn't

00:13:40,680 --> 00:13:45,990
you know have any timeouts or anything

00:13:43,190 --> 00:13:48,930
config management is basically the same

00:13:45,990 --> 00:13:52,260
as orchestration but the difference is

00:13:48,930 --> 00:13:53,820
kind of in in what your goal is so this

00:13:52,260 --> 00:13:56,820
is a playbook it looks a lot like the

00:13:53,820 --> 00:13:59,070
other one but when you are doing

00:13:56,820 --> 00:14:01,470
orchestration you're really saying okay

00:13:59,070 --> 00:14:03,990
I want to do this thing like I want to

00:14:01,470 --> 00:14:07,470
deploy my web application and that might

00:14:03,990 --> 00:14:10,410
be okay check out and get push push the

00:14:07,470 --> 00:14:12,240
files up to the rug system restart

00:14:10,410 --> 00:14:14,120
apache so every time you run that it's

00:14:12,240 --> 00:14:15,680
going to do these tasks it's going to

00:14:14,120 --> 00:14:18,230
started patching every single time for

00:14:15,680 --> 00:14:19,880
instance so you're going to see these

00:14:18,230 --> 00:14:21,950
changes happen very sometime if you do

00:14:19,880 --> 00:14:25,040
it more than once you might see them

00:14:21,950 --> 00:14:25,850
happen again and again and again so if

00:14:25,040 --> 00:14:28,580
you're doing something like we're

00:14:25,850 --> 00:14:29,690
notifying afterwards you have to be

00:14:28,580 --> 00:14:31,430
careful with those kinds of tests

00:14:29,690 --> 00:14:33,350
because oh if I just run this in the

00:14:31,430 --> 00:14:36,020
loop then it's going to notify me you

00:14:33,350 --> 00:14:38,779
know 20 times email for each of them so

00:14:36,020 --> 00:14:40,279
orchestration tasks you really you're

00:14:38,779 --> 00:14:42,470
kind of training yourself I don't want

00:14:40,279 --> 00:14:45,529
to run these over and over config

00:14:42,470 --> 00:14:48,950
management tasks when you write these

00:14:45,529 --> 00:14:51,200
you're taking care to say okay I don't

00:14:48,950 --> 00:14:53,930
want this to do anything if no changes

00:14:51,200 --> 00:14:57,200
occur right so if I'm not pushing out

00:14:53,930 --> 00:14:59,330
new configs I don't want anything new to

00:14:57,200 --> 00:15:01,190
happen I don't want new notifications to

00:14:59,330 --> 00:15:04,220
go out in these things so by writing a

00:15:01,190 --> 00:15:06,710
play books or config management you're

00:15:04,220 --> 00:15:08,510
kind of training yourself I'm not going

00:15:06,710 --> 00:15:12,230
to do these things that are going to

00:15:08,510 --> 00:15:13,670
happen every single time so it's been

00:15:12,230 --> 00:15:16,940
deceptively to separate them in your

00:15:13,670 --> 00:15:18,920
mind so we have post web service this

00:15:16,940 --> 00:15:21,110
time what we're going to do is we're

00:15:18,920 --> 00:15:22,760
gonna say below we have web server what

00:15:21,110 --> 00:15:24,650
is a web server or web servers going to

00:15:22,760 --> 00:15:26,570
have a patchy and modest to sell for us

00:15:24,650 --> 00:15:28,370
it's going to have our special config

00:15:26,570 --> 00:15:28,970
file and that's what how we're going to

00:15:28,370 --> 00:15:33,199
define

00:15:28,970 --> 00:15:36,500
servers so our past this time are young

00:15:33,199 --> 00:15:39,529
again young module just install the HTTP

00:15:36,500 --> 00:15:41,689
and the mod ssl package you notice we

00:15:39,529 --> 00:15:43,879
use present instead of latest and what

00:15:41,689 --> 00:15:46,189
that does is it says are these packages

00:15:43,879 --> 00:15:48,139
available our artist packages installed

00:15:46,189 --> 00:15:50,110
on the road system that way if they're

00:15:48,139 --> 00:15:52,790
already installed it won't do anything

00:15:50,110 --> 00:15:54,139
even if there's a later later version it

00:15:52,790 --> 00:15:56,470
won't do anything you will just say okay

00:15:54,139 --> 00:15:59,660
these are president we're all good then

00:15:56,470 --> 00:16:04,399
the second thing is to use copy or copy

00:15:59,660 --> 00:16:08,959
our local file that we have written up

00:16:04,399 --> 00:16:10,879
to Apaches config directory and the copy

00:16:08,959 --> 00:16:12,860
module is smart enough that it says okay

00:16:10,879 --> 00:16:14,329
its present on the road system and here

00:16:12,860 --> 00:16:17,449
then I don't have to do anything and

00:16:14,329 --> 00:16:19,189
then finally we're going to go ahead and

00:16:17,449 --> 00:16:22,129
make sure that Apache has been started

00:16:19,189 --> 00:16:23,930
and it's enabled to boot and once again

00:16:22,129 --> 00:16:26,959
if it's already started and running it's

00:16:23,930 --> 00:16:28,819
not going to reload that for us that

00:16:26,959 --> 00:16:32,269
doesn't mean that if the comp I'll

00:16:28,819 --> 00:16:35,029
changes we won't get anything to came

00:16:32,269 --> 00:16:38,029
here and that's kind of a personal

00:16:35,029 --> 00:16:40,699
decision we can decide to do that

00:16:38,029 --> 00:16:42,290
different ways for instance handlers are

00:16:40,699 --> 00:16:45,829
private more appropriate way to do that

00:16:42,290 --> 00:16:49,040
that way whenever this this task

00:16:45,829 --> 00:16:51,620
actually has a change then go ahead and

00:16:49,040 --> 00:16:53,689
run the handler to restart apache and

00:16:51,620 --> 00:16:55,129
that way if you just run this playbook

00:16:53,689 --> 00:16:56,930
and those changes occur all the way

00:16:55,129 --> 00:16:58,550
through here apache does not get

00:16:56,930 --> 00:17:00,680
restarted but this is the first time

00:16:58,550 --> 00:17:04,699
running about a new host apache will be

00:17:00,680 --> 00:17:06,679
started okay so that's that's a config

00:17:04,699 --> 00:17:08,299
management task in terms of how the

00:17:06,679 --> 00:17:14,000
locus it basically looks the same as a

00:17:08,299 --> 00:17:16,909
playbook as a orchestrating pass so what

00:17:14,000 --> 00:17:19,600
is lightsaber lightsaber was created by

00:17:16,909 --> 00:17:22,569
Ralph bean and several of the fedora

00:17:19,600 --> 00:17:24,910
structure contributors they decided that

00:17:22,569 --> 00:17:26,549
the you know they use ansible and Saito

00:17:24,910 --> 00:17:29,410
Fodor infrastructure ticking to

00:17:26,549 --> 00:17:31,450
configure all of their machines a little

00:17:29,410 --> 00:17:33,429
bit of puppet that they're slowly

00:17:31,450 --> 00:17:35,200
phasing out lots of ansible to do that

00:17:33,429 --> 00:17:36,910
and they wanted to be able to do the

00:17:35,200 --> 00:17:39,039
same thing for their for their home

00:17:36,910 --> 00:17:42,460
machines so they created this collection

00:17:39,039 --> 00:17:44,130
of play books that they're using to to

00:17:42,460 --> 00:17:46,660
you know work on their home machines

00:17:44,130 --> 00:17:49,230
deploy things there that they need like

00:17:46,660 --> 00:17:51,730
okay I want the same shell configuration

00:17:49,230 --> 00:17:53,980
the same team x configuration same

00:17:51,730 --> 00:17:55,929
configuration for all of my machines

00:17:53,980 --> 00:17:58,570
when I have a user account on that I

00:17:55,929 --> 00:18:00,460
want to be able to bring up a personal

00:17:58,570 --> 00:18:01,990
vanity web server I want to have an IRC

00:18:00,460 --> 00:18:04,150
bouncer and so they've just written

00:18:01,990 --> 00:18:05,320
these roles i said well i'm going to

00:18:04,150 --> 00:18:07,059
share them with everyone else and see

00:18:05,320 --> 00:18:10,360
you know maybe they'll have ideas maybe

00:18:07,059 --> 00:18:12,960
they'll find them useful and so on so as

00:18:10,360 --> 00:18:15,820
I push the Fedora infrastructure

00:18:12,960 --> 00:18:17,799
repository Oh ansible playbooks these

00:18:15,820 --> 00:18:20,710
are just really experimental they're

00:18:17,799 --> 00:18:23,409
meant for maintaining home systems so

00:18:20,710 --> 00:18:24,429
they're not not always as polished but

00:18:23,409 --> 00:18:26,260
you know people are playing around

00:18:24,429 --> 00:18:30,580
finding the best practices as they go

00:18:26,260 --> 00:18:34,000
along so what do we get out of using

00:18:30,580 --> 00:18:35,860
light saber ansible is very very

00:18:34,000 --> 00:18:37,990
flexible you know you create these

00:18:35,860 --> 00:18:40,059
playbook files but it doesn't specify oh

00:18:37,990 --> 00:18:44,350
the playbook must live exactly in this

00:18:40,059 --> 00:18:46,210
one location or I need to I can break up

00:18:44,350 --> 00:18:47,650
these tasks into multiple playbooks art

00:18:46,210 --> 00:18:50,500
and have them in one playbook and you

00:18:47,650 --> 00:18:52,330
know what's the best way to do it so you

00:18:50,500 --> 00:18:54,039
know the flexibility is great when you

00:18:52,330 --> 00:18:56,740
when you've got a task and understand if

00:18:54,039 --> 00:18:58,299
you're doing and you can do exactly what

00:18:56,740 --> 00:19:00,669
you want but when you're first starting

00:18:58,299 --> 00:19:04,179
out you're like well I've got all these

00:19:00,669 --> 00:19:06,070
choices what do I do so it's lightsabers

00:19:04,179 --> 00:19:07,750
kind of a skeleton you check it out you

00:19:06,070 --> 00:19:08,190
see what someone else is done and it's

00:19:07,750 --> 00:19:10,350
work

00:19:08,190 --> 00:19:12,659
for them and then you can say okay well

00:19:10,350 --> 00:19:14,879
I'm going to like copy this and do it

00:19:12,659 --> 00:19:16,590
sort of the same when you do that okay

00:19:14,879 --> 00:19:18,149
well that works I'm running to this

00:19:16,590 --> 00:19:20,460
problem so I'm going to change it and so

00:19:18,149 --> 00:19:21,990
that you modify it and you know gives

00:19:20,460 --> 00:19:23,940
you the skeleton this framework it can

00:19:21,990 --> 00:19:26,009
start off with but as you go along you

00:19:23,940 --> 00:19:29,309
can go ahead and you know make it may be

00:19:26,009 --> 00:19:31,559
different and then it's also weird way

00:19:29,309 --> 00:19:34,620
to share roles that work with the door

00:19:31,559 --> 00:19:37,440
and Apple so hanceville has a website

00:19:34,620 --> 00:19:39,240
galaxy ansible com or people upload

00:19:37,440 --> 00:19:41,639
their roles and then they can share them

00:19:39,240 --> 00:19:46,379
a provider community but the problem is

00:19:41,639 --> 00:19:47,610
that rolls playbooks can be and very

00:19:46,379 --> 00:19:49,529
specific you know because you're

00:19:47,610 --> 00:19:52,200
configuring an operating system they can

00:19:49,529 --> 00:19:55,019
be very specific to the operating system

00:19:52,200 --> 00:19:57,750
that you are configuring for so if you

00:19:55,019 --> 00:20:00,360
find a role it might be that the person

00:19:57,750 --> 00:20:02,700
who wrote it wrote it for go to and when

00:20:00,360 --> 00:20:03,990
you try and use it for fedora all some

00:20:02,700 --> 00:20:06,269
things don't work they're using the app

00:20:03,990 --> 00:20:07,559
module they have a package name and it

00:20:06,269 --> 00:20:09,809
doesn't match what Kenora calls the

00:20:07,559 --> 00:20:11,460
package and so on so forth so if you get

00:20:09,809 --> 00:20:13,889
the rolls from lightsaber than you know

00:20:11,460 --> 00:20:15,960
that they've been used on fedora Eppel

00:20:13,889 --> 00:20:18,240
and therefore they're going to they're

00:20:15,960 --> 00:20:21,269
going to work for you with a much higher

00:20:18,240 --> 00:20:24,360
likelihood okay let's do something with

00:20:21,269 --> 00:20:26,100
lightsaber first thing you have to do is

00:20:24,360 --> 00:20:30,950
you have to fork the repo it's up on

00:20:26,100 --> 00:20:36,029
github under under else ralphs account

00:20:30,950 --> 00:20:40,759
and then I like to create a place to do

00:20:36,029 --> 00:20:43,529
my work so inside a lifesaver there's

00:20:40,759 --> 00:20:45,240
there's a director called playbooks so

00:20:43,529 --> 00:20:48,090
inside the playbooks directories meant

00:20:45,240 --> 00:20:51,120
where you make your own configuration so

00:20:48,090 --> 00:20:53,669
i make i made a directory with my

00:20:51,120 --> 00:20:54,990
username and i put config and actions

00:20:53,669 --> 00:20:55,660
inside of there because like I was

00:20:54,990 --> 00:20:57,400
telling you very

00:20:55,660 --> 00:20:58,540
there's orchestration actions that

00:20:57,400 --> 00:21:00,490
you're going to you're going to do in

00:20:58,540 --> 00:21:02,320
there's configuration which you're like

00:21:00,490 --> 00:21:04,000
oh I can run these on con jobs if I want

00:21:02,320 --> 00:21:05,680
to and it's not going to knock out harm

00:21:04,000 --> 00:21:07,630
anything not just spew out email to me

00:21:05,680 --> 00:21:10,870
all the time so that's kind of how I

00:21:07,630 --> 00:21:12,880
ordered i sent then you want to create

00:21:10,870 --> 00:21:15,430
your own ansible config file at the top

00:21:12,880 --> 00:21:17,680
level the ansible of the lightsaber repo

00:21:15,430 --> 00:21:19,300
they have an example as well config it's

00:21:17,680 --> 00:21:23,560
basically this but with some comments I

00:21:19,300 --> 00:21:25,930
like to create my own because for

00:21:23,560 --> 00:21:27,280
instance be the inventory file we're

00:21:25,930 --> 00:21:29,890
going to store all the host though

00:21:27,280 --> 00:21:32,350
ansible knows about inventory file I'd

00:21:29,890 --> 00:21:36,100
like to put that inside of my my own

00:21:32,350 --> 00:21:37,480
private play with Rico as well they the

00:21:36,100 --> 00:21:39,880
ants will config that they shipped with

00:21:37,480 --> 00:21:41,620
that lightsaber has it actually

00:21:39,880 --> 00:21:44,350
references a top-level inventory file

00:21:41,620 --> 00:21:46,660
where everyone is storing their their

00:21:44,350 --> 00:21:48,100
host and you can do that what they're

00:21:46,660 --> 00:21:50,950
doing is they're creating a separate

00:21:48,100 --> 00:21:53,110
group aside from each person so Ralph

00:21:50,950 --> 00:21:55,090
has his that's all i cain't belonging to

00:21:53,110 --> 00:21:57,910
a three-bean group and Reverend cause

00:21:55,090 --> 00:21:59,470
maker has isn't it because group so you

00:21:57,910 --> 00:22:01,360
can do it that way but I just think it's

00:21:59,470 --> 00:22:03,730
cleaner to have a separate file so I

00:22:01,360 --> 00:22:06,030
redefine my first file to be separate to

00:22:03,730 --> 00:22:09,790
be inside this playbooks badger

00:22:06,030 --> 00:22:11,530
directory roles I'll talk about roles in

00:22:09,790 --> 00:22:13,810
a little bit there the way that you take

00:22:11,530 --> 00:22:15,370
your PlayBook and you just separate out

00:22:13,810 --> 00:22:17,110
the part that's going to be generic I'm

00:22:15,370 --> 00:22:19,840
going to apply to anyone wants to do a

00:22:17,110 --> 00:22:22,000
similar thing so that rolls path is

00:22:19,840 --> 00:22:24,240
going back to the top level like secret

00:22:22,000 --> 00:22:24,240
repository

00:22:24,679 --> 00:22:31,340
a little bit the mall password file

00:22:28,269 --> 00:22:36,590
vault is a way to encrypt secrets like

00:22:31,340 --> 00:22:38,360
passwords and share tokens certificates

00:22:36,590 --> 00:22:44,840
different things that you don't want to

00:22:38,360 --> 00:22:46,700
be shared with the whole world and in

00:22:44,840 --> 00:22:48,139
this repo and the lightsaber Rico

00:22:46,700 --> 00:22:51,860
they've got a little script called ball

00:22:48,139 --> 00:22:53,929
past was just saving your passwords into

00:22:51,860 --> 00:22:56,360
a single file they have a script that

00:22:53,929 --> 00:22:58,759
helps manage that I'm not going to get

00:22:56,360 --> 00:23:00,499
into it but you can talk to Ralph being

00:22:58,759 --> 00:23:03,200
or look back in or someone if you want

00:23:00,499 --> 00:23:05,330
to and they'll tell you how the script

00:23:03,200 --> 00:23:08,059
works and how it manages the passwords

00:23:05,330 --> 00:23:10,519
for them SSH connection this is kind of

00:23:08,059 --> 00:23:14,029
just optimization here you can from

00:23:10,519 --> 00:23:15,559
pipelining what pipelining does is the

00:23:14,029 --> 00:23:17,629
way hansville works is you install it

00:23:15,559 --> 00:23:19,970
onto your your machine your local laptop

00:23:17,629 --> 00:23:23,869
your you know central server node

00:23:19,970 --> 00:23:25,610
whatever and then ansible itself takes

00:23:23,869 --> 00:23:27,590
care of shipping the module that you're

00:23:25,610 --> 00:23:29,929
saying you want to invoke to the remote

00:23:27,590 --> 00:23:33,080
machine over ssh and then running it

00:23:29,929 --> 00:23:36,379
with python so the Fiat price hike on

00:23:33,080 --> 00:23:38,360
you is true it takes that module and it

00:23:36,379 --> 00:23:40,190
pushes it to stamp python standard in

00:23:38,360 --> 00:23:45,590
and then Python execute it so you only

00:23:40,190 --> 00:23:50,360
need 1 1 ssh connection in order to do

00:23:45,590 --> 00:23:54,080
that but yeah you have pipelines that's

00:23:50,360 --> 00:23:56,299
true then python has to realize that

00:23:54,080 --> 00:23:58,369
you're sending it the data as a as a

00:23:56,299 --> 00:24:00,480
pipe and sometimes you can configure

00:23:58,369 --> 00:24:03,179
sudo or

00:24:00,480 --> 00:24:05,190
sage it allocates a TTYL for it and then

00:24:03,179 --> 00:24:06,809
pipeline gets confused and when you do

00:24:05,190 --> 00:24:07,980
that then the module doesn't work it

00:24:06,809 --> 00:24:10,710
thinks that it's an interactive session

00:24:07,980 --> 00:24:12,960
and so certain syntax doesn't work the

00:24:10,710 --> 00:24:14,220
same in the interactive session so if

00:24:12,960 --> 00:24:16,020
you're in an environment like that you

00:24:14,220 --> 00:24:18,809
can't change your pseudo settings that

00:24:16,020 --> 00:24:21,630
accept pipeline equals false and that

00:24:18,809 --> 00:24:24,150
work around the problem SSH ours is kind

00:24:21,630 --> 00:24:26,640
of another optimization we're using it

00:24:24,150 --> 00:24:28,559
here for the ssh agent to the remote

00:24:26,640 --> 00:24:30,480
machine that works around some problems

00:24:28,559 --> 00:24:32,340
for instance if you're using the

00:24:30,480 --> 00:24:34,950
synchronized module that uses our sink

00:24:32,340 --> 00:24:37,290
under the hood our sink uses ssh to talk

00:24:34,950 --> 00:24:39,390
to another machine so if you're using

00:24:37,290 --> 00:24:40,559
synchronize and you don't have agent

00:24:39,390 --> 00:24:42,570
forwarding on you can end up in a

00:24:40,559 --> 00:24:44,910
situation where you try and synchronize

00:24:42,570 --> 00:24:46,380
between two remote machines you get to

00:24:44,910 --> 00:24:49,140
the first one successfully it runs

00:24:46,380 --> 00:24:50,400
arcing and it's a poop sub we've got a

00:24:49,140 --> 00:24:52,140
big error because I don't know how to

00:24:50,400 --> 00:24:56,429
authenticate to the other machine

00:24:52,140 --> 00:25:00,000
turning 40 s estate agent on ugly based

00:24:56,429 --> 00:25:01,620
economic problem okay and then in terms

00:25:00,000 --> 00:25:03,470
of organizing your playbooks so we've

00:25:01,620 --> 00:25:05,970
got this little directory off on our own

00:25:03,470 --> 00:25:07,350
we wanted we can just drop our flavors

00:25:05,970 --> 00:25:09,630
from before they were scanned along the

00:25:07,350 --> 00:25:14,030
way works right so like the configure

00:25:09,630 --> 00:25:16,679
apache one it had the configure apache

00:25:14,030 --> 00:25:18,600
playbook the animal file and then it had

00:25:16,679 --> 00:25:20,250
that one that one config file and

00:25:18,600 --> 00:25:22,260
we're copying so we can just drop that

00:25:20,250 --> 00:25:25,159
to the config directory and you know

00:25:22,260 --> 00:25:29,789
anytime we want to bring up a new web

00:25:25,159 --> 00:25:31,409
just work the update posted one where we

00:25:29,789 --> 00:25:33,590
did the young update that's kind of an

00:25:31,409 --> 00:25:36,119
action so by dropping the actions folder

00:25:33,590 --> 00:25:38,039
that's all there is really to it if

00:25:36,119 --> 00:25:40,320
that's all you want to do with it is you

00:25:38,039 --> 00:25:43,739
know have a way to organize your own

00:25:40,320 --> 00:25:46,049
stuff but really I mean you're going to

00:25:43,739 --> 00:25:49,909
want to get born in depth with what like

00:25:46,049 --> 00:25:51,539
0 fried so again that couple slides

00:25:49,909 --> 00:25:53,279
inventory about till now we've been

00:25:51,539 --> 00:25:55,049
doing the employer Leon the command line

00:25:53,279 --> 00:25:58,169
you know you can be deaf by switch and

00:25:55,049 --> 00:26:01,080
specifying all workers but instead you

00:25:58,169 --> 00:26:03,739
can create a file that shows all the

00:26:01,080 --> 00:26:06,659
hosts of the elbow you can use groups

00:26:03,739 --> 00:26:07,950
you can use aliases there's a lot of

00:26:06,659 --> 00:26:09,929
things that you can do in the new torre

00:26:07,950 --> 00:26:12,210
five we can go ahead and talk to me i'm

00:26:09,929 --> 00:26:14,759
telling about them but this is just a

00:26:12,210 --> 00:26:17,759
very simple inventory file it's kind of

00:26:14,759 --> 00:26:21,570
an ini format I've got local host at the

00:26:17,759 --> 00:26:23,999
top a vm via virtual machines group and

00:26:21,570 --> 00:26:25,589
I've lifted or 21 and 22 because those

00:26:23,999 --> 00:26:29,339
are two virtual machines on my laptop

00:26:25,589 --> 00:26:31,559
bare metal Rome that's my laptop fedora

00:26:29,339 --> 00:26:34,049
I said that instead of relying on facts

00:26:31,559 --> 00:26:35,789
i create my own group and all of my

00:26:34,049 --> 00:26:36,530
fedora machine to be there so that i

00:26:35,789 --> 00:26:39,050
could

00:26:36,530 --> 00:26:43,250
ok I'm on yon date I'll go to nora group

00:26:39,050 --> 00:26:45,380
and then this is a test our group and by

00:26:43,250 --> 00:26:47,180
saying children there I'm saying keep

00:26:45,380 --> 00:26:49,460
your children with this group and put it

00:26:47,180 --> 00:26:51,950
in there so all of my pm's our test

00:26:49,460 --> 00:26:54,620
toast so if i wanted to do something to

00:26:51,950 --> 00:26:58,820
all the ones i call test shows that i

00:26:54,620 --> 00:27:01,010
can use accurate thing alright so

00:26:58,820 --> 00:27:02,630
lightsaber the roles that are currently

00:27:01,010 --> 00:27:04,570
in lightsabre make use of certain

00:27:02,630 --> 00:27:07,340
variables that they want to have a fine

00:27:04,570 --> 00:27:09,230
so that you know three beans stuff is

00:27:07,340 --> 00:27:11,660
different from your stuff is different

00:27:09,230 --> 00:27:12,950
from myself it's like username just a

00:27:11,660 --> 00:27:14,900
username that you're using in your local

00:27:12,950 --> 00:27:17,000
system so that like if we're going to

00:27:14,900 --> 00:27:20,120
create a new user on a freshman small

00:27:17,000 --> 00:27:21,740
box it was what the evening to be if

00:27:20,120 --> 00:27:23,630
you're using the IRS announced a role

00:27:21,740 --> 00:27:25,160
than it use these to the artists and

00:27:23,630 --> 00:27:31,130
they've been twitter nicks and just put

00:27:25,160 --> 00:27:33,880
those in this is also for creating a new

00:27:31,130 --> 00:27:33,880
user account

00:27:34,300 --> 00:27:39,160
this is a dictionary all users cool

00:27:36,550 --> 00:27:42,340
beans okay there's a dictionary the key

00:27:39,160 --> 00:27:45,640
is all users and then we're going to

00:27:42,340 --> 00:27:47,320
create a list of users each user the

00:27:45,640 --> 00:27:49,270
list no Petrie so with a high cleaning

00:27:47,320 --> 00:27:52,600
the list and then each of those the big

00:27:49,270 --> 00:27:56,560
user the user name to create holmberg is

00:27:52,600 --> 00:27:58,780
the home directory for that user this

00:27:56,560 --> 00:28:01,990
one is used by the ssh likes a parole

00:27:58,780 --> 00:28:05,440
remembered bloggin so it's a it's got a

00:28:01,990 --> 00:28:07,360
little you know unconditional inside of

00:28:05,440 --> 00:28:09,670
the role that says okay through blogging

00:28:07,360 --> 00:28:12,460
is true than in our configuration

00:28:09,670 --> 00:28:13,870
investigator said to allow read logins

00:28:12,460 --> 00:28:16,810
and if it's false then we'll turn that

00:28:13,870 --> 00:28:19,480
off and then the common role is also

00:28:16,810 --> 00:28:22,240
used to create either's and you can

00:28:19,480 --> 00:28:26,440
specify a shell there so I you see SH

00:28:22,240 --> 00:28:28,300
not specify CSH there are better ways to

00:28:26,440 --> 00:28:30,760
define variables and I'll get into some

00:28:28,300 --> 00:28:32,920
of those but this is the way that like

00:28:30,760 --> 00:28:34,180
Ralph set up his stuff so I wanted to

00:28:32,920 --> 00:28:35,740
show it to you so that when you read it

00:28:34,180 --> 00:28:37,210
you don't think oh well time sure did

00:28:35,740 --> 00:28:40,780
this one thing but I don't see that here

00:28:37,210 --> 00:28:43,030
anywhere so you can look at this while

00:28:40,780 --> 00:28:45,040
showing on the way so roll I talked

00:28:43,030 --> 00:28:47,590
about roles mentioned them I can't

00:28:45,040 --> 00:28:49,420
really explain them rolls and capsulate

00:28:47,590 --> 00:28:51,850
instead of tasks just like play books

00:28:49,420 --> 00:28:54,490
but there a way to make it more generic

00:28:51,850 --> 00:28:56,620
so the playbook we specify you know the

00:28:54,490 --> 00:28:57,970
host and there's other things you can

00:28:56,620 --> 00:29:00,130
specify the PlayBook level like

00:28:57,970 --> 00:29:01,330
variables and so on and so forth so

00:29:00,130 --> 00:29:01,900
those are all kind of tied for your

00:29:01,330 --> 00:29:04,960
local

00:29:01,900 --> 00:29:08,860
vironment so the rolls instead are

00:29:04,960 --> 00:29:10,720
allowed to parameterize the variables so

00:29:08,860 --> 00:29:13,900
that when you run this action in this

00:29:10,720 --> 00:29:15,640
logical set of tasks you're able to to

00:29:13,900 --> 00:29:16,900
give it certain information but somebody

00:29:15,640 --> 00:29:19,060
else who runs it can give a different

00:29:16,900 --> 00:29:22,720
information or if you have something

00:29:19,060 --> 00:29:24,520
like oh I want to install apache on five

00:29:22,720 --> 00:29:26,200
different types of machines once a proxy

00:29:24,520 --> 00:29:29,200
server and once there static web pages

00:29:26,200 --> 00:29:31,510
and what does this one is that being

00:29:29,200 --> 00:29:33,100
able to parameterize the role means that

00:29:31,510 --> 00:29:35,380
you can feed a different information

00:29:33,100 --> 00:29:39,580
depending on you know whatever that we

00:29:35,380 --> 00:29:42,310
wanted to do ok so like super ships with

00:29:39,580 --> 00:29:44,590
several roles and so like crime i can

00:29:42,310 --> 00:29:47,200
set up an IRC gasser there is an IRC

00:29:44,590 --> 00:29:49,810
role that top-level lightsaber roles

00:29:47,200 --> 00:29:51,760
directory so this is what my playbook

00:29:49,810 --> 00:29:54,820
would need to look like in order to set

00:29:51,760 --> 00:29:57,700
up my fedora only one host we have an

00:29:54,820 --> 00:30:00,610
IRC bouncer it's just as instead of

00:29:57,700 --> 00:30:04,060
tasks area I just say roles things the

00:30:00,610 --> 00:30:06,550
role IRC and that's it these two

00:30:04,060 --> 00:30:08,800
remember in the variables that we

00:30:06,550 --> 00:30:10,240
defined earlier we defined a few user

00:30:08,800 --> 00:30:13,140
information

00:30:10,240 --> 00:30:16,660
whatever use of the arson constable so

00:30:13,140 --> 00:30:18,580
cancel will pick those up handles off to

00:30:16,660 --> 00:30:21,970
the role the roles got substituted into

00:30:18,580 --> 00:30:23,740
the files and then another small work as

00:30:21,970 --> 00:30:27,520
long as there's no bugs in that role but

00:30:23,740 --> 00:30:29,350
you know so it makes things really

00:30:27,520 --> 00:30:32,710
simple if you can find a predefined rule

00:30:29,350 --> 00:30:34,030
that already does what you want so let's

00:30:32,710 --> 00:30:37,000
create our own role and see what that

00:30:34,030 --> 00:30:39,010
looks like now you go to the top level

00:30:37,000 --> 00:30:41,320
like secret check out directory and then

00:30:39,010 --> 00:30:43,300
into roles and then you want to create

00:30:41,320 --> 00:30:46,059
your own directory for the role let's

00:30:43,300 --> 00:30:48,550
create one for fed message so there

00:30:46,059 --> 00:30:51,760
ansible like i said it has a website

00:30:48,550 --> 00:30:54,100
galaxy guidance welkom where users can

00:30:51,760 --> 00:30:56,880
upload roles so the command line tool

00:30:54,100 --> 00:30:59,800
that works with world is Hansel galaxy

00:30:56,880 --> 00:31:02,050
but it just really works with roles time

00:30:59,800 --> 00:31:03,850
with galaxy itself so ansible galaxy

00:31:02,050 --> 00:31:06,280
instead message will create this

00:31:03,850 --> 00:31:08,770
directory structure that is proper for a

00:31:06,280 --> 00:31:11,320
role see means the Fed message directory

00:31:08,770 --> 00:31:13,450
that created and you can take a look it

00:31:11,320 --> 00:31:16,980
has a bunch of a bunch of directories

00:31:13,450 --> 00:31:20,020
inside of it each directory could have

00:31:16,980 --> 00:31:24,910
gambled information or regular files i

00:31:20,020 --> 00:31:26,790
will explain a few of them talk and a

00:31:24,910 --> 00:31:29,500
few of them we don't really need it all

00:31:26,790 --> 00:31:31,540
so you can feel free to remove all the

00:31:29,500 --> 00:31:33,070
ones that you don't need so this is

00:31:31,540 --> 00:31:34,840
going to be a very simple role we won't

00:31:33,070 --> 00:31:37,630
need to deal with plan

00:31:34,840 --> 00:31:40,870
or meta will use templates instead of

00:31:37,630 --> 00:31:41,830
files and will default on their cars so

00:31:40,870 --> 00:31:43,720
I'm just going to get rid of those

00:31:41,830 --> 00:31:45,460
directories if you want to know more

00:31:43,720 --> 00:31:47,560
about making rolls you can go ahead and

00:31:45,460 --> 00:31:51,400
ask me afterwards and we can go over

00:31:47,560 --> 00:31:53,320
some of the other thing you can do so

00:31:51,400 --> 00:31:55,360
the first thing is you can find tasks so

00:31:53,320 --> 00:31:58,060
this is like the task section of

00:31:55,360 --> 00:32:00,310
playbook file we don't have a host and

00:31:58,060 --> 00:32:03,850
other stuff up at the top but we do have

00:32:00,310 --> 00:32:05,590
the passes themselves so in the tasks of

00:32:03,850 --> 00:32:07,630
directory there's a main bath beyond

00:32:05,590 --> 00:32:09,550
applaud go ahead and put your three

00:32:07,630 --> 00:32:11,770
tasks in here that are kind of how we're

00:32:09,550 --> 00:32:13,690
going to find fed message so we're a

00:32:11,770 --> 00:32:16,390
young model again this time there's two

00:32:13,690 --> 00:32:18,130
packages that we have to install and

00:32:16,390 --> 00:32:19,660
we're going to configure it by using the

00:32:18,130 --> 00:32:21,490
template model instead of the copy

00:32:19,660 --> 00:32:26,140
module audience of what the

00:32:21,490 --> 00:32:29,260
do a nipple tape this endpoint stop by

00:32:26,140 --> 00:32:31,030
that date to file and because this is a

00:32:29,260 --> 00:32:34,480
role look for it in the templates

00:32:31,030 --> 00:32:35,920
directory and we'll go ahead and run the

00:32:34,480 --> 00:32:37,960
template model to template in our

00:32:35,920 --> 00:32:42,100
variables and then it will drop it off

00:32:37,960 --> 00:32:43,330
on the remote machine in etc fitness and

00:32:42,100 --> 00:32:45,640
then we'll use service again and you've

00:32:43,330 --> 00:32:48,070
all seen service in order to restart the

00:32:45,640 --> 00:32:50,380
service on virtual machine so this is

00:32:48,070 --> 00:32:51,850
like the task from the role it's pretty

00:32:50,380 --> 00:32:53,679
simple and once you know how to make

00:32:51,850 --> 00:32:56,980
playbook this is just you know an

00:32:53,679 --> 00:32:59,440
extension of that here's the template in

00:32:56,980 --> 00:33:01,420
points at five day two we put it in that

00:32:59,440 --> 00:33:02,470
clip let's directory so that means a

00:33:01,420 --> 00:33:06,220
little square to find it when it's

00:33:02,470 --> 00:33:10,059
processing on the scroll and it's just a

00:33:06,220 --> 00:33:11,590
basic fact message config file looking

00:33:10,059 --> 00:33:13,750
fresh install the package you look at it

00:33:11,590 --> 00:33:15,010
looks almost exactly like this except

00:33:13,750 --> 00:33:17,679
for this line here you can see the

00:33:15,010 --> 00:33:20,740
double curly braces that message

00:33:17,679 --> 00:33:22,600
understood sir ver that's a variable

00:33:20,740 --> 00:33:24,250
that ansible is that we're going to send

00:33:22,600 --> 00:33:26,950
me a school and then it will go ahead

00:33:24,250 --> 00:33:29,380
and substitute the value of the variable

00:33:26,950 --> 00:33:31,870
into the template before it pushes it

00:33:29,380 --> 00:33:33,429
over that way you know you can at your

00:33:31,870 --> 00:33:34,780
site you can set fed mission server to

00:33:33,429 --> 00:33:38,410
one thing but at someone else's site

00:33:34,780 --> 00:33:40,900
they can said to something else in the

00:33:38,410 --> 00:33:42,910
default subdirectory we here are going

00:33:40,900 --> 00:33:46,330
to set that variable to some default

00:33:42,910 --> 00:33:47,769
value and there's two ways they can set

00:33:46,330 --> 00:33:49,899
there's the default directory in the

00:33:47,769 --> 00:33:52,659
bars directory the reason I'm using

00:33:49,899 --> 00:33:54,519
default is that's easier to override so

00:33:52,659 --> 00:33:56,350
there's like a precedence order where

00:33:54,519 --> 00:34:01,510
you can get bars from the inventory

00:33:56,350 --> 00:34:03,100
files can hold mark variables the

00:34:01,510 --> 00:34:04,299
playbooks themselves to hold variables

00:34:03,100 --> 00:34:06,940
you can get them from all these places

00:34:04,299 --> 00:34:09,369
roll me pulse is kind of the lowest on

00:34:06,940 --> 00:34:10,869
the totem pole so that means that ok

00:34:09,369 --> 00:34:14,139
we're going to bed mentioned server to

00:34:10,869 --> 00:34:15,399
Lobos here but anyone wants to override

00:34:14,139 --> 00:34:17,349
this is going to have an easy time of

00:34:15,399 --> 00:34:18,669
doing it I've put in bars that slightly

00:34:17,349 --> 00:34:21,129
higher precedence so there's certain

00:34:18,669 --> 00:34:24,760
places where it will not override from

00:34:21,129 --> 00:34:28,089
and so use that for things that you your

00:34:24,760 --> 00:34:30,159
you're more sure you want this is what

00:34:28,089 --> 00:34:32,409
the role the retreat looks like now that

00:34:30,159 --> 00:34:34,960
we've got all the files in place there's

00:34:32,409 --> 00:34:38,020
the default subdirectory with a mean dog

00:34:34,960 --> 00:34:40,270
animal that's work but the bars that you

00:34:38,020 --> 00:34:41,800
just saw there's a reason filing the

00:34:40,270 --> 00:34:42,909
levying with information about your role

00:34:41,800 --> 00:34:45,550
if you want so that other people know

00:34:42,909 --> 00:34:48,159
what's going on tasks is where we put

00:34:45,550 --> 00:34:50,500
the main animal that have the tasks just

00:34:48,159 --> 00:34:53,190
like in the playbook templates head in

00:34:50,500 --> 00:34:57,119
point stuff I update ooh

00:34:53,190 --> 00:35:00,200
look in templates for that file whenever

00:34:57,119 --> 00:35:03,990
it's represented from templates module

00:35:00,200 --> 00:35:06,720
okay and then in our back in our private

00:35:03,990 --> 00:35:09,990
little area here we're going to set the

00:35:06,720 --> 00:35:11,400
config for it my server and this is what

00:35:09,990 --> 00:35:14,099
it looks like you know it's pretty much

00:35:11,400 --> 00:35:16,740
like the IRC one except that instead of

00:35:14,099 --> 00:35:18,720
relying on the variables and explore a

00:35:16,740 --> 00:35:21,869
new see that we're passing in the

00:35:18,720 --> 00:35:25,109
parameter here as another entry to this

00:35:21,869 --> 00:35:27,540
dictionary so roles the list of roles

00:35:25,109 --> 00:35:31,280
where we only have one role in this list

00:35:27,540 --> 00:35:33,869
the role name is fed message and then

00:35:31,280 --> 00:35:37,020
we're sending that message server equals

00:35:33,869 --> 00:35:40,170
it over 20 that's infected branch being

00:35:37,020 --> 00:35:41,700
poland not an equal sign I know okay so

00:35:40,170 --> 00:35:44,430
anyways that will rewrite the low post

00:35:41,700 --> 00:35:47,670
that we get earlier and the door 22

00:35:44,430 --> 00:35:51,180
being substituted into the templates so

00:35:47,670 --> 00:35:53,790
that's again if it has questions or

00:35:51,180 --> 00:35:56,339
comments or anything else here are some

00:35:53,790 --> 00:36:00,030
links on schools written by michael de

00:35:56,339 --> 00:36:02,520
haan find out on github and hands full

00:36:00,030 --> 00:36:06,119
it's in the floor repo is documentation

00:36:02,520 --> 00:36:08,550
at docs van stomm lightsaber sort of

00:36:06,119 --> 00:36:11,280
eyebrow and instead pontes get home page

00:36:08,550 --> 00:36:17,030
there and you like this presentation

00:36:11,280 --> 00:36:17,030
software that's okay questions

00:36:20,510 --> 00:36:26,340
but ya got so I noticed when you you did

00:36:24,210 --> 00:36:29,070
the first few examples you used a pseudo

00:36:26,340 --> 00:36:31,290
and so it prompted you for a password

00:36:29,070 --> 00:36:34,710
where was it was it prompting you for

00:36:31,290 --> 00:36:37,380
them what was it acquiring root on the

00:36:34,710 --> 00:36:39,480
local machine and then ssh King as root

00:36:37,380 --> 00:36:41,190
to the remote machine or was it s s

00:36:39,480 --> 00:36:43,590
aging as you would acquire Marie Claire

00:36:41,190 --> 00:36:47,369
so it s SH is as you okay and you can

00:36:43,590 --> 00:36:49,230
set that as as a as a variable as well

00:36:47,369 --> 00:36:52,950
noper host if you want to you can say

00:36:49,230 --> 00:36:54,869
okay I've got a site one user and I'm

00:36:52,950 --> 00:36:56,970
what I want all of my customers psyche

00:36:54,869 --> 00:36:59,010
ones aren't going to use that user so

00:36:56,970 --> 00:37:02,550
you can set ansible ssh user it uses

00:36:59,010 --> 00:37:04,080
that user to ssh over and then once it's

00:37:02,550 --> 00:37:07,590
there then it uses sudo to get

00:37:04,080 --> 00:37:09,750
permissions okay can I just use ssh keys

00:37:07,590 --> 00:37:13,170
without needing sudo at all I mean yes

00:37:09,750 --> 00:37:15,960
so select me first because mounting my

00:37:13,170 --> 00:37:18,960
home directory over NFS to everything

00:37:15,960 --> 00:37:21,950
would be bad dragon now got forward

00:37:18,960 --> 00:37:21,950
Kerberos ticket soon

00:37:26,819 --> 00:37:33,160
further back wait for this one he knows

00:37:30,790 --> 00:37:34,780
I've got see no true here hmm so if I

00:37:33,160 --> 00:37:36,490
don't specify def guests to go on the

00:37:34,780 --> 00:37:39,099
command line you just do dash cap okay

00:37:36,490 --> 00:37:42,550
it will prompt my single password but

00:37:39,099 --> 00:37:43,990
the bees it will not use sudo just ssh

00:37:42,550 --> 00:37:45,910
in and run these commands because they

00:37:43,990 --> 00:37:47,920
don't need to have her my permissions

00:37:45,910 --> 00:37:50,640
but then when it gets out here then it

00:37:47,920 --> 00:37:53,020
will SSH it you said oh because you do

00:37:50,640 --> 00:37:55,390
that because I generally have like a

00:37:53,020 --> 00:37:57,510
message k associated with a really big

00:37:55,390 --> 00:38:00,700
password then watch me Gideon has rude

00:37:57,510 --> 00:38:02,170
do you have all yeah yeah so if you have

00:38:00,700 --> 00:38:05,770
room just take out the pseudo from

00:38:02,170 --> 00:38:07,990
everywhere how about and use use ansible

00:38:05,770 --> 00:38:14,250
underscored SSH ohms for user equals 0

00:38:07,990 --> 00:38:14,250
another all SS agent any other questions

00:38:15,990 --> 00:38:20,980
okay great well we're done if you want

00:38:18,940 --> 00:38:22,540
to you know talk to me about examples or

00:38:20,980 --> 00:38:25,950
anything problems that you're having

00:38:22,540 --> 00:38:25,950

YouTube URL: https://www.youtube.com/watch?v=h2kQ4kOgNN0


