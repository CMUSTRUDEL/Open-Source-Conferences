Title: Flock 2015 - Fedora kernel - Josh Boyer
Publication date: 2015-08-26
Playlist: Flock 2015
Description: 
	The traditional Fedora kernel talk. We'll cover how we're handling the kernel, the current state of things in the distro, what's new in the upcoming release, and how you can help.
Captions: 
	00:00:00,350 --> 00:00:05,640
okay so my name is Josh Moyer I am

00:00:03,859 --> 00:00:08,069
theoretically the team lead of the

00:00:05,640 --> 00:00:09,780
fedora Colonel team that really just

00:00:08,069 --> 00:00:12,030
kind of means I'm the contact point and

00:00:09,780 --> 00:00:16,619
I shield people from various nasty

00:00:12,030 --> 00:00:18,660
comments as much as possible this will

00:00:16,619 --> 00:00:22,410
be traditional state of the fedora

00:00:18,660 --> 00:00:25,350
colonel or fedora colonel talk it is not

00:00:22,410 --> 00:00:26,730
about like super cool technologies in

00:00:25,350 --> 00:00:29,039
the kernel I'm not going to tell you how

00:00:26,730 --> 00:00:33,469
r CU works if you would like to know

00:00:29,039 --> 00:00:36,840
read LW in excellent articles on LW in

00:00:33,469 --> 00:00:39,300
today we are going to do a little bit of

00:00:36,840 --> 00:00:42,360
a release overview on how we operate the

00:00:39,300 --> 00:00:44,360
colonel in fedora in terms of rolling

00:00:42,360 --> 00:00:46,079
down two versions and things like that

00:00:44,360 --> 00:00:48,750
we're going to talk a little bit about

00:00:46,079 --> 00:00:51,149
the team it's changed over the last year

00:00:48,750 --> 00:00:52,530
or so we're going to have some focus

00:00:51,149 --> 00:00:54,809
areas that we're currently either

00:00:52,530 --> 00:00:57,930
working on or looking to get into in

00:00:54,809 --> 00:01:01,109
terms of what our team is doing in the

00:00:57,930 --> 00:01:02,280
kernel to make fedora better and then

00:01:01,109 --> 00:01:03,780
we're going to talk about some future

00:01:02,280 --> 00:01:07,920
current developments that's that

00:01:03,780 --> 00:01:10,260
includes like 22 or 23 and some of the

00:01:07,920 --> 00:01:10,610
new shiny things that showed up in the

00:01:10,260 --> 00:01:15,160
colonel

00:01:10,610 --> 00:01:18,830
over the past year so released overview

00:01:15,160 --> 00:01:21,200
we have one colonel pretty much that's

00:01:18,830 --> 00:01:23,780
really too but we have one kernel for

00:01:21,200 --> 00:01:29,870
every release right so fedora 22 is on

00:01:23,780 --> 00:01:31,130
for 15 is in testing yes thank you but

00:01:29,870 --> 00:01:33,560
right now for that one that for four da

00:01:31,130 --> 00:01:35,450
125 is in testing so for that one is the

00:01:33,560 --> 00:01:38,750
major version but our 21 is also on the

00:01:35,450 --> 00:01:42,350
same fedora 22 I already said that

00:01:38,750 --> 00:01:43,970
Fedora 23 is on we're in that weird

00:01:42,350 --> 00:01:45,770
branch statement fedora where we just

00:01:43,970 --> 00:01:48,979
had alpha but it's on like the four dot

00:01:45,770 --> 00:01:52,190
to RC candidate kernels so what we do is

00:01:48,979 --> 00:01:54,740
we kind of rebase as the new upstream

00:01:52,190 --> 00:01:56,630
release comes out and we roll it back in

00:01:54,740 --> 00:01:59,210
a graduated fashion right so when for

00:01:56,630 --> 00:02:01,880
doc two comes out Fedora 23 we'll get it

00:01:59,210 --> 00:02:05,570
rawhide is continuously rebates every

00:02:01,880 --> 00:02:08,600
day fedora 22 will get for tattoo

00:02:05,570 --> 00:02:10,280
probably around the fortitude to ish

00:02:08,600 --> 00:02:12,950
timeframe so a couple weeks after

00:02:10,280 --> 00:02:15,320
release and then fit our 21 will be a

00:02:12,950 --> 00:02:17,450
week or two after that and we do it that

00:02:15,320 --> 00:02:21,980
way so that the oldest most stable

00:02:17,450 --> 00:02:25,100
release kind of isn't you know it's not

00:02:21,980 --> 00:02:26,810
broken right away and if there are major

00:02:25,100 --> 00:02:30,549
issues with the rebase we tend to fix

00:02:26,810 --> 00:02:30,549
them before we roll out the next

00:02:30,780 --> 00:02:34,920
we do it for a few different reasons

00:02:32,300 --> 00:02:37,020
primarily we do it so that we stay close

00:02:34,920 --> 00:02:38,490
to upstream because the developers are

00:02:37,020 --> 00:02:40,110
either still working on it or actually

00:02:38,490 --> 00:02:42,780
you know they haven't heard that whole

00:02:40,110 --> 00:02:45,660
release out of their mind and we do it

00:02:42,780 --> 00:02:50,580
to consolidate bugs basically pretty

00:02:45,660 --> 00:02:52,020
simple this next slide here is it's an

00:02:50,580 --> 00:02:54,959
example of why I'm not a graphic

00:02:52,020 --> 00:02:56,819
designer come but it's a really terrible

00:02:54,959 --> 00:02:58,980
not updated flow chart from the first

00:02:56,819 --> 00:03:00,209
time I did this presentation about how

00:02:58,980 --> 00:03:01,260
we did the room aces I'm not going to

00:03:00,209 --> 00:03:03,450
make you stare at I'm not going to read

00:03:01,260 --> 00:03:05,580
it to you I'll post the slides on the

00:03:03,450 --> 00:03:08,850
sched description afterwards and you can

00:03:05,580 --> 00:03:13,019
marvel at my terrible skills so right

00:03:08,850 --> 00:03:14,910
now like I said we're on for dot 24

00:03:13,019 --> 00:03:17,640
rawhide and Fedora 23 I didn't edit on

00:03:14,910 --> 00:03:19,650
this slide that most of men i started my

00:03:17,640 --> 00:03:24,000
slides before also came out wow I'm

00:03:19,650 --> 00:03:29,190
impressed with myself fedora 22 started

00:03:24,000 --> 00:03:33,510
with 420 24 and the way we pick the

00:03:29,190 --> 00:03:35,130
colonel for the release is kind of its

00:03:33,510 --> 00:03:37,049
kind of throwing a dart and sticking it

00:03:35,130 --> 00:03:38,910
at the wall because it depends on the

00:03:37,049 --> 00:03:41,610
upstream colonel cycle it depends on the

00:03:38,910 --> 00:03:43,829
fedora cycle and depends on how willing

00:03:41,610 --> 00:03:46,680
QA is to let us squeeze stuff in at the

00:03:43,829 --> 00:03:48,480
last minute or conversely how willing we

00:03:46,680 --> 00:03:51,690
are to subject ourselves to the

00:03:48,480 --> 00:03:53,310
punishment that comes afterwards so as

00:03:51,690 --> 00:03:56,130
you can see fedora 20 which just went

00:03:53,310 --> 00:03:58,640
end of life went from 3-11 all the way

00:03:56,130 --> 00:04:01,340
through the 40 kernel and it worked out

00:03:58,640 --> 00:04:03,670
well we had regressions as we go and we

00:04:01,340 --> 00:04:07,550
get those what we try to fix them up ism

00:04:03,670 --> 00:04:10,130
so any questions on how we handle the

00:04:07,550 --> 00:04:12,980
colonel in fedora that's pretty fast but

00:04:10,130 --> 00:04:15,640
it's also the same way I've talked about

00:04:12,980 --> 00:04:15,640
for the past three years

00:04:15,870 --> 00:04:22,150
team stuff so like I said our team has

00:04:18,940 --> 00:04:25,330
changed right now Laura Abbott is our

00:04:22,150 --> 00:04:26,710
newest hire hi Laura Justin forbes has

00:04:25,330 --> 00:04:29,050
been on the team almost as long as I

00:04:26,710 --> 00:04:31,199
have right sorry did you join the same

00:04:29,050 --> 00:04:31,199
time

00:04:32,600 --> 00:04:43,190
yeah you're doing bird stuff yeah so

00:04:36,080 --> 00:04:44,510
justin is four years I think so he's

00:04:43,190 --> 00:04:47,840
been on a team since the first block

00:04:44,510 --> 00:04:49,250
anyway so at least three and then myself

00:04:47,840 --> 00:04:51,350
and then we have various architecture

00:04:49,250 --> 00:04:54,860
computers Peter Robinson who is actually

00:04:51,350 --> 00:04:56,450
giving a talk on power and arm right now

00:04:54,860 --> 00:04:58,310
in a different room so if you're

00:04:56,450 --> 00:04:59,330
interested in arm that's probably where

00:04:58,310 --> 00:05:02,840
you want to be because I'm not going to

00:04:59,330 --> 00:05:05,300
talk about it is one of the only other

00:05:02,840 --> 00:05:07,400
people who actually has a consistent

00:05:05,300 --> 00:05:09,740
amount of commits in our fedora Colonel

00:05:07,400 --> 00:05:11,660
he handles all the cool 32-bit board

00:05:09,740 --> 00:05:12,770
stuff for us and we love Him because

00:05:11,660 --> 00:05:17,300
that means we don't have to worry about

00:05:12,770 --> 00:05:18,770
it we have Dan horik who does he doesn't

00:05:17,300 --> 00:05:21,350
really do Colonel stuff but he handles

00:05:18,770 --> 00:05:24,290
s390 and he's more than happy to point

00:05:21,350 --> 00:05:28,940
out upstream patches or broken issues on

00:05:24,290 --> 00:05:30,680
s3 and then we have a very large

00:05:28,940 --> 00:05:32,780
contingent of Red Hat engineers behind

00:05:30,680 --> 00:05:35,840
us and when I say that I don't mean that

00:05:32,780 --> 00:05:38,300
it's like route right rel has a literal

00:05:35,840 --> 00:05:41,300
army of Colonel engineers for various

00:05:38,300 --> 00:05:43,670
things but we do get to leverage them

00:05:41,300 --> 00:05:45,140
when we ask them nicely to look at

00:05:43,670 --> 00:05:47,360
certain bugs and we try not to do it too

00:05:45,140 --> 00:05:49,070
often because they're pretty much buried

00:05:47,360 --> 00:05:50,870
all the time in upstream and rail work

00:05:49,070 --> 00:05:54,710
but when we do approach them they're

00:05:50,870 --> 00:05:58,720
very helpful to have so what do we do

00:05:54,710 --> 00:05:58,720
all day on the team

00:05:59,200 --> 00:06:06,200
in the past the next slide the answer to

00:06:04,220 --> 00:06:10,040
this question has been about four or

00:06:06,200 --> 00:06:14,620
five slides of bug numbers charts graphs

00:06:10,040 --> 00:06:16,970
showing all this other stuff so today

00:06:14,620 --> 00:06:19,460
there are no bugs we don't do bugs

00:06:16,970 --> 00:06:21,260
they're all fixed so I'm not going to

00:06:19,460 --> 00:06:23,840
talk about bugs sorry to disappoint if

00:06:21,260 --> 00:06:26,180
you wanted to see updated graphs I can

00:06:23,840 --> 00:06:27,730
point you the bugzilla and the queries I

00:06:26,180 --> 00:06:32,900
use to generate them and you can enjoy

00:06:27,730 --> 00:06:36,890
them all you were there there are seven

00:06:32,900 --> 00:06:40,280
hundred and two open on any given day

00:06:36,890 --> 00:06:43,730
there are around 700 bugs open across

00:06:40,280 --> 00:06:46,250
all the releases so no more bugs we're

00:06:43,730 --> 00:06:49,490
not talking about bugs let's talk about

00:06:46,250 --> 00:06:53,540
retrace right let's retrace everybody

00:06:49,490 --> 00:06:58,430
know what that is good anyway not know

00:06:53,540 --> 00:07:00,080
where V traces okay retrace is it's me

00:06:58,430 --> 00:07:01,400
being clever and saying we're not going

00:07:00,080 --> 00:07:04,610
to talk about bugs but really we're

00:07:01,400 --> 00:07:07,340
going to talk about bugs no it's um it's

00:07:04,610 --> 00:07:10,370
this infrastructure so in fedora there

00:07:07,340 --> 00:07:12,560
is a automated bug reporting tool abrt

00:07:10,370 --> 00:07:15,260
so if you get a kernel crash and it's

00:07:12,560 --> 00:07:16,850
not one that locks your machine up say

00:07:15,260 --> 00:07:18,860
your wireless driver craps out and you

00:07:16,850 --> 00:07:22,550
get a back trace it'll collect that and

00:07:18,860 --> 00:07:24,200
send it to the aprt servers and the

00:07:22,550 --> 00:07:26,510
retrace servers so it collects all these

00:07:24,200 --> 00:07:29,930
reports in an automated fashion and then

00:07:26,510 --> 00:07:32,300
it points out how many of each instance

00:07:29,930 --> 00:07:35,320
there are and if you go look at the

00:07:32,300 --> 00:07:38,350
retrace server it's kind of frightening

00:07:35,320 --> 00:07:39,820
because you'll see like one specific

00:07:38,350 --> 00:07:42,220
back-trace from a wireless driver will

00:07:39,820 --> 00:07:44,310
have like thirty thousand hits which

00:07:42,220 --> 00:07:47,800
means thirty thousand machines or

00:07:44,310 --> 00:07:49,690
instances has happened just for that one

00:07:47,800 --> 00:07:52,330
and then if you look at all of them for

00:07:49,690 --> 00:07:55,000
the colonel combined it's it's just as

00:07:52,330 --> 00:07:56,890
frightening as bugzilla is but we switch

00:07:55,000 --> 00:07:58,240
to it this year or in the process of

00:07:56,890 --> 00:08:01,630
doing that because big Zilla is a mess

00:07:58,240 --> 00:08:03,790
bugzilla there is humans involved okay

00:08:01,630 --> 00:08:05,410
so you get you get the automated report

00:08:03,790 --> 00:08:07,150
you get the back-trace and you start

00:08:05,410 --> 00:08:08,560
poking at it and you realize there isn't

00:08:07,150 --> 00:08:10,570
enough information to even start looking

00:08:08,560 --> 00:08:12,430
at it and then you start asking people

00:08:10,570 --> 00:08:14,800
for more information sometimes they're

00:08:12,430 --> 00:08:17,380
really great Justin just had a talk last

00:08:14,800 --> 00:08:19,900
session about how to get you bugs fixed

00:08:17,380 --> 00:08:22,270
but sometimes they're not sometimes

00:08:19,900 --> 00:08:24,280
people are like you know my wireless

00:08:22,270 --> 00:08:25,660
doesn't work just fix this now and you

00:08:24,280 --> 00:08:27,370
ask them for information they don't

00:08:25,660 --> 00:08:30,400
ladle they don't want to be

00:08:27,370 --> 00:08:34,539
participating so it's really really hard

00:08:30,400 --> 00:08:37,060
to get a broad overview of which bugs

00:08:34,539 --> 00:08:38,890
are hitting the most number of people by

00:08:37,060 --> 00:08:42,040
looking at bugzilla because it's

00:08:38,890 --> 00:08:43,810
specific to an individual report so

00:08:42,040 --> 00:08:44,490
retrace offers a higher level data when

00:08:43,810 --> 00:08:47,670
we look at

00:08:44,490 --> 00:08:49,920
okay this I 915 bug you know there's

00:08:47,670 --> 00:08:51,450
30,000 machines hitting or this this

00:08:49,920 --> 00:08:54,240
wireless driver there's 40,000 routine

00:08:51,450 --> 00:08:55,980
City whatever the case may be and laura

00:08:54,240 --> 00:09:02,130
has done some works and she joined us to

00:08:55,980 --> 00:09:04,110
help us cut down on bogus data and kind

00:09:02,130 --> 00:09:08,600
of help prioritize where we're going to

00:09:04,110 --> 00:09:13,830
look so we use that primaries we see

00:09:08,600 --> 00:09:17,330
i915 right now so in the last three

00:09:13,830 --> 00:09:21,120
kernels so 40 41 and what will be 42

00:09:17,330 --> 00:09:23,339
they're doing this work in i915 area and

00:09:21,120 --> 00:09:25,230
it's really for all kernel mode setting

00:09:23,339 --> 00:09:28,170
drivers where they're doing atomic load

00:09:25,230 --> 00:09:30,270
setting so you know you change panels

00:09:28,170 --> 00:09:31,830
you change resolutions whatever it's all

00:09:30,270 --> 00:09:34,649
going to be atomic now in the past it's

00:09:31,830 --> 00:09:38,250
kind of been this Kluge between X and

00:09:34,649 --> 00:09:41,490
the colonel and how it does it it's

00:09:38,250 --> 00:09:42,810
complicated but it hasn't been atomic so

00:09:41,490 --> 00:09:44,250
sometimes you get things that are out of

00:09:42,810 --> 00:09:46,589
sync with each other and then you get

00:09:44,250 --> 00:09:49,110
bugs in its nest so as kind of a

00:09:46,589 --> 00:09:51,149
byproduct of that or a side effect the

00:09:49,110 --> 00:09:53,940
i915 drivers kind of destabilized a

00:09:51,149 --> 00:09:56,070
little bit as they work this in because

00:09:53,940 --> 00:09:57,839
it really is a complex problem so we're

00:09:56,070 --> 00:10:01,110
seeing a lot of issues there we're doing

00:09:57,839 --> 00:10:02,160
our best suspend resume is a traditional

00:10:01,110 --> 00:10:04,529
one that we always have problems with

00:10:02,160 --> 00:10:08,740
right now they seem to be tied to the

00:10:04,529 --> 00:10:10,839
915 problems but they are also

00:10:08,740 --> 00:10:13,810
you can have to spend resume problems

00:10:10,839 --> 00:10:16,240
for any number of reasons a single

00:10:13,810 --> 00:10:18,760
driver not you know failing to go into

00:10:16,240 --> 00:10:21,279
suspect is basically all it takes or you

00:10:18,760 --> 00:10:22,839
have bogus firm work we really don't

00:10:21,279 --> 00:10:24,160
like those because you can't fix the

00:10:22,839 --> 00:10:27,640
firmware on their machines and people

00:10:24,160 --> 00:10:29,830
don't understand that Wireless used to

00:10:27,640 --> 00:10:32,940
be like at the top of the list as long

00:10:29,830 --> 00:10:37,450
as you're using the open-source drivers

00:10:32,940 --> 00:10:40,089
it's not that bad that being said the

00:10:37,450 --> 00:10:42,910
intel wireless driver does tend to freak

00:10:40,089 --> 00:10:45,100
out a little bit these days but it ebbs

00:10:42,910 --> 00:10:47,740
and flows and then platform drivers is a

00:10:45,100 --> 00:10:49,480
typical one so you know your function

00:10:47,740 --> 00:10:52,570
keys don't work like in fact this laptop

00:10:49,480 --> 00:10:54,670
here I can hit the brightness keys with

00:10:52,570 --> 00:10:56,080
the function keys and it doesn't work at

00:10:54,670 --> 00:10:58,060
all i think oh it actually has the same

00:10:56,080 --> 00:11:00,550
laptop with the same problem i have a

00:10:58,060 --> 00:11:03,430
patch to fix it and i sent it and the

00:11:00,550 --> 00:11:04,959
iron 15 driver people were like okay

00:11:03,430 --> 00:11:07,360
that's good but you need to do it like

00:11:04,959 --> 00:11:10,420
this way and doing it that way requires

00:11:07,360 --> 00:11:13,529
rewriting like half of the acpi I knew

00:11:10,420 --> 00:11:15,540
15 infrastructures so I'm not sorry

00:11:13,529 --> 00:11:19,800
fortunately the little gnome slider

00:11:15,540 --> 00:11:21,850
works just fine and then bluetooth

00:11:19,800 --> 00:11:25,589
Bluetooth is usually an area where

00:11:21,850 --> 00:11:28,619
people suspend they resume and Bluetooth

00:11:25,589 --> 00:11:32,139
that's not this nice back-trace why

00:11:28,619 --> 00:11:34,389
depends on the chips that depends so

00:11:32,139 --> 00:11:36,490
these are the problems we see and we're

00:11:34,389 --> 00:11:38,290
using retrace to kind of help us

00:11:36,490 --> 00:11:41,319
prioritize so what do we mean by

00:11:38,290 --> 00:11:43,990
priorities in terms of priorities this

00:11:41,319 --> 00:11:46,480
is what we have we focus on the most

00:11:43,990 --> 00:11:48,369
severe ones obviously first and that

00:11:46,480 --> 00:11:50,319
kind of goes counter to the number of

00:11:48,369 --> 00:11:52,269
people being impacted but we do that to

00:11:50,319 --> 00:11:54,850
prevent you know CDs from turning into

00:11:52,269 --> 00:11:57,279
major that's why we traced account

00:11:54,850 --> 00:12:00,309
reports like I said corruption issues

00:11:57,279 --> 00:12:02,499
fortunately in the colonel unless you're

00:12:00,309 --> 00:12:05,800
using butter FS we haven't really had

00:12:02,499 --> 00:12:07,480
any corruption issues that are major as

00:12:05,800 --> 00:12:10,899
of late I think there might have been

00:12:07,480 --> 00:12:16,839
one ext4 bug in the past year that I can

00:12:10,899 --> 00:12:20,619
think of yeah and there might have been

00:12:16,839 --> 00:12:23,649
one XFS issue where you mounted the file

00:12:20,619 --> 00:12:25,240
system in a certain way that the

00:12:23,649 --> 00:12:29,290
metadata didn't match and something

00:12:25,240 --> 00:12:31,749
minor happen but you know corruption

00:12:29,290 --> 00:12:33,369
does happen so we focus on those when

00:12:31,749 --> 00:12:36,670
they come in and then general Colonel

00:12:33,369 --> 00:12:38,499
crashes again brightness touchpad they

00:12:36,670 --> 00:12:41,010
all kind of fallout after that sound is

00:12:38,499 --> 00:12:43,470
down towards the bottom of the list

00:12:41,010 --> 00:12:45,210
it should be higher but we just don't

00:12:43,470 --> 00:12:47,340
have the time to get to it right it's

00:12:45,210 --> 00:12:48,420
really frustrating when people buy a

00:12:47,340 --> 00:12:50,280
machine and they plug in their

00:12:48,420 --> 00:12:52,170
headphones and they can't hear anything

00:12:50,280 --> 00:12:54,660
I understand that I would be frustrated

00:12:52,170 --> 00:12:58,860
as well we just don't have any expertise

00:12:54,660 --> 00:13:00,690
with the also subsystem butter if s is

00:12:58,860 --> 00:13:03,120
on our list contrary to what everybody

00:13:00,690 --> 00:13:05,780
thinks it's not that we hate it it's

00:13:03,120 --> 00:13:09,780
just that we don't promote it by default

00:13:05,780 --> 00:13:11,460
but it is tied to basically reporting to

00:13:09,780 --> 00:13:12,690
upstream saying we're seeing this are

00:13:11,460 --> 00:13:14,880
you guys seeing this and they're really

00:13:12,690 --> 00:13:16,800
responsive when we do that but they see

00:13:14,880 --> 00:13:18,900
a lot of issues so they're also a book

00:13:16,800 --> 00:13:21,120
one and then down at the very very

00:13:18,900 --> 00:13:27,480
bottom after global warming Mars we have

00:13:21,120 --> 00:13:30,330
I 686 we don't we don't focus on Intel I

00:13:27,480 --> 00:13:32,540
66 bugs at all anymore we sent out an

00:13:30,330 --> 00:13:37,980
email to the development list in

00:13:32,540 --> 00:13:40,950
February and said hey 32-bit Intel I 686

00:13:37,980 --> 00:13:42,590
if this is going to survive and the

00:13:40,950 --> 00:13:46,830
community needs to step up and do it and

00:13:42,590 --> 00:13:48,270
everybody ignored us basically so it's

00:13:46,830 --> 00:13:50,520
just not a priority for our team it's

00:13:48,270 --> 00:13:52,530
not that we don't it's not that we don't

00:13:50,520 --> 00:13:53,610
have nostalgia for it and it's not that

00:13:52,530 --> 00:13:56,520
we don't even have machines I have a

00:13:53,610 --> 00:13:58,650
32-bit machine at home but if it had an

00:13:56,520 --> 00:14:00,930
issue where it wouldn't boot I would go

00:13:58,650 --> 00:14:04,130
buy a cheap 64-bit machine instead of

00:14:00,930 --> 00:14:06,860
fixing it that's where we are today

00:14:04,130 --> 00:14:08,330
if you really enjoy I 686 please find me

00:14:06,860 --> 00:14:10,450
afterwards and he'll be happy to talk to

00:14:08,330 --> 00:14:10,450
about

00:14:17,490 --> 00:14:23,760
yeah it's it's fine there's nothing

00:14:22,080 --> 00:14:25,380
wrong with people telling us that it's

00:14:23,760 --> 00:14:26,520
broken I have no issues with that I

00:14:25,380 --> 00:14:29,459
would love to know that information

00:14:26,520 --> 00:14:31,950
because then I can say look this is what

00:14:29,459 --> 00:14:34,740
needs to get fixed and it turns out that

00:14:31,950 --> 00:14:39,649
that issue was in the kernel for two

00:14:34,740 --> 00:14:39,649
months and nobody nobody noticed so

00:14:39,830 --> 00:14:42,830
right

00:14:52,369 --> 00:14:57,600
yeah so it's just it's not something we

00:14:55,920 --> 00:15:00,119
focus on it's not that we hate it it's

00:14:57,600 --> 00:15:02,600
not that we want it to die we just don't

00:15:00,119 --> 00:15:07,050
have the psychosis pendant that's all

00:15:02,600 --> 00:15:08,639
focus areas so focus areas are there not

00:15:07,050 --> 00:15:11,220
a new concept but it's something new

00:15:08,639 --> 00:15:13,249
that we're trying this year because

00:15:11,220 --> 00:15:15,749
staring at retrace and staring at bugs

00:15:13,249 --> 00:15:18,149
we can do it but it's enough to drag you

00:15:15,749 --> 00:15:19,529
crazy right there's always going to be

00:15:18,149 --> 00:15:22,709
boats we're not going to fix them all

00:15:19,529 --> 00:15:23,699
unfortunately so what are some of the

00:15:22,709 --> 00:15:25,439
things we're looking at we're looking at

00:15:23,699 --> 00:15:28,860
power management this one came from

00:15:25,439 --> 00:15:32,429
Christian who conveniently left but

00:15:28,860 --> 00:15:34,110
Matthias is still here um so this one

00:15:32,429 --> 00:15:37,160
came up not actually it was fairly

00:15:34,110 --> 00:15:39,119
recently in terms of fedora timeframes

00:15:37,160 --> 00:15:41,339
what can we do to have better power

00:15:39,119 --> 00:15:42,629
management now suspend resume obviously

00:15:41,339 --> 00:15:44,129
is one of them if it doesn't work then

00:15:42,629 --> 00:15:45,569
your power management stinks because if

00:15:44,129 --> 00:15:46,860
you fold your laptop clothes and stick

00:15:45,569 --> 00:15:48,420
it in your bag and it doesn't suspend

00:15:46,860 --> 00:15:49,739
then when you get home either it's

00:15:48,420 --> 00:15:52,139
overheated because it stayed in your bag

00:15:49,739 --> 00:15:53,519
is data on or you know hibernation

00:15:52,139 --> 00:15:57,089
failed it doesn't matter so that's

00:15:53,519 --> 00:15:58,649
something we're we're not charging

00:15:57,089 --> 00:16:00,959
forward on but it's something we're

00:15:58,649 --> 00:16:02,749
looking at right now it's hard to figure

00:16:00,959 --> 00:16:07,649
out exactly what we want to do there

00:16:02,749 --> 00:16:08,970
more automation so we have a number of

00:16:07,649 --> 00:16:11,549
different projects we already have the

00:16:08,970 --> 00:16:13,619
colonel test harness and infrastructure

00:16:11,549 --> 00:16:15,059
so that as a build comes out of Koji

00:16:13,619 --> 00:16:18,149
which is our build system if you don't

00:16:15,059 --> 00:16:19,979
know what that is Justin wrote this test

00:16:18,149 --> 00:16:21,599
harness and framework it picks it up it

00:16:19,979 --> 00:16:24,419
boots at your rug runs a regression test

00:16:21,599 --> 00:16:26,129
all in automated fashion has results on

00:16:24,419 --> 00:16:29,339
the web and it's actually very very

00:16:26,129 --> 00:16:32,279
useful because before we had that it was

00:16:29,339 --> 00:16:34,469
one person we build a colonel and we put

00:16:32,279 --> 00:16:38,369
it on our local machine or few machines

00:16:34,469 --> 00:16:40,829
and if it worked everybody else gets it

00:16:38,369 --> 00:16:43,049
right so we're improving our test

00:16:40,829 --> 00:16:45,839
coverage through automation the exploded

00:16:43,049 --> 00:16:50,189
git tree that we had we started at the

00:16:45,839 --> 00:16:52,049
end of after last flock I think so

00:16:50,189 --> 00:16:54,209
fedoras kernel is packaged as a

00:16:52,049 --> 00:16:55,469
traditional RPM with like a tarball and

00:16:54,209 --> 00:16:57,359
patches applied to and stuff like that

00:16:55,469 --> 00:16:59,819
and all the kernel developers we would

00:16:57,359 --> 00:17:01,439
talk to would say this is terrible how

00:16:59,819 --> 00:17:03,779
do i recreate your colonel if you guys

00:17:01,439 --> 00:17:04,980
are carrying patches which is absolutely

00:17:03,779 --> 00:17:07,529
true but we don't carry a whole lot of

00:17:04,980 --> 00:17:10,649
patches I think we have on any given day

00:17:07,529 --> 00:17:12,089
and rawhide somewhere between 50 and 80

00:17:10,649 --> 00:17:15,899
patches and most of them are very

00:17:12,089 --> 00:17:17,639
grateful so I created an exploding entry

00:17:15,899 --> 00:17:19,769
the developers were used to using and

00:17:17,639 --> 00:17:21,659
that went fine until about a month and a

00:17:19,769 --> 00:17:23,249
half ago when we tried to switch to

00:17:21,659 --> 00:17:25,499
using that instead of like the

00:17:23,249 --> 00:17:29,639
traditional rpm set up as the canonical

00:17:25,499 --> 00:17:31,379
source and it worked but it was really

00:17:29,639 --> 00:17:33,450
really cumbersome to take that and go

00:17:31,379 --> 00:17:35,399
back into the Fedora package that

00:17:33,450 --> 00:17:38,159
everybody actually consumes so we're

00:17:35,399 --> 00:17:39,899
gonna I'm going to step back and look at

00:17:38,159 --> 00:17:42,360
automating the creation of the exploded

00:17:39,899 --> 00:17:44,610
tree instead of vice versa and then

00:17:42,360 --> 00:17:46,259
testing a cover with Justin he's

00:17:44,610 --> 00:17:47,309
actually testing Linux next if you don't

00:17:46,259 --> 00:17:48,330
know what Livingston I because anyway

00:17:47,309 --> 00:17:52,529
not know what linux

00:17:48,330 --> 00:17:54,929
is good excellent I see some confused

00:17:52,529 --> 00:17:56,820
looks but it's basically what it sounds

00:17:54,929 --> 00:17:59,580
like it's what will be the next version

00:17:56,820 --> 00:18:01,470
of Linux so he's testing that which

00:17:59,580 --> 00:18:03,120
we've never done before we aren't going

00:18:01,470 --> 00:18:06,029
to ship it because that would be a

00:18:03,120 --> 00:18:08,039
little too crazy but you know testing it

00:18:06,029 --> 00:18:09,240
now means we find the bugs and report

00:18:08,039 --> 00:18:10,620
them up stream while they're still

00:18:09,240 --> 00:18:12,510
developing them before they get into

00:18:10,620 --> 00:18:15,779
linus torvalds treat which means you

00:18:12,510 --> 00:18:19,590
don't see them zexal ii and so i had on

00:18:15,779 --> 00:18:23,419
here upstream and it's kind of a kind of

00:18:19,590 --> 00:18:27,659
a depressing goal for a focus area in a

00:18:23,419 --> 00:18:30,149
number of ways but our daily job is not

00:18:27,659 --> 00:18:31,860
developing kernel code it's not even

00:18:30,149 --> 00:18:33,240
necessarily fixing kernel code at this

00:18:31,860 --> 00:18:36,870
point but that's something we're trying

00:18:33,240 --> 00:18:38,730
to get to over the past year I might

00:18:36,870 --> 00:18:40,830
have three commits in the upstream

00:18:38,730 --> 00:18:44,490
kernel and for a kernel maintainer

00:18:40,830 --> 00:18:46,590
that's that's sad days I mean you know

00:18:44,490 --> 00:18:48,240
packaging is fun and I'm glad I'm

00:18:46,590 --> 00:18:50,549
participating in fedora and providing

00:18:48,240 --> 00:18:52,610
value but it's not what we want to be

00:18:50,549 --> 00:18:54,570
doing so we're trying to have like a

00:18:52,610 --> 00:18:55,769
getting back to roots going back

00:18:54,570 --> 00:18:59,370
upstream making sure we're actually

00:18:55,769 --> 00:19:01,770
making an impact there as well

00:18:59,370 --> 00:19:03,000
so that's one of the focus areas and

00:19:01,770 --> 00:19:05,910
then at the bottom I have our yearly

00:19:03,000 --> 00:19:07,500
plan so I'm part of the whole team as

00:19:05,910 --> 00:19:11,130
part of the Fedora engineering team it's

00:19:07,500 --> 00:19:13,650
run by Paul fields we try to be open and

00:19:11,130 --> 00:19:15,120
transparent what we're doing we are some

00:19:13,650 --> 00:19:17,160
of the few people who are blessed to be

00:19:15,120 --> 00:19:19,440
working on fedora a hundred percent of

00:19:17,160 --> 00:19:23,840
our time as we get paid to do and so

00:19:19,440 --> 00:19:26,760
kind of as a you know thank you or

00:19:23,840 --> 00:19:28,470
encouraging participation part of that

00:19:26,760 --> 00:19:29,309
what do we do we put it on the wiki and

00:19:28,470 --> 00:19:30,210
there's our plane so if you're

00:19:29,309 --> 00:19:32,670
interested in what we're looking at

00:19:30,210 --> 00:19:34,350
beyond what i have on the slides you can

00:19:32,670 --> 00:19:35,850
certainly click on there you can email

00:19:34,350 --> 00:19:37,050
us on the fedora Colonel list and ask

00:19:35,850 --> 00:19:42,300
questions we're more than happy to

00:19:37,050 --> 00:19:45,120
answer those for there are 23 outlook

00:19:42,300 --> 00:19:50,190
alright so fit our region of 23 alpha

00:19:45,120 --> 00:19:53,820
just email I think it shipped with 42

00:19:50,190 --> 00:19:56,810
rc5 right

00:19:53,820 --> 00:20:01,770
with like one extra patch to fix the

00:19:56,810 --> 00:20:03,270
i386 book we're probably going to wind

00:20:01,770 --> 00:20:05,700
up releasing that with the 42 colonel

00:20:03,270 --> 00:20:08,190
because the development time frame for

00:20:05,700 --> 00:20:09,930
43 particularly now that we're getting

00:20:08,190 --> 00:20:11,550
into conference season for kernel

00:20:09,930 --> 00:20:13,260
developers is probably going to lag a

00:20:11,550 --> 00:20:16,260
little bit and it'll just cut it too

00:20:13,260 --> 00:20:19,710
close to the end point support it'll be

00:20:16,260 --> 00:20:23,070
like a 42 stable release oh geez by then

00:20:19,710 --> 00:20:27,830
I'd probably like four to six maybe if

00:20:23,070 --> 00:20:31,190
it lasts that long so but 43 is possible

00:20:27,830 --> 00:20:40,050
depending some other changes that happen

00:20:31,190 --> 00:20:42,630
so Fedora 22 came out with the figure 22

00:20:40,050 --> 00:20:46,490
for 21 where we did kernel corn kernel

00:20:42,630 --> 00:20:46,490
mod any was 22

00:20:47,430 --> 00:20:51,980
21 all right so we don't tend to change

00:20:50,340 --> 00:20:55,320
the packaging of the colonel very much

00:20:51,980 --> 00:20:58,380
but in fedora 21 we split into criminal

00:20:55,320 --> 00:21:00,120
core which is like it's not like a pure

00:20:58,380 --> 00:21:02,760
true core but it's a much smaller

00:21:00,120 --> 00:21:04,380
package basically usable for most vm

00:21:02,760 --> 00:21:08,190
machines and then the rest of America

00:21:04,380 --> 00:21:11,550
kernel modules this time around I was

00:21:08,190 --> 00:21:13,950
talking with Carla Fourier and his team

00:21:11,550 --> 00:21:16,470
and he said why are we shipping stuff in

00:21:13,950 --> 00:21:21,000
/ boo we should only be shipping in /

00:21:16,470 --> 00:21:22,260
user / live whatever and I said well

00:21:21,000 --> 00:21:24,920
Harold you know you have to have a

00:21:22,260 --> 00:21:28,380
colonel in / boots o grub can grab it

00:21:24,920 --> 00:21:29,970
you can't not ship in / boot so after

00:21:28,380 --> 00:21:31,830
about two weeks of trying to figure out

00:21:29,970 --> 00:21:34,200
what he was trying to do really what he

00:21:31,830 --> 00:21:36,350
wanted was all the packages in fedoras

00:21:34,200 --> 00:21:38,550
should only install in / user

00:21:36,350 --> 00:21:41,010
essentially so that you can go in and do

00:21:38,550 --> 00:21:43,680
like the equivalent of a factory reset

00:21:41,010 --> 00:21:45,120
and all the other directories go back to

00:21:43,680 --> 00:21:47,580
whatever they were before you install

00:21:45,120 --> 00:21:50,100
the door makes sense so we worked out a

00:21:47,580 --> 00:21:52,170
way so that we ship the actual colonel

00:21:50,100 --> 00:21:54,750
part that is normally in / boot in the

00:21:52,170 --> 00:21:57,060
RPM package itself it's in user live

00:21:54,750 --> 00:22:00,180
modules and then the kernel version

00:21:57,060 --> 00:22:02,160
string and then when we install the RPM

00:22:00,180 --> 00:22:03,720
there's some scriptlets that go and copy

00:22:02,160 --> 00:22:05,520
it over to / be so it's not that we're

00:22:03,720 --> 00:22:07,020
not installing the / boot it's just that

00:22:05,520 --> 00:22:11,010
we do it in a weird way so you can do

00:22:07,020 --> 00:22:12,690
factory resets and he his team finds

00:22:11,010 --> 00:22:14,310
that useful whether that'll boil out

00:22:12,690 --> 00:22:17,100
into something that you see in fedora I

00:22:14,310 --> 00:22:19,480
don't know

00:22:17,100 --> 00:22:22,350
somebody asked me today if we see it in

00:22:19,480 --> 00:22:22,350
containers and

00:22:22,580 --> 00:22:26,090
you know on the colonel guy I was like

00:22:24,380 --> 00:22:27,559
yeah yeah maybe and then I realized you

00:22:26,090 --> 00:22:31,309
don't need a colonel in container so

00:22:27,559 --> 00:22:32,630
probably not but at our peril that his

00:22:31,309 --> 00:22:35,299
team come up with some crazy stuff so

00:22:32,630 --> 00:22:39,679
maybe you'll have a have some use out of

00:22:35,299 --> 00:22:43,580
that best case you just don't even

00:22:39,679 --> 00:22:46,789
notice minor tweaks so just moving some

00:22:43,580 --> 00:22:48,950
modules around inside the the content of

00:22:46,789 --> 00:22:51,260
kernel corn kernel modules nothing

00:22:48,950 --> 00:22:53,510
really big and since the question always

00:22:51,260 --> 00:22:55,789
comes up we still do not recommend

00:22:53,510 --> 00:22:58,970
butter FS as the default file system for

00:22:55,789 --> 00:23:02,240
your machine every year we have the

00:22:58,970 --> 00:23:03,679
conversation in some form I think we

00:23:02,240 --> 00:23:06,049
asked them the desktop list again this

00:23:03,679 --> 00:23:08,510
year somebody did about whatever you

00:23:06,049 --> 00:23:10,760
want it for work station so I emailed

00:23:08,510 --> 00:23:14,049
Joseph Joseph how do you stay its last

00:23:10,760 --> 00:23:14,049
name you know

00:23:14,330 --> 00:23:19,070
anyway joseph is one of the main butter

00:23:16,610 --> 00:23:23,000
at best developers he used to work for

00:23:19,070 --> 00:23:26,360
red hat he moved on to fusion-io which

00:23:23,000 --> 00:23:28,730
was like this flash based data center

00:23:26,360 --> 00:23:33,409
type storage company and then he's now

00:23:28,730 --> 00:23:34,760
at Facebook yeah so I emailed him and

00:23:33,409 --> 00:23:36,559
said hey this question is going to come

00:23:34,760 --> 00:23:41,210
up you're the primary developer what do

00:23:36,559 --> 00:23:42,350
you recommend and he said not yet and so

00:23:41,210 --> 00:23:44,480
what they're doing at Facebook is

00:23:42,350 --> 00:23:46,940
they're rolling it out kind of behind

00:23:44,480 --> 00:23:49,029
the scenes on their storage areas and

00:23:46,940 --> 00:23:51,679
trying to scale it to 40 terabytes

00:23:49,029 --> 00:23:53,179
across one file system which is awesome

00:23:51,679 --> 00:23:55,190
and I've seen the commits go in for that

00:23:53,179 --> 00:23:58,399
there's fixing a lot of corner cases

00:23:55,190 --> 00:24:01,429
still some data corruption bugs at scale

00:23:58,399 --> 00:24:04,070
right so email then I said Joseph that's

00:24:01,429 --> 00:24:06,110
awesome but nobody in fedora is going to

00:24:04,070 --> 00:24:07,820
have a 40 terabyte laptop I'm sorry but

00:24:06,110 --> 00:24:11,029
that just doesn't it's not the same kind

00:24:07,820 --> 00:24:12,440
of workload that we see so he said they

00:24:11,029 --> 00:24:15,470
are doing other things it will produce

00:24:12,440 --> 00:24:17,000
similar workloads to what you would

00:24:15,470 --> 00:24:19,610
normally do in a laptop but they're not

00:24:17,000 --> 00:24:22,370
there yet once they do it in facebook at

00:24:19,610 --> 00:24:24,380
scale they'll shake out all the bugs and

00:24:22,370 --> 00:24:25,820
then it'll be maybe time so another six

00:24:24,380 --> 00:24:29,240
months which is typically than they

00:24:25,820 --> 00:24:31,750
answer every release for the past three

00:24:29,240 --> 00:24:31,750
or four releases

00:24:34,510 --> 00:24:42,410
yeah yeah Joseph pointed out that Susa

00:24:39,250 --> 00:24:44,270
so it opens its just the butter FS

00:24:42,410 --> 00:24:46,630
driver just like it is in fedora and I

00:24:44,270 --> 00:24:49,790
think they have defaulted to it now or

00:24:46,630 --> 00:24:51,530
it was just with their famous work well

00:24:49,790 --> 00:24:52,910
in sleds what they did is they turned

00:24:51,530 --> 00:24:55,220
off all the fancy stuff so there's no

00:24:52,910 --> 00:24:57,679
like transparent compression you can't

00:24:55,220 --> 00:25:00,290
do raid it's basically snapshots and

00:24:57,679 --> 00:25:03,890
that's it and they only ship it on the

00:25:00,290 --> 00:25:06,380
root partition basically right so user

00:25:03,890 --> 00:25:09,440
data is still on like tht 4 or X of S or

00:25:06,380 --> 00:25:10,640
something I don't know but we can't do

00:25:09,440 --> 00:25:13,340
that in fedora because we've already

00:25:10,640 --> 00:25:15,220
shipped the driver for however long it's

00:25:13,340 --> 00:25:17,960
been out there since pedorra 15 or 16

00:25:15,220 --> 00:25:19,100
and if we turn off those features than

00:25:17,960 --> 00:25:21,740
people who are using them will be broke

00:25:19,100 --> 00:25:24,549
so we can't kind of cheat and get there

00:25:21,740 --> 00:25:28,370
before it's ready and the open suse guys

00:25:24,549 --> 00:25:30,799
have worked on it for a while they're

00:25:28,370 --> 00:25:33,220
definitely fixing things they've I mean

00:25:30,799 --> 00:25:35,960
I see posts from you know at susa com

00:25:33,220 --> 00:25:37,280
quite often for fixing bugs so I'm sure

00:25:35,960 --> 00:25:39,110
they're running into issues and finding

00:25:37,280 --> 00:25:40,850
them which is excellent is usually sit

00:25:39,110 --> 00:25:42,020
away around right the door tends to be

00:25:40,850 --> 00:25:43,790
the dist drilled it finds all the bugs

00:25:42,020 --> 00:25:47,090
and gets them fixed upstream just

00:25:43,790 --> 00:25:50,140
because we're so bleeding edge but yeah

00:25:47,090 --> 00:25:52,210
it's he just said it's not ready yet

00:25:50,140 --> 00:25:55,690
whether it will be ready around for 20

00:25:52,210 --> 00:25:57,640
or 24 is a wait and see but you know

00:25:55,690 --> 00:25:59,140
unless you're really kind of hankering

00:25:57,640 --> 00:26:00,880
for snapshots or some of the other

00:25:59,140 --> 00:26:04,390
high-level features that are awesome

00:26:00,880 --> 00:26:12,040
about it it's really kind of a like why

00:26:04,390 --> 00:26:14,410
do you need it right yeah I mean if you

00:26:12,040 --> 00:26:16,060
want snapshots and roll backs you can do

00:26:14,410 --> 00:26:17,860
it with device mapper you can do it with

00:26:16,060 --> 00:26:20,530
thin provisioning and things like that

00:26:17,860 --> 00:26:23,650
it's not as integrated into the OS as we

00:26:20,530 --> 00:26:26,650
would like or simple from a command-line

00:26:23,650 --> 00:26:27,910
standpoint to do but I've been told by

00:26:26,650 --> 00:26:44,590
stephen gallagher that they are working

00:26:27,910 --> 00:26:48,550
on with project called storage yes right

00:26:44,590 --> 00:26:50,080
yep absolutely and I totally see the

00:26:48,550 --> 00:26:51,700
value of integrating it so that you can

00:26:50,080 --> 00:26:53,230
do transparent go back to make really

00:26:51,700 --> 00:26:55,950
simple and you know if you want to do

00:26:53,230 --> 00:26:58,510
like time slider stuff that'd be cool

00:26:55,950 --> 00:27:00,550
it's just every time I ask the person

00:26:58,510 --> 00:27:01,750
that works on it for his job he tells me

00:27:00,550 --> 00:27:04,440
it's not ready so I'm not going to be

00:27:01,750 --> 00:27:06,690
like yes let's ship it it's just isn't

00:27:04,440 --> 00:27:10,240
but there are some other same things

00:27:06,690 --> 00:27:14,020
that have lived in the kernel overlay FS

00:27:10,240 --> 00:27:16,600
so for the longest time what's it called

00:27:14,020 --> 00:27:20,440
aufs was the kind of like that out of

00:27:16,600 --> 00:27:22,990
out of tree union filing system that

00:27:20,440 --> 00:27:25,470
everybody carried fedora even carried it

00:27:22,990 --> 00:27:27,730
at one point a long time ago for their

00:27:25,470 --> 00:27:28,750
it was either their live and I think

00:27:27,730 --> 00:27:37,480
they're live images used it

00:27:28,750 --> 00:27:40,270
a long long time ago and then sorry yes

00:27:37,480 --> 00:27:43,560
docker dockery has a backing layer that

00:27:40,270 --> 00:27:48,370
uses overlay at fest now let's do that

00:27:43,560 --> 00:27:51,220
Alex Larson yeah Alex Larson um kind of

00:27:48,370 --> 00:27:53,470
rope that and it works it was merged in

00:27:51,220 --> 00:27:55,600
40 there's bugs here and there but it's

00:27:53,470 --> 00:27:57,460
it's kind of the only unit you know it's

00:27:55,600 --> 00:28:03,460
the only upstream Union filing system

00:27:57,460 --> 00:28:06,280
that we have yep yep butter switched

00:28:03,460 --> 00:28:07,770
what it does on the back end from butter

00:28:06,280 --> 00:28:11,640
if s nap shots and things like that to

00:28:07,770 --> 00:28:11,640
overlay FS to use that instead

00:28:12,869 --> 00:28:23,489
it does now didn't they fix it in didn't

00:28:17,889 --> 00:28:23,489
they fix overlay FS and XFS yeah I

00:28:24,539 --> 00:28:27,749
believe so

00:28:31,100 --> 00:28:37,460
there were other things so XFS and

00:28:35,090 --> 00:28:40,520
docker itself didn't get along because

00:28:37,460 --> 00:28:42,280
of namespace user name spaces did not

00:28:40,520 --> 00:28:50,750
work with XFS but that's also been fixed

00:28:42,280 --> 00:28:53,380
as of like 33 19 yeah so XFS should work

00:28:50,750 --> 00:28:56,690
if it doesn't work I would I would

00:28:53,380 --> 00:29:03,169
humbly be surprised and I'll go look at

00:28:56,690 --> 00:29:05,450
that because it should Katy bus Leonard

00:29:03,169 --> 00:29:07,100
likes to talk about Katie bus a lot so

00:29:05,450 --> 00:29:09,409
if you've seen any presentation he's

00:29:07,100 --> 00:29:11,350
given in the past year or so it's been

00:29:09,409 --> 00:29:14,809
about Katie bus for the most part

00:29:11,350 --> 00:29:16,520
essentially all it is is an internal IPC

00:29:14,809 --> 00:29:19,789
mechanism that kind of replaces

00:29:16,520 --> 00:29:22,280
userspace new bus and it's kind of

00:29:19,789 --> 00:29:25,159
contentious they posted it for inclusion

00:29:22,280 --> 00:29:27,320
in 41 and it was immediately shot down

00:29:25,159 --> 00:29:29,179
lots of upstream kernel developers were

00:29:27,320 --> 00:29:32,120
not very happy with how it was posted

00:29:29,179 --> 00:29:35,150
and how it was kind of positioned for

00:29:32,120 --> 00:29:36,260
inclusion so they took 42 off they said

00:29:35,150 --> 00:29:38,120
okay we're going to go work on some of

00:29:36,260 --> 00:29:40,130
the feedback we got we're not going to

00:29:38,120 --> 00:29:43,190
post it for inclusion two for two maybe

00:29:40,130 --> 00:29:46,610
it'll try again in four three Harold

00:29:43,190 --> 00:29:50,059
again asked me what can we do to get

00:29:46,610 --> 00:29:52,190
Katie bus into fedora in a way that it's

00:29:50,059 --> 00:29:54,740
actually useful we used to have we still

00:29:52,190 --> 00:29:56,360
do have a repository called Colonel

00:29:54,740 --> 00:29:58,340
playground where we kind of pulled in

00:29:56,360 --> 00:29:59,809
things that weren't quite ready upstream

00:29:58,340 --> 00:30:02,030
or things that were maybe in staging

00:29:59,809 --> 00:30:03,890
that that we weren't willing to enable

00:30:02,030 --> 00:30:06,440
and profit or property and we pulled

00:30:03,890 --> 00:30:08,059
Katie us in there and it worked you can

00:30:06,440 --> 00:30:10,940
install it but it wasn't getting the

00:30:08,059 --> 00:30:13,090
test coverage that they kind of needed

00:30:10,940 --> 00:30:15,410
so what we did is we made this deal

00:30:13,090 --> 00:30:17,090
where we pulling Katy bus into the

00:30:15,410 --> 00:30:18,710
rawhide kernel and rawhide criminal only

00:30:17,090 --> 00:30:21,500
so if you go when you boot fedora 23

00:30:18,710 --> 00:30:22,850
alpha KD bus is not in there because we

00:30:21,500 --> 00:30:26,210
said we're not going to ship something

00:30:22,850 --> 00:30:29,120
in a release branch before it's merged

00:30:26,210 --> 00:30:30,800
upstream so it's only right fortunately

00:30:29,120 --> 00:30:32,210
you can use rawhide kernels on fedora 23

00:30:30,800 --> 00:30:34,610
just fine so if you want to play with it

00:30:32,210 --> 00:30:36,380
just install the ride and then boot with

00:30:34,610 --> 00:30:38,720
katie bus equals one on the mainline

00:30:36,380 --> 00:30:40,400
kernel mainline probably want to set

00:30:38,720 --> 00:30:42,410
selinux too permissive if you're going

00:30:40,400 --> 00:30:44,090
to do anything other than just boot if

00:30:42,410 --> 00:30:47,450
you actually want to login probably need

00:30:44,090 --> 00:30:50,720
to do that selinux is being worked on it

00:30:47,450 --> 00:30:52,550
needs kernel level support for how Katie

00:30:50,720 --> 00:30:55,360
bus works and it isn't there yet but

00:30:52,550 --> 00:30:55,360
they are working on

00:30:56,300 --> 00:31:03,740
is it something that absolutely has to

00:30:58,400 --> 00:31:06,080
happen no but when Katie bus is merged

00:31:03,740 --> 00:31:07,700
it will enable a lot of different things

00:31:06,080 --> 00:31:11,660
that you can't do today just because of

00:31:07,700 --> 00:31:13,730
the wave have your knit process start

00:31:11,660 --> 00:31:16,610
and it's not also your main system bus

00:31:13,730 --> 00:31:18,170
and you start your system bus later lots

00:31:16,610 --> 00:31:21,050
of weird stuff happens when you restart

00:31:18,170 --> 00:31:23,140
the bus so by shoving it into the kernel

00:31:21,050 --> 00:31:25,580
you can just enable a lot more things

00:31:23,140 --> 00:31:26,810
and then live patch so if major and I

00:31:25,580 --> 00:31:30,380
was talking about this before the talk

00:31:26,810 --> 00:31:33,170
started live patching is commonly known

00:31:30,380 --> 00:31:36,160
as K slice which is a it's an Oracle

00:31:33,170 --> 00:31:38,570
product at the moment it's basically

00:31:36,160 --> 00:31:41,060
exactly what it sounds like you compile

00:31:38,570 --> 00:31:43,780
this little tiny piece of code and you

00:31:41,060 --> 00:31:46,130
can fix a bug without having to reboot

00:31:43,780 --> 00:31:48,920
Fedora does not enable it and it's

00:31:46,130 --> 00:31:51,140
simply because the amount of time and

00:31:48,920 --> 00:31:53,360
energy to produce those tiny little

00:31:51,140 --> 00:31:55,970
patches when we rebase the kernel as

00:31:53,360 --> 00:31:57,290
frequently as we do is not worth it it

00:31:55,970 --> 00:31:59,750
is enabled in that Colonel playground

00:31:57,290 --> 00:32:02,150
repository so if you want to play with

00:31:59,750 --> 00:32:03,920
it you can enable it or you can go use

00:32:02,150 --> 00:32:07,370
it and then build your own keep to patch

00:32:03,920 --> 00:32:10,520
patches but we don't have any we just

00:32:07,370 --> 00:32:13,580
don't ship it so for things like rel

00:32:10,520 --> 00:32:15,440
which has a really long lifecycle you

00:32:13,580 --> 00:32:16,900
know short you're a long time between

00:32:15,440 --> 00:32:19,390
updates it makes a lot more sense

00:32:16,900 --> 00:32:23,100
whether or not rel is going to actually

00:32:19,390 --> 00:32:26,520
use a patch and live patchy I don't know

00:32:23,100 --> 00:32:27,990
I don't get paid on realm stuff so they

00:32:26,520 --> 00:32:30,809
might it makes sense there but it

00:32:27,990 --> 00:32:36,419
doesn't adorable so that's pretty much

00:32:30,809 --> 00:32:37,590
the highlights list trying to think

00:32:36,419 --> 00:32:40,380
there was one more that I was just

00:32:37,590 --> 00:32:44,970
thinking about or not I can't think of

00:32:40,380 --> 00:32:46,500
it at so questions anybody the stock

00:32:44,970 --> 00:32:50,090
goes much better when people ask me hard

00:32:46,500 --> 00:32:50,090
questions or any questions

00:32:50,100 --> 00:32:52,730
sure

00:32:56,679 --> 00:33:03,220
yeah so like I said it was posted for

00:33:01,029 --> 00:33:04,600
401 that was shot down immediately there

00:33:03,220 --> 00:33:06,700
have been patches that have come in

00:33:04,600 --> 00:33:08,590
since then to address a lot of the

00:33:06,700 --> 00:33:11,559
feedback on there was a guy by the name

00:33:08,590 --> 00:33:14,320
of Andy Loup de Mer ski doo de Mars at

00:33:11,559 --> 00:33:16,119
their damier ski that does a lot of like

00:33:14,320 --> 00:33:17,379
low-level x86 stuff but he also was

00:33:16,119 --> 00:33:19,899
really interested in like security

00:33:17,379 --> 00:33:22,899
aspects of things oh that's what it was

00:33:19,899 --> 00:33:24,159
ok oh that's your question I go back so

00:33:22,899 --> 00:33:26,289
he's been reviewing the code pretty

00:33:24,159 --> 00:33:30,070
heavily and he keeps coming up with ways

00:33:26,289 --> 00:33:33,460
to boot a machine with Katie bus run a

00:33:30,070 --> 00:33:36,220
simple client and bring lots of

00:33:33,460 --> 00:33:38,019
destruction to the machine when you take

00:33:36,220 --> 00:33:39,490
your message buffers that you move them

00:33:38,019 --> 00:33:40,990
from userspace memory to kernel space

00:33:39,490 --> 00:33:43,779
memory it's a lot easier to starve

00:33:40,990 --> 00:33:44,799
things apparently oh so it turns out

00:33:43,779 --> 00:33:46,929
that there's some bugs that he's still

00:33:44,799 --> 00:33:50,470
fighting whether or not it gets merged

00:33:46,929 --> 00:33:54,330
443 to see the way that it was kind of

00:33:50,470 --> 00:33:56,619
positioned was this is kind of like

00:33:54,330 --> 00:33:59,769
binder you know a binder is it's like an

00:33:56,619 --> 00:34:01,360
Android IPC system the way greg

00:33:59,769 --> 00:34:03,309
kroah-hartman pulled binder in his he

00:34:01,360 --> 00:34:05,049
basically said look there is a massive

00:34:03,309 --> 00:34:07,240
number of users for this piece of code

00:34:05,049 --> 00:34:09,549
it doesn't impact anything outside of

00:34:07,240 --> 00:34:11,319
itself so we're going to pull it in and

00:34:09,549 --> 00:34:12,909
it had some objections to it there was

00:34:11,319 --> 00:34:14,700
some high-profile kernel developers that

00:34:12,909 --> 00:34:17,200
did not want to see binder get merged

00:34:14,700 --> 00:34:20,020
but Lina's can actually be pretty

00:34:17,200 --> 00:34:21,040
pragmatic at times so he said fine if

00:34:20,020 --> 00:34:22,569
Greg's going to maintain and he's

00:34:21,040 --> 00:34:24,730
willing to spend the effort to do that

00:34:22,569 --> 00:34:29,020
fine that's kind of how kiedy buzz was

00:34:24,730 --> 00:34:32,799
positioned it just it didn't work when

00:34:29,020 --> 00:34:36,730
they tried that for one so the 43

00:34:32,799 --> 00:34:38,619
development window will open probably in

00:34:36,730 --> 00:34:39,460
about a month and then we'll see what

00:34:38,619 --> 00:34:42,879
happens then

00:34:39,460 --> 00:34:44,109
I'm kind of optimistic that something

00:34:42,879 --> 00:34:45,879
similar will happen because they are

00:34:44,109 --> 00:34:48,250
kind of taking the feedback that Andy

00:34:45,879 --> 00:34:52,270
and others have provided but I don't

00:34:48,250 --> 00:34:54,540
know i mean if anybody knew they would

00:34:52,270 --> 00:34:56,589
be greg and penis and i don't mean

00:34:54,540 --> 00:34:58,540
they're pretty transparent i don't think

00:34:56,589 --> 00:35:03,490
they're you know privately emailing to

00:34:58,540 --> 00:35:04,780
get it in so we'll see what happens any

00:35:03,490 --> 00:35:07,230
other questions before i go back to what

00:35:04,780 --> 00:35:07,230
I was thinking

00:35:12,270 --> 00:35:17,460
as excellent question well realtime

00:35:14,850 --> 00:35:21,690
kernel patches ever be available in

00:35:17,460 --> 00:35:24,780
fedora no probably not there was a

00:35:21,690 --> 00:35:26,850
discussion a couple months ago on one of

00:35:24,780 --> 00:35:28,830
the development lists or development IRC

00:35:26,850 --> 00:35:31,590
channels about somebody who wanted to

00:35:28,830 --> 00:35:33,780
provide a realtime kernel and they asked

00:35:31,590 --> 00:35:36,690
me what they could do to get it in and I

00:35:33,780 --> 00:35:40,470
just said no sorry again it's a cycles

00:35:36,690 --> 00:35:42,210
thing right we're having enough trouble

00:35:40,470 --> 00:35:44,160
making sure everybody's machines work

00:35:42,210 --> 00:35:46,320
without real-time aspects to them I

00:35:44,160 --> 00:35:48,690
don't want to provide a realtime kernel

00:35:46,320 --> 00:35:50,220
and have people expect that this robot

00:35:48,690 --> 00:35:54,210
arm that's moving is not going to crush

00:35:50,220 --> 00:35:58,110
somebody's skull right so that being

00:35:54,210 --> 00:35:59,700
said after a lengthy discussion I said

00:35:58,110 --> 00:36:01,320
if you want to have a realtime kernel

00:35:59,700 --> 00:36:04,110
fedora and you want to provide it in a

00:36:01,320 --> 00:36:05,520
copper which is owned so if you know

00:36:04,110 --> 00:36:07,500
what yeah so I said you're more than

00:36:05,520 --> 00:36:08,730
welcome to do that it's fine I don't

00:36:07,500 --> 00:36:11,940
care just as long as it doesn't conflict

00:36:08,730 --> 00:36:12,990
with the actual colonel proper it's not

00:36:11,940 --> 00:36:15,450
that we're not interested in real-time

00:36:12,990 --> 00:36:19,620
necessarily it's that it's a very hard

00:36:15,450 --> 00:36:21,780
problem to solve Red Hat has paid one of

00:36:19,620 --> 00:36:24,690
our engineers we have a whole real-time

00:36:21,780 --> 00:36:27,150
team we have a real-time product we've

00:36:24,690 --> 00:36:29,130
paid the colonel engineers you know for

00:36:27,150 --> 00:36:32,130
quite a while now to get those patches

00:36:29,130 --> 00:36:33,870
worked on an upstream and they still

00:36:32,130 --> 00:36:35,340
aren't there so it's not only a hard

00:36:33,870 --> 00:36:36,540
problem just in terms of cycles of

00:36:35,340 --> 00:36:37,680
support but it's a hard problem just

00:36:36,540 --> 00:36:41,280
getting the patches upstream because

00:36:37,680 --> 00:36:42,690
some of them you know they've made very

00:36:41,280 --> 00:36:44,550
very good progress and now that the

00:36:42,690 --> 00:36:46,050
patches that have left are the really

00:36:44,550 --> 00:36:48,990
really kind of needy gritty hard ones

00:36:46,050 --> 00:36:51,330
and so we're just not willing to carry

00:36:48,990 --> 00:36:53,070
that in fedora it's just the number of

00:36:51,330 --> 00:36:54,390
users we would get is very small versus

00:36:53,070 --> 00:36:55,220
the amount of effort we would have to

00:36:54,390 --> 00:37:02,420
spend rebate

00:36:55,220 --> 00:37:05,330
patches yeah yeah I mean it's not like

00:37:02,420 --> 00:37:06,890
you can add the patches and have one

00:37:05,330 --> 00:37:09,980
kernel provide real time in that rhythm

00:37:06,890 --> 00:37:12,080
it doesn't work that way so it's a good

00:37:09,980 --> 00:37:14,359
question I hope somebody does eventually

00:37:12,080 --> 00:37:16,720
build that koper I don't think it's been

00:37:14,359 --> 00:37:16,720
done yet

00:37:17,809 --> 00:37:22,369
yeah that they've always had a realtime

00:37:20,779 --> 00:37:26,509
kernel that's kind of been based on the

00:37:22,369 --> 00:37:27,799
doors I think and I don't make it

00:37:26,509 --> 00:37:31,189
successful maybe it's not I don't know

00:37:27,799 --> 00:37:33,640
but I know it's big and all audio

00:37:31,189 --> 00:37:33,640
projects

00:38:42,120 --> 00:38:47,770
any other questions you may want to rant

00:38:46,390 --> 00:38:55,690
at me for not fixing a bug that they

00:38:47,770 --> 00:38:57,960
filed that's it alright well thank you

00:38:55,690 --> 00:38:57,960

YouTube URL: https://www.youtube.com/watch?v=M8oyS4jj8L8


