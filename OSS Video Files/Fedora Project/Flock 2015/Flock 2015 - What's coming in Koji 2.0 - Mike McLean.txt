Title: Flock 2015 - What's coming in Koji 2.0 - Mike McLean
Publication date: 2015-08-26
Playlist: Flock 2015
Description: 
	Fedora is changing and Koji must change with it. Come learn about the current work underway in Koji and what else is coming as we move closer to 2.0.
Captions: 
	00:00:00,000 --> 00:00:10,530
and we are recording so let's talk about

00:00:05,730 --> 00:00:14,960
Koji just and Ernie the audience here a

00:00:10,530 --> 00:00:19,260
raise your hand if you use Koji now

00:00:14,960 --> 00:00:21,119
raise your hand if you have run a

00:00:19,260 --> 00:00:24,869
coaching instance or install the Doge

00:00:21,119 --> 00:00:28,250
instance all right raise your hand if

00:00:24,869 --> 00:00:28,250
you wanted to pull your hair out

00:00:28,789 --> 00:00:41,280
Meredith alright so Cochise been around

00:00:38,040 --> 00:00:43,860
for a while let me talk about me real

00:00:41,280 --> 00:00:56,460
quick those of you haven't met before hi

00:00:43,860 --> 00:01:01,260
I'm Mike and I have been far too long

00:00:56,460 --> 00:01:04,860
yes I with red hat since 2001 as long as

00:01:01,260 --> 00:01:08,090
some people in this room but I actually

00:01:04,860 --> 00:01:11,130
wrote most of Koji most the core stuff

00:01:08,090 --> 00:01:13,950
is getting up there I'm not the only

00:01:11,130 --> 00:01:19,380
person that worked on Koji there's lots

00:01:13,950 --> 00:01:21,290
of eco I don't mean to minimize the

00:01:19,380 --> 00:01:23,430
other work that that people have done

00:01:21,290 --> 00:01:25,440
but

00:01:23,430 --> 00:01:27,510
I work for the release configuration

00:01:25,440 --> 00:01:28,650
management team at Red Hat but everybody

00:01:27,510 --> 00:01:32,160
calls us release engineering because

00:01:28,650 --> 00:01:33,810
that's what we call ourselves and in a

00:01:32,160 --> 00:01:37,370
long time ago i actually worked on

00:01:33,810 --> 00:01:41,610
installer QA and in the past life I was

00:01:37,370 --> 00:01:45,750
doing that backs you can find the Endora

00:01:41,610 --> 00:01:49,800
my cam on freenode my chem right at my

00:01:45,750 --> 00:01:53,460
Ken few other places Mike in for

00:01:49,800 --> 00:01:57,630
variations like that you guys all about

00:01:53,460 --> 00:01:58,950
about koji you may not realize that a

00:01:57,630 --> 00:02:05,970
lot of other people use koji besides

00:01:58,950 --> 00:02:07,910
fedora Sunday Flintstones amazon and

00:02:05,970 --> 00:02:11,910
there's a bunch more if you go to the

00:02:07,910 --> 00:02:12,959
Kochi coaching product project page and

00:02:11,910 --> 00:02:14,670
look at the run to your page there's

00:02:12,959 --> 00:02:16,560
there's a list and that's almost

00:02:14,670 --> 00:02:18,980
certainly not all that's just self

00:02:16,560 --> 00:02:18,980
reporting

00:02:21,320 --> 00:02:27,480
so coach is kind of old I wrote the

00:02:26,160 --> 00:02:32,130
first line of code more than 10 years

00:02:27,480 --> 00:02:34,410
ago and it wasn't a traditionally public

00:02:32,130 --> 00:02:37,440
we was internal only red hat for a while

00:02:34,410 --> 00:02:39,570
and we used it to build or core six but

00:02:37,440 --> 00:02:42,570
we were still going federal corset for

00:02:39,570 --> 00:02:46,850
the war inside of red hats and walls for

00:02:42,570 --> 00:02:51,660
emerged in extras i remembers that

00:02:46,850 --> 00:02:53,880
shameful past we publicly released it in

00:02:51,660 --> 00:02:55,740
2007 so the fedora could use it for its

00:02:53,880 --> 00:02:57,210
build system and that's when it became

00:02:55,740 --> 00:02:59,820
called kochi before that there was no

00:02:57,210 --> 00:03:03,510
such thing as Koji that was but used

00:02:59,820 --> 00:03:05,030
used it to make sake and if you want to

00:03:03,510 --> 00:03:07,740
read more about this I don't want to go

00:03:05,030 --> 00:03:11,700
while under the history but there's an

00:03:07,740 --> 00:03:14,700
article that I wrote for open source com

00:03:11,700 --> 00:03:16,970
Oh a few years ago Google freeze and

00:03:14,700 --> 00:03:16,970
socket

00:03:18,560 --> 00:03:24,370
also stop me if you have questions

00:03:19,940 --> 00:03:26,660
because I love answering questions I

00:03:24,370 --> 00:03:29,390
mentioned before there's plenty of pain

00:03:26,660 --> 00:03:33,800
points in Kochi you felt them I've felt

00:03:29,390 --> 00:03:35,480
them and they're not all Kochi itself

00:03:33,800 --> 00:03:42,830
limited documentation is one of the

00:03:35,480 --> 00:03:45,140
glutes and coach getting old I'm lying

00:03:42,830 --> 00:03:46,670
here I say it's good for Python that's

00:03:45,140 --> 00:03:48,140
currently it's currently written for

00:03:46,670 --> 00:03:51,980
Python two or three it's currently

00:03:48,140 --> 00:03:55,930
written to run real five when we

00:03:51,980 --> 00:03:55,930
initially wrote it was bent around rough

00:03:58,330 --> 00:04:15,920
424 no it was 235 I think is that right

00:04:05,620 --> 00:04:18,970
235 yeah fair enough thanks i want to

00:04:15,920 --> 00:04:18,970
see seemed like a good idea at the time

00:04:19,870 --> 00:04:26,150
at the time we only cared about rpms

00:04:23,110 --> 00:04:29,479
very shortly after afterwards we started

00:04:26,150 --> 00:04:31,550
carrying about more than that but coach

00:04:29,479 --> 00:04:32,810
is very RPM centric we've we've added on

00:04:31,550 --> 00:04:34,310
features for other things that aren't

00:04:32,810 --> 00:04:38,330
rpms but they do have a little bit of a

00:04:34,310 --> 00:04:40,669
bolted on feel and that's just because

00:04:38,330 --> 00:04:43,350
of the basic data structures in there

00:04:40,669 --> 00:04:48,610
weren't quite written with

00:04:43,350 --> 00:04:50,700
it can be a pain to deploy initially see

00:04:48,610 --> 00:04:53,170
you notice about the table and

00:04:50,700 --> 00:04:55,810
there's a number of restrictions that

00:04:53,170 --> 00:04:57,040
made a lot of sense when you were

00:04:55,810 --> 00:04:58,990
writing a build some when I when we were

00:04:57,040 --> 00:05:01,390
writing those system to build rpms for

00:04:58,990 --> 00:05:02,410
linux distro but some of those

00:05:01,390 --> 00:05:05,140
restrictions don't necessarily make

00:05:02,410 --> 00:05:07,170
sense and all workflows but they're kind

00:05:05,140 --> 00:05:11,760
of hard to get around when they're

00:05:07,170 --> 00:05:17,350
unique key constraints on the database

00:05:11,760 --> 00:05:19,440
so there are pain points don't me wrong

00:05:17,350 --> 00:05:24,940
I love Koji but it's got its problems

00:05:19,440 --> 00:05:27,580
and we're facing new challenges dot next

00:05:24,940 --> 00:05:31,270
whatever dot next you care about thought

00:05:27,580 --> 00:05:33,190
next is going to be a challenge we care

00:05:31,270 --> 00:05:37,120
about more than just rpms now that's

00:05:33,190 --> 00:05:39,010
been true for a while but it's getting a

00:05:37,120 --> 00:05:41,820
porcelain not worse and worse getting

00:05:39,010 --> 00:05:41,820
more so more so

00:05:44,390 --> 00:05:50,040
the workflows in coaching can be sort of

00:05:46,860 --> 00:05:55,620
a hassle I here I do here regular

00:05:50,040 --> 00:05:57,660
complaints that it can be code you can

00:05:55,620 --> 00:05:59,730
get in the way sometimes developers get

00:05:57,660 --> 00:06:03,210
into work done so we've had to make that

00:05:59,730 --> 00:06:07,890
better continuous integration is a big

00:06:03,210 --> 00:06:09,960
concern and Koji is not a continuous

00:06:07,890 --> 00:06:12,540
integration system probably never will

00:06:09,960 --> 00:06:15,350
be but it could really play nicer with

00:06:12,540 --> 00:06:17,970
systems to do that sort of thing and

00:06:15,350 --> 00:06:19,890
overall we have more people using Koji

00:06:17,970 --> 00:06:21,600
than we ever did before then we ever

00:06:19,890 --> 00:06:24,150
thought we would so they have different

00:06:21,600 --> 00:06:31,770
needs so coach he needs to grow and

00:06:24,150 --> 00:06:33,900
change to adapt so over the years we've

00:06:31,770 --> 00:06:38,370
sort of talked about things we'd like to

00:06:33,900 --> 00:06:40,620
do and and said well that would be nice

00:06:38,370 --> 00:06:45,720
but if we do that we're going to have to

00:06:40,620 --> 00:06:47,280
change everything change deep core stuff

00:06:45,720 --> 00:06:50,340
in the database make for heck of a

00:06:47,280 --> 00:06:53,460
migration so we'll put that off the to

00:06:50,340 --> 00:06:55,740
point out and pretty soon you realize

00:06:53,460 --> 00:06:57,360
you have to finally do two point oh so

00:06:55,740 --> 00:07:01,680
we're we're doing to point out let's do

00:06:57,360 --> 00:07:07,260
to win it I we posted a draft roadmap to

00:07:01,680 --> 00:07:09,930
koji to that list for last there's a

00:07:07,260 --> 00:07:13,560
link it's the very first email to coach

00:07:09,930 --> 00:07:16,840
rube illness as you can tell from the

00:07:13,560 --> 00:07:18,510
URL there we discussed it more at

00:07:16,840 --> 00:07:20,500
activity that we have in June and the

00:07:18,510 --> 00:07:23,380
conversation is still going if you're

00:07:20,500 --> 00:07:25,000
interested in coaching takoi know if you

00:07:23,380 --> 00:07:29,169
are interested in the future directions

00:07:25,000 --> 00:07:31,990
of Koji then now is a good time to hop

00:07:29,169 --> 00:07:35,970
on a list or talk to me or talk to other

00:07:31,990 --> 00:07:35,970
people and make your voice part because

00:07:41,110 --> 00:07:47,750
so let's talk about what we'd like to

00:07:45,800 --> 00:07:51,080
see because you know I can't how come I

00:07:47,750 --> 00:07:52,760
don't think I have time to talk about

00:07:51,080 --> 00:07:54,830
everything I'd like to talk about

00:07:52,760 --> 00:07:57,850
everything we'd like to do but I'm

00:07:54,830 --> 00:07:57,850
trying to go over some of the highlights

00:08:04,750 --> 00:08:15,150
so at a high level probably put these

00:08:10,690 --> 00:08:16,990
goals about almost any project but I

00:08:15,150 --> 00:08:21,220
really really want to do better

00:08:16,990 --> 00:08:22,780
documentation I feel like that is a I'm

00:08:21,220 --> 00:08:24,370
not just giving that lip service here I

00:08:22,780 --> 00:08:27,460
really feel like that's a big barrier to

00:08:24,370 --> 00:08:29,560
entry for Koji not just for people to

00:08:27,460 --> 00:08:34,990
use it but for people to deploy it and

00:08:29,560 --> 00:08:36,490
for people to contribute code so so I I

00:08:34,990 --> 00:08:37,599
don't want to take that off one

00:08:36,490 --> 00:08:40,659
seriously that's one of the reasons

00:08:37,599 --> 00:08:44,110
better documentation i'm going to write

00:08:40,659 --> 00:08:46,750
some if you have expertise i would love

00:08:44,110 --> 00:08:48,580
to see contributions even if it's just

00:08:46,750 --> 00:08:49,930
even if it's not something you wrote

00:08:48,580 --> 00:08:53,110
even if it's something that you found

00:08:49,930 --> 00:08:55,150
helpful that you could point the at say

00:08:53,110 --> 00:08:57,730
hey this is much better than that stuff

00:08:55,150 --> 00:09:01,660
you have on your website but why can't

00:08:57,730 --> 00:09:05,650
we use that said more community

00:09:01,660 --> 00:09:08,460
involvement i think that these two are

00:09:05,650 --> 00:09:08,460
related

00:09:10,930 --> 00:09:16,779
we we've gotten some very helpful

00:09:14,310 --> 00:09:18,670
patches from the community and we've

00:09:16,779 --> 00:09:20,710
definitely gotten aerial feedback from

00:09:18,670 --> 00:09:22,240
the community but I want more there's a

00:09:20,710 --> 00:09:26,020
lot of work to do for coaching two point

00:09:22,240 --> 00:09:27,820
oh and I can do it all myself or I could

00:09:26,020 --> 00:09:36,250
but then coaching 2 point 0 will not be

00:09:27,820 --> 00:09:38,920
on time as I mentioned Koji is getting a

00:09:36,250 --> 00:09:41,170
little gray around the muzzle so it's

00:09:38,920 --> 00:09:46,690
time to refactor a lot of code that was

00:09:41,170 --> 00:09:50,560
really a long time ago I'm less about

00:09:46,690 --> 00:09:54,000
python that I do that we need to

00:09:50,560 --> 00:09:56,620
modernize me to get rid of some old

00:09:54,000 --> 00:10:00,760
small dependencies that don't make sense

00:09:56,620 --> 00:10:09,130
anymore I'd like to have yes so for the

00:10:00,760 --> 00:10:13,630
refactor monetize modernization I'll get

00:10:09,130 --> 00:10:20,140
to that um so because we still care

00:10:13,630 --> 00:10:23,290
about some older rail releases to some

00:10:20,140 --> 00:10:24,820
extent we can't just target Python 3 I

00:10:23,290 --> 00:10:28,290
mean I as you pointed out even well

00:10:24,820 --> 00:10:28,290
seven doesn't really have Python 3

00:10:43,720 --> 00:10:50,430
I think I pick 2.6 is on that what is in

00:10:48,189 --> 00:10:55,990
the real 7 I think that's going to go

00:10:50,430 --> 00:10:59,769
666 yes because probably from I think I

00:10:55,990 --> 00:11:03,040
pick 26 because of rel 6l6 has a has a

00:10:59,769 --> 00:11:04,329
bit of life left in it and my person you

00:11:03,040 --> 00:11:07,089
think the coaching since I care most

00:11:04,329 --> 00:11:15,519
about uses a lot of real six still and

00:11:07,089 --> 00:11:21,100
that's not likely to change yeah that is

00:11:15,519 --> 00:11:22,449
a possibility yes but there's a lot of

00:11:21,100 --> 00:11:23,889
code that needs to run all these places

00:11:22,449 --> 00:11:27,730
a lot of code that's kind of this used

00:11:23,889 --> 00:11:30,370
all over so so for that code I think 26

00:11:27,730 --> 00:11:32,019
plus plus one of the adaption layers is

00:11:30,370 --> 00:11:36,819
really way to go but I have it covered

00:11:32,019 --> 00:11:40,870
in another sponsor b/c ok lift they can

00:11:36,819 --> 00:11:46,389
be in whichever version of white provide

00:11:40,870 --> 00:11:50,559
client support 4.3 there's no I won't be

00:11:46,389 --> 00:11:53,680
right go with you interact with OG IM

00:11:50,559 --> 00:11:55,959
really like you do well we will

00:11:53,680 --> 00:11:57,639
certainly have that yes we will

00:11:55,959 --> 00:11:58,959
certainly support python 3 but we're

00:11:57,639 --> 00:12:02,559
just doing in a way so that we don't

00:11:58,959 --> 00:12:05,319
cease to support Python 2 and that's a

00:12:02,559 --> 00:12:08,709
bit of a it's a bit of a trade-off

00:12:05,319 --> 00:12:11,559
because if you support both Python 2 and

00:12:08,709 --> 00:12:13,000
Python 3 at the same time you're sort of

00:12:11,559 --> 00:12:14,980
say hey there's all these really great

00:12:13,000 --> 00:12:18,540
features in Python 3 that I am just not

00:12:14,980 --> 00:12:18,540
going to use because

00:12:29,379 --> 00:12:42,879
I mean I have a good core 2.6 22.4 and

00:12:39,939 --> 00:12:46,659
to balance our exact same density which

00:12:42,879 --> 00:12:56,489
the world extreme you're going to like

00:12:46,659 --> 00:13:01,799
water oceans be nice we can go okay I

00:12:56,489 --> 00:13:01,799
think mostly violent agreement here

00:13:09,200 --> 00:13:11,260
you

00:13:16,230 --> 00:13:24,640
okay well so in five years in five years

00:13:22,480 --> 00:13:46,840
I'm hoping that we'll be talking about

00:13:24,640 --> 00:13:51,610
Koji three-point oh if not yeah all

00:13:46,840 --> 00:13:55,510
right I will come back to python 3 when

00:13:51,610 --> 00:13:57,310
i get to that slide all right different

00:13:55,510 --> 00:14:00,250
types of build processes and i'll get to

00:13:57,310 --> 00:14:02,350
what that means a little later but right

00:14:00,250 --> 00:14:04,830
now we mostly what are we support right

00:14:02,350 --> 00:14:07,870
now we support building rpms of mock

00:14:04,830 --> 00:14:10,980
building jars with maven building images

00:14:07,870 --> 00:14:10,980
with image factory

00:14:15,460 --> 00:14:27,980
okay well I want to throw out a family

00:14:24,560 --> 00:14:34,520
feud reference with deprecated that

00:14:27,980 --> 00:14:36,560
reference so all right but yes we we but

00:14:34,520 --> 00:14:40,160
each of those different types of builds

00:14:36,560 --> 00:14:42,110
have been sort of difficult to add into

00:14:40,160 --> 00:14:48,620
Koji and they've always sort of felt

00:14:42,110 --> 00:14:51,650
bolted on New York yeah the schema is

00:14:48,620 --> 00:14:53,390
built around our pm's again so so we

00:14:51,650 --> 00:14:57,500
want to try to open that up and we'll

00:14:53,390 --> 00:14:59,000
get more into what that means a little

00:14:57,500 --> 00:15:00,680
lighter different times to go to output

00:14:59,000 --> 00:15:01,880
related if you have a different build

00:15:00,680 --> 00:15:05,180
process it might produce different

00:15:01,880 --> 00:15:09,070
active Falcon hardwired restrictions

00:15:05,180 --> 00:15:12,830
need to be more configurable for example

00:15:09,070 --> 00:15:15,320
NVR uniqueness you have such a thing

00:15:12,830 --> 00:15:17,690
there are plenty of workflows where NVR

00:15:15,320 --> 00:15:21,020
uniqueness makes no sense for example if

00:15:17,690 --> 00:15:22,490
you are doing the course and toss build

00:15:21,020 --> 00:15:23,930
system and you need to read though the

00:15:22,490 --> 00:15:27,320
same NVR over and over and over again

00:15:23,930 --> 00:15:30,410
until you get it right or if you're

00:15:27,320 --> 00:15:31,760
doing a CI system and rebuilt the same

00:15:30,410 --> 00:15:34,240
NVR over and over and over again and

00:15:31,760 --> 00:15:34,240
take it right

00:15:35,830 --> 00:15:41,770
or various other access controls that

00:15:40,210 --> 00:15:45,160
are just just hardwired to be a certain

00:15:41,770 --> 00:15:48,370
way and can't really change if you let

00:15:45,160 --> 00:15:50,530
this user going to do this garbage

00:15:48,370 --> 00:15:52,530
collection if you want to you say I

00:15:50,530 --> 00:15:54,430
don't really care about keeping all this

00:15:52,530 --> 00:15:56,190
referent all these reference builds

00:15:54,430 --> 00:15:58,060
around because I don't really care about

00:15:56,190 --> 00:16:02,070
reproducing built roots from five years

00:15:58,060 --> 00:16:02,070
ago then you can't do that

00:16:08,190 --> 00:16:24,090
the the GC 1 no oh mdr1 yes yes now I'm

00:16:22,770 --> 00:16:28,860
not gonna pretend I have solutions to

00:16:24,090 --> 00:16:31,920
all of these this is still planning we

00:16:28,860 --> 00:16:33,540
want to make it easier to deploy having

00:16:31,920 --> 00:16:37,280
better dogs would get get that started

00:16:33,540 --> 00:16:40,860
but also with the be nice to just have

00:16:37,280 --> 00:16:42,180
fewer steps in between getting the code

00:16:40,860 --> 00:16:44,760
on your server and getting the system

00:16:42,180 --> 00:16:46,290
running it doesn't there's lots of

00:16:44,760 --> 00:16:48,660
little knobs and configuration file to

00:16:46,290 --> 00:16:52,050
twiddle it would be nice to just to be

00:16:48,660 --> 00:16:54,260
able to get it started I know that there

00:16:52,050 --> 00:16:54,260
are ways

00:16:55,520 --> 00:17:04,310
better QA process which would mean a QA

00:17:01,280 --> 00:17:07,220
process which is not true not true but I

00:17:04,310 --> 00:17:12,430
do a lot of testing myself but I don't

00:17:07,220 --> 00:17:12,430
really know who else does and it's not

00:17:17,560 --> 00:17:29,540
yeah we kind of need CI for coaching and

00:17:25,420 --> 00:17:33,260
better release process because we don't

00:17:29,540 --> 00:17:35,450
really formalize it what we do I man but

00:17:33,260 --> 00:17:36,680
often releases but they if you look at

00:17:35,450 --> 00:17:42,230
the history of them they've gotten

00:17:36,680 --> 00:17:46,750
further and further apart and it's not

00:17:42,230 --> 00:17:46,750
the best so all right

00:17:49,700 --> 00:18:01,880
I will talk about scratch goes later so

00:17:58,330 --> 00:18:06,289
highlights there are a few sort of

00:18:01,880 --> 00:18:08,000
big-ticket things that did I that I

00:18:06,289 --> 00:18:12,740
believe we're going to land in two point

00:18:08,000 --> 00:18:17,179
oh that talk about so Python 3 support

00:18:12,740 --> 00:18:18,230
see I told you there was a slot and I

00:18:17,179 --> 00:18:21,529
guess we were looking ahead and fifty

00:18:18,230 --> 00:18:23,450
song as I said oh we're so systems don't

00:18:21,529 --> 00:18:29,179
matter my plan right now is a target to

00:18:23,450 --> 00:18:31,399
python 26 and use Python six as glue

00:18:29,179 --> 00:18:34,279
library to sort of make it work all

00:18:31,399 --> 00:18:38,600
places that's not set in stone if

00:18:34,279 --> 00:18:46,309
there's a giant of swelling people

00:18:38,600 --> 00:18:48,440
saying no no no 27 then and me

00:18:46,309 --> 00:18:51,860
personally I'm not going to stop caring

00:18:48,440 --> 00:18:53,600
caring about real 5 immediately so I'm

00:18:51,860 --> 00:18:58,039
probably still going to have some sort

00:18:53,600 --> 00:18:59,779
of basic client lid that will work on an

00:18:58,039 --> 00:19:02,230
older Python that's just going to be

00:18:59,779 --> 00:19:02,230
separate

00:19:09,500 --> 00:19:12,400
it's gonna

00:19:17,630 --> 00:19:24,600
it'll be it'll be a complicated

00:19:21,560 --> 00:19:26,580
complicated migration I I'm not saying

00:19:24,600 --> 00:19:30,920
we want my I don't I think we'll be able

00:19:26,580 --> 00:19:33,690
to migrate the data it might not be as

00:19:30,920 --> 00:19:37,710
clean and migration as you're like I

00:19:33,690 --> 00:19:42,980
mean it's a difference between migrating

00:19:37,710 --> 00:19:42,980
from I don't know say migrating from

00:19:43,880 --> 00:19:53,790
mercurial to get versus migrating from

00:19:48,080 --> 00:20:00,540
get to CVS or here or I don't know I

00:19:53,790 --> 00:20:02,490
don't know what yeah yes it's whereas

00:20:00,540 --> 00:20:05,070
right now all our migration so far have

00:20:02,490 --> 00:20:07,470
been here apply this relatively painless

00:20:05,070 --> 00:20:09,420
scheme update sometimes they take a

00:20:07,470 --> 00:20:12,150
while because they update a big table

00:20:09,420 --> 00:20:13,740
but you know I've never remember them

00:20:12,150 --> 00:20:16,320
ever taking more than 20 minutes on my

00:20:13,740 --> 00:20:19,920
slow sir on my slip server so whereas

00:20:16,320 --> 00:20:22,470
and it's just just sequel code whereas

00:20:19,920 --> 00:20:25,770
the migration for this will probably be

00:20:22,470 --> 00:20:27,270
a Python application that reads in your

00:20:25,770 --> 00:20:29,160
database and does a whole lot of

00:20:27,270 --> 00:20:31,380
calculation to figure out how this data

00:20:29,160 --> 00:20:32,640
map to this data probably tracing

00:20:31,380 --> 00:20:35,910
through the intent promise racing

00:20:32,640 --> 00:20:38,340
through the entire history it's it's in

00:20:35,910 --> 00:20:40,560
the coachee database and rewriting that

00:20:38,340 --> 00:20:45,740
in the new history in as new mystery in

00:20:40,560 --> 00:20:45,740
him will he lose

00:20:46,470 --> 00:20:51,480
right why and that's that's me you know

00:20:48,720 --> 00:20:52,950
I that you know the co gia says this I

00:20:51,480 --> 00:20:55,620
care about I don't want to throw away

00:20:52,950 --> 00:20:57,510
the history other people may be fine was

00:20:55,620 --> 00:20:59,520
saying okay well here's our new code

00:20:57,510 --> 00:21:05,340
here's our new coach to instance start

00:20:59,520 --> 00:21:09,390
building here it's empty have fun so

00:21:05,340 --> 00:21:11,250
were there any sort of punted python3

00:21:09,390 --> 00:21:14,760
conversations before it is there

00:21:11,250 --> 00:21:17,419
anything left there to get off your

00:21:14,760 --> 00:21:17,419
chest alright

00:21:19,690 --> 00:21:42,639
I think that says it all well we figure

00:21:36,070 --> 00:21:45,309
we're going to have a call center bill

00:21:42,639 --> 00:21:51,850
burswood just will subcontracted out and

00:21:45,309 --> 00:21:57,100
the manual data entry no I my JSON I I

00:21:51,850 --> 00:22:00,789
think it will do it some sort of JSON

00:21:57,100 --> 00:22:03,759
they are to see exactly what form that

00:22:00,789 --> 00:22:06,220
takes is a matter of discussion I'm open

00:22:03,759 --> 00:22:12,450
to suggestion I'm open to argument there

00:22:06,220 --> 00:22:14,740
but and I really hope we can dodge

00:22:12,450 --> 00:22:17,169
having to write some sort of external

00:22:14,740 --> 00:22:20,740
offer see compat thing for this because

00:22:17,169 --> 00:22:24,460
I don't want to do it but if anybody out

00:22:20,740 --> 00:22:26,889
there has like a giant ton of scripts

00:22:24,460 --> 00:22:28,539
that they think they have it can't port

00:22:26,889 --> 00:22:37,740
and just have to work then well you're

00:22:28,539 --> 00:22:43,470
probably on your own but yeah all right

00:22:37,740 --> 00:22:50,320
build links faces there's actually a

00:22:43,470 --> 00:22:54,279
partial implantation is out there one of

00:22:50,320 --> 00:22:57,490
it where this gets painful is not so

00:22:54,279 --> 00:23:00,399
much adding a namespace field in the

00:22:57,490 --> 00:23:01,480
database that's pretty easy to do next

00:23:00,399 --> 00:23:03,040
XP

00:23:01,480 --> 00:23:06,720
tweak the evening this condition boom

00:23:03,040 --> 00:23:10,630
the problem is that we have this file

00:23:06,720 --> 00:23:14,860
file system layout in cosi where we go

00:23:10,630 --> 00:23:19,510
now koji packages RPM name version

00:23:14,860 --> 00:23:22,690
release so as soon as you do this the

00:23:19,510 --> 00:23:24,490
that path is a unique anymore so you

00:23:22,690 --> 00:23:30,130
have to change it and I feel like that's

00:23:24,490 --> 00:23:33,429
a pretty big deal changing I have a the

00:23:30,130 --> 00:23:38,700
patch that I have which is experimental

00:23:33,429 --> 00:23:43,929
and buggy preserves the name space for

00:23:38,700 --> 00:23:48,309
the preserves that file system file path

00:23:43,929 --> 00:23:49,960
for the default namespace namespace 0 so

00:23:48,309 --> 00:23:51,460
as long as you're in a space 0 or if

00:23:49,960 --> 00:23:53,940
you're only using that one namespace

00:23:51,460 --> 00:23:56,440
then it works just like it did before

00:23:53,940 --> 00:23:59,640
but when you move anything to another

00:23:56,440 --> 00:24:02,790
namespace then the path is weird and

00:23:59,640 --> 00:24:02,790
there's really

00:24:03,820 --> 00:24:08,630
so we talked I touched on this before

00:24:06,140 --> 00:24:10,310
it's useful for for a number of

00:24:08,630 --> 00:24:12,080
workflows and these will for anybody

00:24:10,310 --> 00:24:13,700
that cares about not having at the RNA

00:24:12,080 --> 00:24:16,040
penis an interesting side effect of this

00:24:13,700 --> 00:24:17,570
is a depending on how you plan

00:24:16,040 --> 00:24:19,820
implementation I have allows for the

00:24:17,570 --> 00:24:25,390
namespace to be null and with a nice

00:24:19,820 --> 00:24:28,010
space is null you can just there like

00:24:25,390 --> 00:24:29,540
like bosons you can just cram as many in

00:24:28,010 --> 00:24:33,140
the nulls and they think space as you

00:24:29,540 --> 00:24:37,910
want so so scratch bills would become

00:24:33,140 --> 00:24:43,070
null namespace bills which would mean

00:24:37,910 --> 00:24:46,430
that a scratch build could be moved to a

00:24:43,070 --> 00:24:50,360
namespace and then cease to be a scratch

00:24:46,430 --> 00:24:52,930
building which is an interesting thing

00:24:50,360 --> 00:24:52,930
that people

00:24:56,059 --> 00:25:01,919
right and and and because because the

00:24:59,009 --> 00:25:03,480
way with this would work and we have it

00:25:01,919 --> 00:25:05,580
would be a real bill just in an old a

00:25:03,480 --> 00:25:08,279
space so you'd have all the same

00:25:05,580 --> 00:25:09,570
metadata scratch bills are already just

00:25:08,279 --> 00:25:11,669
like regular bills except they don't get

00:25:09,570 --> 00:25:17,220
imported this would actually import them

00:25:11,669 --> 00:25:18,570
in the null namespace and well ND you

00:25:17,220 --> 00:25:20,779
have to yeah the garbage question has to

00:25:18,570 --> 00:25:22,740
account for this you probably have

00:25:20,779 --> 00:25:24,869
default garbage collection rules would

00:25:22,740 --> 00:25:28,169
probably be very aggressive about

00:25:24,869 --> 00:25:31,200
Moulmein space bills but you could save

00:25:28,169 --> 00:25:33,659
that space and boom it's a real build

00:25:31,200 --> 00:25:42,450
again like it's a real boy like

00:25:33,659 --> 00:25:44,460
Pinocchio so act or that's no no no so

00:25:42,450 --> 00:25:46,470
before before I go on to the next thing

00:25:44,460 --> 00:25:48,210
it does that make sense does anybody

00:25:46,470 --> 00:25:52,019
have any burning questions about

00:25:48,210 --> 00:25:54,960
building spaces actually I have there's

00:25:52,019 --> 00:25:59,460
an interesting open question here which

00:25:54,960 --> 00:26:03,590
I don't I don't yet feel like I'm

00:25:59,460 --> 00:26:03,590
accenture on the answer to that is this

00:26:03,830 --> 00:26:09,990
does it make sense once you have

00:26:07,320 --> 00:26:13,289
multiple namespaces for a build to

00:26:09,990 --> 00:26:17,059
occupy for a single bill to occupy the

00:26:13,289 --> 00:26:17,059
same NVR in multiple nights basis

00:26:20,830 --> 00:26:39,549
a namespace is just just a namespace

00:26:37,120 --> 00:26:49,029
it's just it's just just an extra key in

00:26:39,549 --> 00:26:51,070
a uniqueness condition so I don't think

00:26:49,029 --> 00:26:51,970
you want to be told you whatever you're

00:26:51,070 --> 00:26:54,190
talking you want to mix those up

00:26:51,970 --> 00:26:57,120
although one thing you do have an

00:26:54,190 --> 00:26:59,889
implementation is that the attack has

00:26:57,120 --> 00:27:02,429
tag has a namespace associated with it

00:26:59,889 --> 00:27:05,260
and that and what that means is that

00:27:02,429 --> 00:27:07,210
when you build into particular tag

00:27:05,260 --> 00:27:10,049
that's the default I think space that

00:27:07,210 --> 00:27:14,169
the bill gets if it's not scratched Oh

00:27:10,049 --> 00:27:17,350
constantly in one moment we will get go

00:27:14,169 --> 00:27:21,669
to these guys tags and namespaces and

00:27:17,350 --> 00:27:24,850
you'd be like okay my dear girls to name

00:27:21,669 --> 00:27:28,980
some names based or sometime so here's

00:27:24,850 --> 00:27:33,760
the thing right now we have bills in

00:27:28,980 --> 00:27:36,880
kochi that are multiplied tag it happens

00:27:33,760 --> 00:27:38,799
all the time right and we're just yet in

00:27:36,880 --> 00:27:40,980
nice basis it's not clear whether or not

00:27:38,799 --> 00:27:45,880
we could have them multiple names based

00:27:40,980 --> 00:27:51,159
and when we have bills multiple tagged

00:27:45,880 --> 00:27:54,250
often we really do want those to be the

00:27:51,159 --> 00:27:57,100
same live in the same namespace you know

00:27:54,250 --> 00:28:01,460
I'm saying you don't necessarily want

00:27:57,100 --> 00:28:08,240
you may have a whole set of tags for

00:28:01,460 --> 00:28:09,500
let's say you've got fedora 37 I would

00:28:08,240 --> 00:28:15,110
know it does that the people are

00:28:09,500 --> 00:28:17,540
ambitious that Fedora 25 say half the

00:28:15,110 --> 00:28:22,310
door 20 instead of 4.5 action i have

00:28:17,540 --> 00:28:25,190
canada tag / i tag they'll tag and you

00:28:22,310 --> 00:28:27,170
don't want to have being in the position

00:28:25,190 --> 00:28:31,730
of having the same having the same in

00:28:27,170 --> 00:28:35,330
different builds occupy the same NVR in

00:28:31,730 --> 00:28:37,690
those very related tax so they are

00:28:35,330 --> 00:28:37,690
separate things

00:28:39,690 --> 00:28:43,679
it's a it's a tricky thing to introduce

00:28:41,940 --> 00:28:45,090
this there's it opens up a lot of

00:28:43,679 --> 00:28:46,500
questions it's it's a limpet can of

00:28:45,090 --> 00:28:49,799
worms but I think we really think we

00:28:46,500 --> 00:28:54,200
need it another open question is do we

00:28:49,799 --> 00:28:54,200
actually need more than one namespace

00:28:55,399 --> 00:28:59,749
depends that depends on what you want to

00:28:56,839 --> 00:29:05,589
do i think in fedora we might not it

00:28:59,749 --> 00:29:10,969
might be enough to have named and no

00:29:05,589 --> 00:29:19,369
yeah but yeah well no is not so much a

00:29:10,969 --> 00:29:22,639
namespace as lack of a namespace well so

00:29:19,369 --> 00:29:25,909
so a copra workflow if you want to use

00:29:22,639 --> 00:29:29,269
saykoji as a back in for organizational

00:29:25,909 --> 00:29:31,779
back end for covert then that yes you

00:29:29,269 --> 00:29:35,749
want multiple ninth bases you one each

00:29:31,779 --> 00:29:38,450
each cooker to have how does any choice

00:29:35,749 --> 00:29:41,049
yeah i was thinking of the CI using

00:29:38,450 --> 00:29:44,599
coaches the back end Percy I so he would

00:29:41,049 --> 00:29:46,909
team up reason we use Tito farm builds

00:29:44,599 --> 00:29:51,609
to the pedo we didn't talk it's other

00:29:46,909 --> 00:29:51,609
Jenkins but if we wanted to

00:30:10,149 --> 00:30:13,149
I'm

00:30:38,950 --> 00:30:44,950
yes yes that would namespace would

00:30:43,720 --> 00:30:53,180
definitely one of the factors that

00:30:44,950 --> 00:30:59,440
garbage so

00:30:53,180 --> 00:30:59,440
I don't know

00:31:01,400 --> 00:31:07,640
alright so let's talk about content

00:31:03,410 --> 00:31:11,900
generators this is a big one and might

00:31:07,640 --> 00:31:13,160
not be obvious content generators is

00:31:11,900 --> 00:31:17,320
actually not a coaching to point o

00:31:13,160 --> 00:31:17,320
feature it's a coding 1 point 11 feature

00:31:17,530 --> 00:31:28,280
but this well they don't know what it is

00:31:23,090 --> 00:31:29,840
yet yeah but in two point oh I want to

00:31:28,280 --> 00:31:30,980
really embrace content generators and so

00:31:29,840 --> 00:31:33,740
let me tell you what content generators

00:31:30,980 --> 00:31:39,610
are content generators means in a

00:31:33,740 --> 00:31:44,780
nutshell a mechanism in coji to allow

00:31:39,610 --> 00:31:49,010
something that isn't Koji to act as a as

00:31:44,780 --> 00:31:55,090
a built source so it in a sense it's a

00:31:49,010 --> 00:31:57,020
glorified import so as we grow and

00:31:55,090 --> 00:31:58,370
handle different types of build

00:31:57,020 --> 00:32:00,800
processes and different types of

00:31:58,370 --> 00:32:03,140
workflows we may have cases where

00:32:00,800 --> 00:32:05,290
somebody needs to just have a radically

00:32:03,140 --> 00:32:09,650
different system for creating bills and

00:32:05,290 --> 00:32:12,410
we would still want to have that get

00:32:09,650 --> 00:32:16,490
into Koji for tracking garbage

00:32:12,410 --> 00:32:20,660
collection shipping releasing etc

00:32:16,490 --> 00:32:24,200
yes that I mean at an extreme now I'm

00:32:20,660 --> 00:32:26,000
not going to guess at what all people

00:32:24,200 --> 00:32:31,040
might want to use this for but yes

00:32:26,000 --> 00:32:33,620
that's a distinct possibility that but

00:32:31,040 --> 00:32:35,900
it's not we're trying not to make it a

00:32:33,620 --> 00:32:38,809
free-for-all the idea here is an old if

00:32:35,900 --> 00:32:41,990
you agree to text robust metadata import

00:32:38,809 --> 00:32:44,090
the idea is to sort of hold these

00:32:41,990 --> 00:32:49,400
content generators to some sort of

00:32:44,090 --> 00:32:51,380
standard that it matches what we sort of

00:32:49,400 --> 00:32:53,620
expect from Koji that is this not you're

00:32:51,380 --> 00:32:56,210
not just chucking a bunch of files onto

00:32:53,620 --> 00:32:59,210
into a database and say here I built

00:32:56,210 --> 00:33:02,630
this have some Deb's and some logs and

00:32:59,210 --> 00:33:04,580
be done with it the metadata format is

00:33:02,630 --> 00:33:07,910
actually look at the link later if

00:33:04,580 --> 00:33:10,550
you're interested specifies at details

00:33:07,910 --> 00:33:14,030
about the built environment mappings

00:33:10,550 --> 00:33:17,290
between the contents in the bill how

00:33:14,030 --> 00:33:20,690
which build environment was built in

00:33:17,290 --> 00:33:23,600
which content generator built it etc

00:33:20,690 --> 00:33:27,350
it's it's a complex robust data import

00:33:23,600 --> 00:33:29,929
that is on it's similar in some ways

00:33:27,350 --> 00:33:34,000
more robust than what Koji is currently

00:33:29,929 --> 00:33:34,000
doing now when it imports bills

00:33:36,250 --> 00:33:46,700
so right now when we imported 111 we're

00:33:43,520 --> 00:33:48,950
going to have this added on as a new set

00:33:46,700 --> 00:33:51,980
of hub calls that allows a Content

00:33:48,950 --> 00:33:53,540
generator to to do these sort of imports

00:33:51,980 --> 00:33:58,810
and so some I could write a content

00:33:53,540 --> 00:34:03,010
generator people already places and and

00:33:58,810 --> 00:34:05,330
do that in two point oh I want

00:34:03,010 --> 00:34:06,590
everything and koji that generates bills

00:34:05,330 --> 00:34:08,720
to use the saints were to use the same

00:34:06,590 --> 00:34:10,700
note for calls and use the same Jesus

00:34:08,720 --> 00:34:13,310
emanating structure so I want a unified

00:34:10,700 --> 00:34:16,130
into point we won't have that 111 but

00:34:13,310 --> 00:34:18,250
that's that's what will happen to point

00:34:16,130 --> 00:34:18,250
out

00:34:23,290 --> 00:34:26,290
second

00:34:28,899 --> 00:34:37,970
right right in a sense literally yes

00:34:34,909 --> 00:34:42,070
coach ed would become a native Native

00:34:37,970 --> 00:34:42,070
koji content content generator exactly

00:34:53,800 --> 00:35:01,490
well I mean technically right a Koji

00:34:59,599 --> 00:35:03,140
instance could serve as content

00:35:01,490 --> 00:35:06,440
generator for another Koji instance if

00:35:03,140 --> 00:35:10,070
you set that up yes that you may or may

00:35:06,440 --> 00:35:12,020
not want to do that the Kochi Federation

00:35:10,070 --> 00:35:16,130
is one of those line items on the wish

00:35:12,020 --> 00:35:43,069
list that i do not have in slides but

00:35:16,130 --> 00:35:45,640
it's definitely following but the IQ

00:35:43,069 --> 00:35:48,640
drop my IQ drops with every slides so

00:35:45,640 --> 00:35:48,640
just

00:35:52,109 --> 00:35:55,750
unifi build types right now I think

00:35:54,309 --> 00:35:59,079
pressure on us before we have a bunch of

00:35:55,750 --> 00:36:00,520
them build types RPM bills which were

00:35:59,079 --> 00:36:02,410
the original bill type that we also have

00:36:00,520 --> 00:36:05,079
Navy bills window the bills which I by

00:36:02,410 --> 00:36:13,119
realize this is there don't don't ask me

00:36:05,079 --> 00:36:17,079
how to do it yeah i baited even putting

00:36:13,119 --> 00:36:21,450
that line but it's in the code it's off

00:36:17,079 --> 00:36:24,280
by default turn on is not on the doors

00:36:21,450 --> 00:36:28,210
also which bills and whatever else might

00:36:24,280 --> 00:36:30,460
come up in the future right now these

00:36:28,210 --> 00:36:31,960
are all sort of handled separately our

00:36:30,460 --> 00:36:33,960
kindles is very different from the other

00:36:31,960 --> 00:36:36,970
three though three or sort of unified

00:36:33,960 --> 00:36:38,680
but it's all still a little awkward and

00:36:36,970 --> 00:36:40,329
adding new ones that still feels even

00:36:38,680 --> 00:36:44,859
more awkward so I want to have it or you

00:36:40,329 --> 00:36:47,940
find and because we're going to have

00:36:44,859 --> 00:36:47,940
more we know we're going to have

00:36:50,120 --> 00:36:58,620
one of the things that I was debating

00:36:53,430 --> 00:36:59,970
about I initially did the road map so I

00:36:58,620 --> 00:37:01,920
wasn't sure about this but then it

00:36:59,970 --> 00:37:03,360
became very clear during the third or

00:37:01,920 --> 00:37:07,470
activity day this is pretty much

00:37:03,360 --> 00:37:09,030
probably seemed like I must have is for

00:37:07,470 --> 00:37:12,390
Koji to grow message bus and that does

00:37:09,030 --> 00:37:13,740
not mean that's not the same as Koji

00:37:12,390 --> 00:37:15,150
talking on fed message because Koji

00:37:13,740 --> 00:37:17,430
already box on fed message we have a

00:37:15,150 --> 00:37:20,790
plug-in that does just that this means

00:37:17,430 --> 00:37:21,930
koji has its own message bus and why

00:37:20,790 --> 00:37:23,400
would coach you want to so message bus

00:37:21,930 --> 00:37:26,340
because right now kochi does a lot of

00:37:23,400 --> 00:37:28,320
pulling every time you every time you

00:37:26,340 --> 00:37:29,970
run a building poggi your client is

00:37:28,320 --> 00:37:31,800
sitting there going hey Koji what's

00:37:29,970 --> 00:37:34,560
happening this build hey Koji what's

00:37:31,800 --> 00:37:36,390
happening this bill instead it could go

00:37:34,560 --> 00:37:38,810
message bus and say hey tell me when

00:37:36,390 --> 00:37:40,830
something happens on this build

00:37:38,810 --> 00:37:41,970
similarly with all the builders they're

00:37:40,830 --> 00:37:44,600
doing something very similar they're

00:37:41,970 --> 00:37:44,600
pulling all the time

00:37:57,960 --> 00:38:03,369
so let's distinguish between the Fed

00:38:01,510 --> 00:38:10,030
message software and the Fed veterans

00:38:03,369 --> 00:38:13,950
and the instance okay so it may well be

00:38:10,030 --> 00:38:13,950
the Fed message software yes

00:38:30,560 --> 00:38:37,470
well we don't necessarily have to do

00:38:34,680 --> 00:38:39,510
scheduling the same way that we probably

00:38:37,470 --> 00:38:43,980
won't do scheduling the same way that we

00:38:39,510 --> 00:38:47,930
have that we have been the sort of ad

00:38:43,980 --> 00:38:50,280
hoc fair race that the coach ed

00:38:47,930 --> 00:38:52,079
currently does Co geniusness is

00:38:50,280 --> 00:38:57,569
currently due to decide who gets what

00:38:52,079 --> 00:39:02,460
task is probably to go away to so this

00:38:57,569 --> 00:39:04,319
is something that I have much less of a

00:39:02,460 --> 00:39:06,660
sense of what it's going to look like in

00:39:04,319 --> 00:39:08,670
the end than some of the others but I

00:39:06,660 --> 00:39:10,109
feel like butt but it became very clear

00:39:08,670 --> 00:39:11,660
to me that something like this has to

00:39:10,109 --> 00:39:14,760
happen so I think it's going to happen

00:39:11,660 --> 00:39:16,650
it may or may not be fed message or

00:39:14,760 --> 00:39:18,599
zeromq but it will be it will be a

00:39:16,650 --> 00:39:22,170
message to us because we really do have

00:39:18,599 --> 00:39:23,930
to get rid of some of the polling it

00:39:22,170 --> 00:39:26,819
will make people a lot happier because

00:39:23,930 --> 00:39:28,800
you'll get much better responsiveness

00:39:26,819 --> 00:39:30,480
out of the client much better responses

00:39:28,800 --> 00:39:32,460
how the builders which we won't have to

00:39:30,480 --> 00:39:35,930
wait 30 seconds for a builder to notice

00:39:32,460 --> 00:39:35,930
that it has a task assigned to it

00:39:47,660 --> 00:39:56,500
yeah I'll talk to that in a minute but

00:39:52,630 --> 00:39:59,359
yes I I do the schedule needs some help

00:39:56,500 --> 00:40:00,380
it's it's just not smart enough and the

00:39:59,359 --> 00:40:05,119
only way it's going to get smart as if

00:40:00,380 --> 00:40:06,380
you centralize it plugins we already

00:40:05,119 --> 00:40:09,770
have plugins in Kochi we have plugins

00:40:06,380 --> 00:40:11,660
for the hub plugins for the Builder we

00:40:09,770 --> 00:40:13,609
have themes for the web UI but no

00:40:11,660 --> 00:40:15,740
plugins so I won't plug in some more

00:40:13,609 --> 00:40:20,230
places i want them done clean cleaner

00:40:15,740 --> 00:40:24,020
insistently and more pythonic lee and

00:40:20,230 --> 00:40:27,510
because we need two people need to

00:40:24,020 --> 00:40:33,090
extend this and it needs to be done

00:40:27,510 --> 00:40:35,010
a reasonable and documented way so it's

00:40:33,090 --> 00:40:37,830
no more I can't fix that I can't I can't

00:40:35,010 --> 00:40:43,020
go over everything we want to do and and

00:40:37,830 --> 00:40:45,240
they're a smartass schedule modular

00:40:43,020 --> 00:40:48,270
authentication right now we support

00:40:45,240 --> 00:40:51,030
multiple types of authentication but if

00:40:48,270 --> 00:40:57,090
you want to add a new one it will be

00:40:51,030 --> 00:41:05,940
hard I'm not I know that some people in

00:40:57,090 --> 00:41:31,430
this room so I'd like to make it easier

00:41:05,940 --> 00:41:31,430
to the web UI yeah yeah

00:41:54,310 --> 00:42:03,619
and the web UI is something that is that

00:42:00,050 --> 00:42:07,460
but yeah I mean it means to be it needs

00:42:03,619 --> 00:42:09,050
to be that's the front face for a lot of

00:42:07,460 --> 00:42:25,339
people for Koji not for me I just use

00:42:09,050 --> 00:42:27,890
the command line but but I mean we could

00:42:25,339 --> 00:42:29,450
write the Twitter plugin tomorrow we

00:42:27,890 --> 00:42:47,710
don't need to point out have a good or

00:42:29,450 --> 00:42:52,280
plugin that we log bills so I threw it

00:42:47,710 --> 00:42:54,109
probably going to use flask for the as a

00:42:52,280 --> 00:42:55,820
lightweight frame work instead of the ad

00:42:54,109 --> 00:42:58,640
hoc know from the web framework that we

00:42:55,820 --> 00:43:00,170
have now I don't want to use anything

00:42:58,640 --> 00:43:04,040
too big but seems like it's probably

00:43:00,170 --> 00:43:06,170
about the right size and again I just

00:43:04,040 --> 00:43:09,040
sort of went through these are sort of

00:43:06,170 --> 00:43:12,140
the best of the rest and there's there's

00:43:09,040 --> 00:43:15,760
transient dynamic builders would mean

00:43:12,140 --> 00:43:18,440
that it would be make it easier to setup

00:43:15,760 --> 00:43:20,020
setup and teardown builders again a

00:43:18,440 --> 00:43:21,850
clown

00:43:20,020 --> 00:43:26,100
without right now I'm setting the

00:43:21,850 --> 00:43:29,020
builders kind of heavy duty because you

00:43:26,100 --> 00:43:30,690
have to add a database you have the

00:43:29,020 --> 00:43:33,910
credentials you do all these things

00:43:30,690 --> 00:43:37,060
transit dynamic builders would probably

00:43:33,910 --> 00:43:40,870
take the shape of a Content generator

00:43:37,060 --> 00:43:43,450
that is spinning spinning off these

00:43:40,870 --> 00:43:47,110
transit dynamic builders and acting as a

00:43:43,450 --> 00:43:51,670
proxy as a to talk between those and

00:43:47,110 --> 00:43:54,270
coaching but not unlike how Coker does

00:43:51,670 --> 00:43:54,270
things actually

00:44:10,030 --> 00:44:14,580
Oh keeping the ssl off you mean

00:44:18,130 --> 00:44:20,130
Oh

00:44:22,260 --> 00:44:31,260
oh well sure if if you if we make it

00:44:29,280 --> 00:44:33,060
easier to add more vacation house we

00:44:31,260 --> 00:44:35,310
probably will add 1 i'd love to have

00:44:33,060 --> 00:44:37,530
more that all that cash another ssl

00:44:35,310 --> 00:44:46,020
using ssl sorts it feels a little clunky

00:44:37,530 --> 00:44:49,110
short so we don't do it that way it

00:44:46,020 --> 00:44:51,480
would be it would be that would be and

00:44:49,110 --> 00:44:52,920
that would dovetail nicely into the make

00:44:51,480 --> 00:44:54,750
it easier to set up an instance because

00:44:52,920 --> 00:44:56,370
one of the big pain points when you're

00:44:54,750 --> 00:44:58,080
setting up a new coaching instances

00:44:56,370 --> 00:44:59,700
you're either going to set up a whole

00:44:58,080 --> 00:45:03,420
Kerberos infrastructure to do your

00:44:59,700 --> 00:45:07,350
authentication which is not a trivial

00:45:03,420 --> 00:45:11,190
unless you already have and it's easy or

00:45:07,350 --> 00:45:12,630
you go you're you plow through the ssl

00:45:11,190 --> 00:45:14,070
docks and try to figure out how to set

00:45:12,630 --> 00:45:16,380
up the keys and you have to have a

00:45:14,070 --> 00:45:26,190
system for handing them out which Koji

00:45:16,380 --> 00:45:29,210
doesn't have so well oh yeah if you want

00:45:26,190 --> 00:45:29,210
to use the passport if you do that

00:45:29,630 --> 00:45:35,490
normally normally I just do for my own

00:45:32,850 --> 00:45:39,480
essences I just do ssl once you do the

00:45:35,490 --> 00:45:41,760
little bit of leg work of creating and

00:45:39,480 --> 00:45:44,330
or stealing a few scripts to set them up

00:45:41,760 --> 00:45:44,330
it's not too bad

00:46:06,190 --> 00:46:12,580
this

00:46:07,840 --> 00:46:15,280
what we use SSL for off because play

00:46:12,580 --> 00:46:18,820
used ssl for auth I mean that's when

00:46:15,280 --> 00:46:20,590
originally koji was purely in the

00:46:18,820 --> 00:46:23,080
software was purely internal Red Hat and

00:46:20,590 --> 00:46:24,790
the only two and no it did not support

00:46:23,080 --> 00:46:27,040
ssl off it we used Kerberos go that's

00:46:24,790 --> 00:46:30,940
what we had inside a red hat that was it

00:46:27,040 --> 00:46:32,500
Kerberos period when Fedora adopted Koji

00:46:30,940 --> 00:46:34,390
and we released it under open source

00:46:32,500 --> 00:46:37,720
license one of the very first things we

00:46:34,390 --> 00:46:39,550
did was had ssl off support and that

00:46:37,720 --> 00:46:46,090
code hasn't really changed much since

00:46:39,550 --> 00:46:50,410
then and yeah so totally open to do

00:46:46,090 --> 00:46:56,110
authentication methods yes so is this

00:46:50,410 --> 00:46:58,570
ambitious yes it's very ambitious but it

00:46:56,110 --> 00:47:02,320
needs to be done and I think we can do

00:46:58,570 --> 00:47:03,640
it and some of the things that we some

00:47:02,320 --> 00:47:09,040
of the things that we've gone through a

00:47:03,640 --> 00:47:13,030
list do not necessarily have to fully

00:47:09,040 --> 00:47:16,690
land in two point oh all right to point

00:47:13,030 --> 00:47:20,350
I will have many releases 2.1 to put too

00:47:16,690 --> 00:47:29,560
many happy releases so so some of these

00:47:20,350 --> 00:47:31,300
features maybe a little small but but

00:47:29,560 --> 00:47:33,640
we'll get them working but the important

00:47:31,300 --> 00:47:36,010
thing is to build the framework and make

00:47:33,640 --> 00:47:38,920
the big core changes to koji that we

00:47:36,010 --> 00:47:41,140
need to do the big shaking up one time

00:47:38,920 --> 00:47:42,880
and not have to do it again for a few

00:47:41,140 --> 00:47:45,130
years so that we can build incrementally

00:47:42,880 --> 00:47:49,119
from there so

00:47:45,130 --> 00:47:51,609
that's but it is ambitious and that's

00:47:49,119 --> 00:47:52,960
why I need your help so here's how if

00:47:51,609 --> 00:47:56,920
you're interested in helping join the

00:47:52,960 --> 00:48:00,339
Koji devel mailing list on its projects

00:47:56,920 --> 00:48:01,779
mailing list not a fedora but there's an

00:48:00,339 --> 00:48:03,430
historian or up to your rights but we're

00:48:01,779 --> 00:48:07,059
hosted mailing list not a fedora project

00:48:03,430 --> 00:48:08,470
analyst so we need everything we need

00:48:07,059 --> 00:48:11,019
coding we testing when he talks being a

00:48:08,470 --> 00:48:23,970
feedback really anything you want to

00:48:11,019 --> 00:48:28,990
give snide comments that's not so

00:48:23,970 --> 00:48:32,579
questions may be answers um that's it

00:48:28,990 --> 00:48:42,250
that's a tricky question it depends up

00:48:32,579 --> 00:48:44,589
it depends on that right right it's

00:48:42,250 --> 00:48:47,019
early we're still playing as I said all

00:48:44,589 --> 00:48:50,460
this is vicious there some some of it

00:48:47,019 --> 00:48:53,289
has code written a lot of it does not

00:48:50,460 --> 00:48:56,980
some of it i feel like i could write

00:48:53,289 --> 00:49:00,519
myself without if with given sufficient

00:48:56,980 --> 00:49:04,779
time which isn't always easy when you

00:49:00,519 --> 00:49:11,220
have day job the only cares about one

00:49:04,779 --> 00:49:11,220
coaching is this not ten of them but

00:49:14,710 --> 00:49:26,450
it if but if if we're back here again

00:49:21,680 --> 00:49:28,700
next summer and I don't and I don't have

00:49:26,450 --> 00:49:30,320
something and I don't have something on

00:49:28,700 --> 00:49:35,930
a kochi to point o branch that you can

00:49:30,320 --> 00:49:39,740
run now I would maybe call it but

00:49:35,930 --> 00:49:42,109
if I don't have something workable if we

00:49:39,740 --> 00:49:44,030
don't have something workable by within

00:49:42,109 --> 00:49:47,450
the year I'll be very disappointed so

00:49:44,030 --> 00:49:50,420
that's that's the that help is that is

00:49:47,450 --> 00:49:53,240
that a guidance we're not going to drop

00:49:50,420 --> 00:49:55,940
the cut with one point X lime very

00:49:53,240 --> 00:49:57,080
quickly because like it will depend on

00:49:55,940 --> 00:49:59,560
that and the migration is gonna be tough

00:49:57,080 --> 00:50:03,410
even once we have to point out working

00:49:59,560 --> 00:50:08,630
probably keep one point X support it for

00:50:03,410 --> 00:50:10,640
a while because it's no it's this is not

00:50:08,630 --> 00:50:12,050
a from-scratch rewrite its but it's

00:50:10,640 --> 00:50:15,380
going to be a degree a lot of codes

00:50:12,050 --> 00:50:18,130
going to change but I'm a believer in

00:50:15,380 --> 00:50:21,320
not throwing out the accumulated

00:50:18,130 --> 00:50:24,950
knowledge of ten years of build systems

00:50:21,320 --> 00:50:29,500
so so we want to be careful not to not

00:50:24,950 --> 00:50:29,500
to throw out the smarts yeah

00:50:30,540 --> 00:50:34,980
koji one not eleven ballpark October

00:50:53,280 --> 00:50:58,720
I've gotten the same question to every

00:50:56,410 --> 00:51:01,540
time I look at OBS my brain starts to

00:50:58,720 --> 00:51:04,990
sort of crunch in on itself a little bit

00:51:01,540 --> 00:51:08,590
I think it's the good because it's ten

00:51:04,990 --> 00:51:10,020
times the cosine of coaching and it's

00:51:08,590 --> 00:51:15,970
written in three different languages and

00:51:10,020 --> 00:51:21,880
and the docs look nice until you try to

00:51:15,970 --> 00:51:28,690
read them like oh hey it has docs wait a

00:51:21,880 --> 00:51:36,130
minute not that I should cast any stones

00:51:28,690 --> 00:51:41,050
about dogs but so so the thing is that

00:51:36,130 --> 00:51:42,220
the OBS as I understand it and feel free

00:51:41,050 --> 00:51:44,410
to correct me because I'm sure they're

00:51:42,220 --> 00:51:46,390
very likely somebody here understands OB

00:51:44,410 --> 00:51:48,190
has way better than I do but as I

00:51:46,390 --> 00:51:53,040
understand OBS is a very different sort

00:51:48,190 --> 00:51:53,040
of build system than coaching it's

00:51:53,680 --> 00:52:02,990
that's a lot of cross compiler which is

00:51:56,059 --> 00:52:06,559
cool yes it's a beautiful manager yes

00:52:02,990 --> 00:52:13,029
can give you which you can run wide

00:52:06,559 --> 00:52:13,029
selection of you can rather you the

00:52:14,380 --> 00:52:23,059
cross compile there yeah but it I don't

00:52:19,760 --> 00:52:26,779
think it has the sword that when I ok I

00:52:23,059 --> 00:52:29,660
didn't seem to have a sort of quite the

00:52:26,779 --> 00:52:31,609
level of organizational structure the

00:52:29,660 --> 00:52:33,470
coachee does maybe not quite the level

00:52:31,609 --> 00:52:38,720
of data interconnectedness like oh she

00:52:33,470 --> 00:52:43,279
does doesn't need right there's that too

00:52:38,720 --> 00:52:46,299
but here's an interesting idea could OBS

00:52:43,279 --> 00:52:46,299
via content generator

00:52:50,119 --> 00:52:59,670
if you know if you don't like yourself

00:52:55,319 --> 00:53:01,530
very much and you wanted to turn that

00:52:59,670 --> 00:53:05,760
turn turn it into a Content generator

00:53:01,530 --> 00:53:09,720
then that's a possibility I mean I think

00:53:05,760 --> 00:53:11,220
like a real I guess concrete this many

00:53:09,720 --> 00:53:15,119
were to come across an IRC channel and

00:53:11,220 --> 00:53:18,260
say why don't I think properly through

00:53:15,119 --> 00:53:22,760
that as it doesn't it doesn't care to

00:53:18,260 --> 00:53:22,760
certain requirements that we have

00:53:31,330 --> 00:53:39,240
is a lot of like OBS does a lot of

00:53:34,150 --> 00:53:41,770
things really well but it kind of yeah

00:53:39,240 --> 00:53:47,970
hi i am out of time I'm fact I've over

00:53:41,770 --> 00:53:50,110
so thank you why are you holding up with

00:53:47,970 --> 00:53:56,950
were you holding up a flag that I was

00:53:50,110 --> 00:54:05,350
supposed to notice okay so luckily that

00:53:56,950 --> 00:54:08,230
is my last so you mentioned

00:54:05,350 --> 00:54:11,560
reproducibility I'm giving another talk

00:54:08,230 --> 00:54:13,470
at two thirty on reproducibility in

00:54:11,560 --> 00:54:16,620
coaching so if you're interested in that

00:54:13,470 --> 00:54:19,840
you can come to that and learn about

00:54:16,620 --> 00:54:23,280
what we do and what that means nice pass

00:54:19,840 --> 00:54:23,280

YouTube URL: https://www.youtube.com/watch?v=LI1h3aKgfwo


