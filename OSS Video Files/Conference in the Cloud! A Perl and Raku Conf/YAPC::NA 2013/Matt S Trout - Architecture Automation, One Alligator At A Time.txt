Title: Matt S Trout - Architecture Automation, One Alligator At A Time
Publication date: 2013-08-20
Playlist: YAPC::NA 2013
Description: 
	
Captions: 
	00:00:00,350 --> 00:00:06,540
good afternoon everybody this is going

00:00:04,350 --> 00:00:11,190
to be architectural automation more

00:00:06,540 --> 00:00:15,150
alligator at a time based on the title

00:00:11,190 --> 00:00:18,740
is inspired a quote from a customer

00:00:15,150 --> 00:00:22,920
manager but came up with this wonderful

00:00:18,740 --> 00:00:27,090
exploration wonderful line that he

00:00:22,920 --> 00:00:30,199
delivered them to a meeting to try and

00:00:27,090 --> 00:00:33,630
remind everybody that you know

00:00:30,199 --> 00:00:35,250
firefighting firefighting is important

00:00:33,630 --> 00:00:37,649
when you've got a platform that's kind

00:00:35,250 --> 00:00:41,430
of not entirely stable and people depend

00:00:37,649 --> 00:00:43,680
on it but fundamentally the purpose the

00:00:41,430 --> 00:00:45,239
reason you're here is not to fight fires

00:00:43,680 --> 00:00:50,460
its to get to a point where there aren't

00:00:45,239 --> 00:00:52,260
any fires left to be fought so yeah fire

00:00:50,460 --> 00:00:53,879
the fires of the alligators and the

00:00:52,260 --> 00:00:58,890
swamp is what you're trying to get rid

00:00:53,879 --> 00:01:00,719
of ended it in the long run and I like

00:00:58,890 --> 00:01:04,949
that because the alligator thing comes

00:01:00,719 --> 00:01:10,229
across as a decent metaphor and you know

00:01:04,949 --> 00:01:12,119
I spend a significant percentage of my

00:01:10,229 --> 00:01:14,520
life dealing with situations like this

00:01:12,119 --> 00:01:17,070
because you know shadowcats our

00:01:14,520 --> 00:01:19,560
consultancy now the trouble with being a

00:01:17,070 --> 00:01:22,860
consultancy is you know and an early

00:01:19,560 --> 00:01:25,170
stage startup has not that much money

00:01:22,860 --> 00:01:28,049
not that much time really needs to get a

00:01:25,170 --> 00:01:30,509
product out generally they don't have

00:01:28,049 --> 00:01:33,210
the budget to pull in experts to pulling

00:01:30,509 --> 00:01:34,979
consultants to all that all they have

00:01:33,210 --> 00:01:37,380
time all they have the time and money to

00:01:34,979 --> 00:01:39,000
do is burn as harden as fast as possible

00:01:37,380 --> 00:01:40,770
towards getting something that's going

00:01:39,000 --> 00:01:43,439
to make money and that's fair enough

00:01:40,770 --> 00:01:45,570
okay yes you end up accumulating a lot

00:01:43,439 --> 00:01:48,540
of technical debt in the process of

00:01:45,570 --> 00:01:51,030
doing that but the other put the other

00:01:48,540 --> 00:01:52,619
point of view is technical debt sure as

00:01:51,030 --> 00:01:57,119
hell beats running out of money before

00:01:52,619 --> 00:01:59,880
you get this thing working every every

00:01:57,119 --> 00:02:02,399
single customer every single Shadowcat

00:01:59,880 --> 00:02:04,290
customers starts off with we're really

00:02:02,399 --> 00:02:08,160
sorry the codes a bit of a mess it's

00:02:04,290 --> 00:02:10,410
like yeah and it's also doing something

00:02:08,160 --> 00:02:11,460
users ones enough to be able to make

00:02:10,410 --> 00:02:13,560
enough money

00:02:11,460 --> 00:02:19,980
to pay us to help you make it not a mess

00:02:13,560 --> 00:02:21,930
you did something right here that's the

00:02:19,980 --> 00:02:23,180
thing though you sometimes technical

00:02:21,930 --> 00:02:26,160
debt is something you can't avoid

00:02:23,180 --> 00:02:27,900
sometimes it's simply the fact that when

00:02:26,160 --> 00:02:29,670
you started the government would be when

00:02:27,900 --> 00:02:31,520
the company was started when the team

00:02:29,670 --> 00:02:33,810
was started when the project was started

00:02:31,520 --> 00:02:37,080
people simply didn't have the experience

00:02:33,810 --> 00:02:40,740
to realize that they were making a

00:02:37,080 --> 00:02:42,780
massive mass our shed up when when

00:02:40,740 --> 00:02:45,830
Shadowcat first haider sysadmin he took

00:02:42,780 --> 00:02:48,900
one look at the server that I've been

00:02:45,830 --> 00:02:54,240
well administrating is probably an

00:02:48,900 --> 00:02:56,970
optimistic word in bigger bait because

00:02:54,240 --> 00:02:59,430
basically it was it was a question of my

00:02:56,970 --> 00:03:01,560
copious free time I hit it with a stick

00:02:59,430 --> 00:03:05,060
until it did basically what I wanted and

00:03:01,560 --> 00:03:09,170
then went back to doing customer work so

00:03:05,060 --> 00:03:12,180
you know I I have made such a mess and

00:03:09,170 --> 00:03:14,100
it's now being I think seven years since

00:03:12,180 --> 00:03:17,550
we hired him and he still won't let me

00:03:14,100 --> 00:03:19,980
forget the mess that machine was it then

00:03:17,550 --> 00:03:22,800
again he did manage to find about 120

00:03:19,980 --> 00:03:25,260
files called httpd.conf of which about

00:03:22,800 --> 00:03:29,940
75 were integral to the running of the

00:03:25,260 --> 00:03:35,310
system so anyway so this had this

00:03:29,940 --> 00:03:37,650
happens to all of us but you'd its a

00:03:35,310 --> 00:03:40,230
mess with happy customers you know you

00:03:37,650 --> 00:03:42,840
now you need to fix it but you need to

00:03:40,230 --> 00:03:47,520
fix it while adding features and without

00:03:42,840 --> 00:03:52,470
breaking it yeah okay it's not as hard

00:03:47,520 --> 00:03:56,100
as it sounds slep 0 what servers do we

00:03:52,470 --> 00:04:00,540
even have seriously I've run into this

00:03:56,100 --> 00:04:03,720
problem we know what most of the servers

00:04:00,540 --> 00:04:06,030
are but with you but the okay your data

00:04:03,720 --> 00:04:08,220
center bless them will be able to give

00:04:06,030 --> 00:04:10,590
you a list if you've got color if you

00:04:08,220 --> 00:04:13,710
got closer of EVS provider then there's

00:04:10,590 --> 00:04:16,109
going to be an API the moment when you

00:04:13,710 --> 00:04:19,430
pull a list out of ec2 and go well I

00:04:16,109 --> 00:04:21,690
recognized most of these

00:04:19,430 --> 00:04:22,860
this is the point of which you realize

00:04:21,690 --> 00:04:26,190
this is going to be an interesting

00:04:22,860 --> 00:04:28,230
exercise and but you can you can start

00:04:26,190 --> 00:04:31,080
from there get a definitive list because

00:04:28,230 --> 00:04:32,490
there's always one you forgot about you

00:04:31,080 --> 00:04:34,290
know either even in the best managed

00:04:32,490 --> 00:04:36,630
systems there's always going to be one

00:04:34,290 --> 00:04:38,550
that snuck under the radar and you can

00:04:36,630 --> 00:04:43,020
absolutely bet production depends on it

00:04:38,550 --> 00:04:46,200
and there's no slave okay that done step

00:04:43,020 --> 00:04:48,450
one we need to figure out what we're

00:04:46,200 --> 00:04:49,620
actually running high there's actually a

00:04:48,450 --> 00:04:51,510
clock on there I don't need a little

00:04:49,620 --> 00:04:54,510
cool need to figure out what we're

00:04:51,510 --> 00:04:56,400
running okay both bonus points at this

00:04:54,510 --> 00:04:57,840
stage if the guy who actually had the

00:04:56,400 --> 00:05:02,040
system architecture in his head has

00:04:57,840 --> 00:05:07,260
already left the company that that that

00:05:02,040 --> 00:05:09,030
happens to us about one time in three on

00:05:07,260 --> 00:05:11,220
the other hand often that means his

00:05:09,030 --> 00:05:12,930
salary ends up being part of out ends up

00:05:11,220 --> 00:05:16,860
being part of our invoicing so I can't

00:05:12,930 --> 00:05:18,870
actually complain but oh god alright yet

00:05:16,860 --> 00:05:22,140
so where do you go well you go to the

00:05:18,870 --> 00:05:24,210
system documentation obviously because

00:05:22,140 --> 00:05:26,010
clearly in a start-up that's been

00:05:24,210 --> 00:05:27,930
accumulating technical debt the

00:05:26,010 --> 00:05:29,940
documentation is going to be complete

00:05:27,930 --> 00:05:33,000
coherent and completely up to date I

00:05:29,940 --> 00:05:36,690
love that's bound to happen right not a

00:05:33,000 --> 00:05:38,610
chance though that the only real source

00:05:36,690 --> 00:05:42,570
of truth as to what your systems are

00:05:38,610 --> 00:05:45,270
running is the systems so you're going

00:05:42,570 --> 00:05:48,600
to have to go and ask them first

00:05:45,270 --> 00:05:52,020
question is what's installed well be PKG

00:05:48,600 --> 00:05:57,540
can tell you or you know if you're in

00:05:52,020 --> 00:05:59,520
our hell then RPM can tell you if you're

00:05:57,540 --> 00:06:01,580
on Windows hire somebody else I don't

00:05:59,520 --> 00:06:16,520
want to know

00:06:01,580 --> 00:06:18,530
oh just know if you're if you're on a

00:06:16,520 --> 00:06:20,330
sex then you probably need to ask all

00:06:18,530 --> 00:06:21,740
three of the different packaging systems

00:06:20,330 --> 00:06:24,889
you had to install to get everything

00:06:21,740 --> 00:06:27,199
working I'm not a hundred percent sure

00:06:24,889 --> 00:06:32,509
of the commands for that one I dearly

00:06:27,199 --> 00:06:33,889
love my I mike i call it the TV but

00:06:32,509 --> 00:06:35,599
seriously that there's going to be some

00:06:33,889 --> 00:06:39,110
way of asking the operating system so

00:06:35,599 --> 00:06:41,690
get the list for a bonus this this would

00:06:39,110 --> 00:06:44,719
be a good moment to dip to diff the

00:06:41,690 --> 00:06:46,930
lists and discover how and discover how

00:06:44,719 --> 00:06:50,060
many different configurations you out

00:06:46,930 --> 00:06:52,219
because I'm willing to bet at this stage

00:06:50,060 --> 00:06:54,199
if you have for web servers then you

00:06:52,219 --> 00:06:58,310
have at least three different sets of

00:06:54,199 --> 00:07:00,409
packages but you know again you can get

00:06:58,310 --> 00:07:03,379
the information next thing is okay your

00:07:00,409 --> 00:07:07,190
custom code this this this is fine right

00:07:03,379 --> 00:07:09,139
up until the point of you probably

00:07:07,190 --> 00:07:11,270
deployed out of git repositories and

00:07:09,139 --> 00:07:12,919
again there will be one service

00:07:11,270 --> 00:07:15,710
somewhere that somebody checked out of a

00:07:12,919 --> 00:07:18,050
repository set up business is using it

00:07:15,710 --> 00:07:19,520
nobody's asked for a feature on it for a

00:07:18,050 --> 00:07:21,830
year so everybody's forgotten it was

00:07:19,520 --> 00:07:24,050
there so you're getting again you need

00:07:21,830 --> 00:07:27,560
to go hunting if you want to find

00:07:24,050 --> 00:07:29,569
repositories the easy way is literally

00:07:27,560 --> 00:07:34,400
run a locate for don't get directories

00:07:29,569 --> 00:07:39,110
or don't svn or whatever if it's a Darcy

00:07:34,400 --> 00:07:43,159
s directory welcome to 1995 I'm not

00:07:39,110 --> 00:07:45,289
entirely sure why you did that but again

00:07:43,159 --> 00:07:47,960
you can go you can find you can find the

00:07:45,289 --> 00:07:51,229
list now you need to figure out where it

00:07:47,960 --> 00:07:53,779
came from there's two possibilities for

00:07:51,229 --> 00:07:55,629
doing that depending well depending on

00:07:53,779 --> 00:07:58,520
which sort of him saying you want to me

00:07:55,629 --> 00:08:02,000
you can either pass not get / configure

00:07:58,520 --> 00:08:04,460
yourself or you can run git remote minus

00:08:02,000 --> 00:08:06,710
V to get a list what we've generally

00:08:04,460 --> 00:08:09,199
found is you're best off puzzling get /

00:08:06,710 --> 00:08:11,800
config first and then running a buncha

00:08:09,199 --> 00:08:15,560
git commands based on the data in that

00:08:11,800 --> 00:08:17,210
because III

00:08:15,560 --> 00:08:19,370
about anybody else but I find it very

00:08:17,210 --> 00:08:21,530
difficult to remember which bits of get

00:08:19,370 --> 00:08:23,480
our infrastructure where the output

00:08:21,530 --> 00:08:25,280
format is guaranteed and which bits of

00:08:23,480 --> 00:08:27,200
porcelain where they're going to make it

00:08:25,280 --> 00:08:28,550
slightly less confusing in the next

00:08:27,200 --> 00:08:31,160
release and then the pass is going to

00:08:28,550 --> 00:08:35,779
break whereas don't get / config stays

00:08:31,160 --> 00:08:38,919
pretty constant and then the question is

00:08:35,779 --> 00:08:41,419
is this a true true version of anything

00:08:38,919 --> 00:08:44,330
because it probably isn't cuz nobody's

00:08:41,419 --> 00:08:46,279
updated it for a while so you're going

00:08:44,330 --> 00:08:48,710
to want to apply git status and get log

00:08:46,279 --> 00:08:51,620
to figure out which branch it's from how

00:08:48,710 --> 00:08:54,410
many revisions behind is it and then you

00:08:51,620 --> 00:08:57,130
then you must run git diff because there

00:08:54,410 --> 00:09:00,380
will be again there will be one at least

00:08:57,130 --> 00:09:03,050
service where somebody to fix an outage

00:09:00,380 --> 00:09:04,670
three in the morning edited that edited

00:09:03,050 --> 00:09:06,470
the live code on the production server

00:09:04,670 --> 00:09:10,040
and then forgot to check it in when they

00:09:06,470 --> 00:09:12,830
got up in the morning where I you know

00:09:10,040 --> 00:09:14,920
and let he who has never been guilty of

00:09:12,830 --> 00:09:19,070
these things cast the first stone but

00:09:14,920 --> 00:09:22,460
there's always one so just assume it you

00:09:19,070 --> 00:09:24,830
know that my standard rule when doing

00:09:22,460 --> 00:09:27,020
this sort of stuff is think about every

00:09:24,830 --> 00:09:30,230
single stupid and horrible mistake I've

00:09:27,020 --> 00:09:32,089
made in my entire career and assume that

00:09:30,230 --> 00:09:36,080
somewhere along the line we've made all

00:09:32,089 --> 00:09:37,580
of them on this system because it that

00:09:36,080 --> 00:09:40,910
gives me quite a long list of horrible

00:09:37,580 --> 00:09:42,490
mistakes to look out four of them in the

00:09:40,910 --> 00:09:44,570
definition of a junior consultant

00:09:42,490 --> 00:09:47,180
somebody who sells you the benefit of

00:09:44,570 --> 00:09:49,220
their mistakes definition of a senior

00:09:47,180 --> 00:09:50,780
consultant some of you sells you the

00:09:49,220 --> 00:09:55,550
benefit of their and their previous

00:09:50,780 --> 00:09:56,690
customers mistakes anyway and you're

00:09:55,550 --> 00:09:59,600
probably going to have going to our

00:09:56,690 --> 00:10:01,730
package trees in a local lab okay some

00:09:59,600 --> 00:10:05,360
some of you may have built built rpms or

00:10:01,730 --> 00:10:06,860
devs of everything I generally find that

00:10:05,360 --> 00:10:08,900
people haven't because they want the

00:10:06,860 --> 00:10:10,339
dependencies alongside the application

00:10:08,900 --> 00:10:12,380
so they can upgrade them independently

00:10:10,339 --> 00:10:16,910
so you've got a local lab and it's got

00:10:12,380 --> 00:10:19,640
stuff in it yeah okay in theory somebody

00:10:16,910 --> 00:10:22,220
may have used carton do you want to bet

00:10:19,640 --> 00:10:23,930
on that do you want the Bears aren't bet

00:10:22,220 --> 00:10:25,520
that nobody has forgotten they were

00:10:23,930 --> 00:10:26,450
using carton and install the package

00:10:25,520 --> 00:10:29,690
manually

00:10:26,450 --> 00:10:30,980
I don't bet on it believe me so all

00:10:29,690 --> 00:10:34,160
right we need to figure out what's in

00:10:30,980 --> 00:10:35,600
there so my first thought when I was

00:10:34,160 --> 00:10:38,450
looking at this problem was what about

00:10:35,600 --> 00:10:40,190
the local pod because you know that

00:10:38,450 --> 00:10:41,690
lists everything that's been installed

00:10:40,190 --> 00:10:46,970
provided it was installed with mate

00:10:41,690 --> 00:10:48,950
maker it is not possible to have a

00:10:46,970 --> 00:10:53,120
module build free dependency jane as

00:10:48,950 --> 00:10:55,100
such / local is useless so what do you

00:10:53,120 --> 00:10:56,810
do well you can go groveling for patch

00:10:55,100 --> 00:10:59,390
list but they only tell you what files

00:10:56,810 --> 00:11:02,720
you can go passing into the pattern to

00:10:59,390 --> 00:11:04,880
the package files into the actual files

00:11:02,720 --> 00:11:07,310
look for package declarations ok there's

00:11:04,880 --> 00:11:09,530
modules to help you do that that's great

00:11:07,310 --> 00:11:11,210
provided you've only got pristine

00:11:09,530 --> 00:11:14,030
versions of distributions rather than

00:11:11,210 --> 00:11:17,120
maybe a patch version again don't assume

00:11:14,030 --> 00:11:19,640
that that hasn't happened and they did

00:11:17,120 --> 00:11:25,130
it gets into all sorts of them horror

00:11:19,640 --> 00:11:27,020
and and fascination fortunately Finn

00:11:25,130 --> 00:11:28,640
bonks already plumb the depths of this

00:11:27,020 --> 00:11:32,420
horror and producer think eldest

00:11:28,640 --> 00:11:35,990
surveyor and this severe through a

00:11:32,420 --> 00:11:38,300
combination of pausing share calling out

00:11:35,990 --> 00:11:41,320
to the meta Sipan API and some and some

00:11:38,300 --> 00:11:43,880
fairly inspired heuristics and guesswork

00:11:41,320 --> 00:11:45,740
will cut will come up with a pretty

00:11:43,880 --> 00:11:49,910
solid list of everything that's

00:11:45,740 --> 00:11:53,030
installed I the warning here is it does

00:11:49,910 --> 00:11:55,310
this by doing clever things and this is

00:11:53,030 --> 00:11:58,130
this is very good but it means it takes

00:11:55,310 --> 00:12:00,230
a while this dis surveyor is not

00:11:58,130 --> 00:12:01,730
something that you run and get an

00:12:00,230 --> 00:12:04,790
immediate response back from it's

00:12:01,730 --> 00:12:06,470
something you run and go for lunch or

00:12:04,790 --> 00:12:08,920
better still run in an automated process

00:12:06,470 --> 00:12:11,300
so it does all of the machines overnight

00:12:08,920 --> 00:12:13,280
something like that but again you can

00:12:11,300 --> 00:12:15,560
get the information out of it so now you

00:12:13,280 --> 00:12:17,270
know where the code is great I'll easy

00:12:15,560 --> 00:12:19,490
now yeah i'm going to minute what

00:12:17,270 --> 00:12:23,960
servers talk to which servers what are

00:12:19,490 --> 00:12:25,280
the dependencies we don't know ok so you

00:12:23,960 --> 00:12:28,640
need to enumerate the running services

00:12:25,280 --> 00:12:32,840
now ok if need be an rcd in an ideal

00:12:28,640 --> 00:12:34,700
world would be sufficient except well

00:12:32,840 --> 00:12:36,500
you know people may have deployed stuff

00:12:34,700 --> 00:12:37,350
under daemon tools under run it they may

00:12:36,500 --> 00:12:41,430
be using

00:12:37,350 --> 00:12:44,160
bec i didn't put onto the slide the the

00:12:41,430 --> 00:12:48,290
traditional favorite of oh look this

00:12:44,160 --> 00:12:48,290
production service runs under screen

00:12:51,920 --> 00:12:56,190
excuse me i'm just going to take a swig

00:12:54,390 --> 00:13:00,440
of coffee to clear up the taste where I

00:12:56,190 --> 00:13:00,440
throw up in my mouth after saying that

00:13:00,890 --> 00:13:08,790
so basically the only thing that you can

00:13:03,600 --> 00:13:12,090
trust is psi X seriously get the process

00:13:08,790 --> 00:13:14,640
list apply less off applying netstat

00:13:12,090 --> 00:13:18,920
that's going to tell you what demons are

00:13:14,640 --> 00:13:21,330
running what files they're using and

00:13:18,920 --> 00:13:23,700
what network connections you've got up

00:13:21,330 --> 00:13:25,980
what files they're using is fascinating

00:13:23,700 --> 00:13:28,230
do that on a running MongoDB instance

00:13:25,980 --> 00:13:33,180
sometime when you stop screaming oh my

00:13:28,230 --> 00:13:35,340
you are there anyway and you can you can

00:13:33,180 --> 00:13:38,820
also dig into / proc which is fine

00:13:35,340 --> 00:13:40,320
assuming you on lenox / proc is great if

00:13:38,820 --> 00:13:44,190
you're on other operating systems it may

00:13:40,320 --> 00:13:46,680
or may not exist but the honestly that

00:13:44,190 --> 00:13:50,850
whatever works you just want to be able

00:13:46,680 --> 00:13:52,350
to get the data because that that should

00:13:50,850 --> 00:13:54,330
give you an idea of all running

00:13:52,350 --> 00:13:56,300
processes all files and all connections

00:13:54,330 --> 00:13:58,950
and now you start cross-referencing

00:13:56,300 --> 00:14:01,860
basically you snapshot all of that

00:13:58,950 --> 00:14:03,510
information on the system every five or

00:14:01,860 --> 00:14:06,210
ten minutes for sort of two or three

00:14:03,510 --> 00:14:08,160
days merge it together and then start

00:14:06,210 --> 00:14:10,520
going through and figuring out how

00:14:08,160 --> 00:14:13,020
everything talks to everything else

00:14:10,520 --> 00:14:16,500
dumping the output into a wiki page is a

00:14:13,020 --> 00:14:20,040
really good idea because it's easy to

00:14:16,500 --> 00:14:23,850
view when you get free history on it the

00:14:20,040 --> 00:14:25,320
media wiki API works fine we'd go to

00:14:23,850 --> 00:14:28,380
talk last year about a thing called

00:14:25,320 --> 00:14:31,410
system into respecter that drives the

00:14:28,380 --> 00:14:33,180
media wiki API to produce reports we've

00:14:31,410 --> 00:14:36,420
been using that a lot we also dumped the

00:14:33,180 --> 00:14:38,490
output into a git repository because

00:14:36,420 --> 00:14:41,220
Jason colon colon disabled is your

00:14:38,490 --> 00:14:44,070
friend it's very simple all it does is

00:14:41,220 --> 00:14:46,380
it a lot is it adds trailing commerce

00:14:44,070 --> 00:14:48,150
which you can still pass in relaxed mode

00:14:46,380 --> 00:14:49,650
so you can load it back in fine and the

00:14:48,150 --> 00:14:49,910
addition of the trailing Gummer's means

00:14:49,650 --> 00:14:52,790
that

00:14:49,910 --> 00:14:54,680
thing diffs properly at which point you

00:14:52,790 --> 00:14:56,060
can apply diff log and blame to watch

00:14:54,680 --> 00:14:58,640
think the information you're gathering

00:14:56,060 --> 00:15:01,400
changing over time grep out the things

00:14:58,640 --> 00:15:05,690
you recognize look at the rest figure

00:15:01,400 --> 00:15:08,030
out what it is repeat again and again

00:15:05,690 --> 00:15:10,930
and again until you actually recognize

00:15:08,030 --> 00:15:13,190
everything that's running on your system

00:15:10,930 --> 00:15:14,660
bonus points can be earned here by

00:15:13,190 --> 00:15:15,980
discovering that one of the things is a

00:15:14,660 --> 00:15:19,610
botnet because somebody forgot a

00:15:15,980 --> 00:15:22,340
security update by the way all these

00:15:19,610 --> 00:15:27,380
bonus point things I've scored at least

00:15:22,340 --> 00:15:29,180
once anyway so now we know we know what

00:15:27,380 --> 00:15:30,680
what talks to what and why and you've

00:15:29,180 --> 00:15:33,140
actually got a diagram of your overall

00:15:30,680 --> 00:15:35,360
architecture you now have the

00:15:33,140 --> 00:15:37,870
documentation that you would have heard

00:15:35,360 --> 00:15:40,310
the you it you plan to have originally

00:15:37,870 --> 00:15:42,650
but never got around to keeping up today

00:15:40,310 --> 00:15:45,050
I'm better still because you inferred it

00:15:42,650 --> 00:15:48,770
from the live system you actually know

00:15:45,050 --> 00:15:50,270
it means it matches up to reality which

00:15:48,770 --> 00:15:55,750
is you're normally not true of any

00:15:50,270 --> 00:15:58,340
documentation anywhere so one more thing

00:15:55,750 --> 00:16:00,470
grab anything that looks like it might

00:15:58,340 --> 00:16:03,350
possibly be a config file for IP

00:16:00,470 --> 00:16:06,110
addresses this is an important step

00:16:03,350 --> 00:16:07,910
because there will be one somewhere and

00:16:06,110 --> 00:16:09,770
you are not going to be able to migrate

00:16:07,910 --> 00:16:12,020
anything if you got hard coded IP

00:16:09,770 --> 00:16:16,790
addresses and stuff that that is going

00:16:12,020 --> 00:16:18,220
to screw you at some point really I'm no

00:16:16,790 --> 00:16:20,900
matter how careful you think you've been

00:16:18,220 --> 00:16:23,180
there will be one somewhere just just

00:16:20,900 --> 00:16:26,450
just crap for them it's not difficult to

00:16:23,180 --> 00:16:31,520
get to find a regex that matches dotted

00:16:26,450 --> 00:16:33,680
quarter pays did depend depending on how

00:16:31,520 --> 00:16:36,470
on how on how in saying your internal

00:16:33,680 --> 00:16:39,470
networking is you also may want to find

00:16:36,470 --> 00:16:42,770
a regex for ipv6 addresses but my

00:16:39,470 --> 00:16:45,500
experience so far is that i've never

00:16:42,770 --> 00:16:47,120
seen a VoIP ev6 address in a config file

00:16:45,500 --> 00:16:49,600
because the hopes name is actually less

00:16:47,120 --> 00:16:49,600
typos

00:16:49,690 --> 00:16:55,930
so it doesn't have quite the same appeal

00:16:52,460 --> 00:16:59,630
to lazy people in a hurry the ipv4 does

00:16:55,930 --> 00:17:01,760
and then finally step 3 of this part of

00:16:59,630 --> 00:17:05,110
the process go and find a beer two

00:17:01,760 --> 00:17:10,220
cranes you deserve one at this point

00:17:05,110 --> 00:17:15,470
okay um so that that's the discovery

00:17:10,220 --> 00:17:20,780
process I want to go I want to go back

00:17:15,470 --> 00:17:23,030
to this quote for a moment because the

00:17:20,780 --> 00:17:26,810
guy who came up with it with with with

00:17:23,030 --> 00:17:28,970
that was only Bill Walton who did his

00:17:26,810 --> 00:17:30,740
IRC nickname was wild bills so that

00:17:28,970 --> 00:17:33,410
that's that's that's the index in my

00:17:30,740 --> 00:17:35,780
head remember I can't do real people

00:17:33,410 --> 00:17:42,650
names I index people by IP addresses but

00:17:35,780 --> 00:17:45,320
not I Peter IRC nicknames they don't

00:17:42,650 --> 00:17:49,280
start with an i what evidently I need

00:17:45,320 --> 00:17:51,920
more coughing moment well no seriously I

00:17:49,280 --> 00:17:53,300
index people by arsenic and email

00:17:51,920 --> 00:17:55,310
address it works better for me but

00:17:53,300 --> 00:18:01,250
anyway so I would well built was a

00:17:55,310 --> 00:18:05,000
manager with a customer of ours I also

00:18:01,250 --> 00:18:06,650
mad tax and master grateful came up with

00:18:05,000 --> 00:18:09,410
a lot with it used to come out with a

00:18:06,650 --> 00:18:13,270
lot of these metaphors and when when

00:18:09,410 --> 00:18:15,800
lent very heavily on the folksy

00:18:13,270 --> 00:18:17,930
specifically because that makes them

00:18:15,800 --> 00:18:21,710
much more memorable and much more

00:18:17,930 --> 00:18:23,150
accessible I me know the the point at

00:18:21,710 --> 00:18:25,760
which i realized i was going to enjoy

00:18:23,150 --> 00:18:29,870
working with this guy was when on the

00:18:25,760 --> 00:18:32,060
original cool with me him and MDK his

00:18:29,870 --> 00:18:36,370
comment about what happens if you let a

00:18:32,060 --> 00:18:36,370
Salesman manager technical team was i

00:18:36,850 --> 00:18:41,840
can't i can't do the Texan accent but he

00:18:39,740 --> 00:18:43,610
did but you do you know it's the Gooden

00:18:41,840 --> 00:18:46,490
find his ass with both hands and a

00:18:43,610 --> 00:18:47,930
hunting dog and you just like right yeah

00:18:46,490 --> 00:18:53,330
I'm good I'm going to like working with

00:18:47,930 --> 00:18:55,640
this guy maybe the heel he also rather

00:18:53,330 --> 00:18:57,530
rather than going now I understand their

00:18:55,640 --> 00:19:00,150
stop treating me like an idiot even if i

00:18:57,530 --> 00:19:03,180
do have manager in my title

00:19:00,150 --> 00:19:04,920
and that calming got deployed a few

00:19:03,180 --> 00:19:11,490
times to remind me I didn't need to be

00:19:04,920 --> 00:19:13,790
quite too detailed yeah but I there's a

00:19:11,490 --> 00:19:16,140
serious power to this sort of stuff

00:19:13,790 --> 00:19:18,690
because that that sort of metaphor is

00:19:16,140 --> 00:19:22,350
accessible to managers and to technical

00:19:18,690 --> 00:19:24,690
staff he's the only person I i I've

00:19:22,350 --> 00:19:27,120
encountered in a while who can come up

00:19:24,690 --> 00:19:29,130
with one line that sticks in the head of

00:19:27,120 --> 00:19:31,530
the business side and tech side of a

00:19:29,130 --> 00:19:35,400
meeting and I encourage you to try and

00:19:31,530 --> 00:19:37,620
steal this approach because it's a very

00:19:35,400 --> 00:19:40,170
effective thing and when you're trying

00:19:37,620 --> 00:19:43,860
to get time to do the fixing of servers

00:19:40,170 --> 00:19:46,050
that needs doing that to not need to be

00:19:43,860 --> 00:19:47,790
fire fighting constantly it's quite

00:19:46,050 --> 00:19:49,620
difficult to explain to people yes

00:19:47,790 --> 00:19:52,020
production outages will be slightly

00:19:49,620 --> 00:19:54,420
longer because somebody is focusing on

00:19:52,020 --> 00:19:58,590
making them go away forever but that's

00:19:54,420 --> 00:20:00,660
how you have to invest the time you know

00:19:58,590 --> 00:20:04,170
we have some technical debt is not an

00:20:00,660 --> 00:20:06,810
accessible statement but where is this

00:20:04,170 --> 00:20:11,540
is a swamp yeah most people get a

00:20:06,810 --> 00:20:15,360
visceral understanding of that one and

00:20:11,540 --> 00:20:16,710
so I wanted I say thank you vote for him

00:20:15,360 --> 00:20:21,540
to inspire the talk and they did the

00:20:16,710 --> 00:20:23,280
other the other reason is this has not

00:20:21,540 --> 00:20:27,660
been a good year for people getting

00:20:23,280 --> 00:20:29,790
cancer so sadly rather than rather than

00:20:27,660 --> 00:20:31,920
meeting him for a beer after that after

00:20:29,790 --> 00:20:34,560
this tour can getting to thank him for a

00:20:31,920 --> 00:20:38,000
bit for stealing it all I can do is

00:20:34,560 --> 00:20:38,000
dedicate the talk to him oh

00:20:47,300 --> 00:20:53,520
moving on so we now have a good idea of

00:20:51,390 --> 00:20:55,020
what systems we have what packages what

00:20:53,520 --> 00:20:58,470
code what services and what their

00:20:55,020 --> 00:21:03,260
dependencies are okay cool so now you

00:20:58,470 --> 00:21:06,090
can start planning the first thing

00:21:03,260 --> 00:21:07,230
seriously consider using fresh machines

00:21:06,090 --> 00:21:11,130
if you can if you want a cloud provider

00:21:07,230 --> 00:21:14,100
then it's just sensible if you're in a

00:21:11,130 --> 00:21:17,340
Colo see if you can see see if you can

00:21:14,100 --> 00:21:19,470
negotiate with them to basically sort of

00:21:17,340 --> 00:21:22,980
daisy chain moving machines along across

00:21:19,470 --> 00:21:24,810
hardware just because your existing

00:21:22,980 --> 00:21:27,030
systems are bound to be missing security

00:21:24,810 --> 00:21:30,540
fixes they're bound to have had odd

00:21:27,030 --> 00:21:32,610
things done to them at some point but

00:21:30,540 --> 00:21:36,270
all of that investigating you did last I

00:21:32,610 --> 00:21:38,190
missed and it's generally best to assume

00:21:36,270 --> 00:21:40,200
the worst and try and start greenfield

00:21:38,190 --> 00:21:43,440
to produce something that you know that

00:21:40,200 --> 00:21:45,390
you know is under control but you know

00:21:43,440 --> 00:21:47,700
that the point is a fresh install you

00:21:45,390 --> 00:21:49,530
know exactly what's on there not knowing

00:21:47,700 --> 00:21:52,530
exactly what's on there is why you

00:21:49,530 --> 00:21:55,890
currently have a problem so it's very

00:21:52,530 --> 00:21:58,770
much worthwhile if you can do it if you

00:21:55,890 --> 00:22:01,860
have to do it on machines in place it is

00:21:58,770 --> 00:22:03,900
possible to do is say addy bootstrap and

00:22:01,860 --> 00:22:07,950
then pivot route into it without

00:22:03,900 --> 00:22:10,860
actually taking the system damn this is

00:22:07,950 --> 00:22:12,690
an interesting exercise and requires

00:22:10,860 --> 00:22:16,370
quite a lot quite a lot of coffee and

00:22:12,690 --> 00:22:19,800
strong nerves but it is possible but I'm

00:22:16,370 --> 00:22:21,510
suspecting that in a lot of cases you'll

00:22:19,800 --> 00:22:24,500
be able to use fresh machines if you

00:22:21,510 --> 00:22:28,470
can't just do that it's so much easier

00:22:24,500 --> 00:22:32,190
and now now it's a question of take take

00:22:28,470 --> 00:22:34,050
problems one at once so one service at a

00:22:32,190 --> 00:22:35,820
time don't try and move two things at

00:22:34,050 --> 00:22:37,920
once never try and move two things at

00:22:35,820 --> 00:22:40,440
once any time you try and move two

00:22:37,920 --> 00:22:44,550
things at once they will both break it

00:22:40,440 --> 00:22:46,860
is guaranteed and not another thing to

00:22:44,550 --> 00:22:49,220
bear in mind this firewalling isn't just

00:22:46,860 --> 00:22:52,170
a security measure at this point right

00:22:49,220 --> 00:22:54,810
restrictive firewall lang is a really

00:22:52,170 --> 00:22:56,430
good way of keeping you honest because

00:22:54,810 --> 00:22:57,530
if you have a machine that you didn't

00:22:56,430 --> 00:22:59,360
think

00:22:57,530 --> 00:23:01,210
you know if you if you have an

00:22:59,360 --> 00:23:05,000
interdependence e you don't know about

00:23:01,210 --> 00:23:07,610
the firewall a strong firewall policy is

00:23:05,000 --> 00:23:10,280
going to make that break at which point

00:23:07,610 --> 00:23:13,490
you'll notice it as opposed to it going

00:23:10,280 --> 00:23:18,350
unnoticed until some point later on when

00:23:13,490 --> 00:23:22,580
it wakes you up at 3am so approaches to

00:23:18,350 --> 00:23:24,170
automation i am i am i am not actually

00:23:22,580 --> 00:23:27,130
going to express much of an opinion

00:23:24,170 --> 00:23:29,870
apart from pick something pull based I

00:23:27,130 --> 00:23:32,000
don't care what I honestly just just

00:23:29,870 --> 00:23:35,540
find something pull base make sense to

00:23:32,000 --> 00:23:37,880
you overall sysadmin seem to prefer

00:23:35,540 --> 00:23:42,530
puppet and developers seem to prefer

00:23:37,880 --> 00:23:45,320
chef overall that's not like a strong

00:23:42,530 --> 00:23:48,290
thing that there was a long discussion

00:23:45,320 --> 00:23:50,150
internally at Shadowcat between a dev

00:23:48,290 --> 00:23:52,010
we've been reading through the chef docs

00:23:50,150 --> 00:23:54,080
and a sysadmin have been meeting through

00:23:52,010 --> 00:23:57,560
the puppet docs and they basically

00:23:54,080 --> 00:24:00,280
concluded that did the core feature set

00:23:57,560 --> 00:24:02,900
is about ninety-five percent identical

00:24:00,280 --> 00:24:04,700
and at this at this point you're not

00:24:02,900 --> 00:24:06,320
trying to do anything clever you're just

00:24:04,700 --> 00:24:09,350
trying to get the basics under control

00:24:06,320 --> 00:24:11,720
so and you know there's there's other

00:24:09,350 --> 00:24:14,450
options as well find one that makes

00:24:11,720 --> 00:24:18,260
sense to you and go for it the important

00:24:14,450 --> 00:24:19,790
thing is to have one at all the other

00:24:18,260 --> 00:24:22,490
than the essential thing is make sure

00:24:19,790 --> 00:24:25,100
it's pull based do not if you can

00:24:22,490 --> 00:24:28,010
possibly avoid it will I on a push based

00:24:25,100 --> 00:24:30,320
management approach because the thing is

00:24:28,010 --> 00:24:33,170
pull bae systems converge blue bae

00:24:30,320 --> 00:24:37,430
systems always basically tend towards

00:24:33,170 --> 00:24:40,580
being in the right state if the system's

00:24:37,430 --> 00:24:42,440
down when an update goes out a push play

00:24:40,580 --> 00:24:44,990
system will miss it if there's a network

00:24:42,440 --> 00:24:47,420
blip a post based system can mess it if

00:24:44,990 --> 00:24:49,160
the system is just too overloaded to

00:24:47,420 --> 00:24:51,650
apply the thing again a post based

00:24:49,160 --> 00:24:54,800
system can mess it when you add a news

00:24:51,650 --> 00:24:56,870
machine well that's never seen any of

00:24:54,800 --> 00:24:59,630
the pushes and you have to remember to

00:24:56,870 --> 00:25:02,720
run it whereas if you're using a

00:24:59,630 --> 00:25:04,730
pullback system worst-case scenario half

00:25:02,720 --> 00:25:09,240
an hour later it picks up the update

00:25:04,730 --> 00:25:11,290
anyway so just just

00:25:09,240 --> 00:25:12,850
push-based is going to give you more

00:25:11,290 --> 00:25:15,220
problems and most of the pull bait

00:25:12,850 --> 00:25:17,110
systems now have a way to kick it and

00:25:15,220 --> 00:25:19,720
say please update immediately rather

00:25:17,110 --> 00:25:22,510
than the next time the cron job runs so

00:25:19,720 --> 00:25:24,850
you can get you can get ninety-eight

00:25:22,510 --> 00:25:29,340
percent of the way to push but still get

00:25:24,850 --> 00:25:32,380
all the advantages of pull so yeah I'm

00:25:29,340 --> 00:25:34,570
not going to get into holy wars over

00:25:32,380 --> 00:25:37,510
this because I my current point of view

00:25:34,570 --> 00:25:40,590
is I hate all of the current systems or

00:25:37,510 --> 00:25:43,390
amasian things but thatthat's thatthat's

00:25:40,590 --> 00:25:47,950
that's the Pearl hacker in me wanting to

00:25:43,390 --> 00:25:49,660
write yet another one for the for the

00:25:47,950 --> 00:25:53,200
perp for the purposes that we are facing

00:25:49,660 --> 00:25:54,880
at the moment heck I mean there's a

00:25:53,200 --> 00:25:57,670
there's a pill base one called slaughter

00:25:54,880 --> 00:26:02,080
that apparently works reasonably there's

00:25:57,670 --> 00:26:04,240
CF engine there's BC FG to which has the

00:26:02,080 --> 00:26:06,820
most heinous config files in touch you

00:26:04,240 --> 00:26:10,810
will ever see in your life that actually

00:26:06,820 --> 00:26:18,250
works really well there's there's

00:26:10,810 --> 00:26:21,940
there's there's racks I've read the

00:26:18,250 --> 00:26:23,980
source code to Rex once then I went and

00:26:21,940 --> 00:26:32,890
read the PHP BB to source code to

00:26:23,980 --> 00:26:36,390
cleanse my brain on the other hand again

00:26:32,890 --> 00:26:39,070
it works you gonna do it I mean I I

00:26:36,390 --> 00:26:41,020
suspect if I if I red ruby as well as I

00:26:39,070 --> 00:26:43,270
red pearl I'd probably find some howlers

00:26:41,020 --> 00:26:46,090
in the Ruby ones as well so yeah you

00:26:43,270 --> 00:26:50,590
just just Google pick something it'll be

00:26:46,090 --> 00:26:53,680
fine configuration generation okay they

00:26:50,590 --> 00:26:56,770
can whatever tool you pet can probably

00:26:53,680 --> 00:26:59,410
Drive templating but it can also almost

00:26:56,770 --> 00:27:02,740
certainly call scripts so that there's

00:26:59,410 --> 00:27:05,080
there's absolutely no reason to convert

00:27:02,740 --> 00:27:08,440
to their templating system if you know

00:27:05,080 --> 00:27:10,300
TT just use TT also then you end up with

00:27:08,440 --> 00:27:11,920
a small perl script you can hook into a

00:27:10,300 --> 00:27:15,100
make file or a distiller build or

00:27:11,920 --> 00:27:16,840
whatever and run on development side

00:27:15,100 --> 00:27:18,910
because you don't really want to run

00:27:16,840 --> 00:27:19,730
your full systems automation to set up a

00:27:18,910 --> 00:27:21,830
dev instant

00:27:19,730 --> 00:27:23,750
but you probably do want your dev

00:27:21,830 --> 00:27:26,630
instances config files to be generated

00:27:23,750 --> 00:27:30,950
the same way so have a think about that

00:27:26,630 --> 00:27:34,340
and again pick something that works it's

00:27:30,950 --> 00:27:36,830
a lot easier to replace a systems

00:27:34,340 --> 00:27:38,900
automation architecture with a better

00:27:36,830 --> 00:27:40,550
systems automation architecture than it

00:27:38,900 --> 00:27:42,770
is to get the first one in in the first

00:27:40,550 --> 00:27:46,580
place and that that's that's very much

00:27:42,770 --> 00:27:47,990
the focus here the other thing is

00:27:46,580 --> 00:27:50,780
through through this entire process

00:27:47,990 --> 00:27:54,430
there is an important rule of thumb do

00:27:50,780 --> 00:28:00,830
not be clever clever leads to exciting

00:27:54,430 --> 00:28:05,720
being paged 3am is exciting but it's not

00:28:00,830 --> 00:28:07,850
what you were looking for I I end up

00:28:05,720 --> 00:28:12,350
saying this to developers over and over

00:28:07,850 --> 00:28:14,360
and over again you if this is a systems

00:28:12,350 --> 00:28:19,370
problem you appear to be trying to be

00:28:14,360 --> 00:28:22,640
clever stop now you know you know that

00:28:19,370 --> 00:28:24,620
you know that the old adage you need to

00:28:22,640 --> 00:28:28,130
be twice as smart to debug something as

00:28:24,620 --> 00:28:31,850
to write it in the first place bear in

00:28:28,130 --> 00:28:34,160
mind that and systems problems always

00:28:31,850 --> 00:28:36,230
happen at three in the morning so you

00:28:34,160 --> 00:28:38,870
need to be you need to be not only twice

00:28:36,230 --> 00:28:41,900
as smart but twice as smart while when

00:28:38,870 --> 00:28:43,940
you've just been woken up at 3am this

00:28:41,900 --> 00:28:46,850
indicates you need to you need to stick

00:28:43,940 --> 00:28:48,710
to at most about twenty-five percent of

00:28:46,850 --> 00:28:50,660
your intellectual capacity in terms of

00:28:48,710 --> 00:28:54,530
the original design any more than that

00:28:50,660 --> 00:29:00,050
is too much clever for systems okay so

00:28:54,530 --> 00:29:04,520
step 0 kill with fire those IP addresses

00:29:00,050 --> 00:29:06,680
you found earlier seriously I don't care

00:29:04,520 --> 00:29:09,830
if you have to do that part manually do

00:29:06,680 --> 00:29:11,420
it first just just just seriously do

00:29:09,830 --> 00:29:13,310
that part first otherwise you will

00:29:11,420 --> 00:29:18,920
forget and it will shoot you in the head

00:29:13,310 --> 00:29:20,330
later if your DNS is a mess I knew you

00:29:18,920 --> 00:29:23,540
that's one of the services you have a

00:29:20,330 --> 00:29:26,030
problem with okay choice one is fixed at

00:29:23,540 --> 00:29:28,940
s first but often that's kind of that's

00:29:26,030 --> 00:29:31,820
kind of a scary thing there is an

00:29:28,940 --> 00:29:34,580
alternative it is a stupid alternative

00:29:31,820 --> 00:29:38,780
but it works

00:29:34,580 --> 00:29:42,090
the lowes file our sink it to everything

00:29:38,780 --> 00:29:44,700
better still bill the host file set up a

00:29:42,090 --> 00:29:47,820
cron job but pulls it via our sink every

00:29:44,700 --> 00:29:50,520
hour or so again stick to pull based if

00:29:47,820 --> 00:29:54,530
you can I know I know that's a horrible

00:29:50,520 --> 00:29:57,510
thing to do but if it's a choice between

00:29:54,530 --> 00:29:59,940
between not knowing whether or not the

00:29:57,510 --> 00:30:01,620
day at wobbly DNS is what's causing your

00:29:59,940 --> 00:30:03,570
current problem or whether something you

00:30:01,620 --> 00:30:05,850
just did is causing your current problem

00:30:03,570 --> 00:30:08,820
I'd rather have the rsync hosts file

00:30:05,850 --> 00:30:10,920
yeah it's again it's always a question

00:30:08,820 --> 00:30:12,570
of trying to trying to minimize the the

00:30:10,920 --> 00:30:14,460
unexpected ways things can go wrong

00:30:12,570 --> 00:30:17,610
because you're in a situation where

00:30:14,460 --> 00:30:23,790
there's plenty of expected ways okay so

00:30:17,610 --> 00:30:29,280
step one backup everything yeah somebody

00:30:23,790 --> 00:30:34,650
always says this you're right you did no

00:30:29,280 --> 00:30:36,570
no no and you know even if you think you

00:30:34,650 --> 00:30:38,760
have backups of everything you won't

00:30:36,570 --> 00:30:40,230
have tested them and believe me at the

00:30:38,760 --> 00:30:42,990
point of which you start trying to apply

00:30:40,230 --> 00:30:44,940
back up everything to ec2 you discover

00:30:42,990 --> 00:30:49,020
all sorts of interesting things about

00:30:44,940 --> 00:30:51,420
EBS volumes for values of interesting

00:30:49,020 --> 00:30:56,370
that might relate to a certain Chinese

00:30:51,420 --> 00:31:00,750
curse Oh hardware sucks all software

00:30:56,370 --> 00:31:04,700
sucks and a web-scale the suckage is

00:31:00,750 --> 00:31:04,700
distributed clustered and charted

00:31:06,230 --> 00:31:12,360
so good go check very fight you ever

00:31:09,480 --> 00:31:15,450
reason backup of everything once you've

00:31:12,360 --> 00:31:17,760
done that build new machines with the

00:31:15,450 --> 00:31:19,650
cup with the config stuff just order

00:31:17,760 --> 00:31:22,860
restore the backups on the store the

00:31:19,650 --> 00:31:24,600
backup nature onto them this also means

00:31:22,860 --> 00:31:26,880
you've now actually tested restoring

00:31:24,600 --> 00:31:29,730
your backups this is the step people off

00:31:26,880 --> 00:31:32,090
the mess they they know they're back up

00:31:29,730 --> 00:31:34,500
bro says back something up to somewhere

00:31:32,090 --> 00:31:36,630
but they've forgotten to check that the

00:31:34,500 --> 00:31:39,960
contents of that actually constitute a

00:31:36,630 --> 00:31:46,410
viable backup yes I've been guilty of

00:31:39,960 --> 00:31:47,550
this no that was not a funny day and

00:31:46,410 --> 00:31:49,890
then the other thing is now you know

00:31:47,550 --> 00:31:51,810
you've restored a snapshot you can point

00:31:49,890 --> 00:31:54,450
a development machine at the new systems

00:31:51,810 --> 00:31:56,010
and check that everything works and it's

00:31:54,450 --> 00:31:59,190
fairly important to do that from a

00:31:56,010 --> 00:32:02,010
backup snapshot because you don't you

00:31:59,190 --> 00:32:04,440
and unless you've got a complete set of

00:32:02,010 --> 00:32:06,210
production data in there you don't know

00:32:04,440 --> 00:32:09,020
for sure that those systems will work

00:32:06,210 --> 00:32:11,610
with a complete set of production data

00:32:09,020 --> 00:32:14,820
which is it's a very different thing to

00:32:11,610 --> 00:32:18,720
the sources sort of thing to your usual

00:32:14,820 --> 00:32:20,610
test data load then you make a

00:32:18,720 --> 00:32:22,350
modification assuming it's it's

00:32:20,610 --> 00:32:24,690
clustered all you using slaves or

00:32:22,350 --> 00:32:26,780
whatever go and check that the the

00:32:24,690 --> 00:32:29,640
change made it all the way to the slaves

00:32:26,780 --> 00:32:32,790
by hand if necessary I don't care but

00:32:29,640 --> 00:32:34,080
check at that point you've got a proof

00:32:32,790 --> 00:32:37,320
of concept for this new service

00:32:34,080 --> 00:32:39,150
architecture only at that point now

00:32:37,320 --> 00:32:41,190
you've done that you need to talk you

00:32:39,150 --> 00:32:44,490
it's it's time to think about migrating

00:32:41,190 --> 00:32:47,220
it this is the point where you need to

00:32:44,490 --> 00:32:49,980
develop a migration strategy if it's a

00:32:47,220 --> 00:32:53,520
customer facing service it's probably

00:32:49,980 --> 00:32:56,210
over HTTP at this point you know that

00:32:53,520 --> 00:32:59,250
there are exceptions to that rule but

00:32:56,210 --> 00:33:00,840
ninety-nine percent of the time customer

00:32:59,250 --> 00:33:03,440
facing stuff is to ease channel though

00:33:00,840 --> 00:33:06,000
is tunneled over HTTP one way or another

00:33:03,440 --> 00:33:08,070
now okay if you have low balances or

00:33:06,000 --> 00:33:12,720
whatever there's various things you can

00:33:08,070 --> 00:33:14,550
do to migrate quietly but assuming that

00:33:12,720 --> 00:33:16,230
you know assuming a worst case scenario

00:33:14,550 --> 00:33:17,880
you may not be able to do that and

00:33:16,230 --> 00:33:21,750
there's always the funnel moving the

00:33:17,880 --> 00:33:24,690
load balancer first what thirst will do

00:33:21,750 --> 00:33:26,760
not trust their nests timeouts dropping

00:33:24,690 --> 00:33:29,929
a DNS timeout load to be able to do a

00:33:26,760 --> 00:33:33,510
migration is a great idea in theory but

00:33:29,929 --> 00:33:35,850
in practice you will have customers who

00:33:33,510 --> 00:33:39,179
are behind an ISP who's caching DNS

00:33:35,850 --> 00:33:43,230
servers don't honor timeouts when they

00:33:39,179 --> 00:33:45,630
get too low I I found this out the hard

00:33:43,230 --> 00:33:49,710
way back when I was isp operations when

00:33:45,630 --> 00:33:51,840
I discovered that the British Telecom

00:33:49,710 --> 00:33:55,559
which is the equivalent of the old AT&T

00:33:51,840 --> 00:33:57,179
monopoly over here didn't on a DNS

00:33:55,559 --> 00:34:03,059
timeouts at all they just cashed

00:33:57,179 --> 00:34:08,159
everything for a day you beat beat beat

00:34:03,059 --> 00:34:10,230
er X monopoly used to be run by the

00:34:08,159 --> 00:34:14,669
government now run by even less complete

00:34:10,230 --> 00:34:23,970
complete and private owners Fiat fear

00:34:14,669 --> 00:34:27,300
and loathe accordingly really if anybody

00:34:23,970 --> 00:34:30,240
wants wants to be seat be seriously

00:34:27,300 --> 00:34:32,669
disturbed ask either Chris Nair and or I

00:34:30,240 --> 00:34:34,850
about some of the war stories that we've

00:34:32,669 --> 00:34:38,460
got from trying to deal with BT systems

00:34:34,850 --> 00:34:41,310
mine from back in there my isp days and

00:34:38,460 --> 00:34:43,409
he's from his shadow cat days because I

00:34:41,310 --> 00:34:48,300
went this project involves dealing with

00:34:43,409 --> 00:34:50,460
BT delegate anyway so don't trust their

00:34:48,300 --> 00:34:52,710
nest I'm out and they're about as useful

00:34:50,460 --> 00:34:57,800
as a referrer header seriously instead

00:34:52,710 --> 00:34:57,800
embrace the wonder that is World War to

00:34:58,160 --> 00:35:02,910
start off with you at your service is

00:35:00,840 --> 00:35:06,270
liable more water provision what will

00:35:02,910 --> 00:35:08,220
the two dot now you set that up on a new

00:35:06,270 --> 00:35:11,490
machine and you set it up with redirect

00:35:08,220 --> 00:35:14,580
across the world were right that's just

00:35:11,490 --> 00:35:16,619
that one now you wait you wait a day or

00:35:14,580 --> 00:35:21,060
two so that women would tues DNS is

00:35:16,619 --> 00:35:22,890
reliably propagated now once you've got

00:35:21,060 --> 00:35:25,230
what we're too ready you flip the

00:35:22,890 --> 00:35:29,490
redirect around so everybody hitting

00:35:25,230 --> 00:35:30,130
water gets redirected across if it

00:35:29,490 --> 00:35:32,080
catches for

00:35:30,130 --> 00:35:34,480
yeah you flip the redirect back around

00:35:32,080 --> 00:35:35,950
again everything work everything

00:35:34,480 --> 00:35:38,440
everything goes back to the old thing

00:35:35,950 --> 00:35:40,600
this is the other thing at least one of

00:35:38,440 --> 00:35:43,690
your migrations is going to result in it

00:35:40,600 --> 00:35:46,150
breaking don't push onwards flip back to

00:35:43,690 --> 00:35:48,040
the old one you might lose a few seconds

00:35:46,150 --> 00:35:50,140
worth of rights to the database that way

00:35:48,040 --> 00:35:52,240
but at least your service is back up

00:35:50,140 --> 00:35:55,180
again then figure out what went wrong

00:35:52,240 --> 00:35:57,010
then started again don't just try and

00:35:55,180 --> 00:35:59,230
power through because that results in

00:35:57,010 --> 00:36:01,060
you being in you being sleep-deprived

00:35:59,230 --> 00:36:02,860
and it's still being broken in obscure

00:36:01,060 --> 00:36:07,240
ways when your customers wake up in the

00:36:02,860 --> 00:36:09,670
morning and get very very very upset one

00:36:07,240 --> 00:36:11,170
of the reasons that I'm that I am so

00:36:09,670 --> 00:36:13,000
fond of pulling all-nighters and have

00:36:11,170 --> 00:36:15,520
such a horrible caffeine addiction even

00:36:13,000 --> 00:36:17,350
10 years on is that the money the upper

00:36:15,520 --> 00:36:20,010
management back at the ISPs that I work

00:36:17,350 --> 00:36:22,180
for did not understand this rule anyway

00:36:20,010 --> 00:36:24,250
and now you're going to have to wait

00:36:22,180 --> 00:36:27,160
again because you're waiting for things

00:36:24,250 --> 00:36:28,810
to settle and bear in mind at this point

00:36:27,160 --> 00:36:33,400
you can always switch back to the old

00:36:28,810 --> 00:36:35,680
web cluster because it's still there I i

00:36:33,400 --> 00:36:38,250
have an occasion had managers go but why

00:36:35,680 --> 00:36:41,020
are we paying for two sets of servers

00:36:38,250 --> 00:36:42,670
how much money are we going to lose if

00:36:41,020 --> 00:36:50,530
this breaks and we don't have a way to

00:36:42,670 --> 00:36:52,360
go back Oh alternatively if possible

00:36:50,530 --> 00:36:57,370
just tell them this is this is how we're

00:36:52,360 --> 00:36:59,260
doing it this is the plan in my

00:36:57,370 --> 00:37:00,880
experience an effective relationship

00:36:59,260 --> 00:37:03,190
between management and a technical team

00:37:00,880 --> 00:37:04,420
mostly consists of both sides not

00:37:03,190 --> 00:37:07,920
telling the other side the things

00:37:04,420 --> 00:37:07,920
they're not going to understand anyway

00:37:09,700 --> 00:37:15,800
and now it's you assuming it now hasn't

00:37:12,950 --> 00:37:19,060
for it still hasn't fallen over at this

00:37:15,800 --> 00:37:21,650
point you can flip the DNS entry for for

00:37:19,060 --> 00:37:24,020
the primary one you may wish to consider

00:37:21,650 --> 00:37:26,840
it they're having it somewhere along the

00:37:24,020 --> 00:37:29,200
line added an extra one maybe three that

00:37:26,840 --> 00:37:31,520
points at the old cluster just in case i

00:37:29,200 --> 00:37:33,580
usually don't bother by this point

00:37:31,520 --> 00:37:38,270
either it's going to work or it's not

00:37:33,580 --> 00:37:40,790
and yeah you have to wait again now your

00:37:38,270 --> 00:37:42,830
final step is to flip the woman were to

00:37:40,790 --> 00:37:45,200
redirect to point back to where we were

00:37:42,830 --> 00:37:47,890
so that everybody converges on to the

00:37:45,200 --> 00:37:50,960
right host name on the new location and

00:37:47,890 --> 00:37:55,940
yes the next step might be kind of

00:37:50,960 --> 00:37:59,210
familiar at this point but at that point

00:37:55,940 --> 00:38:03,400
you done yes this is an incredibly

00:37:59,210 --> 00:38:09,020
boring process yes it's numb as a post

00:38:03,400 --> 00:38:14,050
but this is systems exciting is 3am

00:38:09,020 --> 00:38:16,580
pages boring is happily running systems

00:38:14,050 --> 00:38:18,680
internal services was that whole

00:38:16,580 --> 00:38:21,770
difference that have fun ok you can

00:38:18,680 --> 00:38:23,690
trust a an ass but at this point the

00:38:21,770 --> 00:38:26,690
service is probably a database server or

00:38:23,690 --> 00:38:28,940
whatever and now it's stateful ok so

00:38:26,690 --> 00:38:34,670
most of the most such systems do

00:38:28,940 --> 00:38:42,950
master-slave do clustering MongoDB does

00:38:34,670 --> 00:38:45,589
writing to dev null at web scale that

00:38:42,950 --> 00:38:48,140
some somebody did actually put a small

00:38:45,589 --> 00:38:50,359
Python thing up on them github called

00:38:48,140 --> 00:38:53,270
mango DB that literally rights to dev

00:38:50,359 --> 00:38:55,010
null it's marginally easier to

00:38:53,270 --> 00:39:03,530
administrate but very similar in the

00:38:55,010 --> 00:39:06,530
results that so ok in some cases you can

00:39:03,530 --> 00:39:10,040
use switch across promote a slave to a

00:39:06,530 --> 00:39:12,650
master and slave training oh now all of

00:39:10,040 --> 00:39:14,540
this stuff is great in theory but in

00:39:12,650 --> 00:39:17,570
practice sometimes it's a bit

00:39:14,540 --> 00:39:19,410
complicated also it requires you to be

00:39:17,570 --> 00:39:21,210
doing configuration changes to the

00:39:19,410 --> 00:39:24,030
current live things as well as to the

00:39:21,210 --> 00:39:27,240
new stuff that always worries me a

00:39:24,030 --> 00:39:30,089
little bit because one of the ones once

00:39:27,240 --> 00:39:33,440
you fail over to a new master trying to

00:39:30,089 --> 00:39:36,510
get the old master back to being master

00:39:33,440 --> 00:39:41,010
he's not he's often something that the

00:39:36,510 --> 00:39:44,609
cluster hates you for I I will sleep for

00:39:41,010 --> 00:39:48,480
the record that I have seen probably

00:39:44,609 --> 00:39:51,240
five times as many outages caused by

00:39:48,480 --> 00:39:55,950
intelligent failover systems being

00:39:51,240 --> 00:39:58,289
overly clever then I've seen caused by

00:39:55,950 --> 00:40:02,720
manual failover not happening quickly

00:39:58,289 --> 00:40:05,460
enough seriously I was a lot of the time

00:40:02,720 --> 00:40:07,740
if you have a master machine and a slave

00:40:05,460 --> 00:40:09,839
machine say you're much better off

00:40:07,740 --> 00:40:12,390
having good monitoring that pages you

00:40:09,839 --> 00:40:14,400
and going and looking at it and manually

00:40:12,390 --> 00:40:16,530
failing over to the slave because that

00:40:14,400 --> 00:40:20,579
will probably actually cause you less

00:40:16,530 --> 00:40:22,349
downtime then trying to have automatic

00:40:20,579 --> 00:40:24,240
failover and risking split brain

00:40:22,349 --> 00:40:27,750
syndrome and all of the other hilarities

00:40:24,240 --> 00:40:29,460
that can happen I scale obviously if you

00:40:27,750 --> 00:40:31,200
if you if you've got several hundred

00:40:29,460 --> 00:40:34,049
machines that's not an accurate approach

00:40:31,200 --> 00:40:36,410
but if you've only if you've only got

00:40:34,049 --> 00:40:38,910
one master one maybe two slaves

00:40:36,410 --> 00:40:43,890
seriously consider just just going for

00:40:38,910 --> 00:40:46,170
the dirt stupid approach so here is the

00:40:43,890 --> 00:40:49,140
stupid way of doing system migrate of

00:40:46,170 --> 00:40:54,839
doing data migrations it is based around

00:40:49,140 --> 00:40:58,440
our own friend rsync really what you do

00:40:54,839 --> 00:41:01,980
is you run our sink and then you run our

00:40:58,440 --> 00:41:04,799
sink and then you run our sink and I'm

00:41:01,980 --> 00:41:08,279
not joking here I might be joking

00:41:04,799 --> 00:41:10,260
they're not entirely because what you

00:41:08,279 --> 00:41:12,150
basically do is you are saying it and

00:41:10,260 --> 00:41:14,400
you are sinking and you're asking and

00:41:12,150 --> 00:41:16,319
you keep repeatin and at some point the

00:41:14,400 --> 00:41:21,930
rsync will get to wonder about five or

00:41:16,319 --> 00:41:24,420
six seconds yeah at that moment you get

00:41:21,930 --> 00:41:27,420
you go into crazy mode stop all of your

00:41:24,420 --> 00:41:30,869
services stop stop anything that's

00:41:27,420 --> 00:41:31,950
dependent on it change the NS arcing one

00:41:30,869 --> 00:41:36,300
final time

00:41:31,950 --> 00:41:40,020
start everything back up again you just

00:41:36,300 --> 00:41:42,810
migrated without any cleverness without

00:41:40,020 --> 00:41:44,610
any risk of it of things going oh can't

00:41:42,810 --> 00:41:46,920
figure out which is miles to a witch's

00:41:44,610 --> 00:41:49,950
slave or any of that and if it goes

00:41:46,920 --> 00:41:51,690
horribly wrong remember your honor

00:41:49,950 --> 00:41:53,940
you're in a situation where you can

00:41:51,690 --> 00:41:55,980
synchronize in a handful of seconds so

00:41:53,940 --> 00:41:57,270
you stop everything again I'll sit back

00:41:55,980 --> 00:42:01,500
and bring the old class two straight

00:41:57,270 --> 00:42:04,590
back up again hey it's a hair-raising

00:42:01,500 --> 00:42:06,690
experience doing it but it puts you

00:42:04,590 --> 00:42:08,280
absolutely in control of that switch

00:42:06,690 --> 00:42:12,590
over and it gives you an easy way of

00:42:08,280 --> 00:42:17,310
going back and that that seriously can

00:42:12,590 --> 00:42:20,460
it can save you it's it's yeah it sounds

00:42:17,310 --> 00:42:22,260
kind of horrible yes it's completely

00:42:20,460 --> 00:42:24,870
brute force but it's completely

00:42:22,260 --> 00:42:28,140
predictable it does exactly what you

00:42:24,870 --> 00:42:30,240
expect it to do a lot of the time

00:42:28,140 --> 00:42:32,580
especially when you know part of the

00:42:30,240 --> 00:42:34,230
thing is you're not entirely sure you

00:42:32,580 --> 00:42:38,280
like the configuration of the old

00:42:34,230 --> 00:42:42,390
cluster it's just easier to do it this

00:42:38,280 --> 00:42:45,180
right seriously the other the other

00:42:42,390 --> 00:42:47,580
crucial thing is yes you've got you're

00:42:45,180 --> 00:42:50,040
going to have an outage of depending on

00:42:47,580 --> 00:42:51,690
I mean getting it to under five seconds

00:42:50,040 --> 00:42:53,640
might be optimistic depending on your

00:42:51,690 --> 00:42:55,350
right load but you've got a relatively

00:42:53,640 --> 00:42:57,240
short outage window and you've got a

00:42:55,350 --> 00:43:02,490
pretty much guaranteed it will be this

00:42:57,240 --> 00:43:04,560
long outage window whereas clustered

00:43:02,490 --> 00:43:08,790
cluster trickery and slave trickery in

00:43:04,560 --> 00:43:11,820
my experience four times in 50 outage

00:43:08,790 --> 00:43:16,080
and then one time in five everything

00:43:11,820 --> 00:43:21,210
melts and I I don't know I don't know if

00:43:16,080 --> 00:43:23,490
anybody's ever ever tried to patch MySQL

00:43:21,210 --> 00:43:27,240
or postgraduate plication to get back

00:43:23,490 --> 00:43:32,340
together by hand with a hex editor all

00:43:27,240 --> 00:43:34,260
all databases are evil everything it all

00:43:32,340 --> 00:43:38,750
hates you and it all wants to leave you

00:43:34,260 --> 00:43:42,300
and wants you to have a bad day so um

00:43:38,750 --> 00:43:44,670
whereas you know like this is the thing

00:43:42,300 --> 00:43:46,109
you know I'll say

00:43:44,670 --> 00:43:48,059
is predictably horrible and doesn't

00:43:46,109 --> 00:43:57,559
require ass and check to avoid someone

00:43:48,059 --> 00:44:01,520
in casula pick your poison step 4

00:43:57,559 --> 00:44:04,079
hopefully go find a beer to not cry into

00:44:01,520 --> 00:44:06,900
although generally you should be doing

00:44:04,079 --> 00:44:09,210
this on a Monday that gives you the rest

00:44:06,900 --> 00:44:12,180
of the week to fix things if you migrate

00:44:09,210 --> 00:44:14,040
services on a friday I am going to spend

00:44:12,180 --> 00:44:15,599
the entire weekend laughing at you all

00:44:14,040 --> 00:44:19,859
at while you've while you try and fix

00:44:15,599 --> 00:44:23,190
the problems because really it's going

00:44:19,859 --> 00:44:25,020
to happen the only reason to migrate

00:44:23,190 --> 00:44:26,790
something on a Friday is if you're

00:44:25,020 --> 00:44:28,470
planning to spend the weekend in the

00:44:26,790 --> 00:44:30,390
office fixing the problems in the hopes

00:44:28,470 --> 00:44:32,609
that cut that there will be fixed come

00:44:30,390 --> 00:44:35,540
Monday morning this is a valid approach

00:44:32,609 --> 00:44:39,359
but make sure you get overtime for it

00:44:35,540 --> 00:44:44,430
and I at this point pick another service

00:44:39,359 --> 00:44:46,559
the paint keep going either don't over

00:44:44,430 --> 00:44:49,260
complicate things this should not be

00:44:46,559 --> 00:44:52,020
rocket surgery if you can avoid it being

00:44:49,260 --> 00:44:55,020
rocket surgery that it's fundamentally

00:44:52,020 --> 00:44:57,750
just one migrate one dumb migration

00:44:55,020 --> 00:44:59,880
after after dumb migration after dumb

00:44:57,750 --> 00:45:04,579
migration and at some point you'll

00:44:59,880 --> 00:45:10,500
suddenly notice there's no swamp anymore

00:45:04,579 --> 00:45:12,390
um that's I I'm afraid you know I I

00:45:10,500 --> 00:45:14,700
don't really have a big bang ending to

00:45:12,390 --> 00:45:18,569
this talk because the whole pond because

00:45:14,700 --> 00:45:20,760
the whole point of it is to get rid of

00:45:18,569 --> 00:45:23,700
big bangs and explosions from your life

00:45:20,760 --> 00:45:28,410
you know keep it simple keep it stupid

00:45:23,700 --> 00:45:30,890
keep going one alligator at a time thank

00:45:28,410 --> 00:45:30,890
you very much

00:45:40,690 --> 00:45:42,750

YouTube URL: https://www.youtube.com/watch?v=3xQqLNBeokc


