Title: Daniel Sterling (eqhmcow) - Packaging Perl RPMs
Publication date: 2013-08-20
Playlist: YAPC::NA 2013
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:06,960
all right welcome to building pearl rpms

00:00:04,440 --> 00:00:10,110
I'm Dan sterling I work at plus three we

00:00:06,960 --> 00:00:11,759
have a CMS and do online fundraising so

00:00:10,110 --> 00:00:16,920
check us out if you need to do some

00:00:11,759 --> 00:00:19,109
fundraising i'm on twitter and IRC so

00:00:16,920 --> 00:00:22,920
i'm going to start out with an invisible

00:00:19,109 --> 00:00:28,380
live demo so let's see let's see what

00:00:22,920 --> 00:00:30,599
happens I've got a google compute engine

00:00:28,380 --> 00:00:36,230
instance it's 2013 we should be using

00:00:30,599 --> 00:00:38,160
VMs right cloud vm so I've got a set of

00:00:36,230 --> 00:00:41,280
files here we're going to work through

00:00:38,160 --> 00:00:44,760
so I promised an exact step-by-step

00:00:41,280 --> 00:00:47,309
guide for how to build our pm's and

00:00:44,760 --> 00:00:49,980
pearl rpms so this is it start out with

00:00:47,309 --> 00:00:53,820
installing apple this is assuming you're

00:00:49,980 --> 00:00:57,270
running on real six or centos 6 well six

00:00:53,820 --> 00:01:00,660
has pro 5 10 5 10 one with a bunch of

00:00:57,270 --> 00:01:04,979
patches well 5 has pearl 588 with a

00:01:00,660 --> 00:01:07,200
bunch of patches we try our best to get

00:01:04,979 --> 00:01:08,729
red hat to put the latest pearls in when

00:01:07,200 --> 00:01:11,430
they come out with a new rail release

00:01:08,729 --> 00:01:14,850
but it's not always successful so it's

00:01:11,430 --> 00:01:16,049
no 518 but it is 510 at least so if

00:01:14,850 --> 00:01:19,049
you're on real sex you have at least at

00:01:16,049 --> 00:01:20,490
and you can build your own pearl that's

00:01:19,049 --> 00:01:21,840
outside the scope of this talk but it is

00:01:20,490 --> 00:01:24,450
possible to build up your own curl and

00:01:21,840 --> 00:01:27,810
package that you can use the Fedora our

00:01:24,450 --> 00:01:30,479
PM packages as a base for that so start

00:01:27,810 --> 00:01:32,520
out with apple and apple is extra

00:01:30,479 --> 00:01:34,520
packages for enterprise linux this is a

00:01:32,520 --> 00:01:37,860
set of additional packages on top of

00:01:34,520 --> 00:01:40,110
your base packages that come with red

00:01:37,860 --> 00:01:42,840
hat and it's a volunteer project go on

00:01:40,110 --> 00:01:45,689
the Fedora Apple mailing list and say I

00:01:42,840 --> 00:01:48,270
need a package here's a spec file can

00:01:45,689 --> 00:01:50,610
you guys get this in and they will so

00:01:48,270 --> 00:01:56,759
that's how you install it w get down the

00:01:50,610 --> 00:02:00,810
Apple RPM and install it step to install

00:01:56,759 --> 00:02:04,619
your build packages screen Joe mock RPM

00:02:00,810 --> 00:02:07,680
build make GCC etc some packages like to

00:02:04,619 --> 00:02:11,400
use our mocking so make make a mock user

00:02:07,680 --> 00:02:13,739
you never never run RPM build as root

00:02:11,400 --> 00:02:15,000
because rpm build likes to RM files a

00:02:13,739 --> 00:02:16,200
lot of places and do a lot of other

00:02:15,000 --> 00:02:17,459
crazy commands that you really don't

00:02:16,200 --> 00:02:20,430
want to be running as root and there's

00:02:17,459 --> 00:02:22,170
no need so you always us where the

00:02:20,430 --> 00:02:25,739
mocking system comes in it gives you an

00:02:22,170 --> 00:02:27,840
a built environment that can do Rudess

00:02:25,739 --> 00:02:29,819
things without needing to be root you'll

00:02:27,840 --> 00:02:34,560
also see there i use joe shoutout to jo

00:02:29,819 --> 00:02:38,099
it's a word star clone I hate VI know so

00:02:34,560 --> 00:02:40,260
next step import your gpg key you have a

00:02:38,099 --> 00:02:42,870
gpg key right if not create one is

00:02:40,260 --> 00:02:44,819
pretty easy export it on your main box

00:02:42,870 --> 00:02:48,780
and then import it onto your build box

00:02:44,819 --> 00:02:51,470
and also that public public key imported

00:02:48,780 --> 00:02:54,269
into RPM as well pretty simple there

00:02:51,470 --> 00:02:56,209
that lets you sign your packages and you

00:02:54,269 --> 00:02:58,439
want to sign your packages for

00:02:56,209 --> 00:02:59,849
verification purposes you know that the

00:02:58,439 --> 00:03:02,849
packages you're installing actually came

00:02:59,849 --> 00:03:06,329
from you and also that they are valid

00:03:02,849 --> 00:03:08,939
they haven't been corrupted next it up

00:03:06,329 --> 00:03:11,040
your build environment and by the way is

00:03:08,939 --> 00:03:14,730
this big enough for everybody this is on

00:03:11,040 --> 00:03:19,199
github as well if you need to look at

00:03:14,730 --> 00:03:23,609
this I will increase the font size of

00:03:19,199 --> 00:03:25,079
your build environment pretty simple you

00:03:23,609 --> 00:03:28,379
just need to build directories and you

00:03:25,079 --> 00:03:30,389
need an RPM macros file RPM RPM build

00:03:28,379 --> 00:03:31,799
likes to use a lot of macros it's kind

00:03:30,389 --> 00:03:33,120
of a sore subject because it's not

00:03:31,799 --> 00:03:35,790
documented very well and they can do a

00:03:33,120 --> 00:03:37,230
lot of crazy things but in in this

00:03:35,790 --> 00:03:39,209
instance you just need some macros

00:03:37,230 --> 00:03:41,310
saying who you are and where you where

00:03:39,209 --> 00:03:44,099
you put your your directories for your

00:03:41,310 --> 00:03:46,319
build environment all right so let's

00:03:44,099 --> 00:03:48,889
start out with a quick build what

00:03:46,319 --> 00:03:52,470
version of test simple do we have

00:03:48,889 --> 00:03:57,599
installed let's find out and here's the

00:03:52,470 --> 00:04:00,870
live demo part I'm in faux pearl test

00:03:57,599 --> 00:04:04,169
simple it's going to do a quick update

00:04:00,870 --> 00:04:09,049
or not look down the font size just a

00:04:04,169 --> 00:04:09,049
touch their baby did that help

00:04:09,260 --> 00:04:15,150
we're running 0 point 92 so let's

00:04:11,819 --> 00:04:18,979
upgrade that so first you get your CP n

00:04:15,150 --> 00:04:21,510
spec installed so Sipan spec is a tool

00:04:18,979 --> 00:04:24,960
put together by some Fedora people that

00:04:21,510 --> 00:04:26,850
downloads from CP on your CP and

00:04:24,960 --> 00:04:29,430
distribution that you specify and

00:04:26,850 --> 00:04:32,520
creates a spec file a spec file is what

00:04:29,430 --> 00:04:38,130
RPM build uses to actually do the build

00:04:32,520 --> 00:04:40,770
it specifies how to do a build so let's

00:04:38,130 --> 00:04:44,610
go into our source directory and tell

00:04:40,770 --> 00:04:47,610
Sipan spec to pull down the latest test

00:04:44,610 --> 00:04:51,870
simple alright so that's actually going

00:04:47,610 --> 00:04:54,510
to go out and hit Sipan and grab both

00:04:51,870 --> 00:04:57,360
the the Sipan package the distribution

00:04:54,510 --> 00:05:00,720
file and write a spec file so we can

00:04:57,360 --> 00:05:03,389
take a quick look at that spectrum it's

00:05:00,720 --> 00:05:07,320
got metadata at the top the name the

00:05:03,389 --> 00:05:10,350
version quick description boilerplate

00:05:07,320 --> 00:05:12,930
stuff and then the heart of the actual

00:05:10,350 --> 00:05:16,919
build it here's the macros again a prep

00:05:12,930 --> 00:05:19,110
section and a setup macro to untie the

00:05:16,919 --> 00:05:22,740
package your source file your source

00:05:19,110 --> 00:05:25,010
package then it does the build pearl

00:05:22,740 --> 00:05:27,780
make file install a standard build make

00:05:25,010 --> 00:05:30,780
and then the actual install it installs

00:05:27,780 --> 00:05:33,270
it into the build route which is the

00:05:30,780 --> 00:05:34,830
place that RPM build actually takes and

00:05:33,270 --> 00:05:37,349
makes your package from all the files in

00:05:34,830 --> 00:05:39,690
the build root directory are what

00:05:37,349 --> 00:05:41,910
actually constitutes your file so let's

00:05:39,690 --> 00:05:44,750
of a check make tests clean up pretty

00:05:41,910 --> 00:05:49,590
simple stuff auto-generated spec file so

00:05:44,750 --> 00:05:54,919
that's that alright so let's build it

00:05:49,590 --> 00:05:54,919
we've got the spec file let's put our

00:05:54,950 --> 00:06:00,270
spec file in the RPM sources directory

00:05:57,810 --> 00:06:04,110
that's obviously where rpm build looks

00:06:00,270 --> 00:06:07,280
to see where the source file is to build

00:06:04,110 --> 00:06:07,280
it and then

00:06:13,070 --> 00:06:17,670
let's build it put in my passphrase for

00:06:15,630 --> 00:06:21,480
my gpg key your gpg key as a passphrase

00:06:17,670 --> 00:06:25,490
right should and that's it we've got a

00:06:21,480 --> 00:06:30,180
pearl package now we need to install it

00:06:25,490 --> 00:06:33,510
and we're upgrading it from the package

00:06:30,180 --> 00:06:36,420
that's already installed as part of what

00:06:33,510 --> 00:06:38,280
came in in the centos or rail base

00:06:36,420 --> 00:06:40,980
packages in Apple that was what we were

00:06:38,280 --> 00:06:48,480
looking at before now we've got a new

00:06:40,980 --> 00:06:54,240
package is it live young will tell us it

00:06:48,480 --> 00:06:56,550
is no yes available packages is updates

00:06:54,240 --> 00:06:59,220
that's in the updates repo and then it

00:06:56,550 --> 00:07:00,600
scrolled bath past installed repo has

00:06:59,220 --> 00:07:02,370
has our new version that we just

00:07:00,600 --> 00:07:07,260
installed and of course we can also

00:07:02,370 --> 00:07:12,380
verify that by running the actual module

00:07:07,260 --> 00:07:14,790
so there it is that's the version okay

00:07:12,380 --> 00:07:17,880
that was horrible everything just broke

00:07:14,790 --> 00:07:19,740
upgraded a package so you know all my

00:07:17,880 --> 00:07:24,600
all my servers are failing now that was

00:07:19,740 --> 00:07:25,530
a mistake so let's downgrade it so here

00:07:24,600 --> 00:07:28,320
we're starting to see some of the

00:07:25,530 --> 00:07:30,570
advantages of having package management

00:07:28,320 --> 00:07:34,380
we just made a mistake let's go back

00:07:30,570 --> 00:07:36,420
done we'vewe've downgraded it to the

00:07:34,380 --> 00:07:45,060
version that we were using before did

00:07:36,420 --> 00:07:47,580
that work run yellow info again and yeah

00:07:45,060 --> 00:07:50,870
Oh 92 is installed and if we run our

00:07:47,580 --> 00:07:53,580
pearl command again it'll verify that

00:07:50,870 --> 00:07:56,220
pretty nice so that was upgrading a

00:07:53,580 --> 00:08:00,150
package that's already in the centos or

00:07:56,220 --> 00:08:02,100
well bass or Apple package repositories

00:08:00,150 --> 00:08:07,590
what about something that we don't

00:08:02,100 --> 00:08:10,410
already have do we have roll tiny let's

00:08:07,590 --> 00:08:12,810
find out no there's no role tiny so

00:08:10,410 --> 00:08:16,200
let's build it we need to install some

00:08:12,810 --> 00:08:18,210
dependencies test simple happens to be a

00:08:16,200 --> 00:08:20,240
dependency so let's put that back in

00:08:18,210 --> 00:08:20,240
there

00:08:20,700 --> 00:08:27,020
and all the other dependencies that are

00:08:24,330 --> 00:08:35,880
already in the the base rebel repos

00:08:27,020 --> 00:08:38,660
we're already on our source stir pull it

00:08:35,880 --> 00:08:38,660
down from the CPM

00:08:47,529 --> 00:08:53,060
move this spec file into the sources

00:08:50,330 --> 00:08:55,250
directory again another spec file but

00:08:53,060 --> 00:09:02,180
the cpn distribution source file and

00:08:55,250 --> 00:09:08,540
then run RPM build and the BA says to

00:09:02,180 --> 00:09:11,390
build the package and a source package

00:09:08,540 --> 00:09:14,150
as well so another advantage of our pm's

00:09:11,390 --> 00:09:16,220
is you get a rpm which is the actual

00:09:14,150 --> 00:09:17,960
files that you want to install and you

00:09:16,220 --> 00:09:20,510
also and then you get a source rpm which

00:09:17,960 --> 00:09:22,220
has all the source code and the spec

00:09:20,510 --> 00:09:23,360
file so you can rebuild that if you need

00:09:22,220 --> 00:09:26,720
to want a different architecture that

00:09:23,360 --> 00:09:36,890
kind of thing ok so it's built let's

00:09:26,720 --> 00:09:40,700
install it and its installed is it live

00:09:36,890 --> 00:09:42,050
we'll see in yum that it's it is and of

00:09:40,700 --> 00:09:45,950
course here's another advantage of our

00:09:42,050 --> 00:09:48,320
pm's you get that inventory y'all will

00:09:45,950 --> 00:09:50,000
tell you what's on your system you don't

00:09:48,320 --> 00:09:52,970
have to go and look through directories

00:09:50,000 --> 00:09:58,210
to try to find out what's installed and

00:09:52,970 --> 00:10:00,710
then we it actually works there it is

00:09:58,210 --> 00:10:03,520
alright but that was a bad idea again so

00:10:00,710 --> 00:10:03,520
let's get rid of it

00:10:08,210 --> 00:10:17,400
and it's gone so there we go easily add

00:10:14,070 --> 00:10:19,950
and remove cpn distributions pearl

00:10:17,400 --> 00:10:21,300
packages and of course we can run our

00:10:19,950 --> 00:10:28,440
commands again and see that it is in

00:10:21,300 --> 00:10:30,240
fact no longer with us gone alright that

00:10:28,440 --> 00:10:33,450
was all really easy and it all worked

00:10:30,240 --> 00:10:35,930
really well but we all know in real life

00:10:33,450 --> 00:10:39,120
that's not always how it works out so

00:10:35,930 --> 00:10:41,940
what happens if we want to install a

00:10:39,120 --> 00:10:45,780
package where the dependencies aren't in

00:10:41,940 --> 00:10:47,670
the centos or Apple repos what if the

00:10:45,780 --> 00:10:50,430
latest versions that we need aren't in

00:10:47,670 --> 00:10:53,580
there well we're going to have to create

00:10:50,430 --> 00:10:57,240
a package by hand for every dependency

00:10:53,580 --> 00:10:59,310
which is going to be painful but and

00:10:57,240 --> 00:11:05,420
this is a huge mistake and never do this

00:10:59,310 --> 00:11:09,390
let's cheat so what if we can get Sipan

00:11:05,420 --> 00:11:11,970
to build an RPM a mega RPM that has all

00:11:09,390 --> 00:11:13,350
these dependencies included well let's

00:11:11,970 --> 00:11:15,840
give it a try so I'll try it out with

00:11:13,350 --> 00:11:18,630
plaque so let's do the same thing we did

00:11:15,840 --> 00:11:27,510
before with plaque have CP inspect pull

00:11:18,630 --> 00:11:31,470
it down and create our spec file so

00:11:27,510 --> 00:11:33,840
plaque of course is the PSG I a middle

00:11:31,470 --> 00:11:36,570
layer and web server and all that that

00:11:33,840 --> 00:11:38,640
my I got was done excellent work with so

00:11:36,570 --> 00:11:39,750
we've got our spec file so let's just go

00:11:38,640 --> 00:11:42,870
ahead and try to build it real quick

00:11:39,750 --> 00:11:45,360
make sure our packages in our source

00:11:42,870 --> 00:11:48,500
package is in the sources directory what

00:11:45,360 --> 00:11:48,500
happens when we try to build it

00:11:51,519 --> 00:11:58,069
well it's going to say no way because

00:11:54,490 --> 00:12:00,620
when it when Sipan spec took a look at

00:11:58,069 --> 00:12:02,089
your source package it noticed it look

00:12:00,620 --> 00:12:04,370
through the Perl code you know simple

00:12:02,089 --> 00:12:06,319
pattern matching and noticed it looks

00:12:04,370 --> 00:12:08,810
like you've got some dependencies here

00:12:06,319 --> 00:12:10,310
that aren't aren't installed so you're

00:12:08,810 --> 00:12:12,970
not going to be able to build that all

00:12:10,310 --> 00:12:17,509
right so let's get CP installed from

00:12:12,970 --> 00:12:19,730
from our repositories now again this is

00:12:17,509 --> 00:12:21,920
using the system pearl which is 510 one

00:12:19,730 --> 00:12:24,620
and again it is possible to use a newer

00:12:21,920 --> 00:12:26,720
pearls I it can be a little bit tricky

00:12:24,620 --> 00:12:28,519
but it's definitely possible to do set

00:12:26,720 --> 00:12:30,379
up CPA I've already done that so let's

00:12:28,519 --> 00:12:33,319
give it for this live demo but you can

00:12:30,379 --> 00:12:36,769
see obviously cpns running there tell it

00:12:33,319 --> 00:12:39,410
to do follow prerequisites automatically

00:12:36,769 --> 00:12:42,319
and to install any build requires

00:12:39,410 --> 00:12:45,019
automatically when I could be using c pn

00:12:42,319 --> 00:12:47,629
minus which is another nice magawa tool

00:12:45,019 --> 00:12:49,490
to install packages but Sipan works so

00:12:47,629 --> 00:12:51,410
let's just use it and of course c pn

00:12:49,490 --> 00:12:54,170
minus isn't in the base or apple repos

00:12:51,410 --> 00:12:56,029
all right so let's uh let's take this

00:12:54,170 --> 00:13:00,279
package this spec file that it's

00:12:56,029 --> 00:13:02,949
generated for us and let's back it up

00:13:00,279 --> 00:13:06,079
copy it to an hour ridge real quick and

00:13:02,949 --> 00:13:09,139
let's copy from our documents a spec

00:13:06,079 --> 00:13:12,949
file that I've already got going on and

00:13:09,139 --> 00:13:14,209
I discuss what the actual changes are

00:13:12,949 --> 00:13:16,310
here I'll go into that in a second but

00:13:14,209 --> 00:13:18,410
while that's happening let's go ahead

00:13:16,310 --> 00:13:19,610
and build it so we're going to build it

00:13:18,410 --> 00:13:22,899
real quick and I'll go back up and

00:13:19,610 --> 00:13:25,699
discuss what the heck we actually did

00:13:22,899 --> 00:13:28,550
alright so that's building and it's just

00:13:25,699 --> 00:13:32,000
running cpn like you would any other way

00:13:28,550 --> 00:13:33,170
or from the command line to install a

00:13:32,000 --> 00:13:35,389
bunch of packages but it's not

00:13:33,170 --> 00:13:37,220
installing them into your actual pearl

00:13:35,389 --> 00:13:38,959
directory it's installing them into a

00:13:37,220 --> 00:13:41,329
build route which are painful packaged

00:13:38,959 --> 00:13:44,029
up alright so let's take a look without

00:13:41,329 --> 00:13:48,290
running and take a look at the

00:13:44,029 --> 00:13:51,500
differences between our helps from in

00:13:48,290 --> 00:13:54,050
the right directory take a look at the

00:13:51,500 --> 00:13:55,959
differences between our original spec

00:13:54,050 --> 00:13:59,680
file and the one that I modified and

00:13:55,959 --> 00:14:04,209
again I've documented the differences so

00:13:59,680 --> 00:14:04,209
the build arch by default is

00:14:05,230 --> 00:14:09,590
no arch just comment that out and

00:14:07,700 --> 00:14:12,040
automatically our p.m. build will

00:14:09,590 --> 00:14:15,080
automatically use the right architecture

00:14:12,040 --> 00:14:17,060
cpn spec puts in the build acquires

00:14:15,080 --> 00:14:19,040
that's where that air came from we're

00:14:17,060 --> 00:14:22,510
just going to remove those because we're

00:14:19,040 --> 00:14:24,710
having cpn satisfy all the dependencies

00:14:22,510 --> 00:14:28,310
what we're going to do to actually get

00:14:24,710 --> 00:14:30,950
Sipan to do the build is use some tricks

00:14:28,310 --> 00:14:33,110
similar to what local lib and and tools

00:14:30,950 --> 00:14:35,210
like that use like pro brute and we're

00:14:33,110 --> 00:14:39,170
going to set these environment variables

00:14:35,210 --> 00:14:41,750
that tell make maker and module build

00:14:39,170 --> 00:14:44,300
where to install the packages in this

00:14:41,750 --> 00:14:47,750
case into our build route and we also

00:14:44,300 --> 00:14:50,900
need to as we install packages they need

00:14:47,750 --> 00:14:52,430
to actually be used later by the packet

00:14:50,900 --> 00:14:54,500
the later distributions that are being

00:14:52,430 --> 00:14:56,810
built so we set our profile libraries

00:14:54,500 --> 00:15:01,400
and our path so that all that works and

00:14:56,810 --> 00:15:03,080
then in the spec file we also i'll show

00:15:01,400 --> 00:15:08,480
you where all that is here in the spec

00:15:03,080 --> 00:15:13,400
file and i'll get to well yeah i do have

00:15:08,480 --> 00:15:16,490
that described so here under prep we are

00:15:13,400 --> 00:15:20,030
taking out this extraneous dependency so

00:15:16,490 --> 00:15:21,830
again RPM build uses a lot of macros

00:15:20,030 --> 00:15:23,690
that are very magical and very evil and

00:15:21,830 --> 00:15:26,080
they don't always get the Pearl

00:15:23,690 --> 00:15:28,670
dependencies right one of the macros is

00:15:26,080 --> 00:15:30,800
goes through and grabs the source code

00:15:28,670 --> 00:15:33,140
to look for for dependencies you know if

00:15:30,800 --> 00:15:36,590
you're if you're pro code says use

00:15:33,140 --> 00:15:38,150
apache to log then it will require a

00:15:36,590 --> 00:15:39,470
patchy to log then we'll add that as a

00:15:38,150 --> 00:15:41,930
dependency even if it's not a real

00:15:39,470 --> 00:15:43,580
dependency if it's an eval or sometimes

00:15:41,930 --> 00:15:46,430
if it's in dachshund notice for docs

00:15:43,580 --> 00:15:47,770
that kind of thing so it'll we're just

00:15:46,430 --> 00:15:53,450
wrapping that we're wrapping the

00:15:47,770 --> 00:15:54,920
original pro requires macro and removing

00:15:53,450 --> 00:15:59,570
the extraneous dependencies but letting

00:15:54,920 --> 00:16:00,860
it it actually apply all the

00:15:59,570 --> 00:16:05,839
dependencies that do need to be applied

00:16:00,860 --> 00:16:08,300
okay so back to where I was here so

00:16:05,839 --> 00:16:13,820
here's where we take out the original

00:16:08,300 --> 00:16:16,010
make and put in our Sipan trick and then

00:16:13,820 --> 00:16:17,690
we need another couple of tricks

00:16:16,010 --> 00:16:19,970
remove the debugging files in the pro

00:16:17,690 --> 00:16:22,610
local pod file which Sipan creates to

00:16:19,970 --> 00:16:24,290
tell you what you've installed that

00:16:22,610 --> 00:16:27,650
can't be in multiple packages we just

00:16:24,290 --> 00:16:29,300
remove it and then we list the extra

00:16:27,650 --> 00:16:31,520
directories that we installed to under

00:16:29,300 --> 00:16:37,190
our files section so let me show you the

00:16:31,520 --> 00:16:40,870
entire spec file that is modified here

00:16:37,190 --> 00:16:44,420
so again normal stuff at the top

00:16:40,870 --> 00:16:46,850
description version prep section

00:16:44,420 --> 00:16:50,120
extracts the source package here's our

00:16:46,850 --> 00:16:56,810
trick to remove the extraneous requires

00:16:50,120 --> 00:16:58,910
that the RPM magic added and then we

00:16:56,810 --> 00:17:00,920
move everything from the build section

00:16:58,910 --> 00:17:03,170
of our p.m. to the install section

00:17:00,920 --> 00:17:04,610
because the install section is what

00:17:03,170 --> 00:17:06,290
rights to the build route and we just

00:17:04,610 --> 00:17:10,790
want cpn to write everything directly to

00:17:06,290 --> 00:17:12,650
the build route and then after that we

00:17:10,790 --> 00:17:16,130
go ahead and do a quick make and make

00:17:12,650 --> 00:17:19,730
tests again just to be sure and then our

00:17:16,130 --> 00:17:21,740
files section lists all of the places

00:17:19,730 --> 00:17:23,329
where we're going to be installing files

00:17:21,740 --> 00:17:24,740
when the package is installed these are

00:17:23,329 --> 00:17:27,410
all the things that actually but rpm

00:17:24,740 --> 00:17:31,100
actually puts into the package and then

00:17:27,410 --> 00:17:33,710
there's a change look okay so to that

00:17:31,100 --> 00:17:36,350
finish building yes took three minutes a

00:17:33,710 --> 00:17:38,240
few minutes 11 seconds not too long to

00:17:36,350 --> 00:17:41,600
build all of those dependencies and we

00:17:38,240 --> 00:17:43,690
can potentially scroll up and take a

00:17:41,600 --> 00:17:47,870
quick look at all the crazy stuff it did

00:17:43,690 --> 00:17:50,810
lots of tests they all passed if the

00:17:47,870 --> 00:17:55,460
test didn't pass it would air out okay

00:17:50,810 --> 00:17:57,710
so let's install this monstrosity and

00:17:55,460 --> 00:18:03,410
this is an x86 package now not just a no

00:17:57,710 --> 00:18:08,360
architecture package and there it is all

00:18:03,410 --> 00:18:11,260
right is it in yum or is it in the RPM

00:18:08,360 --> 00:18:13,610
database it is all right now we can use

00:18:11,260 --> 00:18:16,690
another advantage here of RPM we can

00:18:13,610 --> 00:18:19,250
tell it what files from this package are

00:18:16,690 --> 00:18:22,070
installed and it'll tell us you've got

00:18:19,250 --> 00:18:26,900
something in user bin that's from my

00:18:22,070 --> 00:18:28,530
sink module build I believe you've got a

00:18:26,900 --> 00:18:30,480
new time high res something

00:18:28,530 --> 00:18:37,650
upgraded my time high res or install it

00:18:30,480 --> 00:18:41,280
got man files man pages txt details make

00:18:37,650 --> 00:18:43,050
maker got upgraded HTTP server obviously

00:18:41,280 --> 00:18:46,290
the plaque stuff so all of this stuff is

00:18:43,050 --> 00:18:53,370
in here and that's all from that one RPM

00:18:46,290 --> 00:18:57,960
and more rpm magic what perl modules

00:18:53,370 --> 00:19:01,260
does this crazy package provide to the

00:18:57,960 --> 00:19:02,790
system all of these so apache log format

00:19:01,260 --> 00:19:05,190
compiler was one of the dependencies

00:19:02,790 --> 00:19:08,100
that they got rolled in develops track

00:19:05,190 --> 00:19:10,410
trace so we can see here all of the pro

00:19:08,100 --> 00:19:12,120
packages and these can be referenced by

00:19:10,410 --> 00:19:14,840
other spec file saying hey I need this

00:19:12,120 --> 00:19:18,410
package before all it I'll install and

00:19:14,840 --> 00:19:21,030
the system will say okay you've got it

00:19:18,410 --> 00:19:24,770
alright so again this is a horrible

00:19:21,030 --> 00:19:24,770
horrible thing to do never do this but

00:19:27,350 --> 00:19:35,310
it works now once you've done this which

00:19:32,670 --> 00:19:36,900
you won't go back and build proper

00:19:35,310 --> 00:19:42,720
separate packages for all of those

00:19:36,900 --> 00:19:44,550
dependencies because one thing that this

00:19:42,720 --> 00:19:46,500
helps is if you have a dependency chain

00:19:44,550 --> 00:19:49,350
where you're trying to install an RPM

00:19:46,500 --> 00:19:52,530
that depends on another RPM and it's a

00:19:49,350 --> 00:19:54,990
circle that you can't resolve this will

00:19:52,530 --> 00:19:58,070
quite definitively resolve it and you

00:19:54,990 --> 00:20:00,000
can go back and create packages for each

00:19:58,070 --> 00:20:01,200
pearl module that you wouldn't have

00:20:00,000 --> 00:20:06,180
necessarily been able to crave so easily

00:20:01,200 --> 00:20:09,230
before so we'll get rid of it and yeah

00:20:06,180 --> 00:20:09,230
that's the actual spec file

00:20:15,580 --> 00:20:24,520
and it's gone so RPM I think that's

00:20:19,970 --> 00:20:27,830
about time I also have some slides that

00:20:24,520 --> 00:20:29,510
we didn't get to but basically they say

00:20:27,830 --> 00:20:32,300
what our p.m. is you can go look them up

00:20:29,510 --> 00:20:35,390
on github this is a crisis about the

00:20:32,300 --> 00:20:38,840
macros spec files are just shell scripts

00:20:35,390 --> 00:20:41,090
so that's an interesting point it's

00:20:38,840 --> 00:20:42,890
convoluted because of the macro system

00:20:41,090 --> 00:20:45,590
but when you get down to its spec files

00:20:42,890 --> 00:20:47,000
are just shell scripts with some

00:20:45,590 --> 00:20:51,680
metadata in them and a weird way to run

00:20:47,000 --> 00:20:54,830
them the the default build takes a

00:20:51,680 --> 00:20:57,910
source file and configures makes it

00:20:54,830 --> 00:21:01,690
makes installs it don't run it as root

00:20:57,910 --> 00:21:04,940
this explains what the sections are

00:21:01,690 --> 00:21:07,550
install spec or rather the build root

00:21:04,940 --> 00:21:08,690
directory everything that's listed in

00:21:07,550 --> 00:21:12,230
the files section gets put in the

00:21:08,690 --> 00:21:14,720
package Sipan spec is the tool you use

00:21:12,230 --> 00:21:16,550
to create a spec files and that's what

00:21:14,720 --> 00:21:18,230
we went over very very quickly and again

00:21:16,550 --> 00:21:22,120
this is on github linked from the talk

00:21:18,230 --> 00:21:22,120
page you can go up thank

00:21:25,559 --> 00:21:40,660
and any questions good keyword Freddie

00:21:36,370 --> 00:21:42,040
lazy single dad had another one I saw

00:21:40,660 --> 00:21:43,930
your head four times higher res and

00:21:42,040 --> 00:21:47,980
seven there you've got another one in

00:21:43,930 --> 00:21:49,809
allston with time high res yeah you

00:21:47,980 --> 00:21:52,120
would you would be able to install one

00:21:49,809 --> 00:21:55,059
of the other package on a target system

00:21:52,120 --> 00:21:56,290
but not both so yeah again that's why

00:21:55,059 --> 00:21:58,780
you don't do that you only have one

00:21:56,290 --> 00:22:01,450
package for distribution but if you did

00:21:58,780 --> 00:22:04,630
do that then just do all your builds

00:22:01,450 --> 00:22:10,750
with all of your packages installed you

00:22:04,630 --> 00:22:22,510
want and then just work but yeah you can

00:22:10,750 --> 00:22:44,559
do that as well you can force it to that

00:22:22,510 --> 00:22:46,120
one okay to run the tests you create a

00:22:44,559 --> 00:22:52,090
plaque which would not be solvable

00:22:46,120 --> 00:22:54,340
anymore but it would be queen yeah

00:22:52,090 --> 00:22:56,230
that's definitely reasonable um you

00:22:54,340 --> 00:22:57,910
would do that by doing the actual build

00:22:56,230 --> 00:22:59,380
in the build section of the spec file

00:22:57,910 --> 00:23:01,030
instead of doing it in the install like

00:22:59,380 --> 00:23:06,240
the heck did so yeah that sounds

00:23:01,030 --> 00:23:06,240
reasonable ish yeah any other questions

00:23:09,809 --> 00:23:14,920
Sipan spec is the name of it and that

00:23:12,700 --> 00:23:16,570
pulls down the spec pulls down the CP

00:23:14,920 --> 00:23:21,340
and distribution from Sipan creates a

00:23:16,570 --> 00:23:23,050
spec file based on that there is yeah

00:23:21,340 --> 00:23:26,460
there's an order tool called see panda

00:23:23,050 --> 00:23:29,140
to CP n number to RPM that usually works

00:23:26,460 --> 00:23:32,340
but it's old and don't use it use new or

00:23:29,140 --> 00:23:32,340
one that fodor's actually maintaining

00:23:38,190 --> 00:23:42,490
you could you could automate it but it's

00:23:40,720 --> 00:23:44,590
it's it can be a bit of a pain because

00:23:42,490 --> 00:23:46,210
you want to go through each spec file by

00:23:44,590 --> 00:23:48,130
hand to verify it oftentimes don't need

00:23:46,210 --> 00:23:50,200
to make changes to the spec file so

00:23:48,130 --> 00:23:52,120
theoretically it can be automated but in

00:23:50,200 --> 00:23:53,770
practice it requires usually spells

00:23:52,120 --> 00:23:55,540
require a little bit of tweaking which

00:23:53,770 --> 00:23:59,370
you know my hand picked examples didn't

00:23:55,540 --> 00:24:03,630
show so well but but yeah that there

00:23:59,370 --> 00:24:03,630
yeah more or less you can automate it

00:24:04,350 --> 00:24:12,900
but any other questions all right thanks

00:24:10,000 --> 00:24:12,900

YouTube URL: https://www.youtube.com/watch?v=Gya28DYQJ6E


