Title: Stevan Little - Perl - The Detroit of Scripting Languages
Publication date: 2013-08-20
Playlist: YAPC::NA 2013
Description: 
	
Captions: 
	00:00:00,650 --> 00:00:05,640
hello um so I'm gonna keep this short

00:00:04,410 --> 00:00:08,010
but sweet I promised even that I

00:00:05,640 --> 00:00:11,309
wouldn't run into his time I'm Jack Nye

00:00:08,010 --> 00:00:13,380
I'm with Athena health we have R&D

00:00:11,309 --> 00:00:15,960
office in Boston and another one in

00:00:13,380 --> 00:00:18,810
Austin where we're trying to save

00:00:15,960 --> 00:00:21,660
healthcare using Perl actually we've got

00:00:18,810 --> 00:00:24,090
like 8 million lines of pro/5 code

00:00:21,660 --> 00:00:26,099
servicing 50,000 doctors we do

00:00:24,090 --> 00:00:28,320
electronic medical records practice

00:00:26,099 --> 00:00:32,070
management systems data analysis

00:00:28,320 --> 00:00:33,870
business intelligence so but the main

00:00:32,070 --> 00:00:35,040
reason I'm here is to introduce even

00:00:33,870 --> 00:00:38,579
little who probably most of you know

00:00:35,040 --> 00:00:41,129
better than you know me certainly this

00:00:38,579 --> 00:00:44,460
is a Steven tells me that this talk is a

00:00:41,129 --> 00:00:46,230
bit of an update or a follow-up when I

00:00:44,460 --> 00:00:50,370
talk he gave in Orlando which is

00:00:46,230 --> 00:00:52,440
somewhat controversial but he's in the

00:00:50,370 --> 00:00:53,940
interim worked on some new ideas and

00:00:52,440 --> 00:00:56,090
wants to share them with you so thank

00:00:53,940 --> 00:00:56,090
you

00:01:02,150 --> 00:01:07,320
all right thank you

00:01:05,190 --> 00:01:09,180
first things first I forgot water so if

00:01:07,320 --> 00:01:14,070
anybody wants to get me water I'll buy

00:01:09,180 --> 00:01:21,570
them a beer later on thank you yeah I'll

00:01:14,070 --> 00:01:22,740
trade a water for a beer I don't know

00:01:21,570 --> 00:01:29,250
we'll see we'll see we'll see how

00:01:22,740 --> 00:01:36,110
parched I get so my talk is called pearl

00:01:29,250 --> 00:01:36,110
the Detroit of scripting languages so

00:01:37,460 --> 00:01:41,640
there we go

00:01:38,880 --> 00:01:43,320
a long time ago actually it was only

00:01:41,640 --> 00:01:45,869
about six months ago and it was actually

00:01:43,320 --> 00:01:48,420
in Orlando which is only about 16 hours

00:01:45,869 --> 00:01:52,740
by car 369 hours by foot according to

00:01:48,420 --> 00:01:55,320
Google there is no bus route so but that

00:01:52,740 --> 00:01:58,920
section at the point so in Orlando I

00:01:55,320 --> 00:02:00,800
gave a talk called Perl is not dead it's

00:01:58,920 --> 00:02:09,570
a dead end

00:02:00,800 --> 00:02:11,430
it kind of uh I hate keynote doing all

00:02:09,570 --> 00:02:13,350
right so it kind of ignited a lot of

00:02:11,430 --> 00:02:18,780
discussion now you should see a big

00:02:13,350 --> 00:02:22,769
giant flame here and it got about 21

00:02:18,780 --> 00:02:25,230
thousand views on speaker deck i rated

00:02:22,769 --> 00:02:27,239
that talk R because it was opw and it's

00:02:25,230 --> 00:02:29,640
pretty okay to curse and say bad things

00:02:27,239 --> 00:02:30,600
there this is the app see we have a code

00:02:29,640 --> 00:02:34,489
of conduct

00:02:30,600 --> 00:02:37,470
so this talk will actually rated pg-13

00:02:34,489 --> 00:02:39,300
everything else still applies it's a

00:02:37,470 --> 00:02:41,070
bunch of half-truths baseless rumors

00:02:39,300 --> 00:02:44,880
bald-faced lies and r any resemblance to

00:02:41,070 --> 00:02:45,989
reality is purely coincidental so now so

00:02:44,880 --> 00:02:48,930
one of the things I've talked about

00:02:45,989 --> 00:02:50,850
there was the Perot community I also

00:02:48,930 --> 00:02:53,070
talked about the echo chamber that we

00:02:50,850 --> 00:02:55,320
all live in I talked about profile

00:02:53,070 --> 00:02:57,660
porters and how they have a simultaneous

00:02:55,320 --> 00:02:59,760
fear of change combined with an intense

00:02:57,660 --> 00:03:02,190
love of bike shedding and how this

00:02:59,760 --> 00:03:06,320
combination can to some degree lead to a

00:03:02,190 --> 00:03:08,700
culture of culture of obstructionism I

00:03:06,320 --> 00:03:10,709
also talked about our community's

00:03:08,700 --> 00:03:12,040
obsession with hanging on to the old

00:03:10,709 --> 00:03:14,610
ways of doing things

00:03:12,040 --> 00:03:17,109
and not willing to let these things go

00:03:14,610 --> 00:03:20,200
Sawyer X get a great presentation about

00:03:17,109 --> 00:03:21,640
this particular subject I talked about

00:03:20,200 --> 00:03:23,980
our inability to move the language

00:03:21,640 --> 00:03:29,790
forward and our collective obsession

00:03:23,980 --> 00:03:32,260
with backwards compatibility I also

00:03:29,790 --> 00:03:34,390
spoke about how Sipan is no longer the

00:03:32,260 --> 00:03:36,909
only game in town other languages like

00:03:34,390 --> 00:03:39,400
Ruby Python JavaScript c-sharp Java

00:03:36,909 --> 00:03:41,290
they're all very quickly catching up

00:03:39,400 --> 00:03:44,500
both in module counts as well as

00:03:41,290 --> 00:03:46,569
sophisticated tooling support we do

00:03:44,500 --> 00:03:50,200
still have the best tool chain for sure

00:03:46,569 --> 00:03:53,049
we've got C pants we've got all that

00:03:50,200 --> 00:03:54,760
stuff you guys know we have the meta

00:03:53,049 --> 00:03:57,159
Sipan and the search ability that that

00:03:54,760 --> 00:03:59,500
has on there and all the AP ID and what

00:03:57,159 --> 00:04:01,389
that can build off of that but I want

00:03:59,500 --> 00:04:02,799
you all to keep in mind that it's only a

00:04:01,389 --> 00:04:04,269
matter of time before these other

00:04:02,799 --> 00:04:06,700
languages and these other communities

00:04:04,269 --> 00:04:09,010
catch up ok they can see what we've done

00:04:06,700 --> 00:04:13,090
copy it learn from our mistakes and move

00:04:09,010 --> 00:04:14,739
on I also spoke about the kind of

00:04:13,090 --> 00:04:17,189
unfortunate hole that Perl 6 has to

00:04:14,739 --> 00:04:17,189
climb out of

00:04:20,629 --> 00:04:26,930
I talk about the state of the pro/5 core

00:04:25,550 --> 00:04:32,440
it's been called Jenga several times

00:04:26,930 --> 00:04:32,440
today this is one of the censored slides

00:04:33,159 --> 00:04:39,159
by this point you're probably asking why

00:04:35,509 --> 00:04:42,470
I'm I'm being so negative in keynote

00:04:39,159 --> 00:04:45,500
okay so right not sure if trolling maybe

00:04:42,470 --> 00:04:47,960
just an meme that's all anyway

00:04:45,500 --> 00:04:49,940
so I want to assure you though that I

00:04:47,960 --> 00:04:51,620
set all this not because I hate Perl not

00:04:49,940 --> 00:04:53,659
because I want Perl to die I said it

00:04:51,620 --> 00:04:56,449
because I love pearl and I want pearl to

00:04:53,659 --> 00:04:57,979
become pro five and pro six to both

00:04:56,449 --> 00:05:01,610
become the awesome languages that I know

00:04:57,979 --> 00:05:03,860
they can so at the end of that talk I

00:05:01,610 --> 00:05:05,150
introduced a project of mine pet project

00:05:03,860 --> 00:05:09,139
I had to talk about it earlier called

00:05:05,150 --> 00:05:11,090
MOU which is what I'm calling an oaf on

00:05:09,139 --> 00:05:14,180
prototype of or optimized for fun

00:05:11,090 --> 00:05:17,620
prototype of ultra-modern pro/5 and I

00:05:14,180 --> 00:05:20,090
simply wanted a couple of things from oh

00:05:17,620 --> 00:05:21,590
yeah it's a basic stuff that won't go

00:05:20,090 --> 00:05:23,509
over too much and this transition is

00:05:21,590 --> 00:05:30,500
gonna fail and that's really bad hold on

00:05:23,509 --> 00:05:34,190
one second comes back again okay my

00:05:30,500 --> 00:05:36,680
reasoning for doing this was because I

00:05:34,190 --> 00:05:38,539
wanted to create a new language or I

00:05:36,680 --> 00:05:39,409
wanted to take the Perl 5 language and I

00:05:38,539 --> 00:05:42,889
want to move it forward

00:05:39,409 --> 00:05:45,680
okay I wanted to make it and actually go

00:05:42,889 --> 00:05:48,050
back this might look to you a lot like

00:05:45,680 --> 00:05:50,259
Perl 6 you might say hey wait a second

00:05:48,050 --> 00:05:53,389
that's a lot of what Perl 6 has okay I

00:05:50,259 --> 00:05:55,909
wanted this to I want to do this in pro

00:05:53,389 --> 00:05:57,680
5 okay I wanted to bring pro 5 forward

00:05:55,909 --> 00:05:59,659
because I believe that Perl 6 is a

00:05:57,680 --> 00:06:03,759
space-age language and let's see let's

00:05:59,659 --> 00:06:03,759
all see if keynote works No

00:06:03,909 --> 00:06:10,690
so anyways picture Larry there in space

00:06:08,520 --> 00:06:11,680
this is gonna be maybe a boring talk

00:06:10,690 --> 00:06:11,950
because these transitions are not

00:06:11,680 --> 00:06:14,050
working

00:06:11,950 --> 00:06:16,150
um actually hold on let's let's try one

00:06:14,050 --> 00:06:18,180
thing real quick sorry Todd's gonna kill

00:06:16,150 --> 00:06:26,680
me

00:06:18,180 --> 00:06:35,080
sorry open key now I'll just talk

00:06:26,680 --> 00:06:39,760
amongst yourselves so let's see

00:06:35,080 --> 00:06:43,300
No all right all right I have no idea

00:06:39,760 --> 00:06:45,040
what happened yeah we all hate keno so

00:06:43,300 --> 00:06:47,110
anyway all right so so my point there

00:06:45,040 --> 00:06:48,910
was is his face pearls Pro six is a

00:06:47,110 --> 00:06:49,720
space-age language it's a great language

00:06:48,910 --> 00:06:52,770
okay

00:06:49,720 --> 00:06:55,510
and we need to give it time to finish we

00:06:52,770 --> 00:06:57,280
give the Perl 6 developers the time to

00:06:55,510 --> 00:06:59,200
get it done but in the meantime Perl 5

00:06:57,280 --> 00:07:03,669
doesn't have to just sit and wait okay

00:06:59,200 --> 00:07:06,400
so now that was the past let's get on

00:07:03,669 --> 00:07:09,070
with the talk here so why did I choose

00:07:06,400 --> 00:07:11,050
Detroit partially it was because Todd

00:07:09,070 --> 00:07:12,750
pushed me for an abstract before I'd

00:07:11,050 --> 00:07:15,490
figured out what I wanted to talk about

00:07:12,750 --> 00:07:17,110
but you know when I thought about it you

00:07:15,490 --> 00:07:20,080
know purlins Detroit has some

00:07:17,110 --> 00:07:21,970
similarities Detroit was once the center

00:07:20,080 --> 00:07:24,190
of crazy productivity okay

00:07:21,970 --> 00:07:27,940
much like Perl if we all remember back

00:07:24,190 --> 00:07:30,850
to the late 90s but at some point many

00:07:27,940 --> 00:07:33,400
of Detroit's big companies they left ok

00:07:30,850 --> 00:07:35,229
also not entirely like Perl some of the

00:07:33,400 --> 00:07:38,410
companies would have abandoned us I mean

00:07:35,229 --> 00:07:39,910
abandon us but Detroit is also kind of

00:07:38,410 --> 00:07:44,710
started to rot from the inside as you

00:07:39,910 --> 00:07:46,780
can see sort of like Perl - kind of and

00:07:44,710 --> 00:07:48,490
lastly there's actually a lot of people

00:07:46,780 --> 00:07:50,140
out there who are trying to make Detroit

00:07:48,490 --> 00:07:52,810
a better place or trying to revive

00:07:50,140 --> 00:07:55,000
Detroit but you know what most people

00:07:52,810 --> 00:07:56,740
don't know that kind of like Perl again

00:07:55,000 --> 00:07:58,479
we're all all of us in this room are

00:07:56,740 --> 00:07:59,560
trying to make pearl a better place but

00:07:58,479 --> 00:08:03,970
it doesn't get outside of our echo

00:07:59,560 --> 00:08:07,600
chamber so you can think of this talk is

00:08:03,970 --> 00:08:10,270
part 2 of that talk that I gave in

00:08:07,600 --> 00:08:12,479
Orlando what I want to sort of go over

00:08:10,270 --> 00:08:18,880
is talk about some of the insights that

00:08:12,479 --> 00:08:20,419
that that talk brought and in the

00:08:18,880 --> 00:08:22,460
ensuing discussion

00:08:20,419 --> 00:08:25,189
and what that all came to so I also

00:08:22,460 --> 00:08:26,300
recently realized the last talk I gave I

00:08:25,189 --> 00:08:28,550
gave from the point of view of a

00:08:26,300 --> 00:08:31,789
programmer in that my solution was

00:08:28,550 --> 00:08:33,079
mostly just more programming but the

00:08:31,789 --> 00:08:35,959
fact of the matter is and let's see if

00:08:33,079 --> 00:08:38,719
the transition doesn't mess up again and

00:08:35,959 --> 00:08:45,079
it did hold on I like this picture I

00:08:38,719 --> 00:08:46,670
want to so but I realized that I

00:08:45,079 --> 00:08:55,100
actually don't do that much programming

00:08:46,670 --> 00:08:56,390
anymore and because of that this is

00:08:55,100 --> 00:08:59,480
gonna be really bad if I have to do all

00:08:56,390 --> 00:09:01,390
my transitions manually this is actually

00:08:59,480 --> 00:09:04,399
a picture of me drinking my lunch I

00:09:01,390 --> 00:09:06,050
actually asked one of my my name my my

00:09:04,399 --> 00:09:08,149
minions to to take the picture for me i

00:09:06,050 --> 00:09:10,790
delegated No

00:09:08,149 --> 00:09:13,579
so I actually approached the MOU project

00:09:10,790 --> 00:09:16,010
as a project manager from the start but

00:09:13,579 --> 00:09:17,510
I found that I eventually banshan this

00:09:16,010 --> 00:09:19,940
approach because I got nothing done I

00:09:17,510 --> 00:09:21,260
spent all day talking and kind of taking

00:09:19,940 --> 00:09:23,329
meetings with people and stuff like that

00:09:21,260 --> 00:09:26,480
which might sound familiar to people who

00:09:23,329 --> 00:09:27,920
deal with project managers but that said

00:09:26,480 --> 00:09:29,750
I actually want to just talk about some

00:09:27,920 --> 00:09:32,600
of the things that I discovered during

00:09:29,750 --> 00:09:35,480
that first phase and sort of the

00:09:32,600 --> 00:09:36,949
important problems that I found in the

00:09:35,480 --> 00:09:39,440
community that we really need to have a

00:09:36,949 --> 00:09:45,019
discussion about and again let's see if

00:09:39,440 --> 00:09:55,070
these transitions we're gonna do

00:09:45,019 --> 00:09:57,079
something different here okay so people

00:09:55,070 --> 00:09:59,510
started asking me or people started

00:09:57,079 --> 00:10:01,730
throwing in their two cents and and

00:09:59,510 --> 00:10:07,480
giving me a lot of opinions about what

00:10:01,730 --> 00:10:07,480
they would like to see in Perl okay

00:10:08,110 --> 00:10:13,310
exactly so you know there's things like

00:10:11,990 --> 00:10:15,620
getting rid of autoload I want real

00:10:13,310 --> 00:10:17,570
threads I want contexts I don't want

00:10:15,620 --> 00:10:20,300
wanna ray I want UTF by default

00:10:17,570 --> 00:10:21,949
everywhere please include that mop thing

00:10:20,300 --> 00:10:23,870
that you were working on before fix

00:10:21,949 --> 00:10:25,310
smart matching remove auto or indirect

00:10:23,870 --> 00:10:27,079
syntax all that kind of stuff like that

00:10:25,310 --> 00:10:29,470
and you guys get to see all my speaker

00:10:27,079 --> 00:10:29,470
notes too

00:10:30,089 --> 00:10:39,269
I can hear myself echoing that's weird

00:10:36,350 --> 00:10:42,899
so so one of the things though that came

00:10:39,269 --> 00:10:45,629
out of this was that the most common

00:10:42,899 --> 00:10:48,930
request was please implement some

00:10:45,629 --> 00:10:52,399
portion of Sipan okay and this is this

00:10:48,930 --> 00:10:52,399
is sort of the crux of this talk here

00:10:52,819 --> 00:10:57,089
people said well maybe just the procure

00:10:55,740 --> 00:10:59,550
purl parts

00:10:57,089 --> 00:11:01,319
perhaps some arbitrary percentage eighty

00:10:59,550 --> 00:11:03,569
or ninety you know whatever something

00:11:01,319 --> 00:11:04,980
like that and so I actually took that as

00:11:03,569 --> 00:11:06,629
a challenge at first and I decided to go

00:11:04,980 --> 00:11:13,139
start looking and see what sort of that

00:11:06,629 --> 00:11:14,309
would entail this actually you know it's

00:11:13,139 --> 00:11:16,740
gonna screwed up so let's forget about

00:11:14,309 --> 00:11:19,050
it that slide those speaks for itself it

00:11:16,740 --> 00:11:20,850
was it was not a pretty time looking at

00:11:19,050 --> 00:11:22,230
all that stuff and it turns out that

00:11:20,850 --> 00:11:25,470
some of the stuff that I found in the

00:11:22,230 --> 00:11:27,499
Perl 5 core that I thought was a problem

00:11:25,470 --> 00:11:29,490
the fetish Trebek words compatibility

00:11:27,499 --> 00:11:32,670
and all that kind of stuff like that it

00:11:29,490 --> 00:11:36,360
wasn't really isolated to Perl 5 or the

00:11:32,670 --> 00:11:40,079
profile core it was also a problem in

00:11:36,360 --> 00:11:42,449
Sipan ok if you and it's multiplied by

00:11:40,079 --> 00:11:45,089
the 27,000 modules that we actually have

00:11:42,449 --> 00:11:47,429
out on Sipan ok or whatever the current

00:11:45,089 --> 00:11:49,050
module count is if you look at the list

00:11:47,429 --> 00:11:50,160
of features that I showed before some

00:11:49,050 --> 00:11:51,540
that people wanted to add some that

00:11:50,160 --> 00:11:54,329
people wanted to take away some people

00:11:51,540 --> 00:11:56,850
want to fix and then pick a module pick

00:11:54,329 --> 00:11:58,769
any module at random and if that module

00:11:56,850 --> 00:12:01,649
itself doesn't either use or abuse those

00:11:58,769 --> 00:12:04,139
features then I'll bet you that in that

00:12:01,649 --> 00:12:06,059
the modules dependency chain is a module

00:12:04,139 --> 00:12:09,269
that also uses and abuses those features

00:12:06,059 --> 00:12:11,129
ok and if it doesn't do any of that

00:12:09,269 --> 00:12:14,509
it's probably an acne module and it's

00:12:11,129 --> 00:12:14,509
not that useful ok

00:12:15,750 --> 00:12:23,019
we are tied not only is dark pan tied to

00:12:20,980 --> 00:12:24,910
this long backwards-compatibility okay

00:12:23,019 --> 00:12:26,950
dark pan being the the great unwashed

00:12:24,910 --> 00:12:28,930
mast of Perl code that exists out there

00:12:26,950 --> 00:12:31,149
that we don't know exactly what it is

00:12:28,930 --> 00:12:34,329
and what it does and what it uses but

00:12:31,149 --> 00:12:36,220
not only is that tied to the backwards

00:12:34,329 --> 00:12:38,350
compatibility and can we risk breaking

00:12:36,220 --> 00:12:42,100
it by trying to change the profile core

00:12:38,350 --> 00:12:44,230
but also Sipan itself is is linked to

00:12:42,100 --> 00:12:49,000
that and will be can very easily be

00:12:44,230 --> 00:12:52,180
broken for the same thing for instance

00:12:49,000 --> 00:12:54,640
test more okay test more is commonly

00:12:52,180 --> 00:12:56,410
thought of it's coming leaing knowledge

00:12:54,640 --> 00:12:57,970
to be one of the modules that if you if

00:12:56,410 --> 00:13:01,360
you upload a broken test more it will

00:12:57,970 --> 00:13:03,370
break Sipan I'm not gonna hit the slide

00:13:01,360 --> 00:13:03,610
advance but there would be some numbers

00:13:03,370 --> 00:13:06,910
there

00:13:03,610 --> 00:13:11,019
according to Metis if in 12,000 741

00:13:06,910 --> 00:13:14,560
modules depend directly on test more so

00:13:11,019 --> 00:13:16,149
you're guaranteed to break 12,000 741

00:13:14,560 --> 00:13:19,690
modules I think that numbers totally off

00:13:16,149 --> 00:13:21,490
I'm sure it's much higher okay if you go

00:13:19,690 --> 00:13:23,500
looking and test more it's actually not

00:13:21,490 --> 00:13:25,959
that bad of a code base but it does have

00:13:23,500 --> 00:13:28,120
some really ugly corners in it okay and

00:13:25,959 --> 00:13:29,800
I picked this not just because it's got

00:13:28,120 --> 00:13:31,000
the ugly corners in it and it's an older

00:13:29,800 --> 00:13:32,740
module and it's been around since

00:13:31,000 --> 00:13:34,720
probably about 2000 or so or something

00:13:32,740 --> 00:13:37,300
like that but I pick it because it's

00:13:34,720 --> 00:13:38,529
actively being developed okay this is

00:13:37,300 --> 00:13:40,600
not something that's been sitting around

00:13:38,529 --> 00:13:42,390
and rotting this is well-tended code it

00:13:40,600 --> 00:13:45,130
just happens to be tied to a language

00:13:42,390 --> 00:13:50,279
that has to maintain this old sort of

00:13:45,130 --> 00:13:52,390
rotting backward compatibility and

00:13:50,279 --> 00:13:54,610
actually it's all I mean subroutine

00:13:52,390 --> 00:13:57,190
prototypes strict drafts or non strict

00:13:54,610 --> 00:13:58,810
graphs all sort of stuff like that to

00:13:57,190 --> 00:14:00,550
make matters worse Xu tools make maker

00:13:58,810 --> 00:14:03,490
okay if you've looked at the guts of

00:14:00,550 --> 00:14:05,079
this that is definitely ugly okay test

00:14:03,490 --> 00:14:07,240
more Scott a few ugly bits but X utils

00:14:05,079 --> 00:14:08,399
make maker he's got some Horrors inside

00:14:07,240 --> 00:14:11,110
it okay

00:14:08,399 --> 00:14:12,490
according to Metis if in ten thousand

00:14:11,110 --> 00:14:14,230
three hundred and five modules depend

00:14:12,490 --> 00:14:15,459
upon it again I think that's got to be

00:14:14,230 --> 00:14:18,459
totally wrong there's got to be a much

00:14:15,459 --> 00:14:21,339
higher count okay so the point is is

00:14:18,459 --> 00:14:23,890
that if you start to change the core of

00:14:21,339 --> 00:14:26,680
perl you start to break some of our core

00:14:23,890 --> 00:14:27,220
tool chain and some of the core modules

00:14:26,680 --> 00:14:30,519
that we all

00:14:27,220 --> 00:14:32,860
depend upon okay and I don't mean to

00:14:30,519 --> 00:14:37,810
pick on schwöre him but since he's not

00:14:32,860 --> 00:14:40,930
here why not no honestly just kidding

00:14:37,810 --> 00:14:43,930
he'll find me he's still at Austin so no

00:14:40,930 --> 00:14:46,329
uh he's dedicated a ton of time a ton of

00:14:43,930 --> 00:14:49,899
time over the years to make these two

00:14:46,329 --> 00:14:52,060
modules do what they do okay and the bad

00:14:49,899 --> 00:14:53,170
programming that's within them is not

00:14:52,060 --> 00:14:53,709
there because SH Warren's a bad

00:14:53,170 --> 00:14:55,810
programmer

00:14:53,709 --> 00:14:57,759
on the contrary it's there because of

00:14:55,810 --> 00:14:59,920
some of the weird edge cases he has to

00:14:57,759 --> 00:15:01,930
support some of the old platforms he has

00:14:59,920 --> 00:15:03,790
to support again that same issue that we

00:15:01,930 --> 00:15:05,470
have in the backwards or in the profile

00:15:03,790 --> 00:15:08,949
core and the problem with backwards

00:15:05,470 --> 00:15:12,779
compatibility we also have in our core

00:15:08,949 --> 00:15:15,399
modules the core the bedrocks of Sipan

00:15:12,779 --> 00:15:16,540
so where does that leave us we're stuck

00:15:15,399 --> 00:15:17,410
between a rock and a hard place here

00:15:16,540 --> 00:15:19,600
okay

00:15:17,410 --> 00:15:21,550
the rock being the 25-year commitment to

00:15:19,600 --> 00:15:23,379
backwards compatibility in the profile

00:15:21,550 --> 00:15:25,750
core and the hard place being the

00:15:23,379 --> 00:15:28,149
millions of lines of code on Sipan which

00:15:25,750 --> 00:15:30,310
depend upon that commitment okay

00:15:28,149 --> 00:15:32,740
both of these drive up the cost of

00:15:30,310 --> 00:15:35,439
adding new features I don't see if

00:15:32,740 --> 00:15:38,050
keynotes bullet points work and they

00:15:35,439 --> 00:15:40,329
don't so all right I'm gonna read those

00:15:38,050 --> 00:15:41,769
slides the cost of adding new features

00:15:40,329 --> 00:15:44,639
what is the cost of adding new features

00:15:41,769 --> 00:15:46,660
okay the cost of adding new features is

00:15:44,639 --> 00:15:49,240
the possibility of slowing down the

00:15:46,660 --> 00:15:50,470
runtime or the execution time right it's

00:15:49,240 --> 00:15:53,800
the possibility of getting it wrong

00:15:50,470 --> 00:15:55,120
again okay we got it wrong with with

00:15:53,800 --> 00:15:56,920
some of the smart matching stuff and

00:15:55,120 --> 00:15:58,300
we're having trouble bring that out so

00:15:56,920 --> 00:16:02,170
that also meant that that begs the

00:15:58,300 --> 00:16:04,930
question what is the cost of removing

00:16:02,170 --> 00:16:06,490
old and broken features now I know we

00:16:04,930 --> 00:16:09,009
have removed some of them in the past

00:16:06,490 --> 00:16:12,459
but it's a very difficult procedure it's

00:16:09,009 --> 00:16:15,579
very hard to do okay so this begs the

00:16:12,459 --> 00:16:17,980
question what is the cost of our

00:16:15,579 --> 00:16:20,949
commitment our 25-year commitment to

00:16:17,980 --> 00:16:22,980
backwards compatibility okay we are

00:16:20,949 --> 00:16:27,100
stuck as a language we're not evolving

00:16:22,980 --> 00:16:29,740
monkey slide so you see I believe that

00:16:27,100 --> 00:16:32,319
something happened in 2000 John or want

00:16:29,740 --> 00:16:34,750
through that cup chips alson burg

00:16:32,319 --> 00:16:36,839
stopped writing topaz Larry started

00:16:34,750 --> 00:16:39,579
taking RFC's from everybody and

00:16:36,839 --> 00:16:40,870
development of Perl six began okay it

00:16:39,579 --> 00:16:43,810
was our future

00:16:40,870 --> 00:16:49,270
and but at that point Perl 5 kind of

00:16:43,810 --> 00:16:50,830
stopped okay meanwhile Larry has become

00:16:49,270 --> 00:16:54,850
the Dave Bowman of programming language

00:16:50,830 --> 00:16:56,440
design he's going beyond the stars okay

00:16:54,850 --> 00:16:59,080
him and the other Sixers they're out

00:16:56,440 --> 00:17:01,890
there exploring time and space having a

00:16:59,080 --> 00:17:07,900
grand old time and doing brilliant work

00:17:01,890 --> 00:17:08,920
but meanwhile I'm glad I didn't have a

00:17:07,900 --> 00:17:12,699
transition here because I like this

00:17:08,920 --> 00:17:15,250
picture meanwhile those of us still

00:17:12,699 --> 00:17:17,199
using pro/5 have to listen to stupid

00:17:15,250 --> 00:17:19,150
Fudd we have to listen to people saying

00:17:17,199 --> 00:17:22,480
Perl is a right only language Perl is on

00:17:19,150 --> 00:17:23,500
maintainable line noise etc etc etc we

00:17:22,480 --> 00:17:25,720
all know that's not true

00:17:23,500 --> 00:17:28,660
but that said some of the remaining

00:17:25,720 --> 00:17:30,910
criticisms are actually valid because

00:17:28,660 --> 00:17:31,960
Perl 5 kind of stopped evolving at that

00:17:30,910 --> 00:17:34,030
point okay

00:17:31,960 --> 00:17:36,910
our problem our lack of a proper oo

00:17:34,030 --> 00:17:39,250
system sure it was really cool really

00:17:36,910 --> 00:17:41,410
clever back in the day but we need

00:17:39,250 --> 00:17:44,559
something updated our lack of mainstream

00:17:41,410 --> 00:17:46,570
IDE support now I know probably we could

00:17:44,559 --> 00:17:48,670
start a whole holy war between VI and

00:17:46,570 --> 00:17:51,429
Emacs but the reality is if you've ever

00:17:48,670 --> 00:17:53,710
actually really used an IDE that really

00:17:51,429 --> 00:17:55,540
was nicely supported by the language you

00:17:53,710 --> 00:17:58,480
know that it's it's it's a nice thing to

00:17:55,540 --> 00:17:59,890
have okay and we don't have that we have

00:17:58,480 --> 00:18:02,170
we have Padre it's getting there but

00:17:59,890 --> 00:18:04,000
it's not there all the way we have

00:18:02,170 --> 00:18:05,980
confusing signals references stuff it's

00:18:04,000 --> 00:18:07,270
hard to teach people originally I mean

00:18:05,980 --> 00:18:08,679
the list could go on and on we all know

00:18:07,270 --> 00:18:12,580
these words because we live with them

00:18:08,679 --> 00:18:14,429
every day and I believe that these these

00:18:12,580 --> 00:18:17,290
things are actually the reason why

00:18:14,429 --> 00:18:19,270
people don't believe that you can build

00:18:17,290 --> 00:18:21,100
large-scale systems with Perl anymore

00:18:19,270 --> 00:18:21,730
the common belief outside of the echo

00:18:21,100 --> 00:18:23,620
chamber okay

00:18:21,730 --> 00:18:24,760
not us all in here we all know that it's

00:18:23,620 --> 00:18:27,040
true because we probably either maintain

00:18:24,760 --> 00:18:28,990
one or have built one or something like

00:18:27,040 --> 00:18:31,780
that but people outside there they don't

00:18:28,990 --> 00:18:34,510
believe that it's possible and I think

00:18:31,780 --> 00:18:37,690
that's why people really say that they

00:18:34,510 --> 00:18:39,790
say to you do you really do you you use

00:18:37,690 --> 00:18:42,580
Perl what do you do with it okay you

00:18:39,790 --> 00:18:44,410
know people don't know how cool we have

00:18:42,580 --> 00:18:47,050
it in here and what we've got and part

00:18:44,410 --> 00:18:49,650
of the problem is that you know no

00:18:47,050 --> 00:18:54,270
amount of marketing oh wait sorry slide

00:18:49,650 --> 00:18:54,270
this marketing no amount of marketing

00:18:54,759 --> 00:19:02,059
thank you no amount of marketing is

00:18:58,759 --> 00:19:05,330
going to fix this because we don't have

00:19:02,059 --> 00:19:06,950
something that that people want we have

00:19:05,330 --> 00:19:09,169
the same old pearl okay

00:19:06,950 --> 00:19:11,989
no matter how cool our mousses are our

00:19:09,169 --> 00:19:14,559
dancers are mojolicious whatever how the

00:19:11,989 --> 00:19:17,599
hell you whatever plural mojolicious is

00:19:14,559 --> 00:19:19,279
deep down we're still pearl okay you can

00:19:17,599 --> 00:19:22,399
still use formats you can still check

00:19:19,279 --> 00:19:27,379
UNIX group membership you can still run

00:19:22,399 --> 00:19:28,970
your pro one script okay so we are we've

00:19:27,379 --> 00:19:30,289
got nothing to sell to the outside world

00:19:28,970 --> 00:19:32,479
so no amount of marketing is going to do

00:19:30,289 --> 00:19:36,950
that and even seep in our most popular

00:19:32,479 --> 00:19:38,599
go-to reason for still using Perl we're

00:19:36,950 --> 00:19:42,320
stuffing from the same fate we have that

00:19:38,599 --> 00:19:43,539
same backwards compatibility issue now

00:19:42,320 --> 00:19:46,159
you might ask what's wrong with this

00:19:43,539 --> 00:19:48,499
okay Perl has always been a language

00:19:46,159 --> 00:19:50,809
about getting things done no matter how

00:19:48,499 --> 00:19:53,139
sloppy dirty ugly it didn't matter all

00:19:50,809 --> 00:20:00,639
that mattered was that it worked

00:19:53,139 --> 00:20:07,580
Perl is also a glue language Lego and

00:20:00,639 --> 00:20:09,019
I'll sell t-shirts of this later on Pro

00:20:07,580 --> 00:20:10,159
can be used to bind lots of things

00:20:09,019 --> 00:20:11,720
together it's actually one of the things

00:20:10,159 --> 00:20:12,679
that's really really really really

00:20:11,720 --> 00:20:15,080
really good at it

00:20:12,679 --> 00:20:18,019
okay stringing Unix commands together on

00:20:15,080 --> 00:20:20,720
the command or in shell scripts binding

00:20:18,019 --> 00:20:24,499
C libraries building large projects and

00:20:20,720 --> 00:20:26,720
other languages binding systems to

00:20:24,499 --> 00:20:28,220
systems to networks of systems to

00:20:26,720 --> 00:20:29,840
networks of networks of systems okay

00:20:28,220 --> 00:20:32,269
Perl can glue the whole thing together

00:20:29,840 --> 00:20:34,070
and who cares what that sticky messy

00:20:32,269 --> 00:20:35,210
stuff in between looks like it doesn't

00:20:34,070 --> 00:20:35,629
have to be clean it doesn't have to be

00:20:35,210 --> 00:20:38,960
pretty

00:20:35,629 --> 00:20:41,389
it just gets it done and you know what

00:20:38,960 --> 00:20:44,029
some of those systems - and I bet go put

00:20:41,389 --> 00:20:45,710
your ATM card in an ATM get money out

00:20:44,029 --> 00:20:47,779
I'll bet you at some point that

00:20:45,710 --> 00:20:49,070
transaction will touch some pro code

00:20:47,779 --> 00:20:51,169
because pearls use pretty heavily in the

00:20:49,070 --> 00:20:53,539
financial industry now granted it went

00:20:51,169 --> 00:20:57,489
through a whole crap ton of COBOL code

00:20:53,539 --> 00:20:57,489
first but

00:20:57,490 --> 00:21:02,269
it also probably touched some Perl code

00:20:59,960 --> 00:21:04,309
okay and some of those financial systems

00:21:02,269 --> 00:21:06,860
if they were to slow down for just one

00:21:04,309 --> 00:21:09,350
second of time people could be losing

00:21:06,860 --> 00:21:12,890
lots and lots of money okay they depend

00:21:09,350 --> 00:21:14,630
upon a certain execution window to get

00:21:12,890 --> 00:21:16,039
certain data here and certain data there

00:21:14,630 --> 00:21:17,659
and doing what Perl is really good at

00:21:16,039 --> 00:21:18,799
but those scripts those scripts have

00:21:17,659 --> 00:21:20,360
stopped they're not being developed

00:21:18,799 --> 00:21:21,860
anymore they're just being maintained

00:21:20,360 --> 00:21:24,289
they're not clean they're not well

00:21:21,860 --> 00:21:27,950
factored just that it works that's all

00:21:24,289 --> 00:21:30,159
that matters again so while out in the

00:21:27,950 --> 00:21:32,389
echo chamber they might not believe this

00:21:30,159 --> 00:21:35,659
Perl runs a lot of the world

00:21:32,389 --> 00:21:37,789
there's perlis everywhere okay if you if

00:21:35,659 --> 00:21:40,460
you look at job posts for pearl pearls

00:21:37,789 --> 00:21:42,380
if you search for pearl on a job posting

00:21:40,460 --> 00:21:43,760
site you'll find pearl in there it might

00:21:42,380 --> 00:21:45,380
be the last thing on the list and it

00:21:43,760 --> 00:21:47,090
might be just because they need you to

00:21:45,380 --> 00:21:49,130
be able to hack the build script or

00:21:47,090 --> 00:21:49,880
something like that or or or fiddle with

00:21:49,130 --> 00:21:51,769
the servers or something like that

00:21:49,880 --> 00:21:53,450
Pearl's everywhere okay and we know that

00:21:51,769 --> 00:21:56,750
but those people outside the echo

00:21:53,450 --> 00:21:59,450
chamber don't okay now is this a reason

00:21:56,750 --> 00:22:01,549
that we should stop pro/5 from evolving

00:21:59,450 --> 00:22:04,279
should we just say okay hey that's great

00:22:01,549 --> 00:22:06,559
that that's that's fine you know what's

00:22:04,279 --> 00:22:07,250
wrong with this you know it's fine if

00:22:06,559 --> 00:22:09,019
you don't mind

00:22:07,250 --> 00:22:10,820
pearl becoming the next cobalt so

00:22:09,019 --> 00:22:12,500
actually it crosses COBOL out and then

00:22:10,820 --> 00:22:17,440
pearl appears so I'm gonna talk you

00:22:12,500 --> 00:22:21,789
through all the keno transitions okay

00:22:17,440 --> 00:22:21,789
I'm gonna not use keno next year

00:22:23,140 --> 00:22:30,770
yes Apple sucking but you know there's

00:22:29,540 --> 00:22:32,660
nothing wrong with this because there's

00:22:30,770 --> 00:22:34,910
a lot of money to be made in maintaining

00:22:32,660 --> 00:22:36,680
legacy code okay

00:22:34,910 --> 00:22:38,300
that's maybe not what all of us want to

00:22:36,680 --> 00:22:41,390
do there there's also a lot of money to

00:22:38,300 --> 00:22:43,970
be made and trying to upgrade code okay

00:22:41,390 --> 00:22:47,210
you can maybe upgrade to moose or your

00:22:43,970 --> 00:22:48,700
web application to plaque or or teeth

00:22:47,210 --> 00:22:51,140
with other new stuff that's out there

00:22:48,700 --> 00:22:52,520
you know going from forking into an

00:22:51,140 --> 00:22:55,490
event based model or something like that

00:22:52,520 --> 00:22:57,020
you could try and do all that there's

00:22:55,490 --> 00:22:59,180
money to be made in it but some of us

00:22:57,020 --> 00:23:01,130
want to build new stuff in profile some

00:22:59,180 --> 00:23:04,430
of us want to play with things in

00:23:01,130 --> 00:23:06,020
languages that we the that we see in

00:23:04,430 --> 00:23:09,320
other languages that we want to be able

00:23:06,020 --> 00:23:12,590
to do in Perl and we don't want to be

00:23:09,320 --> 00:23:15,050
shackled to the past okay we don't want

00:23:12,590 --> 00:23:17,540
to have to worry about whether somebody

00:23:15,050 --> 00:23:21,170
can run their curl one script in the

00:23:17,540 --> 00:23:22,400
same runtime so wouldn't it be awesome

00:23:21,170 --> 00:23:24,740
if we had something like subroutine

00:23:22,400 --> 00:23:26,870
signatures I don't know how many of you

00:23:24,740 --> 00:23:32,000
familiar with Fortran they've got

00:23:26,870 --> 00:23:34,850
subroutine signatures COBOL also got

00:23:32,000 --> 00:23:36,470
subroutine signatures Lisp and these are

00:23:34,850 --> 00:23:37,610
the three oldest programming languages

00:23:36,470 --> 00:23:39,320
out there we'll high-level programming

00:23:37,610 --> 00:23:40,640
languages out there they all have

00:23:39,320 --> 00:23:42,800
subroutine signatures and they've all

00:23:40,640 --> 00:23:46,340
had them from sometime within the 60s or

00:23:42,800 --> 00:23:48,080
70s okay now that's not to say that the

00:23:46,340 --> 00:23:50,320
add underscore and all that isn't useful

00:23:48,080 --> 00:23:52,700
I've done a lot of really interesting

00:23:50,320 --> 00:23:56,120
and I know Matt trout's in a lot of very

00:23:52,700 --> 00:23:58,010
evil things with this okay but

00:23:56,120 --> 00:23:59,030
ultimately it would be nice to just have

00:23:58,010 --> 00:24:02,240
something as simple as subroutine

00:23:59,030 --> 00:24:04,460
signatures and the sort of that's kind

00:24:02,240 --> 00:24:07,010
of sad fact is it's 2013 and we're

00:24:04,460 --> 00:24:08,180
actually still debating it I think Rick

00:24:07,010 --> 00:24:12,050
can you back me up on this have you

00:24:08,180 --> 00:24:14,920
accepted it as a feature it's not done

00:24:12,050 --> 00:24:14,920
but it's gonna happen so

00:24:16,970 --> 00:24:25,400
but it's taken us till now oh I'm sorry

00:24:22,650 --> 00:24:25,400
Rick it was your fault

00:24:26,480 --> 00:24:30,060
Rick said we were waiting for him so he

00:24:28,950 --> 00:24:32,130
he'll take the blame

00:24:30,060 --> 00:24:33,330
he'll bite he'll buy beers - well

00:24:32,130 --> 00:24:37,050
ultimately it's all your fault right

00:24:33,330 --> 00:24:39,450
Larry so but don't take we still love

00:24:37,050 --> 00:24:41,250
you you know this is what we have now

00:24:39,450 --> 00:24:42,810
which which can get weird and this is

00:24:41,250 --> 00:24:44,340
also again this is this is one of the

00:24:42,810 --> 00:24:46,860
things too that I think this is hard to

00:24:44,340 --> 00:24:48,890
teach new programmers to so when you

00:24:46,860 --> 00:24:50,820
bring them into Perl and you say well

00:24:48,890 --> 00:24:53,670
yeah you have to unpack your own

00:24:50,820 --> 00:24:55,170
arguments and well actually the defined

00:24:53,670 --> 00:24:57,330
or will only work in five 10 so if

00:24:55,170 --> 00:25:00,000
you're stuck in five six too bad

00:24:57,330 --> 00:25:01,410
and then what's that what's why do you

00:25:00,000 --> 00:25:03,540
have all that what's the line noise

00:25:01,410 --> 00:25:09,210
that's well that's dereferencing syntax

00:25:03,540 --> 00:25:15,380
you have to what okay okay they're there

00:25:09,210 --> 00:25:17,730
for effect I know they're unnecessary

00:25:15,380 --> 00:25:19,200
okay and and now you might say to

00:25:17,730 --> 00:25:20,580
yourself well we could do this all

00:25:19,200 --> 00:25:23,160
without array references sure well

00:25:20,580 --> 00:25:25,790
that's that's Tim toady okay which as we

00:25:23,160 --> 00:25:29,310
all know has a dark side as well

00:25:25,790 --> 00:25:31,710
wouldn't it be nice if we had a proper

00:25:29,310 --> 00:25:33,780
class system Larry has already been nice

00:25:31,710 --> 00:25:38,960
enough to design one for us that we can

00:25:33,780 --> 00:25:41,550
just copy instead we have this okay now

00:25:38,960 --> 00:25:43,890
you know this is blessed references

00:25:41,550 --> 00:25:46,680
subroutines and packages that masquerade

00:25:43,890 --> 00:25:48,540
is methods magic is a variables filled

00:25:46,680 --> 00:25:50,940
with strings that should potentially

00:25:48,540 --> 00:25:53,340
hopefully map back to a package name and

00:25:50,940 --> 00:25:55,800
that's how we do inheritance okay this

00:25:53,340 --> 00:25:58,830
is weird it's hard enough to teach a new

00:25:55,800 --> 00:26:00,330
student no programming now you have to

00:25:58,830 --> 00:26:04,710
teach him all the weird things we jump

00:26:00,330 --> 00:26:06,390
through now in 1995 when Larry created

00:26:04,710 --> 00:26:08,100
this it was actually very clever and it

00:26:06,390 --> 00:26:10,250
was very useful but a lot of thinking

00:26:08,100 --> 00:26:12,780
and a lot of a lot of work has gone into

00:26:10,250 --> 00:26:14,970
sort of stabilizing oh oh in a

00:26:12,780 --> 00:26:17,450
conceptual way and we've unfortunately

00:26:14,970 --> 00:26:17,450
not kept up

00:26:18,199 --> 00:26:28,049
again for a fact I'm a showman also

00:26:25,439 --> 00:26:31,289
exceptions Oh wouldn't we all love to

00:26:28,049 --> 00:26:35,099
have real exceptions instead we have to

00:26:31,289 --> 00:26:37,109
do this and actually that doesn't handle

00:26:35,099 --> 00:26:38,639
all the edge cases okay

00:26:37,109 --> 00:26:40,199
this what this doesn't handle is it

00:26:38,639 --> 00:26:43,139
won't handle overloaded objects the

00:26:40,199 --> 00:26:45,539
possibility of dollar at being false and

00:26:43,139 --> 00:26:47,459
I'm sure five or six other things that I

00:26:45,539 --> 00:26:48,479
don't even know about okay you're

00:26:47,459 --> 00:26:50,849
obviously not going to put this in your

00:26:48,479 --> 00:26:53,519
code now fortunately we have try tiny

00:26:50,849 --> 00:26:55,649
which hopefully every one of you uses if

00:26:53,519 --> 00:26:57,659
you ever do anything with exceptions and

00:26:55,649 --> 00:27:00,299
catching them okay but unfortunately try

00:26:57,659 --> 00:27:02,639
tiny only solved half the problem try

00:27:00,299 --> 00:27:06,239
tiny to solve the try-catch block okay

00:27:02,639 --> 00:27:07,349
it didn't solve the the exceptions on

00:27:06,239 --> 00:27:08,579
the other side because you have to have

00:27:07,349 --> 00:27:12,119
a proper well structured exception

00:27:08,579 --> 00:27:14,879
system to go along with your exception

00:27:12,119 --> 00:27:16,949
catching we now we still have the the

00:27:14,879 --> 00:27:19,529
millions of possibility that Tim toady

00:27:16,949 --> 00:27:23,039
out on Sipan for that wouldn't it also

00:27:19,529 --> 00:27:26,819
be nice to have threads Liz just for you

00:27:23,039 --> 00:27:29,309
threads not AI threads but real threads

00:27:26,819 --> 00:27:31,049
okay and now granted this probably will

00:27:29,309 --> 00:27:33,479
this is a theoretical thing I just threw

00:27:31,049 --> 00:27:34,979
up based on some Java examples I'm sure

00:27:33,479 --> 00:27:37,589
has race conditions and various other

00:27:34,979 --> 00:27:40,199
issues no doubt but wouldn't it be just

00:27:37,589 --> 00:27:43,049
nice to have real threats instead we

00:27:40,199 --> 00:27:45,209
have this which is really weird if

00:27:43,049 --> 00:27:47,399
anybody knows about AI threads out there

00:27:45,209 --> 00:27:50,009
you know just the horror that awaits you

00:27:47,399 --> 00:27:51,869
when you try and use them and actually

00:27:50,009 --> 00:27:53,429
this I copied this out of the thread

00:27:51,869 --> 00:27:55,679
queue module and I just sort of trimmed

00:27:53,429 --> 00:27:58,139
it down for the slide it's a good chance

00:27:55,679 --> 00:27:59,639
that this will actually segfault and

00:27:58,139 --> 00:28:00,539
delete your entire music directory just

00:27:59,639 --> 00:28:04,649
out of spite

00:28:00,539 --> 00:28:06,209
I'm not sure okay but even that let's

00:28:04,649 --> 00:28:08,189
let's forget about threads even for a

00:28:06,209 --> 00:28:10,049
second okay because most of the rest of

00:28:08,189 --> 00:28:11,339
the world seems to have done that okay a

00:28:10,049 --> 00:28:15,149
lot of everybody else is moving on to

00:28:11,339 --> 00:28:16,379
newer forms of concurrency okay and and

00:28:15,149 --> 00:28:18,629
threads are really just a throwback to

00:28:16,379 --> 00:28:20,549
the late 90s my personal favorite is the

00:28:18,629 --> 00:28:22,409
actor system so if you've looked at

00:28:20,549 --> 00:28:24,689
Scala at all if you've looked at Erlang

00:28:22,409 --> 00:28:26,549
at all actually if you happen to program

00:28:24,689 --> 00:28:30,000
at the Defense Department in the late

00:28:26,549 --> 00:28:31,050
90s and used real-time Atta tasks this

00:28:30,000 --> 00:28:35,070
kind of stuff will be familiar to you

00:28:31,050 --> 00:28:37,560
okay actors are essentially a loop

00:28:35,070 --> 00:28:39,870
waiting for messages okay there's a

00:28:37,560 --> 00:28:41,910
share nothing approach so you reduce a

00:28:39,870 --> 00:28:45,360
whole case of deadlocks and race

00:28:41,910 --> 00:28:47,040
conditions and stuff like that and you

00:28:45,360 --> 00:28:49,290
basically just respond to messages to

00:28:47,040 --> 00:28:53,190
come in so this is a basic example

00:28:49,290 --> 00:28:55,110
borrowed from the Scala example this is

00:28:53,190 --> 00:29:00,060
the other side of it okay

00:28:55,110 --> 00:29:01,680
and this is the the concept of actors

00:29:00,060 --> 00:29:03,690
actually has been around for a long time

00:29:01,680 --> 00:29:06,240
like I said the the add a 95 tasks

00:29:03,690 --> 00:29:07,560
system is very similar to this chances

00:29:06,240 --> 00:29:09,420
are the nuclear-missile that might kill

00:29:07,560 --> 00:29:12,680
us all actually has that code running

00:29:09,420 --> 00:29:15,990
inside it okay using the actor system

00:29:12,680 --> 00:29:18,240
the Erlang language which was actually

00:29:15,990 --> 00:29:19,650
released in 1989 okay there's some

00:29:18,240 --> 00:29:22,350
people in here oh I'm pretty sure we're

00:29:19,650 --> 00:29:25,110
still in diapers in 1989 I think one of

00:29:22,350 --> 00:29:28,920
my co-workers right over there yeah okay

00:29:25,110 --> 00:29:30,990
that in in 1989 Erlang released was was

00:29:28,920 --> 00:29:32,820
released from the lab and has been used

00:29:30,990 --> 00:29:34,830
in production and it runs the Ericsson

00:29:32,820 --> 00:29:37,020
phone system and a soft real-time system

00:29:34,830 --> 00:29:39,210
okay that's very robust and works really

00:29:37,020 --> 00:29:41,360
well and they don't run into some of the

00:29:39,210 --> 00:29:43,410
common multi programming issues and

00:29:41,360 --> 00:29:46,380
actually the thing that I really like

00:29:43,410 --> 00:29:47,970
about actors is that actors means that

00:29:46,380 --> 00:29:50,010
you never really have to care how your

00:29:47,970 --> 00:29:53,130
concurrency is implemented under the

00:29:50,010 --> 00:29:55,290
hood okay meaning that if you just

00:29:53,130 --> 00:29:56,550
change and so let you know everybody can

00:29:55,290 --> 00:29:59,040
understand this example we create a pong

00:29:56,550 --> 00:30:00,570
will create a ping new we say we want to

00:29:59,040 --> 00:30:02,970
ping them for a hundred thousand times

00:30:00,570 --> 00:30:05,340
because we're just being a troll and

00:30:02,970 --> 00:30:07,860
then we tell them that the pong which

00:30:05,340 --> 00:30:10,860
the the sender is over there we start

00:30:07,860 --> 00:30:12,840
both of them and then they run well in

00:30:10,860 --> 00:30:15,470
theory actors if you just start to add

00:30:12,840 --> 00:30:17,550
in a little bit more information and

00:30:15,470 --> 00:30:22,250
before you say chip yes I should have

00:30:17,550 --> 00:30:22,250
quoted those those those IP addresses so

00:30:22,860 --> 00:30:31,169
yeah it's a V string thank you thank you

00:30:25,080 --> 00:30:32,460
thank you yes so just just by telling

00:30:31,169 --> 00:30:34,740
this and doing it on another machine

00:30:32,460 --> 00:30:36,720
Wow suddenly your code that was running

00:30:34,740 --> 00:30:38,580
there for the actors it's there now

00:30:36,720 --> 00:30:40,409
they're distributed objects across the

00:30:38,580 --> 00:30:45,120
network okay this is sort of the beauty

00:30:40,409 --> 00:30:47,100
of actors unfortunately in pro/5 I can't

00:30:45,120 --> 00:30:48,510
even give you an equivalent here now

00:30:47,100 --> 00:30:50,519
some of you might say well way to say

00:30:48,510 --> 00:30:52,289
we've got Poe we've got all that well

00:30:50,519 --> 00:30:54,090
you know we've been doing this

00:30:52,289 --> 00:30:57,510
event-based concurrency which which some

00:30:54,090 --> 00:31:00,240
has some woody calls has some it's

00:30:57,510 --> 00:31:00,809
somewhat related the two best ones out

00:31:00,240 --> 00:31:02,700
there

00:31:00,809 --> 00:31:06,149
one was voted the best module of the

00:31:02,700 --> 00:31:07,350
year in 1999 and the other one actually

00:31:06,149 --> 00:31:10,500
released a version not that long ago

00:31:07,350 --> 00:31:12,539
which died if there was another module

00:31:10,500 --> 00:31:16,169
in your ink that the author didn't like

00:31:12,539 --> 00:31:18,630
okay so while we have the ability to

00:31:16,169 --> 00:31:20,340
potentially do this we don't really have

00:31:18,630 --> 00:31:22,080
a good stable alternatives right now

00:31:20,340 --> 00:31:24,539
well actually not post pretty stable but

00:31:22,080 --> 00:31:26,399
anyway point is you know we don't really

00:31:24,539 --> 00:31:27,630
have a foundation out there for this

00:31:26,399 --> 00:31:29,279
kind of multi programming in multi

00:31:27,630 --> 00:31:30,960
programming is one of the key things out

00:31:29,279 --> 00:31:33,179
there that is driving a lot of some of

00:31:30,960 --> 00:31:35,010
these newer languages the ability to do

00:31:33,179 --> 00:31:37,080
multi-threading because we all how many

00:31:35,010 --> 00:31:40,649
how many people here have more than one

00:31:37,080 --> 00:31:42,000
core in the the phone or the laptop of

00:31:40,649 --> 00:31:44,909
the tablet that sitting on the lap right

00:31:42,000 --> 00:31:47,010
now okay yeah you know what

00:31:44,909 --> 00:31:48,690
Perl and these is one of them okay and

00:31:47,010 --> 00:31:50,760
most every other language only uses one

00:31:48,690 --> 00:31:51,809
of them okay until you have threads and

00:31:50,760 --> 00:31:54,240
stuff like that you're not going to get

00:31:51,809 --> 00:31:59,970
that so we are not taking an advantage

00:31:54,240 --> 00:32:01,080
of all these new cores so I like this

00:31:59,970 --> 00:32:07,139
Larry quote I've used it like three

00:32:01,080 --> 00:32:09,000
times so this quotient

00:32:07,139 --> 00:32:12,360
I talked to Larry when I when I last

00:32:09,000 --> 00:32:15,210
used this at the FCE you what he really

00:32:12,360 --> 00:32:16,139
wanted to do was make sure that there

00:32:15,210 --> 00:32:18,240
was there was a number of different

00:32:16,139 --> 00:32:19,830
possibilities going on in in pro 4 there

00:32:18,240 --> 00:32:21,419
was or a Perl there was all sort of

00:32:19,830 --> 00:32:24,360
these I don't know if you really call

00:32:21,419 --> 00:32:26,039
them Forks but Larry saw a a divergence

00:32:24,360 --> 00:32:27,779
in the communities and he wanted to

00:32:26,039 --> 00:32:29,880
bring them back and so the goal with a

00:32:27,779 --> 00:32:32,730
Pro 5 module system and ultimately Sipan

00:32:29,880 --> 00:32:34,230
builds upon this is to really encourage

00:32:32,730 --> 00:32:35,430
everybody to come together and for all

00:32:34,230 --> 00:32:37,110
of us to use

00:32:35,430 --> 00:32:39,960
his work and and create a cultural

00:32:37,110 --> 00:32:42,150
reusability okay and and again I spent a

00:32:39,960 --> 00:32:43,970
lot of time as I said earlier looking at

00:32:42,150 --> 00:32:46,170
other languages and looking at other

00:32:43,970 --> 00:32:49,230
modules that they had and their

00:32:46,170 --> 00:32:52,530
equivalents to see Pan Pearl far and

00:32:49,230 --> 00:32:53,520
away has more interdependencies now some

00:32:52,530 --> 00:32:55,080
of you might think that's a bad thing

00:32:53,520 --> 00:32:57,150
but I think that's a good thing that

00:32:55,080 --> 00:32:59,310
means that we're all working together

00:32:57,150 --> 00:33:01,020
and then we're all putting together a

00:32:59,310 --> 00:33:04,080
better platform so that we can all

00:33:01,020 --> 00:33:06,620
continue to build on top of that okay so

00:33:04,080 --> 00:33:08,880
I think this this was very this

00:33:06,620 --> 00:33:12,990
basically Larry you succeeded in this

00:33:08,880 --> 00:33:16,710
one okay this also has been used to

00:33:12,990 --> 00:33:18,900
justify by myself as well as others the

00:33:16,710 --> 00:33:21,480
idea that when we're adding stuff to the

00:33:18,900 --> 00:33:25,440
profile core we should first put it out

00:33:21,480 --> 00:33:27,450
on Sipan okay I recently decided or

00:33:25,440 --> 00:33:30,900
discovered with more work for with the

00:33:27,450 --> 00:33:33,210
p5 map work that while this approach

00:33:30,900 --> 00:33:35,790
works to a certain degree it ultimately

00:33:33,210 --> 00:33:38,100
adds more complexity to the profile core

00:33:35,790 --> 00:33:39,840
and you still end up having to make some

00:33:38,100 --> 00:33:43,170
ugly compromises in order to get a

00:33:39,840 --> 00:33:46,050
really true seamless native feel to your

00:33:43,170 --> 00:33:49,860
language on there which brings me in the

00:33:46,050 --> 00:33:52,350
next quote so pro was always designed to

00:33:49,860 --> 00:33:53,820
be an evolving language okay and I

00:33:52,350 --> 00:33:56,940
believe right now that we are at an

00:33:53,820 --> 00:34:01,710
evolute evolute evolutionary crossroads

00:33:56,940 --> 00:34:03,860
with Perl so now I've done a basically

00:34:01,710 --> 00:34:06,960
crapped all over pearl Oh

00:34:03,860 --> 00:34:08,610
so you might say hey man come on what do

00:34:06,960 --> 00:34:10,080
you you know you've got this problem

00:34:08,610 --> 00:34:12,000
what do you think we're gonna do about

00:34:10,080 --> 00:34:15,600
this what can we do about this what is

00:34:12,000 --> 00:34:18,030
the solution okay everything I said in

00:34:15,600 --> 00:34:23,100
Orlando still holds true I believe now

00:34:18,030 --> 00:34:26,160
more than ever that over over the six

00:34:23,100 --> 00:34:28,260
months of of diving into pro five diving

00:34:26,160 --> 00:34:29,940
into pro six diving with Sipan okay it's

00:34:28,260 --> 00:34:32,340
still there we have this problem all

00:34:29,940 --> 00:34:37,200
right I'm gonna illustrate this curve

00:34:32,340 --> 00:34:38,550
this again it went from down in the

00:34:37,200 --> 00:34:39,510
corner all the way up to the top right

00:34:38,550 --> 00:34:41,910
there and then just went over to the

00:34:39,510 --> 00:34:44,220
side okay so it was a Perl 5 learning

00:34:41,910 --> 00:34:46,020
right learning right angle not a

00:34:44,220 --> 00:34:47,850
learning curve

00:34:46,020 --> 00:34:52,020
sorry these jokes aren't as funny

00:34:47,850 --> 00:34:53,640
without the slides but so the this is

00:34:52,020 --> 00:34:55,710
actually a serious problem because the

00:34:53,640 --> 00:34:57,149
two current maintainer x' or the two

00:34:55,710 --> 00:35:00,240
ones who are currently being paid by the

00:34:57,149 --> 00:35:02,400
p5 are the the TP f Nick Clark and Dave

00:35:00,240 --> 00:35:05,190
Mitchell are probably the only two human

00:35:02,400 --> 00:35:07,080
beings on the planet okay capable of

00:35:05,190 --> 00:35:09,780
understanding a sizable portion of the

00:35:07,080 --> 00:35:11,190
pro/5 core everyone else after that has

00:35:09,780 --> 00:35:15,750
their little pet peeves in their little

00:35:11,190 --> 00:35:18,540
corners thank you Jeff and so the the

00:35:15,750 --> 00:35:22,620
issue comes down to you know what do we

00:35:18,540 --> 00:35:24,150
do to solve this the real problem is

00:35:22,620 --> 00:35:27,030
that small changes even small changes

00:35:24,150 --> 00:35:29,310
are going to break some stuff even if

00:35:27,030 --> 00:35:30,840
and only the only possible exception is

00:35:29,310 --> 00:35:32,610
isolated subsystems like the reject

00:35:30,840 --> 00:35:34,050
system but there's really only probably

00:35:32,610 --> 00:35:36,030
the reject system that's isolated and

00:35:34,050 --> 00:35:38,040
also to I don't know how many of you

00:35:36,030 --> 00:35:40,860
have ever looked at the pro/5 core test

00:35:38,040 --> 00:35:43,530
suite that's the facial expression

00:35:40,860 --> 00:35:45,960
you'll have after you do okay it's it's

00:35:43,530 --> 00:35:48,660
it's a to be to behold and it's a

00:35:45,960 --> 00:35:52,350
mess okay so how can we make significant

00:35:48,660 --> 00:35:55,950
improvements with the system with a code

00:35:52,350 --> 00:35:57,450
base that is got a messy test suite and

00:35:55,950 --> 00:35:59,340
has messy internals and only a few

00:35:57,450 --> 00:36:00,780
people understand sure we have the smoke

00:35:59,340 --> 00:36:03,120
testers and all that kind of stuff like

00:36:00,780 --> 00:36:04,740
that those will be fine for little

00:36:03,120 --> 00:36:06,420
things like the hash randomization

00:36:04,740 --> 00:36:08,130
change and stuff like that but a big

00:36:06,420 --> 00:36:11,970
major features they're not going to get

00:36:08,130 --> 00:36:14,190
caught by the smoke testers so we can't

00:36:11,970 --> 00:36:15,950
break our 25 25 year commitment to

00:36:14,190 --> 00:36:18,780
backwards compatibility we just can't

00:36:15,950 --> 00:36:20,880
but the thing is it's not the core it's

00:36:18,780 --> 00:36:23,940
also Sipan we've got that same problem

00:36:20,880 --> 00:36:32,690
in there so the question is is perl 6

00:36:23,940 --> 00:36:36,600
our only hope I respectfully disagree

00:36:32,690 --> 00:36:38,190
Perl 6 declared a while ago that it's a

00:36:36,600 --> 00:36:40,020
sister language it's no longer a

00:36:38,190 --> 00:36:42,420
successor to Pro 5 it's a sister

00:36:40,020 --> 00:36:44,700
language this tells me that it's okay

00:36:42,420 --> 00:36:47,760
for us to start pushing for all 5

00:36:44,700 --> 00:36:49,230
forward again okay we can start evolving

00:36:47,760 --> 00:36:52,680
the language more we don't need to wait

00:36:49,230 --> 00:36:54,930
around now so the question is Moe my

00:36:52,680 --> 00:36:58,370
project the answer no I'll tell you

00:36:54,930 --> 00:36:59,700
right now Moe is and these transitions

00:36:58,370 --> 00:37:02,040
moe

00:36:59,700 --> 00:37:05,339
is a thought experiment optimized for

00:37:02,040 --> 00:37:08,010
fun I it all started because I wanted to

00:37:05,339 --> 00:37:09,720
add a mop to the core of Perl 5 I wanted

00:37:08,010 --> 00:37:11,880
to bring mousse into the core of Perl 5

00:37:09,720 --> 00:37:13,820
and it was actually easier to write a

00:37:11,880 --> 00:37:16,800
new language than it was to do that

00:37:13,820 --> 00:37:18,180
so I want to be sure I make sure

00:37:16,800 --> 00:37:19,859
everybody knows Moe is an attempt to

00:37:18,180 --> 00:37:22,470
show a way for it I want to do like what

00:37:19,859 --> 00:37:25,109
pugs did which was to try and help Larry

00:37:22,470 --> 00:37:26,730
and the Perl 6 designers feel out the

00:37:25,109 --> 00:37:29,609
language where they wanted it to go I'm

00:37:26,730 --> 00:37:31,230
trying to do the same thing with mom but

00:37:29,609 --> 00:37:33,869
Moe is not the only thing ok

00:37:31,230 --> 00:37:36,450
reni urban has a project called p2 okay

00:37:33,869 --> 00:37:39,150
I don't know how many of you know woohoo

00:37:36,450 --> 00:37:40,770
it's based on a VM platform written by a

00:37:39,150 --> 00:37:43,109
ruby guy we won't hold that against

00:37:40,770 --> 00:37:45,990
ready it's ok

00:37:43,109 --> 00:37:49,020
the goal is a new runtime that can parse

00:37:45,990 --> 00:37:51,300
almost all of Perl 5 and potentially a

00:37:49,020 --> 00:37:52,890
little bit of excess ok so he's actually

00:37:51,300 --> 00:37:55,109
targeting some some backwards

00:37:52,890 --> 00:37:56,460
compatibility there but he also wants to

00:37:55,109 --> 00:37:57,869
add new things to it he wants to add

00:37:56,460 --> 00:38:00,450
constants he wants to add some type

00:37:57,869 --> 00:38:03,359
checking at compile time he wants to add

00:38:00,450 --> 00:38:05,940
methods and classes as well he wants to

00:38:03,359 --> 00:38:07,560
add size arrays ok so though they won't

00:38:05,940 --> 00:38:09,660
ever auto vivify larger than they are

00:38:07,560 --> 00:38:12,660
you can do a lot of compiler

00:38:09,660 --> 00:38:14,819
optimization around that he wants to add

00:38:12,660 --> 00:38:16,440
a no magic directive which means it'll

00:38:14,819 --> 00:38:21,060
take away all that crazy magic stuff

00:38:16,440 --> 00:38:23,730
that sometimes bite you in the ass ok

00:38:21,060 --> 00:38:25,859
but the nice thing about that is within

00:38:23,730 --> 00:38:27,359
that block he can also be aggressively

00:38:25,859 --> 00:38:28,500
optimizing within there because he

00:38:27,359 --> 00:38:29,099
doesn't have to account for some of the

00:38:28,500 --> 00:38:35,900
magic

00:38:29,099 --> 00:38:39,119
there's also per Leto ok / Leto / Leto

00:38:35,900 --> 00:38:42,690
compiles pro 5 to pro 5 perl 6 to pro 5

00:38:39,119 --> 00:38:44,160
Perl 5 - common lisp pro 5 to go

00:38:42,690 --> 00:38:45,660
profiles in javascript pro 6 to

00:38:44,160 --> 00:38:48,540
javascript perl 6 to profile profile

00:38:45,660 --> 00:38:50,490
everything imaginable okay flavio clock

00:38:48,540 --> 00:38:52,770
is the author of it it's a research

00:38:50,490 --> 00:38:54,630
project that he does that he's doing and

00:38:52,770 --> 00:38:56,520
he's calling a compiler collection that

00:38:54,630 --> 00:38:59,490
implements a subset of profiling pro 6

00:38:56,520 --> 00:39:00,690
ok and he's basically showing that look

00:38:59,490 --> 00:39:02,099
at all these possibilities that we could

00:39:00,690 --> 00:39:04,380
do look at all this stuff that we can do

00:39:02,099 --> 00:39:06,599
it and actually and I saw - Liz you

00:39:04,380 --> 00:39:09,450
mentioned in your talk there was a

00:39:06,599 --> 00:39:11,160
recent commits for an x64 assembly

00:39:09,450 --> 00:39:12,780
language back-end so you compile your

00:39:11,160 --> 00:39:16,280
perl 5 or perl 6

00:39:12,780 --> 00:39:18,030
the other two x64 assembly language

00:39:16,280 --> 00:39:20,460
which would be pretty cool

00:39:18,030 --> 00:39:22,050
there's also G Pro G Perl is written by

00:39:20,460 --> 00:39:25,320
a Japanese guy whose name I'm not gonna

00:39:22,050 --> 00:39:29,850
butcher on stage here his his handle is

00:39:25,320 --> 00:39:31,260
goichi G occy the github description

00:39:29,850 --> 00:39:33,480
indicates that he wants to really make

00:39:31,260 --> 00:39:36,210
it fast it seems to be written almost

00:39:33,480 --> 00:39:39,870
entirely in C++ for all we know this is

00:39:36,210 --> 00:39:42,000
chips grandchild or something like that

00:39:39,870 --> 00:39:45,110
who knows long-lost brother or something

00:39:42,000 --> 00:39:48,000
it's it's like topaz 2.0 or something

00:39:45,110 --> 00:39:50,070
but more important or more interestingly

00:39:48,000 --> 00:39:53,370
actually with this project he's

00:39:50,070 --> 00:39:55,170
releasing amat modules okay go on seep

00:39:53,370 --> 00:39:57,990
in and look at compiler double colon

00:39:55,170 --> 00:40:00,720
lexer okay it's best I can tell this is

00:39:57,990 --> 00:40:02,670
he's taking a chunk of G Perl which is

00:40:00,720 --> 00:40:04,770
just the lexer and released it out on C

00:40:02,670 --> 00:40:06,630
pan and put a pearl front interface to

00:40:04,770 --> 00:40:08,130
it so you can actually lexically analyze

00:40:06,630 --> 00:40:10,680
your Perl code and then look at it in

00:40:08,130 --> 00:40:12,330
Perl now I don't know if he has the full

00:40:10,680 --> 00:40:14,540
Perl 5 language implemented but he's

00:40:12,330 --> 00:40:20,070
definitely got a pretty sizable subset

00:40:14,540 --> 00:40:23,190
he also has on github compiler double

00:40:20,070 --> 00:40:25,770
colon parser okay which produces an AST

00:40:23,190 --> 00:40:27,510
of Perl code all right um we'll see when

00:40:25,770 --> 00:40:29,030
it's released exactly but it both of

00:40:27,510 --> 00:40:31,650
those things are very intriguing

00:40:29,030 --> 00:40:34,140
there's also pro/5 eyes so again a shout

00:40:31,650 --> 00:40:36,300
out to Michael Schwerner here okay pro/5

00:40:34,140 --> 00:40:38,220
I I kind of call his approach right now

00:40:36,300 --> 00:40:39,780
the the kitchen sink of language design

00:40:38,220 --> 00:40:41,730
there the kitchen sink approach of

00:40:39,780 --> 00:40:43,140
language design he's basically taking a

00:40:41,730 --> 00:40:45,480
whole bunch of really cool sea pan

00:40:43,140 --> 00:40:46,880
modules that change both the sim and I

00:40:45,480 --> 00:40:49,490
remember all the thing he's got auto die

00:40:46,880 --> 00:40:54,180
all that kind of stuff like that

00:40:49,490 --> 00:40:56,340
there's also nqp recently there was a

00:40:54,180 --> 00:40:59,040
pearly reunification summit that Wendy

00:40:56,340 --> 00:41:00,600
and liz helped organize and it was held

00:40:59,040 --> 00:41:02,160
in Pearl Germany we thought there was a

00:41:00,600 --> 00:41:04,650
pearl Germany

00:41:02,160 --> 00:41:07,200
and during that summit Larry revised the

00:41:04,650 --> 00:41:09,990
project which if the transitions work

00:41:07,200 --> 00:41:14,000
you'd see the name of next which was STD

00:41:09,990 --> 00:41:16,230
5 which was the Pearl 5 standard grammar

00:41:14,000 --> 00:41:18,960
implemented on top of the Pearl six

00:41:16,230 --> 00:41:21,510
grammar engine what does this mean this

00:41:18,960 --> 00:41:24,570
means that potentially we could write an

00:41:21,510 --> 00:41:26,160
mqp back-end for pro 5 which would run

00:41:24,570 --> 00:41:28,079
alongside pearl 6

00:41:26,160 --> 00:41:29,690
with nqp which would mean a huge

00:41:28,079 --> 00:41:32,130
backwards compatible or a

00:41:29,690 --> 00:41:33,809
interoperability layer now of course

00:41:32,130 --> 00:41:35,010
that doesn't actually support excess or

00:41:33,809 --> 00:41:38,579
anything like that but you know we'll

00:41:35,010 --> 00:41:42,030
get there and this slides gonna

00:41:38,579 --> 00:41:50,190
completely not work because it's kind of

00:41:42,030 --> 00:41:51,720
funny you got to see it okay gonna have

00:41:50,190 --> 00:41:55,680
to pretend the turn the transitions

00:41:51,720 --> 00:41:56,280
happened okay so the question is what is

00:41:55,680 --> 00:41:58,710
the answer

00:41:56,280 --> 00:42:01,559
and unfortunately the test gave it away

00:41:58,710 --> 00:42:03,630
it's all the above okay all of these

00:42:01,559 --> 00:42:07,079
efforts the process the original pro-sex

00:42:03,630 --> 00:42:10,470
effort my mo effort Rani's pearl to RP

00:42:07,079 --> 00:42:12,390
to effort pearl ito G pearl p5 p5 I

00:42:10,470 --> 00:42:13,589
something that I'm sure one of you has

00:42:12,390 --> 00:42:14,730
out there that you're not showing

00:42:13,589 --> 00:42:19,140
anybody because you want to keep it

00:42:14,730 --> 00:42:20,670
secret topaz shout out to chip all of

00:42:19,140 --> 00:42:22,770
the above all of these things are

00:42:20,670 --> 00:42:27,270
important things to help move the

00:42:22,770 --> 00:42:29,760
community forward okay we need to we

00:42:27,270 --> 00:42:31,170
need to keep pro/5 and pearl evolving

00:42:29,760 --> 00:42:35,880
the two sisters have to grow up together

00:42:31,170 --> 00:42:39,359
they were twins after all right and you

00:42:35,880 --> 00:42:43,020
know what I think pumpkin pearl is a

00:42:39,359 --> 00:42:44,970
good thing okay that whole pearl fought

00:42:43,020 --> 00:42:47,220
pearl 7 and all that kind of stuff you

00:42:44,970 --> 00:42:48,359
know it had this whole little debate and

00:42:47,220 --> 00:42:53,369
then Matt trout came out and said no

00:42:48,359 --> 00:42:57,059
pumpkin pearl okay like my Matt

00:42:53,369 --> 00:42:58,910
imitation I do it at parties to just

00:42:57,059 --> 00:43:03,119
AskMe

00:42:58,910 --> 00:43:05,309
so so pumpkin pearl though what pumpkin

00:43:03,119 --> 00:43:06,960
pearl does is what pearl six already

00:43:05,309 --> 00:43:09,539
figured out surprise surprise they

00:43:06,960 --> 00:43:11,190
figure everything out before us pearl

00:43:09,539 --> 00:43:13,200
six figured out that the name is equally

00:43:11,190 --> 00:43:15,180
as important as number if not more

00:43:13,200 --> 00:43:18,180
there's recruit Oh pearl six there's

00:43:15,180 --> 00:43:20,069
Nicci a pearl six what are the others

00:43:18,180 --> 00:43:22,799
pugs pearl six there's all these out

00:43:20,069 --> 00:43:23,700
there why can't we have that in pro five

00:43:22,799 --> 00:43:25,859
okay

00:43:23,700 --> 00:43:27,510
pearl pearl itself is a multi-paradigm

00:43:25,859 --> 00:43:29,240
programming language functional

00:43:27,510 --> 00:43:31,079
programming object-oriented programming

00:43:29,240 --> 00:43:32,940
procedural programming whatever you want

00:43:31,079 --> 00:43:35,160
it to do but it's also a multi-purpose

00:43:32,940 --> 00:43:36,539
programming language which means you can

00:43:35,160 --> 00:43:38,189
use it in a number of different

00:43:36,539 --> 00:43:40,380
varmints shell scripting GUI

00:43:38,189 --> 00:43:44,039
applications web applications big data

00:43:40,380 --> 00:43:45,239
crunching whatever okay all those things

00:43:44,039 --> 00:43:46,109
all those different environments that

00:43:45,239 --> 00:43:49,709
we're using them in they have

00:43:46,109 --> 00:43:50,910
contradictory needs okay so why can't we

00:43:49,709 --> 00:43:53,009
have multiple runtimes

00:43:50,910 --> 00:43:55,049
why can't we have multiple VMs sometimes

00:43:53,009 --> 00:43:57,239
maybe more optimized for one use case or

00:43:55,049 --> 00:43:59,400
another okay and also why can't we have

00:43:57,239 --> 00:44:01,199
it run on different platforms - it's

00:43:59,400 --> 00:44:03,599
working for the Ruby guys it's working

00:44:01,199 --> 00:44:05,669
for the Python guys okay it's helping

00:44:03,599 --> 00:44:07,679
drive the their entire languages up it's

00:44:05,669 --> 00:44:09,449
not dividing them it's not doing what

00:44:07,679 --> 00:44:11,339
Larry was worried about with profe or of

00:44:09,449 --> 00:44:12,989
the the splintering of the community

00:44:11,339 --> 00:44:14,249
it's actually keeping the community

00:44:12,989 --> 00:44:16,259
together and it's driving the community

00:44:14,249 --> 00:44:17,519
together and not all of those VMs that

00:44:16,259 --> 00:44:18,900
they run out or not all those different

00:44:17,519 --> 00:44:20,999
versions of Ruby and Python they're not

00:44:18,900 --> 00:44:22,799
all compatible there they have a bit

00:44:20,999 --> 00:44:24,839
more compatibility than than some of the

00:44:22,799 --> 00:44:26,759
projects that I listed there but still

00:44:24,839 --> 00:44:30,029
it's all helping to drive the language

00:44:26,759 --> 00:44:30,929
forward and you know what this won't be

00:44:30,029 --> 00:44:33,299
easy okay

00:44:30,929 --> 00:44:36,029
moving forward and moving a community

00:44:33,299 --> 00:44:37,979
like us in a language like Perl forward

00:44:36,029 --> 00:44:39,679
is not gonna be easy change is never

00:44:37,979 --> 00:44:44,339
easy it's not hard

00:44:39,679 --> 00:44:47,099
change is never easy it is hard okay and

00:44:44,339 --> 00:44:48,179
we have to do with Sipan - so some of

00:44:47,099 --> 00:44:50,640
you might be thinking okay well yeah

00:44:48,179 --> 00:44:53,189
okay find the core but I can't hack the

00:44:50,640 --> 00:44:55,469
core well no but you can hack Sipan okay

00:44:53,189 --> 00:44:56,669
go out there pick a Sipan module there

00:44:55,469 --> 00:44:58,289
was there was a great project for a

00:44:56,669 --> 00:45:02,519
little while called the Phalanx project

00:44:58,289 --> 00:45:04,439
which the goal of it was to let other

00:45:02,519 --> 00:45:06,150
people come in and help module authors

00:45:04,439 --> 00:45:07,229
by helping modernize and update their

00:45:06,150 --> 00:45:08,519
test Suites and improve their test

00:45:07,229 --> 00:45:11,009
Suites improve coverage and stuff like

00:45:08,519 --> 00:45:12,359
that it died several years ago but I

00:45:11,009 --> 00:45:14,189
think something like that should come

00:45:12,359 --> 00:45:16,199
back okay something that should come

00:45:14,189 --> 00:45:17,400
back for the Perl 5 core test suite for

00:45:16,199 --> 00:45:19,859
all the c-pen modules that are out there

00:45:17,400 --> 00:45:21,509
we need to get these modules modernized

00:45:19,859 --> 00:45:23,549
and get them up to date this is the core

00:45:21,509 --> 00:45:25,380
that we all program the foundation that

00:45:23,549 --> 00:45:28,380
we all program on top of okay because

00:45:25,380 --> 00:45:30,659
Sipan is our language and Perl is just

00:45:28,380 --> 00:45:32,369
the syntax okay without it we wouldn't

00:45:30,659 --> 00:45:35,400
have we wouldn't be the community that

00:45:32,369 --> 00:45:36,770
we are so no I got it I gotta fix this

00:45:35,400 --> 00:45:42,760
translation sorry

00:45:36,770 --> 00:45:42,760
sorry Jeffrey I know you're like okay

00:45:43,060 --> 00:45:49,010
okay

00:45:45,430 --> 00:45:51,470
pearl maybe just a syntax of Sipan but

00:45:49,010 --> 00:45:53,450
pearl is also community okay all of us

00:45:51,470 --> 00:45:55,040
here all right language aside it's a

00:45:53,450 --> 00:45:56,300
community all right we've been around

00:45:55,040 --> 00:45:58,630
for a while there's some people here who

00:45:56,300 --> 00:46:03,560
have been Jeff how many AB C's have been

00:45:58,630 --> 00:46:05,120
225 the AB C's okay all right and you're

00:46:03,560 --> 00:46:06,830
not even in the lead yeah exactly

00:46:05,120 --> 00:46:08,660
okay it's a community it's a it's a it's

00:46:06,830 --> 00:46:11,120
a long storied community we have a lot

00:46:08,660 --> 00:46:13,610
to teach the world out there we've made

00:46:11,120 --> 00:46:15,080
a lot of the mistakes we can push you

00:46:13,610 --> 00:46:19,250
know we can help other other people

00:46:15,080 --> 00:46:21,260
learn okay but Perl is a like mine it's

00:46:19,250 --> 00:46:24,620
community of like-minded folk okay and

00:46:21,260 --> 00:46:27,800
we all just love pearl as long as we're

00:46:24,620 --> 00:46:29,330
around pearl will never die okay that's

00:46:27,800 --> 00:46:30,890
that I can state that for a fact because

00:46:29,330 --> 00:46:32,600
as long as we all still keep coming to

00:46:30,890 --> 00:46:35,480
these conferences and the workshops and

00:46:32,600 --> 00:46:37,280
and and you have see Asia and Yap see

00:46:35,480 --> 00:46:39,230
you and you have see South America and

00:46:37,280 --> 00:46:40,400
you have to Russia and etc etc as long

00:46:39,230 --> 00:46:42,830
as there's people coming to that and

00:46:40,400 --> 00:46:45,380
doing stuff poor will never die okay as

00:46:42,830 --> 00:46:47,540
long as the communities there but we all

00:46:45,380 --> 00:46:49,040
need to help push forwarding to push the

00:46:47,540 --> 00:46:51,320
language forward ultimately the

00:46:49,040 --> 00:46:53,210
community forward okay so everybody here

00:46:51,320 --> 00:46:54,980
today I want you to think about how you

00:46:53,210 --> 00:46:56,420
might be able to do this okay I don't

00:46:54,980 --> 00:47:00,950
want to know I'm gonna go get drunk

00:46:56,420 --> 00:47:01,670
after this but I want you to think about

00:47:00,950 --> 00:47:04,310
this okay

00:47:01,670 --> 00:47:06,020
small things can be done okay we as a

00:47:04,310 --> 00:47:08,480
community have to keep the community

00:47:06,020 --> 00:47:09,950
alive okay we're not dead I don't care

00:47:08,480 --> 00:47:11,360
what they say but we also need to make

00:47:09,950 --> 00:47:12,710
sure that other people out there know it

00:47:11,360 --> 00:47:14,360
and we can shout from the rooftops all

00:47:12,710 --> 00:47:15,920
we want but until we have something to

00:47:14,360 --> 00:47:17,210
show okay

00:47:15,920 --> 00:47:19,040
they're not gonna listen to us so

00:47:17,210 --> 00:47:21,620
everybody and I'm trying to leave this

00:47:19,040 --> 00:47:22,760
on a good note here everybody here I

00:47:21,620 --> 00:47:24,260
want you to think about what you might

00:47:22,760 --> 00:47:27,650
be able to do what you might be able to

00:47:24,260 --> 00:47:29,930
do to drive to move pearl forward pro/5

00:47:27,650 --> 00:47:32,360
Perl 6 it doesn't matter just let's move

00:47:29,930 --> 00:47:33,770
this all forward let's let's keep going

00:47:32,360 --> 00:47:35,930
forward that's evolve let's make Perl

00:47:33,770 --> 00:47:39,230
into the language that we all know and

00:47:35,930 --> 00:47:40,370
love of the future okay and that's it

00:47:39,230 --> 00:47:42,760
because the other transition won't work

00:47:40,370 --> 00:47:42,760

YouTube URL: https://www.youtube.com/watch?v=7ycpEUQAnp4


