Title: Ricardo Signes (‎rjbs‎) - ‎1.21 Gigawatts‎
Publication date: 2014-06-25
Playlist: YAPC::NA 2014
Description: 
	Some talks carefully guide the listeners through the entirety of a topic, starting with the basics and ending with the fine details.

That's... not the plan for this talk.

Instead, we're going to see the highlight reel of a bunch of topics that caught my interest over the course of the year: a review of cool (and uncool) changes in Perl, the best modules you're not using, stupid optimization tricks, tools for handling catastrophic program failure, git scripts you'll become dependent on, numbers stations, Zork, productivity tools, and who knows what else.

I will stand in place and let lightning talks strike over and over, until I am reduced to cinders.

You get to witness the ordeal, and you might just learn a thing or two.
Captions: 
	00:00:12,300 --> 00:00:18,040
okay hello welcome to my talk I am NOT

00:00:16,030 --> 00:00:19,869
going to talk about ibex but they're

00:00:18,040 --> 00:00:21,460
just so cool so I wanted to start with

00:00:19,869 --> 00:00:24,250
this ibex picture it's the best one I

00:00:21,460 --> 00:00:25,810
could find so I'm gonna be doing

00:00:24,250 --> 00:00:27,550
lightning talks more or less and

00:00:25,810 --> 00:00:28,810
hopefully everyone has seen some

00:00:27,550 --> 00:00:30,700
Lightning talks by now and the way a

00:00:28,810 --> 00:00:32,080
lightning talk usually works is that

00:00:30,700 --> 00:00:33,460
someone gets up and they talk for five

00:00:32,080 --> 00:00:36,430
minutes and this has a couple advantages

00:00:33,460 --> 00:00:37,809
right and one advantages they can stay

00:00:36,430 --> 00:00:39,489
really excited and keep their energy up

00:00:37,809 --> 00:00:40,629
and it's not like after 40 minutes of

00:00:39,489 --> 00:00:42,850
talking they start to slow down and

00:00:40,629 --> 00:00:44,110
become really boring and the other thing

00:00:42,850 --> 00:00:45,790
that's great is that if they're really

00:00:44,110 --> 00:00:48,520
terrible presenter or have a topic that

00:00:45,790 --> 00:00:50,440
was poorly chosen they're done soon so

00:00:48,520 --> 00:00:51,850
what you've done is you've opted into a

00:00:50,440 --> 00:00:54,399
talk where I will be the one person

00:00:51,850 --> 00:00:56,800
talking lightning talks for 50 minutes

00:00:54,399 --> 00:00:59,290
so you've kind of lost all of your

00:00:56,800 --> 00:01:00,610
benefit and as the doors lock now good

00:00:59,290 --> 00:01:04,030
good

00:01:00,610 --> 00:01:06,610
so FRU sitting here has the gong I'm

00:01:04,030 --> 00:01:08,259
gonna ask you FRU not to dog on me

00:01:06,610 --> 00:01:09,610
between topics but give me five minutes

00:01:08,259 --> 00:01:11,140
whenever I started new topic tell me

00:01:09,610 --> 00:01:13,090
want to hit five minutes because I want

00:01:11,140 --> 00:01:15,940
to see how close I get to five minutes

00:01:13,090 --> 00:01:18,190
on each topic my guess is not so good

00:01:15,940 --> 00:01:21,360
I'm not shooting for really five minutes

00:01:18,190 --> 00:01:23,500
I'm just shooting for lots of stuff

00:01:21,360 --> 00:01:24,909
after I start I'll start a new topic

00:01:23,500 --> 00:01:27,010
there's a title slide you start your

00:01:24,909 --> 00:01:28,780
timer great okay so this talk also I

00:01:27,010 --> 00:01:31,450
have no idea if I'm gonna run long or

00:01:28,780 --> 00:01:32,260
short I don't know somebody tell me when

00:01:31,450 --> 00:01:35,020
I'm done

00:01:32,260 --> 00:01:37,150
this talk is mostly material that I've

00:01:35,020 --> 00:01:38,799
done before in a similar format which I

00:01:37,150 --> 00:01:39,939
did in the New York pro mongers I think

00:01:38,799 --> 00:01:43,030
this year I don't remember it it was

00:01:39,939 --> 00:01:44,320
called 1.21 jigowatts because there's

00:01:43,030 --> 00:01:47,979
going to be a lot of lightning now that

00:01:44,320 --> 00:01:49,869
talk took an auspicious 88 minutes I do

00:01:47,979 --> 00:01:51,150
not have 88 minutes oh I have 50 so what

00:01:49,869 --> 00:01:56,110
you're actually getting today is like

00:01:51,150 --> 00:01:58,299
0.6 8 7 5 gigawatts we'll see how it

00:01:56,110 --> 00:01:59,560
goes I dropped a lot of material because

00:01:58,299 --> 00:02:01,720
one of things I talked about a lot was

00:01:59,560 --> 00:02:03,009
things that would be new in pro 5:20

00:02:01,720 --> 00:02:05,860
I'll talk about that tomorrow and I also

00:02:03,009 --> 00:02:07,149
talked about things that were new and

00:02:05,860 --> 00:02:08,229
interesting and other versions of Perl

00:02:07,149 --> 00:02:09,610
if you want to hear about those just

00:02:08,229 --> 00:02:11,079
come ask me because I like talking about

00:02:09,610 --> 00:02:12,459
the cool new stuff in Perl that nobody

00:02:11,079 --> 00:02:15,430
can use because you're all running 5 H

00:02:12,459 --> 00:02:16,600
Jesus okay what wouldn't send to talk

00:02:15,430 --> 00:02:19,329
about I'm going to talk about all the

00:02:16,600 --> 00:02:21,550
great stuff that's new in 5:22 who's

00:02:19,329 --> 00:02:24,040
writing 5:22

00:02:21,550 --> 00:02:27,370
good we have not yet hit 88 miles an

00:02:24,040 --> 00:02:33,640
hour this talk is also called for cool

00:02:27,370 --> 00:02:36,580
ways that I am ruining Perl so who knows

00:02:33,640 --> 00:02:38,170
what this does come on everybody right

00:02:36,580 --> 00:02:40,450
if this is this is not a trick question

00:02:38,170 --> 00:02:42,460
there will be there will be trick

00:02:40,450 --> 00:02:44,620
questions this is that one on right

00:02:42,460 --> 00:02:46,150
hopefully we all mostly know what this

00:02:44,620 --> 00:02:49,480
does it checks if this is defined how

00:02:46,150 --> 00:02:52,240
about this one that's an ampersand if

00:02:49,480 --> 00:02:53,950
you can't tell yes Abigail knows it this

00:02:52,240 --> 00:02:55,260
one is getting close to a trick it tells

00:02:53,950 --> 00:03:00,510
you if the subroutine has been defined

00:02:55,260 --> 00:03:03,280
and how about this one yeah right no

00:03:00,510 --> 00:03:05,950
nobody knows what is that is the array

00:03:03,280 --> 00:03:09,340
defined yeah there actually is an answer

00:03:05,950 --> 00:03:11,530
to this but it's useless and then is the

00:03:09,340 --> 00:03:13,570
hash defined like this probably

00:03:11,530 --> 00:03:16,870
technically has an answer you could like

00:03:13,570 --> 00:03:19,300
trace the code no don't do it so we have

00:03:16,870 --> 00:03:21,760
we have made a nice simple answer for

00:03:19,300 --> 00:03:23,830
these weird cases to enhance your life

00:03:21,760 --> 00:03:28,930
and new pearls and the nice simple

00:03:23,830 --> 00:03:32,430
answer is that they die how do these

00:03:28,930 --> 00:03:37,959
work they don't don't use them fatal

00:03:32,430 --> 00:03:39,970
okay next one let's make a hash again I

00:03:37,959 --> 00:03:41,680
hope everyone knows what this does it

00:03:39,970 --> 00:03:43,510
makes a hash hash is an unordered list

00:03:41,680 --> 00:03:45,400
of pairs great then we could take a

00:03:43,510 --> 00:03:48,489
reference to the hash we have two

00:03:45,400 --> 00:03:51,160
variables hash it's a hash and ref which

00:03:48,489 --> 00:03:55,900
is a hash ref

00:03:51,160 --> 00:03:58,630
then we can do this so hopefully this is

00:03:55,900 --> 00:04:00,850
clear who knows what this does yeah it

00:03:58,630 --> 00:04:04,780
returns it returns one exactly what is

00:04:00,850 --> 00:04:06,400
this return it returns a slice that has

00:04:04,780 --> 00:04:12,370
one two list with one element the

00:04:06,400 --> 00:04:14,050
element is one how about this this is

00:04:12,370 --> 00:04:15,880
new and five twenty if you would come to

00:04:14,050 --> 00:04:18,280
my talk tomorrow and travel back in time

00:04:15,880 --> 00:04:19,959
today you would know the answer this

00:04:18,280 --> 00:04:22,660
gives you back a list which contains a

00:04:19,959 --> 00:04:24,220
and then one which is awesome come talk

00:04:22,660 --> 00:04:26,470
about it more tomorrow yeah it's great

00:04:24,220 --> 00:04:32,250
okay how about this this one it's also

00:04:26,470 --> 00:04:32,250
pretty simple one and how about this

00:04:33,840 --> 00:04:41,620
well it gives you one and it and it says

00:04:38,260 --> 00:04:42,970
what you get a warning so this is really

00:04:41,620 --> 00:04:45,460
bizarre behavior that no one expects so

00:04:42,970 --> 00:04:51,820
we fixed it in 522 and what it's gonna

00:04:45,460 --> 00:04:53,080
do in 522 is die it says no it's not a

00:04:51,820 --> 00:04:57,400
reference you can't use the

00:04:53,080 --> 00:04:59,740
dereferencing operator get out that dies

00:04:57,400 --> 00:05:02,050
at no can't I compile time it dies at

00:04:59,740 --> 00:05:03,460
run time I think I should double-check

00:05:02,050 --> 00:05:04,810
I'm pretty sure I can't okay next this

00:05:03,460 --> 00:05:07,060
one everybody knows what this does right

00:05:04,810 --> 00:05:08,530
right put some stuff on a list how about

00:05:07,060 --> 00:05:10,770
on an array excuse me

00:05:08,530 --> 00:05:12,810
now this one

00:05:10,770 --> 00:05:15,810
so this might work if you're running

00:05:12,810 --> 00:05:17,729
pro/5 14 or later and it's gonna say

00:05:15,810 --> 00:05:19,979
okay well that's an experimental feature

00:05:17,729 --> 00:05:21,449
shirt maybe but okay it's an array ref

00:05:19,979 --> 00:05:28,620
and I put stuff on it who knows what

00:05:21,449 --> 00:05:29,789
this does let's it's okay so so that

00:05:28,620 --> 00:05:30,930
some people think they know answers and

00:05:29,789 --> 00:05:33,900
I'm just going to tell you where I'm

00:05:30,930 --> 00:05:36,030
gonna keep going okay I hope that those

00:05:33,900 --> 00:05:38,190
of you who guessed were wrong

00:05:36,030 --> 00:05:39,870
so here's what happens we're gonna run a

00:05:38,190 --> 00:05:42,210
program oh it put it all up at once

00:05:39,870 --> 00:05:45,930
that's fine push on to foo one two three

00:05:42,210 --> 00:05:48,449
then dumped at foo that's what happened

00:05:45,930 --> 00:05:50,460
it's like oh you said push it's cool man

00:05:48,449 --> 00:05:53,669
you probably meant an array I'll just

00:05:50,460 --> 00:05:55,380
make one here you go

00:05:53,669 --> 00:05:57,930
but like don't do it again okay here's a

00:05:55,380 --> 00:06:00,659
little warning um anyway that's what

00:05:57,930 --> 00:06:01,729
happens in this program which looks like

00:06:00,659 --> 00:06:04,830
this

00:06:01,729 --> 00:06:07,080
come on okay so that's the program we

00:06:04,830 --> 00:06:08,610
just looked at and we run out we get you

00:06:07,080 --> 00:06:10,289
know the array one two three as I

00:06:08,610 --> 00:06:16,590
promised but what does the program look

00:06:10,289 --> 00:06:19,159
like this anybody it dies and it dies

00:06:16,590 --> 00:06:22,259
because you can't push on to an on array

00:06:19,159 --> 00:06:25,320
right because what is foo what is foo or

00:06:22,259 --> 00:06:27,330
to who returned foo returns undef and

00:06:25,320 --> 00:06:29,610
you can't push onto undef it's not an

00:06:27,330 --> 00:06:34,289
array BAM you do you die but what if we

00:06:29,610 --> 00:06:36,240
returned that from foo well now we get a

00:06:34,289 --> 00:06:40,169
warning that push on a ref is

00:06:36,240 --> 00:06:42,080
experimental because in 514 you can push

00:06:40,169 --> 00:06:44,610
on to an array reference okay but what

00:06:42,080 --> 00:06:47,430
if we take go back to the previous one

00:06:44,610 --> 00:06:50,509
and we take that foo and we move it down

00:06:47,430 --> 00:06:50,509
to the bottom of the program

00:06:50,600 --> 00:07:00,950
then we get one two three again so yeah

00:06:55,710 --> 00:07:03,330
what we fixed this the fix is it dies

00:07:00,950 --> 00:07:06,810
you can't you've gotta just use the

00:07:03,330 --> 00:07:08,010
single okay it's two keystrokes okay

00:07:06,810 --> 00:07:09,180
last thing I've thirty seconds somebody

00:07:08,010 --> 00:07:10,440
said this is gonna take more than that

00:07:09,180 --> 00:07:12,000
but I like it this is my favorite part

00:07:10,440 --> 00:07:15,030
of this whole talk because I wrote it

00:07:12,000 --> 00:07:18,360
today who knows this syntax what does

00:07:15,030 --> 00:07:22,440
this give us control X anybody for for a

00:07:18,360 --> 00:07:23,640
bonus point what is control X 2000 okay

00:07:22,440 --> 00:07:25,440
oh that's good too but it's canceled

00:07:23,640 --> 00:07:28,230
it's the cancel control character okay

00:07:25,440 --> 00:07:32,610
this one no how about this what does

00:07:28,230 --> 00:07:34,650
this give us oh okay well we're gonna

00:07:32,610 --> 00:07:35,220
keep them yeah 30:36 I don't know it's

00:07:34,650 --> 00:07:37,020
something weird

00:07:35,220 --> 00:07:38,850
somebody said 36 and you're wrong and

00:07:37,020 --> 00:07:41,940
we'll come back to it and how about that

00:07:38,850 --> 00:07:43,980
how about this one that is that is this

00:07:41,940 --> 00:07:46,530
is a literal cancel that is a literal

00:07:43,980 --> 00:07:50,670
control X that gives you an X very good

00:07:46,530 --> 00:07:52,110
and how about this okay let's go through

00:07:50,670 --> 00:07:53,340
it right so that's a cancel character

00:07:52,110 --> 00:07:55,560
there's an old character we got that the

00:07:53,340 --> 00:07:57,330
next one does not give you character 36

00:07:55,560 --> 00:07:59,510
or a new trick it gives you the Grove

00:07:57,330 --> 00:08:02,600
accent

00:07:59,510 --> 00:08:05,630
who knows why I don't know either um

00:08:02,600 --> 00:08:08,120
that to get we get an X and that last

00:08:05,630 --> 00:08:10,390
one that one is a that's a puzzler right

00:08:08,120 --> 00:08:13,460
you got this understood the inverted a

00:08:10,390 --> 00:08:15,740
Spanish question mark and what does give

00:08:13,460 --> 00:08:17,020
us well I didn't know so I ran the

00:08:15,740 --> 00:08:19,750
debugger

00:08:17,020 --> 00:08:22,520
there's the debugger and I said hey man

00:08:19,750 --> 00:08:25,040
can you tell me what this what this is

00:08:22,520 --> 00:08:27,320
because I have no idea and I really want

00:08:25,040 --> 00:08:35,720
to know and I swear this is what

00:08:27,320 --> 00:08:38,659
happened okay so

00:08:35,720 --> 00:08:40,820
so after I recovered after I recovered

00:08:38,659 --> 00:08:43,550
from this I said okay I know what

00:08:40,820 --> 00:08:46,010
happened here what happened is the

00:08:43,550 --> 00:08:48,080
debugger was not expecting who got my

00:08:46,010 --> 00:08:49,100
terminal encoding and I screwed around a

00:08:48,080 --> 00:08:50,930
little bit trying to fix it and I

00:08:49,100 --> 00:08:53,570
couldn't I couldn't fix it with literal

00:08:50,930 --> 00:08:55,940
typing into the program and I didn't

00:08:53,570 --> 00:08:57,050
want it I mean this is awesome but I

00:08:55,940 --> 00:08:59,240
didn't want to stop there I want to show

00:08:57,050 --> 00:09:00,770
it you really get so I did this I said

00:08:59,240 --> 00:09:02,060
okay I want to make a string and the

00:09:00,770 --> 00:09:04,880
string is gonna start with a double

00:09:02,060 --> 00:09:08,060
quote a backslash in a seat then

00:09:04,880 --> 00:09:09,890
character bf right we're in Unicode here

00:09:08,060 --> 00:09:12,920
and that is the inverted question mark

00:09:09,890 --> 00:09:16,130
and then a closing quote and then I want

00:09:12,920 --> 00:09:18,800
you to evaluate it okay and tell me

00:09:16,130 --> 00:09:20,660
what's in there so now I'm not gonna get

00:09:18,800 --> 00:09:21,980
this crazy all while under a crazy -

00:09:20,660 --> 00:09:29,530
question mark thing I'm gonna get the

00:09:21,980 --> 00:09:34,640
real answer I guess it's less mysterious

00:09:29,530 --> 00:09:37,880
it's actually character 255 I don't know

00:09:34,640 --> 00:09:40,910
so we fixed this and nobody gonna show

00:09:37,880 --> 00:09:45,110
me here that same slide again so now if

00:09:40,910 --> 00:09:46,910
you do this in pro 5:22 it says no it's

00:09:45,110 --> 00:09:49,990
got to be a printable ASCII character no

00:09:46,910 --> 00:09:52,850
space no control X like come on guys

00:09:49,990 --> 00:09:54,380
come on okay that was the end of that

00:09:52,850 --> 00:09:55,910
first talk I've already I don't know how

00:09:54,380 --> 00:09:57,620
far I'm over so let's reset and let's

00:09:55,910 --> 00:09:59,060
start on an excellent talk five great

00:09:57,620 --> 00:10:01,040
modules you won't believe you are

00:09:59,060 --> 00:10:03,410
already using that you're not already

00:10:01,040 --> 00:10:06,920
using high I sometimes drop words for

00:10:03,410 --> 00:10:09,620
compression okay so who has used list

00:10:06,920 --> 00:10:10,760
util everybody let's utils great let's

00:10:09,620 --> 00:10:12,500
use all this stuff in it like first

00:10:10,760 --> 00:10:14,870
forgetting the first thing out of a list

00:10:12,500 --> 00:10:17,930
that matches a predicate or the minimum

00:10:14,870 --> 00:10:21,680
thing from a list numerically or or some

00:10:17,930 --> 00:10:23,060
and any right tell me just give me a

00:10:21,680 --> 00:10:24,620
boolean and whether anything in this

00:10:23,060 --> 00:10:26,480
list list matches this predicate I use

00:10:24,620 --> 00:10:27,260
it all the time is it almost every day

00:10:26,480 --> 00:10:30,350
it's great

00:10:27,260 --> 00:10:33,050
there's also lists more utils okay lists

00:10:30,350 --> 00:10:36,650
more utils as you might expect it's more

00:10:33,050 --> 00:10:39,230
utils amongst the more utils and by the

00:10:36,650 --> 00:10:41,480
way don't forget the s amongst the more

00:10:39,230 --> 00:10:43,760
utils are min max which gives you the

00:10:41,480 --> 00:10:45,410
minimum maximum before so give me the

00:10:43,760 --> 00:10:46,310
first element before the element that

00:10:45,410 --> 00:10:50,540
matches this predator

00:10:46,310 --> 00:10:52,880
it any I don't know why any is here to

00:10:50,540 --> 00:10:54,650
and unique unique is super super useful

00:10:52,880 --> 00:10:56,779
just give me the string wise unique

00:10:54,650 --> 00:10:59,180
elements for their rate so these are

00:10:56,779 --> 00:11:00,650
great I use these all the time too and

00:10:59,180 --> 00:11:02,330
often I'll use them both in a program

00:11:00,650 --> 00:11:05,390
and I hit a terrible problem which is

00:11:02,330 --> 00:11:07,190
this anyone recognize the problem the

00:11:05,390 --> 00:11:08,870
problem is that first comes from list

00:11:07,190 --> 00:11:10,970
util and first vowel comes from list

00:11:08,870 --> 00:11:15,160
more utils there's a trick for

00:11:10,970 --> 00:11:15,160
memorizing this which is to learn Ruby

00:11:15,279 --> 00:11:21,529
the other trick is instead to use lists

00:11:18,650 --> 00:11:23,210
all utils it's all of them in one place

00:11:21,529 --> 00:11:26,270
and you don't have to remember anything

00:11:23,210 --> 00:11:28,279
yeah so use it okay that's number one

00:11:26,270 --> 00:11:30,770
number two

00:11:28,279 --> 00:11:33,980
so some so I work at PO box it's a great

00:11:30,770 --> 00:11:36,230
company and we read a lot of Perl and I

00:11:33,980 --> 00:11:37,339
like having nice descriptive package

00:11:36,230 --> 00:11:41,000
names that I always know what they are

00:11:37,339 --> 00:11:44,390
like so I use PO Box our databases IMAP

00:11:41,000 --> 00:11:46,670
account object and then when I'm writing

00:11:44,390 --> 00:11:50,000
my code I can't fit it in my 30

00:11:46,670 --> 00:11:51,320
character terminal but no I mean it's

00:11:50,000 --> 00:11:52,460
it's like a lot it's a lot of typing

00:11:51,320 --> 00:11:54,710
it's way too wide it's a pain in the

00:11:52,460 --> 00:11:57,320
butt so there's this this MOT and I

00:11:54,710 --> 00:11:58,580
don't then the people who say that's

00:11:57,320 --> 00:12:02,450
what's way too long so we're just gonna

00:11:58,580 --> 00:12:04,070
call those Fred say you spread Fred new

00:12:02,450 --> 00:12:05,600
this is what's a fred object oh well you

00:12:04,070 --> 00:12:08,360
need to go refer to the transit home and

00:12:05,600 --> 00:12:09,980
so there's this thing called alias he

00:12:08,360 --> 00:12:11,510
say I only use this module but alias and

00:12:09,980 --> 00:12:13,339
then you can just refer to it by a short

00:12:11,510 --> 00:12:15,380
name you say used alias and then from

00:12:13,339 --> 00:12:17,450
then on you in your scope you can say I

00:12:15,380 --> 00:12:20,750
want the account and you get the account

00:12:17,450 --> 00:12:23,420
awesome that's aliased use it my remote

00:12:20,750 --> 00:12:25,430
is not working really well okay how

00:12:23,420 --> 00:12:28,010
about this hoot okay think I'm gonna

00:12:25,430 --> 00:12:30,140
read this who has done this work we want

00:12:28,010 --> 00:12:32,089
to read a gzipped file and what's the

00:12:30,140 --> 00:12:34,820
baby yellow of course Abigail's done it

00:12:32,089 --> 00:12:36,080
and and why because it's so easy right

00:12:34,820 --> 00:12:38,180
it's like we're writing in a glue

00:12:36,080 --> 00:12:40,910
language we want to read a gzip file we

00:12:38,180 --> 00:12:45,050
could just we can just open an open a

00:12:40,910 --> 00:12:46,910
pipe to gzip try your GZ cat or we write

00:12:45,050 --> 00:12:49,100
a file out we close it we're done and

00:12:46,910 --> 00:12:52,100
then we run system gzip it right this

00:12:49,100 --> 00:12:53,089
works it's fine sometimes I don't want

00:12:52,100 --> 00:12:57,170
to work that way and I want to look at

00:12:53,089 --> 00:12:58,490
the file handle for reasons so how do

00:12:57,170 --> 00:12:59,600
you do it right there's standard

00:12:58,490 --> 00:13:02,839
libraries for this like

00:12:59,600 --> 00:13:04,610
I uncompressed G unzip and you can make

00:13:02,839 --> 00:13:07,279
this G unzipping file handle and read

00:13:04,610 --> 00:13:08,480
from it or a compress gzip and you can

00:13:07,279 --> 00:13:10,639
make that and start writing to it and

00:13:08,480 --> 00:13:13,130
all the gzip äj-- happens transparently

00:13:10,639 --> 00:13:14,899
without you thinking about it there's a

00:13:13,130 --> 00:13:16,550
couple problems like if you're used to

00:13:14,899 --> 00:13:18,829
using Auto die and by the way you should

00:13:16,550 --> 00:13:21,170
use Auto die it's great you use Auto die

00:13:18,829 --> 00:13:22,610
it's not going to help you it's not

00:13:21,170 --> 00:13:23,810
going to affect any of the stuff you do

00:13:22,610 --> 00:13:25,639
with that because now you're gonna be

00:13:23,810 --> 00:13:27,980
calling methods on an object and not

00:13:25,639 --> 00:13:29,930
using built-ins the other problem which

00:13:27,980 --> 00:13:31,790
is somewhat more subtle is that you note

00:13:29,930 --> 00:13:33,829
here I am using IO and compressed G

00:13:31,790 --> 00:13:35,959
unzip and IO compress gzip which is

00:13:33,829 --> 00:13:37,940
great if you have keynote open with a

00:13:35,959 --> 00:13:42,699
slide for reference but if you don't

00:13:37,940 --> 00:13:45,800
you're like okay I think it's IO

00:13:42,699 --> 00:13:47,810
uncompressing G unzip egde is the pad

00:13:45,800 --> 00:13:49,519
like you go through over and over well

00:13:47,810 --> 00:13:52,750
there's a thing called Perl IO gzip and

00:13:49,519 --> 00:13:56,509
while Perl IO is a nightmarish hellscape

00:13:52,750 --> 00:13:58,279
it does let you do stuff like say I want

00:13:56,509 --> 00:14:00,079
to use the gzip layer you open this

00:13:58,279 --> 00:14:02,269
thing with the gzip layer to read or to

00:14:00,079 --> 00:14:03,740
write and it just works you treat it

00:14:02,269 --> 00:14:04,850
like a normal file handle you can use

00:14:03,740 --> 00:14:07,790
all your standard built-ins

00:14:04,850 --> 00:14:08,990
it's great I use it all the time now and

00:14:07,790 --> 00:14:10,579
that's it

00:14:08,990 --> 00:14:14,029
Perl IO gzip in a slightly different

00:14:10,579 --> 00:14:15,350
color for some reason use it next one

00:14:14,029 --> 00:14:19,639
minute oh goodness okay let's see how we

00:14:15,350 --> 00:14:21,410
do okay so there was a bug on this slide

00:14:19,639 --> 00:14:23,990
once it's probably still there yeah it's

00:14:21,410 --> 00:14:28,130
okay so okay who sees the bug here this

00:14:23,990 --> 00:14:29,540
is this a bug should be here yes you

00:14:28,130 --> 00:14:31,279
can't use it runtime yeah

00:14:29,540 --> 00:14:32,959
so we've we put to use inside of an if

00:14:31,279 --> 00:14:36,470
statement if happens at runtime use

00:14:32,959 --> 00:14:39,139
happens at compile time the same thing

00:14:36,470 --> 00:14:40,970
like this right this isn't gonna work

00:14:39,139 --> 00:14:42,649
you can't you can't put a use inside of

00:14:40,970 --> 00:14:45,199
an if and so people go to like these

00:14:42,649 --> 00:14:47,180
crazy lengths of thrown evals and begin

00:14:45,199 --> 00:14:51,050
block since no here's what you do

00:14:47,180 --> 00:14:54,259
there's a module called if use use if

00:14:51,050 --> 00:14:54,829
condition module and it all happens at

00:14:54,259 --> 00:14:56,389
compile time

00:14:54,829 --> 00:14:58,850
that's it's it's all that's all that's

00:14:56,389 --> 00:15:00,980
it it's great call use if seriously use

00:14:58,850 --> 00:15:02,769
it okay all right I'm gonna hopefully

00:15:00,980 --> 00:15:05,000
the next ones are shorter I don't know

00:15:02,769 --> 00:15:08,560
okay how about distilled does anybody

00:15:05,000 --> 00:15:10,779
here use this Ola suckers okay so

00:15:08,560 --> 00:15:13,209
you're like I started a new Pro install

00:15:10,779 --> 00:15:15,850
and I want to use de Silla so you say

00:15:13,209 --> 00:15:20,800
you know installed asila and you know

00:15:15,850 --> 00:15:23,079
you like wait and after a while you get

00:15:20,800 --> 00:15:25,269
put what didn't work and you're like

00:15:23,079 --> 00:15:26,800
what didn't work I don't understand so

00:15:25,269 --> 00:15:29,230
you stare at it and you're like there's

00:15:26,800 --> 00:15:33,779
just so much output in Section four

00:15:29,230 --> 00:15:33,779
enhance enhance enhance

00:15:40,450 --> 00:15:47,260
come on so somebody you know like has a

00:15:45,070 --> 00:15:48,820
space before something in their pod and

00:15:47,260 --> 00:15:50,589
it's like yeah you can't install that

00:15:48,820 --> 00:15:53,050
97th level dependency because there's a

00:15:50,589 --> 00:15:54,700
pod syntax checker and all you want out

00:15:53,050 --> 00:15:57,490
of life at that point is to punch

00:15:54,700 --> 00:16:04,480
someone don't punch me because I'm

00:15:57,490 --> 00:16:07,839
telling you the answer which is yeah I

00:16:04,480 --> 00:16:11,320
forgot about that build is that before

00:16:07,839 --> 00:16:13,209
you run that you say this when you run

00:16:11,320 --> 00:16:15,639
the tap harness the thing that runs all

00:16:13,209 --> 00:16:17,260
the tests use tap harness restricted

00:16:15,639 --> 00:16:19,570
which is basically gonna look at the

00:16:17,260 --> 00:16:22,600
tests and say that one's dumb and I'm

00:16:19,570 --> 00:16:24,930
not gonna run it I don't even know how

00:16:22,600 --> 00:16:27,550
it works but it works

00:16:24,930 --> 00:16:29,920
David golden wrote it it's probably fine

00:16:27,550 --> 00:16:32,050
mostly it's it skips you're like pod

00:16:29,920 --> 00:16:34,600
syntax in your pod checks and stuff and

00:16:32,050 --> 00:16:38,170
then right it just works and you can

00:16:34,600 --> 00:16:39,850
like get to work okay so that's tap

00:16:38,170 --> 00:16:42,519
harness restricted wait is anybody

00:16:39,850 --> 00:16:48,790
anybody know this number bonus point

00:16:42,519 --> 00:16:49,959
now count leaves okay all right now I'm

00:16:48,790 --> 00:16:54,760
gonna talk about some of my modules

00:16:49,959 --> 00:16:56,890
because I like them and they're fun so I

00:16:54,760 --> 00:16:58,449
use system hopefully everybody uses

00:16:56,890 --> 00:17:00,190
system at least a lot of the time right

00:16:58,449 --> 00:17:01,480
like running Perl on UNIX is great

00:17:00,190 --> 00:17:03,130
because it integrates well with the rest

00:17:01,480 --> 00:17:05,079
of UNIX and that means running stuff and

00:17:03,130 --> 00:17:07,569
one of the ways that you run things in

00:17:05,079 --> 00:17:10,449
UNIX is with system and then you say

00:17:07,569 --> 00:17:14,079
like okay it didn't work if dollar hook

00:17:10,449 --> 00:17:15,520
is true right fine makes sense except

00:17:14,079 --> 00:17:17,319
what you really want to do is say like

00:17:15,520 --> 00:17:20,530
in what way did it not work so you say

00:17:17,319 --> 00:17:22,380
okay well I need to shift over and

00:17:20,530 --> 00:17:25,480
then I need to like do some some bitwise

00:17:22,380 --> 00:17:28,059
ampersand egde and you know I didn't

00:17:25,480 --> 00:17:31,480
check the top bit and the oh man what's

00:17:28,059 --> 00:17:33,040
going on so I stole this thing from some

00:17:31,480 --> 00:17:36,130
other bogus language I'm called

00:17:33,040 --> 00:17:37,750
processed and status or after you run

00:17:36,130 --> 00:17:40,390
you just say what's the process status

00:17:37,750 --> 00:17:42,340
tell me as a string and I don't have an

00:17:40,390 --> 00:17:43,870
example that's that's ridiculous and

00:17:42,340 --> 00:17:46,990
it's gonna say something like oh yeah I

00:17:43,870 --> 00:17:50,370
got killed by signal eight or it ends it

00:17:46,990 --> 00:17:53,010
at zero or it exited one and dumped core

00:17:50,370 --> 00:17:54,810
so this process status

00:17:53,010 --> 00:17:56,850
gray I use it all the time oh my gosh am

00:17:54,810 --> 00:18:01,830
I not done I know we started a new topic

00:17:56,850 --> 00:18:03,690
great so this I get some stuff stuff I

00:18:01,830 --> 00:18:06,570
got a do I got stuff I got to do and

00:18:03,690 --> 00:18:08,880
then I sort it by priority the problem

00:18:06,570 --> 00:18:10,560
is when you put priority on stuff you

00:18:08,880 --> 00:18:12,510
know it's like what you think is a good

00:18:10,560 --> 00:18:14,580
priority at the time and you forget that

00:18:12,510 --> 00:18:16,500
when push comes to shove you have real

00:18:14,580 --> 00:18:18,750
different priorities like dude if

00:18:16,500 --> 00:18:21,060
there's pie I'm eating it first

00:18:18,750 --> 00:18:22,710
like everything else is gonna wait I had

00:18:21,060 --> 00:18:24,420
to eat so much pie before this talk and

00:18:22,710 --> 00:18:27,960
it worked because I had my priorities

00:18:24,420 --> 00:18:32,130
right and you end up with all these you

00:18:27,960 --> 00:18:33,510
know all these uh those exceptions to

00:18:32,130 --> 00:18:35,850
your sorting and your sort routine no

00:18:33,510 --> 00:18:38,730
longer looks like it makes any sense so

00:18:35,850 --> 00:18:41,870
I wrote this thing called sort by

00:18:38,730 --> 00:18:44,490
example and what you do is you say I

00:18:41,870 --> 00:18:47,400
want you to sort stuff that looks like

00:18:44,490 --> 00:18:50,220
this in this order and if there's

00:18:47,400 --> 00:18:53,450
anything else fall back to you know

00:18:50,220 --> 00:18:57,270
looking at priority but but pie first

00:18:53,450 --> 00:18:59,310
then cake and we've got this little this

00:18:57,270 --> 00:19:01,410
uh this transform so this thing is doing

00:18:59,310 --> 00:19:04,110
an implicit schwartzie and transform for

00:19:01,410 --> 00:19:06,540
us and it'll it'll sort over example

00:19:04,110 --> 00:19:09,270
data in a funky format so that's sort by

00:19:06,540 --> 00:19:11,070
example I really like it it's cool it's

00:19:09,270 --> 00:19:15,440
not like crazy fast or optimized or

00:19:11,070 --> 00:19:15,440
anything it just lets me eat pie okay

00:19:15,860 --> 00:19:20,640
yeah yeah yeah I don't I don't have a

00:19:18,720 --> 00:19:22,050
slide for that okay next

00:19:20,640 --> 00:19:23,580
so we're reading worried yes he's gonna

00:19:22,050 --> 00:19:27,360
say sort maker right sort maker yeah

00:19:23,580 --> 00:19:29,790
okay next so we read some stuff and then

00:19:27,360 --> 00:19:31,320
we do some stuff and we say these stuffs

00:19:29,790 --> 00:19:34,020
should be the same because we're testing

00:19:31,320 --> 00:19:35,970
his testing is great so we use is and is

00:19:34,020 --> 00:19:37,920
going to compare them and it says oh man

00:19:35,970 --> 00:19:40,820
they weren't the same because they were

00:19:37,920 --> 00:19:40,820
totally the same

00:19:41,200 --> 00:19:48,350
okay so like then you go out and you eat

00:19:46,460 --> 00:19:51,050
some pie and you come back and you look

00:19:48,350 --> 00:19:52,400
at it some more and you say I know what

00:19:51,050 --> 00:19:55,790
I'm gonna do I'm gonna use that awesome

00:19:52,400 --> 00:19:57,520
module for a test binary data because I

00:19:55,790 --> 00:20:02,060
know that this data isn't just gonna be

00:19:57,520 --> 00:20:04,490
ASCII strings and it's gonna say here is

00:20:02,060 --> 00:20:05,840
a diff and you look at that diff and you

00:20:04,490 --> 00:20:07,010
find the exclamation points that say

00:20:05,840 --> 00:20:10,250
here are the lines where there is a

00:20:07,010 --> 00:20:12,620
difference and you see that what you

00:20:10,250 --> 00:20:16,070
have is using non-breaking spaces and

00:20:12,620 --> 00:20:17,960
what you wanted had normal spaces I

00:20:16,070 --> 00:20:20,990
would like to act like this is a super

00:20:17,960 --> 00:20:23,870
special purpose module no man I use this

00:20:20,990 --> 00:20:28,670
all the time it's test binary data great

00:20:23,870 --> 00:20:30,140
okay next I don't remember this one I

00:20:28,670 --> 00:20:30,680
hope it's good so oh yeah I know okay

00:20:30,140 --> 00:20:32,450
great

00:20:30,680 --> 00:20:35,450
so we open a file it's gonna be a lock

00:20:32,450 --> 00:20:39,050
file and you open a lock file and then

00:20:35,450 --> 00:20:41,450
we flock it great works fine it works

00:20:39,050 --> 00:20:44,150
fine as long as we're in like a super

00:20:41,450 --> 00:20:47,270
controlled environment but it might turn

00:20:44,150 --> 00:20:50,600
out that we're locking over NFS what the

00:20:47,270 --> 00:20:52,400
standard device is don't it might turn

00:20:50,600 --> 00:20:55,790
out that we want to use so we say what

00:20:52,400 --> 00:20:57,020
we're gonna use SQL locks SQL locks get

00:20:55,790 --> 00:20:59,150
released if your connection is

00:20:57,020 --> 00:21:03,590
interrupted and my experience is that

00:20:59,150 --> 00:21:05,210
most pre-existing code does really crazy

00:21:03,590 --> 00:21:06,920
things managing its connections and

00:21:05,210 --> 00:21:08,030
tries to like reconnect quietly in the

00:21:06,920 --> 00:21:09,590
background while you're not looking and

00:21:08,030 --> 00:21:11,450
unless you're really really sure what's

00:21:09,590 --> 00:21:12,770
going on it's gonna like drop your locks

00:21:11,450 --> 00:21:14,030
you're never gonna notice and anything

00:21:12,770 --> 00:21:16,130
it 2 copies of everything

00:21:14,030 --> 00:21:19,460
um because there's Auto reconnect right

00:21:16,130 --> 00:21:21,830
and sometimes a really really stupid

00:21:19,460 --> 00:21:23,150
hack is good enough for getting stuff

00:21:21,830 --> 00:21:26,390
done so I read this thing called DB IX

00:21:23,150 --> 00:21:28,790
Locker and you say I want a locker and

00:21:26,390 --> 00:21:30,680
then you get a lock right hey Locker

00:21:28,790 --> 00:21:32,780
give me a lock and you get a lock and it

00:21:30,680 --> 00:21:35,810
stays locked until the scope goes away

00:21:32,780 --> 00:21:37,550
and it doesn't need to keep a flock or a

00:21:35,810 --> 00:21:39,560
file handle and it doesn't need to keep

00:21:37,550 --> 00:21:43,610
an established connection to anything it

00:21:39,560 --> 00:21:46,400
just shoves or row in a table and then

00:21:43,610 --> 00:21:47,810
later it deletes it yeah there's all

00:21:46,400 --> 00:21:49,250
kinds of problems but you know what it

00:21:47,810 --> 00:21:50,720
actually works really well and I use it

00:21:49,250 --> 00:21:52,880
all the time and I feel like a little

00:21:50,720 --> 00:21:53,630
gross and guilty when I use it so I'm

00:21:52,880 --> 00:21:55,730
gonna tell all of

00:21:53,630 --> 00:21:57,350
you to use it so then you can tell me to

00:21:55,730 --> 00:22:00,560
keep doing it okay okay I'm still going

00:21:57,350 --> 00:22:06,530
over fine okay so use less who here is

00:22:00,560 --> 00:22:09,410
used less yes okay Scott yes so use less

00:22:06,530 --> 00:22:11,600
is a way to tell pearl to change how it

00:22:09,410 --> 00:22:14,260
is allocating resources so for example

00:22:11,600 --> 00:22:17,000
we want to use less CPU great it'll work

00:22:14,260 --> 00:22:18,650
use less memory great works use less

00:22:17,000 --> 00:22:20,870
stack really really useful be able do

00:22:18,650 --> 00:22:22,940
that use less processes now there's a

00:22:20,870 --> 00:22:25,370
really big problem though with a less

00:22:22,940 --> 00:22:26,420
pragma and well there's two I guess I'm

00:22:25,370 --> 00:22:29,180
the first one is that it doesn't

00:22:26,420 --> 00:22:30,950
actually do anything and pro/con throws

00:22:29,180 --> 00:22:34,520
it away so there's that but the bigger

00:22:30,950 --> 00:22:37,130
one is you can't say use less processes

00:22:34,520 --> 00:22:38,830
right you sound it's fewer it's here you

00:22:37,130 --> 00:22:44,990
want to be able say use fewer processes

00:22:38,830 --> 00:22:47,000
so I wrote fewer it works it works well

00:22:44,990 --> 00:22:48,740
there's also use more if you want to use

00:22:47,000 --> 00:22:50,000
more stack and we can talk about

00:22:48,740 --> 00:22:52,670
implementing that but if it exists it

00:22:50,000 --> 00:22:55,940
works you need to use pearl 512 or later

00:22:52,670 --> 00:22:58,060
for it to work which is bizarre but

00:22:55,940 --> 00:23:00,560
there you go okay next

00:22:58,060 --> 00:23:05,120
no it's not-- does not do anything more

00:23:00,560 --> 00:23:06,020
than it is a subclass of less okay all

00:23:05,120 --> 00:23:07,220
right new topic

00:23:06,020 --> 00:23:10,040
debuggers who has written their own

00:23:07,220 --> 00:23:11,480
debugger all your hands should go up now

00:23:10,040 --> 00:23:13,250
okay we're gonna do one right now

00:23:11,480 --> 00:23:16,820
debuggers are great and they're really

00:23:13,250 --> 00:23:20,330
easy to do in pro so you can run that

00:23:16,820 --> 00:23:24,260
program like this in pro - Big D alright

00:23:20,330 --> 00:23:26,360
- Big D spot and that turns on Pearl's

00:23:24,260 --> 00:23:27,740
debugging facility where it's gonna do

00:23:26,360 --> 00:23:29,450
all kinds of crazy stuff to help you to

00:23:27,740 --> 00:23:31,370
bug pearl that's not what I want to talk

00:23:29,450 --> 00:23:32,660
about because I don't know how it works

00:23:31,370 --> 00:23:35,060
that's where when you have a debugging

00:23:32,660 --> 00:23:37,550
build of pearl what I'm gonna talk about

00:23:35,060 --> 00:23:41,000
is the little D so you say little D :

00:23:37,550 --> 00:23:43,100
XYZ and it's going to use Pearl level

00:23:41,000 --> 00:23:45,920
debugging of your pearl program not of

00:23:43,100 --> 00:23:49,090
the Perl interpreter so Big D for Pearl

00:23:45,920 --> 00:23:52,220
little D for Pearl hope it's clear next

00:23:49,090 --> 00:23:53,540
so I run this do you call him stupid

00:23:52,220 --> 00:23:54,650
because I wrote a stupid debugger

00:23:53,540 --> 00:23:56,900
because that's the kind of code I write

00:23:54,650 --> 00:24:00,620
and it's gonna say okay what you mean by

00:23:56,900 --> 00:24:04,280
that is first of all turn on dollar hat

00:24:00,620 --> 00:24:06,980
P to the self explanatory value of 1855

00:24:04,280 --> 00:24:10,640
dollar dollar hat P in

00:24:06,980 --> 00:24:13,040
a bit field that contains a set of

00:24:10,640 --> 00:24:14,809
debugging facilities that Perl provides

00:24:13,040 --> 00:24:18,950
that can be turned off and on

00:24:14,809 --> 00:24:20,870
independently and 1855 is roughly fluent

00:24:18,950 --> 00:24:25,669
to most of them

00:24:20,870 --> 00:24:28,850
here's a list of most of them I here are

00:24:25,669 --> 00:24:30,799
the ones that you get with - P I'm not

00:24:28,850 --> 00:24:33,830
gonna go through what they are the ones

00:24:30,799 --> 00:24:38,870
we care about our call a subroutine

00:24:33,830 --> 00:24:40,490
called DB DB every statement and put the

00:24:38,870 --> 00:24:43,460
source to everything you load in a

00:24:40,490 --> 00:24:44,929
variable called @ underscore left

00:24:43,460 --> 00:24:45,760
bracket in the name of the file that you

00:24:44,929 --> 00:24:48,679
loaded

00:24:45,760 --> 00:24:52,669
it's Perl I'm sorry

00:24:48,679 --> 00:24:54,440
so and here's our debugger okay or this

00:24:52,669 --> 00:24:56,900
is actually a profiler but a profiler no

00:24:54,440 --> 00:24:58,760
plug are pretty similar so we're gonna

00:24:56,900 --> 00:25:00,380
make a package called DB because it's

00:24:58,760 --> 00:25:01,730
gonna call DB DB and that means we need

00:25:00,380 --> 00:25:05,690
a package called DB with a subroutine

00:25:01,730 --> 00:25:08,090
called DB and every time there is a

00:25:05,690 --> 00:25:10,460
statement run this subroutine gets

00:25:08,090 --> 00:25:12,049
called and it looks at the caller and it

00:25:10,460 --> 00:25:15,320
says okay what's being called right now

00:25:12,049 --> 00:25:18,860
that's how it finds out this says unless

00:25:15,320 --> 00:25:21,590
the code the statement being run is from

00:25:18,860 --> 00:25:23,360
the file that is the program being run

00:25:21,590 --> 00:25:25,460
skip it so if you're running code in a

00:25:23,360 --> 00:25:30,140
module I don't care I'm only gonna test

00:25:25,460 --> 00:25:32,240
the code running in your script and if

00:25:30,140 --> 00:25:35,000
it is from that program then omit a

00:25:32,240 --> 00:25:36,110
trace with devil line timer and what is

00:25:35,000 --> 00:25:38,299
devil lion timer what doesn't really

00:25:36,110 --> 00:25:41,390
matter but I'll show you it's got this

00:25:38,299 --> 00:25:42,650
routine called emit trace that gets told

00:25:41,390 --> 00:25:44,690
where it's coming from

00:25:42,650 --> 00:25:47,840
it keeps track of the last place that

00:25:44,690 --> 00:25:51,890
got called it pulls some source for the

00:25:47,840 --> 00:25:53,540
for the program it gets a timer it gets

00:25:51,890 --> 00:25:55,640
the code and then it looked as a

00:25:53,540 --> 00:25:57,950
snapshot of the time between this

00:25:55,640 --> 00:25:59,030
statement and the last one so every time

00:25:57,950 --> 00:26:01,400
it's running a line of code in your

00:25:59,030 --> 00:26:03,169
program it gets the time between the

00:26:01,400 --> 00:26:04,850
last one and this one does that make

00:26:03,169 --> 00:26:06,530
sense I'm not gonna explain it if it

00:26:04,850 --> 00:26:09,440
doesn't it's got to keep going but it's

00:26:06,530 --> 00:26:11,809
nice to see you nodding and then it

00:26:09,440 --> 00:26:15,020
prints out how long it took so when you

00:26:11,809 --> 00:26:17,120
run this every time it runs line 1 it

00:26:15,020 --> 00:26:19,179
prints out the time it took to get there

00:26:17,120 --> 00:26:20,559
from line 0

00:26:19,179 --> 00:26:22,119
and it works its way down the program

00:26:20,559 --> 00:26:24,070
and when you run it you get some kind of

00:26:22,119 --> 00:26:25,419
output like this here's your program and

00:26:24,070 --> 00:26:28,570
here's the amount of time on each line

00:26:25,419 --> 00:26:31,059
in your program I have just shown you

00:26:28,570 --> 00:26:33,429
all of the code required to write your

00:26:31,059 --> 00:26:36,580
own debugger or profiler look that's it

00:26:33,429 --> 00:26:38,320
seriously it's cool it's really cool you

00:26:36,580 --> 00:26:40,359
can just like write stupid debuggers to

00:26:38,320 --> 00:26:43,929
like make funny things happen and put

00:26:40,359 --> 00:26:45,580
them in your friends shebang lines if

00:26:43,929 --> 00:26:47,499
you do that I want to see them so just

00:26:45,580 --> 00:26:49,089
send to me okay next so we're saving

00:26:47,499 --> 00:26:51,580
time now or getting back that lost time

00:26:49,089 --> 00:26:56,289
okay I used to write tests until I

00:26:51,580 --> 00:26:58,869
learned this okay so we have a lot of

00:26:56,289 --> 00:27:00,429
code and something we don't always know

00:26:58,869 --> 00:27:02,649
is whether the code gets run because

00:27:00,429 --> 00:27:04,719
there's not a test and sometimes you're

00:27:02,649 --> 00:27:06,759
like I'm gonna write a test and exercise

00:27:04,719 --> 00:27:08,289
this batch of code and see it it gets

00:27:06,759 --> 00:27:11,969
run so I know that it works and it's

00:27:08,289 --> 00:27:17,739
tested and sometimes you're like oh yeah

00:27:11,969 --> 00:27:19,299
so that's how I usually feel so you find

00:27:17,739 --> 00:27:23,859
this code and it's like okay sometimes

00:27:19,299 --> 00:27:27,549
maybe probably not so I'm really hard to

00:27:23,859 --> 00:27:29,379
test code exists so one way to test that

00:27:27,549 --> 00:27:32,200
this happens is to write coverage tests

00:27:29,379 --> 00:27:33,909
but like that's for suckers the other

00:27:32,200 --> 00:27:36,519
thing you can do is throw in some like

00:27:33,909 --> 00:27:41,320
sis logging or standard air which is

00:27:36,519 --> 00:27:43,239
okay but first of all who reviews the

00:27:41,320 --> 00:27:46,119
standard error from their programs right

00:27:43,239 --> 00:27:49,330
like sometimes sometimes I do but mostly

00:27:46,119 --> 00:27:51,969
it's like a zillion occurrences of duty

00:27:49,330 --> 00:27:54,369
used undeath in plus and you know I

00:27:51,969 --> 00:27:55,419
can't be bothered and then it's like

00:27:54,369 --> 00:27:57,460
okay well you know we'll put it in

00:27:55,419 --> 00:27:59,739
syslog because you're not gonna review

00:27:57,460 --> 00:28:01,659
syslog either or you could log it to a

00:27:59,739 --> 00:28:04,239
database and then you're great because

00:28:01,659 --> 00:28:05,169
you can just search is only gonna be

00:28:04,239 --> 00:28:06,759
this stuff and you can search the

00:28:05,169 --> 00:28:09,099
database so the problem is now you're

00:28:06,759 --> 00:28:10,839
talking to a database so there's a whole

00:28:09,099 --> 00:28:12,909
new failure mechanism here which is like

00:28:10,839 --> 00:28:14,679
well the database wasn't up so this code

00:28:12,909 --> 00:28:18,279
does get hit but you don't know it and

00:28:14,679 --> 00:28:20,649
it doesn't work so I wrote this thing

00:28:18,279 --> 00:28:22,059
and it's called alive and we use it and

00:28:20,649 --> 00:28:23,379
it's great I mean you'll see the code

00:28:22,059 --> 00:28:25,690
the point here is not the code the point

00:28:23,379 --> 00:28:29,499
is is uh is thinking about your problems

00:28:25,690 --> 00:28:31,150
this way what alive does is it sends a

00:28:29,499 --> 00:28:33,520
UDP Datagram

00:28:31,150 --> 00:28:34,900
and it says you know here you said

00:28:33,520 --> 00:28:36,940
there's some annoying code I'm gonna

00:28:34,900 --> 00:28:39,070
send a Datagram saying on this date from

00:28:36,940 --> 00:28:42,130
this host I entered the annoying code

00:28:39,070 --> 00:28:44,980
branch and then right and this is it

00:28:42,130 --> 00:28:46,990
it's the other thing to note here is

00:28:44,980 --> 00:28:47,500
this is a whole thing to like send

00:28:46,990 --> 00:28:49,030
datagrams

00:28:47,500 --> 00:28:50,050
they're really really easy and a lot of

00:28:49,030 --> 00:28:50,860
people like oh I don't really do

00:28:50,050 --> 00:28:53,020
networking code

00:28:50,860 --> 00:28:56,320
I mean networking code can be hard and

00:28:53,020 --> 00:28:57,970
complicated if it has to be good but if

00:28:56,320 --> 00:28:59,200
it only has to work it's really really

00:28:57,970 --> 00:29:04,810
easy and this works

00:28:59,200 --> 00:29:06,880
since UDP is reliable enough so it sends

00:29:04,810 --> 00:29:09,520
it sends a Datagram and then here's the

00:29:06,880 --> 00:29:11,080
whole server that receives it it's like

00:29:09,520 --> 00:29:12,670
sits around listening for datagrams and

00:29:11,080 --> 00:29:15,010
when it gets them it writes them to a

00:29:12,670 --> 00:29:16,780
file now okay IV lighted how we write to

00:29:15,010 --> 00:29:18,810
a file but whatever we can all write to

00:29:16,780 --> 00:29:22,420
a file right we use print or something

00:29:18,810 --> 00:29:24,880
so then we have some directory and if

00:29:22,420 --> 00:29:26,530
there are files in the directory we know

00:29:24,880 --> 00:29:29,260
that stuff happened that we care about

00:29:26,530 --> 00:29:30,370
and if there are no files nothing

00:29:29,260 --> 00:29:32,050
happened that we care about there's no

00:29:30,370 --> 00:29:34,330
chance for failure

00:29:32,050 --> 00:29:35,740
there's no blocking there's basically no

00:29:34,330 --> 00:29:38,410
performance hit there's no need to

00:29:35,740 --> 00:29:40,270
review like read or grep anything it's

00:29:38,410 --> 00:29:41,530
just LS and you're done awesome the book

00:29:40,270 --> 00:29:42,910
you want to read by the way for network

00:29:41,530 --> 00:29:44,920
programming and pearl I love pitching

00:29:42,910 --> 00:29:46,990
this book is network programming with

00:29:44,920 --> 00:29:50,140
Perl which is like 75 years old and

00:29:46,990 --> 00:29:51,250
still great and it's I think I think

00:29:50,140 --> 00:29:53,020
actually the last time I gave this talk

00:29:51,250 --> 00:29:55,960
somebody in the audience said I just

00:29:53,020 --> 00:29:57,550
ordered the last copy on Amazon I don't

00:29:55,960 --> 00:30:00,370
know if they've got any restock I don't

00:29:57,550 --> 00:30:03,370
know okay so next I'm forking I'm

00:30:00,370 --> 00:30:05,170
talking about writing servers forking so

00:30:03,370 --> 00:30:07,090
forking is great if your operating

00:30:05,170 --> 00:30:08,830
system can do it I hope you can

00:30:07,090 --> 00:30:11,080
otherwise this is not gonna be a very

00:30:08,830 --> 00:30:14,320
interesting talk for you but it's short

00:30:11,080 --> 00:30:16,000
right okay so here's a server I wrote

00:30:14,320 --> 00:30:17,800
and here's what it does very very

00:30:16,000 --> 00:30:22,420
important mission-critical server it's

00:30:17,800 --> 00:30:25,300
gonna run 24 if it so it says if fork

00:30:22,420 --> 00:30:29,080
and if fork is gonna skip to the next

00:30:25,300 --> 00:30:31,480
one if it's the parent and if it's the

00:30:29,080 --> 00:30:33,790
child it does stuff and then hangs

00:30:31,480 --> 00:30:35,650
around and then exits right so this is

00:30:33,790 --> 00:30:38,170
obviously a complicated service that

00:30:35,650 --> 00:30:39,400
we're running doing stuff is critical to

00:30:38,170 --> 00:30:41,160
our mission but it's not we're gonna

00:30:39,400 --> 00:30:43,110
fork some stuff and

00:30:41,160 --> 00:30:45,600
at the end we're gonna reap them all so

00:30:43,110 --> 00:30:47,130
if this is not clear to you take my word

00:30:45,600 --> 00:30:49,260
for it but this is really really basic

00:30:47,130 --> 00:30:52,710
forking server and what's gonna happen

00:30:49,260 --> 00:30:55,650
is we look at our memory usage here and

00:30:52,710 --> 00:30:59,550
we see here's our parent and here's all

00:30:55,650 --> 00:31:00,990
those those children and the memory is

00:30:59,550 --> 00:31:02,850
really really low and it's the same

00:31:00,990 --> 00:31:05,580
between all of them all of it's in

00:31:02,850 --> 00:31:08,100
shared memory right so Perl which takes

00:31:05,580 --> 00:31:09,720
like a Meg 1.7 Meg's of memory is

00:31:08,100 --> 00:31:11,190
sharing all this memory between all the

00:31:09,720 --> 00:31:13,500
children this is super important UNIX

00:31:11,190 --> 00:31:14,790
concept the parents memory can continue

00:31:13,500 --> 00:31:16,200
to be used by the children and the

00:31:14,790 --> 00:31:20,220
private memory is the stuff that only

00:31:16,200 --> 00:31:23,780
each of them has so our sir what was it

00:31:20,220 --> 00:31:26,370
gonna do anybody remember stuff right so

00:31:23,780 --> 00:31:28,710
the stuff is probably some kind of

00:31:26,370 --> 00:31:34,260
highly optimized efficient algorithm

00:31:28,710 --> 00:31:39,180
we're running in his for Oh No so so

00:31:34,260 --> 00:31:42,770
what happens right what happens is 25

00:31:39,180 --> 00:31:45,150
Meg's in private memory for each Fork

00:31:42,770 --> 00:31:47,400
right so how many Forks were there there

00:31:45,150 --> 00:31:50,040
are 20 so we've now just used half a gig

00:31:47,400 --> 00:31:52,170
of ram and it's all holding the same

00:31:50,040 --> 00:31:55,050
stuff right so how do you fix this

00:31:52,170 --> 00:31:58,680
problem it's really easy you take that

00:31:55,050 --> 00:32:00,870
require and you pull it out so if you

00:31:58,680 --> 00:32:03,570
didn't know to do this you're welcome

00:32:00,870 --> 00:32:05,580
the problem is I do know to do this and

00:32:03,570 --> 00:32:06,840
I still screw it up so what happened you

00:32:05,580 --> 00:32:08,850
remember he goes back to nothing great

00:32:06,840 --> 00:32:10,320
fantastic and you see all the memory

00:32:08,850 --> 00:32:13,530
goes over the left column which is what

00:32:10,320 --> 00:32:16,710
we want the problem is even though I

00:32:13,530 --> 00:32:18,180
know to put my require early sometimes

00:32:16,710 --> 00:32:19,820
you forget or something is getting

00:32:18,180 --> 00:32:22,860
loaded dynamically and you have no idea

00:32:19,820 --> 00:32:24,630
that actually all of your child servers

00:32:22,860 --> 00:32:26,310
are loading all this stuff into memory

00:32:24,630 --> 00:32:27,510
and like ballooning up your server until

00:32:26,310 --> 00:32:32,100
one day your system then is like how can

00:32:27,510 --> 00:32:36,030
you keep using my swap man so I have

00:32:32,100 --> 00:32:38,490
this thing called pre fork oh no I don't

00:32:36,030 --> 00:32:40,770
have pre fork pre fork is belongs to

00:32:38,490 --> 00:32:45,030
Adam Kennedy and pre fork is a mechanism

00:32:40,770 --> 00:32:47,010
to say I I want to use this pre fork so

00:32:45,030 --> 00:32:48,660
I'm telling you now I'm gonna use it and

00:32:47,010 --> 00:32:52,710
if you are going to fork load it

00:32:48,660 --> 00:32:54,460
immediately before you fork or if you

00:32:52,710 --> 00:32:57,490
know you're going to fork later load it

00:32:54,460 --> 00:32:59,379
okay so this is great it's actually it's

00:32:57,490 --> 00:33:01,869
I like it it's good code the problem is

00:32:59,379 --> 00:33:04,419
you have to know you have to know what

00:33:01,869 --> 00:33:07,659
stuff you want to load and I don't know

00:33:04,419 --> 00:33:10,360
that I don't read my code that it's

00:33:07,659 --> 00:33:14,019
write my code so how do you find out

00:33:10,360 --> 00:33:17,440
what stuff you need to do I had a really

00:33:14,019 --> 00:33:19,809
good story here and the problem was I

00:33:17,440 --> 00:33:20,830
had a live I had a server I'm glad I

00:33:19,809 --> 00:33:23,649
remember this story it would be really

00:33:20,830 --> 00:33:25,360
embarrassing I had a server and the

00:33:23,649 --> 00:33:26,980
server is running in production and I

00:33:25,360 --> 00:33:30,249
made a really important bug fix to it

00:33:26,980 --> 00:33:32,289
and I feel like then I go to lunch and I

00:33:30,249 --> 00:33:34,119
said well I'm gonna push it now so all

00:33:32,289 --> 00:33:36,249
the libraries are deployed and then when

00:33:34,119 --> 00:33:37,210
I come back I'll issue a rolling restart

00:33:36,249 --> 00:33:39,429
across the farm

00:33:37,210 --> 00:33:41,499
right and it'll load everything but what

00:33:39,429 --> 00:33:44,619
I didn't realize is it was loading it in

00:33:41,499 --> 00:33:47,110
the child processes so after all the

00:33:44,619 --> 00:33:49,210
children while I was out eating pie cake

00:33:47,110 --> 00:33:50,590
I don't know whatever I had lunch when

00:33:49,210 --> 00:33:51,820
the children with their Maps requests

00:33:50,590 --> 00:33:54,009
and die-off and it would start a new one

00:33:51,820 --> 00:33:57,240
it would load the bug fix and as you can

00:33:54,009 --> 00:34:01,269
imagine the bug fix was a little buggy

00:33:57,240 --> 00:34:02,740
so how do you prevent this well one way

00:34:01,269 --> 00:34:04,240
is to make sure that you're loading this

00:34:02,740 --> 00:34:07,629
stuff early so I have this thing called

00:34:04,240 --> 00:34:09,760
post for kink and what it does I'll go

00:34:07,629 --> 00:34:13,809
through really quick is it makes a call

00:34:09,760 --> 00:34:17,049
back and the call back says when you

00:34:13,809 --> 00:34:19,000
import post for kink it saves the pin of

00:34:17,049 --> 00:34:20,589
the process and then any time the

00:34:19,000 --> 00:34:23,889
callback is called it doesn't do

00:34:20,589 --> 00:34:25,210
anything if it's the same process if the

00:34:23,889 --> 00:34:28,079
callback is getting called from a new

00:34:25,210 --> 00:34:31,750
process then it calls another callback

00:34:28,079 --> 00:34:34,899
with the file name that is being passed

00:34:31,750 --> 00:34:38,409
to it and then it sticks itself into a

00:34:34,899 --> 00:34:39,460
tink when you put coat in a tink it

00:34:38,409 --> 00:34:41,829
means that when you try to load a

00:34:39,460 --> 00:34:44,440
library it calls that code this code

00:34:41,829 --> 00:34:46,000
always fails to load the library so that

00:34:44,440 --> 00:34:48,520
I couldn't find it and it goes on to the

00:34:46,000 --> 00:34:51,010
file system again but in the event that

00:34:48,520 --> 00:34:53,799
you're trying to load a library after

00:34:51,010 --> 00:34:55,809
the pid' has changed which means that

00:34:53,799 --> 00:34:58,230
you have forked or like your mod Apache

00:34:55,809 --> 00:35:01,740
or something then

00:34:58,230 --> 00:35:05,490
it will call your callback and the

00:35:01,740 --> 00:35:07,020
callback is gonna do something something

00:35:05,490 --> 00:35:08,070
to tell you I'm sorry I can't tell you

00:35:07,020 --> 00:35:10,650
what its gonna do we'll just have to

00:35:08,070 --> 00:35:12,170
keep no and what its gonna do in might

00:35:10,650 --> 00:35:15,690
you can do whatever you want in my case

00:35:12,170 --> 00:35:18,840
it uses alive and it sends a UDP

00:35:15,690 --> 00:35:20,520
Datagram so I end up with this directory

00:35:18,840 --> 00:35:22,050
that starts slowly filling up with files

00:35:20,520 --> 00:35:24,359
saying here's all the crap that you're

00:35:22,050 --> 00:35:25,740
loading post fork and I can look at it

00:35:24,359 --> 00:35:27,540
and see well some of these things are

00:35:25,740 --> 00:35:29,250
really really big I can switch in the

00:35:27,540 --> 00:35:31,619
pre fork and slowly watch our memory

00:35:29,250 --> 00:35:34,530
utilization go down it's like really

00:35:31,619 --> 00:35:37,050
really bodge together but like this kind

00:35:34,530 --> 00:35:40,230
of stuff you know takes you about 1 hour

00:35:37,050 --> 00:35:41,340
after lunch and you never have to worry

00:35:40,230 --> 00:35:44,100
about these problems again and it's not

00:35:41,340 --> 00:35:46,560
like a well architected enterprise

00:35:44,100 --> 00:35:48,750
solution but the neither like can I say

00:35:46,560 --> 00:35:50,130
this on youtube Peters most pearl stuff

00:35:48,750 --> 00:35:51,480
that we use right it's like it's like

00:35:50,130 --> 00:35:53,400
make it work make it work and it does

00:35:51,480 --> 00:35:54,630
it's great ok next oh yeah this is what

00:35:53,400 --> 00:35:56,250
I found out but this is Maya listen

00:35:54,630 --> 00:35:58,310
you're loading all this stuff after

00:35:56,250 --> 00:36:05,420
forking oh man

00:35:58,310 --> 00:36:13,080
ok ok let's talk about git who uses git

00:36:05,420 --> 00:36:20,760
yay who still uses CVS alright who uses

00:36:13,080 --> 00:36:22,760
subversion switch to CVS ok so you can

00:36:20,760 --> 00:36:25,320
have aliases right and these are like

00:36:22,760 --> 00:36:26,460
commands that you run like get something

00:36:25,320 --> 00:36:27,869
but they do something that's not

00:36:26,460 --> 00:36:33,050
included in core the great these are

00:36:27,869 --> 00:36:36,000
mine not seen here is hist

00:36:33,050 --> 00:36:38,850
so hist is one of my favorite things I

00:36:36,000 --> 00:36:42,660
run this I don't know every five seconds

00:36:38,850 --> 00:36:47,369
and what it does is it gives you a log

00:36:42,660 --> 00:36:51,119
of all of your git branches scrunched

00:36:47,369 --> 00:36:54,180
down and colorized as a graph and you've

00:36:51,119 --> 00:36:55,740
probably seen parts of this before but

00:36:54,180 --> 00:36:58,320
this particular set of switches I really

00:36:55,740 --> 00:37:01,710
really like it gives you this so you can

00:36:58,320 --> 00:37:03,660
see right each head and they're

00:37:01,710 --> 00:37:05,760
color-coded and they're nice short lines

00:37:03,660 --> 00:37:08,040
so I use this all the time the problem

00:37:05,760 --> 00:37:09,780
is some of these branches are kind of

00:37:08,040 --> 00:37:11,670
long right so

00:37:09,780 --> 00:37:13,470
here's these four commits all I need to

00:37:11,670 --> 00:37:15,300
know is the name of the branch for the

00:37:13,470 --> 00:37:17,640
most part I want to see a lot of the

00:37:15,300 --> 00:37:19,230
time I want to see the topology of my

00:37:17,640 --> 00:37:21,210
repository I don't care so much about

00:37:19,230 --> 00:37:22,619
every commit I want to see what's it

00:37:21,210 --> 00:37:25,950
look like what do I need to rebase where

00:37:22,619 --> 00:37:29,880
do the merges happen so that's good go

00:37:25,950 --> 00:37:31,220
back get pissed there's also I wrote get

00:37:29,880 --> 00:37:34,260
pissed

00:37:31,220 --> 00:37:36,750
it works for me maybe you want to rename

00:37:34,260 --> 00:37:40,880
it and what that does is it squashes any

00:37:36,750 --> 00:37:44,580
linear runs of structure so you get this

00:37:40,880 --> 00:37:47,010
and it'll show you any named commits and

00:37:44,580 --> 00:37:48,750
it'll show you all the branches but like

00:37:47,010 --> 00:37:50,580
on the branches it'll say here's six

00:37:48,750 --> 00:37:52,560
commits so this branch is you know

00:37:50,580 --> 00:37:56,190
system it's long and then it merges and

00:37:52,560 --> 00:37:58,170
you can skim the topology of your your

00:37:56,190 --> 00:38:00,390
graph or your git repository really

00:37:58,170 --> 00:38:01,830
really quickly with this um what I want

00:38:00,390 --> 00:38:05,430
to what I want to emphasize here is how

00:38:01,830 --> 00:38:09,030
easy these things are to write hist just

00:38:05,430 --> 00:38:10,859
like three lines right hysts is more

00:38:09,030 --> 00:38:12,510
than three lines but almost all of it is

00:38:10,859 --> 00:38:13,710
purl and it's just like look at the

00:38:12,510 --> 00:38:15,690
first couple of characters in the line

00:38:13,710 --> 00:38:20,970
and look accumulate them if they're the

00:38:15,690 --> 00:38:23,849
same ly edit so this is something I

00:38:20,970 --> 00:38:26,369
stole from mark Dominus super awesome

00:38:23,849 --> 00:38:27,780
and oh this next slide is gonna have

00:38:26,369 --> 00:38:31,849
some profanity on it because I stole

00:38:27,780 --> 00:38:34,109
this from Mark Thomas and get re-edit

00:38:31,849 --> 00:38:36,839
edits whatever is dirty in your

00:38:34,109 --> 00:38:39,450
repository and if nothing is dirty it

00:38:36,839 --> 00:38:41,220
will edit whatever was in the last

00:38:39,450 --> 00:38:42,540
commit so whenever you're like I

00:38:41,220 --> 00:38:43,560
committed stuff and I ran the test and

00:38:42,540 --> 00:38:44,940
they didn't work and I'm not sure

00:38:43,560 --> 00:38:47,099
exactly where the bug is you just say

00:38:44,940 --> 00:38:48,780
get re-edit but for me to get read and

00:38:47,099 --> 00:38:50,970
it opens up all the same files you can

00:38:48,780 --> 00:38:54,270
flip through exactly what you edited now

00:38:50,970 --> 00:38:56,490
it looks like this so if you gave it a

00:38:54,270 --> 00:38:59,670
commit then get the list of changed

00:38:56,490 --> 00:39:01,140
files if you did then get the status and

00:38:59,670 --> 00:39:04,440
kind of mess around so you got all that

00:39:01,140 --> 00:39:05,790
stuff now I'm not showing you this

00:39:04,440 --> 00:39:07,200
because the code is important to read

00:39:05,790 --> 00:39:09,210
the point of reading this code are

00:39:07,200 --> 00:39:12,330
looking at it is to see that it's really

00:39:09,210 --> 00:39:15,510
super simple Perl code that's just using

00:39:12,330 --> 00:39:18,810
gluey stuff you know it's it's using Q X

00:39:15,510 --> 00:39:21,690
which is just back ticks and and calling

00:39:18,810 --> 00:39:21,960
get commands to get lists of names and

00:39:21,690 --> 00:39:24,390
proud

00:39:21,960 --> 00:39:28,770
these extending get is really really

00:39:24,390 --> 00:39:30,839
easy when you want to extend get you

00:39:28,770 --> 00:39:33,589
write a command called git - something

00:39:30,839 --> 00:39:35,760
this is if you can't put it in an alias

00:39:33,589 --> 00:39:38,040
almost everything you do and get is

00:39:35,760 --> 00:39:41,160
built on top of simple commands like log

00:39:38,040 --> 00:39:43,140
and status some of the commands are kind

00:39:41,160 --> 00:39:46,640
of dumb some do more than one thing

00:39:43,140 --> 00:39:48,810
some do one thing but don't do it well

00:39:46,640 --> 00:39:52,170
but if you start with those commands

00:39:48,810 --> 00:39:54,000
that I showed you you can find a lot of

00:39:52,170 --> 00:39:56,730
cool examples and I really think that if

00:39:54,000 --> 00:39:59,880
you are using git you should be writing

00:39:56,730 --> 00:40:01,260
get scripts get is really really nice

00:39:59,880 --> 00:40:02,880
made of little components and you can

00:40:01,260 --> 00:40:04,410
make your own life easier by writing

00:40:02,880 --> 00:40:08,880
more and more stuff with it all those

00:40:04,410 --> 00:40:14,510
commands can be found here in our JDS /r

00:40:08,880 --> 00:40:19,700
jbs dots or in MJ dominus get util and

00:40:14,510 --> 00:40:22,859
what is our jb s dots I hear you got cry

00:40:19,700 --> 00:40:25,040
so let's talk about that with our next

00:40:22,859 --> 00:40:25,040
topic

00:40:25,539 --> 00:40:36,630
something I enjoy doing and don't do

00:40:28,209 --> 00:40:39,869
often enough is pair programming most

00:40:36,630 --> 00:40:41,859
most of the pair programming that I do

00:40:39,869 --> 00:40:43,029
strangely enough at least most of the

00:40:41,859 --> 00:40:46,869
programming have done this year pair

00:40:43,029 --> 00:40:50,319
programming has been with this guy this

00:40:46,869 --> 00:40:53,289
is this is a Inga net who sadly is not

00:40:50,319 --> 00:40:56,729
here with us today I I don't think that

00:40:53,289 --> 00:41:01,269
he's dead I think he's just not here and

00:40:56,729 --> 00:41:03,939
he really liked sparing a lot like crazy

00:41:01,269 --> 00:41:07,509
pants much and he wrote this program

00:41:03,939 --> 00:41:09,339
called pair up and the idea behind pair

00:41:07,509 --> 00:41:11,859
up is that like I want to write some

00:41:09,339 --> 00:41:15,069
code and my buddy wants to write some

00:41:11,859 --> 00:41:17,919
code and we we need like a neutral

00:41:15,069 --> 00:41:21,130
meeting ground for writing our code so

00:41:17,919 --> 00:41:26,019
we like get some server in the cloud and

00:41:21,130 --> 00:41:27,429
we both use it so we're both gonna write

00:41:26,019 --> 00:41:29,109
on this this server and that's great

00:41:27,429 --> 00:41:32,829
like we can shell into it use team ox

00:41:29,109 --> 00:41:35,259
and share stuff and we had a brand new

00:41:32,829 --> 00:41:36,789
server every time which means that if I

00:41:35,259 --> 00:41:38,459
don't really trust that guy because he

00:41:36,789 --> 00:41:42,429
looked a little weird suspicious to me

00:41:38,459 --> 00:41:44,380
then he can't see my files and if we are

00:41:42,429 --> 00:41:48,159
working on something that totally screws

00:41:44,380 --> 00:41:49,269
up the box that we're working on the box

00:41:48,159 --> 00:41:51,429
doesn't matter we throw it away when

00:41:49,269 --> 00:41:53,949
we're done and the user accounts all get

00:41:51,429 --> 00:41:55,509
created automatically his by pair up it

00:41:53,949 --> 00:41:59,709
installs all the packages that you both

00:41:55,509 --> 00:42:01,959
declare you need like vim Emacs Nano and

00:41:59,709 --> 00:42:04,359
when you're done they all get thrown

00:42:01,959 --> 00:42:05,439
away and that's what it's on github but

00:42:04,359 --> 00:42:08,319
that's not what I actually wanted to

00:42:05,439 --> 00:42:11,619
talk about the thing that I wanted to

00:42:08,319 --> 00:42:13,630
talk about is that all these properties

00:42:11,619 --> 00:42:15,669
are great right have this instantly

00:42:13,630 --> 00:42:18,669
built disposable server ready to use

00:42:15,669 --> 00:42:21,909
except dude where am i dot files like

00:42:18,669 --> 00:42:24,939
having vim on the server is cool but if

00:42:21,909 --> 00:42:29,609
it's not running my color scheme it's

00:42:24,939 --> 00:42:29,609
like forget it it's got to be

00:42:29,870 --> 00:42:36,810
yeah I don't it's in another castle man

00:42:33,740 --> 00:42:38,640
like it's got to be blue it's gotta be

00:42:36,810 --> 00:42:42,360
green and if I start seeing that default

00:42:38,640 --> 00:42:45,720
like puce and purple vin colors we're

00:42:42,360 --> 00:42:48,540
just gonna play board games instead so I

00:42:45,720 --> 00:42:51,720
put them all in this repository called

00:42:48,540 --> 00:42:54,060
our jbs dots and it's got all my dot

00:42:51,720 --> 00:42:57,090
files but but it's not actually all my

00:42:54,060 --> 00:43:00,690
dot files because some of them have

00:42:57,090 --> 00:43:02,400
things like passwords or like programs

00:43:00,690 --> 00:43:06,060
that do stuff that are top-secret like

00:43:02,400 --> 00:43:09,210
organize my ibex pictures and those I

00:43:06,060 --> 00:43:11,670
keep on a private server and then I've

00:43:09,210 --> 00:43:15,380
got this program that engi wrote that

00:43:11,670 --> 00:43:19,230
will install them all and it takes a

00:43:15,380 --> 00:43:24,920
list of repositories in the beloved EML

00:43:19,230 --> 00:43:28,770
format and all these repositories store

00:43:24,920 --> 00:43:30,900
files that are like my config files so

00:43:28,770 --> 00:43:31,590
like this one is my basic configuration

00:43:30,900 --> 00:43:33,270
aids everywhere

00:43:31,590 --> 00:43:34,980
this one is stuff just for OS 10

00:43:33,270 --> 00:43:37,650
machines here's my there's my vim

00:43:34,980 --> 00:43:39,810
configuration and down at the bottom and

00:43:37,650 --> 00:43:41,190
there's like my private config I don't

00:43:39,810 --> 00:43:43,050
even know oh my address book like my

00:43:41,190 --> 00:43:44,820
mutt address book is in there I don't

00:43:43,050 --> 00:43:46,980
want everybody on github to see all my

00:43:44,820 --> 00:43:51,210
family members email addresses because

00:43:46,980 --> 00:43:52,890
my family's weird and that is not what

00:43:51,210 --> 00:43:55,710
this config file looks like at work

00:43:52,890 --> 00:43:57,210
because at work I don't use my family

00:43:55,710 --> 00:43:59,730
email address book I use a different one

00:43:57,210 --> 00:44:02,690
and I keep that on my work git

00:43:59,730 --> 00:44:05,310
so I have these different these

00:44:02,690 --> 00:44:06,990
different sets of config files I use and

00:44:05,310 --> 00:44:10,800
that's problem it's gonna come up is

00:44:06,990 --> 00:44:13,260
where do you put something like your how

00:44:10,800 --> 00:44:17,450
do you just pronounce that volume

00:44:13,260 --> 00:44:20,220
yes the Jo man that it's a Z Shrek right

00:44:17,450 --> 00:44:23,490
so anyway where do I keep my Z Shrek

00:44:20,220 --> 00:44:25,530
I used to say /etc until I started my

00:44:23,490 --> 00:44:27,570
current job and now it's slash Etsy and

00:44:25,530 --> 00:44:29,580
I feel crazy for ever having not said

00:44:27,570 --> 00:44:33,510
that so so where's my Z Shrek file well

00:44:29,580 --> 00:44:36,210
it can't I I could put it here right but

00:44:33,510 --> 00:44:39,270
what if I've got stuff like OS 10 I need

00:44:36,210 --> 00:44:40,500
things to get run in my Z Shrek and at

00:44:39,270 --> 00:44:42,150
work I have special stuff

00:44:40,500 --> 00:44:44,670
so there's actually you'll notice I

00:44:42,150 --> 00:44:48,359
saved room and in that black line is

00:44:44,670 --> 00:44:50,670
loop dots and loop dots installs a bunch

00:44:48,359 --> 00:44:53,220
of files that are like generic config

00:44:50,670 --> 00:44:55,800
files that do things like this it puts a

00:44:53,220 --> 00:44:58,200
dot Z Shrek in your home der and it says

00:44:55,800 --> 00:45:01,710
I want you to go through each of these

00:44:58,200 --> 00:45:05,040
repositories in turn find its Z Shrek

00:45:01,710 --> 00:45:09,590
and source it so what happens is all of

00:45:05,040 --> 00:45:12,450
your dot Z Shrek files become in sort of

00:45:09,590 --> 00:45:14,100
concatenated together and those get run

00:45:12,450 --> 00:45:16,140
everywhere so you can build up your

00:45:14,100 --> 00:45:18,030
configuration for many parts and if they

00:45:16,140 --> 00:45:19,500
do not have something in loot dots

00:45:18,030 --> 00:45:23,400
it's called loop dots because it loops

00:45:19,500 --> 00:45:26,520
over your dots okay if if it's not loop

00:45:23,400 --> 00:45:29,790
dots then whichever repo has the file at

00:45:26,520 --> 00:45:33,990
first in the list wins in installing

00:45:29,790 --> 00:45:37,050
that file now I really really like

00:45:33,990 --> 00:45:39,840
working with engi he has a lot of really

00:45:37,050 --> 00:45:40,740
really good ideas and I was really

00:45:39,840 --> 00:45:44,880
reticent

00:45:40,740 --> 00:45:47,790
to use this in a real life because in

00:45:44,880 --> 00:45:50,040
G's ideas are awesome and then he walks

00:45:47,790 --> 00:45:52,920
away from them and I'm like dude I need

00:45:50,040 --> 00:45:54,720
help with this he's gone and he's having

00:45:52,920 --> 00:45:55,890
other awesome ideas and I want to go

00:45:54,720 --> 00:45:59,369
hear about those ideas but the other

00:45:55,890 --> 00:46:01,980
idea I'm still kind of man so I want to

00:45:59,369 --> 00:46:04,290
explicitly say this is great stuff I

00:46:01,980 --> 00:46:06,000
totally use it all the time I've sold

00:46:04,290 --> 00:46:10,530
co-workers on using it and it's great I

00:46:06,000 --> 00:46:12,869
really really like it okay so so use dot

00:46:10,530 --> 00:46:14,400
dot dot this is the name of this program

00:46:12,869 --> 00:46:17,160
I didn't even mention it it's called dot

00:46:14,400 --> 00:46:18,660
dot dot and it installs all its files in

00:46:17,160 --> 00:46:21,109
your home Durand a directory called dot

00:46:18,660 --> 00:46:21,109
dot dot

00:46:23,340 --> 00:46:31,660
sorry I didn't I was that way when I

00:46:27,250 --> 00:46:33,340
found it you can share all this stuff

00:46:31,660 --> 00:46:34,990
between your computer between all your

00:46:33,340 --> 00:46:36,100
computers but you can customize this

00:46:34,990 --> 00:46:36,940
stuff that you want to customize it

00:46:36,100 --> 00:46:39,160
works really well

00:46:36,940 --> 00:46:41,020
it's very unit C you can split private

00:46:39,160 --> 00:46:42,280
and shareable stuff and then you can

00:46:41,020 --> 00:46:43,900
share your config with everybody else so

00:46:42,280 --> 00:46:46,750
like you can look at how I run mut

00:46:43,900 --> 00:46:48,130
except for my address book and maybe you

00:46:46,750 --> 00:46:49,930
get to do more pairing which is great

00:46:48,130 --> 00:46:54,610
because pair program is fun ok next how

00:46:49,930 --> 00:46:58,060
much time do I have in general for the

00:46:54,610 --> 00:47:02,230
whole thing oh my god

00:46:58,060 --> 00:47:08,470
is somebody in here after me oh ok so

00:47:02,230 --> 00:47:12,010
next I'm gonna talk about ok so I'm

00:47:08,470 --> 00:47:13,180
right so Wallace right in this next

00:47:12,010 --> 00:47:15,070
topic I don't even remember what else

00:47:13,180 --> 00:47:21,370
comes in what order cuz I my brain is

00:47:15,070 --> 00:47:25,960
now you know moving so I don't like

00:47:21,370 --> 00:47:27,910
wasting time I waste a lot of time I

00:47:25,960 --> 00:47:32,560
feel really bad about it

00:47:27,910 --> 00:47:35,380
and I don't want to not waste time at

00:47:32,560 --> 00:47:38,380
all cuz it's you know like wasting time

00:47:35,380 --> 00:47:40,750
a little bit I want always less and I've

00:47:38,380 --> 00:47:42,790
spent a lot of time perhaps you could

00:47:40,750 --> 00:47:44,470
say I've wasted a lot of time trying to

00:47:42,790 --> 00:47:46,030
figure out how to waste less time I'm

00:47:44,470 --> 00:47:47,650
like looking at productivity stuff and I

00:47:46,030 --> 00:47:49,810
don't think of myself as like a

00:47:47,650 --> 00:47:51,670
Productivity junkie who gets on every

00:47:49,810 --> 00:47:53,560
fad because usually I look at every fad

00:47:51,670 --> 00:47:54,550
and I'm like that fads crap that's not

00:47:53,560 --> 00:47:55,780
gonna work for me

00:47:54,550 --> 00:47:57,430
and I want to tell you about what worked

00:47:55,780 --> 00:47:58,870
for me and I'm not telling you this

00:47:57,430 --> 00:48:01,300
because I think it's gonna work for you

00:47:58,870 --> 00:48:03,780
it might I don't know I have no idea who

00:48:01,300 --> 00:48:06,820
you people are or what you're like but

00:48:03,780 --> 00:48:08,950
the way that I built this is with stuff

00:48:06,820 --> 00:48:11,590
that is within the realm of possibility

00:48:08,950 --> 00:48:12,610
for everybody and these kind of

00:48:11,590 --> 00:48:14,140
solutions are things you should be

00:48:12,610 --> 00:48:16,900
thinking about so there's a thing called

00:48:14,140 --> 00:48:19,480
the daily practice where you can go and

00:48:16,900 --> 00:48:21,340
you can say I've got goals I want to get

00:48:19,480 --> 00:48:23,050
some exercise and I want to weigh myself

00:48:21,340 --> 00:48:26,080
and I want to make sure I'm reading mail

00:48:23,050 --> 00:48:27,940
on pro/5 Porter's for some reason and I

00:48:26,080 --> 00:48:29,800
want to close tasks in my bug tracker

00:48:27,940 --> 00:48:32,080
and I want to read a book and I want to

00:48:29,800 --> 00:48:33,509
you know read another kind of book and I

00:48:32,080 --> 00:48:35,880
say how often I want to do the

00:48:33,509 --> 00:48:37,559
and then I say when I've done them and

00:48:35,880 --> 00:48:39,209
so every day you can go to this and you

00:48:37,559 --> 00:48:41,039
can say okay did this one double click

00:48:39,209 --> 00:48:41,999
can I did this one double click get into

00:48:41,039 --> 00:48:46,189
this one and you know it's a really

00:48:41,999 --> 00:48:51,269
great way to waste time double clicking

00:48:46,189 --> 00:48:53,039
right like that's not useful and it's

00:48:51,269 --> 00:48:56,459
not fun and I you just feel like a

00:48:53,039 --> 00:48:57,839
schnook but it turns out I don't have to

00:48:56,459 --> 00:48:58,979
click on this stuff okay so one of the

00:48:57,839 --> 00:49:00,479
things I want to do and by the way I'm

00:48:58,979 --> 00:49:01,469
really far behind on it so you should

00:49:00,479 --> 00:49:03,209
just give me well don't give me a hard

00:49:01,469 --> 00:49:05,579
time but maybe gently remind me I should

00:49:03,209 --> 00:49:07,049
really be getting more exercise but I

00:49:05,579 --> 00:49:08,309
wanted to get more exercise and one of

00:49:07,049 --> 00:49:10,559
these things here is spin my wheels

00:49:08,309 --> 00:49:12,269
because mostly what I do is I cycle and

00:49:10,559 --> 00:49:14,399
I can track all that with RunKeeper

00:49:12,269 --> 00:49:16,529
run keepers this website and you tell it

00:49:14,399 --> 00:49:18,449
every time that you like lift weights or

00:49:16,529 --> 00:49:20,249
go running or ride your bike and it

00:49:18,449 --> 00:49:21,719
knows so I tell it that I worked out it

00:49:20,249 --> 00:49:23,399
tracks lots of useful information like

00:49:21,719 --> 00:49:25,709
for how long how many calories weird

00:49:23,399 --> 00:49:27,389
ride did you ride with anybody and

00:49:25,709 --> 00:49:29,369
that's really cool and then this can

00:49:27,389 --> 00:49:30,509
find out or step on the scale and make

00:49:29,369 --> 00:49:31,769
sure you're keeping track of your weight

00:49:30,509 --> 00:49:34,559
well my scale is connected to the

00:49:31,769 --> 00:49:36,089
Internet which is crazy and this I can

00:49:34,559 --> 00:49:38,159
let go ask the Internet did you weigh

00:49:36,089 --> 00:49:39,599
yourself today I don't I could also say

00:49:38,159 --> 00:49:42,749
are you losing weight but then I would

00:49:39,599 --> 00:49:44,009
just feel terrible but it can find out

00:49:42,749 --> 00:49:45,659
whether I'm weighing myself at all or

00:49:44,009 --> 00:49:47,549
are you reading your email well there's

00:49:45,659 --> 00:49:49,079
this thing called IMAP and it can go and

00:49:47,549 --> 00:49:51,029
look at how much new mail I have and how

00:49:49,079 --> 00:49:52,709
much old mail I haven't read and are you

00:49:51,029 --> 00:49:54,899
closing bugs and reviewing tickets well

00:49:52,709 --> 00:49:56,219
github has a pretty cool API and are you

00:49:54,899 --> 00:49:57,839
closing your tickets and your personal

00:49:56,219 --> 00:49:59,699
to-do list well that's got a API - and

00:49:57,839 --> 00:50:01,409
are you reading RSS and are you reading

00:49:59,699 --> 00:50:02,969
books and are you writing blog posts and

00:50:01,409 --> 00:50:04,769
like this there's stuff for everything

00:50:02,969 --> 00:50:06,419
everything has an API and it's awesome

00:50:04,769 --> 00:50:10,589
now the thing in it right and I don't

00:50:06,419 --> 00:50:12,539
click anything anymore mostly like if I

00:50:10,589 --> 00:50:15,269
have to make data for my productivity

00:50:12,539 --> 00:50:17,189
tracker it's got other uses right

00:50:15,269 --> 00:50:19,189
stepping on my scale tells me my weight

00:50:17,189 --> 00:50:22,439
but then there's a record that I did it

00:50:19,189 --> 00:50:23,909
recording that I went for a ride shows

00:50:22,439 --> 00:50:25,319
me where I rode how long it took and

00:50:23,909 --> 00:50:26,729
where the peaks and valleys are and

00:50:25,319 --> 00:50:28,999
helps me figure out how to how to have a

00:50:26,729 --> 00:50:30,839
better ride but it also makes a record

00:50:28,999 --> 00:50:32,880
recording the books that I'm reading on

00:50:30,839 --> 00:50:34,499
Goodreads tells my friends what I'm up

00:50:32,880 --> 00:50:36,479
to and helps me find other things that I

00:50:34,499 --> 00:50:38,999
want to read with people but it makes a

00:50:36,479 --> 00:50:40,679
record that I've read them and you are

00:50:38,999 --> 00:50:42,259
probably already making all kinds of

00:50:40,679 --> 00:50:44,069
records of this kind of stuff already

00:50:42,259 --> 00:50:45,299
right it's not like I'm telling you to

00:50:44,069 --> 00:50:46,510
start using new services I'm saying

00:50:45,299 --> 00:50:48,760
you're producing all this day

00:50:46,510 --> 00:50:50,770
and so then like every morning I can get

00:50:48,760 --> 00:50:52,570
an email that looks like this and it's

00:50:50,770 --> 00:50:54,940
like okay here's all the stuff you have

00:50:52,570 --> 00:50:57,190
to do today because you haven't done it

00:50:54,940 --> 00:50:58,869
lately and your agenda says that this is

00:50:57,190 --> 00:51:01,060
the order you have to do stuff in so I

00:50:58,869 --> 00:51:03,750
have put mutt in charge of my daily life

00:51:01,060 --> 00:51:06,820
and I could not be happier

00:51:03,750 --> 00:51:09,010
help no it works really well

00:51:06,820 --> 00:51:11,680
oh look the thing is telling you to

00:51:09,010 --> 00:51:13,060
register for a Wi-Fi you can find all

00:51:11,680 --> 00:51:14,920
the code there the codes are not the

00:51:13,060 --> 00:51:17,910
point that the point is used using api's

00:51:14,920 --> 00:51:21,849
I'm probably like just about done right

00:51:17,910 --> 00:51:27,940
sorry ten minutes I have ten more

00:51:21,849 --> 00:51:31,930
minutes oh that's a different matter

00:51:27,940 --> 00:51:33,579
entirely okay um so yeah I got okay so

00:51:31,930 --> 00:51:35,170
so this is where the code is the point

00:51:33,579 --> 00:51:37,060
is not the code the code is a know the

00:51:35,170 --> 00:51:41,500
codes terrible the codes fine but on the

00:51:37,060 --> 00:51:42,579
point is all these api's I don't know

00:51:41,500 --> 00:51:46,540
this is about I had something to say

00:51:42,579 --> 00:51:48,190
about this all these api's are really

00:51:46,540 --> 00:51:49,900
easy right so like here's me just saying

00:51:48,190 --> 00:51:51,310
how many how many things so I haven't

00:51:49,900 --> 00:51:53,369
Instapaper please make sure there's

00:51:51,310 --> 00:51:56,200
fewer today than there were yesterday

00:51:53,369 --> 00:51:57,400
and it's really easy like you get an

00:51:56,200 --> 00:51:58,839
OAuth token and then you make some

00:51:57,400 --> 00:52:04,270
requests I'm not gonna talk about these

00:51:58,839 --> 00:52:05,619
I didn't have much to say 'when or yeah

00:52:04,270 --> 00:52:08,589
right but this this is what I want to

00:52:05,619 --> 00:52:10,569
say web service API is they have like

00:52:08,589 --> 00:52:11,890
filled me with new love and excitement

00:52:10,569 --> 00:52:14,560
of programming because the first it was

00:52:11,890 --> 00:52:16,270
like I want to like pull posts down off

00:52:14,560 --> 00:52:17,920
Usenet and strip out headers and

00:52:16,270 --> 00:52:20,349
concatenate them and you decode them and

00:52:17,920 --> 00:52:21,849
now I've got new pirated games or you

00:52:20,349 --> 00:52:24,910
know what I'm whatever I was doing in

00:52:21,849 --> 00:52:26,349
1994 I can't say either way um and then

00:52:24,910 --> 00:52:27,940
it's kind of like well I go to work and

00:52:26,349 --> 00:52:29,890
I make sure the servers stay up but this

00:52:27,940 --> 00:52:30,940
is you know like I'm just taking stuff

00:52:29,890 --> 00:52:32,380
that other people wrote and it's all

00:52:30,940 --> 00:52:35,140
kind of crap and I tie it together and

00:52:32,380 --> 00:52:36,220
it's awesome so I really really want to

00:52:35,140 --> 00:52:37,720
encourage everybody to look at the

00:52:36,220 --> 00:52:39,670
services you're using other api's and

00:52:37,720 --> 00:52:41,980
the other thing to know is all the api's

00:52:39,670 --> 00:52:43,480
suck they're terrible and like they

00:52:41,980 --> 00:52:44,680
don't work right everything about them

00:52:43,480 --> 00:52:51,099
is painful until you start getting

00:52:44,680 --> 00:52:52,630
results and then you're like ah okay I'm

00:52:51,099 --> 00:52:54,960
gonna stop there I wrote some other

00:52:52,630 --> 00:52:54,960
stuff

00:52:55,930 --> 00:52:59,260
oh this rooms not being torn down well I

00:52:57,970 --> 00:53:00,790
want to talk with this RV means well

00:52:59,260 --> 00:53:04,450
first of all you guys should feel free

00:53:00,790 --> 00:53:06,130
to go cuz I'm overtime um the other

00:53:04,450 --> 00:53:07,270
thing I'll talk really quick I'm gonna

00:53:06,130 --> 00:53:11,290
flip through this because it's really

00:53:07,270 --> 00:53:14,710
related and similar um it's a company

00:53:11,290 --> 00:53:17,050
the company I work at uses something

00:53:14,710 --> 00:53:19,359
called liquid planner I didn't use a

00:53:17,050 --> 00:53:23,829
liquor planner yeah one person do you

00:53:19,359 --> 00:53:26,829
like it okay I I really like it it's a

00:53:23,829 --> 00:53:28,180
lot like Microsoft Project how it should

00:53:26,829 --> 00:53:29,589
have been right so look you build a

00:53:28,180 --> 00:53:30,700
project plan you can work through and

00:53:29,589 --> 00:53:32,619
everybody can just kind of go do their

00:53:30,700 --> 00:53:35,320
thing it's great and one of the things

00:53:32,619 --> 00:53:37,089
it has in it is timers and the timers

00:53:35,320 --> 00:53:38,829
tell you like you pick a task that

00:53:37,089 --> 00:53:40,270
you're working on and it records that

00:53:38,829 --> 00:53:41,200
time and so you say you've stopped and

00:53:40,270 --> 00:53:44,109
now it logs it and you've got a

00:53:41,200 --> 00:53:45,609
timesheet awesome but I always forget I

00:53:44,109 --> 00:53:47,290
go to work and I like work on a whole

00:53:45,609 --> 00:53:48,910
bunch of stuff and I'm done and my boss

00:53:47,290 --> 00:53:50,740
says why aren't you doing anything today

00:53:48,910 --> 00:53:53,020
and I say no I wrote all this code it's

00:53:50,740 --> 00:53:58,300
great and she says well but you you

00:53:53,020 --> 00:53:59,710
didn't log any time and I say oh so you

00:53:58,300 --> 00:54:01,119
read a program and the program like

00:53:59,710 --> 00:54:03,700
sends you an angry email unless your

00:54:01,119 --> 00:54:05,020
timer is running and this is great right

00:54:03,700 --> 00:54:08,619
well it's not great because it's sending

00:54:05,020 --> 00:54:11,619
you email like who even reads email I

00:54:08,619 --> 00:54:13,990
don't so okay so it's gonna send it to

00:54:11,619 --> 00:54:17,700
IRC except you know like what if you're

00:54:13,990 --> 00:54:21,069
not looking at IRC well it could happen

00:54:17,700 --> 00:54:22,390
well but you can't run IRC and cron or

00:54:21,069 --> 00:54:24,369
you can't have a cron job that's like

00:54:22,390 --> 00:54:26,349
well you could but seriously they yeah I

00:54:24,369 --> 00:54:29,290
don't know don't have your BOTS connect

00:54:26,349 --> 00:54:30,550
to IRC on cron it's kind of bug ever I

00:54:29,290 --> 00:54:31,599
mean unless everybody's cool with it but

00:54:30,550 --> 00:54:34,480
like if it connects in cron it's gonna

00:54:31,599 --> 00:54:36,640
be a problem so what do you do you write

00:54:34,480 --> 00:54:39,670
you write a server now I'm using the

00:54:36,640 --> 00:54:41,920
most up-to-date and and cutting-edge

00:54:39,670 --> 00:54:46,270
event based programming system for Perl

00:54:41,920 --> 00:54:47,980
it's called Poe it's but it's great

00:54:46,270 --> 00:54:49,839
right it's it's been around a long time

00:54:47,980 --> 00:54:52,060
and there's other stuff but I still like

00:54:49,839 --> 00:54:55,329
Poe and it's just an IRC BOTS and I say

00:54:52,060 --> 00:54:58,119
here's my IRC BOTS this is just a bot

00:54:55,329 --> 00:55:01,300
that's when you say its name it says

00:54:58,119 --> 00:55:02,770
hello it's a friendly bot it's super

00:55:01,300 --> 00:55:06,099
easy to write and I think everybody if

00:55:02,770 --> 00:55:08,650
you use IRC or slack who use a slack

00:55:06,099 --> 00:55:10,599
Wow that few slack is awesome and slack

00:55:08,650 --> 00:55:12,849
don't let anybody confuse you slack is

00:55:10,599 --> 00:55:14,380
IRC with a web client and they've

00:55:12,849 --> 00:55:15,670
tricked everybody into thinking it's

00:55:14,380 --> 00:55:18,670
something else but it's really really

00:55:15,670 --> 00:55:21,460
good IRC so you can have your IRC BOTS

00:55:18,670 --> 00:55:25,089
connect to slack so sometimes I'm not

00:55:21,460 --> 00:55:26,140
looking at IRC and I need to get told

00:55:25,089 --> 00:55:28,229
some other way like I've gone out to

00:55:26,140 --> 00:55:30,789
lunch so all the servers can crash and

00:55:28,229 --> 00:55:32,109
so I can have my bots sit there with

00:55:30,789 --> 00:55:33,430
this event loop and it's like is your

00:55:32,109 --> 00:55:35,079
timer running hey your timers not

00:55:33,430 --> 00:55:36,910
running hey your timers not running okay

00:55:35,079 --> 00:55:40,619
your timer is not running and you're not

00:55:36,910 --> 00:55:46,420
listening to IRC I'm going to send you a

00:55:40,619 --> 00:55:48,130
SMS so now my IRC BOTS is like okay if

00:55:46,420 --> 00:55:51,700
you're not going to listen to me here I

00:55:48,130 --> 00:55:53,680
know your number and it uses Tullio by

00:55:51,700 --> 00:55:55,450
the way Tulio is my favorite API on the

00:55:53,680 --> 00:55:57,009
Internet the favorite web service API I

00:55:55,450 --> 00:55:58,989
said this at another conference and

00:55:57,009 --> 00:56:01,420
somebody like gave me this look like I

00:55:58,989 --> 00:56:02,890
was a crazy person and I was like well

00:56:01,420 --> 00:56:05,440
what's better and they didn't have an

00:56:02,890 --> 00:56:07,299
answer I don't know anyway Twilio is for

00:56:05,440 --> 00:56:09,970
sending for sending and receiving texts

00:56:07,299 --> 00:56:11,200
and voice calls awesome so here's my

00:56:09,970 --> 00:56:13,779
code it's like hey man I'm gonna send an

00:56:11,200 --> 00:56:16,210
SMS and that's it this sends an SMS it's

00:56:13,779 --> 00:56:17,529
awesome and then I'm actually at lunch

00:56:16,210 --> 00:56:19,930
I'm like well I know my time is not

00:56:17,529 --> 00:56:22,119
running I'm eating you know a Cubano

00:56:19,930 --> 00:56:23,619
like leave me alone so what do I do I

00:56:22,119 --> 00:56:25,989
get this message and it's like hey man

00:56:23,619 --> 00:56:30,249
your timers not running and I say yeah

00:56:25,989 --> 00:56:33,670
well you know what shut up and and it

00:56:30,249 --> 00:56:37,559
says okay and then I eat my sandwich and

00:56:33,670 --> 00:56:40,660
life is good and what else is in here

00:56:37,559 --> 00:56:42,880
some blue stuff what I don't know oh

00:56:40,660 --> 00:56:44,650
that was that was a picture of my bot I

00:56:42,880 --> 00:56:46,599
think okay so the bots on line two

00:56:44,650 --> 00:56:48,849
again that's not the point in the bakken

00:56:46,599 --> 00:56:50,859
do all kinds of crazy stuff now it's I

00:56:48,849 --> 00:56:52,450
was on the flight here and I took out my

00:56:50,859 --> 00:56:53,619
phone and I said hey take me off call

00:56:52,450 --> 00:56:57,670
and it said okay you're not on call

00:56:53,619 --> 00:56:58,630
anymore and it's like yeah okay so what

00:56:57,670 --> 00:57:00,910
I wanted to say about this and this is

00:56:58,630 --> 00:57:02,589
actually the very very end if you are

00:57:00,910 --> 00:57:05,049
not doing lots of web service API

00:57:02,589 --> 00:57:07,029
programming with like your event based

00:57:05,049 --> 00:57:08,559
asynchronous stuff that's like

00:57:07,029 --> 00:57:10,900
automating your life and telling you

00:57:08,559 --> 00:57:14,640
every choice how to decide then you are

00:57:10,900 --> 00:57:14,640
living a pathetic half life

00:57:16,069 --> 00:57:23,819
okay that's it I think I have negative

00:57:19,259 --> 00:57:25,380
seven minutes for questions anybody good

00:57:23,819 --> 00:57:27,799
I'm around you can ask me to you I thank

00:57:25,380 --> 00:57:27,799

YouTube URL: https://www.youtube.com/watch?v=IG425RMEkRo


