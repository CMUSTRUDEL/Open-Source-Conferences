Title: Henry Van Styn (‎vanstyn‎) - ‎RapidApp: turn-key ajaxy web apps‎
Publication date: 2014-06-24
Playlist: YAPC::NA 2014
Description: 
	Overview and live demonstration of the RapidApp web framework (www.rapidapp.info) which provides turn-key web interfaces (Web 2.0/AJAX using ExtJS) that tie automatically into various backend data models.

The primary focus of RapidApp is on DBIx::Class databases, with full CRUD capabilities, understanding of underlying column types, foreign keys and relationships, etc., but there is also built-in support for templating, CMS, authentication and permissions, saved views, reports and so on.

RapidApp provides a high-level declarative syntax to create fully working apps in just a few lines of code but still provides full access to the Catalyst development stack for extension and customization (TIMTOWTDI).

In addition to covering the basics of the RapidApp APIs, several example demo applications will be shown, including creating a new app from scratch, **live**, during the presentation.

Additional existing applications with different use-cases will also be shown, each with full working source-code available on GitHub:

github.com/vanstyn/BlueBox
github.com/IntelliTree/RA-SmsArc
github.com/IntelliTree/RA-ChinookDemo
github.com/vanstyn/MimeCas
github.com/IntelliTree/RA-InfoSite

--------

RapidApp was shown in a lightning talk last year: http://www.yapcna.org/yn2013/talk/4863

Much progress has been made since then including public release on GitHub/CPAN and launch of the project website with some video demos: www.rapidapp.info

About Me: You can find a bio with picture, as well as a listing of some articles I've written for Linux Journal, covering topics such as Moose, Catalyst and Git, here: http://www.linuxjournal.com/users/henry-van-styn
Captions: 
	00:00:03,170 --> 00:00:08,600
I'm gonna tell you guys about rapid app

00:00:05,960 --> 00:00:10,580
which is a web framework that we've been

00:00:08,600 --> 00:00:16,400
developing in-house for the past five

00:00:10,580 --> 00:00:17,840
years is microphone good framework we've

00:00:16,400 --> 00:00:20,869
been developing for the last five years

00:00:17,840 --> 00:00:23,890
and we just started open sourcing over

00:00:20,869 --> 00:00:26,270
the past year so it's um we've used this

00:00:23,890 --> 00:00:29,720
in-house to develop a number of client

00:00:26,270 --> 00:00:32,239
applications and the last year has been

00:00:29,720 --> 00:00:38,150
focused on getting it out there open

00:00:32,239 --> 00:00:39,860
source so um I'm gonna cover the basics

00:00:38,150 --> 00:00:41,809
of rapid app overview and rationale

00:00:39,860 --> 00:00:43,970
explain how it works

00:00:41,809 --> 00:00:45,949
api's I'm gonna try to get through that

00:00:43,970 --> 00:00:47,629
relatively quickly though to get to live

00:00:45,949 --> 00:00:49,250
demos and examples which is going to be

00:00:47,629 --> 00:00:53,900
the main focus of what we're gonna do is

00:00:49,250 --> 00:00:55,309
show show it in action and then time

00:00:53,900 --> 00:00:57,979
permitting we'll do questions and

00:00:55,309 --> 00:00:59,989
feedback and then the discussion will

00:00:57,979 --> 00:01:03,170
continue on IRC there we have an IRC

00:00:59,989 --> 00:01:05,780
channel on IRC top 400 pound rap it out

00:01:03,170 --> 00:01:09,710
join that house questions and we'll

00:01:05,780 --> 00:01:13,219
continue from there so rapid app is an

00:01:09,710 --> 00:01:15,500
extension to the cattle stack it aims to

00:01:13,219 --> 00:01:17,600
speed development by giving easy access

00:01:15,500 --> 00:01:20,780
to common interface paradigms as we'll

00:01:17,600 --> 00:01:22,640
see but it still preserves the native

00:01:20,780 --> 00:01:25,250
API is and environment and this is very

00:01:22,640 --> 00:01:28,820
key to the design of rapid app from the

00:01:25,250 --> 00:01:31,070
beginning is to not block access to all

00:01:28,820 --> 00:01:34,070
the existing conventions that are

00:01:31,070 --> 00:01:35,659
already good in catalyst models views

00:01:34,070 --> 00:01:37,840
and controllers all those paradigms

00:01:35,659 --> 00:01:41,090
still work it's an aim to be a native

00:01:37,840 --> 00:01:44,450
extension as we'll see it has a very

00:01:41,090 --> 00:01:46,670
flexible Buber modular design and it has

00:01:44,450 --> 00:01:49,009
multiple declarative configuration

00:01:46,670 --> 00:01:51,289
layers on top of that which is what I'll

00:01:49,009 --> 00:01:53,990
be showing in the demo section and this

00:01:51,289 --> 00:01:56,240
um opens up a wide range of application

00:01:53,990 --> 00:02:01,399
personalities which is a very good

00:01:56,240 --> 00:02:03,590
feature so basic features it provides

00:02:01,399 --> 00:02:08,030
automatic model driven Ajax interfaces

00:02:03,590 --> 00:02:12,459
primarily based on XJS and its main sort

00:02:08,030 --> 00:02:15,159
of purpose is to map DB IC methods

00:02:12,459 --> 00:02:16,670
forward through into front-end

00:02:15,159 --> 00:02:19,220
interfaces based

00:02:16,670 --> 00:02:22,099
an extended crud model and that's the

00:02:19,220 --> 00:02:23,540
main course focus of what wrap it up was

00:02:22,099 --> 00:02:26,750
originally meant to do and this is what

00:02:23,540 --> 00:02:28,580
I'll be focusing on mostly today but

00:02:26,750 --> 00:02:31,010
it's still just one piece of a larger

00:02:28,580 --> 00:02:33,920
puzzle that includes restful URL

00:02:31,010 --> 00:02:37,130
navigation schemes built-in templating

00:02:33,920 --> 00:02:39,770
seen at CMS functionality asset

00:02:37,130 --> 00:02:44,239
management for CSS JavaScript and so on

00:02:39,770 --> 00:02:46,250
and other gooey goodness so the first

00:02:44,239 --> 00:02:48,380
question you might be asking for those

00:02:46,250 --> 00:02:50,120
cynics in the audience is why another

00:02:48,380 --> 00:02:52,370
white web framework aren't there plenty

00:02:50,120 --> 00:02:54,080
of web frameworks already that already

00:02:52,370 --> 00:02:56,360
accomplished things what new problem

00:02:54,080 --> 00:02:58,610
does wrap-it-up solve that isn't already

00:02:56,360 --> 00:03:01,819
solved and the short answer to that is

00:02:58,610 --> 00:03:04,040
interfaces when I say interfaces I don't

00:03:01,819 --> 00:03:06,049
so much mean the interfaces that you

00:03:04,040 --> 00:03:08,000
want to write interfaces from the

00:03:06,049 --> 00:03:09,830
standpoint of graphic designers who want

00:03:08,000 --> 00:03:12,470
a better drop-down box and a better or

00:03:09,830 --> 00:03:13,790
GUI this or that but the interfaces you

00:03:12,470 --> 00:03:16,670
don't want to write all the other

00:03:13,790 --> 00:03:19,630
interfaces for back-end people who are

00:03:16,670 --> 00:03:21,890
focusing on writing data models and

00:03:19,630 --> 00:03:24,350
don't want to have to worry about doing

00:03:21,890 --> 00:03:26,690
that I'm talking about the implicit

00:03:24,350 --> 00:03:28,370
interfaces all those interfaces that you

00:03:26,690 --> 00:03:30,730
would like to have but do without

00:03:28,370 --> 00:03:33,739
because they're not worth the time to

00:03:30,730 --> 00:03:36,769
spend writing those are the kind of

00:03:33,739 --> 00:03:41,120
interfaces the interfaces which are

00:03:36,769 --> 00:03:43,760
implied by the schema and I'll show you

00:03:41,120 --> 00:03:47,690
what I mean by implied by the schema in

00:03:43,760 --> 00:03:49,579
a moment but this is too difficult right

00:03:47,690 --> 00:03:51,799
now with other tools everything there's

00:03:49,579 --> 00:03:54,049
lots and lots of focus on the back end

00:03:51,799 --> 00:03:55,250
and catalyst is great and dancer is

00:03:54,049 --> 00:03:58,010
great and all these things are great in

00:03:55,250 --> 00:04:00,260
Perl but then you still have to have

00:03:58,010 --> 00:04:04,850
interfaces and do JavaScript in the HTML

00:04:00,260 --> 00:04:07,730
and CSS and all you should have to do

00:04:04,850 --> 00:04:11,239
though to get to these the interfaces

00:04:07,730 --> 00:04:12,230
that are implicit is ask for them it

00:04:11,239 --> 00:04:16,459
should be as simple and straightforward

00:04:12,230 --> 00:04:19,130
as so here's an example of what I mean

00:04:16,459 --> 00:04:21,139
let's say you want give me an interface

00:04:19,130 --> 00:04:23,300
to add rows to foo and let's say that

00:04:21,139 --> 00:04:27,600
foo represents some kind of model object

00:04:23,300 --> 00:04:29,850
like a DB IC source

00:04:27,600 --> 00:04:31,440
stating that nothing else other than

00:04:29,850 --> 00:04:33,600
that should be enough to get immediately

00:04:31,440 --> 00:04:35,580
to a threshold where you oughta have

00:04:33,600 --> 00:04:39,420
want to automatically have a fully

00:04:35,580 --> 00:04:41,100
working form interface to add rows with

00:04:39,420 --> 00:04:44,040
fields for each of Fu's columns

00:04:41,100 --> 00:04:45,810
according to each columns type date/time

00:04:44,040 --> 00:04:48,840
should be a date selector a varchar'

00:04:45,810 --> 00:04:50,220
should be a text box and so on is the

00:04:48,840 --> 00:04:53,640
column nan nullable this should be a

00:04:50,220 --> 00:04:56,720
required field is it a foreign key it

00:04:53,640 --> 00:04:59,550
should automatically provide a selection

00:04:56,720 --> 00:05:00,660
paradigm to select rows from remote

00:04:59,550 --> 00:05:02,430
sources you shouldn't have to worry

00:05:00,660 --> 00:05:05,850
about implementation details to get to

00:05:02,430 --> 00:05:06,480
that capability and so on and don't be

00:05:05,850 --> 00:05:09,540
stupid

00:05:06,480 --> 00:05:11,610
yes handle client-side validation the

00:05:09,540 --> 00:05:13,830
database isn't going to let you insert a

00:05:11,610 --> 00:05:15,210
string into an integer column the

00:05:13,830 --> 00:05:18,780
front-end interface shouldn't let you do

00:05:15,210 --> 00:05:19,890
that either yes roll content in a manner

00:05:18,780 --> 00:05:22,530
that's not moronic

00:05:19,890 --> 00:05:24,510
yes display exceptions to the client if

00:05:22,530 --> 00:05:27,960
they happen don't silently truncate them

00:05:24,510 --> 00:05:30,690
and drop them off and so on and no don't

00:05:27,960 --> 00:05:34,080
truncate column names no do not drown

00:05:30,690 --> 00:05:35,610
the children in the tub or any other any

00:05:34,080 --> 00:05:39,600
other horrible thing that I haven't

00:05:35,610 --> 00:05:42,090
thought of but obviously don't want the

00:05:39,600 --> 00:05:45,240
on-demand automatically change with the

00:05:42,090 --> 00:05:47,100
schema if I drop the column that field

00:05:45,240 --> 00:05:49,710
should cease to exist in the in the view

00:05:47,100 --> 00:05:52,770
I shouldn't have to go in and double

00:05:49,710 --> 00:05:54,090
work Colin changed inaudible now the

00:05:52,770 --> 00:05:58,020
field is no longer required

00:05:54,090 --> 00:06:00,480
and obviously handle all the plumbing to

00:05:58,020 --> 00:06:02,400
cleanly tie into the back-end for all of

00:06:00,480 --> 00:06:08,510
the callbacks that need to make all this

00:06:02,400 --> 00:06:08,510
stuff work just work one more thing

00:06:09,770 --> 00:06:15,400
do predict and provide high-level

00:06:12,259 --> 00:06:17,720
choices and options for instance

00:06:15,400 --> 00:06:20,750
mentioned a single selection dialogue

00:06:17,720 --> 00:06:22,759
for a foreign key give me a choice where

00:06:20,750 --> 00:06:25,729
I can make that be a drop-down for

00:06:22,759 --> 00:06:27,259
instance which works for a limited

00:06:25,729 --> 00:06:29,690
number of rows but obviously won't work

00:06:27,259 --> 00:06:31,699
for all cases provide other or

00:06:29,690 --> 00:06:36,169
high-level options to do a single

00:06:31,699 --> 00:06:38,780
selection for a larger set and beyond

00:06:36,169 --> 00:06:40,550
that do allow me to customize and extend

00:06:38,780 --> 00:06:43,400
and build upon the space it's not that

00:06:40,550 --> 00:06:44,509
helpful if this turnkey platform happens

00:06:43,400 --> 00:06:46,940
but then when you want to customize

00:06:44,509 --> 00:06:51,770
something well you can't customize it

00:06:46,940 --> 00:06:53,750
that accomplishes nothing at all so it

00:06:51,770 --> 00:06:57,979
has to be extensible so extendibility

00:06:53,750 --> 00:07:02,509
was a core design goal from the

00:06:57,979 --> 00:07:04,610
beginning but don't limit me just as

00:07:02,509 --> 00:07:08,500
important as what a framework provides

00:07:04,610 --> 00:07:11,270
is what it takes away and this is where

00:07:08,500 --> 00:07:14,060
so many other frameworks that I've been

00:07:11,270 --> 00:07:15,800
frustrated with go along is that once

00:07:14,060 --> 00:07:17,810
you decide to take the dive into some

00:07:15,800 --> 00:07:20,389
other framework now you have to trust it

00:07:17,810 --> 00:07:22,219
to give you all of the paradigms that

00:07:20,389 --> 00:07:23,750
you want to get to has to now be

00:07:22,219 --> 00:07:25,460
re-implemented it's one of the things

00:07:23,750 --> 00:07:28,940
that's so great about catalyst and pearl

00:07:25,460 --> 00:07:30,800
and Tim toady with pearl is you still

00:07:28,940 --> 00:07:33,409
write pearl you still have access to all

00:07:30,800 --> 00:07:35,840
of Sipan you don't have to reinvent

00:07:33,409 --> 00:07:37,969
things that aren't broken that's the one

00:07:35,840 --> 00:07:40,729
of the really powerful parts of pearl of

00:07:37,969 --> 00:07:43,550
catalyst of the methodology and that's a

00:07:40,729 --> 00:07:46,250
core tenant of what wrap-it-up does as

00:07:43,550 --> 00:07:49,969
well you must not hinder me in any way

00:07:46,250 --> 00:07:53,870
from doing things differently and at all

00:07:49,969 --> 00:07:56,270
levels so if the high level choices and

00:07:53,870 --> 00:07:58,099
options aren't sufficient and the

00:07:56,270 --> 00:08:00,800
extensibility isn't sufficient or

00:07:58,099 --> 00:08:03,560
frankly you don't want to learn the DSL

00:08:00,800 --> 00:08:05,659
to do that extendibility you should be

00:08:03,560 --> 00:08:08,539
able to still write standard catalyst

00:08:05,659 --> 00:08:09,469
standard pearl and do things and have it

00:08:08,539 --> 00:08:11,419
not get in your way

00:08:09,469 --> 00:08:14,000
when you want to do other things and

00:08:11,419 --> 00:08:18,289
that's a core so really all I'm saying

00:08:14,000 --> 00:08:20,110
is I want everything for free with no

00:08:18,289 --> 00:08:25,250
trade-offs

00:08:20,110 --> 00:08:27,830
is that really so much to ask we already

00:08:25,250 --> 00:08:30,470
take powerful declarative api's for

00:08:27,830 --> 00:08:32,240
granted on our purl side code and this

00:08:30,470 --> 00:08:36,649
is how I learned that I wanted these

00:08:32,240 --> 00:08:41,080
sort of api's Perl spoiled me to realize

00:08:36,649 --> 00:08:45,170
how good api's can and should behave and

00:08:41,080 --> 00:08:46,970
being frustrated with switching to the

00:08:45,170 --> 00:08:50,899
front end and not um not having that

00:08:46,970 --> 00:08:53,089
same environment it's um it's great to

00:08:50,899 --> 00:08:55,160
program when you have lots of high level

00:08:53,089 --> 00:08:58,370
powerful tools at your disposal and the

00:08:55,160 --> 00:09:00,110
ecosystem of of catalyst it makes me

00:08:58,370 --> 00:09:01,520
feel great as a developer developing is

00:09:00,110 --> 00:09:08,839
fun in that environment it makes

00:09:01,520 --> 00:09:12,170
programming feel like well and this is

00:09:08,839 --> 00:09:15,890
how I normally feel when developing Perl

00:09:12,170 --> 00:09:23,060
until it's time to write the front side

00:09:15,890 --> 00:09:26,630
code that's right programming outside of

00:09:23,060 --> 00:09:28,760
Perl the world is still awful and it's

00:09:26,630 --> 00:09:30,680
like going from casting bolts of

00:09:28,760 --> 00:09:32,959
lightning from your fingertips like a

00:09:30,680 --> 00:09:38,750
Jedi Master to scrubbing the floor with

00:09:32,959 --> 00:09:41,089
a toothbrush but let's be fair there's

00:09:38,750 --> 00:09:44,630
proficiency bias I like Perl so I'm more

00:09:41,089 --> 00:09:46,579
proficient at Perl CSS is is great

00:09:44,630 --> 00:09:54,380
usually what my problems usually weren't

00:09:46,579 --> 00:09:56,690
the fault of of CSS and CSS is a CSS is

00:09:54,380 --> 00:09:58,520
a great you know it's a very robust

00:09:56,690 --> 00:10:01,160
thing but that's not the point I don't

00:09:58,520 --> 00:10:01,940
want to know CSS I don't want to know

00:10:01,160 --> 00:10:03,950
HTML

00:10:01,940 --> 00:10:06,980
I want to write models and business

00:10:03,950 --> 00:10:08,990
logic but I still feel entitled to have

00:10:06,980 --> 00:10:11,690
great web front-end web interfaces and

00:10:08,990 --> 00:10:14,089
that is that is the general theme of

00:10:11,690 --> 00:10:17,420
what rapid app is all about and aims to

00:10:14,089 --> 00:10:19,720
do so let's look briefly at the

00:10:17,420 --> 00:10:23,000
application architecture for rapid app

00:10:19,720 --> 00:10:25,040
so again it's an extension to catalysts

00:10:23,000 --> 00:10:26,949
so you have your same models views and

00:10:25,040 --> 00:10:29,839
controllers in the same world as

00:10:26,949 --> 00:10:31,790
catalyst and it doesn't reinvent things

00:10:29,839 --> 00:10:33,160
that don't need reinvented you it

00:10:31,790 --> 00:10:37,240
extends the same

00:10:33,160 --> 00:10:40,329
system wherever possible for for

00:10:37,240 --> 00:10:43,690
instance uses model schema DB IC for

00:10:40,329 --> 00:10:45,399
connecting to the DB IC backend it uses

00:10:43,690 --> 00:10:47,949
all of the same stuff that you can use

00:10:45,399 --> 00:10:50,709
in catalyst you have as well in your

00:10:47,949 --> 00:10:54,100
extended rapid app environment but then

00:10:50,709 --> 00:10:58,060
rapid app also adds a fourth kind called

00:10:54,100 --> 00:10:59,560
a module to the mix and these you can

00:10:58,060 --> 00:11:02,370
sort of think of these as like a Fat

00:10:59,560 --> 00:11:06,639
Controller and they are what encapsulate

00:11:02,370 --> 00:11:11,500
the plumbing necessary to do these these

00:11:06,639 --> 00:11:14,110
advanced interface widgets which include

00:11:11,500 --> 00:11:15,939
the both rendering views for the

00:11:14,110 --> 00:11:18,009
front-end as well as all the Ajax

00:11:15,939 --> 00:11:20,100
callbacks and everything all the stuff

00:11:18,009 --> 00:11:21,910
that wrap-it-up does is is Ajax

00:11:20,100 --> 00:11:24,759
structurally there is an important

00:11:21,910 --> 00:11:27,790
difference to mention is that while

00:11:24,759 --> 00:11:29,319
components live component classes live

00:11:27,790 --> 00:11:32,079
adjacent to each other within the

00:11:29,319 --> 00:11:34,180
application and that's is not about URL

00:11:32,079 --> 00:11:37,209
dispatch but just where the classes live

00:11:34,180 --> 00:11:39,060
you have multiple models views and

00:11:37,209 --> 00:11:42,069
controllers that all live side-by-side

00:11:39,060 --> 00:11:44,019
modules in rapid app live in a hierarchy

00:11:42,069 --> 00:11:46,389
structure relative to one another

00:11:44,019 --> 00:11:49,689
to do this encapsulation so there is

00:11:46,389 --> 00:11:52,000
only there's one root module and that

00:11:49,689 --> 00:11:54,040
root module is a controller and in fact

00:11:52,000 --> 00:11:56,019
it is that is what this whole structure

00:11:54,040 --> 00:11:57,790
looks like to the catalyst application

00:11:56,019 --> 00:12:00,819
is just another controller and it

00:11:57,790 --> 00:12:06,220
encapsulates this whole complex logic

00:12:00,819 --> 00:12:07,990
and the way that a an app a catalyst

00:12:06,220 --> 00:12:09,579
application becomes a rapid appala

00:12:07,990 --> 00:12:14,350
application is through the standard

00:12:09,579 --> 00:12:18,699
plug-in API as we'll see you simply load

00:12:14,350 --> 00:12:20,980
the rapid app plug-in and now you have

00:12:18,699 --> 00:12:24,100
this extended environment where you can

00:12:20,980 --> 00:12:26,829
write still models views and controllers

00:12:24,100 --> 00:12:30,879
but also modules that do all these

00:12:26,829 --> 00:12:34,990
powerful things but you also don't want

00:12:30,879 --> 00:12:37,180
to have to learn another DSL that's

00:12:34,990 --> 00:12:38,889
another thing that is a problem with

00:12:37,180 --> 00:12:41,259
other frameworks is like wow this sounds

00:12:38,889 --> 00:12:43,209
really cool and good but then you have

00:12:41,259 --> 00:12:46,660
to have this big upfront cost of

00:12:43,209 --> 00:12:48,040
learning how to do the stuff that

00:12:46,660 --> 00:12:51,069
does just to find out that it doesn't

00:12:48,040 --> 00:12:53,680
meet your needs so there's good news for

00:12:51,069 --> 00:12:56,589
you for those who don't want to just

00:12:53,680 --> 00:12:59,379
start with this investment is that in

00:12:56,589 --> 00:13:03,759
addition to this core base framework on

00:12:59,379 --> 00:13:06,750
top of this the the plug-in layer

00:13:03,759 --> 00:13:09,730
provides a declarative configuration

00:13:06,750 --> 00:13:13,990
layer that will actually inject and

00:13:09,730 --> 00:13:17,139
configure modules as well as components

00:13:13,990 --> 00:13:21,540
component classes as well for you and

00:13:17,139 --> 00:13:26,139
the way this is accessed is through a

00:13:21,540 --> 00:13:28,860
layers of plugins and these layers of

00:13:26,139 --> 00:13:31,800
plugins that you can load provide

00:13:28,860 --> 00:13:34,329
high-level access to different scenarios

00:13:31,800 --> 00:13:39,579
and they can both automatically inject

00:13:34,329 --> 00:13:41,769
and configure modules and components but

00:13:39,579 --> 00:13:44,439
also inject and configure each other and

00:13:41,769 --> 00:13:49,120
so then there's multiple layers that we

00:13:44,439 --> 00:13:51,910
provide that go higher and higher to

00:13:49,120 --> 00:13:54,810
jump to scenarios and the higher and

00:13:51,910 --> 00:13:57,519
higher you go the more declarative

00:13:54,810 --> 00:14:00,759
access you have and then the more

00:13:57,519 --> 00:14:02,740
specialized and we're going to show some

00:14:00,759 --> 00:14:03,819
of these plugins is what this is really

00:14:02,740 --> 00:14:05,290
all we have time for we're gonna

00:14:03,819 --> 00:14:09,579
actually develop some applications right

00:14:05,290 --> 00:14:11,170
here to see how this works so you sort

00:14:09,579 --> 00:14:14,319
of have the best of both worlds with

00:14:11,170 --> 00:14:17,920
this design is on the one hand you can

00:14:14,319 --> 00:14:19,329
still have a full robust DSL to

00:14:17,920 --> 00:14:23,139
customize whatever you want with this

00:14:19,329 --> 00:14:25,410
extended API stack or from the other end

00:14:23,139 --> 00:14:27,699
you can get access to these high-level

00:14:25,410 --> 00:14:31,660
declarative scenarios and jump straight

00:14:27,699 --> 00:14:34,779
into common scenarios to customize

00:14:31,660 --> 00:14:38,050
things and it's very important to to

00:14:34,779 --> 00:14:40,569
note that the design is very much from

00:14:38,050 --> 00:14:43,230
the bottom up not the top down and this

00:14:40,569 --> 00:14:47,439
is another place where other frameworks

00:14:43,230 --> 00:14:49,329
have gone awry for me is they start with

00:14:47,439 --> 00:14:52,449
this high-level paradigm like a database

00:14:49,329 --> 00:14:53,980
editing tool or a blog intranet and that

00:14:52,449 --> 00:14:55,839
is the that's what they originally

00:14:53,980 --> 00:14:58,089
design and write and then they want to

00:14:55,839 --> 00:14:59,470
extend other plugins and features so now

00:14:58,089 --> 00:14:59,830
they're reaching around and breaking in

00:14:59,470 --> 00:15:04,260
caps

00:14:59,830 --> 00:15:08,980
halation and shoehorning things in and

00:15:04,260 --> 00:15:12,040
this causes spaghetti code and the usual

00:15:08,980 --> 00:15:14,850
problems that result from that so with

00:15:12,040 --> 00:15:17,440
with rapid app these these layers are

00:15:14,850 --> 00:15:19,920
configuration layers not encapsulation

00:15:17,440 --> 00:15:22,060
layers they're simply assemble the

00:15:19,920 --> 00:15:24,040
components that are already provided by

00:15:22,060 --> 00:15:27,400
the lower levels which you could do

00:15:24,040 --> 00:15:30,640
yourself as well so you don't have to

00:15:27,400 --> 00:15:33,700
know not only do you not have to know

00:15:30,640 --> 00:15:35,680
the DSL four modules you don't even have

00:15:33,700 --> 00:15:38,320
to know how catalyst works for that

00:15:35,680 --> 00:15:42,490
matter you can start straight at these

00:15:38,320 --> 00:15:44,140
high level scenarios but because they're

00:15:42,490 --> 00:15:47,740
just configuration layers they're not

00:15:44,140 --> 00:15:49,510
changing behavior you doesn't block you

00:15:47,740 --> 00:15:52,300
in any way from still writing

00:15:49,510 --> 00:15:55,120
controllers in combination with this or

00:15:52,300 --> 00:15:58,270
writing modules and accomplishing best

00:15:55,120 --> 00:16:02,350
of both worlds all right so let's look

00:15:58,270 --> 00:16:06,310
at some actual code so I'm going to do a

00:16:02,350 --> 00:16:07,840
demo application in the first plugin

00:16:06,310 --> 00:16:11,550
that I'm going to show is the rapid DB

00:16:07,840 --> 00:16:14,380
IC plug-in which provides high level

00:16:11,550 --> 00:16:16,810
data base style stuff which that's the

00:16:14,380 --> 00:16:18,130
main focus of wrap it up but again it's

00:16:16,810 --> 00:16:20,170
not the only thing as we'll see but

00:16:18,130 --> 00:16:24,460
we're going to start with that and I'm

00:16:20,170 --> 00:16:26,500
for a demo I'm going to use my DNS the

00:16:24,460 --> 00:16:30,430
my DNS database how many people know

00:16:26,500 --> 00:16:32,920
what my DNS is a few of you so my DNS is

00:16:30,430 --> 00:16:34,390
a is has nothing to do with this is just

00:16:32,920 --> 00:16:35,530
for example purposes there's nothing to

00:16:34,390 --> 00:16:37,240
do with wrap it up it's a totally

00:16:35,530 --> 00:16:38,980
separate project it's simply a

00:16:37,240 --> 00:16:40,780
lightweight authoritative DNS server

00:16:38,980 --> 00:16:42,700
it's just a little C game and that's

00:16:40,780 --> 00:16:45,880
designed to serve records directly from

00:16:42,700 --> 00:16:47,170
my sequel it has a very simple schema

00:16:45,880 --> 00:16:50,020
which is a good place to start there's

00:16:47,170 --> 00:16:52,180
only two tables and also there should be

00:16:50,020 --> 00:16:54,040
generally recognizable data for people

00:16:52,180 --> 00:16:55,330
in here that are familiar with DNS which

00:16:54,040 --> 00:16:58,360
I think most people will be but if

00:16:55,330 --> 00:17:01,060
you're not it doesn't matter so our task

00:16:58,360 --> 00:17:04,270
is we're going to create a web-based

00:17:01,060 --> 00:17:06,459
admin app to manage my DNS so let's

00:17:04,270 --> 00:17:09,130
start by looking at the my DNS schema

00:17:06,459 --> 00:17:10,540
like I said it's very simple there's two

00:17:09,130 --> 00:17:12,130
tables here's the create table

00:17:10,540 --> 00:17:15,150
statements here's what that looks like

00:17:12,130 --> 00:17:20,340
as an entity diagram

00:17:15,150 --> 00:17:22,660
and very simple common column types

00:17:20,340 --> 00:17:25,180
there's one thing to note is they use an

00:17:22,660 --> 00:17:28,360
enum column for the different types of

00:17:25,180 --> 00:17:30,070
records and notice that for later when

00:17:28,360 --> 00:17:34,330
we look at the automatic interfaces that

00:17:30,070 --> 00:17:36,760
are generated and one foreign key where

00:17:34,330 --> 00:17:39,820
the our our table which holds individual

00:17:36,760 --> 00:17:42,280
records belongs to the SOA or start of

00:17:39,820 --> 00:17:44,110
authority table which is all the all the

00:17:42,280 --> 00:17:49,030
zones that this this server is

00:17:44,110 --> 00:17:51,130
authoritative for and we have we run we

00:17:49,030 --> 00:17:52,930
run this we run my DNS we switched from

00:17:51,130 --> 00:17:55,480
bind like 10 years ago and it just works

00:17:52,930 --> 00:17:59,800
it's handy so I have them we're gonna

00:17:55,480 --> 00:18:01,150
bootstrap an application now and there's

00:17:59,800 --> 00:18:03,010
nothing up my sleeves the only thing

00:18:01,150 --> 00:18:08,950
that I've prepared in advance for this

00:18:03,010 --> 00:18:11,980
is I have a running copy of the my DNS

00:18:08,950 --> 00:18:15,250
MySQL database on my local system but

00:18:11,980 --> 00:18:19,930
other than that nothing else has been

00:18:15,250 --> 00:18:25,360
prepared in advance is this big enough

00:18:19,930 --> 00:18:28,450
let's see can everybody in the back see

00:18:25,360 --> 00:18:29,080
this sounds a little good that's a

00:18:28,450 --> 00:18:31,900
little big

00:18:29,080 --> 00:18:35,440
ok so um how many people have worked

00:18:31,900 --> 00:18:36,850
with catalyst and how many people are

00:18:35,440 --> 00:18:40,000
familiar with the catalyst helper

00:18:36,850 --> 00:18:41,770
scripts right so most of you good great

00:18:40,000 --> 00:18:44,200
for those who aren't familiar where the

00:18:41,770 --> 00:18:46,330
catalyst provides helper scripts which

00:18:44,200 --> 00:18:48,310
enable bootstrapping in application very

00:18:46,330 --> 00:18:52,180
very quickly which basically just

00:18:48,310 --> 00:18:54,010
creates a skeleton of files for your

00:18:52,180 --> 00:18:57,820
application the model views and

00:18:54,010 --> 00:18:59,020
controller containers the basic class so

00:18:57,820 --> 00:19:02,770
you can jump straight to that and again

00:18:59,020 --> 00:19:05,110
since rapid app is catalyst you can use

00:19:02,770 --> 00:19:08,470
the same thing to do that but rapid app

00:19:05,110 --> 00:19:10,270
also has its own version of that so the

00:19:08,470 --> 00:19:12,670
catalyst version that ships with kettles

00:19:10,270 --> 00:19:14,080
kettles provides you a catalyst PL

00:19:12,670 --> 00:19:18,910
script and when you run that with no

00:19:14,080 --> 00:19:20,830
options it displays the usage and rapid

00:19:18,910 --> 00:19:22,540
app ships with a well first of all by

00:19:20,830 --> 00:19:24,790
the way you need to install rapid app

00:19:22,540 --> 00:19:25,890
which is just a Sipan module so all you

00:19:24,790 --> 00:19:29,400
have to do is

00:19:25,890 --> 00:19:30,540
wrap it up and there is a lot of

00:19:29,400 --> 00:19:32,610
dependence catalyst has a lot of

00:19:30,540 --> 00:19:34,260
dependencies rapid ever has more

00:19:32,610 --> 00:19:36,299
dependencies on that so I will warn you

00:19:34,260 --> 00:19:39,240
this is if it's a fresh install this can

00:19:36,299 --> 00:19:42,059
take a while and that's we're working on

00:19:39,240 --> 00:19:43,620
reducing the number of dependencies but

00:19:42,059 --> 00:19:46,380
once you have wrap it up installed you

00:19:43,620 --> 00:19:50,040
also now have access to the rapid app PL

00:19:46,380 --> 00:19:53,750
script which is an extension to cattle

00:19:50,040 --> 00:19:56,610
stop PL and it has the same options as

00:19:53,750 --> 00:19:59,990
cattle stop PL but it also adds this

00:19:56,610 --> 00:20:05,130
additional helpers option which are

00:19:59,990 --> 00:20:06,809
traits which adapt the behavior of the

00:20:05,130 --> 00:20:09,020
bootstrap application bootstrapped

00:20:06,809 --> 00:20:11,220
application to jump straight into

00:20:09,020 --> 00:20:13,260
pre-existing scenarios and this is a

00:20:11,220 --> 00:20:15,179
very very light wrapper it's just a

00:20:13,260 --> 00:20:17,309
configuration wrap or you can think of

00:20:15,179 --> 00:20:19,650
it as yet another layer another

00:20:17,309 --> 00:20:23,220
declarative layer up on top of the

00:20:19,650 --> 00:20:24,960
plugins so there's several several

00:20:23,220 --> 00:20:33,120
plugins that are available we're going

00:20:24,960 --> 00:20:35,010
to start with the rapid DB IC plugin and

00:20:33,120 --> 00:20:36,990
so you specify am i could specify

00:20:35,010 --> 00:20:39,570
additional plugins comma separated here

00:20:36,990 --> 00:20:41,040
but I'm just going to specify the one

00:20:39,570 --> 00:20:43,850
for now and we'll look at some of the

00:20:41,040 --> 00:20:47,520
other ones later may go a little smaller

00:20:43,850 --> 00:20:50,669
and then for the effort helpers that

00:20:47,520 --> 00:20:52,500
that that support command-line options

00:20:50,669 --> 00:20:58,290
you specify the double tap which is the

00:20:52,500 --> 00:21:00,390
standard convention from load load

00:20:58,290 --> 00:21:02,040
config the commit this negative

00:21:00,390 --> 00:21:07,320
command-line tool that is available for

00:21:02,040 --> 00:21:10,260
perl and we have the DSN option and is

00:21:07,320 --> 00:21:15,419
what this does is you specify a standard

00:21:10,260 --> 00:21:19,350
DB IDs n string which DB I : driver name

00:21:15,419 --> 00:21:24,260
this case MySQL : database name which is

00:21:19,350 --> 00:21:27,720
my DNS and then database user comma

00:21:24,260 --> 00:21:29,780
password and this is I just have the

00:21:27,720 --> 00:21:33,900
standard out of the box

00:21:29,780 --> 00:21:35,550
MySQL install which allows the root user

00:21:33,900 --> 00:21:38,840
with an empty password to connect on

00:21:35,550 --> 00:21:38,840
localhost which is what we're doing

00:21:39,480 --> 00:21:46,960
I'm sorry well that's that's an example

00:21:44,830 --> 00:21:50,350
so these are some examples of of

00:21:46,960 --> 00:21:53,019
different DSN strings this is one way to

00:21:50,350 --> 00:21:54,850
specify that but you can also specify it

00:21:53,019 --> 00:21:58,120
this way and this is just from this is

00:21:54,850 --> 00:22:01,389
by the way nothing to do with the rapid

00:21:58,120 --> 00:22:02,500
up API this is the DVI API which Tim

00:22:01,389 --> 00:22:04,929
bunts that guy right there is

00:22:02,500 --> 00:22:07,179
responsible for the design so you can

00:22:04,929 --> 00:22:11,820
ask him about DSN strings but this is

00:22:07,179 --> 00:22:13,059
exactly this is exactly the same as a

00:22:11,820 --> 00:22:15,519
catalyst

00:22:13,059 --> 00:22:17,799
what catalyst does with its helper

00:22:15,519 --> 00:22:19,750
script where there's would be two steps

00:22:17,799 --> 00:22:21,879
where you would bootstrap an application

00:22:19,750 --> 00:22:25,330
and then you would create a model and

00:22:21,879 --> 00:22:27,070
then it uses this that uses the schema

00:22:25,330 --> 00:22:28,960
loader which you already for those who

00:22:27,070 --> 00:22:32,529
are here for fruisé talk in the last

00:22:28,960 --> 00:22:34,659
hour uses the schema loader to connect

00:22:32,529 --> 00:22:39,600
to the database read in the schema and

00:22:34,659 --> 00:22:41,830
then generate DB ic schema classes and a

00:22:39,600 --> 00:22:44,289
catalyst model and this just wraps all

00:22:41,830 --> 00:22:49,259
that into one single command so let's

00:22:44,289 --> 00:22:49,259
run that and of course

00:23:00,700 --> 00:23:09,159
oh thank you you know I keep on geez um

00:23:07,330 --> 00:23:12,070
this is my own API that I wrote here

00:23:09,159 --> 00:23:14,289
right so we need to pick the name for so

00:23:12,070 --> 00:23:17,169
we need to tell just like cattle stop pl

00:23:14,289 --> 00:23:23,499
we have to pick a name and let's call it

00:23:17,169 --> 00:23:27,850
RA : : my dns thank you all right so

00:23:23,499 --> 00:23:29,619
this will run create the files and we

00:23:27,850 --> 00:23:33,190
can take we'll take a look at the files

00:23:29,619 --> 00:23:34,869
that it created in a second but let's

00:23:33,190 --> 00:23:38,529
just before we do that let's actually

00:23:34,869 --> 00:23:44,830
fire up without doing anything exactly

00:23:38,529 --> 00:23:51,509
what was just created and again the

00:23:44,830 --> 00:23:51,509
catalyst the catalyst PL creates the

00:23:52,889 --> 00:23:58,659
creates the scripts like the test server

00:23:55,720 --> 00:23:59,830
which is automatically there so this is

00:23:58,659 --> 00:24:02,769
just the test server which will go ahead

00:23:59,830 --> 00:24:06,279
and fire up and it will do a bunch of

00:24:02,769 --> 00:24:07,840
stuff and configure a bunch of stuff and

00:24:06,279 --> 00:24:12,720
start up in this accepting connections

00:24:07,840 --> 00:24:17,440
and lo coast all right so let's connect

00:24:12,720 --> 00:24:19,509
co-host alright so here already here's

00:24:17,440 --> 00:24:22,090
our running application and what rapid

00:24:19,509 --> 00:24:24,549
DB IC remember if I mentioned that these

00:24:22,090 --> 00:24:29,049
plugins configure other plugins in a

00:24:24,549 --> 00:24:31,720
hierarchy and rapid DB IC uses a plug-in

00:24:29,049 --> 00:24:33,609
called tab GUI which is a standard

00:24:31,720 --> 00:24:36,159
paradigm where you have a navigation

00:24:33,609 --> 00:24:40,119
tree on the left hand side and content

00:24:36,159 --> 00:24:43,600
area on on the right side and it

00:24:40,119 --> 00:24:46,840
automatically gives us the name of

00:24:43,600 --> 00:24:48,700
whatever mom model DB I see schemas are

00:24:46,840 --> 00:24:51,609
set up in this case it automatically

00:24:48,700 --> 00:24:54,159
created one named DB but you could have

00:24:51,609 --> 00:24:56,139
multiple model names but this is the

00:24:54,159 --> 00:24:58,749
model name and then an entry for each

00:24:56,139 --> 00:25:04,840
source in the database in this case we

00:24:58,749 --> 00:25:08,710
have our AR and SOA and also if you'll

00:25:04,840 --> 00:25:12,549
notice here this is the URLs our restful

00:25:08,710 --> 00:25:13,400
and back button works and it understands

00:25:12,549 --> 00:25:17,270
the

00:25:13,400 --> 00:25:19,880
where we're at with the tabs which are

00:25:17,270 --> 00:25:23,180
tied to URL navigation and these

00:25:19,880 --> 00:25:26,030
actually do an ajax call to load the

00:25:23,180 --> 00:25:27,740
content here in this in this tab panel

00:25:26,030 --> 00:25:30,380
section so this sort of default

00:25:27,740 --> 00:25:38,240
out-of-the-box application is very much

00:25:30,380 --> 00:25:40,820
like an admin utility let me you know

00:25:38,240 --> 00:25:42,440
what yeah I can do that and also and by

00:25:40,820 --> 00:25:43,880
the way from this point forward I'm

00:25:42,440 --> 00:25:47,000
going to I have a lot of different demos

00:25:43,880 --> 00:25:48,680
to go over and I'm just gonna go is with

00:25:47,000 --> 00:25:51,760
for as much time as I having people can

00:25:48,680 --> 00:25:55,760
from this point forward feel free to

00:25:51,760 --> 00:26:00,500
just yell if you have a question all

00:25:55,760 --> 00:26:05,530
right so we'll go to it's this looks

00:26:00,500 --> 00:26:05,530
better yeah how's that

00:26:05,870 --> 00:26:11,900
so there's um so we just here's a good

00:26:09,950 --> 00:26:14,930
example to show some of the capability

00:26:11,900 --> 00:26:16,310
so we just changed the the resolution we

00:26:14,930 --> 00:26:17,870
let's change the items per page to

00:26:16,310 --> 00:26:19,700
something that we can fit on the screen

00:26:17,870 --> 00:26:24,650
which is just an interface let's see how

00:26:19,700 --> 00:26:26,510
20 looks quite let's do 15 right so

00:26:24,650 --> 00:26:30,590
there we go so we have standard

00:26:26,510 --> 00:26:32,720
pagination sort ability it's all

00:26:30,590 --> 00:26:34,130
server-side like for those of you who

00:26:32,720 --> 00:26:35,720
are here for a Basu she's talked in the

00:26:34,130 --> 00:26:37,370
morning he was talking about all those

00:26:35,720 --> 00:26:40,460
horrific limit dialects

00:26:37,370 --> 00:26:41,960
well DB I see solves that problem and

00:26:40,460 --> 00:26:44,840
then rapid app solves the problem of

00:26:41,960 --> 00:26:47,050
bringing that forward into interfaces so

00:26:44,840 --> 00:26:49,520
you don't have to worry about that stuff

00:26:47,050 --> 00:26:52,550
so we can have this all in Ajax

00:26:49,520 --> 00:26:54,830
interface we can rearrange columns we

00:26:52,550 --> 00:27:01,070
can select columns that we want to have

00:26:54,830 --> 00:27:06,440
and change them first page last page

00:27:01,070 --> 00:27:11,030
refresh we can auto size columns all

00:27:06,440 --> 00:27:14,150
sorts of Handy stuff right so there's

00:27:11,030 --> 00:27:18,020
also out of the box we have our very

00:27:14,150 --> 00:27:19,910
powerful query builder which is if you

00:27:18,020 --> 00:27:22,790
saw there at the bottom corner there's a

00:27:19,910 --> 00:27:26,060
filters button which opens our multi

00:27:22,790 --> 00:27:27,140
filter dialog and we can add conditions

00:27:26,060 --> 00:27:30,670
like

00:27:27,140 --> 00:27:33,860
for instance we can say let's say zone

00:27:30,670 --> 00:27:36,290
and it understands based on the options

00:27:33,860 --> 00:27:39,170
that are available in this the second

00:27:36,290 --> 00:27:41,330
choice is based on what the schema of

00:27:39,170 --> 00:27:44,270
the column is for what makes sense so

00:27:41,330 --> 00:27:48,170
zone actually is a numeric so it's going

00:27:44,270 --> 00:27:50,630
to give numeric options name is a text

00:27:48,170 --> 00:27:52,790
so it's going to give text specific

00:27:50,630 --> 00:27:58,910
choices and so like we can you know

00:27:52,790 --> 00:28:01,370
contains that's probably one save and

00:27:58,910 --> 00:28:02,780
close and then boom there's our result

00:28:01,370 --> 00:28:04,610
and we can see also we see if you see

00:28:02,780 --> 00:28:07,550
here at the bottom it shows the current

00:28:04,610 --> 00:28:09,140
page it's 1 through 15 of 30 total and

00:28:07,550 --> 00:28:10,910
when filters are active you see that

00:28:09,140 --> 00:28:12,200
there's a little this little pencil and

00:28:10,910 --> 00:28:14,840
the number of filters that are active

00:28:12,200 --> 00:28:19,100
shows up and it also understands you

00:28:14,840 --> 00:28:22,150
remember it has a enum column for the

00:28:19,100 --> 00:28:27,470
type so I can add another condition I

00:28:22,150 --> 00:28:30,200
can say type and I can I have the

00:28:27,470 --> 00:28:32,000
standard it is a text-based column I

00:28:30,200 --> 00:28:33,980
have those standard access to those but

00:28:32,000 --> 00:28:36,080
then there's also is here at the bottom

00:28:33,980 --> 00:28:38,180
which is special which is it

00:28:36,080 --> 00:28:41,000
automatically gives a selector based on

00:28:38,180 --> 00:28:42,500
all the possible enum values of that so

00:28:41,000 --> 00:28:44,420
I don't have to think about what the

00:28:42,500 --> 00:28:46,610
what's available it knows what's

00:28:44,420 --> 00:28:50,120
available so let's say everything that

00:28:46,610 --> 00:28:55,970
is MX type MX and there's there's the

00:28:50,120 --> 00:29:01,130
records that that relate to that yes

00:28:55,970 --> 00:29:02,960
which will do for editing yeah and

00:29:01,130 --> 00:29:04,640
that's will show that in a minute we

00:29:02,960 --> 00:29:06,920
don't I don't have added ability enabled

00:29:04,640 --> 00:29:09,500
yet that's a change it does not out of

00:29:06,920 --> 00:29:10,940
the box automatically make it so that

00:29:09,500 --> 00:29:12,830
you can clobber your database it makes

00:29:10,940 --> 00:29:14,720
it so you do have to ask you have to say

00:29:12,830 --> 00:29:15,770
yes I want to edit the database before

00:29:14,720 --> 00:29:18,860
it automatically does that and we'll

00:29:15,770 --> 00:29:21,290
jump into the code and we'll see that in

00:29:18,860 --> 00:29:23,920
a second but then there's also um we

00:29:21,290 --> 00:29:27,770
have quick search dialog which let me

00:29:23,920 --> 00:29:33,650
delete these save and close

00:29:27,770 --> 00:29:36,290
I can I can type in the in the quick

00:29:33,650 --> 00:29:38,300
search as well to filter the filter

00:29:36,290 --> 00:29:39,220
things and I can select which column I

00:29:38,300 --> 00:29:41,710
want to serve

00:29:39,220 --> 00:29:44,290
he's normal and exact whether like by

00:29:41,710 --> 00:29:47,530
default it's gonna be due alike with a

00:29:44,290 --> 00:29:49,210
contains you can change it to which that

00:29:47,530 --> 00:29:51,670
can be slow depending on how many rows

00:29:49,210 --> 00:29:54,400
you have you can do an exact riddle one

00:29:51,670 --> 00:29:56,260
an exact match so if I now I do an exact

00:29:54,400 --> 00:29:59,170
mode nothing net is exactly equal to

00:29:56,260 --> 00:30:02,860
vision I can select which which columns

00:29:59,170 --> 00:30:04,990
to search on and toggle and say I want

00:30:02,860 --> 00:30:06,490
to just search for name and then it'll

00:30:04,990 --> 00:30:09,370
tell you what's happening that I'm doing

00:30:06,490 --> 00:30:11,920
an exact search for name or I'm gonna

00:30:09,370 --> 00:30:13,900
doing an exact search on name or data

00:30:11,920 --> 00:30:17,250
and so it shows that that's doing an

00:30:13,900 --> 00:30:20,950
exact search on two columns

00:30:17,250 --> 00:30:23,740
oh it's gone oh okay so he's telling me

00:30:20,950 --> 00:30:25,960
that since I switched to 800 by 600 to

00:30:23,740 --> 00:30:29,230
make it bigger that that they needs to

00:30:25,960 --> 00:30:35,340
I'm gonna need to go back to thank you

00:30:29,230 --> 00:30:35,340
for letting me know that go back to

00:30:45,240 --> 00:30:57,500
so just come back to here so for the

00:30:52,760 --> 00:31:03,690
yeah but see the problem with ctrl+ is

00:30:57,500 --> 00:31:07,590
it I mean yes that works but that's yes

00:31:03,690 --> 00:31:09,659
but that that changes CSS and and and

00:31:07,590 --> 00:31:13,860
and whatnot which is not you know it's

00:31:09,659 --> 00:31:16,890
this is a we can start with that but if

00:31:13,860 --> 00:31:18,360
it starts being an issue I'll maybe

00:31:16,890 --> 00:31:20,630
change it but I mean yeah I mean it is

00:31:18,360 --> 00:31:22,649
it does work as you can see that is

00:31:20,630 --> 00:31:24,149
working but like you can't guarantee is

00:31:22,649 --> 00:31:29,610
gonna work everywhere in that context

00:31:24,149 --> 00:31:32,880
like that okay so does anybody have any

00:31:29,610 --> 00:31:34,559
questions about this so far alright so

00:31:32,880 --> 00:31:36,960
let's talk about relationships quickly

00:31:34,559 --> 00:31:40,500
so the relationships are one of the very

00:31:36,960 --> 00:31:42,899
powerful capabilities of DB IC and in

00:31:40,500 --> 00:31:46,350
rapid app we represent every

00:31:42,899 --> 00:31:48,080
relationship as a column as some kind of

00:31:46,350 --> 00:31:53,970
column representation of that

00:31:48,080 --> 00:31:57,149
relationship so in this case zone is a

00:31:53,970 --> 00:32:00,390
foreign key but it is also a

00:31:57,149 --> 00:32:02,669
relationship so you see that we have we

00:32:00,390 --> 00:32:04,529
have these little magnifying glass links

00:32:02,669 --> 00:32:07,200
and that shows up in relationship

00:32:04,529 --> 00:32:10,440
columns so that you can actually go to

00:32:07,200 --> 00:32:12,090
the related object also by the way you

00:32:10,440 --> 00:32:14,159
can and this is I'm not going to be able

00:32:12,090 --> 00:32:16,799
to get into it with my time that I have

00:32:14,159 --> 00:32:19,679
today but this is just a base you can

00:32:16,799 --> 00:32:21,390
extend these views into all sorts of

00:32:19,679 --> 00:32:22,740
custom applications but we're going to

00:32:21,390 --> 00:32:23,909
obviously don't have time to get into

00:32:22,740 --> 00:32:26,970
all that today we're going to be using

00:32:23,909 --> 00:32:28,890
the out-of-the-box stuff but this is a

00:32:26,970 --> 00:32:31,200
totally customizable thing which is the

00:32:28,890 --> 00:32:34,740
multi multi relationship data store

00:32:31,200 --> 00:32:37,230
driven module view and then there's

00:32:34,740 --> 00:32:39,720
single single relationship views which

00:32:37,230 --> 00:32:42,600
if we double click it will open the row

00:32:39,720 --> 00:32:46,409
page which is a representation of just

00:32:42,600 --> 00:32:54,149
one row and and again this is all all

00:32:46,409 --> 00:32:56,520
restful URLs in the URL navigation so

00:32:54,149 --> 00:32:58,020
the the magnified link jumps straight to

00:32:56,520 --> 00:33:02,850
the related

00:32:58,020 --> 00:33:05,910
rrrow so that's a belongs to which is

00:33:02,850 --> 00:33:10,410
the single relationship side the other

00:33:05,910 --> 00:33:12,240
side of the eye belongs to as you just

00:33:10,410 --> 00:33:14,580
learned from through is a multi

00:33:12,240 --> 00:33:19,770
relationship or it has many so we look

00:33:14,580 --> 00:33:21,840
on the other side for SOA rows they and

00:33:19,770 --> 00:33:26,780
let's customize some columns we don't

00:33:21,840 --> 00:33:30,780
need to see all these things they have

00:33:26,780 --> 00:33:33,150
in this case our RS is and this comes

00:33:30,780 --> 00:33:34,650
from the relationship name in DB I see

00:33:33,150 --> 00:33:38,010
that was generated and the schema loader

00:33:34,650 --> 00:33:42,320
it picked the name R RS to be the plural

00:33:38,010 --> 00:33:46,320
version of RR so this is the has many so

00:33:42,320 --> 00:33:50,550
and each SOA row has many RR rows and

00:33:46,320 --> 00:33:52,800
this is this is a virtualized column and

00:33:50,550 --> 00:33:54,960
that by default it displays an aggregate

00:33:52,800 --> 00:33:56,910
function view in this case it's a count

00:33:54,960 --> 00:33:58,830
and that can actually be changed the API

00:33:56,910 --> 00:34:01,740
supports changing to have a different

00:33:58,830 --> 00:34:03,500
aggregate function but by default it's a

00:34:01,740 --> 00:34:09,360
it's a count so we can see that in

00:34:03,500 --> 00:34:11,850
telecom has 67 records cmgc has 11 and

00:34:09,360 --> 00:34:15,000
so on and then this if you open follow

00:34:11,850 --> 00:34:21,090
this link that will then open to a grid

00:34:15,000 --> 00:34:24,990
view of just those rows so sure yep yep

00:34:21,090 --> 00:34:27,570
and you absolutely can right so there

00:34:24,990 --> 00:34:30,000
you can see that the mo intranet has the

00:34:27,570 --> 00:34:33,600
most rows now I will caution you that

00:34:30,000 --> 00:34:35,760
this is a virtual sub select that it's

00:34:33,600 --> 00:34:37,200
that it's doing so it is brute force I

00:34:35,760 --> 00:34:39,570
only have a very small we have a very

00:34:37,200 --> 00:34:43,370
small number of rows here but we have

00:34:39,570 --> 00:34:48,360
we've successfully used wrap it out for

00:34:43,370 --> 00:34:49,470
back ends with 10 million rows and you

00:34:48,360 --> 00:34:52,110
can in that you also you have the

00:34:49,470 --> 00:34:54,750
capability to turn that off and you

00:34:52,110 --> 00:34:56,730
probably want to turn that sort ability

00:34:54,750 --> 00:34:58,440
off if you have 10 million rows and you

00:34:56,730 --> 00:35:03,920
try to sort by that that's gonna you

00:34:58,440 --> 00:35:03,920
know kill your alright

00:35:04,640 --> 00:35:14,670
if what had that what do you mean head

00:35:10,230 --> 00:35:17,790
oh yes oh yes absolutely it only selects

00:35:14,670 --> 00:35:19,440
that's right that's right unless you

00:35:17,790 --> 00:35:22,320
sort it so like for instance I've hidden

00:35:19,440 --> 00:35:24,450
it however I still have the sort in

00:35:22,320 --> 00:35:27,600
place so it is still selecting that

00:35:24,450 --> 00:35:30,900
column to sort based on that but if I

00:35:27,600 --> 00:35:33,270
now change the sort now that query now

00:35:30,900 --> 00:35:37,010
is no longer fetching that column yes

00:35:33,270 --> 00:35:39,930
absolutely everything is it is relying

00:35:37,010 --> 00:35:41,790
again one of the main principles of wrap

00:35:39,930 --> 00:35:44,640
it out is it's not trying to reinvent

00:35:41,790 --> 00:35:46,640
things that aren't broken one of the

00:35:44,640 --> 00:35:50,100
things that's great about DB I see is

00:35:46,640 --> 00:35:52,260
that it is not a it is not really a full

00:35:50,100 --> 00:35:55,410
o R M because you don't want a full

00:35:52,260 --> 00:35:57,240
translation into objects because of

00:35:55,410 --> 00:35:59,430
relational database is a powerful useful

00:35:57,240 --> 00:36:02,160
thing you want to do joins and it's not

00:35:59,430 --> 00:36:04,260
you know the idea of I want to not have

00:36:02,160 --> 00:36:06,000
to think about relational database

00:36:04,260 --> 00:36:07,470
concepts means that you're hiding

00:36:06,000 --> 00:36:13,800
yourself off from really really powerful

00:36:07,470 --> 00:36:15,990
features that databases provide so DB IC

00:36:13,800 --> 00:36:18,120
has already done so many powerful things

00:36:15,990 --> 00:36:19,680
that rapid app doesn't want to reinvent

00:36:18,120 --> 00:36:22,910
those things it wants to extend these

00:36:19,680 --> 00:36:28,760
powerful capabilities into front ends

00:36:22,910 --> 00:36:28,760
so let's is any other questions on that

00:36:34,210 --> 00:36:39,890
yeah well that's that you can do that

00:36:38,510 --> 00:36:43,820
when you get into permissions but I only

00:36:39,890 --> 00:36:45,590
have 20 minutes left and there's I want

00:36:43,820 --> 00:36:49,370
to get to other things so there's this

00:36:45,590 --> 00:36:50,060
is a very big deep topic you know he

00:36:49,370 --> 00:36:53,620
works for me

00:36:50,060 --> 00:36:53,620
so I don't have to answer his question

00:36:54,850 --> 00:36:59,330
yes right right just so that we're clear

00:36:58,100 --> 00:37:02,180
on that and you know this is you cannot

00:36:59,330 --> 00:37:04,760
drag these at this interface around and

00:37:02,180 --> 00:37:06,200
whatnot so let's let's jump into the

00:37:04,760 --> 00:37:13,840
code and see the code that actually got

00:37:06,200 --> 00:37:16,760
created so we created here sets of files

00:37:13,840 --> 00:37:19,490
so we have the Lib directory again for

00:37:16,760 --> 00:37:21,380
those of you who are familiar with with

00:37:19,490 --> 00:37:23,900
rapid app I mean with catalyst will be

00:37:21,380 --> 00:37:26,570
familiar with this skeleton structure

00:37:23,900 --> 00:37:28,910
that was created we have the main class

00:37:26,570 --> 00:37:34,280
file that was created oh that's the

00:37:28,910 --> 00:37:37,250
schema sorry the main class file that

00:37:34,280 --> 00:37:39,320
was created the only thing that is this

00:37:37,250 --> 00:37:41,120
is there's the whole thing the base of

00:37:39,320 --> 00:37:44,330
the application is it's loading the

00:37:41,120 --> 00:37:45,290
rapid DB IC plug-in and then it puts

00:37:44,330 --> 00:37:46,910
some it puts some boilerplate

00:37:45,290 --> 00:37:49,010
information in here and there's actually

00:37:46,910 --> 00:37:51,020
nothing configured here but it tells you

00:37:49,010 --> 00:37:53,480
how you can change the root module

00:37:51,020 --> 00:37:54,830
namespace for where it's mounted so like

00:37:53,480 --> 00:37:57,860
by default you notice here that in our

00:37:54,830 --> 00:38:00,260
application this is starting at slash

00:37:57,860 --> 00:38:02,990
which is this is the paradigm where this

00:38:00,260 --> 00:38:04,970
is just an application and this is it's

00:38:02,990 --> 00:38:06,890
only purpose is to do that but as we'll

00:38:04,970 --> 00:38:08,420
see in a minute a lot of other cases is

00:38:06,890 --> 00:38:11,720
you already have an application you want

00:38:08,420 --> 00:38:12,950
to use this as a an admin section for an

00:38:11,720 --> 00:38:14,090
existing application and that's what I'm

00:38:12,950 --> 00:38:15,650
going to the next app that I'm going to

00:38:14,090 --> 00:38:18,440
show which will probably be use up my

00:38:15,650 --> 00:38:19,760
time by the time I get through that will

00:38:18,440 --> 00:38:22,160
be mount and so you can mount that

00:38:19,760 --> 00:38:23,630
somewhere else and so you will you

00:38:22,160 --> 00:38:26,660
change that value and then it'll be

00:38:23,630 --> 00:38:28,720
mounted on that so if I set that to ADM

00:38:26,660 --> 00:38:31,760
then it would then that whole that whole

00:38:28,720 --> 00:38:35,150
module namespace will start at slash ADM

00:38:31,760 --> 00:38:38,800
or you know whatever you want it to be

00:38:35,150 --> 00:38:38,800
it'll be mounted there

00:38:39,530 --> 00:38:45,800
but we're not going to do that just yet

00:38:41,510 --> 00:38:47,810
right now so for rapid DB IC once you

00:38:45,800 --> 00:38:50,090
load it you have theirs you have to

00:38:47,810 --> 00:38:53,660
configure it you either can specify a

00:38:50,090 --> 00:38:55,730
config key for plug-in : and call on

00:38:53,660 --> 00:38:59,660
rapid app clinical and rapid DB IC and

00:38:55,730 --> 00:39:02,000
specify a config there or it will simply

00:38:59,660 --> 00:39:05,750
look at all of the models in the

00:39:02,000 --> 00:39:08,390
application and if any model has a rapid

00:39:05,750 --> 00:39:11,330
DB IC config key specified then it

00:39:08,390 --> 00:39:13,310
automatically will Express that model in

00:39:11,330 --> 00:39:15,170
the interface and so like in this case

00:39:13,310 --> 00:39:18,650
our model name is DB and that's why it

00:39:15,170 --> 00:39:23,560
was DB in the tree so there's some

00:39:18,650 --> 00:39:25,400
boilerplate boilerplate options in here

00:39:23,560 --> 00:39:26,810
and one of the things that it

00:39:25,400 --> 00:39:30,320
immediately should already shows you how

00:39:26,810 --> 00:39:32,210
to do is to turn on edit ability and we

00:39:30,320 --> 00:39:35,540
have this sum and this is part of the

00:39:32,210 --> 00:39:40,250
sort of DSL that rapid app has is we

00:39:35,540 --> 00:39:43,790
have access to include our columns for

00:39:40,250 --> 00:39:47,660
read update create and destroy based on

00:39:43,790 --> 00:39:53,590
this call spec concept which is a set of

00:39:47,660 --> 00:39:56,060
wildcard star means include all of the

00:39:53,590 --> 00:39:59,540
all of the local columns but then you

00:39:56,060 --> 00:40:01,520
can also specify you can specify joins

00:39:59,540 --> 00:40:05,510
in this syntax also so you could for

00:40:01,520 --> 00:40:07,400
instance specify to join the zone

00:40:05,510 --> 00:40:09,650
through the zone relationship you could

00:40:07,400 --> 00:40:12,230
say zone dot star would then include all

00:40:09,650 --> 00:40:15,470
of the columns of that and actually I'm

00:40:12,230 --> 00:40:19,190
typing that here in the grid params

00:40:15,470 --> 00:40:21,350
section it specifies the configs that

00:40:19,190 --> 00:40:24,260
will be supplied to the grid component

00:40:21,350 --> 00:40:25,910
that is in the interface and table specs

00:40:24,260 --> 00:40:29,270
which I'll show in just a second are

00:40:25,910 --> 00:40:34,460
which is our an internal name for extra

00:40:29,270 --> 00:40:36,560
metadata associated with with a given

00:40:34,460 --> 00:40:37,910
source and since we're already time is

00:40:36,560 --> 00:40:40,190
already flying I'm gonna go ahead and

00:40:37,910 --> 00:40:44,240
show that right now one of the what so

00:40:40,190 --> 00:40:46,670
what sort of metadata would that be so

00:40:44,240 --> 00:40:50,870
if you saw and you remember here in the

00:40:46,670 --> 00:40:53,080
interface we have M zone and this is our

00:40:50,870 --> 00:40:54,670
related object but it's

00:40:53,080 --> 00:40:56,830
this is the foreign key two of three

00:40:54,670 --> 00:40:58,540
that's not that's not very friendly or

00:40:56,830 --> 00:41:00,040
useful well you know what are you going

00:40:58,540 --> 00:41:02,910
to do with that one solution is you can

00:41:00,040 --> 00:41:05,620
we can join to the zone column and see

00:41:02,910 --> 00:41:10,330
columns directly of the zone

00:41:05,620 --> 00:41:14,740
relationship or we can set the display

00:41:10,330 --> 00:41:17,230
column which will for that source to say

00:41:14,740 --> 00:41:18,610
which column we want to show for that

00:41:17,230 --> 00:41:21,520
relationship and this will make sense

00:41:18,610 --> 00:41:23,680
when I do it here in just a second so um

00:41:21,520 --> 00:41:26,170
we have it automatically gives you the

00:41:23,680 --> 00:41:29,140
section and this is divided by the

00:41:26,170 --> 00:41:32,290
config is divided by sources and the

00:41:29,140 --> 00:41:36,220
same thing goes for grid params you can

00:41:32,290 --> 00:41:40,900
divide it by sources so I'd say are ours

00:41:36,220 --> 00:41:48,970
and I can override a setting oops

00:41:40,900 --> 00:41:54,220
are so like for instance I can change

00:41:48,970 --> 00:41:56,230
that here and you can actually do evil

00:41:54,220 --> 00:41:57,940
things like that and just join every

00:41:56,230 --> 00:41:59,260
single relationship that it has every

00:41:57,940 --> 00:42:00,850
column of a relationship that it has

00:41:59,260 --> 00:42:02,710
which is fine in our case because

00:42:00,850 --> 00:42:04,210
there's not that many but you can get

00:42:02,710 --> 00:42:05,650
into really gnarly stuff if you have

00:42:04,210 --> 00:42:06,940
like a whole lot of relationships but

00:42:05,650 --> 00:42:09,700
it's there for you if you want to do it

00:42:06,940 --> 00:42:14,470
and the this and there's little comments

00:42:09,700 --> 00:42:17,200
that explain the star defaults applies

00:42:14,470 --> 00:42:19,090
to all all the sources at once or if you

00:42:17,200 --> 00:42:21,310
specify the source name so we can

00:42:19,090 --> 00:42:22,450
specify different options and there's a

00:42:21,310 --> 00:42:23,860
whole bunch of different options and

00:42:22,450 --> 00:42:25,870
there there is documentation on this

00:42:23,860 --> 00:42:28,110
rapid app : : manual for these options

00:42:25,870 --> 00:42:30,190
I'm just sort of giving you a taste

00:42:28,110 --> 00:42:31,570
really quickly of these things because

00:42:30,190 --> 00:42:32,860
there's it's a very there's lots of

00:42:31,570 --> 00:42:34,630
things that we could dive into and

00:42:32,860 --> 00:42:36,090
there's not time for all of that but

00:42:34,630 --> 00:42:37,390
anyway back to what I was talking about

00:42:36,090 --> 00:42:40,360
over here

00:42:37,390 --> 00:42:43,300
so these table specs allow us to specify

00:42:40,360 --> 00:42:46,240
certain attributes that go above and

00:42:43,300 --> 00:42:48,130
beyond the in the metadata information

00:42:46,240 --> 00:42:49,960
that we already get from the schema like

00:42:48,130 --> 00:42:51,760
null ability and column type and

00:42:49,960 --> 00:42:56,620
relationship type and whatnot

00:42:51,760 --> 00:43:00,130
none of them is display column and we

00:42:56,620 --> 00:43:02,470
can change that to a useful

00:43:00,130 --> 00:43:05,940
column name and as well and as you'll

00:43:02,470 --> 00:43:14,340
see how this takes effect is it means

00:43:05,940 --> 00:43:19,410
yes we have a server named Orion and so

00:43:14,340 --> 00:43:22,500
I'm used to typing that thank you

00:43:19,410 --> 00:43:27,660
appreciate that so and we can also let's

00:43:22,500 --> 00:43:29,190
go ahead and we're going to make editor

00:43:27,660 --> 00:43:31,020
on edit ability and the include the

00:43:29,190 --> 00:43:34,320
updatable credible and destroyable

00:43:31,020 --> 00:43:38,280
follow the same syntax and yes you can

00:43:34,320 --> 00:43:40,140
even you can even do joins through this

00:43:38,280 --> 00:43:41,880
here and it will do the thing that you

00:43:40,140 --> 00:43:44,580
specify and that can get powerful and

00:43:41,880 --> 00:43:47,220
dangerous and the destroyable real spec

00:43:44,580 --> 00:43:49,470
setting actually applies to relationship

00:43:47,220 --> 00:43:52,830
names not call names because the Destroy

00:43:49,470 --> 00:43:54,990
operation applies to an entire row so if

00:43:52,830 --> 00:43:58,320
you specify a chain of things in here

00:43:54,990 --> 00:43:59,910
you're basically redoing cascade deletes

00:43:58,320 --> 00:44:01,050
but you probably don't want to do you're

00:43:59,910 --> 00:44:03,570
probably better off doing that in the

00:44:01,050 --> 00:44:05,670
database but you can do it if you want

00:44:03,570 --> 00:44:08,340
to do it you have the capability to do

00:44:05,670 --> 00:44:12,060
it for completeness so we've turned that

00:44:08,340 --> 00:44:18,630
on we've set display column let's save

00:44:12,060 --> 00:44:22,440
this and let's restart yeah I'm gonna be

00:44:18,630 --> 00:44:24,720
out of time so I'm gonna bury quickly so

00:44:22,440 --> 00:44:28,890
then you can um you can actually right

00:44:24,720 --> 00:44:30,390
click and reload or reload the whole the

00:44:28,890 --> 00:44:33,240
whole interface but it's again it's all

00:44:30,390 --> 00:44:34,830
Ajax so I didn't I can do that or I can

00:44:33,240 --> 00:44:37,530
reload the whole thing and by the way

00:44:34,830 --> 00:44:40,050
these links work from the outside so I

00:44:37,530 --> 00:44:42,630
can reload the whole thing and guess

00:44:40,050 --> 00:44:45,270
what it jumps straight to that tab

00:44:42,630 --> 00:44:47,310
because it's all tied and these are this

00:44:45,270 --> 00:44:49,680
rustle URL navigation is all tied in any

00:44:47,310 --> 00:44:51,030
way if you notice here now that the zone

00:44:49,680 --> 00:44:51,420
column doesn't have those numbers

00:44:51,030 --> 00:44:55,260
anymore

00:44:51,420 --> 00:44:59,430
now it has a name and that this name is

00:44:55,260 --> 00:45:02,160
the value of origin which is what we

00:44:59,430 --> 00:45:03,600
specified as the display column so it

00:45:02,160 --> 00:45:06,750
displays that instead of the default

00:45:03,600 --> 00:45:07,950
display column so once editability is on

00:45:06,750 --> 00:45:14,610
you see there's lots of different

00:45:07,950 --> 00:45:17,490
interfaces for editing we can edit we

00:45:14,610 --> 00:45:20,210
can toggle to edit directly inline and

00:45:17,490 --> 00:45:23,190
by the way if we edit a

00:45:20,210 --> 00:45:26,640
relationship column it is going to open

00:45:23,190 --> 00:45:29,220
a dialogue a selection dialog to do that

00:45:26,640 --> 00:45:31,440
and this is actually a nested grid and I

00:45:29,220 --> 00:45:34,920
can actually add another row well on the

00:45:31,440 --> 00:45:36,720
fly and select it and all kinds of stuff

00:45:34,920 --> 00:45:40,050
like that and I can search and select a

00:45:36,720 --> 00:45:43,800
different thing change the zone and you

00:45:40,050 --> 00:45:47,180
asked about multi-select so let's say

00:45:43,800 --> 00:45:50,490
that we're about to do a DNS change and

00:45:47,180 --> 00:45:54,570
so we want to change multiple records at

00:45:50,490 --> 00:45:57,900
once I can set up a let's take a look at

00:45:54,570 --> 00:46:05,460
I'm gonna grab this IP address let's say

00:45:57,900 --> 00:46:08,640
I want to see all of the let's say I

00:46:05,460 --> 00:46:13,010
want to look for all of the records that

00:46:08,640 --> 00:46:17,910
have that IP address I can search for

00:46:13,010 --> 00:46:20,369
data is equal to that alright and now

00:46:17,910 --> 00:46:21,450
there's all of the rows that are related

00:46:20,369 --> 00:46:23,760
to that so let's say I want to change

00:46:21,450 --> 00:46:25,740
those at once I can go through and

00:46:23,760 --> 00:46:27,150
change all of them if I turn on cell

00:46:25,740 --> 00:46:32,280
editing I can type and change them

00:46:27,150 --> 00:46:36,359
individually or I can say options batch

00:46:32,280 --> 00:46:41,670
modify all active records and let's say

00:46:36,359 --> 00:46:42,980
we want to change the data to 91 apply

00:46:41,670 --> 00:46:48,990
changes

00:46:42,980 --> 00:46:51,119
it'll take a second there I didn't click

00:46:48,990 --> 00:46:52,320
it right so and everything disappeared

00:46:51,119 --> 00:46:54,260
and the reason everything disappeared

00:46:52,320 --> 00:46:57,570
because it now no longer matches our

00:46:54,260 --> 00:46:59,640
filter it's now 191 so now there they

00:46:57,570 --> 00:47:04,619
are boom there that so there's all kinds

00:46:59,640 --> 00:47:06,480
of capabilities alright so obviously um

00:47:04,619 --> 00:47:08,010
this is a great admin interface but we

00:47:06,480 --> 00:47:13,040
don't want this to be open to the entire

00:47:08,010 --> 00:47:18,950
world so we have let's add another

00:47:13,040 --> 00:47:18,950
plugin let's add auth core

00:47:22,440 --> 00:47:27,970
and you probably want and this will

00:47:26,320 --> 00:47:31,210
automatically set up catalyst plug-in

00:47:27,970 --> 00:47:34,120
authentication sessions and it will

00:47:31,210 --> 00:47:35,350
automatically deploy a database to do

00:47:34,120 --> 00:47:37,390
that and they'll do it all for you and

00:47:35,350 --> 00:47:39,340
then you probably want to be able to

00:47:37,390 --> 00:47:41,710
administer the users I was gonna do this

00:47:39,340 --> 00:47:50,710
in two steps but I don't have time so

00:47:41,710 --> 00:48:01,620
I'm gonna do it together I can do and so

00:47:50,710 --> 00:48:01,620
let's take that and now if we restart

00:48:02,730 --> 00:48:11,170
now we have to login and by default it

00:48:08,290 --> 00:48:13,360
will create username admin password and

00:48:11,170 --> 00:48:16,530
because I added the core schema admin it

00:48:13,360 --> 00:48:21,940
gives me it just basically just gives a

00:48:16,530 --> 00:48:23,890
rapid DB IC config for for the database

00:48:21,940 --> 00:48:27,520
so you can see the users and you can and

00:48:23,890 --> 00:48:30,070
this uses the offense for A's column

00:48:27,520 --> 00:48:31,900
stuff that FRU actually talked about is

00:48:30,070 --> 00:48:35,800
in there that automatically does that

00:48:31,900 --> 00:48:38,800
and in the last fledgling seconds that I

00:48:35,800 --> 00:48:44,320
have I am going to show you

00:48:38,800 --> 00:48:47,310
so we developed to a hackathon a couple

00:48:44,320 --> 00:48:49,480
weeks ago where we built an application

00:48:47,310 --> 00:48:51,460
on the fly and I worked with several

00:48:49,480 --> 00:48:53,800
other developers and developed an

00:48:51,460 --> 00:48:56,560
application for the idea of this

00:48:53,800 --> 00:48:57,970
entrepreneur or thing is you ship boxes

00:48:56,560 --> 00:49:00,310
and they get stored and they send them

00:48:57,970 --> 00:49:03,400
back to you sort of like pods but for

00:49:00,310 --> 00:49:08,010
small boxes and so we Furr the demo I

00:49:03,400 --> 00:49:10,660
worked with HTML guys and CSS guys and

00:49:08,010 --> 00:49:13,390
they just in this my internet connection

00:49:10,660 --> 00:49:17,100
is terribly slow unfortunately I was

00:49:13,390 --> 00:49:17,100
going to check it out and run it

00:49:21,970 --> 00:49:34,670
but here we go so so um you can logon

00:49:33,170 --> 00:49:37,220
there was these screens where you could

00:49:34,670 --> 00:49:41,660
order ship retrieve and these were all

00:49:37,220 --> 00:49:44,390
marked up by these were all marked up by

00:49:41,660 --> 00:49:46,460
regular this is jQuery and bootstrap has

00:49:44,390 --> 00:49:48,170
nothing to do with XJS I told the guys

00:49:46,460 --> 00:49:51,170
that we're writing this don't bother

00:49:48,170 --> 00:49:54,260
don't just write whatever and then I'll

00:49:51,170 --> 00:49:55,700
template eyes it and then you can go

00:49:54,260 --> 00:49:58,280
into the site administration section

00:49:55,700 --> 00:49:59,960
where you get this sort of section and I

00:49:58,280 --> 00:50:01,430
didn't get a chance to get into the

00:49:59,960 --> 00:50:05,020
template controller stuff where you can

00:50:01,430 --> 00:50:09,500
actually edit content on the fly in

00:50:05,020 --> 00:50:12,320
place and there's a hole and you can ya

00:50:09,500 --> 00:50:13,490
manage do all that stuff and then also

00:50:12,320 --> 00:50:18,079
the other thing that I wanted to show

00:50:13,490 --> 00:50:23,540
and then I will finish is back on the

00:50:18,079 --> 00:50:26,150
outside let's say that for rapid

00:50:23,540 --> 00:50:27,349
deployment for prototyping you haven't

00:50:26,150 --> 00:50:28,819
you didn't have time to finish those

00:50:27,349 --> 00:50:31,780
interfaces and you want an interface on

00:50:28,819 --> 00:50:35,060
the outside that here's an example where

00:50:31,780 --> 00:50:37,970
here's one of those modules you can just

00:50:35,060 --> 00:50:41,960
reach into and grab and have in the

00:50:37,970 --> 00:50:44,690
context of your your standard a markup

00:50:41,960 --> 00:50:46,760
by using iframes so obviously there's a

00:50:44,690 --> 00:50:49,760
lot more stuff to wrap it up than what I

00:50:46,760 --> 00:50:52,460
just showed but are there any questions

00:50:49,760 --> 00:50:55,730
which I am out of time on my um over

00:50:52,460 --> 00:50:58,730
time so any any questions come please

00:50:55,730 --> 00:51:00,650
come and join pound wrap it up and

00:50:58,730 --> 00:51:03,200
asking questions and play with it and I

00:51:00,650 --> 00:51:05,720
will help you with any questions that

00:51:03,200 --> 00:51:08,050
you have I'm always on IRC thank you

00:51:05,720 --> 00:51:08,050
very much

00:51:18,360 --> 00:51:20,420

YouTube URL: https://www.youtube.com/watch?v=ryVvSjaw3Jk


