Title: Larry Wall (‎TimToady‎) - Perl 6
Publication date: 2014-06-23
Playlist: YAPC::NA 2014
Description: 
	Let's learn about Perl 6 With Larry Wall!
Captions: 
	00:00:39,190 --> 00:00:41,250
you

00:02:57,800 --> 00:03:01,810
I will keep them distracted for a moment

00:03:02,390 --> 00:03:09,880
welcome welcome back from your break

00:03:07,120 --> 00:03:14,740
hello YouTube

00:03:09,880 --> 00:03:21,520
okay is it going to work for me

00:03:14,740 --> 00:03:21,520
hello it's not on is it

00:03:21,769 --> 00:03:26,970
well now that you've had a chance to go

00:03:24,870 --> 00:03:29,879
out and get some more snacks we're back

00:03:26,970 --> 00:03:33,050
for the second warm-up act before the

00:03:29,879 --> 00:03:33,050
main event of the Lightning talks

00:03:34,040 --> 00:03:40,440
today's speaker isn't a rocket scientist

00:03:37,830 --> 00:03:41,760
but he did used to work with some or at

00:03:40,440 --> 00:03:47,069
least worked with people who work with

00:03:41,760 --> 00:03:48,930
some at JPL he's now at Craig's List a

00:03:47,069 --> 00:03:52,470
small little company that I hear is

00:03:48,930 --> 00:03:54,120
hiring he's written three things that

00:03:52,470 --> 00:03:56,970
you can use in the UNIX world these are

00:03:54,120 --> 00:03:58,170
just there when you start up RN so you

00:03:56,970 --> 00:04:00,930
can find out what's happening in the

00:03:58,170 --> 00:04:04,380
world patch so you can contribute to

00:04:00,930 --> 00:04:10,590
other people's stuff and Perl a way of

00:04:04,380 --> 00:04:14,690
life and here he is our benevolent

00:04:10,590 --> 00:04:14,690
dictator for life Larry

00:04:23,820 --> 00:04:34,270
thank you very much well last year I got

00:04:29,860 --> 00:04:38,680
it before you and I didn't know whether

00:04:34,270 --> 00:04:41,790
our thing or not well no actually I'm

00:04:38,680 --> 00:04:44,770
sure I was dying to get look awesome but

00:04:41,790 --> 00:04:47,700
this year and you know I've good news I

00:04:44,770 --> 00:04:47,700
officially

00:05:01,169 --> 00:05:06,610
the left I rolled out my clock very

00:05:05,229 --> 00:05:08,229
carefully because I want to be very

00:05:06,610 --> 00:05:10,659
careful what I said this year I'm just

00:05:08,229 --> 00:05:16,120
doing the absolute opposite I'm just

00:05:10,659 --> 00:05:17,169
winging it but there's some advantages

00:05:16,120 --> 00:05:30,009
to being still alive

00:05:17,169 --> 00:05:33,009
I guess well I got Florida before but

00:05:30,009 --> 00:05:37,270
just to get on a cruise ship so that's

00:05:33,009 --> 00:05:39,969
okay but now we have to pay for a week

00:05:37,270 --> 00:05:41,680
this time and so I got to see we got to

00:05:39,969 --> 00:05:46,389
go all the way down to the Florida Keys

00:05:41,680 --> 00:05:48,669
and Key West's is is amazing you go down

00:05:46,389 --> 00:05:51,699
there and the sign that noon is like at

00:05:48,669 --> 00:05:54,729
this time of year is straight up that's

00:05:51,699 --> 00:06:00,909
because the Tropic of Cancer

00:05:54,729 --> 00:06:02,620
there's subject but so we went to a

00:06:00,909 --> 00:06:06,789
happier place on the other end estate

00:06:02,620 --> 00:06:08,199
world in Orlando nearly finally got the

00:06:06,789 --> 00:06:10,840
Walt Disney World I've never been to a

00:06:08,199 --> 00:06:12,300
busy world before and

00:06:10,840 --> 00:06:24,790
to see the differences between

00:06:12,300 --> 00:06:26,320
Disneyland real mansion and I'll get the

00:06:24,790 --> 00:06:27,419
credit they have they had one thing

00:06:26,320 --> 00:06:34,449
right

00:06:27,419 --> 00:06:36,699
Disneyland in Disneyland the Haunted

00:06:34,449 --> 00:06:40,060
Mansion has always been decorated up as

00:06:36,699 --> 00:06:42,760
The Nightmare Before Christmas here I

00:06:40,060 --> 00:06:53,320
got to see the real haunted house the

00:06:42,760 --> 00:07:03,669
original jokes that's sort of a go maybe

00:06:53,320 --> 00:07:07,780
a summary but that's really it's not

00:07:03,669 --> 00:07:10,090
tragedy isn't he sort of specializes in

00:07:07,780 --> 00:07:13,350
taking these these tragic stories like

00:07:10,090 --> 00:07:17,120
mermaid turning them into comedy somehow

00:07:13,350 --> 00:07:20,000
so I mean that's the kind of a story

00:07:17,120 --> 00:07:22,880
it's I mean it started out that way I

00:07:20,000 --> 00:07:25,760
mean we started off with the RFC process

00:07:22,880 --> 00:07:39,380
I mean but that stands for request for

00:07:25,760 --> 00:07:40,850
company you know let's let's fix a few

00:07:39,380 --> 00:07:43,100
things we're gonna break backward

00:07:40,850 --> 00:07:46,790
compatibility let's fix a few things in

00:07:43,100 --> 00:07:53,500
Perl 5 what would you fix I expected

00:07:46,790 --> 00:07:53,500
about 20 or 21 and you know I thought

00:07:54,250 --> 00:08:02,479
361 it took me 6 months to read through

00:07:59,030 --> 00:08:04,060
them the first time and then I didn't

00:08:02,479 --> 00:08:14,500
know what to think

00:08:04,060 --> 00:08:19,010
well I laughed so but you know the these

00:08:14,500 --> 00:08:22,700
RCS were written by a wonderful crew of

00:08:19,010 --> 00:08:26,889
people here and you're going to I'm

00:08:22,700 --> 00:08:29,560
gonna show some of the rfcs today and

00:08:26,889 --> 00:08:31,880
you know you'll see some names in them

00:08:29,560 --> 00:08:34,570
there's there's there's a lot a lot of

00:08:31,880 --> 00:08:34,570
names in here

00:08:36,669 --> 00:08:41,330
in fact when I counted them up if you

00:08:39,710 --> 00:08:44,750
just count the maintainer z' of the of

00:08:41,330 --> 00:08:48,770
our C's there are exactly 100 and that's

00:08:44,750 --> 00:08:53,840
that's that's cool you know that means

00:08:48,770 --> 00:08:56,630
that I can easily calculate statistics

00:08:53,840 --> 00:08:58,790
about it so I can tell you that only

00:08:56,630 --> 00:09:01,700
three to four percent of these people

00:08:58,790 --> 00:09:05,470
are active in the Perl 6 development

00:09:01,700 --> 00:09:08,000
today but don't take that in a good way

00:09:05,470 --> 00:09:10,520
it means all of these people who

00:09:08,000 --> 00:09:12,470
contributed to the RFC's are really

00:09:10,520 --> 00:09:15,500
practical people the sort who do real

00:09:12,470 --> 00:09:17,630
work and they were writing about real

00:09:15,500 --> 00:09:19,670
problems and they're still concentrating

00:09:17,630 --> 00:09:21,350
on solving their daily problems rather

00:09:19,670 --> 00:09:22,450
than the long-term problems that's

00:09:21,350 --> 00:09:27,410
that's that's a good thing

00:09:22,450 --> 00:09:29,570
we also are charges and so you know this

00:09:27,410 --> 00:09:32,480
these rfcs were written by a bunch of

00:09:29,570 --> 00:09:37,490
people who are very practical and that's

00:09:32,480 --> 00:09:40,700
a good thing I you know I we didn't

00:09:37,490 --> 00:09:43,160
accept all the RFC's and but if you see

00:09:40,700 --> 00:09:45,170
a name up there on a rejected RFC i want

00:09:43,160 --> 00:09:47,270
you to know that i think of those that

00:09:45,170 --> 00:09:50,630
person as just as much a hero as the

00:09:47,270 --> 00:09:53,720
RFC's that that were accepted in fact

00:09:50,630 --> 00:09:55,220
you know people I always like so

00:09:53,720 --> 00:09:56,630
surprised going through this time and

00:09:55,220 --> 00:09:59,300
seeing that we actually probably

00:09:56,630 --> 00:10:02,120
rejected more of Damien's ideas than we

00:09:59,300 --> 00:10:07,520
accept it but then Damien has awful lot

00:10:02,120 --> 00:10:09,440
of ideas as you know most of our our

00:10:07,520 --> 00:10:10,760
contributors nowadays in Perl 6 are

00:10:09,440 --> 00:10:12,680
actually newcomers and that's a good

00:10:10,760 --> 00:10:18,020
thing too and many of them didn't even

00:10:12,680 --> 00:10:19,910
know 4:05 but so yeah our community's

00:10:18,020 --> 00:10:21,500
naturally have some overlap and some

00:10:19,910 --> 00:10:24,830
some some divergence and that's a good

00:10:21,500 --> 00:10:27,640
thing so think of the think of all these

00:10:24,830 --> 00:10:32,120
names if you see one they're all heroes

00:10:27,640 --> 00:10:39,060
or heroines maybe they're all heroes

00:10:32,120 --> 00:10:43,430
anyway okay so you saw these uh you saw

00:10:39,060 --> 00:10:48,209
these no I

00:10:43,430 --> 00:10:52,470
you saw always bear RFC's here and yeah

00:10:48,209 --> 00:10:55,410
I I wanted well no my wife wanted glory

00:10:52,470 --> 00:10:56,670
suggested why did you you know it's been

00:10:55,410 --> 00:11:00,389
a long time since you talked about the

00:10:56,670 --> 00:11:01,709
RFC's and you know you've learned some

00:11:00,389 --> 00:11:03,149
lessons since then maybe you should

00:11:01,709 --> 00:11:04,920
actually go back and revisit those and

00:11:03,149 --> 00:11:08,339
talk about the lessons you've learned

00:11:04,920 --> 00:11:12,199
okay then I got the same paralyzed

00:11:08,339 --> 00:11:21,329
feeling seeing all of these RFC's

00:11:12,199 --> 00:11:24,930
arranged like this and so I said what

00:11:21,329 --> 00:11:33,019
can I do about that well okay I decided

00:11:24,930 --> 00:11:38,730
to color-code them so I I decided that

00:11:33,019 --> 00:11:40,980
you know he I would you know first of

00:11:38,730 --> 00:11:47,940
all you use letters but I can say you

00:11:40,980 --> 00:11:51,500
know by a neat trick I think I can

00:11:47,940 --> 00:11:56,339
color-code them in vim I like then so

00:11:51,500 --> 00:11:59,040
you may notice a pattern here G stands

00:11:56,339 --> 00:12:03,180
for green I mean for a good idea

00:11:59,040 --> 00:12:08,399
C is cyan or cultural community

00:12:03,180 --> 00:12:10,949
yeah but the rejected ones and this from

00:12:08,399 --> 00:12:12,589
modules will happen you know see pants

00:12:10,949 --> 00:12:14,970
good right

00:12:12,589 --> 00:12:17,819
but that means shirking responsibility

00:12:14,970 --> 00:12:19,880
we're not going to deal with it some of

00:12:17,819 --> 00:12:22,649
them were withdrawn and some of them

00:12:19,880 --> 00:12:24,480
were just sort of completely bypassed by

00:12:22,649 --> 00:12:28,800
the new design that the distorter not

00:12:24,480 --> 00:12:33,010
relevant anymore by the way

00:12:28,800 --> 00:12:36,100
and if that's supposed to be magenta

00:12:33,010 --> 00:12:38,380
but my wife says that's not magenta and

00:12:36,100 --> 00:12:41,910
I believe her she says that's that's

00:12:38,380 --> 00:12:41,910
mauve but mauve works

00:12:41,990 --> 00:12:46,480
okay so

00:12:53,240 --> 00:12:58,639
so I got this key and I started going

00:12:55,550 --> 00:13:01,399
through and I actually read through well

00:12:58,639 --> 00:13:03,100
some of my skin's all of the RFC's again

00:13:01,399 --> 00:13:06,339
it didn't take me six months this time

00:13:03,100 --> 00:13:06,339
mainly because I

00:13:12,040 --> 00:13:14,100
you

00:13:45,070 --> 00:13:50,370
because I I couldn't figure out what

00:13:47,140 --> 00:13:53,850
Porter to talk about these was I I

00:13:50,370 --> 00:13:53,850
ordered them in

00:14:01,100 --> 00:14:05,650
this is not the one that I want

00:14:08,940 --> 00:14:13,130
yeah that's not the one I want either

00:14:13,680 --> 00:14:16,339
mm-hm

00:14:23,330 --> 00:14:25,930
yeah

00:14:32,850 --> 00:14:51,790
okay yeah think something weird happen

00:14:42,150 --> 00:14:58,350
so uh let's just yeah was it this one no

00:14:51,790 --> 00:14:58,350
I did that one there it is okay

00:14:58,890 --> 00:15:03,520
okay I took out all the notes because

00:15:01,000 --> 00:15:05,500
those are my dozen real-time speaking of

00:15:03,520 --> 00:15:10,089
from and you know you don't want to see

00:15:05,500 --> 00:15:12,010
that that would be just silly okay

00:15:10,089 --> 00:15:14,170
the but I I marked the ones with bangs

00:15:12,010 --> 00:15:24,070
that have that came up ended up making

00:15:14,170 --> 00:15:29,320
uh making up some principles so and I

00:15:24,070 --> 00:15:33,970
can I can we test this it works yes okay

00:15:29,320 --> 00:15:36,130
so with this color code you can kind of

00:15:33,970 --> 00:15:38,290
see here that that how some of these got

00:15:36,130 --> 00:15:40,120
rated some of them some of them were

00:15:38,290 --> 00:15:44,290
rated good some of them are yeah buts

00:15:40,120 --> 00:15:46,990
like the yellow one here as some of them

00:15:44,290 --> 00:15:48,730
were withdrawn like this one oddly

00:15:46,990 --> 00:15:53,290
enough this one was withdrawn but we did

00:15:48,730 --> 00:15:56,709
it we didn't that happens you know

00:15:53,290 --> 00:15:58,529
several times you know on average you

00:15:56,709 --> 00:16:02,260
know their statistics again you know

00:15:58,529 --> 00:16:03,880
three three three point six one rfcs

00:16:02,260 --> 00:16:06,850
were written by each person but in fact

00:16:03,880 --> 00:16:12,070
a lot of people wrote one and a lot of

00:16:06,850 --> 00:16:13,870
people wrote enormous gobs of them what

00:16:12,070 --> 00:16:18,190
else can we say about about them as a

00:16:13,870 --> 00:16:19,839
whole you know most people were too

00:16:18,190 --> 00:16:21,700
hesitant to propose anything radical

00:16:19,839 --> 00:16:24,120
they just want to change one thing and

00:16:21,700 --> 00:16:26,380
then leave everything else the same

00:16:24,120 --> 00:16:28,240
there were some attractive nuisances

00:16:26,380 --> 00:16:30,250
everyone wants to Cole and you already

00:16:28,240 --> 00:16:32,260
know that one everyone else who wants to

00:16:30,250 --> 00:16:34,330
brackets there aren't that many brackets

00:16:32,260 --> 00:16:36,520
and ASCII folks especially you

00:16:34,330 --> 00:16:39,010
mathematicians with using square on one

00:16:36,520 --> 00:16:41,790
side and round on the other no no no you

00:16:39,010 --> 00:16:41,790
can't have those

00:16:43,170 --> 00:16:49,920
but it was proposed

00:16:46,110 --> 00:16:52,780
you know pragmas we all love pragmas

00:16:49,920 --> 00:16:56,290
especially RFC writers they love their

00:16:52,780 --> 00:16:59,250
pragmas and everything was solved with

00:16:56,290 --> 00:17:04,000
pragmas or with hooks quote unquote

00:16:59,250 --> 00:17:05,500
hooks you know hook means there's a

00:17:04,000 --> 00:17:09,580
conditional somewhere in the code that

00:17:05,500 --> 00:17:11,080
says if this hook is set call it and you

00:17:09,580 --> 00:17:13,330
get too many of those things all you do

00:17:11,080 --> 00:17:15,700
is test conditionals all day so hooks

00:17:13,330 --> 00:17:17,860
are kind of bad for performance

00:17:15,700 --> 00:17:24,220
fortunately the entire overloading

00:17:17,860 --> 00:17:25,480
system of Perl 5 is hooks so that's

00:17:24,220 --> 00:17:27,700
something that has changed but anyway

00:17:25,480 --> 00:17:35,400
let's actually look at some some RFC's

00:17:27,700 --> 00:17:35,400
here so 18 yeah if I can type

00:17:37,960 --> 00:17:46,570
okay that's probably sorry if you can't

00:17:42,309 --> 00:17:51,779
read that so that you know simple simple

00:17:46,570 --> 00:17:51,779
this is the form that they were in let's

00:17:51,960 --> 00:18:00,299
get a little bit of color highlighting

00:17:53,950 --> 00:18:04,049
there okay so this very simple construct

00:18:00,299 --> 00:18:04,049
inspired by the fourth language

00:18:05,100 --> 00:18:14,759
immediate subroutines well yeah it's not

00:18:09,039 --> 00:18:17,950
seems like a great idea but the fact is

00:18:14,759 --> 00:18:22,509
you know there's more powerful

00:18:17,950 --> 00:18:24,519
primitives and in particular we get

00:18:22,509 --> 00:18:28,860
ideas from the list family languages

00:18:24,519 --> 00:18:28,860
about macros and hygienic macros

00:18:39,820 --> 00:18:46,370
okay there we go

00:18:43,000 --> 00:18:52,690
and I told you this was going to be

00:18:46,370 --> 00:18:52,690
hand-to-mouth yeah

00:18:56,170 --> 00:19:03,640
so the first principle that my

00:19:00,490 --> 00:19:06,700
randomized came up with here which

00:19:03,640 --> 00:19:08,620
you've already seen is don't just do the

00:19:06,700 --> 00:19:10,330
first thing that occurs to you immediate

00:19:08,620 --> 00:19:12,580
subroutines I mean that it's an obvious

00:19:10,330 --> 00:19:15,430
thing to do have a subroutine that when

00:19:12,580 --> 00:19:17,050
you parse it cut you call it but it's

00:19:15,430 --> 00:19:22,210
not the most powerful thing we could be

00:19:17,050 --> 00:19:27,040
doing and so Perl 6 has hygienic macros

00:19:22,210 --> 00:19:30,790
instead you know we we did source

00:19:27,040 --> 00:19:32,170
filters in Perl 5 that's sort of the

00:19:30,790 --> 00:19:36,150
same problem it was kind of the first

00:19:32,170 --> 00:19:36,150
thing I thought of and it was a bad idea

00:19:36,360 --> 00:19:46,800
maybe since begun to recover from that

00:19:39,400 --> 00:19:49,420
so ok let's see the next one here

00:19:46,800 --> 00:19:53,610
translate in array context should return

00:19:49,420 --> 00:19:53,610
a histogram well

00:20:03,130 --> 00:20:08,929
in 36 nowadays we have other primitives

00:20:06,320 --> 00:20:11,510
that can do if you use comb you can

00:20:08,929 --> 00:20:16,370
chops up them to up into characters very

00:20:11,510 --> 00:20:18,830
quickly and if you use what's called doc

00:20:16,370 --> 00:20:20,419
classify it'll automatically classify

00:20:18,830 --> 00:20:23,720
and basically make a histogram for you

00:20:20,419 --> 00:20:26,090
so or put in just put into a bag and

00:20:23,720 --> 00:20:28,910
we'll make a histogram for you so that's

00:20:26,090 --> 00:20:31,640
that's what we would do now in Perl 6

00:20:28,910 --> 00:20:34,700
but the you know the thing is this this

00:20:31,640 --> 00:20:37,220
idea was in the Perl man page for years

00:20:34,700 --> 00:20:40,720
and years and years and nobody ever

00:20:37,220 --> 00:20:46,640
implemented it what does that say

00:20:40,720 --> 00:20:48,190
it says ya ain't gonna need it so just

00:20:46,640 --> 00:20:50,780
because somebody proposes a feature

00:20:48,190 --> 00:20:52,610
doesn't mean it has to go in you look at

00:20:50,780 --> 00:20:58,940
the use cases and we're we're always

00:20:52,610 --> 00:21:01,250
looking at use cases so see I can get

00:20:58,940 --> 00:21:07,250
there quicker by searching for bang yes

00:21:01,250 --> 00:21:10,070
data types semi finite lazy lists well

00:21:07,250 --> 00:21:13,330
many of you know let's see number that's

00:21:10,070 --> 00:21:13,330
number 24

00:21:19,160 --> 00:21:22,060
oh well

00:21:25,049 --> 00:21:27,919
be that way

00:21:28,320 --> 00:21:37,620
okay and this is one of those bye-bye

00:21:32,760 --> 00:21:39,870
Damien and so you know it was it was

00:21:37,620 --> 00:21:42,660
basically just a proposal that you could

00:21:39,870 --> 00:21:45,780
if you look at this whoops if you look

00:21:42,660 --> 00:21:49,190
at this here you can leave off the right

00:21:45,780 --> 00:21:54,000
side of a arrange that was the proposal

00:21:49,190 --> 00:21:57,930
and we debated that for a while and it

00:21:54,000 --> 00:21:59,550
we actually ended up making lists lazy

00:21:57,930 --> 00:22:02,250
throughout the whole language not just

00:21:59,550 --> 00:22:04,110
ranges and that turned out to be a good

00:22:02,250 --> 00:22:08,160
thing which we will probably get to

00:22:04,110 --> 00:22:12,830
unless I talk too slow but there's also

00:22:08,160 --> 00:22:12,830
a bad thing about this which is is why

00:22:14,210 --> 00:22:24,120
I'm talking about it which is one of the

00:22:20,760 --> 00:22:27,780
principles we discovered is what we call

00:22:24,120 --> 00:22:31,170
self blocking code and that is if you

00:22:27,780 --> 00:22:33,870
have things that are ambiguous after

00:22:31,170 --> 00:22:35,850
them like indirect objects it doesn't

00:22:33,870 --> 00:22:38,100
know whether it's just expect a term or

00:22:35,850 --> 00:22:40,710
an operator then you have a problem in

00:22:38,100 --> 00:22:42,870
your language having a having an

00:22:40,710 --> 00:22:45,030
operator here an infix operator with no

00:22:42,870 --> 00:22:47,010
right term is one of those things you

00:22:45,030 --> 00:22:48,510
can't just leave out a term because then

00:22:47,010 --> 00:22:54,840
the parser doesn't know what they're

00:22:48,510 --> 00:22:57,090
expected in ffice so this idea of self

00:22:54,840 --> 00:23:00,300
clocking what you see in UPC symbols

00:22:57,090 --> 00:23:02,190
that you scan with scanners there's

00:23:00,300 --> 00:23:03,960
other ways that it comes out natural

00:23:02,190 --> 00:23:05,720
languages but it turns out to be a very

00:23:03,960 --> 00:23:09,300
important thing for error error

00:23:05,720 --> 00:23:13,320
detection and a lot of our best errors

00:23:09,300 --> 00:23:16,650
in Perl 6 are because you it saw two

00:23:13,320 --> 00:23:18,960
terms in a row and and then figured out

00:23:16,650 --> 00:23:20,940
why there was two terms in a row so self

00:23:18,960 --> 00:23:23,660
clocking code is a very important

00:23:20,940 --> 00:23:23,660
principle for us

00:23:23,899 --> 00:23:32,029
okay let's see there's a there's a V I

00:23:28,950 --> 00:23:35,029
command Z dot yeah it's in the middle

00:23:32,029 --> 00:23:39,470
okay

00:23:35,029 --> 00:23:42,090
so simplify do blocks in that syntax

00:23:39,470 --> 00:23:44,340
this was an interesting thing because

00:23:42,090 --> 00:23:52,999
you know there's this this problem

00:23:44,340 --> 00:23:55,080
it's 167 and they said well you know

00:23:52,999 --> 00:23:59,100
once you make it so you can delete the

00:23:55,080 --> 00:24:02,460
semicolon after it and maybe maybe drop

00:23:59,100 --> 00:24:03,720
the do while you're at it we didn't drop

00:24:02,460 --> 00:24:06,239
the do because it actually means

00:24:03,720 --> 00:24:08,039
something but you know you have this

00:24:06,239 --> 00:24:10,049
problem in in Perl 5 all the time you

00:24:08,039 --> 00:24:11,929
can't quite remember which blocks have

00:24:10,049 --> 00:24:13,649
to have a suddenly colon which box don't

00:24:11,929 --> 00:24:17,489
well

00:24:13,649 --> 00:24:20,879
we fixed that and and we fixed it

00:24:17,489 --> 00:24:23,580
generally you know what's the RFC

00:24:20,879 --> 00:24:26,039
proposes a band-aid but what we really

00:24:23,580 --> 00:24:27,899
needed is an approach you know sort of a

00:24:26,039 --> 00:24:29,970
regrow your limbs approach here and so

00:24:27,899 --> 00:24:33,779
now in Perl 6 any any

00:24:29,970 --> 00:24:35,639
curly on the end of a line it implies

00:24:33,779 --> 00:24:38,070
the semicolon it implies the end of a

00:24:35,639 --> 00:24:40,049
statement and it doesn't matter whether

00:24:38,070 --> 00:24:46,109
it's a built in or not they're all all

00:24:40,049 --> 00:24:51,960
all the blocks are the same okay where's

00:24:46,109 --> 00:24:54,239
the next one here there it is standard

00:24:51,960 --> 00:24:56,759
Diane stand it out standard are blah

00:24:54,239 --> 00:24:59,249
blah should become scalars well that

00:24:56,759 --> 00:25:02,059
that's accepted let's see how how

00:24:59,249 --> 00:25:02,059
accepted it was

00:25:03,429 --> 00:25:07,839
okay well yeah it's a really great idea

00:25:05,739 --> 00:25:12,549
you know these are magical symbols that

00:25:07,839 --> 00:25:14,259
are global in every package you know how

00:25:12,549 --> 00:25:16,029
does that work well there's this magical

00:25:14,259 --> 00:25:17,619
list of exceptions if it's if you use

00:25:16,029 --> 00:25:20,609
this symbol it's not in the current

00:25:17,619 --> 00:25:26,710
package it's in the global package and

00:25:20,609 --> 00:25:28,929
you know the designer of parole was kind

00:25:26,710 --> 00:25:31,839
of an idiot when he was younger and he

00:25:28,929 --> 00:25:33,909
put put in lots of lots of lists of

00:25:31,839 --> 00:25:37,149
exceptions that you have to kind of

00:25:33,909 --> 00:25:38,799
memorize which which functions which one

00:25:37,149 --> 00:25:39,609
which functions take doll or underscore

00:25:38,799 --> 00:25:42,399
which ones don't

00:25:39,609 --> 00:25:46,769
for instance and this is another one of

00:25:42,399 --> 00:25:46,769
those lists you kind of have to know so

00:25:47,969 --> 00:25:51,479
another principle avoid lists of

00:25:50,169 --> 00:25:54,749
exceptions

00:25:51,479 --> 00:25:57,849
nowadays these these symbols are all

00:25:54,749 --> 00:25:59,169
specially marked they are scalars but

00:25:57,849 --> 00:26:02,769
they're also specially marked that they

00:25:59,169 --> 00:26:09,969
are Global's with a with a star twiddle

00:26:02,769 --> 00:26:14,759
as we call it so you know there's a bit

00:26:09,969 --> 00:26:14,759
more punctuation but it what

00:26:15,730 --> 00:26:23,769
oh yeah higher uh higher

00:26:20,620 --> 00:26:30,730
that's it higher higher I hear the voice

00:26:23,769 --> 00:26:36,039
of angels okay higher resolution time

00:26:30,730 --> 00:26:38,889
valleys yes you know all of these its

00:26:36,039 --> 00:26:41,019
proposing essentially that we should

00:26:38,889 --> 00:26:42,789
base time on on a real type and not

00:26:41,019 --> 00:26:45,370
integers and that's why this was

00:26:42,789 --> 00:26:46,870
accepted you know all these time tying

00:26:45,370 --> 00:26:49,330
systems that we have

00:26:46,870 --> 00:26:52,539
they have number of seconds plus number

00:26:49,330 --> 00:26:54,100
of milliseconds oh no wait that's not

00:26:52,539 --> 00:26:55,779
good enough we'll do number of seconds

00:26:54,100 --> 00:26:56,559
plus number of microseconds oh wait

00:26:55,779 --> 00:26:58,389
that's not good enough

00:26:56,559 --> 00:26:59,860
now we'll do number of seconds plus

00:26:58,389 --> 00:27:02,830
number of nanoseconds that we'll share

00:26:59,860 --> 00:27:04,090
should be good enough for anyone why

00:27:02,830 --> 00:27:07,690
does it keep happening because people

00:27:04,090 --> 00:27:11,409
think of integers and thinking too long

00:27:07,690 --> 00:27:13,090
too low of level time is as we perceive

00:27:11,409 --> 00:27:15,929
it continuous so it should use a

00:27:13,090 --> 00:27:19,179
continuous real type like floating point

00:27:15,929 --> 00:27:22,539
so and you know your floating point in

00:27:19,179 --> 00:27:24,909
idea can can extend to as much precision

00:27:22,539 --> 00:27:28,690
as far in the future and as far back as

00:27:24,909 --> 00:27:31,269
you care to go we that you can pack a

00:27:28,690 --> 00:27:34,830
lot of seconds and nanoseconds into a

00:27:31,269 --> 00:27:34,830
floating point so

00:27:37,660 --> 00:27:43,880
principal think ahead it's like you know

00:27:42,110 --> 00:27:45,560
if you see yourself making the same

00:27:43,880 --> 00:27:47,680
mistake over and over again make a

00:27:45,560 --> 00:27:55,810
different mistake

00:27:47,680 --> 00:27:55,810
so they're real and they're opaque

00:27:56,950 --> 00:27:59,730
okay

00:28:04,510 --> 00:28:14,450
alternative array and hash slicing means

00:28:09,050 --> 00:28:19,010
this this one it's blue it presents a

00:28:14,450 --> 00:28:21,020
real problem but we blue wait no pun

00:28:19,010 --> 00:28:24,770
intended we blue way past it in solving

00:28:21,020 --> 00:28:26,809
it in terms of of sigils that are

00:28:24,770 --> 00:28:29,270
invariant they don't they don't they

00:28:26,809 --> 00:28:32,600
don't change as you do reference things

00:28:29,270 --> 00:28:38,720
and consistent the way references work

00:28:32,600 --> 00:28:40,160
consistently in in Perl 6 either

00:28:38,720 --> 00:28:42,860
everything is a reference or nothing is

00:28:40,160 --> 00:28:44,150
a reference so you don't have to worry

00:28:42,860 --> 00:28:51,410
about whether it's a reference or not

00:28:44,150 --> 00:28:54,200
most of the time yeah so yeah it turns

00:28:51,410 --> 00:28:56,510
out that now a subscript in Perl 6 is

00:28:54,200 --> 00:28:58,340
just a single element slice so you

00:28:56,510 --> 00:29:01,280
there's no difference everything is a

00:28:58,340 --> 00:29:03,020
slice basically it's just it knows if

00:29:01,280 --> 00:29:07,250
this one element it's a single element

00:29:03,020 --> 00:29:08,929
slice subscript and optimizer you know

00:29:07,250 --> 00:29:14,330
usually has enough information to make

00:29:08,929 --> 00:29:16,010
that fast or at least less slow so you

00:29:14,330 --> 00:29:17,960
know we've looked up for a lot of

00:29:16,010 --> 00:29:20,420
unifications this is just one example of

00:29:17,960 --> 00:29:23,090
Univ unification of two different ideas

00:29:20,420 --> 00:29:25,940
that can be combined and sometimes doing

00:29:23,090 --> 00:29:28,780
that simplifies things and sometimes it

00:29:25,940 --> 00:29:28,780
doesn't cost very much

00:29:33,460 --> 00:29:37,920
I've made it from I shouldn't think a

00:29:35,020 --> 00:29:42,010
mackerel of that shouldn't die okay

00:29:37,920 --> 00:29:44,830
multi-line comments this was one RFC

00:29:42,010 --> 00:29:48,130
there's another RFC that says embedded

00:29:44,830 --> 00:29:49,120
comments and it turns out that you know

00:29:48,130 --> 00:29:51,280
you can just go there's another

00:29:49,120 --> 00:29:53,380
unification you can say let's let's have

00:29:51,280 --> 00:29:56,380
the same construct for both so we

00:29:53,380 --> 00:29:57,820
introduced a a multi-line comment that

00:29:56,380 --> 00:30:04,020
also works for embedded comments you

00:29:57,820 --> 00:30:04,020
just need a beginning and an end so if I

00:30:08,070 --> 00:30:18,810
say I or they put the back ticket a

00:30:15,970 --> 00:30:18,810
funny place here

00:30:22,660 --> 00:30:35,740
I should work well it's here

00:30:28,690 --> 00:30:39,460
yeah okay there's a bug short program

00:30:35,740 --> 00:30:41,620
that still has a bug anyway principal

00:30:39,460 --> 00:30:43,420
kill two weird birds with one stone if

00:30:41,620 --> 00:30:50,580
you can another way of talking about

00:30:43,420 --> 00:30:54,030
unification so that's our next one here

00:30:50,580 --> 00:30:58,200
whoops that's not it

00:30:54,030 --> 00:30:58,200
lexical variables made default

00:31:04,369 --> 00:31:12,450
this is basically just a proposal to

00:31:07,679 --> 00:31:14,909
make strict bars the default and you

00:31:12,450 --> 00:31:18,599
know there's some confusion about the

00:31:14,909 --> 00:31:20,099
the nature of dynamic versus lexical

00:31:18,599 --> 00:31:22,409
variables in the end the thing but by

00:31:20,099 --> 00:31:24,539
and large you know if it's green which

00:31:22,409 --> 00:31:30,539
says we accept this idea maybe your

00:31:24,539 --> 00:31:33,950
solution was bogus but but this is a

00:31:30,539 --> 00:31:38,399
good idea so I mean this is what we did

00:31:33,950 --> 00:31:40,080
and you know you can there's a lot of

00:31:38,399 --> 00:31:45,089
discussion about whether it should be

00:31:40,080 --> 00:31:48,809
the default but since since we made this

00:31:45,089 --> 00:31:52,739
pick almost nobody in the Perl 6

00:31:48,809 --> 00:31:54,960
community has has regretted it it makes

00:31:52,739 --> 00:31:59,429
it really nice you always find your

00:31:54,960 --> 00:32:01,950
typos very fast and there's just lots of

00:31:59,429 --> 00:32:04,169
benefits for declaring your variables we

00:32:01,950 --> 00:32:08,700
can still relax that and and there's

00:32:04,169 --> 00:32:10,619
work on that right now but you know that

00:32:08,700 --> 00:32:12,210
this idea of picking the right default

00:32:10,619 --> 00:32:13,679
there's a lot of places where I kind of

00:32:12,210 --> 00:32:19,830
picked the wrong default in the early

00:32:13,679 --> 00:32:24,109
design of Perl so you know you I could

00:32:19,830 --> 00:32:24,109
go on about that I probably will

00:32:25,760 --> 00:32:31,140
more functions from set theory to

00:32:28,590 --> 00:32:39,600
manipulate arrays well you say this is

00:32:31,140 --> 00:32:41,730
one of those yeah but ones what's the

00:32:39,600 --> 00:32:44,520
problem with this well problem is arrays

00:32:41,730 --> 00:32:46,890
are not very much like sets I mean they

00:32:44,520 --> 00:32:48,780
seem like a set of things in them but

00:32:46,890 --> 00:32:51,420
you could have duplicates you can't have

00:32:48,780 --> 00:32:53,940
duplicates in the set a set is actually

00:32:51,420 --> 00:32:56,550
more like the keys of a hash and the

00:32:53,940 --> 00:33:00,870
interface to us a set actually in Perl 6

00:32:56,550 --> 00:33:04,230
works much more like a a much more like

00:33:00,870 --> 00:33:06,570
a a hash than it does a we have a hash

00:33:04,230 --> 00:33:08,460
that just happens to map to billions and

00:33:06,570 --> 00:33:09,750
if it's true it's in the set if it's

00:33:08,460 --> 00:33:11,340
false it's out of the set and it

00:33:09,750 --> 00:33:14,210
actually automatically deletes it from

00:33:11,340 --> 00:33:17,370
the hash of that of the set side

00:33:14,210 --> 00:33:19,440
similarly with bags is just Maps the

00:33:17,370 --> 00:33:27,900
keys to a number of how many elements

00:33:19,440 --> 00:33:30,320
there are in the bag and so principle

00:33:27,900 --> 00:33:34,650
there you know watch out for XY problems

00:33:30,320 --> 00:33:39,300
and you you notice XY problems when

00:33:34,650 --> 00:33:43,980
somebody asks I want to solve this using

00:33:39,300 --> 00:33:45,450
that and often you have to it is very

00:33:43,980 --> 00:33:47,490
difficult off and if you're interacting

00:33:45,450 --> 00:33:49,110
with them to break them out of the idea

00:33:47,490 --> 00:33:51,780
that they have to use that to solve this

00:33:49,110 --> 00:33:53,760
just tell me your problem and I'll tell

00:33:51,780 --> 00:33:57,420
you what what the better way to solve it

00:33:53,760 --> 00:33:59,480
is don't solve what with arrays but this

00:33:57,420 --> 00:34:02,070
is you know just assuming that the

00:33:59,480 --> 00:34:04,550
arrays of the right way to represent

00:34:02,070 --> 00:34:04,550
sets

00:34:13,430 --> 00:34:19,640
file handle should use star as a type

00:34:17,480 --> 00:34:23,300
prefix if type clubs are eliminated well

00:34:19,640 --> 00:34:26,770
in fact we did we did use we did

00:34:23,300 --> 00:34:29,960
eliminate type type clubs in Perl 6

00:34:26,770 --> 00:34:33,140
thankfully but we stole star for

00:34:29,960 --> 00:34:36,350
something else as a term so we can't use

00:34:33,140 --> 00:34:38,980
it for a sigil it turns out to be a very

00:34:36,350 --> 00:34:38,980
handy thing

00:34:49,280 --> 00:34:51,850
Wow

00:34:52,570 --> 00:34:59,950
strange keyboard it turns out to be a

00:34:57,460 --> 00:35:02,200
very handy thing that what we do use

00:34:59,950 --> 00:35:05,260
star for but don't have time to go into

00:35:02,200 --> 00:35:09,700
that it worked much more than type clubs

00:35:05,260 --> 00:35:11,320
or star as a sigil and basically you

00:35:09,700 --> 00:35:15,100
can't have enough stitches to classify

00:35:11,320 --> 00:35:18,330
everything the type system should handle

00:35:15,100 --> 00:35:21,570
the defined gradations of meaning

00:35:18,330 --> 00:35:25,420
separate from sigil signals are for

00:35:21,570 --> 00:35:27,340
representing large-scale concepts like

00:35:25,420 --> 00:35:34,270
this is associative or this is

00:35:27,340 --> 00:35:37,740
positional which many types share we

00:35:34,270 --> 00:35:37,740
call those roles now

00:35:41,180 --> 00:35:44,920
okay module scope control

00:35:47,760 --> 00:35:58,010
well that's the same one this is you

00:35:53,190 --> 00:36:01,380
know it's it's it's the it's importing

00:35:58,010 --> 00:36:03,210
having control of your imports such that

00:36:01,380 --> 00:36:06,390
they go into your your lexical scope

00:36:03,210 --> 00:36:08,340
rather than into the package scope which

00:36:06,390 --> 00:36:12,090
you know in Perl 5 you import in the

00:36:08,340 --> 00:36:15,690
package scope but we fixed that rather

00:36:12,090 --> 00:36:19,200
than by making an option as this

00:36:15,690 --> 00:36:21,420
proposed we actually you know just fixed

00:36:19,200 --> 00:36:24,990
it by making a direct default by default

00:36:21,420 --> 00:36:26,880
is import lexically into Perl 6 so you

00:36:24,990 --> 00:36:29,100
don't get this mysterious action at a

00:36:26,880 --> 00:36:32,850
distance that sometimes plagues global

00:36:29,100 --> 00:36:35,220
variables Perl resource configuration

00:36:32,850 --> 00:36:36,480
well we can learn something from the

00:36:35,220 --> 00:36:41,670
things that were except that we can also

00:36:36,480 --> 00:36:44,880
learn something from the RFC's that we

00:36:41,670 --> 00:36:46,950
rejected this is basically let's have an

00:36:44,880 --> 00:36:51,869
RC file what do you think that means run

00:36:46,950 --> 00:36:54,270
commands or resource configurations the

00:36:51,869 --> 00:36:56,520
problem with our C files is you make

00:36:54,270 --> 00:36:59,580
changes to them and suddenly your

00:36:56,520 --> 00:37:01,800
program is in in different language than

00:36:59,580 --> 00:37:07,580
it thinks it is the parser gets very

00:37:01,800 --> 00:37:10,980
confused and one of our principles that

00:37:07,580 --> 00:37:14,310
we kind of override other other

00:37:10,980 --> 00:37:17,240
principles is we always must know what

00:37:14,310 --> 00:37:19,590
language were in when we're parsing

00:37:17,240 --> 00:37:24,300
that's why we don't do to pass parsing

00:37:19,590 --> 00:37:27,060
so it's ok if you're the language you're

00:37:24,300 --> 00:37:33,119
in is intentionally generic but

00:37:27,060 --> 00:37:38,250
accidental generosity generosity is is a

00:37:33,119 --> 00:37:40,410
bad thing you want to know how much your

00:37:38,250 --> 00:37:44,910
your language is general and how much

00:37:40,410 --> 00:37:46,320
was specific and otherwise the computer

00:37:44,910 --> 00:37:51,269
is going to get confused and so we'll

00:37:46,320 --> 00:37:53,809
use so that was turned out

00:37:51,269 --> 00:37:53,809
okay

00:37:56,990 --> 00:38:06,349
all right object class hooks into this

00:38:04,430 --> 00:38:09,410
one is Mark community not because it's

00:38:06,349 --> 00:38:10,970
not a technical thing but because the

00:38:09,410 --> 00:38:12,859
community things are things I've

00:38:10,970 --> 00:38:16,220
deferred to other people to worry about

00:38:12,859 --> 00:38:17,960
and not me and in fact the principle as

00:38:16,220 --> 00:38:19,849
Larry is not indifferent I don't

00:38:17,960 --> 00:38:25,040
actually know if this is implemented the

00:38:19,849 --> 00:38:28,820
way that this RFC is I I don't know how

00:38:25,040 --> 00:38:31,180
printf works in Perl 6 right now and

00:38:28,820 --> 00:38:31,180
that's okay

00:38:31,760 --> 00:38:37,040
I suspect they have some system like

00:38:34,280 --> 00:38:39,460
this but I can't just worry about

00:38:37,040 --> 00:38:42,950
everything

00:38:39,460 --> 00:38:46,250
okay here there's another one operators

00:38:42,950 --> 00:38:49,070
polymorphic comparisons proposes that we

00:38:46,250 --> 00:38:51,020
overload equal equal to do generic

00:38:49,070 --> 00:38:53,510
comparison flow if it's two strings it

00:38:51,020 --> 00:38:56,300
does a string comparison if it's two you

00:38:53,510 --> 00:38:58,550
know it's basically steal it from the

00:38:56,300 --> 00:39:04,369
numeric comparison that you're familiar

00:38:58,550 --> 00:39:08,960
with and so that one is kind of left

00:39:04,369 --> 00:39:11,140
behind in the dust because under the

00:39:08,960 --> 00:39:13,760
principle that we stick with pearls

00:39:11,140 --> 00:39:15,530
operator rich philosophy if you need

00:39:13,760 --> 00:39:17,510
more operators define more operators

00:39:15,530 --> 00:39:20,410
that are that work on the types and

00:39:17,510 --> 00:39:23,180
course so we still keep the numeric

00:39:20,410 --> 00:39:25,940
equality in comparison we keep the

00:39:23,180 --> 00:39:27,500
string comparisons and we keep those

00:39:25,940 --> 00:39:29,180
separate from the generic comparisons

00:39:27,500 --> 00:39:31,640
there's another a third rank of

00:39:29,180 --> 00:39:34,940
operators corresponding to those which

00:39:31,640 --> 00:39:37,070
are generic comparisons in fact we stole

00:39:34,940 --> 00:39:39,680
CMP to be the generic comparison and

00:39:37,070 --> 00:39:44,359
string comparison is now LNG for less

00:39:39,680 --> 00:39:46,750
than equal or greater so I guess Perl 6

00:39:44,359 --> 00:39:46,750
has legs

00:39:47,760 --> 00:39:55,290
because they're falling asleep and it's

00:39:50,020 --> 00:39:58,690
my fault okay

00:39:55,290 --> 00:40:02,110
brace matching for parole regular

00:39:58,690 --> 00:40:06,160
expressions this one is also kind of

00:40:02,110 --> 00:40:09,280
rejected because it's a very special

00:40:06,160 --> 00:40:14,890
specialized tool and it turns out that

00:40:09,280 --> 00:40:16,840
we have you know more more important or

00:40:14,890 --> 00:40:17,350
more general tools that will do the same

00:40:16,840 --> 00:40:20,350
thing

00:40:17,350 --> 00:40:22,270
we got grammars and recursive Fredrik

00:40:20,350 --> 00:40:24,610
TSA's and everything all that sort of

00:40:22,270 --> 00:40:26,710
stuff out the wazoo that makes it you

00:40:24,610 --> 00:40:28,390
you should just do brace matching the

00:40:26,710 --> 00:40:30,100
way the Pearl six grammar does it

00:40:28,390 --> 00:40:31,510
because the pearls likes grammar is

00:40:30,100 --> 00:40:35,350
written in Perl regular expressions now

00:40:31,510 --> 00:40:42,160
so you know don't buy that special tool

00:40:35,350 --> 00:40:44,260
you see on TV okay you know I've kind of

00:40:42,160 --> 00:40:49,510
run a low on time your song's gonna dash

00:40:44,260 --> 00:40:54,670
through and and and pop up whoops that's

00:40:49,510 --> 00:40:56,080
not what I wanted hang things on the

00:40:54,670 --> 00:40:59,020
right peg there's just an awful lot of

00:40:56,080 --> 00:41:00,970
things no the special variables they're

00:40:59,020 --> 00:41:02,680
all Global's no they should most of them

00:41:00,970 --> 00:41:04,720
be object attributes hang things on the

00:41:02,680 --> 00:41:06,610
right peg and then you don't have to

00:41:04,720 --> 00:41:09,690
worry about it threading works better if

00:41:06,610 --> 00:41:09,690
you hang things on the right peg

00:41:12,039 --> 00:41:20,509
if your kind of generalized do it okay

00:41:15,199 --> 00:41:22,119
you know the a lot of these RFC's were

00:41:20,509 --> 00:41:28,009
kind of half-measures

00:41:22,119 --> 00:41:31,549
and and you know we we now have a very

00:41:28,009 --> 00:41:34,189
general way of pulling in foreign

00:41:31,549 --> 00:41:36,949
objects through what we call

00:41:34,189 --> 00:41:39,829
representational polymorphism that's

00:41:36,949 --> 00:41:42,529
very general it's so generally you don't

00:41:39,829 --> 00:41:45,079
even know what it means but it's

00:41:42,529 --> 00:41:47,119
important concept in Perl 6 meaning we

00:41:45,079 --> 00:41:48,890
even hide and when you define a class

00:41:47,119 --> 00:41:51,499
and you have the attributes in it

00:41:48,890 --> 00:41:53,299
we even hide how those things are stored

00:41:51,499 --> 00:41:54,439
from the class itself I mean there's

00:41:53,299 --> 00:41:56,509
things that are private at the class

00:41:54,439 --> 00:41:58,249
this is more private than that the class

00:41:56,509 --> 00:42:01,219
doesn't even know how it's stored the

00:41:58,249 --> 00:42:04,910
representation tells the class how to

00:42:01,219 --> 00:42:07,640
store it stuff and that's a that's a

00:42:04,910 --> 00:42:10,699
very general very powerful concept it

00:42:07,640 --> 00:42:13,099
means we can just pull C and whatever

00:42:10,699 --> 00:42:16,909
structs in and just use them without

00:42:13,099 --> 00:42:22,759
having to translate them to Perl 5

00:42:16,909 --> 00:42:26,979
objects which is slow to hashes which is

00:42:22,759 --> 00:42:31,699
also slow in Perl 6 ok new pragma sculpt

00:42:26,979 --> 00:42:33,559
do what I mean Auto declarations Auto

00:42:31,699 --> 00:42:39,349
declarations we decided they were evil

00:42:33,559 --> 00:42:41,089
because the dim doesn't keep default

00:42:39,349 --> 00:42:45,679
Perl free from constraints such as

00:42:41,089 --> 00:42:47,269
warnings and strict yeah people really

00:42:45,679 --> 00:42:49,689
do get attached that they're sloppy

00:42:47,269 --> 00:42:49,689
thinking

00:42:53,200 --> 00:42:59,580
multi-way comparisons they don't work in

00:42:56,350 --> 00:42:59,580
Perl 5

00:43:05,440 --> 00:43:08,670
let's see

00:43:09,640 --> 00:43:16,660
nope I don't have time to demonstrate

00:43:12,309 --> 00:43:22,480
you know if you if you do multi way

00:43:16,660 --> 00:43:27,640
comparisons in in Perl 6 you can say say

00:43:22,480 --> 00:43:31,869
1 is less than 2 is less than 3 and we

00:43:27,640 --> 00:43:36,940
can say 1 is less than 2 equals 2 plus

00:43:31,869 --> 00:43:39,549
than 3 and that's true if they say 3 is

00:43:36,940 --> 00:43:41,259
false but it will return of C well I'm

00:43:39,549 --> 00:43:44,650
not might be false if you try this sort

00:43:41,259 --> 00:43:46,450
of thing in Perl it it does both of the

00:43:44,650 --> 00:43:48,819
inequalities before it does the

00:43:46,450 --> 00:43:52,390
qualities because the precedents and so

00:43:48,819 --> 00:43:54,700
well what we had to do was combine

00:43:52,390 --> 00:43:56,619
precedence levels we were we had to

00:43:54,700 --> 00:43:59,609
question the authority of the C language

00:43:56,619 --> 00:44:02,980
to dictate our precedents levels

00:43:59,609 --> 00:44:05,339
separating those didn't by much putting

00:44:02,980 --> 00:44:12,599
them together means you can string those

00:44:05,339 --> 00:44:12,599
comparisons together okay that's not

00:44:22,790 --> 00:44:25,780
it's broken

00:44:29,620 --> 00:44:34,300
something is

00:44:32,660 --> 00:44:38,880
well

00:44:34,300 --> 00:44:38,880
yeah I'm getting out of time here let's

00:44:39,240 --> 00:44:42,810
go down to the end

00:44:43,620 --> 00:44:50,470
one should not get away with ignoring

00:44:46,060 --> 00:44:53,080
system errors there are no pearls should

00:44:50,470 --> 00:45:00,520
state pearl that's the good one now this

00:44:53,080 --> 00:45:02,110
is a very funny one because it is done

00:45:00,520 --> 00:45:07,360
done early

00:45:02,110 --> 00:45:09,430
number 28 let's look at it and I said

00:45:07,360 --> 00:45:12,840
you know my initial reaction to that is

00:45:09,430 --> 00:45:12,840
yeah Pearl's just a pearl

00:45:17,450 --> 00:45:22,010
we've got a golden opportunity so Simon

00:45:20,299 --> 00:45:27,319
here to turn pearl into whatever on

00:45:22,010 --> 00:45:30,290
earth we like let's not take it this is

00:45:27,319 --> 00:45:33,650
just a wonderful RFC III level I just

00:45:30,290 --> 00:45:37,839
absolutely love it because it

00:45:33,650 --> 00:45:42,500
simultaneously so right and so wrong you

00:45:37,839 --> 00:45:44,270
know all of these other principles and

00:45:42,500 --> 00:45:46,760
difficulties the problems that all these

00:45:44,270 --> 00:45:48,680
RFC's pointed out we need to fix many of

00:45:46,760 --> 00:45:50,780
them as we could we didn't want to do

00:45:48,680 --> 00:45:53,270
like Python it just timidly fix a few

00:45:50,780 --> 00:45:54,950
three few things and then still stick us

00:45:53,270 --> 00:45:57,950
get stuck with an incompatible version

00:45:54,950 --> 00:45:59,450
you know they're still fighting well we

00:45:57,950 --> 00:46:01,910
should switch to three dot oh no we

00:45:59,450 --> 00:46:05,450
cannot and they did it for such paltry

00:46:01,910 --> 00:46:08,000
reasons I'm so glad we said let's break

00:46:05,450 --> 00:46:09,440
everything that ought to be broken even

00:46:08,000 --> 00:46:10,549
if we took tickle a little longer

00:46:09,440 --> 00:46:16,549
because we're gonna end up with

00:46:10,549 --> 00:46:18,920
something much better so it's funny

00:46:16,549 --> 00:46:21,020
because the the he talks about the the

00:46:18,920 --> 00:46:24,250
attractive nuisances here that we should

00:46:21,020 --> 00:46:28,549
watch out for the object orientation

00:46:24,250 --> 00:46:30,260
well you know pearl six is object

00:46:28,549 --> 00:46:31,609
everything is an object you don't have

00:46:30,260 --> 00:46:34,730
to think of it that way but everything

00:46:31,609 --> 00:46:37,130
is strong typing well you know we have

00:46:34,730 --> 00:46:40,010
gradual typing but it's you know you can

00:46:37,130 --> 00:46:43,010
use it for strong typing functional

00:46:40,010 --> 00:46:46,549
programming Perl 6 is also through and

00:46:43,010 --> 00:46:48,170
through a functional programming not not

00:46:46,549 --> 00:46:50,119
not as a religion I mean it doesn't

00:46:48,170 --> 00:46:54,260
force you to do everything that with

00:46:50,119 --> 00:46:55,460
immutables but it leans that way it

00:46:54,260 --> 00:47:02,349
encourages you to do functional

00:46:55,460 --> 00:47:06,290
programming making parsing easier Perl 6

00:47:02,349 --> 00:47:10,400
the parser is written in Perl 6 it is

00:47:06,290 --> 00:47:13,460
now good at parsing itself I wouldn't

00:47:10,400 --> 00:47:17,290
try to parse Perl 5 in Perl 5 I mean

00:47:13,460 --> 00:47:17,290
there are people crazy like Adam but

00:47:18,430 --> 00:47:25,060
so in these two of these specifics yes

00:47:22,130 --> 00:47:25,060
we went raving mad

00:47:26,440 --> 00:47:31,700
nevertheless it's all of these

00:47:29,810 --> 00:47:34,400
principles that we were following that

00:47:31,700 --> 00:47:40,100
kind of stem from pro/5 in the first

00:47:34,400 --> 00:47:43,910
place and the way the way I think is why

00:47:40,100 --> 00:47:46,520
Perl 6 is still Perl and Perl 5 is Perl

00:47:43,910 --> 00:47:47,780
and they're both sister languages or

00:47:46,520 --> 00:47:55,820
maybe a mother daughter languages I

00:47:47,780 --> 00:47:59,350
don't know and so it's those it's those

00:47:55,820 --> 00:48:01,340
principles but that highest together and

00:47:59,350 --> 00:48:05,450
you know we have we have cultural

00:48:01,340 --> 00:48:07,580
differences and the the Perl 5 Perl 6

00:48:05,450 --> 00:48:09,710
divide kind of emphasizes some of those

00:48:07,580 --> 00:48:11,480
cultural differences but we also went

00:48:09,710 --> 00:48:15,710
not just to Walt Disney World but we

00:48:11,480 --> 00:48:18,620
went to Epcot Center and you know it's

00:48:15,710 --> 00:48:21,620
kind of a key they at least got

00:48:18,620 --> 00:48:23,330
Nationals from each country again so the

00:48:21,620 --> 00:48:29,300
least the people are real even if the

00:48:23,330 --> 00:48:32,210
the the national flavor of each spot is

00:48:29,300 --> 00:48:33,710
a little shaky but you know they're

00:48:32,210 --> 00:48:35,360
trying to demonstrate something that

00:48:33,710 --> 00:48:38,930
different cultures can get together and

00:48:35,360 --> 00:48:42,740
and show how they are different and

00:48:38,930 --> 00:48:47,630
still keep their common bond

00:48:42,740 --> 00:48:50,390
you know Disney believes you know that

00:48:47,630 --> 00:48:53,480
the individual national culture national

00:48:50,390 --> 00:48:55,220
cultures are wonderful if Disney we're

00:48:53,480 --> 00:48:57,410
live to eat live he believed that both

00:48:55,220 --> 00:49:01,640
Perl 5 and Perl 6 are wonderful in their

00:48:57,410 --> 00:49:04,040
own way and he also believes that is a

00:49:01,640 --> 00:49:07,630
small world after all and we're all in

00:49:04,040 --> 00:49:07,630

YouTube URL: https://www.youtube.com/watch?v=mxLIQxSda0E


