Title: Nick Patch (patch) - Hello, my name is _______.
Publication date: 2015-06-16
Playlist: YAPC::NA 2015
Description: 
	Ballroom A - Little America Hotel
Captions: 
	00:02:47,450 --> 00:02:59,930
hey everybody can you hear me test us

00:02:55,080 --> 00:03:04,590
check check all good back there okay

00:02:59,930 --> 00:03:06,270
welcome to hello my name is this is a

00:03:04,590 --> 00:03:08,760
new talk first time I've given it and

00:03:06,270 --> 00:03:11,820
I'm really excited to be here today this

00:03:08,760 --> 00:03:13,910
is my eighth gap see and I think maybe

00:03:11,820 --> 00:03:18,930
fourth or fifth times speaking here I

00:03:13,910 --> 00:03:20,760
I'm Nick patch and a lot of the talks

00:03:18,930 --> 00:03:23,120
I've given here before have been related

00:03:20,760 --> 00:03:25,980
to unicode internationalization

00:03:23,120 --> 00:03:29,580
localization there was the fundamental

00:03:25,980 --> 00:03:32,070
unicode talk i as well as localization

00:03:29,580 --> 00:03:34,740
with the unicode CLD arm all of them

00:03:32,070 --> 00:03:36,870
very broad topics I that I'm deeply

00:03:34,740 --> 00:03:39,140
interested in as I in

00:03:36,870 --> 00:03:44,610
internationalization engineer at

00:03:39,140 --> 00:03:49,050
shutterstock but this talk is going to

00:03:44,610 --> 00:03:53,310
be much more specific namely it's going

00:03:49,050 --> 00:03:55,050
to be about names and accepting names of

00:03:53,310 --> 00:03:57,300
people all over the world that you may

00:03:55,050 --> 00:04:00,630
encounter in your web applications and

00:03:57,300 --> 00:04:02,760
software I and displaying them correctly

00:04:00,630 --> 00:04:07,230
for them because names are so personal

00:04:02,760 --> 00:04:11,280
to everyone's identity I that they want

00:04:07,230 --> 00:04:13,380
to be you know they want to be seen in a

00:04:11,280 --> 00:04:15,630
certain way seeing with their own names

00:04:13,380 --> 00:04:20,820
and when we can't provide that for them

00:04:15,630 --> 00:04:23,280
well we're not respecting our users so

00:04:20,820 --> 00:04:25,710
I'm feel free to get in touch with me

00:04:23,280 --> 00:04:29,790
after this at Nick patch at Twitter or

00:04:25,710 --> 00:04:31,830
heckle me during the talk I'm going to

00:04:29,790 --> 00:04:38,820
provide plenty of time at the end for

00:04:31,830 --> 00:04:41,760
questions and answers so why don't you

00:04:38,820 --> 00:04:44,490
support my name I there are some people

00:04:41,760 --> 00:04:46,110
at this conference who I commonly have

00:04:44,490 --> 00:04:48,270
trouble in putting their names and I'll

00:04:46,110 --> 00:04:51,830
get to them but they're generally two

00:04:48,270 --> 00:04:55,349
issues with names one of them is

00:04:51,830 --> 00:04:57,390
unintentional bugs encoding bugs that's

00:04:55,349 --> 00:04:59,420
a big one and I've discussed that here

00:04:57,390 --> 00:05:02,990
in the past and how to

00:04:59,420 --> 00:05:05,360
in d code correctly in Perl fortunately

00:05:02,990 --> 00:05:12,950
I once you know how to do it it's really

00:05:05,360 --> 00:05:15,200
easy and then the other is uninformed

00:05:12,950 --> 00:05:17,960
decisions a lot of people just don't

00:05:15,200 --> 00:05:20,620
realize how many different types of

00:05:17,960 --> 00:05:23,420
names there are in the world I both in

00:05:20,620 --> 00:05:25,910
different languages and countries and

00:05:23,420 --> 00:05:29,600
just diversity of names in your own

00:05:25,910 --> 00:05:38,270
country so these will be the two main

00:05:29,600 --> 00:05:40,490
things we go over today so when people

00:05:38,270 --> 00:05:43,160
are developing software and testing

00:05:40,490 --> 00:05:45,050
software well they're using real data to

00:05:43,160 --> 00:05:47,510
test it they're writing their unit tests

00:05:45,050 --> 00:05:49,730
sometimes integration or acceptance

00:05:47,510 --> 00:05:53,600
tests doing developer testing maybe

00:05:49,730 --> 00:05:55,550
you've got a QA testers but a lot of

00:05:53,600 --> 00:05:57,920
times people test with data that they

00:05:55,550 --> 00:06:00,500
know they test with names that they know

00:05:57,920 --> 00:06:03,140
so you know you'll commonly have people

00:06:00,500 --> 00:06:05,480
typing in Jacob and Emily and Bob and

00:06:03,140 --> 00:06:07,400
just common names to them but there are

00:06:05,480 --> 00:06:11,450
so many other names out there so it's

00:06:07,400 --> 00:06:13,700
important to I start testing with other

00:06:11,450 --> 00:06:18,800
names and seeing with where your

00:06:13,700 --> 00:06:24,350
software breaks and fixing it I one

00:06:18,800 --> 00:06:27,440
problem is that we with our American

00:06:24,350 --> 00:06:30,860
qwerty keyboard or Dvorak if you're into

00:06:27,440 --> 00:06:33,380
that I it's not easy to type non-ascii

00:06:30,860 --> 00:06:35,750
characters it's just not at our

00:06:33,380 --> 00:06:38,180
fingertips all the time so it's easier

00:06:35,750 --> 00:06:40,610
to test without it even if you know you

00:06:38,180 --> 00:06:43,940
should be testing with it this here is

00:06:40,610 --> 00:06:47,240
an Icelandic keyboard where you can type

00:06:43,940 --> 00:06:48,980
in any of the Northern European

00:06:47,240 --> 00:06:52,460
languages many of the Western European

00:06:48,980 --> 00:06:55,970
languages including Norwegian Danish

00:06:52,460 --> 00:06:58,450
Swedish Finnish but most developers

00:06:55,970 --> 00:07:02,270
don't have this on their desktop I

00:06:58,450 --> 00:07:10,220
actually I like what I would call this

00:07:02,270 --> 00:07:13,100
the Thayer T keyboard and you definitely

00:07:10,220 --> 00:07:20,060
probably don't have one of these

00:07:13,100 --> 00:07:30,460
aight aight keyboard so can anyone tell

00:07:20,060 --> 00:07:38,000
me what this is does anyone know it says

00:07:30,460 --> 00:07:40,970
so this is japanese mo jewbacca which I

00:07:38,000 --> 00:07:44,090
is now the latinized version of it is

00:07:40,970 --> 00:07:47,870
the common name for just I corrupted or

00:07:44,090 --> 00:07:51,050
missing coded characters I when you have

00:07:47,870 --> 00:07:53,480
characters in one encoding and then you

00:07:51,050 --> 00:07:56,300
display it in another encoding you get

00:07:53,480 --> 00:08:01,790
mochi Bocking or my preferred spelling

00:07:56,300 --> 00:08:06,560
isn't either of these it's this so this

00:08:01,790 --> 00:08:12,140
is displaying the utf-8 of the japanese

00:08:06,560 --> 00:08:14,960
spelling in Latin one as many people

00:08:12,140 --> 00:08:19,450
know the Unicode bug that was commonly

00:08:14,960 --> 00:08:19,450
introduced before Pearl 512

00:08:26,020 --> 00:08:34,390
and this is really easy to avoid

00:08:32,169 --> 00:08:36,880
whatever programming language you're

00:08:34,390 --> 00:08:38,979
using if you're testing from the start

00:08:36,880 --> 00:08:41,080
start off doing your unit tests as a

00:08:38,979 --> 00:08:44,380
developer just I start off doing your

00:08:41,080 --> 00:08:45,970
testing with real names out there and

00:08:44,380 --> 00:08:49,089
I'll provide some examples for you and

00:08:45,970 --> 00:08:51,250
then if there are issues you fix them

00:08:49,089 --> 00:08:54,070
from the start and you don't have a

00:08:51,250 --> 00:08:56,740
massive legacy system in the end that

00:08:54,070 --> 00:08:59,170
has encoding issues throughout now some

00:08:56,740 --> 00:09:02,200
of us I don't have the pleasure of

00:08:59,170 --> 00:09:04,990
working on new systems and we do have

00:09:02,200 --> 00:09:07,480
massive legacy systems that don't handle

00:09:04,990 --> 00:09:09,940
encoding correctly but at least when

00:09:07,480 --> 00:09:11,950
working with real-world names you can

00:09:09,940 --> 00:09:13,779
show people you can show stakeholders in

00:09:11,950 --> 00:09:16,329
your projects that this is so important

00:09:13,779 --> 00:09:19,000
that we display them and we do not do it

00:09:16,329 --> 00:09:25,810
right now and then get time to fix those

00:09:19,000 --> 00:09:28,329
encoding issues and it's not just for

00:09:25,810 --> 00:09:30,820
standard input standard output or you

00:09:28,329 --> 00:09:33,310
know form input I service calls and such

00:09:30,820 --> 00:09:35,800
it's also for printing I one thing

00:09:33,310 --> 00:09:38,170
you'll commonly see is systems where the

00:09:35,800 --> 00:09:40,600
web application works fine but then you

00:09:38,170 --> 00:09:42,940
print out labels and they're all moji

00:09:40,600 --> 00:09:48,339
baki here are some examples I have

00:09:42,940 --> 00:09:55,000
collected some from Twitter I another

00:09:48,339 --> 00:09:57,279
UTF WTF I that's a label that

00:09:55,000 --> 00:10:01,390
surprisingly showed up in I her mailbox

00:09:57,279 --> 00:10:04,060
I don't even know how that happened and

00:10:01,390 --> 00:10:09,250
yes this is still going on in 2015

00:10:04,060 --> 00:10:13,329
possibly in your code here was a funny

00:10:09,250 --> 00:10:16,690
example somebody actually hand road the

00:10:13,329 --> 00:10:20,380
moji baki for a Russian sent it from

00:10:16,690 --> 00:10:24,310
Paris this was in 2002 to Russia and the

00:10:20,380 --> 00:10:29,170
postal worker actually unencoded it by

00:10:24,310 --> 00:10:32,550
hand and delivered it that is dedication

00:10:29,170 --> 00:10:32,550
in the Russian postal service

00:10:36,029 --> 00:10:42,370
what's even worse though is when it

00:10:38,860 --> 00:10:43,899
happens on name tags badges lanyards

00:10:42,370 --> 00:10:46,899
because this is what you're displaying

00:10:43,899 --> 00:10:48,730
as your own name to the world people are

00:10:46,899 --> 00:10:51,010
taking your photo with it you're meeting

00:10:48,730 --> 00:10:53,920
people in greeting people and it doesn't

00:10:51,010 --> 00:10:56,260
even have your name and the conference

00:10:53,920 --> 00:10:58,120
organizers don't realize they pass it

00:10:56,260 --> 00:11:00,459
out to you or they don't care I don't

00:10:58,120 --> 00:11:02,560
know but there's so little respect for

00:11:00,459 --> 00:11:05,500
the users when that happens so it's so

00:11:02,560 --> 00:11:08,980
important to test this out before you do

00:11:05,500 --> 00:11:15,070
the final print for anything and I this

00:11:08,980 --> 00:11:17,380
guy I oil has this problem a lot I I

00:11:15,070 --> 00:11:21,959
thought this one was funny because I

00:11:17,380 --> 00:11:26,079
Steven Loomis who he tweeted to and said

00:11:21,959 --> 00:11:27,850
my emoji baki fights start oh sorry I I

00:11:26,079 --> 00:11:31,600
want to believe this is your fault

00:11:27,850 --> 00:11:35,440
somehow well Steven Loomis is a founder

00:11:31,600 --> 00:11:37,329
of the Unicode CLD are and I the Unicode

00:11:35,440 --> 00:11:42,640
technical committee representative for

00:11:37,329 --> 00:11:47,800
IBM and then a fellow pro monger from

00:11:42,640 --> 00:11:49,510
Paris Olivia responded to that my mojo

00:11:47,800 --> 00:11:51,820
back he fights started when I was born

00:11:49,510 --> 00:11:54,399
as I have an e with an accent in my last

00:11:51,820 --> 00:11:57,550
name many people with these issues are

00:11:54,399 --> 00:12:00,070
having trouble their entire lives with

00:11:57,550 --> 00:12:01,420
software just not doing the right thing

00:12:00,070 --> 00:12:04,240
for their names and it can be so

00:12:01,420 --> 00:12:06,640
frustrating and most of us most people

00:12:04,240 --> 00:12:09,250
in this room don't even realize it but

00:12:06,640 --> 00:12:10,870
what if I mean Nick patch you know my

00:12:09,250 --> 00:12:16,690
bowels in my name were corrupted

00:12:10,870 --> 00:12:18,370
whenever I used your software and here's

00:12:16,690 --> 00:12:19,959
here's actually a case with open source

00:12:18,370 --> 00:12:22,300
bridge where they fortunately caught it

00:12:19,959 --> 00:12:25,899
I and humorously pointed it out ahead of

00:12:22,300 --> 00:12:28,800
time so they could fix it I don't even

00:12:25,899 --> 00:12:31,690
know how those characters worked out and

00:12:28,800 --> 00:12:33,970
here's even the Department of Homeland

00:12:31,690 --> 00:12:37,060
Security requiring your name as it

00:12:33,970 --> 00:12:41,370
appears in your passport but rejecting

00:12:37,060 --> 00:12:41,370
the name that appears in your passport

00:12:41,900 --> 00:12:47,810
and it just happens over and over for

00:12:45,170 --> 00:12:51,500
people with non-ascii names even if

00:12:47,810 --> 00:12:53,690
they're latin-based just imagine if it's

00:12:51,500 --> 00:12:56,450
a non latin-based name it's a if it's a

00:12:53,690 --> 00:12:58,280
Japanese name or a Hebrew name and the

00:12:56,450 --> 00:13:02,170
entire thing is corrupted you couldn't

00:12:58,280 --> 00:13:02,170
even attempt to read it or say who it is

00:13:02,320 --> 00:13:09,590
so I have a github project called

00:13:06,650 --> 00:13:13,600
Unicode dash programming I at my github

00:13:09,590 --> 00:13:16,550
name patch and this provides examples on

00:13:13,600 --> 00:13:21,410
programming and Unicode in all different

00:13:16,550 --> 00:13:25,550
languages I / 05 Perl 6 Ruby JavaScript

00:13:21,410 --> 00:13:28,910
PHP are I Julia it goes on and on some

00:13:25,550 --> 00:13:31,100
examples have are in some languages some

00:13:28,910 --> 00:13:33,350
are not I would love contributors to

00:13:31,100 --> 00:13:36,310
this project so some of the things the

00:13:33,350 --> 00:13:39,860
basics like your input and output I

00:13:36,310 --> 00:13:41,540
encoding and decoding as well as some

00:13:39,860 --> 00:13:53,960
things that should be simple like

00:13:41,540 --> 00:13:58,730
counting characters some Unicode has

00:13:53,960 --> 00:14:02,780
multiple character encodings but there

00:13:58,730 --> 00:14:05,620
is one set of characters each provided

00:14:02,780 --> 00:14:08,300
with a code point and divided it up into

00:14:05,620 --> 00:14:12,170
17 planes these are just for

00:14:08,300 --> 00:14:18,200
organizational purposes I they are zero

00:14:12,170 --> 00:14:21,440
based so plans 0 through 16 I we can see

00:14:18,200 --> 00:14:26,540
the front one here is the basic

00:14:21,440 --> 00:14:28,400
multi-level plan plane 0 and well most

00:14:26,540 --> 00:14:33,350
of the characters that Westerners use

00:14:28,400 --> 00:14:35,120
are in that plane and most of what

00:14:33,350 --> 00:14:40,690
you're probably testing with is in that

00:14:35,120 --> 00:14:44,270
plan with the utf-8 encoding I

00:14:40,690 --> 00:14:47,090
everything in plain 0 the basic

00:14:44,270 --> 00:14:51,590
multi-level plan is represented in

00:14:47,090 --> 00:14:55,250
either one two or three bites all the

00:14:51,590 --> 00:14:55,730
other planes are four bytes each utf-8

00:14:55,250 --> 00:14:58,459
the most

00:14:55,730 --> 00:15:02,680
popular character encoding out there

00:14:58,459 --> 00:15:10,459
right now I utf-16 also a popular 1i

00:15:02,680 --> 00:15:13,430
stores anything in the BMP in a single

00:15:10,459 --> 00:15:16,310
code 16 bit code unit so that's two

00:15:13,430 --> 00:15:20,720
bites and everything outside of it plans

00:15:16,310 --> 00:15:23,000
1 through 16 in I to 16-bit code units

00:15:20,720 --> 00:15:25,699
so that's four bytes and I'm saying this

00:15:23,000 --> 00:15:30,019
because well there's a lot of software

00:15:25,699 --> 00:15:38,600
that doesn't support all of the non BMP

00:15:30,019 --> 00:15:42,019
plans so let's take a look at that well

00:15:38,600 --> 00:15:50,810
but first off who here who here I worse

00:15:42,019 --> 00:15:52,699
with pearl all great everybody your well

00:15:50,810 --> 00:15:56,180
your luck whether you're in pro 5 or

00:15:52,699 --> 00:16:02,380
Perl 6 it has no issues with non BMP

00:15:56,180 --> 00:16:07,490
characters but I who here works in any

00:16:02,380 --> 00:16:11,930
project that involves in any way MySQL

00:16:07,490 --> 00:16:16,399
or JavaScript ok everyone here is well

00:16:11,930 --> 00:16:19,130
almost I well I'm sorry though because I

00:16:16,399 --> 00:16:26,000
there are some issues there I first

00:16:19,130 --> 00:16:30,019
let's talk about MySQL who here uses the

00:16:26,000 --> 00:16:34,720
I utf-8 as named in mysql the utf-8 care

00:16:30,019 --> 00:16:37,670
center ok I a good number of people I

00:16:34,720 --> 00:16:41,810
well you might not realize that it

00:16:37,670 --> 00:16:44,839
doesn't let you store full utf-8 it lets

00:16:41,810 --> 00:16:49,279
you store only the BMP only one through

00:16:44,839 --> 00:16:55,040
three bites of utf-8 as soon as it sees

00:16:49,279 --> 00:16:58,160
a utf-8 Adnan BMP so a 4-byte character

00:16:55,040 --> 00:17:04,189
it silently truncates starting at that

00:16:58,160 --> 00:17:07,659
character and everything after it mysql

00:17:04,189 --> 00:17:07,659
likes to silently do things like that

00:17:08,760 --> 00:17:16,300
fortunately released in 2010 is what

00:17:12,910 --> 00:17:19,900
they call utf-8 at mb for which is

00:17:16,300 --> 00:17:23,920
actually proper utf-8 and it's able to

00:17:19,900 --> 00:17:30,450
store those four byte non BMP characters

00:17:23,920 --> 00:17:35,920
as well so it is safe to upgrade your

00:17:30,450 --> 00:17:39,070
utf-8 to utf-8 mb for databases tables

00:17:35,920 --> 00:17:40,830
and columns because it's a superset but

00:17:39,070 --> 00:17:46,090
you need to keep indexing in mind

00:17:40,830 --> 00:17:48,130
because the I some of the types of

00:17:46,090 --> 00:17:51,520
indices in some of the types of

00:17:48,130 --> 00:17:53,950
databases are bite based and you might

00:17:51,520 --> 00:17:57,370
have to change the number of characters

00:17:53,950 --> 00:17:59,500
allowed in it so that's a little

00:17:57,370 --> 00:18:03,600
research to do if you're upgrading but

00:17:59,500 --> 00:18:06,580
it's ultimately pretty simple to do and

00:18:03,600 --> 00:18:09,310
you're a lot better off using VAR car

00:18:06,580 --> 00:18:11,860
because it's variable as opposed if you

00:18:09,310 --> 00:18:14,050
use the car it's going to take four

00:18:11,860 --> 00:18:28,270
bytes for every single one since it's

00:18:14,050 --> 00:18:30,580
fixed format yet the limitations are

00:18:28,270 --> 00:18:33,250
then different so I you need to look at

00:18:30,580 --> 00:18:39,280
your data and the specifications for the

00:18:33,250 --> 00:18:42,730
indexes and such then a JavaScript has

00:18:39,280 --> 00:18:45,310
its own interesting issues almost all of

00:18:42,730 --> 00:18:47,710
us interact with javascript in some way

00:18:45,310 --> 00:18:53,560
or another I even if you're just doing

00:18:47,710 --> 00:18:56,710
back-end development so JavaScript

00:18:53,560 --> 00:18:59,980
doesn't understand that any of the non

00:18:56,710 --> 00:19:06,030
BMP characters are one character since

00:18:59,980 --> 00:19:09,060
they each take I to 16-bit code units in

00:19:06,030 --> 00:19:14,860
JavaScript internal encoding form of

00:19:09,060 --> 00:19:19,390
utf-16 it treats them each as one

00:19:14,860 --> 00:19:20,260
character so if you execute a regular

00:19:19,390 --> 00:19:23,920
expression

00:19:20,260 --> 00:19:27,220
against a string including non BMP

00:19:23,920 --> 00:19:29,740
characters the dot will match half of a

00:19:27,220 --> 00:19:32,380
character and you can corrupt your data

00:19:29,740 --> 00:19:33,970
that one if you run length on it well

00:19:32,380 --> 00:19:42,280
it's going to be double for every

00:19:33,970 --> 00:19:44,170
character that's non BMP and I actually

00:19:42,280 --> 00:19:46,930
get a lot of quenn bring these issues up

00:19:44,170 --> 00:19:51,730
I get a lot of questions well why should

00:19:46,930 --> 00:19:55,050
we support non VMP characters and show

00:19:51,730 --> 00:19:57,040
me some examples that aren't just emoji

00:19:55,050 --> 00:20:01,180
but fortunately there's a lot of

00:19:57,040 --> 00:20:04,750
real-world examples to show so it's true

00:20:01,180 --> 00:20:06,790
that emoji are one of the commonly used

00:20:04,750 --> 00:20:10,510
ones that people show as an examples I'm

00:20:06,790 --> 00:20:14,980
going to show some of the top 10 reasons

00:20:10,510 --> 00:20:18,340
that I dr. ken London who is the author

00:20:14,980 --> 00:20:22,540
of O'Reilly CJ kv information processing

00:20:18,340 --> 00:20:26,860
I has put together he works out adobe

00:20:22,540 --> 00:20:28,150
and there's some examples were were

00:20:26,860 --> 00:20:30,250
really great so I wanted to share them

00:20:28,150 --> 00:20:33,190
with you so one of them yeah almost all

00:20:30,250 --> 00:20:38,620
emoji and all new ones are encoded in

00:20:33,190 --> 00:20:39,820
plain one outside of the BMP I and those

00:20:38,620 --> 00:20:41,890
are things that people have

00:20:39,820 --> 00:20:44,290
traditionally tested online when showing

00:20:41,890 --> 00:20:46,540
that they don't work but a lot of

00:20:44,290 --> 00:20:48,820
stakeholders and projects don't care as

00:20:46,540 --> 00:20:50,530
much about supporting emoji they want to

00:20:48,820 --> 00:20:52,650
support things like you know real

00:20:50,530 --> 00:20:55,630
people's names and real people's data

00:20:52,650 --> 00:21:00,600
well yah mo g is real but let's show

00:20:55,630 --> 00:21:05,650
some real traditional examples some

00:21:00,600 --> 00:21:08,110
japan's joy okonji standard requires one

00:21:05,650 --> 00:21:11,620
of these characters and this is just a

00:21:08,110 --> 00:21:16,480
standard set of characters as used

00:21:11,620 --> 00:21:18,550
commonly in japan and then there's

00:21:16,480 --> 00:21:22,810
another Japanese standards is a Japanese

00:21:18,550 --> 00:21:25,780
industry standard which requires 303 non

00:21:22,810 --> 00:21:30,880
BMP characters so they're a lot used in

00:21:25,780 --> 00:21:32,500
Japanese then the Chinese government

00:21:30,880 --> 00:21:35,740
provides a

00:21:32,500 --> 00:21:38,530
occasion for software that's to be used

00:21:35,740 --> 00:21:43,270
in China and this certification requires

00:21:38,530 --> 00:21:46,170
six non BMP characters and that's just

00:21:43,270 --> 00:21:54,730
for the certification there are actually

00:21:46,170 --> 00:22:00,010
196 commonly used Hansie I in China then

00:21:54,730 --> 00:22:05,710
Hong Kong requires even more 1702 non

00:22:00,010 --> 00:22:08,110
BMP characters and nowadays well so

00:22:05,710 --> 00:22:11,260
obviously if you're doing business in

00:22:08,110 --> 00:22:13,660
East Asia it's so important that you

00:22:11,260 --> 00:22:16,510
support non BMP characters you test with

00:22:13,660 --> 00:22:18,280
these and I you make sure everything

00:22:16,510 --> 00:22:20,890
works appropriately because it's one of

00:22:18,280 --> 00:22:23,410
those things where you may never hear

00:22:20,890 --> 00:22:24,970
from your users about it but your users

00:22:23,410 --> 00:22:26,620
will know that they're not able to input

00:22:24,970 --> 00:22:29,890
their data and they may not be your

00:22:26,620 --> 00:22:32,710
users for much longer especially if

00:22:29,890 --> 00:22:36,990
you're say us based company without as

00:22:32,710 --> 00:22:36,990
much customer support in that region

00:22:41,220 --> 00:22:46,750
some modern operating systems all

00:22:44,530 --> 00:22:48,970
support non BMP which means that no

00:22:46,750 --> 00:22:51,900
matter where your users are they can

00:22:48,970 --> 00:22:57,700
input it and they are going to input it

00:22:51,900 --> 00:22:59,620
and as of unicode version 6.0 from a few

00:22:57,700 --> 00:23:05,200
years ago there are more characters

00:22:59,620 --> 00:23:08,950
outside of the BMP than inside it's

00:23:05,200 --> 00:23:11,230
effectively full I almost all new

00:23:08,950 --> 00:23:14,230
characters added in the annual Unicode

00:23:11,230 --> 00:23:19,300
releases are going to be outside of the

00:23:14,230 --> 00:23:21,700
BMP and every year more minority

00:23:19,300 --> 00:23:25,770
languages and scripts are being encoded

00:23:21,700 --> 00:23:29,020
in unicode I which allows more people to

00:23:25,770 --> 00:23:30,690
do computing in their own language which

00:23:29,020 --> 00:23:33,880
they were never able to do before

00:23:30,690 --> 00:23:35,250
additionally sometimes there are

00:23:33,880 --> 00:23:37,330
characters that have just been missed

00:23:35,250 --> 00:23:43,000
unicode eight point 0 is about to come

00:23:37,330 --> 00:23:46,150
out and there was 1i cjk character that

00:23:43,000 --> 00:23:49,180
was found in real names as seen

00:23:46,150 --> 00:23:52,270
on identification even that was not

00:23:49,180 --> 00:23:54,940
encoded in unicode I and it was

00:23:52,270 --> 00:23:57,750
fast-tracked for inclusion in the eight

00:23:54,940 --> 00:23:57,750
point out standard

00:24:14,550 --> 00:24:21,660
so the question was about where they're

00:24:18,900 --> 00:24:24,630
going to encode new characters I you

00:24:21,660 --> 00:24:27,060
know in the IBM p versus non BMP and

00:24:24,630 --> 00:24:28,710
there are some cases where a new

00:24:27,060 --> 00:24:31,580
character would go in the BMP for

00:24:28,710 --> 00:24:35,580
example there is a tie block within

00:24:31,580 --> 00:24:38,400
plain zero and it's not full if they

00:24:35,580 --> 00:24:41,160
were to encode any additional tie

00:24:38,400 --> 00:24:43,860
characters it could fit in there but

00:24:41,160 --> 00:24:47,220
many blocks are full if you were to add

00:24:43,860 --> 00:24:50,070
new cjk characters for example they

00:24:47,220 --> 00:24:52,080
wouldn't be able to go in there and I

00:24:50,070 --> 00:24:54,600
could go on and on about blocks that are

00:24:52,080 --> 00:24:57,750
full there plus you can't add a new

00:24:54,600 --> 00:25:00,240
block so if you have new scripts being

00:24:57,750 --> 00:25:04,040
encoded they're just being put I in

00:25:00,240 --> 00:25:04,040
plain one or above

00:25:13,170 --> 00:25:21,570
is if you have a block that is full in

00:25:18,000 --> 00:25:23,730
the BMP and there are more characters

00:25:21,570 --> 00:25:26,310
added for the same script they may be

00:25:23,730 --> 00:25:29,640
encoded in the future outside of the BMP

00:25:26,310 --> 00:25:32,460
so program even if you don't have

00:25:29,640 --> 00:25:34,020
specifical examples today that you need

00:25:32,460 --> 00:25:37,710
to support you may have them tomorrow

00:25:34,020 --> 00:25:39,810
and it's much harder to go back and fix

00:25:37,710 --> 00:25:42,090
your entire application from years ago

00:25:39,810 --> 00:25:49,740
than it is to do the right thing right

00:25:42,090 --> 00:25:54,390
now now some things that you need to

00:25:49,740 --> 00:25:55,860
input aren't even I what many of them

00:25:54,390 --> 00:25:56,880
are not asking characters some of them

00:25:55,860 --> 00:26:00,540
aren't even some of them are just

00:25:56,880 --> 00:26:02,100
punctuation I and some of them are

00:26:00,540 --> 00:26:04,230
asking punctuation some of them are

00:26:02,100 --> 00:26:07,850
non-ascii punctuation but punctuation in

00:26:04,230 --> 00:26:11,490
general is very valid in a name I

00:26:07,850 --> 00:26:13,500
engines I know developers love to

00:26:11,490 --> 00:26:16,350
validate things they love to check and

00:26:13,500 --> 00:26:19,680
see if something's valid and then tell

00:26:16,350 --> 00:26:21,990
you it's not valid if it's not and far

00:26:19,680 --> 00:26:24,630
too frequently with validating of names

00:26:21,990 --> 00:26:27,750
people just go and look for any

00:26:24,630 --> 00:26:31,230
punctuation and if that if there is

00:26:27,750 --> 00:26:33,210
punctuation either strip it out or tell

00:26:31,230 --> 00:26:35,250
you it's invalid and that is the wrong

00:26:33,210 --> 00:26:37,980
thing to do here's an example of a

00:26:35,250 --> 00:26:42,690
Hawaiian name that has punctuation in it

00:26:37,980 --> 00:26:45,390
I and sometimes you can find the ASCII '

00:26:42,690 --> 00:26:47,460
used in Hawaiian names as well even

00:26:45,390 --> 00:26:51,270
though it's not the proper typographical

00:26:47,460 --> 00:26:57,500
punctuation for it then I here is a

00:26:51,270 --> 00:27:00,450
Swedish name you can see them ax colon

00:26:57,500 --> 00:27:03,000
som the colon can be found in many

00:27:00,450 --> 00:27:05,880
Swedish names I found several as

00:27:03,000 --> 00:27:08,340
examples and I've got a github repo I'll

00:27:05,880 --> 00:27:14,990
show you so you can use that as test

00:27:08,340 --> 00:27:18,960
data and well here's one that may not be

00:27:14,990 --> 00:27:24,600
common in any specific language but this

00:27:18,960 --> 00:27:25,730
is a I legal california attorney who i

00:27:24,600 --> 00:27:31,070
chained

00:27:25,730 --> 00:27:35,300
changed his name to Darren QX being !

00:27:31,070 --> 00:27:39,530
and this is listed in the State Bar of

00:27:35,300 --> 00:27:41,420
California I there are a lot of people

00:27:39,530 --> 00:27:51,160
out there who changed their names and I

00:27:41,420 --> 00:27:53,660
they can be odd but they are names and

00:27:51,160 --> 00:27:57,410
we're very familiar with business names

00:27:53,660 --> 00:28:01,190
that have ! so why not a person's name I

00:27:57,410 --> 00:28:09,610
mean there's yahoo yum brands bands like

00:28:01,190 --> 00:28:14,890
against me here's someone you might know

00:28:09,610 --> 00:28:18,320
Yakov he actually uses the I ascii

00:28:14,890 --> 00:28:21,710
apostrophe in his name and has a

00:28:18,320 --> 00:28:25,430
surprisingly hard time with that so you

00:28:21,710 --> 00:28:29,720
don't want to make Yakov sad he loves

00:28:25,430 --> 00:28:33,710
you with a great big love so here's how

00:28:29,720 --> 00:28:36,170
he'd like to display as damn but here's

00:28:33,710 --> 00:28:38,750
how sometimes people display it they

00:28:36,170 --> 00:28:42,050
explicitly escape it because they're

00:28:38,750 --> 00:28:44,690
worried about say it unescape inge JSON

00:28:42,050 --> 00:28:46,400
or SQL but then they handle it

00:28:44,690 --> 00:28:53,240
incorrectly and they actually probably

00:28:46,400 --> 00:28:57,350
escaped the escape and display that Tim

00:28:53,240 --> 00:29:00,890
O'Reilly may have the same problem then

00:28:57,350 --> 00:29:04,040
there's the HTML encoding I've seen this

00:29:00,890 --> 00:29:06,860
one a lot where it's HTML encoded but

00:29:04,040 --> 00:29:12,020
then that's encoded and it's displayed

00:29:06,860 --> 00:29:16,730
double encoded sometimes they just strip

00:29:12,020 --> 00:29:21,530
it out altogether just imagine if my

00:29:16,730 --> 00:29:24,560
name was displayed nck and yes they

00:29:21,530 --> 00:29:27,320
actually do sometimes truncate starting

00:29:24,560 --> 00:29:32,440
at the character he has experienced us

00:29:27,320 --> 00:29:32,440
and I hope it wasn't your fault

00:29:36,099 --> 00:29:42,080
but i'm happy to announce that in perl 6

00:29:40,070 --> 00:29:53,960
he can use his real name as an

00:29:42,080 --> 00:30:06,169
identifier yes it works in Perl 5

00:29:53,960 --> 00:30:07,999
instead of colon colon but now the

00:30:06,169 --> 00:30:12,679
individual characters aren't the only

00:30:07,999 --> 00:30:17,889
issues it's also what types of boxes in

00:30:12,679 --> 00:30:22,249
input we provide to accept the names and

00:30:17,889 --> 00:30:27,019
having a just a first name in a last

00:30:22,249 --> 00:30:30,440
name box is a very specific to certain

00:30:27,019 --> 00:30:33,320
languages and cultures I having a first

00:30:30,440 --> 00:30:36,549
name middle initial last name is even

00:30:33,320 --> 00:30:39,679
more specific because even though say

00:30:36,549 --> 00:30:42,700
the British will understand the whole

00:30:39,679 --> 00:30:44,929
middle an issue it seems much more

00:30:42,700 --> 00:30:47,059
American to them because it's mainly in

00:30:44,929 --> 00:30:49,249
American practice and then many people

00:30:47,059 --> 00:30:52,460
in the world won't even have know what

00:30:49,249 --> 00:30:55,369
to do with the middle initial box some

00:30:52,460 --> 00:30:58,070
people have just one word names that are

00:30:55,369 --> 00:31:01,009
their legal names other people have

00:30:58,070 --> 00:31:04,849
three or many more where everyone is

00:31:01,009 --> 00:31:08,210
very significant to them so my favorite

00:31:04,849 --> 00:31:11,299
solution is they how Twitter does it

00:31:08,210 --> 00:31:14,989
which is just one box and you put in

00:31:11,299 --> 00:31:17,749
your name if you don't need to use each

00:31:14,989 --> 00:31:20,149
individual name this is the way to go

00:31:17,749 --> 00:31:22,460
it's so easy for you to implement it's

00:31:20,149 --> 00:31:25,759
less work it's less work on the database

00:31:22,460 --> 00:31:29,659
side it's less work on the UI side and

00:31:25,759 --> 00:31:31,219
it's easier for your users now yes there

00:31:29,659 --> 00:31:34,580
are some times when you might need to

00:31:31,219 --> 00:31:37,369
use different parts of a name but just

00:31:34,580 --> 00:31:40,700
keep in mind do I really need to do that

00:31:37,369 --> 00:31:44,700
and if not go the you know github or

00:31:40,700 --> 00:31:47,490
Twitter way and just provide one box I

00:31:44,700 --> 00:31:50,880
users will appreciate it I know I I

00:31:47,490 --> 00:31:52,680
appreciate it it's I'm not limiting at

00:31:50,880 --> 00:31:54,990
all you just need to pay special

00:31:52,680 --> 00:31:57,090
attention to how many characters you

00:31:54,990 --> 00:32:06,570
accept because some names can be very

00:31:57,090 --> 00:32:09,030
long and then their issues about what

00:32:06,570 --> 00:32:12,720
types of names you're accepting I like

00:32:09,030 --> 00:32:16,470
to I like this tweet that was sent out

00:32:12,720 --> 00:32:18,960
about I'm unsure whether or not to ask

00:32:16,470 --> 00:32:24,270
for your users legal name I made a

00:32:18,960 --> 00:32:28,440
flowchart for you in most cases you

00:32:24,270 --> 00:32:31,470
don't need to request legal names really

00:32:28,440 --> 00:32:34,380
when there is a legal reason to request

00:32:31,470 --> 00:32:36,930
a legal name okay that's legitimate but

00:32:34,380 --> 00:32:41,070
in almost any others you just want the

00:32:36,930 --> 00:32:44,220
name as the person identifies even when

00:32:41,070 --> 00:32:47,430
you have to legally request a legal name

00:32:44,220 --> 00:32:49,710
you should also request a preferred name

00:32:47,430 --> 00:32:52,950
to do business with the users because

00:32:49,710 --> 00:32:56,630
many people just don't go by their legal

00:32:52,950 --> 00:32:59,490
name and don't like to use it I for one

00:32:56,630 --> 00:33:01,950
exclusively use Nick patch that's on my

00:32:59,490 --> 00:33:09,170
resume that's what I do business with

00:33:01,950 --> 00:33:13,100
that's what my company knows me as and

00:33:09,170 --> 00:33:15,390
I've got this new project on github I

00:33:13,100 --> 00:33:19,170
internationalisation testing so that's

00:33:15,390 --> 00:33:22,980
i18n dash testing at my account patch

00:33:19,170 --> 00:33:27,900
and this is to provide real-world data

00:33:22,980 --> 00:33:30,300
on people companies places that have

00:33:27,900 --> 00:33:33,720
interesting problems with input and

00:33:30,300 --> 00:33:36,810
display and you can use this for unit

00:33:33,720 --> 00:33:39,900
tests and give this to QA and test

00:33:36,810 --> 00:33:43,050
engineers and awesome I put references

00:33:39,900 --> 00:33:46,410
for every single one here so if a

00:33:43,050 --> 00:33:48,300
product owner or a stakeholder says no

00:33:46,410 --> 00:33:50,490
we don't need to support that you can

00:33:48,300 --> 00:33:52,950
actually show this reference show the

00:33:50,490 --> 00:33:54,930
website the Wikipedia article or

00:33:52,950 --> 00:33:57,870
whatever that's actually using it and

00:33:54,930 --> 00:34:01,410
say yes this is a real world

00:33:57,870 --> 00:34:03,059
aim and we should support it this is an

00:34:01,410 --> 00:34:06,000
early project I don't have a lot of data

00:34:03,059 --> 00:34:07,680
on it but there is some and I'm planning

00:34:06,000 --> 00:34:16,500
on expanding it over the next couple

00:34:07,680 --> 00:34:18,330
months I'd love contributors to so the

00:34:16,500 --> 00:34:21,899
main point I want to get across here is

00:34:18,330 --> 00:34:25,020
that preventing fake names is not worth

00:34:21,899 --> 00:34:26,460
discriminating against real users a lot

00:34:25,020 --> 00:34:28,500
of people are worried that people will

00:34:26,460 --> 00:34:31,399
just put in whatever they want they'll

00:34:28,500 --> 00:34:35,010
put in the emoji pile of poo you know

00:34:31,399 --> 00:34:36,870
but when it comes down to it alienating

00:34:35,010 --> 00:34:39,960
and discriminating against your users

00:34:36,870 --> 00:34:42,659
who may be your customers and paying you

00:34:39,960 --> 00:34:46,860
and supporting your business is much

00:34:42,659 --> 00:34:48,720
worse than some people putting in things

00:34:46,860 --> 00:34:59,330
that are not their real identifying

00:34:48,720 --> 00:34:59,330
information some I wanted to get into I

00:34:59,870 --> 00:35:07,080
identifiers user names because this is a

00:35:04,500 --> 00:35:11,120
much more complex issue such as my

00:35:07,080 --> 00:35:14,430
twitter handle Nick patch I there is

00:35:11,120 --> 00:35:17,340
that that could take up an entire talk

00:35:14,430 --> 00:35:20,070
of its own fortunately there's really

00:35:17,340 --> 00:35:24,210
good resources for if you want to expand

00:35:20,070 --> 00:35:26,010
past ASCII identifiers and I have to

00:35:24,210 --> 00:35:29,580
warn you first although I'm extremely

00:35:26,010 --> 00:35:31,260
supportive of this because really the

00:35:29,580 --> 00:35:33,990
majority of the world can't represent

00:35:31,260 --> 00:35:36,750
themselves in a username that's just

00:35:33,990 --> 00:35:39,090
asking but there are a lot of concerns

00:35:36,750 --> 00:35:41,010
their security concerns there are

00:35:39,090 --> 00:35:42,780
characters that you definitely do not

00:35:41,010 --> 00:35:44,520
want to accept certain control

00:35:42,780 --> 00:35:47,280
characters we've seen it on Twitter

00:35:44,520 --> 00:35:50,100
before where they use the right to left

00:35:47,280 --> 00:35:54,470
marker and such and start flipping other

00:35:50,100 --> 00:35:57,540
texts on the user interface as well as I

00:35:54,470 --> 00:36:00,000
mistake about characters there are some

00:35:57,540 --> 00:36:02,580
in different scripts that look the exact

00:36:00,000 --> 00:36:05,430
same and you may not want your users

00:36:02,580 --> 00:36:07,770
have usernames that look the exact same

00:36:05,430 --> 00:36:10,590
but are distinctly different usernames I

00:36:07,770 --> 00:36:11,550
even more specifically there are

00:36:10,590 --> 00:36:15,390
different ways

00:36:11,550 --> 00:36:17,460
represent the exact same logical

00:36:15,390 --> 00:36:19,980
character in Unicode in different

00:36:17,460 --> 00:36:22,920
normalization forms so when you're

00:36:19,980 --> 00:36:25,650
handling Unicode identifiers you always

00:36:22,920 --> 00:36:27,690
want to use unicode normalization and I

00:36:25,650 --> 00:36:29,580
show examples of how to do that in the

00:36:27,690 --> 00:36:31,620
Unicode programming repo that I showed

00:36:29,580 --> 00:36:35,850
earlier in pretty much all of the

00:36:31,620 --> 00:36:38,910
languages that it supports some if

00:36:35,850 --> 00:36:42,870
you're going to do this there are a few

00:36:38,910 --> 00:36:46,020
documents that are official I Unicode

00:36:42,870 --> 00:36:49,500
technical reports one of them is unicode

00:36:46,020 --> 00:36:51,930
identifiers I another is unicode

00:36:49,500 --> 00:36:54,720
security concerns and another's Unicode

00:36:51,930 --> 00:36:58,260
security mechanisms those would all be

00:36:54,720 --> 00:37:01,020
good reads I even saw a Sipan module

00:36:58,260 --> 00:37:10,380
recently I implementing some of the

00:37:01,020 --> 00:37:13,560
Unicode security standards and when I

00:37:10,380 --> 00:37:15,300
was I creating the idea for this talk I

00:37:13,560 --> 00:37:17,430
think I've been off a little more than I

00:37:15,300 --> 00:37:20,310
could chew because in addition to all of

00:37:17,430 --> 00:37:23,490
that I wanted to get into accepting

00:37:20,310 --> 00:37:26,430
genders because in addition to names

00:37:23,490 --> 00:37:29,520
that is also extremely personal

00:37:26,430 --> 00:37:32,820
information I that I represents who you

00:37:29,520 --> 00:37:36,060
are much more than almost anything you

00:37:32,820 --> 00:37:38,490
could input I mean someone saying I am a

00:37:36,060 --> 00:37:44,520
woman is much more who they are than

00:37:38,490 --> 00:37:46,650
saying I am 33 some unfortunately so

00:37:44,520 --> 00:37:49,680
many user interfaces get this wrong

00:37:46,650 --> 00:37:52,470
because they just presume well people

00:37:49,680 --> 00:37:54,540
only identify as male or only identify

00:37:52,470 --> 00:37:56,520
as female but really there are so many

00:37:54,540 --> 00:37:59,130
shades in between or people who reject

00:37:56,520 --> 00:38:01,710
gender altogether and a lot of user

00:37:59,130 --> 00:38:05,220
interfaces require one of the binary

00:38:01,710 --> 00:38:08,970
genders I which I would strongly advise

00:38:05,220 --> 00:38:12,510
against there are multiple potential

00:38:08,970 --> 00:38:16,740
solutions to this I one is additionally

00:38:12,510 --> 00:38:19,560
accepting a text box to enter whatever

00:38:16,740 --> 00:38:22,350
you want one is the Facebook route where

00:38:19,560 --> 00:38:24,180
they provided about 50 different options

00:38:22,350 --> 00:38:26,700
I

00:38:24,180 --> 00:38:30,150
then there's one that I just saw

00:38:26,700 --> 00:38:32,940
yesterday when I was registering for the

00:38:30,150 --> 00:38:35,579
open source bridge conference which is

00:38:32,940 --> 00:38:38,160
just a blank box not even any specific

00:38:35,579 --> 00:38:41,339
options you just type in what you

00:38:38,160 --> 00:38:44,880
identify us and one thing to keep in

00:38:41,339 --> 00:38:47,790
mind though is if you don't really need

00:38:44,880 --> 00:38:50,460
that data don't even ask for it I mean

00:38:47,790 --> 00:38:53,520
people oftentimes think that when we

00:38:50,460 --> 00:38:55,020
have a form a signup form well here are

00:38:53,520 --> 00:38:57,630
the standard things that we should

00:38:55,020 --> 00:38:59,910
request well from my experience I've

00:38:57,630 --> 00:39:02,339
found that users don't like to enter

00:38:59,910 --> 00:39:05,460
more than they need to they either feel

00:39:02,339 --> 00:39:07,470
that it is I personal information that

00:39:05,460 --> 00:39:10,200
they don't need to share or is just

00:39:07,470 --> 00:39:13,530
annoying and you'll have more people

00:39:10,200 --> 00:39:20,730
signing up if you have less hindrances

00:39:13,530 --> 00:39:22,950
to creating an account so I wanted to

00:39:20,730 --> 00:39:24,690
leave plenty of time for questions here

00:39:22,950 --> 00:39:27,500
because I'm sure this raises some

00:39:24,690 --> 00:39:31,520
questions or even discussions so does I

00:39:27,500 --> 00:39:31,520
anyone have anything they'd like to ask

00:39:33,500 --> 00:39:49,920
okay so at the point was that a lot of

00:39:47,880 --> 00:39:51,780
times there are legal requirements for a

00:39:49,920 --> 00:39:54,240
legal name and it's a problem if you

00:39:51,780 --> 00:39:57,299
don't allow them to enter a legal name

00:39:54,240 --> 00:39:59,490
and I I don't think anyone saying you

00:39:57,299 --> 00:40:01,470
shouldn't allow a legal name to be

00:39:59,490 --> 00:40:10,829
entered it's just you shouldn't require

00:40:01,470 --> 00:40:13,319
it if you don't need it and um okay the

00:40:10,829 --> 00:40:15,660
point was clarified that you need to

00:40:13,319 --> 00:40:19,109
accept all characters that are in your

00:40:15,660 --> 00:40:21,119
legal name some another reason to

00:40:19,109 --> 00:40:29,750
support all characters that are in names

00:40:21,119 --> 00:40:33,660
over here yes some countries have

00:40:29,750 --> 00:40:36,030
standards for what can be legal names or

00:40:33,660 --> 00:40:39,420
what can be legal characters in those

00:40:36,030 --> 00:40:42,690
names and in Japan included I think

00:40:39,420 --> 00:40:45,750
that's I based on the set that I had

00:40:42,690 --> 00:40:49,980
displayed earlier that requires one non

00:40:45,750 --> 00:40:52,859
BMP character so it depends I country to

00:40:49,980 --> 00:40:55,440
country some countries have very few

00:40:52,859 --> 00:40:57,780
restrictions on that and other countries

00:40:55,440 --> 00:41:00,030
have restrictions just based on their

00:40:57,780 --> 00:41:04,130
own systems that don't support those

00:41:00,030 --> 00:41:04,130
characters as opposed to specific laws

00:41:11,850 --> 00:41:17,920
so the questions was about I opinions or

00:41:15,550 --> 00:41:20,680
other phonetic coping strategies such as

00:41:17,920 --> 00:41:26,620
I transliterations romanization 'he's

00:41:20,680 --> 00:41:29,580
and some people I with non latin-based

00:41:26,620 --> 00:41:31,420
names choose to use different

00:41:29,580 --> 00:41:35,860
romanization 'he's when they're working

00:41:31,420 --> 00:41:37,750
in the western world and that is it's an

00:41:35,860 --> 00:41:41,170
option for them to decide it's not

00:41:37,750 --> 00:41:44,670
something that a user interface should

00:41:41,170 --> 00:41:48,040
do for them though because oftentimes I

00:41:44,670 --> 00:41:50,470
you can Roman eyes say Chinese in

00:41:48,040 --> 00:41:52,690
multiple different ways and somebody

00:41:50,470 --> 00:41:55,180
might identify with one of those ways

00:41:52,690 --> 00:41:57,990
and not with the other ones so it should

00:41:55,180 --> 00:41:57,990
be up to the user

00:42:07,630 --> 00:42:13,720
so it can be very tricky segmenting out

00:42:11,260 --> 00:42:16,500
names what's the first name what's the

00:42:13,720 --> 00:42:21,010
last name how do you refer to somebody I

00:42:16,500 --> 00:42:22,750
the easiest way with that is probably

00:42:21,010 --> 00:42:27,340
not what everyone wants to hear but

00:42:22,750 --> 00:42:30,280
having a box that says what do I we what

00:42:27,340 --> 00:42:35,050
do you want us to call you when we send

00:42:30,280 --> 00:42:39,310
you emails and such I'm other than that

00:42:35,050 --> 00:42:41,830
there is just no way to not do it or no

00:42:39,310 --> 00:42:44,950
way to do it and not step on some users

00:42:41,830 --> 00:42:46,900
toes because the fit in some languages

00:42:44,950 --> 00:42:49,600
the family name comes first others it

00:42:46,900 --> 00:42:52,630
comes last I in some it's much more

00:42:49,600 --> 00:42:55,510
complex than that where you have a you

00:42:52,630 --> 00:42:57,760
know one family name as the very last

00:42:55,510 --> 00:43:00,160
one and a different family name the one

00:42:57,760 --> 00:43:02,170
before it but the second to last is the

00:43:00,160 --> 00:43:05,380
primary one that would you you would use

00:43:02,170 --> 00:43:08,380
along with the title such as mr. so

00:43:05,380 --> 00:43:10,990
there there's no clear solution to that

00:43:08,380 --> 00:43:13,290
other than asking the user what they

00:43:10,990 --> 00:43:13,290
want

00:43:35,780 --> 00:43:41,369
so the question is about when you have

00:43:38,640 --> 00:43:43,920
to use a system that requires only a ski

00:43:41,369 --> 00:43:48,210
such as a third party vendor what do you

00:43:43,920 --> 00:43:54,690
do my first choice is find a new vendor

00:43:48,210 --> 00:43:57,390
I mean what if your vendor said we don't

00:43:54,690 --> 00:44:00,260
accept the last five letters of the

00:43:57,390 --> 00:44:03,329
alphabet and you have to fit it in there

00:44:00,260 --> 00:44:06,059
that's not the vendor for you because

00:44:03,329 --> 00:44:08,880
they're limiting everyone you can work

00:44:06,059 --> 00:44:11,130
with and there is no clear solution

00:44:08,880 --> 00:44:13,559
there's no Sipan module you can turn to

00:44:11,130 --> 00:44:16,740
that your users will appreciate there

00:44:13,559 --> 00:44:19,380
are Sipan modules that will ask if I but

00:44:16,740 --> 00:44:22,109
your users will not appreciate them I

00:44:19,380 --> 00:44:25,140
don't use them because they're I find

00:44:22,109 --> 00:44:27,690
very little use for that I just like

00:44:25,140 --> 00:44:30,089
stripping off the dot from an eye and

00:44:27,690 --> 00:44:32,579
making it a Turkish dotted lowercase I

00:44:30,089 --> 00:44:35,119
that wouldn't do anything useful for me

00:44:32,579 --> 00:44:37,740
so really I'd look for a new vendor in

00:44:35,119 --> 00:44:39,660
2015 you're going to find competing

00:44:37,740 --> 00:44:45,230
vendors that are able to support your

00:44:39,660 --> 00:44:45,230
needs in modern ways so a chess

00:44:53,210 --> 00:44:59,570
the question is about people who have

00:44:55,470 --> 00:45:01,859
more than one name that they go by and I

00:44:59,570 --> 00:45:04,920
don't have as much experience with that

00:45:01,859 --> 00:45:06,810
I know that Facebook I which has their

00:45:04,920 --> 00:45:09,330
own issues regarding naming I'm not

00:45:06,810 --> 00:45:12,510
using them as an example of the pinnacle

00:45:09,330 --> 00:45:16,470
of naming here they do allow you to

00:45:12,510 --> 00:45:18,270
enter other names that you go by I that

00:45:16,470 --> 00:45:22,260
was added to get around the fact that

00:45:18,270 --> 00:45:24,810
they try to force your so-called real

00:45:22,260 --> 00:45:27,510
name on you as your primary name and

00:45:24,810 --> 00:45:30,000
then you can have an additional name

00:45:27,510 --> 00:45:31,830
that will be in / ends I can see

00:45:30,000 --> 00:45:34,080
multiple potential solutions for that

00:45:31,830 --> 00:45:36,200
but I don't have one recommendation for

00:45:34,080 --> 00:45:36,200
it

00:45:44,720 --> 00:45:48,750
the question is about credit card

00:45:46,799 --> 00:45:52,049
standards international standards for

00:45:48,750 --> 00:45:54,210
mastercard or visa and as far as naming

00:45:52,049 --> 00:45:56,430
is concerned I'm not familiar with that

00:45:54,210 --> 00:45:58,760
area but I'd be interested in finding

00:45:56,430 --> 00:45:58,760
out more

00:46:08,470 --> 00:46:11,580
by plane

00:46:12,720 --> 00:46:17,280
so the question is about sudo

00:46:14,490 --> 00:46:19,260
localization where you don't have the

00:46:17,280 --> 00:46:22,710
translations you don't have the real

00:46:19,260 --> 00:46:26,670
world data but you want to test things

00:46:22,710 --> 00:46:30,990
out I sort of sort of a lorem ipsum

00:46:26,670 --> 00:46:32,760
using I you know non BMP characters for

00:46:30,990 --> 00:46:34,590
example to test out your systems and I

00:46:32,760 --> 00:46:37,020
definitely have her people doing that I

00:46:34,590 --> 00:46:40,290
generally have enough real-world data to

00:46:37,020 --> 00:46:42,240
work with but I that is you know if you

00:46:40,290 --> 00:46:44,750
don't have it yet that's a valid way to

00:46:42,240 --> 00:46:44,750
start out

00:46:59,260 --> 00:47:01,470
No

00:47:03,109 --> 00:47:11,390
so one comment is I what they do in

00:47:08,269 --> 00:47:14,869
real-world systems here is translate

00:47:11,390 --> 00:47:16,700
your English text to snowmen just the

00:47:14,869 --> 00:47:18,799
series of the Snowman character and if

00:47:16,700 --> 00:47:21,519
you don't see the Snowman on your output

00:47:18,799 --> 00:47:21,519
that you've got problems

00:47:49,990 --> 00:47:54,940
and Gloria has a if you haven't heard

00:47:52,750 --> 00:47:57,580
that Gloria has a great point is that

00:47:54,940 --> 00:48:01,300
some accounts represent two people often

00:47:57,580 --> 00:48:04,030
times I couples will have a single bank

00:48:01,300 --> 00:48:07,270
account or mortgage and you have two

00:48:04,030 --> 00:48:09,220
real human names there although they do

00:48:07,270 --> 00:48:11,950
represent two different people but that

00:48:09,220 --> 00:48:15,150
is another valid reason for collecting

00:48:11,950 --> 00:48:15,150
more than one name

00:48:33,010 --> 00:48:38,420
so I was pointed out that in I you know

00:48:36,440 --> 00:48:40,640
legal real estate documents often times

00:48:38,420 --> 00:48:43,580
they list all of the names that you have

00:48:40,640 --> 00:48:45,830
gone by in the past so I one more thing

00:48:43,580 --> 00:48:48,100
that I would like to mention that I

00:48:45,830 --> 00:48:50,690
hadn't so far is letter casing

00:48:48,100 --> 00:48:53,390
arbitrarily changing the letter case of

00:48:50,690 --> 00:48:57,290
somebody's name can corrupt their name I

00:48:53,390 --> 00:49:00,260
for example sometimes localized letter

00:48:57,290 --> 00:49:03,560
casing in certain locales is different

00:49:00,260 --> 00:49:06,310
than your default letter casing I in

00:49:03,560 --> 00:49:10,460
Turkish for example the Turkish

00:49:06,310 --> 00:49:14,020
lowercase I with a dot capitalizes two

00:49:10,460 --> 00:49:16,760
Turkish uppercase I with a dot and

00:49:14,020 --> 00:49:18,980
Turkish uppercase I without a dot which

00:49:16,760 --> 00:49:23,270
is your standard uppercase ASCII

00:49:18,980 --> 00:49:25,370
uppercase I lower cases to the lower

00:49:23,270 --> 00:49:26,900
case I without a dot so that's

00:49:25,370 --> 00:49:30,010
completely different than what you do in

00:49:26,900 --> 00:49:32,660
a scheme and if you are arbitrarily

00:49:30,010 --> 00:49:35,420
changing the letter case of your users

00:49:32,660 --> 00:49:36,830
names and you're not using the locale in

00:49:35,420 --> 00:49:39,440
mind which you probably don't even have

00:49:36,830 --> 00:49:42,560
for specific names then you are

00:49:39,440 --> 00:49:46,070
corrupting their name additionally many

00:49:42,560 --> 00:49:48,200
people have names with I segments of

00:49:46,070 --> 00:49:52,160
them that start with lowercase letters

00:49:48,200 --> 00:49:53,960
like dead or dead LA and if you are

00:49:52,160 --> 00:49:56,150
betrayal échange those you decide to

00:49:53,960 --> 00:49:58,070
title case everything well you're

00:49:56,150 --> 00:50:00,860
messing up their name again and I've

00:49:58,070 --> 00:50:03,590
seen this a lot in JavaScript and CSS

00:50:00,860 --> 00:50:06,050
we're on the front and side it's they

00:50:03,590 --> 00:50:08,030
just r EK everything to be title cased

00:50:06,050 --> 00:50:10,610
with lowercase everything else and I'd

00:50:08,030 --> 00:50:12,500
advise against that some we're out of

00:50:10,610 --> 00:50:14,780
time now but I'll be around for the rest

00:50:12,500 --> 00:50:17,240
of the day and dinner tonight thank you

00:50:14,780 --> 00:50:21,070
everyone very much and feel free to

00:50:17,240 --> 00:50:21,070
reach out to me add in Twitter

00:50:22,390 --> 00:50:24,450

YouTube URL: https://www.youtube.com/watch?v=SKbqCB2NPXw


