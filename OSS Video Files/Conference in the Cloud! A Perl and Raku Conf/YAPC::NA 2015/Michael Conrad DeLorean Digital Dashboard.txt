Title: Michael Conrad DeLorean Digital Dashboard
Publication date: 2015-06-16
Playlist: YAPC::NA 2015
Description: 
	
Captions: 
	00:00:00,220 --> 00:00:07,089
I'm presenting my dashboard project here

00:00:04,049 --> 00:00:08,230
this was originally going to be was

00:00:07,089 --> 00:00:09,910
originally going to be an hour talk and

00:00:08,230 --> 00:00:11,530
then they gave me a 20-minute slot so I

00:00:09,910 --> 00:00:13,390
turned it down and then it's back to an

00:00:11,530 --> 00:00:17,320
hour so I packed it up with some more

00:00:13,390 --> 00:00:19,449
stuff so we'll see how this goes I'm

00:00:17,320 --> 00:00:21,189
going to start off with a I give this

00:00:19,449 --> 00:00:23,409
presentation at the local perl mongers

00:00:21,189 --> 00:00:24,970
group in Cincinnati and people were

00:00:23,409 --> 00:00:27,880
actually more interested in the DeLorean

00:00:24,970 --> 00:00:30,099
than in the software so I'm going to do

00:00:27,880 --> 00:00:32,020
a quick review of the the history of the

00:00:30,099 --> 00:00:36,430
DeLorean just so everybody has you know

00:00:32,020 --> 00:00:39,430
some background on it all right so here

00:00:36,430 --> 00:00:42,160
we go i expanded it a little more at the

00:00:39,430 --> 00:00:46,720
last minute to so the DeLorean story in

00:00:42,160 --> 00:00:48,790
10 minutes alright so John DeLorean he

00:00:46,720 --> 00:00:51,190
was uh he was actually an engineer like

00:00:48,790 --> 00:00:56,530
a pretty good engineer according to the

00:00:51,190 --> 00:01:00,910
you know what other people say he

00:00:56,530 --> 00:01:03,280
started off that Chrysler and then GM

00:01:00,910 --> 00:01:07,300
hired him off of Chrysler because he was

00:01:03,280 --> 00:01:10,390
doing really good work after a while in

00:01:07,300 --> 00:01:11,290
GM they moved him into management and it

00:01:10,390 --> 00:01:13,450
turned out he was pretty good at

00:01:11,290 --> 00:01:16,540
management too they put him in charge of

00:01:13,450 --> 00:01:19,810
the pontiac division he's famous for

00:01:16,540 --> 00:01:21,580
creating the GTO which was kind of the

00:01:19,810 --> 00:01:23,740
first time that they ever stuck too

00:01:21,580 --> 00:01:25,900
large of an engine in the standard size

00:01:23,740 --> 00:01:28,659
car and that that's kind of started the

00:01:25,900 --> 00:01:33,640
whole muscle car era so there you have

00:01:28,659 --> 00:01:36,400
John DeLorean in front of his GTO the

00:01:33,640 --> 00:01:39,490
the he violated GM policy on a loud

00:01:36,400 --> 00:01:43,810
engine sizes but it sold really well so

00:01:39,490 --> 00:01:46,900
he got away with it yeah like I said he

00:01:43,810 --> 00:01:48,070
was pretty good at management he kind of

00:01:46,900 --> 00:01:51,670
went up the corporate ladder pretty

00:01:48,070 --> 00:01:54,010
quickly he also kind of turned he kind

00:01:51,670 --> 00:01:56,130
of changed a bit and kind of you know

00:01:54,010 --> 00:02:00,640
started hanging out with movie stars and

00:01:56,130 --> 00:02:01,900
Johnny Carson and eventually he worked

00:02:00,640 --> 00:02:03,250
his way all the way up to the vice

00:02:01,900 --> 00:02:07,000
president of all car and truck

00:02:03,250 --> 00:02:08,679
manufacturing for GM but his flash and

00:02:07,000 --> 00:02:11,590
glam lifestyle was kind of clashing with

00:02:08,679 --> 00:02:13,750
gm's conservative gray suit culture and

00:02:11,590 --> 00:02:15,880
so then they kind of

00:02:13,750 --> 00:02:17,560
he either quit or they forced him to

00:02:15,880 --> 00:02:18,820
eggs or something like that and he

00:02:17,560 --> 00:02:23,980
decided he was going to go start his own

00:02:18,820 --> 00:02:25,900
car company so um one of his one of his

00:02:23,980 --> 00:02:27,010
goals was you know kind of google it was

00:02:25,900 --> 00:02:28,390
you know he was going to make ethical

00:02:27,010 --> 00:02:29,980
cars they're gonna have more safety

00:02:28,390 --> 00:02:34,300
features they're going to be cheaper to

00:02:29,980 --> 00:02:36,550
repair and last longer he decided you

00:02:34,300 --> 00:02:38,080
know his sports cars were kind of his

00:02:36,550 --> 00:02:39,520
thing so he decided that the first car

00:02:38,080 --> 00:02:41,020
his company was going to produce was

00:02:39,520 --> 00:02:43,120
going to be the sports coupe and he was

00:02:41,020 --> 00:02:44,410
going to pull in all of those cool ideas

00:02:43,120 --> 00:02:46,420
that he'd been coming up with over the

00:02:44,410 --> 00:02:48,880
years some of which GM had shut him down

00:02:46,420 --> 00:02:50,739
on and not let him do so he was going to

00:02:48,880 --> 00:02:51,850
have rear engine it was going to have

00:02:50,739 --> 00:02:53,709
gullwing doors there's going to have

00:02:51,850 --> 00:02:54,850
airbags it was gonna he had all these

00:02:53,709 --> 00:02:56,200
like different ideas for different

00:02:54,850 --> 00:02:57,940
engines that you could put in the thing

00:02:56,200 --> 00:02:59,680
one of the ideas was a wankel rotary

00:02:57,940 --> 00:03:01,630
engine other what ideas that he had were

00:02:59,680 --> 00:03:04,480
in line cylinders where the cylinders

00:03:01,630 --> 00:03:07,239
are you know I guess airplanes use that

00:03:04,480 --> 00:03:09,280
I did sort of and he had all these ideas

00:03:07,239 --> 00:03:11,080
for innovative manufacturing processes

00:03:09,280 --> 00:03:12,730
like he was he was going to build the

00:03:11,080 --> 00:03:17,320
whole thing out of like a fiberglass

00:03:12,730 --> 00:03:19,120
amanha body anyway so they built the

00:03:17,320 --> 00:03:22,390
factory in North Ireland with the huge

00:03:19,120 --> 00:03:24,220
government incentives and he got that by

00:03:22,390 --> 00:03:25,780
playing great britain versus Puerto Rico

00:03:24,220 --> 00:03:28,299
to see what who would give him the best

00:03:25,780 --> 00:03:30,400
deal the British government was trying

00:03:28,299 --> 00:03:33,160
to find work for a large unemployed

00:03:30,400 --> 00:03:35,560
Irish population so they were looking

00:03:33,160 --> 00:03:40,299
for you know ways to entice businesses

00:03:35,560 --> 00:03:42,209
to enter the area so the problem though

00:03:40,299 --> 00:03:44,680
is you take a brand new company and

00:03:42,209 --> 00:03:46,900
whole bunch of revolutionary new designs

00:03:44,680 --> 00:03:49,150
and a whole bunch of revolutionary new

00:03:46,900 --> 00:03:51,820
manufacturing processes and workforce

00:03:49,150 --> 00:03:54,940
who is unfamiliar with cars like some of

00:03:51,820 --> 00:03:57,040
them had never driven a car before and

00:03:54,940 --> 00:03:59,290
then you take the political instability

00:03:57,040 --> 00:04:01,900
of Northern Ireland which write about

00:03:59,290 --> 00:04:03,190
them you know they had multiples being

00:04:01,900 --> 00:04:07,030
thrown over the fence and burned down

00:04:03,190 --> 00:04:09,820
their office not very you know conducive

00:04:07,030 --> 00:04:11,590
to getting things done and that resulted

00:04:09,820 --> 00:04:15,010
in delays budget overruns and a

00:04:11,590 --> 00:04:16,959
quality-control nightmare so meanwhile

00:04:15,010 --> 00:04:18,820
in the u.s. we had the fuel crisis going

00:04:16,959 --> 00:04:20,739
on so everybody's more you know

00:04:18,820 --> 00:04:23,830
conscious about you know what kind of

00:04:20,739 --> 00:04:25,570
car they're buying new bumper height

00:04:23,830 --> 00:04:27,520
laws you know

00:04:25,570 --> 00:04:29,500
go so well for sports cars you had to

00:04:27,520 --> 00:04:31,270
raise them up quite a bit new emission

00:04:29,500 --> 00:04:33,160
control laws you had to put catalytic

00:04:31,270 --> 00:04:35,230
converters and the you know oxygen

00:04:33,160 --> 00:04:37,270
sensor and the few you know dynamic fuel

00:04:35,230 --> 00:04:38,890
mixing and all that stuff and since this

00:04:37,270 --> 00:04:40,630
is a brand new technology really sucked

00:04:38,890 --> 00:04:43,930
down the horsepower on you know the

00:04:40,630 --> 00:04:46,480
existing systems and the u.s. grain into

00:04:43,930 --> 00:04:49,000
her session so he's paying for all these

00:04:46,480 --> 00:04:51,250
European you know labor in parts and

00:04:49,000 --> 00:04:55,660
then bringing it the wrong way across

00:04:51,250 --> 00:04:57,940
the exchange rate over to the US so the

00:04:55,660 --> 00:05:02,080
eight years later they finally delivered

00:04:57,940 --> 00:05:04,390
the dmc-12 using only about half of the

00:05:02,080 --> 00:05:06,790
innovative new ideas and it was a bit

00:05:04,390 --> 00:05:09,580
heavier and then planned and a bit less

00:05:06,790 --> 00:05:13,450
powerful and had to be priced closer to

00:05:09,580 --> 00:05:15,400
a Porsche than a Camaro so the other the

00:05:13,450 --> 00:05:17,230
other thing that went badly is that all

00:05:15,400 --> 00:05:18,940
the people who were excited about this

00:05:17,230 --> 00:05:20,650
thing that was going to be so cool and

00:05:18,940 --> 00:05:21,850
priced about the price of a Camaro and

00:05:20,650 --> 00:05:23,650
then it was suddenly the price of a

00:05:21,850 --> 00:05:25,240
Porsche were kind of you know

00:05:23,650 --> 00:05:28,720
disappointed because they were going to

00:05:25,240 --> 00:05:30,640
get to get one so a year and a half

00:05:28,720 --> 00:05:32,740
later after the they started production

00:05:30,640 --> 00:05:35,080
they were further in debt they had some

00:05:32,740 --> 00:05:39,730
negative publicity going around Johnny

00:05:35,080 --> 00:05:42,250
Carson got locked in his car and the

00:05:39,730 --> 00:05:45,850
sales were you know getting worse the

00:05:42,250 --> 00:05:47,440
you know slowing down but the

00:05:45,850 --> 00:05:53,020
engineering production problems were

00:05:47,440 --> 00:05:55,690
mostly solved mostly so then the the

00:05:53,020 --> 00:05:58,290
final nail in the coffin was an FBI

00:05:55,690 --> 00:06:00,490
informants who was a former drug dealer

00:05:58,290 --> 00:06:02,650
trying to reduce his own sentence

00:06:00,490 --> 00:06:04,300
approach DeLorean for a fake drug deal

00:06:02,650 --> 00:06:07,120
that could save the company and learning

00:06:04,300 --> 00:06:08,980
and took the bait so the Lee what case

00:06:07,120 --> 00:06:11,440
was equally easily defended because it's

00:06:08,980 --> 00:06:14,080
a textbook case of entrapment but it

00:06:11,440 --> 00:06:15,400
destroyed DeLoreans credibility and then

00:06:14,080 --> 00:06:19,780
the British government foreclosed the

00:06:15,400 --> 00:06:21,790
company so after that consolidated which

00:06:19,780 --> 00:06:24,220
we know around here as Big Lots took

00:06:21,790 --> 00:06:25,900
over the company they produced the 83

00:06:24,220 --> 00:06:28,300
model which was really just a bunch of

00:06:25,900 --> 00:06:29,680
81 and 82 parts just to sub oldest you

00:06:28,300 --> 00:06:31,990
know wherever they found enough parts to

00:06:29,680 --> 00:06:33,460
make a whole car that there's anything

00:06:31,990 --> 00:06:35,610
wrong with the 83 is you just you know

00:06:33,460 --> 00:06:37,349
some of them have 81 hoods and

00:06:35,610 --> 00:06:40,740
if I have late 81 hoods and some of them

00:06:37,349 --> 00:06:42,960
have a two-thirds and so on and then

00:06:40,740 --> 00:06:44,969
they sold off the assets all the

00:06:42,960 --> 00:06:49,430
remaining parts went to company called k

00:06:44,969 --> 00:06:52,139
packing Columbus Ohio so then in 85

00:06:49,430 --> 00:06:56,210
Universal used the DeLorean in there you

00:06:52,139 --> 00:06:58,530
know called classic movie and then

00:06:56,210 --> 00:07:00,800
enthusiasts started buying up the now

00:06:58,530 --> 00:07:02,759
relatively affordable to organs and

00:07:00,800 --> 00:07:05,150
started solving the remaining

00:07:02,759 --> 00:07:08,580
engineering problems you know so there's

00:07:05,150 --> 00:07:10,199
a they were there was still a few things

00:07:08,580 --> 00:07:12,990
that you know could cause your car to

00:07:10,199 --> 00:07:14,939
not start if it was hot on you know

00:07:12,990 --> 00:07:16,710
three hours after you had been driving

00:07:14,939 --> 00:07:18,150
on a hot day there were just some weird

00:07:16,710 --> 00:07:20,340
stuff like that and so people finally

00:07:18,150 --> 00:07:22,860
traced down what this stuff was and

00:07:20,340 --> 00:07:26,430
gotten most of the problem solved also

00:07:22,860 --> 00:07:28,710
some electrical grounding issues and so

00:07:26,430 --> 00:07:31,020
than a decade later one of the Texas

00:07:28,710 --> 00:07:32,159
dealerships for the DeLorean decided

00:07:31,020 --> 00:07:34,229
they were going to buy up all the

00:07:32,159 --> 00:07:37,500
remaining parts and they renamed himself

00:07:34,229 --> 00:07:39,060
as the new delorean motor company they

00:07:37,500 --> 00:07:40,830
started building new cars from the

00:07:39,060 --> 00:07:42,820
remaining original rolling chassis which

00:07:40,830 --> 00:07:46,510
hadn't been finished biking

00:07:42,820 --> 00:07:49,050
and so because the VINs had already been

00:07:46,510 --> 00:07:51,520
allocated they were able to use the 1980

00:07:49,050 --> 00:07:53,260
car regulations so they can still

00:07:51,520 --> 00:07:57,070
produce the durian without modern

00:07:53,260 --> 00:07:59,980
updates so many owners continue with

00:07:57,070 --> 00:08:02,200
DeLorean spirit of innovation there's a

00:07:59,980 --> 00:08:04,000
lot of aftermarket upgrades available

00:08:02,200 --> 00:08:05,470
they have like door launchers you know

00:08:04,000 --> 00:08:09,220
if you get a remote button your doors

00:08:05,470 --> 00:08:11,680
open and a whole bunch of you know in

00:08:09,220 --> 00:08:15,310
further improvements on the original

00:08:11,680 --> 00:08:17,260
things and there's also a whole bunch of

00:08:15,310 --> 00:08:21,160
interesting custom creations that people

00:08:17,260 --> 00:08:23,140
have made so there we have a good one of

00:08:21,160 --> 00:08:25,060
the best examples of a Back to the

00:08:23,140 --> 00:08:28,270
Future car replica he's gone a little

00:08:25,060 --> 00:08:33,010
overboard with the LEDs I think but it

00:08:28,270 --> 00:08:35,740
is it looks unbelievable at night you

00:08:33,010 --> 00:08:40,690
have Ryan Brandis who has a movie

00:08:35,740 --> 00:08:42,370
theater on the inside of his hood he has

00:08:40,690 --> 00:08:43,539
a button that like opens the hood and

00:08:42,370 --> 00:08:45,460
then a mac mini on there and you can

00:08:43,539 --> 00:08:48,720
start your mouse in the center console

00:08:45,460 --> 00:08:48,720
and can start playing movies on it

00:08:49,590 --> 00:08:55,060
probably not question is well you can do

00:08:52,930 --> 00:08:57,730
that while driving this is Dave Devon's

00:08:55,060 --> 00:08:59,170
electric DeLorean those are lead acid

00:08:57,730 --> 00:09:03,130
batteries in the front and rear the big

00:08:59,170 --> 00:09:06,190
yellow ones you have Nick rhodos LS one

00:09:03,130 --> 00:09:08,110
that's a Corvette engine DeLorean a very

00:09:06,190 --> 00:09:10,570
very large engine goes gray very fast

00:09:08,110 --> 00:09:12,760
he's also been featured on multiple TV

00:09:10,570 --> 00:09:19,050
shows like car fix did an episode on him

00:09:12,760 --> 00:09:19,050
recently rich Weissman licenses dear ex

00:09:20,160 --> 00:09:24,640
rich w's DeLorean convertible defeats

00:09:23,320 --> 00:09:27,750
the purpose a little bit but it looks

00:09:24,640 --> 00:09:30,310
really nice and rich w's DeLorean limo

00:09:27,750 --> 00:09:32,080
there were there was a Photoshop limo

00:09:30,310 --> 00:09:33,460
DeLorean limbo going around this is not

00:09:32,080 --> 00:09:41,800
the photoshopped one this is the real

00:09:33,460 --> 00:09:43,900
one oh and and so you know part of the

00:09:41,800 --> 00:09:45,640
reason why I think people do this to the

00:09:43,900 --> 00:09:47,680
DeLorean is because it's almost like it

00:09:45,640 --> 00:09:49,120
was never quite finished it didn't have

00:09:47,680 --> 00:09:51,730
all the special features that John

00:09:49,120 --> 00:09:53,320
DeLorean wanted to put in it and it well

00:09:51,730 --> 00:09:55,060
the engineering wasn't quite you know

00:09:53,320 --> 00:09:55,820
perfected and so people feel like this

00:09:55,060 --> 00:09:58,970
is

00:09:55,820 --> 00:10:00,290
a cool you know thing to expand on it

00:09:58,970 --> 00:10:02,750
was also supposed to be kind of the

00:10:00,290 --> 00:10:04,610
futuristic car and so now it's kind of

00:10:02,750 --> 00:10:08,210
getting a little bit dated being you

00:10:04,610 --> 00:10:11,210
know 35 years old and so you know people

00:10:08,210 --> 00:10:14,570
feel the need to do some updates and

00:10:11,210 --> 00:10:17,150
some the FAQ things that you run into in

00:10:14,570 --> 00:10:20,600
car shows where's the flux capacitor in

00:10:17,150 --> 00:10:24,170
Oliver's car those are aluminum right no

00:10:20,600 --> 00:10:26,780
they are steel frame a fiberglass tub

00:10:24,170 --> 00:10:28,900
that sits on top of it and stainless in

00:10:26,780 --> 00:10:32,060
stainless steel panels on the outside

00:10:28,900 --> 00:10:35,300
how's the gas mileage mine gets about 27

00:10:32,060 --> 00:10:36,890
miles per gallon it has a v6 they that

00:10:35,300 --> 00:10:38,210
was one of the things they did because

00:10:36,890 --> 00:10:41,450
of the fuel crisis they dropped from a

00:10:38,210 --> 00:10:42,710
v8 to a v6 which anybody paying that

00:10:41,450 --> 00:10:44,590
much for a car probably wouldn't care

00:10:42,710 --> 00:10:47,480
about the price of fuel so I don't know

00:10:44,590 --> 00:10:48,920
can you see look at get parts yes the

00:10:47,480 --> 00:10:51,410
Texas dealership and there's also a

00:10:48,920 --> 00:10:53,120
bunch of people who just manufacture

00:10:51,410 --> 00:10:55,550
their own you know custom stuff and then

00:10:53,120 --> 00:10:57,530
we kind of you know trade notes between

00:10:55,550 --> 00:11:00,710
each other and send each other designs

00:10:57,530 --> 00:11:03,590
and stuff I heard those aren't very

00:11:00,710 --> 00:11:05,060
reliable well they weren't in 81 but

00:11:03,590 --> 00:11:08,350
they've pretty much fixed that since

00:11:05,060 --> 00:11:15,230
then where you can find one of these um

00:11:08,350 --> 00:11:16,730
main but more specifically there's six

00:11:15,230 --> 00:11:19,010
thousand of them still on the road and

00:11:16,730 --> 00:11:20,120
if you divide that by 50 states or you

00:11:19,010 --> 00:11:22,070
know 48 because there's probably not

00:11:20,120 --> 00:11:24,320
very many in Hawaii then you end up with

00:11:22,070 --> 00:11:28,640
more than 100 per state so they're

00:11:24,320 --> 00:11:30,920
around all right so that's what I've got

00:11:28,640 --> 00:11:37,310
on the DeLorean itself so what I decided

00:11:30,920 --> 00:11:41,090
I needed to do oh sure the door prize uh

00:11:37,310 --> 00:11:43,070
well actually at every every DeLorean

00:11:41,090 --> 00:11:44,600
car show that we've done up and they do

00:11:43,070 --> 00:11:46,040
with DeLorean car show every two years

00:11:44,600 --> 00:11:47,750
where they have like the big gathering

00:11:46,040 --> 00:11:50,060
of DeLoreans and they have like 500

00:11:47,750 --> 00:11:52,250
people and 200 deloreans and stuff like

00:11:50,060 --> 00:11:54,100
that they actually do raffle off a

00:11:52,250 --> 00:11:56,720
DeLorean at every single one of those

00:11:54,100 --> 00:11:59,030
the one in twenty sixteen is going to be

00:11:56,720 --> 00:12:02,200
run by a different person so there may

00:11:59,030 --> 00:12:02,200
or may not be a raffle carp

00:12:04,839 --> 00:12:11,420
he died in 2005 actually but he actually

00:12:09,410 --> 00:12:20,990
was going to the DeLorean car shows for

00:12:11,420 --> 00:12:22,459
you know up until he died so oh great

00:12:20,990 --> 00:12:23,870
that's one of the FAQ is this what

00:12:22,459 --> 00:12:28,850
happens in 88 miles an hour and the

00:12:23,870 --> 00:12:31,360
answer is you get a speeding ticket it

00:12:28,850 --> 00:12:35,149
actually it is actually a very

00:12:31,360 --> 00:12:36,350
comfortable car you lay back in it and

00:12:35,149 --> 00:12:47,329
it's almost like it's like driving

00:12:36,350 --> 00:12:49,790
around in a lawn chair he doesn't yet

00:12:47,329 --> 00:12:51,350
the limit was not actually he's come a

00:12:49,790 --> 00:12:54,199
long way on that project but there's a

00:12:51,350 --> 00:12:56,029
long way to get to go so like he had to

00:12:54,199 --> 00:12:57,769
custom fabricate a whole bunch of

00:12:56,029 --> 00:13:00,620
stainless panels to fit between the

00:12:57,769 --> 00:13:02,209
doors and that he has more work to do on

00:13:00,620 --> 00:13:08,110
the interior and then there's the

00:13:02,209 --> 00:13:10,790
problem of the turning radius so right I

00:13:08,110 --> 00:13:15,259
would have if it were not 24 hours of

00:13:10,790 --> 00:13:17,779
driving from Cincinnati yeah so if we

00:13:15,259 --> 00:13:24,079
move gap see closer to Cincinnati X next

00:13:17,779 --> 00:13:27,819
year it'll be there oh yeah I could do

00:13:24,079 --> 00:13:27,819
Baltimore so you'll see it next year

00:13:31,490 --> 00:13:38,190
alright so a digital dashboard project

00:13:35,690 --> 00:13:40,230
here is the stock instrument cluster of

00:13:38,190 --> 00:13:42,450
the DeLorean so you've got this like

00:13:40,230 --> 00:13:43,950
cool stainless steel you know awesome

00:13:42,450 --> 00:13:45,570
thing with the gullwing doors and you

00:13:43,950 --> 00:13:50,070
get in and you're looking at those you

00:13:45,570 --> 00:13:51,690
know like 1980s galvanometer gauges so

00:13:50,070 --> 00:13:55,170
you turn on power and the galvanometers

00:13:51,690 --> 00:13:58,500
go plane and point you know so it's not

00:13:55,170 --> 00:14:00,000
very inspiring if the the instrument

00:13:58,500 --> 00:14:02,280
cluster feels much less inspired than

00:14:00,000 --> 00:14:03,960
the rest so there's another view of it

00:14:02,280 --> 00:14:06,600
you can see it's got its but I'm under

00:14:03,960 --> 00:14:10,560
attack you know oil fuel pressure stuff

00:14:06,600 --> 00:14:12,600
like that so I don't know how well this

00:14:10,560 --> 00:14:14,310
shows up on camera but anyway so I

00:14:12,600 --> 00:14:16,710
decided that my goal is going to be to

00:14:14,310 --> 00:14:22,050
put a very large computer monitor in

00:14:16,710 --> 00:14:27,330
there like fat that is one of my early

00:14:22,050 --> 00:14:29,670
prototypes it's made with you you go to

00:14:27,330 --> 00:14:31,110
harbor freight and by the spot welder

00:14:29,670 --> 00:14:32,580
for like 200 bucks and then you get a

00:14:31,110 --> 00:14:34,890
bunch of galvanized steel wire and you

00:14:32,580 --> 00:14:37,920
get wire cutters and you just bend it

00:14:34,890 --> 00:14:39,390
and cut it and then pop it in the spot

00:14:37,920 --> 00:14:41,640
welder and you can just make whatever

00:14:39,390 --> 00:14:43,920
you want as a wire frame and you can see

00:14:41,640 --> 00:14:45,540
there I have a LCD monitor facedown on

00:14:43,920 --> 00:14:49,670
the top and it's bouncing off of a

00:14:45,540 --> 00:14:51,660
mirror which is why the images backwards

00:14:49,670 --> 00:14:55,590
so there's what happens when you take

00:14:51,660 --> 00:15:00,240
part in LCD monitor there's the harbor

00:14:55,590 --> 00:15:02,940
freight spot welder there is the outside

00:15:00,240 --> 00:15:05,040
shape of the fiberglass I just after

00:15:02,940 --> 00:15:06,150
mocking it up I you know got down to the

00:15:05,040 --> 00:15:08,910
actual part of making it out of

00:15:06,150 --> 00:15:11,810
fiberglass which is a whole lot of work

00:15:08,910 --> 00:15:14,670
and used up my garage for an entire year

00:15:11,810 --> 00:15:16,560
so there's the outside shape there is me

00:15:14,670 --> 00:15:19,200
making a fiberglass cast of the actual

00:15:16,560 --> 00:15:22,650
dashboard are the frame underneath of

00:15:19,200 --> 00:15:24,810
the dashboard there is the dashboard

00:15:22,650 --> 00:15:28,980
Matt sitting on top of the dashboard or

00:15:24,810 --> 00:15:30,750
on top of my mock up there is the two of

00:15:28,980 --> 00:15:32,780
them all kind of sandwich together as I

00:15:30,750 --> 00:15:34,980
try fiberglassing it all together

00:15:32,780 --> 00:15:38,150
there's kind of the finished product

00:15:34,980 --> 00:15:40,710
with the mirror holder in the back and

00:15:38,150 --> 00:15:41,880
there it is with monitor installed and

00:15:40,710 --> 00:15:43,260
the mirror holder installed and the

00:15:41,880 --> 00:15:44,760
monitor circuit boards on the back of

00:15:43,260 --> 00:15:49,480
the mirror

00:15:44,760 --> 00:15:51,160
so the next problem DeLorean was the

00:15:49,480 --> 00:15:54,130
DeLorean was produced before the can bus

00:15:51,160 --> 00:15:57,340
or the odbc yeah ODB connectors were

00:15:54,130 --> 00:16:00,040
invented so can bus began in 83 and was

00:15:57,340 --> 00:16:02,170
officially released in 86 and ODB

00:16:00,040 --> 00:16:03,790
standard I was standardized in 91 and

00:16:02,170 --> 00:16:06,310
then they didn't standardize the ODB two

00:16:03,790 --> 00:16:15,010
until 94 and it wasn't in production

00:16:06,310 --> 00:16:16,690
cars until 96 so analog schematics yeah

00:16:15,010 --> 00:16:18,760
I have this printed out on two very

00:16:16,690 --> 00:16:20,410
large sheets of paper at home and I

00:16:18,760 --> 00:16:23,590
consulted semi-regularly whenever I'm

00:16:20,410 --> 00:16:26,140
doing electrical work and there is my

00:16:23,590 --> 00:16:30,460
8-bit microcontroller it's the AVR made

00:16:26,140 --> 00:16:32,170
by atmel and it is on the bottom left

00:16:30,460 --> 00:16:33,760
there you see the those are the

00:16:32,170 --> 00:16:35,140
connectors that used to go into the back

00:16:33,760 --> 00:16:38,290
of the instrument cluster I kind of

00:16:35,140 --> 00:16:40,660
that's my early version of the receiving

00:16:38,290 --> 00:16:43,720
end I just epoxy putty over the end of

00:16:40,660 --> 00:16:45,550
the connector and then pulled it apart

00:16:43,720 --> 00:16:47,500
and kind of drilled out holes put in

00:16:45,550 --> 00:16:49,810
wires and then the the microcontroller

00:16:47,500 --> 00:16:52,150
is on a little protoboard there that has

00:16:49,810 --> 00:16:54,760
the circuit on the back and it's plugged

00:16:52,150 --> 00:16:56,350
into the power for the radio that's all

00:16:54,760 --> 00:16:59,680
changed by now but that was that was my

00:16:56,350 --> 00:17:01,450
first attempt so here is now we're

00:16:59,680 --> 00:17:07,450
getting to the actual programming part

00:17:01,450 --> 00:17:09,430
here so I this this is back in like 2011

00:17:07,450 --> 00:17:10,750
and so I decided that you know of course

00:17:09,430 --> 00:17:12,850
the right way to do this is to write it

00:17:10,750 --> 00:17:15,970
all in see you went to you know have

00:17:12,850 --> 00:17:17,380
like you know fast snappy responsive

00:17:15,970 --> 00:17:19,300
gauges and stuff like that it's all got

00:17:17,380 --> 00:17:21,160
to be like low level c and binary

00:17:19,300 --> 00:17:24,820
packets and you know ship that stuff

00:17:21,160 --> 00:17:26,560
around as fast as possible so the

00:17:24,820 --> 00:17:30,580
microcontroller is programmed in kind of

00:17:26,560 --> 00:17:32,980
a mix of c and assembly i was sending us

00:17:30,580 --> 00:17:34,990
be human interface device packets which

00:17:32,980 --> 00:17:36,460
was just a library that was kind of

00:17:34,990 --> 00:17:38,530
handy and i didn't have to do you know

00:17:36,460 --> 00:17:41,460
they were never see libraries available

00:17:38,530 --> 00:17:43,840
on the receiving end like live USB and

00:17:41,460 --> 00:17:46,330
then I had my micro controlled Damon

00:17:43,840 --> 00:17:47,860
which reads the packets and translates

00:17:46,330 --> 00:17:50,770
them because microcontrollers don't do

00:17:47,860 --> 00:17:52,240
floating-point so well so all of the

00:17:50,770 --> 00:17:55,360
interesting math is done in the daemon

00:17:52,240 --> 00:17:57,539
now wrote that in C++ and then it is

00:17:55,360 --> 00:18:00,539
sending UNIX datagrams which all

00:17:57,539 --> 00:18:04,769
contain binary data to the GUI which was

00:18:00,539 --> 00:18:06,539
written in C++ as well so my workflow is

00:18:04,769 --> 00:18:08,669
kind of that I would hack on the

00:18:06,539 --> 00:18:12,080
microcontroller code which looks kind of

00:18:08,669 --> 00:18:13,950
like this you know nasty kind of

00:18:12,080 --> 00:18:17,249
typecast everywhere because it's an

00:18:13,950 --> 00:18:20,639
8-bit microcontroller and see the yeah

00:18:17,249 --> 00:18:22,440
see Ching just think changes the bit

00:18:20,639 --> 00:18:24,119
widths of everything when you perform

00:18:22,440 --> 00:18:27,720
operations on it so you requires a whole

00:18:24,119 --> 00:18:29,639
bunch of typecasting and then I would

00:18:27,720 --> 00:18:31,109
change my structures that I was passing

00:18:29,639 --> 00:18:34,080
my data around in they look kind of like

00:18:31,109 --> 00:18:37,409
this notice the 24 bit integers that I'm

00:18:34,080 --> 00:18:40,229
stirring the speed and the tack timing

00:18:37,409 --> 00:18:43,409
things in because you only have 64 bytes

00:18:40,229 --> 00:18:45,119
in aus v packet so I was trying to get

00:18:43,409 --> 00:18:47,129
as many you know data points as I could

00:18:45,119 --> 00:18:49,820
in the space of the packet so I ended up

00:18:47,129 --> 00:18:54,359
doing wonky stuff like 24 bit integers

00:18:49,820 --> 00:18:57,029
then I would go and change the

00:18:54,359 --> 00:19:00,299
processing code in the daemon so there's

00:18:57,029 --> 00:19:02,070
the thing that's reading the human

00:19:00,299 --> 00:19:03,749
interface device packets and then

00:19:02,070 --> 00:19:05,669
looking at the integer to see what kind

00:19:03,749 --> 00:19:06,899
of packet it is and then setting it to

00:19:05,669 --> 00:19:08,519
the correct size because it's not all of

00:19:06,899 --> 00:19:10,229
my packets needed to be 64 bytes

00:19:08,519 --> 00:19:12,690
although they were all 64 bytes as they

00:19:10,229 --> 00:19:14,340
came over the USB bus and you know a

00:19:12,690 --> 00:19:17,220
whole bunch of you know low-level fiddly

00:19:14,340 --> 00:19:18,599
stuff and then I would recompile both

00:19:17,220 --> 00:19:20,820
and then I would reflash the my printer

00:19:18,599 --> 00:19:23,519
controller and then there would be bugs

00:19:20,820 --> 00:19:25,619
and then I would update and recompile

00:19:23,519 --> 00:19:28,080
the utilities that would view my packets

00:19:25,619 --> 00:19:30,869
and they looked and here's some sample

00:19:28,080 --> 00:19:32,309
code of my message utility library so i

00:19:30,869 --> 00:19:34,470
would take one of my packets and i would

00:19:32,309 --> 00:19:36,720
like you know print out all of the

00:19:34,470 --> 00:19:38,309
fields in a human readable manner that I

00:19:36,720 --> 00:19:39,599
could try and figure out you know what

00:19:38,309 --> 00:19:42,809
was going wrong in the microcontroller

00:19:39,599 --> 00:19:46,799
and how to fix it and then I would debug

00:19:42,809 --> 00:19:48,269
those two and then I would decide that I

00:19:46,799 --> 00:19:52,200
needed more information in the packets

00:19:48,269 --> 00:19:57,330
and repeat so it was a very

00:19:52,200 --> 00:19:59,039
time-consuming workflow oh and when I

00:19:57,330 --> 00:20:01,499
wanted to do add a new widget to the GUI

00:19:59,039 --> 00:20:04,379
I would sit down and I would write up a

00:20:01,499 --> 00:20:07,739
new class like the tachometer gauge and

00:20:04,379 --> 00:20:10,590
you know the whole C++ boilerplate that

00:20:07,739 --> 00:20:11,430
you do for every single class and then i

00:20:10,590 --> 00:20:12,630
would add resource ID

00:20:11,430 --> 00:20:14,220
use for the textures and the fonts that

00:20:12,630 --> 00:20:15,720
I was using and I would load the

00:20:14,220 --> 00:20:17,400
resources at the start up of the program

00:20:15,720 --> 00:20:20,160
and then I would construct the widget it

00:20:17,400 --> 00:20:22,980
start up and there you have an example

00:20:20,160 --> 00:20:24,900
of loading the the three fonts that i

00:20:22,980 --> 00:20:27,900
was using with the font ids you know

00:20:24,900 --> 00:20:29,550
which of our new enumeration and setting

00:20:27,900 --> 00:20:30,990
the parameters for where the tat gauge

00:20:29,550 --> 00:20:32,700
is going to appear on the screen and

00:20:30,990 --> 00:20:35,130
then you know step you know create the

00:20:32,700 --> 00:20:36,510
new tech gauge and stuff like that and I

00:20:35,130 --> 00:20:38,100
would add the code to the main loop that

00:20:36,510 --> 00:20:40,860
renders the widget and then i would

00:20:38,100 --> 00:20:42,090
start designing a 0 and so it was all

00:20:40,860 --> 00:20:44,100
taking a lot of time and so I started

00:20:42,090 --> 00:20:46,380
designing a smarter resource library but

00:20:44,100 --> 00:20:51,870
gave up because it was you know I didn't

00:20:46,380 --> 00:20:53,880
have time to do it the better way so and

00:20:51,870 --> 00:20:56,160
yeah and then I had to recompile anytime

00:20:53,880 --> 00:20:59,450
the data packets changed which you know

00:20:56,160 --> 00:21:01,620
oh and the other problem is that I had

00:20:59,450 --> 00:21:03,300
you know so the GUI and then the

00:21:01,620 --> 00:21:05,160
microcontroller and then the daemon and

00:21:03,300 --> 00:21:08,520
I had all three of them as separate

00:21:05,160 --> 00:21:10,170
projects and so my make files we're

00:21:08,520 --> 00:21:11,760
crossing back and forth between the

00:21:10,170 --> 00:21:14,010
three project directory is trying to

00:21:11,760 --> 00:21:15,120
keep the three of them in sync and you

00:21:14,010 --> 00:21:16,740
know then you go get check out a

00:21:15,120 --> 00:21:19,710
previous reversion then you've got to go

00:21:16,740 --> 00:21:21,990
recompile all three of them anyway so

00:21:19,710 --> 00:21:24,180
this is kind of my estimated time

00:21:21,990 --> 00:21:27,330
breakdown I didn't actually record you

00:21:24,180 --> 00:21:29,370
know time spent but anyway so I spent a

00:21:27,330 --> 00:21:35,010
decent amount of time on those stupid

00:21:29,370 --> 00:21:37,170
make files and then the graphics that I

00:21:35,010 --> 00:21:39,600
was drawing by hand and well just

00:21:37,170 --> 00:21:42,870
that's kind of unavoidable the graphics

00:21:39,600 --> 00:21:44,460
that I was doing in OpenGL OpenGL is not

00:21:42,870 --> 00:21:46,170
super friendly to write a whole bunch of

00:21:44,460 --> 00:21:47,610
it by hand and that was kind of what I

00:21:46,170 --> 00:21:50,400
was doing because I was just prototyping

00:21:47,610 --> 00:21:52,650
things so I spending a lot you know a

00:21:50,400 --> 00:21:54,780
decent amount of time on that the

00:21:52,650 --> 00:21:57,290
program structure you know in C++ it's

00:21:54,780 --> 00:21:59,510
extra effort to go through and just

00:21:57,290 --> 00:22:01,590
structures you know I want to have these

00:21:59,510 --> 00:22:03,180
15 widgets so you've got to have a

00:22:01,590 --> 00:22:07,260
pointer for each one of them and kind of

00:22:03,180 --> 00:22:11,640
a managed the life cycle the binary

00:22:07,260 --> 00:22:12,600
packet support code you know that just

00:22:11,640 --> 00:22:14,510
seemed like the right way at the time

00:22:12,600 --> 00:22:17,640
but he was using up a lot of effort

00:22:14,510 --> 00:22:21,240
debugging the AVR the stupid little

00:22:17,640 --> 00:22:23,040
micro controller has no way to print

00:22:21,240 --> 00:22:25,410
messages other than you know what you've

00:22:23,040 --> 00:22:27,990
programmed into it so I was trying to

00:22:25,410 --> 00:22:31,110
do all of my debugging over the USB

00:22:27,990 --> 00:22:33,300
human interface device packets and you

00:22:31,110 --> 00:22:35,610
can't just say generate a packets on

00:22:33,300 --> 00:22:36,750
this line or you're in a tight loop and

00:22:35,610 --> 00:22:38,550
you're like generated packet generator

00:22:36,750 --> 00:22:40,350
packet no because the USB bus has a

00:22:38,550 --> 00:22:43,980
clock and you can only write so many

00:22:40,350 --> 00:22:45,660
packets per millisecond so the debugging

00:22:43,980 --> 00:22:47,130
code that you write has to be very

00:22:45,660 --> 00:22:48,720
conservative about how much bandwidth

00:22:47,130 --> 00:22:50,310
it's using because the regular packets

00:22:48,720 --> 00:22:52,830
need that bandwidth or else you'll get

00:22:50,310 --> 00:22:55,200
stuttering so that was kind of a mess

00:22:52,830 --> 00:22:57,240
and then I got to you know the time

00:22:55,200 --> 00:23:00,390
spent debugging the GUI segmentation

00:22:57,240 --> 00:23:02,130
fault core dumps right so let's find out

00:23:00,390 --> 00:23:06,090
where that happens and then you know

00:23:02,130 --> 00:23:07,290
it's a 60 Hertz main loop so as soon as

00:23:06,090 --> 00:23:09,720
you hit a break point you've just

00:23:07,290 --> 00:23:11,250
invalidated you know all the situations

00:23:09,720 --> 00:23:12,170
that you were trying to debug so you

00:23:11,250 --> 00:23:14,940
pretty much you have two very very

00:23:12,170 --> 00:23:17,160
specific breakpoints that hit exactly

00:23:14,940 --> 00:23:22,790
when all the things went wrong at the

00:23:17,160 --> 00:23:25,590
same time and then other other is the

00:23:22,790 --> 00:23:27,560
and just the business logic of the

00:23:25,590 --> 00:23:32,310
program that I actually wanted to write

00:23:27,560 --> 00:23:34,320
so in 20 30 2012 and 2013 I met this

00:23:32,310 --> 00:23:37,680
awesome girl and my free time dried up

00:23:34,320 --> 00:23:39,870
so it got to the point where I would

00:23:37,680 --> 00:23:41,790
come back to my project you know after a

00:23:39,870 --> 00:23:43,860
month of not looking at it and I

00:23:41,790 --> 00:23:46,080
couldn't remember what was going on what

00:23:43,860 --> 00:23:47,910
I was doing oh you know what was this

00:23:46,080 --> 00:23:50,250
for wasn't I gonna do that had I already

00:23:47,910 --> 00:23:51,630
done that no and it got to the point

00:23:50,250 --> 00:23:53,850
where i was actually making negative

00:23:51,630 --> 00:23:55,800
progress because i would say all right

00:23:53,850 --> 00:23:57,930
this is all wrong this needs to change I

00:23:55,800 --> 00:23:59,820
would start changing it a month later

00:23:57,930 --> 00:24:02,370
I've come back in Lake wait what was I

00:23:59,820 --> 00:24:08,720
doing and so I would actually have less

00:24:02,370 --> 00:24:12,630
done each month than the previous so

00:24:08,720 --> 00:24:14,400
about then I decided that hey I'm doing

00:24:12,630 --> 00:24:16,230
all this cool pearl stuff at work and

00:24:14,400 --> 00:24:18,690
getting so much stuff done so quickly

00:24:16,230 --> 00:24:21,030
and it's so easy to document you know

00:24:18,690 --> 00:24:25,830
what I'm doing at work why don't I try

00:24:21,030 --> 00:24:29,670
doing that so I converted my AVR to be a

00:24:25,830 --> 00:24:31,440
USB serial device and so now i can write

00:24:29,670 --> 00:24:33,600
multiple debug statements that will just

00:24:31,440 --> 00:24:37,670
fill up the USB packet until it's full

00:24:33,600 --> 00:24:37,670
and then it ships off over the wire and

00:24:38,440 --> 00:24:41,879
well and then I still send off partial

00:24:40,629 --> 00:24:45,850
packets every now and then what if I

00:24:41,879 --> 00:24:47,590
want it when i finished the calculations

00:24:45,850 --> 00:24:48,789
i make sure that that packet goes out as

00:24:47,590 --> 00:24:50,980
soon as possible but for the you know

00:24:48,789 --> 00:24:52,750
for the debugging it was a huge benefit

00:24:50,980 --> 00:24:54,190
cuz now i can just print strings and all

00:24:52,750 --> 00:24:55,179
i have to do is use short strings and i

00:24:54,190 --> 00:24:58,809
can get a whole bunch of debugging

00:24:55,179 --> 00:25:02,830
messages per crackit I converted my

00:24:58,809 --> 00:25:06,870
binary packet to text lines so it is it

00:25:02,830 --> 00:25:06,870
is now like just plain old ascii i

00:25:06,960 --> 00:25:13,779
rewrote the daemon in pearl which before

00:25:11,350 --> 00:25:15,250
i was using live USB and so i had to

00:25:13,779 --> 00:25:17,559
have two threads you know there's the

00:25:15,250 --> 00:25:19,899
thread talking to the clients and thread

00:25:17,559 --> 00:25:25,090
calling the blocking you live USB call

00:25:19,899 --> 00:25:27,279
that reads a USB packet so by a of not

00:25:25,090 --> 00:25:30,580
needing lid USB now I could do it all in

00:25:27,279 --> 00:25:34,480
one thread using any event type you know

00:25:30,580 --> 00:25:36,639
event-driven stuff and then the GUI I

00:25:34,480 --> 00:25:39,159
rewrote it in Perl with bits of inline

00:25:36,639 --> 00:25:40,539
see and and that was kind of the fun and

00:25:39,159 --> 00:25:43,509
interesting one because i was doing this

00:25:40,539 --> 00:25:46,029
low-level opengl stuff and if you if you

00:25:43,509 --> 00:25:48,629
just go straight two pearls opengl

00:25:46,029 --> 00:25:51,549
library it won't quite be fast enough

00:25:48,629 --> 00:25:55,179
well because my the computer i embedded

00:25:51,549 --> 00:25:56,500
in the car is only one gig hurt so there

00:25:55,179 --> 00:25:59,259
were there were some real performance

00:25:56,500 --> 00:26:03,399
limitations there but the neat thing

00:25:59,259 --> 00:26:05,529
about inline see is that you just you

00:26:03,399 --> 00:26:07,269
just you have a perl module and then

00:26:05,529 --> 00:26:08,679
you're just like and here's the c code

00:26:07,269 --> 00:26:09,970
and you just like right you know some

00:26:08,679 --> 00:26:12,370
see functions in there and then you can

00:26:09,970 --> 00:26:14,379
make fifty opengl calls real in quick

00:26:12,370 --> 00:26:16,779
succession and then it's a single you

00:26:14,379 --> 00:26:22,419
know pearl access you know exit in

00:26:16,779 --> 00:26:26,830
return so for the back to the AVR

00:26:22,419 --> 00:26:27,789
debugging the text is now or the you

00:26:26,830 --> 00:26:30,399
know this here i'll put there's enough

00:26:27,789 --> 00:26:33,279
text combines two short packets so less

00:26:30,399 --> 00:26:35,850
USB bus bus congestion and you can debug

00:26:33,279 --> 00:26:39,909
it with so cat I'm like you know so cat

00:26:35,850 --> 00:26:44,529
the you know Deb DeLorean is that on

00:26:39,909 --> 00:26:50,529
there yeah open dev DeLorean you can do

00:26:44,529 --> 00:26:52,090
fun things with you dev rules so and of

00:26:50,529 --> 00:26:54,970
course writing the microcontroller I can

00:26:52,090 --> 00:26:57,520
change the mic USB I used to be whatever

00:26:54,970 --> 00:27:00,130
I want so I just set custom USB IDs and

00:26:57,520 --> 00:27:02,110
then the you dev rules pick that up and

00:27:00,130 --> 00:27:04,299
change it to the DeLorean and say yeah I

00:27:02,110 --> 00:27:06,070
just do so Kat dev DeLorean standard i/o

00:27:04,299 --> 00:27:10,120
and hit enter and I could just see what

00:27:06,070 --> 00:27:12,190
was coming over the wire and then any

00:27:10,120 --> 00:27:15,309
events let me do the you know thing in a

00:27:12,190 --> 00:27:17,289
single thread client server is painless

00:27:15,309 --> 00:27:18,580
because every that client-server text

00:27:17,289 --> 00:27:20,590
protocols has been done so many times

00:27:18,580 --> 00:27:25,450
you can pick any perl module you want to

00:27:20,590 --> 00:27:27,100
do that logging infrastructure did take

00:27:25,450 --> 00:27:31,090
your pick plenty of perl modules for

00:27:27,100 --> 00:27:32,830
that oh yeah and then you know my

00:27:31,090 --> 00:27:34,630
scripts that no I would come back to

00:27:32,830 --> 00:27:35,950
every month or so and you know having

00:27:34,630 --> 00:27:38,980
not seen him for a while I can add

00:27:35,950 --> 00:27:41,169
command line options now like cake so

00:27:38,980 --> 00:27:43,149
there is my microcontroller Damon which

00:27:41,169 --> 00:27:46,120
now has usage information to remind me

00:27:43,149 --> 00:27:47,919
how to use it I don't have to go digging

00:27:46,120 --> 00:27:49,559
through the C files trying to figure out

00:27:47,919 --> 00:27:53,860
what I was doing with my option person

00:27:49,559 --> 00:27:59,500
and you get it for you know 11 lines of

00:27:53,860 --> 00:28:05,620
pearl so get up long as my friend and

00:27:59,500 --> 00:28:07,419
pod to usage so back to the GUI so now

00:28:05,620 --> 00:28:09,640
i'm using json packets instead of binary

00:28:07,419 --> 00:28:11,110
packets i decided to go you know a

00:28:09,640 --> 00:28:15,250
little more structured than just plain

00:28:11,110 --> 00:28:19,950
old text messages across so i have no

00:28:15,250 --> 00:28:22,779
JSON packets flying over the wire the

00:28:19,950 --> 00:28:24,669
stream oh this is a great thing when i

00:28:22,779 --> 00:28:26,940
was using datagrams it would require a

00:28:24,669 --> 00:28:28,899
cyst call for every message and

00:28:26,940 --> 00:28:30,760
sometimes the microcontroller would

00:28:28,899 --> 00:28:33,669
maybe generate 20 messages in the space

00:28:30,760 --> 00:28:35,890
of you know one single 60 hurt loop of

00:28:33,669 --> 00:28:38,230
the main program which would mean i was

00:28:35,890 --> 00:28:40,149
making like 20 syscalls well now if

00:28:38,230 --> 00:28:42,039
they're in a stream you can actually

00:28:40,149 --> 00:28:44,230
pull in all of the messages in a single

00:28:42,039 --> 00:28:48,580
recall and then iterate through them on

00:28:44,230 --> 00:28:50,799
your own time so the you know while it's

00:28:48,580 --> 00:28:53,799
pearl now it actually you know there was

00:28:50,799 --> 00:28:55,600
a speed trade-off there so I'm you know

00:28:53,799 --> 00:28:57,309
using an interpreted language to do the

00:28:55,600 --> 00:28:59,500
reading but now i'm using so fewer

00:28:57,309 --> 00:29:02,320
assist calls so performance is about

00:28:59,500 --> 00:29:05,289
identical and then the stream allows

00:29:02,320 --> 00:29:06,070
reading multiple packets in the it's

00:29:05,289 --> 00:29:09,010
easier to debug

00:29:06,070 --> 00:29:11,380
because of login easier pollies oh yeah

00:29:09,010 --> 00:29:12,850
carp always you won't you want to know

00:29:11,380 --> 00:29:14,740
what the problem is in the middle of

00:29:12,850 --> 00:29:16,780
your you know 60 hurt you know loop this

00:29:14,740 --> 00:29:18,190
digging down into anonymous subroutines

00:29:16,780 --> 00:29:19,270
and all that stuff you just carp always

00:29:18,190 --> 00:29:20,650
and you're like okay that's what

00:29:19,270 --> 00:29:23,860
happened that happen that happened I'll

00:29:20,650 --> 00:29:25,420
there we go bug fixed and it's a much

00:29:23,860 --> 00:29:28,630
easier to write libraries i think in

00:29:25,420 --> 00:29:30,040
perl than in see especially when you're

00:29:28,630 --> 00:29:32,310
you know crossing between projects

00:29:30,040 --> 00:29:35,140
because you don't have to recompile them

00:29:32,310 --> 00:29:37,180
the resource manager I finish writing

00:29:35,140 --> 00:29:42,490
the library in half the time that I

00:29:37,180 --> 00:29:44,110
spent not getting it done in C++ so

00:29:42,490 --> 00:29:47,620
there's there's a quick example I say

00:29:44,110 --> 00:29:51,220
use OpenGL nin res res and then my res

00:29:47,620 --> 00:29:53,200
is my you know singleton instance of the

00:29:51,220 --> 00:29:55,600
resource manager and I can grab an image

00:29:53,200 --> 00:29:57,550
out of that by name which is the file

00:29:55,600 --> 00:30:00,340
name no more stupid you know numeric

00:29:57,550 --> 00:30:02,020
enumeration IDs and then i bind it into

00:30:00,340 --> 00:30:04,860
the opengl context and then I just start

00:30:02,020 --> 00:30:08,980
doing OpenGL on the current texture so

00:30:04,860 --> 00:30:10,030
yeah my resource library actually uh one

00:30:08,980 --> 00:30:12,670
of the other things that the resource

00:30:10,030 --> 00:30:15,550
library does it I have all of the images

00:30:12,670 --> 00:30:17,950
stored on disk uncompressed in the

00:30:15,550 --> 00:30:21,250
format that OpenGL loads them so I

00:30:17,950 --> 00:30:23,950
memory map the image and then pass it to

00:30:21,250 --> 00:30:25,630
the OpenGL load texture call at which

00:30:23,950 --> 00:30:28,350
map memory maps it into the driver and

00:30:25,630 --> 00:30:33,040
there was no copying of that data ever

00:30:28,350 --> 00:30:36,700
the other cool thing the fonts you in

00:30:33,040 --> 00:30:38,140
OpenGL doesn't have any font support you

00:30:36,700 --> 00:30:41,620
pretty much there's this really awesome

00:30:38,140 --> 00:30:44,050
library called ft GL which is the

00:30:41,620 --> 00:30:47,860
freetype library bound to OpenGL and so

00:30:44,050 --> 00:30:49,240
of ft g l will take a fonts in memory

00:30:47,860 --> 00:30:50,890
which you know font files can be big

00:30:49,240 --> 00:30:54,730
like 24 meg you know stuff like that

00:30:50,890 --> 00:30:56,530
well it only a font file has a kind of

00:30:54,730 --> 00:30:58,570
an index built in so if you memory map

00:30:56,530 --> 00:31:00,160
the font file it'll be able to jump

00:30:58,570 --> 00:31:03,010
straight to the glyphs and only load the

00:31:00,160 --> 00:31:05,710
pages that it needs and then the FT GL

00:31:03,010 --> 00:31:09,670
library will render the font is the

00:31:05,710 --> 00:31:11,800
given size into OpenGL textures so what

00:31:09,670 --> 00:31:16,120
I was able to do is have fonts rendered

00:31:11,800 --> 00:31:19,570
at different resolutions that share the

00:31:16,120 --> 00:31:20,920
same font memory map and because it's

00:31:19,570 --> 00:31:22,840
pearl I'm able to use the reference

00:31:20,920 --> 00:31:25,390
counting to just handle all of the

00:31:22,840 --> 00:31:26,800
complexities of that forming we're in

00:31:25,390 --> 00:31:29,470
see you would kind of have to be aware

00:31:26,800 --> 00:31:32,400
of which font rendering is using which

00:31:29,470 --> 00:31:34,630
font memory map them it would you know

00:31:32,400 --> 00:31:37,270
so anyway I was able to write the

00:31:34,630 --> 00:31:38,530
library the right way and so now the the

00:31:37,270 --> 00:31:41,830
startup time of the program is actually

00:31:38,530 --> 00:31:43,390
shorter than it was with the c++ version

00:31:41,830 --> 00:31:45,850
because it's now it's written the

00:31:43,390 --> 00:31:48,490
correct way it does memory maps the

00:31:45,850 --> 00:31:53,550
minimal bits it needs and starts right

00:31:48,490 --> 00:31:53,550
up so now here's my new time breakdown

00:31:56,490 --> 00:32:01,420
if I wanted to yeah the questions could

00:31:59,470 --> 00:32:04,230
I see my speed in comic sans and yes I

00:32:01,420 --> 00:32:08,970
can pick any font I want a no you know I

00:32:04,230 --> 00:32:11,500
can do monospaced you know dynamic

00:32:08,970 --> 00:32:14,050
spacing and everything so here's my new

00:32:11,500 --> 00:32:16,020
time breakdown so notice the mate I do

00:32:14,050 --> 00:32:18,460
still have a make file because I want to

00:32:16,020 --> 00:32:21,070
generate all of my textures from the

00:32:18,460 --> 00:32:23,920
image files but the make file is now

00:32:21,070 --> 00:32:25,510
much less complicated and doesn't have

00:32:23,920 --> 00:32:27,670
to cross project directories or anything

00:32:25,510 --> 00:32:30,130
the graphics are the same as they

00:32:27,670 --> 00:32:33,070
were before I still have to sit down and

00:32:30,130 --> 00:32:35,230
draw stuff the open GL graphics I wrote

00:32:33,070 --> 00:32:37,000
a little open GL sugar library that

00:32:35,230 --> 00:32:39,040
gives me all of the OpenGL commands that

00:32:37,000 --> 00:32:41,530
kind of you know quick four letter

00:32:39,040 --> 00:32:43,330
abbreviations and so I can sit down and

00:32:41,530 --> 00:32:46,660
I can write a new widget in about an

00:32:43,330 --> 00:32:49,240
hour and once I've got it written then I

00:32:46,660 --> 00:32:51,220
go back and I replace some of the sugar

00:32:49,240 --> 00:32:52,750
methods with actual OpenGL calls to

00:32:51,220 --> 00:32:54,420
speed it up a little bit but you know

00:32:52,750 --> 00:32:57,400
having those sugar methods available

00:32:54,420 --> 00:33:00,250
really speeds up my development of open

00:32:57,400 --> 00:33:01,990
GL graphics so the program structure is

00:33:00,250 --> 00:33:04,300
now you know cake I just throw things

00:33:01,990 --> 00:33:07,030
into a hash and go back and walk to the

00:33:04,300 --> 00:33:09,970
hash later and you know each of my main

00:33:07,030 --> 00:33:12,670
loop iterations the JSON packets support

00:33:09,970 --> 00:33:16,200
code into excuse whatever pros already

00:33:12,670 --> 00:33:18,880
given you that's almost non-existent so

00:33:16,200 --> 00:33:20,650
then debugging the AVR got easier

00:33:18,880 --> 00:33:22,740
because you know everything's text I can

00:33:20,650 --> 00:33:25,240
just so cat to see what I'm doing

00:33:22,740 --> 00:33:27,670
debugging the GUI is cake because I can

00:33:25,240 --> 00:33:28,870
see you know stack traces and you know

00:33:27,670 --> 00:33:30,940
what's going wrong and I can just print

00:33:28,870 --> 00:33:31,940
stuff to the logging system to see how

00:33:30,940 --> 00:33:34,309
that's going and

00:33:31,940 --> 00:33:36,110
other I now have a whole lot more time

00:33:34,309 --> 00:33:39,039
to throw in new features so in the last

00:33:36,110 --> 00:33:41,389
two months i have added gps support and

00:33:39,039 --> 00:33:48,019
it sets my system clock from the

00:33:41,389 --> 00:33:51,559
satellite time so speed pearl is slower

00:33:48,019 --> 00:33:54,500
than C++ but not if pearl lets you write

00:33:51,559 --> 00:33:56,299
a better design and then the so there's

00:33:54,500 --> 00:33:58,370
the startup time actually was reduced

00:33:56,299 --> 00:34:01,279
because the resource you know library is

00:33:58,370 --> 00:34:02,450
more efficient and if you need to speed

00:34:01,279 --> 00:34:04,879
boost you to start moving stuff into

00:34:02,450 --> 00:34:07,730
inline see another thing i think i

00:34:04,879 --> 00:34:09,679
forgot to put on the slides oh yeah

00:34:07,730 --> 00:34:11,780
there we go so you can also convert

00:34:09,679 --> 00:34:14,810
OpenGL sugar to look the low-level calls

00:34:11,780 --> 00:34:16,700
when you need to and OpenGL has this

00:34:14,810 --> 00:34:19,099
thing called display lists' for you you

00:34:16,700 --> 00:34:20,599
make a bunch of OpenGL calls and they're

00:34:19,099 --> 00:34:22,730
getting translated into whatever

00:34:20,599 --> 00:34:25,280
language the you know hardware is

00:34:22,730 --> 00:34:27,200
interested in you can say begin list

00:34:25,280 --> 00:34:29,530
make a bunch of OpenGL calls and say

00:34:27,200 --> 00:34:32,240
endless and now it will save that

00:34:29,530 --> 00:34:34,099
already you know it translated to how

00:34:32,240 --> 00:34:35,450
the hardware wants to see it and so you

00:34:34,099 --> 00:34:38,060
can make you can now make a single

00:34:35,450 --> 00:34:41,540
OpenGL call that reruns all of those

00:34:38,060 --> 00:34:43,940
commands and I have a nice sugar method

00:34:41,540 --> 00:34:45,379
for making OpenGL display lists' you

00:34:43,940 --> 00:34:46,669
just wrap it in a code graph anything

00:34:45,379 --> 00:34:50,560
that happens in that code RAF gets

00:34:46,669 --> 00:34:53,240
captured so it makes it really easy to

00:34:50,560 --> 00:34:57,050
optimize with display lists' which would

00:34:53,240 --> 00:34:58,460
have actually been harder in C++ oh and

00:34:57,050 --> 00:35:03,079
you can use lighter weight perl modules

00:34:58,460 --> 00:35:06,380
so you know i'm using mu and not moose

00:35:03,079 --> 00:35:11,569
i'm not using certain other modules

00:35:06,380 --> 00:35:17,470
eight time and I have a really fast

00:35:11,569 --> 00:35:17,470
startup so on to the demos

00:35:20,660 --> 00:35:31,020
here is the system booting up that's my

00:35:28,829 --> 00:35:32,369
custom instrument cluster know that it's

00:35:31,020 --> 00:35:35,910
been all sanded and painted and

00:35:32,369 --> 00:35:37,440
everything there's the fit pce located

00:35:35,910 --> 00:35:40,740
under there which you cannot actually

00:35:37,440 --> 00:35:42,839
see it all on this need some gamma

00:35:40,740 --> 00:35:44,670
correction sorry about that there's the

00:35:42,839 --> 00:35:48,420
fit pc lighting up the little blinking

00:35:44,670 --> 00:35:49,829
light is a microcontroller the display

00:35:48,420 --> 00:35:54,119
is backwards because it's bouncing off a

00:35:49,829 --> 00:35:59,730
mirror but OpenGL lets you fix that with

00:35:54,119 --> 00:36:03,890
a single negative sign xorg takes the

00:35:59,730 --> 00:36:03,890
Biff to load still and there we go

00:36:12,530 --> 00:36:20,160
shining down on the mirror there's my we

00:36:17,730 --> 00:36:24,030
already missed it the GPS just got its

00:36:20,160 --> 00:36:26,430
fixed so it turned green the blinking

00:36:24,030 --> 00:36:29,280
light is my parking brake oh no there

00:36:26,430 --> 00:36:32,010
goes GPS got it fixed now so that has

00:36:29,280 --> 00:36:35,130
the coordinates soon there will be

00:36:32,010 --> 00:36:43,650
mapping but that's hard so that'll take

00:36:35,130 --> 00:36:45,780
a while next one then I had to bring

00:36:43,650 --> 00:36:51,690
down to the garage so I could do a video

00:36:45,780 --> 00:36:55,200
of starting it up so I'm turning the key

00:36:51,690 --> 00:36:57,869
there's a voltage sensors start working

00:36:55,200 --> 00:37:02,640
and then I crank it there's oil pressure

00:36:57,869 --> 00:37:07,859
there's tech ometer and I'm going to

00:37:02,640 --> 00:37:09,329
read it here in a second that's the

00:37:07,859 --> 00:37:12,540
natural hunting that the engine does

00:37:09,329 --> 00:37:16,440
because it has the brain the first

00:37:12,540 --> 00:37:19,049
generation a fuel injection system in it

00:37:16,440 --> 00:37:21,510
oh yeah the DeLorean is fuel injection

00:37:19,049 --> 00:37:27,670
by the way that was one of the features

00:37:21,510 --> 00:37:30,130
they did make it in and those

00:37:27,670 --> 00:37:32,740
the the little yellow tick marks are

00:37:30,130 --> 00:37:41,650
what speed you would be going in each of

00:37:32,740 --> 00:37:46,329
the five years at that RPM oh and the

00:37:41,650 --> 00:37:48,460
anyway so I'm about to that's the real

00:37:46,329 --> 00:37:50,380
car and then i have the program the you

00:37:48,460 --> 00:37:51,640
know being a perl script is pretty easy

00:37:50,380 --> 00:37:54,690
to make it run just about anywhere so

00:37:51,640 --> 00:37:54,690
it'll run here in my laptop

00:38:06,410 --> 00:38:15,750
it's getting clipped off a little it

00:38:08,550 --> 00:38:17,880
expects a wide wide aspect ratio yep and

00:38:15,750 --> 00:38:19,650
you can see my you know you can do some

00:38:17,880 --> 00:38:21,150
really fancy stuff with opengl do you

00:38:19,650 --> 00:38:26,270
know fading in and out you're just

00:38:21,150 --> 00:38:26,270
changing the Alpha blends for the color

00:38:28,190 --> 00:38:33,420
and yes I can make that whatever font I

00:38:30,900 --> 00:38:36,410
want like in fact I could almost do that

00:38:33,420 --> 00:38:42,240
quick enough to do it here on the demo

00:38:36,410 --> 00:38:44,660
anyway oh and in the lower right you can

00:38:42,240 --> 00:38:47,940
almost not see it but I have the clock

00:38:44,660 --> 00:38:56,099
which has seconds and milliseconds with

00:38:47,940 --> 00:38:58,470
those spinning rings yeah when you turn

00:38:56,099 --> 00:39:02,730
on you know you normally have likely he

00:38:58,470 --> 00:39:03,900
was asking about the light indicator so

00:39:02,730 --> 00:39:06,300
you normally have like the green and

00:39:03,900 --> 00:39:07,650
yellow light that green and blue light

00:39:06,300 --> 00:39:14,430
that indicate whether your lights or

00:39:07,650 --> 00:39:17,099
your brights are on so um so right now

00:39:14,430 --> 00:39:18,990
my wheel sensor is actually ok so

00:39:17,099 --> 00:39:20,760
backing up a little bit one of the

00:39:18,990 --> 00:39:23,579
classic engineering problems of the

00:39:20,760 --> 00:39:25,589
DeLorean is that they since it's a

00:39:23,579 --> 00:39:28,170
rear-engine car they decided to put the

00:39:25,589 --> 00:39:30,030
speedometer on the front left wheel so

00:39:28,170 --> 00:39:32,730
there there is actually there's like

00:39:30,030 --> 00:39:35,670
this little rod that goes through the

00:39:32,730 --> 00:39:37,740
axle of the front left wheel has a

00:39:35,670 --> 00:39:39,690
gearbox on the inside that goes to a

00:39:37,740 --> 00:39:41,369
flex cable that goes up through the

00:39:39,690 --> 00:39:42,480
firewall into which it isn't really a

00:39:41,369 --> 00:39:45,359
firewall because the engines in the back

00:39:42,480 --> 00:39:47,160
end comes up through the interior of the

00:39:45,359 --> 00:39:48,750
car through a service counter which

00:39:47,160 --> 00:39:50,760
tells you when to change your oxygen

00:39:48,750 --> 00:39:53,220
sensor and then up into the back of the

00:39:50,760 --> 00:39:56,520
instrument cluster and with that long

00:39:53,220 --> 00:39:58,890
snaking cable in the gearbox and you

00:39:56,520 --> 00:40:03,809
know humidity changes that get you know

00:39:58,890 --> 00:40:05,309
frost inside of there pretty much every

00:40:03,809 --> 00:40:08,220
DeLorean that has ever been manufactured

00:40:05,309 --> 00:40:09,809
has had that gearbox strip out so when

00:40:08,220 --> 00:40:11,250
mine when mine stripped out a few years

00:40:09,809 --> 00:40:13,589
ago I was like all right I'm done with

00:40:11,250 --> 00:40:16,260
this thing and I replaced it with a

00:40:13,589 --> 00:40:18,240
sensor that I made using magnets and a

00:40:16,260 --> 00:40:21,060
whole sensor a whole

00:40:18,240 --> 00:40:23,550
effect sensor so I am actually getting

00:40:21,060 --> 00:40:24,810
digital pulses every time the wheel

00:40:23,550 --> 00:40:26,700
turns and I can change that to be

00:40:24,810 --> 00:40:28,350
however many pulses per revolution I

00:40:26,700 --> 00:40:31,050
want so i can get you know more

00:40:28,350 --> 00:40:33,390
precision or less position at the moment

00:40:31,050 --> 00:40:35,400
my wheel sensor is broken but i am

00:40:33,390 --> 00:40:38,910
working on version 2 and I'm 3d printing

00:40:35,400 --> 00:40:40,980
it so it's kind of a tight space inside

00:40:38,910 --> 00:40:42,390
of the front wheel and the problem was

00:40:40,980 --> 00:40:44,010
that as I would put the front wheel onto

00:40:42,390 --> 00:40:45,270
the car I would bang the sensor and then

00:40:44,010 --> 00:40:49,280
he would not get away from the magnets

00:40:45,270 --> 00:40:49,280
and then it wouldn't pick up anything so

00:40:51,380 --> 00:40:57,000
slightly but it's an extra it's an

00:40:55,170 --> 00:40:59,869
accurate measure of how far the front

00:40:57,000 --> 00:40:59,869
left wheel traveled

00:41:00,479 --> 00:41:13,089
so all right legal requirements of the

00:41:08,410 --> 00:41:14,859
speedometer and odometer all right it is

00:41:13,089 --> 00:41:17,469
a little bit of gray area but it's it's

00:41:14,859 --> 00:41:19,719
illegal to misrepresent the number of

00:41:17,469 --> 00:41:20,920
miles on your car my car was already at

00:41:19,719 --> 00:41:22,599
a hundred thousand miles and like

00:41:20,920 --> 00:41:24,940
whatever and I'm probably not going to

00:41:22,599 --> 00:41:29,369
sell it anyway so I am no longer

00:41:24,940 --> 00:41:29,369
claiming any miles on my car at all so

00:41:30,269 --> 00:41:33,729
aside from that I can actually use these

00:41:32,469 --> 00:41:43,349
tick marks in the meantime to see how

00:41:33,729 --> 00:41:43,349
fast I'm going oh no

00:41:50,190 --> 00:41:55,719
no no actually the the the airbag was

00:41:52,960 --> 00:42:00,160
one of the features that they didn't get

00:41:55,719 --> 00:42:01,960
into the production car so now so that

00:42:00,160 --> 00:42:03,789
there are no DeLoreans with airbags but

00:42:01,960 --> 00:42:05,319
there was a prototype DeLorean that had

00:42:03,789 --> 00:42:06,789
an airbag and they actually did some

00:42:05,319 --> 00:42:08,380
testing with it and then decided that it

00:42:06,789 --> 00:42:11,049
wasn't going to be reliable enough for

00:42:08,380 --> 00:42:14,529
something and then they scrapped that

00:42:11,049 --> 00:42:16,089
and putting kind of an actually but the

00:42:14,529 --> 00:42:18,160
actual this this is an aftermarket

00:42:16,089 --> 00:42:20,289
steering wheel that I have in there the

00:42:18,160 --> 00:42:21,940
actual DeLorean steering wheel does have

00:42:20,289 --> 00:42:25,440
kind of a big pocket in the center of it

00:42:21,940 --> 00:42:25,440
so it was

00:42:37,080 --> 00:42:41,460
alright so the question is safety of all

00:42:39,300 --> 00:42:43,890
that stuff in front of me so the the

00:42:41,460 --> 00:42:46,200
computer is pretty well secured I have

00:42:43,890 --> 00:42:47,910
it bolted to the bottom of the dashboard

00:42:46,200 --> 00:42:50,160
it's not going to come off the

00:42:47,910 --> 00:42:53,520
instrument cluster itself I actually

00:42:50,160 --> 00:42:55,920
invented you know brackets that would

00:42:53,520 --> 00:42:58,320
fasten down to the you know same things

00:42:55,920 --> 00:43:00,300
as the original instrument cluster and

00:42:58,320 --> 00:43:01,620
the steering wheel is in front of you so

00:43:00,300 --> 00:43:02,880
you know the instrument cluster can't

00:43:01,620 --> 00:43:04,020
really come back and hit you because it

00:43:02,880 --> 00:43:06,210
would run into the steering wheel first

00:43:04,020 --> 00:43:07,770
and that would only be if you were

00:43:06,210 --> 00:43:11,610
rear-ended because if you're going to

00:43:07,770 --> 00:43:13,020
crash go you go forward so you would hit

00:43:11,610 --> 00:43:20,280
the steering wheel and you'd hopefully

00:43:13,020 --> 00:43:27,990
your seat belt would stop you the fit pc

00:43:20,280 --> 00:43:31,980
it's um about this big that's let's see

00:43:27,990 --> 00:43:34,230
I could actually put well I'm not in the

00:43:31,980 --> 00:43:35,580
internet right now anyway fit pc has a

00:43:34,230 --> 00:43:38,520
website you can go look at them they're

00:43:35,580 --> 00:43:40,080
about I don't know an inch thick so

00:43:38,520 --> 00:43:41,790
they're pretty light and then they have

00:43:40,080 --> 00:43:42,810
a low-power version which I got just

00:43:41,790 --> 00:43:45,210
because I didn't want to drink my

00:43:42,810 --> 00:43:50,160
battery too badly so it's drawing

00:43:45,210 --> 00:43:51,930
something like 6 watts it gets a little

00:43:50,160 --> 00:43:54,180
hot on hot days I'm going to probably

00:43:51,930 --> 00:43:57,290
have to put a fan in there but the fit

00:43:54,180 --> 00:43:57,290
pc itself is fanless

00:44:05,589 --> 00:44:12,890
question is where further where am I

00:44:11,569 --> 00:44:13,999
going to take the design is it going to

00:44:12,890 --> 00:44:16,160
look like the movie car and stuff like

00:44:13,999 --> 00:44:22,190
that no mine is actually going to be the

00:44:16,160 --> 00:44:23,869
knight rider DeLorean it's gonna get

00:44:22,190 --> 00:44:25,279
there eventually I I was actually going

00:44:23,869 --> 00:44:27,980
to go for the speech recognition in the

00:44:25,279 --> 00:44:29,390
hole all that stuff first but then since

00:44:27,980 --> 00:44:30,740
I'm putting a computer in the car anyway

00:44:29,390 --> 00:44:32,029
I got kind of distracted on this

00:44:30,740 --> 00:44:39,410
dashboard thing and that's become my

00:44:32,029 --> 00:44:40,910
main focus for the last few years where

00:44:39,410 --> 00:44:43,819
questions where's the code right now

00:44:40,910 --> 00:44:46,549
most of it is not on Sipan I am planning

00:44:43,819 --> 00:44:50,539
to polish up some of my libraries and

00:44:46,549 --> 00:44:52,009
put them on Sipan right now it one of

00:44:50,539 --> 00:44:54,319
the problems with you know linking with

00:44:52,009 --> 00:44:55,549
OpenGL and stuff like that and free type

00:44:54,319 --> 00:44:57,200
and stuff is that you have to worry

00:44:55,549 --> 00:45:00,069
about the library paths and so I haven't

00:44:57,200 --> 00:45:02,839
haven't done the work to make the module

00:45:00,069 --> 00:45:05,329
likely to install on anyone elses system

00:45:02,839 --> 00:45:07,549
that's one of the other things about the

00:45:05,329 --> 00:45:11,239
project is that I have a custom linux

00:45:07,549 --> 00:45:13,039
that is gen 2 with a perl script that

00:45:11,239 --> 00:45:15,109
goes through and pulls out the binaries

00:45:13,039 --> 00:45:17,289
that i'm interested in and the support

00:45:15,109 --> 00:45:19,910
files that i'm interested in and

00:45:17,289 --> 00:45:21,769
completely custom startup code so there

00:45:19,910 --> 00:45:24,980
are no there are no init scripts on my

00:45:21,769 --> 00:45:28,130
system that's in the car and also it is

00:45:24,980 --> 00:45:30,650
using a read-only file system for just

00:45:28,130 --> 00:45:32,930
about everything and it's using a temp

00:45:30,650 --> 00:45:36,470
of s for all of the log files and stuff

00:45:32,930 --> 00:45:38,509
like that and then I have a persistent

00:45:36,470 --> 00:45:40,099
partition where at you know when I get

00:45:38,509 --> 00:45:42,109
around to having data that i want to

00:45:40,099 --> 00:45:45,380
persist from run to run I will have a

00:45:42,109 --> 00:45:47,509
script that very conservatively copy

00:45:45,380 --> 00:45:49,190
stuff over to that partition because I

00:45:47,509 --> 00:45:52,880
don't want to continually right to my

00:45:49,190 --> 00:45:54,019
you know flash driver one you know I had

00:45:52,880 --> 00:45:57,619
it kind of set up to where this could

00:45:54,019 --> 00:45:59,390
lose power at any moment and it nothing

00:45:57,619 --> 00:46:02,450
happens you know it because it was a

00:45:59,390 --> 00:46:03,950
read-only file system so I'm trying to

00:46:02,450 --> 00:46:05,569
keep it to where it can lose power at

00:46:03,950 --> 00:46:07,190
any moment and never have a problem

00:46:05,569 --> 00:46:09,019
because I don't want to have to go

00:46:07,190 --> 00:46:10,249
extract the whole thing pull out the

00:46:09,019 --> 00:46:13,869
drive stick it in a different machine

00:46:10,249 --> 00:46:13,869
and you all of that Jeff

00:46:18,060 --> 00:46:24,400
question is do what do I have my OS on

00:46:20,590 --> 00:46:28,570
it's actually a solid state disk 80 gig

00:46:24,400 --> 00:46:30,550
I think so the 50 c takes the laptop

00:46:28,570 --> 00:46:31,720
site is hard drives so you could put

00:46:30,550 --> 00:46:33,100
whatever hard drive you want in there i

00:46:31,720 --> 00:46:46,390
just picked a solid state disk to boot

00:46:33,100 --> 00:46:49,900
up faster question is do I have any

00:46:46,390 --> 00:46:54,070
other ideas for visualizations yes I

00:46:49,900 --> 00:46:55,300
have many many ideas I just it's all

00:46:54,070 --> 00:46:57,160
about you know finding time to work on

00:46:55,300 --> 00:47:04,990
them but I'll give you a preview of this

00:46:57,160 --> 00:47:07,330
one so when I get this done the DeLorean

00:47:04,990 --> 00:47:10,440
sits really low like it's the whole car

00:47:07,330 --> 00:47:13,180
is only about you know four feet tall

00:47:10,440 --> 00:47:14,860
the rear view mirror in the middle of

00:47:13,180 --> 00:47:16,600
the car in the middle of the windshield

00:47:14,860 --> 00:47:18,880
takes up an awful lot of your field of

00:47:16,600 --> 00:47:20,770
view and so one of the projects that i

00:47:18,880 --> 00:47:22,300
was actually put it put in a lot of work

00:47:20,770 --> 00:47:24,340
and then decided i wanted to do some

00:47:22,300 --> 00:47:25,960
other things first is to put a camera on

00:47:24,340 --> 00:47:28,420
the back of the car that will be the

00:47:25,960 --> 00:47:30,790
rearview mirror and the gash the dash

00:47:28,420 --> 00:47:33,400
gauges will be transparently rendered on

00:47:30,790 --> 00:47:35,440
top of it and also when i get the

00:47:33,400 --> 00:47:38,830
mapping done all of these dash gauges

00:47:35,440 --> 00:47:40,930
will be able to you know i can't see my

00:47:38,830 --> 00:47:42,940
mouse and that's on purpose because you

00:47:40,930 --> 00:47:45,070
I don't want to see the mouse pointer in

00:47:42,940 --> 00:47:47,560
the car

00:47:45,070 --> 00:47:49,540
anyway when I get this done all of those

00:47:47,560 --> 00:47:51,790
dash gauges will kind of shrink to the

00:47:49,540 --> 00:47:54,490
lower right corner while you're viewing

00:47:51,790 --> 00:47:56,140
the map and then they'll assume back to

00:47:54,490 --> 00:47:58,240
full size while you're driving so you

00:47:56,140 --> 00:48:00,400
know with OpenGL everything's you know

00:47:58,240 --> 00:48:02,170
just coordinate space and you can scale

00:48:00,400 --> 00:48:05,050
it and twist it and rotate it however

00:48:02,170 --> 00:48:07,420
you want and so I have lots of

00:48:05,050 --> 00:48:10,240
capabilities available lots of options

00:48:07,420 --> 00:48:12,100
also notice the little yellow

00:48:10,240 --> 00:48:15,220
exclamation points on all of the gauges

00:48:12,100 --> 00:48:16,900
that's because it does I I just ran the

00:48:15,220 --> 00:48:20,380
instrument cluster directly without

00:48:16,900 --> 00:48:21,850
running the fake data server that was my

00:48:20,380 --> 00:48:24,190
gauging animator by the way which is

00:48:21,850 --> 00:48:27,040
also a Perl script that was only a few

00:48:24,190 --> 00:48:29,740
lines of code it just sits there and

00:48:27,040 --> 00:48:32,110
runs all of the data points through

00:48:29,740 --> 00:48:33,820
range of values so right now the data

00:48:32,110 --> 00:48:35,410
server isn't running and you get these

00:48:33,820 --> 00:48:36,610
little yellow exclamation points which

00:48:35,410 --> 00:48:38,710
is kind of neat because when you have it

00:48:36,610 --> 00:48:40,360
in the car and the connector comes

00:48:38,710 --> 00:48:42,310
unplugged or one of the wires isn't

00:48:40,360 --> 00:48:44,470
soldered very well you get a null value

00:48:42,310 --> 00:48:47,490
and then shows up as an exclamation

00:48:44,470 --> 00:48:47,490
point on the dashboard

00:48:54,490 --> 00:49:00,560
question is so with opengl could go 3d

00:48:57,680 --> 00:49:06,200
yes I could I just have not yet found a

00:49:00,560 --> 00:49:08,060
reason to go 3d but but but the other

00:49:06,200 --> 00:49:09,650
you know interesting idea and one that

00:49:08,060 --> 00:49:10,880
I'm probably gonna get to is I'm going

00:49:09,650 --> 00:49:13,310
to put more cameras on the car

00:49:10,880 --> 00:49:14,840
eventually than just the rearview mirror

00:49:13,310 --> 00:49:16,310
and so when I might a stoplight and I

00:49:14,840 --> 00:49:17,600
hit the left turn signal i'm going to

00:49:16,310 --> 00:49:18,890
like fire up the camera that's on the

00:49:17,600 --> 00:49:21,620
front left bumper so i can see around

00:49:18,890 --> 00:49:24,410
corners and when i get to do thing that

00:49:21,620 --> 00:49:27,950
I might start using 3d effects to rotate

00:49:24,410 --> 00:49:36,950
the images into view so that might be a

00:49:27,950 --> 00:49:39,620
thing you see next year now I haven't

00:49:36,950 --> 00:49:41,360
actually some of the earlier versions

00:49:39,620 --> 00:49:43,580
the microcontroller would crash but then

00:49:41,360 --> 00:49:45,050
it would reset itself because it doesn't

00:49:43,580 --> 00:49:46,400
have it doesn't have anywhere to go when

00:49:45,050 --> 00:49:52,700
it crashes so it just starts the program

00:49:46,400 --> 00:49:54,620
over from the top so anyone else you see

00:49:52,700 --> 00:49:57,340
actually I did have just a few less

00:49:54,620 --> 00:49:57,340
slides but

00:50:02,430 --> 00:50:08,460
so my conclusion is that pearl is fast

00:50:05,369 --> 00:50:10,319
enough it doesn't need to be you know

00:50:08,460 --> 00:50:12,000
ultimately fast you know like writing

00:50:10,319 --> 00:50:15,780
everything in C++ you just have to have

00:50:12,000 --> 00:50:17,040
the most important parts written in C++

00:50:15,780 --> 00:50:18,540
and then pearl can take care of all of

00:50:17,040 --> 00:50:21,800
that glue that holds everything together

00:50:18,540 --> 00:50:25,530
that is kind of painful to Reagan C++

00:50:21,800 --> 00:50:27,150
when used careful so I get a full 60

00:50:25,530 --> 00:50:29,910
frames per second on a 1 gigahertz an

00:50:27,150 --> 00:50:31,609
embedded processor the software in my

00:50:29,910 --> 00:50:33,720
project is now taking less time than

00:50:31,609 --> 00:50:35,190
developing the software in my project is

00:50:33,720 --> 00:50:38,069
now taking less time than developing the

00:50:35,190 --> 00:50:42,690
hardware but my 3d printer is helping

00:50:38,069 --> 00:50:44,369
with that so there's a mock-up of the

00:50:42,690 --> 00:50:46,260
connector that goes into the instrument

00:50:44,369 --> 00:50:48,000
back of the instrument cluster there's a

00:50:46,260 --> 00:50:51,630
whole bunch more details on my website

00:50:48,000 --> 00:50:53,430
which is only about half complete but

00:50:51,630 --> 00:50:57,750
you know I'm getting pages more pages up

00:50:53,430 --> 00:51:00,680
every now and then so nerdvana net it's

00:50:57,750 --> 00:51:08,250
got a whole bunch of cool stuff on it

00:51:00,680 --> 00:51:09,799
all right one more a question is am i

00:51:08,250 --> 00:51:14,760
sharing it with other DeLorean owners

00:51:09,799 --> 00:51:16,500
yes but it kind of needs packaged first

00:51:14,760 --> 00:51:20,040
and you know packaging a project is

00:51:16,500 --> 00:51:21,990
actually surprisingly difficult also rep

00:51:20,040 --> 00:51:24,089
look like right now you know if somebody

00:51:21,990 --> 00:51:26,250
asked me oh hey can you make a copy for

00:51:24,089 --> 00:51:27,569
me it would it would have to charge him

00:51:26,250 --> 00:51:29,460
like ten thousand dollars because of all

00:51:27,569 --> 00:51:31,049
the time it would take me to go make

00:51:29,460 --> 00:51:32,369
another copy of the fiberglass

00:51:31,049 --> 00:51:35,250
instrument cluster by a

00:51:32,369 --> 00:51:37,970
four-hundred-dollar 50c you know do the

00:51:35,250 --> 00:51:40,799
custom circuitry work on the you know

00:51:37,970 --> 00:51:43,589
print 3d print where connectors put the

00:51:40,799 --> 00:51:45,299
you know contacts inside of them solder

00:51:43,589 --> 00:51:47,869
it all together find another you know

00:51:45,299 --> 00:51:52,170
metal housing to hold the circuit board

00:51:47,869 --> 00:51:53,400
so in order to bring it down to a cost

00:51:52,170 --> 00:51:55,710
that people would actually be willing to

00:51:53,400 --> 00:51:57,390
pay I'm going to have to actually

00:51:55,710 --> 00:51:59,160
fabricate my own circuit board like you

00:51:57,390 --> 00:52:01,470
know actually design it out where I can

00:51:59,160 --> 00:52:03,630
just take surface mount components drop

00:52:01,470 --> 00:52:05,579
them on there put it in an oven and you

00:52:03,630 --> 00:52:09,849
know but of course all of that requires

00:52:05,579 --> 00:52:14,919
effort so much time do we have

00:52:09,849 --> 00:52:14,919

YouTube URL: https://www.youtube.com/watch?v=SERH3_gZOTo


