Title: Stevan Little (stevan) - Perl's Syntactic Legacy: Using the future to improve the past
Publication date: 2015-06-16
Playlist: YAPC::NA 2015
Description: 
	Ballroom A - Little America Hotel
Captions: 
	00:04:11,360 --> 00:04:15,600
so uh it's a it's eleven o'clock I'd

00:04:14,160 --> 00:04:17,250
actually like to get started I have an

00:04:15,600 --> 00:04:23,220
ulterior motive for wanting to get

00:04:17,250 --> 00:04:25,170
started exactly on time so this talk is

00:04:23,220 --> 00:04:27,630
called pearls and tactics pearls

00:04:25,170 --> 00:04:30,330
syntactic legacy with the subtitle of

00:04:27,630 --> 00:04:32,160
using the future to improve the past but

00:04:30,330 --> 00:04:35,420
before I do that I'd actually like to

00:04:32,160 --> 00:04:39,060
quickly talk about my friend John in

00:04:35,420 --> 00:04:42,870
2010 in a bar in columbus ohio at a yap

00:04:39,060 --> 00:04:44,760
see not unlike this one I met John I'd

00:04:42,870 --> 00:04:47,040
spoken to him sorry I'd spoken to him a

00:04:44,760 --> 00:04:48,330
few times online but this was actually

00:04:47,040 --> 00:04:50,940
the first time I met her in person and

00:04:48,330 --> 00:04:52,260
we very soon became friends might have

00:04:50,940 --> 00:04:55,650
been the Bourbon might have been the

00:04:52,260 --> 00:04:58,410
beer but who knows and I would regularly

00:04:55,650 --> 00:05:00,540
see Jon at Yap seas and pearl workshops

00:04:58,410 --> 00:05:02,580
and stuff like that and we shared a

00:05:00,540 --> 00:05:04,050
number of adventures together some of

00:05:02,580 --> 00:05:06,330
you may know what this hashtag means if

00:05:04,050 --> 00:05:08,669
you don't sorry I'm not gonna explain it

00:05:06,330 --> 00:05:10,380
but John knows and that's the thing John

00:05:08,669 --> 00:05:14,280
is watching the live feed right now for

00:05:10,380 --> 00:05:16,070
us but John is he's more than just an

00:05:14,280 --> 00:05:18,480
attendee he's worked tirelessly

00:05:16,070 --> 00:05:21,540
tirelessly for the pro community over

00:05:18,480 --> 00:05:22,890
the years and in various capacities and

00:05:21,540 --> 00:05:26,120
one of which has been for the last two

00:05:22,890 --> 00:05:26,120
years he's been the speaker coordinator

00:05:26,300 --> 00:05:31,620
unfortunately this year John cannot

00:05:28,229 --> 00:05:34,200
attend he's he has an illness says some

00:05:31,620 --> 00:05:35,490
of you may or may not know and we some

00:05:34,200 --> 00:05:37,590
John's friends we wanted to get together

00:05:35,490 --> 00:05:41,030
we wanted to do something for him so you

00:05:37,590 --> 00:05:41,030
may have seen this t-shirt around here

00:05:41,210 --> 00:05:46,229
we made up these t-shirts you know he

00:05:44,370 --> 00:05:48,090
has kidney cancer so we're going to cut

00:05:46,229 --> 00:05:49,470
up that little kidney in the back we

00:05:48,090 --> 00:05:51,000
wanted to sort of commemorate this for

00:05:49,470 --> 00:05:53,460
him and sort of make him feel like he's

00:05:51,000 --> 00:05:55,860
here even though he's not and I'm very

00:05:53,460 --> 00:06:00,380
happy to say that we have raised 785

00:05:55,860 --> 00:06:00,380
dollars for cancer charity John's choice

00:06:00,960 --> 00:06:09,970
we promise not to spend it but in about

00:06:07,660 --> 00:06:11,260
an hour and actually in about 15 minutes

00:06:09,970 --> 00:06:12,460
he's going to leave for the hospital but

00:06:11,260 --> 00:06:14,170
in about an hour John's actually going

00:06:12,460 --> 00:06:16,030
to go into the knife they're going to

00:06:14,170 --> 00:06:19,270
cut out part of his kidney leaving him

00:06:16,030 --> 00:06:21,370
with 1.5 kidneys and you know while his

00:06:19,270 --> 00:06:23,470
prognosis is very good cancer is a scary

00:06:21,370 --> 00:06:25,270
thing anybody's who's dealt with it

00:06:23,470 --> 00:06:27,520
personally or with a loved one or

00:06:25,270 --> 00:06:29,860
something like that knows that so what I

00:06:27,520 --> 00:06:31,750
would like to do because John promised

00:06:29,860 --> 00:06:33,910
he would watch in the last 15 minutes

00:06:31,750 --> 00:06:36,940
before he has to leave he'd watch this

00:06:33,910 --> 00:06:39,400
live feed so what I'd like to do is well

00:06:36,940 --> 00:06:41,710
I could get everybody in the room big

00:06:39,400 --> 00:06:43,570
rousing you can say cancer you can

00:06:41,710 --> 00:06:45,490
take dammit cancer whatever you want but

00:06:43,570 --> 00:06:47,260
if we can all do that and show John we

00:06:45,490 --> 00:06:55,210
love them we miss him and we wish him

00:06:47,260 --> 00:06:57,690
the best so ready 123 cancer ok

00:06:55,210 --> 00:06:57,690
thank you

00:07:02,570 --> 00:07:07,290
so on with the rest of talk so is this

00:07:05,730 --> 00:07:09,060
good I tend to move away from the mic is

00:07:07,290 --> 00:07:11,760
everybody still hear me I move around a

00:07:09,060 --> 00:07:15,180
lot i'm a little bit of a spaz so and

00:07:11,760 --> 00:07:18,540
actually this is getting hot so so pearl

00:07:15,180 --> 00:07:20,310
syntactic legacy many of you probably

00:07:18,540 --> 00:07:22,950
thought this was the definition i was

00:07:20,310 --> 00:07:24,510
going for you know legacy code oh that

00:07:22,950 --> 00:07:26,580
old crap that we have to deal with every

00:07:24,510 --> 00:07:28,980
once in a while oh that cobol we have to

00:07:26,580 --> 00:07:30,690
deal with or whatever but the fact is

00:07:28,980 --> 00:07:31,920
actually when I was came up with that

00:07:30,690 --> 00:07:35,040
title I was actually thinking more about

00:07:31,920 --> 00:07:37,920
this a legacy is something that's passed

00:07:35,040 --> 00:07:40,130
down from from ancestors and

00:07:37,920 --> 00:07:42,780
predecessors their predecessors and

00:07:40,130 --> 00:07:46,170
pearl 5 has been passed down ass Larry's

00:07:42,780 --> 00:07:48,120
moved on to Perl 6 it is our now ours to

00:07:46,170 --> 00:07:51,420
take into own and actually if you think

00:07:48,120 --> 00:07:53,160
about it that's a little wrong Larry's

00:07:51,420 --> 00:07:55,830
actually transmitting from the future

00:07:53,160 --> 00:07:58,860
back to us if you think about some of

00:07:55,830 --> 00:08:01,350
the advances in in Perl 6 or I'm sorry

00:07:58,860 --> 00:08:04,410
in pro 5 in the in the most recent years

00:08:01,350 --> 00:08:07,710
both the the release schedule things

00:08:04,410 --> 00:08:10,020
like given when smart match just the say

00:08:07,710 --> 00:08:12,600
keyword stuff like that all that came

00:08:10,020 --> 00:08:16,470
down from perl 6 from the future came

00:08:12,600 --> 00:08:17,880
from perl 6 into pro 5 so we're dealing

00:08:16,470 --> 00:08:21,120
with a legacy coming from both ends if

00:08:17,880 --> 00:08:23,190
you will so i want you but legacy is

00:08:21,120 --> 00:08:24,390
kind of a subtext of this talk i want

00:08:23,190 --> 00:08:26,070
you to sort of think about it as you go

00:08:24,390 --> 00:08:28,170
and i'll revisit it every once in a

00:08:26,070 --> 00:08:30,330
while but actually what this talk really

00:08:28,170 --> 00:08:33,570
is about it's about the evolution of a

00:08:30,330 --> 00:08:36,210
design so my design for for trying to

00:08:33,570 --> 00:08:38,820
put a new object system into the pro/5

00:08:36,210 --> 00:08:40,380
core and also most importantly about the

00:08:38,820 --> 00:08:42,479
slow breakdown of my own stubbornness

00:08:40,380 --> 00:08:45,210
and you'll see evidence of that as we go

00:08:42,479 --> 00:08:48,750
along this talk is also about learning

00:08:45,210 --> 00:08:51,000
and the way i like to define learning is

00:08:48,750 --> 00:08:53,460
the act of the you and the present

00:08:51,000 --> 00:08:56,250
realizing how dumb the you in the past

00:08:53,460 --> 00:08:57,540
has been so you will see this theme

00:08:56,250 --> 00:08:58,860
again repeated over and over because

00:08:57,540 --> 00:09:00,000
you're going to look at the slide gen go

00:08:58,860 --> 00:09:01,200
well that was stupid why'd you do it

00:09:00,000 --> 00:09:05,100
that way well I didn't know that at the

00:09:01,200 --> 00:09:08,220
time now I do so a quick little bit of

00:09:05,100 --> 00:09:10,140
metadata this is most of my contact

00:09:08,220 --> 00:09:13,560
details up here for those of you don't

00:09:10,140 --> 00:09:14,680
know me in 1998 I got involved in this

00:09:13,560 --> 00:09:18,730
racket

00:09:14,680 --> 00:09:21,130
I built the first oh my first paying

00:09:18,730 --> 00:09:22,960
client I built a website for I got five

00:09:21,130 --> 00:09:24,339
hundred dollars which is about seven

00:09:22,960 --> 00:09:27,250
hundred and twenty-six dollars and

00:09:24,339 --> 00:09:29,230
seventy four cents inflation taken into

00:09:27,250 --> 00:09:34,540
it and I actually did deliver it to the

00:09:29,230 --> 00:09:36,520
client on a floppy like that in 2002 I

00:09:34,540 --> 00:09:37,899
started working with pearl I got hired

00:09:36,520 --> 00:09:40,779
for a job I was actually doing a lot of

00:09:37,899 --> 00:09:43,720
Python and JavaScript at the time but

00:09:40,779 --> 00:09:45,490
the good friend of mine he hired me and

00:09:43,720 --> 00:09:48,160
said here you've got to learn perl and

00:09:45,490 --> 00:09:51,940
he gave me a bunch of books i quickly

00:09:48,160 --> 00:09:56,110
fell in love of course well it took a

00:09:51,940 --> 00:09:58,360
little while in 2004 though i released

00:09:56,110 --> 00:10:00,040
my first Sipan module and while it

00:09:58,360 --> 00:10:01,600
wasn't my first seep in module one of my

00:10:00,040 --> 00:10:04,570
first Sipan modules was a module called

00:10:01,600 --> 00:10:06,850
class straight and that was an attempt

00:10:04,570 --> 00:10:08,440
to implement the traits paper which was

00:10:06,850 --> 00:10:10,690
one of the inspirations for roles in

00:10:08,440 --> 00:10:13,240
Perl 6 and to try and implement that in

00:10:10,690 --> 00:10:16,510
Perl 5 and I only bring this up for two

00:10:13,240 --> 00:10:18,130
reasons one because i want to show you

00:10:16,510 --> 00:10:20,370
that I've been basically wrestling with

00:10:18,130 --> 00:10:22,600
these same demons for about 11 years now

00:10:20,370 --> 00:10:25,060
and I'm still not happy with the result

00:10:22,600 --> 00:10:28,810
so I'm a bit of a perfectionist and also

00:10:25,060 --> 00:10:31,150
I wanted to blame Curtis po it was him

00:10:28,810 --> 00:10:34,060
who started this project and he got busy

00:10:31,150 --> 00:10:36,130
and so I went and ran with it and but

00:10:34,060 --> 00:10:38,470
Curtis was really really great he was

00:10:36,130 --> 00:10:41,950
really helpful he helped me as a very

00:10:38,470 --> 00:10:43,060
early young Sipan author to sort of he

00:10:41,950 --> 00:10:44,650
was one of the first people I really

00:10:43,060 --> 00:10:47,230
deeply interacted with in the community

00:10:44,650 --> 00:10:48,970
so if you don't like what I do please go

00:10:47,230 --> 00:10:53,260
Blaine Curtis it is not my fault it's

00:10:48,970 --> 00:10:55,390
all his fault so then in 2005 I got

00:10:53,260 --> 00:11:02,560
involved with pugs this is actually

00:10:55,390 --> 00:11:04,180
Shawn's dog which is named moose and I

00:11:02,560 --> 00:11:06,310
did a couple things in the pugs project

00:11:04,180 --> 00:11:08,140
but the thing that I ended up doing sort

00:11:06,310 --> 00:11:10,540
of the most work on was actually sort of

00:11:08,140 --> 00:11:12,760
looking over the Perl 6 back and trying

00:11:10,540 --> 00:11:15,579
to figure out how what the object model

00:11:12,760 --> 00:11:16,959
might look like on a metal layer so I

00:11:15,579 --> 00:11:19,000
did a lot of book reading a lot of

00:11:16,959 --> 00:11:21,880
prototyping cetera et cetera et cetera

00:11:19,000 --> 00:11:24,279
for a very long time but eventually the

00:11:21,880 --> 00:11:27,550
pugs project sort of it lost a bit of

00:11:24,279 --> 00:11:28,130
steam and I had to I I did have to go

00:11:27,550 --> 00:11:31,700
back to my day

00:11:28,130 --> 00:11:33,350
which was writing pro/5 so I missed all

00:11:31,700 --> 00:11:35,900
those nice things from Pearl six so I

00:11:33,350 --> 00:11:39,740
wrote moose in about two thousand two

00:11:35,900 --> 00:11:41,690
thousand six um and you know that a

00:11:39,740 --> 00:11:44,540
couple people seem to maybe use that

00:11:41,690 --> 00:11:48,290
module so it seemed worked out well and

00:11:44,540 --> 00:11:49,730
then in 2011 I started a project to try

00:11:48,290 --> 00:11:51,380
and take some of the things that we had

00:11:49,730 --> 00:11:53,510
done in moose and some of the learnings

00:11:51,380 --> 00:11:55,640
that we had in Moose along with some of

00:11:53,510 --> 00:11:56,810
the more developed ideas from perl 6

00:11:55,640 --> 00:11:59,060
because they've been working on it all

00:11:56,810 --> 00:12:01,100
along and to try and figure out a way

00:11:59,060 --> 00:12:06,770
again to steal those Perl 6 features and

00:12:01,100 --> 00:12:10,130
get them into pro 5 so what is a mop how

00:12:06,770 --> 00:12:12,140
many people know what a mop is ok decent

00:12:10,130 --> 00:12:13,460
amount ok so I'm just going to go over

00:12:12,140 --> 00:12:16,370
it because I just want to be sure

00:12:13,460 --> 00:12:19,340
everybody's on the same page a mop is an

00:12:16,370 --> 00:12:21,890
API for these things classes methods

00:12:19,340 --> 00:12:23,390
attributes instances ok you can think of

00:12:21,890 --> 00:12:25,660
these as some of the building blocks of

00:12:23,390 --> 00:12:29,210
object of any sort of object system and

00:12:25,660 --> 00:12:31,310
a mop is an API to manipulating these

00:12:29,210 --> 00:12:34,550
things it's also important to note the

00:12:31,310 --> 00:12:36,740
uppercase uppercase C class is different

00:12:34,550 --> 00:12:39,590
than lowercase C class think of it as

00:12:36,740 --> 00:12:41,480
class and instance but of course that's

00:12:39,590 --> 00:12:43,880
very confusing because class uppercase

00:12:41,480 --> 00:12:44,930
classes class and cut so it's very meta

00:12:43,880 --> 00:12:46,850
circular it does get a little confusing

00:12:44,930 --> 00:12:49,760
so one of the ways I like to describe it

00:12:46,850 --> 00:12:51,380
is this and whenever my mother asks what

00:12:49,760 --> 00:12:54,740
is it that can that you do I tell her

00:12:51,380 --> 00:12:56,210
this and to her credit she actually was

00:12:54,740 --> 00:12:58,370
a programmer before I was she used to do

00:12:56,210 --> 00:13:00,080
a lot of basic on the apple 2e that we

00:12:58,370 --> 00:13:01,280
got and stuff like that so she mostly

00:13:00,080 --> 00:13:03,590
just smacks me on the head for being a

00:13:01,280 --> 00:13:05,600
smartass when I say this but she does

00:13:03,590 --> 00:13:09,850
totally understand it so anyway an

00:13:05,600 --> 00:13:12,440
abstraction so the mop is an abstraction

00:13:09,850 --> 00:13:14,330
the sister it's a it's it's an

00:13:12,440 --> 00:13:17,450
abstraction of a system of abstractions

00:13:14,330 --> 00:13:19,130
the system of abstractions is classes

00:13:17,450 --> 00:13:20,360
methods things like that that's the

00:13:19,130 --> 00:13:22,760
system that comes together to make the

00:13:20,360 --> 00:13:25,250
object system and then you use that to

00:13:22,760 --> 00:13:27,790
build your abstractions your classes on

00:13:25,250 --> 00:13:31,400
top of that so this gets very very meta

00:13:27,790 --> 00:13:33,800
but it's kind of fun and of course pro 5

00:13:31,400 --> 00:13:35,980
has a built-in mop already we all know

00:13:33,800 --> 00:13:35,980
and love

00:13:36,450 --> 00:13:41,139
it's a little awkward as an API but it

00:13:39,310 --> 00:13:44,019
does work and I can prove that to you

00:13:41,139 --> 00:13:46,720
because moose is built on this and all

00:13:44,019 --> 00:13:48,250
my prototypes are built on this so but

00:13:46,720 --> 00:13:50,380
anyway what I wanted to do though was to

00:13:48,250 --> 00:13:53,740
make it a little bit nicer than this so

00:13:50,380 --> 00:13:57,190
I started a project called p5 mop like I

00:13:53,740 --> 00:14:04,899
said in 2011 and I set out with a set of

00:13:57,190 --> 00:14:07,690
goals I one died a couple things into

00:14:04,899 --> 00:14:09,610
language I wanted ad ad the ability to

00:14:07,690 --> 00:14:11,500
sort of define the slots and the

00:14:09,610 --> 00:14:14,050
attributes members whatever you want to

00:14:11,500 --> 00:14:15,339
call them that your class that your

00:14:14,050 --> 00:14:17,860
instances would have and I want to be

00:14:15,339 --> 00:14:21,610
able to define them in the class itself

00:14:17,860 --> 00:14:24,130
I wanted to improve the distinction

00:14:21,610 --> 00:14:26,199
between classes oops that's wrong oh

00:14:24,130 --> 00:14:28,209
yeah no classes and methods packages and

00:14:26,199 --> 00:14:30,010
subs make it a little bit more obvious

00:14:28,209 --> 00:14:32,500
this is a class it's not a package this

00:14:30,010 --> 00:14:34,570
is a method not a subroutine I wanted

00:14:32,500 --> 00:14:36,190
role composition I don't know how many

00:14:34,570 --> 00:14:38,110
of you played around with roles but I

00:14:36,190 --> 00:14:40,360
find them very very valuable there are a

00:14:38,110 --> 00:14:42,339
wonderful addition to the tool set for

00:14:40,360 --> 00:14:44,890
an oil programmer and I wanted to bring

00:14:42,339 --> 00:14:46,540
that into pro 5 I wanted an

00:14:44,890 --> 00:14:47,949
introspection API that was a little bit

00:14:46,540 --> 00:14:50,529
less clumsy than some of the type club

00:14:47,949 --> 00:14:52,769
stuff and was potentially you know

00:14:50,529 --> 00:14:56,010
obviously a more object-oriented API and

00:14:52,769 --> 00:14:59,260
lastly I wanted to improve the OO syntax

00:14:56,010 --> 00:15:01,029
so I think it's the best way to describe

00:14:59,260 --> 00:15:02,410
or two or sort of explain some of these

00:15:01,029 --> 00:15:04,949
things is to just quickly go over the

00:15:02,410 --> 00:15:07,660
syntax and you see some of the rationale

00:15:04,949 --> 00:15:10,300
we understand we all know this it's a

00:15:07,660 --> 00:15:12,820
you know your standard pearl 50 module

00:15:10,300 --> 00:15:16,120
we have a constructor we have a method

00:15:12,820 --> 00:15:19,000
we have a package etc etc this was sort

00:15:16,120 --> 00:15:20,829
of where i was going for the final

00:15:19,000 --> 00:15:23,290
version of syntax is changed slightly

00:15:20,829 --> 00:15:26,410
but not that much this is what the first

00:15:23,290 --> 00:15:29,140
one look like if you see we have the

00:15:26,410 --> 00:15:30,370
package their class they're very obvious

00:15:29,140 --> 00:15:34,449
we've got a big distinction we've got a

00:15:30,370 --> 00:15:37,449
totally different keyword methods or

00:15:34,449 --> 00:15:39,940
subroutines in in pro 50 or now I know

00:15:37,449 --> 00:15:41,880
you can do this to mark them as methods

00:15:39,940 --> 00:15:46,480
but how many of you actually do that

00:15:41,880 --> 00:15:48,640
right nobody so I wanted to add method

00:15:46,480 --> 00:15:49,420
method keyword very simple it's obvious

00:15:48,640 --> 00:15:53,380
it's what it's

00:15:49,420 --> 00:15:54,880
on the tin is what it does constructors

00:15:53,380 --> 00:15:56,770
we all have to write our own default

00:15:54,880 --> 00:15:59,050
constructors if you stop and think about

00:15:56,770 --> 00:16:00,460
it why do we have to do that why well we

00:15:59,050 --> 00:16:02,320
have to do that because Pearl has no

00:16:00,460 --> 00:16:04,090
clue what slots we might have in our

00:16:02,320 --> 00:16:05,470
class there's no way that it can know

00:16:04,090 --> 00:16:07,780
this because it's just an arbitrary hash

00:16:05,470 --> 00:16:10,390
ref in there so one of the key things

00:16:07,780 --> 00:16:15,040
again I wanted to have a way to specify

00:16:10,390 --> 00:16:16,930
that in pro 5 so with this no need for a

00:16:15,040 --> 00:16:19,540
constructor because pro knows ahead of

00:16:16,930 --> 00:16:21,940
time what are the what are the slots

00:16:19,540 --> 00:16:23,230
that I plan to have in the class and can

00:16:21,940 --> 00:16:26,350
do all sorts of stuff under the covers

00:16:23,230 --> 00:16:29,470
for that obviously no one's going to

00:16:26,350 --> 00:16:32,800
type 0 1 letter slot but well you know

00:16:29,470 --> 00:16:36,430
maybe good but how many of you have had

00:16:32,800 --> 00:16:37,840
a bug where it was just a typo a typo

00:16:36,430 --> 00:16:41,530
and one in the hash keys thank you

00:16:37,840 --> 00:16:43,450
everybody okay the beauty of this is

00:16:41,530 --> 00:16:45,220
it's a compile-time check just like your

00:16:43,450 --> 00:16:46,600
lexical variables you can't use a

00:16:45,220 --> 00:16:48,850
variable if it's not been declared

00:16:46,600 --> 00:16:51,160
already so I wanted to bring some of

00:16:48,850 --> 00:17:01,150
that safety that we enjoy in other

00:16:51,160 --> 00:17:02,650
languages into into pro 5 so what I'd

00:17:01,150 --> 00:17:05,380
like to do from here though is I want to

00:17:02,650 --> 00:17:07,150
go over now we're getting into the slow

00:17:05,380 --> 00:17:07,960
breakdown on my own stubbornness part so

00:17:07,150 --> 00:17:09,400
I'm going to go over some of the

00:17:07,960 --> 00:17:11,440
different prototypes give you an idea of

00:17:09,400 --> 00:17:14,830
the progression and where we're at right

00:17:11,440 --> 00:17:18,490
now so i kind of consider moose a first

00:17:14,830 --> 00:17:21,310
prototype when moose first started out

00:17:18,490 --> 00:17:22,660
it was actually it was well he can't

00:17:21,310 --> 00:17:25,390
release either can you see the green on

00:17:22,660 --> 00:17:27,640
there yeah a little bit okay I can't see

00:17:25,390 --> 00:17:31,660
the green from my angle I can't see so

00:17:27,640 --> 00:17:36,580
uh when moose started out it was it was

00:17:31,660 --> 00:17:38,770
actually just a it was an example on top

00:17:36,580 --> 00:17:41,410
of class mop class-map was my first

00:17:38,770 --> 00:17:43,720
attempt at building him up in pro 5 of

00:17:41,410 --> 00:17:46,210
course nobody cared about that and some

00:17:43,720 --> 00:17:49,870
moose grew larger and any of you had to

00:17:46,210 --> 00:17:52,030
install it recently will know that but

00:17:49,870 --> 00:17:54,490
so I consider moose mostly success but

00:17:52,030 --> 00:17:57,940
it was very much on top of the pro/5

00:17:54,490 --> 00:17:59,170
core it in no way integrated in with a

00:17:57,940 --> 00:18:01,930
pro five core

00:17:59,170 --> 00:18:03,580
at all it was purely built as a module

00:18:01,930 --> 00:18:06,670
for Sipan in an extension that you could

00:18:03,580 --> 00:18:08,170
bring so with the p5 mop I wanted to not

00:18:06,670 --> 00:18:11,230
do that I wanted to really bring it and

00:18:08,170 --> 00:18:13,600
integrate the two together this is what

00:18:11,230 --> 00:18:15,790
that might look like so with the first

00:18:13,600 --> 00:18:18,010
prototype though I wasn't very familiar

00:18:15,790 --> 00:18:20,830
with the pro/5 core all I heard was the

00:18:18,010 --> 00:18:24,100
horror stories so I wanted to make sure

00:18:20,830 --> 00:18:25,870
that I drew a line in blood we will

00:18:24,100 --> 00:18:27,130
never cross this we will never go into

00:18:25,870 --> 00:18:29,050
the profile core we're going to build

00:18:27,130 --> 00:18:30,460
this nice beautiful object system on top

00:18:29,050 --> 00:18:35,010
of it we'll figure out how to get there

00:18:30,460 --> 00:18:35,010
later of course it didn't work very well

00:18:35,250 --> 00:18:42,160
it was a daring attempt but no didn't

00:18:38,200 --> 00:18:43,360
end well it basically suffered very

00:18:42,160 --> 00:18:45,370
horribly under the weight of its own

00:18:43,360 --> 00:18:46,960
complexity and this actually has nothing

00:18:45,370 --> 00:18:48,760
to do with my choice of not integrating

00:18:46,960 --> 00:18:51,750
with the core this was just me going off

00:18:48,760 --> 00:18:54,370
and being crazy we had things like a

00:18:51,750 --> 00:18:56,440
bootstrap a multi-stage bootstrap that

00:18:54,370 --> 00:18:58,900
would tie multiple knots as it went

00:18:56,440 --> 00:19:00,850
along and do all sorts of stuff we had

00:18:58,900 --> 00:19:02,200
strict metaclass compatibility does

00:19:00,850 --> 00:19:06,550
anybody know what that is don't raise

00:19:02,200 --> 00:19:09,580
your hand youtube nobody knows nobody

00:19:06,550 --> 00:19:11,470
cares it's it's it's a deep meta thing

00:19:09,580 --> 00:19:13,150
that you know it's sort of important but

00:19:11,470 --> 00:19:15,640
not really enough but it increases the

00:19:13,150 --> 00:19:17,140
complexity massively we actually

00:19:15,640 --> 00:19:18,700
bootstrapped the mop with something we

00:19:17,140 --> 00:19:20,110
called the mini mop so the mop was

00:19:18,700 --> 00:19:21,970
implemented in the mop so that we could

00:19:20,110 --> 00:19:25,270
have a mop and did you see where that's

00:19:21,970 --> 00:19:28,690
going and we didn't test with real-world

00:19:25,270 --> 00:19:30,700
data big big mistake and we didn't

00:19:28,690 --> 00:19:32,170
really we kept punting the idea of how

00:19:30,700 --> 00:19:34,840
we going to integrate with old classes

00:19:32,170 --> 00:19:37,150
again big big mistake so it was fun and

00:19:34,840 --> 00:19:40,300
all but the you know in all this attempt

00:19:37,150 --> 00:19:42,760
to avoid the legacy and and and the

00:19:40,300 --> 00:19:44,920
notorious pearl core I ended up

00:19:42,760 --> 00:19:46,720
basically not being able to not being

00:19:44,920 --> 00:19:48,550
able to have anything workable and

00:19:46,720 --> 00:19:49,960
anytime that I did have to reach into

00:19:48,550 --> 00:19:53,350
the pro core I had to go into some of

00:19:49,960 --> 00:19:55,480
the really ugliest parts of it this is

00:19:53,350 --> 00:19:58,660
actually a picture of the bug that

00:19:55,480 --> 00:20:01,000
killed this project we we did a

00:19:58,660 --> 00:20:03,040
hackathon in Norway Sean was there do

00:20:01,000 --> 00:20:06,430
you remember this bug this this bug was

00:20:03,040 --> 00:20:07,900
really really it's I I don't even

00:20:06,430 --> 00:20:11,170
remember exactly what it is but there's

00:20:07,900 --> 00:20:12,380
a couple of those hash addresses that

00:20:11,170 --> 00:20:17,180
are the same that

00:20:12,380 --> 00:20:20,320
be okay in the end I forgot the first

00:20:17,180 --> 00:20:22,550
rule prototypes throw the first one away

00:20:20,320 --> 00:20:29,750
and then the second world prototypes

00:20:22,550 --> 00:20:31,340
never use pat walker so this was a

00:20:29,750 --> 00:20:33,860
little disappointing I was a little

00:20:31,340 --> 00:20:36,320
depressed I put all this effort and

00:20:33,860 --> 00:20:38,090
everything into there and it just sort

00:20:36,320 --> 00:20:41,180
of didn't work and in the postmodern

00:20:38,090 --> 00:20:43,910
discussions we actually started to to

00:20:41,180 --> 00:20:47,030
think about you know this this complex

00:20:43,910 --> 00:20:49,100
and crazy mop who would maintain this

00:20:47,030 --> 00:20:50,390
and this was something that we didn't

00:20:49,100 --> 00:20:52,220
really think is a mistake we should have

00:20:50,390 --> 00:20:55,760
thought about this before but if you're

00:20:52,220 --> 00:20:57,380
you're you're putting a pearls a tool

00:20:55,760 --> 00:21:00,140
that everybody uses we all use all the

00:20:57,380 --> 00:21:01,910
time it's it's key to to certain

00:21:00,140 --> 00:21:05,870
operating systems and and making them

00:21:01,910 --> 00:21:08,120
work if we're going to add a feature to

00:21:05,870 --> 00:21:10,310
it we have to be really careful about

00:21:08,120 --> 00:21:12,470
the complexity that we're adding because

00:21:10,310 --> 00:21:14,450
you know I may not be around forever I

00:21:12,470 --> 00:21:16,610
may get that sweet job writing C sharp

00:21:14,450 --> 00:21:21,020
if I want someday and say forget about

00:21:16,610 --> 00:21:22,610
all this stuff but you know we have to

00:21:21,020 --> 00:21:24,080
when you're adding something to a

00:21:22,610 --> 00:21:25,790
language like pearl into a system like

00:21:24,080 --> 00:21:27,980
pearl you have to think of the long term

00:21:25,790 --> 00:21:29,330
maintainability and that was something

00:21:27,980 --> 00:21:31,850
that we hadn't originally thought of but

00:21:29,330 --> 00:21:34,640
when we started thinking about it you

00:21:31,850 --> 00:21:36,710
know it was a well basically once you

00:21:34,640 --> 00:21:38,960
start down the road of you know should

00:21:36,710 --> 00:21:40,910
it even be in the core the next logical

00:21:38,960 --> 00:21:43,550
step of course is well let's just

00:21:40,910 --> 00:21:45,200
rewrite the whole damn thing which is

00:21:43,550 --> 00:21:47,690
what i did with a project called mo i

00:21:45,200 --> 00:21:52,190
gave a talk at the orlando pearl

00:21:47,690 --> 00:21:54,460
workshop and I I basically put out the

00:21:52,190 --> 00:21:57,770
idea of hey let's let's prototype a new

00:21:54,460 --> 00:22:00,320
core for pearl I wanted to originally

00:21:57,770 --> 00:22:04,040
call it Larry and I asked Larry and he

00:22:00,320 --> 00:22:06,860
said please don't but he suggested mo

00:22:04,040 --> 00:22:08,450
instead so to keep with you know so

00:22:06,860 --> 00:22:11,360
maybe the next successor will be curly

00:22:08,450 --> 00:22:13,490
who knows but I base mo actually on the

00:22:11,360 --> 00:22:15,950
the ideas and the principles that were

00:22:13,490 --> 00:22:18,950
in the pugs project the idea of oh fun

00:22:15,950 --> 00:22:21,200
optimized for fun one of the key ideas

00:22:18,950 --> 00:22:23,720
of the pugs project was to give Larry a

00:22:21,200 --> 00:22:25,230
playground to try out all the syntactic

00:22:23,720 --> 00:22:28,740
ideas

00:22:25,230 --> 00:22:32,820
he laughs and so I wanted to try and do

00:22:28,740 --> 00:22:34,890
a similar thing for for pro 5 you know I

00:22:32,820 --> 00:22:36,270
was wanting to add new syntax to it and

00:22:34,890 --> 00:22:38,429
I had another whole bunch of other great

00:22:36,270 --> 00:22:40,230
ideas that I wanted to do on move on it

00:22:38,429 --> 00:22:41,580
to it afterwards and I know other people

00:22:40,230 --> 00:22:43,200
wanted to play with this stuff too so I

00:22:41,580 --> 00:22:47,190
thought well Oh we'll remember Ian

00:22:43,200 --> 00:22:49,040
plement it'll be easy some people in the

00:22:47,190 --> 00:22:53,240
pro community were a little skeptical

00:22:49,040 --> 00:22:55,590
rightfully so again Shawn's dog moose

00:22:53,240 --> 00:22:59,250
lots of great mousse pictures go to his

00:22:55,590 --> 00:23:02,490
flickr fee so i put together this little

00:22:59,250 --> 00:23:04,140
wish list on the hope of maybe a future

00:23:02,490 --> 00:23:06,770
future pearl which might be able to do

00:23:04,140 --> 00:23:10,020
all these kind of cool things a nice AST

00:23:06,770 --> 00:23:12,480
less insane runtime a mop objects all

00:23:10,020 --> 00:23:13,980
the way down vm platforms all this kind

00:23:12,480 --> 00:23:18,330
of stuff like that sounds a little like

00:23:13,980 --> 00:23:19,890
pearl six actually but anyway III sort

00:23:18,330 --> 00:23:21,510
of played around with this a lot and I

00:23:19,890 --> 00:23:23,580
chose Scala as my implementation

00:23:21,510 --> 00:23:24,720
language mostly because you know if it

00:23:23,580 --> 00:23:30,000
didn't work out I could get a job at

00:23:24,720 --> 00:23:32,160
Twitter but uh you know in in it was a

00:23:30,000 --> 00:23:34,710
fun project but I did want to take some

00:23:32,160 --> 00:23:36,600
of this seriously and so I did a lot of

00:23:34,710 --> 00:23:38,250
research and I started to I had a

00:23:36,600 --> 00:23:40,350
laundry list of features that I wanted

00:23:38,250 --> 00:23:42,600
to sort of throw out of the core sort of

00:23:40,350 --> 00:23:44,520
old ideas that I thought maybe you know

00:23:42,600 --> 00:23:46,770
had had served their purpose and now we

00:23:44,520 --> 00:23:48,780
need to move on things like Thai and

00:23:46,770 --> 00:23:50,669
auto load and stuff like that which are

00:23:48,780 --> 00:23:51,960
useful when you use them but almost

00:23:50,669 --> 00:23:55,049
always come back and shoot you in the

00:23:51,960 --> 00:23:59,160
foot somehow so I started digging into

00:23:55,049 --> 00:24:01,950
Sipan there are core modules in Sipan

00:23:59,160 --> 00:24:05,130
that we all use every single day that

00:24:01,950 --> 00:24:07,080
use auto load that use thi that use some

00:24:05,130 --> 00:24:10,200
of these features that that we may be in

00:24:07,080 --> 00:24:12,690
the more modern pearl world think of as

00:24:10,200 --> 00:24:15,780
bad well their foundational technologies

00:24:12,690 --> 00:24:19,260
that are part of our foundation so dbi

00:24:15,780 --> 00:24:21,390
in particular is heavily built upon tie

00:24:19,260 --> 00:24:23,309
for very very good reason and if you go

00:24:21,390 --> 00:24:24,840
ask Tim when he's done with this talk

00:24:23,309 --> 00:24:26,669
about it he will tell you and it makes a

00:24:24,840 --> 00:24:29,400
lot of sense would you do it now maybe

00:24:26,669 --> 00:24:30,990
maybe not we'll see but anyway this

00:24:29,400 --> 00:24:33,419
started to really this is where I

00:24:30,990 --> 00:24:38,110
started to encounter the depths of pearl

00:24:33,419 --> 00:24:41,530
syntactic legacy much of the CPM core

00:24:38,110 --> 00:24:43,299
just had to be there XS had to be there

00:24:41,530 --> 00:24:45,910
if you throw at XS you throw it all of

00:24:43,299 --> 00:24:47,920
Sipan there's just nothing because if

00:24:45,910 --> 00:24:49,990
you follow the the dependency chain you

00:24:47,920 --> 00:24:52,059
will hit something that has excess in it

00:24:49,990 --> 00:24:54,460
or that relies on some other feature of

00:24:52,059 --> 00:24:56,590
the core so it became very very sort of

00:24:54,460 --> 00:24:57,970
difficult to even you know my original

00:24:56,590 --> 00:25:00,520
idea was basically not going to happen

00:24:57,970 --> 00:25:02,530
it didn't stop me from keeping on going

00:25:00,520 --> 00:25:04,270
and this was actually the the test suite

00:25:02,530 --> 00:25:06,760
in mode that we had we actually had a

00:25:04,270 --> 00:25:08,890
test more written in mo that we ran

00:25:06,760 --> 00:25:11,049
these tests with it was slow as dirt but

00:25:08,890 --> 00:25:13,570
it was you know was working so we were

00:25:11,049 --> 00:25:15,580
making good progress and actually had no

00:25:13,570 --> 00:25:18,280
intention of stopping until I saw this

00:25:15,580 --> 00:25:20,679
talk Peter martini was supposed to be

00:25:18,280 --> 00:25:23,260
here I really wish she was because I

00:25:20,679 --> 00:25:24,429
wanted to well when to show him that

00:25:23,260 --> 00:25:27,790
I've been stealing his slides for a

00:25:24,429 --> 00:25:29,200
little while now but uh if you haven't

00:25:27,790 --> 00:25:32,020
seen this talk I recommend you go take a

00:25:29,200 --> 00:25:34,230
look at it it's on YouTube and Peter's

00:25:32,020 --> 00:25:36,309
talk was not actually about implementing

00:25:34,230 --> 00:25:38,380
subroutine signatures which we now have

00:25:36,309 --> 00:25:40,030
in Perl 5 22 thank you Peter and

00:25:38,380 --> 00:25:44,260
everybody else who put some effort into

00:25:40,030 --> 00:25:46,330
that but this talk was was also about

00:25:44,260 --> 00:25:47,890
the the technical challenges but also

00:25:46,330 --> 00:25:49,720
about the human challenges and the

00:25:47,890 --> 00:25:52,240
process of getting it into core and it's

00:25:49,720 --> 00:25:54,429
a fascinating talk and I managed to roll

00:25:52,240 --> 00:25:55,870
into it I was pretty hungover but i SAT

00:25:54,429 --> 00:25:59,650
there and maybe that was good because it

00:25:55,870 --> 00:26:01,090
really sunk in um and the thing that I

00:25:59,650 --> 00:26:03,669
really appreciated about Peter stalks is

00:26:01,090 --> 00:26:04,870
he did a lot of his homework um I don't

00:26:03,669 --> 00:26:06,520
know if you can see this too well but it

00:26:04,870 --> 00:26:08,290
says the Alpha alphanumerics have been

00:26:06,520 --> 00:26:09,880
intentionally left out of prototypes for

00:26:08,290 --> 00:26:13,440
the express purpose of someday in the

00:26:09,880 --> 00:26:17,650
future adding named formal parameters in

00:26:13,440 --> 00:26:19,750
1995 that was written we get him now it

00:26:17,650 --> 00:26:22,150
took a little while but it was there and

00:26:19,750 --> 00:26:24,280
he did his research and he dove down in

00:26:22,150 --> 00:26:26,799
and he found all these little nuggets in

00:26:24,280 --> 00:26:30,760
there he also spent a long time working

00:26:26,799 --> 00:26:33,160
with the p5p folks um and he has uh yeah

00:26:30,760 --> 00:26:37,059
can you guys see that I can't see okay

00:26:33,160 --> 00:26:38,770
so uh he says there were 44 broad

00:26:37,059 --> 00:26:41,710
objections to the most recent attempt to

00:26:38,770 --> 00:26:44,440
make a core feature the first one was is

00:26:41,710 --> 00:26:46,900
it worth doing and if it was wouldn't it

00:26:44,440 --> 00:26:51,250
be done already I'm not sure I buy that

00:26:46,900 --> 00:26:54,040
one the core is too bloated already

00:26:51,250 --> 00:26:56,170
yeah that has some validity but I'm not

00:26:54,040 --> 00:26:58,510
sure I buy that one either future

00:26:56,170 --> 00:27:01,030
backwards compatibility I'll get to that

00:26:58,510 --> 00:27:02,530
in a second and it should be done on

00:27:01,030 --> 00:27:06,220
Sipan first that one I wholeheartedly

00:27:02,530 --> 00:27:07,360
agree with because you know if we put it

00:27:06,220 --> 00:27:08,500
into the core it's in the core and

00:27:07,360 --> 00:27:10,360
that's actually where the future

00:27:08,500 --> 00:27:11,860
backwards compatibility comes in the

00:27:10,360 --> 00:27:14,500
idea of future backwards compatibility

00:27:11,860 --> 00:27:17,170
is that if you all remember David's

00:27:14,500 --> 00:27:18,640
River metaphor okay he was talking about

00:27:17,170 --> 00:27:19,810
some of those core modules that are up

00:27:18,640 --> 00:27:22,390
at the top that can pollute the river

00:27:19,810 --> 00:27:24,520
well pearl is sort of the source of the

00:27:22,390 --> 00:27:26,710
river pearl is the the snow on the

00:27:24,520 --> 00:27:28,660
mountain that eventually melts if you

00:27:26,710 --> 00:27:30,610
pee into that snow it's all eventually

00:27:28,660 --> 00:27:34,480
going to come down and pollute the whole

00:27:30,610 --> 00:27:35,650
river so you have to be very as much as

00:27:34,480 --> 00:27:38,710
you have to be really careful with some

00:27:35,650 --> 00:27:40,540
of those core those top 50 modules you

00:27:38,710 --> 00:27:42,970
have to be even more careful with with

00:27:40,540 --> 00:27:44,920
pearl 5 you know and in the near term

00:27:42,970 --> 00:27:46,930
people will start writing Sipan modules

00:27:44,920 --> 00:27:48,130
and start using your feature well there

00:27:46,930 --> 00:27:49,330
you go now you have a backwards

00:27:48,130 --> 00:27:50,770
compatibility problem these Sipan

00:27:49,330 --> 00:27:53,830
modules are depending upon you you can't

00:27:50,770 --> 00:27:55,810
change it da da da da think about how

00:27:53,830 --> 00:27:57,010
long it takes for a new version of Perl

00:27:55,810 --> 00:27:59,500
to make it out into some of the UNIX

00:27:57,010 --> 00:28:02,140
distributions three years give or take

00:27:59,500 --> 00:28:04,830
so in three years you potentially have a

00:28:02,140 --> 00:28:09,070
lot more of that urine-soaked snow

00:28:04,830 --> 00:28:10,810
flowing down river into dark pan and of

00:28:09,070 --> 00:28:13,000
course the whole possibility who's going

00:28:10,810 --> 00:28:15,970
to maintain this you know what if I get

00:28:13,000 --> 00:28:18,810
that C sharp job and I go away and I've

00:28:15,970 --> 00:28:20,770
left you all with this giant pile of poo

00:28:18,810 --> 00:28:23,170
these things have to be taken into

00:28:20,770 --> 00:28:24,550
account so anything that you try and add

00:28:23,170 --> 00:28:25,870
to the pearl five core you have to

00:28:24,550 --> 00:28:27,870
really really think through all these

00:28:25,870 --> 00:28:30,010
steps and answer all these questions

00:28:27,870 --> 00:28:32,050
Peter went on sort of to explain his

00:28:30,010 --> 00:28:34,360
plan and again I encourage you all to go

00:28:32,050 --> 00:28:35,860
watch the talk very very informative and

00:28:34,360 --> 00:28:37,960
he went into a lot of the gory details

00:28:35,860 --> 00:28:40,150
of his implementation and things like

00:28:37,960 --> 00:28:42,520
that and as I was listening to him I

00:28:40,150 --> 00:28:44,680
realized I had never really done that I

00:28:42,520 --> 00:28:46,630
had never really doe deep enough into

00:28:44,680 --> 00:28:48,490
the core and I was trying to build

00:28:46,630 --> 00:28:50,830
everything on top and you know Peters

00:28:48,490 --> 00:28:54,100
just a much smarter guy than I was he

00:28:50,830 --> 00:28:57,570
went from the other end so on the plane

00:28:54,100 --> 00:28:59,500
home actually in the airport in Austin I

00:28:57,570 --> 00:29:01,810
started filling around with another

00:28:59,500 --> 00:29:04,330
prototype I initially named the

00:29:01,810 --> 00:29:05,860
repository this

00:29:04,330 --> 00:29:07,779
and this was sort of my vision so we

00:29:05,860 --> 00:29:10,059
remember the diagram for me for so I

00:29:07,779 --> 00:29:12,850
wanted to you know I still wanted to

00:29:10,059 --> 00:29:15,039
keep it reasonably isolated because i am

00:29:12,850 --> 00:29:16,390
adding a large chunk of stuff into there

00:29:15,039 --> 00:29:18,159
but i wanted to have it nicely

00:29:16,390 --> 00:29:19,809
integrated to various parts of the pearl

00:29:18,159 --> 00:29:21,419
core things like that so paying

00:29:19,809 --> 00:29:23,860
attention to what's actually there and

00:29:21,419 --> 00:29:25,659
this is actually the code for the first

00:29:23,860 --> 00:29:27,669
prototype that I did in in the airport

00:29:25,659 --> 00:29:29,950
and I'm just going to quickly go over it

00:29:27,669 --> 00:29:32,250
so what I was trying what I'm trying to

00:29:29,950 --> 00:29:34,269
do here is figure out a way to have

00:29:32,250 --> 00:29:43,750
basically those last two lines at the

00:29:34,269 --> 00:29:46,240
bottom the ability to to put I thought

00:29:43,750 --> 00:29:47,470
maybe was John anyway so I wanted to

00:29:46,240 --> 00:29:49,179
have those last two things at the bottom

00:29:47,470 --> 00:29:51,669
I wanted to have that that that lexical

00:29:49,179 --> 00:29:54,909
variable that that accessed the slot of

00:29:51,669 --> 00:29:58,690
the object so filled hashes how many of

00:29:54,909 --> 00:30:02,889
you viewed fused field hashes to okay

00:29:58,690 --> 00:30:05,169
good I'm three field hashes were

00:30:02,889 --> 00:30:07,659
introduced in 5 10 and they were

00:30:05,169 --> 00:30:10,240
basically put there to support the

00:30:07,659 --> 00:30:13,000
inside out object idea and they're

00:30:10,240 --> 00:30:16,720
basically you can put slots into or you

00:30:13,000 --> 00:30:18,610
can you can store things into a hash and

00:30:16,720 --> 00:30:20,500
they will get properly garbage collected

00:30:18,610 --> 00:30:22,870
which was one of the issues with with

00:30:20,500 --> 00:30:24,909
the inside out objects pattern was that

00:30:22,870 --> 00:30:26,769
you had to manually garbage collect your

00:30:24,909 --> 00:30:28,149
instances so fuel hash is sort of took

00:30:26,769 --> 00:30:30,669
care of that so I thought okay I can use

00:30:28,149 --> 00:30:34,000
those how many you're familiar with

00:30:30,669 --> 00:30:36,159
variable magic okay so variable magic is

00:30:34,000 --> 00:30:38,380
just sort of a purl side version of a

00:30:36,159 --> 00:30:40,720
core thing in pearl which is magic and

00:30:38,380 --> 00:30:43,980
magic allows you to sort of have a V

00:30:40,720 --> 00:30:47,049
table which is the set and the data and

00:30:43,980 --> 00:30:49,330
you cast the magic on to a particular

00:30:47,049 --> 00:30:51,549
variable and then you can get callbacks

00:30:49,330 --> 00:30:52,419
in there so i won't i won't explain all

00:30:51,549 --> 00:30:54,340
the details of that there but

00:30:52,419 --> 00:30:56,380
essentially what that did was allowed

00:30:54,340 --> 00:30:58,960
someone to write to a lexical variable

00:30:56,380 --> 00:31:00,399
and have it get populated into some sort

00:30:58,960 --> 00:31:02,440
of instance that's stored in another

00:31:00,399 --> 00:31:04,000
place then I had this at the beginning

00:31:02,440 --> 00:31:06,429
I'm pulling out that's the inside out

00:31:04,000 --> 00:31:08,860
object pattern where the use the the

00:31:06,429 --> 00:31:12,010
object address to to pull it out of the

00:31:08,860 --> 00:31:15,549
hash then I cast it with with the magic

00:31:12,010 --> 00:31:17,139
and then suddenly I can do that last two

00:31:15,549 --> 00:31:18,100
lines and again that all that stuff is

00:31:17,139 --> 00:31:20,830
just to get those last

00:31:18,100 --> 00:31:23,620
lines down there but if you think about

00:31:20,830 --> 00:31:25,480
it it's pretty easy to go from there to

00:31:23,620 --> 00:31:27,730
here with a little bit of sugar we've

00:31:25,480 --> 00:31:29,500
got a preamble in the method we've got

00:31:27,730 --> 00:31:31,900
some other stuff to set up in order to

00:31:29,500 --> 00:31:35,230
handle slots but it's a relatively easy

00:31:31,900 --> 00:31:36,789
jump from there to there but one of the

00:31:35,230 --> 00:31:37,990
things that I did want to do or one of

00:31:36,789 --> 00:31:39,549
the mistakes I didn't want to make with

00:31:37,990 --> 00:31:45,010
this prototype was to think about syntax

00:31:39,549 --> 00:31:48,220
too early eventually I had to and I used

00:31:45,010 --> 00:31:49,720
devel declare initially to get it it got

00:31:48,220 --> 00:31:51,940
me to the prototype very quickly and

00:31:49,720 --> 00:31:54,159
proved that the the idea from before

00:31:51,940 --> 00:31:57,010
which also i hacked that one in the in

00:31:54,159 --> 00:31:58,270
an airport as well but basically after

00:31:57,010 --> 00:32:00,070
doing these two things I thought to

00:31:58,270 --> 00:32:03,610
myself ok I think I have a better

00:32:00,070 --> 00:32:04,960
foundation notepad Walker and a little

00:32:03,610 --> 00:32:06,789
bit of air port hacking some proof of

00:32:04,960 --> 00:32:08,200
concepts I'm ready to sort of take this

00:32:06,789 --> 00:32:11,890
to the next step and see if I can't

00:32:08,200 --> 00:32:12,909
bring this one to to fruition and one of

00:32:11,890 --> 00:32:15,039
the things that I wanted to do is I

00:32:12,909 --> 00:32:16,419
wanted to keep in mind simplicity so

00:32:15,039 --> 00:32:18,700
again we talked about like if you add

00:32:16,419 --> 00:32:20,620
too much complexity into the core you're

00:32:18,700 --> 00:32:23,080
putting a huge burden on that and so I

00:32:20,620 --> 00:32:24,880
like to try and keep this a quote in

00:32:23,080 --> 00:32:26,919
mind through the whole thing how many

00:32:24,880 --> 00:32:30,100
you familiar with this code it was okay

00:32:26,919 --> 00:32:34,690
that's not what he said that's what he

00:32:30,100 --> 00:32:36,220
said which is not very simple but it

00:32:34,690 --> 00:32:39,909
illustrates a very good point which is

00:32:36,220 --> 00:32:43,240
that simplicity is is a relative thing

00:32:39,909 --> 00:32:46,380
its relative to what you're trying to do

00:32:43,240 --> 00:32:48,250
to your particular problem set so as

00:32:46,380 --> 00:32:53,470
much as I wanted to try and keep it

00:32:48,250 --> 00:32:55,780
simple to simple is not good the two

00:32:53,470 --> 00:32:59,049
simples not good overly sim or no overly

00:32:55,780 --> 00:33:01,120
complex overly simple no took up two

00:32:59,049 --> 00:33:03,159
simple is not good to complex is not

00:33:01,120 --> 00:33:06,100
kicked so I had to have a balance I had

00:33:03,159 --> 00:33:09,490
to work on a balance there so anyway

00:33:06,100 --> 00:33:10,900
hack hack hack hack hack at some point I

00:33:09,490 --> 00:33:12,730
said to myself I'm not going to make the

00:33:10,900 --> 00:33:15,309
mistake that I made before in terms of

00:33:12,730 --> 00:33:18,700
not being able to not doing real world

00:33:15,309 --> 00:33:21,400
data not integrating with with older

00:33:18,700 --> 00:33:23,260
pearl Lowe stuff like that so we started

00:33:21,400 --> 00:33:25,030
actually poured week we had a rough

00:33:23,260 --> 00:33:28,120
prototyping we started porting modules

00:33:25,030 --> 00:33:30,460
the first one was plaque I don't know so

00:33:28,120 --> 00:33:31,480
everyone smile at my new job of booking

00:33:30,460 --> 00:33:34,930
I get to actually

00:33:31,480 --> 00:33:36,370
on board some developers and we I think

00:33:34,930 --> 00:33:38,260
we've got most of the Pearl developers

00:33:36,370 --> 00:33:40,000
who are willing to move to Amsterdam

00:33:38,260 --> 00:33:42,070
already so we've been hiring c-sharp

00:33:40,000 --> 00:33:44,970
developers and C++ developers and stuff

00:33:42,070 --> 00:33:48,130
like that and then warping their minds

00:33:44,970 --> 00:33:50,440
plaque is a module that I like to refer

00:33:48,130 --> 00:33:53,710
some of these people to and say go read

00:33:50,440 --> 00:33:56,230
the source because it's clean it's just

00:33:53,710 --> 00:33:58,290
it's exactly that balance of not too

00:33:56,230 --> 00:34:01,540
much not not too simple not too complex

00:33:58,290 --> 00:34:02,980
some of the stuff some of the Twiggy and

00:34:01,540 --> 00:34:04,300
things like that get a little crazy but

00:34:02,980 --> 00:34:07,150
if you look at the core classes of

00:34:04,300 --> 00:34:09,790
plaque it's a really good really clean

00:34:07,150 --> 00:34:13,330
Pro code so I thought to myself if I can

00:34:09,790 --> 00:34:15,640
port plaque then that's a good thing so

00:34:13,330 --> 00:34:18,280
we did plaque a couple other modules

00:34:15,640 --> 00:34:19,870
that I that I wrote Action Pack promises

00:34:18,280 --> 00:34:22,810
breadboard which was actually the first

00:34:19,870 --> 00:34:24,460
module that I wrote in moose after

00:34:22,810 --> 00:34:27,130
writing moose I thought well if I can

00:34:24,460 --> 00:34:29,080
port this then hey now i can even we can

00:34:27,130 --> 00:34:33,220
we can transfer moose code it was a

00:34:29,080 --> 00:34:35,470
little messy reply which is a great read

00:34:33,220 --> 00:34:37,960
eval print loop that Jessie lures wrote

00:34:35,470 --> 00:34:41,170
he actually ported that over to the p5

00:34:37,960 --> 00:34:43,000
mop p5 my products and a couple other

00:34:41,170 --> 00:34:45,250
things like that and after we had all

00:34:43,000 --> 00:34:47,620
this stuff I felt much more confident

00:34:45,250 --> 00:34:50,440
that we we'd sort of maybe started down

00:34:47,620 --> 00:34:51,730
the right path yet one more there so

00:34:50,440 --> 00:34:54,150
much so that I actually released it on

00:34:51,730 --> 00:34:55,930
to see pan I don't recommend Tron

00:34:54,150 --> 00:34:59,470
loading I'm not even sure if it still

00:34:55,930 --> 00:35:01,900
works but I threw it out to see pan for

00:34:59,470 --> 00:35:03,850
people to try out so I generally

00:35:01,900 --> 00:35:07,000
consider that prototype of success

00:35:03,850 --> 00:35:09,190
however I still ended up throwing it out

00:35:07,000 --> 00:35:11,980
and part of the reason was because you

00:35:09,190 --> 00:35:14,680
know you remember my nice pretty lightly

00:35:11,980 --> 00:35:17,890
integrated clean everything like that it

00:35:14,680 --> 00:35:19,900
actually looked a lot more like this we

00:35:17,890 --> 00:35:22,630
missed the mark in a few places stuff

00:35:19,900 --> 00:35:24,940
like that we we solve some problems I

00:35:22,630 --> 00:35:27,100
was happy with but but in the end it

00:35:24,940 --> 00:35:30,100
really you know we had to introduce some

00:35:27,100 --> 00:35:32,140
excess in there it got a little it got a

00:35:30,100 --> 00:35:34,270
little messy and and when I actually

00:35:32,140 --> 00:35:36,670
looked at the excess in particular I

00:35:34,270 --> 00:35:39,670
realized that we didn't have a

00:35:36,670 --> 00:35:41,250
foundation because again I had forgotten

00:35:39,670 --> 00:35:45,390
something very critical

00:35:41,250 --> 00:35:48,540
I hadn't thought about the seaside see

00:35:45,390 --> 00:35:51,810
the programming language um API that the

00:35:48,540 --> 00:35:54,030
map might have and I realized that I

00:35:51,810 --> 00:35:56,160
didn't really know see very well I

00:35:54,030 --> 00:35:59,790
didn't know excess very well I didn't

00:35:56,160 --> 00:36:02,760
know pearl the pro core very well so

00:35:59,790 --> 00:36:05,760
there were some dark times after this I

00:36:02,760 --> 00:36:08,250
decided I need to learn this I can't

00:36:05,760 --> 00:36:11,550
just go I can't rely on other people to

00:36:08,250 --> 00:36:13,140
help me and and I can't rely on the the

00:36:11,550 --> 00:36:17,780
rumors and the anecdotes and the

00:36:13,140 --> 00:36:21,770
horrible stories about the course so I

00:36:17,780 --> 00:36:24,390
spend some time learning the dark arts

00:36:21,770 --> 00:36:26,400
and this also coincided with my trip to

00:36:24,390 --> 00:36:28,800
Amsterdam so this book was very

00:36:26,400 --> 00:36:31,260
appropriate actually my moving to

00:36:28,800 --> 00:36:33,810
Hampshire name and you know in the

00:36:31,260 --> 00:36:38,220
tradition of these little diagrams this

00:36:33,810 --> 00:36:41,190
is how this one kind of worked out not

00:36:38,220 --> 00:36:44,550
very well lots of seg faults lots of seg

00:36:41,190 --> 00:36:47,310
faults and tears seg faults in tears but

00:36:44,550 --> 00:36:48,540
the thing was as I learned I I was

00:36:47,310 --> 00:36:51,570
learning excess I was getting more

00:36:48,540 --> 00:36:52,950
comfortable with the core and and I was

00:36:51,570 --> 00:36:56,160
getting more familiar with what it was

00:36:52,950 --> 00:36:58,020
that I was trying to do so after I sort

00:36:56,160 --> 00:37:00,510
of got my myself and my family settled

00:36:58,020 --> 00:37:05,040
didn't in Holland I started on another

00:37:00,510 --> 00:37:06,620
project this was originally this was

00:37:05,040 --> 00:37:09,180
originally the name of the folder and

00:37:06,620 --> 00:37:10,620
just because I don't know I was just

00:37:09,180 --> 00:37:12,150
being silly with myself and I thought

00:37:10,620 --> 00:37:13,740
you know what I'm just gonna leave it

00:37:12,150 --> 00:37:20,310
there so if you go and github that's the

00:37:13,740 --> 00:37:25,650
name of the repo so I want to come back

00:37:20,310 --> 00:37:26,940
quick to Peter's talk and a point that

00:37:25,650 --> 00:37:29,280
he made that I didn't actually digest

00:37:26,940 --> 00:37:30,450
until a little bit later which was that

00:37:29,280 --> 00:37:32,520
features can actually be added

00:37:30,450 --> 00:37:34,950
incrementally you don't need to get the

00:37:32,520 --> 00:37:36,480
whole thing in and like I said I kind of

00:37:34,950 --> 00:37:39,090
wish Peter was here because I know peter

00:37:36,480 --> 00:37:41,790
has visions for the next step with

00:37:39,090 --> 00:37:43,860
subroutines and and I used it so I used

00:37:41,790 --> 00:37:46,260
to live in the new york city area and

00:37:43,860 --> 00:37:47,280
Peter he lives on New Jersey i lived in

00:37:46,260 --> 00:37:48,840
Connecticut's who were sorted on the

00:37:47,280 --> 00:37:50,130
other side but every once in a while we

00:37:48,840 --> 00:37:51,720
were both find ourselves in New York

00:37:50,130 --> 00:37:53,550
sittings we'd have lunch and we talked

00:37:51,720 --> 00:37:54,830
and he told me about all these ideas and

00:37:53,550 --> 00:37:57,020
I thought to myself

00:37:54,830 --> 00:38:01,910
hmm you're smart to not tell anybody

00:37:57,020 --> 00:38:03,170
else about that and and he had longer

00:38:01,910 --> 00:38:04,670
term plans maybe they'll come to

00:38:03,170 --> 00:38:07,970
fruition maybe they won't well you know

00:38:04,670 --> 00:38:10,010
time will tell but patience patience was

00:38:07,970 --> 00:38:12,830
a key thing that he had that again I

00:38:10,010 --> 00:38:15,740
didn't have so again I learned learn

00:38:12,830 --> 00:38:17,120
from him and and to when you and anybody

00:38:15,740 --> 00:38:19,310
who's worked in a large code base a

00:38:17,120 --> 00:38:21,050
large legacy code base and especially a

00:38:19,310 --> 00:38:24,260
large legacy code base that's making

00:38:21,050 --> 00:38:27,110
money risk risk is an important thing

00:38:24,260 --> 00:38:29,090
the least amount of change for the

00:38:27,110 --> 00:38:30,440
maximum amount of benefit because the

00:38:29,090 --> 00:38:34,130
more you change the more you increase

00:38:30,440 --> 00:38:35,930
the risk so Peter was smart he wanted to

00:38:34,130 --> 00:38:38,050
start small and go from there so I

00:38:35,930 --> 00:38:41,780
decided to take that really to heart and

00:38:38,050 --> 00:38:45,260
so as I entered into this p5 mom

00:38:41,780 --> 00:38:47,510
seriously what the I decided to

00:38:45,260 --> 00:38:50,420
take a different approach instead of

00:38:47,510 --> 00:38:52,250
building a bunch of features I decided

00:38:50,420 --> 00:38:55,070
to look to see if they might already be

00:38:52,250 --> 00:38:58,430
there how many of you know about this

00:38:55,070 --> 00:39:01,670
feature pre declaring subs right super

00:38:58,430 --> 00:39:04,550
simple um if you're familiar with roles

00:39:01,670 --> 00:39:07,460
roles have a concept of required methods

00:39:04,550 --> 00:39:09,500
so when you create a route when you

00:39:07,460 --> 00:39:12,170
create a role you can require that any

00:39:09,500 --> 00:39:15,740
class that you compose the roll into is

00:39:12,170 --> 00:39:17,690
required to implement that method it's

00:39:15,740 --> 00:39:20,780
sort of you've worked with abstract

00:39:17,690 --> 00:39:22,280
based classes and other other languages

00:39:20,780 --> 00:39:23,180
stuff like that you'll see some of those

00:39:22,280 --> 00:39:24,950
things where you create an abstract

00:39:23,180 --> 00:39:28,550
method but you don't actually implement

00:39:24,950 --> 00:39:31,430
it so I thought hey I wonder if I could

00:39:28,550 --> 00:39:33,890
do that here and lo and behold throw a

00:39:31,430 --> 00:39:37,700
little develop peek at it and look the

00:39:33,890 --> 00:39:39,710
route is no meaning there is no body to

00:39:37,700 --> 00:39:42,200
this so that's not easy to figure out

00:39:39,710 --> 00:39:43,820
from the purl side you basically have to

00:39:42,200 --> 00:39:45,230
run the subroutine and it blows up at

00:39:43,820 --> 00:39:48,260
you and you go okay it doesn't have a

00:39:45,230 --> 00:39:50,360
body well from the excess side from the

00:39:48,260 --> 00:39:53,030
internals it's very easy it's very

00:39:50,360 --> 00:39:55,550
simple you can find it there so who cool

00:39:53,030 --> 00:39:57,800
there we go feature number one this

00:39:55,550 --> 00:40:00,080
which I talked about before again nobody

00:39:57,800 --> 00:40:03,050
uses it I don't really like the syntax

00:40:00,080 --> 00:40:05,810
so much but if you look again in the

00:40:03,050 --> 00:40:07,050
core hey it's flagged as a method so

00:40:05,810 --> 00:40:11,280
again

00:40:07,050 --> 00:40:13,950
feature number two sub signatures my

00:40:11,280 --> 00:40:18,510
patients in this case paid off this is

00:40:13,950 --> 00:40:20,160
the diff from from there okay all I had

00:40:18,510 --> 00:40:21,720
to do is wait long enough someone else

00:40:20,160 --> 00:40:24,330
implemented it I could get rid of all

00:40:21,720 --> 00:40:26,700
that code in there so boom three

00:40:24,330 --> 00:40:29,280
features I haven't written a lick of

00:40:26,700 --> 00:40:32,430
code and I found three features buried

00:40:29,280 --> 00:40:34,560
in that haystack of the pro core so I

00:40:32,430 --> 00:40:36,720
thought ho okay all right this is a mano

00:40:34,560 --> 00:40:38,880
role here I'm going to keep going now

00:40:36,720 --> 00:40:40,920
the syntax maybe it's not what you want

00:40:38,880 --> 00:40:43,320
but that's okay that's sugar we can add

00:40:40,920 --> 00:40:45,990
that later we have the features so I

00:40:43,320 --> 00:40:47,660
thought to myself okay roles so we have

00:40:45,990 --> 00:40:50,340
inheritance we stuff it into the at is a

00:40:47,660 --> 00:40:54,300
rolls we can kind of borrow that same

00:40:50,340 --> 00:40:55,920
idea put it in a at does okay then we

00:40:54,300 --> 00:40:57,600
store the names of the roles that we

00:40:55,920 --> 00:41:00,900
want to be applied to that class and

00:40:57,600 --> 00:41:03,420
just like with with with is a it's a

00:41:00,900 --> 00:41:05,580
magical little special variable that

00:41:03,420 --> 00:41:07,230
does things and Rick ripples through the

00:41:05,580 --> 00:41:10,050
core we can do the same thing with their

00:41:07,230 --> 00:41:11,670
and and features it's this kind of stuff

00:41:10,050 --> 00:41:12,810
it's almost the trickier part is

00:41:11,670 --> 00:41:14,340
figuring out where to store this kind of

00:41:12,810 --> 00:41:16,170
information well why not just put it in

00:41:14,340 --> 00:41:19,880
the package it's already we have

00:41:16,170 --> 00:41:24,270
precedence all ready for that attributes

00:41:19,880 --> 00:41:27,030
same thing we put a has hash the the

00:41:24,270 --> 00:41:30,450
keys are the names that we want for

00:41:27,030 --> 00:41:33,930
those slots and the the values are

00:41:30,450 --> 00:41:36,000
callbacks to provide the initial value

00:41:33,930 --> 00:41:39,810
to it this also has some other benefits

00:41:36,000 --> 00:41:46,130
if how many of you familiar with how the

00:41:39,810 --> 00:41:46,130
method caching and pro/5 works Rick okay

00:41:46,220 --> 00:41:51,720
other than Rick so one of the things a

00:41:49,080 --> 00:41:53,400
pro 5 does in the core is when you

00:41:51,720 --> 00:41:55,290
actually call a method and it has to go

00:41:53,400 --> 00:41:57,390
and look inside the inheritance chain it

00:41:55,290 --> 00:41:59,310
takes a copy of that subroutine sort of

00:41:57,390 --> 00:42:00,540
sticks it in your local stash so it

00:41:59,310 --> 00:42:03,090
doesn't have to run down that chain

00:42:00,540 --> 00:42:05,340
anymore but it does sort of special

00:42:03,090 --> 00:42:06,780
things to that method so that if you

00:42:05,340 --> 00:42:08,700
actually were to sort of look at it from

00:42:06,780 --> 00:42:12,660
the purl side do some type glob fiddling

00:42:08,700 --> 00:42:14,280
you'd see that it's not there but pearl

00:42:12,660 --> 00:42:16,170
knows it's there and pearl can then use

00:42:14,280 --> 00:42:17,930
it to make it fast well one of the

00:42:16,170 --> 00:42:20,670
things you know when you when you go to

00:42:17,930 --> 00:42:22,049
build a instance

00:42:20,670 --> 00:42:23,579
you want to get all those slots and

00:42:22,049 --> 00:42:26,040
collect them all and put them in well I

00:42:23,579 --> 00:42:28,470
can do the exact same trick here because

00:42:26,040 --> 00:42:30,000
each one of these subroutines even

00:42:28,470 --> 00:42:31,740
though they are anonymous I can figure

00:42:30,000 --> 00:42:34,200
out what package they were defined in

00:42:31,740 --> 00:42:36,079
meaning i can see if they were defined

00:42:34,200 --> 00:42:39,569
in a package i inherit from and

00:42:36,079 --> 00:42:42,329
therefore ignore them through an API but

00:42:39,569 --> 00:42:44,010
have them immediately right next to

00:42:42,329 --> 00:42:46,650
where I need them what I want to do it

00:42:44,010 --> 00:42:48,359
so again I haven't written a feature I

00:42:46,650 --> 00:42:50,549
wrote a little bit of code here but not

00:42:48,359 --> 00:42:53,160
even yet but i found these features

00:42:50,549 --> 00:42:54,750
already lying in the pro core and of

00:42:53,160 --> 00:42:57,059
course this syntax is not that great but

00:42:54,750 --> 00:42:59,160
again let me reiterate we can put sugar

00:42:57,059 --> 00:43:02,730
on top of the syntax we're figuring out

00:42:59,160 --> 00:43:04,589
how to to get the features in there and

00:43:02,730 --> 00:43:07,609
again add the least amount into the

00:43:04,589 --> 00:43:10,980
pearl core and one of the things too

00:43:07,609 --> 00:43:15,000
again I mentioned this before the sea

00:43:10,980 --> 00:43:17,700
seaside API that started to come out of

00:43:15,000 --> 00:43:20,579
this thing because a lot of these things

00:43:17,700 --> 00:43:22,559
I did need to look into the the seaside

00:43:20,579 --> 00:43:25,470
and the excess side and try and figure

00:43:22,559 --> 00:43:28,470
out what how I can implement certain

00:43:25,470 --> 00:43:30,720
things so I started to write that I'm

00:43:28,470 --> 00:43:32,339
not a very good c programmer I'm

00:43:30,720 --> 00:43:36,000
actually really really bad c program

00:43:32,339 --> 00:43:38,010
right now so it's not that great but I'm

00:43:36,000 --> 00:43:39,059
working on it we're getting there and

00:43:38,010 --> 00:43:42,599
hopefully I'll get some feedback from

00:43:39,059 --> 00:43:45,630
some other people so anyway I felt this

00:43:42,599 --> 00:43:48,089
one we went down a road we wrote very

00:43:45,630 --> 00:43:51,000
little code but I felt like this was

00:43:48,089 --> 00:43:52,920
maybe more polish we can again put that

00:43:51,000 --> 00:43:54,150
syntactic sugar on there but we're

00:43:52,920 --> 00:43:55,740
coming instead of going from the top

00:43:54,150 --> 00:43:58,859
down we're coming from the bottom up and

00:43:55,740 --> 00:44:01,079
and this was a thank you this was sort

00:43:58,859 --> 00:44:04,380
of an important development in this so

00:44:01,079 --> 00:44:05,880
we're a zipper against to today so I was

00:44:04,380 --> 00:44:08,369
actually hoping to have a prototype

00:44:05,880 --> 00:44:11,400
fully together and out on Sipan before

00:44:08,369 --> 00:44:13,260
this conference but various things too

00:44:11,400 --> 00:44:15,809
much craziness in life and other stuff

00:44:13,260 --> 00:44:18,119
like that prevented that but this is my

00:44:15,809 --> 00:44:20,549
goal whoa what happened there oh I

00:44:18,119 --> 00:44:21,930
stepped on the court apparently if you

00:44:20,549 --> 00:44:23,369
step on cords it prevents the

00:44:21,930 --> 00:44:27,520
electricity from flowing I didn't know

00:44:23,369 --> 00:44:29,560
garden hose theory I'll stay away

00:44:27,520 --> 00:44:34,270
yeah it's a series of tubes and I just

00:44:29,560 --> 00:44:35,380
squished one so anyway the next step is

00:44:34,270 --> 00:44:37,570
actually to go back to that original

00:44:35,380 --> 00:44:39,010
repository name because i don't know

00:44:37,570 --> 00:44:41,770
maybe maybe Rick would accept a

00:44:39,010 --> 00:44:43,420
seriously what the as the the

00:44:41,770 --> 00:44:44,650
actual name but I'm going to go back to

00:44:43,420 --> 00:44:46,690
that that name and I'm going to be

00:44:44,650 --> 00:44:48,610
working with with with some of the other

00:44:46,690 --> 00:44:50,740
people I feel like now we have a design

00:44:48,610 --> 00:44:53,110
we can run with it and so we're going to

00:44:50,740 --> 00:44:55,590
start working on it I'm going to be

00:44:53,110 --> 00:44:59,050
releasing in the original repository

00:44:55,590 --> 00:45:01,540
some of these the capi and things like

00:44:59,050 --> 00:45:03,460
that so this is sort of one of my please

00:45:01,540 --> 00:45:05,890
come and help because I'm a lousy see

00:45:03,460 --> 00:45:07,420
programmer um so I am looking for

00:45:05,890 --> 00:45:10,030
feedback on some of that when it gets

00:45:07,420 --> 00:45:13,120
out there but i think really at this

00:45:10,030 --> 00:45:17,080
point after you know I Larry I feel your

00:45:13,120 --> 00:45:19,780
pain in a very small way it took you 15

00:45:17,080 --> 00:45:22,180
years it took taking me like four so far

00:45:19,780 --> 00:45:25,120
too kind of realize some of this stuff

00:45:22,180 --> 00:45:26,680
but language design is hard it's very

00:45:25,120 --> 00:45:28,840
hard and especially doing language

00:45:26,680 --> 00:45:32,080
design with an existing language and

00:45:28,840 --> 00:45:33,820
trying to be gentle about it so anyway

00:45:32,080 --> 00:45:38,290
I've got a little bit of time so in

00:45:33,820 --> 00:45:39,700
conclusion respect the legacy this is

00:45:38,290 --> 00:45:42,490
basically it took me a long time to

00:45:39,700 --> 00:45:46,450
really get around to this but you know

00:45:42,490 --> 00:45:49,690
these the this is legacy is the remnants

00:45:46,450 --> 00:45:52,870
of solve problems you may not like the

00:45:49,690 --> 00:45:55,000
solution you may be completely revolted

00:45:52,870 --> 00:45:56,590
by the solution but it's there and it's

00:45:55,000 --> 00:45:57,970
working and especially if it's making

00:45:56,590 --> 00:45:59,890
money that's what it a lot of it comes

00:45:57,970 --> 00:46:02,260
back to its making money it's useful to

00:45:59,890 --> 00:46:05,040
other people it took me a while to

00:46:02,260 --> 00:46:07,900
really really get this and grasp this

00:46:05,040 --> 00:46:09,550
but but I think this is an important in

00:46:07,900 --> 00:46:12,240
lesson for anybody who ever wants to add

00:46:09,550 --> 00:46:15,970
a feature to pro 5 respect the legacy

00:46:12,240 --> 00:46:18,400
dig into that code it's it's horrible

00:46:15,970 --> 00:46:20,680
sometimes but but it makes sense and you

00:46:18,400 --> 00:46:23,170
see a lot of good stuff in there I also

00:46:20,680 --> 00:46:24,760
want to make one point which I didn't

00:46:23,170 --> 00:46:27,040
realize until later if you think about

00:46:24,760 --> 00:46:30,700
it most of the oil conventions that were

00:46:27,040 --> 00:46:32,350
used to came from Java that's that's

00:46:30,700 --> 00:46:33,880
been one of the more popular Oh taught

00:46:32,350 --> 00:46:35,620
languages stuff like that it didn't

00:46:33,880 --> 00:46:38,680
exist when Larry design the old features

00:46:35,620 --> 00:46:40,720
in pro 5 so you know as much as I was

00:46:38,680 --> 00:46:41,770
sort of going for some of that syntax

00:46:40,720 --> 00:46:45,520
and some of those feet

00:46:41,770 --> 00:46:47,950
I didn't I forgot that that we came

00:46:45,520 --> 00:46:51,100
before that and so I had again respect

00:46:47,950 --> 00:46:52,750
that legacy and see some stuff i also

00:46:51,100 --> 00:46:56,230
wanted this is a lot of conclusion stuff

00:46:52,750 --> 00:46:59,890
sorry um uh Rick and I Rick Rick and I

00:46:56,230 --> 00:47:04,030
were at FA's dam and add a 95 how many

00:46:59,890 --> 00:47:06,250
know a de 95 okay or a de in general so

00:47:04,030 --> 00:47:08,140
a de I for whatever reason at some point

00:47:06,250 --> 00:47:09,580
after I taught myself JavaScript when I

00:47:08,140 --> 00:47:10,480
was first doing this stuff and I thought

00:47:09,580 --> 00:47:12,310
well I want to learn another language

00:47:10,480 --> 00:47:14,710
and I saw an add a book and I started

00:47:12,310 --> 00:47:16,300
reading it I really had no intent of

00:47:14,710 --> 00:47:18,310
doing missile guidance systems which

00:47:16,300 --> 00:47:21,820
airplane systems which i think is all a

00:47:18,310 --> 00:47:23,050
day's used for but uh it was a language

00:47:21,820 --> 00:47:25,810
i've always liked so Rick and I went

00:47:23,050 --> 00:47:27,250
down and they made a point one of the

00:47:25,810 --> 00:47:29,800
one of the guys when he was going over

00:47:27,250 --> 00:47:31,630
the intro to add a talk that a de the

00:47:29,800 --> 00:47:34,000
object orientation in a day is a design

00:47:31,630 --> 00:47:35,590
pattern so in a de you have things

00:47:34,000 --> 00:47:38,770
called tag records which are the

00:47:35,590 --> 00:47:42,430
instance types very similar to blessed

00:47:38,770 --> 00:47:44,230
hash refs you have packages which

00:47:42,430 --> 00:47:45,940
contain all the methods and they

00:47:44,230 --> 00:47:48,790
actually don't have the instance dot

00:47:45,940 --> 00:47:50,950
method calling syntax and add a 95 it's

00:47:48,790 --> 00:47:52,600
fully qualified package name and your

00:47:50,950 --> 00:47:55,590
instance is the first variable in it

00:47:52,600 --> 00:47:58,000
sound familiar very much like profiles

00:47:55,590 --> 00:48:00,160
but it was interesting the idea of it

00:47:58,000 --> 00:48:01,930
being a design pattern it wasn't

00:48:00,160 --> 00:48:03,580
necessarily than a language feature it

00:48:01,930 --> 00:48:05,820
was a design pattern that all other out

00:48:03,580 --> 00:48:09,250
of programmers understood and followed

00:48:05,820 --> 00:48:10,840
so they almost didn't have to add object

00:48:09,250 --> 00:48:12,760
orientation into the language they did

00:48:10,840 --> 00:48:15,550
eventually with some add some sugar into

00:48:12,760 --> 00:48:18,190
it I think it's out of 2005 added some

00:48:15,550 --> 00:48:20,350
sugar to it but they waited and you know

00:48:18,190 --> 00:48:22,270
obviously the risk with adding something

00:48:20,350 --> 00:48:24,400
to a de is even more because you know

00:48:22,270 --> 00:48:26,650
all of us when we fly home the plane

00:48:24,400 --> 00:48:29,620
you're in probably runs a de okay you

00:48:26,650 --> 00:48:31,480
you don't want risky stuff in there so

00:48:29,620 --> 00:48:32,860
anyway those just another point and then

00:48:31,480 --> 00:48:36,850
the final point that I want to make in

00:48:32,860 --> 00:48:38,410
conclusion is Larry said at one point

00:48:36,850 --> 00:48:40,390
what makes a good pearl programmer

00:48:38,410 --> 00:48:42,490
capital pearl programmer capital P

00:48:40,390 --> 00:48:44,890
program laziness and patience Hooper's I

00:48:42,490 --> 00:48:47,200
would like to add another things to that

00:48:44,890 --> 00:48:49,260
which is what makes a good lowercase

00:48:47,200 --> 00:48:52,820
pearl programmer meaning a core hacker

00:48:49,260 --> 00:48:56,540
do the hard work patience

00:48:52,820 --> 00:48:58,340
cannot stress enough when you start

00:48:56,540 --> 00:48:59,930
digging through those those see files in

00:48:58,340 --> 00:49:02,930
the pro core you have to have a lot of

00:48:59,930 --> 00:49:06,020
patience and humility because it is a

00:49:02,930 --> 00:49:10,130
the legacy of the solve problems in the

00:49:06,020 --> 00:49:12,140
pearl core is huge and long and you have

00:49:10,130 --> 00:49:14,030
to have the humility not to look at that

00:49:12,140 --> 00:49:16,070
and think what are they doing there

00:49:14,030 --> 00:49:18,050
that's crazy like it's all there for

00:49:16,070 --> 00:49:19,960
good reason it may be real it'll weird

00:49:18,050 --> 00:49:22,640
but it's all there for good reason so

00:49:19,960 --> 00:49:24,050
anyway with that that's the end and I

00:49:22,640 --> 00:49:25,880
think I have a little bit of time for

00:49:24,050 --> 00:49:27,350
questions if people want to oh yeah I

00:49:25,880 --> 00:49:28,610
got five minutes for questions so people

00:49:27,350 --> 00:49:34,250
want to or we can just leave it at that

00:49:28,610 --> 00:49:37,000
and open they're no good okay Oh Larry

00:49:34,250 --> 00:49:37,000
has a question yes

00:49:42,080 --> 00:49:54,450
how oh wow I didn't know that iiiii

00:49:50,250 --> 00:49:57,920
reached right for be you you you can go

00:49:54,450 --> 00:49:57,920
right to the B module and get it there

00:50:10,610 --> 00:50:25,580
ok cool i didn't even occur to me that

00:50:13,590 --> 00:50:29,210
that might be there so cool yeah mm-hmm

00:50:25,580 --> 00:50:29,210
interesting ok

00:50:51,060 --> 00:50:59,440
right yeah actually a GV fetch method is

00:50:56,500 --> 00:51:02,380
my current personal hell right now which

00:50:59,440 --> 00:51:04,660
also has a lot of crazy stuff like that

00:51:02,380 --> 00:51:10,690
where it's just like why the hell but

00:51:04,660 --> 00:51:14,440
anyway another question uh I don't know

00:51:10,690 --> 00:51:16,390
I actually I honestly don't get a lot of

00:51:14,440 --> 00:51:20,760
time to spend on IRC I used to I used to

00:51:16,390 --> 00:51:23,830
work from home so I was on IRC all day

00:51:20,760 --> 00:51:25,570
you have to do all sorts of crazy sshe

00:51:23,830 --> 00:51:27,520
and stuff like that to get the IRC on

00:51:25,570 --> 00:51:30,010
the booking network and I'm not a system

00:51:27,520 --> 00:51:31,600
in or a network guy so and yeah I'm it'd

00:51:30,010 --> 00:51:33,040
be too distracting anyway so I'm not

00:51:31,600 --> 00:51:35,200
very off on on it very often

00:51:33,040 --> 00:51:43,330
unfortunately maybe in the evenings but

00:51:35,200 --> 00:51:46,150
not very much uh github issues are

00:51:43,330 --> 00:51:48,850
probably better because they allow us to

00:51:46,150 --> 00:51:50,470
sort of archive the discussion so

00:51:48,850 --> 00:51:52,210
putting stuff in there and like I said

00:51:50,470 --> 00:51:54,640
I'm going to be reviving that first

00:51:52,210 --> 00:51:56,680
repository with with a totally new

00:51:54,640 --> 00:51:59,500
branch and that's really where I want to

00:51:56,680 --> 00:52:02,290
focus the discussion so and eventually

00:51:59,500 --> 00:52:03,460
it'll get 2 p-5 p as well but i want to

00:52:02,290 --> 00:52:05,770
make sure i have all my ducks in a row

00:52:03,460 --> 00:52:07,240
before they basically juan moreover all

00:52:05,770 --> 00:52:13,930
of them and turn them into a bloody mess

00:52:07,240 --> 00:52:17,880
um but anyway sorry anything else no

00:52:13,930 --> 00:52:17,880
good okay cool thank you

00:52:20,250 --> 00:52:22,310

YouTube URL: https://www.youtube.com/watch?v=sJC725e8ysM


