Title: Dave Rolsky   Date, Times, Perl, and You
Publication date: 2013-08-20
Playlist: YAPC::NA 2012
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:08,970
I can see her no all right time to start

00:00:05,299 --> 00:00:10,740
so my phone says it's 1330 and since

00:00:08,970 --> 00:00:12,690
this is a presentation about dates and

00:00:10,740 --> 00:00:16,410
times I think I should start writing on

00:00:12,690 --> 00:00:19,350
time so hi there my name is dave r all

00:00:16,410 --> 00:00:21,600
ski and on IRC my neck is aught arc and

00:00:19,350 --> 00:00:24,510
you might have seen me there and it's

00:00:21,600 --> 00:00:27,150
june 15 2012 i think and i think we wrap

00:00:24,510 --> 00:00:29,779
see North America 2012 as well so this

00:00:27,150 --> 00:00:31,830
is data dates times purlin you but

00:00:29,779 --> 00:00:33,480
Steven over there I was having dinner

00:00:31,830 --> 00:00:34,739
with him he had a much better idea for

00:00:33,480 --> 00:00:38,790
the talk title how to get a date with

00:00:34,739 --> 00:00:42,570
pearl so we'll call it that too I'm all

00:00:38,790 --> 00:00:44,070
sick so I'll do my best not to you know

00:00:42,570 --> 00:00:45,780
cough green phlegm on you but we'll see

00:00:44,070 --> 00:00:49,350
what happens you guys in the front row

00:00:45,780 --> 00:00:50,820
you're at risk so the first thing we

00:00:49,350 --> 00:00:52,410
need to know about dates and times it's

00:00:50,820 --> 00:00:54,300
just the whole the whole subject is

00:00:52,410 --> 00:00:56,489
completely nuts because it's this very

00:00:54,300 --> 00:00:58,710
artificial kind of human created thing

00:00:56,489 --> 00:01:01,079
and humans are stupid and nuts and so we

00:00:58,710 --> 00:01:02,090
make things that are crazy so I'm going

00:01:01,079 --> 00:01:04,320
to talk about some of these issues

00:01:02,090 --> 00:01:07,710
calendars time zones daylight saving

00:01:04,320 --> 00:01:09,960
time my personal nemesis well there I've

00:01:07,710 --> 00:01:12,510
to nemec's here daylight saving time and

00:01:09,960 --> 00:01:17,970
leap seconds with drawer both just a

00:01:12,510 --> 00:01:20,040
horrible pain in my ass so if there's

00:01:17,970 --> 00:01:22,380
nothing else you take away from this

00:01:20,040 --> 00:01:25,110
talk this is the one thing I'd like you

00:01:22,380 --> 00:01:26,670
to take away from it because I've seen

00:01:25,110 --> 00:01:28,320
so many people try to do their own thing

00:01:26,670 --> 00:01:30,390
where they're like I'll just get the

00:01:28,320 --> 00:01:33,960
epic and then I'll add blah blah blah

00:01:30,390 --> 00:01:35,610
and it doesn't work out very well

00:01:33,960 --> 00:01:37,170
because there's just there's a lot of

00:01:35,610 --> 00:01:40,320
issues and I'm going to be covering some

00:01:37,170 --> 00:01:42,720
of those that make it so that naive

00:01:40,320 --> 00:01:44,640
approaches almost always fail at some

00:01:42,720 --> 00:01:47,700
point so it works for a while and then

00:01:44,640 --> 00:01:51,750
the worst part is it like works for six

00:01:47,700 --> 00:01:53,850
months and then februari 29th of 2012 oh

00:01:51,750 --> 00:01:56,130
 I didn't account for that your code

00:01:53,850 --> 00:01:58,140
goes down somebody's saying this

00:01:56,130 --> 00:02:02,210
happened to Microsoft Germany like they

00:01:58,140 --> 00:02:05,670
had a bug where it added a year like it

00:02:02,210 --> 00:02:08,429
incrementing the year of a date and for

00:02:05,670 --> 00:02:10,140
like the certificates expiration and on

00:02:08,429 --> 00:02:12,550
februari 29th it just stopped working

00:02:10,140 --> 00:02:15,100
all day because there was no februari 29

00:02:12,550 --> 00:02:16,690
2013 so yeah there's a lot of things

00:02:15,100 --> 00:02:19,720
that can go wrong and the date-time

00:02:16,690 --> 00:02:22,150
module hopefully addresses a lot of

00:02:19,720 --> 00:02:23,710
those for you so this is what this is my

00:02:22,150 --> 00:02:30,070
advice now you cannot leave the talks

00:02:23,710 --> 00:02:32,260
basically done so yeah so I'm going to

00:02:30,070 --> 00:02:33,970
talk about both kind of concepts and try

00:02:32,260 --> 00:02:35,620
to just give you an understanding of

00:02:33,970 --> 00:02:37,420
kind of general date and time concepts

00:02:35,620 --> 00:02:39,670
and I'm also going to interleave that

00:02:37,420 --> 00:02:41,230
with code so the first thing we'll talk

00:02:39,670 --> 00:02:43,960
about this is the gregorian calendar

00:02:41,230 --> 00:02:46,840
that's the calendar we all use like day

00:02:43,960 --> 00:02:50,710
to day right now so it's based on the

00:02:46,840 --> 00:02:52,120
earth's revolution around the Sun and so

00:02:50,710 --> 00:02:54,190
that's you know the time it takes for

00:02:52,120 --> 00:02:55,690
the earth to get from one point around

00:02:54,190 --> 00:02:57,670
the Sun go all the way around and come

00:02:55,690 --> 00:02:59,050
back to the same point there are other

00:02:57,670 --> 00:03:01,840
calendars they've been used historically

00:02:59,050 --> 00:03:04,450
that will be based on the moon's

00:03:01,840 --> 00:03:06,490
revolution around the earth or some

00:03:04,450 --> 00:03:08,320
calendars will combine both of them if

00:03:06,490 --> 00:03:10,300
you've heard of for example how the

00:03:08,320 --> 00:03:12,640
Hebrew and Chinese calendars will have

00:03:10,300 --> 00:03:15,190
leap months that's because they're based

00:03:12,640 --> 00:03:17,290
on the moon and the moon you need to add

00:03:15,190 --> 00:03:21,070
extra months because some some years

00:03:17,290 --> 00:03:23,290
effectively have 13 lunar cycles so

00:03:21,070 --> 00:03:24,850
anyway there are other calendars but

00:03:23,290 --> 00:03:26,739
this is what basically everybody in the

00:03:24,850 --> 00:03:28,120
world uses most of the time the other

00:03:26,739 --> 00:03:29,650
ones come up for example if you want to

00:03:28,120 --> 00:03:31,390
know when chinese new year is you need

00:03:29,650 --> 00:03:33,670
to use the Chinese calendar if you want

00:03:31,390 --> 00:03:35,260
to know when ghost month is which I'm

00:03:33,670 --> 00:03:36,640
sure you all want to know like because

00:03:35,260 --> 00:03:39,190
you have to burn a bunch of paper money

00:03:36,640 --> 00:03:41,170
during costs month very important and

00:03:39,190 --> 00:03:43,090
for example Hebrew the Hebrew calendar

00:03:41,170 --> 00:03:44,680
is used for Jewish holidays there's an

00:03:43,090 --> 00:03:45,970
Islamic calendar used for Islamic

00:03:44,680 --> 00:03:47,620
holidays and I'm sure there's many

00:03:45,970 --> 00:03:49,000
others that I'm forgetting the Mayan

00:03:47,620 --> 00:03:51,459
calendar is used to figure out when the

00:03:49,000 --> 00:03:55,120
world is going to end which is probably

00:03:51,459 --> 00:03:57,250
this year so here's the basic so we in

00:03:55,120 --> 00:04:01,600
most years in the gregorian calendar we

00:03:57,250 --> 00:04:03,610
have 365 days leap years we have 366 the

00:04:01,600 --> 00:04:08,709
beginning of the calendar it's epic is

00:04:03,610 --> 00:04:11,230
year one january first okay there is a

00:04:08,709 --> 00:04:13,150
year 0 if you depending on how you read

00:04:11,230 --> 00:04:15,940
it or sometimes it gets written as 1 BC

00:04:13,150 --> 00:04:18,370
One BCE there's lots of versions of this

00:04:15,940 --> 00:04:21,250
we may need to tweak the leap your

00:04:18,370 --> 00:04:22,660
algorithm around year 3000 because it

00:04:21,250 --> 00:04:24,490
turns out that the earth is actually

00:04:22,660 --> 00:04:25,210
slowing down its revolution around the

00:04:24,490 --> 00:04:27,610
Sun so that

00:04:25,210 --> 00:04:29,800
you might want to keep an eye on in your

00:04:27,610 --> 00:04:31,210
code you know if you think your coats

00:04:29,800 --> 00:04:33,970
going to be running in about a thousand

00:04:31,210 --> 00:04:35,620
years from now maybe just don't like you

00:04:33,970 --> 00:04:40,720
know put in some hook for somebody to

00:04:35,620 --> 00:04:45,310
change that yeah exactly rule six will

00:04:40,720 --> 00:04:47,259
take care of this yo so yeah right so

00:04:45,310 --> 00:04:53,080
we're going to have a y 3k ish bug I

00:04:47,259 --> 00:04:56,800
think is what I'm hearing yeah there you

00:04:53,080 --> 00:04:59,199
go so so here's the date-time module and

00:04:56,800 --> 00:05:01,720
a very simple usage so you used a time

00:04:59,199 --> 00:05:04,090
you make a new daytime bypassing the

00:05:01,720 --> 00:05:06,009
components to it so you can pass your

00:05:04,090 --> 00:05:07,479
month day you can also pass hour minute

00:05:06,009 --> 00:05:10,090
second but i'm starting with just dates

00:05:07,479 --> 00:05:13,240
and then you can ask it for all sorts of

00:05:10,090 --> 00:05:14,650
information so you can ask it hmm you

00:05:13,240 --> 00:05:17,650
can ask it for the date and it prints

00:05:14,650 --> 00:05:19,960
out this format month named day name you

00:05:17,650 --> 00:05:22,930
can get numbers out of it you can get it

00:05:19,960 --> 00:05:24,759
to do formats like stir f time formats

00:05:22,930 --> 00:05:26,919
and also there's a much better

00:05:24,759 --> 00:05:29,860
formatting system it supports called CLD

00:05:26,919 --> 00:05:31,780
are the common language data repository

00:05:29,860 --> 00:05:37,000
format which is just gives you access to

00:05:31,780 --> 00:05:39,940
a lot more name information / locale and

00:05:37,000 --> 00:05:44,020
so speaking of locales it also supports

00:05:39,940 --> 00:05:45,969
localization it's based off the CLD our

00:05:44,020 --> 00:05:48,759
data although it's kind of out of date

00:05:45,969 --> 00:05:50,830
because i need to i need to basically

00:05:48,759 --> 00:05:53,919
redo datetime locale and i have not

00:05:50,830 --> 00:05:55,389
gotten around to it so if anybody you

00:05:53,919 --> 00:05:56,919
know wants to fund me for three months

00:05:55,389 --> 00:05:59,560
to work on that or something maybe i can

00:05:56,919 --> 00:06:01,479
take a sabbatical from a job anyway so

00:05:59,560 --> 00:06:03,430
you can pass this locale and it can be

00:06:01,479 --> 00:06:05,349
you know a language or language with

00:06:03,430 --> 00:06:07,810
country and it looks it up in the CL dr

00:06:05,349 --> 00:06:09,659
and finds the appropriate locale so now

00:06:07,810 --> 00:06:15,039
when we asked for the month name it says

00:06:09,659 --> 00:06:17,349
yeah that's my my french instead of june

00:06:15,039 --> 00:06:19,000
and it changes the day names and such

00:06:17,349 --> 00:06:21,400
and it also changes things like you can

00:06:19,000 --> 00:06:24,090
ask it about what's the first day of the

00:06:21,400 --> 00:06:28,479
week for example that changes by locale

00:06:24,090 --> 00:06:29,949
all sorts of stuff changes rather by

00:06:28,479 --> 00:06:31,810
feel free to ask questions of anything

00:06:29,949 --> 00:06:32,630
is unclear i may or may not answer them

00:06:31,810 --> 00:06:35,039
but you can

00:06:32,630 --> 00:06:37,650
and as I mentioned there are other

00:06:35,039 --> 00:06:40,259
calendars so we can use the daytime

00:06:37,650 --> 00:06:42,599
calendar Chinese module we make our date

00:06:40,259 --> 00:06:45,060
time object in the gregorian calendar

00:06:42,599 --> 00:06:47,910
then we can pass it to daytime calendar

00:06:45,060 --> 00:06:50,550
Chinese and ask it information okay so

00:06:47,910 --> 00:06:52,650
what's the Chinese calendar date for

00:06:50,550 --> 00:06:54,630
today we can ask it about the cycle and

00:06:52,650 --> 00:06:55,949
the zodiac animal and we can get

00:06:54,630 --> 00:06:57,990
information out of it actually in

00:06:55,949 --> 00:06:59,520
Chinese and this works for all the

00:06:57,990 --> 00:07:02,729
there's a whole bunch of calendar

00:06:59,520 --> 00:07:04,530
modules on Sipan but by the way d time

00:07:02,729 --> 00:07:06,930
calendar Chinese is not shipped with the

00:07:04,530 --> 00:07:08,970
core daytime dist or on Sipan there's

00:07:06,930 --> 00:07:10,860
many many calendars on Sipan so you can

00:07:08,970 --> 00:07:12,810
just download them you can also create

00:07:10,860 --> 00:07:15,930
the the alternate calendar object

00:07:12,810 --> 00:07:17,430
directly it has a constructor besides

00:07:15,930 --> 00:07:19,620
from object and you can go back and

00:07:17,430 --> 00:07:22,440
forth so we can also have a date time

00:07:19,620 --> 00:07:24,389
calendar Chinese and get the gregorian

00:07:22,440 --> 00:07:26,400
calendar date up from it so you can go

00:07:24,389 --> 00:07:28,199
back and forth which can be handy I mean

00:07:26,400 --> 00:07:29,639
Bose you won't need this but I don't

00:07:28,199 --> 00:07:30,960
know if any of you are doing like

00:07:29,639 --> 00:07:34,979
religious calendars or anything like

00:07:30,960 --> 00:07:38,310
that it's useful alright so let's also

00:07:34,979 --> 00:07:40,530
cover time so time is based on the day

00:07:38,310 --> 00:07:43,409
length which is one rotation of the

00:07:40,530 --> 00:07:46,139
earth around its axis you probably all

00:07:43,409 --> 00:07:50,789
knew this but if there are any dummies

00:07:46,139 --> 00:07:54,120
in the room so a day has 24 hours the

00:07:50,789 --> 00:07:58,830
first hour is the zero hour last hours

00:07:54,120 --> 00:08:02,699
23 day time does not let you pass 24 an

00:07:58,830 --> 00:08:05,789
hour 60 minutes most minutes most of the

00:08:02,699 --> 00:08:10,729
time or 60 seconds and that means a day

00:08:05,789 --> 00:08:14,490
is 86,400 seconds again most of the time

00:08:10,729 --> 00:08:15,960
all right atomic clocks or another I

00:08:14,490 --> 00:08:17,729
know I'm just switching topics but it's

00:08:15,960 --> 00:08:19,830
another thing you need to know about and

00:08:17,729 --> 00:08:21,870
it's kind of relevant to something that

00:08:19,830 --> 00:08:23,819
will come back later so with an atomic

00:08:21,870 --> 00:08:25,710
clock it's basically some physics ii

00:08:23,819 --> 00:08:27,120
crap that I don't understand as I was

00:08:25,710 --> 00:08:31,940
telling some people I was a music major

00:08:27,120 --> 00:08:31,940
so I don't know it's like atoms and

00:08:32,450 --> 00:08:37,560
so the with an atomic clock the length

00:08:35,339 --> 00:08:39,810
of a second never changes and this is as

00:08:37,560 --> 00:08:43,940
compared to the old system which was

00:08:39,810 --> 00:08:46,730
basically take the length of a day /

00:08:43,940 --> 00:08:48,530
you know the length of that day is

00:08:46,730 --> 00:08:50,720
changing because the earth is slowing

00:08:48,530 --> 00:08:54,710
down in its rotation as well as its

00:08:50,720 --> 00:08:57,200
revolution around the Sun so this this

00:08:54,710 --> 00:08:58,550
thai standard which is short for the

00:08:57,200 --> 00:09:00,880
french abbreviation and i won't

00:08:58,550 --> 00:09:03,770
brutalize you with any more of my french

00:09:00,880 --> 00:09:05,660
this is an international atomic time

00:09:03,770 --> 00:09:07,250
standard but it's not exactly what we

00:09:05,660 --> 00:09:12,440
use although what we use is based off

00:09:07,250 --> 00:09:14,530
this so that in it involves this thing

00:09:12,440 --> 00:09:16,610
leap seconds which I really really hate

00:09:14,530 --> 00:09:19,190
so as I mentioned the Earth's rotation

00:09:16,610 --> 00:09:21,500
is slowing down but the length of a

00:09:19,190 --> 00:09:22,850
second is not slowing down because we've

00:09:21,500 --> 00:09:24,650
tied it to the use of time at clocks

00:09:22,850 --> 00:09:25,940
which of course is good I mean I'm not

00:09:24,650 --> 00:09:27,800
complaining about the whole use of

00:09:25,940 --> 00:09:29,570
atomic clocks that's great because that

00:09:27,800 --> 00:09:31,820
makes sciency stuff much easier because

00:09:29,570 --> 00:09:33,440
scientists want the length of a second

00:09:31,820 --> 00:09:35,900
to never change if it gets you know

00:09:33,440 --> 00:09:38,420
slower and slower over time becomes

00:09:35,900 --> 00:09:40,010
harder to you know report a measurement

00:09:38,420 --> 00:09:42,290
like if you're reporting things in

00:09:40,010 --> 00:09:45,590
nanoseconds or whatever so that's

00:09:42,290 --> 00:09:47,120
important so it's slowing down so we

00:09:45,590 --> 00:09:49,340
need to resync midnight otherwise

00:09:47,120 --> 00:09:53,270
midnight kind of drifts away from the

00:09:49,340 --> 00:09:56,080
actual middle of the rotation so what

00:09:53,270 --> 00:09:58,400
happens is every once in a while the

00:09:56,080 --> 00:10:00,920
international earth rotation service is

00:09:58,400 --> 00:10:03,260
like hey guys let's have a leap second

00:10:00,920 --> 00:10:05,660
and then I go oh I have to update

00:10:03,260 --> 00:10:08,420
due time and upload a new release and

00:10:05,660 --> 00:10:10,040
generally this happens they give about

00:10:08,420 --> 00:10:12,410
six months notice they're just kind of

00:10:10,040 --> 00:10:14,510
paying attention now in theory the earth

00:10:12,410 --> 00:10:17,210
could rotate faster so the standard

00:10:14,510 --> 00:10:18,590
accounts for subtracting having a

00:10:17,210 --> 00:10:20,990
negative leap second that has never

00:10:18,590 --> 00:10:25,280
happened so I think right now we're at

00:10:20,990 --> 00:10:27,650
34 leap seconds since 1977 and there's

00:10:25,280 --> 00:10:30,320
going to be 10 set your counters it's

00:10:27,650 --> 00:10:34,400
gonna be really exciting on jun 30 at

00:10:30,320 --> 00:10:35,540
the end of this month 23 59 59 instead

00:10:34,400 --> 00:10:38,960
of going to the next day it's going to

00:10:35,540 --> 00:10:40,010
be 23 59 60 and that I mean think of all

00:10:38,960 --> 00:10:44,240
the things you could do with an extra

00:10:40,010 --> 00:10:45,740
second in the day yeah I mean I imagine

00:10:44,240 --> 00:10:46,970
I'll wake up the morning just feeling

00:10:45,740 --> 00:10:50,350
really refreshed she'll be the group

00:10:46,970 --> 00:10:52,700
next your second asleep best night ever

00:10:50,350 --> 00:10:54,400
so yeah so they're just kind of happened

00:10:52,700 --> 00:10:57,730
and there's no warning I

00:10:54,400 --> 00:10:59,410
because this is a it's not predictable

00:10:57,730 --> 00:11:00,610
essentially so that's why these they

00:10:59,410 --> 00:11:03,210
just get announced and there's been

00:11:00,610 --> 00:11:05,590
discussions about abolishing these and

00:11:03,210 --> 00:11:06,730
instead moving to leap minutes which

00:11:05,590 --> 00:11:08,290
would be awesome because they wouldn't

00:11:06,730 --> 00:11:11,590
even happen in my lifetime so I could

00:11:08,290 --> 00:11:13,540
just forget about it and there's even

00:11:11,590 --> 00:11:14,890
big discussion of Lee powers I don't

00:11:13,540 --> 00:11:16,780
know if any of that will happen I'm kind

00:11:14,890 --> 00:11:18,670
of havoc on my fingers crossed for the

00:11:16,780 --> 00:11:20,800
Holy minute thing and just you know I

00:11:18,670 --> 00:11:23,620
don't plan to have kids so really it's I

00:11:20,800 --> 00:11:24,940
don't care you know your your kids kids

00:11:23,620 --> 00:11:28,750
those if you have kids can deal with it

00:11:24,940 --> 00:11:30,910
and them that's what I say no I'm

00:11:28,750 --> 00:11:33,940
sure your kids are really adorable and

00:11:30,910 --> 00:11:39,400
so they're all sides yeah breeders

00:11:33,940 --> 00:11:41,650
anyway all right so so we have tie which

00:11:39,400 --> 00:11:44,440
is the atomic time standard we have leap

00:11:41,650 --> 00:11:47,410
seconds which are my nemesis and we put

00:11:44,440 --> 00:11:51,400
the two together and we have UTC which

00:11:47,410 --> 00:11:53,230
is i love i love this acronym because in

00:11:51,400 --> 00:11:56,590
english we have coordinated Universal

00:11:53,230 --> 00:11:58,480
Time allied more French and in French we

00:11:56,590 --> 00:12:01,840
have Tom's universal cordon a and

00:11:58,480 --> 00:12:04,540
apparently the the compromise was to use

00:12:01,840 --> 00:12:06,370
neither acronym so if you tease in which

00:12:04,540 --> 00:12:08,350
I just think is a hilarious example of

00:12:06,370 --> 00:12:10,270
kind of international diplomacy at work

00:12:08,350 --> 00:12:16,120
let's pick something that works for no

00:12:10,270 --> 00:12:17,920
one so you DC is we take Tai and then we

00:12:16,120 --> 00:12:21,370
add all the leap seconds we've had so

00:12:17,920 --> 00:12:23,110
far and that's the current time so like

00:12:21,370 --> 00:12:25,500
I said we've had 34 the leap second so

00:12:23,110 --> 00:12:28,000
far going to have another one the summer

00:12:25,500 --> 00:12:30,040
this is the first 13 years so I don't

00:12:28,000 --> 00:12:31,960
know when the next will happen this is

00:12:30,040 --> 00:12:35,140
this is the current world time standard

00:12:31,960 --> 00:12:37,210
this is what generally your clock is

00:12:35,140 --> 00:12:38,680
going to end up sink to and your it's

00:12:37,210 --> 00:12:41,410
certainly what your computer clock is

00:12:38,680 --> 00:12:43,150
synced to in probably most of you in

00:12:41,410 --> 00:12:44,380
your phones and probably most of you set

00:12:43,150 --> 00:12:46,300
the clocks in your house based on that

00:12:44,380 --> 00:12:48,430
so generally that's what you're using of

00:12:46,300 --> 00:12:49,870
course nothing's none of us have actual

00:12:48,430 --> 00:12:51,670
atomic clocks in our house so it's not

00:12:49,870 --> 00:12:56,200
like we're that precise that would be

00:12:51,670 --> 00:12:59,230
cool but I did buy the clock radio that

00:12:56,200 --> 00:13:02,560
was supposed to sync with the with some

00:12:59,230 --> 00:13:04,900
broadcast signal of atomic time and it

00:13:02,560 --> 00:13:06,430
just doesn't work I was every time I

00:13:04,900 --> 00:13:06,850
sink it comes up with some random time

00:13:06,430 --> 00:13:08,649
so

00:13:06,850 --> 00:13:10,089
I don't know apparently we haven't

00:13:08,649 --> 00:13:13,060
mastered this whole radio broadcast

00:13:10,089 --> 00:13:16,449
thing okay so right current world

00:13:13,060 --> 00:13:18,279
standard UTC is based on time in

00:13:16,449 --> 00:13:20,500
Greenwich England and then all the other

00:13:18,279 --> 00:13:22,930
time zones in the world are basically

00:13:20,500 --> 00:13:24,910
described as an offset from UTC so we

00:13:22,930 --> 00:13:27,940
can say it's five hours forward you know

00:13:24,910 --> 00:13:30,100
you take UTC add five hours or take UTC

00:13:27,940 --> 00:13:31,990
subtract 12 hours there are time zones

00:13:30,100 --> 00:13:36,970
that are like 12 and a half hours stuff

00:13:31,990 --> 00:13:38,860
like that so this is my warning about

00:13:36,970 --> 00:13:41,199
time zones is there just like the

00:13:38,860 --> 00:13:43,360
stupidest thing ever because politicians

00:13:41,199 --> 00:13:45,519
are involved and as we've already seen

00:13:43,360 --> 00:13:47,290
politicians can't even come up with an

00:13:45,519 --> 00:13:49,329
acronym that works so anything more

00:13:47,290 --> 00:13:54,970
complicated like a time zone we're just

00:13:49,329 --> 00:13:57,970
doomed it's just disaster so they change

00:13:54,970 --> 00:14:00,250
all the time and often for not very good

00:13:57,970 --> 00:14:02,860
reasons so the last time the u.s. time

00:14:00,250 --> 00:14:05,440
zone system was changed our glorious

00:14:02,860 --> 00:14:08,380
leader long may he reign hile george

00:14:05,440 --> 00:14:10,209
bush was in office and his reasoning was

00:14:08,380 --> 00:14:12,819
that this was going to save energy of

00:14:10,209 --> 00:14:14,290
course it doesn't do it just means

00:14:12,819 --> 00:14:16,389
that a bunch of programmers have to

00:14:14,290 --> 00:14:18,339
update the Earth's really sis admin's

00:14:16,389 --> 00:14:20,380
have to update their their time zone

00:14:18,339 --> 00:14:22,360
database so really it just wastes a lot

00:14:20,380 --> 00:14:24,130
of time and probably cost money because

00:14:22,360 --> 00:14:25,449
now you know all these system mins

00:14:24,130 --> 00:14:27,370
around the world are going out crap I

00:14:25,449 --> 00:14:30,250
have to make sure this is updated or the

00:14:27,370 --> 00:14:31,810
system is going to be screwed up so as

00:14:30,250 --> 00:14:33,670
far as i can tell achieve nothing but

00:14:31,810 --> 00:14:36,670
that's pretty much what politics is for

00:14:33,670 --> 00:14:38,740
so they change all the time I have seen

00:14:36,670 --> 00:14:41,079
examples where countries will introduce

00:14:38,740 --> 00:14:44,310
time zone changes that take effect like

00:14:41,079 --> 00:14:47,170
the day or the week after their voted in

00:14:44,310 --> 00:14:49,240
it's a real nightmare then this happened

00:14:47,170 --> 00:14:51,370
i think in Argentina as Brian Frazer

00:14:49,240 --> 00:14:53,649
here I know there's an Argentine program

00:14:51,370 --> 00:14:55,899
here well your government stupid Brian

00:14:53,649 --> 00:14:57,370
really really freaking stupid at least

00:14:55,899 --> 00:15:00,910
in the u.s. we had a few months notice

00:14:57,370 --> 00:15:04,000
so yeah this happens often at one point

00:15:00,910 --> 00:15:07,000
I think it was Israel was like we should

00:15:04,000 --> 00:15:09,459
make the time zones sync to Shabbat and

00:15:07,000 --> 00:15:11,560
the end of day Friday which is just

00:15:09,459 --> 00:15:14,170
being even bigger nightmare and in fact

00:15:11,560 --> 00:15:17,949
in Saudi Arabia the time zones match up

00:15:14,170 --> 00:15:19,240
with the Islamic calendar it's so

00:15:17,949 --> 00:15:22,430
horrible

00:15:19,240 --> 00:15:24,320
so we have this standard that we use or

00:15:22,430 --> 00:15:28,100
most of us use it's called the Olson

00:15:24,320 --> 00:15:30,020
times of database it's you might see it

00:15:28,100 --> 00:15:31,400
on your system and user shares own info

00:15:30,020 --> 00:15:33,980
and some systems I think there is

00:15:31,400 --> 00:15:35,720
actually the name Olson in the path it's

00:15:33,980 --> 00:15:38,600
called Olson because the guy who started

00:15:35,720 --> 00:15:40,340
this project was Arthur David Olson who

00:15:38,600 --> 00:15:41,810
is now retired from the project after

00:15:40,340 --> 00:15:43,730
working on it for like 30 years and I

00:15:41,810 --> 00:15:46,130
think we all owe him a big debt because

00:15:43,730 --> 00:15:49,760
you talk I mean a lot of free software

00:15:46,130 --> 00:15:51,470
work is really really thankless and this

00:15:49,760 --> 00:15:52,910
is just like the ultimate thankless work

00:15:51,470 --> 00:15:55,640
is dealing with all these stupid

00:15:52,910 --> 00:15:57,770
political changes and he did tons of

00:15:55,640 --> 00:15:59,720
great research on the history of time

00:15:57,770 --> 00:16:01,790
zone changes I'm not just him lots of

00:15:59,720 --> 00:16:04,580
people contributed but really I think

00:16:01,790 --> 00:16:06,200
most of you probably have no idea where

00:16:04,580 --> 00:16:08,510
this stuff comes from and it was it's

00:16:06,200 --> 00:16:10,700
actually this dude who started this

00:16:08,510 --> 00:16:12,560
project and it's you know kind of spread

00:16:10,700 --> 00:16:14,540
to every computer in the world except of

00:16:12,560 --> 00:16:15,380
course Microsoft they just have to do

00:16:14,540 --> 00:16:17,030
their own thing because they're

00:16:15,380 --> 00:16:19,220
Microsoft they're like oh there's a

00:16:17,030 --> 00:16:21,620
great standard open source of data with

00:16:19,220 --> 00:16:23,600
all the time zones now why would we use

00:16:21,620 --> 00:16:25,400
that let's make our own up so I

00:16:23,600 --> 00:16:28,220
don't know exactly what Microsoft uses

00:16:25,400 --> 00:16:29,870
they use different names I somebody

00:16:28,220 --> 00:16:32,170
who's a Windows user has contributed

00:16:29,870 --> 00:16:34,400
code to support that for the daytime

00:16:32,170 --> 00:16:37,040
module and I'm really appreciated of

00:16:34,400 --> 00:16:42,680
that but at the same time I just have no

00:16:37,040 --> 00:16:45,170
idea why Microsoft does this so let's

00:16:42,680 --> 00:16:48,290
talk about time zones as I mentioned

00:16:45,170 --> 00:16:49,490
it's an offset from UTC typically it's

00:16:48,290 --> 00:16:51,320
just going to be hours and minutes I

00:16:49,490 --> 00:16:54,290
think in theory it could include seconds

00:16:51,320 --> 00:16:55,820
but for modern time zones nobody does

00:16:54,290 --> 00:17:02,560
that if you look at historical time

00:16:55,820 --> 00:17:04,600
zones they do do that yeah so

00:17:02,560 --> 00:17:09,160
way back in the day it was just based on

00:17:04,600 --> 00:17:11,020
the local position of the Sun at noon so

00:17:09,160 --> 00:17:14,949
here in Madison we're currently at minus

00:17:11,020 --> 00:17:16,660
05 colon zero zero so that says subtract

00:17:14,949 --> 00:17:18,310
five hours and 0 minutes from the

00:17:16,660 --> 00:17:21,760
current UTC time to get our current

00:17:18,310 --> 00:17:24,370
local time so time zones also have a

00:17:21,760 --> 00:17:27,430
name and these names come from the olsen

00:17:24,370 --> 00:17:30,910
database and typically the names are a

00:17:27,430 --> 00:17:33,880
continent or an ocean plus a major city

00:17:30,910 --> 00:17:36,340
and the city is generally the most

00:17:33,880 --> 00:17:39,010
populated city at the time the zone was

00:17:36,340 --> 00:17:41,170
created and sometimes that's changed and

00:17:39,010 --> 00:17:43,600
then people complain about it on the

00:17:41,170 --> 00:17:45,790
time zone list and and even this gets

00:17:43,600 --> 00:17:47,440
political of course because everything

00:17:45,790 --> 00:17:49,120
has to get political and people like

00:17:47,440 --> 00:17:51,190
well this city is bigger now you should

00:17:49,120 --> 00:17:52,540
change it no red like you know the times

00:17:51,190 --> 00:17:54,520
on database people were but like but

00:17:52,540 --> 00:17:58,300
every UNIX system in the world is using

00:17:54,520 --> 00:18:00,700
this other name anyway so the zone ring

00:17:58,300 --> 00:18:02,890
right now is called America / Chicago so

00:18:00,700 --> 00:18:05,740
America is the continent Chicago is the

00:18:02,890 --> 00:18:08,170
near the most populated city in the zone

00:18:05,740 --> 00:18:11,380
I think that's still true another one

00:18:08,170 --> 00:18:14,920
might be Asia Taipei there's a Shanghai

00:18:11,380 --> 00:18:16,870
blah blah blah Pacific Fiji so that's an

00:18:14,920 --> 00:18:18,910
example of one that's using an ocean

00:18:16,870 --> 00:18:20,920
name because not every city is on a

00:18:18,910 --> 00:18:23,260
continent and then there are some

00:18:20,920 --> 00:18:24,790
three-part names where these basically a

00:18:23,260 --> 00:18:26,710
three-part name is a sign that the

00:18:24,790 --> 00:18:30,130
country is just decided to really

00:18:26,710 --> 00:18:33,160
things up so you get America Argentina

00:18:30,130 --> 00:18:35,260
Argentina has like eight or nine of its

00:18:33,160 --> 00:18:36,640
own time zones it's just like one

00:18:35,260 --> 00:18:39,280
country why is it need so many time

00:18:36,640 --> 00:18:41,350
zones another actually the US has its

00:18:39,280 --> 00:18:43,390
own because we have America Indiana and

00:18:41,350 --> 00:18:47,230
then like five time zones and then I

00:18:43,390 --> 00:18:49,720
think it's a Arizona has its own little

00:18:47,230 --> 00:18:54,270
mess and so you know it's not just

00:18:49,720 --> 00:18:54,270
Argentina the whole world has problems

00:18:55,080 --> 00:19:01,330
so what these what these names zones are

00:18:58,120 --> 00:19:02,980
is just a collection of rules in it's a

00:19:01,330 --> 00:19:04,960
rule that kind of defines all the

00:19:02,980 --> 00:19:06,850
historical changes and it also defines

00:19:04,960 --> 00:19:09,390
the future changes and the changes are

00:19:06,850 --> 00:19:11,980
are the daylight saving time changes

00:19:09,390 --> 00:19:14,510
these rules also define short names like

00:19:11,980 --> 00:19:16,850
CDT

00:19:14,510 --> 00:19:18,980
so the rule might be something like I

00:19:16,850 --> 00:19:20,480
can't even remote this is the funny

00:19:18,980 --> 00:19:22,310
thing so I've worked on this stuff for

00:19:20,480 --> 00:19:24,290
years and years and I always been

00:19:22,310 --> 00:19:25,940
surprised when when our time our

00:19:24,290 --> 00:19:28,400
daylight saving time change happens I

00:19:25,940 --> 00:19:31,460
look oh really if only there was

00:19:28,400 --> 00:19:32,870
some software that would tell me this so

00:19:31,460 --> 00:19:34,820
I think our last change with sometime in

00:19:32,870 --> 00:19:36,980
March and so that the database something

00:19:34,820 --> 00:19:39,320
says something like every march on the

00:19:36,980 --> 00:19:41,240
first sunday in march add one you know

00:19:39,320 --> 00:19:43,640
add one hour and then every november on

00:19:41,240 --> 00:19:45,890
the second sunday in november subtract

00:19:43,640 --> 00:19:49,100
one hour however it works spring forward

00:19:45,890 --> 00:19:50,390
fall back yeah so that's what the rules

00:19:49,100 --> 00:19:51,980
are and it also lists all the historical

00:19:50,390 --> 00:19:54,890
changes there's been a lot of historical

00:19:51,980 --> 00:19:57,170
changes throughout the world the u.s.

00:19:54,890 --> 00:19:59,150
used to for example during world war two

00:19:57,170 --> 00:20:01,580
we had like war time where we stopped

00:19:59,150 --> 00:20:03,530
using DST and then when it was over we

00:20:01,580 --> 00:20:05,200
briefly had peacetime and then it just

00:20:03,530 --> 00:20:07,490
went back to standard in daylight time

00:20:05,200 --> 00:20:08,780
so yeah there's a lot of historical

00:20:07,490 --> 00:20:10,790
stuff it's actually kind of interesting

00:20:08,780 --> 00:20:13,070
if you're interested in some of the

00:20:10,790 --> 00:20:16,070
history of this stuff to read there's a

00:20:13,070 --> 00:20:18,500
lot of comments in the the are the olsen

00:20:16,070 --> 00:20:20,600
database source the version on your

00:20:18,500 --> 00:20:22,790
systems gets compiled a binary form but

00:20:20,600 --> 00:20:25,010
the source actually has all this really

00:20:22,790 --> 00:20:27,130
like they've done just amazing amounts

00:20:25,010 --> 00:20:30,140
of research to figure out this stuff out

00:20:27,130 --> 00:20:32,390
now of course some zones around the

00:20:30,140 --> 00:20:35,620
world don't actually implement DST good

00:20:32,390 --> 00:20:41,570
for them because it's really stupid

00:20:35,620 --> 00:20:43,520
thank you thank you brother so their

00:20:41,570 --> 00:20:46,460
rules are just like here's the offset

00:20:43,520 --> 00:20:48,080
here's the short name forever that could

00:20:46,460 --> 00:20:50,360
change because remember politicians are

00:20:48,080 --> 00:20:51,920
involved and you know it's like hey I

00:20:50,360 --> 00:20:54,980
could fiddle with this even though it's

00:20:51,920 --> 00:20:56,900
working perfectly now one one thing I

00:20:54,980 --> 00:20:58,520
really want to emphasize is there's no

00:20:56,900 --> 00:21:01,310
guarantee that these short names are

00:20:58,520 --> 00:21:04,250
unique so for example a lot of people in

00:21:01,310 --> 00:21:06,260
the US will refer to like EST which is

00:21:04,250 --> 00:21:09,440
the the you know time standard time on

00:21:06,260 --> 00:21:11,960
the east coast but australia at one

00:21:09,440 --> 00:21:14,050
point also had any st so if you're

00:21:11,960 --> 00:21:16,220
working if you're dealing with users

00:21:14,050 --> 00:21:17,720
coming to your site from all around the

00:21:16,220 --> 00:21:20,450
world and you want to ask them to pick a

00:21:17,720 --> 00:21:22,970
time zone you can't just give them these

00:21:20,450 --> 00:21:25,340
short names and expect them to get you

00:21:22,970 --> 00:21:27,779
know get good data what you need to do

00:21:25,340 --> 00:21:30,330
instead well talk about that

00:21:27,779 --> 00:21:31,799
a little later but one thing i want to

00:21:30,330 --> 00:21:33,210
emphasize you can use the short names

00:21:31,799 --> 00:21:35,820
for display because when somebody's

00:21:33,210 --> 00:21:37,619
picked a time zone if you use EST it's

00:21:35,820 --> 00:21:40,940
really clear to them but you can't use

00:21:37,619 --> 00:21:45,059
it to have them tell you their time zone

00:21:40,940 --> 00:21:47,820
right so that this is kind of a pain is

00:21:45,059 --> 00:21:49,440
getting users big time zones the olsen

00:21:47,820 --> 00:21:50,879
database if you just like look if you

00:21:49,440 --> 00:21:53,309
get a list of all the zones there's I

00:21:50,879 --> 00:21:56,159
don't know 300 or something and a lot of

00:21:53,309 --> 00:21:57,719
them are purely historical so we

00:21:56,159 --> 00:21:59,159
basically if you like it kind of a

00:21:57,719 --> 00:22:02,339
history of time zones what you see is

00:21:59,159 --> 00:22:04,559
kind of it kind of started with just

00:22:02,339 --> 00:22:06,149
local meantime which is every city just

00:22:04,559 --> 00:22:07,979
you know looked at the sundial and

00:22:06,149 --> 00:22:10,049
decided when noone was and that was when

00:22:07,979 --> 00:22:12,479
noone was and then it kind of kind of

00:22:10,049 --> 00:22:14,519
grew more and more into larger and

00:22:12,479 --> 00:22:16,979
larger units using the same time zone so

00:22:14,519 --> 00:22:20,549
now in the modern system in the US we

00:22:16,979 --> 00:22:23,969
just have four ish major time zones plus

00:22:20,549 --> 00:22:27,570
Indiana and in Arizona and in course why

00:22:23,969 --> 00:22:30,210
in Alaska but you know prior to that you

00:22:27,570 --> 00:22:32,669
know 57 years ago there was a lot more

00:22:30,210 --> 00:22:34,469
so for example we have America's Chicago

00:22:32,669 --> 00:22:37,409
right here now but at one point there

00:22:34,469 --> 00:22:39,299
was this Menominee time zone that was

00:22:37,409 --> 00:22:43,409
different from Chicago for some reason

00:22:39,299 --> 00:22:46,200
so though sometimes the database has all

00:22:43,409 --> 00:22:47,849
these historical names but it's not

00:22:46,200 --> 00:22:51,119
always clear which ones are historical

00:22:47,849 --> 00:22:52,889
only in which one are modern and I

00:22:51,119 --> 00:22:54,869
haven't written in API for just finding

00:22:52,889 --> 00:22:56,700
her saying show me the list of time

00:22:54,869 --> 00:22:58,529
zones that are actually in use I mean

00:22:56,700 --> 00:23:01,469
the Olsen times when database doesn't

00:22:58,529 --> 00:23:04,529
have that information so i would need to

00:23:01,469 --> 00:23:07,289
add it or figure out somehow and i'm not

00:23:04,529 --> 00:23:09,179
sure if i can i'm not exactly sure what

00:23:07,289 --> 00:23:10,469
things like you know genome do when you

00:23:09,179 --> 00:23:14,039
pick your time zone and it shows you

00:23:10,469 --> 00:23:15,929
that nice little map anyway so if

00:23:14,039 --> 00:23:17,909
somebody ever wants to work on this this

00:23:15,929 --> 00:23:20,639
would be awesome to have have a really

00:23:17,909 --> 00:23:22,259
nice way of saying okay what continent

00:23:20,639 --> 00:23:24,359
are you on or maybe it could use

00:23:22,259 --> 00:23:26,879
geolocation information and gas at your

00:23:24,359 --> 00:23:28,799
time zone but only pick the current one

00:23:26,879 --> 00:23:31,469
so we could not show users like America

00:23:28,799 --> 00:23:32,559
Menominee which they really don't know

00:23:31,469 --> 00:23:36,070
anything about yeah

00:23:32,559 --> 00:23:40,419
oh yeah the astrology software oh those

00:23:36,070 --> 00:23:42,519
bastards the reason i said this bastard

00:23:40,419 --> 00:23:44,889
yeah there's some some of this data

00:23:42,519 --> 00:23:47,499
comes from some astrology software i

00:23:44,889 --> 00:23:49,600
think like no it wasn't the software me

00:23:47,499 --> 00:23:53,950
because they published a book and so

00:23:49,600 --> 00:23:56,200
then they sued Arthur David Olson for

00:23:53,950 --> 00:23:58,929
using this data in the time zone

00:23:56,200 --> 00:24:01,269
database so astrology besides being a

00:23:58,929 --> 00:24:03,909
bunch of hooey is also done by people

00:24:01,269 --> 00:24:06,450
who are greedy bastards so that's what I

00:24:03,909 --> 00:24:08,649
have to say about astrology but yet the

00:24:06,450 --> 00:24:10,450
software might have a good system for

00:24:08,649 --> 00:24:14,980
doing this but it's probably closed

00:24:10,450 --> 00:24:16,629
source ok oh I'd love to know how they

00:24:14,980 --> 00:24:20,499
do it but if it's closed source so it

00:24:16,629 --> 00:24:21,730
doesn't really help immature people and

00:24:20,499 --> 00:24:23,440
it's really easy if you're just in the

00:24:21,730 --> 00:24:24,610
u.s. you can just show like six time

00:24:23,440 --> 00:24:26,379
zones but if you want to do this

00:24:24,610 --> 00:24:28,299
worldwide it's a little bit of a

00:24:26,379 --> 00:24:31,090
challenge and again new time zones get

00:24:28,299 --> 00:24:33,700
created some I regularly I mean the

00:24:31,090 --> 00:24:35,769
that's why this times our database

00:24:33,700 --> 00:24:38,289
releases maybe 10 12 times a year and

00:24:35,769 --> 00:24:41,139
often it's new time zones or changes to

00:24:38,289 --> 00:24:43,840
existing ones right how am i doing on

00:24:41,139 --> 00:24:47,440
time I have about 25 minutes well we'll

00:24:43,840 --> 00:24:52,090
see how this goes so d time supports all

00:24:47,440 --> 00:24:53,830
of this so you can make a an object

00:24:52,090 --> 00:24:56,559
that's the start time of this talk in

00:24:53,830 --> 00:24:58,299
this local timezone America Chicago we

00:24:56,559 --> 00:25:00,429
print out the daytime it prints out that

00:24:58,299 --> 00:25:01,960
string we can change it to Asia taipei i

00:25:00,429 --> 00:25:05,529
use taipei because my wife's from taiwan

00:25:01,960 --> 00:25:07,119
and i like taipei i like Taiwan so it

00:25:05,529 --> 00:25:09,190
may tells you okay that's the current

00:25:07,119 --> 00:25:11,440
that's the time it was local time in

00:25:09,190 --> 00:25:12,789
Taipei at the start of this talk so

00:25:11,440 --> 00:25:14,580
there's probably not many people

00:25:12,789 --> 00:25:18,929
streaming this from Taipei as my guess

00:25:14,580 --> 00:25:21,249
but nihal bugging you all if you are

00:25:18,929 --> 00:25:22,690
right there's this thing daytime

00:25:21,249 --> 00:25:24,820
supports called the floating time zone

00:25:22,690 --> 00:25:27,970
which can be really useful so basically

00:25:24,820 --> 00:25:29,980
it's kind of like no time zone and what

00:25:27,970 --> 00:25:33,190
happens is so if we do this if we set

00:25:29,980 --> 00:25:34,809
the time zone to floating then it's not

00:25:33,190 --> 00:25:36,909
going to change the local time and if we

00:25:34,809 --> 00:25:39,220
set it from floating it won't change the

00:25:36,909 --> 00:25:40,600
local time it also ignores leap seconds

00:25:39,220 --> 00:25:42,490
because you can't do leap seconds

00:25:40,600 --> 00:25:43,809
without knowing the time zone this can

00:25:42,490 --> 00:25:45,430
be useful if you don't care about time

00:25:43,809 --> 00:25:49,930
zones it just makes all your date math

00:25:45,430 --> 00:25:51,490
simpler no of course oh yeah I always

00:25:49,930 --> 00:25:53,260
like talk about what's on the next slide

00:25:51,490 --> 00:25:55,210
and then remember oh the next slide has

00:25:53,260 --> 00:25:57,490
the thing I talked about so right so we

00:25:55,210 --> 00:25:59,260
create a time so an object a daytime

00:25:57,490 --> 00:26:02,230
object set the time zone to floating oh

00:25:59,260 --> 00:26:05,770
 I left out the hour minute second

00:26:02,230 --> 00:26:11,920
part imagine that's there so we say

00:26:05,770 --> 00:26:13,420
print out the daytime okay Vic dick so

00:26:11,920 --> 00:26:16,660
we print it out it gives you the local

00:26:13,420 --> 00:26:19,150
time this is the floating time zone we

00:26:16,660 --> 00:26:22,510
set the time zone to Asia Taipei it does

00:26:19,150 --> 00:26:25,570
not change the local time so this can be

00:26:22,510 --> 00:26:26,860
useful for certain things all right

00:26:25,570 --> 00:26:29,560
let's talk about epics you've all

00:26:26,860 --> 00:26:32,470
probably heard the term epic and the

00:26:29,560 --> 00:26:34,510
UNIX epoch so Alan epic means in this

00:26:32,470 --> 00:26:36,790
context and we're not talking about like

00:26:34,510 --> 00:26:39,160
epic win or you know that's a sort of

00:26:36,790 --> 00:26:40,810
epic this is different all it means is

00:26:39,160 --> 00:26:42,310
just just a starting point for a

00:26:40,810 --> 00:26:44,890
calendar so when I talked about the

00:26:42,310 --> 00:26:46,930
gregorian calendar starting on year 1

00:26:44,890 --> 00:26:51,550
january first that's the Gregorian

00:26:46,930 --> 00:26:54,130
calendars epic UNIX epoch is jindrich

00:26:51,550 --> 00:26:57,040
first nineteen seventy @midnight UTC

00:26:54,130 --> 00:26:59,980
they're very specific about it the UNIX

00:26:57,040 --> 00:27:01,090
epoch is counted well my voice is going

00:26:59,980 --> 00:27:02,290
to give out we'll see if I make it to

00:27:01,090 --> 00:27:08,320
the end of the stock at the end it could

00:27:02,290 --> 00:27:12,130
be right the UNIX epoch is counted in

00:27:08,320 --> 00:27:14,170
seconds from that start time and it's

00:27:12,130 --> 00:27:16,150
sort of UTC because if you read the paws

00:27:14,170 --> 00:27:17,950
expect it says we should skip leap

00:27:16,150 --> 00:27:20,710
seconds and this causes some fun things

00:27:17,950 --> 00:27:22,420
like when the leaf sec happen leap

00:27:20,710 --> 00:27:24,430
second happens this at the end of this

00:27:22,420 --> 00:27:26,890
month if you if you print out your clock

00:27:24,430 --> 00:27:30,610
and you're sinking to ntp you might see

00:27:26,890 --> 00:27:33,130
it like repeat 59 the 59th second look

00:27:30,610 --> 00:27:37,980
for two seconds or jump backwards or

00:27:33,130 --> 00:27:42,190
something like that so it's mostly UTC

00:27:37,980 --> 00:27:46,930
closing it won't go backwards okay I

00:27:42,190 --> 00:27:49,060
think it just repeats then all right so

00:27:46,930 --> 00:27:51,790
daytime can calculate the epic for you

00:27:49,060 --> 00:27:54,670
you give it a day time you ask it for

00:27:51,790 --> 00:27:56,100
the epic this is this is in UTC even

00:27:54,670 --> 00:28:00,960
though the timezone is America

00:27:56,100 --> 00:28:02,309
Chicago just so people know so here's

00:28:00,960 --> 00:28:05,549
another problem we have it's the Y 2

00:28:02,309 --> 00:28:08,190
point 0 38 k problem although actually

00:28:05,549 --> 00:28:11,250
with most pearl if you're using my own

00:28:08,190 --> 00:28:14,160
pearlescent problem so the UNIX epoch

00:28:11,250 --> 00:28:18,630
will no longer fit into a 32-bit integer

00:28:14,160 --> 00:28:19,679
as of this time in 2038 you might think

00:28:18,630 --> 00:28:22,530
well that's quite a ways in the future

00:28:19,679 --> 00:28:24,419
but actually you could bite you now if

00:28:22,530 --> 00:28:26,429
you're calculating 30-year mortgages or

00:28:24,419 --> 00:28:29,490
things like that that involve looking at

00:28:26,429 --> 00:28:31,919
future dates now thanks to michael

00:28:29,490 --> 00:28:33,900
schwartz hard work or i don't know how

00:28:31,919 --> 00:28:37,740
hard it was work he did work that's all

00:28:33,900 --> 00:28:39,470
I know as a pro 512 no I think it

00:28:37,740 --> 00:28:43,380
actually was hard work I'm just joking

00:28:39,470 --> 00:28:45,419
pearl uses a 64-bit integer for the epic

00:28:43,380 --> 00:28:47,130
internally no matter what platform

00:28:45,419 --> 00:28:49,890
you're on whether you compile with

00:28:47,130 --> 00:28:51,480
32-bit in sore not so this problem is

00:28:49,890 --> 00:28:54,030
mostly averted and I'm sure all of you

00:28:51,480 --> 00:28:59,010
are using a reasonably modern pearl and

00:28:54,030 --> 00:29:01,080
not pearl 588 right yeah all right so

00:28:59,010 --> 00:29:03,059
when you as long as you upgrade before

00:29:01,080 --> 00:29:05,190
twenty thirty eight maybe you'll be okay

00:29:03,059 --> 00:29:10,020
or you know but you know you'll be using

00:29:05,190 --> 00:29:15,210
Perl 6 then so just just something to to

00:29:10,020 --> 00:29:17,130
be aware all right and I've kind of

00:29:15,210 --> 00:29:20,280
alluded to this there's a big ecosystem

00:29:17,130 --> 00:29:21,539
of datetime modules so datetime p.m. is

00:29:20,280 --> 00:29:23,850
kind of the core and there's daytime

00:29:21,539 --> 00:29:25,650
times are in daytime locale that work

00:29:23,850 --> 00:29:28,230
together to do the timezone soph the

00:29:25,650 --> 00:29:30,210
locale stuff I showed earlier there's a

00:29:28,230 --> 00:29:32,280
lot of for matters and parsers so you

00:29:30,210 --> 00:29:34,289
can say there's like daytime format my

00:29:32,280 --> 00:29:36,240
sequel you can use it to parse the

00:29:34,289 --> 00:29:38,669
format that my sequel gives back you can

00:29:36,240 --> 00:29:41,159
use it to render a daytime object in the

00:29:38,669 --> 00:29:43,830
format my sequel expects there's a lot

00:29:41,159 --> 00:29:46,559
of for matters probably 20 30 or more on

00:29:43,830 --> 00:29:48,419
Sipan so if you're if you're trying to

00:29:46,559 --> 00:29:51,419
parse a specific format I would strongly

00:29:48,419 --> 00:29:54,179
suggest you look for for a parser on

00:29:51,419 --> 00:29:55,679
Sipan first before you write your own if

00:29:54,179 --> 00:29:58,080
you want to write your own module to do

00:29:55,679 --> 00:29:59,850
this it's really quite trivial there's a

00:29:58,080 --> 00:30:02,400
lot of other calendars that I mentioned

00:29:59,850 --> 00:30:05,640
like I mentioned we have chinese hebrew

00:30:02,400 --> 00:30:07,650
japanese think there's islamic i can't

00:30:05,640 --> 00:30:09,580
remember if there's not you could write

00:30:07,650 --> 00:30:13,960
it we have the discordian calendar

00:30:09,580 --> 00:30:15,580
very very useful there's also event will

00:30:13,960 --> 00:30:16,690
recurrence modules which I'm not going

00:30:15,580 --> 00:30:18,730
to really talk about because it's kind

00:30:16,690 --> 00:30:20,140
of a nice pecially thing but you can

00:30:18,730 --> 00:30:23,440
have something that represents a

00:30:20,140 --> 00:30:24,760
recurrence of like every monday from the

00:30:23,440 --> 00:30:26,710
beginning of the year to the end of the

00:30:24,760 --> 00:30:28,660
year this is really useful for example

00:30:26,710 --> 00:30:32,200
for representing meetings it's also

00:30:28,660 --> 00:30:34,150
useful for holidays for example you can

00:30:32,200 --> 00:30:36,610
you can say when is the next Easter or

00:30:34,150 --> 00:30:40,860
give me all the Easter's from 2000

00:30:36,610 --> 00:30:43,720
through 2015 something like that so

00:30:40,860 --> 00:30:46,810
things like that are really useful and

00:30:43,720 --> 00:30:48,400
these are offensive recurrences but most

00:30:46,810 --> 00:30:51,520
people don't need to use them there's

00:30:48,400 --> 00:30:55,330
also add a timespan module which can

00:30:51,520 --> 00:30:57,070
represent kind of a span of time so from

00:30:55,330 --> 00:30:58,390
you know the beginning of this talk to

00:30:57,070 --> 00:31:00,790
the end of it and then you can ask does

00:30:58,390 --> 00:31:03,190
it contain this particular day time does

00:31:00,790 --> 00:31:06,220
it overlap with another span there's

00:31:03,190 --> 00:31:08,130
also a module four sets of day times and

00:31:06,220 --> 00:31:11,110
then there's a module four sets of spans

00:31:08,130 --> 00:31:12,160
so all of this can be really useful if

00:31:11,110 --> 00:31:14,530
you need it but i'm not going to show

00:31:12,160 --> 00:31:16,110
too much because again these are kind of

00:31:14,530 --> 00:31:18,490
specialized things and if you need it

00:31:16,110 --> 00:31:20,200
well you'll you'll learn about it and

00:31:18,490 --> 00:31:22,270
then there's also random modules in the

00:31:20,200 --> 00:31:24,040
daytime x namespace which is where we

00:31:22,270 --> 00:31:25,900
make people put stuff if i don't feel

00:31:24,040 --> 00:31:28,210
like it makes kind of fits into these

00:31:25,900 --> 00:31:29,560
other categories and there's just few

00:31:28,210 --> 00:31:31,930
random stuff in there which might be

00:31:29,560 --> 00:31:34,690
useful so just you know if you if you

00:31:31,930 --> 00:31:36,340
have a deed time related problem look on

00:31:34,690 --> 00:31:39,850
Sipan first there's more than just the

00:31:36,340 --> 00:31:41,980
core daytime module there's a lot a lot

00:31:39,850 --> 00:31:44,470
of good stuff it's Sipan so there's a

00:31:41,980 --> 00:31:46,030
lot of bad stuff but there might be even

00:31:44,470 --> 00:31:47,230
the bad stuff might solve your problem

00:31:46,030 --> 00:31:49,000
well enough that you don't have to write

00:31:47,230 --> 00:31:49,840
it yourself and this is pearl and if

00:31:49,000 --> 00:31:53,140
you're writing everything yourself

00:31:49,840 --> 00:31:55,240
you're doing it wrong so now I just want

00:31:53,140 --> 00:31:57,100
to talk about kind of some

00:31:55,240 --> 00:31:58,810
recommendations and some gotchas that

00:31:57,100 --> 00:32:00,460
people encounter when using daytime

00:31:58,810 --> 00:32:02,230
these are problems that come up on the

00:32:00,460 --> 00:32:05,200
daytime mailing list somewhat regularly

00:32:02,230 --> 00:32:07,210
so by coming to this this presentation

00:32:05,200 --> 00:32:09,220
if those of you who are still awake and

00:32:07,210 --> 00:32:12,930
can capable of receiving information

00:32:09,220 --> 00:32:15,340
might avoid some of these problems and

00:32:12,930 --> 00:32:17,050
also I'm going to talk about the screwed

00:32:15,340 --> 00:32:18,880
up things I did all the mistakes I made

00:32:17,050 --> 00:32:20,740
so there's no daytime date class and

00:32:18,880 --> 00:32:22,320
there really should be the daytime

00:32:20,740 --> 00:32:24,899
object always has years maybe

00:32:22,320 --> 00:32:27,570
States hours years months days hours

00:32:24,899 --> 00:32:29,309
minutes seconds it would be nice if

00:32:27,570 --> 00:32:30,509
there was a date only class and you

00:32:29,309 --> 00:32:32,940
wouldn't have to worry about time zones

00:32:30,509 --> 00:32:34,710
and stuff the way to kind of get around

00:32:32,940 --> 00:32:36,480
this if you just want to work with dates

00:32:34,710 --> 00:32:39,360
and due date math and not worry about

00:32:36,480 --> 00:32:40,799
times use the floating time zone so then

00:32:39,360 --> 00:32:42,990
you don't have to worry about any sort

00:32:40,799 --> 00:32:48,419
of leap seconds you don't have to worry

00:32:42,990 --> 00:32:50,730
about DST DST changes and then when you

00:32:48,419 --> 00:32:53,370
do math you can use the delta md in the

00:32:50,730 --> 00:32:55,289
delta days module md is months and days

00:32:53,370 --> 00:32:56,730
so you can ask it what's the difference

00:32:55,289 --> 00:32:59,360
in months and days between these two

00:32:56,730 --> 00:33:03,659
dates what's the difference just in days

00:32:59,360 --> 00:33:08,600
the the default subtraction you gets all

00:33:03,659 --> 00:33:11,070
the units so days months minutes seconds

00:33:08,600 --> 00:33:15,600
so that's my recommendation if you just

00:33:11,070 --> 00:33:17,159
need to do date only work so here's an

00:33:15,600 --> 00:33:19,799
example of calculating the difference

00:33:17,159 --> 00:33:22,590
between two dates so we have today's

00:33:19,799 --> 00:33:26,299
date we have my birth date remember that

00:33:22,590 --> 00:33:29,129
date and send me gifts cash is preferred

00:33:26,299 --> 00:33:30,690
so again like I said we're going to use

00:33:29,129 --> 00:33:33,480
the floating time zone so we don't have

00:33:30,690 --> 00:33:36,620
to worry about stuff and we're going to

00:33:33,480 --> 00:33:39,210
call Delta days to get the difference in

00:33:36,620 --> 00:33:41,610
Indies and that returns a date time

00:33:39,210 --> 00:33:43,320
duration object and then we can ask okay

00:33:41,610 --> 00:33:45,600
and the reason I have to use this in

00:33:43,320 --> 00:33:47,370
units days thing which looks kind of

00:33:45,600 --> 00:33:49,740
horrible I'll talk about that in a

00:33:47,370 --> 00:33:52,980
second and we can find out okay it's

00:33:49,740 --> 00:33:59,700
14,000 at 71 days that makes me feel old

00:33:52,980 --> 00:34:02,639
cheese let me put it like that so yeah

00:33:59,700 --> 00:34:05,190
so that it needed saying some complete

00:34:02,639 --> 00:34:07,080
 created this module and I wish I

00:34:05,190 --> 00:34:10,139
could go back in time and just kick his

00:34:07,080 --> 00:34:14,099
ass but then I might not be standing

00:34:10,139 --> 00:34:15,720
here today so internally it stores

00:34:14,099 --> 00:34:17,700
months days minutes seconds and in 0

00:34:15,720 --> 00:34:22,109
seconds and then it has these methods

00:34:17,700 --> 00:34:23,909
years months blah blah blah what happens

00:34:22,109 --> 00:34:26,310
is if I had just called days in that

00:34:23,909 --> 00:34:28,950
previous example it's just going to tell

00:34:26,310 --> 00:34:32,220
me the days excluding the number of

00:34:28,950 --> 00:34:35,220
weeks so it calculates that 14,000 71

00:34:32,220 --> 00:34:38,429
days is what 220

00:34:35,220 --> 00:34:40,679
II weeks and then it'll tell me oh

00:34:38,429 --> 00:34:42,419
there's only one day and this confuses

00:34:40,679 --> 00:34:44,940
people every time because of course it's

00:34:42,419 --> 00:34:47,310
absolutely terrible but this is also the

00:34:44,940 --> 00:34:48,810
other problem of Sipan is I know a lot

00:34:47,310 --> 00:34:50,820
of people are using daytime and if I

00:34:48,810 --> 00:34:52,409
just change this so these methods return

00:34:50,820 --> 00:34:54,869
what they should have returned in the

00:34:52,409 --> 00:34:56,730
first place instead of now the new

00:34:54,869 --> 00:34:58,800
people to daytime screaming at me that

00:34:56,730 --> 00:35:00,540
this API socks I'm going to get you know

00:34:58,800 --> 00:35:01,770
a thousand times as many people

00:35:00,540 --> 00:35:04,050
screaming at me that I broke their

00:35:01,770 --> 00:35:06,840
production code so there's just no

00:35:04,050 --> 00:35:08,460
winning so much later in the life time

00:35:06,840 --> 00:35:10,109
of day time duration I have this in

00:35:08,460 --> 00:35:12,330
units method which will actually give

00:35:10,109 --> 00:35:15,060
you what you want so just be warned that

00:35:12,330 --> 00:35:17,250
you probably want in units rather than

00:35:15,060 --> 00:35:25,320
the days the methods that actually make

00:35:17,250 --> 00:35:27,210
sense sorry oh yeah so as usual i went

00:35:25,320 --> 00:35:30,599
ahead of my slides so if we do the math

00:35:27,210 --> 00:35:33,990
that i did before from my birthday to

00:35:30,599 --> 00:35:36,750
today and then we just ask the duration

00:35:33,990 --> 00:35:39,060
object for days it says one what but

00:35:36,750 --> 00:35:41,910
then if we ask it for weeks so it's 2010

00:35:39,060 --> 00:35:44,369
weeks and one day but they don't we just

00:35:41,910 --> 00:35:49,490
ask it for only days with the immune

00:35:44,369 --> 00:35:54,240
instead we get a saint answer oops so

00:35:49,490 --> 00:35:57,210
all right so yeah daytime map is really

00:35:54,240 --> 00:35:59,760
hard even not not just Barbie but I

00:35:57,210 --> 00:36:03,510
think it's hard too so it's it's it's

00:35:59,760 --> 00:36:05,250
pretty difficult so first question is

00:36:03,510 --> 00:36:08,910
how long is a month the answer is it

00:36:05,250 --> 00:36:11,790
depends so if we do this we created a

00:36:08,910 --> 00:36:15,119
time object representing februari first

00:36:11,790 --> 00:36:17,369
of two thousand nine we had 28 days we

00:36:15,119 --> 00:36:21,750
get march first we had 28 days again we

00:36:17,369 --> 00:36:23,730
get march 29th this is very confusing so

00:36:21,750 --> 00:36:28,530
let's try this again so we're going to

00:36:23,730 --> 00:36:30,630
create january january thirtieth of 2009

00:36:28,530 --> 00:36:33,210
we're going to add one month wait what

00:36:30,630 --> 00:36:34,740
happened we skipped februari and then we

00:36:33,210 --> 00:36:38,070
add another month and now we're in april

00:36:34,740 --> 00:36:39,720
wait let's try this again so we're going

00:36:38,070 --> 00:36:41,220
to create Daniel a 30th we're going to

00:36:39,720 --> 00:36:43,650
add a month but then we're going to tell

00:36:41,220 --> 00:36:45,990
day time duration how we want it to

00:36:43,650 --> 00:36:48,390
handle and a month boundaries we're

00:36:45,990 --> 00:36:50,400
going to say the default is just a wrap

00:36:48,390 --> 00:36:52,319
we're going to say limited and if you

00:36:50,400 --> 00:36:55,829
tell it to limit then it does it will

00:36:52,319 --> 00:36:57,869
never go past the month it ends up in

00:36:55,829 --> 00:36:59,910
and then we add another month and so

00:36:57,869 --> 00:37:01,920
being the last day of the month we're on

00:36:59,910 --> 00:37:03,450
march aaliyah there's there's just like

00:37:01,920 --> 00:37:05,910
there's no right answer all of these

00:37:03,450 --> 00:37:09,329
answers were right the problem is you

00:37:05,910 --> 00:37:10,470
actually have to know what you want when

00:37:09,329 --> 00:37:12,119
you do this and this is why I say

00:37:10,470 --> 00:37:14,099
daytime math is hard because people like

00:37:12,119 --> 00:37:16,799
why does it just do the right thing and

00:37:14,099 --> 00:37:18,240
then the next person emails me is like

00:37:16,799 --> 00:37:20,880
why does it just do the right thing and

00:37:18,240 --> 00:37:23,010
they're asking for something else so no

00:37:20,880 --> 00:37:24,510
winning you just have to know that this

00:37:23,010 --> 00:37:29,130
problem exists and you're going to have

00:37:24,510 --> 00:37:31,650
to deal with it so that deal with it how

00:37:29,130 --> 00:37:36,990
long is a day you'd think this would be

00:37:31,650 --> 00:37:38,910
simple alright so we create oh this is

00:37:36,990 --> 00:37:43,380
when the timezone changes create

00:37:38,910 --> 00:37:45,680
November for 2012 at midnight in America

00:37:43,380 --> 00:37:47,970
Chicago that's our current time zone

00:37:45,680 --> 00:37:50,880
this is when we're around the time when

00:37:47,970 --> 00:37:53,190
we're going to have a DST change so if

00:37:50,880 --> 00:37:55,440
we print out the date time we get this

00:37:53,190 --> 00:37:57,599
which is exactly what we'd expect we add

00:37:55,440 --> 00:38:00,150
an hour okay we went from midnight to

00:37:57,599 --> 00:38:02,880
one o'clock we had an hour it's what

00:38:00,150 --> 00:38:06,809
what happened okay so what happened is

00:38:02,880 --> 00:38:09,779
we fell back as part of the DST chain so

00:38:06,809 --> 00:38:11,519
adding an hour it did add an hour this

00:38:09,779 --> 00:38:13,980
one o'clock is not the same as this one

00:38:11,519 --> 00:38:16,259
o'clock this is one of the reasons i

00:38:13,980 --> 00:38:20,420
recommend you use floating or later I'll

00:38:16,259 --> 00:38:20,420
some it's just using UTC for your math

00:38:21,559 --> 00:38:28,730
right so there's no 2 a.m. no is it I

00:38:26,069 --> 00:38:28,730
don't think so

00:38:32,710 --> 00:38:40,040
okay well you can check this later the

00:38:35,450 --> 00:38:42,230
principle remains the same okay March

00:38:40,040 --> 00:38:44,720
11th of 2012 we're going to spring

00:38:42,230 --> 00:38:47,210
forward so it's midnight we had an hour

00:38:44,720 --> 00:38:50,330
we get one o'clock we we have another

00:38:47,210 --> 00:38:51,920
hour we get three o'clock so how many

00:38:50,330 --> 00:38:56,780
hours are there in the day I don't know

00:38:51,920 --> 00:38:58,369
24 ish there's another fun fun thing

00:38:56,780 --> 00:39:01,130
that can happen to you with daytime so

00:38:58,369 --> 00:39:07,810
it's the day before a DSD change marched

00:39:01,130 --> 00:39:11,330
hence the hour is to am suddenly okay

00:39:07,810 --> 00:39:12,530
suddenly we add a day and a time's going

00:39:11,330 --> 00:39:14,330
to throw an exception it's going to say

00:39:12,530 --> 00:39:17,030
invalid local time for blah blah blah

00:39:14,330 --> 00:39:18,470
the problem is there's no Chuy amor if

00:39:17,030 --> 00:39:21,020
Terrance right there's no 3am but I

00:39:18,470 --> 00:39:22,849
think I'm right there's no 2 a.m. on

00:39:21,020 --> 00:39:25,240
that particular date in that particular

00:39:22,849 --> 00:39:28,010
time zone and really there's nothing

00:39:25,240 --> 00:39:29,960
people there's no right answer again I

00:39:28,010 --> 00:39:32,150
mean I could have it like move forward

00:39:29,960 --> 00:39:38,869
to 3am I could have move backward to 1am

00:39:32,150 --> 00:39:40,070
but it just sucks the job yep don't be

00:39:38,869 --> 00:39:42,700
the guy in the second row even though

00:39:40,070 --> 00:39:45,650
you're in the first row all right

00:39:42,700 --> 00:39:47,359
another issue is that the order that we

00:39:45,650 --> 00:39:51,830
do the math in matters so if we add

00:39:47,359 --> 00:39:55,820
months and DS it matters what order so

00:39:51,830 --> 00:39:57,920
we have februari 28th of 2011 not a leap

00:39:55,820 --> 00:39:59,690
year we had months and days now

00:39:57,920 --> 00:40:01,310
depending on what d 10 does internally

00:39:59,690 --> 00:40:03,830
we could have two different results in

00:40:01,310 --> 00:40:05,930
this case we come up with April first

00:40:03,830 --> 00:40:07,849
what happened is internally it adds the

00:40:05,930 --> 00:40:09,950
day's first which gets us some march

00:40:07,849 --> 00:40:12,020
first and then it adds the month which

00:40:09,950 --> 00:40:13,430
gets a staple first if it did it the

00:40:12,020 --> 00:40:15,470
other way around if we had the month

00:40:13,430 --> 00:40:17,119
first then we get to march twenty eighth

00:40:15,470 --> 00:40:20,180
and then we have the day we get to march

00:40:17,119 --> 00:40:22,670
29 again there's no right answer if you

00:40:20,180 --> 00:40:24,230
want to force it to know I thought I

00:40:22,670 --> 00:40:26,270
showed this if you want to force a

00:40:24,230 --> 00:40:29,060
specific order you could just do add

00:40:26,270 --> 00:40:30,980
months one and then do another call add

00:40:29,060 --> 00:40:33,109
days one or whatever order you want so

00:40:30,980 --> 00:40:34,910
you can do multiple calls to add to

00:40:33,109 --> 00:40:36,740
force it to do what you want but again

00:40:34,910 --> 00:40:38,390
these are all things you just can have

00:40:36,740 --> 00:40:41,660
to deal with because there's no one

00:40:38,390 --> 00:40:43,610
right answer everything about this just

00:40:41,660 --> 00:40:46,380
saw

00:40:43,610 --> 00:40:48,090
another fun property of daytime math is

00:40:46,380 --> 00:40:51,360
that it's not always reversible when you

00:40:48,090 --> 00:40:54,000
cross D daylight saving time transitions

00:40:51,360 --> 00:40:56,190
so we can take two day times subtract

00:40:54,000 --> 00:40:59,040
them engage a duration and then we can

00:40:56,190 --> 00:41:01,650
add that duration back to this one which

00:40:59,040 --> 00:41:04,370
was being subtracted I don't know what

00:41:01,650 --> 00:41:08,600
do you call this in math math ii terms

00:41:04,370 --> 00:41:13,230
the subtract de or something whatever

00:41:08,600 --> 00:41:16,380
subtract end subtrahend well math is

00:41:13,230 --> 00:41:20,340
really confusing I was a music major as

00:41:16,380 --> 00:41:22,410
I mentioned so you add it back and it

00:41:20,340 --> 00:41:24,900
turns out it doesn't equal what we

00:41:22,410 --> 00:41:29,040
started from and this is a normal and

00:41:24,900 --> 00:41:31,080
expected and then there's even more fun

00:41:29,040 --> 00:41:33,090
what do we do if we have a date during

00:41:31,080 --> 00:41:35,190
daylight saving time and then we

00:41:33,090 --> 00:41:37,080
subtract a date which isn't in daylight

00:41:35,190 --> 00:41:39,690
saving time do we include that our

00:41:37,080 --> 00:41:42,750
transition either added or subtracted in

00:41:39,690 --> 00:41:45,420
the resulting duration do we not d time

00:41:42,750 --> 00:41:47,850
tries to come up with sane answers for

00:41:45,420 --> 00:41:50,160
this and I think it actually mostly does

00:41:47,850 --> 00:41:51,330
a reasonable job of dwelling but again

00:41:50,160 --> 00:41:54,240
it's just something you need to deal

00:41:51,330 --> 00:41:56,220
with there's also leap years there's

00:41:54,240 --> 00:42:00,390
also leap seconds all of these can

00:41:56,220 --> 00:42:04,050
affect your date time math one thing I

00:42:00,390 --> 00:42:05,460
really want to point out is don't this

00:42:04,050 --> 00:42:06,840
is kind of an anti-pattern somebody

00:42:05,460 --> 00:42:10,200
wrote to the list it was like this

00:42:06,840 --> 00:42:12,390
doesn't work always use the add methods

00:42:10,200 --> 00:42:14,100
are the Delta D method subtract methods

00:42:12,390 --> 00:42:17,220
to do the math somebody was trying to do

00:42:14,100 --> 00:42:19,620
this he was calling set getting the

00:42:17,220 --> 00:42:22,200
existing day and adding one to it okay

00:42:19,620 --> 00:42:23,910
this doesn't work for hopefully obvious

00:42:22,200 --> 00:42:26,130
reasons it's the last day of the month

00:42:23,910 --> 00:42:29,160
you're going to get you know january

00:42:26,130 --> 00:42:30,720
thirty seconds or whatever 30 seconds

00:42:29,160 --> 00:42:33,090
what is that Jesus I don't even know

00:42:30,720 --> 00:42:34,590
English 30 second and that's not a valid

00:42:33,090 --> 00:42:37,650
date and then daytime is going to blow

00:42:34,590 --> 00:42:39,660
up and say you're a so instead use

00:42:37,650 --> 00:42:41,730
the add method if you just call add days

00:42:39,660 --> 00:42:44,820
one it will do the right thing so don't

00:42:41,730 --> 00:42:48,930
you don't you set to do Matthew set to

00:42:44,820 --> 00:42:50,760
all set many other recommendation like I

00:42:48,930 --> 00:42:53,070
said earlier use the floating time zone

00:42:50,760 --> 00:42:54,589
if you can if you can use it for all

00:42:53,070 --> 00:42:56,869
your operations

00:42:54,589 --> 00:43:00,859
good otherwise you could try just using

00:42:56,869 --> 00:43:02,749
UTC so you could convert all your dates

00:43:00,859 --> 00:43:07,219
to UTC internally do all the math and

00:43:02,749 --> 00:43:09,950
then change it back to the users time

00:43:07,219 --> 00:43:12,319
zone for the presentation layer the

00:43:09,950 --> 00:43:15,140
reason I the this can be better is that

00:43:12,319 --> 00:43:17,239
UTC has no DST changes which gets rid of

00:43:15,140 --> 00:43:19,670
a whole class of problems of like

00:43:17,239 --> 00:43:27,619
invalid local times in 23 and 25 hour

00:43:19,670 --> 00:43:29,479
days things like that yeah utca is the

00:43:27,619 --> 00:43:38,599
question was is UTC at x 0 named the

00:43:29,479 --> 00:43:41,119
answer is yes yes question so the

00:43:38,599 --> 00:43:42,799
question was am I saying use UTC for

00:43:41,119 --> 00:43:44,569
calculations and then convert on display

00:43:42,799 --> 00:43:47,809
yes that's exactly what I'm saying so

00:43:44,569 --> 00:43:49,309
you you all your internal stuff is UTC

00:43:47,809 --> 00:43:51,979
then you go to present it to the user

00:43:49,309 --> 00:43:54,469
and you call set time zone America

00:43:51,979 --> 00:43:57,920
Chicago wherever they are and show them

00:43:54,469 --> 00:44:00,910
that value how am i doing on time when

00:43:57,920 --> 00:44:08,660
does this end in seven minutes oh crap I

00:44:00,910 --> 00:44:11,150
talk too much that's the rum anyway I

00:44:08,660 --> 00:44:14,059
will see how far we get there's also an

00:44:11,150 --> 00:44:18,049
issue with ambiguous local times so for

00:44:14,059 --> 00:44:21,769
example during the DST change on October

00:44:18,049 --> 00:44:24,950
26 a 130 there's to 130 is on that day

00:44:21,769 --> 00:44:26,900
so if you just tell d time that you want

00:44:24,950 --> 00:44:29,660
130 it doesn't know which one you want

00:44:26,900 --> 00:44:33,920
again you could create it in UTC and

00:44:29,660 --> 00:44:35,420
then set the time zone what happens is

00:44:33,920 --> 00:44:37,400
that day time just always picks the

00:44:35,420 --> 00:44:39,859
latest UTC time when there's ambiguity

00:44:37,400 --> 00:44:42,200
that's just kind of a artifact of the

00:44:39,859 --> 00:44:43,789
internals but it's documented to do that

00:44:42,200 --> 00:44:48,079
so that won't change but it's still

00:44:43,789 --> 00:44:50,869
confusing so my recommendation just

00:44:48,079 --> 00:44:54,289
always store your day times as floating

00:44:50,869 --> 00:44:57,499
or UTC if you can possibly do that

00:44:54,289 --> 00:45:00,079
otherwise store them as a daytime plus a

00:44:57,499 --> 00:45:03,319
time zone so for example post grass has

00:45:00,079 --> 00:45:05,599
this data type x don't time stamp with

00:45:03,319 --> 00:45:07,729
TZ what you don't want to do is just

00:45:05,599 --> 00:45:08,369
store it in your look in your database

00:45:07,729 --> 00:45:10,589
with your

00:45:08,369 --> 00:45:11,910
local time and then maybe your server

00:45:10,589 --> 00:45:14,039
moves and now you're storing it with a

00:45:11,910 --> 00:45:15,930
different local time something like that

00:45:14,039 --> 00:45:18,749
don't rely on the system to do it be

00:45:15,930 --> 00:45:20,579
very explicit and then just use time

00:45:18,749 --> 00:45:22,890
zones for presentation to users so

00:45:20,579 --> 00:45:24,900
everything's in UTC and the database you

00:45:22,890 --> 00:45:30,529
pull it back you know the users in Asia

00:45:24,900 --> 00:45:35,269
Taipei you give them their local time so

00:45:30,529 --> 00:45:38,009
there's also some issue yeah question oh

00:45:35,269 --> 00:45:39,960
right yeah I didn't cover that tried to

00:45:38,009 --> 00:45:46,559
i'm trying to rush so i really don't

00:45:39,960 --> 00:45:50,130
recommend storing epics because well

00:45:46,559 --> 00:45:51,539
what do i recommend that i know some

00:45:50,130 --> 00:45:52,859
people try to do things where they just

00:45:51,539 --> 00:45:54,329
use the a pic and they start adding

00:45:52,859 --> 00:45:57,059
seconds to it and try to do the math

00:45:54,329 --> 00:45:58,650
that way the storing the epic could be

00:45:57,059 --> 00:46:01,650
okay as long as you're very aware of any

00:45:58,650 --> 00:46:03,180
issues you it's just not good for math

00:46:01,650 --> 00:46:07,710
and things like that it's also like if

00:46:03,180 --> 00:46:09,359
you want to do something like basically

00:46:07,710 --> 00:46:10,859
basically one reason not to sort an epic

00:46:09,359 --> 00:46:12,329
say in the database is if you want to

00:46:10,859 --> 00:46:13,799
get a range of say at the beginning of

00:46:12,329 --> 00:46:15,269
the month to the end of the month you're

00:46:13,799 --> 00:46:17,430
going to have to calculate that all in

00:46:15,269 --> 00:46:18,599
your app turn it into the epic time then

00:46:17,430 --> 00:46:22,099
use that when you pass it to the

00:46:18,599 --> 00:46:27,599
database just becomes kind of a pain

00:46:22,099 --> 00:46:31,890
something smells fried all right have

00:46:27,599 --> 00:46:34,319
you fried food in here no right so a few

00:46:31,890 --> 00:46:35,519
performance tricks d time can be a

00:46:34,319 --> 00:46:37,619
little slow when you're creating many

00:46:35,519 --> 00:46:39,690
many thousands of D times but first my

00:46:37,619 --> 00:46:42,869
rules of optimization which are don't

00:46:39,690 --> 00:46:45,900
optimize don't optimize I'm serious if

00:46:42,869 --> 00:46:47,910
you have to optimize benchmark first so

00:46:45,900 --> 00:46:50,069
that you know kind of what you're aiming

00:46:47,910 --> 00:46:52,619
what your current performance is and see

00:46:50,069 --> 00:46:54,569
what you can aim at and don't benchmark

00:46:52,619 --> 00:46:56,339
without profiling first if you're going

00:46:54,569 --> 00:46:58,259
to benchmark some small part of your app

00:46:56,339 --> 00:47:00,180
you need to know which part of your app

00:46:58,259 --> 00:47:01,829
is going slow don't guess because you'll

00:47:00,180 --> 00:47:04,109
get it wrong especially if you're my

00:47:01,829 --> 00:47:05,910
coworker it's just optimizing everything

00:47:04,109 --> 00:47:08,849
without benchmarking it is driving me

00:47:05,910 --> 00:47:10,529
crazy he's not here right now so and

00:47:08,849 --> 00:47:12,690
then the final role is just see number

00:47:10,529 --> 00:47:15,059
one which is don't optimize but if you

00:47:12,690 --> 00:47:16,349
need to optimize one really really easy

00:47:15,059 --> 00:47:18,749
thing to do and this is in particular

00:47:16,349 --> 00:47:21,560
dangerous is just cash the time zone

00:47:18,749 --> 00:47:23,660
object so when you pass a string for

00:47:21,560 --> 00:47:26,270
time zone to the daytime constructor it

00:47:23,660 --> 00:47:27,890
calls datetime time zone new and every

00:47:26,270 --> 00:47:29,890
time you call that it has to look it up

00:47:27,890 --> 00:47:31,850
now the objects themselves are singleton

00:47:29,890 --> 00:47:33,410
Singleton's but they're still look up

00:47:31,850 --> 00:47:35,330
process and to make sure it's a valid

00:47:33,410 --> 00:47:36,740
name and all that you can just skip all

00:47:35,330 --> 00:47:38,720
that you can just make the time zone

00:47:36,740 --> 00:47:40,190
once instead of passing a name you can

00:47:38,720 --> 00:47:42,470
pass the object and that'll work well

00:47:40,190 --> 00:47:44,420
and that actually was like a nice little

00:47:42,470 --> 00:47:45,920
fix for example for bugzilla they're

00:47:44,420 --> 00:47:47,960
having some performance issues in

00:47:45,920 --> 00:47:50,600
particular one thing I haven't mentioned

00:47:47,960 --> 00:47:52,430
you can pass the name local just as all

00:47:50,600 --> 00:47:54,950
lowercase and then we'll figure out your

00:47:52,430 --> 00:47:57,830
machines current local timezone that can

00:47:54,950 --> 00:47:59,480
be really slow so if you need the local

00:47:57,830 --> 00:48:02,570
timezone then you definitely want to

00:47:59,480 --> 00:48:05,330
cash it that's it that's an easy and

00:48:02,570 --> 00:48:07,850
safe one now I did say use a parser

00:48:05,330 --> 00:48:09,530
before but if you have to if you're

00:48:07,850 --> 00:48:11,660
dealing with in point of like a million

00:48:09,530 --> 00:48:14,390
records and you know that they're all

00:48:11,660 --> 00:48:17,150
valid and all in the same format then

00:48:14,390 --> 00:48:19,850
you could skip using a parser class or

00:48:17,150 --> 00:48:21,200
parser object and instead just write

00:48:19,850 --> 00:48:23,120
your own regex or something like that

00:48:21,200 --> 00:48:24,500
again this is when you know you have a

00:48:23,120 --> 00:48:28,100
lot of data that you've already

00:48:24,500 --> 00:48:29,690
validated somehow and you trust it so

00:48:28,100 --> 00:48:33,260
this can this can be one way to save a

00:48:29,690 --> 00:48:36,290
little time also relatively safe again

00:48:33,260 --> 00:48:38,060
if you know your data is valid for

00:48:36,290 --> 00:48:39,320
whatever reason they really know because

00:48:38,060 --> 00:48:40,850
a lot of people say they know but they

00:48:39,320 --> 00:48:42,680
don't really know on their kind of lying

00:48:40,850 --> 00:48:43,970
and they're just you know there's going

00:48:42,680 --> 00:48:46,130
to be problems down the line but if you

00:48:43,970 --> 00:48:48,710
know and you're sure then you can do

00:48:46,130 --> 00:48:52,850
this little hack if you set this it

00:48:48,710 --> 00:48:54,950
turns off prams validates validation

00:48:52,850 --> 00:48:57,050
which dtime uses and that makes

00:48:54,950 --> 00:48:58,640
constructors a lot faster again this is

00:48:57,050 --> 00:49:01,070
when you know the data is coming from a

00:48:58,640 --> 00:49:02,780
source you trust because if you pat if

00:49:01,070 --> 00:49:05,510
you do this and then pass like month

00:49:02,780 --> 00:49:07,580
equals 14 I don't know what's going to

00:49:05,510 --> 00:49:09,080
happen it's not going to work and it's

00:49:07,580 --> 00:49:13,010
not my fault and I don't want to hear

00:49:09,080 --> 00:49:15,560
about it so oh well we made it with one

00:49:13,010 --> 00:49:17,360
minute to spare I'm happy to take some

00:49:15,560 --> 00:49:18,830
questions and if you know if it takes

00:49:17,360 --> 00:49:22,270
too long I can only you can talk to me

00:49:18,830 --> 00:49:22,270
out in the hall but yeah questions

00:49:26,640 --> 00:49:31,290
oh so the question is what happened with

00:49:29,220 --> 00:49:34,530
the lawsuit against the Olsen database

00:49:31,290 --> 00:49:43,800
yeah wizard was thrown out I think so

00:49:34,530 --> 00:49:45,660
take that astrologers yeah it's part of

00:49:43,800 --> 00:49:47,930
Vienna the database is now an I in a

00:49:45,660 --> 00:49:50,400
project international assignment of I

00:49:47,930 --> 00:49:53,010
don't know what it is it's some

00:49:50,400 --> 00:49:54,960
standards body and I think they they

00:49:53,010 --> 00:49:57,660
helped with the legal case but the legal

00:49:54,960 --> 00:50:03,390
cases it's not an issue now so don't

00:49:57,660 --> 00:50:05,150
worry about it yeah so question was how

00:50:03,390 --> 00:50:07,800
is daytime storing things itself

00:50:05,150 --> 00:50:10,260
internally what it stores is something

00:50:07,800 --> 00:50:13,020
called radadiya rat idea which is Latin

00:50:10,260 --> 00:50:17,160
for something or other I never took

00:50:13,020 --> 00:50:19,650
Latin it's it's an epic system base it

00:50:17,160 --> 00:50:21,900
comes from kalindra chol calculations

00:50:19,650 --> 00:50:24,660
which is a book on date and time math

00:50:21,900 --> 00:50:26,640
and it's a it's so its stores number of

00:50:24,660 --> 00:50:28,230
days since the beginning of the

00:50:26,640 --> 00:50:29,910
gregorian calendar calendar and that

00:50:28,230 --> 00:50:31,860
number can be positive or negative and

00:50:29,910 --> 00:50:34,470
then for the time it just stores number

00:50:31,860 --> 00:50:36,210
of seconds in the current day so that's

00:50:34,470 --> 00:50:37,320
how it does it but that you never need

00:50:36,210 --> 00:50:39,780
to worry about that unless you're

00:50:37,320 --> 00:50:42,180
writing another calendar model module so

00:50:39,780 --> 00:50:46,020
it doesn't really expose that other

00:50:42,180 --> 00:50:48,000
questions you have no questions you all

00:50:46,020 --> 00:50:49,290
understood everything I said you're

00:50:48,000 --> 00:50:51,060
going to go back and write beautiful day

00:50:49,290 --> 00:50:53,250
time code and and not do things which

00:50:51,060 --> 00:50:55,310
make me sad well thank you thanks very

00:50:53,250 --> 00:50:55,310

YouTube URL: https://www.youtube.com/watch?v=SpZL71hPFEs


