Title: Sean Blanton   Perl in a Trading Environment: A Multi Pronged Success Story
Publication date: 2013-08-20
Playlist: YAPC::NA 2012
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:20,699
actual have enough length but we just

00:00:04,560 --> 00:00:24,810
started here yep hi everyone my name is

00:00:20,699 --> 00:00:28,710
Shawn should I'm Blanton and I'm going

00:00:24,810 --> 00:00:31,890
to give a survey over overview of how

00:00:28,710 --> 00:00:36,989
use pearl in the high-tech trading

00:00:31,890 --> 00:00:39,270
environment someone is looking for

00:00:36,989 --> 00:00:41,370
performance a lot of the performance

00:00:39,270 --> 00:00:46,200
related tasks are actually left to the

00:00:41,370 --> 00:00:48,270
C++ code but really well i'm going to

00:00:46,200 --> 00:00:53,550
emphasize the versatility of pearl in a

00:00:48,270 --> 00:00:56,460
variety of tasks and went one story i'm

00:00:53,550 --> 00:00:59,160
going to i'm going to looking into depth

00:00:56,460 --> 00:01:01,379
about services and using bread board

00:00:59,160 --> 00:01:04,920
that has really helped me a lot in my

00:01:01,379 --> 00:01:07,890
work so let's get this thing roll in

00:01:04,920 --> 00:01:13,740
here it's a little bit about the trading

00:01:07,890 --> 00:01:15,659
industry let's begin with so i'll start

00:01:13,740 --> 00:01:18,930
with this and how fitting that we would

00:01:15,659 --> 00:01:22,439
start a talk in wisconsin year one of

00:01:18,930 --> 00:01:25,890
the three Greek pillars of Wisconsin so

00:01:22,439 --> 00:01:34,560
what are the other two pillars cheese

00:01:25,890 --> 00:01:36,210
and Packers there you go okay so there's

00:01:34,560 --> 00:01:38,430
this great documentary that's available

00:01:36,210 --> 00:01:42,689
on Netflix it's called how be or save

00:01:38,430 --> 00:01:45,930
the world and right little just beer

00:01:42,689 --> 00:01:48,060
samples 7,000 years ago writing arose

00:01:45,930 --> 00:01:53,850
according to them specifically to

00:01:48,060 --> 00:01:55,409
support beer and barley trades and I did

00:01:53,850 --> 00:01:58,500
a little fact-checking a Wikipedia seems

00:01:55,409 --> 00:02:00,960
to back this up 11 bred only arose about

00:01:58,500 --> 00:02:02,369
3,000 years ago and they've even

00:02:00,960 --> 00:02:05,130
mentioned the documentary documentary

00:02:02,369 --> 00:02:07,170
that currently leavened bread comes by

00:02:05,130 --> 00:02:09,360
mixing a little bit of beer with this

00:02:07,170 --> 00:02:11,009
flatbread so anyway that's only three

00:02:09,360 --> 00:02:12,360
thousand years ago so we have the

00:02:11,009 --> 00:02:17,880
trading industry as

00:02:12,360 --> 00:02:24,960
than bread right here's a 4,000 year old

00:02:17,880 --> 00:02:26,460
receipt for a beer shipment it's about

00:02:24,960 --> 00:02:31,230
Chicago's trading industry that's where

00:02:26,460 --> 00:02:34,050
I'm located Chicago has some big players

00:02:31,230 --> 00:02:37,050
in derivatives trading for those

00:02:34,050 --> 00:02:39,870
derivatives usually that's associated

00:02:37,050 --> 00:02:43,230
with some huge loss that somebody

00:02:39,870 --> 00:02:45,420
occurred somebody incurred and little

00:02:43,230 --> 00:02:48,240
ladies losing their savings maybe I

00:02:45,420 --> 00:02:50,820
don't know but there's two big players

00:02:48,240 --> 00:02:52,920
there's the CME Group in chicago board

00:02:50,820 --> 00:02:55,040
options exchange and then there's

00:02:52,920 --> 00:02:56,850
another exchange

00:02:55,040 --> 00:03:00,090
IntercontinentalExchange they have their

00:02:56,850 --> 00:03:03,120
actual what we call the matching engine

00:03:00,090 --> 00:03:09,989
the trading engine in Chicago although

00:03:03,120 --> 00:03:11,130
they're headquartered in Atlanta so you

00:03:09,989 --> 00:03:12,420
know if you look about you know what I

00:03:11,130 --> 00:03:14,010
mean if you look at the money we know

00:03:12,420 --> 00:03:17,820
there's lots of money going on these

00:03:14,010 --> 00:03:20,100
days in the financial world and lots of

00:03:17,820 --> 00:03:22,110
things making us angry too about bad

00:03:20,100 --> 00:03:24,540
things happening with lots of money but

00:03:22,110 --> 00:03:27,630
the market capitalization give you an

00:03:24,540 --> 00:03:30,120
idea of where Chicago fits into the

00:03:27,630 --> 00:03:31,500
equation is you have the equities

00:03:30,120 --> 00:03:33,780
everybody knows about stocks they talk

00:03:31,500 --> 00:03:37,650
about stocks all the time Apple goes up

00:03:33,780 --> 00:03:40,560
apple going down Facebook down the

00:03:37,650 --> 00:03:43,860
market capitalization of these stocks

00:03:40,560 --> 00:03:47,640
equities in the u.s. is 30 trillion

00:03:43,860 --> 00:03:52,049
dollars the rest of the world 20

00:03:47,640 --> 00:03:55,019
trillion dollars and you have fixed

00:03:52,049 --> 00:03:58,200
income bonds and mostly government bonds

00:03:55,019 --> 00:04:01,110
64 trilling it's quite a bit but

00:03:58,200 --> 00:04:04,910
derivatives futures contracts options

00:04:01,110 --> 00:04:07,950
swaps four hundred and fifty trillion so

00:04:04,910 --> 00:04:10,730
the principal players in trading this

00:04:07,950 --> 00:04:15,769
four hundred and fifty trillion dollar

00:04:10,730 --> 00:04:15,769
derivatives market is on Chicago

00:04:18,790 --> 00:04:25,870
I this really I found this hilarious but

00:04:23,530 --> 00:04:27,910
the seamy group this big awesome player

00:04:25,870 --> 00:04:32,440
and derivatives was originally called

00:04:27,910 --> 00:04:34,600
the Chicago butter and egg board so from

00:04:32,440 --> 00:04:39,820
small beginnings come great things I

00:04:34,600 --> 00:04:42,580
guess with the in the and the Nazis do

00:04:39,820 --> 00:04:45,190
people use that term in the US the Nazis

00:04:42,580 --> 00:04:48,610
you know 2000s between two thousand and

00:04:45,190 --> 00:04:51,280
two thousand nine where you have a 00

00:04:48,610 --> 00:04:52,990
you know it's not the 2010s we don't

00:04:51,280 --> 00:04:56,620
really use a term like that in the

00:04:52,990 --> 00:04:59,560
United States but in the Nazis see me

00:04:56,620 --> 00:05:01,260
group ended up acquiring all these all

00:04:59,560 --> 00:05:06,190
these different Mercantile Exchange

00:05:01,260 --> 00:05:12,430
commodities and things like that I'll

00:05:06,190 --> 00:05:14,130
get this imperil all of these these

00:05:12,430 --> 00:05:15,850
companies i mentioned they're all

00:05:14,130 --> 00:05:19,750
electronic bass they're heavily

00:05:15,850 --> 00:05:22,780
electronic and the point is a huge

00:05:19,750 --> 00:05:26,860
electronic trading system our ecosystem

00:05:22,780 --> 00:05:29,970
has arisen in chicago and there are

00:05:26,860 --> 00:05:33,930
dozens if not maybe a hundred companies

00:05:29,970 --> 00:05:37,390
developing software in this industry and

00:05:33,930 --> 00:05:39,010
one of one of the things we can say with

00:05:37,390 --> 00:05:47,830
certainty i have to and then i changed

00:05:39,010 --> 00:05:49,240
it for 3 30 G's linux c++ and pearl so

00:05:47,830 --> 00:05:51,630
if you look in like the job market in

00:05:49,240 --> 00:05:54,550
chicago you see unlike the rest of the

00:05:51,630 --> 00:05:58,090
country that's trying to hire net and

00:05:54,550 --> 00:06:01,270
java programmers in chicago a large

00:05:58,090 --> 00:06:11,730
fraction either half or a third of all

00:06:01,270 --> 00:06:11,730
development positions are for c++ yes

00:06:12,710 --> 00:06:22,790
shout out to Chicago yam and windy city

00:06:18,170 --> 00:06:26,060
but also the Chicago pro mongers is

00:06:22,790 --> 00:06:28,560
often hosted by the bank of america

00:06:26,060 --> 00:06:30,420
market data group so we got the trade

00:06:28,560 --> 00:06:38,490
ministry getting back to the Pearl

00:06:30,420 --> 00:06:41,520
community for generously so yeah so I

00:06:38,490 --> 00:06:45,750
work rich for chopper trading and work

00:06:41,520 --> 00:06:49,890
for the straining friend and not you

00:06:45,750 --> 00:06:52,860
know they're not all evil I'm very very

00:06:49,890 --> 00:06:56,250
proud that we have very high ethical

00:06:52,860 --> 00:07:03,600
standards it's demanded boss says I'm

00:06:56,250 --> 00:07:06,030
not going to jail and it's named named

00:07:03,600 --> 00:07:10,070
after a friendly dog but the owners dog

00:07:06,030 --> 00:07:12,420
who definitely outranks me in a company

00:07:10,070 --> 00:07:17,520
head-to-head I would definitely go

00:07:12,420 --> 00:07:20,910
before the dog did and you know we

00:07:17,520 --> 00:07:25,770
terrible charitable giving Big Brother

00:07:20,910 --> 00:07:27,900
Big Sister program or program obama

00:07:25,770 --> 00:07:30,710
fundraiser so you no answer there's all

00:07:27,900 --> 00:07:35,540
there's room for all all clients care

00:07:30,710 --> 00:07:37,950
see what I got here and I'm not going to

00:07:35,540 --> 00:07:40,680
you know we the main goal of the

00:07:37,950 --> 00:07:43,169
business is not to save babies or plant

00:07:40,680 --> 00:07:46,890
a lot of trees so I'm not really here to

00:07:43,169 --> 00:07:53,280
try to tell you this is you know the

00:07:46,890 --> 00:07:55,440
most I don't know the most but you know

00:07:53,280 --> 00:07:58,500
it's a it's a great place to work with

00:07:55,440 --> 00:08:04,020
awesome technology and very very sharp

00:07:58,500 --> 00:08:05,940
people given a lot of resources to do

00:08:04,020 --> 00:08:10,080
things the way we think they should be

00:08:05,940 --> 00:08:14,340
done or held accountable for performance

00:08:10,080 --> 00:08:18,210
and delivering things but I really like

00:08:14,340 --> 00:08:20,070
the environment there and we all feel

00:08:18,210 --> 00:08:21,870
the way all feel these days that we have

00:08:20,070 --> 00:08:24,840
to answer why are we doing this in

00:08:21,870 --> 00:08:26,070
Python i'm so i'm so tired of that and

00:08:24,840 --> 00:08:32,810
when I wrote the slot

00:08:26,070 --> 00:08:32,810
I made a typo but I liked it so I love

00:08:36,440 --> 00:08:44,730
so yeah Python is is trendy of course

00:08:40,970 --> 00:08:46,020
and I used to work I used to travel

00:08:44,730 --> 00:08:48,630
around used to work for open make

00:08:46,020 --> 00:08:52,110
software Quinn Bailey over here gave a

00:08:48,630 --> 00:08:54,270
talk this morning and software

00:08:52,110 --> 00:08:55,860
developers are some of the trendiest

00:08:54,270 --> 00:08:58,380
people they're like 14 year old girls

00:08:55,860 --> 00:08:59,880
and they they just go to new

00:08:58,380 --> 00:09:01,920
technologies and they'll all want to get

00:08:59,880 --> 00:09:03,750
on the same technology and I don't

00:09:01,920 --> 00:09:09,420
really feel like feel like that's a case

00:09:03,750 --> 00:09:13,020
in the pearl community but so yeah pearl

00:09:09,420 --> 00:09:16,590
pearls it in the trading industry you

00:09:13,020 --> 00:09:19,320
know I don't want to you know if I'm

00:09:16,590 --> 00:09:20,820
going to do a serious job everybody

00:09:19,320 --> 00:09:23,430
feels that pearl is the tool to do that

00:09:20,820 --> 00:09:25,890
and if you want a cute script it looks

00:09:23,430 --> 00:09:29,130
like COBOL feel free to use Python I

00:09:25,890 --> 00:09:33,450
just don't understand everything else is

00:09:29,130 --> 00:09:35,910
in C and in Linux and of course we know

00:09:33,450 --> 00:09:39,630
pearl has a great relationship with the

00:09:35,910 --> 00:09:42,450
linux environment and sea-based python

00:09:39,630 --> 00:09:44,430
sea bass to write but it's this

00:09:42,450 --> 00:09:48,540
integration into the environment that

00:09:44,430 --> 00:09:50,370
helps pearl be successful and so it's

00:09:48,540 --> 00:09:54,090
also part of the industry tradition and

00:09:50,370 --> 00:09:56,190
then you know couple personal notes you

00:09:54,090 --> 00:10:01,770
know CPM is awesome makes it very easy

00:09:56,190 --> 00:10:03,030
to find libraries and docks a speed is

00:10:01,770 --> 00:10:05,760
very important sometimes are under

00:10:03,030 --> 00:10:08,520
pressure to to get they get things

00:10:05,760 --> 00:10:10,620
turned around fast just great support

00:10:08,520 --> 00:10:17,330
from the community all these things

00:10:10,620 --> 00:10:17,330
really help me do my job so

00:10:18,240 --> 00:10:25,990
yeah so I've been a chopper for almost

00:10:22,600 --> 00:10:29,860
three years and i use pearl for a lot of

00:10:25,990 --> 00:10:31,570
stuff i joined a team that i was the

00:10:29,860 --> 00:10:33,160
fourth member of a team really didn't

00:10:31,570 --> 00:10:35,790
have much going on in terms of

00:10:33,160 --> 00:10:39,279
infrastructure of an application and

00:10:35,790 --> 00:10:42,010
over that time first of all I learned

00:10:39,279 --> 00:10:46,480
how to code much better than I ever

00:10:42,010 --> 00:10:48,760
coded before and use it for primarily

00:10:46,480 --> 00:10:51,480
for supporting the application that we

00:10:48,760 --> 00:10:53,829
use for trading quite complex

00:10:51,480 --> 00:10:57,029
configuration but a lot of things like

00:10:53,829 --> 00:11:01,990
make servers go up make servers go down

00:10:57,029 --> 00:11:07,240
some system and administration I do data

00:11:01,990 --> 00:11:10,300
collection I do reporting I generate XL

00:11:07,240 --> 00:11:14,019
reports it puts stuff on the web have a

00:11:10,300 --> 00:11:18,130
website for the team the wikis I'll run

00:11:14,019 --> 00:11:24,339
in Perl and I started doing some data

00:11:18,130 --> 00:11:27,940
analysis with PDL and I just got handed

00:11:24,339 --> 00:11:32,100
the get and build job get it get an

00:11:27,940 --> 00:11:35,260
admin and build admin for our team so

00:11:32,100 --> 00:11:38,470
been using this so you know tools that

00:11:35,260 --> 00:11:42,459
helped create a topamax software mojo

00:11:38,470 --> 00:11:45,040
and and Meister mojo is a job control

00:11:42,459 --> 00:11:46,959
tool that basically it executes smile

00:11:45,040 --> 00:11:49,959
scripts for me on a schedule and gives

00:11:46,959 --> 00:11:54,490
me great reporting back to a central web

00:11:49,959 --> 00:11:58,540
server and yeah Meister is the awesome

00:11:54,490 --> 00:12:01,510
build tool so your insurance companies

00:11:58,540 --> 00:12:03,670
and your banks and your ATMs and your

00:12:01,510 --> 00:12:09,180
voting machines they're all compiled

00:12:03,670 --> 00:12:12,670
with Meister not was going to make and

00:12:09,180 --> 00:12:14,199
as I added you know functionality in

00:12:12,670 --> 00:12:17,589
this environment as i started doing new

00:12:14,199 --> 00:12:19,959
things I really objectively looked at

00:12:17,589 --> 00:12:22,810
what tools i going to use for each of

00:12:19,959 --> 00:12:27,940
these items and I kept coming back to

00:12:22,810 --> 00:12:29,709
parole and you know it's it's great and

00:12:27,940 --> 00:12:30,750
I wanted to make a special note about

00:12:29,709 --> 00:12:38,390
PDL

00:12:30,750 --> 00:12:41,220
have yell guys here Dave and so

00:12:38,390 --> 00:12:43,170
everything I have is in Pearl and if I

00:12:41,220 --> 00:12:47,370
didn't do data analysis it makes sense

00:12:43,170 --> 00:12:49,680
to stay with pearl and there's there's

00:12:47,370 --> 00:12:52,890
many tools out there matlab and things

00:12:49,680 --> 00:12:55,680
like that ours trendy open source data

00:12:52,890 --> 00:13:00,420
analysis tool and i just want to say in

00:12:55,680 --> 00:13:01,650
a public forum how much I hate are you

00:13:00,420 --> 00:13:04,980
know it's trying to get data out of

00:13:01,650 --> 00:13:06,480
database and every every plugin is

00:13:04,980 --> 00:13:12,060
written by a different person with their

00:13:06,480 --> 00:13:14,670
own idea of how standard should be uh so

00:13:12,060 --> 00:13:17,070
yeah and I'm not quite there yet but I

00:13:14,670 --> 00:13:18,510
start I started this project and but I'm

00:13:17,070 --> 00:13:22,770
going to get you know data from database

00:13:18,510 --> 00:13:24,770
I'm with my I'm starting to give some

00:13:22,770 --> 00:13:28,860
hints about where I'm going here with my

00:13:24,770 --> 00:13:31,260
database execution service and do some

00:13:28,860 --> 00:13:34,140
data transform with pearl hand at the

00:13:31,260 --> 00:13:37,470
PDL do some processing get some

00:13:34,140 --> 00:13:40,440
statistics out of my data set take the

00:13:37,470 --> 00:13:45,050
results and put it back on to the web

00:13:40,440 --> 00:13:48,540
and using Perl template toolkit and

00:13:45,050 --> 00:13:52,440
jquery am j plab you little JavaScript

00:13:48,540 --> 00:14:00,210
there so that's a really attractive way

00:13:52,440 --> 00:14:02,970
to wait a role yeah okay so I have a lot

00:14:00,210 --> 00:14:04,650
of bullet points sorry about that you

00:14:02,970 --> 00:14:06,270
know if I hadn't made 10 more hours

00:14:04,650 --> 00:14:15,200
there I kind of thought I could get rid

00:14:06,270 --> 00:14:21,180
of some of them go on to you logging so

00:14:15,200 --> 00:14:23,310
am I in my environment logging is like

00:14:21,180 --> 00:14:25,230
the most one of most critical functions

00:14:23,310 --> 00:14:26,370
and if you're going to be if you want to

00:14:25,230 --> 00:14:28,440
know if your servers going up and down

00:14:26,370 --> 00:14:32,430
you really need to have a persistent

00:14:28,440 --> 00:14:36,330
record of what happened and so in my

00:14:32,430 --> 00:14:38,640
code everything has access to a lager

00:14:36,330 --> 00:14:40,740
everything must I will lager which is

00:14:38,640 --> 00:14:42,649
not the same thing as saying everything

00:14:40,740 --> 00:14:47,420
is locked

00:14:42,649 --> 00:14:50,209
right so my executable parole my pro

00:14:47,420 --> 00:14:51,800
classes but pearl services anything that

00:14:50,209 --> 00:14:55,009
does anything important or could produce

00:14:51,800 --> 00:14:56,720
an error has access to a logger I'd like

00:14:55,009 --> 00:15:01,939
a couple classes that just have data but

00:14:56,720 --> 00:15:04,220
I have something I've really enjoyed as

00:15:01,939 --> 00:15:06,589
having a daily log file that

00:15:04,220 --> 00:15:09,439
automatically rotates so every day I

00:15:06,589 --> 00:15:11,600
have a record of every script that was

00:15:09,439 --> 00:15:13,850
run throughout the day so I know I

00:15:11,600 --> 00:15:15,709
always know exactly what happened you

00:15:13,850 --> 00:15:19,279
know something gets screwed up I go and

00:15:15,709 --> 00:15:22,999
see oh I ran this this this was there an

00:15:19,279 --> 00:15:25,850
error whatever so that that's a bit of a

00:15:22,999 --> 00:15:31,399
site I really really stick with stand

00:15:25,850 --> 00:15:34,369
behind and what messages to lock right

00:15:31,399 --> 00:15:37,699
creating useful log files let's say a

00:15:34,369 --> 00:15:39,550
partly Mart but mostly common sense how

00:15:37,699 --> 00:15:42,319
many people have had to deal with

00:15:39,550 --> 00:15:44,619
horrific there's a second time you use

00:15:42,319 --> 00:15:47,779
the word log files black files with

00:15:44,619 --> 00:15:50,300
complete garbage thousands and tens of

00:15:47,779 --> 00:15:54,290
thousands of lines of useless material

00:15:50,300 --> 00:15:57,649
yes that's common so i'm not sure people

00:15:54,290 --> 00:15:59,449
a lot some people obviously don't I'm

00:15:57,649 --> 00:16:01,189
not sure they put enough attention into

00:15:59,449 --> 00:16:04,759
really thinking about what is a useful

00:16:01,189 --> 00:16:06,499
log message and you know I think you

00:16:04,759 --> 00:16:10,629
just say why am I reading a log file

00:16:06,499 --> 00:16:14,740
well I want to determine if my program

00:16:10,629 --> 00:16:17,240
succeeded and its prime your objectives

00:16:14,740 --> 00:16:20,420
we often I want to see a little bit a

00:16:17,240 --> 00:16:22,189
roadmap to make sure that I don't just

00:16:20,420 --> 00:16:24,889
get you know I don't want a 1 or 0 at

00:16:22,189 --> 00:16:28,429
the end of an important program

00:16:24,889 --> 00:16:30,379
execution and then of course you know

00:16:28,429 --> 00:16:34,040
some basic reason for failure of the

00:16:30,379 --> 00:16:36,379
program did not succeed and I think

00:16:34,040 --> 00:16:37,939
people sometimes try to provide too much

00:16:36,379 --> 00:16:40,490
information because if there's a defect

00:16:37,939 --> 00:16:43,369
they'll get all of the debug information

00:16:40,490 --> 00:16:45,470
that they need to narrow down the

00:16:43,369 --> 00:16:49,040
problem although that usually doesn't

00:16:45,470 --> 00:16:52,999
work so you know can always temporarily

00:16:49,040 --> 00:16:55,430
increase the logging and narrow it down

00:16:52,999 --> 00:16:57,320
and of course as a rule of thumb if you

00:16:55,430 --> 00:16:59,210
go to read a log in Roy's skipping

00:16:57,320 --> 00:17:07,309
through lines then why are they there

00:16:59,210 --> 00:17:12,309
take them out we have so I use log lock

00:17:07,309 --> 00:17:17,540
for parole and we have a guest here

00:17:12,309 --> 00:17:20,150
who's from Turkey but this is a lock

00:17:17,540 --> 00:17:26,079
based on log4j very successful logging

00:17:20,150 --> 00:17:26,079
program who here is following euro 2012

00:17:26,829 --> 00:17:31,700
fortunately turkey didn't make it but

00:17:29,179 --> 00:17:35,059
they beat two of the teams that are in

00:17:31,700 --> 00:17:38,300
it right now recently who thinks Germany

00:17:35,059 --> 00:17:40,970
is going to win anybody no opinions ok

00:17:38,300 --> 00:17:51,890
Jeremy's anyway all right any of anybody

00:17:40,970 --> 00:17:55,970
else any up Spain so married to a

00:17:51,890 --> 00:17:58,760
Turkish woman and it's so logging I've

00:17:55,970 --> 00:18:01,160
always thought you know being exposed

00:17:58,760 --> 00:18:05,510
bits of Turkey I'm going for my 14th

00:18:01,160 --> 00:18:08,120
time here the summer but a number of

00:18:05,510 --> 00:18:10,760
people in are extremely scrupulous you

00:18:08,120 --> 00:18:13,370
know every step detail I witnessed a

00:18:10,760 --> 00:18:15,290
poor friend of mine experience emotional

00:18:13,370 --> 00:18:17,750
trauma because we deviated slightly from

00:18:15,290 --> 00:18:20,179
a recipe one time so like every step

00:18:17,750 --> 00:18:27,020
must befall or every stuff you like so i

00:18:20,179 --> 00:18:34,360
just have a another example of that sort

00:18:27,020 --> 00:18:42,460
of precision here huh why am I I see oh

00:18:34,360 --> 00:18:42,460
well there's a goal of the year in 2010

00:18:42,640 --> 00:18:50,920
I'm at work very nice like that

00:18:46,220 --> 00:18:50,920
precision see detail exact

00:18:54,539 --> 00:19:00,340
now can I get back to where I was it's

00:18:57,580 --> 00:19:05,460
my first time using google docs for

00:19:00,340 --> 00:19:07,840
presentation oh yeah there was this one

00:19:05,460 --> 00:19:15,820
great i guess i have to file through

00:19:07,840 --> 00:19:20,200
here so thank you get some small people

00:19:15,820 --> 00:19:22,960
alright so i was like preparing for this

00:19:20,200 --> 00:19:24,429
talk and i want to look at moose to get

00:19:22,960 --> 00:19:26,380
a little description of what they said

00:19:24,429 --> 00:19:28,179
they were and I then I went to get a

00:19:26,380 --> 00:19:30,760
picture of a moose so I searched on

00:19:28,179 --> 00:19:34,029
google images for moose just moose and

00:19:30,760 --> 00:19:36,399
this came up this is andy Lester I don't

00:19:34,029 --> 00:19:40,950
know if he's here I've never actually

00:19:36,399 --> 00:19:43,960
met him face-to-face i think but

00:19:40,950 --> 00:19:45,820
obviously chrome and google conspired to

00:19:43,960 --> 00:19:52,360
provide what they thought I wanted to

00:19:45,820 --> 00:19:54,760
see ya I wanted to move us but anyway

00:19:52,360 --> 00:19:58,179
that's pretty funny pictures but that's

00:19:54,760 --> 00:20:03,370
all right I got one last look right so

00:19:58,179 --> 00:20:08,710
um anybody here not used moose okay it's

00:20:03,370 --> 00:20:11,320
okay i do i end up with quite a lot of

00:20:08,710 --> 00:20:12,760
code and i find you know a good object

00:20:11,320 --> 00:20:15,669
morning sis come is really important for

00:20:12,760 --> 00:20:19,120
my work and so i really like really like

00:20:15,669 --> 00:20:23,200
most really helps me a lot i can create

00:20:19,120 --> 00:20:24,820
classes very quickly and you know

00:20:23,200 --> 00:20:27,340
powerful features like the standard I

00:20:24,820 --> 00:20:29,590
mean plenty of people plenty of people

00:20:27,340 --> 00:20:33,220
give you plenty of reasons why they like

00:20:29,590 --> 00:20:37,649
moose I like it easy to read which also

00:20:33,220 --> 00:20:39,970
helps me do things faster if I need to

00:20:37,649 --> 00:20:43,570
another thing that helps me out

00:20:39,970 --> 00:20:49,659
tremendously is eclipse anybody use

00:20:43,570 --> 00:20:51,669
eclipse with pearl here okay yeah so it

00:20:49,659 --> 00:20:54,640
really helps if you have a large code

00:20:51,669 --> 00:21:00,190
base my favorite editor is still them

00:20:54,640 --> 00:21:03,130
but but I can get access to the whole

00:21:00,190 --> 00:21:04,419
code base much easier with eclipse with

00:21:03,130 --> 00:21:08,350
full review

00:21:04,419 --> 00:21:09,759
and you know I also have some bits of

00:21:08,350 --> 00:21:13,109
code I do a lot of stored procedure

00:21:09,759 --> 00:21:18,220
writing so I use eclipse for managing

00:21:13,109 --> 00:21:22,450
database code so yeah it's a good tool

00:21:18,220 --> 00:21:25,029
should think about it and this is really

00:21:22,450 --> 00:21:30,609
just a section break call its service

00:21:25,029 --> 00:21:33,879
oriented pro I don't you get a little

00:21:30,609 --> 00:21:37,029
faster here so how I define a service so

00:21:33,879 --> 00:21:40,239
i'm saying i'm creating services what do

00:21:37,029 --> 00:21:42,220
i mean by that ok it's a highly reusable

00:21:40,239 --> 00:21:46,029
collection of code usually consists of

00:21:42,220 --> 00:21:48,850
multiple classes or subroutines so i'm

00:21:46,029 --> 00:21:52,859
looking for something that has a single

00:21:48,850 --> 00:21:55,690
well-defined interface a single focus so

00:21:52,859 --> 00:21:57,639
logging I have a logging service all I

00:21:55,690 --> 00:22:00,940
want it to do is give me a logging

00:21:57,639 --> 00:22:03,279
handle I have database services give me

00:22:00,940 --> 00:22:05,230
a connection to this database I don't

00:22:03,279 --> 00:22:07,960
want to go and type the username and

00:22:05,230 --> 00:22:13,059
password and ESN and my code I want a

00:22:07,960 --> 00:22:15,909
high level ability to to get whatever it

00:22:13,059 --> 00:22:20,799
is well find data a set of data or

00:22:15,909 --> 00:22:23,049
objects and these services depend on

00:22:20,799 --> 00:22:28,779
other services so everything depends on

00:22:23,049 --> 00:22:31,960
the logging service so it helps get you

00:22:28,779 --> 00:22:34,809
to that single level of abstraction at a

00:22:31,960 --> 00:22:38,289
high level so I'm doing a lot of

00:22:34,809 --> 00:22:41,619
high-level code coding I'm going to end

00:22:38,289 --> 00:22:43,570
up doing something like this so at the

00:22:41,619 --> 00:22:46,419
beginning I have a list of host names

00:22:43,570 --> 00:22:49,480
and I have applications running on each

00:22:46,419 --> 00:22:52,809
of those servers I'm going to create a

00:22:49,480 --> 00:22:54,999
server object that represents the the

00:22:52,809 --> 00:22:59,499
program it's running on that host name

00:22:54,999 --> 00:23:02,919
and in order to do that I create will

00:22:59,499 --> 00:23:05,859
see this container and i'll end up

00:23:02,919 --> 00:23:07,980
getting my service for this particular

00:23:05,859 --> 00:23:14,440
application i create a list of processes

00:23:07,980 --> 00:23:16,980
servers and i end up you know i'll go

00:23:14,440 --> 00:23:16,980
through this but

00:23:17,309 --> 00:23:23,530
forking out the processes and this is a

00:23:20,140 --> 00:23:27,880
restart so under child actions I stopped

00:23:23,530 --> 00:23:33,220
and start the program so it gives nice

00:23:27,880 --> 00:23:35,200
clean code right so I consider them a

00:23:33,220 --> 00:23:37,870
little higher level abstraction

00:23:35,200 --> 00:23:40,270
encapsulation the typical perl module so

00:23:37,870 --> 00:23:42,640
I logging service can hide a lot of the

00:23:40,270 --> 00:23:46,570
setup and configuration of logging the

00:23:42,640 --> 00:23:48,040
log for parole can be kind of can take a

00:23:46,570 --> 00:23:50,080
lot of work to get exactly what you want

00:23:48,040 --> 00:23:52,059
their the configuration file whereas a

00:23:50,080 --> 00:23:54,820
configuration file all that stuff is

00:23:52,059 --> 00:23:56,650
hidden right again it said that the

00:23:54,820 --> 00:24:01,740
database just give me the connection

00:23:56,650 --> 00:24:04,330
hides the DSN an initial connection and

00:24:01,740 --> 00:24:08,890
just give me the data please if I want

00:24:04,330 --> 00:24:10,480
some specific set of data all right and

00:24:08,890 --> 00:24:13,900
now we have services that depend on

00:24:10,480 --> 00:24:15,910
other services data service depends on

00:24:13,900 --> 00:24:18,190
the database connection service and it

00:24:15,910 --> 00:24:20,020
also depends in the logging service the

00:24:18,190 --> 00:24:22,630
database connection service depends on

00:24:20,020 --> 00:24:26,410
blogging service everything gets log I

00:24:22,630 --> 00:24:29,580
mean everything has a logger so when I

00:24:26,410 --> 00:24:32,950
started out hey this is great I'll just

00:24:29,580 --> 00:24:39,490
I'll just kind of include include the

00:24:32,950 --> 00:24:41,740
code for my log right here and that that

00:24:39,490 --> 00:24:44,650
works fine if it you know if it's simple

00:24:41,740 --> 00:24:50,940
I can just sort of import my lagging

00:24:44,650 --> 00:24:50,940
service and retrieve the log here and

00:24:51,030 --> 00:24:56,260
yeah one point I was somebody told me I

00:24:53,590 --> 00:24:58,240
was wrong for doing this but there's

00:24:56,260 --> 00:25:05,790
this module new sex log for parole which

00:24:58,240 --> 00:25:08,320
is exactly what this is so there and

00:25:05,790 --> 00:25:09,580
well you know it's fine for simple

00:25:08,320 --> 00:25:11,650
services but now we're just going to get

00:25:09,580 --> 00:25:13,929
into a little more complex example I

00:25:11,650 --> 00:25:16,720
just want to get a list of all the beers

00:25:13,929 --> 00:25:21,100
right so I have a service called beer

00:25:16,720 --> 00:25:25,450
data and I need to log in my program

00:25:21,100 --> 00:25:26,950
that you know what I'm doing so I need a

00:25:25,450 --> 00:25:28,900
logging service and I need a beer data

00:25:26,950 --> 00:25:29,470
service but the beer data service

00:25:28,900 --> 00:25:30,760
required

00:25:29,470 --> 00:25:35,620
is a database connection so I have to

00:25:30,760 --> 00:25:37,840
import the database connection but you

00:25:35,620 --> 00:25:43,270
know I know sorry I apologize for the

00:25:37,840 --> 00:25:48,460
slide but right I only want your data

00:25:43,270 --> 00:25:51,070
and lager but I need to also include the

00:25:48,460 --> 00:25:52,990
database connection for this type of

00:25:51,070 --> 00:25:56,590
service the Davis connection pens and

00:25:52,990 --> 00:25:59,140
lager okay that's not relevant but uh

00:25:56,590 --> 00:26:00,610
you know let's skip to the end I'm

00:25:59,140 --> 00:26:02,140
required to have knowledge of the

00:26:00,610 --> 00:26:04,299
service dependencies here so I had to

00:26:02,140 --> 00:26:06,130
know in my head that the beer data

00:26:04,299 --> 00:26:09,549
service needed a database connection I

00:26:06,130 --> 00:26:11,860
don't want to do that I don't want to

00:26:09,549 --> 00:26:14,320
know the dependencies I want to reuse

00:26:11,860 --> 00:26:15,610
everything and that's giving me a low

00:26:14,320 --> 00:26:17,110
level service when I really want a high

00:26:15,610 --> 00:26:19,480
level service so it's breaking that

00:26:17,110 --> 00:26:23,530
single level of abstraction that we came

00:26:19,480 --> 00:26:27,850
for so what I really want to do is just

00:26:23,530 --> 00:26:30,070
basically you know get my lager get my

00:26:27,850 --> 00:26:33,700
beer data and have the beer beer data

00:26:30,070 --> 00:26:37,120
just give me the beer data hi the

00:26:33,700 --> 00:26:41,230
implementation so of course and that

00:26:37,120 --> 00:26:43,750
first person runs this problem you know

00:26:41,230 --> 00:26:47,169
what they call this there's inversion of

00:26:43,750 --> 00:26:50,679
control that's kind of a name it doesn't

00:26:47,169 --> 00:26:51,820
really mean a lot to me but what we

00:26:50,679 --> 00:26:55,510
really want to do is we wanted the

00:26:51,820 --> 00:26:59,260
couple service functionality so we want

00:26:55,510 --> 00:27:01,270
to be able to yeah d couple them and

00:26:59,260 --> 00:27:09,039
then we need some way to reassemble our

00:27:01,270 --> 00:27:11,559
services with right dependencies so the

00:27:09,039 --> 00:27:16,750
dependencies should be resolved and we

00:27:11,559 --> 00:27:18,700
should reduce redundancy okay the log

00:27:16,750 --> 00:27:20,919
service for example we want to create

00:27:18,700 --> 00:27:22,299
like a bunch of log classes for

00:27:20,919 --> 00:27:25,960
everything we're going to do we want a

00:27:22,299 --> 00:27:28,240
singleton so that every every services

00:27:25,960 --> 00:27:33,669
is using the same vlogger logging

00:27:28,240 --> 00:27:38,610
service so the Pearl solution ends up

00:27:33,669 --> 00:27:38,610
being one solution is with breadboard

00:27:39,360 --> 00:27:49,710
and that's a breadboard anybody ever

00:27:43,080 --> 00:27:52,890
worked with a breadboard great so yeah

00:27:49,710 --> 00:27:54,929
so breadboards designed for this John

00:27:52,890 --> 00:27:58,500
rockaway suggested it and I'm eternally

00:27:54,929 --> 00:27:59,850
grateful for that so it took me in a

00:27:58,500 --> 00:28:02,880
while to plow through the documentation

00:27:59,850 --> 00:28:06,450
and come up over the way that was easy

00:28:02,880 --> 00:28:09,900
to use to make it easy to use and work

00:28:06,450 --> 00:28:12,540
for me so yeah be careful when you dive

00:28:09,900 --> 00:28:15,030
into breadboard you know I have

00:28:12,540 --> 00:28:19,940
difficulty with documentation there's a

00:28:15,030 --> 00:28:23,160
lot of cool stuff in there right so as

00:28:19,940 --> 00:28:24,690
alluded to before this abstraction layer

00:28:23,160 --> 00:28:29,880
we're going to have is called a

00:28:24,690 --> 00:28:32,220
container so we have you know certain

00:28:29,880 --> 00:28:34,740
services and sources depend on other

00:28:32,220 --> 00:28:40,559
services what the container does that

00:28:34,740 --> 00:28:43,290
actually so we have a way to define our

00:28:40,559 --> 00:28:45,870
dependencies to say that the database

00:28:43,290 --> 00:28:52,260
connections service depends on the

00:28:45,870 --> 00:28:55,500
logging service and now we look for our

00:28:52,260 --> 00:28:59,210
our beer I'm going to change the name of

00:28:55,500 --> 00:29:01,590
service beer data or Bureau list service

00:28:59,210 --> 00:29:03,210
right i can define that the bureau list

00:29:01,590 --> 00:29:04,980
service depends on a database connection

00:29:03,210 --> 00:29:07,230
service and the lightning service a

00:29:04,980 --> 00:29:11,990
disconnection service ends on blogging

00:29:07,230 --> 00:29:16,169
service logging services by itself and

00:29:11,990 --> 00:29:21,720
so now I I basically get what I was

00:29:16,169 --> 00:29:23,340
looking for don't have to put in a DB

00:29:21,720 --> 00:29:27,480
connection service actually as code is

00:29:23,340 --> 00:29:31,230
not selling anything new here so now

00:29:27,480 --> 00:29:33,660
instead of you might use you might use a

00:29:31,230 --> 00:29:35,820
class or an object for your service but

00:29:33,660 --> 00:29:39,059
instead of instantiating that class or

00:29:35,820 --> 00:29:40,980
object you instead now instantiate a

00:29:39,059 --> 00:29:43,890
container so you have a container class

00:29:40,980 --> 00:29:45,990
you create a container then you ask the

00:29:43,890 --> 00:29:50,610
container to give you your service with

00:29:45,990 --> 00:29:51,840
all the all the dependencies and so it

00:29:50,610 --> 00:29:54,900
looks like this

00:29:51,840 --> 00:29:58,289
to find the container giving you the

00:29:54,900 --> 00:30:01,740
service that I asked for and give me

00:29:58,289 --> 00:30:04,460
another service and give me the bureau

00:30:01,740 --> 00:30:10,230
list so it's a pretty simple trade off

00:30:04,460 --> 00:30:12,260
and don't have to know the detail so

00:30:10,230 --> 00:30:15,570
we've successfully hit the

00:30:12,260 --> 00:30:18,990
implementation so going a little bit

00:30:15,570 --> 00:30:21,270
more detail and then very slowly but

00:30:18,990 --> 00:30:24,960
what I really ended up with instead of a

00:30:21,270 --> 00:30:27,090
single member to import the service you

00:30:24,960 --> 00:30:28,350
typically have multiple members so when

00:30:27,090 --> 00:30:30,990
you when you have a container and you

00:30:28,350 --> 00:30:32,760
ask for service I get a logging service

00:30:30,990 --> 00:30:38,539
I don't actually get the logging handle

00:30:32,760 --> 00:30:42,000
that I wanted to use so i need to have I

00:30:38,539 --> 00:30:44,100
need to define this blog service and a

00:30:42,000 --> 00:30:45,899
convenience method so just give me the

00:30:44,100 --> 00:30:47,789
logger the logging handle that I want

00:30:45,899 --> 00:30:50,190
that for log for Pearl so that i can log

00:30:47,789 --> 00:30:57,090
messages the log service by itself is

00:30:50,190 --> 00:30:58,529
not very useful so now i could be back

00:30:57,090 --> 00:31:00,929
in the situation where I have to well I

00:30:58,529 --> 00:31:04,470
need a log I need a log service I have

00:31:00,929 --> 00:31:06,059
to define all this stuff but now I'm

00:31:04,470 --> 00:31:08,610
back to using a roll now I can use a

00:31:06,059 --> 00:31:15,380
role to give me the methods that that

00:31:08,610 --> 00:31:24,270
service uses a requires in into my

00:31:15,380 --> 00:31:26,820
calling class so now instead of defining

00:31:24,270 --> 00:31:30,539
every member produced by logging service

00:31:26,820 --> 00:31:33,870
I can include it by a role and now my

00:31:30,539 --> 00:31:37,200
coat looks like this where i have with

00:31:33,870 --> 00:31:39,750
the logging service role with a beer

00:31:37,200 --> 00:31:42,000
data-role and now i'm really getting

00:31:39,750 --> 00:31:45,240
there i'm really getting to what what i

00:31:42,000 --> 00:31:46,710
want the code to look like and for me

00:31:45,240 --> 00:31:49,440
coming with a little bit of a sea

00:31:46,710 --> 00:31:53,520
background it's really like importing

00:31:49,440 --> 00:31:55,950
header files and using a library and i

00:31:53,520 --> 00:32:00,510
wish i could have a different extension

00:31:55,950 --> 00:32:01,470
for roles than for other perl modules

00:32:00,510 --> 00:32:04,039
and classes

00:32:01,470 --> 00:32:09,360
I don't know that's not possible is it I

00:32:04,039 --> 00:32:31,049
looked into it a little bit you have an

00:32:09,360 --> 00:32:36,990
alternate extension for bro modules what

00:32:31,049 --> 00:32:40,020
the only do it yeah yeah so I'm gonna

00:32:36,990 --> 00:32:44,669
happen either I'm lazy I want an easy

00:32:40,020 --> 00:32:47,610
life not a hard life and I'm sure your

00:32:44,669 --> 00:32:49,230
your container if you need to pass

00:32:47,610 --> 00:32:51,179
arguments to define your service

00:32:49,230 --> 00:32:52,950
correctly you don't pass arguments to

00:32:51,179 --> 00:32:56,220
the service directly you pass those

00:32:52,950 --> 00:32:59,730
arguments to the container so if I want

00:32:56,220 --> 00:33:02,309
only dark beers for my beer data service

00:32:59,730 --> 00:33:10,650
then I can pass it this beer filter to

00:33:02,309 --> 00:33:14,070
say I only want dark beers so you see

00:33:10,650 --> 00:33:16,169
how the service is as resolved because

00:33:14,070 --> 00:33:18,600
the container already has the data it it

00:33:16,169 --> 00:33:20,640
knows that beer data uses the beer

00:33:18,600 --> 00:33:24,450
filter there's some details and not

00:33:20,640 --> 00:33:31,460
showing here but so I'm trying to create

00:33:24,450 --> 00:33:34,230
a some simple services and put it on

00:33:31,460 --> 00:33:42,480
putting putting it on github and perhaps

00:33:34,230 --> 00:33:44,309
get something for Sipan you skip that

00:33:42,480 --> 00:33:47,370
for a second I do want to say that what

00:33:44,309 --> 00:33:50,730
do you get with breadboard one thing you

00:33:47,370 --> 00:33:56,100
do get with red board is awesome stack

00:33:50,730 --> 00:33:58,380
traces this is yeah I think I truncated

00:33:56,100 --> 00:34:02,520
this one no I didn't that's the full

00:33:58,380 --> 00:34:04,230
stack trace so yeah you can it's doing

00:34:02,520 --> 00:34:07,650
something it's definitely doing

00:34:04,230 --> 00:34:10,169
something so a tip like well pretty much

00:34:07,650 --> 00:34:12,270
any probably long stack trace from any

00:34:10,169 --> 00:34:14,909
language but you want to look at the

00:34:12,270 --> 00:34:18,159
beginning and the end of stack trace

00:34:14,909 --> 00:34:20,169
so problems you have a breadboard or

00:34:18,159 --> 00:34:27,550
while you try to use a service it's not

00:34:20,169 --> 00:34:29,080
in that container undef but you kind of

00:34:27,550 --> 00:34:38,350
got a kind of going to figure it out

00:34:29,080 --> 00:34:39,850
yourself so things to make services what

00:34:38,350 --> 00:34:42,970
do you want what should what kind of

00:34:39,850 --> 00:34:45,550
services should use so in this

00:34:42,970 --> 00:34:48,909
environment you know I'm looking at a

00:34:45,550 --> 00:34:50,470
lot of high-level operations no I'm not

00:34:48,909 --> 00:34:54,810
doing any high frequency trading with

00:34:50,470 --> 00:34:57,280
pearl unfortunately you expected the hat

00:34:54,810 --> 00:34:59,470
people do right trading systems in Pearl

00:34:57,280 --> 00:35:03,400
but you just are never going to get the

00:34:59,470 --> 00:35:08,850
performance that you need that compared

00:35:03,400 --> 00:35:10,840
to a C++ and low level up performance

00:35:08,850 --> 00:35:16,840
optimization that you can do with Linux

00:35:10,840 --> 00:35:19,270
and C++ excuse me so we talked about

00:35:16,840 --> 00:35:22,510
this lock service beat it to death by

00:35:19,270 --> 00:35:24,790
now database connection but I actually

00:35:22,510 --> 00:35:28,930
use a database execution service that

00:35:24,790 --> 00:35:32,320
gives me common common operations for

00:35:28,930 --> 00:35:36,190
the database you know exact SQL exact

00:35:32,320 --> 00:35:40,180
returning a scalar things like that SSH

00:35:36,190 --> 00:35:48,610
SSH execution service with things like

00:35:40,180 --> 00:35:50,350
file transfer you know as I showed

00:35:48,610 --> 00:35:55,380
before our servers remote Linux

00:35:50,350 --> 00:35:58,630
processes start/stop is up functionality

00:35:55,380 --> 00:36:01,720
drudes of servers so i made like 70

00:35:58,630 --> 00:36:04,780
linux servers and there are different

00:36:01,720 --> 00:36:07,140
parts of the world and i may want to do

00:36:04,780 --> 00:36:12,460
one thing with one set of servers and

00:36:07,140 --> 00:36:16,030
something else with another set so bed

00:36:12,460 --> 00:36:17,530
bored really helped me scale up my

00:36:16,030 --> 00:36:21,280
application functionality so i was using

00:36:17,530 --> 00:36:23,590
this this kind of naive using a moose

00:36:21,280 --> 00:36:26,080
roll to include the code that i needed

00:36:23,590 --> 00:36:27,599
for my service and it was starting to

00:36:26,080 --> 00:36:31,410
get really difficult

00:36:27,599 --> 00:36:33,869
about 90 classes now I've got about 160

00:36:31,410 --> 00:36:36,180
in my environment and it's very tight I

00:36:33,869 --> 00:36:42,299
have no bloat I'm very very streamlined

00:36:36,180 --> 00:36:45,170
and highly ruiz reuse oriented but it

00:36:42,299 --> 00:36:51,390
really helped and have a more simple

00:36:45,170 --> 00:36:54,239
code base to work with and I do find

00:36:51,390 --> 00:36:56,249
some challenges with bread board or

00:36:54,239 --> 00:36:58,259
round containers so what services are

00:36:56,249 --> 00:37:02,069
put in which containers if I have to

00:36:58,259 --> 00:37:04,319
pass arguments in the container and I

00:37:02,069 --> 00:37:07,259
have two different services in it I

00:37:04,319 --> 00:37:11,690
might have to instantiate the same

00:37:07,259 --> 00:37:11,690
container twice using different inputs

00:37:14,029 --> 00:37:20,460
so if I here's what I'm talking about

00:37:17,279 --> 00:37:27,599
here let's do this I could have just

00:37:20,460 --> 00:37:31,559
minimized that last time right so in

00:37:27,599 --> 00:37:33,809
this this code here what the way I have

00:37:31,559 --> 00:37:38,519
things organized for our energy services

00:37:33,809 --> 00:37:41,690
is you have your actual service code so

00:37:38,519 --> 00:37:41,690
to get the logger

00:37:45,789 --> 00:37:53,630
yeah some so there's a lot of nice stuff

00:37:48,469 --> 00:38:01,119
that you want to hide there and then we

00:37:53,630 --> 00:38:05,900
have a role so that whoever is using the

00:38:01,119 --> 00:38:07,940
service and this is what what the

00:38:05,900 --> 00:38:12,109
calling class will use to use the

00:38:07,940 --> 00:38:21,799
service and here i have my actual

00:38:12,109 --> 00:38:27,380
logging handle called log and then we

00:38:21,799 --> 00:38:29,809
have a simple container so here's here's

00:38:27,380 --> 00:38:32,509
the breadboard container use mousse it's

00:38:29,809 --> 00:38:34,969
part of moose breadboard I found the

00:38:32,509 --> 00:38:40,519
best method is to extend the breadboard

00:38:34,969 --> 00:38:42,920
container class and you have methods for

00:38:40,519 --> 00:38:45,440
things that may be input so here I have

00:38:42,920 --> 00:38:46,910
a little more sophisticated example

00:38:45,440 --> 00:38:52,430
where the configuration of the log

00:38:46,910 --> 00:38:54,319
actually is a dependency of the logging

00:38:52,430 --> 00:38:56,119
service so you need to pass in

00:38:54,319 --> 00:38:58,999
configuration information where does

00:38:56,119 --> 00:39:03,799
your log go am i doing info am i doing

00:38:58,999 --> 00:39:06,459
debug level that type of fame and let's

00:39:03,799 --> 00:39:06,459
see what I got here

00:39:12,340 --> 00:39:15,340
return

00:39:19,869 --> 00:39:25,900
so when I'm actually calling it here I'm

00:39:23,710 --> 00:39:29,410
I'm actually creating a container for

00:39:25,900 --> 00:39:30,970
this test object so it's portable I go

00:39:29,410 --> 00:39:35,499
and resolve the service I think we've

00:39:30,970 --> 00:39:43,079
pretty much seen it before and I'm able

00:39:35,499 --> 00:39:43,079
to use the logger and it's nice and easy

00:39:48,269 --> 00:39:56,380
so sit a just a little more of a survey

00:39:53,559 --> 00:39:57,970
so when I talk with JT about this it was

00:39:56,380 --> 00:40:02,499
supposed to be a survey for beginners of

00:39:57,970 --> 00:40:05,230
modules and not any cool sexy high

00:40:02,499 --> 00:40:08,950
frequency trading stuff performance

00:40:05,230 --> 00:40:15,279
tuning so survey is just another way to

00:40:08,950 --> 00:40:18,279
say rambling I think we got moves love

00:40:15,279 --> 00:40:23,589
it a time just went to dave ross keys

00:40:18,279 --> 00:40:26,049
talk see her that's an awesome very

00:40:23,589 --> 00:40:29,319
useful perl module breadboard log lock

00:40:26,049 --> 00:40:33,819
for parole xml twig maybe use that i

00:40:29,319 --> 00:40:38,170
love it xml to wake fans oh come on

00:40:33,819 --> 00:40:41,950
alright cool net frame layer do a lot of

00:40:38,170 --> 00:40:43,989
low-level networking and you notice i

00:40:41,950 --> 00:40:48,579
can't actually say anything specific

00:40:43,989 --> 00:40:51,249
about what i really do for a job and

00:40:48,579 --> 00:40:54,789
then i make use of fork fork is awesome

00:40:51,249 --> 00:40:56,519
you know 70 70 servers i'm not going to

00:40:54,789 --> 00:40:58,749
do it one by one i guarantee that

00:40:56,519 --> 00:41:05,619
there's no way i have the patience for

00:40:58,749 --> 00:41:08,819
that and there's a lot of perl modules

00:41:05,619 --> 00:41:12,989
around fork but I end up writing my own

00:41:08,819 --> 00:41:17,170
are you doing on a timer five minutes

00:41:12,989 --> 00:41:19,900
I'll get to that a little bit but here's

00:41:17,170 --> 00:41:25,059
where any help from the audience so SSH

00:41:19,900 --> 00:41:26,529
is a big pain neck either i'm missing

00:41:25,059 --> 00:41:28,940
something really fundamental about

00:41:26,529 --> 00:41:30,530
working with it

00:41:28,940 --> 00:41:33,440
have to really I think just knuckle down

00:41:30,530 --> 00:41:37,280
and start resolving these problems at a

00:41:33,440 --> 00:41:40,069
low level so yeah I had that ssh to

00:41:37,280 --> 00:41:44,180
everybody says i'll use that open SSH

00:41:40,069 --> 00:41:46,190
much more better supported yeah it's

00:41:44,180 --> 00:41:48,410
great I just got different set of

00:41:46,190 --> 00:41:50,210
problems so I had to go through the

00:41:48,410 --> 00:42:12,589
whole process of debugging and do work

00:41:50,210 --> 00:42:15,290
arounds yeah object remote mm-hmm and I

00:42:12,589 --> 00:42:18,849
looked at things like any events and but

00:42:15,290 --> 00:42:23,319
this is like blocking I oh and okay

00:42:18,849 --> 00:42:26,390
object remote I'll take a look at it

00:42:23,319 --> 00:42:27,710
yeah so then you know it's not all sshs

00:42:26,390 --> 00:42:31,010
faults another pearl all the perl

00:42:27,710 --> 00:42:35,240
modules malt fault multi i'm still think

00:42:31,010 --> 00:42:37,480
about beer TTYL subsystem who here

00:42:35,240 --> 00:42:45,050
really understands TTYL subsystem

00:42:37,480 --> 00:42:47,180
anybody right difficult to debug and you

00:42:45,050 --> 00:42:49,460
know what just use backtick so it

00:42:47,180 --> 00:42:50,900
doesn't work but that's how i get around

00:42:49,460 --> 00:42:53,290
some of my problems i'll just go to the

00:42:50,900 --> 00:42:53,290
call

00:43:01,440 --> 00:43:17,220
dash us past where capitalist yes great

00:43:36,160 --> 00:43:38,819
right

00:43:47,630 --> 00:43:55,450
right that's on here sorry about

00:43:57,980 --> 00:44:00,040
you

00:44:08,479 --> 00:44:14,329
alright another technology that is I

00:44:11,219 --> 00:44:16,739
think unique in the training environment

00:44:14,329 --> 00:44:21,410
is multicast does anybody uses

00:44:16,739 --> 00:44:23,869
multicasts here you do what's a type of

00:44:21,410 --> 00:44:32,599
and what type of way to use multi calf's

00:44:23,869 --> 00:44:35,969
generally yep that's exactly what I was

00:44:32,599 --> 00:44:39,450
getting at here for my last point here I

00:44:35,969 --> 00:44:41,430
think it's a great way to signal I'm not

00:44:39,450 --> 00:44:43,319
actually using it right now but I do

00:44:41,430 --> 00:44:46,589
have some plans coming down the pipe

00:44:43,319 --> 00:44:50,700
where yeah I might do the same thing but

00:44:46,589 --> 00:44:52,769
multicast is anybody well let me explain

00:44:50,700 --> 00:44:55,739
to multicast oh so right you have a

00:44:52,769 --> 00:44:58,259
single source and that person that

00:44:55,739 --> 00:45:02,489
source sends out a message usually UDP

00:44:58,259 --> 00:45:07,710
and it goes through a router there are

00:45:02,489 --> 00:45:10,499
clients a client will join a multicast

00:45:07,710 --> 00:45:13,529
group so a little register with a router

00:45:10,499 --> 00:45:15,479
it'll say hey I'm I'm i want to i want

00:45:13,529 --> 00:45:18,299
the multicast from this multicast group

00:45:15,479 --> 00:45:21,809
so the router then sends it only to

00:45:18,299 --> 00:45:25,019
those people who have signed up to that

00:45:21,809 --> 00:45:26,900
multicast group and unlike a broadcast

00:45:25,019 --> 00:45:31,519
where it automatically goes to everyone

00:45:26,900 --> 00:45:33,839
so it's you know it's a solid part of

00:45:31,519 --> 00:45:35,969
the networking you know there's a

00:45:33,839 --> 00:45:39,359
reserve range of ips just for multicast

00:45:35,969 --> 00:45:41,969
all the routers know how to do it it's

00:45:39,359 --> 00:45:44,849
using the trading industry famously for

00:45:41,969 --> 00:45:46,799
broadcasting prices so if you have 20

00:45:44,849 --> 00:45:50,700
traders a lot with their own pc and they

00:45:46,799 --> 00:45:53,670
want real-time prices they have trading

00:45:50,700 --> 00:45:56,940
clients that subscribe to certain

00:45:53,670 --> 00:45:58,859
multicast groups so yeah it's a good

00:45:56,940 --> 00:46:00,690
good way to do application of the

00:45:58,859 --> 00:46:09,259
signaling you don't have to worry about

00:46:00,690 --> 00:46:09,259
managing a lot of sockets didn't know

00:46:11,140 --> 00:46:16,820
right so for things like prices yeah you

00:46:14,660 --> 00:46:18,170
miss one packet it's not going to change

00:46:16,820 --> 00:46:24,320
too much because there's a lot of data

00:46:18,170 --> 00:46:26,300
coming down so you have to know evaluate

00:46:24,320 --> 00:46:29,480
whether it's the right thing for you but

00:46:26,300 --> 00:46:31,790
one thing if you ever mention multicasts

00:46:29,480 --> 00:46:34,490
there's one thing you should never do so

00:46:31,790 --> 00:46:36,920
here's we have a multicast under code

00:46:34,490 --> 00:46:39,140
from this great i/o socket multicast and

00:46:36,920 --> 00:46:41,900
you see how simple the code is but this

00:46:39,140 --> 00:46:44,300
line here there's a TTL time to live so

00:46:41,900 --> 00:46:47,750
that's like how many routers router

00:46:44,300 --> 00:46:53,000
bounces can the message go before it

00:46:47,750 --> 00:46:57,619
dies never set TTL equal to one because

00:46:53,000 --> 00:46:59,780
it will because it will cause many

00:46:57,619 --> 00:47:03,560
routers to go to one hundred percent cpu

00:46:59,780 --> 00:47:07,340
and shut down the network so okay that's

00:47:03,560 --> 00:47:08,720
a little be careful there alright maybe

00:47:07,340 --> 00:47:14,119
this I don't know maybe that's too big

00:47:08,720 --> 00:47:16,280
of a risk but you know in these kind of

00:47:14,119 --> 00:47:18,350
aggressive environments like these

00:47:16,280 --> 00:47:21,760
trading firms I'll just say it will

00:47:18,350 --> 00:47:24,290
never set it to never said at the one

00:47:21,760 --> 00:47:27,410
here we have the other the other half a

00:47:24,290 --> 00:47:29,570
multicast receiver and you know very

00:47:27,410 --> 00:47:32,650
very simple I think I copy bees out of

00:47:29,570 --> 00:47:42,020
the module but hopefully it's

00:47:32,650 --> 00:47:44,000
self-explanatory yeah so I have a module

00:47:42,020 --> 00:47:45,700
I think I'd never put anything on Sipan

00:47:44,000 --> 00:47:48,350
it's going to happen though pretty soon

00:47:45,700 --> 00:47:52,280
I've been a very good consumer of pearl

00:47:48,350 --> 00:47:59,000
and love it and I've submitted bug

00:47:52,280 --> 00:48:01,369
reports so baby steps but uh yeah having

00:47:59,000 --> 00:48:03,650
a fork module I'm excited about so you

00:48:01,369 --> 00:48:06,320
can follow me on github and we'll see if

00:48:03,650 --> 00:48:10,940
I ever put it up there I'm determined to

00:48:06,320 --> 00:48:14,420
use up yeah so after some of my info

00:48:10,940 --> 00:48:20,380
stay in touch I'm on the windy city in

00:48:14,420 --> 00:48:20,380
Chicago p.m. mailing lists any questions

00:48:36,460 --> 00:48:45,520
i log to a central file on a management

00:48:42,310 --> 00:48:47,200
server that basically does all the ssh

00:48:45,520 --> 00:48:49,270
operations on the other machines and

00:48:47,200 --> 00:48:57,210
then everything is logged into a single

00:48:49,270 --> 00:49:00,400
single file the mojo mojo product i use

00:48:57,210 --> 00:49:02,460
goes one better so i usually go to build

00:49:00,400 --> 00:49:05,410
standard out standard out and to a file

00:49:02,460 --> 00:49:07,839
so use this motor product it runs a perl

00:49:05,410 --> 00:49:11,380
script captures the standard output and

00:49:07,839 --> 00:49:14,619
logs that on to a tomcat server so in

00:49:11,380 --> 00:49:16,750
formats it in an HTML so that's

00:49:14,619 --> 00:49:21,670
something i really i really like so I

00:49:16,750 --> 00:49:23,589
have a job to schedule it fires I mojo

00:49:21,670 --> 00:49:25,630
tells me if it's successful or not I can

00:49:23,589 --> 00:49:31,839
just click very quickly pulls up on the

00:49:25,630 --> 00:49:37,109
web so like an its I'll use it anything

00:49:31,839 --> 00:49:37,109

YouTube URL: https://www.youtube.com/watch?v=MrVqFugk0SU


