Title: Matt Trout   Distributed Daemon Discovery
Publication date: 2013-08-20
Playlist: YAPC::NA 2012
Description: 
	
Captions: 
	00:00:02,480 --> 00:00:10,710
see and here was me thing and here was

00:00:08,820 --> 00:00:14,070
me thinking but it being the first talk

00:00:10,710 --> 00:00:15,900
after lunch I I'd be stood around here

00:00:14,070 --> 00:00:18,210
for five minutes going let let's let's

00:00:15,900 --> 00:00:20,580
wait for the other three quarters of the

00:00:18,210 --> 00:00:22,680
audience to turn up and okay we've got a

00:00:20,580 --> 00:00:24,060
couple of people coming in but wow you

00:00:22,680 --> 00:00:25,380
think you guys are actually plumbed and

00:00:24,060 --> 00:00:31,700
maybe the lunch break was long enough

00:00:25,380 --> 00:00:35,880
for once this year anyway this is

00:00:31,700 --> 00:00:40,290
distributed diamond discovery should be

00:00:35,880 --> 00:00:44,430
good fun so um before I get on to the

00:00:40,290 --> 00:00:47,570
actual content I need to take a brief

00:00:44,430 --> 00:00:51,930
balls to do a little bit of gratitude

00:00:47,570 --> 00:00:56,850
because i'm here on behalf of Shadowcat

00:00:51,930 --> 00:00:59,910
and Amba and number one mark actually

00:00:56,850 --> 00:01:02,370
organized me to be here he being our

00:00:59,910 --> 00:01:04,470
token organized person and business

00:01:02,370 --> 00:01:06,570
person and finance person and legal

00:01:04,470 --> 00:01:08,250
person and the person who talks to

00:01:06,570 --> 00:01:18,630
non-technical managers because it's not

00:01:08,250 --> 00:01:25,259
safe to let me talk to them mm possibly

00:01:18,630 --> 00:01:28,400
oh but i think this talk is also on

00:01:25,259 --> 00:01:30,479
behalf of social flow calm who are a

00:01:28,400 --> 00:01:34,759
Shadowcat customer and happening for

00:01:30,479 --> 00:01:38,340
quite a while we've been helping out

00:01:34,759 --> 00:01:41,460
improving their usages of catalyst dbx

00:01:38,340 --> 00:01:44,520
class moose ecosystem doing various

00:01:41,460 --> 00:01:48,090
other bits and pieces and have been kind

00:01:44,520 --> 00:01:49,710
enough to fund and still agree to open

00:01:48,090 --> 00:01:52,409
sores quite a lot of the code that's

00:01:49,710 --> 00:01:54,119
going to be behind this one of the

00:01:52,409 --> 00:01:55,259
reasons i needed to thank mark is that

00:01:54,119 --> 00:01:57,810
there were a couple of bits that i

00:01:55,259 --> 00:02:01,590
didn't really feel like a quite justify

00:01:57,810 --> 00:02:03,570
billing the customer for so i spent

00:02:01,590 --> 00:02:04,950
several days not logging any billable

00:02:03,570 --> 00:02:07,860
hours while i built them anyway because

00:02:04,950 --> 00:02:10,259
not having them was irritating me and

00:02:07,860 --> 00:02:12,040
obviously mark was hugely impressed by

00:02:10,259 --> 00:02:15,670
that but didn't actually kill me

00:02:12,040 --> 00:02:19,349
so always nice to have an understanding

00:02:15,670 --> 00:02:22,480
business guy anyway and I also want to

00:02:19,349 --> 00:02:25,620
make a point of saying thank you to fail

00:02:22,480 --> 00:02:30,010
on who's the member of my team who did

00:02:25,620 --> 00:02:31,900
most of the heavy lifting and quite a

00:02:30,010 --> 00:02:34,049
lot of the relevant cursing in order to

00:02:31,900 --> 00:02:36,970
get this all were all working together

00:02:34,049 --> 00:02:39,129
and then I'm the one who gets who gets

00:02:36,970 --> 00:02:40,780
to come out to America and drink beer

00:02:39,129 --> 00:02:45,879
with you wonderful people and take all

00:02:40,780 --> 00:02:48,639
the glory for it so great great bloke

00:02:45,879 --> 00:02:50,079
has an amazing capacity to turn my

00:02:48,639 --> 00:02:52,120
half-formed and possibly still

00:02:50,079 --> 00:02:54,760
half-assed ideas into really solid

00:02:52,120 --> 00:02:56,260
working code a fair chunk of which we're

00:02:54,760 --> 00:02:59,680
hopefully going to see in the course of

00:02:56,260 --> 00:03:01,870
this so basically the summer is and

00:02:59,680 --> 00:03:04,569
thank you to all of the above people for

00:03:01,870 --> 00:03:06,879
putting up with me and being

00:03:04,569 --> 00:03:08,260
sufficiently awesome between them I get

00:03:06,879 --> 00:03:14,650
to be here and actually have something

00:03:08,260 --> 00:03:19,540
to talk about anyway so um distributed

00:03:14,650 --> 00:03:22,840
diamond discovery what okay look look

00:03:19,540 --> 00:03:26,919
lovely alliterative title but what does

00:03:22,840 --> 00:03:31,900
that actually mean so the basic problem

00:03:26,919 --> 00:03:34,419
I mean it's a problem that we run into

00:03:31,900 --> 00:03:35,859
with time after time with pretty much

00:03:34,419 --> 00:03:38,349
every customer that we're dealing with

00:03:35,859 --> 00:03:39,639
and that I see time after time out in

00:03:38,349 --> 00:03:42,879
the community when I'm helping people

00:03:39,639 --> 00:03:46,510
with stuff insufficiently automated

00:03:42,879 --> 00:03:48,280
infrastructure because fundamentally all

00:03:46,510 --> 00:03:49,780
infrastructure is insufficiently

00:03:48,280 --> 00:03:51,129
automated because there's always things

00:03:49,780 --> 00:03:53,440
that you're doing by hand that are

00:03:51,129 --> 00:03:55,209
boring and that the theory is always

00:03:53,440 --> 00:03:58,419
wants is accident twice is coincidence

00:03:55,209 --> 00:04:01,930
three times automated but you don't

00:03:58,419 --> 00:04:04,150
always quite have time to do it and

00:04:01,930 --> 00:04:08,019
start up lights especially suffer from

00:04:04,150 --> 00:04:10,540
that because they have at a certain

00:04:08,019 --> 00:04:12,040
amount of funding and a runway and they

00:04:10,540 --> 00:04:15,669
need to get stuff out the door they need

00:04:12,040 --> 00:04:17,530
to get stuff shipped so you know if the

00:04:15,669 --> 00:04:19,479
choice is between doing it right and

00:04:17,530 --> 00:04:22,779
doing it fast enough to get cash flow

00:04:19,479 --> 00:04:25,320
positive before your investors before

00:04:22,779 --> 00:04:27,000
your investors lose their temper the

00:04:25,320 --> 00:04:29,220
answer is you do it the way that works

00:04:27,000 --> 00:04:30,900
you do it the way that makes the people

00:04:29,220 --> 00:04:33,060
happy to pay for it because long as your

00:04:30,900 --> 00:04:35,310
customers are happy they don't really

00:04:33,060 --> 00:04:38,400
care just how much you hate your your

00:04:35,310 --> 00:04:40,560
your own current deployment and which

00:04:38,400 --> 00:04:43,290
and you know the traditional thing you

00:04:40,560 --> 00:04:45,300
learn so even if it was perfect to you

00:04:43,290 --> 00:04:46,650
six months ago after you've spent six

00:04:45,300 --> 00:04:49,880
months learning new stuff you get a

00:04:46,650 --> 00:04:53,100
hater anyway right we've all been there

00:04:49,880 --> 00:04:54,990
but series one of the things I offer

00:04:53,100 --> 00:04:57,270
encounters is people getting embarrassed

00:04:54,990 --> 00:05:00,390
about this thing about their like old

00:04:57,270 --> 00:05:04,530
but but it's kind of ugly you're gonna

00:05:00,390 --> 00:05:07,080
hate this man well I might kind of hate

00:05:04,530 --> 00:05:09,110
looking at it but the fact that this

00:05:07,080 --> 00:05:12,780
code is useful enough to enough people

00:05:09,110 --> 00:05:14,700
to generate enough money but you're

00:05:12,780 --> 00:05:17,610
bringing shadow cuttings into this to

00:05:14,700 --> 00:05:21,900
make it better I can't really argue can

00:05:17,610 --> 00:05:24,390
I and anyway and anyway shipping is

00:05:21,900 --> 00:05:25,830
always feature zero if you haven't

00:05:24,390 --> 00:05:27,570
shipped it it doesn't matter how

00:05:25,830 --> 00:05:29,910
beautiful it is it doesn't matter how

00:05:27,570 --> 00:05:32,550
clean it is if it ain't it ain't

00:05:29,910 --> 00:05:34,470
worth anything but well I mean it might

00:05:32,550 --> 00:05:36,360
be twelves and that's cool for a weekend

00:05:34,470 --> 00:05:38,130
project but you know out in the real

00:05:36,360 --> 00:05:41,340
world where people's mortgages are being

00:05:38,130 --> 00:05:44,880
paid shipping is feature zero and it has

00:05:41,340 --> 00:05:46,560
to happen and that means that you always

00:05:44,880 --> 00:05:51,600
have insufficiently automated

00:05:46,560 --> 00:05:54,000
infrastructure so okay what's the first

00:05:51,600 --> 00:05:55,530
step to try and make move your

00:05:54,000 --> 00:05:58,230
infrastructure a decent amount towards

00:05:55,530 --> 00:05:59,940
sufficiently automated well the first

00:05:58,230 --> 00:06:01,650
step is to recognize that if it's

00:05:59,940 --> 00:06:05,090
insufficiently automated it's almost

00:06:01,650 --> 00:06:07,890
certainly also insufficiently documented

00:06:05,090 --> 00:06:14,790
because again you can never have enough

00:06:07,890 --> 00:06:18,450
documentation which is a problem that we

00:06:14,790 --> 00:06:20,670
solved on a dbx class by acquiring jess

00:06:18,450 --> 00:06:22,680
robinson a fantastic documentation lead

00:06:20,670 --> 00:06:24,570
you did a huge amount of work and a

00:06:22,680 --> 00:06:27,090
problem with slowly starting to solve

00:06:24,570 --> 00:06:28,980
for Shadowcat customers and by the fact

00:06:27,090 --> 00:06:30,960
that while I wasn't looking and Mark

00:06:28,980 --> 00:06:33,090
managed to talk jess robinson into

00:06:30,960 --> 00:06:35,190
working for us so she's now doing the

00:06:33,090 --> 00:06:37,449
same translate MST into same English

00:06:35,190 --> 00:06:39,400
documentation work for customers

00:06:37,449 --> 00:06:43,809
but she's done for dbas class for six

00:06:39,400 --> 00:06:46,169
years and my god it's nice people

00:06:43,809 --> 00:06:49,360
actually understand the stuff she writes

00:06:46,169 --> 00:06:53,319
anyway I'm so your first step is

00:06:49,360 --> 00:06:55,120
building up that big picture yeah so

00:06:53,319 --> 00:06:57,699
what's the usual way that you go about

00:06:55,120 --> 00:06:59,469
this well um the way that people

00:06:57,699 --> 00:07:01,180
generally go is right we need to get it

00:06:59,469 --> 00:07:03,430
build up a big picture so we need to cut

00:07:01,180 --> 00:07:06,490
out some time or what we'll do is we'll

00:07:03,430 --> 00:07:08,319
log into the systems and then we'll go

00:07:06,490 --> 00:07:11,560
and we'll have a look around and we'll

00:07:08,319 --> 00:07:13,389
figure out what's running where and what

00:07:11,560 --> 00:07:15,699
it's doing and why it needs to be there

00:07:13,389 --> 00:07:18,879
and then we'll will document that are

00:07:15,699 --> 00:07:21,490
probably on to a wiki somewhere probably

00:07:18,879 --> 00:07:22,870
mediawiki because the bill community

00:07:21,490 --> 00:07:24,849
seems to be constitutionally incapable

00:07:22,870 --> 00:07:29,710
of writing a wiki that isn't actually

00:07:24,849 --> 00:07:31,240
more hateful squirty yours is really

00:07:29,710 --> 00:07:32,889
pretty but I have looked at the source

00:07:31,240 --> 00:07:36,839
code and it did take me four beers

00:07:32,889 --> 00:07:36,839
before Mike before the bleeding stopped

00:07:38,639 --> 00:07:45,009
and eventually the idea is that from

00:07:42,490 --> 00:07:47,319
that process are you reach a point where

00:07:45,009 --> 00:07:49,689
you can try and unify that documentation

00:07:47,319 --> 00:07:57,129
into a proper sort of big picture of

00:07:49,689 --> 00:08:00,969
your infrastructure okay but we're going

00:07:57,129 --> 00:08:03,279
to missing a point here where humans are

00:08:00,969 --> 00:08:06,069
kind of fallible during their staff yeah

00:08:03,279 --> 00:08:07,449
especially since going through a server

00:08:06,069 --> 00:08:10,599
and trying to figure out where

00:08:07,449 --> 00:08:12,219
everything's running it's so easy to

00:08:10,599 --> 00:08:13,749
miss something you missed that an init

00:08:12,219 --> 00:08:16,839
script isn't sim linked into the right

00:08:13,749 --> 00:08:18,430
directory you miss that a service is

00:08:16,839 --> 00:08:20,439
running a slightly patched version of

00:08:18,430 --> 00:08:22,419
something because production fell over

00:08:20,439 --> 00:08:24,009
at three in the morning so you went in

00:08:22,419 --> 00:08:28,389
there and you patched it and then you

00:08:24,009 --> 00:08:29,529
you went right tomorrow I'll document

00:08:28,389 --> 00:08:31,120
this up and I'll get it committed

00:08:29,529 --> 00:08:33,880
probably you get in tomorrow and there's

00:08:31,120 --> 00:08:38,349
something else and you forget right it

00:08:33,880 --> 00:08:39,760
did this this this always happens and

00:08:38,349 --> 00:08:42,610
yet the problem we're trying to solve

00:08:39,760 --> 00:08:45,310
here is that things are insufficiently

00:08:42,610 --> 00:08:49,390
automated beagle and that's bad because

00:08:45,310 --> 00:08:50,860
humans are fallible why do we keep

00:08:49,390 --> 00:08:54,130
taking a manual salut

00:08:50,860 --> 00:08:57,010
to a manual problem the whole point is

00:08:54,130 --> 00:08:58,390
we're trying to give automation is the

00:08:57,010 --> 00:09:01,839
name of the game here while we

00:08:58,390 --> 00:09:08,140
automating the first step as well really

00:09:01,839 --> 00:09:11,470
it makes no sense so all right what else

00:09:08,140 --> 00:09:13,589
do we do well yeah we can write going to

00:09:11,470 --> 00:09:16,209
find all this stuff out for us right

00:09:13,589 --> 00:09:17,649
obviously I mean that that's a simple

00:09:16,209 --> 00:09:20,250
matter of programming and that's way

00:09:17,649 --> 00:09:22,570
more fun than digging around on servers

00:09:20,250 --> 00:09:27,940
pretending you freaking Tony Robinson

00:09:22,570 --> 00:09:31,120
Alton Co time dean for unix um but hang

00:09:27,940 --> 00:09:32,950
on we're back to it how do you actually

00:09:31,120 --> 00:09:34,300
get that on to the remote machines in

00:09:32,950 --> 00:09:36,790
the first place is your first problem

00:09:34,300 --> 00:09:39,250
yeah because part of the point of here

00:09:36,790 --> 00:09:40,660
is you don't have is you want your often

00:09:39,250 --> 00:09:42,310
in a situation where you don't have

00:09:40,660 --> 00:09:43,570
fully automated deployment and that's

00:09:42,310 --> 00:09:45,550
one of the things you're trying to solve

00:09:43,570 --> 00:09:47,800
because you're trying to be dead sure

00:09:45,550 --> 00:09:49,620
about what's already deployed so you

00:09:47,800 --> 00:09:53,490
know that your new deployment automation

00:09:49,620 --> 00:09:58,480
configuration is going to be saying oh

00:09:53,490 --> 00:10:05,829
help help loop of dirt with what do we

00:09:58,480 --> 00:10:08,250
do okay well so in the in the spirit in

00:10:05,829 --> 00:10:10,750
the traditional spirit of you know an

00:10:08,250 --> 00:10:14,310
automation is like violence if it isn't

00:10:10,750 --> 00:10:14,310
working for you you're not using enough

00:10:18,329 --> 00:10:26,740
so scratch Scrabble around for Plan B

00:10:21,130 --> 00:10:29,769
scrabbler aha what we have is object

00:10:26,740 --> 00:10:31,630
remote which is the guts of what will

00:10:29,769 --> 00:10:36,220
eventually get built on top of it the

00:10:31,630 --> 00:10:37,630
next version of the TAC project that my

00:10:36,220 --> 00:10:41,260
abstract apparently claimed I was

00:10:37,630 --> 00:10:43,180
talking about but I i applied shipping

00:10:41,260 --> 00:10:45,010
his feature zero to the actual stuff

00:10:43,180 --> 00:10:46,149
that the government needed given they

00:10:45,010 --> 00:10:48,519
were kind enough to pay for the

00:10:46,149 --> 00:10:51,699
development but yeah it's it's kind of

00:10:48,519 --> 00:10:53,079
only fair right so object remote is

00:10:51,699 --> 00:10:55,779
going to be the guts of the next version

00:10:53,079 --> 00:10:57,640
of tack but it it turns out that you you

00:10:55,779 --> 00:11:00,339
can quite happily use that on its own um

00:10:57,640 --> 00:11:02,800
and so I call object remote arrow

00:11:00,339 --> 00:11:03,510
connect give it a hostname it goes an

00:11:02,800 --> 00:11:05,100
SSH

00:11:03,510 --> 00:11:08,880
into there and it gives me back a

00:11:05,100 --> 00:11:12,300
connection object and then I can call on

00:11:08,880 --> 00:11:15,090
any class nuclear on Quran and have that

00:11:12,300 --> 00:11:17,820
connection object and that's going to

00:11:15,090 --> 00:11:19,830
give me back a proxy object to an

00:11:17,820 --> 00:11:23,700
instance of that class on the farm

00:11:19,830 --> 00:11:27,180
machine and happily object remote ships

00:11:23,700 --> 00:11:29,430
the class over the wire for me so in the

00:11:27,180 --> 00:11:32,820
home of this process I've installed all

00:11:29,430 --> 00:11:34,770
of this code on the op server that we're

00:11:32,820 --> 00:11:37,950
running all of the introspection cron

00:11:34,770 --> 00:11:40,170
jobs from but I've never actually had to

00:11:37,950 --> 00:11:42,270
install anything on the far end machines

00:11:40,170 --> 00:11:45,990
the only thing they need to have is an

00:11:42,270 --> 00:11:49,020
SSH account and a pearl binary that's at

00:11:45,990 --> 00:11:50,490
least five point eight point one four

00:11:49,020 --> 00:11:57,600
preference five point eight point one

00:11:50,490 --> 00:12:01,470
and not produced by red hat but in the

00:11:57,600 --> 00:12:03,390
in the case of social flow and a couple

00:12:01,470 --> 00:12:05,280
of their very early employees had

00:12:03,390 --> 00:12:13,350
actually used red hat so their

00:12:05,280 --> 00:12:17,400
infrastructures all debian and hey we've

00:12:13,350 --> 00:12:20,370
almost retired mysql as well anyway and

00:12:17,400 --> 00:12:22,230
so in installation isn't required so

00:12:20,370 --> 00:12:24,450
that that sums up so I can get the code

00:12:22,230 --> 00:12:28,110
out onto these machines and run it great

00:12:24,450 --> 00:12:30,240
I I would love to go into the details of

00:12:28,110 --> 00:12:32,550
object remote but I've only got a 40

00:12:30,240 --> 00:12:34,980
minute slot I've got all sorts of cool

00:12:32,550 --> 00:12:37,710
stuff that everybody else wrote that I

00:12:34,980 --> 00:12:40,620
want to cover so object remote being my

00:12:37,710 --> 00:12:43,400
being my pet bag of crazy I'll be

00:12:40,620 --> 00:12:46,530
covering that in my lightning talk later

00:12:43,400 --> 00:12:49,610
okay so we can run the code great and

00:12:46,530 --> 00:12:51,960
what do we do with the output so oh

00:12:49,610 --> 00:12:53,700
what's the normal thing okay I've got

00:12:51,960 --> 00:12:56,280
I've got a load of day to that I'm going

00:12:53,700 --> 00:12:59,070
to want to store and I'm going to want

00:12:56,280 --> 00:13:03,390
to deal with aggregating it and querying

00:12:59,070 --> 00:13:07,230
it so a database ah well okay i love

00:13:03,390 --> 00:13:10,080
postgres um most of our customers are

00:13:07,230 --> 00:13:11,670
going to love postgres as well on the

00:13:10,080 --> 00:13:13,710
principle you may have heard me

00:13:11,670 --> 00:13:16,610
yesterday saying it's really nice not to

00:13:13,710 --> 00:13:21,140
have to be scared of joins

00:13:16,610 --> 00:13:22,579
I'm really not joking but the things

00:13:21,140 --> 00:13:23,930
we're going to be adding new probes all

00:13:22,579 --> 00:13:26,120
the time because as soon as we spot

00:13:23,930 --> 00:13:28,070
something that isn't covered by this the

00:13:26,120 --> 00:13:31,370
idea is we should be writing one quick

00:13:28,070 --> 00:13:33,470
module that introspect sit and I'm just

00:13:31,370 --> 00:13:34,910
having it going over the wire so having

00:13:33,470 --> 00:13:40,550
a fixed database schema it's going to

00:13:34,910 --> 00:13:43,760
start complicating things so anytime I

00:13:40,550 --> 00:13:45,130
start talking about this somebody

00:13:43,760 --> 00:13:47,930
without a sense of self-preservation

00:13:45,130 --> 00:13:58,550
immediately goes Matt why don't you

00:13:47,930 --> 00:14:00,680
won't go do babe yes but the thing is

00:13:58,550 --> 00:14:04,250
part of the point here is we don't have

00:14:00,680 --> 00:14:06,079
everything fully automated yet right so

00:14:04,250 --> 00:14:08,269
when trying to minimize the amount of

00:14:06,079 --> 00:14:10,250
configuration required to get to get

00:14:08,269 --> 00:14:11,750
this whole thing going because I don't

00:14:10,250 --> 00:14:13,100
want to be doing any more manual

00:14:11,750 --> 00:14:16,670
configuration that's what this is

00:14:13,100 --> 00:14:19,070
supposed to help me so yeah and the

00:14:16,670 --> 00:14:20,720
thing about MongoDB is you know it's not

00:14:19,070 --> 00:14:23,959
just world writable by default its

00:14:20,720 --> 00:14:25,250
internet writable by default you a yob

00:14:23,959 --> 00:14:28,220
you have to mess around with either

00:14:25,250 --> 00:14:30,470
firewalling or careful configuration to

00:14:28,220 --> 00:14:32,930
have it not accept any connection from

00:14:30,470 --> 00:14:35,240
any IP address in the entire world and

00:14:32,930 --> 00:14:36,769
give you full right access to the

00:14:35,240 --> 00:14:39,459
production de jure and the ability to

00:14:36,769 --> 00:14:42,050
delete it all which I mean if you get

00:14:39,459 --> 00:14:44,390
that that's not just internet writable

00:14:42,050 --> 00:14:48,170
died by default as goatse by default

00:14:44,390 --> 00:14:50,600
guys which seems to be a common feature

00:14:48,170 --> 00:14:53,240
of no SQL stuff I guess I guess you know

00:14:50,600 --> 00:14:56,390
being being web-scale they duplicate the

00:14:53,240 --> 00:15:00,470
most famous part of the web yeah anyway

00:14:56,390 --> 00:15:02,300
Oh more importantly that this stuff is

00:15:00,470 --> 00:15:06,220
meant to be dealt with be used by

00:15:02,300 --> 00:15:10,449
operations people and by system staff

00:15:06,220 --> 00:15:12,620
yes yes you will be amazed to hear

00:15:10,449 --> 00:15:14,899
social flow actually have management

00:15:12,620 --> 00:15:16,880
sufficiently clue full but in spite of

00:15:14,899 --> 00:15:19,430
being a funded startup in the web two

00:15:16,880 --> 00:15:22,480
point O space they have hired a systems

00:15:19,430 --> 00:15:24,649
administrator man I'm proud of them

00:15:22,480 --> 00:15:25,650
think that may be the first time that's

00:15:24,649 --> 00:15:29,530
ever happened

00:15:25,650 --> 00:15:31,870
anyway um so I want to be able to grep

00:15:29,530 --> 00:15:33,820
stuff yeah they need that need to be

00:15:31,870 --> 00:15:35,890
well I want to be able to just you know

00:15:33,820 --> 00:15:38,770
throw some shell scripting at it to try

00:15:35,890 --> 00:15:41,290
and get data out throw random maps and

00:15:38,770 --> 00:15:43,060
grep simple go at it to get data I don't

00:15:41,290 --> 00:15:45,730
want to be going oh well you need to do

00:15:43,060 --> 00:15:48,670
is connect to this tcp port until this

00:15:45,730 --> 00:15:50,950
pact binary Jason rubbish on the what I

00:15:48,670 --> 00:15:53,170
but bike by this point i could have

00:15:50,950 --> 00:15:54,820
written a shell script damn i could just

00:15:53,170 --> 00:15:56,470
have invoked a copy of a canned it would

00:15:54,820 --> 00:16:00,670
have already given me the arm so if i

00:15:56,470 --> 00:16:03,190
had them in files and then i was going

00:16:00,670 --> 00:16:04,540
on these thought processes and something

00:16:03,190 --> 00:16:07,090
else occurred to me given we're going to

00:16:04,540 --> 00:16:08,880
want to collect data and map what's

00:16:07,090 --> 00:16:11,980
going on with these machines over time

00:16:08,880 --> 00:16:14,770
i'm going to want to be able to get sort

00:16:11,980 --> 00:16:16,360
of you know when when packet when a

00:16:14,770 --> 00:16:18,280
package upgrade has happened i want to

00:16:16,360 --> 00:16:20,320
be able to say what packages do i have

00:16:18,280 --> 00:16:23,800
now what did I have before what's

00:16:20,320 --> 00:16:29,830
changed uh I do believe we have a name

00:16:23,800 --> 00:16:32,020
for that don't we it's cool gay so it's

00:16:29,830 --> 00:16:34,500
it suddenly occurred to me that the the

00:16:32,020 --> 00:16:36,970
ultimate database tour for this process

00:16:34,500 --> 00:16:40,380
would be the second project that when

00:16:36,970 --> 00:16:40,380
the store those named after himself

00:16:43,710 --> 00:16:50,410
um I'm still annoyed with him over that

00:16:49,090 --> 00:16:52,930
one he's taken about the only

00:16:50,410 --> 00:16:55,540
sufficiently obnoxious polite word left

00:16:52,930 --> 00:16:56,860
for the software now I'm going to have

00:16:55,540 --> 00:17:02,020
to figure out a workaround for that

00:16:56,860 --> 00:17:03,220
later anyway do if somebody's going to

00:17:02,020 --> 00:17:06,250
be better than me in a way that

00:17:03,220 --> 00:17:07,930
irritates me I Englander store valves

00:17:06,250 --> 00:17:10,390
makes it slightly less upsetting though

00:17:07,930 --> 00:17:13,000
you're going to have met you know um I

00:17:10,390 --> 00:17:14,980
also I don't want to figure out data

00:17:13,000 --> 00:17:16,630
storage for it so what about using JSON

00:17:14,980 --> 00:17:19,330
and get I mean yeah at the end of the

00:17:16,630 --> 00:17:21,370
day Jason is your go-to this is just a

00:17:19,330 --> 00:17:24,610
bunch of basically somewhat structured

00:17:21,370 --> 00:17:26,830
data I mean it's it's it's it's it's

00:17:24,610 --> 00:17:28,750
it's so commonly and widely used that

00:17:26,830 --> 00:17:33,160
even MongoDB figured out it was a good

00:17:28,750 --> 00:17:35,380
idea um but you do run into this small

00:17:33,160 --> 00:17:38,710
problem with JSON which is the in

00:17:35,380 --> 00:17:40,870
trailing colors why why did you have to

00:17:38,710 --> 00:17:42,940
design it like that why did you have to

00:17:40,870 --> 00:17:46,780
define it so if I leave a trailing comma

00:17:42,940 --> 00:17:49,420
inside a hat it blows up won't bother oh

00:17:46,780 --> 00:17:55,000
just just why did you do this to me

00:17:49,420 --> 00:17:56,470
however fortunately it turns out there

00:17:55,000 --> 00:17:57,910
are a little thin number of other people

00:17:56,470 --> 00:18:02,430
who feel the same way when they're

00:17:57,910 --> 00:18:05,110
writing JSON by hand so the JSON module

00:18:02,430 --> 00:18:10,350
provides of it provides a method called

00:18:05,110 --> 00:18:12,880
relax which is absolutely fantastic

00:18:10,350 --> 00:18:15,730
possibly doesn't describe the author of

00:18:12,880 --> 00:18:19,540
say JSON excess but that's that's

00:18:15,730 --> 00:18:21,730
another story um but I will we will we

00:18:19,540 --> 00:18:24,220
also had this slight problem of okay but

00:18:21,730 --> 00:18:25,450
none of the producers will write it with

00:18:24,220 --> 00:18:27,310
the trailing gamma because you know

00:18:25,450 --> 00:18:29,230
that's an error rate than ever we want

00:18:27,310 --> 00:18:34,570
to make because i want the diffs to look

00:18:29,230 --> 00:18:36,370
good so I when I went back to social

00:18:34,570 --> 00:18:37,870
dryer when pretty please can we come

00:18:36,370 --> 00:18:39,940
with research a way of fixing this

00:18:37,870 --> 00:18:44,590
because I really don't want to have to

00:18:39,940 --> 00:18:46,540
use llamo because well because yamo I if

00:18:44,590 --> 00:18:48,880
I need to say more than that you haven't

00:18:46,540 --> 00:18:54,610
used it yet and you lucky lucky people

00:18:48,880 --> 00:18:55,270
right and so I got approval for a couple

00:18:54,610 --> 00:18:59,380
of hours of

00:18:55,270 --> 00:19:01,240
search time and falen got back to me an

00:18:59,380 --> 00:19:02,650
hour and a half later and said well you

00:19:01,240 --> 00:19:05,740
don't need to ask for production time

00:19:02,650 --> 00:19:07,060
I've implemented it which is why which

00:19:05,740 --> 00:19:09,370
is why I have to slide at the start

00:19:07,060 --> 00:19:12,130
saying thank you you know kind of makes

00:19:09,370 --> 00:19:13,660
me happy so okay so now we might two

00:19:12,130 --> 00:19:18,120
files and we're going to snapshot trees

00:19:13,660 --> 00:19:21,190
so that that all seems pretty easy yeah

00:19:18,120 --> 00:19:24,010
snapshot two trees are files and then we

00:19:21,190 --> 00:19:25,570
need a way to interrogate it so ugly we

00:19:24,010 --> 00:19:27,100
can interrogate it with greeeeat we can

00:19:25,570 --> 00:19:31,360
interrogate it with quick one-off perl

00:19:27,100 --> 00:19:33,370
scripts and decode JSON and for having a

00:19:31,360 --> 00:19:36,430
quick look around and poking at stuff a

00:19:33,370 --> 00:19:39,430
little snapshot it into the get and then

00:19:36,430 --> 00:19:41,590
I thrown together a quick web simple

00:19:39,430 --> 00:19:43,900
browser which is doesn't actually

00:19:41,590 --> 00:19:46,090
understand the data at all but no knows

00:19:43,900 --> 00:19:48,400
just enough about what sort of

00:19:46,090 --> 00:19:51,580
structures were using JSON that it's

00:19:48,400 --> 00:19:55,410
able to make a pretty good go at doing

00:19:51,580 --> 00:19:58,780
it it's not a 100-percent good go yet

00:19:55,410 --> 00:20:00,610
that's because i'm lame and had to

00:19:58,780 --> 00:20:04,590
actually write some slides for this talk

00:20:00,610 --> 00:20:06,610
as well as fixing bugs but anyway so i

00:20:04,590 --> 00:20:11,470
will show you all that in a moment

00:20:06,610 --> 00:20:14,020
however um first I would like to take a

00:20:11,470 --> 00:20:15,550
small detour she's the one thing I

00:20:14,020 --> 00:20:17,290
wanted to talk about with respect to

00:20:15,550 --> 00:20:20,530
object remote that didn't fit in that

00:20:17,290 --> 00:20:33,520
won't fit into a lightning talk which is

00:20:20,530 --> 00:20:35,530
pseudo heaven cerdo no no it's not if so

00:20:33,520 --> 00:20:37,600
you was as bad as gpg i'd have delegated

00:20:35,530 --> 00:20:42,310
this to you like i do all the gpg work

00:20:37,600 --> 00:20:43,990
we have the camera didn't pick up that

00:20:42,310 --> 00:20:48,850
could be run just gave me the finger and

00:20:43,990 --> 00:20:51,310
I don't blame it anyway I password

00:20:48,850 --> 00:20:53,290
prompts okay password prompts you you

00:20:51,310 --> 00:20:55,510
you can say you know I don't want you to

00:20:53,290 --> 00:20:57,430
send the prompt to the TTYL because I

00:20:55,510 --> 00:20:59,440
probably don't have it TTYL because I'm

00:20:57,430 --> 00:21:02,470
talking to 27 different hosts at once

00:20:59,440 --> 00:21:04,330
and in an infrastructure like this we

00:21:02,470 --> 00:21:05,830
probably have the same sudo password on

00:21:04,330 --> 00:21:08,720
every machine so I only want to type the

00:21:05,830 --> 00:21:10,400
thing in once thank you very much but

00:21:08,720 --> 00:21:12,530
point of this is to get enough users an

00:21:10,400 --> 00:21:17,539
ssh key set up that i don't have to keep

00:21:12,530 --> 00:21:20,600
typing this in every nay so sue do minus

00:21:17,539 --> 00:21:25,640
capital s well except the password

00:21:20,600 --> 00:21:28,820
understood in and it writes the prompt

00:21:25,640 --> 00:21:30,710
out to the prompt out distiller so I i

00:21:28,820 --> 00:21:32,720
can just read Studdard to see if it's

00:21:30,710 --> 00:21:36,080
giving me a prompt and that's fair

00:21:32,720 --> 00:21:38,809
enough and then object remote can

00:21:36,080 --> 00:21:40,730
basically go in both directions so i use

00:21:38,809 --> 00:21:42,559
a remote object on the control machine

00:21:40,730 --> 00:21:44,780
that's being cooled by the machine

00:21:42,559 --> 00:21:48,289
calling soo do remotely to send the

00:21:44,780 --> 00:21:50,510
prompt back to the master and then i

00:21:48,289 --> 00:21:53,990
discovered the i/o prompted didn't work

00:21:50,510 --> 00:21:55,909
on every single machine we had probably

00:21:53,990 --> 00:21:59,659
because it's damien code and therefore

00:21:55,909 --> 00:22:01,580
contains well you know about about your

00:21:59,659 --> 00:22:05,390
over your average monthly allowance of

00:22:01,580 --> 00:22:07,580
crack in every 12 lines given the way I

00:22:05,390 --> 00:22:10,419
code it's at least bi weekly allowance

00:22:07,580 --> 00:22:12,919
I'm sorry I ended up doing something

00:22:10,419 --> 00:22:15,799
beautifully horrible by just growing

00:22:12,919 --> 00:22:18,110
system s TTYL miners echo and that works

00:22:15,799 --> 00:22:20,210
fine it's a systems-level tool

00:22:18,110 --> 00:22:22,549
occasionally doing the gross and dirty

00:22:20,210 --> 00:22:26,270
but utterly reliable thing is absolutely

00:22:22,549 --> 00:22:27,679
the correct answer and then you check

00:22:26,270 --> 00:22:32,900
for the correct out button that's great

00:22:27,679 --> 00:22:35,890
ah except there is no option to sudo

00:22:32,900 --> 00:22:38,480
that says hi I'm writing a script here

00:22:35,890 --> 00:22:42,590
please send me a line of output that

00:22:38,480 --> 00:22:44,480
says I don't need a password prompt so

00:22:42,590 --> 00:22:46,520
now the only way you can actually tell

00:22:44,480 --> 00:22:49,490
the Soo Do didn't need a password is

00:22:46,520 --> 00:22:51,350
that your program starts executing now

00:22:49,490 --> 00:22:53,150
when you're trying to isolate the

00:22:51,350 --> 00:22:55,210
password prompting code from all of the

00:22:53,150 --> 00:23:00,590
rest of the async code that's reading it

00:22:55,210 --> 00:23:03,789
that's a little bit frustrating so I

00:23:00,590 --> 00:23:06,020
came up with the world's most yes I

00:23:03,789 --> 00:23:08,809
don't know whether that counts as an

00:23:06,020 --> 00:23:11,390
elegant solution but now I can read a

00:23:08,809 --> 00:23:12,919
look for the goal line and they don't

00:23:11,390 --> 00:23:18,049
control on to the rest of the code and

00:23:12,919 --> 00:23:20,809
that works fine that's work pretty

00:23:18,049 --> 00:23:21,200
reliably okay on some systems see who

00:23:20,809 --> 00:23:23,059
puts

00:23:21,200 --> 00:23:25,929
to do prints out a new line before you

00:23:23,059 --> 00:23:29,590
get the go on some systems it doesn't

00:23:25,929 --> 00:23:33,350
that's yeah it's a quick if statement

00:23:29,590 --> 00:23:34,820
which fail on and I both wrote because i

00:23:33,350 --> 00:23:38,990
forgot to check if he was ahead of me

00:23:34,820 --> 00:23:41,059
again before fixing the bug myself and

00:23:38,990 --> 00:23:43,039
if you get something it doesn't

00:23:41,059 --> 00:23:44,840
understand it goes unexpected line from

00:23:43,039 --> 00:23:46,850
pseudo and bails out because when you're

00:23:44,840 --> 00:23:48,080
trying to be rude you don't really want

00:23:46,850 --> 00:23:53,630
to continue unless you're absolutely

00:23:48,080 --> 00:23:55,789
sure what's going on yeah and that I got

00:23:53,630 --> 00:23:57,470
it on on a machine that would thought

00:23:55,789 --> 00:24:00,649
was that I was doing testing on I

00:23:57,470 --> 00:24:02,899
thought was completely pristine what's

00:24:00,649 --> 00:24:06,049
going on why is this not working and I

00:24:02,899 --> 00:24:07,490
log in by hand start a pseudo and

00:24:06,049 --> 00:24:09,380
discover that guests the machine was

00:24:07,490 --> 00:24:12,559
absolutely pristine and the unexpected

00:24:09,380 --> 00:24:15,100
line from pseudo was the we trust you'll

00:24:12,559 --> 00:24:15,100
receive

00:24:20,010 --> 00:24:26,860
I'm not fixed that one yeah I is SH tin

00:24:24,880 --> 00:24:28,780
to all of the testing hosue dude wants

00:24:26,860 --> 00:24:29,950
on them and just just moved on because

00:24:28,780 --> 00:24:36,550
otherwise I wouldn't have been done in

00:24:29,950 --> 00:24:38,260
time for the talk hi guys the social

00:24:36,550 --> 00:24:46,630
flow team are watching the live stream I

00:24:38,260 --> 00:24:50,260
suck sorry I repeat anyway ah so um yeah

00:24:46,630 --> 00:24:53,890
I'm going to show you some code and I'm

00:24:50,260 --> 00:24:55,780
I am stunningly impressed by the quality

00:24:53,890 --> 00:24:56,920
of the wireless so strongly impressed

00:24:55,780 --> 00:24:59,470
that I'm doing something completely

00:24:56,920 --> 00:25:02,860
insane which is actually relying on the

00:24:59,470 --> 00:25:05,170
network connection to show you this so

00:25:02,860 --> 00:25:06,460
you in about two minutes my collections

00:25:05,170 --> 00:25:09,220
going to drop and we're all going to

00:25:06,460 --> 00:25:10,870
leave early okay um hope to start

00:25:09,220 --> 00:25:15,970
thinking up questions so it looks like

00:25:10,870 --> 00:25:18,370
it was intentional please so oh that's

00:25:15,970 --> 00:25:23,309
far too small to be remotely useful

00:25:18,370 --> 00:25:23,309
thank you can you guys read that Oh

00:25:28,770 --> 00:25:34,030
close and i'll get it this is nothing

00:25:31,750 --> 00:25:37,480
particularly exciting this is just three

00:25:34,030 --> 00:25:39,460
snapshot so checks paths execs get we

00:25:37,480 --> 00:25:42,730
played around with all of the different

00:25:39,460 --> 00:25:44,530
bill modules and when you know that

00:25:42,730 --> 00:25:48,100
obviously that I mean the best thing to

00:25:44,530 --> 00:25:50,020
use here would be you know we want

00:25:48,100 --> 00:25:51,340
something pure Bell because we want to

00:25:50,020 --> 00:25:52,840
be able to ship things about over the

00:25:51,340 --> 00:25:56,620
wire and not worry about excess

00:25:52,840 --> 00:25:58,330
dependencies and so we found get people

00:25:56,620 --> 00:25:59,860
which looked like it was absolutely

00:25:58,330 --> 00:26:02,140
perfect and then we realized it was

00:25:59,860 --> 00:26:04,660
written using mouse so it's not actually

00:26:02,140 --> 00:26:07,570
be a pearl at all its got like five

00:26:04,660 --> 00:26:10,360
exhales dependencies and I didn't quite

00:26:07,570 --> 00:26:12,730
have time to port it to move so we just

00:26:10,360 --> 00:26:16,809
just wrap the bloomin thing and call the

00:26:12,730 --> 00:26:18,429
command that will be fine and then read

00:26:16,809 --> 00:26:21,700
it is literally just doing added

00:26:18,429 --> 00:26:24,100
everything in Accomack RMF strictly

00:26:21,700 --> 00:26:25,840
necessary but pretty much always so far

00:26:24,100 --> 00:26:30,360
we've been adding probes not removing

00:26:25,840 --> 00:26:30,360
them so that's not really been a problem

00:26:30,710 --> 00:26:41,340
and the main chunk of this code is

00:26:38,300 --> 00:26:46,770
systems inspector and can we actually

00:26:41,340 --> 00:26:49,140
Melissa yes we can excellent Rana hlink

00:26:46,770 --> 00:26:51,420
so even with working wireless that the

00:26:49,140 --> 00:26:53,720
live where problem happens and this is

00:26:51,420 --> 00:26:59,040
why we're automating things yeah

00:26:53,720 --> 00:27:03,570
excellent now I just click the wrong

00:26:59,040 --> 00:27:05,160
link again sorry I'm a right so

00:27:03,570 --> 00:27:08,040
the idea here is that you you have a

00:27:05,160 --> 00:27:14,340
top-level gatherer which fires up object

00:27:08,040 --> 00:27:18,090
remote goes on to the farm machine send

00:27:14,340 --> 00:27:19,800
it on to their if necessary it can

00:27:18,090 --> 00:27:22,200
detect whether things need pseudo at

00:27:19,800 --> 00:27:23,580
which point it will use the bridge which

00:27:22,200 --> 00:27:25,620
basically ends up jumping through

00:27:23,580 --> 00:27:30,420
another machine and then two doing up

00:27:25,620 --> 00:27:34,670
and it basically it's relatively simple

00:27:30,420 --> 00:27:39,810
stuff we've got a bunch of utility code

00:27:34,670 --> 00:27:42,990
that wraps around IPC open to and stuff

00:27:39,810 --> 00:27:45,120
in order to pull you know oh we need to

00:27:42,990 --> 00:27:46,470
read a director either that yes yes that

00:27:45,120 --> 00:27:48,030
there's a billion modules that do all of

00:27:46,470 --> 00:27:49,920
this stuff but it's equation of let's

00:27:48,030 --> 00:27:51,570
have the smallest thing because bear in

00:27:49,920 --> 00:27:53,670
mind every time we do a run we're

00:27:51,570 --> 00:27:56,520
shipping this stuff over the wire so it

00:27:53,670 --> 00:27:58,260
code size for what actually does almost

00:27:56,520 --> 00:28:04,230
kind of matter although we're still

00:27:58,260 --> 00:28:08,790
using a fair chunk of Sipan the the

00:28:04,230 --> 00:28:13,850
really interesting thing is if you look

00:28:08,790 --> 00:28:17,600
at this one I think it's this one yeah

00:28:13,850 --> 00:28:23,130
the the handle stuff and we started off

00:28:17,600 --> 00:28:24,810
with doing an open bash pipe and managed

00:28:23,130 --> 00:28:27,630
to find that if there was if a binary

00:28:24,810 --> 00:28:29,880
didn't exist which was how we discovered

00:28:27,630 --> 00:28:31,350
that there's at least one machine that

00:28:29,880 --> 00:28:33,390
never had the script run on it that

00:28:31,350 --> 00:28:35,400
installs less off which is one of those

00:28:33,390 --> 00:28:36,930
things that's very easy to miss manually

00:28:35,400 --> 00:28:41,520
and again proves why we need to automate

00:28:36,930 --> 00:28:42,850
all of this and over a piped open fall

00:28:41,520 --> 00:28:44,830
under opening

00:28:42,850 --> 00:28:48,880
on pretty much every version we could

00:28:44,830 --> 00:28:50,860
find somehow on those machines when the

00:28:48,880 --> 00:28:53,260
exec failed the child process carried on

00:28:50,860 --> 00:28:57,790
but it's dolla dolla was still set to

00:28:53,260 --> 00:29:00,760
the pair impaired well what the heck

00:28:57,790 --> 00:29:01,960
have we done here you know if you're if

00:29:00,760 --> 00:29:04,000
you're writing something like double

00:29:01,960 --> 00:29:07,120
declare you expect to snap pearl a few

00:29:04,000 --> 00:29:11,470
times but not not for this you know um

00:29:07,120 --> 00:29:16,180
and so it would went back and went okay

00:29:11,470 --> 00:29:18,760
new plan IPC open to ibc open to and

00:29:16,180 --> 00:29:20,920
then what we'll do is to make sure it

00:29:18,760 --> 00:29:22,210
automatically gets weight petted cuz

00:29:20,920 --> 00:29:24,580
you've got a file handle the file

00:29:22,210 --> 00:29:26,770
handles a tight glob which means that

00:29:24,580 --> 00:29:28,420
it's got a hash slot so you stick an

00:29:26,770 --> 00:29:29,980
object in one of the keys of the highest

00:29:28,420 --> 00:29:31,390
slot that has a destroy method that does

00:29:29,980 --> 00:29:34,240
the weight pit for the child when the

00:29:31,390 --> 00:29:36,130
file n will goes out of scope and then

00:29:34,240 --> 00:29:39,370
that basically works just as well as

00:29:36,130 --> 00:29:41,050
open pipe dash except for a small amount

00:29:39,370 --> 00:29:42,460
of extra crack and then sometime next

00:29:41,050 --> 00:29:44,260
week one of us is going to try and

00:29:42,460 --> 00:29:50,140
figure out what the heck is going on and

00:29:44,260 --> 00:29:52,090
file a plug at which point i'm sure p

00:29:50,140 --> 00:29:54,040
phi p will go Matt you're an idiot

00:29:52,090 --> 00:29:56,680
here's what you should have done and why

00:29:54,040 --> 00:30:02,200
that didn't work but yeah it's the

00:29:56,680 --> 00:30:04,510
nature of software right um so you end

00:30:02,200 --> 00:30:09,520
up with a load of JSON files so if I

00:30:04,510 --> 00:30:20,770
click in pick an example basic hosting

00:30:09,520 --> 00:30:24,880
oh well done I'm the stupid bloody

00:30:20,770 --> 00:30:27,190
excuse for a web browser there we are

00:30:24,880 --> 00:30:29,650
and that looks absolutely awful and is

00:30:27,190 --> 00:30:35,050
completely useless and what I'm going to

00:30:29,650 --> 00:30:37,210
do is give me one moment I i have this

00:30:35,050 --> 00:30:38,550
slight problem in the am you know you

00:30:37,210 --> 00:30:40,780
know how people go on about backwards

00:30:38,550 --> 00:30:44,020
compatibility is it is an impedance to

00:30:40,780 --> 00:30:45,820
progress well Firefox is wonderful

00:30:44,020 --> 00:30:47,470
record on backwards compatibility for

00:30:45,820 --> 00:30:49,450
zoom stuff isn't impedance to me being

00:30:47,470 --> 00:30:53,370
able to run my slide system on one from

00:30:49,450 --> 00:30:57,390
this century so anyway

00:30:53,370 --> 00:30:59,430
on air and it yeah it's nothing clever

00:30:57,390 --> 00:31:03,450
the whole point of this is to be nothing

00:30:59,430 --> 00:31:05,280
clever you know I've often systems code

00:31:03,450 --> 00:31:07,770
you want the stupidest thing possible

00:31:05,280 --> 00:31:11,520
because then you are not actually being

00:31:07,770 --> 00:31:13,980
able to be fairly sure that the problem

00:31:11,520 --> 00:31:15,360
is the applications develop a developer

00:31:13,980 --> 00:31:17,340
being a muppet and you can get walk

00:31:15,360 --> 00:31:19,350
around it walk around the desk can slap

00:31:17,340 --> 00:31:26,550
him rather than it turning out to be a

00:31:19,350 --> 00:31:33,390
bug in your code and that's why I do

00:31:26,550 --> 00:31:35,070
most of the site visits um so it builds

00:31:33,390 --> 00:31:38,780
things like growth package information

00:31:35,070 --> 00:31:44,370
on what if this this is not particularly

00:31:38,780 --> 00:31:46,110
exciting exact trailing comma well hour

00:31:44,370 --> 00:31:48,120
and a half to get a trailing gamma in

00:31:46,110 --> 00:31:51,809
order to do in order to get sensible

00:31:48,120 --> 00:31:56,550
dips a ticket yeah don't you just love

00:31:51,809 --> 00:31:57,900
writing systems go so let's see if I can

00:31:56,550 --> 00:32:02,700
get a slightly better view because the

00:31:57,900 --> 00:32:03,870
web viewer is um I'm not sure whether

00:32:02,700 --> 00:32:13,710
you're going to love this or whether

00:32:03,870 --> 00:32:21,000
you're going to cry because it's 200

00:32:13,710 --> 00:32:23,630
lines of web simple like is that

00:32:21,000 --> 00:32:28,620
somewhat legible to some of you

00:32:23,630 --> 00:32:31,350
hopefully so the lovely thing about web

00:32:28,620 --> 00:32:32,870
simple is because it's pure psg I that

00:32:31,350 --> 00:32:35,429
that viewer I was showing you before

00:32:32,870 --> 00:32:38,309
isn't about you it's just I know okay

00:32:35,429 --> 00:32:40,050
sex life small / load up the black app

00:32:38,309 --> 00:32:42,240
directory and just return it and web

00:32:40,050 --> 00:32:44,400
symbol goes oh you gave me a black

00:32:42,240 --> 00:32:49,890
application I'll just dispatch to that

00:32:44,400 --> 00:32:51,780
then cool not a problem uh it's actually

00:32:49,890 --> 00:32:54,390
less code than configuring the static

00:32:51,780 --> 00:32:56,490
plugin of most other frameworks and I

00:32:54,390 --> 00:33:01,140
know exactly what it's doing she's

00:32:56,490 --> 00:33:02,700
always nice um filter data if it comes

00:33:01,140 --> 00:33:06,029
back and throw it through a rending a

00:33:02,700 --> 00:33:09,179
rendering system um

00:33:06,029 --> 00:33:13,289
but non specification there is pulling a

00:33:09,179 --> 00:33:14,729
query parameter and as I mean I Hobbs

00:33:13,289 --> 00:33:17,460
was showing you this in a lightning talk

00:33:14,729 --> 00:33:20,700
yesterday but you have the lovely thing

00:33:17,460 --> 00:33:22,590
of and by sticking a nap and at time

00:33:20,700 --> 00:33:25,679
before the name of the parameter I say

00:33:22,590 --> 00:33:27,179
just always give me an array I do not

00:33:25,679 --> 00:33:30,179
want the messing about that comes from

00:33:27,179 --> 00:33:33,090
CGI Stamper and methods I do not want to

00:33:30,179 --> 00:33:36,239
play the ref dollar underscore zero ? at

00:33:33,090 --> 00:33:42,269
dollar underscore zero no just give me a

00:33:36,239 --> 00:33:44,549
row and then we have the hilarity that

00:33:42,269 --> 00:33:48,450
is HTML tags that is valid pearl there

00:33:44,549 --> 00:33:50,099
is no source filter involved it's not

00:33:48,450 --> 00:33:52,349
quite as obvious in there just how

00:33:50,099 --> 00:33:54,179
insane that is but the thing is I don't

00:33:52,349 --> 00:33:56,429
need a template for this it's code to

00:33:54,179 --> 00:33:59,039
just display data somebody can stick

00:33:56,429 --> 00:34:01,169
some CSS on it but really really a

00:33:59,039 --> 00:34:03,029
systems administration ops people going

00:34:01,169 --> 00:34:04,979
to complain that it isn't nicely styled

00:34:03,029 --> 00:34:08,129
if the date is all there two days sooner

00:34:04,979 --> 00:34:10,079
that it would have been another way well

00:34:08,129 --> 00:34:11,730
okay make maybe they are but at that

00:34:10,079 --> 00:34:13,139
point my responses well I'm sure you

00:34:11,730 --> 00:34:15,750
have somebody in a house with lots of

00:34:13,139 --> 00:34:17,669
CSS knowledge and since this is your

00:34:15,750 --> 00:34:20,099
code here's a commitment for them please

00:34:17,669 --> 00:34:22,319
please you know I actually like things

00:34:20,099 --> 00:34:25,799
that are on style HTML 3 style I

00:34:22,319 --> 00:34:27,929
actually understand that msdn converging

00:34:25,799 --> 00:34:29,460
web one point Oh terribly sorry I'm busy

00:34:27,929 --> 00:34:38,099
writing some code to deploy to

00:34:29,460 --> 00:34:41,460
production but yeah we would this is

00:34:38,099 --> 00:34:44,369
again literally there's a whole set of

00:34:41,460 --> 00:34:47,099
madness HTML tags comes with web simple

00:34:44,369 --> 00:34:48,779
um I think it's I think it's the only

00:34:47,099 --> 00:34:50,250
thing that I've ever shown today me and

00:34:48,779 --> 00:34:56,730
when he won't wear that resulted in

00:34:50,250 --> 00:34:58,470
going oh that's kind of clever but it

00:34:56,730 --> 00:35:00,059
doesn't break nearly as much as

00:34:58,470 --> 00:35:05,789
everything else I've ever heard him say

00:35:00,059 --> 00:35:08,789
that's about so it's all okay but the so

00:35:05,789 --> 00:35:11,970
the point is that there's no special

00:35:08,789 --> 00:35:15,869
logic in here all it's doing is looking

00:35:11,970 --> 00:35:19,260
at those JSON files so if I go on an

00:35:15,869 --> 00:35:24,180
exploring mission I can go

00:35:19,260 --> 00:35:27,630
okay let's have groups JSON click into

00:35:24,180 --> 00:35:29,820
the groups and we get named group and

00:35:27,630 --> 00:35:32,100
what users are in it in a not

00:35:29,820 --> 00:35:37,740
particularly exciting HTML table but

00:35:32,100 --> 00:35:40,380
it's good enough to read now your stuff

00:35:37,740 --> 00:35:42,600
I'm not sure how much nagios configures

00:35:40,380 --> 00:35:43,650
on here I'm also not sure if this isn't

00:35:42,600 --> 00:35:45,120
going to turn out to be one of the

00:35:43,650 --> 00:35:48,540
things that I didn't manage to make work

00:35:45,120 --> 00:35:51,540
right oh no no we appeared to have

00:35:48,540 --> 00:35:54,900
nagios information which is reasonably

00:35:51,540 --> 00:35:58,320
handy one of one of the interesting

00:35:54,900 --> 00:36:02,820
things that we've done is um actually

00:35:58,320 --> 00:36:05,190
gone through and not only grab all of

00:36:02,820 --> 00:36:08,280
the information out of apt about what's

00:36:05,190 --> 00:36:09,930
installed and what could be upgraded so

00:36:08,280 --> 00:36:12,710
we've got what all of the packages on

00:36:09,930 --> 00:36:16,890
the system are but we've also got a

00:36:12,710 --> 00:36:18,890
probe that does allocate and finds all

00:36:16,890 --> 00:36:23,130
of the git repositories on the machine

00:36:18,890 --> 00:36:26,120
which means you can go and go okay what

00:36:23,130 --> 00:36:29,990
applications have we got deployed where

00:36:26,120 --> 00:36:32,430
what's the git config for this one a

00:36:29,990 --> 00:36:34,500
which point where we can pull out what

00:36:32,430 --> 00:36:36,210
revision we're at which remote

00:36:34,500 --> 00:36:37,950
repository is so we can that we can

00:36:36,210 --> 00:36:39,810
match up stuff that's been deployed by

00:36:37,950 --> 00:36:42,000
doing a git checkout thrown in its grip

00:36:39,810 --> 00:36:44,100
on and go for it which I'm not

00:36:42,000 --> 00:36:47,640
necessarily that fond of as a deployment

00:36:44,100 --> 00:36:49,440
strategy but you know it beats not

00:36:47,640 --> 00:36:53,010
having a deployment strategy by quite a

00:36:49,440 --> 00:36:54,900
long way and now at this point we can go

00:36:53,010 --> 00:36:59,370
and find out exactly what's running on

00:36:54,900 --> 00:37:05,040
what system fairly easily um but they

00:36:59,370 --> 00:37:08,250
did the fun one which is powered by this

00:37:05,040 --> 00:37:12,510
bit which is possibly the strangest

00:37:08,250 --> 00:37:15,090
piece of code in here and basically if

00:37:12,510 --> 00:37:18,300
it detects multiple homes separated by a

00:37:15,090 --> 00:37:21,030
plus at the start it goes and grabs the

00:37:18,300 --> 00:37:23,870
first host if it's still part of a drill

00:37:21,030 --> 00:37:26,460
down it just gives you the drill down so

00:37:23,870 --> 00:37:28,730
going down here if we're going to users

00:37:26,460 --> 00:37:28,730
for example

00:37:29,230 --> 00:37:36,260
pulling say and group information but

00:37:34,190 --> 00:37:37,640
that's drill down stuff but this is just

00:37:36,260 --> 00:37:42,770
drill them but soon as you get to a

00:37:37,640 --> 00:37:49,010
table I'll watch this select those of

00:37:42,770 --> 00:37:50,900
them multiply and I forgot a slash on

00:37:49,010 --> 00:37:56,359
the end of the URL excellent I'm an

00:37:50,900 --> 00:37:59,000
idiot that's all right in the spirit of

00:37:56,359 --> 00:38:02,380
I did a live demo there's only one

00:37:59,000 --> 00:38:02,380
possible thing to do isn't there

00:38:21,790 --> 00:38:34,730
and it only being web simple can we yeah

00:38:26,270 --> 00:38:41,270
we can mostly see this yeah where's the

00:38:34,730 --> 00:38:46,099
all for pete's sake there we go ha give

00:38:41,270 --> 00:38:52,549
me huge oh yeah and I can actually test

00:38:46,099 --> 00:38:53,809
it by doing and of course the externs

00:38:52,549 --> 00:39:01,970
gone off the top of the screen someone

00:38:53,809 --> 00:39:06,440
more on JT asked me to submit pearl in

00:39:01,970 --> 00:39:13,309
action he got Berlin action idiocy on my

00:39:06,440 --> 00:39:16,839
part in all terribly sorry going to have

00:39:13,309 --> 00:39:16,839
to quote that or it's going to get upset

00:39:17,799 --> 00:39:27,470
still giving me the run ah that's

00:39:20,839 --> 00:39:29,990
because I'm an idiot there we go that

00:39:27,470 --> 00:39:31,700
looks more like it doesn't it so now

00:39:29,990 --> 00:39:36,490
since the web simple art is not only

00:39:31,700 --> 00:39:38,930
valid that way but also as a psg aya I

00:39:36,490 --> 00:39:41,869
control it with star man and forget that

00:39:38,930 --> 00:39:43,940
I need a custom port specifier there we

00:39:41,869 --> 00:39:46,369
go see did this is why this is why I

00:39:43,940 --> 00:39:48,079
don't do live demos normally I look so

00:39:46,369 --> 00:39:55,150
much less stupid with pre-prepared

00:39:48,079 --> 00:39:55,150
slides anyway and go back to the start

00:39:55,540 --> 00:40:01,750
multi Phi works this time excellent

00:40:03,150 --> 00:40:09,690
to go into packages it's doing the drill

00:40:06,220 --> 00:40:14,440
down normally but now if i hit installed

00:40:09,690 --> 00:40:17,260
i'm going to get named a package on one

00:40:14,440 --> 00:40:19,120
and the versions on the two machines so

00:40:17,260 --> 00:40:20,940
i can now compare this and go well that

00:40:19,120 --> 00:40:24,490
most of these are pretty much the same

00:40:20,940 --> 00:40:26,200
apt is a slightly different version but

00:40:24,490 --> 00:40:32,860
we can also buy paging down because it

00:40:26,200 --> 00:40:34,480
merges both see the packages that were

00:40:32,860 --> 00:40:39,550
installed on one machine and not on the

00:40:34,480 --> 00:40:42,760
other arm which in fact i would i

00:40:39,550 --> 00:40:44,170
wouldn't be surprised a firm at this

00:40:42,760 --> 00:40:46,150
point the people looking at the stream

00:40:44,170 --> 00:40:48,220
are going maybe i need to pull up that

00:40:46,150 --> 00:40:49,570
URL and figure out why the Devon the

00:40:48,220 --> 00:40:51,700
prod version of this have got different

00:40:49,570 --> 00:40:56,860
things installed which is the entire

00:40:51,700 --> 00:40:59,380
point of the exercise and as i say that

00:40:56,860 --> 00:41:01,120
this is this is purely just going do I

00:40:59,380 --> 00:41:02,860
have a hash in the JSON do I have an

00:41:01,120 --> 00:41:04,990
array in the JSON it doesn't actually

00:41:02,860 --> 00:41:09,940
have any comprehension of the content

00:41:04,990 --> 00:41:14,400
and so if I go back down one of the

00:41:09,940 --> 00:41:18,940
things it does which will hopefully work

00:41:14,400 --> 00:41:20,680
yep is we've now got users and we can

00:41:18,940 --> 00:41:22,840
check the group IDs and all of the

00:41:20,680 --> 00:41:25,540
usernames see which ones are on there

00:41:22,840 --> 00:41:27,460
and which ones aren't Oh excellent bear

00:41:25,540 --> 00:41:29,920
did cast away to the production box but

00:41:27,460 --> 00:41:31,060
not the development box that's that's

00:41:29,920 --> 00:41:34,120
that's going to be great for the

00:41:31,060 --> 00:41:35,890
documentation effort um presumably I

00:41:34,120 --> 00:41:39,520
forgot to ask for the account on now

00:41:35,890 --> 00:41:42,910
that one's almost certainly my fault but

00:41:39,520 --> 00:41:44,590
the other thing is it still keeps a

00:41:42,910 --> 00:41:47,500
single version of the links that are

00:41:44,590 --> 00:41:50,350
drill down so if I now to explore groups

00:41:47,500 --> 00:41:56,050
I still end up with a sensible group out

00:41:50,350 --> 00:41:58,800
book and that I mean that adds basically

00:41:56,050 --> 00:42:02,050
um all of these repositories are

00:41:58,800 --> 00:42:05,620
currently in get not Shadowcat book code

00:42:02,050 --> 00:42:07,210
at UK because under the circumstances it

00:42:05,620 --> 00:42:10,780
struck me it might be a little bit

00:42:07,210 --> 00:42:12,640
churlish um for us to ask them to spend

00:42:10,780 --> 00:42:13,730
time and money setting up a public get

00:42:12,640 --> 00:42:15,290
system

00:42:13,730 --> 00:42:17,180
when they just spent all this time and

00:42:15,290 --> 00:42:19,700
money actually having the code built to

00:42:17,180 --> 00:42:22,430
go into it so I volunteered the use of

00:42:19,700 --> 00:42:24,290
hours it seemed only fair and so if

00:42:22,430 --> 00:42:26,780
you're going to get Shadowcat Dakota at

00:42:24,290 --> 00:42:29,030
UK and you can find all of the code

00:42:26,780 --> 00:42:32,180
that's involved in this it is all going

00:42:29,030 --> 00:42:34,070
to be / licensed we've remembered to

00:42:32,180 --> 00:42:36,170
commit it to commit a sponsored by

00:42:34,070 --> 00:42:38,600
social flow notice to most of it and

00:42:36,170 --> 00:42:40,160
before it goes to seep and it's going to

00:42:38,600 --> 00:42:44,390
get proper copyright notices and

00:42:40,160 --> 00:42:45,830
actually some documentation I think

00:42:44,390 --> 00:42:48,340
about two-thirds of the stuff that

00:42:45,830 --> 00:42:50,570
felons written is already documented and

00:42:48,340 --> 00:42:53,420
about none of the stuff that I've

00:42:50,570 --> 00:42:58,160
written is already documented see my

00:42:53,420 --> 00:42:59,810
previous comment but um I think this it

00:42:58,160 --> 00:43:02,540
this is going to turn out to be a really

00:42:59,810 --> 00:43:04,160
useful thing because actually knowing

00:43:02,540 --> 00:43:06,170
where you're up to and being able to

00:43:04,160 --> 00:43:08,600
browse it and if you need another probe

00:43:06,170 --> 00:43:11,060
for something that's that's basic to

00:43:08,600 --> 00:43:13,790
your environment all you're looking at

00:43:11,060 --> 00:43:16,640
doing is writing a simple mu class that

00:43:13,790 --> 00:43:18,350
returns a hat ref the hash web goes into

00:43:16,640 --> 00:43:20,030
JSON the Jason goes into the git

00:43:18,350 --> 00:43:22,250
repository in the browser just goes oh

00:43:20,030 --> 00:43:28,280
hey it's another JSON file I can browse

00:43:22,250 --> 00:43:29,869
that and if any if any of you do if any

00:43:28,280 --> 00:43:31,609
of you decide to have a play with it

00:43:29,869 --> 00:43:34,400
before we manage to see panic and sort

00:43:31,609 --> 00:43:37,340
out IRC channels and stuff please come

00:43:34,400 --> 00:43:38,840
and bug me because I would love to have

00:43:37,340 --> 00:43:41,030
some people helping with this and

00:43:38,840 --> 00:43:42,890
contributing to this because the idea

00:43:41,030 --> 00:43:46,490
that quite a few of you might find this

00:43:42,890 --> 00:43:49,070
useful and thereby want to contribute is

00:43:46,490 --> 00:43:50,930
basically the argument I made to talk

00:43:49,070 --> 00:43:53,930
the wonderful people at social flow into

00:43:50,930 --> 00:43:55,970
sponsoring most of it so if you could

00:43:53,930 --> 00:43:58,160
help me not be a liar to my customer

00:43:55,970 --> 00:44:00,380
that would be really nice and if you can

00:43:58,160 --> 00:44:01,880
get some useful use out of this software

00:44:00,380 --> 00:44:05,720
at the same time that's going to be even

00:44:01,880 --> 00:44:08,119
cooler and um yeah that's that's pretty

00:44:05,720 --> 00:44:11,119
much it we have about five minutes left

00:44:08,119 --> 00:44:14,290
on the slot so um thank you very much

00:44:11,119 --> 00:44:14,290
and any questions

00:44:24,520 --> 00:44:36,530
God that absolutely is and when you're

00:44:34,790 --> 00:44:38,630
in the situation of an insufficiently

00:44:36,530 --> 00:44:41,210
automated infrastructure how exactly do

00:44:38,630 --> 00:44:43,220
you get to being root in order to add

00:44:41,210 --> 00:44:46,160
the nose password option to your soo do

00:44:43,220 --> 00:44:52,910
config that's why I had to write the

00:44:46,160 --> 00:44:54,740
prompt stuff good point well made well

00:44:52,910 --> 00:44:57,470
it's great on sufficiently automated

00:44:54,740 --> 00:44:59,720
infrastructures guess what everybody

00:44:57,470 --> 00:45:01,870
else guess what the real world does to

00:44:59,720 --> 00:45:01,870
me

00:45:17,420 --> 00:45:23,489
yeah just a second let me just pull it

00:45:19,829 --> 00:45:31,950
down to be in one system cuz then i can

00:45:23,489 --> 00:45:34,849
actually see the table i know that what

00:45:31,950 --> 00:45:38,640
they are is if there's a key in the JSON

00:45:34,849 --> 00:45:40,680
where the value is a hash then it makes

00:45:38,640 --> 00:45:45,029
a link that then goes and displays the

00:45:40,680 --> 00:45:55,160
contents of that hash yeah it's peter

00:45:45,029 --> 00:45:55,160
drill down cheers

00:46:06,940 --> 00:46:19,260
uh yeah I loved being asked about grid

00:46:13,930 --> 00:46:19,260
machine which I will plop on screen via

00:46:23,360 --> 00:46:30,710
well that's good killing little machine

00:46:25,940 --> 00:46:33,640
not so it's going to be easy with to

00:46:30,710 --> 00:46:33,640
answer ah there we go

00:46:45,160 --> 00:46:53,200
the answer is our the answer is that

00:46:50,650 --> 00:46:57,250
this stuff is sending code across via

00:46:53,200 --> 00:47:01,770
eval over the top in ER in the IPC pearl

00:46:57,250 --> 00:47:04,809
SSH style which is very very cool but I

00:47:01,770 --> 00:47:07,450
just like to I don't see anything in

00:47:04,809 --> 00:47:08,770
here I'm talking about being able to

00:47:07,450 --> 00:47:10,660
automatically send all of the

00:47:08,770 --> 00:47:13,660
dependencies of your code over the wire

00:47:10,660 --> 00:47:20,260
recursively which is what i wrote object

00:47:13,660 --> 00:47:22,990
remote to do yeah here we go what is

00:47:20,260 --> 00:47:24,849
what it appears to be doing is it sends

00:47:22,990 --> 00:47:28,960
a hard-coded list of objects over the

00:47:24,849 --> 00:47:31,930
wire and what I'm doing is I squirt a

00:47:28,960 --> 00:47:33,849
fat back bootstrap and then pull in

00:47:31,930 --> 00:47:36,880
anything and everything else you need on

00:47:33,849 --> 00:47:38,559
demand so so long as it's installed

00:47:36,880 --> 00:47:42,069
locally I don't have to reference it

00:47:38,559 --> 00:47:46,990
again it sticks a code reffing at ink

00:47:42,069 --> 00:47:49,650
that goes and figures it out anybody

00:47:46,990 --> 00:47:49,650
else Oh

00:47:59,450 --> 00:48:07,950
excess modules do not because Perl

00:48:04,710 --> 00:48:10,050
provides lovely mechanisms involving a

00:48:07,950 --> 00:48:11,609
tink and staff and of course there's

00:48:10,050 --> 00:48:15,930
that fat packer to get the initial

00:48:11,609 --> 00:48:17,970
bootstrap which is what sepa- uses for

00:48:15,930 --> 00:48:21,180
which makes handling pure polestar very

00:48:17,970 --> 00:48:24,810
nice and easy if it's an excess module

00:48:21,180 --> 00:48:26,520
in order to produce the equivalent you

00:48:24,810 --> 00:48:28,800
would basically have to figure out how

00:48:26,520 --> 00:48:30,720
to wrap the linker which is going to

00:48:28,800 --> 00:48:33,660
start getting very operating system an

00:48:30,720 --> 00:48:35,490
environment specific and given this is

00:48:33,660 --> 00:48:38,250
this is designed to be usable in a

00:48:35,490 --> 00:48:41,970
heterogeneous potentially semi hostile

00:48:38,250 --> 00:48:43,890
environments and the answer is basically

00:48:41,970 --> 00:48:46,829
just just to go for a pure pearls back

00:48:43,890 --> 00:48:48,300
all the way down and most of the

00:48:46,829 --> 00:48:50,430
relevant tools that you're going to want

00:48:48,300 --> 00:48:53,339
for systems introspection a pure pearl

00:48:50,430 --> 00:48:55,170
anyway at the point of which you need an

00:48:53,339 --> 00:48:57,869
excess module I've not yet been in a

00:48:55,170 --> 00:49:00,089
situation where there was where the

00:48:57,869 --> 00:49:02,579
reason I wanted an excess module on the

00:49:00,089 --> 00:49:04,920
machine like say a DB day hadn't already

00:49:02,579 --> 00:49:08,430
resulted in that excess module already

00:49:04,920 --> 00:49:09,990
being installed for me and the only kind

00:49:08,430 --> 00:49:12,060
of limitation here is it means that I

00:49:09,990 --> 00:49:16,849
have is that is it means that I'm always

00:49:12,060 --> 00:49:20,010
using new rather than moves but that's

00:49:16,849 --> 00:49:23,310
not that big a deal for this level of

00:49:20,010 --> 00:49:24,900
code because you know at the point at

00:49:23,310 --> 00:49:27,780
which you start using features that are

00:49:24,900 --> 00:49:29,220
removed but not in MO you kind of what

00:49:27,780 --> 00:49:32,040
you kind of want to be repeating to

00:49:29,220 --> 00:49:35,990
yourself this is systems you appear to

00:49:32,040 --> 00:49:38,310
be trying to be clever please stop

00:49:35,990 --> 00:49:40,200
anybody who's ever carried a page and

00:49:38,310 --> 00:49:44,310
knows why you need to repeat that to

00:49:40,200 --> 00:49:46,380
yourself all the time in such things I I

00:49:44,310 --> 00:49:49,950
do love the amount of clever that moves

00:49:46,380 --> 00:49:52,290
gives me that's why I am if you load

00:49:49,950 --> 00:49:54,240
moves into a process with new glasses in

00:49:52,290 --> 00:49:56,760
all of the MU glasses suddenly appeared

00:49:54,240 --> 00:49:59,069
to have been moved classes all along so

00:49:56,760 --> 00:50:02,000
I can take advantage of all of Steven

00:49:59,069 --> 00:50:05,190
littles clever and the times I need it

00:50:02,000 --> 00:50:06,869
and get my pupil fatback ability in

00:50:05,190 --> 00:50:08,640
shippable over the wire the rest of the

00:50:06,869 --> 00:50:11,039
time

00:50:08,640 --> 00:50:19,730
it's it's been a pretty good compromise

00:50:11,039 --> 00:50:21,900
so far I'll 11 other I counter argument

00:50:19,730 --> 00:50:24,900
which is the reason that fat Packer

00:50:21,900 --> 00:50:26,700
doesn't support excess you take

00:50:24,900 --> 00:50:30,900
something that does what fat pakka does

00:50:26,700 --> 00:50:33,269
if you dry make it support excess allow

00:50:30,900 --> 00:50:46,109
me to tell you what happens what happens

00:50:33,269 --> 00:50:48,000
is par no part is insane Brock and I

00:50:46,109 --> 00:50:50,730
love it dearly for the fact that it

00:50:48,000 --> 00:50:52,740
works at all but you know that that

00:50:50,730 --> 00:50:54,869
would that was about a year a year's

00:50:52,740 --> 00:50:58,260
worth of Audrey crazy that made it work

00:50:54,869 --> 00:51:00,450
at all I don't feel like trying to

00:50:58,260 --> 00:51:01,950
duplicate a year's worth of Audrey crazy

00:51:00,450 --> 00:51:05,210
to end up with something that probably

00:51:01,950 --> 00:51:07,529
doesn't work as well as par already does

00:51:05,210 --> 00:51:09,299
if you want to send me a patch to have

00:51:07,529 --> 00:51:11,910
object remote be able to automatically

00:51:09,299 --> 00:51:15,690
use app are you prepared earlier I'd be

00:51:11,910 --> 00:51:17,339
totally happy to accept that you're

00:51:15,690 --> 00:51:23,640
handling the support questions for it

00:51:17,339 --> 00:51:27,089
though at some point you have to

00:51:23,640 --> 00:51:30,769
compromise in order you know at this

00:51:27,089 --> 00:51:34,890
stage I've worked on to web frameworks

00:51:30,769 --> 00:51:36,960
two or three templating systems one and

00:51:34,890 --> 00:51:38,609
a half hour m's which is probably going

00:51:36,960 --> 00:51:42,569
to be two and a half at some point in

00:51:38,609 --> 00:51:44,700
the next year or two what one object

00:51:42,569 --> 00:51:49,799
system what few sand points I have left

00:51:44,700 --> 00:51:51,900
I need to keep okay if Cthulhu eats my

00:51:49,799 --> 00:51:57,450
brain I won't be the next year's yap see

00:51:51,900 --> 00:52:00,029
right but yeah fair point and it's

00:51:57,450 --> 00:52:02,039
slightly right also the only thing I'm

00:52:00,029 --> 00:52:05,849
actually good at with C is making it seg

00:52:02,039 --> 00:52:07,259
fault so even were even even if I

00:52:05,849 --> 00:52:10,589
believe there was a sensible way of

00:52:07,259 --> 00:52:12,950
implementing access for this I'd suggest

00:52:10,589 --> 00:52:15,960
somebody else should probably do it

00:52:12,950 --> 00:52:17,970
right and we're pretty much dead at a

00:52:15,960 --> 00:52:20,269
time but if anybody's got one last quick

00:52:17,970 --> 00:52:20,269
one

00:52:20,820 --> 00:52:26,090

YouTube URL: https://www.youtube.com/watch?v=DrwxrVNUA5M


