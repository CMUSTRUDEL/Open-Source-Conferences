Title: Mark Allen   Intro to Dancer
Publication date: 2013-08-20
Playlist: YAPC::NA 2012
Description: 
	
Captions: 
	00:00:01,100 --> 00:00:05,430
so just just a couple more minutes in

00:00:03,570 --> 00:00:26,480
the world we'll get going here promise

00:00:05,430 --> 00:00:31,800
what it's on speaker deck my username is

00:00:26,480 --> 00:00:35,190
Malin I think I don't remember I think

00:00:31,800 --> 00:00:38,280
its morale in one actually yeah speaker

00:00:35,190 --> 00:00:42,270
deck mr allen one it's not supposed to

00:00:38,280 --> 00:00:44,879
be mr. Allen I'm not that formal it's

00:00:42,270 --> 00:00:47,039
just that all the all the other

00:00:44,879 --> 00:00:56,579
variations of my extremely common name

00:00:47,039 --> 00:00:57,870
were taken on yahoo so yeah and as far

00:00:56,579 --> 00:00:59,520
as i can tell it's like me and one other

00:00:57,870 --> 00:01:08,900
guy that actually uses yahoo mail still

00:00:59,520 --> 00:01:16,200
so whatever it is Sawyer in the house

00:01:08,900 --> 00:01:20,030
thanks for coming I didn't mean to

00:01:16,200 --> 00:01:23,450
single you out though hey man I'm mark

00:01:20,030 --> 00:01:23,450
yeah let's hang out

00:01:25,580 --> 00:01:29,550
alright so I think we're going to go

00:01:27,810 --> 00:01:31,470
ahead and get started i am mark allen

00:01:29,550 --> 00:01:33,540
today i'm going to talk about the answer

00:01:31,470 --> 00:01:36,390
which is a web framework for pearl is

00:01:33,540 --> 00:01:38,790
very inspired by sinatra and there are

00:01:36,390 --> 00:01:41,610
actually several frameworks for pearl

00:01:38,790 --> 00:01:44,340
that you may be familiar with many it

00:01:41,610 --> 00:01:47,370
seems that some come each month but this

00:01:44,340 --> 00:01:49,590
is the one that I started on and just it

00:01:47,370 --> 00:01:50,760
really whatever about it just sort of

00:01:49,590 --> 00:01:53,310
clicked for me so I've kind of stuck

00:01:50,760 --> 00:01:54,870
with it I have a talk tomorrow where I'm

00:01:53,310 --> 00:01:57,090
going to kind of be comparing and

00:01:54,870 --> 00:01:59,940
contrasting some various platform as a

00:01:57,090 --> 00:02:01,800
service providers like dot cloud and

00:01:59,940 --> 00:02:04,080
Heroku and I've written the same

00:02:01,800 --> 00:02:07,560
application in four different web

00:02:04,080 --> 00:02:10,020
frameworks mojo dancer flask which is

00:02:07,560 --> 00:02:12,780
written in Python and web machine which

00:02:10,020 --> 00:02:15,360
is Erlang and they all do the same job

00:02:12,780 --> 00:02:17,340
and so if you want to learn more about

00:02:15,360 --> 00:02:19,170
Pearl platform as a service like compare

00:02:17,340 --> 00:02:20,940
and contrast see which ones do which how

00:02:19,170 --> 00:02:22,320
magical they are and that sort of thing

00:02:20,940 --> 00:02:23,790
come to my talk tomorrow it's 20 minutes

00:02:22,320 --> 00:02:25,920
long so it's little bit shorter than

00:02:23,790 --> 00:02:28,830
this but it's also a nice example

00:02:25,920 --> 00:02:30,780
application how to implement something

00:02:28,830 --> 00:02:32,250
and if you already familiar with mojo or

00:02:30,780 --> 00:02:36,090
something maybe it maybe we'll give you

00:02:32,250 --> 00:02:38,730
a leg up with dancer so the way that

00:02:36,090 --> 00:02:41,700
this talk is broken down is its kind of

00:02:38,730 --> 00:02:43,200
developed into five different parts and

00:02:41,700 --> 00:02:45,150
talk about the old days and to talk

00:02:43,200 --> 00:02:47,640
about the various properties that dancer

00:02:45,150 --> 00:02:49,380
has how awesome it is and then I'm going

00:02:47,640 --> 00:02:50,970
to kind of talk about some resources so

00:02:49,380 --> 00:02:53,580
all the code that you're going to see in

00:02:50,970 --> 00:02:57,030
my slides is available I think it's

00:02:53,580 --> 00:02:59,610
still on bitbucket I actually kind of

00:02:57,030 --> 00:03:03,150
prefer bitbucket to github but no one

00:02:59,610 --> 00:03:05,040
else does apparently so yeah so most of

00:03:03,150 --> 00:03:07,410
my code is on github like almost all of

00:03:05,040 --> 00:03:08,930
my pro code is on github but this

00:03:07,410 --> 00:03:12,239
particular stuff is all on bitbucket

00:03:08,930 --> 00:03:13,320
just FYI and I think I mentioned this

00:03:12,239 --> 00:03:16,680
before but if you weren't in the room

00:03:13,320 --> 00:03:19,410
the slides for this talk are on slide

00:03:16,680 --> 00:03:26,940
deck or speaker deck my user name is mr

00:03:19,410 --> 00:03:30,510
alan one oh yeah all right well i will

00:03:26,940 --> 00:03:32,400
upload this to speaker deck so it will

00:03:30,510 --> 00:03:33,690
be on speaker deck apparently it's not

00:03:32,400 --> 00:03:37,230
already i thought it was so i'm mistaken

00:03:33,690 --> 00:03:38,610
about that but let's get going so I'm

00:03:37,230 --> 00:03:41,159
as I said I'm talk about the old days

00:03:38,610 --> 00:03:43,170
and how many of you started writing CGI

00:03:41,159 --> 00:03:46,709
apps kind of back in the early days of

00:03:43,170 --> 00:03:49,830
pearl like wrote with actual pro for cgi

00:03:46,709 --> 00:03:52,080
lib PL all right awesome so there's some

00:03:49,830 --> 00:03:54,299
old-timers in here that's fantastic how

00:03:52,080 --> 00:03:57,510
many of you started using CGI p.m. back

00:03:54,299 --> 00:03:59,400
in 95 96 cool very good and how many of

00:03:57,510 --> 00:04:02,970
you have used mod perl which started in

00:03:59,400 --> 00:04:04,769
96 okay good now this next slide maybe

00:04:02,970 --> 00:04:06,659
you don't want to raise your hand for I

00:04:04,769 --> 00:04:09,269
understand that's fine how many of you

00:04:06,659 --> 00:04:11,069
have used Matt script archive all right

00:04:09,269 --> 00:04:13,049
a couple of brave people cool that's

00:04:11,069 --> 00:04:15,810
yeah okay all right that's fine that's

00:04:13,049 --> 00:04:17,609
that's valid I just want to say if you

00:04:15,810 --> 00:04:19,530
are still using Matt script archive or

00:04:17,609 --> 00:04:21,600
you have like a lame uncle who has a

00:04:19,530 --> 00:04:23,850
website for his car repair business and

00:04:21,600 --> 00:04:26,669
he's using matts script archive for some

00:04:23,850 --> 00:04:28,889
reason please please please change all

00:04:26,669 --> 00:04:31,080
of that the London p.m. group actually

00:04:28,889 --> 00:04:33,510
rewrote all of Matt's script archive in

00:04:31,080 --> 00:04:36,389
literate pearl so it's actually like

00:04:33,510 --> 00:04:38,190
tested and secure and nice and fun to

00:04:36,389 --> 00:04:40,320
read and you can find all that on

00:04:38,190 --> 00:04:42,180
sourceforge so if you know anyone out

00:04:40,320 --> 00:04:44,310
there who is still using that script

00:04:42,180 --> 00:04:45,840
archive for some reason all equivalent

00:04:44,310 --> 00:04:48,720
replacements are available at that URL

00:04:45,840 --> 00:04:50,039
and as I said this this slide deck will

00:04:48,720 --> 00:04:52,380
be available on speaker deck so you

00:04:50,039 --> 00:04:54,030
don't have to write it down right now so

00:04:52,380 --> 00:04:56,550
most of you are probably familiar with a

00:04:54,030 --> 00:04:59,010
script like this kind of starts off with

00:04:56,550 --> 00:05:00,750
CGI p.m. the goal here is what we're

00:04:59,010 --> 00:05:03,090
going to try to do is collect a bunch of

00:05:00,750 --> 00:05:06,030
parameters and I'm going to test to see

00:05:03,090 --> 00:05:08,340
if the parameter a is actually backslash

00:05:06,030 --> 00:05:10,680
d now if you're if you know anything

00:05:08,340 --> 00:05:14,940
about Unicode you will learn that in

00:05:10,680 --> 00:05:17,639
Perl 45 force of 5 14 that back /d

00:05:14,940 --> 00:05:20,250
actually matches any Unicode number not

00:05:17,639 --> 00:05:22,280
just ask e 0 through 9 so this is

00:05:20,250 --> 00:05:24,780
actually not a good test anymore but

00:05:22,280 --> 00:05:27,150
what this attempts to do is detect to

00:05:24,780 --> 00:05:29,310
see if a is an integer and if it's not

00:05:27,150 --> 00:05:30,810
then it sends back a bad request because

00:05:29,310 --> 00:05:34,169
it has to be an integer and I'm testing

00:05:30,810 --> 00:05:36,139
for that maybe some of you have done

00:05:34,169 --> 00:05:37,979
things like this where you had a CGI

00:05:36,139 --> 00:05:41,310
implementation and you kind of wanted to

00:05:37,979 --> 00:05:43,110
hide it you wanted to hide away the fact

00:05:41,310 --> 00:05:45,840
that you're using CGI and so you would

00:05:43,110 --> 00:05:49,860
go ahead and construct a URL you know

00:05:45,840 --> 00:05:50,400
where you'd have a bc /a / be /c and

00:05:49,860 --> 00:05:51,840
then you

00:05:50,400 --> 00:05:59,580
pull it apart using rewrite rules like

00:05:51,840 --> 00:06:00,539
this you can see the idea here anyway

00:05:59,580 --> 00:06:03,210
you end up with a lot of boilerplate

00:06:00,539 --> 00:06:04,979
boilerplate sucks no one wants your

00:06:03,210 --> 00:06:08,430
right boilerplate it's just not fun to

00:06:04,979 --> 00:06:11,340
do so what you get with the answer is no

00:06:08,430 --> 00:06:14,310
boilerplate in fact move over bacon

00:06:11,340 --> 00:06:18,270
there's something leaner with dancer you

00:06:14,310 --> 00:06:20,789
get all the power and expressiveness of

00:06:18,270 --> 00:06:22,680
pearl in a really compact form so you

00:06:20,789 --> 00:06:25,650
can build web apps in a surprisingly

00:06:22,680 --> 00:06:27,150
short amount of code lines now recently

00:06:25,650 --> 00:06:28,770
most of you are familiar with the pro/5

00:06:27,150 --> 00:06:31,889
Renaissance he'll call it a comeback

00:06:28,770 --> 00:06:33,900
it's moose divx class plaque tons of

00:06:31,889 --> 00:06:36,449
other great stuff especially in 5-10 I

00:06:33,900 --> 00:06:39,000
actually be talking about some 510 regex

00:06:36,449 --> 00:06:41,490
stuff so I think that at this point

00:06:39,000 --> 00:06:43,590
almost all the major linux distributions

00:06:41,490 --> 00:06:44,760
are up to 5 10 as a base even though

00:06:43,590 --> 00:06:47,729
they're still pretty far behind like

00:06:44,760 --> 00:06:49,020
where core is right now but at least all

00:06:47,729 --> 00:06:51,960
of them they're up to 5 10 that I'm

00:06:49,020 --> 00:06:53,460
aware of and one of the problems that I

00:06:51,960 --> 00:06:56,070
had kind of coming into the environment

00:06:53,460 --> 00:06:57,750
here and if you listen to the last talk

00:06:56,070 --> 00:06:59,760
where where Andy Lester was kind of

00:06:57,750 --> 00:07:01,860
giving some tips and tricks for like

00:06:59,760 --> 00:07:03,660
getting it integrated into open source

00:07:01,860 --> 00:07:07,110
projects that's kind of where my story

00:07:03,660 --> 00:07:09,810
with this comes up with with dancer when

00:07:07,110 --> 00:07:12,120
I first started with the answer Alex was

00:07:09,810 --> 00:07:14,880
really focused on Alex soo crea

00:07:12,120 --> 00:07:16,440
developed the the project and started it

00:07:14,880 --> 00:07:17,760
and it was really focused on development

00:07:16,440 --> 00:07:20,849
work and so the documentation was

00:07:17,760 --> 00:07:22,050
available but it was I was sad to say it

00:07:20,849 --> 00:07:23,970
was really kind of incomplete and was

00:07:22,050 --> 00:07:26,039
Lee it was hard for me to bootstrap on

00:07:23,970 --> 00:07:27,090
it and so what I decided to do was go

00:07:26,039 --> 00:07:30,090
ahead and write some tutorial

00:07:27,090 --> 00:07:31,620
applications and document all of them so

00:07:30,090 --> 00:07:33,180
that people that were newbies like me

00:07:31,620 --> 00:07:35,400
could could have a place to start with

00:07:33,180 --> 00:07:36,720
that and that's where these slides kinda

00:07:35,400 --> 00:07:38,340
sort of came out with a lot of the

00:07:36,720 --> 00:07:41,070
examples are here pulled straight out of

00:07:38,340 --> 00:07:42,840
those tutorial applications but one of

00:07:41,070 --> 00:07:45,539
the other problems I had was I felt like

00:07:42,840 --> 00:07:47,610
catalyst while being a fantastic and

00:07:45,539 --> 00:07:49,320
mature web framework was just really too

00:07:47,610 --> 00:07:51,300
heavy weight for me it has a really

00:07:49,320 --> 00:07:53,130
steep learning curve there's a lot of

00:07:51,300 --> 00:07:55,770
things that you need to be aware of when

00:07:53,130 --> 00:07:57,210
you start with catalyst and to meet a

00:07:55,770 --> 00:07:58,830
friendliness of dancer you know

00:07:57,210 --> 00:08:01,289
expressing hello world in like five

00:07:58,830 --> 00:08:02,940
lines of code well it's like wow that's

00:08:01,289 --> 00:08:03,680
really super powerful and I totally

00:08:02,940 --> 00:08:05,720
understand how this

00:08:03,680 --> 00:08:08,060
going to work so I just felt like

00:08:05,720 --> 00:08:10,070
catalyst was too intimidating and so

00:08:08,060 --> 00:08:11,990
that's why I felt like I needed to move

00:08:10,070 --> 00:08:13,699
to dancer and so that's what i did i

00:08:11,990 --> 00:08:15,770
entered dancer and i wrote these

00:08:13,699 --> 00:08:17,750
tutorial applications now the thing

00:08:15,770 --> 00:08:19,070
about sinatra inspired inspired

00:08:17,750 --> 00:08:20,509
frameworks is that there's actually

00:08:19,070 --> 00:08:22,820
quite a few of them as you can see

00:08:20,509 --> 00:08:24,710
because this is pearl we need to have to

00:08:22,820 --> 00:08:27,350
we need to have more than one way to do

00:08:24,710 --> 00:08:29,570
this so we have mojo which is also

00:08:27,350 --> 00:08:31,070
perfectly awesome it's just something

00:08:29,570 --> 00:08:34,190
that came along a little bit later to me

00:08:31,070 --> 00:08:36,169
than dancer it's also something that I

00:08:34,190 --> 00:08:37,760
just haven't spent a lot of time on I

00:08:36,169 --> 00:08:39,140
figured answer is pretty awesome and

00:08:37,760 --> 00:08:41,000
it's good enough for what I'm working on

00:08:39,140 --> 00:08:42,800
so I'm just going to stick with it but

00:08:41,000 --> 00:08:45,140
mojo is also cool and when I was doing

00:08:42,800 --> 00:08:47,060
my research for my other talk actually

00:08:45,140 --> 00:08:49,940
really found some some powerful stuff in

00:08:47,060 --> 00:08:53,149
there that is great actually just a

00:08:49,940 --> 00:08:55,010
quick plug for that if you guys like lwp

00:08:53,149 --> 00:08:56,600
user agent but you want more bells and

00:08:55,010 --> 00:08:59,300
whistles you got to check out mojo user

00:08:56,600 --> 00:09:01,670
agent it's really really slick it does

00:08:59,300 --> 00:09:03,110
asynchronous out of the box it does XML

00:09:01,670 --> 00:09:05,480
parsing out of the box it does JSON

00:09:03,110 --> 00:09:07,430
parsing out of the box you just get a

00:09:05,480 --> 00:09:09,920
lot of good stuff with it so if you're

00:09:07,430 --> 00:09:11,320
looking for an lwp replacement I would

00:09:09,920 --> 00:09:14,810
highly recommend that you check that out

00:09:11,320 --> 00:09:16,640
also flask actually flask has two as

00:09:14,810 --> 00:09:18,470
well there's one called bottle that I

00:09:16,640 --> 00:09:20,720
didn't put up here that's along the same

00:09:18,470 --> 00:09:23,630
frameworks there's a really tiny baby

00:09:20,720 --> 00:09:26,390
one and fitzgerald called that's for PHP

00:09:23,630 --> 00:09:29,029
and then no Jas which was like the new

00:09:26,390 --> 00:09:31,130
sexiness a toss con last summer was has

00:09:29,029 --> 00:09:33,770
one called express that people are

00:09:31,130 --> 00:09:35,630
really happy about but in short dancer

00:09:33,770 --> 00:09:37,520
is really easy to learn its expressive

00:09:35,630 --> 00:09:38,779
and it's super efficient so we're going

00:09:37,520 --> 00:09:40,880
to talk about each one of these things

00:09:38,779 --> 00:09:42,770
in sequence the first thing I want to

00:09:40,880 --> 00:09:43,790
talk to you about is how easy dancer is

00:09:42,770 --> 00:09:45,620
to learn so we're going to go through

00:09:43,790 --> 00:09:48,950
some examples now and some some basic

00:09:45,620 --> 00:09:50,360
concepts first of all the answer builds

00:09:48,950 --> 00:09:52,070
routes and the way that it builds routes

00:09:50,360 --> 00:09:54,440
is that it contains one or more HTTP

00:09:52,070 --> 00:09:55,910
verbs it has a route specification and

00:09:54,440 --> 00:09:58,610
that could be as simple as a literal

00:09:55,910 --> 00:10:01,100
string like I want you to match on hello

00:09:58,610 --> 00:10:02,570
and that is actually a route definition

00:10:01,100 --> 00:10:04,040
and it has a handler which is an

00:10:02,570 --> 00:10:05,089
anonymous subroutine so it's pretty

00:10:04,040 --> 00:10:06,950
straightforward really what you're

00:10:05,089 --> 00:10:10,010
saying is I want you to match this verb

00:10:06,950 --> 00:10:11,870
on this particular URL specification and

00:10:10,010 --> 00:10:14,060
then when you get that combination I

00:10:11,870 --> 00:10:16,070
want you to execute some subroutine I'm

00:10:14,060 --> 00:10:17,100
gonna pass into you so this is an actual

00:10:16,070 --> 00:10:19,350
complete fold and

00:10:17,100 --> 00:10:22,050
program we start with our typical used

00:10:19,350 --> 00:10:24,120
answer definition at the top next were

00:10:22,050 --> 00:10:26,010
going to specify the verb get then we're

00:10:24,120 --> 00:10:27,570
gonna have the route which is / so it's

00:10:26,010 --> 00:10:29,970
the root and then we have an anonymous

00:10:27,570 --> 00:10:31,620
subroutine which is returned hello world

00:10:29,970 --> 00:10:33,870
so we just want to return some text and

00:10:31,620 --> 00:10:35,880
that's it and at the bottom we just put

00:10:33,870 --> 00:10:37,590
start which says hey once you get this

00:10:35,880 --> 00:10:40,350
point initialize yourself and do all the

00:10:37,590 --> 00:10:42,990
magic behind the scenes so I already

00:10:40,350 --> 00:10:45,030
broke this down for you but just to sort

00:10:42,990 --> 00:10:46,110
of lay it out a little bit cleaner the

00:10:45,030 --> 00:10:59,310
main thing I wanted to point out to you

00:10:46,110 --> 00:11:00,810
is this thing right here yeah so if you

00:10:59,310 --> 00:11:02,790
leave this off because this is an

00:11:00,810 --> 00:11:05,430
anonymous subroutine and you need this

00:11:02,790 --> 00:11:06,690
semicolon out it makes me a very sad and

00:11:05,430 --> 00:11:09,060
it will make your pearl compiler very

00:11:06,690 --> 00:11:10,650
sad and will actually literally spend

00:11:09,060 --> 00:11:11,850
hours trying to figure out what's what's

00:11:10,650 --> 00:11:13,380
wrong because it looks right but

00:11:11,850 --> 00:11:16,860
actually won't compile and you'll be

00:11:13,380 --> 00:11:18,390
like oh so don't do that anyway I wrote

00:11:16,860 --> 00:11:20,670
this I wrote this example application

00:11:18,390 --> 00:11:22,590
called dancer it's a complete ripoff of

00:11:20,670 --> 00:11:25,200
an example application that i found for

00:11:22,590 --> 00:11:27,570
the flask framework called flask ER you

00:11:25,200 --> 00:11:28,830
can see why i took the name dancer but

00:11:27,570 --> 00:11:31,830
basically what it is is a tiny little

00:11:28,830 --> 00:11:33,660
micro blog it's very silly but it's also

00:11:31,830 --> 00:11:35,730
very short it's literally like 100 lines

00:11:33,660 --> 00:11:36,990
of code so we're going to actually talk

00:11:35,730 --> 00:11:39,060
about most of the things in this

00:11:36,990 --> 00:11:41,190
particular example application in this

00:11:39,060 --> 00:11:42,000
talk today and hopefully by the end of

00:11:41,190 --> 00:11:43,500
this talk you're going to feel

00:11:42,000 --> 00:11:44,610
comfortable enough that you could go out

00:11:43,500 --> 00:11:47,490
and write your own dancer application

00:11:44,610 --> 00:11:49,650
pretty easily again if there are

00:11:47,490 --> 00:11:51,690
questions while I'm talking feel free to

00:11:49,650 --> 00:11:52,920
interrupt me I know that I have 50

00:11:51,690 --> 00:11:54,690
minutes but I actually have more than 50

00:11:52,920 --> 00:11:56,520
minutes of material so i may have to

00:11:54,690 --> 00:11:58,440
skip over some slides at the end so

00:11:56,520 --> 00:12:01,620
hopefully we won't need to do that but

00:11:58,440 --> 00:12:02,850
if we do it's okay so all right so on

00:12:01,620 --> 00:12:05,280
the first thing i wanted to show you was

00:12:02,850 --> 00:12:06,660
this big route handler you can see that

00:12:05,280 --> 00:12:08,280
this shares a lot of commonality with

00:12:06,660 --> 00:12:10,950
the previous one it's just a little bit

00:12:08,280 --> 00:12:12,780
more complex but it starts exactly the

00:12:10,950 --> 00:12:15,990
same way the first thing you get is the

00:12:12,780 --> 00:12:18,450
verb in this case again it's get we have

00:12:15,990 --> 00:12:19,770
the route specification and finally we

00:12:18,450 --> 00:12:22,790
have the code routine and you'll see

00:12:19,770 --> 00:12:22,790
that actually in this case

00:12:23,980 --> 00:12:27,070
too right and this is this template

00:12:26,050 --> 00:12:28,900
keyword we're going to talk more about

00:12:27,070 --> 00:12:30,430
template he were pretty soon but you can

00:12:28,900 --> 00:12:33,700
see there's one here and one here those

00:12:30,430 --> 00:12:36,940
are very important that's just the way

00:12:33,700 --> 00:12:38,380
pearl is sorry but up in something else

00:12:36,940 --> 00:12:40,090
that I wanted to point out to you is

00:12:38,380 --> 00:12:41,470
that if you've already written a lot of

00:12:40,090 --> 00:12:42,880
CGI scripts and you're comfortable with

00:12:41,470 --> 00:12:45,760
that then this is actually really

00:12:42,880 --> 00:12:47,470
straightforward sort of break it down

00:12:45,760 --> 00:12:49,870
because all the stuff is in green over

00:12:47,470 --> 00:12:52,900
here is pretty much standard straight up

00:12:49,870 --> 00:12:54,940
dbi CGI integration so you're reading

00:12:52,900 --> 00:12:56,290
stuff out of a database and you're

00:12:54,940 --> 00:12:57,820
gathering it into some sort of data

00:12:56,290 --> 00:12:59,740
structure and now you want to pass it

00:12:57,820 --> 00:13:01,840
off to a template so if you've already

00:12:59,740 --> 00:13:02,920
been doing CGI programming really the

00:13:01,840 --> 00:13:04,570
only thing that's different about this

00:13:02,920 --> 00:13:07,480
is the fact that it's sort of wrapped up

00:13:04,570 --> 00:13:09,370
in this anonymous subroutine so we come

00:13:07,480 --> 00:13:11,380
to the template keyword now I've told

00:13:09,370 --> 00:13:13,960
you we talk more about this and the time

00:13:11,380 --> 00:13:15,400
has come to do that the first thing that

00:13:13,960 --> 00:13:18,730
you should know here is it we have this

00:13:15,400 --> 00:13:21,250
show entries about TT and what this

00:13:18,730 --> 00:13:23,470
means is I want you to take this data

00:13:21,250 --> 00:13:25,110
structure or actually without the beans

00:13:23,470 --> 00:13:28,360
as I want you to load this template and

00:13:25,110 --> 00:13:30,670
pass in this these variables here in

00:13:28,360 --> 00:13:33,760
this list and then actually in this

00:13:30,670 --> 00:13:36,550
anonymous hatch and since template

00:13:33,760 --> 00:13:42,510
itself is a keyword which means that

00:13:36,550 --> 00:13:44,650
attended a subroutine but anyway

00:13:42,510 --> 00:13:45,940
straight forward again I already said

00:13:44,650 --> 00:13:47,950
what those are for we're going to pass

00:13:45,940 --> 00:13:49,840
in a bunch of stuff you can see that you

00:13:47,950 --> 00:13:52,180
can do function calls in there to load

00:13:49,840 --> 00:13:55,600
up data you can pass in built-in

00:13:52,180 --> 00:13:58,360
keywords like this one who arrived for /

00:13:55,600 --> 00:14:00,580
ad which actually tells dancer to say

00:13:58,360 --> 00:14:03,190
look up the handler for / add and then

00:14:00,580 --> 00:14:06,010
substitute here an actual literal string

00:14:03,190 --> 00:14:07,120
for that entire thing then we have all

00:14:06,010 --> 00:14:08,560
of our injuries which is this data

00:14:07,120 --> 00:14:11,340
structure that we generated way up here

00:14:08,560 --> 00:14:14,640
okay is everyone following along with me

00:14:11,340 --> 00:14:17,890
anyone lost it's okay if you're lost

00:14:14,640 --> 00:14:21,070
okay good I already talked about that

00:14:17,890 --> 00:14:22,570
one so we're going to skip so what this

00:14:21,070 --> 00:14:24,400
is is actually showing you the actual

00:14:22,570 --> 00:14:26,380
template now this talk isn't about

00:14:24,400 --> 00:14:28,540
template creation so I'm not going to go

00:14:26,380 --> 00:14:30,310
too much into this but one of the things

00:14:28,540 --> 00:14:32,170
I thought was important was kind of to

00:14:30,310 --> 00:14:35,740
pull back all the curtains so you see

00:14:32,170 --> 00:14:37,779
exactly how everything works end end so

00:14:35,740 --> 00:14:40,060
this is a pretty straightforward

00:14:37,779 --> 00:14:41,350
put toolkit template there is a

00:14:40,060 --> 00:14:42,610
difference between this and stock

00:14:41,350 --> 00:14:48,490
template toolkit does anyone know what

00:14:42,610 --> 00:14:51,040
it is what yeah that's right so in stock

00:14:48,490 --> 00:14:52,660
template toolkit they actually use

00:14:51,040 --> 00:14:56,350
square brackets but here we're using

00:14:52,660 --> 00:14:58,300
angle brackets to point that out real

00:14:56,350 --> 00:15:00,490
quick like everything else is exactly

00:14:58,300 --> 00:15:02,079
the same why why does it use angle

00:15:00,490 --> 00:15:05,139
brackets that's a great question now

00:15:02,079 --> 00:15:07,120
dancer ships with the template module

00:15:05,139 --> 00:15:09,279
built in so it comes out of the box with

00:15:07,120 --> 00:15:11,740
a templating engine it's just the

00:15:09,279 --> 00:15:14,889
template the template engine that it

00:15:11,740 --> 00:15:17,170
comes with is not very sophisticated but

00:15:14,889 --> 00:15:18,970
it does use the angle brackets so the

00:15:17,170 --> 00:15:20,709
idea is is that you can write your stuff

00:15:18,970 --> 00:15:22,839
to start with with the built-in

00:15:20,709 --> 00:15:24,850
templates and then later if you need the

00:15:22,839 --> 00:15:27,819
power of template toolkit and most of

00:15:24,850 --> 00:15:29,379
you probably will you can just continue

00:15:27,819 --> 00:15:32,709
to use your old templates without having

00:15:29,379 --> 00:15:34,269
to redefine the bracket style but that's

00:15:32,709 --> 00:15:36,819
what that's that is a difference that it

00:15:34,269 --> 00:15:38,379
comes with out-of-the-box between stock

00:15:36,819 --> 00:15:40,420
template toolkit and what dancer

00:15:38,379 --> 00:15:42,490
typically does with template toolkit now

00:15:40,420 --> 00:15:44,110
it is totally configurable if you

00:15:42,490 --> 00:15:46,809
already have templates that use square

00:15:44,110 --> 00:15:48,220
brackets or whatever you can set the

00:15:46,809 --> 00:15:50,079
answer to use square brackets it's

00:15:48,220 --> 00:15:52,300
totally easy to do and you can do it

00:15:50,079 --> 00:15:57,360
it's very simple but out of the box you

00:15:52,300 --> 00:15:57,360
get angle brackets so we're talked about

00:15:57,389 --> 00:16:02,819
all right so this is a if this if

00:16:00,879 --> 00:16:05,259
statement is part of template toolkit

00:16:02,819 --> 00:16:08,410
it's just logic just like you would

00:16:05,259 --> 00:16:11,079
assume but you can see what it's trying

00:16:08,410 --> 00:16:16,959
to do here is it's saying that if this

00:16:11,079 --> 00:16:19,509
hash value entries then I want you to go

00:16:16,959 --> 00:16:22,449
ahead and execute this iteration here so

00:16:19,509 --> 00:16:25,240
every time pull an idea out of the hash

00:16:22,449 --> 00:16:30,429
I want you to print out a list that's

00:16:25,240 --> 00:16:32,079
essentially what that says so you can

00:16:30,429 --> 00:16:37,809
see I'm doing a whole bunch of keep a

00:16:32,079 --> 00:16:39,399
bunch of hash operations here is

00:16:37,809 --> 00:16:42,490
everyone clear on that on what's kind of

00:16:39,399 --> 00:16:46,059
what going on here questions are totally

00:16:42,490 --> 00:16:49,410
fine just to reiterate all of the all of

00:16:46,059 --> 00:16:49,410
that data came from this

00:16:50,610 --> 00:16:55,180
rocky and I showed you the beginning so

00:16:53,320 --> 00:16:58,180
all this stuff comes from this

00:16:55,180 --> 00:16:59,230
particular heat and you can see that

00:16:58,180 --> 00:17:05,440
it's coming straight out of you this

00:16:59,230 --> 00:17:06,820
right okay it's a quiz time again um you

00:17:05,440 --> 00:17:09,610
can see that in this template i actually

00:17:06,820 --> 00:17:12,310
have something at the top called entries

00:17:09,610 --> 00:17:14,860
is that related to anything in the data

00:17:12,310 --> 00:17:17,410
structure that we're passing in no it is

00:17:14,860 --> 00:17:19,959
not you wouldn't start thanks for thanks

00:17:17,410 --> 00:17:22,720
for playing along that's actually assess

00:17:19,959 --> 00:17:23,950
CSS class so it has nothing to do with

00:17:22,720 --> 00:17:25,240
the data structures at all but it does

00:17:23,950 --> 00:17:26,440
share the same name and it's

00:17:25,240 --> 00:17:28,480
unfortunately named I should probably

00:17:26,440 --> 00:17:30,340
change it but I didn't want you to be

00:17:28,480 --> 00:17:32,050
confused by that because I could

00:17:30,340 --> 00:17:34,120
understand you know if you're not really

00:17:32,050 --> 00:17:36,910
familiar with how CSS works that would

00:17:34,120 --> 00:17:38,890
definitely be confusing all right so

00:17:36,910 --> 00:17:41,020
let's talk about how dancer directory

00:17:38,890 --> 00:17:42,970
structures are set up in my example

00:17:41,020 --> 00:17:44,800
application which is a really really

00:17:42,970 --> 00:17:47,410
simple application I don't have very

00:17:44,800 --> 00:17:49,150
advanced directory structure directory

00:17:47,410 --> 00:17:51,550
structure with dancer has kind of a

00:17:49,150 --> 00:17:53,710
defined template and actually the answer

00:17:51,550 --> 00:17:55,600
comes with a command-line tool that will

00:17:53,710 --> 00:17:58,030
build the entire directory structure for

00:17:55,600 --> 00:18:00,010
you it's dancer minus a and then your

00:17:58,030 --> 00:18:02,920
project name and it will build out your

00:18:00,010 --> 00:18:03,910
entire directory structure but I just

00:18:02,920 --> 00:18:06,250
wanted to kind of give you the flavor

00:18:03,910 --> 00:18:07,750
without all the overhead of what you get

00:18:06,250 --> 00:18:09,370
out of dancer minus a because it gives

00:18:07,750 --> 00:18:11,110
you more than what you might need for a

00:18:09,370 --> 00:18:14,230
really simple project like this one so

00:18:11,110 --> 00:18:17,140
the way that the starts is that you have

00:18:14,230 --> 00:18:18,760
your have your directory way up top here

00:18:17,140 --> 00:18:20,650
you have your actual script that

00:18:18,760 --> 00:18:22,990
implements your application right here

00:18:20,650 --> 00:18:24,970
you have this file or folder called

00:18:22,990 --> 00:18:27,550
public and then in here you have a whole

00:18:24,970 --> 00:18:29,440
bunch of stuff and it's like CSS you got

00:18:27,550 --> 00:18:32,020
your CSS file you may have additional

00:18:29,440 --> 00:18:33,280
things in here like jQuery or other

00:18:32,020 --> 00:18:35,880
JavaScript libraries if you want to

00:18:33,280 --> 00:18:38,380
include in your app those all go here I

00:18:35,880 --> 00:18:40,120
don't even public and then you have this

00:18:38,380 --> 00:18:40,990
views folder and this is where you

00:18:40,120 --> 00:18:43,840
actually get it putting all your

00:18:40,990 --> 00:18:47,890
templates so all the templates will go

00:18:43,840 --> 00:18:49,570
under views and then this can be all the

00:18:47,890 --> 00:18:50,680
couples here you see the show entries we

00:18:49,570 --> 00:18:53,530
got log in which you haven't

00:18:50,680 --> 00:18:57,160
how are you well and then we have a main

00:18:53,530 --> 00:18:59,980
TT which is kind of like a layout is the

00:18:57,160 --> 00:19:01,960
idea where you have an overarching look

00:18:59,980 --> 00:19:04,240
and feel of your website you want wait

00:19:01,960 --> 00:19:06,100
the one way to implement that is to

00:19:04,240 --> 00:19:08,320
implement it as a template here and then

00:19:06,100 --> 00:19:09,580
stall and stuff into it so you render

00:19:08,320 --> 00:19:11,140
this and then you render one of these

00:19:09,580 --> 00:19:16,120
two things depending on what you're

00:19:11,140 --> 00:19:18,940
doing so a whole bunch of arrows we're

00:19:16,120 --> 00:19:21,040
going to skip over those dancer is

00:19:18,940 --> 00:19:24,100
expressive it's really expressive and

00:19:21,040 --> 00:19:26,320
lets you get a lot done with a really

00:19:24,100 --> 00:19:30,040
short amount of code so let's talk about

00:19:26,320 --> 00:19:32,140
another route before in my slide a few

00:19:30,040 --> 00:19:34,870
minutes ago we talked about the ad URI

00:19:32,140 --> 00:19:38,770
for ad and this actually implements the

00:19:34,870 --> 00:19:40,000
ad route route handler and we have a

00:19:38,770 --> 00:19:41,680
whole bunch of new keywords here that

00:19:40,000 --> 00:19:45,490
I'm going to point out to you one of

00:19:41,680 --> 00:19:46,900
them is session where did session come

00:19:45,490 --> 00:19:48,250
from well it comes from the login

00:19:46,900 --> 00:19:50,740
handler which we haven't talked about

00:19:48,250 --> 00:19:52,540
yet but we will so just hang on with me

00:19:50,740 --> 00:19:54,430
on that one okay we'll come back to that

00:19:52,540 --> 00:19:57,280
we also have another built-in keyword

00:19:54,430 --> 00:19:59,020
called send air so that means if I'm not

00:19:57,280 --> 00:20:00,820
logged in in other words if I don't have

00:19:59,020 --> 00:20:03,880
a session started then go ahead and

00:20:00,820 --> 00:20:06,730
return 401 not logged in okay that's

00:20:03,880 --> 00:20:10,420
pretty straightforward one thing that I

00:20:06,730 --> 00:20:12,790
wanted to tell you is that the reach the

00:20:10,420 --> 00:20:14,980
actual use of the word return there can

00:20:12,790 --> 00:20:16,510
be significant it was more important in

00:20:14,980 --> 00:20:19,300
previous versions although recent

00:20:16,510 --> 00:20:23,290
releases have made it less so that you

00:20:19,300 --> 00:20:24,580
return things before it was like if you

00:20:23,290 --> 00:20:26,350
didn't use return it would go ahead and

00:20:24,580 --> 00:20:28,300
complete the rest of your route so if

00:20:26,350 --> 00:20:29,950
you had something that aired out or

00:20:28,300 --> 00:20:31,690
whatever it might actually execute more

00:20:29,950 --> 00:20:33,070
of your code than you want it to and so

00:20:31,690 --> 00:20:35,680
if you use return it would return at the

00:20:33,070 --> 00:20:38,200
proper time in more recent releases

00:20:35,680 --> 00:20:40,990
that's not true but it is possible that

00:20:38,200 --> 00:20:42,460
this is still significant so at my

00:20:40,990 --> 00:20:44,560
personal preference is to put it in

00:20:42,460 --> 00:20:48,030
there it may not strictly be necessary

00:20:44,560 --> 00:20:51,190
so it's up to you it's a style thing

00:20:48,030 --> 00:20:53,170
although sometimes it's not so I just

00:20:51,190 --> 00:20:55,990
use it all the time that way I don't get

00:20:53,170 --> 00:20:57,280
into trouble and then the other thing I

00:20:55,990 --> 00:20:59,410
wanted to talk about here was the

00:20:57,280 --> 00:21:00,580
redirect key word and you guys can

00:20:59,410 --> 00:21:02,110
probably guess what that does it

00:21:00,580 --> 00:21:02,670
redirects you to some other route

00:21:02,110 --> 00:21:06,880
handler

00:21:02,670 --> 00:21:08,590
and just like before in the middle we

00:21:06,880 --> 00:21:12,760
have all this red code we have all this

00:21:08,590 --> 00:21:14,920
red straight up dbi stuff there's like

00:21:12,760 --> 00:21:19,540
no magic incorporated into this at all

00:21:14,920 --> 00:21:21,690
it's very very vanilla dbi code that you

00:21:19,540 --> 00:21:25,780
guys probably written a thousand times

00:21:21,690 --> 00:21:26,980
and there is I guess a couple of things

00:21:25,780 --> 00:21:29,020
I wanted to talk about in this

00:21:26,980 --> 00:21:31,930
particular code block and that is that

00:21:29,020 --> 00:21:33,400
we're using parameterization you can see

00:21:31,930 --> 00:21:36,820
the question marks and also we're using

00:21:33,400 --> 00:21:38,470
the params keyword so we're pulling out

00:21:36,820 --> 00:21:41,920
a couple of parameters that come from

00:21:38,470 --> 00:21:44,170
the post so when you when you post dated

00:21:41,920 --> 00:21:47,980
a dancer things that you post in their

00:21:44,170 --> 00:21:51,880
end up in this end up in this hash that

00:21:47,980 --> 00:21:53,860
you can access using params and so we're

00:21:51,880 --> 00:21:55,480
going to pass that into our database I

00:21:53,860 --> 00:21:58,270
do have a public service message hear

00:21:55,480 --> 00:21:59,590
about Bobby tables which I know that

00:21:58,270 --> 00:22:01,090
Angie Lester also talked about in the

00:21:59,590 --> 00:22:03,190
previous talk so actually it's kind of

00:22:01,090 --> 00:22:04,750
interesting that we got stacked back to

00:22:03,190 --> 00:22:06,790
back and his talk has almost nothing to

00:22:04,750 --> 00:22:08,460
do with my talk but we're still kind of

00:22:06,790 --> 00:22:11,230
talking about some of the same things so

00:22:08,460 --> 00:22:14,800
but yeah use bobby tables if you don't

00:22:11,230 --> 00:22:20,170
you'll be sad and you can see here this

00:22:14,800 --> 00:22:22,690
is what we're doing and you can do stuff

00:22:20,170 --> 00:22:25,300
like that let's talk about configuration

00:22:22,690 --> 00:22:27,670
so dancer is very configurable I've

00:22:25,300 --> 00:22:28,840
mentioned that before there are various

00:22:27,670 --> 00:22:30,370
things that you can configure some of

00:22:28,840 --> 00:22:31,930
the most important ones our session

00:22:30,370 --> 00:22:33,460
engine so do you want your sessions to

00:22:31,930 --> 00:22:35,080
be stored in ya mo files do you want to

00:22:33,460 --> 00:22:36,610
be stored in memory do you want to be

00:22:35,080 --> 00:22:38,890
stored in memcache deed you want to be

00:22:36,610 --> 00:22:40,390
stored in Redis there's a whole bunch of

00:22:38,890 --> 00:22:42,550
different session engines and session

00:22:40,390 --> 00:22:44,440
storage technologies that you can use

00:22:42,550 --> 00:22:47,020
they're all plug-in based and they're

00:22:44,440 --> 00:22:48,460
all configurable through yamo files you

00:22:47,020 --> 00:22:49,840
can also configure them in line in fact

00:22:48,460 --> 00:22:51,910
we're going to talk about that in just a

00:22:49,840 --> 00:22:52,900
second there's templating engines

00:22:51,910 --> 00:22:54,220
there's a whole bunch of different ones

00:22:52,900 --> 00:22:55,420
for that there's template toolkit

00:22:54,220 --> 00:22:57,160
already talked about there's the one

00:22:55,420 --> 00:22:59,830
that comes out of the box that's pretty

00:22:57,160 --> 00:23:03,430
simple it's fine if you have simple

00:22:59,830 --> 00:23:05,020
needs but template toolkit I think

00:23:03,430 --> 00:23:06,370
there's Mason there's a whole bunch of

00:23:05,020 --> 00:23:08,380
different ones I mean you guys know that

00:23:06,370 --> 00:23:13,600
the Pearl has 50,000 templating engine

00:23:08,380 --> 00:23:14,980
so there's mostly probably 20,000 dancer

00:23:13,600 --> 00:23:16,419
interfaces for the templating engines

00:23:14,980 --> 00:23:18,549
logging like d

00:23:16,419 --> 00:23:20,379
want debug log level do you want info

00:23:18,549 --> 00:23:22,029
log level do you want your logs to go to

00:23:20,379 --> 00:23:23,859
a file do you want to go to the console

00:23:22,029 --> 00:23:26,230
all that good stuff and then finally

00:23:23,859 --> 00:23:28,029
there's plugins which we'll talk more

00:23:26,230 --> 00:23:31,480
about at the end of the end of the slide

00:23:28,029 --> 00:23:33,190
deck but the idea here is that plugins

00:23:31,480 --> 00:23:35,320
can add keywords to your dancer

00:23:33,190 --> 00:23:37,659
interface so they let you do magic stuff

00:23:35,320 --> 00:23:39,190
in a very short amount of code and we'll

00:23:37,659 --> 00:23:40,749
get into that a little bit later huh so

00:23:39,190 --> 00:23:43,090
here's some configuration examples that

00:23:40,749 --> 00:23:45,399
are in line as I said most

00:23:43,090 --> 00:23:48,279
configurations in that sort of real

00:23:45,399 --> 00:23:49,720
dancer app not the demo you would do in

00:23:48,279 --> 00:23:51,940
a game will file and those files are

00:23:49,720 --> 00:23:54,190
broken out by environment so the idea is

00:23:51,940 --> 00:23:56,259
is that maybe you have a development

00:23:54,190 --> 00:24:01,960
yamo file where you have stuff like

00:23:56,259 --> 00:24:04,659
shares I've highlighted that super super

00:24:01,960 --> 00:24:07,570
useful for debugging really really not

00:24:04,659 --> 00:24:09,639
very good for production do not use this

00:24:07,570 --> 00:24:12,159
in production but is super useful for

00:24:09,639 --> 00:24:14,590
demo purposes and also for for doing

00:24:12,159 --> 00:24:16,389
development work what show airs does

00:24:14,590 --> 00:24:20,169
actually is dump your entire air stream

00:24:16,389 --> 00:24:21,700
to to the browser and there are plugins

00:24:20,169 --> 00:24:25,359
that lead do all sorts of other cool

00:24:21,700 --> 00:24:28,359
stuff and if you use plaque middleware

00:24:25,359 --> 00:24:31,690
you can do even more cool stuff so super

00:24:28,359 --> 00:24:32,679
super useful to have that setup you can

00:24:31,690 --> 00:24:35,049
see some of the other things that I've

00:24:32,679 --> 00:24:37,029
done here simple is the session manager

00:24:35,049 --> 00:24:39,220
that you get out of the box with with

00:24:37,029 --> 00:24:41,320
with dancer it's an in-memory thing so

00:24:39,220 --> 00:24:43,359
as long as your web app is running it

00:24:41,320 --> 00:24:44,830
will maintain session for you as long as

00:24:43,359 --> 00:24:48,850
I guess as long as it has free ram to

00:24:44,830 --> 00:24:52,119
but um yeah so simple in memory session

00:24:48,850 --> 00:24:54,669
handling template toolkit we talked

00:24:52,119 --> 00:24:56,830
about that set my log to console set the

00:24:54,669 --> 00:24:58,119
log level to debug one of the cool

00:24:56,830 --> 00:24:59,859
things about dancers you can actually

00:24:58,119 --> 00:25:01,809
use any arbitrary key value pairs that

00:24:59,859 --> 00:25:04,419
you want and you can do that in line or

00:25:01,809 --> 00:25:06,159
in the ammo file so for example here I'm

00:25:04,419 --> 00:25:09,749
setting username to admin and the

00:25:06,159 --> 00:25:13,470
password to don't tell anyone password

00:25:09,749 --> 00:25:15,249
okay seriously you don't tell anyone

00:25:13,470 --> 00:25:17,320
some of the other things that you can do

00:25:15,249 --> 00:25:19,269
a really cool you can do routes with

00:25:17,320 --> 00:25:21,489
regex and i'm sure you guys guess that

00:25:19,269 --> 00:25:22,720
this was coming but there's some really

00:25:21,489 --> 00:25:25,299
neat stuff that you can do with this

00:25:22,720 --> 00:25:27,099
that can save you a ton and ton of

00:25:25,299 --> 00:25:29,680
validation steps later on down the line

00:25:27,099 --> 00:25:33,700
so let's kind of break this regex apart

00:25:29,680 --> 00:25:37,450
first of all we have the AZ stuff these

00:25:33,700 --> 00:25:41,020
are sort of newfangled style pearl 510

00:25:37,450 --> 00:25:44,890
regex so hopefully they're not

00:25:41,020 --> 00:25:48,730
unfamiliar is anyone confused by this so

00:25:44,890 --> 00:25:50,950
far ok good and then we have the middle

00:25:48,730 --> 00:25:54,550
part the most important part here and

00:25:50,950 --> 00:25:56,980
the what the what the ? bracket code

00:25:54,550 --> 00:25:59,020
bracket does is actually says if you

00:25:56,980 --> 00:26:00,840
match this pattern I want you to stuff

00:25:59,020 --> 00:26:02,800
it into this variable called code

00:26:00,840 --> 00:26:05,260
actually it's not a variable it's a hash

00:26:02,800 --> 00:26:07,420
injury but anyway we'll get to that in a

00:26:05,260 --> 00:26:09,640
second if you match this pattern I want

00:26:07,420 --> 00:26:12,670
you to stuff this value into a hash key

00:26:09,640 --> 00:26:16,330
called coat and what we're matching here

00:26:12,670 --> 00:26:19,510
is of course a to z it is easier through

00:26:16,330 --> 00:26:21,370
9 and since this actually is a good

00:26:19,510 --> 00:26:22,990
Unicode regex to use since it will match

00:26:21,370 --> 00:26:25,780
literally those things and nothing else

00:26:22,990 --> 00:26:30,130
that would surprise you unlike backslash

00:26:25,780 --> 00:26:32,710
d might right so I already mentioned

00:26:30,130 --> 00:26:36,720
that this is a 5 10 so if you're not

00:26:32,710 --> 00:26:41,050
using use V 5 10 or you're not using 50

00:26:36,720 --> 00:26:44,260
10 or greater then this won't work your

00:26:41,050 --> 00:26:45,880
pearl compiler will will be sad and I

00:26:44,260 --> 00:26:47,740
also mentioned that it goes into a hash

00:26:45,880 --> 00:26:50,140
ref and dancer there's a keyword

00:26:47,740 --> 00:26:52,600
built-in called captures and that's what

00:26:50,140 --> 00:26:53,880
it's for so normally the hash ref that

00:26:52,600 --> 00:26:57,070
it gets stuffed into is called

00:26:53,880 --> 00:26:58,180
percent-plus and I don't know why they

00:26:57,070 --> 00:26:59,800
chose percent-plus because I think

00:26:58,180 --> 00:27:01,630
that's probably the single most worst

00:26:59,800 --> 00:27:04,300
variable name that you can have but

00:27:01,630 --> 00:27:05,830
that's what it's called and in dancer

00:27:04,300 --> 00:27:08,530
you can actually just use the much more

00:27:05,830 --> 00:27:10,810
elegant captures and a dereference you

00:27:08,530 --> 00:27:15,430
get back your value so it's really nice

00:27:10,810 --> 00:27:18,970
much better reading then then if you

00:27:15,430 --> 00:27:20,980
actually use raw percent-plus you could

00:27:18,970 --> 00:27:23,680
also do routes with named parameters now

00:27:20,980 --> 00:27:25,390
this is a direct lineage from Sinatra

00:27:23,680 --> 00:27:28,960
because this is how Sinatra defines a

00:27:25,390 --> 00:27:30,370
wild card or name variables and it's

00:27:28,960 --> 00:27:32,110
exactly the same so there's really

00:27:30,370 --> 00:27:33,490
nothing here that you guys haven't seen

00:27:32,110 --> 00:27:34,810
before really the only thing that's

00:27:33,490 --> 00:27:37,270
different is the fact that you have a

00:27:34,810 --> 00:27:42,940
colon in front of code where code is

00:27:37,270 --> 00:27:45,340
that value so if you if you have that

00:27:42,940 --> 00:27:47,140
you can see where it will match colon

00:27:45,340 --> 00:27:49,360
code will stuff it in the prams you can

00:27:47,140 --> 00:27:51,910
pull it out with params and do something

00:27:49,360 --> 00:27:56,670
with it under the hood what's happening

00:27:51,910 --> 00:28:00,010
is it's matching dot plus so if you do

00:27:56,670 --> 00:28:01,960
if you do this if you do call in code

00:28:00,010 --> 00:28:04,450
you're actually saying I want to match

00:28:01,960 --> 00:28:05,980
dot plus and whatever you get in dot

00:28:04,450 --> 00:28:08,710
plus that's what I'm going to put into

00:28:05,980 --> 00:28:11,710
params coat so you have to do your own

00:28:08,710 --> 00:28:14,440
input sanity at that point so way back

00:28:11,710 --> 00:28:18,580
at the beginning like what 25 minutes

00:28:14,440 --> 00:28:20,890
ago I talked about how CGI p.m. started

00:28:18,580 --> 00:28:22,840
out and how we might do input validation

00:28:20,890 --> 00:28:25,300
and this is you know super old school

00:28:22,840 --> 00:28:28,060
but the idea was I wanted to capture an

00:28:25,300 --> 00:28:29,650
integer and only an integer and so what

00:28:28,060 --> 00:28:31,570
I can do now with the answer is I can

00:28:29,650 --> 00:28:33,580
actually specify directly in the URL

00:28:31,570 --> 00:28:35,560
route that I want to match something

00:28:33,580 --> 00:28:37,570
called a and it has to be an integer I

00:28:35,560 --> 00:28:39,010
want to match something called be and it

00:28:37,570 --> 00:28:40,330
can be anything and I want to match

00:28:39,010 --> 00:28:42,250
something called see and it could be

00:28:40,330 --> 00:28:46,990
anything but has to be three parameters

00:28:42,250 --> 00:28:48,550
in a row and under some namespace so the

00:28:46,990 --> 00:28:51,520
cool thing about that is I've already

00:28:48,550 --> 00:28:52,720
validated my input if this matches I'm

00:28:51,520 --> 00:28:54,130
guaranteed that a is going to have an

00:28:52,720 --> 00:28:56,470
integer well I'm guarantee that it's

00:28:54,130 --> 00:28:59,410
going to have a Unicode numeral which

00:28:56,470 --> 00:29:04,090
may or may not be an integer but but

00:28:59,410 --> 00:29:05,590
anyway yeah it's super good and you guys

00:29:04,090 --> 00:29:07,060
are probably getting the message dancers

00:29:05,590 --> 00:29:08,200
really efficient it definitely is

00:29:07,060 --> 00:29:10,630
efficient we're going to talk more about

00:29:08,200 --> 00:29:13,690
that now so far we've looked at routes

00:29:10,630 --> 00:29:15,640
that only handle one verb so good get

00:29:13,690 --> 00:29:19,030
post some of the other verbs that you

00:29:15,640 --> 00:29:22,600
can do our like option head you can do

00:29:19,030 --> 00:29:24,130
delete you can do put all the all of the

00:29:22,600 --> 00:29:27,790
eight verbs that are supported in the

00:29:24,130 --> 00:29:30,690
standard are supported by dancer is

00:29:27,790 --> 00:29:30,690
patch supported yet

00:29:32,570 --> 00:29:39,649
oh wow that's pretty slick all right

00:29:37,070 --> 00:29:41,419
well um that's me so what we're looking

00:29:39,649 --> 00:29:44,090
at now is a route handler and this is

00:29:41,419 --> 00:29:46,070
the the fabled login handle that I've

00:29:44,090 --> 00:29:48,019
mentioned a few times it actually takes

00:29:46,070 --> 00:29:50,389
two different verbs so it can match any

00:29:48,019 --> 00:29:52,519
and you'll see that it's followed by an

00:29:50,389 --> 00:29:55,639
array which lists the methods that it

00:29:52,519 --> 00:29:58,639
will match get and post now one thing

00:29:55,639 --> 00:30:00,380
that is different between this this

00:29:58,639 --> 00:30:01,610
route handler and some of the other ones

00:30:00,380 --> 00:30:04,850
aside from the fact that it's followed

00:30:01,610 --> 00:30:06,379
by a list is this you've got this weird

00:30:04,850 --> 00:30:10,970
error there what the heck is that thing

00:30:06,379 --> 00:30:14,990
doing there does anyone know all right

00:30:10,970 --> 00:30:17,600
no that's fine it'll be a mystery the

00:30:14,990 --> 00:30:19,220
the the first thing that is different

00:30:17,600 --> 00:30:21,710
about this is the fact that because

00:30:19,220 --> 00:30:23,029
we're taking two different verbs here we

00:30:21,710 --> 00:30:25,279
could either have a request that comes

00:30:23,029 --> 00:30:26,480
in as a post or it comes in as a get and

00:30:25,279 --> 00:30:28,309
so we need to figure out which one it is

00:30:26,480 --> 00:30:30,230
because the behavior of this rod handler

00:30:28,309 --> 00:30:32,990
is different based on what verb it gets

00:30:30,230 --> 00:30:35,330
so if the request is a post then we're

00:30:32,990 --> 00:30:38,179
going to do some stuff and then here we

00:30:35,330 --> 00:30:47,120
have the session so you can guys can see

00:30:38,179 --> 00:30:49,370
that if it suppose we're going to longer

00:30:47,120 --> 00:30:51,110
so soon instead of flats message here is

00:30:49,370 --> 00:30:58,429
as you're logged in and we're going to

00:30:51,110 --> 00:30:59,450
redirect them back to the room something

00:30:58,429 --> 00:31:02,149
that I just wanted to mention about

00:30:59,450 --> 00:31:04,850
session specifically was is that again

00:31:02,149 --> 00:31:07,039
it's pretty much a key value type thing

00:31:04,850 --> 00:31:09,289
so you can use pretty much any arbitrary

00:31:07,039 --> 00:31:10,789
key values that you want one thing

00:31:09,289 --> 00:31:13,490
that's interesting about dancer is that

00:31:10,789 --> 00:31:14,870
has this true value defined for you so

00:31:13,490 --> 00:31:17,000
true is an actual thing that you can

00:31:14,870 --> 00:31:19,639
call and it will return a true value I

00:31:17,000 --> 00:31:22,279
think it's actually one it's defined as

00:31:19,639 --> 00:31:23,870
one but it will return a true value to

00:31:22,279 --> 00:31:26,419
you no matter what it actually is under

00:31:23,870 --> 00:31:27,950
the hood so it's kind of nice to for

00:31:26,419 --> 00:31:31,309
readability purposes if you decide to

00:31:27,950 --> 00:31:36,679
use that in your code so let's go back

00:31:31,309 --> 00:31:39,039
to the the code before if the request is

00:31:36,679 --> 00:31:41,419
a post then what's going to happen is

00:31:39,039 --> 00:31:44,600
we're going to do all the input handling

00:31:41,419 --> 00:31:45,409
right and then if it's not a post we're

00:31:44,600 --> 00:31:46,520
going to come back and we're going to

00:31:45,409 --> 00:31:48,860
display the log in to

00:31:46,520 --> 00:31:50,900
t so if we get a get in other words if

00:31:48,860 --> 00:31:52,730
if the request is a get verb we're going

00:31:50,900 --> 00:31:55,700
to display this template and if there's

00:31:52,730 --> 00:31:57,230
an air we're going to show that too if

00:31:55,700 --> 00:31:59,390
it is a post then we're going to do all

00:31:57,230 --> 00:32:01,790
the input handling make sure that you

00:31:59,390 --> 00:32:04,040
know the username is admin the password

00:32:01,790 --> 00:32:05,840
is password and then we're going to set

00:32:04,040 --> 00:32:08,630
up a login session and redirect everyone

00:32:05,840 --> 00:32:11,030
two back to route in other words we're

00:32:08,630 --> 00:32:12,380
gonna have a state change the answer is

00:32:11,030 --> 00:32:14,810
also really configurable I mentioned

00:32:12,380 --> 00:32:16,070
that before it's really configurable the

00:32:14,810 --> 00:32:17,990
way another way that it's super

00:32:16,070 --> 00:32:19,490
configurable is that you can hook a lot

00:32:17,990 --> 00:32:22,040
of the methods and things that it does

00:32:19,490 --> 00:32:24,140
for example you can hook serialization

00:32:22,040 --> 00:32:26,990
and deserialization you can hook

00:32:24,140 --> 00:32:28,940
rendering you can hook templates and you

00:32:26,990 --> 00:32:30,170
can hook airs so you can do handling

00:32:28,940 --> 00:32:31,970
before and after each one of these

00:32:30,170 --> 00:32:33,680
things that will allow you to manipulate

00:32:31,970 --> 00:32:36,770
things that come in and out of those

00:32:33,680 --> 00:32:38,030
types of routines so for example one of

00:32:36,770 --> 00:32:39,620
the things that you can do in dancer is

00:32:38,030 --> 00:32:42,770
you can say I want to take something

00:32:39,620 --> 00:32:45,800
from json and turn it into a pearl data

00:32:42,770 --> 00:32:47,030
structure and if the JSON decoder is not

00:32:45,800 --> 00:32:49,070
doing what you needed to do for some

00:32:47,030 --> 00:32:50,690
reason or you need to inflate some value

00:32:49,070 --> 00:32:51,920
with an object or whatever you can

00:32:50,690 --> 00:32:54,290
totally do that it's pretty

00:32:51,920 --> 00:32:56,450
straightforward to do I have some more

00:32:54,290 --> 00:32:59,180
demos here things that are neat you

00:32:56,450 --> 00:33:00,560
could do route forwarding the idea with

00:32:59,180 --> 00:33:04,880
this is that maybe you have code

00:33:00,560 --> 00:33:06,200
handlers that do some object or some you

00:33:04,880 --> 00:33:08,330
have a route handle it does some

00:33:06,200 --> 00:33:11,300
operation for example like you you

00:33:08,330 --> 00:33:13,670
display data but you also have like demo

00:33:11,300 --> 00:33:15,200
data or dummy data or something like

00:33:13,670 --> 00:33:17,270
that so what you can do is you can

00:33:15,200 --> 00:33:19,640
actually do route forwarding where you

00:33:17,270 --> 00:33:22,760
would say something like um if I get

00:33:19,640 --> 00:33:24,590
this route of demo foo and bar then I'm

00:33:22,760 --> 00:33:26,300
going to take my bar and set it to

00:33:24,590 --> 00:33:28,400
whatever the value is there I'm going to

00:33:26,300 --> 00:33:30,140
load up my magic demo database and then

00:33:28,400 --> 00:33:33,230
I'm going to forward it to the actual

00:33:30,140 --> 00:33:37,130
production fubar and that will use the

00:33:33,230 --> 00:33:38,720
same code path but it using using your

00:33:37,130 --> 00:33:41,030
dummy data so the idea here is that you

00:33:38,720 --> 00:33:42,650
don't have to re you don't have to cut

00:33:41,030 --> 00:33:44,870
and paste data you can fetch your data

00:33:42,650 --> 00:33:46,190
in this route and then forward it to the

00:33:44,870 --> 00:33:47,600
real route handler that does actually

00:33:46,190 --> 00:33:51,920
all the rendering and display and all

00:33:47,600 --> 00:33:53,270
that stuff so that's kind of cool all

00:33:51,920 --> 00:33:56,420
right so Sawyer says they support patch

00:33:53,270 --> 00:33:59,450
I'm not surprised by that but that's a

00:33:56,420 --> 00:34:00,380
pretty new verb so on one other neat

00:33:59,450 --> 00:34:03,590
thing you can do is

00:34:00,380 --> 00:34:05,120
fixing prefix starts a name scope so

00:34:03,590 --> 00:34:07,310
what you can do here is you can say i

00:34:05,120 --> 00:34:09,830
want to start all of my routes with the

00:34:07,310 --> 00:34:11,179
string / user and then i'm going to

00:34:09,830 --> 00:34:13,940
define a whole bunch of route handlers

00:34:11,179 --> 00:34:17,600
underneath it or you can say like user

00:34:13,940 --> 00:34:20,060
view add and get sorry user view add and

00:34:17,600 --> 00:34:21,770
edit and then you do like prefix on deaf

00:34:20,060 --> 00:34:24,889
and that ends the scope and then you can

00:34:21,770 --> 00:34:33,740
define exactly the same name here at the

00:34:24,889 --> 00:34:35,060
bottom so up here is under / user can

00:34:33,740 --> 00:34:37,310
save you a lot of typing as well

00:34:35,060 --> 00:34:39,080
especially if you have a long long route

00:34:37,310 --> 00:34:41,000
or another thing that's really useful

00:34:39,080 --> 00:34:42,139
for is if you want to sort of isolate

00:34:41,000 --> 00:34:44,270
all of your route handlers and those

00:34:42,139 --> 00:34:46,010
discrete modules so if you wanted to put

00:34:44,270 --> 00:34:48,620
all of your user handlers into a user

00:34:46,010 --> 00:34:52,580
p.m. you can easily do that using the

00:34:48,620 --> 00:34:59,570
prefix keyword we talked about dancer

00:34:52,580 --> 00:35:00,830
plugins we talked about earlier we

00:34:59,570 --> 00:35:03,650
talked about how dancer plugins add

00:35:00,830 --> 00:35:06,110
keywords to your to your to your dancer

00:35:03,650 --> 00:35:07,820
core some of the plugins that I think

00:35:06,110 --> 00:35:10,120
are kind of neat are ones that auto

00:35:07,820 --> 00:35:12,320
create RSS feeds it's really slick

00:35:10,120 --> 00:35:14,480
there's a really nice Twitter

00:35:12,320 --> 00:35:16,250
integration so if you want to have users

00:35:14,480 --> 00:35:18,040
login to your dance or app through

00:35:16,250 --> 00:35:20,240
Twitter there's a plug-in that does that

00:35:18,040 --> 00:35:23,930
there's plug-ins for defects class

00:35:20,240 --> 00:35:26,330
integration there's a semi experimental

00:35:23,930 --> 00:35:28,940
one that kind of does credit ratings

00:35:26,330 --> 00:35:31,970
based on a database schema it will auto

00:35:28,940 --> 00:35:34,430
build a lot of stuff for you it's pretty

00:35:31,970 --> 00:35:36,770
neat and there's a lot more there's more

00:35:34,430 --> 00:35:38,240
every day and if you go out to medicine

00:35:36,770 --> 00:35:40,610
pan or whatever and you search for

00:35:38,240 --> 00:35:42,620
dancer plug-in you'll actually get a

00:35:40,610 --> 00:35:45,950
pretty nice list of all of them they're

00:35:42,620 --> 00:35:48,200
really useful just to toot my own horn a

00:35:45,950 --> 00:35:50,480
little bit one of the plugins that I've

00:35:48,200 --> 00:35:54,380
worked on myself is a dancer plug-in

00:35:50,480 --> 00:35:55,670
database it's a it's pretty handy one of

00:35:54,380 --> 00:35:57,500
the keywords that it gives you is called

00:35:55,670 --> 00:35:59,450
database that may mean it is not a

00:35:57,500 --> 00:36:01,640
surprise but what it does is it gives

00:35:59,450 --> 00:36:05,000
you the actual handle that it opens for

00:36:01,640 --> 00:36:06,770
you and it means that you can do a

00:36:05,000 --> 00:36:09,200
pretty straightforward syntactic sugar

00:36:06,770 --> 00:36:12,050
stuff like this where you'd say database

00:36:09,200 --> 00:36:13,950
prepare and then some query and execute

00:36:12,050 --> 00:36:16,120
it

00:36:13,950 --> 00:36:18,250
but there's even more sweet sweet

00:36:16,120 --> 00:36:20,320
syntactic sugar there's these things

00:36:18,250 --> 00:36:22,030
called quick underscore methods one of

00:36:20,320 --> 00:36:23,890
them is quick insert where you can just

00:36:22,030 --> 00:36:26,500
say I want to insert this hash fat

00:36:23,890 --> 00:36:28,210
there's hash ref into my table where the

00:36:26,500 --> 00:36:30,420
hash is basically a list of column names

00:36:28,210 --> 00:36:32,770
and values and it will insert it for you

00:36:30,420 --> 00:36:34,510
you can also do stuff like this where

00:36:32,770 --> 00:36:36,520
you say I want to I want to render a

00:36:34,510 --> 00:36:38,620
template called user detailed TT and

00:36:36,520 --> 00:36:41,710
it's going to do a quick select from my

00:36:38,620 --> 00:36:43,450
table where the ID is 42 or obviously

00:36:41,710 --> 00:36:49,090
that could be parameterized but it's not

00:36:43,450 --> 00:36:52,750
here so in short dancer is awesome yeah

00:36:49,090 --> 00:36:55,150
it is seriously here's all the different

00:36:52,750 --> 00:36:57,060
things I've talked about today all the

00:36:55,150 --> 00:36:59,080
demo code is available on bitbucket it's

00:36:57,060 --> 00:37:02,410
specifically available at that URL at

00:36:59,080 --> 00:37:03,760
the top the documentation since I wrote

00:37:02,410 --> 00:37:06,190
this slide deck has really really

00:37:03,760 --> 00:37:07,300
improved a lot that's been a main focus

00:37:06,190 --> 00:37:10,450
for the development team for the last

00:37:07,300 --> 00:37:12,010
what 12 months 18 months a lot of work

00:37:10,450 --> 00:37:15,580
has gone into documentation is a lot

00:37:12,010 --> 00:37:17,590
better it's a lot easier for newbies to

00:37:15,580 --> 00:37:19,530
get involved with using dancer in their

00:37:17,590 --> 00:37:22,240
code and production projects every day

00:37:19,530 --> 00:37:23,860
there's also the answer database plug-in

00:37:22,240 --> 00:37:26,290
that I talked about and then if you want

00:37:23,860 --> 00:37:29,620
to install this for yourself you can use

00:37:26,290 --> 00:37:32,440
C pan- that curl command is broken now

00:37:29,620 --> 00:37:35,320
because get switched to https so i need

00:37:32,440 --> 00:37:38,380
to update the slide but if you do curl

00:37:35,320 --> 00:37:40,480
minus minus insecure minus capital L C

00:37:38,380 --> 00:37:41,200
pan- and then you pipe that to purl it

00:37:40,480 --> 00:37:44,170
will actually do all the installations

00:37:41,200 --> 00:37:51,690
for you the answer yeah milland template

00:37:44,170 --> 00:37:51,690
so thanks other questions thank

00:37:53,589 --> 00:38:02,989
so I ended I ended pretty fast but yeah

00:37:56,690 --> 00:38:05,749
questions it is yeah so they're working

00:38:02,989 --> 00:38:10,940
on dancer too sorry you want to talk

00:38:05,749 --> 00:38:27,910
about that hey I can't even I can't

00:38:10,940 --> 00:38:30,799
believe that's like the bed good sugar

00:38:27,910 --> 00:38:33,349
we need to do some global then we really

00:38:30,799 --> 00:38:36,950
in like and then we got some help and

00:38:33,349 --> 00:38:39,859
Matt trout and help us quite a bit and

00:38:36,950 --> 00:38:41,509
we're rewriting it using moon so it's

00:38:39,859 --> 00:38:47,839
going to be completely object-oriented

00:38:41,509 --> 00:38:50,150
from the get encapsulated correctly it's

00:38:47,839 --> 00:38:55,160
going to be so much better in probably a

00:38:50,150 --> 00:38:58,609
bit faster also we're still not done so

00:38:55,160 --> 00:39:02,299
you can use dancer and two too many

00:38:58,609 --> 00:39:04,400
changes you won't break so much so yeah

00:39:02,299 --> 00:39:06,349
the i'm not sure like exactly what the

00:39:04,400 --> 00:39:09,499
release date is on all the all the work

00:39:06,349 --> 00:39:11,299
that yeah it'll be ready for Sawyer says

00:39:09,499 --> 00:39:13,249
they'll be ready for Christmas like

00:39:11,299 --> 00:39:16,670
pearl six hopefully sooner than Pearl

00:39:13,249 --> 00:39:19,819
six but yeah hopefully Christmas within

00:39:16,670 --> 00:39:22,930
the next decade i would say but yeah so

00:39:19,819 --> 00:39:26,359
they are working on a rewrite and yeah

00:39:22,930 --> 00:39:29,089
yeah Moo's good stuff by the way let me

00:39:26,359 --> 00:39:30,470
plug mu i started using I've I I've

00:39:29,089 --> 00:39:32,029
drunk the MU School a pretty thoroughly

00:39:30,470 --> 00:39:34,339
but I'm one of the things that bugged me

00:39:32,029 --> 00:39:36,440
about it was it's really heavy weight mu

00:39:34,339 --> 00:39:38,499
is is all the goodness of moose without

00:39:36,440 --> 00:39:40,549
all the meta objects that you don't need

00:39:38,499 --> 00:39:42,349
unless you really need them if you

00:39:40,549 --> 00:39:46,700
really need them then use mousse but if

00:39:42,349 --> 00:39:50,950
you don't then use mu so any other

00:39:46,700 --> 00:39:50,950
questions yes

00:39:58,630 --> 00:40:04,730
um well i mean i don't i don't know

00:40:02,930 --> 00:40:07,100
exactly that i would say that it's

00:40:04,730 --> 00:40:08,870
better faster or lighter i would just

00:40:07,100 --> 00:40:11,930
say that for me personally it we ended

00:40:08,870 --> 00:40:13,610
up being a better choice and it was just

00:40:11,930 --> 00:40:16,700
something I came to that I understood a

00:40:13,610 --> 00:40:18,260
lot more quick quickly I mean as I said

00:40:16,700 --> 00:40:20,570
I think mojo is a perfectly great

00:40:18,260 --> 00:40:23,840
framework to do development work in it's

00:40:20,570 --> 00:40:25,190
just for me personally dancer with

00:40:23,840 --> 00:40:27,440
something to I already understood and

00:40:25,190 --> 00:40:30,080
it's just gotten better as time went

00:40:27,440 --> 00:40:31,940
along I have started playing with mojo

00:40:30,080 --> 00:40:33,470
more than I had in the past and I do

00:40:31,940 --> 00:40:36,770
really like it it's got some really cool

00:40:33,470 --> 00:40:38,390
stuff out of the box but for me dancer

00:40:36,770 --> 00:40:40,580
was just the better choice for me

00:40:38,390 --> 00:40:43,190
personally so I mean compared to

00:40:40,580 --> 00:40:45,110
catalyst i would say on a spectrum i

00:40:43,190 --> 00:40:47,030
would probably say for me personally

00:40:45,110 --> 00:40:48,740
dancer was the easiest to understand

00:40:47,030 --> 00:40:50,720
then i would put mojo kind of in the

00:40:48,740 --> 00:40:52,010
middle not as heavy as catalyst and then

00:40:50,720 --> 00:40:54,760
over here i'd have catalyst which is

00:40:52,010 --> 00:40:58,580
very heavy weight too steep on a curve

00:40:54,760 --> 00:41:00,620
yeah sorry yeah there's a wiki engine

00:40:58,580 --> 00:41:05,440
called mojo mojo I'm not talking about

00:41:00,620 --> 00:41:05,440
that it's also written in perl but it's

00:41:06,370 --> 00:41:11,020
yeah yeah it is yeah

00:41:25,080 --> 00:41:44,260
how cool great steep in the kool-aid

00:41:32,890 --> 00:41:46,450
it's good for you yeah it it it's sort

00:41:44,260 --> 00:41:47,920
of it's sort of is I mean it is exactly

00:41:46,450 --> 00:41:59,650
what Sawyer said it's a DSL that is

00:41:47,920 --> 00:42:01,270
interpreted by Pearl itself yeah so um

00:41:59,650 --> 00:42:02,500
one of the things that that I didn't

00:42:01,270 --> 00:42:04,150
talk about yet but was really

00:42:02,500 --> 00:42:05,650
interesting to me was because I did this

00:42:04,150 --> 00:42:08,859
other talk that I mentioned the top at

00:42:05,650 --> 00:42:10,750
the top of the hour was that I've

00:42:08,859 --> 00:42:12,369
written the same web application in four

00:42:10,750 --> 00:42:14,260
different frameworks and except for

00:42:12,369 --> 00:42:17,950
early on which you know is Erlang and

00:42:14,260 --> 00:42:18,609
therefore a unicorn the the commonality

00:42:17,950 --> 00:42:20,440
between all the different

00:42:18,609 --> 00:42:22,420
implementations is very very close

00:42:20,440 --> 00:42:25,030
together so if you take the flask

00:42:22,420 --> 00:42:26,980
implementation you change like putting

00:42:25,030 --> 00:42:28,540
sigils in front of variables it pretty

00:42:26,980 --> 00:42:30,010
much will run straight up as a dancer

00:42:28,540 --> 00:42:32,680
app or a mojo app without really any

00:42:30,010 --> 00:42:34,030
other changes to it so it's quite

00:42:32,680 --> 00:42:36,040
remarkable there seems to be kind of a

00:42:34,030 --> 00:42:38,530
an emerging consensus that a

00:42:36,040 --> 00:42:40,839
domain-specific language that's based

00:42:38,530 --> 00:42:43,119
loosely on sinatra should have these

00:42:40,839 --> 00:42:44,170
verbs called XY and Z and they're pretty

00:42:43,119 --> 00:42:46,390
common across all the different

00:42:44,170 --> 00:42:48,430
platforms I mean the details obviously

00:42:46,390 --> 00:42:49,839
are going to be different but in their

00:42:48,430 --> 00:42:53,530
in their form they're pretty much the

00:42:49,839 --> 00:42:55,000
same so let me go back to that yeah this

00:42:53,530 --> 00:42:56,650
page right here in case anyone wants to

00:42:55,000 --> 00:42:59,109
see it because I know people want to see

00:42:56,650 --> 00:43:09,700
it are there any other questions or

00:42:59,109 --> 00:43:15,190
comments or oh my snarky mystery

00:43:09,700 --> 00:43:16,869
framework yeah it's a fat comma and

00:43:15,190 --> 00:43:20,380
that's really all it's for I mean you

00:43:16,869 --> 00:43:22,180
could actually put a comma there but

00:43:20,380 --> 00:43:27,609
what it does is it it quotes everything

00:43:22,180 --> 00:43:29,230
on the left side so any is implemented

00:43:27,609 --> 00:43:32,230
as a subroutine and it takes this

00:43:29,230 --> 00:43:34,470
parameter list and you have to quote

00:43:32,230 --> 00:43:34,470
that

00:43:36,140 --> 00:43:45,380
so all right well thanks a lot guys I

00:43:42,210 --> 00:43:45,380

YouTube URL: https://www.youtube.com/watch?v=PLBWwVWVGeg


