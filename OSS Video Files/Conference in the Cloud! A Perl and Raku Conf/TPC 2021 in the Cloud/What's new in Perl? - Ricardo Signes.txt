Title: What's new in Perl? - Ricardo Signes
Publication date: 2021-06-09
Playlist: TPC 2021 in the Cloud
Description: 
	It’s 2021! Another year, another Perl release. What’s new?

This year’s release is not bursting with new features, but we’ll tell you what they are and why they’re great. More than that, though, we’ll talk about what’s going on in Perl development, and what to expect from the coming year.
Captions: 
	00:00:00,160 --> 00:00:04,399
see how many people i can stick in a

00:00:01,760 --> 00:00:04,399
window here

00:00:04,640 --> 00:00:17,920
we'll find out how this goes

00:00:26,480 --> 00:00:34,640
do not disturb very good

00:00:31,599 --> 00:00:36,960
this is my first time using keynote's

00:00:34,640 --> 00:00:40,640
new

00:00:36,960 --> 00:00:42,640
for streaming setup which i

00:00:40,640 --> 00:00:43,760
i guess about a year ago i was giving a

00:00:42,640 --> 00:00:46,160
talk and i

00:00:43,760 --> 00:00:46,879
complained bitterly i just wish they had

00:00:46,160 --> 00:00:48,640
a way to

00:00:46,879 --> 00:00:50,000
do the slideshow presentation in one

00:00:48,640 --> 00:00:51,280
window with all my notes in another

00:00:50,000 --> 00:00:54,559
window and i could share this

00:00:51,280 --> 00:00:56,800
it'd be great for doing over sharing and

00:00:54,559 --> 00:00:58,640
an update came out for keynote that

00:00:56,800 --> 00:01:01,920
morning and i was giving a presentation

00:00:58,640 --> 00:01:03,760
like 45 minutes later and i had to

00:01:01,920 --> 00:01:05,280
do the responsible thing and not upgrade

00:01:03,760 --> 00:01:06,880
keynote because

00:01:05,280 --> 00:01:09,119
if it had broken my slides i would have

00:01:06,880 --> 00:01:10,720
been in a lot of trouble

00:01:09,119 --> 00:01:14,159
but now i actually have it i can use it

00:01:10,720 --> 00:01:14,159
so see how it goes

00:01:20,880 --> 00:01:24,479
yeah let me know how that goes i'm using

00:01:22,880 --> 00:01:27,439
keynote later today

00:01:24,479 --> 00:01:28,640
for sure so far it looks good i'm also

00:01:27,439 --> 00:01:30,159
waiting for somebody to tell me when to

00:01:28,640 --> 00:01:32,560
start so i see it's not one o'clock yet

00:01:30,159 --> 00:01:36,079
so i feel good about just

00:01:32,560 --> 00:01:36,079
chit chatting for my podium but

00:01:37,840 --> 00:01:41,840
excuse me

00:01:45,360 --> 00:01:52,000
uh welcome everybody to uh pearl thought

00:01:48,799 --> 00:01:54,960
to what's new in pearl 534 i'd

00:01:52,000 --> 00:01:55,600
uh like to uh let make sure everybody

00:01:54,960 --> 00:01:57,520
knows

00:01:55,600 --> 00:02:00,079
that immediately following this talk we

00:01:57,520 --> 00:02:04,320
have three opportunities for

00:02:00,079 --> 00:02:07,360
different boss that people can join um

00:02:04,320 --> 00:02:11,599
we have one on raku we have

00:02:07,360 --> 00:02:15,200
one on i believe rust and

00:02:11,599 --> 00:02:18,080
um one uh cpanel uh we'll also be giving

00:02:15,200 --> 00:02:20,840
a both if you uh would like to find out

00:02:18,080 --> 00:02:23,680
more about working at cpanel

00:02:20,840 --> 00:02:24,239
um i think that's all the announcements

00:02:23,680 --> 00:02:28,000
so

00:02:24,239 --> 00:02:31,200
uh rick you're up thank you for speaking

00:02:28,000 --> 00:02:33,920
my pleasure hello everybody uh

00:02:31,200 --> 00:02:35,440
i'm gonna be talking about pearl and uh

00:02:33,920 --> 00:02:36,360
the newest version of pearl which is

00:02:35,440 --> 00:02:39,519
pearl

00:02:36,360 --> 00:02:41,040
534 if you can believe it and some other

00:02:39,519 --> 00:02:43,840
stuff that went on in the last year

00:02:41,040 --> 00:02:44,640
which presumably uh everyone expects me

00:02:43,840 --> 00:02:47,920
to talk about

00:02:44,640 --> 00:02:49,840
so i will um i think

00:02:47,920 --> 00:02:51,200
that i have left time for questions at

00:02:49,840 --> 00:02:54,720
the end uh

00:02:51,200 --> 00:02:56,400
i'm not i'm not great at uh timing my

00:02:54,720 --> 00:02:57,040
talks even when i try so we'll see how

00:02:56,400 --> 00:02:58,319
it goes

00:02:57,040 --> 00:03:00,720
and also i don't know how questions are

00:02:58,319 --> 00:03:04,000
gonna work so we'll see what happens

00:03:00,720 --> 00:03:07,120
um pro 534 so it's been a long march uh

00:03:04,000 --> 00:03:07,680
or for basically everybody it's been a

00:03:07,120 --> 00:03:11,840
long

00:03:07,680 --> 00:03:13,920
march uh today is march 466

00:03:11,840 --> 00:03:15,519
2020 if you are keeping track of the

00:03:13,920 --> 00:03:18,879
2020 calendar which i

00:03:15,519 --> 00:03:21,920
am uh it's so hot it's

00:03:18,879 --> 00:03:22,720
uh it's 90 degrees here you know 30 31

00:03:21,920 --> 00:03:24,879
00:03:22,720 --> 00:03:26,640
uh outside i just went outside to my

00:03:24,879 --> 00:03:28,400
child's uh

00:03:26,640 --> 00:03:30,480
finishing of middle school and it's

00:03:28,400 --> 00:03:31,360
untimely weather for march but here we

00:03:30,480 --> 00:03:33,120
are

00:03:31,360 --> 00:03:35,440
i don't know about everybody else here

00:03:33,120 --> 00:03:37,440
but i found this year really difficult

00:03:35,440 --> 00:03:39,280
um i didn't even have anything bad

00:03:37,440 --> 00:03:40,799
happen to me uh you might

00:03:39,280 --> 00:03:42,560
i feel like i must be in the top

00:03:40,799 --> 00:03:44,480
percentage of people as far as

00:03:42,560 --> 00:03:46,400
good fortune for the past 18 months and

00:03:44,480 --> 00:03:48,400
it was just a slog

00:03:46,400 --> 00:03:50,239
um everything was harder this year work

00:03:48,400 --> 00:03:51,120
was harder enjoying my time with my

00:03:50,239 --> 00:03:52,959
family was harder

00:03:51,120 --> 00:03:55,360
enjoying the city i live in was harder

00:03:52,959 --> 00:03:58,720
and that includes pearl stuff

00:03:55,360 --> 00:04:00,959
pearl stuff this year was a drag

00:03:58,720 --> 00:04:01,920
it just nobody had a really great time

00:04:00,959 --> 00:04:04,879
but i

00:04:01,920 --> 00:04:06,480
am starting at long last to feel pretty

00:04:04,879 --> 00:04:08,480
optimistic or i've been feeling more and

00:04:06,480 --> 00:04:10,080
more optimistic over the last few months

00:04:08,480 --> 00:04:11,519
uh and it feels like now that i'm

00:04:10,080 --> 00:04:12,720
getting back in the spirit of just

00:04:11,519 --> 00:04:15,040
getting some good stuff done

00:04:12,720 --> 00:04:16,479
what better time to rehash the past and

00:04:15,040 --> 00:04:18,720
talk about what actually

00:04:16,479 --> 00:04:20,239
went well and badly over the last year

00:04:18,720 --> 00:04:23,759
so let's talk about

00:04:20,239 --> 00:04:27,680
all 18 months of pearl in 2020.

00:04:23,759 --> 00:04:29,840
last year around this time pearl 532 was

00:04:27,680 --> 00:04:31,280
released on june 20th most pearl

00:04:29,840 --> 00:04:32,000
releases come out on the 20th of the

00:04:31,280 --> 00:04:35,440
month

00:04:32,000 --> 00:04:37,840
it's difficult to arrange for the

00:04:35,440 --> 00:04:38,960
new release of a new version of pearl to

00:04:37,840 --> 00:04:42,320
come out on the 20th so

00:04:38,960 --> 00:04:44,400
this was a nice accomplishment and

00:04:42,320 --> 00:04:46,639
a few days later at this conference the

00:04:44,400 --> 00:04:49,840
plan for pearl version 7

00:04:46,639 --> 00:04:52,639
was announced that was on the 24th so

00:04:49,840 --> 00:04:54,639
just under a year ago and the next day i

00:04:52,639 --> 00:04:58,080
would say the uproar started

00:04:54,639 --> 00:05:02,000
um i found this slide in a talk i gave

00:04:58,080 --> 00:05:03,600
in 2013 uh about what was the previous

00:05:02,000 --> 00:05:06,800
round of controversy about

00:05:03,600 --> 00:05:08,960
pearl 7. uh and i want to talk just

00:05:06,800 --> 00:05:10,639
kind of a little bit about the history

00:05:08,960 --> 00:05:11,520
of pearl 7 in the last year

00:05:10,639 --> 00:05:14,160
and then what i'm going to talk about

00:05:11,520 --> 00:05:15,199
here is very hand wavy i'm not trying to

00:05:14,160 --> 00:05:17,039
give you a reason

00:05:15,199 --> 00:05:18,479
careful argumentation about it i just

00:05:17,039 --> 00:05:20,800
want to discuss it

00:05:18,479 --> 00:05:21,600
roughly what went on don't use this to

00:05:20,800 --> 00:05:23,199
decide

00:05:21,600 --> 00:05:24,400
if you think you sh we should have done

00:05:23,199 --> 00:05:26,000
one thing or the other that's not what

00:05:24,400 --> 00:05:28,160
this is for

00:05:26,000 --> 00:05:29,520
as proposed the idea of pearl 7 included

00:05:28,160 --> 00:05:30,160
that we would change the default

00:05:29,520 --> 00:05:31,759
behavior

00:05:30,160 --> 00:05:33,440
that you got out of the box from the

00:05:31,759 --> 00:05:34,560
from the first line of your program so

00:05:33,440 --> 00:05:37,280
for example strict

00:05:34,560 --> 00:05:38,080
would be turned on not off at the first

00:05:37,280 --> 00:05:40,000
line of the program

00:05:38,080 --> 00:05:41,520
and maybe indirect method calls would

00:05:40,000 --> 00:05:42,080
not be available that would not work

00:05:41,520 --> 00:05:45,199
unless you

00:05:42,080 --> 00:05:46,080
turned it back on and it also set up the

00:05:45,199 --> 00:05:47,280
expectation

00:05:46,080 --> 00:05:49,039
that there would be a future version

00:05:47,280 --> 00:05:50,560
eight right these kinds of changes could

00:05:49,039 --> 00:05:51,919
become a thing that would happen

00:05:50,560 --> 00:05:55,440
and there's plenty of reasons to think

00:05:51,919 --> 00:05:56,880
that this has some benefit to people

00:05:55,440 --> 00:05:58,720
it would give you a better pearl from

00:05:56,880 --> 00:06:00,639
the first line of code i think very few

00:05:58,720 --> 00:06:01,759
people will argue that having strict off

00:06:00,639 --> 00:06:04,000
by default

00:06:01,759 --> 00:06:05,600
is really the best experience for

00:06:04,000 --> 00:06:07,919
programming in perl

00:06:05,600 --> 00:06:09,919
it also gave us a means to eliminate

00:06:07,919 --> 00:06:11,520
croft in the language

00:06:09,919 --> 00:06:13,520
so if we had features that we didn't

00:06:11,520 --> 00:06:15,520
want around anymore this was a means to

00:06:13,520 --> 00:06:18,160
turn them off by default

00:06:15,520 --> 00:06:19,759
and it would optimize the pearl

00:06:18,160 --> 00:06:20,960
programming experience for people who

00:06:19,759 --> 00:06:23,199
are writing

00:06:20,960 --> 00:06:24,560
new code targeting the newest perl and

00:06:23,199 --> 00:06:26,479
give them the best language that would

00:06:24,560 --> 00:06:29,360
get better and better over time and not

00:06:26,479 --> 00:06:29,759
weigh it down with supporting people

00:06:29,360 --> 00:06:32,000
running

00:06:29,759 --> 00:06:32,960
old code that they didn't edit on new

00:06:32,000 --> 00:06:37,759
versions of perl

00:06:32,960 --> 00:06:39,039
this is my simple summary of the thesis

00:06:37,759 --> 00:06:41,120
and the arguments against it were

00:06:39,039 --> 00:06:42,479
something like if you have code that

00:06:41,120 --> 00:06:44,880
works now

00:06:42,479 --> 00:06:46,400
you will have to change it your code

00:06:44,880 --> 00:06:47,600
won't just keep working you have to go

00:06:46,400 --> 00:06:48,000
make changes to code that works

00:06:47,600 --> 00:06:50,960
perfectly

00:06:48,000 --> 00:06:52,880
well and this is a drag and we already

00:06:50,960 --> 00:06:54,880
have a mechanism for addressing

00:06:52,880 --> 00:06:58,240
some of this which is feature bundles

00:06:54,880 --> 00:06:59,360
right when you say use v532

00:06:58,240 --> 00:07:01,120
it changes the pearl you're getting

00:06:59,360 --> 00:07:02,560
already it's not exactly the same but

00:07:01,120 --> 00:07:03,599
it's addressing parts of the same

00:07:02,560 --> 00:07:05,360
problem

00:07:03,599 --> 00:07:07,280
and it complicates how we think about

00:07:05,360 --> 00:07:09,680
code that goes on cpan

00:07:07,280 --> 00:07:12,000
or code that's just a couple lines of

00:07:09,680 --> 00:07:12,960
code out of context you need to know in

00:07:12,000 --> 00:07:14,479
what context

00:07:12,960 --> 00:07:17,680
was this originally written or how is it

00:07:14,479 --> 00:07:18,800
being run it can for example make static

00:07:17,680 --> 00:07:20,880
analysis harder

00:07:18,800 --> 00:07:22,400
or it can just make it a little more

00:07:20,880 --> 00:07:23,759
difficult to say here's a hunk of code

00:07:22,400 --> 00:07:25,039
stick it in your program and it will

00:07:23,759 --> 00:07:25,520
work you have to say stick it in your

00:07:25,039 --> 00:07:28,479
program

00:07:25,520 --> 00:07:28,479
in this context

00:07:28,800 --> 00:07:33,599
this isn't uh this isn't an obvious dunk

00:07:31,680 --> 00:07:34,560
on why not to do pearl 7. it's sort of a

00:07:33,599 --> 00:07:37,280
basic summary of

00:07:34,560 --> 00:07:39,039
some things that came up another

00:07:37,280 --> 00:07:39,599
complicating factor is that pearl 7 was

00:07:39,039 --> 00:07:42,319
announced

00:07:39,599 --> 00:07:43,599
basically by surprise sort of it had

00:07:42,319 --> 00:07:44,000
been discussed with a lot of people

00:07:43,599 --> 00:07:46,960
including

00:07:44,000 --> 00:07:49,360
me uh a lot of discussions that went on

00:07:46,960 --> 00:07:51,759
in private about this plan

00:07:49,360 --> 00:07:52,560
but the plan hadn't been discussed on

00:07:51,759 --> 00:07:55,840
for example

00:07:52,560 --> 00:07:58,000
pro 5 porters if you are not a regular

00:07:55,840 --> 00:08:01,120
reader of pearl 5 porters

00:07:58,000 --> 00:08:03,520
pro 5 porters can be a lot

00:08:01,120 --> 00:08:04,879
it's got a lot of hot takes people will

00:08:03,520 --> 00:08:06,160
show up and they'll tell you their

00:08:04,879 --> 00:08:07,759
opinion which they have not

00:08:06,160 --> 00:08:09,759
carefully considered or even carefully

00:08:07,759 --> 00:08:10,960
constructed and

00:08:09,759 --> 00:08:13,280
this makes it difficult to have a

00:08:10,960 --> 00:08:14,400
nuanced conversation and it's even more

00:08:13,280 --> 00:08:16,400
difficult when you want to have a

00:08:14,400 --> 00:08:18,240
nuanced conversation about something

00:08:16,400 --> 00:08:20,160
that's really complicated or something

00:08:18,240 --> 00:08:21,840
that's provocative and if it's both

00:08:20,160 --> 00:08:24,319
complicated and provocative

00:08:21,840 --> 00:08:24,879
having a nuanced conversation is tough

00:08:24,319 --> 00:08:27,360
this is

00:08:24,879 --> 00:08:27,919
something that needs to get fixed um and

00:08:27,360 --> 00:08:29,520
one of the

00:08:27,919 --> 00:08:31,599
problems that one of the many problems

00:08:29,520 --> 00:08:32,719
it has caused is that it led us to this

00:08:31,599 --> 00:08:34,800
situation where we had

00:08:32,719 --> 00:08:36,320
a plan that had been discussed in lots

00:08:34,800 --> 00:08:38,800
of different private groups

00:08:36,320 --> 00:08:40,399
but not not brought to the public until

00:08:38,800 --> 00:08:42,959
there was an announcement

00:08:40,399 --> 00:08:43,760
so was it okay to work this way i i

00:08:42,959 --> 00:08:46,160
don't know

00:08:43,760 --> 00:08:47,760
uh it's it was a really complicated

00:08:46,160 --> 00:08:48,800
question and i think everyone is acting

00:08:47,760 --> 00:08:50,880
in good faith

00:08:48,800 --> 00:08:52,240
and it made some people feel bad that

00:08:50,880 --> 00:08:53,440
they were not looped in or the

00:08:52,240 --> 00:08:54,480
discussion didn't work the way they

00:08:53,440 --> 00:08:56,240
wanted it to

00:08:54,480 --> 00:08:57,680
and it made some people feel bad that

00:08:56,240 --> 00:08:59,120
they were told

00:08:57,680 --> 00:09:01,040
even though you've done a lot of work in

00:08:59,120 --> 00:09:03,120
preparation and consultation i think

00:09:01,040 --> 00:09:06,640
that you are doing something

00:09:03,120 --> 00:09:08,560
in bad faith or mean-spirited so

00:09:06,640 --> 00:09:11,200
it led to a lot of it led to a lot of

00:09:08,560 --> 00:09:13,839
communication problems

00:09:11,200 --> 00:09:15,760
here's how things got decided in the

00:09:13,839 --> 00:09:18,320
governance of the pearl project

00:09:15,760 --> 00:09:19,600
uh up until last year people have a

00:09:18,320 --> 00:09:21,920
conversation

00:09:19,600 --> 00:09:23,360
somewhere of some kind and then the

00:09:21,920 --> 00:09:24,640
pumpkin makes a decision that's the

00:09:23,360 --> 00:09:25,519
single person in charge of the project

00:09:24,640 --> 00:09:29,519
and that's it

00:09:25,519 --> 00:09:31,839
that's how it works basically um

00:09:29,519 --> 00:09:34,480
the pumpkin the pumpkin was the single

00:09:31,839 --> 00:09:36,240
person in charge of the project

00:09:34,480 --> 00:09:37,760
some people had the idea that the

00:09:36,240 --> 00:09:40,160
pumpkin was bound

00:09:37,760 --> 00:09:41,680
by pearl policy this this promise of

00:09:40,160 --> 00:09:44,000
backwards compatibility

00:09:41,680 --> 00:09:45,519
between the promise that's made between

00:09:44,000 --> 00:09:45,839
the pro 5 porters and the rest of the

00:09:45,519 --> 00:09:47,760
world

00:09:45,839 --> 00:09:49,440
the pumpkin can guide the project but

00:09:47,760 --> 00:09:50,000
this principle is inviolate and they're

00:09:49,440 --> 00:09:52,240
governed by

00:09:50,000 --> 00:09:53,680
this and other people felt the pumpkin

00:09:52,240 --> 00:09:55,440
was the only direction setter and

00:09:53,680 --> 00:09:57,040
they're only bound by deciding what's

00:09:55,440 --> 00:10:00,880
best for the language

00:09:57,040 --> 00:10:05,120
so in the context of a conversation

00:10:00,880 --> 00:10:07,600
that was complicated and provocative

00:10:05,120 --> 00:10:08,640
and some people felt had been sprung on

00:10:07,600 --> 00:10:10,800
them

00:10:08,640 --> 00:10:12,880
and they were coming from two different

00:10:10,800 --> 00:10:14,000
paradigms of how the project was meant

00:10:12,880 --> 00:10:16,959
to work

00:10:14,000 --> 00:10:17,279
things were tense uh there's just a lot

00:10:16,959 --> 00:10:18,800
of

00:10:17,279 --> 00:10:21,519
a lot of strife and a lot of difficulty

00:10:18,800 --> 00:10:24,320
communication and as an attempt

00:10:21,519 --> 00:10:26,000
to address this we started a process uh

00:10:24,320 --> 00:10:27,519
which i'm going to call pearl core it

00:10:26,000 --> 00:10:29,519
had a number of names as things went on

00:10:27,519 --> 00:10:32,000
but this is one of the earliest ones

00:10:29,519 --> 00:10:32,560
where we said look how can we find the

00:10:32,000 --> 00:10:35,600
people

00:10:32,560 --> 00:10:38,000
who if they agree on what we're doing

00:10:35,600 --> 00:10:39,680
there will be no questions of legitimacy

00:10:38,000 --> 00:10:40,880
all right if you think the pumpkin alone

00:10:39,680 --> 00:10:43,200
can't decide this

00:10:40,880 --> 00:10:44,560
which i i'm taking no claim about

00:10:43,200 --> 00:10:47,040
whether or not the pumpkin can

00:10:44,560 --> 00:10:48,240
if you have a clear list of stakeholders

00:10:47,040 --> 00:10:50,959
in the project

00:10:48,240 --> 00:10:52,959
who will overwhelmingly have consensus

00:10:50,959 --> 00:10:54,800
about what should be done

00:10:52,959 --> 00:10:57,040
then we can move on and we cannot worry

00:10:54,800 --> 00:10:57,519
about this and we started making a list

00:10:57,040 --> 00:10:59,600
of who

00:10:57,519 --> 00:11:00,560
are the official stakeholders who could

00:10:59,600 --> 00:11:02,560
give a clear

00:11:00,560 --> 00:11:03,680
statement about what's going to go on

00:11:02,560 --> 00:11:05,839
and a statement that they had

00:11:03,680 --> 00:11:07,760
confidence in the process that was being

00:11:05,839 --> 00:11:09,279
carried out

00:11:07,760 --> 00:11:10,800
and it got complicated it didn't just

00:11:09,279 --> 00:11:12,399
turn into let's

00:11:10,800 --> 00:11:14,720
find the right 50 people and have them

00:11:12,399 --> 00:11:17,279
all sign off the discussion

00:11:14,720 --> 00:11:18,320
turned uh in a number of different turns

00:11:17,279 --> 00:11:21,279
into a discussion

00:11:18,320 --> 00:11:22,320
of the governance of pearl in general in

00:11:21,279 --> 00:11:26,079
general

00:11:22,320 --> 00:11:29,839
and this took us to the gov begin

00:11:26,079 --> 00:11:30,560
list we setting up a much more clearly

00:11:29,839 --> 00:11:33,600
defined

00:11:30,560 --> 00:11:34,720
governance for the project a yeah write

00:11:33,600 --> 00:11:37,920
a formal government

00:11:34,720 --> 00:11:39,680
charter for pro five porters not there

00:11:37,920 --> 00:11:41,519
is a person who runs the project

00:11:39,680 --> 00:11:42,720
they make all the decisions they are

00:11:41,519 --> 00:11:44,640
installed through

00:11:42,720 --> 00:11:47,040
some unstated means and can be revoked

00:11:44,640 --> 00:11:49,279
through no clear means

00:11:47,040 --> 00:11:50,639
which had worked for a long time and

00:11:49,279 --> 00:11:53,440
this was a point at which people were

00:11:50,639 --> 00:11:55,200
saying maybe we need something clearer

00:11:53,440 --> 00:11:57,680
you can basically read the whole

00:11:55,200 --> 00:12:00,000
conversation that led to the existing

00:11:57,680 --> 00:12:01,279
the now existing governance process at

00:12:00,000 --> 00:12:03,200
the url you'll see at the bottom of my

00:12:01,279 --> 00:12:04,639
slides

00:12:03,200 --> 00:12:06,240
obviously there are conversations that

00:12:04,639 --> 00:12:08,800
happened elsewhere in

00:12:06,240 --> 00:12:10,639
private emails on irc in zoom but i

00:12:08,800 --> 00:12:12,399
think you get a really good a really

00:12:10,639 --> 00:12:14,160
good

00:12:12,399 --> 00:12:16,399
proportion of the actual discussion on

00:12:14,160 --> 00:12:18,639
this public mailing list

00:12:16,399 --> 00:12:20,079
the outcome was perlgov program is a new

00:12:18,639 --> 00:12:22,079
piece of documentation

00:12:20,079 --> 00:12:23,279
it's in the perl repository and it

00:12:22,079 --> 00:12:25,600
shipped with

00:12:23,279 --> 00:12:27,440
perl 534 remember this is a talk about

00:12:25,600 --> 00:12:28,800
pro 534

00:12:27,440 --> 00:12:30,160
you can read that document and it's

00:12:28,800 --> 00:12:31,360
going to tell you how the governance of

00:12:30,160 --> 00:12:33,120
the project worked

00:12:31,360 --> 00:12:35,040
but i'll give you a really simple

00:12:33,120 --> 00:12:36,160
summary including a slide i forgot to

00:12:35,040 --> 00:12:38,720
update

00:12:36,160 --> 00:12:39,200
first there's the core team the core

00:12:38,720 --> 00:12:43,200
team

00:12:39,200 --> 00:12:45,279
are roughly 30 not 50 uh people who are

00:12:43,200 --> 00:12:46,480
the voting stakeholders in the project

00:12:45,279 --> 00:12:48,880
i'll talk about where this list came

00:12:46,480 --> 00:12:51,839
from in a little bit

00:12:48,880 --> 00:12:53,360
the core team uh is these 30 people and

00:12:51,839 --> 00:12:54,880
then there's the steering council which

00:12:53,360 --> 00:12:57,120
is a three-person team

00:12:54,880 --> 00:12:58,560
and that team basically makes the final

00:12:57,120 --> 00:12:59,360
decisions about what's going to happen

00:12:58,560 --> 00:13:02,240
in the project

00:12:59,360 --> 00:13:03,760
will this feature be accepted will this

00:13:02,240 --> 00:13:06,560
team be spun up

00:13:03,760 --> 00:13:08,720
will this uh platform be dropped from

00:13:06,560 --> 00:13:10,240
the list of supported platforms

00:13:08,720 --> 00:13:11,920
and the relationship between the two is

00:13:10,240 --> 00:13:14,880
that the core team

00:13:11,920 --> 00:13:17,440
elects the steering council and its own

00:13:14,880 --> 00:13:17,440
membership

00:13:17,519 --> 00:13:21,200
if this sounds familiar you might be

00:13:19,200 --> 00:13:22,000
familiar with many other projects that

00:13:21,200 --> 00:13:25,120
use a very

00:13:22,000 --> 00:13:26,639
similar uh structure this is

00:13:25,120 --> 00:13:28,480
this is very clearly inspired by the

00:13:26,639 --> 00:13:28,959
python governance project there's a lot

00:13:28,480 --> 00:13:30,079
of

00:13:28,959 --> 00:13:32,560
there's a lot of differences but it's

00:13:30,079 --> 00:13:34,240
very similar so now

00:13:32,560 --> 00:13:36,079
the way things get decided is there's a

00:13:34,240 --> 00:13:38,160
conversation and then

00:13:36,079 --> 00:13:39,680
the steering council decides and that's

00:13:38,160 --> 00:13:42,399
that

00:13:39,680 --> 00:13:43,440
and this is maybe about as true as it

00:13:42,399 --> 00:13:44,480
was about the pumpkin

00:13:43,440 --> 00:13:46,639
there's obviously a lot more

00:13:44,480 --> 00:13:47,440
complication going on but some of that

00:13:46,639 --> 00:13:49,760
complication

00:13:47,440 --> 00:13:50,720
is now very clearly made explicit which

00:13:49,760 --> 00:13:53,839
is

00:13:50,720 --> 00:13:54,639
the pearl steering council can be

00:13:53,839 --> 00:13:57,279
recalled

00:13:54,639 --> 00:13:58,560
by the core team and the core team is a

00:13:57,279 --> 00:14:00,399
group that over time can

00:13:58,560 --> 00:14:01,680
change its own membership and the

00:14:00,399 --> 00:14:04,480
steering council is also

00:14:01,680 --> 00:14:04,959
named by the core team so this group of

00:14:04,480 --> 00:14:06,560
core

00:14:04,959 --> 00:14:08,480
developers and contributors and

00:14:06,560 --> 00:14:11,839
maintainers of pearl and

00:14:08,480 --> 00:14:13,440
its related infrastructure can vote on

00:14:11,839 --> 00:14:15,040
who should be running this project who

00:14:13,440 --> 00:14:15,600
do we trust to be our representatives

00:14:15,040 --> 00:14:18,240
who will

00:14:15,600 --> 00:14:19,760
be the executives of the project and if

00:14:18,240 --> 00:14:23,199
they start going off the rails

00:14:19,760 --> 00:14:24,720
they can be removed and replaced

00:14:23,199 --> 00:14:26,639
and i did want to write talk about where

00:14:24,720 --> 00:14:28,320
the initial membership of the core team

00:14:26,639 --> 00:14:29,199
came from once upon a time there was a

00:14:28,320 --> 00:14:31,120
mailing list

00:14:29,199 --> 00:14:32,399
called five pearl and if you've been

00:14:31,120 --> 00:14:34,000
around for a long time you might have

00:14:32,399 --> 00:14:36,079
heard of it talked about occasionally

00:14:34,000 --> 00:14:39,120
but it was never really a big deal

00:14:36,079 --> 00:14:42,079
the idea was something like the pumpkins

00:14:39,120 --> 00:14:43,040
cabinet it was a mailing list no

00:14:42,079 --> 00:14:46,880
archives

00:14:43,040 --> 00:14:47,360
private most of the pumpkins who had

00:14:46,880 --> 00:14:49,680
ever

00:14:47,360 --> 00:14:51,199
released pearl were on this mailing list

00:14:49,680 --> 00:14:53,040
and a bunch of people who had just been

00:14:51,199 --> 00:14:54,000
working on the project for for many many

00:14:53,040 --> 00:14:55,920
years

00:14:54,000 --> 00:14:57,920
and what would happen is if someone said

00:14:55,920 --> 00:14:59,839
i want to propose a big change to pearl

00:14:57,920 --> 00:15:00,560
but i think that it's controversial or i

00:14:59,839 --> 00:15:02,720
think it's

00:15:00,560 --> 00:15:04,240
uh it's very complicated they would post

00:15:02,720 --> 00:15:06,000
it here first and say

00:15:04,240 --> 00:15:07,360
can you help me refine this i want some

00:15:06,000 --> 00:15:10,320
input on this

00:15:07,360 --> 00:15:10,959
and once they'd hewn off the rough edges

00:15:10,320 --> 00:15:13,519
they would

00:15:10,959 --> 00:15:14,880
publish it publicly no decisions were

00:15:13,519 --> 00:15:16,000
ever really made here unless it was a

00:15:14,880 --> 00:15:17,760
decision that was

00:15:16,000 --> 00:15:19,360
you know what this was a bad idea i'm

00:15:17,760 --> 00:15:21,360
just not going to post it

00:15:19,360 --> 00:15:23,120
this list had kind of fallen apart but

00:15:21,360 --> 00:15:25,920
its membership had for a long time

00:15:23,120 --> 00:15:27,600
really helped guide what ideas made it

00:15:25,920 --> 00:15:29,600
to pro 5 porters to be discussed

00:15:27,600 --> 00:15:31,440
in public to kind of avoid hot takes

00:15:29,600 --> 00:15:33,759
that were necessary to take down bad

00:15:31,440 --> 00:15:33,759
ideas

00:15:33,920 --> 00:15:37,360
when we formed the initial core team we

00:15:36,800 --> 00:15:39,199
took

00:15:37,360 --> 00:15:40,639
the people who had been members of five

00:15:39,199 --> 00:15:42,480
pearl and

00:15:40,639 --> 00:15:44,320
the people who had been members of a

00:15:42,480 --> 00:15:44,959
similar group called the pearl steering

00:15:44,320 --> 00:15:47,839
committee

00:15:44,959 --> 00:15:49,360
also psc but different that was created

00:15:47,839 --> 00:15:52,560
in the last year or so

00:15:49,360 --> 00:15:55,120
and we combined those lists and asked

00:15:52,560 --> 00:15:55,759
everybody on them do you want to be part

00:15:55,120 --> 00:15:58,800
of this

00:15:55,759 --> 00:16:01,519
new core team by this point

00:15:58,800 --> 00:16:03,279
we already had written pearl gov we we

00:16:01,519 --> 00:16:04,800
had a list of

00:16:03,279 --> 00:16:06,880
rules how it would operate and what it

00:16:04,800 --> 00:16:08,880
was there for and

00:16:06,880 --> 00:16:11,040
having had everyone on this combined

00:16:08,880 --> 00:16:13,759
list in total

00:16:11,040 --> 00:16:15,279
vote on accepting the document we then

00:16:13,759 --> 00:16:16,800
said great now we need a core team so

00:16:15,279 --> 00:16:19,600
that we can have an election

00:16:16,800 --> 00:16:21,120
who who is in this process can commit to

00:16:19,600 --> 00:16:24,560
actively being part of this team

00:16:21,120 --> 00:16:26,800
we got that list of about 30 people and

00:16:24,560 --> 00:16:28,480
then it was time to have an election so

00:16:26,800 --> 00:16:31,839
we had the election for the first

00:16:28,480 --> 00:16:33,839
pearl steering council uh which

00:16:31,839 --> 00:16:35,120
happened finished just in time for

00:16:33,839 --> 00:16:38,399
christmas uh

00:16:35,120 --> 00:16:39,360
christmas 2020 and the results were that

00:16:38,399 --> 00:16:41,199
neil bowers

00:16:39,360 --> 00:16:43,519
sawyer and i would sit on the steering

00:16:41,199 --> 00:16:45,360
council okay

00:16:43,519 --> 00:16:47,040
then we all the three of us agreed we

00:16:45,360 --> 00:16:48,079
would just let the new year come in we

00:16:47,040 --> 00:16:51,040
weren't going to start having meetings

00:16:48,079 --> 00:16:52,639
over christmas we had a nice holiday

00:16:51,040 --> 00:16:54,959
but once that was over we started having

00:16:52,639 --> 00:16:56,759
meetings and we wanted to keep the

00:16:54,959 --> 00:16:59,360
important business happening like

00:16:56,759 --> 00:16:59,680
v533 releases that would lead us toward

00:16:59,360 --> 00:17:02,720
the

00:16:59,680 --> 00:17:04,799
534 and getting code review done and

00:17:02,720 --> 00:17:06,079
all the little things that had to happen

00:17:04,799 --> 00:17:08,240
but also

00:17:06,079 --> 00:17:10,079
really discussing the three of us the

00:17:08,240 --> 00:17:11,120
future of pearl seven where was this

00:17:10,079 --> 00:17:13,199
going to go

00:17:11,120 --> 00:17:14,559
and in these discussions things were

00:17:13,199 --> 00:17:16,640
tense uh

00:17:14,559 --> 00:17:17,600
there were conversations that had to be

00:17:16,640 --> 00:17:19,679
nuanced

00:17:17,600 --> 00:17:21,039
that were provocative and that were

00:17:19,679 --> 00:17:22,559
complicated

00:17:21,039 --> 00:17:25,039
but there was a big difference in these

00:17:22,559 --> 00:17:27,120
conversations which is

00:17:25,039 --> 00:17:28,480
they were under control we weren't going

00:17:27,120 --> 00:17:29,760
off the rails at each other

00:17:28,480 --> 00:17:31,280
because the three of us knew each other

00:17:29,760 --> 00:17:31,679
we had worked together for many many

00:17:31,280 --> 00:17:33,919
years

00:17:31,679 --> 00:17:35,039
and we liked each other and so we had a

00:17:33,919 --> 00:17:37,919
lot of differences

00:17:35,039 --> 00:17:39,360
of opinion but when we talked about them

00:17:37,919 --> 00:17:41,840
which we did weekly in

00:17:39,360 --> 00:17:42,720
long detailed conversations we were able

00:17:41,840 --> 00:17:44,160
to see where we

00:17:42,720 --> 00:17:45,760
could or couldn't agree where we could

00:17:44,160 --> 00:17:47,760
or couldn't make headway

00:17:45,760 --> 00:17:49,600
and eventually we did come to a decision

00:17:47,760 --> 00:17:51,919
and it was not that the three of us all

00:17:49,600 --> 00:17:52,799
agreed on what was best but we agreed on

00:17:51,919 --> 00:17:55,840
what could

00:17:52,799 --> 00:17:58,000
move forward and that decision was

00:17:55,840 --> 00:17:59,840
the next release of pearl would not

00:17:58,000 --> 00:18:02,559
change the defaults we would not turn on

00:17:59,840 --> 00:18:04,720
strict at the first line of the program

00:18:02,559 --> 00:18:06,400
and we would continue to use feature

00:18:04,720 --> 00:18:08,320
bundles like you would say use

00:18:06,400 --> 00:18:09,520
v5 whatever to get the changes you

00:18:08,320 --> 00:18:12,840
wanted

00:18:09,520 --> 00:18:14,480
and we still wanted to work on

00:18:12,840 --> 00:18:16,320
eliminating deadweight

00:18:14,480 --> 00:18:18,400
cruft things that hold the language back

00:18:16,320 --> 00:18:20,240
whether they be components of syntax

00:18:18,400 --> 00:18:20,799
that get in the way of simplifying the

00:18:20,240 --> 00:18:23,440
grammar or

00:18:20,799 --> 00:18:25,280
adding new syntax or support for

00:18:23,440 --> 00:18:27,440
platforms that add complexity to the c

00:18:25,280 --> 00:18:28,640
code and make it harder to add new

00:18:27,440 --> 00:18:30,000
features to the language because you

00:18:28,640 --> 00:18:32,000
have to support

00:18:30,000 --> 00:18:33,840
hunks of code that feel like they just

00:18:32,000 --> 00:18:36,960
get in the way

00:18:33,840 --> 00:18:38,080
as for pearl 7 we the current steering

00:18:36,960 --> 00:18:39,280
council

00:18:38,080 --> 00:18:41,440
still think that pro 7 is going to

00:18:39,280 --> 00:18:42,400
happen but we're looking at this as sort

00:18:41,440 --> 00:18:44,240
of a feature

00:18:42,400 --> 00:18:45,440
boxed release we haven't written up a

00:18:44,240 --> 00:18:47,679
specification but

00:18:45,440 --> 00:18:49,360
you can imagine something like when we

00:18:47,679 --> 00:18:50,320
have achieved all of these goals that we

00:18:49,360 --> 00:18:52,320
put on the road map

00:18:50,320 --> 00:18:53,679
we are calling that pearl seven and a

00:18:52,320 --> 00:18:56,640
massive uh

00:18:53,679 --> 00:18:57,440
milestone in the future of pearl but

00:18:56,640 --> 00:18:59,520
until then

00:18:57,440 --> 00:19:01,200
we're still making annual releases and

00:18:59,520 --> 00:19:01,919
after then we'll keep making annual

00:19:01,200 --> 00:19:03,840
releases

00:19:01,919 --> 00:19:05,200
when world pearl eight to come out well

00:19:03,840 --> 00:19:06,559
it'll come out when we have a new list

00:19:05,200 --> 00:19:07,520
of features that we think define a new

00:19:06,559 --> 00:19:09,760
milestone

00:19:07,520 --> 00:19:11,360
and have had enough time to develop them

00:19:09,760 --> 00:19:12,480
probably will be more than one year

00:19:11,360 --> 00:19:13,919
after pearl 7

00:19:12,480 --> 00:19:15,520
and until that happens you'll get pearl

00:19:13,919 --> 00:19:19,600
7 2. but

00:19:15,520 --> 00:19:23,280
for now i'm thinking about pearl 536

00:19:19,600 --> 00:19:25,679
pro 536 is going to come out mid 2022

00:19:23,280 --> 00:19:26,559
the goal for me is always may 20th uh i

00:19:25,679 --> 00:19:28,080
don't know whether we're going to hit it

00:19:26,559 --> 00:19:30,400
it's a long way off

00:19:28,080 --> 00:19:33,600
but i am thinking about pro 536 a lot

00:19:30,400 --> 00:19:33,600
more than pearl 7 right now

00:19:34,480 --> 00:19:38,000
shortly after this sawyer resigned he

00:19:36,559 --> 00:19:39,039
said you know this is a decision we came

00:19:38,000 --> 00:19:40,880
to it through

00:19:39,039 --> 00:19:42,320
hard conversations and i respect the

00:19:40,880 --> 00:19:44,240
decision but it's not

00:19:42,320 --> 00:19:46,240
this is not the project i want to put my

00:19:44,240 --> 00:19:48,960
time on and i think that's

00:19:46,240 --> 00:19:50,480
a very respectable decision a lot of

00:19:48,960 --> 00:19:52,160
complicating factors about

00:19:50,480 --> 00:19:54,000
this time period that i'm going to skip

00:19:52,160 --> 00:19:56,240
over but

00:19:54,000 --> 00:19:58,160
he said he was he was done he got 534

00:19:56,240 --> 00:19:59,520
out the door and that was that

00:19:58,160 --> 00:20:01,039
and then we had a new election because

00:19:59,520 --> 00:20:02,559
we had a vacancy in the steering council

00:20:01,039 --> 00:20:05,280
and pearl gov very clearly defines what

00:20:02,559 --> 00:20:08,159
happens we have an election

00:20:05,280 --> 00:20:08,480
nick clark uh who had been the pumpkin

00:20:08,159 --> 00:20:11,919
for

00:20:08,480 --> 00:20:12,880
five eight under maintenance uh ran he

00:20:11,919 --> 00:20:14,240
was unopposed

00:20:12,880 --> 00:20:15,679
and he took the seat and he has been

00:20:14,240 --> 00:20:16,080
having meetings with me and with neil

00:20:15,679 --> 00:20:17,919
for

00:20:16,080 --> 00:20:20,159
a few months now weeks i don't know some

00:20:17,919 --> 00:20:22,559
amount of time it's still march right

00:20:20,159 --> 00:20:24,799
um he said he's not going to stand for

00:20:22,559 --> 00:20:27,200
another election

00:20:24,799 --> 00:20:28,960
so the next term election for the

00:20:27,200 --> 00:20:31,280
steering council that will

00:20:28,960 --> 00:20:34,080
sit in governance of the project until

00:20:31,280 --> 00:20:37,120
the release of 536-0

00:20:34,080 --> 00:20:38,880
is happening right now so who is going

00:20:37,120 --> 00:20:39,600
to be the pearl steering council in

00:20:38,880 --> 00:20:41,679
three weeks

00:20:39,600 --> 00:20:43,039
i can't tell you i could give you a list

00:20:41,679 --> 00:20:44,559
of people who have been nominated but i

00:20:43,039 --> 00:20:46,799
did not put that on the slide

00:20:44,559 --> 00:20:48,240
so you can have a look at the the

00:20:46,799 --> 00:20:49,440
mailing list and see what's happening

00:20:48,240 --> 00:20:52,159
if like i said if you want to read the

00:20:49,440 --> 00:20:55,200
whole uh document it's pearl gov

00:20:52,159 --> 00:20:56,480
and it's in the pod okay

00:20:55,200 --> 00:20:57,760
i will take questions about this at the

00:20:56,480 --> 00:20:59,039
end if i figure out how to take

00:20:57,760 --> 00:21:00,840
questions but for now i'm going to

00:20:59,039 --> 00:21:02,960
soldier on so that i don't run out of

00:21:00,840 --> 00:21:05,280
time switch gears

00:21:02,960 --> 00:21:06,400
and talk less about the governance and

00:21:05,280 --> 00:21:08,799
or arching

00:21:06,400 --> 00:21:09,840
organization of the project let's talk

00:21:08,799 --> 00:21:12,880
about the code

00:21:09,840 --> 00:21:14,840
uh which is you know hopefully the most

00:21:12,880 --> 00:21:18,480
exciting part of this

00:21:14,840 --> 00:21:20,320
um i mentioned that

00:21:18,480 --> 00:21:22,320
534. i mentioned in the description for

00:21:20,320 --> 00:21:25,520
this talk the 534

00:21:22,320 --> 00:21:26,400
is not the most feature-packed release

00:21:25,520 --> 00:21:28,400
we have ever done

00:21:26,400 --> 00:21:30,080
and that's okay we've put some stuff in

00:21:28,400 --> 00:21:31,919
it and we're establishing a new footing

00:21:30,080 --> 00:21:33,840
i'm looking forward to 536 having lots

00:21:31,919 --> 00:21:36,159
of good changes in it but for 534

00:21:33,840 --> 00:21:37,840
there are reasons to look at using it

00:21:36,159 --> 00:21:39,039
the simplest one being

00:21:37,840 --> 00:21:40,799
it's the next release of pearl and you

00:21:39,039 --> 00:21:41,760
should keep keep on that upgrade

00:21:40,799 --> 00:21:43,760
treadmill

00:21:41,760 --> 00:21:45,440
um okay so you're writing some code in

00:21:43,760 --> 00:21:46,799
pearl and you have used eval because

00:21:45,440 --> 00:21:47,440
there might be an error and you start

00:21:46,799 --> 00:21:50,960
streaming

00:21:47,440 --> 00:21:54,080
some file to a socket as one does and

00:21:50,960 --> 00:21:55,919
because eval is weird in perl you

00:21:54,080 --> 00:21:57,520
stick a one at the end so you can test

00:21:55,919 --> 00:21:58,799
whether or not you get a true value out

00:21:57,520 --> 00:22:01,039
of eval

00:21:58,799 --> 00:22:01,919
and then if it wasn't okay then you get

00:22:01,039 --> 00:22:03,600
the error

00:22:01,919 --> 00:22:04,960
and you stick it into standard error

00:22:03,600 --> 00:22:06,240
saying oh you're streaming this file

00:22:04,960 --> 00:22:08,240
failed and here is the error

00:22:06,240 --> 00:22:10,320
and then you return some sentinel value

00:22:08,240 --> 00:22:13,840
saying this whole subroutine

00:22:10,320 --> 00:22:15,360
was a failure and that's that

00:22:13,840 --> 00:22:17,600
this is totally normal pearl there's

00:22:15,360 --> 00:22:19,200
nothing wrong with it except that

00:22:17,600 --> 00:22:21,039
there's a lot of shibboleth in here

00:22:19,200 --> 00:22:22,559
there's a lot of like why did you have

00:22:21,039 --> 00:22:24,799
to put that one there ah

00:22:22,559 --> 00:22:26,159
because eval's not really try eval is

00:22:24,799 --> 00:22:28,880
this other thing and

00:22:26,159 --> 00:22:29,919
why do you have to copy out dollar at

00:22:28,880 --> 00:22:31,360
sign from here well

00:22:29,919 --> 00:22:33,520
because dollar out sign is this global

00:22:31,360 --> 00:22:34,799
variable and if you do some other

00:22:33,520 --> 00:22:35,120
subroutine that changes it you're going

00:22:34,799 --> 00:22:36,400
to

00:22:35,120 --> 00:22:37,679
screw over the current exception you've

00:22:36,400 --> 00:22:38,640
captured it's just a lot of stuff to

00:22:37,679 --> 00:22:41,120
think about

00:22:38,640 --> 00:22:42,159
other languages give you other tools for

00:22:41,120 --> 00:22:43,200
doing this

00:22:42,159 --> 00:22:45,280
right in the end your separate team

00:22:43,200 --> 00:22:48,400
returns zero like

00:22:45,280 --> 00:22:51,039
try all right and we have had try in

00:22:48,400 --> 00:22:53,840
pearl libraries in many different ways

00:22:51,039 --> 00:22:55,360
it might work like this i want to try

00:22:53,840 --> 00:22:56,240
streaming this to a socket and if it

00:22:55,360 --> 00:22:59,440
works return

00:22:56,240 --> 00:23:00,159
0 out of my subroutine and if it didn't

00:22:59,440 --> 00:23:02,080
work

00:23:00,159 --> 00:23:03,919
catch the error into a variable that

00:23:02,080 --> 00:23:07,760
i'll call dollar error

00:23:03,919 --> 00:23:08,559
and then log the error and return minus

00:23:07,760 --> 00:23:10,880
one right you

00:23:08,559 --> 00:23:12,320
don't need to have this weird eval

00:23:10,880 --> 00:23:15,440
evaluates to one

00:23:12,320 --> 00:23:16,080
uh you don't need to copy dollar out of

00:23:15,440 --> 00:23:18,720
anything

00:23:16,080 --> 00:23:20,480
and i know this is petty but the change

00:23:18,720 --> 00:23:22,000
that makes me maybe most excited is you

00:23:20,480 --> 00:23:24,400
don't need to put a semicolon

00:23:22,000 --> 00:23:25,760
at the end of that brace it's a proper

00:23:24,400 --> 00:23:29,200
structure it's not

00:23:25,760 --> 00:23:32,080
uh some weird thing

00:23:29,200 --> 00:23:32,080
like a do block

00:23:32,400 --> 00:23:35,520
this code is now available in five

00:23:34,960 --> 00:23:37,039
thirty four

00:23:35,520 --> 00:23:38,559
zero but there's two important things to

00:23:37,039 --> 00:23:39,760
note about it actually i'll say three

00:23:38,559 --> 00:23:40,320
the first important thing to note about

00:23:39,760 --> 00:23:42,400
it is

00:23:40,320 --> 00:23:44,559
that means this code is going to be in

00:23:42,400 --> 00:23:46,400
perl in the future and i will be

00:23:44,559 --> 00:23:47,840
expecting everybody who writes pro with

00:23:46,400 --> 00:23:49,600
me to use it

00:23:47,840 --> 00:23:51,919
this is how we will do error handling

00:23:49,600 --> 00:23:53,200
it's much more compact it's much simpler

00:23:51,919 --> 00:23:55,120
people who come to pearl from other

00:23:53,200 --> 00:23:56,720
languages will feel more at home with

00:23:55,120 --> 00:23:58,240
this they will with that weird eval

00:23:56,720 --> 00:23:59,520
thing because it's like what everybody

00:23:58,240 --> 00:24:01,600
else does

00:23:59,520 --> 00:24:02,960
the other important things to note are

00:24:01,600 --> 00:24:05,200
this is experimental

00:24:02,960 --> 00:24:06,240
you have to opt into the feature and

00:24:05,200 --> 00:24:08,400
then you have to

00:24:06,240 --> 00:24:10,000
either accept the warnings you get or

00:24:08,400 --> 00:24:11,120
opt out of them because those warnings

00:24:10,000 --> 00:24:12,559
are telling you

00:24:11,120 --> 00:24:14,240
this feature might change in a bunch of

00:24:12,559 --> 00:24:14,720
ways so if you rely on it now and it

00:24:14,240 --> 00:24:16,159
changes

00:24:14,720 --> 00:24:18,320
we're still figuring it out like you

00:24:16,159 --> 00:24:19,600
might get screwed over

00:24:18,320 --> 00:24:21,600
speaking of which the other thing to

00:24:19,600 --> 00:24:22,559
note is this feature is currently buggy

00:24:21,600 --> 00:24:25,760
it does not work

00:24:22,559 --> 00:24:27,200
quite as designed now i'm hoping we can

00:24:25,760 --> 00:24:30,320
ship the fixes to it

00:24:27,200 --> 00:24:31,520
in 534.1 but either way it's an

00:24:30,320 --> 00:24:32,720
experimental feature right don't you

00:24:31,520 --> 00:24:34,240
don't want to use this in your work code

00:24:32,720 --> 00:24:35,679
yet use this in your play code while

00:24:34,240 --> 00:24:36,159
you're getting ready to be excited about

00:24:35,679 --> 00:24:39,679
using

00:24:36,159 --> 00:24:41,360
work that's feature number one

00:24:39,679 --> 00:24:43,120
here's a smaller one but one that i'm

00:24:41,360 --> 00:24:44,559
pleased with

00:24:43,120 --> 00:24:46,000
this is some pearl code that i probably

00:24:44,559 --> 00:24:47,360
should have syntax highlighted to make

00:24:46,000 --> 00:24:50,080
it look a little nicer

00:24:47,360 --> 00:24:50,960
uh but i've got some three examples of

00:24:50,080 --> 00:24:54,320
ways in which

00:24:50,960 --> 00:24:57,039
we use braces inside of strings

00:24:54,320 --> 00:24:57,760
in pearl first one is a named character

00:24:57,039 --> 00:24:59,679
i want the

00:24:57,760 --> 00:25:01,039
character out of the unicode character

00:24:59,679 --> 00:25:04,799
repertoire called

00:25:01,039 --> 00:25:05,440
ninja second tour for characters or code

00:25:04,799 --> 00:25:07,919
points

00:25:05,440 --> 00:25:08,799
uh with their hex values and the third

00:25:07,919 --> 00:25:10,960
one is for

00:25:08,799 --> 00:25:12,320
quantifiers on that exclamation point in

00:25:10,960 --> 00:25:14,000
our regex

00:25:12,320 --> 00:25:15,440
again totally normal purl code i would

00:25:14,000 --> 00:25:17,360
write this kind of stuff every day i do

00:25:15,440 --> 00:25:22,159
a lot of coding about ninjas

00:25:17,360 --> 00:25:23,840
in 534 you can write this code like this

00:25:22,159 --> 00:25:25,919
this is if you haven't noticed the

00:25:23,840 --> 00:25:29,279
difference i've stuck spaces

00:25:25,919 --> 00:25:31,840
in my braces it's not

00:25:29,279 --> 00:25:32,880
a life-changing thing the first time you

00:25:31,840 --> 00:25:35,600
do it

00:25:32,880 --> 00:25:36,960
but i suggest this practice take some

00:25:35,600 --> 00:25:39,200
piece of code that you have

00:25:36,960 --> 00:25:40,000
and go through it and put these spaces

00:25:39,200 --> 00:25:41,919
in

00:25:40,000 --> 00:25:43,520
just like give your code a little room

00:25:41,919 --> 00:25:45,520
to breathe and it actually becomes

00:25:43,520 --> 00:25:48,000
significantly more readable

00:25:45,520 --> 00:25:49,520
it's not a massive change but it's a

00:25:48,000 --> 00:25:50,720
nice little change in your ability to

00:25:49,520 --> 00:25:53,840
make the code readable

00:25:50,720 --> 00:25:56,799
if you could run on 534 so think about

00:25:53,840 --> 00:25:59,200
upgrading when you can

00:25:56,799 --> 00:26:00,400
ah here's another nice one for this is

00:25:59,200 --> 00:26:02,159
not about readability

00:26:00,400 --> 00:26:04,080
this is about foot gunning this is about

00:26:02,159 --> 00:26:06,880
not making a stupid mistake that pearl

00:26:04,080 --> 00:26:06,880
can help you avoid

00:26:06,960 --> 00:26:10,000
i don't know how many people use chmod i

00:26:09,120 --> 00:26:11,440
feel like i used to

00:26:10,000 --> 00:26:13,520
write shmod in my code all the time and

00:26:11,440 --> 00:26:15,360
now i do it less but when i do

00:26:13,520 --> 00:26:17,360
it looks like this i mod some file and

00:26:15,360 --> 00:26:19,600
then i make some other file have a

00:26:17,360 --> 00:26:20,400
executable bit and then i want to say oh

00:26:19,600 --> 00:26:24,480
and this file

00:26:20,400 --> 00:26:26,320
is set uid at which point i've screwed

00:26:24,480 --> 00:26:27,840
myself over because i kept all my code

00:26:26,320 --> 00:26:28,960
lining up nicely and that's how i know

00:26:27,840 --> 00:26:31,200
my code is correct right

00:26:28,960 --> 00:26:32,480
all the vertical lines look straight the

00:26:31,200 --> 00:26:35,760
problem is

00:26:32,480 --> 00:26:38,480
the first two here are octal numbers and

00:26:35,760 --> 00:26:39,039
the third one is a decimal number so in

00:26:38,480 --> 00:26:42,159
perl

00:26:39,039 --> 00:26:45,279
one seven five five and zero one seven

00:26:42,159 --> 00:26:47,279
five five are very different

00:26:45,279 --> 00:26:49,520
and chmod doesn't know that you've

00:26:47,279 --> 00:26:51,679
passed it an octal or decimal number

00:26:49,520 --> 00:26:53,600
it just knows you've passed it a number

00:26:51,679 --> 00:26:54,159
and will then do whatever nonsensical

00:26:53,600 --> 00:26:55,600
thing

00:26:54,159 --> 00:26:57,440
it thinks this means i didn't look up

00:26:55,600 --> 00:26:59,679
what it will do but i

00:26:57,440 --> 00:27:01,520
can guarantee you it has not said it uid

00:26:59,679 --> 00:27:05,279
and executable

00:27:01,520 --> 00:27:07,919
in perl 534 you can now write this

00:27:05,279 --> 00:27:09,760
so just like we have ox for hex numbers

00:27:07,919 --> 00:27:12,960
and if you didn't know we have ob

00:27:09,760 --> 00:27:16,080
for binary numbers you can write zero

00:27:12,960 --> 00:27:18,480
o i should say oh oh zero o

00:27:16,080 --> 00:27:20,480
we finally brought oo to pearl you can

00:27:18,480 --> 00:27:23,200
write zero o and a number

00:27:20,480 --> 00:27:24,480
to make extremely clear it is an octal

00:27:23,200 --> 00:27:26,880
number

00:27:24,480 --> 00:27:28,399
and when you do this you can look at

00:27:26,880 --> 00:27:29,039
this code and if you wanted to add

00:27:28,399 --> 00:27:31,520
another

00:27:29,039 --> 00:27:32,559
line to this row and you just did the

00:27:31,520 --> 00:27:34,559
stupid thing that i do

00:27:32,559 --> 00:27:37,039
just copy paste it and edit you would

00:27:34,559 --> 00:27:38,559
bring along that octal indicator

00:27:37,039 --> 00:27:41,360
the other thing this makes possible is

00:27:38,559 --> 00:27:43,919
saying no feature octal zero

00:27:41,360 --> 00:27:45,919
and what this would say is if you see me

00:27:43,919 --> 00:27:48,399
using a leading zero to mean octal

00:27:45,919 --> 00:27:49,919
make that a compile error now one

00:27:48,399 --> 00:27:51,440
complicating factor here is that this

00:27:49,919 --> 00:27:53,520
feature doesn't exist yet

00:27:51,440 --> 00:27:56,240
but now it can because we have an

00:27:53,520 --> 00:27:57,360
alternative to let people move to using

00:27:56,240 --> 00:27:59,760
i'm looking forward to making this

00:27:57,360 --> 00:27:59,760
possible

00:28:00,480 --> 00:28:05,679
as for other things you can say no to

00:28:02,799 --> 00:28:08,080
you can say no to multi-dimensional

00:28:05,679 --> 00:28:09,600
sawyer and i had a number of uh i won't

00:28:08,080 --> 00:28:11,279
say arguments but disagreements about

00:28:09,600 --> 00:28:12,159
whether this was about multi-dimensional

00:28:11,279 --> 00:28:14,640
arrays

00:28:12,159 --> 00:28:15,600
or multi-dimensional hashes and in

00:28:14,640 --> 00:28:18,799
reality it's

00:28:15,600 --> 00:28:20,240
kind of both i'll show you why imagine

00:28:18,799 --> 00:28:21,200
this code you start iterating through a

00:28:20,240 --> 00:28:24,559
list of numbers

00:28:21,200 --> 00:28:27,600
and then another list of numbers and now

00:28:24,559 --> 00:28:29,120
you assign the square root of the first

00:28:27,600 --> 00:28:29,520
number raised to the power of the second

00:28:29,120 --> 00:28:33,279
number

00:28:29,520 --> 00:28:34,799
into this hash and uh then you look up

00:28:33,279 --> 00:28:37,120
one later

00:28:34,799 --> 00:28:39,120
and you get this number so you've made

00:28:37,120 --> 00:28:41,200
it build a hash of 100 entries

00:28:39,120 --> 00:28:43,120
and then you end up with this ability to

00:28:41,200 --> 00:28:45,840
look them up and the question is this

00:28:43,120 --> 00:28:46,720
what is happening inside this hash

00:28:45,840 --> 00:28:49,760
subscript

00:28:46,720 --> 00:28:50,399
because we put in a list of multiple

00:28:49,760 --> 00:28:52,880
values

00:28:50,399 --> 00:28:53,760
and as everybody knows the index to a

00:28:52,880 --> 00:28:56,399
hash is

00:28:53,760 --> 00:28:56,880
one string it's not like a list of

00:28:56,399 --> 00:28:58,720
things

00:28:56,880 --> 00:29:00,080
there hasn't been this mysterious

00:28:58,720 --> 00:29:02,880
ability to have

00:29:00,080 --> 00:29:05,440
actual multi-dimensional constructs

00:29:02,880 --> 00:29:08,640
inside of hashes

00:29:05,440 --> 00:29:12,000
what actually happens is

00:29:08,640 --> 00:29:15,200
when you write this right you say hash

00:29:12,000 --> 00:29:18,559
entry dollar x comma dollar y

00:29:15,200 --> 00:29:20,159
perl under the hood does this it builds

00:29:18,559 --> 00:29:23,520
a new key

00:29:20,159 --> 00:29:25,600
for a single string key where it joins

00:29:23,520 --> 00:29:27,760
all of the elements of the list using

00:29:25,600 --> 00:29:31,840
the variable and i am not kidding

00:29:27,760 --> 00:29:32,799
dollar semicolon now a dollar semicolon

00:29:31,840 --> 00:29:34,799
contains some

00:29:32,799 --> 00:29:36,159
very low value code point that you're

00:29:34,799 --> 00:29:37,440
not going to use in your normal strings

00:29:36,159 --> 00:29:38,799
and you can change it if you need to

00:29:37,440 --> 00:29:40,880
because you can change all these stupid

00:29:38,799 --> 00:29:44,080
variables in perl

00:29:40,880 --> 00:29:46,000
but generally i mean first of all

00:29:44,080 --> 00:29:47,679
take a digression having a variable

00:29:46,000 --> 00:29:50,080
called dollar semicolon

00:29:47,679 --> 00:29:51,679
is ridiculous because now your code has

00:29:50,080 --> 00:29:53,360
a semicolon in the middle of it that

00:29:51,679 --> 00:29:54,799
doesn't end the statement and i

00:29:53,360 --> 00:29:56,880
can't deal with this it's like if we had

00:29:54,799 --> 00:30:00,320
a variable called dollar

00:29:56,880 --> 00:30:02,559
comma you can look that up later

00:30:00,320 --> 00:30:03,919
um people use this feature by accident

00:30:02,559 --> 00:30:06,960
right you accidentally put

00:30:03,919 --> 00:30:10,559
an expression that becomes a list inside

00:30:06,960 --> 00:30:13,679
of uh inside of these squiggly braces

00:30:10,559 --> 00:30:16,960
i use this feature on purpose i admit it

00:30:13,679 --> 00:30:18,799
uh i like it but i get it it's a it's a

00:30:16,960 --> 00:30:20,559
thing that screws most people up

00:30:18,799 --> 00:30:22,080
and i'm sure that to some extent i'm

00:30:20,559 --> 00:30:23,600
using it because i feel

00:30:22,080 --> 00:30:25,200
a little chuffed that i know this little

00:30:23,600 --> 00:30:26,720
weird room inside of pearl that i can

00:30:25,200 --> 00:30:29,039
use to get things done

00:30:26,720 --> 00:30:29,919
i could just write the join statement

00:30:29,039 --> 00:30:31,600
myself

00:30:29,919 --> 00:30:33,200
and the code would be just as good as it

00:30:31,600 --> 00:30:35,520
is now and people who came

00:30:33,200 --> 00:30:36,720
to look at my code wouldn't think i was

00:30:35,520 --> 00:30:39,760
a crazy person

00:30:36,720 --> 00:30:39,760
at least not for this reason

00:30:41,039 --> 00:30:44,159
i have said that i would try to stop

00:30:43,039 --> 00:30:45,760
using this feature

00:30:44,159 --> 00:30:47,919
so that i can support the idea of

00:30:45,760 --> 00:30:50,399
getting rid of it or at least

00:30:47,919 --> 00:30:52,399
making it illegal if you would like to

00:30:50,399 --> 00:30:55,520
make it illegal in your own code

00:30:52,399 --> 00:30:58,480
now in 534 you can start by saying no

00:30:55,520 --> 00:31:00,399
feature multi-dimensional and then when

00:30:58,480 --> 00:31:03,360
you write this piece of code

00:31:00,399 --> 00:31:05,279
instead of giving you 15 which is square

00:31:03,360 --> 00:31:07,600
root of three raised to the fifth power

00:31:05,279 --> 00:31:09,120
you'll get a compile time error that

00:31:07,600 --> 00:31:12,799
multi-dimensional hash lookup

00:31:09,120 --> 00:31:14,159
is disabled one more thing i guess

00:31:12,799 --> 00:31:16,399
what we're getting a lot of this out of

00:31:14,159 --> 00:31:17,279
this conversation is that 534 is giving

00:31:16,399 --> 00:31:19,440
you

00:31:17,279 --> 00:31:20,559
a lot of ability to turn things off

00:31:19,440 --> 00:31:23,679
rather than to add

00:31:20,559 --> 00:31:27,200
new behavior uh like no bare word

00:31:23,679 --> 00:31:30,480
file handles this piece of code

00:31:27,200 --> 00:31:31,760
and this piece of code uh basically do

00:31:30,480 --> 00:31:35,360
the same thing

00:31:31,760 --> 00:31:36,240
right they open a writing a clobbering

00:31:35,360 --> 00:31:39,679
file handle

00:31:36,240 --> 00:31:41,360
onto devnull and they either put it in a

00:31:39,679 --> 00:31:44,159
global variable called bucket

00:31:41,360 --> 00:31:44,840
or they put it in a lexical variable

00:31:44,159 --> 00:31:48,240
called

00:31:44,840 --> 00:31:51,120
fh if you try doing

00:31:48,240 --> 00:31:54,159
this first one under no bare word file

00:31:51,120 --> 00:31:55,519
handles you will get an exception

00:31:54,159 --> 00:31:56,960
there's a bunch of reasons to do this i

00:31:55,519 --> 00:31:58,559
don't know if at this day and age it's

00:31:56,960 --> 00:32:00,159
still worth arguing that you shouldn't

00:31:58,559 --> 00:32:02,000
do this or if everyone accepts that bare

00:32:00,159 --> 00:32:04,480
word file handles are

00:32:02,000 --> 00:32:05,519
a bad idea that we can put behind us

00:32:04,480 --> 00:32:07,120
they're global

00:32:05,519 --> 00:32:08,399
because they're global they cannot be

00:32:07,120 --> 00:32:09,120
automatically closed and garbage

00:32:08,399 --> 00:32:11,120
collected by

00:32:09,120 --> 00:32:12,480
through the use of lexical scope they

00:32:11,120 --> 00:32:14,000
don't have sigils they don't look like

00:32:12,480 --> 00:32:16,720
normal variables

00:32:14,000 --> 00:32:17,039
they're just weird um they're fine i

00:32:16,720 --> 00:32:19,760
mean

00:32:17,039 --> 00:32:20,240
they were okay but we've had the ability

00:32:19,760 --> 00:32:22,799
to

00:32:20,240 --> 00:32:24,720
create file handles into empty lexicals

00:32:22,799 --> 00:32:26,559
for a long long time and

00:32:24,720 --> 00:32:28,000
for at least 10 years i think

00:32:26,559 --> 00:32:29,600
everybody's agreed that's what we

00:32:28,000 --> 00:32:31,440
should do and now you can prevent

00:32:29,600 --> 00:32:33,679
yourself from doing the thing you

00:32:31,440 --> 00:32:34,880
shouldn't do

00:32:33,679 --> 00:32:37,360
uh now i would like to talk about some

00:32:34,880 --> 00:32:39,760
weird little stuff

00:32:37,360 --> 00:32:40,880
this is often my favorite thing to talk

00:32:39,760 --> 00:32:42,240
about when i talk about new versions of

00:32:40,880 --> 00:32:43,679
pearl the weird little changes that are

00:32:42,240 --> 00:32:44,559
going to fly under your radar for

00:32:43,679 --> 00:32:48,320
example

00:32:44,559 --> 00:32:51,360
histida min length um histamine length

00:32:48,320 --> 00:32:52,720
is a new option in the pearl debugger so

00:32:51,360 --> 00:32:54,080
like a lot of captive

00:32:52,720 --> 00:32:55,919
terminal programs by the way if you

00:32:54,080 --> 00:32:57,039
don't use the debugger you should you

00:32:55,919 --> 00:32:58,399
shouldn't use it often

00:32:57,039 --> 00:33:00,000
but you should use it enough to know how

00:32:58,399 --> 00:33:00,880
to use it because it's actually quite

00:33:00,000 --> 00:33:03,679
useful

00:33:00,880 --> 00:33:05,279
even though it's terrible and weird like

00:33:03,679 --> 00:33:06,880
a lot of captive channel programs that a

00:33:05,279 --> 00:33:08,640
bugger has a command history right you

00:33:06,880 --> 00:33:10,320
can hit up up up and find previous

00:33:08,640 --> 00:33:13,039
commands you've run in this session

00:33:10,320 --> 00:33:13,440
but until we added this option it would

00:33:13,039 --> 00:33:16,320
never

00:33:13,440 --> 00:33:18,240
remember a single character command only

00:33:16,320 --> 00:33:20,559
only had a history of commands at least

00:33:18,240 --> 00:33:22,320
two characters long and this has made it

00:33:20,559 --> 00:33:25,760
possible to configure it to have

00:33:22,320 --> 00:33:28,080
even one character uh history items

00:33:25,760 --> 00:33:29,840
the most notable thing about this

00:33:28,080 --> 00:33:31,919
feature is that it is probably my

00:33:29,840 --> 00:33:33,840
largest code contribution to pearl

00:33:31,919 --> 00:33:35,440
in several years and i made a change to

00:33:33,840 --> 00:33:37,600
the debugger and it worked

00:33:35,440 --> 00:33:39,679
uh i just i wanted to brag about that

00:33:37,600 --> 00:33:42,399
because it's it's pretty tough

00:33:39,679 --> 00:33:44,000
um another change we made is this we

00:33:42,399 --> 00:33:45,519
documented this correctly for many many

00:33:44,000 --> 00:33:46,720
years the documentation on this had been

00:33:45,519 --> 00:33:49,760
wrong

00:33:46,720 --> 00:33:52,880
there is a hash and the hash

00:33:49,760 --> 00:33:53,760
has no real name and the keys are

00:33:52,880 --> 00:33:56,000
underscore

00:33:53,760 --> 00:33:57,279
left angle bracket and then a file name

00:33:56,000 --> 00:33:57,600
any old file name that you might have

00:33:57,279 --> 00:33:59,679
read

00:33:57,600 --> 00:34:01,360
during your program it's part of the

00:33:59,679 --> 00:34:02,159
debugger i encourage you to go look it

00:34:01,360 --> 00:34:05,360
up afterwards

00:34:02,159 --> 00:34:07,440
it's crazy it's wild okay

00:34:05,360 --> 00:34:09,200
um also when we were talking about

00:34:07,440 --> 00:34:10,320
building pearl seven uh one of the big

00:34:09,200 --> 00:34:12,240
topics of pearl 7 was

00:34:10,320 --> 00:34:13,679
what if we turned on strict by default

00:34:12,240 --> 00:34:16,879
what if when you

00:34:13,679 --> 00:34:17,919
ran pearl it would just have strict

00:34:16,879 --> 00:34:19,839
turned on

00:34:17,919 --> 00:34:21,839
and to figure out what life would be

00:34:19,839 --> 00:34:24,079
like it was made possible

00:34:21,839 --> 00:34:25,119
to do this so when you could when you

00:34:24,079 --> 00:34:27,440
build perl you run

00:34:25,119 --> 00:34:28,480
dollar slash configure and build your

00:34:27,440 --> 00:34:30,000
new version of perl out of the git

00:34:28,480 --> 00:34:31,760
repository

00:34:30,000 --> 00:34:33,919
you can now pass an option called use

00:34:31,760 --> 00:34:37,359
default string which will compile a

00:34:33,919 --> 00:34:40,800
pearl that is stripped out of the box

00:34:37,359 --> 00:34:41,520
i don't know what the practical uses of

00:34:40,800 --> 00:34:44,320
this are

00:34:41,520 --> 00:34:44,720
outside of testing all your code to make

00:34:44,320 --> 00:34:46,960
sure

00:34:44,720 --> 00:34:48,720
strict is always on but that is not

00:34:46,960 --> 00:34:50,240
nothing that is a way to easily test

00:34:48,720 --> 00:34:51,040
your code base with all the stuff turned

00:34:50,240 --> 00:34:52,480
on

00:34:51,040 --> 00:34:54,159
and i realize now talking about this i

00:34:52,480 --> 00:34:55,760
should have made a slide not about

00:34:54,159 --> 00:34:56,800
something new but about something very

00:34:55,760 --> 00:34:59,040
old

00:34:56,800 --> 00:35:00,160
there is a feature in perl called site

00:34:59,040 --> 00:35:02,960
customize

00:35:00,160 --> 00:35:04,160
which allows you to make changes to the

00:35:02,960 --> 00:35:07,040
behavior

00:35:04,160 --> 00:35:07,520
to run code when your pearl starts up

00:35:07,040 --> 00:35:09,119
and

00:35:07,520 --> 00:35:11,119
that's another means to accomplish this

00:35:09,119 --> 00:35:12,960
and many other changes for what if this

00:35:11,119 --> 00:35:15,040
what if this change happened universally

00:35:12,960 --> 00:35:18,000
inside of pearl

00:35:15,040 --> 00:35:19,760
another nice weird little change in

00:35:18,000 --> 00:35:21,680
pearl 534 is that we have improved our

00:35:19,760 --> 00:35:24,320
support for plan nine

00:35:21,680 --> 00:35:25,280
uh plan nine from bell labs apparently

00:35:24,320 --> 00:35:28,839
is back

00:35:25,280 --> 00:35:30,160
as is nine front a uh revised version of

00:35:28,839 --> 00:35:32,240
this

00:35:30,160 --> 00:35:33,680
i think this is a trade-off because we

00:35:32,240 --> 00:35:35,200
improved our support for plan nine

00:35:33,680 --> 00:35:37,280
presumably making it more difficult to

00:35:35,200 --> 00:35:40,079
jettison support for plan nine

00:35:37,280 --> 00:35:41,839
but in in return as part of pearl's one

00:35:40,079 --> 00:35:44,800
in one out policy

00:35:41,839 --> 00:35:46,160
code for symbian has been removed if you

00:35:44,800 --> 00:35:47,760
don't know symbian

00:35:46,160 --> 00:35:50,960
symbian is what you might have run on

00:35:47,760 --> 00:35:53,520
your nokia phone in like 2006

00:35:50,960 --> 00:35:55,119
right it's not the cool run debian uh

00:35:53,520 --> 00:35:56,400
and on your n800 i'm pretty sure those

00:35:55,119 --> 00:35:58,160
are those are quite distinct

00:35:56,400 --> 00:35:59,680
um it was an operating system for mobile

00:35:58,160 --> 00:36:00,880
devices that's neat you can read about

00:35:59,680 --> 00:36:04,320
it on the wikipedia

00:36:00,880 --> 00:36:06,400
uh we added perl support to this uh

00:36:04,320 --> 00:36:08,560
because it would be cool and many many

00:36:06,400 --> 00:36:10,079
many years later we removed it because

00:36:08,560 --> 00:36:12,880
it wasn't used the platform has been

00:36:10,079 --> 00:36:14,480
dead for nine years

00:36:12,880 --> 00:36:16,400
documentation fixes are always great we

00:36:14,480 --> 00:36:19,119
fixed documentation on pac

00:36:16,400 --> 00:36:21,200
unfortunately i think still no one can

00:36:19,119 --> 00:36:24,400
actually use pac but the documentation

00:36:21,200 --> 00:36:24,400
is no longer the problem

00:36:24,960 --> 00:36:30,079
changes to windows 32 this is a nice one

00:36:27,440 --> 00:36:33,440
uh on windows 32

00:36:30,079 --> 00:36:34,240
if you had a string that only contained

00:36:33,440 --> 00:36:36,320
a double quote

00:36:34,240 --> 00:36:37,280
and you checked whether it existed using

00:36:36,320 --> 00:36:40,720
the dash e

00:36:37,280 --> 00:36:44,800
operator it always returned true

00:36:40,720 --> 00:36:47,520
on windows uh it it no longer does

00:36:44,800 --> 00:36:49,280
so i i'm sure there are other weird

00:36:47,520 --> 00:36:50,640
problems that continue to exist windows

00:36:49,280 --> 00:36:52,720
is very different from

00:36:50,640 --> 00:36:53,920
almost all the other unit unix-like

00:36:52,720 --> 00:36:56,160
operating systems that we support

00:36:53,920 --> 00:36:57,920
although windows is getting

00:36:56,160 --> 00:37:00,240
windows is giving a lot more than we are

00:36:57,920 --> 00:37:01,920
it is providing us a lot more ability to

00:37:00,240 --> 00:37:03,119
work correctly with windows than we are

00:37:01,920 --> 00:37:06,480
putting an effort to work with it

00:37:03,119 --> 00:37:08,240
although we keep putting in effort

00:37:06,480 --> 00:37:09,839
the lexical topic oh this is the one i

00:37:08,240 --> 00:37:11,280
wish i put the builds on a little better

00:37:09,839 --> 00:37:12,880
but

00:37:11,280 --> 00:37:14,400
in 510 we added this thing called the

00:37:12,880 --> 00:37:16,560
lexical topic where instead of having

00:37:14,400 --> 00:37:18,400
dollar underscore always be global

00:37:16,560 --> 00:37:20,160
you could say my dollar underscore and

00:37:18,400 --> 00:37:22,320
now in that lexical scope you would have

00:37:20,160 --> 00:37:25,680
a lexical topic and

00:37:22,320 --> 00:37:28,480
things that acted on the topic right

00:37:25,680 --> 00:37:30,560
like lc with no argument would work on

00:37:28,480 --> 00:37:33,760
this lexical one and not the global one

00:37:30,560 --> 00:37:35,359
the problem was nobody expected

00:37:33,760 --> 00:37:36,960
to really have all the implications that

00:37:35,359 --> 00:37:39,359
it did it it

00:37:36,960 --> 00:37:40,560
seemed great at small scale and once you

00:37:39,359 --> 00:37:42,720
built your whole program using that

00:37:40,560 --> 00:37:45,760
things got really weird

00:37:42,720 --> 00:37:49,200
and so we removed support for 524

00:37:45,760 --> 00:37:50,240
and for deluxe topic in 524 the problem

00:37:49,200 --> 00:37:52,720
was

00:37:50,240 --> 00:37:53,520
if you had said use utf-8 meaning my

00:37:52,720 --> 00:37:55,440
program has been

00:37:53,520 --> 00:37:56,880
written to a file encoded in utf-8

00:37:55,440 --> 00:37:58,320
encoding and you should decode it before

00:37:56,880 --> 00:38:00,400
interpreting it

00:37:58,320 --> 00:38:02,480
dollar underscore still worked it did

00:38:00,400 --> 00:38:05,520
not become a compile-time error

00:38:02,480 --> 00:38:07,680
i it's it's just amazing i this bug kind

00:38:05,520 --> 00:38:10,160
of had me speechless

00:38:07,680 --> 00:38:11,680
now uh it dies both ways which is what

00:38:10,160 --> 00:38:13,359
it should have done the whole time

00:38:11,680 --> 00:38:15,520
this slide i don't know why it's still

00:38:13,359 --> 00:38:16,640
here but uh i think i was thinking about

00:38:15,520 --> 00:38:19,359
other things that i put in here and the

00:38:16,640 --> 00:38:21,440
answer was i was done

00:38:19,359 --> 00:38:23,760
so that's all the stuff i wanted to talk

00:38:21,440 --> 00:38:26,240
about with 534

00:38:23,760 --> 00:38:27,520
like i said it's not brimming with crazy

00:38:26,240 --> 00:38:28,480
new features but there's some good stuff

00:38:27,520 --> 00:38:30,160
and

00:38:28,480 --> 00:38:31,760
i should also point out that i usually

00:38:30,160 --> 00:38:34,480
talk about the bug fixes that are

00:38:31,760 --> 00:38:35,839
weirdest the bug fixes that are most

00:38:34,480 --> 00:38:36,480
flipped that can be most flip when

00:38:35,839 --> 00:38:38,960
talking about

00:38:36,480 --> 00:38:39,680
and not the bug fixes that actually are

00:38:38,960 --> 00:38:43,040
going to

00:38:39,680 --> 00:38:46,320
improve your life so looking at perl doc

00:38:43,040 --> 00:38:48,160
pearl 5340 delta and going down to the

00:38:46,320 --> 00:38:49,119
bug fixes section is actually a great

00:38:48,160 --> 00:38:51,440
place to see

00:38:49,119 --> 00:38:52,320
the real hard nasty work people are

00:38:51,440 --> 00:38:53,680
putting into pearl

00:38:52,320 --> 00:38:56,240
that doesn't even get featured in my

00:38:53,680 --> 00:38:57,520
slides because i'm a bum

00:38:56,240 --> 00:39:00,000
let's talk about what's going to happen

00:38:57,520 --> 00:39:02,079
next 536 is gonna happen

00:39:00,000 --> 00:39:03,520
next i've talked about version seven a

00:39:02,079 --> 00:39:04,880
little bit

00:39:03,520 --> 00:39:06,480
and then there's some other things so

00:39:04,880 --> 00:39:07,200
pearl seven when is pearl seven coming

00:39:06,480 --> 00:39:08,960
out

00:39:07,200 --> 00:39:10,640
i don't know what features is it going

00:39:08,960 --> 00:39:12,240
to have i don't know

00:39:10,640 --> 00:39:14,079
will it be fully backwards compatible

00:39:12,240 --> 00:39:15,680
yep yeah i think so

00:39:14,079 --> 00:39:16,880
um right that's part of this whole thing

00:39:15,680 --> 00:39:18,079
that we've decided is that the next

00:39:16,880 --> 00:39:19,760
version will have to be governed by its

00:39:18,079 --> 00:39:21,599
feature bundle

00:39:19,760 --> 00:39:22,800
don't really know the answers to the

00:39:21,599 --> 00:39:26,960
future of pearl 7

00:39:22,800 --> 00:39:29,599
other than we think pearl 7 has a future

00:39:26,960 --> 00:39:30,000
right now we're much more focused on 536

00:39:29,599 --> 00:39:31,839
and

00:39:30,000 --> 00:39:33,839
finding ways that we can have more

00:39:31,839 --> 00:39:35,119
agreement about our next steps both the

00:39:33,839 --> 00:39:36,720
immediate next steps and the longer

00:39:35,119 --> 00:39:39,119
scale next steps

00:39:36,720 --> 00:39:40,400
and on improving the culture of

00:39:39,119 --> 00:39:42,640
conversation

00:39:40,400 --> 00:39:44,880
on the pro 5 porter's mailing list in

00:39:42,640 --> 00:39:46,640
the pro5.get repository

00:39:44,880 --> 00:39:48,000
and just the culture of the team in

00:39:46,640 --> 00:39:51,119
general which

00:39:48,000 --> 00:39:51,760
can range from reactionary to extremely

00:39:51,119 --> 00:39:54,000
helpful

00:39:51,760 --> 00:39:55,119
to nitpicking and what we want to do is

00:39:54,000 --> 00:39:57,119
kind of

00:39:55,119 --> 00:39:58,880
help everyone to find ways that we can

00:39:57,119 --> 00:40:00,640
work together most effectively and

00:39:58,880 --> 00:40:04,240
constructively

00:40:00,640 --> 00:40:07,520
and the next goal on that is 5 36

00:40:04,240 --> 00:40:09,119
so what's happening at 5 36 uh i should

00:40:07,520 --> 00:40:11,119
have foreseen this question

00:40:09,119 --> 00:40:12,240
but i don't really have a whole lot that

00:40:11,119 --> 00:40:13,440
i want to talk about i'll say a few

00:40:12,240 --> 00:40:16,560
things

00:40:13,440 --> 00:40:18,079
one is an rfc process this is something

00:40:16,560 --> 00:40:20,880
we've talked about and not

00:40:18,079 --> 00:40:22,160
done many many times over the last 20

00:40:20,880 --> 00:40:24,880
years

00:40:22,160 --> 00:40:26,640
the idea here is if you have a cool idea

00:40:24,880 --> 00:40:29,760
for a feature and you want it to be

00:40:26,640 --> 00:40:32,720
in pearl what do you do

00:40:29,760 --> 00:40:33,520
right now the uncertainty about your

00:40:32,720 --> 00:40:35,040
design

00:40:33,520 --> 00:40:36,400
can exist kind of forever you're like i

00:40:35,040 --> 00:40:37,440
have this great idea here's how it's

00:40:36,400 --> 00:40:38,640
going to work and there's some argument

00:40:37,440 --> 00:40:39,920
about it and then you go

00:40:38,640 --> 00:40:41,920
and you implement what you thought the

00:40:39,920 --> 00:40:43,520
conclusion was

00:40:41,920 --> 00:40:44,800
but the people who make the decision

00:40:43,520 --> 00:40:46,400
about whether it's going to go in

00:40:44,800 --> 00:40:48,400
whether it was the pumpkin before the

00:40:46,400 --> 00:40:50,880
steering council now

00:40:48,400 --> 00:40:52,000
that their their decision is not

00:40:50,880 --> 00:40:54,400
resolved until the

00:40:52,000 --> 00:40:56,240
end right they haven't said yes this is

00:40:54,400 --> 00:40:57,839
the design that we will accept if it

00:40:56,240 --> 00:40:58,880
works they've just said uh yeah

00:40:57,839 --> 00:41:00,800
that looked pretty interesting i had

00:40:58,880 --> 00:41:02,240
some questions and then we kind of fade

00:41:00,800 --> 00:41:02,720
off and go into some other room and you

00:41:02,240 --> 00:41:04,000
feel like

00:41:02,720 --> 00:41:05,040
well i'm sure those questions were mine

00:41:04,000 --> 00:41:06,160
or they would have asked them and then

00:41:05,040 --> 00:41:08,560
you spend you know

00:41:06,160 --> 00:41:09,200
186 hours implementing this feature at

00:41:08,560 --> 00:41:10,880
which point

00:41:09,200 --> 00:41:13,280
the question that we didn't actually ask

00:41:10,880 --> 00:41:15,520
was why would you do this silly thing

00:41:13,280 --> 00:41:16,400
um what we want is a means to say we got

00:41:15,520 --> 00:41:18,160
an idea

00:41:16,400 --> 00:41:19,359
we had a discussion about it and within

00:41:18,160 --> 00:41:20,480
the bounds of what needed to be

00:41:19,359 --> 00:41:23,200
discussed

00:41:20,480 --> 00:41:23,760
and then we get to the point of saying

00:41:23,200 --> 00:41:26,000
yes

00:41:23,760 --> 00:41:26,800
i think this design makes sense if you

00:41:26,000 --> 00:41:29,119
implement this

00:41:26,800 --> 00:41:29,920
and it works and there's nothing truly

00:41:29,119 --> 00:41:31,359
unforeseen

00:41:29,920 --> 00:41:34,079
we would like to have this feature in

00:41:31,359 --> 00:41:35,760
pearl obviously this is not like a

00:41:34,079 --> 00:41:37,680
silver bullet that solves all of pearl's

00:41:35,760 --> 00:41:38,240
problems but the problem is that right

00:41:37,680 --> 00:41:40,319
now

00:41:38,240 --> 00:41:41,920
it's a big deterrent to implementing new

00:41:40,319 --> 00:41:42,160
features there's many i mean first of

00:41:41,920 --> 00:41:44,000
all

00:41:42,160 --> 00:41:45,680
the pearl 5 code base is kind of a

00:41:44,000 --> 00:41:47,280
nightmare but

00:41:45,680 --> 00:41:48,800
other big deterrents include you could

00:41:47,280 --> 00:41:52,400
do all this work and not know whether it

00:41:48,800 --> 00:41:52,400
goes in we need to solve this problem

00:41:52,640 --> 00:41:56,160
another big issue is what platforms does

00:41:54,640 --> 00:41:58,160
pearl support

00:41:56,160 --> 00:41:59,280
this is a very vaguely answered question

00:41:58,160 --> 00:42:01,680
right now starting with i don't know

00:41:59,280 --> 00:42:04,640
it's a platform

00:42:01,680 --> 00:42:05,440
we sometimes get a question can we drop

00:42:04,640 --> 00:42:08,880
support

00:42:05,440 --> 00:42:09,839
for plan nine can we drop support for z

00:42:08,880 --> 00:42:11,839
os

00:42:09,839 --> 00:42:13,760
well we don't really define what support

00:42:11,839 --> 00:42:15,359
is so we can't say we're dropping

00:42:13,760 --> 00:42:17,440
support until we define

00:42:15,359 --> 00:42:19,040
what does it mean that pearl has support

00:42:17,440 --> 00:42:21,040
for these languages

00:42:19,040 --> 00:42:22,880
these platforms some languages have

00:42:21,040 --> 00:42:23,440
great answers to this rust for example

00:42:22,880 --> 00:42:25,119
is a

00:42:23,440 --> 00:42:27,040
very commonly cited place to look for

00:42:25,119 --> 00:42:28,480
how do you know whether something is

00:42:27,040 --> 00:42:30,640
supported on rust well you go look at

00:42:28,480 --> 00:42:32,319
their extremely clear very public

00:42:30,640 --> 00:42:33,119
documentation on what's supported

00:42:32,319 --> 00:42:34,319
i don't know that we're going to get

00:42:33,119 --> 00:42:35,760
there but we can get a lot better than

00:42:34,319 --> 00:42:38,800
where we're at now i'm going to say

00:42:35,760 --> 00:42:39,839
starting with msbc we've been talking

00:42:38,800 --> 00:42:43,440
about dropping support

00:42:39,839 --> 00:42:46,240
for microsoft visual c6

00:42:43,440 --> 00:42:48,240
and if we drop that it means that c99

00:42:46,240 --> 00:42:49,839
features become usable in the code base

00:42:48,240 --> 00:42:51,760
when when they're useful and we decide

00:42:49,839 --> 00:42:55,200
to use them which should help make the

00:42:51,760 --> 00:42:57,839
codebase feel like less of a nightmare

00:42:55,200 --> 00:42:59,359
also since we talked about not changing

00:42:57,839 --> 00:43:01,280
the default behavior of pearl out of the

00:42:59,359 --> 00:43:04,079
box and instead saying you have to say

00:43:01,280 --> 00:43:05,440
use v536 for example to get the newest

00:43:04,079 --> 00:43:08,079
semantics

00:43:05,440 --> 00:43:09,280
we know we need to make those semantics

00:43:08,079 --> 00:43:10,480
as good as possible

00:43:09,280 --> 00:43:12,240
the reason to turn on strict and

00:43:10,480 --> 00:43:13,839
warnings out of the box so you don't

00:43:12,240 --> 00:43:14,400
have to type these things or know about

00:43:13,839 --> 00:43:16,880
them you just

00:43:14,400 --> 00:43:18,079
get the the best pearl that we can give

00:43:16,880 --> 00:43:21,200
you

00:43:18,079 --> 00:43:23,920
right now if you use v534 you still have

00:43:21,200 --> 00:43:26,720
to say use warnings

00:43:23,920 --> 00:43:28,000
just about everybody i say this is if i

00:43:26,720 --> 00:43:29,200
know everybody but just about everybody

00:43:28,000 --> 00:43:30,960
turns on warnings

00:43:29,200 --> 00:43:32,880
you should be turning on warnings in

00:43:30,960 --> 00:43:33,760
your program if you find warnings that

00:43:32,880 --> 00:43:35,359
you need to suppress

00:43:33,760 --> 00:43:36,880
then turn those off but start by turning

00:43:35,359 --> 00:43:38,319
on warnings but

00:43:36,880 --> 00:43:40,560
you still have to type it why don't we

00:43:38,319 --> 00:43:42,400
make that part of use 536

00:43:40,560 --> 00:43:44,400
and there are many other things we

00:43:42,400 --> 00:43:47,040
should talk about putting in there

00:43:44,400 --> 00:43:48,400
uh one turning off utf-8 i would love to

00:43:47,040 --> 00:43:50,400
turn on utf-8

00:43:48,400 --> 00:43:52,079
in 536. we haven't had a discussion

00:43:50,400 --> 00:43:53,119
about it i don't know if we're going to

00:43:52,079 --> 00:43:55,440
these are the discussions that need to

00:43:53,119 --> 00:43:56,560
happen over the next few months do we

00:43:55,440 --> 00:43:58,800
want to take any of those

00:43:56,560 --> 00:43:59,760
no's that i showed earlier no bare word

00:43:58,800 --> 00:44:01,520
file handles

00:43:59,760 --> 00:44:03,440
no indirect which is actually a 532

00:44:01,520 --> 00:44:06,240
feature uh do we want to

00:44:03,440 --> 00:44:07,520
turn those off in 536 maybe we need to

00:44:06,240 --> 00:44:10,000
have those conversations but

00:44:07,520 --> 00:44:11,680
these are the ways in which use 536

00:44:10,000 --> 00:44:13,440
needs to be pulling that weight of

00:44:11,680 --> 00:44:15,680
changing the simplest way to get the

00:44:13,440 --> 00:44:19,680
best experience that we would have had

00:44:15,680 --> 00:44:19,680
with the original v7 plan

00:44:20,560 --> 00:44:23,839
yeah and also smart match did you know

00:44:23,359 --> 00:44:26,400
if you say

00:44:23,839 --> 00:44:27,359
use v534 you still get smart match

00:44:26,400 --> 00:44:30,000
features turned on

00:44:27,359 --> 00:44:32,000
this is the the only reason i'm still

00:44:30,000 --> 00:44:35,359
working with pearl is so i can someday

00:44:32,000 --> 00:44:37,520
pry smart match out of it uh we'll see

00:44:35,359 --> 00:44:39,920
536 we might at least pull switch out of

00:44:37,520 --> 00:44:43,359
the default bundle

00:44:39,920 --> 00:44:44,960
experiments earlier i mentioned that try

00:44:43,359 --> 00:44:46,960
is an experimental feature the new try

00:44:44,960 --> 00:44:49,040
catch experiments are supposed to be

00:44:46,960 --> 00:44:51,200
there so we can find out

00:44:49,040 --> 00:44:53,839
when you actually use the feature

00:44:51,200 --> 00:44:55,200
writing code to try it out does it work

00:44:53,839 --> 00:44:57,520
does the implementation work did the

00:44:55,200 --> 00:44:59,440
design work how can it be made better

00:44:57,520 --> 00:45:01,280
what other developments do we have going

00:44:59,440 --> 00:45:03,280
on that might impact the design of this

00:45:01,280 --> 00:45:05,040
experimental feature

00:45:03,280 --> 00:45:06,720
the specification for experiments says

00:45:05,040 --> 00:45:08,160
if it's unchanged for two years it's

00:45:06,720 --> 00:45:10,720
ready to be merged

00:45:08,160 --> 00:45:11,760
uh but we have 15 active experiments

00:45:10,720 --> 00:45:13,280
many of which haven't really been

00:45:11,760 --> 00:45:15,119
touched at all for years

00:45:13,280 --> 00:45:16,400
the problem is something like this

00:45:15,119 --> 00:45:17,680
someone says i have this great idea for

00:45:16,400 --> 00:45:19,200
a feature

00:45:17,680 --> 00:45:20,720
and we say okay we'll put it in but it's

00:45:19,200 --> 00:45:22,720
going to be an experiment

00:45:20,720 --> 00:45:24,880
well the person who wanted that feature

00:45:22,720 --> 00:45:26,319
to exist now has it it's in their perl

00:45:24,880 --> 00:45:26,640
they just have to say no warnings about

00:45:26,319 --> 00:45:27,839
it or

00:45:26,640 --> 00:45:29,599
they get what they want they don't need

00:45:27,839 --> 00:45:30,319
to stick around and convince everyone

00:45:29,599 --> 00:45:32,480
else

00:45:30,319 --> 00:45:35,040
to make it a a non-experimental part of

00:45:32,480 --> 00:45:36,720
pearl we need someone who can champion

00:45:35,040 --> 00:45:38,240
taking these experiments to conclusion

00:45:36,720 --> 00:45:40,400
and basically that's going to be the job

00:45:38,240 --> 00:45:43,359
for the steering council to run through

00:45:40,400 --> 00:45:45,599
i would love that if that when this talk

00:45:43,359 --> 00:45:46,000
is given next year what's new in 536 we

00:45:45,599 --> 00:45:49,440
can say

00:45:46,000 --> 00:45:51,839
we have 10 active experiments

00:45:49,440 --> 00:45:53,200
three of which are new all right only

00:45:51,839 --> 00:45:54,400
seven of which are the ones that were

00:45:53,200 --> 00:45:56,640
lingering from here but that means

00:45:54,400 --> 00:45:58,079
chugging through these things and

00:45:56,640 --> 00:46:00,960
calling them not experiments or removing

00:45:58,079 --> 00:46:02,880
them from the language

00:46:00,960 --> 00:46:04,400
and i think maybe this is my last big

00:46:02,880 --> 00:46:06,480
point

00:46:04,400 --> 00:46:07,920
we talked about removing cruft there's

00:46:06,480 --> 00:46:08,400
still a lot of craft we're not saying

00:46:07,920 --> 00:46:10,640
that

00:46:08,400 --> 00:46:11,520
without the original version 7 plan

00:46:10,640 --> 00:46:13,520
there's not going to be

00:46:11,520 --> 00:46:15,359
croft or that we're not going to remove

00:46:13,520 --> 00:46:16,720
it there still is cruft there's still

00:46:15,359 --> 00:46:19,599
things in the language

00:46:16,720 --> 00:46:20,880
that are warts on the language or that

00:46:19,599 --> 00:46:22,240
are

00:46:20,880 --> 00:46:24,319
you have to do more work to get the

00:46:22,240 --> 00:46:26,079
obviously right effect i would like us

00:46:24,319 --> 00:46:27,839
to be having conversations about

00:46:26,079 --> 00:46:29,680
turning on the unicode strings feature

00:46:27,839 --> 00:46:32,880
irrevocably from the start

00:46:29,680 --> 00:46:34,640
uh as we did with post dref postfix

00:46:32,880 --> 00:46:35,200
dereferencing is now available out of

00:46:34,640 --> 00:46:37,200
the box

00:46:35,200 --> 00:46:38,400
from the first line of pearl for for

00:46:37,200 --> 00:46:39,680
years now

00:46:38,400 --> 00:46:41,119
and i would like to do that and you

00:46:39,680 --> 00:46:42,880
can't turn it off and i'd like to do

00:46:41,119 --> 00:46:45,119
that with unicode strings

00:46:42,880 --> 00:46:46,720
on the other hand the version of postfix

00:46:45,119 --> 00:46:48,160
d referencing you get out of the box

00:46:46,720 --> 00:46:50,160
doesn't work inside of double quoted

00:46:48,160 --> 00:46:51,520
strings you still need to turn that on

00:46:50,160 --> 00:46:53,920
i'd like to get rid of that too it's

00:46:51,520 --> 00:46:56,000
just it's unnecessary complication

00:46:53,920 --> 00:46:57,760
and another one and i haven't done the

00:46:56,000 --> 00:46:59,119
research no we haven't done the research

00:46:57,760 --> 00:47:02,720
on this at all yet

00:46:59,119 --> 00:47:04,720
is really looking at how to get rid of

00:47:02,720 --> 00:47:06,400
the bitwise operator behavior being

00:47:04,720 --> 00:47:09,280
guarded by a feature switch

00:47:06,400 --> 00:47:10,400
this super quick version of this is for

00:47:09,280 --> 00:47:13,440
a very long time

00:47:10,400 --> 00:47:16,720
the single pipe single ampersand

00:47:13,440 --> 00:47:19,760
and single hat characters were

00:47:16,720 --> 00:47:21,280
logical operators or their bitwise

00:47:19,760 --> 00:47:24,480
operators that either worked

00:47:21,280 --> 00:47:27,280
on a string or a number

00:47:24,480 --> 00:47:28,400
based on the type of the variable you

00:47:27,280 --> 00:47:30,000
handed in but in perl

00:47:28,400 --> 00:47:31,760
variables don't have type operators do

00:47:30,000 --> 00:47:33,440
so it's completely reversing the normal

00:47:31,760 --> 00:47:36,319
paradigm in pearl and the use

00:47:33,440 --> 00:47:37,200
feature bitwise fixed that and now what

00:47:36,319 --> 00:47:39,280
we need to do

00:47:37,200 --> 00:47:40,319
is figure out can we make that behavior

00:47:39,280 --> 00:47:42,079
be the default

00:47:40,319 --> 00:47:45,680
and fix this lump that's been in the

00:47:42,079 --> 00:47:45,680
pearl design for 20 some years

00:47:46,319 --> 00:47:48,960
the other thing about doing all these

00:47:47,760 --> 00:47:50,640
changes right we're talking about

00:47:48,960 --> 00:47:51,680
disrupting existing programs which is

00:47:50,640 --> 00:47:53,200
the reason that

00:47:51,680 --> 00:47:54,800
one of the reasons we talked about not

00:47:53,200 --> 00:47:58,400
doing the big change

00:47:54,800 --> 00:48:00,480
of pearl 7 but we still

00:47:58,400 --> 00:48:02,400
want to make some disruptive changes if

00:48:00,480 --> 00:48:04,000
we change all programs to have unicode

00:48:02,400 --> 00:48:04,960
strings on by default if we change all

00:48:04,000 --> 00:48:08,240
programs to have

00:48:04,960 --> 00:48:09,760
postfix post dref qq on by default we're

00:48:08,240 --> 00:48:11,119
disrupting somebody's program

00:48:09,760 --> 00:48:13,040
and that means we need to have really

00:48:11,119 --> 00:48:14,559
good diagnostic messages telling them

00:48:13,040 --> 00:48:16,160
what happened that it happened on

00:48:14,559 --> 00:48:17,440
purpose and how to fix it

00:48:16,160 --> 00:48:19,760
and those messages are going to need to

00:48:17,440 --> 00:48:21,440
link you into real proper documentation

00:48:19,760 --> 00:48:23,839
not just three lines on the output

00:48:21,440 --> 00:48:25,599
but saying go look here for the

00:48:23,839 --> 00:48:27,599
rationale for why this happened and what

00:48:25,599 --> 00:48:30,000
you need to do to make your program run

00:48:27,599 --> 00:48:31,760
as correctly as it used to run

00:48:30,000 --> 00:48:33,200
hopefully a big help in this will be the

00:48:31,760 --> 00:48:35,440
new documentation team

00:48:33,200 --> 00:48:37,520
that was chartered this year after a lot

00:48:35,440 --> 00:48:40,640
of radio silence from the psc

00:48:37,520 --> 00:48:42,079
um there's been some other talk about

00:48:40,640 --> 00:48:43,760
this i think there's a talk today or

00:48:42,079 --> 00:48:45,839
tomorrow i should have written it down

00:48:43,760 --> 00:48:47,599
talking about the documentation of pearl

00:48:45,839 --> 00:48:49,119
this i hope is going to be a big help in

00:48:47,599 --> 00:48:50,960
transition whenever we have these bumpy

00:48:49,119 --> 00:48:52,559
changes

00:48:50,960 --> 00:48:54,800
okay uh there are definitely some other

00:48:52,559 --> 00:48:55,599
things other than land experiments and

00:48:54,800 --> 00:48:56,960
drop old

00:48:55,599 --> 00:48:58,640
things we have new features that we're

00:48:56,960 --> 00:49:00,000
looking at talking about but these are

00:48:58,640 --> 00:49:01,440
going to go through the rfc process

00:49:00,000 --> 00:49:03,760
and you are going gonna have to wait and

00:49:01,440 --> 00:49:05,599
see what they are that just started

00:49:03,760 --> 00:49:07,280
yesterday the day before some mail on

00:49:05,599 --> 00:49:08,880
p5p talking about some new features and

00:49:07,280 --> 00:49:09,760
i'm hoping that the psc can

00:49:08,880 --> 00:49:10,880
work through more than one of these

00:49:09,760 --> 00:49:12,960
features at a time we'll see what

00:49:10,880 --> 00:49:16,160
happens

00:49:12,960 --> 00:49:19,200
the next steering council election it

00:49:16,160 --> 00:49:22,880
will end on june 27th so that's

00:49:19,200 --> 00:49:24,000
uh 18 days just over two weeks

00:49:22,880 --> 00:49:25,760
uh you can keep an eye out for the

00:49:24,000 --> 00:49:26,720
results they'll be posted at p5p and

00:49:25,760 --> 00:49:29,680
elsewhere

00:49:26,720 --> 00:49:30,800
and uh i guess as good as mine as to

00:49:29,680 --> 00:49:32,559
what exactly is going to come out of

00:49:30,800 --> 00:49:35,119
that

00:49:32,559 --> 00:49:36,240
this concludes my slide presentation and

00:49:35,119 --> 00:49:38,079
i think i have about

00:49:36,240 --> 00:49:40,480
two minutes i saw a lot of stuff going

00:49:38,079 --> 00:49:43,040
to chat i haven't even looked a little

00:49:40,480 --> 00:49:44,480
so let's you have until the hour i have

00:49:43,040 --> 00:49:47,520
till the hour great

00:49:44,480 --> 00:49:48,319
okay um there's a lot of chat in the

00:49:47,520 --> 00:49:50,880
back am i running

00:49:48,319 --> 00:49:52,240
okay this is me just starting by reading

00:49:50,880 --> 00:49:54,000
at the very end and everyone who asked a

00:49:52,240 --> 00:49:54,880
question earlier is going to have to ask

00:49:54,000 --> 00:49:56,000
it again sorry

00:49:54,880 --> 00:49:57,440
am i running to stay on the steering

00:49:56,000 --> 00:49:58,880
council yeah i don't have a list of

00:49:57,440 --> 00:49:59,839
everyone running but i can tell you some

00:49:58,880 --> 00:50:03,520
of the names that are up

00:49:59,839 --> 00:50:05,040
are me and neil bowers both of whom have

00:50:03,520 --> 00:50:06,640
been on it from the beginning

00:50:05,040 --> 00:50:08,319
nicholas clark was nominated and as i

00:50:06,640 --> 00:50:09,760
said he declined to run again which is

00:50:08,319 --> 00:50:12,000
just a bummer because nick's great to

00:50:09,760 --> 00:50:15,200
work with uh paul evans aka

00:50:12,000 --> 00:50:18,880
leo nerd has been nominated and philippe

00:50:15,200 --> 00:50:20,240
bruchat uh aka book

00:50:18,880 --> 00:50:21,520
i know i'm gonna miss names and i feel

00:50:20,240 --> 00:50:24,480
bad about that those are those the two

00:50:21,520 --> 00:50:24,480
that come to mind right now

00:50:25,040 --> 00:50:28,480
what is it people have against unicode

00:50:26,559 --> 00:50:30,160
strings but think about unicode strings

00:50:28,480 --> 00:50:31,920
it changes the behavior of your program

00:50:30,160 --> 00:50:34,559
uh when you turn on unicode strings

00:50:31,920 --> 00:50:36,000
you might have a program that was for

00:50:34,559 --> 00:50:38,839
everybody who doesn't know about unicode

00:50:36,000 --> 00:50:41,680
strings the idea is this

00:50:38,839 --> 00:50:44,720
um pearl stores strings

00:50:41,680 --> 00:50:46,480
in memory either as

00:50:44,720 --> 00:50:48,319
a it's always a sequence of bytes and

00:50:46,480 --> 00:50:50,240
sometimes there's a flag that says

00:50:48,319 --> 00:50:51,760
to interpret these bytes as code points

00:50:50,240 --> 00:50:52,960
in the string all the things that you

00:50:51,760 --> 00:50:54,800
get of substring length

00:50:52,960 --> 00:50:57,280
one when you look at a string you have

00:50:54,800 --> 00:50:58,880
to first utf-8 decode those bytes

00:50:57,280 --> 00:51:00,559
and this has nothing to do with whether

00:50:58,880 --> 00:51:03,599
the string is

00:51:00,559 --> 00:51:04,480
actually unicode text or not it's

00:51:03,599 --> 00:51:07,440
entirely about

00:51:04,480 --> 00:51:08,000
in-memory representation of a character

00:51:07,440 --> 00:51:11,520
point

00:51:08,000 --> 00:51:13,520
code point buffer and there were places

00:51:11,520 --> 00:51:14,720
where that abstraction was leaky and

00:51:13,520 --> 00:51:15,119
you'd say hey what's the length of this

00:51:14,720 --> 00:51:16,559
string

00:51:15,119 --> 00:51:18,559
and instead of telling you 10 because it

00:51:16,559 --> 00:51:20,880
was 10 code points it would say

00:51:18,559 --> 00:51:22,640
12 because it was counting the

00:51:20,880 --> 00:51:24,480
underlying memory representation

00:51:22,640 --> 00:51:26,319
for a long time this was called the

00:51:24,480 --> 00:51:29,359
unicode bug

00:51:26,319 --> 00:51:32,880
and carl williamson did a lot of work to

00:51:29,359 --> 00:51:35,280
fix this that went out in 512 and 514

00:51:32,880 --> 00:51:37,680
and because it would break programs that

00:51:35,280 --> 00:51:39,440
were relying on this bug

00:51:37,680 --> 00:51:41,359
it had to be opted into but

00:51:39,440 --> 00:51:44,640
fundamentally it is a bug

00:51:41,359 --> 00:51:46,559
and we have left this bug out there

00:51:44,640 --> 00:51:47,920
for all this time and to not have the

00:51:46,559 --> 00:51:50,720
bug you have to opt

00:51:47,920 --> 00:51:52,000
out of it so what i would like is for

00:51:50,720 --> 00:51:53,280
this bug to be gone this is not

00:51:52,000 --> 00:51:55,040
something like strict where it's

00:51:53,280 --> 00:51:56,880
fundamentally changing

00:51:55,040 --> 00:51:59,119
which kind of behavior is correct it's

00:51:56,880 --> 00:52:00,480
just wrong it's simply wrong behavior

00:51:59,119 --> 00:52:02,079
but we've been so concerned about it

00:52:00,480 --> 00:52:02,720
breaking real programs that we didn't

00:52:02,079 --> 00:52:04,160
change it

00:52:02,720 --> 00:52:06,000
so what people have against turning it

00:52:04,160 --> 00:52:08,000
on is that it might break their programs

00:52:06,000 --> 00:52:09,119
that have been relying on the incorrect

00:52:08,000 --> 00:52:11,200
answers they were getting

00:52:09,119 --> 00:52:13,040
i would i also think i would i think i

00:52:11,200 --> 00:52:14,640
might disagree with what uh i think it

00:52:13,040 --> 00:52:16,400
says talk somebody is saying that

00:52:14,640 --> 00:52:17,760
protocols requiring bytes have anything

00:52:16,400 --> 00:52:18,079
to do with this because really you can

00:52:17,760 --> 00:52:20,960
do

00:52:18,079 --> 00:52:22,480
a bitewise protocol with both wide and

00:52:20,960 --> 00:52:25,359
narrow strings you just need to

00:52:22,480 --> 00:52:25,920
have some some strictness about your

00:52:25,359 --> 00:52:27,280
type

00:52:25,920 --> 00:52:30,160
your type safety as you write your

00:52:27,280 --> 00:52:30,160
program in perl

00:52:30,880 --> 00:52:34,960
yeah and you don't shut off unicode i

00:52:33,680 --> 00:52:36,400
have a whole other talk it's on youtube

00:52:34,960 --> 00:52:38,000
it's called a million billion squiggly

00:52:36,400 --> 00:52:38,880
characters and it talks about a lot of

00:52:38,000 --> 00:52:40,319
this question

00:52:38,880 --> 00:52:41,440
unicode strings is orthogonal to this

00:52:40,319 --> 00:52:42,400
you really just need to know whether

00:52:41,440 --> 00:52:45,599
you're storing

00:52:42,400 --> 00:52:48,720
um bytes or characters in a string

00:52:45,599 --> 00:52:52,400
um okay

00:52:48,720 --> 00:52:53,680
anything else i'm putting everybody in a

00:52:52,400 --> 00:52:55,280
position to ask your question more than

00:52:53,680 --> 00:52:58,640
once which is obnoxious but

00:52:55,280 --> 00:52:58,880
i can't i don't think i can really rely

00:52:58,640 --> 00:53:00,160
on

00:52:58,880 --> 00:53:02,960
looking for hands raised although i'm

00:53:00,160 --> 00:53:02,960
gonna flip through here

00:53:03,680 --> 00:53:11,920
did i see nick's face nope okay

00:53:06,960 --> 00:53:11,920
um semantic version yeah okay

00:53:12,839 --> 00:53:17,119
um

00:53:15,599 --> 00:53:18,960
semantic version works like this says

00:53:17,119 --> 00:53:20,000
matthew proceeko i'm sorry if i'm saying

00:53:18,960 --> 00:53:23,119
your name wrong

00:53:20,000 --> 00:53:24,319
um yeah and he describes how semantic

00:53:23,119 --> 00:53:26,079
versioning works

00:53:24,319 --> 00:53:28,319
um how do you get away with adding use

00:53:26,079 --> 00:53:30,559
warnings since it'll break old stuff yes

00:53:28,319 --> 00:53:30,559
so

00:53:32,079 --> 00:53:36,079
there's a couple things we the part of

00:53:34,480 --> 00:53:38,720
the argument about adding warnings is

00:53:36,079 --> 00:53:42,079
something like this

00:53:38,720 --> 00:53:45,839
we start by assuming that there are two

00:53:42,079 --> 00:53:48,800
main categories that break

00:53:45,839 --> 00:53:51,119
if you turn on new warnings also first

00:53:48,800 --> 00:53:52,800
let me take a step back and say

00:53:51,119 --> 00:53:54,400
for ages people have been told you

00:53:52,800 --> 00:53:55,200
should start your programs with use

00:53:54,400 --> 00:53:58,240
warnings

00:53:55,200 --> 00:53:59,440
and over time we have added new kinds of

00:53:58,240 --> 00:54:03,760
warnings

00:53:59,440 --> 00:54:05,359
so turning warnings on by default is

00:54:03,760 --> 00:54:07,119
starts from the idea that if warnings

00:54:05,359 --> 00:54:09,359
are on we're still free to add new

00:54:07,119 --> 00:54:12,880
warnings because we think that programs

00:54:09,359 --> 00:54:16,000
only break when they add new warnings if

00:54:12,880 --> 00:54:18,640
one you have turned on

00:54:16,000 --> 00:54:19,920
fatal warnings which we strongly advise

00:54:18,640 --> 00:54:23,280
you don't do

00:54:19,920 --> 00:54:25,839
or two you have tests that are counting

00:54:23,280 --> 00:54:26,640
warnings being emitted by your program

00:54:25,839 --> 00:54:28,240
and

00:54:26,640 --> 00:54:30,640
i'm happy to go on the record saying

00:54:28,240 --> 00:54:32,480
don't do that you might want to say

00:54:30,640 --> 00:54:34,000
did i see this warning come out of the

00:54:32,480 --> 00:54:36,480
snippet of code when testing

00:54:34,000 --> 00:54:38,000
or did i see that warning or i should

00:54:36,480 --> 00:54:41,359
not have seen a warning that looks like

00:54:38,000 --> 00:54:43,520
this but if you have a test failure

00:54:41,359 --> 00:54:45,440
on a brand new version of pearl because

00:54:43,520 --> 00:54:47,520
there is a new warning

00:54:45,440 --> 00:54:49,839
either you really want to count all the

00:54:47,520 --> 00:54:52,720
warnings and you should fix it

00:54:49,839 --> 00:54:53,119
or you should change the way you've

00:54:52,720 --> 00:54:54,480
written

00:54:53,119 --> 00:54:55,760
your code and say i'm not really

00:54:54,480 --> 00:54:56,720
concerned about all warnings i'm trying

00:54:55,760 --> 00:54:59,200
to make sure i suppress

00:54:56,720 --> 00:55:01,359
this one warning people use libraries to

00:54:59,200 --> 00:55:01,839
say i assert this code has no warnings

00:55:01,359 --> 00:55:03,200
in it

00:55:01,839 --> 00:55:04,720
and that's their choice i would not

00:55:03,200 --> 00:55:05,520
generally write code like that but if

00:55:04,720 --> 00:55:07,280
you do

00:55:05,520 --> 00:55:08,799
when new warnings are added i would say

00:55:07,280 --> 00:55:11,520
you've bought into the idea that you're

00:55:08,799 --> 00:55:13,040
going to have to fix this

00:55:11,520 --> 00:55:14,079
and a much simpler way of having this

00:55:13,040 --> 00:55:16,559
whole state of making this whole

00:55:14,079 --> 00:55:16,559
statement is

00:55:16,640 --> 00:55:22,799
every version of pearl is going to break

00:55:19,680 --> 00:55:23,599
something normally it breaks very very

00:55:22,799 --> 00:55:24,880
small things

00:55:23,599 --> 00:55:27,520
very small things and we still get

00:55:24,880 --> 00:55:30,640
pushback and part of what

00:55:27,520 --> 00:55:31,680
sawyer and neil and i and nick have

00:55:30,640 --> 00:55:35,200
agreed

00:55:31,680 --> 00:55:37,359
is it's okay to look at

00:55:35,200 --> 00:55:38,960
things that might break more than tiny

00:55:37,359 --> 00:55:40,400
tiny tiny tiny things

00:55:38,960 --> 00:55:42,480
what we don't want to do is break

00:55:40,400 --> 00:55:44,559
massive amounts of code that's that's

00:55:42,480 --> 00:55:45,599
under a rock right but still being run

00:55:44,559 --> 00:55:48,400
but

00:55:45,599 --> 00:55:49,680
adding warnings turning warnings on by

00:55:48,400 --> 00:55:51,839
turning warnings on

00:55:49,680 --> 00:55:53,839
um and adding more warnings is something

00:55:51,839 --> 00:55:55,599
that

00:55:53,839 --> 00:55:56,640
we think it's okay to have some kind of

00:55:55,599 --> 00:55:57,760
fallout from that and last thing i'll

00:55:56,640 --> 00:55:59,440
say and then i'll look for whatever

00:55:57,760 --> 00:56:02,160
questions coming up next

00:55:59,440 --> 00:56:03,520
is what we're talking about doing is

00:56:02,160 --> 00:56:06,799
turning on warnings

00:56:03,520 --> 00:56:08,720
when you say use v536

00:56:06,799 --> 00:56:10,559
so we're not turning warnings on by

00:56:08,720 --> 00:56:12,000
default we're not saying that

00:56:10,559 --> 00:56:13,920
this slides away we're not turning

00:56:12,000 --> 00:56:16,240
warnings on by default

00:56:13,920 --> 00:56:18,480
we're saying that if you ask for 536

00:56:16,240 --> 00:56:20,480
behavior you will get warnings

00:56:18,480 --> 00:56:22,160
and that means you've had to change your

00:56:20,480 --> 00:56:23,599
program to get those warnings and if the

00:56:22,160 --> 00:56:24,240
warnings change over time that's part of

00:56:23,599 --> 00:56:31,839
the bargain

00:56:24,240 --> 00:56:31,839
of using warnings

00:56:32,559 --> 00:56:35,599
could we have avoided the problems of

00:56:34,319 --> 00:56:36,960
the last year by throwing everything

00:56:35,599 --> 00:56:40,799
that was proposed behind a use

00:56:36,960 --> 00:56:42,960
v7 i mean maybe uh but

00:56:40,799 --> 00:56:44,559
there's a whole lot more going on the

00:56:42,960 --> 00:56:46,000
conversation wasn't these are exactly

00:56:44,559 --> 00:56:48,480
the things that we need

00:56:46,000 --> 00:56:49,040
and we should either put them behind v7

00:56:48,480 --> 00:56:51,839
or

00:56:49,040 --> 00:56:53,520
not behind v7 it was the question of the

00:56:51,839 --> 00:56:54,799
fundamental way the future of the pearl

00:56:53,520 --> 00:56:57,280
language was going to work

00:56:54,799 --> 00:56:59,760
and now that we have said we are going

00:56:57,280 --> 00:57:03,200
to try to move forward in

00:56:59,760 --> 00:57:05,119
a real a pace that makes real progress

00:57:03,200 --> 00:57:07,839
towards the next version over and over

00:57:05,119 --> 00:57:11,040
and has you opt into the new behavior

00:57:07,839 --> 00:57:12,079
um we we have

00:57:11,040 --> 00:57:13,280
answered the question of whether we're

00:57:12,079 --> 00:57:14,880
going to change defaults and the

00:57:13,280 --> 00:57:16,480
question of what the new behaviors you

00:57:14,880 --> 00:57:18,240
get every year are is something that we

00:57:16,480 --> 00:57:19,280
can decide as we go as opposed to we

00:57:18,240 --> 00:57:26,240
picked exactly these

00:57:19,280 --> 00:57:29,200
these particular things

00:57:26,240 --> 00:57:32,400
as for the question of if you say use

00:57:29,200 --> 00:57:34,160
v534 or 536 or 538 do you only get the

00:57:32,400 --> 00:57:35,599
warnings from that version i'm

00:57:34,160 --> 00:57:37,200
i'm going to bet money right now we're

00:57:35,599 --> 00:57:37,760
not doing that it's a lot of complexity

00:57:37,200 --> 00:57:41,839
for a

00:57:37,760 --> 00:57:41,839
pretty small game

00:57:44,640 --> 00:57:49,280
okay only a couple minutes um

00:57:50,880 --> 00:57:54,079
how are we going to handle rfc periods

00:57:52,480 --> 00:57:57,040
on different topics i don't know

00:57:54,079 --> 00:57:58,960
the rfc thing's really new um you know

00:57:57,040 --> 00:58:04,079
we just the first thing just went out

00:57:58,960 --> 00:58:08,480
um i think the conversation i had with

00:58:04,079 --> 00:58:10,000
nick and neil about this was um

00:58:08,480 --> 00:58:12,240
was about was about making popcorn on

00:58:10,000 --> 00:58:13,839
the microwave um

00:58:12,240 --> 00:58:15,680
generally you stop having the

00:58:13,839 --> 00:58:17,599
conversation when it stops making any

00:58:15,680 --> 00:58:19,040
more kinds of noise right like when you

00:58:17,599 --> 00:58:22,240
when it seems like we're getting

00:58:19,040 --> 00:58:23,359
to the end you you stop um obviously

00:58:22,240 --> 00:58:24,880
that's not always going to work because

00:58:23,359 --> 00:58:26,319
at some point you need to say

00:58:24,880 --> 00:58:27,760
i know there's like still a little bit

00:58:26,319 --> 00:58:28,880
of popping going on in that bag but if i

00:58:27,760 --> 00:58:30,559
let this keep going

00:58:28,880 --> 00:58:32,319
every every kernel in there is going to

00:58:30,559 --> 00:58:33,280
get burned out and you need to stop

00:58:32,319 --> 00:58:35,040
before that

00:58:33,280 --> 00:58:36,559
but when you stop getting when you stop

00:58:35,040 --> 00:58:37,040
think the popping has stopped adding

00:58:36,559 --> 00:58:40,559
value

00:58:37,040 --> 00:58:41,680
you stop um okay uh yeah i

00:58:40,559 --> 00:58:43,119
see michael has answered this question

00:58:41,680 --> 00:58:44,960
but yes i am using a standing a debt

00:58:43,119 --> 00:58:45,839
standing desk this is an uplift desk i

00:58:44,960 --> 00:58:47,599
like it a lot

00:58:45,839 --> 00:58:49,440
uh i like it so much we got it for

00:58:47,599 --> 00:58:50,880
everybody at the company when i go

00:58:49,440 --> 00:58:53,520
to the office i can instead of the same

00:58:50,880 --> 00:58:53,520
thing i have at home

00:58:53,760 --> 00:59:01,839
okay okay uh i think

00:58:58,400 --> 00:59:03,440
we will call it um yeah

00:59:01,839 --> 00:59:05,040
yeah there's michael also calling out

00:59:03,440 --> 00:59:05,839
that i cannot play that banjo behind me

00:59:05,040 --> 00:59:07,200
which is true

00:59:05,839 --> 00:59:08,319
i'm gonna close the chat window because

00:59:07,200 --> 00:59:09,920
this is why i can't open the chat when

00:59:08,319 --> 00:59:12,799
do i start digressing too much

00:59:09,920 --> 00:59:14,240
um thank you everybody i will i'm not

00:59:12,799 --> 00:59:16,079
really gonna be on slack

00:59:14,240 --> 00:59:17,440
um i will be there and probably not

00:59:16,079 --> 00:59:18,720
responding to questions although i might

00:59:17,440 --> 00:59:22,240
look at the backlog

00:59:18,720 --> 00:59:24,880
if you send me questions on

00:59:22,240 --> 00:59:25,359
slack or irc or email i will try to get

00:59:24,880 --> 00:59:26,960
to them

00:59:25,359 --> 00:59:28,000
sometime the next couple days not only

00:59:26,960 --> 00:59:29,920
is the pro conference happening this

00:59:28,000 --> 00:59:30,640
week but grafanacon is also happening

00:59:29,920 --> 00:59:34,480
this week

00:59:30,640 --> 00:59:36,000
and next week as is the uh acm

00:59:34,480 --> 00:59:38,079
pro history of programming languages

00:59:36,000 --> 00:59:39,359
conference so it's it's a crazy week

00:59:38,079 --> 00:59:41,200
and i'm preparing our offices to be

00:59:39,359 --> 00:59:41,920
reinhabited by humans so all right

00:59:41,200 --> 00:59:45,200
thanks everybody

00:59:41,920 --> 00:59:45,200

YouTube URL: https://www.youtube.com/watch?v=FlGpiS39NMY


