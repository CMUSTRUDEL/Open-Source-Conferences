Title: What To Say When They Tell You Perl Sucks!! (Debunking Perl myths) - Pritesh Ugrankar
Publication date: 2021-06-09
Playlist: TPC 2021 in the Cloud
Description: 
	This talk will be based upon the article I had published on LinkedIn where I had debunked Perl myths with facts. Yes, I will be preaching to choir here, but, I want to take this opportunity as a way to thank the Perl Community  and core Perl developers for all their fantastic work.

As someone who frequently dabbles with Perl (albeit intermittently), I was totally aghast by the articles and videos on the internet picturing Perl to be
1) A horrendous language designed to make the life of it's users miserable.
2) A "better alternative to shell scripting"
3) A dying language that no one should touch with a barge pole.
4) A weird mix of the 3 options given above.

In my personal experience, none of the above are true. Perl is a fantastic general purpose language, is far far more powerful than bash/zsh/ etc and is certainly NOT a dying language.

This is my attempt, as a generic Perl User to debunk these myths.
Captions: 
	00:00:01,199 --> 00:00:06,399
uh everyone

00:00:03,360 --> 00:00:07,520
uh the title of my talk is uh what to

00:00:06,399 --> 00:00:12,320
say when they tell you

00:00:07,520 --> 00:00:15,679
paul sucks or debunking uh pearl mitz

00:00:12,320 --> 00:00:16,480
so uh who am i uh my name is pritish

00:00:15,679 --> 00:00:18,960
ogrankar

00:00:16,480 --> 00:00:20,880
i'm from india bangalore i've mostly

00:00:18,960 --> 00:00:22,800
worked in storage domain i'm a

00:00:20,880 --> 00:00:24,400
intermittent fall user i'm currently

00:00:22,800 --> 00:00:27,039
open to work

00:00:24,400 --> 00:00:28,160
the first time i use pearl was in late

00:00:27,039 --> 00:00:30,640
00:00:28,160 --> 00:00:31,599
i used it to add remove colons from

00:00:30,640 --> 00:00:34,399
wwm's

00:00:31,599 --> 00:00:36,000
uh wwens by the way are how hosts and

00:00:34,399 --> 00:00:38,320
storage areas communicate with

00:00:36,000 --> 00:00:39,120
each other over fc fabric i've been

00:00:38,320 --> 00:00:41,200
using pro

00:00:39,120 --> 00:00:43,399
intermittently ever since for automation

00:00:41,200 --> 00:00:46,160
and most recently i used it in november

00:00:43,399 --> 00:00:47,840
2020 to automate uh storage array

00:00:46,160 --> 00:00:49,600
reports and alerts

00:00:47,840 --> 00:00:50,879
the first few scripts i wrote were about

00:00:49,600 --> 00:00:54,719
20 to 30 lines

00:00:50,879 --> 00:00:57,600
mostly rejects no modules no subroutine

00:00:54,719 --> 00:00:58,160
later recently it's been about 200 to

00:00:57,600 --> 00:01:00,559
00:00:58,160 --> 00:01:01,600
lines uh views subroutine and lots of

00:01:00,559 --> 00:01:03,840
modules

00:01:01,600 --> 00:01:05,760
uh something is there are a lot of

00:01:03,840 --> 00:01:07,360
slides in this talk so i'll just mention

00:01:05,760 --> 00:01:09,200
a gist of what's in the slide and keep

00:01:07,360 --> 00:01:12,799
going and i request you to go through

00:01:09,200 --> 00:01:16,799
the slides at your own visual later

00:01:12,799 --> 00:01:19,040
so uh the next point is why this topic

00:01:16,799 --> 00:01:21,119
uh first of all online there were a lot

00:01:19,040 --> 00:01:22,720
of articles youtube videos that

00:01:21,119 --> 00:01:24,159
were constantly dissing called and

00:01:22,720 --> 00:01:25,759
saying it's a horrible language it's

00:01:24,159 --> 00:01:28,159
unreadable and pointed out

00:01:25,759 --> 00:01:29,840
issues and bugs which when i tried i

00:01:28,159 --> 00:01:31,600
found that most of the issues of bugs

00:01:29,840 --> 00:01:33,840
they mentioned were either mitigated

00:01:31,600 --> 00:01:36,000
removed or simply didn't exist

00:01:33,840 --> 00:01:38,640
offline some of my friends wondered why

00:01:36,000 --> 00:01:41,119
i use pearl and not some other language

00:01:38,640 --> 00:01:42,799
uh the last draw though was a youtube

00:01:41,119 --> 00:01:45,520
video with the words uh

00:01:42,799 --> 00:01:47,520
paul sucks in the thumbnail uh by that

00:01:45,520 --> 00:01:48,880
time i had had enough so i published a

00:01:47,520 --> 00:01:51,280
linkedin article uh

00:01:48,880 --> 00:01:53,119
the debunking permits and i received a

00:01:51,280 --> 00:01:54,000
lot of positive comments one of which

00:01:53,119 --> 00:01:56,880
was from matthew

00:01:54,000 --> 00:01:58,000
persico uh who suggested i present it in

00:01:56,880 --> 00:02:00,640
this conference

00:01:58,000 --> 00:02:02,399
and he also suggested the title so just

00:02:00,640 --> 00:02:03,439
want to take the opportunity to thank

00:02:02,399 --> 00:02:06,840
matthew for

00:02:03,439 --> 00:02:08,399
his encouragement and suggestion of the

00:02:06,840 --> 00:02:11,840
title

00:02:08,399 --> 00:02:13,440
so uh what what to say when they tell

00:02:11,840 --> 00:02:15,840
you paul sucks uh this is

00:02:13,440 --> 00:02:18,080
uh this is what has worked for me i

00:02:15,840 --> 00:02:19,760
asked them to give me a specific example

00:02:18,080 --> 00:02:20,640
of specific features of pearl that they

00:02:19,760 --> 00:02:23,040
have issues with

00:02:20,640 --> 00:02:23,920
and most of them won't be able to give

00:02:23,040 --> 00:02:25,280
the specific

00:02:23,920 --> 00:02:27,760
because they haven't even tried the

00:02:25,280 --> 00:02:29,840
language some will give specific

00:02:27,760 --> 00:02:31,120
examples or reasons and i try to address

00:02:29,840 --> 00:02:33,040
those if possible

00:02:31,120 --> 00:02:34,800
some will have preconceived notions or

00:02:33,040 --> 00:02:36,000
won't even know that paul can do most of

00:02:34,800 --> 00:02:38,400
the stuff their language can

00:02:36,000 --> 00:02:40,160
and at times do it better so i show them

00:02:38,400 --> 00:02:41,120
modules features comparable to their

00:02:40,160 --> 00:02:43,760
language

00:02:41,120 --> 00:02:44,879
then i show them uh you know why i like

00:02:43,760 --> 00:02:46,640
call and ask them

00:02:44,879 --> 00:02:48,879
if they're better than poor language has

00:02:46,640 --> 00:02:50,080
those features so this presentation will

00:02:48,879 --> 00:02:51,760
take a similar route

00:02:50,080 --> 00:02:54,000
first it will address the most popular

00:02:51,760 --> 00:02:55,680
myths about pearl then it will show

00:02:54,000 --> 00:02:57,440
matching features or modules with other

00:02:55,680 --> 00:02:58,560
similar languages and then it shows some

00:02:57,440 --> 00:03:00,800
features of pearl

00:02:58,560 --> 00:03:02,239
which in my very limited understanding

00:03:00,800 --> 00:03:06,000
are either unique to pearl

00:03:02,239 --> 00:03:08,560
or fantastic or both so the

00:03:06,000 --> 00:03:10,319
uh most often what i hear about is paul

00:03:08,560 --> 00:03:11,360
is old and are they even the deleting

00:03:10,319 --> 00:03:15,040
blue version so

00:03:11,360 --> 00:03:17,040
paul 5.34 was released this may 20th

00:03:15,040 --> 00:03:18,400
uh the last time i heard this argument

00:03:17,040 --> 00:03:22,000
was from a friend

00:03:18,400 --> 00:03:23,599
it was in december 2020 and we had paul

00:03:22,000 --> 00:03:25,760
5.32 back then

00:03:23,599 --> 00:03:27,280
uh important point is a new poll version

00:03:25,760 --> 00:03:30,640
is released every year

00:03:27,280 --> 00:03:32,239
not many folks know that the next point

00:03:30,640 --> 00:03:33,840
i keep hearing that

00:03:32,239 --> 00:03:36,799
you know it's it's a it's a pain to

00:03:33,840 --> 00:03:38,959
install paul uh

00:03:36,799 --> 00:03:40,560
which is again an absolute lie because

00:03:38,959 --> 00:03:41,760
there are two window specific coil

00:03:40,560 --> 00:03:44,159
distributions out there

00:03:41,760 --> 00:03:45,920
active pearl and strawberry pot and i've

00:03:44,159 --> 00:03:47,760
used strawberry pole myself and it comes

00:03:45,920 --> 00:03:48,799
loaded with all the pole models that i

00:03:47,760 --> 00:03:50,959
need before

00:03:48,799 --> 00:03:52,720
uh if you need something you can use c

00:03:50,959 --> 00:03:55,360
pen m from windows command line just

00:03:52,720 --> 00:03:56,799
like how you use it on unix or linux

00:03:55,360 --> 00:03:59,120
uh the good thing is strawberry pearl

00:03:56,799 --> 00:04:00,799
comes in three flavors uh an exe that

00:03:59,120 --> 00:04:02,640
you can install from or the zipped

00:04:00,799 --> 00:04:04,560
version you can unzip and start using

00:04:02,640 --> 00:04:06,640
so you don't need any admin access and

00:04:04,560 --> 00:04:08,480
you can install multiple versions of all

00:04:06,640 --> 00:04:10,400
in the same system there's also a

00:04:08,480 --> 00:04:12,080
portable version of perl

00:04:10,400 --> 00:04:14,640
strawberry pull that you can run off

00:04:12,080 --> 00:04:16,479
from usb so i just wanted to take this

00:04:14,640 --> 00:04:18,079
opportunity to give a big shout out to

00:04:16,479 --> 00:04:20,239
the strawberry pearl developers

00:04:18,079 --> 00:04:22,160
i just want to thank them for creating

00:04:20,239 --> 00:04:24,080
releasing and maintaining such a high

00:04:22,160 --> 00:04:26,080
quality distribution

00:04:24,080 --> 00:04:28,160
uh the next thing i hear about is paul

00:04:26,080 --> 00:04:29,840
has all this cryptic syntax uh this is

00:04:28,160 --> 00:04:31,040
more of a personal preference because i

00:04:29,840 --> 00:04:33,280
really like dollar for

00:04:31,040 --> 00:04:34,400
scalars ad for arrays and percentage for

00:04:33,280 --> 00:04:37,520
hashes

00:04:34,400 --> 00:04:38,400
uh for example uh it's the type of

00:04:37,520 --> 00:04:40,720
brackets

00:04:38,400 --> 00:04:42,000
that indicate if i want a slice of an

00:04:40,720 --> 00:04:45,040
array or a hash so

00:04:42,000 --> 00:04:47,120
if i am using square brackets uh it

00:04:45,040 --> 00:04:49,280
tells me that i need a slice of an array

00:04:47,120 --> 00:04:50,240
versus if i'm using uh the curly

00:04:49,280 --> 00:04:53,440
brackets

00:04:50,240 --> 00:04:55,199
i need a slice of a hash so that itself

00:04:53,440 --> 00:04:55,759
makes pretty clear what the stuff is all

00:04:55,199 --> 00:04:58,960
about

00:04:55,759 --> 00:05:00,960
i also like a bracket for scopes i like

00:04:58,960 --> 00:05:02,960
semicolon for statement completion and i

00:05:00,960 --> 00:05:04,560
like calls white space ignorance

00:05:02,960 --> 00:05:06,080
because then a tab of space does not

00:05:04,560 --> 00:05:07,919
change scope and i'd rather trace

00:05:06,080 --> 00:05:09,360
curlies than adjust tab spaces to

00:05:07,919 --> 00:05:11,600
troubleshoot code

00:05:09,360 --> 00:05:13,199
also adding testing the code line by

00:05:11,600 --> 00:05:14,960
line is really easy before

00:05:13,199 --> 00:05:16,880
also i don't mind the use of arrow

00:05:14,960 --> 00:05:18,240
instead of a dot and yeah i love

00:05:16,880 --> 00:05:21,759
sticking warnings because

00:05:18,240 --> 00:05:23,520
i added them to an existing script which

00:05:21,759 --> 00:05:25,120
i didn't have them that actually helped

00:05:23,520 --> 00:05:27,680
me fix a lot of issues

00:05:25,120 --> 00:05:29,360
and i also like how my r and you know

00:05:27,680 --> 00:05:32,479
such variables provide

00:05:29,360 --> 00:05:32,960
uh granular scope control so the next

00:05:32,479 --> 00:05:35,440
thing

00:05:32,960 --> 00:05:36,320
i hear is uh you know nested data

00:05:35,440 --> 00:05:38,000
structures are

00:05:36,320 --> 00:05:40,320
either not possible or they are a pain

00:05:38,000 --> 00:05:41,360
and pulse ah the first part is of course

00:05:40,320 --> 00:05:42,960
an outright lie

00:05:41,360 --> 00:05:44,639
yes of course you can have nested data

00:05:42,960 --> 00:05:46,639
structures in perl and as for ease of

00:05:44,639 --> 00:05:48,160
writing them it depends uh whenever i've

00:05:46,639 --> 00:05:49,600
had a data structure that i was trying

00:05:48,160 --> 00:05:51,280
to write and that was way too deeply

00:05:49,600 --> 00:05:52,080
nested i was mostly doing something

00:05:51,280 --> 00:05:55,360
wrong and there was an

00:05:52,080 --> 00:05:56,319
easier way to do it also the perl

00:05:55,360 --> 00:05:58,720
documentation

00:05:56,319 --> 00:05:59,919
uh you can find the links here uh it's

00:05:58,720 --> 00:06:01,919
really fantastic about

00:05:59,919 --> 00:06:03,840
uh data structures on the state data

00:06:01,919 --> 00:06:06,479
structure so i just go through it and

00:06:03,840 --> 00:06:08,319
it takes care of most of the needs uh

00:06:06,479 --> 00:06:08,960
one can also use the built-in data

00:06:08,319 --> 00:06:10,960
damper

00:06:08,960 --> 00:06:13,360
module or the installable data printer

00:06:10,960 --> 00:06:15,039
module to visualize a deeply nested data

00:06:13,360 --> 00:06:17,280
structure and that means

00:06:15,039 --> 00:06:18,720
no one doesn't have to guess so here's

00:06:17,280 --> 00:06:21,520
an example

00:06:18,720 --> 00:06:22,479
uh so in this slide uh it's a nested

00:06:21,520 --> 00:06:25,600
array of uh

00:06:22,479 --> 00:06:27,440
hash of ashes and the data dumper output

00:06:25,600 --> 00:06:28,960
is shown here on the top and the data

00:06:27,440 --> 00:06:29,440
printer output is shown here at the

00:06:28,960 --> 00:06:32,479
bottom

00:06:29,440 --> 00:06:34,720
and notice the you know the coloring

00:06:32,479 --> 00:06:36,800
that you see in data printer comes by

00:06:34,720 --> 00:06:38,000
default but again it's customizable but

00:06:36,800 --> 00:06:39,600
in either case

00:06:38,000 --> 00:06:41,759
it actually gives you a nice view of

00:06:39,600 --> 00:06:43,919
what the data structure actually

00:06:41,759 --> 00:06:45,759
contains

00:06:43,919 --> 00:06:47,600
the next thing and you know this i've

00:06:45,759 --> 00:06:49,840
heard more often than not is

00:06:47,600 --> 00:06:50,639
paul regex is really unreadable well the

00:06:49,840 --> 00:06:52,160
problem is

00:06:50,639 --> 00:06:53,680
rejects by nature itself is not

00:06:52,160 --> 00:06:55,759
particularly readable

00:06:53,680 --> 00:06:56,720
and it's not even a core feature of many

00:06:55,759 --> 00:06:58,880
languages

00:06:56,720 --> 00:07:01,039
but not perl because there's a paul

00:06:58,880 --> 00:07:03,120
compatible regular expressions library

00:07:01,039 --> 00:07:04,479
ecre which is inspired by pearl as the

00:07:03,120 --> 00:07:05,840
name suggests and every other

00:07:04,479 --> 00:07:08,319
programming language is

00:07:05,840 --> 00:07:09,840
language tries to implement it but when

00:07:08,319 --> 00:07:10,720
it comes to reject spell it's just the

00:07:09,840 --> 00:07:12,960
gold standard

00:07:10,720 --> 00:07:15,759
also what i really love about paul is

00:07:12,960 --> 00:07:18,080
writing rejects has been enhanced a lot

00:07:15,759 --> 00:07:19,759
i can use the x modifier that allows

00:07:18,080 --> 00:07:20,800
spaces and comments in the rejects as

00:07:19,759 --> 00:07:24,000
we'll see in a later

00:07:20,800 --> 00:07:25,599
slide or the qr operator which again

00:07:24,000 --> 00:07:27,759
we'll see in the same slide

00:07:25,599 --> 00:07:29,840
now there is use re strict pragma that

00:07:27,759 --> 00:07:30,880
helps prevent rejects watchers and then

00:07:29,840 --> 00:07:33,039
there is a reject

00:07:30,880 --> 00:07:35,360
debugger module which shows how the

00:07:33,039 --> 00:07:37,520
rejects actually executes so

00:07:35,360 --> 00:07:39,599
that takes care of that now the next

00:07:37,520 --> 00:07:40,080
point is paul lacks function signatures

00:07:39,599 --> 00:07:42,479
well

00:07:40,080 --> 00:07:44,319
that's wrong because function signatures

00:07:42,479 --> 00:07:45,199
were introduced way back in qualified or

00:07:44,319 --> 00:07:47,440
00:07:45,199 --> 00:07:49,120
and there's a fantastic talk by mark

00:07:47,440 --> 00:07:51,120
gartner again the link is here

00:07:49,120 --> 00:07:52,400
that speaks about function signatures in

00:07:51,120 --> 00:07:54,639
collect length

00:07:52,400 --> 00:07:56,160
you can also use an anonymous hashes

00:07:54,639 --> 00:07:57,520
while calling the subroutine

00:07:56,160 --> 00:07:59,919
and you can get a somewhat similar

00:07:57,520 --> 00:08:00,720
functionality as shown in the next slide

00:07:59,919 --> 00:08:03,919
or you can use

00:08:00,720 --> 00:08:04,639
prototype so so in this slide there is a

00:08:03,919 --> 00:08:07,759
function called

00:08:04,639 --> 00:08:09,199
get info and uh

00:08:07,759 --> 00:08:10,960
the first time i call it with two

00:08:09,199 --> 00:08:11,360
arguments then with one argument and

00:08:10,960 --> 00:08:13,759
then

00:08:11,360 --> 00:08:15,280
zero arguments and if i have set up the

00:08:13,759 --> 00:08:17,360
parameters correctly

00:08:15,280 --> 00:08:19,599
uh i'll get the desired output the way i

00:08:17,360 --> 00:08:19,599
want

00:08:20,319 --> 00:08:23,840
now the next thing that often comes up

00:08:22,160 --> 00:08:25,360
when i'm discussing it with my friend is

00:08:23,840 --> 00:08:27,280
you know my language has this

00:08:25,360 --> 00:08:28,960
how about paul so they say their

00:08:27,280 --> 00:08:30,720
language has a virtual environment where

00:08:28,960 --> 00:08:33,440
they can install different versions of

00:08:30,720 --> 00:08:34,080
all uh sorry different versions of their

00:08:33,440 --> 00:08:37,120
language

00:08:34,080 --> 00:08:38,800
and i tell them about plenty and pole

00:08:37,120 --> 00:08:40,880
brew that allow you to do the same and

00:08:38,800 --> 00:08:42,560
you don't even need pseudo access

00:08:40,880 --> 00:08:44,320
and then they talk about the central uh

00:08:42,560 --> 00:08:46,640
they prefer packages and that's when i

00:08:44,320 --> 00:08:49,680
gently stop them and i tell them

00:08:46,640 --> 00:08:51,680
you know whatever language they have

00:08:49,680 --> 00:08:53,600
their central repository wasn't surely

00:08:51,680 --> 00:08:55,920
up there before paul because a c

00:08:53,600 --> 00:08:57,839
plan has been a unique feature of

00:08:55,920 --> 00:09:00,720
paulson's ages

00:08:57,839 --> 00:09:02,560
when it comes to testing tools the paul

00:09:00,720 --> 00:09:04,480
community is quite particular about it

00:09:02,560 --> 00:09:07,040
and it strongly encourages testing

00:09:04,480 --> 00:09:07,519
and uh given here are some of the links

00:09:07,040 --> 00:09:11,600
of

00:09:07,519 --> 00:09:13,440
some of the testing modules and there is

00:09:11,600 --> 00:09:15,519
also a tutorial on testing up there on

00:09:13,440 --> 00:09:18,800
cpan so the link is given here

00:09:15,519 --> 00:09:20,800
also regularly there are the modules are

00:09:18,800 --> 00:09:22,399
regularly updated and that link is given

00:09:20,800 --> 00:09:23,839
here too

00:09:22,399 --> 00:09:25,600
the next three points are basically

00:09:23,839 --> 00:09:28,240
about you know different modules that

00:09:25,600 --> 00:09:30,399
i've spoken with my friends about uh one

00:09:28,240 --> 00:09:33,440
of them was sending email over ssl

00:09:30,399 --> 00:09:34,240
or tls another one and this is my

00:09:33,440 --> 00:09:37,920
favorite one

00:09:34,240 --> 00:09:39,440
uh is sshing into unix or linux devices

00:09:37,920 --> 00:09:42,640
or storage arrays

00:09:39,440 --> 00:09:44,959
and net ssh 2 takes care of that and

00:09:42,640 --> 00:09:48,000
there is even a control cli module that

00:09:44,959 --> 00:09:49,839
sort of a wrapper around it and net ssh

00:09:48,000 --> 00:09:51,120
2 comes pre-installed with strawberry

00:09:49,839 --> 00:09:52,959
pull

00:09:51,120 --> 00:09:54,880
also uh you know sometimes you want to

00:09:52,959 --> 00:09:56,640
know if there is some module to

00:09:54,880 --> 00:09:58,800
create excel reports and one of the

00:09:56,640 --> 00:10:01,839
amazing modules that paul has is excel

00:09:58,800 --> 00:10:04,079
writer xlsx when we talk about this cool

00:10:01,839 --> 00:10:04,480
feature that lets them do things with

00:10:04,079 --> 00:10:06,079
lists

00:10:04,480 --> 00:10:08,959
with just one line of code and of course

00:10:06,079 --> 00:10:10,720
paul has had map and grip since forever

00:10:08,959 --> 00:10:12,720
uh using which uh you know we can

00:10:10,720 --> 00:10:15,360
transform a list or filter a list

00:10:12,720 --> 00:10:16,240
uh but the thing is uh all community

00:10:15,360 --> 00:10:20,720
prefers

00:10:16,240 --> 00:10:22,560
uh you know clarity over cleverness

00:10:20,720 --> 00:10:23,839
uh then one more thing they keep saying

00:10:22,560 --> 00:10:25,760
i really don't know why they

00:10:23,839 --> 00:10:27,600
really like it but they say their

00:10:25,760 --> 00:10:29,360
language has a way of writing anonymous

00:10:27,600 --> 00:10:31,920
functions in one line

00:10:29,360 --> 00:10:33,440
well paul has anonymous functions since

00:10:31,920 --> 00:10:35,279
quite a while and you can either write

00:10:33,440 --> 00:10:35,920
it in one line or multiple line and it's

00:10:35,279 --> 00:10:38,320
just a

00:10:35,920 --> 00:10:39,440
it's just far more powerful now code

00:10:38,320 --> 00:10:42,000
completion aware

00:10:39,440 --> 00:10:42,480
editors uh you know that's one thing

00:10:42,000 --> 00:10:44,560
where

00:10:42,480 --> 00:10:45,600
i find commodore edit or ide are

00:10:44,560 --> 00:10:46,959
fantastic and

00:10:45,600 --> 00:10:49,839
there is another one that's come up

00:10:46,959 --> 00:10:53,120
recently called tab 9 and it works with

00:10:49,839 --> 00:10:55,200
vs code bim and many others

00:10:53,120 --> 00:10:58,240
as far as interacting with databases

00:10:55,200 --> 00:11:00,079
there are database modules like dvd pg

00:10:58,240 --> 00:11:03,360
you know also similar available for

00:11:00,079 --> 00:11:04,320
mysql oracle etc and then there is dbix

00:11:03,360 --> 00:11:05,839
class

00:11:04,320 --> 00:11:08,240
now when it comes to web development

00:11:05,839 --> 00:11:10,320
frameworks uh paul has had dancer

00:11:08,240 --> 00:11:11,920
mojolicious and catalyst and these are

00:11:10,320 --> 00:11:13,519
just super cool frameworks i haven't

00:11:11,920 --> 00:11:14,959
tried them but from what i've read they

00:11:13,519 --> 00:11:16,720
are really amazing

00:11:14,959 --> 00:11:18,000
when it comes to object oriented

00:11:16,720 --> 00:11:20,079
programming

00:11:18,000 --> 00:11:21,760
paul's native way of doing it might be

00:11:20,079 --> 00:11:24,320
slightly clunky

00:11:21,760 --> 00:11:25,600
but if you take a look at moves more and

00:11:24,320 --> 00:11:27,360
fewer frameworks they are really

00:11:25,600 --> 00:11:29,200
fabulous and there is a new

00:11:27,360 --> 00:11:30,720
object-oriented framework framework

00:11:29,200 --> 00:11:33,120
coming up football

00:11:30,720 --> 00:11:34,720
uh for parallel processing pearl has

00:11:33,120 --> 00:11:36,640
parallel fork manager

00:11:34,720 --> 00:11:37,839
and there is also something called as

00:11:36,640 --> 00:11:41,200
mini core engine

00:11:37,839 --> 00:11:43,040
uh that's got mce map nce grep nce loop

00:11:41,200 --> 00:11:45,200
and couple other more so

00:11:43,040 --> 00:11:46,480
that takes care of that now when it

00:11:45,200 --> 00:11:48,560
comes to unicode

00:11:46,480 --> 00:11:50,839
uh from my personal experience paul was

00:11:48,560 --> 00:11:52,800
the only language that handled the

00:11:50,839 --> 00:11:55,200
utf-16le unicode

00:11:52,800 --> 00:11:56,639
like a boss no other scripting language

00:11:55,200 --> 00:11:58,560
i tried could handle it

00:11:56,639 --> 00:12:00,399
the fun fact is the cla documentation

00:11:58,560 --> 00:12:02,959
stated that passing the output through

00:12:00,399 --> 00:12:04,959
poll on windows would be buggy but

00:12:02,959 --> 00:12:06,000
they didn't know about paul monks which

00:12:04,959 --> 00:12:09,200
i went to

00:12:06,000 --> 00:12:10,320
and the folks there helped me out which

00:12:09,200 --> 00:12:11,760
brings me to

00:12:10,320 --> 00:12:13,519
uh you know sometimes when i have a

00:12:11,760 --> 00:12:15,040
question where do i go to ask questions

00:12:13,519 --> 00:12:16,720
i tell them perlmas

00:12:15,040 --> 00:12:18,800
uh because the site might be quite

00:12:16,720 --> 00:12:21,120
unassuming in its appearance but it's

00:12:18,800 --> 00:12:22,160
just a fantastic uh fantastic place

00:12:21,120 --> 00:12:24,560
quite resourceful

00:12:22,160 --> 00:12:25,680
the monks there the forum members are

00:12:24,560 --> 00:12:27,440
super helpful

00:12:25,680 --> 00:12:28,720
the answers are really high quality and

00:12:27,440 --> 00:12:31,120
at times they've helped me with code

00:12:28,720 --> 00:12:33,360
snippets that i could use to modify

00:12:31,120 --> 00:12:34,320
not to mention the cold snippets follow

00:12:33,360 --> 00:12:36,480
best practices

00:12:34,320 --> 00:12:38,399
and will often be interspersed with

00:12:36,480 --> 00:12:40,000
light bulb moments and then there is

00:12:38,399 --> 00:12:42,639
stack overflow under it and you can get

00:12:40,000 --> 00:12:42,639
help there too

00:12:46,399 --> 00:12:51,120
when it comes about learning resources

00:12:49,600 --> 00:12:53,040
there are loads of high quality poll

00:12:51,120 --> 00:12:55,040
books the orilli pearl book series

00:12:53,040 --> 00:12:55,519
learning poll intermediate poll advance

00:12:55,040 --> 00:12:58,399
poll

00:12:55,519 --> 00:12:59,680
programming poll etc there's a new

00:12:58,399 --> 00:13:00,959
version of learning poll that is

00:12:59,680 --> 00:13:03,760
scheduled to release

00:13:00,959 --> 00:13:05,760
this august my personal favorite though

00:13:03,760 --> 00:13:08,639
is beginning poll by cortisol with po

00:13:05,760 --> 00:13:09,519
because even i i just went halfway

00:13:08,639 --> 00:13:11,279
through this book

00:13:09,519 --> 00:13:13,760
and i was able to automate a lot of

00:13:11,279 --> 00:13:15,839
stuff at work yeah it was released in

00:13:13,760 --> 00:13:18,399
september 2012 but it's

00:13:15,839 --> 00:13:21,120
extremely resourceful and it's still

00:13:18,399 --> 00:13:24,240
applicable to even 5.34

00:13:21,120 --> 00:13:26,160
so i really owe a lot to this book as

00:13:24,240 --> 00:13:26,800
far as online tutorials are concerned i

00:13:26,160 --> 00:13:28,800
found

00:13:26,800 --> 00:13:29,839
gabriel zumbo's tutorials quite rich in

00:13:28,800 --> 00:13:31,760
content i've

00:13:29,839 --> 00:13:35,040
enrolled for three of his courses and i

00:13:31,760 --> 00:13:37,440
just find that the material is fantastic

00:13:35,040 --> 00:13:39,199
uh the last but not the least is uh you

00:13:37,440 --> 00:13:41,680
know when they say paul is dead

00:13:39,199 --> 00:13:43,360
nobody is using it why are you using it

00:13:41,680 --> 00:13:44,560
well i tell them that paul is one of the

00:13:43,360 --> 00:13:47,040
top 10 well-paid

00:13:44,560 --> 00:13:49,120
languages for recent uh service done by

00:13:47,040 --> 00:13:50,959
god dice and stack overflow

00:13:49,120 --> 00:13:52,959
and pearl is still quite actively used

00:13:50,959 --> 00:13:54,639
for many tasks so

00:13:52,959 --> 00:13:56,240
what i've given below are snippets of

00:13:54,639 --> 00:13:57,760
some of the comments for the same video

00:13:56,240 --> 00:14:00,240
that i spoke about earlier

00:13:57,760 --> 00:14:00,880
if you can see the comments uh it says

00:14:00,240 --> 00:14:02,480
you know

00:14:00,880 --> 00:14:05,199
paul is still being actively used to

00:14:02,480 --> 00:14:06,079
crunch 50 gb plus csv files it's used in

00:14:05,199 --> 00:14:08,399
devops

00:14:06,079 --> 00:14:10,320
finance and trading and the days with

00:14:08,399 --> 00:14:12,399
pearl skill are still in demand so

00:14:10,320 --> 00:14:14,720
seems quite large and kicking for a dead

00:14:12,399 --> 00:14:16,720
language

00:14:14,720 --> 00:14:18,560
now that you've spoken about you know

00:14:16,720 --> 00:14:21,760
feature to feature comparison i

00:14:18,560 --> 00:14:23,440
show them stuff that i like about now

00:14:21,760 --> 00:14:25,440
most of you are experienced folks so you

00:14:23,440 --> 00:14:26,079
might not really find this amazing but

00:14:25,440 --> 00:14:28,560
uh i

00:14:26,079 --> 00:14:30,720
really find this amazing so the range

00:14:28,560 --> 00:14:32,639
operator is something i really like

00:14:30,720 --> 00:14:34,880
uh if you especially if you see the last

00:14:32,639 --> 00:14:36,560
two examples uh you know i can

00:14:34,880 --> 00:14:38,399
sort of generate a sequence by just

00:14:36,560 --> 00:14:39,279
putting the dots in between them and

00:14:38,399 --> 00:14:41,360
that's helped me

00:14:39,279 --> 00:14:42,880
to automate some stuff at work because

00:14:41,360 --> 00:14:44,560
you have a starting device you have an

00:14:42,880 --> 00:14:45,040
inbuilt device and it needs to create

00:14:44,560 --> 00:14:47,120
the stuff

00:14:45,040 --> 00:14:48,160
between those that's where it was

00:14:47,120 --> 00:14:50,160
helpful

00:14:48,160 --> 00:14:51,519
the state variable that remembers its

00:14:50,160 --> 00:14:53,680
state and lets me do

00:14:51,519 --> 00:14:56,000
uh you know some stuff so this is this

00:14:53,680 --> 00:14:57,199
is just a example code but again i use

00:14:56,000 --> 00:14:59,279
state variable

00:14:57,199 --> 00:15:00,399
at so many places and it is just so

00:14:59,279 --> 00:15:03,600
practical

00:15:00,399 --> 00:15:05,199
and it's quite quite clever

00:15:03,600 --> 00:15:07,839
the next thing i like about coal is

00:15:05,199 --> 00:15:10,240
references so the issue was the value of

00:15:07,839 --> 00:15:12,079
all this and hashes were limited to

00:15:10,240 --> 00:15:15,120
being a scalar value

00:15:12,079 --> 00:15:16,880
so what paul actually did and why one of

00:15:15,120 --> 00:15:18,560
the reasons is it took its limitation

00:15:16,880 --> 00:15:20,160
and transformed it into something that's

00:15:18,560 --> 00:15:22,160
really awesome and powerful so

00:15:20,160 --> 00:15:24,959
i can create named references like how

00:15:22,160 --> 00:15:27,839
it's shown here in the slide

00:15:24,959 --> 00:15:28,160
uh which can be accessed like this uh

00:15:27,839 --> 00:15:30,959
and

00:15:28,160 --> 00:15:33,199
here's the newer syntax or similarly i

00:15:30,959 --> 00:15:36,880
can create it for hashes

00:15:33,199 --> 00:15:36,880
and it can be accessed like this

00:15:38,320 --> 00:15:43,920
uh another way to uh declare references

00:15:41,519 --> 00:15:45,920
is anonymous reference wherein

00:15:43,920 --> 00:15:47,279
you don't need either the add the rate

00:15:45,920 --> 00:15:50,000
or the hash

00:15:47,279 --> 00:15:52,160
symbol and instead of the usual brackets

00:15:50,000 --> 00:15:52,560
you use square back brackets for arrays

00:15:52,160 --> 00:15:55,839
and

00:15:52,560 --> 00:15:57,839
curlies for hashes uh

00:15:55,839 --> 00:15:59,920
using the concepts about we can create

00:15:57,839 --> 00:16:02,079
nested data structures

00:15:59,920 --> 00:16:04,240
such as array of arrays hashes of hashes

00:16:02,079 --> 00:16:04,880
array of hashes of hashes and stuff like

00:16:04,240 --> 00:16:07,680
that

00:16:04,880 --> 00:16:09,680
and that's really powerful and we can

00:16:07,680 --> 00:16:12,560
also have references to subroutines

00:16:09,680 --> 00:16:14,399
and one of the uses is for creation of

00:16:12,560 --> 00:16:16,000
closures

00:16:14,399 --> 00:16:17,440
the next thing i like about pearl is of

00:16:16,000 --> 00:16:19,360
course mapping grip so while

00:16:17,440 --> 00:16:20,480
other languages have it i really love

00:16:19,360 --> 00:16:22,639
the way

00:16:20,480 --> 00:16:23,759
paul lets me use it so this is just a

00:16:22,639 --> 00:16:25,680
glimpse of

00:16:23,759 --> 00:16:27,600
you know why it can be used so in this

00:16:25,680 --> 00:16:29,759
example i'm using

00:16:27,600 --> 00:16:31,040
a grip to sort of filter the filter out

00:16:29,759 --> 00:16:34,079
the unwanted content

00:16:31,040 --> 00:16:36,639
and push what i want into a list

00:16:34,079 --> 00:16:37,839
in the next example uh it's just doing

00:16:36,639 --> 00:16:40,160
some uh

00:16:37,839 --> 00:16:42,079
addition and squares on numbers but the

00:16:40,160 --> 00:16:45,199
thing is i can call

00:16:42,079 --> 00:16:45,680
uh a function right from within uh the

00:16:45,199 --> 00:16:50,480
map

00:16:45,680 --> 00:16:52,639
uh sequence so that's what i like about

00:16:50,480 --> 00:16:53,600
again config timing module is something

00:16:52,639 --> 00:16:55,839
that lets me

00:16:53,600 --> 00:16:56,880
create a parents file and then i can

00:16:55,839 --> 00:16:59,360
call it from

00:16:56,880 --> 00:17:01,040
separate scripts like this so if i need

00:16:59,360 --> 00:17:03,040
to do any changes i just do it to the

00:17:01,040 --> 00:17:05,120
parents file

00:17:03,040 --> 00:17:06,400
and the qr operator and the x modifier

00:17:05,120 --> 00:17:10,240
as i spoke earlier

00:17:06,400 --> 00:17:12,000
look how beautiful it is uh it just lets

00:17:10,240 --> 00:17:13,600
me write it in such a clear manner and

00:17:12,000 --> 00:17:14,959
this is actually from a working code

00:17:13,600 --> 00:17:16,799
that i've written

00:17:14,959 --> 00:17:18,799
and the good thing is i can modify it at

00:17:16,799 --> 00:17:20,799
one place and i can keep calling it from

00:17:18,799 --> 00:17:23,679
multiple places i just don't need to

00:17:20,799 --> 00:17:25,919
do it again and again the next thing i

00:17:23,679 --> 00:17:27,919
like about pearl is dispatch tables

00:17:25,919 --> 00:17:29,760
uh like the example shown here there are

00:17:27,919 --> 00:17:31,360
only three uh

00:17:29,760 --> 00:17:33,200
events that are there in this dispatch

00:17:31,360 --> 00:17:35,360
table but imagine if you had more

00:17:33,200 --> 00:17:37,280
functions uh more things to do the

00:17:35,360 --> 00:17:39,840
dispatch tables really make it uh you

00:17:37,280 --> 00:17:42,000
know that simple and easy

00:17:39,840 --> 00:17:44,320
or this is perhaps the most defining

00:17:42,000 --> 00:17:46,240
feature of paul is developing prof which

00:17:44,320 --> 00:17:47,360
is a fabulous source code profiler i've

00:17:46,240 --> 00:17:49,520
used it myself

00:17:47,360 --> 00:17:50,480
and it actually helped me fix slowness

00:17:49,520 --> 00:17:52,799
in a script so

00:17:50,480 --> 00:17:55,120
this shows uh you know how it can be

00:17:52,799 --> 00:17:58,400
called

00:17:55,120 --> 00:18:00,640
and it generates an html file and the

00:17:58,400 --> 00:18:01,120
resulting html file has a flame graph

00:18:00,640 --> 00:18:03,760
and

00:18:01,120 --> 00:18:05,679
it's got uh you know top 15 subroutine

00:18:03,760 --> 00:18:08,720
and

00:18:05,679 --> 00:18:11,520
sports code the line by line sort of

00:18:08,720 --> 00:18:15,120
uh you know uh time line of the source

00:18:11,520 --> 00:18:16,799
code as to how much time it consumes so

00:18:15,120 --> 00:18:18,480
what basically it is is uh this is

00:18:16,799 --> 00:18:20,480
basically just a summary of whatever i

00:18:18,480 --> 00:18:21,520
said so paul is quite a powerful general

00:18:20,480 --> 00:18:24,000
purpose language

00:18:21,520 --> 00:18:25,760
and to not use such a fantastic language

00:18:24,000 --> 00:18:26,640
based on his sage just not that so what

00:18:25,760 --> 00:18:29,360
i tell them is

00:18:26,640 --> 00:18:31,520
uh use it see it if you like it because

00:18:29,360 --> 00:18:33,919
no matter whether they like it or not

00:18:31,520 --> 00:18:36,480
it's a powerful versatile tool in the

00:18:33,919 --> 00:18:36,480
toolkit

00:18:36,559 --> 00:18:43,039
uh any questions oops we have

00:18:40,840 --> 00:18:46,320
already pretest

00:18:43,039 --> 00:18:48,000
yep hey that was that was cool

00:18:46,320 --> 00:18:50,400
i like that then straightened to the

00:18:48,000 --> 00:18:52,720
point um

00:18:50,400 --> 00:18:53,600
i'll send you a couple of things i i

00:18:52,720 --> 00:18:55,760
noticed

00:18:53,600 --> 00:18:56,640
i'll talk about them i'll send you a

00:18:55,760 --> 00:19:00,240
couple things but

00:18:56,640 --> 00:19:03,760
um that was really really good

00:19:00,240 --> 00:19:07,200
thank you chris thank you

00:19:03,760 --> 00:19:08,960
you got it you got an email address here

00:19:07,200 --> 00:19:10,480
i'll find it on there i'll find linkedin

00:19:08,960 --> 00:19:13,120
never mind

00:19:10,480 --> 00:19:13,120
sure sure

00:19:23,280 --> 00:19:26,720
well if nobody has any further questions

00:19:25,679 --> 00:19:28,880
i'd just like to

00:19:26,720 --> 00:19:30,880
thank you for taking your uh for taking

00:19:28,880 --> 00:19:32,880
time to attend this session

00:19:30,880 --> 00:19:34,880
and uh listening to me i know most of

00:19:32,880 --> 00:19:36,000
the stuff that i stated here you might

00:19:34,880 --> 00:19:37,760
have heard but uh

00:19:36,000 --> 00:19:39,760
i just wanted to take this opportunity

00:19:37,760 --> 00:19:42,000
to thank you guys because

00:19:39,760 --> 00:19:43,440
you all have been using perl and so have

00:19:42,000 --> 00:19:46,640
i so

00:19:43,440 --> 00:19:50,320
thanks hey

00:19:46,640 --> 00:19:52,480
uh thank you i i'd love to throw in my

00:19:50,320 --> 00:19:56,000
thanks to you also

00:19:52,480 --> 00:19:59,280
really good um very quick

00:19:56,000 --> 00:20:03,039
uh of you one question for you

00:19:59,280 --> 00:20:06,240
um of the people you've talked

00:20:03,039 --> 00:20:09,679
with that have been critical of pern

00:20:06,240 --> 00:20:15,039
um what what kind of what what's

00:20:09,679 --> 00:20:15,039
like the most common uh pattern you see

00:20:15,200 --> 00:20:21,440
that you recognize that you have seen

00:20:18,320 --> 00:20:24,480
the common dismissal or critique or

00:20:21,440 --> 00:20:25,679
is it relatability or what is that

00:20:24,480 --> 00:20:29,520
you've heard the most

00:20:25,679 --> 00:20:32,799
in in your line of work or

00:20:29,520 --> 00:20:35,120
experience well this is going to sound

00:20:32,799 --> 00:20:37,600
slightly opinionated but uh

00:20:35,120 --> 00:20:38,559
the point is most of the folks that have

00:20:37,600 --> 00:20:41,679
spoken with me

00:20:38,559 --> 00:20:42,799
about you know why am i using pearl very

00:20:41,679 --> 00:20:45,440
few of them had

00:20:42,799 --> 00:20:47,039
certain points to discuss most of them

00:20:45,440 --> 00:20:48,720
hadn't even used pearl and whatever

00:20:47,039 --> 00:20:50,799
language they said they liked was

00:20:48,720 --> 00:20:52,720
something that they liked in theory

00:20:50,799 --> 00:20:54,080
so by the time i had about four or five

00:20:52,720 --> 00:20:55,760
scripts already written

00:20:54,080 --> 00:20:57,360
they were still trying to write scripts

00:20:55,760 --> 00:20:59,679
in the language of their choice which

00:20:57,360 --> 00:21:01,520
was uh i'm not dissing the language but

00:20:59,679 --> 00:21:03,039
because i'm just saying it the language

00:21:01,520 --> 00:21:04,559
that they liked was python

00:21:03,039 --> 00:21:06,080
and for some reason they always kept

00:21:04,559 --> 00:21:08,080
dissing python

00:21:06,080 --> 00:21:09,760
uh sorry get this in perl and saying

00:21:08,080 --> 00:21:11,280
python is a better choice then one of

00:21:09,760 --> 00:21:12,320
those guys also came to me and told me

00:21:11,280 --> 00:21:14,640
hey you know what

00:21:12,320 --> 00:21:16,080
uh python is used a lot in data science

00:21:14,640 --> 00:21:18,480
and machine learning

00:21:16,080 --> 00:21:20,000
i told him dude if i learn python that

00:21:18,480 --> 00:21:20,720
doesn't make me a master in machine

00:21:20,000 --> 00:21:22,320
learning or

00:21:20,720 --> 00:21:23,760
data science it's like you know saying

00:21:22,320 --> 00:21:25,600
that i know excel

00:21:23,760 --> 00:21:27,520
so that makes me a fantastic finance guy

00:21:25,600 --> 00:21:28,559
no it doesn't i'm just a guy who knows

00:21:27,520 --> 00:21:32,159
excel well

00:21:28,559 --> 00:21:32,799
isn't it so i i hope that answers your

00:21:32,159 --> 00:21:34,240
question

00:21:32,799 --> 00:21:36,559
unless you're looking for something else

00:21:34,240 --> 00:21:39,280
specific

00:21:36,559 --> 00:21:39,760
well yeah it answers an interesting

00:21:39,280 --> 00:21:43,200
question

00:21:39,760 --> 00:21:46,720
uh though i was more thinking um

00:21:43,200 --> 00:21:50,640
if you had an idea of the amount of

00:21:46,720 --> 00:21:53,600
people like is it

00:21:50,640 --> 00:21:55,440
people do what kind of critique is the

00:21:53,600 --> 00:21:56,000
most common critique you hear that's

00:21:55,440 --> 00:21:59,120
what i

00:21:56,000 --> 00:22:02,000
try to ask the common critic i hear

00:21:59,120 --> 00:22:03,520
is uh the one that it they say you know

00:22:02,000 --> 00:22:05,039
i've heard paul is dead

00:22:03,520 --> 00:22:07,679
why are you still using it that's the

00:22:05,039 --> 00:22:07,679
common critic

00:22:10,960 --> 00:22:14,880
when i've been talking with people about

00:22:13,200 --> 00:22:18,159
burn uh

00:22:14,880 --> 00:22:21,440
it is kind of the same actually um

00:22:18,159 --> 00:22:26,880
here in where i live in norway um

00:22:21,440 --> 00:22:30,000
and when when i answer them um

00:22:26,880 --> 00:22:30,720
just to add to your point here when i

00:22:30,000 --> 00:22:34,960
answer them

00:22:30,720 --> 00:22:37,120
it's usually well that

00:22:34,960 --> 00:22:39,039
there's a lot going on are you aware

00:22:37,120 --> 00:22:42,320
that there's a lot going on

00:22:39,039 --> 00:22:44,320
um the the

00:22:42,320 --> 00:22:45,440
version numbers you made a point of that

00:22:44,320 --> 00:22:47,840
but it's it's

00:22:45,440 --> 00:22:47,840
it's only

00:22:48,480 --> 00:22:52,320
let's see if i remember my point um

00:22:52,880 --> 00:22:59,520
the the critique about

00:22:56,159 --> 00:23:01,919
not seeing things uh

00:22:59,520 --> 00:23:04,000
might be a problem in that they're not

00:23:01,919 --> 00:23:07,280
looking for it

00:23:04,000 --> 00:23:11,120
crazy and telling

00:23:07,280 --> 00:23:11,679
them that there are plenty of activities

00:23:11,120 --> 00:23:14,080
out there

00:23:11,679 --> 00:23:15,679
if you are interested in actually

00:23:14,080 --> 00:23:17,679
getting informed

00:23:15,679 --> 00:23:19,760
and then helping pointing out prayer

00:23:17,679 --> 00:23:23,120
mongers per monks

00:23:19,760 --> 00:23:26,720
different youtube channels uh

00:23:23,120 --> 00:23:29,280
stack overflow rc channels

00:23:26,720 --> 00:23:30,240
there's there is a lot of stuff going on

00:23:29,280 --> 00:23:34,080
and

00:23:30,240 --> 00:23:37,200
there's also a way to make a mark

00:23:34,080 --> 00:23:40,400
you don't become in the per community

00:23:37,200 --> 00:23:42,640
it's a small community but we punch up

00:23:40,400 --> 00:23:43,679
above our weight mostly because we have

00:23:42,640 --> 00:23:46,880
a lot of

00:23:43,679 --> 00:23:51,039
history that we can use every day that

00:23:46,880 --> 00:23:51,039
is battle proven so to

00:23:52,159 --> 00:23:56,240
is also used in github which everyone

00:23:54,400 --> 00:23:58,000
uses but no one wants to say that you

00:23:56,240 --> 00:24:00,480
know github uses perl

00:23:58,000 --> 00:24:03,039
there's a lot of binding stuff for

00:24:00,480 --> 00:24:04,559
github that is written in paul

00:24:03,039 --> 00:24:06,240
you know people don't want to talk about

00:24:04,559 --> 00:24:09,440
it which is

00:24:06,240 --> 00:24:12,720
yeah i don't know it's like uh

00:24:09,440 --> 00:24:14,559
i don't know no it's i think it's

00:24:12,720 --> 00:24:16,240
really great what you've been doing um

00:24:14,559 --> 00:24:19,360
so keep on

00:24:16,240 --> 00:24:21,600
and uh one

00:24:19,360 --> 00:24:24,080
pattern which i would like to finish and

00:24:21,600 --> 00:24:27,279
then i'll shut up and let somebody else

00:24:24,080 --> 00:24:31,279
add to this that is

00:24:27,279 --> 00:24:34,320
um i've taken myself to

00:24:31,279 --> 00:24:37,919
when to make sure that when i hear

00:24:34,320 --> 00:24:39,919
somebody make a slight or make fun of

00:24:37,919 --> 00:24:43,760
the language or the community

00:24:39,919 --> 00:24:46,960
that they actually hear an opposition

00:24:43,760 --> 00:24:47,679
because there's a it's very easy to let

00:24:46,960 --> 00:24:50,559
people just

00:24:47,679 --> 00:24:51,600
slide and say it's okay like okay it's

00:24:50,559 --> 00:24:55,360
their opinion

00:24:51,600 --> 00:24:58,559
moving on uh but they might

00:24:55,360 --> 00:25:01,200
continue saying things or having a

00:24:58,559 --> 00:25:02,559
a faulty impression or a mistaking

00:25:01,200 --> 00:25:04,880
opinion

00:25:02,559 --> 00:25:06,159
as long as they don't hear any

00:25:04,880 --> 00:25:07,279
opposition they don't get the

00:25:06,159 --> 00:25:10,799
opportunity to

00:25:07,279 --> 00:25:14,400
correct and improve their what they know

00:25:10,799 --> 00:25:18,240
uh and just telling them that like

00:25:14,400 --> 00:25:18,240
this isn't 2000

00:25:19,679 --> 00:25:23,679
this isn't the 2000s anymore like

00:25:22,240 --> 00:25:24,159
there's a lot of good stuff that has

00:25:23,679 --> 00:25:27,679
happened

00:25:24,159 --> 00:25:29,840
so check it out thanks so i'll show up

00:25:27,679 --> 00:25:29,840

YouTube URL: https://www.youtube.com/watch?v=RNuuwHGS5gk


