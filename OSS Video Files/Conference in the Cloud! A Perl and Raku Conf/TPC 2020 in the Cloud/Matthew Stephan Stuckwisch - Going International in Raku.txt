Title: Matthew Stephan Stuckwisch - Going International in Raku
Publication date: 2020-06-26
Playlist: TPC 2020 in the Cloud
Description: 
	Writing software to be used by people in different cultures can be a lot of work, with lots of extra boiler plate in many different languages. But things don’t have to be that difficult or messy. Come to find about the new Raku modules that can make internationalization a painless process. Leave knowing how to work with language tags, localization frameworks, special tokens for regexen, and Unicode’s CLDR in a way that is both fully standards-compliant and 100% Raku-ish.
Captions: 
	00:00:01,560 --> 00:00:07,410
which I think you should be one of these

00:00:05,490 --> 00:00:17,240
things that rock who's really going to

00:00:07,410 --> 00:00:17,240
be very good at in the future and so yes

00:00:17,840 --> 00:00:21,600
so first a little bit about me because

00:00:19,980 --> 00:00:24,300
I've never presented one of these

00:00:21,600 --> 00:00:26,689
Congress before my first tech conference

00:00:24,300 --> 00:00:32,399
I'm not actually a programmer by trade

00:00:26,689 --> 00:00:34,110
I'm actually a medievalist and also I

00:00:32,399 --> 00:00:36,660
really enjoy working with minority

00:00:34,110 --> 00:00:39,110
languages currently learning mere Indies

00:00:36,660 --> 00:00:45,000
which is the other language of Portugal

00:00:39,110 --> 00:00:46,800
and if anybody has any questions about

00:00:45,000 --> 00:00:50,070
this or wants to you know collaborate

00:00:46,800 --> 00:00:53,699
with me on any of these projects pretty

00:00:50,070 --> 00:00:57,300
easy to find me and I absolutely have to

00:00:53,699 --> 00:00:58,920
recommend the raw food channel on IRC is

00:00:57,300 --> 00:01:02,219
one of the best places you can go to get

00:00:58,920 --> 00:01:06,360
to get help just as people said in some

00:01:02,219 --> 00:01:07,950
previous presentations stay online you

00:01:06,360 --> 00:01:09,630
might have to wait a two or three hours

00:01:07,950 --> 00:01:12,720
for somebody to see your message and and

00:01:09,630 --> 00:01:15,180
respond and then you've got traditional

00:01:12,720 --> 00:01:20,540
email addresses there if you if you want

00:01:15,180 --> 00:01:20,540
to contact me so let's get started here

00:01:23,570 --> 00:01:30,180
oh it's now going very quickly so

00:01:28,229 --> 00:01:31,579
Camilla's growing up she's great at

00:01:30,180 --> 00:01:35,299
reading and writing we all know that

00:01:31,579 --> 00:01:37,740
rocku has really good Unicode support

00:01:35,299 --> 00:01:40,439
which is great she's also really good

00:01:37,740 --> 00:01:43,170
with math right we enable rats by

00:01:40,439 --> 00:01:43,909
default which just makes math makes

00:01:43,170 --> 00:01:47,670
sense

00:01:43,909 --> 00:01:48,990
for the average user she's also got

00:01:47,670 --> 00:01:51,869
great metacognition

00:01:48,990 --> 00:01:54,479
it's me is the educator you know there

00:01:51,869 --> 00:01:56,610
but uh you know Jonathan and others can

00:01:54,479 --> 00:01:58,560
talk a lot more about all the really

00:01:56,610 --> 00:02:03,210
cool meta programming and introspection

00:01:58,560 --> 00:02:06,000
that you can do but one thing is she's

00:02:03,210 --> 00:02:10,379
still been kind of stuck working

00:02:06,000 --> 00:02:12,220
generally with English right but now

00:02:10,379 --> 00:02:15,070
she's going abroad

00:02:12,220 --> 00:02:19,810
right but she's still learning and

00:02:15,070 --> 00:02:21,220
growing we have a lot so to do but a lot

00:02:19,810 --> 00:02:25,840
of this stuff I don't know why I just

00:02:21,220 --> 00:02:28,860
jumped there um yeah so anyway

00:02:25,840 --> 00:02:33,600
international stuff is big okay it's

00:02:28,860 --> 00:02:38,080
really big it's also always changing and

00:02:33,600 --> 00:02:40,000
so that's why we have a modules a lot of

00:02:38,080 --> 00:02:42,610
this stuff the way I'm designing it for

00:02:40,000 --> 00:02:44,740
the International module for namespace

00:02:42,610 --> 00:02:48,430
is effectively almost to be like core

00:02:44,740 --> 00:02:50,860
technology except that it can't be if

00:02:48,430 --> 00:02:52,960
you look at language codes the I na the

00:02:50,860 --> 00:02:57,610
ia and a database updates sometimes

00:02:52,960 --> 00:02:59,920
every couple of weeks and cldr has two

00:02:57,610 --> 00:03:02,080
major updates every single year it

00:02:59,920 --> 00:03:04,630
really just can't go into core but it

00:03:02,080 --> 00:03:06,070
works great in module space and we can

00:03:04,630 --> 00:03:08,590
actually with the way that Rock who

00:03:06,070 --> 00:03:13,570
works we can basically almost make it

00:03:08,590 --> 00:03:16,510
work as if it were in core all right but

00:03:13,570 --> 00:03:20,320
there's still a lot to do we're not done

00:03:16,510 --> 00:03:23,100
at all with this work the way I kind of

00:03:20,320 --> 00:03:26,200
think of it is if somebody's going from

00:03:23,100 --> 00:03:29,760
being a kid up to becoming a diplomat we

00:03:26,200 --> 00:03:35,140
kind of have a couple of steps to go and

00:03:29,760 --> 00:03:38,770
Camilla is about here getting ready to

00:03:35,140 --> 00:03:40,150
start her study abroad alright not sure

00:03:38,770 --> 00:03:42,489
if I'd say quite that all of these

00:03:40,150 --> 00:03:44,769
modules are production ready which maybe

00:03:42,489 --> 00:03:49,030
be our next step working abroad but

00:03:44,769 --> 00:03:51,489
we're getting there so let's think about

00:03:49,030 --> 00:03:54,010
oh also so if you use any of these

00:03:51,489 --> 00:03:57,790
please test it out report your issues

00:03:54,010 --> 00:03:59,830
and if you can't Altima contribute that

00:03:57,790 --> 00:04:01,959
you said it's international stuff it's

00:03:59,830 --> 00:04:03,730
big there's lots and lots and lots of

00:04:01,959 --> 00:04:06,220
little things that can be done so if

00:04:03,730 --> 00:04:09,250
anybody wants to jump in it's actually

00:04:06,220 --> 00:04:11,260
not that bad because everything is so

00:04:09,250 --> 00:04:14,380
compartmentalized each like little

00:04:11,260 --> 00:04:17,799
function it's very easy to sort of just

00:04:14,380 --> 00:04:19,090
jump in on on say okay let me I kind of

00:04:17,799 --> 00:04:22,570
want to really do this for my program

00:04:19,090 --> 00:04:23,950
but the modules don't handle it yet so

00:04:22,570 --> 00:04:24,760
you can kind of code something up real

00:04:23,950 --> 00:04:27,730
quick

00:04:24,760 --> 00:04:31,720
and you know add it into the into the

00:04:27,730 --> 00:04:32,860
rest of the modules so a couple of

00:04:31,720 --> 00:04:35,170
common tasks that we have in

00:04:32,860 --> 00:04:36,580
internationalization and these are the

00:04:35,170 --> 00:04:39,700
ones I've been talking about obviously

00:04:36,580 --> 00:04:42,160
there's a lot more but we've got to deal

00:04:39,700 --> 00:04:46,110
with languages the tags selecting

00:04:42,160 --> 00:04:49,530
languages testing things formatting

00:04:46,110 --> 00:04:52,450
especially dates and times numbers

00:04:49,530 --> 00:04:54,730
parsing this is one that I think is

00:04:52,450 --> 00:04:58,960
really where Rock whose strengths are

00:04:54,730 --> 00:05:01,210
going to show and also localization

00:04:58,960 --> 00:05:03,520
which is you know we're presenting our

00:05:01,210 --> 00:05:08,560
different strings for users based on

00:05:03,520 --> 00:05:10,900
their languages so the first module I'm

00:05:08,560 --> 00:05:14,970
going to talk about is international

00:05:10,900 --> 00:05:17,050
cldr and cldr

00:05:14,970 --> 00:05:21,280
so as you haven't worked with it it

00:05:17,050 --> 00:05:23,500
means if it will click here

00:05:21,280 --> 00:05:25,710
crazy large data read no actually it

00:05:23,500 --> 00:05:29,830
doesn't it means common locale data

00:05:25,710 --> 00:05:33,790
repository but it's huge

00:05:29,830 --> 00:05:35,860
I think the just the straight downloaded

00:05:33,790 --> 00:05:37,720
the XML files is something like you know

00:05:35,860 --> 00:05:39,160
30 megabytes or 40 megabytes or

00:05:37,720 --> 00:05:41,950
something like that I mean it's a huge

00:05:39,160 --> 00:05:46,960
amount of you're just straight text data

00:05:41,950 --> 00:05:51,090
to work with but it's pretty easy to

00:05:46,960 --> 00:05:54,730
access in in rocku all you have to do is

00:05:51,090 --> 00:05:56,770
I created a just have a giant hash tree

00:05:54,730 --> 00:05:58,210
that you can get it from and that's all

00:05:56,770 --> 00:06:01,060
you have to do just say use

00:05:58,210 --> 00:06:04,510
international cldr grab the data for the

00:06:01,060 --> 00:06:07,960
language and you can just access this

00:06:04,510 --> 00:06:10,510
hash elements it's a very deep tree as

00:06:07,960 --> 00:06:13,660
you can see but it gives you all this

00:06:10,510 --> 00:06:17,800
data one thing I've been doing more

00:06:13,660 --> 00:06:19,690
recently is adding attribute access the

00:06:17,800 --> 00:06:21,310
main advantage of this is it will be

00:06:19,690 --> 00:06:24,040
much faster

00:06:21,310 --> 00:06:26,080
I think Jonathan's talked at some point

00:06:24,040 --> 00:06:28,590
or at least on IRC about fact that

00:06:26,080 --> 00:06:33,490
attribute access in Araku will always be

00:06:28,590 --> 00:06:35,200
much much faster than using hashes so

00:06:33,490 --> 00:06:37,720
I'm slowly going through the database

00:06:35,200 --> 00:06:38,650
and kind of converting each thing into

00:06:37,720 --> 00:06:42,460
these nice

00:06:38,650 --> 00:06:44,110
objects that will also handle fallbacks

00:06:42,460 --> 00:06:45,669
the way that they're supposed to and so

00:06:44,110 --> 00:06:47,350
that you can go ahead and just grab for

00:06:45,669 --> 00:06:50,830
any language and it might ultimately

00:06:47,350 --> 00:06:55,050
fall back to root but it'll be very

00:06:50,830 --> 00:07:00,370
transparent to you know you the the user

00:06:55,050 --> 00:07:02,229
that said don't access this stuff

00:07:00,370 --> 00:07:06,520
directly unless you're making a module

00:07:02,229 --> 00:07:08,919
all right it's it's just not easy to use

00:07:06,520 --> 00:07:12,789
it's really just a database of

00:07:08,919 --> 00:07:15,250
information and it's much easier to make

00:07:12,789 --> 00:07:17,710
a module or to use a module that's using

00:07:15,250 --> 00:07:24,430
this data as I think you'll see here

00:07:17,710 --> 00:07:26,800
coming up so next thing we've got here

00:07:24,430 --> 00:07:31,660
let's talk about languages when we start

00:07:26,800 --> 00:07:33,250
with language tags now you might have

00:07:31,660 --> 00:07:35,710
used these before I'm sure everybody has

00:07:33,250 --> 00:07:37,509
seen some of them all right and they're

00:07:35,710 --> 00:07:40,180
really simple right

00:07:37,509 --> 00:07:45,520
I mean for example we could do something

00:07:40,180 --> 00:07:47,530
like ca for Catalonian and we get ad on

00:07:45,520 --> 00:07:49,630
an es and just best if I don't know I

00:07:47,530 --> 00:07:50,820
mean Catalonian is spoken in Spain not

00:07:49,630 --> 00:07:54,729
Andorra

00:07:50,820 --> 00:07:58,090
we could even specify Latin script even

00:07:54,729 --> 00:08:00,370
though that's the implied one for it we

00:07:58,090 --> 00:08:07,289
can even give the Valencian variant as

00:08:00,370 --> 00:08:07,289
we would just call Valencian not too bad

00:08:09,500 --> 00:08:18,110
but wait what's that there are further

00:08:14,510 --> 00:08:21,050
extensions to language tags and they all

00:08:18,110 --> 00:08:23,600
have information that can be sometimes

00:08:21,050 --> 00:08:26,150
really good and useful and interesting

00:08:23,600 --> 00:08:30,730
for instance the transformed content one

00:08:26,150 --> 00:08:34,130
we could for instance say add on a chi

00:08:30,730 --> 00:08:37,280
Arab es meaning that this is not just

00:08:34,130 --> 00:08:39,440
Catalonian written or the Valencian from

00:08:37,280 --> 00:08:41,960
Spain written in Latin script but is

00:08:39,440 --> 00:08:44,600
translated from Hebrew written in the

00:08:41,960 --> 00:08:51,730
Arabic script in Spain and yes that

00:08:44,600 --> 00:08:53,810
exists typed on a keyboard

00:08:51,730 --> 00:08:57,700
not just any key word an android

00:08:53,810 --> 00:09:04,490
keyboard an Android Spanish keyboard an

00:08:57,700 --> 00:09:08,450
Android Spanish keyboard from 2015 done

00:09:04,490 --> 00:09:14,990
with Google Translate and it just goes

00:09:08,450 --> 00:09:16,850
on and on and on so it's uh it's a lot

00:09:14,990 --> 00:09:18,770
of stuff I'm sort of dealing with

00:09:16,850 --> 00:09:21,680
language tags you don't want to just

00:09:18,770 --> 00:09:25,880
grab in a string because you it's much

00:09:21,680 --> 00:09:27,890
more difficult to work with it so what

00:09:25,880 --> 00:09:30,460
do we have here in rocku for language

00:09:27,890 --> 00:09:38,750
tags if it will go to the next slide

00:09:30,460 --> 00:09:41,780
there we go so all we have to do is just

00:09:38,750 --> 00:09:44,810
make a new one but then we can find out

00:09:41,780 --> 00:09:46,430
information about it which again will

00:09:44,810 --> 00:09:48,230
make your life easier when you're

00:09:46,430 --> 00:09:50,570
working with these tacks so you don't

00:09:48,230 --> 00:09:52,670
have to try to split it back apart and

00:09:50,570 --> 00:09:55,370
figure out well okay is CMN is that a

00:09:52,670 --> 00:09:57,970
language is that a you know script tag

00:09:55,370 --> 00:10:02,620
it's already all taken care of for you

00:09:57,970 --> 00:10:04,850
you can also make them fairly easily and

00:10:02,620 --> 00:10:06,320
you'll end up with these strings and

00:10:04,850 --> 00:10:09,350
then you can pass in to any other

00:10:06,320 --> 00:10:11,450
application that's asking for a language

00:10:09,350 --> 00:10:15,339
tag and so this is its default string

00:10:11,450 --> 00:10:15,339
off' occation is the canonical forms

00:10:16,480 --> 00:10:20,069
i've also

00:10:18,209 --> 00:10:23,429
a whole bunch of enums that will make

00:10:20,069 --> 00:10:26,249
your life easier so if you wanted to

00:10:23,429 --> 00:10:28,379
talk about Maori if you can't remember

00:10:26,249 --> 00:10:30,749
what the code is for Maori you don't

00:10:28,379 --> 00:10:34,220
have to you can just say hey give me a

00:10:30,749 --> 00:10:36,569
new language tag using these languages

00:10:34,220 --> 00:10:38,160
and eventually I'd like to make it so

00:10:36,569 --> 00:10:39,660
you can just say like language tag new

00:10:38,160 --> 00:10:41,790
and just put in the enums I'm not quite

00:10:39,660 --> 00:10:42,839
sure if I can do as much interesting I'm

00:10:41,790 --> 00:10:45,689
shaky I'm sure I can do that much

00:10:42,839 --> 00:10:49,139
introspection but try now you start to

00:10:45,689 --> 00:10:50,639
use the the named parameters but these

00:10:49,139 --> 00:10:52,319
enums aren't great just for creating

00:10:50,639 --> 00:10:56,699
them they can also make your code a lot

00:10:52,319 --> 00:11:00,269
cleaner like in conditionals so I could

00:10:56,699 --> 00:11:02,220
say something like this say you know

00:11:00,269 --> 00:11:04,559
greetings from reverse gravity land if

00:11:02,220 --> 00:11:07,050
the region equals music in our Australia

00:11:04,559 --> 00:11:09,119
and that's gonna be a lot of times

00:11:07,050 --> 00:11:12,929
especially for if you've got some more

00:11:09,119 --> 00:11:15,149
on languages or regions that won't jump

00:11:12,929 --> 00:11:17,610
out at people immediately this can make

00:11:15,149 --> 00:11:22,459
your code a lot cleaner and a lot much

00:11:17,610 --> 00:11:25,679
much much easier to read all right

00:11:22,459 --> 00:11:30,179
another thing we want to do is choosing

00:11:25,679 --> 00:11:34,319
the language for user right so as people

00:11:30,179 --> 00:11:37,160
now are using your core reading some of

00:11:34,319 --> 00:11:41,730
these other programs as you're making

00:11:37,160 --> 00:11:42,929
web applications a lot have you you've

00:11:41,730 --> 00:11:44,069
got to choose a language for the user

00:11:42,929 --> 00:11:45,809
and the user will give you some

00:11:44,069 --> 00:11:48,779
languages and then you've got to kind of

00:11:45,809 --> 00:11:53,100
make a best fit so this is already built

00:11:48,779 --> 00:11:55,740
in to the language tag and so all you

00:11:53,100 --> 00:11:57,179
have to do is determine whatever program

00:11:55,740 --> 00:12:01,889
or whatever language is your program

00:11:57,179 --> 00:12:03,449
house and then grab your user languages

00:12:01,889 --> 00:12:05,790
I'm going to talk about that function in

00:12:03,449 --> 00:12:09,240
a little bit here and then you just say

00:12:05,790 --> 00:12:10,889
hey look up language tag I don't

00:12:09,240 --> 00:12:12,839
necessarily like the naming of this

00:12:10,889 --> 00:12:15,389
subroutine as much but that's this the

00:12:12,839 --> 00:12:18,540
the standard that I'm following that's

00:12:15,389 --> 00:12:20,730
the term they use for it is lookup so I

00:12:18,540 --> 00:12:21,929
just I try to as much as I can when I'm

00:12:20,730 --> 00:12:25,669
doing some of these things I try to

00:12:21,929 --> 00:12:28,529
match up with the terminology used by um

00:12:25,669 --> 00:12:31,130
by the different standards in this case

00:12:28,529 --> 00:12:33,760
it's the the bcp 47

00:12:31,130 --> 00:12:37,130
has determined how to do that um

00:12:33,760 --> 00:12:38,720
anything else to do in the plural

00:12:37,130 --> 00:12:41,180
this one actually give you ranked

00:12:38,720 --> 00:12:43,910
ordering so if for whatever reason

00:12:41,180 --> 00:12:46,910
you've got maybe all of your resources

00:12:43,910 --> 00:12:48,230
aren't available for every language and

00:12:46,910 --> 00:12:52,370
sometime you want to be able to fall

00:12:48,230 --> 00:12:54,440
back to maybe a second locale then you

00:12:52,370 --> 00:12:57,140
can use the the plural version of it and

00:12:54,440 --> 00:13:02,840
in fact really use the singular one it's

00:12:57,140 --> 00:13:07,150
just some tactical sugar so another big

00:13:02,840 --> 00:13:10,820
important module here is user language

00:13:07,150 --> 00:13:12,560
it's dirt simple to use you just say use

00:13:10,820 --> 00:13:14,630
international user language and you can

00:13:12,560 --> 00:13:16,580
grab the top language preferred language

00:13:14,630 --> 00:13:19,310
for a user or you can grab a whole list

00:13:16,580 --> 00:13:22,250
of them if that's available for their

00:13:19,310 --> 00:13:25,070
system the only catch here is that we

00:13:22,250 --> 00:13:28,070
have to add the support part on on a per

00:13:25,070 --> 00:13:29,630
operating system basis so please check

00:13:28,070 --> 00:13:31,780
and see if it works on your system I've

00:13:29,630 --> 00:13:34,760
tested it on a couple builds of Linux

00:13:31,780 --> 00:13:39,050
I've got my Mac at home and I've tested

00:13:34,760 --> 00:13:40,490
my Windows machine at work but if for

00:13:39,050 --> 00:13:43,070
whatever reason doesn't and it just

00:13:40,490 --> 00:13:46,040
falls back to English which is sort of

00:13:43,070 --> 00:13:47,210
the default default language file an

00:13:46,040 --> 00:13:49,010
issue and github and let's get it

00:13:47,210 --> 00:13:51,350
figured out I really want to make this

00:13:49,010 --> 00:13:53,960
be the one-stop shop for determining a

00:13:51,350 --> 00:13:57,110
user language or the preferred language

00:13:53,960 --> 00:13:58,130
the user wants to have but there's one

00:13:57,110 --> 00:14:03,950
other little thing that user language

00:13:58,130 --> 00:14:09,920
will do for us which is if it will move

00:14:03,950 --> 00:14:12,200
to the next slide for me why is it stuck

00:14:09,920 --> 00:14:17,390
oh yeah

00:14:12,200 --> 00:14:21,110
all right okay you can also when you

00:14:17,390 --> 00:14:24,140
import this module you can include the

00:14:21,110 --> 00:14:26,690
name primer over run and this will add

00:14:24,140 --> 00:14:29,690
one more function into your code and you

00:14:26,690 --> 00:14:31,910
can say override user languages and what

00:14:29,690 --> 00:14:33,500
this will do is anytime now you make a

00:14:31,910 --> 00:14:35,870
call to use your language or use your

00:14:33,500 --> 00:14:38,180
languages it will use this instead

00:14:35,870 --> 00:14:39,890
regardless of what your system has and

00:14:38,180 --> 00:14:43,700
so if you're wanting to test if a user

00:14:39,890 --> 00:14:44,810
says hey I'm just doing some weird stuff

00:14:43,700 --> 00:14:49,430
for whatever

00:14:44,810 --> 00:14:50,360
I'm you know I've got my system is in

00:14:49,430 --> 00:14:52,610
Kenya and Swahili

00:14:50,360 --> 00:14:56,360
great you can use this and try to check

00:14:52,610 --> 00:14:57,650
and see what's going on with it and then

00:14:56,360 --> 00:15:01,520
you can clear the look override if you

00:14:57,650 --> 00:15:02,990
need to one kind of thing to point out

00:15:01,520 --> 00:15:05,420
about this is these overrides do have

00:15:02,990 --> 00:15:06,650
global effect and I've been trying to

00:15:05,420 --> 00:15:08,630
figure out a way to lexically scoped

00:15:06,650 --> 00:15:11,570
these but I've not quite been entirely

00:15:08,630 --> 00:15:15,710
successful with that yet so not a huge

00:15:11,570 --> 00:15:16,070
deal but just kind of be aware of it all

00:15:15,710 --> 00:15:17,960
right

00:15:16,070 --> 00:15:21,950
another thing we have is formatting

00:15:17,960 --> 00:15:25,010
stuff so the first formatter I may talk

00:15:21,950 --> 00:15:27,830
about is lists and all this stuff is

00:15:25,010 --> 00:15:29,360
grabbing data out of cldr but means you

00:15:27,830 --> 00:15:32,690
don't have to deal with all the the

00:15:29,360 --> 00:15:33,820
crazy stuff but I'm kind of curious is

00:15:32,690 --> 00:15:38,060
how many people have maybe done

00:15:33,820 --> 00:15:39,560
something like this before you get a

00:15:38,060 --> 00:15:42,050
list you want to present it to the user

00:15:39,560 --> 00:15:45,589
and you want to say you know Apple comma

00:15:42,050 --> 00:15:46,940
a banana comma and orange right and so

00:15:45,589 --> 00:15:48,980
you've probably done something you said

00:15:46,940 --> 00:15:51,260
join them up with commas for all of them

00:15:48,980 --> 00:15:53,540
except for the last one then you add in

00:15:51,260 --> 00:15:55,130
another comma and then an and unless

00:15:53,540 --> 00:15:57,980
you're an evil person and you don't use

00:15:55,130 --> 00:16:04,100
the Oxford comma and then you add in the

00:15:57,980 --> 00:16:06,770
last item but just know that's ugly

00:16:04,100 --> 00:16:08,050
don't don't do that alright don't make

00:16:06,770 --> 00:16:13,250
your life harder than it needs to be

00:16:08,050 --> 00:16:17,540
alright by using this formatter all we

00:16:13,250 --> 00:16:19,070
have to say is format list and these are

00:16:17,540 --> 00:16:22,970
the defaults that are in other

00:16:19,070 --> 00:16:25,760
applications that use this namely ICU is

00:16:22,970 --> 00:16:26,660
to default to and but there are other

00:16:25,760 --> 00:16:31,339
versions of it

00:16:26,660 --> 00:16:34,400
we can use or or we can use a unit which

00:16:31,339 --> 00:16:35,720
doesn't is kind of neutral to it and

00:16:34,400 --> 00:16:37,610
this is one of these things where I say

00:16:35,720 --> 00:16:40,130
that even if you're not necessarily

00:16:37,610 --> 00:16:41,870
making your program be used for other

00:16:40,130 --> 00:16:44,180
languages this is something that can

00:16:41,870 --> 00:16:45,830
help you out in a purely 100% English

00:16:44,180 --> 00:16:47,570
environment right you don't have to

00:16:45,830 --> 00:16:48,709
reinvent the will but you can use these

00:16:47,570 --> 00:16:51,380
technologies that are designed for

00:16:48,709 --> 00:16:57,050
internationalization and just use them

00:16:51,380 --> 00:16:57,290
in in a monolingual program and so this

00:16:57,050 --> 00:16:59,030
is

00:16:57,290 --> 00:17:01,790
the which you would get if we did this

00:16:59,030 --> 00:17:04,520
in English alright but we can also

00:17:01,790 --> 00:17:09,260
change this to Spanish and you can see

00:17:04,520 --> 00:17:11,060
how it changes the the formatting one

00:17:09,260 --> 00:17:13,880
thing to point out is that it's not

00:17:11,060 --> 00:17:16,339
entirely aware of everything that's

00:17:13,880 --> 00:17:17,839
going on when the people who write the

00:17:16,339 --> 00:17:19,010
database do this they do it for the most

00:17:17,839 --> 00:17:21,890
generic things so those of you know

00:17:19,010 --> 00:17:23,209
Spanish sometimes the Y and the oh there

00:17:21,890 --> 00:17:25,010
can change to other letters

00:17:23,209 --> 00:17:29,030
it won't do that for you it's not quite

00:17:25,010 --> 00:17:30,890
that smart we also do it for Arabic I'm

00:17:29,030 --> 00:17:36,140
assuming this is alright I don't speak

00:17:30,890 --> 00:17:37,820
Arabic we do it for Cherokee and there's

00:17:36,140 --> 00:17:40,040
a couple of different types basically it

00:17:37,820 --> 00:17:43,100
just make it shorter or narrower most of

00:17:40,040 --> 00:17:45,080
the time for in the case it's like

00:17:43,100 --> 00:17:46,100
English or span of the the European

00:17:45,080 --> 00:17:49,100
language or won't do much of a

00:17:46,100 --> 00:17:51,830
difference but in a lot of the Eastern

00:17:49,100 --> 00:17:53,570
languages the Asian languages the narrow

00:17:51,830 --> 00:17:56,590
and shorter forms can actually save you

00:17:53,570 --> 00:18:01,010
a little bit more space if you're really

00:17:56,590 --> 00:18:05,060
pressed for first base next we've got

00:18:01,010 --> 00:18:07,010
the number formatter and this again is

00:18:05,060 --> 00:18:09,620
one of those things where if you're

00:18:07,010 --> 00:18:11,540
writing a monolingual program that's

00:18:09,620 --> 00:18:13,460
fine this will still help you out even

00:18:11,540 --> 00:18:16,250
you can still do some really nice things

00:18:13,460 --> 00:18:17,990
with it but then you're also set up if

00:18:16,250 --> 00:18:19,190
you need to go to another language so we

00:18:17,990 --> 00:18:23,600
just start off saying use international

00:18:19,190 --> 00:18:28,400
format numbers and let's just give

00:18:23,600 --> 00:18:31,940
ourselves a totally random number and we

00:18:28,400 --> 00:18:33,950
just say format number that's it and our

00:18:31,940 --> 00:18:37,490
defaults kick in oh wait this is alright

00:18:33,950 --> 00:18:39,260
this is assuming my system is Amna I got

00:18:37,490 --> 00:18:43,120
these back backwards all my examples

00:18:39,260 --> 00:18:45,350
sorry that's the example for Spanish and

00:18:43,120 --> 00:18:47,300
then that's actually the example for

00:18:45,350 --> 00:18:49,700
English that's my mistake

00:18:47,300 --> 00:18:53,930
um but you even specify the language and

00:18:49,700 --> 00:18:56,150
override it if you want okay you can

00:18:53,930 --> 00:18:58,370
also switch to sometimes languages have

00:18:56,150 --> 00:19:01,730
totally different scripts so if we go to

00:18:58,370 --> 00:19:05,080
Burmese you see we still get the number

00:19:01,730 --> 00:19:10,130
formatted but in a completely different

00:19:05,080 --> 00:19:11,000
decimal system but our options aren't

00:19:10,130 --> 00:19:14,240
limited to just

00:19:11,000 --> 00:19:15,980
language right we can also use

00:19:14,240 --> 00:19:18,440
scientific numbers and so this is

00:19:15,980 --> 00:19:22,850
actually the exponential notation for

00:19:18,440 --> 00:19:25,060
Arabic there's a couple other types we

00:19:22,850 --> 00:19:27,260
have we can also do percentages and

00:19:25,060 --> 00:19:29,800
engineering notation engineering

00:19:27,260 --> 00:19:32,390
notation is the same as scientific but

00:19:29,800 --> 00:19:35,240
instead of doing one digit and then the

00:19:32,390 --> 00:19:38,270
decimal and then setting the power based

00:19:35,240 --> 00:19:40,220
on that it makes sure things are grouped

00:19:38,270 --> 00:19:44,470
on the exponents always in a power of

00:19:40,220 --> 00:19:47,060
three Arab but multiple of three a

00:19:44,470 --> 00:19:48,650
couple options and some defaults that we

00:19:47,060 --> 00:19:50,150
have here is the language will default

00:19:48,650 --> 00:19:52,160
to use your language which is why I say

00:19:50,150 --> 00:19:54,200
that user language module is so

00:19:52,160 --> 00:19:58,610
important to please test it on your

00:19:54,200 --> 00:20:01,760
system system is the decimal system that

00:19:58,610 --> 00:20:03,800
it will use or the the numbering system

00:20:01,760 --> 00:20:05,540
that we'll use right now I've just got

00:20:03,800 --> 00:20:08,750
support for the decimal ones but there

00:20:05,540 --> 00:20:11,660
are some others that exist that are

00:20:08,750 --> 00:20:14,510
algorithmically based and those will

00:20:11,660 --> 00:20:15,860
hopefully be coming soon you can also to

00:20:14,510 --> 00:20:17,120
count this one

00:20:15,860 --> 00:20:21,320
you're probably rarely gonna use which

00:20:17,120 --> 00:20:23,270
is why I put it in in gray here that one

00:20:21,320 --> 00:20:24,770
certainly when we when you start doing

00:20:23,270 --> 00:20:26,060
like ordinals and some other stuff some

00:20:24,770 --> 00:20:29,060
of these numbers will change a little

00:20:26,060 --> 00:20:34,970
bit based on some other things that can

00:20:29,060 --> 00:20:36,920
be around them and then pattern is the

00:20:34,970 --> 00:20:38,810
actual like formatting pattern

00:20:36,920 --> 00:20:41,330
I really would kind of play around with

00:20:38,810 --> 00:20:43,250
this because it's a kind of a weird

00:20:41,330 --> 00:20:46,150
format to use but if you want to go and

00:20:43,250 --> 00:20:49,280
learn it the notation that's used for it

00:20:46,150 --> 00:20:54,980
it's worse than like you know string

00:20:49,280 --> 00:21:00,200
formatting anyway so those are numbers

00:20:54,980 --> 00:21:05,750
that we can format will move me forward

00:21:00,200 --> 00:21:08,480
here we've got dates these currently

00:21:05,750 --> 00:21:12,230
only support the Gregorian calendar that

00:21:08,480 --> 00:21:17,960
is something I'm hoping to fix down the

00:21:12,230 --> 00:21:19,460
road but calendar math is not easy not

00:21:17,960 --> 00:21:20,810
only not easy it's not always precise

00:21:19,460 --> 00:21:25,130
you can't always be a hundred percent

00:21:20,810 --> 00:21:28,669
sure of conversions but anyway so this

00:21:25,130 --> 00:21:31,490
grab a date and kind of see what we can

00:21:28,669 --> 00:21:32,149
do with this so just say grab my

00:21:31,490 --> 00:21:37,309
formatter

00:21:32,149 --> 00:21:39,830
and to say format time 5:06 p.m. and in

00:21:37,309 --> 00:21:44,990
cldr the way specified the default for

00:21:39,830 --> 00:21:46,789
english is to use 12-hour time but if we

00:21:44,990 --> 00:21:48,500
want it to be shorter we're again we're

00:21:46,789 --> 00:21:49,909
pressed for space or something we can

00:21:48,500 --> 00:21:52,159
use this one

00:21:49,909 --> 00:21:56,529
just give it a length of short and now

00:21:52,159 --> 00:22:01,070
it's is 506 p.m. we also do dates

00:21:56,529 --> 00:22:03,409
so I'll grab that same date time but now

00:22:01,070 --> 00:22:09,139
just you format date and it'll pop out

00:22:03,409 --> 00:22:12,320
November 24th 1984 or I can do date and

00:22:09,139 --> 00:22:14,080
time together and I get the two of them

00:22:12,320 --> 00:22:16,639
combined

00:22:14,080 --> 00:22:19,399
and so again you're writing a

00:22:16,639 --> 00:22:21,289
monolingual program you know this is a

00:22:19,399 --> 00:22:23,480
much cleaner output for date/time than

00:22:21,289 --> 00:22:27,080
you get if you've if you've just made

00:22:23,480 --> 00:22:33,440
date/time new in you know in a normal

00:22:27,080 --> 00:22:35,059
script in in koraku-en of a standardized

00:22:33,440 --> 00:22:37,340
is a representation of it that's not

00:22:35,059 --> 00:22:40,549
very clean not very readable this is so

00:22:37,340 --> 00:22:42,289
using this using these international

00:22:40,549 --> 00:22:44,179
modules will just help monolingual code

00:22:42,289 --> 00:22:47,570
and get you prepped in case you want to

00:22:44,179 --> 00:22:51,230
go international later there's also some

00:22:47,570 --> 00:22:54,279
variants on it we can go longer and we

00:22:51,230 --> 00:22:54,279
can go really long

00:22:54,549 --> 00:22:59,330
now some forming films aren't quite yet

00:22:57,259 --> 00:23:00,470
supported like time zones so these the

00:22:59,330 --> 00:23:03,559
full one for instance would have

00:23:00,470 --> 00:23:04,970
included the time zone on it if you hit

00:23:03,559 --> 00:23:07,210
those you might get a little warning

00:23:04,970 --> 00:23:09,110
that says it's been unimplemented yet

00:23:07,210 --> 00:23:11,240
time zones are kind of been an

00:23:09,110 --> 00:23:15,889
interesting issue for dealing with

00:23:11,240 --> 00:23:17,929
because rocku in the date time only

00:23:15,889 --> 00:23:20,110
includes the time zone offset does then

00:23:17,929 --> 00:23:23,840
actually include the specific time zone

00:23:20,110 --> 00:23:26,720
and kind of had a little debate on on

00:23:23,840 --> 00:23:28,299
the the RockYou problem solving so

00:23:26,720 --> 00:23:30,590
whether that should be done or not

00:23:28,299 --> 00:23:33,200
ultimately decided not to because like i

00:23:30,590 --> 00:23:35,659
mentioned before this international

00:23:33,200 --> 00:23:38,240
stuff it's constantly changing and so

00:23:35,659 --> 00:23:38,900
times an offset won't ever change but a

00:23:38,240 --> 00:23:42,890
specific

00:23:38,900 --> 00:23:44,750
time zone can and it's not necessarily

00:23:42,890 --> 00:23:46,100
stable so it's not in core I'm kind of

00:23:44,750 --> 00:23:47,210
trying to think of some solutions for

00:23:46,100 --> 00:23:48,650
how we can deal with that in the

00:23:47,210 --> 00:23:54,500
international one if you have any ideas

00:23:48,650 --> 00:23:59,110
please you know let's talk so let's

00:23:54,500 --> 00:24:01,880
continue on we can look at these if my

00:23:59,110 --> 00:24:06,350
don't know why the clicking is not going

00:24:01,880 --> 00:24:07,760
here so we can also look at this change

00:24:06,350 --> 00:24:10,190
the language and you can kind of see

00:24:07,760 --> 00:24:13,610
some of the differences so if I have a

00:24:10,190 --> 00:24:17,990
string for instance you'll see that how

00:24:13,610 --> 00:24:21,130
it's all of its defaults are we can go

00:24:17,990 --> 00:24:24,560
from Austria would go into Bengali and

00:24:21,130 --> 00:24:26,840
you can see it'll change up the format

00:24:24,560 --> 00:24:29,000
for a lot of different languages the

00:24:26,840 --> 00:24:31,970
kind of the standard length and the long

00:24:29,000 --> 00:24:33,470
links are the same you see that here

00:24:31,970 --> 00:24:38,060
with Mandarin for instance there's

00:24:33,470 --> 00:24:43,880
they're the same you know or we can go

00:24:38,060 --> 00:24:45,200
to Dutch so we've got all those

00:24:43,880 --> 00:24:46,910
different versions that we can do and

00:24:45,200 --> 00:24:50,000
all you do is just change the language

00:24:46,910 --> 00:24:54,100
or the user has their default language

00:24:50,000 --> 00:24:56,450
and we make it nice for them alright um

00:24:54,100 --> 00:24:58,010
so that's the four matters that I have

00:24:56,450 --> 00:25:00,320
right now hopefully I'll be getting more

00:24:58,010 --> 00:25:02,360
of them but now I want to talk about

00:25:00,320 --> 00:25:06,380
probably one of my favorite bits which

00:25:02,360 --> 00:25:08,960
is the tokens and these are common reg X

00:25:06,380 --> 00:25:12,850
tasks made easy and this is where I

00:25:08,960 --> 00:25:19,550
think really rocku shines so right now

00:25:12,850 --> 00:25:24,110
what we have available are digits got

00:25:19,550 --> 00:25:26,240
alphas punctuation and numbers which is

00:25:24,110 --> 00:25:30,050
my absolute favorite all right

00:25:26,240 --> 00:25:31,970
and what these do is they function as

00:25:30,050 --> 00:25:34,490
sort of eight like the name suggests a

00:25:31,970 --> 00:25:36,950
localized version of these character

00:25:34,490 --> 00:25:39,740
classes right we've all used digit alpha

00:25:36,950 --> 00:25:44,510
up or lower punked at some point when

00:25:39,740 --> 00:25:47,000
we've written reg X's but they have a

00:25:44,510 --> 00:25:51,360
scope that some times larger than we

00:25:47,000 --> 00:25:53,790
want all right so if we look at digit

00:25:51,360 --> 00:25:55,980
it's really just zero to nine and at

00:25:53,790 --> 00:25:58,920
least on my system my systems that use

00:25:55,980 --> 00:26:02,190
your Latin script for everything but if

00:25:58,920 --> 00:26:04,470
you use digit digit doesn't just capture

00:26:02,190 --> 00:26:07,380
zero to nine it captures zero to nine it

00:26:04,470 --> 00:26:09,690
captures you know all the other

00:26:07,380 --> 00:26:11,190
different decimal systems that are in

00:26:09,690 --> 00:26:13,200
existence and there's probably I think

00:26:11,190 --> 00:26:15,420
right now in cotr there's about 30 of

00:26:13,200 --> 00:26:17,130
them that are defined so your options

00:26:15,420 --> 00:26:18,450
aren't just ten digits that you're gonna

00:26:17,130 --> 00:26:20,670
capture you're gonna capture potentially

00:26:18,450 --> 00:26:23,480
300 different characters and that's

00:26:20,670 --> 00:26:27,080
sometimes probably not what you want so

00:26:23,480 --> 00:26:29,970
if you're in English yet zero to nine

00:26:27,080 --> 00:26:32,010
right if you're in Arabic it'll default

00:26:29,970 --> 00:26:34,110
to just their versions of the digits if

00:26:32,010 --> 00:26:36,510
you're in Lord B go get a slightly

00:26:34,110 --> 00:26:44,730
different version of the Arabic script

00:26:36,510 --> 00:26:47,640
digits and so forth and so on there are

00:26:44,730 --> 00:26:50,480
a couple options for it and again this

00:26:47,640 --> 00:26:53,280
is kind of a cool thing I think a lot

00:26:50,480 --> 00:26:54,900
with doing passing arguments into tokens

00:26:53,280 --> 00:26:57,390
and I think it's a something that

00:26:54,900 --> 00:26:59,480
definitely should be done more often so

00:26:57,390 --> 00:27:01,559
you can specify a language if you want

00:26:59,480 --> 00:27:05,190
again it will just default to user

00:27:01,559 --> 00:27:09,450
language and then there's a type which

00:27:05,190 --> 00:27:10,830
defaults to default but you can see the

00:27:09,450 --> 00:27:15,440
difference if my user language is

00:27:10,830 --> 00:27:21,570
English local digit will equate to those

00:27:15,440 --> 00:27:25,799
but if I specify Telugu default it

00:27:21,570 --> 00:27:31,020
actually does zero to nine but I can add

00:27:25,799 --> 00:27:34,020
in type native and now I have the native

00:27:31,020 --> 00:27:35,809
system for the language there are a

00:27:34,020 --> 00:27:39,049
couple of other types that are defined

00:27:35,809 --> 00:27:40,950
traditional financial and broad

00:27:39,049 --> 00:27:43,710
traditional sometimes might have an

00:27:40,950 --> 00:27:47,190
algorithmic system so down the road when

00:27:43,710 --> 00:27:49,530
I get say like Roman numerals put in and

00:27:47,190 --> 00:27:50,970
you do Latin you could say Latin and

00:27:49,530 --> 00:27:53,549
giving me the traditional numbers and

00:27:50,970 --> 00:27:55,790
hopefully if everything works fine to be

00:27:53,549 --> 00:27:59,640
able to detect the Roman numerals

00:27:55,790 --> 00:28:02,340
although since I is one you might grab a

00:27:59,640 --> 00:28:04,290
little more than you want and then broad

00:28:02,340 --> 00:28:05,220
is one that I've done added in myself

00:28:04,290 --> 00:28:06,780
which will

00:28:05,220 --> 00:28:08,550
all of them you know grapple with

00:28:06,780 --> 00:28:10,260
financial digits in some of the Asian

00:28:08,550 --> 00:28:13,740
languages you have slightly different

00:28:10,260 --> 00:28:15,480
forms for financial transactions you'll

00:28:13,740 --> 00:28:20,040
grab the default which in most cases is

00:28:15,480 --> 00:28:25,820
either Latin or Arabic and also the

00:28:20,040 --> 00:28:28,020
native system next we have alpha and

00:28:25,820 --> 00:28:29,610
this is when you only want to grab the

00:28:28,020 --> 00:28:32,100
core alphabetical characters for

00:28:29,610 --> 00:28:34,410
language again if you've used just the

00:28:32,100 --> 00:28:36,630
token alpha you know it's a little bit

00:28:34,410 --> 00:28:40,170
broader probably then you won't want it

00:28:36,630 --> 00:28:43,170
to be because it will grab not just a 2z

00:28:40,170 --> 00:28:44,670
it'll grab a to z and every single

00:28:43,170 --> 00:28:45,960
korean character every single japanese

00:28:44,670 --> 00:28:48,600
character every single Arabic character

00:28:45,960 --> 00:28:50,070
every single every other character as

00:28:48,600 --> 00:28:53,970
long as it's an alphabetically defined

00:28:50,070 --> 00:28:58,410
character in Unicode again probably more

00:28:53,970 --> 00:29:00,740
than you want in a lot of cases so just

00:28:58,410 --> 00:29:02,730
like the others we had the option to do

00:29:00,740 --> 00:29:05,880
languages so let's take a look at some

00:29:02,730 --> 00:29:07,800
of them if I set it to Austrian it's

00:29:05,880 --> 00:29:10,890
effectively equivalent to a

00:29:07,800 --> 00:29:13,730
case-insensitive a to z adding in my

00:29:10,890 --> 00:29:19,200
accented characters and that's that

00:29:13,730 --> 00:29:21,030
there's also an option to do a broad

00:29:19,200 --> 00:29:23,730
version of it and this implements in

00:29:21,030 --> 00:29:25,800
wooden cldr is the auxilary characters

00:29:23,730 --> 00:29:27,870
so these aren't any characters that

00:29:25,800 --> 00:29:30,630
you'll see everyday but occasionally in

00:29:27,870 --> 00:29:32,070
texts might come up enough that we might

00:29:30,630 --> 00:29:33,840
want to still capture them along the way

00:29:32,070 --> 00:29:35,730
in English for instance right if you

00:29:33,840 --> 00:29:38,010
have resume you might want to still

00:29:35,730 --> 00:29:40,830
capture it if it's got the the accented

00:29:38,010 --> 00:29:43,950
E or a naive if it's got the the two

00:29:40,830 --> 00:29:48,900
dots on the I and so the broad one will

00:29:43,950 --> 00:29:52,350
capture that as well sometimes the space

00:29:48,900 --> 00:29:54,600
is quite large if we go to Korean I

00:29:52,350 --> 00:29:55,680
think there's about 16 in that little

00:29:54,600 --> 00:30:01,850
dot dot there I think there's about

00:29:55,680 --> 00:30:03,840
16,000 characters so and the little

00:30:01,850 --> 00:30:05,610
ellipses there that goes on for about

00:30:03,840 --> 00:30:07,650
another 2,000 characters after that that

00:30:05,610 --> 00:30:10,830
are individually specified so sometimes

00:30:07,650 --> 00:30:14,670
this can be still very large in some of

00:30:10,830 --> 00:30:17,900
the Asian languages but Iain works here

00:30:14,670 --> 00:30:17,900
it is for Bulgarians

00:30:18,029 --> 00:30:21,359
right now four languages with a

00:30:19,919 --> 00:30:23,729
distinction between upper and lowercase

00:30:21,359 --> 00:30:26,279
you can also use just local upper or

00:30:23,729 --> 00:30:27,659
local lower just like you would use

00:30:26,279 --> 00:30:29,369
upper and lower to limit your search

00:30:27,659 --> 00:30:31,710
field to just one half or the other

00:30:29,369 --> 00:30:33,239
obviously in a language like say

00:30:31,710 --> 00:30:35,460
Mandarin it's not gonna make a

00:30:33,239 --> 00:30:39,539
difference they're gonna be you know

00:30:35,460 --> 00:30:44,849
essentially one of the same all right so

00:30:39,539 --> 00:30:48,029
let's see where we're at now my favorite

00:30:44,849 --> 00:30:49,049
of the tokens and this has kind of comes

00:30:48,029 --> 00:30:51,570
off of some work that I've done

00:30:49,049 --> 00:30:54,450
previously if any of y'all were watching

00:30:51,570 --> 00:30:57,929
the reading through the Advent Day posts

00:30:54,450 --> 00:31:00,809
or that I've been calendar for Araku my

00:30:57,929 --> 00:31:04,940
day was I did the fuzzy token with my

00:31:00,809 --> 00:31:08,849
very fun Santa had too much eggnog title

00:31:04,940 --> 00:31:10,200
and what this allows one of the things

00:31:08,849 --> 00:31:12,149
that Rock allows us to do is we can

00:31:10,200 --> 00:31:14,940
create these reusable tokens which all

00:31:12,149 --> 00:31:16,409
of these previous ones are that but you

00:31:14,940 --> 00:31:19,349
can sometimes do a little bit more with

00:31:16,409 --> 00:31:22,830
them and sometimes you can modify them

00:31:19,349 --> 00:31:24,719
the actual match data by doing a mixin

00:31:22,830 --> 00:31:28,950
of a role and so in the fuzzy token I

00:31:24,719 --> 00:31:29,999
actually tried to correct the string so

00:31:28,950 --> 00:31:31,139
that when you would print out the match

00:31:29,999 --> 00:31:33,359
it would actually print out something

00:31:31,139 --> 00:31:35,249
that it didn't match to but what we

00:31:33,359 --> 00:31:38,129
assumed it actually matched to because

00:31:35,249 --> 00:31:44,219
we try to correct spelling and this one

00:31:38,129 --> 00:31:46,559
kind of builds off of that work so again

00:31:44,219 --> 00:31:49,219
that why this is something not capturing

00:31:46,559 --> 00:31:49,219
my clicks here

00:31:49,500 --> 00:31:54,150
all right so this is the by far to me

00:31:52,559 --> 00:31:56,610
the most powerful the tokens you know I

00:31:54,150 --> 00:31:59,490
just jumped here but it'll take not just

00:31:56,610 --> 00:32:02,429
digits but entire formatted numbers so

00:31:59,490 --> 00:32:04,049
let's grab my text and let's send it to

00:32:02,429 --> 00:32:05,730
this whole thing here which is from the

00:32:04,049 --> 00:32:08,640
Wikipedia article for Houston where we

00:32:05,730 --> 00:32:12,900
all should have been ideally we're we in

00:32:08,640 --> 00:32:14,520
better circumstances and I'm just gonna

00:32:12,900 --> 00:32:19,260
say let's try to add up all these

00:32:14,520 --> 00:32:22,620
numbers together right if you can

00:32:19,260 --> 00:32:24,299
imagine being asked to do that task if

00:32:22,620 --> 00:32:25,650
you look at this document there's a lot

00:32:24,299 --> 00:32:27,299
of different types of numbers there's

00:32:25,650 --> 00:32:28,799
numbers without commas there's numbers

00:32:27,299 --> 00:32:33,000
with commas there's numbers with

00:32:28,799 --> 00:32:36,679
decimals there's percents but I want you

00:32:33,000 --> 00:32:41,280
to add them all up so what we can do I

00:32:36,679 --> 00:32:43,559
don't know why this keynote export not

00:32:41,280 --> 00:32:44,220
showing my code goodbye bit like it's

00:32:43,559 --> 00:32:50,460
supposed to

00:32:44,220 --> 00:32:53,539
alright so we can do all right now it

00:32:50,460 --> 00:32:56,669
looks like it's going correctly alright

00:32:53,539 --> 00:33:00,299
so we can say just let's grab the text

00:32:56,669 --> 00:33:01,980
and let's do a global match of local

00:33:00,299 --> 00:33:04,940
number and again this is just defaulting

00:33:01,980 --> 00:33:08,010
to English the text is in English and

00:33:04,940 --> 00:33:09,929
let's loop over the text please don't

00:33:08,010 --> 00:33:12,809
use this loop signature that's kind of

00:33:09,929 --> 00:33:15,179
an ugly one but it works for this

00:33:12,809 --> 00:33:18,059
purpose all right and so all we're gonna

00:33:15,179 --> 00:33:21,360
do is do total add to itself local

00:33:18,059 --> 00:33:26,130
number each time and be done with it and

00:33:21,360 --> 00:33:27,030
say it and we get this number so there's

00:33:26,130 --> 00:33:29,130
a couple things going on to the

00:33:27,030 --> 00:33:31,860
background here when you do that match

00:33:29,130 --> 00:33:34,799
we actually I mix in a role a numeric

00:33:31,860 --> 00:33:37,159
role and so not only do I capture the

00:33:34,799 --> 00:33:40,350
number I also parse the number for you

00:33:37,159 --> 00:33:42,419
so that it takes out the commas and you

00:33:40,350 --> 00:33:44,429
turns it into an integer or if you have

00:33:42,419 --> 00:33:45,780
decimal beyond it it adds that in if

00:33:44,429 --> 00:33:49,770
it's a percentage it goes ahead and

00:33:45,780 --> 00:33:51,240
divides it by a hundred for you and this

00:33:49,770 --> 00:33:53,640
is really awesome because if you're

00:33:51,240 --> 00:33:57,059
working say with something in French

00:33:53,640 --> 00:33:58,770
where your thousand separator is a

00:33:57,059 --> 00:34:01,380
period and your decimal separator is a

00:33:58,770 --> 00:34:03,200
comma you as a programmer don't need to

00:34:01,380 --> 00:34:05,910
know that you just use local token

00:34:03,200 --> 00:34:07,530
plus on it or local number and you do

00:34:05,910 --> 00:34:10,919
plus and you're good to go

00:34:07,530 --> 00:34:16,260
that's all you have to do so how do we

00:34:10,919 --> 00:34:20,419
know this is right well let's move to

00:34:16,260 --> 00:34:20,419
the next slide if it will do that for me

00:34:21,290 --> 00:34:31,230
will do that for me

00:34:23,220 --> 00:34:34,440
okay so I'm just gonna add in this

00:34:31,230 --> 00:34:38,040
little print total and say total along

00:34:34,440 --> 00:34:39,810
the way and we can see here on the the

00:34:38,040 --> 00:34:41,669
bottom right where it will spit out all

00:34:39,810 --> 00:34:45,720
the numbers as we go along the way and

00:34:41,669 --> 00:34:47,970
so we can compare that over here to what

00:34:45,720 --> 00:34:51,360
we had and so as you see we start off

00:34:47,970 --> 00:34:53,550
with 2019 and then we add in this the

00:34:51,360 --> 00:34:58,620
two million something we add that into

00:34:53,550 --> 00:35:00,000
the six million something 2018 and then

00:34:58,620 --> 00:35:02,400
we get to our first decimal number and

00:35:00,000 --> 00:35:03,390
you can see the decimal shows up it

00:35:02,400 --> 00:35:04,830
caught the two Derrick's to the

00:35:03,390 --> 00:35:06,510
kilometer we don't have units yet I'm

00:35:04,830 --> 00:35:08,070
working on that lesson that's another

00:35:06,510 --> 00:35:10,410
thing we'll be able to do eventually and

00:35:08,070 --> 00:35:13,620
you can notice the 90 percent it

00:35:10,410 --> 00:35:16,320
correctly adds it in as 0.9 rather than

00:35:13,620 --> 00:35:17,580
the number 90 so it's capturing all this

00:35:16,320 --> 00:35:19,430
stuff the way that it should be but if

00:35:17,580 --> 00:35:21,450
you want to return it back as a string

00:35:19,430 --> 00:35:24,870
what is printing there is the string

00:35:21,450 --> 00:35:26,580
version in the middle so there's a lot

00:35:24,870 --> 00:35:29,550
of really awesome things that we can do

00:35:26,580 --> 00:35:30,990
here with the tokens and I definitely

00:35:29,550 --> 00:35:33,630
hope we can get a lot more than in there

00:35:30,990 --> 00:35:35,280
you imagine to put in local date and

00:35:33,630 --> 00:35:37,230
have it grab all of your dates for you

00:35:35,280 --> 00:35:40,050
and just throw that into any reg X into

00:35:37,230 --> 00:35:41,550
any grammar there's a there's a lot of

00:35:40,050 --> 00:35:44,730
really nice things that we'll be able to

00:35:41,550 --> 00:35:47,310
do down the road the last thing I'm

00:35:44,730 --> 00:35:49,020
gonna talk about and then hopefully

00:35:47,310 --> 00:35:53,510
we'll have some time for questions if

00:35:49,020 --> 00:35:55,650
anyone has them is the text localization

00:35:53,510 --> 00:36:01,520
so the first one that I've worked with

00:35:55,650 --> 00:36:06,400
here is I don't know why this is not

00:36:01,520 --> 00:36:12,040
going as fast as it should here come on

00:36:06,400 --> 00:36:14,740
all right is with fluent now fluent is a

00:36:12,040 --> 00:36:18,010
Texel localization engine it was created

00:36:14,740 --> 00:36:22,030
by Mozilla it is probably right now the

00:36:18,010 --> 00:36:23,500
the one of the best ones that exist but

00:36:22,030 --> 00:36:26,650
also the fact that it is supported by

00:36:23,500 --> 00:36:29,620
Mozilla they're converting all of

00:36:26,650 --> 00:36:30,940
Firefox over to using this engine I

00:36:29,620 --> 00:36:33,310
figured it's a really good one to start

00:36:30,940 --> 00:36:38,230
with so I'm going to show a couple of

00:36:33,310 --> 00:36:41,470
examples of how this works and how easy

00:36:38,230 --> 00:36:42,970
I've tried to make localizing because if

00:36:41,470 --> 00:36:45,100
you've seen a lot of other ones you've

00:36:42,970 --> 00:36:49,380
got so much boilerplate code and I hate

00:36:45,100 --> 00:36:52,300
boilerplate code with a with a passion

00:36:49,380 --> 00:36:53,650
so all we have to do at a localization

00:36:52,300 --> 00:36:57,640
base path where you're gonna store all

00:36:53,650 --> 00:37:03,220
your files and then add in a list of

00:36:57,640 --> 00:37:04,570
your languages that you have and then we

00:37:03,220 --> 00:37:08,800
just say something like that say it

00:37:04,570 --> 00:37:10,300
localized hello world and again user

00:37:08,800 --> 00:37:11,800
languages working there in the

00:37:10,300 --> 00:37:14,140
background and it's detected with my

00:37:11,800 --> 00:37:18,460
systems on English so you get hello

00:37:14,140 --> 00:37:24,190
world or we could do hello world in

00:37:18,460 --> 00:37:26,530
communities and we get Viva mundo again

00:37:24,190 --> 00:37:27,820
if your user language is set and that's

00:37:26,530 --> 00:37:29,230
all you need you're just writing a

00:37:27,820 --> 00:37:30,670
script that somebody's gonna use in

00:37:29,230 --> 00:37:35,050
command-line don't even have to specify

00:37:30,670 --> 00:37:36,420
your language just let it all work it's

00:37:35,050 --> 00:37:40,630
that simple

00:37:36,420 --> 00:37:42,010
okay now the format for fluent don't

00:37:40,630 --> 00:37:44,940
want to get too much detail on that

00:37:42,010 --> 00:37:47,050
because it's kind of a little thing but

00:37:44,940 --> 00:37:50,530
the files are designed to be pretty

00:37:47,050 --> 00:37:53,620
readily legible so for this I could say

00:37:50,530 --> 00:37:55,780
a new mail message but I also add in

00:37:53,620 --> 00:37:59,890
accounts so we'll be passing in a

00:37:55,780 --> 00:38:02,040
variable here and we can give specific

00:37:59,890 --> 00:38:06,040
messages based on the content of them

00:38:02,040 --> 00:38:11,620
this one and other are actually counts

00:38:06,040 --> 00:38:12,880
that come from cldr most most European

00:38:11,620 --> 00:38:15,940
languages would probably only have one

00:38:12,880 --> 00:38:19,720
in other but like Arabic will have one

00:38:15,940 --> 00:38:23,260
to another because it has a dual case

00:38:19,720 --> 00:38:24,820
this numbers Russian is if any of you

00:38:23,260 --> 00:38:26,050
know if any of you see any in this line

00:38:24,820 --> 00:38:29,500
you know that there's just kind of their

00:38:26,050 --> 00:38:31,420
number string for me it's a nightmare

00:38:29,500 --> 00:38:34,240
the endings you have to do based on

00:38:31,420 --> 00:38:36,490
whether the number ends in this number

00:38:34,240 --> 00:38:39,369
or between zero and a hundred Earth out

00:38:36,490 --> 00:38:41,859
whatever it's crazy but this will help

00:38:39,369 --> 00:38:44,550
your localizers to be able to handle all

00:38:41,859 --> 00:38:48,310
those formatting a little bit cleaner so

00:38:44,550 --> 00:38:51,880
I could just say say localized new mail

00:38:48,310 --> 00:38:55,300
one count you've got one new message

00:38:51,880 --> 00:38:59,290
I do it with eight you've got eight new

00:38:55,300 --> 00:39:00,849
messages and we do 42 ah your new

00:38:59,290 --> 00:39:05,320
messages came some very interesting

00:39:00,849 --> 00:39:08,200
information there all right but it gets

00:39:05,320 --> 00:39:09,609
a lot more powerful than that and this

00:39:08,200 --> 00:39:12,040
is kind of some of this is dealing now

00:39:09,609 --> 00:39:14,619
with the additions that I've done within

00:39:12,040 --> 00:39:16,150
the localization environment but let's

00:39:14,619 --> 00:39:19,180
say I grabbed this one out of the

00:39:16,150 --> 00:39:20,920
Spanish file and so I just want to say

00:39:19,180 --> 00:39:23,980
hey it's a nice car it's a nice computer

00:39:20,920 --> 00:39:26,589
right well there's some caches there on

00:39:23,980 --> 00:39:28,000
in Spanish there's a couple different

00:39:26,589 --> 00:39:34,330
words for a car there's a couple

00:39:28,000 --> 00:39:36,730
different words for computer and in the

00:39:34,330 --> 00:39:38,230
case of computer one of them's masculine

00:39:36,730 --> 00:39:40,119
or to the masking of one of them's

00:39:38,230 --> 00:39:41,349
feminine but our local eyes are smart

00:39:40,119 --> 00:39:45,010
enough they know that they need to deal

00:39:41,349 --> 00:39:46,780
with a gender version here but they can

00:39:45,010 --> 00:39:48,940
also default and say this is my default

00:39:46,780 --> 00:39:52,060
value I want by default car to be

00:39:48,940 --> 00:39:53,680
coddled and computer to be computed lota

00:39:52,060 --> 00:39:55,869
and I'm also going to tell you computed

00:39:53,680 --> 00:39:58,060
aura is a feminine word in case you need

00:39:55,869 --> 00:40:01,270
to use that somewhere else this allows

00:39:58,060 --> 00:40:04,510
for a lot of reuse of terminology as you

00:40:01,270 --> 00:40:06,580
go through and then we can specify hate

00:40:04,510 --> 00:40:08,680
in Spain they don't call Carcano de

00:40:06,580 --> 00:40:12,220
coche and it's an ordinary lord and it's

00:40:08,680 --> 00:40:14,740
masculine not feminine and in Chile they

00:40:12,220 --> 00:40:19,480
use computer board and it's masculine in

00:40:14,740 --> 00:40:24,940
Argentina to use Alto and so we take

00:40:19,480 --> 00:40:26,940
these files and by default if my system

00:40:24,940 --> 00:40:29,580
is say I don't know like Mexican Spanish

00:40:26,940 --> 00:40:31,839
it'll just say it's win-win federal

00:40:29,580 --> 00:40:33,670
right and I'll just grab the main ES

00:40:31,839 --> 00:40:36,579
file but if I say

00:40:33,670 --> 00:40:38,289
Spain Spanish right you'll still grab

00:40:36,579 --> 00:40:41,410
the main message out of the the Spanish

00:40:38,289 --> 00:40:45,640
one but it will override it with the one

00:40:41,410 --> 00:40:49,779
term for car say if I go to Argentinian

00:40:45,640 --> 00:40:52,210
it'll override it with Alto but if I do

00:40:49,779 --> 00:40:53,500
Mexican specified Mexican Spanish

00:40:52,210 --> 00:40:56,339
they'll just default back to the

00:40:53,500 --> 00:40:58,510
originals the main Spanish localization

00:40:56,339 --> 00:41:00,549
so this can also be one of these things

00:40:58,510 --> 00:41:02,140
where if localizers know that certain

00:41:00,549 --> 00:41:03,670
terms are going to be different you can

00:41:02,140 --> 00:41:06,160
actually manage to populate them all the

00:41:03,670 --> 00:41:09,130
way across a file with with pretty good

00:41:06,160 --> 00:41:10,990
ease and so we can also even say the

00:41:09,130 --> 00:41:14,289
computer and you see here by default

00:41:10,990 --> 00:41:16,170
we're gonna win a booth on the water but

00:41:14,289 --> 00:41:18,609
a somewhen order they'll order and

00:41:16,170 --> 00:41:23,650
everything kind of gets taken care of

00:41:18,609 --> 00:41:25,029
for you one of the ideas of fluent or

00:41:23,650 --> 00:41:26,980
one of their kind of going thoughts is

00:41:25,029 --> 00:41:29,230
that we should remove a lot of the work

00:41:26,980 --> 00:41:30,910
from the programmer and instead put it

00:41:29,230 --> 00:41:32,170
on the localizer because the localizers

00:41:30,910 --> 00:41:34,930
know their language is best and they

00:41:32,170 --> 00:41:36,220
know what to deal with so on the one

00:41:34,930 --> 00:41:40,059
hand if you want to do some of these

00:41:36,220 --> 00:41:42,549
very sort of complex sort of formattings

00:41:40,059 --> 00:41:44,349
you can always do them but it's on your

00:41:42,549 --> 00:41:46,720
localizer to do it you might have to

00:41:44,349 --> 00:41:48,009
feed them in information but you can

00:41:46,720 --> 00:41:53,289
always feed in extra information that

00:41:48,009 --> 00:41:55,420
doesn't get used so one of the reasons I

00:41:53,289 --> 00:41:57,460
did fluent is because just like Perl and

00:41:55,420 --> 00:41:59,589
rock ooh simple things are easy right

00:41:57,460 --> 00:42:01,480
you don't have to use all those extra

00:41:59,589 --> 00:42:04,829
features if you want to use an old-style

00:42:01,480 --> 00:42:07,059
let me name you know let me have my

00:42:04,829 --> 00:42:08,589
localized string name include all those

00:42:07,059 --> 00:42:10,990
different types of information you can

00:42:08,589 --> 00:42:15,250
still do that but complex things are

00:42:10,990 --> 00:42:19,509
possible so if you want more information

00:42:15,250 --> 00:42:24,309
on that format you can visit project

00:42:19,509 --> 00:42:26,410
fluency org but the rocku version of

00:42:24,309 --> 00:42:29,349
fluent includes entire localization

00:42:26,410 --> 00:42:31,029
manager so if you check out the the

00:42:29,349 --> 00:42:34,509
github page for that you can see where I

00:42:31,029 --> 00:42:36,490
talk about it in the future

00:42:34,509 --> 00:42:40,089
I'm going to try to pull apart the

00:42:36,490 --> 00:42:41,880
manager and fluent itself with the goal

00:42:40,089 --> 00:42:47,049
that we can just add in other

00:42:41,880 --> 00:42:47,650
localization formats and still have the

00:42:47,049 --> 00:42:49,990
same interface

00:42:47,650 --> 00:42:51,670
so that we could ultimately have one

00:42:49,990 --> 00:42:54,250
manager that will handle not just fluid

00:42:51,670 --> 00:42:57,820
files but make text files X lifts files

00:42:54,250 --> 00:43:00,010
and do them all together all at once and

00:42:57,820 --> 00:43:05,290
you can just pull in the messages as as

00:43:00,010 --> 00:43:09,070
you want so all that said what's next

00:43:05,290 --> 00:43:11,050
like I said in terms of international

00:43:09,070 --> 00:43:12,910
and rocku we still have a lot of stuff

00:43:11,050 --> 00:43:18,130
to do I mean you have made a fair bit of

00:43:12,910 --> 00:43:21,820
progress here out of cldr there's a

00:43:18,130 --> 00:43:23,530
couple things I want to do first thing

00:43:21,820 --> 00:43:26,080
is completely separate out the modules

00:43:23,530 --> 00:43:27,910
this was my mistake early on I started

00:43:26,080 --> 00:43:28,990
putting everything I had the one module

00:43:27,910 --> 00:43:30,550
International cldr

00:43:28,990 --> 00:43:33,220
and I started adding in all the formats

00:43:30,550 --> 00:43:35,320
and tokens inside of that module I'm

00:43:33,220 --> 00:43:37,750
gonna pull them apart and leave seal the

00:43:35,320 --> 00:43:38,940
art just do be a database and nothing

00:43:37,750 --> 00:43:41,440
more

00:43:38,940 --> 00:43:45,030
that won't take too long definitely want

00:43:41,440 --> 00:43:47,410
to add in more tokens more for matters

00:43:45,030 --> 00:43:48,850
specifically currency which would be

00:43:47,410 --> 00:43:52,690
really good if you're doing you know any

00:43:48,850 --> 00:43:55,180
sort of you know apps that need to use

00:43:52,690 --> 00:43:57,220
money in them also RBI F which is the

00:43:55,180 --> 00:43:59,740
rule base number formatting this will

00:43:57,220 --> 00:44:02,350
allow you to then output instead of just

00:43:59,740 --> 00:44:05,590
like the digits and say you know format

00:44:02,350 --> 00:44:06,880
number and it just adds in the commas or

00:44:05,590 --> 00:44:10,390
whenever it can actually spell that in

00:44:06,880 --> 00:44:13,930
word form and so that should be possible

00:44:10,390 --> 00:44:15,700
fairly soon which again be really nice

00:44:13,930 --> 00:44:17,140
because it'll be just a one-stop shop

00:44:15,700 --> 00:44:18,760
you can handle it if you want to grab it

00:44:17,140 --> 00:44:23,230
for English or then you can of course

00:44:18,760 --> 00:44:26,290
apply it to other languages lots of

00:44:23,230 --> 00:44:29,890
optimizations key example of this is

00:44:26,290 --> 00:44:32,830
that alpha token right now all it does

00:44:29,890 --> 00:44:35,110
is the actual token itself has an array

00:44:32,830 --> 00:44:37,060
in it and just has match this array and

00:44:35,110 --> 00:44:39,820
the array might have 16 thousand items

00:44:37,060 --> 00:44:41,710
in it that is not very fast

00:44:39,820 --> 00:44:44,920
there are definitely faster ways to do

00:44:41,710 --> 00:44:47,800
that and I'll work on that down the road

00:44:44,920 --> 00:44:51,010
to make it much faster but at the moment

00:44:47,800 --> 00:44:52,990
it just works but maybe not as fast as

00:44:51,010 --> 00:44:54,370
I'd like it to be because it's in like

00:44:52,990 --> 00:44:56,220
the case of Chinese it'll be literally

00:44:54,370 --> 00:44:59,670
for every character testing

00:44:56,220 --> 00:44:59,670
32,000 versions

00:45:00,470 --> 00:45:06,500
sorting this is another big kind of

00:45:03,830 --> 00:45:08,359
issue when you're you're presenting

00:45:06,500 --> 00:45:10,070
things to people and I just want to give

00:45:08,359 --> 00:45:12,290
it absolutely shout out to Samantha

00:45:10,070 --> 00:45:14,359
McVeigh she did a lot of the work for

00:45:12,290 --> 00:45:19,250
allowing us to do Unicode sorting to

00:45:14,359 --> 00:45:20,690
begin with in rokku and I'm hoping soon

00:45:19,250 --> 00:45:22,790
to she had I think it was one of the

00:45:20,690 --> 00:45:26,150
Pearl Foundation grants or maybe was a

00:45:22,790 --> 00:45:30,290
google summer camera which one to put in

00:45:26,150 --> 00:45:31,660
the the sorting and I'm hoping that you

00:45:30,290 --> 00:45:33,650
know I'll be able to work with her and

00:45:31,660 --> 00:45:37,430
you know figure out how can we get this

00:45:33,650 --> 00:45:40,070
done in a localized manner it's in Moore

00:45:37,430 --> 00:45:41,660
VM I think I remember correctly so you

00:45:40,070 --> 00:45:43,369
might have to do some things there to

00:45:41,660 --> 00:45:46,420
enable it but hopefully that'll be

00:45:43,369 --> 00:45:52,430
coming soon also non Gregorian calendars

00:45:46,420 --> 00:45:54,140
again calendars are tough but John

00:45:52,430 --> 00:45:56,030
forget I think I might be pronouncing

00:45:54,140 --> 00:45:57,590
that rough he's done a lot of work on

00:45:56,030 --> 00:45:59,690
that already so I'm hoping that maybe

00:45:57,590 --> 00:46:01,010
I'll be able to pull in or either

00:45:59,690 --> 00:46:04,240
collaborate with him or pulling some his

00:46:01,010 --> 00:46:07,339
work he's got separate modules for it

00:46:04,240 --> 00:46:10,550
also another fun one is emoji names and

00:46:07,339 --> 00:46:14,690
descriptors these are also included in

00:46:10,550 --> 00:46:16,640
cldr so if you if you've ever wondered

00:46:14,690 --> 00:46:19,609
this happens to me occasionally when I'm

00:46:16,640 --> 00:46:21,560
on on my cell phone and I start typing

00:46:19,609 --> 00:46:24,530
in trying to find an emoji and I don't

00:46:21,560 --> 00:46:26,300
pull it up and I'm like wait why I know

00:46:24,530 --> 00:46:28,250
this emoji exists why can't I find it

00:46:26,300 --> 00:46:29,510
with his name was because my keyboard

00:46:28,250 --> 00:46:32,420
have switched from English to Spanish

00:46:29,510 --> 00:46:35,530
and these keyboards are actually pulling

00:46:32,420 --> 00:46:38,630
those emoji descriptors off of cldr

00:46:35,530 --> 00:46:40,250
and so you can actually pull in this

00:46:38,630 --> 00:46:42,619
information out of there I'm again I'll

00:46:40,250 --> 00:46:44,780
try to get a nice interface for it but

00:46:42,619 --> 00:46:46,220
there are other you know useful things

00:46:44,780 --> 00:46:47,750
for this if you're having to do some

00:46:46,220 --> 00:46:49,720
text accessibility and you want to

00:46:47,750 --> 00:46:51,859
actually read out text for somebody

00:46:49,720 --> 00:46:55,790
here's where you can actually get the

00:46:51,859 --> 00:46:57,320
you know descriptors for them and in

00:46:55,790 --> 00:47:02,320
general just some other ICU style

00:46:57,320 --> 00:47:05,210
features ACU is the main localization or

00:47:02,320 --> 00:47:10,070
international tool set that's written in

00:47:05,210 --> 00:47:11,630
C and C++ and in Java but it uses again

00:47:10,070 --> 00:47:13,070
boilerplate code I don't like it that's

00:47:11,630 --> 00:47:15,170
why I'm writing everything from scratch

00:47:13,070 --> 00:47:17,090
for rokku

00:47:15,170 --> 00:47:19,010
there's also some stuff outside of cldr

00:47:17,090 --> 00:47:22,130
that we'll be doing again more

00:47:19,010 --> 00:47:24,380
localization formats these are the three

00:47:22,130 --> 00:47:27,110
that I'm gonna prioritize mate takes

00:47:24,380 --> 00:47:29,570
just because that's what we inherit you

00:47:27,110 --> 00:47:32,030
know in the in the pearl and rocku world

00:47:29,570 --> 00:47:33,230
excellent and message format just again

00:47:32,030 --> 00:47:37,850
because those are sort of industry

00:47:33,230 --> 00:47:39,170
standards language identification a lot

00:47:37,850 --> 00:47:42,500
of you have probably used pearls Ling

00:47:39,170 --> 00:47:44,110
you identify and that actually shouldn't

00:47:42,500 --> 00:47:46,250
be too terribly difficult to pull in

00:47:44,110 --> 00:47:50,270
just question um you how do we want it

00:47:46,250 --> 00:47:52,850
to interface with it and then also spell

00:47:50,270 --> 00:47:54,470
checking and I've actually already done

00:47:52,850 --> 00:47:56,780
some work on this with some other

00:47:54,470 --> 00:47:58,310
projects the main ones I'm going to

00:47:56,780 --> 00:48:01,850
focus on is on Huntsville and new spell

00:47:58,310 --> 00:48:03,590
um they are sort of the default engine

00:48:01,850 --> 00:48:07,070
in a lot of different programs if you

00:48:03,590 --> 00:48:09,470
use LibreOffice hums bill is in there at

00:48:07,070 --> 00:48:10,940
its core even on Mac OS you can just

00:48:09,470 --> 00:48:14,210
like drag two files over it and it's

00:48:10,940 --> 00:48:16,340
using a hunt spell in the background so

00:48:14,210 --> 00:48:17,750
that'll let us be able to maximize the

00:48:16,340 --> 00:48:20,360
number of spell checkers that are

00:48:17,750 --> 00:48:22,460
language that we can spell check in once

00:48:20,360 --> 00:48:25,220
I get those in there so that's the

00:48:22,460 --> 00:48:27,670
future if you would like to help out

00:48:25,220 --> 00:48:31,040
with it please get in touch with me

00:48:27,670 --> 00:48:32,570
because as you see I've made a little

00:48:31,040 --> 00:48:39,290
bit of progress but there's still a lot

00:48:32,570 --> 00:48:42,040
lot of stuff to do so lastly lastly if

00:48:39,290 --> 00:48:45,050
it will move forward to the next slide

00:48:42,040 --> 00:48:48,560
where I don't know why it's not but

00:48:45,050 --> 00:48:50,270
there we go thank you to the organizers

00:48:48,560 --> 00:48:52,970
and all those who made the pro rata

00:48:50,270 --> 00:48:54,080
conference in the cloud a success and so

00:48:52,970 --> 00:48:55,490
I guess now great question if we have

00:48:54,080 --> 00:48:58,880
any time I might have actually just used

00:48:55,490 --> 00:49:03,250
up all my time sorry we can go for like

00:48:58,880 --> 00:49:03,250
two four or five more minutes okay

00:49:05,700 --> 00:49:10,830
folks you can just unmute and ask if you

00:49:08,320 --> 00:49:10,830
have a question

00:49:15,340 --> 00:49:23,380
hi I guess I I have a small question as

00:49:19,510 --> 00:49:26,620
at some point I implemented our B and F

00:49:23,380 --> 00:49:29,280
for Perl 6 and I say Pro 6 and not raku

00:49:26,620 --> 00:49:34,330
because it was fairly old at this point

00:49:29,280 --> 00:49:36,040
you aware of linguae number um I did not

00:49:34,330 --> 00:49:37,600
see it in that one I actually last I

00:49:36,040 --> 00:49:40,090
when I was finishing up these slides I

00:49:37,600 --> 00:49:41,500
did a quick search for ad but I did

00:49:40,090 --> 00:49:43,150
search for to rokku and I searched Rock

00:49:41,500 --> 00:49:46,960
who are B and F because I wanted to make

00:49:43,150 --> 00:49:49,360
sure to signal previous work so I will I

00:49:46,960 --> 00:49:52,990
will go and look back up it's not

00:49:49,360 --> 00:49:55,720
working so I would I would love to have

00:49:52,990 --> 00:49:57,940
some help and maybe figure out if you

00:49:55,720 --> 00:49:58,720
have some better ideas too so yeah

00:49:57,940 --> 00:50:01,630
absolutely

00:49:58,720 --> 00:50:05,350
um in in all like sort of the core code

00:50:01,630 --> 00:50:07,540
there are Rocko grammars everywhere and

00:50:05,350 --> 00:50:10,350
so I've really gotten some good

00:50:07,540 --> 00:50:14,230
experience kind of working with that and

00:50:10,350 --> 00:50:15,370
if yeah I'd love to collaborate and you

00:50:14,230 --> 00:50:17,290
know get that in there

00:50:15,370 --> 00:50:21,970
yeah because it really enables a lot of

00:50:17,290 --> 00:50:23,970
other stuff once we've got those yes so

00:50:21,970 --> 00:50:28,870
you won't review nightsticks exactly

00:50:23,970 --> 00:50:31,530
look at the chat oh I forgot to pull up

00:50:28,870 --> 00:50:41,890
the chat on here I'm sorry if people had

00:50:31,530 --> 00:50:45,580
stuff in here yeah somebody mentioned

00:50:41,890 --> 00:50:47,410
and the Roman numerals and I said that

00:50:45,580 --> 00:50:53,590
actually will be directly with the rpms

00:50:47,410 --> 00:50:56,560
in there hey I would like to thank you

00:50:53,590 --> 00:50:58,780
for running with this because it it just

00:50:56,560 --> 00:51:01,350
validates the the work of so many people

00:50:58,780 --> 00:51:05,220
in seeing forward to the the

00:51:01,350 --> 00:51:07,870
internationalization of what we're doing

00:51:05,220 --> 00:51:10,390
well I have to say like one of the

00:51:07,870 --> 00:51:12,930
things that you know has always

00:51:10,390 --> 00:51:15,040
attracted me to both Perl and to rocku

00:51:12,930 --> 00:51:17,890
and I think it has a lot to do with your

00:51:15,040 --> 00:51:19,089
training as a linguist is that it just

00:51:17,890 --> 00:51:21,819
for me as somebody

00:51:19,089 --> 00:51:25,150
also works with languages Spanish

00:51:21,819 --> 00:51:26,829
professor but betray it just makes more

00:51:25,150 --> 00:51:32,529
sense than a lot of other languages

00:51:26,829 --> 00:51:34,450
right and and you know I don't know it

00:51:32,529 --> 00:51:38,650
just it's it's clear to me that it was

00:51:34,450 --> 00:51:40,719
designed by linguists yes here's a

00:51:38,650 --> 00:51:47,259
here's your fellow medieval is sitting

00:51:40,719 --> 00:51:49,380
in the corner here I just Google answer

00:51:47,259 --> 00:51:55,690
these questions again one more time here

00:51:49,380 --> 00:51:57,069
let's see well I hate to put you on the

00:51:55,690 --> 00:52:00,549
spot but could you show us your

00:51:57,069 --> 00:52:02,229
localization measure um if you could

00:52:00,549 --> 00:52:06,249
just bring it up and run it for a moment

00:52:02,229 --> 00:52:17,680
okay cool I don't have it to run it but

00:52:06,249 --> 00:52:21,039
let me go to okay let me see if I pulled

00:52:17,680 --> 00:52:25,859
up here so really the main thing I've

00:52:21,039 --> 00:52:28,539
got here is if you can see it here's

00:52:25,859 --> 00:52:30,489
within a module if you want what you do

00:52:28,539 --> 00:52:32,049
is just enter the resources I just put

00:52:30,489 --> 00:52:33,640
in there like localization and you put

00:52:32,049 --> 00:52:37,150
in your the different files that you

00:52:33,640 --> 00:52:40,690
want you can put in the likes at the

00:52:37,150 --> 00:52:42,160
different base pass resources our handle

00:52:40,690 --> 00:52:45,279
a little bit differently so if it's in a

00:52:42,160 --> 00:52:48,400
resource path you just have to tag it

00:52:45,279 --> 00:52:52,210
and say hey this is in you know the

00:52:48,400 --> 00:52:57,309
resources file or in the part of the

00:52:52,210 --> 00:52:59,410
module but what I did kind of to kind of

00:52:57,309 --> 00:53:03,160
help out let's say you have a you're

00:52:59,410 --> 00:53:04,450
running a website on it but you're this

00:53:03,160 --> 00:53:06,759
is on the server but you have multiple

00:53:04,450 --> 00:53:08,890
websites there's also an extra option

00:53:06,759 --> 00:53:11,890
you can do when you add in the base path

00:53:08,890 --> 00:53:13,749
which is a domain and then you can

00:53:11,890 --> 00:53:14,950
specify that domain when you're pulling

00:53:13,749 --> 00:53:17,440
in the when you're grabbing the

00:53:14,950 --> 00:53:20,140
localized files so that you can keep

00:53:17,440 --> 00:53:22,119
them basically totally separate from

00:53:20,140 --> 00:53:26,789
each other and then it won't try to you

00:53:22,119 --> 00:53:28,989
know fall back on the other one and so

00:53:26,789 --> 00:53:32,079
that's really kind of all that I've got

00:53:28,989 --> 00:53:32,980
you in that sense of the manager but

00:53:32,079 --> 00:53:36,310
like in fluent or

00:53:32,980 --> 00:53:40,480
originally if if it won't allow you to

00:53:36,310 --> 00:53:42,340
fall back mid string so you have to have

00:53:40,480 --> 00:53:44,950
the entirety of a message within one

00:53:42,340 --> 00:53:46,600
localization file and I kind of made

00:53:44,950 --> 00:53:48,340
some modifications so that you can dab

00:53:46,600 --> 00:53:50,650
that just change that one term in one

00:53:48,340 --> 00:53:54,940
file and it'll fall back you know across

00:53:50,650 --> 00:54:02,500
the the you know the local is ik the

00:53:54,940 --> 00:54:04,510
string building part but you know

00:54:02,500 --> 00:54:07,090
there's you can also do things like you

00:54:04,510 --> 00:54:08,530
say lazy or you can force it to load

00:54:07,090 --> 00:54:09,760
everything all at once so if you're

00:54:08,530 --> 00:54:11,410
doing it on server you might want to

00:54:09,760 --> 00:54:13,900
just have it load all your strings

00:54:11,410 --> 00:54:17,170
everything all at once or you might want

00:54:13,900 --> 00:54:18,490
to just load it as you go the most of

00:54:17,170 --> 00:54:21,310
the international modules do that

00:54:18,490 --> 00:54:22,660
the cldr is lazy loading so if the first

00:54:21,310 --> 00:54:25,030
time you use a language you might have

00:54:22,660 --> 00:54:27,369
like a half a second delay as it pulls

00:54:25,030 --> 00:54:28,600
in all the data even on you don't like

00:54:27,369 --> 00:54:30,070
the Mac well if I try to change the

00:54:28,600 --> 00:54:32,230
system language there's like a little

00:54:30,070 --> 00:54:33,580
half second delay where it's pulling in

00:54:32,230 --> 00:54:39,730
you know all the data just because it's

00:54:33,580 --> 00:54:41,619
so much data for each language but you

00:54:39,730 --> 00:54:42,700
definitely play around with it but I'm

00:54:41,619 --> 00:54:45,130
like I said I'm gonna try to pull that

00:54:42,700 --> 00:54:48,060
apart from it so that we can then use

00:54:45,130 --> 00:54:51,510
the same interface but for other formats

00:54:48,060 --> 00:54:51,510

YouTube URL: https://www.youtube.com/watch?v=HkOshnTyWAs


