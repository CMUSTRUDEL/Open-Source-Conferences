Title: Graham Ollis - A Year of Alien and Platypus - Lightning Talks - Day 2
Publication date: 2020-06-26
Playlist: TPC 2020 in the Cloud
Description: 
	A number of new features have been added to the alternative toolchain duo of Alien and Platypus.  I'd just like to cover them briefly so that developers are aware of them and can take advantage.

https://perl5-ffi.github.io/talk-perlcic-2020-alien-platypus/
Captions: 
	00:00:01,340 --> 00:00:06,839
all right can you hear that you can see

00:00:03,419 --> 00:00:08,670
that yep you're all set today I want to

00:00:06,839 --> 00:00:10,500
talk to you about the alien and platypus

00:00:08,670 --> 00:00:11,759
projects and what we've accomplished in

00:00:10,500 --> 00:00:12,389
the last year since the last Pearl

00:00:11,759 --> 00:00:14,250
conference

00:00:12,389 --> 00:00:16,980
those of you who are not aware of the

00:00:14,250 --> 00:00:19,020
alien builds toolkit is for defining

00:00:16,980 --> 00:00:21,119
external non-supe and dependencies and

00:00:19,020 --> 00:00:25,260
making them available for Sipan for your

00:00:21,119 --> 00:00:28,500
local pro projects new alien tech this

00:00:25,260 --> 00:00:31,199
year includes the build copy plugin for

00:00:28,500 --> 00:00:32,759
aliens that lack complicated compile and

00:00:31,199 --> 00:00:35,130
build steps and just need to copy files

00:00:32,759 --> 00:00:37,010
into their share directory Balian wesen

00:00:35,130 --> 00:00:40,170
time uses this since wesen time is

00:00:37,010 --> 00:00:43,559
distributed as linux mac OS and windows

00:00:40,170 --> 00:00:46,200
binaries the vc package module and

00:00:43,559 --> 00:00:50,120
plugin make it easier to build perl

00:00:46,200 --> 00:00:50,120
modules with external dependencies on

00:00:50,149 --> 00:00:55,670
pearls that are built with the native

00:00:52,170 --> 00:00:57,780
visual C++ Perl on Windows

00:00:55,670 --> 00:01:00,329
while the strawberry Perl is the

00:00:57,780 --> 00:01:02,879
de-facto Perl on Windows at the moment I

00:01:00,329 --> 00:01:04,739
think it's bad at handing external

00:01:02,879 --> 00:01:06,119
dependencies even with advanced alien

00:01:04,739 --> 00:01:08,909
technology it's a challenge and I think

00:01:06,119 --> 00:01:12,150
the vast array of open source packages

00:01:08,909 --> 00:01:14,130
that BC package provides coupled with a

00:01:12,150 --> 00:01:16,490
native Visual C++ Perl could give

00:01:14,130 --> 00:01:19,170
strawberry a run for its money

00:01:16,490 --> 00:01:21,659
the folks on the native IRC channel have

00:01:19,170 --> 00:01:24,150
pushed to fix and/or abduct a number of

00:01:21,659 --> 00:01:25,860
older broken alien modules on Sipan if

00:01:24,150 --> 00:01:28,110
you own one of these please review the

00:01:25,860 --> 00:01:30,720
patches put the modules up for adoption

00:01:28,110 --> 00:01:35,130
or contact us on I received four more

00:01:30,720 --> 00:01:37,200
help platypus is a library for writing

00:01:35,130 --> 00:01:40,229
library bindings in pro it is easier to

00:01:37,200 --> 00:01:42,240
learn and used in excess new platypus

00:01:40,229 --> 00:01:46,079
this year a new Clyde was tech this year

00:01:42,240 --> 00:01:48,450
includes the fic module for defining

00:01:46,079 --> 00:01:50,850
datatypes coming in the C programming

00:01:48,450 --> 00:01:53,610
language in particular in the past it

00:01:50,850 --> 00:01:56,939
was difficult to deal work with nested

00:01:53,610 --> 00:01:59,520
data types in pro in this example I

00:01:56,939 --> 00:02:02,579
defined a color type with red green and

00:01:59,520 --> 00:02:05,070
blue values nest that color type inside

00:02:02,579 --> 00:02:06,570
another named color typed now we can

00:02:05,070 --> 00:02:09,149
create an instance of that name color

00:02:06,570 --> 00:02:11,720
which can be passed into see using

00:02:09,149 --> 00:02:11,720
platypus

00:02:11,760 --> 00:02:18,030
you can also define and use union types

00:02:14,519 --> 00:02:19,860
now it also makes it super easy to work

00:02:18,030 --> 00:02:22,709
with enumerated types by allowing you to

00:02:19,860 --> 00:02:25,590
define an email define a function that

00:02:22,709 --> 00:02:28,079
takes that email and calling that

00:02:25,590 --> 00:02:30,920
function the strings are passed are

00:02:28,079 --> 00:02:33,480
translated into integer values for you

00:02:30,920 --> 00:02:35,340
platypus now has an interface to make it

00:02:33,480 --> 00:02:38,040
easy to bundle code from other languages

00:02:35,340 --> 00:02:40,680
in this example we're going to define a

00:02:38,040 --> 00:02:43,530
structure to represent a class write a

00:02:40,680 --> 00:02:48,030
constructor in C for that class along

00:02:43,530 --> 00:02:51,720
with some methods and a destructor now

00:02:48,030 --> 00:02:53,819
we can bind this interface to purl by

00:02:51,720 --> 00:02:55,650
using the bundle method which tells

00:02:53,819 --> 00:02:59,250
platypus to use the C code that came

00:02:55,650 --> 00:03:02,310
with this dist and attaching the method

00:02:59,250 --> 00:03:03,959
so that it can be used from purl the

00:03:02,310 --> 00:03:06,500
bundle interface also has an entry point

00:03:03,959 --> 00:03:11,540
to make it easy to define string and

00:03:06,500 --> 00:03:14,250
integer constants for Pearl from see

00:03:11,540 --> 00:03:17,099
Varitek functions like printf are also

00:03:14,250 --> 00:03:18,900
now supported you can define a function

00:03:17,099 --> 00:03:22,410
using fixed and variable argument types

00:03:18,900 --> 00:03:24,419
and call them platypus

00:03:22,410 --> 00:03:26,970
now also supports passing records by

00:03:24,419 --> 00:03:30,180
value this is the default when you're

00:03:26,970 --> 00:03:32,160
using the new version one API a star

00:03:30,180 --> 00:03:35,400
indicates a pointer if you need to pass

00:03:32,160 --> 00:03:38,010
by reference instead pass by value

00:03:35,400 --> 00:03:39,780
records are essential for modern calling

00:03:38,010 --> 00:03:40,669
modern programming languages like code

00:03:39,780 --> 00:03:43,079
and rust

00:03:40,669 --> 00:03:45,989
since these languages typically store

00:03:43,079 --> 00:03:49,620
strings as pointer integer pairs which

00:03:45,989 --> 00:03:51,510
are passed by value as a result go and

00:03:49,620 --> 00:03:54,959
rust are easier to call with new and

00:03:51,510 --> 00:03:56,609
improved language plugins with all these

00:03:54,959 --> 00:03:59,250
new toys we built some cool things with

00:03:56,609 --> 00:04:00,599
alien and platypus this year like the

00:03:59,250 --> 00:04:02,760
wise and time bindings for calling

00:04:00,599 --> 00:04:04,859
wasn't I'm sorry web assembly from Perl

00:04:02,760 --> 00:04:06,690
if you missed the talk that I gave about

00:04:04,859 --> 00:04:08,010
this project earlier in the week you can

00:04:06,690 --> 00:04:10,819
check it out on the Perl conference

00:04:08,010 --> 00:04:10,819
youtube channel

00:04:10,950 --> 00:04:15,750
we also have new bindings for New Relic

00:04:13,800 --> 00:04:17,430
this is useful for New Relic users and

00:04:15,750 --> 00:04:19,500
pearls since the older law libraries

00:04:17,430 --> 00:04:23,000
were networked never left beta and are

00:04:19,500 --> 00:04:25,740
no longer supported what about next year

00:04:23,000 --> 00:04:29,580
maybe somebody could write some live

00:04:25,740 --> 00:04:31,290
kind bindings and we could write a code

00:04:29,580 --> 00:04:33,180
generator to make writing epified

00:04:31,290 --> 00:04:36,810
bindings with lots of functions less

00:04:33,180 --> 00:04:39,300
tedious maybe you can migrate your

00:04:36,810 --> 00:04:42,330
excess or FFI code to use in a nyan limb

00:04:39,300 --> 00:04:45,360
and make it easier for your users to

00:04:42,330 --> 00:04:47,070
install if you're interested in alien

00:04:45,360 --> 00:04:49,410
and platypus tech please join us on the

00:04:47,070 --> 00:04:51,150
native channel on IRC for the

00:04:49,410 --> 00:04:53,340
appropriate project organizations on

00:04:51,150 --> 00:04:54,990
github and since I have a couple more

00:04:53,340 --> 00:04:56,910
seconds I also want to mention that we

00:04:54,990 --> 00:04:59,070
are planning on my degrading these

00:04:56,910 --> 00:05:01,110
organizations to new ones that do not

00:04:59,070 --> 00:05:03,990
have five in the name thanks to the pro

00:05:01,110 --> 00:05:05,700
7 announcement earlier this week the

00:05:03,990 --> 00:05:08,890
alien and particles teams are excited

00:05:05,700 --> 00:05:12,640
about this change thank you

00:05:08,890 --> 00:05:12,640

YouTube URL: https://www.youtube.com/watch?v=r_ccLlvn6bw


