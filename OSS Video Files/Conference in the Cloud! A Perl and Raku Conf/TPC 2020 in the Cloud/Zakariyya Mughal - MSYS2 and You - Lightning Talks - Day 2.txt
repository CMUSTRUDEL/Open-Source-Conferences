Title: Zakariyya Mughal - MSYS2 and You - Lightning Talks - Day 2
Publication date: 2020-06-25
Playlist: TPC 2020 in the Cloud
Description: 
	Deploying Perl on Windows with certain native dependencies can be tricky. This talk shows how to use MSYS2 to access many of the same packages as on Unix-likes which opens up some interesting possibilities.

https://github.com/zmughal/talk-tpc20cic-msys2-lightning-talk
Captions: 
	00:00:00,000 --> 00:00:05,840
i did the max headroom thing on purpose

00:00:02,560 --> 00:00:05,840
i'm not gonna not gonna lie

00:00:07,200 --> 00:00:12,160
and like any good advertiser the link is

00:00:09,280 --> 00:00:12,160
already on the wiki

00:00:12,320 --> 00:00:17,359
all right hello everybody uh my name is

00:00:15,599 --> 00:00:20,000
zaki magal i'm in houston

00:00:17,359 --> 00:00:20,720
where the conference was going to be

00:00:20,000 --> 00:00:22,160
held

00:00:20,720 --> 00:00:23,760
and uh today i wanted to talk to you

00:00:22,160 --> 00:00:27,199
about a

00:00:23,760 --> 00:00:30,640
tool for windows development

00:00:27,199 --> 00:00:33,040
msys2 so uh the slides are

00:00:30,640 --> 00:00:35,360
already up you can use the qr code but

00:00:33,040 --> 00:00:38,800
let's begin

00:00:35,360 --> 00:00:40,320
let's see all right so say you have

00:00:38,800 --> 00:00:42,239
some pearl code and for some reason has

00:00:40,320 --> 00:00:44,239
to run on windows whether it's

00:00:42,239 --> 00:00:46,079
your user requirements or there's some

00:00:44,239 --> 00:00:48,079
special software or hardware that only

00:00:46,079 --> 00:00:51,280
runs on windows

00:00:48,079 --> 00:00:51,760
okay but what if it can't be done just

00:00:51,280 --> 00:00:56,000
in pure

00:00:51,760 --> 00:00:57,760
pearl okay well strawberry pearl exists

00:00:56,000 --> 00:00:59,039
it's got a c compiler and probably you

00:00:57,760 --> 00:01:02,320
can use that

00:00:59,039 --> 00:01:05,760
but what happens if you have many

00:01:02,320 --> 00:01:07,200
native dependencies and there are some

00:01:05,760 --> 00:01:10,479
of them are tricky to install

00:01:07,200 --> 00:01:13,520
well that can be a pain and

00:01:10,479 --> 00:01:14,159
sometimes turns you off from actually

00:01:13,520 --> 00:01:18,000
doing

00:01:14,159 --> 00:01:20,000
the work well in comes

00:01:18,000 --> 00:01:23,119
well let's go over some uh some of the

00:01:20,000 --> 00:01:28,400
different tools that windows already had

00:01:23,119 --> 00:01:28,400
before so way back cygwin came out

00:01:28,720 --> 00:01:32,880
and uh that's just a posix-like

00:01:30,960 --> 00:01:34,479
environment but it requires you to have

00:01:32,880 --> 00:01:36,560
this dll

00:01:34,479 --> 00:01:38,079
and that gets distributed if you ever

00:01:36,560 --> 00:01:40,400
wanted to

00:01:38,079 --> 00:01:42,720
share that code with anybody else they

00:01:40,400 --> 00:01:46,799
have to have that dll

00:01:42,720 --> 00:01:49,840
uh then there was

00:01:46,799 --> 00:01:53,119
mingw which is a gcc based tool chain

00:01:49,840 --> 00:01:56,479
can be compiled for 32 bit of 64-bit

00:01:53,119 --> 00:02:00,079
but a lot of tools require

00:01:56,479 --> 00:02:03,280
unix like uh build

00:02:00,079 --> 00:02:06,399
systems to build so

00:02:03,280 --> 00:02:09,440
the mingw project released amsys

00:02:06,399 --> 00:02:12,400
which is a fork of

00:02:09,440 --> 00:02:15,440
cygwin but that was a long long time ago

00:02:12,400 --> 00:02:19,040
they never really updated it

00:02:15,440 --> 00:02:22,959
so now we have msys2 which combines

00:02:19,040 --> 00:02:25,599
mingw with updates from cygwin

00:02:22,959 --> 00:02:26,239
and a package manager there are other

00:02:25,599 --> 00:02:28,239
approaches

00:02:26,239 --> 00:02:30,319
but like like the windows subsystem from

00:02:28,239 --> 00:02:32,000
what for linux from microsoft but that

00:02:30,319 --> 00:02:33,120
uses virtualization it doesn't give you

00:02:32,000 --> 00:02:36,239
native code

00:02:33,120 --> 00:02:37,200
msys2 can give you native code that you

00:02:36,239 --> 00:02:40,400
can distribute

00:02:37,200 --> 00:02:43,920
using the win 32 apis

00:02:40,400 --> 00:02:46,160
everything like that so

00:02:43,920 --> 00:02:47,040
other projects are using msys2 right now

00:02:46,160 --> 00:02:50,080
our tools

00:02:47,040 --> 00:02:50,879
started using emphasis 2 for their

00:02:50,080 --> 00:02:53,599
installer

00:02:50,879 --> 00:02:54,879
starting with r 4.0 which was released a

00:02:53,599 --> 00:02:58,080
couple months ago

00:02:54,879 --> 00:02:59,599
uh the ruby installer does that in their

00:02:58,080 --> 00:03:04,000
uh version two

00:02:59,599 --> 00:03:08,400
uh p geo object for uh

00:03:04,000 --> 00:03:11,440
g-lib uh so all the gtk3

00:03:08,400 --> 00:03:14,319
libraries and all that it uses msys2

00:03:11,440 --> 00:03:15,120
on windows or it recommends using it on

00:03:14,319 --> 00:03:18,560
windows

00:03:15,120 --> 00:03:22,000
and so do many other uh

00:03:18,560 --> 00:03:24,319
uh free and open source software so

00:03:22,000 --> 00:03:25,200
so how do we get started well you can go

00:03:24,319 --> 00:03:28,000
to the

00:03:25,200 --> 00:03:28,480
website uh follow its instructions or

00:03:28,000 --> 00:03:31,040
use

00:03:28,480 --> 00:03:32,720
chocolaty which automates a lot of it

00:03:31,040 --> 00:03:35,760
for you

00:03:32,720 --> 00:03:39,360
uh and then

00:03:35,760 --> 00:03:40,000
once you've installed it you want to use

00:03:39,360 --> 00:03:41,920
one of their

00:03:40,000 --> 00:03:44,319
subsystems you're most likely going to

00:03:41,920 --> 00:03:47,680
be using their mingw64 subsystem to

00:03:44,319 --> 00:03:50,879
compile 64-bit code

00:03:47,680 --> 00:03:54,080
uh and then you want to install

00:03:50,879 --> 00:03:57,599
perl and a build tool chain

00:03:54,080 --> 00:04:00,879
for that 64-bit

00:03:57,599 --> 00:04:04,879
so that's what the

00:04:00,879 --> 00:04:07,920
w64 x 8664 in here uh stands for

00:04:04,879 --> 00:04:10,319
and then this pearl okay so then

00:04:07,920 --> 00:04:12,519
after that you can look up your packages

00:04:10,319 --> 00:04:15,599
uh examples of packages you've got sdl2

00:04:12,519 --> 00:04:18,799
fpw g streamer or any of those

00:04:15,599 --> 00:04:23,680
packages for images like lib ping

00:04:18,799 --> 00:04:26,960
jpeg all those uh especially for some

00:04:23,680 --> 00:04:28,880
types of tooling you want to have

00:04:26,960 --> 00:04:31,360
you have a long dependency tree so

00:04:28,880 --> 00:04:35,280
example would be g streamer

00:04:31,360 --> 00:04:35,680
and then i've got some more information

00:04:35,280 --> 00:04:39,720
here

00:04:35,680 --> 00:04:42,560
on how to install uh mc uh

00:04:39,720 --> 00:04:44,479
gtk3.pm with msys2

00:04:42,560 --> 00:04:46,320
there's an automated installer that was

00:04:44,479 --> 00:04:48,960
based on that

00:04:46,320 --> 00:04:50,479
work and if you have any questions you

00:04:48,960 --> 00:04:53,520
can reach me out

00:04:50,479 --> 00:04:56,550
reach out to me here and

00:04:53,520 --> 00:04:59,720
that's it

00:04:56,550 --> 00:04:59,720
[Music]

00:05:02,800 --> 00:05:06,800

YouTube URL: https://www.youtube.com/watch?v=s43DLnzoYeg


