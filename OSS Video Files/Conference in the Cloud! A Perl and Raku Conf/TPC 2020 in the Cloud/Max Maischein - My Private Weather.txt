Title: Max Maischein - My Private Weather
Publication date: 2020-06-24
Playlist: TPC 2020 in the Cloud
Description: 
	To display weather information, web pages and apps want access to my location data. I don't want to share my location data. My solution is to prepare the Free data from the German Weather Service myself and to deliver it via a small, offline-capable webpage/webapp/PWA to my mobile phone.
Captions: 
	00:00:02,840 --> 00:00:14,969
okay focus correctly so yes hello and

00:00:12,210 --> 00:00:18,090
welcome to my talk personal weather app

00:00:14,969 --> 00:00:19,850
my name is Max my shine and I'm very

00:00:18,090 --> 00:00:23,519
happy to have you here

00:00:19,850 --> 00:00:26,820
or well wherever here is to have you in

00:00:23,519 --> 00:00:31,890
front of your monitor or whatever I hope

00:00:26,820 --> 00:00:35,610
you'll enjoy my talk is this talk for me

00:00:31,890 --> 00:00:40,200
well hopefully yes in this talk I want

00:00:35,610 --> 00:00:42,930
to cover some several topics for example

00:00:40,200 --> 00:00:46,680
I want to talk a bit about personal

00:00:42,930 --> 00:00:49,590
privacy also a bit about application

00:00:46,680 --> 00:00:51,379
structure like how can you actually

00:00:49,590 --> 00:00:55,320
structure an application across

00:00:51,379 --> 00:00:58,800
different languages and also a bit about

00:00:55,320 --> 00:01:02,129
open data especially weather data what

00:00:58,800 --> 00:01:05,809
weather data is a variable on the

00:01:02,129 --> 00:01:05,809
internet for your use

00:01:07,280 --> 00:01:14,600
to show you today two things one is the

00:01:11,600 --> 00:01:18,500
available weather data as I already said

00:01:14,600 --> 00:01:21,130
and the second thing is I want to show

00:01:18,500 --> 00:01:24,560
you a PWA

00:01:21,130 --> 00:01:27,950
so yeah let's get started

00:01:24,560 --> 00:01:30,799
my name is Max my shine I work for the

00:01:27,950 --> 00:01:35,119
desert bank AG in Frankfurt the deutsche

00:01:30,799 --> 00:01:37,970
sent hi vanassa shafts bank this is I'm

00:01:35,119 --> 00:01:40,399
a data scientist there and recently I

00:01:37,970 --> 00:01:43,789
also acquired the title of digital

00:01:40,399 --> 00:01:46,909
currency expert and I'm also a board

00:01:43,789 --> 00:01:51,200
member of Frankfurt p.m. the Frankfurt

00:01:46,909 --> 00:01:54,130
pongas we Co organized the German power

00:01:51,200 --> 00:01:58,130
workshop every year and next year in

00:01:54,130 --> 00:02:01,069
2021 we will host the pearlberg drop in

00:01:58,130 --> 00:02:05,210
leipzig hopefully it can happen in

00:02:01,069 --> 00:02:08,149
person there if you are interested in

00:02:05,210 --> 00:02:12,140
coming to the Drummond / workshop look

00:02:08,149 --> 00:02:17,989
at our website and we will announce it

00:02:12,140 --> 00:02:21,799
there and also in other venues yeah so I

00:02:17,989 --> 00:02:25,130
want to talk a bit about whether I mean

00:02:21,799 --> 00:02:27,410
I was for a long time of the opinion

00:02:25,130 --> 00:02:32,329
that mostly weather is something that

00:02:27,410 --> 00:02:36,200
happens to other people but I can stay

00:02:32,329 --> 00:02:40,040
inside or simply dress accordingly but

00:02:36,200 --> 00:02:43,549
yes there is my godson and his siblings

00:02:40,040 --> 00:02:48,410
and they are relatively young kids with

00:02:43,549 --> 00:02:52,700
age 9 and 6 and so they must go outside

00:02:48,410 --> 00:02:55,160
everyday and obviously also need to go

00:02:52,700 --> 00:02:57,440
outside long enough so that they are

00:02:55,160 --> 00:03:00,890
tired in the evening and I don't have

00:02:57,440 --> 00:03:03,380
much I have don't have to spend much

00:03:00,890 --> 00:03:07,250
effort in getting them to bed and to

00:03:03,380 --> 00:03:10,220
sleep so yeah the weather forecast has

00:03:07,250 --> 00:03:14,269
become something of interest to me

00:03:10,220 --> 00:03:16,730
because I need one to dress or want to

00:03:14,269 --> 00:03:20,490
see that the kids are dressed well

00:03:16,730 --> 00:03:25,120
enough to stay long enough outside

00:03:20,490 --> 00:03:28,330
so yeah how does a PWA come into play

00:03:25,120 --> 00:03:32,650
here well PWA obviously stands for

00:03:28,330 --> 00:03:35,010
personal weather application actually no

00:03:32,650 --> 00:03:38,500
it stands for progressive web

00:03:35,010 --> 00:03:41,680
application but don't put too much

00:03:38,500 --> 00:03:47,709
weight on the individual rods there

00:03:41,680 --> 00:03:50,560
because yeah well the well maybe the web

00:03:47,709 --> 00:03:53,410
and application are actually of

00:03:50,560 --> 00:03:58,030
importance but the word progressive is

00:03:53,410 --> 00:04:00,910
just there and what it basically is is a

00:03:58,030 --> 00:04:07,840
website that can dress up as a mobile

00:04:00,910 --> 00:04:12,970
app so yeah that's what a PWA basically

00:04:07,840 --> 00:04:16,239
is now what do I want from a weather

00:04:12,970 --> 00:04:20,230
application that yeah this place the

00:04:16,239 --> 00:04:23,590
weather well I want something like a

00:04:20,230 --> 00:04:27,729
three-day forecast for multiple

00:04:23,590 --> 00:04:32,140
locations and multiple days so that I

00:04:27,729 --> 00:04:34,240
can know whether their kids can go

00:04:32,140 --> 00:04:38,410
outside tomorrow or something like that

00:04:34,240 --> 00:04:41,229
and for every day I want something

00:04:38,410 --> 00:04:44,979
manageable like four forecasts for every

00:04:41,229 --> 00:04:49,270
day like morning midday evening at night

00:04:44,979 --> 00:04:51,490
and there I'd like their weather in

00:04:49,270 --> 00:04:54,220
general like will it be sunny cloudy

00:04:51,490 --> 00:04:58,330
rainy and the temperature minimum

00:04:54,220 --> 00:05:02,650
maximum something like that and I'd also

00:04:58,330 --> 00:05:06,310
like trust for my CERN display purposes

00:05:02,650 --> 00:05:10,479
today forecast that basically also has

00:05:06,310 --> 00:05:13,330
the multiple locations but then simply

00:05:10,479 --> 00:05:17,140
one big icon with the current weather

00:05:13,330 --> 00:05:21,840
and again the forecast for today for

00:05:17,140 --> 00:05:25,060
that location something like that and

00:05:21,840 --> 00:05:27,670
yeah of course there are existing

00:05:25,060 --> 00:05:30,439
solutions let me

00:05:27,670 --> 00:05:34,519
[Music]

00:05:30,439 --> 00:05:38,979
yeah there are existing solutions but

00:05:34,519 --> 00:05:42,860
all these existing solutions are really

00:05:38,979 --> 00:05:48,459
intent on showing me advertisements or

00:05:42,860 --> 00:05:53,119
and also really do want my GPS location

00:05:48,459 --> 00:05:55,909
and I really want my GPS location I mean

00:05:53,119 --> 00:05:59,769
they want the exact location that is I

00:05:55,909 --> 00:06:03,229
can't geofence it to like something if

00:05:59,769 --> 00:06:06,529
the location is within one kilometer of

00:06:03,229 --> 00:06:08,989
this point center point call it work or

00:06:06,529 --> 00:06:14,209
something and just return this one

00:06:08,989 --> 00:06:18,399
location yeah this is thanks to Google

00:06:14,209 --> 00:06:23,989
who don't offer any geofencing API and

00:06:18,399 --> 00:06:27,079
yeah I'm somebody I don't really like to

00:06:23,989 --> 00:06:31,610
share my location not with Google not

00:06:27,079 --> 00:06:36,669
with anybody so yeah those existing

00:06:31,610 --> 00:06:40,699
solutions are not really what I want

00:06:36,669 --> 00:06:46,490
there are also some nice websites like

00:06:40,699 --> 00:06:50,629
this for example HTTP waiter try n it is

00:06:46,490 --> 00:06:53,240
fairly lightweight and yeah it has the

00:06:50,629 --> 00:06:57,529
drawback of not being a variable offline

00:06:53,240 --> 00:07:01,089
but other than that it's already in a

00:06:57,529 --> 00:07:06,249
very minimalistic way and yeah quite

00:07:01,089 --> 00:07:10,669
nice to use from the console for example

00:07:06,249 --> 00:07:13,369
but again the drawback is that it is

00:07:10,669 --> 00:07:17,800
hosted by other people so those other

00:07:13,369 --> 00:07:21,439
people know something about my location

00:07:17,800 --> 00:07:24,169
of course there's also the German

00:07:21,439 --> 00:07:28,909
Weather Service they have the one fatah

00:07:24,169 --> 00:07:34,789
app free application by the government

00:07:28,909 --> 00:07:39,550
Weather Service and yeah sorry they also

00:07:34,789 --> 00:07:42,289
display the weather information and

00:07:39,550 --> 00:07:44,210
temperature and forecasts they eat ramen

00:07:42,289 --> 00:07:47,840
weather service producers

00:07:44,210 --> 00:07:50,870
and obviously that data that application

00:07:47,840 --> 00:07:53,630
has no advertisements because it's from

00:07:50,870 --> 00:07:59,539
the government and not from some private

00:07:53,630 --> 00:08:02,539
company the data by the Drummond Weather

00:07:59,539 --> 00:08:05,389
Service is actually free and there was a

00:08:02,539 --> 00:08:08,000
bit of a tussle around their app because

00:08:05,389 --> 00:08:10,660
they also make that app free for

00:08:08,000 --> 00:08:14,210
download and the commercial weather

00:08:10,660 --> 00:08:18,349
suppliers and forecast suppliers were

00:08:14,210 --> 00:08:23,360
against providing that app in

00:08:18,349 --> 00:08:28,820
competition to their app so yeah but

00:08:23,360 --> 00:08:31,220
that got me thinking because in during

00:08:28,820 --> 00:08:35,810
that tunnel I learned that the German

00:08:31,220 --> 00:08:39,320
weather data is actually free so maybe I

00:08:35,810 --> 00:08:42,770
could just use that weather service data

00:08:39,320 --> 00:08:48,800
to self host my own weather display

00:08:42,770 --> 00:08:51,560
application so the idea is to fetch the

00:08:48,800 --> 00:08:56,440
data from the Drummond weather service

00:08:51,560 --> 00:09:00,470
DWD that data set is named Maas makes

00:08:56,440 --> 00:09:05,110
multi-output system mix or something

00:09:00,470 --> 00:09:09,920
like that they take historical data and

00:09:05,110 --> 00:09:12,649
I enhanced that with the current weather

00:09:09,920 --> 00:09:17,750
data and make then predictions from that

00:09:12,649 --> 00:09:21,260
and you get 48 480 hours of forecast

00:09:17,750 --> 00:09:26,390
that's like 20 calendar days of forecast

00:09:21,260 --> 00:09:29,540
data and they cover all of Germany and

00:09:26,390 --> 00:09:32,750
also some other parts of the world wave

00:09:29,540 --> 00:09:37,850
well they have weather stations or where

00:09:32,750 --> 00:09:41,149
they get weather data from so yeah

00:09:37,850 --> 00:09:46,070
basically the overall structure will be

00:09:41,149 --> 00:09:48,560
something like this we download the data

00:09:46,070 --> 00:09:52,160
from the German weather service using

00:09:48,560 --> 00:09:57,230
Poe then store that data in a database

00:09:52,160 --> 00:10:02,330
and throw it on mobile via HTTP

00:09:57,230 --> 00:10:05,690
and ideally we also make the data

00:10:02,330 --> 00:10:08,960
available offline on the mobile phone by

00:10:05,690 --> 00:10:12,740
caching the data aggressively so that

00:10:08,960 --> 00:10:15,260
even if I haven't learned I even if I

00:10:12,740 --> 00:10:19,700
don't have a network connection I can

00:10:15,260 --> 00:10:22,490
still access the stale data but stale

00:10:19,700 --> 00:10:28,130
data is maybe better than having no data

00:10:22,490 --> 00:10:31,760
at all at least in this case so yeah

00:10:28,130 --> 00:10:34,910
that's basically what I have a self

00:10:31,760 --> 00:10:37,670
written app you see here the HTML output

00:10:34,910 --> 00:10:42,070
of this three-day forecast

00:10:37,670 --> 00:10:46,600
it has yeah some nice emoji for weather

00:10:42,070 --> 00:10:52,570
display and the temperatures and

00:10:46,600 --> 00:10:56,600
locations and also a forecast of today

00:10:52,570 --> 00:11:02,870
yeah that these are the two main screens

00:10:56,600 --> 00:11:06,290
that are of daily interest to me so yeah

00:11:02,870 --> 00:11:09,650
let's take a closer look a bit at the

00:11:06,290 --> 00:11:13,390
the applications that I wrote for that

00:11:09,650 --> 00:11:20,420
unless there are questions to it

00:11:13,390 --> 00:11:26,600
moderator or Treach no it nothing in

00:11:20,420 --> 00:11:30,170
Treach okay so yeah let's take a look at

00:11:26,600 --> 00:11:33,260
the structure of the applications I need

00:11:30,170 --> 00:11:36,260
to bring the focus back sorry so yeah

00:11:33,260 --> 00:11:40,300
there is a back-end which yeah basically

00:11:36,260 --> 00:11:44,390
concerns itself with fetching the data

00:11:40,300 --> 00:11:47,870
into my system and then there is a

00:11:44,390 --> 00:11:52,460
front-end for the console for my desktop

00:11:47,870 --> 00:11:56,660
written in po it's also yeah some part

00:11:52,460 --> 00:11:59,650
of the test suit so I know that I don't

00:11:56,660 --> 00:12:02,690
break some basic functionality and

00:11:59,650 --> 00:12:07,580
obviously for the mobile phone there is

00:12:02,690 --> 00:12:10,490
a JavaScript front-end that also can

00:12:07,580 --> 00:12:11,089
fetch the data in displayed on the

00:12:10,490 --> 00:12:16,550
mobile

00:12:11,089 --> 00:12:23,350
on the data that the Drummond Weather

00:12:16,550 --> 00:12:27,019
Service provides is actually in key KML

00:12:23,350 --> 00:12:31,189
KML the keyhole markup language is an

00:12:27,019 --> 00:12:34,519
XML schema for locations and it's

00:12:31,189 --> 00:12:38,809
actually a widely used XML schema at

00:12:34,519 --> 00:12:42,889
least Google Earth also uses it and the

00:12:38,809 --> 00:12:46,249
name keyhole comes from a series of US

00:12:42,889 --> 00:12:49,279
spy satellites that yeah also had the

00:12:46,249 --> 00:12:51,249
name keyhole I don't really know what to

00:12:49,279 --> 00:12:57,559
make of that

00:12:51,249 --> 00:13:01,970
so yeah the KML that we get looks a bit

00:12:57,559 --> 00:13:04,759
like this below in the screen um the

00:13:01,970 --> 00:13:08,449
German weather service added their own

00:13:04,759 --> 00:13:13,399
namespace for the Edition which is great

00:13:08,449 --> 00:13:17,649
they added the DWD forecast tech and

00:13:13,399 --> 00:13:20,600
below that the GWT value check and

00:13:17,649 --> 00:13:25,639
within that value take there are the

00:13:20,600 --> 00:13:29,300
forecast values the only weird thing is

00:13:25,639 --> 00:13:33,259
that they didn't add or then convert

00:13:29,300 --> 00:13:36,649
their own data to XML but the payload

00:13:33,259 --> 00:13:41,449
data within the value tag is actually

00:13:36,649 --> 00:13:45,230
fixed width data so we then have to pass

00:13:41,449 --> 00:13:49,240
that string into a series of numbers but

00:13:45,230 --> 00:13:49,240
Paul can do that quite well

00:13:49,460 --> 00:13:58,800
so yeah the back end has some tasks it

00:13:56,010 --> 00:14:01,110
mainly runs as a cron job that fetches

00:13:58,800 --> 00:14:04,650
the data from the Drummond weather

00:14:01,110 --> 00:14:11,880
service and passes that data into an

00:14:04,650 --> 00:14:15,720
SQLite database and for non tall clients

00:14:11,880 --> 00:14:19,140
there is a small HTTP server well a CGI

00:14:15,720 --> 00:14:21,630
script that serves the data over HTTP

00:14:19,140 --> 00:14:24,590
and for Perl

00:14:21,630 --> 00:14:28,740
there is also a module that provides

00:14:24,590 --> 00:14:32,400
basically the same API and the database

00:14:28,740 --> 00:14:36,030
access through the SQLite pipe so that

00:14:32,400 --> 00:14:40,740
yeah I don't have to take the HTTP trip

00:14:36,030 --> 00:14:44,010
from within pull and yeah obviously that

00:14:40,740 --> 00:14:49,490
Perl API is used in the CGI script

00:14:44,010 --> 00:14:53,570
choice of the data for other clients a

00:14:49,490 --> 00:14:58,050
query and response between a client and

00:14:53,570 --> 00:15:00,630
the server looks a bit like this the

00:14:58,050 --> 00:15:05,220
client asks I'd like the weather for

00:15:00,630 --> 00:15:08,340
latitude 50.1 and longitude 8.7 and it

00:15:05,220 --> 00:15:10,410
gets back an answer there is the

00:15:08,340 --> 00:15:14,010
description for the location is

00:15:10,410 --> 00:15:17,940
frankfurt sire and the center latitude

00:15:14,010 --> 00:15:20,490
of that location is 50.1 1 and the

00:15:17,940 --> 00:15:25,230
longitude is eight point six eight and

00:15:20,490 --> 00:15:29,840
the forecast is cloudy cloudy cloudy or

00:15:25,230 --> 00:15:31,440
whatever so yeah it gets a predigested

00:15:29,840 --> 00:15:35,640
answer back

00:15:31,440 --> 00:15:40,650
that should make creating the display

00:15:35,640 --> 00:15:44,640
for the user a bit easier the data

00:15:40,650 --> 00:15:49,560
stored in the backend is fairly simple

00:15:44,640 --> 00:15:52,530
it's basically a single SQL table well

00:15:49,560 --> 00:15:55,820
actually - but I'll get to the second

00:15:52,530 --> 00:16:00,700
table later it's basically a four column

00:15:55,820 --> 00:16:02,950
SQL table having the name

00:16:00,700 --> 00:16:07,360
which is more or less the ID of the

00:16:02,950 --> 00:16:10,540
weather station then the expiry that is

00:16:07,360 --> 00:16:14,050
when the forecast expires and the issue

00:16:10,540 --> 00:16:17,110
time which basically is the file where

00:16:14,050 --> 00:16:20,830
the weather forecast data came from and

00:16:17,110 --> 00:16:25,480
then one big string column holding all

00:16:20,830 --> 00:16:30,570
the forecasts for this location for the

00:16:25,480 --> 00:16:36,780
next four fourth for the next 480 hours

00:16:30,570 --> 00:16:41,290
in one yeah Jason formatted string and

00:16:36,780 --> 00:16:44,230
yeah it's all stored in SQLite and yes I

00:16:41,290 --> 00:16:48,820
already said the data is predigested

00:16:44,230 --> 00:16:54,130
because the API will then hand out the

00:16:48,820 --> 00:16:57,850
same predigested data anyway while

00:16:54,130 --> 00:17:01,360
importing I only keep the temperature

00:16:57,850 --> 00:17:04,590
and weather code forecasts there are

00:17:01,360 --> 00:17:08,650
many many more forecasts like wind speed

00:17:04,590 --> 00:17:11,740
dewpoint at ground level dew point two

00:17:08,650 --> 00:17:15,340
meters above ground and some other stuff

00:17:11,740 --> 00:17:18,580
I don't have a use for it so I don't

00:17:15,340 --> 00:17:21,730
import it into the database but yeah

00:17:18,580 --> 00:17:25,810
it's in principle it can also be

00:17:21,730 --> 00:17:31,630
imported into the database if there is a

00:17:25,810 --> 00:17:35,080
need for it and yeah again as I already

00:17:31,630 --> 00:17:39,760
said the meat of the table is in the

00:17:35,080 --> 00:17:43,090
forecast column start as Grayson I am

00:17:39,760 --> 00:17:47,500
not too unhappy with storing the data in

00:17:43,090 --> 00:17:52,000
this JSON format because I don't foresee

00:17:47,500 --> 00:17:57,550
any need to do queries across different

00:17:52,000 --> 00:18:01,120
weather stations and even if so SQLite

00:17:57,550 --> 00:18:04,120
already has tracing functions so I could

00:18:01,120 --> 00:18:08,350
write SQL queries across the trace and

00:18:04,120 --> 00:18:11,920
form column even and extract values from

00:18:08,350 --> 00:18:14,350
the JSON string for yeah I don't know

00:18:11,920 --> 00:18:17,410
maybe the mean weather across

00:18:14,350 --> 00:18:19,630
all weather stations in a radius of 10

00:18:17,410 --> 00:18:22,690
kilometers around me or something like

00:18:19,630 --> 00:18:26,770
that yeah

00:18:22,690 --> 00:18:31,059
the back end has these drops head to the

00:18:26,770 --> 00:18:33,429
data pastor came L data storage and make

00:18:31,059 --> 00:18:38,309
it available as an SQLite a light

00:18:33,429 --> 00:18:43,150
database and the code for this is

00:18:38,309 --> 00:18:46,600
basically just ug zip together with XML

00:18:43,150 --> 00:18:50,740
tweak because I addressed allows me to

00:18:46,600 --> 00:18:54,370
read from the data from the kimchi fire

00:18:50,740 --> 00:18:58,150
KML file without needing to decompress

00:18:54,370 --> 00:19:01,480
it so the files days the 30 megabytes

00:18:58,150 --> 00:19:07,450
size it is instead of ballooning up to

00:19:01,480 --> 00:19:11,500
300 megabyte uncompressed and ya XML

00:19:07,450 --> 00:19:15,549
tweak then calls my callbacks where I

00:19:11,500 --> 00:19:19,539
then passed the fixed width data and

00:19:15,549 --> 00:19:24,730
extract the temperature and yeah

00:19:19,539 --> 00:19:28,179
everything that I want from the data and

00:19:24,730 --> 00:19:33,159
yeah I promised there would be a second

00:19:28,179 --> 00:19:35,620
table the the information or about the

00:19:33,159 --> 00:19:39,039
locations and the actual human

00:19:35,620 --> 00:19:42,669
digestible names I'll start in a second

00:19:39,039 --> 00:19:45,520
table that map's the ID in the name

00:19:42,669 --> 00:19:50,700
column to a latitude and longitude and

00:19:45,520 --> 00:19:54,520
also some description which yeah

00:19:50,700 --> 00:19:59,559
hopefully gives me an idea where while

00:19:54,520 --> 00:20:03,780
searching for the location which

00:19:59,559 --> 00:20:03,780
location I might actually want

00:20:07,200 --> 00:20:15,400
yeah the data is sort predigested and

00:20:11,970 --> 00:20:17,950
why do I store the data predigested

00:20:15,400 --> 00:20:21,250
because I want to keep my querying

00:20:17,950 --> 00:20:27,820
laundry or in general the logic in the

00:20:21,250 --> 00:20:33,340
front-end programs very simple so yeah

00:20:27,820 --> 00:20:38,400
let's look again at the API format it

00:20:33,340 --> 00:20:41,680
allows hopefully I say for a thin client

00:20:38,400 --> 00:20:46,180
because the backend produces the data in

00:20:41,680 --> 00:20:50,110
a predigested way basically the data

00:20:46,180 --> 00:20:54,370
that the backend delivers is location

00:20:50,110 --> 00:20:57,850
and below each location the forecast and

00:20:54,370 --> 00:21:02,020
for each for each forecast basically

00:20:57,850 --> 00:21:04,870
already has the information that I am

00:21:02,020 --> 00:21:08,980
going to display already laid out in a

00:21:04,870 --> 00:21:12,190
grid format so the forecast has as its

00:21:08,980 --> 00:21:15,040
first entry the day one slot one entry

00:21:12,190 --> 00:21:19,000
then the day two slot one entry and the

00:21:15,040 --> 00:21:22,150
day day three slot one entry and after

00:21:19,000 --> 00:21:27,550
that the day one slot two entry and so

00:21:22,150 --> 00:21:31,690
on so yeah there won't be even a need

00:21:27,550 --> 00:21:37,320
for like passing rows or anything in the

00:21:31,690 --> 00:21:37,320
client to know where to read the data

00:21:38,220 --> 00:21:45,210
this made the the template for

00:21:42,550 --> 00:21:48,670
displaying the data really simple I

00:21:45,210 --> 00:21:51,640
chose handlebars as the templating

00:21:48,670 --> 00:21:56,800
engine because the handlebars template

00:21:51,640 --> 00:21:59,170
syntax is not entirely horrible and also

00:21:56,800 --> 00:22:01,990
there is a handlebars engine for pearl

00:21:59,170 --> 00:22:05,500
and and handlebars engine for JavaScript

00:22:01,990 --> 00:22:11,680
so that more or less means I can reuse

00:22:05,500 --> 00:22:14,170
the template data or at least yeah I

00:22:11,680 --> 00:22:16,600
don't have to think in to templating

00:22:14,170 --> 00:22:19,950
languages depending on whether I'm

00:22:16,600 --> 00:22:23,440
coding for JavaScript also Perl

00:22:19,950 --> 00:22:27,400
having the data predigested also men

00:22:23,440 --> 00:22:31,000
means that i don't need to write loops

00:22:27,400 --> 00:22:34,690
in my templating language because all

00:22:31,000 --> 00:22:38,470
information is at fixed offsets in the

00:22:34,690 --> 00:22:41,740
forecast array so i just can use the

00:22:38,470 --> 00:22:45,190
fixed offsets and be done with it

00:22:41,740 --> 00:22:48,880
this also made creating the HTML layout

00:22:45,190 --> 00:22:52,960
much much easier for me because yeah i

00:22:48,880 --> 00:22:56,770
don't have to worry about having a

00:22:52,960 --> 00:22:59,050
variable number of elements in to

00:22:56,770 --> 00:23:01,750
display i always know there will be

00:22:59,050 --> 00:23:05,080
three by four elements to display in the

00:23:01,750 --> 00:23:10,450
temperature so yeah that that makes it

00:23:05,080 --> 00:23:13,480
easy to me the structure of the

00:23:10,450 --> 00:23:16,659
front-end programs the output should be

00:23:13,480 --> 00:23:19,690
simple between

00:23:16,659 --> 00:23:23,049
all variants of my front-end program I

00:23:19,690 --> 00:23:26,379
mean for the command-line client this is

00:23:23,049 --> 00:23:30,159
very simple because yeah it's basically

00:23:26,379 --> 00:23:34,149
some print statements and the CDI is

00:23:30,159 --> 00:23:37,029
also a simple program in terms of logic

00:23:34,149 --> 00:23:43,869
because it fills the template from the

00:23:37,029 --> 00:23:48,330
data and is done um yeah but for the

00:23:43,869 --> 00:23:51,820
JavaScript thing I want something yeah

00:23:48,330 --> 00:23:54,580
let's call it interactive I mean I want

00:23:51,820 --> 00:23:59,109
to be able to scroll around between the

00:23:54,580 --> 00:24:03,840
locations and all of that logic has to

00:23:59,109 --> 00:24:07,239
be available in JavaScript because in

00:24:03,840 --> 00:24:10,090
yeah yeah in the likely situation I

00:24:07,239 --> 00:24:15,220
won't be online so I can't fetch new

00:24:10,090 --> 00:24:18,369
data from the CGI now what does the

00:24:15,220 --> 00:24:21,849
command line app look like it looks like

00:24:18,369 --> 00:24:24,279
this because on my console the font I

00:24:21,849 --> 00:24:28,629
have used does not implement the weather

00:24:24,279 --> 00:24:33,129
emoji but yeah instead you get the

00:24:28,629 --> 00:24:36,820
output of the HTML version here it looks

00:24:33,129 --> 00:24:40,149
yeah unsurprising and test the location

00:24:36,820 --> 00:24:44,979
and the three days with four forecast

00:24:40,149 --> 00:24:50,710
entries for every day so yeah no nothing

00:24:44,979 --> 00:24:54,309
really fancy there so basically for the

00:24:50,710 --> 00:24:58,479
command line and the CGI the things are

00:24:54,309 --> 00:25:02,070
clear we have the application with its

00:24:58,479 --> 00:25:04,539
data like with screen to display the

00:25:02,070 --> 00:25:07,059
application and its state sorry like

00:25:04,539 --> 00:25:09,789
which screen to display and which

00:25:07,059 --> 00:25:13,629
location list and we have the weather

00:25:09,789 --> 00:25:17,139
data and we put that into the template

00:25:13,629 --> 00:25:24,669
and out comes the screen that we display

00:25:17,139 --> 00:25:28,710
and for the interactive app we can fake

00:25:24,669 --> 00:25:30,429
the interactivity by separating out the

00:25:28,710 --> 00:25:36,759
state lottery

00:25:30,429 --> 00:25:41,259
again from the weather data and then

00:25:36,759 --> 00:25:44,320
instead of updating what we display we

00:25:41,259 --> 00:25:47,379
can again rerender the complete page

00:25:44,320 --> 00:25:51,759
template as long as the JavaScript

00:25:47,379 --> 00:25:54,680
application has the template included in

00:25:51,759 --> 00:25:59,510
itself

00:25:54,680 --> 00:26:01,750
and yeah maybe you know this or if you

00:25:59,510 --> 00:26:05,210
don't know this you learn it now

00:26:01,750 --> 00:26:09,440
re-rendering the complete page is bad

00:26:05,210 --> 00:26:12,020
and confusing because if the page gets

00:26:09,440 --> 00:26:15,320
completely rebuilt you lose the position

00:26:12,020 --> 00:26:19,130
on the page and you also lose mark text

00:26:15,320 --> 00:26:21,920
if you have marked some text or using

00:26:19,130 --> 00:26:24,200
the mouse or something or if you enter

00:26:21,920 --> 00:26:27,860
text into a text entry field or

00:26:24,200 --> 00:26:32,540
something like that so I really want to

00:26:27,860 --> 00:26:36,770
avoid re-rendering and the solution as

00:26:32,540 --> 00:26:39,850
with many solutions is to add one more

00:26:36,770 --> 00:26:39,850
layer of indirection

00:26:41,550 --> 00:26:49,650
so instead of updating and no instead of

00:26:47,100 --> 00:26:54,810
doing the updates by rear-ending the

00:26:49,650 --> 00:26:58,320
complete page i re-render the page diff

00:26:54,810 --> 00:27:02,900
the page with the current page and then

00:26:58,320 --> 00:27:06,180
replace only those parts of the

00:27:02,900 --> 00:27:08,880
displayed page that are actually

00:27:06,180 --> 00:27:11,640
different in the new template or in the

00:27:08,880 --> 00:27:15,690
new rendered page from the old rendered

00:27:11,640 --> 00:27:20,280
page so all parts that did not change

00:27:15,690 --> 00:27:24,510
our simply kept as is so if the user has

00:27:20,280 --> 00:27:27,750
marked or changed something that was not

00:27:24,510 --> 00:27:32,300
changed by the template it will stay as

00:27:27,750 --> 00:27:35,850
is so for JavaScript the logic looks

00:27:32,300 --> 00:27:38,430
like this instead of simply filling the

00:27:35,850 --> 00:27:43,860
template and displaying the filled out

00:27:38,430 --> 00:27:46,890
template we fill the template compare

00:27:43,860 --> 00:27:49,170
that filled out version with the current

00:27:46,890 --> 00:27:52,730
displayed currently display page and

00:27:49,170 --> 00:27:55,350
then change the currently displayed page

00:27:52,730 --> 00:27:58,860
or the elements of the currently

00:27:55,350 --> 00:28:04,760
displayed page to match the new page and

00:27:58,860 --> 00:28:07,620
that's it so yeah there are the the

00:28:04,760 --> 00:28:12,150
implementation on the JavaScript side oh

00:28:07,620 --> 00:28:15,750
sorry I need to you click Change missile

00:28:12,150 --> 00:28:19,200
on the implementation on the JavaScript

00:28:15,750 --> 00:28:23,460
side of the world is basically just

00:28:19,200 --> 00:28:28,170
vanilla draya's and some libraries like

00:28:23,460 --> 00:28:31,790
local storage is what I use for storing

00:28:28,170 --> 00:28:35,340
the data there is the local forestry s

00:28:31,790 --> 00:28:38,280
library and for templating I already

00:28:35,340 --> 00:28:42,330
said there is the handlebars trace

00:28:38,280 --> 00:28:45,660
library and the page updates that

00:28:42,330 --> 00:28:48,510
dipping between an HTML string and the

00:28:45,660 --> 00:28:54,200
currently display page is done by the

00:28:48,510 --> 00:28:54,200
morph Dom tree as JavaScript library

00:28:54,960 --> 00:29:03,960
so yeah that's the the basic overview of

00:29:00,070 --> 00:29:09,250
the three or two applications that I

00:29:03,960 --> 00:29:12,370
wrote there is a bit more about a PWA

00:29:09,250 --> 00:29:18,820
then just a website that can dress up as

00:29:12,370 --> 00:29:21,850
a mobile app because a web because a PWA

00:29:18,820 --> 00:29:27,580
can also put an icon on the Start screen

00:29:21,850 --> 00:29:31,270
and also hide the browser address bar it

00:29:27,580 --> 00:29:34,929
can store more local data than a simple

00:29:31,270 --> 00:29:38,020
web page can do and it can even display

00:29:34,929 --> 00:29:41,260
notifications on your mobile phone or in

00:29:38,020 --> 00:29:44,320
the browser for example the zoo map of

00:29:41,260 --> 00:29:47,830
this car the zoom website of this

00:29:44,320 --> 00:29:51,280
browser or this conference or the selec

00:29:47,830 --> 00:29:54,130
web site for this conference also could

00:29:51,280 --> 00:30:00,160
display tray notifications on your

00:29:54,130 --> 00:30:04,240
operating system and ideally in the near

00:30:00,160 --> 00:30:08,169
future a PWA even can do background data

00:30:04,240 --> 00:30:10,480
refresh so that my weather app could

00:30:08,169 --> 00:30:13,330
fetch the weather data in the background

00:30:10,480 --> 00:30:16,679
instead of only fetching it or trying to

00:30:13,330 --> 00:30:22,870
fetch it when I open the data or the

00:30:16,679 --> 00:30:26,610
application yeah so a PWA can be a bit

00:30:22,870 --> 00:30:31,620
more than just a heavily cached web site

00:30:26,610 --> 00:30:40,210
so now I'm going to try a live demo

00:30:31,620 --> 00:30:40,620
let's find my console window there we

00:30:40,210 --> 00:30:49,290
are

00:30:40,620 --> 00:30:49,290
and my mobile phone

00:30:51,229 --> 00:30:59,749
and I also have to switch over to the

00:31:00,289 --> 00:31:06,809
yep

00:31:03,019 --> 00:31:13,259
there you see it on the phone I hope you

00:31:06,809 --> 00:31:18,299
all can see my mobile phone now so like

00:31:13,259 --> 00:31:22,349
this and of course the application is

00:31:18,299 --> 00:31:25,859
already live here it is it's yeah

00:31:22,349 --> 00:31:30,409
basically just what use what you saw in

00:31:25,859 --> 00:31:33,929
the screenshots already um you can

00:31:30,409 --> 00:31:37,619
switch here between the locations and we

00:31:33,929 --> 00:31:41,039
see it's nice and warm here then we can

00:31:37,619 --> 00:31:43,349
switch to the current weather and we

00:31:41,039 --> 00:31:47,549
also have an about screen and a config

00:31:43,349 --> 00:31:53,299
screen yeah the font here could be a bit

00:31:47,549 --> 00:31:59,639
larger but I'm not really good 80ml

00:31:53,299 --> 00:32:03,389
wizard and what is different here

00:31:59,639 --> 00:32:07,409
between a normal website and a PWA is

00:32:03,389 --> 00:32:10,979
this little house icon here which means

00:32:07,409 --> 00:32:14,190
that this website can be installed on

00:32:10,979 --> 00:32:17,940
the phone as an app and if I click this

00:32:14,190 --> 00:32:21,389
my browser asks me whether I really want

00:32:17,940 --> 00:32:24,389
to install this I say yes and then I can

00:32:21,389 --> 00:32:29,129
choose the icon and edit to my Start

00:32:24,389 --> 00:32:32,539
screen and then if I start it well it

00:32:29,129 --> 00:32:37,729
opens the same app but there is no more

00:32:32,539 --> 00:32:42,149
address power here and yeah that's the

00:32:37,729 --> 00:32:45,299
the important part of the PWA that

00:32:42,149 --> 00:32:48,539
nobody needs to know that it is really

00:32:45,299 --> 00:32:53,549
just some HTML with a bit of JavaScript

00:32:48,539 --> 00:32:58,979
and the most important part is of course

00:32:53,549 --> 00:33:02,070
if I go offline then I can still use the

00:32:58,979 --> 00:33:04,980
data or the application and it's still

00:33:02,070 --> 00:33:11,960
launchers and I still

00:33:04,980 --> 00:33:13,230
can use it just as if I were online um

00:33:11,960 --> 00:33:18,990
yeah

00:33:13,230 --> 00:33:22,260
there is no weather in the cloud um but

00:33:18,990 --> 00:33:31,400
yeah so everything also works offline

00:33:22,260 --> 00:33:31,400
just like I want so let me switch back

00:33:31,900 --> 00:33:45,760
to the presentation

00:33:35,910 --> 00:33:49,240
yeah so yeah I wrote this using vanilla

00:33:45,760 --> 00:33:52,660
draya's that is I did not use react or

00:33:49,240 --> 00:33:56,860
angular or any of the other frameworks

00:33:52,660 --> 00:34:00,100
like vu yeah sorry I forgot that one um

00:33:56,860 --> 00:34:03,880
but you basically put the application

00:34:00,100 --> 00:34:07,030
together for by using some JavaScript

00:34:03,880 --> 00:34:11,080
libraries this has some disadvantages

00:34:07,030 --> 00:34:14,230
like there is no support for work by

00:34:11,080 --> 00:34:19,300
other people I don't get any fancy

00:34:14,230 --> 00:34:23,080
pre-made selector widgets or integration

00:34:19,300 --> 00:34:24,909
with say Google Maps or anything if I

00:34:23,080 --> 00:34:26,110
want something like that I will have to

00:34:24,909 --> 00:34:29,220
write it myself

00:34:26,110 --> 00:34:33,130
instead of using other people's work and

00:34:29,220 --> 00:34:36,090
I also don't get automatic evolution to

00:34:33,130 --> 00:34:40,929
the latest and greatest browser features

00:34:36,090 --> 00:34:44,919
because again other people who implement

00:34:40,929 --> 00:34:48,040
this yeah they might share their code

00:34:44,919 --> 00:34:50,730
but if it's not in one of the libraries

00:34:48,040 --> 00:34:54,790
I already use I have to do my own

00:34:50,730 --> 00:34:57,640
development but it also has big

00:34:54,790 --> 00:35:00,730
advantages in my opinion it's a really

00:34:57,640 --> 00:35:04,120
small codebase it's three driver script

00:35:00,730 --> 00:35:09,220
files and the additional libraries are

00:35:04,120 --> 00:35:12,880
like 70k uncompressed code so yeah it's

00:35:09,220 --> 00:35:17,080
it's manageable code and also there is

00:35:12,880 --> 00:35:19,840
no automatic evolution of things if I

00:35:17,080 --> 00:35:23,950
want to put out a new release I don't

00:35:19,840 --> 00:35:27,520
download half of the internet form using

00:35:23,950 --> 00:35:30,990
my build tool and then have to fix all

00:35:27,520 --> 00:35:35,820
the change api's and stuff like that so

00:35:30,990 --> 00:35:35,820
yeah in my opinion that's still

00:35:37,950 --> 00:35:45,180
with Germany I'm quite lucky to have our

00:35:42,380 --> 00:35:49,460
government weather service that provides

00:35:45,180 --> 00:35:52,500
free weather data in other countries the

00:35:49,460 --> 00:35:57,240
situation is not too dissimilar but

00:35:52,500 --> 00:36:00,180
different in the US which is what I will

00:35:57,240 --> 00:36:03,329
be looking mainly at there is only an

00:36:00,180 --> 00:36:07,710
anonymous API available for weather data

00:36:03,329 --> 00:36:11,640
not a complete download of forecast data

00:36:07,710 --> 00:36:14,099
so that means that your location data is

00:36:11,640 --> 00:36:18,630
known to the Weather Service if they

00:36:14,099 --> 00:36:21,900
want to track you and if you want

00:36:18,630 --> 00:36:25,020
weather more international than just

00:36:21,900 --> 00:36:30,030
Germany and the USA there is The Weather

00:36:25,020 --> 00:36:32,940
Underground they also have an API for

00:36:30,030 --> 00:36:36,809
worldwide weather data but you need to

00:36:32,940 --> 00:36:40,290
request an API key so yeah that makes

00:36:36,809 --> 00:36:45,240
your location much more trackable even

00:36:40,290 --> 00:36:50,549
than the anonymous location data for

00:36:45,240 --> 00:36:53,280
other countries I've looked at Italy and

00:36:50,549 --> 00:36:57,480
then I stopped looking and started

00:36:53,280 --> 00:37:00,000
implementing and they don't have free

00:36:57,480 --> 00:37:03,990
weather data but if you are aware of

00:37:00,000 --> 00:37:08,970
other weather services that are free as

00:37:03,990 --> 00:37:11,250
in gratis and also in free to reuse yeah

00:37:08,970 --> 00:37:16,799
I'm always interested in hearing about

00:37:11,250 --> 00:37:19,170
other weather services yes the code is

00:37:16,799 --> 00:37:21,420
already online there's the module

00:37:19,170 --> 00:37:23,990
weather mas mix which basically

00:37:21,420 --> 00:37:28,109
implements the backend and the

00:37:23,990 --> 00:37:31,589
JavaScript front-end is also online but

00:37:28,109 --> 00:37:35,930
not yet on c-pen it's on github the link

00:37:31,589 --> 00:37:41,400
is here in this slide HTTPS github.com

00:37:35,930 --> 00:37:44,010
slash chorion /pwa - whether client yeah

00:37:41,400 --> 00:37:46,549
i plan to release the weather client

00:37:44,010 --> 00:37:49,559
entre Sipan as well

00:37:46,549 --> 00:37:53,190
what things are still missing from the

00:37:49,559 --> 00:37:55,740
wetter weather up there I'd like to

00:37:53,190 --> 00:37:58,289
fetch and display an image of the

00:37:55,740 --> 00:38:02,579
closest location from

00:37:58,289 --> 00:38:06,420
Wikimania maybe and what I'd really like

00:38:02,579 --> 00:38:12,390
for the desktop is to configure location

00:38:06,420 --> 00:38:16,319
data and your fences so yeah in for

00:38:12,390 --> 00:38:19,650
several locations so my notebook can

00:38:16,319 --> 00:38:22,530
fetch the weather data for my current

00:38:19,650 --> 00:38:27,109
location even if it doesn't know

00:38:22,530 --> 00:38:31,049
actually where it is but yeah I don't

00:38:27,109 --> 00:38:35,990
know of any config file format or

00:38:31,049 --> 00:38:41,369
something where one could define that

00:38:35,990 --> 00:38:44,549
and yeah one more cosmetic thing is I'd

00:38:41,369 --> 00:38:47,670
like to replace the emoji by SVG images

00:38:44,549 --> 00:38:50,849
because yeah the emoji don't always

00:38:47,670 --> 00:38:56,309
render that nicely and SVG images would

00:38:50,849 --> 00:39:00,450
be nicer I think and yes that's it thank

00:38:56,309 --> 00:39:03,779
you and yes if there are questions you

00:39:00,450 --> 00:39:07,589
can ask them right now or just maybe at

00:39:03,779 --> 00:39:10,440
Korean at Korean net the slides and the

00:39:07,589 --> 00:39:14,250
app are online at these links so you can

00:39:10,440 --> 00:39:16,829
use the app right from there but that

00:39:14,250 --> 00:39:21,240
means I will learn about your locations

00:39:16,829 --> 00:39:27,809
so maybe it is smarter to self host that

00:39:21,240 --> 00:39:29,789
thing yourself okay thank you thank you

00:39:27,809 --> 00:39:31,020
very much max does anybody have any

00:39:29,789 --> 00:39:33,380
questions you should be able to unmute

00:39:31,020 --> 00:39:33,380
yourself

00:39:39,740 --> 00:39:46,990
you

00:39:41,770 --> 00:39:46,990
seems like there are no questions

00:39:47,030 --> 00:40:00,360
why do you use PSG I not not a plain CGI

00:39:53,870 --> 00:40:04,320
um because I think I wrote the the app

00:40:00,360 --> 00:40:07,350
in Montreux livers and yeah it's just

00:40:04,320 --> 00:40:11,610
the extension I don't use a special web

00:40:07,350 --> 00:40:16,470
server or anything um it's just the fire

00:40:11,610 --> 00:40:20,040
extension and it is basically a PSP i

00:40:16,470 --> 00:40:26,490
file because it returns the subroutine

00:40:20,040 --> 00:40:28,710
not a cgi thing I think yeah there are

00:40:26,490 --> 00:40:37,460
no architectural choices or anything

00:40:28,710 --> 00:40:37,460
it's just yeah okay thank you

00:40:44,020 --> 00:40:50,990
okay if there are no more questions or

00:40:48,170 --> 00:40:54,070
if you want to ask them later trust me

00:40:50,990 --> 00:40:57,080
or hit me up in the Select Rhett and

00:40:54,070 --> 00:40:58,000
thank you again for joining me for my

00:40:57,080 --> 00:41:01,570
talk

00:40:58,000 --> 00:41:01,570

YouTube URL: https://www.youtube.com/watch?v=4TlwXS-hb-4


