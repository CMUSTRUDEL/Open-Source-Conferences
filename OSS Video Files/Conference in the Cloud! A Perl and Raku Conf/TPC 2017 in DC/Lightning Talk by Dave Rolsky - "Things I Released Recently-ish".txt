Title: Lightning Talk by Dave Rolsky - "Things I Released Recently-ish"
Publication date: 2017-06-21
Playlist: TPC 2017 in DC
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:04,440
it you guys are never going to guess

00:00:01,860 --> 00:00:07,020
what this talk is about but you know

00:00:04,440 --> 00:00:09,719
I'll reveal it's about the modules are

00:00:07,020 --> 00:00:11,160
we least in the past year or two and I

00:00:09,719 --> 00:00:12,750
figured I tell you about them because

00:00:11,160 --> 00:00:14,070
they might have just floated by if you

00:00:12,750 --> 00:00:16,109
look at the meta Steve Kalan recent

00:00:14,070 --> 00:00:17,609
releases and I think some of them are

00:00:16,109 --> 00:00:21,600
kind of useful so the first one is

00:00:17,609 --> 00:00:23,160
called app see I set up this is also I'd

00:00:21,600 --> 00:00:25,019
like to thank my former employer max

00:00:23,160 --> 00:00:26,939
mind for releasing the code that I wrote

00:00:25,019 --> 00:00:28,650
while I was there and sharing it with me

00:00:26,939 --> 00:00:30,720
under an open-source license so I can

00:00:28,650 --> 00:00:33,960
release it to Sipan basically this is a

00:00:30,720 --> 00:00:35,160
tool for generating and managing Travis

00:00:33,960 --> 00:00:37,290
and a player files

00:00:35,160 --> 00:00:39,780
primarily right now oriented at Perl

00:00:37,290 --> 00:00:42,750
program Perl project could be expanded

00:00:39,780 --> 00:00:44,940
to do others if if you're like me and

00:00:42,750 --> 00:00:47,129
you have I don't know 50 or 100 modules

00:00:44,940 --> 00:00:49,469
and you really like to get all of them

00:00:47,129 --> 00:00:51,780
going through CI and then you're like oh

00:00:49,469 --> 00:00:54,149
you know I should add another Pro the

00:00:51,780 --> 00:00:56,129
list of pearls to test with it's really

00:00:54,149 --> 00:00:58,890
really irritating to have to edit 50

00:00:56,129 --> 00:01:00,449
files to add a pearl so these files are

00:00:58,890 --> 00:01:03,120
gamal so this tool will manage it for

00:01:00,449 --> 00:01:04,979
you it's still in a somewhat rudimentary

00:01:03,120 --> 00:01:07,260
state but it will do some basic stuff

00:01:04,979 --> 00:01:08,460
and I think it's you know another nice

00:01:07,260 --> 00:01:10,110
thing is if you don't know what your

00:01:08,460 --> 00:01:12,360
Travis file should look like or a player

00:01:10,110 --> 00:01:13,920
file should look like this will generate

00:01:12,360 --> 00:01:16,740
one for you which should work for a

00:01:13,920 --> 00:01:19,770
normal purl project so it's a good start

00:01:16,740 --> 00:01:24,450
patches are very much welcome another

00:01:19,770 --> 00:01:27,689
tool I wrote so I you know not to cast

00:01:24,450 --> 00:01:29,579
aspersions but I'm not loving rtcp org

00:01:27,689 --> 00:01:32,570
as much as maybe I used to and I'm

00:01:29,579 --> 00:01:36,570
loving github issues a little more so I

00:01:32,570 --> 00:01:38,790
took some codes I think I want to say

00:01:36,570 --> 00:01:42,000
David golden he's written and was like

00:01:38,790 --> 00:01:45,149
in it just somewhere and tweaked it a

00:01:42,000 --> 00:01:46,890
little and turned it into a CPM module

00:01:45,149 --> 00:01:49,890
so now you can run this that you go into

00:01:46,890 --> 00:01:52,130
a repo that's a github repo you run this

00:01:49,890 --> 00:01:54,090
and it'll prompt you with some questions

00:01:52,130 --> 00:01:56,040
trying to figure out the answers based

00:01:54,090 --> 00:01:58,079
on information and the repo and then

00:01:56,040 --> 00:02:00,840
it'll transfer all the issues over it's

00:01:58,079 --> 00:02:02,610
not perfect at one annoying thing is the

00:02:00,840 --> 00:02:05,280
reporter for all the issues will now be

00:02:02,610 --> 00:02:07,409
you because there's no way to create an

00:02:05,280 --> 00:02:09,390
issue as being reported by somebody else

00:02:07,409 --> 00:02:11,039
in the github API which if you think

00:02:09,390 --> 00:02:12,540
about it is probably a very good

00:02:11,039 --> 00:02:13,480
decision on their part since the

00:02:12,540 --> 00:02:15,790
reporter is

00:02:13,480 --> 00:02:19,330
matically tagged and cc'd and it would

00:02:15,790 --> 00:02:21,220
be a spam engine otherwise anyway okay

00:02:19,330 --> 00:02:25,870
so how many of you have used params

00:02:21,220 --> 00:02:27,310
validates fair a number so the mother I

00:02:25,870 --> 00:02:30,819
wrote is one of the first things I

00:02:27,310 --> 00:02:32,769
realized to seep in calling 15 years or

00:02:30,819 --> 00:02:33,540
more ago and I've been using it a long

00:02:32,769 --> 00:02:36,099
time myself

00:02:33,540 --> 00:02:37,959
Steven little ruse X parameter validate

00:02:36,099 --> 00:02:40,650
which built on top of it and lets you

00:02:37,959 --> 00:02:42,819
use mousse types as your validation and

00:02:40,650 --> 00:02:45,310
you know somebody had written this whole

00:02:42,819 --> 00:02:48,190
excess implementation implementation of

00:02:45,310 --> 00:02:49,510
prims holiday which is great and you

00:02:48,190 --> 00:02:51,190
know the more you use that were I use

00:02:49,510 --> 00:02:53,349
mousse experience validate I just like

00:02:51,190 --> 00:02:55,420
and this is really a bottleneck so I

00:02:53,349 --> 00:02:57,040
ripped this new module so throw out all

00:02:55,420 --> 00:02:59,560
your code that uses grants validate and

00:02:57,040 --> 00:03:01,900
start using this new module it is

00:02:59,560 --> 00:03:04,840
despite being puerperal significantly

00:03:01,900 --> 00:03:06,849
faster than prayers validate much much

00:03:04,840 --> 00:03:09,160
much much faster than mousex frames

00:03:06,849 --> 00:03:11,019
validate because it generates inline

00:03:09,160 --> 00:03:13,390
code so if your type constraints are

00:03:11,019 --> 00:03:14,680
inlinable those of you use type system

00:03:13,390 --> 00:03:17,109
to Perl might know when to duck him out

00:03:14,680 --> 00:03:18,609
it will generate a very highly optimized

00:03:17,109 --> 00:03:20,560
subroutine for you that does the

00:03:18,609 --> 00:03:22,510
validation you can use it with the moose

00:03:20,560 --> 00:03:25,660
built-in types or loose X types type

00:03:22,510 --> 00:03:30,099
tiny and specia so it's a nice flexible

00:03:25,660 --> 00:03:31,299
fast system last thing I think I think

00:03:30,099 --> 00:03:34,359
this is the last thing your convention

00:03:31,299 --> 00:03:36,910
tool called meta graph or moose so if

00:03:34,359 --> 00:03:38,470
you're like me and you you start working

00:03:36,910 --> 00:03:40,450
on a project and you have a moose class

00:03:38,470 --> 00:03:42,160
and then you have a few roles and then

00:03:40,450 --> 00:03:44,349
maybe you have some other roles that are

00:03:42,160 --> 00:03:46,540
consumed by the roles and then you start

00:03:44,349 --> 00:03:49,090
feeling a little saucy and you have some

00:03:46,540 --> 00:03:51,819
parameterised roles and you know pretty

00:03:49,090 --> 00:03:53,739
soon things can get a little complicated

00:03:51,819 --> 00:03:56,319
and you're like looking at your code and

00:03:53,739 --> 00:03:59,139
like good what roles does this use is

00:03:56,319 --> 00:04:01,780
it's just it just gets confusing so if

00:03:59,139 --> 00:04:04,090
if you've committed this sort of sin

00:04:01,780 --> 00:04:06,190
then this tool may help you so it's just

00:04:04,090 --> 00:04:08,260
a command-line tool you run it you give

00:04:06,190 --> 00:04:10,510
it a package you tell where to output

00:04:08,260 --> 00:04:13,060
the file there's two renderers graph is

00:04:10,510 --> 00:04:15,010
which looks like crap implant in UML

00:04:13,060 --> 00:04:16,949
which looks really good but requires you

00:04:15,010 --> 00:04:20,680
to have a jar file just sitting around

00:04:16,949 --> 00:04:22,539
and it will make a graph like this now

00:04:20,680 --> 00:04:26,229
if if your code is this complicated

00:04:22,539 --> 00:04:27,430
that's bad but you know anyway it will

00:04:26,229 --> 00:04:29,620
probably help you better

00:04:27,430 --> 00:04:32,620
understand the code that you have

00:04:29,620 --> 00:04:33,530
created and that is it thank you very

00:04:32,620 --> 00:04:34,700
much

00:04:33,530 --> 00:04:35,670
[Applause]

00:04:34,700 --> 00:04:41,829
[Music]

00:04:35,670 --> 00:04:41,829

YouTube URL: https://www.youtube.com/watch?v=DVKfBV2xngg


