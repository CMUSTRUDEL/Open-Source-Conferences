Title: Lightning Talk by Randal Schwartz - "Why Google's Dart should be your next programming language"
Publication date: 2017-06-21
Playlist: TPC 2017 in DC
Description: 
	
Captions: 
	00:00:00,060 --> 00:00:02,879
okay I'm here to pearl conference I

00:00:01,800 --> 00:00:03,990
recognize that but I'm going to suggest

00:00:02,879 --> 00:00:07,740
you that you might want to be learning

00:00:03,990 --> 00:00:09,300
dart as your next language mostly TLDR

00:00:07,740 --> 00:00:12,660
because Google is making money with it

00:00:09,300 --> 00:00:15,030
lots of money over a billion dollars per

00:00:12,660 --> 00:00:18,210
month flows through Adsense Adwords and

00:00:15,030 --> 00:00:21,590
their internal CRM tool that's all Dart

00:00:18,210 --> 00:00:24,930
right now they're committed to Dart

00:00:21,590 --> 00:00:26,550
when they switch from GWT for Adsense to

00:00:24,930 --> 00:00:28,050
Dart I'll just read the important

00:00:26,550 --> 00:00:29,519
figures are eight times quicker for

00:00:28,050 --> 00:00:31,550
compiling and starting a server

00:00:29,519 --> 00:00:35,100
six or seven times quicker and devmode

00:00:31,550 --> 00:00:36,480
2x performance overall this is with

00:00:35,100 --> 00:00:37,980
people that we're really familiar with

00:00:36,480 --> 00:00:40,350
GWT been doing it for years

00:00:37,980 --> 00:00:42,120
they credit mobile to Dart Adsense is

00:00:40,350 --> 00:00:44,160
160 thousand lines of code with about

00:00:42,120 --> 00:00:44,879
100 devs and they were both formerly in

00:00:44,160 --> 00:00:47,640
GWT

00:00:44,879 --> 00:00:50,610
where does dart run server-side like no

00:00:47,640 --> 00:00:52,469
js' but with threads finally including

00:00:50,610 --> 00:00:54,059
shebang scripts it can compile the

00:00:52,469 --> 00:00:56,399
binaries in fact a lot of the tools in

00:00:54,059 --> 00:00:58,859
dart are actually compiled dart tools

00:00:56,399 --> 00:01:01,590
browser site all modern browsers

00:00:58,859 --> 00:01:03,329
javascript transpilation tight coupling

00:01:01,590 --> 00:01:04,739
with dart native angular which is what

00:01:03,329 --> 00:01:06,060
Adsense and AdWords are written in now

00:01:04,739 --> 00:01:08,250
and a bunch of other properties that are

00:01:06,060 --> 00:01:10,080
coming out soon I can't talk about full

00:01:08,250 --> 00:01:11,820
JavaScript interoperability you pull

00:01:10,080 --> 00:01:12,979
whatever JavaScript library you want you

00:01:11,820 --> 00:01:15,900
can talk to it

00:01:12,979 --> 00:01:18,360
flutter this is the exciting thing right

00:01:15,900 --> 00:01:21,390
once for both iOS and Android compiles

00:01:18,360 --> 00:01:22,799
down to arm code runs full speed 120

00:01:21,390 --> 00:01:25,590
frames a second is easy on that stuff

00:01:22,799 --> 00:01:26,759
already deployed apps using clutter it's

00:01:25,590 --> 00:01:28,350
better hot we load than any other

00:01:26,759 --> 00:01:31,110
framework make sure deployment and

00:01:28,350 --> 00:01:32,400
updates really quick and there's some

00:01:31,110 --> 00:01:33,600
rumors about this thing called fuchsia

00:01:32,400 --> 00:01:35,340
that actually might be an Android

00:01:33,600 --> 00:01:37,229
replacement so that Google can get away

00:01:35,340 --> 00:01:39,810
from using Java because there's some

00:01:37,229 --> 00:01:42,090
issues about that okay it's a modern

00:01:39,810 --> 00:01:45,600
language strong but optional type safety

00:01:42,090 --> 00:01:47,970
has generics typing of aggregates built

00:01:45,600 --> 00:01:50,280
in promises called futures and streams

00:01:47,970 --> 00:01:52,049
with a sink and a way so it looks like

00:01:50,280 --> 00:01:54,479
normal code but it's really using

00:01:52,049 --> 00:01:56,759
futures behind the scenes built in share

00:01:54,479 --> 00:01:58,680
nothing ice lists these translated is

00:01:56,759 --> 00:02:01,320
thread on server and mobile and web

00:01:58,680 --> 00:02:03,119
workers in the browser reflection for

00:02:01,320 --> 00:02:04,619
annotation so you can add metadata to

00:02:03,119 --> 00:02:07,079
all your classes instances things like

00:02:04,619 --> 00:02:09,539
that really good IDE support both free

00:02:07,079 --> 00:02:11,250
and commercial Adam IntelliJ vs code

00:02:09,539 --> 00:02:13,810
webstorm and a bunch of others even

00:02:11,250 --> 00:02:16,560
Emacs very active community the

00:02:13,810 --> 00:02:18,849
Hubb already has thousands of packages

00:02:16,560 --> 00:02:20,170
there's Gitter channels and mailing

00:02:18,849 --> 00:02:22,360
lists and many of the main Googlers

00:02:20,170 --> 00:02:24,730
actually hang out here Stack Overflow

00:02:22,360 --> 00:02:26,140
questions get answered fast the code is

00:02:24,730 --> 00:02:28,450
controlled by a necklace standard it's

00:02:26,140 --> 00:02:30,160
not just Google's baby anymore the

00:02:28,450 --> 00:02:32,380
source is on github and gets a lot of

00:02:30,160 --> 00:02:33,640
community commits this is not just

00:02:32,380 --> 00:02:35,890
Google's thing anymore there's something

00:02:33,640 --> 00:02:39,040
like 45 websites listed on the who's

00:02:35,890 --> 00:02:40,510
using Dart page already and dartpad runs

00:02:39,040 --> 00:02:42,190
live snippets you can actually show

00:02:40,510 --> 00:02:45,280
somebody you can also pass those along

00:02:42,190 --> 00:02:46,260
kind of like a like whatever those

00:02:45,280 --> 00:02:49,000
little things you can pass things around

00:02:46,260 --> 00:02:50,709
okay hey mine goes black I didn't write

00:02:49,000 --> 00:02:52,480
it in to that very familiar language

00:02:50,709 --> 00:02:53,670
concepts it's pure object-oriented

00:02:52,480 --> 00:02:56,049
everything inherits from object

00:02:53,670 --> 00:02:58,330
top-level functions class instance

00:02:56,049 --> 00:03:00,849
methods lambdas even nested function is

00:02:58,330 --> 00:03:02,470
why that was clever very simple scoping

00:03:00,849 --> 00:03:04,239
not like Java if a starts with

00:03:02,470 --> 00:03:07,630
underscore its private that's it very

00:03:04,239 --> 00:03:09,160
simple paul executive exception

00:03:07,630 --> 00:03:11,739
management clinic try-catch and finally

00:03:09,160 --> 00:03:13,799
scales well to large projects but with a

00:03:11,739 --> 00:03:16,269
minimum of boilerplate unlike Java

00:03:13,799 --> 00:03:18,489
Google estimates that it took them only

00:03:16,269 --> 00:03:21,030
about two weeks to take an existing Java

00:03:18,489 --> 00:03:23,079
programmer and scale them up on dart

00:03:21,030 --> 00:03:25,600
very fast for them because it has

00:03:23,079 --> 00:03:27,700
familiar syntax type parameters optional

00:03:25,600 --> 00:03:29,620
parameters fat arrow notation for single

00:03:27,700 --> 00:03:31,120
expression bodies small talk like

00:03:29,620 --> 00:03:32,079
Cascades but finally done right see me

00:03:31,120 --> 00:03:33,910
afterwards so you don't say what that

00:03:32,079 --> 00:03:35,890
means getters and setters have the same

00:03:33,910 --> 00:03:37,150
syntax as member access so you can

00:03:35,890 --> 00:03:38,530
convert from having a normal member

00:03:37,150 --> 00:03:40,239
variable right and having it be a

00:03:38,530 --> 00:03:41,380
special getter and setter using it

00:03:40,239 --> 00:03:43,200
without changing the rest of your code

00:03:41,380 --> 00:03:45,220
very familiar operators of course

00:03:43,200 --> 00:03:46,959
batteries included it comes to full

00:03:45,220 --> 00:03:48,850
mature libraries I'm not going to list

00:03:46,959 --> 00:03:50,560
those you can read them okay

00:03:48,850 --> 00:03:52,780
and again additional solutions in there

00:03:50,560 --> 00:03:55,350
pub already pub because it's like darts

00:03:52,780 --> 00:03:58,180
and do darts in a pub yeah very good ah

00:03:55,350 --> 00:03:59,859
now I get to write ok the build tool can

00:03:58,180 --> 00:04:01,269
take a get URL for dependencies you

00:03:59,859 --> 00:04:03,340
going to have to publish it to the pub

00:04:01,269 --> 00:04:04,810
if you just say this get repos one of my

00:04:03,340 --> 00:04:06,220
dependencies an American from sketching

00:04:04,810 --> 00:04:08,109
it down what it needs to more

00:04:06,220 --> 00:04:09,940
information dartlang.org got everything

00:04:08,109 --> 00:04:12,280
you need you can play with it right now

00:04:09,940 --> 00:04:13,750
at dartpad dartlang.org no install just

00:04:12,280 --> 00:04:15,970
start seeing some of the examples over

00:04:13,750 --> 00:04:18,430
there you can also watch I have a couple

00:04:15,970 --> 00:04:20,380
of episodes of floss that I've done one

00:04:18,430 --> 00:04:22,270
with the lead advocate for next with the

00:04:20,380 --> 00:04:24,250
Casper loon Casper alone by the way I

00:04:22,270 --> 00:04:26,620
came from the v8 so the VM is really

00:04:24,250 --> 00:04:28,600
fast is based on the v8 technology

00:04:26,620 --> 00:04:31,780
tomorrow I'm taping a talk on flutter

00:04:28,600 --> 00:04:32,310
for plus weekly check it out thank you

00:04:31,780 --> 00:04:35,160
[Applause]

00:04:32,310 --> 00:04:35,160

YouTube URL: https://www.youtube.com/watch?v=cDMMF_b7Kbs


