Title: Nicolas R. - "Introduction to Perl Internals"
Publication date: 2017-06-24
Playlist: TPC 2017 in DC
Description: 
	Internals for du'me
Captions: 
	00:00:00,030 --> 00:00:05,970
hi good morning so my name is Nicola I'm

00:00:03,060 --> 00:00:08,370
working for sipping air on yes who are I

00:00:05,970 --> 00:00:10,110
ring so if you're interested feel free

00:00:08,370 --> 00:00:13,019
to contact me on the other people

00:00:10,110 --> 00:00:13,440
interpreter so today I'm there to talk

00:00:13,019 --> 00:00:16,800
about

00:00:13,440 --> 00:00:19,050
peril in tunnels which is a very short

00:00:16,800 --> 00:00:21,720
introduction of peril in tunnel its many

00:00:19,050 --> 00:00:23,250
for beginners why that talk because it

00:00:21,720 --> 00:00:24,900
is exactly the kind of talk I would

00:00:23,250 --> 00:00:26,699
really enjoy a few years ago when I

00:00:24,900 --> 00:00:28,949
started working on the compiler at

00:00:26,699 --> 00:00:30,810
Savannah you can get all that

00:00:28,949 --> 00:00:32,550
information from your safe if you bro

00:00:30,810 --> 00:00:34,800
the pal code is pretty well documented

00:00:32,550 --> 00:00:36,989
but you just need to make the effort so

00:00:34,800 --> 00:00:39,239
this is just giving you a glance and if

00:00:36,989 --> 00:00:43,040
in the future you plan to do this code

00:00:39,239 --> 00:00:46,500
that might also help so let's start

00:00:43,040 --> 00:00:48,420
impaired is not a typed language on

00:00:46,500 --> 00:00:51,300
that's really the reason why we love it

00:00:48,420 --> 00:00:55,980
so much or we ate it or that one on the

00:00:51,300 --> 00:01:00,840
paper which means that we can use my

00:00:55,980 --> 00:01:05,339
dollar variable to set index number 42 a

00:01:00,840 --> 00:01:08,580
string arrow or floating value we can

00:01:05,339 --> 00:01:10,530
even use an array ash there are special

00:01:08,580 --> 00:01:14,159
but they just contain also a set of

00:01:10,530 --> 00:01:17,369
values function on on behind itself

00:01:14,159 --> 00:01:20,570
Islander so do you know what all these

00:01:17,369 --> 00:01:24,259
lines are in common

00:01:20,570 --> 00:01:28,229
fair enough okay so all this line

00:01:24,259 --> 00:01:32,520
describe what we call internally a scale

00:01:28,229 --> 00:01:35,130
of value which is named F V so V stands

00:01:32,520 --> 00:01:38,159
for scale of value on this is it she

00:01:35,130 --> 00:01:40,979
representation looks pretty pretty

00:01:38,159 --> 00:01:43,740
simple from there but if you dig on that

00:01:40,979 --> 00:01:47,399
representation the thing to notice there

00:01:43,740 --> 00:01:49,530
is the type here okay it's not a type

00:01:47,399 --> 00:01:52,049
language which we have a type somewhere

00:01:49,530 --> 00:01:53,700
is Gro rating the flag in fact just

00:01:52,049 --> 00:01:56,759
hitting a few bits from the flag there

00:01:53,700 --> 00:02:01,350
but it's there so what well we're going

00:01:56,759 --> 00:02:05,219
to see the GSV description just after so

00:02:01,350 --> 00:02:08,610
as we can as we can be typed there is a

00:02:05,219 --> 00:02:10,739
type so what are all of them the null

00:02:08,610 --> 00:02:13,140
value which is a special value it's

00:02:10,739 --> 00:02:17,050
mainly the

00:02:13,140 --> 00:02:22,630
it's a regular AFV it's their undef is

00:02:17,050 --> 00:02:25,450
their the IV is for integral value 442

00:02:22,630 --> 00:02:28,810
is their the pv is for all points or

00:02:25,450 --> 00:02:31,660
value it's not hv for string because s

00:02:28,810 --> 00:02:33,069
was already used so we use PV on this is

00:02:31,660 --> 00:02:37,540
the arrow string which is there

00:02:33,069 --> 00:02:43,720
the floating value is there as a NV okay

00:02:37,540 --> 00:02:47,319
VRI is below here as AV the ash is one

00:02:43,720 --> 00:02:50,950
edge V just on the right on the function

00:02:47,319 --> 00:02:53,739
it's a code so it's a CV on the file

00:02:50,950 --> 00:02:56,860
under its IO you have more than this on

00:02:53,739 --> 00:02:59,590
that graph it's not sure you can see it

00:02:56,860 --> 00:03:02,160
pretty well but if we zoom in we can

00:02:59,590 --> 00:03:06,910
clearly split that graph in two parts

00:03:02,160 --> 00:03:11,080
why the reason is that between the very

00:03:06,910 --> 00:03:16,170
top part we describe basic types like

00:03:11,080 --> 00:03:19,540
strings integrals on on the reference

00:03:16,170 --> 00:03:22,120
behind we have the TVM G which are magic

00:03:19,540 --> 00:03:25,180
I'm not going to explain what our magics

00:03:22,120 --> 00:03:30,180
but many what we are saying is that all

00:03:25,180 --> 00:03:35,230
or all the types below magics like

00:03:30,180 --> 00:03:39,609
alright IV rh v g vc v on Io they all

00:03:35,230 --> 00:03:41,260
contains magic so net magic for example

00:03:39,609 --> 00:03:46,329
can be away when you are blessing your

00:03:41,260 --> 00:03:48,459
your your values so as we see definition

00:03:46,329 --> 00:03:51,269
let's go back to see it's very very

00:03:48,459 --> 00:03:57,120
simple cannot be more simple that this

00:03:51,269 --> 00:04:00,250
this is a trust which contain one add on

00:03:57,120 --> 00:04:02,730
a body so what is the add watch is the

00:04:00,250 --> 00:04:06,220
body is pretty up to see from there

00:04:02,730 --> 00:04:10,900
mainly the void the body is the void

00:04:06,220 --> 00:04:16,989
star here it's the extra pointer to what

00:04:10,900 --> 00:04:19,959
will be used later on the GED if as two

00:04:16,989 --> 00:04:23,590
parts the restaurant on the flags on the

00:04:19,959 --> 00:04:25,630
union and the union is just also an

00:04:23,590 --> 00:04:29,840
extra pointer

00:04:25,630 --> 00:04:32,690
so let's now open a little more is V dot

00:04:29,840 --> 00:04:36,860
H where you can find this information so

00:04:32,690 --> 00:04:40,130
we saw the AV detta F which switches as

00:04:36,860 --> 00:04:44,930
we add we voiced our I'm going to you to

00:04:40,130 --> 00:04:48,380
to set a pointer of type voice our avoid

00:04:44,930 --> 00:04:50,360
on a restaurant or the flags for for the

00:04:48,380 --> 00:04:52,040
first field and then the engine is

00:04:50,360 --> 00:04:54,590
pretty scary but at the end the only

00:04:52,040 --> 00:04:56,750
thing you need to remember from this is

00:04:54,590 --> 00:04:58,970
just a pointer it can be a different

00:04:56,750 --> 00:05:02,020
type of pointer not necessary a pointer

00:04:58,970 --> 00:05:05,479
in some case it can be an integral or Oh

00:05:02,020 --> 00:05:09,229
sometimes double point of it many this

00:05:05,479 --> 00:05:11,240
is it so if we open little more square

00:05:09,229 --> 00:05:12,949
done in determining a V dot H what we

00:05:11,240 --> 00:05:15,860
can see we can see all these types there

00:05:12,949 --> 00:05:17,750
this is just an enum on these are all

00:05:15,860 --> 00:05:20,990
the possible types that can go in the

00:05:17,750 --> 00:05:24,289
type field and then we also have a a

00:05:20,990 --> 00:05:26,720
mask that we could use later to do a bit

00:05:24,289 --> 00:05:27,919
mask on the flag field to know what is

00:05:26,720 --> 00:05:31,490
the type of that easy

00:05:27,919 --> 00:05:34,490
this is all were doing sir so from there

00:05:31,490 --> 00:05:39,440
it's pretty easy to define any order SV

00:05:34,490 --> 00:05:41,840
you can define get all right AV by using

00:05:39,440 --> 00:05:43,039
the same same kind of strokes where

00:05:41,840 --> 00:05:46,310
you're just going to say rather than

00:05:43,039 --> 00:05:48,889
using voiced star you are going to use a

00:05:46,310 --> 00:05:51,470
TV ad this is an extension that define

00:05:48,889 --> 00:05:54,380
the array and you have the same thing

00:05:51,470 --> 00:05:57,860
for the HCV TV for the jeebies

00:05:54,380 --> 00:06:00,410
which are your your stashes you have a

00:05:57,860 --> 00:06:04,370
CV there you're doing an extension for

00:06:00,410 --> 00:06:08,810
the HPV cv same thing for HV ru and so

00:06:04,370 --> 00:06:12,560
on so what is that XP Vista if we just

00:06:08,810 --> 00:06:15,169
have a look at our rice and what is an

00:06:12,560 --> 00:06:17,360
array an eraser list of elements so in

00:06:15,169 --> 00:06:20,360
your case it's a list of SBS

00:06:17,360 --> 00:06:25,340
because it can be any of these s B's so

00:06:20,360 --> 00:06:27,530
the only information we need is and all

00:06:25,340 --> 00:06:32,300
we want to list in see it's a double

00:06:27,530 --> 00:06:35,719
pointer it's there the xav a lot this is

00:06:32,300 --> 00:06:37,760
where is your RF field um we have two

00:06:35,719 --> 00:06:38,930
extra information

00:06:37,760 --> 00:06:40,639
integrals

00:06:38,930 --> 00:06:43,060
want to know what the max of the site

00:06:40,639 --> 00:06:45,889
are located for that pointer there on

00:06:43,060 --> 00:06:48,020
one order to know wire is the last value

00:06:45,889 --> 00:06:50,180
so when you push something in your array

00:06:48,020 --> 00:06:52,970
you are just going to push it there and

00:06:50,180 --> 00:06:54,350
we have magics but as I said I'm not

00:06:52,970 --> 00:06:56,990
going to really explain magic though

00:06:54,350 --> 00:07:00,050
this is our way are implemented behind

00:06:56,990 --> 00:07:02,979
the other let's go back to Pearl on

00:07:00,050 --> 00:07:06,740
start from something very very simple

00:07:02,979 --> 00:07:09,560
like Mike Dora a equal number unless

00:07:06,740 --> 00:07:11,300
let's use ever pick you will notice that

00:07:09,560 --> 00:07:13,550
I'm using never pick in a very weird way

00:07:11,300 --> 00:07:15,560
using a wrapper with eval you don't need

00:07:13,550 --> 00:07:18,080
to do this I'm mainly doing this because

00:07:15,560 --> 00:07:20,990
I'm using the pair compiler and I try to

00:07:18,080 --> 00:07:23,690
write it from there so in all of those

00:07:20,990 --> 00:07:26,150
slide I will use de ver peak and I will

00:07:23,690 --> 00:07:28,400
just use the damn function so I have my

00:07:26,150 --> 00:07:32,570
integral 42 and I'm just going to dunk

00:07:28,400 --> 00:07:34,940
it what I'm going to see from there very

00:07:32,570 --> 00:07:40,099
nice thing I can see that the SV is of

00:07:34,940 --> 00:07:42,680
type IV okay um I know this you using

00:07:40,099 --> 00:07:47,000
the place the flags tell me also that I

00:07:42,680 --> 00:07:50,630
okay which means I can use the IV slots

00:07:47,000 --> 00:07:52,909
on using an integral value and the

00:07:50,630 --> 00:07:56,360
question is where is that IV slot for

00:07:52,909 --> 00:07:59,000
storing the integral value it's in the

00:07:56,360 --> 00:08:02,570
Union that we saw there was one of the

00:07:59,000 --> 00:08:05,300
field which is i vu that IV this is well

00:08:02,570 --> 00:08:08,210
div stored and there is a switch where

00:08:05,300 --> 00:08:10,070
when when you have an IV she's not

00:08:08,210 --> 00:08:12,530
written in more than this you you

00:08:10,070 --> 00:08:13,039
already have your integer store in the

00:08:12,530 --> 00:08:15,550
Union

00:08:13,039 --> 00:08:18,650
why should you need an extension to your

00:08:15,550 --> 00:08:21,800
to your Fe so there is a quick where in

00:08:18,650 --> 00:08:26,889
fact the SV any is just going to point

00:08:21,800 --> 00:08:29,960
to your IV to to fool the system in fact

00:08:26,889 --> 00:08:32,570
if someone want to access to the value

00:08:29,960 --> 00:08:38,839
using the N value it will directly go

00:08:32,570 --> 00:08:41,930
there so now let's make it a little more

00:08:38,839 --> 00:08:44,930
complex by using references so same

00:08:41,930 --> 00:08:48,110
integer there and now I'm going to use

00:08:44,930 --> 00:08:50,029
another variable my derby to reference

00:08:48,110 --> 00:08:52,230
with so if I reference it as mean as if

00:08:50,029 --> 00:08:54,360
I alter the content of these

00:08:52,230 --> 00:08:57,630
content of a is also going to be out

00:08:54,360 --> 00:09:00,060
there using if I said earlier be equal a

00:08:57,630 --> 00:09:04,080
1 2 3 then there are a is going to be 1

00:09:00,060 --> 00:09:08,460
2 3 so this is a dump I'm going to do to

00:09:04,080 --> 00:09:12,540
do let them ad for a after and B if I

00:09:08,460 --> 00:09:15,750
don't a B for our first first thing I

00:09:12,540 --> 00:09:21,330
cannot use the memory address of the IV

00:09:15,750 --> 00:09:26,400
for a which is AC 0 ok and I will find

00:09:21,330 --> 00:09:31,320
that a V again as part of the arm Union

00:09:26,400 --> 00:09:32,610
India in the RV on the RV is in fact not

00:09:31,320 --> 00:09:35,040
to do type anymore

00:09:32,610 --> 00:09:38,190
is just kidding because it's just Turing

00:09:35,040 --> 00:09:41,100
an integral values for the memory

00:09:38,190 --> 00:09:43,920
address so it's using an IV but it's one

00:09:41,100 --> 00:09:46,200
RV because there's a flag or okay dizzy

00:09:43,920 --> 00:09:49,140
saying a it's a reference use it as a

00:09:46,200 --> 00:09:51,480
reference on point to that base V there

00:09:49,140 --> 00:09:53,790
on what I can see if there is a

00:09:51,480 --> 00:09:57,720
restaurant value on that restaurant

00:09:53,790 --> 00:10:01,590
value just ordered how many pointer in

00:09:57,720 --> 00:10:04,260
your code points on our using that sv to

00:10:01,590 --> 00:10:05,850
to know when you can destroy that sv and

00:10:04,260 --> 00:10:08,580
when you're going to trigger the destroy

00:10:05,850 --> 00:10:11,400
method inside internally so that red

00:10:08,580 --> 00:10:14,700
code increase the second I make a new

00:10:11,400 --> 00:10:17,190
reference of that object on the rub when

00:10:14,700 --> 00:10:20,040
with your up be the restaurant in Queens

00:10:17,190 --> 00:10:25,170
by one to two and if I destroy these as

00:10:20,040 --> 00:10:29,130
reference will decrease one so you can

00:10:25,170 --> 00:10:32,010
represent this as this so Derby is on

00:10:29,130 --> 00:10:34,230
the left and dollar a is on the right

00:10:32,010 --> 00:10:36,600
and we can see that or the lobby

00:10:34,230 --> 00:10:42,150
there's a flag describing as a RV and

00:10:36,600 --> 00:10:45,780
it's just using the Union name is vu RV

00:10:42,150 --> 00:10:49,980
to just point to the address of dollar a

00:10:45,780 --> 00:10:52,530
sv let's now make it a little more

00:10:49,980 --> 00:10:55,410
complex on use of string so the strings

00:10:52,530 --> 00:10:58,710
are PV okay so this is a simple string

00:10:55,410 --> 00:11:01,320
ABCD and I'm going to dump it what I'm

00:10:58,710 --> 00:11:04,110
seeing there first things good news I

00:11:01,320 --> 00:11:06,660
see a pivot so it's type as a PV those

00:11:04,110 --> 00:11:11,350
of like staring me that's appeal

00:11:06,660 --> 00:11:13,750
it's I can use the the PV pointer and if

00:11:11,350 --> 00:11:17,680
I have a look at the PV pointer the PV

00:11:13,750 --> 00:11:19,990
pointer is ABCD on backslash 0 which

00:11:17,680 --> 00:11:22,720
mean that internally we need an extra

00:11:19,990 --> 00:11:24,280
character to put the backlash already on

00:11:22,720 --> 00:11:27,550
to know when this where the strings

00:11:24,280 --> 00:11:30,760
finish so we have to I mean take a value

00:11:27,550 --> 00:11:35,140
for the string cure on LAN cure is the

00:11:30,760 --> 00:11:37,780
size of the string from a pair point of

00:11:35,140 --> 00:11:39,520
view on LAN is the size from the C point

00:11:37,780 --> 00:11:42,280
of view which tell you how many

00:11:39,520 --> 00:11:44,020
characters you have Malad so if I make

00:11:42,280 --> 00:11:46,870
that ring longer I can still use the

00:11:44,020 --> 00:11:49,330
same memory slot by a bonding to it but

00:11:46,870 --> 00:11:51,880
if I am going to a suit train longer

00:11:49,330 --> 00:11:58,690
than 10 in fact nine characters that we

00:11:51,880 --> 00:12:02,080
need to do a new mallet okay so if you

00:11:58,690 --> 00:12:03,340
were presented DC this will be this way

00:12:02,080 --> 00:12:05,830
you have your SV on you have two

00:12:03,340 --> 00:12:08,950
pointers one for the HPV that will all

00:12:05,830 --> 00:12:12,070
give the cure on the land value on one

00:12:08,950 --> 00:12:14,440
foot what the other pointer is hidden in

00:12:12,070 --> 00:12:17,170
the Union and will point to your trains

00:12:14,440 --> 00:12:19,600
okay these are three advantages there

00:12:17,170 --> 00:12:22,930
that means for when you have a PVD of we

00:12:19,600 --> 00:12:26,500
kind of Maddox one for your throat sv

00:12:22,930 --> 00:12:31,990
one for your HPV on one for your strings

00:12:26,500 --> 00:12:35,110
okay um if I see after the backlash zero

00:12:31,990 --> 00:12:37,390
there is something else it's real looks

00:12:35,110 --> 00:12:42,010
like it was introduced in 5:18 or after

00:12:37,390 --> 00:12:44,710
5:18 that character were going to other

00:12:42,010 --> 00:12:46,780
look of what it is the idea is when you

00:12:44,710 --> 00:12:52,120
have a string that's going to be reused

00:12:46,780 --> 00:12:54,640
why doing a new mallet okay so this is

00:12:52,120 --> 00:12:55,750
that character their name is Chow

00:12:54,640 --> 00:12:59,860
copy-on-write

00:12:55,750 --> 00:13:02,500
and we can see there that if I make that

00:12:59,860 --> 00:13:06,310
string I will use four times by pushing

00:13:02,500 --> 00:13:08,590
it to an array then that's same string

00:13:06,310 --> 00:13:11,650
that same memory address is going to be

00:13:08,590 --> 00:13:13,690
used five times this is good and saving

00:13:11,650 --> 00:13:16,960
memory that string was like one of the

00:13:13,690 --> 00:13:18,460
mega bytes as will only be one of the

00:13:16,960 --> 00:13:21,820
mega deck in my

00:13:18,460 --> 00:13:24,010
I'm not 500 that's what that Coruscant

00:13:21,820 --> 00:13:26,080
means on every time something is going

00:13:24,010 --> 00:13:28,210
to idea that string is going to do the

00:13:26,080 --> 00:13:33,460
cookie only when it needs on decrease

00:13:28,210 --> 00:13:36,310
that control so if we don't this strings

00:13:33,460 --> 00:13:39,070
there we can see that all the SV a

00:13:36,310 --> 00:13:40,330
different memory address but all the PV

00:13:39,070 --> 00:13:43,360
are the same they are sharing the same

00:13:40,330 --> 00:13:45,790
PV which means if by mistake someone out

00:13:43,360 --> 00:13:47,440
there that PV internally then all the

00:13:45,790 --> 00:13:49,630
other strings which were my daughter

00:13:47,440 --> 00:13:51,279
whom I do lab are there might be a

00:13:49,630 --> 00:13:57,149
terrible but this is not happening that

00:13:51,279 --> 00:14:00,700
would be a bug ok let's make another

00:13:57,149 --> 00:14:02,290
example very simple I make a variable i

00:14:00,700 --> 00:14:04,600
start with a number

00:14:02,290 --> 00:14:08,080
I assign it to a number this is one IV

00:14:04,600 --> 00:14:11,620
then I assign it a string this is a PV

00:14:08,080 --> 00:14:14,290
but in fact it will be a PV IV and by

00:14:11,620 --> 00:14:19,120
just doing this in your program you are

00:14:14,290 --> 00:14:21,880
going to upgrade the IV to a PV ID and

00:14:19,120 --> 00:14:24,370
if you look at the three of our pinout

00:14:21,880 --> 00:14:24,970
designer you can always go from top to

00:14:24,370 --> 00:14:27,400
bottom

00:14:24,970 --> 00:14:31,380
you never done greater so you can go

00:14:27,400 --> 00:14:34,570
from IV to PV IV on what you can see if

00:14:31,380 --> 00:14:36,970
you dump that you will see that you have

00:14:34,570 --> 00:14:41,500
a PV IV and you will notice two things

00:14:36,970 --> 00:14:45,790
you will notice that the the IV field is

00:14:41,500 --> 00:14:49,060
set to 51 on the PV pointer point to a

00:14:45,790 --> 00:14:51,010
string with ABCD but if you have a look

00:14:49,060 --> 00:14:54,220
closer of the flag the flag tell you

00:14:51,010 --> 00:14:57,040
only use the swing only the stream is

00:14:54,220 --> 00:15:03,060
valid there P ok mean only this pointer

00:14:57,040 --> 00:15:06,940
is valid you cannot use that IV slot

00:15:03,060 --> 00:15:09,790
okay let's make a slight difference

00:15:06,940 --> 00:15:12,310
there by now I start with us through an

00:15:09,790 --> 00:15:16,120
integer and I append to that integral

00:15:12,310 --> 00:15:18,070
empty string what's going to happen it's

00:15:16,120 --> 00:15:21,310
going to create my string from the

00:15:18,070 --> 00:15:23,410
integral I've got my PV with 9 the

00:15:21,310 --> 00:15:25,540
number nine eight seven six five but I

00:15:23,410 --> 00:15:27,360
also add the values value still store

00:15:25,540 --> 00:15:31,600
also in the IV

00:15:27,360 --> 00:15:32,320
unfortunately there we lost the I ok

00:15:31,600 --> 00:15:34,240
flag

00:15:32,320 --> 00:15:37,840
I mean we cannot use the integral value

00:15:34,240 --> 00:15:42,490
we need to recompute it only the P okay

00:15:37,840 --> 00:15:48,910
store it so we can by doing this we we

00:15:42,490 --> 00:15:51,250
upgrade it to a tort ring on how we're

00:15:48,910 --> 00:15:54,250
out the value stored so when you're the

00:15:51,250 --> 00:15:58,780
PV IV the string is storing the PV on

00:15:54,250 --> 00:16:01,030
the IV is told in the HPV IV you will

00:15:58,780 --> 00:16:03,610
notice the XIV you there so this is

00:16:01,030 --> 00:16:08,800
where the IV is stored in the yellow

00:16:03,610 --> 00:16:15,420
flag on the the transistor in the PV so

00:16:08,800 --> 00:16:18,340
one common mistake we can do is to

00:16:15,420 --> 00:16:21,400
reallocate swinging which means that if

00:16:18,340 --> 00:16:24,190
I have a string on digest we force a

00:16:21,400 --> 00:16:27,190
string concatenation by appending empty

00:16:24,190 --> 00:16:29,980
string like there and I can zoom in to

00:16:27,190 --> 00:16:31,720
see it better what you can notice is

00:16:29,980 --> 00:16:35,560
that the memory address of the string

00:16:31,720 --> 00:16:37,600
ABCDF is different in the two cave it's

00:16:35,560 --> 00:16:39,340
not preserving the same string so every

00:16:37,600 --> 00:16:41,470
time you are going to turn the empty

00:16:39,340 --> 00:16:48,430
string to your string you are going to

00:16:41,470 --> 00:16:51,160
create a new malloc their ashes it's

00:16:48,430 --> 00:16:53,350
pretty short to solve the ash part and

00:16:51,160 --> 00:16:55,690
we try to just give you a grant of ashes

00:16:53,350 --> 00:16:58,120
ashes are the same way to describe an

00:16:55,690 --> 00:17:00,850
ash by doing a this is an AZ and I'm

00:16:58,120 --> 00:17:03,610
going to use the HP vhv extension and

00:17:00,850 --> 00:17:08,650
one ash is nothing else than array okay

00:17:03,610 --> 00:17:11,350
um so you need to know how many kill on

00:17:08,650 --> 00:17:13,449
I mean about the size of your array on

00:17:11,350 --> 00:17:18,100
how many keys you are using this is the

00:17:13,449 --> 00:17:20,070
kids own master um this is you then when

00:17:18,100 --> 00:17:24,370
you have collision you are going to use

00:17:20,070 --> 00:17:26,829
lists linked lists dat and what you will

00:17:24,370 --> 00:17:30,040
notice that every HG contains the ash

00:17:26,829 --> 00:17:32,050
value which knows where to put with

00:17:30,040 --> 00:17:35,950
Burkett you're going to store it on the

00:17:32,050 --> 00:17:38,350
string there it's the egg the ash key

00:17:35,950 --> 00:17:40,330
and one of the very good thing is by

00:17:38,350 --> 00:17:42,460
default all this ice key are shared

00:17:40,330 --> 00:17:44,770
which mean if you are we using the same

00:17:42,460 --> 00:17:46,210
ash key you will have only one on three

00:17:44,770 --> 00:17:49,779
so I'm going to pass

00:17:46,210 --> 00:17:51,640
this slide there which is fast because

00:17:49,779 --> 00:17:53,860
we do not really have time but if you

00:17:51,640 --> 00:17:54,970
don't want ash what you will notice you

00:17:53,860 --> 00:17:57,010
will notice that you have the ash

00:17:54,970 --> 00:17:58,690
quality which is very good indicator on

00:17:57,010 --> 00:18:02,110
you have that we have numbers there were

00:17:58,690 --> 00:18:07,450
seven one one two just tell you that by

00:18:02,110 --> 00:18:10,360
default you have seven you have eight

00:18:07,450 --> 00:18:13,380
slots in your ash seven of them has no

00:18:10,360 --> 00:18:15,760
value one of them has one value okay on

00:18:13,380 --> 00:18:18,090
the field tell you that one search is

00:18:15,760 --> 00:18:21,130
used on max tell you this is the max

00:18:18,090 --> 00:18:24,760
value on your array where that you can

00:18:21,130 --> 00:18:26,770
use which is marked so we are going what

00:18:24,760 --> 00:18:30,100
we saw there in the previous slide we

00:18:26,770 --> 00:18:33,120
saw that Maxwell seven so we are going

00:18:30,100 --> 00:18:36,549
just to try to trigger a little more

00:18:33,120 --> 00:18:38,470
that two forces a split split will mean

00:18:36,549 --> 00:18:43,750
that we are going to grow that us to all

00:18:38,470 --> 00:18:46,899
more than seven value so if I the second

00:18:43,750 --> 00:18:48,700
I add two values I can see there that my

00:18:46,899 --> 00:18:54,270
two values are in two different brackets

00:18:48,700 --> 00:18:59,559
that's what one two means there okay and

00:18:54,270 --> 00:19:03,039
if the second I other trick is I ever

00:18:59,559 --> 00:19:05,860
ask collision there that can read upon

00:19:03,039 --> 00:19:07,929
on the run time because ash are going to

00:19:05,860 --> 00:19:15,700
different location at every run time you

00:19:07,929 --> 00:19:17,020
have a acid going there so what I'm

00:19:15,700 --> 00:19:20,140
going to pass this because we are pretty

00:19:17,020 --> 00:19:22,390
shot in time okay what I want you we

00:19:20,140 --> 00:19:25,419
need to meet with remains from this that

00:19:22,390 --> 00:19:27,100
the module ass room the Loma lot is

00:19:25,419 --> 00:19:29,289
going to do and you have one trick to

00:19:27,100 --> 00:19:32,320
avoid it if you know that you are going

00:19:29,289 --> 00:19:34,029
to manipulate a very very big ash you

00:19:32,320 --> 00:19:37,090
can just let a big in blood like this

00:19:34,029 --> 00:19:39,159
with the number of keys in your eyes you

00:19:37,090 --> 00:19:41,380
can assign it to the value you want and

00:19:39,159 --> 00:19:44,380
that will automatically create or ash

00:19:41,380 --> 00:19:46,270
that will order that number of value for

00:19:44,380 --> 00:19:50,770
you which mean you are going to avoid

00:19:46,270 --> 00:19:52,929
all this extra split when you are going

00:19:50,770 --> 00:19:54,460
to which one 124 or what you can notice

00:19:52,929 --> 00:19:59,800
is that when you are adding a few values

00:19:54,460 --> 00:20:03,550
to that ash it still all the 120

00:19:59,800 --> 00:20:06,280
we 124 or valium which because it does

00:20:03,550 --> 00:20:09,070
those arrow that's why you have 2010 23

00:20:06,280 --> 00:20:12,340
de so this is a good trick for us

00:20:09,070 --> 00:20:15,580
optimisation for big ash so if you want

00:20:12,340 --> 00:20:19,000
to go further I would highly recommend

00:20:15,580 --> 00:20:21,970
to read bell dog Bell Bell goats there

00:20:19,000 --> 00:20:24,490
is also an illustrated version of pair

00:20:21,970 --> 00:20:27,580
guts with my tank by rainy which is

00:20:24,490 --> 00:20:29,260
named ingots on this is all the kind of

00:20:27,580 --> 00:20:31,600
useful module that I would recommend to

00:20:29,260 --> 00:20:34,300
dump and play with the internal parent

00:20:31,600 --> 00:20:37,510
honors this was just very very short in

00:20:34,300 --> 00:20:39,530
tradition in 20 minutes that's all I

00:20:37,510 --> 00:20:48,440
have for today

00:20:39,530 --> 00:20:48,440

YouTube URL: https://www.youtube.com/watch?v=zNsew4U-quM


