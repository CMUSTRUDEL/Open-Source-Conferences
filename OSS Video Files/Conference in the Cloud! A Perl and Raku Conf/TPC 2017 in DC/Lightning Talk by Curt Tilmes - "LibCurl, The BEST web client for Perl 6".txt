Title: Lightning Talk by Curt Tilmes - "LibCurl, The BEST web client for Perl 6"
Publication date: 2017-06-22
Playlist: TPC 2017 in DC
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:06,600
hi I'm Kurt Thomas I work at NASA doing

00:00:03,149 --> 00:00:08,970
Perl stuff I want to talk about lib curl

00:00:06,600 --> 00:00:10,860
the best web client for Perl sections

00:00:08,970 --> 00:00:12,900
people say well why would Perl six that

00:00:10,860 --> 00:00:15,179
a couple of the reasons people don't

00:00:12,900 --> 00:00:18,420
like Perl six you know the ecosystem is

00:00:15,179 --> 00:00:19,470
in its infancy and performance isn't

00:00:18,420 --> 00:00:21,869
quite there I'm going to talk about both

00:00:19,470 --> 00:00:23,130
of those one lots of new modules are

00:00:21,869 --> 00:00:25,650
hitting the ecosystem it's growing

00:00:23,130 --> 00:00:28,830
rapidly to Perl 6 makes it real easy to

00:00:25,650 --> 00:00:31,080
drop to see so the reason that Lib curl

00:00:28,830 --> 00:00:35,190
is the best web client for Perl 6 is

00:00:31,080 --> 00:00:37,469
it's not written in Perl 6 it's if

00:00:35,190 --> 00:00:39,930
you're willing to install the external

00:00:37,469 --> 00:00:42,320
library then it's the best part

00:00:39,930 --> 00:00:44,850
anyway you may be familiar with curl

00:00:42,320 --> 00:00:46,829
very popular command line tool it has

00:00:44,850 --> 00:00:51,480
all these features it speaks a tonne of

00:00:46,829 --> 00:00:55,530
protocols out-of-the-box free

00:00:51,480 --> 00:00:57,870
thread-safe etc etc Lib curl is a pro 6

00:00:55,530 --> 00:01:02,940
module that is our bindings to that C

00:00:57,870 --> 00:01:05,460
library simple example you create a Lib

00:01:02,940 --> 00:01:07,560
curl easy object with a constructor you

00:01:05,460 --> 00:01:11,610
can pass in tons of options to control

00:01:07,560 --> 00:01:14,549
it second step you perform the transfer

00:01:11,610 --> 00:01:15,630
and third step you can do all sorts of

00:01:14,549 --> 00:01:19,049
stuff what they handle after the

00:01:15,630 --> 00:01:22,380
transfer is complete examine the status

00:01:19,049 --> 00:01:24,509
etc etc so that first option some of the

00:01:22,380 --> 00:01:26,610
options I'm not going to go over all of

00:01:24,509 --> 00:01:28,680
these in a 5-minute lightning talk but

00:01:26,610 --> 00:01:30,299
there's a lot of options of those you

00:01:28,680 --> 00:01:32,159
know throttling proxies cookies

00:01:30,299 --> 00:01:35,790
multi-part forms everything that you

00:01:32,159 --> 00:01:38,880
would want to find in a good perl 6

00:01:35,790 --> 00:01:41,670
module second you can upload and

00:01:38,880 --> 00:01:44,100
download from files and when actually

00:01:41,670 --> 00:01:46,170
when you specify a file name the upload

00:01:44,100 --> 00:01:48,270
or download doesn't really even take

00:01:46,170 --> 00:01:50,790
place in in perl 6 land it takes place

00:01:48,270 --> 00:01:53,729
in seal and superfast best performance

00:01:50,790 --> 00:01:55,380
out there if you're you can also

00:01:53,729 --> 00:02:00,030
download into a string and play around

00:01:55,380 --> 00:02:01,560
with the content so after the transfer

00:02:00,030 --> 00:02:04,380
is performed you can get all kinds of

00:02:01,560 --> 00:02:07,380
statistics headers examine information

00:02:04,380 --> 00:02:09,410
about the transfer see how fast it took

00:02:07,380 --> 00:02:11,250
how long it took all sorts of stuff

00:02:09,410 --> 00:02:13,200
again I won't go through all the options

00:02:11,250 --> 00:02:13,709
if you're interested talk to me or go

00:02:13,200 --> 00:02:15,989
look the

00:02:13,709 --> 00:02:18,840
and the last thing I want to talk about

00:02:15,989 --> 00:02:22,230
is the multi interface so you can set up

00:02:18,840 --> 00:02:24,269
many simultaneous transfers you

00:02:22,230 --> 00:02:25,950
configure all the options and set

00:02:24,269 --> 00:02:28,290
everything up in that second step where

00:02:25,950 --> 00:02:30,269
you do the perform instead of telling

00:02:28,290 --> 00:02:32,639
the handle to perform itself you handle

00:02:30,269 --> 00:02:35,730
all of your handles to one multi object

00:02:32,639 --> 00:02:38,209
and it will perform them in a single

00:02:35,730 --> 00:02:41,060
thread often seal and high-performance

00:02:38,209 --> 00:02:44,219
hundreds of simultaneous transfer

00:02:41,060 --> 00:02:46,349
transfers in a single thread super fast

00:02:44,219 --> 00:02:48,180
and if it's awkward to work with this

00:02:46,349 --> 00:02:50,340
interface where you set everything up

00:02:48,180 --> 00:02:52,260
performance look at all your status you

00:02:50,340 --> 00:02:52,799
can also do it asynchronously with a

00:02:52,260 --> 00:02:56,069
callback

00:02:52,799 --> 00:03:00,359
and as the transfers complete you'll get

00:02:56,069 --> 00:03:02,040
a ping so that's it there's also some

00:03:00,359 --> 00:03:03,599
shortcuts you know you can do this

00:03:02,040 --> 00:03:07,650
simple thing that everybody does you

00:03:03,599 --> 00:03:10,769
know get a URL and hand me the answer as

00:03:07,650 --> 00:03:13,739
well anyway check it out it's on github

00:03:10,769 --> 00:03:15,060
and in the ecosystem raise issues let me

00:03:13,739 --> 00:03:16,739
know what you like what you don't like

00:03:15,060 --> 00:03:18,270
and send pull requests to make it even

00:03:16,739 --> 00:03:19,570
better

00:03:18,270 --> 00:03:22,750
[Applause]

00:03:19,570 --> 00:03:22,750

YouTube URL: https://www.youtube.com/watch?v=YNls6sM8qJA


