Title: Henry Van Styn - "Rapi::Blog - All-new maximalist blogging powered by RapidApp"
Publication date: 2017-06-23
Playlist: TPC 2017 in DC
Description: 
	For this year's talk I'll be demoing the brand new RapidApp-based blogging platform Rapi::Blog which has been under development for around 6 months so far (as of march). It will be debuting with its first public release on CPAN on the day of the talk! Folks, this is conference-driven development at its finest.

Previous years' RapidApp talks have also involved day-of, first-time releases of demo applications, but this year is different in that Rapi::Blog is first and foremost a real application and is designed for real-world use.

Another blog?!?? Yep. And, like the countless other devs that came before me - who broke-down and said "screw it, I'll just write my own blog" - I went down the rabbit hole because I wanted some set of features and functionality that I couldn't find in other platforms. Everyone has different priorities, but for me, the two main factors were:

Truer abstraction and separation between the front-end "theme" and the backend
Leveraging the features and flexibility of RapidApp
Rapi::Blog introduces a new "scaffold" pattern which consists of a file structure of template-driven, pure HTML/CSS documents that are able to represent the view and layout for a given site using a straightforward but comprehensive API of template directives. The intent is to reduce the translation effort needed to convert a static, font-end only html site (such as a bootstrap site/template) to be driven from dynamic, backend models. The blog pattern emerges from a content model (i.e. posts, comments, etc, standard blog features) and a scaffold of html templates, css and images which accesses it.

Since it's powered by RapidApp, the initialization of the storage model is all automatic and requires virtually nothing for a new site/instance (unless you want to customize the model, which you can). In this way, a Rapi::Blog installation is able to consist of nothing but a scaffold and a place to store data. It is then the scaffold that can be extended, customized and adapted to create all kinds layouts, designs and scenarios. That said, Rapi::Blog will also ship with a fully-working vanilla-design scaffold needed to function as a blog.

If you want to try another blog with maximalist features but minimalist effort, or, if you just want to see my/RapidApp's take on the blog question, this talk is for you. Just like previous RapidApp talks, this one will consist of all live-running, real-time demos (which you can run yourself), and should be a lot of fun.


Henry Van Styn is the owner of IntelliTree Solutions, a small Perl shop focusing on database-driven web applications which has been in business for over 16 years. Henry is the primary author of RapidApp as well as several other distributions on CPAN. Henry has been a regular speaker at YAPC for the past few years and has also written for different technology blogs and publications, including Linux Journal.
Captions: 
	00:00:04,910 --> 00:00:10,800
welcome welcome welcome we are going to

00:00:08,460 --> 00:00:14,099
be learning all about wrappy blog today

00:00:10,800 --> 00:00:17,670
which is a all new Perl based blogging

00:00:14,099 --> 00:00:20,130
platform how new is it just released 2

00:00:17,670 --> 00:00:23,460
CPM today so regardless of anything else

00:00:20,130 --> 00:00:26,869
this is the newest blog platform for

00:00:23,460 --> 00:00:29,220
Perl I can say that would confident

00:00:26,869 --> 00:00:31,140
ok so first a little background a little

00:00:29,220 --> 00:00:33,660
bit about me my name is Henry van Stein

00:00:31,140 --> 00:00:35,280
I'm Dan Stein on the interwebs I'm the

00:00:33,660 --> 00:00:37,770
owner of intellitrace solutions or a

00:00:35,280 --> 00:00:39,719
small programming shop we developed

00:00:37,770 --> 00:00:42,750
database driven web applications for our

00:00:39,719 --> 00:00:45,600
clients using mainly the rapid app

00:00:42,750 --> 00:00:48,110
framework which I'm also the main author

00:00:45,600 --> 00:00:50,670
and maintainer of and I'm also a

00:00:48,110 --> 00:00:54,180
contributor of both civil catalysts and

00:00:50,670 --> 00:00:57,559
TV I see and I've given demos about

00:00:54,180 --> 00:01:01,469
rapid app for the past several years at

00:00:57,559 --> 00:01:03,660
Yap see you now at TPC which have been I

00:01:01,469 --> 00:01:06,030
would say pretty well-received people

00:01:03,660 --> 00:01:09,689
have liked them but one limitation of

00:01:06,030 --> 00:01:11,490
the demos that I've done so far in

00:01:09,689 --> 00:01:13,670
previous years is that they're just that

00:01:11,490 --> 00:01:16,710
demos there are hypothetical

00:01:13,670 --> 00:01:19,500
applications built just for one purpose

00:01:16,710 --> 00:01:22,619
to demo some feature of rapid app and

00:01:19,500 --> 00:01:24,479
there's certainly lots of other more

00:01:22,619 --> 00:01:26,549
sophisticated complex things that we do

00:01:24,479 --> 00:01:29,100
in our own real applications that don't

00:01:26,549 --> 00:01:32,729
aren't shown there so for this year I

00:01:29,100 --> 00:01:34,710
wanted to find a topic a demo to do that

00:01:32,729 --> 00:01:37,490
would be a bigger real-world app that's

00:01:34,710 --> 00:01:41,250
real-world useful rather than just a a

00:01:37,490 --> 00:01:43,890
toy basically and so I married this with

00:01:41,250 --> 00:01:46,079
solving another long term to it that

00:01:43,890 --> 00:01:49,829
I've had that I wanted to do which is

00:01:46,079 --> 00:01:51,689
make a better blogging platform now you

00:01:49,829 --> 00:01:54,090
may ask another blog why another

00:01:51,689 --> 00:01:55,939
blogging platform well there's different

00:01:54,090 --> 00:01:58,829
reasons and different people have

00:01:55,939 --> 00:02:00,540
rationales and have different different

00:01:58,829 --> 00:02:03,659
aspects of what blogging means to them

00:02:00,540 --> 00:02:05,729
and what features are most important to

00:02:03,659 --> 00:02:07,320
them and I won't get into all of that I

00:02:05,729 --> 00:02:09,060
will say rapid app is already well

00:02:07,320 --> 00:02:11,009
suited to the problem domain but

00:02:09,060 --> 00:02:13,140
obviously I would I would say that but

00:02:11,009 --> 00:02:13,470
you can judge you can judge for yourself

00:02:13,140 --> 00:02:17,250
and if

00:02:13,470 --> 00:02:21,600
but the number one reason that I decided

00:02:17,250 --> 00:02:23,850
to go down this road for me was to have

00:02:21,600 --> 00:02:27,840
a better way of handling the front-end

00:02:23,850 --> 00:02:30,000
api's the themes that as they're called

00:02:27,840 --> 00:02:33,780
in other platforms which give me endless

00:02:30,000 --> 00:02:36,330
grief and what I am ultimately wanted to

00:02:33,780 --> 00:02:39,240
fix more than any other single thing so

00:02:36,330 --> 00:02:41,340
what is the problem with things in other

00:02:39,240 --> 00:02:44,510
platforms well first of all the word

00:02:41,340 --> 00:02:46,830
itself implies restrictive this it's

00:02:44,510 --> 00:02:48,660
changing the appearance you have an

00:02:46,830 --> 00:02:50,910
opportunity to change the appearance of

00:02:48,660 --> 00:02:53,100
something that's already defined the

00:02:50,910 --> 00:02:55,080
backend already tells you here's the

00:02:53,100 --> 00:02:57,660
structure that we're going to be here is

00:02:55,080 --> 00:03:00,120
how we're going to do pages and

00:02:57,660 --> 00:03:02,520
structures and you have to have to

00:03:00,120 --> 00:03:04,260
adhere to that and then all these these

00:03:02,520 --> 00:03:07,020
platforms the invent their own concepts

00:03:04,260 --> 00:03:09,180
of pages and sections and sub headers

00:03:07,020 --> 00:03:13,590
and all these different things that you

00:03:09,180 --> 00:03:15,840
have to learn in adhere to custom URL

00:03:13,590 --> 00:03:18,269
endpoints all these things are assembled

00:03:15,840 --> 00:03:21,090
in a domain-specific manner that you

00:03:18,269 --> 00:03:24,530
have to you have to learn their platform

00:03:21,090 --> 00:03:26,610
just to get to the most basic things

00:03:24,530 --> 00:03:30,510
including areas where I feel you

00:03:26,610 --> 00:03:32,850
shouldn't have to to do that and the

00:03:30,510 --> 00:03:35,670
biggest gripe for me is trying to work

00:03:32,850 --> 00:03:37,950
with designers you know I don't know if

00:03:35,670 --> 00:03:41,130
you've ever worked with designers they

00:03:37,950 --> 00:03:43,080
know HTML and CSS you ask them to give

00:03:41,130 --> 00:03:46,980
you a design they give you back a nice

00:03:43,080 --> 00:03:49,500
static HTML site that works great but

00:03:46,980 --> 00:03:51,600
then it you have to now interface that

00:03:49,500 --> 00:03:52,950
with the domain-specific model for

00:03:51,600 --> 00:03:54,900
whatever platform you want to interface

00:03:52,950 --> 00:03:57,420
so like that's where you know typically

00:03:54,900 --> 00:03:59,310
if you want to design for WordPress you

00:03:57,420 --> 00:04:01,440
want a designer that knows WordPress

00:03:59,310 --> 00:04:03,540
otherwise you as the developer

00:04:01,440 --> 00:04:05,610
implementer are taking their stuff

00:04:03,540 --> 00:04:07,620
chopping it up putting it in you know

00:04:05,610 --> 00:04:09,540
and then there's they include some crazy

00:04:07,620 --> 00:04:11,580
Java scripts that conflict with the main

00:04:09,540 --> 00:04:14,580
systems Java scripts and all these

00:04:11,580 --> 00:04:18,479
things and it just becomes a giant ball

00:04:14,580 --> 00:04:20,310
of misery so for a P blog I have a

00:04:18,479 --> 00:04:22,140
different approach to how this front-end

00:04:20,310 --> 00:04:22,889
environment should work and I call them

00:04:22,140 --> 00:04:25,560
SCAF

00:04:22,889 --> 00:04:27,449
and this is just the term that I chose

00:04:25,560 --> 00:04:34,229
to give more emphasis than the word

00:04:27,449 --> 00:04:37,499
theme to em that the scaffold is

00:04:34,229 --> 00:04:41,129
basically an ordinary regular HTML site

00:04:37,499 --> 00:04:43,289
first and it's able to handle its own

00:04:41,129 --> 00:04:46,409
rules and businesses as much as possible

00:04:43,289 --> 00:04:48,360
it is able to to make its own decisions

00:04:46,409 --> 00:04:50,099
for the front end and not so the back I

00:04:48,360 --> 00:04:51,599
don't want the backend to get involved

00:04:50,099 --> 00:04:54,240
in things that didn't need to be

00:04:51,599 --> 00:04:56,460
involved with because by the way HTML

00:04:54,240 --> 00:04:57,689
already has a lot of features right you

00:04:56,460 --> 00:04:59,900
know there's we don't need to

00:04:57,689 --> 00:05:02,069
reimplemented

00:04:59,900 --> 00:05:06,120
constructs and paradigms that already

00:05:02,069 --> 00:05:09,330
are built and work so what makes this

00:05:06,120 --> 00:05:11,069
work is that it lives it the root the

00:05:09,330 --> 00:05:14,159
scaffold lives at the root of the site

00:05:11,069 --> 00:05:15,900
like HTML wants which is that sort of

00:05:14,159 --> 00:05:18,060
the biggest blocker of these other

00:05:15,900 --> 00:05:19,770
systems that you give controller actions

00:05:18,060 --> 00:05:21,719
and they dispatch they dispatch

00:05:19,770 --> 00:05:23,219
templates from some other directory and

00:05:21,719 --> 00:05:26,580
then they assemble these things together

00:05:23,219 --> 00:05:29,490
to then present this site that has

00:05:26,580 --> 00:05:31,800
relative paths and whatnot and that that

00:05:29,490 --> 00:05:36,870
generally is not going to fit the same

00:05:31,800 --> 00:05:39,270
as it was created so these is so my idea

00:05:36,870 --> 00:05:41,729
was I want to have a regular site but

00:05:39,270 --> 00:05:43,500
then be able to selectively have

00:05:41,729 --> 00:05:45,750
template directives like you can just

00:05:43,500 --> 00:05:47,810
drop or static site in but then when you

00:05:45,750 --> 00:05:49,740
want to call to the backend and and

00:05:47,810 --> 00:05:51,979
utilize those things you

00:05:49,740 --> 00:05:54,509
opportunistically are able to do that

00:05:51,979 --> 00:05:55,800
but it can still just be a regular HTML

00:05:54,509 --> 00:05:58,310
and just work that with the main

00:05:55,800 --> 00:06:02,939
principle so then the backend API

00:05:58,310 --> 00:06:04,949
exposes the api's and methods and

00:06:02,939 --> 00:06:07,500
directives that the scaffold can use

00:06:04,949 --> 00:06:08,849
however it chooses to do it and then

00:06:07,500 --> 00:06:10,830
there can be different the scaffold

00:06:08,849 --> 00:06:11,939
implementations can be the front-end

00:06:10,830 --> 00:06:15,750
implementation can be completely

00:06:11,939 --> 00:06:18,300
different from one site to the next so

00:06:15,750 --> 00:06:21,360
the basic architecture is we have this

00:06:18,300 --> 00:06:23,490
scaffold directory which is again a

00:06:21,360 --> 00:06:26,339
public web site structure you have your

00:06:23,490 --> 00:06:28,289
native HTML CSS images all fonts all the

00:06:26,339 --> 00:06:31,169
stuff you'd have and then you can have

00:06:28,289 --> 00:06:34,050
these template directives are also then

00:06:31,169 --> 00:06:35,969
available and then it's template

00:06:34,050 --> 00:06:36,610
directives call to a template API which

00:06:35,969 --> 00:06:40,150
then

00:06:36,610 --> 00:06:42,969
both blog specific directives to be able

00:06:40,150 --> 00:06:45,789
to do blog specific things which reaches

00:06:42,969 --> 00:06:48,069
in to the backend model and this is

00:06:45,789 --> 00:06:49,990
where we do prescribe it's not so we get

00:06:48,069 --> 00:06:53,830
to this layer that we established rules

00:06:49,990 --> 00:06:55,419
which is a rules for the taxonomy x' the

00:06:53,830 --> 00:06:57,580
coasts and how we're going to store

00:06:55,419 --> 00:06:59,740
things we obviously we define it at this

00:06:57,580 --> 00:07:01,930
layer but then make it so that there's

00:06:59,740 --> 00:07:04,360
multiple ways that the front-end

00:07:01,930 --> 00:07:09,129
scaffold can access those features and

00:07:04,360 --> 00:07:11,379
then for modification for making changes

00:07:09,129 --> 00:07:12,460
like creating posts and doing those sort

00:07:11,379 --> 00:07:15,759
of change operations

00:07:12,460 --> 00:07:17,770
that's where rapid app is really comes

00:07:15,759 --> 00:07:21,129
into bear where we're able to utilize

00:07:17,770 --> 00:07:24,490
the advanced capabilities of rapid app

00:07:21,129 --> 00:07:26,289
for those sort of things so let's start

00:07:24,490 --> 00:07:28,029
by having a look and seeing one of these

00:07:26,289 --> 00:07:29,979
sites in action so I'm going to start

00:07:28,029 --> 00:07:32,169
with a running site I'm going to go

00:07:29,979 --> 00:07:34,449
through some public the standard public

00:07:32,169 --> 00:07:38,469
facing functionality to see how it works

00:07:34,449 --> 00:07:40,270
browsing posts pages searching etc then

00:07:38,469 --> 00:07:46,000
we'll go into the password protected

00:07:40,270 --> 00:07:49,419
area make modifications editors basic

00:07:46,000 --> 00:07:50,770
admin then we'll browse the scaffolds

00:07:49,419 --> 00:07:54,759
and see how these scaffolds are actually

00:07:50,770 --> 00:07:56,979
built and with time show how to create a

00:07:54,759 --> 00:08:01,120
new site using the create script which

00:07:56,979 --> 00:08:06,250
is very very fast and easy okay so let's

00:08:01,120 --> 00:08:10,379
start so the point that I wanted to

00:08:06,250 --> 00:08:13,629
accomplish is that you can make any HTML

00:08:10,379 --> 00:08:17,289
that you want however that said it does

00:08:13,629 --> 00:08:20,409
ship with some pre-built scaffolds which

00:08:17,289 --> 00:08:23,139
are what both to give the ability to get

00:08:20,409 --> 00:08:26,169
quick out-of-the-box ability to get a

00:08:23,139 --> 00:08:28,060
working site but also as of mainly as a

00:08:26,169 --> 00:08:29,439
reference implementation that's the best

00:08:28,060 --> 00:08:32,500
way to see how to implement these things

00:08:29,439 --> 00:08:34,630
is having some example scaffolds that

00:08:32,500 --> 00:08:37,000
call into these features that can be

00:08:34,630 --> 00:08:39,669
used as a reference so this this is the

00:08:37,000 --> 00:08:42,190
default scaffold that ships with rappy

00:08:39,669 --> 00:08:45,579
blog which is called bootstrap blog and

00:08:42,190 --> 00:08:49,300
it's just the it is the most vanilla you

00:08:45,579 --> 00:08:50,350
can get it's the Twitter bootstrap blog

00:08:49,300 --> 00:08:51,970
example like it

00:08:50,350 --> 00:08:56,040
directly from the Twitter bootstrap blog

00:08:51,970 --> 00:08:58,960
example so it's like plain vanilla so um

00:08:56,040 --> 00:09:00,430
it's sort of concept of a blog and

00:08:58,960 --> 00:09:01,780
there's different ways we might want to

00:09:00,430 --> 00:09:03,490
display information but we're going to

00:09:01,780 --> 00:09:05,710
have you know basic stuff we're going to

00:09:03,490 --> 00:09:10,750
display posts oh and by the way I'd need

00:09:05,710 --> 00:09:13,870
to thank crew for contributing his own

00:09:10,750 --> 00:09:15,610
blog posts from a foolish manifesto calm

00:09:13,870 --> 00:09:17,980
which by the way is an excellent vlog

00:09:15,610 --> 00:09:22,510
especially if you like them like more

00:09:17,980 --> 00:09:25,690
vim information there so thank you for

00:09:22,510 --> 00:09:28,030
letting me use this to populate some

00:09:25,690 --> 00:09:29,230
sample data here to use so you know what

00:09:28,030 --> 00:09:32,470
does the blog going to do we want to

00:09:29,230 --> 00:09:35,260
have you know you have posts access

00:09:32,470 --> 00:09:37,270
posts right we want to be able to have

00:09:35,260 --> 00:09:39,700
listings of posts we want to be able to

00:09:37,270 --> 00:09:42,580
maybe have paging maybe we want to be

00:09:39,700 --> 00:09:44,650
able to control the items per page maybe

00:09:42,580 --> 00:09:49,030
we want to control whether we're going

00:09:44,650 --> 00:09:52,840
to have display being verbose or concise

00:09:49,030 --> 00:09:55,150
and have toggle options paging forward

00:09:52,840 --> 00:09:57,160
page we want to be able to you know

00:09:55,150 --> 00:09:58,960
display paging information of what you

00:09:57,160 --> 00:10:02,620
know items per page and that's what the

00:09:58,960 --> 00:10:04,690
standard stuff so the model supports

00:10:02,620 --> 00:10:08,590
basic taxonomy so far I've just

00:10:04,690 --> 00:10:10,570
basically implemented tags and you can

00:10:08,590 --> 00:10:14,290
we can like look at the list of tags and

00:10:10,570 --> 00:10:17,380
it shows the number of popularity we can

00:10:14,290 --> 00:10:20,160
filter items according to that we can

00:10:17,380 --> 00:10:25,270
look at authors for instance and see

00:10:20,160 --> 00:10:28,720
articles by different authors basics or

00:10:25,270 --> 00:10:31,110
the standard stuff and then of course we

00:10:28,720 --> 00:10:31,110
can search

00:10:32,310 --> 00:10:40,199
and find find our poses right so now

00:10:37,470 --> 00:10:42,990
let's say up so that's you know basic

00:10:40,199 --> 00:10:44,610
stuff this is not rocket science so now

00:10:42,990 --> 00:10:47,189
we want to we want to create a new post

00:10:44,610 --> 00:10:49,709
so when we create a new post now we're

00:10:47,189 --> 00:10:52,439
going to get into the territory where it

00:10:49,709 --> 00:10:55,499
is predefined because it's a predefined

00:10:52,439 --> 00:10:59,129
set of of data points that our model

00:10:55,499 --> 00:11:02,009
declares so we can we have I have a new

00:10:59,129 --> 00:11:03,420
post link here which calls in to open an

00:11:02,009 --> 00:11:05,309
interface and automatically if you go

00:11:03,420 --> 00:11:06,569
into an area that's password-protected

00:11:05,309 --> 00:11:07,889
it'll prompt you to be password

00:11:06,569 --> 00:11:15,300
protected all that happens automatically

00:11:07,889 --> 00:11:18,300
with rapid app and this takes us on

00:11:15,300 --> 00:11:20,850
through and now we can create a post so

00:11:18,300 --> 00:11:23,910
these are the basic fields for our post

00:11:20,850 --> 00:11:26,519
object we have a name which is needs to

00:11:23,910 --> 00:11:38,220
be unique and is and used to generate

00:11:26,519 --> 00:11:40,680
the URL and then a friendly title we

00:11:38,220 --> 00:11:43,620
have a concept that the model defines of

00:11:40,680 --> 00:11:45,329
a per post image which doesn't the

00:11:43,620 --> 00:11:47,459
scaffold doesn't have to use this but

00:11:45,329 --> 00:11:49,920
the data points are available and in

00:11:47,459 --> 00:11:52,230
some cases you want to do that so you

00:11:49,920 --> 00:11:57,029
can select an image to be associated

00:11:52,230 --> 00:11:59,600
with you know the image to be associated

00:11:57,029 --> 00:11:59,600
with the post

00:12:07,550 --> 00:12:12,890
all right this is the summary basically

00:12:10,730 --> 00:12:14,750
which is another concept so that you can

00:12:12,890 --> 00:12:17,450
have the problem the preview summary of

00:12:14,750 --> 00:12:20,420
the post you can either type in your own

00:12:17,450 --> 00:12:21,920
custom or it'll auto generate it from

00:12:20,420 --> 00:12:23,779
the from the beginning of the of the

00:12:21,920 --> 00:12:26,000
post and you can select the date and

00:12:23,779 --> 00:12:27,920
time you can select the author if you're

00:12:26,000 --> 00:12:29,870
an admin obviously you're not an admin

00:12:27,920 --> 00:12:32,329
you have an only post as yourself but

00:12:29,870 --> 00:12:35,060
and again it's the robust permissions

00:12:32,329 --> 00:12:36,950
model that exists we have standard

00:12:35,060 --> 00:12:38,480
concepts like a published unpublished

00:12:36,950 --> 00:12:39,890
obviously they won't you won't show up

00:12:38,480 --> 00:12:42,560
if it's not published but that's the way

00:12:39,890 --> 00:12:44,029
that you can preview things so then we

00:12:42,560 --> 00:12:47,300
get down to actually writing the body

00:12:44,029 --> 00:12:48,769
and this is where and this is a new

00:12:47,300 --> 00:12:52,970
feature that sort of been added to wrap

00:12:48,769 --> 00:12:57,740
it up as a new editor type which is rich

00:12:52,970 --> 00:12:59,959
content so static only sites have gotten

00:12:57,740 --> 00:13:01,820
really popular with programmers with

00:12:59,959 --> 00:13:04,550
devs a lot of people here probably have

00:13:01,820 --> 00:13:06,680
static site generator blogs where you

00:13:04,550 --> 00:13:08,480
write your blog posts in a markdown file

00:13:06,680 --> 00:13:11,240
you generate the site and you push it up

00:13:08,480 --> 00:13:12,350
and that works great um but business

00:13:11,240 --> 00:13:14,000
people aren't going to do that laypeople

00:13:12,350 --> 00:13:16,690
aren't going to do that so I wanted to

00:13:14,000 --> 00:13:19,940
be able to provide an interface that

00:13:16,690 --> 00:13:22,310
laypeople could use but then also not go

00:13:19,940 --> 00:13:24,649
down the rabbit hole of all the problems

00:13:22,310 --> 00:13:27,380
that arise from that with WYSIWYG

00:13:24,649 --> 00:13:30,550
editors that create this muffed up HTML

00:13:27,380 --> 00:13:35,899
that is that causes all kinds of issues

00:13:30,550 --> 00:13:38,300
so this is a we like that we we

00:13:35,899 --> 00:13:41,540
definitely like the markdown format for

00:13:38,300 --> 00:13:43,250
storing the content so we are writing

00:13:41,540 --> 00:13:45,110
our posts in markdown but so this is

00:13:43,250 --> 00:13:46,730
this sort of looks like it's a WYSIWYG

00:13:45,110 --> 00:13:49,640
editor it's actually a hybrid WYSIWYG

00:13:46,730 --> 00:13:51,500
editor as far as regular joe user who

00:13:49,640 --> 00:13:55,270
doesn't know the difference you know

00:13:51,500 --> 00:14:01,279
they can add a heading they can add

00:13:55,270 --> 00:14:03,980
maybe a numbered list I just have a bad

00:14:01,279 --> 00:14:05,120
type err one typing fast you get the

00:14:03,980 --> 00:14:06,970
point why does it have to be spelled

00:14:05,120 --> 00:14:10,300
like to understand the code principles

00:14:06,970 --> 00:14:13,459
right um

00:14:10,300 --> 00:14:18,400
well I I think would I make predictable

00:14:13,459 --> 00:14:20,170
typos those'll it shows so

00:14:18,400 --> 00:14:21,910
and so that's who look it acts like a

00:14:20,170 --> 00:14:23,620
WYSIWYG editor but it's not actually a

00:14:21,910 --> 00:14:25,210
WYSIWYG editor it's just a syntax

00:14:23,620 --> 00:14:27,430
highlighter and is what it's doing is

00:14:25,210 --> 00:14:30,250
its highlighting markdown syntax so you

00:14:27,430 --> 00:14:33,010
just type you just tight markdown syntax

00:14:30,250 --> 00:14:36,670
and it sort of renders what that's going

00:14:33,010 --> 00:14:38,050
to look like and then one of the other

00:14:36,670 --> 00:14:40,870
cool features that we have here you can

00:14:38,050 --> 00:14:42,700
do a side by side preview to see more

00:14:40,870 --> 00:14:44,680
closely what that HD HTML is going to

00:14:42,700 --> 00:14:47,620
look like from that now the styles this

00:14:44,680 --> 00:14:49,420
is a preview preview where the exact

00:14:47,620 --> 00:14:51,040
styles are going to depend on the styles

00:14:49,420 --> 00:14:52,839
of the scaffold as it renders but the

00:14:51,040 --> 00:14:56,160
basic the basic ideas of what it's going

00:14:52,839 --> 00:14:58,210
to look like are there and support for

00:14:56,160 --> 00:15:00,550
content we want to let's say we want to

00:14:58,210 --> 00:15:03,779
insert an image we can just drag the

00:15:00,550 --> 00:15:05,500
image in and it just works and this uses

00:15:03,779 --> 00:15:07,089
this is actually some of the

00:15:05,500 --> 00:15:09,220
capabilities that have this is where

00:15:07,089 --> 00:15:10,810
we're leveraging rapid app this is wrap

00:15:09,220 --> 00:15:14,680
it up has what's called a simple cast

00:15:10,810 --> 00:15:16,960
store which is a basically a database

00:15:14,680 --> 00:15:18,940
that stores content like exactly like it

00:15:16,960 --> 00:15:21,640
does so it automatically provides

00:15:18,940 --> 00:15:24,850
deduplication so like this hash that it

00:15:21,640 --> 00:15:26,680
creates here is unique if I if I add

00:15:24,850 --> 00:15:28,450
this same file over and over again

00:15:26,680 --> 00:15:29,740
because the content is the same the

00:15:28,450 --> 00:15:36,940
checks will be the same it'll be that

00:15:29,740 --> 00:15:38,170
everything that's correct yes that's

00:15:36,940 --> 00:15:41,140
correct what happened there is a

00:15:38,170 --> 00:15:43,180
round-trip yes yes yes I'm brown yeah a

00:15:41,140 --> 00:15:45,250
round-trip happened it did an upload it

00:15:43,180 --> 00:15:47,680
finished the upload got a response back

00:15:45,250 --> 00:15:49,630
from the server with a link to be able

00:15:47,680 --> 00:15:52,959
to get to it and it put it there and

00:15:49,630 --> 00:15:55,270
then also by the way it's notice here in

00:15:52,959 --> 00:15:58,390
case you're wondering I'm dropping in

00:15:55,270 --> 00:16:00,459
actual HTML style image tags instead of

00:15:58,390 --> 00:16:03,990
the markdown style image tags and the

00:16:00,459 --> 00:16:06,610
reason is is the markdown images the

00:16:03,990 --> 00:16:09,459
support for flexibility is pretty low

00:16:06,610 --> 00:16:11,490
there so like I and I also have this

00:16:09,459 --> 00:16:14,800
year so it's easy to do something like

00:16:11,490 --> 00:16:18,370
like that and it'll do what you want it

00:16:14,800 --> 00:16:21,040
to do so um you know and there's other

00:16:18,370 --> 00:16:25,480
other cool stuff and it's all alive side

00:16:21,040 --> 00:16:26,980
by side like tables and and and so you

00:16:25,480 --> 00:16:28,270
know you know a developers you know

00:16:26,980 --> 00:16:30,970
you're just writing markdown and it's

00:16:28,270 --> 00:16:32,170
just text and you know that the text is

00:16:30,970 --> 00:16:34,209
going to not be some

00:16:32,170 --> 00:16:35,320
crazy on the other end but then the

00:16:34,209 --> 00:16:36,310
business users they don't know the

00:16:35,320 --> 00:16:37,510
difference they think they're using a

00:16:36,310 --> 00:16:39,850
WYSIWYG editor so I think it's pretty

00:16:37,510 --> 00:16:43,630
cool this is based on an editor called

00:16:39,850 --> 00:16:46,600
simple MDE which is heavily modified

00:16:43,630 --> 00:16:47,920
obviously but I think that it's pretty

00:16:46,600 --> 00:16:49,810
cool and I hope I'm looking forward to

00:16:47,920 --> 00:16:52,180
seeing how this works for real users

00:16:49,810 --> 00:16:54,670
okay so we add our features of what we

00:16:52,180 --> 00:16:56,860
want we're good with it we save it it

00:16:54,670 --> 00:17:00,250
creates the post and then it brings us

00:16:56,860 --> 00:17:02,560
to a post page and what this does is it

00:17:00,250 --> 00:17:04,240
gives us an actual preview of what it's

00:17:02,560 --> 00:17:06,669
going to look like on the site that uses

00:17:04,240 --> 00:17:08,530
an iframe to do this and then we can

00:17:06,669 --> 00:17:12,309
re-edit it if we want to change

00:17:08,530 --> 00:17:14,290
something and save it roundtrip and and

00:17:12,309 --> 00:17:17,860
there it is and then we can see the

00:17:14,290 --> 00:17:20,020
actual markdown that it is which is that

00:17:17,860 --> 00:17:21,610
how it's actually stored and then we

00:17:20,020 --> 00:17:23,319
also have a tab for additional

00:17:21,610 --> 00:17:25,809
attributes where we can set things we

00:17:23,319 --> 00:17:28,960
can change our post image we can change

00:17:25,809 --> 00:17:32,080
our author we know and this is all bound

00:17:28,960 --> 00:17:35,049
by what permissions we actually have and

00:17:32,080 --> 00:17:38,070
we can we have a link we can jump

00:17:35,049 --> 00:17:42,070
straight out to the actual post there

00:17:38,070 --> 00:17:44,260
and it does session tracking one and the

00:17:42,070 --> 00:17:47,650
scaffold can choose to do all sorts of

00:17:44,260 --> 00:17:50,350
things like you may want to have you may

00:17:47,650 --> 00:17:53,440
want to have an edit link on the post

00:17:50,350 --> 00:17:54,730
and so you can do that another site you

00:17:53,440 --> 00:17:56,650
may want people to log into the admin

00:17:54,730 --> 00:17:58,840
section to go and do it but for this

00:17:56,650 --> 00:18:00,640
example I have lots of examples for

00:17:58,840 --> 00:18:02,650
things so you can click Edit to just

00:18:00,640 --> 00:18:04,780
jump straight back in to edit it and

00:18:02,650 --> 00:18:06,250
save roundtrip but again these are

00:18:04,780 --> 00:18:09,730
decisions that are up to the scaffold

00:18:06,250 --> 00:18:12,669
that can do it how it wants to so some

00:18:09,730 --> 00:18:15,390
other capabilities that we have so also

00:18:12,669 --> 00:18:17,590
I mentioned published versus unpublished

00:18:15,390 --> 00:18:18,610
if it's not published

00:18:17,590 --> 00:18:20,919
you know it'll tell you that it's not

00:18:18,610 --> 00:18:23,260
published but we can still see we can

00:18:20,919 --> 00:18:25,840
still see the view here and actually now

00:18:23,260 --> 00:18:27,400
if we view it oh public well no why is

00:18:25,840 --> 00:18:29,830
it still displaying well because we're

00:18:27,400 --> 00:18:33,600
logged in if I log out page not found

00:18:29,830 --> 00:18:33,600
you know I log back in

00:18:35,020 --> 00:18:39,400
it takes us back to where we were and

00:18:36,880 --> 00:18:41,800
that's another thing is that all of the

00:18:39,400 --> 00:18:44,860
all the API calls that the template

00:18:41,800 --> 00:18:45,460
directives give you are all one web one

00:18:44,860 --> 00:18:47,680
better

00:18:45,460 --> 00:18:49,540
concepts like if you have you doesn't

00:18:47,680 --> 00:18:52,540
mean that you can't have fancy crazy

00:18:49,540 --> 00:18:54,490
Ajax front-end stuff happening because

00:18:52,540 --> 00:18:57,190
that's you know by definition if you can

00:18:54,490 --> 00:19:00,010
do you know if you can do web 1.0 if you

00:18:57,190 --> 00:19:01,690
do web 2.0 with your front-end stuff but

00:19:00,010 --> 00:19:04,930
it's sort of trying to get to the least

00:19:01,690 --> 00:19:06,730
common denominator ability so it tracks

00:19:04,930 --> 00:19:09,010
and redirects any page that you're on

00:19:06,730 --> 00:19:10,900
you can go you can log in log out and

00:19:09,010 --> 00:19:14,470
it'll redirect you and keep your

00:19:10,900 --> 00:19:17,110
namespace in place we have other basic

00:19:14,470 --> 00:19:18,580
capabilities that in the end some sites

00:19:17,110 --> 00:19:21,430
might not use this like you might just

00:19:18,580 --> 00:19:22,720
use discuss and not have comments and

00:19:21,430 --> 00:19:24,940
then if you don't want comments just

00:19:22,720 --> 00:19:26,440
don't put just don't put that in the

00:19:24,940 --> 00:19:29,650
scaffold but if you want them you know

00:19:26,440 --> 00:19:32,200
you can add comments and multiple

00:19:29,650 --> 00:19:37,210
comments and you can reply to comments

00:19:32,200 --> 00:19:42,730
and you know that just works in a

00:19:37,210 --> 00:19:44,950
generalized way right right but I can

00:19:42,730 --> 00:19:47,020
make it so it warns you see this little

00:19:44,950 --> 00:19:49,210
red right here and that's also the

00:19:47,020 --> 00:19:50,500
choosing that's the template is choosing

00:19:49,210 --> 00:19:52,420
to say that it's not public but we

00:19:50,500 --> 00:19:59,740
better fit what he said we fix it so

00:19:52,420 --> 00:20:01,540
that it is public well or if you choose

00:19:59,740 --> 00:20:05,410
- I mean you when you create a new post

00:20:01,540 --> 00:20:07,180
we know it's there now it's public when

00:20:05,410 --> 00:20:11,940
you create a new post you can choose to

00:20:07,180 --> 00:20:11,940
start it off as published if you want

00:20:12,600 --> 00:20:18,000
there now it's it started out as

00:20:15,160 --> 00:20:20,620
publicly it's already there public so

00:20:18,000 --> 00:20:23,380
basic capabilities basic features so

00:20:20,620 --> 00:20:27,790
this is one of this is one of the

00:20:23,380 --> 00:20:31,180
scaffolds and again this is the main

00:20:27,790 --> 00:20:32,860
purpose of this one is as a reference of

00:20:31,180 --> 00:20:34,660
augmentation it's like these are the

00:20:32,860 --> 00:20:38,590
basic capabilities that you might want

00:20:34,660 --> 00:20:40,630
to need you but your the idea is that

00:20:38,590 --> 00:20:42,940
you're not stuck with this look at all

00:20:40,630 --> 00:20:46,120
you put in any you go and you drop in

00:20:42,940 --> 00:20:48,400
any you could do it a double you get - a

00:20:46,120 --> 00:20:52,420
mirror download some

00:20:48,400 --> 00:20:53,710
insite github.com and and if anybody W

00:20:52,420 --> 00:20:55,810
get a schmear

00:20:53,710 --> 00:20:58,030
we'll let you copy a little follow links

00:20:55,810 --> 00:21:00,100
and get you the whole working site you

00:20:58,030 --> 00:21:02,620
can take that drop it into the scaffold

00:21:00,100 --> 00:21:04,300
and it'll just work and then you can go

00:21:02,620 --> 00:21:06,580
in and you can selectively add in

00:21:04,300 --> 00:21:07,510
directives to start making it dynamic

00:21:06,580 --> 00:21:09,190
and that's another thing that I wanted

00:21:07,510 --> 00:21:11,560
to be able to do is to be able to

00:21:09,190 --> 00:21:13,180
incremental e improve and get to things

00:21:11,560 --> 00:21:16,870
so it's like okay here's an own starting

00:21:13,180 --> 00:21:18,370
point here my site is working now I want

00:21:16,870 --> 00:21:20,230
to add this feature now I want to add

00:21:18,370 --> 00:21:23,050
that feature I don't have to learn all

00:21:20,230 --> 00:21:25,630
the API just to get the hello world I

00:21:23,050 --> 00:21:28,630
learn the API to add the features that I

00:21:25,630 --> 00:21:30,790
want so I'm going to very quickly show

00:21:28,630 --> 00:21:34,210
you another so there's two scaffold so

00:21:30,790 --> 00:21:36,400
for me this is very new obviously and I

00:21:34,210 --> 00:21:39,160
want to have in the plan is later to

00:21:36,400 --> 00:21:41,200
have much fancier better scaffolds built

00:21:39,160 --> 00:21:42,490
in and that'll happen through time but

00:21:41,200 --> 00:21:45,250
rise of right now there's two that are

00:21:42,490 --> 00:21:49,240
built in the big default one and then I

00:21:45,250 --> 00:21:51,400
have another one which shows another way

00:21:49,240 --> 00:21:56,590
that this can work and this is based on

00:21:51,400 --> 00:21:58,690
another just open source a static HTML

00:21:56,590 --> 00:22:01,180
site you can download called the keep it

00:21:58,690 --> 00:22:02,830
simple and then this site this one

00:22:01,180 --> 00:22:09,400
decides to do things in a sort of a

00:22:02,830 --> 00:22:11,560
different way so like we have a concept

00:22:09,400 --> 00:22:13,660
here like oh look we have an avatar

00:22:11,560 --> 00:22:16,060
which the other scaffold didn't choose

00:22:13,660 --> 00:22:17,320
to be to access that and this one does

00:22:16,060 --> 00:22:20,980
choose to access it and we have a

00:22:17,320 --> 00:22:22,840
drop-down list the other thing is is

00:22:20,980 --> 00:22:24,220
that then this is these are these

00:22:22,840 --> 00:22:25,780
interfaces that we've been calling up

00:22:24,220 --> 00:22:28,390
but this is still the model is all

00:22:25,780 --> 00:22:32,410
driven by a rapid app so we have access

00:22:28,390 --> 00:22:34,090
to the rapid app back-end and when you

00:22:32,410 --> 00:22:36,040
come back into the interface you may be

00:22:34,090 --> 00:22:38,620
familiar with and I just added some nice

00:22:36,040 --> 00:22:40,810
tiles to just have shortcut links to

00:22:38,620 --> 00:22:44,410
some common things that you can see your

00:22:40,810 --> 00:22:46,120
posts and all posts and then because

00:22:44,410 --> 00:22:48,340
it's rapid app you can you know you can

00:22:46,120 --> 00:22:50,560
customize your view and add filters and

00:22:48,340 --> 00:22:52,900
and save them and do all the stuff that

00:22:50,560 --> 00:22:56,140
wrap it up what you do you can do that

00:22:52,900 --> 00:22:59,470
stuff you can do that stuff here with

00:22:56,140 --> 00:23:00,760
your your post database and and then if

00:22:59,470 --> 00:23:01,840
you double click by the way every now we

00:23:00,760 --> 00:23:04,390
double click the open

00:23:01,840 --> 00:23:07,150
one of these rows will see aha this page

00:23:04,390 --> 00:23:10,059
that we've been seeing here is actually

00:23:07,150 --> 00:23:11,860
just the row page that we set up for the

00:23:10,059 --> 00:23:13,240
for the post object which if you're

00:23:11,860 --> 00:23:15,929
familiar with wrap it up you can wrap it

00:23:13,240 --> 00:23:18,760
up before you know that you can define

00:23:15,929 --> 00:23:21,390
custom interfaces on a per result source

00:23:18,760 --> 00:23:21,390
of basis

00:23:37,540 --> 00:23:51,610
yeah it's I mean it's I searched it

00:23:41,320 --> 00:23:52,960
filtered it down so I would I would yeah

00:23:51,610 --> 00:23:55,690
it's yeah I mean it's just it's just

00:23:52,960 --> 00:23:58,990
doing a string any string search okay

00:23:55,690 --> 00:24:01,740
all right so moving lots of questions to

00:23:58,990 --> 00:24:01,740
up to this point

00:24:07,550 --> 00:24:11,000
correct right that's correct that's

00:24:09,890 --> 00:24:13,760
correct yeah and that is a difference

00:24:11,000 --> 00:24:15,350
and also so um you know there is not

00:24:13,760 --> 00:24:17,960
there is no single thing that is all

00:24:15,350 --> 00:24:21,830
that is the right for everybody and

00:24:17,960 --> 00:24:23,780
there are other reasons part of the part

00:24:21,830 --> 00:24:26,800
of the reason that this is a debt a full

00:24:23,780 --> 00:24:29,690
database-driven back end as opposed to a

00:24:26,800 --> 00:24:31,790
you know leaner more moderate text-only

00:24:29,690 --> 00:24:33,350
back end as well as wrap it up and wrap

00:24:31,790 --> 00:24:34,210
it up does databases so come on what did

00:24:33,350 --> 00:24:38,810
you expect

00:24:34,210 --> 00:24:41,300
but also because that it's trying to

00:24:38,810 --> 00:24:43,580
target these business people as well and

00:24:41,300 --> 00:24:45,650
then also you have the ability because

00:24:43,580 --> 00:24:48,470
it's rapid ethanol this is modular as

00:24:45,650 --> 00:24:58,010
you can build an application around this

00:24:48,470 --> 00:25:02,930
which is a useful thing correct right

00:24:58,010 --> 00:25:04,760
and that's all I have I have a um a DVI

00:25:02,930 --> 00:25:06,530
C train change tracking thing called

00:25:04,760 --> 00:25:09,140
called audit any which I'm actually

00:25:06,530 --> 00:25:10,340
planning on providing some automatically

00:25:09,140 --> 00:25:13,190
to implement that that will

00:25:10,340 --> 00:25:15,260
automatically do change tracking of rows

00:25:13,190 --> 00:25:18,500
in there but yeah that's the that's sort

00:25:15,260 --> 00:25:22,970
of the benefit of benefit of using of

00:25:18,500 --> 00:25:24,910
pearl and DB IC and this robust stack is

00:25:22,970 --> 00:25:27,050
this powerful these powerful rich

00:25:24,910 --> 00:25:28,910
capabilities that we have and that's

00:25:27,050 --> 00:25:31,880
what sort of what I really like about

00:25:28,910 --> 00:25:34,850
what rapid app does is that it reaches

00:25:31,880 --> 00:25:36,770
into this incredibly powerful stack and

00:25:34,850 --> 00:25:38,810
bringing these features forward to

00:25:36,770 --> 00:25:40,790
leverage to all sorts of things okay so

00:25:38,810 --> 00:25:43,990
we probably want to actually see how

00:25:40,790 --> 00:25:43,990
this thing works in the backend

00:25:47,000 --> 00:25:52,220
all right so um so wrappi blog is a

00:25:50,299 --> 00:25:54,530
subclass of rapid app builder which

00:25:52,220 --> 00:25:57,110
means that it's a just a plaque PSG I

00:25:54,530 --> 00:26:00,620
app so if you're familiar with plaque

00:25:57,110 --> 00:26:03,440
PSG I it's the standard thing with that

00:26:00,620 --> 00:26:06,340
it has very very simple options here is

00:26:03,440 --> 00:26:11,960
an example app that PSG I for building

00:26:06,340 --> 00:26:13,309
and running an app of this and there's

00:26:11,960 --> 00:26:15,500
just a couple of options there's site

00:26:13,309 --> 00:26:18,049
path which is the directory where the

00:26:15,500 --> 00:26:20,960
site lives which is used for data

00:26:18,049 --> 00:26:22,549
persistence and it automatically rapid

00:26:20,960 --> 00:26:25,370
app automatically sets up the data

00:26:22,549 --> 00:26:29,179
storage which is both the data base and

00:26:25,370 --> 00:26:33,080
the calf storage is automatically set up

00:26:29,179 --> 00:26:35,150
and I should point out that with rapid

00:26:33,080 --> 00:26:37,270
app and VB I see you can have whatever

00:26:35,150 --> 00:26:40,429
back-end you want you can make it up a

00:26:37,270 --> 00:26:43,010
Postgres back-end database however get

00:26:40,429 --> 00:26:44,630
to do more configuration obviously to

00:26:43,010 --> 00:26:48,470
get to that all that stuff is there it's

00:26:44,630 --> 00:26:50,900
all modular but out of the box out of

00:26:48,470 --> 00:26:53,390
the box by default it's going to do a

00:26:50,900 --> 00:26:55,549
sequel like database so that it can just

00:26:53,390 --> 00:26:57,679
live in the local directory and it'll

00:26:55,549 --> 00:27:00,620
automatically set all these things up

00:26:57,679 --> 00:27:02,210
for you we'll see in a minute so the the

00:27:00,620 --> 00:27:03,950
again database files are created

00:27:02,210 --> 00:27:05,690
automatically if it doesn't already

00:27:03,950 --> 00:27:08,570
exist it automatically creates it and

00:27:05,690 --> 00:27:10,309
deploys it and then the scaffold the

00:27:08,570 --> 00:27:11,780
other option is the scaffold path which

00:27:10,309 --> 00:27:13,330
is the path to the scaffold that we've

00:27:11,780 --> 00:27:16,039
been talking about your document root

00:27:13,330 --> 00:27:17,990
which is the the literal root of the

00:27:16,039 --> 00:27:20,150
site and it'll this will actually

00:27:17,990 --> 00:27:24,400
default to a directory named scaffold

00:27:20,150 --> 00:27:27,140
inside the site path you don't define it

00:27:24,400 --> 00:27:29,059
so back to these scaffolds again it's an

00:27:27,140 --> 00:27:31,850
ordinary directory served from the root

00:27:29,059 --> 00:27:36,710
of the site which literally means like a

00:27:31,850 --> 00:27:40,059
directory IMG and the file food KNG will

00:27:36,710 --> 00:27:44,150
literally be served as IMG food PNG and

00:27:40,059 --> 00:27:48,470
then it's what would the namespace with

00:27:44,150 --> 00:27:50,000
the app guts is automatically merged so

00:27:48,470 --> 00:27:51,700
they are able to live in the same way

00:27:50,000 --> 00:27:54,470
the other way that the way that other

00:27:51,700 --> 00:27:56,659
platforms do this is a proper properly

00:27:54,470 --> 00:27:58,039
segments the controller namespaces but

00:27:56,659 --> 00:27:59,419
then you run into all those problems

00:27:58,039 --> 00:28:02,329
that I talked about

00:27:59,419 --> 00:28:04,219
of when you try to make an HTML site

00:28:02,329 --> 00:28:05,989
live where it doesn't think that it

00:28:04,219 --> 00:28:09,229
wants to live then you're putting

00:28:05,989 --> 00:28:11,239
everything back together so again it

00:28:09,229 --> 00:28:13,549
would use no configuration it's just a

00:28:11,239 --> 00:28:17,059
static website you can do that W get - m

00:28:13,549 --> 00:28:20,539
and just drop a site in and then then

00:28:17,059 --> 00:28:22,039
the files can be tte and we use

00:28:20,539 --> 00:28:22,969
templates - the templating engine as

00:28:22,039 --> 00:28:26,809
we're going to see in a second errors

00:28:22,969 --> 00:28:30,159
templates toolkit but then there's also

00:28:26,809 --> 00:28:34,249
the scaffold has the ability to define a

00:28:30,159 --> 00:28:36,320
configuration to tell the backend how to

00:28:34,249 --> 00:28:38,929
use it because it's all well and great

00:28:36,320 --> 00:28:40,459
to have the site be able to just be

00:28:38,929 --> 00:28:42,979
static but then there are certain cases

00:28:40,459 --> 00:28:45,529
where it needs you need to specify how

00:28:42,979 --> 00:28:46,969
it's going to function like how power

00:28:45,529 --> 00:28:49,070
the hours of posts going to get

00:28:46,969 --> 00:28:50,809
displayed through a wrapper that's those

00:28:49,070 --> 00:28:53,929
are things that the config is able to

00:28:50,809 --> 00:28:56,419
talk about so the important bit is that

00:28:53,929 --> 00:28:58,459
with this design it's the scaffold it's

00:28:56,419 --> 00:29:02,450
the front end that tells the backend

00:28:58,459 --> 00:29:05,749
what to do not the other way around so

00:29:02,450 --> 00:29:10,489
let's look at the scaffold Yama file

00:29:05,749 --> 00:29:13,599
which is a file named scaffold yml in

00:29:10,489 --> 00:29:16,729
the root of the scaffold directory

00:29:13,599 --> 00:29:17,950
here's an example with a few basic

00:29:16,729 --> 00:29:21,859
options

00:29:17,950 --> 00:29:24,619
static paths are these are these max

00:29:21,859 --> 00:29:26,359
prefixes of URLs and this just says

00:29:24,619 --> 00:29:28,489
these aren't templates and this is

00:29:26,359 --> 00:29:29,809
mainly about performance

00:29:28,489 --> 00:29:31,190
don't try to evaluate template

00:29:29,809 --> 00:29:32,959
directives if you don't need to you know

00:29:31,190 --> 00:29:37,369
that you're not going to evaluate images

00:29:32,959 --> 00:29:38,690
as templates private paths which any of

00:29:37,369 --> 00:29:40,070
these things should not be served

00:29:38,690 --> 00:29:43,009
publicly because again we have this

00:29:40,070 --> 00:29:44,869
merged namespace and this is not really

00:29:43,009 --> 00:29:47,629
about security but just about cleaning

00:29:44,869 --> 00:29:49,489
your namespace and not serving things

00:29:47,629 --> 00:29:51,649
that you know aren't you know aren't

00:29:49,489 --> 00:29:54,369
appropriate to serve basic things

00:29:51,649 --> 00:29:57,919
default extensions so that if you have

00:29:54,369 --> 00:30:00,739
files food on HTML you can access it is

00:29:57,919 --> 00:30:02,209
just foo a landing page you know these

00:30:00,739 --> 00:30:04,159
are things you need to you know

00:30:02,209 --> 00:30:05,869
determine what a static site you have to

00:30:04,159 --> 00:30:08,029
you have to literally go to index dot

00:30:05,869 --> 00:30:09,919
HTML or whatever you want to be able to

00:30:08,029 --> 00:30:12,770
go to slash where does that go to be

00:30:09,919 --> 00:30:14,240
able to define a custom 404

00:30:12,770 --> 00:30:16,280
there's some other options but sort of

00:30:14,240 --> 00:30:17,660
basic things like this and by the way I

00:30:16,280 --> 00:30:19,940
won't mention I'm proud of very proud of

00:30:17,660 --> 00:30:22,700
myself we've spent a lot of time writing

00:30:19,940 --> 00:30:23,510
the pod and there is in documentation on

00:30:22,700 --> 00:30:26,060
medicean

00:30:23,510 --> 00:30:28,180
so you know it's not all complete but

00:30:26,060 --> 00:30:30,890
it's there all the scaffold options are

00:30:28,180 --> 00:30:32,180
documented and then we have these view

00:30:30,890 --> 00:30:34,190
wrappers and I'm not going to get too

00:30:32,180 --> 00:30:36,680
deep into this but this is the mechanism

00:30:34,190 --> 00:30:38,810
of how hosts it rendered and it's

00:30:36,680 --> 00:30:44,060
basically a way of declaring the

00:30:38,810 --> 00:30:48,860
scaffold declares I own this half in

00:30:44,060 --> 00:30:51,350
this case we will say I want this wrap

00:30:48,860 --> 00:30:53,720
right this wrapper name of post out HTML

00:30:51,350 --> 00:30:56,390
and private I want to use this wrapper

00:30:53,720 --> 00:30:58,700
for anything that any requests that come

00:30:56,390 --> 00:31:01,700
in into the post name space and it's

00:30:58,700 --> 00:31:03,650
just a pen and it appends the names it

00:31:01,700 --> 00:31:06,500
takes the name of the template sticks it

00:31:03,650 --> 00:31:08,270
on there and then renders it wrapped by

00:31:06,500 --> 00:31:09,740
the named wrapper and that is the sort

00:31:08,270 --> 00:31:13,070
of the base of the nomenclature that it

00:31:09,740 --> 00:31:17,120
uses to do this rendering and there's

00:31:13,070 --> 00:31:18,110
actually some sophisticated stuff with

00:31:17,120 --> 00:31:20,120
this you can do all sorts of things

00:31:18,110 --> 00:31:24,560
there's different types include as one

00:31:20,120 --> 00:31:26,630
type there's also insert which are

00:31:24,560 --> 00:31:29,480
template et directives and it is again

00:31:26,630 --> 00:31:31,340
it subscribed in d-pod alright so let's

00:31:29,480 --> 00:31:36,530
take a look let's take a look at these

00:31:31,340 --> 00:31:37,970
actual site files so so here's the the

00:31:36,530 --> 00:31:42,860
demo site that we've been looking at

00:31:37,970 --> 00:31:45,020
here's our site and we see we have a we

00:31:42,860 --> 00:31:48,530
have our app dot P SGI which is there

00:31:45,020 --> 00:31:50,480
like we saw we have our scaffold

00:31:48,530 --> 00:31:52,940
directory and these other directory file

00:31:50,480 --> 00:31:54,890
these databases and the calf store which

00:31:52,940 --> 00:31:56,780
is automatically created by this being

00:31:54,890 --> 00:32:00,620
site dirt so then let's look in the

00:31:56,780 --> 00:32:03,320
scaffold again it's just an HTML site

00:32:00,620 --> 00:32:04,880
but their template enabled let's start

00:32:03,320 --> 00:32:07,700
by looking let's look at its scaffold

00:32:04,880 --> 00:32:09,020
too big so we see these are the some of

00:32:07,700 --> 00:32:11,330
the options that I just just talked

00:32:09,020 --> 00:32:12,890
about and then there's more options down

00:32:11,330 --> 00:32:14,180
here and you're like hey wait a minute

00:32:12,890 --> 00:32:15,950
I thought you just said that you weren't

00:32:14,180 --> 00:32:17,570
going to have configurations relative to

00:32:15,950 --> 00:32:21,650
page structures and whatnot

00:32:17,570 --> 00:32:25,760
oh it's not the scaffold can use its own

00:32:21,650 --> 00:32:26,570
config to do its own thing so and these

00:32:25,760 --> 00:32:29,929
examples

00:32:26,570 --> 00:32:32,029
just set up to where to define some

00:32:29,929 --> 00:32:34,940
navigation the scaffold config is a

00:32:32,029 --> 00:32:40,250
place to store data structures that your

00:32:34,940 --> 00:32:41,779
scaffold can then use so we have you

00:32:40,250 --> 00:32:44,450
know as I mentioned it's literally a

00:32:41,779 --> 00:32:48,820
literal path so under the scaffold

00:32:44,450 --> 00:32:55,399
authors HTML if you go to slash author

00:32:48,820 --> 00:32:58,029
in the site authors that's the file that

00:32:55,399 --> 00:33:01,879
it's that it's going to be loading to

00:32:58,029 --> 00:33:02,960
and what we see here this is this is if

00:33:01,879 --> 00:33:04,700
you're familiar with the template

00:33:02,960 --> 00:33:06,620
toolkit this will be familiar to you you

00:33:04,700 --> 00:33:08,480
see ok we're using a wrapper site

00:33:06,620 --> 00:33:10,429
wrapper you could just this could just

00:33:08,480 --> 00:33:12,740
be a static HTML file but that's what

00:33:10,429 --> 00:33:14,120
you know that's not that that useful so

00:33:12,740 --> 00:33:18,169
it's sort of the standard the standard

00:33:14,120 --> 00:33:20,480
conventions of a template toolkit so if

00:33:18,169 --> 00:33:24,399
we look at the site wrapper this is just

00:33:20,480 --> 00:33:29,720
the main domain common HTML wrapper and

00:33:24,399 --> 00:33:32,840
we see we have things like we're doing

00:33:29,720 --> 00:33:35,269
we iterate over the scaffold pages so

00:33:32,840 --> 00:33:39,669
the template API exposes these variables

00:33:35,269 --> 00:33:43,429
in your template namespace and you can

00:33:39,669 --> 00:33:45,259
you can do things like the scaffold is a

00:33:43,429 --> 00:33:46,639
reference to the scaffold config so

00:33:45,259 --> 00:33:50,539
that's how we're able to we're able to

00:33:46,639 --> 00:33:53,529
iterate scaffold up pages and there's

00:33:50,539 --> 00:34:00,590
that data structure and that lets us

00:33:53,529 --> 00:34:01,700
then build HTML out of that and part of

00:34:00,590 --> 00:34:03,879
the reason that we're then doing it this

00:34:01,700 --> 00:34:06,950
way is then we can implement things like

00:34:03,879 --> 00:34:09,079
like well if I click around and see

00:34:06,950 --> 00:34:10,760
which one is the active the other active

00:34:09,079 --> 00:34:13,669
length changes sort of a basic

00:34:10,760 --> 00:34:15,260
navigation capability that's the the

00:34:13,669 --> 00:34:18,079
implementation of how this particular

00:34:15,260 --> 00:34:20,359
scaffold accomplishes that at Avro of

00:34:18,079 --> 00:34:22,159
navigation and highlighting the active

00:34:20,359 --> 00:34:24,560
one which again is not the only way you

00:34:22,159 --> 00:34:27,859
know there's a million in one ways to

00:34:24,560 --> 00:34:29,599
have a site layout itself that is

00:34:27,859 --> 00:34:31,879
accomplished entirely in the

00:34:29,599 --> 00:34:32,770
implementation of the scaffold which is

00:34:31,879 --> 00:34:35,300
right here

00:34:32,770 --> 00:34:37,399
there's also unfortunately I'm not going

00:34:35,300 --> 00:34:39,349
to have time to like dig into all of the

00:34:37,399 --> 00:34:40,190
awesome stuff of the API that I think is

00:34:39,349 --> 00:34:43,250
really cool that I

00:34:40,190 --> 00:34:48,200
did I will dive into just a couple

00:34:43,250 --> 00:34:49,869
things the list of templates where we

00:34:48,200 --> 00:34:53,480
have the paging controls and whatnot

00:34:49,869 --> 00:34:56,089
well there's a common common set of

00:34:53,480 --> 00:34:57,800
access or methods in the template

00:34:56,089 --> 00:35:01,460
environment that you have one of them is

00:34:57,800 --> 00:35:04,220
list posts and this is a call that can

00:35:01,460 --> 00:35:06,890
be made in any context in any place to

00:35:04,220 --> 00:35:09,349
bring back a list of posts that you can

00:35:06,890 --> 00:35:12,890
then iterate to display in any sort of

00:35:09,349 --> 00:35:15,160
way that you want and it also gives the

00:35:12,890 --> 00:35:17,900
ability it also gives all the metadata

00:35:15,160 --> 00:35:19,490
necessary to do paging to know where you

00:35:17,900 --> 00:35:22,369
are to know how many items are in the

00:35:19,490 --> 00:35:26,869
set and again this is all documented in

00:35:22,369 --> 00:35:37,119
the pod but it provides the basic for

00:35:26,869 --> 00:35:41,630
paging controls which are next page

00:35:37,119 --> 00:35:45,170
previous page last page first page and

00:35:41,630 --> 00:35:47,930
if you look how this is working this is

00:35:45,170 --> 00:35:51,530
a query string that's happening here and

00:35:47,930 --> 00:35:52,970
is what this does and I'm going to get a

00:35:51,530 --> 00:35:57,410
little too into the weeds that just

00:35:52,970 --> 00:35:59,569
explained is that you can pass a set of

00:35:57,410 --> 00:36:01,520
grams that can be a query string set of

00:35:59,569 --> 00:36:05,420
parameters you can pass it into this

00:36:01,520 --> 00:36:07,940
list post method and get back the set of

00:36:05,420 --> 00:36:11,000
posts that match that and then it'll

00:36:07,940 --> 00:36:13,460
send you back metadata that you can use

00:36:11,000 --> 00:36:15,560
to navigate around and some of the

00:36:13,460 --> 00:36:19,910
metadata that it gives you back is it

00:36:15,560 --> 00:36:22,910
gives you back first qsr and preb QSR

00:36:19,910 --> 00:36:25,520
and is what this is is that is the query

00:36:22,910 --> 00:36:27,920
string the parameters that are necessary

00:36:25,520 --> 00:36:30,849
from where you currently are to get to

00:36:27,920 --> 00:36:33,890
that object so that's how it's able to

00:36:30,849 --> 00:36:35,329
get the next page like if you look at

00:36:33,890 --> 00:36:37,690
it's probably too small to for you to be

00:36:35,329 --> 00:36:40,790
able see but it's just generating that

00:36:37,690 --> 00:36:42,980
on the fly to be able to navigate around

00:36:40,790 --> 00:36:44,900
it now on other sites other sites might

00:36:42,980 --> 00:36:47,210
not want to do that kind of paging you

00:36:44,900 --> 00:36:49,430
or do it at all but it just provides a

00:36:47,210 --> 00:36:53,540
way again for the reason that it's done

00:36:49,430 --> 00:36:55,820
here in this way is to

00:36:53,540 --> 00:36:57,920
show examples of how things can be done

00:36:55,820 --> 00:37:03,700
so that you can use it as a reference to

00:36:57,920 --> 00:37:03,700
do things um questions so far

00:37:17,220 --> 00:37:21,710
you could not directly in this however

00:37:19,650 --> 00:37:24,869
you could easily because it's all

00:37:21,710 --> 00:37:27,539
standard conventions of DB I come see

00:37:24,869 --> 00:37:30,119
you could absolutely write a script to

00:37:27,539 --> 00:37:34,109
do that and you're just calling you know

00:37:30,119 --> 00:37:38,160
the DB I see search find the row object

00:37:34,109 --> 00:37:39,660
call update to change it and you could

00:37:38,160 --> 00:37:41,910
certainly do any of those things because

00:37:39,660 --> 00:37:43,770
you have a whole ripped back end but it

00:37:41,910 --> 00:37:45,299
doesn't there isn't any out of a box

00:37:43,770 --> 00:37:47,539
feature to do that but I you definitely

00:37:45,299 --> 00:37:53,670
need one because you can isn't that

00:37:47,539 --> 00:37:59,670
yourself absolutely so in fact here so

00:37:53,670 --> 00:38:01,950
let's let's look at cruise csdb

00:37:59,670 --> 00:38:03,539
databases and parole we can edit it and

00:38:01,950 --> 00:38:05,970
again we weren't logged in so now it's

00:38:03,539 --> 00:38:11,160
going to ask us to log in I keep missing

00:38:05,970 --> 00:38:13,410
hitting M so we bring this into the

00:38:11,160 --> 00:38:15,990
internal secured area of the page

00:38:13,410 --> 00:38:17,700
and we can click Edit and now we can

00:38:15,990 --> 00:38:21,869
change it to something else and we can

00:38:17,700 --> 00:38:24,359
we can totally screw with fruits rows to

00:38:21,869 --> 00:38:27,150
make it something ridiculous to the

00:38:24,359 --> 00:38:31,890
professional thing was this professional

00:38:27,150 --> 00:38:37,400
thing about CSV now looking for karma in

00:38:31,890 --> 00:38:43,880
there does that answer your question

00:38:37,400 --> 00:38:46,789
other questions okay so let's see

00:38:43,880 --> 00:38:49,140
actually make some great time okay so

00:38:46,789 --> 00:38:53,430
getting to this is actually really

00:38:49,140 --> 00:38:56,190
really fast and easy the once you

00:38:53,430 --> 00:38:58,589
install the package you know CPM Raffy :

00:38:56,190 --> 00:39:06,299
: blog it ships with a utility script

00:38:58,589 --> 00:39:07,950
our ABL and we can call that with right

00:39:06,299 --> 00:39:09,359
now there's only one the ideas this is

00:39:07,950 --> 00:39:10,619
going to be utility script that will do

00:39:09,359 --> 00:39:13,020
lots of different signings but right now

00:39:10,619 --> 00:39:16,319
it only has one mode which is create and

00:39:13,020 --> 00:39:20,240
then you just supply it a directory name

00:39:16,319 --> 00:39:20,240
that either doesn't exist or is empty

00:39:22,340 --> 00:39:28,080
enter and then it's going to go okay

00:39:25,350 --> 00:39:30,570
which will bootstrap it with one of our

00:39:28,080 --> 00:39:33,360
built-in skeletons which ones you want

00:39:30,570 --> 00:39:35,220
you can do the default one strep blog or

00:39:33,360 --> 00:39:36,360
the for the second one and the idea is

00:39:35,220 --> 00:39:38,460
hopefully there's going to be lots of

00:39:36,360 --> 00:39:41,190
these later on and they'll be bigger and

00:39:38,460 --> 00:39:42,930
better and more awesomer but for now

00:39:41,190 --> 00:39:45,030
they are simple so we'll just we'll we

00:39:42,930 --> 00:39:47,490
keep it the simple one we'll just enter

00:39:45,030 --> 00:39:49,410
copy those files in you have an

00:39:47,490 --> 00:39:51,000
opportunity to set the password for the

00:39:49,410 --> 00:39:52,920
admin user or you can just leave its

00:39:51,000 --> 00:39:54,990
length to be the default which is just

00:39:52,920 --> 00:39:57,630
PA FS if I said it's something if you

00:39:54,990 --> 00:39:59,580
want here and then you can even if you

00:39:57,630 --> 00:40:01,650
want you don't even have to exit the

00:39:59,580 --> 00:40:03,120
script you can act it you can say if you

00:40:01,650 --> 00:40:05,930
want us to start it the black server

00:40:03,120 --> 00:40:10,890
right now I can just give it a port and

00:40:05,930 --> 00:40:12,720
it'll start it up and it automatically

00:40:10,890 --> 00:40:14,610
deploy Lee's this first time it just

00:40:12,720 --> 00:40:18,180
created all the databases deployed them

00:40:14,610 --> 00:40:28,170
and set everything up and now port did I

00:40:18,180 --> 00:40:31,560
do that on so now if we go you always

00:40:28,170 --> 00:40:35,340
want actually my plan my plan is to have

00:40:31,560 --> 00:40:36,810
a plaque wizard app and then you start

00:40:35,340 --> 00:40:38,370
it and then you can actually put the

00:40:36,810 --> 00:40:40,560
deploy it through though I didn't have

00:40:38,370 --> 00:40:42,420
time to do that but so okay so here we

00:40:40,560 --> 00:40:48,930
go you know no post published you know

00:40:42,420 --> 00:40:52,560
brand-new so we can login to the

00:40:48,930 --> 00:40:55,070
interface and of course something's

00:40:52,560 --> 00:40:55,070
going to not work

00:41:05,240 --> 00:41:18,370
oh my god see you know I just test this

00:41:09,680 --> 00:41:18,370
all right well it's well

00:41:19,030 --> 00:41:22,890
I don't know where that fun

00:41:24,800 --> 00:41:28,570
yeah it should be fine

00:41:29,450 --> 00:41:34,830
obviously there's a bug so this is first

00:41:32,070 --> 00:41:39,350
version of this right no only you

00:41:34,830 --> 00:41:39,350
recreate it again if it's already

00:41:43,600 --> 00:41:49,480
I added I added some last-minute

00:41:46,590 --> 00:41:51,310
security which is probably there's a bug

00:41:49,480 --> 00:41:54,000
in that on airing it or something

00:41:51,310 --> 00:41:54,000
running on that course

00:42:00,810 --> 00:42:03,440
yeah

00:42:10,830 --> 00:42:15,060
all right so I have I obviously have

00:42:13,350 --> 00:42:17,400
created a bug which I don't know how I

00:42:15,060 --> 00:42:18,800
just who-who was I sitting next to where

00:42:17,400 --> 00:42:23,190
I just tested this before I came in here

00:42:18,800 --> 00:42:25,950
okay well it it's alright well it works

00:42:23,190 --> 00:42:31,410
and whatever bug it is it'll it'll be

00:42:25,950 --> 00:42:32,550
six of the first release today but one

00:42:31,410 --> 00:42:34,320
of the things that I was going to show

00:42:32,550 --> 00:42:37,290
is we have the permission permission

00:42:34,320 --> 00:42:46,650
model we have a user that you the user

00:42:37,290 --> 00:42:50,400
database for our users we have some

00:42:46,650 --> 00:42:51,840
basic permission flag we have admin

00:42:50,400 --> 00:42:53,190
author and comment are the three

00:42:51,840 --> 00:42:55,310
permissions that we have now which

00:42:53,190 --> 00:42:57,840
should be self-explanatory you can

00:42:55,310 --> 00:43:09,870
comment you can create posts in admin

00:42:57,840 --> 00:43:13,020
you can do anything and so the other let

00:43:09,870 --> 00:43:14,610
me let's see the next one work so the

00:43:13,020 --> 00:43:19,800
other thing that you can do is you can

00:43:14,610 --> 00:43:25,800
set this up with docker as well and this

00:43:19,800 --> 00:43:27,330
is rapid app has a docker image that we

00:43:25,800 --> 00:43:29,850
distribute that I talked about last year

00:43:27,330 --> 00:43:32,220
for a VPS GI and is what it actually

00:43:29,850 --> 00:43:36,230
does is it's a docker container that's

00:43:32,220 --> 00:43:40,110
designed to run any black PS GI app buy

00:43:36,230 --> 00:43:41,940
that has an apt up T SGI file in its

00:43:40,110 --> 00:43:47,670
directory and then you mount that

00:43:41,940 --> 00:43:50,940
directory on on up app and then if it

00:43:47,670 --> 00:43:53,220
finds an app Tufte SGI in opt app it'll

00:43:50,940 --> 00:43:56,120
start that up so then you can you can

00:43:53,220 --> 00:43:56,120
bootstrap this

00:43:57,770 --> 00:44:02,110
I have what five about five minutes

00:44:12,410 --> 00:44:17,869
so we can run these demands

00:44:21,510 --> 00:44:28,530
and then actually start the app up and

00:44:24,660 --> 00:44:35,880
then we can run our create script and we

00:44:28,530 --> 00:44:40,440
can do it on do it on op that's what you

00:44:35,880 --> 00:44:46,400
need to do it on op app this time we'll

00:44:40,440 --> 00:44:46,400
use that one of the passages

00:44:56,580 --> 00:45:01,849
- the one

00:44:58,460 --> 00:45:05,869
okay so and now within you can even read

00:45:01,849 --> 00:45:08,480
all about rapid PSG a traffic / PSG I

00:45:05,869 --> 00:45:11,089
it's available on docker hub and it has

00:45:08,480 --> 00:45:13,369
it has some basic control things you can

00:45:11,089 --> 00:45:14,900
open a shell you can exact to a shell

00:45:13,369 --> 00:45:16,490
and Dockers it's really with the docker

00:45:14,900 --> 00:45:21,020
so you get some basic commands you can

00:45:16,490 --> 00:45:25,550
run app restart will start the app up

00:45:21,020 --> 00:45:30,160
and now we can fix it out of that and I

00:45:25,550 --> 00:45:30,160
think we just put this guy on

00:45:33,960 --> 00:45:38,329
yeah all right so let's fingers cross

00:45:39,079 --> 00:45:44,339
okay now it's working this one's working

00:45:41,550 --> 00:45:47,579
so there must there must be a bug in the

00:45:44,339 --> 00:45:49,559
deploy without specifying a password so

00:45:47,579 --> 00:45:51,420
that it works just specify a password

00:45:49,559 --> 00:45:54,150
you want to specify a password anyway

00:45:51,420 --> 00:45:55,410
rather than using the default so you

00:45:54,150 --> 00:45:58,500
know that we can we have here we have it

00:45:55,410 --> 00:46:02,849
you know brand new blog it's empty go

00:45:58,500 --> 00:46:08,490
into the admin area or we can just leave

00:46:02,849 --> 00:46:11,000
post to post yes we want it to be

00:46:08,490 --> 00:46:11,000
published

00:46:25,510 --> 00:46:33,210
now we go back to our blog now here is

00:46:29,260 --> 00:46:38,230
our our view here and we can log-in

00:46:33,210 --> 00:46:39,840
these comments and do stuff why two

00:46:38,230 --> 00:46:42,460
comments all those different

00:46:39,840 --> 00:46:46,030
capabilities so one thing I think that I

00:46:42,460 --> 00:46:49,780
forgot to mention is that the there's

00:46:46,030 --> 00:46:52,000
only basic taxonomy so far with your

00:46:49,780 --> 00:46:54,460
tags and the way that right now the way

00:46:52,000 --> 00:47:03,450
that it does tags is you just specify a

00:46:54,460 --> 00:47:07,570
tag Twitter style so hash tag keywords

00:47:03,450 --> 00:47:10,330
and then it'll parse it parses those out

00:47:07,570 --> 00:47:12,940
of the body and then you see that it has

00:47:10,330 --> 00:47:14,590
a know how well you can see that see the

00:47:12,940 --> 00:47:16,900
the post Oh another thing that it'll do

00:47:14,590 --> 00:47:18,700
is some basic things that the model does

00:47:16,900 --> 00:47:21,430
is it does it has this hid tracking

00:47:18,700 --> 00:47:23,109
concept where it will and the scaffold

00:47:21,430 --> 00:47:25,359
needs to call this you have an option

00:47:23,109 --> 00:47:27,760
that you can call on the scaffold record

00:47:25,359 --> 00:47:29,830
post and it will record a hit in the hit

00:47:27,760 --> 00:47:32,740
table so that you can like you see this

00:47:29,830 --> 00:47:35,320
one has already three hits these are

00:47:32,740 --> 00:47:39,540
actually records the HTTP request and

00:47:35,320 --> 00:47:45,700
then you can do things with that you can

00:47:39,540 --> 00:47:47,800
go back to the first example you can

00:47:45,700 --> 00:47:50,410
look at you can do things like see

00:47:47,800 --> 00:47:53,260
popular posts because you can then sort

00:47:50,410 --> 00:47:56,619
by that that relationship which again

00:47:53,260 --> 00:47:58,090
this is back to what rapid app can do is

00:47:56,619 --> 00:47:59,740
automatically you have your relationship

00:47:58,090 --> 00:48:02,020
columns and that automatically renders

00:47:59,740 --> 00:48:04,390
as a count of the related items and so

00:48:02,020 --> 00:48:06,520
then you can automatically sort on that

00:48:04,390 --> 00:48:10,270
and then there you can with the paging

00:48:06,520 --> 00:48:13,660
stuff say give me the give me four sort

00:48:10,270 --> 00:48:15,940
by popularity give me the first four and

00:48:13,660 --> 00:48:20,080
now you can populate very simple section

00:48:15,940 --> 00:48:22,990
for most popular post this was currently

00:48:20,080 --> 00:48:29,850
most popular through testing

00:48:22,990 --> 00:48:35,910
so again the lots of information on the

00:48:29,850 --> 00:48:40,330
pot online in see how fresh and new is

00:48:35,910 --> 00:48:42,490
so we have basic usage there's a manual

00:48:40,330 --> 00:48:45,520
which is one section which talks about

00:48:42,490 --> 00:48:47,170
the scaffold but you can read and it'll

00:48:45,520 --> 00:48:49,780
give you a listing of all the different

00:48:47,170 --> 00:48:52,630
template directives that you can do you

00:48:49,780 --> 00:48:55,750
have this list post method and there's a

00:48:52,630 --> 00:48:58,810
similar method for list tags list users

00:48:55,750 --> 00:49:00,970
and it follows this list API which is a

00:48:58,810 --> 00:49:03,310
Reedy I see results that class component

00:49:00,970 --> 00:49:06,820
that gives you this unified interface

00:49:03,310 --> 00:49:08,080
and gives you back the result that gives

00:49:06,820 --> 00:49:11,890
you back this and all this meta

00:49:08,080 --> 00:49:13,360
information for your set so that you can

00:49:11,890 --> 00:49:16,240
do like that's how it did for instance

00:49:13,360 --> 00:49:17,410
that's how it does the the paging

00:49:16,240 --> 00:49:19,240
controls and it gives you all kinds of

00:49:17,410 --> 00:49:21,430
other information how many are how many

00:49:19,240 --> 00:49:23,470
items are for this page how many are

00:49:21,430 --> 00:49:26,080
remaining after this one but the current

00:49:23,470 --> 00:49:28,510
limit is start and all sorts of

00:49:26,080 --> 00:49:31,800
information a lot of information that

00:49:28,510 --> 00:49:35,290
you could you could calculate yourself

00:49:31,800 --> 00:49:37,360
you could calculate yourself but why it

00:49:35,290 --> 00:49:40,840
just makes it easy so that way you try

00:49:37,360 --> 00:49:43,110
to make it easy on the scaffold to be

00:49:40,840 --> 00:49:46,330
able to access these these capabilities

00:49:43,110 --> 00:49:49,320
so I'm just now at time are there

00:49:46,330 --> 00:49:49,320
questions more questions

00:50:00,190 --> 00:50:04,270
so that actually one of the one of the

00:50:01,960 --> 00:50:05,740
features that I do not have yet so

00:50:04,270 --> 00:50:07,470
actually I actually go and talk about

00:50:05,740 --> 00:50:11,950
the final I have one more slide actually

00:50:07,470 --> 00:50:14,349
which is the future features which is I

00:50:11,950 --> 00:50:16,059
want to support multiple content formats

00:50:14,349 --> 00:50:19,450
right now we're just doing the markdown

00:50:16,059 --> 00:50:23,530
HTML but there's actually guts to do um

00:50:19,450 --> 00:50:26,410
is this in a generalized way we expand

00:50:23,530 --> 00:50:27,849
the database model to have more concepts

00:50:26,410 --> 00:50:32,920
again the model is very lean right now

00:50:27,849 --> 00:50:35,589
the only the one taxonomy add more more

00:50:32,920 --> 00:50:38,589
scaffolds more features comments right

00:50:35,589 --> 00:50:40,960
now the mode that you have is it has to

00:50:38,589 --> 00:50:43,569
be a user with the custom permission to

00:50:40,960 --> 00:50:44,859
comment the I agree anonymous comments

00:50:43,569 --> 00:50:47,109
are useful things one of the things that

00:50:44,859 --> 00:50:50,109
I want to add planning on adding that as

00:50:47,109 --> 00:50:53,200
an option and my plan is basically

00:50:50,109 --> 00:50:55,809
provide an option in the configuration

00:50:53,200 --> 00:50:57,130
that doesn't Animus comments yes or no

00:50:55,809 --> 00:50:59,319
and then have it either automatically

00:50:57,130 --> 00:51:01,059
inflate an author object in those

00:50:59,319 --> 00:51:02,230
different ways there's different ways to

00:51:01,059 --> 00:51:03,579
go about doing that and part of the

00:51:02,230 --> 00:51:05,410
reason it doesn't do that yet

00:51:03,579 --> 00:51:07,569
is one of the other things that I want

00:51:05,410 --> 00:51:10,240
to do is I want to have better want more

00:51:07,569 --> 00:51:12,760
better authentication you know third

00:51:10,240 --> 00:51:16,809
signing like github sign-in by Twitter

00:51:12,760 --> 00:51:18,609
hola CAPTCHA you know like if you're

00:51:16,809 --> 00:51:21,190
going to allow anonymous as soon as you

00:51:18,609 --> 00:51:22,990
start allowing anonymous comments you

00:51:21,190 --> 00:51:25,480
want to be able to make sure that bots

00:51:22,990 --> 00:51:28,210
are going to spam you so you know being

00:51:25,480 --> 00:51:30,400
able to do password resets self signup

00:51:28,210 --> 00:51:31,539
these are things that I'm planning on

00:51:30,400 --> 00:51:34,630
adding I should point out that you

00:51:31,539 --> 00:51:36,490
absolutely have the ability to do these

00:51:34,630 --> 00:51:38,740
things already because it's a very

00:51:36,490 --> 00:51:41,200
remodeler system everything is modular

00:51:38,740 --> 00:51:43,270
everything is separate but that said I

00:51:41,200 --> 00:51:46,000
want to provide this sort of on a silver

00:51:43,270 --> 00:51:48,369
platter of features to get to more two

00:51:46,000 --> 00:51:50,829
more things so but the answer your

00:51:48,369 --> 00:51:53,670
question right now only authenticated

00:51:50,829 --> 00:51:53,670
users can post comments

00:51:55,320 --> 00:51:57,380
you

00:52:00,650 --> 00:52:05,300
yeah so there is there is a big good

00:52:03,440 --> 00:52:06,830
question the question is there's a big

00:52:05,300 --> 00:52:09,620
dependency chain to install to install

00:52:06,830 --> 00:52:11,180
this and yet this is based on rapid app

00:52:09,620 --> 00:52:13,130
and rapid app is based on catalyst and

00:52:11,180 --> 00:52:15,950
cattle of tens of bazillion dependencies

00:52:13,130 --> 00:52:18,350
yes that is true from a brand new fresh

00:52:15,950 --> 00:52:20,600
system with note with nothing install

00:52:18,350 --> 00:52:22,730
already it takes about an hour from CPM

00:52:20,600 --> 00:52:24,830
and CPI knows a tendency of sometimes

00:52:22,730 --> 00:52:26,900
being broken like there'll be one thing

00:52:24,830 --> 00:52:28,430
will just will be broken and your stuff

00:52:26,900 --> 00:52:29,930
won't install and so that's why the

00:52:28,430 --> 00:52:31,970
answer is that the recommended

00:52:29,930 --> 00:52:40,070
supportive way to do it is to use docker

00:52:31,970 --> 00:52:42,290
that's why the docker you call a docker

00:52:40,070 --> 00:52:44,840
pole wrap-ups gie that gives you a

00:52:42,290 --> 00:52:48,020
container that has the full stack of

00:52:44,840 --> 00:52:50,210
everything installed that you can even

00:52:48,020 --> 00:52:51,530
run out of the box so that's the fastest

00:52:50,210 --> 00:52:53,000
way and this is by the way this page

00:52:51,530 --> 00:52:55,490
right here this is something that

00:52:53,000 --> 00:52:58,190
anybody could do to run this set of

00:52:55,490 --> 00:52:59,930
commands and get a blog running or

00:52:58,190 --> 00:53:01,760
they've never used Perl before or the

00:52:59,930 --> 00:53:05,060
all they have to have is dr. installed

00:53:01,760 --> 00:53:06,410
and this takes you know a minute when

00:53:05,060 --> 00:53:07,850
you saw how fast I did it it won't be

00:53:06,410 --> 00:53:10,670
that fast because it'll have to pull the

00:53:07,850 --> 00:53:12,890
image I already had the image pulled but

00:53:10,670 --> 00:53:15,560
that's that's the official answer to get

00:53:12,890 --> 00:53:20,290
rapid app quickly is to use the docker

00:53:15,560 --> 00:53:20,290
image other questions

00:53:29,160 --> 00:53:35,210
or the one fastest

00:53:31,730 --> 00:53:38,000
well you can because it's rapid app you

00:53:35,210 --> 00:53:38,800
can dive into when we go back yeah so if

00:53:38,000 --> 00:53:41,939
we go into

00:53:38,800 --> 00:53:41,939
[Music]

00:53:45,720 --> 00:53:48,289
ever

00:53:49,130 --> 00:53:55,820
if you browse the database all of these

00:53:52,640 --> 00:53:59,210
are related information so comments as a

00:53:55,820 --> 00:54:01,340
related object and you can sort by that

00:53:59,210 --> 00:54:04,190
you can follow these relationships and

00:54:01,340 --> 00:54:06,320
see like when you when you type in just

00:54:04,190 --> 00:54:08,980
those pounds it actually it inflates on

00:54:06,320 --> 00:54:11,060
the backend it creates rows it creates

00:54:08,980 --> 00:54:14,090
creates the tag if it doesn't already

00:54:11,060 --> 00:54:16,100
exist and then it creates a post tag

00:54:14,090 --> 00:54:18,800
which is a link between that tag is the

00:54:16,100 --> 00:54:21,530
many-to-many and puts that in there and

00:54:18,800 --> 00:54:25,150
all that is available to you for doing

00:54:21,530 --> 00:54:27,740
searches if you is probably new to you I

00:54:25,150 --> 00:54:30,470
recommend look at some of the previous

00:54:27,740 --> 00:54:32,270
talks on rapid app where I go into all

00:54:30,470 --> 00:54:34,490
the capabilities of you can have query

00:54:32,270 --> 00:54:36,740
builders and you can build out any kind

00:54:34,490 --> 00:54:38,570
of query that you want and you have the

00:54:36,740 --> 00:54:40,400
ability to do all those criteria and

00:54:38,570 --> 00:54:42,680
that's by the way another benefit of

00:54:40,400 --> 00:54:45,230
doing it in the database versus just

00:54:42,680 --> 00:54:47,270
doing it in files is it you have those

00:54:45,230 --> 00:54:51,320
relationships to joins and foreign keys

00:54:47,270 --> 00:54:52,940
and you're able to you know explore your

00:54:51,320 --> 00:54:55,300
data to a much more powerful level and

00:54:52,940 --> 00:54:58,990
that's one of the benefits of reputable

00:54:55,300 --> 00:54:58,990
any other questions

00:55:06,280 --> 00:55:12,370
so the question is how easy is it to add

00:55:08,710 --> 00:55:14,140
another attribute to the post so that's

00:55:12,370 --> 00:55:17,260
a very good question and I haven't fully

00:55:14,140 --> 00:55:19,420
decided on the best way to handle that

00:55:17,260 --> 00:55:22,360
so there's two ways that I'm thinking

00:55:19,420 --> 00:55:26,140
about approaching that one way one way

00:55:22,360 --> 00:55:29,500
is you can you can define your own model

00:55:26,140 --> 00:55:33,160
so you can define your own post model

00:55:29,500 --> 00:55:36,520
you can extend the post result class and

00:55:33,160 --> 00:55:38,770
add additional add additional columns

00:55:36,520 --> 00:55:40,210
and by the way it's all the system is

00:55:38,770 --> 00:55:42,280
already forward-looking for this

00:55:40,210 --> 00:55:44,890
scenario where it'll automatically

00:55:42,280 --> 00:55:46,060
automatically deploy if the database

00:55:44,890 --> 00:55:48,220
doesn't already exist it'll

00:55:46,060 --> 00:55:49,900
automatically deploy if you have

00:55:48,220 --> 00:55:51,640
additional columns and then those

00:55:49,900 --> 00:55:54,160
additional columns will show up

00:55:51,640 --> 00:55:56,380
automatically but another of safeguard

00:55:54,160 --> 00:55:59,500
that it has using another tool that I

00:55:56,380 --> 00:56:01,390
wrote for DB is equals schema diff it's

00:55:59,500 --> 00:56:03,910
it very very time it starts up it

00:56:01,390 --> 00:56:06,070
verifies that the deployed schema

00:56:03,910 --> 00:56:08,110
matches the schema that you're using and

00:56:06,070 --> 00:56:10,120
if it doesn't it gives you an error so

00:56:08,110 --> 00:56:12,220
this is already forward-looking for not

00:56:10,120 --> 00:56:15,190
only the ability not only the ability to

00:56:12,220 --> 00:56:17,260
specify your own models have them work

00:56:15,190 --> 00:56:18,640
warn you if you have a mismatch

00:56:17,260 --> 00:56:19,960
situation which you can easily shoot

00:56:18,640 --> 00:56:22,390
yourself in the foot in that scenario if

00:56:19,960 --> 00:56:24,640
it doesn't do that and then provide a

00:56:22,390 --> 00:56:26,530
way to do scheme upgrades later because

00:56:24,640 --> 00:56:28,300
as it goes forward we're fully planning

00:56:26,530 --> 00:56:30,700
on supporting the current version of the

00:56:28,300 --> 00:56:33,550
database into the future so we will use

00:56:30,700 --> 00:56:35,890
probably cruise deployment handler which

00:56:33,550 --> 00:56:38,080
is another great package to bring you to

00:56:35,890 --> 00:56:41,800
do it incremental version is forward of

00:56:38,080 --> 00:56:44,680
the schema the other way is creating a

00:56:41,800 --> 00:56:46,180
meta a meta column a meta field is what

00:56:44,680 --> 00:56:48,820
I was thinking about doing and I want to

00:56:46,180 --> 00:56:50,410
I want to add a JSON editor editor type

00:56:48,820 --> 00:56:51,940
to have these attributes but then

00:56:50,410 --> 00:56:53,680
there's challenges of that you can't

00:56:51,940 --> 00:56:57,250
cert you know if you have you have

00:56:53,680 --> 00:57:00,370
attributes serialized in a blob of of a

00:56:57,250 --> 00:57:02,500
column you know a meadow column you

00:57:00,370 --> 00:57:03,910
can't you can't search on that because

00:57:02,500 --> 00:57:05,380
it's not a column like you know in

00:57:03,910 --> 00:57:06,940
relational databases so there's sort of

00:57:05,380 --> 00:57:09,670
trade-offs there I haven't decided

00:57:06,940 --> 00:57:11,920
exactly what the best way to hand that

00:57:09,670 --> 00:57:14,080
off is but I thought it is thought of

00:57:11,920 --> 00:57:15,370
and planning on doing that and part of

00:57:14,080 --> 00:57:16,390
the reason for right now for this

00:57:15,370 --> 00:57:19,750
version

00:57:16,390 --> 00:57:22,690
the model is very lean the taxonomy czar

00:57:19,750 --> 00:57:24,970
just this very simple model even though

00:57:22,690 --> 00:57:27,490
there's more that would be wanted this

00:57:24,970 --> 00:57:31,210
is an initial version proof-of-concept

00:57:27,490 --> 00:57:33,430
to get this to keep very clean and and

00:57:31,210 --> 00:57:38,860
raw for the starting point and then be

00:57:33,430 --> 00:57:39,850
able to carry that forward I'm going to

00:57:38,860 --> 00:57:41,620
start that dealers in that I wrote I

00:57:39,850 --> 00:57:43,480
don't have a blog so that's what I make

00:57:41,620 --> 00:57:45,400
here's the biggest irony I have no blah

00:57:43,480 --> 00:57:47,530
the reason I needed firuze posts if I

00:57:45,400 --> 00:57:48,970
don't have a blog because I couldn't I

00:57:47,530 --> 00:57:50,560
just couldn't bring myself to do it in

00:57:48,970 --> 00:57:52,960
WordPress or to do it in something else

00:57:50,560 --> 00:57:54,670
and so like the only way that I was

00:57:52,960 --> 00:57:55,270
going to get a blog was if I wrote this

00:57:54,670 --> 00:57:58,210
myself

00:57:55,270 --> 00:58:02,350
so that's part of the reason so I am in

00:57:58,210 --> 00:58:04,450
the coming days weeks once I will have a

00:58:02,350 --> 00:58:06,550
blog will be up now I just have to get

00:58:04,450 --> 00:58:08,050
content there I actually have a designer

00:58:06,550 --> 00:58:10,690
actually some part of the purpose of

00:58:08,050 --> 00:58:13,000
background here I have a blog design

00:58:10,690 --> 00:58:14,530
that I paid the designers to do and then

00:58:13,000 --> 00:58:16,300
I look like pulling my hair out trying

00:58:14,530 --> 00:58:17,950
to get the HTML implemented over what

00:58:16,300 --> 00:58:19,930
you know there has to be a better way to

00:58:17,950 --> 00:58:22,330
implement arbitrary HTML from designers

00:58:19,930 --> 00:58:29,320
and so that's why I that that's part of

00:58:22,330 --> 00:58:31,390
what made me do this over time is there

00:58:29,320 --> 00:58:32,270
other questions see me after thank you

00:58:31,390 --> 00:58:40,309
very much

00:58:32,270 --> 00:58:40,309
[Applause]

00:58:46,080 --> 00:58:48,140

YouTube URL: https://www.youtube.com/watch?v=5s_eSYwXDwM


