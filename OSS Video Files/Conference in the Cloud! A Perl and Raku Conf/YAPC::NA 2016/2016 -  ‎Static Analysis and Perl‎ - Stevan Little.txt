Title: 2016 -  ‎Static Analysis and Perl‎ - Stevan Little
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:04,140
static analysis and pearl so this is an

00:00:02,669 --> 00:00:05,520
extremely misleading title and you will

00:00:04,140 --> 00:00:08,820
know why by the time we get through this

00:00:05,520 --> 00:00:10,080
so so those of you don't know me my name

00:00:08,820 --> 00:00:13,070
is Steven little I've been programming

00:00:10,080 --> 00:00:16,139
pearl for about 15 years give or take

00:00:13,070 --> 00:00:18,270
Steven at Sipan that's my paws ID it

00:00:16,139 --> 00:00:21,630
helps when you have a name with really

00:00:18,270 --> 00:00:23,369
weird spelling you get it first Steven

00:00:21,630 --> 00:00:25,830
little is a Twitter nothing really

00:00:23,369 --> 00:00:28,769
useful on there though github.com /

00:00:25,830 --> 00:00:31,830
Steven also again nice to have a

00:00:28,769 --> 00:00:34,469
misspelled name so that's where most my

00:00:31,830 --> 00:00:37,110
stuff is these days I'm a principal

00:00:34,469 --> 00:00:39,840
developer at booking.com but actually my

00:00:37,110 --> 00:00:42,989
job that's my title my job is the senior

00:00:39,840 --> 00:00:45,239
team lead of the tooling track in the

00:00:42,989 --> 00:00:47,129
core infrastructure department so that

00:00:45,239 --> 00:00:50,700
basically means I hand all the

00:00:47,129 --> 00:00:54,390
miscellaneous crap so a little bit of

00:00:50,700 --> 00:00:56,270
history here um the booking motto back

00:00:54,390 --> 00:01:01,590
in the day Liz correct me if I'm wrong

00:00:56,270 --> 00:01:03,059
was hack and don't look back never

00:01:01,590 --> 00:01:05,129
phrase it like that but that's that's

00:01:03,059 --> 00:01:06,840
what it was and this is basically

00:01:05,129 --> 00:01:10,110
development optimized for business

00:01:06,840 --> 00:01:12,750
growth you may think that this is a bad

00:01:10,110 --> 00:01:15,390
thing you know I know I did and still

00:01:12,750 --> 00:01:17,250
kind of do sometimes but thanks to all

00:01:15,390 --> 00:01:18,990
the hard work of all the people at

00:01:17,250 --> 00:01:21,180
booking.com who did all that and all

00:01:18,990 --> 00:01:23,820
those people who came before me it

00:01:21,180 --> 00:01:27,420
actually worked and I mean like really

00:01:23,820 --> 00:01:29,549
worked no no really really worked ok

00:01:27,420 --> 00:01:31,170
we're a very very successful company and

00:01:29,549 --> 00:01:33,479
a lot of that is due to the fact that we

00:01:31,170 --> 00:01:35,040
did focus on on the business development

00:01:33,479 --> 00:01:40,610
and not necessarily on the code early on

00:01:35,040 --> 00:01:43,590
of course there were consequences so

00:01:40,610 --> 00:01:45,869
technical debt that is kind of not

00:01:43,590 --> 00:01:47,700
really strong enough word technical

00:01:45,869 --> 00:01:50,790
mortgage is maybe a better way to put

00:01:47,700 --> 00:01:52,200
this but you know this we're doing this

00:01:50,790 --> 00:01:53,909
in America here so let's actually talk

00:01:52,200 --> 00:01:56,340
about it for real this was a technical

00:01:53,909 --> 00:02:01,310
jumbo mortgage or for the duchies in the

00:01:56,340 --> 00:02:05,939
group yumbo that's an inside joke sorry

00:02:01,310 --> 00:02:08,310
so fast forward then 2 2015 and I know

00:02:05,939 --> 00:02:11,340
it's 2016 I'm not that stupid but this

00:02:08,310 --> 00:02:13,440
is this happened in 2015 we decided to

00:02:11,340 --> 00:02:15,720
pivot just slightly

00:02:13,440 --> 00:02:17,760
towards quality and craftsmanship we've

00:02:15,720 --> 00:02:19,830
been relying for a long time on people

00:02:17,760 --> 00:02:22,560
like Liz when people like Eve Orton

00:02:19,830 --> 00:02:25,620
Rafael Garcia Suarez and a whole crew of

00:02:22,560 --> 00:02:28,590
other people to basically do the right

00:02:25,620 --> 00:02:30,510
thing and build it well but they weren't

00:02:28,590 --> 00:02:32,940
necessarily the only people writing code

00:02:30,510 --> 00:02:34,470
so we needed to really sort of change

00:02:32,940 --> 00:02:35,880
the culture from that hack and don't

00:02:34,470 --> 00:02:37,350
look back to something that was a little

00:02:35,880 --> 00:02:41,100
bit more focused on quality and

00:02:37,350 --> 00:02:42,900
craftsmanship and long term basically we

00:02:41,100 --> 00:02:46,890
needed to pay down the principal on that

00:02:42,900 --> 00:02:48,570
jumbo mortgage so in true booking

00:02:46,890 --> 00:02:50,310
fashion they didn't assign this to

00:02:48,570 --> 00:02:52,020
anybody they didn't do anything about it

00:02:50,310 --> 00:02:53,520
it was just sort of an idea they put out

00:02:52,020 --> 00:02:55,410
there and they wanted us all to sort of

00:02:53,520 --> 00:02:57,600
take it and run with it which is

00:02:55,410 --> 00:02:59,850
basically it's out in the open anybody

00:02:57,600 --> 00:03:01,890
who wanted to pick it up they may

00:02:59,850 --> 00:03:06,530
ultimately regret this decision not

00:03:01,890 --> 00:03:10,980
actually putting anyone in charge so

00:03:06,530 --> 00:03:12,540
quickly disclaimer here when i submitted

00:03:10,980 --> 00:03:15,240
this talk i thought we'd be a little bit

00:03:12,540 --> 00:03:17,880
further ahead in this project but

00:03:15,240 --> 00:03:19,260
circumstances being what they are we

00:03:17,880 --> 00:03:20,850
didn't really get that far so a lot of

00:03:19,260 --> 00:03:22,680
what i'm going to tell you today is the

00:03:20,850 --> 00:03:24,090
ideas that we have sort of the

00:03:22,680 --> 00:03:26,340
philosophy that we're trying to approach

00:03:24,090 --> 00:03:28,560
it from and then some of the tools and

00:03:26,340 --> 00:03:30,720
things that were going to do so this is

00:03:28,560 --> 00:03:33,780
sort of part one of a talk if you want

00:03:30,720 --> 00:03:36,750
to see really the results company app

00:03:33,780 --> 00:03:39,230
see you next year or the other option is

00:03:36,750 --> 00:03:41,400
to come work for us in calm and

00:03:39,230 --> 00:03:44,010
if you want to know that details about

00:03:41,400 --> 00:03:46,140
that picturesque lawyer so end of the

00:03:44,010 --> 00:03:48,360
disclaimer so all right we're done with

00:03:46,140 --> 00:03:50,519
history now we need to talk about static

00:03:48,360 --> 00:03:53,459
analysis first we need to actually

00:03:50,519 --> 00:03:56,220
define static analysis so this is what

00:03:53,459 --> 00:03:57,959
wikipedia says static program analysis

00:03:56,220 --> 00:03:59,610
is an analysis of computer software that

00:03:57,959 --> 00:04:02,310
is performed without actually executing

00:03:59,610 --> 00:04:04,080
programs skip the parentheses in most

00:04:02,310 --> 00:04:05,250
cases the analysis is performed on some

00:04:04,080 --> 00:04:06,769
version of the source code in other

00:04:05,250 --> 00:04:09,150
cases some form of the object code

00:04:06,769 --> 00:04:10,830
that's a nice definition but it actually

00:04:09,150 --> 00:04:13,709
really doesn't capture what it is that

00:04:10,830 --> 00:04:16,169
we want to try and do analyze first

00:04:13,709 --> 00:04:19,169
isn't really the best way to describe

00:04:16,169 --> 00:04:21,040
what we want to do um we actually want

00:04:19,169 --> 00:04:23,020
to understand our

00:04:21,040 --> 00:04:24,520
and the reason we want to understand it

00:04:23,020 --> 00:04:27,100
is because there's reasons there's

00:04:24,520 --> 00:04:29,230
always reasons one of the things we do

00:04:27,100 --> 00:04:30,670
some pearl beginner training so we

00:04:29,230 --> 00:04:33,670
actually hire many programmers these

00:04:30,670 --> 00:04:36,040
days we hire C++ and C sharp and Java

00:04:33,670 --> 00:04:39,190
and anything else anybody who come to

00:04:36,040 --> 00:04:41,530
Amsterdam essentially but we we teach

00:04:39,190 --> 00:04:43,240
them pearl and and we also teach them my

00:04:41,530 --> 00:04:44,830
sequel because sometimes they post grass

00:04:43,240 --> 00:04:46,180
or something like that and in the my

00:04:44,830 --> 00:04:47,590
sequel training one of the things that I

00:04:46,180 --> 00:04:49,120
and in the Pro new be training one of

00:04:47,590 --> 00:04:51,250
the things I have to say is everything

00:04:49,120 --> 00:04:53,350
you thought you knew doesn't apply

00:04:51,250 --> 00:04:55,780
anymore we have a different scale we

00:04:53,350 --> 00:04:57,750
think about different things and so it's

00:04:55,780 --> 00:05:00,220
important to understand why these

00:04:57,750 --> 00:05:01,870
decisions like this are made sometimes

00:05:00,220 --> 00:05:04,180
its historical reasons some of our code

00:05:01,870 --> 00:05:05,560
really smells a mod perl you can see it

00:05:04,180 --> 00:05:07,330
in there we actually have an Apache

00:05:05,560 --> 00:05:10,000
namespace we haven't used the patching

00:05:07,330 --> 00:05:11,230
years but this is this is all historical

00:05:10,000 --> 00:05:12,880
and you have to understand that if

00:05:11,230 --> 00:05:14,440
you're going to try and affect and

00:05:12,880 --> 00:05:16,300
improve code you have to understand why

00:05:14,440 --> 00:05:17,500
it has become the way it is so we don't

00:05:16,300 --> 00:05:20,350
necessarily wanna analyze what we want

00:05:17,500 --> 00:05:22,660
to understand it and static it's also

00:05:20,350 --> 00:05:25,960
not really a good way to describe this

00:05:22,660 --> 00:05:28,720
um we don't want to just look at code at

00:05:25,960 --> 00:05:29,980
one point in time we actually wanted one

00:05:28,720 --> 00:05:31,270
of the constants of the universe is

00:05:29,980 --> 00:05:34,120
change and one of the constants of

00:05:31,270 --> 00:05:35,950
booking is always change so no code

00:05:34,120 --> 00:05:37,740
really changes or no no code remains

00:05:35,950 --> 00:05:40,000
untouched for a very long period of time

00:05:37,740 --> 00:05:42,550
so it's important for us to be able to

00:05:40,000 --> 00:05:44,980
look at this code as a living entity and

00:05:42,550 --> 00:05:46,930
and watch it grow and change over time

00:05:44,980 --> 00:05:50,950
and also to analyze the growth and

00:05:46,930 --> 00:05:51,790
change over the previous time so I'm

00:05:50,950 --> 00:05:54,100
going to do a little quick digression

00:05:51,790 --> 00:05:57,130
here on the plane here I've been reading

00:05:54,100 --> 00:05:58,270
Neal Stephenson's new book seven is

00:05:57,130 --> 00:06:01,090
there something like that anybody read

00:05:58,270 --> 00:06:02,500
it here couple people okay so it's got a

00:06:01,090 --> 00:06:04,450
lot of really cool stuff about like

00:06:02,500 --> 00:06:05,680
spaceships and satellites and orbital

00:06:04,450 --> 00:06:07,240
mechanics and all that stuff like that

00:06:05,680 --> 00:06:09,700
how many people here know about orbital

00:06:07,240 --> 00:06:15,370
mechanics good y'all can correct me when

00:06:09,700 --> 00:06:16,660
I this up at the end so so one of

00:06:15,370 --> 00:06:18,820
the things that I find fascinating about

00:06:16,660 --> 00:06:20,830
this and the idea and it sort of struck

00:06:18,820 --> 00:06:22,030
a nerve because it helped me understand

00:06:20,830 --> 00:06:25,330
sort of the way I'm trying to approach

00:06:22,030 --> 00:06:28,330
this problem is that you know just tiny

00:06:25,330 --> 00:06:29,980
little nudge can affect a huge amount of

00:06:28,330 --> 00:06:31,150
change you might have to wait for the

00:06:29,980 --> 00:06:33,340
change might have to go around the earth

00:06:31,150 --> 00:06:34,030
a couple times but you can readjust your

00:06:33,340 --> 00:06:35,740
orbit by

00:06:34,030 --> 00:06:40,210
you know thousands of kilometers if you

00:06:35,740 --> 00:06:43,210
want and also it uses large spinning

00:06:40,210 --> 00:06:45,250
balls of mud to do things which

00:06:43,210 --> 00:06:47,770
thankfully a booking we have a very

00:06:45,250 --> 00:06:55,900
large ball of mud that we can do this

00:06:47,770 --> 00:06:58,030
with Liz so I make this joke but but you

00:06:55,900 --> 00:06:59,560
know it's one of the things is that we

00:06:58,030 --> 00:07:02,350
really have to do is be careful about

00:06:59,560 --> 00:07:04,480
the way we change so um so these days

00:07:02,350 --> 00:07:07,270
like I said I'm the core infra tooling

00:07:04,480 --> 00:07:09,820
department and we we actually have a

00:07:07,270 --> 00:07:11,860
little we did a little expiration to try

00:07:09,820 --> 00:07:13,720
and figure out what the purpose of our

00:07:11,860 --> 00:07:15,970
track is and a track is sort of a

00:07:13,720 --> 00:07:18,250
collection of teams just a bit of a

00:07:15,970 --> 00:07:19,690
glossary there and we decided that it

00:07:18,250 --> 00:07:22,630
was increasing developer predicted

00:07:19,690 --> 00:07:24,850
productivity while reducing risk which

00:07:22,630 --> 00:07:27,040
is great for me to be able to tell my

00:07:24,850 --> 00:07:29,710
bosses because I can say it really quick

00:07:27,040 --> 00:07:31,980
and we're done but the real thing that I

00:07:29,710 --> 00:07:34,390
would like to do is actually to affect

00:07:31,980 --> 00:07:36,790
long lasting and meaningful change in

00:07:34,390 --> 00:07:38,920
this code base and and so that is

00:07:36,790 --> 00:07:41,380
actually sort of the the subtext there

00:07:38,920 --> 00:07:43,770
you know we can help people to go faster

00:07:41,380 --> 00:07:46,480
but we need to make it better as well

00:07:43,770 --> 00:07:49,270
but we also need to be careful about

00:07:46,480 --> 00:07:51,910
this because it's not just my job on the

00:07:49,270 --> 00:07:53,170
line it's the job of like what is 14,000

00:07:51,910 --> 00:07:55,420
people or something like that work for

00:07:53,170 --> 00:07:57,370
booking in total about 1200 in the IT

00:07:55,420 --> 00:07:59,110
department and we're growing so like if

00:07:57,370 --> 00:08:01,690
we screw this up and the whole thing

00:07:59,110 --> 00:08:03,040
falls down we're in big trouble we also

00:08:01,690 --> 00:08:05,230
need to be smart about the way we

00:08:03,040 --> 00:08:07,780
approach this and by smart by being

00:08:05,230 --> 00:08:10,210
smart I mean knowing how dumb we are and

00:08:07,780 --> 00:08:12,760
really being humble and approach this

00:08:10,210 --> 00:08:14,170
again understanding the the history

00:08:12,760 --> 00:08:16,390
behind all this stuff so we have to be

00:08:14,170 --> 00:08:19,210
very careful and we have to take a

00:08:16,390 --> 00:08:21,250
long-term view a really long term view

00:08:19,210 --> 00:08:23,620
on this some of these little nudges that

00:08:21,250 --> 00:08:26,380
we might be doing may take months they

00:08:23,620 --> 00:08:29,290
may take years to really see fruition

00:08:26,380 --> 00:08:31,180
and most of all we have to be willing to

00:08:29,290 --> 00:08:32,890
fail we have to be willing to screw up

00:08:31,180 --> 00:08:35,080
we have to be able to miss our exit

00:08:32,890 --> 00:08:36,670
velocity or escape velocity and just

00:08:35,080 --> 00:08:37,289
keep falling back down and keep getting

00:08:36,670 --> 00:08:40,620
back up

00:08:37,289 --> 00:08:42,269
again and basically what we want to do

00:08:40,620 --> 00:08:45,480
is we want to keep asking the what when

00:08:42,269 --> 00:08:48,360
and how which are what changes should we

00:08:45,480 --> 00:08:52,019
make when should we make those changes

00:08:48,360 --> 00:08:53,730
now is not always the right time and how

00:08:52,019 --> 00:08:56,370
should we make those changes sometimes

00:08:53,730 --> 00:08:57,930
the obvious solution is not the best

00:08:56,370 --> 00:08:59,220
solution sometimes you have to really

00:08:57,930 --> 00:09:01,259
think about this and you have to figure

00:08:59,220 --> 00:09:03,990
out like how can we test these things

00:09:01,259 --> 00:09:05,759
how can we measure them and measurement

00:09:03,990 --> 00:09:09,029
is very important because that's your

00:09:05,759 --> 00:09:10,199
metric for success and we basically just

00:09:09,029 --> 00:09:15,930
need to keep repeating that until

00:09:10,199 --> 00:09:19,470
everything is awesome now we have these

00:09:15,930 --> 00:09:22,529
questions where our answers for that we

00:09:19,470 --> 00:09:25,079
need data quite unfortunately we don't

00:09:22,529 --> 00:09:26,910
have any and when I say we don't have

00:09:25,079 --> 00:09:28,560
any I mean when I started asking people

00:09:26,910 --> 00:09:30,899
how many lines of code do you think we

00:09:28,560 --> 00:09:33,300
have I got answers anywhere from like a

00:09:30,899 --> 00:09:35,639
half million to like 10 million to

00:09:33,300 --> 00:09:37,529
whatever and and I was I wasn't even

00:09:35,639 --> 00:09:38,880
asking about all of our lines of code I

00:09:37,529 --> 00:09:41,699
was just asking about the lib directory

00:09:38,880 --> 00:09:43,470
and our main git repository and nobody

00:09:41,699 --> 00:09:45,449
knew some people got close but nobody

00:09:43,470 --> 00:09:47,100
actually knew just for the record it's

00:09:45,449 --> 00:09:48,990
about three and a half million lines of

00:09:47,100 --> 00:09:50,550
code that includes comments and

00:09:48,990 --> 00:09:52,350
documentation and if you take those out

00:09:50,550 --> 00:09:53,910
you're about two and a half million so

00:09:52,350 --> 00:09:55,980
that's actually not a bad ratio of

00:09:53,910 --> 00:09:57,449
comments and documentation although some

00:09:55,980 --> 00:09:58,800
of that maybe just long commented out

00:09:57,449 --> 00:10:02,220
code I don't know I haven't found that

00:09:58,800 --> 00:10:04,199
yet but but the thing is we really

00:10:02,220 --> 00:10:05,459
didn't know we didn't that so that's

00:10:04,199 --> 00:10:07,800
where we actually had decided we had to

00:10:05,459 --> 00:10:11,100
start and this is kind of ironic because

00:10:07,800 --> 00:10:12,990
booking loves data we love to monitor

00:10:11,100 --> 00:10:15,019
things we love to pull data out of

00:10:12,990 --> 00:10:17,339
everywhere but apparently not our code

00:10:15,019 --> 00:10:20,010
and i'm sure people tried to do it over

00:10:17,339 --> 00:10:22,970
the years you know and but nobody kept

00:10:20,010 --> 00:10:25,079
it nobody sustained it and nobody

00:10:22,970 --> 00:10:26,490
continued it along and that's an

00:10:25,079 --> 00:10:29,939
important thing you have to continue to

00:10:26,490 --> 00:10:31,709
do this you can't just stop analyze fix

00:10:29,939 --> 00:10:35,910
and start again you have to have a

00:10:31,709 --> 00:10:38,910
continuous continuous operation on us so

00:10:35,910 --> 00:10:40,259
effectively we were blind and so the

00:10:38,910 --> 00:10:41,699
story that I'm going to tell you now is

00:10:40,259 --> 00:10:44,009
all the tools that we're beginning to

00:10:41,699 --> 00:10:47,550
explore and we're beginning to think

00:10:44,009 --> 00:10:48,850
about as the methods to remove this

00:10:47,550 --> 00:10:51,220
blindness and to

00:10:48,850 --> 00:10:52,779
to reveal to us what we have there and

00:10:51,220 --> 00:10:57,190
then hopefully begin to answer some of

00:10:52,779 --> 00:10:58,319
those questions so that's it now we're

00:10:57,190 --> 00:11:01,959
going to delve into some of the details

00:10:58,319 --> 00:11:04,449
these slides were made like five minutes

00:11:01,959 --> 00:11:06,790
ago so there they don't have a lot in

00:11:04,449 --> 00:11:10,000
there so I'm going to talk a lot more so

00:11:06,790 --> 00:11:11,740
I apologize in advance so the tooling

00:11:10,000 --> 00:11:15,009
track is made up of a bunch of topics

00:11:11,740 --> 00:11:16,660
and among those topics is the packaging

00:11:15,009 --> 00:11:19,630
team this is actually the team that's

00:11:16,660 --> 00:11:20,699
run by soy or X and they have a couple

00:11:19,630 --> 00:11:22,959
of different things that they're doing

00:11:20,699 --> 00:11:24,550
the first thing is we're actually trying

00:11:22,959 --> 00:11:26,050
to figure out how to get dependencies

00:11:24,550 --> 00:11:28,360
under control we have something like

00:11:26,050 --> 00:11:29,500
2,000 3,000 dependencies I don't think

00:11:28,360 --> 00:11:32,050
anybody even knows that I don't know

00:11:29,500 --> 00:11:34,899
that and they're kind of a mess they're

00:11:32,050 --> 00:11:37,589
all in this weird rpm naming convention

00:11:34,899 --> 00:11:41,050
structure kind of weird at it's a mess

00:11:37,589 --> 00:11:42,880
we decided Sipan that's a great way to

00:11:41,050 --> 00:11:45,850
organize code that's a great if we have

00:11:42,880 --> 00:11:47,410
a local Sipan we have so anybody

00:11:45,850 --> 00:11:49,569
remember that whole little thing with

00:11:47,410 --> 00:11:52,120
NPM and the whole like break everybody's

00:11:49,569 --> 00:11:53,740
build stuff okay we don't want to be

00:11:52,120 --> 00:11:55,420
subject to that we also want to have a

00:11:53,740 --> 00:11:57,459
control of our dependencies we want to

00:11:55,420 --> 00:11:59,589
be able to sort of bet new versions and

00:11:57,459 --> 00:12:02,380
and run them through so we set up a

00:11:59,589 --> 00:12:04,480
local Sipan and I think we actually have

00:12:02,380 --> 00:12:05,860
a mirror maybe I don't know yeah we had

00:12:04,480 --> 00:12:07,420
we have a real mirror but we actually

00:12:05,860 --> 00:12:10,540
set up an internal one that's completely

00:12:07,420 --> 00:12:12,459
on our own and that was very like I said

00:12:10,540 --> 00:12:14,620
very specifically to have a good control

00:12:12,459 --> 00:12:18,130
of our dependencies and what what flows

00:12:14,620 --> 00:12:19,930
in and and and what we end up using and

00:12:18,130 --> 00:12:22,360
of course if you have a Sipan instance

00:12:19,930 --> 00:12:25,720
why not also set up a messy pan instance

00:12:22,360 --> 00:12:27,100
we have like a pearl doc booking.com or

00:12:25,720 --> 00:12:30,279
something like that that is you know

00:12:27,100 --> 00:12:31,779
it's just a I think pod to HTML run over

00:12:30,279 --> 00:12:33,490
all of our dependencies in all of our

00:12:31,779 --> 00:12:35,139
code and stuff like that but if you've

00:12:33,490 --> 00:12:36,579
ever looked at pod to HTML output it's

00:12:35,139 --> 00:12:38,470
just kind of yeah it's not that

00:12:36,579 --> 00:12:40,630
interesting meta Sipan on the other hand

00:12:38,470 --> 00:12:42,339
has a ton of information you go to any

00:12:40,630 --> 00:12:44,170
page in medicean you see a ton of

00:12:42,339 --> 00:12:46,689
information all of which would be

00:12:44,170 --> 00:12:47,100
valuable for anyone at booking looking

00:12:46,689 --> 00:12:50,520
to

00:12:47,100 --> 00:12:52,650
to add an additional dependency the

00:12:50,520 --> 00:12:56,820
other nice part about medicean is the

00:12:52,650 --> 00:13:00,000
API which is basically just a proxy

00:12:56,820 --> 00:13:02,850
against elasticsearch and we can add

00:13:00,000 --> 00:13:05,160
stuff to that so we're beginning to work

00:13:02,850 --> 00:13:07,860
on adding things like is the author of

00:13:05,160 --> 00:13:09,720
this module a booking employee if they

00:13:07,860 --> 00:13:14,220
are then we definitely don't trust that

00:13:09,720 --> 00:13:17,400
code now it book it are they a booking

00:13:14,220 --> 00:13:20,460
author did have we do we actually use

00:13:17,400 --> 00:13:22,440
this as a dependency what server role

00:13:20,460 --> 00:13:24,210
because we have we segment our different

00:13:22,440 --> 00:13:26,940
servers in different roles what server

00:13:24,210 --> 00:13:28,410
role is this a dependency on so all this

00:13:26,940 --> 00:13:29,490
other meta information and there's tons

00:13:28,410 --> 00:13:31,830
of it out there I'm just giving you a

00:13:29,490 --> 00:13:34,010
few examples we can actually just shove

00:13:31,830 --> 00:13:36,540
into medicine pan and we're not even

00:13:34,010 --> 00:13:38,310
forking meta sepia do that we just put

00:13:36,540 --> 00:13:40,650
it into elasticsearch and because the

00:13:38,310 --> 00:13:43,590
API is pretty thin wrapper around it we

00:13:40,650 --> 00:13:47,070
can get it all out very easily which we

00:13:43,590 --> 00:13:49,740
can then use for packet which is Dutch

00:13:47,070 --> 00:13:53,450
for package and this is the this is a

00:13:49,740 --> 00:13:55,650
project that soy is working on which is

00:13:53,450 --> 00:13:57,540
essentially well I guess it's your

00:13:55,650 --> 00:13:59,970
reinvention of the packaging packaging

00:13:57,540 --> 00:14:03,000
as a thing but it's it's from a

00:13:59,970 --> 00:14:05,490
different point of view we wanted to be

00:14:03,000 --> 00:14:09,090
able to control the way we build and

00:14:05,490 --> 00:14:12,090
serve our dependencies the previous way

00:14:09,090 --> 00:14:14,100
was to use rpms and each module was

00:14:12,090 --> 00:14:16,500
packaged as a ninja individual rpm and

00:14:14,100 --> 00:14:18,450
we had things like when you restart your

00:14:16,500 --> 00:14:20,370
machine on dev it'll install any new

00:14:18,450 --> 00:14:22,620
modules that need to be updated and

00:14:20,370 --> 00:14:25,890
stuff like that but it was really just a

00:14:22,620 --> 00:14:27,330
large mass of goo & and it was really

00:14:25,890 --> 00:14:30,090
difficult to really know what was going

00:14:27,330 --> 00:14:33,510
on many times I would see new modules

00:14:30,090 --> 00:14:36,960
just appear and and they wouldn't be

00:14:33,510 --> 00:14:39,960
ones that I would have chosen so we we

00:14:36,960 --> 00:14:42,000
have no real control over that packet we

00:14:39,960 --> 00:14:44,490
hope will give us that control and in

00:14:42,000 --> 00:14:45,780
particular the build step of packet if

00:14:44,490 --> 00:14:48,260
you want to know more about that maybe

00:14:45,780 --> 00:14:51,120
Sawyer will give a lightning talk

00:14:48,260 --> 00:14:52,290
probably not okay either way if you want

00:14:51,120 --> 00:14:54,150
to know more about that you can talk to

00:14:52,290 --> 00:14:55,590
swear but the idea there is that we

00:14:54,150 --> 00:14:56,440
wanted to actually have a lot of control

00:14:55,590 --> 00:14:58,270
over the way we do

00:14:56,440 --> 00:15:00,580
this we don't want to have to always you

00:14:58,270 --> 00:15:02,560
know I think gene hack said in his his

00:15:00,580 --> 00:15:04,960
talk don't use system pearl you know and

00:15:02,560 --> 00:15:06,400
we don't use system pearl but we install

00:15:04,960 --> 00:15:07,870
a pearl into the system and then we

00:15:06,400 --> 00:15:09,730
install a bunch of dependencies in that

00:15:07,870 --> 00:15:11,650
so really how much better is that it's

00:15:09,730 --> 00:15:13,870
still all managed by the system we

00:15:11,650 --> 00:15:18,910
wanted to have more control over this so

00:15:13,870 --> 00:15:21,430
that's what packet does next is a static

00:15:18,910 --> 00:15:23,080
analysis so sort of what the talk was

00:15:21,430 --> 00:15:25,600
originally supposed to be entirely about

00:15:23,080 --> 00:15:27,760
but it's not this is something that

00:15:25,600 --> 00:15:29,590
that's it's it's a bit of a dark art

00:15:27,760 --> 00:15:32,800
with pearl because when you think about

00:15:29,590 --> 00:15:35,470
pearl think about pearl code meaning the

00:15:32,800 --> 00:15:38,050
what will be executed and then think

00:15:35,470 --> 00:15:39,580
about pearl source how much difference

00:15:38,050 --> 00:15:42,370
do you think there is between the two of

00:15:39,580 --> 00:15:45,040
those okay the source on disk is only a

00:15:42,370 --> 00:15:46,840
small percentage of what actually gets

00:15:45,040 --> 00:15:49,990
inflated and becomes code within the

00:15:46,840 --> 00:15:51,550
interpreter so knowing that we know that

00:15:49,990 --> 00:15:53,380
there's a limit to how much we can

00:15:51,550 --> 00:15:54,910
actually do with static analysis because

00:15:53,380 --> 00:15:56,440
I'll be damned if I'm going to try and

00:15:54,910 --> 00:15:57,970
write a fake Perl interpreter to and

00:15:56,440 --> 00:15:59,770
analyze stuff and do all that kind of

00:15:57,970 --> 00:16:01,780
stuff that's crazy pearl is just an

00:15:59,770 --> 00:16:04,270
insane machine and I don't want to go

00:16:01,780 --> 00:16:05,710
there but we can get a lot out of the

00:16:04,270 --> 00:16:07,120
patterns of the source because

00:16:05,710 --> 00:16:09,610
ultimately that's what we humans

00:16:07,120 --> 00:16:11,200
actually deal with and that's the thing

00:16:09,610 --> 00:16:13,660
that probably the change will be most

00:16:11,200 --> 00:16:17,260
meaningful to humans so we have a couple

00:16:13,660 --> 00:16:18,340
different things on this we have and I'm

00:16:17,260 --> 00:16:21,700
going to slow down a little bit because

00:16:18,340 --> 00:16:24,970
i think is going too fast we we've been

00:16:21,700 --> 00:16:28,420
running pearl critic over time so what

00:16:24,970 --> 00:16:30,820
we did and vacanti vacanti vacanti

00:16:28,420 --> 00:16:32,410
because he see you here no okay all

00:16:30,820 --> 00:16:35,710
right so one of the guys in our team

00:16:32,410 --> 00:16:37,420
vakantie he is around and he gave a talk

00:16:35,710 --> 00:16:40,000
about a rust and pearl and stuff like

00:16:37,420 --> 00:16:42,460
that he did a thing where he basically

00:16:40,000 --> 00:16:46,120
brought up he basically pulled all of

00:16:42,460 --> 00:16:48,480
the get history into Hadoop and then ran

00:16:46,120 --> 00:16:51,400
analysis over every single check out

00:16:48,480 --> 00:16:53,470
various bits of analysis both pro critic

00:16:51,400 --> 00:16:57,720
runs as well as just you know source

00:16:53,470 --> 00:17:00,850
code size subroutine size package size

00:16:57,720 --> 00:17:02,800
always the other McCabe complexity

00:17:00,850 --> 00:17:04,600
scores like all sorts of various

00:17:02,800 --> 00:17:07,179
software metrics and he just ran it over

00:17:04,600 --> 00:17:08,689
the entire half million get commits then

00:17:07,179 --> 00:17:11,059
linearized them in a

00:17:08,689 --> 00:17:14,110
reasonably close for similarly to to

00:17:11,059 --> 00:17:16,879
actual time and then we graph them

00:17:14,110 --> 00:17:18,079
unfortunately there wasn't too much that

00:17:16,879 --> 00:17:19,250
we were able to find in there because we

00:17:18,079 --> 00:17:20,569
actually know quite what we wanted to

00:17:19,250 --> 00:17:23,360
look for but there were some interesting

00:17:20,569 --> 00:17:25,220
things like for instance we could look

00:17:23,360 --> 00:17:26,600
at the growth of a subroutine and then

00:17:25,220 --> 00:17:28,339
we could look when it got refactored and

00:17:26,600 --> 00:17:30,139
then we could look at the growth of two

00:17:28,339 --> 00:17:31,940
subroutines and then we can look with

00:17:30,139 --> 00:17:33,649
them and go and so on and so forth we

00:17:31,940 --> 00:17:35,210
also graft in errors and warnings

00:17:33,649 --> 00:17:37,039
because we actually track those in our

00:17:35,210 --> 00:17:39,649
monitoring really really extensively and

00:17:37,039 --> 00:17:41,179
we actually basically track those errors

00:17:39,649 --> 00:17:44,269
and warnings so you could see sometimes

00:17:41,179 --> 00:17:47,360
the errors and warnings filling up that

00:17:44,269 --> 00:17:51,350
that that space beneath the growth of

00:17:47,360 --> 00:17:53,240
the the growth curve of the code not

00:17:51,350 --> 00:17:54,649
always though sometimes the code got

00:17:53,240 --> 00:17:56,450
really big in the errors and warnings

00:17:54,649 --> 00:17:58,850
went down you know things like that

00:17:56,450 --> 00:18:00,289
that's data that we don't know why it is

00:17:58,850 --> 00:18:02,750
but we need to start digging in and

00:18:00,289 --> 00:18:04,429
start looking um so we've been sort of

00:18:02,750 --> 00:18:09,139
weeding through that to see what we can

00:18:04,429 --> 00:18:10,700
get out of that additionally we have an

00:18:09,139 --> 00:18:12,110
engineering guide so one of the things

00:18:10,700 --> 00:18:13,610
that did come out of the quality and

00:18:12,110 --> 00:18:15,769
craftsmanship announcement was an

00:18:13,610 --> 00:18:17,659
engineering guide and the engineering

00:18:15,769 --> 00:18:20,899
guide in also true booking fashion is

00:18:17,659 --> 00:18:23,480
very vague and leaves a lot to the the

00:18:20,899 --> 00:18:25,970
author's to art to the to the developers

00:18:23,480 --> 00:18:30,740
to figure out what they want to do there

00:18:25,970 --> 00:18:33,049
were however some sort of very specific

00:18:30,740 --> 00:18:34,850
things about pearl please don't do this

00:18:33,049 --> 00:18:37,460
please do that please avoid these

00:18:34,850 --> 00:18:40,940
constructs please avoid that so it's a

00:18:37,460 --> 00:18:43,580
perfect case for a pearl critic so again

00:18:40,940 --> 00:18:45,110
this is also a Mackenzie's work we wrote

00:18:43,580 --> 00:18:48,139
what we call we're calling be critical

00:18:45,110 --> 00:18:50,960
which is a collection of pearl critic

00:18:48,139 --> 00:18:53,320
policies that are reflected are

00:18:50,960 --> 00:18:55,549
reflective of our engineering guide

00:18:53,320 --> 00:18:58,129
additionally with that we've also been

00:18:55,549 --> 00:19:00,740
collecting some bass pro critic policies

00:18:58,129 --> 00:19:03,590
that also we know basically fit in with

00:19:00,740 --> 00:19:05,960
that idea and the hope to is to build on

00:19:03,590 --> 00:19:07,789
that more and more as we begin to find

00:19:05,960 --> 00:19:09,559
some of these problems over time and

00:19:07,789 --> 00:19:10,850
also to this will probably get released

00:19:09,559 --> 00:19:14,889
open source so if you guys want to

00:19:10,850 --> 00:19:17,690
follow it you can but so along with that

00:19:14,889 --> 00:19:19,549
because one of the things about running

00:19:17,690 --> 00:19:21,330
pearl critic overbooking code is that

00:19:19,549 --> 00:19:24,720
there is a lot

00:19:21,330 --> 00:19:27,300
of noise well violations calm noise

00:19:24,720 --> 00:19:30,660
whatever you want and it's very very

00:19:27,300 --> 00:19:32,310
difficult to to tell people hey you know

00:19:30,660 --> 00:19:35,070
you should follow this pearl critic

00:19:32,310 --> 00:19:36,810
policy you should fix your code here you

00:19:35,070 --> 00:19:38,880
know before you commit please run it

00:19:36,810 --> 00:19:40,800
against these policies and then you see

00:19:38,880 --> 00:19:44,040
2,000 violations you don't know which

00:19:40,800 --> 00:19:45,810
one's yours which ones whatever so again

00:19:44,040 --> 00:19:56,420
mcentee wrote something called patch

00:19:45,810 --> 00:19:56,420
critic what do you like about it okay

00:19:57,080 --> 00:20:02,940
exactly exactly that's a perfect way to

00:19:59,460 --> 00:20:05,760
describe it when you commit something he

00:20:02,940 --> 00:20:08,160
will do his best to figure out if you

00:20:05,760 --> 00:20:11,700
introduced a new violation within your

00:20:08,160 --> 00:20:13,320
change or if you just introduce a new

00:20:11,700 --> 00:20:14,610
violation because sometimes that new

00:20:13,320 --> 00:20:16,020
violation will show up you know six

00:20:14,610 --> 00:20:17,880
thousand lines below where you actually

00:20:16,020 --> 00:20:20,040
made the change but it will attempt to

00:20:17,880 --> 00:20:21,840
cut through all the noise to give you

00:20:20,040 --> 00:20:23,820
the right signal to prevent you from

00:20:21,840 --> 00:20:26,340
making that that change before you

00:20:23,820 --> 00:20:28,290
actually start committing it so this is

00:20:26,340 --> 00:20:29,730
actually a very very neat tool we're

00:20:28,290 --> 00:20:31,910
going to be refining this one soon and

00:20:29,730 --> 00:20:35,310
probably putting it out on Sipan as well

00:20:31,910 --> 00:20:37,740
and i highly recommend if you do any

00:20:35,310 --> 00:20:39,060
sort of procredit code review test this

00:20:37,740 --> 00:20:42,540
thing out because i think it could be

00:20:39,060 --> 00:20:44,910
very useful um additionally at booking

00:20:42,540 --> 00:20:48,030
we have people with you know spare

00:20:44,910 --> 00:20:53,130
cycles every organization will have

00:20:48,030 --> 00:20:55,200
people lit every organization will well

00:20:53,130 --> 00:20:57,150
you know you'll have some idle time you

00:20:55,200 --> 00:20:58,500
know I've got an hour before the next

00:20:57,150 --> 00:21:00,510
meeting I can't actually sit down and

00:20:58,500 --> 00:21:02,970
write code and do anything I could just

00:21:00,510 --> 00:21:06,500
go through emails watch a YouTube video

00:21:02,970 --> 00:21:08,550
whatever i could just waste an hour or

00:21:06,500 --> 00:21:09,720
and this is something hasn't been

00:21:08,550 --> 00:21:13,260
released yet i'm working on it right now

00:21:09,720 --> 00:21:16,200
it's a bun github or you can fix some

00:21:13,260 --> 00:21:18,810
violations so what this will be is a way

00:21:16,200 --> 00:21:21,750
to basically start a session on a code

00:21:18,810 --> 00:21:24,870
base and record all the files that you

00:21:21,750 --> 00:21:26,670
want to critique then you can begin to

00:21:24,870 --> 00:21:28,590
just pick up where you left off and

00:21:26,670 --> 00:21:30,810
start going through and fixing them one

00:21:28,590 --> 00:21:31,420
at a time you make a fix you stop you

00:21:30,810 --> 00:21:33,580
commit it

00:21:31,420 --> 00:21:34,810
you you both you could push later you

00:21:33,580 --> 00:21:37,060
push now it doesn't matter it's up to

00:21:34,810 --> 00:21:40,450
you but you build a series of commits

00:21:37,060 --> 00:21:44,110
just fixing issues the day before I left

00:21:40,450 --> 00:21:47,170
to come here I may I think was like 75

00:21:44,110 --> 00:21:49,420
commits all of just doing one single

00:21:47,170 --> 00:21:52,090
pearl critic policy which was unused

00:21:49,420 --> 00:21:53,860
variables unused variables are really

00:21:52,090 --> 00:21:55,930
hard to track down and pro critic

00:21:53,860 --> 00:21:57,940
doesn't do a perfect job at it but you

00:21:55,930 --> 00:21:59,230
combine that with a with a human just

00:21:57,940 --> 00:22:01,990
you know doing some search and replace

00:21:59,230 --> 00:22:03,940
in the editor and you can get them 75

00:22:01,990 --> 00:22:05,590
unused variables just gone and it just

00:22:03,940 --> 00:22:06,880
took me a couple hours of just screwing

00:22:05,590 --> 00:22:09,070
around waiting for a meeting to come

00:22:06,880 --> 00:22:11,710
well while I was just basically testing

00:22:09,070 --> 00:22:13,690
my app um this is a good way to just

00:22:11,710 --> 00:22:16,360
this is death by a thousand cuts or

00:22:13,690 --> 00:22:18,370
improvement by a thousand cuts so each

00:22:16,360 --> 00:22:20,650
little one just and if I can get five

00:22:18,370 --> 00:22:23,140
people doing this and we're committing

00:22:20,650 --> 00:22:24,910
you know 50 commits every couple of days

00:22:23,140 --> 00:22:27,220
we're going to wipe all these violations

00:22:24,910 --> 00:22:28,720
out and not too long and it's also a

00:22:27,220 --> 00:22:30,940
little fun I put some coloring in it and

00:22:28,720 --> 00:22:32,440
stuff like that it's kind of um there's

00:22:30,940 --> 00:22:34,120
a cal that tells you when you're done

00:22:32,440 --> 00:22:36,040
and all this kind of stuff like that so

00:22:34,120 --> 00:22:39,220
maybe I'll have a little ASCII duck or

00:22:36,040 --> 00:22:41,080
something on them so anyway that but the

00:22:39,220 --> 00:22:42,880
idea here is you know you want to be

00:22:41,080 --> 00:22:45,460
able to use use the computer to help you

00:22:42,880 --> 00:22:50,290
look at your code and then use your own

00:22:45,460 --> 00:22:52,000
spare cycles to to improve it we're also

00:22:50,290 --> 00:22:54,100
doing dynamic analysis because like I

00:22:52,000 --> 00:22:55,450
said the the difference between the code

00:22:54,100 --> 00:22:57,190
that's actually in the interpreter and

00:22:55,450 --> 00:23:01,000
ready to run and the difference between

00:22:57,190 --> 00:23:02,860
the the source that's on disk is very

00:23:01,000 --> 00:23:04,060
different how many of you saw gonzales

00:23:02,860 --> 00:23:07,000
talk about the velcro cover the other

00:23:04,060 --> 00:23:09,520
day okay i highly recommend you all

00:23:07,000 --> 00:23:11,830
watch it on youtube it's a very very

00:23:09,520 --> 00:23:13,270
cool tool and since not many people saw

00:23:11,830 --> 00:23:15,490
it i'm going to repeat some of the stuff

00:23:13,270 --> 00:23:16,750
that you said so what the veldt quick

00:23:15,490 --> 00:23:20,620
how many of you are familiar with the

00:23:16,750 --> 00:23:22,300
veil cover okay everybody good so devel

00:23:20,620 --> 00:23:24,100
cover as we all know is a coverage tool

00:23:22,300 --> 00:23:26,470
it tells you how many times each line of

00:23:24,100 --> 00:23:29,770
code was executed if each lon was

00:23:26,470 --> 00:23:32,470
executed etc etc etc we don't actually

00:23:29,770 --> 00:23:34,390
care how many times you executed the

00:23:32,470 --> 00:23:37,300
line of code because we get millions of

00:23:34,390 --> 00:23:39,550
hits these numbers are unimportant we

00:23:37,300 --> 00:23:41,200
just care if you did so what the veldt

00:23:39,550 --> 00:23:44,900
quick cover does is essentially hook

00:23:41,200 --> 00:23:46,250
into the opcode that is represented by a

00:23:44,900 --> 00:23:48,830
semicolon so statement terminator

00:23:46,250 --> 00:23:52,790
essentially and it hooks into that and

00:23:48,830 --> 00:23:55,190
the first time it sees that you that you

00:23:52,790 --> 00:23:57,680
run the code it makes a mark and then it

00:23:55,190 --> 00:24:00,110
replaces itself with the original opcode

00:23:57,680 --> 00:24:02,240
so the overhead on this is just about

00:24:00,110 --> 00:24:03,980
nothing you can run this in production

00:24:02,240 --> 00:24:05,600
on every single one of your boxes and

00:24:03,980 --> 00:24:07,130
with the exception of the fact that it

00:24:05,600 --> 00:24:08,930
takes about a hundred another hundred

00:24:07,130 --> 00:24:11,270
megabytes yeah 100 megabytes of memory

00:24:08,930 --> 00:24:17,840
which by the way is pretty cheap I hold

00:24:11,270 --> 00:24:20,060
on yeah I got a quarter so 100 megabits

00:24:17,840 --> 00:24:21,650
is pretty cheap and and so you can run

00:24:20,060 --> 00:24:24,110
this on all your machines and then know

00:24:21,650 --> 00:24:25,460
is this code run is this code not run

00:24:24,110 --> 00:24:27,680
because that's actually a really hard

00:24:25,460 --> 00:24:30,530
question to answer and and we won't

00:24:27,680 --> 00:24:32,120
actually be able to answer it get inside

00:24:30,530 --> 00:24:34,310
we won't actually be able to answer it

00:24:32,120 --> 00:24:37,940
fully because some code gets run every

00:24:34,310 --> 00:24:39,950
you know six months eight months once a

00:24:37,940 --> 00:24:42,320
year okay we won't know about that stuff

00:24:39,950 --> 00:24:44,750
but we will be able to get a good

00:24:42,320 --> 00:24:46,070
picture of it and throw that in with

00:24:44,750 --> 00:24:47,840
some other data and maybe we can

00:24:46,070 --> 00:24:50,480
actually get a better a knack you an

00:24:47,840 --> 00:24:53,330
actual accurate picture of it we also i

00:24:50,480 --> 00:24:55,490
recently added a patch to that that it

00:24:53,330 --> 00:24:58,040
actually measures which or it marks

00:24:55,490 --> 00:24:59,090
which compile phase things were running

00:24:58,040 --> 00:25:01,610
because one of the things that we found

00:24:59,090 --> 00:25:04,250
when we first ran this data is Wow every

00:25:01,610 --> 00:25:06,740
every file is used because it all

00:25:04,250 --> 00:25:08,390
compiles use strict use warnings those

00:25:06,740 --> 00:25:10,280
lines are done those lines are executed

00:25:08,390 --> 00:25:12,440
but they're actually unimportant lines

00:25:10,280 --> 00:25:14,000
to us so anything that's in begin time

00:25:12,440 --> 00:25:16,220
we know is done in our preload and

00:25:14,000 --> 00:25:17,660
anything that's in runtime is stuff we

00:25:16,220 --> 00:25:20,480
have to care about that's code that we

00:25:17,660 --> 00:25:21,890
actually know that's running and it does

00:25:20,480 --> 00:25:23,240
produce some reports we're working on

00:25:21,890 --> 00:25:24,740
improving some of the reports we might

00:25:23,240 --> 00:25:27,740
augment them a little bit with some ppi

00:25:24,740 --> 00:25:29,900
analysis stuff like that and also one of

00:25:27,740 --> 00:25:33,080
the tricky problems of this too is code

00:25:29,900 --> 00:25:35,750
changes so coverage information about

00:25:33,080 --> 00:25:39,020
code doesn't really go between changes

00:25:35,750 --> 00:25:41,570
so we have we do have an aggregation

00:25:39,020 --> 00:25:43,490
tool that will attempt to find the

00:25:41,570 --> 00:25:46,670
longest continuous run of no changes in

00:25:43,490 --> 00:25:48,590
a file and aggregate everything up for

00:25:46,670 --> 00:25:50,780
that so it'll go from one get tagged to

00:25:48,590 --> 00:25:53,750
another get tagged it's that one

00:25:50,780 --> 00:25:55,610
released that so that's up okay that's

00:25:53,750 --> 00:25:56,990
not release but yep yeah we're using

00:25:55,610 --> 00:25:57,680
internally but that will eventually get

00:25:56,990 --> 00:26:00,410
released

00:25:57,680 --> 00:26:02,750
out into the wild as well you know and

00:26:00,410 --> 00:26:05,900
and maybe and I'm not really sure this

00:26:02,750 --> 00:26:07,940
is a big maybe maybe we can actually do

00:26:05,900 --> 00:26:09,710
that stuff across get tags maybe we can

00:26:07,940 --> 00:26:11,900
actually break this down to a level of

00:26:09,710 --> 00:26:13,490
just per sub routine if the subroutine

00:26:11,900 --> 00:26:15,710
hasn't changed we can probably just use

00:26:13,490 --> 00:26:17,090
that information there require a little

00:26:15,710 --> 00:26:19,760
bit of guessing and stuff like that

00:26:17,090 --> 00:26:22,520
which might decrease the confidence in

00:26:19,760 --> 00:26:24,530
it but you know what do you do again

00:26:22,520 --> 00:26:27,590
these are decision augmentation tools

00:26:24,530 --> 00:26:30,500
not decision-making tools these are ways

00:26:27,590 --> 00:26:32,360
to get you information so we're also

00:26:30,500 --> 00:26:35,690
doing that with our HTML template

00:26:32,360 --> 00:26:38,930
compiler which funnily enough is a fork

00:26:35,690 --> 00:26:41,930
of HTML template yay who uses that

00:26:38,930 --> 00:26:43,640
anymore but actually it's a totally

00:26:41,930 --> 00:26:45,230
different it looks like HTML template

00:26:43,640 --> 00:26:48,620
but it's it's a totally rewritten thing

00:26:45,230 --> 00:26:50,750
it's fast as all get out and it pre

00:26:48,620 --> 00:26:52,400
compiles a lot of stuff like that so we

00:26:50,750 --> 00:26:54,320
actually somebody went and wrote a

00:26:52,400 --> 00:26:57,140
coverage tool for that and fortunately

00:26:54,320 --> 00:26:59,960
for that one if it gets compiled we're

00:26:57,140 --> 00:27:02,540
almost certainly using it or I'm sorry

00:26:59,960 --> 00:27:03,560
wait yeah if it gets compiled will most

00:27:02,540 --> 00:27:05,300
certainly using it if it doesn't get

00:27:03,560 --> 00:27:06,740
compiled we're not so it's a little bit

00:27:05,300 --> 00:27:09,200
easier there's a little bit less

00:27:06,740 --> 00:27:11,210
trickiness in this one but it's very

00:27:09,200 --> 00:27:14,480
very valuable very valuable information

00:27:11,210 --> 00:27:16,520
and I believe he managed to figure out

00:27:14,480 --> 00:27:18,620
and then get rid of like forty percent

00:27:16,520 --> 00:27:19,730
of the templates in the first run they

00:27:18,620 --> 00:27:21,590
were just there they just hadn't been

00:27:19,730 --> 00:27:24,500
cleaned up you know people just hadn't

00:27:21,590 --> 00:27:26,660
gotten around to it so these tools

00:27:24,500 --> 00:27:29,360
though help you get rid of code because

00:27:26,660 --> 00:27:32,630
the best best kind of code code writing

00:27:29,360 --> 00:27:33,980
is when you delete okay and the less

00:27:32,630 --> 00:27:36,050
code you have the more you have to

00:27:33,980 --> 00:27:38,540
understand as well so the two of those

00:27:36,050 --> 00:27:39,890
really work for that in addition we also

00:27:38,540 --> 00:27:41,900
have something called devel stat

00:27:39,890 --> 00:27:46,130
profiler which I recommend you all take

00:27:41,900 --> 00:27:47,810
a look at it's a statistical profiler so

00:27:46,130 --> 00:27:49,190
it's a sampling profiler so it's just

00:27:47,810 --> 00:27:51,740
based you can run this also in

00:27:49,190 --> 00:27:53,780
production but it just grabs information

00:27:51,740 --> 00:27:56,180
over time and attempts to aggregate and

00:27:53,780 --> 00:27:57,470
merge it all together I have to admit I

00:27:56,180 --> 00:27:59,210
don't really know a whole heck of a lot

00:27:57,470 --> 00:28:00,860
about this but I'm sure you could ask

00:27:59,210 --> 00:28:03,110
one other booking any other booking

00:28:00,860 --> 00:28:05,060
people they might know on that but

00:28:03,110 --> 00:28:07,470
that's also important because you do

00:28:05,060 --> 00:28:08,370
want to be able to profile your code

00:28:07,470 --> 00:28:13,230
you want to be able to profile your code

00:28:08,370 --> 00:28:18,750
crash so and I am running very fast on

00:28:13,230 --> 00:28:20,460
this summer's yeah tooling how many of

00:28:18,750 --> 00:28:23,100
you have worked in language that isn't

00:28:20,460 --> 00:28:29,520
pearl that had some really nice tooling

00:28:23,100 --> 00:28:31,289
with it yep don't you miss it I'm not

00:28:29,520 --> 00:28:34,409
even a big Microsoft fan but I love

00:28:31,289 --> 00:28:36,690
visual studio and I love resharper and I

00:28:34,409 --> 00:28:39,030
love just taking the mental vacation of

00:28:36,690 --> 00:28:41,429
writing code with resharper and visual

00:28:39,030 --> 00:28:44,039
studio and asp.net I don't have to think

00:28:41,429 --> 00:28:47,100
I just do it the microsoft way but even

00:28:44,039 --> 00:28:49,260
that aside the the tooling support is

00:28:47,100 --> 00:28:51,510
huge we as humans can only keep so much

00:28:49,260 --> 00:28:55,980
in our head so like in line

00:28:51,510 --> 00:28:57,690
documentation autocompletes you know all

00:28:55,980 --> 00:28:59,190
this kind of stuff is really hugely

00:28:57,690 --> 00:29:02,309
helpful and it can really really

00:28:59,190 --> 00:29:04,980
increase the velocity and Pearl has

00:29:02,309 --> 00:29:06,510
shitty support for this really shitty

00:29:04,980 --> 00:29:08,700
support for this there are a few tools

00:29:06,510 --> 00:29:11,690
out there these IntelliJ which is very

00:29:08,700 --> 00:29:14,370
very nice but you have to run eclipse

00:29:11,690 --> 00:29:16,020
there are vim plugins and stuff like

00:29:14,370 --> 00:29:18,270
that as well but then you have to run

00:29:16,020 --> 00:29:20,100
BIM and then there's a mac stuff because

00:29:18,270 --> 00:29:22,230
Emacs is an operating system and why not

00:29:20,100 --> 00:29:24,330
have everything in there so but then you

00:29:22,230 --> 00:29:27,600
have to run emacs now we don't dictate

00:29:24,330 --> 00:29:29,730
which editor is used so we've been

00:29:27,600 --> 00:29:31,650
looking into a number of tools that have

00:29:29,730 --> 00:29:34,320
been appearing lately that attempt to

00:29:31,650 --> 00:29:36,059
abstract this so there there's a few

00:29:34,320 --> 00:29:38,850
tools out there once called source lib

00:29:36,059 --> 00:29:41,909
SRC lib which last I checked didn't

00:29:38,850 --> 00:29:44,340
actually build so who knows another one

00:29:41,909 --> 00:29:46,080
called I think kite or or something

00:29:44,340 --> 00:29:47,700
like that which basically is the same

00:29:46,080 --> 00:29:49,799
thing and what these things proposed to

00:29:47,700 --> 00:29:54,360
do is they provide plug-ins for all your

00:29:49,799 --> 00:30:00,090
popular editors Emacs them Adam sublime

00:29:54,360 --> 00:30:05,039
text text made you name it whatever what

00:30:00,090 --> 00:30:10,100
meh no pico yeah ed ed ed said like Cat

00:30:05,039 --> 00:30:10,100
Cat Cat yep cats awesome dude

00:30:10,160 --> 00:30:21,059
so butterflies okay okay so so we've

00:30:19,860 --> 00:30:24,900
been we've been exploring these tools

00:30:21,059 --> 00:30:26,190
and basically what you do is you extract

00:30:24,900 --> 00:30:29,429
all your information out of your pro

00:30:26,190 --> 00:30:31,860
code by analyzing it stuff it into bazy

00:30:29,429 --> 00:30:34,920
JSON files and stuff like that on disk

00:30:31,860 --> 00:30:37,320
and then these plugins take over now we

00:30:34,920 --> 00:30:38,700
could have tried to enforce editors or

00:30:37,320 --> 00:30:40,440
something like that and write one plugin

00:30:38,700 --> 00:30:42,120
for this and everybody must use Eclipse

00:30:40,440 --> 00:30:43,950
and everybody's used IntelliJ but that

00:30:42,120 --> 00:30:46,230
just doesn't fly with how we work at

00:30:43,950 --> 00:30:50,010
booking so we're exploring these other

00:30:46,230 --> 00:30:52,290
ideas and you know it works quite well

00:30:50,010 --> 00:30:53,640
because it's just basically extracting a

00:30:52,290 --> 00:30:56,330
bunch of stuff from pro code which we

00:30:53,640 --> 00:30:59,190
can even use in other places as well

00:30:56,330 --> 00:31:01,740
we've also been giving the look into web

00:30:59,190 --> 00:31:06,390
i des hommes and actually sort of

00:31:01,740 --> 00:31:10,049
playing with one on our own at work web

00:31:06,390 --> 00:31:11,549
ids you know they seem kind of silly and

00:31:10,049 --> 00:31:14,490
childish but there's some of them that

00:31:11,549 --> 00:31:16,440
are actually getting quite advanced and

00:31:14,490 --> 00:31:19,890
by web ids I don't mean it's always in a

00:31:16,440 --> 00:31:21,540
browser for instance nuclei how many of

00:31:19,890 --> 00:31:24,510
you know about nuclei to anybody anybody

00:31:21,540 --> 00:31:26,610
know one person okay so nucleoid is like

00:31:24,510 --> 00:31:29,400
Facebook's IDE because apparently you

00:31:26,610 --> 00:31:32,220
can't check out their mono repo before

00:31:29,400 --> 00:31:35,130
the heat death of the universe so you

00:31:32,220 --> 00:31:38,640
they basically created this remote IDE

00:31:35,130 --> 00:31:41,490
it's all written in node whatever but it

00:31:38,640 --> 00:31:43,440
it basically allows you to have a bunch

00:31:41,490 --> 00:31:45,510
of stuff on the server and your client

00:31:43,440 --> 00:31:48,870
locally and it just communicates back

00:31:45,510 --> 00:31:51,059
and forth it's also highly pluggable and

00:31:48,870 --> 00:31:53,460
completely open source so we're

00:31:51,059 --> 00:31:54,840
beginning to explore that because you

00:31:53,460 --> 00:31:58,380
know maybe we could standardize on

00:31:54,840 --> 00:32:00,960
something but maybe we could I don't

00:31:58,380 --> 00:32:03,120
know we'll see um but tools like that

00:32:00,960 --> 00:32:04,380
are very very interesting and and

00:32:03,120 --> 00:32:06,240
especially for booking because we do

00:32:04,380 --> 00:32:08,490
have a rather large repository we also

00:32:06,240 --> 00:32:11,070
have nobody develops on their laptop

00:32:08,490 --> 00:32:14,940
because nobody has terabytes of room for

00:32:11,070 --> 00:32:17,160
the databases but people so we have a

00:32:14,940 --> 00:32:18,990
kvm infrastructure and that's how we

00:32:17,160 --> 00:32:20,950
work off of that well if you could run a

00:32:18,990 --> 00:32:23,049
nucleotide server on your kvm an decline

00:32:20,950 --> 00:32:25,809
and on your machine on your laptop that

00:32:23,049 --> 00:32:27,100
might be an interesting setup but only

00:32:25,809 --> 00:32:28,720
if it's supported pearl of course

00:32:27,100 --> 00:32:30,669
because right now it all really supports

00:32:28,720 --> 00:32:33,010
this javascript and PHP and hack or

00:32:30,669 --> 00:32:34,450
whatever that facebook thing is so

00:32:33,010 --> 00:32:35,919
anyway we're beginning to look into a

00:32:34,450 --> 00:32:37,570
lot of these things because tooling is

00:32:35,919 --> 00:32:41,049
actually a very very important thing and

00:32:37,570 --> 00:32:43,690
especially we have so few pro

00:32:41,049 --> 00:32:46,570
programmers anymore and they all come

00:32:43,690 --> 00:32:49,840
from a land of nice tools and they all

00:32:46,570 --> 00:32:52,000
want nice tools and and they're all just

00:32:49,840 --> 00:32:54,789
sort of flapping together whatever they

00:32:52,000 --> 00:32:59,230
can to get there so we want to really

00:32:54,789 --> 00:33:02,289
boost up the support of that we're also

00:32:59,230 --> 00:33:03,610
looking at tools like get lab um I'm not

00:33:02,289 --> 00:33:05,649
entirely sure this is going to work out

00:33:03,610 --> 00:33:08,409
we've been traditionally against code

00:33:05,649 --> 00:33:10,630
review except for our PCI stuff because

00:33:08,409 --> 00:33:12,850
we have to do it there but a lot of

00:33:10,630 --> 00:33:14,440
people are asking about it so tools for

00:33:12,850 --> 00:33:17,649
that and and this is one of those things

00:33:14,440 --> 00:33:18,940
it's like code review tools and some are

00:33:17,649 --> 00:33:21,070
good some are bad a lot of them want to

00:33:18,940 --> 00:33:22,630
enforce workflow stuff like that get lab

00:33:21,070 --> 00:33:23,679
doesn't do that so that's why we're

00:33:22,630 --> 00:33:27,340
we're sort of leaning in that direction

00:33:23,679 --> 00:33:29,470
and we're exploring that and this is

00:33:27,340 --> 00:33:31,870
this is all comes down to repository

00:33:29,470 --> 00:33:33,909
organization which is also something

00:33:31,870 --> 00:33:36,850
that's really really critical we have a

00:33:33,909 --> 00:33:39,039
mono repo which means we have well we

00:33:36,850 --> 00:33:41,830
don't have a monterrey cool we have 420

00:33:39,039 --> 00:33:44,380
repos but one is the big one and that

00:33:41,830 --> 00:33:45,760
one big one basically there's a Lib

00:33:44,380 --> 00:33:47,409
directory in it and it's got a bunch of

00:33:45,760 --> 00:33:50,200
code under there this makes it very hard

00:33:47,409 --> 00:33:51,279
to discover code you know it's that

00:33:50,200 --> 00:33:52,870
three and a half million lines of code

00:33:51,279 --> 00:33:54,730
it's very hard to discover the code in

00:33:52,870 --> 00:33:56,260
there it's very hard to understand what

00:33:54,730 --> 00:33:58,990
these things are we also have a lot of

00:33:56,260 --> 00:34:01,600
non-english speakers whose naming

00:33:58,990 --> 00:34:03,460
conventions sometimes are good sometimes

00:34:01,600 --> 00:34:05,710
they're bad sometimes they're completely

00:34:03,460 --> 00:34:08,440
horrible so they're not necessarily

00:34:05,710 --> 00:34:10,089
getting and I'm no I'm no good at coming

00:34:08,440 --> 00:34:15,339
up with names like moose what the

00:34:10,089 --> 00:34:17,319
is that so like but this is important

00:34:15,339 --> 00:34:20,349
discoverability is super important and

00:34:17,319 --> 00:34:21,849
organizing a repo in a sensible way can

00:34:20,349 --> 00:34:24,369
make a huge amount of difference this is

00:34:21,849 --> 00:34:27,040
one of those gentle nudges that I see if

00:34:24,369 --> 00:34:29,740
we can just gently nudge the shape of

00:34:27,040 --> 00:34:31,629
that repository we can build a better

00:34:29,740 --> 00:34:32,879
tomorrow that will happen years and

00:34:31,629 --> 00:34:34,230
years and years from now but

00:34:32,879 --> 00:34:38,009
hopefully we can guide them towards a

00:34:34,230 --> 00:34:39,720
better tomorrow um we also have a really

00:34:38,009 --> 00:34:41,849
interesting tool how many of you use

00:34:39,720 --> 00:34:44,730
code google com back in the day before

00:34:41,849 --> 00:34:46,440
it was gone okay so they open source the

00:34:44,730 --> 00:34:48,389
search component of that I don't know if

00:34:46,440 --> 00:34:52,259
you all know that and I think it's just

00:34:48,389 --> 00:34:53,849
a go Damon at this point and it you can

00:34:52,259 --> 00:34:56,039
point it at all your repositories it

00:34:53,849 --> 00:34:57,630
indexes the crap out of them and then

00:34:56,039 --> 00:35:00,029
you get a google like interface that

00:34:57,630 --> 00:35:02,069
basically allows you to search and it

00:35:00,029 --> 00:35:05,759
will find it so it's a get grep but

00:35:02,069 --> 00:35:07,440
across 420 repositories okay it's huge

00:35:05,759 --> 00:35:11,519
it's useful actually I don't feel about

00:35:07,440 --> 00:35:13,140
420 in there but anyway it's really

00:35:11,519 --> 00:35:15,240
really useful right now it's just a

00:35:13,140 --> 00:35:16,859
standalone thing we intend to actually

00:35:15,240 --> 00:35:20,190
connect it with some of the other stuff

00:35:16,859 --> 00:35:22,500
and we're going to do that with a a

00:35:20,190 --> 00:35:24,779
module that I've been working on as well

00:35:22,500 --> 00:35:28,109
called source tooling which is basically

00:35:24,779 --> 00:35:31,140
just a random collection of tools to

00:35:28,109 --> 00:35:33,569
extract data out of pro code and extract

00:35:31,140 --> 00:35:36,720
data out of get related to pro code turn

00:35:33,569 --> 00:35:38,339
it into JSON structures and either give

00:35:36,720 --> 00:35:41,099
you command line tools to pipe that

00:35:38,339 --> 00:35:45,329
stuff back and forth or a web service

00:35:41,099 --> 00:35:47,099
that will connect it it's very very raw

00:35:45,329 --> 00:35:48,630
these days but if you want to take a

00:35:47,099 --> 00:35:51,930
look and are interested in its up on

00:35:48,630 --> 00:35:53,759
github and finally all of this comes

00:35:51,930 --> 00:35:56,009
together in something that we're going

00:35:53,759 --> 00:35:59,430
to call code booking.com which is going

00:35:56,009 --> 00:36:01,970
to be the internal portal the internal

00:35:59,430 --> 00:36:06,180
enterprise portal to all our code needs

00:36:01,970 --> 00:36:08,099
and this seems simple and stupidly

00:36:06,180 --> 00:36:10,289
simple but you know what this will

00:36:08,099 --> 00:36:13,079
probably be one of the most important

00:36:10,289 --> 00:36:14,849
parts of this in well my prediction is

00:36:13,079 --> 00:36:17,009
the most important part because

00:36:14,849 --> 00:36:19,710
everything will be in one place and

00:36:17,009 --> 00:36:21,329
it'll be organized and you will never be

00:36:19,710 --> 00:36:23,609
more than like one or two clicks away

00:36:21,329 --> 00:36:25,950
from all these tools and all this

00:36:23,609 --> 00:36:27,750
information okay and that's one of the

00:36:25,950 --> 00:36:33,890
things we grew as a company so

00:36:27,750 --> 00:36:33,890
organically so quickly sorry

00:36:34,820 --> 00:36:39,840
we grew as a company so quickly and so

00:36:37,320 --> 00:36:42,030
organically that we didn't have time to

00:36:39,840 --> 00:36:43,980
step back and make sure that all this

00:36:42,030 --> 00:36:46,290
kind of stuff was organized I mean we

00:36:43,980 --> 00:36:48,870
had a wiki but yeah we had a wiki you

00:36:46,290 --> 00:36:54,080
know what that means and its confluence

00:36:48,870 --> 00:36:57,030
as well so yeah John yeah it's bad so

00:36:54,080 --> 00:37:00,620
I'm sorry Liz am i causing to me this is

00:36:57,030 --> 00:37:04,110
like post-traumatic stress or something

00:37:00,620 --> 00:37:06,240
so so you know this nobody had time to

00:37:04,110 --> 00:37:07,500
organize this stuff so that's going to

00:37:06,240 --> 00:37:10,650
be one of our main goals because

00:37:07,500 --> 00:37:12,480
discoverability of what you have and the

00:37:10,650 --> 00:37:14,160
tools that are available is the most

00:37:12,480 --> 00:37:15,300
important thing about tools because if

00:37:14,160 --> 00:37:17,100
people don't know they're there they're

00:37:15,300 --> 00:37:20,640
not going to use them so it's a really

00:37:17,100 --> 00:37:23,210
really simple idea so anyway that is

00:37:20,640 --> 00:37:26,040
sort of the overview of the tools um

00:37:23,210 --> 00:37:29,310
because uh booking did pay for me to

00:37:26,040 --> 00:37:33,570
come here I do have to I do have to pull

00:37:29,310 --> 00:37:35,310
some recruitment here so if if you would

00:37:33,570 --> 00:37:39,360
if you find anything that I've said in

00:37:35,310 --> 00:37:41,640
the last 40 minutes interesting at all

00:37:39,360 --> 00:37:43,260
you you can help like I said every

00:37:41,640 --> 00:37:45,660
single thing that we're going to do is

00:37:43,260 --> 00:37:48,450
going to the open sourced over my dead

00:37:45,660 --> 00:37:50,340
body we will keep it inside I want this

00:37:48,450 --> 00:37:52,320
all out I want this open source because

00:37:50,340 --> 00:37:56,730
it's going to benefit you guys and also

00:37:52,320 --> 00:37:58,050
you guys can maybe help us so you can

00:37:56,730 --> 00:37:59,220
contribute open source but it's a lot

00:37:58,050 --> 00:38:01,890
more fun you get a little sailor hat

00:37:59,220 --> 00:38:04,920
like that okay this is a this is our

00:38:01,890 --> 00:38:07,350
annual party we fly in about 8,500

00:38:04,920 --> 00:38:09,980
people from across the globe and we have

00:38:07,350 --> 00:38:12,870
we have a one-week a sort of a

00:38:09,980 --> 00:38:14,600
conference etc etc but the fun part is

00:38:12,870 --> 00:38:17,970
it is a huge party at the end of it

00:38:14,600 --> 00:38:23,060
really a lot of fun so yes come explore

00:38:17,970 --> 00:38:26,060
with us at booking calm um so questions

00:38:23,060 --> 00:38:26,060
Chris

00:38:27,809 --> 00:38:34,650
because it was the best one I could find

00:38:31,290 --> 00:38:34,650
ok questions

00:38:44,940 --> 00:38:50,190
so so actually so we asked if we had a

00:38:47,490 --> 00:38:53,069
perfect PP PP I and by asking that

00:38:50,190 --> 00:38:56,430
question I assume you mean PPI kind of

00:38:53,069 --> 00:38:58,349
sucks which it does which it does the pp

00:38:56,430 --> 00:39:00,780
house PPI in my opinion has one major

00:38:58,349 --> 00:39:02,940
major deficiency it builds this nice

00:39:00,780 --> 00:39:04,560
little model for you and when it runs

00:39:02,940 --> 00:39:06,810
into a complicated expression it gives

00:39:04,560 --> 00:39:08,400
you a list of tokens and you have no

00:39:06,810 --> 00:39:09,420
idea whether what's the right hand side

00:39:08,400 --> 00:39:12,210
what's the left hand side of this

00:39:09,420 --> 00:39:15,930
expression it gets very messy so PPI has

00:39:12,210 --> 00:39:17,700
a few deficiencies we actually sort of

00:39:15,930 --> 00:39:19,829
on a bet sort of on a challenge one of

00:39:17,700 --> 00:39:22,319
the guys in my team wrote a pearl parser

00:39:19,829 --> 00:39:23,790
in typescript which by the way is a very

00:39:22,319 --> 00:39:25,890
nice language I recommend everybody take

00:39:23,790 --> 00:39:28,140
a look at it but he ran into the same

00:39:25,890 --> 00:39:29,940
problem figuring out all that stuff but

00:39:28,140 --> 00:39:32,119
actually I wouldn't use it in an editor

00:39:29,940 --> 00:39:35,280
I would use it for semantic patching

00:39:32,119 --> 00:39:38,579
this is one of the things that Google

00:39:35,280 --> 00:39:41,010
does with some other C++ code they they

00:39:38,579 --> 00:39:43,589
basically rewrite the essentially the

00:39:41,010 --> 00:39:46,200
ast the abstracts abstract syntax tree

00:39:43,589 --> 00:39:48,810
and then right there changes this allows

00:39:46,200 --> 00:39:52,109
them to do massive across-the-board API

00:39:48,810 --> 00:39:54,780
changes very very easily I would love to

00:39:52,109 --> 00:39:56,880
have that for Pearl without a good ppi

00:39:54,780 --> 00:39:58,349
and without a good parser probably not

00:39:56,880 --> 00:40:00,690
going to have that but who knows that

00:39:58,349 --> 00:40:02,970
may end up being what we do but yeah if

00:40:00,690 --> 00:40:04,050
if I could it would be doing semantic

00:40:02,970 --> 00:40:06,660
patching because then I could actually

00:40:04,050 --> 00:40:11,900
fix all those Pro critic policies in one

00:40:06,660 --> 00:40:11,900
flow so but anyway man in the back

00:40:13,200 --> 00:40:18,560
a new packaging system and one of the

00:40:15,660 --> 00:40:18,560
reasons you gave was

00:40:27,980 --> 00:40:34,350
so it's not so much that they were they

00:40:31,109 --> 00:40:36,150
were showing up by surprise you know you

00:40:34,350 --> 00:40:38,400
you had to actually commit into a

00:40:36,150 --> 00:40:45,950
basically a giant yamo file that I don't

00:40:38,400 --> 00:40:48,690
believe is actually proper llamo right

00:40:45,950 --> 00:40:50,040
it's valid for some mo parsers it's a

00:40:48,690 --> 00:40:51,660
big giant yamo file and you just

00:40:50,040 --> 00:40:54,750
basically add your dependency in there

00:40:51,660 --> 00:40:57,480
and the packaging the RPM packaging team

00:40:54,750 --> 00:40:59,970
is actually the team in Singapore so it

00:40:57,480 --> 00:41:01,980
works out quite well you you you submit

00:40:59,970 --> 00:41:03,420
a ticket at the end of the day you come

00:41:01,980 --> 00:41:05,820
in the next morning and usually Joelle

00:41:03,420 --> 00:41:07,950
has packaged it you have an RPM and then

00:41:05,820 --> 00:41:09,869
it'll just install and one of the ideas

00:41:07,950 --> 00:41:12,000
was when you continue to restart your

00:41:09,869 --> 00:41:13,650
machine during development we want to

00:41:12,000 --> 00:41:16,290
keep you as up-to-date as possible so we

00:41:13,650 --> 00:41:19,230
will install new versions that when you

00:41:16,290 --> 00:41:23,040
get that new yamo file with your you

00:41:19,230 --> 00:41:26,160
know the latest get pull it will install

00:41:23,040 --> 00:41:28,410
things for you if necessary there is a

00:41:26,160 --> 00:41:30,690
certain element of people problem yes I

00:41:28,410 --> 00:41:33,119
totally agree we have it's very

00:41:30,690 --> 00:41:35,820
difficult to for even any of us to

00:41:33,119 --> 00:41:37,230
choose what is a good Sipan module we

00:41:35,820 --> 00:41:40,440
have our personal preferences we have

00:41:37,230 --> 00:41:43,380
our personal biases etc etc etc it's

00:41:40,440 --> 00:41:44,880
tricky so we want to be able to enforce

00:41:43,380 --> 00:41:46,670
that a little bit more and have a little

00:41:44,880 --> 00:41:49,800
bit more control over that and also

00:41:46,670 --> 00:41:51,420
control over changes and new versions we

00:41:49,800 --> 00:41:52,980
have some modules that are really old

00:41:51,420 --> 00:41:54,390
because people haven't cared about them

00:41:52,980 --> 00:41:57,000
for three years and so they haven't been

00:41:54,390 --> 00:41:59,400
updated and then they get updated and in

00:41:57,000 --> 00:42:02,100
just all hell breaks loose so we want to

00:41:59,400 --> 00:42:03,810
have that under control and just the the

00:42:02,100 --> 00:42:06,390
simplistic way that we had right now

00:42:03,810 --> 00:42:08,220
doesn't give us that we also wanted to

00:42:06,390 --> 00:42:09,660
be able to do pinning versions all this

00:42:08,220 --> 00:42:11,880
kind of stuff which you we have tools

00:42:09,660 --> 00:42:13,400
like Pinto and carton for but we need to

00:42:11,880 --> 00:42:15,869
do it sort of from a different angle

00:42:13,400 --> 00:42:17,820
talk to this man he will give you more

00:42:15,869 --> 00:42:22,070
details on it I'm totally not doing it

00:42:17,820 --> 00:42:22,070
justice yes yes

00:42:23,030 --> 00:42:29,780
graphic to consolidation and better

00:42:27,450 --> 00:42:29,780
Polly

00:42:31,180 --> 00:42:33,690
were about

00:42:35,490 --> 00:42:41,260
so that's a debt yeah that's it's like a

00:42:39,160 --> 00:42:43,270
full talk but I will summarize it by

00:42:41,260 --> 00:42:45,130
saying the easiest way to do that is a

00:42:43,270 --> 00:42:46,900
hire a bunch of people who are not pearl

00:42:45,130 --> 00:42:48,520
hackers and make them into pro hackers

00:42:46,900 --> 00:42:50,140
and then you can do whatever you want

00:42:48,520 --> 00:42:54,790
you can define the whole culture as you

00:42:50,140 --> 00:42:57,640
go so the when when Liz how many people

00:42:54,790 --> 00:42:59,230
were booking when you started 35 people

00:42:57,640 --> 00:43:01,360
okay and that is that the entire company

00:42:59,230 --> 00:43:03,730
or just the IT department that was the

00:43:01,360 --> 00:43:06,790
entire company we have 14,000 people in

00:43:03,730 --> 00:43:08,530
the company now we have 1,200 people in

00:43:06,790 --> 00:43:10,270
the IT department and i believe the

00:43:08,530 --> 00:43:11,920
projection that I last saw is that by

00:43:10,270 --> 00:43:15,640
the end of the year we want to have 1500

00:43:11,920 --> 00:43:17,950
we approximately 25 people a month we on

00:43:15,640 --> 00:43:20,080
board and this is designers front-end

00:43:17,950 --> 00:43:21,880
developers data scientists and pearl

00:43:20,080 --> 00:43:23,440
developers but there's at least what was

00:43:21,880 --> 00:43:26,980
it Sawyer like 10 pearl developers a

00:43:23,440 --> 00:43:28,960
month at least give or take we're

00:43:26,980 --> 00:43:31,570
working on training program stuff like

00:43:28,960 --> 00:43:32,890
that so it's less about how do we change

00:43:31,570 --> 00:43:34,780
this culture it's actually how do we

00:43:32,890 --> 00:43:36,580
preserve it in the face of all this

00:43:34,780 --> 00:43:38,350
change and all these people coming in

00:43:36,580 --> 00:43:40,360
from Java from C sharp and all this

00:43:38,350 --> 00:43:42,370
place like that so we kind of don't have

00:43:40,360 --> 00:43:44,020
to worry about it because it's going to

00:43:42,370 --> 00:43:45,850
happen inevitably and we just want to

00:43:44,020 --> 00:43:50,740
again it's that guiding the gentle

00:43:45,850 --> 00:43:54,150
guidance so I'll get through get behind

00:43:50,740 --> 00:43:54,150
your first and I'll get to you Jim sorry

00:43:57,220 --> 00:44:04,670
yes so source lib that I mentioned

00:44:00,530 --> 00:44:06,550
before is is sort of the the underlying

00:44:04,670 --> 00:44:08,869
component apparently for source graph

00:44:06,550 --> 00:44:10,430
and if anybody if you don't know what

00:44:08,869 --> 00:44:13,130
source graph is I do highly recommend

00:44:10,430 --> 00:44:16,460
taking a look at it's very cool one of

00:44:13,130 --> 00:44:17,750
our go devs at booking his friends with

00:44:16,460 --> 00:44:19,099
the guys who are doing source dev so

00:44:17,750 --> 00:44:21,980
we've been looking into it for a while

00:44:19,099 --> 00:44:23,990
but they don't have pearl support now we

00:44:21,980 --> 00:44:26,540
may actually end up adding that for them

00:44:23,990 --> 00:44:28,490
and using it but the tool is a little on

00:44:26,540 --> 00:44:30,260
the rough side at this point it's very

00:44:28,490 --> 00:44:32,060
nice for go it's not so great for

00:44:30,260 --> 00:44:36,070
everything else yet but but yeah it has

00:44:32,060 --> 00:44:36,070
a lot of potential yeah yeah

00:44:41,319 --> 00:44:52,859
I don't know if we would mitigate

00:44:50,619 --> 00:44:57,789
anything I would make it worse maybe

00:44:52,859 --> 00:45:02,289
okay I had to Liz I'm getting the side I

00:44:57,789 --> 00:45:06,219
here no I think pearl six we'd have an

00:45:02,289 --> 00:45:09,670
AST actually you know funny story the

00:45:06,219 --> 00:45:11,619
better ppi my my best hope on that is

00:45:09,670 --> 00:45:15,729
not that typescript parser that this guy

00:45:11,619 --> 00:45:19,299
wrote but uh perl 6 because pro 6 has v5

00:45:15,729 --> 00:45:21,160
it has STD five like i got a pro 5

00:45:19,299 --> 00:45:24,039
grammar written by larry if i can make

00:45:21,160 --> 00:45:27,339
that work then i can get a lot of good

00:45:24,039 --> 00:45:30,849
stuff out there both a bit bit rotted

00:45:27,339 --> 00:45:31,900
unfortunately but i'd rather fix a bit

00:45:30,849 --> 00:45:34,449
routed thing then write the whole thing

00:45:31,900 --> 00:45:37,089
myself so we may ultimately use perl 6

00:45:34,449 --> 00:45:39,849
to analyze and improve pearl five go

00:45:37,089 --> 00:45:42,579
figure um so but yeah if if the code was

00:45:39,849 --> 00:45:44,079
in pro 6 I really don't know perl 6 is

00:45:42,579 --> 00:45:48,809
too young I really couldn't I really

00:45:44,079 --> 00:45:48,809
couldn't guess so anything else yes

00:45:51,579 --> 00:45:57,700
uh so-so all right PPC I stuff we had to

00:45:55,930 --> 00:46:01,359
do it finance stuff we had to do it

00:45:57,700 --> 00:46:03,279
because money arm and actually Brad here

00:46:01,359 --> 00:46:05,469
wrote a tool called get double colon

00:46:03,279 --> 00:46:07,390
code double colon review which is a

00:46:05,469 --> 00:46:08,680
command line tool that does that it's

00:46:07,390 --> 00:46:12,369
very cool I've been digging into it

00:46:08,680 --> 00:46:14,349
lately either and checking now but

00:46:12,369 --> 00:46:16,180
people just want to do it we as an

00:46:14,349 --> 00:46:17,499
organization we don't enforce it as an

00:46:16,180 --> 00:46:19,959
organization we don't enforce anything

00:46:17,499 --> 00:46:21,839
we expect our developers to be smart and

00:46:19,959 --> 00:46:24,789
find the tools that make sense for them

00:46:21,839 --> 00:46:26,079
but there has been a lot of questions

00:46:24,789 --> 00:46:27,099
about hey can we have a code review with

00:46:26,079 --> 00:46:30,369
who will hey can we have a code review

00:46:27,099 --> 00:46:33,190
tool and one of the really crappy parts

00:46:30,369 --> 00:46:35,319
of being the tooling track is that we

00:46:33,190 --> 00:46:36,940
have these monthly hackathons and people

00:46:35,319 --> 00:46:38,469
do all this cool stuff and then unlike

00:46:36,940 --> 00:46:40,569
the Monday afterwards I get a little

00:46:38,469 --> 00:46:43,890
Jabbar message amen can you maintain

00:46:40,569 --> 00:46:47,140
this it's like I don't want your crap no

00:46:43,890 --> 00:46:48,640
but those things sometimes can be very

00:46:47,140 --> 00:46:50,079
productive and get lab is one of the

00:46:48,640 --> 00:46:52,959
ones that came out of that so like

00:46:50,079 --> 00:46:55,119
people want these tools we can either

00:46:52,959 --> 00:46:57,910
let just random Cowboys in the middle of

00:46:55,119 --> 00:47:00,339
you know 700 Debs pick a thing and then

00:46:57,910 --> 00:47:02,109
you know ulta you don't want to depend

00:47:00,339 --> 00:47:04,059
on something that you didn't plan and

00:47:02,109 --> 00:47:06,369
that you are not you're not a you're not

00:47:04,059 --> 00:47:08,469
gonna be taken care of so we're starting

00:47:06,369 --> 00:47:11,499
to look at this simply to to stem the

00:47:08,469 --> 00:47:13,959
tide of that but code review is it's

00:47:11,499 --> 00:47:15,579
it's an optional thing if a team chooses

00:47:13,959 --> 00:47:17,709
to do it they can if individuals choose

00:47:15,579 --> 00:47:20,739
to do it our android devs do it a lot

00:47:17,709 --> 00:47:23,469
simply because the the senior dev on

00:47:20,739 --> 00:47:24,609
that team is in Slovakia and everybody

00:47:23,469 --> 00:47:26,049
else is in Amsterdam and they've got

00:47:24,609 --> 00:47:28,479
time difference and other stuff like

00:47:26,049 --> 00:47:30,459
that so but yeah code review is sort of

00:47:28,479 --> 00:47:32,140
it's a good thing sometimes it's a bad

00:47:30,459 --> 00:47:35,349
thing sometimes they get to choose

00:47:32,140 --> 00:47:38,550
whatever they want so anybody else

00:47:35,349 --> 00:47:45,630
anything no oh Jeffrey

00:47:38,550 --> 00:47:49,800
Oh silent auction ends at noon 10

00:47:45,630 --> 00:47:53,490
minutes okay all right do we have any

00:47:49,800 --> 00:47:55,640
more questions no okay John this one's

00:47:53,490 --> 00:47:55,640
for you

00:48:06,730 --> 00:48:13,420
I I told Laura we were gonna use those

00:48:08,950 --> 00:48:15,750
so I had to you although all right

00:48:13,420 --> 00:48:15,750

YouTube URL: https://www.youtube.com/watch?v=T6igWSZrxDE


