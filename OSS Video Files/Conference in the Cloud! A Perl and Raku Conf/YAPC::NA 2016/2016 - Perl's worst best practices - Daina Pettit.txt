Title: 2016 - Perl's worst best practices - Daina Pettit
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,500 --> 00:00:05,850
this is a popular talk well at least

00:00:03,060 --> 00:00:07,560
it's a popular subject I you may be

00:00:05,850 --> 00:00:15,839
throwing things at me by the end of this

00:00:07,560 --> 00:00:19,260
I'm not sure so we'll see okay Pearl's

00:00:15,839 --> 00:00:22,710
worst best practices so my name is Dana

00:00:19,260 --> 00:00:26,039
Petitte of my email I work for bluehost

00:00:22,710 --> 00:00:31,080
and so I have two email addresses my

00:00:26,039 --> 00:00:32,790
work of email address at bluehost calm

00:00:31,080 --> 00:00:36,239
and then I have my personal which is

00:00:32,790 --> 00:00:39,059
Dana at xmission com I'm going to tell

00:00:36,239 --> 00:00:41,120
you a little bit about my biases so you

00:00:39,059 --> 00:00:43,980
kind of know where I'm coming from here

00:00:41,120 --> 00:00:45,989
I currently work for bluehost which is

00:00:43,980 --> 00:00:49,079
larger endurance international group

00:00:45,989 --> 00:00:52,110
company that that group is actually a

00:00:49,079 --> 00:00:54,809
hosting conglomeration I used to work

00:00:52,110 --> 00:00:57,809
for linux networks Silicon Graphics we

00:00:54,809 --> 00:01:00,090
did supercomputers ingenix optum

00:00:57,809 --> 00:01:02,340
unitedhealth group we did medical

00:01:00,090 --> 00:01:05,360
information evans and sutherland we did

00:01:02,340 --> 00:01:08,820
high-performance flight simulators

00:01:05,360 --> 00:01:12,000
novell unixware unix system labs we did

00:01:08,820 --> 00:01:15,150
poor management and I've worked for a

00:01:12,000 --> 00:01:17,630
lot of others as well my geek code block

00:01:15,150 --> 00:01:20,689
if any of you remember the geek codes

00:01:17,630 --> 00:01:22,920
for those of that you don't I will

00:01:20,689 --> 00:01:27,540
interpret that and that means that i

00:01:22,920 --> 00:01:31,229
grew up on bsd unix i strongly prefer

00:01:27,540 --> 00:01:35,250
Linux I don't prefer windows or

00:01:31,229 --> 00:01:39,360
Microsoft at all I've been doing pearl

00:01:35,250 --> 00:01:42,180
since 94 I've doing emaxx since 1990 and

00:01:39,360 --> 00:01:43,170
I've been doing see since 82 there's a

00:01:42,180 --> 00:01:45,299
lot of the things I've been doing but

00:01:43,170 --> 00:01:48,270
those the main things now this

00:01:45,299 --> 00:01:51,509
presentation has a lot of opinion in it

00:01:48,270 --> 00:01:54,210
so just be aware that I may be

00:01:51,509 --> 00:01:57,210
completely wrong you may be right but

00:01:54,210 --> 00:01:59,250
you may be wrong also so we all may be

00:01:57,210 --> 00:02:01,170
just clueless noobs and have no clue

00:01:59,250 --> 00:02:02,460
what's actually going on but just be

00:02:01,170 --> 00:02:05,070
aware that will throw that out right

00:02:02,460 --> 00:02:06,930
there so our overview what we're going

00:02:05,070 --> 00:02:09,830
to do is we're going to talk about what

00:02:06,930 --> 00:02:12,510
the best practices actually means and

00:02:09,830 --> 00:02:13,300
then we're going to go over a summary of

00:02:12,510 --> 00:02:17,290
the pearl

00:02:13,300 --> 00:02:20,200
best practices book and then we're going

00:02:17,290 --> 00:02:23,260
to talk about what the worst stuff is in

00:02:20,200 --> 00:02:25,030
my opinion and you may have your opinion

00:02:23,260 --> 00:02:26,590
as well we'll talk a little bit about

00:02:25,030 --> 00:02:28,270
pearl critic pearl critic was talked

00:02:26,590 --> 00:02:30,010
about this morning so I don't know to

00:02:28,270 --> 00:02:31,570
need to go into much depth on that but

00:02:30,010 --> 00:02:35,410
we'll talk a little bit about it in

00:02:31,570 --> 00:02:37,660
terms of best practices in that we're

00:02:35,410 --> 00:02:39,430
going to be covering and then at the

00:02:37,660 --> 00:02:41,530
very end we'll go to questions answers

00:02:39,430 --> 00:02:44,980
and rants so if you have your own

00:02:41,530 --> 00:02:49,170
favorite worst best practices let us

00:02:44,980 --> 00:02:52,180
know so why do we have best practices

00:02:49,170 --> 00:02:54,700
well the whole idea with best practices

00:02:52,180 --> 00:02:56,560
that we want to make our code more

00:02:54,700 --> 00:02:58,690
readable we want to make it more

00:02:56,560 --> 00:03:01,150
reliable want to make it easier to

00:02:58,690 --> 00:03:03,340
maintain all things that we would think

00:03:01,150 --> 00:03:07,830
would be good things so anything that

00:03:03,340 --> 00:03:10,870
makes our code less reliable more buggy

00:03:07,830 --> 00:03:13,240
that sort of thing we consider that a

00:03:10,870 --> 00:03:15,340
bad practice so we want to get away from

00:03:13,240 --> 00:03:18,640
those things so the best practices is an

00:03:15,340 --> 00:03:21,430
attempt to help us get away from those

00:03:18,640 --> 00:03:23,320
problems there's another point of view

00:03:21,430 --> 00:03:26,739
and that is the legal point of view and

00:03:23,320 --> 00:03:33,820
that best best practices following them

00:03:26,739 --> 00:03:37,860
may save our skin and of course then

00:03:33,820 --> 00:03:37,860
there's the required Dilbert

00:03:39,150 --> 00:03:50,050
so hopefully we are not mediocre so the

00:03:45,849 --> 00:03:53,260
book pearl best practices all of you

00:03:50,050 --> 00:03:55,930
have probably seen this some of you have

00:03:53,260 --> 00:03:57,880
actually read it there's a lot of really

00:03:55,930 --> 00:04:01,510
good stuff in there and we'll talk not

00:03:57,880 --> 00:04:04,510
about the really good stuff so much this

00:04:01,510 --> 00:04:06,489
was published in 2005 which means it was

00:04:04,510 --> 00:04:08,940
written over the years prior to that so

00:04:06,489 --> 00:04:12,430
it's actually older than just you know

00:04:08,940 --> 00:04:14,680
12 or to 10 or 11 12 years old it's a

00:04:12,430 --> 00:04:20,560
little older than that actually the

00:04:14,680 --> 00:04:22,270
author is Damien Conway I didn't have

00:04:20,560 --> 00:04:31,530
his picture so I use a picture of

00:04:22,270 --> 00:04:34,210
Leonardo and in his book Damien says

00:04:31,530 --> 00:04:36,370
remember that each piece of advice is a

00:04:34,210 --> 00:04:37,510
guideline whether or not you agree with

00:04:36,370 --> 00:04:39,370
all of them doesn't matter what matters

00:04:37,510 --> 00:04:41,650
is that you become aware of the coding

00:04:39,370 --> 00:04:43,930
issue these guidelines address and this

00:04:41,650 --> 00:04:46,090
is actually very important because what

00:04:43,930 --> 00:04:49,390
this book actually does is it points out

00:04:46,090 --> 00:04:50,530
the issues we need to address what are

00:04:49,390 --> 00:04:54,729
the things that we need to be aware of

00:04:50,530 --> 00:04:56,770
the little gotchas things like context

00:04:54,729 --> 00:04:58,150
when you think that you have a scalar

00:04:56,770 --> 00:05:00,669
context it may turn out you actually

00:04:58,150 --> 00:05:03,190
have a list context these are important

00:05:00,669 --> 00:05:07,180
things to know about so this book helps

00:05:03,190 --> 00:05:08,650
us with that so we we express thanks to

00:05:07,180 --> 00:05:10,539
Damien for raising the issue for

00:05:08,650 --> 00:05:12,310
actually publishing the book it is a lot

00:05:10,539 --> 00:05:13,870
of work to publish if those of you that

00:05:12,310 --> 00:05:16,539
have ever published a book realized how

00:05:13,870 --> 00:05:18,970
much work it actually takes and I

00:05:16,539 --> 00:05:21,280
appreciate him defending his burl pearl

00:05:18,970 --> 00:05:27,970
best practices and then changing his

00:05:21,280 --> 00:05:29,800
mind when it needs to change sometimes

00:05:27,970 --> 00:05:33,250
that our best practices do need to

00:05:29,800 --> 00:05:37,240
change libraries change languages change

00:05:33,250 --> 00:05:39,160
tools change our hardware changes and so

00:05:37,240 --> 00:05:41,350
sometimes things that used to be good

00:05:39,160 --> 00:05:43,800
are no longer good anymore and so the

00:05:41,350 --> 00:05:46,330
best practices have to change with that

00:05:43,800 --> 00:05:49,240
so the Bert the best practices book

00:05:46,330 --> 00:05:52,270
being over 10 years old back then pearl

00:05:49,240 --> 00:05:58,030
58 was popular

00:05:52,270 --> 00:06:01,810
who's still running on pearl 58 less

00:05:58,030 --> 00:06:05,290
than a handful I yeah I yeah when I

00:06:01,810 --> 00:06:08,710
started I was on Pearl for and there was

00:06:05,290 --> 00:06:11,050
no best practices out there and i still

00:06:08,710 --> 00:06:12,970
have systems i go on that have pearl 58

00:06:11,050 --> 00:06:14,560
on them is the latest thing that we're

00:06:12,970 --> 00:06:17,590
allowed to have on that particular most

00:06:14,560 --> 00:06:20,020
machines now i think are up to 5 10 or 5

00:06:17,590 --> 00:06:22,540
14 if you're kind of running a legacy

00:06:20,020 --> 00:06:25,870
system I don't know very many people

00:06:22,540 --> 00:06:29,500
that are running on 522 or anything

00:06:25,870 --> 00:06:32,440
newer so let's look at an overview of

00:06:29,500 --> 00:06:34,600
the book there's some dispute is to

00:06:32,440 --> 00:06:38,200
actually how many there's either 255 or

00:06:34,600 --> 00:06:40,450
256 the book claims 256 and other list

00:06:38,200 --> 00:06:41,740
claims there's 255 so I'm not going to

00:06:40,450 --> 00:06:44,470
worry about exactly how many there are

00:06:41,740 --> 00:06:45,820
but there's 18 groupings and you can see

00:06:44,470 --> 00:06:48,370
the kind of groupings we have we have

00:06:45,820 --> 00:06:49,780
things like code layout naming

00:06:48,370 --> 00:06:51,310
conventions Val using expressions the

00:06:49,780 --> 00:06:54,190
first part of it tends to be stuff thats

00:06:51,310 --> 00:06:56,230
stylistic issues things like you know

00:06:54,190 --> 00:06:59,050
how many spaces you have where how do

00:06:56,230 --> 00:07:00,430
you tab to use spaces or tabs a lot of

00:06:59,050 --> 00:07:02,800
these kind of things then there's stuff

00:07:00,430 --> 00:07:06,820
that's very pearl specific things like

00:07:02,800 --> 00:07:09,490
how you do references regular

00:07:06,820 --> 00:07:10,780
expressions object oriented stuff

00:07:09,490 --> 00:07:13,060
there's a lot of that kind of stuff in

00:07:10,780 --> 00:07:14,050
there and we're not going to cover all

00:07:13,060 --> 00:07:16,270
these we're just going to cover some

00:07:14,050 --> 00:07:18,820
highlights and by the way if you want a

00:07:16,270 --> 00:07:20,470
per best practices quick reference guide

00:07:18,820 --> 00:07:23,080
this is a bait available from Johan

00:07:20,470 --> 00:07:25,120
Romans you can go to this link at the

00:07:23,080 --> 00:07:27,430
bottom or you can just google the

00:07:25,120 --> 00:07:29,410
quarrel pearl best practices quick

00:07:27,430 --> 00:07:31,660
reference guide and you get this as a

00:07:29,410 --> 00:07:37,750
PDF it's two pages and has a summary of

00:07:31,660 --> 00:07:40,360
all the pearl best practices so let's

00:07:37,750 --> 00:07:43,960
look at first what we can ignore there's

00:07:40,360 --> 00:07:46,000
163 items of the 256 that are general

00:07:43,960 --> 00:07:47,860
good programming practices that are

00:07:46,000 --> 00:07:50,920
applicable to any language not just

00:07:47,860 --> 00:07:53,140
pearl so there's a lot of these are

00:07:50,920 --> 00:07:55,480
discussed elsewhere and forums and books

00:07:53,140 --> 00:07:57,990
and so on we don't need to talk about

00:07:55,480 --> 00:08:01,660
those much here so we're not going to

00:07:57,990 --> 00:08:04,570
many of these are also style issues you

00:08:01,660 --> 00:08:05,350
know you're indenting your brace pairing

00:08:04,570 --> 00:08:07,120
up that sort

00:08:05,350 --> 00:08:08,490
thing we don't care so much about that

00:08:07,120 --> 00:08:11,770
here and a lot of those can be automated

00:08:08,490 --> 00:08:15,790
and may be specific to a particular site

00:08:11,770 --> 00:08:17,980
so I'm not going to worry about those if

00:08:15,790 --> 00:08:20,620
you are concerned about some of those

00:08:17,980 --> 00:08:22,630
stylistic issues like formatting code

00:08:20,620 --> 00:08:25,090
layout you can use pearl tidy and those

00:08:22,630 --> 00:08:27,490
of you that have not used it it

00:08:25,090 --> 00:08:30,790
automates your code layout you basically

00:08:27,490 --> 00:08:32,950
give it a bunch of rules and then it

00:08:30,790 --> 00:08:35,500
will go and it'll not change your perl

00:08:32,950 --> 00:08:38,890
code it changes your pearl spacing and

00:08:35,500 --> 00:08:40,720
indenting basically what it does so you

00:08:38,890 --> 00:08:42,400
can customize it to your particular look

00:08:40,720 --> 00:08:46,180
you can invoke it within an editor like

00:08:42,400 --> 00:08:48,130
VI or emacs you can also up have it

00:08:46,180 --> 00:08:52,080
implemented automatically with a source

00:08:48,130 --> 00:08:55,720
code management system something like

00:08:52,080 --> 00:08:57,730
CVS or subversion there's a whole bunch

00:08:55,720 --> 00:09:00,100
of middle do that so when you check code

00:08:57,730 --> 00:09:01,120
in it automatically converts it to the

00:09:00,100 --> 00:09:02,740
correct format and if you're really

00:09:01,120 --> 00:09:04,270
picky and you don't like working in a

00:09:02,740 --> 00:09:05,950
particular style that your company's

00:09:04,270 --> 00:09:07,930
chosen you can have your own pearl tidy

00:09:05,950 --> 00:09:13,360
that converts it back to your particular

00:09:07,930 --> 00:09:15,790
style the this is actually rule number

00:09:13,360 --> 00:09:19,180
22 in the book enforce your chosen

00:09:15,790 --> 00:09:22,450
layout style mechanically pearl tidy has

00:09:19,180 --> 00:09:24,400
problems though in that if you have if

00:09:22,450 --> 00:09:26,980
you're picky about columns like your

00:09:24,400 --> 00:09:29,740
hash fat commas lining up the equals

00:09:26,980 --> 00:09:33,910
greater than it will probably mess those

00:09:29,740 --> 00:09:35,560
up so just be aware that there is that

00:09:33,910 --> 00:09:37,750
particular problem with pearl tidy it's

00:09:35,560 --> 00:09:39,820
not real good with some of those kind of

00:09:37,750 --> 00:09:41,320
things it's really good with the first

00:09:39,820 --> 00:09:42,840
thing on the on a particular line

00:09:41,320 --> 00:09:44,950
getting those lined up right and

00:09:42,840 --> 00:09:46,660
sometimes a little difficult to get

00:09:44,950 --> 00:09:49,420
those to work exactly right so just be

00:09:46,660 --> 00:09:50,950
aware that pearl tidy is one thing that

00:09:49,420 --> 00:09:54,190
you can use to solve some of the

00:09:50,950 --> 00:09:56,290
stylistic issues so really what we want

00:09:54,190 --> 00:09:58,240
to talk about here there's 92 items that

00:09:56,290 --> 00:09:59,620
are pearl specific these we're going to

00:09:58,240 --> 00:10:00,820
focus on but we don't have time to go

00:09:59,620 --> 00:10:03,880
over all of them Sir just going to talk

00:10:00,820 --> 00:10:07,420
about a few of them so let's go ahead

00:10:03,880 --> 00:10:09,610
and dig right in the first grouping

00:10:07,420 --> 00:10:11,590
values and expressions there's 18 items

00:10:09,610 --> 00:10:15,690
we're just going to whine about one of

00:10:11,590 --> 00:10:19,890
them don't use bear words

00:10:15,690 --> 00:10:22,350
number 45 now bear words are when you

00:10:19,890 --> 00:10:24,390
have a essentially an unquoted string

00:10:22,350 --> 00:10:27,600
and pearl has to figure out what to do

00:10:24,390 --> 00:10:29,430
with it and by default it will try to

00:10:27,600 --> 00:10:31,620
make it into a string but there's times

00:10:29,430 --> 00:10:33,120
where the context is such that it says

00:10:31,620 --> 00:10:36,570
oh this might be something else this

00:10:33,120 --> 00:10:38,790
might be a function call or subroutine

00:10:36,570 --> 00:10:40,950
call and so it tries to make that into a

00:10:38,790 --> 00:10:44,100
call and so sometimes you end up with

00:10:40,950 --> 00:10:46,110
and misinterpretation because of that so

00:10:44,100 --> 00:10:49,310
to avoid that problem you say use strict

00:10:46,110 --> 00:10:52,320
subs and that solves that problem

00:10:49,310 --> 00:10:54,030
however my whining about this isn't

00:10:52,320 --> 00:10:56,610
about this particular part it's just the

00:10:54,030 --> 00:10:59,610
title is misleading don't use bear words

00:10:56,610 --> 00:11:01,920
because really what we really want to

00:10:59,610 --> 00:11:03,470
say is that bear words are okay we just

00:11:01,920 --> 00:11:08,310
don't want to get them showing up as

00:11:03,470 --> 00:11:10,980
subroutines so an example of where we

00:11:08,310 --> 00:11:12,600
can actually say use strict subs and

00:11:10,980 --> 00:11:14,610
still use bear words is in the

00:11:12,600 --> 00:11:17,310
initialization of a hash or referring to

00:11:14,610 --> 00:11:19,650
a key and a hash so in the example the

00:11:17,310 --> 00:11:22,020
colors hash here we have green and

00:11:19,650 --> 00:11:24,140
yellow as our hash keys we don't have to

00:11:22,020 --> 00:11:27,320
quote them we could but we don't have to

00:11:24,140 --> 00:11:30,330
and it's still okay with you strict sub

00:11:27,320 --> 00:11:33,000
so we really should have missed knit

00:11:30,330 --> 00:11:36,240
that have the rule renamed something

00:11:33,000 --> 00:11:40,190
about avoiding bareword subs rather than

00:11:36,240 --> 00:11:40,190
just avoiding bear words entirely

00:11:44,010 --> 00:11:49,050
the next one documentation there's 14

00:11:47,490 --> 00:11:52,410
items we're going to whine about two of

00:11:49,050 --> 00:11:55,800
them and this one I can actually go

00:11:52,410 --> 00:11:57,960
either way on these two are one is keep

00:11:55,800 --> 00:12:01,470
all your user documentation in a single

00:11:57,960 --> 00:12:03,240
place within your source file and then

00:12:01,470 --> 00:12:07,050
the other is keep all your pod

00:12:03,240 --> 00:12:10,410
documentation at the end of the file now

00:12:07,050 --> 00:12:15,120
I don't mind having it at the end but it

00:12:10,410 --> 00:12:18,810
seems to me that scattering it round can

00:12:15,120 --> 00:12:20,700
create problems or not the rationale

00:12:18,810 --> 00:12:22,950
that Damien uses a scattering user

00:12:20,700 --> 00:12:25,670
documentation amongst code tends to lead

00:12:22,950 --> 00:12:28,290
to inconsistent and outdated

00:12:25,670 --> 00:12:31,260
documentation meaning you forget to

00:12:28,290 --> 00:12:33,510
update certain things and so if we put

00:12:31,260 --> 00:12:35,070
at the end its together but it's out of

00:12:33,510 --> 00:12:36,870
the way the code as well so you don't

00:12:35,070 --> 00:12:39,030
stumble over the your documentation

00:12:36,870 --> 00:12:41,010
trying to find your code I I had a

00:12:39,030 --> 00:12:43,620
co-worker once who brought some

00:12:41,010 --> 00:12:46,730
documents some documentation he brought

00:12:43,620 --> 00:12:49,260
some code from another company where

00:12:46,730 --> 00:12:51,090
ninety-eight percent of the lines in the

00:12:49,260 --> 00:12:52,530
file were documentation there was two

00:12:51,090 --> 00:12:54,990
percent that was actually code it was

00:12:52,530 --> 00:12:57,000
hard to find the code so i can see why

00:12:54,990 --> 00:13:02,400
it would be important to have the code

00:12:57,000 --> 00:13:04,410
right up front but on this one I can go

00:13:02,400 --> 00:13:05,790
either way I could say yeah I can put

00:13:04,410 --> 00:13:07,500
all the end and group it all together

00:13:05,790 --> 00:13:09,780
but I kind of like having all the

00:13:07,500 --> 00:13:12,060
subroutine documentation with each sub

00:13:09,780 --> 00:13:14,360
routine so when I modify the subroutine

00:13:12,060 --> 00:13:16,650
I will change the documentation there

00:13:14,360 --> 00:13:17,910
but in some cases some people may not

00:13:16,650 --> 00:13:20,160
like that and they may not forget to

00:13:17,910 --> 00:13:22,080
update the documentation and I kind of

00:13:20,160 --> 00:13:23,340
don't liking having it all in one place

00:13:22,080 --> 00:13:24,780
at the end because it's far away from

00:13:23,340 --> 00:13:26,580
everything and I usually end up missing

00:13:24,780 --> 00:13:28,080
something but having it all at the end

00:13:26,580 --> 00:13:30,000
and as one group makes it more

00:13:28,080 --> 00:13:32,630
consistent so I kind of go either way on

00:13:30,000 --> 00:13:35,760
this one this was an I'm not real

00:13:32,630 --> 00:13:39,240
bothered by lot however this next group

00:13:35,760 --> 00:13:42,690
bothers me a lot regular expressions

00:13:39,240 --> 00:13:45,710
there's 24 items I'm going to whine

00:13:42,690 --> 00:13:45,710
about five of them

00:13:47,079 --> 00:13:56,089
always use the X flag Damian's rationale

00:13:53,419 --> 00:13:57,679
for using X flag by the way the X flag

00:13:56,089 --> 00:13:59,149
for these are not deep into regular

00:13:57,679 --> 00:14:01,189
expressions allows you to put comments

00:13:59,149 --> 00:14:05,089
and white spaces inside of your regular

00:14:01,189 --> 00:14:09,889
expression patterns which means that

00:14:05,089 --> 00:14:12,559
spaces and pound signs are ignored so

00:14:09,889 --> 00:14:14,839
his rationale is that large complex

00:14:12,559 --> 00:14:17,809
regular expressions will need comments

00:14:14,839 --> 00:14:19,579
and that's probably true and that

00:14:17,809 --> 00:14:21,229
regular expressions always grow so

00:14:19,579 --> 00:14:23,899
you're eventually going to need to have

00:14:21,229 --> 00:14:26,689
this anyway and don't set a minimum size

00:14:23,899 --> 00:14:28,459
just started at whatever you have always

00:14:26,689 --> 00:14:33,099
use X so you're always going to be ready

00:14:28,459 --> 00:14:36,499
for the expansion and I say nonsense

00:14:33,099 --> 00:14:39,469
large complex regular expressions might

00:14:36,499 --> 00:14:42,259
need comments but they do not always

00:14:39,469 --> 00:14:44,239
grow and most regular expressions are

00:14:42,259 --> 00:14:46,999
fairly small they're 20 characters or

00:14:44,239 --> 00:14:49,129
less and the number of times like I've

00:14:46,999 --> 00:14:52,189
had regular expressions grow is almost

00:14:49,129 --> 00:14:56,149
zero once you write them they're done I

00:14:52,189 --> 00:14:58,689
just don't see them growing and one of

00:14:56,149 --> 00:15:01,489
the big problems is the X mod X flag

00:14:58,689 --> 00:15:03,829
doesn't just ignore white spaces it also

00:15:01,489 --> 00:15:05,419
ignores the pound sign so if you have

00:15:03,829 --> 00:15:08,449
pound signs in your regular expression

00:15:05,419 --> 00:15:10,489
it's going to change the way your

00:15:08,449 --> 00:15:13,579
regular expression is evaluated so that

00:15:10,489 --> 00:15:15,469
is bad but the biggest hang-up I have

00:15:13,579 --> 00:15:19,219
with the whole thing is every time I run

00:15:15,469 --> 00:15:22,399
into a flag at the end of a match or a

00:15:19,219 --> 00:15:24,709
substitute I have to think why is this

00:15:22,399 --> 00:15:26,629
flag here what are they expecting in the

00:15:24,709 --> 00:15:28,339
regular expression that I need to have

00:15:26,629 --> 00:15:31,039
this flag and when there's a flag there

00:15:28,339 --> 00:15:34,339
that is not used it bugs the heck out of

00:15:31,039 --> 00:15:37,279
me so for example I somebody's looking

00:15:34,339 --> 00:15:44,149
for punctuation characters and puts an

00:15:37,279 --> 00:15:45,799
eye at the end ignoring case why why so

00:15:44,149 --> 00:15:47,779
this is just one of those that it makes

00:15:45,799 --> 00:15:49,999
takes me longer to read the regular

00:15:47,779 --> 00:15:51,979
expression code if there's an X there

00:15:49,999 --> 00:15:54,219
because I have to figure out why it's

00:15:51,979 --> 00:15:54,219
there

00:15:54,880 --> 00:16:02,350
so my conclusion is that we should only

00:15:57,820 --> 00:16:04,120
use X when it is actually needed I find

00:16:02,350 --> 00:16:05,920
it takes it and it takes an order of

00:16:04,120 --> 00:16:12,940
magnitude longer for me to read the code

00:16:05,920 --> 00:16:18,460
when it has unneeded modifiers there the

00:16:12,940 --> 00:16:20,080
next one always use the M flag now the

00:16:18,460 --> 00:16:22,600
rationale is that people mistakenly

00:16:20,080 --> 00:16:29,290
think that carrot and dollar sign mean

00:16:22,600 --> 00:16:31,150
beginning and end of line and that we

00:16:29,290 --> 00:16:33,730
need to use em to change the regular

00:16:31,150 --> 00:16:36,160
expressions meetings so that carrot and

00:16:33,730 --> 00:16:43,320
dollar sign actually mean beginning and

00:16:36,160 --> 00:16:45,730
end of line nonsense learn the language

00:16:43,320 --> 00:16:48,490
dollar and pounds I'm a beginning and

00:16:45,730 --> 00:16:53,650
end of string with dollar signs

00:16:48,490 --> 00:16:56,040
sometimes meaning a character turn so

00:16:53,650 --> 00:17:00,120
it'll match either a carriage return or

00:16:56,040 --> 00:17:05,199
the position at the end of the string

00:17:00,120 --> 00:17:06,280
the M is rarely needed and it really

00:17:05,199 --> 00:17:10,290
only makes a difference if you have

00:17:06,280 --> 00:17:13,630
embedded new lines in your string and

00:17:10,290 --> 00:17:14,680
new programmers rarely have embedded new

00:17:13,630 --> 00:17:18,699
lines in their strings they're usually

00:17:14,680 --> 00:17:21,600
doing line based input so there if they

00:17:18,699 --> 00:17:24,550
have a new line it's at the very end an

00:17:21,600 --> 00:17:26,620
indecision just like the X flag it takes

00:17:24,550 --> 00:17:32,680
longer to read the regular expression if

00:17:26,620 --> 00:17:35,320
there's an M their conclusion learn

00:17:32,680 --> 00:17:39,400
about how the language works only use em

00:17:35,320 --> 00:17:44,020
when it's actually needed I think you

00:17:39,400 --> 00:17:46,500
can see a pattern here always use the S

00:17:44,020 --> 00:17:46,500
flag

00:17:47,610 --> 00:17:52,170
everyone seems to think that dot means

00:17:49,950 --> 00:17:55,350
any character it does not mean any

00:17:52,170 --> 00:17:58,440
character it means something else but

00:17:55,350 --> 00:18:06,059
MIT but /s will make it mean any

00:17:58,440 --> 00:18:08,460
character using the the S is nonsense we

00:18:06,059 --> 00:18:11,970
need to learn the language and realize

00:18:08,460 --> 00:18:15,660
that dot means any character except new

00:18:11,970 --> 00:18:17,460
line and we're on a different operating

00:18:15,660 --> 00:18:19,919
system it will change to the appropriate

00:18:17,460 --> 00:18:22,559
meaning of what a new line means whether

00:18:19,919 --> 00:18:26,150
it's a new line character a line feed

00:18:22,559 --> 00:18:29,480
and explicit carriage return or both in

00:18:26,150 --> 00:18:32,309
addition this one is also rarely needed

00:18:29,480 --> 00:18:35,510
and it only makes a difference if we

00:18:32,309 --> 00:18:39,780
have embedded new lines in our string

00:18:35,510 --> 00:18:40,950
and again nudes rarely have embedded new

00:18:39,780 --> 00:18:44,790
lines in their strings and if they do

00:18:40,950 --> 00:18:46,799
they're at the end and again it only it

00:18:44,790 --> 00:18:51,179
takes us longer to read the code because

00:18:46,799 --> 00:18:54,150
it has the s their conclusion is learn

00:18:51,179 --> 00:18:57,299
about what s actually means what dot

00:18:54,150 --> 00:19:02,460
actually means and use s only when

00:18:57,299 --> 00:19:04,500
needed now if you combine XMS which is

00:19:02,460 --> 00:19:06,179
what is recommended it's actually slows

00:19:04,500 --> 00:19:07,919
down your execution by about three

00:19:06,179 --> 00:19:09,870
percent it depends on some other factors

00:19:07,919 --> 00:19:12,540
but it actually slows your code down

00:19:09,870 --> 00:19:15,480
slightly it's not significant but in

00:19:12,540 --> 00:19:18,630
particular performance applications it

00:19:15,480 --> 00:19:20,370
might be enough to make a difference but

00:19:18,630 --> 00:19:21,840
it significantly slows the readers

00:19:20,370 --> 00:19:23,130
understanding and that's one of the

00:19:21,840 --> 00:19:25,679
things that we should be more concerned

00:19:23,130 --> 00:19:28,799
about in addition it can break existing

00:19:25,679 --> 00:19:31,169
code so when the Pearl best practices

00:19:28,799 --> 00:19:34,260
book came out I had a co-worker that was

00:19:31,169 --> 00:19:36,030
excited about this stuff he said I'm

00:19:34,260 --> 00:19:38,549
gonna go put XMS on all our regular

00:19:36,030 --> 00:19:40,260
expressions so he took our code base and

00:19:38,549 --> 00:19:42,540
did that and it broke everything

00:19:40,260 --> 00:19:46,380
horribly because it changed what things

00:19:42,540 --> 00:19:48,470
meant so he apologized he took it all

00:19:46,380 --> 00:19:48,470
out

00:19:52,170 --> 00:19:57,940
another one I don't like regular

00:19:55,480 --> 00:20:01,480
expression of likes consider mandating

00:19:57,940 --> 00:20:08,490
it forcing everybody to have XMS without

00:20:01,480 --> 00:20:11,890
it actually showing up that is sinister

00:20:08,490 --> 00:20:13,810
don't do this I hate hidden settings

00:20:11,890 --> 00:20:17,050
things that you have to dig for to find

00:20:13,810 --> 00:20:18,880
out what the real thing is going on it

00:20:17,050 --> 00:20:21,760
can be harder to debug until you realize

00:20:18,880 --> 00:20:24,790
that the reg XP auto flags is what's

00:20:21,760 --> 00:20:31,000
going on please don't pollute with this

00:20:24,790 --> 00:20:33,010
stuff bad idea next one don't use any de

00:20:31,000 --> 00:20:36,190
limiters other than forward slashes or

00:20:33,010 --> 00:20:39,730
the curly braces for our regular

00:20:36,190 --> 00:20:41,320
expressions operators the rationale is

00:20:39,730 --> 00:20:47,290
to be consistent and I can appreciate

00:20:41,320 --> 00:20:49,570
that and to don't be cruel the cruel was

00:20:47,290 --> 00:20:51,490
the harry s truman thing in the book of

00:20:49,570 --> 00:20:54,850
you saw that example where you could use

00:20:51,490 --> 00:20:58,090
a letter a character that's a letter to

00:20:54,850 --> 00:20:59,140
be a delimiter that's bizarre I don't

00:20:58,090 --> 00:21:01,810
know why anybody do that that would be

00:20:59,140 --> 00:21:04,810
considered being cruel my complaint

00:21:01,810 --> 00:21:09,910
about this is that braces are seriously

00:21:04,810 --> 00:21:11,200
overused in Perl we use them for lots of

00:21:09,910 --> 00:21:14,110
different things we don't need yet

00:21:11,200 --> 00:21:16,630
another thing and we're not going to be

00:21:14,110 --> 00:21:17,920
cruel we're going to be having to come

00:21:16,630 --> 00:21:19,780
back to this code later so we're not

00:21:17,920 --> 00:21:21,310
going to make it cruel if we want to be

00:21:19,780 --> 00:21:27,460
cruel there's lots other things we can

00:21:21,310 --> 00:21:29,410
do especially with pearl so conclusion

00:21:27,460 --> 00:21:30,880
on this one use the limiters that make

00:21:29,410 --> 00:21:32,440
sense for that particular regular

00:21:30,880 --> 00:21:35,110
expression which might be the curly

00:21:32,440 --> 00:21:36,520
braces but it might be vertical bars it

00:21:35,110 --> 00:21:37,600
might be pound signs that might be

00:21:36,520 --> 00:21:39,430
percent signs might be some other

00:21:37,600 --> 00:21:41,320
character I've seen just about every

00:21:39,430 --> 00:21:44,590
character that's a punctuation character

00:21:41,320 --> 00:21:50,050
used and in those cases they usually

00:21:44,590 --> 00:21:53,170
make sense now there's since so much

00:21:50,050 --> 00:21:55,060
time has passed jamie has actually

00:21:53,170 --> 00:21:59,470
changed his mind on some of the right on

00:21:55,060 --> 00:22:01,210
the some of the rules the best practices

00:21:59,470 --> 00:22:01,970
and so I'll talk about a little bit of

00:22:01,210 --> 00:22:04,870
those

00:22:01,970 --> 00:22:08,360
and this is one that actually I actually

00:22:04,870 --> 00:22:11,000
agree with that that I didn't agree with

00:22:08,360 --> 00:22:12,470
when it came out initially the used 78

00:22:11,000 --> 00:22:16,910
column lines i've been using a hundred

00:22:12,470 --> 00:22:19,580
and thirty or more column lines for 20

00:22:16,910 --> 00:22:23,600
years so i'm kind of surprised he was

00:22:19,580 --> 00:22:28,820
saying limit us 278 columns back 12

00:22:23,600 --> 00:22:30,980
years ago that was kind of odd but his

00:22:28,820 --> 00:22:33,530
recommendation now is use whatever limit

00:22:30,980 --> 00:22:35,150
works for you he recommends maybe 120

00:22:33,530 --> 00:22:41,090
but didn't really say that's really a

00:22:35,150 --> 00:22:45,230
hard limit I suggest no limit you should

00:22:41,090 --> 00:22:47,450
do what makes sense for you I actually

00:22:45,230 --> 00:22:48,770
suggested that to a co-worker that there

00:22:47,450 --> 00:22:50,660
should be no limit they he wanted to

00:22:48,770 --> 00:22:52,610
have a limit on the number of columns

00:22:50,660 --> 00:22:55,910
and I said I don't see a reason to have

00:22:52,610 --> 00:22:58,010
a limit we've got two screens why can't

00:22:55,910 --> 00:22:59,930
we run an editor across the width of two

00:22:58,010 --> 00:23:01,730
screens if we need to I don't think we

00:22:59,930 --> 00:23:03,350
would much but sometimes you want to

00:23:01,730 --> 00:23:04,970
have something really wide Dutch the

00:23:03,350 --> 00:23:07,010
format works well I said why should you

00:23:04,970 --> 00:23:11,510
put an arbitrary limit he got it really

00:23:07,010 --> 00:23:12,770
upset but I I just thought that we

00:23:11,510 --> 00:23:14,330
didn't really need to set a hard limit

00:23:12,770 --> 00:23:18,350
and chances are if you set a limit

00:23:14,330 --> 00:23:22,520
somebody's going to break it now there's

00:23:18,350 --> 00:23:25,100
some of the modules that are now kind of

00:23:22,520 --> 00:23:27,230
obsolete there's better ones that have

00:23:25,100 --> 00:23:29,180
replaced some Damon's recommendations so

00:23:27,230 --> 00:23:32,960
we where we used to used to recommend

00:23:29,180 --> 00:23:34,610
attribute type now type ty instead we

00:23:32,960 --> 00:23:37,010
used to recommend base use parent

00:23:34,610 --> 00:23:40,130
instead class standard class standard

00:23:37,010 --> 00:23:45,560
util use object inside out moose or

00:23:40,130 --> 00:23:47,690
moose X inside out or do s the the thing

00:23:45,560 --> 00:23:49,400
is inside out is kind of fallen out of

00:23:47,690 --> 00:23:51,560
favor a little bit here i think damian

00:23:49,400 --> 00:23:54,440
thought that that would take off and it

00:23:51,560 --> 00:23:57,410
really hasn't so I'm kind of torn on

00:23:54,440 --> 00:23:58,490
this so and I I don't know if I can say

00:23:57,410 --> 00:24:03,800
to this group but I really don't like

00:23:58,490 --> 00:24:06,080
moose the problem that we have it where

00:24:03,800 --> 00:24:08,500
I work with moose is it hit that the

00:24:06,080 --> 00:24:11,030
performance hit on startup is so slow

00:24:08,500 --> 00:24:12,509
it's just unacceptable for the kind of

00:24:11,030 --> 00:24:15,889
work that we're doing

00:24:12,509 --> 00:24:18,959
and previous place that I worked we had

00:24:15,889 --> 00:24:20,579
we pulled in moose and we thought oh

00:24:18,959 --> 00:24:22,349
this is cool look at the stuff cool

00:24:20,579 --> 00:24:25,579
stuff we can do with moose it hardly

00:24:22,349 --> 00:24:28,609
even looks like pearl anymore and all

00:24:25,579 --> 00:24:31,589
sudden our rpms took forever to build

00:24:28,609 --> 00:24:33,989
and so he decided maybe that was a bad

00:24:31,589 --> 00:24:35,820
idea now performance issues are supposed

00:24:33,989 --> 00:24:39,690
to be improving at some point but right

00:24:35,820 --> 00:24:41,929
now I'm personally not ready for that to

00:24:39,690 --> 00:24:44,669
choose something quite like moose

00:24:41,929 --> 00:24:49,559
contextual returned object result

00:24:44,669 --> 00:24:52,319
instead set of data dump er which is

00:24:49,559 --> 00:24:53,940
still okay data dump has no object

00:24:52,319 --> 00:25:03,509
oriented overhead and so is a little bit

00:24:53,940 --> 00:25:05,279
better and then d prof de Velde prof i'd

00:25:03,509 --> 00:25:07,889
use that a lot to demo to people how to

00:25:05,279 --> 00:25:10,499
profile and then i found nyt prof and

00:25:07,889 --> 00:25:13,649
i'm surprised that d prof is stuck

00:25:10,499 --> 00:25:16,349
around so long and mighty prof is so

00:25:13,649 --> 00:25:17,579
much better and thank you Tim for riding

00:25:16,349 --> 00:25:21,149
that ivan sees tim even at the

00:25:17,579 --> 00:25:23,399
conference I know okay but he was here a

00:25:21,149 --> 00:25:25,469
couple years ago and anyway nyt prof is

00:25:23,399 --> 00:25:29,279
awesome so if you haven't used it and

00:25:25,469 --> 00:25:31,139
you need to profile use that and by the

00:25:29,279 --> 00:25:35,029
way the summary of tim's talk from two

00:25:31,139 --> 00:25:36,869
years about nyt prof is don't use it and

00:25:35,029 --> 00:25:39,749
the reason why you shouldn't be

00:25:36,869 --> 00:25:43,739
profiling unless you actually need to

00:25:39,749 --> 00:25:45,419
profile and rarely do we actually into

00:25:43,739 --> 00:25:48,209
profile in my experience the profiling

00:25:45,419 --> 00:25:49,889
is usually the thing that you weren't

00:25:48,209 --> 00:25:52,019
thinking about is the thing that needs

00:25:49,889 --> 00:25:54,089
to be optimized not where you think the

00:25:52,019 --> 00:25:57,209
actual bottom line is you're usually

00:25:54,089 --> 00:25:59,609
wrong we should be using fatal auto die

00:25:57,209 --> 00:26:05,690
instead of fatal and IO prompter instead

00:25:59,609 --> 00:26:08,190
of i/o prompt parse wreck descent

00:26:05,690 --> 00:26:09,749
there's there's some alternatives there

00:26:08,190 --> 00:26:11,759
that can help us a little bit more

00:26:09,749 --> 00:26:16,529
although parse practice and is still

00:26:11,759 --> 00:26:21,719
good wreck XP grammars and marpa Perl 6

00:26:16,529 --> 00:26:24,959
export adders use sub export or exporter

00:26:21,719 --> 00:26:26,100
tiny instead exporter simple if you like

00:26:24,959 --> 00:26:29,220
the Perl 6 type

00:26:26,100 --> 00:26:31,260
stuff Const fast instead of read-only

00:26:29,220 --> 00:26:34,830
I'm not was never a big fan of read-only

00:26:31,260 --> 00:26:37,260
anyway there's there's a lot more that

00:26:34,830 --> 00:26:38,340
Damon has changes mine on on some of

00:26:37,260 --> 00:26:40,440
these things I don't have time to go

00:26:38,340 --> 00:26:42,480
over all those and I think I'd put all

00:26:40,440 --> 00:26:44,250
you to sleep if you want more

00:26:42,480 --> 00:26:46,679
information about those you can go to

00:26:44,250 --> 00:26:48,330
pearl even better practices by conway

00:26:46,679 --> 00:26:53,220
and i'm not sure how you can even get

00:26:48,330 --> 00:26:55,260
that i have a copy here that was given

00:26:53,220 --> 00:26:57,780
it a presentation he gave three years

00:26:55,260 --> 00:26:59,159
ago and I think it's self-published so

00:26:57,780 --> 00:27:05,400
you'd have to talk to him to see where

00:26:59,159 --> 00:27:07,140
to actually get that however a de minas

00:27:05,400 --> 00:27:09,270
verte has done a very smart thing and

00:27:07,140 --> 00:27:11,909
that is that he's released a set of

00:27:09,270 --> 00:27:14,370
videos through O'Reilly you can watch

00:27:11,909 --> 00:27:17,039
for best modern pearl best practice what

00:27:14,370 --> 00:27:18,510
it's called and the nice thing about

00:27:17,039 --> 00:27:24,150
this is that he can update it

00:27:18,510 --> 00:27:25,650
periodically Oh Leonardo okay so he can

00:27:24,150 --> 00:27:27,840
update it so he doesn't have to worry

00:27:25,650 --> 00:27:31,020
about things getting out of date so much

00:27:27,840 --> 00:27:35,039
and and looking a little bit stale so

00:27:31,020 --> 00:27:39,179
that's actually kind of nice let's look

00:27:35,039 --> 00:27:43,049
at pearl critic pearl critic is a static

00:27:39,179 --> 00:27:45,659
code analyzer it doesn't modify your

00:27:43,049 --> 00:27:47,390
code it's usually invoked as part of

00:27:45,659 --> 00:27:52,370
your source code management system

00:27:47,390 --> 00:27:57,780
something like through get or subversion

00:27:52,370 --> 00:28:03,240
CVS and so on it can be also invoked by

00:27:57,780 --> 00:28:05,850
some other systems like Hudson or some

00:28:03,240 --> 00:28:10,590
of those kind of things it has in the

00:28:05,850 --> 00:28:12,320
140 through three rules in the base or i

00:28:10,590 --> 00:28:15,210
should say the Corporal critic

00:28:12,320 --> 00:28:18,570
distribution and you can add your own

00:28:15,210 --> 00:28:23,370
rules however what's interesting is it

00:28:18,570 --> 00:28:30,090
only covers 66 of the 256 progress

00:28:23,370 --> 00:28:32,580
practices book and only 33 of the 92

00:28:30,090 --> 00:28:35,299
pearl specific items are covered by

00:28:32,580 --> 00:28:35,299
pearl critic

00:28:42,450 --> 00:28:49,170
there's really no way to automatically

00:28:46,100 --> 00:28:53,180
cover all the Pearl best practices I

00:28:49,170 --> 00:28:55,860
mean how do you get pearl critic to to

00:28:53,180 --> 00:29:01,770
automate something like don't be clever

00:28:55,860 --> 00:29:07,350
I don't know how you do that so there's

00:29:01,770 --> 00:29:10,290
really a lot that they cannot do so only

00:29:07,350 --> 00:29:13,050
44 six percent of the the pro critic

00:29:10,290 --> 00:29:16,530
rules are actually Damien's or based on

00:29:13,050 --> 00:29:20,790
Damien's rules the other 77 rules are

00:29:16,530 --> 00:29:22,940
contributed by others at first that

00:29:20,790 --> 00:29:26,220
really bothered me because I thought

00:29:22,940 --> 00:29:28,980
somebody else who has no authority as if

00:29:26,220 --> 00:29:31,350
Damien has Authority somebody else who

00:29:28,980 --> 00:29:32,970
has no authority is making up rules for

00:29:31,350 --> 00:29:34,560
how whether my code is good or not and

00:29:32,970 --> 00:29:37,860
some of these are actually really good

00:29:34,560 --> 00:29:45,000
rules and some are somebody's opinion so

00:29:37,860 --> 00:29:48,000
you get to pick so the the nice thing

00:29:45,000 --> 00:29:50,490
about about pearl critic is it really

00:29:48,000 --> 00:29:53,640
isn't there to be the hammer coming down

00:29:50,490 --> 00:29:56,220
in enforcing rules although it can its

00:29:53,640 --> 00:29:58,170
real purpose and along with the pearl

00:29:56,220 --> 00:30:01,800
best practices book is to make aware of

00:29:58,170 --> 00:30:03,630
the potential problems you know where

00:30:01,800 --> 00:30:06,210
are the things that we can run into that

00:30:03,630 --> 00:30:08,460
are a problem and it gets us to start

00:30:06,210 --> 00:30:15,660
talking about them on our development

00:30:08,460 --> 00:30:18,090
teams unfortunately or maybe fortunately

00:30:15,660 --> 00:30:20,730
what I've seen happen with pearl critic

00:30:18,090 --> 00:30:24,350
is it gets automated as part of the

00:30:20,730 --> 00:30:30,390
source management system and then

00:30:24,350 --> 00:30:35,180
ignored so one place I worked we had the

00:30:30,390 --> 00:30:38,310
pearl critic would take a score of our

00:30:35,180 --> 00:30:40,290
code each particular module and then it

00:30:38,310 --> 00:30:42,120
would record that score and then the

00:30:40,290 --> 00:30:43,620
next time we modified it would it would

00:30:42,120 --> 00:30:47,120
compare it against the previous score if

00:30:43,620 --> 00:30:52,230
we got a worse score than it would

00:30:47,120 --> 00:30:54,840
complain and the build would fail we

00:30:52,230 --> 00:30:56,620
didn't like that too much

00:30:54,840 --> 00:30:58,420
especially when you're walking out the

00:30:56,620 --> 00:31:00,160
door you check in your code within your

00:30:58,420 --> 00:31:01,600
you're walking out the door and all

00:31:00,160 --> 00:31:06,520
sudden the build fails and you get a

00:31:01,600 --> 00:31:08,770
call saying you broke the build yeah we

00:31:06,520 --> 00:31:11,890
had people in India that would be

00:31:08,770 --> 00:31:14,590
basically stuck until the next day until

00:31:11,890 --> 00:31:18,970
we could fix the build so that was a

00:31:14,590 --> 00:31:20,320
problem so generally what ends up

00:31:18,970 --> 00:31:24,550
happening like where I'm currently

00:31:20,320 --> 00:31:26,770
working we we use pro critic but its

00:31:24,550 --> 00:31:32,380
advisory only it never stops anything

00:31:26,770 --> 00:31:34,240
from completing and it's in but most

00:31:32,380 --> 00:31:37,090
places I've ever worked if we use pro

00:31:34,240 --> 00:31:38,860
critic we ignore it only in the one case

00:31:37,090 --> 00:31:43,180
where it was killed builds did we

00:31:38,860 --> 00:31:45,370
actually pay attention to it but its

00:31:43,180 --> 00:31:47,800
real value just like the real value of

00:31:45,370 --> 00:31:49,780
the Pearl best practices is to get us to

00:31:47,800 --> 00:31:51,580
talk about these things and to realize

00:31:49,780 --> 00:31:58,180
what the issues are that's the real

00:31:51,580 --> 00:32:05,040
point of this stuff so do you have any

00:31:58,180 --> 00:32:05,040
questions or rants yes

00:32:12,540 --> 00:32:28,210
okay yeah yeah yeah whoo who needs more

00:32:24,310 --> 00:32:30,190
than 80 columns well usually the person

00:32:28,210 --> 00:32:36,490
is working on your code is you in six

00:32:30,190 --> 00:32:39,100
months but not always not always a 4k

00:32:36,490 --> 00:32:40,960
monitor you know is I've been getting

00:32:39,100 --> 00:32:42,520
older I find my glasses aren't quite

00:32:40,960 --> 00:32:44,920
good enough I used to have these itty

00:32:42,520 --> 00:32:48,850
bitty fonts you know things like under

00:32:44,920 --> 00:32:50,890
the old oh this is more than 20 years

00:32:48,850 --> 00:32:53,790
ago where you could specify the size of

00:32:50,890 --> 00:32:58,360
a font by or the font actually saying

00:32:53,790 --> 00:33:00,130
5x9 yeah you remember those days yeah so

00:32:58,360 --> 00:33:01,900
you had these itty bitty characters and

00:33:00,130 --> 00:33:04,060
boy I could fit a whole ton of stuff on

00:33:01,900 --> 00:33:06,840
the screen I loved it but that was

00:33:04,060 --> 00:33:09,840
before dual monitors and and all that

00:33:06,840 --> 00:33:09,840
yes

00:33:50,640 --> 00:33:59,169
so it'll throw at the bottom of the file

00:33:52,870 --> 00:34:02,010
for you ok so for release purposes you

00:33:59,169 --> 00:34:02,010
can you can do that

00:34:12,899 --> 00:34:25,889
and what's the name of that again pod

00:34:17,129 --> 00:34:32,299
Weaver that's that that's cool I like

00:34:25,889 --> 00:34:32,299
that idea it mess up your line numbers

00:35:05,620 --> 00:35:11,080
okay good idea yes Steve

00:35:52,670 --> 00:36:13,470
yes we did not play with those it wasn't

00:36:09,960 --> 00:36:17,339
that important to us it was when we

00:36:13,470 --> 00:36:19,890
implemented the the moose stuff it was

00:36:17,339 --> 00:36:24,690
more as an experiment to see how it

00:36:19,890 --> 00:36:26,430
worked just to try it and we didn't like

00:36:24,690 --> 00:36:28,740
the way the code looked that much and

00:36:26,430 --> 00:36:30,089
being heavyweight startup we just

00:36:28,740 --> 00:36:31,799
thought that's not worth the bother of

00:36:30,089 --> 00:36:33,720
right now so we just dropped it at that

00:36:31,799 --> 00:36:34,980
point and I think a lot of places did

00:36:33,720 --> 00:36:37,640
that where work right now we actually

00:36:34,980 --> 00:36:40,529
are forbidden to use any of that stuff

00:36:37,640 --> 00:36:42,270
even the lighter weight just because the

00:36:40,529 --> 00:36:44,880
the startup performance hits we have

00:36:42,270 --> 00:36:48,200
because we have so much running on so

00:36:44,880 --> 00:36:53,809
many different systems is a big issue

00:36:48,200 --> 00:36:53,809
okay like two rows from the back yes you

00:37:02,580 --> 00:37:25,480
ya know we have a lot of turkey stuff we

00:37:13,869 --> 00:37:30,640
do yeah I can't say too much actually

00:37:25,480 --> 00:37:32,550
but it it we're using Perl to basically

00:37:30,640 --> 00:37:38,440
manage a whole bunch of servers and

00:37:32,550 --> 00:37:40,330
virtual servers and the the the hit if

00:37:38,440 --> 00:37:44,080
you know if it takes 20 seconds to start

00:37:40,330 --> 00:37:47,260
up a script that's way too long you know

00:37:44,080 --> 00:37:48,790
if it takes two seconds we might be able

00:37:47,260 --> 00:37:50,980
live with that for certain things but

00:37:48,790 --> 00:38:04,359
other things that's too long just

00:37:50,980 --> 00:38:07,660
depends yes this primary goal a new was

00:38:04,359 --> 00:38:11,260
to defer that startup expense to run

00:38:07,660 --> 00:38:13,500
fine so anybody recent wants them or

00:38:11,260 --> 00:38:13,500
this

00:38:16,450 --> 00:38:27,650
only you're kidding me yeah yeah if you

00:38:25,250 --> 00:38:29,690
can't break through the whole book best

00:38:27,650 --> 00:38:43,880
practices all like

00:38:29,690 --> 00:38:46,060
I the best practices good idea yes in

00:38:43,880 --> 00:38:46,060
the back

00:39:00,780 --> 00:39:03,230
better

00:39:22,589 --> 00:39:25,969
the alignment

00:39:30,630 --> 00:39:49,039
yes right yeah good options good options

00:39:45,440 --> 00:39:53,390
anyone else more rants more questions

00:39:49,039 --> 00:39:53,390
anyone want to berate me okay go ahead

00:40:11,450 --> 00:40:15,960
there's that part of the process that

00:40:13,829 --> 00:40:16,979
yeah we have to retrain if we're going

00:40:15,960 --> 00:40:20,809
to do something a little different that

00:40:16,979 --> 00:40:20,809
that does create problems yes

00:40:43,480 --> 00:40:48,010
well thank you and that's I think one of

00:40:46,540 --> 00:40:50,500
the big things everybody should come out

00:40:48,010 --> 00:40:54,520
of this with is that best practices are

00:40:50,500 --> 00:40:56,470
recommendation not a rule and that the

00:40:54,520 --> 00:41:45,480
end that they change and they need to

00:40:56,470 --> 00:41:47,560
change yes I go both ways on that I can

00:41:45,480 --> 00:41:50,350
sometimes I think it makes perfect sense

00:41:47,560 --> 00:41:53,140
and other teams times I look at it and

00:41:50,350 --> 00:41:55,930
then going what in the world it just

00:41:53,140 --> 00:41:59,260
depends on what it is and I'm I tend to

00:41:55,930 --> 00:42:02,290
not like unless and until I keep having

00:41:59,260 --> 00:42:06,580
to translate them in my head into if not

00:42:02,290 --> 00:42:08,440
or while not because I think most of us

00:42:06,580 --> 00:42:12,460
are not used to that we're used to just

00:42:08,440 --> 00:42:16,410
if and while it takes some getting used

00:42:12,460 --> 00:42:16,410
to with some of these things and

00:42:30,050 --> 00:42:36,360
yeah and that makes sense and Pearl was

00:42:33,360 --> 00:42:40,080
was designed to read like English so

00:42:36,360 --> 00:42:42,740
that it would make sense problems most

00:42:40,080 --> 00:42:45,060
of us don't think that way all the time

00:42:42,740 --> 00:42:48,620
so that that makes a little it takes

00:42:45,060 --> 00:42:48,620
some getting used to yeah

00:42:57,820 --> 00:43:04,820
also you indent the if or the unless

00:43:01,100 --> 00:43:17,690
then on the next line interesting yeah

00:43:04,820 --> 00:43:37,040
that's a good idea haha yeah oh right

00:43:17,690 --> 00:43:38,570
here yes that's that's a really good

00:43:37,040 --> 00:43:39,650
point the more stuff you have to keep in

00:43:38,570 --> 00:43:43,390
your head the worse off you're going to

00:43:39,650 --> 00:43:46,390
be so yeah that's that's a good point

00:43:43,390 --> 00:43:46,390
yes

00:43:51,559 --> 00:44:11,869
oh thank you thank you anyone else we

00:44:05,749 --> 00:44:15,759
had a couple more minutes okay that's it

00:44:11,869 --> 00:44:15,759
thank you thanks for being here

00:44:20,979 --> 00:44:25,449
appreciate appreciate everyone's

00:44:23,209 --> 00:44:25,449

YouTube URL: https://www.youtube.com/watch?v=KRVhuAs-CEk


