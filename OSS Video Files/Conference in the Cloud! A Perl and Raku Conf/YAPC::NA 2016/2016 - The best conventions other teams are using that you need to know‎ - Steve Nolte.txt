Title: 2016 - The best conventions other teams are using that you need to knowâ€Ž - Steve Nolte
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,050 --> 00:00:05,520
hi will camera guy you get ready start

00:00:03,290 --> 00:00:07,980
all right let's get sorry because I want

00:00:05,520 --> 00:00:10,139
to kind of run to these slides all

00:00:07,980 --> 00:00:11,519
rights and welcome to my talk the best

00:00:10,139 --> 00:00:13,950
conventions other teams are using that

00:00:11,519 --> 00:00:17,550
you need to know which I heard from some

00:00:13,950 --> 00:00:18,990
guy my name is Steve Nolte but I'm in by

00:00:17,550 --> 00:00:20,850
no means an expert on this subject I

00:00:18,990 --> 00:00:22,500
just selfishly want to do a talk on

00:00:20,850 --> 00:00:24,390
these kinds of things because I find

00:00:22,500 --> 00:00:25,500
them fascinating there's a lot of really

00:00:24,390 --> 00:00:27,390
cool things going on in the pro

00:00:25,500 --> 00:00:29,099
community and also other communities not

00:00:27,390 --> 00:00:30,720
just pearl that I think everyone should

00:00:29,099 --> 00:00:31,560
know about and that's one of the reasons

00:00:30,720 --> 00:00:33,570
that come to the apps i want to hear

00:00:31,560 --> 00:00:35,130
what other people are doing so for my

00:00:33,570 --> 00:00:37,320
day job I work at assurance where I lead

00:00:35,130 --> 00:00:39,660
a dev team of pro developers on a modern

00:00:37,320 --> 00:00:41,460
web application and also living in

00:00:39,660 --> 00:00:43,050
Milwaukee I resurrected the milwaukee

00:00:41,460 --> 00:00:44,879
perl mongers about three years ago and

00:00:43,050 --> 00:00:46,800
has been going strong so quick shout-out

00:00:44,879 --> 00:00:48,600
to all those people that gave a remote

00:00:46,800 --> 00:00:51,750
talk for our mongers group it's been a

00:00:48,600 --> 00:00:52,530
great way to get great speakers so like

00:00:51,750 --> 00:00:55,350
I said I want to run through these

00:00:52,530 --> 00:00:57,480
slides and then hopefully reserve some

00:00:55,350 --> 00:00:59,760
time at the end for comments and also

00:00:57,480 --> 00:01:01,410
excuses because what I found out in my

00:00:59,760 --> 00:01:03,239
research was that there's a lot of cool

00:01:01,410 --> 00:01:04,830
tools but there's a lot of excuses for

00:01:03,239 --> 00:01:07,680
reasons not to use them so I want to

00:01:04,830 --> 00:01:08,610
hear what your excuses are so the

00:01:07,680 --> 00:01:11,400
obvious question why do we need

00:01:08,610 --> 00:01:13,680
conventions simple answer is there's

00:01:11,400 --> 00:01:16,170
problems we're not perfect so the idea

00:01:13,680 --> 00:01:18,659
is conventions help us stay on track say

00:01:16,170 --> 00:01:19,530
on the same page and so one of those

00:01:18,659 --> 00:01:22,770
some of the problems that we run up

00:01:19,530 --> 00:01:27,630
against I think this guy embodies some

00:01:22,770 --> 00:01:31,170
of those problems yeah he thinks he

00:01:27,630 --> 00:01:32,820
knows more than he does he writes some

00:01:31,170 --> 00:01:35,340
weird things you'll see him write things

00:01:32,820 --> 00:01:37,560
like a map and void context it's just

00:01:35,340 --> 00:01:40,759
kind of confusing dangerous things like

00:01:37,560 --> 00:01:43,860
conditional declarations and auto mode

00:01:40,759 --> 00:01:45,420
why if anyone has a good use for auto

00:01:43,860 --> 00:01:48,329
let me know I'm sure there is something

00:01:45,420 --> 00:01:50,070
but it's just it's just confusing so a

00:01:48,329 --> 00:01:52,680
friend of mine gave a good really good

00:01:50,070 --> 00:01:54,360
wait a way to put this using tools is a

00:01:52,680 --> 00:01:55,829
great way to avoid holy wars and that's

00:01:54,360 --> 00:01:58,710
going to be a reoccurring theme to this

00:01:55,829 --> 00:02:00,270
talk and so if you haven't guessed by

00:01:58,710 --> 00:02:01,380
now the obvious answer to almost the

00:02:00,270 --> 00:02:03,360
first three problems is using Perl

00:02:01,380 --> 00:02:05,009
critic I'm sure some of you are about to

00:02:03,360 --> 00:02:06,420
puke after all the times you've heard

00:02:05,009 --> 00:02:08,640
pro critic talked about this conference

00:02:06,420 --> 00:02:10,170
but it really is a great tool and of

00:02:08,640 --> 00:02:11,489
course writing core there's three

00:02:10,170 --> 00:02:12,989
policies that right off the bed will

00:02:11,489 --> 00:02:13,890
warn you about those things I show

00:02:12,989 --> 00:02:15,480
before

00:02:13,890 --> 00:02:17,610
but I can't stress enough that there's

00:02:15,480 --> 00:02:20,459
so much more than pearl or the then the

00:02:17,610 --> 00:02:21,990
core inside of Pro critic check out all

00:02:20,459 --> 00:02:23,160
the different policies there are out

00:02:21,990 --> 00:02:24,720
there I mean I learned this week that

00:02:23,160 --> 00:02:27,270
booking is work on working on their own

00:02:24,720 --> 00:02:29,280
policies and if you go to a task pearl

00:02:27,270 --> 00:02:31,050
critic the module you'll see a package

00:02:29,280 --> 00:02:34,110
you see all these other links to the

00:02:31,050 --> 00:02:35,970
other great policies that are available

00:02:34,110 --> 00:02:37,410
to you now notice I said available to

00:02:35,970 --> 00:02:38,790
you if there's absolutely no reason to

00:02:37,410 --> 00:02:40,739
use all these different policies but

00:02:38,790 --> 00:02:42,060
pick and choose which ones you like I

00:02:40,739 --> 00:02:43,080
think you'll find something that's going

00:02:42,060 --> 00:02:45,450
to fit almost everything you're

00:02:43,080 --> 00:02:46,530
concerned about well maybe not I'm the

00:02:45,450 --> 00:02:48,690
other common tool that always comes up

00:02:46,530 --> 00:02:49,620
is pearl tidy obviously I'm not going to

00:02:48,690 --> 00:02:50,970
go through all the different bells and

00:02:49,620 --> 00:02:53,970
whistles you can tweak to make pro tidy

00:02:50,970 --> 00:02:55,019
work for you but one thing I thought I

00:02:53,970 --> 00:02:57,420
would take the opportunity to point out

00:02:55,019 --> 00:02:59,489
is that you know everyone knows how

00:02:57,420 --> 00:03:00,900
protei does a great job of like spacing

00:02:59,489 --> 00:03:02,820
things like when you have a line of code

00:03:00,900 --> 00:03:04,920
like this it does a great job of now

00:03:02,820 --> 00:03:06,300
expanding things to have a consistent

00:03:04,920 --> 00:03:09,030
spacing around like the parentheses and

00:03:06,300 --> 00:03:11,430
the parameters right but also you can

00:03:09,030 --> 00:03:12,810
influence the way pro tidy works and I'm

00:03:11,430 --> 00:03:15,180
sure a lot of you know this but in case

00:03:12,810 --> 00:03:17,250
you don't so in this case I put a line

00:03:15,180 --> 00:03:19,440
break after the comma and now pro teddy

00:03:17,250 --> 00:03:21,480
is influenced by that and so now when I

00:03:19,440 --> 00:03:22,650
format my code it does actually retain

00:03:21,480 --> 00:03:25,680
that line break and now we can actually

00:03:22,650 --> 00:03:27,090
have consistent spacing because I really

00:03:25,680 --> 00:03:29,100
like having like in my DBS class

00:03:27,090 --> 00:03:30,630
relationships to find the name on the

00:03:29,100 --> 00:03:32,730
first line and then the actual explicit

00:03:30,630 --> 00:03:33,870
declaration on the second line I would

00:03:32,730 --> 00:03:35,340
sometimes like its really annoying the

00:03:33,870 --> 00:03:37,650
way pro tight he does things because in

00:03:35,340 --> 00:03:39,690
my column definitions for example I try

00:03:37,650 --> 00:03:40,620
to influence it with a line break but

00:03:39,690 --> 00:03:43,290
then you know what happens when you

00:03:40,620 --> 00:03:45,810
format this code it actually gets slurp

00:03:43,290 --> 00:03:48,329
right back up into the previous line so

00:03:45,810 --> 00:03:50,010
that gets really annoying so my tip if

00:03:48,329 --> 00:03:51,870
you guys ever had that problem is just

00:03:50,010 --> 00:03:54,060
put an extra line break in there and it

00:03:51,870 --> 00:04:02,790
actually does get respected by pearl

00:03:54,060 --> 00:04:03,930
tidy and then it'll say they're so so in

00:04:02,790 --> 00:04:05,489
my research I did a little bit of

00:04:03,930 --> 00:04:06,690
researching by sending out a survey to a

00:04:05,489 --> 00:04:10,380
bunch of my friends they send better

00:04:06,690 --> 00:04:12,390
friends and came back with results one

00:04:10,380 --> 00:04:14,280
of the kind of surprising things was

00:04:12,390 --> 00:04:16,260
that you know we had a lot of people who

00:04:14,280 --> 00:04:17,700
use Pro tight and pro critic you know

00:04:16,260 --> 00:04:20,549
the user wants a while but it's not

00:04:17,700 --> 00:04:22,169
enforced by their team the actual number

00:04:20,549 --> 00:04:24,870
of people that actually use and enforces

00:04:22,169 --> 00:04:26,550
very very small and then there's just

00:04:24,870 --> 00:04:27,440
overwhelming majority of people just

00:04:26,550 --> 00:04:29,660
don't use it at all

00:04:27,440 --> 00:04:31,760
um but you know everyone knows about it

00:04:29,660 --> 00:04:33,830
so again I'm really trying to figure out

00:04:31,760 --> 00:04:35,660
like where's that happy medium where you

00:04:33,830 --> 00:04:37,490
want to enforce things but not get in

00:04:35,660 --> 00:04:39,260
people's way high so a lot of the

00:04:37,490 --> 00:04:40,550
excuses I heard were like oh it's too

00:04:39,260 --> 00:04:42,740
slow and I totally agree with that

00:04:40,550 --> 00:04:45,920
there's some plugins for like vim that

00:04:42,740 --> 00:04:47,210
can do automatic real-time pro critic

00:04:45,920 --> 00:04:48,830
checking for example when you save your

00:04:47,210 --> 00:04:50,450
file but you know if you work on a

00:04:48,830 --> 00:04:52,220
project anywhere the size of mine it

00:04:50,450 --> 00:04:53,960
just takes five seconds and that's just

00:04:52,220 --> 00:04:56,570
way too long to run a pro critic you

00:04:53,960 --> 00:04:59,270
don't want to wait that long or maybe

00:04:56,570 --> 00:05:01,370
five seconds as long for you but maybe

00:04:59,270 --> 00:05:03,260
we just had too much code but another

00:05:01,370 --> 00:05:04,700
excuse is that we have a lot of legacy

00:05:03,260 --> 00:05:06,560
code that has never gone through any

00:05:04,700 --> 00:05:08,030
kind of pro critic policy checks so now

00:05:06,560 --> 00:05:09,230
every time I run my pro click on this

00:05:08,030 --> 00:05:11,720
code it complains about things from

00:05:09,230 --> 00:05:13,160
years ago and so I don't have a lot of

00:05:11,720 --> 00:05:14,420
good suggestions on that and I'm really

00:05:13,160 --> 00:05:15,920
interested in any suggestions that

00:05:14,420 --> 00:05:17,690
people have the only thing I could come

00:05:15,920 --> 00:05:19,730
up with is try to come up with like a

00:05:17,690 --> 00:05:21,560
new way to put functionality in new

00:05:19,730 --> 00:05:25,450
classes or roles that you then bring in

00:05:21,560 --> 00:05:27,490
so that that new package is able to be

00:05:25,450 --> 00:05:29,720
checked with pro critic from the start

00:05:27,490 --> 00:05:31,400
some other excuses for now using Pro

00:05:29,720 --> 00:05:33,530
tidy and makes for some really noisy

00:05:31,400 --> 00:05:35,480
diffs yeah you can't argue with that but

00:05:33,530 --> 00:05:36,680
what we always tell our team name

00:05:35,480 --> 00:05:38,750
teammates is that if you're working with

00:05:36,680 --> 00:05:41,030
some legacy code make a separate commit

00:05:38,750 --> 00:05:42,530
for the pro critic I'm sorry the pro

00:05:41,030 --> 00:05:43,610
tidy because then you don't do any

00:05:42,530 --> 00:05:45,320
functional changes people can just

00:05:43,610 --> 00:05:47,600
ignore that part of a code review and

00:05:45,320 --> 00:05:50,000
then do you separate functional changes

00:05:47,600 --> 00:05:54,169
in a separate commit and then finally

00:05:50,000 --> 00:05:55,700
just if you are just really kind of you

00:05:54,169 --> 00:05:57,110
can't match exists in formatting

00:05:55,700 --> 00:06:00,190
sometimes it's just time to rip off the

00:05:57,110 --> 00:06:01,669
band-aid and just do a mass protest

00:06:00,190 --> 00:06:04,540
obviously that doesn't work for

00:06:01,669 --> 00:06:06,740
everything but you know see what works I

00:06:04,540 --> 00:06:07,760
it's it's important to point out there's

00:06:06,740 --> 00:06:10,490
a lot of cool things in other

00:06:07,760 --> 00:06:12,919
communities and it's actually kind of

00:06:10,490 --> 00:06:14,990
interesting to see like when I talk to

00:06:12,919 --> 00:06:17,450
people about Python and JavaScript it's

00:06:14,990 --> 00:06:18,740
it's very well known that they have some

00:06:17,450 --> 00:06:22,610
standards that are followed by a lot of

00:06:18,740 --> 00:06:23,810
their their community members in python

00:06:22,610 --> 00:06:24,860
is pep aids I'm sure a lot of you have

00:06:23,810 --> 00:06:27,650
heard of ads and they have tools like

00:06:24,860 --> 00:06:29,480
fly gates and force those things which

00:06:27,650 --> 00:06:30,800
is it's just kind of surprising I think

00:06:29,480 --> 00:06:32,930
we need to be more proud of the tools

00:06:30,800 --> 00:06:34,610
that we have in / like pearl practices

00:06:32,930 --> 00:06:37,010
which sure it's dated and there's been

00:06:34,610 --> 00:06:38,370
talks is week already talking about some

00:06:37,010 --> 00:06:40,260
updates that should be made but

00:06:38,370 --> 00:06:41,940
we have some really great tools that we

00:06:40,260 --> 00:06:44,190
should be proud of and it's too bad that

00:06:41,940 --> 00:06:45,419
people stop talking about them I think

00:06:44,190 --> 00:06:46,620
that's the only reason why people think

00:06:45,419 --> 00:06:48,740
the other tools are better it's just

00:06:46,620 --> 00:06:52,680
there's more communication going on but

00:06:48,740 --> 00:06:54,900
yeah so how do we actually enforce on

00:06:52,680 --> 00:06:57,210
these things number one you have to

00:06:54,900 --> 00:06:58,889
configure it if you don't get everyone

00:06:57,210 --> 00:07:00,030
on the same page and configure it well

00:06:58,889 --> 00:07:02,729
then you just add the problem where

00:07:00,030 --> 00:07:04,979
people don't know what to follow so one

00:07:02,729 --> 00:07:07,470
surprising thing that I find is that a

00:07:04,979 --> 00:07:09,600
lot of people do not commit their their

00:07:07,470 --> 00:07:11,729
config files into their repository so

00:07:09,600 --> 00:07:13,470
kind of a quick survey how many people

00:07:11,729 --> 00:07:17,400
actually commit their critic policies

00:07:13,470 --> 00:07:18,479
and tidies into their repository so

00:07:17,400 --> 00:07:21,539
that's kind of what i thought a very

00:07:18,479 --> 00:07:22,979
small number I mean why not I mean if

00:07:21,539 --> 00:07:25,169
you're going to encourage your team to

00:07:22,979 --> 00:07:29,460
do it the same way get that config into

00:07:25,169 --> 00:07:30,660
the repository then there's no excuse so

00:07:29,460 --> 00:07:32,340
now there's some other things that you

00:07:30,660 --> 00:07:33,720
come across like for example we have a

00:07:32,340 --> 00:07:35,160
lot of llamo files that were used for

00:07:33,720 --> 00:07:37,139
see data with our database there's

00:07:35,160 --> 00:07:38,400
really not a formatter that will

00:07:37,139 --> 00:07:39,960
automatically format it unless I'm

00:07:38,400 --> 00:07:41,699
missing something but there's a great

00:07:39,960 --> 00:07:43,260
plugin out there or a plug-in framework

00:07:41,699 --> 00:07:45,870
called editor config it works it just

00:07:43,260 --> 00:07:47,610
about all the most useful editors out

00:07:45,870 --> 00:07:49,560
there where you can actually define one

00:07:47,610 --> 00:07:51,090
config file and all the editors are

00:07:49,560 --> 00:07:54,720
automatically configured to do the same

00:07:51,090 --> 00:07:55,979
you know spaces or tabs your choice how

00:07:54,720 --> 00:07:58,229
do you want to display the indent size

00:07:55,979 --> 00:08:01,020
of your tabs so no more arguing over

00:07:58,229 --> 00:08:03,479
taser taser tab services spaces it just

00:08:01,020 --> 00:08:06,000
does it for you and so again just commit

00:08:03,479 --> 00:08:07,169
that into your repository and now the

00:08:06,000 --> 00:08:08,849
thing is though you have to make people

00:08:07,169 --> 00:08:11,160
use it though so the obvious solution

00:08:08,849 --> 00:08:13,199
hear that a lot of people who do enforce

00:08:11,160 --> 00:08:14,460
it or using these get pre-commit hooks

00:08:13,199 --> 00:08:17,970
to make sure that people follow these

00:08:14,460 --> 00:08:21,120
policies right the thing is on our team

00:08:17,970 --> 00:08:23,130
we have some pro sorry we have some get

00:08:21,120 --> 00:08:24,750
pre-commit hooks that are available but

00:08:23,130 --> 00:08:26,729
and talking to my developers in all

00:08:24,750 --> 00:08:28,229
hours even set them up so you have to

00:08:26,729 --> 00:08:30,990
make sure not only is it easy to set up

00:08:28,229 --> 00:08:32,849
it's super easy to set up and also make

00:08:30,990 --> 00:08:34,260
sure they actually do it because even

00:08:32,849 --> 00:08:37,050
though is there you can't guarantee they

00:08:34,260 --> 00:08:38,820
do it one thing that I haven't found is

00:08:37,050 --> 00:08:40,169
a way to automatically set up these get

00:08:38,820 --> 00:08:41,909
host has anyone found a way to

00:08:40,169 --> 00:08:43,680
automatically set up get hooks when you

00:08:41,909 --> 00:08:46,290
either clone a repository or pulled on

00:08:43,680 --> 00:08:47,280
commits if you if anyone knows of

00:08:46,290 --> 00:08:48,959
anything I'd love to hear about it

00:08:47,280 --> 00:08:50,130
because it's just not automatic yet so

00:08:48,959 --> 00:08:52,329
that'd be kind of cool to hear about

00:08:50,130 --> 00:08:53,559
something and so then I

00:08:52,329 --> 00:08:55,509
so consider a framework that makes it

00:08:53,559 --> 00:08:57,939
super easy to write your hooks there's

00:08:55,509 --> 00:08:59,829
one I found called app get hooks I can't

00:08:57,939 --> 00:09:02,829
pronounce his name so I'm sorry but it's

00:08:59,829 --> 00:09:04,059
French and he has hopes to config all

00:09:02,829 --> 00:09:05,739
the different good hooks and then you

00:09:04,059 --> 00:09:06,939
can just write pearl code to do it and I

00:09:05,739 --> 00:09:10,119
think it looks really pretty with these

00:09:06,939 --> 00:09:12,759
nice it shows you verbose of what it's

00:09:10,119 --> 00:09:14,949
doing so it makes you uh you know

00:09:12,759 --> 00:09:16,809
comfortable and feel good knowing that's

00:09:14,949 --> 00:09:18,279
doing different things and one of my

00:09:16,809 --> 00:09:20,649
favorite plugins that it has is ability

00:09:18,279 --> 00:09:22,480
to check on that your commit messages

00:09:20,649 --> 00:09:26,199
actually have a ticket idea with them as

00:09:22,480 --> 00:09:27,910
that brings me to my next topic yeah

00:09:26,199 --> 00:09:29,470
guys like this you just love computering

00:09:27,910 --> 00:09:30,999
all day and it just commit happy to

00:09:29,470 --> 00:09:32,829
committing all the time but they get

00:09:30,999 --> 00:09:33,850
kind of sloppy no one's really double

00:09:32,829 --> 00:09:36,790
check and how their commitments just

00:09:33,850 --> 00:09:38,350
look so it starts with a ticketing

00:09:36,790 --> 00:09:39,790
system though everyone has a ticketing

00:09:38,350 --> 00:09:40,989
system for the most part these are the

00:09:39,790 --> 00:09:43,509
most popular ones that I saw in my

00:09:40,989 --> 00:09:44,920
research we used your at my company I

00:09:43,509 --> 00:09:46,089
have a special place in my heart for

00:09:44,920 --> 00:09:47,980
pivotal tracker I think they do some

00:09:46,089 --> 00:09:49,480
great things but all these things have

00:09:47,980 --> 00:09:51,759
the same feature they have a ticket ID

00:09:49,480 --> 00:09:53,049
number right and so almost everyone I

00:09:51,759 --> 00:09:55,149
talked to has the same kind of concept

00:09:53,049 --> 00:09:57,489
where when you work on a ticket make a

00:09:55,149 --> 00:09:59,949
separate branch for that ticket and then

00:09:57,489 --> 00:10:02,410
um a lot of people also use a nice

00:09:59,949 --> 00:10:03,639
prefix the prefix is great for being

00:10:02,410 --> 00:10:04,809
able to quickly find the branches you're

00:10:03,639 --> 00:10:06,819
looking for and also triggering your

00:10:04,809 --> 00:10:09,489
your build system to find which branch

00:10:06,819 --> 00:10:12,429
is automatically billed or lots of

00:10:09,489 --> 00:10:13,689
different reasons but with that ticket

00:10:12,429 --> 00:10:17,230
ID that's where you can actually start

00:10:13,689 --> 00:10:18,790
doing some nice things in general what I

00:10:17,230 --> 00:10:20,410
found was like most people using the get

00:10:18,790 --> 00:10:23,379
flow model how many people know the get

00:10:20,410 --> 00:10:24,999
flow branch and model okay the majority

00:10:23,379 --> 00:10:26,470
of you I'll skip over explaining this

00:10:24,999 --> 00:10:30,220
one thing I'll point out though is that

00:10:26,470 --> 00:10:31,660
my team found that a nice tweak to this

00:10:30,220 --> 00:10:33,549
model is that instead of branching off

00:10:31,660 --> 00:10:35,350
of the develop ranch kind of melting pot

00:10:33,549 --> 00:10:37,869
for the next release we said branch off

00:10:35,350 --> 00:10:40,239
of master the reason for that is if you

00:10:37,869 --> 00:10:41,739
ever have any kind of feature or bug fix

00:10:40,239 --> 00:10:43,569
that has to get reverted from the Astra

00:10:41,739 --> 00:10:45,489
lease if you're branching off of another

00:10:43,569 --> 00:10:47,709
branch that has all those melting pot

00:10:45,489 --> 00:10:49,569
commits when I polluted every other

00:10:47,709 --> 00:10:51,249
branch that started from that melting

00:10:49,569 --> 00:10:52,209
pot branch if you start from master

00:10:51,249 --> 00:10:54,220
which represents everything that's

00:10:52,209 --> 00:10:55,569
currently in production there's no risk

00:10:54,220 --> 00:10:57,999
of polluting your other branches because

00:10:55,569 --> 00:10:59,529
that cleanup is just ridiculous if you

00:10:57,999 --> 00:11:01,600
want to follow get flow specifically you

00:10:59,529 --> 00:11:03,459
can use tools like get hype and flow

00:11:01,600 --> 00:11:05,590
which is a nice command-line interface

00:11:03,459 --> 00:11:07,330
to using these rules it has all sorts

00:11:05,590 --> 00:11:08,410
nice little helpers I person don't care

00:11:07,330 --> 00:11:10,270
for because I like knowing what i'm

00:11:08,410 --> 00:11:12,600
doing with get but it's there for you if

00:11:10,270 --> 00:11:14,290
you want to have some training wheels

00:11:12,600 --> 00:11:16,420
but then when you start talking about

00:11:14,290 --> 00:11:18,190
like commit conventions it's really big

00:11:16,420 --> 00:11:21,040
on my team that we actually use the same

00:11:18,190 --> 00:11:22,720
style for the messages and it is also

00:11:21,040 --> 00:11:26,590
apparent in a lot of other teams as well

00:11:22,720 --> 00:11:28,690
there's a nice blog post by Tim poopoo

00:11:26,590 --> 00:11:31,240
was talking about what's a really good

00:11:28,690 --> 00:11:32,350
format for the messages and the most

00:11:31,240 --> 00:11:34,210
important things I found that the

00:11:32,350 --> 00:11:36,550
subject line needs to be very short if

00:11:34,210 --> 00:11:37,990
you can fit the description of your

00:11:36,550 --> 00:11:39,730
commit in fifty to sixty nine characters

00:11:37,990 --> 00:11:41,860
gents are really good you need to make a

00:11:39,730 --> 00:11:43,690
separate commit because it's too big but

00:11:41,860 --> 00:11:45,460
then also the imperative mood is super

00:11:43,690 --> 00:11:47,320
important on my team what that means is

00:11:45,460 --> 00:11:49,030
that instead of saying like fixed a bug

00:11:47,320 --> 00:11:52,240
or some of that something like that you

00:11:49,030 --> 00:11:55,720
stand like update preferences to match

00:11:52,240 --> 00:11:57,040
whatever feature that mood that

00:11:55,720 --> 00:11:59,530
imperative mood is used by other

00:11:57,040 --> 00:12:00,970
automatic get commits or get commit

00:11:59,530 --> 00:12:03,820
messages and so when you keep it

00:12:00,970 --> 00:12:05,170
consistent not just between yourself and

00:12:03,820 --> 00:12:06,250
get and all your developers it just

00:12:05,170 --> 00:12:08,200
makes it so much easier to read across

00:12:06,250 --> 00:12:09,850
the board and finally that ticket number

00:12:08,200 --> 00:12:11,290
is so important you got to make sure

00:12:09,850 --> 00:12:14,050
that ticket number for whatever tracking

00:12:11,290 --> 00:12:15,970
system you have is in that commit

00:12:14,050 --> 00:12:17,740
message so how do you enforce that again

00:12:15,970 --> 00:12:20,830
back to the commits pre-commit hook

00:12:17,740 --> 00:12:23,290
stuff there's a lot of other tools on

00:12:20,830 --> 00:12:24,220
CPM to do similar things but you've got

00:12:23,290 --> 00:12:25,390
to make sure you do that ticket

00:12:24,220 --> 00:12:27,310
validation that I think is the most

00:12:25,390 --> 00:12:28,960
important thing and not just simple

00:12:27,310 --> 00:12:30,880
ticket validation where you pull the

00:12:28,960 --> 00:12:32,890
ticket ID from the branch I think a lot

00:12:30,880 --> 00:12:34,120
of people use that technique where oh my

00:12:32,890 --> 00:12:35,320
ticket ideas in the branch let's

00:12:34,120 --> 00:12:37,240
automatically dump it into my commit

00:12:35,320 --> 00:12:39,940
message you need to do a live ticket

00:12:37,240 --> 00:12:40,990
analysis where is this ticket truly

00:12:39,940 --> 00:12:42,820
something that's checked out to me and

00:12:40,990 --> 00:12:44,860
something for me to work on if you don't

00:12:42,820 --> 00:12:46,210
do that and you commit them the wrong

00:12:44,860 --> 00:12:48,700
ticket number which my team has done all

00:12:46,210 --> 00:12:49,810
the time you can't rewrite history so

00:12:48,700 --> 00:12:52,030
when you're going back to look at the

00:12:49,810 --> 00:12:53,410
previous mistakes that or not mistakes

00:12:52,030 --> 00:12:54,760
but you're blaming the code to see what

00:12:53,410 --> 00:12:56,050
happened in the past if you got the

00:12:54,760 --> 00:12:57,610
wrong ticket number you can't go back to

00:12:56,050 --> 00:12:58,720
the right source of that change so

00:12:57,610 --> 00:13:00,760
really make sure that you have some

00:12:58,720 --> 00:13:03,520
actual decent checking of those ticket

00:13:00,760 --> 00:13:05,710
numbers also remotely what I was talking

00:13:03,520 --> 00:13:07,720
about is just local but you can use the

00:13:05,710 --> 00:13:09,940
pre receive folks on your get hosting

00:13:07,720 --> 00:13:12,190
server we use stash which is now called

00:13:09,940 --> 00:13:13,750
bitbucket they merge the two you can

00:13:12,190 --> 00:13:15,460
have these plugins that automatically

00:13:13,750 --> 00:13:17,110
verify that whatever commits are being

00:13:15,460 --> 00:13:18,940
pushed you make sure that their tickets

00:13:17,110 --> 00:13:20,290
that are real tickets

00:13:18,940 --> 00:13:21,400
and then it will just completely say

00:13:20,290 --> 00:13:22,660
sorry we're not going to receive your

00:13:21,400 --> 00:13:24,310
push because you have the wrong tickets

00:13:22,660 --> 00:13:27,400
then just rebase your code fix those

00:13:24,310 --> 00:13:29,350
commits and you're good to go also

00:13:27,400 --> 00:13:30,760
there's another tool out there I found

00:13:29,350 --> 00:13:32,680
on sea pen there's just tons of tools

00:13:30,760 --> 00:13:34,630
but this one sounded kind of cool if

00:13:32,680 --> 00:13:37,690
you're familiar cody tidy all anyone not

00:13:34,630 --> 00:13:39,580
from ocoee tidy all sorry not from the

00:13:37,690 --> 00:13:42,100
coat i do a you guys aren't okay

00:13:39,580 --> 00:13:43,480
cotati always kind of like a tool that

00:13:42,100 --> 00:13:44,830
encompasses pretty much all the

00:13:43,480 --> 00:13:47,110
different for matters you could think of

00:13:44,830 --> 00:13:48,750
so it does not only pearl and pro critic

00:13:47,110 --> 00:13:52,030
but also javascript and i think it does

00:13:48,750 --> 00:13:53,920
CSS it's kind of like a way to just say

00:13:52,030 --> 00:13:56,170
don't make me think just tidy everything

00:13:53,920 --> 00:13:57,880
for me and so there's actually another

00:13:56,170 --> 00:14:01,480
piece of that you can install on your

00:13:57,880 --> 00:14:03,040
your host to say whatever configure ad

00:14:01,480 --> 00:14:04,780
for code today all which encompasses all

00:14:03,040 --> 00:14:06,160
those different tools make sure that

00:14:04,780 --> 00:14:08,290
before I push my code eight and make

00:14:06,160 --> 00:14:10,690
sure that passes but my favorite part

00:14:08,290 --> 00:14:12,190
not only does it verify that it has a

00:14:10,690 --> 00:14:14,830
safety because sometimes you just can't

00:14:12,190 --> 00:14:16,540
make sure everything matches the configs

00:14:14,830 --> 00:14:18,070
you have in place if you push the same

00:14:16,540 --> 00:14:19,450
thing three times it says okay fine I

00:14:18,070 --> 00:14:21,220
get it I know it you know what you're

00:14:19,450 --> 00:14:24,190
doing it just lets you do it so it's

00:14:21,220 --> 00:14:25,570
kind of a cool feature and so now we're

00:14:24,190 --> 00:14:27,460
to get into the idea of like pull

00:14:25,570 --> 00:14:31,810
request peer review because static

00:14:27,460 --> 00:14:34,600
analysis can only get you so far lgtm

00:14:31,810 --> 00:14:36,010
that's a common acronym bed companies

00:14:34,600 --> 00:14:40,000
like Google will use for peer review

00:14:36,010 --> 00:14:42,190
it's gotta look good to me because um

00:14:40,000 --> 00:14:43,420
one major reason is going to be catching

00:14:42,190 --> 00:14:46,630
bugs earlier on makes them easier to

00:14:43,420 --> 00:14:48,010
solve right his name is Bruce Johnson he

00:14:46,630 --> 00:14:49,600
works at full story now he used to work

00:14:48,010 --> 00:14:51,520
at Google he wrote a really great

00:14:49,600 --> 00:14:54,670
article on why peer review is important

00:14:51,520 --> 00:14:56,350
this is a sweet graph that came from

00:14:54,670 --> 00:14:57,790
that article just kind of showing like

00:14:56,350 --> 00:15:01,300
how much time you save the early you

00:14:57,790 --> 00:15:02,380
catch a bug this was actually calculated

00:15:01,300 --> 00:15:04,180
from a study that was done a long time

00:15:02,380 --> 00:15:06,310
ago I don't need to get the details but

00:15:04,180 --> 00:15:08,589
it just really is it's a good reminder

00:15:06,310 --> 00:15:10,900
of how the faster you can catch a bug

00:15:08,589 --> 00:15:13,120
the more time you save later but again

00:15:10,900 --> 00:15:15,400
readability is huge if there's one thing

00:15:13,120 --> 00:15:17,560
that I want you guys to leave with in

00:15:15,400 --> 00:15:20,470
this talk is that peer review is meant

00:15:17,560 --> 00:15:22,120
for good readability at the big G Google

00:15:20,470 --> 00:15:23,470
what they have our people that are

00:15:22,120 --> 00:15:25,990
promoted to the status of readability

00:15:23,470 --> 00:15:27,190
experts they're not there to find bugs

00:15:25,990 --> 00:15:29,320
in your code and that's not necessarily

00:15:27,190 --> 00:15:31,490
even find security problems but your

00:15:29,320 --> 00:15:33,380
experts in the language who have proven

00:15:31,490 --> 00:15:34,910
worthy of being able to determine

00:15:33,380 --> 00:15:36,740
whether or not the code you write is

00:15:34,910 --> 00:15:38,870
easy to read because that's so important

00:15:36,740 --> 00:15:40,370
six months from now can you quickly

00:15:38,870 --> 00:15:42,589
understand what that code is doing and

00:15:40,370 --> 00:15:44,420
so you have people that approve your

00:15:42,589 --> 00:15:45,529
code for readability reasons but then

00:15:44,420 --> 00:15:46,700
you also have people that approve your

00:15:45,529 --> 00:15:48,399
code because their owners of that

00:15:46,700 --> 00:15:50,720
project you have two types of reviewers

00:15:48,399 --> 00:15:53,570
so there's lots of high-level tools that

00:15:50,720 --> 00:15:55,070
you can also use to manage peer review

00:15:53,570 --> 00:15:56,810
and pull request Grand Street group has

00:15:55,070 --> 00:15:58,670
built a sweet set of tools called get

00:15:56,810 --> 00:16:00,440
see you can go check that out they have

00:15:58,670 --> 00:16:02,810
this concept of chainset change sets

00:16:00,440 --> 00:16:04,910
where they have tools that manage all of

00:16:02,810 --> 00:16:07,760
them and then a really kind of cool tool

00:16:04,910 --> 00:16:09,020
that I just found out about recently is

00:16:07,760 --> 00:16:11,779
called CODIS eat it's a website where

00:16:09,020 --> 00:16:13,730
it's kind of like you know Travis for

00:16:11,779 --> 00:16:15,230
example where it watches your repo and

00:16:13,730 --> 00:16:17,480
then checks your code for all those

00:16:15,230 --> 00:16:19,430
policies so notice it supports all these

00:16:17,480 --> 00:16:24,440
different languages JavaScript PHP

00:16:19,430 --> 00:16:27,529
Python but embarrassingly it even

00:16:24,440 --> 00:16:29,300
supports CSS but not pearl so I was

00:16:27,529 --> 00:16:32,180
actually in talks with one of the guys

00:16:29,300 --> 00:16:33,440
who works at corte see he's a great

00:16:32,180 --> 00:16:35,510
pearl dev and he's actually working on

00:16:33,440 --> 00:16:38,660
getting some support for pro so look for

00:16:35,510 --> 00:16:40,550
that in the future so now you got to

00:16:38,660 --> 00:16:42,950
think about why do we care about

00:16:40,550 --> 00:16:44,329
readability because how many of you have

00:16:42,950 --> 00:16:47,060
come across code that says how did this

00:16:44,329 --> 00:16:49,399
ever work you know it it's embarrassing

00:16:47,060 --> 00:16:50,959
but it happens so you're always looking

00:16:49,399 --> 00:16:53,480
at how do you make this easy to debug

00:16:50,959 --> 00:16:54,680
and I think one of the most important

00:16:53,480 --> 00:16:57,920
things that you can do as a team is log

00:16:54,680 --> 00:17:01,070
consistently one of the tools that we

00:16:57,920 --> 00:17:02,779
love to use is log any the reason we use

00:17:01,070 --> 00:17:05,929
it is because it has a very nice

00:17:02,779 --> 00:17:09,350
interface you can do things like a easy

00:17:05,929 --> 00:17:11,900
s printf type of logging where all the

00:17:09,350 --> 00:17:13,280
debug airborne fatals they have an F at

00:17:11,900 --> 00:17:15,350
the end as well for our method where it

00:17:13,280 --> 00:17:18,199
just automatically does a data dump on

00:17:15,350 --> 00:17:19,429
that data structure or another nice

00:17:18,199 --> 00:17:21,920
thing is that if you have an undef value

00:17:19,429 --> 00:17:23,000
it actually prints undef in the comments

00:17:21,920 --> 00:17:26,329
so that you know it was a non-death

00:17:23,000 --> 00:17:29,840
value so the point is that for our team

00:17:26,329 --> 00:17:31,790
we don't want to decide how we where we

00:17:29,840 --> 00:17:33,500
send the logs you just log the same way

00:17:31,790 --> 00:17:35,480
every time and then let your application

00:17:33,500 --> 00:17:37,340
decide where to send those log messages

00:17:35,480 --> 00:17:39,860
so under the under the hood we also use

00:17:37,340 --> 00:17:41,610
log for Pearl and then we have

00:17:39,860 --> 00:17:43,169
upendra actually sends it out to a

00:17:41,610 --> 00:17:45,539
service called gray log there's been a

00:17:43,169 --> 00:17:47,789
lot of cool talks in the past that have

00:17:45,539 --> 00:17:49,049
used different services we just like to

00:17:47,789 --> 00:17:50,880
use great log because it was easy to set

00:17:49,049 --> 00:17:52,530
up he's elasticsearch on the back end so

00:17:50,880 --> 00:17:54,059
it's nice and fast but i highly

00:17:52,530 --> 00:17:57,840
recommend you check out Tim bunts who

00:17:54,059 --> 00:17:59,970
wrote this thing to use an elk stack so

00:17:57,840 --> 00:18:01,980
when you're when you're talking about

00:17:59,970 --> 00:18:05,190
looking for bugs and researching those

00:18:01,980 --> 00:18:08,010
problems Steven little from booking he

00:18:05,190 --> 00:18:10,049
gave a great suggestion that you want to

00:18:08,010 --> 00:18:11,370
make your code easy to search you they

00:18:10,049 --> 00:18:12,750
encourage the grep ability of your code

00:18:11,370 --> 00:18:24,539
base so when you're looking for

00:18:12,750 --> 00:18:33,990
something who's that sorry okay all

00:18:24,539 --> 00:18:36,720
right that's good Wow all right that's

00:18:33,990 --> 00:18:38,250
crazy well I'll talk louder so another

00:18:36,720 --> 00:18:41,610
kind of cool tool we use from the

00:18:38,250 --> 00:18:47,490
elastin framework is a accommodation of

00:18:41,610 --> 00:18:54,110
I don't know but is this microphone

00:18:47,490 --> 00:18:58,559
working in here okay all right all right

00:18:54,110 --> 00:18:59,909
maybe they heard me but uh let me just

00:18:58,559 --> 00:19:02,010
give you a quick slide show of some of

00:18:59,909 --> 00:19:05,760
the cool cohesive tools we use from the

00:19:02,010 --> 00:19:07,440
elafians sweet um here we see a pull

00:19:05,760 --> 00:19:09,600
request and what's cool is that because

00:19:07,440 --> 00:19:13,049
we have committed IDs in our ticket

00:19:09,600 --> 00:19:15,510
numbers in our commits the the links to

00:19:13,049 --> 00:19:16,980
the giro tickin I the geo tickets are

00:19:15,510 --> 00:19:18,659
quickly available from the commit

00:19:16,980 --> 00:19:20,250
history so then I can quickly link over

00:19:18,659 --> 00:19:22,980
to jeer I can see all the details about

00:19:20,250 --> 00:19:24,840
that ticket and then also it shows me

00:19:22,980 --> 00:19:25,890
the status of the builds so here I can

00:19:24,840 --> 00:19:27,630
quickly see that this has already been

00:19:25,890 --> 00:19:29,309
deployed to my model proud in sandbox

00:19:27,630 --> 00:19:31,260
environments if I click on the bill that

00:19:29,309 --> 00:19:33,480
shows me that here's the build ID number

00:19:31,260 --> 00:19:35,820
that was responsible for including these

00:19:33,480 --> 00:19:38,940
commits I can go to the bamboo service

00:19:35,820 --> 00:19:40,770
and actually see oh sure enough here are

00:19:38,940 --> 00:19:42,960
the issues that were addressed with this

00:19:40,770 --> 00:19:44,549
build and then here are the commits that

00:19:42,960 --> 00:19:46,200
were also included so I can always do

00:19:44,549 --> 00:19:48,299
that hotlinking between everything and

00:19:46,200 --> 00:19:50,100
that same thing once you go to to stash

00:19:48,299 --> 00:19:52,750
or bitbucket to see what those commits

00:19:50,100 --> 00:19:54,220
are you see the branches and the bill

00:19:52,750 --> 00:19:57,490
that were responsible for those as well

00:19:54,220 --> 00:19:58,960
all right so I'm running out of time one

00:19:57,490 --> 00:20:02,020
thing is that developers are super lazy

00:19:58,960 --> 00:20:03,520
so you got to remember you have to do

00:20:02,020 --> 00:20:05,260
something to force these people to

00:20:03,520 --> 00:20:07,270
follow these conventions it's not good

00:20:05,260 --> 00:20:10,510
enough to just talk about it so you have

00:20:07,270 --> 00:20:12,310
to do things like practice these things

00:20:10,510 --> 00:20:13,930
are you sure that people on your team

00:20:12,310 --> 00:20:15,880
actually know how to do interactive

00:20:13,930 --> 00:20:17,320
rebase do they know how to chunk of

00:20:15,880 --> 00:20:19,540
commits all these different things that

00:20:17,320 --> 00:20:20,710
how it make commits more readable for

00:20:19,540 --> 00:20:22,330
some to prove to you that they can

00:20:20,710 --> 00:20:23,410
actually do those things and then there

00:20:22,330 --> 00:20:24,820
are things that I think is overlooked

00:20:23,410 --> 00:20:26,740
too often is praising people for good

00:20:24,820 --> 00:20:28,660
work I highly recommend trying to solve

00:20:26,740 --> 00:20:30,310
a trying to find a badge system kind of

00:20:28,660 --> 00:20:31,720
like with Stack Overflow does the more

00:20:30,310 --> 00:20:35,140
times you help people the better badges

00:20:31,720 --> 00:20:36,790
you get so again nothing is going to be

00:20:35,140 --> 00:20:39,400
useful unless you actually make tools to

00:20:36,790 --> 00:20:40,540
make it work so remember do whatever

00:20:39,400 --> 00:20:41,770
works for your team because there's no

00:20:40,540 --> 00:20:44,050
way that everything is gonna be the same

00:20:41,770 --> 00:20:45,430
for everyone so I'm out of time but imma

00:20:44,050 --> 00:20:46,840
steal some time to see if there's anyone

00:20:45,430 --> 00:20:47,920
that has some excuses that they want to

00:20:46,840 --> 00:20:50,290
share with some other suggestions

00:20:47,920 --> 00:20:51,700
because again this is all these are only

00:20:50,290 --> 00:21:06,490
things that I heard I learned a lot of

00:20:51,700 --> 00:21:07,870
cool things this week so yeah how do you

00:21:06,490 --> 00:21:10,980
how do you switch between which ones you

00:21:07,870 --> 00:21:10,980
use is that automatically

00:21:18,090 --> 00:21:23,409
nice so what time is saying these guide

00:21:21,039 --> 00:21:25,120
separate critic pro critic policies for

00:21:23,409 --> 00:21:35,740
old coal the new code which is a great

00:21:25,120 --> 00:21:50,470
idea ya SE otherwise ok using branches

00:21:35,740 --> 00:21:51,429
to separate with legacy gotcha yeah yeah

00:21:50,470 --> 00:21:52,750
what he said was there's a two of

00:21:51,429 --> 00:21:54,639
bookends working got working on called

00:21:52,750 --> 00:21:56,649
patch critic look for that to be open

00:21:54,639 --> 00:21:58,230
source on Sipan pretty soon it sounds

00:21:56,649 --> 00:22:00,580
like it does a great job of just doing

00:21:58,230 --> 00:22:11,110
isolated critic checks not on the whole

00:22:00,580 --> 00:22:12,429
file progressive to pro critical uncle

00:22:11,110 --> 00:22:19,470
and progressive has some tools to help

00:22:12,429 --> 00:22:19,470
with that as well that's great yeah

00:22:28,559 --> 00:22:31,070
today

00:22:34,759 --> 00:22:39,360
yeah exactly I I hate here no both teams

00:22:38,070 --> 00:22:40,710
who just make a commit message with

00:22:39,360 --> 00:22:42,509
nothing more than the ticket number

00:22:40,710 --> 00:22:45,600
because they say oh you can find all

00:22:42,509 --> 00:22:47,879
about the problem in the ticket like you

00:22:45,600 --> 00:22:49,889
said your ticketing system might not be

00:22:47,879 --> 00:22:51,240
the same ticketing system next year sure

00:22:49,889 --> 00:22:53,220
you might have some hot legs to take you

00:22:51,240 --> 00:22:55,139
to the new system but when you're

00:22:53,220 --> 00:22:56,639
looking at a gift blame it's so much

00:22:55,139 --> 00:22:57,870
more efficient just to read what's going

00:22:56,639 --> 00:22:59,279
on in the commit message instead of

00:22:57,870 --> 00:23:19,909
having to go find somewhere in a giant

00:22:59,279 --> 00:23:19,909
ticket what kindness ah getcha getcha

00:23:27,169 --> 00:23:30,650
resurrected for long

00:23:38,480 --> 00:23:43,020
yeah and I can't say enough how awesome

00:23:41,340 --> 00:23:44,460
it's been I think I've asked about a

00:23:43,020 --> 00:23:46,169
dozen different pearl people in the

00:23:44,460 --> 00:23:48,480
community to give a talk at the

00:23:46,169 --> 00:23:51,419
milwaukee perl mongers not a single one

00:23:48,480 --> 00:23:54,090
of them said no and they've just joined

00:23:51,419 --> 00:23:55,350
us on Google Hangouts a lot of them had

00:23:54,090 --> 00:23:57,570
prepared talks ahead of time that

00:23:55,350 --> 00:23:59,370
they've given another monger groups and

00:23:57,570 --> 00:24:01,679
so it was like no prep time that they

00:23:59,370 --> 00:24:03,929
need it all so if you have a monger

00:24:01,679 --> 00:24:05,400
scoop that's kind of desperate for not

00:24:03,929 --> 00:24:07,350
desperate but kind of thirsty for some

00:24:05,400 --> 00:24:08,490
new speakers highly recommend just

00:24:07,350 --> 00:24:12,419
reaching out to someone who's willing to

00:24:08,490 --> 00:24:14,929
go on google hangouts ok thanks too much

00:24:12,419 --> 00:24:14,929

YouTube URL: https://www.youtube.com/watch?v=uBlSGMXr7G8


