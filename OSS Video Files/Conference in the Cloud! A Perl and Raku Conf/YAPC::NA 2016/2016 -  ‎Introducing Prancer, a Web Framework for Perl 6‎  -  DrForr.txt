Title: 2016 -  ‎Introducing Prancer, a Web Framework for Perl 6‎  -  DrForr
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:01,159 --> 00:00:05,179
yep 21

00:00:06,000 --> 00:00:08,930
thank you

00:00:14,250 --> 00:00:21,810
already with the wrist bones and let's

00:00:18,720 --> 00:00:24,360
rock and roll okay first of all I Jeff

00:00:21,810 --> 00:00:28,110
golf working for episode 4 episode of an

00:00:24,360 --> 00:00:33,120
LLC in Romania the hog Transylvania the

00:00:28,110 --> 00:00:34,470
home of gaps e EU 2016 gay after three

00:00:33,120 --> 00:00:38,430
years and while you fell I managed to

00:00:34,470 --> 00:00:41,460
get my manage to do it third time's a

00:00:38,430 --> 00:00:44,670
charm but when I hear talk about gap see

00:00:41,460 --> 00:00:49,140
rat yep see instead we're here to talk

00:00:44,670 --> 00:00:52,739
about a new breed on dancer how many of

00:00:49,140 --> 00:00:55,739
you are familiar with the current pearl

00:00:52,739 --> 00:01:00,690
five dancer framework anyone okay a good

00:00:55,739 --> 00:01:03,450
portion excellent excellent all right

00:01:00,690 --> 00:01:06,149
the good news is that what I'm trying to

00:01:03,450 --> 00:01:10,560
do I try make things very easy to

00:01:06,149 --> 00:01:15,720
actually use as a side I only to show

00:01:10,560 --> 00:01:20,760
more of the a more midlist Perl 6 style

00:01:15,720 --> 00:01:24,500
of code so parents and braces will be

00:01:20,760 --> 00:01:27,689
some will not be visible all that much

00:01:24,500 --> 00:01:29,360
because that's at least how I interpret

00:01:27,689 --> 00:01:34,530
I don't know where he was saying about

00:01:29,360 --> 00:01:39,270
Pearl 6 style in general so be so be

00:01:34,530 --> 00:01:40,830
ready for that there are really four

00:01:39,270 --> 00:01:43,170
things that you need to know in order to

00:01:40,830 --> 00:01:47,189
set up a running pants their application

00:01:43,170 --> 00:01:51,720
aside from basic pearl you need to know

00:01:47,189 --> 00:01:55,560
how to use need to know how to use a

00:01:51,720 --> 00:02:01,560
module use in the marsh name just like

00:01:55,560 --> 00:02:05,070
you would in Perl 5 you need to know how

00:02:01,560 --> 00:02:08,970
to use a root as you would in dancer

00:02:05,070 --> 00:02:11,519
there are some differences here in

00:02:08,970 --> 00:02:17,370
dancer you in dancer and / 05 you would

00:02:11,519 --> 00:02:24,770
personally have this / 1 2 3 4 or / ID

00:02:17,370 --> 00:02:27,840
be a string or / colon name in Perl 6

00:02:24,770 --> 00:02:32,040
thankfully you can

00:02:27,840 --> 00:02:36,000
you can rest up with this you can

00:02:32,040 --> 00:02:39,390
introspect pretty much every aspect of a

00:02:36,000 --> 00:02:42,420
subroutine so we can get down so we can

00:02:39,390 --> 00:02:45,660
cut our rear face now to just this bit

00:02:42,420 --> 00:02:48,860
right here so in order to work in order

00:02:45,660 --> 00:02:56,190
to create a route you use the is root

00:02:48,860 --> 00:02:58,530
adjective the get over here is the get

00:02:56,190 --> 00:03:01,500
method and you might be saying to

00:02:58,530 --> 00:03:05,310
yourself self how would I be able to run

00:03:01,500 --> 00:03:08,849
more than one get the method if you have

00:03:05,310 --> 00:03:11,670
sub well the answer is pretty simple

00:03:08,849 --> 00:03:14,400
because now perla six is polymorphic

00:03:11,670 --> 00:03:16,470
that's the proper term has multi method

00:03:14,400 --> 00:03:22,739
dispatch so you can have multiple

00:03:16,470 --> 00:03:26,910
seizures so you have your own / route

00:03:22,739 --> 00:03:29,459
declared you have a /em in / directory

00:03:26,910 --> 00:03:34,440
declared you need to clear your own path

00:03:29,459 --> 00:03:36,660
to a full rest URL and perl 6 we'll sort

00:03:34,440 --> 00:03:39,030
all that out and call right function for

00:03:36,660 --> 00:03:44,959
you alarm with just a little bit of

00:03:39,030 --> 00:03:44,959
magic on the growth on the prime suicide

00:03:45,470 --> 00:03:51,060
internally all you really need to know

00:03:47,940 --> 00:03:54,150
in order to use say more complex Leah

00:03:51,060 --> 00:03:58,680
such as sessions and templates is the

00:03:54,150 --> 00:04:01,430
power star Prancer variable for those of

00:03:58,680 --> 00:04:06,060
you that have not seen the dollar star

00:04:01,430 --> 00:04:08,160
this is how do you create a variable

00:04:06,060 --> 00:04:10,380
that you can access inside under the

00:04:08,160 --> 00:04:13,919
scope without declaring it inside the

00:04:10,380 --> 00:04:17,070
scope so for instance outside of your

00:04:13,919 --> 00:04:19,560
application outside of your sub here

00:04:17,070 --> 00:04:22,830
there is a variable declared dollar

00:04:19,560 --> 00:04:26,880
store oppressor and it's not passed in

00:04:22,830 --> 00:04:31,050
but it is accessible so this is how we

00:04:26,880 --> 00:04:33,780
manage to do things such as sessions and

00:04:31,050 --> 00:04:37,530
templates and basically anything else

00:04:33,780 --> 00:04:39,539
that needs a these dynamic access to

00:04:37,530 --> 00:04:41,380
application state this how you will look

00:04:39,539 --> 00:04:43,060
for say

00:04:41,380 --> 00:04:48,610
warm variables this is where you would

00:04:43,060 --> 00:04:50,800
go to edit your hair content so

00:04:48,610 --> 00:04:53,620
everything is directed through this

00:04:50,800 --> 00:04:59,680
variable which happens to be of course a

00:04:53,620 --> 00:05:02,500
a hash ref I i'm using a deliberately

00:04:59,680 --> 00:05:05,620
simplistic realistic style using the

00:05:02,500 --> 00:05:08,970
brace quote ordinarily you would use the

00:05:05,620 --> 00:05:11,110
angle bracket around session but for

00:05:08,970 --> 00:05:13,330
those of you with in the audience that

00:05:11,110 --> 00:05:15,160
aren't as familiar or comfortable with

00:05:13,330 --> 00:05:17,980
pearl socialization are going to use

00:05:15,160 --> 00:05:23,950
this location throughout in order to

00:05:17,980 --> 00:05:26,440
health Easley's alone and of course you

00:05:23,950 --> 00:05:29,130
also have your regular helpers here

00:05:26,440 --> 00:05:33,610
dynamic file needs no actual state and

00:05:29,130 --> 00:05:37,690
dynamic file reads from the breeze from

00:05:33,610 --> 00:05:39,550
the static / directory in your pearls in

00:05:37,690 --> 00:05:43,030
your pearls experience for application

00:05:39,550 --> 00:05:45,700
so this already is almost a fully

00:05:43,030 --> 00:05:52,120
functional plication all you need to do

00:05:45,700 --> 00:05:55,380
is add the prince method and this file

00:05:52,120 --> 00:05:58,960
is a fully working dynamic application

00:05:55,380 --> 00:06:01,470
so you have a static directory of

00:05:58,960 --> 00:06:04,420
content elsewhere on the drive that

00:06:01,470 --> 00:06:07,780
France Iran batley actresses or you have

00:06:04,420 --> 00:06:11,920
a dynamic path and by the way you'll

00:06:07,780 --> 00:06:15,400
notice that PO site that this is just a

00:06:11,920 --> 00:06:21,280
river variable and there is an applied /

00:06:15,400 --> 00:06:26,170
here if you look over here the / here is

00:06:21,280 --> 00:06:29,710
the root of your application sorry your

00:06:26,170 --> 00:06:31,300
directory hierarchy so this is where you

00:06:29,710 --> 00:06:34,570
would store or anything that is a

00:06:31,300 --> 00:06:37,480
dynamic application and we'll talk a lot

00:06:34,570 --> 00:06:41,320
more about that as we go on because

00:06:37,480 --> 00:06:43,180
there are several there are a lot of

00:06:41,320 --> 00:06:46,540
neat little things that you can do in

00:06:43,180 --> 00:06:48,670
Perl 6 which I built into the Prancer

00:06:46,540 --> 00:06:52,390
corn and by the way this is all right

00:06:48,670 --> 00:06:54,700
now on github the current version is

00:06:52,390 --> 00:06:57,430
right now only on my harddrive but

00:06:54,700 --> 00:07:03,340
by the end of the gap see it will be out

00:06:57,430 --> 00:07:05,110
there and hopefully fixed again I tend

00:07:03,340 --> 00:07:11,380
to break things as as we all do during

00:07:05,110 --> 00:07:15,070
development so let's get a little bit

00:07:11,380 --> 00:07:20,470
more into what depth we've talked about

00:07:15,070 --> 00:07:22,930
the post ID and how we haven't talked

00:07:20,470 --> 00:07:25,630
much about sessions those are managed

00:07:22,930 --> 00:07:29,260
internally you can create your own

00:07:25,630 --> 00:07:35,170
session manager by default it uses a mo

00:07:29,260 --> 00:07:37,870
file but everything is ribbon through

00:07:35,170 --> 00:07:40,510
again the accession URL if you have

00:07:37,870 --> 00:07:45,700
sorry not such an URL but second hash

00:07:40,510 --> 00:07:48,220
ref if you have you know a user ID or a

00:07:45,700 --> 00:07:56,530
post ID coming in from some outside

00:07:48,220 --> 00:07:58,300
source moving on okay now earlier i loo

00:07:56,530 --> 00:08:00,220
to the fact that is probably a little

00:07:58,300 --> 00:08:02,530
bit hard to have more than one get

00:08:00,220 --> 00:08:05,590
function but luckily in Perl sex what

00:08:02,530 --> 00:08:08,620
you can do is you can change from sub to

00:08:05,590 --> 00:08:10,690
multi and that lets you have more than

00:08:08,620 --> 00:08:12,550
one subroutine with the same seizure I'm

00:08:10,690 --> 00:08:15,610
sorry with the same name with a

00:08:12,550 --> 00:08:19,450
different seizure so in this case for

00:08:15,610 --> 00:08:22,990
instance if you are in a web browser and

00:08:19,450 --> 00:08:27,250
you would you curl two-way address make

00:08:22,990 --> 00:08:30,880
a get request to you / 1 2 3 4 this

00:08:27,250 --> 00:08:35,650
method gets run a mountain for you if

00:08:30,880 --> 00:08:40,390
the user goes to this URL drf or pearls

00:08:35,650 --> 00:08:43,180
ASAP Prancer instead it runs this get

00:08:40,390 --> 00:08:45,000
method for you and if you like we can go

00:08:43,180 --> 00:08:49,510
into a little bit more of the details

00:08:45,000 --> 00:08:53,490
but what I do is as part of the is route

00:08:49,510 --> 00:08:59,440
to do as part of the is about adverb

00:08:53,490 --> 00:09:01,630
what I do is put the function on to be a

00:08:59,440 --> 00:09:04,030
list of functions that gets called so

00:09:01,630 --> 00:09:08,350
there's a large hash stored internally

00:09:04,030 --> 00:09:10,390
and when crust which is

00:09:08,350 --> 00:09:14,500
the bottom layer of the oppressor app

00:09:10,390 --> 00:09:17,560
stack receives a web request it goes

00:09:14,500 --> 00:09:20,410
freely in dispatches based on that and

00:09:17,560 --> 00:09:23,260
that's all in a separate module so

00:09:20,410 --> 00:09:26,350
anyone else can anyone that wants to use

00:09:23,260 --> 00:09:29,500
that separately that wants this type of

00:09:26,350 --> 00:09:31,720
interface without having to have a web

00:09:29,500 --> 00:09:34,600
interface available can pull that out as

00:09:31,720 --> 00:09:38,440
a separate routes module so that's

00:09:34,600 --> 00:09:42,310
available for anyone to use now you'll

00:09:38,440 --> 00:09:43,990
note we have a post ID down here which

00:09:42,310 --> 00:09:47,010
could be an integer could be a spring

00:09:43,990 --> 00:09:50,770
we're not quite sure pearl six right now

00:09:47,010 --> 00:09:53,290
in my current implication doesn't care

00:09:50,770 --> 00:09:58,810
about that at the moment but if we go

00:09:53,290 --> 00:10:05,110
along and add a obvious spring here and

00:09:58,810 --> 00:10:09,540
string here this now is a type fravel so

00:10:05,110 --> 00:10:14,580
this URL here would not be used for say

00:10:09,540 --> 00:10:17,530
gets / 1 2 3 4 / pearls except cancer

00:10:14,580 --> 00:10:21,040
because Perl 6 and the application know

00:10:17,530 --> 00:10:23,890
enough to dispatch based on the type so

00:10:21,040 --> 00:10:26,830
you have an integer type in a route you

00:10:23,890 --> 00:10:29,020
have a string type in your route and the

00:10:26,830 --> 00:10:33,190
variables here automatically get

00:10:29,020 --> 00:10:35,170
puddling so the dr fo are here yes

00:10:33,190 --> 00:10:39,180
populate as the username in your

00:10:35,170 --> 00:10:41,890
variables instead of in dancer you have

00:10:39,180 --> 00:10:43,870
weathered router parameters or

00:10:41,890 --> 00:10:46,020
parameters you have to call that

00:10:43,870 --> 00:10:49,180
separately inside the Pearl subroutine

00:10:46,020 --> 00:10:51,910
in parallel 6 and pressor you know lardy

00:10:49,180 --> 00:10:56,380
to do that everything is parsed out for

00:10:51,910 --> 00:11:03,930
you and any combination of string em and

00:10:56,380 --> 00:11:03,930
int or even say date or datetime or json

00:11:04,380 --> 00:11:10,090
is process where you want madly so if

00:11:07,810 --> 00:11:16,450
you have it you have any combination of

00:11:10,090 --> 00:11:20,370
it if you're spraying wild card or iso

00:11:16,450 --> 00:11:20,370
date format yep

00:11:25,540 --> 00:11:37,520
coursing coursing this down to intent

00:11:29,770 --> 00:11:39,680
this referring to this here or okay in

00:11:37,520 --> 00:11:42,380
that case is simply an untyped variable

00:11:39,680 --> 00:11:45,950
and those take prestas or rat or rather

00:11:42,380 --> 00:11:51,520
those give bail prestas so if you had

00:11:45,950 --> 00:11:56,450
say a separate handler of multi get int

00:11:51,520 --> 00:12:02,890
ID versus multi get dollar ID the int

00:11:56,450 --> 00:12:07,640
will take preston see in this place um

00:12:02,890 --> 00:12:10,670
not coercing per se yeah it does cast it

00:12:07,640 --> 00:12:13,430
early yep but the important thing here

00:12:10,670 --> 00:12:16,190
is that able distinguish between it was

00:12:13,430 --> 00:12:18,589
thing here between a name like dr for

00:12:16,190 --> 00:12:22,250
and entity like one two three four and

00:12:18,589 --> 00:12:25,490
those process simply yeah that does

00:12:22,250 --> 00:12:26,720
stall again you see this work in the

00:12:25,490 --> 00:12:33,470
attest week i'll show you here a few

00:12:26,720 --> 00:12:37,870
minutes all right and again any

00:12:33,470 --> 00:12:42,430
combination of string and spring int and

00:12:37,870 --> 00:12:45,260
non types with with the prize of that

00:12:42,430 --> 00:12:47,900
date is processed first fall by string

00:12:45,260 --> 00:12:54,230
followed by integer fall by anything in

00:12:47,900 --> 00:12:59,300
the hierarchy or so it s is fallback so

00:12:54,230 --> 00:13:04,459
you have any combination with you unlike

00:12:59,300 --> 00:13:09,410
like so here is the last this is in the

00:13:04,459 --> 00:13:12,890
inverse order so actually that this will

00:13:09,410 --> 00:13:14,570
give us this reassign first followed by

00:13:12,890 --> 00:13:18,820
date followed by integer followed by

00:13:14,570 --> 00:13:23,350
string followed by argument in terms of

00:13:18,820 --> 00:13:28,250
in order of increasing scope if you will

00:13:23,350 --> 00:13:31,580
because of course in perl 6 a spring

00:13:28,250 --> 00:13:34,140
can't be up in a string

00:13:31,580 --> 00:13:37,560
can contain an integer value without

00:13:34,140 --> 00:13:41,580
being in is yourself so that's why that

00:13:37,560 --> 00:13:44,430
is in that work these stars here I don't

00:13:41,580 --> 00:13:48,930
have that right now on the cpn archive

00:13:44,430 --> 00:13:51,620
and sorry on the modules / lorg archive

00:13:48,930 --> 00:13:55,440
doesn't now fortunately isn't there yet

00:13:51,620 --> 00:14:02,940
but hopefully by the end of a fc they'll

00:13:55,440 --> 00:14:05,850
be released okay you may also be

00:14:02,940 --> 00:14:08,100
wondering how you use say a rest type

00:14:05,850 --> 00:14:11,339
URL if you're more familiar with that

00:14:08,100 --> 00:14:15,540
type of with that with that type so we

00:14:11,339 --> 00:14:19,490
have a post here the the term post for

00:14:15,540 --> 00:14:24,620
say a blog post for say pearl org

00:14:19,490 --> 00:14:27,600
followed by an ID so what perl 6

00:14:24,620 --> 00:14:30,870
infinitely all internally does aloma

00:14:27,600 --> 00:14:34,200
Prancer when you have strips out these

00:14:30,870 --> 00:14:36,450
slashes interprets the matches the post

00:14:34,200 --> 00:14:39,150
and these slashes by the way here are

00:14:36,450 --> 00:14:42,360
optional you can remove those to write

00:14:39,150 --> 00:14:45,540
those as you wish either before or after

00:14:42,360 --> 00:14:48,630
or as separate as separate values yeah

00:14:45,540 --> 00:14:52,500
complete freedom my purpose I'll here

00:14:48,630 --> 00:14:57,750
would be purely to include them just for

00:14:52,500 --> 00:15:01,339
clarity's sake but that's that's your

00:14:57,750 --> 00:15:06,959
option and again if you're doing a

00:15:01,339 --> 00:15:08,970
handler there's all ray imprint dancer

00:15:06,959 --> 00:15:11,010
can we have to utilize the code one to

00:15:08,970 --> 00:15:13,350
perform the get called with a string and

00:15:11,010 --> 00:15:17,610
the colon parameters and not another

00:15:13,350 --> 00:15:20,459
line to get the ID value and in this

00:15:17,610 --> 00:15:23,040
case not only does it find the matching

00:15:20,459 --> 00:15:27,240
ID but it gives you a handy variable

00:15:23,040 --> 00:15:30,630
right there at that point you can't do

00:15:27,240 --> 00:15:32,940
this I think now in 524 as well with

00:15:30,630 --> 00:15:34,410
sovereignty and saviors but I don't

00:15:32,940 --> 00:15:37,820
think that you could in respect to this

00:15:34,410 --> 00:15:40,610
level if you're frequently fine wrong

00:15:37,820 --> 00:15:44,190
but i don't think that purple five

00:15:40,610 --> 00:15:46,580
seizures yet have this detail of st.

00:15:44,190 --> 00:15:49,890
respect

00:15:46,580 --> 00:15:52,320
so I'm actually going through and s part

00:15:49,890 --> 00:15:55,620
of the round handler picking apart each

00:15:52,320 --> 00:15:59,670
argument here and by the way for those

00:15:55,620 --> 00:16:04,250
of you that are new to both subroutine

00:15:59,670 --> 00:16:07,140
seizures and seeing this string there in

00:16:04,250 --> 00:16:13,140
an actual argument this actually works

00:16:07,140 --> 00:16:18,210
because that is a constrained string so

00:16:13,140 --> 00:16:22,110
i actually use this as as a as a treat

00:16:18,210 --> 00:16:23,580
as if it were constant effectively so if

00:16:22,110 --> 00:16:26,250
you are say working on the command line

00:16:23,580 --> 00:16:30,360
or calling for somewhere else you would

00:16:26,250 --> 00:16:32,940
actually call in get parent and then /

00:16:30,360 --> 00:16:35,130
post followed by a random post ID and

00:16:32,940 --> 00:16:37,980
have that called inside your dancer

00:16:35,130 --> 00:16:41,820
inside your pants replication so it's

00:16:37,980 --> 00:16:43,950
also there a way to do redirects instead

00:16:41,820 --> 00:16:46,860
of doing instead of having a separate

00:16:43,950 --> 00:16:49,650
redirect method you simply call your

00:16:46,860 --> 00:16:51,900
nice function in the train so you get

00:16:49,650 --> 00:16:54,230
rid of the you get rid of redirects you

00:16:51,900 --> 00:17:00,810
get rid of release one line in your

00:16:54,230 --> 00:17:03,390
pearl 5 code and you also d couple the

00:17:00,810 --> 00:17:06,329
fact that you have a colon a colon ID

00:17:03,390 --> 00:17:09,420
and later on in the function help you

00:17:06,329 --> 00:17:11,339
either processes deck or call Ralph

00:17:09,420 --> 00:17:14,370
camera on that so now you just have a

00:17:11,339 --> 00:17:16,459
single value here already available for

00:17:14,370 --> 00:17:16,459
you

00:17:19,380 --> 00:17:26,069
and of course you need to work with more

00:17:21,420 --> 00:17:27,000
than just obviously get in methods this

00:17:26,069 --> 00:17:29,550
is where I guess a little bit more

00:17:27,000 --> 00:17:33,840
interesting because you've seen before

00:17:29,550 --> 00:17:36,870
hand this syntax here with multiple

00:17:33,840 --> 00:17:39,890
parameters lead to a mobile lines and

00:17:36,870 --> 00:17:44,130
again you have any combination like of

00:17:39,890 --> 00:17:47,460
straying integer constant and what not

00:17:44,130 --> 00:17:50,550
and even eventually I will allow the use

00:17:47,460 --> 00:17:54,390
of stars and rare expressions inside

00:17:50,550 --> 00:17:57,120
here as well because that's allowed in

00:17:54,390 --> 00:18:00,450
dancer I don't really see much for use

00:17:57,120 --> 00:18:04,410
for it in general but yes could have the

00:18:00,450 --> 00:18:13,290
available and it's part of the detail

00:18:04,410 --> 00:18:16,170
engine farming so you have a so here

00:18:13,290 --> 00:18:19,920
you're doing again a straight curl to

00:18:16,170 --> 00:18:25,020
your web page curl to of the server with

00:18:19,920 --> 00:18:28,940
post command slash log in and you have a

00:18:25,020 --> 00:18:33,930
user name being passed in and a password

00:18:28,940 --> 00:18:36,810
so again we have / log in here and /

00:18:33,930 --> 00:18:39,240
logging as the handler one-to-one

00:18:36,810 --> 00:18:43,050
relationship between the URL and the

00:18:39,240 --> 00:18:46,710
route and again all this stuff down here

00:18:43,050 --> 00:18:50,280
is regular pearls as code so the only

00:18:46,710 --> 00:18:52,650
place that we've add to make your web to

00:18:50,280 --> 00:18:54,690
make your web application work as a full

00:18:52,650 --> 00:18:58,890
web application is we've only really

00:18:54,690 --> 00:19:02,790
adhered the Israel and we've ad inside

00:18:58,890 --> 00:19:06,780
here the star France are able so you can

00:19:02,790 --> 00:19:09,840
access inside the form content we can

00:19:06,780 --> 00:19:13,350
get the username and password here as a

00:19:09,840 --> 00:19:16,860
grayble username and password as part of

00:19:13,350 --> 00:19:19,860
the form and also there is a separate

00:19:16,860 --> 00:19:23,520
Prancer dash V so if you need to access

00:19:19,860 --> 00:19:25,650
say headers or you need to look at

00:19:23,520 --> 00:19:28,800
session content or add cookies or do

00:19:25,650 --> 00:19:31,400
curcumin p manipulation on your own you

00:19:28,800 --> 00:19:31,400
can actually set

00:19:32,330 --> 00:19:38,010
airport says SI loo to earlier this is

00:19:35,250 --> 00:19:46,770
how one does a redirect you simply call

00:19:38,010 --> 00:19:48,180
the new method this up here as well I

00:19:46,770 --> 00:19:51,660
don't know if I have a slide for this

00:19:48,180 --> 00:19:53,850
but you can also use this I believe I

00:19:51,660 --> 00:20:01,800
show you later on how to do get

00:19:53,850 --> 00:20:04,400
parameters as well okay hmm i'll allow

00:20:01,800 --> 00:20:04,400
me to add here

00:20:18,990 --> 00:20:27,720
and that would be how one access is a

00:20:23,970 --> 00:20:30,360
optional variable I not sure if I'll

00:20:27,720 --> 00:20:35,250
sorry for this so I jumping a bit

00:20:30,360 --> 00:20:37,650
possibly but again we have two methods

00:20:35,250 --> 00:20:41,940
here chained in that fashion so slashes

00:20:37,650 --> 00:20:45,800
combined in a fashion if i'll buy a

00:20:41,940 --> 00:20:48,570
optional foo so this will get called on

00:20:45,800 --> 00:20:52,800
either get a slash sadness left profile

00:20:48,570 --> 00:20:56,340
or get /a massage profile with the ? ma

00:20:52,800 --> 00:20:59,179
fire here because this is indeed a

00:20:56,340 --> 00:20:59,179
optional variable

00:21:07,110 --> 00:21:11,889
all right the let the last major thing

00:21:10,149 --> 00:21:13,750
here and I'll go through a little bit

00:21:11,889 --> 00:21:19,149
more of the code in the background and

00:21:13,750 --> 00:21:21,159
show it working here soon is how you

00:21:19,149 --> 00:21:26,080
deal with templates here there is a

00:21:21,159 --> 00:21:27,700
slight bug in the web you know the web

00:21:26,080 --> 00:21:32,309
template handling interned i'm using

00:21:27,700 --> 00:21:36,429
that i will patch here hopefully today

00:21:32,309 --> 00:21:39,309
but you use Prancer template and someone

00:21:36,429 --> 00:21:42,159
a temp summoned a got regular HTML

00:21:39,309 --> 00:21:45,460
template this is the in configuration so

00:21:42,159 --> 00:21:48,309
you can use whatever engine you like it

00:21:45,460 --> 00:21:54,000
background we have the choice of HTML

00:21:48,309 --> 00:21:56,860
template a template toolkit ish variant

00:21:54,000 --> 00:22:00,100
at least three inches i know of right

00:21:56,860 --> 00:22:03,639
now i don't think that we have a Mason

00:22:00,100 --> 00:22:07,840
style engine but i wouldn't use that for

00:22:03,639 --> 00:22:09,789
the setup but again this all you know

00:22:07,840 --> 00:22:12,360
that's all configurable in the

00:22:09,789 --> 00:22:12,360
application itself

00:22:19,330 --> 00:22:29,320
I lied include and finally dealing with

00:22:24,070 --> 00:22:32,770
you added your own headers here with

00:22:29,320 --> 00:22:37,300
with a separate content type and return

00:22:32,770 --> 00:22:40,780
JSON because for all six of the engine

00:22:37,300 --> 00:22:44,680
startup know that if you have a you're

00:22:40,780 --> 00:22:48,250
returning a JSON object it will actually

00:22:44,680 --> 00:22:50,410
hint you blush return and handle a you

00:22:48,250 --> 00:22:52,900
will actually handle and return a JSON

00:22:50,410 --> 00:22:57,120
off it and set the hairs for you so you

00:22:52,900 --> 00:23:01,560
don't have to actually do this step here

00:22:57,120 --> 00:23:05,110
it's marz know that the type return

00:23:01,560 --> 00:23:08,380
right now with step only to handle HTML

00:23:05,110 --> 00:23:10,480
and JSON other types will probably

00:23:08,380 --> 00:23:13,930
include XML once we have an XML parser

00:23:10,480 --> 00:23:15,520
but that may be extreme overkill so if

00:23:13,930 --> 00:23:18,220
you don't want to use the next mo parser

00:23:15,520 --> 00:23:22,360
in return for mad and validating xml

00:23:18,220 --> 00:23:31,210
you'll always set your header type as

00:23:22,360 --> 00:23:33,550
you like okay but before we go eats too

00:23:31,210 --> 00:23:34,630
much this more detail they your point

00:23:33,550 --> 00:23:37,420
want to see something actually working

00:23:34,630 --> 00:23:39,790
and by the way my not going to show this

00:23:37,420 --> 00:23:42,910
right now because at one time there was

00:23:39,790 --> 00:23:45,730
a bug in the crust core that I actually

00:23:42,910 --> 00:23:50,050
tickled but I could but as it stands

00:23:45,730 --> 00:23:53,020
under siege with a little bit freaking I

00:23:50,050 --> 00:23:57,580
can handle upwards of 200 consecutive

00:23:53,020 --> 00:24:03,340
sessions I'm sorry I'm not consecutive

00:23:57,580 --> 00:24:05,380
concurrent sessions all doing access so

00:24:03,340 --> 00:24:08,050
in terms of performance we have there's

00:24:05,380 --> 00:24:10,570
actually performant as opposed to as

00:24:08,050 --> 00:24:12,940
opposed to waiting Tory prototype if you

00:24:10,570 --> 00:24:16,360
want to test this yourself you do right

00:24:12,940 --> 00:24:19,960
now have to set ace a recruit over able

00:24:16,360 --> 00:24:23,800
to expand the number of concurrent

00:24:19,960 --> 00:24:28,270
sessions athlete details later on if you

00:24:23,800 --> 00:24:31,660
like but this is a fully parking web

00:24:28,270 --> 00:24:33,130
application basically I stole the the

00:24:31,660 --> 00:24:36,760
HTML content

00:24:33,130 --> 00:24:39,190
as my own and because I liver Romania at

00:24:36,760 --> 00:24:42,490
Google decide to translate the cookies

00:24:39,190 --> 00:24:45,780
into remaining for me thought this is a

00:24:42,490 --> 00:24:45,780
fully functioning application

00:24:58,570 --> 00:25:04,409
with actual with actual web content this

00:25:01,840 --> 00:25:08,710
mostly static content driven off of a

00:25:04,409 --> 00:25:11,470
driven off of a dynamic repressed but

00:25:08,710 --> 00:25:13,769
i'll show you the actual code here unif

00:25:11,470 --> 00:25:13,769
Hume is

00:25:18,139 --> 00:25:21,139
if

00:25:35,879 --> 00:25:38,969
and again going back to the local host

00:25:37,769 --> 00:25:41,190
probably that this is actually the

00:25:38,969 --> 00:25:48,029
application in the background and we can

00:25:41,190 --> 00:25:51,409
see that at work I turned face off so

00:25:48,029 --> 00:25:56,940
there's no actual output here but and

00:25:51,409 --> 00:25:59,969
this is a value of my own code but this

00:25:56,940 --> 00:26:01,739
is the application here running sitting

00:25:59,969 --> 00:26:03,509
running much like you would a normal

00:26:01,739 --> 00:26:11,099
transfer application sorry dancer

00:26:03,509 --> 00:26:15,509
application the only change down here is

00:26:11,099 --> 00:26:19,859
instead of you have pearl six dash light

00:26:15,509 --> 00:26:22,739
in dancer you have plaque up be the

00:26:19,859 --> 00:26:25,619
slash application in our case you have

00:26:22,739 --> 00:26:31,979
instead of plaque up you have pearl six

00:26:25,619 --> 00:26:35,089
I lib and aside from this the server is

00:26:31,979 --> 00:26:35,089
now rotate again to run

00:26:40,580 --> 00:26:44,409
again this Romanian I apologize

00:26:50,400 --> 00:26:57,210
and again it's all served off my local

00:26:52,440 --> 00:26:59,010
laptop on a local p.m. so hope so

00:26:57,210 --> 00:27:01,470
hopefully proving that it's not indeed

00:26:59,010 --> 00:27:03,600
as slow as people claim you can do basic

00:27:01,470 --> 00:27:09,210
web applications on your app on your

00:27:03,600 --> 00:27:10,970
laptop if you I had a full say a full

00:27:09,210 --> 00:27:13,140
desktop machine it will be much faster

00:27:10,970 --> 00:27:15,770
might don't personally have that right

00:27:13,140 --> 00:27:19,160
now because I do all my develop yes well

00:27:15,770 --> 00:27:22,830
small apartment and I have bought a

00:27:19,160 --> 00:27:27,240
actual desktop machine but in terms of

00:27:22,830 --> 00:27:32,910
performance is doing fine at least it

00:27:27,240 --> 00:27:35,490
works for me so so again it is practical

00:27:32,910 --> 00:27:38,850
it handles again at least 200

00:27:35,490 --> 00:27:41,850
consecutive sessions it does mayor

00:27:38,850 --> 00:27:44,370
sessions you could add your own database

00:27:41,850 --> 00:27:47,900
management with the dbi I was hoping to

00:27:44,370 --> 00:27:51,840
have a full wiki available before rum

00:27:47,900 --> 00:27:55,200
before gap see but unfortunately work

00:27:51,840 --> 00:27:57,750
intervene I got the point of using a

00:27:55,200 --> 00:28:01,950
sequel light on the backend and creating

00:27:57,750 --> 00:28:07,920
a session management and and using the

00:28:01,950 --> 00:28:11,940
current markdown module in in Perl 6 to

00:28:07,920 --> 00:28:14,910
work I will keep everyone posted via

00:28:11,940 --> 00:28:17,730
Twitter and Facebook a server when this

00:28:14,910 --> 00:28:19,320
is actually ready to go but let's take a

00:28:17,730 --> 00:28:21,680
look a little bit at the a fur coat

00:28:19,320 --> 00:28:21,680
running

00:28:39,570 --> 00:28:45,630
alright this is a this is a simple

00:28:43,450 --> 00:28:50,440
implantation of a Prius for application

00:28:45,630 --> 00:28:55,060
at the start is that obviously a pearl

00:28:50,440 --> 00:28:56,640
five you have / 06 f Prancer roots is

00:28:55,060 --> 00:29:00,010
the only March that you need to load

00:28:56,640 --> 00:29:04,390
this handles all the basics this hit

00:29:00,010 --> 00:29:07,480
this creates down here the root this

00:29:04,390 --> 00:29:11,410
create priests roots and this is the old

00:29:07,480 --> 00:29:14,130
Prancer section phone inside here five

00:29:11,410 --> 00:29:14,130
cents change that

00:29:18,990 --> 00:29:24,990
but yet it also frees it's really simple

00:29:21,240 --> 00:29:30,150
does it a test cookie with type with the

00:29:24,990 --> 00:29:32,100
value of x value 42 and although i

00:29:30,150 --> 00:29:34,440
hearing you see a lot of the different

00:29:32,100 --> 00:29:37,410
kinds of bruce that you can create and

00:29:34,440 --> 00:29:45,270
again this is equivalent of fees post

00:29:37,410 --> 00:29:46,980
default colon alt yep if you will call

00:29:45,270 --> 00:29:50,340
impression work alt or some other

00:29:46,980 --> 00:29:55,380
alternative implant in dancer that's

00:29:50,340 --> 00:29:57,360
equivalent thereof you have fees / video

00:29:55,380 --> 00:30:01,490
/ files / default and then impression

00:29:57,360 --> 00:30:01,490
work all urss we can take a look at that

00:30:28,990 --> 00:30:34,230
I assume have lost my RSS feed section

00:30:36,030 --> 00:30:41,620
but again it's law of HTML however again

00:30:39,820 --> 00:30:44,440
this these are all dynamic all these

00:30:41,620 --> 00:30:47,350
down here you'll see it's hard to see I

00:30:44,440 --> 00:30:50,620
might laptop it down here you see that

00:30:47,350 --> 00:30:59,410
this is in fact a static HTML file fed

00:30:50,620 --> 00:31:02,050
by Prancer well again harzianum I

00:30:59,410 --> 00:31:04,270
apologize but you have a profile and

00:31:02,050 --> 00:31:11,679
then profile ID and these volunteer

00:31:04,270 --> 00:31:14,590
rated by the handlers what you saw there

00:31:11,679 --> 00:31:18,900
was profile / it in a defiant integer

00:31:14,590 --> 00:31:18,900
profile ID this is what gets called

00:31:21,929 --> 00:31:28,390
profile / and then a integer here that's

00:31:25,780 --> 00:31:34,660
function one-to-one mapping between your

00:31:28,390 --> 00:31:37,690
URL with the with the type and with your

00:31:34,660 --> 00:31:43,059
code down here profile and then a

00:31:37,690 --> 00:31:45,429
integer 11 and this also lets you if you

00:31:43,059 --> 00:31:50,470
have say well if you have multiple

00:31:45,429 --> 00:31:53,220
applications going on thank you if you

00:31:50,470 --> 00:31:55,570
have say multiplications or mobile

00:31:53,220 --> 00:31:58,600
versions of a nap with your friend

00:31:55,570 --> 00:32:01,179
emerge this also lets you let pearl do

00:31:58,600 --> 00:32:03,550
all the heavy lifting and it will report

00:32:01,179 --> 00:32:05,559
instead of you having to go through your

00:32:03,550 --> 00:32:09,870
dance replication find out that you have

00:32:05,559 --> 00:32:12,550
two URLs your handles for the same route

00:32:09,870 --> 00:32:14,920
this less pearl do all the work for you

00:32:12,550 --> 00:32:19,270
and it were more instead they have a

00:32:14,920 --> 00:32:21,720
root conflict so a Perl 6 does it

00:32:19,270 --> 00:32:21,720
looking for you

00:32:25,140 --> 00:32:27,140
Oh

00:32:28,450 --> 00:32:35,810
search here right now I need this as a

00:32:31,580 --> 00:32:38,720
string but it will take this date I map

00:32:35,810 --> 00:32:43,040
are set in two ways in term a date for

00:32:38,720 --> 00:32:46,820
you as well so I could go in in the new

00:32:43,040 --> 00:32:49,390
version I'd have to find and update that

00:32:46,820 --> 00:32:53,000
too from the stir to day or day time and

00:32:49,390 --> 00:32:56,200
let it do the work for me and it just

00:32:53,000 --> 00:32:59,860
goes through and metra bleep as a work

00:32:56,200 --> 00:33:02,930
previous new roof was searched with a

00:32:59,860 --> 00:33:07,730
pipe with the search / search /

00:33:02,930 --> 00:33:09,740
timestamp / timestamp and that is the

00:33:07,730 --> 00:33:11,980
if-then-else seem laying a database

00:33:09,740 --> 00:33:11,980
access

00:33:22,610 --> 00:33:25,360
or so

00:33:26,509 --> 00:33:33,409
and that's again running the axes are

00:33:30,769 --> 00:33:36,019
here with search and then passing in a

00:33:33,409 --> 00:33:38,749
update min and up daya max string and

00:33:36,019 --> 00:33:41,409
optional match results Here I am

00:33:38,749 --> 00:33:46,429
simulating how you access the database

00:33:41,409 --> 00:33:50,239
or any sort of static content on the

00:33:46,429 --> 00:33:53,570
drive I can go through a show a lot more

00:33:50,239 --> 00:33:56,719
of the inner workings way we have

00:33:53,570 --> 00:34:00,169
pressures going on anything nearly or

00:33:56,719 --> 00:34:02,440
have I covered d uh-huh one back I'm

00:34:00,169 --> 00:34:02,440
sorry

00:34:07,960 --> 00:34:17,210
okay question is the stir the date-time

00:34:14,000 --> 00:34:20,290
here that would be used in the code yes

00:34:17,210 --> 00:34:23,690
those are in fact core Perl 6 built-ins

00:34:20,290 --> 00:34:26,030
so if you want to you theoretically I

00:34:23,690 --> 00:34:30,500
could even default to you could even

00:34:26,030 --> 00:34:35,929
take a date here update set a default to

00:34:30,500 --> 00:34:39,340
now and search and use your search for

00:34:35,929 --> 00:34:39,340
that but yes they are built-ins

00:34:46,370 --> 00:34:51,930
okay expression was is the is dancer

00:34:49,860 --> 00:34:53,400
configuration based around same print

00:34:51,930 --> 00:34:56,010
I'm sorry Prancer configuration based

00:34:53,400 --> 00:34:58,800
around the same as dancer that is my

00:34:56,010 --> 00:35:00,420
intent yes I haven't gotten to that

00:34:58,800 --> 00:35:02,340
point yet do you have a proper

00:35:00,420 --> 00:35:05,550
configuration file most of all I see

00:35:02,340 --> 00:35:10,200
here is right now our code as I don't as

00:35:05,550 --> 00:35:12,510
I don't yet know quite how am I going to

00:35:10,200 --> 00:35:15,650
arrange the air configuration about the

00:35:12,510 --> 00:35:20,190
intent is to have this be a proper

00:35:15,650 --> 00:35:23,190
static figuration file so you use I'm

00:35:20,190 --> 00:35:27,780
thinking actually either JSON or a

00:35:23,190 --> 00:35:30,150
straightforward ini file because the one

00:35:27,780 --> 00:35:32,640
thing that i do not want their uh and

00:35:30,150 --> 00:35:35,520
this person preference is any sort of

00:35:32,640 --> 00:35:37,640
pearl compile code in the configuration

00:35:35,520 --> 00:35:41,900
file that defeats purpose of my opinion

00:35:37,640 --> 00:35:47,180
so when we have a proper configuration

00:35:41,900 --> 00:35:47,180
or config file it'll be static content

00:35:58,200 --> 00:36:04,800
okay uh we I do have something similar

00:36:01,060 --> 00:36:04,800
that right now one moment

00:36:13,420 --> 00:36:23,980
I think that's rival oh yes yeah that

00:36:19,690 --> 00:36:27,790
this this is a trace I'll show you what

00:36:23,980 --> 00:36:30,160
actual load here second but the intent

00:36:27,790 --> 00:36:33,180
is to have something similar to how

00:36:30,160 --> 00:36:37,869
Apache does is logging with a SPF

00:36:33,180 --> 00:36:40,839
styling Rachel file yeah but this also

00:36:37,869 --> 00:36:44,430
lets you see what what the application

00:36:40,839 --> 00:36:47,700
is actually on trying to process and

00:36:44,430 --> 00:36:51,690
internally how this is all working

00:36:47,700 --> 00:36:56,230
internally you see here we have a the

00:36:51,690 --> 00:36:59,020
default route widget /a feed / and then

00:36:56,230 --> 00:37:01,030
an int type because thankfully peril

00:36:59,020 --> 00:37:04,839
cannot be part of the URL so i chose to

00:37:01,030 --> 00:37:07,930
use that as marker and pound int I don't

00:37:04,839 --> 00:37:13,299
have a stir type here apparently in the

00:37:07,930 --> 00:37:17,829
sample but but we only can add that

00:37:13,299 --> 00:37:19,780
later on and that may also be a further

00:37:17,829 --> 00:37:22,660
bug in the application because this

00:37:19,780 --> 00:37:26,140
should be registering the optional

00:37:22,660 --> 00:37:28,839
application brave balls again although

00:37:26,140 --> 00:37:31,809
this is based around the fact that both

00:37:28,839 --> 00:37:34,839
Perl 6 cipher types are incredibly

00:37:31,809 --> 00:37:38,500
flexible and more importantly they

00:37:34,839 --> 00:37:41,619
introspect from pearls is code there so

00:37:38,500 --> 00:37:44,559
there is no equivalent thereof of excess

00:37:41,619 --> 00:37:47,910
going on here there is no trickery that

00:37:44,559 --> 00:37:52,420
you will use in say dancer to go in and

00:37:47,910 --> 00:37:54,520
and look for less no values or play with

00:37:52,420 --> 00:37:58,299
scoping this is all done it using pure

00:37:54,520 --> 00:38:00,430
Pro six and the incredibly powerful

00:37:58,299 --> 00:38:02,760
introspection and social analysis that

00:38:00,430 --> 00:38:02,760
we have

00:38:39,099 --> 00:38:44,079
just to give you a little bit of idea of

00:38:40,989 --> 00:38:46,720
how you go around poking around inside

00:38:44,079 --> 00:38:50,529
the internals of a function method I'm

00:38:46,720 --> 00:38:53,049
sorry of a function or a method this

00:38:50,529 --> 00:38:58,150
routine here gets called when you see

00:38:53,049 --> 00:39:00,249
the is root declaration done so what

00:38:58,150 --> 00:39:03,130
it's doing here is this is taking a

00:39:00,249 --> 00:39:06,400
routine which is the entire pearl says

00:39:03,130 --> 00:39:10,170
code that gets passed in and looking

00:39:06,400 --> 00:39:12,549
over and looking over the accenture

00:39:10,170 --> 00:39:16,089
which would be of course the variables

00:39:12,549 --> 00:39:18,400
that get passed in at each point parcels

00:39:16,089 --> 00:39:20,079
out ignoring them if they're optional

00:39:18,400 --> 00:39:24,999
that's the part that was alluding to a

00:39:20,079 --> 00:39:28,900
few minutes ago and translating if it

00:39:24,999 --> 00:39:31,660
has natural name ie if it is a ie if

00:39:28,900 --> 00:39:37,239
it's not a constant like crow / postcode

00:39:31,660 --> 00:39:41,589
I if it's a inner or stir type you know

00:39:37,239 --> 00:39:45,700
this tastes as the pound here and the

00:39:41,589 --> 00:39:47,319
type or it just turns the parameter goes

00:39:45,700 --> 00:39:50,079
a little bit deeper into the constant

00:39:47,319 --> 00:39:53,259
and pulls out the string inside that and

00:39:50,079 --> 00:39:55,569
create it as name so this is actually

00:39:53,259 --> 00:39:58,930
right here the core of why you see going

00:39:55,569 --> 00:40:01,499
on in in the background of the branch

00:39:58,930 --> 00:40:05,799
replication every application every

00:40:01,499 --> 00:40:08,369
method call that you see doing the is

00:40:05,799 --> 00:40:11,380
ruin else is all rain through infection

00:40:08,369 --> 00:40:15,880
so this is a seriously décor and it's

00:40:11,380 --> 00:40:19,210
less as refill it does have a few help

00:40:15,880 --> 00:40:23,589
us here bram to string could be bumped

00:40:19,210 --> 00:40:27,219
down a little bit but that's essentially

00:40:23,589 --> 00:40:31,450
yet and we take a look at that down here

00:40:27,219 --> 00:40:34,539
i I'm not quite sure why I needed the

00:40:31,450 --> 00:40:37,329
for block here and I'm still playing

00:40:34,539 --> 00:40:41,529
around with perl 6 style so the ax for

00:40:37,329 --> 00:40:43,960
vogue is probably not necessary to do

00:40:41,529 --> 00:40:45,819
but in essence all the manipulation that

00:40:43,960 --> 00:40:49,589
you see here doing all the tightly

00:40:45,819 --> 00:40:51,890
destruction and analysis is all done in

00:40:49,589 --> 00:40:59,299
us in roughly

00:40:51,890 --> 00:41:01,160
templates code there are some helpers

00:40:59,299 --> 00:41:08,180
here that actually that do more than

00:41:01,160 --> 00:41:10,240
heavy lifting here I assume I had a

00:41:08,180 --> 00:41:15,769
point for naming a strong red and string

00:41:10,240 --> 00:41:19,609
past tense but this and this here is

00:41:15,769 --> 00:41:22,400
still very much not not yet perl 6 style

00:41:19,609 --> 00:41:28,190
as i haven't yet decide if what my

00:41:22,400 --> 00:41:30,740
pearls and style is yeah I keep I keep

00:41:28,190 --> 00:41:32,990
taking on basically a weekly basis in

00:41:30,740 --> 00:41:34,880
now that I've been to I want you to

00:41:32,990 --> 00:41:40,579
update Mia's talks I have to go home for

00:41:34,880 --> 00:41:42,200
about a week and recover all right one

00:41:40,579 --> 00:41:48,829
more minute here anyone else have

00:41:42,200 --> 00:41:51,260
questions and by the way I tried to

00:41:48,829 --> 00:41:53,779
write this code as spray for as as

00:41:51,260 --> 00:41:57,950
possible instead of trying to connect

00:41:53,779 --> 00:42:00,890
down to at Amy level 22 line operators

00:41:57,950 --> 00:42:03,440
so that way i can go in and fix it when

00:42:00,890 --> 00:42:10,450
i forget what's going on after five or

00:42:03,440 --> 00:42:10,450
six beers or after damian talks again

00:42:12,730 --> 00:42:21,640
yeah pretty much okay anyone else

00:42:16,970 --> 00:42:21,640
questions or comments ideas

00:42:23,980 --> 00:42:33,320
well you know the fair I alluded earlier

00:42:28,940 --> 00:42:34,850
to the fact that um I lose earlier the

00:42:33,320 --> 00:42:38,990
stories of fact that i'm also working on

00:42:34,850 --> 00:42:41,810
blogs / org and i'm hoping that this

00:42:38,990 --> 00:42:47,900
might prove as a replacement here in a

00:42:41,810 --> 00:42:54,619
few months time I don't know amalia we

00:42:47,900 --> 00:42:58,190
need to talk at some point hi yeah sln a

00:42:54,619 --> 00:43:01,790
little by the way I might in at one

00:42:58,190 --> 00:43:04,790
point is to try to add this as a

00:43:01,790 --> 00:43:07,790
separate test bed alongside the

00:43:04,790 --> 00:43:10,910
curveballs pearl org which is now kind

00:43:07,790 --> 00:43:13,640
of being transitioned to another team or

00:43:10,910 --> 00:43:16,340
rather I'm now working on two different

00:43:13,640 --> 00:43:18,710
teams so I'm doing team management for

00:43:16,340 --> 00:43:21,560
the current large pearl project so I'm

00:43:18,710 --> 00:43:24,320
hoping to do this as a side so I'm

00:43:21,560 --> 00:43:27,500
hoping to have eventually a blog for

00:43:24,320 --> 00:43:32,480
Lord powered by Perl 6 but we'll have to

00:43:27,500 --> 00:43:34,850
see and again the application as it

00:43:32,480 --> 00:43:38,540
stands is probably stable enough to

00:43:34,850 --> 00:43:41,180
handle the load were seeing right now

00:43:38,540 --> 00:43:43,790
long curve large pores so I feel fairly

00:43:41,180 --> 00:43:46,820
confident that it could be done nice

00:43:43,790 --> 00:43:50,600
need to talk with torpedo and the other

00:43:46,820 --> 00:43:52,790
members of the crust team to talk about

00:43:50,600 --> 00:43:59,440
how we want to go forward because

00:43:52,790 --> 00:44:02,480
there's a new a new p6 GI as opposed to

00:43:59,440 --> 00:44:05,690
as opposed to the current pro/5 plaque

00:44:02,480 --> 00:44:08,030
spec that is being talked about so once

00:44:05,690 --> 00:44:11,390
that's done i'll report the application

00:44:08,030 --> 00:44:14,780
here over to the new stack you have a

00:44:11,390 --> 00:44:17,290
more performing and we'll performed it

00:44:14,780 --> 00:44:17,290
yes

00:44:19,029 --> 00:44:22,029
ok

00:44:31,020 --> 00:44:37,130
yeah we ready that one

00:44:41,050 --> 00:44:49,640
now the okay Prancer does section is a

00:44:46,820 --> 00:44:53,600
hash ref this is occurrence this is the

00:44:49,640 --> 00:44:57,260
current session in saipan sir so you

00:44:53,600 --> 00:45:02,420
have saved our Prancer dot race session

00:44:57,260 --> 00:45:04,460
and brace form and eventually and also

00:45:02,420 --> 00:45:08,270
ian fee if you want access for anything

00:45:04,460 --> 00:45:10,750
else i just chose to use session and for

00:45:08,270 --> 00:45:15,410
because they were easy to write out i

00:45:10,750 --> 00:45:17,600
know that in dancer there this is all

00:45:15,410 --> 00:45:20,180
done by a separate dsl and you'd have a

00:45:17,600 --> 00:45:24,890
standalone function call session or

00:45:20,180 --> 00:45:27,940
called for called root parameters i

00:45:24,890 --> 00:45:31,310
chose not to do that because i felt that

00:45:27,940 --> 00:45:34,390
the having the dynamic variables wells

00:45:31,310 --> 00:45:37,280
call here the dollar star was la cleaner

00:45:34,390 --> 00:45:40,990
and lets me spans well because this way

00:45:37,280 --> 00:45:43,790
I free is separate I in turn this entire

00:45:40,990 --> 00:45:45,860
Prancer thing into went off it and then

00:45:43,790 --> 00:45:48,760
let you create whatever you want to

00:45:45,860 --> 00:45:50,960
returns of overriding already rolls

00:45:48,760 --> 00:45:53,090
instead of me having to come up with all

00:45:50,960 --> 00:45:55,250
of the fun stuff and it frays a separate

00:45:53,090 --> 00:45:58,040
module pluggable mechanism this way you

00:45:55,250 --> 00:46:01,160
can create your own role subclass you're

00:45:58,040 --> 00:46:06,170
also class and add in a role that does

00:46:01,160 --> 00:46:11,270
what you want to match okay and if there

00:46:06,170 --> 00:46:14,650
are no more questions anyone all right I

00:46:11,270 --> 00:46:14,650

YouTube URL: https://www.youtube.com/watch?v=W1iTkACkbcM


