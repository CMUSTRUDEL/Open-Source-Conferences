Title: 2016 - ‎Open Street Maps with Perl - DeLorean Dashboard Pt. II‎  -  Micheal Conrad
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:02,300 --> 00:00:15,289
testing one two three pretty good all

00:00:08,370 --> 00:00:15,289
right switch legs back first all right

00:00:19,880 --> 00:00:28,320
I set to go all right so I don't know

00:00:26,849 --> 00:00:30,779
how many of you solved my presentation

00:00:28,320 --> 00:00:34,230
last year but uh you know the project is

00:00:30,779 --> 00:00:36,180
that I have a DeLorean and it has a I've

00:00:34,230 --> 00:00:38,129
replaced the instrument cluster with my

00:00:36,180 --> 00:00:40,050
own creation like you know out of

00:00:38,129 --> 00:00:41,670
fiberglass with a computer monitor in it

00:00:40,050 --> 00:00:44,780
and I installed the computer in the car

00:00:41,670 --> 00:00:46,980
and I'm you know collecting data off of

00:00:44,780 --> 00:00:50,420
the you know the circuits of the car and

00:00:46,980 --> 00:00:53,670
rendering in my instrument cluster and

00:00:50,420 --> 00:00:56,670
so did a quick recap of last year is

00:00:53,670 --> 00:00:58,920
that you know there's like an example of

00:00:56,670 --> 00:01:04,860
what my gay just look like and actually

00:00:58,920 --> 00:01:07,140
I can animate that here we go so there's

00:01:04,860 --> 00:01:10,460
the gauges in action so the the next

00:01:07,140 --> 00:01:10,460
thing that I wanted to do for it

00:01:10,520 --> 00:01:13,890
actually I you know I have a lot of

00:01:12,570 --> 00:01:17,040
things I want to do for it next but the

00:01:13,890 --> 00:01:19,170
1i I decided to tackle next was to add

00:01:17,040 --> 00:01:21,180
mapping support so you can see in the

00:01:19,170 --> 00:01:23,430
lower left corner there there's a little

00:01:21,180 --> 00:01:25,799
! telling me that I don't have a GPS

00:01:23,430 --> 00:01:27,270
unit plug in if that was plugged in it

00:01:25,799 --> 00:01:28,740
would tell me how many satellites I have

00:01:27,270 --> 00:01:30,270
and it would turn green once it had a

00:01:28,740 --> 00:01:31,740
fix and it would automatically update

00:01:30,270 --> 00:01:34,289
the clock of the computer to match

00:01:31,740 --> 00:01:36,569
because you get that over a GPS anyway

00:01:34,289 --> 00:01:38,999
so you know I wanted to enhance that and

00:01:36,569 --> 00:01:41,840
go ahead and I didn't necessarily want

00:01:38,999 --> 00:01:44,850
to create my own like you know

00:01:41,840 --> 00:01:46,950
turn-by-turn navigation because honestly

00:01:44,850 --> 00:01:48,689
I find those kind of annoying so what I

00:01:46,950 --> 00:01:53,039
really wanted to do was just have some

00:01:48,689 --> 00:01:55,409
kind of mapping program that shows me

00:01:53,039 --> 00:01:57,569
the nearby roads you know emphasizes the

00:01:55,409 --> 00:01:59,670
major ones kind of hides the ones that

00:01:57,569 --> 00:02:01,979
you know don't lead anywhere and you

00:01:59,670 --> 00:02:03,509
know emphasizes the possible ways that I

00:02:01,979 --> 00:02:08,940
could get to my destination and then

00:02:03,509 --> 00:02:11,760
I'll figure it out from there so turn

00:02:08,940 --> 00:02:14,230
that off so

00:02:11,760 --> 00:02:18,069
the next thing is that because it's in a

00:02:14,230 --> 00:02:20,050
car I wanted to operate offline I don't

00:02:18,069 --> 00:02:21,459
want to have to have a live internet

00:02:20,050 --> 00:02:24,600
connection to pull this stuff off of

00:02:21,459 --> 00:02:28,030
like Google Maps or somebody like that

00:02:24,600 --> 00:02:29,410
not to mention you know it would if it's

00:02:28,030 --> 00:02:30,910
even feasible you know you might just

00:02:29,410 --> 00:02:33,130
run over your data plan if you're

00:02:30,910 --> 00:02:36,100
driving around continuously with that

00:02:33,130 --> 00:02:37,780
enabled so I wanted to have the map

00:02:36,100 --> 00:02:40,420
graphics merged with the rest of my

00:02:37,780 --> 00:02:43,810
dashboard so and you know if the Google

00:02:40,420 --> 00:02:45,640
Maps app is great except you know it's a

00:02:43,810 --> 00:02:49,090
nap it's a separate thing and it's not

00:02:45,640 --> 00:02:50,440
merged with the graphics so i wanted i

00:02:49,090 --> 00:02:51,910
wanted something that I could like a

00:02:50,440 --> 00:02:54,450
library that I could reach in and like

00:02:51,910 --> 00:02:57,070
pull out images and things like that I

00:02:54,450 --> 00:02:59,560
want to render them in real time so you

00:02:57,070 --> 00:03:01,840
know I have a solid state drive in the

00:02:59,560 --> 00:03:07,060
car and it's only like you know 90 gig

00:03:01,840 --> 00:03:08,860
or something like that so I was pretty

00:03:07,060 --> 00:03:11,019
sure that I wouldn't have enough room to

00:03:08,860 --> 00:03:14,380
pre-render like every tile in the entire

00:03:11,019 --> 00:03:15,940
United States and compress that down and

00:03:14,380 --> 00:03:17,620
get it to fit on my solid state disk and

00:03:15,940 --> 00:03:20,560
you know I could buy a bigger

00:03:17,620 --> 00:03:23,230
solid-state disk they're expensive so I

00:03:20,560 --> 00:03:25,239
looked around at some perl modules most

00:03:23,230 --> 00:03:27,040
of the ones on cpn only do forward

00:03:25,239 --> 00:03:28,959
geocoding meaning that you tell it a

00:03:27,040 --> 00:03:31,810
place and it tells you the latitude and

00:03:28,959 --> 00:03:33,160
longitude so there I didn't find any of

00:03:31,810 --> 00:03:34,840
them where you give it the latitude

00:03:33,160 --> 00:03:39,370
longitude and it tells you everything in

00:03:34,840 --> 00:03:42,370
the area a lot of the other geocoding

00:03:39,370 --> 00:03:43,299
modules query Web API is which is you

00:03:42,370 --> 00:03:46,900
know obviously not a thing I'm looking

00:03:43,299 --> 00:03:48,910
for really and most of the code which I

00:03:46,900 --> 00:03:51,040
that I found that renders maps is

00:03:48,910 --> 00:03:53,350
usually like sending it off to you know

00:03:51,040 --> 00:03:55,959
an external program which does the

00:03:53,350 --> 00:03:57,610
rendering for you and you know unless

00:03:55,959 --> 00:03:59,440
you can keep that external program

00:03:57,610 --> 00:04:02,079
running and pipe back and forth it's

00:03:59,440 --> 00:04:03,820
it's going to be a noticeable slow down

00:04:02,079 --> 00:04:07,510
if you have to shell out to a different

00:04:03,820 --> 00:04:10,030
program to render your Maps so you know

00:04:07,510 --> 00:04:11,799
their gun is the google maps app i would

00:04:10,030 --> 00:04:13,570
have to install the android stack on my

00:04:11,799 --> 00:04:15,430
car then I would have to you know find

00:04:13,570 --> 00:04:16,870
some way to you know capture its output

00:04:15,430 --> 00:04:20,320
which could be done with like a virtual

00:04:16,870 --> 00:04:23,050
x server or something like that but and

00:04:20,320 --> 00:04:24,280
it's cheesy and then you don't have the

00:04:23,050 --> 00:04:26,470
ability to touch the screen

00:04:24,280 --> 00:04:28,540
so without a touch screen how you even

00:04:26,470 --> 00:04:31,870
use Google Maps you'd have to like fake

00:04:28,540 --> 00:04:33,850
input anyway so and then Google Maps

00:04:31,870 --> 00:04:35,800
auto updates all the time and it's

00:04:33,850 --> 00:04:37,510
constantly breaking things so if you

00:04:35,800 --> 00:04:43,360
tried doing custom stuff it would

00:04:37,510 --> 00:04:45,550
probably not work for very long so then

00:04:43,360 --> 00:04:46,510
there's the google maps api which you

00:04:45,550 --> 00:04:49,840
know it requires an internet connection

00:04:46,510 --> 00:04:52,620
unless I precache all the tiles but I

00:04:49,840 --> 00:04:54,850
looked into it and you know the API is

00:04:52,620 --> 00:04:56,230
give you a limited number of requests

00:04:54,850 --> 00:04:57,760
per month you know they don't like you

00:04:56,230 --> 00:05:01,000
just like fetch their entire database

00:04:57,760 --> 00:05:02,860
through their API and there's you know

00:05:01,000 --> 00:05:06,430
still probably a storage problem because

00:05:02,860 --> 00:05:09,030
they give you a lot of data so then

00:05:06,430 --> 00:05:12,700
there's a tiger database that the USA

00:05:09,030 --> 00:05:14,380
census bureau provides as I was reading

00:05:12,700 --> 00:05:16,870
around on the forums people were like

00:05:14,380 --> 00:05:19,270
with a notoriously inaccurate tiger data

00:05:16,870 --> 00:05:22,540
and I was like well okay maybe i'll try

00:05:19,270 --> 00:05:24,070
my chances with open street maps so so

00:05:22,540 --> 00:05:25,990
Tiger might be in a valid option i

00:05:24,070 --> 00:05:30,160
didn't really investigate them very

00:05:25,990 --> 00:05:31,930
thoroughly so open street maps i I

00:05:30,160 --> 00:05:34,240
didn't really know much about it when I

00:05:31,930 --> 00:05:37,630
started it's a collaborative effort like

00:05:34,240 --> 00:05:39,610
Wikipedia so you log into their site you

00:05:37,630 --> 00:05:41,350
get an account and then you open up

00:05:39,610 --> 00:05:43,690
their web based editor and you can start

00:05:41,350 --> 00:05:48,789
editing maps so if we jump over to

00:05:43,690 --> 00:05:50,620
Firefox here yeah there you go so that

00:05:48,789 --> 00:05:56,640
this is open street maps they've got

00:05:50,620 --> 00:05:56,640
they've got where is it

00:06:01,040 --> 00:06:04,760
okay so the other thing is that the

00:06:02,570 --> 00:06:07,130
Wi-Fi keeps cutting out which is exactly

00:06:04,760 --> 00:06:08,900
why you don't want to have a web-based

00:06:07,130 --> 00:06:13,130
service when you're trying to drive

00:06:08,900 --> 00:06:18,310
around in your car I found that loading

00:06:13,130 --> 00:06:18,310
example.com gets the Wi-Fi to work again

00:06:22,930 --> 00:06:28,160
so there goes anyway so they've got lots

00:06:26,600 --> 00:06:29,990
of layers they've got lots of additional

00:06:28,160 --> 00:06:40,360
information you can turn stuff on and

00:06:29,990 --> 00:06:40,360
off you can go to the I'm logged in I'm

00:06:43,240 --> 00:06:49,750
no thanks

00:06:46,600 --> 00:06:51,220
forgot about that so you could look like

00:06:49,750 --> 00:06:55,890
you know jump down into the middle of

00:06:51,220 --> 00:06:55,890
New York and then click the edit button

00:07:02,849 --> 00:07:08,459
you can just grab a street you could

00:07:05,189 --> 00:07:09,839
like you know delete the intersection

00:07:08,459 --> 00:07:11,789
move the intersection and a whole bunch

00:07:09,839 --> 00:07:14,189
of other you know options they have the

00:07:11,789 --> 00:07:15,990
satellite imagery to help you line up

00:07:14,189 --> 00:07:17,550
your roads and stuff and it's a really

00:07:15,990 --> 00:07:19,409
nice project so I was kind of surprised

00:07:17,550 --> 00:07:21,479
that I had never heard much about it

00:07:19,409 --> 00:07:23,399
before but yeah so it's like a

00:07:21,479 --> 00:07:25,529
collaborative effort like Wikipedia you

00:07:23,399 --> 00:07:27,209
can just log in if your street isn't

00:07:25,529 --> 00:07:29,969
quite lined up right or if somebody

00:07:27,209 --> 00:07:31,110
forgot that the road you're on and you

00:07:29,969 --> 00:07:33,089
know thought it was a driveway or

00:07:31,110 --> 00:07:35,219
something you can that and make

00:07:33,089 --> 00:07:38,929
updates but for the most part everything

00:07:35,219 --> 00:07:41,610
I've looked at is about right so it's

00:07:38,929 --> 00:07:44,459
they've already done most of the editing

00:07:41,610 --> 00:07:47,819
and it's kind of ready for use as is so

00:07:44,459 --> 00:07:51,499
I I was pretty happy with that so back

00:07:47,819 --> 00:07:53,759
to slides the data is freely available

00:07:51,499 --> 00:07:55,769
there's a company kind of sponsoring

00:07:53,759 --> 00:08:00,360
this thing and they provide services you

00:07:55,769 --> 00:08:01,499
know with the data so that you can you

00:08:00,360 --> 00:08:03,330
know that they help you do things with

00:08:01,499 --> 00:08:05,490
it but they provide free downloads and

00:08:03,330 --> 00:08:08,639
you can go and download just gigabytes

00:08:05,490 --> 00:08:11,219
and gigabytes and gigabytes of you know

00:08:08,639 --> 00:08:15,659
data so that I think it's like eight

00:08:11,219 --> 00:08:17,219
gigabytes for the entire US but they

00:08:15,659 --> 00:08:19,559
have they have the entire world maps

00:08:17,219 --> 00:08:21,029
pretty much of course I have no idea how

00:08:19,559 --> 00:08:24,930
well they're doing in like you know

00:08:21,029 --> 00:08:29,879
Africa or anything but they do they do

00:08:24,930 --> 00:08:31,709
Europe in the USA pretty well so the way

00:08:29,879 --> 00:08:34,919
people are usually working with the

00:08:31,709 --> 00:08:38,039
OpenStreetMap data is they loaded into

00:08:34,919 --> 00:08:40,229
postgres and they use a post GIS

00:08:38,039 --> 00:08:43,769
extension to postgres to be able to

00:08:40,229 --> 00:08:46,019
efficiently search in two dimensions the

00:08:43,769 --> 00:08:48,029
problem i ran into is that postgres

00:08:46,019 --> 00:08:50,819
can't run on a read-only file system

00:08:48,029 --> 00:08:53,970
like just flat out we don't support that

00:08:50,819 --> 00:08:55,230
you can so if i wanted to do the car has

00:08:53,970 --> 00:08:56,579
a read-only file system so that I never

00:08:55,230 --> 00:08:58,350
have to worry about losing power and

00:08:56,579 --> 00:09:00,329
having things get corrupted so if I

00:08:58,350 --> 00:09:03,180
wanted to use this in the car I would

00:09:00,329 --> 00:09:07,170
have to do come up with something like

00:09:03,180 --> 00:09:09,000
the lvm you know virtual volume and you

00:09:07,170 --> 00:09:10,620
know or an overlay or something like

00:09:09,000 --> 00:09:11,819
that so the postgres could think that it

00:09:10,620 --> 00:09:13,800
was writing to the file when it wasn't

00:09:11,819 --> 00:09:16,390
but the other thing is that the database

00:09:13,800 --> 00:09:19,270
is huge so it's not just postgres

00:09:16,390 --> 00:09:21,550
stressed with like you know tens of

00:09:19,270 --> 00:09:23,800
gigabytes of you know database which is

00:09:21,550 --> 00:09:26,110
going to also consume some of your you

00:09:23,800 --> 00:09:27,310
know memory resources which I don't have

00:09:26,110 --> 00:09:30,340
a whole lot of in the first place in

00:09:27,310 --> 00:09:32,290
there so you know there I I didn't

00:09:30,340 --> 00:09:35,980
really want to run postgres so I looked

00:09:32,290 --> 00:09:38,670
at some other options you know I wanted

00:09:35,980 --> 00:09:42,130
to maybe do a static key value database

00:09:38,670 --> 00:09:43,870
so I you know the idea there is that you

00:09:42,130 --> 00:09:46,090
know you just I kind of you know just

00:09:43,870 --> 00:09:49,300
that they have fancy algorithms for

00:09:46,090 --> 00:09:52,390
sorting things and you know it spatially

00:09:49,300 --> 00:09:54,040
sorting things but I was like for a map

00:09:52,390 --> 00:09:56,080
it's it's you know kind of

00:09:54,040 --> 00:09:58,900
two-dimensional and you kind of only

00:09:56,080 --> 00:10:01,090
care about certain size blocks because

00:09:58,900 --> 00:10:02,470
as it for navigation software you're

00:10:01,090 --> 00:10:03,910
going to zoom into a certain level and

00:10:02,470 --> 00:10:05,910
you don't really need to see any further

00:10:03,910 --> 00:10:08,550
than that and things are pretty evenly

00:10:05,910 --> 00:10:10,990
distributed you know there's not like

00:10:08,550 --> 00:10:13,480
20,000 nodes all in the same you know

00:10:10,990 --> 00:10:15,400
square mile you know they're spread out

00:10:13,480 --> 00:10:17,260
across the map pretty well so I was like

00:10:15,400 --> 00:10:19,240
well i'll just create these tiles and

00:10:17,260 --> 00:10:21,910
then you know take the feature the roads

00:10:19,240 --> 00:10:23,920
that fit onto those tiles and list them

00:10:21,910 --> 00:10:27,580
in kind of my own index in a key-value

00:10:23,920 --> 00:10:29,140
database and i decided that you know

00:10:27,580 --> 00:10:30,730
since there wasn't already a cpn module

00:10:29,140 --> 00:10:35,260
for reverse geocoding that maybe I'd

00:10:30,730 --> 00:10:37,390
create one so I tried the new proles dbm

00:10:35,260 --> 00:10:39,850
on a tight hash and it immediately ran

00:10:37,390 --> 00:10:41,200
into the size limitations and then I

00:10:39,850 --> 00:10:42,460
looked at some of the other because you

00:10:41,200 --> 00:10:43,810
can only compile one of them in the

00:10:42,460 --> 00:10:45,190
pearl at a time or something like that

00:10:43,810 --> 00:10:46,990
so that you know they have the Berkeley

00:10:45,190 --> 00:10:48,100
DB and the other options but it didn't

00:10:46,990 --> 00:10:49,720
look like any of them were going to be

00:10:48,100 --> 00:10:53,470
able to scale up to multiple gigabytes

00:10:49,720 --> 00:10:54,940
of data so sequel light would do it but

00:10:53,470 --> 00:10:57,700
sequel eight isn't very fast when you're

00:10:54,940 --> 00:11:00,370
just using it as a key value store and

00:10:57,700 --> 00:11:02,440
there's there's a lot of data in open

00:11:00,370 --> 00:11:05,710
street maps no I forgot to mention the

00:11:02,440 --> 00:11:08,350
OpenStreetMap data part of the problem

00:11:05,710 --> 00:11:11,200
is that they divided everything up into

00:11:08,350 --> 00:11:13,780
a node which is the latitude longitude

00:11:11,200 --> 00:11:17,320
coordinate and then there's a way which

00:11:13,780 --> 00:11:20,230
is a series of nodes referenced through

00:11:17,320 --> 00:11:22,570
the schema and then there's a relation

00:11:20,230 --> 00:11:25,210
which is a you know any number of ways

00:11:22,570 --> 00:11:27,490
and nodes with some additional tags

00:11:25,210 --> 00:11:29,590
attached to them and they've represented

00:11:27,490 --> 00:11:33,190
everything on their entire map

00:11:29,590 --> 00:11:35,170
using that you using that data layout so

00:11:33,190 --> 00:11:37,720
what you end up with is like you know a

00:11:35,170 --> 00:11:39,010
single road that you know whines through

00:11:37,720 --> 00:11:43,120
a hill or something like that is gonna

00:11:39,010 --> 00:11:45,880
have like you know 300 nodes along you

00:11:43,120 --> 00:11:48,310
know a one mile length which every node

00:11:45,880 --> 00:11:51,730
gets its own ID in the database its own

00:11:48,310 --> 00:11:53,920
row its own you know timestamp metadata

00:11:51,730 --> 00:11:56,110
to edit it last all that kind of stuff

00:11:53,920 --> 00:11:58,870
and so that there's lots and lots of

00:11:56,110 --> 00:12:00,430
data that they're you know making that

00:11:58,870 --> 00:12:03,400
they're giving you and most of it I

00:12:00,430 --> 00:12:05,020
don't need so one of the things i wanted

00:12:03,400 --> 00:12:07,360
to do with this module is to be able to

00:12:05,020 --> 00:12:09,940
trim down to only the nodes in ways that

00:12:07,360 --> 00:12:11,680
i care about but i also wanted to turn

00:12:09,940 --> 00:12:13,720
them into more meaningful things so like

00:12:11,680 --> 00:12:17,080
you like a way you know as a series of

00:12:13,720 --> 00:12:21,160
notes it could be like the borders of a

00:12:17,080 --> 00:12:22,960
lake or it could be the center of a road

00:12:21,160 --> 00:12:24,790
or it could be you know the tiny little

00:12:22,960 --> 00:12:26,500
piece connecting you know the exit ramp

00:12:24,790 --> 00:12:28,930
connecting two roads or it could be a

00:12:26,500 --> 00:12:31,210
bridge or it could be you know a time

00:12:28,930 --> 00:12:32,560
zone barrier or it could be the boundary

00:12:31,210 --> 00:12:35,410
of a state you know so none of those

00:12:32,560 --> 00:12:36,790
things are very processable when all

00:12:35,410 --> 00:12:38,500
you've got is a string of points you

00:12:36,790 --> 00:12:39,820
have to kind of know what it is and what

00:12:38,500 --> 00:12:43,000
its purpose is and whether it's supposed

00:12:39,820 --> 00:12:45,220
to be an area or a path so with my

00:12:43,000 --> 00:12:48,700
module you know I set out to kind of

00:12:45,220 --> 00:12:52,170
figure out what sensible objects needed

00:12:48,700 --> 00:12:52,170
to be made out of the OpenStreetMap data

00:12:52,740 --> 00:12:57,730
so then you know coming back to the key

00:12:55,720 --> 00:13:00,670
value database you know how do you store

00:12:57,730 --> 00:13:03,460
all of this data I had heard about Elam

00:13:00,670 --> 00:13:08,560
DB and it's a it's the lightning

00:13:03,460 --> 00:13:11,570
database system or module I don't know

00:13:08,560 --> 00:13:14,750
what you call it it's a library so

00:13:11,570 --> 00:13:17,600
they use it in the openldap so it's the

00:13:14,750 --> 00:13:19,820
back end of openldap it is only 32 k of

00:13:17,600 --> 00:13:24,280
code and what they basically do is they

00:13:19,820 --> 00:13:27,650
put a giant memory-mapped tree the

00:13:24,280 --> 00:13:30,620
that's backed by a file but it also

00:13:27,650 --> 00:13:35,930
supports transactions and concurrent

00:13:30,620 --> 00:13:37,640
access so they've kind of taken you you

00:13:35,930 --> 00:13:39,770
can't really get much faster than this

00:13:37,640 --> 00:13:41,900
because what you're doing is you're

00:13:39,770 --> 00:13:44,120
taking you know some number of gigabytes

00:13:41,900 --> 00:13:46,400
of data mapping it into your address

00:13:44,120 --> 00:13:49,760
space and then just accessing the data

00:13:46,400 --> 00:13:51,380
structure so you just jump in and start

00:13:49,760 --> 00:13:53,030
reading memory and it's already loaded

00:13:51,380 --> 00:13:54,560
into your address space you didn't have

00:13:53,030 --> 00:13:58,520
to copy it in and out of a buffer or

00:13:54,560 --> 00:14:02,540
anything like that so it's it works

00:13:58,520 --> 00:14:04,790
really good it's amazingly fast and well

00:14:02,540 --> 00:14:06,680
it supports you know everything 64-bit

00:14:04,790 --> 00:14:10,910
so it supports as much data as you want

00:14:06,680 --> 00:14:14,900
to put in it and it has a CPM module so

00:14:10,910 --> 00:14:17,150
LMK DB underscore file is the Sipan

00:14:14,900 --> 00:14:18,950
module for it and the the author wrote

00:14:17,150 --> 00:14:21,380
it in the style of the other you know

00:14:18,950 --> 00:14:23,210
dbm modules and stuff like that so you

00:14:21,380 --> 00:14:25,370
can just kind of use it as a drop-in

00:14:23,210 --> 00:14:26,780
replacement you can tie it to a hash you

00:14:25,370 --> 00:14:32,530
can just read and write keys from your

00:14:26,780 --> 00:14:34,580
hash you know to infinity and beyond and

00:14:32,530 --> 00:14:36,470
that was pretty cool so i tried the

00:14:34,580 --> 00:14:38,180
tight hash and then I did a little

00:14:36,470 --> 00:14:41,840
performance testing I found that it was

00:14:38,180 --> 00:14:43,490
a lot whoa in a small benchmark example

00:14:41,840 --> 00:14:45,170
it's a lot faster to just call methods

00:14:43,490 --> 00:14:48,110
on the object than it is to tie it to a

00:14:45,170 --> 00:14:51,590
hash and use hash access so yeah you

00:14:48,110 --> 00:14:54,290
know whatever so I I also wanted to

00:14:51,590 --> 00:14:55,850
store pearl data in it so I figured I

00:14:54,290 --> 00:14:58,280
would just use storable I mean I can

00:14:55,850 --> 00:15:01,010
also try JSON I haven't done benchmark

00:14:58,280 --> 00:15:05,720
comparisons but using storable and Ellen

00:15:01,010 --> 00:15:09,560
DB I'm able to write 27,000 objects a

00:15:05,720 --> 00:15:11,980
second so pretty good performing on a

00:15:09,560 --> 00:15:14,150
workstation you know on my laptop so

00:15:11,980 --> 00:15:16,340
reading goes a whole lot faster although

00:15:14,150 --> 00:15:20,390
i don't have the benchmark numbers for

00:15:16,340 --> 00:15:23,090
you and so I the module I'm writing is

00:15:20,390 --> 00:15:24,850
geo colon colon spatial DB colon colon

00:15:23,090 --> 00:15:27,220
and then you know it's gotta be

00:15:24,850 --> 00:15:29,170
to stuff under it oh this is probably I

00:15:27,220 --> 00:15:30,670
don't know arguably the most finished

00:15:29,170 --> 00:15:33,759
piece of the project that I've written

00:15:30,670 --> 00:15:36,190
so far it's the the wrapper around LM DB

00:15:33,759 --> 00:15:39,449
and storable which I might spin this off

00:15:36,190 --> 00:15:43,360
into its own module it's kind of handy

00:15:39,449 --> 00:15:45,880
anyway um so for the tiling i decided

00:15:43,360 --> 00:15:48,880
that i was going to sort my objects

00:15:45,880 --> 00:15:49,810
based on their size so like you know

00:15:48,880 --> 00:15:51,790
part of the problem is that you know

00:15:49,810 --> 00:15:54,550
what happens if you have a feature that

00:15:51,790 --> 00:15:56,769
stretches across the entire state well

00:15:54,550 --> 00:15:59,620
it's going to hit like thousands of

00:15:56,769 --> 00:16:01,509
tiles you know a crop along the way so

00:15:59,620 --> 00:16:03,940
rather than trying to either break up

00:16:01,509 --> 00:16:07,300
the object and store it in all those

00:16:03,940 --> 00:16:09,579
tiles or you know store the entire

00:16:07,300 --> 00:16:11,259
object in each of those tiles i decided

00:16:09,579 --> 00:16:15,819
i would have zoom levels so there's like

00:16:11,259 --> 00:16:17,620
you know there's a whole degree talking

00:16:15,819 --> 00:16:19,180
about degrees of latitude and longitude

00:16:17,620 --> 00:16:22,060
there's like whole degree tiles at the

00:16:19,180 --> 00:16:24,910
top of my tree and so what i do when i

00:16:22,060 --> 00:16:28,120
do a lookup i go to the top level when i

00:16:24,910 --> 00:16:30,819
say what giant objects are there in this

00:16:28,120 --> 00:16:32,620
latitude and longitude and then i zoom

00:16:30,819 --> 00:16:35,410
in to the next one which is you know /

00:16:32,620 --> 00:16:37,449
16 and I say what objects are in this

00:16:35,410 --> 00:16:38,860
box and then i zoom in again and I say

00:16:37,449 --> 00:16:40,540
all right what objects are in the tiny

00:16:38,860 --> 00:16:43,829
box and when i get to the very bottom

00:16:40,540 --> 00:16:46,329
then I just kind of scan through the IDS

00:16:43,829 --> 00:16:49,750
to collect all the remaining tiny

00:16:46,329 --> 00:16:52,569
objects so that that that's how I build

00:16:49,750 --> 00:16:55,839
my set of you know what objects can be

00:16:52,569 --> 00:16:59,079
seen from this you're possibly seen from

00:16:55,839 --> 00:17:01,300
this you know narrow view port and then

00:16:59,079 --> 00:17:03,490
I load all of those objects and i render

00:17:01,300 --> 00:17:06,640
them in OpenGL because that's what the

00:17:03,490 --> 00:17:09,880
rest of my dashboard certain in this is

00:17:06,640 --> 00:17:11,589
the module i'm writing geospatial DVI

00:17:09,880 --> 00:17:15,579
would like it to be used for more things

00:17:11,589 --> 00:17:18,130
than just opengl no I but I have one use

00:17:15,579 --> 00:17:20,140
case so if anybody else has other use

00:17:18,130 --> 00:17:23,380
cases that they would like to see made

00:17:20,140 --> 00:17:26,110
you know possible with this module I am

00:17:23,380 --> 00:17:28,089
very open to suggestions the module is

00:17:26,110 --> 00:17:31,360
not finished I thought it would be by

00:17:28,089 --> 00:17:32,980
the conference there there's a lot of

00:17:31,360 --> 00:17:35,230
crazy things going on in open street

00:17:32,980 --> 00:17:37,570
maps that still needs you know hammered

00:17:35,230 --> 00:17:38,020
out and ironed out so if anybody which

00:17:37,570 --> 00:17:40,000
if

00:17:38,020 --> 00:17:44,080
jiri maybe you are is interested in

00:17:40,000 --> 00:17:45,850
having a reverse geocoding module talk

00:17:44,080 --> 00:17:49,060
to me you know I'd like to collect some

00:17:45,850 --> 00:17:53,310
ideas and click you know what people can

00:17:49,060 --> 00:17:57,400
you know contributions are welcomed

00:17:53,310 --> 00:18:00,340
alright so yeah alright so now we're

00:17:57,400 --> 00:18:07,600
down to the demo which I was up late

00:18:00,340 --> 00:18:11,920
last night working on so this is I

00:18:07,600 --> 00:18:14,830
loaded the entire upper they give you

00:18:11,920 --> 00:18:17,260
the data dumps in large chunks so one of

00:18:14,830 --> 00:18:19,750
the chunks was the Upper East Coast so

00:18:17,260 --> 00:18:22,480
it's kind of like New York and up and

00:18:19,750 --> 00:18:26,370
west as far as Pennsylvania and you can

00:18:22,480 --> 00:18:31,150
download these off of their website and

00:18:26,370 --> 00:18:35,560
it was about 1.1 gig compressed XML and

00:18:31,150 --> 00:18:38,740
it expanded to about 20 gig of you know

00:18:35,560 --> 00:18:40,600
LM DB storable data in because I do a

00:18:38,740 --> 00:18:43,540
two-step process one is I import all of

00:18:40,600 --> 00:18:44,740
the XML nodes to where I have them you

00:18:43,540 --> 00:18:47,530
know quick access to them and I can

00:18:44,740 --> 00:18:49,900
random access across and cross-reference

00:18:47,530 --> 00:18:52,660
things and then the second step is I

00:18:49,900 --> 00:18:54,910
write out a second lightning database

00:18:52,660 --> 00:18:58,000
file that has just the pieces of

00:18:54,910 --> 00:19:01,630
information I once and indexed by the

00:18:58,000 --> 00:19:03,670
tile that they fall into so what we're

00:19:01,630 --> 00:19:05,350
seeing here is I started us at New York

00:19:03,670 --> 00:19:08,500
and we're kind of like coasting

00:19:05,350 --> 00:19:11,950
southeast so eventually you know across

00:19:08,500 --> 00:19:13,420
Long Island here and I've zoomed out

00:19:11,950 --> 00:19:15,130
further than what you would see in the

00:19:13,420 --> 00:19:16,930
car so that you can actually see where

00:19:15,130 --> 00:19:21,970
the tiles are created and destroyed and

00:19:16,930 --> 00:19:23,500
I have a debug mode here that I almost

00:19:21,970 --> 00:19:26,400
didn't get finished in time but luckily

00:19:23,500 --> 00:19:29,680
I did so now you can see where i

00:19:26,400 --> 00:19:31,150
requested the big rectangle and then

00:19:29,680 --> 00:19:33,940
it's loading up all of the small

00:19:31,150 --> 00:19:35,470
rectangles and for each one of those it

00:19:33,940 --> 00:19:38,230
goes out to the database pulls in the

00:19:35,470 --> 00:19:40,000
relevant objects does a bunch of 3d math

00:19:38,230 --> 00:19:42,700
to calculate the vertices and stuff like

00:19:40,000 --> 00:19:44,620
that and then you know plots the lines

00:19:42,700 --> 00:19:46,810
in OpenGL and then compiles it into a

00:19:44,620 --> 00:19:49,630
display list so that you can tell OpenGL

00:19:46,810 --> 00:19:50,240
redo that thing without going back

00:19:49,630 --> 00:19:54,080
through all of

00:19:50,240 --> 00:19:56,090
the process of describing the lines or

00:19:54,080 --> 00:19:57,830
polygons in this case because these each

00:19:56,090 --> 00:20:04,900
one of these is actually a rendered

00:19:57,830 --> 00:20:04,900
textured polygon there's a lot of so

00:20:05,050 --> 00:20:11,900
also the tiling that I'm using is just

00:20:08,179 --> 00:20:13,490
based on like fractions of a degree so I

00:20:11,900 --> 00:20:15,380
started whole degree and then I do you

00:20:13,490 --> 00:20:16,880
know quarters of a degree in both

00:20:15,380 --> 00:20:18,530
directions and then quarters of thats in

00:20:16,880 --> 00:20:21,679
both directions there are probably

00:20:18,530 --> 00:20:23,570
smarter tiling algorithms and if anybody

00:20:21,679 --> 00:20:26,929
knows to some of those and you know

00:20:23,570 --> 00:20:28,370
thinks that they would make a good fit

00:20:26,929 --> 00:20:34,400
for the module then maybe that's another

00:20:28,370 --> 00:20:36,910
cool thing to add as I was testing oh

00:20:34,400 --> 00:20:43,400
the way I'm putting this into OpenGL is

00:20:36,910 --> 00:20:46,400
that is actually as 3d coordinates I

00:20:43,400 --> 00:20:49,429
spent because you know as latitude and

00:20:46,400 --> 00:20:51,679
longitude you know climb vertically they

00:20:49,429 --> 00:20:53,630
they get a little skewed it's no longer

00:20:51,679 --> 00:20:55,250
a square and when you so I was try it at

00:20:53,630 --> 00:20:58,040
first I was trying to apply Corrections

00:20:55,250 --> 00:21:00,980
to kind of take a square and make it not

00:20:58,040 --> 00:21:04,460
square and fiddle around with that so

00:21:00,980 --> 00:21:06,110
instead of that I finally I spent a

00:21:04,460 --> 00:21:10,580
bunch of work on that too I finally

00:21:06,110 --> 00:21:14,240
found that you can I just decided to the

00:21:10,580 --> 00:21:17,360
math trig package has a spherical to

00:21:14,240 --> 00:21:18,890
Cartesian function and so I take the

00:21:17,360 --> 00:21:21,260
latitude and longitude and I plugged

00:21:18,890 --> 00:21:23,030
them into spherical to Cartesian and get

00:21:21,260 --> 00:21:25,340
a three-dimensional point on a unit

00:21:23,030 --> 00:21:27,620
circle and then I just render it in

00:21:25,340 --> 00:21:31,250
OpenGL after setting up the you know the

00:21:27,620 --> 00:21:33,020
rate viewport angles so if we play with

00:21:31,250 --> 00:21:35,630
the code here second I think I'm about

00:21:33,020 --> 00:21:38,620
out of time was that what the yeah at a

00:21:35,630 --> 00:21:42,520
time all right well this is pretty quick

00:21:38,620 --> 00:21:42,520
if we

00:21:43,030 --> 00:22:00,070
zoom out that's zooming in there's a

00:21:57,300 --> 00:22:01,390
higher up view where I'm only loading a

00:22:00,070 --> 00:22:02,830
limited number of tiles because of

00:22:01,390 --> 00:22:05,950
course you can't load too many onto the

00:22:02,830 --> 00:22:11,800
screen at once so there's another 10

00:22:05,950 --> 00:22:16,390
time zoom out and there's another 10

00:22:11,800 --> 00:22:21,070
times oom out and there's another 10

00:22:16,390 --> 00:22:23,230
times oom out so there you have it you

00:22:21,070 --> 00:22:25,000
can you can take OpenGL I just render it

00:22:23,230 --> 00:22:28,600
in 3d and after setting up your camera

00:22:25,000 --> 00:22:31,810
you get perfect you know perspective on

00:22:28,600 --> 00:22:33,910
the coordinates so and then you know in

00:22:31,810 --> 00:22:35,470
the car as I'm driving along i'm going

00:22:33,910 --> 00:22:37,210
to be rotating the camera to kind of

00:22:35,470 --> 00:22:39,220
follow the path that the users taking

00:22:37,210 --> 00:22:42,190
and it's just it's just camera rotations

00:22:39,220 --> 00:22:43,750
from them so it is not loaded into the

00:22:42,190 --> 00:22:46,480
dashboard I can't show that off quite

00:22:43,750 --> 00:22:51,610
yet but that's where / that's where I'm

00:22:46,480 --> 00:22:53,320
at so future work is oh did you notice

00:22:51,610 --> 00:22:54,760
how there was that little like hiccup is

00:22:53,320 --> 00:22:56,410
it would get is it would load the new

00:22:54,760 --> 00:22:58,900
tiles that's because I'm doing all of my

00:22:56,410 --> 00:23:00,790
3d map in Perl right now so if I move

00:22:58,900 --> 00:23:03,430
that to excess I think the hiccup will

00:23:00,790 --> 00:23:05,980
go away and it'll be you know 60 Hertz

00:23:03,430 --> 00:23:08,020
Gary you know 60 frame per second smooth

00:23:05,980 --> 00:23:09,940
and I would like to do better pre

00:23:08,020 --> 00:23:11,530
processing of the data like divide all

00:23:09,940 --> 00:23:12,460
the roads at the intersections and some

00:23:11,530 --> 00:23:14,380
better stuff like that because

00:23:12,460 --> 00:23:16,870
openstreetmap doesn't always do that for

00:23:14,380 --> 00:23:21,250
you and put things in clockwise order

00:23:16,870 --> 00:23:23,110
another helpful stuff and for the higher

00:23:21,250 --> 00:23:25,210
title sighs like I can't zoom out right

00:23:23,110 --> 00:23:27,070
now you know the title sizes are kind of

00:23:25,210 --> 00:23:31,210
fixed I would like to have a thing that

00:23:27,070 --> 00:23:33,460
reduces the number of vertices in shape

00:23:31,210 --> 00:23:34,660
so that you can zoom out and still

00:23:33,460 --> 00:23:37,480
render it and then you would just hide

00:23:34,660 --> 00:23:39,700
the lower tiles so I would like that to

00:23:37,480 --> 00:23:44,340
be built into the pro module and you

00:23:39,700 --> 00:23:44,340
know isn't yet so well there you go

00:23:52,120 --> 00:23:54,180

YouTube URL: https://www.youtube.com/watch?v=ruBzlFMxwyw


