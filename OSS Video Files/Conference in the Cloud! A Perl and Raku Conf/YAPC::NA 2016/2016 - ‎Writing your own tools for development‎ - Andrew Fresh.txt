Title: 2016 - ‎Writing your own tools for development‎ - Andrew Fresh
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:09,120
hi I'm Andrew um you're talking about

00:00:03,290 --> 00:00:11,130
being lazy and improving your processes

00:00:09,120 --> 00:00:14,969
and making yourself happier by being

00:00:11,130 --> 00:00:22,439
impatient I've been working at Grant

00:00:14,969 --> 00:00:24,420
Street for a few years now and I've been

00:00:22,439 --> 00:00:28,800
getting been finding things that annoy

00:00:24,420 --> 00:00:30,810
me and by being properly lazy it's been

00:00:28,800 --> 00:00:34,980
I've been finding way to improve my life

00:00:30,810 --> 00:00:37,770
and make it better and my goal here is

00:00:34,980 --> 00:00:39,989
that as I go along you don't say oh I

00:00:37,770 --> 00:00:42,149
like your example I'll honest I want to

00:00:39,989 --> 00:00:44,910
do what you did I want you to say hey I

00:00:42,149 --> 00:00:49,280
know something that annoys me and I'm

00:00:44,910 --> 00:00:49,280
gonna fix it I want to say only you say

00:00:49,640 --> 00:00:55,469
that that thing that really bugs me I

00:00:51,989 --> 00:00:57,989
can make it better so before I get

00:00:55,469 --> 00:00:59,730
started I want to tell you that a lot of

00:00:57,989 --> 00:01:01,859
times you can fix that not by you

00:00:59,730 --> 00:01:03,719
writing the code or are you doing them

00:01:01,859 --> 00:01:05,600
fixing it a lot of times somebody else

00:01:03,719 --> 00:01:08,310
has already fix it for you so go look

00:01:05,600 --> 00:01:12,150
for example Alex keener gave this very

00:01:08,310 --> 00:01:15,619
similar talk at PyCon and I was I said

00:01:12,150 --> 00:01:19,890
hey I can just play the video and then I

00:01:15,619 --> 00:01:22,049
bet probably mm-hmm probably not what

00:01:19,890 --> 00:01:25,280
you're looking for but it was good so

00:01:22,049 --> 00:01:27,810
you should watch it and I'm going anyway

00:01:25,280 --> 00:01:30,180
sometimes you find code that's like oh I

00:01:27,810 --> 00:01:33,150
love it it's so close it almost fixes my

00:01:30,180 --> 00:01:34,740
problem that is super annoying sometimes

00:01:33,150 --> 00:01:36,479
you can fix that their code that's

00:01:34,740 --> 00:01:40,229
easier than fixing years sometimes it

00:01:36,479 --> 00:01:42,090
just gives you good ideas so although

00:01:40,229 --> 00:01:45,329
finding the code that does exactly what

00:01:42,090 --> 00:01:49,549
you want is great sometimes that's not

00:01:45,329 --> 00:01:49,549
something that you can actually use but

00:01:50,440 --> 00:01:56,950
it's good to look that's so one of the

00:01:55,300 --> 00:02:00,190
things that first annoyed me when I was

00:01:56,950 --> 00:02:03,790
started working was my environment I had

00:02:00,190 --> 00:02:06,970
gotten had used a mac in the past but I

00:02:03,790 --> 00:02:08,710
was really a token vsd user and had

00:02:06,970 --> 00:02:13,360
gotten used to having openbsd on my

00:02:08,710 --> 00:02:16,090
personal machine and was used to it and

00:02:13,360 --> 00:02:18,970
so it annoyed me any less than this new

00:02:16,090 --> 00:02:21,790
Mac thing oh I don't expect that you're

00:02:18,970 --> 00:02:23,710
going to switch to open bsd but if you

00:02:21,790 --> 00:02:26,560
want to come talk to me and I can give

00:02:23,710 --> 00:02:28,240
you hints and tips and stuff but it's

00:02:26,560 --> 00:02:30,580
important that you just think what are

00:02:28,240 --> 00:02:34,570
the main things that annoy me and you

00:02:30,580 --> 00:02:37,770
find something reduce it so at least a

00:02:34,570 --> 00:02:40,480
less 10 had you know grep and back

00:02:37,770 --> 00:02:42,160
things like that said and parole in the

00:02:40,480 --> 00:02:47,550
base system which made it better than

00:02:42,160 --> 00:02:49,510
windows but it also had bash and

00:02:47,550 --> 00:02:53,260
requires that you click things with

00:02:49,510 --> 00:02:57,670
mouse and it was just really too helpful

00:02:53,260 --> 00:03:01,510
and a lot of ways and but fortunately on

00:02:57,670 --> 00:03:04,750
my machine I got a copy of vmware fusion

00:03:01,510 --> 00:03:09,130
and I could install what I wanted in it

00:03:04,750 --> 00:03:11,410
and the vm runs full screen and I can

00:03:09,130 --> 00:03:13,540
try and avoid hitting the hotkeys that

00:03:11,410 --> 00:03:18,760
switch me out of it and I'm getting

00:03:13,540 --> 00:03:21,519
pretty good at that and it worked gives

00:03:18,760 --> 00:03:24,820
me a the ability to actually get work

00:03:21,519 --> 00:03:27,100
done in a way that I like it nearly

00:03:24,820 --> 00:03:31,480
counts as writing my own tools because I

00:03:27,100 --> 00:03:35,080
do have an open PSD org account but not

00:03:31,480 --> 00:03:37,870
not exactly because I don't there's very

00:03:35,080 --> 00:03:42,280
little bit as a comparator as part of it

00:03:37,870 --> 00:03:44,860
that I've time to work on there and I

00:03:42,280 --> 00:03:48,070
mean it comes down to I even in compiled

00:03:44,860 --> 00:03:53,739
mkay SH and installed it and exactly

00:03:48,070 --> 00:03:55,319
into as my batch RC it just reacts mkay

00:03:53,739 --> 00:03:59,249
SH because the

00:03:55,319 --> 00:04:04,019
bosch just doesn't i push keys and it

00:03:59,249 --> 00:04:05,340
does things and i don't know what so one

00:04:04,019 --> 00:04:08,549
of the things that really annoys me

00:04:05,340 --> 00:04:13,349
about OS 10 is aqua the desktop manager

00:04:08,549 --> 00:04:16,650
thing it just doesn't have the hotkeys

00:04:13,349 --> 00:04:18,750
that I like and yet I mean I could

00:04:16,650 --> 00:04:21,269
probably learn to them and make it work

00:04:18,750 --> 00:04:23,759
but like the other day I was working on

00:04:21,269 --> 00:04:28,169
something in in aqua and I had it full

00:04:23,759 --> 00:04:31,800
screen and all of a sudden Mac sided I'm

00:04:28,169 --> 00:04:33,750
going to move this over here and I don't

00:04:31,800 --> 00:04:36,570
know why and so I said okay I'll switch

00:04:33,750 --> 00:04:38,880
back about five seconds later moves off

00:04:36,570 --> 00:04:40,770
the side again ended up having to not

00:04:38,880 --> 00:04:44,639
full screen the window and yeah I don't

00:04:40,770 --> 00:04:47,190
know it was just terrible so I'm glad

00:04:44,639 --> 00:04:49,770
that I use and can use cwm which is the

00:04:47,190 --> 00:04:53,849
calm window manager comes with openbsd

00:04:49,770 --> 00:04:55,889
it stays out of my way and I did

00:04:53,849 --> 00:04:58,139
actually submit some my first see

00:04:55,889 --> 00:05:01,560
patches ever that got accepted to it so

00:04:58,139 --> 00:05:06,479
also again writing my own tool I'm sorta

00:05:01,560 --> 00:05:11,130
not really this brings us on to the

00:05:06,479 --> 00:05:12,599
thing that really helps me kind of bring

00:05:11,130 --> 00:05:15,060
about the point that once you start

00:05:12,599 --> 00:05:17,520
fixing your problems and fix finding

00:05:15,060 --> 00:05:21,930
what annoys you you will suddenly say

00:05:17,520 --> 00:05:24,330
hey I know how to make that easy I can

00:05:21,930 --> 00:05:25,620
just fix that real quick so one of the

00:05:24,330 --> 00:05:27,720
things that we do at work of course is

00:05:25,620 --> 00:05:30,659
tracking our time what we're working on

00:05:27,720 --> 00:05:33,449
so that we can build things properly and

00:05:30,659 --> 00:05:37,949
all of this stuff but instead of being

00:05:33,449 --> 00:05:39,690
like ha okay start out with all but then

00:05:37,949 --> 00:05:42,349
you can say hey look it's something I

00:05:39,690 --> 00:05:45,599
can fix I know how to do this and

00:05:42,349 --> 00:05:48,080
sometimes the tool is just super small

00:05:45,599 --> 00:05:51,810
thing so one of the great things about

00:05:48,080 --> 00:05:53,909
cwm that I like is that alt shift /

00:05:51,810 --> 00:05:56,400
brings up an exact menu that's just a

00:05:53,909 --> 00:05:57,780
shell prompt and you can type whatever

00:05:56,400 --> 00:06:00,389
you want in there so i have this tiny

00:05:57,780 --> 00:06:05,900
little shell script here and i type in

00:06:00,389 --> 00:06:05,900
all shift / staa whatever i'm working on

00:06:08,200 --> 00:06:16,130
and suddenly now i'm working on a yap

00:06:12,050 --> 00:06:17,960
see talk and then I have some reports

00:06:16,130 --> 00:06:19,430
that run off of these logs night they're

00:06:17,960 --> 00:06:21,860
just plain text files so I can go and

00:06:19,430 --> 00:06:25,850
edit them in case i forgot to do that

00:06:21,860 --> 00:06:29,780
for some reason and a lot of other

00:06:25,850 --> 00:06:32,210
people say hey oh and it also updates

00:06:29,780 --> 00:06:33,770
the time tracking system so that i don't

00:06:32,210 --> 00:06:37,610
actually have to all i have to do is go

00:06:33,770 --> 00:06:39,140
in and click yeah that looks right I'm

00:06:37,610 --> 00:06:43,460
save that makes me much happier than

00:06:39,140 --> 00:06:45,110
clicking through web interfaces so other

00:06:43,460 --> 00:06:47,780
people tell me like oh I've solved this

00:06:45,110 --> 00:06:50,690
problem in this way I've done I use this

00:06:47,780 --> 00:06:53,810
tool for solving this same time tracking

00:06:50,690 --> 00:06:56,150
issue their solutions are like this menu

00:06:53,810 --> 00:06:59,169
thing in OS 10 that you can click to

00:06:56,150 --> 00:07:02,240
change stuff and all sorts of other

00:06:59,169 --> 00:07:06,740
really things that really work for them

00:07:02,240 --> 00:07:09,110
to solve the same problem and that's

00:07:06,740 --> 00:07:11,180
what I and I'm happy for them that they

00:07:09,110 --> 00:07:16,700
have solved it and I'm glad that I don't

00:07:11,180 --> 00:07:19,400
have to use their solution and one last

00:07:16,700 --> 00:07:22,450
thing before moving on to kind of

00:07:19,400 --> 00:07:25,700
writing my own tools is that sometimes

00:07:22,450 --> 00:07:30,800
to get your tools written all you have

00:07:25,700 --> 00:07:32,419
to do is complain a lot we now have a

00:07:30,800 --> 00:07:36,530
whole team dedicated to making my life

00:07:32,419 --> 00:07:38,300
better of course they are also

00:07:36,530 --> 00:07:40,970
apparently dedicated to making other

00:07:38,300 --> 00:07:45,160
people's life better at work and so my

00:07:40,970 --> 00:07:47,870
tickets don't always get to the top but

00:07:45,160 --> 00:07:49,580
they're at least working on them and one

00:07:47,870 --> 00:07:51,919
of the things that they added recently I

00:07:49,580 --> 00:07:53,600
guess not that recently anymore was we

00:07:51,919 --> 00:07:55,340
now have a dark pan and we can use

00:07:53,600 --> 00:07:57,620
carton to install things from it rather

00:07:55,340 --> 00:08:01,790
than the crazy way we were doing it

00:07:57,620 --> 00:08:04,729
before so now we have much easier

00:08:01,790 --> 00:08:07,970
deployments and much easier Billy to do

00:08:04,729 --> 00:08:10,070
this I don't know how its set up I don't

00:08:07,970 --> 00:08:11,660
know what tools they actually used on

00:08:10,070 --> 00:08:13,880
the back end I know they had to

00:08:11,660 --> 00:08:15,409
customize carton so that it would say

00:08:13,880 --> 00:08:18,509
hey look

00:08:15,409 --> 00:08:20,189
we depend on instead of saying a

00:08:18,509 --> 00:08:22,770
dependency on this version of the module

00:08:20,189 --> 00:08:25,259
we say this dependency on this ticket in

00:08:22,770 --> 00:08:27,060
that module and so it looks up what

00:08:25,259 --> 00:08:33,990
version that is and automatically

00:08:27,060 --> 00:08:35,760
installs it so I have been squeaking a

00:08:33,990 --> 00:08:39,240
little bit about moving some of these

00:08:35,760 --> 00:08:41,039
tools now that they're on in a version

00:08:39,240 --> 00:08:42,839
that can be released now getting them

00:08:41,039 --> 00:08:45,060
actually release down to the GSG pan or

00:08:42,839 --> 00:08:51,269
that off of this just kind of the sea

00:08:45,060 --> 00:08:54,029
pan and getting that foot out there but

00:08:51,269 --> 00:09:00,390
so far it's slow going but it's working

00:08:54,029 --> 00:09:02,490
on it so I found that as I was work that

00:09:00,390 --> 00:09:06,750
I was I was thinking about this there's

00:09:02,490 --> 00:09:08,430
the three great rate and another great

00:09:06,750 --> 00:09:10,320
trait that i found was boredom I was

00:09:08,430 --> 00:09:15,060
working on this single project for like

00:09:10,320 --> 00:09:16,680
18 months and I was working on being

00:09:15,060 --> 00:09:19,230
there at work up most of the time on my

00:09:16,680 --> 00:09:21,300
team we have like five or six different

00:09:19,230 --> 00:09:23,430
products and all these other things and

00:09:21,300 --> 00:09:24,660
so I'm all continually like oh I'm

00:09:23,430 --> 00:09:28,230
working on this now and I'm working on

00:09:24,660 --> 00:09:30,620
that now it's just that I prefer that

00:09:28,230 --> 00:09:33,149
very much being able to do that but this

00:09:30,620 --> 00:09:34,440
project I've been working on to last 18

00:09:33,149 --> 00:09:38,820
months which is a new auction platform

00:09:34,440 --> 00:09:40,440
for a customer really so I've been I've

00:09:38,820 --> 00:09:42,390
been focused on that and so as I've been

00:09:40,440 --> 00:09:46,290
focused I've noticed I've been getting

00:09:42,390 --> 00:09:50,220
bored and being bored made things a lot

00:09:46,290 --> 00:09:53,430
more annoying and I figured out that

00:09:50,220 --> 00:09:54,959
wait a minute yeah that's annoying what

00:09:53,430 --> 00:09:56,550
I've been using that to my benefit by

00:09:54,959 --> 00:09:58,529
building these tools to make it less

00:09:56,550 --> 00:10:00,000
annoying and then it makes less annoying

00:09:58,529 --> 00:10:01,440
for me and it makes it less annoying for

00:10:00,000 --> 00:10:05,339
the other people who have to do stuff in

00:10:01,440 --> 00:10:08,190
this project for example a lot of people

00:10:05,339 --> 00:10:10,920
say oh yeah let's do use we do ho reuse

00:10:08,190 --> 00:10:13,620
do whatever here are some examples of

00:10:10,920 --> 00:10:18,000
some code that was things that were

00:10:13,620 --> 00:10:20,250
annoying me that I was able to easily

00:10:18,000 --> 00:10:22,050
turn into like reusable code and now

00:10:20,250 --> 00:10:25,110
it's a lot less annoying

00:10:22,050 --> 00:10:26,580
these are all like interaction with

00:10:25,110 --> 00:10:29,640
external systems you know sometimes you

00:10:26,580 --> 00:10:31,589
can easily take up an external system

00:10:29,640 --> 00:10:32,910
like a new blank database that doesn't

00:10:31,589 --> 00:10:36,120
have anything in it that you can just

00:10:32,910 --> 00:10:38,910
screw with and in your tests and make it

00:10:36,120 --> 00:10:41,459
just go but sometimes you have to work

00:10:38,910 --> 00:10:46,680
with the top with time and it's hard to

00:10:41,459 --> 00:10:51,630
go back in time so we take that with I

00:10:46,680 --> 00:10:54,870
use test cast mock object but it doesn't

00:10:51,630 --> 00:10:57,959
really matter and we use test class for

00:10:54,870 --> 00:10:59,790
our infrastructure or although I'm now

00:10:57,959 --> 00:11:03,269
looking forward to try and test class

00:10:59,790 --> 00:11:08,399
moose and backed by Exodus new test two

00:11:03,269 --> 00:11:11,040
stuff so that was really cool but it

00:11:08,399 --> 00:11:15,480
turns out that i'm too lazy to copy and

00:11:11,040 --> 00:11:17,100
paste so we have you know all of this

00:11:15,480 --> 00:11:19,920
little like Oh three or four or five

00:11:17,100 --> 00:11:22,589
lines of set up to do like mocking what

00:11:19,920 --> 00:11:26,190
time it is and you say okay use the

00:11:22,589 --> 00:11:27,810
module market blah blah blah and so I

00:11:26,190 --> 00:11:34,230
was copying and pasting these five lines

00:11:27,810 --> 00:11:35,550
of code from here to there and it was

00:11:34,230 --> 00:11:38,940
just like oh now I have to open a

00:11:35,550 --> 00:11:41,670
different file that has that in it oh so

00:11:38,940 --> 00:11:45,029
I just moved to copy them into a base

00:11:41,670 --> 00:11:46,470
class and said oh let me mock that so

00:11:45,029 --> 00:11:49,350
it's just a single line now and I can

00:11:46,470 --> 00:11:53,070
remember what the actual line is because

00:11:49,350 --> 00:11:57,540
it's not crazy whatever the whole setup

00:11:53,070 --> 00:12:02,670
is it's just your mock now and that lets

00:11:57,540 --> 00:12:04,320
me easily do things like say oh I need

00:12:02,670 --> 00:12:06,449
these two or three or four bids to

00:12:04,320 --> 00:12:09,480
happen at exactly the same time so I can

00:12:06,449 --> 00:12:11,579
see what happens if people tie and do we

00:12:09,480 --> 00:12:14,100
award properly it was really hard to

00:12:11,579 --> 00:12:16,860
guarantee that if your don't don't have

00:12:14,100 --> 00:12:18,360
control over time and sometimes you have

00:12:16,860 --> 00:12:20,640
to say oh I want these bids definitely

00:12:18,360 --> 00:12:23,880
to happen at different times sleeps in

00:12:20,640 --> 00:12:25,590
your test suite are terrible very

00:12:23,880 --> 00:12:28,650
annoying

00:12:25,590 --> 00:12:31,690
so then we also have mocks and email and

00:12:28,650 --> 00:12:33,700
that is what it says it does we have

00:12:31,690 --> 00:12:35,380
lots of things that trigger an email to

00:12:33,700 --> 00:12:36,970
the customer or to trigger an email to

00:12:35,380 --> 00:12:41,440
the auction admin or things like that

00:12:36,970 --> 00:12:45,960
and previously finding out when that

00:12:41,440 --> 00:12:45,960
whether that triggered and whether that

00:12:46,440 --> 00:12:51,220
email went and what it said were did was

00:12:49,390 --> 00:12:53,380
difficult because you know it was just

00:12:51,220 --> 00:12:55,450
like using smokes and email and stuff so

00:12:53,380 --> 00:12:59,320
now I added this small helper method

00:12:55,450 --> 00:13:01,300
that traps it into a mock object and so

00:12:59,320 --> 00:13:04,150
you can easily say hey it's not going to

00:13:01,300 --> 00:13:09,370
send accidentally to some customer

00:13:04,150 --> 00:13:10,930
because I've fixed that and it's going

00:13:09,370 --> 00:13:14,320
on I can introspect it and look at it

00:13:10,930 --> 00:13:18,490
and say hey it's got the right content

00:13:14,320 --> 00:13:20,950
and it was just taking this little bit

00:13:18,490 --> 00:13:22,690
of code that it was a little bit

00:13:20,950 --> 00:13:26,350
difficult to figure out a little bit

00:13:22,690 --> 00:13:29,140
confusing but I stuck it in a test class

00:13:26,350 --> 00:13:32,410
module oh and could just use it from

00:13:29,140 --> 00:13:34,870
anywhere now one of the really cool ones

00:13:32,410 --> 00:13:37,720
was the sea laga don't know if you've

00:13:34,870 --> 00:13:39,160
used catalyst much but one of the things

00:13:37,720 --> 00:13:41,470
you can do from the context is say hey

00:13:39,160 --> 00:13:44,740
log this thing and it logs the thing

00:13:41,470 --> 00:13:46,390
well it doesn't like send it to standard

00:13:44,740 --> 00:13:48,010
out even in the unit test it doesn't

00:13:46,390 --> 00:13:51,370
send it to standard air and you can't

00:13:48,010 --> 00:13:54,250
like trap it easily so I mean I wrote up

00:13:51,370 --> 00:13:56,970
a mock thing that does that and that

00:13:54,250 --> 00:14:01,750
allowed me to make my test suite run

00:13:56,970 --> 00:14:03,610
completely silently except for warnings

00:14:01,750 --> 00:14:05,550
that I didn't expect that means when I

00:14:03,610 --> 00:14:07,840
run my test suite I see things like

00:14:05,550 --> 00:14:10,420
possible precedents issue with control

00:14:07,840 --> 00:14:12,550
flow operator and I'm like what the heck

00:14:10,420 --> 00:14:14,230
is this it's a new error that the newer

00:14:12,550 --> 00:14:16,600
versions of pearl gift and it's super

00:14:14,230 --> 00:14:20,230
handy and it finds real bugs in warnings

00:14:16,600 --> 00:14:23,380
and so being able to clean up the test

00:14:20,230 --> 00:14:25,980
we can make it so it runs nice was super

00:14:23,380 --> 00:14:25,980
helpful and

00:14:26,270 --> 00:14:34,010
I was able to fix my or and it was not

00:14:30,020 --> 00:14:37,220
very difficult but super helpful and it

00:14:34,010 --> 00:14:38,840
was just these all of these error

00:14:37,220 --> 00:14:41,810
messages on the screen we're really

00:14:38,840 --> 00:14:48,410
annoying and I fixed it and that led to

00:14:41,810 --> 00:14:51,440
fixing actual problems so sometimes you

00:14:48,410 --> 00:14:54,680
find code that you can reuse code from

00:14:51,440 --> 00:14:56,330
strangers places and that's one of the

00:14:54,680 --> 00:14:57,620
things that I find helps with my

00:14:56,330 --> 00:14:59,300
annoyance as if I don't have to write

00:14:57,620 --> 00:15:01,070
the code myself or if I had to write it

00:14:59,300 --> 00:15:03,620
and I can reuse it that's even better

00:15:01,070 --> 00:15:05,300
than having to write normal code not as

00:15:03,620 --> 00:15:08,690
good as somebody else doing it but

00:15:05,300 --> 00:15:10,040
pretty good so I keep an eye out for

00:15:08,690 --> 00:15:13,880
ways that you can repurpose the code

00:15:10,040 --> 00:15:16,340
you've already written so first I was

00:15:13,880 --> 00:15:19,160
writing tools that were mate that we're

00:15:16,340 --> 00:15:21,050
making the testing less annoying which

00:15:19,160 --> 00:15:23,000
was test fixture shut up so I want to

00:15:21,050 --> 00:15:24,740
say oh I've got this auction and I want

00:15:23,000 --> 00:15:27,170
to test it and I wanted to see whether

00:15:24,740 --> 00:15:30,530
it runs in this way well there's a lot

00:15:27,170 --> 00:15:34,850
of parameters to set up an auction and

00:15:30,530 --> 00:15:36,410
you know the mid and bid max did this

00:15:34,850 --> 00:15:38,840
and that and the other thing when it

00:15:36,410 --> 00:15:40,460
starts when it ends when it I know

00:15:38,840 --> 00:15:44,000
there's probably 20 different settings

00:15:40,460 --> 00:15:45,200
that are required and a lot of them when

00:15:44,000 --> 00:15:47,900
you're testing something you don't care

00:15:45,200 --> 00:15:54,860
about and if you have them all in your

00:15:47,900 --> 00:15:57,260
test setup in your test so what in the

00:15:54,860 --> 00:15:59,090
introduction to your test it's like well

00:15:57,260 --> 00:16:00,680
which of those are important when you

00:15:59,090 --> 00:16:03,560
come back later and you say well there's

00:16:00,680 --> 00:16:05,330
all of these settings which ones are you

00:16:03,560 --> 00:16:11,000
testing which which settings are you

00:16:05,330 --> 00:16:12,950
testing so I was you know copying again

00:16:11,000 --> 00:16:14,420
copying and pasting auctions from here

00:16:12,950 --> 00:16:16,100
to there with all the settings and then

00:16:14,420 --> 00:16:17,630
changing the one I cared about and not

00:16:16,100 --> 00:16:19,880
knowing oh I copied it from here but

00:16:17,630 --> 00:16:22,190
which of those settings was like way out

00:16:19,880 --> 00:16:25,610
of bounds that I was testing in that

00:16:22,190 --> 00:16:28,070
test I don't know I want it to be

00:16:25,610 --> 00:16:31,639
obvious which pieces were 10 I was

00:16:28,070 --> 00:16:34,379
testing that we were that

00:16:31,639 --> 00:16:36,389
so that I didn't have to say all of this

00:16:34,379 --> 00:16:40,559
stuff I don't care about it I only cared

00:16:36,389 --> 00:16:44,549
about changing this one setting and I

00:16:40,559 --> 00:16:46,199
feel like a lot of times Ovid has

00:16:44,549 --> 00:16:49,429
already figured all this stuff out and

00:16:46,199 --> 00:16:51,989
has written a module or giving a talk so

00:16:49,429 --> 00:16:53,879
go watch his talks about testing and

00:16:51,989 --> 00:16:56,399
things and I recommend that he would

00:16:53,879 --> 00:16:58,289
learn a lot so in this case I have

00:16:56,399 --> 00:17:00,509
module that's not exactly like one that

00:16:58,289 --> 00:17:03,869
of it has but he's got one that's very

00:17:00,509 --> 00:17:06,870
similar in this case I have a wrapper

00:17:03,869 --> 00:17:09,899
around this in my test class object that

00:17:06,870 --> 00:17:12,750
just says set up auction but it pretty

00:17:09,899 --> 00:17:19,019
much calls this same create with default

00:17:12,750 --> 00:17:22,379
and what this is is there's a model

00:17:19,019 --> 00:17:23,819
default auction module that has all of

00:17:22,379 --> 00:17:27,269
this logic that I spent a lot of time

00:17:23,819 --> 00:17:30,450
talking to the business people and

00:17:27,269 --> 00:17:34,879
saying hey if I change this setting what

00:17:30,450 --> 00:17:39,600
does that affect what things do i or

00:17:34,879 --> 00:17:41,759
what values do those changing this

00:17:39,600 --> 00:17:45,870
setting what other thing when I change

00:17:41,759 --> 00:17:47,549
this setting here what what impact does

00:17:45,870 --> 00:17:50,460
that have on other settings that they

00:17:47,549 --> 00:17:51,539
should that should change and some of

00:17:50,460 --> 00:17:54,179
them are obvious some of them are not

00:17:51,539 --> 00:17:56,940
but I was able to put that knowledge

00:17:54,179 --> 00:17:59,100
into this module so that when somebody

00:17:56,940 --> 00:18:00,870
else comes to write a test they can just

00:17:59,100 --> 00:18:05,059
say set up an auction and change this

00:18:00,870 --> 00:18:08,580
one setting and the defaults class

00:18:05,059 --> 00:18:10,559
automatically figures out oh I know what

00:18:08,580 --> 00:18:12,899
all the other settings should be or at

00:18:10,559 --> 00:18:16,889
least a good enough approximation that

00:18:12,899 --> 00:18:19,679
the you get a valid auction yeah I took

00:18:16,889 --> 00:18:22,889
a lot of time to get this logic put into

00:18:19,679 --> 00:18:25,440
the module but now setting up a new test

00:18:22,889 --> 00:18:27,840
is super fast and easy and totally not

00:18:25,440 --> 00:18:29,940
as annoying as saying hey I want to

00:18:27,840 --> 00:18:31,019
trying to remember oh I want to set up

00:18:29,940 --> 00:18:34,470
this auction and going and talking

00:18:31,019 --> 00:18:35,879
business people and saying how do i what

00:18:34,470 --> 00:18:37,139
would this affect if i change this

00:18:35,879 --> 00:18:40,289
because I've already talked to them and

00:18:37,139 --> 00:18:43,159
asked them and somebody else doesn't

00:18:40,289 --> 00:18:43,159
have to do that too

00:18:44,029 --> 00:18:51,360
so for example here if you say hey this

00:18:49,740 --> 00:18:55,080
I want to create an auction that starts

00:18:51,360 --> 00:18:57,120
to an hour ago well the logic in code

00:18:55,080 --> 00:18:58,980
says oh by default we have to our

00:18:57,120 --> 00:19:01,019
auctions so it's going to end in an hour

00:18:58,980 --> 00:19:03,120
I don't have to say and in an hour it

00:19:01,019 --> 00:19:06,659
just does and then so now we've got an

00:19:03,120 --> 00:19:09,360
active option this other one we say we

00:19:06,659 --> 00:19:11,809
make the end in seven hours that means

00:19:09,360 --> 00:19:14,820
it's going to start in five hours and

00:19:11,809 --> 00:19:17,610
but you can of course because it's a

00:19:14,820 --> 00:19:19,110
testing module oh say hey I want to

00:19:17,610 --> 00:19:21,240
create an invalid auction and make it

00:19:19,110 --> 00:19:24,389
that's an auction that starts after it's

00:19:21,240 --> 00:19:26,730
already over and that's that you can do

00:19:24,389 --> 00:19:29,039
that it doesn't actually mean what we

00:19:26,730 --> 00:19:37,110
find out what happens things didn't

00:19:29,039 --> 00:19:41,149
actually blow up too bad but it just

00:19:37,110 --> 00:19:46,409
seems to it the ability to ease to take

00:19:41,149 --> 00:19:47,970
things that annoy you and take write

00:19:46,409 --> 00:19:49,679
them down and put them move them into a

00:19:47,970 --> 00:19:55,019
module so that you don't have to deal

00:19:49,679 --> 00:19:58,710
with them anymore is way handy so I had

00:19:55,019 --> 00:20:00,690
this thing and now the customer wanted

00:19:58,710 --> 00:20:03,240
to be able to set up sample auctions

00:20:00,690 --> 00:20:05,100
that the bidders could try to bid in

00:20:03,240 --> 00:20:09,210
because this auction platform is going

00:20:05,100 --> 00:20:11,179
to be to run auctions irregular it's

00:20:09,210 --> 00:20:16,470
going to be big item auctions with

00:20:11,179 --> 00:20:18,269
specific that only run in frequently or

00:20:16,470 --> 00:20:20,279
they probably will run more but it's

00:20:18,269 --> 00:20:21,960
enough that they wanted to make sure

00:20:20,279 --> 00:20:24,269
that new bidders could come in and say

00:20:21,960 --> 00:20:25,919
hey I want to be in a trial auction I

00:20:24,269 --> 00:20:27,990
want to see how it works I want to make

00:20:25,919 --> 00:20:32,809
sure that they understand and don't get

00:20:27,990 --> 00:20:36,750
confused because it's important enough

00:20:32,809 --> 00:20:39,120
the importing of items that you don't

00:20:36,750 --> 00:20:41,519
want people to say well I didn't realize

00:20:39,120 --> 00:20:44,130
when i clicked submit that meant i

00:20:41,519 --> 00:20:47,950
agreed to pay that much

00:20:44,130 --> 00:20:50,380
no but so we wanted to say give them

00:20:47,950 --> 00:20:52,870
ability to say pick from some preset

00:20:50,380 --> 00:20:56,140
type of auction types be able to tune in

00:20:52,870 --> 00:20:58,419
a few settings and then you pick a

00:20:56,140 --> 00:21:00,570
subset of what auction and things were

00:20:58,419 --> 00:21:03,240
available what settings were available

00:21:00,570 --> 00:21:07,299
and try and bid in that sort of auction

00:21:03,240 --> 00:21:09,299
well hey I've got this code that already

00:21:07,299 --> 00:21:12,360
knows that if I change these settings

00:21:09,299 --> 00:21:14,890
what what the other settings should be I

00:21:12,360 --> 00:21:18,070
could just reuse these defaults and

00:21:14,890 --> 00:21:22,990
create this test or these sample

00:21:18,070 --> 00:21:25,750
auctions and it was really easy and now

00:21:22,990 --> 00:21:27,610
we have this nice ability to set up

00:21:25,750 --> 00:21:31,120
whatever auctions we want for people's

00:21:27,610 --> 00:21:35,669
trials and so now it became part of this

00:21:31,120 --> 00:21:37,980
auction simulator that we have so

00:21:35,669 --> 00:21:43,450
sometimes it goes the other way too and

00:21:37,980 --> 00:21:45,820
sometimes you've written code that is in

00:21:43,450 --> 00:21:48,780
production but you can then repurpose

00:21:45,820 --> 00:21:53,860
and say hey I need I can use that for

00:21:48,780 --> 00:21:55,960
powering my test and so the this project

00:21:53,860 --> 00:21:57,789
i started really paying attention to oh

00:21:55,960 --> 00:22:02,400
look i can reuse that code for something

00:21:57,789 --> 00:22:05,860
that it totally wasn't intended for and

00:22:02,400 --> 00:22:08,909
paying attention to that made it so that

00:22:05,860 --> 00:22:14,039
I had to that I could reuse code that

00:22:08,909 --> 00:22:17,440
passed me wrote which is super handy so

00:22:14,039 --> 00:22:22,570
now one of the questions we had for the

00:22:17,440 --> 00:22:24,580
site was that we expect that the we've

00:22:22,570 --> 00:22:26,679
got a whole bunch of bidders already

00:22:24,580 --> 00:22:28,360
potentially of that are going to be

00:22:26,679 --> 00:22:30,820
coming to bid and we've got a whole

00:22:28,360 --> 00:22:33,549
bunch of people who are signed up to be

00:22:30,820 --> 00:22:34,809
the second person the second auction so

00:22:33,549 --> 00:22:36,429
far they haven't found somebody to be

00:22:34,809 --> 00:22:39,070
the first auction so I can't show any

00:22:36,429 --> 00:22:41,000
demos or anything like that but it's

00:22:39,070 --> 00:22:45,929
really cool

00:22:41,000 --> 00:22:48,360
you have to just believe me on that but

00:22:45,929 --> 00:22:49,770
we wanted to know can we prove that it's

00:22:48,360 --> 00:22:51,630
going to be a successful sale it's not

00:22:49,770 --> 00:22:54,120
going to be a technical glitch that oh

00:22:51,630 --> 00:22:56,040
when we get so many people bidding on

00:22:54,120 --> 00:23:00,540
stuff all of a sudden the site melts

00:22:56,040 --> 00:23:03,380
down and whatever so fine so that making

00:23:00,540 --> 00:23:06,679
sure the super first auction was

00:23:03,380 --> 00:23:08,970
successful it's very important because

00:23:06,679 --> 00:23:12,260
there are a lot of other potential

00:23:08,970 --> 00:23:14,130
people to auction stuff off that are

00:23:12,260 --> 00:23:17,790
that are really going to be paying

00:23:14,130 --> 00:23:18,809
attention to this first one so I'm on to

00:23:17,790 --> 00:23:22,080
that because we're going to go back to

00:23:18,809 --> 00:23:24,140
the simulator the trial auctions were

00:23:22,080 --> 00:23:28,260
and it turns out those were super boring

00:23:24,140 --> 00:23:30,780
they you create an auction you go any

00:23:28,260 --> 00:23:33,929
place a bid and then you wait until it's

00:23:30,780 --> 00:23:36,720
over you win we did set it for only like

00:23:33,929 --> 00:23:41,070
a 10 minute auction so it was still

00:23:36,720 --> 00:23:45,090
really boring so we created these bid

00:23:41,070 --> 00:23:46,980
BOTS and it's we added some logic with

00:23:45,090 --> 00:23:50,190
some very basic I think there's like

00:23:46,980 --> 00:23:51,840
five parameters you can tune for when

00:23:50,190 --> 00:23:54,690
they bid and how much they did and

00:23:51,840 --> 00:23:57,809
whatever but we add a bunch of them to

00:23:54,690 --> 00:24:00,870
the trial auctions and suddenly you have

00:23:57,809 --> 00:24:02,940
this fake bidders and so you're in this

00:24:00,870 --> 00:24:05,309
auction and you bid something and

00:24:02,940 --> 00:24:07,500
somebody and there's another somebody

00:24:05,309 --> 00:24:10,470
else bids against you and now you can

00:24:07,500 --> 00:24:12,780
win a bid against people and try and win

00:24:10,470 --> 00:24:18,240
and it's much more interactive and much

00:24:12,780 --> 00:24:20,309
nicer and like I said no live demo but I

00:24:18,240 --> 00:24:22,980
wish I could because it's really fun to

00:24:20,309 --> 00:24:26,490
see so you just bring it up and the

00:24:22,980 --> 00:24:29,100
graphs changed alive and got yes super

00:24:26,490 --> 00:24:31,049
cool but I also was paying attention and

00:24:29,100 --> 00:24:33,900
making it so that I could test all of

00:24:31,049 --> 00:24:35,850
the little pieces of the box and write

00:24:33,900 --> 00:24:38,720
tests for all the things and because I

00:24:35,850 --> 00:24:41,990
was doing that I made the coats very

00:24:38,720 --> 00:24:45,360
with nice interfaces so I could reuse it

00:24:41,990 --> 00:24:47,340
which means that when we need to blow

00:24:45,360 --> 00:24:49,330
test the site and we wanted to see what

00:24:47,340 --> 00:24:52,130
happens when people bid

00:24:49,330 --> 00:24:54,740
we didn't have to like Mechanical Turk

00:24:52,130 --> 00:24:56,540
or anything like that we had these bots

00:24:54,740 --> 00:24:58,610
that were really cheap and I could just

00:24:56,540 --> 00:25:00,440
tie them into a WWE mechanized and

00:24:58,610 --> 00:25:02,540
rather than pulling but what's my bid

00:25:00,440 --> 00:25:04,730
out of the database they scrape the site

00:25:02,540 --> 00:25:07,610
and say hey look there it is in the box

00:25:04,730 --> 00:25:09,530
I can see what my bid is I can see you

00:25:07,610 --> 00:25:11,120
know whether I should bid some more

00:25:09,530 --> 00:25:13,310
because I'm in the money or out of the

00:25:11,120 --> 00:25:17,720
money here whatever I can see what the

00:25:13,310 --> 00:25:23,390
thing isn't it all and so I was able to

00:25:17,720 --> 00:25:27,670
reuse that logic in those bots and tune

00:25:23,390 --> 00:25:33,080
them so that they were like ridiculously

00:25:27,670 --> 00:25:35,630
they really wanted these items and I had

00:25:33,080 --> 00:25:38,840
like a thousand thoughts going and you

00:25:35,630 --> 00:25:40,550
were put a lot of load on the side and I

00:25:38,840 --> 00:25:41,960
don't know and if we could have a

00:25:40,550 --> 00:25:45,890
thousand people that were all bidding

00:25:41,960 --> 00:25:48,440
every 30 seconds but we definitely did

00:25:45,890 --> 00:25:51,590
so we generated a lot of load and that

00:25:48,440 --> 00:25:55,460
made the bottlenecks really obvious for

00:25:51,590 --> 00:25:57,560
what we were no you know what things we

00:25:55,460 --> 00:26:00,710
needed to do and what things needed to

00:25:57,560 --> 00:26:02,810
be improved on the site and we could

00:26:00,710 --> 00:26:04,580
easily just say oh let me run that again

00:26:02,810 --> 00:26:07,130
let me change some things deploy some

00:26:04,580 --> 00:26:10,280
new code and try that again and it was

00:26:07,130 --> 00:26:12,610
super handy and super easy and not

00:26:10,280 --> 00:26:16,070
really that not not annoying at all oh

00:26:12,610 --> 00:26:17,840
except for you know actually deploying

00:26:16,070 --> 00:26:24,860
the code because they're still working

00:26:17,840 --> 00:26:26,540
on that ticket so but a lot of things

00:26:24,860 --> 00:26:29,210
that I fixed and a lot of things that

00:26:26,540 --> 00:26:31,400
annoy me turned out that I didn't have

00:26:29,210 --> 00:26:33,680
to write this big thing and talk to the

00:26:31,400 --> 00:26:35,630
business people and figure out all of

00:26:33,680 --> 00:26:37,730
this logic and hide it in some code a

00:26:35,630 --> 00:26:39,950
lot of times a lot of the things I fixed

00:26:37,730 --> 00:26:42,260
we're big impact from a tiny little

00:26:39,950 --> 00:26:44,330
change in the code where I didn't have

00:26:42,260 --> 00:26:47,450
to where i was able to make these little

00:26:44,330 --> 00:26:51,410
changes and just tweak things a little

00:26:47,450 --> 00:26:53,190
bit and suddenly I could it would work a

00:26:51,410 --> 00:26:56,080
lot better

00:26:53,190 --> 00:26:59,620
and make me happier and I was annoying

00:26:56,080 --> 00:27:02,770
so one of the things that came from this

00:26:59,620 --> 00:27:05,440
bot testing but load testing was that

00:27:02,770 --> 00:27:09,280
there were some the wording algorithm

00:27:05,440 --> 00:27:11,290
was really really slow and so I could

00:27:09,280 --> 00:27:14,370
write up some benchmarks and say ah yeah

00:27:11,290 --> 00:27:16,900
look at that it's really really slow and

00:27:14,370 --> 00:27:19,270
then I was able to say that but then I

00:27:16,900 --> 00:27:21,340
was like well what about it is slow I

00:27:19,270 --> 00:27:25,420
wanted to profile it you know and like

00:27:21,340 --> 00:27:26,800
keep off yay but all of a sudden I have

00:27:25,420 --> 00:27:29,559
these oh I'm running this benchmark

00:27:26,800 --> 00:27:31,300
10,000 times and adding in mighty proc

00:27:29,559 --> 00:27:32,320
to it and benchmarking all of the

00:27:31,300 --> 00:27:34,660
different scenarios that I was

00:27:32,320 --> 00:27:41,860
benchmarking and having one big and

00:27:34,660 --> 00:27:44,830
mighty prof output for that single file

00:27:41,860 --> 00:27:46,840
was really annoying and was didn't show

00:27:44,830 --> 00:27:49,750
me what I wanted to know about how the

00:27:46,840 --> 00:27:52,380
code was performing so I wanted to

00:27:49,750 --> 00:27:55,270
profile it and you know I could just run

00:27:52,380 --> 00:27:58,530
benchmark under nyt prof but that wasn't

00:27:55,270 --> 00:28:01,500
as helpful and it took a long time to

00:27:58,530 --> 00:28:04,240
run and running at all those iterations

00:28:01,500 --> 00:28:08,500
didn't help me at all to see what was

00:28:04,240 --> 00:28:11,140
going wrong but I could just add this I

00:28:08,500 --> 00:28:13,420
mean this was not a lot of code I don't

00:28:11,140 --> 00:28:17,080
expect you to read it it's just this

00:28:13,420 --> 00:28:23,940
lets me run these benchmarks but if I

00:28:17,080 --> 00:28:23,940
dash D nyt prof instead it creates a new

00:28:24,120 --> 00:28:31,200
profile I output file for each benchmark

00:28:28,420 --> 00:28:33,010
it only runs them one time rather than

00:28:31,200 --> 00:28:38,080
thousand times or whatever it was

00:28:33,010 --> 00:28:41,890
benchmarking before and then I can view

00:28:38,080 --> 00:28:44,110
each of the different profiles and say

00:28:41,890 --> 00:28:46,270
okay this one's slow and this one is

00:28:44,110 --> 00:28:49,300
when we expect the most and figure out

00:28:46,270 --> 00:28:54,090
what common things were slow and which

00:28:49,300 --> 00:28:54,090
things were only slow when certain

00:28:54,150 --> 00:29:01,480
certain things happen and I was able to

00:28:58,600 --> 00:29:03,820
just say oh I changed out time knees for

00:29:01,480 --> 00:29:06,640
profiler time knees and it's super easy

00:29:03,820 --> 00:29:11,440
and the flame graphs are super cool

00:29:06,640 --> 00:29:13,660
Brendan bread Craig is awesome so I had

00:29:11,440 --> 00:29:17,850
all of these profiles and I got it so

00:29:13,660 --> 00:29:21,730
that we could bid really fast and gotten

00:29:17,850 --> 00:29:23,200
was able to handle the load of all

00:29:21,730 --> 00:29:25,660
thousand of those but thoughts that I

00:29:23,200 --> 00:29:28,660
talked about and it was working really

00:29:25,660 --> 00:29:31,690
well huh but then I was like oh you know

00:29:28,660 --> 00:29:33,610
what I want to see how like actual

00:29:31,690 --> 00:29:36,610
things around the site that weren't just

00:29:33,610 --> 00:29:40,030
the important bidding part work how do I

00:29:36,610 --> 00:29:43,060
you know go look at these cool graphs in

00:29:40,030 --> 00:29:45,490
catalyst because when you try and

00:29:43,060 --> 00:29:47,920
profile catalyst startup catalyst with

00:29:45,490 --> 00:29:50,170
the nyt product and it writes like

00:29:47,920 --> 00:29:53,740
everything into a single file and it's

00:29:50,170 --> 00:29:55,870
super annoying and then you have to like

00:29:53,740 --> 00:29:59,020
have a static web server now that you've

00:29:55,870 --> 00:30:01,240
generated because the HTML files to go

00:29:59,020 --> 00:30:07,410
view them and I didn't have one on that

00:30:01,240 --> 00:30:07,410
machine and it was yeah pain so

00:30:13,710 --> 00:30:20,000
I was able to so we have these things

00:30:16,970 --> 00:30:24,539
that somebody else wrote that are

00:30:20,000 --> 00:30:27,000
bundles for catalyst it's kind of a roll

00:30:24,539 --> 00:30:31,080
a moose roll but it has like you can

00:30:27,000 --> 00:30:33,510
have controllers and models and any kind

00:30:31,080 --> 00:30:37,529
of components and plugins and whatnot

00:30:33,510 --> 00:30:39,179
that automatically get injected into

00:30:37,529 --> 00:30:41,130
your app when you say hey use this

00:30:39,179 --> 00:30:48,750
bundle it inserts all of these

00:30:41,130 --> 00:30:51,240
controllers and things and so I wrote so

00:30:48,750 --> 00:30:53,520
I was too lazy to like stop catalyst

00:30:51,240 --> 00:30:57,929
started back up in single process mode

00:30:53,520 --> 00:30:59,640
and click the link one time and then

00:30:57,929 --> 00:31:01,409
start it back up in the normal mode and

00:30:59,640 --> 00:31:04,429
try and see all of the graphs and

00:31:01,409 --> 00:31:06,990
everything so I added this bundle that

00:31:04,429 --> 00:31:09,659
automatically whenever you make a new

00:31:06,990 --> 00:31:10,980
request just super handy with Ajax

00:31:09,659 --> 00:31:14,120
requests where you don't have as much

00:31:10,980 --> 00:31:17,039
control over when it happened as easily

00:31:14,120 --> 00:31:19,230
and it just whenever you create and hit

00:31:17,039 --> 00:31:21,809
a new request it just creates a new nyt

00:31:19,230 --> 00:31:23,220
proc log and then there's another so it

00:31:21,809 --> 00:31:24,450
adds of control or in an action where

00:31:23,220 --> 00:31:27,600
you can just go and you can view all of

00:31:24,450 --> 00:31:29,880
those logs and when you have these logs

00:31:27,600 --> 00:31:31,770
you can just click on them and then it

00:31:29,880 --> 00:31:35,190
automatically runs the script that or

00:31:31,770 --> 00:31:38,309
the generator and builds the HTML output

00:31:35,190 --> 00:31:40,200
and then if the HTML output exists it

00:31:38,309 --> 00:31:45,000
redirects you to show you that and you

00:31:40,200 --> 00:31:47,070
can see oh look I am hitting this one

00:31:45,000 --> 00:31:48,600
action I can see how it performs and

00:31:47,070 --> 00:31:49,919
then I can go make changes and I can hit

00:31:48,600 --> 00:31:51,570
it again and then I can go look at

00:31:49,919 --> 00:31:55,230
another graph and then I can go back and

00:31:51,570 --> 00:32:00,090
compare them and it was a lot less

00:31:55,230 --> 00:32:03,360
annoying than the manual way of running

00:32:00,090 --> 00:32:06,690
these profiles so I was so I went from

00:32:03,360 --> 00:32:08,429
you know not really profiling ever to

00:32:06,690 --> 00:32:10,080
being able to just easily say oh I want

00:32:08,429 --> 00:32:11,460
to see how that performs and just

00:32:10,080 --> 00:32:13,230
started up with this flag that

00:32:11,460 --> 00:32:16,590
automatically starts to close the bundle

00:32:13,230 --> 00:32:18,460
and it just works and it works really

00:32:16,590 --> 00:32:23,740
well

00:32:18,460 --> 00:32:25,480
and I it it makes taken to something

00:32:23,740 --> 00:32:27,160
that is really annoying that you don't

00:32:25,480 --> 00:32:36,340
want to do and makes it something that's

00:32:27,160 --> 00:32:43,510
not not bad so now I have all of these

00:32:36,340 --> 00:32:45,880
tests and I like to rerun them and that

00:32:43,510 --> 00:32:48,610
means switching over to the window that

00:32:45,880 --> 00:32:52,050
has the test test in it hitting up arrow

00:32:48,610 --> 00:32:55,660
hitting Enter rerunning the tests and

00:32:52,050 --> 00:32:59,170
that's really annoying i'm too lazy for

00:32:55,660 --> 00:33:05,920
that again so instead of that i had seen

00:32:59,170 --> 00:33:09,280
this cool tool from that i saw in a ruby

00:33:05,920 --> 00:33:11,500
ruby gem something something I don't

00:33:09,280 --> 00:33:13,750
know Ruby screencast of some sort and

00:33:11,500 --> 00:33:15,520
they were like oh look I write my code I

00:33:13,750 --> 00:33:17,590
save and it just reruns the test for me

00:33:15,520 --> 00:33:21,750
in this other window so I was like oh

00:33:17,590 --> 00:33:25,740
that's awesome I want to do that so I

00:33:21,750 --> 00:33:25,740
added this thing reprove

00:33:29,030 --> 00:33:36,110
and so normal it runs works just like

00:33:34,460 --> 00:33:43,610
group it runs proof for you just like

00:33:36,110 --> 00:33:44,960
you would expect but if I but when it

00:33:43,610 --> 00:33:48,920
gets to the end and it's run all the

00:33:44,960 --> 00:33:51,550
tests it just sits there and waits and

00:33:48,920 --> 00:33:51,550
so then I can

00:33:54,860 --> 00:34:00,230
and I timestamp changes on it and it

00:33:57,440 --> 00:34:02,750
reruns the test for me and it handles

00:34:00,230 --> 00:34:06,290
all the arguments just like proved does

00:34:02,750 --> 00:34:09,649
it does all the things just like and it

00:34:06,290 --> 00:34:13,369
just you know runs proof for you and for

00:34:09,649 --> 00:34:15,200
me this wasn't a problem because it

00:34:13,369 --> 00:34:17,149
handles the test class things for me and

00:34:15,200 --> 00:34:19,159
is able to say oh you change this module

00:34:17,149 --> 00:34:21,980
or you are only want to run the tests

00:34:19,159 --> 00:34:24,530
subtest for these modules and things and

00:34:21,980 --> 00:34:26,119
it passes all that through to prove and

00:34:24,530 --> 00:34:32,690
so you can run just a subset of tests

00:34:26,119 --> 00:34:34,460
pretty easily because if you touch if

00:34:32,690 --> 00:34:37,100
you touch something like this that's an

00:34:34,460 --> 00:34:41,240
actual post or actual module it does

00:34:37,100 --> 00:34:44,090
rerun the whole thing so that's kind so

00:34:41,240 --> 00:34:47,270
that's the next possible step that if I

00:34:44,090 --> 00:34:51,139
Kyle get to eventually that I can if it

00:34:47,270 --> 00:34:53,750
if it annoys me enough that i'll add it

00:34:51,139 --> 00:34:56,030
so that i can have a code coverage and

00:34:53,750 --> 00:34:58,430
then be able to say oh what tests cover

00:34:56,030 --> 00:35:00,859
this piece of code that actually changed

00:34:58,430 --> 00:35:02,990
and only read on those but who knows but

00:35:00,859 --> 00:35:04,790
yeah you can just easily say it easily

00:35:02,990 --> 00:35:09,740
says oh look i changed just these two

00:35:04,790 --> 00:35:13,100
tests and we are on those and it takes

00:35:09,740 --> 00:35:15,050
this annoyance of not run so i would to

00:35:13,100 --> 00:35:17,359
running tests that maybe you just are

00:35:15,050 --> 00:35:19,850
like ah i'll run those at the end i'll

00:35:17,359 --> 00:35:24,170
run those and hopefully remember before

00:35:19,850 --> 00:35:28,190
i submit my code for review and a lot of

00:35:24,170 --> 00:35:30,650
times that didn't happen so if when i

00:35:28,190 --> 00:35:32,800
find things that i don't don't actually

00:35:30,650 --> 00:35:32,800
work

00:35:37,800 --> 00:35:44,730
um my findings don't actually work for

00:35:40,020 --> 00:35:46,620
me then I try and figure out how I can

00:35:44,730 --> 00:35:51,930
automate that and make it so there's

00:35:46,620 --> 00:35:59,820
less annoying and just make me happier

00:35:51,930 --> 00:36:03,810
and so on my end result Oh what I want

00:35:59,820 --> 00:36:06,210
to say is be impatient be lazy fix the

00:36:03,810 --> 00:36:09,060
things that annoy you and I know that

00:36:06,210 --> 00:36:10,590
what I do is probably totally not what

00:36:09,060 --> 00:36:14,880
you are going to it's going to make you

00:36:10,590 --> 00:36:17,850
happy but figure out what it is that

00:36:14,880 --> 00:36:19,110
makes it so that your code annoys us and

00:36:17,850 --> 00:36:25,500
that your environment annoys you last

00:36:19,110 --> 00:36:26,520
and fix it make it better so hopefully

00:36:25,500 --> 00:36:35,150
you thought of something that you can

00:36:26,520 --> 00:36:35,150
fix and I guess any question

00:36:43,079 --> 00:36:50,489
oh all it does is it if you're running

00:36:45,809 --> 00:36:52,950
tests it just watches for changes in the

00:36:50,489 --> 00:36:58,079
timestamp of the cut of the files and

00:36:52,950 --> 00:37:00,089
then runs proved again so it's not a you

00:36:58,079 --> 00:37:02,719
know it's not a big difficult thing but

00:37:00,089 --> 00:37:05,339
it lets me stick this in a window over

00:37:02,719 --> 00:37:08,670
you know off to the side somewhere and

00:37:05,339 --> 00:37:10,619
I've got my editor open and I save and I

00:37:08,670 --> 00:37:15,150
look over well I let the tester running

00:37:10,619 --> 00:37:17,940
I don't have to like oh click over there

00:37:15,150 --> 00:37:22,019
and hit enter and do something crazy and

00:37:17,940 --> 00:37:23,069
remember that oh I've saved and it sits

00:37:22,019 --> 00:37:27,359
there you know in the corner of my eye

00:37:23,069 --> 00:37:30,150
and if tests fail then it's a look

00:37:27,359 --> 00:37:31,799
that's still failing or I you know

00:37:30,150 --> 00:37:34,829
written the test that fails and then I

00:37:31,799 --> 00:37:38,390
save and look now it works I can move on

00:37:34,829 --> 00:37:38,390
to I can switch back to writing 10

00:37:45,050 --> 00:37:47,140
uh

00:37:47,350 --> 00:37:53,440
no it doesn't fortunately but I know

00:37:50,860 --> 00:37:55,690
that similarly and some of the projects

00:37:53,440 --> 00:37:58,180
that work do you have long startup times

00:37:55,690 --> 00:38:00,960
and so they have something that keeps

00:37:58,180 --> 00:38:03,790
the Perl interpreter running and just

00:38:00,960 --> 00:38:06,490
internally to prove reruns the tests

00:38:03,790 --> 00:38:09,850
it's very similarly so that could be a

00:38:06,490 --> 00:38:12,370
def other solution but I myself only try

00:38:09,850 --> 00:38:15,160
and keep the startup or are fortunately

00:38:12,370 --> 00:38:18,000
project i'm on the startup time is

00:38:15,160 --> 00:38:18,000
pretty negligible

00:38:34,450 --> 00:38:42,190
usually it's just like I'll keep it as

00:38:38,780 --> 00:38:44,540
part of this project that I'm working on

00:38:42,190 --> 00:38:49,310
because it's often you know a lot of

00:38:44,540 --> 00:38:51,170
these were global kind of I'm fixing

00:38:49,310 --> 00:38:54,380
this I'm writing tests for this

00:38:51,170 --> 00:38:57,610
particular problem and so I was able to

00:38:54,380 --> 00:39:00,100
I mean I sometimes I think for the

00:38:57,610 --> 00:39:03,370
defaults thing I actually filed a ticket

00:39:00,100 --> 00:39:07,520
that said hey I need to write this

00:39:03,370 --> 00:39:09,800
product tool that will help me improve

00:39:07,520 --> 00:39:12,920
stuff in the future and just track time

00:39:09,800 --> 00:39:16,040
against that ticket but this reproof for

00:39:12,920 --> 00:39:17,510
example I was working on something

00:39:16,040 --> 00:39:20,150
outside of work and I actually wrote

00:39:17,510 --> 00:39:23,600
most of the code outside of work and

00:39:20,150 --> 00:39:25,520
then copied it in or about it to work

00:39:23,600 --> 00:39:28,240
and customized it for our environment to

00:39:25,520 --> 00:39:28,240
some extent

00:39:36,140 --> 00:39:38,860
mhm

00:39:43,790 --> 00:39:55,580
um so we have this layer on top of

00:39:50,300 --> 00:39:59,930
catalyst that does Conan jet or

00:39:55,580 --> 00:40:04,100
dependency injection so we can say hey

00:39:59,930 --> 00:40:06,230
my parent app or my parent i inherit all

00:40:04,100 --> 00:40:08,960
of my actions and everything from this

00:40:06,230 --> 00:40:13,130
parent I have and so there's some code

00:40:08,960 --> 00:40:14,270
in there that's I led to a different

00:40:13,130 --> 00:40:16,970
talk that I gave it the local chrome

00:40:14,270 --> 00:40:18,830
longer meeting about depends i wonder

00:40:16,970 --> 00:40:23,030
way more about pearls dependency model

00:40:18,830 --> 00:40:29,020
than i wanted to know and so it inserts

00:40:23,030 --> 00:40:33,380
just in to add a percent or a dza the

00:40:29,020 --> 00:40:36,080
correct modules in the correct order as

00:40:33,380 --> 00:40:38,240
part of a look I want to use this bundle

00:40:36,080 --> 00:40:40,280
and it goes and looks and finds all I've

00:40:38,240 --> 00:40:43,790
got a controller that says this and it

00:40:40,280 --> 00:40:46,550
inserts that into your name space for

00:40:43,790 --> 00:40:50,540
your app rather than you know and it

00:40:46,550 --> 00:40:53,810
says oh it's just a subclass of the

00:40:50,540 --> 00:40:58,310
bundled app or the bundled controller

00:40:53,810 --> 00:41:04,010
and so suddenly that is in your apps

00:40:58,310 --> 00:41:06,140
namespace but alright I'm hoping that

00:41:04,010 --> 00:41:13,100
it's really it is a really nice feature

00:41:06,140 --> 00:41:17,510
to use but really ugly inside so I don't

00:41:13,100 --> 00:41:21,160
know that it could ever be no something

00:41:17,510 --> 00:41:21,160
terrible but it'd be cool

00:41:38,779 --> 00:41:45,619
I have I keep that thought it's on a

00:41:42,679 --> 00:41:47,869
guest because I keep like oh I should

00:41:45,619 --> 00:41:52,849
you know put it somewhere other than in

00:41:47,869 --> 00:41:56,299
my being in my home directory but I keep

00:41:52,849 --> 00:41:58,489
not not finding other things that take

00:41:56,299 --> 00:42:01,999
up my time and I was like oh I'm totally

00:41:58,489 --> 00:42:04,039
going to be able to put that on in a

00:42:01,999 --> 00:42:06,409
real repo on github and get it you know

00:42:04,039 --> 00:42:16,719
deployed somewhere before this talk is

00:42:06,409 --> 00:42:16,719
the conference driven development yeah I

00:42:17,289 --> 00:42:24,289
don't think I did but I i think that i

00:42:22,039 --> 00:42:28,329
do think i looked at it and I don't

00:42:24,289 --> 00:42:28,329
recall any details of it other than

00:42:31,470 --> 00:42:35,040
yeah I don't remember but yes I know

00:42:33,720 --> 00:42:38,210
that there were some other things on the

00:42:35,040 --> 00:42:38,210
CP on that did something similar

00:42:47,550 --> 00:42:51,110

YouTube URL: https://www.youtube.com/watch?v=tESvLTDSl8E


