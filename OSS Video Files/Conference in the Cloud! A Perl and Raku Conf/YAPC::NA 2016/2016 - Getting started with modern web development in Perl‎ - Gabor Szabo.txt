Title: 2016 - Getting started with modern web development in Perlâ€Ž - Gabor Szabo
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,030 --> 00:00:09,450
yeah so good morning a little bit

00:00:03,360 --> 00:00:11,070
freezing here isn't it my name is Gobber

00:00:09,450 --> 00:00:13,860
I'm going to give you a little talk

00:00:11,070 --> 00:00:16,650
about motor issues here and web

00:00:13,860 --> 00:00:20,100
development I was wondering who has some

00:00:16,650 --> 00:00:22,410
background about I it's a beginner prep

00:00:20,100 --> 00:00:27,359
track right or or newbie track or

00:00:22,410 --> 00:00:30,480
something like this so are you

00:00:27,359 --> 00:00:32,279
what's your break ground like who has

00:00:30,480 --> 00:00:36,899
more than three years of programming

00:00:32,279 --> 00:00:39,649
here okay almost everyone okay that's

00:00:36,899 --> 00:00:42,000
good that's good actually

00:00:39,649 --> 00:00:46,100
anyway and that programming who's doing

00:00:42,000 --> 00:00:49,430
web programming here okay some people

00:00:46,100 --> 00:00:55,170
good okay so we're going to talk about

00:00:49,430 --> 00:00:57,390
moral issues and there the thing is that

00:00:55,170 --> 00:00:58,980
when I thought about what to talk about

00:00:57,390 --> 00:01:02,129
here and I was told okay this is going

00:00:58,980 --> 00:01:03,420
to be a newbie track so so I'm going to

00:01:02,129 --> 00:01:05,880
talk about something that I don't know

00:01:03,420 --> 00:01:08,939
yet so I'm a newbie in it so I we are

00:01:05,880 --> 00:01:10,920
all newbies in this and if you don't

00:01:08,939 --> 00:01:14,250
really like what you're hearing because

00:01:10,920 --> 00:01:16,770
it's because I'm you and you being in

00:01:14,250 --> 00:01:19,619
motor issues then I collected a couple

00:01:16,770 --> 00:01:22,979
of places a couple of URLs where you can

00:01:19,619 --> 00:01:27,540
find much better content about too much

00:01:22,979 --> 00:01:29,850
of issues I especially like the the

00:01:27,540 --> 00:01:32,820
second one which was a toe given by

00:01:29,850 --> 00:01:34,799
Glenn Hinkle a couple of years ago at

00:01:32,820 --> 00:01:37,350
one of the AB C's and you can go there

00:01:34,799 --> 00:01:40,020
and watch the video the talk itself and

00:01:37,350 --> 00:01:41,810
you can look at the slides and it's

00:01:40,020 --> 00:01:44,100
quite good and then there are also the

00:01:41,810 --> 00:01:46,590
module costs which are I think it has

00:01:44,100 --> 00:01:49,200
four or five episodes talking about

00:01:46,590 --> 00:01:52,439
delicious so some really good content

00:01:49,200 --> 00:01:55,140
and that's both good good for if you

00:01:52,439 --> 00:01:57,290
didn't like this oh and you thought it's

00:01:55,140 --> 00:02:00,030
much better to have a tea outside

00:01:57,290 --> 00:02:02,399
instead of freezing here and but it's I

00:02:00,030 --> 00:02:05,130
think it's very good to go there and

00:02:02,399 --> 00:02:07,590
then after to talk to learn a lot more

00:02:05,130 --> 00:02:09,380
about moral issues and trying to find a

00:02:07,590 --> 00:02:12,620
different angle especially

00:02:09,380 --> 00:02:15,650
the second token of his clan he gave a

00:02:12,620 --> 00:02:18,860
lot of interesting background about

00:02:15,650 --> 00:02:20,780
militias and a lot of things that will

00:02:18,860 --> 00:02:23,390
make you feel that you really want to

00:02:20,780 --> 00:02:28,310
use modulation in my talk I'll try to

00:02:23,390 --> 00:02:31,370
give more more of a hands-on type of of

00:02:28,310 --> 00:02:33,140
examples there are also a couple of

00:02:31,370 --> 00:02:35,210
other examples that you can use and you

00:02:33,140 --> 00:02:37,760
can compare the different ways of

00:02:35,210 --> 00:02:40,240
programming module issues so what is

00:02:37,760 --> 00:02:43,130
module issues some people including me

00:02:40,240 --> 00:02:45,170
think about militias are selected as one

00:02:43,130 --> 00:02:47,870
of these new lightweight the relatively

00:02:45,170 --> 00:02:55,550
new lightweight frameworks referencing

00:02:47,870 --> 00:02:57,160
in the pearl bigger font okay well I

00:02:55,550 --> 00:03:01,510
can't see it

00:02:57,160 --> 00:03:01,510
I'll try to figure out how to do that

00:03:04,600 --> 00:03:14,240
sorry but that doesn't work when I

00:03:10,340 --> 00:03:19,040
switch other slide yeah yeah I know

00:03:14,240 --> 00:03:22,160
is this okay yeah the problem is just

00:03:19,040 --> 00:03:23,870
Plus that it it works on the same slide

00:03:22,160 --> 00:03:27,080
and then a switch to the next slide and

00:03:23,870 --> 00:03:28,580
it's back to the usual one and it took

00:03:27,080 --> 00:03:30,470
me some time till I figure out that I

00:03:28,580 --> 00:03:35,240
have to just a configure the whole

00:03:30,470 --> 00:03:37,010
browser anyway so modulus was created by

00:03:35,240 --> 00:03:39,680
a service and we know who actually

00:03:37,010 --> 00:03:41,840
created earlier catalyst and then the

00:03:39,680 --> 00:03:45,070
problem he felt or at least there are

00:03:41,840 --> 00:03:50,660
here that catalyst became so mainstream

00:03:45,070 --> 00:03:52,220
that making changes was mainly more or

00:03:50,660 --> 00:03:55,070
less impossible because it would change

00:03:52,220 --> 00:03:57,200
make backward incompatible changes so

00:03:55,070 --> 00:03:59,720
progress was stalled basically more or

00:03:57,200 --> 00:04:02,560
less at least progress for for a new

00:03:59,720 --> 00:04:04,670
kind of ways how the web could work

00:04:02,560 --> 00:04:08,680
especially a synchronous programming and

00:04:04,670 --> 00:04:11,900
so on and so he started module issues

00:04:08,680 --> 00:04:15,110
which which was based on on Ruby Sinatra

00:04:11,900 --> 00:04:17,870
as I understand Ruby Sinatra is is the

00:04:15,110 --> 00:04:19,520
daughter of Frank Sinatra though I'm not

00:04:17,870 --> 00:04:23,120
really sure

00:04:19,520 --> 00:04:26,720
the thing is that Sinatra was sort of

00:04:23,120 --> 00:04:28,580
supposed to be a ruby based that

00:04:26,720 --> 00:04:29,990
framework really lightweight just

00:04:28,580 --> 00:04:32,230
routing based and so on

00:04:29,990 --> 00:04:35,240
and what you should started out that way

00:04:32,230 --> 00:04:38,000
but today it's sort it's so good as a

00:04:35,240 --> 00:04:39,770
full web framework and usually when we

00:04:38,000 --> 00:04:41,240
think about full web frameworks we might

00:04:39,770 --> 00:04:43,760
think about catalysts or something that

00:04:41,240 --> 00:04:46,970
that does everything for the web

00:04:43,760 --> 00:04:49,820
back-end for the web server in module

00:04:46,970 --> 00:04:51,980
issues that also includes a client and

00:04:49,820 --> 00:04:52,460
not client even inside the browser but a

00:04:51,980 --> 00:04:54,830
client

00:04:52,460 --> 00:04:58,520
lassy like a user agent that can access

00:04:54,830 --> 00:05:01,370
web pages like mechanize if you know in

00:04:58,520 --> 00:05:03,860
perl okay so it most includes that

00:05:01,370 --> 00:05:05,750
client side and the server side and part

00:05:03,860 --> 00:05:08,210
of the good part of the good things that

00:05:05,750 --> 00:05:10,550
aim is this is that it makes it

00:05:08,210 --> 00:05:13,420
extremely easy to also test your own

00:05:10,550 --> 00:05:17,030
imagination application using this

00:05:13,420 --> 00:05:22,150
library that part of the law of the of

00:05:17,030 --> 00:05:24,890
the package so it's a full framework and

00:05:22,150 --> 00:05:28,660
everything comes in within one single

00:05:24,890 --> 00:05:31,220
Sipan distribution so unlike other

00:05:28,660 --> 00:05:33,230
frameworks or other or even other simple

00:05:31,220 --> 00:05:35,750
modules in Perl that depends on a lot of

00:05:33,230 --> 00:05:38,000
other things module issues is standalone

00:05:35,750 --> 00:05:40,400
you can do a lot of things with module

00:05:38,000 --> 00:05:42,260
issues without any dependencies there

00:05:40,400 --> 00:05:45,650
are a couple of optional dependencies

00:05:42,260 --> 00:05:48,890
for example the SSL module if you want

00:05:45,650 --> 00:05:51,650
to do that but in medical if you want to

00:05:48,890 --> 00:05:54,140
use secure connections but if you don't

00:05:51,650 --> 00:05:55,970
and in many cases when you do have ever

00:05:54,140 --> 00:05:59,600
write a web application you don't really

00:05:55,970 --> 00:06:02,570
need the the per frame work to do the

00:05:59,600 --> 00:06:04,880
encryption because you have a web front

00:06:02,570 --> 00:06:06,890
and an engine engine and janux or an

00:06:04,880 --> 00:06:09,050
Apache in front of it and that does the

00:06:06,890 --> 00:06:12,620
whole encryption and then begin between

00:06:09,050 --> 00:06:14,900
the nginx and the Perl you can already

00:06:12,620 --> 00:06:17,600
talk just regular HTTP 80 so you don't

00:06:14,900 --> 00:06:19,550
really need that so the whole thing that

00:06:17,600 --> 00:06:21,080
you need for module issues is just the

00:06:19,550 --> 00:06:23,670
motivations module and it doesn't depend

00:06:21,080 --> 00:06:26,040
on anything else which

00:06:23,670 --> 00:06:29,100
some people dislike because it's sort of

00:06:26,040 --> 00:06:31,350
not the c-pen way of depending on 100

00:06:29,100 --> 00:06:33,330
other modules but on the other hand it

00:06:31,350 --> 00:06:37,500
has its advantages as well because you

00:06:33,330 --> 00:06:40,530
don't depend on anything else it's non

00:06:37,500 --> 00:06:42,540
Bach non-blocking so you can do also a

00:06:40,530 --> 00:06:44,610
synchronous programming visit and it has

00:06:42,540 --> 00:06:47,760
a couple of really really nice features

00:06:44,610 --> 00:06:52,740
much issues and while you won't see it

00:06:47,760 --> 00:06:55,620
on my slides it's very beautiful and it

00:06:52,740 --> 00:06:57,740
must be really fun that's what sort of

00:06:55,620 --> 00:07:00,000
the idea because behind virtual issues

00:06:57,740 --> 00:07:03,180
in this talk I'm going to give you a

00:07:00,000 --> 00:07:05,750
little bit of the client side and I will

00:07:03,180 --> 00:07:08,490
go a little bit above the back end they

00:07:05,750 --> 00:07:10,980
have something like the CSS selectors

00:07:08,490 --> 00:07:14,210
that are used in web usually and what

00:07:10,980 --> 00:07:17,220
you seem module issues supports those

00:07:14,210 --> 00:07:19,950
for the client is mostly and for the

00:07:17,220 --> 00:07:22,680
testing we go a little bit in that one

00:07:19,950 --> 00:07:24,480
as well and the way you install is

00:07:22,680 --> 00:07:26,130
either if you have a sip and client

00:07:24,480 --> 00:07:28,320
already sip and the regular sit on

00:07:26,130 --> 00:07:29,670
client or sip and hem install then you

00:07:28,320 --> 00:07:31,920
just type that they're usually saying

00:07:29,670 --> 00:07:34,140
that you would do for installation of

00:07:31,920 --> 00:07:35,700
any C power modules or if you don't want

00:07:34,140 --> 00:07:39,660
to do that or you don't have a sip end

00:07:35,700 --> 00:07:41,850
client then you can copy that longer URL

00:07:39,660 --> 00:07:44,130
which is also available on the on the

00:07:41,850 --> 00:07:48,960
main website of module issues and it

00:07:44,130 --> 00:07:53,430
will fetch an installation script and

00:07:48,960 --> 00:07:54,990
install install furniture actually fetch

00:07:53,430 --> 00:07:57,170
tip and - and it will install modules

00:07:54,990 --> 00:07:59,820
just automatically so you don't need to

00:07:57,170 --> 00:08:02,430
pre configure any zip and client for

00:07:59,820 --> 00:08:05,490
this of course some people don't like to

00:08:02,430 --> 00:08:08,010
just execute random scripts that they've

00:08:05,490 --> 00:08:12,060
downloaded from four websites which I

00:08:08,010 --> 00:08:14,340
can understand anyway the client-side so

00:08:12,060 --> 00:08:16,260
there is this module called module user

00:08:14,340 --> 00:08:18,300
agent which is the user agent it's

00:08:16,260 --> 00:08:20,850
likely they're a little bit like other

00:08:18,300 --> 00:08:23,100
BP users agent or mechanize or

00:08:20,850 --> 00:08:24,810
everything inside it has a lot of power

00:08:23,100 --> 00:08:27,330
in it and this is this will be the

00:08:24,810 --> 00:08:28,950
simplest probably simple script you

00:08:27,330 --> 00:08:32,370
strict use warnings as usual you're

00:08:28,950 --> 00:08:35,990
loading the module and then we create a

00:08:32,370 --> 00:08:39,080
user agent object and from that it can

00:08:35,990 --> 00:08:42,560
Colgate which will fetch a URL from the

00:08:39,080 --> 00:08:45,830
website and on that object we can call

00:08:42,560 --> 00:08:48,410
the Vans method which will return a

00:08:45,830 --> 00:08:51,880
result object this is a response object

00:08:48,410 --> 00:08:54,920
it is a module message response object

00:08:51,880 --> 00:08:56,840
okay and on that object you can go do a

00:08:54,920 --> 00:08:59,150
couple of things the most basic probably

00:08:56,840 --> 00:09:01,250
is cooling the body method that will

00:08:59,150 --> 00:09:03,080
just return the content of the body so

00:09:01,250 --> 00:09:05,690
it would be what whatever will be see if

00:09:03,080 --> 00:09:08,890
we went to that page and clicked on view

00:09:05,690 --> 00:09:11,060
source that would be that that returns

00:09:08,890 --> 00:09:15,290
but you can do other things with this

00:09:11,060 --> 00:09:17,240
result object and we can call Dom on it

00:09:15,290 --> 00:09:19,070
so instead of cooling the body we can

00:09:17,240 --> 00:09:21,380
call DOM and it will return an object

00:09:19,070 --> 00:09:26,120
that represents the don't represents the

00:09:21,380 --> 00:09:29,750
whole HTML parsed into a document object

00:09:26,120 --> 00:09:34,340
model and on that we can call define

00:09:29,750 --> 00:09:37,700
method that will return one piece of one

00:09:34,340 --> 00:09:41,330
tag or one sub HTML that we received

00:09:37,700 --> 00:09:45,170
back from the website and here inside we

00:09:41,330 --> 00:09:49,760
can use CSS selector so who knows what

00:09:45,170 --> 00:09:53,240
CSS selectors are here okay most of the

00:09:49,760 --> 00:09:55,610
people do basically what they did what

00:09:53,240 --> 00:09:59,180
we can do with CSS selectors is we can

00:09:55,610 --> 00:10:02,780
in various ways we can declare part of

00:09:59,180 --> 00:10:06,830
an HTML file so for example this one

00:10:02,780 --> 00:10:09,890
says that look for a div element a div

00:10:06,830 --> 00:10:12,770
tag in the HTML that has an attribute

00:10:09,890 --> 00:10:18,440
which is called class and that class has

00:10:12,770 --> 00:10:20,090
the value Rho and H 1 and return that

00:10:18,440 --> 00:10:22,250
all of them if you have a couple of

00:10:20,090 --> 00:10:24,920
these in the HTML which are all of them

00:10:22,250 --> 00:10:28,910
is object and then here we selected the

00:10:24,920 --> 00:10:31,970
first one so we said arrow and then 0

00:10:28,910 --> 00:10:33,920
because it returns it returns an object

00:10:31,970 --> 00:10:37,490
that can also that also behaves in the

00:10:33,920 --> 00:10:39,140
same array so this fine thing return

00:10:37,490 --> 00:10:40,790
something that the first element and

00:10:39,140 --> 00:10:48,100
then we printed the first element so

00:10:40,790 --> 00:10:48,100
let's try to run this Orem try this on

00:10:52,580 --> 00:11:00,550
now let's see this also if I paste here

00:10:55,940 --> 00:11:00,550
and it okay

00:11:05,770 --> 00:11:09,790
so it went to the website I don't know

00:11:08,560 --> 00:11:12,070
if you how much can you see can you see

00:11:09,790 --> 00:11:19,330
this okay

00:11:12,070 --> 00:11:26,010
hmm la jolla enlarger and try to make

00:11:19,330 --> 00:11:31,330
fullscreen okay I can't correct this one

00:11:26,010 --> 00:11:37,450
okay let's see this so this is what I

00:11:31,330 --> 00:11:39,370
ran and it takes some time and then it

00:11:37,450 --> 00:11:41,920
went to the website of a few apps you've

00:11:39,370 --> 00:11:44,080
downloaded the whole front page looked

00:11:41,920 --> 00:11:46,630
for that element the div element wins

00:11:44,080 --> 00:11:49,090
the quiz the specific class and return

00:11:46,630 --> 00:11:52,780
whatever is that return the development

00:11:49,090 --> 00:11:58,300
is the class row age and then it's

00:11:52,780 --> 00:12:00,640
content so this is this is a quite an

00:11:58,300 --> 00:12:03,370
easy way to interrogate a website and

00:12:00,640 --> 00:12:04,840
and fetch all kind of part of it and

00:12:03,370 --> 00:12:07,090
then see what's what's there and do

00:12:04,840 --> 00:12:09,220
something with this but it can do more

00:12:07,090 --> 00:12:13,180
so if we are going to website that

00:12:09,220 --> 00:12:15,580
returns a data in JSON format okay for

00:12:13,180 --> 00:12:19,570
example at the API of meta Sipan here

00:12:15,580 --> 00:12:22,150
then we can on the result object we can

00:12:19,570 --> 00:12:26,290
use the JSON method and that will

00:12:22,150 --> 00:12:28,900
actually convert return the JSON as an

00:12:26,290 --> 00:12:32,620
object okay so we downloaded the JSON

00:12:28,900 --> 00:12:34,720
where string and then parse it into a

00:12:32,620 --> 00:12:38,080
Perl object and the JSON method will

00:12:34,720 --> 00:12:42,040
return that that JSON string now won't

00:12:38,080 --> 00:12:44,950
show it that one but I show the next

00:12:42,040 --> 00:12:51,580
slide we are I took that JSON put it

00:12:44,950 --> 00:12:56,590
into a an object now a scalar and then

00:12:51,580 --> 00:12:57,100
on that scalar I accessed the one part

00:12:56,590 --> 00:12:59,290
of it

00:12:57,100 --> 00:13:01,360
so of course in order to find this out

00:12:59,290 --> 00:13:03,580
at first I had to print that print out

00:13:01,360 --> 00:13:06,010
the whole JSON and then look at it and

00:13:03,580 --> 00:13:09,910
then notice that within that JSON I have

00:13:06,010 --> 00:13:11,980
a hash key both hits and everything that

00:13:09,910 --> 00:13:13,390
the letter hash key called hits and then

00:13:11,980 --> 00:13:18,430
inside it there is an array

00:13:13,390 --> 00:13:28,420
and fields and whatever a name and meta

00:13:18,430 --> 00:13:32,230
sippin epi most recent let's see I think

00:13:28,420 --> 00:13:34,329
this one right so apparently this module

00:13:32,230 --> 00:13:38,820
was the most recent module uploaded to

00:13:34,329 --> 00:13:41,350
to see progress of right now okay and

00:13:38,820 --> 00:13:45,250
it's pretty nice that it we can do it in

00:13:41,350 --> 00:13:47,920
in one single and of course probably

00:13:45,250 --> 00:13:52,740
would you will want to use the newer API

00:13:47,920 --> 00:13:52,740
of meta Sipan which is just come out

00:13:52,920 --> 00:13:59,740
when it works quite nicely and then we

00:13:58,000 --> 00:14:01,540
can also use something called the CS

00:13:59,740 --> 00:14:03,940
that the JSON pointers which is

00:14:01,540 --> 00:14:07,360
apparently it's not very well known and

00:14:03,940 --> 00:14:09,880
but modular supports it and that's one

00:14:07,360 --> 00:14:11,290
key features of module issues that they

00:14:09,880 --> 00:14:13,930
are always trying to be on the bleeding

00:14:11,290 --> 00:14:17,110
edge and actually for a long time at

00:14:13,930 --> 00:14:19,779
least I had received modulation system

00:14:17,110 --> 00:14:21,339
sort of a moving target so that you

00:14:19,779 --> 00:14:24,190
would do something and within a couple

00:14:21,339 --> 00:14:25,630
of months your code might not work in

00:14:24,190 --> 00:14:28,000
the newest newer version of module

00:14:25,630 --> 00:14:32,410
issues because things have changed and

00:14:28,000 --> 00:14:36,519
as I understand it has slowed down a lot

00:14:32,410 --> 00:14:39,760
so yeah you can now quite reasonably

00:14:36,519 --> 00:14:42,040
build some single module issues and have

00:14:39,760 --> 00:14:44,410
it working for quite fight a long time

00:14:42,040 --> 00:14:47,199
without without you you need to make

00:14:44,410 --> 00:14:49,060
changes for your code actually I was

00:14:47,199 --> 00:14:52,089
quite surprised because I looked at the

00:14:49,060 --> 00:14:56,310
some of the screencast which were three

00:14:52,089 --> 00:15:00,040
four years old and they worked today so

00:14:56,310 --> 00:15:02,100
maybe the whole the whole idea that I

00:15:00,040 --> 00:15:04,810
had the whole feeling that that is

00:15:02,100 --> 00:15:07,000
changing too much too fast and changing

00:15:04,810 --> 00:15:12,699
too much maybe what the whole thing was

00:15:07,000 --> 00:15:14,589
unfounded at all anyway one other thing

00:15:12,699 --> 00:15:16,329
that that this modules client has is

00:15:14,589 --> 00:15:18,040
this easy debugging so you can just just

00:15:16,329 --> 00:15:20,320
configure there you said that

00:15:18,040 --> 00:15:22,600
environment variable and then it will

00:15:20,320 --> 00:15:26,250
print our debugging messages from your

00:15:22,600 --> 00:15:26,250
module resource client script

00:15:26,290 --> 00:15:30,250
and then oh one other thing that you can

00:15:28,600 --> 00:15:33,310
actually write stuff like this so you

00:15:30,250 --> 00:15:36,730
can use modulus just comes a script code

00:15:33,310 --> 00:15:39,430
module and then you can give it you can

00:15:36,730 --> 00:15:42,840
tell it to get this URL and from that

00:15:39,430 --> 00:15:45,910
URL fangy that title the the title tag

00:15:42,840 --> 00:15:47,920
which again can be really nice when we

00:15:45,910 --> 00:15:50,170
are trying to figure out how to interact

00:15:47,920 --> 00:15:51,850
with a webpage from the command from the

00:15:50,170 --> 00:15:56,290
command line and then great later on to

00:15:51,850 --> 00:15:58,030
turn it into a script okay so that's

00:15:56,290 --> 00:16:01,240
that's more or less the client side of

00:15:58,030 --> 00:16:04,630
course it has a lot more power but

00:16:01,240 --> 00:16:08,770
that's where I got so far the server

00:16:04,630 --> 00:16:09,850
side has the module issues framework and

00:16:08,770 --> 00:16:12,400
that there's something called

00:16:09,850 --> 00:16:15,550
modulations light and the monitors light

00:16:12,400 --> 00:16:17,560
is the idea is that you can create a web

00:16:15,550 --> 00:16:20,110
application just within one single file

00:16:17,560 --> 00:16:21,760
so you have a single Perl script and

00:16:20,110 --> 00:16:23,080
within that Perl script you have

00:16:21,760 --> 00:16:26,770
everything you don't need anything

00:16:23,080 --> 00:16:29,320
external files all the features are in

00:16:26,770 --> 00:16:31,210
there but the nice thing that if when

00:16:29,320 --> 00:16:33,970
you get started you don't have to learn

00:16:31,210 --> 00:16:37,450
about all these template files and how

00:16:33,970 --> 00:16:40,300
to where to put them and so on and if

00:16:37,450 --> 00:16:42,340
you package if you have a an application

00:16:40,300 --> 00:16:44,800
in one single file it's also much easier

00:16:42,340 --> 00:16:47,710
to to distribute because you just

00:16:44,800 --> 00:16:49,660
distribute that single file so it looks

00:16:47,710 --> 00:16:53,350
like this you know to use modulations

00:16:49,660 --> 00:16:56,590
light and then you declare what's called

00:16:53,350 --> 00:17:00,760
routes so when you visit the website the

00:16:56,590 --> 00:17:03,820
URL is what in many frameworks we call a

00:17:00,760 --> 00:17:06,550
route so if you go to a website slash

00:17:03,820 --> 00:17:09,310
and you don't write anything else then

00:17:06,550 --> 00:17:12,340
basically you get this route catches

00:17:09,310 --> 00:17:14,980
that request and now there's nothing

00:17:12,340 --> 00:17:18,700
more we behind the you are behind the

00:17:14,980 --> 00:17:21,940
host name and what this does is not it's

00:17:18,700 --> 00:17:24,040
not even a function here it here we

00:17:21,940 --> 00:17:27,160
actually cool so if you look at it as a

00:17:24,040 --> 00:17:29,680
Perl script it might look strange but

00:17:27,160 --> 00:17:32,110
what happens here is that modulus lies

00:17:29,680 --> 00:17:33,970
provides us a function called get that

00:17:32,110 --> 00:17:36,160
will receive here two parameters the

00:17:33,970 --> 00:17:37,730
first one is the route which is just a

00:17:36,160 --> 00:17:42,020
string slash and

00:17:37,730 --> 00:17:45,080
second parameter is this hash it looks

00:17:42,020 --> 00:17:48,200
strange it looks something different but

00:17:45,080 --> 00:17:50,630
that's what happens here so once we

00:17:48,200 --> 00:17:53,960
called off start at the bottom of this

00:17:50,630 --> 00:17:56,540
three line script and a web server will

00:17:53,960 --> 00:17:58,850
start a small web server and then if we

00:17:56,540 --> 00:18:01,429
access that page then we can then it

00:17:58,850 --> 00:18:05,299
will automatically return the text hello

00:18:01,429 --> 00:18:07,760
world without we don't have any code

00:18:05,299 --> 00:18:15,669
here it's just a really simple website

00:18:07,760 --> 00:18:15,669
but if I try to run this let's see oh

00:18:17,530 --> 00:18:20,950
it's not here

00:18:26,090 --> 00:18:37,970
and I don't want it okay so I wrote it

00:18:34,730 --> 00:18:41,180
with a tool called morbo I'll say about

00:18:37,970 --> 00:18:44,690
it in a second it starts a web server on

00:18:41,180 --> 00:18:48,260
port 3000 by default and then I can go

00:18:44,690 --> 00:18:50,420
there and reload that page and I get

00:18:48,260 --> 00:18:53,000
back that hello world that the script

00:18:50,420 --> 00:18:55,910
returned so it's pretty pretty simple to

00:18:53,000 --> 00:18:58,970
do this and on the command line I get

00:18:55,910 --> 00:19:09,860
some logging message there that someone

00:18:58,970 --> 00:19:11,780
access the the server so okay I wanted

00:19:09,860 --> 00:19:14,630
to show something else here so just

00:19:11,780 --> 00:19:16,580
restore the server if I go there and

00:19:14,630 --> 00:19:23,740
visit another page so let's say

00:19:16,580 --> 00:19:26,510
something else then I get an error page

00:19:23,740 --> 00:19:28,400
so I visit at the same application that

00:19:26,510 --> 00:19:31,070
earlier returned me returned the hello

00:19:28,400 --> 00:19:33,320
world but now that I'm accessing and

00:19:31,070 --> 00:19:35,360
trying to access a URL that hasn't been

00:19:33,320 --> 00:19:39,230
declared a round that hasn't been

00:19:35,360 --> 00:19:41,780
declared then I get this error page it

00:19:39,230 --> 00:19:44,990
tells me that the router I actually have

00:19:41,780 --> 00:19:46,850
is the slash route for get requests and

00:19:44,990 --> 00:19:50,540
then I oh it also provides me all kind

00:19:46,850 --> 00:19:54,310
of other information that can help me so

00:19:50,540 --> 00:19:57,980
more boys is this is a small web server

00:19:54,310 --> 00:20:00,020
that or tool to run up a small web

00:19:57,980 --> 00:20:03,170
server mostly for development purposes

00:20:00,020 --> 00:20:06,170
and you wouldn't do this on a production

00:20:03,170 --> 00:20:08,570
server and production server it wouldn't

00:20:06,170 --> 00:20:10,220
be in in debug mode so you wouldn't get

00:20:08,570 --> 00:20:12,320
this kind of error messages because that

00:20:10,220 --> 00:20:14,450
would well it would be useful for

00:20:12,320 --> 00:20:17,930
someone to visiting your site maybe but

00:20:14,450 --> 00:20:20,210
not for the right reason so but that's

00:20:17,930 --> 00:20:21,800
not really useful while you're writing

00:20:20,210 --> 00:20:25,820
your program that you to get all kind of

00:20:21,800 --> 00:20:27,620
the debug messages and at the same time

00:20:25,820 --> 00:20:31,010
it also complained about in on the

00:20:27,620 --> 00:20:34,610
console about some secret and this

00:20:31,010 --> 00:20:35,150
secret is actually only relevant when

00:20:34,610 --> 00:20:37,400
you

00:20:35,150 --> 00:20:40,490
sessions but I don't really like these

00:20:37,400 --> 00:20:43,720
error messages on my console so defer

00:20:40,490 --> 00:20:45,740
one of the first things I do is that I

00:20:43,720 --> 00:20:49,490
know maybe it's not the first thing

00:20:45,740 --> 00:20:53,030
there was another slide so the first

00:20:49,490 --> 00:20:54,800
thing I do is called his secrets method

00:20:53,030 --> 00:20:56,840
that's actually something that changed

00:20:54,800 --> 00:21:00,290
in the last I think two years it used to

00:20:56,840 --> 00:21:01,130
be secret now its secrets and it used to

00:21:00,290 --> 00:21:03,890
recur

00:21:01,130 --> 00:21:06,080
except one value now it can accept an

00:21:03,890 --> 00:21:08,690
array and then I put some kind of a

00:21:06,080 --> 00:21:10,429
string there and that string should we

00:21:08,690 --> 00:21:12,920
actually really secure so that that

00:21:10,429 --> 00:21:16,790
should be something private that I don't

00:21:12,920 --> 00:21:20,450
advertise but that's used to to encrypt

00:21:16,790 --> 00:21:22,040
basically the the session objects it

00:21:20,450 --> 00:21:23,990
doesn't really it's not really important

00:21:22,040 --> 00:21:25,880
for for now I just mentioned it because

00:21:23,990 --> 00:21:28,490
that's thing but on the console all

00:21:25,880 --> 00:21:30,530
these butters name so anyway what might

00:21:28,490 --> 00:21:33,140
have buttered you here in this script is

00:21:30,530 --> 00:21:35,390
that I just started to write the code

00:21:33,140 --> 00:21:37,340
using loading the module without saying

00:21:35,390 --> 00:21:41,030
you strict and use warnings then I

00:21:37,340 --> 00:21:43,460
always preach to do everyone who uses

00:21:41,030 --> 00:21:43,730
Perl and the reason I don't need to do

00:21:43,460 --> 00:21:45,950
that

00:21:43,730 --> 00:21:47,840
is that because modulation slides when I

00:21:45,950 --> 00:21:51,980
load it it automatically loads these

00:21:47,840 --> 00:21:56,200
four modules so it loses you strict and

00:21:51,980 --> 00:21:59,150
use warnings for my code and utf-8 so my

00:21:56,200 --> 00:22:01,640
Unicode in the code and it also uses the

00:21:59,150 --> 00:22:05,650
features of five tens so I can use the

00:22:01,640 --> 00:22:10,880
safe function basically both others are

00:22:05,650 --> 00:22:12,530
more or less outdoors or soda and I

00:22:10,880 --> 00:22:14,330
define over but that you don't need the

00:22:12,530 --> 00:22:17,480
features anyway so that's what we use

00:22:14,330 --> 00:22:20,179
what you just like do and and so I don't

00:22:17,480 --> 00:22:21,590
need to add the you streak myself then

00:22:20,179 --> 00:22:26,390
in the next slide what I showed you is

00:22:21,590 --> 00:22:28,309
that setting the secret so we can get

00:22:26,390 --> 00:22:30,290
rid of that message but that's still

00:22:28,309 --> 00:22:36,010
just sending something back to the user

00:22:30,290 --> 00:22:38,630
now let's write another route that will

00:22:36,010 --> 00:22:41,480
echo back something that we can type in

00:22:38,630 --> 00:22:44,160
so here I created a new route to slash

00:22:41,480 --> 00:22:46,650
echo that will react to a gap

00:22:44,160 --> 00:22:50,730
Qwest and automatically it will return

00:22:46,650 --> 00:22:54,270
this text basically which is an HTML a

00:22:50,730 --> 00:22:57,750
snippet of HTML that will put a form on

00:22:54,270 --> 00:22:59,790
the web bridge so normally when you're

00:22:57,750 --> 00:23:01,320
writing your code you don't need to stop

00:22:59,790 --> 00:23:03,390
and restart the server every time

00:23:01,320 --> 00:23:06,780
because you're editing the same file and

00:23:03,390 --> 00:23:08,730
then morbol not notices then when the

00:23:06,780 --> 00:23:11,400
file changes and it restarts the server

00:23:08,730 --> 00:23:12,930
but because here I'm just having

00:23:11,400 --> 00:23:16,310
different scripts I have to stop the

00:23:12,930 --> 00:23:20,370
script and and start something else

00:23:16,310 --> 00:23:22,350
which is a bit unknown but if you would

00:23:20,370 --> 00:23:25,220
see me typing that would be a much more

00:23:22,350 --> 00:23:28,770
annoying so I think it's better this way

00:23:25,220 --> 00:23:35,880
so I'm going back I started the new

00:23:28,770 --> 00:23:40,710
script and I'm growing maybe the wrong

00:23:35,880 --> 00:23:42,960
script right oh sorry so the main page

00:23:40,710 --> 00:23:45,210
is still a hello world okay let's look

00:23:42,960 --> 00:23:46,590
at this one the main page is still the

00:23:45,210 --> 00:23:48,450
hello world returning the hello world

00:23:46,590 --> 00:23:57,840
but I have a different URL called echo

00:23:48,450 --> 00:24:02,670
so and usually it's better if I don't

00:23:57,840 --> 00:24:05,400
stop the server here we are so it's

00:24:02,670 --> 00:24:08,190
quite basic you just return that HTML

00:24:05,400 --> 00:24:12,000
that I told you to return and what

00:24:08,190 --> 00:24:15,150
happens if I type in I don't know foo

00:24:12,000 --> 00:24:17,250
and I click on echo it will give me a

00:24:15,150 --> 00:24:19,980
new error message and the reason it will

00:24:17,250 --> 00:24:22,950
give me an error message is let's look

00:24:19,980 --> 00:24:28,440
at this it says that it has the slash

00:24:22,950 --> 00:24:30,240
and a slash echo and but it my request

00:24:28,440 --> 00:24:33,480
was a post method so if you look at

00:24:30,240 --> 00:24:36,270
again to the add the source code the

00:24:33,480 --> 00:24:40,080
form in the for I set the method to be

00:24:36,270 --> 00:24:44,400
post while in the script I only declared

00:24:40,080 --> 00:24:45,960
the route for get requests and some

00:24:44,400 --> 00:24:48,210
people might feel that okay why do I

00:24:45,960 --> 00:24:49,890
need to do it Bost why do I need to do

00:24:48,210 --> 00:24:52,260
separate for the characters in the post

00:24:49,890 --> 00:24:54,000
request and but that's actually a really

00:24:52,260 --> 00:24:55,350
good thing because this means that I can

00:24:54,000 --> 00:24:57,600
fine-tune that

00:24:55,350 --> 00:24:59,730
to get requests I do something and for

00:24:57,600 --> 00:25:02,850
the post request on the same URL I do

00:24:59,730 --> 00:25:04,950
something completely different and so

00:25:02,850 --> 00:25:07,200
here I have the gap request and I need

00:25:04,950 --> 00:25:10,200
to implement the part of the post

00:25:07,200 --> 00:25:12,000
request which looks like this and here

00:25:10,200 --> 00:25:13,830
is the first time but when I'm returning

00:25:12,000 --> 00:25:17,910
something when I providing something to

00:25:13,830 --> 00:25:20,429
the to do route something that is not

00:25:17,910 --> 00:25:23,309
just simple air or hash reference but

00:25:20,429 --> 00:25:26,100
this time I provide the the second

00:25:23,309 --> 00:25:28,559
parameter is a anonymous subroutine so I

00:25:26,100 --> 00:25:31,350
declare sub I have to put this up here

00:25:28,559 --> 00:25:33,570
unlike here where it don't have the self

00:25:31,350 --> 00:25:36,990
and then I have real code that I'm

00:25:33,570 --> 00:25:39,809
running here this function the first

00:25:36,990 --> 00:25:42,870
parameter that is going to be receive is

00:25:39,809 --> 00:25:45,419
the controller and what's called a

00:25:42,870 --> 00:25:47,159
modulus controller so this is this is

00:25:45,419 --> 00:25:49,110
this module here down here modulus

00:25:47,159 --> 00:25:51,929
controller this is the object that

00:25:49,110 --> 00:25:53,970
represents basically the information

00:25:51,929 --> 00:25:56,309
about everything that what you just know

00:25:53,970 --> 00:25:57,809
that knows about these requests it has

00:25:56,309 --> 00:25:59,700
also the request it has also the

00:25:57,809 --> 00:26:03,539
response to everything that needs to be

00:25:59,700 --> 00:26:07,100
known in order to handle this this

00:26:03,539 --> 00:26:10,080
current request so that's why we we are

00:26:07,100 --> 00:26:12,900
taking it from the from the parameter

00:26:10,080 --> 00:26:14,909
list from at underscore and then on that

00:26:12,900 --> 00:26:16,530
object we can it's usually called dollar

00:26:14,909 --> 00:26:18,179
C for some reason because problem

00:26:16,530 --> 00:26:20,010
because it's controller although I

00:26:18,179 --> 00:26:22,919
noticed that in the documentation in

00:26:20,010 --> 00:26:26,490
some places they call itself as a normal

00:26:22,919 --> 00:26:27,900
module good too but I think in the

00:26:26,490 --> 00:26:30,419
context of modulations people usually

00:26:27,900 --> 00:26:34,740
call it dollar C because it's the

00:26:30,419 --> 00:26:37,409
controller so on that con I can call the

00:26:34,740 --> 00:26:40,159
render module the render function sorry

00:26:37,409 --> 00:26:42,090
and to that I can provide all kind of

00:26:40,159 --> 00:26:45,090
parameters the first one that you can

00:26:42,090 --> 00:26:47,460
see here is the the tax parameter that

00:26:45,090 --> 00:26:49,919
is supposed to receive it's quite

00:26:47,460 --> 00:26:52,200
similar to this one like here except

00:26:49,919 --> 00:26:55,350
that now I can create the text on the

00:26:52,200 --> 00:26:57,720
fly unlike the previous one where I just

00:26:55,350 --> 00:27:00,870
had to have hard code the whole text now

00:26:57,720 --> 00:27:03,299
this one is going to return the text in

00:27:00,870 --> 00:27:06,360
the end it's probably HTML but I can

00:27:03,299 --> 00:27:07,220
create it myself so and what I return

00:27:06,360 --> 00:27:09,820
here is the

00:27:07,220 --> 00:27:14,090
I called the parameters the parameters I

00:27:09,820 --> 00:27:16,280
will accept the name of the FOB of a

00:27:14,090 --> 00:27:18,650
parameter and then if we go here after

00:27:16,280 --> 00:27:23,090
we can see here so this form has an

00:27:18,650 --> 00:27:24,500
input a text input which has a name Q so

00:27:23,090 --> 00:27:27,320
that's what's going to be passed to the

00:27:24,500 --> 00:27:29,360
server but I whatever I type in that's

00:27:27,320 --> 00:27:34,309
gonna be in that Q parameter and this

00:27:29,360 --> 00:27:36,320
parent Q will fetch that value and the

00:27:34,309 --> 00:27:39,409
whole thing that this echoes does is

00:27:36,320 --> 00:27:43,809
just returns that string so if I start

00:27:39,409 --> 00:27:43,809
this script which is called just echo

00:27:45,460 --> 00:27:54,650
and I'll just go back here so you see I

00:27:50,960 --> 00:27:58,280
can reload this and I type here yup C

00:27:54,650 --> 00:27:59,840
and click echo and then let's goes to

00:27:58,280 --> 00:28:02,870
the server and it just sends back the

00:27:59,840 --> 00:28:05,929
word that I tied in so and that's it

00:28:02,870 --> 00:28:07,370
basically right that's what you need to

00:28:05,929 --> 00:28:10,400
know in order to start building web

00:28:07,370 --> 00:28:13,250
applications you can send some content

00:28:10,400 --> 00:28:15,799
to the client and you can accept some

00:28:13,250 --> 00:28:18,140
input from the client and then do some

00:28:15,799 --> 00:28:20,390
lookup in a database and some send back

00:28:18,140 --> 00:28:26,840
the data and there you go you have

00:28:20,390 --> 00:28:28,730
Google okay so basically of course

00:28:26,840 --> 00:28:30,020
there's some little bit more to Google

00:28:28,730 --> 00:28:34,870
but it's not much more so that's

00:28:30,020 --> 00:28:38,919
basically so when you're doing these

00:28:34,870 --> 00:28:42,260
pages just returning a simple strict is

00:28:38,919 --> 00:28:44,419
simple string is it's not really usually

00:28:42,260 --> 00:28:47,090
very nice usually want to have some more

00:28:44,419 --> 00:28:49,429
HTML and then most of that HTML is going

00:28:47,090 --> 00:28:52,520
to be the same and you always put in

00:28:49,429 --> 00:28:55,220
some values in there so having the whole

00:28:52,520 --> 00:28:59,390
thing within the script within the port

00:28:55,220 --> 00:29:02,809
code is gonna be really look like you're

00:28:59,390 --> 00:29:04,340
from the 80s writing programming and

00:29:02,809 --> 00:29:06,919
many things and you don't really want to

00:29:04,340 --> 00:29:10,730
do that so instead of that modernizers

00:29:06,919 --> 00:29:13,220
allows us to put the template put with

00:29:10,730 --> 00:29:17,870
HTML templates within the script but

00:29:13,220 --> 00:29:19,220
behind the data memory school tag okay

00:29:17,870 --> 00:29:20,919
so if

00:29:19,220 --> 00:29:23,539
you don't know whatever comes under

00:29:20,919 --> 00:29:26,510
under this underscore underscore data

00:29:23,539 --> 00:29:29,330
underscore underscore it's disregarded

00:29:26,510 --> 00:29:31,400
by Perl the script has access to it but

00:29:29,330 --> 00:29:34,970
it is you can put there anything any

00:29:31,400 --> 00:29:37,940
text and the Perl script will we won't

00:29:34,970 --> 00:29:41,120
care but what's used yeah but what you

00:29:37,940 --> 00:29:43,640
little monitor just uses this to have to

00:29:41,120 --> 00:29:46,190
allow us to put templates there so in

00:29:43,640 --> 00:29:49,700
this case I created one single template

00:29:46,190 --> 00:29:52,220
it starts with these two ad signs the

00:29:49,700 --> 00:29:55,190
name of the template and then just HTML

00:29:52,220 --> 00:29:58,039
at ap EP is that is I think it's cool

00:29:55,190 --> 00:29:59,780
embedded program and but it's paralyzing

00:29:58,039 --> 00:30:02,270
that's that's the name of the templating

00:29:59,780 --> 00:30:04,159
system it's it's really simple I'll show

00:30:02,270 --> 00:30:06,020
you a couple of examples but basically

00:30:04,159 --> 00:30:08,510
it's just a little bit more Pro code

00:30:06,020 --> 00:30:11,570
within the template so what we have here

00:30:08,510 --> 00:30:14,539
is just some HTML again it's quite

00:30:11,570 --> 00:30:17,240
simple here so the slides won't be too

00:30:14,539 --> 00:30:20,650
good too big and they just so shows the

00:30:17,240 --> 00:30:26,179
same HTML that earlier we had within

00:30:20,650 --> 00:30:28,820
within the get route to get echo route

00:30:26,179 --> 00:30:31,039
now in order to access that template and

00:30:28,820 --> 00:30:33,830
return that template I had to convert

00:30:31,039 --> 00:30:36,049
the echo route into something that's

00:30:33,830 --> 00:30:38,000
actually code instead of what what I had

00:30:36,049 --> 00:30:40,730
earlier that was just returning the text

00:30:38,000 --> 00:30:43,010
but that's that's a little price to pay

00:30:40,730 --> 00:30:48,080
in order to to have everything separated

00:30:43,010 --> 00:30:52,220
into into a template so that would work

00:30:48,080 --> 00:30:54,169
the same I don't show it here now but

00:30:52,220 --> 00:30:56,659
what I can do is I can put more

00:30:54,169 --> 00:30:58,669
templates there so I can to put several

00:30:56,659 --> 00:31:02,750
templates so I have the first template

00:30:58,669 --> 00:31:07,340
just shows we will just be the first

00:31:02,750 --> 00:31:08,870
page just showing the the form and then

00:31:07,340 --> 00:31:12,020
I could put another template which is

00:31:08,870 --> 00:31:13,700
going to be the response which is well

00:31:12,020 --> 00:31:15,320
almost the same that we had earlier we

00:31:13,700 --> 00:31:17,960
already are just returned the string

00:31:15,320 --> 00:31:21,100
that we got now this time I put here you

00:31:17,960 --> 00:31:24,919
typed and whatever the user typed in

00:31:21,100 --> 00:31:27,649
this one this thing is is part of the

00:31:24,919 --> 00:31:32,490
templating system of mojolicious what it

00:31:27,649 --> 00:31:34,830
says that we have between these signs

00:31:32,490 --> 00:31:37,590
less than a number again percentage and

00:31:34,830 --> 00:31:41,150
equal and then the closing part of it

00:31:37,590 --> 00:31:43,980
here I can put basically Perl code and

00:31:41,150 --> 00:31:47,150
the simple sport code is just a scalar

00:31:43,980 --> 00:31:51,470
so what module is just will do is

00:31:47,150 --> 00:31:55,080
interpolate the value of the message

00:31:51,470 --> 00:31:57,690
scalar into this place now where do we

00:31:55,080 --> 00:32:00,179
get this message scalar that's what we

00:31:57,690 --> 00:32:03,809
passed here to the render method so the

00:32:00,179 --> 00:32:06,150
render method gets the name of the the

00:32:03,809 --> 00:32:09,000
name of the template here we have

00:32:06,150 --> 00:32:11,520
response dot HTML dot e P that's what we

00:32:09,000 --> 00:32:14,190
get here that once we pass here

00:32:11,520 --> 00:32:18,120
and it can get also key value pairs that

00:32:14,190 --> 00:32:20,429
will be converted into variables in the

00:32:18,120 --> 00:32:23,280
in the template and then I can use that

00:32:20,429 --> 00:32:26,660
those variables and put them their value

00:32:23,280 --> 00:32:29,550
in whatever place I want in the template

00:32:26,660 --> 00:32:31,980
so if you clean the will clean the code

00:32:29,550 --> 00:32:34,800
or code a little bit because now all the

00:32:31,980 --> 00:32:36,750
HTML they display part is in the

00:32:34,800 --> 00:32:42,690
templates and all the code part is is

00:32:36,750 --> 00:32:44,280
within the code of course when you're

00:32:42,690 --> 00:32:46,760
building an application soon you will

00:32:44,280 --> 00:32:50,100
realize that you have several pages and

00:32:46,760 --> 00:32:52,320
90% of all the pages or parts of the

00:32:50,100 --> 00:32:54,120
purchase or 99 third is the same so you

00:32:52,320 --> 00:32:55,650
all want to have the whole the same

00:32:54,120 --> 00:32:57,960
header the same menu the same background

00:32:55,650 --> 00:33:00,270
whatever all the pages and only some

00:32:57,960 --> 00:33:04,290
part of the content it changes so

00:33:00,270 --> 00:33:07,860
instead of having in every template the

00:33:04,290 --> 00:33:11,130
same thing repeated and we can use we

00:33:07,860 --> 00:33:16,250
can merge these okay sorry that wasn't

00:33:11,130 --> 00:33:16,250
the one okay let's give here

00:33:17,660 --> 00:33:21,710
if I already told you about this okay so

00:33:20,270 --> 00:33:24,169
we're talking about the layouts and now

00:33:21,710 --> 00:33:26,960
go back to the one yeah so here we have

00:33:24,169 --> 00:33:29,990
you can have layouts so what we have

00:33:26,960 --> 00:33:33,410
here is we have the template the echo

00:33:29,990 --> 00:33:35,960
HTML HP and then I declare that this is

00:33:33,410 --> 00:33:39,799
using the template which is called the

00:33:35,960 --> 00:33:41,870
the layout is called wrapper and within

00:33:39,799 --> 00:33:44,000
the same part so within the underscore

00:33:41,870 --> 00:33:47,410
under the data part I create another

00:33:44,000 --> 00:33:51,380
piece of template basically which is

00:33:47,410 --> 00:33:52,610
placed sort of in a directory it's

00:33:51,380 --> 00:33:54,320
physically still in the script

00:33:52,610 --> 00:33:57,530
but it looks like I think everything if

00:33:54,320 --> 00:33:59,900
it if it was one if he F as if it was in

00:33:57,530 --> 00:34:02,450
a subdirectory code layouts and within

00:33:59,900 --> 00:34:05,510
there that was there was a file so

00:34:02,450 --> 00:34:07,669
layers wrapper HTML and what module

00:34:05,510 --> 00:34:11,119
issues does is that when it's when it

00:34:07,669 --> 00:34:13,429
processes the echo echo template so here

00:34:11,119 --> 00:34:17,720
up here when I see rendered echo

00:34:13,429 --> 00:34:21,260
template then it will take the echo

00:34:17,720 --> 00:34:23,419
template render it itself okay put the

00:34:21,260 --> 00:34:25,700
variables to replace the variables with

00:34:23,419 --> 00:34:28,540
whatever what values I wanted and then

00:34:25,700 --> 00:34:31,899
take the whole result and put in the

00:34:28,540 --> 00:34:36,050
content instead of this content

00:34:31,899 --> 00:34:39,500
placeholder in the in the layout so now

00:34:36,050 --> 00:34:42,260
I have this layout and when a one single

00:34:39,500 --> 00:34:44,659
part is going to be replaced by the

00:34:42,260 --> 00:34:51,109
specific template I'm using for that

00:34:44,659 --> 00:34:52,639
page okay just let me see what yeah

00:34:51,109 --> 00:34:56,359
that's that's actually an important part

00:34:52,639 --> 00:34:59,540
and I skipped here in between the

00:34:56,359 --> 00:35:04,220
templates we can do basically any Perl

00:34:59,540 --> 00:35:06,880
script and so we can write any Perl code

00:35:04,220 --> 00:35:09,619
so for example we do conditionals and

00:35:06,880 --> 00:35:11,930
for this we start the line with an

00:35:09,619 --> 00:35:14,359
ampersand sign and then write on that

00:35:11,930 --> 00:35:18,500
same line some Perl code for example an

00:35:14,359 --> 00:35:20,480
if statement then after underlines that

00:35:18,500 --> 00:35:23,960
does that don't start with an ampersand

00:35:20,480 --> 00:35:25,780
that's just plain HTML for example here

00:35:23,960 --> 00:35:28,450
that's part of the

00:35:25,780 --> 00:35:30,910
OOP and then an anaphor ampersand hissed

00:35:28,450 --> 00:35:33,730
I'm sorry and then that's again pure

00:35:30,910 --> 00:35:35,920
code so if you look at just this and

00:35:33,730 --> 00:35:38,920
this line the two lines sorting is a

00:35:35,920 --> 00:35:39,430
person's design then you can see a purl

00:35:38,920 --> 00:35:42,540
loop

00:35:39,430 --> 00:35:44,860
nothing is sorry a pearl if statement

00:35:42,540 --> 00:35:47,050
but it could be a loop as well so it's

00:35:44,860 --> 00:35:49,060
just poor code and then within there

00:35:47,050 --> 00:35:51,820
this the lines that don't start with

00:35:49,060 --> 00:35:53,740
percentage sighs you're just they are

00:35:51,820 --> 00:35:55,950
just plain HTML or whatever you put

00:35:53,740 --> 00:35:55,950
there

00:35:56,310 --> 00:36:06,220
yeah it's I think a battered pearl

00:36:01,830 --> 00:36:09,790
because pearl IEP stands for there is

00:36:06,220 --> 00:36:13,210
for embedded providing because pearl is

00:36:09,790 --> 00:36:14,020
embedded into the HTML it's I can in the

00:36:13,210 --> 00:36:22,090
90s

00:36:14,020 --> 00:36:24,240
that's what's one of the sorry yeah it's

00:36:22,090 --> 00:36:27,430
just I set the server sites whatever

00:36:24,240 --> 00:36:31,570
people did don't like don't like it but

00:36:27,430 --> 00:36:33,340
in the in the end so they're templating

00:36:31,570 --> 00:36:35,290
systems are always starting out with

00:36:33,340 --> 00:36:37,360
okay we just need a placeholder for

00:36:35,290 --> 00:36:38,890
something and then they suddenly turn

00:36:37,360 --> 00:36:42,790
into an their own programming language

00:36:38,890 --> 00:36:44,530
and and then we have tons of templating

00:36:42,790 --> 00:36:47,560
systems so there's always a question

00:36:44,530 --> 00:36:50,800
that we want to have a separate language

00:36:47,560 --> 00:36:53,440
for the templating system which everyone

00:36:50,800 --> 00:36:54,820
has to have to learn or if we want to

00:36:53,440 --> 00:36:58,000
use the same language that we are

00:36:54,820 --> 00:36:59,680
already programming in and then there is

00:36:58,000 --> 00:37:02,050
templating toolkit that will say okay do

00:36:59,680 --> 00:37:05,920
this or that or doesn't matter okay you

00:37:02,050 --> 00:37:08,350
can do both both which can be good but

00:37:05,920 --> 00:37:10,420
if you don't we don't pay attention that

00:37:08,350 --> 00:37:10,840
it can really get out of hand quite

00:37:10,420 --> 00:37:13,740
easily

00:37:10,840 --> 00:37:13,740
sorry yeah

00:37:19,590 --> 00:37:26,080
if there are any security issues with

00:37:23,890 --> 00:37:29,640
the poor happy prayer being in the in

00:37:26,080 --> 00:37:32,740
the in the template I don't think so

00:37:29,640 --> 00:37:36,790
well probably everything has time

00:37:32,740 --> 00:37:38,470
security issues Indian and trans on the

00:37:36,790 --> 00:37:44,170
server so you still have to take care

00:37:38,470 --> 00:37:47,290
that your parameters are sanitized or

00:37:44,170 --> 00:37:49,720
checked at least that that your proper

00:37:47,290 --> 00:37:53,230
values but I think as long as you don't

00:37:49,720 --> 00:37:55,210
try to execute code here so yeah there

00:37:53,230 --> 00:37:56,590
are there can be issues because if you

00:37:55,210 --> 00:37:59,620
give it to someone who is not a

00:37:56,590 --> 00:38:02,170
programmer and start because now you

00:37:59,620 --> 00:38:05,680
want to the designer to do this part or

00:38:02,170 --> 00:38:08,650
I don't know then they might just core

00:38:05,680 --> 00:38:11,230
system with the parameters and then then

00:38:08,650 --> 00:38:13,530
there you have a security problem so

00:38:11,230 --> 00:38:19,090
there can't be the security issues but

00:38:13,530 --> 00:38:21,550
but I think that's yeah yeah so so if

00:38:19,090 --> 00:38:23,620
you if you do this separation then it

00:38:21,550 --> 00:38:25,630
might be problematic I'm a separation I

00:38:23,620 --> 00:38:27,220
mean that that you have a separate

00:38:25,630 --> 00:38:29,590
person who is not a pro programmer or

00:38:27,220 --> 00:38:32,650
not the programmer who knows the

00:38:29,590 --> 00:38:35,950
possible issues that you're not supposed

00:38:32,650 --> 00:38:38,200
to cool system or do all kind of

00:38:35,950 --> 00:38:46,090
external things with parameters that you

00:38:38,200 --> 00:38:48,490
haven't checked okay that's I think okay

00:38:46,090 --> 00:38:50,650
so this is just just a simple slide that

00:38:48,490 --> 00:38:52,510
I showed that I put here some CSS style

00:38:50,650 --> 00:38:54,490
within the same template which is the

00:38:52,510 --> 00:38:56,770
same layout that's not really important

00:38:54,490 --> 00:38:58,630
my design capabilities are really really

00:38:56,770 --> 00:39:00,970
negative I think so it's better not to

00:38:58,630 --> 00:39:03,580
see this but the point is that now I

00:39:00,970 --> 00:39:05,230
already have this huge template part a

00:39:03,580 --> 00:39:07,630
little power script and a huge template

00:39:05,230 --> 00:39:11,950
and and maybe it's time to separate the

00:39:07,630 --> 00:39:14,860
whole thing out and convert start to

00:39:11,950 --> 00:39:16,690
convert from the module.slide to a real

00:39:14,860 --> 00:39:20,110
emotional issues application where we

00:39:16,690 --> 00:39:25,960
have multiple files so just to show you

00:39:20,110 --> 00:39:28,110
here I took the CSS and I put it

00:39:25,960 --> 00:39:28,110
somewhere

00:39:30,330 --> 00:39:35,110
where is it it's gone

00:39:32,470 --> 00:39:40,720
here so I just put it a reference that

00:39:35,110 --> 00:39:45,280
here and then put it in the subdirectory

00:39:40,720 --> 00:39:46,930
called public so I have the script the

00:39:45,280 --> 00:39:51,250
main script I create a subdirectory

00:39:46,930 --> 00:39:53,350
called public just next to it and the

00:39:51,250 --> 00:39:56,290
more book the web server automatically

00:39:53,350 --> 00:40:00,280
will serve static files from that public

00:39:56,290 --> 00:40:02,800
directory okay so whatever what I needed

00:40:00,280 --> 00:40:04,750
to do is to this I to the CSS part from

00:40:02,800 --> 00:40:07,390
my template put in created a

00:40:04,750 --> 00:40:09,550
subdirectory called public next to the

00:40:07,390 --> 00:40:22,450
other script so yeah actually I can show

00:40:09,550 --> 00:40:24,580
you yeah roley's better so this is how

00:40:22,450 --> 00:40:28,500
this new let's the application is looks

00:40:24,580 --> 00:40:31,000
like a P P P L is my main motor issues

00:40:28,500 --> 00:40:33,970
application okay all three lines or four

00:40:31,000 --> 00:40:37,120
I don't know I have and then I lost my

00:40:33,970 --> 00:40:39,640
mouse somewhere yeah okay and then next

00:40:37,120 --> 00:40:41,800
to it there is a directory called public

00:40:39,640 --> 00:40:47,530
and within there there is a CSS file now

00:40:41,800 --> 00:40:50,530
and when I reference that CSS file as

00:40:47,530 --> 00:40:53,320
normally probably I would in an HTML

00:40:50,530 --> 00:40:55,600
page saying slash star CSS that

00:40:53,320 --> 00:40:57,820
automatically the mobile server will

00:40:55,600 --> 00:41:01,240
look for that style CSS in the public

00:40:57,820 --> 00:41:03,580
direct public directory next to my main

00:41:01,240 --> 00:41:05,230
script and that's it and of course I can

00:41:03,580 --> 00:41:11,380
put their images and whatever else I

00:41:05,230 --> 00:41:13,900
want okay so basically that's that's the

00:41:11,380 --> 00:41:16,270
main part of module issues and then you

00:41:13,900 --> 00:41:18,280
could have started we started with just

00:41:16,270 --> 00:41:22,240
writing script you could have started

00:41:18,280 --> 00:41:23,770
with a tool called mojo the tool called

00:41:22,240 --> 00:41:26,860
module that comes with one or accrues

00:41:23,770 --> 00:41:28,810
mojolicious saying module generate light

00:41:26,860 --> 00:41:31,930
app so it's going to create a light

00:41:28,810 --> 00:41:34,390
application and then say the name of the

00:41:31,930 --> 00:41:37,030
script or it automatically creates one

00:41:34,390 --> 00:41:40,120
if you if you don't need say the name

00:41:37,030 --> 00:41:42,550
and if you create this file which is

00:41:40,120 --> 00:41:44,710
quite a basic so it will just create

00:41:42,550 --> 00:41:47,350
simple script with a couple of lines a

00:41:44,710 --> 00:41:49,990
little bit of template a one nice thing

00:41:47,350 --> 00:41:52,620
is that it uses the plugin called port

00:41:49,990 --> 00:41:55,330
renderer that will allow you to see the

00:41:52,620 --> 00:41:59,250
documentation of modulations on your own

00:41:55,330 --> 00:42:02,140
web application now so it can be useful

00:41:59,250 --> 00:42:05,500
during development that you or you have

00:42:02,140 --> 00:42:07,180
in a nicely formatted way a nice

00:42:05,500 --> 00:42:10,900
rendered whole documentation of much of

00:42:07,180 --> 00:42:13,030
issues but then you can go on and work

00:42:10,900 --> 00:42:14,890
with this on the other hand if you

00:42:13,030 --> 00:42:17,110
really want to get started with the

00:42:14,890 --> 00:42:20,080
module issues application then you can

00:42:17,110 --> 00:42:24,550
write module generate up instead of

00:42:20,080 --> 00:42:26,680
apply and then if you create a layout of

00:42:24,550 --> 00:42:30,250
direct of directories in a couple of

00:42:26,680 --> 00:42:31,750
files and that will resume that will be

00:42:30,250 --> 00:42:33,730
the skeleton for your module issues

00:42:31,750 --> 00:42:37,200
application and here you have a module

00:42:33,730 --> 00:42:39,640
that where you put your implementation

00:42:37,200 --> 00:42:42,880
public where you can put the static

00:42:39,640 --> 00:42:44,650
files and script where is your main

00:42:42,880 --> 00:42:46,780
script that's usually a more or less

00:42:44,650 --> 00:42:49,840
empty more of most of your code is in

00:42:46,780 --> 00:42:53,140
the PM file already T where you have the

00:42:49,840 --> 00:42:55,240
test scripts or ready to test your web

00:42:53,140 --> 00:42:57,820
application and templates are where you

00:42:55,240 --> 00:42:59,170
put all the templates and then within

00:42:57,820 --> 00:43:02,260
that there is the layouts where you

00:42:59,170 --> 00:43:04,990
would put the layout so whatever will

00:43:02,260 --> 00:43:08,200
show there the whole page of your

00:43:04,990 --> 00:43:10,180
application so that's basically how you

00:43:08,200 --> 00:43:12,970
can start get started with the malicious

00:43:10,180 --> 00:43:15,120
application instead of a light one which

00:43:12,970 --> 00:43:18,940
is just a single file

00:43:15,120 --> 00:43:20,470
routing I mentioned at the beginning and

00:43:18,940 --> 00:43:23,200
that's hold of the whole basics of

00:43:20,470 --> 00:43:26,080
module issues so we started this get and

00:43:23,200 --> 00:43:29,350
slash and then get slash echo and that

00:43:26,080 --> 00:43:33,190
we used post slash echo actually we can

00:43:29,350 --> 00:43:35,710
have a lot of other different routes so

00:43:33,190 --> 00:43:38,590
we can declare routes the first one here

00:43:35,710 --> 00:43:41,470
is just a static fixed route so someone

00:43:38,590 --> 00:43:44,770
who visits the /li slash home page will

00:43:41,470 --> 00:43:47,950
get whatever that route does the second

00:43:44,770 --> 00:43:50,380
one says that whoever visits the slash

00:43:47,950 --> 00:43:54,630
item slash something that's a matter

00:43:50,380 --> 00:43:58,789
what page then this route will

00:43:54,630 --> 00:44:03,119
we'll be executed and whatever was here

00:43:58,789 --> 00:44:06,210
instead of that : ID will be accessible

00:44:03,119 --> 00:44:08,369
by param ID so it's similar how you

00:44:06,210 --> 00:44:11,999
would access parameters that the user

00:44:08,369 --> 00:44:15,839
passes within the URL after the question

00:44:11,999 --> 00:44:18,569
mark that's it just general HTTP T HTTP

00:44:15,839 --> 00:44:21,720
parameters but here the you a part of

00:44:18,569 --> 00:44:24,690
the URL was converted into parameters in

00:44:21,720 --> 00:44:28,920
the similar way so if you want to have a

00:44:24,690 --> 00:44:32,430
URL that says item and then numbers 42

00:44:28,920 --> 00:44:35,099
for example you can easily convert the

00:44:32,430 --> 00:44:39,029
whole thing into a single route slash

00:44:35,099 --> 00:44:41,519
which was caught by this declared by

00:44:39,029 --> 00:44:45,509
this and then in the para method you can

00:44:41,519 --> 00:44:47,640
access the second part of the of the

00:44:45,509 --> 00:44:51,359
review RL and that can create really

00:44:47,640 --> 00:44:53,130
nice URLs and this this Cullen ID and it

00:44:51,359 --> 00:44:56,220
can be any color anything of course and

00:44:53,130 --> 00:44:59,130
this thing will capture anything that

00:44:56,220 --> 00:45:01,829
doesn't have a dot or a slash in it so

00:44:59,130 --> 00:45:04,170
if you have slash item slash something

00:45:01,829 --> 00:45:06,059
slash something else then this route

00:45:04,170 --> 00:45:08,009
will won't match it because it has a

00:45:06,059 --> 00:45:11,059
slash in in there if you only match

00:45:08,009 --> 00:45:14,759
something that is says slash item slash

00:45:11,059 --> 00:45:16,619
stuff without dot and without slash if

00:45:14,759 --> 00:45:18,839
you would like to catch things that in

00:45:16,619 --> 00:45:21,210
contain dots for example you won't catch

00:45:18,839 --> 00:45:26,999
phone and the phone number that might

00:45:21,210 --> 00:45:31,049
look like this okay it looks like this

00:45:26,999 --> 00:45:34,109
then I can use the pound sign and this

00:45:31,049 --> 00:45:36,479
if I say pound something then this

00:45:34,109 --> 00:45:40,559
placeholder all this thing that will

00:45:36,479 --> 00:45:43,499
capture that part of the URL will be

00:45:40,559 --> 00:45:45,569
ready to capture also dot and if I want

00:45:43,499 --> 00:45:47,640
to capture everything including the dots

00:45:45,569 --> 00:45:50,880
and including slashes then I could push

00:45:47,640 --> 00:45:54,150
this wild-card the store and some name

00:45:50,880 --> 00:45:56,099
there and then no matter slash path

00:45:54,150 --> 00:45:58,589
slash doesn't matter what comes there

00:45:56,099 --> 00:46:02,190
you'll be code by this route the

00:45:58,589 --> 00:46:03,509
function will run and whatever was

00:46:02,190 --> 00:46:04,290
coming after the path you'll be

00:46:03,509 --> 00:46:10,080
accessible

00:46:04,290 --> 00:46:12,480
through the Purim method anything yeah I

00:46:10,080 --> 00:46:15,240
can show you this but I will skip the

00:46:12,480 --> 00:46:17,730
holes the same things just trying to

00:46:15,240 --> 00:46:20,400
show that it works but I can probably

00:46:17,730 --> 00:46:22,160
believe the templating system either

00:46:20,400 --> 00:46:25,170
looks like this so you can put

00:46:22,160 --> 00:46:27,300
percentage side on the front line on the

00:46:25,170 --> 00:46:29,940
first at the beginning of the line and

00:46:27,300 --> 00:46:32,490
the rest of the line is just pure code

00:46:29,940 --> 00:46:34,710
and the special case is the percentage

00:46:32,490 --> 00:46:38,280
equal which will just do interpolation

00:46:34,710 --> 00:46:41,580
of a single variable or you can do the

00:46:38,280 --> 00:46:44,190
same one but with something that looks

00:46:41,580 --> 00:46:46,470
like HTML and that allows us to put

00:46:44,190 --> 00:46:50,280
actually HTML in front on the same line

00:46:46,470 --> 00:46:52,260
so in the first case the line that

00:46:50,280 --> 00:46:55,770
starts with the person to each time must

00:46:52,260 --> 00:46:58,980
contain only promo code the second case

00:46:55,770 --> 00:47:01,230
will allow us to put HTML around it and

00:46:58,980 --> 00:47:04,020
in some cases and especially when we

00:47:01,230 --> 00:47:05,730
want to embed a single term value that's

00:47:04,020 --> 00:47:07,470
very useful because you have some HTML

00:47:05,730 --> 00:47:09,030
here it comes the value some more each

00:47:07,470 --> 00:47:10,740
do you know and then it's much more

00:47:09,030 --> 00:47:13,260
useful this way but in the end it

00:47:10,740 --> 00:47:15,680
doesn't matter it's just how your

00:47:13,260 --> 00:47:23,250
template through look like that's how

00:47:15,680 --> 00:47:25,950
that matters so EP embedded program in

00:47:23,250 --> 00:47:28,110
case and that's quite a big issue I see

00:47:25,950 --> 00:47:30,540
in case you would like to return a JSON

00:47:28,110 --> 00:47:32,670
because you're writing an API and that's

00:47:30,540 --> 00:47:34,800
one of the really good uses for what you

00:47:32,670 --> 00:47:37,590
choose right that you built an API and

00:47:34,800 --> 00:47:39,210
you want to see how it works the whole

00:47:37,590 --> 00:47:40,950
the only thing you need to do is that in

00:47:39,210 --> 00:47:43,380
the in the render method instead of

00:47:40,950 --> 00:47:45,900
saying text and giving a string we say

00:47:43,380 --> 00:47:48,840
JSON and you give it a reference to

00:47:45,900 --> 00:47:52,350
whatever an array your hash if you

00:47:48,840 --> 00:47:55,500
convert it into our JSON visits with its

00:47:52,350 --> 00:47:57,060
own internal JSON converter it's not it

00:47:55,500 --> 00:47:59,070
doesn't depend on any external JSON

00:47:57,060 --> 00:48:01,680
converter and return that JSON as a

00:47:59,070 --> 00:48:06,450
string okay so it's quite easy to do

00:48:01,680 --> 00:48:09,180
that testing that's quite important I

00:48:06,450 --> 00:48:11,430
think so within the test file which is a

00:48:09,180 --> 00:48:13,660
something doc T usually usually in the T

00:48:11,430 --> 00:48:16,809
directory mock in our case knowing this

00:48:13,660 --> 00:48:21,039
case I used low to test more module I

00:48:16,809 --> 00:48:24,549
use the test module and then I load the

00:48:21,039 --> 00:48:27,339
application script here okay so a PP PL

00:48:24,549 --> 00:48:30,069
is my application script where I

00:48:27,339 --> 00:48:33,430
implemented my application and then I

00:48:30,069 --> 00:48:35,920
can run this the test wacho cuts this in

00:48:33,430 --> 00:48:38,440
to this T object and then I think get

00:48:35,920 --> 00:48:40,750
okay will check whether I can access the

00:48:38,440 --> 00:48:44,770
sled the route which is called slash

00:48:40,750 --> 00:48:46,410
okay this and then on that object I can

00:48:44,770 --> 00:48:48,760
call all kind of other methods

00:48:46,410 --> 00:48:51,039
so in stay it won't return true or false

00:48:48,760 --> 00:48:52,990
it will just it will return its own

00:48:51,039 --> 00:48:55,000
object and then I can call another

00:48:52,990 --> 00:48:55,990
letters on it and then I can check

00:48:55,000 --> 00:48:59,109
whether the start with those two

00:48:55,990 --> 00:49:04,450
thousand the 200 and whether there is a

00:48:59,109 --> 00:49:06,730
text and here this is a CSS selector so

00:49:04,450 --> 00:49:08,980
I say okay select the header element at

00:49:06,730 --> 00:49:12,359
within that select the title element and

00:49:08,980 --> 00:49:16,780
check whether the value of it is to do

00:49:12,359 --> 00:49:19,329
these letters exactly and then there is

00:49:16,780 --> 00:49:21,910
another one here another HTML select a

00:49:19,329 --> 00:49:25,349
CSS selector checks whether there is an

00:49:21,910 --> 00:49:29,099
a element okay a link that has an H ref

00:49:25,349 --> 00:49:33,789
equals 2 slash so if there is a link to

00:49:29,099 --> 00:49:34,750
to the home page and whether the text on

00:49:33,789 --> 00:49:37,150
it is called

00:49:34,750 --> 00:49:39,730
home so what it means inside the AE

00:49:37,150 --> 00:49:41,470
element the text so this is basically

00:49:39,730 --> 00:49:45,339
how we can write and I can also write

00:49:41,470 --> 00:49:48,339
post okay and it will just send the post

00:49:45,339 --> 00:49:50,589
match post request and then I can this

00:49:48,339 --> 00:49:52,809
post request has of course instead of

00:49:50,589 --> 00:49:56,140
means in addition to the URL also has

00:49:52,809 --> 00:49:58,240
some data in the form and then I can

00:49:56,140 --> 00:50:01,270
test whether check whether the results

00:49:58,240 --> 00:50:03,279
is the results look like what I expected

00:50:01,270 --> 00:50:08,650
so it's quite easy to test the

00:50:03,279 --> 00:50:11,170
applications deployment ok there are the

00:50:08,650 --> 00:50:13,150
modulations guide look actually I have

00:50:11,170 --> 00:50:17,200
one more minute for three more slides I

00:50:13,150 --> 00:50:19,690
think okay so the the deployment is

00:50:17,200 --> 00:50:20,380
there is a quite good documentation of

00:50:19,690 --> 00:50:22,900
module issues

00:50:20,380 --> 00:50:25,119
so if you look up how you can deploy it

00:50:22,900 --> 00:50:27,609
you can deploy it as a CGI script and

00:50:25,119 --> 00:50:28,839
actually I use this because in in one

00:50:27,609 --> 00:50:32,009
place where I was in an environment

00:50:28,839 --> 00:50:35,049
where I have literally little control I

00:50:32,009 --> 00:50:37,900
inherited a bunch of CGI scripts you

00:50:35,049 --> 00:50:40,950
reload CGI script and I couldn't change

00:50:37,900 --> 00:50:45,789
the environment so I started to write my

00:50:40,950 --> 00:50:47,769
applications and run them as a CGI in

00:50:45,789 --> 00:50:50,489
the hope that one day I'll have enough

00:50:47,769 --> 00:50:53,170
political power in the organization to

00:50:50,489 --> 00:50:55,930
move the whole thing into some more more

00:50:53,170 --> 00:50:57,910
reasonable deployment solution but then

00:50:55,930 --> 00:51:00,369
I already have a good code that I can

00:50:57,910 --> 00:51:03,099
easily move it so that's actually not

00:51:00,369 --> 00:51:04,420
you you make sure that you think about

00:51:03,099 --> 00:51:07,599
that possibility

00:51:04,420 --> 00:51:09,940
you can also around this PS with some

00:51:07,599 --> 00:51:12,759
plug server but there is there is

00:51:09,940 --> 00:51:14,589
another server called hypnotoad which is

00:51:12,759 --> 00:51:16,119
which comes again which comes with

00:51:14,589 --> 00:51:18,190
module issues so you don't need to

00:51:16,119 --> 00:51:20,380
install anything else it's a replacement

00:51:18,190 --> 00:51:23,079
for morbol basically or another

00:51:20,380 --> 00:51:25,660
alternative to morbo where more buoys is

00:51:23,079 --> 00:51:28,749
the development server and hypnotoad is

00:51:25,660 --> 00:51:31,239
the production server so it for example

00:51:28,749 --> 00:51:34,690
won't show the debug messages from your

00:51:31,239 --> 00:51:37,989
application to the clients and has all

00:51:34,690 --> 00:51:39,670
kind of other nice features and then

00:51:37,989 --> 00:51:43,029
there are three more slides that I can't

00:51:39,670 --> 00:51:45,400
probably show you but and then the last

00:51:43,029 --> 00:51:48,729
one I want to show you only do you know

00:51:45,400 --> 00:51:51,579
what WebSockets are who knows what

00:51:48,729 --> 00:51:54,579
Facebook cars are okay so basically it's

00:51:51,579 --> 00:51:58,150
for others it's a way to the problem is

00:51:54,579 --> 00:52:00,759
with the web world or works mostly is

00:51:58,150 --> 00:52:02,890
that they are all the kind that the

00:52:00,759 --> 00:52:04,479
server always disconnected and for every

00:52:02,890 --> 00:52:07,029
request the client has to go up to the

00:52:04,479 --> 00:52:09,519
server and ask something and if I want

00:52:07,029 --> 00:52:11,979
to send something from the server and

00:52:09,519 --> 00:52:15,099
then the only way I can really do it is

00:52:11,979 --> 00:52:17,799
that I write the client in a way that it

00:52:15,099 --> 00:52:19,749
will check every second or every five

00:52:17,799 --> 00:52:21,670
seconds if the server has anything new

00:52:19,749 --> 00:52:24,549
to say because the server can't initiate

00:52:21,670 --> 00:52:26,559
a connection and but it creates a lot of

00:52:24,549 --> 00:52:28,960
load so WebSockets

00:52:26,559 --> 00:52:30,289
will build up a connection between the

00:52:28,960 --> 00:52:34,799
client and the server

00:52:30,289 --> 00:52:37,200
that is remain that will remain open the

00:52:34,799 --> 00:52:41,400
connection it will that basically

00:52:37,200 --> 00:52:43,559
reduced the cost of this asking the

00:52:41,400 --> 00:52:47,670
server again and again and it'll allow

00:52:43,559 --> 00:52:51,569
the server to send in data so let me

00:52:47,670 --> 00:52:57,200
just show you this example a little chat

00:52:51,569 --> 00:53:05,670
server that this is not the right thing

00:52:57,200 --> 00:53:08,369
warble so if I visit this page now I can

00:53:05,670 --> 00:53:20,480
type here I am whatever am what am i and

00:53:08,369 --> 00:53:20,480
Chrome probably and maybe yes

00:53:35,930 --> 00:53:47,369
okay so I can type in messages and the

00:53:41,549 --> 00:53:50,490
other one will see it and you won't see

00:53:47,369 --> 00:53:52,410
it because it's too small anyway that's

00:53:50,490 --> 00:53:54,750
it now if we had time we could actually

00:53:52,410 --> 00:53:56,880
access the server then we could talk to

00:53:54,750 --> 00:53:58,230
each other on the chat server thank you

00:53:56,880 --> 00:54:02,809
very much

00:53:58,230 --> 00:54:02,809

YouTube URL: https://www.youtube.com/watch?v=oAkasBMJJ18


