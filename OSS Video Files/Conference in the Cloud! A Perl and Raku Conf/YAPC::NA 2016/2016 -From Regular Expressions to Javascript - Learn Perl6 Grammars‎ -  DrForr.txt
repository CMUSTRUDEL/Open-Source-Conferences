Title: 2016 -From Regular Expressions to Javascript - Learn Perl6 Grammars‎ -  DrForr
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:07,170
okay first of all I just in case you've

00:00:04,560 --> 00:00:10,380
missed it for for him I checked off from

00:00:07,170 --> 00:00:13,440
evas on eid Romania we're talking here

00:00:10,380 --> 00:00:15,900
about we're going to start out with a

00:00:13,440 --> 00:00:19,470
basic introduction to Perl 6 real

00:00:15,900 --> 00:00:22,289
expressions and at the end we will be

00:00:19,470 --> 00:00:25,410
able to do a portion of a justifying

00:00:22,289 --> 00:00:28,529
compiler for JavaScript a very small

00:00:25,410 --> 00:00:32,489
portion yeah it does just where two

00:00:28,529 --> 00:00:34,410
lines this technique I'm going to show

00:00:32,489 --> 00:00:37,140
off a technique that I found that's

00:00:34,410 --> 00:00:39,450
useful for trying to deal with say

00:00:37,140 --> 00:00:42,809
instead of having a explicit grammar

00:00:39,450 --> 00:00:45,480
headed to you for how to parse a

00:00:42,809 --> 00:00:48,480
document we all take apart strain by

00:00:45,480 --> 00:00:51,120
spring in step by step so things will be

00:00:48,480 --> 00:00:54,120
very basically get the start I'll cover

00:00:51,120 --> 00:00:56,329
some other basic parts don't expect to

00:00:54,120 --> 00:00:59,609
see too much in the way of the fancier

00:00:56,329 --> 00:01:02,789
purl row operations and hyper operators

00:00:59,609 --> 00:01:07,830
and whatnot I will cover some low at the

00:01:02,789 --> 00:01:10,020
end and we will learn a way to take

00:01:07,830 --> 00:01:14,010
JavaScript and factor down to a more

00:01:10,020 --> 00:01:17,070
proper object free but we'll start out

00:01:14,010 --> 00:01:21,659
with something as simple and supposed to

00:01:17,070 --> 00:01:24,000
do that 4sync purposes and we'll start

00:01:21,659 --> 00:01:29,850
out with the basic Isis oasis you see I

00:01:24,000 --> 00:01:32,040
believe that's number dateformat those

00:01:29,850 --> 00:01:34,619
of you that do / 04 I'm sorry I profi

00:01:32,040 --> 00:01:39,450
these days or even Perl 6 will recognize

00:01:34,619 --> 00:01:42,060
this hopefully say just print out pretty

00:01:39,450 --> 00:01:47,189
rad foot kiss wing and here is a

00:01:42,060 --> 00:01:50,820
standard ISO twice iso 8601 sorry today

00:01:47,189 --> 00:01:53,250
format spring with a year month and day

00:01:50,820 --> 00:01:58,259
in the proper order for those listing

00:01:53,250 --> 00:02:00,540
your key from marking time zone and then

00:01:58,259 --> 00:02:04,740
the Act I'm fall by the time zone offset

00:02:00,540 --> 00:02:07,829
or Z or Zed properly speaking for those

00:02:04,740 --> 00:02:10,310
in those of you in the rest of world for

00:02:07,829 --> 00:02:10,310
Zulu

00:02:10,320 --> 00:02:16,150
again appraised by four format hopefully

00:02:13,360 --> 00:02:23,830
common you see this Apache log files you

00:02:16,150 --> 00:02:25,600
see this is a lot of applications like

00:02:23,830 --> 00:02:27,820
so and of course you may have all

00:02:25,600 --> 00:02:31,360
intercourse if you're in pro 51 / 06

00:02:27,820 --> 00:02:34,180
you'll know that this is how you perform

00:02:31,360 --> 00:02:37,300
a match the these characters have not

00:02:34,180 --> 00:02:39,520
changed this pro 5 the starting and in

00:02:37,300 --> 00:02:44,290
markers in still do things the way you

00:02:39,520 --> 00:02:48,910
used to almost the tilled killed is now

00:02:44,290 --> 00:02:52,480
how to properly execute a match and this

00:02:48,910 --> 00:02:54,420
return will return a batch object except

00:02:52,480 --> 00:02:58,900
for the syntax error buried down here

00:02:54,420 --> 00:03:01,720
the dashes and they call it because as

00:02:58,900 --> 00:03:04,930
opposed to pro 5 where you had to go

00:03:01,720 --> 00:03:06,850
through basic leave for your pride

00:03:04,930 --> 00:03:08,860
combinations of backslashes and dollar

00:03:06,850 --> 00:03:11,380
signs and escape symbols and double

00:03:08,860 --> 00:03:15,100
backslashes now all you need to know in

00:03:11,380 --> 00:03:18,519
perl 6 is that if it's a number or a

00:03:15,100 --> 00:03:22,209
letter or an or something that unicode

00:03:18,519 --> 00:03:25,000
recalls a letter then it's fine anything

00:03:22,209 --> 00:03:27,930
else like the dashes here or the plus

00:03:25,000 --> 00:03:35,140
sign or the colon those neat be escaped

00:03:27,930 --> 00:03:38,170
you can do that in two ways mm wafer go

00:03:35,140 --> 00:03:42,100
and throw into in just a moment the

00:03:38,170 --> 00:03:43,540
first thing though and I do yes or go

00:03:42,100 --> 00:03:46,330
should point out as syntax error in

00:03:43,540 --> 00:03:47,650
slide but in this case I think it's

00:03:46,330 --> 00:03:50,799
worth pointing out for those of you that

00:03:47,650 --> 00:03:56,019
have not been deeply yet into your perl

00:03:50,799 --> 00:03:57,790
6 how useful errors are now in pro 5 if

00:03:56,019 --> 00:04:02,019
you have a match failure you'll get a

00:03:57,790 --> 00:04:05,530
single line comment detailing on escape

00:04:02,019 --> 00:04:07,480
character red line this ear file one

00:04:05,530 --> 00:04:11,370
line buried somewhere in the middle log

00:04:07,480 --> 00:04:14,260
file in perl 6 now that has expanded so

00:04:11,370 --> 00:04:15,940
you get first of all a large warning

00:04:14,260 --> 00:04:18,010
markers saying something that has

00:04:15,940 --> 00:04:21,280
happened with these star trek up here

00:04:18,010 --> 00:04:21,790
and then several details as to what

00:04:21,280 --> 00:04:25,330
actually

00:04:21,790 --> 00:04:31,090
happened detailed of the file the

00:04:25,330 --> 00:04:33,460
expression and missing slashes and this

00:04:31,090 --> 00:04:35,740
right here which I just spoke about the

00:04:33,460 --> 00:04:37,090
unrecognized metacharacter so I was

00:04:35,740 --> 00:04:40,180
telling you it was selfie what happened

00:04:37,090 --> 00:04:44,680
exactly we're having a file and write

00:04:40,180 --> 00:04:47,290
down to the Africa the injectable here

00:04:44,680 --> 00:04:51,060
indicates where the parser notionally

00:04:47,290 --> 00:04:55,060
ejects it goes for the slash it finds

00:04:51,060 --> 00:04:58,600
2016 and then the dash is a meta

00:04:55,060 --> 00:05:08,020
character that it can't deal with so the

00:04:58,600 --> 00:05:12,310
parser better for clean I wouldn't make

00:05:08,020 --> 00:05:13,750
a joke about that I want the parson

00:05:12,310 --> 00:05:16,390
metaphor lee jackson at that character

00:05:13,750 --> 00:05:20,440
and says right here it's ready to work

00:05:16,390 --> 00:05:22,450
so you have exact marker rescue where

00:05:20,440 --> 00:05:24,370
the problem start and an indication

00:05:22,450 --> 00:05:28,120
that's what you need to fix must be

00:05:24,370 --> 00:05:30,640
quoted so we shall do so on the next

00:05:28,120 --> 00:05:34,120
slide in this case we shall use the

00:05:30,640 --> 00:05:35,650
backslash method to put the spring you

00:05:34,120 --> 00:05:38,440
can actually use double quotes as well

00:05:35,650 --> 00:05:42,250
and that's kind of how I prefer to do

00:05:38,440 --> 00:05:44,140
that it makes more visual marker to

00:05:42,250 --> 00:05:45,820
 find out where you are in spring

00:05:44,140 --> 00:05:50,170
yet call us how something rather than

00:05:45,820 --> 00:05:51,640
having a long string of backslashes is

00:05:50,170 --> 00:05:56,770
there I prefer to call you method myself

00:05:51,640 --> 00:05:58,870
but i'll be using a vector of things now

00:05:56,770 --> 00:06:01,720
for those of you that we're in the low

00:05:58,870 --> 00:06:04,420
tutorial world while ago and we've been

00:06:01,720 --> 00:06:06,160
hammering the message home as well you

00:06:04,420 --> 00:06:10,500
may know that everything now in perl 6

00:06:06,160 --> 00:06:14,290
is end of it and these markers down here

00:06:10,500 --> 00:06:18,790
the japanese anal brackets tell you that

00:06:14,290 --> 00:06:21,040
you're working get enough it is very

00:06:18,790 --> 00:06:24,000
handy for debugging for those of you

00:06:21,040 --> 00:06:28,240
that are use of pro 5 if you have say a

00:06:24,000 --> 00:06:31,930
ub n if you fry to debug a hash or debug

00:06:28,240 --> 00:06:35,500
a hash reference you'll see this hash

00:06:31,930 --> 00:06:38,080
parens ero X 1 2 3 5 we

00:06:35,500 --> 00:06:41,350
helps no one in your debugging statement

00:06:38,080 --> 00:06:44,680
in perl 6 you get the actual text back

00:06:41,350 --> 00:06:47,230
along with whatever detail it has on

00:06:44,680 --> 00:06:52,230
that in this case is a simple match and

00:06:47,230 --> 00:06:56,230
it returns why you meshed as opposed to

00:06:52,230 --> 00:06:59,290
contents or a hash ref or a very ref

00:06:56,230 --> 00:07:02,890
that you have to try to go back and used

00:06:59,290 --> 00:07:05,290
a a dumper or use yamo and print that

00:07:02,890 --> 00:07:07,210
out much handier when you're there all

00:07:05,290 --> 00:07:14,740
the command line doing your work trying

00:07:07,210 --> 00:07:16,500
to debug things you can also use of new

00:07:14,740 --> 00:07:20,260
lines here to break out the expression

00:07:16,500 --> 00:07:22,540
that is now default is effectively the

00:07:20,260 --> 00:07:27,100
same thing as /x saying about a

00:07:22,540 --> 00:07:32,320
recessions so you put I'm choosing to

00:07:27,100 --> 00:07:35,830
break up the date date portion time and

00:07:32,320 --> 00:07:37,870
timezone separately as you would if

00:07:35,830 --> 00:07:39,130
you're trying to parse this yourself you

00:07:37,870 --> 00:07:42,520
would probably want to know what the

00:07:39,130 --> 00:07:45,340
date is be able to not just the date d

00:07:42,520 --> 00:07:47,830
I'll print out adjust the time and will

00:07:45,340 --> 00:07:50,590
throw away the space here at the end to

00:07:47,830 --> 00:07:55,090
break that out or just check out the

00:07:50,590 --> 00:07:59,050
timezone offset and the outfit has not

00:07:55,090 --> 00:08:02,140
changed from this these examples are all

00:07:59,050 --> 00:08:04,120
by the way run on your on your local

00:08:02,140 --> 00:08:08,020
recruiter for those you want laptops and

00:08:04,120 --> 00:08:12,550
typing away furiously just like in Perl

00:08:08,020 --> 00:08:15,430
5 comments work as well with the /x

00:08:12,550 --> 00:08:19,360
modifier SS a desk now standard so you

00:08:15,430 --> 00:08:24,850
can document your date but you can go

00:08:19,360 --> 00:08:28,290
even one better you can go we ana

00:08:24,850 --> 00:08:28,290
capture text

00:08:29,780 --> 00:08:36,340
and this time we have a change what

00:08:34,400 --> 00:08:40,010
before was a simple straightforward

00:08:36,340 --> 00:08:42,289
single match object now we have the

00:08:40,010 --> 00:08:44,030
original batch chocolate and all of

00:08:42,289 --> 00:08:46,340
these sub batches displayed right there

00:08:44,030 --> 00:08:48,350
you don't have to go through and in your

00:08:46,340 --> 00:08:53,390
rec expression go through and try to

00:08:48,350 --> 00:08:55,610
print out dollar 0 / me add r1 r2 dollar

00:08:53,390 --> 00:08:58,160
305 you don't have to go through all

00:08:55,610 --> 00:09:00,920
that nonsense instead you simply print

00:08:58,160 --> 00:09:04,040
out the actual object you have all of

00:09:00,920 --> 00:09:07,280
the hill right there index 0 and by the

00:09:04,040 --> 00:09:13,490
way zeros now where we start at you

00:09:07,280 --> 00:09:16,190
speed on one and now with we observed a

00:09:13,490 --> 00:09:20,240
dollar zero or taking away i should say

00:09:16,190 --> 00:09:23,300
dollar 0 into your program name and now

00:09:20,240 --> 00:09:29,510
all in the zeroth match starts at dollar

00:09:23,300 --> 00:09:31,790
zero and index zero in the metra ray so

00:09:29,510 --> 00:09:34,339
we take all this content here and put it

00:09:31,790 --> 00:09:36,740
into our separate metric this should all

00:09:34,339 --> 00:09:39,650
be pretty familiar to you as well from /

00:09:36,740 --> 00:09:43,100
05 because this is he filming roughly of

00:09:39,650 --> 00:09:45,830
dar one equivalent of dollar to dollar

00:09:43,100 --> 00:09:49,400
three down there so this has an loss

00:09:45,830 --> 00:09:51,200
really in the profile although you would

00:09:49,400 --> 00:09:53,480
get an object back you have to do some

00:09:51,200 --> 00:09:56,350
parsing and reinterpretation to get that

00:09:53,480 --> 00:09:56,350
back as market

00:10:06,820 --> 00:10:15,620
so dollar zero as we said before this

00:10:09,860 --> 00:10:17,240
content right here is the date this I

00:10:15,620 --> 00:10:21,580
didn't originally have caused him and

00:10:17,240 --> 00:10:21,580
that was the starting date for positive

00:10:22,990 --> 00:10:30,110
moving onwards some of you may have

00:10:25,640 --> 00:10:35,180
actually used the name capture feature

00:10:30,110 --> 00:10:38,720
in 405 this is kinda same thing this is

00:10:35,180 --> 00:10:41,600
not in caramel how we do things in more

00:10:38,720 --> 00:10:44,480
modern pro 5 i'm trying to explain this

00:10:41,600 --> 00:10:47,570
as a way to migrate into more economic

00:10:44,480 --> 00:10:52,180
concepts or at least more profesh

00:10:47,570 --> 00:10:54,530
concepts but is if you still want to use

00:10:52,180 --> 00:10:58,790
stay our name captures you can do with

00:10:54,530 --> 00:11:00,620
like this in Perl 6 you have dollar and

00:10:58,790 --> 00:11:05,300
then the plenty of bracket here for the

00:11:00,620 --> 00:11:07,820
date and assign to the match so you get

00:11:05,300 --> 00:11:10,300
back this time from your match object

00:11:07,820 --> 00:11:13,910
there is a visit missing line up here

00:11:10,300 --> 00:11:17,180
deliberately you can get back a hash now

00:11:13,910 --> 00:11:20,950
of your contents so instead of before

00:11:17,180 --> 00:11:25,220
him over here we have an array of

00:11:20,950 --> 00:11:27,200
matches because they're not named 406 is

00:11:25,220 --> 00:11:29,900
smart enough to transit to know that we

00:11:27,200 --> 00:11:34,880
want named hashes so we have names such

00:11:29,900 --> 00:11:37,880
as date time and timezone but we're not

00:11:34,880 --> 00:11:42,280
quite clean enough so let's take the t

00:11:37,880 --> 00:11:42,280
marker outside there and get rid of that

00:11:42,490 --> 00:11:50,120
so now the time up here is 1325 as

00:11:46,370 --> 00:11:53,660
opposed to t 1325 clean up just a little

00:11:50,120 --> 00:11:57,680
bit timezone we'll deal with that later

00:11:53,660 --> 00:12:00,490
on when we actually specify how to oh we

00:11:57,680 --> 00:12:00,490
have a question back already

00:12:05,730 --> 00:12:12,070
okay dollar brave state here is syntax

00:12:09,610 --> 00:12:13,839
in size hole six well you get out of

00:12:12,070 --> 00:12:16,750
this on my own show you in just the next

00:12:13,839 --> 00:12:22,300
slide how to access the content down

00:12:16,750 --> 00:12:24,579
here now you may remember now you see

00:12:22,300 --> 00:12:28,329
these markers up here in here the /

00:12:24,579 --> 00:12:31,540
lines those are a mnemonic to remind you

00:12:28,329 --> 00:12:35,649
that the match object in fact starts

00:12:31,540 --> 00:12:38,410
with a slash I don't have that slide

00:12:35,649 --> 00:12:42,070
just yet but i will show you in more

00:12:38,410 --> 00:12:45,220
detail how to get to that data suffice

00:12:42,070 --> 00:12:48,430
for now to say that these / that is all

00:12:45,220 --> 00:12:51,279
in dollars / one of Hugh punctuation

00:12:48,430 --> 00:12:53,769
variables in Perl 6 those we cut down

00:12:51,279 --> 00:12:57,459
drastically especially the fun ones like

00:12:53,769 --> 00:13:00,600
oh say a dollar dollar close bracket

00:12:57,459 --> 00:13:02,940
upper bracket that will throw you in

00:13:00,600 --> 00:13:07,329
profiles Prussians if you better try to

00:13:02,940 --> 00:13:10,690
match over bracket zero through nine

00:13:07,329 --> 00:13:12,519
dollar sign close bracket because you

00:13:10,690 --> 00:13:15,250
keep forgetting that dollar sign close

00:13:12,519 --> 00:13:20,490
bracket is a variable that has all gone

00:13:15,250 --> 00:13:23,440
away now that the big thing here

00:13:20,490 --> 00:13:28,390
prepared to say this we have the dollar

00:13:23,440 --> 00:13:30,220
braised state notation here assign to

00:13:28,390 --> 00:13:33,339
the capture what we're going to do is

00:13:30,220 --> 00:13:35,079
take that and move that outside the

00:13:33,339 --> 00:13:36,850
expression because we're all good

00:13:35,079 --> 00:13:39,399
programmers and we want to refactor if

00:13:36,850 --> 00:13:41,709
we're possible and we are repeating this

00:13:39,399 --> 00:13:44,230
transport here dollar brace fool equal

00:13:41,709 --> 00:13:46,180
that dollar brace time equal that dollar

00:13:44,230 --> 00:13:49,839
buys time zone equal that we want to

00:13:46,180 --> 00:13:53,319
refactor that parent out so we want to

00:13:49,839 --> 00:13:58,510
take so we'll capture our date in a

00:13:53,319 --> 00:14:01,660
separate browse pressure out here our

00:13:58,510 --> 00:14:05,050
time and our expression and time zone in

00:14:01,660 --> 00:14:08,050
another expression and use that inside

00:14:05,050 --> 00:14:10,390
you so now we have a way to capture our

00:14:08,050 --> 00:14:13,600
our date that we put into a nice for

00:14:10,390 --> 00:14:15,880
that we want we take that and move

00:14:13,600 --> 00:14:18,339
to say a library or move it into a

00:14:15,880 --> 00:14:23,230
separate p.m. file now though that later

00:14:18,339 --> 00:14:25,779
on and we have the day the same way the

00:14:23,230 --> 00:14:28,029
time in that fashion and here the time

00:14:25,779 --> 00:14:31,029
is without the t so the time could be

00:14:28,029 --> 00:14:34,779
any to any free time is no more tie to

00:14:31,029 --> 00:14:37,690
an iso timestamp and we have the time

00:14:34,779 --> 00:14:39,819
zone down here as well and again i'll

00:14:37,690 --> 00:14:47,230
get very quickly on to how to actually

00:14:39,819 --> 00:14:50,829
use this in your in your africa going a

00:14:47,230 --> 00:15:00,130
little bit okay we have no problems no

00:14:50,829 --> 00:15:03,120
problem ah ok that is because yeah that

00:15:00,130 --> 00:15:06,550
is because these are now blocks

00:15:03,120 --> 00:15:08,440
basically everything now in perl 6 the

00:15:06,550 --> 00:15:12,250
house quote that is in curly brackets is

00:15:08,440 --> 00:15:13,449
a block this includes on for free for

00:15:12,250 --> 00:15:16,920
those of you that are trying to migrate

00:15:13,449 --> 00:15:21,880
from co5 you pull six this includes

00:15:16,920 --> 00:15:24,850
brace fair warning for keys and that

00:15:21,880 --> 00:15:26,740
tripped me up for several days trying to

00:15:24,850 --> 00:15:29,019
go through and remember oh yes i'm in

00:15:26,740 --> 00:15:30,790
provo six now that doesn't work i need

00:15:29,019 --> 00:15:33,759
to use the angle bracket syntax down

00:15:30,790 --> 00:15:36,420
here that tripping up for a few days but

00:15:33,759 --> 00:15:36,420
I got useful

00:15:55,140 --> 00:16:00,490
yeah yeah the mark home here it is same

00:15:58,840 --> 00:16:05,020
way you would have a in the same way you

00:16:00,490 --> 00:16:08,440
would have class date or grammar date by

00:16:05,020 --> 00:16:15,430
getting hit myself my son no worries

00:16:08,440 --> 00:16:19,510
don't worry it's so it's all good so in

00:16:15,430 --> 00:16:22,360
so are we now so now what we use the

00:16:19,510 --> 00:16:25,510
captions down here in a comment we move

00:16:22,360 --> 00:16:29,230
this out into a separate date and move

00:16:25,510 --> 00:16:34,000
this up into our own time red X so we

00:16:29,230 --> 00:16:35,620
can use that and move around so let's

00:16:34,000 --> 00:16:42,160
take a few minutes you will clean that

00:16:35,620 --> 00:16:45,090
up get rid of comments and now the big

00:16:42,160 --> 00:16:48,520
thing here of course is trying to match

00:16:45,090 --> 00:16:52,300
just a string it like this with a static

00:16:48,520 --> 00:16:54,040
our code number for a year and month and

00:16:52,300 --> 00:16:57,850
day isn't going to help that much

00:16:54,040 --> 00:17:00,280
because in the real world well days

00:16:57,850 --> 00:17:02,980
change times change so we want to be

00:17:00,280 --> 00:17:05,020
able to match so we want so when we go

00:17:02,980 --> 00:17:08,860
from getting right in February we want

00:17:05,020 --> 00:17:12,040
to be able to change from a 12 02 and if

00:17:08,860 --> 00:17:14,199
we say boo from the u.s. to Romania we

00:17:12,040 --> 00:17:17,770
want to change the time zone from my

00:17:14,199 --> 00:17:20,890
from minus 2 to put all the way around

00:17:17,770 --> 00:17:27,160
my 72 plus 2 there should be a really

00:17:20,890 --> 00:17:29,140
fun flight on the way back so we use the

00:17:27,160 --> 00:17:32,580
the same notation that you're used to

00:17:29,140 --> 00:17:35,590
being pro 5 with the backslash key + i

00:17:32,580 --> 00:17:37,930
will i will qualify that this is not

00:17:35,590 --> 00:17:42,700
going to quite match the same the same

00:17:37,930 --> 00:17:45,300
rate expression as this is a four digit

00:17:42,700 --> 00:17:48,300
number this is a two digit number and

00:17:45,300 --> 00:17:48,300
yes

00:17:51,920 --> 00:18:01,110
okay actually so on turn on power strip

00:17:56,420 --> 00:18:02,790
yep this will match say for a four or

00:18:01,110 --> 00:18:04,620
five digit year so for those of you at

00:18:02,790 --> 00:18:08,340
the loan now foundation you'll be glad

00:18:04,620 --> 00:18:13,650
to know that you use 0 2 0 0 0 for the

00:18:08,340 --> 00:18:15,630
year here yeah but in this case if you

00:18:13,650 --> 00:18:18,150
liberal are for slide in order to put

00:18:15,630 --> 00:18:21,900
all of the day qualifiers in there you

00:18:18,150 --> 00:18:26,190
would use dollar new us back / d star

00:18:21,900 --> 00:18:29,250
star 5 or as dorm stars are four stars

00:18:26,190 --> 00:18:31,110
are two with several for matching the

00:18:29,250 --> 00:18:32,160
exact number of days but that was

00:18:31,110 --> 00:18:34,200
especially as out just a little bit on

00:18:32,160 --> 00:18:42,690
the slide so for the moment I'm going to

00:18:34,200 --> 00:18:45,960
leave that aside so moving onwards you

00:18:42,690 --> 00:18:49,530
may remember from from profile how to do

00:18:45,960 --> 00:18:53,910
alternate alternatives expressions so we

00:18:49,530 --> 00:18:56,430
have the plus time zone and/or Zulu so

00:18:53,910 --> 00:19:00,270
now we can match either a three-night

00:18:56,430 --> 00:19:01,470
either plus a plus offset or zealand you

00:19:00,270 --> 00:19:06,600
can imagine how you would match a

00:19:01,470 --> 00:19:12,350
negative offset up here say + / d plus

00:19:06,600 --> 00:19:12,350
colon shashi plus or yep yeah

00:19:15,260 --> 00:19:21,180
technically yes i am not sure if Sarah

00:19:18,060 --> 00:19:25,580
were here he would you qualify I think

00:19:21,180 --> 00:19:31,080
that silly wood is actually you tease

00:19:25,580 --> 00:19:34,740
you t to yes there are different various

00:19:31,080 --> 00:19:41,990
time zones but but Zulu is a greenwich

00:19:34,740 --> 00:19:41,990
mean time effectively feel free

00:19:42,980 --> 00:19:53,510
yeah yeah exactly yeah yeah and souls

00:19:50,919 --> 00:19:57,620
and the rumors can't confuse mitarsam

00:19:53,510 --> 00:19:59,240
home okay so when we are there and this

00:19:57,620 --> 00:20:02,720
is what you're after beforehand in the

00:19:59,240 --> 00:20:04,940
back the Dalton again this is demonic

00:20:02,720 --> 00:20:09,020
because you're performing a match the

00:20:04,940 --> 00:20:11,450
dollar theater turns into a dollar / so

00:20:09,020 --> 00:20:14,299
you perform the match here and you can

00:20:11,450 --> 00:20:23,590
look up to contest of your date as the

00:20:14,299 --> 00:20:23,590
dollar / price date so pardon yep

00:20:34,299 --> 00:20:45,559
something too much okay alright so now

00:20:42,860 --> 00:20:47,570
we have our expression here let's take

00:20:45,559 --> 00:20:49,970
this out and refactor that into another

00:20:47,570 --> 00:20:52,790
great expression because we can compose

00:20:49,970 --> 00:20:56,210
expressions install expressions this is

00:20:52,790 --> 00:20:59,179
also just a block of code so we put the

00:20:56,210 --> 00:21:02,600
hour break estate inside here and this

00:20:59,179 --> 00:21:04,160
date refers to that date so now we

00:21:02,600 --> 00:21:06,410
create a little bit more complex today

00:21:04,160 --> 00:21:11,000
in structure but you'll notice that this

00:21:06,410 --> 00:21:12,830
is all nested you get this for free if

00:21:11,000 --> 00:21:15,080
you are dealing with profile you would

00:21:12,830 --> 00:21:16,460
have to go through and count your you're

00:21:15,080 --> 00:21:22,040
counting your out bring your closing

00:21:16,460 --> 00:21:27,100
brackets that's only company when we're

00:21:22,040 --> 00:21:27,100
not power or maybe though

00:21:27,230 --> 00:21:34,309
yeah anywho you have the main smurfing

00:21:31,520 --> 00:21:36,770
here now here was a fault is always this

00:21:34,309 --> 00:21:39,080
a one time stamp that it matched all

00:21:36,770 --> 00:21:41,210
attacks that match their ready available

00:21:39,080 --> 00:21:44,570
for you for debugging William can't

00:21:41,210 --> 00:21:46,250
figure out why a offsets wrong hotels he

00:21:44,570 --> 00:21:49,510
was that Lee what's going on West

00:21:46,250 --> 00:21:52,520
matching and inside the ISO timestamp

00:21:49,510 --> 00:21:54,919
inside that key you have down here

00:21:52,520 --> 00:21:57,169
another date key on their time key and

00:21:54,919 --> 00:22:26,630
time some key all nested within the day

00:21:57,169 --> 00:22:28,070
structure correct okay all right the

00:22:26,630 --> 00:22:31,730
pressure for those of you that can't

00:22:28,070 --> 00:22:33,020
hear was how were you referred and if I

00:22:31,730 --> 00:22:34,640
immature prefrontal II how will you

00:22:33,020 --> 00:22:37,030
refer to the industrious brushes this

00:22:34,640 --> 00:22:37,030
side here

00:22:45,780 --> 00:22:48,780
what

00:22:55,860 --> 00:23:02,170
the question is if you were to interpret

00:22:59,440 --> 00:23:06,540
if you're to add and we do this by way

00:23:02,170 --> 00:23:10,420
later on thank you for thanks in advance

00:23:06,540 --> 00:23:14,200
how if we were to say create an OU SE

00:23:10,420 --> 00:23:18,040
and int type to unsigned it if you will

00:23:14,200 --> 00:23:21,280
to interpret the / g + here and populate

00:23:18,040 --> 00:23:22,540
that as reg ex how would that work you

00:23:21,280 --> 00:23:26,020
would certainly be able to insert the

00:23:22,540 --> 00:23:30,180
int marker here the int there and that

00:23:26,020 --> 00:23:34,300
but I'll come out as an array an array

00:23:30,180 --> 00:23:35,650
inside the inside the int type but there

00:23:34,300 --> 00:23:37,420
was a way to work around that if you

00:23:35,650 --> 00:23:39,100
need to if you need to disambiguate

00:23:37,420 --> 00:23:47,920
things and will actually get into that

00:23:39,100 --> 00:23:51,040
here for shortly all right and again

00:23:47,920 --> 00:23:53,860
this is a full object just to keep my

00:23:51,040 --> 00:23:57,190
where we are the original odd original

00:23:53,860 --> 00:23:59,260
match the iso format here and inside

00:23:57,190 --> 00:24:03,340
there is date so you'll be able to

00:23:59,260 --> 00:24:08,550
represent by let's go back here for

00:24:03,340 --> 00:24:15,850
example insert the ice Oasis 01 and

00:24:08,550 --> 00:24:17,430
reference a hash key in that fashion ok

00:24:15,850 --> 00:24:21,490
now we're gonna kick it up a little bit

00:24:17,430 --> 00:24:24,790
little bit faster so I did just to

00:24:21,490 --> 00:24:27,850
clarify and cement in mind where these

00:24:24,790 --> 00:24:30,220
are obviously instructions and obviously

00:24:27,850 --> 00:24:32,140
arteries are meant to mash text this was

00:24:30,220 --> 00:24:35,910
originally a beginner talk for fast em

00:24:32,140 --> 00:24:38,890
for a wider version a wider condition

00:24:35,910 --> 00:24:41,860
the doll detail tilled here over here is

00:24:38,890 --> 00:24:44,830
how you do the matching capturing is

00:24:41,860 --> 00:24:47,110
still worth the same way with Perrin

00:24:44,830 --> 00:24:50,410
through plus turn you can name your

00:24:47,110 --> 00:24:53,530
captions or do the right or do at least

00:24:50,410 --> 00:24:55,600
one is here the right thing and refactor

00:24:53,530 --> 00:24:57,760
using my reg ex and separate out your

00:24:55,600 --> 00:25:01,300
reg axes say you're dealing with the

00:24:57,760 --> 00:25:05,370
infamous email reg ex which it covers in

00:25:01,300 --> 00:25:08,610
three hours 30 some pages and

00:25:05,370 --> 00:25:11,400
is Laura funeral even with the England

00:25:08,610 --> 00:25:13,860
with / acts this way and take that in a

00:25:11,400 --> 00:25:15,920
refactor each the right axis out into

00:25:13,860 --> 00:25:18,690
the room bits and reuse those bits

00:25:15,920 --> 00:25:22,710
inside stripe inside a straight pearls

00:25:18,690 --> 00:25:24,590
expression we'll talk about tokus here

00:25:22,710 --> 00:25:27,809
in a few moments when we switch from

00:25:24,590 --> 00:25:30,050
dealing with a basic math expression

00:25:27,809 --> 00:25:32,880
like you would use for say a log file

00:25:30,050 --> 00:25:37,110
but you weren't more complex expression

00:25:32,880 --> 00:25:40,890
like let's just be ambitious let's

00:25:37,110 --> 00:25:42,780
tackle JavaScript as the language most

00:25:40,890 --> 00:25:47,220
of you should actually most you should

00:25:42,780 --> 00:25:49,170
already know now this is a little bit a

00:25:47,220 --> 00:25:51,270
little bit different than how well off

00:25:49,170 --> 00:25:54,200
you'll approach this when we assume here

00:25:51,270 --> 00:25:56,820
that there is no grammar extant for

00:25:54,200 --> 00:26:00,290
JavaScript so that you don't have a way

00:25:56,820 --> 00:26:04,080
easily to go through and create your own

00:26:00,290 --> 00:26:07,260
B&F gray over for javascript well soon

00:26:04,080 --> 00:26:09,030
we're doing this from a blank slate so

00:26:07,260 --> 00:26:11,970
first thing we want to do is take an

00:26:09,030 --> 00:26:16,890
expression like say console dot log some

00:26:11,970 --> 00:26:18,960
is in the plus 32 and try to form a way

00:26:16,890 --> 00:26:22,230
to match that and parse out the

00:26:18,960 --> 00:26:25,260
important bits right here the sum the 32

00:26:22,230 --> 00:26:29,850
and the console dot log to be able to

00:26:25,260 --> 00:26:32,990
say we interpret that in Perl so we'll

00:26:29,850 --> 00:26:36,929
start off with the basis Russian say

00:26:32,990 --> 00:26:39,809
this and then matches our JavaScript

00:26:36,929 --> 00:26:43,080
token number here the name token is

00:26:39,809 --> 00:26:46,440
slightly different than vegas 10 reg ex

00:26:43,080 --> 00:26:48,110
is the same thing essentially the white

00:26:46,440 --> 00:26:50,940
space formulas there for a little bit

00:26:48,110 --> 00:26:54,179
bugging for things to know that is it's

00:26:50,940 --> 00:26:57,809
a reg ex that's right here matching a

00:26:54,179 --> 00:26:59,580
single constant string and what we want

00:26:57,809 --> 00:27:02,790
to do there is go through the spring and

00:26:59,580 --> 00:27:05,730
break down the contents like we're doing

00:27:02,790 --> 00:27:08,850
a few mins ago this time that will do

00:27:05,730 --> 00:27:11,070
this with grammars and end up with a way

00:27:08,850 --> 00:27:13,440
to compile essentially if you do a

00:27:11,070 --> 00:27:16,520
little bit more work all of JavaScript

00:27:13,440 --> 00:27:16,520
in the same way

00:27:17,130 --> 00:27:21,520
so we have so we start out with our

00:27:19,540 --> 00:27:26,520
expression here and we want to be able

00:27:21,520 --> 00:27:28,660
to obviously deal with the sum plus 32

00:27:26,520 --> 00:27:31,330
separably that way we know what the

00:27:28,660 --> 00:27:36,960
content is am beyond mad any spring we

00:27:31,330 --> 00:27:40,170
want so we'll take our Jes and drop in

00:27:36,960 --> 00:27:46,410
the token the string here if you've seen

00:27:40,170 --> 00:27:49,630
previously and create kromestar request

00:27:46,410 --> 00:27:53,860
quotes again you've seen this in Perl 5

00:27:49,630 --> 00:27:56,650
i'm sure they use the the non greedy

00:27:53,860 --> 00:27:58,390
quotes right there ma fire that still

00:27:56,650 --> 00:28:02,560
works it's a little bit different

00:27:58,390 --> 00:28:05,110
syntactic semantically now in Perl 6 but

00:28:02,560 --> 00:28:09,100
not that much different so we have our

00:28:05,110 --> 00:28:11,280
now our reyes matter Catherine console

00:28:09,100 --> 00:28:16,260
dot log and then any streaming month

00:28:11,280 --> 00:28:19,570
followed by the expression plus 32 close

00:28:16,260 --> 00:28:22,450
close parent and now here we have our

00:28:19,570 --> 00:28:25,300
full JS expression and inside that we

00:28:22,450 --> 00:28:28,600
have our string so we have a way now to

00:28:25,300 --> 00:28:31,300
break this down and break the spring

00:28:28,600 --> 00:28:32,290
down bit by bit and if we have problem

00:28:31,300 --> 00:28:34,570
you know let's go back to the previous

00:28:32,290 --> 00:28:39,580
version find out why that mastered it

00:28:34,570 --> 00:28:41,890
worked go forward do it get reset and go

00:28:39,580 --> 00:28:44,260
and go ahead so we have this way

00:28:41,890 --> 00:28:46,180
essentially a way to dusk room let's

00:28:44,260 --> 00:28:48,430
bring monotonically and parse out each

00:28:46,180 --> 00:28:54,130
bit to be one and put it in the right

00:28:48,430 --> 00:28:58,420
places like so yeah a little more detail

00:28:54,130 --> 00:29:02,380
down here and at the inn for 32 now we

00:28:58,420 --> 00:29:04,810
use the backslash d plus which I get

00:29:02,380 --> 00:29:06,160
you're all familiar with and this also

00:29:04,810 --> 00:29:10,030
speaks of what we time out in the back

00:29:06,160 --> 00:29:13,110
there now to handle int so now we have

00:29:10,030 --> 00:29:19,090
the string now we have console dot log

00:29:13,110 --> 00:29:21,340
string plus it which for those of you

00:29:19,090 --> 00:29:25,540
that are are more familiar with say

00:29:21,340 --> 00:29:27,049
compilers or round parsing you'll start

00:29:25,540 --> 00:29:30,649
to recognize this a little bit more

00:29:27,049 --> 00:29:33,470
because you have the JavaScript matter

00:29:30,649 --> 00:29:35,179
here in this I hear you have a separate

00:29:33,470 --> 00:29:38,059
matter they pull out for your strings a

00:29:35,179 --> 00:29:40,759
separate matter for you it's that you

00:29:38,059 --> 00:29:45,679
can repeat anywhere in your grammar oops

00:29:40,759 --> 00:29:48,710
God will hand myself there and down here

00:29:45,679 --> 00:29:51,980
of course we have Jas and inside there

00:29:48,710 --> 00:29:56,929
is our string with the quotes here which

00:29:51,980 --> 00:30:00,230
we don't really need and obviously down

00:29:56,929 --> 00:30:01,639
here at the end and again javascript

00:30:00,230 --> 00:30:08,119
selling us with these are objects as

00:30:01,639 --> 00:30:10,070
everything is pearl is now so one thing

00:30:08,119 --> 00:30:13,639
before we can go and tackle the entire

00:30:10,070 --> 00:30:19,580
statement here is to get rid of the

00:30:13,639 --> 00:30:21,470
quotes so we will do them you name it

00:30:19,580 --> 00:30:22,820
one second and this also speaks to what

00:30:21,470 --> 00:30:27,019
we are talking about beforehand how to

00:30:22,820 --> 00:30:29,539
get NESN matches up we have our KS down

00:30:27,019 --> 00:30:33,649
here and inside that we have the spring

00:30:29,539 --> 00:30:39,679
match over here so we have the j s and

00:30:33,649 --> 00:30:42,259
inside that you have the string and what

00:30:39,679 --> 00:30:44,809
we have here you'll nose with a little

00:30:42,259 --> 00:30:46,999
bug right here and here you'll notice

00:30:44,809 --> 00:30:52,129
that we have essentially rewritten our

00:30:46,999 --> 00:30:55,309
JavaScript in Perl because say gesturing

00:30:52,129 --> 00:30:59,509
tilt tray us int and they tilt here by

00:30:55,309 --> 00:31:03,369
the way yes concatenation the dot now is

00:30:59,509 --> 00:31:05,389
being reused for the things we have

00:31:03,369 --> 00:31:08,720
essentially recreate the original

00:31:05,389 --> 00:31:10,850
JavaScript statement in Chrome so if you

00:31:08,720 --> 00:31:13,220
want to start on say your own JavaScript

00:31:10,850 --> 00:31:16,009
interpreter in Perl this will not be a

00:31:13,220 --> 00:31:17,389
bad based are from because you know

00:31:16,009 --> 00:31:20,419
course cheese you know different ways to

00:31:17,389 --> 00:31:23,440
match console.log Perrin close parents

00:31:20,419 --> 00:31:27,889
bedroom excuse of ways to match your

00:31:23,440 --> 00:31:30,440
strength plus end or n plus in or spring

00:31:27,889 --> 00:31:32,799
clustering or string minus string or

00:31:30,440 --> 00:31:37,509
whatever the javascript allows you do

00:31:32,799 --> 00:31:37,509
you find ways to build up on that

00:31:37,800 --> 00:31:43,930
so we'll get we'll get rid of the probe

00:31:40,660 --> 00:31:46,420
here and again this may not be the most

00:31:43,930 --> 00:31:48,370
elegant way to do things but if you're

00:31:46,420 --> 00:31:53,710
going step by step I find it's better to

00:31:48,370 --> 00:31:55,630
go to take one spring and just maath I

00:31:53,710 --> 00:31:59,110
once brush that time to keep these in

00:31:55,630 --> 00:32:01,930
mind keep them fresh so we're just

00:31:59,110 --> 00:32:03,970
modifying one bit down here we're going

00:32:01,930 --> 00:32:08,260
to care for just the interior house

00:32:03,970 --> 00:32:11,920
inside the quotes with our old friend we

00:32:08,260 --> 00:32:21,460
all remember these from 405 I think we

00:32:11,920 --> 00:32:27,370
have okay come show you one or okay okay

00:32:21,460 --> 00:32:28,750
I think that yep okay the only important

00:32:27,370 --> 00:32:34,110
role for us to know right now is that

00:32:28,750 --> 00:32:36,580
the rule is more lenient on white space

00:32:34,110 --> 00:32:38,500
specifically that you specifically if I

00:32:36,580 --> 00:32:41,320
took the string and remove that white

00:32:38,500 --> 00:32:46,950
space there and that why space there it

00:32:41,320 --> 00:32:50,940
was still match whereas if I took the

00:32:46,950 --> 00:32:55,210
whereas if I removed whereas if i add if

00:32:50,940 --> 00:33:00,370
white space to the string up here this

00:32:55,210 --> 00:33:02,380
would if i have y space in this match it

00:33:00,370 --> 00:33:11,380
would appear in the spring content here

00:33:02,380 --> 00:33:15,520
that's why space on the aside the rule

00:33:11,380 --> 00:33:17,980
is actually yeah yeah between to

00:33:15,520 --> 00:33:24,970
identify our characters if i remember

00:33:17,980 --> 00:33:26,860
rightly right right and again we're

00:33:24,970 --> 00:33:29,350
going to go a little deeper side here in

00:33:26,860 --> 00:33:32,800
cap and look at that match so this is

00:33:29,350 --> 00:33:35,620
how you would go from say a name capture

00:33:32,800 --> 00:33:39,240
to a numbered capture the string here

00:33:35,620 --> 00:33:42,850
was a name and the number down here is

00:33:39,240 --> 00:33:45,300
number 0 so that's how you do nessa

00:33:42,850 --> 00:33:45,300
captures

00:33:45,470 --> 00:33:49,890
there are there are other ways to handle

00:33:47,670 --> 00:33:52,590
this and I will get into that at the

00:33:49,890 --> 00:33:54,330
verb at the very end and I sure really

00:33:52,590 --> 00:33:59,670
either have a lot of pressures or while

00:33:54,330 --> 00:34:02,550
see dumb has popping when we get into

00:33:59,670 --> 00:34:06,680
that very shortly we'll all make one

00:34:02,550 --> 00:34:09,899
slight change here and use the new

00:34:06,680 --> 00:34:13,350
character class notation here basically

00:34:09,899 --> 00:34:16,080
it says anything that is not a quotes

00:34:13,350 --> 00:34:17,580
between the parents if you're familiar

00:34:16,080 --> 00:34:21,030
with regular expressions your products

00:34:17,580 --> 00:34:22,590
ability with the proper this is not

00:34:21,030 --> 00:34:25,580
quite the proper way hey let's just not

00:34:22,590 --> 00:34:29,010
handle this does not handle in any way

00:34:25,580 --> 00:34:32,659
escape expressions or expression or

00:34:29,010 --> 00:34:35,750
sorry escape strings with the quotes foo

00:34:32,659 --> 00:34:37,980
backslash proposed foo this my health at

00:34:35,750 --> 00:34:44,550
that gets more advanced and beyond

00:34:37,980 --> 00:34:47,700
subject of the talk but this is now how

00:34:44,550 --> 00:34:50,520
you do the character class so we have

00:34:47,700 --> 00:34:52,770
the character class here again open

00:34:50,520 --> 00:34:55,889
bracket close bracket open bracket close

00:34:52,770 --> 00:34:58,290
bracket it's just that the inside here

00:34:55,889 --> 00:35:03,050
is the old square bracket that were used

00:34:58,290 --> 00:35:05,820
to so you take your role expression and

00:35:03,050 --> 00:35:08,790
you have a negation like a care thats

00:35:05,820 --> 00:35:12,750
dark move that outside changing with

00:35:08,790 --> 00:35:16,400
dash and just leave the rest of alicante

00:35:12,750 --> 00:35:16,400
the side question

00:35:18,690 --> 00:35:25,720
alright cover that and what we do the

00:35:21,760 --> 00:35:28,900
file say statement and roughly say four

00:35:25,720 --> 00:35:31,900
lines of code we have a major JavaScript

00:35:28,900 --> 00:35:38,260
interpreter it takes a console valve our

00:35:31,900 --> 00:35:40,750
statement and Terms it from a cursor

00:35:38,260 --> 00:35:48,340
from JavaScript into pearl console dot

00:35:40,750 --> 00:35:55,840
log is roughly yes these Springs there

00:35:48,340 --> 00:36:00,340
or oh yes yes it should be yes it should

00:35:55,840 --> 00:36:03,910
be star yeah only one buck so far that's

00:36:00,340 --> 00:36:08,620
good I there's a false statement ran

00:36:03,910 --> 00:36:10,570
into a few issues okay well qui qui

00:36:08,620 --> 00:36:13,210
correct Oh what mom was pointing out is

00:36:10,570 --> 00:36:17,500
that the screen here cannot be empty

00:36:13,210 --> 00:36:21,040
because of the plus sign here and quite

00:36:17,500 --> 00:36:24,370
correct but again in one two three four

00:36:21,040 --> 00:36:28,360
five lines you have a JavaScript

00:36:24,370 --> 00:36:32,980
interpreter internal I'm Millie very

00:36:28,360 --> 00:36:35,560
limited but this is a basis for you take

00:36:32,980 --> 00:36:38,560
this and create and put in different

00:36:35,560 --> 00:36:40,990
rules change your names Kate expressions

00:36:38,560 --> 00:36:43,870
put those in add those alternatives and

00:36:40,990 --> 00:36:46,960
as you go through your as we go through

00:36:43,870 --> 00:36:50,080
your Java code learn what those are add

00:36:46,960 --> 00:36:56,040
those substitute those in and work with

00:36:50,080 --> 00:36:58,500
that now

00:36:56,040 --> 00:37:01,680
but we're here we had all these tokens

00:36:58,500 --> 00:37:02,970
here is tokens and rules going on there

00:37:01,680 --> 00:37:04,350
be nice for it be nice if we could

00:37:02,970 --> 00:37:09,180
actually wrap those up into a neat

00:37:04,350 --> 00:37:12,300
little package like a class but you know

00:37:09,180 --> 00:37:14,070
calkins and rules those really hard you

00:37:12,300 --> 00:37:17,490
know that's really aren't why you think

00:37:14,070 --> 00:37:19,320
of as a method or a subroutine so

00:37:17,490 --> 00:37:22,560
they've really don't belong in a class

00:37:19,320 --> 00:37:26,640
per se in Perl 6 they belong in a

00:37:22,560 --> 00:37:29,250
grammar for those of you that SAT

00:37:26,640 --> 00:37:31,710
through those of you that were here for

00:37:29,250 --> 00:37:34,350
rum the free solo tutorial you'll

00:37:31,710 --> 00:37:37,980
recognize is the roughest imitation

00:37:34,350 --> 00:37:45,300
grammar and then name open brace close

00:37:37,980 --> 00:37:48,450
race compared to say class jes open

00:37:45,300 --> 00:37:50,460
brace brace is is the same thing but

00:37:48,450 --> 00:37:54,420
grandma provides a little bit a little

00:37:50,460 --> 00:37:57,030
bit different dumb syntax and a little

00:37:54,420 --> 00:37:59,490
bit different sugar so that the togas

00:37:57,030 --> 00:38:04,020
here work in place of a method or a

00:37:59,490 --> 00:38:05,790
place of a subroutine so those rolling

00:38:04,020 --> 00:38:09,780
so those are all now you'll be packaged

00:38:05,790 --> 00:38:12,260
so this is now a class file that you

00:38:09,780 --> 00:38:16,190
move around you create your own GSD&M

00:38:12,260 --> 00:38:18,300
put it up on to module 6 org and

00:38:16,190 --> 00:38:22,350
everyone else would be able to use your

00:38:18,300 --> 00:38:26,190
grammar as it is as a tiny JavaScript

00:38:22,350 --> 00:38:29,910
parser so this entire file here is now

00:38:26,190 --> 00:38:33,420
one this in our file here guitars brace

00:38:29,910 --> 00:38:38,460
from race to race is one file there is

00:38:33,420 --> 00:38:40,770
one change here and that is because we

00:38:38,460 --> 00:38:44,220
start out here with j yet we start out

00:38:40,770 --> 00:38:48,410
here with the rule Jas and matching on

00:38:44,220 --> 00:38:52,140
today s grammars have an easy way to

00:38:48,410 --> 00:38:53,910
tell you where to start parsing and like

00:38:52,140 --> 00:38:57,360
mostly it's a pearl if you are be

00:38:53,910 --> 00:38:58,560
shouted at this is this n this is it an

00:38:57,360 --> 00:39:01,260
important thing for pearl to know about

00:38:58,560 --> 00:39:03,570
and in this case it's important for

00:39:01,260 --> 00:39:05,910
pearls know where the top of the gray

00:39:03,570 --> 00:39:08,630
bar is the first declaration the first

00:39:05,910 --> 00:39:08,630
thing that we have parsed

00:39:08,660 --> 00:39:18,000
right if we're coming up that actually

00:39:13,820 --> 00:39:21,540
yeah yeah so we have so we replaced Jes

00:39:18,000 --> 00:39:25,670
now with top so whenever you use as

00:39:21,540 --> 00:39:28,770
grammar here to parcel anything like so

00:39:25,670 --> 00:39:32,190
it will use this rule here as a start

00:39:28,770 --> 00:39:34,560
and because now we are in a more package

00:39:32,190 --> 00:39:38,400
state in a more controlled environment

00:39:34,560 --> 00:39:43,500
here just like it's like grammar and

00:39:38,400 --> 00:39:45,720
like class and like roll you can do the

00:39:43,500 --> 00:39:53,730
same thing you can with the class you

00:39:45,720 --> 00:39:55,860
can call new on the class right yes yeah

00:39:53,730 --> 00:39:59,070
that layers point out that the new here

00:39:55,860 --> 00:40:02,370
is redundant so you actually say Jes new

00:39:59,070 --> 00:40:06,030
cars or red or horror use jst are

00:40:02,370 --> 00:40:10,010
strictly that's number one of these and

00:40:06,030 --> 00:40:13,770
tactical sugar that gets reply for you

00:40:10,010 --> 00:40:16,410
so from where we are right here we have

00:40:13,770 --> 00:40:19,820
this we have this expression and we're

00:40:16,410 --> 00:40:22,800
parsing our texts and saying the output

00:40:19,820 --> 00:40:26,340
but it would be nice if we had a little

00:40:22,800 --> 00:40:28,260
bit more information there or at least

00:40:26,340 --> 00:40:29,730
be able to packers up a little bit more

00:40:28,260 --> 00:40:33,330
neatly because right here we have a

00:40:29,730 --> 00:40:34,830
grammar that does the stuff and we're

00:40:33,330 --> 00:40:37,230
doing parsing and we have this same

00:40:34,830 --> 00:40:39,900
thing down here that takes the content

00:40:37,230 --> 00:40:41,940
from the grammar and by the way this pie

00:40:39,900 --> 00:40:44,780
place really into dollar / in case

00:40:41,940 --> 00:40:49,740
you're wondering where the sake went

00:40:44,780 --> 00:40:51,060
where you say / wind the jrs puts

00:40:49,740 --> 00:40:53,850
everything into an offensive match

00:40:51,060 --> 00:40:56,180
rocket for you again mainly as much

00:40:53,850 --> 00:40:56,180
easier

00:40:57,400 --> 00:41:09,740
and land to 245 all right so from there

00:41:07,090 --> 00:41:12,230
beforehand we had this little bit down

00:41:09,740 --> 00:41:15,710
here that was saying you know saying the

00:41:12,230 --> 00:41:17,600
string it'd be nice you know it'd be

00:41:15,710 --> 00:41:21,890
nice if we can move that as well into a

00:41:17,600 --> 00:41:24,530
class because what we have down here the

00:41:21,890 --> 00:41:27,500
string and int that ties directly into

00:41:24,530 --> 00:41:29,840
the class content the grammar content

00:41:27,500 --> 00:41:32,480
here so you'll be nice we had a

00:41:29,840 --> 00:41:35,180
one-to-one relationship between say the

00:41:32,480 --> 00:41:39,350
top will hear and what we're doing with

00:41:35,180 --> 00:41:45,500
the car down here well thankfully we

00:41:39,350 --> 00:41:47,270
have just that here is a new class which

00:41:45,500 --> 00:41:51,380
assists of all of the things that the

00:41:47,270 --> 00:41:55,760
grammar can do so whenever you match a

00:41:51,380 --> 00:41:59,360
rule down here the rule top / 06 on

00:41:55,760 --> 00:42:01,340
metal your brothers are metaphors and we

00:41:59,360 --> 00:42:04,610
tell us to do that by adding this little

00:42:01,340 --> 00:42:08,300
bit down here and I taken some liberties

00:42:04,610 --> 00:42:11,600
with using the noon notation here for a

00:42:08,300 --> 00:42:13,970
pair colon actions this could easily be

00:42:11,600 --> 00:42:17,720
done as well with what you're more

00:42:13,970 --> 00:42:20,300
familiar with them actions fatima jinnah

00:42:17,720 --> 00:42:22,580
actions knew that work out just as well

00:42:20,300 --> 00:42:26,210
I chose it for a little bit more of them

00:42:22,580 --> 00:42:30,620
more Colonel six interesting tax in

00:42:26,210 --> 00:42:34,580
example but we now have a crammer file

00:42:30,620 --> 00:42:36,710
here ajs grammar and a extra file jes

00:42:34,580 --> 00:42:38,900
actions that you can take and package

00:42:36,710 --> 00:42:42,100
that up and again put that up on to bet

00:42:38,900 --> 00:42:46,180
on two launches on parole six org and

00:42:42,100 --> 00:42:49,850
anyone now that was to be able to parse

00:42:46,180 --> 00:42:53,090
the JavaScript swing and do something

00:42:49,850 --> 00:42:56,720
with it and use this without having to

00:42:53,090 --> 00:42:59,990
do any separate work we packed up all of

00:42:56,720 --> 00:43:02,780
our activity up here handling the top

00:42:59,990 --> 00:43:07,310
room so when you go through console dot

00:43:02,780 --> 00:43:09,710
log some is da and the rule top finally

00:43:07,310 --> 00:43:12,040
completes it will call the action right

00:43:09,710 --> 00:43:12,040
down here

00:43:12,220 --> 00:43:19,369
so from this down here the fjs and this

00:43:16,849 --> 00:43:22,730
action not here for this output now we

00:43:19,369 --> 00:43:26,450
even get rid of some more lines and we

00:43:22,730 --> 00:43:30,049
have one step you have one step jst in

00:43:26,450 --> 00:43:35,089
northern New jst arse and then run the

00:43:30,049 --> 00:43:41,079
actions and get more spots back which

00:43:35,089 --> 00:43:44,839
again is a one is now a 1 2 3 4 5 6 7 8

00:43:41,079 --> 00:43:49,150
8 line JavaScript interpreter a milli

00:43:44,839 --> 00:43:52,759
very small my forte yes if you will

00:43:49,150 --> 00:43:57,049
actually men are these days especially

00:43:52,759 --> 00:44:01,309
with react ijs so you have now a gate

00:43:57,049 --> 00:44:02,539
line interpreter for jobs root of course

00:44:01,309 --> 00:44:04,749
you'll do a little bit more work to fill

00:44:02,539 --> 00:44:09,890
this out I leave that to the student as

00:44:04,749 --> 00:44:12,859
I say but we can go a little further

00:44:09,890 --> 00:44:15,650
here as well because you have this say

00:44:12,859 --> 00:44:18,680
here it's not really useful for and for

00:44:15,650 --> 00:44:21,289
a class you guys say stuff we want to be

00:44:18,680 --> 00:44:23,720
able to return stuff like we won't be

00:44:21,289 --> 00:44:27,799
able to find out what this console dot

00:44:23,720 --> 00:44:29,029
log entry isn't here well be I'll find

00:44:27,799 --> 00:44:31,670
out a little more val was going on

00:44:29,029 --> 00:44:34,849
inside that and i think that i ran

00:44:31,670 --> 00:44:38,390
through the wrong set of slides here yes

00:44:34,849 --> 00:44:40,869
I did I have what I need to change here

00:44:38,390 --> 00:44:40,869
one moment

00:44:50,580 --> 00:44:52,640
ah

00:44:59,690 --> 00:45:03,220
I knew they were me up

00:45:07,750 --> 00:45:16,700
okay we get back this point allow me to

00:45:14,300 --> 00:45:27,680
introduce one more rule here the method

00:45:16,700 --> 00:45:30,619
name for console dot log so now this

00:45:27,680 --> 00:45:33,080
looks so now our top roll here with this

00:45:30,619 --> 00:45:36,680
introduction here looks very much like

00:45:33,080 --> 00:45:39,650
in output from your typical yak or bison

00:45:36,680 --> 00:45:42,320
or antler parser or if you're familiar

00:45:39,650 --> 00:45:45,410
with BNF he looks very similar to add

00:45:42,320 --> 00:45:50,030
simple beam invitation you have down

00:45:45,410 --> 00:45:53,390
here a method name like it would for

00:45:50,030 --> 00:46:01,310
console dot log and here method method

00:45:53,390 --> 00:46:05,840
name is is a console / w plus dot in the

00:46:01,310 --> 00:46:08,960
log over here so this now looks very

00:46:05,840 --> 00:46:13,040
much like the output from say from oops

00:46:08,960 --> 00:46:20,330
I antler or antler gak or bison the sort

00:46:13,040 --> 00:46:24,070
of file that you get and finally this I

00:46:20,330 --> 00:46:26,750
this I ran across a couple of days ago

00:46:24,070 --> 00:46:29,570
when working on some muscle from working

00:46:26,750 --> 00:46:32,390
out some other slides what we'll do is

00:46:29,570 --> 00:46:37,100
introduce one more class over here

00:46:32,390 --> 00:46:41,240
called a mythical that's going to

00:46:37,100 --> 00:46:43,910
encapsulate all these details so like

00:46:41,240 --> 00:46:47,690
any language well most language i should

00:46:43,910 --> 00:46:49,760
say your method calls have a name and a

00:46:47,690 --> 00:46:51,950
list of arguments this will be familiar

00:46:49,760 --> 00:46:56,090
if you've been through the legal world

00:46:51,950 --> 00:46:59,500
class and what we will do at the very

00:46:56,090 --> 00:47:03,350
end the top method will create a new

00:46:59,500 --> 00:47:06,380
method call using the method name from

00:47:03,350 --> 00:47:09,890
the top and using the arguments inside

00:47:06,380 --> 00:47:14,420
that create an argument list so we have

00:47:09,890 --> 00:47:16,670
arm so we have our method name being

00:47:14,420 --> 00:47:20,000
console dot log and our first argument

00:47:16,670 --> 00:47:25,370
here being this string right here

00:47:20,000 --> 00:47:30,080
so now you're mythical is an object that

00:47:25,370 --> 00:47:33,920
you look at which has a name method or

00:47:30,080 --> 00:47:39,470
it has a name and Ella segments and

00:47:33,920 --> 00:47:42,950
finally if we add a method called pearl

00:47:39,470 --> 00:47:48,680
six on that then down here at the very

00:47:42,950 --> 00:47:50,750
end I I will you get essentially what

00:47:48,680 --> 00:47:55,670
we've been working with all along you

00:47:50,750 --> 00:47:59,780
get say with with this little change of

00:47:55,670 --> 00:48:02,290
here you have down here you give it

00:47:59,780 --> 00:48:06,670
passing this string here and get back

00:48:02,290 --> 00:48:13,730
thank you you get back say some is

00:48:06,670 --> 00:48:19,580
killed 32 with or thing in the these

00:48:13,730 --> 00:48:21,620
dishes and hope and I have you I didn't

00:48:19,580 --> 00:48:26,660
have a real chance to cover what the

00:48:21,620 --> 00:48:30,620
make here does the make returns instead

00:48:26,660 --> 00:48:33,680
of a spring returns in AST object which

00:48:30,620 --> 00:48:35,930
is in abstract syntax tree which is what

00:48:33,680 --> 00:48:38,540
Damien was talking about during his

00:48:35,930 --> 00:48:42,080
keynote this is the actual mechanism

00:48:38,540 --> 00:48:51,800
down here that does that and I'm ready

00:48:42,080 --> 00:48:54,920
for questions yeah okay why is the

00:48:51,800 --> 00:48:57,890
spring why the spring is in ray in the

00:48:54,920 --> 00:49:00,740
aunt is not that is due that's because

00:48:57,890 --> 00:49:08,030
of the string down here is springing

00:49:00,740 --> 00:49:11,420
bracket 0 that is des capture in 20 all

00:49:08,030 --> 00:49:13,480
right anything else thank you

00:49:11,420 --> 00:49:13,480

YouTube URL: https://www.youtube.com/watch?v=KxnRc0hbuBI


