Title: 2016 - VIM as a Perl IDEâ€Ž - Damian Conway
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,030 --> 00:00:07,859
okay so we'll we'll get going now so as

00:00:05,759 --> 00:00:13,889
I guess most of you have realized I'm

00:00:07,859 --> 00:00:22,560
not wrong once again when Emacs fails

00:00:13,889 --> 00:00:28,820
vim set steps in I'd love to give you a

00:00:22,560 --> 00:00:28,820
talk about Emacs as a vim ID as of

00:00:33,980 --> 00:00:40,280
mid-2010 it's a really good operating

00:00:36,270 --> 00:00:42,570
system if only it had a decent editor

00:00:40,280 --> 00:00:48,120
and of course I also know how it was

00:00:42,570 --> 00:00:52,680
named Escape meta alt ctrl shift so all

00:00:48,120 --> 00:00:54,960
of my development is done in vim I don't

00:00:52,680 --> 00:00:56,879
know that I actually use it like an IDE

00:00:54,960 --> 00:00:59,250
but I've been adding features and

00:00:56,879 --> 00:01:02,550
plugins to vim that make it more and

00:00:59,250 --> 00:01:05,090
more like that I'm assuming that most of

00:01:02,550 --> 00:01:08,280
you have at least the perl dot vim

00:01:05,090 --> 00:01:10,650
plug-in installed which apparently gives

00:01:08,280 --> 00:01:12,240
you good syntax highlighting I don't use

00:01:10,650 --> 00:01:14,280
syntax highlighting so I wouldn't know

00:01:12,240 --> 00:01:17,460
actually I do use syntax highlighting

00:01:14,280 --> 00:01:21,450
but I reject it entirely so none of the

00:01:17,460 --> 00:01:24,299
colors change and that makes it much

00:01:21,450 --> 00:01:26,820
more useful to me I'll talk about that

00:01:24,299 --> 00:01:29,430
in a minute so I the first thing I would

00:01:26,820 --> 00:01:32,189
say is I apologize for the crudity of

00:01:29,430 --> 00:01:34,079
this presentation I only had like 20

00:01:32,189 --> 00:01:35,340
minutes to put it together and what I

00:01:34,079 --> 00:01:37,470
thought I'd do rather than show you

00:01:35,340 --> 00:01:40,470
slides and talk about stuff is just

00:01:37,470 --> 00:01:42,810
going to vim and do stuff and let you

00:01:40,470 --> 00:01:44,549
see how I've got vim configured and how

00:01:42,810 --> 00:01:46,200
I've set it up to do these kind of

00:01:44,549 --> 00:01:48,720
things now there's no way I'm going to

00:01:46,200 --> 00:01:50,850
be able to give you the names of all the

00:01:48,720 --> 00:01:53,310
plugins and everything so what I'm going

00:01:50,850 --> 00:01:56,430
to plan to do is put together a tarball

00:01:53,310 --> 00:01:59,189
which will put up on the the website

00:01:56,430 --> 00:02:01,140
afterwards in lieu of slides for this

00:01:59,189 --> 00:02:02,790
one so you can just grab all the stuff

00:02:01,140 --> 00:02:04,290
that I'm going to be showing you all I

00:02:02,790 --> 00:02:06,270
really want to do is inspire you and

00:02:04,290 --> 00:02:08,580
give you some ideas about what you can

00:02:06,270 --> 00:02:11,760
do with them now the very first thing to

00:02:08,580 --> 00:02:14,340
say is have you ever needed to create a

00:02:11,760 --> 00:02:18,599
dot PL or a dot p.m. file

00:02:14,340 --> 00:02:20,670
in the room needed David okay I need to

00:02:18,599 --> 00:02:23,489
do that all the time I'm writing things

00:02:20,670 --> 00:02:25,170
all the time and it kind of was very

00:02:23,489 --> 00:02:27,420
annoying to me that when I would fire up

00:02:25,170 --> 00:02:30,030
vim what I would get would be the empty

00:02:27,420 --> 00:02:32,459
file because that's the hardest part of

00:02:30,030 --> 00:02:34,680
programming is the nothing the tyranny

00:02:32,459 --> 00:02:37,049
of the blank page so I said I'm not

00:02:34,680 --> 00:02:41,940
having that anymore so someone give me

00:02:37,049 --> 00:02:55,890
an unlikely name for a file for a dot PL

00:02:41,940 --> 00:02:57,959
file Emacs dot PL has that so when I

00:02:55,890 --> 00:03:01,440
start up a dot PL that's never been seen

00:02:57,959 --> 00:03:04,049
before then I get all of my prologue and

00:03:01,440 --> 00:03:05,519
I get it starting up on the line where

00:03:04,049 --> 00:03:11,760
the implementations supposed to go and

00:03:05,519 --> 00:03:16,829
it's already fully documented and the

00:03:11,760 --> 00:03:20,850
same thing happens if I do a dot p.m.

00:03:16,829 --> 00:03:29,340
file well let's do a dot p.m. file let's

00:03:20,850 --> 00:03:38,310
do Lib slash Python slash give me one

00:03:29,340 --> 00:03:39,900
more level rules that p.m. so the first

00:03:38,310 --> 00:03:41,400
thing it notices is hey that's a

00:03:39,900 --> 00:03:43,139
subdirectory greater than existed so

00:03:41,400 --> 00:03:45,019
I've got it so it sets up so if I just

00:03:43,139 --> 00:03:51,000
hit return it will create that as well

00:03:45,019 --> 00:03:55,530
because why would I not and then when I

00:03:51,000 --> 00:03:57,870
do it comes up like this and you know

00:03:55,530 --> 00:04:00,359
that it's inferred from the path what

00:03:57,870 --> 00:04:03,419
the name of the package should be it's

00:04:00,359 --> 00:04:07,530
using the modern version of packages

00:04:03,419 --> 00:04:09,450
which allows you to put the the version

00:04:07,530 --> 00:04:11,549
number declaratively at the end of the

00:04:09,450 --> 00:04:16,380
package statement and again what it's

00:04:11,549 --> 00:04:18,209
completely documented the documentation

00:04:16,380 --> 00:04:21,229
is not great but you know it's above

00:04:18,209 --> 00:04:21,229
average for c-pen

00:04:23,390 --> 00:04:28,770
so I don't see why your editor shouldn't

00:04:26,760 --> 00:04:30,510
be doing it isn't even isn't isn't them

00:04:28,770 --> 00:04:33,030
why your editor shouldn't be doing that

00:04:30,510 --> 00:04:37,170
it just seems to make sense to me now

00:04:33,030 --> 00:04:40,980
well I've actually written some Perl

00:04:37,170 --> 00:04:43,380
code so let's go to one that I actually

00:04:40,980 --> 00:04:47,460
wrote keyword declares a module that I

00:04:43,380 --> 00:04:52,380
put on Sipan so here's the source code

00:04:47,460 --> 00:04:54,810
for it it's a fairly big module there

00:04:52,380 --> 00:04:57,270
are some things that IDs do for you that

00:04:54,810 --> 00:05:00,270
I just like it to do for me as well to

00:04:57,270 --> 00:05:05,480
make my life easier so I realized that I

00:05:00,270 --> 00:05:05,480
might have a problem with the catcher

00:05:06,170 --> 00:05:10,020
variable and it doesn't have one okay

00:05:08,850 --> 00:05:12,000
that's going to be a real problem

00:05:10,020 --> 00:05:14,820
immediately because I thought that was

00:05:12,000 --> 00:05:18,060
the demo that I was doing here

00:05:14,820 --> 00:05:21,240
let me see maybe I want to go to demo

00:05:18,060 --> 00:05:25,050
whatever and this is regex debuggers

00:05:21,240 --> 00:05:27,600
source code capture yeah okay so I've

00:05:25,050 --> 00:05:32,430
got the capture variable now I've got it

00:05:27,600 --> 00:05:35,880
set up so that whenever I am over a

00:05:32,430 --> 00:05:37,830
variable down the bottom there you can

00:05:35,880 --> 00:05:39,690
see it saying ah you're over capture and

00:05:37,830 --> 00:05:42,830
that captures no tracks

00:05:39,690 --> 00:05:45,270
capture groups so it's detecting the

00:05:42,830 --> 00:05:47,760
declaration of the variable and the

00:05:45,270 --> 00:05:55,320
comment at the end of it but then it

00:05:47,760 --> 00:06:03,810
gets sorry Larry oh sure sure thing no

00:05:55,320 --> 00:06:05,880
problem at all how's that that okay yeah

00:06:03,810 --> 00:06:09,270
well I just controlled L so it should be

00:06:05,880 --> 00:06:12,000
okay yeah there so that's better happier

00:06:09,270 --> 00:06:16,050
with that okay let me get rid of this

00:06:12,000 --> 00:06:19,620
one behind so that that's what this to

00:06:16,050 --> 00:06:22,020
many behind the other to me okay so it's

00:06:19,620 --> 00:06:24,720
showing you the name of the variable

00:06:22,020 --> 00:06:27,860
which is I guess not very interesting

00:06:24,720 --> 00:06:31,020
since the comet is on the same damn line

00:06:27,860 --> 00:06:33,020
but it's also rewriting the star

00:06:31,020 --> 00:06:34,580
operator in

00:06:33,020 --> 00:06:36,349
vim you know the star operator that

00:06:34,580 --> 00:06:37,789
takes you to the next occurrence of

00:06:36,349 --> 00:06:40,220
whatever's under your cursor at the

00:06:37,789 --> 00:06:43,250
moment so let's go to the next

00:06:40,220 --> 00:06:45,650
occurrence of capture well there's the

00:06:43,250 --> 00:06:53,710
next occurrence of it let's go to the

00:06:45,650 --> 00:06:57,919
next occurrence of capture you in love

00:06:53,710 --> 00:07:00,349
no it's just lust but look it's still

00:06:57,919 --> 00:07:03,530
telling you the name of the variable as

00:07:00,349 --> 00:07:12,889
well and the really cool thing about

00:07:03,530 --> 00:07:17,509
this is if I misspelled that how about

00:07:12,889 --> 00:07:20,030
that not too bad huh okay so the next

00:07:17,509 --> 00:07:23,569
thing that it does is anyone ever use

00:07:20,030 --> 00:07:25,819
the punctuation variable anyone ever had

00:07:23,569 --> 00:07:28,940
to look up the meaning of a punctuation

00:07:25,819 --> 00:07:35,719
variable of course

00:07:28,940 --> 00:07:43,360
so in this mechanism whenever you put it

00:07:35,719 --> 00:07:49,669
over a punctuation variable it tells you

00:07:43,360 --> 00:07:51,979
what that is oh but it gets better have

00:07:49,669 --> 00:07:55,190
you ever had the situation where you had

00:07:51,979 --> 00:07:59,169
a capture variable and let's just for

00:07:55,190 --> 00:08:01,520
the sake of argument do that as well you

00:07:59,169 --> 00:08:03,020
had it oh and by the way notice that

00:08:01,520 --> 00:08:04,669
it's not highlighting that dollar

00:08:03,020 --> 00:08:10,069
capture above because that's not the

00:08:04,669 --> 00:08:13,400
same variable yeah so the thing about

00:08:10,069 --> 00:08:14,840
this is you've ever had a variable that

00:08:13,400 --> 00:08:16,789
you decided hey that's not really a

00:08:14,840 --> 00:08:20,389
great name for it I'd really like to

00:08:16,789 --> 00:08:23,210
change the name for it well with this

00:08:20,389 --> 00:08:25,099
tool you can do that very easily you

00:08:23,210 --> 00:08:28,060
just say change variable and it says

00:08:25,099 --> 00:08:32,529
globally rename the variable capture to

00:08:28,060 --> 00:08:37,159
capture var because that's a better name

00:08:32,529 --> 00:08:39,050
and then it does that but note that it

00:08:37,159 --> 00:08:41,599
didn't change dollar capture because

00:08:39,050 --> 00:08:43,339
that's not the same variable and of

00:08:41,599 --> 00:08:44,870
course at this point we might realize

00:08:43,339 --> 00:08:47,030
well I'd like to go back to the

00:08:44,870 --> 00:08:50,870
Declaration of that variable so there's

00:08:47,030 --> 00:08:53,090
also a special set of keys that lets you

00:08:50,870 --> 00:08:54,530
just say go to the declaration of the

00:08:53,090 --> 00:08:56,750
variable and then we're back at the

00:08:54,530 --> 00:08:59,900
Declaration of the variable

00:08:56,750 --> 00:09:02,870
this makes interacting with Pearl

00:08:59,900 --> 00:09:05,540
variables very very much easier to do

00:09:02,870 --> 00:09:09,230
and it'll be in the Tarble it's called

00:09:05,540 --> 00:09:11,450
track pearl VARs now the other thing is

00:09:09,230 --> 00:09:15,410
of course that sometimes if I'm looking

00:09:11,450 --> 00:09:17,660
for dollar capture and I search for it

00:09:15,410 --> 00:09:19,160
I get other things as well that are not

00:09:17,660 --> 00:09:21,410
the one that I want and there might be a

00:09:19,160 --> 00:09:23,600
lot of these that I have to go through

00:09:21,410 --> 00:09:25,520
until I find the one that I want and

00:09:23,600 --> 00:09:28,100
it's kind of annoying that I can't see a

00:09:25,520 --> 00:09:31,550
lot of them at once so I wrote another

00:09:28,100 --> 00:09:34,850
plugin that allows you having done a

00:09:31,550 --> 00:09:38,330
search like this to say fold everything

00:09:34,850 --> 00:09:43,250
away except for the bits that match the

00:09:38,330 --> 00:09:45,950
search and then I can go down and I can

00:09:43,250 --> 00:09:49,010
very quickly find the one that I'm

00:09:45,950 --> 00:09:52,070
actually interested in yeah I all go up

00:09:49,010 --> 00:09:56,510
for the same reason the other thing that

00:09:52,070 --> 00:09:58,130
happens of course is if you search for

00:09:56,510 --> 00:10:00,410
something else instead

00:09:58,130 --> 00:10:03,890
then it stays in fold mode but you get

00:10:00,410 --> 00:10:06,020
the other thing as well and that turns

00:10:03,890 --> 00:10:08,510
out to be very useful and once you get

00:10:06,020 --> 00:10:10,460
hooked on fold mode then there are all

00:10:08,510 --> 00:10:14,900
kinds of things that you want to be able

00:10:10,460 --> 00:10:17,120
to do with fold mode one of them is I'm

00:10:14,900 --> 00:10:18,980
very often presented with code that I

00:10:17,120 --> 00:10:21,500
haven't written that someone sent me and

00:10:18,980 --> 00:10:23,060
I want to try and understand so one of

00:10:21,500 --> 00:10:26,360
the things that I like to do in the

00:10:23,060 --> 00:10:28,940
first place is just to see the

00:10:26,360 --> 00:10:31,990
subroutines in the hope that there will

00:10:28,940 --> 00:10:35,120
actually be some subroutines

00:10:31,990 --> 00:10:36,290
so I'll write another fold mode where I

00:10:35,120 --> 00:10:40,100
say zdp

00:10:36,290 --> 00:10:42,440
and it folds it up so it just shows me

00:10:40,100 --> 00:10:45,860
the subroutines and hopefully any

00:10:42,440 --> 00:10:47,990
comment before or after them so now I

00:10:45,860 --> 00:10:51,470
can look through quickly and just see

00:10:47,990 --> 00:10:53,930
the subroutines and find the one that

00:10:51,470 --> 00:10:56,390
I'm interested in and then of course I

00:10:53,930 --> 00:10:58,520
can unfold at that point and examine it

00:10:56,390 --> 00:10:59,800
and do whatever I want to do the other

00:10:58,520 --> 00:11:01,450
thing that I want to do

00:10:59,800 --> 00:11:03,430
is I want to hope that they have

00:11:01,450 --> 00:11:06,899
actually written comments in their code

00:11:03,430 --> 00:11:10,540
that document what their code is doing

00:11:06,899 --> 00:11:12,339
the algorithm of their code so I also

00:11:10,540 --> 00:11:17,649
wrote something that lets me say okay

00:11:12,339 --> 00:11:20,200
just show me the algorithm what this

00:11:17,649 --> 00:11:24,130
does is fold away everything except the

00:11:20,200 --> 00:11:27,700
subroutines and the comments in those

00:11:24,130 --> 00:11:30,519
subroutines and that's another way that

00:11:27,700 --> 00:11:33,700
I find it very easy to get into someone

00:11:30,519 --> 00:11:35,350
else's code assuming that they're

00:11:33,700 --> 00:11:39,640
following something like pull best

00:11:35,350 --> 00:11:44,589
practices so I find those to be very

00:11:39,640 --> 00:11:47,170
useful it'll be in the tarball something

00:11:44,589 --> 00:11:51,690
else that I find particularly useful is

00:11:47,170 --> 00:11:55,660
that sometimes I need to find something

00:11:51,690 --> 00:11:58,209
in somewhere in a series of files but I

00:11:55,660 --> 00:12:00,990
don't know exactly where it is and this

00:11:58,209 --> 00:12:03,399
happens when I'm doing Perl more often

00:12:00,990 --> 00:12:06,190
when someone asked me something about

00:12:03,399 --> 00:12:08,470
Perl 6 and I can't remember the answer

00:12:06,190 --> 00:12:12,880
to it and I'm not saying that actually

00:12:08,470 --> 00:12:15,300
ever happens but it could so someone

00:12:12,880 --> 00:12:17,589
will ask me about hyper operators and

00:12:15,300 --> 00:12:19,630
you know I don't know the answer to it

00:12:17,589 --> 00:12:22,990
so what I need to do is to go to all of

00:12:19,630 --> 00:12:25,570
the places in all of these files where

00:12:22,990 --> 00:12:30,490
hyper operators are mentioned so I have

00:12:25,570 --> 00:12:35,290
an a variant of VI called G VI where you

00:12:30,490 --> 00:12:38,010
can just write hyper operator and it

00:12:35,290 --> 00:12:44,290
goes through and finds all the locations

00:12:38,010 --> 00:12:45,579
where hyper operator is mentioned like

00:12:44,290 --> 00:12:47,680
that and all that's doing is that's

00:12:45,579 --> 00:12:48,870
doing a vim grep but it's doing it from

00:12:47,680 --> 00:12:51,870
the command line

00:12:48,870 --> 00:12:51,870
literally

00:12:53,589 --> 00:12:58,459
it's just pulling off the pattern

00:12:56,560 --> 00:13:00,320
munging the pattern to make it a little

00:12:58,459 --> 00:13:03,830
bit more useful working out which

00:13:00,320 --> 00:13:07,100
argument and just calling VI with a vim

00:13:03,830 --> 00:13:10,250
grip and then I find to be incredibly

00:13:07,100 --> 00:13:13,190
useful if you've got a large code base

00:13:10,250 --> 00:13:15,290
within a particular project and you want

00:13:13,190 --> 00:13:23,660
to find the places where this happens I

00:13:15,290 --> 00:13:27,709
also use it quite frequently when I want

00:13:23,660 --> 00:13:30,290
to find well was I using is deeply for

00:13:27,709 --> 00:13:35,540
example anywhere in my test so I can say

00:13:30,290 --> 00:13:37,640
am I using is deeply anywhere in my test

00:13:35,540 --> 00:13:39,410
directory and yes I am and now I'm taken

00:13:37,640 --> 00:13:41,570
to all the places where I was using is

00:13:39,410 --> 00:13:45,050
deeply and of course at that point I can

00:13:41,570 --> 00:13:46,850
also say well I'd like you to just fold

00:13:45,050 --> 00:13:50,050
around that so I don't see anything else

00:13:46,850 --> 00:13:53,899
and these things start working together

00:13:50,050 --> 00:13:56,570
reasonably well okay what else can I

00:13:53,899 --> 00:14:01,070
show you oh here's a good place to be in

00:13:56,570 --> 00:14:03,649
the first place is there anyone else in

00:14:01,070 --> 00:14:08,510
the room who like me likes to line up

00:14:03,649 --> 00:14:11,089
their fat arrows right so this works

00:14:08,510 --> 00:14:17,420
incredibly well right up to the point

00:14:11,089 --> 00:14:27,110
until you say hidden coal and that will

00:14:17,420 --> 00:14:30,320
presumably be black-on-black sneaky and

00:14:27,110 --> 00:14:33,950
that's kind of annoying but when I'm in

00:14:30,320 --> 00:14:36,050
normal mode I have the equals kick which

00:14:33,950 --> 00:14:40,339
is usually set up to do a particular

00:14:36,050 --> 00:14:43,959
kind of file formatting for you I've got

00:14:40,339 --> 00:14:47,600
it set up so that it does that instead

00:14:43,959 --> 00:14:51,290
unless you put it on a special character

00:14:47,600 --> 00:14:55,310
in which case you can make it do that

00:14:51,290 --> 00:14:58,940
instead and that takes away all the pain

00:14:55,310 --> 00:15:00,589
of having proper alignments of course it

00:14:58,940 --> 00:15:03,079
doesn't take away the pain in insert

00:15:00,589 --> 00:15:06,120
mode but then I decided I would take

00:15:03,079 --> 00:15:07,860
away the pain in insert mode as well so

00:15:06,120 --> 00:15:11,610
insert mode oh that's no good because

00:15:07,860 --> 00:15:14,850
it's the right length now color in

00:15:11,610 --> 00:15:18,270
insert mode I have smart completions a

00:15:14,850 --> 00:15:19,710
module that I wrote that allows me as

00:15:18,270 --> 00:15:22,110
soon as I've typed one of these things

00:15:19,710 --> 00:15:26,790
if I hit tab it just aligns the thing

00:15:22,110 --> 00:15:29,250
but leaves me in insert mode and then I

00:15:26,790 --> 00:15:31,140
have other tools as well which for

00:15:29,250 --> 00:15:34,140
example allows me to just jump across to

00:15:31,140 --> 00:15:36,029
where the next thing is going to be or

00:15:34,140 --> 00:15:38,520
what if I hadn't jumped across I could

00:15:36,029 --> 00:15:51,540
have just said tab at that point and it

00:15:38,520 --> 00:15:58,770
would align it for me again my well it's

00:15:51,540 --> 00:16:00,000
absolutely worth it I don't care no and

00:15:58,770 --> 00:16:01,710
if you don't want to do it don't do it

00:16:00,000 --> 00:16:04,529
there's I've no problem with you not

00:16:01,710 --> 00:16:09,180
doing it but I really like completion

00:16:04,529 --> 00:16:13,770
who likes completion yeah so let me show

00:16:09,180 --> 00:16:16,350
you a problem with completion so if I

00:16:13,770 --> 00:16:18,270
said fail call here and then I was going

00:16:16,350 --> 00:16:21,180
to go back in and say no I don't

00:16:18,270 --> 00:16:24,839
actually want it to be fail call I want

00:16:21,180 --> 00:16:26,900
it to be so I'm gonna tab at this point

00:16:24,839 --> 00:16:31,260
to see what I get

00:16:26,900 --> 00:16:34,470
do I get match call somewhere please let

00:16:31,260 --> 00:16:37,440
me get match call somewhere there there

00:16:34,470 --> 00:16:39,180
it is now have you ever done this where

00:16:37,440 --> 00:16:40,980
you you kind of want it to complete in

00:16:39,180 --> 00:16:44,550
the middle of a word and you're going to

00:16:40,980 --> 00:16:50,940
end up with thing double there watch

00:16:44,550 --> 00:16:54,000
what happens when I escape I write a

00:16:50,940 --> 00:16:56,940
module that a plug-in that just when you

00:16:54,000 --> 00:16:58,680
do that kind of completion says you know

00:16:56,940 --> 00:17:02,250
have a look where the the thing that you

00:16:58,680 --> 00:17:04,920
just completed before is doubled and if

00:17:02,250 --> 00:17:08,730
it is then single it yeah that's the

00:17:04,920 --> 00:17:10,890
right verb but I've got completions for

00:17:08,730 --> 00:17:14,160
all kinds of things I am unbelievably

00:17:10,890 --> 00:17:15,860
lazy so if I'm gonna have a string I'm

00:17:14,160 --> 00:17:18,030
not going to want to type the second

00:17:15,860 --> 00:17:19,280
double quote at the end there so I have

00:17:18,030 --> 00:17:22,730
a completion that will do it

00:17:19,280 --> 00:17:24,200
for me and leave me in the middle the

00:17:22,730 --> 00:17:25,700
other thing it will do is if I've just

00:17:24,200 --> 00:17:28,010
completed like that and I do it again

00:17:25,700 --> 00:17:31,940
it'll give me a new line and leave me in

00:17:28,010 --> 00:17:34,160
the middle and of course if I have a

00:17:31,940 --> 00:17:37,940
four loop I'm trying to do it in pill

00:17:34,160 --> 00:17:41,810
six hang on if I have a four loop then I

00:17:37,940 --> 00:17:44,480
open that well I I hit tab once I hit

00:17:41,810 --> 00:17:47,300
tab twice and I get that behavior

00:17:44,480 --> 00:17:49,760
instead which is kind of nice and I've

00:17:47,300 --> 00:17:53,660
got this for all kinds of things for

00:17:49,760 --> 00:17:56,600
example if I want to do a match here I

00:17:53,660 --> 00:17:59,480
can say match and now it will give me a

00:17:56,600 --> 00:18:01,640
match with the XMS which is still the

00:17:59,480 --> 00:18:07,490
right answer despite what Dana had to

00:18:01,640 --> 00:18:10,130
say and indeed if it had been an s then

00:18:07,490 --> 00:18:11,870
it would give me the the full block

00:18:10,130 --> 00:18:13,880
there and at that point I went

00:18:11,870 --> 00:18:16,130
absolutely insane so I realized there's

00:18:13,880 --> 00:18:18,740
no way that I want to write out the full

00:18:16,130 --> 00:18:23,770
structure of a full loop so I said if

00:18:18,740 --> 00:18:23,770
you type 4 and tab do this

00:18:33,039 --> 00:18:38,509
and we just keep going and of course

00:18:35,600 --> 00:18:45,549
once you've done that there is no help

00:18:38,509 --> 00:18:45,549
for you now we don't want to do that

00:18:46,029 --> 00:18:55,490
this zero because then you'll want to do

00:18:50,330 --> 00:18:59,330
it for if and you'll want to do it for

00:18:55,490 --> 00:19:04,610
while and so on and so forth so I just

00:18:59,330 --> 00:19:07,039
said why because I could okay do I have

00:19:04,610 --> 00:19:09,019
I think I've covered most of the things

00:19:07,039 --> 00:19:11,690
that I wanted to tell you about there

00:19:09,019 --> 00:19:13,970
one other thing that I'll show you have

00:19:11,690 --> 00:19:17,600
you ever had to go from one file you

00:19:13,970 --> 00:19:19,940
were ready to another file in vim yeah I

00:19:17,600 --> 00:19:21,710
do it all the time so I set up something

00:19:19,940 --> 00:19:24,350
that made it easier especially for the

00:19:21,710 --> 00:19:25,909
kinds of hierarchies that I navigate so

00:19:24,350 --> 00:19:28,730
I've got a go-to

00:19:25,909 --> 00:19:30,950
plugin that when you say go-to it shows

00:19:28,730 --> 00:19:33,169
you where you could go to and when you

00:19:30,950 --> 00:19:35,929
start typing something in there it'll

00:19:33,169 --> 00:19:39,169
show you the possibilities of it which

00:19:35,929 --> 00:19:44,600
you can complete again and as soon as it

00:19:39,169 --> 00:19:46,639
gets down to and unique you don't have

00:19:44,600 --> 00:19:50,090
to finish typing you just say go to that

00:19:46,639 --> 00:19:52,159
and you go to it and yeah there's

00:19:50,090 --> 00:19:56,179
absolutely no reason to have this except

00:19:52,159 --> 00:19:58,039
that there is all of these things are

00:19:56,179 --> 00:20:01,610
not about the fact that I can't type

00:19:58,039 --> 00:20:05,870
which is true they're about the fact

00:20:01,610 --> 00:20:10,070
that to be productive I need to stay in

00:20:05,870 --> 00:20:13,850
the flow and anything that gets in the

00:20:10,070 --> 00:20:17,419
way of me staying in the flow prevents

00:20:13,850 --> 00:20:19,370
me from writing good Perl and all of

00:20:17,419 --> 00:20:21,500
these tools are just designed so I don't

00:20:19,370 --> 00:20:23,539
have to stop thinking so I can think

00:20:21,500 --> 00:20:26,509
about how to make them do the things I

00:20:23,539 --> 00:20:29,419
want I rewrote them to do the thing that

00:20:26,509 --> 00:20:31,129
I want and I don't have to think and you

00:20:29,419 --> 00:20:33,409
can do that in any editor none of these

00:20:31,129 --> 00:20:35,659
things would be unique to these editors

00:20:33,409 --> 00:20:38,750
we could do them in pretty much any

00:20:35,659 --> 00:20:43,700
editor that we wanted to and I would

00:20:38,750 --> 00:20:46,520
encourage you to do that my time is done

00:20:43,700 --> 00:20:49,010
there's nothing else to show you but let

00:20:46,520 --> 00:20:58,490
me just whet your appetite for some

00:20:49,010 --> 00:21:04,120
other things okay that'll be in the

00:20:58,490 --> 00:21:04,120

YouTube URL: https://www.youtube.com/watch?v=9u6O0dLuqhI


