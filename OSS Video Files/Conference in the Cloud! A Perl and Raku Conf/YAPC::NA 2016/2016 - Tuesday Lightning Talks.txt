Title: 2016 - Tuesday Lightning Talks
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:06,210
I'm Dave Muller otherwise known as Pearl

00:00:02,909 --> 00:00:08,820
Jedi on all the appropriate places i'm

00:00:06,210 --> 00:00:10,260
here with liquid web and i'm going to be

00:00:08,820 --> 00:00:11,519
talking a little bit about the module

00:00:10,260 --> 00:00:14,040
i'll be releasing at the end of this

00:00:11,519 --> 00:00:18,270
month which is any event queue brunette

00:00:14,040 --> 00:00:20,910
ease so the basics what's any event

00:00:18,270 --> 00:00:23,189
queue brunette ease it supports all the

00:00:20,910 --> 00:00:25,410
same operations as net kubernetes except

00:00:23,189 --> 00:00:29,670
that it's slightly modified for an

00:00:25,410 --> 00:00:31,949
event-driven system so just rather than

00:00:29,670 --> 00:00:33,989
simply returning the objects or lists is

00:00:31,949 --> 00:00:36,059
appropriate for methods it actually you

00:00:33,989 --> 00:00:38,719
will supply on success or on error

00:00:36,059 --> 00:00:40,410
callbacks which will be invoked when the

00:00:38,719 --> 00:00:42,870
appropriate resources have been

00:00:40,410 --> 00:00:44,219
retrieved from the API server this is

00:00:42,870 --> 00:00:49,289
all sitting on top of queue benetti's

00:00:44,219 --> 00:00:52,620
REST API so an example would be like

00:00:49,289 --> 00:00:53,969
this for fetching a pod I'm not going to

00:00:52,620 --> 00:00:55,820
try to cover all the functionality of

00:00:53,969 --> 00:00:57,930
any event queue burnet ease because

00:00:55,820 --> 00:01:02,780
mostly it's the same as net kubernetes

00:00:57,930 --> 00:01:02,780
it's just with this slight modification

00:01:04,369 --> 00:01:08,520
one feature i did build into this was

00:01:07,200 --> 00:01:10,619
that any event queue benetti's can be

00:01:08,520 --> 00:01:13,560
forced to operate synchronously on any

00:01:10,619 --> 00:01:15,540
given operation so simply passing a

00:01:13,560 --> 00:01:20,520
return flag will actually make it behave

00:01:15,540 --> 00:01:22,290
more like net Q burnetii s one key

00:01:20,520 --> 00:01:24,390
difference from net q burnetii s net

00:01:22,290 --> 00:01:26,850
kubernetes actually returns a proper

00:01:24,390 --> 00:01:29,430
array of resources from the list methods

00:01:26,850 --> 00:01:31,560
whereas any event queue Burnett ease

00:01:29,430 --> 00:01:35,159
I've made a resource list a first class

00:01:31,560 --> 00:01:37,259
object and the reasons for that will be

00:01:35,159 --> 00:01:38,640
forthcoming so you can get a resource

00:01:37,259 --> 00:01:40,439
list like this if you really want the

00:01:38,640 --> 00:01:42,329
array you just call all on the list

00:01:40,439 --> 00:01:46,799
object and it will actually give you

00:01:42,329 --> 00:01:49,860
back that array so why did I write any

00:01:46,799 --> 00:01:52,110
event queue burnet ease simple answer is

00:01:49,860 --> 00:01:54,119
there a couple of features that i didn't

00:01:52,110 --> 00:01:57,540
really feel I could offer in a non event

00:01:54,119 --> 00:02:01,380
driven system that lend themselves well

00:01:57,540 --> 00:02:03,060
to actually event-driven programming two

00:02:01,380 --> 00:02:05,369
examples of this watching for resource

00:02:03,060 --> 00:02:07,110
changes so basically any of the list

00:02:05,369 --> 00:02:10,349
methods that you call against the REST

00:02:07,110 --> 00:02:12,450
API you can supply a watch flag to it

00:02:10,349 --> 00:02:13,680
which will upgrade it to a streaming

00:02:12,450 --> 00:02:16,079
HTTP a can

00:02:13,680 --> 00:02:18,359
action and actually send down object

00:02:16,079 --> 00:02:21,719
notifications whenever any item in the

00:02:18,359 --> 00:02:24,090
list of resources is modified including

00:02:21,719 --> 00:02:25,739
when new resources are added to the list

00:02:24,090 --> 00:02:28,650
or when resources are removed from the

00:02:25,739 --> 00:02:31,500
list the other thing is rolling update

00:02:28,650 --> 00:02:33,569
this is something that the QQ benetti's

00:02:31,500 --> 00:02:37,010
command-line utility offers which is

00:02:33,569 --> 00:02:38,700
very handy for releasing code but

00:02:37,010 --> 00:02:40,200
technically we could have done this

00:02:38,700 --> 00:02:42,569
entirely procedurally without

00:02:40,200 --> 00:02:43,950
event-driven programming but it didn't

00:02:42,569 --> 00:02:45,989
really make sense i mean one of the

00:02:43,950 --> 00:02:47,579
useful features of the rolling update is

00:02:45,989 --> 00:02:51,419
that you can interrupt it midway through

00:02:47,579 --> 00:02:53,790
and actually roll back and in a purely

00:02:51,419 --> 00:02:55,650
procedural world you couldn't really

00:02:53,790 --> 00:02:57,389
interrupt the routine mid run without

00:02:55,650 --> 00:02:58,680
just killing your entire program I

00:02:57,389 --> 00:03:02,459
wanted to be able to interrupt it

00:02:58,680 --> 00:03:06,540
programmatically so watching resource

00:03:02,459 --> 00:03:09,150
lists like I just said the REST API any

00:03:06,540 --> 00:03:11,790
list operations supply watch flag create

00:03:09,150 --> 00:03:13,560
a streaming connection so with any event

00:03:11,790 --> 00:03:17,459
queue benetti's you can simply pass an

00:03:13,560 --> 00:03:19,919
unchanged handler into your list call

00:03:17,459 --> 00:03:21,930
and you will get that streaming

00:03:19,919 --> 00:03:24,209
functionality you will get your on

00:03:21,930 --> 00:03:26,489
change handler will be called every time

00:03:24,209 --> 00:03:31,769
any resource object in the list changes

00:03:26,489 --> 00:03:34,079
in any way when you when invoked this

00:03:31,769 --> 00:03:36,000
way the list methods will return a

00:03:34,079 --> 00:03:37,650
cancellation guard this is really just a

00:03:36,000 --> 00:03:40,459
code reference that allows you to

00:03:37,650 --> 00:03:43,889
terminate this the streaming connection

00:03:40,459 --> 00:03:45,870
so to camp to stop watching this list

00:03:43,889 --> 00:03:51,000
essentially just invoke the cancel call

00:03:45,870 --> 00:03:53,549
back so rolling update entirely command

00:03:51,000 --> 00:03:55,729
line utility entirely implemented

00:03:53,549 --> 00:03:58,409
client-side really what this does is

00:03:55,729 --> 00:03:59,819
creates a second it's used for

00:03:58,409 --> 00:04:01,709
application controllers it creates a

00:03:59,819 --> 00:04:03,209
second replication controller with the

00:04:01,709 --> 00:04:08,669
modifications I need to speed the hell

00:04:03,209 --> 00:04:10,949
up so okay so Roland update you can you

00:04:08,669 --> 00:04:12,810
can call this way and willing update

00:04:10,949 --> 00:04:14,909
will provide a cancellation guard just

00:04:12,810 --> 00:04:17,310
like the watched resource it will also

00:04:14,909 --> 00:04:19,409
invoke your on scale call back every

00:04:17,310 --> 00:04:20,880
time one pod is moved from the old

00:04:19,409 --> 00:04:22,710
replication controller into the new

00:04:20,880 --> 00:04:24,240
replication controller this will give

00:04:22,710 --> 00:04:25,860
you a chance to check out the new pod

00:04:24,240 --> 00:04:26,990
that was just created see if it's

00:04:25,860 --> 00:04:28,669
healthy and

00:04:26,990 --> 00:04:30,169
if for some reason your pods are coming

00:04:28,669 --> 00:04:32,750
up healthy you can you can cancel at

00:04:30,169 --> 00:04:34,729
midstream all this is going to be

00:04:32,750 --> 00:04:36,380
available in the version one released by

00:04:34,729 --> 00:04:38,150
the end of the month I also wanted to

00:04:36,380 --> 00:04:40,250
give you a quick preview of some of the

00:04:38,150 --> 00:04:41,990
things that I want to offer my second

00:04:40,250 --> 00:04:44,900
version of the release one of them is

00:04:41,990 --> 00:04:46,880
more ways to watch resources so

00:04:44,900 --> 00:04:50,150
currently when you watch a resource the

00:04:46,880 --> 00:04:52,009
first say you're watching a list with 10

00:04:50,150 --> 00:04:53,810
pods the first 10 times you're on change

00:04:52,009 --> 00:04:55,580
gets called is just to populate the list

00:04:53,810 --> 00:04:56,919
with all 10 objects and then thereafter

00:04:55,580 --> 00:04:59,599
you'll actually get modified

00:04:56,919 --> 00:05:01,909
notifications what I'm going to do is

00:04:59,599 --> 00:05:04,250
allow you to fetch a list of pods and

00:05:01,909 --> 00:05:05,840
then supply a non change so your list is

00:05:04,250 --> 00:05:07,849
already built up you're not getting the

00:05:05,840 --> 00:05:09,110
10 extra events you don't have to do the

00:05:07,849 --> 00:05:11,479
work of building your pod list yourself

00:05:09,110 --> 00:05:13,250
it's done for you and you'll really only

00:05:11,479 --> 00:05:17,120
get changed notifications to your

00:05:13,250 --> 00:05:19,159
unchanged sub the next thing I wanted to

00:05:17,120 --> 00:05:22,340
do was allow you to watch a single

00:05:19,159 --> 00:05:24,380
resource the get calls so getting a

00:05:22,340 --> 00:05:28,099
specific pod from the rest api does not

00:05:24,380 --> 00:05:29,690
accept a watch flag using field

00:05:28,099 --> 00:05:32,210
selectors there is a way to effectively

00:05:29,690 --> 00:05:33,530
simulate this so i wanted to provide an

00:05:32,210 --> 00:05:35,659
interface to do that so you'll be able

00:05:33,530 --> 00:05:38,240
to fetch a single resource and then

00:05:35,659 --> 00:05:39,800
provide a non change sub to get notified

00:05:38,240 --> 00:05:43,370
anytime that resource changes on the

00:05:39,800 --> 00:05:47,120
server and the last thing I wanted to do

00:05:43,370 --> 00:05:49,639
was essentially allow you to keep

00:05:47,120 --> 00:05:52,070
asynchronously up to date on any objects

00:05:49,639 --> 00:05:54,710
you've pulled down so you'll get a keep

00:05:52,070 --> 00:05:58,090
fresh method on all of your resource and

00:05:54,710 --> 00:06:00,590
resource lists which will essentially

00:05:58,090 --> 00:06:03,169
supply their own on change callback

00:06:00,590 --> 00:06:04,669
which will just keep your object up to

00:06:03,169 --> 00:06:06,380
date with whatever changes on the server

00:06:04,669 --> 00:06:09,169
as it changes so you can fetch a

00:06:06,380 --> 00:06:11,419
resource and even five minutes later you

00:06:09,169 --> 00:06:12,780
can be sure that that resource has the

00:06:11,419 --> 00:06:15,590
current stuff from the server

00:06:12,780 --> 00:06:15,590
that's all

00:06:20,909 --> 00:06:27,220
hi Ron my name is Denise jerk off I'm

00:06:24,490 --> 00:06:29,500
self outsourcing software development

00:06:27,220 --> 00:06:32,470
company where United States based

00:06:29,500 --> 00:06:36,310
company we have offices in Russia

00:06:32,470 --> 00:06:38,289
Ukraine and some other countries so if

00:06:36,310 --> 00:07:16,889
you're interested in such services feel

00:06:38,289 --> 00:07:16,889
freedom catch me a break did no i don't

00:07:21,260 --> 00:07:25,780
budget x-wing journals are all works

00:07:39,100 --> 00:07:43,440
should I

00:07:40,750 --> 00:07:43,440
can I

00:07:43,540 --> 00:07:52,400
okay hi this is Q on and I'm going to

00:07:48,950 --> 00:07:55,910
talk about the only see family life

00:07:52,400 --> 00:07:59,180
built so far and be warned i'm still a

00:07:55,910 --> 00:08:01,610
beginner so it's not the most beautiful

00:07:59,180 --> 00:08:05,270
module you will see but still i wanted

00:08:01,610 --> 00:08:10,580
to share the story so here I go so this

00:08:05,270 --> 00:08:14,960
is about a Turkish social network called

00:08:10,580 --> 00:08:18,040
exercise ook this is basically a user

00:08:14,960 --> 00:08:20,630
dictionary where users can go define

00:08:18,040 --> 00:08:22,790
their own topics that you see on left

00:08:20,630 --> 00:08:26,930
and under those topics they can add

00:08:22,790 --> 00:08:31,010
their own definitions as they call

00:08:26,930 --> 00:08:33,919
entries that you see on right so this is

00:08:31,010 --> 00:08:36,950
a pretty old website this was founded in

00:08:33,919 --> 00:08:39,890
nineteen ninety nine and it's the sixth

00:08:36,950 --> 00:08:42,650
most visited website of Turkey according

00:08:39,890 --> 00:08:44,420
to alexa right now but the thing is they

00:08:42,650 --> 00:08:48,230
don't have an official API so you cannot

00:08:44,420 --> 00:08:51,590
send a request to the beautiful data

00:08:48,230 --> 00:08:56,510
they have one nice feature they have is

00:08:51,590 --> 00:08:59,540
they publish this list of best posts of

00:08:56,510 --> 00:09:02,120
yesterday so every morning users get to

00:08:59,540 --> 00:09:04,820
see what was happening on the website

00:09:02,120 --> 00:09:07,550
yesterday and clicking to every single

00:09:04,820 --> 00:09:11,420
link opening images references it's a

00:09:07,550 --> 00:09:15,080
pain so I thought why don't just build a

00:09:11,420 --> 00:09:17,780
script that fetches everything merges it

00:09:15,080 --> 00:09:20,990
into a single nice formatted HTML and

00:09:17,780 --> 00:09:23,030
sends it sends an email to me so that I

00:09:20,990 --> 00:09:25,910
can read it much more easily so I did

00:09:23,030 --> 00:09:28,370
this happened three years ago but that

00:09:25,910 --> 00:09:32,060
was not a cpap module at the time it was

00:09:28,370 --> 00:09:35,180
just a script then I thought why not

00:09:32,060 --> 00:09:38,150
build a seat on module out of it since

00:09:35,180 --> 00:09:41,450
I'm parsing the website already so that

00:09:38,150 --> 00:09:43,820
if anyone else wants to build a project

00:09:41,450 --> 00:09:45,700
on that website they can just use my

00:09:43,820 --> 00:09:51,010
module and I would be happy if they used

00:09:45,700 --> 00:09:53,390
so I did build this CPM module called

00:09:51,010 --> 00:09:55,790
www exercises

00:09:53,390 --> 00:09:59,020
and I posited to pre-ban got some

00:09:55,790 --> 00:10:02,450
comments bag and I published it so it's

00:09:59,020 --> 00:10:05,720
live for almost two years now it's not

00:10:02,450 --> 00:10:08,600
very beautiful but it works fine so it's

00:10:05,720 --> 00:10:11,780
good it requires bug fixes every now and

00:10:08,600 --> 00:10:15,710
then but i'm happy to maintain it so

00:10:11,780 --> 00:10:19,790
that's that and after publishing this

00:10:15,710 --> 00:10:22,910
module i had one more idea to one more

00:10:19,790 --> 00:10:25,910
project idea to build on that turkish

00:10:22,910 --> 00:10:28,310
social network so if you use twitter you

00:10:25,910 --> 00:10:33,320
must have seen twits like this twitter

00:10:28,310 --> 00:10:36,370
users tend to as I observed post as soon

00:10:33,320 --> 00:10:44,060
as an earthquake happens it might not be

00:10:36,370 --> 00:10:46,880
a good survival skill but that that

00:10:44,060 --> 00:10:48,800
makes sphere a very good earthquake

00:10:46,880 --> 00:10:52,490
monitor and there are actually research

00:10:48,800 --> 00:10:55,070
done in USA in Japan in Australia to

00:10:52,490 --> 00:10:57,050
build Twitter mentors to earthquake

00:10:55,070 --> 00:11:00,800
mentors out of Twitter data and it works

00:10:57,050 --> 00:11:04,580
perfectly fine you will be surprised but

00:11:00,800 --> 00:11:07,100
you also get some noise as well so not

00:11:04,580 --> 00:11:10,610
all tweets that mention earthquake are

00:11:07,100 --> 00:11:16,220
related to earthquakes so my idea was to

00:11:10,610 --> 00:11:19,190
use two sources to make this old quick

00:11:16,220 --> 00:11:22,430
mentor a better one with doing some

00:11:19,190 --> 00:11:26,090
cross validation so I did what you're

00:11:22,430 --> 00:11:28,820
seeing is on the left this is a Twitter

00:11:26,090 --> 00:11:31,070
steamer on the middle you're seeing a

00:11:28,820 --> 00:11:32,990
counter for Twitter data on the right

00:11:31,070 --> 00:11:36,380
you're seeing a counter for exercising

00:11:32,990 --> 00:11:39,890
so it's streaming both sides for Turkish

00:11:36,380 --> 00:11:43,400
word for earthquake and then it checks

00:11:39,890 --> 00:11:47,350
if both sides alert at the same time or

00:11:43,400 --> 00:11:50,660
not so that work that work just fine and

00:11:47,350 --> 00:11:52,910
we run it for a short amount of time but

00:11:50,660 --> 00:11:55,250
it actually prevented several false

00:11:52,910 --> 00:11:57,080
positives so we were happy with it and

00:11:55,250 --> 00:12:00,920
we actually got a paper out of it

00:11:57,080 --> 00:12:03,530
published in a conference in Turkey so

00:12:00,920 --> 00:12:06,950
there's that and I still have a lot to

00:12:03,530 --> 00:12:09,830
do a lot of bugs to fix and I will prob

00:12:06,950 --> 00:12:12,320
be working on that on tomorrow's PR

00:12:09,830 --> 00:12:16,660
challenge so feel free to join me I will

00:12:12,320 --> 00:12:16,660
be there and thanks

00:12:47,490 --> 00:12:50,490
filter

00:13:03,820 --> 00:13:07,540
we're done i must go

00:13:12,010 --> 00:13:25,240
and response rate the next leg okay

00:13:20,810 --> 00:13:25,240
Halen and Steven are you okay

00:13:29,910 --> 00:13:37,730
alright so I need my notes because I

00:13:34,310 --> 00:13:43,110
decided to do this last minute so

00:13:37,730 --> 00:13:45,350
hopefully this will work no all right

00:13:43,110 --> 00:13:45,350
switch

00:13:48,070 --> 00:13:52,800
okay so that's this

00:14:23,460 --> 00:14:29,620
okay so I'm going to talk about one of

00:14:26,680 --> 00:14:32,530
my favorite ways of doing tests which is

00:14:29,620 --> 00:14:33,880
using tell table driven tests notice

00:14:32,530 --> 00:14:35,710
that a lot of people don't always know

00:14:33,880 --> 00:14:39,490
what table driven tests are so I was

00:14:35,710 --> 00:14:42,550
hoping to bring this type of technique

00:14:39,490 --> 00:14:45,190
up to more people and so that I'll see

00:14:42,550 --> 00:14:48,090
it more often in the wild and what's uh

00:14:45,190 --> 00:14:54,280
what's you know how often have you Oh

00:14:48,090 --> 00:14:57,070
what all right how often have you opened

00:14:54,280 --> 00:14:58,780
up a test case and a test file and

00:14:57,070 --> 00:15:01,990
you've just seen a bunch of test methods

00:14:58,780 --> 00:15:04,090
that pretty much do the same thing over

00:15:01,990 --> 00:15:06,910
and over again and you're looking to add

00:15:04,090 --> 00:15:10,180
a new task case to it or maybe fix a

00:15:06,910 --> 00:15:12,670
test case and you have to scroll scroll

00:15:10,180 --> 00:15:17,980
and try to find where you should add the

00:15:12,670 --> 00:15:19,570
test test file to and instead if it

00:15:17,980 --> 00:15:21,660
looked more like a table driven test

00:15:19,570 --> 00:15:24,340
where you have a table of data that

00:15:21,660 --> 00:15:27,130
encounters the lates you know all of the

00:15:24,340 --> 00:15:29,710
input that goes into your test to your

00:15:27,130 --> 00:15:31,330
to the function you're testing and then

00:15:29,710 --> 00:15:33,340
plus the expected values and then

00:15:31,330 --> 00:15:34,930
there's a bit of code that just runs

00:15:33,340 --> 00:15:37,510
through those tests making sure they all

00:15:34,930 --> 00:15:41,980
run and pass I find it to be much easier

00:15:37,510 --> 00:15:44,830
to add test to remove tests that are no

00:15:41,980 --> 00:15:49,300
longer valid or to modify or even when

00:15:44,830 --> 00:15:50,590
i'm new to a module or code base to go

00:15:49,300 --> 00:15:52,720
into the test files and get an

00:15:50,590 --> 00:15:56,620
understanding what the functions are

00:15:52,720 --> 00:15:59,050
doing so what does it take to write a

00:15:56,620 --> 00:16:03,340
good table driven test case well each

00:15:59,050 --> 00:16:05,050
row of the table that the test codes

00:16:03,340 --> 00:16:08,350
going to iterate through should just be

00:16:05,050 --> 00:16:10,899
one test that you're running and then

00:16:08,350 --> 00:16:12,790
you want to again include all the input

00:16:10,899 --> 00:16:15,100
that you would be passing to that

00:16:12,790 --> 00:16:17,290
function that you can be testing and

00:16:15,100 --> 00:16:18,699
then of course what you expect out of

00:16:17,290 --> 00:16:20,559
that function that's going to be

00:16:18,699 --> 00:16:23,199
compared using the various things and

00:16:20,559 --> 00:16:26,999
also very important if you expect the

00:16:23,199 --> 00:16:29,170
test to fail like if it's going to be a

00:16:26,999 --> 00:16:31,480
exception that happens and you want to

00:16:29,170 --> 00:16:33,610
catch that exception or you want it to

00:16:31,480 --> 00:16:35,290
be a fail of false value you know put

00:16:33,610 --> 00:16:37,689
that in so that it becomes clear that

00:16:35,290 --> 00:16:40,540
hey this is a bad test case that you're

00:16:37,689 --> 00:16:43,779
making sure that you're functioning

00:16:40,540 --> 00:16:45,519
handles correctly and then I like having

00:16:43,779 --> 00:16:48,129
a description added to the test so that

00:16:45,519 --> 00:16:49,899
when it fails I can put in a little bit

00:16:48,129 --> 00:16:51,459
more something that's more descriptive

00:16:49,899 --> 00:16:57,970
so that you can easily find it in the

00:16:51,459 --> 00:17:00,069
table Oh what did I say 22 is it not

00:16:57,970 --> 00:17:02,470
moving advantages oh yeah so some of the

00:17:00,069 --> 00:17:05,049
advantages of using this technique that

00:17:02,470 --> 00:17:07,179
I've found again it's very easy to see

00:17:05,049 --> 00:17:10,029
what the input and the expected values

00:17:07,179 --> 00:17:13,329
are of your tests when you do this

00:17:10,029 --> 00:17:15,819
format you can easily see if you're

00:17:13,329 --> 00:17:17,770
missing edge cases by scanning the the

00:17:15,819 --> 00:17:20,740
table really quickly instead of having

00:17:17,770 --> 00:17:23,980
to scroll through the test file looking

00:17:20,740 --> 00:17:26,380
for what ends up being hidden by all the

00:17:23,980 --> 00:17:28,630
tests testing code itself instead of

00:17:26,380 --> 00:17:29,770
just seeing the data and then if as I

00:17:28,630 --> 00:17:31,570
mentioned a few times already it's

00:17:29,770 --> 00:17:34,240
really easy to add new test cases and

00:17:31,570 --> 00:17:35,890
then I feel that gives better

00:17:34,240 --> 00:17:39,070
documentation for anybody who's new to

00:17:35,890 --> 00:17:42,309
the code base to be able to see what

00:17:39,070 --> 00:17:45,070
something what what the function expects

00:17:42,309 --> 00:17:48,850
us input and what it is expected to

00:17:45,070 --> 00:17:51,909
output one of the things I like to do if

00:17:48,850 --> 00:17:54,909
you notice before we were using an array

00:17:51,909 --> 00:17:56,649
of hashes where the hashes had the

00:17:54,909 --> 00:17:59,260
expected value the input values I

00:17:56,649 --> 00:18:01,779
actually use like using a hash of a hash

00:17:59,260 --> 00:18:06,909
instead and the main reason for that is

00:18:01,779 --> 00:18:09,220
it gives two benefits the first benefit

00:18:06,909 --> 00:18:11,470
that it gives you is that the keys act

00:18:09,220 --> 00:18:14,770
as a natural descriptor right so you can

00:18:11,470 --> 00:18:16,029
have the key acting as something that

00:18:14,770 --> 00:18:18,730
tells you what the test is trying to

00:18:16,029 --> 00:18:22,210
test why you want that test to be there

00:18:18,730 --> 00:18:24,519
and then also hashes the order is not

00:18:22,210 --> 00:18:26,499
guaranteed so you get a

00:18:24,519 --> 00:18:28,809
a nice random thing whereas with an

00:18:26,499 --> 00:18:30,279
array of hashes there is possibility

00:18:28,809 --> 00:18:32,379
that there could be coupling between

00:18:30,279 --> 00:18:37,799
your tests that you don't realize thank

00:18:32,379 --> 00:18:37,799
you oh I have a minute

00:18:58,480 --> 00:19:02,130
Stephen regular yeah

00:19:03,980 --> 00:19:07,190
Rover have

00:19:35,759 --> 00:19:42,460
okay I won the sentence suggestion pilot

00:19:41,139 --> 00:19:43,719
out to a lightning talk which probably

00:19:42,460 --> 00:19:46,450
means i'll still over in the five

00:19:43,719 --> 00:19:48,309
minutes but here we go so last year yup

00:19:46,450 --> 00:19:50,649
see you I gave a talk on this module

00:19:48,309 --> 00:19:53,679
which is a plug-in for modulus to enable

00:19:50,649 --> 00:19:55,779
you to implement a Roth to authorization

00:19:53,679 --> 00:19:57,759
server which is kind of the opposite

00:19:55,779 --> 00:20:00,549
site to what most people one but I

00:19:57,759 --> 00:20:01,989
needed that and I throw tened to split

00:20:00,549 --> 00:20:05,019
the guts out into something that's

00:20:01,989 --> 00:20:06,700
reusable for not just my delicious which

00:20:05,019 --> 00:20:08,950
I did and that wasn't actually for

00:20:06,700 --> 00:20:11,339
selfish reasons it was selfish reasons I

00:20:08,950 --> 00:20:15,159
needed to write test against this module

00:20:11,339 --> 00:20:18,039
which is a API client for a new bank in

00:20:15,159 --> 00:20:19,659
the UK called mondo there a modern bank

00:20:18,039 --> 00:20:23,679
which is quite a scary thought but

00:20:19,659 --> 00:20:25,149
they're actually very very good and why

00:20:23,679 --> 00:20:26,649
I was doing his I was writing tests

00:20:25,149 --> 00:20:28,659
using an emulator and the reason I was

00:20:26,649 --> 00:20:30,279
doing that is because of rest which is

00:20:28,659 --> 00:20:32,139
that thing I'm sure we're all aware of

00:20:30,279 --> 00:20:34,389
that so when I looked at the mondo docs

00:20:32,139 --> 00:20:35,529
I thought well these these old they kind

00:20:34,389 --> 00:20:37,539
of look familiar they look a lot like

00:20:35,529 --> 00:20:41,229
the stripe Docs which look a lot like

00:20:37,539 --> 00:20:45,729
coke ad the stocks and so on and so

00:20:41,229 --> 00:20:47,049
forth these are what yeah but they're

00:20:45,729 --> 00:20:49,029
not that you're gonna get the impression

00:20:47,049 --> 00:20:50,799
that they're all doing the same thing

00:20:49,029 --> 00:20:52,450
but they're not because this is rest so

00:20:50,799 --> 00:20:55,359
you look into the details and you see

00:20:52,450 --> 00:20:57,009
all these very subtle differences and

00:20:55,359 --> 00:20:58,450
you look further into the specs and you

00:20:57,009 --> 00:21:00,429
see even more differences so this is

00:20:58,450 --> 00:21:02,919
mando which seems pretty sensible and

00:21:00,429 --> 00:21:05,049
you compare that to I think this is a

00:21:02,919 --> 00:21:09,009
stripe which use epoch times rather than

00:21:05,049 --> 00:21:10,989
iso 8601 times you look at go cardless

00:21:09,009 --> 00:21:12,669
which say you should set a reference of

00:21:10,989 --> 00:21:14,919
this long but if it's a payment type of

00:21:12,669 --> 00:21:16,690
this long in east with this long and do

00:21:14,919 --> 00:21:19,359
they return a 400 if it's not the right

00:21:16,690 --> 00:21:21,339
reference I don't know and the paypal

00:21:19,359 --> 00:21:22,749
Docs which you can only use the API to

00:21:21,339 --> 00:21:25,749
get transactions which you sent using

00:21:22,749 --> 00:21:27,460
their API which kind of tell you how

00:21:25,749 --> 00:21:30,070
they've implemented it which is fair

00:21:27,460 --> 00:21:32,619
enough and this is a I think this

00:21:30,070 --> 00:21:34,570
campaign monitor which all the endpoints

00:21:32,619 --> 00:21:37,599
if I from all the endpoints return JSON

00:21:34,570 --> 00:21:39,669
apart from one which returns XML and

00:21:37,599 --> 00:21:41,859
then what's this one this is facebook

00:21:39,669 --> 00:21:43,419
which say I'm sure this is a typo you

00:21:41,859 --> 00:21:44,100
have to send the off amount as a base64

00:21:43,419 --> 00:21:46,350
you too

00:21:44,100 --> 00:21:48,299
they encoded string and the off currency

00:21:46,350 --> 00:21:51,630
is the same thing which doesn't seem

00:21:48,299 --> 00:21:53,610
that sensible to me but fair enough this

00:21:51,630 --> 00:21:55,320
is uh oh yeah this is Twitter which say

00:21:53,610 --> 00:21:57,210
oh we use the conventions in the Geo

00:21:55,320 --> 00:22:04,049
Jason unfortunately the coordinates at

00:21:57,210 --> 00:22:06,299
Twitter renders are reversed and oh this

00:22:04,049 --> 00:22:08,669
is moduli was writing and I said to them

00:22:06,299 --> 00:22:11,010
please can you use HTTP status codes to

00:22:08,669 --> 00:22:12,720
return errors you know 500 s et cetera

00:22:11,010 --> 00:22:14,809
and said well no because they're the

00:22:12,720 --> 00:22:17,370
transport they're not the actual

00:22:14,809 --> 00:22:19,549
application implementation but the RFC

00:22:17,370 --> 00:22:22,260
says well no it doesn't really matter

00:22:19,549 --> 00:22:24,830
and you kind of end up in in that state

00:22:22,260 --> 00:22:24,830
really

00:22:31,600 --> 00:22:37,390
but i'm not into back shedding because

00:22:34,990 --> 00:22:40,990
that's just a waste of time and not that

00:22:37,390 --> 00:22:43,270
fun why i like is for people to write

00:22:40,990 --> 00:22:45,870
emulators and it doesn't have to be

00:22:43,270 --> 00:22:49,480
stateful it just needs to mock the data

00:22:45,870 --> 00:22:52,270
is great for tests it's like TD on

00:22:49,480 --> 00:22:54,640
steroids because you can write tests

00:22:52,270 --> 00:22:57,789
without having to monkey patch and it

00:22:54,640 --> 00:22:59,230
makes your CI a lot less fragile because

00:22:57,789 --> 00:23:00,669
you're not relying on the third party

00:22:59,230 --> 00:23:02,530
test server which doesn't have an SLA

00:23:00,669 --> 00:23:04,679
and changes when they release a new

00:23:02,530 --> 00:23:07,059
update to it and breaks all your tests

00:23:04,679 --> 00:23:10,240
this is a preview of the mondo emulator

00:23:07,059 --> 00:23:12,039
which uses OAuth 2 the plug-in air

00:23:10,240 --> 00:23:13,960
mentioned earlier on I needed to use

00:23:12,039 --> 00:23:15,960
password grant which it didn't support

00:23:13,960 --> 00:23:18,039
so that's why I candy dollar a factory

00:23:15,960 --> 00:23:20,020
that's running it that's the test

00:23:18,039 --> 00:23:21,850
coverage just using emulator which is

00:23:20,020 --> 00:23:23,640
close to ninety percent at the unit

00:23:21,850 --> 00:23:27,370
tests and you get almost hundred percent

00:23:23,640 --> 00:23:28,929
so this is a suggestion if you're

00:23:27,370 --> 00:23:31,450
building a restful api don't just

00:23:28,929 --> 00:23:33,970
release docs but actually release an

00:23:31,450 --> 00:23:36,039
emulator as well and i'm not talking

00:23:33,970 --> 00:23:38,159
about a test server i'm talking about a

00:23:36,039 --> 00:23:42,640
standalone executable that you release

00:23:38,159 --> 00:23:44,679
for people to use dog food it because we

00:23:42,640 --> 00:23:46,750
write tests against our API as we write

00:23:44,679 --> 00:23:50,350
our api's but we don't I think we don't

00:23:46,750 --> 00:23:51,730
really use our api's as clients and

00:23:50,350 --> 00:23:53,409
obviously update it when you update your

00:23:51,730 --> 00:23:56,669
API Docs which is easy to do now if

00:23:53,409 --> 00:23:59,799
you're using open API so I go and so on

00:23:56,669 --> 00:24:02,559
that's me developing against the mondo

00:23:59,799 --> 00:24:05,169
emulator I didn't need to I didn't know

00:24:02,559 --> 00:24:07,090
to the fifth one down when I actually

00:24:05,169 --> 00:24:10,059
hit the live endpoint and that was just

00:24:07,090 --> 00:24:13,690
one change i'm eatin needed to made to

00:24:10,059 --> 00:24:14,710
make having written the emulator but it

00:24:13,690 --> 00:24:16,240
turned out that was all in vain because

00:24:14,710 --> 00:24:21,850
they decided they would deprecated pass

00:24:16,240 --> 00:24:23,799
for a grant anyway so that's just an

00:24:21,850 --> 00:24:25,419
example of mondo as i said that one bank

00:24:23,799 --> 00:24:29,200
they're all real time which is very

00:24:25,419 --> 00:24:31,919
useful and i watch at the example and

00:24:29,200 --> 00:24:31,919
that's it thank you very much

00:25:00,280 --> 00:25:11,260
hey all right I'm good okay how to

00:25:09,320 --> 00:25:15,890
improve your pearl coat in just 16 years

00:25:11,260 --> 00:25:18,790
so Who am I nobody special don't worry

00:25:15,890 --> 00:25:21,860
about it and that is kind of my point

00:25:18,790 --> 00:25:24,380
I've been developing it for about 20

00:25:21,860 --> 00:25:28,520
years i started in see the last 16 has

00:25:24,380 --> 00:25:34,100
been in pearl and so i should be pretty

00:25:28,520 --> 00:25:35,750
good by now right well I'm I'm ok some

00:25:34,100 --> 00:25:39,830
people have even called me better than

00:25:35,750 --> 00:25:44,980
average but I could and should be better

00:25:39,830 --> 00:25:48,830
than I am by now so what happened ah

00:25:44,980 --> 00:25:51,950
years of coding in a vacuum working on

00:25:48,830 --> 00:25:53,840
in-house frameworks closed source

00:25:51,950 --> 00:25:58,130
projects not seeking out other

00:25:53,840 --> 00:26:00,320
programmers not coming to Yap see and

00:25:58,130 --> 00:26:02,870
not a very active community where I live

00:26:00,320 --> 00:26:05,929
and so from my perspective I believe

00:26:02,870 --> 00:26:07,730
that Pearl was dying and I I said maybe

00:26:05,929 --> 00:26:10,970
it's time to think about this and maybe

00:26:07,730 --> 00:26:14,360
I should get out of pearl but I love

00:26:10,970 --> 00:26:17,179
pearl and it's so good I did not want to

00:26:14,360 --> 00:26:21,620
leave it so I decided it was time to get

00:26:17,179 --> 00:26:27,800
in and dive deeper and when I did blew

00:26:21,620 --> 00:26:31,309
my mind the change was instant my

00:26:27,800 --> 00:26:34,520
perspective well it just was totally

00:26:31,309 --> 00:26:37,940
different and in the last 18 months my

00:26:34,520 --> 00:26:42,170
code has improved probably more than the

00:26:37,940 --> 00:26:44,510
decade before that I set myself three

00:26:42,170 --> 00:26:46,700
goals I wanted to contribute to an open

00:26:44,510 --> 00:26:49,429
source project I wanted to release my

00:26:46,700 --> 00:26:53,480
own Sipan module and I wanted to come to

00:26:49,429 --> 00:26:56,210
the conference and so right about that

00:26:53,480 --> 00:26:58,490
time Neil started the Sipan pull request

00:26:56,210 --> 00:27:01,370
challenge and I thought well that's not

00:26:58,490 --> 00:27:03,500
for me it's not good enough for that but

00:27:01,370 --> 00:27:06,230
he was very encouraging and very

00:27:03,500 --> 00:27:08,690
convincing and i said okay i'll give it

00:27:06,230 --> 00:27:11,059
a start and I secretly hoped for a nice

00:27:08,690 --> 00:27:12,110
simple module to start out and maybe I

00:27:11,059 --> 00:27:20,090
can dip my toe in

00:27:12,110 --> 00:27:22,370
and nope moose so as soon as I calmed

00:27:20,090 --> 00:27:24,020
myself down took some breaths I read

00:27:22,370 --> 00:27:26,179
through the open issues and i saw a

00:27:24,020 --> 00:27:29,600
documentation issue apparently there

00:27:26,179 --> 00:27:32,240
were like five hundred bad links so i

00:27:29,600 --> 00:27:34,100
went through them all and i searched for

00:27:32,240 --> 00:27:36,820
more moose links and i gathered him up

00:27:34,100 --> 00:27:41,450
and i submitted my pull request and

00:27:36,820 --> 00:27:43,280
everyone was very nice and now a year

00:27:41,450 --> 00:27:45,380
later i've contributed the several more

00:27:43,280 --> 00:27:47,419
modules as part of that and a few other

00:27:45,380 --> 00:27:50,840
things and it looks really impressive

00:27:47,419 --> 00:27:53,809
like I'm a contributor to moose and this

00:27:50,840 --> 00:27:55,850
is a lie so yeah feeling pretty good

00:27:53,809 --> 00:28:02,630
about that and actually not all of them

00:27:55,850 --> 00:28:04,669
were quality fixes encode guess now has

00:28:02,630 --> 00:28:08,390
a command-line interface that you can

00:28:04,669 --> 00:28:13,549
just throw a file at that was me um so

00:28:08,390 --> 00:28:15,440
yeah uh and my first module I won't talk

00:28:13,549 --> 00:28:19,150
about it here it's yeah a few of us use

00:28:15,440 --> 00:28:26,480
it um it didn't go completely smooth

00:28:19,150 --> 00:28:29,330
always spell check everything you know

00:28:26,480 --> 00:28:31,340
that's what happens i guess and that's

00:28:29,330 --> 00:28:36,350
spent by the way like two or three weeks

00:28:31,340 --> 00:28:41,030
on pre pan and nobody mentioned that and

00:28:36,350 --> 00:28:43,970
then my first yap see and I pearl is so

00:28:41,030 --> 00:28:45,950
alive and the talks were great the

00:28:43,970 --> 00:28:49,820
hallway conversations were great and I

00:28:45,950 --> 00:28:52,160
just went home fired up so my point here

00:28:49,820 --> 00:28:54,140
and this is for new people consider it

00:28:52,160 --> 00:28:57,440
tips and for the veterans consider it my

00:28:54,140 --> 00:28:59,929
thanks get connected talk to other

00:28:57,440 --> 00:29:02,380
programmers look at their code have them

00:28:59,929 --> 00:29:05,750
look at your code don't hesitate to

00:29:02,380 --> 00:29:08,390
participate because this is an

00:29:05,750 --> 00:29:12,530
incredible community built off brilliant

00:29:08,390 --> 00:29:14,480
technology and oh by the way rock stars

00:29:12,530 --> 00:29:16,309
giving out all their codes is leaving it

00:29:14,480 --> 00:29:18,890
laying around for free for everyone to

00:29:16,309 --> 00:29:24,070
look through and cheat off of and I mean

00:29:18,890 --> 00:29:27,890
I haven't even paid these people suckers

00:29:24,070 --> 00:29:29,809
so who I really am is Michael rasta and

00:29:27,890 --> 00:29:32,690
you can find me on github Twitter

00:29:29,809 --> 00:29:34,070
instructables Sipan and I'd love to meet

00:29:32,690 --> 00:29:35,540
more people because I don't know a lot

00:29:34,070 --> 00:29:37,820
of you so if you want an interesting

00:29:35,540 --> 00:29:40,370
conversation in the hallway ask me about

00:29:37,820 --> 00:29:42,980
my desk which has eighty thousand views

00:29:40,370 --> 00:29:46,730
on YouTube more than anyone else's desk

00:29:42,980 --> 00:29:49,700
I'm sure and ok since I knew that would

00:29:46,730 --> 00:29:53,809
make people curious here it is and it

00:29:49,700 --> 00:29:59,270
does involve pearl it can also report

00:29:53,809 --> 00:30:01,510
the status of all of my servers ok go

00:29:59,270 --> 00:30:01,510
now

00:30:14,340 --> 00:30:19,870
alright since you know I work for

00:30:17,590 --> 00:30:22,630
percentage for you in play surveys slow

00:30:19,870 --> 00:30:26,559
web designing this row staff or hiring

00:30:22,630 --> 00:30:41,970
so if you looking for a job come talk to

00:30:26,559 --> 00:30:41,970
me for all this see mother but yeah mmm

00:30:43,889 --> 00:30:51,549
that's awful small where's the in biggin

00:30:48,190 --> 00:30:56,620
button well just do that a few times

00:30:51,549 --> 00:30:59,399
hello I'm Jason McIntosh um I wanted to

00:30:56,620 --> 00:31:02,760
share something I developed a year ago

00:30:59,399 --> 00:31:05,230
this is a reference implementation of a

00:31:02,760 --> 00:31:07,330
universal text encoder that happens to

00:31:05,230 --> 00:31:08,740
be written in JavaScript but I think

00:31:07,330 --> 00:31:12,970
you'll agree that it carries

00:31:08,740 --> 00:31:15,580
implications in for pearl as well as all

00:31:12,970 --> 00:31:17,980
other human endeavor so it's available

00:31:15,580 --> 00:31:20,980
from my website jmac org if you scroll

00:31:17,980 --> 00:31:25,029
down to the inch long text encoder now

00:31:20,980 --> 00:31:27,159
as this says basically it accepts text

00:31:25,029 --> 00:31:30,519
of arbitrary length and it encodes it

00:31:27,159 --> 00:31:32,919
into a single line of one inch or less

00:31:30,519 --> 00:31:36,730
in length um it can be of varying

00:31:32,919 --> 00:31:38,919
thickness for easy visibility I shall

00:31:36,730 --> 00:31:45,090
demonstrate with let's see what shall I

00:31:38,919 --> 00:31:52,529
say hello Orlando I am having a good

00:31:45,090 --> 00:31:56,409
time at the conference formerly known as

00:31:52,529 --> 00:31:59,180
yep see yes now as you can see where

00:31:56,409 --> 00:32:00,950
this page printed out this

00:31:59,180 --> 00:32:03,380
here would be less than one as long

00:32:00,950 --> 00:32:05,630
because it is this many inches that's a

00:32:03,380 --> 00:32:08,540
zero qualified attachment point and then

00:32:05,630 --> 00:32:12,110
I know what you're thinking Jason this

00:32:08,540 --> 00:32:15,140
doesn't make any sense it's 2016 where

00:32:12,110 --> 00:32:17,720
you have to support emojis uh well I

00:32:15,140 --> 00:32:20,740
have that covered as you can see throw

00:32:17,720 --> 00:32:24,080
in a little some some there you go and

00:32:20,740 --> 00:32:27,080
that isn't covered the way this works

00:32:24,080 --> 00:32:31,370
it's very simple basically the text is

00:32:27,080 --> 00:32:33,050
converted into utf-8 and that's turned

00:32:31,370 --> 00:32:35,480
into a hexadecimal number which is an

00:32:33,050 --> 00:32:37,430
attorney to decimal you stick a decimal

00:32:35,480 --> 00:32:39,680
point in front of that you can then

00:32:37,430 --> 00:32:43,400
print that out you can put it on a

00:32:39,680 --> 00:32:45,800
t-shirt I'm sure nanomaterials aerospace

00:32:43,400 --> 00:32:48,680
could do something with this body

00:32:45,800 --> 00:32:51,050
modification basically as I say on my

00:32:48,680 --> 00:32:54,620
webpage I don't know why no one's done

00:32:51,050 --> 00:32:56,240
anything with this before so I do as I

00:32:54,620 --> 00:32:57,290
say here I publish and release the

00:32:56,240 --> 00:32:58,430
method which I feel expect to have a

00:32:57,290 --> 00:33:00,050
singular and permanent transformative

00:32:58,430 --> 00:33:01,240
technology Minh communication for the

00:33:00,050 --> 00:33:03,500
whole words free and everlasting use

00:33:01,240 --> 00:33:06,080
shared in friendship and peace again

00:33:03,500 --> 00:33:08,410
that is at jmac org slash encoder thank

00:33:06,080 --> 00:33:08,410
you very much

00:33:21,700 --> 00:33:26,770
good show anybody

00:33:44,039 --> 00:33:46,879
ok

00:33:46,960 --> 00:33:52,940
alright so I call this thing you too can

00:33:51,320 --> 00:33:55,340
you too effin someone immediately says I

00:33:52,940 --> 00:33:57,830
these two have bono in it so as bono

00:33:55,340 --> 00:34:01,309
Weezy's to with these two factors you

00:33:57,830 --> 00:34:04,760
bothered oh I um hi my name is Rob I'm

00:34:01,309 --> 00:34:06,050
at Robin I work for fastmail I have no I

00:34:04,760 --> 00:34:07,670
know some customers in the room thank

00:34:06,050 --> 00:34:11,030
you if you're not a customer come and

00:34:07,670 --> 00:34:13,340
talk to me I have stickers I'm

00:34:11,030 --> 00:34:14,919
Australian which should be obvious for

00:34:13,340 --> 00:34:17,300
the acids and I don't understand why

00:34:14,919 --> 00:34:19,159
Americans have such as rat fascination

00:34:17,300 --> 00:34:21,050
with Australians but I don't care i

00:34:19,159 --> 00:34:23,000
intend to use it and include every

00:34:21,050 --> 00:34:26,720
export quality stereotype in by talk

00:34:23,000 --> 00:34:29,000
possible in the hopes that one way or

00:34:26,720 --> 00:34:30,770
another you'll be entertained so two

00:34:29,000 --> 00:34:33,500
factor auth is something that's kind of

00:34:30,770 --> 00:34:35,480
important to me so the basic idea is you

00:34:33,500 --> 00:34:38,240
need to log in to log in you present

00:34:35,480 --> 00:34:40,540
some credentials something that is

00:34:38,240 --> 00:34:43,129
associated with you and normally that's

00:34:40,540 --> 00:34:45,200
something you know this is one of

00:34:43,129 --> 00:34:47,389
Australia's greatest sons yahoo serious

00:34:45,200 --> 00:34:49,790
thinking carefully about his password he

00:34:47,389 --> 00:34:51,740
is well known for good password

00:34:49,790 --> 00:34:53,750
practices as Australia but sometimes you

00:34:51,740 --> 00:34:56,000
need more than that you need a second

00:34:53,750 --> 00:35:00,950
factor and it's usually something you

00:34:56,000 --> 00:35:03,320
have so legendary folk hero Mick

00:35:00,950 --> 00:35:05,270
Crocodile Dundee with his physical

00:35:03,320 --> 00:35:07,490
artifact arm very impressive but

00:35:05,270 --> 00:35:10,369
unfortunately we are not all as good a

00:35:07,490 --> 00:35:12,440
knife play as and this fellow and we

00:35:10,369 --> 00:35:14,300
have to rely on the more mundane which

00:35:12,440 --> 00:35:16,640
tends to be something related to our

00:35:14,300 --> 00:35:18,980
cell phone but we can hope there's

00:35:16,640 --> 00:35:21,820
probably a nice shaped case on ebay

00:35:18,980 --> 00:35:25,040
which will you can halfway this so

00:35:21,820 --> 00:35:29,869
Universal to factor is an open set of

00:35:25,040 --> 00:35:34,340
standards for building bothering me for

00:35:29,869 --> 00:35:36,109
building a a USB device that can act as

00:35:34,340 --> 00:35:39,010
a second factor device and the major

00:35:36,109 --> 00:35:41,630
difference with it is that the

00:35:39,010 --> 00:35:43,490
application on your computer that talks

00:35:41,630 --> 00:35:45,859
to the device usually your web browser

00:35:43,490 --> 00:35:47,240
speaks directly to the device over us

00:35:45,859 --> 00:35:48,800
beat which means there is if you're

00:35:47,240 --> 00:35:50,660
familiar with other two factor devices

00:35:48,800 --> 00:35:52,430
totp these kinds of things it's usually

00:35:50,660 --> 00:35:54,350
it generates a code that you then have

00:35:52,430 --> 00:35:55,670
to type in the other is there's no more

00:35:54,350 --> 00:35:57,800
of that your application uses some

00:35:55,670 --> 00:35:59,089
JavaScript talks to the browser and it

00:35:57,800 --> 00:36:01,579
becomes a OneTouch

00:35:59,089 --> 00:36:04,339
prospect it does a bunch of basically

00:36:01,579 --> 00:36:06,109
it's the host density challenge it signs

00:36:04,339 --> 00:36:07,609
the challenge it's got you know serious

00:36:06,109 --> 00:36:09,219
crypto in there I'm not a crypto head

00:36:07,609 --> 00:36:11,839
but all the crypto people say it's fine

00:36:09,219 --> 00:36:13,670
and it returns that back and then you

00:36:11,839 --> 00:36:15,319
can then verify it's the real actual

00:36:13,670 --> 00:36:16,969
device there there's plenty of

00:36:15,319 --> 00:36:20,299
manufacturers the cheapest ones that

00:36:16,969 --> 00:36:22,519
I've seen nine euro which is the night

00:36:20,299 --> 00:36:24,650
Ricky you to F so it's very easy to very

00:36:22,519 --> 00:36:26,509
cheap to get started unfortunately there

00:36:24,650 --> 00:36:31,249
are not Australian themed due to f keys

00:36:26,509 --> 00:36:32,829
yet but um I live in hope so there's a

00:36:31,249 --> 00:36:35,509
bunch of services out there that

00:36:32,829 --> 00:36:37,430
currently support it Dropbox github and

00:36:35,509 --> 00:36:39,460
Google all worked on this spec together

00:36:37,430 --> 00:36:42,259
they all implement it really really well

00:36:39,460 --> 00:36:45,710
it's not just for web services there is

00:36:42,259 --> 00:36:47,089
a library called Libya to F which can be

00:36:45,710 --> 00:36:49,789
built into just about anything it's just

00:36:47,089 --> 00:36:52,640
a C library and Pam you to F plugs in to

00:36:49,789 --> 00:36:54,529
eunice's authentication stack which lets

00:36:52,640 --> 00:36:57,950
you then you know unlock your laptop

00:36:54,529 --> 00:37:00,200
using your security key fastmail we'll

00:36:57,950 --> 00:37:01,279
have it next month because I was almost

00:37:00,200 --> 00:37:03,410
finished and then had to come to a

00:37:01,279 --> 00:37:05,690
conference and finally get very

00:37:03,410 --> 00:37:08,210
difficult to work and then your service

00:37:05,690 --> 00:37:09,469
your web app your whether it's an

00:37:08,210 --> 00:37:11,029
off-the-shelf application your web

00:37:09,469 --> 00:37:12,739
service your whatever you have that

00:37:11,029 --> 00:37:15,619
requires someone to login and is written

00:37:12,739 --> 00:37:17,450
in perl you can now get or thing you to

00:37:15,619 --> 00:37:20,210
if I can explain these pictures later I

00:37:17,450 --> 00:37:21,769
just want to run out of time so you go

00:37:20,210 --> 00:37:23,509
to sleep and you grab or thin you to f

00:37:21,769 --> 00:37:26,329
it's a pure pearl implementation of the

00:37:23,509 --> 00:37:27,950
server parts of the spec it literally

00:37:26,329 --> 00:37:29,869
has three functions it generates

00:37:27,950 --> 00:37:31,690
challenges and it verifies the two types

00:37:29,869 --> 00:37:35,359
of responses that can come back one is a

00:37:31,690 --> 00:37:39,079
registration I connect this individual

00:37:35,359 --> 00:37:41,210
specific device with a user or I or set

00:37:39,079 --> 00:37:42,349
during login I confirm that the user has

00:37:41,210 --> 00:37:45,710
a device that they've previously

00:37:42,349 --> 00:37:47,539
registered with their account it comes

00:37:45,710 --> 00:37:49,369
with examples they can interrupt with

00:37:47,539 --> 00:37:50,989
Libby you to if it works with chromium's

00:37:49,369 --> 00:37:52,609
implementation which of course is in

00:37:50,989 --> 00:37:56,299
chromatin opera and any other chromium

00:37:52,609 --> 00:37:57,859
based browsers and then you're done your

00:37:56,299 --> 00:38:00,380
service is securely your users are happy

00:37:57,859 --> 00:38:02,119
because they have something that is has

00:38:00,380 --> 00:38:04,309
better security and a better user

00:38:02,119 --> 00:38:06,079
interface than any other sort of thing

00:38:04,309 --> 00:38:07,729
out there so you got home you have

00:38:06,079 --> 00:38:09,690
dinner in Australia that will be vegging

00:38:07,729 --> 00:38:13,890
my toast obviously

00:38:09,690 --> 00:38:15,060
and that's kind of it come and ask me

00:38:13,890 --> 00:38:16,770
about you to f come and ask me about

00:38:15,060 --> 00:38:18,750
Australia can one ask me whatever i will

00:38:16,770 --> 00:38:20,910
have slides and a demo server up on

00:38:18,750 --> 00:38:24,740
Robin do later today if I don't drink

00:38:20,910 --> 00:38:24,740
too much thank you

00:38:53,099 --> 00:38:56,739
perfect all right hello everybody I'm

00:38:55,390 --> 00:38:58,329
Stephen not only I'm from Grant Street

00:38:56,739 --> 00:39:00,009
group and I'm going to talk to you today

00:38:58,329 --> 00:39:02,019
about one of the applications we I

00:39:00,009 --> 00:39:05,049
helped develop they're called tellurium

00:39:02,019 --> 00:39:08,140
this is a automated scripting web app

00:39:05,049 --> 00:39:09,609
testing kind of application and the cool

00:39:08,140 --> 00:39:11,259
thing about it is it's in fairly plain

00:39:09,609 --> 00:39:12,579
English script and of course everything

00:39:11,259 --> 00:39:15,339
in the server back-end is all written in

00:39:12,579 --> 00:39:17,319
perl which is pretty cool and the idea

00:39:15,339 --> 00:39:18,999
that the plane conversational english is

00:39:17,319 --> 00:39:20,829
that anybody can write these tests and

00:39:18,999 --> 00:39:22,719
so you can take people that do regular

00:39:20,829 --> 00:39:24,579
like regression testing by hand on

00:39:22,719 --> 00:39:25,959
websites and kind of take those scripts

00:39:24,579 --> 00:39:29,079
and just turn right into a tellurium

00:39:25,959 --> 00:39:30,429
test so for instance here I figured well

00:39:29,079 --> 00:39:32,410
what could be fun so let's just order

00:39:30,429 --> 00:39:34,929
pizza right and unfortunately and get

00:39:32,410 --> 00:39:36,640
quite the whole way but so we start off

00:39:34,929 --> 00:39:39,849
by just declaring the URL we want to go

00:39:36,640 --> 00:39:41,619
to which pizza hut com I pick a persona

00:39:39,849 --> 00:39:43,119
which just has login information stuff

00:39:41,619 --> 00:39:45,489
like that so I can mask that data and

00:39:43,119 --> 00:39:48,069
kind of keep that separate so for

00:39:45,489 --> 00:39:50,079
instance will just be me Stephen and

00:39:48,069 --> 00:39:51,489
then I've created a little phrase which

00:39:50,079 --> 00:39:53,199
is just a way to kind of refractor out

00:39:51,489 --> 00:39:54,669
refactor out some code and so you don't

00:39:53,199 --> 00:39:56,319
have to have all this information in

00:39:54,669 --> 00:39:57,789
there and it's easier to read and so

00:39:56,319 --> 00:40:00,249
this one just logs us into pizza hut

00:39:57,789 --> 00:40:04,150
some of the cool things about the phrase

00:40:00,249 --> 00:40:05,949
it can be used anywhere and for instance

00:40:04,150 --> 00:40:07,419
it'll have information like it can grab

00:40:05,949 --> 00:40:08,829
the current personas login name and

00:40:07,419 --> 00:40:10,359
password so you don't have to actually

00:40:08,829 --> 00:40:12,519
type that out you can run it with all

00:40:10,359 --> 00:40:13,869
different kinds of people so in that

00:40:12,519 --> 00:40:16,329
case we'll be grabbing my information

00:40:13,869 --> 00:40:19,119
and then you can eventually start

00:40:16,329 --> 00:40:22,839
working on elements you can grab them by

00:40:19,119 --> 00:40:25,059
like the a href or the text or like the

00:40:22,839 --> 00:40:27,099
ID or even if it's a really complicated

00:40:25,059 --> 00:40:29,169
one like this hotel ative that i have to

00:40:27,099 --> 00:40:31,299
grab eventually you can just give it a

00:40:29,169 --> 00:40:34,359
really long XPath and kind of simplify

00:40:31,299 --> 00:40:35,559
the wording a little bit so let's go

00:40:34,359 --> 00:40:38,890
ahead and give it a run and see how far

00:40:35,559 --> 00:40:41,619
it gets so it should log me in it should

00:40:38,890 --> 00:40:42,939
go ahead and take a pizza and then

00:40:41,619 --> 00:40:47,739
choose that we want delivery and of

00:40:42,939 --> 00:40:49,390
course we want it here at the hotel so

00:40:47,739 --> 00:40:50,919
here it is going through step by step

00:40:49,390 --> 00:40:53,349
right now we're going through that

00:40:50,919 --> 00:40:57,009
phrase which is logging us into pizza

00:40:53,349 --> 00:40:59,409
hut I think the Wi-Fi is a little slow

00:40:57,009 --> 00:41:00,459
to pull up the pictures right now but

00:40:59,409 --> 00:41:02,859
you can see some of the tests are

00:41:00,459 --> 00:41:03,880
passing the thenns are like assertions

00:41:02,859 --> 00:41:08,829
like the winds are actual

00:41:03,880 --> 00:41:09,880
actions and so while that's running I

00:41:08,829 --> 00:41:11,920
think you guys can tell that it's doing

00:41:09,880 --> 00:41:13,470
stuff let's actually go to you know the

00:41:11,920 --> 00:41:20,309
one that's already out of the oven and

00:41:13,470 --> 00:41:20,309
kind of look at it so if we blow this up

00:41:20,910 --> 00:41:26,380
then yet you can see that we did get to

00:41:23,980 --> 00:41:28,930
Pizza Hut com wow this is super slow

00:41:26,380 --> 00:41:30,460
alright let's go back to this we got to

00:41:28,930 --> 00:41:33,789
pizza com I think you can see it pretty

00:41:30,460 --> 00:41:36,700
well there eventually we we click the

00:41:33,789 --> 00:41:38,950
sign in link we dropped in one of my

00:41:36,700 --> 00:41:42,250
ancient emails @ netscape.net for those

00:41:38,950 --> 00:41:44,859
that can't see it then once you click in

00:41:42,250 --> 00:41:46,480
sign in we can check that Oh yep welcome

00:41:44,859 --> 00:41:49,480
Stephen so that means we actually signed

00:41:46,480 --> 00:41:50,980
in successfully and then if we go all

00:41:49,480 --> 00:41:52,930
the way down to the bottom well we

00:41:50,980 --> 00:41:54,579
wanted we clicked on an order which

00:41:52,930 --> 00:41:57,759
brought up whether we want delivery or

00:41:54,579 --> 00:41:59,220
carryout and chose delivery and then

00:41:57,759 --> 00:42:01,690
like I said there was that really long

00:41:59,220 --> 00:42:03,549
worded one because I had to pick out the

00:42:01,690 --> 00:42:06,009
hotel address out of the previous

00:42:03,549 --> 00:42:08,019
addresses I used and so I picked up the

00:42:06,009 --> 00:42:13,420
hotel address and then that clicked

00:42:08,019 --> 00:42:15,130
order now and then finally we wanted to

00:42:13,420 --> 00:42:16,960
add on order to a pizza so let me just

00:42:15,130 --> 00:42:19,299
go ahead and let this one won't load and

00:42:16,960 --> 00:42:21,279
so I click the add to cart and then of

00:42:19,299 --> 00:42:22,779
course that pulled up that screen where

00:42:21,279 --> 00:42:24,880
we could have continued to hit check out

00:42:22,779 --> 00:42:26,500
and said you know we'll pay cash for it

00:42:24,880 --> 00:42:30,819
or when we get here maybe the pearl

00:42:26,500 --> 00:42:34,150
foundation would I don't know but anyway

00:42:30,819 --> 00:42:37,450
so that that's tellurium it's if you go

00:42:34,150 --> 00:42:39,130
to WWE 52 com it's free to sign up free

00:42:37,450 --> 00:42:41,289
to use and you know maybe you have

00:42:39,130 --> 00:42:44,309
reasons for use of it for at your

00:42:41,289 --> 00:42:44,309
company thank

00:43:04,980 --> 00:43:13,410
we'll stop here it's probably nicer to

00:43:09,180 --> 00:43:15,060
stop here so that was it for the first

00:43:13,410 --> 00:43:19,380
lightning talks everyone waved goodbye

00:43:15,060 --> 00:43:21,560
to youtube I YouTube and now that

00:43:19,380 --> 00:43:21,560

YouTube URL: https://www.youtube.com/watch?v=s8BvPwkvBEI


