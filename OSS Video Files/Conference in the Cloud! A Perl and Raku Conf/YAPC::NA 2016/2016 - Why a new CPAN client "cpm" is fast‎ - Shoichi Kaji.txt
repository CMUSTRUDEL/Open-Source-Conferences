Title: 2016 - Why a new CPAN client "cpm" is fast‎ - Shoichi Kaji
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,140 --> 00:00:08,629
okay good morning okay let's get started

00:00:08,990 --> 00:00:20,520
ok let me introduce myself my name is

00:00:14,700 --> 00:00:24,060
joy Scotty and I'm from Japan please

00:00:20,520 --> 00:00:29,779
call me shorty rakaji or whatever you

00:00:24,060 --> 00:00:34,739
want okay my post ID and github ID is

00:00:29,779 --> 00:00:40,200
skg and i wrote some power 5 module and

00:00:34,739 --> 00:00:43,920
parsec module are powerful moser are CPM

00:00:40,200 --> 00:00:50,039
ad for apt fat baka simple and module

00:00:43,920 --> 00:00:58,620
slack rtm and parsec Moser is a ms63

00:00:50,039 --> 00:01:03,600
poem and ever put in slack today I would

00:00:58,620 --> 00:01:12,659
like to talk about cpn a new sipping

00:01:03,600 --> 00:01:18,210
client and yeah first what is TPM yes

00:01:12,659 --> 00:01:22,229
it's yet another sip and client then you

00:01:18,210 --> 00:01:26,759
may ask me why do we need a new sleep

00:01:22,229 --> 00:01:29,670
and client yeah yes we already have

00:01:26,759 --> 00:01:34,439
great different clients such as she

00:01:29,670 --> 00:01:38,369
founded p.m. sippin plus was sepa- and I

00:01:34,439 --> 00:01:43,800
always use CPM to install zipper modules

00:01:38,369 --> 00:01:49,160
it's awesome yeah but

00:01:43,800 --> 00:01:52,860
I am a little dissatisfied with CPM

00:01:49,160 --> 00:01:56,970
because if I'm installs modules in

00:01:52,860 --> 00:01:59,700
series it takes quite a lot of time to

00:01:56,970 --> 00:02:03,570
install a module that has many

00:01:59,700 --> 00:02:08,910
dependencies such as catalyst or this

00:02:03,570 --> 00:02:13,830
deal yeah they they have over 100 module

00:02:08,910 --> 00:02:17,220
dependencies yeah so my motivation is

00:02:13,830 --> 00:02:22,070
simple I want to install cheaper modules

00:02:17,220 --> 00:02:28,980
as fast as possible yeah so I created

00:02:22,070 --> 00:02:32,820
CPM I said GPM is a new sipping client

00:02:28,980 --> 00:02:36,090
but actually the PM is not a new see

00:02:32,820 --> 00:02:39,540
bang client but it uses cheaper em in

00:02:36,090 --> 00:02:48,110
parallel so that it can install super

00:02:39,540 --> 00:02:53,190
modules much Parsa so okay how fast is

00:02:48,110 --> 00:02:57,989
really CPM fast okay let's install black

00:02:53,190 --> 00:03:04,370
with CPM and CPM and compare their

00:02:57,989 --> 00:03:04,370
results okay first see if I am

00:03:05,280 --> 00:03:20,110
see if I am okay no test quiet and local

00:03:11,560 --> 00:03:23,830
live plot and time and go yeah

00:03:20,110 --> 00:03:27,120
I think you all familiar with this

00:03:23,830 --> 00:03:27,120
output yeah

00:03:45,960 --> 00:03:56,650
okay finished Oh sepa aim took 30

00:03:53,140 --> 00:04:06,490
seconds to install pluck remember 30

00:03:56,650 --> 00:04:14,100
seconds next CPM CPM install plaque with

00:04:06,490 --> 00:04:14,100
rebels message and time and go

00:04:22,130 --> 00:04:33,770
okay finished okay CPM took 10 seconds

00:04:28,130 --> 00:04:37,910
to instil black so CPM 30 seconds CPM 10

00:04:33,770 --> 00:04:41,750
seconds this shows CPMs is three times

00:04:37,910 --> 00:04:50,410
faster than si farm this is amazing

00:04:41,750 --> 00:04:58,220
isn't it yeah okay so so why CPM so far

00:04:50,410 --> 00:05:02,600
let's see the internal of CPM first

00:04:58,220 --> 00:05:07,840
let's think simple can we just use

00:05:02,600 --> 00:05:17,510
excerpts to paralyze sip I am just like

00:05:07,840 --> 00:05:21,920
that no we can't yeah things are more

00:05:17,510 --> 00:05:25,720
complicated first the module to be

00:05:21,920 --> 00:05:29,960
installed are not determined in advance

00:05:25,720 --> 00:05:36,380
we do not nor we do not know

00:05:29,960 --> 00:05:39,110
dependencies in advance yeah and even if

00:05:36,380 --> 00:05:43,550
you have a list approaches to be

00:05:39,110 --> 00:05:46,310
installed sepa and workouts us will be

00:05:43,550 --> 00:05:51,500
broken unless you synchronize deep I'm

00:05:46,310 --> 00:05:58,400
workers let's get back to black example

00:05:51,500 --> 00:06:02,210
flag has dependent flat part file share

00:05:58,400 --> 00:06:08,470
their in-store or HTTP body or HTTP

00:06:02,210 --> 00:06:13,700
header as its dependencies so if you

00:06:08,470 --> 00:06:18,860
install clark st body HTTP headers at

00:06:13,700 --> 00:06:22,970
the same time but the order is important

00:06:18,860 --> 00:06:25,480
we have to install file share their

00:06:22,970 --> 00:06:28,960
in-store before plug

00:06:25,480 --> 00:06:34,360
so we we have to synchronize the

00:06:28,960 --> 00:06:37,360
biomarkers in somewhere so so we have to

00:06:34,360 --> 00:06:40,480
first divide install process of

00:06:37,360 --> 00:06:45,990
supermodel into pieces that can be

00:06:40,480 --> 00:06:48,790
executed individually second and

00:06:45,990 --> 00:06:55,570
synchronize sipping workers in some way

00:06:48,790 --> 00:06:58,530
again we have to two things so I think

00:06:55,570 --> 00:07:04,240
divide install process of civil module

00:06:58,530 --> 00:07:08,010
after careful consideration i find we

00:07:04,240 --> 00:07:13,510
can divide the professed into whole jobs

00:07:08,010 --> 00:07:17,070
yeah resolving jobs and patching jobs

00:07:13,510 --> 00:07:21,330
and configuring jobs and installing jobs

00:07:17,070 --> 00:07:26,040
they are independent and they are

00:07:21,330 --> 00:07:26,040
executed at the same time yeah

00:07:32,070 --> 00:07:39,770
okay next how to synchronize the Bible

00:07:37,620 --> 00:07:39,770
records

00:07:42,370 --> 00:07:50,729
let's take a look at go language go

00:07:47,010 --> 00:07:54,850
introduces to concurrency primitives

00:07:50,729 --> 00:08:06,180
goroutines and channels they are very

00:07:54,850 --> 00:08:06,180
simple but very powerful okay and

00:08:06,639 --> 00:08:16,900
it is very easy to increase voters you

00:08:11,139 --> 00:08:21,400
can use ah yeah you can just make more

00:08:16,900 --> 00:08:24,610
channels and guru teens yeah and you can

00:08:21,400 --> 00:08:28,719
use select function to await market

00:08:24,610 --> 00:08:33,940
channels simultaneously this is amazing

00:08:28,719 --> 00:08:39,849
yeah okay can we adopt this idea to

00:08:33,940 --> 00:08:49,170
provide of course we can it is power

00:08:39,849 --> 00:08:53,740
yeah yeah so use Forks system core

00:08:49,170 --> 00:08:59,230
instead of the routine use pipe system

00:08:53,740 --> 00:09:03,610
core in instead of channel use select

00:08:59,230 --> 00:09:09,610
system core instead of select function

00:09:03,610 --> 00:09:15,190
in go yeah so we can adopt idea of God

00:09:09,610 --> 00:09:19,390
yeah so finery this is the internal of

00:09:15,190 --> 00:09:23,640
CBM or the architecture of CPM CPM

00:09:19,390 --> 00:09:31,529
consists of one master process and

00:09:23,640 --> 00:09:35,350
several co-workers first master process

00:09:31,529 --> 00:09:39,550
prepare pipes for workers by pipe system

00:09:35,350 --> 00:09:43,740
calls and lunch workers by Foulke system

00:09:39,550 --> 00:09:47,800
call and connect them with pipes and and

00:09:43,740 --> 00:09:50,800
loot yeah perfect job and send job to

00:09:47,800 --> 00:09:53,589
either workers if all workers are busy

00:09:50,800 --> 00:09:58,060
then wait them and receive result by

00:09:53,589 --> 00:10:01,060
select system core yeah

00:09:58,060 --> 00:10:01,060
ok

00:10:05,720 --> 00:10:19,100
finally I want to mention the road map

00:10:10,819 --> 00:10:25,189
of CPM yeah last year yup see Asia 2015

00:10:19,100 --> 00:10:31,730
I talked with tati co miyagawa the otha

00:10:25,189 --> 00:10:37,670
otha p.m. and about civil 2.0 which is

00:10:31,730 --> 00:10:43,879
called menlo then he said why don't you

00:10:37,670 --> 00:10:49,519
march CBM in to see by itself yeah I was

00:10:43,879 --> 00:10:54,259
very happy to hear that yeah so so if

00:10:49,519 --> 00:10:57,949
you all find CPM useful and stable then

00:10:54,259 --> 00:11:02,509
CPM should be merged into sieve I'm 2.0

00:10:57,949 --> 00:11:06,800
yeah before magic there are some

00:11:02,509 --> 00:11:12,019
programs that need to be resolved now

00:11:06,800 --> 00:11:17,949
especially I am worried about logging as

00:11:12,019 --> 00:11:22,910
I said CPM uses several co-workers and

00:11:17,949 --> 00:11:29,139
currently they emit log into the same

00:11:22,910 --> 00:11:33,670
file so the log is mixed and very messy

00:11:29,139 --> 00:11:39,490
do you accept this or do you have any

00:11:33,670 --> 00:11:44,089
solution for this i will highly

00:11:39,490 --> 00:11:48,850
appreciate your feedback ok

00:11:44,089 --> 00:11:53,809
try CPM now you can just type c by m

00:11:48,850 --> 00:11:56,410
dutch and threw up CPM yeah thanks

00:11:53,809 --> 00:11:56,410
that's all

00:12:08,630 --> 00:12:13,280
do you have any Christians

00:12:29,540 --> 00:12:32,259
we

00:12:34,339 --> 00:12:54,249
yes the log file oh yeah which are ya eh

00:12:46,839 --> 00:12:54,249
it's we can omit log blog too

00:12:56,990 --> 00:13:10,310
each worker yeah do you think it is

00:13:03,350 --> 00:13:14,410
better done to log into one file if you

00:13:10,310 --> 00:13:14,410
saw yeah I can change

00:13:36,940 --> 00:13:39,690
and you

00:13:53,880 --> 00:14:00,200
okay coupon them when you were doing the

00:13:57,870 --> 00:14:00,200
comparison

00:14:12,930 --> 00:14:17,790
CPM does not run tests by the mall

00:14:19,870 --> 00:14:31,180
is there any work to use carton if if

00:14:26,910 --> 00:14:38,790
CPAC be immersed into CM 2 point 0 then

00:14:31,180 --> 00:14:38,790
you can use with Carter yeah wait yeah

00:14:40,020 --> 00:14:43,020
and

00:14:49,950 --> 00:14:54,150
uh

00:14:52,130 --> 00:14:59,310
ok

00:14:54,150 --> 00:15:05,280
in this example we use five ah got ya

00:14:59,310 --> 00:15:05,280
pika we can change by option

00:15:23,740 --> 00:15:26,460
I can

00:15:29,360 --> 00:15:33,970
the realization

00:15:35,900 --> 00:15:43,640
oh ok

00:15:37,820 --> 00:15:51,860
yeah I I want to motorized and the

00:15:43,640 --> 00:15:57,730
architecture but it is very it for me it

00:15:51,860 --> 00:16:03,220
is very complicated so I I cannot

00:15:57,730 --> 00:16:03,220
motorized it yet so i hope so

00:16:07,230 --> 00:16:13,010
other questions

00:16:09,630 --> 00:16:13,010

YouTube URL: https://www.youtube.com/watch?v=CdpBV8BgPI4


