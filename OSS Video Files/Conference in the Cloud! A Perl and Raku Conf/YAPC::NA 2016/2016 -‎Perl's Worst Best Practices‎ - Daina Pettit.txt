Title: 2016 -‎Perl's Worst Best Practices‎ - Daina Pettit
Publication date: 2016-06-27
Playlist: YAPC::NA 2016
Description: 
	
Captions: 
	00:00:00,500 --> 00:00:05,850
this is a popular talk well at least

00:00:03,060 --> 00:00:07,560
it's a popular subject I you may be

00:00:05,850 --> 00:00:12,500
throwing things at me by the end of this

00:00:07,560 --> 00:00:12,500
I'm not sure so we'll see

00:00:13,009 --> 00:00:22,289
okay pearls worst best practices so my

00:00:18,720 --> 00:00:24,840
name is Dana Pettit of my email I work

00:00:22,289 --> 00:00:29,789
for Bluehost and so I have two email

00:00:24,840 --> 00:00:32,009
addresses my work email address at

00:00:29,789 --> 00:00:34,730
Bluehost comm and then I have my

00:00:32,009 --> 00:00:36,780
personal which is Dana at X mission comm

00:00:34,730 --> 00:00:39,840
I'm going to tell you a little bit about

00:00:36,780 --> 00:00:42,960
my biases so you kind of know where I'm

00:00:39,840 --> 00:00:45,000
coming from here I currently work for

00:00:42,960 --> 00:00:47,910
Bluehost which is larger endurance

00:00:45,000 --> 00:00:50,059
international group company that that

00:00:47,910 --> 00:00:52,620
group is actually a hosting

00:00:50,059 --> 00:00:54,960
conglomeration I used to work for Linux

00:00:52,620 --> 00:00:58,350
Network Silicon Graphics we did

00:00:54,960 --> 00:01:00,649
supercomputers Ingenix Optim United

00:00:58,350 --> 00:01:02,340
Health Group we did medical information

00:01:00,649 --> 00:01:05,360
Evans & Sutherland we did

00:01:02,340 --> 00:01:08,640
high-performance flight simulators

00:01:05,360 --> 00:01:11,909
Novell UNIX we're UNIX system labs we

00:01:08,640 --> 00:01:14,280
did poor management and I've worked for

00:01:11,909 --> 00:01:16,470
a lot of others as well my geek

00:01:14,280 --> 00:01:19,950
codeblock if any of you remember the

00:01:16,470 --> 00:01:22,890
geek codes for those of that you don't I

00:01:19,950 --> 00:01:27,869
will interpret that and that means that

00:01:22,890 --> 00:01:31,229
I grew up on BSD UNIX I strongly prefer

00:01:27,869 --> 00:01:35,250
Linux I don't prefer Windows or

00:01:31,229 --> 00:01:38,310
Microsoft at all I've been doing Perl

00:01:35,250 --> 00:01:41,250
since 94 I've been doing Emacs since

00:01:38,310 --> 00:01:42,810
1990 and I've been doing C since 82

00:01:41,250 --> 00:01:44,850
there's a lot of other things I've been

00:01:42,810 --> 00:01:48,000
doing but those are the main things now

00:01:44,850 --> 00:01:51,509
this presentation has a lot of opinion

00:01:48,000 --> 00:01:54,090
in it so just be aware that I may be

00:01:51,509 --> 00:01:57,210
completely wrong you may be right but

00:01:54,090 --> 00:01:59,280
you may be wrong also so we all may be

00:01:57,210 --> 00:02:01,170
just clueless noobs and have no clue

00:01:59,280 --> 00:02:02,460
what's actually going on but just be

00:02:01,170 --> 00:02:02,790
aware that we'll throw that out right

00:02:02,460 --> 00:02:05,310
there

00:02:02,790 --> 00:02:07,110
so our overview what we're going to do

00:02:05,310 --> 00:02:10,830
is we're going to talk about what the

00:02:07,110 --> 00:02:12,870
best practices actually means and then

00:02:10,830 --> 00:02:13,290
we're going to go over a summary of the

00:02:12,870 --> 00:02:17,579
Perl

00:02:13,290 --> 00:02:20,760
practices book and then we're gonna talk

00:02:17,579 --> 00:02:23,640
about what the worst stuff is yeah in my

00:02:20,760 --> 00:02:25,319
opinion and you may have your opinion as

00:02:23,640 --> 00:02:26,939
well we'll talk a little bit about Perl

00:02:25,319 --> 00:02:28,920
critic Perl critic was talked about this

00:02:26,939 --> 00:02:30,329
morning so I don't know to need to go

00:02:28,920 --> 00:02:33,150
into much depth on that but we'll talk a

00:02:30,329 --> 00:02:36,000
little bit about it in terms of best

00:02:33,150 --> 00:02:38,310
practices in that we're going to be

00:02:36,000 --> 00:02:41,040
covering and then at the very end we'll

00:02:38,310 --> 00:02:43,349
go to questions answers and rants so if

00:02:41,040 --> 00:02:48,269
you have your own favorite worst best

00:02:43,349 --> 00:02:51,359
practices let us know so why do we have

00:02:48,269 --> 00:02:53,159
best practices well the whole idea with

00:02:51,359 --> 00:02:56,340
best practices that we want to make our

00:02:53,159 --> 00:02:58,590
code more readable we want to make it

00:02:56,340 --> 00:03:00,959
more reliable I'm gonna make it easier

00:02:58,590 --> 00:03:03,299
to maintain all things that we would

00:03:00,959 --> 00:03:06,389
think would be good things so anything

00:03:03,299 --> 00:03:10,349
that makes our code less reliable more

00:03:06,389 --> 00:03:12,900
buggy that sort of thing we consider

00:03:10,349 --> 00:03:14,400
that a bad practice so we want to get

00:03:12,900 --> 00:03:18,030
away from those things so the best

00:03:14,400 --> 00:03:20,940
practices is an attempt to help us get

00:03:18,030 --> 00:03:22,590
away from those problems there's another

00:03:20,940 --> 00:03:25,319
point of view and that is the legal

00:03:22,590 --> 00:03:28,319
point of view and that Begg best best

00:03:25,319 --> 00:03:34,430
practices following them may save our

00:03:28,319 --> 00:03:37,879
skin and of course then there's the

00:03:34,430 --> 00:03:37,879
required Dilbert

00:03:39,160 --> 00:03:50,060
so hopefully we are not mediocre so the

00:03:45,860 --> 00:03:53,390
book Pearl best practices all of you

00:03:50,060 --> 00:03:55,850
have probably seen this some of you have

00:03:53,390 --> 00:03:57,890
actually read it there's a lot of really

00:03:55,850 --> 00:04:01,520
good stuff in there and we'll talk not

00:03:57,890 --> 00:04:04,490
about the really good stuff so much this

00:04:01,520 --> 00:04:06,500
was published in 2005 which means it was

00:04:04,490 --> 00:04:08,980
written over the years prior to that so

00:04:06,500 --> 00:04:11,570
it's actually older than just you know

00:04:08,980 --> 00:04:13,040
twelve or to ten or eleven twelve years

00:04:11,570 --> 00:04:20,000
old it's a little older than that

00:04:13,040 --> 00:04:21,890
actually the author is Damien Conway I

00:04:20,000 --> 00:04:29,690
didn't have his picture so I used a

00:04:21,890 --> 00:04:33,560
picture of Leonardo and in his book

00:04:29,690 --> 00:04:35,870
Damien says remember that each piece of

00:04:33,560 --> 00:04:37,250
advice is a guideline whether or not you

00:04:35,870 --> 00:04:38,840
agree with all of them doesn't matter

00:04:37,250 --> 00:04:40,160
what matters is that you become aware of

00:04:38,840 --> 00:04:42,290
the coding issue these guidelines

00:04:40,160 --> 00:04:44,510
address and this is actually very

00:04:42,290 --> 00:04:46,160
important because what this book

00:04:44,510 --> 00:04:49,430
actually does is it points out the

00:04:46,160 --> 00:04:50,990
issues we need to address what are the

00:04:49,430 --> 00:04:55,430
things that we need to be aware of the

00:04:50,990 --> 00:04:56,780
little gotchas things like context when

00:04:55,430 --> 00:04:57,980
you think through you have a scalar

00:04:56,780 --> 00:05:00,680
context it may turn out you actually

00:04:57,980 --> 00:05:03,320
have a list context these are important

00:05:00,680 --> 00:05:07,190
things to know about so this book helps

00:05:03,320 --> 00:05:08,600
us with that so we we express thanks to

00:05:07,190 --> 00:05:10,520
Damien for raising the issue for

00:05:08,600 --> 00:05:12,350
actually publishing the book it is a lot

00:05:10,520 --> 00:05:13,880
of work to publish if those of you that

00:05:12,350 --> 00:05:16,550
have ever published a book realized how

00:05:13,880 --> 00:05:18,620
much work it actually takes and I

00:05:16,550 --> 00:05:21,110
appreciate him defending his burrell

00:05:18,620 --> 00:05:25,150
pearl best practices and then changing

00:05:21,110 --> 00:05:25,150
his mind when it needs to change

00:05:26,950 --> 00:05:32,330
sometimes that our best practices do

00:05:29,450 --> 00:05:35,120
need to change libraries change

00:05:32,330 --> 00:05:38,240
languages change tools change our

00:05:35,120 --> 00:05:40,490
Hardware changes and so sometimes things

00:05:38,240 --> 00:05:42,440
that used to be good are no longer good

00:05:40,490 --> 00:05:45,590
anymore and so the best practices have

00:05:42,440 --> 00:05:47,480
to change with that so the Bert the best

00:05:45,590 --> 00:05:48,800
practices book being over ten years old

00:05:47,480 --> 00:05:52,280
back then

00:05:48,800 --> 00:05:56,560
pearl 5:8 was popular

00:05:52,280 --> 00:05:56,560
who's still running on Perl five eight

00:05:57,010 --> 00:06:05,300
less than a handful I yeah I yeah when I

00:06:01,790 --> 00:06:08,720
started I was on Perl four and there was

00:06:05,300 --> 00:06:10,820
no best practices out there and I still

00:06:08,720 --> 00:06:12,440
have systems I go on that have Perl five

00:06:10,820 --> 00:06:13,790
eight on them is the latest thing that

00:06:12,440 --> 00:06:16,010
we're allowed to have on that

00:06:13,790 --> 00:06:18,620
particularly most machines now I think

00:06:16,010 --> 00:06:21,560
are up to five ten or five fourteen if

00:06:18,620 --> 00:06:22,850
you're kind of running a legacy system I

00:06:21,560 --> 00:06:28,340
don't know very many people that are

00:06:22,850 --> 00:06:30,730
running on five 22 or anything newer so

00:06:28,340 --> 00:06:32,990
let's look at an overview of the book

00:06:30,730 --> 00:06:36,770
there's some dispute as to actually how

00:06:32,990 --> 00:06:38,990
many there's either 255 or 256 the book

00:06:36,770 --> 00:06:40,820
claims 256 and other list claims there's

00:06:38,990 --> 00:06:43,460
255 so I'm not gonna worry about exactly

00:06:40,820 --> 00:06:44,810
how many there are but there's 18

00:06:43,460 --> 00:06:46,250
groupings and you can see the kind of

00:06:44,810 --> 00:06:49,280
groupings we have we have things like

00:06:46,250 --> 00:06:50,360
code layout naming conventions values

00:06:49,280 --> 00:06:52,490
new expressions the first part of it

00:06:50,360 --> 00:06:55,490
tends to be stuff that stylistic issues

00:06:52,490 --> 00:06:57,950
things like you know how many spaces you

00:06:55,490 --> 00:07:00,080
have were how do you tab use spaces or

00:06:57,950 --> 00:07:02,030
tabs a lot of these kind of things then

00:07:00,080 --> 00:07:06,140
there's stuff that's very perl specific

00:07:02,030 --> 00:07:09,260
things like how you do references

00:07:06,140 --> 00:07:10,460
regular expressions object-oriented

00:07:09,260 --> 00:07:12,650
stuff there's a lot of that kind of

00:07:10,460 --> 00:07:13,760
stuff in there and we're not going to

00:07:12,650 --> 00:07:15,740
cover all these we're just going to

00:07:13,760 --> 00:07:18,169
cover some highlights and by the way if

00:07:15,740 --> 00:07:19,760
you want a per best-practices quick

00:07:18,169 --> 00:07:22,430
reference guide this is a beta available

00:07:19,760 --> 00:07:24,320
from Johann Romans you can go to this

00:07:22,430 --> 00:07:27,229
link at the bottom or you can just

00:07:24,320 --> 00:07:29,240
google the coral pearl best practices

00:07:27,229 --> 00:07:31,070
quick reference guide and you get this

00:07:29,240 --> 00:07:35,710
as a PDF it's two pages and has a

00:07:31,070 --> 00:07:38,780
summary of all the Perl best practices

00:07:35,710 --> 00:07:39,410
so let's look at first what we can

00:07:38,780 --> 00:07:43,460
ignore

00:07:39,410 --> 00:07:45,919
there's 163 items of the 256 that are

00:07:43,460 --> 00:07:47,570
general good programming practices that

00:07:45,919 --> 00:07:50,900
are applicable to any language not just

00:07:47,570 --> 00:07:53,120
Perl so there's a lot of these are

00:07:50,900 --> 00:07:55,640
discussed elsewhere and forums and books

00:07:53,120 --> 00:07:58,000
and so on we don't need to talk about

00:07:55,640 --> 00:08:01,669
those much here so we're not going to

00:07:58,000 --> 00:08:04,580
many of these are also style issues you

00:08:01,669 --> 00:08:06,020
know you're indenting your brace pairing

00:08:04,580 --> 00:08:07,669
up that sort of thing we

00:08:06,020 --> 00:08:10,520
care so much about that here and a lot

00:08:07,669 --> 00:08:12,199
of those can be automated and may be

00:08:10,520 --> 00:08:16,819
specific to a particular site so I'm not

00:08:12,199 --> 00:08:18,800
going to worry about those if you are

00:08:16,819 --> 00:08:21,349
concerned about some of those stylistic

00:08:18,800 --> 00:08:23,000
issues like formatting code layout you

00:08:21,349 --> 00:08:25,909
can use Perl tidy and those of you that

00:08:23,000 --> 00:08:29,900
have not used it it automates your code

00:08:25,909 --> 00:08:32,120
layout you basically give it a bunch of

00:08:29,900 --> 00:08:34,190
rules and then it will go and it'll not

00:08:32,120 --> 00:08:37,370
change your Perl code it changes your

00:08:34,190 --> 00:08:39,950
Perl spacing and indenting basically

00:08:37,370 --> 00:08:41,390
what it does so you can customize it to

00:08:39,950 --> 00:08:45,050
your particular look you can invoke it

00:08:41,390 --> 00:08:46,850
within an editor like VI or Emacs you

00:08:45,050 --> 00:08:48,560
can also up a bit implemented

00:08:46,850 --> 00:08:53,890
automatically with a source code

00:08:48,560 --> 00:08:55,940
management system something like CVS or

00:08:53,890 --> 00:08:57,890
subversion there's a whole bunch of them

00:08:55,940 --> 00:09:00,110
it'll do that so when you check code in

00:08:57,890 --> 00:09:01,160
it automatically converts it to the

00:09:00,110 --> 00:09:02,750
correct format and if you're really

00:09:01,160 --> 00:09:04,250
picky and you don't like working in a

00:09:02,750 --> 00:09:05,959
particular style that your company's

00:09:04,250 --> 00:09:08,120
chosen you can have your own pearl tidy

00:09:05,959 --> 00:09:13,459
that converts it back to your particular

00:09:08,120 --> 00:09:15,800
style the this is actually rule number

00:09:13,459 --> 00:09:19,190
22 in the book enforce your chosen

00:09:15,800 --> 00:09:22,430
layout style mechanically pearl tidy has

00:09:19,190 --> 00:09:24,380
problems though in that if you have if

00:09:22,430 --> 00:09:26,990
you're picky about columns like your

00:09:24,380 --> 00:09:29,720
hash fat commas lining up the equals

00:09:26,990 --> 00:09:33,890
greater than it will probably mess those

00:09:29,720 --> 00:09:35,570
up so just be aware that there is that

00:09:33,890 --> 00:09:37,760
particular problem with pearl tidy it's

00:09:35,570 --> 00:09:39,829
not real good with some of those kind of

00:09:37,760 --> 00:09:41,329
things it's really good but the first

00:09:39,829 --> 00:09:43,430
thing on the on a particular line

00:09:41,329 --> 00:09:44,899
getting those lined up right and

00:09:43,430 --> 00:09:46,670
sometimes a little difficult to get

00:09:44,899 --> 00:09:49,339
those to work exactly right so just be

00:09:46,670 --> 00:09:50,959
aware that pearl tidy is one thing that

00:09:49,339 --> 00:09:54,290
you can use to solve some of the

00:09:50,959 --> 00:09:56,300
stylistic issues so really what we want

00:09:54,290 --> 00:09:58,250
to talk about here there's 92 items that

00:09:56,300 --> 00:09:59,630
are pearl specific these were going to

00:09:58,250 --> 00:10:00,829
focus on but we don't have time to go

00:09:59,630 --> 00:10:03,980
over all of them so just going to talk

00:10:00,829 --> 00:10:07,430
about a few of them so let's go ahead

00:10:03,980 --> 00:10:09,620
and dig right in the first grouping

00:10:07,430 --> 00:10:11,600
values and expressions there's 18 items

00:10:09,620 --> 00:10:17,740
we're just going to whine about one of

00:10:11,600 --> 00:10:20,480
them don't use bare words number 45

00:10:17,740 --> 00:10:23,180
now bare words are when you have a

00:10:20,480 --> 00:10:25,420
essentially an unquoted string and pearl

00:10:23,180 --> 00:10:28,339
has to figure out what to do with it and

00:10:25,420 --> 00:10:29,779
by default it will try to make it into a

00:10:28,339 --> 00:10:32,120
string but there's times where the

00:10:29,779 --> 00:10:33,529
context is such that it says oh this

00:10:32,120 --> 00:10:36,980
might be something else this might be a

00:10:33,529 --> 00:10:39,500
function call or a subroutine call and

00:10:36,980 --> 00:10:41,290
so it tries to make that into a call and

00:10:39,500 --> 00:10:44,180
so sometimes you end up with an

00:10:41,290 --> 00:10:46,100
misinterpretation because of that so to

00:10:44,180 --> 00:10:49,300
avoid that problem you say use strict

00:10:46,100 --> 00:10:52,160
subs and that solves that problem

00:10:49,300 --> 00:10:54,019
however my whining about this isn't

00:10:52,160 --> 00:10:55,490
about this particular part it's just the

00:10:54,019 --> 00:10:58,910
title is misleading

00:10:55,490 --> 00:11:00,649
don't use bare words because really what

00:10:58,910 --> 00:11:02,690
we really want to say is that bare words

00:11:00,649 --> 00:11:07,910
are okay we just don't want to get them

00:11:02,690 --> 00:11:10,279
showing up as subroutines so an example

00:11:07,910 --> 00:11:12,620
of where we can actually say use strict

00:11:10,279 --> 00:11:14,389
subs and still use bare words is in the

00:11:12,620 --> 00:11:17,300
initialization of a hash or referring to

00:11:14,389 --> 00:11:19,670
a key and a hash so in the example the

00:11:17,300 --> 00:11:22,010
colors hash here we have green and

00:11:19,670 --> 00:11:24,430
yellow as our hash keys we don't have to

00:11:22,010 --> 00:11:27,339
quote them we could but we don't have to

00:11:24,430 --> 00:11:30,620
and it's still okay with you strict sub

00:11:27,339 --> 00:11:33,230
so we really should have missed NIT that

00:11:30,620 --> 00:11:36,980
have the rule renamed something about

00:11:33,230 --> 00:11:40,060
avoiding bear word subs rather than just

00:11:36,980 --> 00:11:40,060
avoiding bare words entirely

00:11:43,660 --> 00:11:49,210
the next one documentation there's 14

00:11:47,470 --> 00:11:52,390
items we're going to whine about two of

00:11:49,210 --> 00:11:55,780
them and this one I can actually go

00:11:52,390 --> 00:11:57,970
either way on these two are one is keep

00:11:55,780 --> 00:12:01,510
all your user documentation in a single

00:11:57,970 --> 00:12:03,250
place within your source file and then

00:12:01,510 --> 00:12:07,060
the other is keep all your pod

00:12:03,250 --> 00:12:10,420
documentation at the end of the file now

00:12:07,060 --> 00:12:14,100
I don't mind having it at the end but it

00:12:10,420 --> 00:12:18,790
seems to me that scattering it around

00:12:14,100 --> 00:12:20,710
can create problems or not the rationale

00:12:18,790 --> 00:12:22,960
that damien uses a scattering user

00:12:20,710 --> 00:12:25,680
documentation amongst code tends to lead

00:12:22,960 --> 00:12:28,300
to inconsistent and outdated

00:12:25,680 --> 00:12:31,150
documentation meaning you forget to

00:12:28,300 --> 00:12:33,520
update certain things and so if we put

00:12:31,150 --> 00:12:34,930
at the end its together but it's out of

00:12:33,520 --> 00:12:36,850
the way the code as well so you don't

00:12:34,930 --> 00:12:39,040
stumble over that your documentation

00:12:36,850 --> 00:12:41,020
trying to find your code I I had a

00:12:39,040 --> 00:12:43,630
co-worker once who brought some

00:12:41,020 --> 00:12:48,160
documents some documentation he brought

00:12:43,630 --> 00:12:49,780
some code from another company where 98%

00:12:48,160 --> 00:12:51,580
of the lines in the file were

00:12:49,780 --> 00:12:53,260
documentation there was two percent that

00:12:51,580 --> 00:12:55,390
was actually code it was hard to find

00:12:53,260 --> 00:12:57,370
the code so I can see why it would be

00:12:55,390 --> 00:13:02,560
important to have the code right up

00:12:57,370 --> 00:13:04,600
front but on this one I can go either

00:13:02,560 --> 00:13:06,190
way I could say yeah I can put all at

00:13:04,600 --> 00:13:08,080
the end and group it all together but I

00:13:06,190 --> 00:13:10,660
kind of like having all the subroutine

00:13:08,080 --> 00:13:12,700
documentation with each subroutine so

00:13:10,660 --> 00:13:15,490
when I modify the subroutine I will

00:13:12,700 --> 00:13:17,050
change the documentation there but in

00:13:15,490 --> 00:13:18,460
some cases some people may not like that

00:13:17,050 --> 00:13:20,500
and they may not forget to update the

00:13:18,460 --> 00:13:22,510
documentation and I kind of don't like

00:13:20,500 --> 00:13:23,890
having it all in one place at the end

00:13:22,510 --> 00:13:25,240
because it's far away from everything

00:13:23,890 --> 00:13:27,340
and I usually end up missing something

00:13:25,240 --> 00:13:29,470
but having it all at the end and as one

00:13:27,340 --> 00:13:31,060
group makes it more consistent so I kind

00:13:29,470 --> 00:13:34,840
of go either way on this one this was an

00:13:31,060 --> 00:13:37,620
I'm not real bothered by lot however

00:13:34,840 --> 00:13:42,250
that snicks group bothers me a lot

00:13:37,620 --> 00:13:45,660
regular expressions there's 24 items I'm

00:13:42,250 --> 00:13:45,660
gonna whine about five of them

00:13:47,100 --> 00:13:56,110
always use the X flag Damien's rationale

00:13:53,410 --> 00:13:57,790
for using X flag by the way the X flag

00:13:56,110 --> 00:13:59,170
for these are not deep into regular

00:13:57,790 --> 00:14:01,210
expressions allows you to put comments

00:13:59,170 --> 00:14:05,260
and white spaces inside of your regular

00:14:01,210 --> 00:14:08,910
expression patterns which means that

00:14:05,260 --> 00:14:12,550
spaces and pound signs are ignored

00:14:08,910 --> 00:14:14,830
so his rationale is that large complex

00:14:12,550 --> 00:14:17,800
regular expressions will need comments

00:14:14,830 --> 00:14:19,570
and that's probably true and that

00:14:17,800 --> 00:14:21,250
regular expressions always grow so

00:14:19,570 --> 00:14:23,920
you're eventually going to need to have

00:14:21,250 --> 00:14:26,290
this anyway and don't set a minimum size

00:14:23,920 --> 00:14:28,150
just start it at whatever you have

00:14:26,290 --> 00:14:30,970
always use X so you're always going to

00:14:28,150 --> 00:14:35,740
be ready for the expansion and I say

00:14:30,970 --> 00:14:38,980
nonsense large complex regular

00:14:35,740 --> 00:14:41,680
expressions might need comments but they

00:14:38,980 --> 00:14:43,180
do not always grow and most regular

00:14:41,680 --> 00:14:46,210
expressions are fairly small they're

00:14:43,180 --> 00:14:47,710
twenty characters or less and the number

00:14:46,210 --> 00:14:51,280
of times like I've had regular

00:14:47,710 --> 00:14:53,350
expressions grow is almost a zero once

00:14:51,280 --> 00:14:56,320
you write them they're done I just don't

00:14:53,350 --> 00:14:59,710
see them growing and one of the big

00:14:56,320 --> 00:15:02,080
problems is the X mod X flag doesn't

00:14:59,710 --> 00:15:04,090
just ignore white spaces it also ignores

00:15:02,080 --> 00:15:06,040
the pound sign so if you have pound

00:15:04,090 --> 00:15:08,770
signs in your regular expression it's

00:15:06,040 --> 00:15:11,490
going to change the way your regular

00:15:08,770 --> 00:15:13,810
expression is evaluated so that is bad

00:15:11,490 --> 00:15:16,110
but the biggest hang-up I have with the

00:15:13,810 --> 00:15:19,720
whole thing is every time I run into a

00:15:16,110 --> 00:15:22,990
flag at the end of a match or substitute

00:15:19,720 --> 00:15:25,030
I have to think why is this flag here

00:15:22,990 --> 00:15:27,100
what are they expecting in the regular

00:15:25,030 --> 00:15:28,600
expression that I need to have this flag

00:15:27,100 --> 00:15:33,160
and when there's a flag there that is

00:15:28,600 --> 00:15:35,310
not used it bugs the heck out of me so

00:15:33,160 --> 00:15:37,540
for example I somebody's looking for

00:15:35,310 --> 00:15:44,560
punctuation characters and puts an eye

00:15:37,540 --> 00:15:46,150
at the end ignoring case why why so this

00:15:44,560 --> 00:15:48,310
is just one of those that it makes takes

00:15:46,150 --> 00:15:50,860
me longer to read the regular expression

00:15:48,310 --> 00:15:54,210
code if there's an X there because I

00:15:50,860 --> 00:15:54,210
have to figure out why it's there

00:15:54,830 --> 00:16:00,620
so my conclusion is that we should only

00:15:57,800 --> 00:16:04,100
use X when it is actually needed

00:16:00,620 --> 00:16:05,899
I find it takes and it takes an order of

00:16:04,100 --> 00:16:12,950
magnitude longer for me to read the code

00:16:05,899 --> 00:16:13,690
when it has unneeded modifiers there the

00:16:12,950 --> 00:16:19,070
next one

00:16:13,690 --> 00:16:20,720
always use the M flag now the rationale

00:16:19,070 --> 00:16:23,300
is that people mistakenly think that

00:16:20,720 --> 00:16:29,750
carrot and dollar sign mean beginning

00:16:23,300 --> 00:16:31,579
and end of line and that we need to use

00:16:29,750 --> 00:16:34,880
M to change the regular expressions

00:16:31,579 --> 00:16:38,620
meanings so that carrot and dollar sign

00:16:34,880 --> 00:16:38,620
actually mean beginning and end of line

00:16:39,279 --> 00:16:44,930
nonsense

00:16:41,440 --> 00:16:47,959
learn the language dollar and pounds I'm

00:16:44,930 --> 00:16:50,120
a beginning and end of string with

00:16:47,959 --> 00:16:54,529
dollar signs sometimes meaning a

00:16:50,120 --> 00:16:57,649
character term so it'll match either a

00:16:54,529 --> 00:17:02,510
character turn or the position at the

00:16:57,649 --> 00:17:06,079
end of the string the M is rarely needed

00:17:02,510 --> 00:17:07,429
and it really only makes a difference if

00:17:06,079 --> 00:17:13,010
you have embedded new lines in your

00:17:07,429 --> 00:17:14,360
string and new programmers rarely have

00:17:13,010 --> 00:17:17,230
embedded new lines in their strings

00:17:14,360 --> 00:17:19,429
they're usually doing line based input

00:17:17,230 --> 00:17:22,910
so they're if they have a new line it's

00:17:19,429 --> 00:17:25,130
at the very end and ended ition just

00:17:22,910 --> 00:17:27,079
like the x flag it takes longer to read

00:17:25,130 --> 00:17:33,230
the read regular expression if there's

00:17:27,079 --> 00:17:35,780
an M their conclusion learn about how

00:17:33,230 --> 00:17:39,650
the language works only use em when it's

00:17:35,780 --> 00:17:42,010
actually needed I think you can see a

00:17:39,650 --> 00:17:42,010
pattern here

00:17:42,370 --> 00:17:46,480
always use the S flag

00:17:47,630 --> 00:17:52,160
everyone seems to think that dot means

00:17:49,940 --> 00:17:55,370
any character it does not mean any

00:17:52,160 --> 00:17:58,460
character it means something else but

00:17:55,370 --> 00:18:06,080
MIT but /s will make it mean any

00:17:58,460 --> 00:18:08,450
character using the the s is nonsense we

00:18:06,080 --> 00:18:11,390
need to learn the language and realize

00:18:08,450 --> 00:18:15,230
that dot means any character except

00:18:11,390 --> 00:18:17,060
newline and we're on a different

00:18:15,230 --> 00:18:19,220
operating system it will change to the

00:18:17,060 --> 00:18:21,590
appropriate meaning of what a newline

00:18:19,220 --> 00:18:24,680
means whether it's a newline character a

00:18:21,590 --> 00:18:28,610
line feed and explicit character turn or

00:18:24,680 --> 00:18:32,240
both in addition this one is also rarely

00:18:28,610 --> 00:18:35,740
needed and it only makes a difference if

00:18:32,240 --> 00:18:39,770
we have embedded new lines in our string

00:18:35,740 --> 00:18:40,940
and again noobs rarely have embedded new

00:18:39,770 --> 00:18:44,810
lines in their strings and if they do

00:18:40,940 --> 00:18:46,820
there at the end and it again it only it

00:18:44,810 --> 00:18:51,170
takes us longer to read the code because

00:18:46,820 --> 00:18:54,140
it has the s their conclusion is learn

00:18:51,170 --> 00:18:57,290
about what s actually means what dot

00:18:54,140 --> 00:19:02,450
actually means and use s only when

00:18:57,290 --> 00:19:04,490
needed now if you combine X M s which is

00:19:02,450 --> 00:19:06,770
what is recommended it's actually slows

00:19:04,490 --> 00:19:08,690
down your execution by about 3% it

00:19:06,770 --> 00:19:10,550
depends on some other factors but it

00:19:08,690 --> 00:19:13,250
actually slows your code down slightly

00:19:10,550 --> 00:19:16,070
it's not significant but in particular

00:19:13,250 --> 00:19:18,800
performance applications it might be

00:19:16,070 --> 00:19:20,360
enough to make a difference but it

00:19:18,800 --> 00:19:21,830
significantly slows the readers

00:19:20,360 --> 00:19:22,940
understanding and that's one of the

00:19:21,830 --> 00:19:26,000
things that we should be more concerned

00:19:22,940 --> 00:19:28,790
about in addition it can break existing

00:19:26,000 --> 00:19:31,160
code so when the Perl best practices

00:19:28,790 --> 00:19:34,280
book came out I had a co-worker that was

00:19:31,160 --> 00:19:36,020
excited about this stuff he said I'm

00:19:34,280 --> 00:19:38,510
gonna go put X M s on all our regular

00:19:36,020 --> 00:19:40,250
expressions so he took our code base and

00:19:38,510 --> 00:19:42,530
did that and it broke everything

00:19:40,250 --> 00:19:46,400
horribly because it changed what things

00:19:42,530 --> 00:19:48,520
meant so he apologized he took it all

00:19:46,400 --> 00:19:48,520
out

00:19:52,170 --> 00:19:58,530
another one I don't like regular

00:19:55,480 --> 00:20:01,630
expression of lags consider mandating it

00:19:58,530 --> 00:20:08,490
forcing everybody to have XMS without it

00:20:01,630 --> 00:20:10,270
actually showing up that is sinister

00:20:08,490 --> 00:20:12,670
don't do this

00:20:10,270 --> 00:20:15,070
I hate hidden settings things that you

00:20:12,670 --> 00:20:17,590
have to dig for to find out what the

00:20:15,070 --> 00:20:19,810
real thing is going on it can be harder

00:20:17,590 --> 00:20:22,680
to debug until you realize that the that

00:20:19,810 --> 00:20:26,170
the Reg XP Auto Flags is what's going on

00:20:22,680 --> 00:20:31,300
please don't pollute with this stuff bad

00:20:26,170 --> 00:20:33,490
idea next one don't use any de limiters

00:20:31,300 --> 00:20:36,900
other than forward slashes or the curly

00:20:33,490 --> 00:20:39,940
braces for our regular expressions

00:20:36,900 --> 00:20:42,840
operators the rationale is to be

00:20:39,940 --> 00:20:47,500
consistent and I can appreciate that and

00:20:42,840 --> 00:20:49,660
to don't be cruel the cruel was the

00:20:47,500 --> 00:20:51,730
hairiest Truman thing in the book if you

00:20:49,660 --> 00:20:55,120
saw that example where you could use a

00:20:51,730 --> 00:20:57,370
letter A character that's a letter to be

00:20:55,120 --> 00:20:58,990
a delimiter that's bizarre

00:20:57,370 --> 00:21:01,330
I don't know why anybody do that that

00:20:58,990 --> 00:21:04,180
would be considered being cruel my

00:21:01,330 --> 00:21:09,400
complaint about this is that braces are

00:21:04,180 --> 00:21:10,750
seriously overused in Perl we use them

00:21:09,400 --> 00:21:13,750
for lots of different things we don't

00:21:10,750 --> 00:21:16,390
need yet another thing and we're not

00:21:13,750 --> 00:21:17,830
going to be cruel we're gonna be having

00:21:16,390 --> 00:21:19,780
to come back to this code later so we're

00:21:17,830 --> 00:21:21,280
not gonna make it cruel if we want to be

00:21:19,780 --> 00:21:27,460
cruel there's lots other things we can

00:21:21,280 --> 00:21:29,410
do especially with Perl so a conclusion

00:21:27,460 --> 00:21:30,880
on this one use the limiters that make

00:21:29,410 --> 00:21:32,440
sense for that particular regular

00:21:30,880 --> 00:21:35,110
expression which might be the curly

00:21:32,440 --> 00:21:36,520
braces but it might be vertical bars it

00:21:35,110 --> 00:21:37,750
might be pound signs that might be

00:21:36,520 --> 00:21:39,430
percent size might be some other

00:21:37,750 --> 00:21:41,320
character I've seen just about every

00:21:39,430 --> 00:21:44,380
character that's a punctuation character

00:21:41,320 --> 00:21:47,160
used and in those cases they usually

00:21:44,380 --> 00:21:47,160
make sense

00:21:47,610 --> 00:21:53,650
now there's since so much time has

00:21:50,560 --> 00:21:57,340
passed Dame has actually changed his

00:21:53,650 --> 00:22:00,310
mind on some of the write on the some of

00:21:57,340 --> 00:22:02,070
the rules the best practices and so I'll

00:22:00,310 --> 00:22:04,890
talk about a little bit of those

00:22:02,070 --> 00:22:08,350
and this is one that actually I actually

00:22:04,890 --> 00:22:10,990
agree with that that I didn't agree with

00:22:08,350 --> 00:22:12,490
when it came out initially they used 78

00:22:10,990 --> 00:22:16,899
column lines I've been using a hundred

00:22:12,490 --> 00:22:19,570
and thirty or more column lines for 20

00:22:16,899 --> 00:22:22,149
years so I'm kind of surprised he was

00:22:19,570 --> 00:22:25,299
saying limit us to seventy eight columns

00:22:22,149 --> 00:22:30,309
back twelve years ago that was kind of

00:22:25,299 --> 00:22:31,809
odd but his recommendation now is use

00:22:30,309 --> 00:22:34,179
whatever limit works for you he

00:22:31,809 --> 00:22:37,960
recommends maybe 120 but didn't really

00:22:34,179 --> 00:22:41,830
say that's really a hard limit I suggest

00:22:37,960 --> 00:22:46,270
no limit you should do what makes sense

00:22:41,830 --> 00:22:48,190
for you I actually suggested that to a

00:22:46,270 --> 00:22:49,539
co-worker that there should be no limit

00:22:48,190 --> 00:22:52,120
they he wanted to have a limit on the

00:22:49,539 --> 00:22:54,100
number of columns and I said I don't see

00:22:52,120 --> 00:22:56,649
a reason to have a limit we've got two

00:22:54,100 --> 00:22:58,779
screens why can't we run an editor

00:22:56,649 --> 00:23:00,820
across the width of two screens if we

00:22:58,779 --> 00:23:02,470
need to I don't think we would much but

00:23:00,820 --> 00:23:04,059
sometimes you want to have something

00:23:02,470 --> 00:23:05,200
really wide lifter the format works well

00:23:04,059 --> 00:23:10,120
and I said why should you put an

00:23:05,200 --> 00:23:11,830
arbitrary limit he got really upset but

00:23:10,120 --> 00:23:13,720
I I just thought that we didn't really

00:23:11,830 --> 00:23:14,980
need to set a hard limit and chances are

00:23:13,720 --> 00:23:21,789
if you set a limit somebody's going to

00:23:14,980 --> 00:23:24,370
break it now there's some of the modules

00:23:21,789 --> 00:23:25,690
that are now kind of obsolete there's

00:23:24,370 --> 00:23:27,789
better ones that have replaced some

00:23:25,690 --> 00:23:29,710
Damon's recommendations so we where we

00:23:27,789 --> 00:23:33,220
used to you used to recommend attribute

00:23:29,710 --> 00:23:35,980
type now typed I instead we used to

00:23:33,220 --> 00:23:38,830
recommend base use parent instead class

00:23:35,980 --> 00:23:41,679
standard class standard util use object

00:23:38,830 --> 00:23:46,570
inside out moose or moose X inside out

00:23:41,679 --> 00:23:48,460
or do s the the thing is inside out is

00:23:46,570 --> 00:23:49,929
kind of falling out of favor a little

00:23:48,460 --> 00:23:52,029
bit here I think Damian thought that

00:23:49,929 --> 00:23:56,289
that would take off and it really hasn't

00:23:52,029 --> 00:23:58,059
so I'm kind of torn on this so and I I

00:23:56,289 --> 00:24:02,559
don't if I can say to this group but I

00:23:58,059 --> 00:24:04,750
really don't like moose the the problem

00:24:02,559 --> 00:24:07,450
that we have at where I work with moose

00:24:04,750 --> 00:24:10,750
is it hit the performance hit on startup

00:24:07,450 --> 00:24:12,650
is so slow it's just unacceptable for

00:24:10,750 --> 00:24:15,910
the kind of work that we're doing

00:24:12,650 --> 00:24:19,190
and previous place that I worked we had

00:24:15,910 --> 00:24:20,870
we pulled in most and we thought oh this

00:24:19,190 --> 00:24:22,700
is cool look at the stuff cool stuff we

00:24:20,870 --> 00:24:26,690
can do with moose it hardly even looks

00:24:22,700 --> 00:24:30,230
like pearl anymore and all sudden our

00:24:26,690 --> 00:24:32,180
rpms took forever to build and so we

00:24:30,230 --> 00:24:34,040
decided maybe that was a bad idea

00:24:32,180 --> 00:24:35,990
now performance issues are supposed to

00:24:34,040 --> 00:24:39,710
be improving at some point but right now

00:24:35,990 --> 00:24:41,830
I'm personally I'm not ready for that to

00:24:39,710 --> 00:24:47,320
do something quite like moose

00:24:41,830 --> 00:24:47,320
contextual return object result instead

00:24:47,590 --> 00:24:52,610
set of data dumper which is still ok

00:24:50,179 --> 00:24:54,880
data dump has no object oriented

00:24:52,610 --> 00:25:03,800
overhead and so's a little bit better

00:24:54,880 --> 00:25:05,300
and then D prof. de velde prof I'd use

00:25:03,800 --> 00:25:07,910
that a lot to demo to people how to

00:25:05,300 --> 00:25:10,520
profile and then I found NYT prof and

00:25:07,910 --> 00:25:13,670
I'm surprised that deep prof is stuck

00:25:10,520 --> 00:25:16,340
around so long and mighty prof. is so

00:25:13,670 --> 00:25:17,570
much better and thank you Tim for riding

00:25:16,340 --> 00:25:21,170
that Ivan sees Tim even at the

00:25:17,570 --> 00:25:23,420
conference I know ok but he was here a

00:25:21,170 --> 00:25:25,520
couple years ago and anyway NYT prof is

00:25:23,420 --> 00:25:29,240
awesome so if you haven't used it and

00:25:25,520 --> 00:25:31,160
you need to profile use that and by the

00:25:29,240 --> 00:25:35,020
way the summary of Tim's talk from two

00:25:31,160 --> 00:25:36,860
years about NYT prof is don't use it and

00:25:35,020 --> 00:25:39,740
the reason why is you shouldn't be

00:25:36,860 --> 00:25:43,670
profiling unless you actually need to

00:25:39,740 --> 00:25:44,990
profile and rarely do we actually need

00:25:43,670 --> 00:25:47,929
to profile in my experience the

00:25:44,990 --> 00:25:49,550
profiling is usually the thing that you

00:25:47,929 --> 00:25:51,710
weren't thinking about is the thing that

00:25:49,550 --> 00:25:53,900
needs to be optimized not where you

00:25:51,710 --> 00:25:56,030
think the actual bottom is you're

00:25:53,900 --> 00:25:58,340
usually wrong so we should be using

00:25:56,030 --> 00:26:04,250
fatal Auto die instead of fatal and IO

00:25:58,340 --> 00:26:07,309
prompter instead of IO prompt parse

00:26:04,250 --> 00:26:09,260
rectus Sant there's there's some

00:26:07,309 --> 00:26:11,090
alternatives there that can help us a

00:26:09,260 --> 00:26:13,429
little bit more although partial

00:26:11,090 --> 00:26:20,690
repetition is still good req XP grammars

00:26:13,429 --> 00:26:24,230
and marpa Perl 6 export adders use sub

00:26:20,690 --> 00:26:26,150
exporter exporter tiny instead exporters

00:26:24,230 --> 00:26:29,900
simple if you like the Perl 6 types

00:26:26,150 --> 00:26:31,250
stuff constants Ted of read-only I'm not

00:26:29,900 --> 00:26:34,820
it was never a big fan of read-only

00:26:31,250 --> 00:26:37,280
anyway there's there's a lot more that

00:26:34,820 --> 00:26:38,420
Damon has changes mine on on some of

00:26:37,280 --> 00:26:40,430
these things I don't have time to go

00:26:38,420 --> 00:26:42,500
over all those and I think I'd put all

00:26:40,430 --> 00:26:44,270
you to sleep if you want more

00:26:42,500 --> 00:26:46,820
information about those you can go to

00:26:44,270 --> 00:26:48,320
Pearl even better practices by Conway

00:26:46,820 --> 00:26:53,240
and I'm not sure how you can even get

00:26:48,320 --> 00:26:55,280
that I have a copy here that was given

00:26:53,240 --> 00:26:57,800
at a presentation he gave three years

00:26:55,280 --> 00:26:59,150
ago and I think it's self-published so

00:26:57,800 --> 00:27:01,510
you'd have to talk to him to see where

00:26:59,150 --> 00:27:06,710
to actually get that

00:27:01,510 --> 00:27:08,540
however Damien is a verdun a very smart

00:27:06,710 --> 00:27:11,720
thing and that is that he's released a

00:27:08,540 --> 00:27:13,850
set of videos through O'Reilly you can

00:27:11,720 --> 00:27:16,730
watch four best modern pearl best

00:27:13,850 --> 00:27:18,350
practices what it's called and the nice

00:27:16,730 --> 00:27:24,020
thing about this is that he can update

00:27:18,350 --> 00:27:25,430
it periodically Oh Leonardo okay so he

00:27:24,020 --> 00:27:27,320
can update it so he doesn't have to

00:27:25,430 --> 00:27:30,260
worry about things getting out of date

00:27:27,320 --> 00:27:33,820
so much and and looking a little bit

00:27:30,260 --> 00:27:33,820
stale so that's actually kind of nice

00:27:34,400 --> 00:27:42,530
let's look at pearl critic pearl critic

00:27:38,630 --> 00:27:45,290
is a static code analyzer it doesn't

00:27:42,530 --> 00:27:46,640
modify your code it's usually invoked as

00:27:45,290 --> 00:27:50,620
part of your source code management

00:27:46,640 --> 00:27:57,110
system something like through git or

00:27:50,620 --> 00:28:00,070
subversion CVS and so on it can be also

00:27:57,110 --> 00:28:03,910
invoked by some other systems like

00:28:00,070 --> 00:28:06,920
Hudson or some of those kind of things

00:28:03,910 --> 00:28:10,970
it has in the hundred and forty through

00:28:06,920 --> 00:28:14,780
three rules in the base or I should say

00:28:10,970 --> 00:28:16,310
the Corporal critic distribution and you

00:28:14,780 --> 00:28:20,390
can add your own rules however what's

00:28:16,310 --> 00:28:27,190
interesting is it only covers sixty six

00:28:20,390 --> 00:28:31,700
of the 256 pro best practices book and

00:28:27,190 --> 00:28:35,290
only 33 of the 92 perl specific items

00:28:31,700 --> 00:28:35,290
are covered by Perl critic

00:28:42,480 --> 00:28:49,350
there's really no way to automatically

00:28:46,100 --> 00:28:53,180
cover all the Pearl best practices I

00:28:49,350 --> 00:28:55,860
mean how do you get Pearl Critic to to

00:28:53,180 --> 00:29:01,230
automate something like don't be clever

00:28:55,860 --> 00:29:03,360
I don't know how you'd do that so

00:29:01,230 --> 00:29:09,420
there's really a lot that they cannot do

00:29:03,360 --> 00:29:10,920
so only forty four six percent of the

00:29:09,420 --> 00:29:11,880
the pro critic rules are actually

00:29:10,920 --> 00:29:14,970
Damien's

00:29:11,880 --> 00:29:17,160
or based on Damien's rules the other

00:29:14,970 --> 00:29:21,660
seventy seven rules are contributed by

00:29:17,160 --> 00:29:24,840
others at first that really bothered me

00:29:21,660 --> 00:29:27,770
because I thought somebody else who has

00:29:24,840 --> 00:29:30,150
no authority as if Damien has authority

00:29:27,770 --> 00:29:32,160
somebody else who has no authority is

00:29:30,150 --> 00:29:34,080
making up rules for how whether my code

00:29:32,160 --> 00:29:36,210
is good or not and some of these are

00:29:34,080 --> 00:29:42,900
actually really good rules and some are

00:29:36,210 --> 00:29:46,830
somebody's opinion so you get to pick so

00:29:42,900 --> 00:29:49,230
the the nice thing about about pearl

00:29:46,830 --> 00:29:51,180
critic is it really isn't there to be

00:29:49,230 --> 00:29:54,720
the hammer coming down and enforcing

00:29:51,180 --> 00:29:56,970
rules although it can its real purpose

00:29:54,720 --> 00:29:59,100
and along with the Pearl best practices

00:29:56,970 --> 00:30:02,640
book is to make aware of the potential

00:29:59,100 --> 00:30:04,020
problems you know where are the things

00:30:02,640 --> 00:30:06,840
that we can run into that are a problem

00:30:04,020 --> 00:30:10,670
and it gets us to start talking about

00:30:06,840 --> 00:30:10,670
them on our development teams

00:30:13,100 --> 00:30:18,660
unfortunately or maybe fortunately what

00:30:16,680 --> 00:30:21,150
I've seen happen with pearl critic is it

00:30:18,660 --> 00:30:28,710
gets automated as part of the source

00:30:21,150 --> 00:30:31,290
management system and then ignored so

00:30:28,710 --> 00:30:36,600
one place I worked we had the pearl

00:30:31,290 --> 00:30:38,490
critic would take a score of our code or

00:30:36,600 --> 00:30:40,620
each particular module and then it would

00:30:38,490 --> 00:30:42,540
record that score and then the next time

00:30:40,620 --> 00:30:44,280
we modified it would it would compare it

00:30:42,540 --> 00:30:48,420
against the previous score if we got a

00:30:44,280 --> 00:30:52,800
worse score then it would complain and

00:30:48,420 --> 00:30:54,830
the build would fail we didn't like that

00:30:52,800 --> 00:30:56,640
too much

00:30:54,830 --> 00:30:58,409
especially when you're walking out the

00:30:56,640 --> 00:31:00,210
door you check in your code within your

00:30:58,409 --> 00:31:01,590
you're walking out the door and all

00:31:00,210 --> 00:31:06,539
sudden the build fails and you get a

00:31:01,590 --> 00:31:08,760
call saying you broke the build yeah we

00:31:06,539 --> 00:31:11,909
had people in India that would be

00:31:08,760 --> 00:31:14,610
basically stuck until the next day until

00:31:11,909 --> 00:31:18,990
we could fix the build so that was a

00:31:14,610 --> 00:31:20,570
problem so generally what ends up

00:31:18,990 --> 00:31:24,539
happening like where I'm currently

00:31:20,570 --> 00:31:26,760
working we we use Pro critic but it's

00:31:24,539 --> 00:31:32,370
advisory only it never stops anything

00:31:26,760 --> 00:31:34,260
from completing and it's and but most

00:31:32,370 --> 00:31:37,110
places I've ever worked if we use Pro

00:31:34,260 --> 00:31:38,880
critic we ignore it only in the one case

00:31:37,110 --> 00:31:43,200
where it was killed builds did we

00:31:38,880 --> 00:31:45,390
actually pay attention to it but it's

00:31:43,200 --> 00:31:47,520
real value just like the real value of

00:31:45,390 --> 00:31:49,799
the Perot best practices is to get us to

00:31:47,520 --> 00:31:51,570
talk about these things and to realize

00:31:49,799 --> 00:31:58,200
what the issues are that's the real

00:31:51,570 --> 00:32:05,059
point of this stuff so do we have any

00:31:58,200 --> 00:32:05,059
questions or rants yes

00:32:09,250 --> 00:32:28,090
oh okay yeah yeah yeah-hoo-hoo needs

00:32:24,100 --> 00:32:29,950
more than 80 columns well usually the

00:32:28,090 --> 00:32:34,830
person is working on your code is you in

00:32:29,950 --> 00:32:34,830
six months but not always not always a

00:32:35,490 --> 00:32:40,960
4k monitor you know as I've been getting

00:32:39,100 --> 00:32:42,250
older I find my glasses aren't quite

00:32:40,960 --> 00:32:44,560
good enough I used to have these

00:32:42,250 --> 00:32:48,820
itty-bitty fonts you know things like

00:32:44,560 --> 00:32:50,440
under the old oh this is more than 20

00:32:48,820 --> 00:32:53,380
years ago where you could specify the

00:32:50,440 --> 00:32:53,950
size of a font by or the font actually

00:32:53,380 --> 00:32:58,330
was saying

00:32:53,950 --> 00:32:59,770
5x9 yeah you remember those days yeah so

00:32:58,330 --> 00:33:01,720
you'd had these itty bitty characters

00:32:59,770 --> 00:33:04,060
and boy I could fit a whole ton of stuff

00:33:01,720 --> 00:33:06,870
on the screen I loved it but that was

00:33:04,060 --> 00:33:09,870
before dual monitors and and all that

00:33:06,870 --> 00:33:09,870
yes

00:33:50,650 --> 00:33:59,179
so it'll throw at the bottom of the file

00:33:52,880 --> 00:34:02,049
for you okay so for release purposes you

00:33:59,179 --> 00:34:02,049
can you can do that

00:34:12,929 --> 00:34:25,770
and what's the name of that again pod

00:34:17,129 --> 00:34:28,159
weaver that's that that's cool I like

00:34:25,770 --> 00:34:32,299
that idea

00:34:28,159 --> 00:34:32,299
it messes up your line numbers

00:35:05,920 --> 00:35:11,069
okay good idea yes Steve

00:35:52,680 --> 00:36:13,680
yes we did not play with those it wasn't

00:36:09,960 --> 00:36:17,039
that important to us it was when we

00:36:13,680 --> 00:36:19,890
implemented the the the moose stuff it

00:36:17,039 --> 00:36:24,690
was more as an experiment to see how it

00:36:19,890 --> 00:36:26,460
worked just to try it and we didn't like

00:36:24,690 --> 00:36:28,710
the way the code looked that much and

00:36:26,460 --> 00:36:30,089
being heavyweight start up we just

00:36:28,710 --> 00:36:31,829
thought that's not worth the bother of

00:36:30,089 --> 00:36:33,720
right now so we just dropped it at that

00:36:31,829 --> 00:36:34,980
point and I think a lot of places did

00:36:33,720 --> 00:36:37,640
that where I work right now we actually

00:36:34,980 --> 00:36:40,529
are forbidden to use any of that stuff

00:36:37,640 --> 00:36:42,270
even the lighter weight just because the

00:36:40,529 --> 00:36:44,880
the startup performance hits we have

00:36:42,270 --> 00:36:47,220
because we have so much running on so

00:36:44,880 --> 00:36:51,299
many different systems this is a big

00:36:47,220 --> 00:36:53,839
issue okay like two rows from the back

00:36:51,299 --> 00:36:53,839
yes you

00:37:02,590 --> 00:37:05,590
yeah

00:37:07,490 --> 00:37:16,030
oh we have a lot of turkey stuff we do

00:37:16,150 --> 00:37:30,619
yeah I can't say too much actually but

00:37:26,420 --> 00:37:32,330
it it we're using Perl to basically

00:37:30,619 --> 00:37:38,450
manage a whole bunch of servers and

00:37:32,330 --> 00:37:40,310
virtual servers and the the the hit if

00:37:38,450 --> 00:37:44,030
you know if it takes 20 seconds to start

00:37:40,310 --> 00:37:47,300
up a script that's way too long you know

00:37:44,030 --> 00:37:48,770
if it takes 2 seconds we might be able

00:37:47,300 --> 00:37:50,270
live with that for certain things but

00:37:48,770 --> 00:37:54,070
other things that's too long

00:37:50,270 --> 00:37:54,070
it just depends yes

00:38:22,550 --> 00:38:25,550
yeah

00:38:40,579 --> 00:38:46,069
good idea yes in the back

00:39:30,290 --> 00:39:48,450
yes right you have good options good

00:39:45,180 --> 00:39:51,119
options anyone else more Rance more

00:39:48,450 --> 00:39:53,390
questions anyone want to berate me okay

00:39:51,119 --> 00:39:53,390
go ahead

00:40:11,450 --> 00:40:15,960
there's that part of the process that

00:40:13,829 --> 00:40:16,980
yeah we have to retrain if we're going

00:40:15,960 --> 00:40:20,809
to do something a little different that

00:40:16,980 --> 00:40:20,809
that does create problems yes

00:40:43,510 --> 00:40:47,680
well thank you and a and that's I think

00:40:45,940 --> 00:40:49,810
one of the big things everybody should

00:40:47,680 --> 00:40:52,300
come out of this with is that best

00:40:49,810 --> 00:40:55,510
practices are recommendation not a rule

00:40:52,300 --> 00:41:43,840
and that the end that they change and

00:40:55,510 --> 00:41:47,080
they need to change yes I'd go both ways

00:41:43,840 --> 00:41:49,780
on that I can sometimes I think it makes

00:41:47,080 --> 00:41:51,400
perfect sense and other times times I

00:41:49,780 --> 00:41:54,700
look at it and I'm going what in the

00:41:51,400 --> 00:41:57,609
world it just depends on what it is and

00:41:54,700 --> 00:42:00,430
I'm I tend to not like unless and until

00:41:57,609 --> 00:42:00,880
I keep having to translate them in my

00:42:00,430 --> 00:42:06,130
head

00:42:00,880 --> 00:42:07,690
into if not or while not because I think

00:42:06,130 --> 00:42:12,160
most of us are not used to that we're

00:42:07,690 --> 00:42:13,780
used to just if and while it takes some

00:42:12,160 --> 00:42:16,619
getting used to with some of these

00:42:13,780 --> 00:42:16,619
things and

00:42:30,069 --> 00:42:36,349
yeah and that makes sense and pearl was

00:42:33,469 --> 00:42:40,069
was designed to read like English so

00:42:36,349 --> 00:42:42,759
that it would make sense problems most

00:42:40,069 --> 00:42:45,049
of us don't think that way all the time

00:42:42,759 --> 00:42:58,880
so that that makes a little it takes

00:42:45,049 --> 00:43:01,700
some getting used to yeah oh so you

00:42:58,880 --> 00:43:05,390
indent the if or the unless and then on

00:43:01,700 --> 00:43:36,259
the next line interesting yeah that's a

00:43:05,390 --> 00:43:37,819
good idea yeah oh right here yes that's

00:43:36,259 --> 00:43:38,959
that's a really good point the more

00:43:37,819 --> 00:43:41,269
stuff you have to keep in your head the

00:43:38,959 --> 00:43:43,420
worse off you're gonna be so yeah that's

00:43:41,269 --> 00:43:46,420
that's a good point

00:43:43,420 --> 00:43:46,420
yes

00:43:47,470 --> 00:44:02,190
oh thank you thank you

00:44:03,359 --> 00:44:08,430
anyone else we had a couple more minutes

00:44:09,480 --> 00:44:13,510
okay

00:44:10,780 --> 00:44:23,200
that's it thank you thanks for being

00:44:13,510 --> 00:44:25,680
here appreciate I appreciate everyone's

00:44:23,200 --> 00:44:25,680

YouTube URL: https://www.youtube.com/watch?v=Y1I1KcKvz9Q


