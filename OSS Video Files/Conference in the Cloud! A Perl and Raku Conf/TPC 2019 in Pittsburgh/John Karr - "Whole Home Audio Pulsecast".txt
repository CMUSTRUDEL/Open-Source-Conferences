Title: John Karr - "Whole Home Audio Pulsecast"
Publication date: 2019-06-20
Playlist: TPC 2019 in Pittsburgh
Description: 
	Using PulseAudio and Single Board Computers to create an open source and inexpensive whole home audio solution.
Captions: 
	00:00:03,799 --> 00:00:11,730
okay if you have a question for Larry

00:00:07,710 --> 00:00:16,529
wall send out a tweet to pound sign key

00:00:11,730 --> 00:00:18,210
pc IP pound sign @ ask Larry and we

00:00:16,529 --> 00:00:22,590
might include your question in the Q&A

00:00:18,210 --> 00:00:26,039
session this afternoon now we have John

00:00:22,590 --> 00:00:29,060
Carr speaking on the whole home audio

00:00:26,039 --> 00:00:29,060
solution the post-test

00:00:34,640 --> 00:00:43,550
good morning thanks for joining me so

00:00:41,870 --> 00:00:46,100
today we're going to talk about using

00:00:43,550 --> 00:00:48,799
linux sound system and some cheap single

00:00:46,100 --> 00:00:56,539
board computers to set up a whole home

00:00:48,799 --> 00:01:02,929
audio system so we have an agenda I had

00:00:56,539 --> 00:01:06,920
a problem I had a solution and then we

00:01:02,929 --> 00:01:09,380
have a recipe so that you can take my

00:01:06,920 --> 00:01:12,049
solution home and not spend lots of

00:01:09,380 --> 00:01:18,530
hours researching some of the nitty

00:01:12,049 --> 00:01:21,110
gritty details so my problem I have

00:01:18,530 --> 00:01:24,789
Ethernet all over my house i rewired the

00:01:21,110 --> 00:01:29,149
 and of course being an IT guy

00:01:24,789 --> 00:01:30,049
there's Ethernet everywhere including my

00:01:29,149 --> 00:01:37,490
laundry room

00:01:30,049 --> 00:01:42,500
I have several stereos around the house

00:01:37,490 --> 00:01:44,390
and I would like to be able to have

00:01:42,500 --> 00:01:46,780
synchronized audio playing throughout

00:01:44,390 --> 00:01:46,780
the house

00:01:53,830 --> 00:01:57,910
it would have also been nice to not have

00:01:55,930 --> 00:01:59,680
to change music player while I was

00:01:57,910 --> 00:02:01,480
setting this up I was using something

00:01:59,680 --> 00:02:03,880
called Clementine at the time which I

00:02:01,480 --> 00:02:07,420
still mostly use although I've been

00:02:03,880 --> 00:02:11,740
looking at some other options some of

00:02:07,420 --> 00:02:13,630
them MVD base because Clementine

00:02:11,740 --> 00:02:17,260
developments been kind of slow of late

00:02:13,630 --> 00:02:20,200
but I still like Clementine and it's for

00:02:17,260 --> 00:02:27,760
a standalone local music player I think

00:02:20,200 --> 00:02:30,220
it's awesome a lot of it is is well

00:02:27,760 --> 00:02:32,470
actually the thing that's causing me to

00:02:30,220 --> 00:02:34,870
reconsider Clementine is that koba's

00:02:32,470 --> 00:02:37,690
finally launched in the US last month

00:02:34,870 --> 00:02:38,620
and I actually am subscribing to a

00:02:37,690 --> 00:02:43,570
streaming service

00:02:38,620 --> 00:02:45,160
so total aside koba's is the only

00:02:43,570 --> 00:02:49,180
streaming service that actually has a

00:02:45,160 --> 00:02:50,830
catalogue of classical music as well as

00:02:49,180 --> 00:02:54,250
they have always offered higher

00:02:50,830 --> 00:02:58,330
resolution than mp3 quality so between

00:02:54,250 --> 00:03:01,270
those two it's like it's a no-brainer

00:02:58,330 --> 00:03:03,550
it's like of what I listen to what I

00:03:01,270 --> 00:03:07,510
want to have available on streaming the

00:03:03,550 --> 00:03:10,510
most is classical because let's say I

00:03:07,510 --> 00:03:13,650
want to listen to some telamon well

00:03:10,510 --> 00:03:16,180
telamon wrote like 3000 pieces of music

00:03:13,650 --> 00:03:17,980
some of the better-known ones there may

00:03:16,180 --> 00:03:21,540
be hundreds of performances out there I

00:03:17,980 --> 00:03:25,780
may not I don't necessarily want to buy

00:03:21,540 --> 00:03:27,730
300 CDs worth of Telamon music plus each

00:03:25,780 --> 00:03:33,820
time you listen to it you can listen to

00:03:27,730 --> 00:03:38,590
a different performance so for classical

00:03:33,820 --> 00:03:41,380
more than pop music I find streaming

00:03:38,590 --> 00:03:43,150
particularly desirable and I've been

00:03:41,380 --> 00:03:45,420
waiting for like three years for Kobus

00:03:43,150 --> 00:03:49,090
to finally launch in this country so

00:03:45,420 --> 00:03:51,970
Clementine doesn't support koba's and

00:03:49,090 --> 00:03:58,110
they're written in C++ which means I am

00:03:51,970 --> 00:04:02,250
NOT submitting a patch so

00:03:58,110 --> 00:04:06,660
before I started the way I built my

00:04:02,250 --> 00:04:09,030
solution that I had at that time was I'd

00:04:06,660 --> 00:04:14,820
create and save a playlist from a music

00:04:09,030 --> 00:04:17,959
player I would feed the playlist to ice

00:04:14,820 --> 00:04:20,640
cast using the EZ stream utility and

00:04:17,959 --> 00:04:24,510
then I had to connect a tablet or a

00:04:20,640 --> 00:04:31,920
computer to each and every device use a

00:04:24,510 --> 00:04:34,470
browser to connect to that stream it had

00:04:31,920 --> 00:04:36,960
some issues first of all there's a lot

00:04:34,470 --> 00:04:39,950
of steps here it's not just like put

00:04:36,960 --> 00:04:45,590
some music into my cue press play and

00:04:39,950 --> 00:04:45,590
maybe go turn they downstairs darriel on

00:04:45,770 --> 00:04:49,980
every item in my playlist needed to be

00:04:48,180 --> 00:04:57,000
in the same format so if I had FLAC OGG

00:04:49,980 --> 00:05:00,260
and mp3 in a playlist if I decided I

00:04:57,000 --> 00:05:01,580
really didn't want to listen to

00:05:00,260 --> 00:05:04,020
[Music]

00:05:01,580 --> 00:05:08,190
something that was in the cue or I

00:05:04,020 --> 00:05:12,560
wanted where we were as a barbecue and

00:05:08,190 --> 00:05:15,090
we're talking and people wanted to

00:05:12,560 --> 00:05:17,040
listen to music he Stardust in the

00:05:15,090 --> 00:05:19,710
spiders from Mars instead of whatever

00:05:17,040 --> 00:05:22,169
had queued up next well I had to go stop

00:05:19,710 --> 00:05:25,560
the stream restart it you go back to

00:05:22,169 --> 00:05:30,570
each device connected and reconnect to

00:05:25,560 --> 00:05:35,040
the stream it was it worked but it was

00:05:30,570 --> 00:05:36,690
kind of a pain in the butt so a friend

00:05:35,040 --> 00:05:41,570
of mine suggested I look at google

00:05:36,690 --> 00:05:43,770
chromecast Audio which has now been

00:05:41,570 --> 00:05:47,790
discontinued but regular chromecast's

00:05:43,770 --> 00:05:50,000
are still available so the really cool

00:05:47,790 --> 00:05:52,950
thing is there were only about 30 bucks

00:05:50,000 --> 00:05:55,680
which made it pretty inexpensive to get

00:05:52,950 --> 00:05:58,140
one to play around with they are based

00:05:55,680 --> 00:06:00,720
on DLNA it's kind of like Google has a

00:05:58,140 --> 00:06:06,030
proprietary extension to DLNA to power

00:06:00,720 --> 00:06:07,770
the chromecast and the audio chromecast

00:06:06,030 --> 00:06:09,960
has something which is a unique

00:06:07,770 --> 00:06:11,969
extension which allowed chromecast to be

00:06:09,960 --> 00:06:13,860
grouped so you could have a crow

00:06:11,969 --> 00:06:16,739
caste attached to every device in your

00:06:13,860 --> 00:06:19,379
house and you could set them up to all

00:06:16,739 --> 00:06:21,719
be in a group and when you cast to that

00:06:19,379 --> 00:06:26,659
group every chromecast would listen to

00:06:21,719 --> 00:06:29,909
it and play it that was pretty easy but

00:06:26,659 --> 00:06:31,949
fortunately the chromecast has a whole

00:06:29,909 --> 00:06:33,839
bunch of issues number one right now the

00:06:31,949 --> 00:06:35,459
chromecast Audio version has been

00:06:33,839 --> 00:06:39,659
discontinued which means you can only

00:06:35,459 --> 00:06:45,019
find them used second though really the

00:06:39,659 --> 00:06:45,019
supported OS was Android go figure that

00:06:45,439 --> 00:06:53,729
because you needed the Google home app

00:06:48,179 --> 00:06:55,860
to get all the features on other

00:06:53,729 --> 00:06:59,129
platforms Linux in particular they're

00:06:55,860 --> 00:07:01,319
really only supported way of accessing

00:06:59,129 --> 00:07:09,709
your chromecast was through the Chrome

00:07:01,319 --> 00:07:15,239
browser and then the audio quality is

00:07:09,709 --> 00:07:18,719
this is a $30 device there the audio

00:07:15,239 --> 00:07:21,479
they're using a cheap audio chip the

00:07:18,719 --> 00:07:25,319
audio quality and the electronics are

00:07:21,479 --> 00:07:27,209
very small which also if you if you're

00:07:25,319 --> 00:07:31,979
into hi-fi actually produces additional

00:07:27,209 --> 00:07:35,039
challenges for producing clean audio so

00:07:31,979 --> 00:07:38,099
the sound quality is not terrific it's

00:07:35,039 --> 00:07:40,589
not bad it's like small devices produce

00:07:38,099 --> 00:07:42,209
surprisingly good sound these days and

00:07:40,589 --> 00:07:45,749
the chromecast was no exception there

00:07:42,209 --> 00:07:48,860
but even when I had the ethernet adapter

00:07:45,749 --> 00:07:53,599
the chromecast had frequent dropouts and

00:07:48,860 --> 00:07:53,599
that was just too damn annoying

00:07:58,140 --> 00:08:03,780
there was unofficial support for a

00:08:00,720 --> 00:08:06,660
number of things so there was a

00:08:03,780 --> 00:08:09,300
side-project not part of pulseaudio

00:08:06,660 --> 00:08:16,200
called pulseaudio DLNA which could set

00:08:09,300 --> 00:08:20,250
up access to a chromecast and then of

00:08:16,200 --> 00:08:25,290
course there's the built-in avahi

00:08:20,250 --> 00:08:29,100
support that is a possible feature of

00:08:25,290 --> 00:08:35,760
pulseaudio well it is there is a feature

00:08:29,100 --> 00:08:37,290
set and VLC and the in version 3 Oh

00:08:35,760 --> 00:08:40,140
added direct support for chromecast

00:08:37,290 --> 00:08:42,360
devices but this was after I was working

00:08:40,140 --> 00:08:46,430
on this so that wasn't really available

00:08:42,360 --> 00:08:46,430
when I was working at my solution and

00:08:48,290 --> 00:08:57,200
one more Pro is that you could connect

00:08:51,360 --> 00:09:00,030
it to an external DAC but the dominant

00:08:57,200 --> 00:09:04,110
interface for external tax especially

00:09:00,030 --> 00:09:08,670
the less expensive ones is USB and you

00:09:04,110 --> 00:09:10,920
had to get a special tashlich cable

00:09:08,670 --> 00:09:13,890
because they use a non-standard variant

00:09:10,920 --> 00:09:17,160
of it that plugs into the same jack is

00:09:13,890 --> 00:09:21,930
the regular mini audio headphone type

00:09:17,160 --> 00:09:26,700
Jack that it has and you could actually

00:09:21,930 --> 00:09:30,090
feed it to an external DAC which gets

00:09:26,700 --> 00:09:32,930
around the sound quality no longer a

00:09:30,090 --> 00:09:32,930
chip solution

00:09:38,450 --> 00:09:45,670
so anyway it was a pretty decent attempt

00:09:41,810 --> 00:09:47,899
at inexpensive consumer solution but

00:09:45,670 --> 00:09:49,339
since it actually cost less than a

00:09:47,899 --> 00:09:51,829
decent sound card they may have just

00:09:49,339 --> 00:09:57,410
been too aggressive on price to deliver

00:09:51,829 --> 00:10:00,860
a good product so the next system to

00:09:57,410 --> 00:10:02,360
look at is a multi room wired this kind

00:10:00,860 --> 00:10:04,910
of system has been around since

00:10:02,360 --> 00:10:08,320
loudspeakers were first widely available

00:10:04,910 --> 00:10:08,320
in the 1920s

00:10:14,570 --> 00:10:20,600
so these systems tend to be reliable

00:10:18,500 --> 00:10:22,160
especially if you do a simple Octopus

00:10:20,600 --> 00:10:24,250
configuration where you have a big

00:10:22,160 --> 00:10:29,900
receiver and you have like eight

00:10:24,250 --> 00:10:33,530
satellite speakers connected to it it's

00:10:29,900 --> 00:10:36,890
a big disadvantage is running a lot of

00:10:33,530 --> 00:10:42,230
new dedicated wire so I have Ethernet in

00:10:36,890 --> 00:10:45,050
my walls I didn't Paul speaker cable if

00:10:42,230 --> 00:10:46,790
you reconfigure your system you're not

00:10:45,050 --> 00:10:51,880
just plugging into the nearest Ethernet

00:10:46,790 --> 00:10:54,770
jack you're pulling more speaker cable

00:10:51,880 --> 00:10:59,630
and your off-the-shelf systems tend to

00:10:54,770 --> 00:11:03,740
actually be pretty costly and at risk of

00:10:59,630 --> 00:11:06,050
obsolescence so if we look at that

00:11:03,740 --> 00:11:09,980
system picture there that's a $1,500

00:11:06,050 --> 00:11:12,470
system it does come with an app that

00:11:09,980 --> 00:11:15,470
will let you use a smart phone to

00:11:12,470 --> 00:11:17,480
control it but if the company goes out

00:11:15,470 --> 00:11:21,470
of business or just continues that line

00:11:17,480 --> 00:11:22,820
where's the support for your app you

00:11:21,470 --> 00:11:25,400
have to upgrade it you have to buy

00:11:22,820 --> 00:11:27,560
another $1,500 system well if you're not

00:11:25,400 --> 00:11:30,500
reconfiguring okay probably reuse the

00:11:27,560 --> 00:11:34,810
same speaker wire but that's another

00:11:30,500 --> 00:11:34,810
$1500 system you're buying in six years

00:11:37,750 --> 00:11:42,230
so when I was looking at this Sonos was

00:11:40,400 --> 00:11:44,560
still pretty expensive they've been

00:11:42,230 --> 00:11:46,790
coming out with less expensive solutions

00:11:44,560 --> 00:11:49,730
because I think they figured out that

00:11:46,790 --> 00:11:52,640
the days of being able to get sell five

00:11:49,730 --> 00:11:55,520
thousand dollar systems were done and

00:11:52,640 --> 00:12:00,170
they'd rather take advantage of their

00:11:55,520 --> 00:12:03,200
market lead but they are still really

00:12:00,170 --> 00:12:07,760
proprietary systems and they're still

00:12:03,200 --> 00:12:11,390
not super cheap next system I looked at

00:12:07,760 --> 00:12:13,340
was whole house fm it's actually a

00:12:11,390 --> 00:12:15,800
really cheap system that would kind of

00:12:13,340 --> 00:12:18,520
work but there are a couple of

00:12:15,800 --> 00:12:18,520
limitations

00:12:20,940 --> 00:12:28,750
so you know that annoying characteristic

00:12:25,570 --> 00:12:34,210
where you queue up a bunch of music and

00:12:28,750 --> 00:12:36,370
the volume keeps changing so that is a

00:12:34,210 --> 00:12:38,320
bigger problem in whole house FM because

00:12:36,370 --> 00:12:40,840
you've got less than a CDs worth of

00:12:38,320 --> 00:12:44,130
available dynamic range which means you

00:12:40,840 --> 00:12:47,530
have to set your level for the system

00:12:44,130 --> 00:12:49,480
for the broadcasting side based on the

00:12:47,530 --> 00:12:52,510
loudest things you expect to go through

00:12:49,480 --> 00:12:54,880
the system because if it over modulated

00:12:52,510 --> 00:12:57,400
all sounds really bad but the problem is

00:12:54,880 --> 00:12:59,280
with the limited dynamic range it's

00:12:57,400 --> 00:13:03,430
going to trash the sound quality of the

00:12:59,280 --> 00:13:04,570
quieter signals and the quieter signals

00:13:03,430 --> 00:13:08,500
are going to be closer to the noise

00:13:04,570 --> 00:13:11,530
floor so unless you have something in

00:13:08,500 --> 00:13:14,320
place that's adjusting the sound levels

00:13:11,530 --> 00:13:18,690
based on the apparent loudness of the

00:13:14,320 --> 00:13:22,410
source before it goes to the transmitter

00:13:18,690 --> 00:13:26,400
you're going to have audio quality

00:13:22,410 --> 00:13:31,060
issues beyond just the Annoying fact of

00:13:26,400 --> 00:13:34,620
having to tweak the volume periodically

00:13:31,060 --> 00:13:34,620
as things get louder or quieter

00:13:38,920 --> 00:13:44,829
so deal on a and of aji are a set of

00:13:42,299 --> 00:13:49,359
standards for multimedia devices to

00:13:44,829 --> 00:13:53,019
communicate chromecast is based on them

00:13:49,359 --> 00:13:55,239
was based well but the chromecast family

00:13:53,019 --> 00:13:59,679
is based on the that standard it's an

00:13:55,239 --> 00:14:03,309
extension to it most implementations

00:13:59,679 --> 00:14:09,160
only support one destination at a time

00:14:03,309 --> 00:14:12,910
which for the object here is a big

00:14:09,160 --> 00:14:15,220
limitation the chromecast grouping

00:14:12,910 --> 00:14:17,799
extension appears to only have ever been

00:14:15,220 --> 00:14:24,669
implemented on the chromecast Audio and

00:14:17,799 --> 00:14:28,809
nowhere else so there are a bunch of

00:14:24,669 --> 00:14:34,389
projects to make a pie or something or a

00:14:28,809 --> 00:14:38,739
Linux computer act as a device for

00:14:34,389 --> 00:14:42,279
sending media to consumer DLNA avahi

00:14:38,739 --> 00:14:44,679
type devices but they all look to be

00:14:42,279 --> 00:14:49,540
pretty limited size projects none of

00:14:44,679 --> 00:14:51,429
them had implemented any kind of means

00:14:49,540 --> 00:14:54,959
as far as I could tell ascending to more

00:14:51,429 --> 00:14:58,629
than one destination simultaneously and

00:14:54,959 --> 00:15:00,699
I never really spent any time with them

00:14:58,629 --> 00:15:02,079
because it looked for meeting the docks

00:15:00,699 --> 00:15:11,619
that none of them was going to do what I

00:15:02,079 --> 00:15:16,350
wanted there are a couple of open-source

00:15:11,619 --> 00:15:20,499
media center distributions that again

00:15:16,350 --> 00:15:26,889
might be nice but lack the ability to

00:15:20,499 --> 00:15:33,489
pick multiple DLNA destinations to put

00:15:26,889 --> 00:15:36,220
together a home audiences system VLC and

00:15:33,489 --> 00:15:38,289
ffmpeg both have the ability to do

00:15:36,220 --> 00:15:41,279
streaming but unfortunately it's single

00:15:38,289 --> 00:15:41,279
file streaming

00:15:42,520 --> 00:15:49,660
so you can play one file but you have to

00:15:47,709 --> 00:15:57,040
restart the stream to play the second

00:15:49,660 --> 00:16:02,649
file ya know could use Internet DJ radio

00:15:57,040 --> 00:16:05,200
software but the open source options I

00:16:02,649 --> 00:16:06,760
was looking at didn't seem like it was

00:16:05,200 --> 00:16:09,899
going to be a major project getting them

00:16:06,760 --> 00:16:09,899
installed and up and running

00:16:14,980 --> 00:16:26,140
so why can't we just capture a virtual

00:16:18,850 --> 00:16:28,840
soundcard and stream from there so and

00:16:26,140 --> 00:16:32,080
searches that answer I started to look

00:16:28,840 --> 00:16:34,240
at the linux sound architecture and it

00:16:32,080 --> 00:16:37,630
turns out that pulseaudio

00:16:34,240 --> 00:16:38,940
which is the primary sound system these

00:16:37,630 --> 00:16:41,020
days

00:16:38,940 --> 00:16:43,240
supports all of that right out of the

00:16:41,020 --> 00:16:49,960
box not very well advertised or

00:16:43,240 --> 00:16:53,500
documented but it does and in fact the

00:16:49,960 --> 00:16:59,860
person who wrote the standard of ie DLNA

00:16:53,500 --> 00:17:06,250
support is the author of pulse audio so

00:16:59,860 --> 00:17:09,959
this gets us to part two the linux sound

00:17:06,250 --> 00:17:09,959
architecture and pulse audio

00:17:13,390 --> 00:17:19,480
so there's a couple of pieces here to

00:17:17,410 --> 00:17:22,120
talk about there's the open sound system

00:17:19,480 --> 00:17:24,959
which is older it's deprecated and Linux

00:17:22,120 --> 00:17:28,600
but still use typically in BSD systems

00:17:24,959 --> 00:17:32,950
the enlightened sound daemon which is

00:17:28,600 --> 00:17:37,030
kind of dead the advanced linux sound

00:17:32,950 --> 00:17:40,330
architecture Jack and pulseaudio

00:17:37,030 --> 00:17:52,260
and we're going to talk about each of

00:17:40,330 --> 00:17:58,480
them a little bit so also is kind of

00:17:52,260 --> 00:18:03,480
base layer it supports what do you

00:17:58,480 --> 00:18:07,179
interfaces from consumer carbs to

00:18:03,480 --> 00:18:10,330
multi-channel things it moduli cz's

00:18:07,179 --> 00:18:14,650
drivers it's got thread safe designs

00:18:10,330 --> 00:18:16,809
it's got user space libraries and it

00:18:14,650 --> 00:18:20,669
emulates OSS for software that hasn't

00:18:16,809 --> 00:18:20,669
been properly updated

00:18:26,360 --> 00:18:32,909
so also is we're working with a lower

00:18:30,510 --> 00:18:41,070
layer to provide common interfaces to

00:18:32,909 --> 00:18:45,110
the hardware so pulseaudio

00:18:41,070 --> 00:18:53,190
and Jack our sound servers that work

00:18:45,110 --> 00:18:56,549
closely together with alsa so now we

00:18:53,190 --> 00:18:59,399
need the concept of a sound server so

00:18:56,549 --> 00:19:02,669
the sound server so you have a whole

00:18:59,399 --> 00:19:05,760
bunch of things in your system which are

00:19:02,669 --> 00:19:08,130
managed by also that can accept sound or

00:19:05,760 --> 00:19:12,899
produce sound and in a few cases can

00:19:08,130 --> 00:19:15,419
even go both ways the sound server is

00:19:12,899 --> 00:19:22,409
what ties everything together and

00:19:15,419 --> 00:19:25,350
directs traffic between them jack is a

00:19:22,409 --> 00:19:29,549
virtual patch panel and jack and pulse

00:19:25,350 --> 00:19:33,179
generally play ok together so you don't

00:19:29,549 --> 00:19:37,110
have to get rid of pulse audio if you're

00:19:33,179 --> 00:19:39,240
adding a jack application and they they

00:19:37,110 --> 00:19:41,659
generally don't manage to not step on

00:19:39,240 --> 00:19:41,659
each other

00:19:45,530 --> 00:19:56,810
so pulseaudio provides API and hardware

00:19:53,270 --> 00:19:58,130
abstraction including networked hardware

00:19:56,810 --> 00:20:03,680
which is really important for what we

00:19:58,130 --> 00:20:07,240
want to do and most distributions have a

00:20:03,680 --> 00:20:07,240
working pulse out of the box

00:20:08,020 --> 00:20:18,830
and pulse emulates ESD which it

00:20:14,300 --> 00:20:21,290
effectively replaced and provides

00:20:18,830 --> 00:20:31,570
interfaces to all your alsa and hardware

00:20:21,290 --> 00:20:31,570
drivers so pulse is a user space daemon

00:20:33,430 --> 00:20:38,900
it's got multiple configuration options

00:20:37,430 --> 00:20:40,910
you could do it through the GUI you can

00:20:38,900 --> 00:20:45,470
do it through the command line you can

00:20:40,910 --> 00:20:47,360
edit configuration files it was created

00:20:45,470 --> 00:20:50,210
by Leonhard poettering the creator of

00:20:47,360 --> 00:20:52,040
system day in fact the fact that he

00:20:50,210 --> 00:20:53,870
couldn't get it to run as a system

00:20:52,040 --> 00:20:57,440
daemon is what caused him to start

00:20:53,870 --> 00:21:00,610
getting interested in the unit

00:20:57,440 --> 00:21:00,610
management process

00:21:03,280 --> 00:21:14,110
so this is a diagram of what's going on

00:21:09,670 --> 00:21:16,360
with pulse and you can see that quite a

00:21:14,110 --> 00:21:18,430
lot is going on unfortunately it's a

00:21:16,360 --> 00:21:22,270
vertical diagram and we have a

00:21:18,430 --> 00:21:29,560
horizontal little screen how are we

00:21:22,270 --> 00:21:33,430
doing on time yeah if people want to

00:21:29,560 --> 00:21:35,160
step up and get a look at that or if you

00:21:33,430 --> 00:21:44,110
download the slide deck after the talk

00:21:35,160 --> 00:21:49,270
you can you can certainly take a look at

00:21:44,110 --> 00:21:56,140
the diagram so the sound server is

00:21:49,270 --> 00:22:03,430
actually a pretty complicated piece so

00:21:56,140 --> 00:22:05,350
it's got some weird terminology so first

00:22:03,430 --> 00:22:12,670
of all each user gets their own daemon

00:22:05,350 --> 00:22:16,360
and that's called a server the client is

00:22:12,670 --> 00:22:22,300
the application that's sending data to

00:22:16,360 --> 00:22:24,520
pulse sources or whatever generate sound

00:22:22,300 --> 00:22:29,260
add sinks or where the sound goes and

00:22:24,520 --> 00:22:33,310
gets emitted as actual sound generally

00:22:29,260 --> 00:22:35,610
these things are managed through alsa by

00:22:33,310 --> 00:22:35,610
pulse

00:22:39,690 --> 00:22:47,790
front-ends or applications interacting

00:22:42,300 --> 00:22:52,410
directly with pulse modules or bits of

00:22:47,790 --> 00:22:56,100
functionality that can be added at will

00:22:52,410 --> 00:23:03,390
and can be developed outside the main

00:22:56,100 --> 00:23:07,050
pulse project so to work with pulse

00:23:03,390 --> 00:23:10,380
you'll mainly use the two graphical

00:23:07,050 --> 00:23:16,170
utilities P AV ctrl + P at prefs from

00:23:10,380 --> 00:23:22,080
your desktop environment and it's sound

00:23:16,170 --> 00:23:24,000
control applet however if you're doing

00:23:22,080 --> 00:23:26,160
diagnostics or you're working headless

00:23:24,000 --> 00:23:28,830
as we will be you'll need the command

00:23:26,160 --> 00:23:38,720
line utilities and there's example of

00:23:28,830 --> 00:23:38,720
output from there we go

00:23:41,710 --> 00:23:50,320
you guys want to look at the output a

00:23:43,840 --> 00:23:52,030
second longer so this is all you can

00:23:50,320 --> 00:23:53,350
download the PDF of the slide deck and

00:23:52,030 --> 00:23:55,950
look at it

00:23:53,350 --> 00:23:58,480
stare at it to your heart's content and

00:23:55,950 --> 00:24:00,880
actually you can use these utilities if

00:23:58,480 --> 00:24:04,480
you've got a Linux laptop you can

00:24:00,880 --> 00:24:07,780
actually pipe type something like piei

00:24:04,480 --> 00:24:09,310
control list sync inputs and you'll get

00:24:07,780 --> 00:24:17,020
something very similar off of your

00:24:09,310 --> 00:24:21,430
system so now that we're familiar with

00:24:17,020 --> 00:24:23,430
how sound works on Linux we're gonna put

00:24:21,430 --> 00:24:29,760
this together so I mentioned previously

00:24:23,430 --> 00:24:34,210
that pulse supports network stuff and

00:24:29,760 --> 00:24:38,770
pulse can send RTP streams and are and

00:24:34,210 --> 00:24:41,740
receive RTP streams and basically it

00:24:38,770 --> 00:24:43,890
just does this by default if you turn it

00:24:41,740 --> 00:24:43,890
on

00:24:48,790 --> 00:24:57,060
so since I work primarily in the Debian

00:24:52,720 --> 00:25:00,670
world I'm giving you Debian specific

00:24:57,060 --> 00:25:03,540
examples but these are the package names

00:25:00,670 --> 00:25:09,000
you'll need on a bun too or Debian or

00:25:03,540 --> 00:25:09,000
mint or anything else in that family

00:25:13,890 --> 00:25:20,940
you'll want to fire up PA profs and a

00:25:18,210 --> 00:25:26,700
couple of clicks because you deemed to

00:25:20,940 --> 00:25:31,860
enable the multicast sender and you want

00:25:26,700 --> 00:25:33,990
to create a separate audio device this

00:25:31,860 --> 00:25:38,760
is also a great technique even if you're

00:25:33,990 --> 00:25:42,510
not doing multi-room audio so if you

00:25:38,760 --> 00:25:45,600
have a music player running by creating

00:25:42,510 --> 00:25:47,880
a virtual audio device your music player

00:25:45,600 --> 00:25:51,060
can have that device and you can have

00:25:47,880 --> 00:25:53,070
the main sound card muted so that when

00:25:51,060 --> 00:25:57,230
you browse to that loud pornography site

00:25:53,070 --> 00:25:57,230
you don't blow your speakers out

00:26:03,730 --> 00:26:12,580
so that shows you that you have a new

00:26:06,220 --> 00:26:16,269
output device go to the receiving side

00:26:12,580 --> 00:26:17,919
now this is to Linux hosts that are

00:26:16,269 --> 00:26:20,889
running buoys that we're working with

00:26:17,919 --> 00:26:23,590
right now so if you have a desktop and a

00:26:20,889 --> 00:26:26,860
laptop you can play along with this when

00:26:23,590 --> 00:26:28,659
you're at home and again it's just a

00:26:26,860 --> 00:26:36,299
couple of clicks to turn it on through

00:26:28,659 --> 00:26:44,409
the GUI and you can open up VLC and

00:26:36,299 --> 00:26:46,809
change the device and with any luck the

00:26:44,409 --> 00:26:48,159
meter you're playing VLC will have the

00:26:46,809 --> 00:26:55,960
sound coming out of the speaker's

00:26:48,159 --> 00:26:58,779
attached to the other computer so if you

00:26:55,960 --> 00:27:00,130
want to see what it did did and this is

00:26:58,779 --> 00:27:02,590
one of the features that don't like

00:27:00,130 --> 00:27:04,570
about pulse is that there are three

00:27:02,590 --> 00:27:08,289
separate sets of three or more sets of

00:27:04,570 --> 00:27:11,370
configuration files so each desktop

00:27:08,289 --> 00:27:14,200
environment has its own way of holding

00:27:11,370 --> 00:27:20,649
your pulse audio preferences which is

00:27:14,200 --> 00:27:23,470
the last evaluated set so on a gnome

00:27:20,649 --> 00:27:31,299
system you could look in the G Conn

00:27:23,470 --> 00:27:35,590
folder and you can see what is

00:27:31,299 --> 00:27:39,100
configured the configuration directives

00:27:35,590 --> 00:27:40,299
G Kampf will be similar what we're going

00:27:39,100 --> 00:27:46,570
to see later except they're all

00:27:40,299 --> 00:27:49,260
encapsulated in XML it kind of like the

00:27:46,570 --> 00:27:49,260
example at the bottom

00:27:51,470 --> 00:27:59,309
so to build or homo to your system

00:27:55,739 --> 00:28:04,159
I took a Raspberry Pi which is about the

00:27:59,309 --> 00:28:04,159
cheapest device you can find out there a

00:28:06,080 --> 00:28:21,239
microSD card I used the hifiberry dac+

00:28:15,860 --> 00:28:23,669
and cards out there but the at 30 bucks

00:28:21,239 --> 00:28:25,950
or so the Raspberry Pi doesn't have very

00:28:23,669 --> 00:28:31,259
good sound built in yes it has built in

00:28:25,950 --> 00:28:34,169
sound but since we're doing this for

00:28:31,259 --> 00:28:37,320
audio it's worth spending more on our

00:28:34,169 --> 00:28:43,769
sound card then our on our single board

00:28:37,320 --> 00:28:48,539
computer you'll need a special case

00:28:43,769 --> 00:28:55,799
because the hifiberry actually makes the

00:28:48,539 --> 00:28:58,590
PI too high to fit a normal pie case if

00:28:55,799 --> 00:29:04,049
the first time you want to download the

00:28:58,590 --> 00:29:06,210
raspbian noobs installer and here's some

00:29:04,049 --> 00:29:10,200
quick PI setup steps if you don't know

00:29:06,210 --> 00:29:15,539
and if you do now just check your email

00:29:10,200 --> 00:29:19,470
for a minute format your microSD is

00:29:15,539 --> 00:29:23,850
fat32 I use gparted download and extract

00:29:19,470 --> 00:29:27,720
noobs put it on the newly formatted

00:29:23,850 --> 00:29:31,429
microSD attached to your peripherals and

00:29:27,720 --> 00:29:35,850
network to the PI install the noobs

00:29:31,429 --> 00:29:39,600
microSD pick the minimal install from

00:29:35,850 --> 00:29:42,559
noobs make sure you switch to the u.s.

00:29:39,600 --> 00:29:44,820
keyboard or you'll not be very happy and

00:29:42,559 --> 00:29:53,609
you can reboot when the installation is

00:29:44,820 --> 00:29:56,220
complete log in your first time your

00:29:53,609 --> 00:30:02,100
users PI your password is password is

00:29:56,220 --> 00:30:05,600
raspberry you'll use sudo ifconfig to

00:30:02,100 --> 00:30:05,600
get your Mac and IP address

00:30:06,050 --> 00:30:12,300
then you'll run the RasPi config to

00:30:10,560 --> 00:30:16,950
configure pi you'll want to change that

00:30:12,300 --> 00:30:20,100
password you want to set a hostname you

00:30:16,950 --> 00:30:24,630
want need to enable SSH access because

00:30:20,100 --> 00:30:27,180
you are going to run headless and you do

00:30:24,630 --> 00:30:31,080
not want anything connected to the USB

00:30:27,180 --> 00:30:33,330
of arouse very PI because one of the

00:30:31,080 --> 00:30:35,990
trade-offs for the Supercheap device is

00:30:33,330 --> 00:30:38,340
that the USB and network share a bus and

00:30:35,990 --> 00:30:43,530
anything coming over the USB can

00:30:38,340 --> 00:30:47,070
interfere with your network stack then

00:30:43,530 --> 00:30:49,860
you're going to either reserve an IP in

00:30:47,070 --> 00:30:53,520
your dhcp server or set a static address

00:30:49,860 --> 00:30:57,050
outside the dhcp scope because you don't

00:30:53,520 --> 00:30:59,460
want this thing changing its address and

00:30:57,050 --> 00:31:03,330
also this is a good time to run apt-get

00:30:59,460 --> 00:31:10,740
update up get upgrade to get make sure

00:31:03,330 --> 00:31:13,080
you're on the latest everything so then

00:31:10,740 --> 00:31:17,310
you have to edit the config because you

00:31:13,080 --> 00:31:19,950
have to do some things to enable this

00:31:17,310 --> 00:31:23,130
the sound card and also turn off some

00:31:19,950 --> 00:31:25,950
stuff so if you're using going to be

00:31:23,130 --> 00:31:27,570
using Wi-Fi obviously you don't want to

00:31:25,950 --> 00:31:30,540
disable it but if you're plugging in the

00:31:27,570 --> 00:31:35,270
ethernet get rid of Wi-Fi because why

00:31:30,540 --> 00:31:35,270
have unconfigured Wi-Fi on your system

00:31:38,780 --> 00:31:46,640
then you're gonna shut it down with halt

00:31:42,030 --> 00:31:50,070
- pee unplug it remove the USB devices

00:31:46,640 --> 00:31:56,250
but keep the network plugged in and turn

00:31:50,070 --> 00:32:02,730
it back on so now you should be able to

00:31:56,250 --> 00:32:05,940
SSH in with your new password and you're

00:32:02,730 --> 00:32:11,760
gonna add a couple of scripts one is to

00:32:05,940 --> 00:32:14,280
start pulse because you pulse is a user

00:32:11,760 --> 00:32:16,980
mode daemon but there's no graphical

00:32:14,280 --> 00:32:19,169
environment to auto start it for you so

00:32:16,980 --> 00:32:21,419
it will need to be manually started and

00:32:19,169 --> 00:32:24,570
then you're gonna create another one for

00:32:21,419 --> 00:32:28,620
reloading Pulse so that if there's an

00:32:24,570 --> 00:32:31,850
issue and you want to restart pulse you

00:32:28,620 --> 00:32:31,850
don't have to think about it

00:32:38,520 --> 00:32:44,220
and now you need to go to the

00:32:40,679 --> 00:32:46,590
configuration so the actual config

00:32:44,220 --> 00:32:49,080
scripts are in at c-pulse and we're not

00:32:46,590 --> 00:32:51,830
going to configure any per user scripts

00:32:49,080 --> 00:32:55,470
we're just going to configure the system

00:32:51,830 --> 00:32:59,700
level scripts because ideally this would

00:32:55,470 --> 00:33:03,500
be running under system D as a service

00:32:59,700 --> 00:33:03,500
but we're not doing it that way

00:33:06,350 --> 00:33:16,950
because it needs a user session so you

00:33:13,679 --> 00:33:20,760
have to make a few edits I recommend

00:33:16,950 --> 00:33:23,490
adding an IP ACL so only the systems

00:33:20,760 --> 00:33:28,740
that you want to send audio from can

00:33:23,490 --> 00:33:31,290
send audio to the device you need to

00:33:28,740 --> 00:33:36,840
make sure some modules are enabled and

00:33:31,290 --> 00:33:41,250
we're going to start pulse from a screen

00:33:36,840 --> 00:33:46,220
session using RC local so RC local is

00:33:41,250 --> 00:33:46,220
read at the very end of the boot process

00:33:46,400 --> 00:33:59,880
and we're gonna tell RC local to sudo to

00:33:52,440 --> 00:34:02,880
the PI user and this is this creates a

00:33:59,880 --> 00:34:07,620
logged in user environment that we can

00:34:02,880 --> 00:34:12,240
start pulse in and our start pulse

00:34:07,620 --> 00:34:14,520
script will also cycle every 60 seconds

00:34:12,240 --> 00:34:19,230
and if pulse isn't running it will start

00:34:14,520 --> 00:34:21,830
it for us so if pulse crashes it will

00:34:19,230 --> 00:34:21,830
restart it

00:34:26,369 --> 00:34:29,239
so

00:34:30,369 --> 00:34:36,839
I did have a minor issue of drift

00:34:32,619 --> 00:34:42,970
particularly on the Raspberry Pi based

00:34:36,839 --> 00:34:45,460
player devices that the buffers would

00:34:42,970 --> 00:34:46,809
get out of sync somewhat have a longer

00:34:45,460 --> 00:34:50,379
buffer and some would have a shorter

00:34:46,809 --> 00:34:52,179
buffer and the solution is just to

00:34:50,379 --> 00:34:54,690
restart pulseaudio every once in a while

00:34:52,179 --> 00:34:59,980
so pick a time when you're not listening

00:34:54,690 --> 00:35:03,039
kill the pulse audio processes you put

00:34:59,980 --> 00:35:05,970
that at PI the PI users crontab because

00:35:03,039 --> 00:35:10,359
they're who's running pulse you've got

00:35:05,970 --> 00:35:13,920
that auto that job run from RC local

00:35:10,359 --> 00:35:16,690
that every 60 seconds start pulse so

00:35:13,920 --> 00:35:19,839
pulse will be down for a maximum of 60

00:35:16,690 --> 00:35:22,380
seconds when you do this but you'll fix

00:35:19,839 --> 00:35:22,380
the draft

00:35:25,560 --> 00:35:34,220
and then this is a screenshot of my

00:35:28,350 --> 00:35:38,430
music player and it's Android remote

00:35:34,220 --> 00:35:40,740
which lets me take control of my

00:35:38,430 --> 00:35:44,070
playlist if without having to run back

00:35:40,740 --> 00:35:46,640
to the main computer that's running

00:35:44,070 --> 00:35:46,640
everything

00:35:54,319 --> 00:36:02,390
and here's a couple of other options you

00:35:58,130 --> 00:36:04,729
might think about so snap cast last I

00:36:02,390 --> 00:36:06,769
peeked at it was not where it appeared

00:36:04,729 --> 00:36:10,359
to be usable unless you're actually

00:36:06,769 --> 00:36:12,679
interested in hacking the project and

00:36:10,359 --> 00:36:15,439
I've been looking at some alternate

00:36:12,679 --> 00:36:18,439
players since as I mentioned Clementine

00:36:15,439 --> 00:36:20,989
doesn't support koba's and isn't likely

00:36:18,439 --> 00:36:30,499
in the future unless I decide to learn

00:36:20,989 --> 00:36:39,919
C++ to do so so here's some useful links

00:36:30,499 --> 00:36:43,279
and the slide deck up is available at

00:36:39,919 --> 00:36:49,789
tech info dot brain buzz Bri

00:36:43,279 --> 00:36:53,619
a and B uz o RG / slides and you can

00:36:49,789 --> 00:36:53,619

YouTube URL: https://www.youtube.com/watch?v=6JWGXdQdVi4


