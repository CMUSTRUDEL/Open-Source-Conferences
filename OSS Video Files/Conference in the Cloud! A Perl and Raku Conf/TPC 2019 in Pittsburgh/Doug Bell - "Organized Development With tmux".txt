Title: Doug Bell - "Organized Development With tmux"
Publication date: 2019-06-19
Playlist: TPC 2019 in Pittsburgh
Description: 
	Tmux is a terminal multiplexer which allows you to open multiple shells in a single terminal, split your window into panes, and detach from your terminal to resume your work later! Using Tmux can help keep track of everything you're working on and quickly switch tasks to pick up where you left off!
This talk will introduce the basics of Tmux, how to manage windows and split them into panes, how to configure Tmux, and how to organize and automate Tmux layouts for your projects to get to developing as quickly as possible.
Doug Bell lives on a command-line and does all his development there. With the knowledge from this talk, you can add the features of an IDE to your terminal.
Captions: 
	00:00:00,030 --> 00:00:05,580
I need a really silly little thing if

00:00:03,000 --> 00:00:07,200
anyone wants to follow along or ask me

00:00:05,580 --> 00:00:08,929
questions without actually standing up

00:00:07,200 --> 00:00:11,790
and asking questions and projecting

00:00:08,929 --> 00:00:18,869
it'll be easier if you use that little

00:00:11,790 --> 00:00:22,470
website there so this is about

00:00:18,869 --> 00:00:31,759
organizing my development with team ox

00:00:22,470 --> 00:00:34,579
why is that so small all right yeah

00:00:31,759 --> 00:00:38,879
maybe

00:00:34,579 --> 00:00:41,700
all right so since showing is going to

00:00:38,879 --> 00:00:43,800
be a lot easier than telling you I'm

00:00:41,700 --> 00:00:47,399
just gonna show you right away what team

00:00:43,800 --> 00:00:51,210
ox does but first as anyway here used

00:00:47,399 --> 00:00:54,059
canoe screen all right so a lot of

00:00:51,210 --> 00:00:56,850
people here kind of will probably find

00:00:54,059 --> 00:00:58,590
this a little bit familiar a lot of

00:00:56,850 --> 00:01:01,590
other people probably use tabbed

00:00:58,590 --> 00:01:04,220
terminals now even even Windows has

00:01:01,590 --> 00:01:07,229
finally gotten really good terminal

00:01:04,220 --> 00:01:10,770
terminals and not like back in the day

00:01:07,229 --> 00:01:15,240
with the command dot exe and notepad how

00:01:10,770 --> 00:01:17,070
I learned how I learned to write Perl so

00:01:15,240 --> 00:01:19,110
I can't really go over installing team

00:01:17,070 --> 00:01:21,150
ox though I will say that it's available

00:01:19,110 --> 00:01:24,900
in every package manager I've ever used

00:01:21,150 --> 00:01:27,600
including open BSD and FreeBSD I've used

00:01:24,900 --> 00:01:29,700
it in cygwin there's the windows

00:01:27,600 --> 00:01:33,540
subsystem or sorry linux subsystem for

00:01:29,700 --> 00:01:36,750
Windows which I've heard works it's the

00:01:33,540 --> 00:01:38,460
the Ubuntu and Windows thing and now

00:01:36,750 --> 00:01:39,540
with with all that docker in Windows

00:01:38,460 --> 00:01:41,130
stuff you can probably get a good one

00:01:39,540 --> 00:01:44,729
that way too

00:01:41,130 --> 00:01:46,530
but suffice it to say that if you want

00:01:44,729 --> 00:01:49,740
to try out team ox it'll be available

00:01:46,530 --> 00:01:52,380
for your platform so to start out with

00:01:49,740 --> 00:01:54,210
team ox since it's a command line

00:01:52,380 --> 00:01:58,700
program we just need to run the t-box

00:01:54,210 --> 00:02:01,469
command so once we run this command here

00:01:58,700 --> 00:02:03,180
okay well we're back at a shell prompt

00:02:01,469 --> 00:02:05,579
again but now we got this little this

00:02:03,180 --> 00:02:05,950
little blue or sorry green bar down at

00:02:05,579 --> 00:02:10,269
the bar

00:02:05,950 --> 00:02:12,190
here and we got this over in the bottom

00:02:10,269 --> 00:02:14,980
left here we've got what's called the

00:02:12,190 --> 00:02:17,319
session name which defaults to zero and

00:02:14,980 --> 00:02:20,650
we'll talk about what sessions are and

00:02:17,319 --> 00:02:23,980
how to use them later but next to that

00:02:20,650 --> 00:02:26,860
we have window information so I have one

00:02:23,980 --> 00:02:29,860
window here window zero it's currently

00:02:26,860 --> 00:02:33,010
running it's currently running Z shell

00:02:29,860 --> 00:02:35,620
which is the shell that I use and this

00:02:33,010 --> 00:02:39,760
little asterisk here says that this is

00:02:35,620 --> 00:02:41,110
my current window so like most command

00:02:39,760 --> 00:02:43,150
line programs were packing a lot of

00:02:41,110 --> 00:02:46,989
information into a very very limited

00:02:43,150 --> 00:02:49,930
amount of space and creating and

00:02:46,989 --> 00:02:52,150
managing windows is one of the most

00:02:49,930 --> 00:02:53,920
useful parts of T MUX so going to be

00:02:52,150 --> 00:02:57,670
spending a lot of time talking about

00:02:53,920 --> 00:03:00,489
this but finally over here on the right

00:02:57,670 --> 00:03:02,140
we've got some information that I don't

00:03:00,489 --> 00:03:05,560
really care about I got the the hostname

00:03:02,140 --> 00:03:08,319
of my laptop and you can see the time

00:03:05,560 --> 00:03:12,130
the screenshot was taken at yesterday

00:03:08,319 --> 00:03:12,700
night at 4 o'clock so burning the

00:03:12,130 --> 00:03:16,389
midnight oil

00:03:12,700 --> 00:03:19,180
apparently otherwise this is just what

00:03:16,389 --> 00:03:22,000
we had before we ran T box so I can type

00:03:19,180 --> 00:03:25,530
a command in here I get some output on

00:03:22,000 --> 00:03:33,280
my screen it's pretty amazing

00:03:25,530 --> 00:03:36,430
and then yep and then when we're done we

00:03:33,280 --> 00:03:40,030
can exit our shell and we've exited T

00:03:36,430 --> 00:03:43,060
box so yeah that's all I got to say have

00:03:40,030 --> 00:03:45,340
a good night oh no no okay okay okay so

00:03:43,060 --> 00:03:47,950
how about instead of exiting we can

00:03:45,340 --> 00:03:50,230
actually do a thing called detaching so

00:03:47,950 --> 00:03:52,829
we can detach from a react amok session

00:03:50,230 --> 00:03:54,790
and then later we can reattach to it

00:03:52,829 --> 00:03:56,829
when we detached from a session

00:03:54,790 --> 00:03:59,680
everything that we had in our session

00:03:56,829 --> 00:04:01,720
keeps running so T McStays running in

00:03:59,680 --> 00:04:04,660
the background anything in our session

00:04:01,720 --> 00:04:07,660
keeps running waiting for us to get back

00:04:04,660 --> 00:04:11,290
to it so let's start T mocks back up

00:04:07,660 --> 00:04:13,409
again but this time let's detach instead

00:04:11,290 --> 00:04:17,440
of exiting and we do this by typing

00:04:13,409 --> 00:04:18,950
control B and then hitting the D key so

00:04:17,440 --> 00:04:21,290
control B is

00:04:18,950 --> 00:04:23,390
called the prefix so when we type this

00:04:21,290 --> 00:04:26,450
we're telling t MUX that hey we're about

00:04:23,390 --> 00:04:30,020
to tell you to do something and then D

00:04:26,450 --> 00:04:31,610
of course stands for detach so if you're

00:04:30,020 --> 00:04:36,140
a screen user you might remember that

00:04:31,610 --> 00:04:37,820
control a is a prefix and later I'll

00:04:36,140 --> 00:04:39,710
show you how to configure whatever

00:04:37,820 --> 00:04:42,080
prefix you want personally I find

00:04:39,710 --> 00:04:48,260
control B to be a finger workout so I

00:04:42,080 --> 00:04:50,150
changed mine to control ass but so

00:04:48,260 --> 00:04:52,160
wouldn't we detach after we did control

00:04:50,150 --> 00:04:54,320
B and then D we're back to our terminal

00:04:52,160 --> 00:04:56,600
session and you notice that he mucks

00:04:54,320 --> 00:04:58,880
tells us that were detached and what

00:04:56,600 --> 00:04:59,510
session we detached from but in the

00:04:58,880 --> 00:05:02,510
background

00:04:59,510 --> 00:05:05,780
our team X is still running so later if

00:05:02,510 --> 00:05:08,330
we want to attach back to our session we

00:05:05,780 --> 00:05:10,580
can run T much T MUX attached session or

00:05:08,330 --> 00:05:14,810
for brevity T MUX attached or for even

00:05:10,580 --> 00:05:19,100
more brevity T MUX a and when we do that

00:05:14,810 --> 00:05:20,780
we're right back to where we started so

00:05:19,100 --> 00:05:23,000
why is this useful

00:05:20,780 --> 00:05:25,820
the most common use case you'll find for

00:05:23,000 --> 00:05:28,460
this is SSH connections you'll connect

00:05:25,820 --> 00:05:30,230
to your remote machine you'll start a

00:05:28,460 --> 00:05:32,210
team accession and then everything that

00:05:30,230 --> 00:05:34,700
you do in that team accession is on that

00:05:32,210 --> 00:05:37,540
server and later if you get disconnected

00:05:34,700 --> 00:05:40,370
or if you you know quit work for the day

00:05:37,540 --> 00:05:42,260
when you come back tomorrow morning your

00:05:40,370 --> 00:05:43,460
team accession is there how you left it

00:05:42,260 --> 00:05:46,010
and you can get back right where you

00:05:43,460 --> 00:05:47,810
were so for a lot of people this is

00:05:46,010 --> 00:05:50,240
indeed the only reason they use T MUX

00:05:47,810 --> 00:05:52,540
they just create one window one session

00:05:50,240 --> 00:05:55,310
and then they just have that kind of

00:05:52,540 --> 00:05:57,920
insurance that if their internet gets

00:05:55,310 --> 00:06:00,770
unplugged they still have the code that

00:05:57,920 --> 00:06:04,520
they were working on this is actually

00:06:00,770 --> 00:06:07,250
also good for detaching tasks running

00:06:04,520 --> 00:06:08,870
them in the background so if I run you

00:06:07,250 --> 00:06:12,350
know a daemon or if I'm running a

00:06:08,870 --> 00:06:15,440
long-running task I could run it using

00:06:12,350 --> 00:06:16,760
no hub I could run it using disown but T

00:06:15,440 --> 00:06:19,010
MUX makes this a little bit easier to

00:06:16,760 --> 00:06:21,170
get back to where I was so if that

00:06:19,010 --> 00:06:24,050
long-running task is spitting out tens

00:06:21,170 --> 00:06:26,720
of thousands of line of output I can at

00:06:24,050 --> 00:06:29,360
any time reattach my session and then

00:06:26,720 --> 00:06:32,449
CEO hey this is this is where my

00:06:29,360 --> 00:06:35,240
my process is and this is about how far

00:06:32,449 --> 00:06:37,039
I think it has to go it's not impossible

00:06:35,240 --> 00:06:39,289
to do these things with no hub and

00:06:37,039 --> 00:06:40,099
disown it's just more difficult and

00:06:39,289 --> 00:06:42,590
quite annoying

00:06:40,099 --> 00:06:48,680
in fact so knowing I've never even tried

00:06:42,590 --> 00:06:50,060
it so now that we've reattached we're

00:06:48,680 --> 00:06:53,419
back in team ox we try some other

00:06:50,060 --> 00:06:56,689
features so the name team ox stands for

00:06:53,419 --> 00:06:59,240
terminal multiplexer making one terminal

00:06:56,689 --> 00:07:02,440
act like multiple terminals and so the

00:06:59,240 --> 00:07:05,800
first way we can do that is with Windows

00:07:02,440 --> 00:07:07,969
so here we are back in team ox and

00:07:05,800 --> 00:07:10,789
remember we already have the one window

00:07:07,969 --> 00:07:13,490
open windows zero so let's open a

00:07:10,789 --> 00:07:17,060
program I use vim for my editor so let's

00:07:13,490 --> 00:07:20,629
run vim okay so now this window is busy

00:07:17,060 --> 00:07:22,669
running vim in order for me to want to

00:07:20,629 --> 00:07:24,889
do something else I'm gonna have to open

00:07:22,669 --> 00:07:28,879
up a new window and I can open up a new

00:07:24,889 --> 00:07:35,000
window using ctrl BC control B again is

00:07:28,879 --> 00:07:37,610
the prefix and c is for create window so

00:07:35,000 --> 00:07:41,389
when I do that I have a new window with

00:07:37,610 --> 00:07:44,839
a new shell you can see down here my new

00:07:41,389 --> 00:07:47,690
window is window number one it's running

00:07:44,839 --> 00:07:50,509
Z shell my my shell and is our current

00:07:47,690 --> 00:07:53,779
window you can also see that the old

00:07:50,509 --> 00:07:55,520
window over here has a little dash next

00:07:53,779 --> 00:07:57,199
to it that says that this is our last

00:07:55,520 --> 00:08:00,710
window our previous window the last

00:07:57,199 --> 00:08:02,389
window we were at again a lot of

00:08:00,710 --> 00:08:04,520
information being packed into a very

00:08:02,389 --> 00:08:09,770
very tiny space here probably not out

00:08:04,520 --> 00:08:13,759
that important but well we'll get to why

00:08:09,770 --> 00:08:15,889
that's mildly interesting so how now

00:08:13,759 --> 00:08:18,740
that I have this new Z shell window how

00:08:15,889 --> 00:08:21,440
do I get to my old window so there's

00:08:18,740 --> 00:08:25,699
multiple ways in in true Tim Toyota fast

00:08:21,440 --> 00:08:28,190
occurred yeah since it was the previous

00:08:25,699 --> 00:08:33,589
window I can use control B&L for last

00:08:28,190 --> 00:08:35,449
window I can use control V and P since

00:08:33,589 --> 00:08:37,310
it's the previous window numerically so

00:08:35,449 --> 00:08:40,430
one will go to zero two would go to

00:08:37,310 --> 00:08:42,030
total one or I can actually choose my

00:08:40,430 --> 00:08:44,400
windows by number use

00:08:42,030 --> 00:08:47,670
control b0 so to go to window zero

00:08:44,400 --> 00:08:50,160
directly I can just choose it the last

00:08:47,670 --> 00:08:52,110
one is a little more difficult because

00:08:50,160 --> 00:08:54,000
the zero key is way over to the other

00:08:52,110 --> 00:08:56,070
side of my keyboard but we'll go over

00:08:54,000 --> 00:09:00,000
how to fix that also a little bit later

00:08:56,070 --> 00:09:03,090
here so doing any one of those will

00:09:00,000 --> 00:09:06,150
bring me back to them and then to get

00:09:03,090 --> 00:09:08,150
back to the new window I could do ctrl

00:09:06,150 --> 00:09:11,100
BL again because that was my last window

00:09:08,150 --> 00:09:16,800
I can go to the next window numerically

00:09:11,100 --> 00:09:18,090
or I can go directly to a new one yeah

00:09:16,800 --> 00:09:20,280
so I can easily move back and forth

00:09:18,090 --> 00:09:22,080
between our windows and now that I'm

00:09:20,280 --> 00:09:24,030
back in my new window I can run a

00:09:22,080 --> 00:09:26,370
command maybe look up T muxes

00:09:24,030 --> 00:09:28,230
documentation which is a really good

00:09:26,370 --> 00:09:31,350
thorough document I'm always impressed

00:09:28,230 --> 00:09:34,440
by this and then when I'm done looking

00:09:31,350 --> 00:09:37,590
at that I can exit the shell and we're

00:09:34,440 --> 00:09:42,390
back to our last window and the window

00:09:37,590 --> 00:09:44,790
that we had created is now destroyed so

00:09:42,390 --> 00:09:48,240
the next thing that a new team-ups user

00:09:44,790 --> 00:09:50,400
is going to come across is that once

00:09:48,240 --> 00:09:53,280
you've entered T MUX your terminal

00:09:50,400 --> 00:09:54,210
doesn't really work quite like it used

00:09:53,280 --> 00:09:56,490
to

00:09:54,210 --> 00:09:59,730
specifically the scroll bar doesn't

00:09:56,490 --> 00:10:03,690
quite work how it used to so if I run a

00:09:59,730 --> 00:10:06,750
command with a lot of outputs and then

00:10:03,690 --> 00:10:10,170
if I try to use my mouse usually to to

00:10:06,750 --> 00:10:11,640
scroll back up on my terminal window so

00:10:10,170 --> 00:10:15,110
I can see that I'm scrolling through the

00:10:11,640 --> 00:10:17,130
terminal here but not the output and

00:10:15,110 --> 00:10:20,970
sometimes I won't actually even scroll

00:10:17,130 --> 00:10:22,980
at all now this is mainly because the

00:10:20,970 --> 00:10:24,780
mouse isn't enabled in team ox and I'll

00:10:22,980 --> 00:10:29,760
go over you can enable that if you want

00:10:24,780 --> 00:10:33,180
I don't but if I want to actually look

00:10:29,760 --> 00:10:34,860
at all of this output T MUX is friendly

00:10:33,180 --> 00:10:37,440
and hopefully putting this output in a

00:10:34,860 --> 00:10:38,820
buffer for me and this is good because

00:10:37,440 --> 00:10:41,520
it means that we can come back to this

00:10:38,820 --> 00:10:44,830
later but it does mean that we need to

00:10:41,520 --> 00:10:46,600
tell T mocks that we want to look at it

00:10:44,830 --> 00:10:49,630
and we do that by entering what is

00:10:46,600 --> 00:10:53,980
called copy mode and we enter copy mode

00:10:49,630 --> 00:10:55,950
by hitting control B and then the that's

00:10:53,980 --> 00:10:59,910
a left brace left left square bracket

00:10:55,950 --> 00:10:59,910
left square bracket there we go

00:11:01,210 --> 00:11:08,260
so in copy mode here we have two changes

00:11:04,560 --> 00:11:09,730
down here the the name of our window is

00:11:08,260 --> 00:11:13,930
encased in brackets to show that we're

00:11:09,730 --> 00:11:17,170
in T Moxa's copy mode and then up here

00:11:13,930 --> 00:11:19,450
there's two numbers the first one shows

00:11:17,170 --> 00:11:21,900
what line we're on right now zero is the

00:11:19,450 --> 00:11:24,220
bottom of the screen and then the second

00:11:21,900 --> 00:11:27,280
shows the number of lines that we have

00:11:24,220 --> 00:11:31,840
in the buffer so we I have about 200

00:11:27,280 --> 00:11:35,770
lines up worth to go so I can move

00:11:31,840 --> 00:11:41,320
through this buffer using left up right

00:11:35,770 --> 00:11:43,810
and down I can use page up page down T

00:11:41,320 --> 00:11:49,480
MUX also comes setup with less style

00:11:43,810 --> 00:11:52,150
bindings so I can use hjkl control F to

00:11:49,480 --> 00:11:55,900
go up control B to go down and then

00:11:52,150 --> 00:11:58,150
lower case G to go to the top upper case

00:11:55,900 --> 00:12:00,310
G to go to the bottom you can't actually

00:11:58,150 --> 00:12:04,030
also configure other styles vim Emacs

00:12:00,310 --> 00:12:06,550
whatever you'd like so I hit the G key I

00:12:04,030 --> 00:12:08,200
scroll all the way to the up all the way

00:12:06,550 --> 00:12:11,650
to the top and I can hit capital G and

00:12:08,200 --> 00:12:13,450
scroll all the way to the bottom but I

00:12:11,650 --> 00:12:15,910
can also move through the buffer by

00:12:13,450 --> 00:12:16,690
searching for keywords again much like

00:12:15,910 --> 00:12:18,940
last fin

00:12:16,690 --> 00:12:20,800
Emacs all that I can use the question

00:12:18,940 --> 00:12:24,250
mark to search up and I can use the

00:12:20,800 --> 00:12:27,370
slash to search down so if I hit the

00:12:24,250 --> 00:12:29,370
question mark you can see that T MUX

00:12:27,370 --> 00:12:32,140
shows us that we're searching up and

00:12:29,370 --> 00:12:34,690
then all I have to do is type in what I

00:12:32,140 --> 00:12:38,340
want to look for I mean when I press

00:12:34,690 --> 00:12:40,750
ENTER T MUX shows me the search results

00:12:38,340 --> 00:12:43,360
it highlights all the matches that I

00:12:40,750 --> 00:12:44,680
have and then it puts the cursor on the

00:12:43,360 --> 00:12:48,280
bottom one since we were searching up

00:12:44,680 --> 00:12:49,660
and then if I want o right there tells

00:12:48,280 --> 00:12:52,060
us how many results we found this

00:12:49,660 --> 00:12:54,540
actually was pretty recently added then

00:12:52,060 --> 00:12:54,540
I like this a lot

00:12:54,910 --> 00:13:00,160
so then I can move through my next my

00:12:57,910 --> 00:13:02,560
results by pressing either lowercase n

00:13:00,160 --> 00:13:04,870
to go to the next or uppercase n to go

00:13:02,560 --> 00:13:08,740
to the previous I don't know why it's

00:13:04,870 --> 00:13:11,770
not P but yeah so pressing n goes to the

00:13:08,740 --> 00:13:14,950
next result here takes me up a little

00:13:11,770 --> 00:13:18,480
bit bit in the page and then if I want

00:13:14,950 --> 00:13:23,040
to exit copy mode I can hit Q to quit

00:13:18,480 --> 00:13:23,040
and then I'm back at my command prompt

00:13:25,080 --> 00:13:29,470
will the buffer continue to grow so the

00:13:27,490 --> 00:13:31,630
buffer will continue to grow up to the

00:13:29,470 --> 00:13:33,460
amount you set it to

00:13:31,630 --> 00:13:36,400
I generally configure it to be about

00:13:33,460 --> 00:13:38,560
10,000 lines and unfortunately for me

00:13:36,400 --> 00:13:41,200
with the the job I had that's actually

00:13:38,560 --> 00:13:43,780
not enough but I don't want to go too

00:13:41,200 --> 00:13:47,320
far because you know memory is a thing

00:13:43,780 --> 00:13:48,760
that is necessary for that so yeah you

00:13:47,320 --> 00:13:54,850
can configure that to be basically as

00:13:48,760 --> 00:13:56,170
tall as you want it to be so finally the

00:13:54,850 --> 00:13:58,720
last thing about copy mode is is it's

00:13:56,170 --> 00:14:01,150
called copy mode because we can copy

00:13:58,720 --> 00:14:04,540
text from the buffer and then paste it

00:14:01,150 --> 00:14:07,960
in later so I can start selecting text

00:14:04,540 --> 00:14:09,850
by pressing the spacebar and I can then

00:14:07,960 --> 00:14:11,800
just move through the text to select it

00:14:09,850 --> 00:14:14,530
so if I just move down a couple of lines

00:14:11,800 --> 00:14:16,840
I was select all this text and then I

00:14:14,530 --> 00:14:20,260
can either press ctrl W or I can press

00:14:16,840 --> 00:14:22,000
the Enter key to copy the text into the

00:14:20,260 --> 00:14:26,080
the paste bin or the pasteboard or

00:14:22,000 --> 00:14:27,610
clipboard clipboard that's the word and

00:14:26,080 --> 00:14:30,280
then I can go back to my editor window

00:14:27,610 --> 00:14:33,370
if I want and if I hit ctrl B and then

00:14:30,280 --> 00:14:37,840
the right square bracket it'll paste the

00:14:33,370 --> 00:14:38,470
text so some of that is a little bit

00:14:37,840 --> 00:14:40,950
awkward

00:14:38,470 --> 00:14:43,480
I will admit I don't use that very often

00:14:40,950 --> 00:14:45,100
most of the time I just select the text

00:14:43,480 --> 00:14:49,000
with our mouse and then copy and paste

00:14:45,100 --> 00:14:51,460
who I want but when the text is too big

00:14:49,000 --> 00:14:52,780
for a single screen of my terminal I end

00:14:51,460 --> 00:14:54,820
up having to go to copy mode

00:14:52,780 --> 00:14:56,950
pasting all you know copying all the

00:14:54,820 --> 00:14:59,490
text I want and then moving it to where

00:14:56,950 --> 00:14:59,490
I need it to be

00:15:00,940 --> 00:15:05,800
okay so team ox can create then multiple

00:15:03,670 --> 00:15:09,010
windows but what if I want to be able to

00:15:05,800 --> 00:15:12,130
look at both my editor and my output

00:15:09,010 --> 00:15:13,960
side by side so for this team ox

00:15:12,130 --> 00:15:18,280
actually allows splitting windows into

00:15:13,960 --> 00:15:23,800
panes so to split the window vertically

00:15:18,280 --> 00:15:25,720
I use ctrl B and then the % and now our

00:15:23,800 --> 00:15:28,120
window split into you can see I got them

00:15:25,720 --> 00:15:30,070
still on the one side and a new shell on

00:15:28,120 --> 00:15:33,010
the other side and I can split

00:15:30,070 --> 00:15:35,830
horizontally using ctrl B and then the

00:15:33,010 --> 00:15:36,550
double quotes I have no idea why these

00:15:35,830 --> 00:15:38,740
were chosen

00:15:36,550 --> 00:15:43,810
though the % at least looks like a

00:15:38,740 --> 00:15:46,120
vertical split so now I split my right

00:15:43,810 --> 00:15:49,600
pane into horizontally and I can keep

00:15:46,120 --> 00:15:51,370
going and going on into uselessness each

00:15:49,600 --> 00:15:53,380
pane has its own shell its own scroll

00:15:51,370 --> 00:15:55,930
buffer and when we're done with a pane

00:15:53,380 --> 00:15:59,680
we can exit the shell and the space case

00:15:55,930 --> 00:16:01,600
reclaimed so now we're back here - we

00:15:59,680 --> 00:16:05,440
got editor on one side the shell on the

00:16:01,600 --> 00:16:08,880
other to switch between these panes we

00:16:05,440 --> 00:16:11,290
can use ctrl B and then the left arrow

00:16:08,880 --> 00:16:12,850
so control B and the arrow keys will

00:16:11,290 --> 00:16:19,810
actually move us between the panes on

00:16:12,850 --> 00:16:24,070
the window so control B left and now I'm

00:16:19,810 --> 00:16:26,320
back in my editor and then if we split

00:16:24,070 --> 00:16:29,350
this pain but we need to see it full

00:16:26,320 --> 00:16:33,550
screen for for some reason we control B

00:16:29,350 --> 00:16:37,120
and Z for zoom we can actually see the

00:16:33,550 --> 00:16:38,830
plain full screen so I end up this one

00:16:37,120 --> 00:16:41,740
took me unfortunately a long time to

00:16:38,830 --> 00:16:45,280
learn and now I use it basically every

00:16:41,740 --> 00:16:48,100
single day especially one copy and

00:16:45,280 --> 00:16:49,390
pasting code to ask my you know

00:16:48,100 --> 00:16:54,460
co-workers hey what am I doing wrong

00:16:49,390 --> 00:16:56,980
here so when you're in zoom mode you can

00:16:54,460 --> 00:16:59,890
again notice that down here we're

00:16:56,980 --> 00:17:03,220
showing that we're zoomed so if you

00:16:59,890 --> 00:17:04,720
forget well there's an indication here

00:17:03,220 --> 00:17:07,089
but also if you forget and you try to

00:17:04,720 --> 00:17:09,000
move panes or if you try to split a pain

00:17:07,089 --> 00:17:11,790
it will DS oom first

00:17:09,000 --> 00:17:14,089
then split your pain so that's a little

00:17:11,790 --> 00:17:14,089
painful

00:17:14,300 --> 00:17:21,870
so yeah I'll be here all week

00:17:19,290 --> 00:17:24,420
those are the basics starting and

00:17:21,870 --> 00:17:27,689
stopping t MUX attaching and detaching

00:17:24,420 --> 00:17:30,630
from sessions creating destroying

00:17:27,689 --> 00:17:33,120
switching windows creating district

00:17:30,630 --> 00:17:35,370
sorry using the scroll buffer and copy

00:17:33,120 --> 00:17:37,770
mode and then creating destroying and

00:17:35,370 --> 00:17:42,450
switching panes so with only these

00:17:37,770 --> 00:17:45,600
things T MUX is a very useful tool I got

00:17:42,450 --> 00:17:50,580
around with using this only these

00:17:45,600 --> 00:17:52,950
features for the longest time but after

00:17:50,580 --> 00:17:56,130
a while you know I felt like trying to

00:17:52,950 --> 00:17:58,770
customize this and with my new job here

00:17:56,130 --> 00:18:01,230
I work at Grant Street group now I work

00:17:58,770 --> 00:18:03,330
on like five or six tickets in add a

00:18:01,230 --> 00:18:05,220
very small tickets and I all III

00:18:03,330 --> 00:18:08,340
generally have to like switch between

00:18:05,220 --> 00:18:11,670
tasks I have to go back to old tasks to

00:18:08,340 --> 00:18:15,000
fix minor bugs and my code and it became

00:18:11,670 --> 00:18:17,040
a lot of context switching so the rest

00:18:15,000 --> 00:18:22,860
of this is about how to maximize your

00:18:17,040 --> 00:18:23,910
efficiency with team ox and of course

00:18:22,860 --> 00:18:26,000
the first thing we have to do is

00:18:23,910 --> 00:18:29,040
customize it for our needs

00:18:26,000 --> 00:18:31,260
team ox is highly configurable like all

00:18:29,040 --> 00:18:33,150
good software I don't believe it can

00:18:31,260 --> 00:18:35,940
send email yet but I think they're

00:18:33,150 --> 00:18:37,350
working on it so I'm only going to be

00:18:35,940 --> 00:18:39,270
able to go over the most useful things

00:18:37,350 --> 00:18:42,360
especially for anyone who's just

00:18:39,270 --> 00:18:44,820
starting out these are of course just

00:18:42,360 --> 00:18:47,460
examples this is what I do if you have

00:18:44,820 --> 00:18:49,710
if this isn't your need you know go

00:18:47,460 --> 00:18:52,680
ahead try something else

00:18:49,710 --> 00:18:55,260
so the team X configuration file is team

00:18:52,680 --> 00:18:56,580
bucks Kampf in your home directory so if

00:18:55,260 --> 00:18:59,520
you've never configured timox before

00:18:56,580 --> 00:19:02,790
you're gonna have to create this so I'll

00:18:59,520 --> 00:19:05,070
open up this file and my editor here and

00:19:02,790 --> 00:19:08,220
then the first thing I do in team ox as

00:19:05,070 --> 00:19:11,040
I changed the prefix like I said control

00:19:08,220 --> 00:19:14,790
B default is kind of a finger workout

00:19:11,040 --> 00:19:17,190
for me I could actually use the keyboard

00:19:14,790 --> 00:19:20,610
correctly and maybe then it'd be using

00:19:17,190 --> 00:19:22,920
both hands but I don't do that so

00:19:20,610 --> 00:19:25,140
screen users will end up switching mr.

00:19:22,920 --> 00:19:27,960
control a and I don't like do that

00:19:25,140 --> 00:19:30,660
because it's actually useful for control

00:19:27,960 --> 00:19:33,900
a by default that's bound in most shells

00:19:30,660 --> 00:19:35,790
to move to the start of line so whenever

00:19:33,900 --> 00:19:37,830
I'm in screen I try to use control a to

00:19:35,790 --> 00:19:38,880
move the start line and then it doesn't

00:19:37,830 --> 00:19:40,470
do anything and I'm wondering what the

00:19:38,880 --> 00:19:43,830
heck

00:19:40,470 --> 00:19:46,590
so instead I decided to start using

00:19:43,830 --> 00:19:49,220
control s the s keys on the home row

00:19:46,590 --> 00:19:52,080
under my fingers and I never ever use

00:19:49,220 --> 00:19:56,130
control s for its initial purpose of cig

00:19:52,080 --> 00:20:01,850
stop I've never actually had a reason to

00:19:56,130 --> 00:20:07,440
use six-top but probably before my time

00:20:01,850 --> 00:20:10,290
so yeah oh yeah quick question no sorry

00:20:07,440 --> 00:20:12,090
I mean I will use control z putting in

00:20:10,290 --> 00:20:15,990
the background that works and that also

00:20:12,090 --> 00:20:21,390
stops it so hey so to change the prefix

00:20:15,990 --> 00:20:22,770
I'm gonna use the set command I have to

00:20:21,390 --> 00:20:24,840
give it the G option to make it a global

00:20:22,770 --> 00:20:26,790
setting so this will set the prefix for

00:20:24,840 --> 00:20:30,210
basically all the sessions all the

00:20:26,790 --> 00:20:32,760
windows all the things that I create and

00:20:30,210 --> 00:20:37,700
I'm going to set the prefix config to

00:20:32,760 --> 00:20:37,700
control s the capital C here is control

00:20:37,820 --> 00:20:42,690
after we change the prefix we're going

00:20:40,680 --> 00:20:45,120
to do two more things here quick

00:20:42,690 --> 00:20:47,880
first the default behavior for pressing

00:20:45,120 --> 00:20:49,710
control B twice is to send control B to

00:20:47,880 --> 00:20:52,740
the currently running a program in the

00:20:49,710 --> 00:20:54,960
in the terminal so I don't need to do

00:20:52,740 --> 00:20:57,110
that because control B isn't the prefix

00:20:54,960 --> 00:21:01,860
anymore so I can unbind the existing

00:20:57,110 --> 00:21:03,630
functionality of control B and then

00:21:01,860 --> 00:21:05,850
finally I need a way to send control s

00:21:03,630 --> 00:21:08,040
to the current program just in case like

00:21:05,850 --> 00:21:09,390
I mean I don't know why I would use sync

00:21:08,040 --> 00:21:12,390
stop but there might be a reason

00:21:09,390 --> 00:21:14,150
eventually in the future in fact most of

00:21:12,390 --> 00:21:19,290
the time I do it now is accidentally

00:21:14,150 --> 00:21:24,230
which is always fun so what I'll do is

00:21:19,290 --> 00:21:27,090
I'll bind control s to send the prefix

00:21:24,230 --> 00:21:29,070
so what this means then is that if I

00:21:27,090 --> 00:21:31,780
have if I you send the free if I hit the

00:21:29,070 --> 00:21:33,970
prefix and then hit control s

00:21:31,780 --> 00:21:40,060
I will send the prefix to the currently

00:21:33,970 --> 00:21:43,780
running program so now my prefixes

00:21:40,060 --> 00:21:47,170
control s control B is just control B

00:21:43,780 --> 00:21:49,270
whatever control B does and if I press

00:21:47,170 --> 00:21:53,590
control s twice it'll send control s

00:21:49,270 --> 00:21:55,660
once to the program now for maximum

00:21:53,590 --> 00:21:57,400
confusion I'm going to keep calling the

00:21:55,660 --> 00:21:59,350
prefix control B throughout the rest of

00:21:57,400 --> 00:22:02,710
this talk because that's what it's going

00:21:59,350 --> 00:22:04,150
to be when you start out so that will

00:22:02,710 --> 00:22:08,770
either limit the confusion or increase

00:22:04,150 --> 00:22:11,830
it whichever so next thing I want to do

00:22:08,770 --> 00:22:15,640
is I want to renumber my windows having

00:22:11,830 --> 00:22:17,500
the window start at 0 is annoying our

00:22:15,640 --> 00:22:20,710
window or I saw all our keyboards start

00:22:17,500 --> 00:22:24,910
numbering at 1 so ones on the Left zeros

00:22:20,710 --> 00:22:26,740
on the right so if I'm using the number

00:22:24,910 --> 00:22:28,420
keys to switch between Windows if I want

00:22:26,740 --> 00:22:31,570
the first window I have to go all the

00:22:28,420 --> 00:22:33,990
way to the right side of the keyboard

00:22:31,570 --> 00:22:36,640
which doesn't make any sense to me so

00:22:33,990 --> 00:22:37,120
what I like to do then is to fix this

00:22:36,640 --> 00:22:43,690
quick

00:22:37,120 --> 00:22:47,200
I set the base index to 1 and then when

00:22:43,690 --> 00:22:49,060
I add that to my configuration file and

00:22:47,200 --> 00:22:52,990
then I'll have to restart it eventually

00:22:49,060 --> 00:22:54,670
to get renumber in and the next thing I

00:22:52,990 --> 00:22:57,310
have to configure as a vim user is I

00:22:54,670 --> 00:22:59,350
have to configure the escape time the

00:22:57,310 --> 00:23:01,590
default behavior of T MUX is to wait one

00:22:59,350 --> 00:23:06,040
second after hitting the Escape key

00:23:01,590 --> 00:23:07,360
before whatever escape sequence here

00:23:06,040 --> 00:23:11,590
about the type is sent to the next

00:23:07,360 --> 00:23:15,180
program and this is because escape this

00:23:11,590 --> 00:23:19,270
gate key is is the first character in an

00:23:15,180 --> 00:23:21,390
ansi escape sequence it's a way to send

00:23:19,270 --> 00:23:23,680
special commands to terminals

00:23:21,390 --> 00:23:25,800
extremely special commands like pressing

00:23:23,680 --> 00:23:28,000
the left arrow to move the cursor left

00:23:25,800 --> 00:23:31,660
pressing the right arrow to move it

00:23:28,000 --> 00:23:34,810
right and trying to make bold text these

00:23:31,660 --> 00:23:36,520
are all escape sequences and since we

00:23:34,810 --> 00:23:38,740
use the arrow key to change panes

00:23:36,520 --> 00:23:40,420
teamworks has to wait for that escape

00:23:38,740 --> 00:23:41,760
sequence to be fully complete before it

00:23:40,420 --> 00:23:44,460
can decide whether or not

00:23:41,760 --> 00:23:46,920
to send it on to the program so normally

00:23:44,460 --> 00:23:49,020
this takes almost no time however if

00:23:46,920 --> 00:23:51,390
you're on a network or if you're on a

00:23:49,020 --> 00:23:57,230
cellular device this might take longer

00:23:51,390 --> 00:23:59,820
and longer so as a vim user though I

00:23:57,230 --> 00:24:02,730
need escape to get me out of insert mode

00:23:59,820 --> 00:24:05,010
and I need it fast so what I found is

00:24:02,730 --> 00:24:06,960
that I will type the code that I'm

00:24:05,010 --> 00:24:08,610
typing I'll hit the Escape key and then

00:24:06,960 --> 00:24:12,270
immediately start trying to go up and

00:24:08,610 --> 00:24:16,110
down in my file and start typing hjk and

00:24:12,270 --> 00:24:19,200
I'll in my in my editor so ruining

00:24:16,110 --> 00:24:20,910
whatever I'm trying to do so I can

00:24:19,200 --> 00:24:23,460
configure T MUX then to spend less time

00:24:20,910 --> 00:24:26,010
waiting for these things and just hope

00:24:23,460 --> 00:24:30,090
that I'm never on a TCP connection with

00:24:26,010 --> 00:24:34,020
a latency of you know a second so if I

00:24:30,090 --> 00:24:36,120
set the escape time to 20 milliseconds

00:24:34,020 --> 00:24:37,860
maybe that sounds about right

00:24:36,120 --> 00:24:41,510
we'll never we'll never have more than a

00:24:37,860 --> 00:24:44,310
40 second or 40 millisecond peeing right

00:24:41,510 --> 00:24:46,050
so with that out of the way I can access

00:24:44,310 --> 00:24:49,890
let's make it a little easier to move

00:24:46,050 --> 00:24:53,930
panes I'm a vim user so in my head I

00:24:49,890 --> 00:24:57,660
have mapped all of the arrows to hjkl

00:24:53,930 --> 00:25:00,330
it's actually kind of freaky how often I

00:24:57,660 --> 00:25:01,620
move to hjkl when I'm trying to for

00:25:00,330 --> 00:25:04,020
example play a video game and move

00:25:01,620 --> 00:25:08,070
around it's it's really weird how that's

00:25:04,020 --> 00:25:12,570
now ingrained in my head so if I want to

00:25:08,070 --> 00:25:16,770
I can bind the H key to select the pane

00:25:12,570 --> 00:25:19,980
to left and then if I do control B and H

00:25:16,770 --> 00:25:23,430
it'll go to left and then I can do the

00:25:19,980 --> 00:25:29,910
same thing for J to go down K to go up

00:25:23,430 --> 00:25:32,790
and L to go to the right but we're not

00:25:29,910 --> 00:25:35,190
limited to just using the prefix here I

00:25:32,790 --> 00:25:36,930
can also bind keys if I want so that if

00:25:35,190 --> 00:25:40,140
I press them at any time they will do a

00:25:36,930 --> 00:25:45,870
thing so I can make it so that for

00:25:40,140 --> 00:25:48,120
example holding the Alt key will and

00:25:45,870 --> 00:25:49,820
then hitting an arrow key will move me

00:25:48,120 --> 00:25:52,230
through panes

00:25:49,820 --> 00:25:55,160
so I can take all these binds that I

00:25:52,230 --> 00:25:58,049
made and if I add the m4

00:25:55,160 --> 00:26:02,940
no keyboards have a meta anymore so it's

00:25:58,049 --> 00:26:05,850
called alt and then if I pass the N

00:26:02,940 --> 00:26:10,429
option to say no prefix now if I hit alt

00:26:05,850 --> 00:26:10,429
H at any time it'll bring me to the left

00:26:12,740 --> 00:26:16,590
so once I've done all the configuration

00:26:15,960 --> 00:26:19,530
I'm going to do

00:26:16,590 --> 00:26:23,070
I can reload my config I could just

00:26:19,530 --> 00:26:25,490
restart T MUX but I'm lazy so I'm going

00:26:23,070 --> 00:26:28,890
to reload my confi in my current session

00:26:25,490 --> 00:26:31,290
we can load the config using T muxes

00:26:28,890 --> 00:26:36,960
source command much like bash source or

00:26:31,290 --> 00:26:39,330
shell source and there's not really key

00:26:36,960 --> 00:26:42,270
binding to do it so we can do that using

00:26:39,330 --> 00:26:43,980
T muxes command line to sort of show the

00:26:42,270 --> 00:26:46,740
command line I can do control B and then

00:26:43,980 --> 00:26:50,040
colon and then the status bar down here

00:26:46,740 --> 00:26:51,419
change to the command bar so this

00:26:50,040 --> 00:26:53,790
command bar down here at the bottom lets

00:26:51,419 --> 00:26:55,679
me execute T months commands indeed

00:26:53,790 --> 00:26:57,330
everything in this config file so far

00:26:55,679 --> 00:26:59,669
has been a team ox command if I wanted

00:26:57,330 --> 00:27:01,770
to I could run all that stuff down here

00:26:59,669 --> 00:27:06,210
on the command line and we'll actually

00:27:01,770 --> 00:27:07,860
get to more fun with that later so to

00:27:06,210 --> 00:27:10,679
load the command line remember we use

00:27:07,860 --> 00:27:12,419
the source command and then we give it

00:27:10,679 --> 00:27:16,490
the file that we want to source so this

00:27:12,419 --> 00:27:20,220
is our home directories T MUX con file

00:27:16,490 --> 00:27:23,910
so when I put that in it reads the file

00:27:20,220 --> 00:27:29,850
and now you can see that my numbers on

00:27:23,910 --> 00:27:31,710
the windows have changed so of course I

00:27:29,850 --> 00:27:36,600
can't be maximally productive unless I

00:27:31,710 --> 00:27:38,549
control how everything looks so T MUX

00:27:36,600 --> 00:27:42,270
lets us change the color and position of

00:27:38,549 --> 00:27:46,350
anything down here in the status bar for

00:27:42,270 --> 00:27:49,049
example this like blue on is a green on

00:27:46,350 --> 00:27:52,169
blue blue on green text down here like

00:27:49,049 --> 00:27:53,970
I'm having really trouble seeing that I

00:27:52,169 --> 00:27:56,250
use are you solarized for all my

00:27:53,970 --> 00:27:59,250
terminals and this is not a good color

00:27:56,250 --> 00:28:03,200
scheme for solarized and this this right

00:27:59,250 --> 00:28:05,629
side over here takes up a lot of

00:28:03,200 --> 00:28:05,840
I don't really need to know what day it

00:28:05,629 --> 00:28:07,969
is

00:28:05,840 --> 00:28:11,269
I mean I may forget what time it is but

00:28:07,969 --> 00:28:13,549
that's what I have a phone for so let's

00:28:11,269 --> 00:28:17,149
configure a couple other things first I

00:28:13,549 --> 00:28:19,460
can set the status background to be

00:28:17,149 --> 00:28:21,799
black and then I can set the status

00:28:19,460 --> 00:28:26,179
foreground to be white so I'll have

00:28:21,799 --> 00:28:27,649
black background white foreground and

00:28:26,179 --> 00:28:29,929
the next I can configure the amount of

00:28:27,649 --> 00:28:31,669
space that the left side which is the

00:28:29,929 --> 00:28:33,979
session name and the right side which is

00:28:31,669 --> 00:28:36,799
all that other stuff are allowed to take

00:28:33,979 --> 00:28:41,599
up so I can set the status left length

00:28:36,799 --> 00:28:43,879
to about 20 this this is what I have you

00:28:41,599 --> 00:28:45,440
can obviously set your own but we'll get

00:28:43,879 --> 00:28:49,070
into why you need some space over there

00:28:45,440 --> 00:28:50,359
a little bit later and I don't want the

00:28:49,070 --> 00:28:52,009
right side to take up as much space as

00:28:50,359 --> 00:28:56,929
it's taking up so I'm also going to set

00:28:52,009 --> 00:29:00,859
that to 20 and once I get all this

00:28:56,929 --> 00:29:04,429
configured I can again reload my config

00:29:00,859 --> 00:29:11,419
file and now we can see that everything

00:29:04,429 --> 00:29:12,679
looks prettier and over here the host

00:29:11,419 --> 00:29:15,049
name in the current time are being shown

00:29:12,679 --> 00:29:16,609
so it'll actually team ox will adjust

00:29:15,049 --> 00:29:19,369
how much it shows over there based on

00:29:16,609 --> 00:29:22,369
how much space it has to show things and

00:29:19,369 --> 00:29:23,719
this isn't actually that much or isn't

00:29:22,369 --> 00:29:25,369
actually like the limit of what

00:29:23,719 --> 00:29:29,690
teamworks can do there's people who put

00:29:25,369 --> 00:29:32,450
battery monitors load monitors they they

00:29:29,690 --> 00:29:34,759
really go can go overboard in the little

00:29:32,450 --> 00:29:38,679
area over there if if bells and whistles

00:29:34,759 --> 00:29:38,679
and gauges and dials are what you like

00:29:40,419 --> 00:29:45,889
so one more there's a lot more

00:29:42,499 --> 00:29:48,919
configuration to do but not much I can

00:29:45,889 --> 00:29:51,619
go over however I will say that if you

00:29:48,919 --> 00:29:54,739
like using a mouse in your terminals you

00:29:51,619 --> 00:29:56,599
can set mouse mode on and then once

00:29:54,739 --> 00:29:59,330
you're in Mouse mode the scroll wheel

00:29:56,599 --> 00:30:02,119
will work you'll go into copy mode when

00:29:59,330 --> 00:30:03,190
you try to select things and very much

00:30:02,119 --> 00:30:08,190
works

00:30:03,190 --> 00:30:10,420
much like Mouse mercs and vim or Emacs I

00:30:08,190 --> 00:30:12,610
personally don't use it I prefer my

00:30:10,420 --> 00:30:14,920
terminal to be a dumb texts displaying

00:30:12,610 --> 00:30:21,640
thing but I know a lot of people who

00:30:14,920 --> 00:30:24,070
like this so remember that detaching and

00:30:21,640 --> 00:30:26,920
attaching sessions are one of t muxes

00:30:24,070 --> 00:30:29,290
core features but what if I don't want

00:30:26,920 --> 00:30:33,520
to reattach to the session that I

00:30:29,290 --> 00:30:35,680
already have running so if I just run T

00:30:33,520 --> 00:30:40,000
MUX again without trying to attach to my

00:30:35,680 --> 00:30:42,280
to my session I get a new session you

00:30:40,000 --> 00:30:44,470
can see down here our session is now

00:30:42,280 --> 00:30:47,130
named one because I have a session zero

00:30:44,470 --> 00:30:49,570
already and this is session 1 here so

00:30:47,130 --> 00:30:51,940
now I have a new team accession

00:30:49,570 --> 00:30:54,070
completely unrelated to any other team

00:30:51,940 --> 00:30:55,690
work session I have running I can open

00:30:54,070 --> 00:30:58,060
up new windows I can split them two

00:30:55,690 --> 00:31:01,180
panes I can start programs just like any

00:30:58,060 --> 00:31:03,850
other team like session and then when we

00:31:01,180 --> 00:31:06,430
detach T MUX tells us that we detached

00:31:03,850 --> 00:31:10,390
from session 1 so let's try attaching

00:31:06,430 --> 00:31:11,680
again so if I run T MUX attached I get

00:31:10,390 --> 00:31:14,800
the last session that I attached you

00:31:11,680 --> 00:31:18,640
that's pretty handy but how do I get to

00:31:14,800 --> 00:31:20,620
the first session session 0 so I use T

00:31:18,640 --> 00:31:22,630
MUX attached with the - T option I can

00:31:20,620 --> 00:31:26,640
specify what session I want to attach to

00:31:22,630 --> 00:31:30,250
in this case one attached to session 0

00:31:26,640 --> 00:31:33,160
ok well so T MUX doesn't like being run

00:31:30,250 --> 00:31:36,670
inside T mocks so I forgot to detach

00:31:33,160 --> 00:31:39,970
first all right so I detach and then I

00:31:36,670 --> 00:31:42,310
run T MUX attached - T 0 and now I'm

00:31:39,970 --> 00:31:46,990
back to where I was before editing my

00:31:42,310 --> 00:31:48,880
config file so I want to know what

00:31:46,990 --> 00:31:50,350
teamwork sessions exists or even whether

00:31:48,880 --> 00:31:53,500
or not team Oakes is running I can run

00:31:50,350 --> 00:31:56,170
team ox LS and that will list all the

00:31:53,500 --> 00:31:58,930
running sessions their names and a

00:31:56,170 --> 00:32:00,460
couple bits of information about them if

00:31:58,930 --> 00:32:04,330
there's no team accession it'll tell you

00:32:00,460 --> 00:32:06,400
no server running but in order for us to

00:32:04,330 --> 00:32:07,780
really use multiple sessions properly

00:32:06,400 --> 00:32:09,990
we're gonna have to have something a

00:32:07,780 --> 00:32:12,850
little more descriptive than this 0 & 1

00:32:09,990 --> 00:32:14,920
we can instead give our sessions

00:32:12,850 --> 00:32:15,480
descriptive names the project we're

00:32:14,920 --> 00:32:19,500
working

00:32:15,480 --> 00:32:22,380
or the gyro ticket we're working on we

00:32:19,500 --> 00:32:25,019
can rename any session we have by using

00:32:22,380 --> 00:32:27,870
the rename session command I can either

00:32:25,019 --> 00:32:30,840
use the T MUX prompt back control V : to

00:32:27,870 --> 00:32:33,149
run rename session or this is actually

00:32:30,840 --> 00:32:35,039
bound to control V dollar slowing I

00:32:33,149 --> 00:32:35,399
didn't know that and I never remember

00:32:35,039 --> 00:32:38,580
that

00:32:35,399 --> 00:32:42,779
so I usually end up using the command

00:32:38,580 --> 00:32:43,139
prompt so I just need to type control V

00:32:42,779 --> 00:32:46,529
:

00:32:43,139 --> 00:32:47,880
and then rename session and then the

00:32:46,529 --> 00:32:51,450
sessions name so I'm gonna call this one

00:32:47,880 --> 00:32:53,610
my talk this is or maybe my talk then we

00:32:51,450 --> 00:32:56,909
were on that command our sessions

00:32:53,610 --> 00:32:58,080
renamed I can see down here that now my

00:32:56,909 --> 00:33:01,769
session name is taking up a little more

00:32:58,080 --> 00:33:06,059
space down on the left so that's why we

00:33:01,769 --> 00:33:08,730
got cetera set it to 20 earlier it now

00:33:06,059 --> 00:33:10,470
also shows up in team XLS so it's not

00:33:08,730 --> 00:33:16,919
session 1 you know LS anymore it's now

00:33:10,470 --> 00:33:18,690
session talk and also you can see team

00:33:16,919 --> 00:33:21,269
Excel s will tell us whether or not a

00:33:18,690 --> 00:33:23,010
session is attached so if someone else

00:33:21,269 --> 00:33:25,710
is attached to the session or some other

00:33:23,010 --> 00:33:29,100
terminal perhaps you can see that right

00:33:25,710 --> 00:33:30,809
and right in the Alex output so if I

00:33:29,100 --> 00:33:33,690
want to I can create a new session with

00:33:30,809 --> 00:33:39,480
a name right away by using T MUX new

00:33:33,690 --> 00:33:41,940
session or just t bux new the - s option

00:33:39,480 --> 00:33:45,840
then allows me to specify a name when I

00:33:41,940 --> 00:33:49,919
create the session so now I have a

00:33:45,840 --> 00:33:53,429
session second session named bug-fix so

00:33:49,919 --> 00:33:54,570
I use these a lot like I said my current

00:33:53,429 --> 00:33:57,240
job has to be bouncing around between

00:33:54,570 --> 00:34:00,139
four or five tickets a day each ticket

00:33:57,240 --> 00:34:03,120
touches different files different tests

00:34:00,139 --> 00:34:05,070
and no matter what two days later

00:34:03,120 --> 00:34:07,440
someone's gonna come and say hey you

00:34:05,070 --> 00:34:09,089
didn't quite do that right so can you

00:34:07,440 --> 00:34:11,129
just make this one little tweak on this

00:34:09,089 --> 00:34:12,690
line and it's really helpful to be able

00:34:11,129 --> 00:34:15,480
to have my editor already open to that

00:34:12,690 --> 00:34:17,280
window in that repository and just okay

00:34:15,480 --> 00:34:20,819
yeah switch to the session make the

00:34:17,280 --> 00:34:23,369
tweak run the tests and we're done

00:34:20,819 --> 00:34:25,050
so for each ticket then I work on I

00:34:23,369 --> 00:34:27,960
actually create a new session named

00:34:25,050 --> 00:34:30,970
after the JIRA ticket that

00:34:27,960 --> 00:34:32,559
that the works being done under that can

00:34:30,970 --> 00:34:35,079
attach to whatever session I want to

00:34:32,559 --> 00:34:37,029
work on do bunch of work when I get

00:34:35,079 --> 00:34:39,849
interrupted to work on something else I

00:34:37,029 --> 00:34:42,909
can go back to that session and so on

00:34:39,849 --> 00:34:45,849
and so forth so this really helps reduce

00:34:42,909 --> 00:34:48,159
the inertia of contacts wishing for me I

00:34:45,849 --> 00:34:50,289
was actually really struggling when I

00:34:48,159 --> 00:34:51,759
started at Grant Street of being able to

00:34:50,289 --> 00:34:55,690
switch between four or five tickets a

00:34:51,759 --> 00:34:57,579
day and I I kind of worked out how to do

00:34:55,690 --> 00:34:59,710
this I now have a bunch of shell scripts

00:34:57,579 --> 00:35:03,009
that actually like set up these sessions

00:34:59,710 --> 00:35:05,589
set up repositories I use get work trees

00:35:03,009 --> 00:35:08,319
so that I have different areas for every

00:35:05,589 --> 00:35:13,569
ticket that I'm working on and it's it's

00:35:08,319 --> 00:35:15,130
it's really been helping in addition

00:35:13,569 --> 00:35:19,269
then to naming sessions I can also name

00:35:15,130 --> 00:35:20,319
these windows like I may have mentioned

00:35:19,269 --> 00:35:22,119
before actually I don't think I

00:35:20,319 --> 00:35:23,559
mentioned before windows are named

00:35:22,119 --> 00:35:25,359
generally with the program that's

00:35:23,559 --> 00:35:27,130
running so you may have noticed down

00:35:25,359 --> 00:35:30,309
here that since this window is running

00:35:27,130 --> 00:35:31,869
vim it says it's running them and then

00:35:30,309 --> 00:35:33,400
since this window is running Zed shell

00:35:31,869 --> 00:35:36,339
that's running it just that's running

00:35:33,400 --> 00:35:39,390
Zed shell and this is a pretty useful

00:35:36,339 --> 00:35:43,240
default but let's create a new window

00:35:39,390 --> 00:35:46,809
okay now I have two windows named Z show

00:35:43,240 --> 00:35:48,250
and which ones which I don't know which

00:35:46,809 --> 00:35:49,779
one I have my tests in I don't know

00:35:48,250 --> 00:35:53,650
which one that I was looking up

00:35:49,779 --> 00:35:56,410
documentation or logs in so instead I

00:35:53,650 --> 00:35:59,589
can just rename the windows using ctrl V

00:35:56,410 --> 00:36:01,809
and then comma or of course the the

00:35:59,589 --> 00:36:04,869
rename window command this one I used so

00:36:01,809 --> 00:36:07,119
often I actually do know the shortcut so

00:36:04,869 --> 00:36:09,190
when I do ctrl V comma I get this

00:36:07,119 --> 00:36:12,640
command line down here and then in the

00:36:09,190 --> 00:36:14,859
prompt I have to block out the name

00:36:12,640 --> 00:36:17,680
that's there and replace it with the

00:36:14,859 --> 00:36:20,920
name that I want so this is my this is

00:36:17,680 --> 00:36:24,849
gonna be my editor window once I've done

00:36:20,920 --> 00:36:26,019
this this will stay the name even if I

00:36:24,849 --> 00:36:27,970
run a different program in it

00:36:26,019 --> 00:36:31,509
so this disables all the automatic

00:36:27,970 --> 00:36:34,900
renaming of windows so now I can easily

00:36:31,509 --> 00:36:36,750
remember which one has my editor which

00:36:34,900 --> 00:36:38,070
one I'm running my tests in

00:36:36,750 --> 00:36:43,860
and which one I've been looking at

00:36:38,070 --> 00:36:45,840
documentation eventually longer longer

00:36:43,860 --> 00:36:48,120
than I should have taken I realized that

00:36:45,840 --> 00:36:51,870
I was doing the same thing over and over

00:36:48,120 --> 00:36:54,060
and over and over again and when this

00:36:51,870 --> 00:36:55,800
happens I like to take a step back and

00:36:54,060 --> 00:36:57,990
say okay what what can I out of eight

00:36:55,800 --> 00:36:59,310
what can I do so that I don't have to do

00:36:57,990 --> 00:37:03,420
this boring stuff over and over and over

00:36:59,310 --> 00:37:05,760
again so in this case I was creating the

00:37:03,420 --> 00:37:08,550
same team oak sessions over and over and

00:37:05,760 --> 00:37:11,780
over again whenever I write a blog post

00:37:08,550 --> 00:37:17,340
I would create one with my editor and my

00:37:11,780 --> 00:37:18,720
blog site generator on one side when I

00:37:17,340 --> 00:37:20,970
was working on the sea pentesters back

00:37:18,720 --> 00:37:23,400
end I'd have to have one window for my

00:37:20,970 --> 00:37:24,840
code and one window for my tests so that

00:37:23,400 --> 00:37:28,380
I could always like go back and forth

00:37:24,840 --> 00:37:31,740
between the test results and my editor

00:37:28,380 --> 00:37:34,110
and when I'm working on my antsy content

00:37:31,740 --> 00:37:34,950
management system I need a window for

00:37:34,110 --> 00:37:37,890
editing

00:37:34,950 --> 00:37:39,300
I need window for testing and I need a

00:37:37,890 --> 00:37:43,410
third window that runs all of the

00:37:39,300 --> 00:37:46,080
databases that yancey supports I support

00:37:43,410 --> 00:37:48,420
post grass my sequel and so we have to

00:37:46,080 --> 00:37:51,270
run a version of those so that I can run

00:37:48,420 --> 00:37:53,160
my tests against them the tests also

00:37:51,270 --> 00:37:54,810
require a bunch of environment variables

00:37:53,160 --> 00:37:57,350
that I need to set up and if I had to do

00:37:54,810 --> 00:37:59,760
that every single time I would go nuts

00:37:57,350 --> 00:38:01,530
even if I had to do it once a week I

00:37:59,760 --> 00:38:03,570
would go nuts

00:38:01,530 --> 00:38:04,860
worse in that last example there where I

00:38:03,570 --> 00:38:07,950
got a set of the environment and

00:38:04,860 --> 00:38:10,050
everything I'm going to forget and if I

00:38:07,950 --> 00:38:11,220
forget I'm not running all my tests I'm

00:38:10,050 --> 00:38:12,780
not running all my tests I'm gonna

00:38:11,220 --> 00:38:14,220
release code that doesn't work and then

00:38:12,780 --> 00:38:16,080
something's going to explode and

00:38:14,220 --> 00:38:17,870
everyone's going to die and I will have

00:38:16,080 --> 00:38:21,210
killed you

00:38:17,870 --> 00:38:26,130
so to read this I can automate the setup

00:38:21,210 --> 00:38:29,250
of my team of sessions so and I can do

00:38:26,130 --> 00:38:30,780
that using T mocks commands remember we

00:38:29,250 --> 00:38:33,540
were using T mocks clans to rename

00:38:30,780 --> 00:38:35,820
sessions and the command prompt we were

00:38:33,540 --> 00:38:39,270
using TMS command to configure T MUX in

00:38:35,820 --> 00:38:42,090
the the configuration file T MUX also

00:38:39,270 --> 00:38:45,720
has commands to create windows to create

00:38:42,090 --> 00:38:46,440
panes to move between panes and even to

00:38:45,720 --> 00:38:48,839
like

00:38:46,440 --> 00:38:52,890
run programs in those those windows in

00:38:48,839 --> 00:38:54,599
those panes so I can run but also I can

00:38:52,890 --> 00:38:56,369
run these team expands from anywhere I

00:38:54,599 --> 00:39:00,599
don't have to be inside tea mugs to run

00:38:56,369 --> 00:39:02,099
these commands so indeed I can run a

00:39:00,599 --> 00:39:07,020
bunch of clans to set up a session

00:39:02,099 --> 00:39:10,440
before I attach to it so if I create a

00:39:07,020 --> 00:39:12,420
session let's name it Yancey for the the

00:39:10,440 --> 00:39:17,310
CMS that I work on and then if I pass

00:39:12,420 --> 00:39:21,270
the dash D it immediately detaches so if

00:39:17,310 --> 00:39:24,420
I do that nothing happens but if I go

00:39:21,270 --> 00:39:27,780
back and look at the LS you can see that

00:39:24,420 --> 00:39:29,849
my session did get created so now I can

00:39:27,780 --> 00:39:32,940
run other commands to modify this

00:39:29,849 --> 00:39:35,250
session and since I'll be doing this a

00:39:32,940 --> 00:39:37,079
lot I I wrote a shell script to do it

00:39:35,250 --> 00:39:39,210
for me

00:39:37,079 --> 00:39:43,109
so here I create a new session and

00:39:39,210 --> 00:39:44,730
detached from it and then first the next

00:39:43,109 --> 00:39:47,400
thing I do is create a new window so

00:39:44,730 --> 00:39:48,720
this is going to be my second window and

00:39:47,400 --> 00:39:51,180
I'm going to split that window up into

00:39:48,720 --> 00:39:53,160
two panes vertically so one over the

00:39:51,180 --> 00:39:55,680
other

00:39:53,160 --> 00:39:57,780
the first window is my editor so I'm

00:39:55,680 --> 00:39:58,470
going to send it the vim command and

00:39:57,780 --> 00:40:03,720
press Enter

00:39:58,470 --> 00:40:06,869
and then the second window I'm going to

00:40:03,720 --> 00:40:10,829
run the actual CMS in it this is the

00:40:06,869 --> 00:40:13,829
second window in the first pane 2.0 the

00:40:10,829 --> 00:40:15,329
bottom pane 2.1 i'm going to add those

00:40:13,829 --> 00:40:17,700
environment variables i was mentioning

00:40:15,329 --> 00:40:19,740
before and then i'm going to create a

00:40:17,700 --> 00:40:21,810
new window the third window and run

00:40:19,740 --> 00:40:24,720
Postgres and then i'm gonna split that

00:40:21,810 --> 00:40:29,640
window and run my sequel that's Postgres

00:40:24,720 --> 00:40:31,890
above my sequel and then if i wrap this

00:40:29,640 --> 00:40:35,640
whole thing in a conditional I can see

00:40:31,890 --> 00:40:38,970
if the session does not yet exist create

00:40:35,640 --> 00:40:40,410
it but if it does exist all you do is

00:40:38,970 --> 00:40:42,740
you go down to the bottom and you attach

00:40:40,410 --> 00:40:42,740
to it

00:40:44,480 --> 00:40:50,280
so I've been doing this I actually added

00:40:48,030 --> 00:40:51,630
this to the UNC repository it's been so

00:40:50,280 --> 00:40:54,660
useful

00:40:51,630 --> 00:40:57,540
there's besides these shell scripts

00:40:54,660 --> 00:41:00,200
there are other ways of doing this I've

00:40:57,540 --> 00:41:02,490
been using something called T MUX a fire

00:41:00,200 --> 00:41:06,150
but there's also something called T

00:41:02,490 --> 00:41:08,550
Mosul but since I learned how to do it

00:41:06,150 --> 00:41:11,310
using shell scripts now mostly I just

00:41:08,550 --> 00:41:13,380
use it doing shell scripts T MUX a fire

00:41:11,310 --> 00:41:16,050
and T Mosul were both kind of I guess

00:41:13,380 --> 00:41:20,160
before it was as easy as it was to do it

00:41:16,050 --> 00:41:21,900
using shell but but also these these two

00:41:20,160 --> 00:41:23,730
things will actually help you organize

00:41:21,900 --> 00:41:25,380
and manage your sessions if you don't

00:41:23,730 --> 00:41:31,230
want to do that yourself using shell

00:41:25,380 --> 00:41:33,090
scripts so that's how I've been using T

00:41:31,230 --> 00:41:35,910
MUX to organize all my development and

00:41:33,090 --> 00:41:37,800
kind of help me with switching between

00:41:35,910 --> 00:41:39,530
all the various tasks I work on a given

00:41:37,800 --> 00:41:45,860
day

00:41:39,530 --> 00:41:45,860
do we have any questions yes

00:41:57,530 --> 00:42:03,119
yeah so question is do I do is Sh into

00:42:01,380 --> 00:42:05,040
the remote host before running T MUX and

00:42:03,119 --> 00:42:07,770
then use the multiple team box windows

00:42:05,040 --> 00:42:11,580
on the remote house and yes that's so

00:42:07,770 --> 00:42:13,890
usually what I do is most places have

00:42:11,580 --> 00:42:15,690
like a gateway host or a bastion host or

00:42:13,890 --> 00:42:18,600
they're like my own development server

00:42:15,690 --> 00:42:20,730
and what I'll do is I'll SSH to my

00:42:18,600 --> 00:42:22,470
server the place where I put my team up

00:42:20,730 --> 00:42:24,930
sessions and then if I need to go to

00:42:22,470 --> 00:42:26,820
other places I will just open up a new

00:42:24,930 --> 00:42:29,880
window and team ox and SSH to a further

00:42:26,820 --> 00:42:33,660
server this involves of course setting

00:42:29,880 --> 00:42:36,600
up SSH agents setting up SSH agent

00:42:33,660 --> 00:42:38,220
forwarding and there's annoying things

00:42:36,600 --> 00:42:41,100
about when you reattach to a team

00:42:38,220 --> 00:42:45,270
accession you have to fix the SSH agent

00:42:41,100 --> 00:42:47,369
forwarding a little bit it's it's it's a

00:42:45,270 --> 00:42:49,590
lot of people have this annoyance and

00:42:47,369 --> 00:42:52,110
I've I've got it as less annoying as I

00:42:49,590 --> 00:42:55,140
can but it's still not unfortunately

00:42:52,110 --> 00:42:56,790
turnkey but yeah so III for Grand Street

00:42:55,140 --> 00:42:59,790
at least I spent all my development time

00:42:56,790 --> 00:43:02,190
on the server for my personal laptop

00:42:59,790 --> 00:43:04,550
well my development time is is just my

00:43:02,190 --> 00:43:07,020
team work sessions are on my laptop here

00:43:04,550 --> 00:43:09,960
looks like I got question from the

00:43:07,020 --> 00:43:12,000
audience do you ever change the info on

00:43:09,960 --> 00:43:17,990
the bottom right since you don't care

00:43:12,000 --> 00:43:17,990
about it mmm I did yeah no I do not oh

00:43:19,220 --> 00:43:22,800
right yes I got I get rid of the date I

00:43:21,480 --> 00:43:25,260
just yeah basically I squeeze it all

00:43:22,800 --> 00:43:27,690
down there I don't really need any of

00:43:25,260 --> 00:43:28,609
that down there I do keep the time there

00:43:27,690 --> 00:43:31,890
because it's a nice indication

00:43:28,609 --> 00:43:34,080
especially at work it reminds me because

00:43:31,890 --> 00:43:36,510
the old work servers are in this time

00:43:34,080 --> 00:43:38,369
zone and I live in central time zone so

00:43:36,510 --> 00:43:40,470
it's nice to say oh hey it's 5 o'clock

00:43:38,369 --> 00:43:42,450
Chris is not in Pittsburgh Chris is

00:43:40,470 --> 00:43:46,740
never going to get that review is never

00:43:42,450 --> 00:43:50,119
gonna send that back to me so any other

00:43:46,740 --> 00:43:50,119
questions comments concerns yes

00:44:02,920 --> 00:44:09,039
it is yes so the question is is is how

00:44:06,650 --> 00:44:12,799
can I get team ox share team accessions

00:44:09,039 --> 00:44:16,549
and team ox now has a concept of a

00:44:12,799 --> 00:44:17,930
socket and if you I believe it's I don't

00:44:16,549 --> 00:44:19,339
I don't know unfortunately what the

00:44:17,930 --> 00:44:23,089
command line but it's it's something you

00:44:19,339 --> 00:44:26,660
pass to TIA MUX itself it must be

00:44:23,089 --> 00:44:28,640
capital s yeah so - capital S will be a

00:44:26,660 --> 00:44:30,529
socket file and then what you do is you

00:44:28,640 --> 00:44:32,359
create a new socket file give that other

00:44:30,529 --> 00:44:34,819
person permissions to that socket file

00:44:32,359 --> 00:44:36,650
and then they can use that same socket

00:44:34,819 --> 00:44:39,309
file to connect to it any team

00:44:36,650 --> 00:44:41,960
accessions running in that socket file

00:44:39,309 --> 00:44:43,999
so that's so basically all you need to

00:44:41,960 --> 00:44:45,230
do is kind of set permissions on that

00:44:43,999 --> 00:44:49,029
one file and then other people can

00:44:45,230 --> 00:44:49,029
connect they want it to actually be you

00:45:00,650 --> 00:45:04,740
okaythat's yeah that's a good idea of

00:45:02,670 --> 00:45:08,400
changing changing the team account for

00:45:04,740 --> 00:45:09,030
roots to be read or to say hey you are

00:45:08,400 --> 00:45:13,500
roots

00:45:09,030 --> 00:45:15,420
be careful yeah that's yeah no that's a

00:45:13,500 --> 00:45:16,920
like yeah usually usually for me it's

00:45:15,420 --> 00:45:21,660
just the prompt but yeah if I if I don't

00:45:16,920 --> 00:45:27,500
notice the prompt then yeah alright

00:45:21,660 --> 00:45:27,500
anything else yeah all right

00:45:39,840 --> 00:45:45,190
yes ah this is just my vim but I have I

00:45:43,510 --> 00:45:51,940
have yeah I have something similar in

00:45:45,190 --> 00:45:54,640
that ah well I used to have something

00:45:51,940 --> 00:45:57,460
similar but I made the slides and the

00:45:54,640 --> 00:45:59,860
tea much confers from these slides but

00:45:57,460 --> 00:46:02,470
you can actually get it to look like

00:45:59,860 --> 00:46:04,870
this this power line thing this really

00:46:02,470 --> 00:46:06,640
kind of fancy like this is using a

00:46:04,870 --> 00:46:08,920
custom font to get these special arrows

00:46:06,640 --> 00:46:11,680
down here and over here and this little

00:46:08,920 --> 00:46:14,350
ln4 line is a custom font thing it's

00:46:11,680 --> 00:46:15,490
it's this this is power line there's air

00:46:14,350 --> 00:46:17,470
line there's all sorts of other things

00:46:15,490 --> 00:46:19,780
and you can really get some fun

00:46:17,470 --> 00:46:25,620
interesting stuff in your terminal that

00:46:19,780 --> 00:46:25,620
was normally relegated to to GUI editors

00:46:26,280 --> 00:46:37,309
alright thank you very much

00:46:29,600 --> 00:46:37,309

YouTube URL: https://www.youtube.com/watch?v=o7Dg1kmjhfQ


