Title: Jeremy Zawodny - "Modernizing Legacy Perl Serving Millions Daily"
Publication date: 2018-06-19
Playlist: TPC 2018 in SLC
Description: 
	cgi-lib.pl, CGI.pm, mod_perl, and Mojolicious: all in the same codebase?!?! It’s not uncommon for developers in Perl shops to be dealing with older code, so how do you do it? This session will discuss strategies, ideas, and the pain (both technical and organizational) associated with dragging 15+ year old code into the Modern Age while also continuing to build new things–and do it with a famously small staff. This talk will consider factors beyond the code, such as the changing landscapes in infrastructure, testing, deployment, logging, APIs, monitoring, and more.
Captions: 
	00:00:00,030 --> 00:00:05,520
in ballroom see I am jeromy's Awad nee

00:00:02,639 --> 00:00:07,680
I'm here to talk about well the original

00:00:05,520 --> 00:00:10,620
title of my talk was modernizing legacy

00:00:07,680 --> 00:00:12,750
pearl serving millions daily and I will

00:00:10,620 --> 00:00:15,240
talk some about that first of all thank

00:00:12,750 --> 00:00:17,490
you all for coming it's been interesting

00:00:15,240 --> 00:00:18,840
to be at the pro conference so far and I

00:00:17,490 --> 00:00:20,850
hope you've enjoyed some of the

00:00:18,840 --> 00:00:22,859
presentations you've been to as well if

00:00:20,850 --> 00:00:25,289
if you have questions as I'm going along

00:00:22,859 --> 00:00:26,460
feel free to raise your hand if you need

00:00:25,289 --> 00:00:29,279
to interrupt me or whatnot

00:00:26,460 --> 00:00:30,779
I'm not opposed to that I'm fine with

00:00:29,279 --> 00:00:33,030
this being audience participation in

00:00:30,779 --> 00:00:36,960
fact I'll have some questions for you so

00:00:33,030 --> 00:00:38,250
a brief bit about who I am I don't know

00:00:36,960 --> 00:00:38,850
most of the people here and you probably

00:00:38,250 --> 00:00:42,809
don't know me

00:00:38,850 --> 00:00:44,510
so my experience has been I'm I've been

00:00:42,809 --> 00:00:46,920
in Craigslist now for about ten years

00:00:44,510 --> 00:00:49,829
worked a lot in pearl they are in

00:00:46,920 --> 00:00:52,110
previous jobs I was at Yahoo for eight

00:00:49,829 --> 00:00:54,210
and a half years or so before that did a

00:00:52,110 --> 00:00:55,860
lot of pearl there as well I was at a

00:00:54,210 --> 00:00:59,370
company called Marathon oil before that

00:00:55,860 --> 00:01:03,449
and did pearl stuff there as well and so

00:00:59,370 --> 00:01:05,729
I've been doing pearl for a long time I

00:01:03,449 --> 00:01:09,479
I figured it out I started with pearl

00:01:05,729 --> 00:01:11,250
and back in about 1994 and this was an

00:01:09,479 --> 00:01:13,409
interesting presentation for me to put

00:01:11,250 --> 00:01:14,700
together because it made me this is the

00:01:13,409 --> 00:01:15,900
first time I put together presentation I

00:01:14,700 --> 00:01:18,450
was like man I'm starting to feel old

00:01:15,900 --> 00:01:23,549
this this is weird

00:01:18,450 --> 00:01:25,470
the the mosa has been back in

00:01:23,549 --> 00:01:26,939
infrastructure type work and it's often

00:01:25,470 --> 00:01:29,400
pearl in conjunction with other things

00:01:26,939 --> 00:01:32,400
has been like pearl with MySQL or pearl

00:01:29,400 --> 00:01:34,530
with Fink's or Redis or MongoDB or

00:01:32,400 --> 00:01:37,920
various other things that I don't even

00:01:34,530 --> 00:01:39,390
remember anymore I did write a book for

00:01:37,920 --> 00:01:41,220
O'Reilly years ago called high

00:01:39,390 --> 00:01:42,720
performance MySQL there's a tiny picture

00:01:41,220 --> 00:01:47,070
but over there some of you may have seen

00:01:42,720 --> 00:01:49,710
that thank you if you ever get the idea

00:01:47,070 --> 00:01:52,140
to write a book my my advice is don't I

00:01:49,710 --> 00:01:54,030
was given that advice by someone who

00:01:52,140 --> 00:01:57,869
wrote a book and actually was my first

00:01:54,030 --> 00:02:01,079
manager at Yahoo but I kind of ignored

00:01:57,869 --> 00:02:02,310
that it was it was an interesting

00:02:01,079 --> 00:02:04,320
experience it was one of those things

00:02:02,310 --> 00:02:06,000
where they always tell you that the best

00:02:04,320 --> 00:02:07,770
way to convince yourself that you really

00:02:06,000 --> 00:02:09,209
know a topic was to try to teach it to

00:02:07,770 --> 00:02:11,550
someone else and writing a book is like

00:02:09,209 --> 00:02:13,490
that you get partway down the road and

00:02:11,550 --> 00:02:16,640
then realize how will you actually know

00:02:13,490 --> 00:02:18,290
anyway I for fun I also I fly airplanes

00:02:16,640 --> 00:02:20,660
so those are pictures of some of the

00:02:18,290 --> 00:02:23,060
airplanes I fly because everything can't

00:02:20,660 --> 00:02:25,430
be about programming all the time a

00:02:23,060 --> 00:02:27,470
couple other things about me and this

00:02:25,430 --> 00:02:28,760
talk I I don't claim to be a

00:02:27,470 --> 00:02:29,690
particularly great program or anything

00:02:28,760 --> 00:02:31,340
like that

00:02:29,690 --> 00:02:32,750
but I've been at it a while and I do

00:02:31,340 --> 00:02:36,590
really like Perl that's why I've been

00:02:32,750 --> 00:02:40,100
using Perl for 20-some years now and

00:02:36,590 --> 00:02:41,960
it's it's really more the idea that I've

00:02:40,100 --> 00:02:43,460
I've been doing this long enough and

00:02:41,960 --> 00:02:44,990
I've talked to other people that have

00:02:43,460 --> 00:02:46,880
been doing this stuff long enough that

00:02:44,990 --> 00:02:48,860
I've seen a lot of things and I've done

00:02:46,880 --> 00:02:51,650
a lot of things myself and I made a

00:02:48,860 --> 00:02:53,570
bunch of mistakes and often had to fix

00:02:51,650 --> 00:02:56,000
them or fix other people's mistakes too

00:02:53,570 --> 00:02:58,100
and and part of it is kind of looking

00:02:56,000 --> 00:03:00,890
back and going kind of how did things

00:02:58,100 --> 00:03:04,190
get where we are today and what would I

00:03:00,890 --> 00:03:05,330
learn along the way and I suspect that a

00:03:04,190 --> 00:03:06,830
number of you in the room could probably

00:03:05,330 --> 00:03:11,150
add to the some of the things I'll talk

00:03:06,830 --> 00:03:13,100
about as well so really the title for

00:03:11,150 --> 00:03:15,440
this talk could have been twenty years

00:03:13,100 --> 00:03:17,150
of Perl for internet stuff and and and

00:03:15,440 --> 00:03:18,739
some of the things I and others have

00:03:17,150 --> 00:03:20,840
learned along the way because it's kind

00:03:18,739 --> 00:03:24,080
of what this is I didn't know that when

00:03:20,840 --> 00:03:24,980
I started putting it together also I was

00:03:24,080 --> 00:03:26,060
told that there were certain things I

00:03:24,980 --> 00:03:27,230
wasn't supposed to talk about so I'd

00:03:26,060 --> 00:03:29,300
take them out and I kind of change to

00:03:27,230 --> 00:03:34,550
talk a little bit so that happens

00:03:29,300 --> 00:03:37,160
sometimes do so a lot of this stuff is

00:03:34,550 --> 00:03:39,980
my opinion but it's a painting born out

00:03:37,160 --> 00:03:41,360
of experience and not necessarily a

00:03:39,980 --> 00:03:43,459
painting that's always been the same

00:03:41,360 --> 00:03:44,630
it's you know I think things are a

00:03:43,459 --> 00:03:47,510
certain way or I've had certain ideas

00:03:44,630 --> 00:03:49,370
and then I go along and I I build

00:03:47,510 --> 00:03:51,050
something or I fix something or I fail

00:03:49,370 --> 00:03:52,280
or something and I changed my opinions

00:03:51,050 --> 00:03:54,920
on that topic and I think that's the way

00:03:52,280 --> 00:03:56,600
it's supposed to work so I'm sure many

00:03:54,920 --> 00:03:58,130
other folks in the room had different

00:03:56,600 --> 00:04:01,280
opinions and that's great and we may

00:03:58,130 --> 00:04:02,390
hear some of them today as well you know

00:04:01,280 --> 00:04:03,860
pearls used in a lot of different

00:04:02,390 --> 00:04:05,150
contexts a lot different ways about a

00:04:03,860 --> 00:04:06,739
lot of different people and I'm just

00:04:05,150 --> 00:04:09,080
going to be talking from a certain point

00:04:06,739 --> 00:04:10,519
of view if you're interested in a talk

00:04:09,080 --> 00:04:12,709
that has a lot of code in it this isn't

00:04:10,519 --> 00:04:13,760
the one today I suggest going next door

00:04:12,709 --> 00:04:15,230
because that one looks really

00:04:13,760 --> 00:04:18,799
interesting and that's probably where

00:04:15,230 --> 00:04:20,780
I'd be if I wasn't here right now so to

00:04:18,799 --> 00:04:23,539
continue that the idea of dating myself

00:04:20,780 --> 00:04:25,760
a little bit out of curiosity I was

00:04:23,539 --> 00:04:27,410
trying to record with us trying to

00:04:25,760 --> 00:04:29,480
remember like the first pro conference

00:04:27,410 --> 00:04:31,250
I remember I think I was at the first

00:04:29,480 --> 00:04:32,540
pro conference it was either the first

00:04:31,250 --> 00:04:35,630
one of the second one I was pretty sure

00:04:32,540 --> 00:04:36,740
it was the one in 1997 and and I looked

00:04:35,630 --> 00:04:37,880
at that last night and I was like oh

00:04:36,740 --> 00:04:39,860
crap that was twenty years ago

00:04:37,880 --> 00:04:41,540
Wow okay things of things have been

00:04:39,860 --> 00:04:42,830
going on a while and have really come a

00:04:41,540 --> 00:04:45,830
long way how many of you in the room

00:04:42,830 --> 00:04:47,750
were at that conference okay Randall was

00:04:45,830 --> 00:04:53,240
there I'm not surprised because I saw

00:04:47,750 --> 00:04:54,650
him speak there so okay I have other

00:04:53,240 --> 00:04:58,760
questions then so this is audience

00:04:54,650 --> 00:05:01,700
participation time so first of all how

00:04:58,760 --> 00:05:04,190
many of you use Perl primarily for work

00:05:01,700 --> 00:05:07,700
hands up and keep your hands up if you

00:05:04,190 --> 00:05:10,610
use it mainly for hobby stuff and if you

00:05:07,700 --> 00:05:13,550
use it for work and hobby stuff okay

00:05:10,610 --> 00:05:16,550
okay that's kind of what I expected so

00:05:13,550 --> 00:05:18,260
now we'll do the Perl experience if

00:05:16,550 --> 00:05:21,320
you've been using Perl for two or more

00:05:18,260 --> 00:05:26,590
years put your hand up five or more

00:05:21,320 --> 00:05:31,910
years ten or more years 15 or more years

00:05:26,590 --> 00:05:34,040
20 or more years 25 or more years okay

00:05:31,910 --> 00:05:37,250
I'm not I'm talking to people like me it

00:05:34,040 --> 00:05:42,170
seems then okay maybe we'll just all

00:05:37,250 --> 00:05:44,450
reminisce for an hour here another

00:05:42,170 --> 00:05:46,490
another interesting question is what I'm

00:05:44,450 --> 00:05:48,110
curious about the ages of like the code

00:05:46,490 --> 00:05:50,900
base that you primarily have to work in

00:05:48,110 --> 00:05:52,490
if there's like a primary ball of code

00:05:50,900 --> 00:05:53,960
you have to maintain I'm sure that's the

00:05:52,490 --> 00:05:56,450
case for a number of people if you work

00:05:53,960 --> 00:05:58,100
full-time at a company if that ball of

00:05:56,450 --> 00:06:02,120
code you're maintaining is five or more

00:05:58,100 --> 00:06:07,630
years old and in general ten fifteen

00:06:02,120 --> 00:06:07,630
twenty okay this will be interesting

00:06:07,810 --> 00:06:13,160
raise your hand if you can easily use

00:06:10,640 --> 00:06:16,100
Sipan modules at work and now raise your

00:06:13,160 --> 00:06:17,330
hand if you can't that's good so there's

00:06:16,100 --> 00:06:19,070
only a few people that can't that

00:06:17,330 --> 00:06:23,000
probably work in like strict banks or

00:06:19,070 --> 00:06:25,310
government jobs or something crazy hey

00:06:23,000 --> 00:06:28,610
we're on CentOS 7 we're okay or is it

00:06:25,310 --> 00:06:31,880
six I think we're on six anyway that was

00:06:28,610 --> 00:06:35,030
a story from earlier today so how many

00:06:31,880 --> 00:06:38,360
of you are how many of you are using

00:06:35,030 --> 00:06:39,800
Perl but you're also programming other

00:06:38,360 --> 00:06:41,029
languages at the same time so you're

00:06:39,800 --> 00:06:42,860
sort of polyglot

00:06:41,029 --> 00:06:45,889
and how many of you're pretty much pearl

00:06:42,860 --> 00:06:48,549
most of the time okay that's that's

00:06:45,889 --> 00:06:51,049
actually not too surprising either and

00:06:48,549 --> 00:06:54,589
are you primarily working on what I'd

00:06:51,049 --> 00:06:55,789
call user facing stuff hands up and how

00:06:54,589 --> 00:06:56,899
many of you are doing more back-end

00:06:55,789 --> 00:07:00,619
stuff that people don't directly

00:06:56,899 --> 00:07:01,969
interact with okay wow that's I guess I

00:07:00,619 --> 00:07:04,639
shouldn't be surprised at that if you've

00:07:01,969 --> 00:07:06,499
been doing it that long because in my

00:07:04,639 --> 00:07:09,129
experience pearl started in the backend

00:07:06,499 --> 00:07:11,839
and kind of worked its way forward and

00:07:09,129 --> 00:07:14,239
how many of you are working on things

00:07:11,839 --> 00:07:15,499
that are sort of live systems that

00:07:14,239 --> 00:07:17,329
something else is interacting with

00:07:15,499 --> 00:07:19,399
they're depending on and doesn't run

00:07:17,329 --> 00:07:25,549
just in the middle the night okay good

00:07:19,399 --> 00:07:27,229
great this is almost redundant than to

00:07:25,549 --> 00:07:28,999
ask but how many of you are involved in

00:07:27,229 --> 00:07:30,889
the task of maintaining and/or updating

00:07:28,999 --> 00:07:34,669
old Perl code as you think of it okay

00:07:30,889 --> 00:07:39,589
all of us are doing that all right good

00:07:34,669 --> 00:07:42,199
to know so this is one last thing just

00:07:39,589 --> 00:07:44,269
like my little history so I'm sure

00:07:42,199 --> 00:07:46,339
several of you many of you had similar

00:07:44,269 --> 00:07:48,050
experiences I grew up on computers like

00:07:46,339 --> 00:07:50,329
I had the converse 64 I played with

00:07:48,050 --> 00:07:52,399
Ataris and amigas and all that stuff did

00:07:50,329 --> 00:07:54,219
the fidonet thing I kind of installed

00:07:52,399 --> 00:07:57,349
Linux from Slackware on floppy disks and

00:07:54,219 --> 00:08:00,139
my bedroom and all that and then got

00:07:57,349 --> 00:08:02,119
internet access in high school and you

00:08:00,139 --> 00:08:04,879
know it all went downhill from there I

00:08:02,119 --> 00:08:07,849
actually learned Perl for fun in college

00:08:04,879 --> 00:08:12,139
because assisted man I knew recommended

00:08:07,849 --> 00:08:14,779
it and then I got hired to do sysadmin

00:08:12,139 --> 00:08:17,119
and Perl stuff and I've been doing Perl

00:08:14,779 --> 00:08:18,499
stuff for Hire ever since then so it

00:08:17,119 --> 00:08:21,159
didn't didn't take long to get hooked on

00:08:18,499 --> 00:08:24,040
it and that's kind of where I've been

00:08:21,159 --> 00:08:27,920
how many remember mat script archive

00:08:24,040 --> 00:08:33,720
[Laughter]

00:08:27,920 --> 00:08:35,640
someone still uses okay that's like who

00:08:33,720 --> 00:08:37,440
walked out of the time capsule okay so

00:08:35,640 --> 00:08:39,419
for those of you that don't know there

00:08:37,440 --> 00:08:41,010
was this website way way back in the

00:08:39,419 --> 00:08:44,280
early days of the web called Matt script

00:08:41,010 --> 00:08:45,540
archive and it was a place it became

00:08:44,280 --> 00:08:47,850
like the place people went when they

00:08:45,540 --> 00:08:49,680
wanted to make a quote dynamic element

00:08:47,850 --> 00:08:51,300
on their website like a feedback form or

00:08:49,680 --> 00:08:54,120
something like that

00:08:51,300 --> 00:08:55,110
and I just thought I'd decided bring

00:08:54,120 --> 00:08:57,530
that up because I was trying to think

00:08:55,110 --> 00:08:59,820
through what the early time was was like

00:08:57,530 --> 00:09:03,210
there was a very popular script called

00:08:59,820 --> 00:09:05,760
form mail that was very very very

00:09:03,210 --> 00:09:08,760
popular and also widely ridiculed for

00:09:05,760 --> 00:09:10,200
being insecure because it was you could

00:09:08,760 --> 00:09:13,200
you could do all sorts of interesting

00:09:10,200 --> 00:09:17,070
things with it but I'll talk more about

00:09:13,200 --> 00:09:18,150
this in a little while but I just I was

00:09:17,070 --> 00:09:19,530
looking it up I will you know I was on

00:09:18,150 --> 00:09:20,640
the wayback machine to find that I was

00:09:19,530 --> 00:09:23,400
like oh I wonder if for mail still

00:09:20,640 --> 00:09:26,010
around it is I was amazed there was a

00:09:23,400 --> 00:09:30,240
new release version 1.93 came out it was

00:09:26,010 --> 00:09:33,690
July of 2009 like okay that was eight

00:09:30,240 --> 00:09:36,060
years ago but this stuff just stuff

00:09:33,690 --> 00:09:37,950
still out there to some degree so anyway

00:09:36,060 --> 00:09:39,450
we've got this sort of evolution that

00:09:37,950 --> 00:09:41,190
happened I was thinking back from the

00:09:39,450 --> 00:09:43,260
beginning of this kind of where where

00:09:41,190 --> 00:09:45,030
were things that back in that timeframe

00:09:43,260 --> 00:09:47,400
and where was pearl in the picture well

00:09:45,030 --> 00:09:49,470
you know back in the late 90s early

00:09:47,400 --> 00:09:50,850
2000s or whatever however you want to

00:09:49,470 --> 00:09:53,130
kind of put that timeframe

00:09:50,850 --> 00:09:55,260
you know pearl was kind of a new kid on

00:09:53,130 --> 00:09:56,490
the block in terms of programming it

00:09:55,260 --> 00:09:58,080
wasn't something a lot of people knew

00:09:56,490 --> 00:10:01,320
but thanks to the web it became very

00:09:58,080 --> 00:10:02,880
popular because back then all the web

00:10:01,320 --> 00:10:05,190
stuff was basically a text processing

00:10:02,880 --> 00:10:08,220
job and Perl was really good at text

00:10:05,190 --> 00:10:10,830
processing it was it was better than the

00:10:08,220 --> 00:10:12,690
old Hawkins said command-line tools

00:10:10,830 --> 00:10:15,180
because it was kind of it was a language

00:10:12,690 --> 00:10:17,190
you could write real programs and with

00:10:15,180 --> 00:10:18,750
structure and libraries and interesting

00:10:17,190 --> 00:10:20,190
modules and eventually object-oriented

00:10:18,750 --> 00:10:23,340
programming and it kind of continued to

00:10:20,190 --> 00:10:25,800
evolve you know it was a simple back

00:10:23,340 --> 00:10:28,230
then is pulling in CGI Lib or the CGI

00:10:25,800 --> 00:10:30,270
module later on and and spitting out

00:10:28,230 --> 00:10:31,800
some HTML and there you know you had a

00:10:30,270 --> 00:10:33,180
you had something you could you could

00:10:31,800 --> 00:10:34,350
point a web server or you could you

00:10:33,180 --> 00:10:35,410
could have on a web server point a

00:10:34,350 --> 00:10:37,329
browser at it

00:10:35,410 --> 00:10:39,009
and you were doing web programming it

00:10:37,329 --> 00:10:41,889
wasn't wasn't that hard / later really

00:10:39,009 --> 00:10:43,149
easy in fact for a long time they sort

00:10:41,889 --> 00:10:45,519
of called the duct tape of the Internet

00:10:43,149 --> 00:10:47,440
back when you know HTML was the bulk of

00:10:45,519 --> 00:10:50,350
what people were doing converting from

00:10:47,440 --> 00:10:52,990
some format whether it was a database or

00:10:50,350 --> 00:10:55,060
a CSV file or some weird proprietary

00:10:52,990 --> 00:10:56,620
corporate thing because people wanted to

00:10:55,060 --> 00:10:58,420
see it in web browser now you know the

00:10:56,620 --> 00:11:00,100
boss came along and said take that old

00:10:58,420 --> 00:11:01,720
thing and make a web interface for it

00:11:00,100 --> 00:11:04,000
and that's a lot of what Perl was used

00:11:01,720 --> 00:11:06,879
for and I did a fair share that myself

00:11:04,000 --> 00:11:10,750
you know back then we made fun of PHP

00:11:06,879 --> 00:11:12,459
because PHP wasn't a real language funny

00:11:10,750 --> 00:11:14,230
thing is nowadays there's a lot of PHP

00:11:12,459 --> 00:11:16,959
out there too and it's it's evolved

00:11:14,230 --> 00:11:20,040
quite a bit in the last 20 years - its

00:11:16,959 --> 00:11:22,540
kind of interesting to look at the - I

00:11:20,040 --> 00:11:24,459
you know back in this is a screenshot

00:11:22,540 --> 00:11:27,250
from from Amazon I actually bought this

00:11:24,459 --> 00:11:29,740
book back in apparently November of 1997

00:11:27,250 --> 00:11:31,779
I was called database backed websites by

00:11:29,740 --> 00:11:32,889
a guy named Phil Greenspun how many of

00:11:31,779 --> 00:11:33,810
you either read this or at least know

00:11:32,889 --> 00:11:36,550
who he is

00:11:33,810 --> 00:11:38,500
okay so a few of you did this was a book

00:11:36,550 --> 00:11:40,509
that back then for me at the point I was

00:11:38,500 --> 00:11:43,290
that it kind just kind of blew my mind

00:11:40,509 --> 00:11:45,339
open it was the idea of taking

00:11:43,290 --> 00:11:46,930
relational databases which I didn't know

00:11:45,339 --> 00:11:47,980
anything about at the time so it was

00:11:46,930 --> 00:11:50,230
kind of funny that I end up writing a

00:11:47,980 --> 00:11:51,430
book about one later on but I really

00:11:50,230 --> 00:11:52,720
understand them I didn't know anything I

00:11:51,430 --> 00:11:54,730
didn't take any classes about him in

00:11:52,720 --> 00:11:56,410
school they were optional and it

00:11:54,730 --> 00:11:57,910
honestly when you're in college and they

00:11:56,410 --> 00:12:00,069
say there's a class in databases it's an

00:11:57,910 --> 00:12:01,810
elective I've sounded boring so I didn't

00:12:00,069 --> 00:12:04,509
didn't take that what was I gonna do

00:12:01,810 --> 00:12:07,209
with the database so I sort of taught

00:12:04,509 --> 00:12:09,100
myself after reading this book and the

00:12:07,209 --> 00:12:11,649
whole idea of building websites that

00:12:09,100 --> 00:12:14,110
were exposing structured data letting

00:12:11,649 --> 00:12:15,970
users search that data edit they data

00:12:14,110 --> 00:12:17,800
update that data filter through it and

00:12:15,970 --> 00:12:19,240
all that kind of stuff to me seemed like

00:12:17,800 --> 00:12:21,459
that was amazing that was the kind of

00:12:19,240 --> 00:12:22,720
thing I wanted to work on and this book

00:12:21,459 --> 00:12:27,880
even though I had nothing to do with

00:12:22,720 --> 00:12:29,620
Perl it kind of set in my mind it showed

00:12:27,880 --> 00:12:30,579
me how this could be done with a program

00:12:29,620 --> 00:12:34,149
with a programming language or a

00:12:30,579 --> 00:12:35,949
scripting language and and so that

00:12:34,149 --> 00:12:36,970
really it was interesting to go back and

00:12:35,949 --> 00:12:37,899
look and figure out when I got this

00:12:36,970 --> 00:12:40,509
because I was trying to piece together

00:12:37,899 --> 00:12:43,990
his tree in my mind I was like I was 97

00:12:40,509 --> 00:12:46,240
that makes sense and it was one of those

00:12:43,990 --> 00:12:47,829
you know back in the early days of the

00:12:46,240 --> 00:12:48,910
web it was a lot of people had these

00:12:47,829 --> 00:12:50,380
stories of Oh

00:12:48,910 --> 00:12:52,120
the day I saw this one thing I just

00:12:50,380 --> 00:12:53,590
suddenly realized oh this is gonna be a

00:12:52,120 --> 00:12:55,420
big thing that's gonna be a big thing

00:12:53,590 --> 00:12:56,590
you know the first time I ever bought

00:12:55,420 --> 00:12:57,940
something in line with the credit card

00:12:56,590 --> 00:13:00,040
has like wow this e-commerce thing could

00:12:57,940 --> 00:13:03,400
really happen you know all these kinds

00:13:00,040 --> 00:13:04,750
of things that we went through so things

00:13:03,400 --> 00:13:07,900
went on for a while and we kind of ended

00:13:04,750 --> 00:13:09,460
up in this sort of middle time which I

00:13:07,900 --> 00:13:12,130
kind of think of as the sort of the

00:13:09,460 --> 00:13:14,550
heyday of Perl on the web or maybe the

00:13:12,130 --> 00:13:17,710
peak of it depending who you talk to and

00:13:14,550 --> 00:13:19,990
it was a time when you know in the sort

00:13:17,710 --> 00:13:21,190
of middle 2000s we were at a point where

00:13:19,990 --> 00:13:24,160
Perl was being used pretty much

00:13:21,190 --> 00:13:25,570
everywhere for web stuff there were jobs

00:13:24,160 --> 00:13:29,200
posted all the time looking for Perl

00:13:25,570 --> 00:13:31,630
people Sipan really took off as a result

00:13:29,200 --> 00:13:33,490
of this because not only did we have a

00:13:31,630 --> 00:13:35,710
lot more people doing Perl the web

00:13:33,490 --> 00:13:37,180
itself made Sipan an accessible thing

00:13:35,710 --> 00:13:38,500
you could go to Sipan you could browse

00:13:37,180 --> 00:13:39,940
you could search you get download you

00:13:38,500 --> 00:13:41,800
could look at module source code all

00:13:39,940 --> 00:13:43,390
that kind of stuff so it was kind of

00:13:41,800 --> 00:13:47,320
this nice positive feedback loop where

00:13:43,390 --> 00:13:49,150
the web made it easier for getting Perl

00:13:47,320 --> 00:13:51,340
code perl modules and collaborating on

00:13:49,150 --> 00:13:53,260
Perl and Perl itself was powering all

00:13:51,340 --> 00:13:55,000
the stuff that made it possible to build

00:13:53,260 --> 00:13:57,400
the web so it was it was really nice

00:13:55,000 --> 00:13:59,080
feedback loop that got going and other

00:13:57,400 --> 00:14:01,870
languages at first were coming along at

00:13:59,080 --> 00:14:03,460
this time saucy pan and and copied it or

00:14:01,870 --> 00:14:05,170
took the same idea and used it to

00:14:03,460 --> 00:14:07,620
inspire something else which is great

00:14:05,170 --> 00:14:10,720
because that meant it became kind of a

00:14:07,620 --> 00:14:12,610
standard feature for for languages that

00:14:10,720 --> 00:14:14,620
folks wanted to do web development and

00:14:12,610 --> 00:14:16,300
was it's not just a language it's not

00:14:14,620 --> 00:14:18,130
just a language and a bunch of libraries

00:14:16,300 --> 00:14:20,980
that that that have all this stuff that

00:14:18,130 --> 00:14:22,990
we need it's a language a bunch of

00:14:20,980 --> 00:14:25,840
built-in libraries and then a way for

00:14:22,990 --> 00:14:28,090
the community to sort of gather all this

00:14:25,840 --> 00:14:29,410
other third-party modules that people

00:14:28,090 --> 00:14:31,420
are creating and distribute them as well

00:14:29,410 --> 00:14:32,980
so it was a level up from from where

00:14:31,420 --> 00:14:35,650
we'd ever been before you know before

00:14:32,980 --> 00:14:37,720
Sipan really the only way you got code

00:14:35,650 --> 00:14:39,220
online was to go to some ftp site and

00:14:37,720 --> 00:14:42,730
that you heard about from someone else

00:14:39,220 --> 00:14:45,040
or found in in an email list or

00:14:42,730 --> 00:14:46,660
something like that and it was it was a

00:14:45,040 --> 00:14:48,370
completely different it was a completely

00:14:46,660 --> 00:14:50,920
different time and a completely

00:14:48,370 --> 00:14:52,390
different way of sharing software so I

00:14:50,920 --> 00:14:54,040
have to give pro a lot of credit for

00:14:52,390 --> 00:14:55,390
that the pro community because because

00:14:54,040 --> 00:14:58,000
Sipan was kind of revolutionary at the

00:14:55,390 --> 00:15:00,190
time and then of course we had the lamp

00:14:58,000 --> 00:15:01,400
stack and and the PIA and the lamp stack

00:15:00,190 --> 00:15:03,650
changed depending on

00:15:01,400 --> 00:15:05,060
and who the programmer was sometimes it

00:15:03,650 --> 00:15:07,160
was pearl sometimes it was pythons and

00:15:05,060 --> 00:15:09,110
as it was PHP but the sort of basic

00:15:07,160 --> 00:15:12,470
architecture of how web applications

00:15:09,110 --> 00:15:14,360
were built back then kind of took on a

00:15:12,470 --> 00:15:16,250
very familiar shape in fact sometimes

00:15:14,360 --> 00:15:17,630
the EM wasn't even MySQL sometimes it

00:15:16,250 --> 00:15:20,960
was post grassed again it depended who

00:15:17,630 --> 00:15:23,150
it was but this sort of a sort of

00:15:20,960 --> 00:15:25,360
framework was was set up and and widely

00:15:23,150 --> 00:15:28,370
copied and used all over the place and

00:15:25,360 --> 00:15:30,770
and Pro continued to evolve - we got we

00:15:28,370 --> 00:15:32,570
got we got things like fast CGI and mod

00:15:30,770 --> 00:15:34,070
Perl and you know mod Perl was amazing

00:15:32,570 --> 00:15:36,529
when that came out it was just like wow

00:15:34,070 --> 00:15:38,480
I can make I can have Perl as almost the

00:15:36,529 --> 00:15:40,550
web server itself and suddenly you could

00:15:38,480 --> 00:15:42,440
build applications that we never even

00:15:40,550 --> 00:15:44,660
thought of before because everything was

00:15:42,440 --> 00:15:45,920
just CGI before that which was was slow

00:15:44,660 --> 00:15:49,940
and you could only do so much on a

00:15:45,920 --> 00:15:52,310
single host so and in where we are now

00:15:49,940 --> 00:15:55,820
well now we're in a completely different

00:15:52,310 --> 00:15:57,800
time again you know most people out in

00:15:55,820 --> 00:15:59,480
the general world of programming and

00:15:57,800 --> 00:16:02,300
building stuff on the web think pearls a

00:15:59,480 --> 00:16:04,339
legacy language there's a lot of you

00:16:02,300 --> 00:16:05,750
know old Perl code around and I confirm

00:16:04,339 --> 00:16:07,490
that right we all put our hands up one

00:16:05,750 --> 00:16:10,820
talked about 10 year old and 15 year in

00:16:07,490 --> 00:16:12,380
code bases and the thing about it is

00:16:10,820 --> 00:16:16,390
though that code is actually really

00:16:12,380 --> 00:16:19,160
important and in most cases works and

00:16:16,390 --> 00:16:21,170
you know we've got all this this change

00:16:19,160 --> 00:16:23,900
going on in the world of technology and

00:16:21,170 --> 00:16:26,330
in the business world and have to adapt

00:16:23,900 --> 00:16:27,680
and and I you know the example that came

00:16:26,330 --> 00:16:29,750
to mind when I was thinking about this

00:16:27,680 --> 00:16:31,190
was the mojolicious framework for

00:16:29,750 --> 00:16:37,720
building web apps how many of you have

00:16:31,190 --> 00:16:39,770
used or tried it for anything yeah it's

00:16:37,720 --> 00:16:41,060
it was interesting because this is one

00:16:39,770 --> 00:16:43,730
of those ones when I when I first tried

00:16:41,060 --> 00:16:46,520
it I was like huh this is like just it

00:16:43,730 --> 00:16:48,260
felt like it felt like something it

00:16:46,520 --> 00:16:49,370
wasn't completely new but it felt like

00:16:48,260 --> 00:16:51,560
something completely new had come to

00:16:49,370 --> 00:16:52,820
Perl for me and I was like wow this is

00:16:51,560 --> 00:16:56,060
kind of nice it felt like a little bit

00:16:52,820 --> 00:16:57,650
of rejuvenation so what are some of the

00:16:56,060 --> 00:16:59,209
things that are they're changing what

00:16:57,650 --> 00:17:01,880
has changed in the last 5 or 10 years

00:16:59,209 --> 00:17:04,010
that we we as people who have to

00:17:01,880 --> 00:17:07,490
maintain large code bases of Perl have

00:17:04,010 --> 00:17:09,650
to adapt to there's a whole bunch of

00:17:07,490 --> 00:17:12,380
stuff honestly it's the fact that that

00:17:09,650 --> 00:17:14,060
you know everyone wants a web api well

00:17:12,380 --> 00:17:15,270
they've wanted web api's for years but

00:17:14,060 --> 00:17:17,700
now there's even better reefs

00:17:15,270 --> 00:17:19,589
for wanting these api's well we want to

00:17:17,700 --> 00:17:21,540
build mobile apps to run on phones that

00:17:19,589 --> 00:17:23,580
hit these api's and access the same data

00:17:21,540 --> 00:17:27,270
that we were building HTML forms for 10

00:17:23,580 --> 00:17:29,040
and 15 years ago more and more now I'm

00:17:27,270 --> 00:17:31,980
hearing that lots and lots of shops are

00:17:29,040 --> 00:17:33,930
just multi-language it's very it seems

00:17:31,980 --> 00:17:35,970
to me my experience it's been a lot less

00:17:33,930 --> 00:17:38,460
common to find companies now that are

00:17:35,970 --> 00:17:40,500
like we're gonna hire you we do pearl

00:17:38,460 --> 00:17:42,600
that's it no it's like well we do some

00:17:40,500 --> 00:17:44,850
pearl we do some go we do some Python we

00:17:42,600 --> 00:17:46,860
do some JavaScript or we do some

00:17:44,850 --> 00:17:48,990
objective-c you for this we do some

00:17:46,860 --> 00:17:50,700
Python for that we do some pearl for

00:17:48,990 --> 00:17:52,770
this so there's a lot more mixing of

00:17:50,700 --> 00:17:54,390
languages going on because either

00:17:52,770 --> 00:17:56,370
different languages have their different

00:17:54,390 --> 00:17:57,660
strengths or different teams prefer

00:17:56,370 --> 00:18:00,000
different languages for the things

00:17:57,660 --> 00:18:01,050
they're working on so we're in an

00:18:00,000 --> 00:18:03,510
environment now where you have to play

00:18:01,050 --> 00:18:05,070
well with others which which is great I

00:18:03,510 --> 00:18:07,850
mean pearls actually really good at that

00:18:05,070 --> 00:18:10,620
as long as the people are good at that

00:18:07,850 --> 00:18:14,160
we've got a lot more frameworks nowadays

00:18:10,620 --> 00:18:16,230
for building web systems many of these

00:18:14,160 --> 00:18:18,060
you could pick any language on this list

00:18:16,230 --> 00:18:20,100
go online and probably find five or ten

00:18:18,060 --> 00:18:21,960
frameworks and I'm talking popular ones

00:18:20,100 --> 00:18:24,390
not obscure little frameworks the only

00:18:21,960 --> 00:18:27,840
five people use for building

00:18:24,390 --> 00:18:29,970
applications the way software is being

00:18:27,840 --> 00:18:32,790
is being deployed has been changing too

00:18:29,970 --> 00:18:35,970
it's no longer the case that this

00:18:32,790 --> 00:18:40,110
thing's been sawing very slowly it's

00:18:35,970 --> 00:18:43,830
going down maybe it went hits the floor

00:18:40,110 --> 00:18:46,710
I'm done I don't know this is the way

00:18:43,830 --> 00:18:50,490
the way puffers being packaged

00:18:46,710 --> 00:18:52,110
distributed managed monitored run all

00:18:50,490 --> 00:18:54,150
that stuff is changing now I mean when

00:18:52,110 --> 00:18:54,750
you know the big thing that happened

00:18:54,150 --> 00:18:56,850
years ago

00:18:54,750 --> 00:18:58,380
I think the watershed moment for a lot

00:18:56,850 --> 00:19:00,420
of people was was when Amazon Web

00:18:58,380 --> 00:19:02,040
Services first came out honey how many

00:19:00,420 --> 00:19:04,470
of you're building stuff on Amazon Web

00:19:02,040 --> 00:19:05,430
Services these days and how many of you

00:19:04,470 --> 00:19:07,590
would have thought that when it first

00:19:05,430 --> 00:19:08,460
came out I know a lot of people looked

00:19:07,590 --> 00:19:11,610
at it and they're like oh it's

00:19:08,460 --> 00:19:13,170
interesting and a lot fewer people were

00:19:11,610 --> 00:19:14,550
like oh that's what I need I want to

00:19:13,170 --> 00:19:16,110
stop dealing with all these servers and

00:19:14,550 --> 00:19:17,430
crap and whatever nowadays seems like a

00:19:16,110 --> 00:19:20,460
lot more stuff is being built their

00:19:17,430 --> 00:19:21,630
first on or other cloud services now

00:19:20,460 --> 00:19:24,720
that we've got so many others that have

00:19:21,630 --> 00:19:25,980
come along but that that you know that

00:19:24,720 --> 00:19:27,990
has ripple effects into all sorts of

00:19:25,980 --> 00:19:28,290
things especially for languages where

00:19:27,990 --> 00:19:29,910
there

00:19:28,290 --> 00:19:33,990
of older code a lot of older assumptions

00:19:29,910 --> 00:19:36,300
have to change too so I meant to talked

00:19:33,990 --> 00:19:39,450
about interoperability concurrency has

00:19:36,300 --> 00:19:41,820
become a much bigger deal for for

00:19:39,450 --> 00:19:43,260
building things nowadays that talk on

00:19:41,820 --> 00:19:45,800
the internet or talk on the web because

00:19:43,260 --> 00:19:48,270
we've got we've got this notion of

00:19:45,800 --> 00:19:50,490
hundreds thousands tens of thousands of

00:19:48,270 --> 00:19:51,990
sometimes persistent network connections

00:19:50,490 --> 00:19:54,690
they're persistent but mostly idle

00:19:51,990 --> 00:19:56,910
sometimes because of things like mobile

00:19:54,690 --> 00:19:58,830
apps and api's or lots of other things

00:19:56,910 --> 00:19:59,970
that you're talking to it's very common

00:19:58,830 --> 00:20:01,440
now to be talking to lots of other

00:19:59,970 --> 00:20:03,750
services and lots of other machines that

00:20:01,440 --> 00:20:04,950
kind of changes the way you program the

00:20:03,750 --> 00:20:06,570
talk I just came out of is about

00:20:04,950 --> 00:20:08,040
event-driven programming and that's a

00:20:06,570 --> 00:20:10,590
world a lot of people have kind of had

00:20:08,040 --> 00:20:14,160
to move into in Perl and another

00:20:10,590 --> 00:20:15,900
language just just to build things you

00:20:14,160 --> 00:20:17,400
know we when we've got CDNs for example

00:20:15,900 --> 00:20:19,380
CD ends weren't really a thing for a

00:20:17,400 --> 00:20:21,060
long time except for you know maybe

00:20:19,380 --> 00:20:22,380
Akamai was the only one people had heard

00:20:21,060 --> 00:20:25,680
of a long time ago and now we've got

00:20:22,380 --> 00:20:27,000
lots of CD ends and you know they've as

00:20:25,680 --> 00:20:28,830
they alone have gotten a lot more

00:20:27,000 --> 00:20:32,310
complicated and they have api's that you

00:20:28,830 --> 00:20:33,390
need to be able to talk to you know the

00:20:32,310 --> 00:20:36,510
last thing is sort of the business

00:20:33,390 --> 00:20:40,410
interest in the business interest in

00:20:36,510 --> 00:20:43,160
having having web applications that

00:20:40,410 --> 00:20:46,200
perform a certain way that can be

00:20:43,160 --> 00:20:48,630
maintained to a certain degree of

00:20:46,200 --> 00:20:49,800
security and responsiveness and uptime

00:20:48,630 --> 00:20:51,090
and all those things that people care

00:20:49,800 --> 00:20:52,620
about especially when your business

00:20:51,090 --> 00:20:56,790
depends on these things from making

00:20:52,620 --> 00:20:58,980
money so all the stuff is different so

00:20:56,790 --> 00:21:01,980
what a lot of us in the room are

00:20:58,980 --> 00:21:03,630
probably doing is and I put up some of

00:21:01,980 --> 00:21:05,250
the analogies that people often use you

00:21:03,630 --> 00:21:06,720
know there's it's like you're changing

00:21:05,250 --> 00:21:08,820
tires on the racecar while it's still

00:21:06,720 --> 00:21:10,470
moving or updating the airplane engines

00:21:08,820 --> 00:21:13,320
in flight or you know whatever we're

00:21:10,470 --> 00:21:14,730
working with working things things that

00:21:13,320 --> 00:21:16,380
are being used on a daily basis things

00:21:14,730 --> 00:21:18,990
that have been alive for a long time and

00:21:16,380 --> 00:21:21,360
grown organically and trying not to

00:21:18,990 --> 00:21:23,160
break them and at the same time we're

00:21:21,360 --> 00:21:24,930
trying to sort of modernize stuff we're

00:21:23,160 --> 00:21:26,340
trying to put bits of the future in

00:21:24,930 --> 00:21:27,630
there with that with without breaking

00:21:26,340 --> 00:21:29,850
the past and keeping the past stuff

00:21:27,630 --> 00:21:33,990
working and improving things along the

00:21:29,850 --> 00:21:36,090
way it's a very it's a very it's a very

00:21:33,990 --> 00:21:38,370
delicate task in some cases and there's

00:21:36,090 --> 00:21:39,900
a lot of guesswork involved and a lot of

00:21:38,370 --> 00:21:41,510
this hasn't even perl specific it's just

00:21:39,900 --> 00:21:43,130
that we're at a pro conference

00:21:41,510 --> 00:21:47,090
of us in the room are dealing with the

00:21:43,130 --> 00:21:48,560
same thing I think so why this matters

00:21:47,090 --> 00:21:51,140
we talked about some of this I mean

00:21:48,560 --> 00:21:54,230
there's a lot of well-aged Pro code out

00:21:51,140 --> 00:21:55,880
there you know I my guess is that most

00:21:54,230 --> 00:21:57,950
of the Pro code that will ever be

00:21:55,880 --> 00:21:59,510
written has already been written just

00:21:57,950 --> 00:22:02,060
because so much was written in the last

00:21:59,510 --> 00:22:04,070
15 years I'd be happy to be wrong about

00:22:02,060 --> 00:22:05,600
that but just the way things have been

00:22:04,070 --> 00:22:09,980
trending in the proliferation of other

00:22:05,600 --> 00:22:11,930
languages I don't know a lot of newer

00:22:09,980 --> 00:22:15,350
companies aren't choosing Perl that's

00:22:11,930 --> 00:22:17,870
just a simple fact they they may choose

00:22:15,350 --> 00:22:19,760
other languages they may have there

00:22:17,870 --> 00:22:21,050
there may be Perl systems they choose

00:22:19,760 --> 00:22:23,210
and need to work with and need to

00:22:21,050 --> 00:22:26,180
integrate but that may not be what

00:22:23,210 --> 00:22:27,650
they're choosing for new development the

00:22:26,180 --> 00:22:30,320
good news is I think Perl can play very

00:22:27,650 --> 00:22:32,830
well with others but I think we all know

00:22:30,320 --> 00:22:36,740
it's an incredibly flexible language

00:22:32,830 --> 00:22:38,900
that's good and bad I think that we all

00:22:36,740 --> 00:22:41,000
know that flexibility can be used and

00:22:38,900 --> 00:22:45,520
abused and overused in some cases and

00:22:41,000 --> 00:22:47,780
that's something to think about I think

00:22:45,520 --> 00:22:49,640
well I'll talk more about that so you

00:22:47,780 --> 00:22:51,440
know a lot of this old pro code is is

00:22:49,640 --> 00:22:55,150
mission-critical stuff it is stuff that

00:22:51,440 --> 00:22:57,980
that so many other things depend on and

00:22:55,150 --> 00:23:00,890
in some cases is grown in this weird

00:22:57,980 --> 00:23:03,680
organic way such that what you find is

00:23:00,890 --> 00:23:06,080
is you've got lots of things in an

00:23:03,680 --> 00:23:07,460
organization that are several steps

00:23:06,080 --> 00:23:08,900
removed from the actual code you're

00:23:07,460 --> 00:23:11,270
working then all that all depend on

00:23:08,900 --> 00:23:15,110
things behaving a certain way and and

00:23:11,270 --> 00:23:16,430
that becomes challenging so you know one

00:23:15,110 --> 00:23:18,710
of the things to think about in this

00:23:16,430 --> 00:23:20,840
work in this in this process of

00:23:18,710 --> 00:23:24,770
maintaining old Perl code updating and

00:23:20,840 --> 00:23:27,520
restructuring it is is how work how we

00:23:24,770 --> 00:23:29,210
keep Perl relevant how we keep Perl

00:23:27,520 --> 00:23:32,570
relevant and actually keep it

00:23:29,210 --> 00:23:33,890
approachable and maintainable and you

00:23:32,570 --> 00:23:37,130
know one of the ways to think about this

00:23:33,890 --> 00:23:38,660
I think is when when you've got a good

00:23:37,130 --> 00:23:40,010
manager a decision maker at a companies

00:23:38,660 --> 00:23:41,900
trying to just looking at something it's

00:23:40,010 --> 00:23:43,790
just having to decide you know are we

00:23:41,900 --> 00:23:45,560
gonna scrap that thing and rewrite it in

00:23:43,790 --> 00:23:48,020
something else or we're getting to

00:23:45,560 --> 00:23:49,220
continue to invest and update it they

00:23:48,020 --> 00:23:51,020
have to they have to think about that

00:23:49,220 --> 00:23:54,080
and I'm actually gonna ask this question

00:23:51,020 --> 00:23:55,400
for folks in the room now what sorts of

00:23:54,080 --> 00:23:56,390
things you think run through their mom

00:23:55,400 --> 00:24:11,930
when they're when they're trying to

00:23:56,390 --> 00:24:17,000
decide that kind of thing yeah right

00:24:11,930 --> 00:24:18,320
right so you write the scarcity of

00:24:17,000 --> 00:24:19,850
programmers immense you drive the price

00:24:18,320 --> 00:24:24,110
up so high that you can't deal with it

00:24:19,850 --> 00:24:25,670
anymore sure so you you're saying cost

00:24:24,110 --> 00:24:40,400
in the long run is a factor right

00:24:25,670 --> 00:24:41,540
long-term cost okay yes okay right you

00:24:40,400 --> 00:24:43,880
have to be able to get people which

00:24:41,540 --> 00:24:45,290
means it's it's that's the shortage just

00:24:43,880 --> 00:24:47,330
being able to hire people that either

00:24:45,290 --> 00:24:50,920
know Perl or are willing to learn Perl

00:24:47,330 --> 00:24:50,920
right yes

00:25:17,419 --> 00:25:22,350
right yeah so that that's a good point

00:25:20,100 --> 00:25:23,370
too is is once you go from being a

00:25:22,350 --> 00:25:24,690
single language shop to being

00:25:23,370 --> 00:25:27,390
multi-language you have to start making

00:25:24,690 --> 00:25:28,860
tough choices about how many languages

00:25:27,390 --> 00:25:30,240
and then how you choose which language

00:25:28,860 --> 00:25:58,140
makes the most sense for a given project

00:25:30,240 --> 00:25:59,910
yes so yeah so that's a good point when

00:25:58,140 --> 00:26:01,470
you're looking if if part of what you do

00:25:59,910 --> 00:26:02,400
is that is you look at if you have to

00:26:01,470 --> 00:26:05,309
integrate with a lot of third-party

00:26:02,400 --> 00:26:08,040
api's whether it's some cloud service

00:26:05,309 --> 00:26:11,370
provider for you know messaging and

00:26:08,040 --> 00:26:12,929
telephony or email delivery or hosting

00:26:11,370 --> 00:26:15,210
your application or whatever it is yeah

00:26:12,929 --> 00:26:16,980
do do they do they support is there

00:26:15,210 --> 00:26:20,990
first-class support for the language you

00:26:16,980 --> 00:26:20,990
want Perl in this case good point yes

00:26:35,610 --> 00:26:39,850
that's another good point yeah support

00:26:37,900 --> 00:26:41,380
support for things that are either very

00:26:39,850 --> 00:26:44,170
very useful in your organization or in

00:26:41,380 --> 00:26:46,740
some pieces required by contracts or

00:26:44,170 --> 00:26:49,740
agreements you have okay anything else

00:26:46,740 --> 00:26:49,740
yes

00:26:59,229 --> 00:27:02,229
right

00:27:04,930 --> 00:27:09,850
so the issue of library and module

00:27:07,600 --> 00:27:11,680
support in I'd argue that some that that

00:27:09,850 --> 00:27:13,360
actually applies to both internal

00:27:11,680 --> 00:27:15,610
modules and libraries as well as things

00:27:13,360 --> 00:27:17,260
on Sipan it's not uncommon for things to

00:27:15,610 --> 00:27:19,960
become orphaned or for a maintainer to

00:27:17,260 --> 00:27:21,340
go have other interests and kind of hope

00:27:19,960 --> 00:27:22,510
someone else takes it over at some point

00:27:21,340 --> 00:27:38,650
yeah okay

00:27:22,510 --> 00:27:40,330
yes Randall yeah refactoring per part of

00:27:38,650 --> 00:27:42,190
pearls flexibility means that

00:27:40,330 --> 00:27:47,200
refactoring pearl code can be very

00:27:42,190 --> 00:27:48,970
tricky good point okay so in the last

00:27:47,200 --> 00:27:52,270
point on here was think about why Matt's

00:27:48,970 --> 00:27:54,550
script archive and like form mill took

00:27:52,270 --> 00:27:57,010
off way back when they did and my

00:27:54,550 --> 00:27:59,560
argument is is this an argument favor of

00:27:57,010 --> 00:28:00,670
pearl is the one of the reasons I think

00:27:59,560 --> 00:28:02,080
a lot of us use it and one of the

00:28:00,670 --> 00:28:04,810
reasons that there's so much of it still

00:28:02,080 --> 00:28:06,340
around is it gets the job done it's a

00:28:04,810 --> 00:28:07,900
language you can sit down and you can be

00:28:06,340 --> 00:28:10,630
productive and you can get done and

00:28:07,900 --> 00:28:12,820
that's great and that's that's a really

00:28:10,630 --> 00:28:14,440
that's a huge endorsement for parole it

00:28:12,820 --> 00:28:15,610
was back then I think it still is today

00:28:14,440 --> 00:28:16,840
and that's one of the reasons I still

00:28:15,610 --> 00:28:19,570
use it it's the first thing I pull out

00:28:16,840 --> 00:28:20,740
one I need to build something but the

00:28:19,570 --> 00:28:23,010
other thing you need to think about is

00:28:20,740 --> 00:28:25,480
can you build something in the way that

00:28:23,010 --> 00:28:26,680
five years ten years down the road

00:28:25,480 --> 00:28:28,360
you're gonna be able to come back and

00:28:26,680 --> 00:28:29,800
still understand and that's a whole

00:28:28,360 --> 00:28:31,240
other question a whole other discipline

00:28:29,800 --> 00:28:32,290
I think there's a talk on that later

00:28:31,240 --> 00:28:34,270
today that I'm actually going to go to

00:28:32,290 --> 00:28:35,920
cuz I'm I'm kind of curious because I've

00:28:34,270 --> 00:28:37,030
written code myself that I've gone back

00:28:35,920 --> 00:28:40,090
to a few years later and looked at and

00:28:37,030 --> 00:28:42,540
been like how was I doing and just you

00:28:40,090 --> 00:28:44,980
know they're trying to figure it all out

00:28:42,540 --> 00:28:48,520
everyone does that but some people to

00:28:44,980 --> 00:28:53,410
different degrees know it's not just

00:28:48,520 --> 00:28:55,540
Perl it's not just Perl well I think you

00:28:53,410 --> 00:28:58,150
know in my opinion the issue with Perl

00:28:55,540 --> 00:29:01,120
and I'll bring this up again in a slide

00:28:58,150 --> 00:29:04,510
a few minutes is I there's the question

00:29:01,120 --> 00:29:05,830
about building code and structuring code

00:29:04,510 --> 00:29:07,480
and designing code in such a way that

00:29:05,830 --> 00:29:09,940
you can come back to it in five years or

00:29:07,480 --> 00:29:12,670
ten years and understand it and then

00:29:09,940 --> 00:29:14,910
taking that to the next level is can

00:29:12,670 --> 00:29:17,170
someone who's relatively new to Perl

00:29:14,910 --> 00:29:18,220
understand your code five years after

00:29:17,170 --> 00:29:21,520
you wrote it

00:29:18,220 --> 00:29:23,650
and that's when features of the language

00:29:21,520 --> 00:29:25,419
features of the culture and community

00:29:23,650 --> 00:29:27,840
and practices around pearl also come

00:29:25,419 --> 00:29:27,840
into play

00:29:28,140 --> 00:29:32,380
that's anyway I'll bring that up again

00:29:30,970 --> 00:29:34,150
in a few minutes - that that's a good

00:29:32,380 --> 00:29:38,380
point it's certainly not a purse Pacific

00:29:34,150 --> 00:29:39,730
problem so the other the other big trend

00:29:38,380 --> 00:29:40,990
that we've been seeing and this is kind

00:29:39,730 --> 00:29:42,280
of just another way of saying some of

00:29:40,990 --> 00:29:43,210
what we already talked about is it's

00:29:42,280 --> 00:29:45,940
been trend to go from sort of

00:29:43,210 --> 00:29:48,190
applications to services this idea that

00:29:45,940 --> 00:29:49,840
you may have written the CGI thing 15

00:29:48,190 --> 00:29:52,270
years ago then you migrated it to mod

00:29:49,840 --> 00:29:53,409
Perl 5 years later and nowadays it's

00:29:52,270 --> 00:29:55,720
something that doesn't have an actual

00:29:53,409 --> 00:29:57,549
visual interface that you see because

00:29:55,720 --> 00:29:59,620
it's just an API endpoint for a mobile

00:29:57,549 --> 00:30:01,350
device or it's an API endpoint for some

00:29:59,620 --> 00:30:04,570
other service that's talking to it and

00:30:01,350 --> 00:30:06,039
and that's had that's how - impacts -

00:30:04,570 --> 00:30:09,850
and kind of how we how we deal with code

00:30:06,039 --> 00:30:12,100
and the concerns that we have you know

00:30:09,850 --> 00:30:13,809
they're they've in some ways this made

00:30:12,100 --> 00:30:14,950
things you know easier to update easier

00:30:13,809 --> 00:30:16,809
to test because they've you don't have

00:30:14,950 --> 00:30:18,669
to deal with UI stuff well that's easier

00:30:16,809 --> 00:30:19,390
to test it's certainly easier to update

00:30:18,669 --> 00:30:20,679
because you don't have any users

00:30:19,390 --> 00:30:22,090
complaining to you about it it's like

00:30:20,679 --> 00:30:23,620
why'd you move that button I didn't the

00:30:22,090 --> 00:30:24,909
buttons gone I don't do deal with that

00:30:23,620 --> 00:30:26,590
anymore

00:30:24,909 --> 00:30:28,330
deployment tends to be different

00:30:26,590 --> 00:30:30,070
especially if you've moved to an

00:30:28,330 --> 00:30:31,330
environment where you're not owning the

00:30:30,070 --> 00:30:34,780
server is you're not on bare metal

00:30:31,330 --> 00:30:37,720
anymore they can be harder to monitor in

00:30:34,780 --> 00:30:39,490
some cases because when things start to

00:30:37,720 --> 00:30:41,140
act up you don't know if it's your code

00:30:39,490 --> 00:30:43,960
or something your codes interacting with

00:30:41,140 --> 00:30:46,360
when it's one piece of lots of services

00:30:43,960 --> 00:30:47,950
that all interact with each other and it

00:30:46,360 --> 00:30:49,840
makes for more interesting failure cases

00:30:47,950 --> 00:30:52,330
I'm not going to say that's better or

00:30:49,840 --> 00:30:54,220
worse it's just more interesting and

00:30:52,330 --> 00:30:55,330
then then the question of how you even

00:30:54,220 --> 00:30:57,159
draw boundaries about where

00:30:55,330 --> 00:30:58,659
responsibilities for things go and that

00:30:57,159 --> 00:31:00,640
tends to be more of an organizational

00:30:58,659 --> 00:31:05,559
problem I think in a lot of places or a

00:31:00,640 --> 00:31:08,350
cultural issue so the sorts of growing

00:31:05,559 --> 00:31:12,400
pains or aging pains that we've we've

00:31:08,350 --> 00:31:15,309
probably seen in in older and larger

00:31:12,400 --> 00:31:17,020
code bases of pro code and and I think

00:31:15,309 --> 00:31:19,890
this becomes more apparent when new

00:31:17,020 --> 00:31:21,880
people join a project or move into it

00:31:19,890 --> 00:31:23,740
often is you know the lack of

00:31:21,880 --> 00:31:25,900
documentation yeah that is not perl

00:31:23,740 --> 00:31:28,899
specific either of course right just

00:31:25,900 --> 00:31:30,730
read the code well yeah sure as long as

00:31:28,899 --> 00:31:31,230
the code makes sense or was commented in

00:31:30,730 --> 00:31:32,820
a way the

00:31:31,230 --> 00:31:33,929
that explained not just what you're

00:31:32,820 --> 00:31:37,590
doing but why you're doing it that way

00:31:33,929 --> 00:31:39,299
that information is often lost but and

00:31:37,590 --> 00:31:45,360
you know pearls known for readability so

00:31:39,299 --> 00:31:48,120
that that's a bonus the the there's

00:31:45,360 --> 00:31:49,770
there's often a lack of tests so a lot

00:31:48,120 --> 00:31:51,809
of the code that I dealt with years ago

00:31:49,770 --> 00:31:53,340
and I'm not gonna say which companies

00:31:51,809 --> 00:31:55,290
this doesn't matter that's been the case

00:31:53,340 --> 00:31:57,540
everywhere I've worked there were no

00:31:55,290 --> 00:32:00,030
tests you know is the kind of thing

00:31:57,540 --> 00:32:02,880
where the only time I saw tests in Pro

00:32:00,030 --> 00:32:04,559
code was in Sipan modules and you know

00:32:02,880 --> 00:32:06,720
even then the early days of the the

00:32:04,559 --> 00:32:08,910
Sipan stuff it was it was very very very

00:32:06,720 --> 00:32:10,380
basic stuff there wasn't a lot of there

00:32:08,910 --> 00:32:12,270
was it wasn't the kind of extensive

00:32:10,380 --> 00:32:15,150
testing we see nowadays so that you know

00:32:12,270 --> 00:32:17,520
that transition has been great but lack

00:32:15,150 --> 00:32:18,960
of tests on older code makes it

00:32:17,520 --> 00:32:20,520
challenging when you're gonna go to try

00:32:18,960 --> 00:32:23,880
to change that code or update it in some

00:32:20,520 --> 00:32:25,980
way there's often a lack of good sort of

00:32:23,880 --> 00:32:28,500
interface boundaries or API boundaries

00:32:25,980 --> 00:32:30,030
on things because things have evolved

00:32:28,500 --> 00:32:31,500
over time you know the requirements when

00:32:30,030 --> 00:32:32,580
this was built 10 or 15 years ago are a

00:32:31,500 --> 00:32:35,370
lot different than nowadays the

00:32:32,580 --> 00:32:37,950
expectations are different too and that

00:32:35,370 --> 00:32:41,790
means the way the code is structured is

00:32:37,950 --> 00:32:43,590
probably not optimal in the way that the

00:32:41,790 --> 00:32:46,950
way that reacts to unexpected things may

00:32:43,590 --> 00:32:49,410
not be optimal either then there's an

00:32:46,950 --> 00:32:52,230
entire ball of wax that I won't talk too

00:32:49,410 --> 00:32:53,669
much about but the whole idea of code

00:32:52,230 --> 00:32:55,200
that was designed assuming the world was

00:32:53,669 --> 00:32:57,000
ASCII when now we're in a Unicode world

00:32:55,200 --> 00:33:00,030
how many of you had to deal with that

00:32:57,000 --> 00:33:03,980
that nightmare yeah okay a few people

00:33:00,030 --> 00:33:03,980
you're worried isn't Randall

00:33:09,769 --> 00:33:16,769
yeah that's good point you're scaling as

00:33:14,100 --> 00:33:19,080
things get big and many times we've run

00:33:16,769 --> 00:33:20,340
into the problem where well this all

00:33:19,080 --> 00:33:22,259
made sense when the thing was designed

00:33:20,340 --> 00:33:24,269
and built 10 or 15 years ago we only

00:33:22,259 --> 00:33:26,399
ever had 10,000 entries there or we only

00:33:24,269 --> 00:33:28,470
ever had to deal with 15 servers and you

00:33:26,399 --> 00:33:31,289
know as we've built things to handle

00:33:28,470 --> 00:33:33,960
data from more people from more machines

00:33:31,289 --> 00:33:36,059
from more services those numbers all go

00:33:33,960 --> 00:33:37,950
up and in restructuring that code

00:33:36,059 --> 00:33:39,840
sometimes just to deal with that

00:33:37,950 --> 00:33:42,269
particular problem to deal with scaling

00:33:39,840 --> 00:33:44,970
needs that that's a discipline in itself

00:33:42,269 --> 00:33:46,350
and it's not as simple as just running

00:33:44,970 --> 00:33:47,940
it under profile seeing where it's slow

00:33:46,350 --> 00:33:49,379
because sometimes it's not the code

00:33:47,940 --> 00:33:50,669
that's the problem it's the structure of

00:33:49,379 --> 00:33:51,960
the code is the assumptions it makes

00:33:50,669 --> 00:33:56,159
it's how it stores and retrieves the

00:33:51,960 --> 00:33:58,759
data so on down the list and the last

00:33:56,159 --> 00:34:01,710
one I'll mention code as configuration

00:33:58,759 --> 00:34:04,080
how many of you how many of you where

00:34:01,710 --> 00:34:06,119
you work have what are effectively

00:34:04,080 --> 00:34:11,669
config files that are actually available

00:34:06,119 --> 00:34:14,240
Perl code yeah so I hear a free people

00:34:11,669 --> 00:34:14,240
say not anymore

00:34:14,990 --> 00:34:20,940
so that's a bad reason for a few thing

00:34:18,329 --> 00:34:23,339
further is a bad idea for a few reasons

00:34:20,940 --> 00:34:25,530
the you know aside from the obvious

00:34:23,339 --> 00:34:28,470
security issues around that kind of

00:34:25,530 --> 00:34:30,270
thing in predictability issues the one

00:34:28,470 --> 00:34:32,760
that's been coming up for for me in

00:34:30,270 --> 00:34:34,530
recent years has been the whole the

00:34:32,760 --> 00:34:36,270
whole notion of having to play well with

00:34:34,530 --> 00:34:39,179
others having to having to have systems

00:34:36,270 --> 00:34:41,790
built in Perl and Python or Perl and

00:34:39,179 --> 00:34:43,740
JavaScript or Perl and other languages

00:34:41,790 --> 00:34:45,960
and all share some information with each

00:34:43,740 --> 00:34:48,450
other when you're when your core

00:34:45,960 --> 00:34:50,429
configuration for something like how a

00:34:48,450 --> 00:34:51,780
sharding system is supposed to behave or

00:34:50,429 --> 00:34:54,510
how requests are supposed to be routed

00:34:51,780 --> 00:34:57,710
or which machines are responsible for

00:34:54,510 --> 00:34:59,700
what data or business rules around

00:34:57,710 --> 00:35:01,890
charging people for certain things in

00:34:59,700 --> 00:35:03,780
certain ways when that's expressed as a

00:35:01,890 --> 00:35:07,290
big Perl file you've got a problem to

00:35:03,780 --> 00:35:09,119
solve and that's that's just one of

00:35:07,290 --> 00:35:11,430
those things that that's been for in my

00:35:09,119 --> 00:35:13,890
experience has been a repeating

00:35:11,430 --> 00:35:15,900
annoyance when having to make systems

00:35:13,890 --> 00:35:17,490
talk to each other nicely because that's

00:35:15,900 --> 00:35:19,170
the first thing I see yes oh I got that

00:35:17,490 --> 00:35:20,670
config file in Perl I need to find a way

00:35:19,170 --> 00:35:20,860
to express that into something else and

00:35:20,670 --> 00:35:22,150
they

00:35:20,860 --> 00:35:24,190
sure the other code can understand it

00:35:22,150 --> 00:35:25,510
and you end up having to build all this

00:35:24,190 --> 00:35:27,340
other structure around something that

00:35:25,510 --> 00:35:29,110
the time seemed perfectly reasonable and

00:35:27,340 --> 00:35:31,450
probably was but it's one of those

00:35:29,110 --> 00:35:35,470
growing pains that comes up

00:35:31,450 --> 00:35:37,990
I sort of talked about this yes what I

00:35:35,470 --> 00:35:40,330
was just saying anyway and this is so

00:35:37,990 --> 00:35:41,650
even going to something like Gamal or

00:35:40,330 --> 00:35:43,210
JSON or something that where there are

00:35:41,650 --> 00:35:45,220
at least partial and other languages

00:35:43,210 --> 00:35:49,360
gets you sometimes eighty ninety percent

00:35:45,220 --> 00:35:50,860
of the way there and you know I saw

00:35:49,360 --> 00:35:52,780
folks doing this years ago even before

00:35:50,860 --> 00:35:54,100
there was this whole notion of service

00:35:52,780 --> 00:35:55,810
discovery and all these other systems

00:35:54,100 --> 00:35:58,330
that have come up over the last few

00:35:55,810 --> 00:35:59,710
years and and at the time seemed to me a

00:35:58,330 --> 00:36:01,960
little bit like overkill but it turns

00:35:59,710 --> 00:36:03,250
out it was just just sort of it was

00:36:01,960 --> 00:36:05,380
getting ready for the future before it

00:36:03,250 --> 00:36:08,260
arrived at least - in cases I was

00:36:05,380 --> 00:36:09,280
familiar with so they're they're big

00:36:08,260 --> 00:36:10,690
decisions when you're when you're

00:36:09,280 --> 00:36:14,080
looking at code like this you know do

00:36:10,690 --> 00:36:15,550
you either you or the person making

00:36:14,080 --> 00:36:17,110
these decisions has to think about this

00:36:15,550 --> 00:36:18,880
and you know replacing something

00:36:17,110 --> 00:36:20,530
entirely you're updating it well that's

00:36:18,880 --> 00:36:22,300
that's kind of a time effort trade-off

00:36:20,530 --> 00:36:23,980
for a time you know money effort

00:36:22,300 --> 00:36:25,890
trade-off that someone has to make and

00:36:23,980 --> 00:36:29,290
that that's a big one for a lot of folks

00:36:25,890 --> 00:36:32,200
another one is is there's a huge there's

00:36:29,290 --> 00:36:33,850
a huge a lot of people get stuck on this

00:36:32,200 --> 00:36:35,560
you know do we do incremental

00:36:33,850 --> 00:36:37,330
refactoring this codebase over the next

00:36:35,560 --> 00:36:41,320
five years or do we spend three years

00:36:37,330 --> 00:36:42,520
rewrite and replace it a whole hog first

00:36:41,320 --> 00:36:47,320
of all both those estimates are going to

00:36:42,520 --> 00:36:49,870
be wrong the new system is going to have

00:36:47,320 --> 00:36:51,850
different bugs in the existing one we

00:36:49,870 --> 00:36:53,860
all know this right but it's trying to

00:36:51,850 --> 00:36:56,680
either internalize this when we're

00:36:53,860 --> 00:36:58,600
making our own decisions so that we can

00:36:56,680 --> 00:36:59,920
be logical and unemotional about it that

00:36:58,600 --> 00:37:01,660
that's hard sometimes when it's your

00:36:59,920 --> 00:37:04,600
code or it's code you either love or

00:37:01,660 --> 00:37:07,120
hate for various reasons or the the

00:37:04,600 --> 00:37:09,940
business / manager person above you has

00:37:07,120 --> 00:37:11,820
to be has to have this explain so that

00:37:09,940 --> 00:37:14,170
they can help decide what makes sense

00:37:11,820 --> 00:37:15,580
it's you know they're fundamentally

00:37:14,170 --> 00:37:18,100
whoever's making that decision is making

00:37:15,580 --> 00:37:19,750
is having to understand or trying to

00:37:18,100 --> 00:37:22,960
understand what the risks involved in

00:37:19,750 --> 00:37:24,610
both of those are and then then there's

00:37:22,960 --> 00:37:26,320
my favorite one which is when you're

00:37:24,610 --> 00:37:28,420
doing the incremental refactoring is is

00:37:26,320 --> 00:37:30,660
well while I'm in here I'm just going to

00:37:28,420 --> 00:37:33,310
fix this other stuff too

00:37:30,660 --> 00:37:34,779
that happens that was everyone right so

00:37:33,310 --> 00:37:36,429
it's that scope creep it's like

00:37:34,779 --> 00:37:37,989
you're in some old coat and gosh you

00:37:36,429 --> 00:37:39,400
know while I'm it's kind of like the

00:37:37,989 --> 00:37:40,749
national parks thing or when you go

00:37:39,400 --> 00:37:42,159
camping you're supposed to you know pack

00:37:40,749 --> 00:37:43,659
it in pack it out or try to leave an

00:37:42,159 --> 00:37:45,099
area better than when you got there

00:37:43,659 --> 00:37:46,299
you know a lot of people have that

00:37:45,099 --> 00:37:47,650
mentality with code I have that

00:37:46,299 --> 00:37:49,869
mentality with code I like to clean

00:37:47,650 --> 00:37:51,789
things up while I'm in there but damn it

00:37:49,869 --> 00:37:54,569
if I don't occasionally break something

00:37:51,789 --> 00:37:56,709
doing that too it's just so annoying but

00:37:54,569 --> 00:37:58,689
it's one of those things it's like you

00:37:56,709 --> 00:38:00,609
have to you have to exercise restraint

00:37:58,689 --> 00:38:02,319
in some cases but there are other times

00:38:00,609 --> 00:38:03,669
when it's really worth fixing it and and

00:38:02,319 --> 00:38:06,549
knowing how to make that decision that

00:38:03,669 --> 00:38:08,229
that's that's the hard thing here the

00:38:06,549 --> 00:38:10,269
good news for a lot of us in the room

00:38:08,229 --> 00:38:12,489
here is the impression I got when we

00:38:10,269 --> 00:38:14,199
were raising hands earlier is a lot of

00:38:12,489 --> 00:38:16,329
us have been with these code bases for a

00:38:14,199 --> 00:38:17,799
long time so we have we have a bit of an

00:38:16,329 --> 00:38:19,449
understanding of what the implications

00:38:17,799 --> 00:38:21,429
might be of making certain changes

00:38:19,449 --> 00:38:23,469
that's something that someone new to the

00:38:21,429 --> 00:38:27,429
code base isn't gonna have and that's

00:38:23,469 --> 00:38:29,079
something to think about too so looking

00:38:27,429 --> 00:38:31,209
at my time here I'm babbling longer than

00:38:29,079 --> 00:38:34,929
I thought so so talking about the code

00:38:31,209 --> 00:38:36,699
stuff one of the big things this is

00:38:34,929 --> 00:38:37,689
something that that happens if you're

00:38:36,699 --> 00:38:39,369
doing that kind of incremental

00:38:37,689 --> 00:38:42,039
refactoring or trying to go from single

00:38:39,369 --> 00:38:43,599
to multi language and/or so many other

00:38:42,039 --> 00:38:45,429
reasons this happens is you end up

00:38:43,599 --> 00:38:48,689
adding complexity in order to simplify

00:38:45,429 --> 00:38:50,859
things sounds completely backwards but

00:38:48,689 --> 00:38:52,539
you're able to justify it for some

00:38:50,859 --> 00:38:54,759
reason right well if I just had to do

00:38:52,539 --> 00:38:56,739
this other stuff this will all become

00:38:54,759 --> 00:38:58,359
easier and there are times when this is

00:38:56,739 --> 00:38:59,890
totally justifiable and makes sense and

00:38:58,359 --> 00:39:02,949
you should do it and then there's other

00:38:59,890 --> 00:39:04,719
times when you're just making more work

00:39:02,949 --> 00:39:06,309
for yourself more stuff to support and

00:39:04,719 --> 00:39:08,499
the real reason you want to do it is

00:39:06,309 --> 00:39:12,609
because you think it'll be fun that ever

00:39:08,499 --> 00:39:20,739
happened yeah bunchy relying cuz gonna

00:39:12,609 --> 00:39:22,329
put your hands up so anyway one of the

00:39:20,739 --> 00:39:23,469
things that ends up happening when when

00:39:22,329 --> 00:39:24,909
you're bringing older code up to date

00:39:23,469 --> 00:39:26,769
you end up adding sort of layers or

00:39:24,909 --> 00:39:28,209
wrappers around things to try to bring

00:39:26,769 --> 00:39:29,559
old data up to date that that's

00:39:28,209 --> 00:39:31,359
something that happens and that in my

00:39:29,559 --> 00:39:33,719
opinion my experience has been very

00:39:31,359 --> 00:39:36,789
justifiable in a very useful thing to do

00:39:33,719 --> 00:39:38,769
rather than access always accessing this

00:39:36,789 --> 00:39:40,749
this hash and Wilda going and getting

00:39:38,769 --> 00:39:42,519
them members of that hash directly we're

00:39:40,749 --> 00:39:43,900
gonna add a wrapper class around it so

00:39:42,519 --> 00:39:45,219
we're gonna make method calls on it that

00:39:43,900 --> 00:39:47,529
way if we change the structure the hash

00:39:45,219 --> 00:39:48,130
or change the hash keys then the code

00:39:47,529 --> 00:39:49,990
doesn't break

00:39:48,130 --> 00:39:51,940
anymore that's a very common thing to do

00:39:49,990 --> 00:39:53,710
and I think a lot of cases is warranted

00:39:51,940 --> 00:39:55,810
because it gives you flexibility in the

00:39:53,710 --> 00:39:59,110
future to make changes and not have

00:39:55,810 --> 00:40:01,450
things break all the time that's

00:39:59,110 --> 00:40:03,100
something they're they're rare cases of

00:40:01,450 --> 00:40:05,380
that where I've seen or heard about it

00:40:03,100 --> 00:40:07,300
being a waste that that seems very good

00:40:05,380 --> 00:40:09,760
another is adding sort of the notion of

00:40:07,300 --> 00:40:11,560
versioning to these objects so that if

00:40:09,760 --> 00:40:13,300
you've got old data laying around that's

00:40:11,560 --> 00:40:14,980
not read very often that when it is read

00:40:13,300 --> 00:40:17,230
it can either be updated upgraded

00:40:14,980 --> 00:40:19,210
on-the-fly or it can be presented in

00:40:17,230 --> 00:40:20,980
such a way that it complies to the new

00:40:19,210 --> 00:40:22,570
interface that's been defined even

00:40:20,980 --> 00:40:23,730
though the data is old and and all the

00:40:22,570 --> 00:40:25,600
new code doesn't have to deal with

00:40:23,730 --> 00:40:29,770
understanding how to parse that old data

00:40:25,600 --> 00:40:30,970
for example so there there are some

00:40:29,770 --> 00:40:33,400
considerations that come up when you're

00:40:30,970 --> 00:40:38,590
doing this that I I and others have

00:40:33,400 --> 00:40:43,180
encountered is is you might not make it

00:40:38,590 --> 00:40:44,650
complex enough and in you know part of

00:40:43,180 --> 00:40:46,150
it is not getting the abstractions right

00:40:44,650 --> 00:40:49,540
and having weird things leaked through

00:40:46,150 --> 00:40:51,370
those abstractions and what you realize

00:40:49,540 --> 00:40:52,780
is that to make a complete and fully

00:40:51,370 --> 00:40:54,940
usable version of what you thought was

00:40:52,780 --> 00:40:56,350
going to be an easy task is a job in and

00:40:54,940 --> 00:40:58,900
of itself and probably not one worth

00:40:56,350 --> 00:41:00,160
doing because it's going to take too

00:40:58,900 --> 00:41:02,530
long too much effort and then something

00:41:00,160 --> 00:41:03,610
has to be supported for a long time the

00:41:02,530 --> 00:41:05,110
flip side of that is sometimes the

00:41:03,610 --> 00:41:06,070
creating this is really fun so you

00:41:05,110 --> 00:41:11,740
commit yourself that's a good idea

00:41:06,070 --> 00:41:12,850
anyway and and you're looking at and

00:41:11,740 --> 00:41:14,770
going well you know what I can actually

00:41:12,850 --> 00:41:15,850
do it the right way this time I didn't

00:41:14,770 --> 00:41:18,070
do it the right way the last time I can

00:41:15,850 --> 00:41:19,180
finally get it right or you know the

00:41:18,070 --> 00:41:20,650
person who created they're not the

00:41:19,180 --> 00:41:22,060
company more like I finally fix that

00:41:20,650 --> 00:41:25,630
person's mistakes and I can make their

00:41:22,060 --> 00:41:27,280
stuff work the way it should question is

00:41:25,630 --> 00:41:28,810
you know will is your way the right way

00:41:27,280 --> 00:41:31,180
will it stand the test of time

00:41:28,810 --> 00:41:33,550
hard to say and how useful is it gonna

00:41:31,180 --> 00:41:35,170
be really compared to the amount of fun

00:41:33,550 --> 00:41:37,090
you're gonna have creating it and that's

00:41:35,170 --> 00:41:39,310
one of those things it's it's just hard

00:41:37,090 --> 00:41:40,810
to separate yourself from at times give

00:41:39,310 --> 00:41:43,480
yourself give you some examples that

00:41:40,810 --> 00:41:44,920
I've either seen or heard of building

00:41:43,480 --> 00:41:48,130
your own query language for something

00:41:44,920 --> 00:41:50,890
who's done that here nobody how come on

00:41:48,130 --> 00:41:53,050
are a few I've done it I mean I I'm in

00:41:50,890 --> 00:41:55,490
the process of trying to retire one

00:41:53,050 --> 00:41:57,099
you know oh it's just gonna be a subset

00:41:55,490 --> 00:42:01,400
of SQL because that's really all we need

00:41:57,099 --> 00:42:02,839
well that's all you need today as soon

00:42:01,400 --> 00:42:04,579
as something starts to feel like SQL you

00:42:02,839 --> 00:42:05,930
expect it to have all of SQL in it and

00:42:04,579 --> 00:42:07,250
then you're going to spend the rest of

00:42:05,930 --> 00:42:10,460
your life adding those bits until you've

00:42:07,250 --> 00:42:12,079
recreated SQL or how many of you ever

00:42:10,460 --> 00:42:14,450
written a custom caching layer for

00:42:12,079 --> 00:42:17,630
something yeah how many of you still

00:42:14,450 --> 00:42:19,700
have it some of you okay

00:42:17,630 --> 00:42:22,190
sometimes that's warranted sometimes

00:42:19,700 --> 00:42:24,470
that's really what you need other times

00:42:22,190 --> 00:42:26,380
you can use something off the shelf and

00:42:24,470 --> 00:42:28,819
you'll get the job done just as well and

00:42:26,380 --> 00:42:30,500
the difference is you're not creating

00:42:28,819 --> 00:42:32,060
new stuff yourself it's you don't get

00:42:30,500 --> 00:42:35,750
the same sense of satisfaction from it

00:42:32,060 --> 00:42:38,300
so that happens how many of you ever

00:42:35,750 --> 00:42:40,099
written your own domain-specific ORM for

00:42:38,300 --> 00:42:45,230
some data yeah

00:42:40,099 --> 00:42:46,640
are those fun in the short term yeah

00:42:45,230 --> 00:42:47,960
they're fun in the short term and then

00:42:46,640 --> 00:42:49,700
when you're maintaining them for the

00:42:47,960 --> 00:42:51,530
next decade is kind of like Oh got this

00:42:49,700 --> 00:42:53,030
again

00:42:51,530 --> 00:42:54,680
ya know again it's one of those cases

00:42:53,030 --> 00:42:57,400
where I've seen I've seen examples that

00:42:54,680 --> 00:43:00,230
are good because the data is very very

00:42:57,400 --> 00:43:02,660
specific has some really weird quirks

00:43:00,230 --> 00:43:04,069
about it that what you really want to do

00:43:02,660 --> 00:43:05,599
is insulate most people from ever I have

00:43:04,069 --> 00:43:10,160
ever having to understand all the

00:43:05,599 --> 00:43:12,710
intricacies but in many many many cases

00:43:10,160 --> 00:43:16,010
it's probably just it's overkill it's

00:43:12,710 --> 00:43:18,710
it's it's adding complexity for for fun

00:43:16,010 --> 00:43:19,910
and ends up dragging you down in the

00:43:18,710 --> 00:43:21,440
future when you're trying to change

00:43:19,910 --> 00:43:23,180
things trying to evolve things and

00:43:21,440 --> 00:43:26,660
you've got a drag also their baggage

00:43:23,180 --> 00:43:28,520
line with you what if we just set up a

00:43:26,660 --> 00:43:29,869
Hadoop cluster like I've seen that kind

00:43:28,520 --> 00:43:31,849
of thing before what if I just pick

00:43:29,869 --> 00:43:34,760
off-the-shelf solution X let's just use

00:43:31,849 --> 00:43:36,619
that where that is actually a really big

00:43:34,760 --> 00:43:39,260
hammer for a relatively small problem

00:43:36,619 --> 00:43:41,660
that's another one that the that happens

00:43:39,260 --> 00:43:43,640
with some frequency as someone sees a

00:43:41,660 --> 00:43:45,530
piece of technology that will solve a

00:43:43,640 --> 00:43:46,790
particular problem it's just the the

00:43:45,530 --> 00:43:48,890
problem that you're trying to solve is

00:43:46,790 --> 00:43:50,869
this big and the solution for it is 50

00:43:48,890 --> 00:43:53,450
times that and you spend all your time

00:43:50,869 --> 00:43:55,040
and effort getting that thing set up in

00:43:53,450 --> 00:43:57,380
order to solve a problem that would have

00:43:55,040 --> 00:43:59,540
been solved with a lot less effort and

00:43:57,380 --> 00:44:01,130
that's something I've i thankfully

00:43:59,540 --> 00:44:02,170
haven't done that myself very often i've

00:44:01,130 --> 00:44:05,470
done that

00:44:02,170 --> 00:44:07,450
a few times but it's it's definitely one

00:44:05,470 --> 00:44:11,200
of the things where it can be very

00:44:07,450 --> 00:44:12,820
tricky because the best thing to do

00:44:11,200 --> 00:44:14,140
early on is do some due diligence talk

00:44:12,820 --> 00:44:15,610
to other people using whatever the thing

00:44:14,140 --> 00:44:16,990
is you're thinking of getting because

00:44:15,610 --> 00:44:19,090
you want to get the real story on what

00:44:16,990 --> 00:44:21,100
it takes to to keep that thing and

00:44:19,090 --> 00:44:24,370
maintain it over the years I've been

00:44:21,100 --> 00:44:25,480
surprised at times so kind of what do

00:44:24,370 --> 00:44:27,430
you do like what do you do when you're

00:44:25,480 --> 00:44:28,810
when you're in this process of taking

00:44:27,430 --> 00:44:31,000
your old code and modernizing and are

00:44:28,810 --> 00:44:33,130
trying to do a big refactoring or or

00:44:31,000 --> 00:44:36,010
maybe change things in an even different

00:44:33,130 --> 00:44:37,300
way you know I think the best thing to

00:44:36,010 --> 00:44:38,740
do a lot of times is just sort of step

00:44:37,300 --> 00:44:39,970
back and take a take a deep breath and

00:44:38,740 --> 00:44:42,400
look at things try to look at things

00:44:39,970 --> 00:44:45,280
objectively especially if the code

00:44:42,400 --> 00:44:47,110
you're dealing with is your own we all

00:44:45,280 --> 00:44:49,030
feel pride of ownership or pride of

00:44:47,110 --> 00:44:50,230
creation and with code that we're

00:44:49,030 --> 00:44:51,720
dealing with if it's something that we

00:44:50,230 --> 00:44:54,660
had a hand in or we were the primary

00:44:51,720 --> 00:44:56,740
person working on it for a long time

00:44:54,660 --> 00:44:58,270
always keep that question in the back

00:44:56,740 --> 00:45:00,930
their mind is you know is what I'm about

00:44:58,270 --> 00:45:03,700
to do really helpful or is it just fun

00:45:00,930 --> 00:45:06,250
because the the fact is a lot of us know

00:45:03,700 --> 00:45:08,290
this many times and organizations the

00:45:06,250 --> 00:45:09,910
programmers doing things if the managers

00:45:08,290 --> 00:45:12,250
above them aren't very technical and

00:45:09,910 --> 00:45:13,480
manager doesn't know the difference they

00:45:12,250 --> 00:45:15,010
don't know if what you're proposing is

00:45:13,480 --> 00:45:17,380
actually going to be beneficial to the

00:45:15,010 --> 00:45:18,970
company or if it's just fun for you and

00:45:17,380 --> 00:45:23,140
it's kind of the Burton's kind of on you

00:45:18,970 --> 00:45:25,390
too to be honest about that and and

00:45:23,140 --> 00:45:26,890
explain the trade offs sometimes it's

00:45:25,390 --> 00:45:28,120
both sometimes there are things and well

00:45:26,890 --> 00:45:29,950
they will benefit the company but it's

00:45:28,120 --> 00:45:31,840
fun for me too and I'd like to you know

00:45:29,950 --> 00:45:33,790
it's it's okay to use new technology to

00:45:31,840 --> 00:45:35,140
get on your resume once in a while if

00:45:33,790 --> 00:45:36,490
that's the only reason you're using it

00:45:35,140 --> 00:45:39,280
that's you know that's a whole different

00:45:36,490 --> 00:45:40,330
story so it really comes down to what

00:45:39,280 --> 00:45:43,060
what is your what does your business

00:45:40,330 --> 00:45:44,650
really need and sometimes we know the

00:45:43,060 --> 00:45:46,150
answer to that is programmers sometimes

00:45:44,650 --> 00:45:48,730
we don't and it's worth having a

00:45:46,150 --> 00:45:50,530
conversation you know hey before I spend

00:45:48,730 --> 00:45:52,000
six months updating this thing do you

00:45:50,530 --> 00:45:54,970
foresee any other changes a couple years

00:45:52,000 --> 00:45:56,380
down the road or even talked of creating

00:45:54,970 --> 00:45:58,780
an app for this thing or having an API

00:45:56,380 --> 00:46:00,370
on this thing or whatever when you see

00:45:58,780 --> 00:46:02,290
new tech you know we're good to see new

00:46:00,370 --> 00:46:03,640
technology coming at us we're not

00:46:02,290 --> 00:46:05,110
necessarily good at knowing whether our

00:46:03,640 --> 00:46:06,700
business is going to use them so

00:46:05,110 --> 00:46:08,050
sometimes even planning that seed in

00:46:06,700 --> 00:46:10,030
other people's minds and asking that

00:46:08,050 --> 00:46:11,380
question helps out a lot there are a few

00:46:10,030 --> 00:46:13,390
times where that's that saved me from

00:46:11,380 --> 00:46:14,770
working on a six-month project that now

00:46:13,390 --> 00:46:16,480
I didn't you know I don't have to touch

00:46:14,770 --> 00:46:20,610
turns out that we didn't need to do it

00:46:16,480 --> 00:46:24,400
that way you know proceed with caution

00:46:20,610 --> 00:46:26,260
never never go into something unwilling

00:46:24,400 --> 00:46:27,580
to stop and reassess where you're at and

00:46:26,260 --> 00:46:29,110
think about whether you're in you're in

00:46:27,580 --> 00:46:31,270
the position you want to be in when

00:46:29,110 --> 00:46:34,600
you're doing it big refactoring of

00:46:31,270 --> 00:46:36,160
something or or doing things the same

00:46:34,600 --> 00:46:38,770
way they've been done for a long time if

00:46:36,160 --> 00:46:41,350
there may be a better way and the other

00:46:38,770 --> 00:46:42,940
thing is less is more if you're doing a

00:46:41,350 --> 00:46:46,060
lot of work in an old codebase and you

00:46:42,940 --> 00:46:47,590
can get rid of things do it the most

00:46:46,060 --> 00:46:54,040
satisfying thing ever do now is delete

00:46:47,590 --> 00:46:58,510
code just yeah we all know this this

00:46:54,040 --> 00:46:59,860
famous quote right some people and

00:46:58,510 --> 00:47:01,900
confronted with a problem think I know

00:46:59,860 --> 00:47:06,730
I'll use regular expressions now they

00:47:01,900 --> 00:47:08,320
have two problems dude Google search of

00:47:06,730 --> 00:47:10,180
that now I don't matter whether you

00:47:08,320 --> 00:47:12,130
agree with that or not what's funny is

00:47:10,180 --> 00:47:13,600
that my my original manager Yahoo

00:47:12,130 --> 00:47:16,570
Jeffrey Friedel who wrote the regular

00:47:13,600 --> 00:47:18,340
expressions book he came across this

00:47:16,570 --> 00:47:19,660
years later and did an extensive

00:47:18,340 --> 00:47:21,490
research and write-up on his blog

00:47:19,660 --> 00:47:23,440
there's a link for of where that

00:47:21,490 --> 00:47:25,300
actually came from in the comments on

00:47:23,440 --> 00:47:28,300
that blog post I thought were just

00:47:25,300 --> 00:47:29,650
really interesting to read so I think

00:47:28,300 --> 00:47:31,120
it's interesting for that reason but

00:47:29,650 --> 00:47:32,590
also it's the whole the whole idea of

00:47:31,120 --> 00:47:34,360
kind of trying to choose the right tool

00:47:32,590 --> 00:47:36,220
for the problem and not just a tool that

00:47:34,360 --> 00:47:39,070
you either know or like before for that

00:47:36,220 --> 00:47:45,700
sake I'm getting short on time somebody

00:47:39,070 --> 00:47:47,230
go faster no he doesn't believe in that

00:47:45,700 --> 00:47:48,730
but but he does have there are some good

00:47:47,230 --> 00:47:52,210
comments read the discussion on his blog

00:47:48,730 --> 00:47:55,030
post I think I think he's he's he's very

00:47:52,210 --> 00:47:58,540
level-headed about it he's not religious

00:47:55,030 --> 00:48:00,010
about it let's put it that way so this

00:47:58,540 --> 00:48:01,870
is useful Mort I didn't know who's gonna

00:48:00,010 --> 00:48:02,890
be in the room and like I didn't know if

00:48:01,870 --> 00:48:04,300
a lot of people were gonna be relatively

00:48:02,890 --> 00:48:05,740
new to Perl and dealing with a little

00:48:04,300 --> 00:48:07,780
code and that kind of thing so the

00:48:05,740 --> 00:48:09,040
question is like if you're new to a Perl

00:48:07,780 --> 00:48:10,120
code base that you've been thrown into

00:48:09,040 --> 00:48:12,220
kind of what do you do

00:48:10,120 --> 00:48:14,020
how do you get the lay of the land how

00:48:12,220 --> 00:48:16,960
do you know it was safe to change this

00:48:14,020 --> 00:48:18,520
is not really specific to Perl but kind

00:48:16,960 --> 00:48:21,070
of what do you there's so many ways so

00:48:18,520 --> 00:48:22,870
many things you can do you can read the

00:48:21,070 --> 00:48:25,030
documentation if there is any read the

00:48:22,870 --> 00:48:27,670
code add the print statements there's

00:48:25,030 --> 00:48:28,210
DIY things you can build you can add

00:48:27,670 --> 00:48:29,920
stats

00:48:28,210 --> 00:48:31,810
encounters two things if we've got you

00:48:29,920 --> 00:48:32,920
know Network type services those are

00:48:31,810 --> 00:48:34,270
really useful if you want to how many

00:48:32,920 --> 00:48:35,800
times certain methods are called and

00:48:34,270 --> 00:48:37,570
things like that you can look at

00:48:35,800 --> 00:48:39,760
coverage and profiling tools to help you

00:48:37,570 --> 00:48:41,080
out there you can grab the code base or

00:48:39,760 --> 00:48:46,750
you can comment it out and see if the

00:48:41,080 --> 00:48:48,250
thing still works test Suites I could

00:48:46,750 --> 00:48:50,349
talk more about this there's not a lot

00:48:48,250 --> 00:48:52,300
of time but the the basic idea here is

00:48:50,349 --> 00:48:54,730
the morphs important thing on the slide

00:48:52,300 --> 00:48:57,310
was think about how you can test for

00:48:54,730 --> 00:48:58,599
unintended consequences to changes a lot

00:48:57,310 --> 00:48:59,740
of times you can't but that's the thing

00:48:58,599 --> 00:49:00,670
you should worry about in the back your

00:48:59,740 --> 00:49:01,780
mind when you're changing things

00:49:00,670 --> 00:49:05,530
especially if it's code you don't know

00:49:01,780 --> 00:49:07,450
well I have to skip the whole section

00:49:05,530 --> 00:49:09,520
ahead on data concerns how many of you

00:49:07,450 --> 00:49:12,700
have it you had to do large migrations

00:49:09,520 --> 00:49:13,480
of old data into new systems alright I'm

00:49:12,700 --> 00:49:14,980
probably not gonna tell you much you

00:49:13,480 --> 00:49:16,150
didn't already know the biggest thing

00:49:14,980 --> 00:49:17,710
was I was gonna talk about was how

00:49:16,150 --> 00:49:19,150
unicode's a big pain in the ass but

00:49:17,710 --> 00:49:23,970
pearls got you covered as long as you

00:49:19,150 --> 00:49:27,250
read the documentation final thoughts

00:49:23,970 --> 00:49:29,230
stop yeah I know one more minute

00:49:27,250 --> 00:49:31,030
final thoughts then you know this

00:49:29,230 --> 00:49:32,650
increasingly I'm seeing and I've said

00:49:31,030 --> 00:49:35,830
this before more developers more

00:49:32,650 --> 00:49:37,750
companies seem to be doing development

00:49:35,830 --> 00:49:41,290
multiple languages at the same time and

00:49:37,750 --> 00:49:42,550
I think that I think that should inform

00:49:41,290 --> 00:49:44,080
how we think about writing code

00:49:42,550 --> 00:49:46,089
especially as we're changing it and

00:49:44,080 --> 00:49:48,580
hopefully keeping it useful in the

00:49:46,089 --> 00:49:51,369
future and I think that means thinking

00:49:48,580 --> 00:49:52,900
about how someone who is both fairly new

00:49:51,369 --> 00:49:57,430
to Perl will see and understand your

00:49:52,900 --> 00:50:00,099
code hopefully and someone who someone

00:49:57,430 --> 00:50:02,440
who has to maintain it after you and

00:50:00,099 --> 00:50:04,180
some of that means you know when I first

00:50:02,440 --> 00:50:06,220
got into parole everyone likes showing

00:50:04,180 --> 00:50:07,869
off about how succinctly you and simply

00:50:06,220 --> 00:50:09,339
you could do things in Perl and that's

00:50:07,869 --> 00:50:11,140
kind of how we all know it got the

00:50:09,339 --> 00:50:12,670
reputation for being a line noise plus

00:50:11,140 --> 00:50:17,070
the fact that you use so many you know

00:50:12,670 --> 00:50:17,070
shift number symbols on the keyboard

00:50:17,130 --> 00:50:21,790
well yeah right the whole idea of you

00:50:20,530 --> 00:50:23,020
can write something really quick in Perl

00:50:21,790 --> 00:50:25,270
but you can never hope to maintain it

00:50:23,020 --> 00:50:27,369
and you know that that's a reputation it

00:50:25,270 --> 00:50:29,440
really doesn't deserve because most code

00:50:27,369 --> 00:50:31,570
is actually something once you get into

00:50:29,440 --> 00:50:32,950
it you can understand but I think we

00:50:31,570 --> 00:50:35,500
need to think about taking that to

00:50:32,950 --> 00:50:38,349
another level as code is rewritten and

00:50:35,500 --> 00:50:39,760
used again in the future because it's I

00:50:38,349 --> 00:50:41,800
think it's gonna be far less common in

00:50:39,760 --> 00:50:43,360
the future for people approaching an old

00:50:41,800 --> 00:50:45,400
pearl codebase we haven't already been

00:50:43,360 --> 00:50:46,540
there to be spending most of their time

00:50:45,400 --> 00:50:48,040
in Pearl I think they're going to be

00:50:46,540 --> 00:50:50,920
familiar with other languages so we need

00:50:48,040 --> 00:50:52,540
to think about emphasizing features of

00:50:50,920 --> 00:50:53,980
the language and using them if they're

00:50:52,540 --> 00:50:55,450
common to other language is something

00:50:53,980 --> 00:50:57,370
that's really specific and weird to

00:50:55,450 --> 00:50:59,560
Pearl think twice about using it because

00:50:57,370 --> 00:51:00,910
someone approaching it from a lower

00:50:59,560 --> 00:51:04,110
experience point of view is just going

00:51:00,910 --> 00:51:09,340
to find themself stuck or confused so

00:51:04,110 --> 00:51:11,080
don't be clever be clear and obvious the

00:51:09,340 --> 00:51:12,610
modern Pearl stuff I think all is great

00:51:11,080 --> 00:51:13,840
I have an ad electri to put it in a lot

00:51:12,610 --> 00:51:15,700
of my code

00:51:13,840 --> 00:51:17,830
my only concern there is the fact that

00:51:15,700 --> 00:51:19,240
it's optional makes pearl seem like a

00:51:17,830 --> 00:51:21,610
harder language for other people to

00:51:19,240 --> 00:51:22,870
approach I think that's more of a

00:51:21,610 --> 00:51:24,610
perception thing than a reality it

00:51:22,870 --> 00:51:26,170
really comes down to how people are

00:51:24,610 --> 00:51:27,340
trained and taught and what the books

00:51:26,170 --> 00:51:28,510
are getting are telling them what the

00:51:27,340 --> 00:51:30,970
websites they're reading are telling

00:51:28,510 --> 00:51:32,500
them so the last thing is I've been

00:51:30,970 --> 00:51:33,460
going to tech conferences now for twenty

00:51:32,500 --> 00:51:36,220
years I don't know why they start at

00:51:33,460 --> 00:51:37,420
8:00 a.m. so I thought of that last

00:51:36,220 --> 00:51:43,680
night at midnight when I finish you my

00:51:37,420 --> 00:51:43,680
slides any comments or questions or yes

00:52:12,550 --> 00:52:15,729
[Music]

00:52:19,450 --> 00:52:23,989
yes that's a good point and I've found

00:52:22,460 --> 00:52:25,880
myself having to do that to my own code

00:52:23,989 --> 00:52:27,950
when I write something come back to your

00:52:25,880 --> 00:52:29,869
later add a few features and have to

00:52:27,950 --> 00:52:30,229
relearn why something works a particular

00:52:29,869 --> 00:52:34,729
way

00:52:30,229 --> 00:52:36,259
I've yeah why is it that way or I assume

00:52:34,729 --> 00:52:38,059
it's that way for one reason it turns

00:52:36,259 --> 00:52:40,430
out I was wrong I had a comment there to

00:52:38,059 --> 00:52:42,319
remind my future self and that's a great

00:52:40,430 --> 00:52:44,450
point and I think I've also been a fan

00:52:42,319 --> 00:52:45,499
I've lobbied it a few organizations I

00:52:44,450 --> 00:52:47,779
said you know I think we should have a

00:52:45,499 --> 00:52:49,700
part or full-time person on staff who's

00:52:47,779 --> 00:52:51,440
who is professional trainings and

00:52:49,700 --> 00:52:53,690
technical documentation that can help us

00:52:51,440 --> 00:52:55,249
organize our wiki get rid of the old

00:52:53,690 --> 00:52:57,680
crap and make sure that our code is

00:52:55,249 --> 00:52:59,920
actually documented it's never happened

00:52:57,680 --> 00:53:02,299
but I've suggested it several times so

00:52:59,920 --> 00:53:06,640
no I agree I think that would be a great

00:53:02,299 --> 00:53:06,640
idea yes

00:53:12,789 --> 00:53:25,939
yes so how does right if you have a QA

00:53:24,380 --> 00:53:29,449
team how does writing test for that code

00:53:25,939 --> 00:53:31,009
help another way of asking that is why

00:53:29,449 --> 00:53:36,339
should I write tests if the QA team's

00:53:31,009 --> 00:53:38,509
gonna find the buggy anyway I so I think

00:53:36,339 --> 00:53:40,640
it's not unreasonable question I mean

00:53:38,509 --> 00:53:43,160
honestly I think I think the reason I

00:53:40,640 --> 00:53:47,390
think the way it helps is it shortens

00:53:43,160 --> 00:53:51,229
the time to discovery for a bug and also

00:53:47,390 --> 00:53:53,569
makes it narrows the in it narrows the

00:53:51,229 --> 00:53:54,979
search for trying to go find out where

00:53:53,569 --> 00:53:57,949
the source that the problem is in some

00:53:54,979 --> 00:54:00,049
cases the other thing I think that

00:53:57,949 --> 00:54:02,119
having a lot of tests does for a code

00:54:00,049 --> 00:54:03,589
base and I've seen this myself I've

00:54:02,119 --> 00:54:06,410
worked in a code base where there were

00:54:03,589 --> 00:54:08,059
no tests literally no tests and then a

00:54:06,410 --> 00:54:09,319
few years later after someone was really

00:54:08,059 --> 00:54:10,609
dedicating went in there and worked on

00:54:09,319 --> 00:54:12,380
that code base and added tests there

00:54:10,609 --> 00:54:15,229
were thousands of thousands of tests and

00:54:12,380 --> 00:54:17,150
a single biggest thing that did was to

00:54:15,229 --> 00:54:19,789
increase our confidence and our ability

00:54:17,150 --> 00:54:22,400
to make changes and not break too much

00:54:19,789 --> 00:54:24,019
like way we know most things are going

00:54:22,400 --> 00:54:27,739
to work and if something broke something

00:54:24,019 --> 00:54:29,299
that wasn't tested but I I mean I won't

00:54:27,739 --> 00:54:30,799
sugarcoat it it's a huge investment to

00:54:29,299 --> 00:54:35,179
go through and add tests to an existing

00:54:30,799 --> 00:54:36,679
code base it's hard and it's the the

00:54:35,179 --> 00:54:39,049
biggest danger I see well there's two

00:54:36,679 --> 00:54:41,059
two downsides one is the sort of cost of

00:54:39,049 --> 00:54:42,049
doing that it takes time to do that and

00:54:41,059 --> 00:54:43,160
then you're committing to the

00:54:42,049 --> 00:54:44,140
maintenance of those tests for the

00:54:43,160 --> 00:54:46,999
foreseeable future

00:54:44,140 --> 00:54:50,209
the only other downside really is you

00:54:46,999 --> 00:54:51,859
end up with this you could end up with

00:54:50,209 --> 00:54:52,999
this false sense of security and well

00:54:51,859 --> 00:54:55,009
now that we've got these thousands of

00:54:52,999 --> 00:54:56,539
tests nothing's ever going to break or

00:54:55,009 --> 00:54:58,880
if I make a change and the test suite

00:54:56,539 --> 00:55:01,519
passes everything's good well that's not

00:54:58,880 --> 00:55:02,929
always true either but it gets you a lot

00:55:01,519 --> 00:55:06,259
closer to that point than you were with

00:55:02,929 --> 00:55:07,609
no tests I think the challenge is the

00:55:06,259 --> 00:55:09,019
problem now is like if you don't have

00:55:07,609 --> 00:55:10,670
tests and QA finds a problem and it

00:55:09,019 --> 00:55:12,319
keeps back it can take a long time to

00:55:10,670 --> 00:55:13,969
try to understand what they did to

00:55:12,319 --> 00:55:15,410
create the problem what code might be

00:55:13,969 --> 00:55:17,900
responsible and kind of conduct the

00:55:15,410 --> 00:55:22,519
search to find it so that's my two cents

00:55:17,900 --> 00:55:23,620
on it okay yeah any other comments or

00:55:22,519 --> 00:55:26,150
questions

00:55:23,620 --> 00:55:27,270
if not I won't keep you from your snacks

00:55:26,150 --> 00:55:31,650
thank you very much

00:55:27,270 --> 00:55:31,650

YouTube URL: https://www.youtube.com/watch?v=P49gduedYh0


