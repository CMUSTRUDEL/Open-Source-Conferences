Title: Nate Handy - "Perl and MongoDB: A Recipe for Success"
Publication date: 2018-06-21
Playlist: TPC 2018 in SLC
Description: 
	Using Mongo in Perl (warning puns and Dad jokes abound):

Lettuce take some thyme to look into chow we could store recipes butter. If you carrot all about cooking, Nate will taco â€˜bout what turniped, and olive the knowledge he gained, when going on a journey to store recipes in a document store vs a relational db. Oven if you donâ€™t like cooking ewe could probably pick up a pizza knowledge here or there. Hoping to leave no scone unturned.
Captions: 
	00:00:00,030 --> 00:00:09,290
all right welcome and thanks to all of

00:00:03,840 --> 00:00:12,570
you who turn up my name is nate handy

00:00:09,290 --> 00:00:17,670
there's a little bit about me yes I am a

00:00:12,570 --> 00:00:21,630
man I am currently employed at Bluehost

00:00:17,670 --> 00:00:25,380
of which is there's quite a large

00:00:21,630 --> 00:00:29,519
percentage of the the audience here who

00:00:25,380 --> 00:00:31,740
is Bluehost at this point I am sure

00:00:29,519 --> 00:00:34,110
you've heard this almost at every

00:00:31,740 --> 00:00:37,530
presentation so I'm gonna say it a

00:00:34,110 --> 00:00:39,840
little bit differently I am NOT being

00:00:37,530 --> 00:00:42,719
mandated to tell you that as an

00:00:39,840 --> 00:00:48,289
organization we are seeking Perl Wizards

00:00:42,719 --> 00:00:51,809
to embark on a quest of programmatic

00:00:48,289 --> 00:00:54,719
nature in parties and varying skills and

00:00:51,809 --> 00:00:58,469
powers with the end goal being to level

00:00:54,719 --> 00:01:02,250
up our features and to altom utley

00:00:58,469 --> 00:01:06,409
vanquish the evil production s budget is

00:01:02,250 --> 00:01:11,180
oh and there's a epic loot involved so

00:01:06,409 --> 00:01:13,680
anyway I I enjoy working for Bluehost

00:01:11,180 --> 00:01:17,220
we have a really good team that I work

00:01:13,680 --> 00:01:19,979
on right now and it's a lot of fun so a

00:01:17,220 --> 00:01:25,080
little bit of my background I've spent a

00:01:19,979 --> 00:01:29,009
lot of time in databases B I work as

00:01:25,080 --> 00:01:35,090
well as just varying databases

00:01:29,009 --> 00:01:38,240
everything from smaller databases to

00:01:35,090 --> 00:01:43,829
large-scale production environments or

00:01:38,240 --> 00:01:45,509
enterprise environments I I have been

00:01:43,829 --> 00:01:47,790
working with parole I've taken breaks

00:01:45,509 --> 00:01:51,590
from time to time at different jobs but

00:01:47,790 --> 00:01:58,170
I always seem to be coming back to Pearl

00:01:51,590 --> 00:02:02,430
I I currently have four kids and two of

00:01:58,170 --> 00:02:05,579
them are teenagers one's a tween raising

00:02:02,430 --> 00:02:08,970
two teenagers it's not a piece of cake

00:02:05,579 --> 00:02:13,350
and as most of you know the cake is a

00:02:08,970 --> 00:02:19,800
lie so I I'm a dad which

00:02:13,350 --> 00:02:22,520
is apparent so so this is where we talk

00:02:19,800 --> 00:02:25,560
about what's acceptable and groans are

00:02:22,520 --> 00:02:29,460
completely acceptable responses to this

00:02:25,560 --> 00:02:32,630
talk so I get plenty of those from my

00:02:29,460 --> 00:02:36,240
teenagers I roles are also acceptable

00:02:32,630 --> 00:02:39,150
face palms especially the card level

00:02:36,240 --> 00:02:42,560
face palms are definitely acceptable I

00:02:39,150 --> 00:02:45,270
ask that you do not throw anything

00:02:42,560 --> 00:02:48,210
unless you know and here's a couple of

00:02:45,270 --> 00:02:50,070
caveats that it is a non-perishable food

00:02:48,210 --> 00:02:53,190
that is still contained in its original

00:02:50,070 --> 00:02:55,740
packaging uh Nate and pastries are also

00:02:53,190 --> 00:02:57,390
acceptable and money I will always

00:02:55,740 --> 00:03:06,030
accept the money thrown at me

00:02:57,390 --> 00:03:09,230
so speaking of dads I might add he is

00:03:06,030 --> 00:03:14,160
just like a father to me

00:03:09,230 --> 00:03:17,460
no no really even married my mother with

00:03:14,160 --> 00:03:19,620
Father's Day having just happened I I

00:03:17,460 --> 00:03:24,660
want to share a little story about my

00:03:19,620 --> 00:03:25,940
dad and a long time ago in a country far

00:03:24,660 --> 00:03:28,230
far away

00:03:25,940 --> 00:03:30,950
Germany specifically my dad was living

00:03:28,230 --> 00:03:35,310
there and he got invited over to dinner

00:03:30,950 --> 00:03:38,400
with his roommate and when they arrived

00:03:35,310 --> 00:03:41,010
at the location they the smells

00:03:38,400 --> 00:03:43,730
permeating from the kitchen were just

00:03:41,010 --> 00:03:49,590
overwhelming and this is what he smelled

00:03:43,730 --> 00:03:51,330
beautiful roast just his he was

00:03:49,590 --> 00:03:55,050
salivating like no other he's like oh

00:03:51,330 --> 00:04:00,540
this is gonna be so great this is what

00:03:55,050 --> 00:04:04,640
he saw on his mind it's so the the host

00:04:00,540 --> 00:04:07,620
brought out the food under a silver tray

00:04:04,640 --> 00:04:10,620
silver cover placed it on and lifted it

00:04:07,620 --> 00:04:12,660
off now before we get to what he saw I

00:04:10,620 --> 00:04:19,230
want to talk about something and that is

00:04:12,660 --> 00:04:21,030
fat content in Rose so as as you as you

00:04:19,230 --> 00:04:23,280
talk about roasts you go with kind of a

00:04:21,030 --> 00:04:25,820
leaner cut a sirloin cut you get about

00:04:23,280 --> 00:04:28,550
seven to ten percent fat content

00:04:25,820 --> 00:04:31,100
it's a little not quite as flavorful as

00:04:28,550 --> 00:04:34,340
maybe a round roast which you get up to

00:04:31,100 --> 00:04:37,790
10 to 15% go up to a chuck which is a

00:04:34,340 --> 00:04:40,160
really nice flavorful roast especially

00:04:37,790 --> 00:04:43,130
cook it a long time and get that fat to

00:04:40,160 --> 00:04:46,370
break down so and then you talk about

00:04:43,130 --> 00:04:49,670
like ground meat you can go from really

00:04:46,370 --> 00:04:52,250
lean like a 2% all the way to 30% which

00:04:49,670 --> 00:04:53,420
is like a third of your you know burger

00:04:52,250 --> 00:04:56,750
if you're making a burger on the grill

00:04:53,420 --> 00:05:00,040
is just gonna melt off as you're cooking

00:04:56,750 --> 00:05:04,880
it and it makes for a really flavorful

00:05:00,040 --> 00:05:07,940
so one thing that my dad didn't

00:05:04,880 --> 00:05:15,250
anticipate with the smell was that his

00:05:07,940 --> 00:05:17,840
roast looked like this it had 95% fat I

00:05:15,250 --> 00:05:21,310
couldn't find an image that would fully

00:05:17,840 --> 00:05:24,470
represent this so I did a faithful write

00:05:21,310 --> 00:05:28,550
recreation of it that was the meat there

00:05:24,470 --> 00:05:30,140
the rest was fat he he saw it and

00:05:28,550 --> 00:05:32,840
thought okay well there's a little bit

00:05:30,140 --> 00:05:34,490
of fat I'm gonna you know well we'll

00:05:32,840 --> 00:05:37,310
have a little bit or sorry a little bit

00:05:34,490 --> 00:05:40,600
of meat we'll have a little bit to eat

00:05:37,310 --> 00:05:43,070
there his host proceeded to carve off

00:05:40,600 --> 00:05:46,040
the meat and place it in front of her

00:05:43,070 --> 00:05:51,170
plate because she prized the fat as the

00:05:46,040 --> 00:05:54,170
the the Preem prime cut of the of the

00:05:51,170 --> 00:05:59,240
meat she proceeded to cut into cubes

00:05:54,170 --> 00:06:01,820
about an inch in Kubik nature and plump

00:05:59,240 --> 00:06:06,520
on about 10 of them onto each of their

00:06:01,820 --> 00:06:09,320
plates my dad looked at this and well

00:06:06,520 --> 00:06:12,470
this is this is essentially what he saw

00:06:09,320 --> 00:06:14,990
they're just these big globs of fat that

00:06:12,470 --> 00:06:17,810
weren't quite cooked all the way

00:06:14,990 --> 00:06:19,670
and is you've had that that hasn't been

00:06:17,810 --> 00:06:23,120
cooked all the way it's not pleasant

00:06:19,670 --> 00:06:27,170
said it was like tasting rubber so

00:06:23,120 --> 00:06:29,120
anyway he uh he tried to chew through

00:06:27,170 --> 00:06:32,120
these and it would just was not breaking

00:06:29,120 --> 00:06:35,180
down so he decided to just go ahead and

00:06:32,120 --> 00:06:37,160
eat him like a pill and so he threw a

00:06:35,180 --> 00:06:39,319
bunch in in his mouth and just took a

00:06:37,160 --> 00:06:42,319
huge gulp of water

00:06:39,319 --> 00:06:44,869
swallowed them all down well the host

00:06:42,319 --> 00:06:48,439
took this as he was really enjoying them

00:06:44,869 --> 00:06:51,199
and so she piled on quite a few more and

00:06:48,439 --> 00:06:53,349
at this point my dad said I can't I

00:06:51,199 --> 00:06:56,330
really can't do it anymore

00:06:53,349 --> 00:06:58,460
so he was looking for a way out because

00:06:56,330 --> 00:07:03,439
he didn't want to be rude and he turned

00:06:58,460 --> 00:07:06,680
and looked and saw this saw window and

00:07:03,439 --> 00:07:08,509
he thought okay this is perfect I'm out

00:07:06,680 --> 00:07:10,479
of water let me ask for some more water

00:07:08,509 --> 00:07:14,059
and while she's gone

00:07:10,479 --> 00:07:21,619
you know I'll I'll go ahead and you know

00:07:14,059 --> 00:07:24,199
just toss him out so as she left the the

00:07:21,619 --> 00:07:27,430
the room to go get a refill he grabbed a

00:07:24,199 --> 00:07:30,559
handful and he threw him at the window

00:07:27,430 --> 00:07:38,839
this is where we talk about the amazing

00:07:30,559 --> 00:07:41,719
product that Windex is so when does this

00:07:38,839 --> 00:07:45,199
is an amazing product it can could make

00:07:41,719 --> 00:07:48,139
seem like windows aren't really there

00:07:45,199 --> 00:07:50,809
and that's what my dad didn't really

00:07:48,139 --> 00:07:52,879
sense was that there wasn't an open

00:07:50,809 --> 00:07:56,240
window there was a closed window and

00:07:52,879 --> 00:08:00,529
when the flat the fat splattered against

00:07:56,240 --> 00:08:03,169
the wall his roommate proceeded to roll

00:08:00,529 --> 00:08:07,490
on the floor laughing because of the

00:08:03,169 --> 00:08:09,080
situation so he he got his roommate to

00:08:07,490 --> 00:08:11,300
get up go and distract their host

00:08:09,080 --> 00:08:13,580
scooped up the fat open the window

00:08:11,300 --> 00:08:16,249
tossed it out kind of fluffed the drapes

00:08:13,580 --> 00:08:18,589
to make sure that it didn't appear like

00:08:16,249 --> 00:08:22,430
it was there and then quickly made their

00:08:18,589 --> 00:08:24,080
goodbyes not the not the proudest moment

00:08:22,430 --> 00:08:32,539
I would say but it makes for a great

00:08:24,080 --> 00:08:34,610
story so why why did I tell this I would

00:08:32,539 --> 00:08:35,479
say that what we can learn from that

00:08:34,610 --> 00:08:40,880
story is

00:08:35,479 --> 00:08:43,430
oh it's best not to assume you you you

00:08:40,880 --> 00:08:45,649
don't you don't assume that you know

00:08:43,430 --> 00:08:52,520
everything going into a situation and

00:08:45,649 --> 00:08:56,410
it's best to analyze that so the

00:08:52,520 --> 00:09:01,160
the what I want to talk about now is

00:08:56,410 --> 00:09:03,860
recipes I love to cook I love to I do

00:09:01,160 --> 00:09:05,950
kind of all forms of cooking the the

00:09:03,860 --> 00:09:09,350
latest I've gotten a sous-vide machine

00:09:05,950 --> 00:09:12,560
and it's been great super tender

00:09:09,350 --> 00:09:14,360
but I'd like to do my own stuff but

00:09:12,560 --> 00:09:17,930
occasionally I do like to look up

00:09:14,360 --> 00:09:20,870
recipes gather intel on them but I have

00:09:17,930 --> 00:09:24,830
a few gripes about them so my recipe

00:09:20,870 --> 00:09:27,080
gripes are when I look up a recipe is I

00:09:24,830 --> 00:09:30,500
don't need your life story I don't need

00:09:27,080 --> 00:09:33,560
to know how it changed your life this

00:09:30,500 --> 00:09:36,770
one recipe I really don't like reading

00:09:33,560 --> 00:09:38,510
paragraphs of text through and through

00:09:36,770 --> 00:09:42,380
just get to the point what am i doing

00:09:38,510 --> 00:09:45,140
and you know recipes as they stand

00:09:42,380 --> 00:09:47,240
aren't very visual they they don't kind

00:09:45,140 --> 00:09:53,020
of jump out to you as what it is you're

00:09:47,240 --> 00:09:58,460
you're going a path to go and so I I

00:09:53,020 --> 00:10:01,880
went to a talk a few a few years ago at

00:09:58,460 --> 00:10:03,380
the local open with the open source

00:10:01,880 --> 00:10:06,970
conference here and someone was

00:10:03,380 --> 00:10:11,630
presenting on MongoDB and they shared

00:10:06,970 --> 00:10:15,380
some interesting information about it

00:10:11,630 --> 00:10:17,210
and I I was very intrigued so the

00:10:15,380 --> 00:10:20,810
individuals shared something like this

00:10:17,210 --> 00:10:24,080
and said okay this is what MongoDB

00:10:20,810 --> 00:10:27,200
storage looks like we've got this what

00:10:24,080 --> 00:10:29,770
what they call document shows a data

00:10:27,200 --> 00:10:35,720
structure that looks a lot like JSON and

00:10:29,770 --> 00:10:39,260
that you've got nested structure and the

00:10:35,720 --> 00:10:46,900
first thing I thought when I saw this

00:10:39,260 --> 00:10:46,900
was wow that looks like a recipe well I

00:10:46,990 --> 00:10:54,670
maybe it's not perfectly obvious to

00:10:49,970 --> 00:10:57,680
everyone so let me explain my reasoning

00:10:54,670 --> 00:11:01,220
here here we have a bunch of different

00:10:57,680 --> 00:11:04,340
containers you've got different

00:11:01,220 --> 00:11:06,440
ingredients and what is a recipe more

00:11:04,340 --> 00:11:09,740
than manipulating

00:11:06,440 --> 00:11:11,540
container placing it in combining with

00:11:09,740 --> 00:11:13,820
other containers into a bigger container

00:11:11,540 --> 00:11:16,730
and so on and so forth until they're all

00:11:13,820 --> 00:11:19,850
combined in one container in the end so

00:11:16,730 --> 00:11:22,490
to me that looks like a nested structure

00:11:19,850 --> 00:11:27,890
that flows up from the very deepest

00:11:22,490 --> 00:11:29,840
level so before we get into how I I

00:11:27,890 --> 00:11:34,400
structured this a little bit let's go

00:11:29,840 --> 00:11:38,120
over some quick MongoDB basics just as I

00:11:34,400 --> 00:11:41,840
reference them so just kind of versus

00:11:38,120 --> 00:11:43,970
your standard relational sequel

00:11:41,840 --> 00:11:49,640
terminology so you've got a collection

00:11:43,970 --> 00:11:51,950
which typically is a table document

00:11:49,640 --> 00:11:55,580
which equals kind of a record or row and

00:11:51,950 --> 00:11:57,410
then those are broken out your where you

00:11:55,580 --> 00:11:59,870
typically have your column you have your

00:11:57,410 --> 00:12:02,030
key and you have your value so going

00:11:59,870 --> 00:12:04,970
back to there you know you've got this

00:12:02,030 --> 00:12:07,430
this is a document here the name would

00:12:04,970 --> 00:12:09,530
be key and then Joe is the value and so

00:12:07,430 --> 00:12:18,620
on and so forth and they can be nested

00:12:09,530 --> 00:12:23,480
through so I set up quick MySQL

00:12:18,620 --> 00:12:26,270
structure just to to essentially get to

00:12:23,480 --> 00:12:33,050
where I would like to be with with the

00:12:26,270 --> 00:12:36,080
output of my database to be consumed by

00:12:33,050 --> 00:12:39,710
the front-end so I've got a recipe I've

00:12:36,080 --> 00:12:44,660
got steps which kind of can contain

00:12:39,710 --> 00:12:47,240
other steps got a ingredients which are

00:12:44,660 --> 00:12:51,860
included in each particular step and

00:12:47,240 --> 00:12:55,910
then I've got the actual ingredients and

00:12:51,860 --> 00:13:01,430
they're their names linked to the to

00:12:55,910 --> 00:13:03,920
each step at this point talk about what

00:13:01,430 --> 00:13:06,080
with the MongoDB structure one of the

00:13:03,920 --> 00:13:08,089
cool things about MongoDB is you don't

00:13:06,080 --> 00:13:12,020
need to necessarily have the structure

00:13:08,089 --> 00:13:14,270
set up beforehand you can just supply it

00:13:12,020 --> 00:13:16,040
to it and it'll it'll allow that

00:13:14,270 --> 00:13:19,420
structure to go through now you can do

00:13:16,040 --> 00:13:19,420
validation and in strict

00:13:20,890 --> 00:13:25,250
mature that there is validation on the

00:13:23,450 --> 00:13:27,800
structure on inserts and updates to make

00:13:25,250 --> 00:13:30,850
sure that you maintain integrity but

00:13:27,800 --> 00:13:34,550
this is essentially what I came up with

00:13:30,850 --> 00:13:38,800
so this would be the recipe for making a

00:13:34,550 --> 00:13:41,839
ham sandwich so if we if we talk about

00:13:38,800 --> 00:13:44,240
at the very deepest level here you've

00:13:41,839 --> 00:13:47,240
got your ingredients which are bread and

00:13:44,240 --> 00:13:50,510
mayo the action is go ahead and spread

00:13:47,240 --> 00:13:53,270
mail on the bread and then go up one

00:13:50,510 --> 00:13:56,330
level further and then you place the ham

00:13:53,270 --> 00:14:00,170
and cheese between the bread go up one

00:13:56,330 --> 00:14:01,970
let's go up one level further because I

00:14:00,170 --> 00:14:05,140
really like cheese I'm gonna add more

00:14:01,970 --> 00:14:08,029
cheese and so on and so forth so that

00:14:05,140 --> 00:14:11,839
that's kind of the structure is it this

00:14:08,029 --> 00:14:14,089
nested approach have listed out all the

00:14:11,839 --> 00:14:18,110
ingredients that are associated with it

00:14:14,089 --> 00:14:20,750
as well so visually I had this kind of

00:14:18,110 --> 00:14:24,170
concept to go about it so this would be

00:14:20,750 --> 00:14:27,140
the the deepest level of it so in this

00:14:24,170 --> 00:14:28,820
case I am making some cheesy grits so

00:14:27,140 --> 00:14:32,720
the first thing I do is I take some

00:14:28,820 --> 00:14:34,880
water and some salt and boil it the next

00:14:32,720 --> 00:14:37,160
step which it would kind of zoom out on

00:14:34,880 --> 00:14:39,170
would be okay we're gonna take some

00:14:37,160 --> 00:14:42,650
cornmeal once it's boiled you take some

00:14:39,170 --> 00:14:44,390
cornmeal gradually whisk it in from that

00:14:42,650 --> 00:14:47,180
point you go ahead and reduce the

00:14:44,390 --> 00:14:49,850
temperature to low stir until thickens

00:14:47,180 --> 00:14:52,910
which is about roughly 15 to 20 minutes

00:14:49,850 --> 00:14:55,100
at that point you zoom back out and you

00:14:52,910 --> 00:14:57,740
take off the heat and then you add in

00:14:55,100 --> 00:15:00,740
the parmesan the butter the milk parsley

00:14:57,740 --> 00:15:03,920
you stir it until the cheese and butter

00:15:00,740 --> 00:15:05,240
are melted at that point you go ahead

00:15:03,920 --> 00:15:07,640
and season with salt and pepper

00:15:05,240 --> 00:15:10,610
and you're done so as you can see this

00:15:07,640 --> 00:15:15,050
the structure kind of goes from an

00:15:10,610 --> 00:15:22,190
inward all the way out approach kind of

00:15:15,050 --> 00:15:24,980
a a zoom out approach so what what were

00:15:22,190 --> 00:15:28,130
my MongoDB assumptions heading into this

00:15:24,980 --> 00:15:29,839
because I I wanted to do this but I was

00:15:28,130 --> 00:15:33,440
a little worried about a couple of

00:15:29,839 --> 00:15:35,720
things one is I am I

00:15:33,440 --> 00:15:38,780
gonna get it to a place where it's

00:15:35,720 --> 00:15:41,540
acceptable from a from a performance

00:15:38,780 --> 00:15:45,890
standpoint can I get it to where it

00:15:41,540 --> 00:15:48,500
performs like a relational database are

00:15:45,890 --> 00:15:51,530
the querying how is the querying going

00:15:48,500 --> 00:15:53,690
to be because it seems like you know

00:15:51,530 --> 00:15:55,790
coming from a relational table table

00:15:53,690 --> 00:15:59,060
standpoint I'm familiar with that

00:15:55,790 --> 00:16:02,560
I know join in tables how to do all that

00:15:59,060 --> 00:16:05,080
what what does the Quarian look like so

00:16:02,560 --> 00:16:09,920
let's go ahead and move on to

00:16:05,080 --> 00:16:14,180
implementing this in Perl there's a

00:16:09,920 --> 00:16:16,430
couple of great modules obviously I just

00:16:14,180 --> 00:16:21,350
went ahead and used the default to a DB

00:16:16,430 --> 00:16:23,570
I for the MySQL piece for the DB

00:16:21,350 --> 00:16:26,120
there's just a module called DB

00:16:23,570 --> 00:16:28,940
which makes the purple pearl

00:16:26,120 --> 00:16:32,630
implementation really easy so let's

00:16:28,940 --> 00:16:37,690
let's go ahead and compare the two

00:16:32,630 --> 00:16:37,690
between what it looks like in Perl

00:16:39,850 --> 00:16:49,990
apparently my animations are awesome

00:16:43,000 --> 00:16:52,430
there we go okay so for for the MySQL

00:16:49,990 --> 00:16:55,040
implementation you go ahead and open a

00:16:52,430 --> 00:16:57,170
DVI connection you pass in everything oh

00:16:55,040 --> 00:17:02,240
no I forgot to take out my password

00:16:57,170 --> 00:17:04,310
sorry about that for you you you

00:17:02,240 --> 00:17:06,980
can set up a client which is basically

00:17:04,310 --> 00:17:10,220
the database connection and then like

00:17:06,980 --> 00:17:13,189
the collection was said you can go ahead

00:17:10,220 --> 00:17:17,740
and specify a particular table you can

00:17:13,189 --> 00:17:21,439
also make a direct call to DB

00:17:17,740 --> 00:17:23,360
 collection and just pass it the

00:17:21,439 --> 00:17:25,579
additional collection that you want to

00:17:23,360 --> 00:17:27,920
and get that so you could do it in one

00:17:25,579 --> 00:17:31,430
line I showed it is to to show that the

00:17:27,920 --> 00:17:34,010
distinction so on inserts how do we go

00:17:31,430 --> 00:17:39,230
about doing inserts so we can go ahead

00:17:34,010 --> 00:17:42,440
and do a basic DBH do which is awesome

00:17:39,230 --> 00:17:44,420
but probably or better would be actually

00:17:42,440 --> 00:17:46,210
preparing the statement and passing and

00:17:44,420 --> 00:17:50,380
bind variables

00:17:46,210 --> 00:17:53,409
prevent sequel injection and so for the

00:17:50,380 --> 00:17:55,450
MongoDB it's kind of nice you don't

00:17:53,409 --> 00:17:57,909
really have that whole sequel injection

00:17:55,450 --> 00:17:59,590
piece you've got this data structure as

00:17:57,909 --> 00:18:03,100
you can see I've just got a hash with

00:17:59,590 --> 00:18:06,700
one element called name name and it

00:18:03,100 --> 00:18:08,470
Burton toast and at this point you're

00:18:06,700 --> 00:18:11,740
not really worried about the sequel

00:18:08,470 --> 00:18:14,860
injection I guess the only case would be

00:18:11,740 --> 00:18:17,260
is if you as part of your program we're

00:18:14,860 --> 00:18:19,510
actually iterating over these values and

00:18:17,260 --> 00:18:24,159
maybe doing system calls on them which

00:18:19,510 --> 00:18:27,340
I'd highly suggest you don't against

00:18:24,159 --> 00:18:30,460
data that isn't validated anyway so

00:18:27,340 --> 00:18:32,169
insert that's so it's pretty pretty

00:18:30,460 --> 00:18:33,820
straightforward okay well what about

00:18:32,169 --> 00:18:36,580
crane I was a little bit worried about

00:18:33,820 --> 00:18:39,760
this so I've got I've got my query

00:18:36,580 --> 00:18:43,380
statement I want to grab from recipe

00:18:39,760 --> 00:18:46,240
where they were the names like toast

00:18:43,380 --> 00:18:51,610
that's pretty straightforward and we

00:18:46,240 --> 00:18:54,909
pull out the values in a hash ref so in

00:18:51,610 --> 00:18:58,270
 how do we do that well you build

00:18:54,909 --> 00:19:01,179
it just like the the structure that you

00:18:58,270 --> 00:19:03,279
have so I have name as an element and

00:19:01,179 --> 00:19:06,190
then you can go ahead and pass in a

00:19:03,279 --> 00:19:08,380
regular expression so in this case I

00:19:06,190 --> 00:19:12,250
just want to grab where it's like toast

00:19:08,380 --> 00:19:14,620
and not case-sensitive and then from

00:19:12,250 --> 00:19:16,779
that data object you go ahead and just

00:19:14,620 --> 00:19:20,830
grab the next one which is just like a

00:19:16,779 --> 00:19:27,570
fetch row so that's actually pretty easy

00:19:20,830 --> 00:19:32,770
at this point so so it's time to test

00:19:27,570 --> 00:19:37,240
and I I would like to say at this point

00:19:32,770 --> 00:19:38,830
I that I went ahead and used this but

00:19:37,240 --> 00:19:42,250
I'll be honest I didn't learn about this

00:19:38,830 --> 00:19:45,220
until Monday when David gave that great

00:19:42,250 --> 00:19:47,289
talk on on higher order functions this

00:19:45,220 --> 00:19:48,909
this is a really good talk you should go

00:19:47,289 --> 00:19:53,470
back and see it if you if you didn't

00:19:48,909 --> 00:19:58,440
date a fake really good for making fake

00:19:53,470 --> 00:20:03,030
data I I wanted to create

00:19:58,440 --> 00:20:07,080
fake data and make it plausible so I set

00:20:03,030 --> 00:20:11,280
up some rules for me this is this is the

00:20:07,080 --> 00:20:15,180
module that I created basically I picked

00:20:11,280 --> 00:20:17,580
at random a protein a veggie two spices

00:20:15,180 --> 00:20:21,680
and an action I figured with that I

00:20:17,580 --> 00:20:26,400
could create a fake recipe that sounded

00:20:21,680 --> 00:20:28,230
pretty pretty good and so with that I

00:20:26,400 --> 00:20:32,220
went ahead and generated a hundred

00:20:28,230 --> 00:20:35,940
thousand fake recipes went ahead and

00:20:32,220 --> 00:20:40,530
inserted them both into MySQL and into

00:20:35,940 --> 00:20:45,150
MongoDB and the results were really

00:20:40,530 --> 00:20:48,870
interesting actually so I in fact I

00:20:45,150 --> 00:20:50,970
liked them so much I took the next

00:20:48,870 --> 00:20:55,770
logical step than any person would do

00:20:50,970 --> 00:20:58,710
and I'm starting a restaurant as you can

00:20:55,770 --> 00:21:01,500
see these are these are some very

00:20:58,710 --> 00:21:05,010
interesting recipes that that my

00:21:01,500 --> 00:21:07,500
generator came up with I think my

00:21:05,010 --> 00:21:12,690
favorite is the roasted sea pork with

00:21:07,500 --> 00:21:15,270
guajillo tomatillo but anyway it was

00:21:12,690 --> 00:21:18,450
lots of fun and I realized that playing

00:21:15,270 --> 00:21:20,670
with random data can be lots of fun and

00:21:18,450 --> 00:21:24,360
waste a lot of your time just looking at

00:21:20,670 --> 00:21:28,590
these so anyway this is this was the

00:21:24,360 --> 00:21:31,550
real fun part of my my experiment so

00:21:28,590 --> 00:21:35,390
let's let's go ahead and catch up on the

00:21:31,550 --> 00:21:38,400
actual testing that we're doing here so

00:21:35,390 --> 00:21:40,620
what I wanted to do was I inserted

00:21:38,400 --> 00:21:42,810
around a hundred thousand recipes and

00:21:40,620 --> 00:21:47,400
these were the test scenarios they

00:21:42,810 --> 00:21:49,890
weren't super comprehensive but I wanted

00:21:47,400 --> 00:21:51,990
to just count based on the name so I did

00:21:49,890 --> 00:21:55,140
that similar query to what I did before

00:21:51,990 --> 00:21:59,720
which was grab one of the ingredients

00:21:55,140 --> 00:22:03,000
and say oh how many recipes had this

00:21:59,720 --> 00:22:05,490
ingredient in the name I also did a

00:22:03,000 --> 00:22:08,070
count based on one ingredient so I

00:22:05,490 --> 00:22:10,140
searched the particular ingredient and

00:22:08,070 --> 00:22:12,690
said how many recipes contain this

00:22:10,140 --> 00:22:14,940
ingredient a little bit different

00:22:12,690 --> 00:22:19,950
because of the structure but essentially

00:22:14,940 --> 00:22:23,700
the same then I also did details so I

00:22:19,950 --> 00:22:26,760
pulled out the entire recipe including

00:22:23,700 --> 00:22:28,530
in MySQL I converted it from just a

00:22:26,760 --> 00:22:31,440
bunch of rows which would have been like

00:22:28,530 --> 00:22:33,300
five six rows to the actual data the

00:22:31,440 --> 00:22:36,390
nested data structure that it looks like

00:22:33,300 --> 00:22:37,950
because my end goal would be to hand

00:22:36,390 --> 00:22:44,100
this off to a front end that could

00:22:37,950 --> 00:22:48,450
display like I showed before so the the

00:22:44,100 --> 00:22:50,780
full recipe with parsing to JSON so I

00:22:48,450 --> 00:22:55,650
decided to run this a hundred times

00:22:50,780 --> 00:22:58,920
through this scenario and each and timed

00:22:55,650 --> 00:23:00,870
it and and what I found was was kind of

00:22:58,920 --> 00:23:01,920
interesting and a little bit different

00:23:00,870 --> 00:23:06,420
than what I expected

00:23:01,920 --> 00:23:09,570
so in and as a caveat these both these

00:23:06,420 --> 00:23:12,060
databases were strictly not touched from

00:23:09,570 --> 00:23:14,520
an optimization standpoint I just went

00:23:12,060 --> 00:23:18,480
ahead and created them and added the

00:23:14,520 --> 00:23:23,280
data to it so with with the optimization

00:23:18,480 --> 00:23:25,530
results may vary I guess the count based

00:23:23,280 --> 00:23:30,540
on the name of the recipe Maya school

00:23:25,530 --> 00:23:33,150
was you know quite a bit faster for that

00:23:30,540 --> 00:23:37,230
the the count based on one ingredient

00:23:33,150 --> 00:23:39,630
though blew it away it my school

00:23:37,230 --> 00:23:42,240
almost took twice as much time to come

00:23:39,630 --> 00:23:44,190
back with that and that really I think

00:23:42,240 --> 00:23:48,000
points to the fact that really

00:23:44,190 --> 00:23:51,840
handles data structures that are complex

00:23:48,000 --> 00:23:56,730
a lot better than a relational table

00:23:51,840 --> 00:24:00,540
database would Beit the details based on

00:23:56,730 --> 00:24:04,980
the two ingredients MongoDB was a lot

00:24:00,540 --> 00:24:06,720
faster still I included the details

00:24:04,980 --> 00:24:09,150
because I wanted to see the time it took

00:24:06,720 --> 00:24:12,210
for the conversion of the actual data

00:24:09,150 --> 00:24:16,380
but turns out Pearl's pretty awesome at

00:24:12,210 --> 00:24:20,630
converting data structures and although

00:24:16,380 --> 00:24:24,840
it was kind of a pain to write the the

00:24:20,630 --> 00:24:25,290
the actual conversion from MySQL rose to

00:24:24,840 --> 00:24:29,070
a

00:24:25,290 --> 00:24:33,180
hache took milliseconds to the you know

00:24:29,070 --> 00:24:37,470
tens of seconds of the the query and so

00:24:33,180 --> 00:24:41,300
it was negligible so in the end what

00:24:37,470 --> 00:24:44,730
what did I learn out of all of this so

00:24:41,300 --> 00:24:49,290
MongoDB wasn't wasn't up to my

00:24:44,730 --> 00:24:53,580
assumptions it's not that hard to set up

00:24:49,290 --> 00:24:56,130
and learn I I was able to just go ahead

00:24:53,580 --> 00:24:58,790
and do a quick install of I was up

00:24:56,130 --> 00:25:04,290
and running in just a couple of minutes

00:24:58,790 --> 00:25:09,770
doing a Sipan inst install on I

00:25:04,290 --> 00:25:13,590
got got set up immediately and the the

00:25:09,770 --> 00:25:17,100
interface with the database was

00:25:13,590 --> 00:25:18,260
was actually really nice it was better

00:25:17,100 --> 00:25:20,970
than I expected

00:25:18,260 --> 00:25:23,550
it was actually pretty quick and it

00:25:20,970 --> 00:25:26,190
really handled the complex ish data

00:25:23,550 --> 00:25:29,670
structure that I worked with albeit

00:25:26,190 --> 00:25:32,520
wasn't super complex but it was complex

00:25:29,670 --> 00:25:36,150
enough to show kind of its its strengths

00:25:32,520 --> 00:25:41,460
for that I also learned that randomness

00:25:36,150 --> 00:25:44,460
can be actually quite fun and it it it's

00:25:41,460 --> 00:25:47,730
fun to just explore things and I think

00:25:44,460 --> 00:25:49,830
one of the things that we take for

00:25:47,730 --> 00:25:52,100
granted sometimes as programmers is

00:25:49,830 --> 00:25:54,990
finding fun in the work that we do

00:25:52,100 --> 00:25:57,060
making something enjoyable so that it

00:25:54,990 --> 00:26:02,580
you know that we want to continue to

00:25:57,060 --> 00:26:04,620
work the other thing is - maybe I should

00:26:02,580 --> 00:26:09,720
search on Sipan before I start to build

00:26:04,620 --> 00:26:12,660
something data fake and if you have a

00:26:09,720 --> 00:26:14,370
project in mind getting it accepted for

00:26:12,660 --> 00:26:17,850
a conference is great motivation for

00:26:14,370 --> 00:26:19,350
working on it I had this idea for a

00:26:17,850 --> 00:26:21,630
couple of years and just didn't really

00:26:19,350 --> 00:26:23,130
get around to it talked about it with a

00:26:21,630 --> 00:26:28,440
co-worker and he said hey you should

00:26:23,130 --> 00:26:31,590
submit it for a talk it tpc and so I did

00:26:28,440 --> 00:26:35,550
and got accepted and so that was my

00:26:31,590 --> 00:26:37,610
motivating factor and presenting at TPC

00:26:35,550 --> 00:26:41,690
has been a serial experience

00:26:37,610 --> 00:27:00,230
and I thank you all for coming are there

00:26:41,690 --> 00:27:02,170
any questions about yes yeah is Sipan

00:27:00,230 --> 00:27:05,620
did have to install a couple of

00:27:02,170 --> 00:27:09,710
dependencies but it handled it just fine

00:27:05,620 --> 00:27:12,669
yeah it literally the MongoDB Sipan

00:27:09,710 --> 00:27:16,820
module took maybe a minute to install

00:27:12,669 --> 00:27:19,010
MongoDB itself ran I just had to run in

00:27:16,820 --> 00:27:22,190
a separate terminal the MongoDB and then

00:27:19,010 --> 00:27:25,660
the I was able to command line to it

00:27:22,190 --> 00:27:31,130
instantly there was no issues connecting

00:27:25,660 --> 00:27:33,230
localhost or anything like that so I I'm

00:27:31,130 --> 00:27:41,000
a key so that that that was my

00:27:33,230 --> 00:27:43,660
experience with it so yeah yes I'll keep

00:27:41,000 --> 00:27:43,660
going back

00:27:57,730 --> 00:28:04,940
just the recipe yeah so and and that's

00:28:02,090 --> 00:28:08,210
that's probably why it was faster just

00:28:04,940 --> 00:28:10,220
from the standpoint of you had the maybe

00:28:08,210 --> 00:28:14,960
the three data elements versus the whole

00:28:10,220 --> 00:28:22,420
structure within that that that

00:28:14,960 --> 00:28:22,420
that would be my guess towards that yeah

00:28:30,430 --> 00:28:37,300
well technically they were both doing

00:28:33,940 --> 00:28:41,740
that right you were doing a like and in

00:28:37,300 --> 00:28:44,920
MySQL it was both they it was

00:28:41,740 --> 00:28:47,260
case-insensitive as well I would think

00:28:44,920 --> 00:28:56,380
that it would be pretty pretty much the

00:28:47,260 --> 00:29:00,070
same so yeah right like I said I didn't

00:28:56,380 --> 00:29:01,960
index anything at this point I was

00:29:00,070 --> 00:29:04,900
planning to go that route and kind of

00:29:01,960 --> 00:29:11,110
show that but yeah it just ran out of

00:29:04,900 --> 00:29:14,590
time I I realized I realized that I'm

00:29:11,110 --> 00:29:17,710
not the the the point of this wasn't

00:29:14,590 --> 00:29:20,350
necessarily to say is so amazing

00:29:17,710 --> 00:29:23,980
and it's so much better than MySQL the

00:29:20,350 --> 00:29:26,050
point was hey seems to be able to

00:29:23,980 --> 00:29:28,750
hold its own when especially when

00:29:26,050 --> 00:29:31,750
talking about complex data structures I

00:29:28,750 --> 00:29:34,480
have no I have no ball in the fight I

00:29:31,750 --> 00:29:37,180
mean I use MySQL every day and will

00:29:34,480 --> 00:29:39,760
continue use MySQL every day but it has

00:29:37,180 --> 00:29:41,830
opened my eyes to using a document

00:29:39,760 --> 00:29:46,380
storage like for especially

00:29:41,830 --> 00:29:46,380
complex structures yeah

00:29:47,419 --> 00:29:52,899
yes there is indexes that you can create

00:29:50,299 --> 00:29:52,899
on Lanka

00:30:08,180 --> 00:30:13,849
yeah

00:30:10,830 --> 00:30:13,849
[Music]

00:30:20,899 --> 00:30:26,929
the impress the question was why why did

00:30:23,869 --> 00:30:32,149
I think that was possibly going to

00:30:26,929 --> 00:30:38,269
be slower and and the reasons for that

00:30:32,149 --> 00:30:41,090
were a couple the the the table the

00:30:38,269 --> 00:30:42,979
being able to pull in just the data that

00:30:41,090 --> 00:30:46,539
you needed versus having the whole

00:30:42,979 --> 00:30:49,309
document there as well as the whole

00:30:46,539 --> 00:30:53,179
nested be able to query within the

00:30:49,309 --> 00:30:56,269
nesting was was something that I was

00:30:53,179 --> 00:30:59,539
unsure of how would handle and so

00:30:56,269 --> 00:31:01,970
it it most mostly comes down to just

00:30:59,539 --> 00:31:04,479
lack of familiarity as to why I made

00:31:01,970 --> 00:31:04,479
that assumption

00:31:16,150 --> 00:31:24,540
I used I used a couple of things I I was

00:31:19,450 --> 00:31:28,660
having some issues with with how it was

00:31:24,540 --> 00:31:31,570
determined I I was using NYP broth for

00:31:28,660 --> 00:31:34,300
for some of it but based on how I wrote

00:31:31,570 --> 00:31:37,650
my code it wasn't completely clear how

00:31:34,300 --> 00:31:42,100
that was so in the end I just ended up

00:31:37,650 --> 00:31:45,690
running through these iterations just by

00:31:42,100 --> 00:31:45,690
timing them with high res

00:31:59,030 --> 00:32:01,540
where

00:32:04,650 --> 00:32:10,890
it was it was basically the one run yeah

00:32:07,860 --> 00:32:16,620
III didn't have the time to do it to

00:32:10,890 --> 00:32:23,100
scale it up alright

00:32:16,620 --> 00:32:27,710
I didn't look at that actually so I that

00:32:23,100 --> 00:32:27,710
that would be good to know yeah

00:32:54,110 --> 00:33:03,820
yeah a great now mark

00:33:11,200 --> 00:33:24,630
whatever is the latest that was was on

00:33:16,090 --> 00:33:24,630
see again I I don't

00:33:41,520 --> 00:33:44,820
no I

00:33:57,190 --> 00:34:00,190
yeah

00:34:00,880 --> 00:34:10,510
all right well thank you so much for for

00:34:06,110 --> 00:34:10,510
being here and enjoy the rest of DPC

00:34:11,179 --> 00:34:13,369

YouTube URL: https://www.youtube.com/watch?v=hNJ2KUdK7dI


