Title: Jeffrey Goff - "Reduce, Reuse, Recycle – Parsing in Perl 6"
Publication date: 2018-06-20
Playlist: TPC 2018 in SLC
Description: 
	Regular expressions are powerful beasts, but with that power comes a reputation for being hard-to-read. Perl 6, with its long pedigree in REs, bucks that trend. We’ll start by demonstrating some easy examples of regular expressions in Perl 6, and by the end of the talk build up easy-to-read examples that other modern regular expression engines can’t handle, including validating JSON files.
Captions: 
	00:00:00,000 --> 00:00:04,470
sorry but about the technical

00:00:01,949 --> 00:00:07,890
difficulties yes and oh it's a very

00:00:04,470 --> 00:00:09,559
ancient laptop and you with HDMI doesn't

00:00:07,890 --> 00:00:13,860
play well with it aside

00:00:09,559 --> 00:00:15,030
probably you know I okay my name for

00:00:13,860 --> 00:00:15,389
those of you that aren't familiar with

00:00:15,030 --> 00:00:18,900
me

00:00:15,389 --> 00:00:22,619
Jeff Goff I am currently thanks

00:00:18,900 --> 00:00:26,630
hopefully working for UK to over in

00:00:22,619 --> 00:00:30,179
London so it's been a long long flight

00:00:26,630 --> 00:00:32,219
actually three of them Prague over to

00:00:30,179 --> 00:00:35,579
Prague over to me and a coverage to

00:00:32,219 --> 00:00:38,160
Missoula is staying there in fact but

00:00:35,579 --> 00:00:43,200
enough about me you're being arrested to

00:00:38,160 --> 00:00:45,780
talk the first thing if you were if any

00:00:43,200 --> 00:00:50,100
of you were at London Duff p.m. or no my

00:00:45,780 --> 00:00:51,539
personal no my personal taste you might

00:00:50,100 --> 00:00:55,079
expect this to have something about

00:00:51,539 --> 00:00:57,480
origami hint that's an accident by late

00:00:55,079 --> 00:00:58,020
just to make things clear that is a

00:00:57,480 --> 00:01:04,549
Cobra

00:00:58,020 --> 00:01:08,100
not a Python dossier that out of the way

00:01:04,549 --> 00:01:10,560
but and I will also mention that we have

00:01:08,100 --> 00:01:12,630
an origami buff coming up this coming up

00:01:10,560 --> 00:01:15,299
on listening don't worry we won't do

00:01:12,630 --> 00:01:17,670
that one although I have a few that are

00:01:15,299 --> 00:01:19,549
common are fairly complex I've been

00:01:17,670 --> 00:01:21,990
doing this sort of stuff for years and

00:01:19,549 --> 00:01:23,700
someone is I'm proud to say are

00:01:21,990 --> 00:01:27,390
releasing a programming language for

00:01:23,700 --> 00:01:30,920
origami on the 22nd which is unfortunate

00:01:27,390 --> 00:01:34,140
after the ball bad timing on their part

00:01:30,920 --> 00:01:39,869
but that's not what this is about this

00:01:34,140 --> 00:01:42,540
is kind of all about me because I have a

00:01:39,869 --> 00:01:44,700
little dark secret I tend to be somewhat

00:01:42,540 --> 00:01:46,350
of an awful person my announcement

00:01:44,700 --> 00:01:48,720
aspect I'm pronouncing that specifically

00:01:46,350 --> 00:01:51,020
because I don't mean awful the sense of

00:01:48,720 --> 00:01:53,430
bad although I'm sure people out there

00:01:51,020 --> 00:01:56,700
in the proa community and others would

00:01:53,430 --> 00:02:03,479
disagree I mean is this of an adult fan

00:01:56,700 --> 00:02:05,939
of Lego AF o L like these things this is

00:02:03,479 --> 00:02:09,119
what's known as a my own creation this

00:02:05,939 --> 00:02:11,780
appears in that one set yes just what

00:02:09,119 --> 00:02:11,780
someone put together

00:02:12,370 --> 00:02:16,810
one of the problems being a pup being an

00:02:13,720 --> 00:02:19,209
expat is that your regular collection

00:02:16,810 --> 00:02:21,519
tends to be in someone you tends to be

00:02:19,209 --> 00:02:24,540
somewhere else when you're moving around

00:02:21,519 --> 00:02:26,379
and if you're like me and I know I am

00:02:24,540 --> 00:02:27,819
you've got a lot

00:02:26,379 --> 00:02:29,950
you've got like three or four sets

00:02:27,819 --> 00:02:33,910
hiding somewhere in a storage locker in

00:02:29,950 --> 00:02:38,950
my case one is in Prague and one is all

00:02:33,910 --> 00:02:41,349
the way in San Francisco so this so I'm

00:02:38,950 --> 00:02:45,310
kind of reduced to building little

00:02:41,349 --> 00:02:49,060
things like this when you really want to

00:02:45,310 --> 00:02:49,950
be building something like that that is

00:02:49,060 --> 00:02:52,690
a real model

00:02:49,950 --> 00:02:55,900
I've actually seen that person that is

00:02:52,690 --> 00:02:58,209
Saint Pancras station in London render

00:02:55,900 --> 00:03:01,569
it down the point of individual love the

00:02:58,209 --> 00:03:03,970
train track their works there are people

00:03:01,569 --> 00:03:09,010
standing on platform waiting as usual

00:03:03,970 --> 00:03:12,730
for trains but when the problems there

00:03:09,010 --> 00:03:15,519
too is that that's a lot of pieces a lot

00:03:12,730 --> 00:03:17,170
of virtual a lot of a lot of bricks and

00:03:15,519 --> 00:03:22,120
as all of us know

00:03:17,170 --> 00:03:24,750
Lego ain't cheap so a good way to so a

00:03:22,120 --> 00:03:27,819
good way to build with this stuff is

00:03:24,750 --> 00:03:30,910
doing it virtually in this case with a a

00:03:27,819 --> 00:03:33,880
fairly old but stable and well-worn

00:03:30,910 --> 00:03:40,660
program called ml CAD as you see by

00:03:33,880 --> 00:03:42,639
title now ml cat is not that fancy it

00:03:40,660 --> 00:03:45,459
just uses a simple flat file format

00:03:42,639 --> 00:03:49,630
which we are going to layer on parse out

00:03:45,459 --> 00:03:53,019
with Perl 5 and Perl 6 as we go through

00:03:49,630 --> 00:03:56,980
talk in Section 13 over there you will

00:03:53,019 --> 00:03:59,400
see there is just a long does a single

00:03:56,980 --> 00:04:03,190
line of text for each brick in the model

00:03:59,400 --> 00:04:05,769
yes got the type which is a part is it a

00:04:03,190 --> 00:04:09,910
part or is it a rubber wheel or is a

00:04:05,769 --> 00:04:13,810
steel miss got a colour in Escott and

00:04:09,910 --> 00:04:16,720
XYZ position and that's really all that

00:04:13,810 --> 00:04:20,320
we need to worry about here for purposes

00:04:16,720 --> 00:04:22,690
of the talk that was the cold open so

00:04:20,320 --> 00:04:24,039
let's take a look so let's go briefly

00:04:22,690 --> 00:04:26,100
over the resources that we're going to

00:04:24,039 --> 00:04:27,870
cover that you would need to know

00:04:26,100 --> 00:04:31,710
a little bit about the first one being

00:04:27,870 --> 00:04:34,470
Ranbir double : common in Perl 6 I found

00:04:31,710 --> 00:04:36,960
that reg X's and grammars really are

00:04:34,470 --> 00:04:39,450
pretty much the same thing they can show

00:04:36,960 --> 00:04:41,610
you to each other and I can be is termed

00:04:39,450 --> 00:04:43,110
grammar and reg I occasionally

00:04:41,610 --> 00:04:44,330
throughout the talk and I apologize for

00:04:43,110 --> 00:04:46,560
that

00:04:44,330 --> 00:04:48,930
the second thing you wouldn't even eat

00:04:46,560 --> 00:04:52,470
know of course is Perl 6 for all 6

00:04:48,930 --> 00:04:55,760
awkward and if you have your laptop open

00:04:52,470 --> 00:04:58,710
you follow along with us on the

00:04:55,760 --> 00:05:02,010
regulations page from dr. Ola 6 to

00:04:58,710 --> 00:05:05,640
Oregon where we'll go through just a

00:05:02,010 --> 00:05:08,370
very few just say very few things on

00:05:05,640 --> 00:05:10,890
that page and an additional bonus

00:05:08,370 --> 00:05:14,430
section here if we have time on grammars

00:05:10,890 --> 00:05:17,310
and of course the last thing is the MLK

00:05:14,430 --> 00:05:20,580
format which has evolved over the years

00:05:17,310 --> 00:05:25,050
and I haven't used it accessibly but I

00:05:20,580 --> 00:05:26,850
worked but I play around with it so just

00:05:25,050 --> 00:05:30,930
to review what we saw on the previous

00:05:26,850 --> 00:05:34,110
page we have a simple format it consists

00:05:30,930 --> 00:05:40,200
of an XY is then I've been in your in

00:05:34,110 --> 00:05:42,960
your pool on the part name which is just

00:05:40,200 --> 00:05:45,240
a data file for the rendering for the

00:05:42,960 --> 00:05:46,710
part and a color in this case you'll

00:05:45,240 --> 00:05:49,530
notice that yes in folks because they

00:05:46,710 --> 00:05:53,220
use the Crayola coloring scheme which

00:05:49,530 --> 00:05:56,460
has spaces for names the world gives

00:05:53,220 --> 00:05:59,010
them a few minutes so if you want to you

00:05:56,460 --> 00:06:00,450
parse this in Perl 5 yes a simple

00:05:59,010 --> 00:06:02,070
suppression is right dad

00:06:00,450 --> 00:06:05,570
everyone here probably knows how to do

00:06:02,070 --> 00:06:09,960
that no big deal no problem whatsoever

00:06:05,570 --> 00:06:12,080
asari from the /w plus over there we

00:06:09,960 --> 00:06:14,520
really should have white space as well

00:06:12,080 --> 00:06:17,460
it don't change but everyone here should

00:06:14,520 --> 00:06:19,890
know how to do that thought the thing is

00:06:17,460 --> 00:06:23,100
it's not exactly the most vegetable

00:06:19,890 --> 00:06:25,290
format in the world it's not by any

00:06:23,100 --> 00:06:27,890
means yourself it's not by any means

00:06:25,290 --> 00:06:30,330
self-documenting you just say for it is

00:06:27,890 --> 00:06:34,110
you can't tell that you're trying to

00:06:30,330 --> 00:06:37,140
pull out an X or Y & Z you're trying

00:06:34,110 --> 00:06:39,000
pull out f / D a / d in a / Dean who

00:06:37,140 --> 00:06:39,810
knows what they are there are three

00:06:39,000 --> 00:06:42,419
numbers involved

00:06:39,810 --> 00:06:43,880
could be they could be horrible elements

00:06:42,419 --> 00:06:46,440
for sale life they could you know they

00:06:43,880 --> 00:06:51,210
could be a lycium zip codes for all we

00:06:46,440 --> 00:06:52,919
know now of course you spread out a

00:06:51,210 --> 00:06:55,830
little bit it tends to run out the

00:06:52,919 --> 00:06:58,620
screen a little bit as well about that

00:06:55,830 --> 00:06:59,940
but that's intentional actually you can

00:06:58,620 --> 00:07:03,419
spaced out a little bit with the slash

00:06:59,940 --> 00:07:05,370
next mouth fire in apparel five and it's

00:07:03,419 --> 00:07:08,100
facing out even a little bit more and

00:07:05,370 --> 00:07:12,780
this way until you have a slash D you

00:07:08,100 --> 00:07:16,229
have three / DS and row a slash W but

00:07:12,780 --> 00:07:18,780
you stels won't tell you what it is the

00:07:16,229 --> 00:07:21,090
slash next modifier also lets you go in

00:07:18,780 --> 00:07:22,880
and add comments so you can make it even

00:07:21,090 --> 00:07:25,620
more self you know more self documenting

00:07:22,880 --> 00:07:27,990
with comments like this yeah would

00:07:25,620 --> 00:07:30,870
actually have a while you have Z an ID

00:07:27,990 --> 00:07:34,080
and color all in comments that's great

00:07:30,870 --> 00:07:35,810
that's that's just not Beach mmm excuse

00:07:34,080 --> 00:07:39,630
me

00:07:35,810 --> 00:07:43,590
now thankfully I don't know how many of

00:07:39,630 --> 00:07:46,470
you have used the name capture feature

00:07:43,590 --> 00:07:47,160
in Perl I know I only hadn't until Larry

00:07:46,470 --> 00:07:49,530
mentioned it

00:07:47,160 --> 00:07:52,560
I'm sorry until a Damian mentioned this

00:07:49,530 --> 00:07:55,229
at the at the Amsterdam convention last

00:07:52,560 --> 00:08:00,030
year I had completely forgotten that

00:07:55,229 --> 00:08:04,770
this existed until then parole parole

00:08:00,030 --> 00:08:06,270
sex has somewhat safe feature but we

00:08:04,770 --> 00:08:08,190
just were trimmed that down a little

00:08:06,270 --> 00:08:10,260
ways and make it a little bit more self

00:08:08,190 --> 00:08:13,889
documenting you see here we have a

00:08:10,260 --> 00:08:17,010
number so now we know that the X that X

00:08:13,889 --> 00:08:20,220
Y is the are numbers and awesome weird

00:08:17,010 --> 00:08:23,310
fix for methane and we have a horse down

00:08:20,220 --> 00:08:25,350
there and identifier where copiously

00:08:23,310 --> 00:08:29,520
identifier a cubby string we're not

00:08:25,350 --> 00:08:32,270
quite yet sure but we help that too so

00:08:29,520 --> 00:08:35,940
this is how you could parse that in 405

00:08:32,270 --> 00:08:39,950
law detail and you have numbers you can

00:08:35,940 --> 00:08:39,950
tell what it is a little bit more

00:08:40,280 --> 00:08:46,490
and you'd even use because of name

00:08:42,890 --> 00:08:49,850
kafirs you can even use the Uni you see

00:08:46,490 --> 00:08:51,920
percent plus array which probably very

00:08:49,850 --> 00:08:55,400
few well this crowd most of you already

00:08:51,920 --> 00:08:58,040
know that percent plus was this in other

00:08:55,400 --> 00:08:59,890
crowds I've gone stared like does that

00:08:58,040 --> 00:09:03,890
really work

00:08:59,890 --> 00:09:05,300
yes it does so that that's where you

00:09:03,890 --> 00:09:09,910
store the name that's where you store

00:09:05,300 --> 00:09:13,220
the name counter feels in Perl 5 so

00:09:09,910 --> 00:09:16,250
let's change this up just a little bit

00:09:13,220 --> 00:09:19,160
and now use the grammar common module

00:09:16,250 --> 00:09:19,610
from Perl 6 which is already on the echo

00:09:19,160 --> 00:09:24,440
system

00:09:19,610 --> 00:09:27,830
I have a lot I have a lot of new ideas

00:09:24,440 --> 00:09:30,350
for that life and fortunately in fruited

00:09:27,830 --> 00:09:31,910
at just before convention and forced me

00:09:30,350 --> 00:09:34,550
to leave so I haven't had a chance to

00:09:31,910 --> 00:09:36,110
really do a lot of the work I went to

00:09:34,550 --> 00:09:37,270
with it but I'll show you some of what I

00:09:36,110 --> 00:09:39,890
can do

00:09:37,270 --> 00:09:42,890
the first thing we didn't deal here is

00:09:39,890 --> 00:09:44,870
get rid of the slash d+ because we don't

00:09:42,890 --> 00:09:46,940
need to worry about what a number

00:09:44,870 --> 00:09:50,110
definition is the marshal takes care

00:09:46,940 --> 00:09:53,620
that for you and in fact if you look at

00:09:50,110 --> 00:09:56,839
some of them I was coming up and the

00:09:53,620 --> 00:09:59,180
thing of the st. Pancras display some of

00:09:56,839 --> 00:10:00,680
those might not fit into integer

00:09:59,180 --> 00:10:05,089
coordinates when you're doing your

00:10:00,680 --> 00:10:07,790
design so you might need flood plain you

00:10:05,089 --> 00:10:09,380
might need exponential and the number

00:10:07,790 --> 00:10:10,730
here covers all those formats

00:10:09,380 --> 00:10:12,470
it covers floating point it covers

00:10:10,730 --> 00:10:16,010
exponential numbers occur with

00:10:12,470 --> 00:10:17,810
scientific notation max'll all that

00:10:16,010 --> 00:10:24,320
stuff and I see a lizard checking up on

00:10:17,810 --> 00:10:26,600
me right now so next thing so we have a

00:10:24,320 --> 00:10:28,790
number here where she pulling from the

00:10:26,600 --> 00:10:30,680
grammar column walking is a fine there

00:10:28,790 --> 00:10:34,730
you don't need to worry about what it is

00:10:30,680 --> 00:10:35,390
it just worse and by the way it also

00:10:34,730 --> 00:10:38,540
handles

00:10:35,390 --> 00:10:41,270
aside from decimal it also handles

00:10:38,540 --> 00:10:43,400
binary hex and there will be exceptions

00:10:41,270 --> 00:10:45,550
later on for other formats as I find

00:10:43,400 --> 00:10:45,550
them

00:10:47,579 --> 00:10:53,740
so we have so now we we also we can also

00:10:50,829 --> 00:10:56,100
get rid of the cap rotation because

00:10:53,740 --> 00:10:57,939
anything inside the l-brackets is

00:10:56,100 --> 00:11:01,990
automatically a term that you can

00:10:57,939 --> 00:11:05,769
capture as part of a match the last

00:11:01,990 --> 00:11:08,679
thing that we change to fresh balls down

00:11:05,769 --> 00:11:12,249
from Perl 5 to a Perl 6 has changed from

00:11:08,679 --> 00:11:14,980
dollar plus to the more to the multitude

00:11:12,249 --> 00:11:18,389
of dollar slash this being forced a new

00:11:14,980 --> 00:11:22,149
mnemonic because like in Perl 5 you have

00:11:18,389 --> 00:11:26,129
you have dollar bracket you got door 4 /

00:11:22,149 --> 00:11:28,720
yet door back / that's there rip Perl 6

00:11:26,129 --> 00:11:31,389
trims that down I think there may be six

00:11:28,720 --> 00:11:34,240
variables like that now I'm sure someone

00:11:31,389 --> 00:11:38,709
will contradict me out there but dollar

00:11:34,240 --> 00:11:42,759
/ is the mark for the / operator so that

00:11:38,709 --> 00:11:46,480
is you match the current match so when

00:11:42,759 --> 00:11:49,990
you match a string here I'm ignoring

00:11:46,480 --> 00:11:53,559
that the actual spring when you match a

00:11:49,990 --> 00:11:55,540
string against you when you try to match

00:11:53,559 --> 00:11:58,449
a string against an expression you get

00:11:55,540 --> 00:12:06,459
back a match object which is the dollar

00:11:58,449 --> 00:12:07,929
/ code so / / / / makes life simple and

00:12:06,459 --> 00:12:09,220
you also use the same notation that

00:12:07,929 --> 00:12:12,009
you're all familiar with in Perl 5

00:12:09,220 --> 00:12:14,139
dollar / brace and then the name of what

00:12:12,009 --> 00:12:17,920
you trying to match these steel posts

00:12:14,139 --> 00:12:22,300
are no longer optional but there's way

00:12:17,920 --> 00:12:26,829
around that - so we're trying to match

00:12:22,300 --> 00:12:30,579
say the final match say a string from a

00:12:26,829 --> 00:12:35,290
grammar common we have these free try

00:12:30,579 --> 00:12:38,290
and match the spring blue now you might

00:12:35,290 --> 00:12:41,529
notice here that the closer are around

00:12:38,290 --> 00:12:43,990
their underline you might not once does

00:12:41,529 --> 00:12:46,329
around so of course what you want to do

00:12:43,990 --> 00:12:51,160
there obviously yes you want to run that

00:12:46,329 --> 00:12:55,480
fruit line on the badge but but there is

00:12:51,160 --> 00:12:57,730
another feature in Perl 6 because like

00:12:55,480 --> 00:13:01,300
we have like Perl 5 a structures you can

00:12:57,730 --> 00:13:06,160
nest hashes in Perl 6 so inside of the

00:13:01,300 --> 00:13:09,009
spring here there is a nested match it's

00:13:06,160 --> 00:13:10,600
like that called the content so if you

00:13:09,009 --> 00:13:12,490
don't want the double quotes or seal

00:13:10,600 --> 00:13:17,079
floats you don't care about whether it's

00:13:12,490 --> 00:13:18,730
cute hue or hue / 4 q q WQ curly brace

00:13:17,079 --> 00:13:22,269
you don't care about that all you care

00:13:18,730 --> 00:13:24,850
about was inside you use the contents or

00:13:22,269 --> 00:13:26,639
spring - content as well if you don't

00:13:24,850 --> 00:13:31,899
want to have a second couple of matches

00:13:26,639 --> 00:13:34,329
so what you see here as well is that the

00:13:31,899 --> 00:13:37,300
match option is that the match market is

00:13:34,329 --> 00:13:40,660
just another data structure yeh can be a

00:13:37,300 --> 00:13:43,959
its convener and rain it could be a hash

00:13:40,660 --> 00:13:45,879
a Nessa hash with data structures all

00:13:43,959 --> 00:13:48,699
the way down Turtles all the way down so

00:13:45,879 --> 00:13:50,769
to speak you have well the University

00:13:48,699 --> 00:13:58,269
and that is going first is slowing down

00:13:50,769 --> 00:14:01,809
on me - where they put that higher so

00:13:58,269 --> 00:14:05,679
you you have the ability to do a nested

00:14:01,809 --> 00:14:07,990
hash and later on at the very end of

00:14:05,679 --> 00:14:14,620
these at the end we'll show you how to

00:14:07,990 --> 00:14:24,220
make full use of that now we talked

00:14:14,620 --> 00:14:25,929
earlier about how things are we talked

00:14:24,220 --> 00:14:30,129
earlier about how we want to make these

00:14:25,929 --> 00:14:31,389
a little bit more self documenting so in

00:14:30,129 --> 00:14:36,220
this case what we're going to do is

00:14:31,389 --> 00:14:39,910
rename rename our match so we have our

00:14:36,220 --> 00:14:42,370
string here is quotes blue one quotes

00:14:39,910 --> 00:14:45,220
and we want to rename that from Michener

00:14:42,370 --> 00:14:46,600
string to the work hard this is

00:14:45,220 --> 00:14:48,850
something that you really can't easily

00:14:46,600 --> 00:14:55,990
do inside Perl 5

00:14:48,850 --> 00:15:00,249
we're in little more advanced now so in

00:14:55,990 --> 00:15:03,189
our example we have we have an x y&z

00:15:00,249 --> 00:15:07,299
coordinate and now we can name those as

00:15:03,189 --> 00:15:08,950
x y&z so that when we match our string

00:15:07,299 --> 00:15:16,120
we have a nested

00:15:08,950 --> 00:15:17,380
yes misted nest of hashes so we have

00:15:16,120 --> 00:15:20,350
national data structures there to work

00:15:17,380 --> 00:15:24,670
with a nested a structure instead of

00:15:20,350 --> 00:15:27,070
having to use dollar zero dollar one AB

00:15:24,670 --> 00:15:29,380
plus AB minus to go through and try to

00:15:27,070 --> 00:15:31,690
parse out where these are really goes

00:15:29,380 --> 00:15:34,360
through count parentheses as we all know

00:15:31,690 --> 00:15:39,130
and love in Perl 5 you simply use the

00:15:34,360 --> 00:15:41,649
actual name self boyfriend match and u2

00:15:39,130 --> 00:15:44,320
to create these things such as number

00:15:41,649 --> 00:15:47,130
keywords as string keywords you freeze

00:15:44,320 --> 00:15:52,839
those as well and use them in your own

00:15:47,130 --> 00:15:57,240
expressions which may say the in deep by

00:15:52,839 --> 00:16:01,990
now infamous RFC matching for email

00:15:57,240 --> 00:16:04,990
about I think I've seen you do it in

00:16:01,990 --> 00:16:09,959
size of the original PMF because this

00:16:04,990 --> 00:16:09,959
notation looks like PMF for a reason

00:16:10,079 --> 00:16:16,089
because it really is a this is in fact

00:16:13,690 --> 00:16:17,500
we've been lying just a little bit and

00:16:16,089 --> 00:16:19,570
that's why the modules call a grammar

00:16:17,500 --> 00:16:23,140
come and not reg ice coming because

00:16:19,570 --> 00:16:24,940
these are really grammars you know take

00:16:23,140 --> 00:16:27,820
the spring and you can use the same

00:16:24,940 --> 00:16:32,829
techniques that you would to create a

00:16:27,820 --> 00:16:36,010
compiler to apply to your rigors so what

00:16:32,829 --> 00:16:38,260
we're doing here with the label with the

00:16:36,010 --> 00:16:40,690
labeled hashes the labeled keywords

00:16:38,260 --> 00:16:44,140
we're creating a actual data structure

00:16:40,690 --> 00:16:46,360
of our match instead of having to fill

00:16:44,140 --> 00:16:48,490
around trying to figure out what you

00:16:46,360 --> 00:16:50,320
know what dollar zero is and if dollars

00:16:48,490 --> 00:16:52,120
euros blank we have to use donor 1 if

00:16:50,320 --> 00:16:54,880
dollar ones point then we have to use

00:16:52,120 --> 00:16:56,260
star two or dollar three all those

00:16:54,880 --> 00:16:58,390
little things that you have to have to

00:16:56,260 --> 00:17:00,310
do them right now in Perl 5 to figure

00:16:58,390 --> 00:17:06,640
out where your data is even after you've

00:17:00,310 --> 00:17:08,740
gone through and done the match and by

00:17:06,640 --> 00:17:12,760
the way you'll notice as well the minus

00:17:08,740 --> 00:17:15,610
sign works so negative numbers match as

00:17:12,760 --> 00:17:17,439
well as positive numbers along I think I

00:17:15,610 --> 00:17:20,709
got into point where it does complex as

00:17:17,439 --> 00:17:22,689
well I'm so attempt to a quite hurry and

00:17:20,709 --> 00:17:31,029
are tone Ian but desk

00:17:22,689 --> 00:17:35,080
I'm a math geek now I just we talked

00:17:31,029 --> 00:17:38,190
before about how about how you're

00:17:35,080 --> 00:17:40,929
wrapping everything into a number and

00:17:38,190 --> 00:17:42,999
this design is a little bit complex as

00:17:40,929 --> 00:17:46,869
you might have guessed this this is a

00:17:42,999 --> 00:17:49,299
Lego this is a great ball contraption

00:17:46,869 --> 00:17:52,239
fiends its only purpose in life is to

00:17:49,299 --> 00:17:54,879
pick up eight ball from one end and move

00:17:52,239 --> 00:17:58,179
it to the other via the most bizarre way

00:17:54,879 --> 00:18:00,669
possible and this Japanese designer occu

00:17:58,179 --> 00:18:03,999
key is this name and you go on to his

00:18:00,669 --> 00:18:09,639
YouTube site and see more of these

00:18:03,999 --> 00:18:10,809
things designs these things for fun but

00:18:09,639 --> 00:18:13,029
you'll notice that some of those pieces

00:18:10,809 --> 00:18:15,580
don't usually don't quite fit into the

00:18:13,029 --> 00:18:17,349
XYZ coordinates you have angle pieces

00:18:15,580 --> 00:18:18,729
you have pieces that hang them up and

00:18:17,349 --> 00:18:21,789
down you have pieces that move around

00:18:18,729 --> 00:18:25,359
around so if you were to use your

00:18:21,789 --> 00:18:27,519
original to match with /d that thing

00:18:25,359 --> 00:18:29,559
would break it you're probably won't

00:18:27,519 --> 00:18:31,419
breaking in more ways than one but it

00:18:29,559 --> 00:18:34,210
will break it because obviously you have

00:18:31,419 --> 00:18:36,609
floating point numbers and because you

00:18:34,210 --> 00:18:41,229
can use grandma common you no longer

00:18:36,609 --> 00:18:43,239
have to worry about that so let's take a

00:18:41,229 --> 00:18:46,090
look at little a little simpler model

00:18:43,239 --> 00:18:50,919
here this is of course a strand of DNA

00:18:46,090 --> 00:18:53,229
in Lego format and one things that you

00:18:50,919 --> 00:18:57,970
might does here is that it has all diem

00:18:53,229 --> 00:18:59,409
all neighing phosphate groups over here

00:18:57,970 --> 00:19:01,929
I'm sure you'd be I'll go into a lot

00:18:59,409 --> 00:19:05,249
more detail the all Mae phosphate groups

00:19:01,929 --> 00:19:08,529
of red and yellow on one side and the

00:19:05,249 --> 00:19:13,659
gray blue black or mud and whatnot cars

00:19:08,529 --> 00:19:15,399
on the aside for the 40 proteins but for

00:19:13,659 --> 00:19:18,599
our purposes what we want to pick out

00:19:15,399 --> 00:19:22,989
here is that we have a bunch of layers

00:19:18,599 --> 00:19:25,119
we have a red layer followed by a yellow

00:19:22,989 --> 00:19:28,299
layer followed by a red layer fall by a

00:19:25,119 --> 00:19:30,399
layer and if we want to sit down and

00:19:28,299 --> 00:19:33,670
write all the stuff in a name like a

00:19:30,399 --> 00:19:37,550
file sit down and write it out

00:19:33,670 --> 00:19:40,220
layer one this way rotate this degree

00:19:37,550 --> 00:19:42,440
layer to rotate this degree layer three

00:19:40,220 --> 00:19:45,320
rotate that way sit down and do all the

00:19:42,440 --> 00:19:48,590
calculation that would be really really

00:19:45,320 --> 00:19:50,930
boring it'd be so much nicer to do

00:19:48,590 --> 00:19:53,960
something like this to be able to

00:19:50,930 --> 00:19:57,230
specify nmuk add this sword a structure

00:19:53,960 --> 00:20:01,730
this doesn't work but desiccate we have

00:19:57,230 --> 00:20:05,600
pearl so what we can do as well with the

00:20:01,730 --> 00:20:07,910
Grandma common object or any anything

00:20:05,600 --> 00:20:11,330
else with then we can take our two times

00:20:07,910 --> 00:20:16,430
layer of operation there and you see in

00:20:11,330 --> 00:20:19,820
some of what we're going to do we can do

00:20:16,430 --> 00:20:23,420
this because we're more common for is

00:20:19,820 --> 00:20:27,490
you a number and indict knit you plug

00:20:23,420 --> 00:20:27,490
those in and you get your match

00:20:28,420 --> 00:20:34,700
pretty straightforward now you now the

00:20:32,630 --> 00:20:37,700
beauty of this is that you take the same

00:20:34,700 --> 00:20:41,930
right instruction as the old style pearl

00:20:37,700 --> 00:20:45,620
sick pro five sorry QR expressions and

00:20:41,930 --> 00:20:51,260
create your own reg X expression that

00:20:45,620 --> 00:20:54,280
way this equivalent of a QR sort of it

00:20:51,260 --> 00:20:56,930
just post but not quite

00:20:54,280 --> 00:21:00,160
you can create your own expression in

00:20:56,930 --> 00:21:04,400
this case that handles number x value

00:21:00,160 --> 00:21:07,310
and of course because this is all nested

00:21:04,400 --> 00:21:10,130
and in it is a structure you can find

00:21:07,310 --> 00:21:12,650
inside our my expression up there and

00:21:10,130 --> 00:21:17,210
you find inside that the match that has

00:21:12,650 --> 00:21:20,660
the number and the match content with

00:21:17,210 --> 00:21:24,070
the onion and nest nest nest so you take

00:21:20,660 --> 00:21:24,070
your expressions and nest those

00:21:27,200 --> 00:21:32,250
you can do that too with all donations

00:21:29,660 --> 00:21:34,740
the keyword may be there it may not be

00:21:32,250 --> 00:21:40,050
there but right now what we'll just do

00:21:34,740 --> 00:21:41,610
is match the entire expression now this

00:21:40,050 --> 00:21:45,030
actually works with the module by the

00:21:41,610 --> 00:21:47,520
way because what I've done with Rama

00:21:45,030 --> 00:21:50,970
common is right as well and expression

00:21:47,520 --> 00:21:54,900
module especially match so when you go

00:21:50,970 --> 00:21:56,400
to match text that has any number of

00:21:54,900 --> 00:22:00,680
mathematical operations parentheses

00:21:56,400 --> 00:22:04,230
included you just drop in and expression

00:22:00,680 --> 00:22:06,630
in your own code you don't need to worry

00:22:04,230 --> 00:22:09,900
about you don't need to worry about did

00:22:06,630 --> 00:22:12,060
I remember to do x or plus what for what

00:22:09,900 --> 00:22:14,010
priority does plus go first the

00:22:12,060 --> 00:22:16,410
parentheses go first how does that match

00:22:14,010 --> 00:22:18,450
you don't need worry about that it's all

00:22:16,410 --> 00:22:26,150
take care for you by the grammar comm

00:22:18,450 --> 00:22:26,150
module yeah I pressured over there or

00:22:26,630 --> 00:22:34,080
the value is purely optional in this

00:22:31,170 --> 00:22:38,190
case you have to the expression I show

00:22:34,080 --> 00:22:42,390
you before to here is two times layer by

00:22:38,190 --> 00:22:44,580
default it uses AC type expression so

00:22:42,390 --> 00:22:47,550
anything that will match AC expression

00:22:44,580 --> 00:22:49,290
you will match that but while you can do

00:22:47,550 --> 00:22:55,260
there is overwrite that with your own

00:22:49,290 --> 00:22:57,630
value yeah are you the grammar comma

00:22:55,260 --> 00:23:02,610
file you can go in and modify any detail

00:22:57,630 --> 00:23:05,730
if you want you can go in and and adjust

00:23:02,610 --> 00:23:08,280
how it does the adjust the priority and

00:23:05,730 --> 00:23:10,680
if you want to use say grammar common

00:23:08,280 --> 00:23:13,590
prefix or grammar comma postfix if you

00:23:10,680 --> 00:23:16,020
have say fourth or you know a postscript

00:23:13,590 --> 00:23:20,460
or whatnot you can use those as purchase

00:23:16,020 --> 00:23:22,860
as well so it doesn't just handle that

00:23:20,460 --> 00:23:26,490
doesn't just handle two times five it

00:23:22,860 --> 00:23:29,420
will also handle times 5/2 or five two

00:23:26,490 --> 00:23:29,420
times as well

00:23:31,450 --> 00:23:36,049
right if right that the value bracket

00:23:34,369 --> 00:23:38,539
the value there you can open your

00:23:36,049 --> 00:23:41,329
overwriting that from the module there's

00:23:38,539 --> 00:23:44,059
a default set there already so you can

00:23:41,329 --> 00:23:44,539
use that in parse and parse your wrong

00:23:44,059 --> 00:23:46,339
again

00:23:44,539 --> 00:23:48,589
you overwrite whatever you want put

00:23:46,339 --> 00:23:50,570
whatever you want inside there make that

00:23:48,589 --> 00:23:53,529
you know wage jobs identifier make that

00:23:50,570 --> 00:23:56,329
into a post ripped or forth identifier

00:23:53,529 --> 00:23:58,309
or even Common Lisp if you will with

00:23:56,329 --> 00:23:59,119
this module Common Lisp actually it's

00:23:58,309 --> 00:24:02,599
not that hard

00:23:59,119 --> 00:24:04,700
yes almost trivial to do aside from the

00:24:02,599 --> 00:24:09,919
reader macro and we're too little

00:24:04,700 --> 00:24:11,599
naeli things I sat down and wrote a Jo

00:24:09,919 --> 00:24:14,869
Sperber giggles I sat down and I wrote a

00:24:11,599 --> 00:24:18,559
common lisp parser using this and it

00:24:14,869 --> 00:24:23,299
turns out that it's roughly 50 lines

00:24:18,559 --> 00:24:26,209
worth of text well poses sometime if I

00:24:23,299 --> 00:24:29,349
find them on my drives but my drives are

00:24:26,209 --> 00:24:34,690
right now scales throughout the world

00:24:29,349 --> 00:24:38,809
someone complex life I must say but

00:24:34,690 --> 00:24:43,129
moving on here it also course handles

00:24:38,809 --> 00:24:47,059
Unicode it also had because of course

00:24:43,129 --> 00:24:49,159
were this Perl 6 we had we handle you

00:24:47,059 --> 00:24:52,399
know the proper notation for that would

00:24:49,159 --> 00:24:55,579
be on the English if you knows back here

00:24:52,399 --> 00:24:59,179
you have the you have the color layer

00:24:55,579 --> 00:25:02,119
yellow they call the red layer and they

00:24:59,179 --> 00:25:07,999
are both lifted up and twisted yeah

00:25:02,119 --> 00:25:12,739
through way if ok right I'll get through

00:25:07,999 --> 00:25:14,899
a certain amount so one thing that you

00:25:12,739 --> 00:25:16,839
will want to do there my beans being map

00:25:14,899 --> 00:25:19,669
application course I worked on Reagan's

00:25:16,839 --> 00:25:23,629
so you have the so instead of you know

00:25:19,669 --> 00:25:25,879
Scylla said player fog you have so

00:25:23,629 --> 00:25:30,440
instead of you know 180 degrees you have

00:25:25,879 --> 00:25:35,029
PI over 2 I'm sorry you have PI instead

00:25:30,440 --> 00:25:36,799
of 9 you see a PI over 4 so in this case

00:25:35,029 --> 00:25:39,139
that's not quite the right calculation

00:25:36,799 --> 00:25:40,849
for rotation but it's close enough if

00:25:39,139 --> 00:25:42,170
it's on the diagram that's important

00:25:40,849 --> 00:25:45,630
thing

00:25:42,170 --> 00:25:48,870
so you still do all the maths work that

00:25:45,630 --> 00:25:51,390
you want and fill in with your causes it

00:25:48,870 --> 00:25:57,240
worst is poor Steve pearl six constants

00:25:51,390 --> 00:26:01,290
as well as Perot five all right so I

00:25:57,240 --> 00:26:04,650
talked briefly about I touch very

00:26:01,290 --> 00:26:06,030
briefly on floating point now there are

00:26:04,650 --> 00:26:09,120
a bunch of formats for floating point

00:26:06,030 --> 00:26:10,560
out there and some of them have subtle

00:26:09,120 --> 00:26:15,120
differences

00:26:10,560 --> 00:26:20,580
the first one is some point formats

00:26:15,120 --> 00:26:23,700
require say a zero require a number to

00:26:20,580 --> 00:26:25,980
both sides of the decimal like more

00:26:23,700 --> 00:26:27,840
point to some of the don't care you'd

00:26:25,980 --> 00:26:31,100
have seven point and what nothing

00:26:27,840 --> 00:26:36,300
following it you'd have point three five

00:26:31,100 --> 00:26:39,780
with nothing before it and because we we

00:26:36,300 --> 00:26:41,250
want to support both formats it's a

00:26:39,780 --> 00:26:42,990
little tricky because you have your

00:26:41,250 --> 00:26:45,240
flowing point here you know you're

00:26:42,990 --> 00:26:47,700
flowing point object and you want to be

00:26:45,240 --> 00:26:51,060
able to support both a floating point

00:26:47,700 --> 00:26:54,150
that that probably part that parses when

00:26:51,060 --> 00:26:56,850
you have a trailing zero and one that

00:26:54,150 --> 00:26:58,560
doesn't so of course you can have you

00:26:56,850 --> 00:27:01,170
know you have two different names for

00:26:58,560 --> 00:27:03,360
them you'd have point point you know you

00:27:01,170 --> 00:27:07,860
have flowing point and flying point no

00:27:03,360 --> 00:27:10,890
trailing zeroes you'd have that but one

00:27:07,860 --> 00:27:13,440
nice thing about this is because RAM

00:27:10,890 --> 00:27:14,700
because grammars are so much the core of

00:27:13,440 --> 00:27:19,800
how pearls is works

00:27:14,700 --> 00:27:24,990
they are in fact classes and inning and

00:27:19,800 --> 00:27:28,680
a rule or read about is actually a

00:27:24,990 --> 00:27:32,670
method and you're next and to that

00:27:28,680 --> 00:27:35,100
method you could pass a value which

00:27:32,670 --> 00:27:38,070
we'll get to in a second we're coming up

00:27:35,100 --> 00:27:39,450
on two of the bows around here so I'll

00:27:38,070 --> 00:27:43,280
have all have to go a little bit slower

00:27:39,450 --> 00:27:47,610
and if you have questions by all means

00:27:43,280 --> 00:27:49,650
sort when we have start with them just

00:27:47,610 --> 00:27:52,830
to review before we go into the next

00:27:49,650 --> 00:27:54,960
section for those of you that are

00:27:52,830 --> 00:27:57,690
interested for those of you that are

00:27:54,960 --> 00:28:00,690
interested in Perl 6 and coming from

00:27:57,690 --> 00:28:03,899
Perl 5 background you most of what you

00:28:00,690 --> 00:28:06,840
saw still looks like Perl 5 you still

00:28:03,899 --> 00:28:08,279
have backslash D you select bash /w you

00:28:06,840 --> 00:28:10,200
still have plus sign you still have

00:28:08,279 --> 00:28:12,600
dollars you still have the dollar sign

00:28:10,200 --> 00:28:15,149
for meta characters you still have the

00:28:12,600 --> 00:28:17,039
star those all still work so your

00:28:15,149 --> 00:28:21,149
knowledge of real expressions can be

00:28:17,039 --> 00:28:25,320
transported into Perl 6 that that emote

00:28:21,149 --> 00:28:29,039
lose you don't lose that and you gain an

00:28:25,320 --> 00:28:31,830
off law power there are a few

00:28:29,039 --> 00:28:35,580
differences in how it the actual parsing

00:28:31,830 --> 00:28:38,480
worse because now instead of a real

00:28:35,580 --> 00:28:41,390
expression like pcre we are using

00:28:38,480 --> 00:28:47,429
essentially parser expression grammars

00:28:41,390 --> 00:28:51,960
which means that and i must be an

00:28:47,429 --> 00:28:54,539
airplane you know you have our

00:28:51,960 --> 00:28:57,059
expression grammars which means that you

00:28:54,539 --> 00:29:01,760
can take the same technique you take

00:28:57,059 --> 00:29:05,190
theme you know take a regular volume and

00:29:01,760 --> 00:29:08,909
build onto that a brain expression you

00:29:05,190 --> 00:29:10,649
build on from that a break x parenthesis

00:29:08,909 --> 00:29:13,649
function call you don't know what the

00:29:10,649 --> 00:29:16,950
function call a subroutine you build on

00:29:13,649 --> 00:29:23,940
to the subroutine a file and you have a

00:29:16,950 --> 00:29:26,429
purser for an actual language it is now

00:29:23,940 --> 00:29:28,710
that perfect is now that powerful and in

00:29:26,429 --> 00:29:31,440
fact the parser that we're using here to

00:29:28,710 --> 00:29:35,100
do this dirty work he is the same person

00:29:31,440 --> 00:29:37,919
that is reading that code and parsing in

00:29:35,100 --> 00:29:40,470
it so if it's powerful enough to read

00:29:37,919 --> 00:29:44,250
that code is powerful enough to read any

00:29:40,470 --> 00:29:51,330
code with the accession possibly of

00:29:44,250 --> 00:29:54,299
brain SP of deleted that one anise also

00:29:51,330 --> 00:29:57,480
I am I'll polish might be a little bit

00:29:54,299 --> 00:30:00,059
of a stretch but I actually have on my

00:29:57,480 --> 00:30:03,779
github account which I should put up

00:30:00,059 --> 00:30:07,409
there as well github Comstock dr4 I also

00:30:03,779 --> 00:30:08,630
have a partial parser for the emoji code

00:30:07,409 --> 00:30:11,820
language

00:30:08,630 --> 00:30:14,850
which has nothing which has nearly all

00:30:11,820 --> 00:30:21,410
of the blocks and subroutine calls and

00:30:14,850 --> 00:30:21,410
all of the function names are all emoji

00:30:23,210 --> 00:30:31,110
but the on our foreign thing there is

00:30:27,420 --> 00:30:33,240
how powerful you it is now to compose

00:30:31,110 --> 00:30:37,260
things instead of being able to just

00:30:33,240 --> 00:30:39,150
have a different a hue our variable that

00:30:37,260 --> 00:30:41,010
you interpolate and then scratch your

00:30:39,150 --> 00:30:43,410
head trying to figure out okay do I need

00:30:41,010 --> 00:30:47,160
to use backslash here or do I need to

00:30:43,410 --> 00:30:50,220
use in a vowel to get this over here to

00:30:47,160 --> 00:30:53,760
get this to nest or do I need to use the

00:30:50,220 --> 00:30:56,190
fresh curly brace notation it all nests

00:30:53,760 --> 00:31:01,260
cleanly you can build regulations on top

00:30:56,190 --> 00:31:04,310
of regulation on top of red X and in

00:31:01,260 --> 00:31:06,690
fact you can go a lot farther than that

00:31:04,310 --> 00:31:08,580
you can pack and take your captured you

00:31:06,690 --> 00:31:11,850
can take your you can take your break

00:31:08,580 --> 00:31:15,360
X's and package them inside a reg X

00:31:11,850 --> 00:31:18,870
class inside a vacation object you use

00:31:15,360 --> 00:31:21,870
that to build on further rec on further

00:31:18,870 --> 00:31:25,380
room actually use that to build on to

00:31:21,870 --> 00:31:27,690
further red X and parsing tests and

00:31:25,380 --> 00:31:30,090
start out as I said grow and grow and

00:31:27,690 --> 00:31:34,800
grow and create your own file as I have

00:31:30,090 --> 00:31:37,910
with them with the grammar common so

00:31:34,800 --> 00:31:44,090
let's move into the bones around here

00:31:37,910 --> 00:31:47,730
this is where I learn things okay

00:31:44,090 --> 00:31:49,950
just reiterate where we were we have a X

00:31:47,730 --> 00:31:53,250
my instead we're not gonna worry right

00:31:49,950 --> 00:31:56,520
now about the Micra we're about strings

00:31:53,250 --> 00:31:59,040
or anything fancy like that right now

00:31:56,520 --> 00:32:02,010
we're going to use the string does a

00:31:59,040 --> 00:32:04,680
simple spring of three numbers the till

00:32:02,010 --> 00:32:07,740
tilled there is the first time you seen

00:32:04,680 --> 00:32:11,550
that that is the new version of the

00:32:07,740 --> 00:32:14,310
match operator this is also it for those

00:32:11,550 --> 00:32:16,260
of you from Perl 5 who may be a little

00:32:14,310 --> 00:32:20,310
bit worried of what looks like a smart

00:32:16,260 --> 00:32:22,230
match operator in fact it is the smart

00:32:20,310 --> 00:32:27,870
match operator was assigned for pearls

00:32:22,230 --> 00:32:29,720
and parole 5 in Perl 5 in a decision

00:32:27,870 --> 00:32:33,360
that a lot of people are regretting

00:32:29,720 --> 00:32:35,940
decide to deciding to incorporate that

00:32:33,360 --> 00:32:39,270
and is now being removed

00:32:35,940 --> 00:32:41,460
that's because Perl 5 and Perl 6 don't

00:32:39,270 --> 00:32:44,820
share same type system and those things

00:32:41,460 --> 00:32:47,669
don't quite work out in Perl 6 smart

00:32:44,820 --> 00:32:51,870
machinist where it was meant to be with

00:32:47,669 --> 00:32:53,640
with proper typing and the ability that

00:32:51,870 --> 00:32:56,760
gives you the ability to do smart

00:32:53,640 --> 00:32:59,630
matching of Razia scalars and in our

00:32:56,760 --> 00:33:02,730
case say scalars against British brushes

00:32:59,630 --> 00:33:05,850
which is the whole point of why we're

00:33:02,730 --> 00:33:07,830
using here now I've also changed things

00:33:05,850 --> 00:33:11,100
a little bit slightly here you'll see

00:33:07,830 --> 00:33:14,100
down there instead of using the star /

00:33:11,100 --> 00:33:17,000
brace quote notation I'm using dollar

00:33:14,100 --> 00:33:20,190
slash and then angle bracket notation

00:33:17,000 --> 00:33:22,590
that is a little bit more consistent

00:33:20,190 --> 00:33:27,090
because we have in our expression we

00:33:22,590 --> 00:33:29,429
have a number we have a never surrounded

00:33:27,090 --> 00:33:32,340
by old brackets and in our match we have

00:33:29,429 --> 00:33:34,679
never surrounded by a oh practice so you

00:33:32,340 --> 00:33:37,980
take one spring copy that paste it down

00:33:34,679 --> 00:33:39,419
below no need to change things no need

00:33:37,980 --> 00:33:41,250
to flipping in your mind

00:33:39,419 --> 00:33:43,950
am I looking at a hash and we're looking

00:33:41,250 --> 00:33:48,059
at an object no need flip between those

00:33:43,950 --> 00:33:51,870
two things the output there is not quite

00:33:48,059 --> 00:33:54,480
what you will see if you are trying to

00:33:51,870 --> 00:33:57,419
do to run statement in Perl 6 I see a

00:33:54,480 --> 00:33:59,520
few people typing and I will let you

00:33:57,419 --> 00:34:02,549
know that you'll see a little vortex

00:33:59,520 --> 00:34:05,880
there I'm just using this right here to

00:34:02,549 --> 00:34:08,580
make the example cleaner in reality we

00:34:05,880 --> 00:34:12,030
use the Japanese post around numbers

00:34:08,580 --> 00:34:13,290
inside the spring there that's just a

00:34:12,030 --> 00:34:18,560
little bit more clutter within I think

00:34:13,290 --> 00:34:21,810
we need hunt screen so I eliminated that

00:34:18,560 --> 00:34:25,169
now the first thing that you see here in

00:34:21,810 --> 00:34:27,570
the grants pression we are talking a

00:34:25,169 --> 00:34:30,590
little bit about how we want to keep

00:34:27,570 --> 00:34:34,230
these things clean in a self documenting

00:34:30,590 --> 00:34:35,450
the slash s is there they're a little

00:34:34,230 --> 00:34:38,690
bit redundant you

00:34:35,450 --> 00:34:41,240
nestle need them they don't add anything

00:34:38,690 --> 00:34:44,929
to all they do yes keep the two things

00:34:41,240 --> 00:34:48,050
apart right I'm trying man with the elk

00:34:44,929 --> 00:34:49,609
float about the only reason time is

00:34:48,050 --> 00:34:52,669
round is to keep everything from happy

00:34:49,609 --> 00:34:55,970
at once that's that's how I feel about

00:34:52,669 --> 00:34:57,740
my space they're the only reason the

00:34:55,970 --> 00:35:01,280
white space is there is to keep the

00:34:57,740 --> 00:35:06,290
numbers apart so one thing we can do

00:35:01,280 --> 00:35:08,200
here is okay we have one more slide

00:35:06,290 --> 00:35:12,680
before you do that I screwed that up

00:35:08,200 --> 00:35:15,740
okay we have one more slot you I thought

00:35:12,680 --> 00:35:21,740
that was the point but anyway the X here

00:35:15,740 --> 00:35:24,829
and Wow don't let me back here for a

00:35:21,740 --> 00:35:29,450
second we talked about self-documenting

00:35:24,829 --> 00:35:33,109
code and here we have three coordinates

00:35:29,450 --> 00:35:35,329
X Y is then what we want what we want to

00:35:33,109 --> 00:35:38,089
do is be able to make that more

00:35:35,329 --> 00:35:41,240
self-documenting and right now we have

00:35:38,089 --> 00:35:43,430
number number and number which is why

00:35:41,240 --> 00:35:45,619
perl 6 gets a little bit of hues when

00:35:43,430 --> 00:35:50,060
you ask for the number down there

00:35:45,619 --> 00:35:51,650
it says we have two or three and it says

00:35:50,060 --> 00:35:54,770
okay I don't know which number you mean

00:35:51,650 --> 00:35:56,599
so I'll give you all of them so that's

00:35:54,770 --> 00:36:00,950
why now there we have the angle brackets

00:35:56,599 --> 00:36:03,170
around one and two so it'd be nice

00:36:00,950 --> 00:36:05,960
because we we know those are coordinates

00:36:03,170 --> 00:36:09,170
in three-dimensional space so what we

00:36:05,960 --> 00:36:13,280
want to do there is label those with x

00:36:09,170 --> 00:36:16,339
y&z and luckily in apparel 6 we can do

00:36:13,280 --> 00:36:23,720
that when you take our spring and label

00:36:16,339 --> 00:36:25,280
it in XY and z so now we have our so now

00:36:23,720 --> 00:36:30,440
we still have the number there to work

00:36:25,280 --> 00:36:33,619
with but we can go in there and I forgot

00:36:30,440 --> 00:36:38,119
that bit you can also use dollar slash

00:36:33,619 --> 00:36:40,339
race X as well so you have the number

00:36:38,119 --> 00:36:42,380
there to work with the actual number n

00:36:40,339 --> 00:36:45,829
you have the number didn't name that you

00:36:42,380 --> 00:36:48,740
gave that for a number so you take your

00:36:45,829 --> 00:36:51,220
expression from where grammar and give

00:36:48,740 --> 00:36:51,220
it your own name

00:36:56,030 --> 00:37:02,720
that would be a type of there on my

00:36:58,220 --> 00:37:05,330
phone yeah that should be phone for I

00:37:02,720 --> 00:37:07,970
was I had a few Lee slides literally a

00:37:05,330 --> 00:37:09,430
few minutes ago a little a few miss for

00:37:07,970 --> 00:37:12,170
a talk and I apologize for that

00:37:09,430 --> 00:37:18,830
yeah so that confusing

00:37:12,170 --> 00:37:21,620
my apologies okay okay the last thing

00:37:18,830 --> 00:37:24,680
here W want to look at is what I allude

00:37:21,620 --> 00:37:28,790
to earlier is the white space between

00:37:24,680 --> 00:37:32,420
the numbers because you especially in a

00:37:28,790 --> 00:37:35,870
resurrection like / d / / D / yes / -

00:37:32,420 --> 00:37:38,720
you / yes / w / yes this / s is really

00:37:35,870 --> 00:37:41,390
don't add anything so what we're going

00:37:38,720 --> 00:37:44,660
to do in parallel six is instead of

00:37:41,390 --> 00:37:49,040
using the Braille expression reg X we're

00:37:44,660 --> 00:37:51,740
going to use a rule which tells Perl 6

00:37:49,040 --> 00:37:54,650
to a northern white space so you no

00:37:51,740 --> 00:37:56,480
longer have to worry about that there is

00:37:54,650 --> 00:37:58,700
a way for us to make whitespace

00:37:56,480 --> 00:38:01,790
significant inside about we will talk

00:37:58,700 --> 00:38:05,750
about that for right now so what that

00:38:01,790 --> 00:38:07,550
lets you do right there is remove you'll

00:38:05,750 --> 00:38:10,880
see here we have the OL expression up

00:38:07,550 --> 00:38:13,280
there at the top and at the bottom we

00:38:10,880 --> 00:38:18,200
have this rule line and number number

00:38:13,280 --> 00:38:22,010
number with no white with no / s so that

00:38:18,200 --> 00:38:24,380
way you have token token token which if

00:38:22,010 --> 00:38:26,690
you remember from which if you were in

00:38:24,380 --> 00:38:30,200
other talks you may have seen notation

00:38:26,690 --> 00:38:34,750
like B and F I think the that was shown

00:38:30,200 --> 00:38:37,550
that one of the and one the keynote sir

00:38:34,750 --> 00:38:40,820
but the important the important point

00:38:37,550 --> 00:38:43,300
for us here is that the BNF notation and

00:38:40,820 --> 00:38:48,380
Perl 6 notation are very close and that

00:38:43,300 --> 00:38:54,260
is by design in fact another toss that I

00:38:48,380 --> 00:38:56,750
brought with me I discuss my my antler

00:38:54,260 --> 00:38:59,330
parser for those of you that are

00:38:56,750 --> 00:39:03,240
familiar with antler it is a it is a

00:38:59,330 --> 00:39:06,480
grammar toolkit based loosely on yak

00:39:03,240 --> 00:39:10,619
and Lex what I do with that is I take

00:39:06,480 --> 00:39:14,330
the antler grammar output file and they

00:39:10,619 --> 00:39:18,990
have amaura grammars for Java for C for

00:39:14,330 --> 00:39:21,140
PostScript for forth for not for Perl

00:39:18,990 --> 00:39:26,300
hardly enough go figure

00:39:21,140 --> 00:39:29,670
Python what I do when my program does is

00:39:26,300 --> 00:39:34,500
instead is it takes the original Ambler

00:39:29,670 --> 00:39:37,950
file and rewrites into Perl 6 and thus

00:39:34,500 --> 00:39:41,250
when you take that file and we take that

00:39:37,950 --> 00:39:44,820
file and compile it in Perl 6 you now

00:39:41,250 --> 00:39:47,580
have essentially a you know you if you

00:39:44,820 --> 00:39:49,890
give it AC file you get out the other

00:39:47,580 --> 00:39:52,890
end you get a Perl 6 version of AC

00:39:49,890 --> 00:39:55,950
presser you have to do some tweaking

00:39:52,890 --> 00:39:57,210
here and there obviously that's the way

00:39:55,950 --> 00:40:01,050
the antler grammar works unfortunately

00:39:57,210 --> 00:40:04,349
but you've got the basis for what is a C

00:40:01,050 --> 00:40:06,960
parser or a Python parser so you use

00:40:04,349 --> 00:40:10,500
that to write your own Python parser in

00:40:06,960 --> 00:40:13,740
Perl your own JavaScript parser in Perl

00:40:10,500 --> 00:40:17,460
and if you come down to my top you come

00:40:13,740 --> 00:40:18,990
down to the tutorial on Friday I go

00:40:17,460 --> 00:40:24,240
through and at the end we will work

00:40:18,990 --> 00:40:26,970
through a sample very small parser and

00:40:24,240 --> 00:40:29,670
compiler all your very own to do

00:40:26,970 --> 00:40:33,180
JavaScript that's one of the exercises

00:40:29,670 --> 00:40:34,589
so idiot so that gives you taste a

00:40:33,180 --> 00:40:39,030
little bit I hope of how powerful this

00:40:34,589 --> 00:40:44,940
is and the amber source to translate to

00:40:39,030 --> 00:40:45,540
C is in Java and roughly 200,000 lines

00:40:44,940 --> 00:40:49,830
of code

00:40:45,540 --> 00:40:56,220
by comparison by version from in Perl 6

00:40:49,830 --> 00:40:58,950
I think it clocked in at 48k actual

00:40:56,220 --> 00:41:04,080
pearls is code to do what the Amla Parsa

00:40:58,950 --> 00:41:09,440
does into in 200,000 in like I think the

00:41:04,080 --> 00:41:12,220
AVI file is on the order of half a gig

00:41:09,440 --> 00:41:19,790
to do the job

00:41:12,220 --> 00:41:25,790
so moving on I missed a slide there

00:41:19,790 --> 00:41:28,940
oh okay for our old example this is this

00:41:25,790 --> 00:41:31,520
is a truncate output of what it looks

00:41:28,940 --> 00:41:34,130
like what a match will look like in Perl

00:41:31,520 --> 00:41:37,099
6 all of your data is still there all

00:41:34,130 --> 00:41:40,130
the nesting is still inside there all

00:41:37,099 --> 00:41:42,200
you have to do is say the object unlike

00:41:40,130 --> 00:41:45,320
in say Perl 6 where you'd have to go

00:41:42,200 --> 00:41:47,900
sorry I'm like a pro 5 where you have to

00:41:45,320 --> 00:41:50,570
look at dollar 0 look at Dollar one look

00:41:47,900 --> 00:41:54,580
at s tonight like a a-plus look at AB

00:41:50,570 --> 00:41:54,580
minus all those variables aside there

00:41:56,080 --> 00:42:01,550
you know everything in one single day

00:41:59,390 --> 00:42:05,300
structure so you if you want to debug

00:42:01,550 --> 00:42:07,220
all you do is say dollar slash there's

00:42:05,300 --> 00:42:10,760
no need for date no need for day at

00:42:07,220 --> 00:42:13,940
dumper no need for deed no need for DD

00:42:10,760 --> 00:42:16,970
no need for a no need for debugger you

00:42:13,940 --> 00:42:19,910
just throw in a say statement and you

00:42:16,970 --> 00:42:22,849
get the entire object output you see the

00:42:19,910 --> 00:42:24,680
entire tree which can be a little bit

00:42:22,849 --> 00:42:27,050
awkward if you're looking at a large

00:42:24,680 --> 00:42:30,560
data structure of course as I were tealy

00:42:27,050 --> 00:42:33,170
doing with the antler stuff but it's all

00:42:30,560 --> 00:42:36,170
there it's all laid out for you there

00:42:33,170 --> 00:42:39,109
are one or two light there are warrantee

00:42:36,170 --> 00:42:44,330
slight issues that I have with the

00:42:39,109 --> 00:42:46,160
output but that's never story now I last

00:42:44,330 --> 00:42:49,760
what you might want to be able to do to

00:42:46,160 --> 00:42:51,740
do with this is go into is actually

00:42:49,760 --> 00:42:58,160
capture the output and do something more

00:42:51,740 --> 00:43:00,589
with it so we so one thing that you

00:42:58,160 --> 00:43:04,490
could do is use grammar common in your

00:43:00,589 --> 00:43:07,220
own grammars with the does category with

00:43:04,490 --> 00:43:09,410
the does keyword so you create your own

00:43:07,220 --> 00:43:11,990
grammar and gallant to mine

00:43:09,410 --> 00:43:16,640
so you can steal all my good stuff and

00:43:11,990 --> 00:43:20,089
put it into your own like this and the

00:43:16,640 --> 00:43:24,010
rule taught the word top there in Perl 6

00:43:20,089 --> 00:43:27,850
all of the in Perl 6

00:43:24,010 --> 00:43:32,290
key words for reserved for reserved

00:43:27,850 --> 00:43:35,290
variables are Larry knows Florian Larry

00:43:32,290 --> 00:43:38,680
and Liz no term better than I do

00:43:35,290 --> 00:43:40,900
are all uppercase so that they don't

00:43:38,680 --> 00:43:44,470
conflict with anything else in this case

00:43:40,900 --> 00:43:47,080
Tom means the very top of the grammar if

00:43:44,470 --> 00:43:50,850
you're parsing say you see you will want

00:43:47,080 --> 00:43:54,400
to parse sorry if you want to parse say

00:43:50,850 --> 00:43:57,780
JavaScript you parse your top rule is

00:43:54,400 --> 00:44:00,910
the is the top function or the top file

00:43:57,780 --> 00:44:04,210
listing of subroutines inside there or

00:44:00,910 --> 00:44:07,810
NC you would have a file your top rule

00:44:04,210 --> 00:44:10,480
will be a line listing files in our case

00:44:07,810 --> 00:44:13,150
is going to be a nice and simple what

00:44:10,480 --> 00:44:19,780
we're going to do is just take our top

00:44:13,150 --> 00:44:22,900
rule here and a parse this out using a

00:44:19,780 --> 00:44:24,250
set using a separate processor I don't

00:44:22,900 --> 00:44:26,170
know if I got to the point of being

00:44:24,250 --> 00:44:29,130
unable to where you write an action here

00:44:26,170 --> 00:44:29,130
but we'll see you very shortly

00:44:31,080 --> 00:44:39,820
all right so what okay I did do that

00:44:35,650 --> 00:44:42,160
right okay one thing that you know one

00:44:39,820 --> 00:44:45,790
other things that you can do with the

00:44:42,160 --> 00:44:47,980
module eventually yes do a little bit is

00:44:45,790 --> 00:44:51,630
do a little bit more with the upper do a

00:44:47,980 --> 00:44:56,320
little bit more with the stuff inside

00:44:51,630 --> 00:44:58,060
you'll see here I do the MLK grammar

00:44:56,320 --> 00:45:01,200
includes grammar coming

00:44:58,060 --> 00:45:05,770
I've got other tools inside there right

00:45:01,200 --> 00:45:08,980
cool yeah it's like that I I have at

00:45:05,770 --> 00:45:10,750
least one and intend to write more as I

00:45:08,980 --> 00:45:14,140
said life kind of intrude on me halfway

00:45:10,750 --> 00:45:20,560
through Rhines model so that's that's

00:45:14,140 --> 00:45:23,080
how things work so we are so one thing

00:45:20,560 --> 00:45:28,090
that you other things that you do with

00:45:23,080 --> 00:45:32,860
this you free it your own interpreter

00:45:28,090 --> 00:45:35,590
using what I have here so so if you want

00:45:32,860 --> 00:45:36,240
to say that this is a little more

00:45:35,590 --> 00:45:38,520
complex

00:45:36,240 --> 00:45:42,510
about what you're doing here is you're

00:45:38,520 --> 00:45:45,809
using my ml cat you're using the MLK

00:45:42,510 --> 00:45:50,280
grandma from here capturing and

00:45:45,809 --> 00:45:53,059
expression and you can give Z built in

00:45:50,280 --> 00:45:55,339
the interpreter inside grammar coming

00:45:53,059 --> 00:45:59,220
which will interpret the expression

00:45:55,339 --> 00:46:01,260
parent two times seven plus one and I

00:45:59,220 --> 00:46:04,619
give you a national value without you

00:46:01,260 --> 00:46:06,720
having to do anything you can use the

00:46:04,619 --> 00:46:08,910
action since I've freed you can use the

00:46:06,720 --> 00:46:12,839
interpreter that I have there alright I

00:46:08,910 --> 00:46:18,150
think I start on that before things went

00:46:12,839 --> 00:46:21,720
haywire on me but what I can do there is

00:46:18,150 --> 00:46:25,559
used is used my interpreter press and

00:46:21,720 --> 00:46:28,589
you steal my code and you have an

00:46:25,559 --> 00:46:33,869
interpreter or if you want to get really

00:46:28,589 --> 00:46:36,780
fancy you can also I have plans to also

00:46:33,869 --> 00:46:40,349
create a ast tree so you can do your own

00:46:36,780 --> 00:46:42,420
compiler that will take an ast you want

00:46:40,349 --> 00:46:45,059
you chose how you want the DST but I can

00:46:42,420 --> 00:46:49,619
write that for you so you have a bunch

00:46:45,059 --> 00:46:52,530
of terms before line down and all you

00:46:49,619 --> 00:46:55,530
need to do is you steal my interpreter

00:46:52,530 --> 00:46:59,280
code there with the does keyword back

00:46:55,530 --> 00:47:03,559
here you see on the grammar common with

00:46:59,280 --> 00:47:07,319
the dusky word apply to your own grammar

00:47:03,559 --> 00:47:08,640
and with the loop and you also and you

00:47:07,319 --> 00:47:12,480
want to free of course your own

00:47:08,640 --> 00:47:16,140
interpreter there so this is this is a

00:47:12,480 --> 00:47:18,770
civil way to alright I mentioned earlier

00:47:16,140 --> 00:47:23,130
speaking in just little subtly that

00:47:18,770 --> 00:47:26,309
various brushes are just functions and

00:47:23,130 --> 00:47:28,049
this is where we use that we have a

00:47:26,309 --> 00:47:31,890
we have a function we have a Braille

00:47:28,049 --> 00:47:36,119
expression in our inside Grand more

00:47:31,890 --> 00:47:38,299
common and we have a and Liz's Mateen

00:47:36,119 --> 00:47:41,970
which means I have a type of somewhere

00:47:38,299 --> 00:47:43,740
yeah or something agree store something

00:47:41,970 --> 00:47:46,250
equally reaches where she'll for a me

00:47:43,740 --> 00:47:46,250
for later on

00:47:47,520 --> 00:47:56,250
the expression here happens to be what

00:47:50,880 --> 00:47:58,680
Perl 6 will run win it doesn't match so

00:47:56,250 --> 00:48:03,390
you help so you have both the match that

00:47:58,680 --> 00:48:05,550
you can do you match x y&z and you can

00:48:03,390 --> 00:48:08,580
tell the compiler to do things when it

00:48:05,550 --> 00:48:11,130
encounters the number when it encounters

00:48:08,580 --> 00:48:13,440
a string when it encounters your

00:48:11,130 --> 00:48:16,110
expression you know tell it to instead

00:48:13,440 --> 00:48:21,140
of integrating instead of just matching

00:48:16,110 --> 00:48:24,720
on 1 2 & 7 you have an ADD 1 plus 2

00:48:21,140 --> 00:48:26,700
which what this does so this module here

00:48:24,720 --> 00:48:29,910
handles all that for you

00:48:26,700 --> 00:48:34,500
it is a trivial bit of work but it does

00:48:29,910 --> 00:48:38,580
show a little bit of the power of what

00:48:34,500 --> 00:48:41,340
you do you can also if you want over

00:48:38,580 --> 00:48:43,310
eyes some of what I do you need to do a

00:48:41,340 --> 00:48:47,040
little bit more work than just this

00:48:43,310 --> 00:48:49,800
about what you could do is aside my

00:48:47,040 --> 00:48:52,230
Kramer you can use mine and stitch

00:48:49,800 --> 00:48:55,290
things together to adding your own

00:48:52,230 --> 00:48:58,250
operators so you you're not limiting

00:48:55,290 --> 00:49:02,390
you're not limited to plus minus times

00:48:58,250 --> 00:49:07,740
laud you now your own like X or like man

00:49:02,390 --> 00:49:12,510
like zip like Sigma you now you're on

00:49:07,740 --> 00:49:15,570
there again eliciting there is more code

00:49:12,510 --> 00:49:17,520
that you need you know if there is work

00:49:15,570 --> 00:49:22,800
out that you need than just dad to

00:49:17,520 --> 00:49:25,100
support that but it will work you know

00:49:22,800 --> 00:49:28,830
so and this 114 runs off the screen

00:49:25,100 --> 00:49:31,500
there's both a there should be both a

00:49:28,830 --> 00:49:34,020
prefix and a postfix version of the

00:49:31,500 --> 00:49:36,150
grammars I spend most time working on

00:49:34,020 --> 00:49:39,690
the in fixed side but you know also

00:49:36,150 --> 00:49:42,480
taking the expression and use a prefix

00:49:39,690 --> 00:49:45,240
or postfix expression I haven't gotten

00:49:42,480 --> 00:49:49,619
around to doing the print to doing a

00:49:45,240 --> 00:49:52,680
full Lisp in there but since I think I

00:49:49,619 --> 00:49:56,070
allow for parentheses in prefixes you

00:49:52,680 --> 00:49:58,890
can use that so I'm hoping that this

00:49:56,070 --> 00:50:01,260
gives you if not a sound grounding in

00:49:58,890 --> 00:50:05,640
grammars at least an idea of

00:50:01,260 --> 00:50:08,130
lies of what lies beyond in purl 6 in

00:50:05,640 --> 00:50:11,100
terms of the power in terms of these

00:50:08,130 --> 00:50:13,180
implicitly in terms of ease and I thank

00:50:11,100 --> 00:50:19,980
you very much

00:50:13,180 --> 00:50:19,980
[Applause]

00:50:26,099 --> 00:50:28,160

YouTube URL: https://www.youtube.com/watch?v=CxgELwuqj6o


