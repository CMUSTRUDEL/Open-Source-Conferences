Title: RailsConf 2020 CE - Successfully Onboarding a Junior Engineer in Three Steps by Emily Giurleo
Publication date: 2020-04-24
Playlist: RailsConf 2020 CE
Description: 
	Successfully Onboarding a Junior Engineer in Three Steps by Emily Giurleo

How you onboard someone to your team can have lasting effects on their professional success, growth, and happiness, but many teams treat onboarding as an afterthought. In this talk, you will learn how to successfully onboard a junior engineer in three steps, with the goals of building their trust, instilling confidence in their technical abilities, and enabling them to be an autonomous contributor to your team.

__________

Emily Giurleo is a software engineer and avid Rubyist. After graduating from MIT with a degree in computer science, she spent two years working as a Ruby developer at Codecademy. She now works at MongoDB, where she helps maintain the Ruby Driver and Mongoid Object-Document Mapper. In her spare time, she enjoys building tech for good causes, reading fantasy novels, and petting cats.
Captions: 
	00:00:11,469 --> 00:00:16,189
how you onboard a junior engineer onto

00:00:14,210 --> 00:00:18,970
your team can have a lasting impact on

00:00:16,189 --> 00:00:21,259
their success happiness and productivity

00:00:18,970 --> 00:00:23,090
you might be thinking that that sounds

00:00:21,259 --> 00:00:25,700
like a lot of responsibility and you'd

00:00:23,090 --> 00:00:27,439
be right luckily though it doesn't have

00:00:25,700 --> 00:00:29,750
to be a difficult process if you take

00:00:27,439 --> 00:00:33,020
the time to prepare and follow the steps

00:00:29,750 --> 00:00:34,970
outlined in this talk my name is Emily

00:00:33,020 --> 00:00:37,760
drew Leo and I'm a software engineer at

00:00:34,970 --> 00:00:39,590
MongoDB over the past six years I've

00:00:37,760 --> 00:00:42,110
made the transition from intern to

00:00:39,590 --> 00:00:43,610
junior engineer to mid-level engineer

00:00:42,110 --> 00:00:47,240
through various internships and

00:00:43,610 --> 00:00:49,160
full-time jobs in that time I've seen

00:00:47,240 --> 00:00:51,830
the onboarding process at every company

00:00:49,160 --> 00:00:53,480
I worked for and I planned the intern

00:00:51,830 --> 00:00:56,060
onboarding process at my first full-time

00:00:53,480 --> 00:00:58,550
job I've seen a lot of things that

00:00:56,060 --> 00:01:01,790
worked and a lot that didn't and I'm

00:00:58,550 --> 00:01:03,410
here to share my findings with you the

00:01:01,790 --> 00:01:05,000
first thing you have to realize is that

00:01:03,410 --> 00:01:07,880
you can't accomplish the perfect

00:01:05,000 --> 00:01:09,409
onboarding process alone ultimately

00:01:07,880 --> 00:01:11,780
there are at least three parties

00:01:09,409 --> 00:01:14,960
involved in making sure your new junior

00:01:11,780 --> 00:01:17,510
engineer succeeds on your team of course

00:01:14,960 --> 00:01:20,870
there's you the manager or mentor of the

00:01:17,510 --> 00:01:22,310
junior engineer there's your team the

00:01:20,870 --> 00:01:25,729
people who are going to be working most

00:01:22,310 --> 00:01:29,000
closely with the engineer and the junior

00:01:25,729 --> 00:01:31,130
engineer themselves for the purposes of

00:01:29,000 --> 00:01:33,110
this talk we're going to assume that all

00:01:31,130 --> 00:01:35,000
three of these parties want the junior

00:01:33,110 --> 00:01:37,720
engineer to succeed and are going to try

00:01:35,000 --> 00:01:40,580
their best to make that happen

00:01:37,720 --> 00:01:42,770
now that you know who has to be involved

00:01:40,580 --> 00:01:45,470
it's important to define some goals for

00:01:42,770 --> 00:01:47,030
your onboarding process these can vary

00:01:45,470 --> 00:01:48,950
depending on the size of your company

00:01:47,030 --> 00:01:50,869
and the kind of work you do but I think

00:01:48,950 --> 00:01:54,229
the following three are usually a good

00:01:50,869 --> 00:01:55,790
place to start first of all you want to

00:01:54,229 --> 00:01:57,650
enable the new engineer to be an

00:01:55,790 --> 00:02:01,010
autonomous and productive contributor on

00:01:57,650 --> 00:02:02,780
your team secondly you want them to

00:02:01,010 --> 00:02:04,400
build confidence in their skills so they

00:02:02,780 --> 00:02:06,560
can take on more responsibilities and

00:02:04,400 --> 00:02:11,150
become a more senior engineer on your

00:02:06,560 --> 00:02:13,310
team lastly you want to develop trust

00:02:11,150 --> 00:02:16,370
between yourself the new engineer and

00:02:13,310 --> 00:02:18,319
the rest of your team it's very hard to

00:02:16,370 --> 00:02:20,510
work with people you don't trust so the

00:02:18,319 --> 00:02:22,069
success of the new engineer hinges on

00:02:20,510 --> 00:02:22,310
their trusting you to guide them in the

00:02:22,069 --> 00:02:26,840
right

00:02:22,310 --> 00:02:28,819
direction to quickly recap we've talked

00:02:26,840 --> 00:02:31,010
about who needs to be involved in your

00:02:28,819 --> 00:02:33,950
onboarding process and the goals you've

00:02:31,010 --> 00:02:35,450
set for yourself and your team the last

00:02:33,950 --> 00:02:38,050
element that we need to complete the

00:02:35,450 --> 00:02:40,220
equation is the steps to follow I'm

00:02:38,050 --> 00:02:42,920
going to spend the rest of this talk

00:02:40,220 --> 00:02:44,870
explaining how you the junior engineer

00:02:42,920 --> 00:02:46,520
and the rest of your team can work

00:02:44,870 --> 00:02:48,980
together on each of these steps and

00:02:46,520 --> 00:02:53,540
accomplish the goals we've laid out are

00:02:48,980 --> 00:02:55,519
you ready let's get started so the first

00:02:53,540 --> 00:02:58,700
step in a successful onboarding process

00:02:55,519 --> 00:03:00,230
is to set expectations you may think

00:02:58,700 --> 00:03:02,000
that this step is mainly focused on

00:03:00,230 --> 00:03:04,010
sitting down with the junior engineer

00:03:02,000 --> 00:03:06,739
and telling them exactly what you expect

00:03:04,010 --> 00:03:08,690
out of their role however setting

00:03:06,739 --> 00:03:11,600
expectations should actually start way

00:03:08,690 --> 00:03:13,850
earlier than that before the junior

00:03:11,600 --> 00:03:15,470
engineer even starts their job you have

00:03:13,850 --> 00:03:18,950
to set your own expectations regarding

00:03:15,470 --> 00:03:21,650
their performance start by making a road

00:03:18,950 --> 00:03:23,810
map for the new engineer what should

00:03:21,650 --> 00:03:27,260
they be doing after one month or two

00:03:23,810 --> 00:03:29,750
months or three now take another look at

00:03:27,260 --> 00:03:31,700
their resume what do they already know

00:03:29,750 --> 00:03:34,930
and what are they going to need to learn

00:03:31,700 --> 00:03:38,570
to hit the milestones in your roadmap

00:03:34,930 --> 00:03:40,640
once you've done that it's time to set

00:03:38,570 --> 00:03:42,500
expectations with your team about who's

00:03:40,640 --> 00:03:43,790
going to teach the new engineer the

00:03:42,500 --> 00:03:45,549
things they need to know to be

00:03:43,790 --> 00:03:48,260
successful at their job

00:03:45,549 --> 00:03:50,480
chances are based on the previous step

00:03:48,260 --> 00:03:52,549
you found that the new engineer is going

00:03:50,480 --> 00:03:53,959
to have to learn some skills in order to

00:03:52,549 --> 00:03:56,060
be successful on your team

00:03:53,959 --> 00:03:57,739
that means someone on your team is going

00:03:56,060 --> 00:04:00,459
to have to teach them the skills they

00:03:57,739 --> 00:04:03,170
need to know who is going to do that

00:04:00,459 --> 00:04:05,359
it's also important to figure out how

00:04:03,170 --> 00:04:08,510
much time they should spend doing that

00:04:05,359 --> 00:04:10,609
obviously onboarding new engineers to

00:04:08,510 --> 00:04:13,220
your team is a very important use of

00:04:10,609 --> 00:04:15,890
your time but it's also important to not

00:04:13,220 --> 00:04:17,780
derail the entire team or stop them from

00:04:15,890 --> 00:04:22,610
doing their regular work in order to

00:04:17,780 --> 00:04:24,470
accomplish this once you've set

00:04:22,610 --> 00:04:27,020
expectations for yourself and with your

00:04:24,470 --> 00:04:29,620
team then it's finally time to set

00:04:27,020 --> 00:04:32,120
expectations with the junior engineer

00:04:29,620 --> 00:04:34,700
first you can share your three-month

00:04:32,120 --> 00:04:35,910
roadmap with them and this is a great

00:04:34,700 --> 00:04:38,370
time to let them Excel

00:04:35,910 --> 00:04:40,050
their ideas and preferences and maybe

00:04:38,370 --> 00:04:43,170
choose between a couple of projects that

00:04:40,050 --> 00:04:45,180
you've laid out for them this is also a

00:04:43,170 --> 00:04:47,370
great time to tell them who on the team

00:04:45,180 --> 00:04:49,080
they can go to with questions based on

00:04:47,370 --> 00:04:51,080
the conversations that you already had

00:04:49,080 --> 00:04:55,650
with the rest of your team

00:04:51,080 --> 00:04:57,810
in this step you've set your own

00:04:55,650 --> 00:04:59,820
expectations about the performance of

00:04:57,810 --> 00:05:01,890
the junior engineer you've set

00:04:59,820 --> 00:05:03,750
expectations on your team about who's

00:05:01,890 --> 00:05:05,360
going to spend time teaching the junior

00:05:03,750 --> 00:05:08,070
engineer what they need to know and

00:05:05,360 --> 00:05:10,080
you've communicated all this to the

00:05:08,070 --> 00:05:11,700
junior engineer so now it's time to

00:05:10,080 --> 00:05:15,690
check in with our goals and see what

00:05:11,700 --> 00:05:17,520
we've accomplished in this step we've

00:05:15,690 --> 00:05:20,850
enabled the new engineer to work

00:05:17,520 --> 00:05:23,580
autonomously keep in mind this doesn't

00:05:20,850 --> 00:05:25,230
mean that they work alone it just means

00:05:23,580 --> 00:05:27,390
that they know what they need to do to

00:05:25,230 --> 00:05:29,490
perform well at their job and it also

00:05:27,390 --> 00:05:35,940
means that they know who to ask for help

00:05:29,490 --> 00:05:37,800
when they're blocked the next step in a

00:05:35,940 --> 00:05:40,620
successful onboarding process is to

00:05:37,800 --> 00:05:42,720
deliver feedback once again

00:05:40,620 --> 00:05:44,400
you may think that this step starts with

00:05:42,720 --> 00:05:46,080
giving feedback to the junior engineer

00:05:44,400 --> 00:05:48,420
as they begin doing work and making

00:05:46,080 --> 00:05:51,420
mistakes but you first need to spend

00:05:48,420 --> 00:05:53,340
time laying the foundations this step

00:05:51,420 --> 00:05:56,910
actually starts with normalizing

00:05:53,340 --> 00:05:59,040
feedback on your entire team this is

00:05:56,910 --> 00:06:01,410
entirely its own talk so I'm not going

00:05:59,040 --> 00:06:03,090
to dwell too much on this what I want to

00:06:01,410 --> 00:06:04,560
emphasize is that it's important that

00:06:03,090 --> 00:06:06,810
your teammates are already comfortable

00:06:04,560 --> 00:06:08,730
giving and receiving feedback because

00:06:06,810 --> 00:06:11,100
they set the tone for the new people who

00:06:08,730 --> 00:06:13,200
join the team it's unreasonable to

00:06:11,100 --> 00:06:14,910
expect a junior engineer to accept

00:06:13,200 --> 00:06:17,850
feedback from you if none of your other

00:06:14,910 --> 00:06:19,590
teammates can do the same here are some

00:06:17,850 --> 00:06:20,640
warning signs that your team is not

00:06:19,590 --> 00:06:24,210
comfortable giving and receiving

00:06:20,640 --> 00:06:25,980
feedback one warning sign is having

00:06:24,210 --> 00:06:26,960
teammates who react defensively to

00:06:25,980 --> 00:06:29,400
feedback

00:06:26,960 --> 00:06:31,020
another is teammates who talk behind

00:06:29,400 --> 00:06:34,290
each other's backs instead of just

00:06:31,020 --> 00:06:36,300
giving feedback face-to-face and the

00:06:34,290 --> 00:06:38,700
last is having certain teammates who are

00:06:36,300 --> 00:06:41,510
exempt from criticism because they're

00:06:38,700 --> 00:06:44,940
considered loan geniuses or

00:06:41,510 --> 00:06:46,500
indispensable to the team if you find

00:06:44,940 --> 00:06:48,540
that any of these things are true on

00:06:46,500 --> 00:06:49,639
your team it's worth doing some research

00:06:48,540 --> 00:06:51,800
on how to improve

00:06:49,639 --> 00:06:54,469
the existing culture before worrying too

00:06:51,800 --> 00:06:58,370
much about giving feedback to the junior

00:06:54,469 --> 00:07:00,020
engineer however no team is perfect at

00:06:58,370 --> 00:07:01,819
giving and receiving feedback so it's

00:07:00,020 --> 00:07:03,560
probably worth it for all of us to be

00:07:01,819 --> 00:07:06,830
thinking about how we can improve in

00:07:03,560 --> 00:07:08,719
this area once you've started thinking

00:07:06,830 --> 00:07:11,360
about normalizing feedback on your team

00:07:08,719 --> 00:07:14,270
it's time to start giving feedback to

00:07:11,360 --> 00:07:16,520
the junior engineer once they arrive and

00:07:14,270 --> 00:07:18,189
to start doing some work they're going

00:07:16,520 --> 00:07:20,779
to do some good things and some

00:07:18,189 --> 00:07:22,310
not-so-good things and you're gonna want

00:07:20,779 --> 00:07:24,439
to give them feedback and guide them in

00:07:22,310 --> 00:07:26,060
the right direction there are three

00:07:24,439 --> 00:07:28,400
aspects of giving feedback that I'm

00:07:26,060 --> 00:07:31,250
going to talk about here the first is

00:07:28,400 --> 00:07:33,289
how to give feedback the second is what

00:07:31,250 --> 00:07:36,439
to give feedback on and the third is

00:07:33,289 --> 00:07:38,659
when to give feedback so let's start

00:07:36,439 --> 00:07:41,990
with how you give feedback to the junior

00:07:38,659 --> 00:07:45,729
engineer I'm going to give you an

00:07:41,990 --> 00:07:48,529
example let's say the junior engineer

00:07:45,729 --> 00:07:51,199
was making their first change to the

00:07:48,529 --> 00:07:54,259
code and they pushed directly to master

00:07:51,199 --> 00:07:55,789
instead of creating a pull request it's

00:07:54,259 --> 00:07:58,520
your job to sit down with the junior

00:07:55,789 --> 00:08:01,550
engineer and tell them exactly what went

00:07:58,520 --> 00:08:05,270
wrong and these are some good steps to

00:08:01,550 --> 00:08:07,330
follow in order to do that the first

00:08:05,270 --> 00:08:09,520
step is to be specific

00:08:07,330 --> 00:08:12,080
don't leave the junior engineer

00:08:09,520 --> 00:08:15,020
questioning what they did wrong or what

00:08:12,080 --> 00:08:17,330
they did to prompt this conversation so

00:08:15,020 --> 00:08:19,339
you can say something like I noticed you

00:08:17,330 --> 00:08:21,800
pushed directly to master instead of

00:08:19,339 --> 00:08:24,620
creating a pull request that's very

00:08:21,800 --> 00:08:28,430
specific and leaves no room for doubt or

00:08:24,620 --> 00:08:30,620
misunderstanding next it's important to

00:08:28,430 --> 00:08:33,199
focus on the impact that the junior

00:08:30,620 --> 00:08:35,390
engineer had with their actions this is

00:08:33,199 --> 00:08:36,919
important because receiving feedback and

00:08:35,390 --> 00:08:39,320
especially receiving critical feedback

00:08:36,919 --> 00:08:41,750
can feel very personal or it could feel

00:08:39,320 --> 00:08:44,720
like an attack so by focusing on the

00:08:41,750 --> 00:08:47,140
impact of what happened you're showing

00:08:44,720 --> 00:08:50,990
the junior engineer that there are

00:08:47,140 --> 00:08:54,140
objective results based on their actions

00:08:50,990 --> 00:08:56,959
and it's not about them as a person so

00:08:54,140 --> 00:08:58,699
in this case you can say this prevents

00:08:56,959 --> 00:09:01,190
the rest of your team from being able to

00:08:58,699 --> 00:09:03,590
catch bugs in your code so suddenly it's

00:09:01,190 --> 00:09:05,000
about the team and the codebase

00:09:03,590 --> 00:09:10,520
other than the junior engineered

00:09:05,000 --> 00:09:12,080
themself next you're going to want to

00:09:10,520 --> 00:09:14,450
take a step back from your own

00:09:12,080 --> 00:09:16,850
perspective and ask questions of the

00:09:14,450 --> 00:09:19,490
junior engineer to understand why they

00:09:16,850 --> 00:09:22,640
did what they did a great question to

00:09:19,490 --> 00:09:24,230
ask is why did you do that and while

00:09:22,640 --> 00:09:26,000
you're listening to the answer from the

00:09:24,230 --> 00:09:28,810
junior engineer the most important thing

00:09:26,000 --> 00:09:30,680
is just to validate their experience and

00:09:28,810 --> 00:09:32,720
hear what they have to say and

00:09:30,680 --> 00:09:35,000
ultimately I think you can just say

00:09:32,720 --> 00:09:36,410
something like I understand why you

00:09:35,000 --> 00:09:41,810
thought this was the appropriate thing

00:09:36,410 --> 00:09:43,670
to do once you understand the junior

00:09:41,810 --> 00:09:46,400
engineers point of view it's time to

00:09:43,670 --> 00:09:48,680
redefine your expectations you can say

00:09:46,400 --> 00:09:50,510
something like in the future I expect

00:09:48,680 --> 00:09:53,120
you to create a pull request for every

00:09:50,510 --> 00:09:55,190
change you make to the code this way the

00:09:53,120 --> 00:09:56,720
junior engineer has no doubt what they

00:09:55,190 --> 00:09:59,590
have to do to prevent themselves from

00:09:56,720 --> 00:10:02,900
making the same mistake in the future

00:09:59,590 --> 00:10:04,490
lastly it's important to give the junior

00:10:02,900 --> 00:10:07,910
engineer a chance to fix their own

00:10:04,490 --> 00:10:09,680
mistake if you can we all have made

00:10:07,910 --> 00:10:11,960
mistakes in our careers that we remember

00:10:09,680 --> 00:10:13,910
years later because we had to spend

00:10:11,960 --> 00:10:15,800
hours and hours fixing them afterward

00:10:13,910 --> 00:10:18,050
and I think it's safe to say that most

00:10:15,800 --> 00:10:22,130
of us never made those same mistakes

00:10:18,050 --> 00:10:23,920
again so if you have the time and the

00:10:22,130 --> 00:10:27,200
resources to allow the junior engineer

00:10:23,920 --> 00:10:29,390
to fix their own mistake you're

00:10:27,200 --> 00:10:32,240
guaranteeing that they are not going to

00:10:29,390 --> 00:10:34,240
make that same mistake again one way to

00:10:32,240 --> 00:10:36,440
do that in this scenario would be to say

00:10:34,240 --> 00:10:37,880
walk me through the code you merged and

00:10:36,440 --> 00:10:41,720
then make a pull request with any

00:10:37,880 --> 00:10:44,000
changes I suggest you could of course go

00:10:41,720 --> 00:10:46,250
and fix the code yourself but once again

00:10:44,000 --> 00:10:47,960
the junior engineer will not fully

00:10:46,250 --> 00:10:53,930
understand the impact of what they've

00:10:47,960 --> 00:10:56,210
done unless they get to go and fix it to

00:10:53,930 --> 00:10:59,810
recap the steps to giving feedback are

00:10:56,210 --> 00:11:03,140
be specific focus on impact ask

00:10:59,810 --> 00:11:05,210
questions redefine expectations and give

00:11:03,140 --> 00:11:09,200
the junior engineer a chance to fix it

00:11:05,210 --> 00:11:10,850
themselves now that we've talked about

00:11:09,200 --> 00:11:12,980
how to give feedback to the junior

00:11:10,850 --> 00:11:16,340
engineer we're going to talk about what

00:11:12,980 --> 00:11:17,630
to give feedback on in the previous

00:11:16,340 --> 00:11:19,250
example we talked

00:11:17,630 --> 00:11:21,230
specifically about critical or

00:11:19,250 --> 00:11:23,560
constructive feedback but it's actually

00:11:21,230 --> 00:11:27,710
really important to give feedback on

00:11:23,560 --> 00:11:29,840
everything and I don't mean that you

00:11:27,710 --> 00:11:32,360
should carefully watch the junior

00:11:29,840 --> 00:11:34,100
engineer and nitpick every single thing

00:11:32,360 --> 00:11:36,950
that they do because that does not

00:11:34,100 --> 00:11:39,560
create a healthy work environment what I

00:11:36,950 --> 00:11:41,930
mean is that it's important to comment

00:11:39,560 --> 00:11:44,270
both on the things that the junior

00:11:41,930 --> 00:11:47,180
engineer does poorly as well as the

00:11:44,270 --> 00:11:48,920
things they do well I say this to

00:11:47,180 --> 00:11:50,840
prevent you from falling into a trap

00:11:48,920 --> 00:11:54,320
that I've seen a few times which is

00:11:50,840 --> 00:11:56,000
ignoring a new hire who is doing well to

00:11:54,320 --> 00:11:57,980
you and your team it might be obvious

00:11:56,000 --> 00:12:00,590
that the junior engineer is performing

00:11:57,980 --> 00:12:03,980
above expectations but it is definitely

00:12:00,590 --> 00:12:07,100
less obvious to the junior engineer many

00:12:03,980 --> 00:12:08,870
people when not given any feedback

00:12:07,100 --> 00:12:10,850
actually assume that they're doing

00:12:08,870 --> 00:12:12,830
really poorly but that nobody has the

00:12:10,850 --> 00:12:14,780
guts to tell them so you can correct

00:12:12,830 --> 00:12:18,560
this misunderstanding very very quickly

00:12:14,780 --> 00:12:19,940
by just saying congratulations for the

00:12:18,560 --> 00:12:24,170
things that they do well in the first

00:12:19,940 --> 00:12:26,210
few months on the job it's also

00:12:24,170 --> 00:12:27,830
important to be mindful of what kinds of

00:12:26,210 --> 00:12:30,590
positive feedback you give the junior

00:12:27,830 --> 00:12:33,320
engineer a common problem that I've seen

00:12:30,590 --> 00:12:35,390
is managers who actually reward a junior

00:12:33,320 --> 00:12:37,370
engineer for doing non-technical work

00:12:35,390 --> 00:12:40,690
which they see is going above and beyond

00:12:37,370 --> 00:12:42,430
such as taking notes during a meeting or

00:12:40,690 --> 00:12:45,680
contributing to the recruitment process

00:12:42,430 --> 00:12:47,000
but then not commenting on the technical

00:12:45,680 --> 00:12:49,220
work that they do as part of their

00:12:47,000 --> 00:12:51,410
day-to-day job this can have the

00:12:49,220 --> 00:12:52,910
unintended consequence of pushing the

00:12:51,410 --> 00:12:54,770
junior engineer away from their

00:12:52,910 --> 00:12:57,070
technical role which is not what you

00:12:54,770 --> 00:13:00,050
want to do so make sure you are

00:12:57,070 --> 00:13:02,930
commenting just as much on their

00:13:00,050 --> 00:13:05,030
technical work as you are any above and

00:13:02,930 --> 00:13:08,810
beyond non-technical contributions that

00:13:05,030 --> 00:13:11,120
they make and also to be clear it's okay

00:13:08,810 --> 00:13:13,880
if the junior engineer is interested in

00:13:11,120 --> 00:13:15,200
doing non-technical work it's just

00:13:13,880 --> 00:13:18,020
important that you pay equal attention

00:13:15,200 --> 00:13:19,610
to their technical contributions as to

00:13:18,020 --> 00:13:22,730
their non-technical contributions

00:13:19,610 --> 00:13:24,500
it's also important to reward their

00:13:22,730 --> 00:13:26,780
non-technical contributions that add

00:13:24,500 --> 00:13:29,660
value to the team just as you would

00:13:26,780 --> 00:13:31,279
technical contributions of equal value

00:13:29,660 --> 00:13:33,350
and we're going to talk

00:13:31,279 --> 00:13:35,720
about rewarding the junior engineer in

00:13:33,350 --> 00:13:40,100
step three of this whole process so hang

00:13:35,720 --> 00:13:42,199
tight for that so now that we've talked

00:13:40,100 --> 00:13:44,360
about how to give feedback and what to

00:13:42,199 --> 00:13:46,910
give feedback on I also want to touch on

00:13:44,360 --> 00:13:49,730
when to give this feedback to the junior

00:13:46,910 --> 00:13:51,439
engineer a great time to give feedback

00:13:49,730 --> 00:13:53,600
is during regularly scheduled

00:13:51,439 --> 00:13:55,759
one-on-ones you should put these on your

00:13:53,600 --> 00:13:57,800
calendar every week or every two weeks

00:13:55,759 --> 00:13:59,720
and make sure you encourage the junior

00:13:57,800 --> 00:14:02,180
engineer to add discussion topics to the

00:13:59,720 --> 00:14:04,189
agenda this is a good time to check in

00:14:02,180 --> 00:14:06,079
on their progress along your roadmap and

00:14:04,189 --> 00:14:07,759
also a good time to give them guidance

00:14:06,079 --> 00:14:10,040
if they're doing anything particularly

00:14:07,759 --> 00:14:14,059
well or if you think they've gone astray

00:14:10,040 --> 00:14:16,430
in some way however another good time to

00:14:14,059 --> 00:14:18,470
give feedback is not during regularly

00:14:16,430 --> 00:14:20,600
scheduled one-on-ones you shouldn't

00:14:18,470 --> 00:14:23,240
limit your interactions with the junior

00:14:20,600 --> 00:14:24,949
engineer to these meetings one or two

00:14:23,240 --> 00:14:26,420
weeks is actually a long time to go

00:14:24,949 --> 00:14:28,399
without getting any feedback in the

00:14:26,420 --> 00:14:30,319
first few months of a job and so you

00:14:28,399 --> 00:14:32,449
should be taking time day to day to

00:14:30,319 --> 00:14:35,420
provide smaller points of feedback to

00:14:32,449 --> 00:14:37,129
get the engineer on the right path this

00:14:35,420 --> 00:14:39,949
is a quote from radical candor by kim

00:14:37,129 --> 00:14:41,449
scott that i liked very much you'd never

00:14:39,949 --> 00:14:43,339
let the fact that you go to the dentist

00:14:41,449 --> 00:14:44,930
for a cleaning a couple times a year

00:14:43,339 --> 00:14:47,660
prevent you from brushing your teeth

00:14:44,930 --> 00:14:49,730
every day this is the attitude that we

00:14:47,660 --> 00:14:54,860
have to take when giving feedback to

00:14:49,730 --> 00:14:56,809
junior engineers giving feedback to the

00:14:54,860 --> 00:14:58,459
junior engineer is probably going to

00:14:56,809 --> 00:15:00,860
reveal some inadequacies in your

00:14:58,459 --> 00:15:03,500
planning and your onboarding process so

00:15:00,860 --> 00:15:05,089
the third aspect of this step is

00:15:03,500 --> 00:15:09,019
actually being open to receiving

00:15:05,089 --> 00:15:11,120
feedback yourself let's go back to the

00:15:09,019 --> 00:15:12,980
example where the junior engineer merged

00:15:11,120 --> 00:15:15,769
to master without asking for code review

00:15:12,980 --> 00:15:18,199
first when you confront them about this

00:15:15,769 --> 00:15:20,929
rehave your'e it's very possible that

00:15:18,199 --> 00:15:22,879
they'll say something like well nobody

00:15:20,929 --> 00:15:26,269
ever told me that I had to create a pull

00:15:22,879 --> 00:15:29,209
request and when you hear this your

00:15:26,269 --> 00:15:32,749
first instinct is probably going to be

00:15:29,209 --> 00:15:34,249
to become defensive after all everybody

00:15:32,749 --> 00:15:37,399
knows that you have to create a pull

00:15:34,249 --> 00:15:40,240
request right I'm here to tell you to

00:15:37,399 --> 00:15:42,769
not do this do not become defensive

00:15:40,240 --> 00:15:44,940
saying something like that to the junior

00:15:42,769 --> 00:15:47,460
engineer would actually be

00:15:44,940 --> 00:15:49,140
mean and it would be punishing them for

00:15:47,460 --> 00:15:51,270
not knowing something that you never

00:15:49,140 --> 00:15:52,890
required them to know in order to get

00:15:51,270 --> 00:15:54,960
the job so there's nothing they could

00:15:52,890 --> 00:15:57,740
have done to have prevented themselves

00:15:54,960 --> 00:16:00,000
from getting into that situation instead

00:15:57,740 --> 00:16:01,920
use the feedback from the junior

00:16:00,000 --> 00:16:04,920
engineer to improve the onboarding

00:16:01,920 --> 00:16:06,810
process so maybe this is a step that you

00:16:04,920 --> 00:16:09,510
could write down in some onboarding

00:16:06,810 --> 00:16:12,060
documentation or maybe you should change

00:16:09,510 --> 00:16:14,190
the settings on your github to prevent

00:16:12,060 --> 00:16:15,990
anyone from merging to master without

00:16:14,190 --> 00:16:18,780
getting an approval first

00:16:15,990 --> 00:16:20,790
these are easy ways to prevent future

00:16:18,780 --> 00:16:25,200
junior engineers from making the same

00:16:20,790 --> 00:16:29,070
mistakes so in this step which was

00:16:25,200 --> 00:16:30,480
delivering feedback you normalized a

00:16:29,070 --> 00:16:32,940
feedback culture on your team

00:16:30,480 --> 00:16:35,340
you delivered feedback to the junior

00:16:32,940 --> 00:16:38,010
engineer and you've prepared yourself to

00:16:35,340 --> 00:16:40,730
get some feedback in return let's check

00:16:38,010 --> 00:16:44,130
in on how this contributes to our goals

00:16:40,730 --> 00:16:45,840
so in this step we've helped the new

00:16:44,130 --> 00:16:48,150
engineer gain confidence in their

00:16:45,840 --> 00:16:50,430
ability to learn and grow they've had

00:16:48,150 --> 00:16:52,290
the space to show off what they know but

00:16:50,430 --> 00:16:55,080
they aren't punished for making mistakes

00:16:52,290 --> 00:16:56,370
while they learn new skills they're not

00:16:55,080 --> 00:16:57,780
going to be afraid to admit when they

00:16:56,370 --> 00:16:59,640
don't know something and they're not

00:16:57,780 --> 00:17:05,040
going to be afraid to ask for help from

00:16:59,640 --> 00:17:07,650
you and the rest of the team up to this

00:17:05,040 --> 00:17:09,480
point we've set expectations for the

00:17:07,650 --> 00:17:11,160
junior engineer and we've delivered

00:17:09,480 --> 00:17:13,290
feedback to help guide them towards

00:17:11,160 --> 00:17:15,420
meeting expectations so it's time for

00:17:13,290 --> 00:17:18,420
our final step in the process which is

00:17:15,420 --> 00:17:20,280
assessing performance at this stage

00:17:18,420 --> 00:17:21,449
you're judging whether the junior

00:17:20,280 --> 00:17:23,069
engineer has been meeting the

00:17:21,449 --> 00:17:24,750
expectations you set out and you're

00:17:23,069 --> 00:17:28,170
going to reward them based on their

00:17:24,750 --> 00:17:30,480
performance as with the previous two

00:17:28,170 --> 00:17:32,790
steps you might think that this step

00:17:30,480 --> 00:17:35,730
starts with giving a performance review

00:17:32,790 --> 00:17:37,260
to the junior engineer however it's

00:17:35,730 --> 00:17:40,380
important to take a step back and

00:17:37,260 --> 00:17:41,850
prepare your team you have to get on the

00:17:40,380 --> 00:17:44,250
same page with the rest of your team

00:17:41,850 --> 00:17:47,430
about what constitutes good work

00:17:44,250 --> 00:17:49,560
performance imagine the scenario where

00:17:47,430 --> 00:17:51,180
you give a performance review to the

00:17:49,560 --> 00:17:52,830
junior engineer and you tell them they

00:17:51,180 --> 00:17:54,630
did a great job on their project and

00:17:52,830 --> 00:17:58,020
you're going to give them a raise as a

00:17:54,630 --> 00:17:58,410
result then imagine the next day another

00:17:58,020 --> 00:17:59,970
one

00:17:58,410 --> 00:18:02,010
their team members says that same

00:17:59,970 --> 00:18:03,530
project took way too long and they're

00:18:02,010 --> 00:18:06,240
not happy with the outcome

00:18:03,530 --> 00:18:08,700
this totally undermines the junior

00:18:06,240 --> 00:18:10,590
engineers trust in you so it's your job

00:18:08,700 --> 00:18:12,810
to make sure the entire team is on the

00:18:10,590 --> 00:18:15,030
same page regarding what is or is not

00:18:12,810 --> 00:18:19,890
acceptable work performance before you

00:18:15,030 --> 00:18:21,570
start giving performance reviews you can

00:18:19,890 --> 00:18:24,510
do this in a few ways and I think one

00:18:21,570 --> 00:18:26,850
popular one is to agree with the team on

00:18:24,510 --> 00:18:29,010
a list of criteria for promotion where

00:18:26,850 --> 00:18:31,470
someone has to meet many or all of them

00:18:29,010 --> 00:18:36,180
before they are considered for a race or

00:18:31,470 --> 00:18:37,770
for a promotion once you've gotten on

00:18:36,180 --> 00:18:39,960
the same page as the rest of your team

00:18:37,770 --> 00:18:43,710
it's time to give a performance review

00:18:39,960 --> 00:18:45,570
to the junior engineer if you followed

00:18:43,710 --> 00:18:47,700
the previous two steps in this process

00:18:45,570 --> 00:18:50,430
the contents of this performance review

00:18:47,700 --> 00:18:52,710
should not be surprising to you and if

00:18:50,430 --> 00:18:54,990
the junior engineer is performing well

00:18:52,710 --> 00:18:57,720
you can reward them with a raise or a

00:18:54,990 --> 00:19:00,120
promotion if possible you should back

00:18:57,720 --> 00:19:01,560
your words up with actions and prove to

00:19:00,120 --> 00:19:03,720
the junior engineer that you're willing

00:19:01,560 --> 00:19:05,850
to advocate on their behalf for more

00:19:03,720 --> 00:19:08,160
money and a better title which are

00:19:05,850 --> 00:19:09,270
concrete rewards that will improve their

00:19:08,160 --> 00:19:12,750
quality of life

00:19:09,270 --> 00:19:15,810
if the junior engineers performance is a

00:19:12,750 --> 00:19:17,520
surprise to you it means that you've

00:19:15,810 --> 00:19:20,160
probably failed at one of the previous

00:19:17,520 --> 00:19:21,630
two steps of this process and you should

00:19:20,160 --> 00:19:23,400
be prepared to assess your own

00:19:21,630 --> 00:19:26,190
performance as the manager of the

00:19:23,400 --> 00:19:28,320
onboarding process some things that

00:19:26,190 --> 00:19:29,940
could have gone wrong are you thought

00:19:28,320 --> 00:19:32,310
that the junior engineer knew more than

00:19:29,940 --> 00:19:34,320
they did when they started the job maybe

00:19:32,310 --> 00:19:36,390
you knew that the junior engineer would

00:19:34,320 --> 00:19:39,540
need to gain certain skills but didn't

00:19:36,390 --> 00:19:40,920
make a plan for them to do so or maybe

00:19:39,540 --> 00:19:44,100
you didn't give the junior engineer

00:19:40,920 --> 00:19:45,990
timely feedback causing - causing them

00:19:44,100 --> 00:19:47,430
to repeat the same mistakes over and

00:19:45,990 --> 00:19:51,090
over again when they could have been

00:19:47,430 --> 00:19:53,370
corrected regardless of how the

00:19:51,090 --> 00:19:54,960
onboarding process turned out this is a

00:19:53,370 --> 00:19:56,850
great time for you to collect feedback

00:19:54,960 --> 00:19:59,430
from your team and from the junior

00:19:56,850 --> 00:20:05,100
engineer to see how you can improve the

00:19:59,430 --> 00:20:10,399
process in the future in this third step

00:20:05,100 --> 00:20:13,889
which was assessing performance you've

00:20:10,399 --> 00:20:15,809
in the third and final step of this

00:20:13,889 --> 00:20:18,450
onboarding process which was assessing

00:20:15,809 --> 00:20:23,309
performance you've gotten on the same p8

00:20:18,450 --> 00:20:24,899
oh my god in this third and final step

00:20:23,309 --> 00:20:27,299
of the onboarding process which was

00:20:24,899 --> 00:20:28,830
assessing performance you've gotten on

00:20:27,299 --> 00:20:30,779
the same page with the rest of your team

00:20:28,830 --> 00:20:33,480
about what constitutes good work

00:20:30,779 --> 00:20:34,860
performance then you've given a

00:20:33,480 --> 00:20:36,899
performance review to the junior

00:20:34,860 --> 00:20:38,850
engineer and you've also assessed your

00:20:36,899 --> 00:20:41,360
own performance as the manager of the

00:20:38,850 --> 00:20:44,340
onboarding process

00:20:41,360 --> 00:20:46,529
this helps us complete our third and

00:20:44,340 --> 00:20:49,320
final goal which is to build trust

00:20:46,529 --> 00:20:52,019
between yourself your team and the

00:20:49,320 --> 00:20:54,690
junior engineer because you backed up

00:20:52,019 --> 00:20:56,220
your feedback with concrete rewards the

00:20:54,690 --> 00:20:58,049
engineer feels like they can trust your

00:20:56,220 --> 00:21:03,929
guidance and they know that you'll keep

00:20:58,049 --> 00:21:06,149
your word in the future if you follow

00:21:03,929 --> 00:21:07,980
these steps you will be able to develop

00:21:06,149 --> 00:21:09,120
an onboarding process that enables the

00:21:07,980 --> 00:21:11,460
new engineer to be an autonomous

00:21:09,120 --> 00:21:13,110
contributor on your team that helps them

00:21:11,460 --> 00:21:15,480
build confidence in their own abilities

00:21:13,110 --> 00:21:18,169
and that develops trust between you the

00:21:15,480 --> 00:21:21,840
new engineer and the rest of your team

00:21:18,169 --> 00:21:23,820
this matters for a few reasons it might

00:21:21,840 --> 00:21:25,980
seem like a lot of work but it will be

00:21:23,820 --> 00:21:27,570
more than worth it once the new engineer

00:21:25,980 --> 00:21:30,870
on your team becomes a productive

00:21:27,570 --> 00:21:32,340
contributor more importantly the steps

00:21:30,870 --> 00:21:35,250
lay the groundwork for building a

00:21:32,340 --> 00:21:36,870
diverse team ideally you want your team

00:21:35,250 --> 00:21:38,700
to be composed of people from all

00:21:36,870 --> 00:21:40,590
different backgrounds people who have

00:21:38,700 --> 00:21:42,120
never worked in the tech industry people

00:21:40,590 --> 00:21:43,919
who didn't go to college or didn't study

00:21:42,120 --> 00:21:45,600
computer science and people from

00:21:43,919 --> 00:21:47,760
different countries all over the world

00:21:45,600 --> 00:21:49,620
not everyone is going to come into your

00:21:47,760 --> 00:21:52,320
work environment and immediately share

00:21:49,620 --> 00:21:54,210
your criteria for success ultimately

00:21:52,320 --> 00:21:56,519
when you leave people guessing about how

00:21:54,210 --> 00:21:59,399
to be successful you're setting up the

00:21:56,519 --> 00:22:01,080
most vulnerable of them for failure the

00:21:59,399 --> 00:22:03,210
easiest way to ensure the success of

00:22:01,080 --> 00:22:04,860
every member on your team regardless of

00:22:03,210 --> 00:22:06,389
their background is to clearly

00:22:04,860 --> 00:22:08,669
communicate the steps they need to take

00:22:06,389 --> 00:22:11,909
to be successful to give them feedback

00:22:08,669 --> 00:22:16,950
along the way and to reward them for the

00:22:11,909 --> 00:22:18,539
success they achieve thank you very much

00:22:16,950 --> 00:22:20,940
for listening to my talk and for

00:22:18,539 --> 00:22:23,250
attending railsconf 2020 couch edition

00:22:20,940 --> 00:22:25,950
if you'd like to connect you can

00:22:23,250 --> 00:22:29,700
on me on Twitter at Emily giulio or on

00:22:25,950 --> 00:22:31,110
my website Emily GAO dev stay safe out

00:22:29,700 --> 00:22:33,480
there and I hope we get to meet in

00:22:31,110 --> 00:22:35,660
person at a future Ruby gathering thanks

00:22:33,480 --> 00:22:35,660

YouTube URL: https://www.youtube.com/watch?v=q473dYrJiMQ


