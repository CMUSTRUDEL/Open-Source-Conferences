Title: BazelCon 2019 Day 1: Lightning Talk â€“ Building Eclipse Plug-Ins (and OSGi Bundles) with Bazel
Publication date: 2020-01-15
Playlist: BazelCon 2019
Description: 
	Gunnar Wagenknecht, Salesforce event: Bazelcon 2019; re_ty: Publish; product: Open Source - General; fullname: Gunnar Wagenknecht;
Captions: 
	00:00:00,060 --> 00:00:05,730
okay well like hey my name is guna I

00:00:03,210 --> 00:00:07,259
work for Salesforce the stuff I'm

00:00:05,730 --> 00:00:09,620
talking right now in the next ten

00:00:07,259 --> 00:00:12,599
minutes or actually a few minutes

00:00:09,620 --> 00:00:14,940
building in clubs plugins or STI bundles

00:00:12,599 --> 00:00:18,750
with raises not something I do at work

00:00:14,940 --> 00:00:21,449
it's more of a personal topic I was one

00:00:18,750 --> 00:00:24,029
of the probably a dinosaurs when it

00:00:21,449 --> 00:00:27,449
comes to eclipse I was one of the first

00:00:24,029 --> 00:00:32,399
non IBM commuters on their Eclipse IDE

00:00:27,449 --> 00:00:34,649
and so I do a lot of eclipse extensions

00:00:32,399 --> 00:00:36,480
in development and when I started to

00:00:34,649 --> 00:00:38,100
work on basil at Salesforce I thought I

00:00:36,480 --> 00:00:41,879
have a couple of other projects and I

00:00:38,100 --> 00:00:44,280
thought myself wall hmm I like the

00:00:41,879 --> 00:00:50,219
benefits of basil how can I use it to

00:00:44,280 --> 00:00:54,329
build Eclipse plugins so first um how

00:00:50,219 --> 00:00:56,940
many of you are Java developers or how

00:00:54,329 --> 00:00:59,430
many of you are German developers how

00:00:56,940 --> 00:00:59,879
many know about OSGi in users choice

00:00:59,430 --> 00:01:03,420
okay

00:00:59,879 --> 00:01:06,900
quite a lot so the way you develop

00:01:03,420 --> 00:01:11,640
Eclipse plugins is that Eclipse itself

00:01:06,900 --> 00:01:13,409
comes with its own development extension

00:01:11,640 --> 00:01:14,939
like the eclipse plug-in development

00:01:13,409 --> 00:01:17,009
environment it provides a lot of great

00:01:14,939 --> 00:01:19,229
capabilities when you start writing and

00:01:17,009 --> 00:01:20,850
developing those you can actually hit

00:01:19,229 --> 00:01:23,850
the button and then it launches a new

00:01:20,850 --> 00:01:25,890
instance of Eclipse with all the like

00:01:23,850 --> 00:01:27,450
with your extensions that you have in

00:01:25,890 --> 00:01:29,549
the workspace with the projects and then

00:01:27,450 --> 00:01:33,869
it you can debug them and it's very nice

00:01:29,549 --> 00:01:35,970
very comfortable to do so these are

00:01:33,869 --> 00:01:40,020
special project types in Eclipse

00:01:35,970 --> 00:01:41,880
and they have their own classpath

00:01:40,020 --> 00:01:43,619
container they work with so they do

00:01:41,880 --> 00:01:46,110
things like dynamic dependency

00:01:43,619 --> 00:01:48,000
resolution and then when you launch the

00:01:46,110 --> 00:01:50,310
self-hosted Eclipse it resolved them and

00:01:48,000 --> 00:01:53,610
updates the manifest files they have

00:01:50,310 --> 00:01:56,159
this concept of a target platform so we

00:01:53,610 --> 00:01:57,810
basically put everything you want to

00:01:56,159 --> 00:02:00,810
work with in the target platform and

00:01:57,810 --> 00:02:02,640
then you don't have to worry about the

00:02:00,810 --> 00:02:05,329
particular versions it just picks the

00:02:02,640 --> 00:02:05,329
one that's available

00:02:05,600 --> 00:02:12,050
and there is an in the in the old days

00:02:10,759 --> 00:02:16,850
it was a setup

00:02:12,050 --> 00:02:18,440
and tools then later on maybe an

00:02:16,850 --> 00:02:20,780
extension came around it's called Tyco

00:02:18,440 --> 00:02:23,209
it's very it's a very excessive

00:02:20,780 --> 00:02:24,860
extension to maven because it if you

00:02:23,209 --> 00:02:26,690
develop if you do all in eclipse plug-in

00:02:24,860 --> 00:02:28,550
and build it with maven there's actually

00:02:26,690 --> 00:02:29,660
no dependency to corrosion in the

00:02:28,550 --> 00:02:31,820
pom.xml file

00:02:29,660 --> 00:02:33,770
it reads everything from the O's giant

00:02:31,820 --> 00:02:37,360
manifest and then the resolution against

00:02:33,770 --> 00:02:40,310
the the target platforms so it's

00:02:37,360 --> 00:02:43,010
practically impossible to just migrate

00:02:40,310 --> 00:02:44,780
it from the plumbing small into a basal

00:02:43,010 --> 00:02:50,330
project because you don't have any

00:02:44,780 --> 00:02:52,190
anything around here you can do you can

00:02:50,330 --> 00:02:54,980
mix a match in the main world you can

00:02:52,190 --> 00:02:57,530
opt in to declare or define dependencies

00:02:54,980 --> 00:02:59,780
in the pom.xml file and then there's a

00:02:57,530 --> 00:03:03,050
ton of additional stuff the update cites

00:02:59,780 --> 00:03:04,940
the p2 repositories the features the

00:03:03,050 --> 00:03:07,040
plugins how it's going to be assembled

00:03:04,940 --> 00:03:09,100
and deployed or made the point of all or

00:03:07,040 --> 00:03:12,610
installable into Eclipse application

00:03:09,100 --> 00:03:15,260
that that the tiger extension implements

00:03:12,610 --> 00:03:18,140
most of this is it actually does not

00:03:15,260 --> 00:03:20,660
implement itself but uses p2 which is a

00:03:18,140 --> 00:03:22,579
java-based API or framework that's

00:03:20,660 --> 00:03:25,610
embedded in clips in it allows

00:03:22,579 --> 00:03:28,370
assembling all the bits and also is kind

00:03:25,610 --> 00:03:30,820
of the update mechanism the important

00:03:28,370 --> 00:03:33,440
point here this all of this approaches

00:03:30,820 --> 00:03:36,980
manifest first driven as we call it so

00:03:33,440 --> 00:03:39,860
the OSGi manifest is the source of truth

00:03:36,980 --> 00:03:43,670
poor your dependencies and like your

00:03:39,860 --> 00:03:46,340
import and export in the OSGi world is a

00:03:43,670 --> 00:03:49,329
little bit different these days the very

00:03:46,340 --> 00:03:52,970
popular tooling is being detalls

00:03:49,329 --> 00:03:55,700
this is entirely the opposite from

00:03:52,970 --> 00:03:59,150
manifest driven because it generates the

00:03:55,700 --> 00:04:01,400
manifests it inspects the binary class

00:03:59,150 --> 00:04:03,560
files looks what the penance is you are

00:04:01,400 --> 00:04:08,769
actually using and puts that into the

00:04:03,560 --> 00:04:11,660
OSI manifest again it it requires some

00:04:08,769 --> 00:04:13,300
external mechanism to manage the

00:04:11,660 --> 00:04:15,310
dependencies

00:04:13,300 --> 00:04:16,450
that could be the IDE it could be maven

00:04:15,310 --> 00:04:19,060
it could be something else

00:04:16,450 --> 00:04:21,550
it could be great you can you can still

00:04:19,060 --> 00:04:24,310
use Tycho again for doing pure OSGi

00:04:21,550 --> 00:04:26,650
development not sure I would recommend

00:04:24,310 --> 00:04:28,930
it though and then that's the main

00:04:26,650 --> 00:04:30,430
bundle plug-in which is a lighter

00:04:28,930 --> 00:04:32,620
version which basically choose perhaps

00:04:30,430 --> 00:04:37,600
any existing jar and generate sociai

00:04:32,620 --> 00:04:39,430
manifest data then I started looking

00:04:37,600 --> 00:04:43,360
into okay what what options do I have in

00:04:39,430 --> 00:04:48,060
basil I discovered I just covered the

00:04:43,360 --> 00:04:48,060
rules to the condition that all sort of

00:04:48,240 --> 00:04:52,900
abandoned by the basic theme but I found

00:04:51,190 --> 00:04:58,360
it in the original RAZR club's plugins

00:04:52,900 --> 00:05:02,110
they do interesting things how they

00:04:58,360 --> 00:05:04,120
generate the v2 metadata in all the

00:05:02,110 --> 00:05:07,060
other information for Eclipse sort of

00:05:04,120 --> 00:05:08,530
works for that particular use case but

00:05:07,060 --> 00:05:10,450
if you want to apply a large-scale to a

00:05:08,530 --> 00:05:12,910
project it's not it's not work it needs

00:05:10,450 --> 00:05:15,010
a lot of additional it needs a lot of

00:05:12,910 --> 00:05:19,900
investment to make it going for a larger

00:05:15,010 --> 00:05:22,750
scale project I just covered recently I

00:05:19,900 --> 00:05:24,310
discovered these ogi roots repository I

00:05:22,750 --> 00:05:27,510
haven't tried it but it looks pretty

00:05:24,310 --> 00:05:31,150
interesting it uses B and D and it

00:05:27,510 --> 00:05:34,090
generates proper manifests and yes

00:05:31,150 --> 00:05:38,020
there's an feature across open ask for

00:05:34,090 --> 00:05:39,670
support but it's been open for quite a

00:05:38,020 --> 00:05:41,620
while so I don't think anything is going

00:05:39,670 --> 00:05:46,230
to happen unless someone steps up from

00:05:41,620 --> 00:05:49,240
the community and does it so and again

00:05:46,230 --> 00:05:51,550
there's a few challenges especially with

00:05:49,240 --> 00:05:54,340
OSU I yes first of all dependency

00:05:51,550 --> 00:05:56,470
resolution in basil its static you

00:05:54,340 --> 00:05:59,620
declare their pantsies up front for the

00:05:56,470 --> 00:06:01,120
packages and OSGi especially in eclipse

00:05:59,620 --> 00:06:02,470
well it's dynamic you have the target

00:06:01,120 --> 00:06:05,710
platform and then you use whatever you

00:06:02,470 --> 00:06:08,920
do and also that kind of the way the BND

00:06:05,710 --> 00:06:10,300
tools allows developers you sort of

00:06:08,920 --> 00:06:12,940
depending on your architecture you

00:06:10,300 --> 00:06:14,860
define a set of stuff you want to use

00:06:12,940 --> 00:06:17,230
and then it generates the actual import

00:06:14,860 --> 00:06:20,470
statements so it only inspects and does

00:06:17,230 --> 00:06:23,020
the limited stop you're doing which

00:06:20,470 --> 00:06:25,120
implies that you know the bill file

00:06:23,020 --> 00:06:27,340
cannot really be static

00:06:25,120 --> 00:06:29,860
right it needs to be you need some

00:06:27,340 --> 00:06:32,740
support for updating it assuming you

00:06:29,860 --> 00:06:36,130
want to have a target the ID support

00:06:32,740 --> 00:06:39,160
it's very in Eclipse itself it's very

00:06:36,130 --> 00:06:41,500
good with PD and also being d12 ent to

00:06:39,160 --> 00:06:46,120
us also comes with its own Eclipse

00:06:41,500 --> 00:06:49,900
extension in Eclipse itself the Basel

00:06:46,120 --> 00:06:51,669
plugin and recently our company started

00:06:49,900 --> 00:06:54,940
investing into it because we have a huge

00:06:51,669 --> 00:06:56,919
Eclipse developer base and deployment

00:06:54,940 --> 00:06:59,020
there's a ton of stuff that it's

00:06:56,919 --> 00:07:01,300
basically not available yeah right now

00:06:59,020 --> 00:07:03,040
he needs to be done so I started so I

00:07:01,300 --> 00:07:04,870
thought to myself well what if I start

00:07:03,040 --> 00:07:07,630
started with some opinionated worlds and

00:07:04,870 --> 00:07:08,979
I started developing it in thought and

00:07:07,630 --> 00:07:15,990
how it could work and didn't and then

00:07:08,979 --> 00:07:18,700
I'm like oh wait a minute hold on for so

00:07:15,990 --> 00:07:21,639
the maven Tycho X engine all the others

00:07:18,700 --> 00:07:23,770
and that was quite a significant

00:07:21,639 --> 00:07:27,039
investment and I would expect actually

00:07:23,770 --> 00:07:29,610
the same to be done for a fair good

00:07:27,039 --> 00:07:33,250
environment for the basic roles and

00:07:29,610 --> 00:07:36,729
realistically you end up with something

00:07:33,250 --> 00:07:41,050
that limits the full capabilities of

00:07:36,729 --> 00:07:43,090
basil so one question that I keep asking

00:07:41,050 --> 00:07:45,099
myself is like is it really a good match

00:07:43,090 --> 00:07:47,860
based on the most joy right you have the

00:07:45,099 --> 00:07:49,960
dynamic system dynamic environment you

00:07:47,860 --> 00:07:51,729
have versioning and runtime you

00:07:49,960 --> 00:07:55,060
specifically want to work and build and

00:07:51,729 --> 00:07:58,240
operate with with specific multiple

00:07:55,060 --> 00:08:03,940
versions of the same or of dependencies

00:07:58,240 --> 00:08:06,970
and so for now I put that on halt

00:08:03,940 --> 00:08:08,620
because I think it's it's too much

00:08:06,970 --> 00:08:12,910
effort and what we have at I coverts

00:08:08,620 --> 00:08:15,520
quite well if I'm I'm happy to hear if

00:08:12,910 --> 00:08:19,210
there's people in the community that are

00:08:15,520 --> 00:08:23,410
interested in this and potentially would

00:08:19,210 --> 00:08:25,500
like to work with me on this stuff thank

00:08:23,410 --> 00:08:25,500
you

00:08:25,640 --> 00:08:32,229
[Applause]

00:08:27,750 --> 00:08:34,599
questions okay good

00:08:32,229 --> 00:08:37,529
get some shameless self-promotion of the

00:08:34,599 --> 00:08:37,529

YouTube URL: https://www.youtube.com/watch?v=jcVvkFnK5gc


