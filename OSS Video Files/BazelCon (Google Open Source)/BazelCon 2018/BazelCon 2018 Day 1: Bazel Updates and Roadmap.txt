Title: BazelCon 2018 Day 1: Bazel Updates and Roadmap
Publication date: 2018-11-01
Playlist: BazelCon 2018
Description: 
	Dmitry Lomov (Google) event: Bazelcon 2018; re_ty: Publish; product: Open Source - General; fullname: Dmitry Lomov;
Captions: 
	00:00:02,540 --> 00:00:06,920
hello everyone welcome to New York

00:00:04,550 --> 00:00:08,450
welcome to Bay Hill Khan and Dmitry long

00:00:06,920 --> 00:00:10,940
off I work from Munich office at Google

00:00:08,450 --> 00:00:13,219
I lead the Munich part of the Basel team

00:00:10,940 --> 00:00:15,830
at Google and I want to talk to you

00:00:13,219 --> 00:00:18,320
today about what's coming it was been

00:00:15,830 --> 00:00:22,519
going on last year what's coming next

00:00:18,320 --> 00:00:25,460
right so we have great conference last

00:00:22,519 --> 00:00:27,650
November and just a few highlights from

00:00:25,460 --> 00:00:29,240
a lot of things that we're doing of

00:00:27,650 --> 00:00:32,480
course we heard a lot today about remote

00:00:29,240 --> 00:00:34,190
cashing about the execution star lark

00:00:32,480 --> 00:00:36,590
our extensibility language but a new

00:00:34,190 --> 00:00:38,750
name but it also got a specification a

00:00:36,590 --> 00:00:40,430
style guide format or other toulon

00:00:38,750 --> 00:00:42,590
you'll hear about that today as well and

00:00:40,430 --> 00:00:44,449
we do a lot of Starlog stuff as weather

00:00:42,590 --> 00:00:46,730
storage API for flights and figurations

00:00:44,449 --> 00:00:48,829
c+ rules are getting the great style kpi

00:00:46,730 --> 00:00:50,960
android rules I'm going to start out and

00:00:48,829 --> 00:00:53,180
in general I think they we see that the

00:00:50,960 --> 00:00:55,699
future of the rules the future of basic

00:00:53,180 --> 00:00:57,109
sensibility is star work right you'll

00:00:55,699 --> 00:00:59,239
see more and more that my village is

00:00:57,109 --> 00:01:01,609
coming to star lark and select that

00:00:59,239 --> 00:01:03,859
right so then there is continued support

00:01:01,609 --> 00:01:05,990
for Windows 10 the flow has switched the

00:01:03,859 --> 00:01:09,740
entire build also on Windows to beta

00:01:05,990 --> 00:01:11,720
which is a great step and last on this

00:01:09,740 --> 00:01:15,290
list last but not least is the much much

00:01:11,720 --> 00:01:17,900
better CI system so our CI setup a year

00:01:15,290 --> 00:01:19,340
ago was Jenkins kind of which didn't

00:01:17,900 --> 00:01:21,320
work very well and now we have a much

00:01:19,340 --> 00:01:23,750
much better system that really give us

00:01:21,320 --> 00:01:25,910
confidence in in the quality of stock

00:01:23,750 --> 00:01:28,580
we're doing and of course a lot a lot a

00:01:25,910 --> 00:01:31,070
lot more things that were happening by

00:01:28,580 --> 00:01:32,690
the team in the last year so and then

00:01:31,070 --> 00:01:34,820
you'll hear a lot of lightning talks

00:01:32,690 --> 00:01:36,820
about things today wheels here about

00:01:34,820 --> 00:01:39,350
remote caching execution in depth and

00:01:36,820 --> 00:01:41,540
there'll be more updates throughout the

00:01:39,350 --> 00:01:44,090
this conference about about what we've

00:01:41,540 --> 00:01:45,950
been doing right what I really want to

00:01:44,090 --> 00:01:46,550
talk to you about today is where we go

00:01:45,950 --> 00:01:49,790
from there

00:01:46,550 --> 00:01:53,810
right so if you think about what have I

00:01:49,790 --> 00:01:57,110
told him to be this was we've been using

00:01:53,810 --> 00:01:59,600
basil do you used to be named blaze at

00:01:57,110 --> 00:02:02,510
Google internally for our things and we

00:01:59,600 --> 00:02:04,670
grew to love this development process of

00:02:02,510 --> 00:02:07,610
that Nadia has talked about today this

00:02:04,670 --> 00:02:11,180
fast test fast builds same things for

00:02:07,610 --> 00:02:14,450
languages uniform you know uniform build

00:02:11,180 --> 00:02:16,130
process our developers love it and we

00:02:14,450 --> 00:02:18,320
wanted to share that with the world

00:02:16,130 --> 00:02:21,200
and so that's how we open source Basel

00:02:18,320 --> 00:02:23,540
and when we did that we were kind of we

00:02:21,200 --> 00:02:27,050
didn't know what's out there we we just

00:02:23,540 --> 00:02:29,030
gave what we had to people out out there

00:02:27,050 --> 00:02:31,310
and that was a big experiment we wanted

00:02:29,030 --> 00:02:33,950
to see how it works we want to see what

00:02:31,310 --> 00:02:35,810
will you do with it what's good what's

00:02:33,950 --> 00:02:37,640
working what's not right and all the

00:02:35,810 --> 00:02:39,620
last year I think one one thing it kind

00:02:37,640 --> 00:02:41,720
of happened in the team as well was that

00:02:39,620 --> 00:02:43,700
we took stock of what worked what not

00:02:41,720 --> 00:02:45,800
what lessons we learned and where we

00:02:43,700 --> 00:02:47,210
want to move forward and I think going

00:02:45,800 --> 00:02:49,670
forward we're trying to consolidate that

00:02:47,210 --> 00:02:53,390
to make sure we have something that

00:02:49,670 --> 00:02:55,550
works for people right so one thing we

00:02:53,390 --> 00:02:58,880
did formulate over the last year as well

00:02:55,550 --> 00:03:01,610
was the region of Basel what world want

00:02:58,880 --> 00:03:03,620
to we want to enable with Basel been out

00:03:01,610 --> 00:03:06,140
there right and then that's kind of the

00:03:03,620 --> 00:03:08,060
world we have at Google scaled up to

00:03:06,140 --> 00:03:10,730
sort of entire vault if you will right

00:03:08,060 --> 00:03:14,060
and there are three key things that we

00:03:10,730 --> 00:03:15,350
have it's built fundamentals that you

00:03:14,060 --> 00:03:17,420
have for granted you can build and test

00:03:15,350 --> 00:03:19,300
stuff right and that that's of course

00:03:17,420 --> 00:03:21,260
the most important thing but then

00:03:19,300 --> 00:03:23,150
uniformity of the of the language

00:03:21,260 --> 00:03:25,400
uniformity of the build system means

00:03:23,150 --> 00:03:27,710
that everybody can contribute to any

00:03:25,400 --> 00:03:30,650
project and set it up easily you get

00:03:27,710 --> 00:03:31,820
close your basal builds dot and then you

00:03:30,650 --> 00:03:33,680
you know you get your system up and

00:03:31,820 --> 00:03:36,320
running that's the division we have and

00:03:33,680 --> 00:03:38,480
of course this this works for projects

00:03:36,320 --> 00:03:41,930
of any size team and any size codebase

00:03:38,480 --> 00:03:43,970
right so we need to scale this is the

00:03:41,930 --> 00:03:47,150
bolt we want to have the world where you

00:03:43,970 --> 00:03:49,640
can go to get up get any project use

00:03:47,150 --> 00:03:50,930
basil to build it or and and then get

00:03:49,640 --> 00:03:54,860
get it up and right and start

00:03:50,930 --> 00:03:56,810
contributing right and this is a vision

00:03:54,860 --> 00:03:59,960
but thinking about what kind of features

00:03:56,810 --> 00:04:02,360
basil provide we see these core

00:03:59,960 --> 00:04:04,250
competencies as the most important part

00:04:02,360 --> 00:04:07,250
so Bayhill needs to be multi-language

00:04:04,250 --> 00:04:08,600
support multi-platform builds it has to

00:04:07,250 --> 00:04:09,680
be fastened corrects increment RG

00:04:08,600 --> 00:04:12,320
hermiticity the guarantee

00:04:09,680 --> 00:04:15,770
reproducibility guarantees vision needs

00:04:12,320 --> 00:04:17,000
to have we have the uniform extensible

00:04:15,770 --> 00:04:18,260
build definition language you can use

00:04:17,000 --> 00:04:20,200
four different languages for general a

00:04:18,260 --> 00:04:22,970
transition different ecosystems of

00:04:20,200 --> 00:04:25,010
course the build has to scale so that

00:04:22,970 --> 00:04:27,890
means the only way to scale beyond the

00:04:25,010 --> 00:04:30,080
oshino machine is to to scale towards a

00:04:27,890 --> 00:04:31,970
cluster and that that means room

00:04:30,080 --> 00:04:33,740
they accuse anyone bills so remote bills

00:04:31,970 --> 00:04:36,139
and prosecution a huge important part of

00:04:33,740 --> 00:04:37,789
this whole story then and then the the

00:04:36,139 --> 00:04:40,460
next step that's something that we

00:04:37,789 --> 00:04:42,650
actually learned over time is the

00:04:40,460 --> 00:04:44,449
gradual adoption piece we recognize that

00:04:42,650 --> 00:04:45,860
so you have your project and your

00:04:44,449 --> 00:04:48,319
project you convert your project to

00:04:45,860 --> 00:04:50,300
Basel it might take take a while but if

00:04:48,319 --> 00:04:52,039
if besides that you also face the need

00:04:50,300 --> 00:04:54,949
to convert your entire set of

00:04:52,039 --> 00:04:56,479
dependencies your entire world to Basel

00:04:54,949 --> 00:04:58,550
as well that's not that's not a great

00:04:56,479 --> 00:05:00,620
story so we tried to enable this gradual

00:04:58,550 --> 00:05:02,389
adoption place with same-sex to make

00:05:00,620 --> 00:05:03,650
external rules and other things that are

00:05:02,389 --> 00:05:05,419
we going to talk about during the

00:05:03,650 --> 00:05:07,460
conference as well and of course it

00:05:05,419 --> 00:05:10,430
needs to work on all platforms Google

00:05:07,460 --> 00:05:11,960
intern these all Linux mostly right but

00:05:10,430 --> 00:05:14,719
then of course what out there is Mac OS

00:05:11,960 --> 00:05:16,639
and Windows freebsd other print systems

00:05:14,719 --> 00:05:19,219
so we need major needs to work there as

00:05:16,639 --> 00:05:24,379
well so these are the I guess these are

00:05:19,219 --> 00:05:25,969
the core core competences that we want

00:05:24,379 --> 00:05:28,639
to enable this base and that's became

00:05:25,969 --> 00:05:32,270
very clear and now the I guess next step

00:05:28,639 --> 00:05:33,860
is well we are not there yet you if I

00:05:32,270 --> 00:05:35,599
scan you you will tell me you know five

00:05:33,860 --> 00:05:38,419
things you hate about bases right now

00:05:35,599 --> 00:05:39,949
that we need to fix which means that of

00:05:38,419 --> 00:05:42,409
course we cannot kind of get there

00:05:39,949 --> 00:05:45,020
immediately we will have to change

00:05:42,409 --> 00:05:46,699
things going forward we'll have to

00:05:45,020 --> 00:05:48,139
change things there will be some Jason

00:05:46,699 --> 00:05:48,620
api's and changes and how approach

00:05:48,139 --> 00:05:51,080
Thanks

00:05:48,620 --> 00:05:52,490
they'll have to evolve evolve how ways

00:05:51,080 --> 00:05:54,050
the works evolved to adapt to a new

00:05:52,490 --> 00:05:55,819
languages some of that to adapt in

00:05:54,050 --> 00:05:58,339
eureka systems evolve to adapt to new

00:05:55,819 --> 00:06:01,190
way of doing things and we have to move

00:05:58,339 --> 00:06:05,089
fast right we have to catch up as melody

00:06:01,190 --> 00:06:06,740
said in her talk developer communities

00:06:05,089 --> 00:06:09,560
rapidly evolve and things come up all

00:06:06,740 --> 00:06:12,190
the time then use new stuff is happening

00:06:09,560 --> 00:06:16,729
need to adapt and and catch up and and

00:06:12,190 --> 00:06:19,159
hopefully lead even right but the of

00:06:16,729 --> 00:06:20,599
course and we have been kind of doing

00:06:19,159 --> 00:06:22,129
that we kind of run and run around run

00:06:20,599 --> 00:06:25,219
you but now we realize that we actually

00:06:22,129 --> 00:06:26,779
need to get to a place where the

00:06:25,219 --> 00:06:28,759
community can catch up one of the

00:06:26,779 --> 00:06:30,979
biggest complaint we hear from our users

00:06:28,759 --> 00:06:34,250
is that well basil breaks me all the

00:06:30,979 --> 00:06:36,979
time right so what we want to get to as

00:06:34,250 --> 00:06:40,330
a first order is to get to a place where

00:06:36,979 --> 00:06:40,330
we can manage change

00:06:40,850 --> 00:06:47,180
so this first thing we want to start

00:06:44,450 --> 00:06:50,210
doing Starion maybe in a master so maybe

00:06:47,180 --> 00:06:52,100
in November it is it's having the kind

00:06:50,210 --> 00:06:54,890
of when we do break and changes we do

00:06:52,100 --> 00:06:58,190
that gently do that carefully and this

00:06:54,890 --> 00:07:00,470
means it is rethink we clearly say what

00:06:58,190 --> 00:07:04,400
stuff is unstable and experimental and

00:07:00,470 --> 00:07:08,240
which is not we give all of you space to

00:07:04,400 --> 00:07:09,770
adapt to adjust the changes and we

00:07:08,240 --> 00:07:12,520
communicate those changes extensively

00:07:09,770 --> 00:07:15,080
and openly in a single place right so

00:07:12,520 --> 00:07:16,850
here are some ideas of how you're going

00:07:15,080 --> 00:07:18,800
to do that this is Outland going forward

00:07:16,850 --> 00:07:22,940
that can change over time with your

00:07:18,800 --> 00:07:24,350
feedback of course but so first of all

00:07:22,940 --> 00:07:28,190
we need to figure out what's unstable

00:07:24,350 --> 00:07:29,600
right and the first approximation if you

00:07:28,190 --> 00:07:32,300
have your built-in you run the build

00:07:29,600 --> 00:07:33,650
with deltas experimental flag that's you

00:07:32,300 --> 00:07:35,240
know no guarantees that's unstable it's

00:07:33,650 --> 00:07:36,950
going to break at any time so don't like

00:07:35,240 --> 00:07:39,290
if you if you don't want breakage don't

00:07:36,950 --> 00:07:41,030
do that right however everything else if

00:07:39,290 --> 00:07:43,640
you don't have a data experience of lag

00:07:41,030 --> 00:07:47,450
this behavior is stable and supported so

00:07:43,640 --> 00:07:51,680
you can rely on this and this includes

00:07:47,450 --> 00:07:53,470
things like stock api's this includes

00:07:51,680 --> 00:07:55,580
rules that are bundled with basal

00:07:53,470 --> 00:07:57,890
basically Piazza's you must build one

00:07:55,580 --> 00:08:01,760
protocol secure sea ice flags and their

00:07:57,890 --> 00:08:03,890
semantics so if everybody in the room

00:08:01,760 --> 00:08:05,960
can recognize that this this is a lot of

00:08:03,890 --> 00:08:07,790
a lot to promise there's high room law

00:08:05,960 --> 00:08:09,890
that you probably know that people will

00:08:07,790 --> 00:08:11,600
depend on your box and people window

00:08:09,890 --> 00:08:13,550
things and we can accidentally break you

00:08:11,600 --> 00:08:15,650
that might happen but when we do

00:08:13,550 --> 00:08:17,690
intentional changes to the system we

00:08:15,650 --> 00:08:19,340
will will follow this this guidance if

00:08:17,690 --> 00:08:20,870
there's an intentional changes if there

00:08:19,340 --> 00:08:22,520
are bugs or issues we will deal with

00:08:20,870 --> 00:08:24,320
them in in some manner and you'll figure

00:08:22,520 --> 00:08:26,810
out what the breakage is how can fix

00:08:24,320 --> 00:08:29,000
that rollback we will maybe figure out

00:08:26,810 --> 00:08:31,880
how to fix things but our intentions are

00:08:29,000 --> 00:08:33,919
that as though Ana stuff is not an

00:08:31,880 --> 00:08:38,870
experimental flag it's stable it's

00:08:33,919 --> 00:08:42,860
supported right okay so now but of

00:08:38,870 --> 00:08:44,210
course we cannot just keep things at the

00:08:42,860 --> 00:08:46,220
same place right they have to move

00:08:44,210 --> 00:08:48,560
forward so we will have to do some

00:08:46,220 --> 00:08:52,610
breaking changes the idea there is that

00:08:48,560 --> 00:08:54,770
we will the key principle there is that

00:08:52,610 --> 00:08:58,399
will avoid upgrade

00:08:54,770 --> 00:09:01,010
for for the breaking changes so that at

00:08:58,399 --> 00:09:04,190
any time you can take vital updates next

00:09:01,010 --> 00:09:07,610
release and then at your own pace at

00:09:04,190 --> 00:09:09,080
your own time update your code to catch

00:09:07,610 --> 00:09:11,779
up as a next three days

00:09:09,080 --> 00:09:14,180
in that year this is here for every

00:09:11,779 --> 00:09:16,640
incompatible change that we have we will

00:09:14,180 --> 00:09:18,709
have a migration window that migration

00:09:16,640 --> 00:09:20,660
window will be released during that

00:09:18,709 --> 00:09:25,070
 release you can actually update

00:09:20,660 --> 00:09:26,570
your code and every incubate will change

00:09:25,070 --> 00:09:28,640
you'll come up with a flag that will

00:09:26,570 --> 00:09:30,770
return to off but available in the

00:09:28,640 --> 00:09:33,860
migration window release and there'll be

00:09:30,770 --> 00:09:36,170
a migration recipe that migration recipe

00:09:33,860 --> 00:09:38,540
will tell you how to update your code so

00:09:36,170 --> 00:09:41,060
that it works with the flag on and off

00:09:38,540 --> 00:09:42,890
in that beta release so for example if

00:09:41,060 --> 00:09:45,350
there is a if you rename a start

00:09:42,890 --> 00:09:46,880
function we will keep the durand

00:09:45,350 --> 00:09:48,800
emigration window there's old name or

00:09:46,880 --> 00:09:50,060
old name function and new name function

00:09:48,800 --> 00:09:51,800
in the same release so you can just

00:09:50,060 --> 00:09:55,430
update your code you can keep using the

00:09:51,800 --> 00:09:57,830
release it will still work and you kind

00:09:55,430 --> 00:09:59,089
of once you do that you can eat it up

00:09:57,830 --> 00:10:01,850
greater the next trees you don't have to

00:09:59,089 --> 00:10:03,050
you're not bound to update your code at

00:10:01,850 --> 00:10:06,920
the same time as you have the attorneys

00:10:03,050 --> 00:10:09,470
so that's kind of this story you want to

00:10:06,920 --> 00:10:11,690
give you we want to be at a place where

00:10:09,470 --> 00:10:14,300
a community is able to follow the

00:10:11,690 --> 00:10:16,880
changes but the community is not stuck

00:10:14,300 --> 00:10:19,370
behind bad releases specific releases

00:10:16,880 --> 00:10:20,779
and doesn't need to kind of go in jumps

00:10:19,370 --> 00:10:23,990
we really want to have a smooth

00:10:20,779 --> 00:10:25,690
transition towards towards new new

00:10:23,990 --> 00:10:30,380
things right

00:10:25,690 --> 00:10:34,130
so yeah the when this new changes come

00:10:30,380 --> 00:10:36,020
in the what you should do is you're a

00:10:34,130 --> 00:10:38,480
big basil you go through your code up

00:10:36,020 --> 00:10:39,890
they applied emigration recipes you can

00:10:38,480 --> 00:10:41,450
validate that with that trees as well

00:10:39,890 --> 00:10:43,820
using about you'll change flights tend

00:10:41,450 --> 00:10:45,770
to own if it's turn two on it passes it

00:10:43,820 --> 00:10:48,230
should work on the x-rays but then for

00:10:45,770 --> 00:10:50,450
your development production builds you

00:10:48,230 --> 00:10:51,860
should really use basil as released

00:10:50,450 --> 00:10:54,529
without any flags and you should not

00:10:51,860 --> 00:10:56,089
tell you know people downstream to using

00:10:54,529 --> 00:10:58,610
compatible flags it should always be

00:10:56,089 --> 00:11:02,020
basil release basil in the kind of

00:10:58,610 --> 00:11:02,020
pristine state okay

00:11:02,250 --> 00:11:06,360
and then of course we will communicate

00:11:03,990 --> 00:11:07,890
those changes profusely will have every

00:11:06,360 --> 00:11:10,560
capital change will come as a flag

00:11:07,890 --> 00:11:13,740
they'll have a github issue with a

00:11:10,560 --> 00:11:16,560
recipe to emigrate hopefully migration

00:11:13,740 --> 00:11:18,660
tools style our team did a lot of put a

00:11:16,560 --> 00:11:20,400
lot of effort in building for matters

00:11:18,660 --> 00:11:21,990
and refactoring tools so hopefully

00:11:20,400 --> 00:11:24,990
leverage that to provide you some

00:11:21,990 --> 00:11:26,370
automatic tools migrated as well and in

00:11:24,990 --> 00:11:28,260
the release notes for further years

00:11:26,370 --> 00:11:30,480
we'll announce which changes are flipped

00:11:28,260 --> 00:11:32,490
on next you know the next release and

00:11:30,480 --> 00:11:34,410
then that's your turn now you can use

00:11:32,490 --> 00:11:35,730
that to update your code and you can

00:11:34,410 --> 00:11:37,740
provide feedback on those get our issues

00:11:35,730 --> 00:11:39,840
and tell us if the migration recipes are

00:11:37,740 --> 00:11:41,340
on or if the change happened too fast or

00:11:39,840 --> 00:11:43,770
something that so we can you know we can

00:11:41,340 --> 00:11:46,350
adjust our pace but one thing I really

00:11:43,770 --> 00:11:48,750
want you to do is to give us feedback

00:11:46,350 --> 00:11:50,580
test the others back see if that works

00:11:48,750 --> 00:11:56,010
that system works that you know that Mel

00:11:50,580 --> 00:12:00,210
that procedure works for you okay so

00:11:56,010 --> 00:12:02,580
this is this plan is from managing

00:12:00,210 --> 00:12:04,560
change right we need to first we need to

00:12:02,580 --> 00:12:06,840
manage it interpret what we change how

00:12:04,560 --> 00:12:07,620
we break how we break people I've been

00:12:06,840 --> 00:12:09,180
doing this

00:12:07,620 --> 00:12:10,950
in a good way do we have a good good

00:12:09,180 --> 00:12:12,720
immigration story but of course then the

00:12:10,950 --> 00:12:15,720
next step is to increase stability by

00:12:12,720 --> 00:12:17,550
you know not not actually shipping this

00:12:15,720 --> 00:12:20,190
changes every release but we will you'll

00:12:17,550 --> 00:12:23,190
grab the raise ratchet up the the size

00:12:20,190 --> 00:12:25,530
of the stability window of to maybe for

00:12:23,190 --> 00:12:27,870
three months and six months and then on

00:12:25,530 --> 00:12:30,780
and on and on right so this is a plan we

00:12:27,870 --> 00:12:33,350
kind of we will get a stability in or

00:12:30,780 --> 00:12:35,310
gather through this process of

00:12:33,350 --> 00:12:37,860
communication and manage individual

00:12:35,310 --> 00:12:43,680
changes and then increase in the

00:12:37,860 --> 00:12:47,250
stability winters alright so and just a

00:12:43,680 --> 00:12:49,290
bit of guidance with this system is your

00:12:47,250 --> 00:12:50,820
production build should not require any

00:12:49,290 --> 00:12:54,660
experimental compatible flags at all

00:12:50,820 --> 00:12:56,970
right don't take if you if you run it

00:12:54,660 --> 00:13:00,990
builds don't use those it's a bad time

00:12:56,970 --> 00:13:03,030
right and so do do test your bills as as

00:13:00,990 --> 00:13:06,210
B Hill comes along and that's especially

00:13:03,030 --> 00:13:08,370
important for those who maintain things

00:13:06,210 --> 00:13:09,960
like rule sets or sort of important

00:13:08,370 --> 00:13:11,220
connected nodes in the ecosystems that

00:13:09,960 --> 00:13:13,530
say I have a popular library that's

00:13:11,220 --> 00:13:15,300
built as basil or you have a you know a

00:13:13,530 --> 00:13:15,660
rule set then definitely do that

00:13:15,300 --> 00:13:17,850
definite

00:13:15,660 --> 00:13:20,250
try to follow the change and we'll help

00:13:17,850 --> 00:13:22,050
you with that and definitely test all

00:13:20,250 --> 00:13:24,150
these candidates get yet more get us

00:13:22,050 --> 00:13:25,980
more feedback about what what things we

00:13:24,150 --> 00:13:27,510
are doing if you do accidental breaking

00:13:25,980 --> 00:13:29,340
changes tell us about that so we can

00:13:27,510 --> 00:13:31,080
help and I just adapt and figure out

00:13:29,340 --> 00:13:38,010
what was the right solution in a

00:13:31,080 --> 00:13:40,080
specific cases right so this is this is

00:13:38,010 --> 00:13:41,490
something about the breaking changes and

00:13:40,080 --> 00:13:44,730
this is about some space over

00:13:41,490 --> 00:13:46,530
development but then I really want to

00:13:44,730 --> 00:13:49,590
talk about sort of what what's happening

00:13:46,530 --> 00:13:52,050
and I guess I think we'll see the motive

00:13:49,590 --> 00:13:54,500
of the stock array it's it's basil is

00:13:52,050 --> 00:13:57,270
becoming from a better tool from a

00:13:54,500 --> 00:13:59,880
experimenta to try to run with success

00:13:57,270 --> 00:14:02,010
and we try to make it and the supported

00:13:59,880 --> 00:14:04,440
made sure to that people can actually

00:14:02,010 --> 00:14:07,050
use can rely on in there you know during

00:14:04,440 --> 00:14:09,300
the DevOps iterations and basil is

00:14:07,050 --> 00:14:11,430
nothing without our ecosystem we cannot

00:14:09,300 --> 00:14:13,190
possibly provide all the support for all

00:14:11,430 --> 00:14:15,930
the language on the planet for all the

00:14:13,190 --> 00:14:17,340
all the ecosystems all the development

00:14:15,930 --> 00:14:19,950
environments all the all the things

00:14:17,340 --> 00:14:23,580
people are doing it's very you're very

00:14:19,950 --> 00:14:26,370
diverse audience and without people like

00:14:23,580 --> 00:14:30,030
you know it I and and other folks and

00:14:26,370 --> 00:14:32,880
weeks for doing rules kala or another

00:14:30,030 --> 00:14:34,710
examples like that we cannot really push

00:14:32,880 --> 00:14:38,580
the you know push push this for we

00:14:34,710 --> 00:14:40,500
cannot deliver this very so basil museum

00:14:38,580 --> 00:14:42,720
is impossible without ecosystem around

00:14:40,500 --> 00:14:44,730
basil which means that once basil

00:14:42,720 --> 00:14:49,020
matures basically like our systems it

00:14:44,730 --> 00:14:50,730
needs to mature to again remember now

00:14:49,020 --> 00:14:53,490
our core competences this multi-language

00:14:50,730 --> 00:14:56,520
multi-platform that's a part where where

00:14:53,490 --> 00:14:58,320
the ecosystem comes in right and we can

00:14:56,520 --> 00:15:02,220
use start our uniform States will

00:14:58,320 --> 00:15:05,490
language to to provide that value but

00:15:02,220 --> 00:15:06,720
then of course for every ecosystem there

00:15:05,490 --> 00:15:08,820
should be a rule set and that rule set

00:15:06,720 --> 00:15:10,440
needs to support support something new

00:15:08,820 --> 00:15:12,360
to be well supported and it needs to

00:15:10,440 --> 00:15:14,550
have properties that that enable this

00:15:12,360 --> 00:15:15,930
vision for this particular ecosystem so

00:15:14,550 --> 00:15:17,790
if you kind of look at what are the

00:15:15,930 --> 00:15:20,400
requirements on the on the good role set

00:15:17,790 --> 00:15:22,620
if we summarize that in this like six

00:15:20,400 --> 00:15:24,750
points so definition support building

00:15:22,620 --> 00:15:26,520
test for that it so supports stuff like

00:15:24,750 --> 00:15:28,560
package manager so you can import your

00:15:26,520 --> 00:15:29,820
search by the dependencies it has to be

00:15:28,560 --> 00:15:30,840
extensible interrupt

00:15:29,820 --> 00:15:32,730
so four people are familiar with

00:15:30,840 --> 00:15:34,830
sandwich that's what I mean right so you

00:15:32,730 --> 00:15:36,900
can depend on this stuff from other

00:15:34,830 --> 00:15:39,360
other languages it has to be remote

00:15:36,900 --> 00:15:41,940
efficient ready which means to change

00:15:39,360 --> 00:15:44,370
your ability there should be some ID

00:15:41,940 --> 00:15:45,600
support if possible and of course there

00:15:44,370 --> 00:15:48,840
should be some engineering practice

00:15:45,600 --> 00:15:50,010
around around rule set it shouldn't be

00:15:48,840 --> 00:15:52,200
just you know here's a bunch of code on

00:15:50,010 --> 00:15:54,930
github it's there and nobody you know

00:15:52,200 --> 00:15:58,070
maintains that there should be some sort

00:15:54,930 --> 00:16:00,690
of an ownership some sort of you know

00:15:58,070 --> 00:16:01,610
configuration should be updated and so

00:16:00,690 --> 00:16:04,920
on so forth

00:16:01,610 --> 00:16:08,610
so what we came up is and basically like

00:16:04,920 --> 00:16:12,060
I said basil as a product basil I just

00:16:08,610 --> 00:16:15,420
think that people can actually use is

00:16:12,060 --> 00:16:17,250
nothing without rule sets and the way we

00:16:15,420 --> 00:16:19,020
want to and but of course we cannot own

00:16:17,250 --> 00:16:21,780
all the rule sets so what you want to

00:16:19,020 --> 00:16:26,010
have is a notion of this recommended

00:16:21,780 --> 00:16:28,290
rule set a rule set for which we have

00:16:26,010 --> 00:16:29,880
clear owners and for which base basil

00:16:28,290 --> 00:16:31,530
team can say all right for this record

00:16:29,880 --> 00:16:34,950
system we have a rule set that people

00:16:31,530 --> 00:16:37,170
can actually rely on right you know and

00:16:34,950 --> 00:16:39,810
so the idea here is that we will as a

00:16:37,170 --> 00:16:42,600
team as a community find and recommend

00:16:39,810 --> 00:16:44,160
those rule sets and we will have an

00:16:42,600 --> 00:16:46,740
objective and open criteria for

00:16:44,160 --> 00:16:48,480
recommending those roses and some of

00:16:46,740 --> 00:16:50,580
those are here so it's got to be a good

00:16:48,480 --> 00:16:53,850
rule set in the sense of Brio slide it

00:16:50,580 --> 00:16:55,110
has to provide all the features I think

00:16:53,850 --> 00:16:56,840
more importantly has to be documented

00:16:55,110 --> 00:16:59,670
and tested and follow the best practices

00:16:56,840 --> 00:17:02,490
and it has to be maintained it has to be

00:16:59,670 --> 00:17:05,430
an ownership behind this somebody who's

00:17:02,490 --> 00:17:07,860
willing to maintain that rule said fix

00:17:05,430 --> 00:17:11,940
bugs adjust the changes and so on so

00:17:07,860 --> 00:17:13,860
forth of course basil team in terms of

00:17:11,940 --> 00:17:17,610
Google standing behind basil will

00:17:13,860 --> 00:17:19,850
provide resources to to the maintenance

00:17:17,610 --> 00:17:23,820
of those team of those rule sets such as

00:17:19,850 --> 00:17:25,980
CIA consideration support we will

00:17:23,820 --> 00:17:30,510
promote on github or basil builds we

00:17:25,980 --> 00:17:32,610
will use advertise you're all set so

00:17:30,510 --> 00:17:34,530
this kind of stuff will happen so I see

00:17:32,610 --> 00:17:36,570
this as sort of a kind of a partnership

00:17:34,530 --> 00:17:40,920
that we will have with those people who

00:17:36,570 --> 00:17:42,630
maintain those rosettes right yeah so

00:17:40,920 --> 00:17:45,690
this is this is the the

00:17:42,630 --> 00:17:49,770
this this is the futures receipt where

00:17:45,690 --> 00:17:52,740
we will have stable support Basel and an

00:17:49,770 --> 00:17:54,570
ecosystem with clear rules about what

00:17:52,740 --> 00:17:57,780
what's good what what's not so good

00:17:54,570 --> 00:18:00,300
and sort of what what's experiment was

00:17:57,780 --> 00:18:03,450
not at all stable what's recommended and

00:18:00,300 --> 00:18:05,190
you'll work over over the next few

00:18:03,450 --> 00:18:06,390
months in engaging those who's right but

00:18:05,190 --> 00:18:11,490
that's that's the direction you want to

00:18:06,390 --> 00:18:21,270
go right okay so let's talk about beta

00:18:11,490 --> 00:18:25,380
1.0 the beta 1 / 0 is really some sort

00:18:21,270 --> 00:18:29,700
of place where we I would even say if we

00:18:25,380 --> 00:18:32,790
finish one phase of our life cycle as a

00:18:29,700 --> 00:18:36,720
product we get to another place and this

00:18:32,790 --> 00:18:38,370
new place will be we we have to be

00:18:36,720 --> 00:18:40,140
stable we have to make sure that we

00:18:38,370 --> 00:18:42,960
don't break our is all the time but we

00:18:40,140 --> 00:18:44,760
also need to kind of fulfill the there

00:18:42,960 --> 00:18:47,010
is sudden value behind base it reads to

00:18:44,760 --> 00:18:48,330
deliver that value for select to the set

00:18:47,010 --> 00:18:49,440
of ecosystems we can't deliver that

00:18:48,330 --> 00:18:51,180
value for the whole world that's

00:18:49,440 --> 00:18:52,590
impossible but we need to focus we need

00:18:51,180 --> 00:18:56,220
to find ok here's a here's the things

00:18:52,590 --> 00:19:01,260
where beta can really shine and we can

00:18:56,220 --> 00:19:04,980
focus on those right so beta 1 + 0 is

00:19:01,260 --> 00:19:06,750
stable Basel with good rule sets for for

00:19:04,980 --> 00:19:08,010
some rekha systems alright and and we as

00:19:06,750 --> 00:19:10,380
a team will probably put our weight

00:19:08,010 --> 00:19:11,760
behind certain Oh some of those but of

00:19:10,380 --> 00:19:15,210
course we welcome your preparation with

00:19:11,760 --> 00:19:18,870
you know this other things that that you

00:19:15,210 --> 00:19:21,420
want to be a part of that thing okay so

00:19:18,870 --> 00:19:24,150
now I'm going to show a slide that slide

00:19:21,420 --> 00:19:26,520
has at least I'm very resistant to show

00:19:24,150 --> 00:19:28,860
it because the lists are always they

00:19:26,520 --> 00:19:32,280
stuck in your mind right and then you

00:19:28,860 --> 00:19:35,040
are are this list so here is the list of

00:19:32,280 --> 00:19:36,630
things that to be think we that are

00:19:35,040 --> 00:19:39,060
committed that we know there's a team

00:19:36,630 --> 00:19:42,360
behind right people committed to

00:19:39,060 --> 00:19:45,140
actually make it to beta 1 4 0 so that's

00:19:42,360 --> 00:19:47,970
kind of server-side Java C both class

00:19:45,140 --> 00:19:49,470
angular support or feature here in you

00:19:47,970 --> 00:19:53,010
know in the next talk from Alex and

00:19:49,470 --> 00:19:56,220
Andrew it right this is you know this is

00:19:53,010 --> 00:19:59,640
not a fan list definitely we can add

00:19:56,220 --> 00:20:01,110
more rules here and as we develop this

00:19:59,640 --> 00:20:02,429
criteria for recommend rule sets it's

00:20:01,110 --> 00:20:04,890
just about you know making the date

00:20:02,429 --> 00:20:07,200
pretty much right but basically these

00:20:04,890 --> 00:20:10,530
are the ones we already have and and we

00:20:07,200 --> 00:20:13,620
might have more right and yeah everybody

00:20:10,530 --> 00:20:19,260
on a date we will commit to date soon

00:20:13,620 --> 00:20:21,270
we're very very sure so you know it

00:20:19,260 --> 00:20:23,390
looks like you people are software

00:20:21,270 --> 00:20:27,059
engineers right you know what it is

00:20:23,390 --> 00:20:30,299
but you think we we need to feel as a

00:20:27,059 --> 00:20:32,460
team we need to to find out the right

00:20:30,299 --> 00:20:34,169
place find out the right road maps and

00:20:32,460 --> 00:20:36,240
one part of that is feedback from this

00:20:34,169 --> 00:20:38,850
conference if if you guys something

00:20:36,240 --> 00:20:41,360
Wow rules Python is so important then

00:20:38,850 --> 00:20:44,490
and we can try to kind of get this

00:20:41,360 --> 00:20:46,590
community around them and so maybe we

00:20:44,490 --> 00:20:47,580
can kind of adjust the date a little bit

00:20:46,590 --> 00:20:49,799
or something

00:20:47,580 --> 00:20:51,750
but basically one reason why this we

00:20:49,799 --> 00:20:52,830
commit today as soon as here instead of

00:20:51,750 --> 00:20:55,620
a date is because we want to hear

00:20:52,830 --> 00:20:59,610
feedback from you all right and then I

00:20:55,620 --> 00:21:01,260
want to give you this we are it's it's a

00:20:59,610 --> 00:21:03,030
phase transition we started we all sat

00:21:01,260 --> 00:21:05,400
in the face transition if you do not

00:21:03,030 --> 00:21:06,929
intend to it to be long it is not years

00:21:05,400 --> 00:21:10,020
and years it's months it's may be

00:21:06,929 --> 00:21:11,730
several months right and basil needs to

00:21:10,020 --> 00:21:13,919
grow up used to become dependable

00:21:11,730 --> 00:21:15,630
reliable just like it's this teenager

00:21:13,919 --> 00:21:18,059
saying right before before we were

00:21:15,630 --> 00:21:20,159
brilliant but we were not reliable we

00:21:18,059 --> 00:21:22,830
were we had mood swings we are fishes

00:21:20,159 --> 00:21:25,080
and now and we can we have to grow out

00:21:22,830 --> 00:21:27,450
of that we have to continue being

00:21:25,080 --> 00:21:29,640
brilliant you know try to get yet even

00:21:27,450 --> 00:21:30,870
more brilliant but still we need to

00:21:29,640 --> 00:21:33,240
become dependent arrival that's it

00:21:30,870 --> 00:21:35,820
that's I see these and not features as a

00:21:33,240 --> 00:21:38,400
our primary goal for the next next few

00:21:35,820 --> 00:21:40,559
months right and then you know once once

00:21:38,400 --> 00:21:42,450
we get there once we have to depend on

00:21:40,559 --> 00:21:44,520
reliable state we don't consider stuff

00:21:42,450 --> 00:21:48,390
other stuff right so for example we hear

00:21:44,520 --> 00:21:49,980
so much about say bill file generation

00:21:48,390 --> 00:21:52,590
support can be integrated to the Basel

00:21:49,980 --> 00:21:54,210
about all the compilers that keep state

00:21:52,590 --> 00:21:57,270
these kind of things which are

00:21:54,210 --> 00:22:00,299
interesting projects which will have we

00:21:57,270 --> 00:22:01,470
will maybe work on experimental mode but

00:22:00,299 --> 00:22:02,280
they will probably not be a part of

00:22:01,470 --> 00:22:05,730
basic lambda0

00:22:02,280 --> 00:22:08,159
right so but again basil T will try to

00:22:05,730 --> 00:22:09,960
make it so will try to become you know

00:22:08,159 --> 00:22:12,299
we are going to grow up

00:22:09,960 --> 00:22:15,210
better at that and we need your help as

00:22:12,299 --> 00:22:19,010
that as well all people in this room a

00:22:15,210 --> 00:22:22,649
part of our basilica system help us with

00:22:19,010 --> 00:22:24,360
help us with adapt interchange help us

00:22:22,649 --> 00:22:25,919
with Brian feedback help us with station

00:22:24,360 --> 00:22:29,730
are all these candidates help us with

00:22:25,919 --> 00:22:32,730
updating the rules help us by being good

00:22:29,730 --> 00:22:34,770
citizens in the rule deca system yes

00:22:32,730 --> 00:22:37,550
so with that thank you very much for

00:22:34,770 --> 00:22:45,050
coming here and welcome

00:22:37,550 --> 00:22:45,050
[Applause]

00:22:49,760 --> 00:22:51,820

YouTube URL: https://www.youtube.com/watch?v=hH-DEgk_FDw


