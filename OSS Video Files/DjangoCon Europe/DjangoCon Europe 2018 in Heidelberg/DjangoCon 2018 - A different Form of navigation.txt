Title: DjangoCon 2018 - A different Form of navigation
Publication date: 2018-05-23
Playlist: DjangoCon Europe 2018 in Heidelberg
Description: 
	https://media.ccc.de/v/hd-113-a-different-form-of-navigation



Web tooling for data analysis requires, at its heart, a way to select the data a user want's to analyze. This talk shows how you can use forms to pass data among pages, retain the selected form elements through the request/response cycle and build web interfaces that utilize forms while looking like simple link elements. I will also show how I use my [django-modelqueryform](https://django-modelqueryform.readthedocs.io/en/latest/) package to facilitate an advanced user-centric data filtering interface.

Data analysis and visualization tools are different than many applications we build with django. They are not simple CRUD apps, and different users often want to use vastly different data subsets for their analysis. 

- The talk will start with a quick demo of such an application to give context. 
- Overview of the functionality provided by [django-modelqueryform](https://django-modelqueryform.readthedocs.io/en/latest/
- Building widgets that encapsulate an instance of the form
- Coding required to maintain the form context through the request/response cycle so that the data selection is maintained through navigation to different analysis types
- Questions/Comments

Chaim Kirby
Captions: 
	00:00:06,930 --> 00:00:09,260
so today I'm going to talk about a

00:00:08,190 --> 00:00:11,240
different form of

00:00:09,260 --> 00:00:13,130
vacation we're gonna talk about forms

00:00:11,240 --> 00:00:15,320
forms are awesome everybody use forms

00:00:13,130 --> 00:00:17,990
before right and we use contact pages

00:00:15,320 --> 00:00:21,400
Django admin site signups I'm you use a

00:00:17,990 --> 00:00:23,900
form 50 percent of crud create an update

00:00:21,400 --> 00:00:26,000
usually those use more forms they're

00:00:23,900 --> 00:00:27,980
great for shuttling data into databases

00:00:26,000 --> 00:00:29,780
I'm not going to talk about any of that

00:00:27,980 --> 00:00:31,250
it's great not going to talk about it

00:00:29,780 --> 00:00:33,890
today I'm actually going to show you a

00:00:31,250 --> 00:00:36,230
way to use forms not for data collection

00:00:33,890 --> 00:00:41,000
but actually is a core element for user

00:00:36,230 --> 00:00:44,330
navigation and interaction most of us

00:00:41,000 --> 00:00:45,890
have lots of data data we get data we

00:00:44,330 --> 00:00:49,850
get from other systems data that users

00:00:45,890 --> 00:00:50,960
give us there are people that were

00:00:49,850 --> 00:00:52,850
writing software for they want to

00:00:50,960 --> 00:00:54,530
understand that data as we just learned

00:00:52,850 --> 00:00:56,299
they could use a I am machine learning

00:00:54,530 --> 00:00:58,100
but they're not always technical they

00:00:56,299 --> 00:00:59,540
don't have the money for it or they just

00:00:58,100 --> 00:01:01,729
say hey I have a developer I'll have

00:00:59,540 --> 00:01:03,979
them do it so they asked us to build an

00:01:01,729 --> 00:01:05,810
interface so they can understand their

00:01:03,979 --> 00:01:07,190
data they can inspect their data or they

00:01:05,810 --> 00:01:10,880
can just say hey I'm interested in

00:01:07,190 --> 00:01:12,200
something let me take a look at it you

00:01:10,880 --> 00:01:14,360
can use the techniques that I'm going to

00:01:12,200 --> 00:01:16,790
show you to build a power search in

00:01:14,360 --> 00:01:22,010
advanced search build other tooling on

00:01:16,790 --> 00:01:24,680
top of that we have Python we have SQL

00:01:22,010 --> 00:01:28,340
those are great at dealing with big data

00:01:24,680 --> 00:01:32,090
big data lots of data data analysis we

00:01:28,340 --> 00:01:34,130
just need tools to tell the database to

00:01:32,090 --> 00:01:37,820
tell django Python what we want to do

00:01:34,130 --> 00:01:43,600
with that and these are not the tools we

00:01:37,820 --> 00:01:46,430
want we need a better tool to let our

00:01:43,600 --> 00:01:53,810
analysts tell the database what they

00:01:46,430 --> 00:01:55,400
want to do i work in healthcare and the

00:01:53,810 --> 00:01:57,320
the people who want to look at the data

00:01:55,400 --> 00:01:58,700
their old model was they'd call a

00:01:57,320 --> 00:02:00,920
developer and say hey i want to

00:01:58,700 --> 00:02:02,690
understand this data I want numerators

00:02:00,920 --> 00:02:05,270
defined in this way denominators to find

00:02:02,690 --> 00:02:08,030
him this way okay let's build a contract

00:02:05,270 --> 00:02:09,560
to build out that one report five months

00:02:08,030 --> 00:02:13,220
later the contracts done it's all signed

00:02:09,560 --> 00:02:14,750
and then two weeks three weeks four

00:02:13,220 --> 00:02:16,970
weeks later whenever somebody found some

00:02:14,750 --> 00:02:18,859
time here's a report five minutes later

00:02:16,970 --> 00:02:19,519
that's not what I wanted all right let's

00:02:18,859 --> 00:02:21,560
do it again

00:02:19,519 --> 00:02:23,150
so maybe once or twice a year you get

00:02:21,560 --> 00:02:25,820
the report that you want

00:02:23,150 --> 00:02:26,930
so I'm gonna use a case study to give

00:02:25,820 --> 00:02:29,750
you an example and then we're going to

00:02:26,930 --> 00:02:31,910
build it out that I built to handle this

00:02:29,750 --> 00:02:33,860
so the case study is called risk scape

00:02:31,910 --> 00:02:35,420
that's the name of an application it's

00:02:33,860 --> 00:02:38,150
got about a hundred 50 gigabytes of data

00:02:35,420 --> 00:02:41,570
on the back end about 130 million

00:02:38,150 --> 00:02:43,220
records and each record has 47 fields a

00:02:41,570 --> 00:02:46,390
lot of those are know a lot of those

00:02:43,220 --> 00:02:50,360
carry over but there's 47 fields in them

00:02:46,390 --> 00:02:52,880
and that's an image of the front page of

00:02:50,360 --> 00:02:55,700
risk scape this is a video I didn't

00:02:52,880 --> 00:02:57,260
trust myself to do a live demo so we're

00:02:55,700 --> 00:02:59,630
going to see if this works now if not

00:02:57,260 --> 00:03:01,850
I'll bring up VLC or something and do

00:02:59,630 --> 00:03:03,530
the demo that way I'm going to pause it

00:03:01,850 --> 00:03:09,530
and describe what you're seeing as we go

00:03:03,530 --> 00:03:14,360
so front page of risk ape wonderful so

00:03:09,530 --> 00:03:16,430
as we go awesome so this should look

00:03:14,360 --> 00:03:18,200
like a form maybe to people this is

00:03:16,430 --> 00:03:20,060
using bootstrap and a lot of jQuery

00:03:18,200 --> 00:03:22,370
happy to talk about that another time if

00:03:20,060 --> 00:03:23,989
anybody wants to know but in fact

00:03:22,370 --> 00:03:26,270
there's two forms here so you can see

00:03:23,989 --> 00:03:28,160
where it says outcome that's one form on

00:03:26,270 --> 00:03:30,769
inclusion criteria that's another form

00:03:28,160 --> 00:03:33,320
the data is broadly similar they use the

00:03:30,769 --> 00:03:35,810
same underlying 47 fields but there are

00:03:33,320 --> 00:03:38,000
some differences a and how it's

00:03:35,810 --> 00:03:40,010
displayed and B some of the fields that

00:03:38,000 --> 00:03:41,630
are there but broadly speaking for this

00:03:40,010 --> 00:03:44,209
application outcome is a numerator

00:03:41,630 --> 00:03:46,160
inclusion criteria denominator for the

00:03:44,209 --> 00:03:49,820
graphs and things that our users my

00:03:46,160 --> 00:03:52,640
users ultimately want to see and here we

00:03:49,820 --> 00:03:53,780
are just doing some selection that this

00:03:52,640 --> 00:03:57,080
is saying I want to see people with type

00:03:53,780 --> 00:04:02,799
2 diabetes and took me a minute to pick

00:03:57,080 --> 00:04:05,269
one and I said they have unhealthy BMI

00:04:02,799 --> 00:04:08,230
and I didn't change the inclusion

00:04:05,269 --> 00:04:13,730
criteria so now I want to map it and

00:04:08,230 --> 00:04:15,470
we're gonna get a map so that used a

00:04:13,730 --> 00:04:17,180
form everybody understands that that was

00:04:15,470 --> 00:04:19,640
a form we submitted it and you can see

00:04:17,180 --> 00:04:20,840
up top our outcomes of interest those

00:04:19,640 --> 00:04:23,690
were the outcomes and inclusion criteria

00:04:20,840 --> 00:04:26,419
those were the inclusion criteria so far

00:04:23,690 --> 00:04:29,860
nothing too interesting this is where I

00:04:26,419 --> 00:04:29,860
think things get interesting

00:04:30,160 --> 00:04:35,800
I just jumped to another tab and this is

00:04:34,030 --> 00:04:37,440
not a single page application that

00:04:35,800 --> 00:04:40,060
actually made a request to the backend

00:04:37,440 --> 00:04:41,500
but it kept the context of the form you

00:04:40,060 --> 00:04:43,660
can see above the outcome in the

00:04:41,500 --> 00:04:45,010
inclusion criteria exactly the same so

00:04:43,660 --> 00:04:47,350
that form propagated through to a

00:04:45,010 --> 00:04:49,810
completely new page completely new view

00:04:47,350 --> 00:04:52,210
the data is also different same

00:04:49,810 --> 00:04:53,590
underlying data but on the last page it

00:04:52,210 --> 00:04:55,690
was stratified by zip code

00:04:53,590 --> 00:05:03,850
now it's stratified as you can see by

00:04:55,690 --> 00:05:06,280
age group and we did it again and that

00:05:03,850 --> 00:05:08,770
is sped up I cut quite a few frames out

00:05:06,280 --> 00:05:12,790
but it is still useable on the real data

00:05:08,770 --> 00:05:14,470
set it takes two to three minutes and I

00:05:12,790 --> 00:05:15,670
want to speed it up but the people who

00:05:14,470 --> 00:05:17,530
use this don't want to pay anymore they

00:05:15,670 --> 00:05:18,610
said two to three minutes is fine so

00:05:17,530 --> 00:05:20,890
that's what it does but again the

00:05:18,610 --> 00:05:24,340
context of our forum flowed through

00:05:20,890 --> 00:05:26,590
pretty cool and now one more and I think

00:05:24,340 --> 00:05:31,390
in even neater trick we're gonna go back

00:05:26,590 --> 00:05:32,680
to the dashboard and I'm just going to

00:05:31,390 --> 00:05:34,740
make a selection I'm going to click on a

00:05:32,680 --> 00:05:34,740
link

00:05:38,990 --> 00:05:43,190
another map but if you notice at the top

00:05:41,930 --> 00:05:45,860
the outcome of interest in inclusion

00:05:43,190 --> 00:05:47,960
criteria they're populated that used a

00:05:45,860 --> 00:05:50,710
forum nobody saw a forum I clicked on a

00:05:47,960 --> 00:05:53,270
link but that actually did use a forum

00:05:50,710 --> 00:05:55,280
and we're going to talk about how I did

00:05:53,270 --> 00:06:00,590
both of those things and how you could -

00:05:55,280 --> 00:06:02,180
if you wanted to alright so talk about

00:06:00,590 --> 00:06:04,039
forum based interaction in this way so

00:06:02,180 --> 00:06:06,919
there's two broad models that you can

00:06:04,039 --> 00:06:09,620
handle one the context carries through

00:06:06,919 --> 00:06:12,080
from page to page and the other is that

00:06:09,620 --> 00:06:14,690
you can initiate a forum context via a

00:06:12,080 --> 00:06:16,660
link a button some kind of widget all

00:06:14,690 --> 00:06:19,070
the examples I use are Django 111

00:06:16,660 --> 00:06:22,520
broadly speaking they've worked since

00:06:19,070 --> 00:06:24,169
one for they'll work in 2.0 with some

00:06:22,520 --> 00:06:27,590
slight modifications or none I haven't

00:06:24,169 --> 00:06:30,050
actually tried it yet so some background

00:06:27,590 --> 00:06:32,870
some tooling to understand jingle model

00:06:30,050 --> 00:06:34,550
query form it's an app I wrote there a

00:06:32,870 --> 00:06:36,500
few different apps that you could plug

00:06:34,550 --> 00:06:41,120
in for this but basically speaking it

00:06:36,500 --> 00:06:44,840
generates meta forum based on the models

00:06:41,120 --> 00:06:49,580
meta when you use it it builds aq object

00:06:44,840 --> 00:06:51,440
so it does in and between fields and

00:06:49,580 --> 00:06:56,180
then in or within a field so you could

00:06:51,440 --> 00:07:01,039
say BMI overweight or obese and type 2

00:06:56,180 --> 00:07:03,110
diabetes and age 20 and above it then

00:07:01,039 --> 00:07:05,000
filters a query set of the model so by

00:07:03,110 --> 00:07:07,969
default it just uses modeled objects at

00:07:05,000 --> 00:07:09,710
all you can also pass it a pre-filtered

00:07:07,969 --> 00:07:11,509
query set if you knew you want to do

00:07:09,710 --> 00:07:13,490
something like you always wanted to

00:07:11,509 --> 00:07:15,349
filter out under age 20 you could just

00:07:13,490 --> 00:07:17,449
do that and give it that query set it

00:07:15,349 --> 00:07:18,770
handles it it does a lot more I can talk

00:07:17,449 --> 00:07:22,639
about it in the future but for the

00:07:18,770 --> 00:07:25,400
context of this that's enough so then

00:07:22,639 --> 00:07:27,979
using it is pretty much identical as

00:07:25,400 --> 00:07:29,960
using Django forms we have a simple

00:07:27,979 --> 00:07:33,259
model of a house apartment whatever a

00:07:29,960 --> 00:07:35,900
place of living so choices for bedrooms

00:07:33,259 --> 00:07:38,389
bathrooms type of heating whether it has

00:07:35,900 --> 00:07:40,699
a garage and then we define the model

00:07:38,389 --> 00:07:42,500
form the query form which uses the model

00:07:40,699 --> 00:07:45,340
house and includes just like you would

00:07:42,500 --> 00:07:49,039
in a form the bed the bath heat garage

00:07:45,340 --> 00:07:50,990
and then a very simple view I prefer

00:07:49,039 --> 00:07:52,430
function based views this works happily

00:07:50,990 --> 00:07:57,139
in class-based views

00:07:52,430 --> 00:07:59,780
the way I roll so we if it's a post we

00:07:57,139 --> 00:08:01,610
read the forum informed up process

00:07:59,780 --> 00:08:05,419
processes the method that actually runs

00:08:01,610 --> 00:08:08,570
the query against your model else we

00:08:05,419 --> 00:08:10,520
instantiate the form and we get a very

00:08:08,570 --> 00:08:14,150
simple look and feel this has slight CSS

00:08:10,520 --> 00:08:15,320
on it to give a line view as opposed to

00:08:14,150 --> 00:08:17,690
straight down the page so I could fit it

00:08:15,320 --> 00:08:19,370
but otherwise this is what you get when

00:08:17,690 --> 00:08:22,850
you use Django model query form very

00:08:19,370 --> 00:08:28,400
simple basic but complete does what you

00:08:22,850 --> 00:08:32,390
need it to do so that was pretty cool

00:08:28,400 --> 00:08:34,640
but that's a lot of boilerplate code to

00:08:32,390 --> 00:08:37,039
write on function after function after

00:08:34,640 --> 00:08:38,930
function so we make a method for reuse

00:08:37,039 --> 00:08:42,289
and we're going to talk about the grayed

00:08:38,930 --> 00:08:44,209
out section later but very simply take

00:08:42,289 --> 00:08:47,000
the post or the get or or the get

00:08:44,209 --> 00:08:48,800
returned a search form and then in our

00:08:47,000 --> 00:08:52,820
view instead of writing that we just

00:08:48,800 --> 00:08:56,020
call the search form nothing happened

00:08:52,820 --> 00:08:58,250
can anyone tell me why nothing happened

00:08:56,020 --> 00:08:59,600
because we didn't actually do anything

00:08:58,250 --> 00:09:02,450
right we just moved some logic into a

00:08:59,600 --> 00:09:04,520
utility function but it's not completely

00:09:02,450 --> 00:09:07,070
true we actually built a framework so

00:09:04,520 --> 00:09:10,430
that we can use it to carry our context

00:09:07,070 --> 00:09:13,670
from page to page so now we're going to

00:09:10,430 --> 00:09:15,170
define two new views search which

00:09:13,670 --> 00:09:17,150
actually functions for the search and

00:09:15,170 --> 00:09:19,700
detail so if you wanted to look at a

00:09:17,150 --> 00:09:20,839
single house you can ignore the link

00:09:19,700 --> 00:09:23,510
equals none we're going to use that

00:09:20,839 --> 00:09:25,610
later but so we process the forms just

00:09:23,510 --> 00:09:28,220
like before and we render them awesome

00:09:25,610 --> 00:09:31,100
and you actually would probably do stuff

00:09:28,220 --> 00:09:34,520
with your query set result in the search

00:09:31,100 --> 00:09:38,000
but I didn't the one important thing

00:09:34,520 --> 00:09:39,560
that we need to do here with the form is

00:09:38,000 --> 00:09:41,089
we need to render the form on all the

00:09:39,560 --> 00:09:43,310
pages we want to carry the context

00:09:41,089 --> 00:09:45,680
through you actually do have to supply

00:09:43,310 --> 00:09:48,020
the form to the back-end populated in

00:09:45,680 --> 00:09:49,880
order for it to carry its context

00:09:48,020 --> 00:09:51,920
through it's okay if you hide it you can

00:09:49,880 --> 00:09:54,830
submit hidden forms I think in my result

00:09:51,920 --> 00:09:57,110
in my example I used display:none

00:09:54,830 --> 00:09:58,940
and it works just happily and then the

00:09:57,110 --> 00:10:03,690
other is you need a small chunk of

00:09:58,940 --> 00:10:06,580
JavaScript so when you submit your form

00:10:03,690 --> 00:10:10,840
via the widget that you want to submit

00:10:06,580 --> 00:10:12,790
with you actually change the target of

00:10:10,840 --> 00:10:16,960
the URL so you change its action and

00:10:12,790 --> 00:10:20,200
then submit it so we would have on click

00:10:16,960 --> 00:10:23,920
send form URL search on clicks M form

00:10:20,200 --> 00:10:29,590
URL details and clicking each of those

00:10:23,920 --> 00:10:31,420
links we get two different views

00:10:29,590 --> 00:10:33,340
these are simple templates and I'll

00:10:31,420 --> 00:10:34,810
explain them briefly so we don't see the

00:10:33,340 --> 00:10:37,390
search form again the search form is

00:10:34,810 --> 00:10:39,640
hidden what I'm showing here jingle

00:10:37,390 --> 00:10:41,740
model query form provides a ordered dict

00:10:39,640 --> 00:10:43,840
of the selections based on the clean

00:10:41,740 --> 00:10:46,300
data then you can I call pretty print

00:10:43,840 --> 00:10:47,950
query so you can actually print what the

00:10:46,300 --> 00:10:49,300
query was and we see the query actually

00:10:47,950 --> 00:10:51,880
carried through the two pages without

00:10:49,300 --> 00:10:54,040
any interaction with the form other than

00:10:51,880 --> 00:10:56,620
clicking the link and I have slightly

00:10:54,040 --> 00:10:59,980
different text so that you can see it's

00:10:56,620 --> 00:11:02,050
on a different page and I'm going very

00:10:59,980 --> 00:11:05,530
fast so going to have a lot of time for

00:11:02,050 --> 00:11:07,870
questions so that's pretty cool we can

00:11:05,530 --> 00:11:09,940
carry a context through we could build

00:11:07,870 --> 00:11:13,090
it with just a function based view with

00:11:09,940 --> 00:11:14,800
a utility like I showed you can build it

00:11:13,090 --> 00:11:16,540
in a class-based view I'm pretty sure

00:11:14,800 --> 00:11:18,520
you can build it as a mixin though I

00:11:16,540 --> 00:11:20,800
don't use them enough to be exactly sure

00:11:18,520 --> 00:11:22,900
how you do it you could use a decorator

00:11:20,800 --> 00:11:24,340
you could use middleware and context

00:11:22,900 --> 00:11:25,480
processors a bunch of ways to handle

00:11:24,340 --> 00:11:28,570
this depending on if you want it on

00:11:25,480 --> 00:11:30,880
every page or only some pages but that's

00:11:28,570 --> 00:11:34,170
how you would carry a form context

00:11:30,880 --> 00:11:36,220
across your site so pretty interesting

00:11:34,170 --> 00:11:39,370
but the next and I think more

00:11:36,220 --> 00:11:41,590
interesting use case is initiating your

00:11:39,370 --> 00:11:44,470
forms via a link so the user doesn't

00:11:41,590 --> 00:11:46,330
actually know they use forms and

00:11:44,470 --> 00:11:49,360
conceptually how do you do this so forms

00:11:46,330 --> 00:11:51,820
can be serialized right very simply and

00:11:49,360 --> 00:11:53,500
you can use that serialization to

00:11:51,820 --> 00:11:58,090
bootstrap your request response cycle

00:11:53,500 --> 00:12:01,120
with the form so I have serialized them

00:11:58,090 --> 00:12:03,280
as just a dictionary search links you

00:12:01,120 --> 00:12:06,100
can serialize them to your database use

00:12:03,280 --> 00:12:07,440
a JSON field and just store it there and

00:12:06,100 --> 00:12:10,540
that's great

00:12:07,440 --> 00:12:12,160
you can have a developer builder like

00:12:10,540 --> 00:12:14,170
this but also now that you can store it

00:12:12,160 --> 00:12:16,840
to the database in the interaction to

00:12:14,170 --> 00:12:17,620
build these links is just the form you

00:12:16,840 --> 00:12:21,610
can have your con

00:12:17,620 --> 00:12:22,839
creators building their own links so if

00:12:21,610 --> 00:12:24,730
they see something that's interesting

00:12:22,839 --> 00:12:27,250
that their users want instead of calling

00:12:24,730 --> 00:12:29,560
me and you know paying too much to add

00:12:27,250 --> 00:12:32,860
one dictionary item they could click on

00:12:29,560 --> 00:12:38,200
the form build it out save that and say

00:12:32,860 --> 00:12:40,990
this is the link for well large homes or

00:12:38,200 --> 00:12:45,279
apartments or efficiencies or something

00:12:40,990 --> 00:12:46,779
else so now we have a search link which

00:12:45,279 --> 00:12:49,660
is the URL for the search page but we

00:12:46,779 --> 00:12:51,730
have a target ID one two three in this

00:12:49,660 --> 00:12:53,220
case you could store it as text anything

00:12:51,730 --> 00:12:58,450
that you could look up in the database

00:12:53,220 --> 00:13:02,370
and just by following those links we

00:12:58,450 --> 00:13:02,370
instantiated the form on the back end

00:13:03,480 --> 00:13:10,900
via this little chunk of code so if they

00:13:07,330 --> 00:13:13,630
provide a search ID we look it up we

00:13:10,900 --> 00:13:16,089
populate the data of the form and then

00:13:13,630 --> 00:13:17,950
very importantly we bind it that's

00:13:16,089 --> 00:13:20,860
probably the most important line in this

00:13:17,950 --> 00:13:23,170
entire talk if you don't bind it the

00:13:20,860 --> 00:13:24,910
models query form won't work because it

00:13:23,170 --> 00:13:29,500
works on clean data and you have to have

00:13:24,910 --> 00:13:33,760
a bound form to handle that but we get

00:13:29,500 --> 00:13:35,500
two different views we use the same

00:13:33,760 --> 00:13:39,490
underlying code and you can imagine in

00:13:35,500 --> 00:13:42,060
my case with 47 fields and in fact I

00:13:39,490 --> 00:13:44,290
only showed you the first page of that

00:13:42,060 --> 00:13:47,339
dashboard there's actually three pages

00:13:44,290 --> 00:13:50,680
so right now they have 18 defined and

00:13:47,339 --> 00:13:54,959
they're you know 18 lines of code

00:13:50,680 --> 00:13:56,920
effectively to drive that whole thing so

00:13:54,959 --> 00:13:58,660
talking a little bit about this how you

00:13:56,920 --> 00:14:00,610
can use it other things you could do so

00:13:58,660 --> 00:14:03,370
one thing that's really useful in my use

00:14:00,610 --> 00:14:05,950
case the 150 gigabytes

00:14:03,370 --> 00:14:10,540
get updated once a month so the data is

00:14:05,950 --> 00:14:12,339
pretty static and because of that we can

00:14:10,540 --> 00:14:13,750
actually cache our results for

00:14:12,339 --> 00:14:16,839
long-running queries like I said that

00:14:13,750 --> 00:14:22,089
time series view takes two to three

00:14:16,839 --> 00:14:24,550
minutes to run but I can cache the

00:14:22,089 --> 00:14:27,579
results along with the query form and

00:14:24,550 --> 00:14:30,640
it's indicator and so my users for their

00:14:27,579 --> 00:14:31,180
oft-used views they get the result in

00:14:30,640 --> 00:14:32,800
five

00:14:31,180 --> 00:14:35,050
seconds and it only takes five seconds

00:14:32,800 --> 00:14:38,230
because I have a polling mechanism to

00:14:35,050 --> 00:14:40,690
get the result on top of that I can also

00:14:38,230 --> 00:14:42,400
precache my results so I know what I

00:14:40,690 --> 00:14:46,180
want from my dashboard so when the data

00:14:42,400 --> 00:14:48,550
gets updated monthly I have my form

00:14:46,180 --> 00:14:51,070
serialized to the database so I can just

00:14:48,550 --> 00:14:55,530
kick off jobs they cache those results

00:14:51,070 --> 00:15:02,230
and more interesting I think is that we

00:14:55,530 --> 00:15:04,000
store uses of different forms so every

00:15:02,230 --> 00:15:07,090
time somebody puts something new into a

00:15:04,000 --> 00:15:08,830
form we save it to the database as a new

00:15:07,090 --> 00:15:10,240
version of the new version of the form

00:15:08,830 --> 00:15:15,760
but a different instance of a different

00:15:10,240 --> 00:15:17,890
form data and we keep metrics on every

00:15:15,760 --> 00:15:21,640
time that's called so we automatically

00:15:17,890 --> 00:15:23,320
precache all of the dashboard views but

00:15:21,640 --> 00:15:25,720
we can also pre cash views that are

00:15:23,320 --> 00:15:27,420
being used a lot and we build metrics on

00:15:25,720 --> 00:15:30,310
top of that so I provide to our end

00:15:27,420 --> 00:15:32,170
users who are also some of them

00:15:30,310 --> 00:15:34,030
administrators and say hey our users are

00:15:32,170 --> 00:15:36,280
looking at this it's not something that

00:15:34,030 --> 00:15:37,630
you thought was interesting but somebody

00:15:36,280 --> 00:15:39,010
thinks it does should we add it to the

00:15:37,630 --> 00:15:41,560
dashboard

00:15:39,010 --> 00:15:43,420
should we go forward with it I really

00:15:41,560 --> 00:15:45,220
flew through this talk it's first one

00:15:43,420 --> 00:15:49,390
and I'm low on sleep and high on coffee

00:15:45,220 --> 00:15:50,980
so sorry about that but so a few

00:15:49,390 --> 00:15:53,230
resources I used to jingle model query

00:15:50,980 --> 00:15:56,410
form it's up on github I'm always happy

00:15:53,230 --> 00:15:58,300
to talk about that risk scape that's on

00:15:56,410 --> 00:16:01,510
bit bucket I'm happy to talk about that

00:15:58,300 --> 00:16:05,560
it's a cool little application it's not

00:16:01,510 --> 00:16:08,530
of much use because the 47 fields to you

00:16:05,560 --> 00:16:10,570
know just a random person not using my

00:16:08,530 --> 00:16:12,730
company's ecosystem because separately

00:16:10,570 --> 00:16:15,760
we have a huge healthcare database that

00:16:12,730 --> 00:16:17,410
we do our algorithmic detection of

00:16:15,760 --> 00:16:20,440
diseases and most of that data actually

00:16:17,410 --> 00:16:22,330
feeds for escape so otherwise a vast

00:16:20,440 --> 00:16:24,040
number of the fields are meaningless but

00:16:22,330 --> 00:16:27,070
I'm happy to talk about it it's pretty

00:16:24,040 --> 00:16:28,870
cool like I said that was bootstrap

00:16:27,070 --> 00:16:30,880
I'm happy to talk about that too and now

00:16:28,870 --> 00:16:33,490
this talk is actually up on github also

00:16:30,880 --> 00:16:35,230
if ever anybody wanted to take a look at

00:16:33,490 --> 00:16:39,880
it and take a look at the slides and

00:16:35,230 --> 00:16:41,530
yeah that was really fast again sorry

00:16:39,880 --> 00:16:43,390
about that but we have plenty of time

00:16:41,530 --> 00:16:44,720
for questions and maybe a slightly

00:16:43,390 --> 00:16:48,160
longer break if

00:16:44,720 --> 00:16:48,160
anybody has questions and thank you

00:16:53,630 --> 00:16:59,340
in my defense it was like 25 minutes

00:16:55,920 --> 00:17:03,180
when I told to myself in the mirror go

00:16:59,340 --> 00:17:05,070
for address thanks to the talk I got a

00:17:03,180 --> 00:17:06,690
question about the potential security

00:17:05,070 --> 00:17:08,640
implications here sure there's at least

00:17:06,690 --> 00:17:12,209
two potential vectors that I could see

00:17:08,640 --> 00:17:14,310
this might be interesting one is the

00:17:12,209 --> 00:17:15,720
denial of service either intentional or

00:17:14,310 --> 00:17:18,060
unintentional because you're giving

00:17:15,720 --> 00:17:22,020
someone complete access to the database

00:17:18,060 --> 00:17:24,690
to query sure the second is data leakage

00:17:22,020 --> 00:17:26,880
because you're exposing information that

00:17:24,690 --> 00:17:28,560
isn't something you can directly query

00:17:26,880 --> 00:17:30,840
but in the act of querying you can

00:17:28,560 --> 00:17:32,610
establish whether it exists or not sure

00:17:30,840 --> 00:17:34,320
it's like it's like Django's admin had

00:17:32,610 --> 00:17:35,700
an analogous thing with like you could

00:17:34,320 --> 00:17:37,560
query users and you could query the

00:17:35,700 --> 00:17:39,800
passwords you can effectively extract

00:17:37,560 --> 00:17:42,060
the entire password table without

00:17:39,800 --> 00:17:44,130
actually exposing the password of

00:17:42,060 --> 00:17:46,950
something that was queryable so as what

00:17:44,130 --> 00:17:48,720
mechanisms does model query form have to

00:17:46,950 --> 00:17:50,220
either protect against that is an active

00:17:48,720 --> 00:17:51,780
defense of unique it need to think about

00:17:50,220 --> 00:17:54,150
what you're exposing hide the things you

00:17:51,780 --> 00:17:56,340
shouldn't or sure what would exist so

00:17:54,150 --> 00:17:57,810
model query form actually it's in some

00:17:56,340 --> 00:18:00,480
ways I'd say it's even worse than that I

00:17:57,810 --> 00:18:03,060
didn't show it but you can happily and

00:18:00,480 --> 00:18:05,220
easily let it follow relationships to

00:18:03,060 --> 00:18:07,320
the enth degree I'd recommend not to

00:18:05,220 --> 00:18:10,290
because it's default configuration it

00:18:07,320 --> 00:18:11,640
basically does a select field for the

00:18:10,290 --> 00:18:13,710
foreign keys or whatever and so that

00:18:11,640 --> 00:18:16,770
could take a long time it's not

00:18:13,710 --> 00:18:20,100
something I handle per se you know you

00:18:16,770 --> 00:18:22,740
have a fair amount of flexibility

00:18:20,100 --> 00:18:24,690
because you can pre-process any query

00:18:22,740 --> 00:18:27,390
set that you want to pass to the end

00:18:24,690 --> 00:18:31,190
user also I didn't show it so the

00:18:27,390 --> 00:18:34,590
default field so by default it only has

00:18:31,190 --> 00:18:36,120
widgets and queue objects for non-text

00:18:34,590 --> 00:18:37,440
fields this doesn't answer but because

00:18:36,120 --> 00:18:40,280
text fields like you could do a like but

00:18:37,440 --> 00:18:43,200
that's kind of useless whatever but as a

00:18:40,280 --> 00:18:46,020
developer you can define how the queue

00:18:43,200 --> 00:18:49,980
object is built either by individual

00:18:46,020 --> 00:18:51,210
field or also by field type so so this

00:18:49,980 --> 00:18:53,340
is a long way of saying it doesn't

00:18:51,210 --> 00:18:55,350
handle that you can also and I'll speak

00:18:53,340 --> 00:18:57,060
to how we do sort of in risk scape in

00:18:55,350 --> 00:18:58,620
your application using Django model

00:18:57,060 --> 00:19:01,980
query form you can certainly do that so

00:18:58,620 --> 00:19:03,150
so in the risk scape at first blush it's

00:19:01,980 --> 00:19:06,150
a really big problem right because

00:19:03,150 --> 00:19:07,260
that's healthcare data so there's a

00:19:06,150 --> 00:19:13,440
couple answers that first

00:19:07,260 --> 00:19:16,500
there's a relatively massive user access

00:19:13,440 --> 00:19:18,240
system in place in front of it not even

00:19:16,500 --> 00:19:21,690
in Django that's just built in front of

00:19:18,240 --> 00:19:25,350
it but the data that we provide to that

00:19:21,690 --> 00:19:27,179
has been defined by the people who built

00:19:25,350 --> 00:19:29,429
it they're sorry by the people who sort

00:19:27,179 --> 00:19:31,799
of gathered and generated the data by

00:19:29,429 --> 00:19:34,850
their lawyers and by me because I'm also

00:19:31,799 --> 00:19:36,840
an attorney by training as B

00:19:34,850 --> 00:19:39,090
non-identifiable even if you take the

00:19:36,840 --> 00:19:41,700
entire data set and that includes such

00:19:39,090 --> 00:19:44,280
things so we did limit model query form

00:19:41,700 --> 00:19:47,490
and how it runs in such ways so when

00:19:44,280 --> 00:19:50,400
that map shows up or those bar graphs if

00:19:47,490 --> 00:19:52,860
the number of hits falls below a

00:19:50,400 --> 00:19:54,780
threshold we just say insufficient data

00:19:52,860 --> 00:19:57,630
we can't do it so generally if it falls

00:19:54,780 --> 00:19:59,250
under a hundred patients in the

00:19:57,630 --> 00:20:00,720
denominator or ten patients in the

00:19:59,250 --> 00:20:02,760
numerator for whatever the given

00:20:00,720 --> 00:20:04,679
stratification is we refuse to show the

00:20:02,760 --> 00:20:07,860
data but you'd have to handle that

00:20:04,679 --> 00:20:13,770
outside of or sort of as you interact

00:20:07,860 --> 00:20:16,140
with model query for me I think you

00:20:13,770 --> 00:20:19,200
mentioned that it's not a single page

00:20:16,140 --> 00:20:21,600
app but it got me to thinking that it

00:20:19,200 --> 00:20:23,640
might exhibit some of the issues that

00:20:21,600 --> 00:20:26,040
people sometimes complain about with

00:20:23,640 --> 00:20:28,200
single pager it was like the back button

00:20:26,040 --> 00:20:29,610
doesn't behave as expected or some of

00:20:28,200 --> 00:20:31,830
the other things that people might like

00:20:29,610 --> 00:20:33,090
to do like bookmark a particular page

00:20:31,830 --> 00:20:36,299
and then come back to it later

00:20:33,090 --> 00:20:38,220
won't behave the way they expect have

00:20:36,299 --> 00:20:40,380
you encountered any of those issues or

00:20:38,220 --> 00:20:45,720
is that something you think about yeah

00:20:40,380 --> 00:20:48,330
so this is a place where working for

00:20:45,720 --> 00:20:50,880
basically a consulting group that works

00:20:48,330 --> 00:20:52,290
with hospitals and working as a software

00:20:50,880 --> 00:20:54,059
developer built open source software

00:20:52,290 --> 00:20:55,799
among other things come into tension

00:20:54,059 --> 00:20:57,270
right there's a lot of things that I

00:20:55,799 --> 00:20:59,190
want to build did nobody's willing to

00:20:57,270 --> 00:21:00,929
pay for because I'm like hey it works

00:20:59,190 --> 00:21:02,340
for like I really want to speed up that

00:21:00,929 --> 00:21:03,690
three minutes and I have like seven

00:21:02,340 --> 00:21:06,660
different ideas on how to do it but

00:21:03,690 --> 00:21:08,820
they're like yeah it works for us so for

00:21:06,660 --> 00:21:12,780
the back button if you is an issue

00:21:08,820 --> 00:21:15,330
certainly I have tried to make take

00:21:12,780 --> 00:21:17,370
efforts to alleviate it I don't think it

00:21:15,330 --> 00:21:20,740
showed up there but one thing is that if

00:21:17,370 --> 00:21:23,230
you don't have a working forum context

00:21:20,740 --> 00:21:26,230
the buttons to jump to a different graph

00:21:23,230 --> 00:21:27,700
view disable themselves they say we

00:21:26,230 --> 00:21:28,840
don't have anything to work on so we're

00:21:27,700 --> 00:21:30,730
going to disable or so so that's not

00:21:28,840 --> 00:21:32,049
wonderful but it least doesn't let the

00:21:30,730 --> 00:21:33,580
user get themselves into an inconsistent

00:21:32,049 --> 00:21:36,249
state worth like they think something

00:21:33,580 --> 00:21:40,570
should happen it doesn't you could

00:21:36,249 --> 00:21:44,950
certainly build it in such a way that I

00:21:40,570 --> 00:21:46,629
didn't say certainly the data itself

00:21:44,950 --> 00:21:47,289
because the data isn't completely

00:21:46,629 --> 00:21:49,210
protected

00:21:47,289 --> 00:21:51,070
I could propagate all the data forward

00:21:49,210 --> 00:21:54,309
to the page so that they could bookmark

00:21:51,070 --> 00:21:58,119
it and in fact because you're following

00:21:54,309 --> 00:22:02,470
links at least the link based context

00:21:58,119 --> 00:22:05,169
can be bookmarked the form initiated

00:22:02,470 --> 00:22:07,480
based context it's harder but again

00:22:05,169 --> 00:22:09,809
because I am actually storing every one

00:22:07,480 --> 00:22:13,179
of those interactions to the database

00:22:09,809 --> 00:22:16,840
that ID does indicate something and you

00:22:13,179 --> 00:22:17,980
can link to it I haven't tested it

00:22:16,840 --> 00:22:24,009
broadly I'm pretty sure they're probably

00:22:17,980 --> 00:22:28,570
edge cases where that breaks okay give

00:22:24,009 --> 00:22:30,429
you an okay then we're a bit early for

00:22:28,570 --> 00:22:33,639
the coffee break let's hope the coffee

00:22:30,429 --> 00:22:35,169
is ready take your time to take a short

00:22:33,639 --> 00:22:37,690
break out to your left

00:22:35,169 --> 00:22:41,499
talk to your sponsors enjoy and we're

00:22:37,690 --> 00:22:42,980
back here on the stage at 11:15 thank

00:22:41,499 --> 00:22:51,119
you very much time thank you

00:22:42,980 --> 00:22:51,119

YouTube URL: https://www.youtube.com/watch?v=d9vozZTJOrU


