Title: DjangoCon 2020 | Integrating Design and Development teams - Mariana Bedran Lesche, Daniela Falcone
Publication date: 2020-09-30
Playlist: DjangoCon Europe 2020 (Virtual)
Description: 
	DjangoCon Europe 2020 (Virtual)
September 19, 2020 - 13h55 (GMT+1)

"Integrating Design and Development teams by implementing a Design System" by Mariana Bedran Lesche, Daniela Falcone

In the software industry, developers, designers and stakeholders should be working together to achieve the same goals and deliver high quality products to the final users. To be actually able to work together in an efficient and harmonic way, though, is a whole other thing. In a team composed by developers and designers, we were able to mitigate the impact of communication flaws and concepts divergences in a continuous effort to cover the blank spots we found on every iteration we went through. In this talk, we're going to share some lessons learned about how to integrate both teamsâ€™ work with a solid management process.
Captions: 
	00:00:04,560 --> 00:00:09,679
hi folks

00:00:05,600 --> 00:00:12,799
um my name is mariana or just mari

00:00:09,679 --> 00:00:13,599
i'm a python developer who keeps getting

00:00:12,799 --> 00:00:16,720
into

00:00:13,599 --> 00:00:19,600
front-end development

00:00:16,720 --> 00:00:22,240
i've been part of the python community

00:00:19,600 --> 00:00:24,800
in brazil for many years now

00:00:22,240 --> 00:00:25,760
and i'm in this personal project of

00:00:24,800 --> 00:00:29,199
conquering the

00:00:25,760 --> 00:00:32,559
north part pythonist world so that's my

00:00:29,199 --> 00:00:36,320
third djangocon i'm super happy to

00:00:32,559 --> 00:00:39,760
be here and i'll be presenting this talk

00:00:36,320 --> 00:00:43,280
with my colleague donnie hi everyone

00:00:39,760 --> 00:00:46,239
uh i'm danny and i'm a ux designer

00:00:43,280 --> 00:00:48,000
crazy cat lady and it's my first time

00:00:46,239 --> 00:00:50,480
presenting it in a conference

00:00:48,000 --> 00:00:52,399
and actually my first time attending a

00:00:50,480 --> 00:00:54,480
deaf focus conference

00:00:52,399 --> 00:00:57,039
so i'm really grateful to be here to

00:00:54,480 --> 00:00:59,440
spread design word for everyone

00:00:57,039 --> 00:01:01,359
and we know how hard it is to put a

00:00:59,440 --> 00:01:04,239
conference like this together

00:01:01,359 --> 00:01:06,080
so we would like to to thank the

00:01:04,239 --> 00:01:07,200
organization team for making that

00:01:06,080 --> 00:01:11,119
possible

00:01:07,200 --> 00:01:14,080
and a disclaimer for pandemic time

00:01:11,119 --> 00:01:15,920
we've been parenting together so this is

00:01:14,080 --> 00:01:20,400
dissolution for us this is our

00:01:15,920 --> 00:01:20,400
office and it's empty so

00:01:22,240 --> 00:01:28,000
we both work at lab coats and

00:01:25,520 --> 00:01:30,320
we are an outsourcing software studio

00:01:28,000 --> 00:01:32,479
that builds great custom products

00:01:30,320 --> 00:01:33,520
and we build them so they are really

00:01:32,479 --> 00:01:36,400
great

00:01:33,520 --> 00:01:37,200
and we are basing recipe and always

00:01:36,400 --> 00:01:40,640
sunny city

00:01:37,200 --> 00:01:42,799
in brazilian office as you can see and

00:01:40,640 --> 00:01:43,680
it is so great that maddie moved from

00:01:42,799 --> 00:01:47,119
the famous

00:01:43,680 --> 00:01:50,799
huge nero to here

00:01:47,119 --> 00:01:54,079
it is great uh so

00:01:50,799 --> 00:01:57,439
let's talk about uh this talk today

00:01:54,079 --> 00:02:00,079
uh we'll give you a brief description

00:01:57,439 --> 00:02:01,920
of what the design system is and its

00:02:00,079 --> 00:02:05,439
base concepts

00:02:01,920 --> 00:02:07,840
we will discuss what it means

00:02:05,439 --> 00:02:08,640
for a developer to work with the design

00:02:07,840 --> 00:02:12,000
system

00:02:08,640 --> 00:02:16,239
how it can improve our work then

00:02:12,000 --> 00:02:20,080
we'll get you we'll present to you

00:02:16,239 --> 00:02:21,920
a project we work together where we had

00:02:20,080 --> 00:02:23,120
the chance to implement some of those

00:02:21,920 --> 00:02:26,879
concepts

00:02:23,120 --> 00:02:29,520
and then we'll um explain to you

00:02:26,879 --> 00:02:30,720
how this process worked for us what

00:02:29,520 --> 00:02:35,440
worked what didn't

00:02:30,720 --> 00:02:39,120
and the process we developed in the end

00:02:35,440 --> 00:02:39,120
applying those concepts

00:02:39,200 --> 00:02:42,720
so let's start why having a design

00:02:42,080 --> 00:02:46,040
system

00:02:42,720 --> 00:02:47,920
at all what is good about it and

00:02:46,040 --> 00:02:50,000
[Music]

00:02:47,920 --> 00:02:52,080
i personally there are a lot of

00:02:50,000 --> 00:02:54,080
definitions around but i personally like

00:02:52,080 --> 00:02:56,640
the envisions definition of it

00:02:54,080 --> 00:02:57,360
as a collection of reusable components

00:02:56,640 --> 00:02:59,440
guided by

00:02:57,360 --> 00:03:01,120
clear standards that can be assembled

00:02:59,440 --> 00:03:03,120
together to build any number of

00:03:01,120 --> 00:03:05,440
applications

00:03:03,120 --> 00:03:07,360
and even though it's a team team's

00:03:05,440 --> 00:03:08,080
responsibility to make an interface

00:03:07,360 --> 00:03:10,959
consistent

00:03:08,080 --> 00:03:11,440
between pages and interactions designers

00:03:10,959 --> 00:03:14,319
we

00:03:11,440 --> 00:03:16,560
often take it fully and don't look away

00:03:14,319 --> 00:03:19,760
because i know a developer does it

00:03:16,560 --> 00:03:20,720
and it's not really your fault and but

00:03:19,760 --> 00:03:23,040
using this

00:03:20,720 --> 00:03:23,840
building blocks can make it really

00:03:23,040 --> 00:03:26,480
easier to

00:03:23,840 --> 00:03:28,879
distribute this responsibility by

00:03:26,480 --> 00:03:31,200
creating a source of truth where

00:03:28,879 --> 00:03:32,080
everyone has a voice improving the

00:03:31,200 --> 00:03:34,319
communication

00:03:32,080 --> 00:03:36,400
between developers and designers and

00:03:34,319 --> 00:03:40,000
making deliveries faster

00:03:36,400 --> 00:03:42,640
since some specs can actually be skipped

00:03:40,000 --> 00:03:44,879
and even some layouts can be skipped but

00:03:42,640 --> 00:03:48,799
i've never said that to you okay

00:03:44,879 --> 00:03:51,840
and last but not least once it's done

00:03:48,799 --> 00:03:52,480
it makes time to focus on what really

00:03:51,840 --> 00:03:55,200
matters

00:03:52,480 --> 00:03:56,879
and that's the other person on the side

00:03:55,200 --> 00:03:59,280
on the other side of

00:03:56,879 --> 00:04:00,239
our software and that builds an

00:03:59,280 --> 00:04:03,519
experience

00:04:00,239 --> 00:04:06,000
rather than a screen and the result uh

00:04:03,519 --> 00:04:07,519
of all of that is an application with a

00:04:06,000 --> 00:04:11,680
more professional

00:04:07,519 --> 00:04:11,680
looking custom to the brain standards

00:04:11,760 --> 00:04:16,239
and you may ask why not just using a

00:04:14,400 --> 00:04:19,280
bootstrap instead

00:04:16,239 --> 00:04:20,320
and the answer is you actually can we

00:04:19,280 --> 00:04:23,440
for example use

00:04:20,320 --> 00:04:26,560
bulma within the lab codes design system

00:04:23,440 --> 00:04:29,440
but if you have used those frameworks

00:04:26,560 --> 00:04:31,199
in a product that has some years you may

00:04:29,440 --> 00:04:33,600
understand that with time

00:04:31,199 --> 00:04:35,199
it will no longer accomplish things easy

00:04:33,600 --> 00:04:38,639
breezy copy and paste

00:04:35,199 --> 00:04:39,680
paste that we are used to and you will

00:04:38,639 --> 00:04:42,000
most likely

00:04:39,680 --> 00:04:43,199
start to create components free of the

00:04:42,000 --> 00:04:46,479
frameworks

00:04:43,199 --> 00:04:48,720
constraints to match the products um

00:04:46,479 --> 00:04:50,320
needs without a clear standard to follow

00:04:48,720 --> 00:04:53,919
there are no guides to follow

00:04:50,320 --> 00:04:57,120
and well it can become a mess

00:04:53,919 --> 00:04:58,960
and so a design system goes way beyond

00:04:57,120 --> 00:05:01,759
a component library like those

00:04:58,960 --> 00:05:02,240
frameworks it creates a language based

00:05:01,759 --> 00:05:04,800
on

00:05:02,240 --> 00:05:07,440
the team's culture and instead of

00:05:04,800 --> 00:05:09,280
generic words and nesting patterns

00:05:07,440 --> 00:05:11,600
they're really hard to replicate

00:05:09,280 --> 00:05:14,000
actually designers developers

00:05:11,600 --> 00:05:15,360
and even stakeholders will be able to

00:05:14,000 --> 00:05:17,520
understand

00:05:15,360 --> 00:05:19,280
more easily when things are not matching

00:05:17,520 --> 00:05:21,759
the expected behaviors

00:05:19,280 --> 00:05:22,479
and styles because it was built by all

00:05:21,759 --> 00:05:24,960
of them

00:05:22,479 --> 00:05:27,600
and that's distributing the that

00:05:24,960 --> 00:05:31,680
responsibility that i was talking about

00:05:27,600 --> 00:05:31,680
um but no more design talking

00:05:31,840 --> 00:05:39,440
so what do we have to do with that

00:05:35,039 --> 00:05:43,039
uh as developers we love patents we love

00:05:39,440 --> 00:05:46,080
predictability that's our work

00:05:43,039 --> 00:05:48,240
to build these patterns so

00:05:46,080 --> 00:05:51,520
thanks to the design system we can

00:05:48,240 --> 00:05:53,919
implement consistent uis much easier

00:05:51,520 --> 00:05:55,919
when we look at a particular page having

00:05:53,919 --> 00:05:58,080
a design system behind it

00:05:55,919 --> 00:06:00,560
we can think of it as a combination of

00:05:58,080 --> 00:06:02,639
known components and principles

00:06:00,560 --> 00:06:04,240
when i look at a button for example i

00:06:02,639 --> 00:06:07,520
don't have to think about it

00:06:04,240 --> 00:06:11,440
as a button with some

00:06:07,520 --> 00:06:15,280
uh hash back color uh background color

00:06:11,440 --> 00:06:16,400
14 pixels bold font and eight pixels

00:06:15,280 --> 00:06:18,479
padding

00:06:16,400 --> 00:06:20,000
i just know that it's a primary button

00:06:18,479 --> 00:06:24,960
that i've built it somewhere

00:06:20,000 --> 00:06:27,440
else and i just have to reuse that thing

00:06:24,960 --> 00:06:28,479
so the main points of having a design

00:06:27,440 --> 00:06:31,360
system

00:06:28,479 --> 00:06:32,800
is that it's a source of truth so

00:06:31,360 --> 00:06:35,360
whenever i have a doubt

00:06:32,800 --> 00:06:36,479
about it i just have to look at my

00:06:35,360 --> 00:06:40,160
design system

00:06:36,479 --> 00:06:41,680
uh it it creates a common vocabulary for

00:06:40,160 --> 00:06:44,560
us

00:06:41,680 --> 00:06:45,440
uh we can use the design system as a

00:06:44,560 --> 00:06:48,960
basis for

00:06:45,440 --> 00:06:52,479
our projects file structure

00:06:48,960 --> 00:06:55,440
and it makes it more much more easy to

00:06:52,479 --> 00:06:57,360
keyway our own work before we submit

00:06:55,440 --> 00:07:02,960
that

00:06:57,360 --> 00:07:06,800
so talking about vocabulary

00:07:02,960 --> 00:07:09,199
it's often when we implement a layout

00:07:06,800 --> 00:07:10,960
that we have some doubts about

00:07:09,199 --> 00:07:13,280
implementation details we face

00:07:10,960 --> 00:07:14,880
problems with the code and we have to

00:07:13,280 --> 00:07:17,520
communicate that

00:07:14,880 --> 00:07:19,599
and when that happens it's much easier

00:07:17,520 --> 00:07:23,360
to have a common vocabulary

00:07:19,599 --> 00:07:26,240
to talk about uh the page elements

00:07:23,360 --> 00:07:27,440
both with the designer and uh

00:07:26,240 --> 00:07:30,880
stakeholders like

00:07:27,440 --> 00:07:33,440
product managers or our clients

00:07:30,880 --> 00:07:35,440
if we have to ask something about a

00:07:33,440 --> 00:07:38,000
component or inform

00:07:35,440 --> 00:07:38,960
that we have a problem with it we can

00:07:38,000 --> 00:07:41,440
make sure

00:07:38,960 --> 00:07:43,199
that everyone knows what we were talking

00:07:41,440 --> 00:07:46,479
about

00:07:43,199 --> 00:07:47,520
uh besides this designers have already

00:07:46,479 --> 00:07:50,960
thought about

00:07:47,520 --> 00:07:55,120
uh the meaning of the components uh

00:07:50,960 --> 00:07:56,560
so uh they know uh what it means to the

00:07:55,120 --> 00:08:00,240
youth final user

00:07:56,560 --> 00:08:03,599
and for our stakeholders

00:08:00,240 --> 00:08:06,800
to have that component so

00:08:03,599 --> 00:08:10,080
when i as a developer when i look at

00:08:06,800 --> 00:08:14,000
a component in the design system i

00:08:10,080 --> 00:08:17,680
only recognize the visual elements

00:08:14,000 --> 00:08:20,879
but she already developed it

00:08:17,680 --> 00:08:22,720
thinking about the meaning so i will use

00:08:20,879 --> 00:08:25,680
this meaning to name

00:08:22,720 --> 00:08:28,160
my components instead of just the visual

00:08:25,680 --> 00:08:28,160
elements

00:08:30,960 --> 00:08:38,159
and and the structure they use

00:08:34,240 --> 00:08:40,719
to organize the elements the small

00:08:38,159 --> 00:08:41,200
and big elements of the design system

00:08:40,719 --> 00:08:44,720
things

00:08:41,200 --> 00:08:48,720
like the color theme

00:08:44,720 --> 00:08:48,720
uh typography or

00:08:49,120 --> 00:08:53,120
big layouts this structure will be

00:08:51,920 --> 00:08:56,720
reflect

00:08:53,120 --> 00:08:59,040
on my code organization so as you can

00:08:56,720 --> 00:09:03,600
see i can

00:08:59,040 --> 00:09:07,519
divide my my style sheets

00:09:03,600 --> 00:09:07,519
according to the pro

00:09:07,600 --> 00:09:11,120
these definitions that i already became

00:09:10,560 --> 00:09:14,240
from

00:09:11,120 --> 00:09:14,240
the design system

00:09:14,880 --> 00:09:21,839
uh and i can easily qa

00:09:18,480 --> 00:09:25,200
of my own work before i submit

00:09:21,839 --> 00:09:26,320
so when i look at a component i already

00:09:25,200 --> 00:09:30,160
recognize

00:09:26,320 --> 00:09:34,000
these known patterns and elements

00:09:30,160 --> 00:09:36,720
that i have to work with and when i

00:09:34,000 --> 00:09:39,040
check my own work i just have to check

00:09:36,720 --> 00:09:42,880
for those elements that i already know

00:09:39,040 --> 00:09:46,000
instead of uh looking into each

00:09:42,880 --> 00:09:46,880
part in terms of numbers i can for

00:09:46,000 --> 00:09:50,320
example

00:09:46,880 --> 00:09:53,440
uh say that this

00:09:50,320 --> 00:09:56,800
this is a large or small font size

00:09:53,440 --> 00:10:00,560
this is a small medium or

00:09:56,800 --> 00:10:01,600
large spacing uh so checking everything

00:10:00,560 --> 00:10:06,640
before submitting

00:10:01,600 --> 00:10:06,640
is much easier when i have all of that

00:10:07,680 --> 00:10:14,720
so but let's talk about real life right

00:10:11,279 --> 00:10:18,399
uh we had a project to work

00:10:14,720 --> 00:10:20,800
on that was a redesign of a platform

00:10:18,399 --> 00:10:22,160
with a lot of legacy code and clear

00:10:20,800 --> 00:10:26,320
business rules

00:10:22,160 --> 00:10:26,320
uh messy really messy code

00:10:26,640 --> 00:10:33,839
and as we did as like everyone does we

00:10:30,399 --> 00:10:33,839
started simple

00:10:35,519 --> 00:10:40,000
we had the team of two sites and it was

00:10:38,320 --> 00:10:42,880
lab coats um

00:10:40,000 --> 00:10:45,440
side and the client side and we had an

00:10:42,880 --> 00:10:48,640
internal project manager

00:10:45,440 --> 00:10:49,760
besides us ourselves and i was the

00:10:48,640 --> 00:10:52,640
designer

00:10:49,760 --> 00:10:55,040
and mari was the developer and from the

00:10:52,640 --> 00:10:58,480
client side we had another developer

00:10:55,040 --> 00:11:00,000
and the product owner so we gathered

00:10:58,480 --> 00:11:02,880
everything we wanted and

00:11:00,000 --> 00:11:03,519
toss it into a trello board which we

00:11:02,880 --> 00:11:06,240
reviewed

00:11:03,519 --> 00:11:09,279
weekly with both teams and reviewed

00:11:06,240 --> 00:11:09,279
tasks separately

00:11:10,000 --> 00:11:14,880
the product was already established and

00:11:12,800 --> 00:11:17,440
had all sorts of styles but

00:11:14,880 --> 00:11:19,519
no guidelines at all so after

00:11:17,440 --> 00:11:20,399
understanding the audience and things

00:11:19,519 --> 00:11:22,320
desires

00:11:20,399 --> 00:11:24,160
our first proposal was to create a

00:11:22,320 --> 00:11:26,640
design system to make the product

00:11:24,160 --> 00:11:27,279
more consistent and but the design

00:11:26,640 --> 00:11:29,920
system

00:11:27,279 --> 00:11:30,720
takes time really and we didn't have

00:11:29,920 --> 00:11:34,240
that

00:11:30,720 --> 00:11:34,720
so we started with a ui library like

00:11:34,240 --> 00:11:38,240
that

00:11:34,720 --> 00:11:43,680
with um the color scheme some icons some

00:11:38,240 --> 00:11:47,440
form components and started from there

00:11:43,680 --> 00:11:50,000
but that didn't quite work actually yeah

00:11:47,440 --> 00:11:51,279
well uh we had we faced some problems

00:11:50,000 --> 00:11:56,079
with that

00:11:51,279 --> 00:11:59,200
so we couldn't track the history of uh

00:11:56,079 --> 00:12:01,839
of a task between development and

00:11:59,200 --> 00:12:04,079
design actually between design and

00:12:01,839 --> 00:12:07,839
development

00:12:04,079 --> 00:12:11,120
uh we we developers didn't

00:12:07,839 --> 00:12:14,320
revise review

00:12:11,120 --> 00:12:17,760
the designs before implementing that

00:12:14,320 --> 00:12:21,920
so implementation

00:12:17,760 --> 00:12:24,720
challenges could be unnoticed

00:12:21,920 --> 00:12:26,560
sometimes we lack the data we needed to

00:12:24,720 --> 00:12:29,279
build that

00:12:26,560 --> 00:12:30,800
and tasks would constantly come back

00:12:29,279 --> 00:12:34,160
from qa

00:12:30,800 --> 00:12:35,040
with both problems that it's normal to

00:12:34,160 --> 00:12:37,360
face

00:12:35,040 --> 00:12:38,800
but also with new requests from the

00:12:37,360 --> 00:12:42,399
client

00:12:38,800 --> 00:12:45,279
so we had a hard time separating was

00:12:42,399 --> 00:12:45,920
what was actually a problem from what

00:12:45,279 --> 00:12:49,519
was a

00:12:45,920 --> 00:12:50,079
new request and what about the design

00:12:49,519 --> 00:12:52,480
system

00:12:50,079 --> 00:12:53,680
you may ask wasn't it supposed to solve

00:12:52,480 --> 00:12:56,800
exactly that

00:12:53,680 --> 00:12:59,680
and the answer is yes

00:12:56,800 --> 00:13:00,480
and we had started at this point as i've

00:12:59,680 --> 00:13:03,600
mentioned

00:13:00,480 --> 00:13:05,040
but one thing was missing though it for

00:13:03,600 --> 00:13:08,000
a design system to be a

00:13:05,040 --> 00:13:10,000
system actually it should make it easier

00:13:08,000 --> 00:13:12,560
for designers and developers to make

00:13:10,000 --> 00:13:14,000
autonomous decisions and that was not

00:13:12,560 --> 00:13:18,240
really the case

00:13:14,000 --> 00:13:22,240
in other words um we should be able to

00:13:18,240 --> 00:13:25,760
link the what's the assets uh to the why

00:13:22,240 --> 00:13:26,000
the decisions and and the how and that's

00:13:25,760 --> 00:13:29,279
the

00:13:26,000 --> 00:13:33,680
specs and we would do all of that in

00:13:29,279 --> 00:13:37,279
rituals and we started implementing that

00:13:33,680 --> 00:13:39,680
with time but more than a robust ui

00:13:37,279 --> 00:13:40,639
library or a guideline a design system

00:13:39,680 --> 00:13:43,040
is a process

00:13:40,639 --> 00:13:44,000
and that's a game changer in real life

00:13:43,040 --> 00:13:46,399
projects

00:13:44,000 --> 00:13:46,399
actually

00:13:47,680 --> 00:13:54,800
so how did that process work

00:13:50,720 --> 00:13:58,320
uh we migrated from trello to jira

00:13:54,800 --> 00:14:00,839
not we because we particularly liked the

00:13:58,320 --> 00:14:02,160
technology but it had the resources we

00:14:00,839 --> 00:14:04,560
needed

00:14:02,160 --> 00:14:06,240
and well that's that slide you're

00:14:04,560 --> 00:14:09,680
looking at right now

00:14:06,240 --> 00:14:12,880
seems a bit crazy but that's our jira

00:14:09,680 --> 00:14:16,320
workflow it's not that complicated uh

00:14:12,880 --> 00:14:20,240
when you understand it

00:14:16,320 --> 00:14:23,680
we had a planning board where we would

00:14:20,240 --> 00:14:26,959
uh get our next ideas

00:14:23,680 --> 00:14:30,560
so anything the client wanted to

00:14:26,959 --> 00:14:31,040
to implement a new page or a refactoring

00:14:30,560 --> 00:14:34,560
of a

00:14:31,040 --> 00:14:37,920
of a page uh

00:14:34,560 --> 00:14:41,120
this task would go to discovery where

00:14:37,920 --> 00:14:43,199
uh designers and and the client will

00:14:41,120 --> 00:14:45,040
talk about what they wanted the user

00:14:43,199 --> 00:14:48,320
needs

00:14:45,040 --> 00:14:48,880
the goal to achieve with that designers

00:14:48,320 --> 00:14:52,639
would do

00:14:48,880 --> 00:14:56,320
their their research

00:14:52,639 --> 00:15:00,639
come up with ideas and they would

00:14:56,320 --> 00:15:04,320
define what actually needed to be done

00:15:00,639 --> 00:15:07,519
in this in this task

00:15:04,320 --> 00:15:10,720
so then after

00:15:07,519 --> 00:15:13,839
the discovery process a task would

00:15:10,720 --> 00:15:18,800
go to the design board where

00:15:13,839 --> 00:15:18,800
well design magic happens

00:15:18,880 --> 00:15:23,199
so just to recap a bit because i know

00:15:21,440 --> 00:15:27,120
it's a bit overwhelming

00:15:23,199 --> 00:15:28,160
but we had an idea and we put that in

00:15:27,120 --> 00:15:31,279
our backlog

00:15:28,160 --> 00:15:33,759
and then we moved to discovery where

00:15:31,279 --> 00:15:35,680
we could all get together or just a

00:15:33,759 --> 00:15:36,560
product owner or product owner and

00:15:35,680 --> 00:15:39,920
designers

00:15:36,560 --> 00:15:40,800
and get together to make that idea a bit

00:15:39,920 --> 00:15:44,320
more

00:15:40,800 --> 00:15:47,040
um top i think

00:15:44,320 --> 00:15:48,959
and it would be like a better

00:15:47,040 --> 00:15:52,240
description of the idea

00:15:48,959 --> 00:15:54,560
and then it would go to spec to design

00:15:52,240 --> 00:15:55,680
sorry and then to spec and then it will

00:15:54,560 --> 00:15:58,720
go to

00:15:55,680 --> 00:15:59,600
to development but let's focus just for

00:15:58,720 --> 00:16:03,040
a bit

00:15:59,600 --> 00:16:05,920
uh in design so to

00:16:03,040 --> 00:16:07,120
make it simple we research to prototype

00:16:05,920 --> 00:16:09,519
and we validate

00:16:07,120 --> 00:16:10,240
and all phases may include other

00:16:09,519 --> 00:16:13,519
teammates

00:16:10,240 --> 00:16:14,240
and invalidation ideally we would

00:16:13,519 --> 00:16:17,279
include

00:16:14,240 --> 00:16:19,920
real users but it doesn't really happen

00:16:17,279 --> 00:16:21,279
for every task it will depend on what

00:16:19,920 --> 00:16:25,360
sort of data

00:16:21,279 --> 00:16:25,360
and purpose we have for each feature

00:16:25,600 --> 00:16:28,880
also approved from design tests get back

00:16:28,560 --> 00:16:31,920
to

00:16:28,880 --> 00:16:34,399
the planning board and for specifying

00:16:31,920 --> 00:16:36,000
and only after defining what needs to be

00:16:34,399 --> 00:16:38,959
implemented the task is

00:16:36,000 --> 00:16:40,320
ready to death sometimes it needs to go

00:16:38,959 --> 00:16:43,519
back for more design

00:16:40,320 --> 00:16:46,160
iteration or to be

00:16:43,519 --> 00:16:47,920
more detailed like missing states or

00:16:46,160 --> 00:16:50,880
something like that

00:16:47,920 --> 00:16:51,360
and that's what happens in the spec

00:16:50,880 --> 00:16:54,480
meeting

00:16:51,360 --> 00:16:57,759
we check for all of that so

00:16:54,480 --> 00:17:01,519
uh that's a ritual we introduced

00:16:57,759 --> 00:17:04,799
uh after facing uh problems uh

00:17:01,519 --> 00:17:05,520
in implementing some designs so that's

00:17:04,799 --> 00:17:09,520
where

00:17:05,520 --> 00:17:14,559
we would sit together designers

00:17:09,520 --> 00:17:14,559
and developers to

00:17:15,679 --> 00:17:22,720
to check if it's actually

00:17:18,799 --> 00:17:26,240
uh possible to build the design we have

00:17:22,720 --> 00:17:29,360
so we check for available data

00:17:26,240 --> 00:17:32,400
from the backend for an api

00:17:29,360 --> 00:17:35,200
endpoint for example we check

00:17:32,400 --> 00:17:35,840
for components that are we already built

00:17:35,200 --> 00:17:40,080
before

00:17:35,840 --> 00:17:43,280
or see if we have to build new ones

00:17:40,080 --> 00:17:46,640
uh we see if the interactions

00:17:43,280 --> 00:17:47,679
are viable for example a super complex

00:17:46,640 --> 00:17:50,400
animation

00:17:47,679 --> 00:17:51,679
may not fit in the time we have to to

00:17:50,400 --> 00:17:54,960
develop that

00:17:51,679 --> 00:17:56,480
uh we measure the effort to to actually

00:17:54,960 --> 00:17:59,600
implement everything

00:17:56,480 --> 00:18:04,720
and we build uh we break the

00:17:59,600 --> 00:18:04,720
the big tasks into smaller deliverables

00:18:05,919 --> 00:18:10,240
uh so then comes the development boards

00:18:09,440 --> 00:18:12,960
that one

00:18:10,240 --> 00:18:14,799
uh i believe you all know how it works

00:18:12,960 --> 00:18:18,160
we start with tasks

00:18:14,799 --> 00:18:18,960
in the our to-do list they go in

00:18:18,160 --> 00:18:22,720
progress

00:18:18,960 --> 00:18:25,919
uh they have they are code reviewed

00:18:22,720 --> 00:18:30,880
they are q8 by uh

00:18:25,919 --> 00:18:34,720
by designers and stakeholders

00:18:30,880 --> 00:18:39,200
and ideally they would go directly to

00:18:34,720 --> 00:18:43,760
uh production but that qa

00:18:39,200 --> 00:18:46,799
step is always the messy one

00:18:43,760 --> 00:18:48,160
the thing was just a checklist to

00:18:46,799 --> 00:18:51,600
improve the key weight

00:18:48,160 --> 00:18:54,640
cycle and it was very simple yet

00:18:51,600 --> 00:18:57,600
rise from task to size mostly

00:18:54,640 --> 00:18:59,919
it will describe the task purpose and

00:18:57,600 --> 00:19:00,400
implemented behaviors against the design

00:18:59,919 --> 00:19:03,360
specs

00:19:00,400 --> 00:19:05,679
provided it seems very simple and

00:19:03,360 --> 00:19:08,160
unnecessary since we already had this

00:19:05,679 --> 00:19:11,280
information previously

00:19:08,160 --> 00:19:12,640
but it made simple um and easier to

00:19:11,280 --> 00:19:15,520
distinguish

00:19:12,640 --> 00:19:16,880
requirements from suggestions and to

00:19:15,520 --> 00:19:20,320
keep tests moving

00:19:16,880 --> 00:19:22,559
forward and not going back and forth um

00:19:20,320 --> 00:19:23,679
it also made the communication with

00:19:22,559 --> 00:19:26,880
stakeholders

00:19:23,679 --> 00:19:30,160
way easier and they knew right away

00:19:26,880 --> 00:19:32,160
what they had to do and finally

00:19:30,160 --> 00:19:33,840
understood that if you want something

00:19:32,160 --> 00:19:35,840
else from the test purpose

00:19:33,840 --> 00:19:37,200
you should add it to another task

00:19:35,840 --> 00:19:40,799
instead of going

00:19:37,200 --> 00:19:46,000
back and forth with the same one

00:19:40,799 --> 00:19:48,640
but what really really really work

00:19:46,000 --> 00:19:49,200
for us and i believe that for everyone

00:19:48,640 --> 00:19:52,240
else

00:19:49,200 --> 00:19:55,520
is communication communication

00:19:52,240 --> 00:19:58,960
is for sure the most valuable tool in

00:19:55,520 --> 00:20:01,600
all teams but we

00:19:58,960 --> 00:20:03,039
have to enable it to happen the tools we

00:20:01,600 --> 00:20:06,480
use make it possible

00:20:03,039 --> 00:20:07,840
and we as individuals should make it

00:20:06,480 --> 00:20:11,440
possible as well

00:20:07,840 --> 00:20:13,840
and that is to include the whole thing

00:20:11,440 --> 00:20:15,679
from the beginning to the end even on

00:20:13,840 --> 00:20:19,200
the design phases

00:20:15,679 --> 00:20:22,159
and as tools we use figma for design

00:20:19,200 --> 00:20:23,120
in handoff jira for management and git

00:20:22,159 --> 00:20:26,320
for development

00:20:23,120 --> 00:20:28,880
but any tool will do it

00:20:26,320 --> 00:20:30,000
and this way everyone can have

00:20:28,880 --> 00:20:32,320
perspective and

00:20:30,000 --> 00:20:34,480
understand delays and struggles to come

00:20:32,320 --> 00:20:37,679
up with better strategies

00:20:34,480 --> 00:20:40,400
and for the product and our process

00:20:37,679 --> 00:20:41,200
make it easier to gather constant

00:20:40,400 --> 00:20:43,840
feedback

00:20:41,200 --> 00:20:44,320
in all phases and keep non-technical

00:20:43,840 --> 00:20:46,960
people

00:20:44,320 --> 00:20:48,000
informed of the limited limitations and

00:20:46,960 --> 00:20:50,159
delays we face

00:20:48,000 --> 00:20:51,919
along the way since we review each

00:20:50,159 --> 00:20:52,720
other's work in several steps and

00:20:51,919 --> 00:20:56,640
rituals

00:20:52,720 --> 00:20:59,840
uh it's really easy to spot differences

00:20:56,640 --> 00:21:03,200
and for me this

00:20:59,840 --> 00:21:05,679
is the most important thing and

00:21:03,200 --> 00:21:06,799
it goes directly it connects direct

00:21:05,679 --> 00:21:09,440
directly to the

00:21:06,799 --> 00:21:09,440
spec meeting

00:21:10,240 --> 00:21:13,360
so we couldn't achieve a robust design

00:21:12,720 --> 00:21:16,559
system

00:21:13,360 --> 00:21:19,760
for this project specifically because

00:21:16,559 --> 00:21:23,120
it was a short project and it ended um

00:21:19,760 --> 00:21:26,000
but it was our first opportunity to test

00:21:23,120 --> 00:21:27,280
the this process and design system

00:21:26,000 --> 00:21:30,400
methodology

00:21:27,280 --> 00:21:31,520
so it was then improved to to build our

00:21:30,400 --> 00:21:34,240
own design system

00:21:31,520 --> 00:21:34,640
and it guides our internal projects and

00:21:34,240 --> 00:21:36,799
can

00:21:34,640 --> 00:21:37,679
also be used as a framework to our

00:21:36,799 --> 00:21:41,360
clients

00:21:37,679 --> 00:21:44,240
so now it's a bit easier to uh develop a

00:21:41,360 --> 00:21:45,520
design system for our clients too and

00:21:44,240 --> 00:21:48,640
even though it is still

00:21:45,520 --> 00:21:50,400
a baby system it's already helped us a

00:21:48,640 --> 00:21:52,880
lot to improve our process

00:21:50,400 --> 00:21:54,320
and we've been writing some content with

00:21:52,880 --> 00:21:56,720
our lessons to help

00:21:54,320 --> 00:21:57,840
everyone who's struggling to build their

00:21:56,720 --> 00:22:01,120
own from

00:21:57,840 --> 00:22:04,080
zero so

00:22:01,120 --> 00:22:05,039
thank you guys very much um this is us

00:22:04,080 --> 00:22:08,240
presenting

00:22:05,039 --> 00:22:11,360
uh in our ireland silks

00:22:08,240 --> 00:22:12,240
and we are a great team together and

00:22:11,360 --> 00:22:15,280
outside work

00:22:12,240 --> 00:22:18,559
this work actually

00:22:15,280 --> 00:22:20,559
thank you very much we hope you

00:22:18,559 --> 00:22:21,760
our experience helps you to grow your

00:22:20,559 --> 00:22:24,480
own things and

00:22:21,760 --> 00:22:25,600
make lasting bonds between designers and

00:22:24,480 --> 00:22:28,640
developers

00:22:25,600 --> 00:22:32,640
and if you want to get updates

00:22:28,640 --> 00:22:35,679
um please um use this link the led codes

00:22:32,640 --> 00:22:38,400
jungkook 2020 to

00:22:35,679 --> 00:22:40,240
sign up for our newsletter it's um

00:22:38,400 --> 00:22:42,880
bi-weekly i guess

00:22:40,240 --> 00:22:44,480
and the next edition will contain this

00:22:42,880 --> 00:22:47,280
presentation too

00:22:44,480 --> 00:22:47,840
and other than what we write we also

00:22:47,280 --> 00:22:51,200
share

00:22:47,840 --> 00:22:54,720
insightful texts and articles from

00:22:51,200 --> 00:22:57,360
all around that inspire our work um

00:22:54,720 --> 00:22:59,120
we hope we keep in touch and we'd love

00:22:57,360 --> 00:23:02,159
to hear from you

00:22:59,120 --> 00:23:03,280
yeah so thank you very much for for

00:23:02,159 --> 00:23:07,200
listening to us

00:23:03,280 --> 00:23:10,480
uh and now in the q and a session

00:23:07,200 --> 00:23:13,280
uh we can uh

00:23:10,480 --> 00:23:14,720
answer any doubts you have or talk more

00:23:13,280 --> 00:23:18,240
specifically

00:23:14,720 --> 00:23:19,280
uh to points you may find uh interesting

00:23:18,240 --> 00:23:22,400
yourselves

00:23:19,280 --> 00:23:22,960
so we are up to that uh thank you very

00:23:22,400 --> 00:23:26,000
much

00:23:22,960 --> 00:23:26,000
bye bye bye

00:23:31,280 --> 00:23:37,360
uh so someone asked uh did

00:23:34,400 --> 00:23:37,919
you use wacte wacteo django cms others

00:23:37,360 --> 00:23:41,120
or the

00:23:37,919 --> 00:23:45,279
custom solution why uh no

00:23:41,120 --> 00:23:45,840
uh we this project uh already existed

00:23:45,279 --> 00:23:49,279
was

00:23:45,840 --> 00:23:54,880
like a django rectangle template and

00:23:49,279 --> 00:23:54,880
rest api and angularjs on the front end

00:23:55,440 --> 00:24:02,000
so yeah we basically had to adapt

00:23:58,559 --> 00:24:05,200
to the situation we had

00:24:02,000 --> 00:24:08,960
so yeah like as

00:24:05,200 --> 00:24:12,720
the the css was especially a mess

00:24:08,960 --> 00:24:15,919
so we had to like try to not override

00:24:12,720 --> 00:24:17,919
too much styles uh so not

00:24:15,919 --> 00:24:19,760
to affect other pages that already

00:24:17,919 --> 00:24:21,360
existed

00:24:19,760 --> 00:24:23,039
then yeah basically everything was

00:24:21,360 --> 00:24:26,480
implemented by hand

00:24:23,039 --> 00:24:30,799
but with the this design system uh

00:24:26,480 --> 00:24:34,000
that we are implementing now we're using

00:24:30,799 --> 00:24:35,919
a storybook react storybook so we're

00:24:34,000 --> 00:24:39,440
building the components directly

00:24:35,919 --> 00:24:42,640
in react uh

00:24:39,440 --> 00:24:45,919
yeah so and like the goal

00:24:42,640 --> 00:24:49,360
is that we can you can install the

00:24:45,919 --> 00:24:52,799
design system as a separate npm project

00:24:49,360 --> 00:24:53,279
uh so basically uh in the future when we

00:24:52,799 --> 00:24:56,480
have it

00:24:53,279 --> 00:24:56,480
ready uh

00:24:56,880 --> 00:25:00,080
and we we want to start a new project

00:24:59,200 --> 00:25:02,159
with

00:25:00,080 --> 00:25:03,600
this system uh basically we would

00:25:02,159 --> 00:25:07,279
include uh

00:25:03,600 --> 00:25:08,799
the npm dependency like the npm project

00:25:07,279 --> 00:25:11,120
as a dependency

00:25:08,799 --> 00:25:15,840
on the project and we have all the

00:25:11,120 --> 00:25:15,840
components available there

00:25:21,039 --> 00:25:27,919
anyone else react to storybook you said

00:25:25,760 --> 00:25:30,000
in django for the persistence of the

00:25:27,919 --> 00:25:33,840
data

00:25:30,000 --> 00:25:33,840
what would you use

00:25:34,559 --> 00:25:39,919
if you have to choose one a custom

00:25:36,960 --> 00:25:43,600
solution so yes

00:25:39,919 --> 00:25:47,679
yeah like if i were to build uh like a

00:25:43,600 --> 00:25:51,440
cms thing uh where i have

00:25:47,679 --> 00:25:54,840
for example this uh a design system

00:25:51,440 --> 00:25:59,440
uh in a cms will probably

00:25:54,840 --> 00:26:02,240
um use like one of the

00:25:59,440 --> 00:26:03,840
uh solutions that are already exist in

00:26:02,240 --> 00:26:05,679
the marketing

00:26:03,840 --> 00:26:11,840
but i don't i'm not sure if i understood

00:26:05,679 --> 00:26:11,840
the like data persistency

00:26:12,400 --> 00:26:19,760
so the data entry is uh done uh

00:26:16,799 --> 00:26:21,200
in the admin i think you are using a

00:26:19,760 --> 00:26:24,880
jungle yes

00:26:21,200 --> 00:26:29,840
yeah yeah it was a common django project

00:26:24,880 --> 00:26:29,840
just like straight straight django

00:26:30,640 --> 00:26:37,600
and so to use an input in

00:26:34,080 --> 00:26:40,880
in in your template a button

00:26:37,600 --> 00:26:44,799
or something order you have to

00:26:40,880 --> 00:26:48,159
build a component okay so that component

00:26:44,799 --> 00:26:51,440
is uh an object

00:26:48,159 --> 00:26:54,559
in your database no no no

00:26:51,440 --> 00:26:58,080
it's it's just html and css

00:26:54,559 --> 00:27:02,320
uh i we build the css that says

00:26:58,080 --> 00:27:02,320
uh like the oh okay

00:27:04,159 --> 00:27:11,039
yeah yeah it's just static okay yeah but

00:27:07,679 --> 00:27:13,600
i mean uh both things like if

00:27:11,039 --> 00:27:15,520
you can build a design system just in in

00:27:13,600 --> 00:27:17,440
your css and html

00:27:15,520 --> 00:27:20,159
uh you just have to like build your

00:27:17,440 --> 00:27:24,159
classes and and use them consistently

00:27:20,159 --> 00:27:27,919
or in this case in this like new um

00:27:24,159 --> 00:27:29,919
system we're developing uh it's

00:27:27,919 --> 00:27:31,520
like there are react components as we're

00:27:29,919 --> 00:27:34,799
building that in

00:27:31,520 --> 00:27:37,840
in react so you would import

00:27:34,799 --> 00:27:39,360
a component in your layout and and just

00:27:37,840 --> 00:27:42,960
use it

00:27:39,360 --> 00:27:45,279
but you could like also use the css

00:27:42,960 --> 00:27:46,399
separately for example if you wanted to

00:27:45,279 --> 00:27:49,360
install the

00:27:46,399 --> 00:27:50,240
the system but you don't want to use it

00:27:49,360 --> 00:27:53,520
with react

00:27:50,240 --> 00:27:57,039
the css will be there anyway so

00:27:53,520 --> 00:27:58,559
you could just like create your html and

00:27:57,039 --> 00:28:01,600
use the appropriate

00:27:58,559 --> 00:28:01,600
css classes

00:28:01,679 --> 00:28:05,919
okay thank you nothing

00:28:12,080 --> 00:28:17,840
anyone else

00:28:17,919 --> 00:28:23,360
so uh while uh someone comes to

00:28:21,279 --> 00:28:24,799
with a new question i just wanted to

00:28:23,360 --> 00:28:29,120
point out

00:28:24,799 --> 00:28:32,559
uh like dialoguing with the previous

00:28:29,120 --> 00:28:35,399
talk one of the

00:28:32,559 --> 00:28:36,640
learnings from from this is how

00:28:35,399 --> 00:28:39,840
accessibility

00:28:36,640 --> 00:28:43,600
is also our job

00:28:39,840 --> 00:28:44,480
as as developers so it's not only the

00:28:43,600 --> 00:28:47,520
designer

00:28:44,480 --> 00:28:50,799
that has to implement

00:28:47,520 --> 00:28:54,480
all the hover and focus states and say

00:28:50,799 --> 00:28:57,440
like describe all the accessibility

00:28:54,480 --> 00:28:58,000
uh things in the the project it's our

00:28:57,440 --> 00:29:02,399
job

00:28:58,000 --> 00:29:04,559
also as developers to be aware of that

00:29:02,399 --> 00:29:05,520
uh so in this new project i'm i'm

00:29:04,559 --> 00:29:08,960
working on

00:29:05,520 --> 00:29:11,360
right now i'm like the alt text policy

00:29:08,960 --> 00:29:12,080
police i'm always complaining well

00:29:11,360 --> 00:29:14,799
where's the

00:29:12,080 --> 00:29:15,919
the description for that image i didn't

00:29:14,799 --> 00:29:18,799
got that

00:29:15,919 --> 00:29:19,279
or something if i eventually noticed

00:29:18,799 --> 00:29:22,480
that

00:29:19,279 --> 00:29:23,360
a component doesn't have uh the focus

00:29:22,480 --> 00:29:26,640
state i can

00:29:23,360 --> 00:29:29,200
like call out to the designer and say

00:29:26,640 --> 00:29:32,720
hey hey you forgot this

00:29:29,200 --> 00:29:35,120
to add that state like so please add it

00:29:32,720 --> 00:29:35,760
and it's like makes a huge difference if

00:29:35,120 --> 00:29:39,520
i don't

00:29:35,760 --> 00:29:43,039
have to be a designer to have that uh

00:29:39,520 --> 00:29:43,039
sensibility and to

00:29:44,080 --> 00:29:57,679
yeah be concerned with that

00:29:55,600 --> 00:29:59,600
yeah just to complement what mary was

00:29:57,679 --> 00:30:02,640
saying um

00:29:59,600 --> 00:30:04,880
our design system is already coming

00:30:02,640 --> 00:30:05,760
with the components that goes together

00:30:04,880 --> 00:30:09,600
with a whole

00:30:05,760 --> 00:30:12,000
accessibility section um just like the

00:30:09,600 --> 00:30:13,279
ibm one or something like that if you're

00:30:12,000 --> 00:30:15,600
familiar with

00:30:13,279 --> 00:30:17,520
and some things are really hard to to

00:30:15,600 --> 00:30:18,480
find how to implement especially

00:30:17,520 --> 00:30:21,440
regarding

00:30:18,480 --> 00:30:22,960
complex elements like hallucino or

00:30:21,440 --> 00:30:27,279
something like that with

00:30:22,960 --> 00:30:30,480
both columns and it's very useful to you

00:30:27,279 --> 00:30:34,840
to see new new tools and uh

00:30:30,480 --> 00:30:37,679
guidelines that sum up the the web and

00:30:34,840 --> 00:30:40,640
um

00:30:37,679 --> 00:30:41,679
uh guidelines so if you have any

00:30:40,640 --> 00:30:44,320
anything to

00:30:41,679 --> 00:30:51,840
to add it would be very very useful for

00:30:44,320 --> 00:30:51,840
us too

00:31:02,840 --> 00:31:05,840
um

00:31:07,039 --> 00:31:19,840
thank you

00:31:24,000 --> 00:31:33,840
i think next

00:31:28,080 --> 00:31:33,840
talk is starting soon no not yet

00:31:50,080 --> 00:31:55,039
i have another question yeah

00:31:56,399 --> 00:32:04,399
how do you handle translations

00:32:00,880 --> 00:32:07,360
they are static too yes

00:32:04,399 --> 00:32:09,440
yeah in this in this case we didn't uh

00:32:07,360 --> 00:32:10,000
handle translations because the product

00:32:09,440 --> 00:32:13,200
was

00:32:10,000 --> 00:32:16,640
only for the us so they

00:32:13,200 --> 00:32:17,039
only needed english although of course

00:32:16,640 --> 00:32:21,679
not

00:32:17,039 --> 00:32:24,880
anyone in the us uh speaks english but

00:32:21,679 --> 00:32:28,320
that wasn't like a requirement for

00:32:24,880 --> 00:32:30,240
for the project um

00:32:28,320 --> 00:32:31,600
but yeah like i think uh you know

00:32:30,240 --> 00:32:34,399
regular django

00:32:31,600 --> 00:32:35,360
uh we would a project we would just use

00:32:34,399 --> 00:32:39,440
django

00:32:35,360 --> 00:32:39,440
translation tools

00:32:41,600 --> 00:32:46,559
like that when you like use that uh

00:32:44,080 --> 00:32:49,039
[Music]

00:32:46,559 --> 00:32:50,000
uh yeah like that uh what's how is it

00:32:49,039 --> 00:32:54,080
called again

00:32:50,000 --> 00:32:57,840
uh that you get tax lazy

00:32:54,080 --> 00:32:57,840
yeah yeah so

00:32:57,919 --> 00:33:03,760
okay clear but yeah we never dealt

00:33:01,200 --> 00:33:05,039
for example with things like uh right to

00:33:03,760 --> 00:33:08,080
left

00:33:05,039 --> 00:33:11,519
um layouts that

00:33:08,080 --> 00:33:15,039
should be really really hard to

00:33:11,519 --> 00:33:16,000
to implement uh so i have no idea how we

00:33:15,039 --> 00:33:18,320
would do that we

00:33:16,000 --> 00:33:19,600
would probably have to learn it on the

00:33:18,320 --> 00:33:23,760
fly because

00:33:19,600 --> 00:33:39,840
yeah okay okay thank

00:33:23,760 --> 00:33:39,840
no problem

00:34:24,639 --> 00:34:28,320
well if no one has another question just

00:34:26,320 --> 00:34:29,599
wanted to say something else i

00:34:28,320 --> 00:34:33,200
remembered

00:34:29,599 --> 00:34:36,800
uh yeah like one of the

00:34:33,200 --> 00:34:39,520
the best things about having those

00:34:36,800 --> 00:34:40,159
this predictable collection of things is

00:34:39,520 --> 00:34:43,679
that

00:34:40,159 --> 00:34:47,520
we as developers get to train our brains

00:34:43,679 --> 00:34:50,800
to um work in that

00:34:47,520 --> 00:34:54,240
pattern so like i'm not a designer

00:34:50,800 --> 00:34:56,720
i i may have a static

00:34:54,240 --> 00:34:57,920
sensibility to say well that doesn't

00:34:56,720 --> 00:35:00,720
look very good

00:34:57,920 --> 00:35:02,160
that could look better but i'm not a

00:35:00,720 --> 00:35:05,280
designer so i don't

00:35:02,160 --> 00:35:06,079
know the principles behind like the the

00:35:05,280 --> 00:35:09,839
layouts

00:35:06,079 --> 00:35:12,400
uh that i'm i'm implementing

00:35:09,839 --> 00:35:14,480
but when i have uh really consistent

00:35:12,400 --> 00:35:17,599
elements to work with

00:35:14,480 --> 00:35:20,560
uh my brain just uh

00:35:17,599 --> 00:35:22,400
starts identifying those those things

00:35:20,560 --> 00:35:26,560
automatically

00:35:22,400 --> 00:35:29,680
uh so for example i know that normally

00:35:26,560 --> 00:35:32,800
uh a heading and a

00:35:29,680 --> 00:35:35,839
subheading will have a small

00:35:32,800 --> 00:35:38,560
uh spacing between between it

00:35:35,839 --> 00:35:39,520
uh and i've seen this pattern so many

00:35:38,560 --> 00:35:42,480
times

00:35:39,520 --> 00:35:44,000
that if i just forget to put that

00:35:42,480 --> 00:35:48,000
spacing between my

00:35:44,000 --> 00:35:49,599
my title and subtitle i will notice that

00:35:48,000 --> 00:35:53,040
right away

00:35:49,599 --> 00:35:53,040
because like it's just

00:35:54,079 --> 00:35:59,040
photographed in my mind that like this

00:35:57,359 --> 00:36:01,040
is important

00:35:59,040 --> 00:36:02,880
and especially with spacings because

00:36:01,040 --> 00:36:06,079
there's like any layout has

00:36:02,880 --> 00:36:08,960
always lots of lots of spaces uh that's

00:36:06,079 --> 00:36:10,160
the thing you most do in css is like add

00:36:08,960 --> 00:36:13,359
space there there

00:36:10,160 --> 00:36:16,640
there and when i have a very limited

00:36:13,359 --> 00:36:20,320
collection of options so i either have

00:36:16,640 --> 00:36:24,000
4 pixel 8 16

00:36:20,320 --> 00:36:27,040
32 64 pixel spacing options

00:36:24,000 --> 00:36:30,079
uh my brain just learned to

00:36:27,040 --> 00:36:34,320
immediately recognize them uh in a

00:36:30,079 --> 00:36:36,560
in a layout so i don't have to be like

00:36:34,320 --> 00:36:38,400
inspecting each one of the spaces

00:36:36,560 --> 00:36:41,599
between each one of the elements

00:36:38,400 --> 00:36:44,240
like the whole time because like they're

00:36:41,599 --> 00:36:44,960
just internalized so when i look at the

00:36:44,240 --> 00:36:48,720
design

00:36:44,960 --> 00:36:52,320
i just they automatically just pop

00:36:48,720 --> 00:36:55,520
into my eyes so like it makes

00:36:52,320 --> 00:36:58,160
the work much much much faster

00:36:55,520 --> 00:36:59,040
uh like having that exercise in our mind

00:36:58,160 --> 00:37:02,720
so

00:36:59,040 --> 00:37:04,880
yeah yeah actually it's like

00:37:02,720 --> 00:37:05,920
when you design it too i mean with time

00:37:04,880 --> 00:37:08,880
you get familiar

00:37:05,920 --> 00:37:10,560
with the with the systems i mean the

00:37:08,880 --> 00:37:13,680
small systems that you have

00:37:10,560 --> 00:37:17,599
in a whole system so yeah it's

00:37:13,680 --> 00:37:17,599
just a thing of getting used to it

00:37:18,000 --> 00:37:24,320
hey so hey follow-up question

00:37:22,400 --> 00:37:25,680
to that last comment so how do you

00:37:24,320 --> 00:37:30,480
handle

00:37:25,680 --> 00:37:30,480
um updates to those common components

00:37:31,280 --> 00:37:37,839
um yeah like uh

00:37:34,800 --> 00:37:40,880
i don't think we had a situation where

00:37:37,839 --> 00:37:43,359
like a com a component was

00:37:40,880 --> 00:37:44,000
updated in the design system so it would

00:37:43,359 --> 00:37:48,079
be

00:37:44,000 --> 00:37:49,760
updated for the whole project um

00:37:48,079 --> 00:37:52,960
but yeah i think that's actually the

00:37:49,760 --> 00:37:56,000
best uh

00:37:52,960 --> 00:37:56,320
case when it should happen so uh like if

00:37:56,000 --> 00:37:59,440
you

00:37:56,320 --> 00:38:00,240
decide that that button now has to look

00:37:59,440 --> 00:38:04,560
different

00:38:00,240 --> 00:38:07,839
everywhere uh you just would

00:38:04,560 --> 00:38:10,800
update the main component

00:38:07,839 --> 00:38:12,079
other than that we would i think just

00:38:10,800 --> 00:38:15,520
create a variant

00:38:12,079 --> 00:38:15,920
of the component and say like we just

00:38:15,520 --> 00:38:19,599
want

00:38:15,920 --> 00:38:21,520
this changed value in that specific

00:38:19,599 --> 00:38:23,839
place so we would create a

00:38:21,520 --> 00:38:25,599
another variant of the component but

00:38:23,839 --> 00:38:29,760
maybe danny can

00:38:25,599 --> 00:38:32,320
say more about that yeah and the project

00:38:29,760 --> 00:38:33,280
is structured in a way that you have

00:38:32,320 --> 00:38:35,839
design system

00:38:33,280 --> 00:38:36,720
and other projects consume that design

00:38:35,839 --> 00:38:40,079
system

00:38:36,720 --> 00:38:43,440
so you can pick what you'll be

00:38:40,079 --> 00:38:45,680
uh updating or not with your

00:38:43,440 --> 00:38:47,839
subsystem subproject or something like

00:38:45,680 --> 00:38:47,839
that

00:38:49,119 --> 00:38:52,240
so can i follow up for a second with

00:38:50,880 --> 00:38:55,599
just like a clarification

00:38:52,240 --> 00:38:56,880
um so i guess maybe specifically how do

00:38:55,599 --> 00:39:00,079
you

00:38:56,880 --> 00:39:03,440
communicate with like

00:39:00,079 --> 00:39:06,400
the design team and also the the project

00:39:03,440 --> 00:39:09,040
owners to sort of be like okay well if

00:39:06,400 --> 00:39:12,560
we change this button it's gonna change

00:39:09,040 --> 00:39:16,079
uh everywhere right um like

00:39:12,560 --> 00:39:19,119
how do you like manage that sort of

00:39:16,079 --> 00:39:23,359
communication or feedback or

00:39:19,119 --> 00:39:26,560
um we don't have this uh huge uh

00:39:23,359 --> 00:39:29,920
uh structure for this hierarchy

00:39:26,560 --> 00:39:30,640
like that in our company so we don't

00:39:29,920 --> 00:39:33,280
have many

00:39:30,640 --> 00:39:34,160
products internal products so it doesn't

00:39:33,280 --> 00:39:36,320
really happen

00:39:34,160 --> 00:39:38,400
for us because we are a small team and

00:39:36,320 --> 00:39:41,920
everyone is always communicating

00:39:38,400 --> 00:39:45,359
um but for clients for example

00:39:41,920 --> 00:39:47,440
it would be like

00:39:45,359 --> 00:39:48,880
when you get a system update you get a

00:39:47,440 --> 00:39:52,160
notification

00:39:48,880 --> 00:39:54,480
and you can pick which ones uh

00:39:52,160 --> 00:39:55,520
you're going to update really so it

00:39:54,480 --> 00:39:58,480
would work

00:39:55,520 --> 00:40:00,400
sorted like that i don't know if her

00:39:58,480 --> 00:40:03,520
advice for you but

00:40:00,400 --> 00:40:06,560
yeah yeah i think mostly like

00:40:03,520 --> 00:40:09,599
as a developer team

00:40:06,560 --> 00:40:13,119
uh we would say well we we do have

00:40:09,599 --> 00:40:16,000
really have to update this this thing

00:40:13,119 --> 00:40:16,319
uh and we would ask the design team so

00:40:16,000 --> 00:40:18,800
yeah

00:40:16,319 --> 00:40:19,920
are you okay updating that to the whole

00:40:18,800 --> 00:40:23,119
platform

00:40:19,920 --> 00:40:25,520
or do you prefer that we customize this

00:40:23,119 --> 00:40:26,000
one and leave the rest as it is or

00:40:25,520 --> 00:40:27,920
something

00:40:26,000 --> 00:40:29,680
i think we would just ask for their

00:40:27,920 --> 00:40:33,119
opinion and

00:40:29,680 --> 00:40:35,599
yeah yeah i mean no not all components

00:40:33,119 --> 00:40:37,839
would be like directly to the design

00:40:35,599 --> 00:40:40,880
system some components are

00:40:37,839 --> 00:40:44,079
specific for a specific case on a

00:40:40,880 --> 00:40:47,200
project and we call that snowflakes

00:40:44,079 --> 00:40:47,680
they exist outside the the design system

00:40:47,200 --> 00:40:50,540
both

00:40:47,680 --> 00:40:51,680
follow those rules too

00:40:50,540 --> 00:40:54,319
[Music]

00:40:51,680 --> 00:41:04,240
so some specific cases would be like

00:40:54,319 --> 00:41:04,240

YouTube URL: https://www.youtube.com/watch?v=-z-zet2mlMg


