Title: DjangoCon 2020 | KEYNOTE: Ecosystem Revolution with Django - Luis Roque
Publication date: 2020-09-30
Playlist: DjangoCon Europe 2020 (Virtual)
Description: 
	DjangoCon Europe 2020 (Virtual)
September 19, 2020 - 14h35 (GMT+1)

“KEYNOTE: Ecosystem Revolution with Django” by Luis Roque 

Over the last few years, Portugal has become a pool of talent with an above-average success rate in tech-driven companies. This results in the fuelling of the country’s technological scene and in the growth of an ecosystem of innovative startups. These tech businesses are increasingly relying on the capabilities of a web framework like Django to power its developments.
Captions: 
	00:00:05,279 --> 00:00:08,800
um

00:00:05,920 --> 00:00:09,440
i'm here to talk to you uh and to give

00:00:08,800 --> 00:00:12,559
you

00:00:09,440 --> 00:00:16,240
more or less uh i would say a less

00:00:12,559 --> 00:00:17,119
technical talk so my goal here is really

00:00:16,240 --> 00:00:20,160
to give you

00:00:17,119 --> 00:00:23,199
um a different perspective um

00:00:20,160 --> 00:00:26,160
on how a strategy is that

00:00:23,199 --> 00:00:27,119
developed for a company for a startup in

00:00:26,160 --> 00:00:29,599
this case

00:00:27,119 --> 00:00:30,560
uh regarding technology and we will

00:00:29,599 --> 00:00:33,680
touch base

00:00:30,560 --> 00:00:37,680
on our journey and how we use

00:00:33,680 --> 00:00:40,160
uh django for that so um let me try to

00:00:37,680 --> 00:00:42,000
get you excited on that and let's see

00:00:40,160 --> 00:00:45,280
how this journey come across

00:00:42,000 --> 00:00:48,399
and hopefully it gets you ideas

00:00:45,280 --> 00:00:49,760
on how to do that by on on your own for

00:00:48,399 --> 00:00:52,800
your company

00:00:49,760 --> 00:00:55,920
um as you uh wish so

00:00:52,800 --> 00:00:56,719
basically i will start with one topic

00:00:55,920 --> 00:00:58,879
that is

00:00:56,719 --> 00:01:00,719
give you a brief overview of our

00:00:58,879 --> 00:01:01,359
portuguese technical system so this

00:01:00,719 --> 00:01:05,280
conference

00:01:01,359 --> 00:01:08,400
uh is still in in um in portugal

00:01:05,280 --> 00:01:11,760
in a way um so i will i'll give you

00:01:08,400 --> 00:01:14,880
just a brief overview then we'll go

00:01:11,760 --> 00:01:18,080
and it's it's just also a brief overview

00:01:14,880 --> 00:01:21,600
on the django as a go-to framework and

00:01:18,080 --> 00:01:24,560
how it is established today

00:01:21,600 --> 00:01:25,439
and most importantly we will go through

00:01:24,560 --> 00:01:29,040
our

00:01:25,439 --> 00:01:31,920
case so hubs case how we we are using

00:01:29,040 --> 00:01:32,799
uh django but not only so it's a little

00:01:31,920 --> 00:01:37,119
bit about

00:01:32,799 --> 00:01:40,240
our technology uh about our strategic

00:01:37,119 --> 00:01:42,880
approaches uh to technology i would say

00:01:40,240 --> 00:01:44,880
and so hopefully get you um some

00:01:42,880 --> 00:01:47,920
insights

00:01:44,880 --> 00:01:50,479
looking at the portuguese ecosystem

00:01:47,920 --> 00:01:50,960
um first of all uh talking a little bit

00:01:50,479 --> 00:01:54,720
about

00:01:50,960 --> 00:01:58,079
the the startup ecosystem um

00:01:54,720 --> 00:02:01,280
from 2000 upwards there are

00:01:58,079 --> 00:02:01,920
two three main waves of of startups we

00:02:01,280 --> 00:02:04,479
have

00:02:01,920 --> 00:02:07,119
uh startups that are already unicorns

00:02:04,479 --> 00:02:09,440
like farfetch'd

00:02:07,119 --> 00:02:10,319
we have in and i'm talking about the

00:02:09,440 --> 00:02:13,840
early uh

00:02:10,319 --> 00:02:15,840
2000s uh we until until the crisis

00:02:13,840 --> 00:02:20,080
mostly of 2008

00:02:15,840 --> 00:02:22,560
um afterwards in 2011 2012

00:02:20,080 --> 00:02:24,319
we have new startups coming in like a

00:02:22,560 --> 00:02:27,760
bubble like coda c

00:02:24,319 --> 00:02:32,400
and in 2015 more or less around that

00:02:27,760 --> 00:02:35,200
year we have a third wave where um

00:02:32,400 --> 00:02:36,319
companies like hub like infraspeak uh

00:02:35,200 --> 00:02:38,480
were created

00:02:36,319 --> 00:02:40,080
nowadays we have a new wave coming in

00:02:38,480 --> 00:02:42,720
not quite uh

00:02:40,080 --> 00:02:43,680
sure and we was lacking some examples as

00:02:42,720 --> 00:02:46,400
you know with these

00:02:43,680 --> 00:02:47,280
first years are hard for for star

00:02:46,400 --> 00:02:50,640
startups

00:02:47,280 --> 00:02:52,800
another important aspect uh we've been

00:02:50,640 --> 00:02:53,200
hosting main tech events let's consider

00:02:52,800 --> 00:02:55,760
webs

00:02:53,200 --> 00:02:56,800
summit uh a tech event in a way uh and

00:02:55,760 --> 00:03:00,000
we uh

00:02:56,800 --> 00:03:01,760
we've been having these um tech events

00:03:00,000 --> 00:03:05,040
showing that portugal is a hub for

00:03:01,760 --> 00:03:05,920
technology uh djangocon is again another

00:03:05,040 --> 00:03:07,599
example

00:03:05,920 --> 00:03:09,760
and we've been having a lot of

00:03:07,599 --> 00:03:10,080
investment from big tech companies like

00:03:09,760 --> 00:03:12,720
uh

00:03:10,080 --> 00:03:13,440
revolut like google like different

00:03:12,720 --> 00:03:16,879
companies that

00:03:13,440 --> 00:03:17,280
come across and uh are basically looking

00:03:16,879 --> 00:03:20,640
for

00:03:17,280 --> 00:03:23,760
talent here in portugal

00:03:20,640 --> 00:03:24,319
some numbers also to to to give you a

00:03:23,760 --> 00:03:27,280
better

00:03:24,319 --> 00:03:28,239
uh idea so we have 30 companies in the

00:03:27,280 --> 00:03:30,640
00:03:28,239 --> 00:03:32,080
fastest growing companies in the emea

00:03:30,640 --> 00:03:34,959
region one of them

00:03:32,080 --> 00:03:37,480
it's us hub we can see the growth in

00:03:34,959 --> 00:03:40,879
portuguese startups from

00:03:37,480 --> 00:03:42,799
2015 upwards and especially we are very

00:03:40,879 --> 00:03:45,360
well

00:03:42,799 --> 00:03:46,799
placed in terms of uh global innovation

00:03:45,360 --> 00:03:49,200
index but especially

00:03:46,799 --> 00:03:50,720
concerning uh talent competitiveness so

00:03:49,200 --> 00:03:54,159
we are a hub

00:03:50,720 --> 00:03:54,879
for uh talent uh and and it's recognized

00:03:54,159 --> 00:03:57,040
across uh

00:03:54,879 --> 00:03:57,920
europe already and so this is something

00:03:57,040 --> 00:04:00,319
very uh

00:03:57,920 --> 00:04:01,120
exciting for for us in the in these

00:04:00,319 --> 00:04:03,840
times where

00:04:01,120 --> 00:04:04,159
uh technology is is clearly the enabler

00:04:03,840 --> 00:04:06,400
for

00:04:04,159 --> 00:04:07,280
a lot of business models and we have

00:04:06,400 --> 00:04:10,239
that we have a

00:04:07,280 --> 00:04:11,040
very strong uh education foundations

00:04:10,239 --> 00:04:13,920
here so it's

00:04:11,040 --> 00:04:15,519
it's it's great in terms of talent in

00:04:13,920 --> 00:04:18,639
the town that we found

00:04:15,519 --> 00:04:22,400
that we find here in portugal

00:04:18,639 --> 00:04:24,479
looking at uh jungle and just uh

00:04:22,400 --> 00:04:25,440
i mean well probably everyone knows

00:04:24,479 --> 00:04:28,320
about it but

00:04:25,440 --> 00:04:29,680
just to change touch base very quickly

00:04:28,320 --> 00:04:32,800
um

00:04:29,680 --> 00:04:34,479
django is being used and it's getting uh

00:04:32,800 --> 00:04:38,160
popular i would say and

00:04:34,479 --> 00:04:40,960
i like uh their own description or

00:04:38,160 --> 00:04:42,479
uh the the the community own description

00:04:40,960 --> 00:04:45,840
on uh

00:04:42,479 --> 00:04:48,720
on the framework itself so it it brings

00:04:45,840 --> 00:04:50,160
scalable solutions but with deadlines in

00:04:48,720 --> 00:04:53,120
a way so it's really

00:04:50,160 --> 00:04:53,919
uh for innovative companies that want to

00:04:53,120 --> 00:04:58,000
give

00:04:53,919 --> 00:05:01,120
and have pace sometimes compromising

00:04:58,000 --> 00:05:02,720
in in some ways some um performance

00:05:01,120 --> 00:05:06,080
standards but we'll get to

00:05:02,720 --> 00:05:08,960
it but especially it's really a very uh

00:05:06,080 --> 00:05:10,000
in innovative framework i would say for

00:05:08,960 --> 00:05:13,039
companies that are looking

00:05:10,000 --> 00:05:13,919
to bring new features to to the

00:05:13,039 --> 00:05:16,720
customers

00:05:13,919 --> 00:05:17,199
uh with consistency and we can see that

00:05:16,720 --> 00:05:20,479
um

00:05:17,199 --> 00:05:23,759
well it was created around 2003 uh and

00:05:20,479 --> 00:05:24,639
we can see that it's getting its own

00:05:23,759 --> 00:05:26,720
attraction

00:05:24,639 --> 00:05:28,639
in sectors like science and education

00:05:26,720 --> 00:05:31,120
computers electronics

00:05:28,639 --> 00:05:33,440
and there are different companies big

00:05:31,120 --> 00:05:37,440
companies with

00:05:33,440 --> 00:05:38,000
giant data transactions using it like

00:05:37,440 --> 00:05:40,880
pinterest

00:05:38,000 --> 00:05:42,400
instagram not only django but also

00:05:40,880 --> 00:05:46,000
django so it's a proof that

00:05:42,400 --> 00:05:50,479
it can be uh scalable until certain

00:05:46,000 --> 00:05:53,280
points and we get to the point where we

00:05:50,479 --> 00:05:54,880
will look at our case looking at our

00:05:53,280 --> 00:05:56,479
case and first of all

00:05:54,880 --> 00:05:58,160
i need you to understand a little bit

00:05:56,479 --> 00:06:01,600
better what is hub what

00:05:58,160 --> 00:06:05,120
we do uh mostly because uh it is

00:06:01,600 --> 00:06:08,160
required for me to explain afterwards um

00:06:05,120 --> 00:06:10,720
our path in our journey and why

00:06:08,160 --> 00:06:12,160
did we take uh the decisions that we

00:06:10,720 --> 00:06:15,759
that we took in the past

00:06:12,160 --> 00:06:18,720
and so explaining a little bit you know

00:06:15,759 --> 00:06:19,759
i will be as brief as i can with

00:06:18,720 --> 00:06:22,720
explanations

00:06:19,759 --> 00:06:24,000
but mostly hub at hub what we what what

00:06:22,720 --> 00:06:26,880
we do is manage

00:06:24,000 --> 00:06:28,560
the supply chain of fashion brands and

00:06:26,880 --> 00:06:31,039
so we have this platform

00:06:28,560 --> 00:06:32,319
that gives this the end-to-end

00:06:31,039 --> 00:06:35,280
visibility

00:06:32,319 --> 00:06:35,759
and and traction of all the physical

00:06:35,280 --> 00:06:39,120
flow

00:06:35,759 --> 00:06:40,000
of goods and also consequently uh the

00:06:39,120 --> 00:06:43,280
data flow

00:06:40,000 --> 00:06:45,759
of uh their goods and so we are really

00:06:43,280 --> 00:06:47,600
working from their production sites in

00:06:45,759 --> 00:06:50,800
china in india in

00:06:47,600 --> 00:06:52,960
northern africa until the end delivery

00:06:50,800 --> 00:06:54,800
decent delivery could be around the

00:06:52,960 --> 00:06:58,000
world we are living for more than

00:06:54,800 --> 00:06:59,039
uh 130 countries already so it's really

00:06:58,000 --> 00:07:02,240
a global

00:06:59,039 --> 00:07:06,160
uh supply chain that we are managing and

00:07:02,240 --> 00:07:07,520
we are giving and making available the

00:07:06,160 --> 00:07:09,360
infrastructure

00:07:07,520 --> 00:07:10,560
for the brands to use and this

00:07:09,360 --> 00:07:13,599
infrastructure is not

00:07:10,560 --> 00:07:14,880
ours it's a partner-based infrastructure

00:07:13,599 --> 00:07:18,240
so we use

00:07:14,880 --> 00:07:19,199
partners like 3pl so third-party

00:07:18,240 --> 00:07:21,840
logistics

00:07:19,199 --> 00:07:22,720
that own warehouses like maersk like

00:07:21,840 --> 00:07:25,759
agility

00:07:22,720 --> 00:07:29,120
we use transportation companies like ups

00:07:25,759 --> 00:07:32,720
dhl fedex and we also

00:07:29,120 --> 00:07:35,840
integrate with other solutions like

00:07:32,720 --> 00:07:38,400
online stores marketplaces and the goal

00:07:35,840 --> 00:07:39,199
is really to be able to give the full

00:07:38,400 --> 00:07:41,599
digital

00:07:39,199 --> 00:07:43,280
experience to the brand from their

00:07:41,599 --> 00:07:45,280
production sites from the moment that

00:07:43,280 --> 00:07:47,840
the production is ready

00:07:45,280 --> 00:07:48,720
in their factories or in their suppliers

00:07:47,840 --> 00:07:52,160
factories

00:07:48,720 --> 00:07:55,759
until one of you buys in a

00:07:52,160 --> 00:07:58,720
store or in uh online um

00:07:55,759 --> 00:08:00,080
or e-commerce shop so it's really this

00:07:58,720 --> 00:08:02,400
end-to-end solution

00:08:00,080 --> 00:08:03,599
an omni-channel solution too because we

00:08:02,400 --> 00:08:06,160
are managing

00:08:03,599 --> 00:08:06,800
all the sales channels of the brands

00:08:06,160 --> 00:08:09,599
another

00:08:06,800 --> 00:08:10,080
positive aspect to it is that as we are

00:08:09,599 --> 00:08:13,840
so

00:08:10,080 --> 00:08:17,039
um uh as we integrate so much

00:08:13,840 --> 00:08:20,160
uh vertically all of these processes we

00:08:17,039 --> 00:08:22,400
control the data so we are not uh

00:08:20,160 --> 00:08:24,080
ingesting a lot of data from outside

00:08:22,400 --> 00:08:26,639
sources that we don't control

00:08:24,080 --> 00:08:28,879
uh when we need these outside sources is

00:08:26,639 --> 00:08:32,240
in very controlled processes

00:08:28,879 --> 00:08:34,800
that we are managing actively so we get

00:08:32,240 --> 00:08:36,640
all the data basically from the the

00:08:34,800 --> 00:08:39,200
supply chain of a brand

00:08:36,640 --> 00:08:40,800
we use a global partner network so as i

00:08:39,200 --> 00:08:43,279
was referring to

00:08:40,800 --> 00:08:44,800
we have a lot of a lot of different

00:08:43,279 --> 00:08:47,440
partners that we use

00:08:44,800 --> 00:08:48,160
today and another important aspect to it

00:08:47,440 --> 00:08:51,279
is really

00:08:48,160 --> 00:08:54,320
we use this logistics as a service

00:08:51,279 --> 00:08:56,480
business model and you have to

00:08:54,320 --> 00:08:57,760
i have to give you that context that in

00:08:56,480 --> 00:08:59,839
logistics

00:08:57,760 --> 00:09:01,519
um it is everything is very

00:08:59,839 --> 00:09:04,000
transactional based

00:09:01,519 --> 00:09:05,519
and we are bringing these logistics as a

00:09:04,000 --> 00:09:08,320
service business model

00:09:05,519 --> 00:09:09,680
a proxy for the software as a service

00:09:08,320 --> 00:09:12,399
and let me give you

00:09:09,680 --> 00:09:13,600
a proxy for you to to understand it

00:09:12,399 --> 00:09:16,720
better

00:09:13,600 --> 00:09:18,800
is well logistics is really well i pick

00:09:16,720 --> 00:09:19,920
up the product in point a i deliver it

00:09:18,800 --> 00:09:22,480
in point b

00:09:19,920 --> 00:09:23,279
and what we want to bring to the table

00:09:22,480 --> 00:09:26,480
is really

00:09:23,279 --> 00:09:27,519
okay but we don't need to think uh that

00:09:26,480 --> 00:09:30,080
way anymore

00:09:27,519 --> 00:09:31,440
we can think in the in a management

00:09:30,080 --> 00:09:34,160
perspective in

00:09:31,440 --> 00:09:36,160
a more complex and in a holistic

00:09:34,160 --> 00:09:38,959
perspective of the supply chain

00:09:36,160 --> 00:09:39,440
and so give you an example is exactly as

00:09:38,959 --> 00:09:43,120
us

00:09:39,440 --> 00:09:47,680
hub we use um a platform like

00:09:43,120 --> 00:09:51,279
amazon web services where we have

00:09:47,680 --> 00:09:53,839
most of our servers or machines

00:09:51,279 --> 00:09:54,880
and so we don't we get we don't have

00:09:53,839 --> 00:09:56,720
that much

00:09:54,880 --> 00:09:58,720
physical machines anymore physical

00:09:56,720 --> 00:10:01,120
servers we are using this

00:09:58,720 --> 00:10:01,920
uh this platform to really have this

00:10:01,120 --> 00:10:05,120
digital

00:10:01,920 --> 00:10:07,120
access to uh to this infrastructure

00:10:05,120 --> 00:10:08,160
at the same way we are building these to

00:10:07,120 --> 00:10:11,360
the brands

00:10:08,160 --> 00:10:12,640
instead of using uh like data warehouses

00:10:11,360 --> 00:10:15,200
we are using

00:10:12,640 --> 00:10:17,279
physical warehouses but the idea is the

00:10:15,200 --> 00:10:19,839
same so they have access to

00:10:17,279 --> 00:10:20,640
an infrastructure and they have a full

00:10:19,839 --> 00:10:23,920
00:10:20,640 --> 00:10:26,800
digital solution for them to overcome

00:10:23,920 --> 00:10:27,440
the obstacles of of the physical flow of

00:10:26,800 --> 00:10:29,360
goods

00:10:27,440 --> 00:10:31,440
across the world that is something that

00:10:29,360 --> 00:10:34,320
is quite complex and so

00:10:31,440 --> 00:10:35,680
in the end we get to this proxy where we

00:10:34,320 --> 00:10:37,600
are the platform for

00:10:35,680 --> 00:10:39,600
that provides all of this infrastructure

00:10:37,600 --> 00:10:42,640
to the brand and the brand focus

00:10:39,600 --> 00:10:45,920
itself in their product

00:10:42,640 --> 00:10:46,880
development in their sales and we will

00:10:45,920 --> 00:10:50,959
be managing

00:10:46,880 --> 00:10:51,920
all the rest well we have the overview

00:10:50,959 --> 00:10:55,920
so i

00:10:51,920 --> 00:10:59,040
hopefully you get um a clear picture of

00:10:55,920 --> 00:11:01,440
what we do um and now

00:10:59,040 --> 00:11:02,320
let me try to introduce you a little bit

00:11:01,440 --> 00:11:05,839
the path

00:11:02,320 --> 00:11:08,160
and the decision making process

00:11:05,839 --> 00:11:09,279
uh a lot of dimensions that are regarded

00:11:08,160 --> 00:11:13,040
that um

00:11:09,279 --> 00:11:16,320
that are related with with technology so

00:11:13,040 --> 00:11:19,519
starting with it and i have here uh

00:11:16,320 --> 00:11:21,519
a before uh django but um

00:11:19,519 --> 00:11:22,880
it's not just before it's really the

00:11:21,519 --> 00:11:25,920
beginning for us

00:11:22,880 --> 00:11:26,880
of uh using django internally so before

00:11:25,920 --> 00:11:31,040
django we

00:11:26,880 --> 00:11:34,079
we had um a monolith solution

00:11:31,040 --> 00:11:37,120
really it was a for quick prototyping

00:11:34,079 --> 00:11:39,920
mvp development and as

00:11:37,120 --> 00:11:41,200
all the startups uh really in the in the

00:11:39,920 --> 00:11:43,920
beginning you want to get

00:11:41,200 --> 00:11:44,720
your product as soon as possible to the

00:11:43,920 --> 00:11:47,839
market

00:11:44,720 --> 00:11:48,959
um and we use different solutions there

00:11:47,839 --> 00:11:50,399
but mainly we get

00:11:48,959 --> 00:11:52,560
we get to a point where we have a

00:11:50,399 --> 00:11:54,839
monolith but

00:11:52,560 --> 00:11:56,160
with a lot of constraints in terms of

00:11:54,839 --> 00:11:58,079
performance

00:11:56,160 --> 00:11:59,519
and so in that sense and then in that

00:11:58,079 --> 00:12:02,800
moment we we start to

00:11:59,519 --> 00:12:03,279
uh wondering what uh can we do should we

00:12:02,800 --> 00:12:06,240
start

00:12:03,279 --> 00:12:07,519
breaking it down already and how and

00:12:06,240 --> 00:12:10,800
what decision what

00:12:07,519 --> 00:12:12,880
bounded context should we look at

00:12:10,800 --> 00:12:14,079
and so before doing that our decision

00:12:12,880 --> 00:12:18,240
was to build

00:12:14,079 --> 00:12:21,440
um one new monolith

00:12:18,240 --> 00:12:24,480
in a way but a more structured one

00:12:21,440 --> 00:12:26,720
and that was basically extending uh the

00:12:24,480 --> 00:12:29,920
one that we had already so we we call

00:12:26,720 --> 00:12:33,440
we call this our core api

00:12:29,920 --> 00:12:36,480
and was built uh with django and um

00:12:33,440 --> 00:12:38,320
the idea was and and because at that

00:12:36,480 --> 00:12:40,880
moment we were thinking about service

00:12:38,320 --> 00:12:44,320
oriented architectures we were not

00:12:40,880 --> 00:12:47,200
yet in in like microservices because we

00:12:44,320 --> 00:12:49,600
didn't have a clear picture of these

00:12:47,200 --> 00:12:51,680
contexts and the complexity to manage

00:12:49,600 --> 00:12:53,120
all the flow of information and so we

00:12:51,680 --> 00:12:57,040
started to

00:12:53,120 --> 00:13:00,160
to really uh with this monolith again

00:12:57,040 --> 00:13:01,040
but instead of being just a monolith

00:13:00,160 --> 00:13:04,639
what we did

00:13:01,040 --> 00:13:07,440
was uh start with a jingle project

00:13:04,639 --> 00:13:08,240
with several apps internally that were

00:13:07,440 --> 00:13:12,160
more or less

00:13:08,240 --> 00:13:15,279
our approach to a service oriented

00:13:12,160 --> 00:13:18,000
uh architecture in a way

00:13:15,279 --> 00:13:18,800
because what we did was we break it down

00:13:18,000 --> 00:13:20,639
to

00:13:18,800 --> 00:13:22,079
the ornate management system that has

00:13:20,639 --> 00:13:24,480
all the information about

00:13:22,079 --> 00:13:25,680
the orders about the purchase orders to

00:13:24,480 --> 00:13:29,600
the suppliers

00:13:25,680 --> 00:13:30,079
we had the delivery management system

00:13:29,600 --> 00:13:32,560
that had

00:13:30,079 --> 00:13:34,000
all the information about the deliveries

00:13:32,560 --> 00:13:36,240
to the end customers

00:13:34,000 --> 00:13:38,399
we have inventory management systems all

00:13:36,240 --> 00:13:40,720
the information about stock levels about

00:13:38,399 --> 00:13:44,160
the management of the stock itself

00:13:40,720 --> 00:13:46,480
we had a an app for uh the what we call

00:13:44,160 --> 00:13:47,600
the master data there was a product

00:13:46,480 --> 00:13:50,639
catalog was

00:13:47,600 --> 00:13:53,519
customers was uh all different

00:13:50,639 --> 00:13:54,720
more statical information let's let's

00:13:53,519 --> 00:13:57,920
say it

00:13:54,720 --> 00:13:58,560
and so in some way we were starting to

00:13:57,920 --> 00:14:00,720
break

00:13:58,560 --> 00:14:02,800
uh things up a bit but still it was the

00:14:00,720 --> 00:14:05,920
same project same code base

00:14:02,800 --> 00:14:08,800
so it wasn't uh really uh

00:14:05,920 --> 00:14:09,920
separated in that in that sense and

00:14:08,800 --> 00:14:12,959
another important thing

00:14:09,920 --> 00:14:16,160
was we were using the same data

00:14:12,959 --> 00:14:19,279
infrastructure so basically uh their

00:14:16,160 --> 00:14:20,480
the persistency was still completely

00:14:19,279 --> 00:14:23,279
coupled

00:14:20,480 --> 00:14:24,240
and so we were not getting too much of

00:14:23,279 --> 00:14:27,440
um

00:14:24,240 --> 00:14:30,480
i would say of benefit in terms of uh

00:14:27,440 --> 00:14:32,399
development cycle and speed but at least

00:14:30,480 --> 00:14:36,079
we have a more performant

00:14:32,399 --> 00:14:37,199
uh framework to for our main processes

00:14:36,079 --> 00:14:39,920
and that was

00:14:37,199 --> 00:14:41,600
really the the goal at that moment was

00:14:39,920 --> 00:14:44,000
really to guarantee that we had a

00:14:41,600 --> 00:14:46,560
framework that could help us uh

00:14:44,000 --> 00:14:47,680
getting more performance because the the

00:14:46,560 --> 00:14:50,480
data was

00:14:47,680 --> 00:14:52,480
growing and growing substantially at at

00:14:50,480 --> 00:14:55,120
this moment

00:14:52,480 --> 00:14:55,600
um another example that i want to to

00:14:55,120 --> 00:14:58,079
give you

00:14:55,600 --> 00:14:59,600
at this moment we started to integrate a

00:14:58,079 --> 00:15:03,199
lot of different partners

00:14:59,600 --> 00:15:06,079
as i started stated earlier uh in

00:15:03,199 --> 00:15:08,160
the most complex ones were definitely

00:15:06,079 --> 00:15:09,440
the warehouses so there's a lot of

00:15:08,160 --> 00:15:12,560
complex city

00:15:09,440 --> 00:15:13,360
a lot of specific processes that we

00:15:12,560 --> 00:15:15,760
needed to

00:15:13,360 --> 00:15:17,199
to integrate with our partners and

00:15:15,760 --> 00:15:20,160
especially

00:15:17,199 --> 00:15:22,480
the integration layer they are uh quite

00:15:20,160 --> 00:15:26,240
complex when we are looking at

00:15:22,480 --> 00:15:27,279
this detailed view of of the data so we

00:15:26,240 --> 00:15:30,480
needed to ensure

00:15:27,279 --> 00:15:31,600
that a good mapping and a solid

00:15:30,480 --> 00:15:33,920
integration layer

00:15:31,600 --> 00:15:35,440
we needed to handle authentication we

00:15:33,920 --> 00:15:37,519
needed to guarantee

00:15:35,440 --> 00:15:39,199
all the business logic for this

00:15:37,519 --> 00:15:42,160
operational procedures

00:15:39,199 --> 00:15:43,440
and also everything that was related to

00:15:42,160 --> 00:15:47,040
data validations

00:15:43,440 --> 00:15:50,480
and so to do this we created

00:15:47,040 --> 00:15:50,959
a new django project and we started to

00:15:50,480 --> 00:15:53,759
build

00:15:50,959 --> 00:15:55,120
what we called our 3pl third-party

00:15:53,759 --> 00:15:58,480
logistics

00:15:55,120 --> 00:16:02,600
api it was a new project with

00:15:58,480 --> 00:16:05,839
a new data structure so we were finally

00:16:02,600 --> 00:16:09,279
separating some context but still

00:16:05,839 --> 00:16:12,399
this was something uh newer

00:16:09,279 --> 00:16:13,920
and so it wasn't really a breakdown of

00:16:12,399 --> 00:16:17,120
what we had so far

00:16:13,920 --> 00:16:18,959
uh it was a a new development on top

00:16:17,120 --> 00:16:20,480
of we what we had but it was a new

00:16:18,959 --> 00:16:24,160
project indeed and

00:16:20,480 --> 00:16:26,959
an extension of of of our business model

00:16:24,160 --> 00:16:28,399
with an orientation for a specific

00:16:26,959 --> 00:16:32,000
service

00:16:28,399 --> 00:16:33,199
and so uh the the main idea and what i

00:16:32,000 --> 00:16:36,399
want you to get

00:16:33,199 --> 00:16:38,880
uh as uh as a

00:16:36,399 --> 00:16:39,519
high-level picture at this moment is is

00:16:38,880 --> 00:16:42,720
really this

00:16:39,519 --> 00:16:46,240
before jungle beginning of our usage

00:16:42,720 --> 00:16:48,800
of jungle is and i think for everyone it

00:16:46,240 --> 00:16:52,000
happens a bit like this it's not

00:16:48,800 --> 00:16:54,160
um a clear path is really a bumpy road

00:16:52,000 --> 00:16:55,120
where you are testing out you are taking

00:16:54,160 --> 00:16:57,680
decisions

00:16:55,120 --> 00:16:59,759
you are making a lot of things happening

00:16:57,680 --> 00:17:02,800
but you are not completely

00:16:59,759 --> 00:17:05,280
confident of the way and and that's

00:17:02,800 --> 00:17:06,720
all right you need to get a lot of

00:17:05,280 --> 00:17:09,280
insight and a lot of

00:17:06,720 --> 00:17:10,559
knowledge before taking decisions like

00:17:09,280 --> 00:17:13,360
well this is my

00:17:10,559 --> 00:17:14,319
uh architecture that i should choose

00:17:13,360 --> 00:17:16,400
this is my

00:17:14,319 --> 00:17:18,000
the the framework the go to framework

00:17:16,400 --> 00:17:20,480
for me or

00:17:18,000 --> 00:17:21,839
this is the way that i should shape my

00:17:20,480 --> 00:17:22,959
architecture so there's a lot of

00:17:21,839 --> 00:17:26,319
complexity

00:17:22,959 --> 00:17:28,400
in that decision making but the idea

00:17:26,319 --> 00:17:30,840
was well we get to a point where we

00:17:28,400 --> 00:17:34,160
could really integrate

00:17:30,840 --> 00:17:36,799
our partners using this

00:17:34,160 --> 00:17:39,200
new service and guaranteeing that we had

00:17:36,799 --> 00:17:40,320
our core systems they have their owns

00:17:39,200 --> 00:17:43,039
and there was

00:17:40,320 --> 00:17:43,520
this uh this uh layer in the middle that

00:17:43,039 --> 00:17:46,640
has

00:17:43,520 --> 00:17:49,520
also a lot of business logic to

00:17:46,640 --> 00:17:51,120
to perform the processes and there were

00:17:49,520 --> 00:17:53,200
different processes we had

00:17:51,120 --> 00:17:55,440
the the fulfillment in the warehousing

00:17:53,200 --> 00:17:57,679
the shipping process in the warehousing

00:17:55,440 --> 00:17:59,440
we have uh stock transfers from our

00:17:57,679 --> 00:18:02,400
houses to their warehouses

00:17:59,440 --> 00:18:03,919
stock visibility and management but the

00:18:02,400 --> 00:18:07,039
main idea here is that

00:18:03,919 --> 00:18:07,679
you get to a point where the complexity

00:18:07,039 --> 00:18:10,720
starts

00:18:07,679 --> 00:18:12,400
to to increase and so uh we needed more

00:18:10,720 --> 00:18:13,679
services we started to build more

00:18:12,400 --> 00:18:16,640
services and stuff

00:18:13,679 --> 00:18:17,840
and you start to get a lot of

00:18:16,640 --> 00:18:21,120
limitations from

00:18:17,840 --> 00:18:23,520
this solution in a way because

00:18:21,120 --> 00:18:25,120
with the usage of more services you

00:18:23,520 --> 00:18:28,160
actually start to need a

00:18:25,120 --> 00:18:31,919
uh an api gateway and

00:18:28,160 --> 00:18:34,960
with that you get to to some problems

00:18:31,919 --> 00:18:37,679
like the the increased complexity on

00:18:34,960 --> 00:18:38,880
the routing data translation uh

00:18:37,679 --> 00:18:40,960
aggregation so

00:18:38,880 --> 00:18:42,080
there's a lot of complexity that started

00:18:40,960 --> 00:18:44,720
to arise at this

00:18:42,080 --> 00:18:46,160
moment and we needed to okay to take

00:18:44,720 --> 00:18:49,039
care of that so

00:18:46,160 --> 00:18:49,440
this is the before and the beginning of

00:18:49,039 --> 00:18:53,360
uh

00:18:49,440 --> 00:18:56,000
django for us and the advantage that i

00:18:53,360 --> 00:18:57,919
see and putting myself at that moment

00:18:56,000 --> 00:19:01,600
that was really the the community

00:18:57,919 --> 00:19:05,120
the very active community that our

00:19:01,600 --> 00:19:05,919
developers could uh use for our benefit

00:19:05,120 --> 00:19:08,160
and

00:19:05,919 --> 00:19:08,960
and uh and contribute in their way too

00:19:08,160 --> 00:19:11,440
so that's

00:19:08,960 --> 00:19:12,880
that's that's a great thing for for a

00:19:11,440 --> 00:19:16,160
framework

00:19:12,880 --> 00:19:16,720
the support for uh api development in

00:19:16,160 --> 00:19:19,840
terms of

00:19:16,720 --> 00:19:22,400
uh the usage and we use a lot

00:19:19,840 --> 00:19:24,559
uh obviously the general rest framework

00:19:22,400 --> 00:19:25,600
that the very very good documentation so

00:19:24,559 --> 00:19:28,480
tang was born

00:19:25,600 --> 00:19:29,600
uh from a new newspaper i don't know if

00:19:28,480 --> 00:19:31,919
that's why but

00:19:29,600 --> 00:19:32,799
uh the documentation is very good very

00:19:31,919 --> 00:19:35,840
clear

00:19:32,799 --> 00:19:38,320
uh and the good orm um

00:19:35,840 --> 00:19:39,840
also that is uh that was uh critical for

00:19:38,320 --> 00:19:40,400
us especially in the beginning where we

00:19:39,840 --> 00:19:43,760
had

00:19:40,400 --> 00:19:47,440
this massive database um

00:19:43,760 --> 00:19:50,799
to to really uh work on so the the rm

00:19:47,440 --> 00:19:53,200
uh orm is very intuitive in that sense

00:19:50,799 --> 00:19:55,280
and the easy to tweak common features

00:19:53,200 --> 00:19:58,000
what we used as a company mostly

00:19:55,280 --> 00:20:00,000
was the framework but also though or our

00:19:58,000 --> 00:20:02,320
m i was saying with bulls grass

00:20:00,000 --> 00:20:03,360
and the rest framework because we were

00:20:02,320 --> 00:20:06,960
very focused on

00:20:03,360 --> 00:20:10,080
api development

00:20:06,960 --> 00:20:13,360
and now we get to another

00:20:10,080 --> 00:20:16,640
point in our journey so we were

00:20:13,360 --> 00:20:18,559
mostly working uh with this um

00:20:16,640 --> 00:20:20,640
with this framework and the challenges

00:20:18,559 --> 00:20:22,880
that we were having

00:20:20,640 --> 00:20:23,919
were based on the complexity of

00:20:22,880 --> 00:20:27,600
everything that was

00:20:23,919 --> 00:20:29,919
around and so we needed to to adopt

00:20:27,600 --> 00:20:31,919
i would say a different perspective and

00:20:29,919 --> 00:20:34,640
in terms of that different perspective

00:20:31,919 --> 00:20:35,600
we we started to look at an

00:20:34,640 --> 00:20:38,559
understanding

00:20:35,600 --> 00:20:39,280
what are our bounded contexts can we

00:20:38,559 --> 00:20:42,320
break down

00:20:39,280 --> 00:20:44,880
more than just this service high-level

00:20:42,320 --> 00:20:47,520
service perspective can we go

00:20:44,880 --> 00:20:48,880
deeper than that and how can we do that

00:20:47,520 --> 00:20:51,440
and how can we understand

00:20:48,880 --> 00:20:52,720
what is abundant context for us and how

00:20:51,440 --> 00:20:55,440
can we use it

00:20:52,720 --> 00:20:56,240
and so we started to look at this

00:20:55,440 --> 00:20:59,200
distribution

00:20:56,240 --> 00:21:02,080
event-driven architecture and this was

00:20:59,200 --> 00:21:04,720
the point where we started to

00:21:02,080 --> 00:21:05,280
really break down the monolith and this

00:21:04,720 --> 00:21:08,320
is

00:21:05,280 --> 00:21:11,440
i think for all companies a

00:21:08,320 --> 00:21:13,840
hard journey a very uh

00:21:11,440 --> 00:21:14,559
time-consuming uh journey but it's

00:21:13,840 --> 00:21:17,600
really

00:21:14,559 --> 00:21:18,000
what gives us the power to to scale and

00:21:17,600 --> 00:21:20,320
so

00:21:18,000 --> 00:21:21,120
we started to break it and especially

00:21:20,320 --> 00:21:24,240
guarantee that

00:21:21,120 --> 00:21:26,080
these are completely decoupled services

00:21:24,240 --> 00:21:28,960
that we are bringing to the table

00:21:26,080 --> 00:21:30,400
and so uh organize the solutions around

00:21:28,960 --> 00:21:33,039
this bounded context

00:21:30,400 --> 00:21:35,280
is absolutely important guaranteeing

00:21:33,039 --> 00:21:35,679
that we have the data segregation that

00:21:35,280 --> 00:21:37,600
we

00:21:35,679 --> 00:21:38,960
as i told you we didn't have at this

00:21:37,600 --> 00:21:42,080
moment just for like

00:21:38,960 --> 00:21:42,799
new services but mostly the data was

00:21:42,080 --> 00:21:45,760
still

00:21:42,799 --> 00:21:47,039
absolutely coupled and the main goals

00:21:45,760 --> 00:21:50,159
were really to improve

00:21:47,039 --> 00:21:52,320
uh scalability performance

00:21:50,159 --> 00:21:53,440
manageability because every time we

00:21:52,320 --> 00:21:56,640
needed to

00:21:53,440 --> 00:21:58,240
to maintain uh some of these code bases

00:21:56,640 --> 00:22:01,039
the complexity was

00:21:58,240 --> 00:22:03,600
extremely high and extensibility so we

00:22:01,039 --> 00:22:06,080
needed more features new features new

00:22:03,600 --> 00:22:06,799
uh things to come up and uh and we

00:22:06,080 --> 00:22:09,600
needed

00:22:06,799 --> 00:22:11,760
uh capacity to do that and there there

00:22:09,600 --> 00:22:15,360
was a lot of complexity for us

00:22:11,760 --> 00:22:17,360
to achieve that um and so for the new

00:22:15,360 --> 00:22:18,480
services when we decided to start

00:22:17,360 --> 00:22:21,679
breaking down

00:22:18,480 --> 00:22:24,320
this uh this monolith uh we

00:22:21,679 --> 00:22:25,679
finally had the the ability and the

00:22:24,320 --> 00:22:29,280
capacity to

00:22:25,679 --> 00:22:31,200
work uh really this full stack approach

00:22:29,280 --> 00:22:33,440
is really from the data to

00:22:31,200 --> 00:22:34,320
the business logic to the application

00:22:33,440 --> 00:22:38,880
layer and so

00:22:34,320 --> 00:22:42,240
we um start with and it was our first

00:22:38,880 --> 00:22:44,640
um approach like this it was like

00:22:42,240 --> 00:22:46,159
a code first approach with junk

00:22:44,640 --> 00:22:48,320
migrations we wanted to

00:22:46,159 --> 00:22:49,679
and we could finally define everything

00:22:48,320 --> 00:22:52,640
from start

00:22:49,679 --> 00:22:53,200
we could and we start to use uh signals

00:22:52,640 --> 00:22:56,640
too

00:22:53,200 --> 00:22:59,120
really to start decoupling our api

00:22:56,640 --> 00:23:01,039
actions from everything that was related

00:22:59,120 --> 00:23:03,039
with domain with the data layer

00:23:01,039 --> 00:23:05,039
with the advanced with the commands that

00:23:03,039 --> 00:23:07,760
were being generated

00:23:05,039 --> 00:23:09,280
and these events and commands were being

00:23:07,760 --> 00:23:12,320
generated by

00:23:09,280 --> 00:23:13,440
our message broker that we started to

00:23:12,320 --> 00:23:16,480
use back then

00:23:13,440 --> 00:23:18,559
that was kafka to guarantee that uh all

00:23:16,480 --> 00:23:20,000
the different bounded contexts were

00:23:18,559 --> 00:23:23,520
communicating

00:23:20,000 --> 00:23:26,559
asynchronously between them and um

00:23:23,520 --> 00:23:28,720
and so we started to be much

00:23:26,559 --> 00:23:30,240
more i would say pragmatic in terms of

00:23:28,720 --> 00:23:33,600
the approach especially

00:23:30,240 --> 00:23:36,640
we start to have much smaller um

00:23:33,600 --> 00:23:39,200
scopes to to to develop

00:23:36,640 --> 00:23:41,440
things so we we start to have smaller

00:23:39,200 --> 00:23:42,720
scopes in terms of requirements in terms

00:23:41,440 --> 00:23:45,919
of what we

00:23:42,720 --> 00:23:47,520
wanted to to to develop what features we

00:23:45,919 --> 00:23:50,559
want to bring to the product

00:23:47,520 --> 00:23:53,679
and the development itself gets got

00:23:50,559 --> 00:23:55,440
much easier and much faster

00:23:53,679 --> 00:23:56,799
and again i think that is one of the

00:23:55,440 --> 00:24:00,400
advantage of the

00:23:56,799 --> 00:24:04,000
the django framework here is really uh

00:24:00,400 --> 00:24:06,559
the reliability with speed

00:24:04,000 --> 00:24:07,760
for development so you can bring

00:24:06,559 --> 00:24:10,400
innovation

00:24:07,760 --> 00:24:11,200
to to the product without compromising

00:24:10,400 --> 00:24:14,240
that much

00:24:11,200 --> 00:24:15,760
uh real about reliability and efficiency

00:24:14,240 --> 00:24:18,320
and so

00:24:15,760 --> 00:24:19,360
obviously all the the companies need to

00:24:18,320 --> 00:24:21,840
understand

00:24:19,360 --> 00:24:24,000
within this triangle how are you

00:24:21,840 --> 00:24:26,080
positioning yourself yourself

00:24:24,000 --> 00:24:27,200
but we want to bring innovation so we

00:24:26,080 --> 00:24:30,880
need something

00:24:27,200 --> 00:24:33,679
that we can act upon quickly and django

00:24:30,880 --> 00:24:34,320
brought that to us we also started at

00:24:33,679 --> 00:24:37,200
this moment

00:24:34,320 --> 00:24:38,080
to build our own packages our own

00:24:37,200 --> 00:24:41,520
wrappers

00:24:38,080 --> 00:24:45,120
uh on top of the the drf

00:24:41,520 --> 00:24:46,000
things like http helpers authentication

00:24:45,120 --> 00:24:49,200
handlings

00:24:46,000 --> 00:24:52,400
we start to build on top of uh

00:24:49,200 --> 00:24:54,960
kafka tool for producing consuming

00:24:52,400 --> 00:24:56,720
events about a boilerplate for that and

00:24:54,960 --> 00:25:00,400
we will see that we use that

00:24:56,720 --> 00:25:03,279
in more than just the software

00:25:00,400 --> 00:25:04,240
development we will get to it uh and

00:25:03,279 --> 00:25:06,400
event logging

00:25:04,240 --> 00:25:07,600
a lot of different things and so we

00:25:06,400 --> 00:25:11,279
start to extend

00:25:07,600 --> 00:25:14,880
a lot of a lot of features and we

00:25:11,279 --> 00:25:16,720
created our own environment i would say

00:25:14,880 --> 00:25:17,919
you see here that the journey now

00:25:16,720 --> 00:25:20,799
continues with

00:25:17,919 --> 00:25:22,720
this product driven perspective and then

00:25:20,799 --> 00:25:23,360
we have the data redeem and the ai

00:25:22,720 --> 00:25:25,520
driven

00:25:23,360 --> 00:25:26,960
and i will try to give you this

00:25:25,520 --> 00:25:30,960
perspective and

00:25:26,960 --> 00:25:34,159
somehow somehow correlate with

00:25:30,960 --> 00:25:36,640
how we think about architecture about

00:25:34,159 --> 00:25:39,120
technology about the the frameworks that

00:25:36,640 --> 00:25:39,120
we use

00:25:39,360 --> 00:25:43,600
in terms of the product driven um we get

00:25:42,159 --> 00:25:46,960
to a point then after

00:25:43,600 --> 00:25:48,640
all of this change our uh product

00:25:46,960 --> 00:25:51,520
especially our architecture

00:25:48,640 --> 00:25:52,640
changed completely and we got we got to

00:25:51,520 --> 00:25:55,200
this point

00:25:52,640 --> 00:25:56,400
so we got to the point where we have a

00:25:55,200 --> 00:25:58,400
bounded context

00:25:56,400 --> 00:26:00,480
clearly defined like the inventory

00:25:58,400 --> 00:26:01,440
management delivery management tracking

00:26:00,480 --> 00:26:04,960
experience

00:26:01,440 --> 00:26:07,919
order management all of these um

00:26:04,960 --> 00:26:10,000
clearly defined bounded contacts and

00:26:07,919 --> 00:26:12,880
inside of each mounted contacts

00:26:10,000 --> 00:26:13,840
you have a lot of different micro

00:26:12,880 --> 00:26:15,840
services

00:26:13,840 --> 00:26:18,320
and obviously inside of each bonded

00:26:15,840 --> 00:26:21,600
context they can

00:26:18,320 --> 00:26:22,960
communicate with rest outside everything

00:26:21,600 --> 00:26:25,919
has to pass

00:26:22,960 --> 00:26:26,320
through kafka so basically with commands

00:26:25,919 --> 00:26:29,600
or

00:26:26,320 --> 00:26:32,159
events everything has to go through our

00:26:29,600 --> 00:26:33,679
message broker and that's the definition

00:26:32,159 --> 00:26:37,120
for at least for us

00:26:33,679 --> 00:26:38,159
of a well-defined micro service

00:26:37,120 --> 00:26:40,640
architecture

00:26:38,159 --> 00:26:41,919
and a distributed uh one on the in that

00:26:40,640 --> 00:26:43,760
perspective and so

00:26:41,919 --> 00:26:45,760
you can see that it's much more

00:26:43,760 --> 00:26:48,880
organized we now know

00:26:45,760 --> 00:26:50,960
uh much better what are our context

00:26:48,880 --> 00:26:51,840
where is the complexity because these

00:26:50,960 --> 00:26:54,559
contexts

00:26:51,840 --> 00:26:55,919
are highly correlated with the business

00:26:54,559 --> 00:26:58,960
complexity

00:26:55,919 --> 00:26:59,919
or at least at the the entities business

00:26:58,960 --> 00:27:02,480
entities

00:26:59,919 --> 00:27:04,240
that are being managed inside of each

00:27:02,480 --> 00:27:06,559
funded context

00:27:04,240 --> 00:27:07,520
and so we get to this point where we

00:27:06,559 --> 00:27:10,720
have a much

00:27:07,520 --> 00:27:14,799
much uh clear picture of what

00:27:10,720 --> 00:27:17,960
we were building in terms of our

00:27:14,799 --> 00:27:20,720
tech stack as you can see we are pretty

00:27:17,960 --> 00:27:21,520
straightforward so we use kafka for the

00:27:20,720 --> 00:27:26,000
messaging

00:27:21,520 --> 00:27:29,279
we use as for databases postgres mainly

00:27:26,000 --> 00:27:33,039
we also use mongodb for small

00:27:29,279 --> 00:27:36,159
smaller services

00:27:33,039 --> 00:27:39,279
we use for the back end jungle and nest

00:27:36,159 --> 00:27:40,159
mostly for our uh gateways and in the

00:27:39,279 --> 00:27:42,720
front end

00:27:40,159 --> 00:27:43,200
we use angles so pretty straightforward

00:27:42,720 --> 00:27:45,360
and

00:27:43,200 --> 00:27:46,640
i don't think that you need to be very

00:27:45,360 --> 00:27:48,960
um

00:27:46,640 --> 00:27:50,880
you you you need to be very agnostic in

00:27:48,960 --> 00:27:54,640
a way so to be able to not

00:27:50,880 --> 00:27:55,039
get too stuck uh inside of a framework

00:27:54,640 --> 00:27:57,919
or

00:27:55,039 --> 00:28:00,240
a language but you need also some sort

00:27:57,919 --> 00:28:03,360
of specialization to guarantee that you

00:28:00,240 --> 00:28:03,840
are and you have the the capacity and

00:28:03,360 --> 00:28:07,279
the

00:28:03,840 --> 00:28:10,399
the the competencies to develop

00:28:07,279 --> 00:28:13,880
uh with highly innovative

00:28:10,399 --> 00:28:18,559
uh pace and at the same time with

00:28:13,880 --> 00:28:21,600
reliability and efficiency again

00:28:18,559 --> 00:28:22,000
and now to try to correlate this and

00:28:21,600 --> 00:28:24,799
this

00:28:22,000 --> 00:28:27,200
software development with other

00:28:24,799 --> 00:28:30,480
characteristics that we believe that are

00:28:27,200 --> 00:28:33,919
critical for for a company

00:28:30,480 --> 00:28:36,320
and uh the journey for a company and

00:28:33,919 --> 00:28:37,520
you know that you see that everywhere

00:28:36,320 --> 00:28:41,039
all the companies are now

00:28:37,520 --> 00:28:44,080
or data driven or ai driven and

00:28:41,039 --> 00:28:47,520
at least i will give you my view

00:28:44,080 --> 00:28:51,039
our view of what does this mean i have a

00:28:47,520 --> 00:28:52,000
article on medium that i i i go deeper

00:28:51,039 --> 00:28:54,640
on this but

00:28:52,000 --> 00:28:56,720
the idea when you are a product driven

00:28:54,640 --> 00:28:58,960
company you are basically solving all

00:28:56,720 --> 00:28:59,440
your problems with new features so we

00:28:58,960 --> 00:29:01,600
are

00:28:59,440 --> 00:29:03,679
focusing on delivering new features to

00:29:01,600 --> 00:29:06,480
the customer and you need to be

00:29:03,679 --> 00:29:06,880
in a very innovative to do that and also

00:29:06,480 --> 00:29:09,600
have

00:29:06,880 --> 00:29:10,640
pace on your development to to really

00:29:09,600 --> 00:29:12,960
deliver

00:29:10,640 --> 00:29:13,840
that value to the customer when you are

00:29:12,960 --> 00:29:17,200
data-driven

00:29:13,840 --> 00:29:20,480
you are absolutely um obsessed

00:29:17,200 --> 00:29:23,600
with ingesting all the data that you can

00:29:20,480 --> 00:29:24,880
to be able to take better decisions but

00:29:23,600 --> 00:29:28,000
these decisions

00:29:24,880 --> 00:29:28,799
are not easy to extract from the data so

00:29:28,000 --> 00:29:31,520
you have

00:29:28,799 --> 00:29:31,919
these data lakes or whatever and you

00:29:31,520 --> 00:29:34,559
have

00:29:31,919 --> 00:29:36,640
a lot of uh tools on top of it

00:29:34,559 --> 00:29:37,440
especially a lot of people also data

00:29:36,640 --> 00:29:40,000
analysts

00:29:37,440 --> 00:29:40,480
uh extracting knowledge from this data

00:29:40,000 --> 00:29:44,120
and

00:29:40,480 --> 00:29:47,039
helping you take the decisions uh or

00:29:44,120 --> 00:29:50,159
themselves taking the decisions on

00:29:47,039 --> 00:29:51,279
how to do what to do next how to what is

00:29:50,159 --> 00:29:54,640
the next step

00:29:51,279 --> 00:29:56,080
and so this data-driven and i i

00:29:54,640 --> 00:29:58,320
want also to give you another

00:29:56,080 --> 00:29:59,919
interesting perspective of using django

00:29:58,320 --> 00:30:02,960
and python in this

00:29:59,919 --> 00:30:06,320
case is that we can

00:30:02,960 --> 00:30:07,440
uh basically work and we have three main

00:30:06,320 --> 00:30:09,200
tech company

00:30:07,440 --> 00:30:11,360
tech teams that is the software

00:30:09,200 --> 00:30:14,640
development the data engineering

00:30:11,360 --> 00:30:17,919
and the aei team and all of them

00:30:14,640 --> 00:30:20,720
work with titan so there's already some

00:30:17,919 --> 00:30:21,200
uh interesting matches in terms of the

00:30:20,720 --> 00:30:23,360
the

00:30:21,200 --> 00:30:25,440
in common place in terms of all the

00:30:23,360 --> 00:30:28,640
teams and i'll get to some of the

00:30:25,440 --> 00:30:29,279
uh all other interesting aspects to it

00:30:28,640 --> 00:30:31,679
but

00:30:29,279 --> 00:30:34,320
first just to give you this idea of what

00:30:31,679 --> 00:30:37,600
does this means this data platform

00:30:34,320 --> 00:30:38,080
architecture that um i'm showing you

00:30:37,600 --> 00:30:40,159
here

00:30:38,080 --> 00:30:41,200
is we have on the left our source

00:30:40,159 --> 00:30:42,720
systems and

00:30:41,200 --> 00:30:44,799
when we are this due to different

00:30:42,720 --> 00:30:48,559
company what we want to ingest

00:30:44,799 --> 00:30:51,919
all of this information from uh our

00:30:48,559 --> 00:30:54,240
legacy systems or monolith or whatever

00:30:51,919 --> 00:30:55,440
and this is much more query based in a

00:30:54,240 --> 00:30:58,080
way

00:30:55,440 --> 00:30:58,480
then we have our new services and we

00:30:58,080 --> 00:31:01,519
want

00:30:58,480 --> 00:31:05,120
to plug this architecture that we saw

00:31:01,519 --> 00:31:07,039
earlier here that's why you see that

00:31:05,120 --> 00:31:08,880
the orchestrator that we have in the

00:31:07,039 --> 00:31:12,159
middle is basically

00:31:08,880 --> 00:31:13,519
developed by us it's it is custom made

00:31:12,159 --> 00:31:15,760
when we develop it with uh

00:31:13,519 --> 00:31:17,200
with python to guarantee that we can

00:31:15,760 --> 00:31:21,039
consume the events

00:31:17,200 --> 00:31:22,960
as another service is consuming um

00:31:21,039 --> 00:31:24,159
the events or commands being generated

00:31:22,960 --> 00:31:28,240
by one service

00:31:24,159 --> 00:31:32,080
we can also consume them here and

00:31:28,240 --> 00:31:34,320
using the same packages that we extended

00:31:32,080 --> 00:31:35,360
and i show and i talked to to you

00:31:34,320 --> 00:31:38,000
earlier about

00:31:35,360 --> 00:31:38,559
and so there's already conjugancy in

00:31:38,000 --> 00:31:42,159
terms of

00:31:38,559 --> 00:31:45,600
what we are using again the teams are

00:31:42,159 --> 00:31:47,519
much more close um

00:31:45,600 --> 00:31:49,360
connected interconnected and working

00:31:47,519 --> 00:31:50,880
together in that sense because

00:31:49,360 --> 00:31:52,399
every time a change is made in the

00:31:50,880 --> 00:31:54,640
software we need to replicate

00:31:52,399 --> 00:31:57,519
immediately here because

00:31:54,640 --> 00:31:57,840
it is our source of of the data that we

00:31:57,519 --> 00:32:00,480
are

00:31:57,840 --> 00:32:02,159
ingesting and also about all the

00:32:00,480 --> 00:32:05,039
products that we use internally

00:32:02,159 --> 00:32:06,720
uh being slack up spot people google

00:32:05,039 --> 00:32:09,360
analytics whatever

00:32:06,720 --> 00:32:11,440
all these products uh we are also

00:32:09,360 --> 00:32:13,519
ingesting all of this information

00:32:11,440 --> 00:32:15,519
and this information serves the purpose

00:32:13,519 --> 00:32:17,600
of our analysts that you see on the

00:32:15,519 --> 00:32:20,320
right this report layer

00:32:17,600 --> 00:32:20,960
but also serves the purpose of our

00:32:20,320 --> 00:32:24,480
models

00:32:20,960 --> 00:32:27,360
our algorithms and so this is

00:32:24,480 --> 00:32:28,080
i would say the next step and here your

00:32:27,360 --> 00:32:30,880
main

00:32:28,080 --> 00:32:33,279
focus as i was saying is uh earlier is

00:32:30,880 --> 00:32:36,399
really you want to deliver and to solve

00:32:33,279 --> 00:32:39,519
problems using as much data as you can

00:32:36,399 --> 00:32:42,399
to be able to rely

00:32:39,519 --> 00:32:43,519
and and get a much more fundamental

00:32:42,399 --> 00:32:46,799
answer to that

00:32:43,519 --> 00:32:47,360
problem and the the the opposite effect

00:32:46,799 --> 00:32:50,240
is that

00:32:47,360 --> 00:32:51,120
you get in here we we had a lot of

00:32:50,240 --> 00:32:53,039
analysts

00:32:51,120 --> 00:32:55,039
uh extracting knowledge from the data

00:32:53,039 --> 00:32:56,080
and that is i would say that the reverse

00:32:55,039 --> 00:33:00,559
side of the coin

00:32:56,080 --> 00:33:04,399
is there is much data to be analyzed

00:33:00,559 --> 00:33:07,679
and finally we get to a point where

00:33:04,399 --> 00:33:09,440
we uh want to become and this is a path

00:33:07,679 --> 00:33:11,840
in a long path that we are

00:33:09,440 --> 00:33:13,919
also doing right now and is becoming

00:33:11,840 --> 00:33:17,840
this ai driven company and

00:33:13,919 --> 00:33:20,399
a ai driven company uh the logic here

00:33:17,840 --> 00:33:21,519
is really that you want to solve all

00:33:20,399 --> 00:33:25,200
your problems or

00:33:21,519 --> 00:33:28,320
most of your problems with a model

00:33:25,200 --> 00:33:28,640
a model of the of the world a model of

00:33:28,320 --> 00:33:31,760
uh

00:33:28,640 --> 00:33:34,320
what's called a small world whatever

00:33:31,760 --> 00:33:35,360
is really replicate uh this

00:33:34,320 --> 00:33:38,080
understanding

00:33:35,360 --> 00:33:39,679
of the world that you you can perceive

00:33:38,080 --> 00:33:40,559
from the data that you've been

00:33:39,679 --> 00:33:42,960
collecting

00:33:40,559 --> 00:33:45,440
understand what is the general

00:33:42,960 --> 00:33:47,279
generative process behind it

00:33:45,440 --> 00:33:48,480
and try to take the best decision

00:33:47,279 --> 00:33:51,679
possible

00:33:48,480 --> 00:33:54,000
about this and using that data

00:33:51,679 --> 00:33:55,039
obviously this is not easy is extremely

00:33:54,000 --> 00:33:58,640
complex

00:33:55,039 --> 00:34:01,919
and you know i will try to get you

00:33:58,640 --> 00:34:05,440
our idea of how can we do this

00:34:01,919 --> 00:34:08,879
uh not just at scale but in a controlled

00:34:05,440 --> 00:34:11,280
environment because it's not just about

00:34:08,879 --> 00:34:12,720
deploying models and doing things with

00:34:11,280 --> 00:34:16,079
the machine learning

00:34:12,720 --> 00:34:18,480
is about how can you really encapsulate

00:34:16,079 --> 00:34:20,000
all of this inside of your architectures

00:34:18,480 --> 00:34:23,359
the the things that we've been

00:34:20,000 --> 00:34:26,399
defining until this moment and so far

00:34:23,359 --> 00:34:29,839
how can we correlate all of these

00:34:26,399 --> 00:34:33,040
and so this ai driven it starts

00:34:29,839 --> 00:34:34,800
with uh a definition of

00:34:33,040 --> 00:34:36,240
what are the problems that you are

00:34:34,800 --> 00:34:38,159
facing and for us

00:34:36,240 --> 00:34:39,839
is i believe this is pretty

00:34:38,159 --> 00:34:43,040
straightforward it's not

00:34:39,839 --> 00:34:45,679
one of those very comp it is complex

00:34:43,040 --> 00:34:47,119
afterwards but to define it is not so

00:34:45,679 --> 00:34:51,040
complex

00:34:47,119 --> 00:34:52,960
so we have four main um

00:34:51,040 --> 00:34:54,879
let's go problems that we want to to

00:34:52,960 --> 00:34:57,200
solve here that is

00:34:54,879 --> 00:34:59,119
we want to solve we need to understand

00:34:57,200 --> 00:35:00,720
what will happen in the future so this

00:34:59,119 --> 00:35:02,880
sales forecasting

00:35:00,720 --> 00:35:03,839
what would be the sales of our brands in

00:35:02,880 --> 00:35:06,640
the future

00:35:03,839 --> 00:35:07,520
because we need that information to take

00:35:06,640 --> 00:35:11,200
actions

00:35:07,520 --> 00:35:13,599
uh in earlier in time

00:35:11,200 --> 00:35:15,280
and then we have this supply chain

00:35:13,599 --> 00:35:18,400
optimization model that's

00:35:15,280 --> 00:35:20,800
nothing more than using all the nodes

00:35:18,400 --> 00:35:22,800
on our network and understand well i

00:35:20,800 --> 00:35:25,359
have a package that will pass

00:35:22,800 --> 00:35:26,160
that needs to pass through all of these

00:35:25,359 --> 00:35:28,960
nodes

00:35:26,160 --> 00:35:30,480
uh what is the best path for that

00:35:28,960 --> 00:35:33,440
package specifically

00:35:30,480 --> 00:35:34,320
uh and so we need to define that and to

00:35:33,440 --> 00:35:36,880
define that

00:35:34,320 --> 00:35:39,359
we need to estimate its capacity node

00:35:36,880 --> 00:35:42,000
one what is the capacity for that node

00:35:39,359 --> 00:35:43,839
for node two for node three

00:35:42,000 --> 00:35:46,079
and also we need to understand that

00:35:43,839 --> 00:35:48,320
there are always disruptions

00:35:46,079 --> 00:35:49,839
in our case uh could be because a

00:35:48,320 --> 00:35:53,200
package is stuck

00:35:49,839 --> 00:35:55,359
in customs in the u.s and it happens

00:35:53,200 --> 00:35:58,320
several times and can we do

00:35:55,359 --> 00:36:00,000
something about it and can we earlier in

00:35:58,320 --> 00:36:03,200
time do something about it

00:36:00,000 --> 00:36:05,119
and so it's really about all of these

00:36:03,200 --> 00:36:07,680
problems and how to solve all of these

00:36:05,119 --> 00:36:08,320
problems and again we get to the same

00:36:07,680 --> 00:36:11,760
point

00:36:08,320 --> 00:36:12,880
where we work we have uh different

00:36:11,760 --> 00:36:16,160
problems different

00:36:12,880 --> 00:36:19,359
contexts in a way and in

00:36:16,160 --> 00:36:20,320
using um in this type of film where

00:36:19,359 --> 00:36:23,040
we're

00:36:20,320 --> 00:36:24,720
focusing now in terms of optimization or

00:36:23,040 --> 00:36:28,079
prediction or whatever

00:36:24,720 --> 00:36:31,119
this kind of models there are

00:36:28,079 --> 00:36:31,760
even more complexity to have to add here

00:36:31,119 --> 00:36:35,040
because

00:36:31,760 --> 00:36:37,200
if i solve these problems with

00:36:35,040 --> 00:36:39,040
and you see here that we are looking at

00:36:37,200 --> 00:36:42,800
a a solution that is

00:36:39,040 --> 00:36:45,440
oriented with micro services

00:36:42,800 --> 00:36:47,200
too also for machine learning that's

00:36:45,440 --> 00:36:50,160
something strange but

00:36:47,200 --> 00:36:52,000
it is the way for us to do the same that

00:36:50,160 --> 00:36:54,160
we did earlier we need some

00:36:52,000 --> 00:36:56,320
we have some logic some logic of the

00:36:54,160 --> 00:37:00,320
world can we break it down

00:36:56,320 --> 00:37:02,400
to to simpler logics we can

00:37:00,320 --> 00:37:03,599
the hard part here is that when you

00:37:02,400 --> 00:37:06,640
start to break them

00:37:03,599 --> 00:37:09,040
down uh probably will you will sub

00:37:06,640 --> 00:37:10,560
optimize the the the main problem that

00:37:09,040 --> 00:37:12,960
you are facing so

00:37:10,560 --> 00:37:14,720
if i'm breaking down one problem and

00:37:12,960 --> 00:37:15,520
trying to solve it in four different

00:37:14,720 --> 00:37:18,960
steps

00:37:15,520 --> 00:37:21,760
if i guarantee that i'm 100

00:37:18,960 --> 00:37:22,079
optimal in step one three four uh one

00:37:21,760 --> 00:37:25,200
two

00:37:22,079 --> 00:37:28,800
three four probably i'm not being

00:37:25,200 --> 00:37:31,680
optimal in the problem overall i'm being

00:37:28,800 --> 00:37:33,920
sub optimal on those problems and so one

00:37:31,680 --> 00:37:36,800
of the things is really to be

00:37:33,920 --> 00:37:38,800
to have this end-to-end visibility and

00:37:36,800 --> 00:37:42,079
optimization we need to understand

00:37:38,800 --> 00:37:44,800
in the end of each overall process what

00:37:42,079 --> 00:37:47,280
are our results it's not just about the

00:37:44,800 --> 00:37:50,000
specific model it's about the overall

00:37:47,280 --> 00:37:51,280
uh problem that we are solving we need

00:37:50,000 --> 00:37:52,960
to be agnostic

00:37:51,280 --> 00:37:54,640
in terms of technology and field of

00:37:52,960 --> 00:37:55,599
approach because you can see that we use

00:37:54,640 --> 00:37:58,160
deep learning

00:37:55,599 --> 00:37:59,040
machine learning materialistics whatever

00:37:58,160 --> 00:38:01,440
because

00:37:59,040 --> 00:38:02,400
these are different problems need

00:38:01,440 --> 00:38:05,440
different

00:38:02,400 --> 00:38:08,640
engines to solve it and we need it to be

00:38:05,440 --> 00:38:09,760
scalable another thing that is very

00:38:08,640 --> 00:38:13,119
important to us

00:38:09,760 --> 00:38:16,079
regarding uh these models is really

00:38:13,119 --> 00:38:17,040
we want them to take actions these are

00:38:16,079 --> 00:38:20,320
not just

00:38:17,040 --> 00:38:20,800
decision making support systems these

00:38:20,320 --> 00:38:23,599
are

00:38:20,800 --> 00:38:24,960
actually models that take actions in

00:38:23,599 --> 00:38:28,560
this means and you can see

00:38:24,960 --> 00:38:29,599
that um that that will and the the

00:38:28,560 --> 00:38:32,640
executing

00:38:29,599 --> 00:38:36,079
word there is because we want them to

00:38:32,640 --> 00:38:39,200
explicitly take actions on our product

00:38:36,079 --> 00:38:43,119
that is spoke on this different services

00:38:39,200 --> 00:38:45,680
and let's see how can we do this

00:38:43,119 --> 00:38:46,960
first of all we will get to a point

00:38:45,680 --> 00:38:50,480
where these four

00:38:46,960 --> 00:38:53,520
main topics will become uh i don't know

00:38:50,480 --> 00:38:56,160
uh tens of different micro

00:38:53,520 --> 00:38:57,119
services too in a way micro models if

00:38:56,160 --> 00:38:59,200
you want

00:38:57,119 --> 00:39:01,359
and so we get to the same place okay we

00:38:59,200 --> 00:39:02,720
have a lot of different models how can

00:39:01,359 --> 00:39:05,200
we guarantee that

00:39:02,720 --> 00:39:06,880
all of this makes sense and how can we

00:39:05,200 --> 00:39:11,040
guarantee that these are

00:39:06,880 --> 00:39:15,119
in the where they are needed at each

00:39:11,040 --> 00:39:17,520
time step and so one thing that we did

00:39:15,119 --> 00:39:19,520
was basically okay we already have the

00:39:17,520 --> 00:39:22,640
bounded context define

00:39:19,520 --> 00:39:25,040
can we use this bounded context as the

00:39:22,640 --> 00:39:28,079
bounded context for each of these

00:39:25,040 --> 00:39:29,119
micro models that we are defining well

00:39:28,079 --> 00:39:32,400
we can

00:39:29,119 --> 00:39:33,119
and so what you see here is that we are

00:39:32,400 --> 00:39:36,240
basically

00:39:33,119 --> 00:39:39,359
adding these micro models

00:39:36,240 --> 00:39:40,800
to each bounded context that we have so

00:39:39,359 --> 00:39:42,240
for the inventory management for

00:39:40,800 --> 00:39:45,040
delivery management

00:39:42,240 --> 00:39:46,800
those blue and green squares are

00:39:45,040 --> 00:39:50,320
actually micro models that

00:39:46,800 --> 00:39:53,599
are being used and there are

00:39:50,320 --> 00:39:54,800
interconnected with the micro services

00:39:53,599 --> 00:39:58,800
the software micro

00:39:54,800 --> 00:40:01,200
services and giving and taking actions

00:39:58,800 --> 00:40:02,560
for themselves i will show you an

00:40:01,200 --> 00:40:05,760
example

00:40:02,560 --> 00:40:08,000
but clear a picture here is they are

00:40:05,760 --> 00:40:08,800
very very close to what is a micro

00:40:08,000 --> 00:40:12,319
service

00:40:08,800 --> 00:40:15,359
obviously there's absolutely different

00:40:12,319 --> 00:40:17,839
logic internally another thing that is

00:40:15,359 --> 00:40:18,560
different they don't persist data they

00:40:17,839 --> 00:40:22,079
just

00:40:18,560 --> 00:40:25,280
receive data they compute data and then

00:40:22,079 --> 00:40:26,240
they will trigger results and these

00:40:25,280 --> 00:40:29,920
results

00:40:26,240 --> 00:40:32,319
will impact the state of uh

00:40:29,920 --> 00:40:32,960
a micro service that will receive that

00:40:32,319 --> 00:40:35,440
uh

00:40:32,960 --> 00:40:36,240
that result and that that is the the

00:40:35,440 --> 00:40:39,280
overall

00:40:36,240 --> 00:40:42,880
idea and so if we look at

00:40:39,280 --> 00:40:45,599
an example here for instance

00:40:42,880 --> 00:40:48,079
let's imagine a new event that came came

00:40:45,599 --> 00:40:49,599
in a new sales area was created you see

00:40:48,079 --> 00:40:52,960
those brown

00:40:49,599 --> 00:40:54,000
squares there uh vertically is this this

00:40:52,960 --> 00:40:57,200
new sales

00:40:54,000 --> 00:41:00,240
order is going downwards

00:40:57,200 --> 00:41:03,520
and you see that at each time step

00:41:00,240 --> 00:41:06,480
we probably need some kind of decision

00:41:03,520 --> 00:41:07,200
that could be taken by a analyst or

00:41:06,480 --> 00:41:10,079
whatever

00:41:07,200 --> 00:41:12,319
but right now it is taken in that

00:41:10,079 --> 00:41:15,760
specific bonded context

00:41:12,319 --> 00:41:16,560
by each of one of these services so if

00:41:15,760 --> 00:41:19,520
you see

00:41:16,560 --> 00:41:20,960
the delivery management is asking the

00:41:19,520 --> 00:41:24,079
that specific service

00:41:20,960 --> 00:41:26,160
o to f c for

00:41:24,079 --> 00:41:27,280
the fulfillment center the best node in

00:41:26,160 --> 00:41:30,319
the network for that

00:41:27,280 --> 00:41:32,160
order afterwards we need to get to get

00:41:30,319 --> 00:41:35,760
the estimation on the product

00:41:32,160 --> 00:41:38,160
levels um sorry volumes and weights

00:41:35,760 --> 00:41:39,119
and what is the best pack set so what is

00:41:38,160 --> 00:41:42,319
the best

00:41:39,119 --> 00:41:45,760
um um

00:41:42,319 --> 00:41:46,319
what are the best packs for me to pack

00:41:45,760 --> 00:41:49,599
that or

00:41:46,319 --> 00:41:50,240
best boxes box combinations to pack that

00:41:49,599 --> 00:41:53,440
order

00:41:50,240 --> 00:41:56,960
why because we want the best pack

00:41:53,440 --> 00:41:58,640
set that optimizes our pricing so our

00:41:56,960 --> 00:42:01,200
costs so we will look

00:41:58,640 --> 00:42:02,480
at all of our options with our different

00:42:01,200 --> 00:42:04,960
transport companies

00:42:02,480 --> 00:42:06,000
and we want the best one and as you can

00:42:04,960 --> 00:42:10,880
see we are

00:42:06,000 --> 00:42:13,040
again using the the data platform to

00:42:10,880 --> 00:42:14,240
for the models to to get their

00:42:13,040 --> 00:42:16,560
information

00:42:14,240 --> 00:42:18,400
and they are not persisting any

00:42:16,560 --> 00:42:22,000
information but they are

00:42:18,400 --> 00:42:25,200
answering back to these services with

00:42:22,000 --> 00:42:28,319
their decision making that they

00:42:25,200 --> 00:42:31,920
uh got to in the after their computation

00:42:28,319 --> 00:42:34,240
so this will basically trigger a state

00:42:31,920 --> 00:42:35,280
change inside of a micro service and

00:42:34,240 --> 00:42:38,240
potentially

00:42:35,280 --> 00:42:38,880
it will impact the overall decision so

00:42:38,240 --> 00:42:42,160
the if

00:42:38,880 --> 00:42:44,560
we could use ups but in this order

00:42:42,160 --> 00:42:45,200
it makes more sense to use fedex because

00:42:44,560 --> 00:42:48,240
of this

00:42:45,200 --> 00:42:50,880
pack set combination and the idea

00:42:48,240 --> 00:42:52,160
is really that you have this environment

00:42:50,880 --> 00:42:55,599
that is built

00:42:52,160 --> 00:42:58,079
that it has this end-to-end scope

00:42:55,599 --> 00:42:59,520
it is domain driven in a way so we are

00:42:58,079 --> 00:43:03,200
not trying to

00:42:59,520 --> 00:43:04,640
solve problems here and we have the the

00:43:03,200 --> 00:43:07,040
software here

00:43:04,640 --> 00:43:08,160
and everything is disconnected we are

00:43:07,040 --> 00:43:11,440
trying to combine

00:43:08,160 --> 00:43:14,800
things and we all know what

00:43:11,440 --> 00:43:17,119
what are we solving at each a new uh

00:43:14,800 --> 00:43:19,280
feature that we bring to to to the

00:43:17,119 --> 00:43:22,000
customer to the product

00:43:19,280 --> 00:43:23,760
this is dynamic data and it's agnostic

00:43:22,000 --> 00:43:27,760
again in terms of technology

00:43:23,760 --> 00:43:31,280
and in terms of field of approach

00:43:27,760 --> 00:43:34,480
and uh to start uh wrapping up

00:43:31,280 --> 00:43:38,400
with some of the ideas we get

00:43:34,480 --> 00:43:41,040
to this uh micro service

00:43:38,400 --> 00:43:41,599
architecture and i am just giving you a

00:43:41,040 --> 00:43:44,800
brief

00:43:41,599 --> 00:43:46,160
overview of what this means in a

00:43:44,800 --> 00:43:49,359
different perspective but

00:43:46,160 --> 00:43:51,440
the main idea is loosely couple isolated

00:43:49,359 --> 00:43:54,160
a persistency so now

00:43:51,440 --> 00:43:55,280
we have all the data specific that we

00:43:54,160 --> 00:43:58,160
need at each

00:43:55,280 --> 00:44:00,240
bounded context in each microservice a

00:43:58,160 --> 00:44:01,839
shared source of the truth it's event

00:44:00,240 --> 00:44:05,440
driven so it's really

00:44:01,839 --> 00:44:05,760
a synchronous and we can rely on that to

00:44:05,440 --> 00:44:08,880
get

00:44:05,760 --> 00:44:11,040
performance and it's domain driven and

00:44:08,880 --> 00:44:13,119
follows the domain driven design what

00:44:11,040 --> 00:44:14,800
which is for us absolutely critical

00:44:13,119 --> 00:44:18,079
because of the complexity

00:44:14,800 --> 00:44:19,839
of all these entities that we can find

00:44:18,079 --> 00:44:23,280
in logistics that is

00:44:19,839 --> 00:44:25,440
very very very very detailed driven

00:44:23,280 --> 00:44:27,920
and so there's a lot of small things

00:44:25,440 --> 00:44:29,920
that interact with other small things

00:44:27,920 --> 00:44:32,160
and it's really easy for you to lose

00:44:29,920 --> 00:44:35,200
yourself

00:44:32,160 --> 00:44:37,920
in the middle of all of this uh

00:44:35,200 --> 00:44:39,119
before finishing i want to also to give

00:44:37,920 --> 00:44:43,119
you an idea

00:44:39,119 --> 00:44:45,599
of um what what what is the impact

00:44:43,119 --> 00:44:46,400
of all of this in the in the in the in

00:44:45,599 --> 00:44:48,960
the final

00:44:46,400 --> 00:44:50,240
customer in the final user of the

00:44:48,960 --> 00:44:53,920
product

00:44:50,240 --> 00:44:57,119
and i have here um an example

00:44:53,920 --> 00:44:59,119
so we have this tracking system and the

00:44:57,119 --> 00:45:02,000
tracking system is nothing more

00:44:59,119 --> 00:45:03,280
than the the same approach that for

00:45:02,000 --> 00:45:05,599
instance dhl

00:45:03,280 --> 00:45:07,280
has and so when you buy online and you

00:45:05,599 --> 00:45:09,280
receive those

00:45:07,280 --> 00:45:12,079
emails stating that well your order will

00:45:09,280 --> 00:45:15,119
arrive soon or has arrived or whatever

00:45:12,079 --> 00:45:19,839
it is that tracking system of uh of

00:45:15,119 --> 00:45:19,839
orders in that specific

00:45:20,640 --> 00:45:24,000
perspective but the difference here is

00:45:23,440 --> 00:45:26,160
that

00:45:24,000 --> 00:45:28,319
first of all we are using several

00:45:26,160 --> 00:45:30,839
different carriers so

00:45:28,319 --> 00:45:32,319
tens of different carriers so we need to

00:45:30,839 --> 00:45:35,359
unify uh

00:45:32,319 --> 00:45:37,920
all of the all of their approaches

00:45:35,359 --> 00:45:39,920
and standardize all of those approaches

00:45:37,920 --> 00:45:40,720
we are using some carriers that don't

00:45:39,920 --> 00:45:43,760
have this

00:45:40,720 --> 00:45:44,160
service and they are probably cheaper

00:45:43,760 --> 00:45:46,720
they

00:45:44,160 --> 00:45:47,680
they have different tech infrastructure

00:45:46,720 --> 00:45:51,200
whatever

00:45:47,680 --> 00:45:54,000
and and so we deployed this service to

00:45:51,200 --> 00:45:54,400
that use deep learning to classify uh

00:45:54,000 --> 00:45:58,000
these

00:45:54,400 --> 00:45:58,560
tracking status based on everything that

00:45:58,000 --> 00:46:01,839
was

00:45:58,560 --> 00:46:04,000
uh communicating in mostly

00:46:01,839 --> 00:46:05,040
in a standardized way so we have to

00:46:04,000 --> 00:46:07,599
control

00:46:05,040 --> 00:46:09,520
what are the different classifications

00:46:07,599 --> 00:46:12,800
uh possible different classes

00:46:09,520 --> 00:46:15,280
uh possible and based on that uh

00:46:12,800 --> 00:46:17,119
we don't want to solve this problem with

00:46:15,280 --> 00:46:19,440
just a new feature to the brand

00:46:17,119 --> 00:46:20,560
as i was saying so we want to solve it

00:46:19,440 --> 00:46:22,960
with our model

00:46:20,560 --> 00:46:23,680
and so what our model triggers in the

00:46:22,960 --> 00:46:26,880
end

00:46:23,680 --> 00:46:29,359
is not uh just a an

00:46:26,880 --> 00:46:30,400
inside of uh well it does it wasn't

00:46:29,359 --> 00:46:32,960
delivered

00:46:30,400 --> 00:46:33,920
what it has uh had a disruption of

00:46:32,960 --> 00:46:37,359
somehow

00:46:33,920 --> 00:46:40,640
but we get uh a notification

00:46:37,359 --> 00:46:44,240
sent or for the final customer or

00:46:40,640 --> 00:46:48,079
for the brand or for for us

00:46:44,240 --> 00:46:50,720
with the detail of what has to be done

00:46:48,079 --> 00:46:51,599
next to guarantee that this order is

00:46:50,720 --> 00:46:54,800
delivered

00:46:51,599 --> 00:46:57,440
and in red you can see an example for

00:46:54,800 --> 00:46:59,440
uh end customer like you if you buy on

00:46:57,440 --> 00:47:02,079
uh one of our brands

00:46:59,440 --> 00:47:03,920
and if the order has some missing

00:47:02,079 --> 00:47:05,440
information for instance the address on

00:47:03,920 --> 00:47:07,520
your side

00:47:05,440 --> 00:47:10,079
and we need you to contact the carrier

00:47:07,520 --> 00:47:13,200
this is a message that you will receive

00:47:10,079 --> 00:47:14,240
on the other hand you uh if it is on our

00:47:13,200 --> 00:47:16,480
side for instance

00:47:14,240 --> 00:47:17,359
we were the ones notified saying it is

00:47:16,480 --> 00:47:20,240
on old

00:47:17,359 --> 00:47:21,200
we will take care of this for you and we

00:47:20,240 --> 00:47:24,079
on our end

00:47:21,200 --> 00:47:25,040
will receive this it is on old please

00:47:24,079 --> 00:47:27,760
take this action

00:47:25,040 --> 00:47:28,720
send this documentation whatever and the

00:47:27,760 --> 00:47:30,800
idea here

00:47:28,720 --> 00:47:33,520
is that the model is basically taking

00:47:30,800 --> 00:47:36,160
the heavy decision making of the process

00:47:33,520 --> 00:47:37,680
the the heavy uh tree based decision

00:47:36,160 --> 00:47:40,559
making of the process

00:47:37,680 --> 00:47:40,880
and in the end it doesn't matter if it's

00:47:40,559 --> 00:47:43,359
us

00:47:40,880 --> 00:47:45,520
the customer or the brand everyone is

00:47:43,359 --> 00:47:48,559
basically being notified

00:47:45,520 --> 00:47:51,599
of exactly what to do next and

00:47:48,559 --> 00:47:53,359
and so there's a lot of features that we

00:47:51,599 --> 00:47:56,319
could bring to the product

00:47:53,359 --> 00:47:56,960
here that we don't need to because uh

00:47:56,319 --> 00:48:00,000
they are

00:47:56,960 --> 00:48:02,480
already um

00:48:00,000 --> 00:48:04,160
sorted out they are already decided at

00:48:02,480 --> 00:48:07,280
this moment in time

00:48:04,160 --> 00:48:08,960
and so in the end this is how on our

00:48:07,280 --> 00:48:11,920
perspective you start to solve

00:48:08,960 --> 00:48:13,040
problems using uh machine learning deep

00:48:11,920 --> 00:48:16,559
learning whatever

00:48:13,040 --> 00:48:20,480
is really taking the decisions out

00:48:16,559 --> 00:48:23,520
of uh the way uh and avoiding

00:48:20,480 --> 00:48:25,440
having to build features for someone to

00:48:23,520 --> 00:48:26,480
take the decisions or for someone to

00:48:25,440 --> 00:48:30,079
take actions

00:48:26,480 --> 00:48:33,200
is really about notifying when we need

00:48:30,079 --> 00:48:34,079
really need to be notified and with what

00:48:33,200 --> 00:48:36,559
we need to do

00:48:34,079 --> 00:48:36,559
basically

00:48:39,200 --> 00:48:45,280
to close um in our uh

00:48:42,319 --> 00:48:45,920
our next steps we obviously we need to

00:48:45,280 --> 00:48:49,119
continue

00:48:45,920 --> 00:48:51,280
our re-architecture process is

00:48:49,119 --> 00:48:52,319
uh i would say every company in the

00:48:51,280 --> 00:48:56,480
world we are

00:48:52,319 --> 00:48:58,559
always reinventing ourselves uh in a way

00:48:56,480 --> 00:49:01,040
again we need to keep breaking this

00:48:58,559 --> 00:49:03,440
monolith and splitting these

00:49:01,040 --> 00:49:05,599
micro service event driven architecture

00:49:03,440 --> 00:49:08,480
continue to do this splitting

00:49:05,599 --> 00:49:10,800
and we need to invest more in

00:49:08,480 --> 00:49:12,960
asynchronous like approaches

00:49:10,800 --> 00:49:14,079
and here this is and this will be

00:49:12,960 --> 00:49:17,359
important

00:49:14,079 --> 00:49:18,960
for more performance services and you

00:49:17,359 --> 00:49:21,680
you also need to always

00:49:18,960 --> 00:49:22,559
be aware of that and understand what are

00:49:21,680 --> 00:49:25,520
your

00:49:22,559 --> 00:49:27,599
core services that will need definitely

00:49:25,520 --> 00:49:30,720
a different approach because of their

00:49:27,599 --> 00:49:32,880
size because of the the in

00:49:30,720 --> 00:49:34,640
in on that perspective perspective could

00:49:32,880 --> 00:49:35,200
be because of the number of actions

00:49:34,640 --> 00:49:37,839
taken

00:49:35,200 --> 00:49:39,680
or could be because of the the query

00:49:37,839 --> 00:49:42,160
consumption of the data for

00:49:39,680 --> 00:49:44,000
for that service specifically and you

00:49:42,160 --> 00:49:45,680
start using different approaches like

00:49:44,000 --> 00:49:48,480
cqrs or whatever

00:49:45,680 --> 00:49:49,280
and so there's always a need to evolve

00:49:48,480 --> 00:49:51,200
especially

00:49:49,280 --> 00:49:53,119
you need to define very well what are

00:49:51,200 --> 00:49:55,920
your core services and

00:49:53,119 --> 00:49:56,720
what will you do about those core

00:49:55,920 --> 00:49:59,920
services

00:49:56,720 --> 00:50:01,040
in the future while you keep the pace of

00:49:59,920 --> 00:50:04,559
innovation bringing

00:50:01,040 --> 00:50:05,599
more services more features more ideas

00:50:04,559 --> 00:50:09,920
to the table

00:50:05,599 --> 00:50:13,839
and to your end customer

00:50:09,920 --> 00:50:13,839

YouTube URL: https://www.youtube.com/watch?v=ZtZ-wUFTqUk


