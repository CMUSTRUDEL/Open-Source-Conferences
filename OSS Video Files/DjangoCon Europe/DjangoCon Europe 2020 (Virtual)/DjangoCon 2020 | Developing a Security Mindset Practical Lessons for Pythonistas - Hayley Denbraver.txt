Title: DjangoCon 2020 | Developing a Security Mindset Practical Lessons for Pythonistas - Hayley Denbraver
Publication date: 2020-09-30
Playlist: DjangoCon Europe 2020 (Virtual)
Description: 
	DjangoCon Europe 2020 (Virtual)
September 18, 2020 - 11h55 (GMT+1)

“Developing a Security Mindset Practical Lessons for Pythonistas” by Hayley Denbraver

This talk will discuss why developers should grow their security mindset and will give them practical advice for how to do so—even in a workplace where many issues compete for their attention. Examples will be given from the Python and Django world and should be of interest to those new to security and those wanting to help their team develop a security mindset.
Captions: 
	00:00:04,640 --> 00:00:08,080
my name

00:00:05,279 --> 00:00:11,200
is haley dunbraver and this talk is

00:00:08,080 --> 00:00:13,440
about developing a security mindset

00:00:11,200 --> 00:00:14,799
and i hope to give you some practical

00:00:13,440 --> 00:00:18,480
advice

00:00:14,799 --> 00:00:21,680
for all pythonistas let's talk about

00:00:18,480 --> 00:00:22,160
a security mindset and what it is and i

00:00:21,680 --> 00:00:25,599
have

00:00:22,160 --> 00:00:28,240
excellent news for everyone

00:00:25,599 --> 00:00:29,359
and that is that you have a security

00:00:28,240 --> 00:00:33,360
mindset

00:00:29,359 --> 00:00:36,960
already you may just not be applying it

00:00:33,360 --> 00:00:41,280
to your projects the idea here

00:00:36,960 --> 00:00:45,840
is that there are things that i do

00:00:41,280 --> 00:00:45,840
in my daily life that

00:00:46,559 --> 00:00:50,879
help me stay personally secure

00:00:51,520 --> 00:00:58,879
but there are also things that i can do

00:00:55,039 --> 00:00:59,600
within my projects that are just good

00:00:58,879 --> 00:01:03,680
habits

00:00:59,600 --> 00:01:07,280
good maintenance things that um

00:01:03,680 --> 00:01:11,119
will help my project be more secure and

00:01:07,280 --> 00:01:11,680
you know they don't even have to be all

00:01:11,119 --> 00:01:15,439
that hard

00:01:11,680 --> 00:01:19,040
necessarily now

00:01:15,439 --> 00:01:21,360
how are we going to discuss security

00:01:19,040 --> 00:01:22,080
if you'll allow me we're going to

00:01:21,360 --> 00:01:24,720
discuss

00:01:22,080 --> 00:01:26,400
security and security mindset with a bit

00:01:24,720 --> 00:01:30,240
of whimsy and mystery

00:01:26,400 --> 00:01:33,600
and i hope you're all along for the ride

00:01:30,240 --> 00:01:37,600
now this talk is going to feature some

00:01:33,600 --> 00:01:40,799
excellent guests and they are

00:01:37,600 --> 00:01:44,880
some of the luminaries of

00:01:40,799 --> 00:01:48,399
english detective fiction eric yoporo

00:01:44,880 --> 00:01:51,119
sherlock holmes and miss marple now

00:01:48,399 --> 00:01:52,079
these are our python detectives and

00:01:51,119 --> 00:01:55,360
we're going to

00:01:52,079 --> 00:01:58,479
discuss some security concepts

00:01:55,360 --> 00:02:01,520
through the lens of

00:01:58,479 --> 00:02:01,520
what we can learn

00:02:01,840 --> 00:02:06,640
from detective fiction and

00:02:04,960 --> 00:02:08,000
the reason to do this is just to have a

00:02:06,640 --> 00:02:11,120
little bit of fun

00:02:08,000 --> 00:02:14,480
and uh to

00:02:11,120 --> 00:02:17,200
inspire some curiosity and

00:02:14,480 --> 00:02:17,680
i just really like detective fiction so

00:02:17,200 --> 00:02:19,840
that's

00:02:17,680 --> 00:02:23,200
that's it all right so let's learn a

00:02:19,840 --> 00:02:26,640
little bit about our guests now

00:02:23,200 --> 00:02:29,760
miss jane marple is a bit of a busybody

00:02:26,640 --> 00:02:31,440
and she knows a lot maybe too much about

00:02:29,760 --> 00:02:34,640
her neighbors

00:02:31,440 --> 00:02:37,120
she's often underestimated and she's

00:02:34,640 --> 00:02:38,319
always listening she's thoroughly

00:02:37,120 --> 00:02:41,280
educated

00:02:38,319 --> 00:02:41,760
but she's not officially trained excuse

00:02:41,280 --> 00:02:43,920
me

00:02:41,760 --> 00:02:45,840
she's not officially trained uh nor does

00:02:43,920 --> 00:02:47,440
she have any official credentials that

00:02:45,840 --> 00:02:50,879
sort of thing

00:02:47,440 --> 00:02:54,319
all right and then eric yo poirot

00:02:50,879 --> 00:02:56,560
now he understands psychology

00:02:54,319 --> 00:02:58,000
he believes in the predictability of

00:02:56,560 --> 00:03:02,560
human behavior

00:02:58,000 --> 00:03:04,480
he's fastidious he keeps his cards close

00:03:02,560 --> 00:03:07,920
and he can spot when someone is

00:03:04,480 --> 00:03:12,400
pretending to be somebody they're not

00:03:07,920 --> 00:03:15,440
all right now we have sherlock holmes

00:03:12,400 --> 00:03:16,319
now he observes my new details he

00:03:15,440 --> 00:03:18,720
doesn't know

00:03:16,319 --> 00:03:19,599
he knows that you don't necessarily need

00:03:18,720 --> 00:03:21,840
to leave your home

00:03:19,599 --> 00:03:24,560
to dig up some interesting information

00:03:21,840 --> 00:03:27,599
which is very useful nowadays

00:03:24,560 --> 00:03:28,799
he's a thorough researcher he questions

00:03:27,599 --> 00:03:31,200
assumptions

00:03:28,799 --> 00:03:32,560
and he ignores rules when they don't

00:03:31,200 --> 00:03:35,519
suit him

00:03:32,560 --> 00:03:37,440
so each of these detectives we're going

00:03:35,519 --> 00:03:41,280
to have several questions for them

00:03:37,440 --> 00:03:43,760
and we're going to use those questions

00:03:41,280 --> 00:03:45,040
to intro introduce some security

00:03:43,760 --> 00:03:48,640
concepts

00:03:45,040 --> 00:03:51,760
and uh see what we can do to build

00:03:48,640 --> 00:03:54,159
our security mindset all right

00:03:51,760 --> 00:03:57,040
so the first question is what do you

00:03:54,159 --> 00:03:58,879
know about your neighbors

00:03:57,040 --> 00:04:00,560
and for this question we're going to go

00:03:58,879 --> 00:04:04,400
to miss marple

00:04:00,560 --> 00:04:06,560
she is up to date on the latest going on

00:04:04,400 --> 00:04:08,319
she has an understanding of the general

00:04:06,560 --> 00:04:11,280
character of her neighbors

00:04:08,319 --> 00:04:12,560
and she knows who associates with whom

00:04:11,280 --> 00:04:16,000
she also

00:04:12,560 --> 00:04:18,000
is not hesitant to expose bad actors

00:04:16,000 --> 00:04:19,600
and my recommended reading for this

00:04:18,000 --> 00:04:21,440
question is

00:04:19,600 --> 00:04:24,320
the murder at the vicarage by agatha

00:04:21,440 --> 00:04:27,360
christie it will give you a good idea

00:04:24,320 --> 00:04:28,080
of how she understands her neighborhood

00:04:27,360 --> 00:04:31,440
and her little

00:04:28,080 --> 00:04:35,040
village in saint mary mead and how

00:04:31,440 --> 00:04:38,160
it helps her solve a mystery

00:04:35,040 --> 00:04:39,360
all right and so by what do you know

00:04:38,160 --> 00:04:42,240
about your neighbors

00:04:39,360 --> 00:04:44,320
in security i really mean do you

00:04:42,240 --> 00:04:46,479
understand the vulnerabilities in your

00:04:44,320 --> 00:04:49,680
open source dependencies

00:04:46,479 --> 00:04:52,240
now you can think

00:04:49,680 --> 00:04:52,720
of the open source libraries that you

00:04:52,240 --> 00:04:56,000
use

00:04:52,720 --> 00:04:58,800
as your neighborhood this is the very

00:04:56,000 --> 00:05:00,880
first python project i wrote several

00:04:58,800 --> 00:05:03,520
years ago many many years ago

00:05:00,880 --> 00:05:05,199
and uh this is a dependency tree from

00:05:03,520 --> 00:05:07,759
that project

00:05:05,199 --> 00:05:08,800
the little indicator things there are

00:05:07,759 --> 00:05:12,160
showing where

00:05:08,800 --> 00:05:14,080
there are potential security issues

00:05:12,160 --> 00:05:15,440
so this kind of gives you a map an

00:05:14,080 --> 00:05:18,479
understanding

00:05:15,440 --> 00:05:21,759
of your neighborhood and it's important

00:05:18,479 --> 00:05:25,280
to know what you're using

00:05:21,759 --> 00:05:28,400
right um now

00:05:25,280 --> 00:05:28,960
we spend a lot of time in our code

00:05:28,400 --> 00:05:31,360
writing

00:05:28,960 --> 00:05:33,440
original code writing code for ourselves

00:05:31,360 --> 00:05:35,840
writing code specific to our project

00:05:33,440 --> 00:05:36,880
and because we spend so much time doing

00:05:35,840 --> 00:05:40,479
that

00:05:36,880 --> 00:05:43,600
it can make you think

00:05:40,479 --> 00:05:46,960
that uh your original code takes up

00:05:43,600 --> 00:05:49,120
a larger footprint of all the code and

00:05:46,960 --> 00:05:51,680
production than it actually does

00:05:49,120 --> 00:05:53,680
so you may think that like sure i

00:05:51,680 --> 00:05:55,680
haven't a lot of dependencies but i've

00:05:53,680 --> 00:05:59,280
written a lot of original code myself

00:05:55,680 --> 00:06:02,880
and so maybe the breakdown um

00:05:59,280 --> 00:06:05,039
where this circle represents all code

00:06:02,880 --> 00:06:07,360
in production maybe the breakdown is

00:06:05,039 --> 00:06:09,120
something like this where

00:06:07,360 --> 00:06:10,560
it's about half and half something like

00:06:09,120 --> 00:06:12,639
that um

00:06:10,560 --> 00:06:13,840
and it's very natural to think of it

00:06:12,639 --> 00:06:17,120
this way

00:06:13,840 --> 00:06:19,199
but you know your mileage may vary and

00:06:17,120 --> 00:06:21,520
depending on the project

00:06:19,199 --> 00:06:22,720
your code in production could really

00:06:21,520 --> 00:06:26,319
look like this

00:06:22,720 --> 00:06:30,319
but it could also look like this or this

00:06:26,319 --> 00:06:35,199
or this and what's significant here

00:06:30,319 --> 00:06:39,199
is that any

00:06:35,199 --> 00:06:42,479
problems in um in production

00:06:39,199 --> 00:06:45,919
are problems for your projects and

00:06:42,479 --> 00:06:49,280
um if you are really precise

00:06:45,919 --> 00:06:51,680
and um well

00:06:49,280 --> 00:06:53,199
thought out and stuff in your original

00:06:51,680 --> 00:06:56,080
code but you don't consider

00:06:53,199 --> 00:06:58,479
this stuff uh all of your dependencies

00:06:56,080 --> 00:07:01,599
the known vulnerabilities in them

00:06:58,479 --> 00:07:05,360
etc uh you

00:07:01,599 --> 00:07:08,800
have a fairly large footprint of

00:07:05,360 --> 00:07:11,840
code that could be problem

00:07:08,800 --> 00:07:12,639
and it's not to say that open source is

00:07:11,840 --> 00:07:15,280
bad

00:07:12,639 --> 00:07:16,160
or that you shouldn't use these

00:07:15,280 --> 00:07:19,440
dependencies

00:07:16,160 --> 00:07:23,120
because it's

00:07:19,440 --> 00:07:25,039
a really great tool and um

00:07:23,120 --> 00:07:27,440
you know we're at djangocon i love

00:07:25,039 --> 00:07:31,360
django um

00:07:27,440 --> 00:07:35,199
but it's it's about

00:07:31,360 --> 00:07:39,039
keeping your eyes open and knowing

00:07:35,199 --> 00:07:42,560
when there are known problems and uh

00:07:39,039 --> 00:07:46,560
balancing your risk and reward

00:07:42,560 --> 00:07:48,720
uh appropriately and just being aware

00:07:46,560 --> 00:07:49,840
if there is an issue and if you can fix

00:07:48,720 --> 00:07:53,199
it

00:07:49,840 --> 00:07:55,840
so you above all

00:07:53,199 --> 00:07:57,280
just want to know the information and

00:07:55,840 --> 00:07:58,479
that's part of why i like using

00:07:57,280 --> 00:08:02,319
detectives

00:07:58,479 --> 00:08:06,080
is that you're really out

00:08:02,319 --> 00:08:09,120
to have all the facts and

00:08:06,080 --> 00:08:12,560
make an appropriate decision so anyway

00:08:09,120 --> 00:08:13,759
let's continue um so what should you

00:08:12,560 --> 00:08:17,120
know about your neighbors

00:08:13,759 --> 00:08:18,000
well you should know if any of the

00:08:17,120 --> 00:08:20,240
packages

00:08:18,000 --> 00:08:22,319
that you use have known security

00:08:20,240 --> 00:08:25,280
vulnerabilities

00:08:22,319 --> 00:08:26,240
additionally you should know which

00:08:25,280 --> 00:08:29,280
packages

00:08:26,240 --> 00:08:30,879
that you use indirectly so these are

00:08:29,280 --> 00:08:33,440
things that you are not going

00:08:30,879 --> 00:08:34,719
to pip install yourself but they get

00:08:33,440 --> 00:08:36,640
dragged in

00:08:34,719 --> 00:08:39,200
with the dependencies that you do pip

00:08:36,640 --> 00:08:41,599
install that makes sense

00:08:39,200 --> 00:08:43,039
so you should know what these are and

00:08:41,599 --> 00:08:45,760
you should know if they have any

00:08:43,039 --> 00:08:45,760
vulnerabilities

00:08:46,080 --> 00:08:50,240
then you can make a decision about

00:08:47,519 --> 00:08:52,839
remediation

00:08:50,240 --> 00:08:54,320
and uh whether you're okay with what's

00:08:52,839 --> 00:08:57,600
there

00:08:54,320 --> 00:09:00,959
all right so

00:08:57,600 --> 00:09:03,279
how do i keep track of all of this and i

00:09:00,959 --> 00:09:04,320
recommend automating when you can it can

00:09:03,279 --> 00:09:07,600
get really

00:09:04,320 --> 00:09:10,160
complicated and um

00:09:07,600 --> 00:09:11,440
you know the dependency chart that i

00:09:10,160 --> 00:09:14,399
showed you earlier was

00:09:11,440 --> 00:09:16,720
for a very very simple project um

00:09:14,399 --> 00:09:18,240
something on a more enterprise scale is

00:09:16,720 --> 00:09:21,200
going to be

00:09:18,240 --> 00:09:22,080
a lot you're going to have a lot more so

00:09:21,200 --> 00:09:25,519
i recommend

00:09:22,080 --> 00:09:28,480
automating when you can and i would

00:09:25,519 --> 00:09:29,920
recommend you check out uh potential

00:09:28,480 --> 00:09:32,160
solutions

00:09:29,920 --> 00:09:34,320
uh there are open source and enterprise

00:09:32,160 --> 00:09:37,519
solutions that can help you do this

00:09:34,320 --> 00:09:41,040
pyeam has some security testing

00:09:37,519 --> 00:09:44,640
uh pi up dot io is a python

00:09:41,040 --> 00:09:47,920
specific thing and sneak.io has

00:09:44,640 --> 00:09:51,600
a free tier um and

00:09:47,920 --> 00:09:54,160
they are compatible with python

00:09:51,600 --> 00:09:54,160
all right

00:09:55,279 --> 00:10:00,240
so to summarize understand your open

00:09:58,959 --> 00:10:03,279
source dependencies

00:10:00,240 --> 00:10:05,680
and remediate known issues

00:10:03,279 --> 00:10:06,959
use a tool to help you do this there are

00:10:05,680 --> 00:10:10,320
open source options and

00:10:06,959 --> 00:10:12,640
enterprise options all right

00:10:10,320 --> 00:10:14,079
so let's go on to our next question for

00:10:12,640 --> 00:10:17,360
our detectives

00:10:14,079 --> 00:10:20,880
are people who they say they are

00:10:17,360 --> 00:10:24,480
now uh for this one we are going to go

00:10:20,880 --> 00:10:27,600
to eric yoporo and sherlock holmes

00:10:24,480 --> 00:10:31,600
and um

00:10:27,600 --> 00:10:35,120
they have a lot to say on the subject

00:10:31,600 --> 00:10:38,079
and here are the things that we

00:10:35,120 --> 00:10:38,480
might learn from detective fiction first

00:10:38,079 --> 00:10:40,480
is

00:10:38,480 --> 00:10:42,880
if there is an actor in the story you

00:10:40,480 --> 00:10:46,079
should be suspicious of them

00:10:42,880 --> 00:10:48,320
and second we

00:10:46,079 --> 00:10:49,680
can think a little bit about how we

00:10:48,320 --> 00:10:52,560
confirm identity

00:10:49,680 --> 00:10:53,360
now in detective stories um it might be

00:10:52,560 --> 00:10:56,720
something like

00:10:53,360 --> 00:10:59,200
handwriting or mannerisms or

00:10:56,720 --> 00:11:00,399
how they look but is there something

00:10:59,200 --> 00:11:03,920
more to that

00:11:00,399 --> 00:11:06,480
is are there other ways right um

00:11:03,920 --> 00:11:08,880
you're gonna want to consider the

00:11:06,480 --> 00:11:10,000
importance of names nicknames and

00:11:08,880 --> 00:11:13,200
aliases

00:11:10,000 --> 00:11:16,240
when you're reading detective fiction

00:11:13,200 --> 00:11:20,160
and um for this

00:11:16,240 --> 00:11:20,800
particular question on identity and how

00:11:20,160 --> 00:11:23,760
do you know

00:11:20,800 --> 00:11:26,160
someone is who they say they are uh i

00:11:23,760 --> 00:11:29,279
have the following recommended readings

00:11:26,160 --> 00:11:31,440
uh and their lord edgware dies

00:11:29,279 --> 00:11:32,880
after the and after the funeral by

00:11:31,440 --> 00:11:34,880
agatha christie

00:11:32,880 --> 00:11:36,720
although a murder is announced by agatha

00:11:34,880 --> 00:11:39,600
christie is another good one

00:11:36,720 --> 00:11:40,959
and then by arthur conan doyle there is

00:11:39,600 --> 00:11:43,440
a case of identity

00:11:40,959 --> 00:11:44,560
and the adventure of the stock brokers

00:11:43,440 --> 00:11:48,000
clerk

00:11:44,560 --> 00:11:50,639
and so if you're curious to

00:11:48,000 --> 00:11:51,519
read about mistaken identities that sort

00:11:50,639 --> 00:11:57,040
of thing

00:11:51,519 --> 00:12:00,320
those are fun books now

00:11:57,040 --> 00:12:02,000
uh so when i ask about

00:12:00,320 --> 00:12:04,480
how do we know people are who they say

00:12:02,000 --> 00:12:04,959
they are i want to talk a little bit

00:12:04,480 --> 00:12:09,440
about

00:12:04,959 --> 00:12:12,880
authentication and permissions now

00:12:09,440 --> 00:12:15,920
let's turn to authentications first

00:12:12,880 --> 00:12:20,000
um so what should you know about

00:12:15,920 --> 00:12:22,320
authentications in python so first

00:12:20,000 --> 00:12:24,800
you should know not to roll your own off

00:12:22,320 --> 00:12:29,920
um there are people who

00:12:24,800 --> 00:12:29,920
get phds in cryptography and um

00:12:30,320 --> 00:12:33,120
you know if you

00:12:34,079 --> 00:12:37,760
you should be using encrypted passwords

00:12:36,959 --> 00:12:40,800
and

00:12:37,760 --> 00:12:44,720
you don't want to do that yourself uh

00:12:40,800 --> 00:12:46,079
don't roll your own encryption your own

00:12:44,720 --> 00:12:49,360
authentication

00:12:46,079 --> 00:12:51,920
um use the tools available

00:12:49,360 --> 00:12:52,800
secondly don't store plain text

00:12:51,920 --> 00:12:56,240
passwords

00:12:52,800 --> 00:13:01,040
anywhere don't store them in a text file

00:12:56,240 --> 00:13:01,040
in your computer don't store them

00:13:01,200 --> 00:13:04,480
in your

00:13:05,519 --> 00:13:08,880
chat with yourself in your slack channel

00:13:08,240 --> 00:13:12,160
um

00:13:08,880 --> 00:13:15,040
don't store them on post-it notes

00:13:12,160 --> 00:13:15,920
don't store them in the database for

00:13:15,040 --> 00:13:19,440
sure

00:13:15,920 --> 00:13:22,720
um don't do it

00:13:19,440 --> 00:13:25,279
third use two factor off on your

00:13:22,720 --> 00:13:28,959
personal accounts wherever you can

00:13:25,279 --> 00:13:32,560
and try to offer it for your project

00:13:28,959 --> 00:13:35,519
for your users if it's at all possible

00:13:32,560 --> 00:13:37,120
um and then finally with authentication

00:13:35,519 --> 00:13:40,399
you should know that django doesn't

00:13:37,120 --> 00:13:44,079
throttle user authentications by default

00:13:40,399 --> 00:13:45,199
um so you should use a complementary

00:13:44,079 --> 00:13:48,240
tool to do so

00:13:45,199 --> 00:13:50,639
so someone can't brute force um

00:13:48,240 --> 00:13:52,240
try to log in a ton of times so

00:13:50,639 --> 00:13:55,360
something like django defender

00:13:52,240 --> 00:13:57,760
is useful in that case

00:13:55,360 --> 00:13:57,760
all right

00:13:59,040 --> 00:14:08,000
so what should i know about permissions

00:14:02,560 --> 00:14:11,360
and for permissions uh that's basically

00:14:08,000 --> 00:14:13,360
where you have a user and um

00:14:11,360 --> 00:14:15,600
the user should be allowed to do the

00:14:13,360 --> 00:14:18,240
things that you want to allow them

00:14:15,600 --> 00:14:18,800
but they should not be able to do things

00:14:18,240 --> 00:14:22,560
um

00:14:18,800 --> 00:14:26,079
outside of that limited scope um

00:14:22,560 --> 00:14:28,959
and uh you need to be thoughtful

00:14:26,079 --> 00:14:30,240
about what permissions you need and how

00:14:28,959 --> 00:14:33,440
to apply them

00:14:30,240 --> 00:14:36,320
and i would say first that you'll want

00:14:33,440 --> 00:14:40,079
to be as granular as possible

00:14:36,320 --> 00:14:41,440
granular is practical it's always easier

00:14:40,079 --> 00:14:43,839
and safer to grant

00:14:41,440 --> 00:14:45,519
an additional permission than it is to

00:14:43,839 --> 00:14:48,560
try to revoke one

00:14:45,519 --> 00:14:50,720
so if you have a user that finds that

00:14:48,560 --> 00:14:52,560
they can't do something they should do

00:14:50,720 --> 00:14:53,760
they should be able to do it's easier to

00:14:52,560 --> 00:14:56,880
grant them that permission

00:14:53,760 --> 00:14:59,839
than to um

00:14:56,880 --> 00:15:02,079
that's a better error than it is to

00:14:59,839 --> 00:15:03,519
grant someone more permissions than they

00:15:02,079 --> 00:15:06,880
should really have

00:15:03,519 --> 00:15:09,839
if that makes sense um and finally

00:15:06,880 --> 00:15:11,680
i would say that um with permissions

00:15:09,839 --> 00:15:12,880
you're going to want to think about your

00:15:11,680 --> 00:15:16,160
perimeters

00:15:12,880 --> 00:15:18,639
and for that

00:15:16,160 --> 00:15:20,079
i want to turn to the case of the

00:15:18,639 --> 00:15:22,959
speckled band

00:15:20,079 --> 00:15:23,920
now this is a story by arthur conan

00:15:22,959 --> 00:15:28,320
doyle

00:15:23,920 --> 00:15:30,560
and um it features sherlock holmes

00:15:28,320 --> 00:15:31,519
one of the qualities of it is that is a

00:15:30,560 --> 00:15:35,440
locked room

00:15:31,519 --> 00:15:38,880
mystery basically the door is locked

00:15:35,440 --> 00:15:42,079
the window is locked so

00:15:38,880 --> 00:15:44,399
how did someone die right

00:15:42,079 --> 00:15:45,440
um how could they have been murdered if

00:15:44,399 --> 00:15:48,800
they're

00:15:45,440 --> 00:15:51,120
locked in from the inside you know

00:15:48,800 --> 00:15:52,160
so you have these perimeters that are

00:15:51,120 --> 00:15:55,519
known

00:15:52,160 --> 00:15:59,920
and protected um

00:15:55,519 --> 00:16:02,560
but uh the solution to this case

00:15:59,920 --> 00:16:04,160
involves a perimeter that was not known

00:16:02,560 --> 00:16:06,720
and not protected

00:16:04,160 --> 00:16:07,360
and it actually involves a snake so i

00:16:06,720 --> 00:16:11,440
think

00:16:07,360 --> 00:16:14,480
it is an excellent read for pi bonistas

00:16:11,440 --> 00:16:17,440
who are interested in thinking about

00:16:14,480 --> 00:16:18,079
their pr the perimeters in their project

00:16:17,440 --> 00:16:21,040
and

00:16:18,079 --> 00:16:21,519
how you need to protect them and think

00:16:21,040 --> 00:16:25,440
about

00:16:21,519 --> 00:16:25,440
the permissions um

00:16:26,079 --> 00:16:31,279
for those perimeters so i give that a

00:16:28,560 --> 00:16:31,279
recommend too

00:16:31,839 --> 00:16:35,920
all right so to sum up trade

00:16:34,160 --> 00:16:38,320
authentication and permissions

00:16:35,920 --> 00:16:42,320
conservatively

00:16:38,320 --> 00:16:44,480
don't roll your own off be explicit

00:16:42,320 --> 00:16:47,759
about the perimeters in your project

00:16:44,480 --> 00:16:51,519
and apply permissions carefully

00:16:47,759 --> 00:16:54,560
all right so um the next question

00:16:51,519 --> 00:16:57,680
that we have for our detectives

00:16:54,560 --> 00:16:59,839
is should i trust this mysterious

00:16:57,680 --> 00:17:01,519
package

00:16:59,839 --> 00:17:03,519
all right so we're gonna turn to

00:17:01,519 --> 00:17:05,199
sherlock holmes for this one

00:17:03,519 --> 00:17:07,439
and sherlock holmes has some wild

00:17:05,199 --> 00:17:10,000
stories about things like this

00:17:07,439 --> 00:17:12,240
there was once a case where a client

00:17:10,000 --> 00:17:16,079
received a package containing

00:17:12,240 --> 00:17:18,799
three severed ears packed in salt

00:17:16,079 --> 00:17:20,240
uh in another case a client received

00:17:18,799 --> 00:17:22,880
five orange pips

00:17:20,240 --> 00:17:23,280
and it turned out to be this huge threat

00:17:22,880 --> 00:17:27,439
uh

00:17:23,280 --> 00:17:31,360
so a pip is a seed for fellow non-brits

00:17:27,439 --> 00:17:34,400
um it this story was

00:17:31,360 --> 00:17:37,200
one of two stories where the client

00:17:34,400 --> 00:17:39,120
died after seeking holmes's help so this

00:17:37,200 --> 00:17:42,720
mysterious package

00:17:39,120 --> 00:17:44,080
really was um quite threatening and

00:17:42,720 --> 00:17:46,559
quite a problem

00:17:44,080 --> 00:17:47,360
so no homes does not believe that you

00:17:46,559 --> 00:17:52,400
should trust

00:17:47,360 --> 00:17:52,400
that mysterious package all right

00:17:52,799 --> 00:17:58,080
so uh with respect to software security

00:17:55,760 --> 00:18:01,160
i want to give you a brief introduction

00:17:58,080 --> 00:18:02,400
into injection user uploads

00:18:01,160 --> 00:18:06,960
deserialization

00:18:02,400 --> 00:18:06,960
and typo squatting all right

00:18:07,600 --> 00:18:12,240
so first let's talk about handling

00:18:10,000 --> 00:18:14,000
unknowns

00:18:12,240 --> 00:18:15,360
there is a common saying that you'll

00:18:14,000 --> 00:18:18,480
probably hear you know

00:18:15,360 --> 00:18:21,600
not in tech but wherever and

00:18:18,480 --> 00:18:24,880
it's trust but verify and

00:18:21,600 --> 00:18:28,240
i would say no uh verify

00:18:24,880 --> 00:18:29,440
and then trust assume anything that

00:18:28,240 --> 00:18:32,080
comes to you from

00:18:29,440 --> 00:18:33,200
outside could potentially be

00:18:32,080 --> 00:18:36,640
compromising

00:18:33,200 --> 00:18:40,480
and act accordingly

00:18:36,640 --> 00:18:42,799
all right so let's talk a little bit

00:18:40,480 --> 00:18:45,840
about injection and specifically

00:18:42,799 --> 00:18:45,840
sql injection

00:18:46,240 --> 00:18:50,480
now this happens when

00:18:52,240 --> 00:18:56,000
through some means usually it's user

00:18:55,200 --> 00:18:59,120
input

00:18:56,000 --> 00:19:03,679
something like that um

00:18:59,120 --> 00:19:06,799
a user is able to run raw sql

00:19:03,679 --> 00:19:10,160
and they can get back information

00:19:06,799 --> 00:19:11,840
they can delete stuff it's uh it's

00:19:10,160 --> 00:19:14,880
potentially

00:19:11,840 --> 00:19:15,280
really troubling and something you can

00:19:14,880 --> 00:19:18,240
do

00:19:15,280 --> 00:19:21,120
to help prevent this is to write raw

00:19:18,240 --> 00:19:24,799
sequels sparingly if at all

00:19:21,120 --> 00:19:28,000
it is a lot safer to use the django orm

00:19:24,799 --> 00:19:33,039
than to execute raw sql queries

00:19:28,000 --> 00:19:37,200
you can use raw sql with django

00:19:33,039 --> 00:19:39,919
but raw sequel especially raw sequel

00:19:37,200 --> 00:19:40,559
that is a string and then it's formatted

00:19:39,919 --> 00:19:44,640
using

00:19:40,559 --> 00:19:49,520
user input it's particularly dangerous

00:19:44,640 --> 00:19:52,720
it's um it's

00:19:49,520 --> 00:19:56,000
just a bigger

00:19:52,720 --> 00:19:59,679
risk than using the jenga orm

00:19:56,000 --> 00:20:02,159
so what i would say is

00:19:59,679 --> 00:20:04,159
that you should become really good

00:20:02,159 --> 00:20:07,840
friends with the django orm

00:20:04,159 --> 00:20:11,600
and know how to use it well additionally

00:20:07,840 --> 00:20:14,640
if there are things you would like to do

00:20:11,600 --> 00:20:16,080
with the jenga orem but um it's not

00:20:14,640 --> 00:20:20,159
quite flexible enough

00:20:16,080 --> 00:20:23,919
or something like that um using

00:20:20,159 --> 00:20:26,559
a different orm and like plugging it in

00:20:23,919 --> 00:20:29,200
to django is a better option than

00:20:26,559 --> 00:20:31,919
writing this raw sequel

00:20:29,200 --> 00:20:32,799
um so i know i've worked on projects

00:20:31,919 --> 00:20:36,880
that have used

00:20:32,799 --> 00:20:39,919
django and sql alchemy

00:20:36,880 --> 00:20:42,240
with um or together

00:20:39,919 --> 00:20:43,679
and that's a better option than raw

00:20:42,240 --> 00:20:46,240
sequel

00:20:43,679 --> 00:20:48,720
all right and just in general string

00:20:46,240 --> 00:20:51,120
formatting should be done carefully

00:20:48,720 --> 00:20:51,760
it can sometimes pose a risk of

00:20:51,120 --> 00:20:56,640
injection

00:20:51,760 --> 00:20:56,640
or code execution all right

00:20:56,960 --> 00:21:01,520
so let's talk about user uploads and

00:20:59,640 --> 00:21:05,679
deserialization

00:21:01,520 --> 00:21:08,240
so when you're getting a user upload

00:21:05,679 --> 00:21:09,760
you basically want to confirm that it is

00:21:08,240 --> 00:21:13,520
what you suspect

00:21:09,760 --> 00:21:15,600
so if you

00:21:13,520 --> 00:21:17,840
if you're asking your user to upload a

00:21:15,600 --> 00:21:17,840
picture

00:21:18,320 --> 00:21:22,480
you want to be sure that it's a picture

00:21:20,000 --> 00:21:25,360
and not say a script

00:21:22,480 --> 00:21:26,480
if you're not careful with user uploads

00:21:25,360 --> 00:21:28,840
it can

00:21:26,480 --> 00:21:31,039
leave you exposed to the risk of code

00:21:28,840 --> 00:21:34,720
execution

00:21:31,039 --> 00:21:36,880
now serialized data

00:21:34,720 --> 00:21:37,919
is another way in which a threat can

00:21:36,880 --> 00:21:41,280
come in

00:21:37,919 --> 00:21:45,200
and it's tricky because

00:21:41,280 --> 00:21:49,360
there's no way to know what the data

00:21:45,200 --> 00:21:52,559
is before you deserialize it

00:21:49,360 --> 00:21:53,679
so if you deserialize something without

00:21:52,559 --> 00:21:56,720
being sure that you

00:21:53,679 --> 00:21:59,840
fully trust the source

00:21:56,720 --> 00:22:01,840
you open yourself up to problems with

00:21:59,840 --> 00:22:05,280
code execution

00:22:01,840 --> 00:22:05,280
uh so in this case

00:22:07,120 --> 00:22:10,960
i don't like using serialized data for

00:22:09,679 --> 00:22:14,080
this reason

00:22:10,960 --> 00:22:17,440
um but you have to be

00:22:14,080 --> 00:22:20,320
certain about your source now

00:22:17,440 --> 00:22:21,360
uh typo squatting type of squatting is

00:22:20,320 --> 00:22:24,320
another way

00:22:21,360 --> 00:22:25,440
that you could get a mysterious package

00:22:24,320 --> 00:22:29,360
from the internet

00:22:25,440 --> 00:22:34,080
which is a little terrifying um

00:22:29,360 --> 00:22:36,400
but my question for you would be

00:22:34,080 --> 00:22:38,640
have you ever pip installed a package

00:22:36,400 --> 00:22:41,280
without checking its name

00:22:38,640 --> 00:22:42,880
i know i have and it's not a good idea

00:22:41,280 --> 00:22:46,480
it's not a good idea

00:22:42,880 --> 00:22:48,799
um and that is because

00:22:46,480 --> 00:22:50,559
um you could be subject to something

00:22:48,799 --> 00:22:52,640
like type of squatting

00:22:50,559 --> 00:22:54,240
and type of squatting is when a

00:22:52,640 --> 00:22:57,679
malicious actor

00:22:54,240 --> 00:23:00,960
uploads a package and they select a name

00:22:57,679 --> 00:23:04,480
that is either like a typo of

00:23:00,960 --> 00:23:08,159
another package or

00:23:04,480 --> 00:23:12,159
perhaps it's not a typo

00:23:08,159 --> 00:23:16,080
but um like a natural

00:23:12,159 --> 00:23:19,679
guess for that package and

00:23:16,080 --> 00:23:22,880
uh if people were to download it

00:23:19,679 --> 00:23:26,559
um then

00:23:22,880 --> 00:23:29,760
or if they were to pip install it and uh

00:23:26,559 --> 00:23:32,799
accidentally type the wrong thing or

00:23:29,760 --> 00:23:33,600
you guess what the package should be

00:23:32,799 --> 00:23:36,960
called

00:23:33,600 --> 00:23:40,720
um you could be using

00:23:36,960 --> 00:23:43,760
a malicious library so to summarize

00:23:40,720 --> 00:23:46,799
be wary of user inputs and uploads don't

00:23:43,760 --> 00:23:48,559
guess how do you handle sensitive

00:23:46,799 --> 00:23:50,480
information

00:23:48,559 --> 00:23:52,000
and this is something that all three of

00:23:50,480 --> 00:23:55,520
our detectives have

00:23:52,000 --> 00:23:58,720
encountered um through their

00:23:55,520 --> 00:24:00,960
work now they all understand that

00:23:58,720 --> 00:24:02,080
information is valuable and sometimes

00:24:00,960 --> 00:24:04,880
dangerous

00:24:02,080 --> 00:24:07,679
they tend not to reveal their hunches uh

00:24:04,880 --> 00:24:09,919
before the appropriate time

00:24:07,679 --> 00:24:12,159
they will explain their methods when

00:24:09,919 --> 00:24:14,480
it's appropriate but not before

00:24:12,159 --> 00:24:16,000
they don't always tell the authorities

00:24:14,480 --> 00:24:18,559
the full story

00:24:16,000 --> 00:24:19,039
and they have discussed for blackmailers

00:24:18,559 --> 00:24:21,840
because

00:24:19,039 --> 00:24:23,039
blackmailers wield personal information

00:24:21,840 --> 00:24:25,440
as weapons

00:24:23,039 --> 00:24:26,880
we want to consider the data that we are

00:24:25,440 --> 00:24:30,840
collecting

00:24:26,880 --> 00:24:32,559
and um using uh that comes from our

00:24:30,840 --> 00:24:35,600
users and

00:24:32,559 --> 00:24:37,760
here i would give you the following

00:24:35,600 --> 00:24:41,919
broad advice

00:24:37,760 --> 00:24:41,919
first i would ask myself

00:24:43,840 --> 00:24:47,919
do i need to collect that do i need to

00:24:46,400 --> 00:24:52,880
store that

00:24:47,919 --> 00:24:55,919
and being selective in this way

00:24:52,880 --> 00:25:00,000
protects you um because

00:24:55,919 --> 00:25:03,279
you can only lose you can only

00:25:00,000 --> 00:25:05,679
get hacked uh

00:25:03,279 --> 00:25:06,320
for the data that you have if you don't

00:25:05,679 --> 00:25:09,600
collect

00:25:06,320 --> 00:25:12,960
and you don't store something

00:25:09,600 --> 00:25:16,240
um then you can't lose it right

00:25:12,960 --> 00:25:19,279
um so just be thoughtful

00:25:16,240 --> 00:25:22,320
uh second i would say that this is an

00:25:19,279 --> 00:25:24,559
area where it really makes sense to

00:25:22,320 --> 00:25:27,440
delegate

00:25:24,559 --> 00:25:28,240
there are options uh both in the

00:25:27,440 --> 00:25:31,520
collection

00:25:28,240 --> 00:25:32,240
and storage of data um to outsource this

00:25:31,520 --> 00:25:35,200
to groups

00:25:32,240 --> 00:25:36,720
that are going to be very proactive

00:25:35,200 --> 00:25:39,679
about their security

00:25:36,720 --> 00:25:41,279
and um it makes sense for teams and

00:25:39,679 --> 00:25:44,799
organizations to consider

00:25:41,279 --> 00:25:44,799
when that's appropriate

00:25:45,360 --> 00:25:50,799
third i would say that you want to give

00:25:48,720 --> 00:25:51,600
users tools that will help protect

00:25:50,799 --> 00:25:53,440
themselves

00:25:51,600 --> 00:25:56,080
so this goes back to what i was saying

00:25:53,440 --> 00:25:58,960
earlier with two-factor authentication

00:25:56,080 --> 00:26:00,640
giving your users tools to help protect

00:25:58,960 --> 00:26:04,799
themselves

00:26:00,640 --> 00:26:08,640
has can have a multiplicative

00:26:04,799 --> 00:26:12,640
effect it's it's great

00:26:08,640 --> 00:26:15,600
and then finally just um a

00:26:12,640 --> 00:26:16,799
personal point of view something to

00:26:15,600 --> 00:26:20,799
consider

00:26:16,799 --> 00:26:25,200
is think about personal data

00:26:20,799 --> 00:26:28,880
like glitter if i had a tuba glitter

00:26:25,200 --> 00:26:32,080
i know that if i unscrew the cap

00:26:28,880 --> 00:26:35,039
and dump it on the table that i

00:26:32,080 --> 00:26:36,159
am never getting all that glitter back

00:26:35,039 --> 00:26:39,200
that

00:26:36,159 --> 00:26:42,640
that glitter will end up uh

00:26:39,200 --> 00:26:45,919
in places that i don't expect and

00:26:42,640 --> 00:26:49,120
that it can

00:26:45,919 --> 00:26:52,159
travel and transfer to different people

00:26:49,120 --> 00:26:54,480
and um

00:26:52,159 --> 00:26:55,520
it is not something you can undo so to

00:26:54,480 --> 00:26:57,919
summarize

00:26:55,520 --> 00:27:00,559
both source code and user data deserve

00:26:57,919 --> 00:27:02,320
careful consideration

00:27:00,559 --> 00:27:03,600
you can't lose data that you don't

00:27:02,320 --> 00:27:06,720
collect

00:27:03,600 --> 00:27:09,600
so the final question that i have is

00:27:06,720 --> 00:27:11,039
are you up to date on your knowledge of

00:27:09,600 --> 00:27:13,120
cigar ash

00:27:11,039 --> 00:27:15,440
and we are going to turn to sherlock

00:27:13,120 --> 00:27:18,080
holmes for this question

00:27:15,440 --> 00:27:18,960
uh so sherlock holmes is constantly

00:27:18,080 --> 00:27:22,080
learning about

00:27:18,960 --> 00:27:25,279
his field he's an experimenter

00:27:22,080 --> 00:27:27,200
he is a knowledge sharer he shares his

00:27:25,279 --> 00:27:31,360
findings with scotland yard

00:27:27,200 --> 00:27:35,039
he is willing to do things in new ways

00:27:31,360 --> 00:27:37,760
he's on the top of his game and

00:27:35,039 --> 00:27:40,000
so this question really boils down to

00:27:37,760 --> 00:27:43,039
the importance of continued learning

00:27:40,000 --> 00:27:44,559
and forward progress all right so what

00:27:43,039 --> 00:27:46,240
does this look like for a software

00:27:44,559 --> 00:27:48,640
developer

00:27:46,240 --> 00:27:50,480
so i would first say that security is a

00:27:48,640 --> 00:27:53,679
continual process

00:27:50,480 --> 00:27:55,520
you are never secure

00:27:53,679 --> 00:27:57,360
and then able to like check off

00:27:55,520 --> 00:27:59,919
something from a list

00:27:57,360 --> 00:28:00,559
uh new vulnerabilities are found all the

00:27:59,919 --> 00:28:03,120
time

00:28:00,559 --> 00:28:05,360
new exploits and attack vectors are

00:28:03,120 --> 00:28:11,039
executed

00:28:05,360 --> 00:28:14,240
and um you know to stay security-minded

00:28:11,039 --> 00:28:17,279
it's this continual process not only for

00:28:14,240 --> 00:28:20,720
an individual but

00:28:17,279 --> 00:28:23,360
for a team and a company and

00:28:20,720 --> 00:28:24,799
on the industry level as a whole to

00:28:23,360 --> 00:28:28,000
summarize that

00:28:24,799 --> 00:28:30,480
security is never done

00:28:28,000 --> 00:28:31,200
good security is a product of continual

00:28:30,480 --> 00:28:34,000
learning and

00:28:31,200 --> 00:28:36,559
iteration oh this is a summary of the

00:28:34,000 --> 00:28:39,760
talk as a whole

00:28:36,559 --> 00:28:41,919
now i would encourage you

00:28:39,760 --> 00:28:43,679
to generally approach your code with

00:28:41,919 --> 00:28:48,159
skepticism

00:28:43,679 --> 00:28:52,000
and this means just asking questions

00:28:48,159 --> 00:28:56,159
and testing theories and being

00:28:52,000 --> 00:28:56,159
willing to

00:28:56,720 --> 00:29:00,399
find out that there's something you

00:28:58,240 --> 00:29:01,840
don't know about your code or that there

00:29:00,399 --> 00:29:04,480
could be a problem

00:29:01,840 --> 00:29:05,440
um it's just kind of a a stance and a

00:29:04,480 --> 00:29:06,480
mindset

00:29:05,440 --> 00:29:09,360
right so we're going back to the

00:29:06,480 --> 00:29:09,360
security mindset

00:29:09,679 --> 00:29:13,360
and this is part of why i like the

00:29:11,200 --> 00:29:17,200
detectives they are curious

00:29:13,360 --> 00:29:20,320
and inquisitive and they are

00:29:17,200 --> 00:29:23,520
um trying

00:29:20,320 --> 00:29:26,960
to do something positive and make

00:29:23,520 --> 00:29:28,559
the world better finally i just want to

00:29:26,960 --> 00:29:31,760
say

00:29:28,559 --> 00:29:34,399
thank you to tell you that it's been

00:29:31,760 --> 00:29:35,440
really great to be here i wish it could

00:29:34,399 --> 00:29:40,159
have been in person

00:29:35,440 --> 00:29:43,039
but i'm delighted regardless

00:29:40,159 --> 00:29:45,200
quick thank you to uh noelle cook for

00:29:43,039 --> 00:29:47,360
drawing these excellent python

00:29:45,200 --> 00:29:50,799
detectives for me

00:29:47,360 --> 00:29:52,159
and finally a thank you to you and to

00:29:50,799 --> 00:29:54,559
all of the djangocon

00:29:52,159 --> 00:29:56,320
organizers who've been so flexible in

00:29:54,559 --> 00:30:00,480
this really weird year

00:29:56,320 --> 00:30:02,799
so thanks so much uh for being here and

00:30:00,480 --> 00:30:09,840
i'll be hanging around the slack so feel

00:30:02,799 --> 00:30:09,840
free to say hi

00:30:09,919 --> 00:30:15,200
i think we understood the promotion

00:30:20,840 --> 00:30:23,840
already

00:30:29,919 --> 00:30:34,480
are you all enjoying uh djangocon so far

00:30:35,679 --> 00:30:39,039
i am yeah

00:30:39,360 --> 00:30:42,880
it looks weird but yeah

00:30:44,159 --> 00:31:05,840
you would prefer to be in post right now

00:30:47,200 --> 00:31:05,840
but yeah no me too

00:31:14,559 --> 00:31:24,240
so are most of you in europe probably

00:31:19,200 --> 00:31:24,240
i'm close to israel okay yeah yeah

00:31:24,480 --> 00:31:26,720
so

00:31:27,600 --> 00:31:30,720
closer in the time zone yeah no it's

00:31:30,320 --> 00:31:33,840
true

00:31:30,720 --> 00:31:33,840
it's true

00:31:43,360 --> 00:31:47,120
so i haven't been to a q a session yet

00:31:45,919 --> 00:31:50,799
because

00:31:47,120 --> 00:31:52,799
i woke up just for this talk

00:31:50,799 --> 00:31:55,279
so i'm not sure how things have

00:31:52,799 --> 00:31:58,080
proceeded earlier

00:31:55,279 --> 00:31:59,039
but if anyone has questions feel free to

00:31:58,080 --> 00:32:01,840
ask

00:31:59,039 --> 00:32:01,840
uh i also

00:32:02,240 --> 00:32:06,960
will be watching the slack occasionally

00:32:04,080 --> 00:32:10,080
so feel free to shoot me something there

00:32:06,960 --> 00:32:13,120
uh but but yeah

00:32:10,080 --> 00:32:16,159
i do have a question uh

00:32:13,120 --> 00:32:18,000
there's like not a checklist that you

00:32:16,159 --> 00:32:20,640
like make sure your project is

00:32:18,000 --> 00:32:23,919
absolutely secured and so on but

00:32:20,640 --> 00:32:27,039
like is there a checklist to

00:32:23,919 --> 00:32:28,159
at least start off like to see the

00:32:27,039 --> 00:32:31,279
basics

00:32:28,159 --> 00:32:34,399
uh yeah um

00:32:31,279 --> 00:32:38,640
so what i really meant by that is that

00:32:34,399 --> 00:32:40,320
you can't um

00:32:38,640 --> 00:32:43,200
it's not like you do security once and

00:32:40,320 --> 00:32:46,799
then you're good i guess

00:32:43,200 --> 00:32:50,159
yeah because the code is changing and

00:32:46,799 --> 00:32:56,960
new problems arise

00:32:50,159 --> 00:32:57,679
but i think that it's going to depend a

00:32:56,960 --> 00:33:00,480
little

00:32:57,679 --> 00:33:00,480
on the

00:33:00,960 --> 00:33:07,120
type of project and

00:33:04,000 --> 00:33:07,120
your own personal

00:33:07,200 --> 00:33:11,840
risk tolerance um

00:33:12,399 --> 00:33:16,159
so i really hesitate to give kind of a

00:33:14,240 --> 00:33:19,919
one size fits all

00:33:16,159 --> 00:33:23,279
answer to that um

00:33:19,919 --> 00:33:25,200
if that makes sense no totally uh i was

00:33:23,279 --> 00:33:28,399
just like wondering if there's

00:33:25,200 --> 00:33:31,600
like a source where we can search for

00:33:28,399 --> 00:33:34,320
uh useful uh tips to

00:33:31,600 --> 00:33:35,360
start like checking well is my django

00:33:34,320 --> 00:33:38,960
project

00:33:35,360 --> 00:33:43,919
failing in that that that other basic

00:33:38,960 --> 00:33:46,640
uh security issues right right um

00:33:43,919 --> 00:33:48,080
yeah you know django actually has pretty

00:33:46,640 --> 00:33:53,840
good documentation

00:33:48,080 --> 00:33:53,840
on security i was impressed um

00:33:54,080 --> 00:33:58,480
so i would recommend giving a poke

00:33:56,480 --> 00:34:02,480
around their docks

00:33:58,480 --> 00:34:02,480
just because they they list

00:34:03,279 --> 00:34:10,240
some good places to start i also

00:34:06,799 --> 00:34:13,839
um i believe i cut it for

00:34:10,240 --> 00:34:17,200
time but i think the links are

00:34:13,839 --> 00:34:20,639
in my slides which i tweeted out but

00:34:17,200 --> 00:34:24,159
i had um

00:34:20,639 --> 00:34:24,159
first a like

00:34:24,800 --> 00:34:29,119
quick list of python security tips and

00:34:27,200 --> 00:34:30,000
then a quick list of django security

00:34:29,119 --> 00:34:34,000
tips

00:34:30,000 --> 00:34:35,919
um so

00:34:34,000 --> 00:34:37,280
that might be an interesting place to

00:34:35,919 --> 00:34:39,440
start because um

00:34:37,280 --> 00:34:41,599
i had gone through the docks and had

00:34:39,440 --> 00:34:43,919
kind of pulled out

00:34:41,599 --> 00:34:43,919
um

00:34:44,720 --> 00:34:49,359
10 things that stuck out to me i guess

00:34:47,440 --> 00:34:51,919
uh so

00:34:49,359 --> 00:34:53,760
yeah so if you want you can find that

00:34:51,919 --> 00:34:57,280
link in the slides

00:34:53,760 --> 00:34:57,839
thanks uh did you send that link

00:34:57,280 --> 00:35:02,800
somewhere

00:34:57,839 --> 00:35:06,800
uh um so earlier in the slack i

00:35:02,800 --> 00:35:08,880
had um

00:35:06,800 --> 00:35:11,119
oh you know i'll just drop it into the

00:35:08,880 --> 00:35:11,119
uh

00:35:11,440 --> 00:35:21,520
i can drop you a link to it but um

00:35:17,839 --> 00:35:25,760
i linked to my twitter

00:35:21,520 --> 00:35:28,079
earlier um that had a link to the slides

00:35:25,760 --> 00:35:29,280
if you put it on with the hashtag of

00:35:28,079 --> 00:35:32,720
djangopaikon

00:35:29,280 --> 00:35:35,760
jungle con 2020 i think

00:35:32,720 --> 00:35:39,040
it will also be on the

00:35:35,760 --> 00:35:42,960
twitter in the slack right

00:35:39,040 --> 00:35:42,960
okay yeah i can do that cool

00:35:43,599 --> 00:35:49,040
well it looks like maybe they're

00:35:45,839 --> 00:35:49,040
starting up the next

00:35:49,760 --> 00:35:55,280
maybe i'm wrong um was there anything

00:35:52,960 --> 00:35:55,280
else

00:35:55,920 --> 00:36:03,760
i'm uh really pleased um

00:35:59,520 --> 00:36:12,160
to virtually meet you all and i hope

00:36:03,760 --> 00:36:14,720
you enjoy the rest of djangocon

00:36:12,160 --> 00:36:15,200
thank you now i'm going to go back to

00:36:14,720 --> 00:36:18,240
sleep

00:36:15,200 --> 00:36:21,040
but we'll

00:36:18,240 --> 00:36:27,839
catch you guys later take care good

00:36:21,040 --> 00:36:27,839

YouTube URL: https://www.youtube.com/watch?v=ZXVNv6GqWu8


