Title: DjangoCon 2019 - Day 3 Lightning Talks
Publication date: 2019-04-23
Playlist: DjangoCon Europe 2019 in Copenhagen
Description: 
	
Captions: 
	00:00:00,269 --> 00:00:06,990
so I am from Namibia and I've been a

00:00:04,890 --> 00:00:09,210
high school teacher for the past three

00:00:06,990 --> 00:00:11,929
years I've taught computer studies to

00:00:09,210 --> 00:00:17,670
learners of Ages between 13 and 19 and

00:00:11,929 --> 00:00:23,270
right now I'm a full time student and we

00:00:17,670 --> 00:00:23,270
are not there yet are we then

00:00:24,109 --> 00:00:37,290
okay so okay so last year I was a jungle

00:00:33,000 --> 00:00:40,590
corner of 2018 and I gave a talk at the

00:00:37,290 --> 00:00:43,579
conference and one of my friends was

00:00:40,590 --> 00:00:47,399
also an organizer at that conference so

00:00:43,579 --> 00:00:50,640
when I went back home I also wanted to

00:00:47,399 --> 00:00:53,760
be an organizer back home I organized by

00:00:50,640 --> 00:00:57,300
core Namibia and organize lots of Python

00:00:53,760 --> 00:00:59,129
workshops and events back home I work a

00:00:57,300 --> 00:01:01,620
lot with high school in us as well we

00:00:59,129 --> 00:01:03,719
organized a workshop not a workshop but

00:01:01,620 --> 00:01:05,369
a conference for high school in us so I

00:01:03,719 --> 00:01:07,320
was interested to learn how the

00:01:05,369 --> 00:01:09,210
international world organized

00:01:07,320 --> 00:01:12,750
conferences and I also wanted to be an

00:01:09,210 --> 00:01:14,960
organizer so I wrote to the organizing

00:01:12,750 --> 00:01:18,090
team when I knew where the conference

00:01:14,960 --> 00:01:21,150
was going to be and I would like to

00:01:18,090 --> 00:01:23,970
thank the organizing committee for

00:01:21,150 --> 00:01:26,070
welcoming me and for making the whole

00:01:23,970 --> 00:01:29,640
journey of organizing a conference such

00:01:26,070 --> 00:01:33,360
a pleasant one and also while we were

00:01:29,640 --> 00:01:36,000
organizing we most of us had not done

00:01:33,360 --> 00:01:37,979
such a big big big conference before so

00:01:36,000 --> 00:01:40,229
we had a lot of mentorship and help from

00:01:37,979 --> 00:01:43,079
the guys who organized general corn

00:01:40,229 --> 00:01:45,119
Europe 20:18 from arabic so we would

00:01:43,079 --> 00:01:47,579
like to thank you guys for your guidance

00:01:45,119 --> 00:01:50,189
and for your support throughout the

00:01:47,579 --> 00:01:53,360
organizing of the conference so let's

00:01:50,189 --> 00:01:53,360
give them a hand of applause

00:01:58,300 --> 00:02:16,460
we are there now hear me ah there I am

00:02:10,640 --> 00:02:18,560
Oh that light's nasty so somebody did a

00:02:16,460 --> 00:02:20,120
talk yesterday about context and

00:02:18,560 --> 00:02:22,550
settings and how to deal with them in

00:02:20,120 --> 00:02:24,920
environment variables and so on and I

00:02:22,550 --> 00:02:28,640
didn't 100% agree with it so 1% a

00:02:24,920 --> 00:02:34,910
different view on handling settings many

00:02:28,640 --> 00:02:38,630
people like using multiple files I don't

00:02:34,910 --> 00:02:41,150
think so no main reason is because of

00:02:38,630 --> 00:02:42,980
the concept of update anomaly maybe you

00:02:41,150 --> 00:02:46,070
have your static files in one file and

00:02:42,980 --> 00:02:47,720
then you change it in another one but

00:02:46,070 --> 00:02:50,780
then they don't match and they should

00:02:47,720 --> 00:02:54,790
match and okay yeah there are ways of

00:02:50,780 --> 00:02:54,790
dealing with this but sometimes it's a a

00:02:55,120 --> 00:02:59,000
discipline we're not always so good with

00:02:57,050 --> 00:03:00,800
so there are several tools that I've

00:02:59,000 --> 00:03:04,060
built along the time Thank You Russell

00:03:00,800 --> 00:03:07,310
for dealing with this sort of problem

00:03:04,060 --> 00:03:09,190
also environment variables definitely

00:03:07,310 --> 00:03:11,030
agree with environment for rules because

00:03:09,190 --> 00:03:12,650
they're driven by the running

00:03:11,030 --> 00:03:15,019
environment it's not something that's

00:03:12,650 --> 00:03:16,370
controlled by your application it's

00:03:15,019 --> 00:03:18,800
something controlled by the environment

00:03:16,370 --> 00:03:20,540
in which your application runs and

00:03:18,800 --> 00:03:23,959
that's the whole concept of environment

00:03:20,540 --> 00:03:26,780
variables but remember that you need

00:03:23,959 --> 00:03:28,220
safe fallback defaults if the

00:03:26,780 --> 00:03:30,170
environment variable doesn't set

00:03:28,220 --> 00:03:31,670
something you need something so that for

00:03:30,170 --> 00:03:34,220
instance if you're running in

00:03:31,670 --> 00:03:37,010
development or staging you don't go and

00:03:34,220 --> 00:03:40,640
touch your production database that can

00:03:37,010 --> 00:03:42,980
be bad so here's some tools the first

00:03:40,640 --> 00:03:44,810
one is one called django classy settings

00:03:42,980 --> 00:03:47,170
can I have some hands up about who has

00:03:44,810 --> 00:03:52,010
ever heard of or used this tool before

00:03:47,170 --> 00:03:55,540
yep cool even some Wow okay good so

00:03:52,010 --> 00:03:57,590
basically you and you imported that

00:03:55,540 --> 00:04:00,800
class-based settings was the original

00:03:57,590 --> 00:04:03,849
name you define a class anything that's

00:04:00,800 --> 00:04:07,569
shouty snake case sort of

00:04:03,849 --> 00:04:09,400
names will be exported from it when you

00:04:07,569 --> 00:04:11,469
get there you cook cause because it's a

00:04:09,400 --> 00:04:14,200
class you can links inherit and extend

00:04:11,469 --> 00:04:15,609
and so on you might have your staging

00:04:14,200 --> 00:04:16,870
settings reduction settings and of

00:04:15,609 --> 00:04:18,340
course in your production settings you

00:04:16,870 --> 00:04:20,530
want to set the bug to be false you

00:04:18,340 --> 00:04:23,530
don't have to remember that and then you

00:04:20,530 --> 00:04:25,360
can just use this to go and say hey I'm

00:04:23,530 --> 00:04:27,310
gonna switch which mode on running it

00:04:25,360 --> 00:04:31,479
fall back to local by default but maybe

00:04:27,310 --> 00:04:34,930
find staging or production when we move

00:04:31,479 --> 00:04:38,440
to staging and production also you can

00:04:34,930 --> 00:04:40,240
pull apart and compose your settings in

00:04:38,440 --> 00:04:42,940
multiple classes so you might have to

00:04:40,240 --> 00:04:44,710
Redis settings and then just say okay

00:04:42,940 --> 00:04:46,599
here are my writer settings that all the

00:04:44,710 --> 00:04:48,759
settings are kept together now I want to

00:04:46,599 --> 00:04:51,430
remits them into my development settings

00:04:48,759 --> 00:04:53,199
and so on it also supports environment

00:04:51,430 --> 00:04:55,750
variables so you can decorate your your

00:04:53,199 --> 00:04:57,720
a method to say this is an environment

00:04:55,750 --> 00:05:00,250
variable that will use the name of the

00:04:57,720 --> 00:05:02,380
method to decide which environment

00:05:00,250 --> 00:05:05,919
variable to get all you can prefix it as

00:05:02,380 --> 00:05:09,570
well to say put Django on the front of

00:05:05,919 --> 00:05:12,009
it additionally you can specify the type

00:05:09,570 --> 00:05:15,210
you want it cast to and that can be any

00:05:12,009 --> 00:05:18,370
callable to determine how to read it

00:05:15,210 --> 00:05:20,259
then sometime later I came up with a a

00:05:18,370 --> 00:05:22,030
thing at work that stumped me that I

00:05:20,259 --> 00:05:24,190
needed a much cleaner way of describing

00:05:22,030 --> 00:05:25,870
configuration and this was outside the

00:05:24,190 --> 00:05:27,820
context of Django we didn't just need a

00:05:25,870 --> 00:05:31,180
setting for and so I came up with

00:05:27,820 --> 00:05:33,610
Confucius because since that time Python

00:05:31,180 --> 00:05:36,550
3 had come along and Python 3 has type

00:05:33,610 --> 00:05:41,620
annotations we love type annotations

00:05:36,550 --> 00:05:45,340
don't we all don't we yes I know Tom

00:05:41,620 --> 00:05:47,380
does so here's here's the tick idea with

00:05:45,340 --> 00:05:50,530
Confucius you import the base config and

00:05:47,380 --> 00:05:52,840
from that you subclass your config then

00:05:50,530 --> 00:05:56,949
you go and define your default values

00:05:52,840 --> 00:05:58,990
and their types and it will do the work

00:05:56,949 --> 00:06:01,389
for you of pulling them out of the

00:05:58,990 --> 00:06:03,570
environment if they're defined casting

00:06:01,389 --> 00:06:05,620
them to the type that you've said and

00:06:03,570 --> 00:06:07,900
giving them to you when you need them

00:06:05,620 --> 00:06:10,210
and you use it just simply like a

00:06:07,900 --> 00:06:12,460
constant it's actually a singleton

00:06:10,210 --> 00:06:14,949
pattern defined in Python I know people

00:06:12,460 --> 00:06:17,200
don't like that too bad your config is a

00:06:14,949 --> 00:06:24,790
singleton let's let's admit it

00:06:17,200 --> 00:06:27,100
oops additionally here's some examples

00:06:24,790 --> 00:06:28,600
of using it come from the readme you can

00:06:27,100 --> 00:06:31,450
just go and run it and it'll start it

00:06:28,600 --> 00:06:37,600
you can override your port and here we

00:06:31,450 --> 00:06:39,880
see it's nicely typing why to be yes to

00:06:37,600 --> 00:06:42,610
be true so that we don't have to think

00:06:39,880 --> 00:06:44,260
about that sort of thing how do we do

00:06:42,610 --> 00:06:45,700
use that with Django it's a little more

00:06:44,260 --> 00:06:48,480
clumsy than the other version but it's

00:06:45,700 --> 00:06:50,740
actually doing exactly the same thing as

00:06:48,480 --> 00:06:54,190
class by settings was doing Django

00:06:50,740 --> 00:06:59,380
classy settings or hands up who's using

00:06:54,190 --> 00:07:04,320
Python 3.7 centrally know now that your

00:06:59,380 --> 00:07:04,320
modules in 3.7 can have a dunder getattr

00:07:08,280 --> 00:07:13,510
it will produce a get out of function

00:07:10,810 --> 00:07:15,010
for you that will look at itself up for

00:07:13,510 --> 00:07:16,660
whatever you need which means that

00:07:15,010 --> 00:07:18,730
anything you don't define in your

00:07:16,660 --> 00:07:21,520
settings class will be looked up in your

00:07:18,730 --> 00:07:24,070
conflict class and of course all your

00:07:21,520 --> 00:07:25,750
config objects can also have methods

00:07:24,070 --> 00:07:28,810
that refer to themselves to pull out

00:07:25,750 --> 00:07:31,930
their own values if you don't agree with

00:07:28,810 --> 00:07:34,150
me come and point out why I'm wrong at

00:07:31,930 --> 00:07:36,279
the sprints of course you're all coming

00:07:34,150 --> 00:07:40,710
to the sprints right

00:07:36,279 --> 00:07:43,139
okay thank you thank you

00:07:40,710 --> 00:07:51,840
[Applause]

00:07:43,139 --> 00:07:53,610
David our next speaker is David so our

00:07:51,840 --> 00:07:57,419
time is here so you can have a look

00:07:53,610 --> 00:08:00,360
always there no way which time where you

00:07:57,419 --> 00:08:02,639
are at right so I also wanted to talk

00:08:00,360 --> 00:08:06,419
about Africa right since we came all the

00:08:02,639 --> 00:08:09,509
way anyway all right so a little bit of

00:08:06,419 --> 00:08:13,259
the history about PyCon Africa or PyCon

00:08:09,509 --> 00:08:18,240
in Africa oh we are here I will continue

00:08:13,259 --> 00:08:20,759
in just a few minutes right hello my

00:08:18,240 --> 00:08:23,479
name's David I work for who are they

00:08:20,759 --> 00:08:26,039
renewable energy supplier in the UK and

00:08:23,479 --> 00:08:27,990
I will talk to you about heretical

00:08:26,039 --> 00:08:28,979
Django practice that we follow which is

00:08:27,990 --> 00:08:31,169
what I think is quite useful to

00:08:28,979 --> 00:08:32,789
everybody actually follows on really

00:08:31,169 --> 00:08:35,010
nicely from a little section of tom's

00:08:32,789 --> 00:08:37,320
talk and also from there that's all

00:08:35,010 --> 00:08:39,060
curly one about the 10,000 commits

00:08:37,320 --> 00:08:41,399
Django project and the challenges that

00:08:39,060 --> 00:08:43,800
come with that it's a bit of context we

00:08:41,399 --> 00:08:46,050
ought to also have a massive Django kind

00:08:43,800 --> 00:08:49,050
of mono repo like forty thousand commits

00:08:46,050 --> 00:08:51,240
two and a thousand migrations we've been

00:08:49,050 --> 00:08:52,410
working on it for kind of three years we

00:08:51,240 --> 00:08:54,420
felt to the point of a kind about

00:08:52,410 --> 00:08:55,920
growing Django or some parts of it at

00:08:54,420 --> 00:08:57,600
least so some of the things that are

00:08:55,920 --> 00:08:59,279
super useful when you get started you're

00:08:57,600 --> 00:09:01,680
trying to build things quickly kind of

00:08:59,279 --> 00:09:03,449
model forms the admin things like that I

00:09:01,680 --> 00:09:04,920
started to kind of hold us back in a way

00:09:03,449 --> 00:09:07,890
we want to enforce certain kind of

00:09:04,920 --> 00:09:08,940
architectural rules and layers and some

00:09:07,890 --> 00:09:11,190
of these things that kind of cross

00:09:08,940 --> 00:09:13,019
concerns a little bit we've start to

00:09:11,190 --> 00:09:14,430
kind of phase them out and so we've come

00:09:13,019 --> 00:09:16,589
with a whole suite of kind of fairly

00:09:14,430 --> 00:09:18,149
heretical conventions that we found

00:09:16,589 --> 00:09:20,459
really useful and we have them published

00:09:18,149 --> 00:09:21,779
in a public style guide that you can

00:09:20,459 --> 00:09:23,339
visit but let's have a look at one of

00:09:21,779 --> 00:09:26,490
them which i think is quite interesting

00:09:23,339 --> 00:09:29,519
and that is to only pass Python

00:09:26,490 --> 00:09:30,870
primitives to your templates so that

00:09:29,519 --> 00:09:32,370
means that what you're passing has got

00:09:30,870 --> 00:09:35,610
to be just things all serialized to

00:09:32,370 --> 00:09:37,500
Jason really so strings in floats you

00:09:35,610 --> 00:09:40,550
can't pass model instances under this

00:09:37,500 --> 00:09:43,320
kind of convention or query sense okay

00:09:40,550 --> 00:09:45,810
so let's just expand a little bit on how

00:09:43,320 --> 00:09:47,459
you do that before we examine why so if

00:09:45,810 --> 00:09:49,380
you have a view class you've got to get

00:09:47,459 --> 00:09:51,870
context method responsible for returning

00:09:49,380 --> 00:09:54,300
this dictionary and in that method you

00:09:51,870 --> 00:09:56,010
need to serialize every kind of domain

00:09:54,300 --> 00:09:57,420
object which typically is a model

00:09:56,010 --> 00:09:59,370
instance or

00:09:57,420 --> 00:10:00,990
but in our case and other projects we

00:09:59,370 --> 00:10:02,699
have other domain objects floating

00:10:00,990 --> 00:10:04,560
around kind of data classes that kind of

00:10:02,699 --> 00:10:06,329
thing and the best way to do that is to

00:10:04,560 --> 00:10:07,560
use a serializer from the Django rest

00:10:06,329 --> 00:10:10,170
framework because that is what they're

00:10:07,560 --> 00:10:12,600
really good at doing taking objects and

00:10:10,170 --> 00:10:14,670
turn them in turning them into Python

00:10:12,600 --> 00:10:18,709
primitives that you can then civilize to

00:10:14,670 --> 00:10:21,120
Jason so let's quickly walk through

00:10:18,709 --> 00:10:22,949
example view so say you were writing a

00:10:21,120 --> 00:10:25,199
website for Django con like this and you

00:10:22,949 --> 00:10:27,209
want to have a page which lists all the

00:10:25,199 --> 00:10:29,459
talks so you've got a talk model you

00:10:27,209 --> 00:10:31,019
have a list view like this very

00:10:29,459 --> 00:10:32,940
conventional but in you'll get context

00:10:31,019 --> 00:10:33,899
data let's quickly walk through it for

00:10:32,940 --> 00:10:35,910
the first thing we're going to do is

00:10:33,899 --> 00:10:37,680
going to pop off the object list item

00:10:35,910 --> 00:10:39,089
which is the query set and we're popping

00:10:37,680 --> 00:10:41,819
it off to ensure we don't actually pass

00:10:39,089 --> 00:10:43,259
object list into the into the template

00:10:41,819 --> 00:10:44,910
and then we're going to pass that into

00:10:43,259 --> 00:10:46,170
some template so via

00:10:44,910 --> 00:10:49,019
Liza class which I show on the next

00:10:46,170 --> 00:10:50,430
slide and this is just standard Django

00:10:49,019 --> 00:10:52,350
rest framework so Eliza where we pass

00:10:50,430 --> 00:10:53,880
the query set as instance and same n

00:10:52,350 --> 00:10:55,290
equal to true in this case but if you

00:10:53,880 --> 00:10:57,720
had a detail view you wouldn't need to

00:10:55,290 --> 00:10:59,130
use the men equals true part and then we

00:10:57,720 --> 00:11:01,170
just write that data into the context to

00:10:59,130 --> 00:11:02,550
return it very straightforward and this

00:11:01,170 --> 00:11:04,170
is what a template serialized looks like

00:11:02,550 --> 00:11:06,329
this is just a standard Django rest

00:11:04,170 --> 00:11:07,740
framework civilizer you could have a

00:11:06,329 --> 00:11:10,259
model based one if you like and we're

00:11:07,740 --> 00:11:11,490
just kind of popping off attributes or

00:11:10,259 --> 00:11:13,470
just really attributes straight off the

00:11:11,490 --> 00:11:14,970
instance and that's been passed in or

00:11:13,470 --> 00:11:16,589
you can walk down into its related

00:11:14,970 --> 00:11:19,470
models and grab things off there you can

00:11:16,589 --> 00:11:21,240
call methods off the instance itself or

00:11:19,470 --> 00:11:23,399
call methods that you define on your

00:11:21,240 --> 00:11:25,920
server eliezer and then have a normal

00:11:23,399 --> 00:11:27,240
template where you're just you're now

00:11:25,920 --> 00:11:28,649
just dealing with kind of Python

00:11:27,240 --> 00:11:31,019
primitives you're not allowed there's no

00:11:28,649 --> 00:11:33,750
model no model methods there okay so

00:11:31,019 --> 00:11:35,509
that's that's the practice and now why

00:11:33,750 --> 00:11:37,649
would you do this kind of strange

00:11:35,509 --> 00:11:39,480
practice it's quite unconventional you

00:11:37,649 --> 00:11:40,949
know new Django developers joining your

00:11:39,480 --> 00:11:42,689
team will be confused by this practice

00:11:40,949 --> 00:11:44,339
that I've never seen before it's quite a

00:11:42,689 --> 00:11:46,110
boast you're writing quite a lot of code

00:11:44,339 --> 00:11:47,519
in your point of view class that you

00:11:46,110 --> 00:11:49,170
never had to use to before you know you

00:11:47,519 --> 00:11:51,389
can write few classes in Django they're

00:11:49,170 --> 00:11:54,480
incredibly concise it's more work

00:11:51,389 --> 00:11:57,180
upfront so the biggest reason is it in

00:11:54,480 --> 00:11:59,370
voids the temptation of the stage to a

00:11:57,180 --> 00:12:01,709
bundle application logic business logic

00:11:59,370 --> 00:12:03,540
on to your models I've seen this time

00:12:01,709 --> 00:12:04,740
and time and again over the five or six

00:12:03,540 --> 00:12:06,809
years I've been writing Django and

00:12:04,740 --> 00:12:09,000
annoys me quite a lot it's where you end

00:12:06,809 --> 00:12:10,439
up like Tom said where you've got a nice

00:12:09,000 --> 00:12:10,800
ListView but somehow you've ended up

00:12:10,439 --> 00:12:12,089
corn

00:12:10,800 --> 00:12:14,279
all these model methods that make kind

00:12:12,089 --> 00:12:15,899
of 15 SQL queries in a network call and

00:12:14,279 --> 00:12:17,910
somehow your and this is why your page

00:12:15,899 --> 00:12:20,339
is not taking 30 seconds to load you

00:12:17,910 --> 00:12:21,630
can't do that when you use this pattern

00:12:20,339 --> 00:12:24,060
because you're forced to explicitly do

00:12:21,630 --> 00:12:25,019
all your i/o upfront this has been

00:12:24,060 --> 00:12:26,670
annoying me so much that I wrote a

00:12:25,019 --> 00:12:30,470
snarky blog article called why your

00:12:26,670 --> 00:12:32,220
Django models are fat and so just to

00:12:30,470 --> 00:12:33,959
expand on that so we've got this

00:12:32,220 --> 00:12:35,519
explicit IO which is really useful

00:12:33,959 --> 00:12:37,079
because you'd precomputed on your

00:12:35,519 --> 00:12:39,329
template context it's a really nice hot

00:12:37,079 --> 00:12:41,579
point to cache those variables or maybe

00:12:39,329 --> 00:12:45,540
to compute some aggregate variables kind

00:12:41,579 --> 00:12:47,010
of kind of statistics that apply to the

00:12:45,540 --> 00:12:49,260
whole list of things you're passing in

00:12:47,010 --> 00:12:51,149
it's actually a really nice step towards

00:12:49,260 --> 00:12:52,740
converting your view into a kind of REST

00:12:51,149 --> 00:12:54,690
API that's certainly part of our

00:12:52,740 --> 00:12:57,000
strategy octopus is to slowly convert

00:12:54,690 --> 00:12:59,550
some of our existing django views into

00:12:57,000 --> 00:13:01,440
kind of rest api so graph QL api's have

00:12:59,550 --> 00:13:02,459
you already kind of got your serializer

00:13:01,440 --> 00:13:05,279
that does it for you so you know

00:13:02,459 --> 00:13:06,990
virtually there and so to take away from

00:13:05,279 --> 00:13:09,060
this Django rest framework server layers

00:13:06,990 --> 00:13:11,010
are super useful not just in the context

00:13:09,060 --> 00:13:13,140
of actually writing a Django sámi

00:13:11,010 --> 00:13:14,850
vanovech framework kind of view this

00:13:13,140 --> 00:13:16,860
pattern of serializing template contacts

00:13:14,850 --> 00:13:18,180
can be useful mainly if you're a large

00:13:16,860 --> 00:13:20,399
application to be going on for a long

00:13:18,180 --> 00:13:21,779
time and it's starting to outgrow Django

00:13:20,399 --> 00:13:22,829
and please have a look at other

00:13:21,779 --> 00:13:24,690
conventions because there's lots of

00:13:22,829 --> 00:13:32,370
other useful stuff there thank you thank

00:13:24,690 --> 00:13:39,500
you Andrew Andrew Andrew is our next

00:13:32,370 --> 00:13:39,500
speaker this one this one

00:13:47,420 --> 00:13:57,629
okay it's not working

00:13:51,110 --> 00:13:59,670
is it okay okay all right

00:13:57,629 --> 00:14:01,829
hello everyone I'm here to talk to you

00:13:59,670 --> 00:14:05,730
about asynchronous real time programming

00:14:01,829 --> 00:14:07,560
in space very importantly so in

00:14:05,730 --> 00:14:09,660
particular a very certain part of space

00:14:07,560 --> 00:14:11,399
this this is the lunar lander if you've

00:14:09,660 --> 00:14:13,740
not seen it it went to the moon quite a

00:14:11,399 --> 00:14:15,720
while ago now but the important part of

00:14:13,740 --> 00:14:17,850
it is because we are computer

00:14:15,720 --> 00:14:21,089
programmers this this is the Apollo

00:14:17,850 --> 00:14:22,769
guidance computer it has a whopping 4

00:14:21,089 --> 00:14:25,709
kilobytes of memory ooh

00:14:22,769 --> 00:14:27,600
it weighs 30 kilograms and the only

00:14:25,709 --> 00:14:29,250
interface is that tiny thing there on

00:14:27,600 --> 00:14:32,250
the side the dis key with all the

00:14:29,250 --> 00:14:33,569
display and key interface now there's a

00:14:32,250 --> 00:14:36,000
particular part of this computer called

00:14:33,569 --> 00:14:38,189
the pings which of course being NASA is

00:14:36,000 --> 00:14:40,769
a long acronym for the primary guidance

00:14:38,189 --> 00:14:43,290
navigation and control system crucially

00:14:40,769 --> 00:14:45,060
the Apollo Lander was actually partially

00:14:43,290 --> 00:14:47,279
computer-controlled it was there sort of

00:14:45,060 --> 00:14:50,129
an autopilot that took them down onto

00:14:47,279 --> 00:14:51,809
the moon surface and when it was running

00:14:50,129 --> 00:14:53,879
that approach program was like reading

00:14:51,809 --> 00:14:55,860
the surface Raider working out how fast

00:14:53,879 --> 00:14:58,649
it was going plotting the courses that

00:14:55,860 --> 00:15:01,170
took the tiny little processor in the

00:14:58,649 --> 00:15:03,240
Apollo guidance computer to about 85%

00:15:01,170 --> 00:15:04,110
load and so they're like well you know

00:15:03,240 --> 00:15:06,509
that's pretty good that's a good

00:15:04,110 --> 00:15:08,160
Headroom we have on that we're pretty

00:15:06,509 --> 00:15:10,050
happy with that as a safety margin and

00:15:08,160 --> 00:15:12,689
then at some point in the descent and

00:15:10,050 --> 00:15:14,850
the astronauts wanted to use a bit more

00:15:12,689 --> 00:15:17,490
they wanted to know well how high or how

00:15:14,850 --> 00:15:20,550
quickly we're approaching stay turned on

00:15:17,490 --> 00:15:24,209
command one six six eight delta h how

00:15:20,550 --> 00:15:27,120
high are we that adds 10% extra load so

00:15:24,209 --> 00:15:28,740
if you're keeping track 95% load still

00:15:27,120 --> 00:15:31,800
great processor is very happy

00:15:28,740 --> 00:15:34,199
everything's going real lovely this

00:15:31,800 --> 00:15:37,410
however is the problem this is the

00:15:34,199 --> 00:15:40,199
rendezvous radar for the lunar lander it

00:15:37,410 --> 00:15:42,000
points at the other bit of the mission

00:15:40,199 --> 00:15:44,579
that orbits the moon works at where it

00:15:42,000 --> 00:15:47,639
is and tries to keep track of it now in

00:15:44,579 --> 00:15:49,139
all the testing it was fine and then

00:15:47,639 --> 00:15:50,990
they went to production and things

00:15:49,139 --> 00:15:53,339
weren't fine

00:15:50,990 --> 00:15:55,589
specifically what they did in the real

00:15:53,339 --> 00:15:58,230
lunar lander is they hooked up that

00:15:55,589 --> 00:16:00,420
antenna to a different 800 megahertz

00:15:58,230 --> 00:16:02,310
source to the one the computer was using

00:16:00,420 --> 00:16:03,720
to run itself if you've ever done

00:16:02,310 --> 00:16:06,660
anything with frequency to know this is

00:16:03,720 --> 00:16:08,160
a very bad idea what happened was the

00:16:06,660 --> 00:16:10,649
radar went out of sync and started

00:16:08,160 --> 00:16:12,360
seeing the command module phase in and

00:16:10,649 --> 00:16:14,579
out of existence and get very confused

00:16:12,360 --> 00:16:16,320
and what this means is it kept

00:16:14,579 --> 00:16:18,089
interrupting CUDA going I've lost it

00:16:16,320 --> 00:16:21,360
I've got it I've lost it and just using

00:16:18,089 --> 00:16:24,149
up extra cycles in fact 13% of cycles

00:16:21,360 --> 00:16:25,740
now if you're not good at maths that is

00:16:24,149 --> 00:16:27,420
a hundred and eight percent of the CPU

00:16:25,740 --> 00:16:31,200
that's not good

00:16:27,420 --> 00:16:33,140
now crucially this would have before we

00:16:31,200 --> 00:16:35,310
had the idea of real time processing

00:16:33,140 --> 00:16:37,769
completely screwed the mission they were

00:16:35,310 --> 00:16:39,630
about to pull the abort and manually

00:16:37,769 --> 00:16:42,329
boost themselves back up off the moon

00:16:39,630 --> 00:16:44,820
fail the moon landing and Apollo 12

00:16:42,329 --> 00:16:46,680
would have been a historic one but the

00:16:44,820 --> 00:16:48,779
key thing that happened was some very

00:16:46,680 --> 00:16:50,550
very clever programmers got there first

00:16:48,779 --> 00:16:52,019
they invented stuff that had never been

00:16:50,550 --> 00:16:55,490
used before to save that bad moon

00:16:52,019 --> 00:16:58,399
landing so the disk II and the computer

00:16:55,490 --> 00:17:00,510
raise what's called alarm one - OH -

00:16:58,399 --> 00:17:02,579
what actually was happening by the scene

00:17:00,510 --> 00:17:04,919
series they'd written the very first

00:17:02,579 --> 00:17:07,740
real-time scheduler for this tiny little

00:17:04,919 --> 00:17:09,270
computer it had a series of programs the

00:17:07,740 --> 00:17:11,669
programs have priorities it's like a

00:17:09,270 --> 00:17:13,500
normal UNIX system it's weird and the

00:17:11,669 --> 00:17:15,120
ones with higher priorities ran first

00:17:13,500 --> 00:17:16,949
and so what happens is like the one at

00:17:15,120 --> 00:17:18,689
the bottom here is the bit that makes

00:17:16,949 --> 00:17:20,699
you land it's kind of important and the

00:17:18,689 --> 00:17:22,860
one at the top is where am I kind of

00:17:20,699 --> 00:17:24,750
important but less important and when

00:17:22,860 --> 00:17:27,120
you run out of CPU cycles it doesn't

00:17:24,750 --> 00:17:28,319
just stop it runs the ones that are

00:17:27,120 --> 00:17:31,020
important and the ones that aren't

00:17:28,319 --> 00:17:32,970
important don't get run and so servicer

00:17:31,020 --> 00:17:35,130
starts running and not finishing and

00:17:32,970 --> 00:17:38,220
overlapping itself and it uses up all

00:17:35,130 --> 00:17:39,720
four kilobytes of that memory and that's

00:17:38,220 --> 00:17:41,450
what the alarm is it's saying I've run

00:17:39,720 --> 00:17:43,470
out of memory I had to reboot myself

00:17:41,450 --> 00:17:45,360
thankfully the astronauts were sensible

00:17:43,470 --> 00:17:47,730
knew what this meant and they switched

00:17:45,360 --> 00:17:49,799
it to an easier version of autopilot so

00:17:47,730 --> 00:17:50,970
they use up less cycles the memory

00:17:49,799 --> 00:17:53,790
wasn't being overload and they were all

00:17:50,970 --> 00:17:56,720
fine but the key thing to know is this

00:17:53,790 --> 00:17:59,669
is the work of one person how thanks how

00:17:56,720 --> 00:18:01,590
years before Apollo 11 like the whole

00:17:59,669 --> 00:18:03,240
computer part 11 was an afterthought

00:18:01,590 --> 00:18:04,440
they were like well the computers

00:18:03,240 --> 00:18:06,870
probably important

00:18:04,440 --> 00:18:08,340
a navigation probably is but how will

00:18:06,870 --> 00:18:11,010
take care of it

00:18:08,340 --> 00:18:13,680
he invented the boxcar executive which

00:18:11,010 --> 00:18:14,910
is the literal current still

00:18:13,680 --> 00:18:16,860
state-of-the-art and real-time

00:18:14,910 --> 00:18:20,010
programming it does this priority

00:18:16,860 --> 00:18:21,360
scheduling he understands that he didn't

00:18:20,010 --> 00:18:23,280
read that this is the old one my mistake

00:18:21,360 --> 00:18:24,900
this one is bad this one has a fixed

00:18:23,280 --> 00:18:26,670
time allocation if they were running

00:18:24,900 --> 00:18:28,730
this the moon Lani would have failed he

00:18:26,670 --> 00:18:31,950
invented the new one the new executive

00:18:28,730 --> 00:18:34,350
he made that system up from scratch it

00:18:31,950 --> 00:18:36,660
is still that design that they use in in

00:18:34,350 --> 00:18:39,960
the 60s is still state-of-the-art for

00:18:36,660 --> 00:18:42,480
modern spacecraft today and so it's an

00:18:39,960 --> 00:18:44,240
amazing story of just predicting and

00:18:42,480 --> 00:18:47,460
doing great engineering from scratch

00:18:44,240 --> 00:18:48,330
working up a whole new idea and starting

00:18:47,460 --> 00:18:50,310
the whole beginning of real-time

00:18:48,330 --> 00:18:52,110
programming and if you want to know more

00:18:50,310 --> 00:18:53,850
tales from this and many other things

00:18:52,110 --> 00:18:55,590
that really did not go well on the moon

00:18:53,850 --> 00:18:57,390
missions there's a great website here

00:18:55,590 --> 00:18:58,150
where you can read about them thank you

00:18:57,390 --> 00:19:03,340
very much

00:18:58,150 --> 00:19:09,730
[Applause]

00:19:03,340 --> 00:19:13,030
thank you Andrew so our next speaker is

00:19:09,730 --> 00:19:15,820
Tom and yes our little story about

00:19:13,030 --> 00:19:18,280
Africa so Python in Africa started

00:19:15,820 --> 00:19:20,950
showing activity in 2010 and 2011 and

00:19:18,280 --> 00:19:25,080
this happened in South Africa Kenya in

00:19:20,950 --> 00:19:28,360
Cameroon and for the next four years

00:19:25,080 --> 00:19:30,790
PSF only got funding for PyCon South

00:19:28,360 --> 00:19:34,240
Africa so there was no other activity

00:19:30,790 --> 00:19:37,830
shown within that time so we are ready

00:19:34,240 --> 00:19:43,000
for next week alright can you hear me

00:19:37,830 --> 00:19:46,420
hello yes okay all right I built a thing

00:19:43,000 --> 00:19:48,730
called deer State Makena

00:19:46,420 --> 00:19:52,030
which is a yet another state machine for

00:19:48,730 --> 00:19:54,430
Django and I'm trying to solve race

00:19:52,030 --> 00:19:56,530
conditions in current model updates with

00:19:54,430 --> 00:19:59,320
that because everybody has the same

00:19:56,530 --> 00:20:00,640
problems in their models when doing just

00:19:59,320 --> 00:20:06,010
about anything in Django

00:20:00,640 --> 00:20:08,200
so again hi I'm Tom Bell hood and I work

00:20:06,010 --> 00:20:10,120
at like one of the schoolís companies

00:20:08,200 --> 00:20:14,350
that you might have seen down like on

00:20:10,120 --> 00:20:19,420
the road and we're hiring and so nobody

00:20:14,350 --> 00:20:21,220
likes race conditions and so rice

00:20:19,420 --> 00:20:23,530
conditions have all the time to

00:20:21,220 --> 00:20:26,710
everybody using Django maybe they don't

00:20:23,530 --> 00:20:29,590
know it but they're happen so if you run

00:20:26,710 --> 00:20:32,710
Django in multiple processes or if you

00:20:29,590 --> 00:20:35,320
run them on multiple servers or you have

00:20:32,710 --> 00:20:39,310
background tasks like celery or other

00:20:35,320 --> 00:20:42,820
tasks worker queues then you'll have

00:20:39,310 --> 00:20:45,100
race conditions in your code because the

00:20:42,820 --> 00:20:47,470
same code is going to be executed in

00:20:45,100 --> 00:20:49,120
multiple threads at the same time so

00:20:47,470 --> 00:20:52,540
whenever you aren't single threaded

00:20:49,120 --> 00:20:54,280
essentially so for you have an example

00:20:52,540 --> 00:20:57,130
we've got like this disc at this

00:20:54,280 --> 00:21:00,100
shirting a cat which has three states it

00:20:57,130 --> 00:21:01,840
might be alive dead or unknown and there

00:21:00,100 --> 00:21:05,920
are two straight transitions for that

00:21:01,840 --> 00:21:08,350
cat so we've got like survive or rip as

00:21:05,920 --> 00:21:10,960
state transitions and we check if the

00:21:08,350 --> 00:21:13,870
state is unknown before we go in the

00:21:10,960 --> 00:21:15,850
state because like going from alive

00:21:13,870 --> 00:21:17,140
like going from dead - alive wouldn't

00:21:15,850 --> 00:21:20,200
make any sense right

00:21:17,140 --> 00:21:23,470
so the problem with this code is that at

00:21:20,200 --> 00:21:25,299
the moment that we checked the state it

00:21:23,470 --> 00:21:29,380
could have changed in the database

00:21:25,299 --> 00:21:31,780
already so we got to make sure that this

00:21:29,380 --> 00:21:34,620
doesn't happen so what we could do is

00:21:31,780 --> 00:21:38,380
just to like wrap it in a transaction

00:21:34,620 --> 00:21:42,700
call a database lock and make sure that

00:21:38,380 --> 00:21:44,620
the state now is is the same in the

00:21:42,700 --> 00:21:47,650
database but the problem is that we

00:21:44,620 --> 00:21:50,799
still have a race condition here because

00:21:47,650 --> 00:21:53,830
like the self is cached like it's the

00:21:50,799 --> 00:21:57,520
local cache of what has been in the

00:21:53,830 --> 00:21:59,350
database before so we still have the

00:21:57,520 --> 00:22:01,870
same problem as before so we have to

00:21:59,350 --> 00:22:04,450
like after we acquire that lock we have

00:22:01,870 --> 00:22:07,419
to reread the model from the database to

00:22:04,450 --> 00:22:09,730
get where we want to be and now we're

00:22:07,419 --> 00:22:11,799
kind of safe but this isn't thread safe

00:22:09,730 --> 00:22:16,360
yet and it's like it's kind of a hassle

00:22:11,799 --> 00:22:19,750
to get this right and so I build the

00:22:16,360 --> 00:22:22,360
state machina and you can just import it

00:22:19,750 --> 00:22:24,220
and use it in your code so this is what

00:22:22,360 --> 00:22:26,620
it would look like this is the state

00:22:24,220 --> 00:22:29,380
machine for the catch and you would wrap

00:22:26,620 --> 00:22:31,690
all your states in like this state

00:22:29,380 --> 00:22:37,330
instance and your state transitions

00:22:31,690 --> 00:22:40,059
would be just methods on the on the

00:22:37,330 --> 00:22:43,990
state machine and you can create your

00:22:40,059 --> 00:22:45,700
state machine transitions using those

00:22:43,990 --> 00:22:49,330
transitions where you just like you go

00:22:45,700 --> 00:22:52,030
and say ok from unknown to alive this

00:22:49,330 --> 00:22:54,460
would be the survive transition right or

00:22:52,030 --> 00:22:58,419
from unknown to dead this would be the

00:22:54,460 --> 00:23:01,450
RIP transition and to use this in your

00:22:58,419 --> 00:23:03,130
model you can then instead of having all

00:23:01,450 --> 00:23:06,490
the code in your model you would just

00:23:03,130 --> 00:23:08,710
have the state machine with a new state

00:23:06,490 --> 00:23:13,059
machine field in your model and

00:23:08,710 --> 00:23:14,770
referenced the stage field that is the

00:23:13,059 --> 00:23:18,610
integer field as it used to be before

00:23:14,770 --> 00:23:20,740
and so for the usage you would just call

00:23:18,610 --> 00:23:23,110
those methods on the state machine and

00:23:20,740 --> 00:23:28,000
it would do all the stuff automatically

00:23:23,110 --> 00:23:31,300
for you it would check if it's in the

00:23:28,000 --> 00:23:34,780
right state to be able to transition and

00:23:31,300 --> 00:23:36,960
so what's different between what we had

00:23:34,780 --> 00:23:39,850
before and what we have now is like

00:23:36,960 --> 00:23:42,400
there's no safe call because if you do a

00:23:39,850 --> 00:23:44,560
state-transition you want to have it

00:23:42,400 --> 00:23:48,250
persisted in your database so you do or

00:23:44,560 --> 00:23:49,810
do not there is no try and what's also

00:23:48,250 --> 00:23:52,180
different is that there's no state

00:23:49,810 --> 00:23:56,470
checking so if you want to call that

00:23:52,180 --> 00:23:59,320
survive call you can be sure that you

00:23:56,470 --> 00:24:02,080
are in the state unknown for the catch

00:23:59,320 --> 00:24:05,200
and you don't have to make that check

00:24:02,080 --> 00:24:08,080
and check for yourself so in a nutshell

00:24:05,200 --> 00:24:11,220
what this thing provides for you is like

00:24:08,080 --> 00:24:13,690
you have a state machine in one place

00:24:11,220 --> 00:24:15,910
this is where you keep all your model

00:24:13,690 --> 00:24:19,270
transitions like the changes of your

00:24:15,910 --> 00:24:23,290
model you wouldn't cause save manually

00:24:19,270 --> 00:24:25,600
anymore and the state transitions also

00:24:23,290 --> 00:24:27,760
define how your model is changed so you

00:24:25,600 --> 00:24:30,160
know when a certain field has changed

00:24:27,760 --> 00:24:31,690
you know it is part of that state

00:24:30,160 --> 00:24:34,450
transition for example it's very

00:24:31,690 --> 00:24:37,060
practical for for debugging for example

00:24:34,450 --> 00:24:41,110
and of course we have no more race

00:24:37,060 --> 00:24:44,460
conditions so check out the code it's on

00:24:41,110 --> 00:24:49,420
Gipper github and in the pi PI

00:24:44,460 --> 00:24:51,450
repository and yeah so hope you'll enjoy

00:24:49,420 --> 00:24:51,450
that

00:24:53,950 --> 00:25:00,590
okay thank you Tom right so there has

00:24:58,580 --> 00:25:03,020
been a change of things a little bit so

00:25:00,590 --> 00:25:04,490
I was speech-to-text translators are not

00:25:03,020 --> 00:25:10,040
going to be with us for the rest of the

00:25:04,490 --> 00:25:13,790
night they have to catch a flight I know

00:25:10,040 --> 00:25:17,780
so there's a little bit of a twist also

00:25:13,790 --> 00:25:19,610
in our lightning talks before we

00:25:17,780 --> 00:25:23,390
continue with the next speaker we have a

00:25:19,610 --> 00:25:28,880
little surprise for you so we are about

00:25:23,390 --> 00:25:30,710
to welcome Michael he he is going to do

00:25:28,880 --> 00:25:32,570
a little performance for us and he has

00:25:30,710 --> 00:25:36,080
been with the school for a year now and

00:25:32,570 --> 00:25:40,090
he's amazing at what he does so he's

00:25:36,080 --> 00:25:40,090
about to show us how good he really is

00:25:46,619 --> 00:25:53,079
all right so around the party venue they

00:25:50,079 --> 00:25:55,449
are also food places that you can go to

00:25:53,079 --> 00:25:58,089
and have some food before the con before

00:25:55,449 --> 00:25:59,769
they party so you can go to a hotel and

00:25:58,089 --> 00:26:01,119
leave your laptop and stuff and still

00:25:59,769 --> 00:26:17,709
come back around the venue and have

00:26:01,119 --> 00:26:19,930
something to eat okay let's give the

00:26:17,709 --> 00:26:23,589
stage to Miko

00:26:19,930 --> 00:26:23,589
[Applause]

00:26:56,039 --> 00:26:58,100
you

00:27:09,830 --> 00:27:11,890
you

00:27:16,840 --> 00:27:18,900
you

00:27:45,740 --> 00:27:47,800
you

00:27:52,860 --> 00:27:54,920
you

00:28:03,549 --> 00:28:05,610
you

00:28:37,280 --> 00:28:41,260
you

00:28:39,200 --> 00:28:41,260
you

00:28:49,799 --> 00:28:51,860
you

00:28:56,530 --> 00:28:58,590
you

00:29:01,680 --> 00:29:03,740
you

00:29:26,140 --> 00:29:28,200
you

00:29:34,320 --> 00:29:36,380
you

00:30:00,990 --> 00:30:03,050
you

00:30:08,460 --> 00:30:10,520
you

00:30:11,399 --> 00:30:15,090
you

00:30:13,030 --> 00:30:15,090
you

00:30:27,080 --> 00:30:29,140
you

00:30:54,890 --> 00:30:57,979
[Music]

00:31:14,670 --> 00:31:23,420
I must say I love a

00:31:19,250 --> 00:31:23,420
Benjamin you have to come back here

00:31:24,500 --> 00:31:27,500
right

00:31:29,720 --> 00:31:41,340
so back to back on in Africa right so I

00:31:38,910 --> 00:31:43,350
said for the next four years since 2010

00:31:41,340 --> 00:31:46,260
only South Africa received funding so

00:31:43,350 --> 00:31:50,190
that's our first conference in Africa it

00:31:46,260 --> 00:31:54,390
was spiked on South Africa then in 2015

00:31:50,190 --> 00:32:01,010
back on Namibia was the next conference

00:31:54,390 --> 00:32:01,010
in Africa Danijela where are you

00:32:01,429 --> 00:32:06,710
he is the special person to Namibia

00:32:03,960 --> 00:32:10,400
because he helped bring PyCon to Namibia

00:32:06,710 --> 00:32:10,400
Thank You Daniella

00:32:15,070 --> 00:32:24,110
now you ready right in 2016 we saw more

00:32:20,630 --> 00:32:28,900
development in Africa and we saw back on

00:32:24,110 --> 00:32:31,900
Zimbabwe and back on Nigeria as well

00:32:28,900 --> 00:32:36,020
followed by that was spiked on Ghana and

00:32:31,900 --> 00:32:38,809
then Pike on Kenya and now the next one

00:32:36,020 --> 00:32:43,130
that we really are looking forward to is

00:32:38,809 --> 00:32:47,480
PyCon Africa in August so I will be

00:32:43,130 --> 00:32:52,330
there I don't know about you but that

00:32:47,480 --> 00:32:52,330
will definitely be there so are we ready

00:32:52,510 --> 00:33:00,590
no no no don't worry I have more stuff

00:32:55,370 --> 00:33:04,160
about Africa right so a few facts about

00:33:00,590 --> 00:33:10,960
these beautiful countries in just a few

00:33:04,160 --> 00:33:10,960
minutes yes

00:33:19,340 --> 00:33:25,650
okay awesome right

00:33:21,810 --> 00:33:27,690
sorry for the day yeah my name is harsh

00:33:25,650 --> 00:33:30,600
brim journey and I'm a full stack

00:33:27,690 --> 00:33:32,250
developer at ambient innovation and I'm

00:33:30,600 --> 00:33:35,870
here to talk about managing

00:33:32,250 --> 00:33:39,900
elasticsearch in Django like a pro so if

00:33:35,870 --> 00:33:41,490
you had a chance to use integrate search

00:33:39,900 --> 00:33:44,610
in your Django project using elastic

00:33:41,490 --> 00:33:47,070
search you may have come across this

00:33:44,610 --> 00:33:49,410
package Django haystack it's quite

00:33:47,070 --> 00:33:53,760
popular very easy to use tons of

00:33:49,410 --> 00:33:57,240
features well it it's it is it has a

00:33:53,760 --> 00:34:00,150
greater warrant for like quelling the

00:33:57,240 --> 00:34:01,770
elastic search and as a lot of different

00:34:00,150 --> 00:34:03,900
management data management features like

00:34:01,770 --> 00:34:08,580
updating the index really rebuilding the

00:34:03,900 --> 00:34:10,230
index and yeah so there's a there's a

00:34:08,580 --> 00:34:14,040
very good amount of data flow in that

00:34:10,230 --> 00:34:16,740
but it has a problem it is not quite

00:34:14,040 --> 00:34:21,030
updated to the latest version of elastic

00:34:16,740 --> 00:34:25,500
search to be to be honest it's like very

00:34:21,030 --> 00:34:28,260
bad and yeah so it supports like elastic

00:34:25,500 --> 00:34:32,190
search less than 2.0 and current version

00:34:28,260 --> 00:34:34,409
of elastic search is kind of 7.0 so we

00:34:32,190 --> 00:34:36,750
have to find an alternative well

00:34:34,409 --> 00:34:40,800
thankfully there is another package that

00:34:36,750 --> 00:34:43,110
does that this elastic search DSL well

00:34:40,800 --> 00:34:44,580
this this is this kind of a high level

00:34:43,110 --> 00:34:47,879
Python client which is provided by

00:34:44,580 --> 00:34:51,060
elastics themself which provides a nice

00:34:47,879 --> 00:34:52,950
beautiful ORM for us but we still have

00:34:51,060 --> 00:34:56,250
to kind of manage the data by ourselves

00:34:52,950 --> 00:34:57,350
let's take a look at it how how is the

00:34:56,250 --> 00:35:01,550
ORM for it

00:34:57,350 --> 00:35:04,140
well this is some some what looks like

00:35:01,550 --> 00:35:05,790
basic elastic search query elastic

00:35:04,140 --> 00:35:08,400
search you can in elastic search you

00:35:05,790 --> 00:35:10,740
have to kind of like send and receive

00:35:08,400 --> 00:35:14,490
requests using REST API so everything is

00:35:10,740 --> 00:35:17,760
why a JSON but elastic so DSL does this

00:35:14,490 --> 00:35:21,540
nice om for us so it's quite very easy

00:35:17,760 --> 00:35:23,970
to use and it has a like very similar to

00:35:21,540 --> 00:35:27,870
the wrought wary of elastic search

00:35:23,970 --> 00:35:29,010
format so it's pretty nice but we still

00:35:27,870 --> 00:35:31,140
have to figure out the problem for the

00:35:29,010 --> 00:35:32,660
rate of flow which has act provides us

00:35:31,140 --> 00:35:36,290
and it's quite

00:35:32,660 --> 00:35:39,220
and this thing lacks it so I decided to

00:35:36,290 --> 00:35:45,550
build a management system for myself

00:35:39,220 --> 00:35:48,800
well let's take a look at creating index

00:35:45,550 --> 00:35:52,310
this is this is kind of a very similar

00:35:48,800 --> 00:35:58,790
format to your Django rest framework

00:35:52,310 --> 00:36:01,100
serializer or in that we usually inherit

00:35:58,790 --> 00:36:02,660
from the different less different

00:36:01,100 --> 00:36:05,240
superclass that is provided from my

00:36:02,660 --> 00:36:07,940
elasticsearch DSL but in this case we

00:36:05,240 --> 00:36:10,190
inherit from a superclass that I created

00:36:07,940 --> 00:36:12,590
in the abstract in next we are not going

00:36:10,190 --> 00:36:16,190
to go deeper into that which kind of lot

00:36:12,590 --> 00:36:19,040
of logic so this is how it is done but

00:36:16,190 --> 00:36:21,530
we have a new feature here this is

00:36:19,040 --> 00:36:24,500
called get updated field well this one

00:36:21,530 --> 00:36:26,840
you have to provide a date/time field of

00:36:24,500 --> 00:36:28,910
your model and it will like indexed only

00:36:26,840 --> 00:36:33,530
the data that was like a bed in the last

00:36:28,910 --> 00:36:34,970
hour or two hours or whatever so this is

00:36:33,530 --> 00:36:40,610
kind of the management commanders that

00:36:34,970 --> 00:36:43,040
it provides you can index the document

00:36:40,610 --> 00:36:46,670
update the document specify which index

00:36:43,040 --> 00:36:50,060
you want to update or clear the index or

00:36:46,670 --> 00:36:52,190
the age factor in that which will use

00:36:50,060 --> 00:36:56,420
the updated field they revised it will

00:36:52,190 --> 00:36:58,010
and it will only update the posts that

00:36:56,420 --> 00:37:01,400
were created in the last one or two

00:36:58,010 --> 00:37:04,730
hours so and the whole implementation of

00:37:01,400 --> 00:37:07,400
this is I didn't have much time to

00:37:04,730 --> 00:37:10,100
create a open source package for it kind

00:37:07,400 --> 00:37:12,260
of a fork of fork of this which depends

00:37:10,100 --> 00:37:16,130
on elasticsearch DSL so I created an

00:37:12,260 --> 00:37:18,260
article for it you can search for it and

00:37:16,130 --> 00:37:19,430
it's quite popular one so you may be

00:37:18,260 --> 00:37:21,530
able to find the whole implementation

00:37:19,430 --> 00:37:23,940
there including the abstract index code

00:37:21,530 --> 00:37:32,430
and thank you

00:37:23,940 --> 00:37:37,780
[Applause]

00:37:32,430 --> 00:37:42,970
Thanks hush so a few facts about Africa

00:37:37,780 --> 00:37:46,000
I'll start with Ghana Ghana is a country

00:37:42,970 --> 00:37:51,250
in West Africa it shares borders with

00:37:46,000 --> 00:37:56,830
ivory coast Burkina Faso and Togo Ghana

00:37:51,250 --> 00:38:00,630
has over 28 million people and 70

00:37:56,830 --> 00:38:03,610
percent of the population are Christians

00:38:00,630 --> 00:38:09,820
then I gained independence on the 6th of

00:38:03,610 --> 00:38:20,040
March 1957 it has about 80 languages

00:38:09,820 --> 00:38:20,040
spoken Ghana has over 70 ethnic groups

00:38:20,070 --> 00:38:38,760
and we are almost there

00:38:25,830 --> 00:38:38,760
don't be I have more countries Nigeria

00:38:39,120 --> 00:38:48,190
Nigeria is in West Africa it has over

00:38:43,960 --> 00:38:50,260
200 million people I come from a 2.5

00:38:48,190 --> 00:38:52,560
million country so I don't know how 200

00:38:50,260 --> 00:38:56,430
million people can live in one country I

00:38:52,560 --> 00:38:56,430
can imagine the traffic

00:38:57,660 --> 00:39:07,470
Nigeria shares border with knee gel chat

00:39:02,310 --> 00:39:15,030
Cameroon Benin in the Atlantic Ocean

00:39:07,470 --> 00:39:17,980
it is 521 languages that's crazy

00:39:15,030 --> 00:39:24,310
none of them I extinct extinct by the

00:39:17,980 --> 00:39:34,140
way it has more than 50% of Muslim and

00:39:24,310 --> 00:39:34,140
it has over 250 ethnic groups away

00:39:35,100 --> 00:39:51,670
another country Zimbabwe my neighbor are

00:39:46,420 --> 00:40:01,060
you sure I have more countries on my

00:39:51,670 --> 00:40:04,780
list ok right Zimbabwe it's in southern

00:40:01,060 --> 00:40:08,320
Africa it has over sixteen point five

00:40:04,780 --> 00:40:10,750
million people one of the amazing

00:40:08,320 --> 00:40:14,200
tourist attraction places is a meze

00:40:10,750 --> 00:40:18,730
River and Victoria Falls you can see

00:40:14,200 --> 00:40:23,400
Zambezi River from Namibia as well the

00:40:18,730 --> 00:40:28,380
former President Robert Mugabe wrote

00:40:23,400 --> 00:40:31,620
from 1987 to 2017 when he resigned

00:40:28,380 --> 00:40:35,080
that's a long time

00:40:31,620 --> 00:40:38,800
English is the main language they have

00:40:35,080 --> 00:40:45,280
16 official languages and 70% of the

00:40:38,800 --> 00:40:50,380
people speak Shona we're just gonna do

00:40:45,280 --> 00:40:51,270
without the slides okay oh yes one more

00:40:50,380 --> 00:40:52,499
minute sorry

00:40:51,270 --> 00:41:02,880
[Laughter]

00:40:52,499 --> 00:41:02,880
I'm running out of Africa right Cameroon

00:41:03,119 --> 00:41:08,890
Cameroon is in Central Africa one of

00:41:07,180 --> 00:41:12,549
those countries that I want to visit as

00:41:08,890 --> 00:41:17,410
well because it's a bit special it has

00:41:12,549 --> 00:41:22,539
more than 25 million people the official

00:41:17,410 --> 00:41:25,239
languages are French and English so in

00:41:22,539 --> 00:41:28,140
the north the north part gained

00:41:25,239 --> 00:41:30,489
independence from France in 1960 and

00:41:28,140 --> 00:41:34,869
then the southern part of Cameroon

00:41:30,489 --> 00:41:39,249
gained independence from Britain in 1961

00:41:34,869 --> 00:41:41,259
I guess this country had a lot of

00:41:39,249 --> 00:41:46,059
interest because it was colonized by two

00:41:41,259 --> 00:41:48,089
different countries I mean are we there

00:41:46,059 --> 00:41:48,089
yet

00:41:54,119 --> 00:42:01,720
so Cameroon has Catholics Protestants

00:41:58,690 --> 00:42:05,349
and Muslims with Catholics being more

00:42:01,720 --> 00:42:10,499
than 40 percent as the mayority and they

00:42:05,349 --> 00:42:10,499
have approximately 250 languages as well

00:42:12,809 --> 00:42:21,970
and yeah all right go ahead

00:42:18,910 --> 00:42:23,950
cool hello everybody my name is Rafael

00:42:21,970 --> 00:42:26,259
Aguero I work for a nonprofit

00:42:23,950 --> 00:42:28,930
organization called learning quality and

00:42:26,259 --> 00:42:31,690
we build educational technology to

00:42:28,930 --> 00:42:34,119
empower learners and teachers and today

00:42:31,690 --> 00:42:36,309
I'm going to be talking about Django for

00:42:34,119 --> 00:42:38,549
social good specifically I'm going to be

00:42:36,309 --> 00:42:41,499
talking about our main product Calibri

00:42:38,549 --> 00:42:43,150
the word Calibri might sound familiar to

00:42:41,499 --> 00:42:45,249
some of you because it actually means

00:42:43,150 --> 00:42:47,259
hummingbird in a variety of different

00:42:45,249 --> 00:42:52,239
languages and the hummingbird is a

00:42:47,259 --> 00:42:54,970
symbol of strength hope and migration so

00:42:52,239 --> 00:42:57,130
here here we have a picture of Jonathan

00:42:54,970 --> 00:43:00,369
who lives in the mountains of Guatemala

00:42:57,130 --> 00:43:02,799
he's a smart and curious student but he

00:43:00,369 --> 00:43:05,740
has a problem he doesn't have access to

00:43:02,799 --> 00:43:09,340
resources for a high-quality education

00:43:05,740 --> 00:43:11,350
but Jonathan is not alone over one in

00:43:09,340 --> 00:43:16,600
three children lack access to a quality

00:43:11,350 --> 00:43:19,050
education so yeah like I was saying

00:43:16,600 --> 00:43:21,490
Jonathan is not alone in that and so

00:43:19,050 --> 00:43:23,890
there's a wealth of educational

00:43:21,490 --> 00:43:26,250
technology that is available online but

00:43:23,890 --> 00:43:29,080
over half of the world is still offline

00:43:26,250 --> 00:43:30,910
so that means that there's over 400

00:43:29,080 --> 00:43:35,220
million children who could benefit from

00:43:30,910 --> 00:43:35,220
technologies like calibri 'calibri

00:43:35,670 --> 00:43:40,600
doesn't fly alone though we have an

00:43:38,320 --> 00:43:42,910
ecosystem of products to go along with

00:43:40,600 --> 00:43:45,490
Calibri we have Calibri studio which is

00:43:42,910 --> 00:43:48,220
an online repository of educational

00:43:45,490 --> 00:43:50,680
resources we have Calibri toolkit which

00:43:48,220 --> 00:43:53,500
are is a resource for teachers and

00:43:50,680 --> 00:44:00,250
implementers to effectively use Calibri

00:43:53,500 --> 00:44:02,140
in the classroom and the best part about

00:44:00,250 --> 00:44:05,680
this is that it's free and open source

00:44:02,140 --> 00:44:08,260
and I'll put the link to the to the repo

00:44:05,680 --> 00:44:10,030
at the end of the slides and of course

00:44:08,260 --> 00:44:14,470
it uses Django and Django rest framework

00:44:10,030 --> 00:44:17,260
for the backend so we take openly

00:44:14,470 --> 00:44:19,930
licensed educational resources and we

00:44:17,260 --> 00:44:24,790
make them importable into Calibri so

00:44:19,930 --> 00:44:28,180
that learners can use and access them so

00:44:24,790 --> 00:44:31,030
our goal is to have a Calibri run on

00:44:28,180 --> 00:44:36,460
legacy hardware or low-cost devices like

00:44:31,030 --> 00:44:38,410
the Raspberry Pi so we have a various

00:44:36,460 --> 00:44:38,920
different methods to install it we have

00:44:38,410 --> 00:44:41,200
pecs

00:44:38,920 --> 00:44:43,119
we have pip install we have Debian

00:44:41,200 --> 00:44:46,380
installer we have Windows installer so

00:44:43,119 --> 00:44:48,850
we really want to make this software as

00:44:46,380 --> 00:44:52,180
easy to access as possible

00:44:48,850 --> 00:44:56,440
and another great part is that you don't

00:44:52,180 --> 00:44:58,810
need internet to run the software so you

00:44:56,440 --> 00:45:00,970
download it once over connection and

00:44:58,810 --> 00:45:02,770
then you can have it forever and so the

00:45:00,970 --> 00:45:04,780
software is designed to run without an

00:45:02,770 --> 00:45:06,820
inner can internet connection but when

00:45:04,780 --> 00:45:09,040
we do have a connection we do try to

00:45:06,820 --> 00:45:12,400
make use of that by downloading uses

00:45:09,040 --> 00:45:14,260
usage metrics so these are some of the

00:45:12,400 --> 00:45:17,020
common use cases that Calibri can be

00:45:14,260 --> 00:45:19,720
used in prisons in refugee camps or

00:45:17,020 --> 00:45:22,480
rural areas for example someone

00:45:19,720 --> 00:45:25,630
can take a Raspberry Pi and load Calibri

00:45:22,480 --> 00:45:29,109
and content on it and go let's say 200

00:45:25,630 --> 00:45:31,060
kilometers to a faraway village and they

00:45:29,109 --> 00:45:34,119
also bring client devices for the

00:45:31,060 --> 00:45:36,460
students to use and then they can access

00:45:34,119 --> 00:45:40,420
this this content these high quality

00:45:36,460 --> 00:45:43,090
content and so go ahead take your phones

00:45:40,420 --> 00:45:45,640
out take a picture or punch it in enter

00:45:43,090 --> 00:45:49,660
it into your browser but just some

00:45:45,640 --> 00:45:52,420
closing remarks so the reason we're able

00:45:49,660 --> 00:45:54,820
to build this software is because it's

00:45:52,420 --> 00:45:57,910
based already on open source software on

00:45:54,820 --> 00:46:00,099
Django so it's I think it's amazing that

00:45:57,910 --> 00:46:03,099
something that was designed to be a CMS

00:46:00,099 --> 00:46:08,890
can be repurposed to benefit society

00:46:03,099 --> 00:46:12,340
like this and so the next time you come

00:46:08,890 --> 00:46:14,109
up with an idea or a project so yeah the

00:46:12,340 --> 00:46:16,660
next time you come up with an idea or a

00:46:14,109 --> 00:46:18,700
project don't try to make the next big

00:46:16,660 --> 00:46:20,740
social media network I don't have to

00:46:18,700 --> 00:46:23,250
make another social media account I want

00:46:20,740 --> 00:46:26,380
to see pictures of your cats or dogs

00:46:23,250 --> 00:46:28,150
instead I want you to try to come up

00:46:26,380 --> 00:46:30,250
with something that will benefit the

00:46:28,150 --> 00:46:33,250
lives of people who need it most

00:46:30,250 --> 00:46:37,240
I like to think of programming as a

00:46:33,250 --> 00:46:39,780
superpower where you can build anything

00:46:37,240 --> 00:46:42,880
that you can imagine so

00:46:39,780 --> 00:46:44,770
so I say use this superpower so that you

00:46:42,880 --> 00:46:46,700
can be a super hero to someone like

00:46:44,770 --> 00:46:51,050
Jonathan thank you

00:46:46,700 --> 00:46:51,050
[Applause]

00:46:54,930 --> 00:47:00,970
thanks Raphael I would like to call upon

00:46:58,539 --> 00:47:02,980
cart oh sorry

00:47:00,970 --> 00:47:06,480
yeah Carlton to come and tell us a

00:47:02,980 --> 00:47:06,480
little bit more about this prince

00:47:22,859 --> 00:47:27,910
hello so come to the practical the

00:47:27,069 --> 00:47:30,430
sprints

00:47:27,910 --> 00:47:32,890
well the sprints the Sprint's are your

00:47:30,430 --> 00:47:38,380
toe angle and I skip one your chance to

00:47:32,890 --> 00:47:40,569
get involved okay the pony's hungry so

00:47:38,380 --> 00:47:44,339
first of all where are they they're at

00:47:40,569 --> 00:47:44,339
the culture who sat in Dubai

00:47:44,559 --> 00:47:48,730
that's there you can look that up on the

00:47:46,779 --> 00:47:52,000
website when you go to the website there

00:47:48,730 --> 00:47:54,160
were two addresses one is here and one

00:47:52,000 --> 00:47:55,809
it's the Sprint venue I found this out

00:47:54,160 --> 00:48:00,010
on Wednesday when I went to the sprint

00:47:55,809 --> 00:48:02,500
venue so he's a little is a Google map

00:48:00,010 --> 00:48:04,299
this one here is the sprint venue check

00:48:02,500 --> 00:48:06,400
when you put it into your map that it's

00:48:04,299 --> 00:48:10,569
next to that big light there and then go

00:48:06,400 --> 00:48:12,279
there don't come here right what are the

00:48:10,569 --> 00:48:14,319
Sprint's the Sprint's are an opportunity

00:48:12,279 --> 00:48:15,730
for us to get together they're an

00:48:14,319 --> 00:48:17,950
opportunity for us to talk about

00:48:15,730 --> 00:48:21,059
problems and they're an opportunity for

00:48:17,950 --> 00:48:24,520
us to solve them okay that's it

00:48:21,059 --> 00:48:27,490
you could write Docs you could fix bugs

00:48:24,520 --> 00:48:30,430
you could help triage tickets you could

00:48:27,490 --> 00:48:31,750
do that in Python or not you could work

00:48:30,430 --> 00:48:33,339
on something that wasn't software

00:48:31,750 --> 00:48:35,859
related at all like a community project

00:48:33,339 --> 00:48:39,069
of some kind right you could work on

00:48:35,859 --> 00:48:40,299
anything you don't have to know right

00:48:39,069 --> 00:48:41,380
there are some people who know what

00:48:40,299 --> 00:48:42,789
they're going to work at at this point

00:48:41,380 --> 00:48:43,839
at the sprints and they'll say at the

00:48:42,789 --> 00:48:45,670
beginning of the day I'm going to work

00:48:43,839 --> 00:48:47,410
on this anymore meant to help me if you

00:48:45,670 --> 00:48:49,359
don't know what you want to work on now

00:48:47,410 --> 00:48:52,779
let's find calm and we'll help you find

00:48:49,359 --> 00:48:54,640
something to work on okay I'm gonna be

00:48:52,779 --> 00:48:58,390
there all day and my main focus is gonna

00:48:54,640 --> 00:48:59,190
be on helping people so come you can do

00:48:58,390 --> 00:49:00,990
it

00:48:59,190 --> 00:49:03,270
okay if you've never contributed to

00:49:00,990 --> 00:49:05,190
Django before the Sprint's are the

00:49:03,270 --> 00:49:07,380
perfect opportunity to get involved so

00:49:05,190 --> 00:49:08,190
please come along please join in and

00:49:07,380 --> 00:49:12,650
let's do it

00:49:08,190 --> 00:49:12,650
let's speed the party Thanks

00:49:18,030 --> 00:49:24,540
right so we have come to the end of

00:49:20,320 --> 00:49:24,540
things come to the end of jungle corner

00:49:30,410 --> 00:49:32,470

YouTube URL: https://www.youtube.com/watch?v=YiPT1B3O3UE


