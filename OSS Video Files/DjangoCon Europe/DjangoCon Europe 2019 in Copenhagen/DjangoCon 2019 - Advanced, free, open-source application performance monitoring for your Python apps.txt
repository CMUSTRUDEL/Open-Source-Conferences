Title: DjangoCon 2019 - Advanced, free, open-source application performance monitoring for your Python apps
Publication date: 2019-04-23
Playlist: DjangoCon Europe 2019 in Copenhagen
Description: 
	https://2019.djangocon.eu/talks/advanced-free-open-source-application-performance-/

By Emanuil Tolev: https://twitter.com/emanuil_tolev
Captions: 
	00:00:01,620 --> 00:00:11,040
but hello hello welcome to my talk on

00:00:08,030 --> 00:00:14,070
application performance monitoring so

00:00:11,040 --> 00:00:17,840
today we'll do a little bit of a dive

00:00:14,070 --> 00:00:22,710
into kind of the history and context of

00:00:17,840 --> 00:00:26,400
APM and why we wanted white matters to

00:00:22,710 --> 00:00:29,640
us at least and why it maybe matters to

00:00:26,400 --> 00:00:32,940
other people and we're going to look at

00:00:29,640 --> 00:00:34,320
some alternatives for actually using APM

00:00:32,940 --> 00:00:40,410
and integrating it into your

00:00:34,320 --> 00:00:42,090
applications so my name is Emmanuel

00:00:40,410 --> 00:00:44,250
Emmanuel talev

00:00:42,090 --> 00:00:47,070
I'm a community engineer for elastic

00:00:44,250 --> 00:00:50,370
that the makers of elastic search cabana

00:00:47,070 --> 00:00:53,250
and so on monitoring to link that you

00:00:50,370 --> 00:00:58,230
have likely heard of and also the open

00:00:53,250 --> 00:01:01,980
source search engine the sorry I do work

00:00:58,230 --> 00:01:04,290
for a vendor so the elastic does make a

00:01:01,980 --> 00:01:07,650
whole APM solution as well as various

00:01:04,290 --> 00:01:10,530
monitoring solutions but I have tried to

00:01:07,650 --> 00:01:12,330
touch on other projects and other things

00:01:10,530 --> 00:01:15,450
and kind of the wider context of this

00:01:12,330 --> 00:01:19,170
but I will later show you some stuff in

00:01:15,450 --> 00:01:20,729
Cabana and an APM however rest assured

00:01:19,170 --> 00:01:23,250
all of it is completely free to use

00:01:20,729 --> 00:01:29,939
including in commercial contexts so I'm

00:01:23,250 --> 00:01:33,240
not here to sell you anything so let's

00:01:29,939 --> 00:01:35,759
get started with kind of what IPM is

00:01:33,240 --> 00:01:37,020
it's how many of you have an idea of

00:01:35,759 --> 00:01:41,579
what I'm talking about when I say

00:01:37,020 --> 00:01:44,700
application performance monitoring ok

00:01:41,579 --> 00:01:46,979
that's reasonable there's still some who

00:01:44,700 --> 00:01:52,829
don't but that's the point of these

00:01:46,979 --> 00:01:56,729
talks right so APM very quickly then APM

00:01:52,829 --> 00:02:00,180
at its core is search it's a solution to

00:01:56,729 --> 00:02:01,799
a cognitive problem when you want to

00:02:00,180 --> 00:02:03,600
know what your system is really doing

00:02:01,799 --> 00:02:05,610
specifically at the edge what your

00:02:03,600 --> 00:02:08,069
application is really doing so not

00:02:05,610 --> 00:02:10,050
simply monitoring percentage of CPU or

00:02:08,069 --> 00:02:13,020
the percentage of RAM or you know the

00:02:10,050 --> 00:02:15,570
disk i/o that's being used

00:02:13,020 --> 00:02:17,240
but really getting in there and looking

00:02:15,570 --> 00:02:19,350
perhaps at individual lines of code

00:02:17,240 --> 00:02:22,740
bottlenecks in your application what is

00:02:19,350 --> 00:02:24,240
slow what is breaking errors etc so

00:02:22,740 --> 00:02:27,810
that's application performance

00:02:24,240 --> 00:02:29,970
monitoring and so a short story about

00:02:27,810 --> 00:02:34,350
why it matters to me and kind of how I

00:02:29,970 --> 00:02:36,540
got interested in this whole area as of

00:02:34,350 --> 00:02:40,460
course like probably many of you I have

00:02:36,540 --> 00:02:44,160
also been on call for nearly five years

00:02:40,460 --> 00:02:46,170
that was the kind of pretty hardcore it

00:02:44,160 --> 00:02:49,290
was the beginning of my career actually

00:02:46,170 --> 00:02:51,690
in in computing so straight out of uni

00:02:49,290 --> 00:02:54,330
and I became a freelancer I joined this

00:02:51,690 --> 00:02:58,560
small hipster collective of freelancers

00:02:54,330 --> 00:03:01,470
this agency and soon enough I I was in

00:02:58,560 --> 00:03:04,980
charge somehow of determining the

00:03:01,470 --> 00:03:07,380
operation strategy for clients for a

00:03:04,980 --> 00:03:12,390
couple of smaller clients and later for

00:03:07,380 --> 00:03:16,050
some bigger ones and that's where kind

00:03:12,390 --> 00:03:18,600
of my initial enthusiasm started to grow

00:03:16,050 --> 00:03:23,160
out of bounds and to hit a snag right

00:03:18,600 --> 00:03:26,010
because what what happened was that we

00:03:23,160 --> 00:03:28,530
would build all these features and then

00:03:26,010 --> 00:03:31,440
in the middle of the night I would get

00:03:28,530 --> 00:03:34,940
the page and I would have to get up and

00:03:31,440 --> 00:03:38,130
fix a fixed website that had fallen down

00:03:34,940 --> 00:03:40,080
unfortunately I was a 24/7 contract and

00:03:38,130 --> 00:03:44,280
I was the only person on call for a few

00:03:40,080 --> 00:03:47,580
years on that project and then the but

00:03:44,280 --> 00:03:50,490
at some point you know you do this you

00:03:47,580 --> 00:03:52,830
know I was like what 22 23 so you do

00:03:50,490 --> 00:03:55,470
this and you don't really mind it you

00:03:52,830 --> 00:03:59,850
know it's it's for the project for the

00:03:55,470 --> 00:04:01,680
client but then a few years ago what

00:03:59,850 --> 00:04:03,480
happened was I I got woken up at 3:00

00:04:01,680 --> 00:04:06,570
and then again at 6:00 and then again at

00:04:03,480 --> 00:04:09,750
7:00 same day and then at 11 and then I

00:04:06,570 --> 00:04:13,590
spent next week trying to desperately

00:04:09,750 --> 00:04:16,109
make this website work and what was

00:04:13,590 --> 00:04:20,489
happening was we were getting accessed

00:04:16,109 --> 00:04:23,130
I think legitimately from China but it

00:04:20,489 --> 00:04:26,610
was just not a use case that we had

00:04:23,130 --> 00:04:29,550
predicted and it got really

00:04:26,610 --> 00:04:31,169
of hand and that's where I got kind of

00:04:29,550 --> 00:04:33,150
really interested in how do I prevent

00:04:31,169 --> 00:04:46,319
this from happening to me or other

00:04:33,150 --> 00:04:56,069
people ever again and is that okay okay

00:04:46,319 --> 00:05:02,430
here getting here was gonna hold as them

00:04:56,069 --> 00:05:04,199
and so yeah so that's where I kind of

00:05:02,430 --> 00:05:06,810
got really interested into how to solve

00:05:04,199 --> 00:05:08,699
this problem and so as far as I could

00:05:06,810 --> 00:05:11,430
tell I mean at least in my career the

00:05:08,699 --> 00:05:14,490
evolution was I went from looking at log

00:05:11,430 --> 00:05:18,090
files an H stop for like the first

00:05:14,490 --> 00:05:21,180
couple of years when I was sorting out

00:05:18,090 --> 00:05:26,219
small companies to then trying to

00:05:21,180 --> 00:05:31,800
collect today I'm trying to collect

00:05:26,219 --> 00:05:39,210
server information so federated data

00:05:31,800 --> 00:05:41,789
collection there we go and then finally

00:05:39,210 --> 00:05:43,259
APM so we moved past the servers we

00:05:41,789 --> 00:05:46,110
moved off the servers of the virtual

00:05:43,259 --> 00:05:48,150
machines and into the code itself which

00:05:46,110 --> 00:05:49,650
was kind of mind-blowing for me so this

00:05:48,150 --> 00:05:52,740
is a little slide from application

00:05:49,650 --> 00:05:55,379
performance comm and I came in towards

00:05:52,740 --> 00:05:56,849
the end of that so we're about there

00:05:55,379 --> 00:05:59,460
rods here when you start seeing the

00:05:56,849 --> 00:06:02,310
emergence of kind of more complex

00:05:59,460 --> 00:06:04,560
software service providers and we'll

00:06:02,310 --> 00:06:08,819
talk about what can they offer in a

00:06:04,560 --> 00:06:11,550
second but we're sort of now obviously

00:06:08,819 --> 00:06:17,069
past this stage so we're looking at what

00:06:11,550 --> 00:06:20,310
was the next step at the time when that

00:06:17,069 --> 00:06:23,639
went at the end of that slide towards

00:06:20,310 --> 00:06:25,439
the pond right competition was very

00:06:23,639 --> 00:06:27,180
difficult in the APM space it was very

00:06:25,439 --> 00:06:30,539
labor-intensive to build new solutions

00:06:27,180 --> 00:06:35,060
including open source ones there was

00:06:30,539 --> 00:06:37,529
extremely little and what happened was

00:06:35,060 --> 00:06:40,100
instead competitors went for a narrow

00:06:37,529 --> 00:06:43,190
focus and

00:06:40,100 --> 00:06:45,140
this is actually a Copenhagen company so

00:06:43,190 --> 00:06:48,290
this is a beat how many of you have

00:06:45,140 --> 00:06:49,640
heard of a beat Wow geez okay

00:06:48,290 --> 00:06:52,040
right I'm not gonna spend a lot of time

00:06:49,640 --> 00:06:55,220
here then so it specialize in Jas and

00:06:52,040 --> 00:07:00,200
Python including Django and later on

00:06:55,220 --> 00:07:02,480
it's in 2018 it 2017 2018 it got

00:07:00,200 --> 00:07:07,910
acquired by elastic the company I now

00:07:02,480 --> 00:07:10,700
work for an elastic APM kind of fits

00:07:07,910 --> 00:07:13,550
within the wider infrastructure of the

00:07:10,700 --> 00:07:16,580
elastic stack so Cubana the pink thing

00:07:13,550 --> 00:07:18,710
is used to visualize the data that you

00:07:16,580 --> 00:07:21,260
put into elastic search and everything

00:07:18,710 --> 00:07:24,560
else is used to put data into elastic

00:07:21,260 --> 00:07:28,160
search beaten so beats collect metrics

00:07:24,560 --> 00:07:31,490
so numbers with labels logstash puts

00:07:28,160 --> 00:07:33,610
logs in there so text an APM puts

00:07:31,490 --> 00:07:35,420
application level metrics like the

00:07:33,610 --> 00:07:40,550
particular lines of code and

00:07:35,420 --> 00:07:44,480
transactions that might be slow so let's

00:07:40,550 --> 00:07:46,390
see if the Wi-Fi works so the the

00:07:44,480 --> 00:07:49,490
landscape has evolved significantly

00:07:46,390 --> 00:07:51,470
since then yes excellent and this is an

00:07:49,490 --> 00:07:55,670
excellent website it's called open ATM

00:07:51,470 --> 00:07:58,280
dot IO and I love it it really showcases

00:07:55,670 --> 00:08:02,060
where like how crazy things have gotten

00:07:58,280 --> 00:08:04,280
so there's the elastic stuff so if you

00:08:02,060 --> 00:08:06,890
click that it doesn't really interpret

00:08:04,280 --> 00:08:09,080
to it much else so it's just the elastic

00:08:06,890 --> 00:08:12,920
stack and you can use graph ana also to

00:08:09,080 --> 00:08:17,600
visualize it and you can use certain

00:08:12,920 --> 00:08:19,730
things to do alerting on it but it's

00:08:17,600 --> 00:08:21,740
pretty much designed to work as a like

00:08:19,730 --> 00:08:24,020
as all the pieces together and people

00:08:21,740 --> 00:08:27,170
sometimes a elastic bits to it which

00:08:24,020 --> 00:08:29,690
allows you to get other metrics like you

00:08:27,170 --> 00:08:31,220
know your node metrics so how is how are

00:08:29,690 --> 00:08:33,260
your actual servers performing

00:08:31,220 --> 00:08:38,030
underneath your containers and your

00:08:33,260 --> 00:08:40,070
application code however talk about it

00:08:38,030 --> 00:08:42,410
later I want to talk a little bit about

00:08:40,070 --> 00:08:46,400
a few other solutions that you might use

00:08:42,410 --> 00:08:51,830
so another possible one is Prometheus

00:08:46,400 --> 00:08:53,960
and that's an open source metrics store

00:08:51,830 --> 00:08:56,660
and time series data base and

00:08:53,960 --> 00:09:00,800
to get around that it's very cool it's

00:08:56,660 --> 00:09:03,170
based on Google Boardman or it was based

00:09:00,800 --> 00:09:05,240
on a little Boardman now it's it's um a

00:09:03,170 --> 00:09:08,750
very mature project they released

00:09:05,240 --> 00:09:12,260
version 2 so what do you do it

00:09:08,750 --> 00:09:14,570
Prometheus is you have like with all of

00:09:12,260 --> 00:09:15,950
these things you have an exporter so you

00:09:14,570 --> 00:09:19,420
have an agent something that cooks

00:09:15,950 --> 00:09:21,860
deeply within your application and

00:09:19,420 --> 00:09:24,190
extracts all the useful information out

00:09:21,860 --> 00:09:27,470
there like what transactions are being

00:09:24,190 --> 00:09:29,930
processed then you have a collector so

00:09:27,470 --> 00:09:32,390
where are the agents that send all that

00:09:29,930 --> 00:09:34,880
information and that's the Prometheus

00:09:32,390 --> 00:09:37,520
server and then you have storage in this

00:09:34,880 --> 00:09:38,959
case uniquely it is also the Prometheus

00:09:37,520 --> 00:09:42,320
server as I mentioned it's a very

00:09:38,959 --> 00:09:45,770
capable time series database and to

00:09:42,320 --> 00:09:47,959
visualize it so yeah the Prometheus

00:09:45,770 --> 00:09:51,140
itself can do visualizations they're

00:09:47,959 --> 00:09:53,300
sort of individual and kind of basic so

00:09:51,140 --> 00:09:57,200
what people really tend to use with

00:09:53,300 --> 00:09:59,779
Prometheus is graph fauna and graph Anna

00:09:57,200 --> 00:10:01,820
is very good too it's very flexible it

00:09:59,779 --> 00:10:05,500
allows you to embed visualizations and

00:10:01,820 --> 00:10:08,300
it it actually plays well at

00:10:05,500 --> 00:10:11,959
elasticsearch as well and so this is

00:10:08,300 --> 00:10:13,250
typically what happens here so here you

00:10:11,959 --> 00:10:16,640
have again we're talking about

00:10:13,250 --> 00:10:18,170
monitoring your servers so the operating

00:10:16,640 --> 00:10:20,930
system level metrics Orchestrator

00:10:18,170 --> 00:10:30,230
metrics container metrics as well as

00:10:20,930 --> 00:10:32,750
your application metrics right so

00:10:30,230 --> 00:10:34,310
Prometheus so there's a water what sort

00:10:32,750 --> 00:10:36,770
of because the other I guess the the

00:10:34,310 --> 00:10:39,020
point of this is to I mean not really

00:10:36,770 --> 00:10:40,400
compare because I can't really do that

00:10:39,020 --> 00:10:43,339
since I worked for a company that makes

00:10:40,400 --> 00:10:45,380
this but to talk about the different

00:10:43,339 --> 00:10:47,390
possibilities here what you can do and

00:10:45,380 --> 00:10:50,000
maybe you walk away with an idea of what

00:10:47,390 --> 00:10:53,810
what you can use to enhance your current

00:10:50,000 --> 00:10:57,290
stack or when starting a new project so

00:10:53,810 --> 00:11:01,310
Prometheus is a great alternative you

00:10:57,290 --> 00:11:03,680
can so the main thing with it that that

00:11:01,310 --> 00:11:07,670
I like that really makes it stand out I

00:11:03,680 --> 00:11:10,430
guess is it's pull data collection model

00:11:07,670 --> 00:11:12,410
so with Prometheus you don't have you

00:11:10,430 --> 00:11:14,450
don't run like this risk of overloading

00:11:12,410 --> 00:11:18,350
your monitoring infrastructure because

00:11:14,450 --> 00:11:20,630
you can figure out the monitoring

00:11:18,350 --> 00:11:24,500
infrastructure how often it should pull

00:11:20,630 --> 00:11:26,150
and you configure you monitor that for

00:11:24,500 --> 00:11:27,710
when it's overloaded so there is very

00:11:26,150 --> 00:11:30,470
little chance that will fall over it's

00:11:27,710 --> 00:11:33,800
pretty stable it's got a very powerful

00:11:30,470 --> 00:11:35,690
query language and the it serve does all

00:11:33,800 --> 00:11:38,630
this stuff in a single tool so it

00:11:35,690 --> 00:11:40,580
collects metrics and does the VIS and

00:11:38,630 --> 00:11:48,880
supports the query it's all in

00:11:40,580 --> 00:11:48,880
Prometheus server which is pretty cool I

00:11:48,910 --> 00:11:53,660
have a video about this actually but I'm

00:11:51,860 --> 00:11:58,880
not gonna risk it because there's also

00:11:53,660 --> 00:12:01,310
time and and so on but I do have some

00:11:58,880 --> 00:12:03,200
extracts from there to show you like

00:12:01,310 --> 00:12:05,000
roughly what that looks like and here is

00:12:03,200 --> 00:12:09,980
where we get into a more interesting

00:12:05,000 --> 00:12:11,240
topic so this usually if you're

00:12:09,980 --> 00:12:13,370
interested in using it totally watch

00:12:11,240 --> 00:12:18,440
that video it's an incredibly clean like

00:12:13,370 --> 00:12:21,410
clear talk so this is how you generally

00:12:18,440 --> 00:12:23,630
use Prometheus you define that they have

00:12:21,410 --> 00:12:26,210
counters histograms gauges like various

00:12:23,630 --> 00:12:28,160
types of objects so in Python you would

00:12:26,210 --> 00:12:29,870
define what you want to monitor and this

00:12:28,160 --> 00:12:31,970
could be anything so this could be

00:12:29,870 --> 00:12:35,210
application level metrics which we'll

00:12:31,970 --> 00:12:37,610
see in a second or it could be business

00:12:35,210 --> 00:12:42,020
metrics so it could be how many sales

00:12:37,610 --> 00:12:44,210
are we making how you know how as well

00:12:42,020 --> 00:12:47,240
as how slow the website is it's like how

00:12:44,210 --> 00:12:50,630
happy are our users how many units of

00:12:47,240 --> 00:12:52,330
stock have we shifted how slow is the

00:12:50,630 --> 00:12:55,690
website specifically for our

00:12:52,330 --> 00:12:58,340
administrators and so on so it's very

00:12:55,690 --> 00:13:03,140
extremely flexible and powerful in what

00:12:58,340 --> 00:13:05,900
you can define current but the the other

00:13:03,140 --> 00:13:11,360
side of that coin is that you have to

00:13:05,900 --> 00:13:13,610
define that so here and what's happening

00:13:11,360 --> 00:13:15,230
here is we're using the definitions from

00:13:13,610 --> 00:13:17,600
the previous slides or using the

00:13:15,230 --> 00:13:19,250
counters the gauges etc to actually

00:13:17,600 --> 00:13:20,389
monitor something in our application

00:13:19,250 --> 00:13:25,399
with permit

00:13:20,389 --> 00:13:27,139
or well to send it to prometheus so over

00:13:25,399 --> 00:13:28,939
up there we can see the entire route

00:13:27,139 --> 00:13:32,329
essentially being monitored that's like

00:13:28,939 --> 00:13:33,709
at request time the time and here we see

00:13:32,329 --> 00:13:35,929
a particular piece of the code being

00:13:33,709 --> 00:13:38,959
monitored it's the context so with

00:13:35,929 --> 00:13:40,699
analyse time and so that stuff is going

00:13:38,959 --> 00:13:44,569
to record obviously how long that piece

00:13:40,699 --> 00:13:46,189
takes and send it to Prometheus the so

00:13:44,569 --> 00:13:47,509
that's pretty cool because at the same

00:13:46,189 --> 00:13:49,040
time you know we could enhance that

00:13:47,509 --> 00:13:51,889
information in any way we want

00:13:49,040 --> 00:13:53,959
we can't I like essentially how long a

00:13:51,889 --> 00:13:55,730
particular piece of code takes to how

00:13:53,959 --> 00:13:56,299
much money we're making so that's

00:13:55,730 --> 00:14:00,290
excellent

00:13:56,299 --> 00:14:06,829
right that's it's perfect the the thing

00:14:00,290 --> 00:14:10,009
about it is that it's metrics that you

00:14:06,829 --> 00:14:12,230
have to define explicitly and the other

00:14:10,009 --> 00:14:13,999
thing about it is it's only metrics so

00:14:12,230 --> 00:14:16,639
metrics in the sense of you have some

00:14:13,999 --> 00:14:19,309
number and you put some label to it it's

00:14:16,639 --> 00:14:20,660
only that so you don't get Logs with it

00:14:19,309 --> 00:14:22,639
you come to log monitoring and

00:14:20,660 --> 00:14:31,279
Prometheus and you can't correlate with

00:14:22,639 --> 00:14:34,160
log monitoring and so with with this you

00:14:31,279 --> 00:14:36,470
you will need to do quite a lot of work

00:14:34,160 --> 00:14:39,619
to achieve the same level of

00:14:36,470 --> 00:14:41,239
sophistication and ease of setup as you

00:14:39,619 --> 00:14:46,850
would get from a commercial software as

00:14:41,239 --> 00:14:49,779
a service provider so that's a bit of an

00:14:46,850 --> 00:14:51,529
issue and people have used this very

00:14:49,779 --> 00:14:53,389
successfully and there are even

00:14:51,529 --> 00:14:55,459
community projects that help you get

00:14:53,389 --> 00:14:57,919
over that initial step so for example

00:14:55,459 --> 00:15:00,889
there is a Prometheus Jango kind of

00:14:57,919 --> 00:15:02,779
module that you can use that does a

00:15:00,889 --> 00:15:04,759
bunch of this work for you it provides

00:15:02,779 --> 00:15:10,389
you with middleware and that instruments

00:15:04,759 --> 00:15:13,220
your app however it like support and

00:15:10,389 --> 00:15:15,049
well how often these are maintained and

00:15:13,220 --> 00:15:17,299
updated and how well they might fit your

00:15:15,049 --> 00:15:19,699
specific application so how much

00:15:17,299 --> 00:15:21,980
customization you'll have to do varies

00:15:19,699 --> 00:15:23,600
quite a lot because you know that that

00:15:21,980 --> 00:15:26,269
in particular is just a community

00:15:23,600 --> 00:15:29,079
project so whoever's got time you know

00:15:26,269 --> 00:15:31,279
it's got like two three hundred commits

00:15:29,079 --> 00:15:32,689
this is how you actually install it to

00:15:31,279 --> 00:15:33,480
give you a quick idea so you just got

00:15:32,689 --> 00:15:35,370
you put it

00:15:33,480 --> 00:15:39,600
Django Prometheus if you using that and

00:15:35,370 --> 00:15:41,490
installed in installed apps and you pop

00:15:39,600 --> 00:15:43,649
the middleware in there and this is

00:15:41,490 --> 00:15:46,949
gonna be very similar for what I'll show

00:15:43,649 --> 00:15:49,560
you later and of course end you also do

00:15:46,949 --> 00:15:52,050
it's URLs because it's a pool what

00:15:49,560 --> 00:15:54,240
happens is it exposes an endpoint called

00:15:52,050 --> 00:15:57,600
slash metrics so that that's what this

00:15:54,240 --> 00:15:59,190
does and from then on the the Prometheus

00:15:57,600 --> 00:16:01,709
server that you can figure separately

00:15:59,190 --> 00:16:03,510
can can pull from here so it's really

00:16:01,709 --> 00:16:05,790
easy really simple to install it's

00:16:03,510 --> 00:16:07,889
basically settings and URLs couple of

00:16:05,790 --> 00:16:12,089
lines and you're done

00:16:07,889 --> 00:16:16,199
and that's what the built-in dashboard

00:16:12,089 --> 00:16:19,620
looks like and this is what graph Anna

00:16:16,199 --> 00:16:21,060
looks like with it so it's pretty

00:16:19,620 --> 00:16:24,540
reasonable you know you got your

00:16:21,060 --> 00:16:26,190
responses response codes and kind of

00:16:24,540 --> 00:16:28,380
breakdown of requests and there are more

00:16:26,190 --> 00:16:32,370
there is more like there's the 95th

00:16:28,380 --> 00:16:33,930
percentile 99 percentile and so on and

00:16:32,370 --> 00:16:35,600
that you can do with this so that's

00:16:33,930 --> 00:16:38,220
pretty good

00:16:35,600 --> 00:16:42,420
again the only thing with it is that it

00:16:38,220 --> 00:16:44,459
doesn't do logging and you know you may

00:16:42,420 --> 00:16:49,319
need to do more customization with it I

00:16:44,459 --> 00:16:54,120
think at least so here we get on to

00:16:49,319 --> 00:16:59,040
elastic APN so so far what we have from

00:16:54,120 --> 00:17:00,800
that slide from this site is you have

00:16:59,040 --> 00:17:02,940
these software's or service providers

00:17:00,800 --> 00:17:04,980
down at the bottom right where you

00:17:02,940 --> 00:17:06,959
literally just install something if you

00:17:04,980 --> 00:17:08,280
put in an agent into your app and then

00:17:06,959 --> 00:17:10,140
it automatically sends all the

00:17:08,280 --> 00:17:11,850
information and you know everything is

00:17:10,140 --> 00:17:14,040
cool you go ahead login to the

00:17:11,850 --> 00:17:16,169
dashboards and you understand everything

00:17:14,040 --> 00:17:18,660
about your application or you know

00:17:16,169 --> 00:17:20,760
that's the idea at least then we have

00:17:18,660 --> 00:17:23,160
four medias which is very powerful very

00:17:20,760 --> 00:17:25,290
flexible but you might need to do some

00:17:23,160 --> 00:17:32,309
more setup to fit it to your specific

00:17:25,290 --> 00:17:34,740
app so that's where elastic 8 p.m. for

00:17:32,309 --> 00:17:36,120
me came in and actually that's one of

00:17:34,740 --> 00:17:37,650
the reasons I joined the company was

00:17:36,120 --> 00:17:39,809
because I was excited about this project

00:17:37,650 --> 00:17:43,190
because what happened is they bought up

00:17:39,809 --> 00:17:44,960
beat and then with rather a lot of flair

00:17:43,190 --> 00:17:47,119
they

00:17:44,960 --> 00:17:49,850
open-source almost all of the code of

00:17:47,119 --> 00:17:52,519
this commercial SAS provider that has

00:17:49,850 --> 00:17:54,980
been in development for five years what

00:17:52,519 --> 00:17:57,409
they didn't open source but it's still

00:17:54,980 --> 00:18:01,490
free to use is the user interface which

00:17:57,409 --> 00:18:03,710
you'll see shortly however they did

00:18:01,490 --> 00:18:05,960
nonetheless providing it for the first

00:18:03,710 --> 00:18:07,940
time I guess or at least for as far as

00:18:05,960 --> 00:18:10,220
I'm aware for the first time provide an

00:18:07,940 --> 00:18:11,929
entirely free solution that's like

00:18:10,220 --> 00:18:17,499
commercial-grade has been developed for

00:18:11,929 --> 00:18:21,200
several years and you can just use it so

00:18:17,499 --> 00:18:23,330
the advantages of this is that you have

00:18:21,200 --> 00:18:26,269
more consistent support and you also get

00:18:23,330 --> 00:18:28,610
the logs in the same place and I guess

00:18:26,269 --> 00:18:30,320
it's a pace of development when it comes

00:18:28,610 --> 00:18:32,869
to specific integrations is probably

00:18:30,320 --> 00:18:35,029
greater like you know it has dotnet and

00:18:32,869 --> 00:18:38,179
Ruby and lots of stuff that might

00:18:35,029 --> 00:18:40,549
otherwise fall behind a little bit or

00:18:38,179 --> 00:18:49,220
not not just not continued development

00:18:40,549 --> 00:18:54,590
to the same pace so as ever I would look

00:18:49,220 --> 00:18:56,990
at at some actual integrating so this is

00:18:54,590 --> 00:18:59,240
the app that we're instrumenting it's a

00:18:56,990 --> 00:19:01,279
relatively simple app it has products it

00:18:59,240 --> 00:19:03,740
has some orders and it has some

00:19:01,279 --> 00:19:06,519
customers we're gonna look at the

00:19:03,740 --> 00:19:06,519
products page

00:19:09,380 --> 00:19:19,299
ah don't you love it when you lose your

00:19:55,320 --> 00:20:00,450
how lovely what happens in your

00:20:24,080 --> 00:20:36,330
alright let's go it this so that's what

00:20:32,400 --> 00:20:37,710
a p.m. looks like and actually so this

00:20:36,330 --> 00:20:39,300
is because we're talking about a p.m.

00:20:37,710 --> 00:20:41,640
I'll start from here but then I'll show

00:20:39,300 --> 00:20:43,110
you what the rest of the whole thing

00:20:41,640 --> 00:20:45,330
looks like they kind of get an

00:20:43,110 --> 00:20:54,810
impression of what the entire monitoring

00:20:45,330 --> 00:20:56,580
solution actually is all right so this

00:20:54,810 --> 00:21:01,800
is not what I originally intended to

00:20:56,580 --> 00:21:04,110
show you but unfortunately I have put

00:21:01,800 --> 00:21:05,930
aside the link somewhere to the actual

00:21:04,110 --> 00:21:11,070
demo and I have closed the top with it

00:21:05,930 --> 00:21:13,200
so we're going to so what this is is you

00:21:11,070 --> 00:21:17,240
probably familiar with this similar

00:21:13,200 --> 00:21:19,890
screen - what SAS vendors will offer you

00:21:17,240 --> 00:21:21,960
you have your transaction you have the

00:21:19,890 --> 00:21:25,220
full details about your transaction like

00:21:21,960 --> 00:21:28,170
a particular request the response the

00:21:25,220 --> 00:21:31,590
know the operating system information as

00:21:28,170 --> 00:21:33,630
well as being able to add custom tags so

00:21:31,590 --> 00:21:36,060
here you can do stuff like customer tier

00:21:33,630 --> 00:21:38,730
this is a you know very high value

00:21:36,060 --> 00:21:40,020
customer or you end user you can have

00:21:38,730 --> 00:21:45,750
things like the specific email address

00:21:40,020 --> 00:21:49,140
or user ID for the user and then the

00:21:45,750 --> 00:21:52,140
interesting part of course is the actual

00:21:49,140 --> 00:21:54,090
tracing so here in this case this is an

00:21:52,140 --> 00:21:56,820
elastic search request so we can see the

00:21:54,090 --> 00:22:00,510
body of the search as well as the

00:21:56,820 --> 00:22:03,870
specific stack trace so we can see all

00:22:00,510 --> 00:22:06,870
the way through the libraries and I do

00:22:03,870 --> 00:22:11,340
have a django demo but this is a flask

00:22:06,870 --> 00:22:13,200
one you can see the entire stack down to

00:22:11,340 --> 00:22:17,010
the library is down to a green unicorn

00:22:13,200 --> 00:22:20,150
and you can see exactly you you know

00:22:17,010 --> 00:22:22,980
which part is taking how much it also

00:22:20,150 --> 00:22:25,080
supports celery so it supports a

00:22:22,980 --> 00:22:27,390
synchronous workers and they will just

00:22:25,080 --> 00:22:30,660
turn up as soon as you instrument it and

00:22:27,390 --> 00:22:32,640
it supports sequel as well so it will

00:22:30,660 --> 00:22:35,250
break out your sequel queries in

00:22:32,640 --> 00:22:38,780
same way that we have this elasticsearch

00:22:35,250 --> 00:22:42,840
bit here it will break out the sequel to

00:22:38,780 --> 00:22:52,350
fact let's have a quick look and let's

00:22:42,840 --> 00:22:54,000
see no my thumb but see if I can show

00:22:52,350 --> 00:22:56,130
you that oh yeah okay so that that one

00:22:54,000 --> 00:22:58,410
is a bit more interesting so you can see

00:22:56,130 --> 00:23:01,200
what's going on here and I assume a lot

00:22:58,410 --> 00:23:07,740
of you would have seen similar stuff in

00:23:01,200 --> 00:23:10,169
your applications so the thing that I

00:23:07,740 --> 00:23:13,700
like about this besides that that it's

00:23:10,169 --> 00:23:16,230
that it's free is that it combines

00:23:13,700 --> 00:23:21,870
performance monitoring with all the rest

00:23:16,230 --> 00:23:25,080
of the stack okay so we start from

00:23:21,870 --> 00:23:28,470
something like this so this is just your

00:23:25,080 --> 00:23:32,250
regular unstructured logging so that's

00:23:28,470 --> 00:23:34,679
basically file beef which is a log

00:23:32,250 --> 00:23:37,890
shipper application so that's sitting on

00:23:34,679 --> 00:23:39,570
every server or everywhere where it

00:23:37,890 --> 00:23:42,840
needs to sit and it's just dealing

00:23:39,570 --> 00:23:45,210
specific files it has a lot of defaults

00:23:42,840 --> 00:23:46,290
so it's pretty easy to configure like

00:23:45,210 --> 00:23:48,390
you don't have to do a lot of

00:23:46,290 --> 00:23:50,010
configuration to tell it get these files

00:23:48,390 --> 00:23:53,850
and these files and these files it tends

00:23:50,010 --> 00:23:58,110
to find Apache and nginx and all of your

00:23:53,850 --> 00:24:02,600
standard applications so this is

00:23:58,110 --> 00:24:04,770
searchable as well and that's

00:24:02,600 --> 00:24:10,140
elasticsearch that's pretty good at that

00:24:04,770 --> 00:24:13,980
so then from unstructured logging you we

00:24:10,140 --> 00:24:16,860
can go to a more structured logging or

00:24:13,980 --> 00:24:20,480
we could if it was the dam effect

00:24:16,860 --> 00:24:20,480
prepared originally at least

00:24:29,970 --> 00:24:35,960
so as you can see it's pretty easy to

00:24:33,080 --> 00:24:38,999
set up a visualization & gabbana

00:24:35,960 --> 00:24:38,999
[Music]

00:24:58,490 --> 00:25:06,100
listen like bless you

00:25:20,700 --> 00:25:25,420
I guess this is what happens when you

00:25:22,320 --> 00:25:28,609
lose your phantom Oh

00:25:25,420 --> 00:25:28,609
[Music]

00:25:48,490 --> 00:25:55,700
okay the thing is this definite so this

00:25:52,730 --> 00:25:58,639
is the official like the connect or

00:25:55,700 --> 00:26:01,700
Allah search demo that's like vana demo

00:25:58,639 --> 00:26:04,279
that's used by you know the entire

00:26:01,700 --> 00:26:05,870
company of over a thousand people so I

00:26:04,279 --> 00:26:07,870
think what's happened is that something

00:26:05,870 --> 00:26:10,460
has actually happened to it it's not

00:26:07,870 --> 00:26:14,059
just me at this is always full of data

00:26:10,460 --> 00:26:16,600
and it's process is about well it

00:26:14,059 --> 00:26:22,130
personal style thousands of requests per

00:26:16,600 --> 00:26:26,720
second so there is definitely a problem

00:26:22,130 --> 00:26:32,320
here but very possibly one that I will

00:26:26,720 --> 00:26:37,279
not be able to fix on my own on stage so

00:26:32,320 --> 00:26:39,610
whatever stretch that was Australia

00:26:37,279 --> 00:26:39,610
again

00:26:57,740 --> 00:27:03,620
so you generally simply select the file

00:27:01,309 --> 00:27:06,559
beat index and then you tell it what

00:27:03,620 --> 00:27:08,929
times what field it should use in order

00:27:06,559 --> 00:27:11,120
to kind of separate the records in the

00:27:08,929 --> 00:27:12,590
index and to be able to get structured

00:27:11,120 --> 00:27:17,980
logs out of the unstructured information

00:27:12,590 --> 00:27:24,309
and then ideally when it would discover

00:27:17,980 --> 00:27:24,309
I wait a second it could be simply be

00:27:29,289 --> 00:27:34,760
right okay yeah so this should

00:27:32,840 --> 00:27:37,010
definitely be full of data so something

00:27:34,760 --> 00:27:37,850
has gone wrong with our official demo so

00:27:37,010 --> 00:27:40,669
there we go

00:27:37,850 --> 00:27:44,659
why not on stage you know that's that's

00:27:40,669 --> 00:27:52,510
totally normal right okay so that's the

00:27:44,659 --> 00:27:56,860
structured logging view right Cheers

00:27:52,510 --> 00:28:02,960
thanks for the support and okay so the

00:27:56,860 --> 00:28:04,130
the probably oh yeah something has

00:28:02,960 --> 00:28:08,779
happened to her demo I just got a

00:28:04,130 --> 00:28:15,740
message excellent very very very timely

00:28:08,779 --> 00:28:18,590
right so never mind um so we're the cool

00:28:15,740 --> 00:28:19,520
thing about this is that it allows you

00:28:18,590 --> 00:28:23,020
to do a whole bunch of interesting

00:28:19,520 --> 00:28:29,210
things with this information so for

00:28:23,020 --> 00:28:32,779
example we can see what we are running

00:28:29,210 --> 00:28:35,690
so what the container name is and you

00:28:32,779 --> 00:28:43,760
see in a second what this little table

00:28:35,690 --> 00:28:45,860
button is doing okay so this very cool

00:28:43,760 --> 00:28:48,320
so I would have really liked to have

00:28:45,860 --> 00:28:50,390
this when I was just looking at logs and

00:28:48,320 --> 00:28:54,230
you know like trolling through log files

00:28:50,390 --> 00:28:56,360
what this does is it takes one field out

00:28:54,230 --> 00:29:00,049
of the entire record and then it shows

00:28:56,360 --> 00:29:01,669
you the same field in a summary view so

00:29:00,049 --> 00:29:04,640
as the records are collapsed you can

00:29:01,669 --> 00:29:07,429
kind of go through and see so you know

00:29:04,640 --> 00:29:09,320
this is the the first thing is the name

00:29:07,429 --> 00:29:10,130
of the container so this is the actual

00:29:09,320 --> 00:29:11,630
web application

00:29:10,130 --> 00:29:14,090
and you know this is an engine x

00:29:11,630 --> 00:29:17,390
instance and these here are different

00:29:14,090 --> 00:29:20,059
pots so in this in this case this is a

00:29:17,390 --> 00:29:23,630
kubernetes setup not what I was

00:29:20,059 --> 00:29:25,970
intending but so this is super cool

00:29:23,630 --> 00:29:29,000
because you know you can do things like

00:29:25,970 --> 00:29:30,650
log levels so you can easily scroll

00:29:29,000 --> 00:29:34,280
through and find all the warnings or

00:29:30,650 --> 00:29:36,679
errors you can filter this additionally

00:29:34,280 --> 00:29:39,470
you can sort by pulling out specific

00:29:36,679 --> 00:29:43,900
fields so purely as like a log

00:29:39,470 --> 00:29:48,830
navigation tool it's very powerful and

00:29:43,900 --> 00:29:52,190
yeah it's it's pretty cool so you get

00:29:48,830 --> 00:29:55,549
unstructured logging and in logs you get

00:29:52,190 --> 00:30:02,200
structured logging in here in discover

00:29:55,549 --> 00:30:02,200
and you get application metrics in APM

00:30:02,950 --> 00:30:07,789
you can do a lot of other things with

00:30:06,500 --> 00:30:13,070
this as well

00:30:07,789 --> 00:30:16,250
so in visualize and visualize you can

00:30:13,070 --> 00:30:20,000
define visualizations and there should

00:30:16,250 --> 00:30:22,580
be about 300 here so you can kind of

00:30:20,000 --> 00:30:25,100
build your own dashboards so here is the

00:30:22,580 --> 00:30:27,440
bit where you can combine business

00:30:25,100 --> 00:30:30,140
metrics with your application

00:30:27,440 --> 00:30:32,450
performance metrics so for example you

00:30:30,140 --> 00:30:37,909
know here is where you could plot like

00:30:32,450 --> 00:30:40,250
sales on one axis and 95th percentile

00:30:37,909 --> 00:30:43,419
performance you know under one second or

00:30:40,250 --> 00:30:46,159
however long it takes on the other axis

00:30:43,419 --> 00:30:50,059
so which is pretty important right

00:30:46,159 --> 00:30:52,039
because obviously that's how we relate

00:30:50,059 --> 00:30:55,330
what we do to the rest of the business

00:30:52,039 --> 00:30:55,330
that we are operating in

00:31:01,920 --> 00:31:14,320
so so far you've seen a last KPM you've

00:31:11,560 --> 00:31:16,510
seen the rest of cabana

00:31:14,320 --> 00:31:20,320
so you've seen logging I kind of

00:31:16,510 --> 00:31:23,140
combined with that and you've also seen

00:31:20,320 --> 00:31:28,870
prometheus and how to how to integrate

00:31:23,140 --> 00:31:31,710
that so for elastic APM the way you

00:31:28,870 --> 00:31:36,970
integrate it is pretty similar to

00:31:31,710 --> 00:31:42,340
Prometheus just of time I'm not going to

00:31:36,970 --> 00:31:44,680
try that demo just too much but what the

00:31:42,340 --> 00:31:47,710
it's basically extremely similar to

00:31:44,680 --> 00:31:50,890
Prometheus what you need to do is you

00:31:47,710 --> 00:31:53,770
run elastic search you run a cabana and

00:31:50,890 --> 00:31:55,690
you run the APM server which are pretty

00:31:53,770 --> 00:32:00,340
much all Prometheus in the case of

00:31:55,690 --> 00:32:02,170
Prometheus and ger fauna so you run

00:32:00,340 --> 00:32:04,270
elastic search you rank Epona and you're

00:32:02,170 --> 00:32:08,260
on the APM server and then you

00:32:04,270 --> 00:32:11,110
instrument your apps with the APM client

00:32:08,260 --> 00:32:14,320
or the APM agent which is simply pip

00:32:11,110 --> 00:32:18,310
install elastic APM and extremely

00:32:14,320 --> 00:32:21,490
similar to Prometheus you simply show

00:32:18,310 --> 00:32:25,180
them you simply shove it into installed

00:32:21,490 --> 00:32:28,540
apps and you install some middleware and

00:32:25,180 --> 00:32:33,730
that's about it the extra thing that

00:32:28,540 --> 00:32:35,230
this does is that I guess you can

00:32:33,730 --> 00:32:36,670
absolutely do it Prometheus you just

00:32:35,230 --> 00:32:39,160
need to pull in more components and

00:32:36,670 --> 00:32:41,500
configure them more the interesting the

00:32:39,160 --> 00:32:45,220
business is that it also allows you to

00:32:41,500 --> 00:32:48,550
in the same manner instrument are um so

00:32:45,220 --> 00:32:50,290
a real user monitoring so sort of this

00:32:48,550 --> 00:32:52,510
is what I showed you so far is on the

00:32:50,290 --> 00:32:55,300
server side but there is also monitoring

00:32:52,510 --> 00:32:57,220
you can do on the client side so when

00:32:55,300 --> 00:32:59,110
you so you kind of know when the

00:32:57,220 --> 00:33:00,880
JavaScript gets loaded and at what

00:32:59,110 --> 00:33:04,300
points because Laurie how long it took

00:33:00,880 --> 00:33:08,260
how long certain parts of the page took

00:33:04,300 --> 00:33:11,830
to reload and how long did they take for

00:33:08,260 --> 00:33:14,659
the user to get anywhere useful so this

00:33:11,830 --> 00:33:18,279
is included as it is in most

00:33:14,659 --> 00:33:20,570
software-as-a-service vendors so

00:33:18,279 --> 00:33:24,710
additionally the the kind of the other

00:33:20,570 --> 00:33:27,889
feature that's worth mentioning I would

00:33:24,710 --> 00:33:30,919
like to show you but there we go um is

00:33:27,889 --> 00:33:33,649
distributed tracing so if you have micro

00:33:30,919 --> 00:33:35,090
service architecture or you simply have

00:33:33,649 --> 00:33:36,799
an architecture that has enough

00:33:35,090 --> 00:33:41,889
components that they start calling each

00:33:36,799 --> 00:33:45,080
other in some manner APM supports this

00:33:41,889 --> 00:33:47,509
actually I wonder whether I still can

00:33:45,080 --> 00:33:54,529
show you a picture cuz it's you know

00:33:47,509 --> 00:34:02,720
it's worth a thousand words that's like

00:33:54,529 --> 00:34:04,989
a really basic mode here yes the

00:34:02,720 --> 00:34:09,379
different colors are different services

00:34:04,989 --> 00:34:14,240
so the the Pooh is a ruby service

00:34:09,379 --> 00:34:17,869
calling a Python servicing green which

00:34:14,240 --> 00:34:22,039
calls a Java service and purple which

00:34:17,869 --> 00:34:25,279
calls a ghost service in red and this is

00:34:22,039 --> 00:34:27,770
supported automatically so there's like

00:34:25,279 --> 00:34:32,089
there's a complicated bit of inference

00:34:27,770 --> 00:34:34,789
that the APM server does when you

00:34:32,089 --> 00:34:37,159
instrument all four apps with the ask

00:34:34,789 --> 00:34:39,889
APM agent and you just instruct them to

00:34:37,159 --> 00:34:42,230
send information to one server it will

00:34:39,889 --> 00:34:45,260
infer that they're connected together

00:34:42,230 --> 00:34:48,710
with that's a pretty cool piece I think

00:34:45,260 --> 00:34:52,220
and distributed tracing I should say is

00:34:48,710 --> 00:34:53,510
it's pretty standard and nowadays you

00:34:52,220 --> 00:34:56,599
would expect it from software as a

00:34:53,510 --> 00:35:00,049
service vendors but hey you know now you

00:34:56,599 --> 00:35:03,079
can get it for free now I do keep saying

00:35:00,049 --> 00:35:04,730
for free and it is but of course it's

00:35:03,079 --> 00:35:06,529
only for free in the sense that now you

00:35:04,730 --> 00:35:08,690
have to put in the effort to maintain it

00:35:06,529 --> 00:35:10,700
and it's like you know it's the old the

00:35:08,690 --> 00:35:12,460
old problem of who monitors the

00:35:10,700 --> 00:35:18,559
monitoring and who watches the Watchers

00:35:12,460 --> 00:35:20,480
so as as most like I guess most product

00:35:18,559 --> 00:35:23,319
companies if you're you know like a

00:35:20,480 --> 00:35:27,339
start-up or small to medium sized

00:35:23,319 --> 00:35:29,010
project you don't really want to deal

00:35:27,339 --> 00:35:31,980
necessarily with the configure

00:35:29,010 --> 00:35:35,040
hosting of this stuff so what you do is

00:35:31,980 --> 00:35:37,200
you go and get it somewhere and there

00:35:35,040 --> 00:35:39,420
are multiple providers elastic cells

00:35:37,200 --> 00:35:42,090
this but for Prometheus there are

00:35:39,420 --> 00:35:48,750
multiple cloud providers as well so you

00:35:42,090 --> 00:35:51,120
can totally do this I expect not sure

00:35:48,750 --> 00:35:53,190
but I expected the pricing of this will

00:35:51,120 --> 00:35:57,030
remain low because the actual underlying

00:35:53,190 --> 00:35:59,490
code is free to use and the majority of

00:35:57,030 --> 00:36:03,120
it is open source so that puts some

00:35:59,490 --> 00:36:07,560
pressure on my company know not to not

00:36:03,120 --> 00:36:10,200
rush up the prices too much whereas

00:36:07,560 --> 00:36:11,940
obviously in a proprietary environment

00:36:10,200 --> 00:36:14,850
that pressure doesn't exist you just get

00:36:11,940 --> 00:36:21,330
charged for the value right that you get

00:36:14,850 --> 00:36:26,970
out of it so yeah so I think it's a

00:36:21,330 --> 00:36:29,670
pretty cool project it's a pretty like

00:36:26,970 --> 00:36:31,710
advanced one and I do really like that

00:36:29,670 --> 00:36:35,160
they went out there and they published

00:36:31,710 --> 00:36:37,410
something that was kind of this sort of

00:36:35,160 --> 00:36:38,910
commercial great where it's just you

00:36:37,410 --> 00:36:44,760
install it and stuff just happens

00:36:38,910 --> 00:36:48,780
automatically and but the I I do still

00:36:44,760 --> 00:36:53,010
feel that there is a fair bit missing

00:36:48,780 --> 00:36:57,990
from this space and like you know we've

00:36:53,010 --> 00:37:00,000
been talking about logging monitoring

00:36:57,990 --> 00:37:02,550
and observability and this sort of

00:37:00,000 --> 00:37:06,240
logging and metrics in particular now

00:37:02,550 --> 00:37:09,090
for several years and in terms of

00:37:06,240 --> 00:37:11,850
actually in out of thought in this space

00:37:09,090 --> 00:37:15,240
I haven't seen it progress that much

00:37:11,850 --> 00:37:19,230
although there are some exciting new

00:37:15,240 --> 00:37:20,520
projects that may progress this so we'll

00:37:19,230 --> 00:37:24,780
see how that turns out

00:37:20,520 --> 00:37:26,850
but more importantly what I would like

00:37:24,780 --> 00:37:30,090
to see a bit more of is more

00:37:26,850 --> 00:37:33,450
collaboration between different open

00:37:30,090 --> 00:37:37,050
source projects so you know elastic

00:37:33,450 --> 00:37:39,450
imports Prometheus data and you can use

00:37:37,050 --> 00:37:43,020
graph on Oh at elasticsearch

00:37:39,450 --> 00:37:45,150
but ultimately I've seen the kinds of

00:37:43,020 --> 00:37:46,560
stacks people have in the wild and they

00:37:45,150 --> 00:37:48,840
they're you know they're pulled together

00:37:46,560 --> 00:37:51,330
from all sorts of components you have

00:37:48,840 --> 00:37:54,150
fluency and calf care for posting your

00:37:51,330 --> 00:37:57,869
messages like it's just all sorts of

00:37:54,150 --> 00:37:59,250
stuff and it's your open source is

00:37:57,869 --> 00:38:02,490
supposed to solve this right it's

00:37:59,250 --> 00:38:07,380
supposed to not be this pain-in-the-ass

00:38:02,490 --> 00:38:09,360
where if you want some component like a

00:38:07,380 --> 00:38:12,360
last KPM you now suddenly need to

00:38:09,360 --> 00:38:15,390
migrate to the whole elastic stack but

00:38:12,360 --> 00:38:17,130
you're currently using Prometheus so I

00:38:15,390 --> 00:38:20,640
would like to see more collaboration

00:38:17,130 --> 00:38:24,240
between these things and that can really

00:38:20,640 --> 00:38:26,670
only happen if there is pressure for it

00:38:24,240 --> 00:38:28,320
and if people actually collaborate on

00:38:26,670 --> 00:38:30,750
metrics if you care about metrics you

00:38:28,320 --> 00:38:33,420
care about monitoring and you know you

00:38:30,750 --> 00:38:34,890
maybe don't that maybe you just want

00:38:33,420 --> 00:38:37,650
something to use that's easy and

00:38:34,890 --> 00:38:43,020
relatively low cost who knows but if you

00:38:37,650 --> 00:38:45,630
do please write me and also please tell

00:38:43,020 --> 00:38:49,500
me what your setups are because like the

00:38:45,630 --> 00:38:51,540
more data there is on what the setups

00:38:49,500 --> 00:38:53,790
are and I do plan to republish this

00:38:51,540 --> 00:38:55,440
information when I get enough of it the

00:38:53,790 --> 00:38:58,440
more data there isn't what the setups

00:38:55,440 --> 00:39:00,630
are then the more obvious is going to be

00:38:58,440 --> 00:39:03,030
to potential you know open-source

00:39:00,630 --> 00:39:04,619
maintainer x' that there is demand for

00:39:03,030 --> 00:39:07,050
this thing and I think that there is

00:39:04,619 --> 00:39:08,940
demand for this because even in like in

00:39:07,050 --> 00:39:11,730
a small size project you may start at

00:39:08,940 --> 00:39:13,290
one stack but soon enough even a

00:39:11,730 --> 00:39:15,900
medium-sized project is a couple of

00:39:13,290 --> 00:39:18,920
years old you move to a jumble of

00:39:15,900 --> 00:39:21,510
different technologies and you know

00:39:18,920 --> 00:39:23,970
initiatives like open metrics which came

00:39:21,510 --> 00:39:27,240
out of prometheus kind of you know give

00:39:23,970 --> 00:39:29,220
you this base level of cooperation and

00:39:27,240 --> 00:39:32,609
there's also the elastic common schema

00:39:29,220 --> 00:39:35,430
which is also an open thing but it's

00:39:32,609 --> 00:39:36,750
this is not quite there yet I think we

00:39:35,430 --> 00:39:42,150
could do a lot more on open source

00:39:36,750 --> 00:39:46,400
collaboration and so so thank you very

00:39:42,150 --> 00:39:51,080
much for listening to me and I'll just

00:39:46,400 --> 00:39:51,080
take some questions if we have time

00:39:56,009 --> 00:40:02,170
we do have a little time for questions

00:39:58,599 --> 00:40:07,539
again you can we can ask questions on

00:40:02,170 --> 00:40:11,109
django con QA on twitter or you can do

00:40:07,539 --> 00:40:13,390
Jenko con on the IRC it is always

00:40:11,109 --> 00:40:15,670
awesome the last two talks are open

00:40:13,390 --> 00:40:19,749
source in the wild it's so cool

00:40:15,670 --> 00:40:21,549
so ask some cool questions about it go

00:40:19,749 --> 00:40:24,309
for it okay

00:40:21,549 --> 00:40:27,420
hey thank you for the nice talk and for

00:40:24,309 --> 00:40:32,349
your perseverance against adversity I

00:40:27,420 --> 00:40:34,479
was wondering if the APM server add an

00:40:32,349 --> 00:40:37,809
API that could be queried from the

00:40:34,479 --> 00:40:40,410
outside for example just random example

00:40:37,809 --> 00:40:44,890
of raspberry pi waste one of this green

00:40:40,410 --> 00:40:47,739
yellow and red light and if my server

00:40:44,890 --> 00:40:50,799
load for example goes over five the

00:40:47,739 --> 00:40:53,559
light on my desk turns orange because

00:40:50,799 --> 00:40:56,319
it's getting information from that APM

00:40:53,559 --> 00:40:57,609
server yeah totally yeah so that that's

00:40:56,319 --> 00:41:00,460
exactly how it works

00:40:57,609 --> 00:41:03,519
I mean what you saw there Cubana is

00:41:00,460 --> 00:41:06,069
reading of an IPA of an API like there's

00:41:03,519 --> 00:41:08,979
the APM servers entirely open source and

00:41:06,069 --> 00:41:12,119
an entirely separate component so yeah

00:41:08,979 --> 00:41:15,130
you can totally do that thank you

00:41:12,119 --> 00:41:18,999
the the Internet may defy your demos but

00:41:15,130 --> 00:41:20,710
the Internet has questions as well can

00:41:18,999 --> 00:41:23,469
you compare the resource requirements

00:41:20,710 --> 00:41:25,829
for APM and the elkay stack behind it to

00:41:23,469 --> 00:41:28,479
other options like Prometheus and sentry

00:41:25,829 --> 00:41:30,940
LK has has somewhat of a reputation of

00:41:28,479 --> 00:41:32,920
being resource-hungry does that yeah how

00:41:30,940 --> 00:41:35,140
much how big a setup do you need to have

00:41:32,920 --> 00:41:38,739
to be at a log a a small or medium sized

00:41:35,140 --> 00:41:43,299
so yeah sure yeah so that's true

00:41:38,739 --> 00:41:45,999
the for APM is a kind of very different

00:41:43,299 --> 00:41:48,819
project from the core elasticsearch I

00:41:45,999 --> 00:41:50,289
probably not gonna really go into saying

00:41:48,819 --> 00:41:51,969
well this is faster than the other

00:41:50,289 --> 00:41:54,489
because I do work for one of the

00:41:51,969 --> 00:41:56,829
companies and I you know I mean I'm a

00:41:54,489 --> 00:41:59,049
web developer but like I don't want to

00:41:56,829 --> 00:42:01,630
do the service it's faster it also

00:41:59,049 --> 00:42:03,099
depends on the situation right and like

00:42:01,630 --> 00:42:06,640
what load you put it in and what

00:42:03,099 --> 00:42:08,739
the particulars are however the APM team

00:42:06,640 --> 00:42:10,239
takes the benchmarking pretty seriously

00:42:08,739 --> 00:42:12,849
I mean that's one of the good things

00:42:10,239 --> 00:42:15,249
about it being an open source component

00:42:12,849 --> 00:42:17,289
that has the backing of a commercial

00:42:15,249 --> 00:42:20,109
company right because they can spend

00:42:17,289 --> 00:42:24,009
weeks benchmarking in very specific

00:42:20,109 --> 00:42:26,410
situations and they do so as far as I

00:42:24,009 --> 00:42:29,019
know they're I know they're very proud

00:42:26,410 --> 00:42:32,670
of like how small the percentage

00:42:29,019 --> 00:42:36,729
overhead is so as far as I'm aware it's

00:42:32,670 --> 00:42:38,920
it's in a good class of percentage

00:42:36,729 --> 00:42:40,989
overhead so it should be pretty fast and

00:42:38,920 --> 00:42:43,829
it's it's very different from the

00:42:40,989 --> 00:42:47,339
elasticsearch piece of software which

00:42:43,829 --> 00:42:50,829
you can like if you're a small project

00:42:47,339 --> 00:42:54,430
what I would probably do personally

00:42:50,829 --> 00:42:55,989
right and this involves giving money to

00:42:54,430 --> 00:43:00,190
elastics so take a grain of salt

00:42:55,989 --> 00:43:03,009
obviously but I I probably go and just

00:43:00,190 --> 00:43:05,190
go on elastic cloud and they're like

00:43:03,009 --> 00:43:08,440
cheapest year that we offer and that

00:43:05,190 --> 00:43:10,089
offers a p.m. and so fully set up so you

00:43:08,440 --> 00:43:12,039
just send it stuff you're just

00:43:10,089 --> 00:43:14,459
instrument consent so that's what I did

00:43:12,039 --> 00:43:14,459

YouTube URL: https://www.youtube.com/watch?v=optor4DsgvY


