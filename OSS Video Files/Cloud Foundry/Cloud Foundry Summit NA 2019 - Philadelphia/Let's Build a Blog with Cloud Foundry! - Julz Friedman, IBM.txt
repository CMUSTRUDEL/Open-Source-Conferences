Title: Let's Build a Blog with Cloud Foundry! - Julz Friedman, IBM
Publication date: 2019-04-11
Playlist: Cloud Foundry Summit NA 2019 - Philadelphia
Description: 
	Let's Build a Blog with Cloud Foundry! - Julz Friedman, IBM

This talk is a live coded, worked, real example of how easy it is to use Cloud Foundry to build an application. There are no slides, just a terminal, Cloud Foundry and some jokes in an English accent. 

We'll go hands-on from starting your app, pushing it to the platform, testing it locally, scaling it, binding services, viewing logs, debugging issues, using route services and then using container networking to break down the app in to micro-services as it becomes more complex.

About Julz Friedman
Julian Friedman (julz) is an IBMer and the project lead for Cloud Foundy's low-level container engine ("Garden") and Eirini (the project to allow Kubernetes to be used as the container scheduler in CF). He has previously worked on various Cloud Foundry projects, performance optimization of Jeopardy-playing AIs, large scale and small scale Cloud projects, emerging technologies consulting and various other things. He has a doctorate in Large Scale Complex IT Systems (with a focus on data-parallel systems and Map/Reduce) which he is pretty sure is a long way of saying “Clouds”. If you have several free hours and enjoy the sound of a rant delivered in a British accent, ask whether he thinks pushing a database to a cloud platform is a good idea.

https://www.youtube.com/watch?v=k2Mk9-54Bs0&list=PLhuMOCWn4P9h-9tcBVRFCaQ7rmdof66pe&index=6
Captions: 
	00:00:00,030 --> 00:00:06,060
cool so thank you for coming to let's

00:00:02,879 --> 00:00:09,240
build a blog with Cloud Foundry let's go

00:00:06,060 --> 00:00:12,330
to block with cloud foundry this is a

00:00:09,240 --> 00:00:13,950
talk but what like what am I trying to

00:00:12,330 --> 00:00:17,369
achieve for this talk what I want to do

00:00:13,950 --> 00:00:20,850
is try and try explain what I think is

00:00:17,369 --> 00:00:23,100
the Zen of CF right like CF largely gets

00:00:20,850 --> 00:00:26,460
out of your way and I want to show you

00:00:23,100 --> 00:00:28,439
how you use CF well rates a very easy

00:00:26,460 --> 00:00:30,929
thing we're just gonna build a blog but

00:00:28,439 --> 00:00:32,669
I hope we'll talk a little bit about how

00:00:30,929 --> 00:00:33,630
you use Cloud Foundry to build a blog

00:00:32,669 --> 00:00:36,380
and how it's different from how you

00:00:33,630 --> 00:00:40,410
might use other systems to build a blog

00:00:36,380 --> 00:00:42,690
this is an opinionated talk I am going

00:00:40,410 --> 00:00:47,520
to say some opinions other opinions are

00:00:42,690 --> 00:00:54,660
available though not from me this is how

00:00:47,520 --> 00:00:56,550
I think about stuff I hope right and

00:00:54,660 --> 00:00:58,760
this is how I think about stuff today I

00:00:56,550 --> 00:01:01,230
may change my mind I'm open to other

00:00:58,760 --> 00:01:02,969
opinions about how we should build

00:01:01,230 --> 00:01:06,869
software but maybe some of these ideas

00:01:02,969 --> 00:01:11,010
will be useful so I think the cool thing

00:01:06,869 --> 00:01:13,110
about CF is the abstraction is code why

00:01:11,010 --> 00:01:15,689
is that because actually we use

00:01:13,110 --> 00:01:18,540
computers to solve hard problems right

00:01:15,689 --> 00:01:20,610
we are actually doing stuff as hard

00:01:18,540 --> 00:01:22,830
sometimes we forget that we forget that

00:01:20,610 --> 00:01:25,409
we use computers to do hard things in

00:01:22,830 --> 00:01:27,659
the last like three decades if you think

00:01:25,409 --> 00:01:30,240
about it we've gone from you know biases

00:01:27,659 --> 00:01:32,070
to people on the moon to driverless cars

00:01:30,240 --> 00:01:37,110
and then off to the right of that is

00:01:32,070 --> 00:01:38,430
like you know fortnight and iOS apps

00:01:37,110 --> 00:01:40,229
that let you order ice cream to your

00:01:38,430 --> 00:01:47,729
door which is a thing my girlfriend does

00:01:40,229 --> 00:01:49,110
which how did we do this right I think

00:01:47,729 --> 00:01:51,299
there's two things right there's two

00:01:49,110 --> 00:01:53,130
things that have ever worked that have

00:01:51,299 --> 00:01:56,299
letters with the same size of chimp

00:01:53,130 --> 00:02:00,570
brain go from biases to men on the moon

00:01:56,299 --> 00:02:02,579
to really annoying computer games the

00:02:00,570 --> 00:02:05,460
people should stop playing those are

00:02:02,579 --> 00:02:07,829
removing accidental complexity right so

00:02:05,460 --> 00:02:09,060
that is the this is these are literally

00:02:07,829 --> 00:02:13,140
we've known this since the mythical

00:02:09,060 --> 00:02:14,109
man-month right like Brooks like 1983 or

00:02:13,140 --> 00:02:18,159
something

00:02:14,109 --> 00:02:19,689
remove accidents complexity as in the

00:02:18,159 --> 00:02:21,879
less you can focus on the problems

00:02:19,689 --> 00:02:23,709
you've caused for yourselves the more

00:02:21,879 --> 00:02:24,760
you can focus on the essential

00:02:23,709 --> 00:02:27,400
complexity of the problem you're trying

00:02:24,760 --> 00:02:29,049
to solve and use good at fractions right

00:02:27,400 --> 00:02:32,680
the reason we can build a driverless car

00:02:29,049 --> 00:02:34,420
is we don't do it in in assembly

00:02:32,680 --> 00:02:37,900
language and see we have higher and

00:02:34,420 --> 00:02:39,189
higher level abstractions that's

00:02:37,900 --> 00:02:41,079
actually less complexity that's little

00:02:39,189 --> 00:02:42,400
mo define so let's talk about

00:02:41,079 --> 00:02:44,829
extractions for a second I just want to

00:02:42,400 --> 00:02:46,269
give an analogy see I'm gonna we're

00:02:44,829 --> 00:02:49,569
gonna play a game the game is called

00:02:46,269 --> 00:02:52,269
operating system or web app right I say

00:02:49,569 --> 00:02:53,799
a language and you say whether you

00:02:52,269 --> 00:02:59,409
should use it to build an operating

00:02:53,799 --> 00:03:04,709
system or a web app see let's see if you

00:02:59,409 --> 00:03:08,169
are right well done okay

00:03:04,709 --> 00:03:13,900
let's let's play another Ruby operating

00:03:08,169 --> 00:03:15,909
system or web app yes if anybody is

00:03:13,900 --> 00:03:19,900
building an operating system with Ruby

00:03:15,909 --> 00:03:25,479
come and talk to me afterwards I think I

00:03:19,900 --> 00:03:26,739
can help you I think so the point is the

00:03:25,479 --> 00:03:28,299
different languages have different sweet

00:03:26,739 --> 00:03:30,729
spots it doesn't make see better and

00:03:28,299 --> 00:03:33,220
Ruby better it makes C better at a

00:03:30,729 --> 00:03:34,930
certain thing and Ruby better at a

00:03:33,220 --> 00:03:36,970
certain thing right different tools are

00:03:34,930 --> 00:03:39,010
suited for different jobs and that

00:03:36,970 --> 00:03:41,650
brings me to cloud foundry cloud foundry

00:03:39,010 --> 00:03:44,229
is a high-level approach that doesn't

00:03:41,650 --> 00:03:46,359
try and solve all problems but tries to

00:03:44,229 --> 00:03:48,430
solve some problems well it's a high

00:03:46,359 --> 00:03:52,239
level abstraction to try and make you

00:03:48,430 --> 00:03:54,549
faster and that's a fraction is code not

00:03:52,239 --> 00:03:58,989
containers or orchestration or pipelines

00:03:54,549 --> 00:04:01,629
or stateful stuff code that's what I

00:03:58,989 --> 00:04:03,340
want to try and show you plus services

00:04:01,629 --> 00:04:05,709
right because you do need some states

00:04:03,340 --> 00:04:08,620
the trick with States is to make it

00:04:05,709 --> 00:04:11,620
someone else's problem so let's build a

00:04:08,620 --> 00:04:15,359
block this is structured as like for

00:04:11,620 --> 00:04:18,699
opinions punctuated by a bit of coding

00:04:15,359 --> 00:04:20,709
opinions could also be rants you have

00:04:18,699 --> 00:04:24,219
heard the first one which was on

00:04:20,709 --> 00:04:27,040
accidental complexity let's build a bit

00:04:24,219 --> 00:04:29,530
of code this is where I have to like

00:04:27,040 --> 00:04:34,990
do a font size check and this is too big

00:04:29,530 --> 00:04:40,690
right yeah that kind of visible at the

00:04:34,990 --> 00:04:49,140
back right all right so let's what

00:04:40,690 --> 00:04:49,140
should we call our blog call it blog

00:04:49,650 --> 00:04:56,620
whoops thank God we haven't had an

00:04:53,770 --> 00:05:00,940
inventive audience on the peak of their

00:04:56,620 --> 00:05:02,470
naming abilities so how do we get

00:05:00,940 --> 00:05:04,000
started writing a blog right we're going

00:05:02,470 --> 00:05:11,980
to need a docker file we're gonna need

00:05:04,000 --> 00:05:14,800
some deployment yamo new main go package

00:05:11,980 --> 00:05:20,800
main funk man it's not called package

00:05:14,800 --> 00:05:22,360
main package blog so what I'm going to

00:05:20,800 --> 00:05:23,440
do is build the backend right I'm just

00:05:22,360 --> 00:05:26,220
going to build a background for the blog

00:05:23,440 --> 00:05:29,580
right so I have what's called a snippet

00:05:26,220 --> 00:05:34,300
lets me do that let's put it in data

00:05:29,580 --> 00:05:37,930
blog Jason and what does Jason

00:05:34,300 --> 00:05:42,160
what does belong Jason do it's going to

00:05:37,930 --> 00:05:44,260
new encoder what dot encode and then

00:05:42,160 --> 00:05:46,570
we'll give back some the posts where I

00:05:44,260 --> 00:05:54,570
will give the list of posts back so

00:05:46,570 --> 00:05:54,570
let's do that working backwards

00:05:56,820 --> 00:06:09,410
and what would a post have it would have

00:05:59,430 --> 00:06:09,410
a title whoops I have no idea I just did

00:06:09,680 --> 00:06:17,009
typing is hard on a Macbook fight

00:06:14,190 --> 00:06:19,380
somebody cool who would like to name our

00:06:17,009 --> 00:06:24,509
blog post what's the title of our blog

00:06:19,380 --> 00:06:29,690
post the treasure trove this is what's

00:06:24,509 --> 00:06:29,690
called audience participation friends

00:06:30,680 --> 00:06:37,729
great and it says in the treasure trove

00:06:38,000 --> 00:06:50,210
we will find a Jules thank you yeah I

00:06:50,270 --> 00:06:56,539
hate proof so why doesn't that work is

00:06:55,259 --> 00:07:02,130
that it

00:06:56,539 --> 00:07:02,460
computers are hard what's wrong with

00:07:02,130 --> 00:07:03,780
this

00:07:02,460 --> 00:07:06,680
what what's wrong with this sentence

00:07:03,780 --> 00:07:06,680
that is

00:07:11,340 --> 00:07:13,970
right

00:07:14,540 --> 00:07:20,690
Oh Oh it formatted that probably means

00:07:17,750 --> 00:07:23,320
it works yeah good

00:07:20,690 --> 00:07:26,480
so that will print out our stuff right

00:07:23,320 --> 00:07:29,150
and how do i oh I need to do it listen

00:07:26,480 --> 00:07:30,980
and serve right but first like so start

00:07:29,150 --> 00:07:34,370
thinking how do I run this how am I

00:07:30,980 --> 00:07:37,310
gonna test this listen and serve OS

00:07:34,370 --> 00:07:42,920
they'll get port Neil done okay so how

00:07:37,310 --> 00:07:44,720
do I run this go run I hope people know

00:07:42,920 --> 00:07:46,010
enough like like if you don't know go it

00:07:44,720 --> 00:07:50,660
doesn't really matter it's just the

00:07:46,010 --> 00:07:54,980
language I know port equals that say

00:07:50,660 --> 00:07:58,540
8080 go remain go whoops I still have

00:07:54,980 --> 00:08:09,350
that running can't run on main package

00:07:58,540 --> 00:08:11,960
never live code oh we have to create a

00:08:09,350 --> 00:08:17,600
Godot mod file cuz we're not gonna go

00:08:11,960 --> 00:08:19,460
path I think it's called module blog is

00:08:17,600 --> 00:08:22,790
it I think does anyone know how you

00:08:19,460 --> 00:08:24,470
write these like Godot mod files you

00:08:22,790 --> 00:08:28,880
said these are new don't really

00:08:24,470 --> 00:08:32,060
understand them come on in it here we go

00:08:28,880 --> 00:08:37,750
so yeah get rid of go mod and you say go

00:08:32,060 --> 00:08:37,750
mod init blog cool

00:08:43,439 --> 00:08:50,910
it's worked when I did it before module

00:08:46,930 --> 00:08:50,910
block cut my number a non main package

00:08:55,949 --> 00:09:01,959
we might have to put in a go path that

00:08:58,420 --> 00:09:09,550
would suck so here's our thing it's in

00:09:01,959 --> 00:09:11,019
package blog right look this is on you

00:09:09,550 --> 00:09:15,129
as much as it's on me if we get this

00:09:11,019 --> 00:09:34,410
wrong go mod in it let's do it the full

00:09:15,129 --> 00:09:34,410
way then how to do this all right

00:09:35,620 --> 00:09:52,600
oh you are yes that is that is

00:09:43,450 --> 00:09:53,620
embarrassing for everyone else yeah

00:09:52,600 --> 00:09:57,870
there we go

00:09:53,620 --> 00:10:03,300
and that is why we do not live code

00:09:57,870 --> 00:10:06,430
right so if we curl that curl

00:10:03,300 --> 00:10:09,190
localhost:8080 day to post Jason Day to

00:10:06,430 --> 00:10:11,790
blog dot Jason I did this time just to

00:10:09,190 --> 00:10:16,150
mix it up great we have some Jason good

00:10:11,790 --> 00:10:23,560
so that is our back end what shall i

00:10:16,150 --> 00:10:25,480
rant about now micro-services alright so

00:10:23,560 --> 00:10:27,340
we're going to talk about micro services

00:10:25,480 --> 00:10:29,080
because they are the whole thing here is

00:10:27,340 --> 00:10:31,540
the flowchart that this is what I call

00:10:29,080 --> 00:10:34,270
the micro services flow chart I told you

00:10:31,540 --> 00:10:36,250
there are opinions if you are less than

00:10:34,270 --> 00:10:38,670
a two person to Pizza team that is a

00:10:36,250 --> 00:10:43,060
team that you can feed with two pizzas

00:10:38,670 --> 00:10:46,120
micro service is not for you you you

00:10:43,060 --> 00:10:49,540
you've caused complexity you will not

00:10:46,120 --> 00:10:54,010
get in my opinion enough back from doing

00:10:49,540 --> 00:10:56,020
that if you have there's a proviso as

00:10:54,010 --> 00:10:58,900
well if you have more micro services

00:10:56,020 --> 00:11:02,350
than teams so if you have five teams and

00:10:58,900 --> 00:11:04,480
50 micro services you are probably not

00:11:02,350 --> 00:11:06,640
getting that much value from your micro

00:11:04,480 --> 00:11:09,160
services there is an overhead to micro

00:11:06,640 --> 00:11:11,290
services which is absolutely worth it if

00:11:09,160 --> 00:11:14,170
you can only solve the size of problem

00:11:11,290 --> 00:11:17,710
that you are solving by having more

00:11:14,170 --> 00:11:20,830
teams than people because within a

00:11:17,710 --> 00:11:22,630
single monolith if your team can do

00:11:20,830 --> 00:11:25,270
pairing do TDD do anything like that you

00:11:22,630 --> 00:11:27,310
can manage that if you need to scale up

00:11:25,270 --> 00:11:30,310
that's where micro services are useful

00:11:27,310 --> 00:11:32,860
so in other words can if you cannot do

00:11:30,310 --> 00:11:38,740
it with one team that is when I think

00:11:32,860 --> 00:11:43,000
you should use micro services yeah

00:11:38,740 --> 00:11:47,170
so to fake out a good reason to have a

00:11:43,000 --> 00:11:49,270
microservice let's build a UI it's what

00:11:47,170 --> 00:11:52,720
we are going to do we are going to build

00:11:49,270 --> 00:11:56,430
a UI for our blog we are going to use a

00:11:52,720 --> 00:12:03,880
language that I like to call react

00:11:56,430 --> 00:12:07,720
because it is called react blog UI so

00:12:03,880 --> 00:12:09,580
for anyone who just joined us we've took

00:12:07,720 --> 00:12:11,530
a poll of the room to decide a clever

00:12:09,580 --> 00:12:17,680
name for our blog and we came up with

00:12:11,530 --> 00:12:19,420
blog cool I'm so we're gonna create just

00:12:17,680 --> 00:12:22,750
so we're just gonna create a reactor

00:12:19,420 --> 00:12:24,580
right just pray reactor and one of the

00:12:22,750 --> 00:12:27,730
things I want to try and like show you

00:12:24,580 --> 00:12:29,650
is most of what I should be doing if I'm

00:12:27,730 --> 00:12:32,140
building something like a blog or like

00:12:29,650 --> 00:12:34,720
most things is just writing code right

00:12:32,140 --> 00:12:36,700
I'm going to use the programming

00:12:34,720 --> 00:12:39,270
languages test Suites I'm gonna use the

00:12:36,700 --> 00:12:42,130
programming languages deployment tools

00:12:39,270 --> 00:12:44,170
I'm not gonna start spinning up

00:12:42,130 --> 00:12:47,500
containers and stuff at this point right

00:12:44,170 --> 00:12:54,850
I'm just gonna run it so we've got our

00:12:47,500 --> 00:12:59,230
blog and this is blog - UI and we can

00:12:54,850 --> 00:13:04,120
edit our popliteus so we're going to

00:12:59,230 --> 00:13:06,070
this is going to be ugly this is not

00:13:04,120 --> 00:13:14,440
going to be I'm not going to do some CSS

00:13:06,070 --> 00:13:18,160
here I am going to do posts dot map so

00:13:14,440 --> 00:13:24,280
post up map P and in site you get a post

00:13:18,160 --> 00:13:26,940
and you get h 1p dot title and you get

00:13:24,280 --> 00:13:26,940
the body right

00:13:27,080 --> 00:13:41,810
P dot body div div good does anyone want

00:13:37,190 --> 00:13:43,190
to spellcheck me see that was an

00:13:41,810 --> 00:13:46,720
intentional mistake see if you're paying

00:13:43,190 --> 00:13:51,050
attention and you were not come on folks

00:13:46,720 --> 00:13:53,420
cool so post up map we need to make that

00:13:51,050 --> 00:13:55,490
posting and let's start off by just like

00:13:53,420 --> 00:14:04,810
creating a fake one right so we'll just

00:13:55,490 --> 00:14:13,040
do posts and title hi body there right

00:14:04,810 --> 00:14:14,649
Const yeah see you're getting there

00:14:13,040 --> 00:14:18,920
you're getting there

00:14:14,649 --> 00:14:27,589
we're learning as we go so how would I

00:14:18,920 --> 00:14:28,850
run that I do yawn run yawn start so

00:14:27,589 --> 00:14:31,459
this would be like just the front end

00:14:28,850 --> 00:14:34,959
just like just coding out and we're

00:14:31,459 --> 00:14:37,910
imagining that we're yes why not

00:14:34,959 --> 00:14:40,040
why not we'll have ports whatever

00:14:37,910 --> 00:14:41,240
so we're imagine with two separate teams

00:14:40,040 --> 00:14:44,120
right so I'm going to divide up my UI

00:14:41,240 --> 00:14:47,149
reasonably separately start the

00:14:44,120 --> 00:14:50,480
development server don't watch Crystal

00:14:47,149 --> 00:14:59,240
Maze start the fans please so just like

00:14:50,480 --> 00:15:01,520
a UK thing alright it says hi there good

00:14:59,240 --> 00:15:02,990
right so what we want to do now is

00:15:01,520 --> 00:15:04,430
integrate these two things together

00:15:02,990 --> 00:15:08,180
right so how do we integrate these

00:15:04,430 --> 00:15:10,699
things together there is a great thing

00:15:08,180 --> 00:15:13,880
for react you can do this you can do

00:15:10,699 --> 00:15:16,610
package dot JSON and we can add a thing

00:15:13,880 --> 00:15:18,589
call an animal called proxy and what

00:15:16,610 --> 00:15:20,959
proxy does is it says when you access

00:15:18,589 --> 00:15:22,880
slash whatever forward it to something

00:15:20,959 --> 00:15:25,670
else so you can integrate two things

00:15:22,880 --> 00:15:28,310
easier right so are you in a browser you

00:15:25,670 --> 00:15:30,589
can't directly access a URL for security

00:15:28,310 --> 00:15:32,980
so we're going to access local and react

00:15:30,589 --> 00:15:35,980
will just proxy it so we will use

00:15:32,980 --> 00:15:35,980
localhost

00:15:37,989 --> 00:15:43,839
but up to them localhost data and I

00:15:42,459 --> 00:15:48,850
think we did it on 8080

00:15:43,839 --> 00:15:54,579
I actually don't even look how they feel

00:15:48,850 --> 00:15:55,839
good I'm so what this will do I can see

00:15:54,579 --> 00:15:57,549
you around on my phone what this will do

00:15:55,839 --> 00:15:59,769
is anything that goes to localhost it

00:15:57,549 --> 00:16:02,619
will forward it over to blog host 8080

00:15:59,769 --> 00:16:05,709
if it's not asking for Jason it will

00:16:02,619 --> 00:16:09,069
forward it to 8080 and what we want to

00:16:05,709 --> 00:16:10,899
do is we want to now grab it from that

00:16:09,069 --> 00:16:15,129
URL right so we want to grab it from the

00:16:10,899 --> 00:16:23,829
data URL so we can build a little use

00:16:15,129 --> 00:16:26,980
fetch so function use fetch URL and so

00:16:23,829 --> 00:16:29,499
to do a fetch we want state and set

00:16:26,980 --> 00:16:34,059
States this is this new react hook stuff

00:16:29,499 --> 00:16:36,279
which is super awesome state and we need

00:16:34,059 --> 00:16:38,559
to do a use effect it doesn't really

00:16:36,279 --> 00:16:41,790
matter if you know what I'm doing here

00:16:38,559 --> 00:16:46,329
as I do I use a fax and I say fetch URL

00:16:41,790 --> 00:16:51,759
then and we get the response and I'd

00:16:46,329 --> 00:16:59,220
like the response Jason and then give me

00:16:51,759 --> 00:16:59,220
that Jason and set state with the Jason

00:16:59,519 --> 00:17:08,019
that looks about right

00:17:02,009 --> 00:17:12,549
return States cool and with that I'm

00:17:08,019 --> 00:17:16,630
going to say use fetch and I want to

00:17:12,549 --> 00:17:18,929
fetch data block Jason I think is what

00:17:16,630 --> 00:17:18,929
we said

00:17:24,570 --> 00:17:46,000
to spell-checking as we go

00:17:28,800 --> 00:17:47,860
stop outright wrong with this um sweetie

00:17:46,000 --> 00:17:52,060
hugs you can't see the end so you got

00:17:47,860 --> 00:17:56,310
fetch then response then that all looks

00:17:52,060 --> 00:17:56,310
right alright who helped me last time

00:17:58,020 --> 00:18:03,400
fetch that URL then response response

00:18:00,790 --> 00:18:06,910
like Jason don't then Jason set state

00:18:03,400 --> 00:18:09,550
Jason yeah one more close brackets isn't

00:18:06,910 --> 00:18:10,570
it it's literally the hardest thing in

00:18:09,550 --> 00:18:18,540
programming isn't it it's just like

00:18:10,570 --> 00:18:18,540
brackets oh of course right so function

00:18:22,110 --> 00:18:28,470
I think that should do it

00:18:32,570 --> 00:18:36,320
I don't think we care about anything

00:18:34,039 --> 00:18:41,950
else States you states we need to

00:18:36,320 --> 00:18:45,859
declare its cause imports you states and

00:18:41,950 --> 00:18:49,639
use effect Goods right so we now have a

00:18:45,859 --> 00:18:53,899
UI really lights gets the Cloud Foundry

00:18:49,639 --> 00:18:58,580
bit scene we're close we're close

00:18:53,899 --> 00:19:01,820
so let's boot that back up so we've got

00:18:58,580 --> 00:19:05,889
our blog posts running on 8080 we've got

00:19:01,820 --> 00:19:05,889
a thing we should be able to load it up

00:19:07,539 --> 00:19:15,019
and did you get any fetches so now we

00:19:12,739 --> 00:19:16,849
can debug one thing that's quite cool

00:19:15,019 --> 00:19:18,229
about this way of working is that you

00:19:16,849 --> 00:19:20,269
just have all your native tools right

00:19:18,229 --> 00:19:24,830
this is running in a container or doing

00:19:20,269 --> 00:19:26,779
anything funky so if I look at a Oh lots

00:19:24,830 --> 00:19:29,229
of stuff happening there we're going a

00:19:26,779 --> 00:19:29,229
little crazy

00:19:34,050 --> 00:19:48,990
uh I have a feeling we're getting a ton

00:19:39,660 --> 00:19:51,120
of 404s let's see I'm running out of

00:19:48,990 --> 00:20:02,310
time we might might have to go to the

00:19:51,120 --> 00:20:05,910
next step you can't do it all right so

00:20:02,310 --> 00:20:08,070
let's look at the console and I want to

00:20:05,910 --> 00:20:11,370
look at what's going on in the network

00:20:08,070 --> 00:20:13,590
I'm looking at CTR oh so we got the blog

00:20:11,370 --> 00:20:18,150
back you got our blog posts there they

00:20:13,590 --> 00:20:23,160
are from my ex ex ex ex er request but

00:20:18,150 --> 00:20:25,930
it didn't make it into our thing so

00:20:23,160 --> 00:20:28,010
let's have a look why isn't that working

00:20:25,930 --> 00:20:33,180
[Music]

00:20:28,010 --> 00:20:36,570
got posts which use app post up map all

00:20:33,180 --> 00:20:38,430
of this looks good did asset States when

00:20:36,570 --> 00:20:46,710
the Jason came back I would turn the

00:20:38,430 --> 00:20:54,630
state does anyone know why that's not

00:20:46,710 --> 00:20:56,420
working we've got the states we know it

00:20:54,630 --> 00:20:58,800
came back because we saw it come back

00:20:56,420 --> 00:21:01,080
did have fetched and we put the response

00:20:58,800 --> 00:21:04,550
we got the Jason we got the Jason I mean

00:21:01,080 --> 00:21:04,550
we can do to do a bit of logging

00:21:27,039 --> 00:21:32,029
all right let's have a bit of logging I

00:21:29,299 --> 00:21:35,740
think we do not have enough time to skip

00:21:32,029 --> 00:21:35,740
we might have to skip to the next bit

00:21:38,440 --> 00:21:47,889
and what what's in our logs so we even

00:21:44,299 --> 00:21:47,889
logged it got all the way back

00:21:51,320 --> 00:21:54,450
[Music]

00:21:57,950 --> 00:22:05,140
oh wait you know what I think it might

00:21:59,630 --> 00:22:11,000
be oh oh this is sad very sad new

00:22:05,140 --> 00:22:13,220
looking for a lower case that is

00:22:11,000 --> 00:22:15,350
annoying so I can put it back and what I

00:22:13,220 --> 00:22:16,700
will do so this this is actually okay

00:22:15,350 --> 00:22:18,440
well we all we actually want to do is

00:22:16,700 --> 00:22:20,300
edit our main goal and what we should

00:22:18,440 --> 00:22:29,090
have done is put struck tacks on here

00:22:20,300 --> 00:22:33,200
right that's not Jason title good Jason

00:22:29,090 --> 00:22:46,160
body good good

00:22:33,200 --> 00:22:48,280
cool yeah yeah all right now everyone

00:22:46,160 --> 00:22:57,940
just compiled that in your head for me

00:22:48,280 --> 00:22:57,940
yeah how confident do we feel all right

00:22:58,630 --> 00:23:06,710
yes

00:22:59,840 --> 00:23:12,880
boom all right great so we now have a UI

00:23:06,710 --> 00:23:14,930
I want to do a little rant containers I

00:23:12,880 --> 00:23:16,700
think what a lot of people do right now

00:23:14,930 --> 00:23:18,110
is start putting this in containers we

00:23:16,700 --> 00:23:20,810
are not going to put this in containers

00:23:18,110 --> 00:23:22,700
because it is a go application and a

00:23:20,810 --> 00:23:24,290
JavaScript application and there is

00:23:22,700 --> 00:23:27,950
nothing magic about either of those two

00:23:24,290 --> 00:23:30,230
things here is my container workflow by

00:23:27,950 --> 00:23:30,620
the way I work on containers in cloud

00:23:30,230 --> 00:23:32,960
foundry

00:23:30,620 --> 00:23:35,540
I run the garden team in cloud foundry I

00:23:32,960 --> 00:23:37,370
love containers containers are brilliant

00:23:35,540 --> 00:23:39,230
I just don't think most people should

00:23:37,370 --> 00:23:41,690
touch them most of time you don't

00:23:39,230 --> 00:23:44,240
actually need them for most things if

00:23:41,690 --> 00:23:48,170
you are a pass you need containers if

00:23:44,240 --> 00:23:50,990
you are CI unique containers so by all

00:23:48,170 --> 00:23:53,390
means set up some CI to convert all your

00:23:50,990 --> 00:23:55,550
code into containers but most people

00:23:53,390 --> 00:24:00,500
should be able to CF push or something

00:23:55,550 --> 00:24:01,880
analogous are you coupled to an OS this

00:24:00,500 --> 00:24:03,440
is another good reason for a container

00:24:01,880 --> 00:24:07,220
if you are doing something that is

00:24:03,440 --> 00:24:09,140
genuinely coupled to an OS it matters

00:24:07,220 --> 00:24:10,760
what OS you are running on then you are

00:24:09,140 --> 00:24:11,330
going to have to do copy yourself from

00:24:10,760 --> 00:24:14,540
an OS

00:24:11,330 --> 00:24:16,490
and have a custom dockerfile I would

00:24:14,540 --> 00:24:20,600
argue you should try not to be coupled

00:24:16,490 --> 00:24:24,590
to an OS if this seems crazy let me

00:24:20,600 --> 00:24:26,900
point out every day we load Java scripts

00:24:24,590 --> 00:24:29,390
via our web browsers and it does not

00:24:26,900 --> 00:24:32,900
come packaged with a browser to run that

00:24:29,390 --> 00:24:33,560
javascript in it works fine if your

00:24:32,900 --> 00:24:37,400
language

00:24:33,560 --> 00:24:39,080
is encapsulated right go just make

00:24:37,400 --> 00:24:42,890
static binaries they'll run in anything

00:24:39,080 --> 00:24:46,010
Java literally runs in a JVM we don't

00:24:42,890 --> 00:24:49,880
actually need to isolate ourselves from

00:24:46,010 --> 00:24:54,200
the OS if we write simple code right so

00:24:49,880 --> 00:24:56,060
just push code lock in oh if I don't use

00:24:54,200 --> 00:24:57,740
doc files and stuff I'll be tied in it's

00:24:56,060 --> 00:24:59,300
just code right what I've written so far

00:24:57,740 --> 00:25:02,080
is just code I didn't touch Cloud

00:24:59,300 --> 00:25:04,250
Foundry and do any Cloud Foundry stuff I

00:25:02,080 --> 00:25:07,610
could just add a doc file to any of that

00:25:04,250 --> 00:25:10,220
stuff so now let's do a CF push so what

00:25:07,610 --> 00:25:13,070
we're going to do we are going to first

00:25:10,220 --> 00:25:17,540
we are going to push our blog to the

00:25:13,070 --> 00:25:20,210
interwebs so let's do it here let's have

00:25:17,540 --> 00:25:22,900
this one it surprisingly difficult to do

00:25:20,210 --> 00:25:25,280
and it's like really big text size so

00:25:22,900 --> 00:25:26,510
I'm not going to push it as JavaScript I

00:25:25,280 --> 00:25:29,330
am actually gonna build it so I'm going

00:25:26,510 --> 00:25:32,450
to do a yarn build and what that does is

00:25:29,330 --> 00:25:34,010
it package it because like there all the

00:25:32,450 --> 00:25:35,960
various M PM's and stuff are enormous

00:25:34,010 --> 00:25:38,750
and so if I do a CF push it's gonna

00:25:35,960 --> 00:25:40,580
upload all of this JavaScript stuff I'm

00:25:38,750 --> 00:25:43,100
just going to build it and then we end

00:25:40,580 --> 00:25:47,390
up with this build folder which has

00:25:43,100 --> 00:25:51,640
inside it all the stuff that I need to

00:25:47,390 --> 00:25:53,960
push up if I touch build a static file

00:25:51,640 --> 00:25:55,550
that will tell Cloud Foundry that it's

00:25:53,960 --> 00:25:59,890
just static just serve it with this

00:25:55,550 --> 00:26:05,480
static thing I can do a CF push dialog

00:25:59,890 --> 00:26:06,950
and I'll say - P build that's it that's

00:26:05,480 --> 00:26:08,320
all we need to do to run that on the

00:26:06,950 --> 00:26:11,570
cloud it's now going to run on the cloud

00:26:08,320 --> 00:26:13,760
that proxy thing will no longer run so

00:26:11,570 --> 00:26:17,450
what we're going to have to do is run

00:26:13,760 --> 00:26:20,210
our back-end or go app and we want to

00:26:17,450 --> 00:26:22,250
run that on slash data so anything on

00:26:20,210 --> 00:26:23,850
slash data we actually want to serve the

00:26:22,250 --> 00:26:27,810
go app instead

00:26:23,850 --> 00:26:32,130
luckily we are using CF and that's quite

00:26:27,810 --> 00:26:34,740
easy I can do CF bind root o at first I

00:26:32,130 --> 00:26:37,080
should push it so I can push this

00:26:34,740 --> 00:26:43,920
application let's create a manifest

00:26:37,080 --> 00:26:49,380
because it's go whoops I do not have

00:26:43,920 --> 00:26:51,960
time ok I'm going to skip it and you use

00:26:49,380 --> 00:26:54,300
bide root you bind the root of that go

00:26:51,960 --> 00:26:57,180
application to slash data you now have

00:26:54,300 --> 00:26:59,430
those two things communicating I want to

00:26:57,180 --> 00:27:00,450
have enough time to get to the next step

00:26:59,430 --> 00:27:04,860
so I'm just gonna get to next that

00:27:00,450 --> 00:27:06,990
opinion for state I think this is

00:27:04,860 --> 00:27:08,700
probably the most important thing that I

00:27:06,990 --> 00:27:11,670
want to say and I have three minutes so

00:27:08,700 --> 00:27:14,130
I'm going to say it what is wrong with

00:27:11,670 --> 00:27:15,570
it oh okay I need you to do a visual

00:27:14,130 --> 00:27:17,910
picture because these are not the

00:27:15,570 --> 00:27:19,920
correct slides what is wrong if there

00:27:17,910 --> 00:27:21,750
was a picture of you so if you if you go

00:27:19,920 --> 00:27:23,910
to any kubernetes website or Dhaka

00:27:21,750 --> 00:27:26,190
website and you look at a picture of of

00:27:23,910 --> 00:27:28,980
a simple app we have to google it what

00:27:26,190 --> 00:27:32,010
you will see is a MongoDB or a Redis

00:27:28,980 --> 00:27:34,610
plus an engine X plus your application

00:27:32,010 --> 00:27:37,770
server what is wrong with that picture

00:27:34,610 --> 00:27:40,350
do not push to cloud right

00:27:37,770 --> 00:27:44,490
do not push database to a card unless

00:27:40,350 --> 00:27:46,350
you want to be a DBA use a service for

00:27:44,490 --> 00:27:53,100
that you should be pushing code to a

00:27:46,350 --> 00:27:55,290
cloud state is bad state is bad why

00:27:53,100 --> 00:27:58,080
because state is the magic trick that

00:27:55,290 --> 00:28:00,870
turns cattle into pets states is why I

00:27:58,080 --> 00:28:02,550
can't throw away any one of my replicas

00:28:00,870 --> 00:28:05,220
that I want when something goes wrong if

00:28:02,550 --> 00:28:07,710
there's state I have to worry about it

00:28:05,220 --> 00:28:10,320
that's why you need to back that machine

00:28:07,710 --> 00:28:12,780
up you need to investigate when it goes

00:28:10,320 --> 00:28:14,910
wrong you need to think about how I

00:28:12,780 --> 00:28:18,330
scale that up and down so you can't just

00:28:14,910 --> 00:28:20,910
add instances easily State is hard what

00:28:18,330 --> 00:28:23,120
do I do about state make it someone

00:28:20,910 --> 00:28:26,220
else's problem

00:28:23,120 --> 00:28:30,600
that is how you are able to move fast

00:28:26,220 --> 00:28:34,280
develop iOS apps that deliver ice cream

00:28:30,600 --> 00:28:37,590
to my door which is important you stay

00:28:34,280 --> 00:28:40,650
so my floater is are you a DBA

00:28:37,590 --> 00:28:43,920
if so states is fine would you like to

00:28:40,650 --> 00:28:47,040
be a DBA if so states is fine otherwise

00:28:43,920 --> 00:28:50,250
no how would I add state and I don't

00:28:47,040 --> 00:28:54,030
quite have time to do this but what I

00:28:50,250 --> 00:28:57,960
would suggest is for example I use I IBM

00:28:54,030 --> 00:29:00,120
pays my bills so if I go to IBM and log

00:28:57,960 --> 00:29:02,370
in I will see and this is the nice thing

00:29:00,120 --> 00:29:04,680
about Cloud Foundry system obviously a

00:29:02,370 --> 00:29:10,980
catalog of services that can do my state

00:29:04,680 --> 00:29:15,570
for me so if I created one to do tube

00:29:10,980 --> 00:29:17,730
foodtube if I created one of those

00:29:15,570 --> 00:29:20,280
services I have created one here and

00:29:17,730 --> 00:29:22,950
then I can just bind it to my app so I

00:29:20,280 --> 00:29:25,110
say CF bind service and bind that

00:29:22,950 --> 00:29:27,000
service to my app and my app will get an

00:29:25,110 --> 00:29:30,060
environment variable with the username

00:29:27,000 --> 00:29:32,460
and password for that service in it that

00:29:30,060 --> 00:29:34,530
is how I do state so if I take my main

00:29:32,460 --> 00:29:37,560
go and just get the username and

00:29:34,530 --> 00:29:39,960
password quite a good one is in my

00:29:37,560 --> 00:29:41,880
opinion Cloudant but use anything the

00:29:39,960 --> 00:29:43,710
nice thing about Cloudant is you can

00:29:41,880 --> 00:29:46,500
just store JSON stuff in it you just

00:29:43,710 --> 00:29:48,420
store JSON documents so you take their

00:29:46,500 --> 00:29:50,340
the blog post that you want you store

00:29:48,420 --> 00:29:54,030
them in Cloudant you bind it to your app

00:29:50,340 --> 00:29:56,010
and you will have an end-to-end blog and

00:29:54,030 --> 00:29:59,370
all you will need to do in your

00:29:56,010 --> 00:30:02,340
development process is code and then

00:29:59,370 --> 00:30:04,800
push no containers no deploy in the

00:30:02,340 --> 00:30:07,760
amell's no orchestration or scheduling

00:30:04,800 --> 00:30:12,270
or anything else just your actual

00:30:07,760 --> 00:30:17,060
business value and that is the edge of

00:30:12,270 --> 00:30:22,500
my time so we didn't quite build a blog

00:30:17,060 --> 00:30:24,780
with Cloud Foundry but nevertheless this

00:30:22,500 --> 00:30:28,020
is the Zen of Cloud Foundry according to

00:30:24,780 --> 00:30:30,450
me number one avoid accidental

00:30:28,020 --> 00:30:32,520
complexity if you need to do some

00:30:30,450 --> 00:30:36,510
low-level stuff you're going to have to

00:30:32,520 --> 00:30:38,490
do some low-level stuff but try to try

00:30:36,510 --> 00:30:40,680
to operate at the highest level that you

00:30:38,490 --> 00:30:43,020
can because your problems are

00:30:40,680 --> 00:30:45,260
complicated enough if you can spend time

00:30:43,020 --> 00:30:48,720
either on container orchestration or

00:30:45,260 --> 00:30:50,390
improving your login flow making your

00:30:48,720 --> 00:30:53,550
code faster

00:30:50,390 --> 00:30:57,210
adding a feature prefer the latter

00:30:53,550 --> 00:30:58,920
things like in my opinion most people

00:30:57,210 --> 00:31:01,230
the abstraction should be code Cloud

00:30:58,920 --> 00:31:02,310
Foundry is one way of doing that if

00:31:01,230 --> 00:31:07,170
you're building for something like

00:31:02,310 --> 00:31:10,200
kubernetes build some CI that makes that

00:31:07,170 --> 00:31:13,560
process repeatable micro-services are

00:31:10,200 --> 00:31:15,510
fine but don't go crazy if you use CF

00:31:13,560 --> 00:31:19,140
and it's quite easy to run a lot of

00:31:15,510 --> 00:31:21,120
micro services just CF apps don't run

00:31:19,140 --> 00:31:23,280
10,000 micro services unless you have

00:31:21,120 --> 00:31:26,220
10,000 teams and consider whether you

00:31:23,280 --> 00:31:28,890
need 10,000 teams and most importantly

00:31:26,220 --> 00:31:32,520
States is bad so make it someone else's

00:31:28,890 --> 00:31:34,620
problem and that's that's not building a

00:31:32,520 --> 00:31:36,030
bottom cloud foundry but at least maybe

00:31:34,620 --> 00:31:37,590
we got to a little bit of design of

00:31:36,030 --> 00:31:41,020
cloud foundry which was the more

00:31:37,590 --> 00:31:46,079
important point thank you very much

00:31:41,020 --> 00:31:46,079

YouTube URL: https://www.youtube.com/watch?v=sLiT1fCinkM


