Title: Knative vs Cloud Foundry: Where are the Overlaps... - Dr. Michael Maximilien & Dr. Nic Williams
Publication date: 2019-04-11
Playlist: Cloud Foundry Summit NA 2019 - Philadelphia
Description: 
	Knative vs Cloud Foundry: Where are the Overlaps and What are the Differences? - Dr. Michael Maximilien, IBM & Dr. Nic Williams, Stark & Wayne

On a superficial level, when looking at Knative, the function / service platform on top of Kubernetes, you might believe that this is a new version of Cloud Foundry but written using Kubernetes as a backend.

Indeed, using a Knative CLI like Knctl, you can deploy your application from source with `$knctl deploy my-app ...` which is pretty close to `$cf push my-app ...`. But are the similarities skin deep? Where do they differ? And where do they overlap?

In this talk, I will compare and contrast the latest experiences of Cloud Foundry and Knative in order to extract meaningful comparison of their features from a developer perspective. Additionally, I will measure and compare key metrics that affect the developer experience, e.g., time to deploy, time to scale, and other such metrics. Finally, I will also compare and contrast the two platforms on features, e.g., RBAC, plug-ability, scalability, and some performance metrics.

The overall goal is to better understand how these two platforms are going especially as CF is looking to work on top of Kubernetes and therefore have the same backend.

About Michael Maximilien (aka Dr. Max)
Computer scientist, engineer, programmer and also photographer. Formally, CTO at IBM.

About Dr Nic Williams
User and evangelist of Cloud Foundry, Kubernetes, Concourse CI, and BOSH. Author of books Concourse Tutorial and Ultimate Guide to BOSH. Awarded Cloud Foundry Champion 2018. CEO of Stark & Wayne.

https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:06,450
okay so welcome to CF versus K native I

00:00:04,110 --> 00:00:08,639
I felt compelled to add this warning

00:00:06,450 --> 00:00:12,090
because of obviously things are being

00:00:08,639 --> 00:00:14,040
recorded so this is not a scientific

00:00:12,090 --> 00:00:16,770
survey I don't know if you expected that

00:00:14,040 --> 00:00:20,250
it is it's not a scientific survey there

00:00:16,770 --> 00:00:22,230
was no surveying exactly it's very open

00:00:20,250 --> 00:00:24,480
yet it but I think it's an educated

00:00:22,230 --> 00:00:25,830
opinion so hopefully it will be worth

00:00:24,480 --> 00:00:27,359
your while the other thing is we're

00:00:25,830 --> 00:00:29,760
using K native beta code obviously

00:00:27,359 --> 00:00:31,890
things can change so what we say here

00:00:29,760 --> 00:00:34,140
could actually change when you get home

00:00:31,890 --> 00:00:36,210
and you try it and we're looking at high

00:00:34,140 --> 00:00:39,690
level features versus very detailed

00:00:36,210 --> 00:00:42,210
fine-grain so keep that in mind and of

00:00:39,690 --> 00:00:46,070
course to make it fun we have a score

00:00:42,210 --> 00:00:48,390
that we are keeping for each so be that

00:00:46,070 --> 00:00:51,420
exactly keep keep the score in your mind

00:00:48,390 --> 00:00:53,640
will reveal at the end but it's very

00:00:51,420 --> 00:00:55,980
subjective so get started that's good so

00:00:53,640 --> 00:00:59,730
yeah so who who is this guy

00:00:55,980 --> 00:01:02,039
you oh I thought I was just pronoun you

00:00:59,730 --> 00:01:03,840
know you I'm doctor Nick I work for

00:01:02,039 --> 00:01:08,640
Stark and wine which there are many

00:01:03,840 --> 00:01:09,960
people in blue suits Blair fits which is

00:01:08,640 --> 00:01:11,760
the poor way to introduce them because

00:01:09,960 --> 00:01:14,250
I'm not wearing the same outfit just I

00:01:11,760 --> 00:01:16,350
know you're in red the worst person ever

00:01:14,250 --> 00:01:17,970
but I look more like that then I you

00:01:16,350 --> 00:01:20,400
know anyway that's I look like that I

00:01:17,970 --> 00:01:21,960
stock and why is a consultancy we run

00:01:20,400 --> 00:01:25,170
clapping before you and we're pretty

00:01:21,960 --> 00:01:27,780
pretty good at it yeah and if you don't

00:01:25,170 --> 00:01:29,909
know this guy he does so much pudding oh

00:01:27,780 --> 00:01:32,000
yeah everything I have a github account

00:01:29,909 --> 00:01:34,770
that's right yeah

00:01:32,000 --> 00:01:36,689
so this is me I'm not on my bike but I

00:01:34,770 --> 00:01:40,409
wish I was you promised you would wear

00:01:36,689 --> 00:01:43,020
the outfit and actually after this I'm

00:01:40,409 --> 00:01:44,700
actually going for a cycling spin so if

00:01:43,020 --> 00:01:46,470
you're interested in you know we can do

00:01:44,700 --> 00:01:48,479
this but I work five yeah we're not

00:01:46,470 --> 00:01:50,790
actually like is the background real or

00:01:48,479 --> 00:01:52,950
you just like on earth this is real I

00:01:50,790 --> 00:01:55,740
was in a better shape to there but I

00:01:52,950 --> 00:01:58,229
work for IBM and I do voicings for Cloud

00:01:55,740 --> 00:01:59,969
Foundry so how much how much not better

00:01:58,229 --> 00:02:01,860
you in shape oh yeah it's as horrible

00:01:59,969 --> 00:02:03,149
let's not talk about that that's quite

00:02:01,860 --> 00:02:06,090
all right sorry the way we're going to

00:02:03,149 --> 00:02:08,050
do this is I will represent Cloud

00:02:06,090 --> 00:02:11,190
Foundry

00:02:08,050 --> 00:02:12,970
and you will represent Kennedy native

00:02:11,190 --> 00:02:15,490
what is Cloud Foundry

00:02:12,970 --> 00:02:17,980
it is the thing that you've hopefully by

00:02:15,490 --> 00:02:20,920
the middle of today oh that's really yes

00:02:17,980 --> 00:02:23,350
this is from cut and paste text whatever

00:02:20,920 --> 00:02:26,980
it is the way in which we go through the

00:02:23,350 --> 00:02:28,390
whole cycle of looking after apps so new

00:02:26,980 --> 00:02:30,040
code you go through the whole process

00:02:28,390 --> 00:02:31,870
get it off your laptop as quickly as

00:02:30,040 --> 00:02:33,520
possible get it into place that will be

00:02:31,870 --> 00:02:35,230
in production because no one wants to

00:02:33,520 --> 00:02:36,520
have to hand their laptop over and plug

00:02:35,230 --> 00:02:39,280
it into the internet that's not

00:02:36,520 --> 00:02:42,070
deployment that's that's just an excuse

00:02:39,280 --> 00:02:43,960
so we want to get into the production

00:02:42,070 --> 00:02:47,620
and we want that same environment to be

00:02:43,960 --> 00:02:48,940
production ready yes it's it's that that

00:02:47,620 --> 00:02:50,650
entire experience and is the thing we

00:02:48,940 --> 00:02:53,380
all love we were here for that right so

00:02:50,650 --> 00:02:54,970
what is Canadia we do KN just because to

00:02:53,380 --> 00:02:56,800
shorten the name but it's really key

00:02:54,970 --> 00:02:58,630
native and if you go to their website

00:02:56,800 --> 00:03:01,540
you'll see that it's actually a platform

00:02:58,630 --> 00:03:04,090
built on top of kubernetes that is

00:03:01,540 --> 00:03:05,800
targeted to server less workloads but

00:03:04,090 --> 00:03:08,290
the reality is you can do pretty much

00:03:05,800 --> 00:03:09,310
anything else with it in terms of the

00:03:08,290 --> 00:03:11,140
regular apps and so on

00:03:09,310 --> 00:03:13,540
it has the word end in it every other

00:03:11,140 --> 00:03:15,700
word is buzzword bingo just gold photo

00:03:13,540 --> 00:03:19,120
look at that how could you not win

00:03:15,700 --> 00:03:21,220
buzzword bingo presence all right so

00:03:19,120 --> 00:03:23,320
what's the methodology that we use let

00:03:21,220 --> 00:03:26,709
me give an idea of this so we decided

00:03:23,320 --> 00:03:30,280
the way we will compare versus sort of

00:03:26,709 --> 00:03:31,930
very detail is to pick five high level

00:03:30,280 --> 00:03:33,280
use case that we think people are

00:03:31,930 --> 00:03:35,020
interested in

00:03:33,280 --> 00:03:38,170
hopefully you're interested in those and

00:03:35,020 --> 00:03:40,360
very quickly the basic one is to create

00:03:38,170 --> 00:03:42,670
an app all right can you actually do

00:03:40,360 --> 00:03:44,140
that and how easy it is that so that

00:03:42,670 --> 00:03:45,430
gets you warmed up the next one is

00:03:44,140 --> 00:03:47,440
managing it so you want to create

00:03:45,430 --> 00:03:49,480
multiple revisions of that app you want

00:03:47,440 --> 00:03:53,230
to be able to delete you want to be able

00:03:49,480 --> 00:03:54,970
to scale it to add woods to it and so on

00:03:53,230 --> 00:03:58,150
right so a basic lifecycle management

00:03:54,970 --> 00:04:01,660
the routes the route no woods well ok

00:03:58,150 --> 00:04:03,760
with French routing all right anyway

00:04:01,660 --> 00:04:07,230
the third part is goes wrong right

00:04:03,760 --> 00:04:07,230
is that French is

00:04:07,420 --> 00:04:14,810
that is that is technically French so

00:04:10,970 --> 00:04:16,870
yes is it legit or last year is it so

00:04:14,810 --> 00:04:19,730
how do you debug the

00:04:16,870 --> 00:04:21,980
so do you debug that's very important

00:04:19,730 --> 00:04:24,919
right so how easy it is for you to to

00:04:21,980 --> 00:04:27,350
actually fix things so we'll look into

00:04:24,919 --> 00:04:28,760
that and then the third part is because

00:04:27,350 --> 00:04:30,440
your app is not going to live by itself

00:04:28,760 --> 00:04:33,680
it needs to connect to some external

00:04:30,440 --> 00:04:35,750
service so how is it for you to connect

00:04:33,680 --> 00:04:38,300
to those services manage that connection

00:04:35,750 --> 00:04:39,979
and so on and then finally part of the

00:04:38,300 --> 00:04:41,330
reason you all here for Cloud Foundry is

00:04:39,979 --> 00:04:45,740
and turny

00:04:41,330 --> 00:04:47,570
you know as a member of IBM it's

00:04:45,740 --> 00:04:49,690
certainly important for us to think of

00:04:47,570 --> 00:04:53,180
enterprising features you know so how

00:04:49,690 --> 00:04:55,850
easy it is for you to take that platform

00:04:53,180 --> 00:04:57,830
and map it to your enterprise needs so

00:04:55,850 --> 00:04:59,419
hopefully we represent a good class to

00:04:57,830 --> 00:05:02,060
put it into French yes step one the

00:04:59,419 --> 00:05:07,070
forest shits and giggles yes and then

00:05:02,060 --> 00:05:08,750
stepfathers yeah in some ways but at

00:05:07,070 --> 00:05:11,780
French this is what we decided to use

00:05:08,750 --> 00:05:14,240
obviously your use cases will vary and

00:05:11,780 --> 00:05:15,260
so on so keep that in mind right so what

00:05:14,240 --> 00:05:17,030
we're gonna do is we're gonna take each

00:05:15,260 --> 00:05:19,100
one of those use cases go into detail

00:05:17,030 --> 00:05:21,080
and look at how each does it and then

00:05:19,100 --> 00:05:23,240
we'll have some of them as demo just

00:05:21,080 --> 00:05:25,039
because we can't do all of it so great

00:05:23,240 --> 00:05:27,800
so we're going to deploy an app which

00:05:25,039 --> 00:05:31,640
many of you will be aware is the thing

00:05:27,800 --> 00:05:33,860
you want to do and then we have the

00:05:31,640 --> 00:05:36,800
steps build with Bill Paxton and we will

00:05:33,860 --> 00:05:38,810
quickly look at the both client and K

00:05:36,800 --> 00:05:42,380
native can do things in addition doing

00:05:38,810 --> 00:05:45,650
bill packs but we want to app and just

00:05:42,380 --> 00:05:48,200
to give away a bit of a clue k native

00:05:45,650 --> 00:05:49,940
and Cloud Foundry can both do this I

00:05:48,200 --> 00:05:51,770
mean I don't want to spoil too many

00:05:49,940 --> 00:05:53,450
surprises that we go along but there it

00:05:51,770 --> 00:05:56,120
was like it's not apples and oranges

00:05:53,450 --> 00:05:58,700
they do have don't shoot him so I'm so

00:05:56,120 --> 00:06:02,410
nervous I'm so nervous actually deploy

00:05:58,700 --> 00:06:04,220
an app at Clarendon summit all right

00:06:02,410 --> 00:06:08,750
except I'm not mi because we're gonna

00:06:04,220 --> 00:06:11,630
save most time yes all right

00:06:08,750 --> 00:06:13,460
Dudek a native one yes you may or may

00:06:11,630 --> 00:06:16,909
not be aware you can both push code

00:06:13,460 --> 00:06:19,550
that's local to you so whatever is local

00:06:16,909 --> 00:06:20,600
up it goes whether it's uncompelled code

00:06:19,550 --> 00:06:23,750
or whether it's a

00:06:20,600 --> 00:06:27,350
waffle or a precompiled docker images

00:06:23,750 --> 00:06:28,790
it's on a registry and you can do both

00:06:27,350 --> 00:06:29,420
of those things environment variables

00:06:28,790 --> 00:06:32,300
you're good to go

00:06:29,420 --> 00:06:35,210
all right k native if you want to talk

00:06:32,300 --> 00:06:37,640
through it and I'll time yeah so so one

00:06:35,210 --> 00:06:39,800
of the things that key Native you know I

00:06:37,640 --> 00:06:42,650
guess is not quite ready but it's

00:06:39,800 --> 00:06:46,280
getting there is there's not a very good

00:06:42,650 --> 00:06:49,730
user experience so Dimitri cannon from

00:06:46,280 --> 00:06:52,310
pivotal and I last year started creating

00:06:49,730 --> 00:06:54,770
a CLI and then now there's a whole sig

00:06:52,310 --> 00:06:57,770
or on creating an official CLI we're

00:06:54,770 --> 00:07:00,650
still using the old CLI plus some

00:06:57,770 --> 00:07:02,510
additional stuff that dr. Nick did to

00:07:00,650 --> 00:07:05,360
show you how you deploy so basically to

00:07:02,510 --> 00:07:08,630
deploy from a docker image you just say

00:07:05,360 --> 00:07:12,710
KN CTL so that's the tool you deploy

00:07:08,630 --> 00:07:15,430
pass it a name give it a image and then

00:07:12,710 --> 00:07:18,830
target which is an environment variable

00:07:15,430 --> 00:07:21,710
this app is gonna take that target and

00:07:18,830 --> 00:07:23,780
replace it to say halo right so you can

00:07:21,710 --> 00:07:28,130
see one of the things we also do is we

00:07:23,780 --> 00:07:30,140
show this the log out of that when you

00:07:28,130 --> 00:07:31,760
are essentially doing the deployment the

00:07:30,140 --> 00:07:35,300
other way to do is in K native without

00:07:31,760 --> 00:07:38,060
using this tool or the official client

00:07:35,300 --> 00:07:39,620
when it's ready is to essentially do a

00:07:38,060 --> 00:07:42,020
bunch of yamas just like you do in

00:07:39,620 --> 00:07:44,090
kubernetes and then use cube CTL to do

00:07:42,020 --> 00:07:45,590
your deployment this tool just makes it

00:07:44,090 --> 00:07:49,340
easy for you right so one of the things

00:07:45,590 --> 00:07:50,810
can it can do in addition to what you

00:07:49,340 --> 00:07:52,370
can see in cloud foundry well it's

00:07:50,810 --> 00:07:55,760
almost like it's it's basic

00:07:52,370 --> 00:07:57,140
functionality is it so in this first one

00:07:55,760 --> 00:07:59,240
we just assumed it was already built

00:07:57,140 --> 00:08:00,830
obviously that's not for everyone can

00:07:59,240 --> 00:08:02,630
you take source code and build it yes

00:08:00,830 --> 00:08:06,470
you can okay native wants to do it from

00:08:02,630 --> 00:08:07,970
a git repo that example is sort of

00:08:06,470 --> 00:08:09,560
skipping within the second part we've

00:08:07,970 --> 00:08:10,850
sort of shown well there is a way to do

00:08:09,560 --> 00:08:13,820
it from your local source code like

00:08:10,850 --> 00:08:15,110
Cloud Foundry but one think a native can

00:08:13,820 --> 00:08:16,400
do and I know I'm supposed to be the pro

00:08:15,110 --> 00:08:20,060
cloud foundry person and you're supposed

00:08:16,400 --> 00:08:22,100
to talk for the other thing is that you

00:08:20,060 --> 00:08:25,040
can give it you get credentials and it

00:08:22,100 --> 00:08:26,690
will just build from source code and I

00:08:25,040 --> 00:08:28,010
actually like that feature because it's

00:08:26,690 --> 00:08:30,740
one of the things I've been complaining

00:08:28,010 --> 00:08:32,510
about what cloud foundry cannot do it's

00:08:30,740 --> 00:08:33,660
quite family loses or context of where

00:08:32,510 --> 00:08:35,880
this code came from

00:08:33,660 --> 00:08:38,130
you go back to an app and try to figure

00:08:35,880 --> 00:08:39,570
out how to read stage a tree fix it redo

00:08:38,130 --> 00:08:41,849
anything it's like all that information

00:08:39,570 --> 00:08:44,580
was lost yeah and part of the reason we

00:08:41,849 --> 00:08:47,040
have this in Canada is similar to how a

00:08:44,580 --> 00:08:49,920
lot parts of kubernetes is very flexible

00:08:47,040 --> 00:08:51,330
so in Canada there's a portion of it

00:08:49,920 --> 00:08:53,550
that's called a build where you can

00:08:51,330 --> 00:08:55,710
actually create different kinds so one

00:08:53,550 --> 00:08:57,330
of them can actually go from you know

00:08:55,710 --> 00:08:59,550
essentially you can provide your own

00:08:57,330 --> 00:09:04,670
build but there's a bunch ready one of

00:08:59,550 --> 00:09:07,220
them is to be able to build from source

00:09:04,670 --> 00:09:09,270
bill packs you can actually specify

00:09:07,220 --> 00:09:10,950
eventually to Bill packs at i/o and it

00:09:09,270 --> 00:09:12,840
will identify your source code and build

00:09:10,950 --> 00:09:13,860
lots of different ways to build if you

00:09:12,840 --> 00:09:15,390
have an interest and they're actually

00:09:13,860 --> 00:09:17,490
adding a whole bunch of stuff around a

00:09:15,390 --> 00:09:19,620
pipe lining yes next one which is

00:09:17,490 --> 00:09:22,140
interesting right so let's see the score

00:09:19,620 --> 00:09:23,730
where are we now so this is the first

00:09:22,140 --> 00:09:27,870
use case right so this is where I take

00:09:23,730 --> 00:09:31,800
an early lead yeah move yep what so the

00:09:27,870 --> 00:09:33,810
observations I think we covered is that

00:09:31,800 --> 00:09:35,550
they are pretty much on par except

00:09:33,810 --> 00:09:37,620
Canada has a little bit more flexibility

00:09:35,550 --> 00:09:39,090
right but we round it up so that I

00:09:37,620 --> 00:09:41,760
wasn't losing straightaway all right so

00:09:39,090 --> 00:09:42,120
you guys keep it in your head it's one

00:09:41,760 --> 00:09:43,860
to one

00:09:42,120 --> 00:09:47,670
so all right managing this is where I'll

00:09:43,860 --> 00:09:49,760
take a third the later sorry we've got

00:09:47,670 --> 00:09:51,840
give it away you keep giving it away I

00:09:49,760 --> 00:09:57,660
there's no way we get to the end of this

00:09:51,840 --> 00:09:59,760
and Claire pfann reader are we working

00:09:57,660 --> 00:10:01,590
backwards what the hell I mean this is a

00:09:59,760 --> 00:10:03,650
live spread if I find out that we get to

00:10:01,590 --> 00:10:05,420
the end this DB I might have changed it

00:10:03,650 --> 00:10:10,110
keep going

00:10:05,420 --> 00:10:11,730
no I sleep in so much doubt now you

00:10:10,110 --> 00:10:14,220
wanna you can introduce managing effort

00:10:11,730 --> 00:10:16,950
all right so kind of obviously we showed

00:10:14,220 --> 00:10:20,030
you you could push apps both ways both

00:10:16,950 --> 00:10:23,550
both with Cloud Foundry and key native

00:10:20,030 --> 00:10:25,590
but can you do more can you obviously do

00:10:23,550 --> 00:10:27,840
the lifecycle of apps and especially

00:10:25,590 --> 00:10:29,430
today for instance they showed you how

00:10:27,840 --> 00:10:31,830
you can do revisions in Cloud Foundry

00:10:29,430 --> 00:10:34,680
this is calling what about in Canada

00:10:31,830 --> 00:10:36,200
what about scaling you know all of those

00:10:34,680 --> 00:10:38,220
features that you need to do when you're

00:10:36,200 --> 00:10:41,430
essentially putting apps in production

00:10:38,220 --> 00:10:44,970
how does that work in both foundry and

00:10:41,430 --> 00:10:46,620
Canadian and and look if any people by

00:10:44,970 --> 00:10:47,370
the way the people that have decided to

00:10:46,620 --> 00:10:49,410
stand

00:10:47,370 --> 00:10:53,430
is optional there are seats these people

00:10:49,410 --> 00:10:57,180
will let you in you will want you not

00:10:53,430 --> 00:10:58,740
it's gonna look at the widly so again we

00:10:57,180 --> 00:11:00,270
do want to spend most time showing UK

00:10:58,740 --> 00:11:01,950
native things because that's kind of

00:11:00,270 --> 00:11:03,330
probably context ly interesting but this

00:11:01,950 --> 00:11:05,310
is the kind of commands we're talking

00:11:03,330 --> 00:11:07,800
about with Cloud Foundry the ability to

00:11:05,310 --> 00:11:09,930
you know you do you push where and it

00:11:07,800 --> 00:11:12,300
goes through that that build pack life

00:11:09,930 --> 00:11:14,430
cycle mapping one or more routes or zero

00:11:12,300 --> 00:11:16,290
routes components that people talk about

00:11:14,430 --> 00:11:19,380
like getting very frustrated even to see

00:11:16,290 --> 00:11:20,850
if some its own survey talks about do

00:11:19,380 --> 00:11:22,320
you have containers to run it's like yes

00:11:20,850 --> 00:11:24,210
I do and where do you want to run them

00:11:22,320 --> 00:11:26,490
and all the options weren't Cloud

00:11:24,210 --> 00:11:28,230
Foundry like I can run cloud friend you

00:11:26,490 --> 00:11:30,660
I can can run containers on see if they

00:11:28,230 --> 00:11:32,100
are okay you can do anything you like

00:11:30,660 --> 00:11:33,060
you don't have to have a route go for

00:11:32,100 --> 00:11:35,100
gold

00:11:33,060 --> 00:11:36,690
just don't do state but then you

00:11:35,100 --> 00:11:40,170
shouldn't put state on could be knees

00:11:36,690 --> 00:11:42,600
anyway so restarting scaling and this is

00:11:40,170 --> 00:11:44,460
where we can introduce a deviation of

00:11:42,600 --> 00:11:46,500
what K native can do that Cloud Foundry

00:11:44,460 --> 00:11:49,140
cannot and if you want to introduce that

00:11:46,500 --> 00:11:51,120
yeah so one of the things is you see we

00:11:49,140 --> 00:11:53,730
have a star in a double star and it's to

00:11:51,120 --> 00:11:55,230
mention that first when you do a push on

00:11:53,730 --> 00:11:57,089
an app that already exists you don't

00:11:55,230 --> 00:11:58,020
have a revision of the app you replace

00:11:57,089 --> 00:12:00,120
the existing one

00:11:58,020 --> 00:12:01,709
however today you saw you is showing a

00:12:00,120 --> 00:12:03,029
feature that's up-and-coming where

00:12:01,709 --> 00:12:05,279
you'll be able to specify different

00:12:03,029 --> 00:12:07,110
revisions so you can go back and forth

00:12:05,279 --> 00:12:08,910
between them right so that's not quite

00:12:07,110 --> 00:12:10,950
ready but it will come be coming the

00:12:08,910 --> 00:12:14,180
other thing is in the community and

00:12:10,950 --> 00:12:16,470
cloud foundry we have an extension

00:12:14,180 --> 00:12:19,470
service called a port of scaler it's

00:12:16,470 --> 00:12:21,150
actually use various places at I say P

00:12:19,470 --> 00:12:23,400
at IBM and so on where you can actually

00:12:21,150 --> 00:12:24,990
use it to do auto scaling and it's very

00:12:23,400 --> 00:12:27,360
flexible you can auto scale up and down

00:12:24,990 --> 00:12:29,220
so to be fair those exist but they are

00:12:27,360 --> 00:12:31,470
not built into cloud foundry immediately

00:12:29,220 --> 00:12:33,150
and it does scale to zero I'm not sure

00:12:31,470 --> 00:12:34,740
actually that's a good question

00:12:33,150 --> 00:12:38,310
because kind of does do scale to zero

00:12:34,740 --> 00:12:41,010
that's right so in Canada if when you do

00:12:38,310 --> 00:12:43,010
a deploy against the first version that

00:12:41,010 --> 00:12:45,600
we just did right now it actually will

00:12:43,010 --> 00:12:47,130
create another revision oh I look like

00:12:45,600 --> 00:12:49,740
I've forgotten how we look this so you

00:12:47,130 --> 00:12:52,040
can do a service list not old happy

00:12:49,740 --> 00:12:52,040
hello

00:12:53,850 --> 00:12:59,110
so we're looking at the pods for that

00:12:56,980 --> 00:13:00,730
and you can see there are no pods right

00:12:59,110 --> 00:13:01,960
now because it actually scaled out and

00:13:00,730 --> 00:13:03,520
unfortunately didn't show you that they

00:13:01,960 --> 00:13:04,570
would pause it before right but we can

00:13:03,520 --> 00:13:05,980
trim you now like the world's worst

00:13:04,570 --> 00:13:08,590
magic tricks that's okay

00:13:05,980 --> 00:13:10,930
doo doo doo a letter like where's my

00:13:08,590 --> 00:13:13,420
rabbit magic no my rabbit ran away

00:13:10,930 --> 00:13:14,380
where is well let's fix that all right

00:13:13,420 --> 00:13:17,260
do it

00:13:14,380 --> 00:13:19,420
I love sandy environment I love scale to

00:13:17,260 --> 00:13:21,610
zero because you know as someone who

00:13:19,420 --> 00:13:22,960
pays for stuff I like to not pay for

00:13:21,610 --> 00:13:25,570
stuff I don't know I was using so scale

00:13:22,960 --> 00:13:27,730
the jurors is fantastic but let's let's

00:13:25,570 --> 00:13:28,810
send some traffic so without talking

00:13:27,730 --> 00:13:32,290
about how we're going to start routing

00:13:28,810 --> 00:13:33,430
there is a little built-in command where

00:13:32,290 --> 00:13:35,560
even if you haven't got routing a

00:13:33,430 --> 00:13:37,510
conservative when you take a little bit

00:13:35,560 --> 00:13:39,820
of time you'll see a locks out this is

00:13:37,510 --> 00:13:41,350
curl command that's right it and and

00:13:39,820 --> 00:13:42,310
it's sticking time because it's pinning

00:13:41,350 --> 00:13:46,330
it up all right

00:13:42,310 --> 00:13:49,240
I'll do it again yep and we have pods

00:13:46,330 --> 00:13:51,070
now that's various right and then if we

00:13:49,240 --> 00:13:52,570
wait a bit it will scale down five

00:13:51,070 --> 00:13:55,420
minutes and they will start scale it and

00:13:52,570 --> 00:13:58,300
by the way if you had if you all did the

00:13:55,420 --> 00:14:00,280
same thing then it would scale up and it

00:13:58,300 --> 00:14:01,600
actually scales up to whatever number

00:14:00,280 --> 00:14:04,180
yeah I've never built an app that had

00:14:01,600 --> 00:14:06,070
that sort of traffic I know you can get

00:14:04,180 --> 00:14:08,110
that we discussed like putting a little

00:14:06,070 --> 00:14:10,870
bash where it just spin up there look

00:14:08,110 --> 00:14:11,530
into that but what purpose of time let's

00:14:10,870 --> 00:14:13,360
move on

00:14:11,530 --> 00:14:15,520
the other thing actually go back here

00:14:13,360 --> 00:14:17,110
the other thing you can do also which

00:14:15,520 --> 00:14:19,270
we're not showing you here because it

00:14:17,110 --> 00:14:21,640
takes a little bit of time and we have a

00:14:19,270 --> 00:14:23,440
lot to cover is you can actually split

00:14:21,640 --> 00:14:25,030
the traffic pretty straightforward and

00:14:23,440 --> 00:14:27,970
key native where when you have multiple

00:14:25,030 --> 00:14:30,160
revisions it keeps track of them we can

00:14:27,970 --> 00:14:31,930
say I want some percentage in this

00:14:30,160 --> 00:14:33,550
particularly we're gonna do another

00:14:31,930 --> 00:14:37,630
we're gonna build on their employee so

00:14:33,550 --> 00:14:41,350
if we do see to your revision lists as

00:14:37,630 --> 00:14:44,320
minus s is service what we call a nap in

00:14:41,350 --> 00:14:47,920
sort of K native and today's world is

00:14:44,320 --> 00:14:49,510
loyal to service and so there is that

00:14:47,920 --> 00:14:52,990
one revision if we go and throughout the

00:14:49,510 --> 00:14:55,750
ploy again and changed the environment

00:14:52,990 --> 00:14:59,680
okay that's fine okay it does it doesn't

00:14:55,750 --> 00:15:02,710
care yeah so now you can see the

00:14:59,680 --> 00:15:06,350
provision of - exactly and because it's

00:15:02,710 --> 00:15:08,060
only it's gonna say hello to me again

00:15:06,350 --> 00:15:09,350
you're not gonna know but if we could

00:15:08,060 --> 00:15:11,510
have changed it so that the second

00:15:09,350 --> 00:15:13,610
revision now will have a different

00:15:11,510 --> 00:15:15,740
essential resource good right and so

00:15:13,610 --> 00:15:18,200
once this finishes is we see our

00:15:15,740 --> 00:15:20,450
revision and you can see that the route

00:15:18,200 --> 00:15:23,180
has switched over exactly what you would

00:15:20,450 --> 00:15:25,820
expect you expect it to work whilst the

00:15:23,180 --> 00:15:28,220
CNC field tool itself right now does

00:15:25,820 --> 00:15:30,230
have some of the the flexible routing

00:15:28,220 --> 00:15:32,630
features what's important and it's

00:15:30,230 --> 00:15:36,020
hidden by the CNC the the cloud native

00:15:32,630 --> 00:15:39,380
cuddle CLI is that all of this in K

00:15:36,020 --> 00:15:42,890
native is just it's just is the custom

00:15:39,380 --> 00:15:45,290
resource definitions so we could be used

00:15:42,890 --> 00:15:48,230
at doing a lot of this by using the the

00:15:45,290 --> 00:15:49,520
kou cuddle command and what that also

00:15:48,230 --> 00:15:52,240
means is that a lot of this

00:15:49,520 --> 00:15:54,740
functionality isn't K native it's sto

00:15:52,240 --> 00:15:57,050
which you may learn more and more about

00:15:54,740 --> 00:15:58,760
it as coming in to Clare foundry and so

00:15:57,050 --> 00:15:59,510
a lot of these features are just playing

00:15:58,760 --> 00:16:00,980
with Sto

00:15:59,510 --> 00:16:03,380
and you can do a lot of things by

00:16:00,980 --> 00:16:05,000
jumping down from this CLI and just

00:16:03,380 --> 00:16:08,990
configuring sto to do all sorts of

00:16:05,000 --> 00:16:10,970
interesting routing so there's a lot of

00:16:08,990 --> 00:16:15,620
flexibility in what you might like to do

00:16:10,970 --> 00:16:18,860
yeah so let's see the score now matching

00:16:15,620 --> 00:16:19,610
results so the observations are why did

00:16:18,860 --> 00:16:21,320
you do this

00:16:19,610 --> 00:16:23,240
oh that's all right no don't look all

00:16:21,320 --> 00:16:25,430
right well so I think I think it's fair

00:16:23,240 --> 00:16:25,880
to say that ki native as a heads up here

00:16:25,430 --> 00:16:28,660
right

00:16:25,880 --> 00:16:30,590
it comes built in with scale to 0

00:16:28,660 --> 00:16:33,290
scaling up and down is very

00:16:30,590 --> 00:16:34,790
straightforward training in cloud

00:16:33,290 --> 00:16:36,200
foundry there are some of that support

00:16:34,790 --> 00:16:38,000
that's coming but it's not there yet

00:16:36,200 --> 00:16:40,430
yeah the only negative I can think is

00:16:38,000 --> 00:16:44,090
that these beating up ur pods does take

00:16:40,430 --> 00:16:46,640
some seconds yeah sorry we got a guy

00:16:44,090 --> 00:16:50,270
working on this to fix it so if we

00:16:46,640 --> 00:16:52,550
agreed against my wishes to do a

00:16:50,270 --> 00:16:55,490
half-point for Clare foundry even though

00:16:52,550 --> 00:16:57,230
all we see is lots of features and all

00:16:55,490 --> 00:16:57,810
right moving on to the next one

00:16:57,230 --> 00:17:01,770


00:16:57,810 --> 00:17:03,850
[Laughter]

00:17:01,770 --> 00:17:05,920
alright so the next thing is the the

00:17:03,850 --> 00:17:08,439
thing that hopefully you don't have to

00:17:05,920 --> 00:17:09,670
do but guess what you pretty much know

00:17:08,439 --> 00:17:11,260
you're gonna know I had to do this

00:17:09,670 --> 00:17:13,420
research and what debugging was I

00:17:11,260 --> 00:17:15,430
finally been coding for 20 years exactly

00:17:13,420 --> 00:17:18,579
exactly you never had to do it but

00:17:15,430 --> 00:17:20,319
you're the exception so things fail how

00:17:18,579 --> 00:17:23,170
do you access the logs of them how do

00:17:20,319 --> 00:17:24,400
you don't have to ssh into them but

00:17:23,170 --> 00:17:27,100
sometimes you have to do that right so

00:17:24,400 --> 00:17:29,920
how easy it is to do some of this work

00:17:27,100 --> 00:17:32,830
and all of it in Cloud Foundry is pretty

00:17:29,920 --> 00:17:34,780
straight for his real tools you and this

00:17:32,830 --> 00:17:36,310
is fantastic I mean imagine you know I

00:17:34,780 --> 00:17:39,250
have to go find containers and less than

00:17:36,310 --> 00:17:41,110
nonsense so we have we have to log

00:17:39,250 --> 00:17:43,300
commands in a way you can have logs

00:17:41,110 --> 00:17:44,440
where it's all future logs or you can

00:17:43,300 --> 00:17:47,110
have the logs command where it's a

00:17:44,440 --> 00:17:51,640
subset of recent not subset just some

00:17:47,110 --> 00:17:54,010
but um like a recent chunk of logs if

00:17:51,640 --> 00:17:57,010
anyone on the CFCA life team is here I

00:17:54,010 --> 00:17:59,200
beg you please when we don't ask for

00:17:57,010 --> 00:18:02,650
recent give me some recent logs anyway

00:17:59,200 --> 00:18:04,210
very rarely do you say I don't once and

00:18:02,650 --> 00:18:07,380
we've all new locks don't show me old

00:18:04,210 --> 00:18:09,790
logs who has got that problem

00:18:07,380 --> 00:18:11,830
get me some old logs and then show me

00:18:09,790 --> 00:18:15,370
all new logs and then we have to see if

00:18:11,830 --> 00:18:19,030
SSH which if you've never seen I do have

00:18:15,370 --> 00:18:20,470
some app an app redeployed I know we

00:18:19,030 --> 00:18:24,190
skip that a little bit but here my

00:18:20,470 --> 00:18:26,380
little go app you can see if logs in you

00:18:24,190 --> 00:18:29,410
go you can also run a command bit of one

00:18:26,380 --> 00:18:31,570
off I think one off stuff and and this

00:18:29,410 --> 00:18:33,220
is nice for looking at how configuration

00:18:31,570 --> 00:18:35,560
files might have turned out perhaps you

00:18:33,220 --> 00:18:37,120
can run some things internally for the

00:18:35,560 --> 00:18:38,680
sake of the video I don't expect any of

00:18:37,120 --> 00:18:43,020
you to type this tan Buddha other old

00:18:38,680 --> 00:18:43,020
blog post why is this not working faster

00:18:43,140 --> 00:18:46,910
dogs I didn't I I ran the wrong Korean

00:18:45,430 --> 00:18:49,730
I'm super sorry

00:18:46,910 --> 00:18:50,240
that's why I kind of cessation and then

00:18:49,730 --> 00:18:52,730
your dear

00:18:50,240 --> 00:18:55,310
you can LS is SSH bro there's this

00:18:52,730 --> 00:18:57,950
command and and another thing I think

00:18:55,310 --> 00:19:00,740
everyone just moved on but when you jump

00:18:57,950 --> 00:19:02,180
into an SSH session it isn't quite the

00:19:00,740 --> 00:19:04,670
same environment that you think it would

00:19:02,180 --> 00:19:07,070
be it's like the environment before it

00:19:04,670 --> 00:19:08,420
becomes your node app or your go rap or

00:19:07,070 --> 00:19:10,430
whatever so this little command

00:19:08,420 --> 00:19:13,340
there's blog posts explaining this but

00:19:10,430 --> 00:19:14,990
now it's a go environment etc and you're

00:19:13,340 --> 00:19:16,940
inside your app and you can look at log

00:19:14,990 --> 00:19:19,400
files you can try to run commands it

00:19:16,940 --> 00:19:22,310
failed and that's debugging

00:19:19,400 --> 00:19:23,060
are you plugging your your tools no I

00:19:22,310 --> 00:19:24,680
would never

00:19:23,060 --> 00:19:26,570
there is a blog post but I would never

00:19:24,680 --> 00:19:28,670
come up with temp slash life cycle slash

00:19:26,570 --> 00:19:30,440
launcher that's alright very good

00:19:28,670 --> 00:19:32,180
alright so now let's just make it work

00:19:30,440 --> 00:19:35,960
wouldn't you sure sure let's switch to

00:19:32,180 --> 00:19:38,570
key native which is unfortunately a bit

00:19:35,960 --> 00:19:41,330
harder to do but you can list your

00:19:38,570 --> 00:19:41,870
services log so the log is pretty

00:19:41,330 --> 00:19:45,610
straightforward

00:19:41,870 --> 00:19:50,270
let's do that this app so this is

00:19:45,610 --> 00:19:52,790
service list and this is a patentee this

00:19:50,270 --> 00:19:54,170
is the command and first thing so you

00:19:52,790 --> 00:19:56,420
can sort of think things are not in a

00:19:54,170 --> 00:19:57,710
happy condition right now as you're

00:19:56,420 --> 00:20:00,470
scaling down because they're scaling

00:19:57,710 --> 00:20:01,550
down there it's sort of unloved if we

00:20:00,470 --> 00:20:08,600
were to give them a little bit of curl

00:20:01,550 --> 00:20:11,330
action yep back to that although do they

00:20:08,600 --> 00:20:13,220
listen you know happy and healthy again

00:20:11,330 --> 00:20:16,490
so again the scale up and scale down

00:20:13,220 --> 00:20:19,100
automatically right ok and then we can

00:20:16,490 --> 00:20:23,150
logs so can CTL logs yeah and you can

00:20:19,100 --> 00:20:26,270
follow the log in the tool right so if

00:20:23,150 --> 00:20:33,080
you curl in a different window then we

00:20:26,270 --> 00:20:35,600
should be able to see it so when it hits

00:20:33,080 --> 00:20:37,610
it who is he an entry right it doesn't

00:20:35,600 --> 00:20:42,980
love computers so that's kind of nice

00:20:37,610 --> 00:20:44,420
and then in order to to actually SSH

00:20:42,980 --> 00:20:46,460
what you're doing is you're looking at

00:20:44,420 --> 00:20:47,990
first let me find the pod that the

00:20:46,460 --> 00:20:49,550
service is actually running on because

00:20:47,990 --> 00:20:50,900
you know when it scales down the pod

00:20:49,550 --> 00:20:52,940
will disappear so you need to find a

00:20:50,900 --> 00:20:56,060
current pod once you have that pod then

00:20:52,940 --> 00:20:58,559
you can with cube control exact Sh and

00:20:56,060 --> 00:21:02,309
get into that pod so

00:20:58,559 --> 00:21:07,559
so I guess pod list yeah how you already

00:21:02,309 --> 00:21:09,659
did that cool similar to sort of the

00:21:07,559 --> 00:21:13,620
docker exact and then you're there and

00:21:09,659 --> 00:21:16,020
you can LS so you mean now in the source

00:21:13,620 --> 00:21:18,270
code right and there's their little

00:21:16,020 --> 00:21:19,919
process running along perfect good times

00:21:18,270 --> 00:21:21,659
good okay so let's see the results

00:21:19,919 --> 00:21:25,320
because we were running out of time we

00:21:21,659 --> 00:21:27,240
gotta get to the next thing so what do

00:21:25,320 --> 00:21:28,950
you guys think how you give it away

00:21:27,240 --> 00:21:32,309
alright so it's about the same right now

00:21:28,950 --> 00:21:34,559
like it says okay it's okay

00:21:32,309 --> 00:21:37,169
God the same about the same alright cool

00:21:34,559 --> 00:21:39,390
so let's move on to the number four okay

00:21:37,169 --> 00:21:40,980
so this is one where you know if you've

00:21:39,390 --> 00:21:42,659
been into cod furniture for a long time

00:21:40,980 --> 00:21:44,669
when we are borrowing clap entries

00:21:42,659 --> 00:21:47,940
language here yeah it's a it's a it's a

00:21:44,669 --> 00:21:49,950
shining jewel about about three things

00:21:47,940 --> 00:21:51,570
that you get from someone else someone

00:21:49,950 --> 00:21:53,370
you know this is what I think one of our

00:21:51,570 --> 00:21:57,059
founders great distinction absolutely is

00:21:53,370 --> 00:21:59,280
is saying you do apps don't don't do

00:21:57,059 --> 00:22:00,900
state you're not very good at it and

00:21:59,280 --> 00:22:02,909
it's true you've low note you don't know

00:22:00,900 --> 00:22:04,340
how to look after state alright so we'll

00:22:02,909 --> 00:22:07,110
get some other people to this state

00:22:04,340 --> 00:22:09,480
never let anyone that you know run

00:22:07,110 --> 00:22:11,159
apt-get install my sequel helm install

00:22:09,480 --> 00:22:13,830
my sequel docker run my steeple don't do

00:22:11,159 --> 00:22:16,260
any of those things the helm chart for

00:22:13,830 --> 00:22:19,860
my sequel does not have the word backup

00:22:16,260 --> 00:22:21,840
in it this has a little quick indicator

00:22:19,860 --> 00:22:24,750
of what they think about data

00:22:21,840 --> 00:22:26,700
so anyway services so no exactly right

00:22:24,750 --> 00:22:30,450
yeah and let's show how you do that in

00:22:26,700 --> 00:22:35,010
cloud foundry beautiful we have a few

00:22:30,450 --> 00:22:36,270
ways do what you want me to do it you've

00:22:35,010 --> 00:22:37,440
probably seen how far down you would

00:22:36,270 --> 00:22:39,510
have say in the marketplace and the

00:22:37,440 --> 00:22:41,760
create service thing but just remember

00:22:39,510 --> 00:22:43,320
you also have what I call the post-it

00:22:41,760 --> 00:22:46,140
note system of where someone else says

00:22:43,320 --> 00:22:47,640
here's your database and and you can do

00:22:46,140 --> 00:22:51,780
it with with setting environment

00:22:47,640 --> 00:22:55,380
variables or the the cups create user

00:22:51,780 --> 00:22:57,240
provided service method that's all then

00:22:55,380 --> 00:22:58,830
you know with their service broker and

00:22:57,240 --> 00:23:01,169
so you have these three different main

00:22:58,830 --> 00:23:02,820
different ways do you have the other one

00:23:01,169 --> 00:23:05,070
which is not recommended which is where

00:23:02,820 --> 00:23:07,260
you put it all in a config file and push

00:23:05,070 --> 00:23:11,230
it you could do that as well but then

00:23:07,260 --> 00:23:13,630
that is not preferred see ya

00:23:11,230 --> 00:23:16,090
and behind all this is is there open

00:23:13,630 --> 00:23:17,919
service broker API concept so these

00:23:16,090 --> 00:23:19,780
requests create service blind service

00:23:17,919 --> 00:23:22,240
are going off from the cloud controller

00:23:19,780 --> 00:23:23,590
off to a broker and it's going off and

00:23:22,240 --> 00:23:25,390
doing something possibly provisioning

00:23:23,590 --> 00:23:30,340
infrastructure definitely setting up

00:23:25,390 --> 00:23:31,270
backups and if not you should do backups

00:23:30,340 --> 00:23:33,160
backups are great

00:23:31,270 --> 00:23:37,809
you'll love backups the moment you want

00:23:33,160 --> 00:23:39,970
them they're like insurance all right so

00:23:37,809 --> 00:23:42,190
we move to key native this this portion

00:23:39,970 --> 00:23:44,290
to do it live is a bit tedious and long

00:23:42,190 --> 00:23:46,419
but hopefully you all have seen this in

00:23:44,290 --> 00:23:50,110
K native it's it's we don't have support

00:23:46,419 --> 00:23:51,880
we skipping the habit that's right

00:23:50,110 --> 00:23:54,100
that's right so in creative assuming you

00:23:51,880 --> 00:23:56,530
had your service created and expose

00:23:54,100 --> 00:23:59,290
maybe even with Cloud Foundry you can

00:23:56,530 --> 00:24:02,110
actually with key and CTL access it by

00:23:59,290 --> 00:24:04,270
essentially using the M secret so this

00:24:02,110 --> 00:24:07,000
command where you deploy the service or

00:24:04,270 --> 00:24:09,940
a revision and you pass an F secret will

00:24:07,000 --> 00:24:12,370
actually include that in your as a

00:24:09,940 --> 00:24:14,140
config map for your app and then you'll

00:24:12,370 --> 00:24:15,790
be able to access it within the app so

00:24:14,140 --> 00:24:17,140
it creates an environment variable for

00:24:15,790 --> 00:24:18,910
you to access so you can access your

00:24:17,140 --> 00:24:20,380
services that way and so on I will

00:24:18,910 --> 00:24:22,090
quickly introduce that's one way to do

00:24:20,380 --> 00:24:24,010
if you're going into the kubernetes

00:24:22,090 --> 00:24:28,600
world I will quickly introduce you to

00:24:24,010 --> 00:24:29,860
the Service Catalog project which is

00:24:28,600 --> 00:24:31,990
where you're in kubernetes

00:24:29,860 --> 00:24:33,250
and you have this idea if I want

00:24:31,990 --> 00:24:35,470
services just like we do in Cloud

00:24:33,250 --> 00:24:37,000
Foundry I want them not necessarily helm

00:24:35,470 --> 00:24:38,559
installing things on my cluster that's

00:24:37,000 --> 00:24:40,480
not what exactly we need I just need

00:24:38,559 --> 00:24:43,350
someone else to be responsible that

00:24:40,480 --> 00:24:46,169
abstraction of concerns they have that

00:24:43,350 --> 00:24:50,169
there's also the concept of operators

00:24:46,169 --> 00:24:53,770
but and in this example is me I have a a

00:24:50,169 --> 00:24:55,450
broker that goes off to see if and uses

00:24:53,770 --> 00:24:57,340
uses someone else's so there's a talk

00:24:55,450 --> 00:24:59,020
tomorrow where if you want interested in

00:24:57,340 --> 00:25:01,299
how your kubernetes can just go and

00:24:59,020 --> 00:25:03,429
borrow all your brokers from your cloud

00:25:01,299 --> 00:25:05,980
foundry there's a tool for that and

00:25:03,429 --> 00:25:07,330
that's just a quick demo where they you

00:25:05,980 --> 00:25:11,169
know all the credentials just come back

00:25:07,330 --> 00:25:12,610
into your your pods yep so and then and

00:25:11,169 --> 00:25:14,320
then back to this so then we do it as an

00:25:12,610 --> 00:25:16,799
environment variable alright so let's

00:25:14,320 --> 00:25:19,270
see the observation and the score so

00:25:16,799 --> 00:25:20,590
obviously that came from cloud foundry

00:25:19,270 --> 00:25:22,990
and key native doesn't know anything

00:25:20,590 --> 00:25:23,690
about it but you can still use them too

00:25:22,990 --> 00:25:25,879
so

00:25:23,690 --> 00:25:27,950
is catalogue and I guess environment

00:25:25,879 --> 00:25:31,070
variable so right but so good

00:25:27,950 --> 00:25:34,399
okay so Cloud Foundry now has a half

00:25:31,070 --> 00:25:36,350
point ahead so that's good okay now we

00:25:34,399 --> 00:25:38,750
get to the last rising this is mater

00:25:36,350 --> 00:25:41,090
price I know I know this may be the most

00:25:38,750 --> 00:25:42,340
controversial one except I think it's

00:25:41,090 --> 00:25:44,870
pretty straightforward in a sense that

00:25:42,340 --> 00:25:47,210
if you were here you probably form a

00:25:44,870 --> 00:25:48,919
small big enterprise and you want to

00:25:47,210 --> 00:25:51,529
deal with the things that enterprise

00:25:48,919 --> 00:25:53,299
deal with so you want to be able to deal

00:25:51,529 --> 00:25:56,179
with access control manage your users

00:25:53,299 --> 00:25:58,669
and your groups and divide maybe your

00:25:56,179 --> 00:26:00,610
apps into the organization make it

00:25:58,669 --> 00:26:03,440
reflect your organization and so on and

00:26:00,610 --> 00:26:06,350
isolate them to each other right so if

00:26:03,440 --> 00:26:08,480
you think of of these as enterprising

00:26:06,350 --> 00:26:10,940
feature what are the supports in Cloud

00:26:08,480 --> 00:26:16,460
Foundry versus what you have in Canada

00:26:10,940 --> 00:26:18,379
so so for the orgs and spaces if you're

00:26:16,460 --> 00:26:20,870
not familiar we've never really thought

00:26:18,379 --> 00:26:23,659
about why you haven't logs and two

00:26:20,870 --> 00:26:27,950
primary things or give you is who's

00:26:23,659 --> 00:26:30,019
gonna pay for it that's the who's using

00:26:27,950 --> 00:26:31,759
resources all the for you know someone's

00:26:30,019 --> 00:26:33,440
gonna pay for it you also get resource

00:26:31,759 --> 00:26:36,559
quotas about how not to spend too much

00:26:33,440 --> 00:26:38,779
and domains so if you've got an outside

00:26:36,559 --> 00:26:41,929
domain stuck and Wayne you know I being

00:26:38,779 --> 00:26:44,120
calm I trust that IBM comm is pointing

00:26:41,929 --> 00:26:46,000
at a Cloud Foundry I Billy mix I'm sure

00:26:44,120 --> 00:26:48,980
that'd be where you put all your stuff

00:26:46,000 --> 00:26:50,450
that's at the org org level and there of

00:26:48,980 --> 00:26:52,730
course you can have shared MySpace and

00:26:50,450 --> 00:26:54,529
then pushing Clara foundry at an

00:26:52,730 --> 00:26:56,139
enterprising level and look there's a

00:26:54,529 --> 00:26:58,190
whole conference that you should go to

00:26:56,139 --> 00:27:01,129
today you should have done that and

00:26:58,190 --> 00:27:03,230
about all the enterprising stuff that we

00:27:01,129 --> 00:27:05,240
do in Cloud Foundry it's we spent so

00:27:03,230 --> 00:27:07,879
much money and time and energy on ask

00:27:05,240 --> 00:27:10,629
secrets rotations the the whole Bosh

00:27:07,879 --> 00:27:12,860
deployment ownership of lifecycle

00:27:10,629 --> 00:27:14,330
container care networking and and an

00:27:12,860 --> 00:27:16,340
isolation segments of two others three

00:27:14,330 --> 00:27:18,470
yeah those are all features that come

00:27:16,340 --> 00:27:20,240
built-in with tough foundry to help you

00:27:18,470 --> 00:27:23,090
it is right yes when you heat people

00:27:20,240 --> 00:27:26,899
sort of compare cloud foundry and things

00:27:23,090 --> 00:27:28,730
just wistfully compare them as if to say

00:27:26,899 --> 00:27:31,070
that these things we've spent you know

00:27:28,730 --> 00:27:32,539
so what do you have amounts of time no

00:27:31,070 --> 00:27:36,470
I'm not gonna stop this stuff is

00:27:32,539 --> 00:27:37,170
important and we need even be doing this

00:27:36,470 --> 00:27:39,420
talk

00:27:37,170 --> 00:27:43,130
you can't do any of this stuff well we

00:27:39,420 --> 00:27:48,810
have namespaces come on giggles buddy oh

00:27:43,130 --> 00:27:50,730
you've got nine spices yeah and you want

00:27:48,810 --> 00:27:53,510
to use up there you can you can just

00:27:50,730 --> 00:27:53,510
accidentally harm

00:27:54,050 --> 00:28:02,990
what was it coop control right get all

00:27:57,720 --> 00:28:02,990
no will teach you nervous stupid no I um

00:28:03,530 --> 00:28:11,190
my space my space my namespace and now

00:28:08,880 --> 00:28:12,510
you can actually feel some serious on

00:28:11,190 --> 00:28:13,890
the inside so one of the things we

00:28:12,510 --> 00:28:17,160
didn't show you is every time you did

00:28:13,890 --> 00:28:18,510
your can CTL deploy we are using the

00:28:17,160 --> 00:28:20,040
default namespace because we didn't

00:28:18,510 --> 00:28:22,710
specify it so one thing you can do is

00:28:20,040 --> 00:28:24,870
you can say minus m and then specify any

00:28:22,710 --> 00:28:26,520
namespace in your cluster and we'll put

00:28:24,870 --> 00:28:28,650
those apps in that namespace so that way

00:28:26,520 --> 00:28:32,220
no III could say why I shouldn't have

00:28:28,650 --> 00:28:33,750
quoted my app that was done I mean call

00:28:32,220 --> 00:28:35,550
it my space doesn't make it any better

00:28:33,750 --> 00:28:41,820
yeah but I'm quite already existing

00:28:35,550 --> 00:28:43,230
writer I know it it died and then got

00:28:41,820 --> 00:28:45,000
reelected cetera and all the other stuff

00:28:43,230 --> 00:28:46,800
exactly and then now you can specify

00:28:45,000 --> 00:28:49,200
that namespace and it will segment them

00:28:46,800 --> 00:28:51,300
and so on alright but you still are

00:28:49,200 --> 00:28:53,460
dealing with one cluster right so you're

00:28:51,300 --> 00:28:55,140
not dealing with different servers it's

00:28:53,460 --> 00:28:57,360
not isolated from that perspective

00:28:55,140 --> 00:28:59,850
if in doubt make another Cubans cluster

00:28:57,360 --> 00:29:01,740
yes and and to be fair kubernetes is

00:28:59,850 --> 00:29:04,290
working the community there is working

00:29:01,740 --> 00:29:06,990
on trying to figure out how to do to

00:29:04,290 --> 00:29:08,790
allow you to do federated clusters to

00:29:06,990 --> 00:29:10,770
make it a little bit easier to divide

00:29:08,790 --> 00:29:14,130
them isolate them and so on but it's not

00:29:10,770 --> 00:29:15,510
there at least at this point I think but

00:29:14,130 --> 00:29:17,280
we write and then but the easier stuff

00:29:15,510 --> 00:29:19,350
so if you want to have public apps

00:29:17,280 --> 00:29:21,210
versus private apps and and then you'd

00:29:19,350 --> 00:29:22,470
go into the east yo you can do a lot of

00:29:21,210 --> 00:29:24,480
that work but you have to do it yourself

00:29:22,470 --> 00:29:26,340
so in key native is not yet exposed

00:29:24,480 --> 00:29:29,460
doesn't mean it won't be exposed soon

00:29:26,340 --> 00:29:31,170
but it's not at this point so the

00:29:29,460 --> 00:29:34,400
results are you know in cloud foundry

00:29:31,170 --> 00:29:37,080
there's definitely a lot more enterprise

00:29:34,400 --> 00:29:40,260
features in mind because it gives you

00:29:37,080 --> 00:29:44,970
first class access to the a native is

00:29:40,260 --> 00:29:47,580
not so much in that space right but you

00:29:44,970 --> 00:29:49,430
have very powerful ways of you know

00:29:47,580 --> 00:29:52,070
creating namespaces and

00:29:49,430 --> 00:29:58,490
and labels and how you can divide your

00:29:52,070 --> 00:30:00,290
work to make it map what you need okay

00:29:58,490 --> 00:30:02,240
so no I highly you haven't been keeping

00:30:00,290 --> 00:30:07,430
track of my head yeah I know I haven't I

00:30:02,240 --> 00:30:10,640
don't know if I really have yeah so so

00:30:07,430 --> 00:30:17,320
so based on our subjective view at this

00:30:10,640 --> 00:30:17,320
point we you rank it this way a winner

00:30:21,520 --> 00:30:25,940
fair enough fair enough fair enough

00:30:23,810 --> 00:30:28,010
all right let's let's conclude and see

00:30:25,940 --> 00:30:31,330
if we have some questions don't worry

00:30:28,010 --> 00:30:33,800
about it all right get to the conclusion

00:30:31,330 --> 00:30:36,620
what that was it wasn't it no there's

00:30:33,800 --> 00:30:39,200
one more site okay so I think the key

00:30:36,620 --> 00:30:40,790
here is that one is mature one is not so

00:30:39,200 --> 00:30:46,670
in some ways it's not a fair comparison

00:30:40,790 --> 00:30:49,100
but she was because cal foundry has had

00:30:46,670 --> 00:30:52,100
years to get to where it is right now

00:30:49,100 --> 00:30:54,740
right whereas key native is less than a

00:30:52,100 --> 00:30:56,780
year old and if you go to the repo it's

00:30:54,740 --> 00:30:58,760
still not ready but the important thing

00:30:56,780 --> 00:31:01,310
is if you all here because you like

00:30:58,760 --> 00:31:05,630
Cloud Foundry in less than a year here's

00:31:01,310 --> 00:31:07,880
this brand-new pass that is really cool

00:31:05,630 --> 00:31:10,790
features getting very close to matching

00:31:07,880 --> 00:31:13,790
everything we have so this is not to say

00:31:10,790 --> 00:31:15,680
it's a fight but you know weekly release

00:31:13,790 --> 00:31:19,520
any other day use something else right

00:31:15,680 --> 00:31:21,530
the same build pack system that you know

00:31:19,520 --> 00:31:22,850
it's a same networking but premise you

00:31:21,530 --> 00:31:24,740
know you've got traffic coming in

00:31:22,850 --> 00:31:26,660
service on the back end right I got

00:31:24,740 --> 00:31:29,360
revisions it and it's on top of

00:31:26,660 --> 00:31:31,340
kubernetes which is super hot and right

00:31:29,360 --> 00:31:33,650
sliding straight to the LinkedIn profile

00:31:31,340 --> 00:31:34,370
I mean is this this this stuff's bright

00:31:33,650 --> 00:31:38,210
for LinkedIn

00:31:34,370 --> 00:31:39,440
I mean don't forget to buzzwords what we

00:31:38,210 --> 00:31:40,700
got always many links obviously you're

00:31:39,440 --> 00:31:41,780
not gonna click those now because that

00:31:40,700 --> 00:31:43,850
would involve you touching my laptop

00:31:41,780 --> 00:31:46,400
which would be weird exactly so we got a

00:31:43,850 --> 00:31:48,590
bunch of links we we had a couple blog

00:31:46,400 --> 00:31:50,780
posts on K and CT are interested I think

00:31:48,590 --> 00:31:53,480
doctor Nick had a few blog posts as well

00:31:50,780 --> 00:31:54,650
and he has this really really like

00:31:53,480 --> 00:31:57,260
because I was interested to see how

00:31:54,650 --> 00:31:59,930
similar it was and like six or so blog

00:31:57,260 --> 00:32:01,820
person wrote go through that that deploy

00:31:59,930 --> 00:32:02,430
an app right how do you do build how do

00:32:01,820 --> 00:32:05,310
you do

00:32:02,430 --> 00:32:07,170
my secrets and things so check this out

00:32:05,310 --> 00:32:11,520
and then let's see if you have any

00:32:07,170 --> 00:32:29,670
questions there we go we wanted to make

00:32:11,520 --> 00:32:38,400
sure we have questions yes please it's

00:32:29,670 --> 00:32:41,250
boring question next question no it's

00:32:38,400 --> 00:32:43,530
not it's not more mature than that but I

00:32:41,250 --> 00:32:45,780
think I think at this point part of

00:32:43,530 --> 00:32:47,300
what's gonna happen you see and I don't

00:32:45,780 --> 00:32:50,160
want to make future predictions but

00:32:47,300 --> 00:32:51,780
you'll see companies taking what is

00:32:50,160 --> 00:32:53,340
available in the community and

00:32:51,780 --> 00:32:55,230
repackaging it and as part of those

00:32:53,340 --> 00:32:56,670
repackaging probably adding some of

00:32:55,230 --> 00:32:59,460
those enterprising features and security

00:32:56,670 --> 00:33:00,990
I mean it's a packaging the interesting

00:32:59,460 --> 00:33:06,870
because there are other projects like

00:33:00,990 --> 00:33:08,550
RIF yes and what's IBM's opens open with

00:33:06,870 --> 00:33:10,830
some risk open and there are others

00:33:08,550 --> 00:33:13,020
where as top level projects they are

00:33:10,830 --> 00:33:15,300
built upon k native as a native was like

00:33:13,020 --> 00:33:17,960
you've heard kuben is referred to as a

00:33:15,300 --> 00:33:21,150
platform for building platforms this is

00:33:17,960 --> 00:33:23,190
more of that you can use obviously we've

00:33:21,150 --> 00:33:25,110
shown you can use K native directly but

00:33:23,190 --> 00:33:27,920
in part it was it was designed to be our

00:33:25,110 --> 00:33:30,840
allow these higher-order functions

00:33:27,920 --> 00:33:34,590
alright any other questions boring or

00:33:30,840 --> 00:33:40,940
not that's good come on Jules you have a

00:33:34,590 --> 00:33:40,940
question no okay

00:33:49,480 --> 00:33:55,940
all right so it's not Adams dr. Jules is

00:33:52,580 --> 00:33:58,220
a perspective that you know that future

00:33:55,940 --> 00:34:01,840
version of ways Cloud Foundry might use

00:33:58,220 --> 00:34:01,840
the parts of of Cana

00:35:17,079 --> 00:35:20,960
so what you're saying is there's gonna

00:35:19,279 --> 00:35:23,749
be pads on top of fires on top of fires

00:35:20,960 --> 00:35:58,640
on top of fires on top of fast all the

00:35:23,749 --> 00:36:00,739
way yeah on the on the the use of words

00:35:58,640 --> 00:36:02,930
and and for the people watching who are

00:36:00,739 --> 00:36:06,219
not here dr. Jill says really

00:36:02,930 --> 00:36:08,960
interesting things and you missed it and

00:36:06,219 --> 00:36:10,460
any other questions and so that's one of

00:36:08,960 --> 00:36:11,869
the things this project is if we go back

00:36:10,460 --> 00:36:13,729
to the definition they call it the

00:36:11,869 --> 00:36:16,609
buzzword bingo sly Baptist and it's

00:36:13,729 --> 00:36:17,900
called serverless yes and I think

00:36:16,609 --> 00:36:19,430
there's the word functions but certainly

00:36:17,900 --> 00:36:22,039
the people that make it talked about

00:36:19,430 --> 00:36:25,190
functions a lot and I think one thing

00:36:22,039 --> 00:36:26,809
we've proven or demonstrated is what the

00:36:25,190 --> 00:36:29,690
hell are they talking about this looks

00:36:26,809 --> 00:36:31,460
just like a platform you I feel like

00:36:29,690 --> 00:36:34,069
they're using these words just to try to

00:36:31,460 --> 00:36:35,809
pick up a new way for a new language but

00:36:34,069 --> 00:36:38,180
it's just it scales down to zero money

00:36:35,809 --> 00:36:40,039
it's goes to zero that's that's what

00:36:38,180 --> 00:36:43,059
makes service yes well when you can just

00:36:40,039 --> 00:36:43,059
pack up the whole thing and go home

00:36:43,380 --> 00:36:57,240
like any final questions no comment yes

00:36:51,310 --> 00:36:59,230
NEMA for my BM by Roy stand up yeah

00:36:57,240 --> 00:37:03,390
contributor and so many things including

00:36:59,230 --> 00:37:03,390
Diego and Irina and so on yeah please

00:37:34,830 --> 00:37:40,390
you know like Tribble thankful at home

00:37:37,920 --> 00:37:41,740
he never said this is of the seminal

00:37:40,390 --> 00:37:43,420
topic of whether or not we do want to

00:37:41,740 --> 00:37:45,520
keep replacing layers or whether we

00:37:43,420 --> 00:37:50,200
should own the entire stack versus delft

00:37:45,520 --> 00:37:54,850
defer to other ecosystems I have an

00:37:50,200 --> 00:37:56,440
opinion on this but let's see or you can

00:37:54,850 --> 00:37:58,840
do both yes that's true

00:37:56,440 --> 00:38:01,630
why do you have to eat or maybe you do a

00:37:58,840 --> 00:38:07,990
little bit of books right did you want

00:38:01,630 --> 00:38:09,490
to say something Jules then Jules said

00:38:07,990 --> 00:38:11,520
nothing interesting they didn't say

00:38:09,490 --> 00:38:11,520
anything

00:38:18,780 --> 00:38:34,780
yeah look we brought in sto we produced

00:38:33,130 --> 00:38:36,250
yo they're redoing the whole building

00:38:34,780 --> 00:38:37,600
and collaboration with other people I

00:38:36,250 --> 00:38:39,250
think the way to look at it is from an

00:38:37,600 --> 00:38:42,070
economic point of view also right it

00:38:39,250 --> 00:38:45,430
costs money to build stuff and it costs

00:38:42,070 --> 00:38:47,620
money to have could into own code if you

00:38:45,430 --> 00:38:49,600
talk to rob me from pivotal one of the

00:38:47,620 --> 00:38:52,420
things he tells me all the time I have

00:38:49,600 --> 00:38:54,430
too much good I'm rich and could and

00:38:52,420 --> 00:38:56,440
that's a very true statement right and

00:38:54,430 --> 00:38:58,150
it's a very expensive statement because

00:38:56,440 --> 00:39:00,760
when you have a lot of good so how can

00:38:58,150 --> 00:39:02,440
we reduce that so we can reuse other

00:39:00,760 --> 00:39:03,790
things but let's see there's a question

00:39:02,440 --> 00:39:40,780
in the back maybe the last one yes

00:39:03,790 --> 00:39:42,550
please that's true yeah yeah it's more

00:39:40,780 --> 00:39:44,880
cost-efficient thank you for this thank

00:39:42,550 --> 00:39:48,090
you everybody for joining we it

00:39:44,880 --> 00:39:48,090

YouTube URL: https://www.youtube.com/watch?v=4EjjP_59dpE


