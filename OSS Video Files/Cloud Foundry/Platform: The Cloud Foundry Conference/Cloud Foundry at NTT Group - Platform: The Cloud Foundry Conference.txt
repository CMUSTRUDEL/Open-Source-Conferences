Title: Cloud Foundry at NTT Group - Platform: The Cloud Foundry Conference
Publication date: 2013-11-22
Playlist: Platform: The Cloud Foundry Conference
Description: 
	Cloud Foundry at NTT Group
Yudai Iwasaki, Lead Engineer, NTT Group
Platform: The Cloud Foundry Conference (http://www.platformcf.com) September 8-9, 2013
Captions: 
	00:00:00,870 --> 00:00:03,979
[Music]

00:00:05,810 --> 00:00:13,280
they I'm going okay of going to talk

00:00:10,320 --> 00:00:17,369
about how we launched commercial public

00:00:13,280 --> 00:00:20,880
service successfully with boundary so

00:00:17,369 --> 00:00:23,789
i'm yuda sake home entity and i have

00:00:20,880 --> 00:00:25,670
been working on Cloud Foundry for about

00:00:23,789 --> 00:00:29,580
two years

00:00:25,670 --> 00:00:33,719
this is the ultra of my fashion today

00:00:29,580 --> 00:00:37,500
first I believe we introduce my company

00:00:33,719 --> 00:00:43,110
and our public service named cloud N and

00:00:37,500 --> 00:00:45,390
then I'll explain why we chose Cloud

00:00:43,110 --> 00:00:51,270
Foundry as the best system for our

00:00:45,390 --> 00:00:54,750
service and how we develop in how we

00:00:51,270 --> 00:01:00,629
have been developing our Service Cloud

00:00:54,750 --> 00:01:03,660
Foundry let me enter this our company we

00:01:00,629 --> 00:01:07,939
the entity group is Japanese telecom

00:01:03,660 --> 00:01:12,840
company and it is one of the biggest

00:01:07,939 --> 00:01:15,570
telecom company in in the world and we

00:01:12,840 --> 00:01:16,799
are providing various network services

00:01:15,570 --> 00:01:22,369
all over the world

00:01:16,799 --> 00:01:32,850
and now we are working on family as our

00:01:22,369 --> 00:01:36,000
global cloud strategy we launched public

00:01:32,850 --> 00:01:40,290
cloud service last year it is named

00:01:36,000 --> 00:01:45,780
cloud N and it has many useful functions

00:01:40,290 --> 00:01:50,280
such as is load balancers data storage

00:01:45,780 --> 00:01:54,450
and data bases and of course a service

00:01:50,280 --> 00:01:59,640
based on 12 founder e cloud and service

00:01:54,450 --> 00:02:02,520
now offer us 3 the full data centers in

00:01:59,640 --> 00:02:06,299
Japan and the United States and now we

00:02:02,520 --> 00:02:09,840
are planning to extend their available

00:02:06,299 --> 00:02:10,789
religions and at the end of this year

00:02:09,840 --> 00:02:13,459
and

00:02:10,789 --> 00:02:18,049
the center in the asia-pacific region

00:02:13,459 --> 00:02:21,860
with that operating so if this session

00:02:18,049 --> 00:02:25,909
sparks your interest in our lobby

00:02:21,860 --> 00:02:29,180
pretrial cloud and later well let's move

00:02:25,909 --> 00:02:33,530
on to the main topic of my presentation

00:02:29,180 --> 00:02:40,280
today this is an overview of our cloud

00:02:33,530 --> 00:02:46,459
and past service the service with launch

00:02:40,280 --> 00:02:49,579
subs last March and it is based on 1200

00:02:46,459 --> 00:02:54,530
version 1 and of course it is compatible

00:02:49,579 --> 00:02:57,440
with the Cloud Foundry equal problem we

00:02:54,530 --> 00:03:00,379
are we have been extending Cloud Foundry

00:02:57,440 --> 00:03:04,609
to integrate it with other cloud

00:03:00,379 --> 00:03:08,420
services so users can and operate entire

00:03:04,609 --> 00:03:11,659
cloud services easily and smoothly so

00:03:08,420 --> 00:03:14,810
the main topic today of my presentation

00:03:11,659 --> 00:03:20,359
today is why we chose 12 and early for

00:03:14,810 --> 00:03:23,599
our best best system this racial our

00:03:20,359 --> 00:03:29,980
primary requirement when we started the

00:03:23,599 --> 00:03:33,919
project we need extensible portable

00:03:29,980 --> 00:03:38,260
scalable and reliable based system these

00:03:33,919 --> 00:03:44,510
points are essential to enterprise past

00:03:38,260 --> 00:03:47,569
service so for example the portability

00:03:44,510 --> 00:03:50,090
of application is very very important

00:03:47,569 --> 00:03:53,900
for enterprise users because they want

00:03:50,090 --> 00:03:56,930
to learn the application both on public

00:03:53,900 --> 00:03:59,870
cloud and private class and sometimes

00:03:56,930 --> 00:04:03,169
they want to need to run their

00:03:59,870 --> 00:04:10,970
application even own standalone

00:04:03,169 --> 00:04:14,959
environments what we solved my important

00:04:10,970 --> 00:04:19,250
was the extensible design of this system

00:04:14,959 --> 00:04:21,919
because cloud APIs service is not a

00:04:19,250 --> 00:04:23,660
separate service we pull by the provide

00:04:21,919 --> 00:04:27,260
for users

00:04:23,660 --> 00:04:32,240
it must be integrated with other cloud

00:04:27,260 --> 00:04:36,020
services so we need needed to extend the

00:04:32,240 --> 00:04:41,810
best system by ourselves to connect to

00:04:36,020 --> 00:04:46,420
it with other cloud services so Cloud

00:04:41,810 --> 00:04:51,380
Foundry was and is indeed scalable

00:04:46,420 --> 00:04:54,500
extensible reliable and portable the

00:04:51,380 --> 00:04:58,550
scalability avocado foundry has already

00:04:54,500 --> 00:05:02,540
tested by many users for example it

00:04:58,550 --> 00:05:06,020
works on single node and also it works

00:05:02,540 --> 00:05:10,880
on a cluster of more than 500 service

00:05:06,020 --> 00:05:14,650
and what we were we focus focus

00:05:10,880 --> 00:05:18,800
especially was it's extensible design

00:05:14,650 --> 00:05:23,350
cloud foundry consists of loosely

00:05:18,800 --> 00:05:29,300
coupled components so each component

00:05:23,350 --> 00:05:32,930
exposes well-designed API so we were

00:05:29,300 --> 00:05:38,570
able to extend Cloud Foundry easy and

00:05:32,930 --> 00:05:43,870
worth doing and the most important point

00:05:38,570 --> 00:05:49,250
was cloud foundry was only open source

00:05:43,870 --> 00:05:52,940
path project available in 2011 when we

00:05:49,250 --> 00:05:54,919
started the project I don't mean we were

00:05:52,940 --> 00:06:00,640
forced to choose 12 under

00:05:54,919 --> 00:06:04,070
I mean pivotal and boom we had a great

00:06:00,640 --> 00:06:07,610
foresight in creating public path

00:06:04,070 --> 00:06:12,080
project and addition to that cloud

00:06:07,610 --> 00:06:14,890
foundry was written into Ruby so the

00:06:12,080 --> 00:06:20,510
source code of cloud foundry is really

00:06:14,890 --> 00:06:24,290
easily easy to learn and extend so

00:06:20,510 --> 00:06:27,910
that's why we chose crowdfunding and was

00:06:24,290 --> 00:06:27,910
a result of our choice

00:06:27,950 --> 00:06:36,350
this slide shows our development

00:06:30,740 --> 00:06:39,800
timeline for all the last two years it

00:06:36,350 --> 00:06:43,270
took only one under half year to start

00:06:39,800 --> 00:06:48,110
lunch of a commercial service I think

00:06:43,270 --> 00:06:51,410
this is amazingly fast because now 12

00:06:48,110 --> 00:06:55,490
founder is by John Hsu and it is mature

00:06:51,410 --> 00:06:58,910
but when we started it was a beta

00:06:55,490 --> 00:07:02,210
version and still under development even

00:06:58,910 --> 00:07:08,900
so we were able to start our service

00:07:02,210 --> 00:07:15,740
just in one and a half years and this

00:07:08,900 --> 00:07:18,290
list is what we have developed so far we

00:07:15,740 --> 00:07:22,900
have developed so many extensions in the

00:07:18,290 --> 00:07:27,860
last two years why we were able to so

00:07:22,900 --> 00:07:31,760
create so many extension because this is

00:07:27,860 --> 00:07:36,620
very important point 12 under you was

00:07:31,760 --> 00:07:41,810
and is very extensible I'll show you

00:07:36,620 --> 00:07:45,290
some example of our extensions for

00:07:41,810 --> 00:07:49,310
example first example is user-friendly

00:07:45,290 --> 00:07:52,820
web interface users can manage their

00:07:49,310 --> 00:07:57,350
applications and services on this wave

00:07:52,820 --> 00:08:01,280
URI and this this is an web application

00:07:57,350 --> 00:08:02,510
and it uses internally the Cloud

00:08:01,280 --> 00:08:07,670
Controller lyst

00:08:02,510 --> 00:08:10,850
API so we basically did not add anything

00:08:07,670 --> 00:08:17,080
to the component or co-founder but we

00:08:10,850 --> 00:08:22,880
can we could could create this web UI

00:08:17,080 --> 00:08:26,060
and another example is our new our own

00:08:22,880 --> 00:08:29,420
log management system

00:08:26,060 --> 00:08:33,290
this enables enables users to manage

00:08:29,420 --> 00:08:35,450
users application logs easily and more

00:08:33,290 --> 00:08:38,000
function with more functionality for

00:08:35,450 --> 00:08:39,919
example users can build their

00:08:38,000 --> 00:08:42,860
application logs on there

00:08:39,919 --> 00:08:48,200
where your eye and also they can search

00:08:42,860 --> 00:08:51,980
fat wad on the wave UI for for example

00:08:48,200 --> 00:08:55,420
use of young thug's with what era or

00:08:51,980 --> 00:09:01,070
something and they can also download

00:08:55,420 --> 00:09:04,480
entire loss from a web UI so we added

00:09:01,070 --> 00:09:08,660
nothing to a component for this

00:09:04,480 --> 00:09:13,449
extension because co-founder is very

00:09:08,660 --> 00:09:17,329
very consist of isolated components so

00:09:13,449 --> 00:09:21,850
basically we can add additional function

00:09:17,329 --> 00:09:29,449
without adding adding something to our

00:09:21,850 --> 00:09:32,510
component and another example is a new

00:09:29,449 --> 00:09:35,300
service gateway for our cloud and of the

00:09:32,510 --> 00:09:38,300
Bucyrus quadrant LDB Suggs is a

00:09:35,300 --> 00:09:44,260
management managed l DB Sabbath and we

00:09:38,300 --> 00:09:47,720
are we developed our new service gateway

00:09:44,260 --> 00:09:54,589
for in version 2 it is decreasing with

00:09:47,720 --> 00:09:59,300
service broker but this is very isolated

00:09:54,589 --> 00:10:03,130
or well designed so just we all what we

00:09:59,300 --> 00:10:07,519
have to do while creating a single

00:10:03,130 --> 00:10:12,339
service gateway so very easy Andrew we

00:10:07,519 --> 00:10:12,339
can developed a new gateway luckily

00:10:13,050 --> 00:10:23,190
and last example is also is our

00:10:18,740 --> 00:10:26,190
authentication system cloud and we have

00:10:23,190 --> 00:10:30,260
an authentication system photo

00:10:26,190 --> 00:10:33,630
intellicoil in service so our

00:10:30,260 --> 00:10:38,029
authentication system is not a prattle

00:10:33,630 --> 00:10:41,209
cloud foundry so we need to connect to

00:10:38,029 --> 00:10:44,880
cloud and authentification system and

00:10:41,209 --> 00:10:49,290
twelve and identification system connect

00:10:44,880 --> 00:10:56,519
and provisioning provision IDs from

00:10:49,290 --> 00:11:00,630
cloud and five - broad so but what we

00:10:56,519 --> 00:11:03,209
created was our simple and sing rap

00:11:00,630 --> 00:11:08,269
application that translate they are

00:11:03,209 --> 00:11:15,029
portable so basically the controller was

00:11:08,269 --> 00:11:20,850
exposes cloud enteral exported or api to

00:11:15,029 --> 00:11:26,029
the procedure IDs so this was all so

00:11:20,850 --> 00:11:26,029
easy to development is easy to developed

00:11:26,360 --> 00:11:40,230
so I like to conclude my presentation we

00:11:36,170 --> 00:11:46,170
succeeded to relaunch our public and

00:11:40,230 --> 00:11:51,180
commercial service with co-founder our

00:11:46,170 --> 00:11:57,449
show our choice was correct I can say

00:11:51,180 --> 00:12:03,380
with confidence even with the

00:11:57,449 --> 00:12:08,010
development of their added extensions

00:12:03,380 --> 00:12:11,430
but even with the development we were

00:12:08,010 --> 00:12:16,769
able to start our Suggs just in one and

00:12:11,430 --> 00:12:21,079
a half years and now twelve and early is

00:12:16,769 --> 00:12:27,000
version 2 and it is more reliable

00:12:21,079 --> 00:12:31,980
extensible portable and scalable so what

00:12:27,000 --> 00:12:36,420
thing needed is already ready for you

00:12:31,980 --> 00:12:39,150
everywhere everyone here so why not try

00:12:36,420 --> 00:12:41,720
it found early and build your own path

00:12:39,150 --> 00:12:43,390
with it

00:12:41,720 --> 00:12:45,850
thanks for with me

00:12:43,390 --> 00:12:49,009
[Applause]

00:12:45,850 --> 00:12:49,009
[Music]

00:12:51,940 --> 00:12:58,240

YouTube URL: https://www.youtube.com/watch?v=AWKlx6vRHKQ


