Title: Cloud Foundry Marketplace Powered by AppDirect - Platform: The Cloud Foundry Conference
Publication date: 2013-11-22
Playlist: Platform: The Cloud Foundry Conference
Description: 
	Cloud Foundry Marketplace Powered by AppDirect
Christophe Leveseque, Senior Software Architect, AppDirect
Platform: The Cloud Foundry Conference (http://www.platformcf.com) September 8-9, 2013
Captions: 
	00:00:00,870 --> 00:00:03,979
[Music]

00:00:06,290 --> 00:00:12,059
hello everyone my name is Krista I'm

00:00:09,450 --> 00:00:14,880
software software architect at a direct

00:00:12,059 --> 00:00:17,910
and I'm going to talk to you about the

00:00:14,880 --> 00:00:20,490
services brokerage abilities that have

00:00:17,910 --> 00:00:22,289
been added to class for me too and that

00:00:20,490 --> 00:00:25,140
have been built in partnership between

00:00:22,289 --> 00:00:26,400
the Casa foundry and AB direct so I

00:00:25,140 --> 00:00:29,670
realized that the word services is a

00:00:26,400 --> 00:00:31,170
very overloaded term in this industry

00:00:29,670 --> 00:00:34,200
and what I'm talking about when I'm

00:00:31,170 --> 00:00:36,149
talking about service providers and

00:00:34,200 --> 00:00:38,460
services are really the services that

00:00:36,149 --> 00:00:40,530
application developers are going to need

00:00:38,460 --> 00:00:42,920
to make the application most its full

00:00:40,530 --> 00:00:47,730
and more rich so this is going to cover

00:00:42,920 --> 00:00:49,980
database as a service like MongoDB is my

00:00:47,730 --> 00:00:51,530
sequel DBS as well as performance

00:00:49,980 --> 00:00:54,300
monitoring and so on

00:00:51,530 --> 00:00:57,149
so first a little background on up

00:00:54,300 --> 00:00:58,230
direct for those of you who may not have

00:00:57,149 --> 00:00:59,789
heard about it

00:00:58,230 --> 00:01:03,239
so aMDA reg is a company that was

00:00:59,789 --> 00:01:06,689
founded back in 2009 and we set up as

00:01:03,239 --> 00:01:08,790
company to build marketplaces to

00:01:06,689 --> 00:01:11,210
distribute online web applications to

00:01:08,790 --> 00:01:14,010
businesses so the idea is that

00:01:11,210 --> 00:01:16,140
application developers would tie into

00:01:14,010 --> 00:01:18,240
our platform and will be releasing

00:01:16,140 --> 00:01:22,920
marketplaces to distribute those

00:01:18,240 --> 00:01:24,930
applications to to businesses so we in

00:01:22,920 --> 00:01:28,259
2009 we've powered we've had a lot of

00:01:24,930 --> 00:01:30,619
traction early on and we start releasing

00:01:28,259 --> 00:01:32,850
marketplaces all around the world

00:01:30,619 --> 00:01:35,670
staples are still come and many others

00:01:32,850 --> 00:01:38,670
and the value proposition that we have

00:01:35,670 --> 00:01:41,030
for both partners and application

00:01:38,670 --> 00:01:43,890
developers or service providers is that

00:01:41,030 --> 00:01:45,750
service providers can integrate once to

00:01:43,890 --> 00:01:48,600
a platform and then be distributed on

00:01:45,750 --> 00:01:50,310
our network of marketplaces an

00:01:48,600 --> 00:01:51,750
interesting tidbit is that we are a Java

00:01:50,310 --> 00:01:55,380
shop here and we haven't switch to go

00:01:51,750 --> 00:01:57,450
yet and we're we rely heavily on the

00:01:55,380 --> 00:01:59,340
Spring Framework and a lot of open open

00:01:57,450 --> 00:02:01,439
source technologies and so it's a great

00:01:59,340 --> 00:02:03,329
it's a great privilege and we're very

00:02:01,439 --> 00:02:07,560
excited to be a to be able to be a part

00:02:03,329 --> 00:02:10,060
of the underclassmen via family so just

00:02:07,560 --> 00:02:12,459
going over a little timeline of the

00:02:10,060 --> 00:02:15,880
to have direct so shortly after a little

00:02:12,459 --> 00:02:17,340
over a year after starting we launched

00:02:15,880 --> 00:02:20,110
our first public marketplace which is

00:02:17,340 --> 00:02:24,370
Bell Canada one of the leading telco in

00:02:20,110 --> 00:02:26,260
in Canada and as as time passed by we

00:02:24,370 --> 00:02:28,989
started growing or inventory or our

00:02:26,260 --> 00:02:30,790
catalogue of services as well as getting

00:02:28,989 --> 00:02:33,250
more traction in the in the partner

00:02:30,790 --> 00:02:37,810
space and getting bigger bigger names

00:02:33,250 --> 00:02:41,200
such as staples that Comcast and now Cod

00:02:37,810 --> 00:02:44,950
foundry so really trust to intuit the

00:02:41,200 --> 00:02:48,850
the idea is that service providers such

00:02:44,950 --> 00:02:51,760
as readies mongolab and centigrade can

00:02:48,850 --> 00:02:54,040
integrate to a platform only once and

00:02:51,760 --> 00:02:56,890
then will be distributing through a wide

00:02:54,040 --> 00:03:01,630
range of marketplaces throughout the

00:02:56,890 --> 00:03:03,069
world now how does this bring us to to

00:03:01,630 --> 00:03:05,170
to Cloud Foundry and why are we here

00:03:03,069 --> 00:03:07,150
today so as I was mentioning initially

00:03:05,170 --> 00:03:09,280
we started by distributing web

00:03:07,150 --> 00:03:12,660
applications so your typical enterprise

00:03:09,280 --> 00:03:15,609
web application like finance management

00:03:12,660 --> 00:03:18,190
application or a time tracker or project

00:03:15,609 --> 00:03:19,510
management but we realized really early

00:03:18,190 --> 00:03:22,510
on that the way we were distributing

00:03:19,510 --> 00:03:25,120
applications was really agnostic of what

00:03:22,510 --> 00:03:26,500
service were providing and we could

00:03:25,120 --> 00:03:29,650
apply the exact same technology that we

00:03:26,500 --> 00:03:33,069
have built to distribute services for

00:03:29,650 --> 00:03:34,780
developers so the fit was it was a

00:03:33,069 --> 00:03:37,390
really good fit between thoughtfully and

00:03:34,780 --> 00:03:39,880
direct because we would be able to

00:03:37,390 --> 00:03:44,290
extend the capabilities of of cloud

00:03:39,880 --> 00:03:47,340
foundry as well as allowing customers to

00:03:44,290 --> 00:03:49,989
focus really on their core on the core

00:03:47,340 --> 00:03:54,459
features which is hosting deploying and

00:03:49,989 --> 00:03:55,530
managing developers applications so now

00:03:54,459 --> 00:03:58,060
the question on everybody's mind

00:03:55,530 --> 00:04:00,459
hopefully is how does this integration

00:03:58,060 --> 00:04:02,350
between transformium dirac and all those

00:04:00,459 --> 00:04:06,940
application developers all those service

00:04:02,350 --> 00:04:09,430
providers work so this slides alright is

00:04:06,940 --> 00:04:10,600
pretty much how things are connected so

00:04:09,430 --> 00:04:12,970
we have in one side you have cots

00:04:10,600 --> 00:04:15,609
foundry which is where developers are

00:04:12,970 --> 00:04:19,970
going to to upload the application with

00:04:15,609 --> 00:04:21,230
its java app or ruby app or anything

00:04:19,970 --> 00:04:23,480
and then on the other side you have the

00:04:21,230 --> 00:04:26,000
service providers which is all the

00:04:23,480 --> 00:04:27,740
databases a service New Relic for

00:04:26,000 --> 00:04:30,920
monitoring applications sanguine if you

00:04:27,740 --> 00:04:34,390
want to send emails and really abdic for

00:04:30,920 --> 00:04:36,920
access hub between those two so anytime

00:04:34,390 --> 00:04:38,840
developer is going to go to the CF

00:04:36,920 --> 00:04:40,550
command line or maybe later the the new

00:04:38,840 --> 00:04:42,950
go command line and it's going to create

00:04:40,550 --> 00:04:44,360
a service it's really going to send a

00:04:42,950 --> 00:04:47,210
message from transplant wait to AB

00:04:44,360 --> 00:04:50,180
direct and AB the rate is going to see

00:04:47,210 --> 00:04:52,100
that which is the space of which user is

00:04:50,180 --> 00:04:53,930
creating this service what service is

00:04:52,100 --> 00:04:56,030
being instant shading and then routing

00:04:53,930 --> 00:04:59,240
it to the right service provider for

00:04:56,030 --> 00:05:01,400
provisioning so we have two sets of

00:04:59,240 --> 00:05:02,840
api's as shown here we have the

00:05:01,400 --> 00:05:05,450
provisioning API which is what we've

00:05:02,840 --> 00:05:07,670
been using for the past three years in

00:05:05,450 --> 00:05:09,650
AB direct which is basically creating

00:05:07,670 --> 00:05:10,880
account modifying them canceling them

00:05:09,650 --> 00:05:12,919
when the user doesn't want them anymore

00:05:10,880 --> 00:05:14,960
we've had to add like a couple extra

00:05:12,919 --> 00:05:17,210
features for Cloud Foundry which has the

00:05:14,960 --> 00:05:19,310
concept of service binding so when your

00:05:17,210 --> 00:05:20,930
developer you're going to create upload

00:05:19,310 --> 00:05:23,390
your application and if you want to

00:05:20,930 --> 00:05:25,460
start using the service that you prefer

00:05:23,390 --> 00:05:27,230
JSTOR you obtain from a service provider

00:05:25,460 --> 00:05:29,600
you can have to bind it to your that so

00:05:27,230 --> 00:05:31,160
we extended our set of API s and our

00:05:29,600 --> 00:05:36,620
platform to support that use case as

00:05:31,160 --> 00:05:38,270
well now just to to go over so since AB

00:05:36,620 --> 00:05:40,220
direct States in the middle between the

00:05:38,270 --> 00:05:42,229
class boundary and SS providers there

00:05:40,220 --> 00:05:43,520
are really two different integrations so

00:05:42,229 --> 00:05:45,020
first of all I'm going to talk about the

00:05:43,520 --> 00:05:47,510
storage provider integration which is

00:05:45,020 --> 00:05:49,520
what any service provider who wants to

00:05:47,510 --> 00:05:51,590
distribute his services on class

00:05:49,520 --> 00:05:52,910
Hollywood goes through so the first two

00:05:51,590 --> 00:05:56,540
step are pretty straightforward like we

00:05:52,910 --> 00:05:58,820
have a standalone CMS environment where

00:05:56,540 --> 00:06:00,590
a service provider can can login create

00:05:58,820 --> 00:06:02,690
an account and start entering

00:06:00,590 --> 00:06:04,580
information about the services he wants

00:06:02,690 --> 00:06:06,169
to distribute on Cloud Foundry so it's a

00:06:04,580 --> 00:06:08,360
web interface where the user can enter

00:06:06,169 --> 00:06:10,820
the profile information you can approve

00:06:08,360 --> 00:06:13,190
screenshots can describe in terms of

00:06:10,820 --> 00:06:15,350
features and benefits why their services

00:06:13,190 --> 00:06:19,250
are great for developers as well as

00:06:15,350 --> 00:06:21,590
upload other informations then the next

00:06:19,250 --> 00:06:24,140
step is to describe the pricing

00:06:21,590 --> 00:06:26,870
configuration that we have inside AB

00:06:24,140 --> 00:06:29,030
direct very powerful billing engine

00:06:26,870 --> 00:06:30,210
which can help pretty much any kind of

00:06:29,030 --> 00:06:32,009
building configuration

00:06:30,210 --> 00:06:34,830
that are currently used by service

00:06:32,009 --> 00:06:37,259
providers so that's when the the search

00:06:34,830 --> 00:06:38,699
broiler is going to describe I haven't

00:06:37,259 --> 00:06:40,319
had a business service with three plans

00:06:38,699 --> 00:06:42,330
have a free plan that's going to be free

00:06:40,319 --> 00:06:44,400
for developers with a maximum of one

00:06:42,330 --> 00:06:46,289
gigabyte of data for example and then

00:06:44,400 --> 00:06:49,139
I'm going to have a pro version which is

00:06:46,289 --> 00:06:51,720
going to be priced at 40 bucks or 40

00:06:49,139 --> 00:06:53,699
bucks a month and so on now the last

00:06:51,720 --> 00:06:55,349
step of this integration is really the

00:06:53,699 --> 00:06:57,720
most technical part which is the API

00:06:55,349 --> 00:06:59,639
integration so any time a user goes to

00:06:57,720 --> 00:07:01,770
class for me and does create service

00:06:59,639 --> 00:07:03,539
it's going to send a call to AB direct

00:07:01,770 --> 00:07:06,690
and AB jack is then going to run this

00:07:03,539 --> 00:07:08,580
call to the to the service provider so

00:07:06,690 --> 00:07:11,789
the service provider has to expose a

00:07:08,580 --> 00:07:13,229
couple of what we call even listeners or

00:07:11,789 --> 00:07:15,120
we'll really there are more like web

00:07:13,229 --> 00:07:17,639
hooks it's just little endpoint that

00:07:15,120 --> 00:07:20,340
advic is going to ping them on to say

00:07:17,639 --> 00:07:21,599
hey something happens somebody just try

00:07:20,340 --> 00:07:24,169
to provision your service some may just

00:07:21,599 --> 00:07:27,539
cancelled it and so we have different

00:07:24,169 --> 00:07:29,699
what we call verbs or events like

00:07:27,539 --> 00:07:33,680
creating a subscription changing it

00:07:29,699 --> 00:07:35,880
canceling it we also have user based

00:07:33,680 --> 00:07:38,520
capabilities for assignment and access

00:07:35,880 --> 00:07:40,169
control and obviously single sign-on so

00:07:38,520 --> 00:07:42,120
that the user who's purchasing an

00:07:40,169 --> 00:07:44,940
account can also manage it directly from

00:07:42,120 --> 00:07:47,130
the service provider interface the user

00:07:44,940 --> 00:07:49,139
goes to the CF command line and when one

00:07:47,130 --> 00:07:51,659
of those four commands for the services

00:07:49,139 --> 00:07:55,139
and it gets translated into the abdomen

00:07:51,659 --> 00:07:56,639
energy of events which is creating a

00:07:55,139 --> 00:08:00,259
subscription which is going to hold all

00:07:56,639 --> 00:08:03,060
your services together and creating an

00:08:00,259 --> 00:08:05,849
order for an add-on which is really what

00:08:03,060 --> 00:08:08,699
we call a service binding it and binding

00:08:05,849 --> 00:08:10,469
it and so on so the current goes to two

00:08:08,699 --> 00:08:12,419
algebraic objective asset to the service

00:08:10,469 --> 00:08:14,759
provider the search provider gets the

00:08:12,419 --> 00:08:17,280
notification is able to pull information

00:08:14,759 --> 00:08:18,840
about what what event happened processes

00:08:17,280 --> 00:08:21,000
it and then return the success back up

00:08:18,840 --> 00:08:23,250
direct and then the clasp on users gets

00:08:21,000 --> 00:08:25,409
his his service the other side is the

00:08:23,250 --> 00:08:28,979
platform integration how does this

00:08:25,409 --> 00:08:30,240
harder the catalog built in object gets

00:08:28,979 --> 00:08:33,270
pulled into the clouds from the

00:08:30,240 --> 00:08:35,310
interface and the Katori system so there

00:08:33,270 --> 00:08:37,620
are a couple API is in play here so the

00:08:35,310 --> 00:08:39,779
first one is just a very basic listing

00:08:37,620 --> 00:08:42,169
API all the all the service providers

00:08:39,779 --> 00:08:44,210
who have integrated to observe

00:08:42,169 --> 00:08:47,420
can be pulled through a REST API by

00:08:44,210 --> 00:08:49,970
class family as the listing as a listing

00:08:47,420 --> 00:08:51,920
so it was all the app name description

00:08:49,970 --> 00:08:54,080
it's a pretty lightweight API that

00:08:51,920 --> 00:08:55,600
abjure that customer calls politically

00:08:54,080 --> 00:08:57,740
to see what are the services available

00:08:55,600 --> 00:08:59,630
the next one is a little more

00:08:57,740 --> 00:09:01,550
heavyweight is a little more detailed is

00:08:59,630 --> 00:09:03,320
to profile API now that you have the

00:09:01,550 --> 00:09:05,060
list of services that are available you

00:09:03,320 --> 00:09:06,560
can actually pull more information and

00:09:05,060 --> 00:09:08,420
pull the information that was entered by

00:09:06,560 --> 00:09:10,100
the service provider that's where you're

00:09:08,420 --> 00:09:12,830
gonna see all the features the benefits

00:09:10,100 --> 00:09:15,260
the screenshots and so on and let's go

00:09:12,830 --> 00:09:17,440
what's what transform is going to use to

00:09:15,260 --> 00:09:20,630
build their their marketplace interface

00:09:17,440 --> 00:09:23,510
and lastly which is more like under the

00:09:20,630 --> 00:09:27,200
hood whenever the user tries to purchase

00:09:23,510 --> 00:09:29,300
a service and actually does action such

00:09:27,200 --> 00:09:31,760
as binding the service to his

00:09:29,300 --> 00:09:33,320
application and binding it this is going

00:09:31,760 --> 00:09:36,020
to call a different set of API which is

00:09:33,320 --> 00:09:39,020
the service API that are exposed by AB

00:09:36,020 --> 00:09:41,510
direct and Cloud Foundry is going to

00:09:39,020 --> 00:09:43,100
send messages to those API so that we

00:09:41,510 --> 00:09:45,740
can run it to the right service

00:09:43,100 --> 00:09:48,050
providers in addition to that we also

00:09:45,740 --> 00:09:50,150
have a building interaction with with

00:09:48,050 --> 00:09:52,910
class family so that all the charges

00:09:50,150 --> 00:09:54,560
that are incurred by the by the user by

00:09:52,910 --> 00:09:56,089
the ambition developers when he's

00:09:54,560 --> 00:09:58,880
building his application if he wants to

00:09:56,089 --> 00:10:01,250
get a large database for example will be

00:09:58,880 --> 00:10:03,680
then charged back to to the cars phone

00:10:01,250 --> 00:10:06,880
via mail servers you have a single point

00:10:03,680 --> 00:10:06,880
of of billing

00:10:07,470 --> 00:10:13,170
so just to finish I just want to keep it

00:10:10,200 --> 00:10:15,630
short just a screenshot showing like the

00:10:13,170 --> 00:10:18,750
the almost like an end to end see now

00:10:15,630 --> 00:10:22,320
you I don't have any a fancy a live demo

00:10:18,750 --> 00:10:25,110
but so on the left side you can see the

00:10:22,320 --> 00:10:27,060
CMS and how it looks like an update this

00:10:25,110 --> 00:10:29,460
is where the service provider is can you

00:10:27,060 --> 00:10:32,010
log in and start describing his his

00:10:29,460 --> 00:10:34,020
offering so he can configure the name

00:10:32,010 --> 00:10:36,780
some code that is going to be using the

00:10:34,020 --> 00:10:39,810
integration as well as price and various

00:10:36,780 --> 00:10:42,570
marketing marketing content and then the

00:10:39,810 --> 00:10:44,550
result of all this integration is after

00:10:42,570 --> 00:10:47,030
California's pull this listing as pull

00:10:44,550 --> 00:10:50,100
the catalog then they are both able to

00:10:47,030 --> 00:10:52,950
display those this information to the

00:10:50,100 --> 00:10:55,680
user to the user in the in the class for

00:10:52,950 --> 00:10:58,380
me web console currently running on Rev

00:10:55,680 --> 00:11:00,690
Run deliver all that IO where you're

00:10:58,380 --> 00:11:02,520
going to see all your services and you

00:11:00,690 --> 00:11:04,800
will go to you will be able to provision

00:11:02,520 --> 00:11:06,630
them and start using and then inside

00:11:04,800 --> 00:11:08,430
your application so this could be my

00:11:06,630 --> 00:11:10,510
presentation I don't think I have any

00:11:08,430 --> 00:11:13,860
more slides thank you very much

00:11:10,510 --> 00:11:13,860
[Applause]

00:11:17,620 --> 00:11:23,889

YouTube URL: https://www.youtube.com/watch?v=iYDOeYJr0g0


