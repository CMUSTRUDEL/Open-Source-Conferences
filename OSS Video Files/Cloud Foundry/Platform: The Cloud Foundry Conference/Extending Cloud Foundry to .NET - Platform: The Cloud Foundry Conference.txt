Title: Extending Cloud Foundry to .NET - Platform: The Cloud Foundry Conference
Publication date: 2013-11-22
Playlist: Platform: The Cloud Foundry Conference
Description: 
	Extending Cloud Foundry to .NET
Jared Wray, Founder & CTO, Tier 3
Platform: The Cloud Foundry Conference (http://www.platformcf.com) September 8-9, 2013
Captions: 
	00:00:00,870 --> 00:00:03,979
[Music]

00:00:07,040 --> 00:00:10,240
hey guys so

00:00:08,000 --> 00:00:11,280
today we're going to talk a little bit

00:00:10,240 --> 00:00:13,280
uh

00:00:11,280 --> 00:00:14,960
about extending cloudfoundry.net and i

00:00:13,280 --> 00:00:15,519
know a lot of you are from the valley

00:00:14,960 --> 00:00:17,440
and you're

00:00:15,519 --> 00:00:19,359
kind of looking at what kind of

00:00:17,440 --> 00:00:21,119
languages are really out there but

00:00:19,359 --> 00:00:22,720
i want to kind of give you an idea of

00:00:21,119 --> 00:00:23,920
what we're seeing just from the iron

00:00:22,720 --> 00:00:25,519
foundry standpoint and

00:00:23,920 --> 00:00:27,519
what we're doing around the passion of

00:00:25,519 --> 00:00:29,760
actually extending cloudfoundry.net

00:00:27,519 --> 00:00:31,760
as a lot of companies are now embracing

00:00:29,760 --> 00:00:34,160
what cloud foundry does today

00:00:31,760 --> 00:00:35,280
and it's big for us we we're seeing this

00:00:34,160 --> 00:00:36,640
not only from our public cloud

00:00:35,280 --> 00:00:38,399
standpoint at tier three

00:00:36,640 --> 00:00:39,760
but we're also seeing as private clouds

00:00:38,399 --> 00:00:42,480
every single one of them

00:00:39,760 --> 00:00:44,879
are looking at how to enable net in that

00:00:42,480 --> 00:00:47,760
cloud foundry ecosystem

00:00:44,879 --> 00:00:48,719
it's a little bit about net and these

00:00:47,760 --> 00:00:50,559
aren't all

00:00:48,719 --> 00:00:52,320
completely accurate but they're as good

00:00:50,559 --> 00:00:54,800
as we can get

00:00:52,320 --> 00:00:56,399
so net over 6 million developers

00:00:54,800 --> 00:00:58,239
worldwide to use.net

00:00:56,399 --> 00:00:59,920
most of them in the enterprises over 85

00:00:58,239 --> 00:01:01,280
percent of them are in the enterprise

00:00:59,920 --> 00:01:02,879
and they're all building custom

00:01:01,280 --> 00:01:04,400
applications or integration with other

00:01:02,879 --> 00:01:06,960
parts of the ecosystem

00:01:04,400 --> 00:01:08,000
dot net or c-sharp uh to be very

00:01:06,960 --> 00:01:10,159
specific about that

00:01:08,000 --> 00:01:11,280
is one of the top 10 repos on github

00:01:10,159 --> 00:01:14,159
still to this day

00:01:11,280 --> 00:01:15,680
it has a very vibrant community most

00:01:14,159 --> 00:01:18,400
ports that you see today

00:01:15,680 --> 00:01:19,360
on github or what is going on around the

00:01:18,400 --> 00:01:21,920
dot-net community

00:01:19,360 --> 00:01:23,680
around integrating with other systems is

00:01:21,920 --> 00:01:24,159
still from these.net developers who are

00:01:23,680 --> 00:01:25,600
doing

00:01:24,159 --> 00:01:27,520
pretty amazing mission critical

00:01:25,600 --> 00:01:29,040
applications and

00:01:27,520 --> 00:01:30,720
it's all enterprise developers we've

00:01:29,040 --> 00:01:33,759
talked about this a couple times but

00:01:30,720 --> 00:01:36,240
enterprise developers in that space are

00:01:33,759 --> 00:01:37,840
really dominating in.net very rarely do

00:01:36,240 --> 00:01:39,280
you see people kind of just lighting up

00:01:37,840 --> 00:01:40,799
and doing small

00:01:39,280 --> 00:01:42,880
startups with it but we're starting to

00:01:40,799 --> 00:01:43,520
see in the enterprise it's really owned

00:01:42,880 --> 00:01:46,479
with

00:01:43,520 --> 00:01:46,479
dot net and java

00:01:46,640 --> 00:01:50,399
but one thing that we've seen recently

00:01:48,399 --> 00:01:52,399
is dot-net devs are

00:01:50,399 --> 00:01:54,079
really evolving and when you think about

00:01:52,399 --> 00:01:56,399
that what we've seen

00:01:54,079 --> 00:01:57,920
is for the last 10 years or last decade

00:01:56,399 --> 00:02:00,079
that we're seeing

00:01:57,920 --> 00:02:01,920
this huge ecosystem really evolved first

00:02:00,079 --> 00:02:05,680
it started out with sql server

00:02:01,920 --> 00:02:08,479
sharepoint windows server 2012

00:02:05,680 --> 00:02:10,160
biztalk visual studio it was a complete

00:02:08,479 --> 00:02:12,160
ecosystem that's being

00:02:10,160 --> 00:02:14,319
completely ran by microsoft and they

00:02:12,160 --> 00:02:16,080
they did an amazing job for that

00:02:14,319 --> 00:02:17,360
i've been at microsoft a lot of the

00:02:16,080 --> 00:02:19,440
people who are around

00:02:17,360 --> 00:02:20,959
the dot net ecosystem have really seen

00:02:19,440 --> 00:02:22,879
this evolve into

00:02:20,959 --> 00:02:24,480
a really seamless thing for them they

00:02:22,879 --> 00:02:26,000
can light up applications get them up

00:02:24,480 --> 00:02:29,280
and running very quickly and

00:02:26,000 --> 00:02:30,480
the net clr and even c-sharp is a really

00:02:29,280 --> 00:02:32,879
well-known language

00:02:30,480 --> 00:02:34,879
and it really gives them that but what

00:02:32,879 --> 00:02:36,239
we've seen is this major transition in

00:02:34,879 --> 00:02:38,080
the last couple years

00:02:36,239 --> 00:02:39,280
not only are enterprises now adopting

00:02:38,080 --> 00:02:42,080
newer technology

00:02:39,280 --> 00:02:42,400
they're adopting at a hyper scale rate

00:02:42,080 --> 00:02:45,200
like

00:02:42,400 --> 00:02:46,319
literally we have more people looking at

00:02:45,200 --> 00:02:48,480
iron foundry

00:02:46,319 --> 00:02:50,160
than we've uh in the last couple years

00:02:48,480 --> 00:02:52,239
than we ever thought we could

00:02:50,160 --> 00:02:54,160
and most of them when we talk to them

00:02:52,239 --> 00:02:55,360
even at ironfoundry.org when they go to

00:02:54,160 --> 00:02:57,840
the trial environment

00:02:55,360 --> 00:02:58,800
we have thousands of developers now on

00:02:57,840 --> 00:03:00,400
that system

00:02:58,800 --> 00:03:02,640
trying out stuff and when we ask them

00:03:00,400 --> 00:03:03,599
there we say why are you trying iron

00:03:02,640 --> 00:03:05,840
foundry

00:03:03,599 --> 00:03:07,200
what what really matters to you and

00:03:05,840 --> 00:03:09,120
every single one of them is

00:03:07,200 --> 00:03:11,440
i'm trying to prototype something i'm at

00:03:09,120 --> 00:03:14,319
a large bank i'm at a big enterprise

00:03:11,440 --> 00:03:14,959
and i'm prototyping it to show net the

00:03:14,319 --> 00:03:17,040
language

00:03:14,959 --> 00:03:18,239
running with integration points

00:03:17,040 --> 00:03:19,360
underneath

00:03:18,239 --> 00:03:21,200
and these are the big things that

00:03:19,360 --> 00:03:22,480
they're happy they're doing they're

00:03:21,200 --> 00:03:23,680
learning how to get scaled they're

00:03:22,480 --> 00:03:25,120
trying to get it bigger they're trying

00:03:23,680 --> 00:03:27,440
to make it more robust

00:03:25,120 --> 00:03:28,400
and so we're seeing this huge ecosystem

00:03:27,440 --> 00:03:30,159
play out where

00:03:28,400 --> 00:03:31,440
cloud foundry is becoming this new

00:03:30,159 --> 00:03:34,239
integration point

00:03:31,440 --> 00:03:36,000
for all these services and also we're

00:03:34,239 --> 00:03:37,840
seeing a lot of polyglot happen

00:03:36,000 --> 00:03:40,319
when you look at node and even python

00:03:37,840 --> 00:03:41,360
we're seeing dot net developers actually

00:03:40,319 --> 00:03:43,040
adopt

00:03:41,360 --> 00:03:44,400
other languages to make sure that they

00:03:43,040 --> 00:03:46,480
can be

00:03:44,400 --> 00:03:48,720
better developers and actually do a

00:03:46,480 --> 00:03:52,080
language for the right use case uh

00:03:48,720 --> 00:03:55,360
recently i was actually in a

00:03:52,080 --> 00:03:57,519
node uh meetup and they asked how many

00:03:55,360 --> 00:03:59,680
developers were actually dotnet guys

00:03:57,519 --> 00:04:02,799
for their main job almost every single

00:03:59,680 --> 00:04:02,799
person raised their hand

00:04:02,879 --> 00:04:06,640
so this really comes to iron foundry and

00:04:04,480 --> 00:04:07,920
why we created this this was a huge need

00:04:06,640 --> 00:04:10,799
for

00:04:07,920 --> 00:04:12,720
the community and it was a huge need for

00:04:10,799 --> 00:04:14,080
us at tier three

00:04:12,720 --> 00:04:15,200
tier three is really unique and i'll

00:04:14,080 --> 00:04:16,479
just kind of give you a little bit

00:04:15,200 --> 00:04:19,120
background around that

00:04:16,479 --> 00:04:19,519
when i started the company in 2006 we

00:04:19,120 --> 00:04:21,759
really

00:04:19,519 --> 00:04:23,680
focused on enabling a cloud but we did

00:04:21,759 --> 00:04:25,840
it on.net which is pretty much unheard

00:04:23,680 --> 00:04:28,639
of no other cloud other than azure

00:04:25,840 --> 00:04:30,400
would ever put their name on.net but

00:04:28,639 --> 00:04:32,160
we're really passionate about it we love

00:04:30,400 --> 00:04:34,960
what dot net was doing we're already

00:04:32,160 --> 00:04:35,360
in in seattle area which is well known

00:04:34,960 --> 00:04:38,080
for

00:04:35,360 --> 00:04:38,720
net expertise and so we started building

00:04:38,080 --> 00:04:40,160
that out

00:04:38,720 --> 00:04:42,320
but one thing we wanted to do on our

00:04:40,160 --> 00:04:44,320
cloud is figure out how can we make a

00:04:42,320 --> 00:04:45,280
platform as a service for our management

00:04:44,320 --> 00:04:46,400
layer

00:04:45,280 --> 00:04:48,080
and we started looking at other

00:04:46,400 --> 00:04:49,600
technologies you know we're we started

00:04:48,080 --> 00:04:52,639
building our own of course which

00:04:49,600 --> 00:04:53,600
is a nightmare and we started looking at

00:04:52,639 --> 00:04:56,479
cloud foundry

00:04:53,600 --> 00:04:56,880
um i remember to the uh i remember very

00:04:56,479 --> 00:04:59,840
very

00:04:56,880 --> 00:05:00,160
vividly being at vmware talking to james

00:04:59,840 --> 00:05:02,560
and

00:05:00,160 --> 00:05:04,000
jerry about this cool new thing that

00:05:02,560 --> 00:05:05,039
they're coming out with called cloud

00:05:04,000 --> 00:05:06,639
foundry and how it's going to

00:05:05,039 --> 00:05:08,560
revolutionize the world

00:05:06,639 --> 00:05:10,160
and that they're looking for someone who

00:05:08,560 --> 00:05:11,280
actually knew windows it was kind of

00:05:10,160 --> 00:05:13,440
like this weird

00:05:11,280 --> 00:05:15,440
hunt excursion that they were on being

00:05:13,440 --> 00:05:18,560
like do you know windows

00:05:15,440 --> 00:05:19,919
have you ever done windows before so

00:05:18,560 --> 00:05:21,199
we talked to them and we were like yeah

00:05:19,919 --> 00:05:23,120
we've already built some of this

00:05:21,199 --> 00:05:24,880
platform as a service type technology

00:05:23,120 --> 00:05:26,880
we looked at cloud foundry and realized

00:05:24,880 --> 00:05:28,479
that a lot of our technology can

00:05:26,880 --> 00:05:30,400
actually be based off of that

00:05:28,479 --> 00:05:31,840
and so even at tier three today we use a

00:05:30,400 --> 00:05:34,080
lot of the iron foundry stuff in a

00:05:31,840 --> 00:05:36,160
day-to-day mission critical application

00:05:34,080 --> 00:05:38,000
to make sure that it's available and we

00:05:36,160 --> 00:05:39,039
loved it so much that we open sourced it

00:05:38,000 --> 00:05:41,360
for everybody

00:05:39,039 --> 00:05:42,080
iron foundry is built to give to the

00:05:41,360 --> 00:05:44,000
community

00:05:42,080 --> 00:05:46,320
it is full open source enabled for

00:05:44,000 --> 00:05:48,720
anybody anybody contribute

00:05:46,320 --> 00:05:50,160
anybody that's what we're all about this

00:05:48,720 --> 00:05:51,919
is for the community

00:05:50,160 --> 00:05:53,600
and so we gave it the engineers at tier

00:05:51,919 --> 00:05:55,199
three work on it we have other people

00:05:53,600 --> 00:05:55,919
from the community now working on it

00:05:55,199 --> 00:05:59,120
also

00:05:55,919 --> 00:06:01,840
we launched in uh december 2011. it's

00:05:59,120 --> 00:06:05,199
had over 11 000 downloads that's the da

00:06:01,840 --> 00:06:07,440
integration all cloud foundry v1

00:06:05,199 --> 00:06:08,560
we also added visual studio and windows

00:06:07,440 --> 00:06:11,360
client integration

00:06:08,560 --> 00:06:12,080
cloud foundry explorer was the other one

00:06:11,360 --> 00:06:13,680
and

00:06:12,080 --> 00:06:17,280
cloud foundry core integration that's

00:06:13,680 --> 00:06:17,280
all the dea and things like that

00:06:17,360 --> 00:06:21,759
but of course things things change and

00:06:20,080 --> 00:06:23,360
cloud foundry v1 was our

00:06:21,759 --> 00:06:24,880
our big launch in december and we've

00:06:23,360 --> 00:06:27,199
been doing edits from then

00:06:24,880 --> 00:06:28,639
and then cloud foundry v2 came along

00:06:27,199 --> 00:06:30,319
just kind of give you a little bit of

00:06:28,639 --> 00:06:34,560
overview of what we've had to do

00:06:30,319 --> 00:06:36,720
to extend.net and cloud foundry v1

00:06:34,560 --> 00:06:37,680
uh it's a little bit small but we'll

00:06:36,720 --> 00:06:39,919
kind of uh

00:06:37,680 --> 00:06:41,600
i'll give you a little bit of it we had

00:06:39,919 --> 00:06:44,479
to build not only the clients

00:06:41,600 --> 00:06:45,520
to basically enable it most windows

00:06:44,479 --> 00:06:47,360
developers

00:06:45,520 --> 00:06:48,960
you ask about ruby and they think that

00:06:47,360 --> 00:06:52,639
you're saying rugby so

00:06:48,960 --> 00:06:53,919
it doesn't work very well um on v1 when

00:06:52,639 --> 00:06:55,520
we started talking about they're like

00:06:53,919 --> 00:06:57,120
look i need a client i need a windows

00:06:55,520 --> 00:06:58,960
client that's easy to install

00:06:57,120 --> 00:07:01,039
preferably in.net and i need it to come

00:06:58,960 --> 00:07:02,960
up and running and so we had to build

00:07:01,039 --> 00:07:03,680
clients for this uh we started with two

00:07:02,960 --> 00:07:07,199
of them

00:07:03,680 --> 00:07:10,240
being able to make that happen we added

00:07:07,199 --> 00:07:12,400
code to the cloud controller the

00:07:10,240 --> 00:07:14,400
dea we had we actually went in and

00:07:12,400 --> 00:07:16,240
backwards engineered the entire dea

00:07:14,400 --> 00:07:17,680
and basically the nats messaging bus to

00:07:16,240 --> 00:07:20,800
be able to make that happen

00:07:17,680 --> 00:07:22,160
so we built a windows service that was

00:07:20,800 --> 00:07:24,720
our dea agent

00:07:22,160 --> 00:07:25,840
and we also did edits to the vmc because

00:07:24,720 --> 00:07:27,919
at the time

00:07:25,840 --> 00:07:29,599
it was pretty much all hard coded when

00:07:27,919 --> 00:07:31,199
you're looking at the system it's very

00:07:29,599 --> 00:07:33,120
modular but a lot of the

00:07:31,199 --> 00:07:36,000
ways that the languages are built out it

00:07:33,120 --> 00:07:38,960
was built you know v1 code

00:07:36,000 --> 00:07:40,240
it was hundreds of files hundreds and

00:07:38,960 --> 00:07:41,840
many people

00:07:40,240 --> 00:07:43,759
looked at and was like look this is a

00:07:41,840 --> 00:07:46,240
fork on a fork it's huge

00:07:43,759 --> 00:07:48,639
and so we uh we really spent a lot of

00:07:46,240 --> 00:07:52,479
time on this

00:07:48,639 --> 00:07:53,280
what's amazing is v2 and i just have to

00:07:52,479 --> 00:07:56,319
say

00:07:53,280 --> 00:07:56,800
if has does anybody know what the stack

00:07:56,319 --> 00:08:00,000
is

00:07:56,800 --> 00:08:01,039
has anybody played with this okay let's

00:08:00,000 --> 00:08:03,840
just say

00:08:01,039 --> 00:08:04,879
it is amazing it is absolutely

00:08:03,840 --> 00:08:07,680
amazing

00:08:04,879 --> 00:08:09,759
we spent thousands of lines of code

00:08:07,680 --> 00:08:13,039
hundreds of files doing v1

00:08:09,759 --> 00:08:16,800
and with dash dash stack it really

00:08:13,039 --> 00:08:17,599
redefined how we do net in cloud foundry

00:08:16,800 --> 00:08:19,440
and this is

00:08:17,599 --> 00:08:21,039
props to pivotal for what they've done

00:08:19,440 --> 00:08:23,039
in the cloud foundry ecosystem

00:08:21,039 --> 00:08:25,759
because this is what modular pass is all

00:08:23,039 --> 00:08:29,039
about i can actually add windows

00:08:25,759 --> 00:08:32,719
in a fairly easy way

00:08:29,039 --> 00:08:35,120
and enable an entire ecosystem

00:08:32,719 --> 00:08:36,320
so in our scenario we can actually do

00:08:35,120 --> 00:08:38,719
stack ms win

00:08:36,320 --> 00:08:40,719
clr and what it does is actually routes

00:08:38,719 --> 00:08:43,440
from the client through the controller

00:08:40,719 --> 00:08:45,519
and specifies a certain type of stack so

00:08:43,440 --> 00:08:46,240
a dea running windows that can actually

00:08:45,519 --> 00:08:49,279
run

00:08:46,240 --> 00:08:51,519
ms winclr this gives us complete

00:08:49,279 --> 00:08:54,560
capabilities with being able to

00:08:51,519 --> 00:08:56,640
not have to do the vmc or cf cli

00:08:54,560 --> 00:08:58,399
components we don't have to integrate

00:08:56,640 --> 00:09:00,080
with you know going in and changing the

00:08:58,399 --> 00:09:02,800
cloud controller in any way

00:09:00,080 --> 00:09:04,480
we can actually focus on the dea layer

00:09:02,800 --> 00:09:06,560
doing it what it's good

00:09:04,480 --> 00:09:09,760
good at and also being able to add some

00:09:06,560 --> 00:09:12,240
other components around that

00:09:09,760 --> 00:09:13,680
on top of it we had to add this uh this

00:09:12,240 --> 00:09:16,000
thing called a build pack

00:09:13,680 --> 00:09:16,800
which most net developers have never

00:09:16,000 --> 00:09:18,160
heard of

00:09:16,800 --> 00:09:20,000
except for when they've heard about

00:09:18,160 --> 00:09:23,600
heroku or what they're doing

00:09:20,000 --> 00:09:24,880
we added a.net build pack so this uh

00:09:23,600 --> 00:09:26,800
this does a couple things that's really

00:09:24,880 --> 00:09:29,920
interesting actually adds

00:09:26,800 --> 00:09:32,560
the self-host executable of iis

00:09:29,920 --> 00:09:34,320
so many of you don't know how iis works

00:09:32,560 --> 00:09:36,480
but iis is the information server that

00:09:34,320 --> 00:09:38,720
runs dot now in all windows boxes

00:09:36,480 --> 00:09:40,720
it's really robust ran in the enterprise

00:09:38,720 --> 00:09:42,399
very well supported by microsoft

00:09:40,720 --> 00:09:45,040
but they did something about three years

00:09:42,399 --> 00:09:46,320
ago they actually made it so it's a lot

00:09:45,040 --> 00:09:48,399
more scalable

00:09:46,320 --> 00:09:50,640
in a couple ways one is they added a lot

00:09:48,399 --> 00:09:51,680
more app pools and feature sets but the

00:09:50,640 --> 00:09:53,040
real big thing

00:09:51,680 --> 00:09:55,120
is they added this thing called a

00:09:53,040 --> 00:09:57,040
self-hosted executable

00:09:55,120 --> 00:09:58,480
so before we'd have to talk to iis and

00:09:57,040 --> 00:09:59,040
do a whole bunch of things to make it

00:09:58,480 --> 00:10:00,399
work

00:09:59,040 --> 00:10:02,560
you'd have to kind of configure it on

00:10:00,399 --> 00:10:04,560
the fly but now what you can do

00:10:02,560 --> 00:10:05,760
is we can actually take the iis host

00:10:04,560 --> 00:10:08,399
self-executable

00:10:05,760 --> 00:10:10,079
and put it right into the build pack so

00:10:08,399 --> 00:10:12,079
on delivery when the dea

00:10:10,079 --> 00:10:14,959
actually spins up your guys's code it

00:10:12,079 --> 00:10:16,800
adds a self-executable iis host process

00:10:14,959 --> 00:10:18,800
and then it pushes that as a delivery

00:10:16,800 --> 00:10:21,360
execution so we can actually spin

00:10:18,800 --> 00:10:22,640
up iis straight through that on every

00:10:21,360 --> 00:10:24,720
single application

00:10:22,640 --> 00:10:26,160
really setting the same guidelines that

00:10:24,720 --> 00:10:28,480
cloud foundry really does

00:10:26,160 --> 00:10:31,120
on being able to warden or be able to

00:10:28,480 --> 00:10:34,079
keep a process isolated in a certain way

00:10:31,120 --> 00:10:34,959
the second thing is nougat so nuget is

00:10:34,079 --> 00:10:38,079
the gem of

00:10:34,959 --> 00:10:40,160
net and what we've been able to do

00:10:38,079 --> 00:10:41,920
is really make it so nuget can fully

00:10:40,160 --> 00:10:44,000
integrate so if you drop a nuget package

00:10:41,920 --> 00:10:46,399
which microsoft developers do

00:10:44,000 --> 00:10:47,279
it'll actually go out grab all your data

00:10:46,399 --> 00:10:49,200
uh all your

00:10:47,279 --> 00:10:50,880
libraries that you need to run your

00:10:49,200 --> 00:10:52,160
application and push it right inside

00:10:50,880 --> 00:10:53,600
your package so you don't even have to

00:10:52,160 --> 00:10:56,640
push the nougat

00:10:53,600 --> 00:11:00,000
packages with it that was the easy part

00:10:56,640 --> 00:11:03,519
then we got in the dea and warden so d

00:11:00,000 --> 00:11:04,720
and wharton um when we did v1 was very

00:11:03,519 --> 00:11:07,600
interesting

00:11:04,720 --> 00:11:09,519
it was a lot easier actually in the end

00:11:07,600 --> 00:11:09,920
uh because we started building it and we

00:11:09,519 --> 00:11:11,680
just

00:11:09,920 --> 00:11:13,360
went all out and went all c-sharp all

00:11:11,680 --> 00:11:14,240
the way through built our own windows

00:11:13,360 --> 00:11:16,800
services

00:11:14,240 --> 00:11:18,480
one of our goals with cfv2 and iron

00:11:16,800 --> 00:11:21,360
foundry is to really

00:11:18,480 --> 00:11:23,200
enable full integration in the cloud

00:11:21,360 --> 00:11:24,720
foundry and be able to check that back

00:11:23,200 --> 00:11:26,880
into the main i know james mentioned

00:11:24,720 --> 00:11:28,640
that right before but our goal at iron

00:11:26,880 --> 00:11:30,720
foundry is to really make the dea

00:11:28,640 --> 00:11:32,560
completely compatible on windows and

00:11:30,720 --> 00:11:34,640
linux without any issues

00:11:32,560 --> 00:11:36,000
so you guys don't have to go and fork

00:11:34,640 --> 00:11:38,160
another dea

00:11:36,000 --> 00:11:39,839
and figure out how to make that happen

00:11:38,160 --> 00:11:41,760
so this was a big thing for us

00:11:39,839 --> 00:11:44,480
trying to figure out how to do it and

00:11:41,760 --> 00:11:47,040
windows doesn't really like it

00:11:44,480 --> 00:11:48,560
so we went in and did a lot of work on

00:11:47,040 --> 00:11:50,079
this and actually if you guys check out

00:11:48,560 --> 00:11:50,800
some of the repos we've already started

00:11:50,079 --> 00:11:52,240
pushing

00:11:50,800 --> 00:11:53,920
a lot of the code right back into the

00:11:52,240 --> 00:11:56,720
main of cloud foundry

00:11:53,920 --> 00:11:58,079
with pivotal support so we've converted

00:11:56,720 --> 00:12:00,639
all the bosch calls to

00:11:58,079 --> 00:12:02,639
powershell powershell is of course the

00:12:00,639 --> 00:12:05,839
bosch of windows because microsoft has

00:12:02,639 --> 00:12:08,639
to build their own thing for everything

00:12:05,839 --> 00:12:10,000
we did apply changes so we applied

00:12:08,639 --> 00:12:12,079
changes in the steno and vcap

00:12:10,000 --> 00:12:13,519
common really just bug fixes making it

00:12:12,079 --> 00:12:15,040
more windows compatible

00:12:13,519 --> 00:12:17,120
understanding the event handling and

00:12:15,040 --> 00:12:18,560
messaging being able to handle that a

00:12:17,120 --> 00:12:21,120
little bit better on windows so it's a

00:12:18,560 --> 00:12:24,639
more scalable type system

00:12:21,120 --> 00:12:26,399
on the dea we added a couple things one

00:12:24,639 --> 00:12:27,600
is a factory switch so it understands

00:12:26,399 --> 00:12:28,399
when it's on windows and what it's

00:12:27,600 --> 00:12:30,399
supposed to do

00:12:28,399 --> 00:12:31,839
so they can actually power shell out

00:12:30,399 --> 00:12:32,320
into the warden and be able to handle

00:12:31,839 --> 00:12:34,399
that

00:12:32,320 --> 00:12:37,040
type of system and send the right

00:12:34,399 --> 00:12:38,399
commands to the warden

00:12:37,040 --> 00:12:40,480
on top of that we went in and did the

00:12:38,399 --> 00:12:42,560
warden container and

00:12:40,480 --> 00:12:44,560
this is where all the magic is now

00:12:42,560 --> 00:12:46,000
happening on windows and even in cloud

00:12:44,560 --> 00:12:47,600
foundry if you kind of think about

00:12:46,000 --> 00:12:50,639
how you light up applications and get

00:12:47,600 --> 00:12:52,240
them on up and running

00:12:50,639 --> 00:12:53,680
this is the number one thing that

00:12:52,240 --> 00:12:55,519
everybody asked me about

00:12:53,680 --> 00:12:56,959
and so i want to just spend a couple

00:12:55,519 --> 00:12:59,440
minutes on explaining

00:12:56,959 --> 00:13:01,760
what really this is all about the

00:12:59,440 --> 00:13:04,480
worden.net container in linux is

00:13:01,760 --> 00:13:06,639
amazing i mean it isolates it does

00:13:04,480 --> 00:13:09,279
everything you want

00:13:06,639 --> 00:13:09,760
there's no such thing as that in windows

00:13:09,279 --> 00:13:11,200
so

00:13:09,760 --> 00:13:14,240
windows has a different way of doing it

00:13:11,200 --> 00:13:16,399
it's really using user access policies

00:13:14,240 --> 00:13:18,560
being able to specify down to the file

00:13:16,399 --> 00:13:18,959
system what access they have and making

00:13:18,560 --> 00:13:21,600
that

00:13:18,959 --> 00:13:23,120
really easy for users so we took the

00:13:21,600 --> 00:13:23,680
approach that most windows developers

00:13:23,120 --> 00:13:26,000
had and

00:13:23,680 --> 00:13:27,760
basically locked lock the server down so

00:13:26,000 --> 00:13:30,959
the process can run

00:13:27,760 --> 00:13:32,720
really easily so when a

00:13:30,959 --> 00:13:34,480
application lights up it's really easy

00:13:32,720 --> 00:13:37,600
we go in and we create

00:13:34,480 --> 00:13:39,600
a no rights user on the server so that

00:13:37,600 --> 00:13:41,920
user is created for every single process

00:13:39,600 --> 00:13:43,440
application it's up and running and it's

00:13:41,920 --> 00:13:46,160
fully integrated into the system

00:13:43,440 --> 00:13:46,959
what's really interesting for net devs

00:13:46,160 --> 00:13:49,519
uh

00:13:46,959 --> 00:13:50,320
if there's any net rep devs in the room

00:13:49,519 --> 00:13:53,040
um

00:13:50,320 --> 00:13:54,000
or listening online uh this is the cool

00:13:53,040 --> 00:13:55,760
part about this

00:13:54,000 --> 00:13:57,600
you can actually spin up and if you

00:13:55,760 --> 00:13:59,440
launch this as a private cloud

00:13:57,600 --> 00:14:01,279
in the windows environment you can spin

00:13:59,440 --> 00:14:04,320
it up and you can actually add a flag

00:14:01,279 --> 00:14:07,680
in your build pack to run as a

00:14:04,320 --> 00:14:10,079
windows domain user this is a huge

00:14:07,680 --> 00:14:11,680
issue for net developers they need to

00:14:10,079 --> 00:14:12,560
run under certain usernames and be able

00:14:11,680 --> 00:14:14,480
to have that

00:14:12,560 --> 00:14:15,600
so it uses basically authentication

00:14:14,480 --> 00:14:17,440
across their domain

00:14:15,600 --> 00:14:19,519
so you can actually use the flag and

00:14:17,440 --> 00:14:22,000
enable it through there

00:14:19,519 --> 00:14:23,760
if it doesn't spins up a local user gets

00:14:22,000 --> 00:14:25,600
it up and running

00:14:23,760 --> 00:14:26,880
and has no rights on the server

00:14:25,600 --> 00:14:28,959
initially

00:14:26,880 --> 00:14:30,800
next thing is it creates a directory

00:14:28,959 --> 00:14:32,959
simple directory adds the user

00:14:30,800 --> 00:14:35,120
puts read write access the next thing it

00:14:32,959 --> 00:14:36,480
does is it spins up the application and

00:14:35,120 --> 00:14:38,480
executes it

00:14:36,480 --> 00:14:40,079
across the entire system and it runs

00:14:38,480 --> 00:14:42,320
that iis host

00:14:40,079 --> 00:14:43,760
up as that user so instead of going

00:14:42,320 --> 00:14:45,360
through iis and

00:14:43,760 --> 00:14:47,440
making that possible the entire

00:14:45,360 --> 00:14:48,880
management schema we can spin up

00:14:47,440 --> 00:14:50,720
hundreds and thousands of these

00:14:48,880 --> 00:14:52,959
processes on the box

00:14:50,720 --> 00:14:54,880
running and be able to manage that the

00:14:52,959 --> 00:14:57,279
same way that the dea thinks

00:14:54,880 --> 00:14:58,079
it's managing a cloud foundry linux

00:14:57,279 --> 00:15:00,000
instance

00:14:58,079 --> 00:15:01,839
and this is totally changing the

00:15:00,000 --> 00:15:02,560
dynamics of how windows is even being

00:15:01,839 --> 00:15:04,240
hosted

00:15:02,560 --> 00:15:06,320
before we would actually go and only

00:15:04,240 --> 00:15:06,800
talk to iis and when you think about

00:15:06,320 --> 00:15:09,120
that

00:15:06,800 --> 00:15:10,880
it changes the the perception or even

00:15:09,120 --> 00:15:12,720
the architecture of what da's

00:15:10,880 --> 00:15:14,079
is expecting to happen when it's doing

00:15:12,720 --> 00:15:15,040
health checks or spinning up new

00:15:14,079 --> 00:15:17,600
processes

00:15:15,040 --> 00:15:19,360
before iis was doing a lot of that now

00:15:17,600 --> 00:15:20,079
the dea has more control over the

00:15:19,360 --> 00:15:23,519
process

00:15:20,079 --> 00:15:23,519
and can handle that a lot better

00:15:23,839 --> 00:15:26,880
the next thing we have uh and this is

00:15:26,000 --> 00:15:29,839
actually now up

00:15:26,880 --> 00:15:31,680
on the repo at iron foundry in github we

00:15:29,839 --> 00:15:33,279
built in standalone apps

00:15:31,680 --> 00:15:35,360
so this is beta right now we're still

00:15:33,279 --> 00:15:37,360
working on it but this allows you to do

00:15:35,360 --> 00:15:38,079
a couple things one is you can specify

00:15:37,360 --> 00:15:40,000
with your

00:15:38,079 --> 00:15:41,600
in your build pack that you can launch

00:15:40,000 --> 00:15:43,360
and do scheduled jobs

00:15:41,600 --> 00:15:45,279
through quartz.net which is really nice

00:15:43,360 --> 00:15:46,880
it's kind of like cron for windows

00:15:45,279 --> 00:15:48,480
and you can get it up and running be

00:15:46,880 --> 00:15:50,880
able to execute get online

00:15:48,480 --> 00:15:52,079
no problem and it's full standalone

00:15:50,880 --> 00:15:53,440
applications so it's a console

00:15:52,079 --> 00:15:56,240
application that

00:15:53,440 --> 00:15:57,920
windows is allowing you to execute on

00:15:56,240 --> 00:15:58,880
this is something that we hear a lot of

00:15:57,920 --> 00:16:00,480
uh

00:15:58,880 --> 00:16:02,639
net developers really ask about is how

00:16:00,480 --> 00:16:03,120
do i launch services and get them up and

00:16:02,639 --> 00:16:04,880
running

00:16:03,120 --> 00:16:06,399
you can now do this through standalone

00:16:04,880 --> 00:16:08,560
apps so it's we're

00:16:06,399 --> 00:16:09,680
working to be very uh on parity with

00:16:08,560 --> 00:16:10,560
what cloud foundry is doing on

00:16:09,680 --> 00:16:13,600
futurewise

00:16:10,560 --> 00:16:15,920
and make that really easy for us

00:16:13,600 --> 00:16:18,160
so cloud foundry and doc and iron

00:16:15,920 --> 00:16:20,639
foundry is uh

00:16:18,160 --> 00:16:23,040
there's a lot a lot of work to do and

00:16:20,639 --> 00:16:25,120
when you think about iron foundry

00:16:23,040 --> 00:16:26,480
iron foundry like i said at the start

00:16:25,120 --> 00:16:28,720
we're all about

00:16:26,480 --> 00:16:29,600
open source that means people can

00:16:28,720 --> 00:16:31,519
contribute

00:16:29,600 --> 00:16:33,199
get online we're checking into the main

00:16:31,519 --> 00:16:34,079
of cloud foundry and making that

00:16:33,199 --> 00:16:35,920
possible

00:16:34,079 --> 00:16:38,480
we're adding other clients to make that

00:16:35,920 --> 00:16:40,480
easy for everybody to use cloud foundry

00:16:38,480 --> 00:16:42,399
and that's really our go in life extend

00:16:40,480 --> 00:16:43,600
cloud foundry and enable.net in the

00:16:42,399 --> 00:16:44,800
ecosystem

00:16:43,600 --> 00:16:46,959
and these are all the things that we

00:16:44,800 --> 00:16:48,320
work on we've done a lot of work across

00:16:46,959 --> 00:16:51,519
that we have actually

00:16:48,320 --> 00:16:53,120
partners that are now checking in code

00:16:51,519 --> 00:16:55,279
across the iron foundry

00:16:53,120 --> 00:16:57,120
and we have tons of companies using this

00:16:55,279 --> 00:16:58,160
uh intel was one of them that we we

00:16:57,120 --> 00:16:59,920
talked about

00:16:58,160 --> 00:17:01,680
i have banks that actually randomly call

00:16:59,920 --> 00:17:03,120
me up and say they have

00:17:01,680 --> 00:17:04,880
thousands of applications running on

00:17:03,120 --> 00:17:06,799
iron foundry and they're

00:17:04,880 --> 00:17:08,559
wanting to contribute or even be part of

00:17:06,799 --> 00:17:10,400
that community so here are the big

00:17:08,559 --> 00:17:12,720
things that we're working on

00:17:10,400 --> 00:17:14,240
dot net sdk library cloud foundry core

00:17:12,720 --> 00:17:15,360
integration this is what we talked to on

00:17:14,240 --> 00:17:17,439
v2

00:17:15,360 --> 00:17:20,160
the visual studio extension making it

00:17:17,439 --> 00:17:22,880
easy for net developers to develop.net

00:17:20,160 --> 00:17:24,319
and get it pushed to cloud foundry

00:17:22,880 --> 00:17:25,280
powershell for cloud foundry is going to

00:17:24,319 --> 00:17:27,600
be another big one

00:17:25,280 --> 00:17:28,720
many of the windows developers they do

00:17:27,600 --> 00:17:31,039
not want to use

00:17:28,720 --> 00:17:32,400
the current cli especially in ruby now

00:17:31,039 --> 00:17:34,480
the new one's out and go

00:17:32,400 --> 00:17:35,679
but powershell is really well known in

00:17:34,480 --> 00:17:37,200
the windows community

00:17:35,679 --> 00:17:38,799
and so we want to be able to make sure

00:17:37,200 --> 00:17:41,200
that that's possible

00:17:38,799 --> 00:17:42,640
and the last one sql server integration

00:17:41,200 --> 00:17:44,480
i know there's a lot of other server

00:17:42,640 --> 00:17:46,880
products that microsoft does

00:17:44,480 --> 00:17:47,840
but realistically what we hear the

00:17:46,880 --> 00:17:49,840
number one thing is

00:17:47,840 --> 00:17:51,760
sql server integration we want sql

00:17:49,840 --> 00:17:53,440
server integration and that's about it

00:17:51,760 --> 00:17:55,600
so we're working on that now we have in

00:17:53,440 --> 00:17:56,960
cloud foundry v1 v2 is coming out and

00:17:55,600 --> 00:17:58,480
over the next six months

00:17:56,960 --> 00:18:00,320
these are the things that we're running

00:17:58,480 --> 00:18:02,559
uh running out through iron foundry

00:18:00,320 --> 00:18:03,679
this is enabling the entire ecosystem

00:18:02,559 --> 00:18:06,799
with what we need

00:18:03,679 --> 00:18:10,400
to enable.net

00:18:06,799 --> 00:18:14,320
okay so you can contribute and

00:18:10,400 --> 00:18:16,320
we love people to contribute get online

00:18:14,320 --> 00:18:19,039
as everybody who comes up here every

00:18:16,320 --> 00:18:21,280
company they always say hey we're hiring

00:18:19,039 --> 00:18:22,559
so i'm going to say hey we're hiring for

00:18:21,280 --> 00:18:26,640
iron foundry

00:18:22,559 --> 00:18:27,600
and your job is your job interview just

00:18:26,640 --> 00:18:30,799
go online

00:18:27,600 --> 00:18:33,039
and contribute some code for a free job

00:18:30,799 --> 00:18:35,679
because nobody makes money at it so

00:18:33,039 --> 00:18:37,440
everybody should contribute

00:18:35,679 --> 00:18:39,520
and this is really about us as a

00:18:37,440 --> 00:18:42,240
community enabling ironfoundry and

00:18:39,520 --> 00:18:43,840
net and that's a big thing for us so if

00:18:42,240 --> 00:18:45,039
you're going online and you haven't

00:18:43,840 --> 00:18:47,280
having things that you want to do

00:18:45,039 --> 00:18:49,679
contribute we're happy to take any pull

00:18:47,280 --> 00:18:49,679
requests

00:18:52,800 --> 00:18:57,840
[Music]

00:18:54,840 --> 00:18:57,840
thanks

00:18:57,860 --> 00:19:05,349
[Music]

00:19:05,440 --> 00:19:07,520

YouTube URL: https://www.youtube.com/watch?v=GG_tMxjQ1E0


