Title: Decoding Cloud Foundry: Cloud Computing
Publication date: 2016-03-28
Playlist: Cloud Foundry 101
Description: 
	
Captions: 
	00:00:00,030 --> 00:00:04,049
so I'm going to unpack cloud computing

00:00:02,129 --> 00:00:06,240
the underlying principles some of the

00:00:04,049 --> 00:00:09,719
challenges and misconceptions and its

00:00:06,240 --> 00:00:11,370
relevance to Cloud Foundry cloud

00:00:09,719 --> 00:00:12,960
computing has been around for a long

00:00:11,370 --> 00:00:15,870
time now so it should be really well

00:00:12,960 --> 00:00:20,220
understood the attributes associated

00:00:15,870 --> 00:00:22,199
with cloud computing are elasticity the

00:00:20,220 --> 00:00:24,600
ability to dynamically handle growth and

00:00:22,199 --> 00:00:27,150
scale up and back down again on demand

00:00:24,600 --> 00:00:30,060
choosing when and how to consume a

00:00:27,150 --> 00:00:33,090
specific service and also self-service

00:00:30,060 --> 00:00:36,559
the ability for me to directly provision

00:00:33,090 --> 00:00:38,879
a service as opposed to raising a ticket

00:00:36,559 --> 00:00:39,600
so what are the misconceptions with

00:00:38,879 --> 00:00:42,090
cloud computing

00:00:39,600 --> 00:00:45,030
well cloud computing has been broken up

00:00:42,090 --> 00:00:47,670
into this logical stack of SAS pass and

00:00:45,030 --> 00:00:48,360
iOS and this is wrong is wrong for two

00:00:47,670 --> 00:00:51,420
reasons

00:00:48,360 --> 00:00:54,629
it shows these clean boundaries and the

00:00:51,420 --> 00:00:56,370
stack is too simplistic for example if

00:00:54,629 --> 00:00:59,879
you consider the physical infrastructure

00:00:56,370 --> 00:01:01,770
and providing you can drive those cloud

00:00:59,879 --> 00:01:04,830
computing characteristics of elastic

00:01:01,770 --> 00:01:07,439
on-demand self-service there's no reason

00:01:04,830 --> 00:01:09,150
why you can't install a platform on top

00:01:07,439 --> 00:01:10,979
of your physical infrastructure you're

00:01:09,150 --> 00:01:13,860
not strictly limited to having to put it

00:01:10,979 --> 00:01:15,570
on to a hypervisor when you look at the

00:01:13,860 --> 00:01:17,939
applications that run on top of the

00:01:15,570 --> 00:01:20,189
platform you're not limited to this

00:01:17,939 --> 00:01:22,530
small window of SAS based applications

00:01:20,189 --> 00:01:25,259
you can pretty much run anything on a

00:01:22,530 --> 00:01:27,750
platform beard IOT applications back

00:01:25,259 --> 00:01:30,030
office applications batch streaming

00:01:27,750 --> 00:01:31,500
computational jobs the list of

00:01:30,030 --> 00:01:34,320
applications you want on top of Cloud

00:01:31,500 --> 00:01:36,780
Foundry should be limitless so you can

00:01:34,320 --> 00:01:39,329
run anything on a platform when you look

00:01:36,780 --> 00:01:41,610
at established enterprises especially if

00:01:39,329 --> 00:01:43,320
they have legacy technology they may

00:01:41,610 --> 00:01:45,990
still have some applications running in

00:01:43,320 --> 00:01:48,180
VMs on a hypervisor or some applications

00:01:45,990 --> 00:01:50,909
on some applications running on bare

00:01:48,180 --> 00:01:54,390
metal this is a much more realistic

00:01:50,909 --> 00:01:56,640
stack for the enterprise when you look

00:01:54,390 --> 00:01:59,280
at these clean boundaries you only have

00:01:56,640 --> 00:02:02,040
to look at AWS which most people regard

00:01:59,280 --> 00:02:03,390
as an iOS and just look at the rich set

00:02:02,040 --> 00:02:05,610
of services that they start to offer

00:02:03,390 --> 00:02:08,129
they're very much bleeding into the

00:02:05,610 --> 00:02:10,170
platform space so these boundaries

00:02:08,129 --> 00:02:13,080
between each layer are becoming much

00:02:10,170 --> 00:02:13,660
more blurred so how does Cloud Foundry

00:02:13,080 --> 00:02:16,660
do

00:02:13,660 --> 00:02:20,170
with cloud computing it does so in two

00:02:16,660 --> 00:02:23,560
ways it uses contracts and it uses

00:02:20,170 --> 00:02:26,110
opinions so starting with this CPI layer

00:02:23,560 --> 00:02:28,330
this cloud provider interface this forms

00:02:26,110 --> 00:02:30,820
a contract between the platform and the

00:02:28,330 --> 00:02:32,950
underlying infrastructure it means that

00:02:30,820 --> 00:02:34,750
the platform isn't bound into any one

00:02:32,950 --> 00:02:37,480
specific infrastructure or one set of

00:02:34,750 --> 00:02:38,800
api's and this means you're free to move

00:02:37,480 --> 00:02:41,200
that platform and run it in different

00:02:38,800 --> 00:02:44,830
environments and by and large you expect

00:02:41,200 --> 00:02:46,360
the same behavior in addition the

00:02:44,830 --> 00:02:48,820
applications that run on Cloud Foundry

00:02:46,360 --> 00:02:51,040
Cloud Foundry itself is a structured

00:02:48,820 --> 00:02:53,230
opinionated platform it has opinions on

00:02:51,040 --> 00:02:54,910
how things should run and those opinions

00:02:53,230 --> 00:02:56,530
there's platform opinions form a

00:02:54,910 --> 00:02:58,930
contract with the applications that run

00:02:56,530 --> 00:03:01,000
on it so that means that Cloud Foundry

00:02:58,930 --> 00:03:03,220
is a platform doesn't care where it runs

00:03:01,000 --> 00:03:06,630
but it is opinionated on the

00:03:03,220 --> 00:03:06,630

YouTube URL: https://www.youtube.com/watch?v=3iREZoFXhlQ


