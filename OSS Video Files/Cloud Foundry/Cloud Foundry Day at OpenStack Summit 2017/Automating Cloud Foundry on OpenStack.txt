Title: Automating Cloud Foundry on OpenStack
Publication date: 2017-05-16
Playlist: Cloud Foundry Day at OpenStack Summit 2017
Description: 
	When we have a stable Cloud Foundry (CF) running on our OpenStack, developers only need to care about their apps. Then the problems we need to solve become the following: how can we automate CF on OpenStack infrastructure in an efficient and effective way? How can we manage CF from development, to staging and on through production? How do we backup CF with all of its apps and services such that in the case of disaster we can fully rebuild and restore the system? How can we monitor CF system's me
Captions: 
	00:00:02,720 --> 00:00:11,580
okay so hello everyone welcome to my

00:00:08,580 --> 00:00:15,209
talk automating Cloud Foundry and

00:00:11,580 --> 00:00:18,660
OpenStack i'ma shoot yoga a cloud

00:00:15,209 --> 00:00:22,170
engineer from Stark and win most of my

00:00:18,660 --> 00:00:26,519
co-workers call me hi I'm going to use

00:00:22,170 --> 00:00:30,539
this search tool XJ because my Chinese

00:00:26,519 --> 00:00:31,170
name easily sounds like plastic go to

00:00:30,539 --> 00:00:34,800
sleep

00:00:31,170 --> 00:00:35,610
pedicure in Chinese I don't prefer to

00:00:34,800 --> 00:00:40,980
sound like that

00:00:35,610 --> 00:00:44,520
so I'm happy with actuate my name touch

00:00:40,980 --> 00:00:48,090
enough about myself I want to simply

00:00:44,520 --> 00:00:51,320
introduce the company I work at so dark

00:00:48,090 --> 00:00:56,280
and win on start and win is a

00:00:51,320 --> 00:00:57,450
consultancy we help our customer being a

00:00:56,280 --> 00:01:01,590
superhero

00:00:57,450 --> 00:01:04,589
Oh a super girl died succeeding with

00:01:01,590 --> 00:01:13,070
their Cloud Foundry story so basically

00:01:04,589 --> 00:01:16,859
we have everything from from wat paramo

00:01:13,070 --> 00:01:20,039
infrastructure operation automation to

00:01:16,859 --> 00:01:22,560
travel factors applications also

00:01:20,039 --> 00:01:24,749
including like a services like how the

00:01:22,560 --> 00:01:29,820
integrated service with their apps of

00:01:24,749 --> 00:01:33,030
that oh forget this I can do this so

00:01:29,820 --> 00:01:35,490
what is a cloud foundry even you didn't

00:01:33,030 --> 00:01:37,649
know what is cloud foundry probably now

00:01:35,490 --> 00:01:43,649
you know because it's at the end of this

00:01:37,649 --> 00:01:46,380
yesterday so oh and the way you laugh at

00:01:43,649 --> 00:01:49,590
me because I should actually use this so

00:01:46,380 --> 00:01:51,420
Cloud Foundry is a pass pass

00:01:49,590 --> 00:01:58,439
device it read yeah pass for cloud

00:01:51,420 --> 00:02:05,579
applications it automates manage scales

00:01:58,439 --> 00:02:08,240
cloud applications mmm I forgot through

00:02:05,579 --> 00:02:11,700
their life cycle is good I have notes so

00:02:08,240 --> 00:02:14,220
application can be written like like in

00:02:11,700 --> 00:02:15,780
just about any language and it can be

00:02:14,220 --> 00:02:20,580
deployed like

00:02:15,780 --> 00:02:24,170
you know in image containers in on top

00:02:20,580 --> 00:02:27,360
of any infrastructure like an open stack

00:02:24,170 --> 00:02:32,130
so what we will talk about in today's

00:02:27,360 --> 00:02:35,970
talk today here is the outline I know it

00:02:32,130 --> 00:02:39,600
looks like a long list but please don't

00:02:35,970 --> 00:02:42,030
worry I clearly know that Bindra

00:02:39,600 --> 00:02:46,290
dinnertime is right after this talk so I

00:02:42,030 --> 00:02:49,440
will keep it short okay first I will

00:02:46,290 --> 00:02:57,480
look we will look at the ecosystem like

00:02:49,440 --> 00:03:01,110
CF and IaaS cloud found in this ha good

00:02:57,480 --> 00:03:04,410
so in this picture you can see Cloud

00:03:01,110 --> 00:03:10,410
Foundry is a path for cloud applications

00:03:04,410 --> 00:03:12,480
it has many great features so developers

00:03:10,410 --> 00:03:17,370
only need to worry about their

00:03:12,480 --> 00:03:19,560
applications also it provides a service

00:03:17,370 --> 00:03:22,680
broker can you integrate the service

00:03:19,560 --> 00:03:25,430
with their applications then Cloud

00:03:22,680 --> 00:03:29,790
Foundry is deployed by Bosch which

00:03:25,430 --> 00:03:33,980
enables this a lot of great feature

00:03:29,790 --> 00:03:37,500
again also it established CF and the

00:03:33,980 --> 00:03:40,190
infrastructure salute CPA which means

00:03:37,500 --> 00:03:44,850
cloud provider interface

00:03:40,190 --> 00:03:52,200
this actually is how we can deploy yes

00:03:44,850 --> 00:03:54,299
on OpenStack so in this talk we are

00:03:52,200 --> 00:03:58,140
going to share with you like Staggerwing

00:03:54,299 --> 00:04:00,989
way to do seems we have gained many

00:03:58,140 --> 00:04:05,040
years of experience with this CRV

00:04:00,989 --> 00:04:09,239
ecosystem we have helped a lot of

00:04:05,040 --> 00:04:12,390
customers like Intel viscom ultimate

00:04:09,239 --> 00:04:16,950
software with their CF platform and

00:04:12,390 --> 00:04:18,560
applications so here today in this talk

00:04:16,950 --> 00:04:20,190
we are going to share those best

00:04:18,560 --> 00:04:23,310
practice with you

00:04:20,190 --> 00:04:25,980
so whoever didn't go to dinner early

00:04:23,310 --> 00:04:29,250
come here is lucky

00:04:25,980 --> 00:04:32,730
I hope you will agree what I said after

00:04:29,250 --> 00:04:37,830
this talk so how do the first location

00:04:32,730 --> 00:04:42,690
is how to way deploys yes deploy

00:04:37,830 --> 00:04:44,940
automated CFO on OpenStack so first we

00:04:42,690 --> 00:04:49,050
need to make sure that your OpenStack is

00:04:44,940 --> 00:04:53,130
ready for deployment yes by running the

00:04:49,050 --> 00:04:55,670
OpenStack validator from there then we

00:04:53,130 --> 00:04:58,620
can set up like in virtual research

00:04:55,670 --> 00:05:03,920
resources like networking security

00:04:58,620 --> 00:05:12,300
groups then we can deploy those yes Oh

00:05:03,920 --> 00:05:14,820
before we did it up Oh books yeah before

00:05:12,300 --> 00:05:17,370
we use the Pisan to set up OpenStack

00:05:14,820 --> 00:05:20,610
networking now we use a tariff room if

00:05:17,370 --> 00:05:26,460
you want the details you can go to our

00:05:20,610 --> 00:05:28,430
github so most of the students in CF

00:05:26,460 --> 00:05:32,880
were probably you already know it

00:05:28,430 --> 00:05:35,520
deployed by Bosch in order to deploy and

00:05:32,880 --> 00:05:39,660
many do CF we have to develop our

00:05:35,520 --> 00:05:40,680
director first there are lot of great

00:05:39,660 --> 00:05:45,180
documentation

00:05:40,680 --> 00:05:49,560
certainly include our blog to introduce

00:05:45,180 --> 00:05:53,430
you how to apply Vash so I will not talk

00:05:49,560 --> 00:05:56,790
about that here we will focus on how to

00:05:53,430 --> 00:06:01,590
deploy and automating CF and OpenStack

00:05:56,790 --> 00:06:05,340
oh and the other universe sure so how do

00:06:01,590 --> 00:06:08,790
we automate multiple deployments so

00:06:05,340 --> 00:06:12,750
deploy a single CF is pretty easy the

00:06:08,790 --> 00:06:15,630
challenge is how do we automate multiple

00:06:12,750 --> 00:06:18,990
CF deployment across multiple

00:06:15,630 --> 00:06:22,680
environments and the data centers we use

00:06:18,990 --> 00:06:25,320
conkers pipeline congress pipeline is a

00:06:22,680 --> 00:06:28,950
tool probably you already noise as the

00:06:25,320 --> 00:06:32,010
ICD tool like can for both in for sure

00:06:28,950 --> 00:06:34,320
our application of CF our pipeline

00:06:32,010 --> 00:06:38,840
generally goes through diving

00:06:34,320 --> 00:06:42,800
environment then staging then production

00:06:38,840 --> 00:06:46,030
we have a project is a live living or

00:06:42,800 --> 00:06:49,910
live in live in Libyan living

00:06:46,030 --> 00:06:52,250
documentation called codex so if we are

00:06:49,910 --> 00:06:56,270
interested you you can go to check out

00:06:52,250 --> 00:06:58,850
that and oh thanks for bearing with me

00:06:56,270 --> 00:07:02,600
with my English because some words you

00:06:58,850 --> 00:07:06,320
know I don't pronounce it perfectly but

00:07:02,600 --> 00:07:13,190
maybe you still get my message so this

00:07:06,320 --> 00:07:16,940
is us what's fun ok so this is a

00:07:13,190 --> 00:07:21,890
screenshot for one of our pipelines so

00:07:16,940 --> 00:07:24,020
you hear this you can see I don't know

00:07:21,890 --> 00:07:27,620
if the people sitting in the back can

00:07:24,020 --> 00:07:31,130
see or not but I will explain so first

00:07:27,620 --> 00:07:36,020
it would apply to both lights both light

00:07:31,130 --> 00:07:39,380
is a light with onion one we ambush

00:07:36,020 --> 00:07:43,060
director after it passed other ties to

00:07:39,380 --> 00:07:46,070
here it will automatically reply to

00:07:43,060 --> 00:07:48,770
development environment then in this

00:07:46,070 --> 00:07:51,560
environment you know after all the tests

00:07:48,770 --> 00:07:54,860
pass it also automatically go to the

00:07:51,560 --> 00:07:58,940
staging environment but from here to

00:07:54,860 --> 00:08:02,570
Pratt we set it in a way that you have

00:07:58,940 --> 00:08:06,350
to manually click in order to deploy to

00:08:02,570 --> 00:08:10,070
Pratt because probably you always prefer

00:08:06,350 --> 00:08:12,770
you can let some operator watching your

00:08:10,070 --> 00:08:20,900
deploying production instead of being

00:08:12,770 --> 00:08:24,310
surprised at 3m right yeah oh I see

00:08:20,900 --> 00:08:24,310
someone shared his pain

00:08:24,610 --> 00:08:34,190
what so next topic how do we handle

00:08:30,190 --> 00:08:36,589
credentials and as a TV certificates so

00:08:34,190 --> 00:08:39,469
they are safe which means they are not

00:08:36,589 --> 00:08:43,070
stored on disk there are not in your

00:08:39,469 --> 00:08:46,160
given reports right even worse some day

00:08:43,070 --> 00:08:48,800
you just accidentally killed push and

00:08:46,160 --> 00:08:50,839
you didn't Gilligan or you generously

00:08:48,800 --> 00:08:53,340
share your credentials with the world

00:08:50,839 --> 00:08:58,060
your boss will be mine

00:08:53,340 --> 00:09:00,900
so in addition you also want easily

00:08:58,060 --> 00:09:03,130
rotated your credentials because some

00:09:00,900 --> 00:09:07,030
parameters to figure out students right

00:09:03,130 --> 00:09:12,280
so you want to rotate them what Howie do

00:09:07,030 --> 00:09:15,850
is this we use vote vote and the safe I

00:09:12,280 --> 00:09:20,490
I bet all the people here know what what

00:09:15,850 --> 00:09:25,180
is safe safe is the true we wrote it's

00:09:20,490 --> 00:09:25,990
it's a CR C a right to interacting with

00:09:25,180 --> 00:09:31,090
what

00:09:25,990 --> 00:09:34,090
but what benefits the safe has um if we

00:09:31,090 --> 00:09:40,300
use a safe we can like we can generate

00:09:34,090 --> 00:09:46,480
our rotate provide either I such as as

00:09:40,300 --> 00:09:51,370
age kids or certificates are random

00:09:46,480 --> 00:09:54,480
secure passwords in addition the safe we

00:09:51,370 --> 00:10:00,040
can also manage multi multiple votes

00:09:54,480 --> 00:10:05,170
that is nice huh your credentials may be

00:10:00,040 --> 00:10:10,680
safe if you use this but that doesn't

00:10:05,170 --> 00:10:16,750
mean your platform will not feel why

00:10:10,680 --> 00:10:21,810
because networking when your apps oh yes

00:10:16,750 --> 00:10:25,420
yes or maybe your underlying universe in

00:10:21,810 --> 00:10:29,050
infrastructure they may go through a

00:10:25,420 --> 00:10:34,030
down time I see someone nod his head

00:10:29,050 --> 00:10:38,530
thank you in this case you want your

00:10:34,030 --> 00:10:39,640
whole project become operational as soon

00:10:38,530 --> 00:10:43,500
as possible

00:10:39,640 --> 00:10:47,860
without losing any important data that

00:10:43,500 --> 00:10:51,550
bring bring us our next topic we want

00:10:47,860 --> 00:10:54,960
convert this failure to success how we

00:10:51,550 --> 00:10:59,680
do that handled disaster recovery

00:10:54,960 --> 00:11:03,760
efficiently you know good way how do we

00:10:59,680 --> 00:11:05,600
do that we usually shoot yep we hired of

00:11:03,760 --> 00:11:08,250
them

00:11:05,600 --> 00:11:14,579
now I know how many people watched this

00:11:08,250 --> 00:11:18,860
movie so now I'm being more serious so

00:11:14,579 --> 00:11:22,769
what is shield shield is a distribute a

00:11:18,860 --> 00:11:27,300
framework framework that start away and

00:11:22,769 --> 00:11:31,459
build the purpose is be the guardians of

00:11:27,300 --> 00:11:34,170
CF galaxy collects see ya

00:11:31,459 --> 00:11:36,930
okay now I'm really being serious

00:11:34,170 --> 00:11:41,370
so shear that the shield of a builder

00:11:36,930 --> 00:11:45,230
can product protect your CF the absolute

00:11:41,370 --> 00:11:50,160
yet and the service leadership Mars

00:11:45,230 --> 00:11:53,190
basically more specifically shield can

00:11:50,160 --> 00:11:58,079
protect your CF core what I mean by that

00:11:53,190 --> 00:12:01,680
it can pack up under restore your ccdb

00:11:58,079 --> 00:12:06,089
you a DB and Diego DB after you'd

00:12:01,680 --> 00:12:09,690
migrated to Diego right it also protects

00:12:06,089 --> 00:12:13,290
service in CS like you may have a post

00:12:09,690 --> 00:12:17,459
where storage MongoDB Mexico already's

00:12:13,290 --> 00:12:22,279
or epidemic you um shield okay Becca

00:12:17,459 --> 00:12:27,480
Brewster others on shield also protect

00:12:22,279 --> 00:12:30,510
protects any both deployment as you may

00:12:27,480 --> 00:12:32,819
know most of the scenes in CF word can

00:12:30,510 --> 00:12:36,060
be deployed by pouch as soon as they are

00:12:32,819 --> 00:12:39,630
being deployed by Bosh so that makes

00:12:36,060 --> 00:12:42,240
shield very powerful also so because it

00:12:39,630 --> 00:12:45,720
can literally back happy restore any

00:12:42,240 --> 00:12:49,560
Bosh deployment a tricky part is about

00:12:45,720 --> 00:12:54,000
the yourself because Zod is

00:12:49,560 --> 00:12:59,100
also deployed by Bosh now post apply

00:12:54,000 --> 00:13:02,519
shield shield a backup Bosh hmm there is

00:12:59,100 --> 00:13:05,250
a story let's say you have your C F

00:13:02,519 --> 00:13:07,819
random you have lots of wipes and the

00:13:05,250 --> 00:13:10,170
service you know CF platform

00:13:07,819 --> 00:13:14,579
someone just to bring down your

00:13:10,170 --> 00:13:16,130
datacenter so now now if your software

00:13:14,579 --> 00:13:18,670
works

00:13:16,130 --> 00:13:21,200
and then what we are going to do

00:13:18,670 --> 00:13:24,050
probably the first step you're going to

00:13:21,200 --> 00:13:28,010
say I have hardware right the next you

00:13:24,050 --> 00:13:30,980
may deploy a Bosch you deploy about then

00:13:28,010 --> 00:13:34,070
you bring up you use the pouch deploy

00:13:30,980 --> 00:13:38,450
the shield right then you want to use

00:13:34,070 --> 00:13:43,580
the shield shield to bring back o your

00:13:38,450 --> 00:13:46,940
other services apps all that sounds good

00:13:43,580 --> 00:13:50,480
but be careful because you may wake up

00:13:46,940 --> 00:13:56,170
your post database the the shield that

00:13:50,480 --> 00:14:03,170
you deployed use Bosch is often often

00:13:56,170 --> 00:14:06,200
often often you know you often so to

00:14:03,170 --> 00:14:10,160
avoid that actually we make shielder can

00:14:06,200 --> 00:14:12,200
recover but without repair the shield

00:14:10,160 --> 00:14:14,990
Iranian it's dead cool

00:14:12,200 --> 00:14:21,130
so basically used to be about you

00:14:14,990 --> 00:14:24,830
somehow shield just can use your I to a

00:14:21,130 --> 00:14:28,460
recovery about without so we have our

00:14:24,830 --> 00:14:32,030
shield so in this way everything you had

00:14:28,460 --> 00:14:33,490
before is brought back so that's very

00:14:32,030 --> 00:14:38,960
cool

00:14:33,490 --> 00:14:42,230
yeah so shielding is awesome also

00:14:38,960 --> 00:14:46,070
machine which is really simple now you

00:14:42,230 --> 00:14:51,250
can you can see the framework of shield

00:14:46,070 --> 00:14:55,880
is pretty simple there is a core daemon

00:14:51,250 --> 00:14:59,390
which deal with all the metadata deal

00:14:55,880 --> 00:15:01,520
with like schedules like how how you are

00:14:59,390 --> 00:15:04,940
going to how often you want to backup

00:15:01,520 --> 00:15:09,400
your staff retention policy how long I

00:15:04,940 --> 00:15:13,300
want to keep your backups right you then

00:15:09,400 --> 00:15:17,060
taggi the plug-in is just your specific

00:15:13,300 --> 00:15:20,600
what you want to backup is a post crash

00:15:17,060 --> 00:15:23,470
or some icicle is what the pseudo reg

00:15:20,600 --> 00:15:26,430
plugin where do you want to Dario backup

00:15:23,470 --> 00:15:29,850
local file system

00:15:26,430 --> 00:15:31,980
sounds good ice tree swift all that as

00:15:29,850 --> 00:15:35,610
long as you have the plug-in and you can

00:15:31,980 --> 00:15:37,860
make it work certainly a good software

00:15:35,610 --> 00:15:42,750
will have a nice user interface and

00:15:37,860 --> 00:15:46,080
they'll cool CRI marks basically in the

00:15:42,750 --> 00:15:48,510
Bosch word if you want let's say you

00:15:46,080 --> 00:15:51,330
want the bag hopper to restart yes

00:15:48,510 --> 00:15:54,000
you only need a configure Co the agent

00:15:51,330 --> 00:15:57,330
on your CF deployment sim will for the

00:15:54,000 --> 00:15:59,279
rapid home kill and the Redis then then

00:15:57,330 --> 00:16:03,420
for where you want to store your backup

00:15:59,279 --> 00:16:04,680
then you can configure your storage

00:16:03,420 --> 00:16:07,920
plug-in here

00:16:04,680 --> 00:16:13,529
the you can backup and restore your

00:16:07,920 --> 00:16:17,730
staff the another nice thing about this

00:16:13,529 --> 00:16:20,310
shield is it's very easy to write your

00:16:17,730 --> 00:16:24,230
own plugin it's like a piece of cake

00:16:20,310 --> 00:16:25,380
like cheesecake ice cream cake or

00:16:24,230 --> 00:16:30,270
strawberry

00:16:25,380 --> 00:16:32,580
yeah that's my favorite okay so why

00:16:30,270 --> 00:16:36,150
writing plugin is like a piece of cake

00:16:32,580 --> 00:16:39,020
the reason actually it's just because

00:16:36,150 --> 00:16:43,050
what I shared with you earlier we said

00:16:39,020 --> 00:16:45,150
we have this framework because we taken

00:16:43,050 --> 00:16:48,959
care of all the things in here like a

00:16:45,150 --> 00:16:51,990
metadata management schedule retention

00:16:48,959 --> 00:16:53,970
all that you only need a very about the

00:16:51,990 --> 00:16:55,770
piece you are writing right you only

00:16:53,970 --> 00:16:58,890
need to worry about your solution let's

00:16:55,770 --> 00:17:01,050
say maybe we don't have a MongoDB

00:16:58,890 --> 00:17:03,000
actually we have it enough let's say we

00:17:01,050 --> 00:17:05,640
don't have some plugin but you need it

00:17:03,000 --> 00:17:07,579
hey you can just wrap your own only

00:17:05,640 --> 00:17:10,679
write rather your own piece of solution

00:17:07,579 --> 00:17:15,230
what's this oh it didn't show up on your

00:17:10,679 --> 00:17:18,049
strong on mine so mmm

00:17:15,230 --> 00:17:21,949
but if you don't want to make a piece of

00:17:18,049 --> 00:17:31,549
cake you can also ask us to do it pay us

00:17:21,949 --> 00:17:38,630
to do it so yeah ships with shield is

00:17:31,549 --> 00:17:42,019
awesome but it can be bite her like if

00:17:38,630 --> 00:17:45,760
we can catch the failure before it

00:17:42,019 --> 00:17:49,279
happens then we don't need to deal with

00:17:45,760 --> 00:17:53,779
disaster right this for this we need

00:17:49,279 --> 00:17:55,330
monitoring and we expecting some laughs

00:17:53,779 --> 00:18:01,370
for this

00:17:55,330 --> 00:18:07,159
okay so Mondrian what we use Promises

00:18:01,370 --> 00:18:10,070
Promises 2 to monitor like CF Bosch and

00:18:07,159 --> 00:18:14,840
and Annie like many other boat

00:18:10,070 --> 00:18:18,139
deployments our databases are that - -

00:18:14,840 --> 00:18:21,500
in order to be able to monitor things

00:18:18,139 --> 00:18:24,700
you need a radio or an exporter like

00:18:21,500 --> 00:18:28,970
this exporter should be able to extract

00:18:24,700 --> 00:18:34,419
the matrix for the things you want to

00:18:28,970 --> 00:18:39,039
monitor with we weed apply these

00:18:34,419 --> 00:18:43,130
promises use Bosch we use it to monitor

00:18:39,039 --> 00:18:46,370
diplomacy in CF across like several

00:18:43,130 --> 00:18:52,730
environments and the data centers this

00:18:46,370 --> 00:18:55,010
ripple this is this is how we take

00:18:52,730 --> 00:18:59,090
advantage this river we made this then

00:18:55,010 --> 00:19:04,159
we deploy promises using this so for

00:18:59,090 --> 00:19:07,820
like for more details you can go here ha

00:19:04,159 --> 00:19:09,769
actually I'm doing good because we we

00:19:07,820 --> 00:19:12,200
will finish early you will be happy

00:19:09,769 --> 00:19:15,529
because you will have dinner early the

00:19:12,200 --> 00:19:20,000
last piece I want to share is that how

00:19:15,529 --> 00:19:24,860
do we deal with logs we ship the logs

00:19:20,000 --> 00:19:28,240
uses Samuel Samuel is another tool we

00:19:24,860 --> 00:19:32,480
created I know we create a lot of

00:19:28,240 --> 00:19:36,760
so what is that it basically just a

00:19:32,480 --> 00:19:40,700
greets the locks to like a single single

00:19:36,760 --> 00:19:43,760
stream then you can just connect the two

00:19:40,700 --> 00:19:46,640
one note in the Samuel cluster then your

00:19:43,760 --> 00:19:49,310
logs will be Center then it will help

00:19:46,640 --> 00:19:52,250
with your level debugging so basically

00:19:49,310 --> 00:19:55,820
you can watch your logs well the error

00:19:52,250 --> 00:19:59,660
happens help you debug that way and of

00:19:55,820 --> 00:20:05,180
course it also deployed by Bosch and

00:19:59,660 --> 00:20:09,590
again we have this release so you can be

00:20:05,180 --> 00:20:13,190
deployed by Bosch oh this the cloud

00:20:09,590 --> 00:20:19,550
community is the one of our github rocks

00:20:13,190 --> 00:20:23,740
we have lots of cool sensor so I shared

00:20:19,550 --> 00:20:27,470
a lot about how to way to things like

00:20:23,740 --> 00:20:29,930
lots of cool tools now I'm going to

00:20:27,470 --> 00:20:33,590
share some information about how to you

00:20:29,930 --> 00:20:36,950
two things how do you find out more you

00:20:33,590 --> 00:20:41,240
can go to our blog just start and winter

00:20:36,950 --> 00:20:43,610
camp block a slash blog and we do get

00:20:41,240 --> 00:20:46,760
feedback from people like at a

00:20:43,610 --> 00:20:50,720
conference they will mention recently a

00:20:46,760 --> 00:20:52,880
blog saved my day because similar bugger

00:20:50,720 --> 00:20:55,220
happened then they googled our blog

00:20:52,880 --> 00:20:59,800
showed up just to really help them

00:20:55,220 --> 00:21:02,810
debugger problem at least I'm very happy

00:20:59,800 --> 00:21:05,570
when that happens because you're early

00:21:02,810 --> 00:21:07,760
no one noticed me I don't 3rd Hamza

00:21:05,570 --> 00:21:10,580
people say I see your company or female

00:21:07,760 --> 00:21:12,890
wrote a blog but ever there's what is

00:21:10,580 --> 00:21:18,010
the blog blogger and start over there oh

00:21:12,890 --> 00:21:21,950
that's me yeah second is our github

00:21:18,010 --> 00:21:23,240
example this clouded community we have

00:21:21,950 --> 00:21:25,790
this abstraction weighing

00:21:23,240 --> 00:21:30,740
cloud community yeah those drew we have

00:21:25,790 --> 00:21:36,670
lots of stuff in this to github out we

00:21:30,740 --> 00:21:36,670
also can be reached by a email beer hero

00:21:37,010 --> 00:21:41,570
maybe we should have another one beer

00:21:40,360 --> 00:21:45,230
Supergirl

00:21:41,570 --> 00:21:50,020
I just Darwin calm yeah also we have a

00:21:45,230 --> 00:21:54,380
CF ambassador boost it's in the market

00:21:50,020 --> 00:21:58,040
marketplace c18 so feel free to stop by

00:21:54,380 --> 00:22:02,630
anytime we will have people there talk

00:21:58,040 --> 00:22:02,810
with you answer questions alright thank

00:22:02,630 --> 00:22:06,290
you

00:22:02,810 --> 00:22:10,130
oh yeah that's all if you have any

00:22:06,290 --> 00:22:18,050
questions you can ask one requirement is

00:22:10,130 --> 00:22:23,540
that you have used a mic there thank you

00:22:18,050 --> 00:22:23,540

YouTube URL: https://www.youtube.com/watch?v=99edOx8qGqs


