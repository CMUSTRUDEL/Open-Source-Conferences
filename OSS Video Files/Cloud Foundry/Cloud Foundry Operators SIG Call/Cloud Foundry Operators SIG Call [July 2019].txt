Title: Cloud Foundry Operators SIG Call [July 2019]
Publication date: 2019-07-26
Playlist: Cloud Foundry Operators SIG Call
Description: 
	
Captions: 
	00:00:02,030 --> 00:00:07,950
okay okay good so hello everyone thanks

00:00:07,290 --> 00:00:12,960
for joining

00:00:07,950 --> 00:00:15,990
so this is our fourth cig meeting so

00:00:12,960 --> 00:00:19,039
today we have packed agenda so we'll be

00:00:15,990 --> 00:00:21,539
having the first presentation from

00:00:19,039 --> 00:00:25,769
Constantine I will be presenting about

00:00:21,539 --> 00:00:28,320
the conkers versus circle CA and then we

00:00:25,769 --> 00:00:30,330
have couple of open discussions so the

00:00:28,320 --> 00:00:31,980
first one is all about so how to audit

00:00:30,330 --> 00:00:35,040
activity on the cloud for Android

00:00:31,980 --> 00:00:37,739
platform and so another one is all about

00:00:35,040 --> 00:00:40,230
the application matrix and platform

00:00:37,739 --> 00:00:43,260
matrix for flat foundry using the

00:00:40,230 --> 00:00:45,210
Prometheus yes maybe we can straight

00:00:43,260 --> 00:00:48,390
away get into the first presentation

00:00:45,210 --> 00:00:52,610
from Constantine so maybe you can just

00:00:48,390 --> 00:00:52,610
melt and then yeah you can take it away

00:01:12,240 --> 00:01:15,240
hello

00:01:31,149 --> 00:01:36,390
so construed in actually we don't hear

00:01:34,240 --> 00:01:36,390
you

00:01:53,990 --> 00:01:57,440
[Music]

00:02:15,850 --> 00:02:19,030
[Music]

00:02:21,310 --> 00:02:47,959
hey can everybody hear me yeah we can

00:02:24,680 --> 00:03:08,120
hear you know yeah yes we can hear think

00:02:47,959 --> 00:03:10,600
you that's not able to hear us we can

00:03:08,120 --> 00:03:10,600
see your screen

00:03:16,020 --> 00:03:32,310
[Music]

00:03:53,210 --> 00:03:56,309
[Music]

00:04:14,080 --> 00:04:19,640
hey I think I can hear everybody you

00:04:17,510 --> 00:04:24,380
know somebody say something

00:04:19,640 --> 00:04:27,490
hi can you know yeah all right okay

00:04:24,380 --> 00:04:30,320
that's awesome okay

00:04:27,490 --> 00:04:33,140
can you guys see my screen I'm assuming

00:04:30,320 --> 00:04:36,650
that yes yes awesome

00:04:33,140 --> 00:04:39,080
okay so let's let's start it and I'll

00:04:36,650 --> 00:04:41,750
open them I'll keep I'll keep the chat

00:04:39,080 --> 00:04:46,100
open so if anybody have questions or I

00:04:41,750 --> 00:04:48,380
love like I kind of present free flow so

00:04:46,100 --> 00:04:51,530
when people interrupt me I'm happy to

00:04:48,380 --> 00:04:53,180
kind of stop and explain and really the

00:04:51,530 --> 00:04:54,650
I think from what I understood now the

00:04:53,180 --> 00:04:56,960
goal of this kind of presentation is

00:04:54,650 --> 00:04:58,460
really to to kind of dive as deep as

00:04:56,960 --> 00:05:01,040
possible and to show like as many

00:04:58,460 --> 00:05:02,320
differences and similarities as possible

00:05:01,040 --> 00:05:05,480
and what works what doesn't work and

00:05:02,320 --> 00:05:14,380
then we'll go from there okay just

00:05:05,480 --> 00:05:14,380
getting the last thing okay cool

00:05:16,670 --> 00:05:20,840
so first I'll start by introducing

00:05:18,320 --> 00:05:25,220
myself my name is Constantine it's Cove

00:05:20,840 --> 00:05:28,700
I go by Costa I am I guess I'm a serial

00:05:25,220 --> 00:05:30,290
entrepreneur at this point or not I

00:05:28,700 --> 00:05:35,360
don't know if the most successful but

00:05:30,290 --> 00:05:38,570
whatever I my day job is professionally

00:05:35,360 --> 00:05:40,850
what I do is help out companies and sort

00:05:38,570 --> 00:05:44,030
of at a very early stage

00:05:40,850 --> 00:05:46,130
mostly minimal Viable Product

00:05:44,030 --> 00:05:48,470
Development and up to like multiple

00:05:46,130 --> 00:05:50,240
company multiple clients that's my

00:05:48,470 --> 00:05:52,580
that's that's what I love I love

00:05:50,240 --> 00:05:55,009
I love kind of really putting my hand in

00:05:52,580 --> 00:05:58,430
there setting up teams I have a couple

00:05:55,009 --> 00:06:02,000
of my own companies and so really my

00:05:58,430 --> 00:06:05,030
experience is mostly like doing a lot of

00:06:02,000 --> 00:06:08,240
everything and you know it just happened

00:06:05,030 --> 00:06:11,090
that that concourse is is one of my

00:06:08,240 --> 00:06:13,520
favorites I don't use it as much today

00:06:11,090 --> 00:06:15,349
but I definitely messed around a lot

00:06:13,520 --> 00:06:17,300
with it and internally as much as I

00:06:15,349 --> 00:06:20,660
could and these days a lot of a lot of

00:06:17,300 --> 00:06:23,060
it they use a circle CI from what most

00:06:20,660 --> 00:06:26,300
of my project and so it was kind of

00:06:23,060 --> 00:06:29,930
asked for me to dive deep and explain as

00:06:26,300 --> 00:06:34,099
many details and differences as possible

00:06:29,930 --> 00:06:35,960
so so let's let's go at it so this is

00:06:34,099 --> 00:06:40,310
how how I sort of know a lot of the

00:06:35,960 --> 00:06:42,889
stuff so on the agenda today I think I

00:06:40,310 --> 00:06:44,330
have like 30 minutes to present I don't

00:06:42,889 --> 00:06:47,030
know if I have my presentation is that

00:06:44,330 --> 00:06:50,090
long but what I figured what we can do

00:06:47,030 --> 00:06:54,500
is maybe we can i'm the demo section is

00:06:50,090 --> 00:06:58,699
really long so so i try to actually set

00:06:54,500 --> 00:07:01,610
up projects almost from scratch for both

00:06:58,699 --> 00:07:03,949
circle CI and concourse so we can

00:07:01,610 --> 00:07:06,199
actually see the differences in in real

00:07:03,949 --> 00:07:08,599
time and then i'll just show it in code

00:07:06,199 --> 00:07:10,580
and then from there we can just we can

00:07:08,599 --> 00:07:12,469
just kind of open up questions and you

00:07:10,580 --> 00:07:14,060
know hey show me this or show me that

00:07:12,469 --> 00:07:17,000
now I'll be happy to kind of talk about

00:07:14,060 --> 00:07:19,159
it okay so the agenda today is basically

00:07:17,000 --> 00:07:24,289
do a general introduction

00:07:19,159 --> 00:07:26,240
I'll run really quickly through like you

00:07:24,289 --> 00:07:28,969
know what a CI CD or like why the hell

00:07:26,240 --> 00:07:32,719
we do we need it and I yeah I think I -

00:07:28,969 --> 00:07:35,360
lies silly here but whatever I'll do

00:07:32,719 --> 00:07:40,039
comparison of core concepts between

00:07:35,360 --> 00:07:42,650
circle CI and and concourse and so to

00:07:40,039 --> 00:07:44,000
kind of explain how I see them as from

00:07:42,650 --> 00:07:46,340
from the perspective of the companies

00:07:44,000 --> 00:07:48,740
that are actually developing it and then

00:07:46,340 --> 00:07:50,509
we'll dive into all that the differences

00:07:48,740 --> 00:07:53,120
and similarities of like configuration

00:07:50,509 --> 00:07:55,460
files and what does it mean use your

00:07:53,120 --> 00:07:57,580
interfaces just generally and I'll

00:07:55,460 --> 00:08:00,190
actually show it in

00:07:57,580 --> 00:08:03,610
couple of projects so we can compare and

00:08:00,190 --> 00:08:07,030
then really I'll dive into a demo and

00:08:03,610 --> 00:08:08,680
just we'll kind of take it as this and

00:08:07,030 --> 00:08:10,470
finally I'll wrap up with like a few

00:08:08,680 --> 00:08:13,270
points about supportive community

00:08:10,470 --> 00:08:15,280
because I think a lot of times people go

00:08:13,270 --> 00:08:17,590
people don't touch that and in

00:08:15,280 --> 00:08:19,150
presentation today and I'm gonna over

00:08:17,590 --> 00:08:21,940
about projects in jail product in

00:08:19,150 --> 00:08:23,860
general and and then I'll wrap up in

00:08:21,940 --> 00:08:25,540
like my own points and we can start

00:08:23,860 --> 00:08:29,260
having a full conversation about about

00:08:25,540 --> 00:08:33,400
it anything you guys want okay so let's

00:08:29,260 --> 00:08:37,540
go continuous integration why the hell

00:08:33,400 --> 00:08:40,960
do we need it so there's a whole bunch

00:08:37,540 --> 00:08:42,700
of different points but I kind of listed

00:08:40,960 --> 00:08:45,910
you know seven of the ones that I

00:08:42,700 --> 00:08:47,740
personally care about and some of them

00:08:45,910 --> 00:08:49,630
are continuous integration is really

00:08:47,740 --> 00:08:51,490
these days because have become almost a

00:08:49,630 --> 00:08:53,230
standard norm pretty much in every

00:08:51,490 --> 00:08:56,020
company especially in small companies

00:08:53,230 --> 00:08:58,150
where you have a small group of T a

00:08:56,020 --> 00:09:01,450
small group of people but you really

00:08:58,150 --> 00:09:05,410
want to just deploy deploy deploy

00:09:01,450 --> 00:09:07,660
without ever necessarily having a really

00:09:05,410 --> 00:09:09,580
deep interruption about about the

00:09:07,660 --> 00:09:12,940
deployment process and the reason for it

00:09:09,580 --> 00:09:15,670
is because because small teams don't

00:09:12,940 --> 00:09:17,620
have DevOps people so most of the

00:09:15,670 --> 00:09:20,380
engineers end up doing everything and

00:09:17,620 --> 00:09:23,110
the diversity and skills of engineering

00:09:20,380 --> 00:09:25,330
is quite large so you you know you have

00:09:23,110 --> 00:09:27,790
to assume that if you have a front-end

00:09:25,330 --> 00:09:29,350
engineer working in a team and a

00:09:27,790 --> 00:09:30,640
back-end engineer working in C I mean

00:09:29,350 --> 00:09:33,010
neither one of them actually knows

00:09:30,640 --> 00:09:35,800
enough DevOps to deploy things properly

00:09:33,010 --> 00:09:38,770
and so you want to really set up a

00:09:35,800 --> 00:09:41,560
continuous process for for integration

00:09:38,770 --> 00:09:43,270
and develop and deployment and and this

00:09:41,560 --> 00:09:46,960
is where it can't comes in so like some

00:09:43,270 --> 00:09:50,530
of the points are when you when you have

00:09:46,960 --> 00:09:53,560
a really good automated automated

00:09:50,530 --> 00:09:55,930
process a it's it's really to deploy

00:09:53,560 --> 00:09:58,660
very fast small chunks and when you

00:09:55,930 --> 00:10:02,740
minimize the small chunks it's easy to

00:09:58,660 --> 00:10:04,780
the bug when when it's like wile it's

00:10:02,740 --> 00:10:06,730
like 300 lines of code

00:10:04,780 --> 00:10:10,480
every iteration it's very very easy to

00:10:06,730 --> 00:10:11,350
debug for all the people involved and so

00:10:10,480 --> 00:10:12,880
even

00:10:11,350 --> 00:10:17,380
front-end engineers can actually learn

00:10:12,880 --> 00:10:19,000
how what's going on with the code yeah

00:10:17,380 --> 00:10:21,430
and that's kind of like the second point

00:10:19,000 --> 00:10:22,720
more people can review I there are a lot

00:10:21,430 --> 00:10:24,570
of projects a lot of open source

00:10:22,720 --> 00:10:27,250
projects that I've seen these days where

00:10:24,570 --> 00:10:28,960
there's one person who is managing the

00:10:27,250 --> 00:10:32,200
entire process and and there are two

00:10:28,960 --> 00:10:34,900
three hundred contributors and and and

00:10:32,200 --> 00:10:38,500
so but the way they achieved that by

00:10:34,900 --> 00:10:40,750
allowing anybody to actually merge into

00:10:38,500 --> 00:10:42,790
into the trunk into the main and to the

00:10:40,750 --> 00:10:46,300
master branch but then in the process

00:10:42,790 --> 00:10:48,190
what people do is they they let everyone

00:10:46,300 --> 00:10:50,230
else involved actually review each

00:10:48,190 --> 00:10:52,060
other's code and by doing that it's

00:10:50,230 --> 00:10:54,910
they're sort of anybody can review the

00:10:52,060 --> 00:10:57,730
code consistency improve confidence I

00:10:54,910 --> 00:11:02,470
think that when you set up automated

00:10:57,730 --> 00:11:04,450
testing then there's a central place

00:11:02,470 --> 00:11:06,490
where the testing have to pass and so

00:11:04,450 --> 00:11:07,990
that means no matter who is pushing the

00:11:06,490 --> 00:11:09,910
code there's always consistency about

00:11:07,990 --> 00:11:11,830
what kind of test is which tests are

00:11:09,910 --> 00:11:14,080
being run and how they're being how

00:11:11,830 --> 00:11:16,750
they're being executed and so that gives

00:11:14,080 --> 00:11:19,360
confidence I encourage a lot of small

00:11:16,750 --> 00:11:20,800
teams often to just commit little pieces

00:11:19,360 --> 00:11:22,780
if you're working even if you're working

00:11:20,800 --> 00:11:24,940
on a on a piece of code that is a two

00:11:22,780 --> 00:11:26,590
week long piece of code commit the

00:11:24,940 --> 00:11:28,480
little pieces that belong to the code

00:11:26,590 --> 00:11:30,370
along the way because once you commit

00:11:28,480 --> 00:11:31,690
those little chunks of code there's some

00:11:30,370 --> 00:11:33,580
confidence about the fact that they're

00:11:31,690 --> 00:11:34,780
in the master branch even if they're not

00:11:33,580 --> 00:11:37,990
being used by the minute by the

00:11:34,780 --> 00:11:40,060
application yet they're there and once

00:11:37,990 --> 00:11:41,770
they're there you sort of mentally you

00:11:40,060 --> 00:11:49,470
separate away from like oh this can

00:11:41,770 --> 00:11:53,470
break and our points frequency just just

00:11:49,470 --> 00:11:56,620
scales down complexity that means that

00:11:53,470 --> 00:11:59,770
means you can build a big project very

00:11:56,620 --> 00:12:02,290
fast by committing very little pieces of

00:11:59,770 --> 00:12:04,390
the code and the only way you can do

00:12:02,290 --> 00:12:07,210
that with a with a growing team is when

00:12:04,390 --> 00:12:11,050
each engineer can sort of do that

00:12:07,210 --> 00:12:12,490
independently and and by doing and the

00:12:11,050 --> 00:12:15,220
only way you can do it is with

00:12:12,490 --> 00:12:18,850
with continuous integration catching

00:12:15,220 --> 00:12:21,270
bugs early that's the easiest one you

00:12:18,850 --> 00:12:23,230
really as long as you have a very good

00:12:21,270 --> 00:12:25,430
continuous integration process you can

00:12:23,230 --> 00:12:28,260
just catch things quickly

00:12:25,430 --> 00:12:30,750
faster development cycles that's a non

00:12:28,260 --> 00:12:33,360
brainer and I think one of the one of

00:12:30,750 --> 00:12:35,340
those that sort of are missed out on

00:12:33,360 --> 00:12:37,350
some of the tools some of the

00:12:35,340 --> 00:12:39,540
integration tools are monitoring and

00:12:37,350 --> 00:12:41,760
measuring code quality you know I'll try

00:12:39,540 --> 00:12:44,580
maybe I'll show you like a couple of

00:12:41,760 --> 00:12:47,850
open sources as an example where if you

00:12:44,580 --> 00:12:51,120
integrate code quality measurement tools

00:12:47,850 --> 00:12:55,710
into the actual continuous integration

00:12:51,120 --> 00:12:57,570
process then it insights on the sort of

00:12:55,710 --> 00:12:59,130
like the quality of the project

00:12:57,570 --> 00:13:02,400
it gives insights on the quality of the

00:12:59,130 --> 00:13:04,080
project and if that happens it's much

00:13:02,400 --> 00:13:07,890
easier to actually manage the entire

00:13:04,080 --> 00:13:09,810
project as it keeps scaling from purely

00:13:07,890 --> 00:13:11,790
from a code quality perspective and not

00:13:09,810 --> 00:13:14,610
necessarily from how many engineers and

00:13:11,790 --> 00:13:16,230
both which is kind of an amazing fact

00:13:14,610 --> 00:13:17,940
because it separates completely between

00:13:16,230 --> 00:13:20,100
the engineers that need to do the work

00:13:17,940 --> 00:13:23,130
and the quality of the product that

00:13:20,100 --> 00:13:24,750
actually needs to deliver okay so in

00:13:23,130 --> 00:13:26,850
terms of tooling I mean there's all

00:13:24,750 --> 00:13:28,470
these days there's a whole bunch of sure

00:13:26,850 --> 00:13:30,680
a lot of you guys know a lot of them

00:13:28,470 --> 00:13:33,480
there's a whole bunch of them I kind of

00:13:30,680 --> 00:13:34,770
plotted different I saw there's a lot of

00:13:33,480 --> 00:13:35,820
a lot of presentations present it's like

00:13:34,770 --> 00:13:40,290
that so I've plotted a bunch of

00:13:35,820 --> 00:13:41,490
different logos in particular we're

00:13:40,290 --> 00:13:45,060
going to be taught we're talking about

00:13:41,490 --> 00:13:49,370
circle CI which is this one and and and

00:13:45,060 --> 00:13:53,160
converse which is this one okay so next

00:13:49,370 --> 00:13:54,810
core concepts so this is sort of the

00:13:53,160 --> 00:13:57,750
core concept is sort of the ideology

00:13:54,810 --> 00:14:00,030
between behind the different the

00:13:57,750 --> 00:14:02,430
concourse product and the circle CI

00:14:00,030 --> 00:14:04,800
product and and this really kind of the

00:14:02,430 --> 00:14:07,260
distinguishing factors behind the

00:14:04,800 --> 00:14:10,710
thinking of how to do this

00:14:07,260 --> 00:14:13,440
so in in in concourse the core concepts

00:14:10,710 --> 00:14:16,320
are resources tasks and jobs

00:14:13,440 --> 00:14:18,200
at least at this moment as far as as far

00:14:16,320 --> 00:14:20,460
as I've seen in the development branch

00:14:18,200 --> 00:14:22,260
the resource and I have taken this

00:14:20,460 --> 00:14:26,940
straight from there from the website so

00:14:22,260 --> 00:14:29,790
so resources are they represent the

00:14:26,940 --> 00:14:31,520
external inputs and basically resources

00:14:29,790 --> 00:14:34,460
are the things that you attached

00:14:31,520 --> 00:14:37,320
externally so like an example would be

00:14:34,460 --> 00:14:38,910
you have something that checks your git

00:14:37,320 --> 00:14:40,920
repository that's some

00:14:38,910 --> 00:14:43,980
the checks the repository is is a

00:14:40,920 --> 00:14:46,770
resource in Concours resources can be

00:14:43,980 --> 00:14:48,900
extended fairly easily you can construct

00:14:46,770 --> 00:14:53,190
new resources by yourself I've done that

00:14:48,900 --> 00:14:55,110
multiple times once you do it like once

00:14:53,190 --> 00:14:58,140
you're doing it at least one time it

00:14:55,110 --> 00:14:59,970
becomes really really easy and it can be

00:14:58,140 --> 00:15:02,430
done in any programming language which

00:14:59,970 --> 00:15:05,910
is amazing because it allows you to kind

00:15:02,430 --> 00:15:10,260
of attach anything out there tasks are

00:15:05,910 --> 00:15:12,090
just the pipeline processes so like this

00:15:10,260 --> 00:15:15,480
is you know you you would if you're

00:15:12,090 --> 00:15:17,280
creating a pipeline you would separate

00:15:15,480 --> 00:15:18,960
the pipeline into different tasks like

00:15:17,280 --> 00:15:20,670
let's say one task would be lynching and

00:15:18,960 --> 00:15:23,270
there's a bunch of different steps and

00:15:20,670 --> 00:15:26,160
landing and there another task would be

00:15:23,270 --> 00:15:29,030
releasing or testing that that would be

00:15:26,160 --> 00:15:33,050
a separate task and then jobs are

00:15:29,030 --> 00:15:37,490
independent pieces of work within a task

00:15:33,050 --> 00:15:41,190
so this is sort of the core concepts of

00:15:37,490 --> 00:15:42,780
of Concours the one thing that I will

00:15:41,190 --> 00:15:46,110
mention about Concours is that concourse

00:15:42,780 --> 00:15:49,020
has this idea behind item function C so

00:15:46,110 --> 00:15:51,000
meaning there there's a really core kind

00:15:49,020 --> 00:15:54,000
of it's not strictly written but there's

00:15:51,000 --> 00:15:57,800
a really core thinking behind the design

00:15:54,000 --> 00:16:00,930
which me which is about making sure that

00:15:57,800 --> 00:16:03,840
every step in the pipeline is completely

00:16:00,930 --> 00:16:05,550
replicatable and that means however you

00:16:03,840 --> 00:16:08,670
build the actual application which is

00:16:05,550 --> 00:16:10,820
concourse needs to ensure that that kind

00:16:08,670 --> 00:16:13,590
of that kind of reproducibility and

00:16:10,820 --> 00:16:16,140
that's kind of unique for concourse oh I

00:16:13,590 --> 00:16:20,880
haven't seen that strictness with

00:16:16,140 --> 00:16:21,540
without our projects circle C on the

00:16:20,880 --> 00:16:23,730
other hand

00:16:21,540 --> 00:16:27,030
circle CI is a little bit different

00:16:23,730 --> 00:16:29,700
circle CI has very similar concepts like

00:16:27,030 --> 00:16:32,340
like tasks and jobs they don't have

00:16:29,700 --> 00:16:35,130
tasks but let's say jobs but they have

00:16:32,340 --> 00:16:38,060
these added concept one concept is

00:16:35,130 --> 00:16:40,680
called orbs so orbs is roughly speaking

00:16:38,060 --> 00:16:42,870
comparable to resources but it's a

00:16:40,680 --> 00:16:46,170
little bit difference with with with

00:16:42,870 --> 00:16:48,330
resources you can actually create using

00:16:46,170 --> 00:16:51,290
your own code sort of whatever that how

00:16:48,330 --> 00:16:54,140
you want and I'll show this by example

00:16:51,290 --> 00:16:56,390
on the other hand with orbs warms our

00:16:54,140 --> 00:16:59,540
replicatable code so what happens is

00:16:56,390 --> 00:17:03,290
that you can write up your configuration

00:16:59,540 --> 00:17:04,490
file for for how the prop for how the

00:17:03,290 --> 00:17:06,170
employment the entire continuous

00:17:04,490 --> 00:17:07,760
integration process is going to happen

00:17:06,170 --> 00:17:09,829
you can litter it with a bunch of

00:17:07,760 --> 00:17:12,199
variables inside and then you can wrap

00:17:09,829 --> 00:17:14,720
it up and they what they call orb and

00:17:12,199 --> 00:17:18,199
put it on an orb store so you can

00:17:14,720 --> 00:17:20,240
actually and I've kind of linked it out

00:17:18,199 --> 00:17:22,670
to other people to employ and so you

00:17:20,240 --> 00:17:28,700
what you see that there's a we show you

00:17:22,670 --> 00:17:34,660
this quickly there's a whole orb circle

00:17:28,700 --> 00:17:39,770
CI or registry there's a there's a whole

00:17:34,660 --> 00:17:43,000
registry for these orbs and and some of

00:17:39,770 --> 00:17:44,810
them are supported by by large

00:17:43,000 --> 00:17:47,440
organizations and some of them are not

00:17:44,810 --> 00:17:49,400
and and they're really quite useful

00:17:47,440 --> 00:17:52,850
because some of them are really like

00:17:49,400 --> 00:17:57,530
verifying like you can see so here AWS

00:17:52,850 --> 00:17:59,150
deployment stuff elasticsearch and so on

00:17:57,530 --> 00:18:01,820
and so on and so on that some of these

00:17:59,150 --> 00:18:03,320
orbs provide extra tooling within the

00:18:01,820 --> 00:18:04,760
application what what's powerful about

00:18:03,320 --> 00:18:06,980
it is because it's kind of like a

00:18:04,760 --> 00:18:08,870
registry because you can you have a

00:18:06,980 --> 00:18:10,010
place to go and just grab them so when

00:18:08,870 --> 00:18:13,070
you're not necessarily a very

00:18:10,010 --> 00:18:16,070
experienced DevOps engineer it's easy to

00:18:13,070 --> 00:18:17,630
just come in grab one and do it when

00:18:16,070 --> 00:18:19,580
you're working on a bigger team you can

00:18:17,630 --> 00:18:23,840
actually create these for your internal

00:18:19,580 --> 00:18:26,510
team fairly easily and and and that'll

00:18:23,840 --> 00:18:30,380
work that that's kind of a difference

00:18:26,510 --> 00:18:31,610
with with resources and not a concept

00:18:30,380 --> 00:18:34,910
they have is something called a

00:18:31,610 --> 00:18:49,550
workspace so let me just show you by my

00:18:34,910 --> 00:18:52,490
example simple so workspaces are they're

00:18:49,550 --> 00:18:57,470
an attempt at dealing with Ida policy

00:18:52,490 --> 00:19:01,330
making sure that making sure that oh

00:18:57,470 --> 00:19:01,330
sorry this amount of amount of workflow

00:19:04,690 --> 00:19:14,419
sorry the workspaces are an attempt at

00:19:11,510 --> 00:19:16,730
dealing with that impotency in in effect

00:19:14,419 --> 00:19:18,980
what happens is that with when you're

00:19:16,730 --> 00:19:21,130
designing a flow when you're designing a

00:19:18,980 --> 00:19:23,660
pipeline you can actually create

00:19:21,130 --> 00:19:26,480
separate jobs that are going to execute

00:19:23,660 --> 00:19:28,610
whether in parallel or not and and and

00:19:26,480 --> 00:19:30,080
in the process in between jobs you're

00:19:28,610 --> 00:19:32,929
going to be transferring some kind of

00:19:30,080 --> 00:19:34,520
resources so let's say you have a like a

00:19:32,929 --> 00:19:37,010
bill job and the bill job is going to

00:19:34,520 --> 00:19:39,650
produce and the bill job is going to

00:19:37,010 --> 00:19:41,390
produce something and that's something

00:19:39,650 --> 00:19:44,720
you want to be using in in another

00:19:41,390 --> 00:19:47,179
process in another in in in another step

00:19:44,720 --> 00:19:49,100
of the pipeline and what's going to

00:19:47,179 --> 00:19:51,559
transfer in between them is a workspace

00:19:49,100 --> 00:19:53,419
really workspace is just a folder but

00:19:51,559 --> 00:19:55,820
what's unique about it is that folder is

00:19:53,419 --> 00:19:58,130
anything that goes into that folder gets

00:19:55,820 --> 00:20:02,510
hashed and so it's completely

00:19:58,130 --> 00:20:03,919
reproducible meaning that meaning that

00:20:02,510 --> 00:20:05,990
whatever the files and everything that's

00:20:03,919 --> 00:20:09,049
going to go there is going to be exactly

00:20:05,990 --> 00:20:12,440
the same way if you end up rerunning

00:20:09,049 --> 00:20:14,059
just one part of your entire pipeline so

00:20:12,440 --> 00:20:15,650
let's say let's say you had a really

00:20:14,059 --> 00:20:17,720
complex pipeline you build with

00:20:15,650 --> 00:20:21,110
successful test was successful but then

00:20:17,720 --> 00:20:23,480
between between test and and and deploy

00:20:21,110 --> 00:20:25,220
deploy failed so now you end up going

00:20:23,480 --> 00:20:26,720
back into your dashboard and you want to

00:20:25,220 --> 00:20:28,700
just rerun the deploy because you've

00:20:26,720 --> 00:20:31,610
changed something you can actually just

00:20:28,700 --> 00:20:33,230
be around the deploy and and the

00:20:31,610 --> 00:20:35,240
resources that the deploy will end up

00:20:33,230 --> 00:20:36,530
having are gonna come through workspace

00:20:35,240 --> 00:20:39,260
and they're going to be exactly the same

00:20:36,530 --> 00:20:41,570
ones because it's replicatable now it

00:20:39,260 --> 00:20:42,860
becomes a much more complex of sequence

00:20:41,570 --> 00:20:45,230
when you have situations where you have

00:20:42,860 --> 00:20:47,179
multiple resources that conversion to

00:20:45,230 --> 00:20:49,700
one and then there's question like which

00:20:47,179 --> 00:20:51,020
resources take which which are the

00:20:49,700 --> 00:20:52,580
resources that are ended up taking

00:20:51,020 --> 00:20:54,710
ownership and this is sort of like what

00:20:52,580 --> 00:20:58,010
workspace is it's the entire concept of

00:20:54,710 --> 00:21:00,500
how to do it how to do it this is so

00:20:58,010 --> 00:21:04,730
these are kind of like the core concepts

00:21:00,500 --> 00:21:06,799
the way I have gotten exposed oh okay

00:21:04,730 --> 00:21:09,020
let's let's jump to how do we configure

00:21:06,799 --> 00:21:10,340
this and that and and please stop me

00:21:09,020 --> 00:21:13,280
because I'm assuming that everybody

00:21:10,340 --> 00:21:16,280
really knows this or have at least

00:21:13,280 --> 00:21:17,200
experience with some kind of condition

00:21:16,280 --> 00:21:19,269
to great content

00:21:17,200 --> 00:21:22,740
integration tools so I'm not explaining

00:21:19,269 --> 00:21:24,909
like what is a configuration file at all

00:21:22,740 --> 00:21:26,500
okay so let's let's look at the

00:21:24,909 --> 00:21:28,480
differences I've kind of compiled here

00:21:26,500 --> 00:21:33,100
two side-by-side programs they're almost

00:21:28,480 --> 00:21:35,169
the same but they're not exactly and all

00:21:33,100 --> 00:21:41,169
around quickly for them so circle see I

00:21:35,169 --> 00:21:43,120
first circle see I first different force

00:21:41,169 --> 00:21:44,909
my main difference is that files are

00:21:43,120 --> 00:21:48,880
usually placed within a specific place

00:21:44,909 --> 00:21:50,529
it has to be this way with concourse

00:21:48,880 --> 00:21:52,120
that's not the case you can place files

00:21:50,529 --> 00:21:57,880
wherever you want you can actually link

00:21:52,120 --> 00:21:59,679
them in this way you have with circle CI

00:21:57,880 --> 00:22:02,110
you have something called jobs the same

00:21:59,679 --> 00:22:05,769
as here you have jobs within a job you

00:22:02,110 --> 00:22:08,620
separate the jobs by by by sort of like

00:22:05,769 --> 00:22:11,320
by by by I guess tasks by different

00:22:08,620 --> 00:22:13,870
chunks in here you're it's a it's a just

00:22:11,320 --> 00:22:16,360
a map so you can you can list them blend

00:22:13,870 --> 00:22:17,289
test and so on and so forth here you

00:22:16,360 --> 00:22:19,419
have a little bit more information

00:22:17,289 --> 00:22:21,039
because some of this information gets

00:22:19,419 --> 00:22:23,980
communicated to the to the user

00:22:21,039 --> 00:22:25,779
interface in terms of in terms of

00:22:23,980 --> 00:22:29,740
internally in terms of each each one of

00:22:25,779 --> 00:22:32,440
the tasks sir circle CI is is has kind

00:22:29,740 --> 00:22:35,320
of these steps and you just run run run

00:22:32,440 --> 00:22:37,870
run run here I'm doing a little bit of

00:22:35,320 --> 00:22:39,850
an abstraction you can do this they have

00:22:37,870 --> 00:22:42,070
something called an executor so an

00:22:39,850 --> 00:22:44,769
executor when you're running a

00:22:42,070 --> 00:22:46,450
particular task within sure of concourse

00:22:44,769 --> 00:22:49,690
you you actually define the

00:22:46,450 --> 00:22:52,179
configuration so you say configuration a

00:22:49,690 --> 00:22:53,980
platform Linux and you link it to a

00:22:52,179 --> 00:22:58,179
specific container or a docker container

00:22:53,980 --> 00:23:00,309
in encircle CI you can do the same step

00:22:58,179 --> 00:23:01,990
or do the same way by using an executor

00:23:00,309 --> 00:23:04,570
so you define an executor ahead of time

00:23:01,990 --> 00:23:06,159
and the executor may be parallel so in

00:23:04,570 --> 00:23:08,470
this case I'm actually defining an

00:23:06,159 --> 00:23:10,149
executor that contains two that will

00:23:08,470 --> 00:23:12,940
deploy to docker containers at the same

00:23:10,149 --> 00:23:16,299
time and these two docker containers are

00:23:12,940 --> 00:23:20,409
going to become available for for this

00:23:16,299 --> 00:23:23,529
step for this specific job and during

00:23:20,409 --> 00:23:24,820
the same execution and and and and it's

00:23:23,529 --> 00:23:27,039
going to be parallel so they're both

00:23:24,820 --> 00:23:28,690
available there and it's you can

00:23:27,039 --> 00:23:30,490
actually it's like in place you can you

00:23:28,690 --> 00:23:32,770
can just copy this in here

00:23:30,490 --> 00:23:34,690
this is just an easier way to do it if

00:23:32,770 --> 00:23:36,540
you have the same jaw the same executors

00:23:34,690 --> 00:23:39,630
that you're executing every single time

00:23:36,540 --> 00:23:41,410
same here you can kind of abstract this

00:23:39,630 --> 00:23:43,300
for the most part because you have

00:23:41,410 --> 00:23:45,460
resources and resources are much much

00:23:43,300 --> 00:23:49,540
more general you can actually create a

00:23:45,460 --> 00:23:50,890
resource called docker and and you can

00:23:49,540 --> 00:23:55,270
give it a name and then over here you

00:23:50,890 --> 00:24:00,850
your in it very simply you can use it in

00:23:55,270 --> 00:24:02,740
terms of execution in in circle CI

00:24:00,850 --> 00:24:04,810
there's something called run and you

00:24:02,740 --> 00:24:06,820
just hit wrong wrong run run every time

00:24:04,810 --> 00:24:09,160
I find this a little bit easier in

00:24:06,820 --> 00:24:11,410
concours there's just a way to to sort

00:24:09,160 --> 00:24:13,960
of do a pipeline so you do - arguments -

00:24:11,410 --> 00:24:15,550
see and you're just running shell and in

00:24:13,960 --> 00:24:19,390
shell you're just gonna write out your

00:24:15,550 --> 00:24:22,600
code as is which is not necessarily the

00:24:19,390 --> 00:24:23,140
case for circle CI and not not as easy

00:24:22,600 --> 00:24:26,320
to do

00:24:23,140 --> 00:24:30,700
so this is kind of like at a big view

00:24:26,320 --> 00:24:32,980
the big difference in terms of like

00:24:30,700 --> 00:24:34,690
actually and I'll jump into this in

00:24:32,980 --> 00:24:38,560
terms of what actually similar and what

00:24:34,690 --> 00:24:39,070
actually different parties both are in

00:24:38,560 --> 00:24:41,470
the mo

00:24:39,070 --> 00:24:43,540
so that's that's kind of similar more

00:24:41,470 --> 00:24:45,010
clothes are kind of similar workflows

00:24:43,540 --> 00:24:48,460
aren't different than workspaces

00:24:45,010 --> 00:24:52,150
workflows are the presentation or the

00:24:48,460 --> 00:24:56,230
ability to construct pipelines pipeline

00:24:52,150 --> 00:24:57,880
steps so it's a little bit it's the same

00:24:56,230 --> 00:25:00,280
you just write it differently so in here

00:24:57,880 --> 00:25:02,320
in circle CI you can see that I'm

00:25:00,280 --> 00:25:05,110
constructing and workflow by creating

00:25:02,320 --> 00:25:07,000
two jobs and then I'm saying that I have

00:25:05,110 --> 00:25:11,260
a job goal int and then I have a job

00:25:07,000 --> 00:25:12,670
called test but test requires Lin and so

00:25:11,260 --> 00:25:15,190
by doing that you're creating a

00:25:12,670 --> 00:25:18,490
requirement means that tests will never

00:25:15,190 --> 00:25:24,250
run until Lin testing is done the same

00:25:18,490 --> 00:25:29,650
can be achieved in in the concourse in

00:25:24,250 --> 00:25:32,320
this way you so you have something

00:25:29,650 --> 00:25:34,840
called parameter passed and you can

00:25:32,320 --> 00:25:37,150
create a plan where each job actually

00:25:34,840 --> 00:25:38,740
requires for something else to be test

00:25:37,150 --> 00:25:40,990
and that means when when you're

00:25:38,740 --> 00:25:43,360
executing a pipeline until like let's

00:25:40,990 --> 00:25:46,690
integration have been completed as

00:25:43,360 --> 00:25:51,460
as a staff what are this this this step

00:25:46,690 --> 00:25:53,350
is not going to be executed and then

00:25:51,460 --> 00:25:57,160
both of them are obviously with you

00:25:53,350 --> 00:26:00,070
using docker environment for protonation

00:25:57,160 --> 00:26:03,990
one major distinction which circled CI

00:26:00,070 --> 00:26:08,530
a-- is the because circle CI a is a is a

00:26:03,990 --> 00:26:12,190
story is a cloud hosted technology they

00:26:08,530 --> 00:26:15,520
have an entire process for automating

00:26:12,190 --> 00:26:17,880
deployment of actual machines so you

00:26:15,520 --> 00:26:20,110
whenever you run tests that actually

00:26:17,880 --> 00:26:22,210
generates a machine for you or a virtual

00:26:20,110 --> 00:26:24,100
machine for you and because of that you

00:26:22,210 --> 00:26:26,440
can control you don't actually have to

00:26:24,100 --> 00:26:29,919
run everything within a docker container

00:26:26,440 --> 00:26:32,350
you can run it straight up on on narrow

00:26:29,919 --> 00:26:35,440
but you can also they also provide the

00:26:32,350 --> 00:26:38,710
ability to run it with Mac OS which is

00:26:35,440 --> 00:26:42,280
not the case for which is not the case

00:26:38,710 --> 00:26:44,290
for concourse web hood webhook

00:26:42,280 --> 00:26:46,090
integrations I think this is really

00:26:44,290 --> 00:26:48,490
important and I'll touch on this a

00:26:46,090 --> 00:26:50,650
little bit later part of the ideology in

00:26:48,490 --> 00:26:53,220
concourse is that they don't allow or

00:26:50,650 --> 00:26:55,480
they're they don't support very good

00:26:53,220 --> 00:26:58,870
third-party integration from a

00:26:55,480 --> 00:27:02,470
perspective of web hooks meaning third

00:26:58,870 --> 00:27:04,960
party cannot notify concourse in a very

00:27:02,470 --> 00:27:07,720
easy way that something needs to happen

00:27:04,960 --> 00:27:10,330
there are some integrations that were

00:27:07,720 --> 00:27:11,830
added later as a hack but I don't it

00:27:10,330 --> 00:27:15,070
still doesn't feel like it's completely

00:27:11,830 --> 00:27:16,900
supported that's not the case for circle

00:27:15,070 --> 00:27:20,429
CIN and includes for me that's a really

00:27:16,900 --> 00:27:23,230
big big point and I'll show it later

00:27:20,429 --> 00:27:24,640
shareable configurations in it's a

00:27:23,230 --> 00:27:28,929
little bit there they're constructed

00:27:24,640 --> 00:27:32,470
differently resource extensions again if

00:27:28,929 --> 00:27:34,000
they're kind of the same thing they're

00:27:32,470 --> 00:27:35,950
they're constructed differently here

00:27:34,000 --> 00:27:38,230
your construct actual extension sort of

00:27:35,950 --> 00:27:40,179
plugins applications whereas with

00:27:38,230 --> 00:27:42,820
whereas with circle CI you can

00:27:40,179 --> 00:27:44,410
struggling shareable shareable

00:27:42,820 --> 00:27:47,080
configuration files and then obviously

00:27:44,410 --> 00:27:49,030
one is cloud hosted the other one is is

00:27:47,080 --> 00:27:52,270
really like self deploy set it up

00:27:49,030 --> 00:27:54,760
anywhere you want and and it works both

00:27:52,270 --> 00:27:56,889
ways it depends on what situation what

00:27:54,760 --> 00:27:59,559
what project you're working on

00:27:56,889 --> 00:28:04,809
I'll get next in terms of user interface

00:27:59,559 --> 00:28:06,940
UI side-by-side this is a view for jobs

00:28:04,809 --> 00:28:08,440
you can you know I had this is my

00:28:06,940 --> 00:28:10,120
screenshot so I have a bunch of that out

00:28:08,440 --> 00:28:12,279
of from my a bunch of our personal

00:28:10,120 --> 00:28:13,629
projects that are Iran continuation

00:28:12,279 --> 00:28:18,549
right now but I kind of put the same

00:28:13,629 --> 00:28:22,870
project here you can see there's a lot

00:28:18,549 --> 00:28:24,460
more information for circle CI you can

00:28:22,870 --> 00:28:27,370
kind of I'll show you there's a way to

00:28:24,460 --> 00:28:29,110
jump in but at least from from the view

00:28:27,370 --> 00:28:31,809
of like selection of all the other ones

00:28:29,110 --> 00:28:34,269
all the other projects side by side

00:28:31,809 --> 00:28:36,669
there's a lot more information on circle

00:28:34,269 --> 00:28:38,350
see I mean here's another this is kind

00:28:36,669 --> 00:28:41,409
of like me jumping into the actual

00:28:38,350 --> 00:28:43,299
information inside of the project again

00:28:41,409 --> 00:28:45,340
there's a lot more information here

00:28:43,299 --> 00:28:47,889
what's going on with the actual pipeline

00:28:45,340 --> 00:28:50,559
there's a way to jump in even further in

00:28:47,889 --> 00:28:52,509
here and I'll show it later but again

00:28:50,559 --> 00:28:54,340
there's a lot more information see I so

00:28:52,509 --> 00:28:56,350
so at least from a usability standpoint

00:28:54,340 --> 00:29:00,519
I would have said circle see I kind of

00:28:56,350 --> 00:29:04,539
gives a lot more information straight up

00:29:00,519 --> 00:29:06,610
there okay let's jump into the demos let

00:29:04,539 --> 00:29:10,230
me make sure that you guys will be able

00:29:06,610 --> 00:29:10,230
to see the code

00:29:11,230 --> 00:29:15,309
[Music]

00:29:27,450 --> 00:29:32,750
let me know if you can see the terminal

00:29:33,920 --> 00:29:42,300
yep we can soon don't okay so let's

00:29:38,610 --> 00:29:44,670
let's quickly set up a simple project

00:29:42,300 --> 00:29:49,200
for circle CI or for conquerors first

00:29:44,670 --> 00:29:52,070
and then a simple project for circle CI

00:29:49,200 --> 00:29:56,190
and and see sort of the process

00:29:52,070 --> 00:29:57,540
differences so concourse usually the way

00:29:56,190 --> 00:29:59,670
it starts so for the concourse you

00:29:57,540 --> 00:30:01,140
always have to deploy it yourself so

00:29:59,670 --> 00:30:04,610
usually it starts with like how the hell

00:30:01,140 --> 00:30:07,560
don't I'm actually installing concourse

00:30:04,610 --> 00:30:09,090
my quickest way to do this at least

00:30:07,560 --> 00:30:13,440
locally in the machine it's gonna be

00:30:09,090 --> 00:30:15,980
concourse docker and if you jump into

00:30:13,440 --> 00:30:19,920
concrete or darker they're gonna be

00:30:15,980 --> 00:30:21,390
there's going to be instructions how how

00:30:19,920 --> 00:30:23,910
to actually do it here

00:30:21,390 --> 00:30:27,650
and as you is you do it simply really

00:30:23,910 --> 00:30:27,650
like the process is very simple you just

00:30:28,970 --> 00:30:32,630
copy this and then

00:30:39,659 --> 00:30:42,960
you clone

00:30:54,309 --> 00:30:58,840
once you clone it you have to have

00:30:56,320 --> 00:31:01,389
doctor installed and once you have

00:30:58,840 --> 00:31:03,129
doctor installed there's a dr. Campos

00:31:01,389 --> 00:31:05,710
file here so you can just do docker

00:31:03,129 --> 00:31:08,710
compose again docker compose have to be

00:31:05,710 --> 00:31:10,509
installed doctor compose up you hit

00:31:08,710 --> 00:31:13,179
docker compose up and in effect what

00:31:10,509 --> 00:31:15,489
will happen is the docker compose will

00:31:13,179 --> 00:31:19,509
spin out your entire application the

00:31:15,489 --> 00:31:21,580
whole concourse CI deployment system if

00:31:19,509 --> 00:31:23,200
you're trying to set this this so this

00:31:21,580 --> 00:31:26,469
is locally if you're trying to set this

00:31:23,200 --> 00:31:28,779
up for for more of a production for your

00:31:26,469 --> 00:31:30,969
business or for a group of people it's

00:31:28,779 --> 00:31:34,779
gonna be a lot more work so what that

00:31:30,969 --> 00:31:37,570
means you will have to create somehow a

00:31:34,779 --> 00:31:40,169
deployment maybe helm deploy deploy it

00:31:37,570 --> 00:31:43,839
on on either machine or maybe kubernetes

00:31:40,169 --> 00:31:55,379
but neither way once you once you ran it

00:31:43,839 --> 00:31:55,379
what's the URL here I should

00:32:04,970 --> 00:32:11,299
but once you ran it you can kind of do

00:32:09,120 --> 00:32:11,299
this

00:32:27,900 --> 00:32:36,320
[Music]

00:32:30,730 --> 00:32:38,510
anybody remember with so here's a

00:32:36,320 --> 00:32:40,659
problem I don't remember what the port

00:32:38,510 --> 00:32:40,659
is

00:32:56,720 --> 00:32:59,140
OOP

00:33:15,700 --> 00:33:20,570
this is gonna take too long I'll figure

00:33:18,260 --> 00:33:28,060
it out I'll switch to come to Circle C

00:33:20,570 --> 00:33:33,020
and then we'll go back to this one Oh

00:33:28,060 --> 00:33:36,130
cuz darker add two eggs with it Missy I

00:33:33,020 --> 00:33:36,130
think I know why

00:33:49,940 --> 00:33:55,270
sorry I'm just turning off some other

00:33:52,310 --> 00:33:55,270
stuff that I have running

00:34:06,120 --> 00:34:12,099
there we go sorry I just ran it by

00:34:09,909 --> 00:34:14,470
different on a different screen okay so

00:34:12,099 --> 00:34:18,339
so once you load it up it's it's

00:34:14,470 --> 00:34:19,419
straight up in here in order to interact

00:34:18,339 --> 00:34:22,690
with it you actually have to have

00:34:19,419 --> 00:34:25,030
another application called a fly you can

00:34:22,690 --> 00:34:27,190
download this fly by just downloading it

00:34:25,030 --> 00:34:27,879
and and setting it up and in the right

00:34:27,190 --> 00:34:30,070
places

00:34:27,879 --> 00:34:31,810
if you look through tutorials that exist

00:34:30,070 --> 00:34:33,909
there they're kind of gonna tell you how

00:34:31,810 --> 00:34:35,770
to download or you always download it

00:34:33,909 --> 00:34:37,300
from from the version that whatever you

00:34:35,770 --> 00:34:39,070
installed whatever concourse you

00:34:37,300 --> 00:34:40,720
installed once you download it you're

00:34:39,070 --> 00:34:42,399
gonna download it through you're gonna

00:34:40,720 --> 00:34:44,290
download and put it in the right folder

00:34:42,399 --> 00:34:47,500
is where it's gonna be accessible once

00:34:44,290 --> 00:34:54,700
it's accessible now at this point you

00:34:47,500 --> 00:35:06,579
can start interacting with it so let's

00:34:54,700 --> 00:35:09,430
let's try my targets okay so I have I

00:35:06,579 --> 00:35:11,200
just happen that to have a target what

00:35:09,430 --> 00:35:13,089
the target is is you you you have to

00:35:11,200 --> 00:35:21,550
sort of authenticate yourself to connect

00:35:13,089 --> 00:35:24,359
in this case let's do toriel let's call

00:35:21,550 --> 00:35:33,220
it a tutorial and we're gonna login

00:35:24,359 --> 00:35:36,250
we're gonna login into here and then the

00:35:33,220 --> 00:35:40,599
user is gonna be test and pass but it's

00:35:36,250 --> 00:35:42,400
gonna be test once we logged in it lets

00:35:40,599 --> 00:35:43,450
us know that we have been logged in and

00:35:42,400 --> 00:35:46,839
at this point we can actually start

00:35:43,450 --> 00:35:49,000
interacting with it you can always look

00:35:46,839 --> 00:35:52,660
at all the documentation so in this case

00:35:49,000 --> 00:35:54,310
let's fly help it's gonna give you all

00:35:52,660 --> 00:35:57,369
different functionalities that you can

00:35:54,310 --> 00:35:59,200
do we want to actually deploy a pipeline

00:35:57,369 --> 00:36:00,490
into here so that the part the pipeline

00:35:59,200 --> 00:36:02,890
that I've created in the in the

00:36:00,490 --> 00:36:06,250
presentation I'll actually deploy in

00:36:02,890 --> 00:36:07,750
this case Walker the pipeline is is

00:36:06,250 --> 00:36:12,339
right here so what I'm gonna do is I'm

00:36:07,750 --> 00:36:13,010
gonna say fly target tutorial you always

00:36:12,339 --> 00:36:15,290
have to point

00:36:13,010 --> 00:36:17,210
because the target was you have joined

00:36:15,290 --> 00:36:19,880
you have logged in into this specific

00:36:17,210 --> 00:36:22,670
session and I named the tutorial as a

00:36:19,880 --> 00:36:26,900
target so I'll use target and I'll say

00:36:22,670 --> 00:36:29,330
set pipeline I'll point to a

00:36:26,900 --> 00:36:31,130
configuration file and I'll name I'll

00:36:29,330 --> 00:36:34,760
give the name I'll give a name to this

00:36:31,130 --> 00:36:36,830
pipeline this cake school it's actually

00:36:34,760 --> 00:36:38,660
going to print changes to you so it's

00:36:36,830 --> 00:36:40,970
gonna say what is going to happen once

00:36:38,660 --> 00:36:44,210
once you push it and we'll ask you do

00:36:40,970 --> 00:36:46,250
you want to do it if you say yes stuff

00:36:44,210 --> 00:37:05,870
will happen and then let me log them

00:36:46,250 --> 00:37:08,990
here test yes and once I logged in the

00:37:05,870 --> 00:37:10,790
pipeline is here it's anytime you add a

00:37:08,990 --> 00:37:15,290
new pipeline it's always paused so you

00:37:10,790 --> 00:37:17,180
can hit play and now at this point the

00:37:15,290 --> 00:37:19,520
pipeline is going to start executing so

00:37:17,180 --> 00:37:22,000
while it's executing let me jump for

00:37:19,520 --> 00:37:24,380
safety of time let me jump back to

00:37:22,000 --> 00:37:27,460
circle CI and show you how the process

00:37:24,380 --> 00:37:29,960
sort of the same happens for surface CIA

00:37:27,460 --> 00:37:32,330
in circle CI is a little bit different

00:37:29,960 --> 00:37:35,240
you circle see I always attaches itself

00:37:32,330 --> 00:37:37,160
to some kind of a cloud hosted

00:37:35,240 --> 00:37:39,620
repository it could be your own host it

00:37:37,160 --> 00:37:43,040
could be like get posted within your own

00:37:39,620 --> 00:37:44,570
computers but the way you do it so let's

00:37:43,040 --> 00:37:49,790
create a new project I'm gonna jump to

00:37:44,570 --> 00:37:54,760
Vietnam I'm going to create a new

00:37:49,790 --> 00:38:01,700
repository I'm gonna call it test circle

00:37:54,760 --> 00:38:05,770
it's gonna be public created once I do

00:38:01,700 --> 00:38:05,770
that I'm gonna grab it

00:38:14,559 --> 00:38:18,579
in here what you'll have to do is you'll

00:38:16,329 --> 00:38:21,519
have to create a couple of folder a one

00:38:18,579 --> 00:38:28,150
folder in one file okay dear

00:38:21,519 --> 00:38:31,359
it's called circle CI and inside of

00:38:28,150 --> 00:38:45,910
circle CI you'll have to create a file

00:38:31,359 --> 00:38:47,739
called config yellow so then and so in

00:38:45,910 --> 00:38:48,700
this file I'm just gonna plot I'm gonna

00:38:47,739 --> 00:39:05,559
I'm just going to put a bunch of

00:38:48,700 --> 00:39:06,530
information sorry this terminal is not

00:39:05,559 --> 00:39:09,699
working so well

00:39:06,530 --> 00:39:09,699
[Music]

00:39:16,910 --> 00:39:24,679
[Music]

00:39:24,880 --> 00:39:31,699
so I'm just doing this on a different

00:39:26,930 --> 00:39:34,400
terminal you guys cannot see okay

00:39:31,699 --> 00:39:37,099
I'll save this so just so we can see

00:39:34,400 --> 00:39:39,019
what's going on then config I literally

00:39:37,099 --> 00:39:42,650
put the information here this is a

00:39:39,019 --> 00:39:44,209
deployment this execute a go application

00:39:42,650 --> 00:39:46,309
so I'm just gonna delete some of this

00:39:44,209 --> 00:39:57,259
stuff so we can actually see what what's

00:39:46,309 --> 00:39:58,999
gonna happen echo hello and then I'm

00:39:57,259 --> 00:40:15,410
gonna delete this stuff from here as

00:39:58,999 --> 00:40:22,099
well you can save this once I saved it

00:40:15,410 --> 00:40:24,589
I'm just gonna commit it all but before

00:40:22,099 --> 00:40:27,349
I actually commit I'm just gonna go back

00:40:24,589 --> 00:40:31,069
to the project and in the project I will

00:40:27,349 --> 00:40:33,469
connect circle CI to this to to monitor

00:40:31,069 --> 00:40:36,309
this this specific repository so the way

00:40:33,469 --> 00:40:41,479
you do that is by going to circle CI

00:40:36,309 --> 00:40:44,359
dashboard and in the dashboard you can

00:40:41,479 --> 00:40:47,660
do ad projects usually the project will

00:40:44,359 --> 00:40:50,239
appear here automatically you do that

00:40:47,660 --> 00:40:52,099
you just build a project right now there

00:40:50,239 --> 00:40:54,079
are no files there so it's kind of gonna

00:40:52,099 --> 00:41:06,439
fail the build is gonna fail we don't

00:40:54,079 --> 00:41:09,069
care about them okay and and once once

00:41:06,439 --> 00:41:09,069
I've done that

00:41:12,840 --> 00:41:29,700
I'm just gonna come into code you come

00:41:17,620 --> 00:41:32,110
in some code pushing in once you push it

00:41:29,700 --> 00:41:36,460
it should automatically restart let's

00:41:32,110 --> 00:41:38,440
start there we go so now it's running

00:41:36,460 --> 00:41:41,290
let's jump back to concourse

00:41:38,440 --> 00:41:42,550
concourse at this point finished so this

00:41:41,290 --> 00:41:44,080
is how the exploration is gonna happen

00:41:42,550 --> 00:41:46,360
you're gonna go into concourse concourse

00:41:44,080 --> 00:41:49,060
every step of the way concourse is going

00:41:46,360 --> 00:41:50,740
to break it into into separate steps you

00:41:49,060 --> 00:41:53,350
can look at the sort of like the

00:41:50,740 --> 00:41:56,080
printouts here this is a printout that

00:41:53,350 --> 00:41:59,140
was testing one of my libraries and the

00:41:56,080 --> 00:42:01,330
tests have succeeded the concourse will

00:41:59,140 --> 00:42:03,850
fail if obviously if any other tests

00:42:01,330 --> 00:42:06,490
fail you can explore the actual pipeline

00:42:03,850 --> 00:42:09,190
by jumping in here by actually jumping

00:42:06,490 --> 00:42:11,620
into into the the pipeline itself so

00:42:09,190 --> 00:42:13,090
you'll see there's a you know it's kind

00:42:11,620 --> 00:42:14,710
of beautiful they'll show you like which

00:42:13,090 --> 00:42:16,390
resources are merging into where and

00:42:14,710 --> 00:42:19,540
they're gonna be more more steps if

00:42:16,390 --> 00:42:22,120
they're more steps to the pipeline here

00:42:19,540 --> 00:42:24,460
it's also succeeded you can actually see

00:42:22,120 --> 00:42:25,690
this view as a workflow when you look at

00:42:24,460 --> 00:42:27,430
the workflow it kind of the same thing

00:42:25,690 --> 00:42:29,500
you have you know you don't have

00:42:27,430 --> 00:42:31,960
resources pointing but you have links

00:42:29,500 --> 00:42:34,120
and and tests and you can jump into each

00:42:31,960 --> 00:42:37,360
one of these steps and and see what

00:42:34,120 --> 00:42:40,060
happened and so you know deployed post

00:42:37,360 --> 00:42:45,070
grass that limpid and it printed hello

00:42:40,060 --> 00:42:48,820
length echo length okay okay so this is

00:42:45,070 --> 00:42:50,890
sort of the UI differences this is the

00:42:48,820 --> 00:42:55,750
demo last couple of things that I'll

00:42:50,890 --> 00:42:57,880
touch on community support I so with

00:42:55,750 --> 00:43:00,460
with circle CI it's kind of a commercial

00:42:57,880 --> 00:43:02,680
project and and everything and whenever

00:43:00,460 --> 00:43:04,870
you have bugs or whatever it is the only

00:43:02,680 --> 00:43:07,300
way to communicate it sort of to a forum

00:43:04,870 --> 00:43:09,790
type system which is you know you post

00:43:07,300 --> 00:43:12,160
the message and you wait forever on the

00:43:09,790 --> 00:43:15,190
flip side with the Concours it's much

00:43:12,160 --> 00:43:16,720
easier because there's a chat you can

00:43:15,190 --> 00:43:18,070
just jump in and sometimes you like

00:43:16,720 --> 00:43:20,800
you're gonna be talking to literally the

00:43:18,070 --> 00:43:23,200
the main engineers or like working on it

00:43:20,800 --> 00:43:24,700
and it's great they're just they'll just

00:43:23,200 --> 00:43:25,770
tell you what to do and what you do and

00:43:24,700 --> 00:43:28,650
how to do it

00:43:25,770 --> 00:43:30,060
and so so to me I find that that

00:43:28,650 --> 00:43:34,050
concourse is significantly more

00:43:30,060 --> 00:43:35,790
important the one the one major the one

00:43:34,050 --> 00:43:39,780
and so okay so this is kind of the

00:43:35,790 --> 00:43:42,660
differences between between community

00:43:39,780 --> 00:43:46,040
support the reason at least for me why

00:43:42,660 --> 00:43:49,980
these days I choose circle CI more is

00:43:46,040 --> 00:43:51,600
the integration for in the direct

00:43:49,980 --> 00:43:55,650
integration into repositories which

00:43:51,600 --> 00:43:59,370
doesn't happen naturally with with

00:43:55,650 --> 00:44:03,000
concourse and so that's number one

00:43:59,370 --> 00:44:04,620
number two the resources is there's as I

00:44:03,000 --> 00:44:07,580
said there's an or kind of resource

00:44:04,620 --> 00:44:10,140
repository that doesn't happen with a

00:44:07,580 --> 00:44:12,180
concourse with concourse you have to

00:44:10,140 --> 00:44:14,910
develop resources yourself if they if

00:44:12,180 --> 00:44:17,070
you can't find them and the way you do

00:44:14,910 --> 00:44:18,570
that is is in the following way and I'm

00:44:17,070 --> 00:44:32,190
not gonna build this up but I'm just

00:44:18,570 --> 00:44:33,840
gonna show you and by the way if you

00:44:32,190 --> 00:44:36,180
guys have any questions this is this is

00:44:33,840 --> 00:44:37,890
pretty much it see what you do is you

00:44:36,180 --> 00:44:40,200
construct these kind of repositories

00:44:37,890 --> 00:44:43,140
with three folders you have checked in

00:44:40,200 --> 00:44:45,990
and out and inside you have to put

00:44:43,140 --> 00:44:48,710
executable code and as long as it's

00:44:45,990 --> 00:44:53,370
executable it means that it can be run

00:44:48,710 --> 00:44:55,170
and what will happen is that concourse

00:44:53,370 --> 00:44:57,690
will actually run each one of these and

00:44:55,170 --> 00:45:00,330
these are three separate steps and when

00:44:57,690 --> 00:45:01,980
you construct them in a proper way then

00:45:00,330 --> 00:45:04,320
you can inside of your actual code you

00:45:01,980 --> 00:45:05,760
can you can define a resource type and

00:45:04,320 --> 00:45:08,070
once you define the research type you

00:45:05,760 --> 00:45:10,350
can use it as a resource there's a whole

00:45:08,070 --> 00:45:13,410
page for like explaining really the

00:45:10,350 --> 00:45:15,240
details of internally on the

00:45:13,410 --> 00:45:18,750
documentation research types and you can

00:45:15,240 --> 00:45:20,370
construct implement a resource type and

00:45:18,750 --> 00:45:22,590
it will really teach you like how to do

00:45:20,370 --> 00:45:24,990
it and it's fairly easy so these are

00:45:22,590 --> 00:45:26,430
kind of the distinguishing factors and

00:45:24,990 --> 00:45:30,060
now this is pretty much it so if you

00:45:26,430 --> 00:45:32,720
guys have any questions I'll answer and

00:45:30,060 --> 00:45:35,850
show any examples from here

00:45:32,720 --> 00:45:35,850
[Music]

00:45:41,230 --> 00:45:53,640
[Music]

00:45:42,510 --> 00:45:58,500
I think I don't see the questions from

00:45:53,640 --> 00:46:00,660
any of them there are no any questions

00:45:58,500 --> 00:46:04,230
thanks considering sort of nice

00:46:00,660 --> 00:46:06,840
presentation maybe it all became to me

00:46:04,230 --> 00:46:14,190
to the second topic come so that is all

00:46:06,840 --> 00:46:16,290
about term the how to re the activity on

00:46:14,190 --> 00:46:18,619
the CEO platform so Mickey you can take

00:46:16,290 --> 00:46:18,619
it to me

00:46:36,540 --> 00:46:40,290
so make it can you hear us

00:47:00,329 --> 00:47:04,290
no we can't hear you Mikey

00:47:17,170 --> 00:47:22,740
I think they're so near that I see my

00:47:19,810 --> 00:47:22,740
pistol on yet though

00:48:21,550 --> 00:48:29,630
okay so maybe a weekend moved on to make

00:48:25,430 --> 00:48:31,610
his topics to next week so thing is here

00:48:29,630 --> 00:48:34,310
copy also in the call so w-would you

00:48:31,610 --> 00:48:38,510
like to take for the next topic all

00:48:34,310 --> 00:48:42,220
wrong if you take more than maybe we can

00:48:38,510 --> 00:48:42,220
move the topic also to the next week

00:48:58,440 --> 00:49:09,070
yeah we have about seven minutes or six

00:49:01,450 --> 00:49:11,290
minutes left in the call so yeah okay

00:49:09,070 --> 00:49:14,410
sure then so maybe I can move the next

00:49:11,290 --> 00:49:16,000
two topics to next week and so if we

00:49:14,410 --> 00:49:17,710
start I don't think so we can able to

00:49:16,000 --> 00:49:20,290
finish it in time I think there will be

00:49:17,710 --> 00:49:22,060
a lot of other questions will be coming

00:49:20,290 --> 00:49:23,620
in or those two topics you know so

00:49:22,060 --> 00:49:25,570
that's what I also hear from couple of

00:49:23,620 --> 00:49:27,480
colleagues so they want to ask they

00:49:25,570 --> 00:49:30,190
wanted to discuss more about this topic

00:49:27,480 --> 00:49:43,870
yeah maybe I can move those two topics

00:49:30,190 --> 00:49:47,710
to next week yep tactics yep okay so if

00:49:43,870 --> 00:49:49,750
there are any um let's say questions

00:49:47,710 --> 00:49:50,320
we'd say we can finish it in five

00:49:49,750 --> 00:49:53,740
minutes

00:49:50,320 --> 00:49:56,080
if there are no questions maybe yell so

00:49:53,740 --> 00:49:58,930
that's all for the day do you want to

00:49:56,080 --> 00:50:02,440
remind folks that there will be an

00:49:58,930 --> 00:50:04,930
in-person meeting that summit I click

00:50:02,440 --> 00:50:07,180
that later of lean in the next meeting

00:50:04,930 --> 00:50:09,070
so in the August month meeting year so

00:50:07,180 --> 00:50:13,930
in details so that's why I did not

00:50:09,070 --> 00:50:15,940
include it okay but as people are

00:50:13,930 --> 00:50:17,470
starting to probably plan their agendas

00:50:15,940 --> 00:50:18,760
for the summit it might be worth at

00:50:17,470 --> 00:50:21,160
least mentioning it and then you can

00:50:18,760 --> 00:50:27,700
discuss the details of it during the

00:50:21,160 --> 00:50:30,640
next call yes sure also for the next UCF

00:50:27,700 --> 00:50:34,630
summit it's happening in a Netherland so

00:50:30,640 --> 00:50:38,890
we'll be having that the sick meeting

00:50:34,630 --> 00:50:41,980
there maybe in the slack channel I'll be

00:50:38,890 --> 00:50:44,650
on sending the details about so which

00:50:41,980 --> 00:50:48,220
tomb it is gonna happen and then all the

00:50:44,650 --> 00:50:50,470
detailed agenda about the sick meeting

00:50:48,220 --> 00:50:54,040
so maybe somebody's traveling to

00:50:50,470 --> 00:50:58,020
Netherlands so you could join us in the

00:50:54,040 --> 00:51:01,720
sick meeting so that we can have a

00:50:58,020 --> 00:51:04,240
person interaction and get to know the

00:51:01,720 --> 00:51:06,550
different the problems you're facing in

00:51:04,240 --> 00:51:07,930
in day-to-day operations growth and then

00:51:06,550 --> 00:51:12,040
all those things yeah so that will

00:51:07,930 --> 00:51:14,080
really help us to address it in this

00:51:12,040 --> 00:51:18,060
big meeting and then we should be able

00:51:14,080 --> 00:51:18,060
to help also with all those pain points

00:51:20,130 --> 00:51:27,610
yeah so maybe in the next meeting I will

00:51:25,120 --> 00:51:29,940
try to add some more details about so

00:51:27,610 --> 00:51:32,200
our agenda and then all those things

00:51:29,940 --> 00:51:33,580
yeah so let you know if you are

00:51:32,200 --> 00:51:35,770
travelling so you can add it in your

00:51:33,580 --> 00:51:41,520
agenda so that you can part you can join

00:51:35,770 --> 00:51:41,520
us so for the person interaction yeah

00:51:45,180 --> 00:51:50,800
okay so that's all for the day thank you

00:51:48,040 --> 00:51:53,760
thanks for all joining have a nice day

00:51:50,800 --> 00:51:53,760

YouTube URL: https://www.youtube.com/watch?v=v68Gl9vFM0o


