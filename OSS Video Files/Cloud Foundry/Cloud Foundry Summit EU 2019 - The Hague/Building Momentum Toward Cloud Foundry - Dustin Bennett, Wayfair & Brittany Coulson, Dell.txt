Title: Building Momentum Toward Cloud Foundry - Dustin Bennett, Wayfair & Brittany Coulson, Dell
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	Building Momentum Toward Cloud Foundry - Dustin Bennett, Wayfair & Brittany Coulson, Dell Technologies 

You now work in a company that leverages Cloud Foundry...congratulations! Developers, operators, product managers and all others rejoice in jubilation! What do you do now? You have applications built on and designed for other infrastructure. Operations is focused on keeping existing platforms running and available. You canâ€™t do everything all at once, where do you start on your journey?  Brittany and Dustin will suggest possible initial steps for developers and operators. Topics include: how to start carving out and moving legacy applications to Cloud Foundry, app versus container runtimes, and how operators can leverage Cloud Foundry to engage software engineers. 

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,060 --> 00:00:04,049
all right folks somewhat of a light

00:00:02,669 --> 00:00:05,279
crowd second day that's all right

00:00:04,049 --> 00:00:06,870
we're gonna go ahead and get started

00:00:05,279 --> 00:00:11,420
since we've got about 30 minutes here

00:00:06,870 --> 00:00:12,929
but welcome to day two of CF summit I'm

00:00:11,420 --> 00:00:16,139
Dustin Bennett

00:00:12,929 --> 00:00:18,600
I'm currently director and supply chain

00:00:16,139 --> 00:00:21,539
engineering at Wayfarer which if you're

00:00:18,600 --> 00:00:24,210
not familiar Wayfarer is a home decor

00:00:21,539 --> 00:00:27,090
home furnishing retailer we have

00:00:24,210 --> 00:00:29,960
operations and headquarters in Boston as

00:00:27,090 --> 00:00:32,730
well as Berlin we operate in Germany UK

00:00:29,960 --> 00:00:34,260
and throughout North America the

00:00:32,730 --> 00:00:36,930
problems that we work on are generally

00:00:34,260 --> 00:00:38,309
large parcel large package delivery some

00:00:36,930 --> 00:00:40,980
moving couches tables and things like

00:00:38,309 --> 00:00:43,290
that and I manage software teams that

00:00:40,980 --> 00:00:46,320
deliver software I'm also an ambassador

00:00:43,290 --> 00:00:48,270
for cloud foundry I was previously at

00:00:46,320 --> 00:00:50,820
Home Depot as of about a year and a half

00:00:48,270 --> 00:00:53,719
ago so we were one of the largest users

00:00:50,820 --> 00:00:56,670
of cloud foundry at the time I ran the

00:00:53,719 --> 00:00:58,350
application platform and developer tools

00:00:56,670 --> 00:00:59,789
group there so that's how I initially

00:00:58,350 --> 00:01:02,070
got involved in the cloud foundry

00:00:59,789 --> 00:01:04,500
community I've also done a number of

00:01:02,070 --> 00:01:06,659
applications myself both in the context

00:01:04,500 --> 00:01:11,720
of work at Home Depot and just

00:01:06,659 --> 00:01:11,720
personally hobbyist now on cloud foundry

00:01:12,770 --> 00:01:18,780
was the director of cloud messaging for

00:01:16,560 --> 00:01:21,479
across Dell technologies I've also

00:01:18,780 --> 00:01:23,520
worked at Google cloud stints and

00:01:21,479 --> 00:01:25,439
pivotal as well as VMware so for about

00:01:23,520 --> 00:01:28,290
the last 12 years I've really been

00:01:25,439 --> 00:01:30,810
helping Enterprise companies look across

00:01:28,290 --> 00:01:32,700
their application portfolios and try to

00:01:30,810 --> 00:01:35,549
figure out how they're going to move

00:01:32,700 --> 00:01:37,680
these applications to whether it be a

00:01:35,549 --> 00:01:40,439
public cloud or figure out kind of what

00:01:37,680 --> 00:01:43,380
their cloud or multi cloud kind of

00:01:40,439 --> 00:01:45,540
strategy will be so today we are going

00:01:43,380 --> 00:01:48,420
to look across a couple of different

00:01:45,540 --> 00:01:52,799
things but mainly we're gonna put this

00:01:48,420 --> 00:01:55,079
in the context of a CIO Ingrid right so

00:01:52,799 --> 00:01:57,390
Ingrid really needs some help

00:01:55,079 --> 00:02:01,469
she runs a company we're gonna call this

00:01:57,390 --> 00:02:04,229
company Acme and in this company she has

00:02:01,469 --> 00:02:05,729
you know several developers but all of

00:02:04,229 --> 00:02:08,879
them are a little bit new to Cloud

00:02:05,729 --> 00:02:12,030
Foundry she really needs a lot of help

00:02:08,879 --> 00:02:12,530
in how to move specific applications and

00:02:12,030 --> 00:02:15,350
which

00:02:12,530 --> 00:02:17,840
applications to move as well as figuring

00:02:15,350 --> 00:02:19,880
out where to put them so we're gonna

00:02:17,840 --> 00:02:21,680
break this down for Ingrid and a couple

00:02:19,880 --> 00:02:23,720
of different ways over the course of the

00:02:21,680 --> 00:02:26,300
next 30 minutes and please if you guys

00:02:23,720 --> 00:02:28,069
have any questions let us know but first

00:02:26,300 --> 00:02:31,430
we're gonna talk about app versus

00:02:28,069 --> 00:02:34,580
container runtimes which applications to

00:02:31,430 --> 00:02:36,950
put in which place and why then we're

00:02:34,580 --> 00:02:38,750
gonna get into a little bit more of a

00:02:36,950 --> 00:02:41,360
deeper dive on moving legacy

00:02:38,750 --> 00:02:43,280
applications what things you should look

00:02:41,360 --> 00:02:46,100
for how you should look across your

00:02:43,280 --> 00:02:47,720
application portfolios and last but not

00:02:46,100 --> 00:02:51,470
least we're gonna talk about really

00:02:47,720 --> 00:02:53,180
building that momentum towards you know

00:02:51,470 --> 00:02:55,190
bringing Cloud Foundry into your

00:02:53,180 --> 00:02:57,500
organization so how to leverage that

00:02:55,190 --> 00:03:00,230
community and really what steps you

00:02:57,500 --> 00:03:02,380
should take to really further this so

00:03:00,230 --> 00:03:05,239
with that I'm going to pass it to Dustin

00:03:02,380 --> 00:03:07,250
all right so first we're going to talk

00:03:05,239 --> 00:03:09,350
about application and container runtimes

00:03:07,250 --> 00:03:12,920
we're gonna talk about a representative

00:03:09,350 --> 00:03:16,060
application let's say Ingrid at Acme is

00:03:12,920 --> 00:03:18,739
responsible for factory operations so

00:03:16,060 --> 00:03:21,320
manufacture of widgets that come off an

00:03:18,739 --> 00:03:23,720
assembly line we have a suite of

00:03:21,320 --> 00:03:25,280
applications that go into driving and

00:03:23,720 --> 00:03:27,200
facilitating the production and the

00:03:25,280 --> 00:03:29,030
facilities we're gonna try to look at

00:03:27,200 --> 00:03:31,670
the landscape and see what might be a

00:03:29,030 --> 00:03:34,790
good target to put into which runtime on

00:03:31,670 --> 00:03:36,380
cloud foundry so first just to give you

00:03:34,790 --> 00:03:39,680
an overview of the application and

00:03:36,380 --> 00:03:40,850
container runtime so the app runtime you

00:03:39,680 --> 00:03:42,440
you know you're interacting with the

00:03:40,850 --> 00:03:46,400
cloud controller so this is your typical

00:03:42,440 --> 00:03:48,650
CF push CF scale all the CF etc command

00:03:46,400 --> 00:03:51,010
line events that we're all used to makes

00:03:48,650 --> 00:03:53,150
it super easy for developers you

00:03:51,010 --> 00:03:55,010
abstract the internals of your

00:03:53,150 --> 00:03:56,900
infrastructure away and you just have to

00:03:55,010 --> 00:03:59,019
think about the code and the business

00:03:56,900 --> 00:04:01,010
value and functions that you're building

00:03:59,019 --> 00:04:04,280
when we take a look at the container

00:04:01,010 --> 00:04:06,620
runtime there's you interact more

00:04:04,280 --> 00:04:08,450
directly with kubernetes you have to

00:04:06,620 --> 00:04:11,269
think about your infrastructure as well

00:04:08,450 --> 00:04:13,970
as your code and you do you are afforded

00:04:11,269 --> 00:04:16,729
a bit more control over the internals if

00:04:13,970 --> 00:04:18,650
you do need those for you know tighter

00:04:16,729 --> 00:04:20,060
control of the operating systems or

00:04:18,650 --> 00:04:22,220
middleware that are operating within

00:04:20,060 --> 00:04:24,400
your within your container rather than

00:04:22,220 --> 00:04:26,480
just going straight build pack deploys

00:04:24,400 --> 00:04:29,390
so as I mentioned

00:04:26,480 --> 00:04:31,970
application run time focuses really

00:04:29,390 --> 00:04:34,070
around the CF push which makes it super

00:04:31,970 --> 00:04:37,400
lightweight super easy for developers to

00:04:34,070 --> 00:04:38,870
get code into production that's

00:04:37,400 --> 00:04:41,390
generally true once you have everything

00:04:38,870 --> 00:04:43,310
kind of set up if you've done much CF

00:04:41,390 --> 00:04:45,740
pushing or unraveled that ball of yarn

00:04:43,310 --> 00:04:46,970
you end up having to as your

00:04:45,740 --> 00:04:48,170
applications grow and get more

00:04:46,970 --> 00:04:49,880
complicated

00:04:48,170 --> 00:04:52,580
you also have manifest files that go

00:04:49,880 --> 00:04:55,100
along with the push and typically some

00:04:52,580 --> 00:04:57,650
level of build pipeline automation for

00:04:55,100 --> 00:04:58,880
tests and whatnot but it is it's fairly

00:04:57,650 --> 00:05:00,290
easy and straightforward once you have

00:04:58,880 --> 00:05:02,690
all that scaffolding in place you just

00:05:00,290 --> 00:05:03,650
push your code the platform takes care

00:05:02,690 --> 00:05:07,100
of it and you don't have to think about

00:05:03,650 --> 00:05:09,710
much else once it's running container

00:05:07,100 --> 00:05:11,750
runtime also has a relatively simple

00:05:09,710 --> 00:05:14,480
command command line to get your

00:05:11,750 --> 00:05:16,400
application running this has some other

00:05:14,480 --> 00:05:18,620
assumptions similar to CF push as you

00:05:16,400 --> 00:05:20,720
have a manifest file potentially build

00:05:18,620 --> 00:05:24,530
pipelines and test running with queue

00:05:20,720 --> 00:05:25,880
control run you have to have your image

00:05:24,530 --> 00:05:28,850
already built so whether that's your

00:05:25,880 --> 00:05:30,980
docker image etc typically uploaded to

00:05:28,850 --> 00:05:32,570
an image registry and once you're ready

00:05:30,980 --> 00:05:35,650
to run you can run the command line and

00:05:32,570 --> 00:05:37,670
it will deploy and run the image for you

00:05:35,650 --> 00:05:39,590
looking under the hood a little bit more

00:05:37,670 --> 00:05:41,680
as well we're making some assumptions

00:05:39,590 --> 00:05:43,880
with CF push that you've got existing

00:05:41,680 --> 00:05:47,060
infrastructure and configurations done

00:05:43,880 --> 00:05:48,380
so you have your orgs and spaces set up

00:05:47,060 --> 00:05:50,180
you've got all of your quota management

00:05:48,380 --> 00:05:51,890
all of your permission management for

00:05:50,180 --> 00:05:55,430
your users that are actually running on

00:05:51,890 --> 00:05:57,980
your platform so in an Ingrid's case at

00:05:55,430 --> 00:05:59,930
Acme this is probably going to be her

00:05:57,980 --> 00:06:01,250
Cloud Foundry operations team that's

00:05:59,930 --> 00:06:04,400
taking care of a lot of that information

00:06:01,250 --> 00:06:08,330
trying to make those the modules and

00:06:04,400 --> 00:06:11,510
organ space organization as self-service

00:06:08,330 --> 00:06:13,460
for the developer community as you can

00:06:11,510 --> 00:06:15,490
same thing with Cube control run as I

00:06:13,460 --> 00:06:17,750
mentioned you also hat you have two

00:06:15,490 --> 00:06:21,260
predefined your package there's a bit

00:06:17,750 --> 00:06:24,200
more manifest files and infrastructure

00:06:21,260 --> 00:06:25,520
as code associated with running this in

00:06:24,200 --> 00:06:29,450
the container runtime versus the

00:06:25,520 --> 00:06:31,400
application runtime so and both of them

00:06:29,450 --> 00:06:33,470
you obviously have big considerations

00:06:31,400 --> 00:06:35,750
around networking permissions and

00:06:33,470 --> 00:06:37,100
security right so any of us who have

00:06:35,750 --> 00:06:38,900
dealt with those things may know that

00:06:37,100 --> 00:06:40,370
those are generally a headache a lot of

00:06:38,900 --> 00:06:44,000
those are a lot of the networking

00:06:40,370 --> 00:06:46,400
issues are are managed at the layer of

00:06:44,000 --> 00:06:47,960
the platform itself so as individual

00:06:46,400 --> 00:06:50,150
applications teams you don't have to

00:06:47,960 --> 00:06:52,160
admit worry as much about that but you

00:06:50,150 --> 00:06:54,560
still have to make sure that you're

00:06:52,160 --> 00:06:57,440
requesting and have any ingress egress

00:06:54,560 --> 00:06:59,720
you need for internal and external

00:06:57,440 --> 00:07:01,280
access whether it's other apps within

00:06:59,720 --> 00:07:04,280
the same platform making sure that those

00:07:01,280 --> 00:07:06,590
are talking fluidly together as well as

00:07:04,280 --> 00:07:10,070
any external traffic that's not in your

00:07:06,590 --> 00:07:12,830
network permissions so this would be any

00:07:10,070 --> 00:07:14,419
non non platform related permissions so

00:07:12,830 --> 00:07:17,090
your typical typical enterprise

00:07:14,419 --> 00:07:19,580
authentication and and user group setup

00:07:17,090 --> 00:07:22,220
you still have to do all of that in your

00:07:19,580 --> 00:07:24,350
source code as well as security

00:07:22,220 --> 00:07:26,630
considerations so I mentioned you may

00:07:24,350 --> 00:07:28,520
also have a build pipeline the best

00:07:26,630 --> 00:07:30,199
practice is generally to abstract a lot

00:07:28,520 --> 00:07:32,660
of security controls away from the

00:07:30,199 --> 00:07:36,050
developers and move those into your

00:07:32,660 --> 00:07:37,520
build pipelines so you bring the bring

00:07:36,050 --> 00:07:40,970
your auditors and your security

00:07:37,520 --> 00:07:43,639
engineers along with you as you work to

00:07:40,970 --> 00:07:47,300
build the pipelines and take in all

00:07:43,639 --> 00:07:49,849
consider security considerations so what

00:07:47,300 --> 00:07:52,430
type of applications might we target for

00:07:49,849 --> 00:07:54,620
either runtime the application run time

00:07:52,430 --> 00:07:56,599
this is where you're going to look at

00:07:54,620 --> 00:07:59,120
proprietary source codes so this is

00:07:56,599 --> 00:08:01,760
applications that you develop as I

00:07:59,120 --> 00:08:04,789
mentioned Ingrid at Acme runs a factory

00:08:01,760 --> 00:08:08,150
so maybe we have a widget scanning app

00:08:04,789 --> 00:08:10,190
as the as the you know production comes

00:08:08,150 --> 00:08:12,320
off of the assembly line so we can do QA

00:08:10,190 --> 00:08:14,240
checks based on you know barcodes or

00:08:12,320 --> 00:08:15,560
whatever it is on the packaging so if

00:08:14,240 --> 00:08:17,449
I've got a mobile device with a mobile

00:08:15,560 --> 00:08:20,060
scanner fully control all the source

00:08:17,449 --> 00:08:21,289
code that would work out you want to

00:08:20,060 --> 00:08:23,510
make sure you're looking at stateless

00:08:21,289 --> 00:08:27,320
applications in the app runtime your

00:08:23,510 --> 00:08:29,419
your instances may die for various

00:08:27,320 --> 00:08:31,880
reasons whether it's you know memory or

00:08:29,419 --> 00:08:33,560
platforms moving it around so if you're

00:08:31,880 --> 00:08:35,930
storing state within your application

00:08:33,560 --> 00:08:39,229
instances that is quite problematic so

00:08:35,930 --> 00:08:41,390
as you move towards you know 12 factor

00:08:39,229 --> 00:08:42,680
kind of cloud native design patterns one

00:08:41,390 --> 00:08:44,630
thing you want to be definitely

00:08:42,680 --> 00:08:47,330
concerned of as you're evaluating

00:08:44,630 --> 00:08:49,610
applications is externalizing your state

00:08:47,330 --> 00:08:52,220
because you can have a lot of conflicts

00:08:49,610 --> 00:08:53,910
and it's difficult to unravel and debug

00:08:52,220 --> 00:08:56,420
and troubleshoot those kinds of issues

00:08:53,910 --> 00:08:58,530
once they do come into your system so

00:08:56,420 --> 00:09:00,720
proprietary source code over which you

00:08:58,530 --> 00:09:02,700
have control you want your state

00:09:00,720 --> 00:09:04,980
externalize from your applications and

00:09:02,700 --> 00:09:07,980
you want some progress of the 12 factors

00:09:04,980 --> 00:09:10,020
so the 12 factors are essentially 12

00:09:07,980 --> 00:09:13,020
factors that are good practices around

00:09:10,020 --> 00:09:14,640
cloud native application development you

00:09:13,020 --> 00:09:15,840
want to as I mentioned the state list is

00:09:14,640 --> 00:09:18,330
a big one there are a few others that

00:09:15,840 --> 00:09:20,130
are big critical ones but you can get

00:09:18,330 --> 00:09:22,470
you can get applications deploy to the

00:09:20,130 --> 00:09:24,840
app runtime and catch yourself up on

00:09:22,470 --> 00:09:26,700
some of the external izing configuration

00:09:24,840 --> 00:09:30,660
logging implementations and things like

00:09:26,700 --> 00:09:32,130
that so container runtime what do

00:09:30,660 --> 00:09:35,130
applications look like that we might

00:09:32,130 --> 00:09:38,610
target there so this may be third-party

00:09:35,130 --> 00:09:40,650
or vendor proprietary software so across

00:09:38,610 --> 00:09:42,660
an enterprise landscape you likely have

00:09:40,650 --> 00:09:44,760
third-party packages that may be

00:09:42,660 --> 00:09:48,450
developed delivered to you even as

00:09:44,760 --> 00:09:50,820
kubernetes images or VM images those are

00:09:48,450 --> 00:09:52,320
you know those may be good candidates

00:09:50,820 --> 00:09:54,090
for the container runtime because you

00:09:52,320 --> 00:09:55,950
can just package those up and deploy

00:09:54,090 --> 00:09:58,350
them to the container runtime and not

00:09:55,950 --> 00:10:00,030
have to work with your vendors to you

00:09:58,350 --> 00:10:01,680
know break down the applications move

00:10:00,030 --> 00:10:03,420
into a cloud native environment they may

00:10:01,680 --> 00:10:05,940
not be capable they may not be willing

00:10:03,420 --> 00:10:09,930
it may not be covered in your various

00:10:05,940 --> 00:10:11,850
agreements also applications where you

00:10:09,930 --> 00:10:13,770
may have proprietary source codes so

00:10:11,850 --> 00:10:15,300
source code that you own but the

00:10:13,770 --> 00:10:18,630
business function and the application

00:10:15,300 --> 00:10:21,870
itself is relatively static relatively

00:10:18,630 --> 00:10:25,320
unchanging these may be things like you

00:10:21,870 --> 00:10:29,400
know quarterly financial transaction or

00:10:25,320 --> 00:10:32,190
transform jobs or other application code

00:10:29,400 --> 00:10:33,690
if it's something where you're not going

00:10:32,190 --> 00:10:36,060
to be making an investment in the code

00:10:33,690 --> 00:10:38,340
it's relatively low velocity low change

00:10:36,060 --> 00:10:40,170
you don't you you may not want to make

00:10:38,340 --> 00:10:42,330
the investments who spin up software

00:10:40,170 --> 00:10:43,830
team or teams to convert the application

00:10:42,330 --> 00:10:45,750
that's you know already been working for

00:10:43,830 --> 00:10:46,920
years and years and may just be a part

00:10:45,750 --> 00:10:50,580
of the way to your company drives

00:10:46,920 --> 00:10:52,620
revenue and then lastly bespoke

00:10:50,580 --> 00:10:54,840
environments so customized environments

00:10:52,620 --> 00:10:56,550
where you have but especially as an

00:10:54,840 --> 00:10:58,560
operator's team you may have individual

00:10:56,550 --> 00:11:01,320
teams that are talking about oh well we

00:10:58,560 --> 00:11:03,570
need control over memory management on

00:11:01,320 --> 00:11:06,870
the operating system layer for XYZ

00:11:03,570 --> 00:11:07,560
reason you know frankly and a lot of

00:11:06,870 --> 00:11:09,029
application

00:11:07,560 --> 00:11:12,240
deployed that I've seen to the Cloud

00:11:09,029 --> 00:11:14,579
Foundry ecosystem as if you spend some

00:11:12,240 --> 00:11:17,040
time and ask a few wise to understand

00:11:14,579 --> 00:11:19,079
why the teams are looking for those more

00:11:17,040 --> 00:11:21,420
custom customized control on the

00:11:19,079 --> 00:11:22,709
operating system or container layer they

00:11:21,420 --> 00:11:24,389
don't really need it they're trying to

00:11:22,709 --> 00:11:26,850
do something functionally else they're

00:11:24,389 --> 00:11:29,009
just used to deploying code to servers

00:11:26,850 --> 00:11:30,420
they're deploying code to VM so it's

00:11:29,009 --> 00:11:33,629
just more of those getting them familiar

00:11:30,420 --> 00:11:36,629
with more of the application paths cloud

00:11:33,629 --> 00:11:37,980
native practices so what we're gonna

00:11:36,629 --> 00:11:41,009
pick with at least through the rest of

00:11:37,980 --> 00:11:43,889
our story is Ingrid is going to take

00:11:41,009 --> 00:11:46,800
that factory widget scanning application

00:11:43,889 --> 00:11:49,050
and deploy it you know refactor it a bit

00:11:46,800 --> 00:11:51,959
so that it is stateless the states

00:11:49,050 --> 00:11:56,069
externalized and deploy it on the Cloud

00:11:51,959 --> 00:11:57,600
Foundry application runtime so I'll let

00:11:56,069 --> 00:12:00,329
Britney take over and talk a little bit

00:11:57,600 --> 00:12:03,389
more about that so once we've decided

00:12:00,329 --> 00:12:05,610
that we are moving to the application

00:12:03,389 --> 00:12:07,740
runtime there are a couple of things to

00:12:05,610 --> 00:12:09,059
keep in mind first and foremost I feel

00:12:07,740 --> 00:12:11,249
like I've been saying this my entire

00:12:09,059 --> 00:12:12,839
career but remember everything's a

00:12:11,249 --> 00:12:13,889
journey right it's not going to happen

00:12:12,839 --> 00:12:16,339
on day one

00:12:13,889 --> 00:12:19,230
this is definitely an iterative process

00:12:16,339 --> 00:12:21,269
the other thing to keep in mind is that

00:12:19,230 --> 00:12:23,790
as you start to move right you're

00:12:21,269 --> 00:12:26,069
changing your whole IT department to be

00:12:23,790 --> 00:12:28,139
more agile and you've heard all of these

00:12:26,069 --> 00:12:29,790
different words one of the things to

00:12:28,139 --> 00:12:32,279
keep in mind is that your business

00:12:29,790 --> 00:12:34,860
partners are also hearing a lot of

00:12:32,279 --> 00:12:37,889
buzzwords and to keep this in check

00:12:34,860 --> 00:12:41,100
right so if you hear of lift and shift

00:12:37,889 --> 00:12:42,660
or forklift migrations or cloud ready or

00:12:41,100 --> 00:12:44,970
all of that these have all been

00:12:42,660 --> 00:12:48,180
different ways that I think you know

00:12:44,970 --> 00:12:51,000
various service providers have you know

00:12:48,180 --> 00:12:52,470
said they could move applications the

00:12:51,000 --> 00:12:54,629
long and the short of it is that you

00:12:52,470 --> 00:12:56,129
just want your business teams and your

00:12:54,629 --> 00:12:58,019
internal teams to know that these

00:12:56,129 --> 00:13:00,720
buzzwords are all really meaning the

00:12:58,019 --> 00:13:02,579
same thing you just want to remember how

00:13:00,720 --> 00:13:05,519
to go about these different applications

00:13:02,579 --> 00:13:07,949
and moving them to different places so

00:13:05,519 --> 00:13:11,279
again in the term of moving to

00:13:07,949 --> 00:13:13,589
application run time we really want to

00:13:11,279 --> 00:13:16,019
make sure that you look at things right

00:13:13,589 --> 00:13:19,050
refactoring an application or making it

00:13:16,019 --> 00:13:20,840
more in these twelve factors does take

00:13:19,050 --> 00:13:22,730
time and you may say hey

00:13:20,840 --> 00:13:25,010
that's not agile we want to just keep

00:13:22,730 --> 00:13:26,780
going with this but there's a lot of

00:13:25,010 --> 00:13:29,120
questions that I think you guys need to

00:13:26,780 --> 00:13:31,160
stop slow down and ask your team's right

00:13:29,120 --> 00:13:33,170
and they're kind of here on on the

00:13:31,160 --> 00:13:36,440
left-hand side right do you have an

00:13:33,170 --> 00:13:38,720
unusual directory layout do you have you

00:13:36,440 --> 00:13:40,700
know homegrown shims or how are you

00:13:38,720 --> 00:13:43,520
connecting data sources is it really

00:13:40,700 --> 00:13:45,770
ugly what about the 12 factor

00:13:43,520 --> 00:13:48,410
application process have your team's

00:13:45,770 --> 00:13:51,020
been studying these are you missing any

00:13:48,410 --> 00:13:53,410
of the 12 factors even now they're going

00:13:51,020 --> 00:13:55,460
to write 14 factors there's even more

00:13:53,410 --> 00:13:57,980
different things that people should look

00:13:55,460 --> 00:14:00,410
at so I really encourage you to look

00:13:57,980 --> 00:14:02,120
across those various different factors

00:14:00,410 --> 00:14:05,630
within your applications and figure out

00:14:02,120 --> 00:14:07,550
which ones you are missing and why and

00:14:05,630 --> 00:14:09,680
last but not least what are the

00:14:07,550 --> 00:14:12,410
dependencies right both internal as well

00:14:09,680 --> 00:14:14,690
as external data dependencies and we'll

00:14:12,410 --> 00:14:16,730
get into kind of the three things that

00:14:14,690 --> 00:14:19,730
you should look at in the 12 factor and

00:14:16,730 --> 00:14:22,220
just remember - when we say migrate

00:14:19,730 --> 00:14:24,230
we're really talking about these newer

00:14:22,220 --> 00:14:27,500
cloud native applications that you can

00:14:24,230 --> 00:14:29,930
easily pour it over versus refactoring

00:14:27,500 --> 00:14:32,480
are more those legacy applications that

00:14:29,930 --> 00:14:34,550
you do have to kind of look at the code

00:14:32,480 --> 00:14:36,830
and kind of rebuild it and figure out

00:14:34,550 --> 00:14:41,240
how your teams can kind of move forward

00:14:36,830 --> 00:14:45,250
with this application so the three kind

00:14:41,240 --> 00:14:47,060
of key critical factors from moving into

00:14:45,250 --> 00:14:50,240
application runtimes

00:14:47,060 --> 00:14:51,560
from all of the 12 factors right 12 is a

00:14:50,240 --> 00:14:53,690
really hard number to remember

00:14:51,560 --> 00:14:54,590
I can't recite all 12 of them off my

00:14:53,690 --> 00:14:56,810
head

00:14:54,590 --> 00:14:59,750
but I can remember three right and they

00:14:56,810 --> 00:15:02,030
are just dependencies configurations and

00:14:59,750 --> 00:15:03,920
you're logging right so we'll get really

00:15:02,030 --> 00:15:06,950
into that but really what we mean

00:15:03,920 --> 00:15:09,320
remember dependencies are explicitly you

00:15:06,950 --> 00:15:12,320
declare and isolate these dependencies

00:15:09,320 --> 00:15:14,420
within an application the configuration

00:15:12,320 --> 00:15:17,120
or config is you need to store your

00:15:14,420 --> 00:15:18,980
configs within your environment and then

00:15:17,120 --> 00:15:20,990
your logs - you need to treat your

00:15:18,980 --> 00:15:23,180
logging with an application runtime as

00:15:20,990 --> 00:15:24,860
event streaming right so you really know

00:15:23,180 --> 00:15:29,180
what's going on when it touches that

00:15:24,860 --> 00:15:31,040
infrastructure and so obviously ingrid

00:15:29,180 --> 00:15:33,590
is paying close attention over here in

00:15:31,040 --> 00:15:35,210
the corner but i do just want to make a

00:15:33,590 --> 00:15:38,270
comment and again you guys I think we'll

00:15:35,210 --> 00:15:41,150
have these presentations but even with

00:15:38,270 --> 00:15:43,430
the newest releases of Cloud Foundry

00:15:41,150 --> 00:15:45,770
it's still important to take into

00:15:43,430 --> 00:15:48,350
consideration these factors and really

00:15:45,770 --> 00:15:51,260
make sure that you're allowing for the

00:15:48,350 --> 00:15:54,890
full migration to occur and and to occur

00:15:51,260 --> 00:15:57,140
you know correctly the first time I

00:15:54,890 --> 00:15:58,790
can't tell you how many companies that

00:15:57,140 --> 00:16:01,010
I've talked to over the last couple of

00:15:58,790 --> 00:16:03,110
years that just don't have the right

00:16:01,010 --> 00:16:05,510
talent within their organization so

00:16:03,110 --> 00:16:07,760
that's kind of first and foremost right

00:16:05,510 --> 00:16:09,890
is that when you start building these

00:16:07,760 --> 00:16:12,050
teams and you start figuring out okay we

00:16:09,890 --> 00:16:13,970
want to go forward do you have the

00:16:12,050 --> 00:16:16,339
subject matter experts within your

00:16:13,970 --> 00:16:17,450
organization to go forward is this

00:16:16,339 --> 00:16:19,850
something that you will have to

00:16:17,450 --> 00:16:21,589
outsource if this is something that you

00:16:19,850 --> 00:16:23,600
think that you have and then down the

00:16:21,589 --> 00:16:25,580
road you have to kind of outsource now

00:16:23,600 --> 00:16:29,029
you're expanding budgets in a way that

00:16:25,580 --> 00:16:31,220
you weren't predicting from the onset so

00:16:29,029 --> 00:16:33,290
we'll get that kind of right again a

00:16:31,220 --> 00:16:35,180
question list that we have here do we

00:16:33,290 --> 00:16:37,580
have the right talent is our talent

00:16:35,180 --> 00:16:40,250
aligned to you know the mission do they

00:16:37,580 --> 00:16:42,440
believe in Cloud Foundry if they don't

00:16:40,250 --> 00:16:45,170
think an application or a platform is

00:16:42,440 --> 00:16:47,030
going to actually ease their jobs you

00:16:45,170 --> 00:16:48,950
need to get your whole team aligned and

00:16:47,030 --> 00:16:52,310
this is the way that that really can

00:16:48,950 --> 00:16:54,230
make them speedy right the other thing

00:16:52,310 --> 00:16:56,510
is do we have all of our dependencies

00:16:54,230 --> 00:16:58,550
mapped out is there you know third-party

00:16:56,510 --> 00:17:01,670
data sources we're not thinking about or

00:16:58,550 --> 00:17:04,160
something of that you know element do we

00:17:01,670 --> 00:17:06,350
have and do we know our technical limits

00:17:04,160 --> 00:17:08,540
as far as you know what our

00:17:06,350 --> 00:17:11,140
infrastructure can and cannot allow and

00:17:08,540 --> 00:17:14,030
then do we also know the benefits to of

00:17:11,140 --> 00:17:16,280
migrating right I think as I've said

00:17:14,030 --> 00:17:17,929
before making sure that people know what

00:17:16,280 --> 00:17:19,280
they're going to do before they do the

00:17:17,929 --> 00:17:21,319
hard work or the benefits that they're

00:17:19,280 --> 00:17:23,750
gonna do can really help your whole

00:17:21,319 --> 00:17:26,150
organization with this mission all

00:17:23,750 --> 00:17:28,670
around I think just one comment on the

00:17:26,150 --> 00:17:30,920
talent as well you know from Ingrid CIOs

00:17:28,670 --> 00:17:32,720
perspective it's a lot easier if you

00:17:30,920 --> 00:17:34,070
make a conscious decision up front of

00:17:32,720 --> 00:17:36,110
where you're going to build your

00:17:34,070 --> 00:17:38,060
expertise internally versus bringing in

00:17:36,110 --> 00:17:39,740
external vendors so you're not like when

00:17:38,060 --> 00:17:41,330
you need something if I sum things on

00:17:39,740 --> 00:17:44,330
fire you're trying to get something out

00:17:41,330 --> 00:17:46,790
too to hit your user base you know that

00:17:44,330 --> 00:17:47,390
okay we're going to build custom

00:17:46,790 --> 00:17:51,800
business law

00:17:47,390 --> 00:17:53,690
to direct user you know to to reroute

00:17:51,800 --> 00:17:55,970
some of the production widgets if they

00:17:53,690 --> 00:17:57,200
have defects once we scan them but we're

00:17:55,970 --> 00:17:59,450
not gonna deal with all of the

00:17:57,200 --> 00:18:00,710
management of the VMS and infrastructure

00:17:59,450 --> 00:18:02,690
that are supporting the platform so

00:18:00,710 --> 00:18:04,850
making those proactive choices ahead of

00:18:02,690 --> 00:18:06,080
time makes it easier for as you when

00:18:04,850 --> 00:18:09,500
you're in the heat of the moment to make

00:18:06,080 --> 00:18:12,050
good choices and again the the list on

00:18:09,500 --> 00:18:13,880
the right is just a quick check as far

00:18:12,050 --> 00:18:15,610
as you know have you looked at all of

00:18:13,880 --> 00:18:20,360
your inter dependencies within this

00:18:15,610 --> 00:18:22,340
application you know and oftentimes we

00:18:20,360 --> 00:18:25,790
configure different things right a lot

00:18:22,340 --> 00:18:28,400
of us have still homegrown configuration

00:18:25,790 --> 00:18:31,130
tooling that we use we really recommend

00:18:28,400 --> 00:18:32,360
that you leverage the KISS principle I

00:18:31,130 --> 00:18:33,970
don't know if you guys are you guys

00:18:32,360 --> 00:18:37,520
familiar at all with the KISS principle

00:18:33,970 --> 00:18:40,010
yeah keep it simple stupid it's actually

00:18:37,520 --> 00:18:42,290
something that I learned in college it's

00:18:40,010 --> 00:18:44,930
a it's a supply chain principle but it

00:18:42,290 --> 00:18:46,340
really you know gets to the point and is

00:18:44,930 --> 00:18:48,770
something kind of cheeky that your

00:18:46,340 --> 00:18:51,050
team's might want to rethink is how do

00:18:48,770 --> 00:18:53,780
we make it so that we are using you know

00:18:51,050 --> 00:18:56,210
environment variables within our config

00:18:53,780 --> 00:18:58,930
environments and really kind of looking

00:18:56,210 --> 00:19:01,760
to at how we're leveraging our external

00:18:58,930 --> 00:19:03,530
configurations right and and as I said

00:19:01,760 --> 00:19:05,750
the pro tip here is to really leverage

00:19:03,530 --> 00:19:08,260
your environment variables so that you

00:19:05,750 --> 00:19:11,330
don't have to make your configurations

00:19:08,260 --> 00:19:12,770
more complicated than they need to be on

00:19:11,330 --> 00:19:15,200
the environment variables to that

00:19:12,770 --> 00:19:16,820
becomes extremely important as you're

00:19:15,200 --> 00:19:19,100
going from life cycle to life cycle

00:19:16,820 --> 00:19:20,720
right so you're going from you know

00:19:19,100 --> 00:19:22,580
maybe your CF dev environment on your

00:19:20,720 --> 00:19:24,500
laptop to a non production environment

00:19:22,580 --> 00:19:25,940
to a production environment anything

00:19:24,500 --> 00:19:27,440
that you can put into environment

00:19:25,940 --> 00:19:29,780
variables you're not going to have to be

00:19:27,440 --> 00:19:33,170
writing custom code and interpretation

00:19:29,780 --> 00:19:35,080
and have a bunch of like logic Forks so

00:19:33,170 --> 00:19:38,270
that you can read the environment

00:19:35,080 --> 00:19:40,220
variables based on what environment or a

00:19:38,270 --> 00:19:42,380
lifecycle you're in and it allows the

00:19:40,220 --> 00:19:44,150
underpinnings of that to change so you

00:19:42,380 --> 00:19:46,220
know you you've probably run across

00:19:44,150 --> 00:19:48,590
configs that are relying on IP address

00:19:46,220 --> 00:19:50,390
or even DNS name or things like that if

00:19:48,590 --> 00:19:51,980
you just inherit and pull that in from

00:19:50,390 --> 00:19:54,380
the environment it makes it a lot easier

00:19:51,980 --> 00:19:58,520
as you go from life cycle to life cycle

00:19:54,380 --> 00:20:00,920
environment to environment and then last

00:19:58,520 --> 00:20:01,309
but not least rate is everyone just

00:20:00,920 --> 00:20:04,129
keeps

00:20:01,309 --> 00:20:06,710
saying how much data is you know your

00:20:04,129 --> 00:20:10,009
kind of currency now I'm not gonna

00:20:06,710 --> 00:20:11,690
reiterate that analogy but you know just

00:20:10,009 --> 00:20:13,610
think about it like if you throw an

00:20:11,690 --> 00:20:16,129
application up into infrastructure and

00:20:13,610 --> 00:20:18,980
all of a sudden it doesn't work you're

00:20:16,129 --> 00:20:21,559
gonna need a pathway of data to figure

00:20:18,980 --> 00:20:24,019
out why that's happening right so your

00:20:21,559 --> 00:20:26,809
logs your event streams become that data

00:20:24,019 --> 00:20:28,700
to really help you configure your

00:20:26,809 --> 00:20:30,769
application run time or figure out you

00:20:28,700 --> 00:20:32,690
know what went wrong the other thing is

00:20:30,769 --> 00:20:34,700
is when we get into multi cloud

00:20:32,690 --> 00:20:37,009
environments right we're talking about

00:20:34,700 --> 00:20:39,529
multi vendors a lot of times too when it

00:20:37,009 --> 00:20:42,649
comes to support as we all know a multi

00:20:39,529 --> 00:20:44,659
vendor strategy Austin has us kind of

00:20:42,649 --> 00:20:46,279
you know pointing fingers at different

00:20:44,659 --> 00:20:48,559
vendors and you get stuck in kind of a

00:20:46,279 --> 00:20:50,659
support cycle so the better that you can

00:20:48,559 --> 00:20:52,460
be about your logging and truly

00:20:50,659 --> 00:20:54,649
understand what's going on under the

00:20:52,460 --> 00:20:56,509
hood based on you know what Cloud

00:20:54,649 --> 00:20:58,159
Foundry gives you in those logs the

00:20:56,509 --> 00:21:01,039
better off you will be at being able to

00:20:58,159 --> 00:21:03,049
diagnose issues yourself as well and

00:21:01,039 --> 00:21:04,789
yeah the app runtime makes it super easy

00:21:03,049 --> 00:21:07,249
you're just you're logging to standard

00:21:04,789 --> 00:21:08,960
out that's the that's best practice what

00:21:07,249 --> 00:21:11,570
you know one of the core 12 factors and

00:21:08,960 --> 00:21:13,129
that makes it very easy to you you know

00:21:11,570 --> 00:21:15,740
you get some stuff free not just system

00:21:13,129 --> 00:21:18,460
internals but you know a lot of times

00:21:15,740 --> 00:21:20,749
you can use that for like at least

00:21:18,460 --> 00:21:21,919
referential analytics not that you would

00:21:20,749 --> 00:21:23,570
want to be using it as your core

00:21:21,919 --> 00:21:27,110
analytics system because it's a lossy

00:21:23,570 --> 00:21:29,509
log system but you can get some order of

00:21:27,110 --> 00:21:31,399
magnitude idea of like user errors or

00:21:29,509 --> 00:21:33,649
login patterns or other functional

00:21:31,399 --> 00:21:35,029
behaviors within your application with

00:21:33,649 --> 00:21:36,200
no additional overhead so you don't have

00:21:35,029 --> 00:21:37,549
to worry about that analytics package

00:21:36,200 --> 00:21:39,200
you can just scrape here wherever you're

00:21:37,549 --> 00:21:42,019
dumping your logs it's in that storage

00:21:39,200 --> 00:21:44,059
bucket awesome

00:21:42,019 --> 00:21:46,610
so we've talked about moving our legacy

00:21:44,059 --> 00:21:49,580
applications and Greta's obviously into

00:21:46,610 --> 00:21:51,710
logging over there in the corner so this

00:21:49,580 --> 00:21:53,659
last part will talk about how do you

00:21:51,710 --> 00:21:55,399
better take this application now that

00:21:53,659 --> 00:21:56,869
you figured out you know whether you're

00:21:55,399 --> 00:21:59,600
gonna use application runtime or

00:21:56,869 --> 00:22:01,789
container runtime then once you kind of

00:21:59,600 --> 00:22:03,499
make the decision to go to application

00:22:01,789 --> 00:22:06,860
runtime how should you really break up

00:22:03,499 --> 00:22:08,869
that you know application into all the

00:22:06,860 --> 00:22:11,450
different pieces of dependencies

00:22:08,869 --> 00:22:12,900
configurations and logs and now really

00:22:11,450 --> 00:22:15,630
talking about engaging our

00:22:12,900 --> 00:22:17,490
right so let's let's say that Ingrid is

00:22:15,630 --> 00:22:19,470
here at CF summit having a great time

00:22:17,490 --> 00:22:21,000
its last day trying to take notes and

00:22:19,470 --> 00:22:22,770
figure out what she's gonna bring back

00:22:21,000 --> 00:22:25,980
to the company and the teams over which

00:22:22,770 --> 00:22:27,600
T she says she sees so we know we've

00:22:25,980 --> 00:22:29,280
already decided that okay we're probably

00:22:27,600 --> 00:22:31,290
going to be working on getting this

00:22:29,280 --> 00:22:33,570
factory widget scanning app into the

00:22:31,290 --> 00:22:37,410
application runtime but what else like

00:22:33,570 --> 00:22:39,800
so what why does that matter so first as

00:22:37,410 --> 00:22:41,790
you go back like leverage Cloud Foundry

00:22:39,800 --> 00:22:44,220
eliminate friction but eliminate it

00:22:41,790 --> 00:22:46,410
relentlessly right so you hear a lot of

00:22:44,220 --> 00:22:48,270
references to the elegance and beauty of

00:22:46,410 --> 00:22:50,610
just the CF push and various other

00:22:48,270 --> 00:22:52,680
tooling that's abstracted that will get

00:22:50,610 --> 00:22:54,180
you a lot of the way but you have to

00:22:52,680 --> 00:22:56,100
continue pressing that line and

00:22:54,180 --> 00:22:58,470
identifying like where in your value

00:22:56,100 --> 00:23:00,120
stream are you like losing time or

00:22:58,470 --> 00:23:03,600
costing time or spending unnecessary

00:23:00,120 --> 00:23:05,130
cycles I think just the spoiler alert

00:23:03,600 --> 00:23:06,990
it's probably somewhere in the security

00:23:05,130 --> 00:23:08,580
area there's always a lot of a lot of

00:23:06,990 --> 00:23:11,400
opportunities there to make that a lot

00:23:08,580 --> 00:23:12,750
more efficient so you know just one

00:23:11,400 --> 00:23:14,490
piece of advice like partner closely

00:23:12,750 --> 00:23:16,380
with with those folks because you can

00:23:14,490 --> 00:23:21,060
usually squeeze a lot of efficiency out

00:23:16,380 --> 00:23:23,130
there to help others so depending on

00:23:21,060 --> 00:23:24,450
where you are in your organization in

00:23:23,130 --> 00:23:27,000
terms of the journey on Cloud Foundry

00:23:24,450 --> 00:23:29,280
and your individual role there's going

00:23:27,000 --> 00:23:31,380
to be a lot of folks at your at your

00:23:29,280 --> 00:23:33,090
company that weren't able to come to

00:23:31,380 --> 00:23:34,920
this conference like haven't seen all of

00:23:33,090 --> 00:23:37,350
the information don't have the depth of

00:23:34,920 --> 00:23:39,750
understanding just be kind and help

00:23:37,350 --> 00:23:41,670
those folks out right so if they ask you

00:23:39,750 --> 00:23:43,290
a question and you're busy like just

00:23:41,670 --> 00:23:44,610
take a few minutes to at least try to

00:23:43,290 --> 00:23:46,260
help them out especially if it's

00:23:44,610 --> 00:23:47,910
something where they're you know

00:23:46,260 --> 00:23:49,710
struggling with understanding some of

00:23:47,910 --> 00:23:51,600
the cloud native design patterns or if

00:23:49,710 --> 00:23:52,950
you especially if you see that they may

00:23:51,600 --> 00:23:54,840
be implementing something that's going

00:23:52,950 --> 00:23:59,310
to come around and you know cause them

00:23:54,840 --> 00:24:01,830
problems or defects in production it's

00:23:59,310 --> 00:24:03,780
just a little help helpdesk there and

00:24:01,830 --> 00:24:05,220
then also don't don't do that just

00:24:03,780 --> 00:24:06,990
within your immediate zone but look

00:24:05,220 --> 00:24:08,100
outside your sphere especially with a

00:24:06,990 --> 00:24:10,610
lot of the tools that we have in the

00:24:08,100 --> 00:24:13,410
enterprise today as far as you know

00:24:10,610 --> 00:24:15,660
Google Hangouts and slack and HipChat

00:24:13,410 --> 00:24:18,300
and all the other you know always-on

00:24:15,660 --> 00:24:20,460
kind of slack provide chat providers

00:24:18,300 --> 00:24:22,890
there's a lot of opportunity to reach

00:24:20,460 --> 00:24:24,990
not just to your functional area or your

00:24:22,890 --> 00:24:26,370
media team but you know into a different

00:24:24,990 --> 00:24:28,170
organization into a different

00:24:26,370 --> 00:24:30,150
vertical spent some time with them

00:24:28,170 --> 00:24:31,740
developed that empathy try to understand

00:24:30,150 --> 00:24:33,840
where their pain points and friction

00:24:31,740 --> 00:24:35,640
points are and help others that you

00:24:33,840 --> 00:24:38,960
don't normally talk to day to day I

00:24:35,640 --> 00:24:41,040
would also say to like as far as fear

00:24:38,960 --> 00:24:43,230
oftentimes we kind of get stuck within

00:24:41,040 --> 00:24:44,610
our own industry but if you are someone

00:24:43,230 --> 00:24:46,559
that talks across different industries

00:24:44,610 --> 00:24:48,960
you realize how similar a lot of these

00:24:46,559 --> 00:24:51,480
problems are so there may not be someone

00:24:48,960 --> 00:24:53,760
in your particular area or industry but

00:24:51,480 --> 00:24:55,470
you could kind of open that up to see

00:24:53,760 --> 00:24:57,990
what other challenges are very similar

00:24:55,470 --> 00:24:59,460
right within different industries so I

00:24:57,990 --> 00:25:04,110
would encourage you to look across that

00:24:59,460 --> 00:25:06,210
too and then share as you're going

00:25:04,110 --> 00:25:08,160
through the the journey share your

00:25:06,210 --> 00:25:09,690
successes and your failures like don't

00:25:08,160 --> 00:25:10,950
don't try to cover up and hide when

00:25:09,690 --> 00:25:12,570
things go wrong or where you have

00:25:10,950 --> 00:25:15,630
problems or defects or issues right

00:25:12,570 --> 00:25:18,120
share those do like do thorough post

00:25:15,630 --> 00:25:20,100
mortems ask the five why's and try to

00:25:18,120 --> 00:25:23,400
try to understand and let other people

00:25:20,100 --> 00:25:25,890
know that it's okay to fail so like as a

00:25:23,400 --> 00:25:28,050
specific example an application that I

00:25:25,890 --> 00:25:30,000
deployed on Cloud Foundry took down a

00:25:28,050 --> 00:25:31,820
significant amount of users as it came

00:25:30,000 --> 00:25:33,960
up because we had centralized a

00:25:31,820 --> 00:25:36,179
configuration that had been distributed

00:25:33,960 --> 00:25:38,250
locally to mobile devices for deployment

00:25:36,179 --> 00:25:39,870
efficiency reasons we ended up

00:25:38,250 --> 00:25:42,179
centralizing the config and when all the

00:25:39,870 --> 00:25:44,100
mobile devices lit up they couldn't they

00:25:42,179 --> 00:25:46,620
couldn't download the new config so we

00:25:44,100 --> 00:25:49,110
were in a kind of a troubleshooting sub

00:25:46,620 --> 00:25:50,760
sub zero seven one mode for probably 30

00:25:49,110 --> 00:25:53,100
to 45 minutes before we get that worked

00:25:50,760 --> 00:25:54,960
out we didn't see any subsequent issues

00:25:53,100 --> 00:25:57,420
but you know things like that just owned

00:25:54,960 --> 00:25:59,100
them and explained like do post-mortems

00:25:57,420 --> 00:26:00,570
understand what went wrong and why and

00:25:59,100 --> 00:26:03,240
share those with others so that they

00:26:00,570 --> 00:26:05,250
feel comfortable and encouraged to kind

00:26:03,240 --> 00:26:13,020
of push the boundaries and push outside

00:26:05,250 --> 00:26:15,450
their boxes and spheres as well and then

00:26:13,020 --> 00:26:18,150
but so as a wrap-up we kind of talked

00:26:15,450 --> 00:26:19,550
loosely through Ingrid's story of you

00:26:18,150 --> 00:26:23,250
know getting into the Cloud Foundry

00:26:19,550 --> 00:26:24,809
ecosystem how to select application or

00:26:23,250 --> 00:26:27,900
container runtimes what makes sense to

00:26:24,809 --> 00:26:29,970
run where we Brittany talked a bit about

00:26:27,900 --> 00:26:31,860
like the specifics of moving legacy

00:26:29,970 --> 00:26:34,200
applications migrating refactoring and

00:26:31,860 --> 00:26:36,000
the twelve factors and then also just

00:26:34,200 --> 00:26:38,220
again encourage you to engage your

00:26:36,000 --> 00:26:39,399
community as you go back and spread this

00:26:38,220 --> 00:26:43,210
information across

00:26:39,399 --> 00:26:46,629
companies and that's that's all we have

00:26:43,210 --> 00:26:49,029
so any any questions for folks our

00:26:46,629 --> 00:26:51,759
twitter handles are at the bottom we

00:26:49,029 --> 00:26:54,460
also run a podcast together that's

00:26:51,759 --> 00:26:56,589
called life in the clouds doc dev if you

00:26:54,460 --> 00:26:58,059
guys are ever interested and yeah we're

00:26:56,589 --> 00:26:59,919
will be here for a few minutes if you

00:26:58,059 --> 00:27:01,490
have any questions thank you guys so

00:26:59,919 --> 00:27:06,259
much

00:27:01,490 --> 00:27:06,259

YouTube URL: https://www.youtube.com/watch?v=7DVCzz-fKnc


