Title: Leveraging CLI Community Plugins - Johanna Ratliff, Pivotal
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	Leveraging CLI Community Plugins - Johanna Ratliff, Pivotal 

An introduction to some favorite CLI Community plugins. From your first cf push, leveraging these plugins will improve your Cloud Foundry experience. Finally, learn how to write your own plugin for those individualized niceties youâ€™re craving.

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:05,460
great let's get started hello my name is

00:00:03,419 --> 00:00:07,799
Johanna Ratliff I'm an engineer at

00:00:05,460 --> 00:00:10,080
pivotal and this is the first podium of

00:00:07,799 --> 00:00:11,639
all of the talks I begin it I give it at

00:00:10,080 --> 00:00:14,630
this conference that I can actually see

00:00:11,639 --> 00:00:18,180
over so I'm ecstatic

00:00:14,630 --> 00:00:23,210
this is leveraging CLI community plugins

00:00:18,180 --> 00:00:27,390
so on the 101 talk I really wanted to

00:00:23,210 --> 00:00:29,160
give y'all something that leveraged what

00:00:27,390 --> 00:00:33,149
was already out there from the community

00:00:29,160 --> 00:00:37,230
and what was already accessible to be

00:00:33,149 --> 00:00:39,570
built in open-source as well so this

00:00:37,230 --> 00:00:40,920
might be a similar experience to what

00:00:39,570 --> 00:00:43,890
you've experienced with Cloud Foundry

00:00:40,920 --> 00:00:45,780
CLI at any point you're going you feel

00:00:43,890 --> 00:00:48,360
like you've figured out what exactly you

00:00:45,780 --> 00:00:51,989
want to do to your app and then the CLI

00:00:48,360 --> 00:00:54,149
is just not working for whatever you

00:00:51,989 --> 00:00:57,710
needed so hopefully we'll be taking you

00:00:54,149 --> 00:01:01,710
from this to something closer to this

00:00:57,710 --> 00:01:04,860
and how are we gonna do that that is

00:01:01,710 --> 00:01:07,860
going to be CLI plugins so the huge

00:01:04,860 --> 00:01:11,880
benefit from CLI plugins is that you're

00:01:07,860 --> 00:01:14,369
not trapped to what this standard CLI

00:01:11,880 --> 00:01:19,860
binary looks like you can extend it for

00:01:14,369 --> 00:01:21,990
yourself to be whatever you need so in

00:01:19,860 --> 00:01:25,409
what scenario is what I want a CLI

00:01:21,990 --> 00:01:27,330
plug-in well first when you're using any

00:01:25,409 --> 00:01:29,850
kind of addendum product to Cloud

00:01:27,330 --> 00:01:33,329
Foundry any kind of product that might

00:01:29,850 --> 00:01:34,829
be new to the platform and you want to

00:01:33,329 --> 00:01:38,280
leverage or you heard about a cool

00:01:34,829 --> 00:01:40,680
feature here and maybe those features

00:01:38,280 --> 00:01:44,340
aren't already in the standard CLI

00:01:40,680 --> 00:01:50,159
release so examples of this might be log

00:01:44,340 --> 00:01:52,890
cache or metric registrar which takes

00:01:50,159 --> 00:01:56,869
some of your app metrics and puts them

00:01:52,890 --> 00:01:59,610
back into the logging stream any kind of

00:01:56,869 --> 00:02:02,880
syslog drain functionality that you

00:01:59,610 --> 00:02:07,680
might want from your service that you

00:02:02,880 --> 00:02:11,069
stood up and sometimes the Cloud Foundry

00:02:07,680 --> 00:02:12,660
plugins or the CLI plugins just give you

00:02:11,069 --> 00:02:15,150
a nicer experience

00:02:12,660 --> 00:02:17,580
your vanilla API so for example I'll

00:02:15,150 --> 00:02:21,150
show you the log cache plug-in during

00:02:17,580 --> 00:02:23,190
the demo but there are pieces of that

00:02:21,150 --> 00:02:25,290
that if you're just querying or if

00:02:23,190 --> 00:02:28,110
you're just hitting that API you're

00:02:25,290 --> 00:02:30,690
gonna get a big dump of JSON and we can

00:02:28,110 --> 00:02:32,760
actually make a much better experience

00:02:30,690 --> 00:02:34,860
for you by taking those three or four

00:02:32,760 --> 00:02:37,290
pieces that you're probably going to

00:02:34,860 --> 00:02:38,820
want to scan first and formatting them

00:02:37,290 --> 00:02:41,190
and so that's what we really leveraged

00:02:38,820 --> 00:02:44,100
our CLI plugin for I'll show you that

00:02:41,190 --> 00:02:46,170
later and then another time you might

00:02:44,100 --> 00:02:48,480
want to CLI plug-in is when you think

00:02:46,170 --> 00:02:50,520
well somebody else has definitely been

00:02:48,480 --> 00:02:52,470
annoyed by lack of functionality on this

00:02:50,520 --> 00:02:53,400
exact same thing and you're sitting

00:02:52,470 --> 00:02:55,760
there and you're like I'm not the only

00:02:53,400 --> 00:02:59,130
one I'm not the only one who needs this

00:02:55,760 --> 00:03:00,720
that's a great time to look for a CLI

00:02:59,130 --> 00:03:05,250
plug-in or perhaps write one yourself

00:03:00,720 --> 00:03:08,790
which we'll get to so things like the

00:03:05,250 --> 00:03:10,680
log cache plug-in we didn't go ahead and

00:03:08,790 --> 00:03:13,110
continue with that same CF logs

00:03:10,680 --> 00:03:15,180
experience we went and jumped into a

00:03:13,110 --> 00:03:16,980
more UNIX experience so we said well we

00:03:15,180 --> 00:03:19,740
have the power here so let's change it

00:03:16,980 --> 00:03:22,140
from CF logs to CF tail and CF tail

00:03:19,740 --> 00:03:24,840
follow because a lot of folks will be

00:03:22,140 --> 00:03:28,740
very familiar with that terminology and

00:03:24,840 --> 00:03:32,790
we just make ease-of-use improve ease of

00:03:28,740 --> 00:03:35,640
use the Who am I plug-in one of my

00:03:32,790 --> 00:03:37,320
colleagues wrote this and up until it's

00:03:35,640 --> 00:03:42,060
been available for a long time and up

00:03:37,320 --> 00:03:44,670
until eight months ago I would complain

00:03:42,060 --> 00:03:47,310
and be like I just want a CF Who am I

00:03:44,670 --> 00:03:48,630
why is it that hard why hasn't the CLI

00:03:47,310 --> 00:03:50,310
team built this yet and they're like

00:03:48,630 --> 00:03:53,040
there's a there's a plug-in Johanna

00:03:50,310 --> 00:03:56,520
there's a plug-in so I went and I got it

00:03:53,040 --> 00:04:00,890
and I'm a much happier person now there

00:03:56,520 --> 00:04:02,890
are so many plugins that have

00:04:00,890 --> 00:04:07,430
[Music]

00:04:02,890 --> 00:04:10,370
explanations on your repo plugins

00:04:07,430 --> 00:04:13,280
commands that I'll show you that say hey

00:04:10,370 --> 00:04:15,889
this is just so you can use a wild-card

00:04:13,280 --> 00:04:19,070
in deploying your apps or deleting your

00:04:15,889 --> 00:04:22,490
apps like I can do some a couple letters

00:04:19,070 --> 00:04:24,229
star and those were like three apps that

00:04:22,490 --> 00:04:27,220
I wanted to do the same thing to so

00:04:24,229 --> 00:04:30,650
let's just throw a wild card in there

00:04:27,220 --> 00:04:33,860
some of the explanations you'll see next

00:04:30,650 --> 00:04:36,020
to the plug-in listings are like yeah

00:04:33,860 --> 00:04:38,690
that is the thing I want that sounds

00:04:36,020 --> 00:04:43,009
completely sane I'd absolutely want that

00:04:38,690 --> 00:04:47,500
so anytime you feel like somebody else

00:04:43,009 --> 00:04:50,800
has definitely wanted this before okay

00:04:47,500 --> 00:04:50,800
demo time

00:05:02,999 --> 00:05:09,409
okay we're gonna have to exit out of

00:05:05,809 --> 00:05:09,409
presentation mode really good

00:05:17,430 --> 00:05:23,180
and what if we bump this up

00:05:27,999 --> 00:05:34,659
okay can you all see this to a

00:05:30,309 --> 00:05:36,339
relatively good extent okay so let's

00:05:34,659 --> 00:05:42,039
look at the plugins I have installed

00:05:36,339 --> 00:05:44,249
right now so you can see some of the

00:05:42,039 --> 00:05:47,199
ones I was previously referencing and

00:05:44,249 --> 00:05:49,209
they give you the plug-in that you do

00:05:47,199 --> 00:05:52,209
have installed they give you the version

00:05:49,209 --> 00:05:55,509
of the plug-in and some of these sub

00:05:52,209 --> 00:05:57,129
commands that you've been enabled on CLI

00:05:55,509 --> 00:05:59,199
do to this plug-in so what plugins

00:05:57,129 --> 00:06:04,329
really do is they give you a broader

00:05:59,199 --> 00:06:06,699
suite of sub commands enabled so let's

00:06:04,329 --> 00:06:11,159
follow the instructions and just do repo

00:06:06,699 --> 00:06:15,249
plugins as it tells us to and find out

00:06:11,159 --> 00:06:16,569
what plugins are available so a lot of

00:06:15,249 --> 00:06:17,829
these look really cool and they're

00:06:16,569 --> 00:06:19,449
coming from different community members

00:06:17,829 --> 00:06:24,279
so they're coming from the people at

00:06:19,449 --> 00:06:26,349
this conference things that like do all

00:06:24,279 --> 00:06:29,259
you know run the same command on all the

00:06:26,349 --> 00:06:30,759
apps in a space org globally you've

00:06:29,259 --> 00:06:33,969
wanted to run the same command on that

00:06:30,759 --> 00:06:36,339
before so let's make it easy to do it

00:06:33,969 --> 00:06:39,249
for every single one in a space route

00:06:36,339 --> 00:06:42,129
lookup find the applications associated

00:06:39,249 --> 00:06:45,819
with a given host name and you can see

00:06:42,129 --> 00:06:48,639
how different levels of admin are like

00:06:45,819 --> 00:06:54,759
an admin level vs. developed developer

00:06:48,639 --> 00:06:58,089
level off here we'll play into kind of

00:06:54,759 --> 00:07:03,129
leveraging these different plugins but

00:06:58,089 --> 00:07:05,259
for now let's give you an example of one

00:07:03,129 --> 00:07:10,419
of the ones one of the ones that my team

00:07:05,259 --> 00:07:16,529
wrote let's give you an example of how

00:07:10,419 --> 00:07:20,439
to add a plug-in to your CLI experience

00:07:16,529 --> 00:07:23,379
so I know somewhere up there is the bug

00:07:20,439 --> 00:07:25,809
noise plug-in and I'll show you where

00:07:23,379 --> 00:07:28,299
these are hosted in a little bit but

00:07:25,809 --> 00:07:32,289
this really is how easy it is to install

00:07:28,299 --> 00:07:35,099
a new plugin yes I do want that binary

00:07:32,289 --> 00:07:35,099
give it to me

00:07:35,610 --> 00:07:43,770
so it goes out oh yeah this is speedy

00:07:38,730 --> 00:07:47,700
that's good so it goes out and fetches

00:07:43,770 --> 00:07:50,910
from the Cloud Foundry community plugins

00:07:47,700 --> 00:07:52,650
page where you can say hey community I

00:07:50,910 --> 00:07:54,810
have a plug-in I would really like to

00:07:52,650 --> 00:07:57,000
host it here and that is really what

00:07:54,810 --> 00:07:59,280
repo plugins is fetching from what it

00:07:57,000 --> 00:08:02,160
says here are all of your options and so

00:07:59,280 --> 00:08:03,960
you can install a plug-in that you've

00:08:02,160 --> 00:08:07,020
written for yourself it doesn't need to

00:08:03,960 --> 00:08:09,300
be hosted on the community page you can

00:08:07,020 --> 00:08:11,040
install a plug-in and say install it

00:08:09,300 --> 00:08:16,490
from this local place I just wrote it

00:08:11,040 --> 00:08:19,380
for myself and try it out and you can

00:08:16,490 --> 00:08:21,150
install a binary that you have on your

00:08:19,380 --> 00:08:24,360
github you can say here's here's the

00:08:21,150 --> 00:08:29,750
endpoint go install that binary don't

00:08:24,360 --> 00:08:33,990
question me CLI and it will go and add

00:08:29,750 --> 00:08:37,770
whatever addendum you've created this is

00:08:33,990 --> 00:08:41,640
quite slow whatever you've created to

00:08:37,770 --> 00:08:44,280
add it to your effectively sub commands

00:08:41,640 --> 00:08:49,230
that you can leverage from just that CF

00:08:44,280 --> 00:08:51,480
CLI experience so this is taking a while

00:08:49,230 --> 00:08:55,290
so I'm gonna say that y'all have seen

00:08:51,480 --> 00:08:59,790
how to install one and it's great and we

00:08:55,290 --> 00:09:05,220
can just use some of the ones that are

00:08:59,790 --> 00:09:08,460
already here so hopefully I'm still

00:09:05,220 --> 00:09:10,860
logged in but for example if I wanted to

00:09:08,460 --> 00:09:14,130
use my log cache plugin

00:09:10,860 --> 00:09:20,690
I could be hitting an API and get a

00:09:14,130 --> 00:09:20,690
really extensive JSON drop but instead

00:09:28,930 --> 00:09:34,600
I can get some of that condensed

00:09:32,709 --> 00:09:36,699
information the things I really care

00:09:34,600 --> 00:09:39,430
about cache duration the number of

00:09:36,699 --> 00:09:43,319
things stored in my log cache for the

00:09:39,430 --> 00:09:47,110
apps in my space where I am right here

00:09:43,319 --> 00:09:49,089
so as this user I only have my log

00:09:47,110 --> 00:09:51,850
spinner demo app but you can see how

00:09:49,089 --> 00:09:57,850
this can be a lot nicer of an experience

00:09:51,850 --> 00:10:00,129
than just full JSON and only being able

00:09:57,850 --> 00:10:02,410
to hit the API so if that's ever

00:10:00,129 --> 00:10:03,819
something that you've written an app

00:10:02,410 --> 00:10:05,709
that you're like you know what I would

00:10:03,819 --> 00:10:07,629
love to be able to condense some of this

00:10:05,709 --> 00:10:09,939
information for my own uses you can also

00:10:07,629 --> 00:10:12,779
write a plug-in and just improve your

00:10:09,939 --> 00:10:12,779
experience like that

00:10:13,199 --> 00:10:26,559
additionally let's try

00:10:16,059 --> 00:10:29,079
Ã§f tale log spinner demo look so many

00:10:26,559 --> 00:10:30,490
metrics what a delightful experience but

00:10:29,079 --> 00:10:33,670
this is what I was telling you about

00:10:30,490 --> 00:10:35,679
kind of tail vs. tail follow we decided

00:10:33,670 --> 00:10:37,480
that a unix-like experience was a

00:10:35,679 --> 00:10:40,809
priority for us so we wrote some

00:10:37,480 --> 00:10:45,490
commands that our tail tail follow that

00:10:40,809 --> 00:10:51,490
are normal for the way we think about a

00:10:45,490 --> 00:10:55,959
CLI usage so that's kind of a quick demo

00:10:51,490 --> 00:11:01,509
intro to how you can start navigating

00:10:55,959 --> 00:11:06,309
CLI plug-ins where that information

00:11:01,509 --> 00:11:16,749
might be and then what we're gonna do is

00:11:06,309 --> 00:11:22,110
pop back to some slides and pull up a

00:11:16,749 --> 00:11:26,860
couple pages so I really wish plug in X

00:11:22,110 --> 00:11:29,579
existed well plug in discovery can be

00:11:26,860 --> 00:11:29,579
done at that

00:11:30,410 --> 00:11:37,000
repo plugins command directly in your

00:11:33,920 --> 00:11:39,710
CLI like we showed but it can also be

00:11:37,000 --> 00:11:49,070
sorry all the Wi-Fi is real slow right

00:11:39,710 --> 00:11:50,510
now but it can also be on this page that

00:11:49,070 --> 00:11:52,930
I will show you when it comes up in a

00:11:50,510 --> 00:11:52,930
second

00:12:03,680 --> 00:12:08,440
go little Paige go okay

00:12:12,180 --> 00:12:20,700
I'll pull it over later okay so this is

00:12:17,040 --> 00:12:23,339
the Cloud Foundry community CLI plugins

00:12:20,700 --> 00:12:26,459
page so this is where you would want to

00:12:23,339 --> 00:12:28,140
engage and you can see to include your

00:12:26,459 --> 00:12:30,120
plug-in in our community repo please

00:12:28,140 --> 00:12:32,970
follow the instructions on github so you

00:12:30,120 --> 00:12:34,740
can go to their github page through here

00:12:32,970 --> 00:12:36,329
and say hey I'd really like to

00:12:34,740 --> 00:12:37,740
contribute a plug-in back in maybe

00:12:36,329 --> 00:12:43,220
you've written one maybe you're excited

00:12:37,740 --> 00:12:45,630
to share it with community and have it

00:12:43,220 --> 00:12:47,970
shown directly on here so that that

00:12:45,630 --> 00:12:52,100
binary can be pulled down from anybody

00:12:47,970 --> 00:12:52,100
saying hey I'd like this plug-in

00:12:52,130 --> 00:12:58,200
additionally like I said you can do

00:12:55,140 --> 00:13:00,329
plug-in installs from your own local if

00:12:58,200 --> 00:13:02,220
you've written one but I really

00:13:00,329 --> 00:13:03,959
encourage anybody who's interested in

00:13:02,220 --> 00:13:05,579
developing plugins to contribute them

00:13:03,959 --> 00:13:07,890
back to the community because so often

00:13:05,579 --> 00:13:13,380
there's that oh I would totally use that

00:13:07,890 --> 00:13:14,640
experience speaking up should totally

00:13:13,380 --> 00:13:16,019
show y'all later The Who am I

00:13:14,640 --> 00:13:19,649
experienced I was I was previously

00:13:16,019 --> 00:13:22,500
referencing so these are just a couple

00:13:19,649 --> 00:13:29,959
of the CLI plugins that you probably saw

00:13:22,500 --> 00:13:33,480
in that repo plugins output earlier so

00:13:29,959 --> 00:13:37,010
there-there is definitely this big scary

00:13:33,480 --> 00:13:44,160
warning of like it is it is a binary

00:13:37,010 --> 00:13:45,899
that to an extent we've we've hoped will

00:13:44,160 --> 00:13:48,990
not have malicious actors adding things

00:13:45,899 --> 00:13:51,480
to the community plugins but yeah I

00:13:48,990 --> 00:13:53,550
would perhaps if you're interested in a

00:13:51,480 --> 00:13:55,860
plug-in and you don't know who wrote it

00:13:53,550 --> 00:14:00,180
maybe go check out the github and make

00:13:55,860 --> 00:14:01,890
sure it's not malicious but so they're

00:14:00,180 --> 00:14:04,440
not vetted but they are a really

00:14:01,890 --> 00:14:07,199
powerful tool that most most of us have

00:14:04,440 --> 00:14:11,579
successfully used without too much

00:14:07,199 --> 00:14:13,560
trauma there so these are pretty good

00:14:11,579 --> 00:14:18,870
instructions for kind of using your

00:14:13,560 --> 00:14:21,149
first plug-in command and as previously

00:14:18,870 --> 00:14:23,850
mentioned really what plugins do do is

00:14:21,149 --> 00:14:24,390
they expand your grouping of sub

00:14:23,850 --> 00:14:31,980
commands

00:14:24,390 --> 00:14:34,500
you can use for the CFC Li and you can

00:14:31,980 --> 00:14:39,410
even host it on cf community right from

00:14:34,500 --> 00:14:39,410
the CLI you can do CF ad plug-in repo

00:14:40,370 --> 00:14:48,300
and you can also list the plug-in repos

00:14:43,940 --> 00:14:50,310
if I think you can add a different

00:14:48,300 --> 00:14:53,580
plug-in repo to say like here's our

00:14:50,310 --> 00:14:59,820
internal plug-in repo that we as a

00:14:53,580 --> 00:15:09,600
company host our plugins on but that

00:14:59,820 --> 00:15:13,260
might okay so going to developing CF CLI

00:15:09,600 --> 00:15:15,240
plugins this is a lot simpler than you

00:15:13,260 --> 00:15:17,040
might give it credit for because you do

00:15:15,240 --> 00:15:21,050
have this really nice interface of just

00:15:17,040 --> 00:15:21,050
like I'll pull up

00:15:48,840 --> 00:15:59,850
probably already have this loaded let's

00:15:54,120 --> 00:16:06,480
go look at the Who am I plug-in that I

00:15:59,850 --> 00:16:09,840
previously mentioned cool so this is the

00:16:06,480 --> 00:16:13,860
main go that Johannes wrote for The Who

00:16:09,840 --> 00:16:21,930
am I plug-in as you can see this main is

00:16:13,860 --> 00:16:24,210
not huge but this is this is literally

00:16:21,930 --> 00:16:30,690
how you extend and create a plugin you

00:16:24,210 --> 00:16:32,610
say plug-in usage and you explain what

00:16:30,690 --> 00:16:38,640
the command is going to look like

00:16:32,610 --> 00:16:43,920
you give it help text and then engaging

00:16:38,640 --> 00:16:45,750
with the CL is already known information

00:16:43,920 --> 00:16:48,240
is really easy too because you just say

00:16:45,750 --> 00:16:49,890
like hey I have a CLI connection get me

00:16:48,240 --> 00:16:53,250
the current org data I get me the

00:16:49,890 --> 00:16:55,170
current space data so the CLI itself is

00:16:53,250 --> 00:16:57,030
already taking care of all of that user

00:16:55,170 --> 00:16:58,980
off and things like that

00:16:57,030 --> 00:17:03,750
communicating with UA and Kathy about

00:16:58,980 --> 00:17:06,540
all the specifics there and then you get

00:17:03,750 --> 00:17:08,699
to just leverage this add-on power of

00:17:06,540 --> 00:17:10,620
saying like hey can I have a CLI

00:17:08,699 --> 00:17:12,990
connection great give me the information

00:17:10,620 --> 00:17:15,750
that you need and then you can sort it

00:17:12,990 --> 00:17:20,069
in however way that you need it for the

00:17:15,750 --> 00:17:27,920
purpose of your for the purpose of your

00:17:20,069 --> 00:17:27,920
add-on or your plugin so any questions

00:17:32,730 --> 00:17:39,450
questions about plugins questions about

00:17:38,520 --> 00:17:41,870
writing plugins

00:17:39,450 --> 00:17:41,870
sure

00:17:53,080 --> 00:17:56,080
okay

00:18:00,720 --> 00:18:08,500
yeah a lot of that becomes engagement

00:18:04,750 --> 00:18:12,120
with the CLI core team because certain

00:18:08,500 --> 00:18:14,860
plugins like they don't get just

00:18:12,120 --> 00:18:17,260
automatically adopted into the into the

00:18:14,860 --> 00:18:20,799
course he'll I but it is definitely

00:18:17,260 --> 00:18:23,350
something that if you have kind of proof

00:18:20,799 --> 00:18:25,149
that a lot of people are using it and

00:18:23,350 --> 00:18:27,059
you can engage with the core team about

00:18:25,149 --> 00:18:31,419
like hey I would really like this

00:18:27,059 --> 00:18:34,899
functionality in course EF there are

00:18:31,419 --> 00:18:37,210
definitely security arguments and such

00:18:34,899 --> 00:18:39,520
to be made to that team if you're saying

00:18:37,210 --> 00:18:41,740
here look at this big user base so I

00:18:39,520 --> 00:18:45,549
think it's on a case-by-case basis I've

00:18:41,740 --> 00:18:47,799
only I've only engaged with them about

00:18:45,549 --> 00:18:51,130
the log cache plug-in about the

00:18:47,799 --> 00:18:53,320
potential for that but yeah I would say

00:18:51,130 --> 00:18:56,409
it's on a case by case basis but again

00:18:53,320 --> 00:18:58,059
they they're pretty open to like look at

00:18:56,409 --> 00:19:03,190
this proof that people use it don't you

00:18:58,059 --> 00:19:05,610
want it in your core thing any other

00:19:03,190 --> 00:19:05,610
questions

00:19:06,179 --> 00:19:09,179
yeah

00:19:13,610 --> 00:19:24,810
yeah yeah so I've only ever used go but

00:19:21,240 --> 00:19:26,970
I mean effectively it's a binary right

00:19:24,810 --> 00:19:40,310
so as long as you can produce a binary

00:19:26,970 --> 00:19:42,180
Josh go honey has written a couple noted

00:19:40,310 --> 00:19:45,240
learned something new today

00:19:42,180 --> 00:19:47,280
um I assumed that was just my language

00:19:45,240 --> 00:19:49,410
preferences but it's apparent that it's

00:19:47,280 --> 00:19:53,100
it's everybody's um

00:19:49,410 --> 00:19:55,460
but go is a delightful thing to you so I

00:19:53,100 --> 00:20:01,580
would encourage you to do that anyway

00:19:55,460 --> 00:20:04,620
all right any other questions all right

00:20:01,580 --> 00:20:07,370
thanks folks for coming to this slightly

00:20:04,620 --> 00:20:07,370

YouTube URL: https://www.youtube.com/watch?v=Cfi6jqG4HSI


