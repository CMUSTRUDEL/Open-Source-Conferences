Title: An Introduction to Stratos - An Open Source Cloud Foundry UI - Peter Andersson & Rob Knight, SUSE
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	An Introduction to Stratos - An Open Source Cloud Foundry UI - Peter Andersson & Rob Knight, SUSE 

Is your organization making the move to Cloud Foundry, but your operations teams are concerned about learning yet another CLI for managing your deployments? Already using (or planning to use) Kubernetes in your operation? This session will take a closer look at Stratos, the new “Single Pane of Glass” for Cloud Foundry Instance and Application Management that runs on Kubernetes. Stratos is an Open Source, Web-based Graphical User Interface (Console) for managing Cloud Foundry. It allows users and administrators to both manage applications running in the Cloud Foundry cluster and perform cluster management tasks. Todd and Dwain will demonstrate: User access controls, application consumption from CI/CD, application instance controls and more. They will also show how a Containerized Cloud Foundry interfaces with Kubernetes and the Kubernetes Dashboard.

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:08,130
good evening everyone thanks for joining

00:00:03,840 --> 00:00:11,120
us my name is Rob de Canyon night

00:00:08,130 --> 00:00:14,429
I'm a technical strategist at Sousa

00:00:11,120 --> 00:00:18,270
which is basically a cool name for a

00:00:14,429 --> 00:00:21,930
glorified SC and my colleague here my

00:00:18,270 --> 00:00:24,359
name is Peter Anderson and I'm Swedish

00:00:21,930 --> 00:00:26,910
so as half of the population I have a

00:00:24,359 --> 00:00:31,940
son named so Anderson Swenson or

00:00:26,910 --> 00:00:37,640
auspices and I had the same role as Rob

00:00:31,940 --> 00:00:41,129
basically so for those of you unaware

00:00:37,640 --> 00:00:42,480
Souza you know we're here today to talk

00:00:41,129 --> 00:00:44,520
about straddles and do a brief

00:00:42,480 --> 00:00:46,020
introductory session to straddle so if

00:00:44,520 --> 00:00:47,520
you've been to any of the advanced

00:00:46,020 --> 00:00:49,410
sessions of Stratis

00:00:47,520 --> 00:00:50,520
then you might want to walk out now

00:00:49,410 --> 00:00:53,010
because this will be you know you've

00:00:50,520 --> 00:00:54,590
probably covered this already via for

00:00:53,010 --> 00:00:58,559
those unaware Suzhou we are the largest

00:00:54,590 --> 00:01:01,469
independent open-source company and over

00:00:58,559 --> 00:01:03,120
1300 employees and the main thing to

00:01:01,469 --> 00:01:05,100
take away from this slide is we're

00:01:03,120 --> 00:01:09,350
hiring we're on the board downstairs for

00:01:05,100 --> 00:01:09,350
anyone who's I'm willing to take a look

00:01:09,470 --> 00:01:16,320
so that's a quick a great quote that

00:01:14,159 --> 00:01:19,729
we've got up there you know when user

00:01:16,320 --> 00:01:22,290
experience doesn't consider all users

00:01:19,729 --> 00:01:27,240
shouldn't it be known as some user

00:01:22,290 --> 00:01:31,409
experience or sucks and this is really

00:01:27,240 --> 00:01:32,610
me or taking this and applying it to

00:01:31,409 --> 00:01:35,210
Cloud Foundry

00:01:32,610 --> 00:01:41,070
who here is a developer put your hand up

00:01:35,210 --> 00:01:43,530
good anyone here in operations a couple

00:01:41,070 --> 00:01:48,780
anyone in business management or a

00:01:43,530 --> 00:01:53,759
manager okay anyone here from marketing

00:01:48,780 --> 00:01:57,030
or legal you laugh but this is exactly

00:01:53,759 --> 00:02:00,600
the point cloud file Cloud Foundry isn't

00:01:57,030 --> 00:02:02,790
really accessible to those other types

00:02:00,600 --> 00:02:06,119
of users so developer yeah great for

00:02:02,790 --> 00:02:08,819
developer you know but for operations

00:02:06,119 --> 00:02:11,300
teams yeah yes it can be but for those

00:02:08,819 --> 00:02:13,970
other types of people your marketing

00:02:11,300 --> 00:02:17,960
illegal your manager it's not accessible

00:02:13,970 --> 00:02:23,240
at all and part of that is due to the

00:02:17,960 --> 00:02:24,590
management tools that are available I'm

00:02:23,240 --> 00:02:27,680
going to talk a little bit about Sousa

00:02:24,590 --> 00:02:31,490
cloud application platform because part

00:02:27,680 --> 00:02:33,530
of this is making Cloud Foundry more

00:02:31,490 --> 00:02:35,120
accessible to more people because if we

00:02:33,530 --> 00:02:37,670
don't make it more accessible to the

00:02:35,120 --> 00:02:39,050
community and to more individuals it

00:02:37,670 --> 00:02:42,110
will start to wither and die as a

00:02:39,050 --> 00:02:44,870
technology and to talk about Sousa cloud

00:02:42,110 --> 00:02:46,130
application platform leads us in to

00:02:44,870 --> 00:02:48,770
talking about straddles because we

00:02:46,130 --> 00:02:51,410
developed Stratos as part of cloud

00:02:48,770 --> 00:02:53,330
application platform the key things to

00:02:51,410 --> 00:02:55,810
take away from this is a cloud

00:02:53,330 --> 00:02:58,520
application platform is Souza's

00:02:55,810 --> 00:03:01,130
containerized cloud foundry distribution

00:02:58,520 --> 00:03:03,350
we were the first company to run

00:03:01,130 --> 00:03:07,160
cloud foundry completely containerized

00:03:03,350 --> 00:03:08,420
on top of kubernetes now it seems

00:03:07,160 --> 00:03:10,000
everyone's going down that route you

00:03:08,420 --> 00:03:12,500
know you've heard about project ireenie

00:03:10,000 --> 00:03:14,480
and quarks and everything else so you

00:03:12,500 --> 00:03:17,720
know kind of really help to to set the

00:03:14,480 --> 00:03:20,540
trend there and it's 100% free and open

00:03:17,720 --> 00:03:22,880
source although yes it is a product it

00:03:20,540 --> 00:03:25,880
is the exact same code in the product

00:03:22,880 --> 00:03:27,260
that you go and github and download we

00:03:25,880 --> 00:03:28,970
don't provide a separate helmet chart

00:03:27,260 --> 00:03:31,700
for our customers you know as a

00:03:28,970 --> 00:03:33,410
developer you can go on there run out on

00:03:31,700 --> 00:03:35,480
top of mini cube download the helm chart

00:03:33,410 --> 00:03:37,610
and get going right away and that's why

00:03:35,480 --> 00:03:38,440
I've put the the link up there now to to

00:03:37,610 --> 00:03:40,400
give it a try

00:03:38,440 --> 00:03:43,040
obviously if you do work for a company

00:03:40,400 --> 00:03:44,270
and you want support and s LA's that's

00:03:43,040 --> 00:03:45,560
where we come in

00:03:44,270 --> 00:03:48,110
you know we've our with our product

00:03:45,560 --> 00:03:50,720
offering I'm going to hand over to Peter

00:03:48,110 --> 00:03:54,470
now he's going to talk a little bit

00:03:50,720 --> 00:03:58,160
about Cloud Foundry management yeah so

00:03:54,470 --> 00:04:00,410
just by having a platform it's not

00:03:58,160 --> 00:04:03,380
enough you need to be able to access it

00:04:00,410 --> 00:04:05,360
and there are different ways of

00:04:03,380 --> 00:04:07,040
accessing it depending on what role you

00:04:05,360 --> 00:04:10,550
have if you're the developer or

00:04:07,040 --> 00:04:12,320
operators or as Rob said legal marketing

00:04:10,550 --> 00:04:14,480
and I'm going to look talked a little

00:04:12,320 --> 00:04:17,110
bit about that so what tools are

00:04:14,480 --> 00:04:17,110
available today

00:04:17,389 --> 00:04:25,310
and what can we add to the toolset so of

00:04:22,759 --> 00:04:27,229
course the CLI you have all seen the

00:04:25,310 --> 00:04:30,800
famous see if coach come on a couple of

00:04:27,229 --> 00:04:32,509
times these days or today and the good

00:04:30,800 --> 00:04:34,909
thing with this Eli is of course it's

00:04:32,509 --> 00:04:36,469
easy to use if you are a developer or

00:04:34,909 --> 00:04:39,620
Linux Linux v8

00:04:36,469 --> 00:04:42,409
easy to use an automation for scripting

00:04:39,620 --> 00:04:45,759
and so on but for others it might be a

00:04:42,409 --> 00:04:48,139
little bit harder and some a

00:04:45,759 --> 00:04:50,090
considerations could be that yeah you

00:04:48,139 --> 00:04:52,699
need the client to be installed on a

00:04:50,090 --> 00:04:55,300
machine that you have access to and it's

00:04:52,699 --> 00:04:58,520
hard to switch between different

00:04:55,300 --> 00:05:00,919
instances of CAP or is a cloud foundry

00:04:58,520 --> 00:05:03,080
this door sorry I also used to say Suzie

00:05:00,919 --> 00:05:05,599
capsule but instead of different

00:05:03,080 --> 00:05:07,400
instances and also it could be hard to

00:05:05,599 --> 00:05:09,349
change between different spaces and the

00:05:07,400 --> 00:05:17,569
works and so on depending what role we

00:05:09,349 --> 00:05:21,110
have so we created Stratos and that's a

00:05:17,569 --> 00:05:23,360
layer around cloud foundry that can help

00:05:21,110 --> 00:05:28,339
you manage and and get access to it and

00:05:23,360 --> 00:05:31,759
work with it and it also provides an

00:05:28,339 --> 00:05:33,860
interface to kubernetes because a cloud

00:05:31,759 --> 00:05:36,469
foundry version that suze provides is

00:05:33,860 --> 00:05:40,189
running on top of kubernetes executing

00:05:36,469 --> 00:05:42,740
this is hard our big part of the

00:05:40,189 --> 00:05:50,300
deployment your need to be access and

00:05:42,740 --> 00:05:53,180
working with when you accessing it so

00:05:50,300 --> 00:05:55,339
the reason why the Stratus was created

00:05:53,180 --> 00:05:57,529
bigger was that it wasn't a standard GUI

00:05:55,339 --> 00:06:00,500
for it so no graphical interface to

00:05:57,529 --> 00:06:06,529
access it so since we created it and as

00:06:00,500 --> 00:06:09,370
open sourced it in 2017 and it was

00:06:06,529 --> 00:06:12,680
accepted as a cloud foundry project

00:06:09,370 --> 00:06:17,509
nearly as a newly graduated to full

00:06:12,680 --> 00:06:19,520
field project and we have seen quite

00:06:17,509 --> 00:06:21,199
much much fuss in the market a lot of

00:06:19,520 --> 00:06:21,949
contributors and others are working on

00:06:21,199 --> 00:06:26,060
it right now

00:06:21,949 --> 00:06:27,769
that's from an great experience so some

00:06:26,060 --> 00:06:29,000
highlights or what you can do with with

00:06:27,769 --> 00:06:32,990
Stratus

00:06:29,000 --> 00:06:35,270
and of course you can view apps and see

00:06:32,990 --> 00:06:37,280
what what to look like the state is you

00:06:35,270 --> 00:06:39,500
can go into every instance of a certain

00:06:37,280 --> 00:06:42,020
app and say how is that doing is it

00:06:39,500 --> 00:06:46,220
crashed or is it deploying or starting

00:06:42,020 --> 00:06:50,210
or what state disease and and you can of

00:06:46,220 --> 00:06:51,590
course look at the autoscaler policies

00:06:50,210 --> 00:06:54,710
that's something that could be

00:06:51,590 --> 00:06:56,480
cumbersome for a non techie to fiddle

00:06:54,710 --> 00:07:01,250
with and and manage but you can do do

00:06:56,480 --> 00:07:03,080
Stratus and the marketplace that's also

00:07:01,250 --> 00:07:05,210
something that is a mystery for some

00:07:03,080 --> 00:07:07,250
people and it started help you to do

00:07:05,210 --> 00:07:15,080
that and manage it and then buy things

00:07:07,250 --> 00:07:19,220
together Stratus is work you can connect

00:07:15,080 --> 00:07:20,930
to any Cloud Foundry instance it must

00:07:19,220 --> 00:07:25,010
not be the Zeus version it could be

00:07:20,930 --> 00:07:27,950
pivotal or IBM or Alabama or other

00:07:25,010 --> 00:07:30,770
vendors out there so you just used the

00:07:27,950 --> 00:07:37,490
same API and it uses the standard API

00:07:30,770 --> 00:07:42,080
that is provided by foundry thanks next

00:07:37,490 --> 00:07:44,030
to you ok so we've got some icons up

00:07:42,080 --> 00:07:47,030
there you know at the top we've got

00:07:44,030 --> 00:07:49,070
certified kubernetes distributions and

00:07:47,030 --> 00:07:51,290
we've got certified community service

00:07:49,070 --> 00:07:55,460
providers and a few cloud providers as

00:07:51,290 --> 00:07:58,160
well so put your hand up if your

00:07:55,460 --> 00:08:01,820
organization or as a developer you use

00:07:58,160 --> 00:08:03,590
openshift or have used openshift a

00:08:01,820 --> 00:08:08,050
couple people keep your hands up if

00:08:03,590 --> 00:08:10,250
you've also use Cloud Foundry yeah so

00:08:08,050 --> 00:08:12,050
wouldn't it be great if you could have

00:08:10,250 --> 00:08:14,680
both of those on the same platform

00:08:12,050 --> 00:08:16,120
you know Cloud Foundry on top of

00:08:14,680 --> 00:08:19,190
openshift

00:08:16,120 --> 00:08:21,740
or managing Cloud Foundry or managing

00:08:19,190 --> 00:08:23,570
that kubernetes on top of openshift that

00:08:21,740 --> 00:08:27,800
is the type of thing that we're offering

00:08:23,570 --> 00:08:32,000
with our upstream product we say that we

00:08:27,800 --> 00:08:33,740
run on any kubernetes compatible API so

00:08:32,000 --> 00:08:36,530
as long as it scooping that is 1.8 plus

00:08:33,740 --> 00:08:39,080
we can we can work on that and we can

00:08:36,530 --> 00:08:41,649
support on that so that means you know

00:08:39,080 --> 00:08:43,990
in terms of vendor portability

00:08:41,649 --> 00:08:45,730
that is you know really great but even

00:08:43,990 --> 00:08:47,769
just from an open-source management

00:08:45,730 --> 00:08:53,199
perspective it provides you know quite a

00:08:47,769 --> 00:08:56,019
lot of possibilities as well there's two

00:08:53,199 --> 00:08:58,809
kind of versions of Stratos there is the

00:08:56,019 --> 00:09:01,629
upstream version that's in the community

00:08:58,809 --> 00:09:03,160
and then there's the suzer version the

00:09:01,629 --> 00:09:05,889
one that's included in our cloud

00:09:03,160 --> 00:09:07,629
application platform but as I mention

00:09:05,889 --> 00:09:09,790
Avera is included in our cloud

00:09:07,629 --> 00:09:11,589
application platform it can also be

00:09:09,790 --> 00:09:13,990
deployed separately it's completely free

00:09:11,589 --> 00:09:16,360
completely open-source you just grab the

00:09:13,990 --> 00:09:19,209
helm chart or deploy the docker image or

00:09:16,360 --> 00:09:22,629
deploy the CF native application and you

00:09:19,209 --> 00:09:25,540
can run it absolutely fine some of the

00:09:22,629 --> 00:09:27,819
things that we've got in the souza fied

00:09:25,540 --> 00:09:30,459
version haven't yet made their way

00:09:27,819 --> 00:09:32,529
upstream they've not yet been you know

00:09:30,459 --> 00:09:34,569
poured it up for example kubernetes

00:09:32,529 --> 00:09:36,910
management i'm extinction management

00:09:34,569 --> 00:09:39,429
we've got some helm features which I'm

00:09:36,910 --> 00:09:41,079
going to show you in a second those

00:09:39,429 --> 00:09:43,360
haven't yet made their way into pop

00:09:41,079 --> 00:09:45,399
stream but they could assume you know

00:09:43,360 --> 00:09:47,620
that's the Cloud Foundry community I

00:09:45,399 --> 00:09:49,149
guess is responsibility to take care of

00:09:47,620 --> 00:09:55,089
that but as I say there's nothing

00:09:49,149 --> 00:09:56,620
stopping you from deploying either there

00:09:55,089 --> 00:09:59,410
you are by and large is saying just a

00:09:56,620 --> 00:10:04,920
slightly different UI and we're going to

00:09:59,410 --> 00:10:07,420
go into the demo now and as we'll see

00:10:04,920 --> 00:10:12,910
we're going to be demoing the souza fied

00:10:07,420 --> 00:10:14,470
version some of the stuff is in beta or

00:10:12,910 --> 00:10:17,949
tech preview I just say it's a bit

00:10:14,470 --> 00:10:21,129
beyond beta so you know pray to the demo

00:10:17,949 --> 00:10:23,189
gods now hopefully it will work and as I

00:10:21,129 --> 00:10:27,929
say this is one that's available in the

00:10:23,189 --> 00:10:33,490
suzer version so I go over to Firefox

00:10:27,929 --> 00:10:37,559
this is the Stratis login screen going

00:10:33,490 --> 00:10:37,559
to go ahead and log in now

00:10:39,180 --> 00:10:42,970
shows us initially any favorites that

00:10:41,440 --> 00:10:46,630
we've got so any applications that we

00:10:42,970 --> 00:10:49,690
favorited or any recent activity I'll

00:10:46,630 --> 00:10:50,890
say now this is actually running on top

00:10:49,690 --> 00:10:56,710
of Asia

00:10:50,890 --> 00:10:59,200
IKS is talking to two different Sousa

00:10:56,710 --> 00:11:01,990
Cloud Foundry instances one of them in

00:10:59,200 --> 00:11:06,090
eks sorry one of them in Alibaba

00:11:01,990 --> 00:11:08,620
and one of them on aks now if I go to my

00:11:06,090 --> 00:11:11,230
Applications tab this is where it's

00:11:08,620 --> 00:11:13,930
listing all of the apps that are

00:11:11,230 --> 00:11:17,800
deployed in any of the cloud foundries

00:11:13,930 --> 00:11:20,020
that it straddles is connected to and I

00:11:17,800 --> 00:11:21,640
can see there you know we can see no one

00:11:20,020 --> 00:11:24,850
is really deploying anything can Beijing

00:11:21,640 --> 00:11:27,790
yet but inside are our as your instance

00:11:24,850 --> 00:11:30,220
there's a lot going on now deploying out

00:11:27,790 --> 00:11:32,530
an app is really simple and this is

00:11:30,220 --> 00:11:35,080
where I mention other departments

00:11:32,530 --> 00:11:38,050
earlier on today there should be no

00:11:35,080 --> 00:11:40,420
reason why our marketing or our legal

00:11:38,050 --> 00:11:43,270
teams shouldn't be able to deploy and

00:11:40,420 --> 00:11:45,880
manage apps I talk to customers every

00:11:43,270 --> 00:11:47,290
day that just tell me well our marketing

00:11:45,880 --> 00:11:49,180
team went off and bought this SAS

00:11:47,290 --> 00:11:51,130
application even though our developers

00:11:49,180 --> 00:11:53,410
you know have made this technology of it

00:11:51,130 --> 00:11:56,230
can do the same job if we don't make

00:11:53,410 --> 00:11:58,030
things accessible for other teams to

00:11:56,230 --> 00:11:59,860
consume they're just going to go off and

00:11:58,030 --> 00:12:02,260
do it anyway just like we found with

00:11:59,860 --> 00:12:03,670
public cloud right you know when it when

00:12:02,260 --> 00:12:06,280
it was first launched if we didn't find

00:12:03,670 --> 00:12:07,660
ways to enable it in our organizations

00:12:06,280 --> 00:12:11,160
people just went ahead and did it anyway

00:12:07,660 --> 00:12:15,580
and it became a bit of a wild wild west

00:12:11,160 --> 00:12:18,490
so we can deploy from any github URL or

00:12:15,580 --> 00:12:21,670
we can upload a zip or archive file of

00:12:18,490 --> 00:12:24,880
our application or we can just go ahead

00:12:21,670 --> 00:12:27,550
and and you know deploy an empty shell

00:12:24,880 --> 00:12:31,330
and then put in our application details

00:12:27,550 --> 00:12:37,090
later if I go ahead and choose my my

00:12:31,330 --> 00:12:42,190
organization and my space and go for a

00:12:37,090 --> 00:12:45,250
project that I know exists okay clumsy

00:12:42,190 --> 00:12:47,770
bird need a game it's me going to deploy

00:12:45,250 --> 00:12:50,020
from the master branch we can choose

00:12:47,770 --> 00:12:52,150
which commits we want to deploy let's go

00:12:50,020 --> 00:12:55,550
for the latest one

00:12:52,150 --> 00:12:57,470
we can give our application a name let's

00:12:55,550 --> 00:12:59,120
go for Rob's app and this is actually

00:12:57,470 --> 00:13:02,810
just overriding anything that we've

00:12:59,120 --> 00:13:05,980
already defined and inside the the the

00:13:02,810 --> 00:13:08,600
Cloud Foundry manifest file for the app

00:13:05,980 --> 00:13:13,130
we can choose to create a route I had

00:13:08,600 --> 00:13:16,460
let's go for that and the domain is

00:13:13,130 --> 00:13:18,080
gonna be that one and obviously here

00:13:16,460 --> 00:13:20,660
lots of other stuff that we can we can

00:13:18,080 --> 00:13:23,330
customize there if needs be and we'll go

00:13:20,660 --> 00:13:26,029
ahead and click deploy now this is a the

00:13:23,330 --> 00:13:27,710
equivalent of doing a CF push so it's

00:13:26,029 --> 00:13:30,170
going off downloading everything from

00:13:27,710 --> 00:13:32,450
from github or uploading the archive is

00:13:30,170 --> 00:13:34,930
then going to stage it it's been going

00:13:32,450 --> 00:13:38,000
to deploy it you know this is a very

00:13:34,930 --> 00:13:41,000
relatively simple node.js app so it's

00:13:38,000 --> 00:13:43,790
not going to take too long to do and we

00:13:41,000 --> 00:13:46,160
can see that it's staging there this is

00:13:43,790 --> 00:13:49,460
our kind of app summary view we get a

00:13:46,160 --> 00:13:52,370
lot of basic details about the app can

00:13:49,460 --> 00:13:55,460
we you know SSH into instances where is

00:13:52,370 --> 00:13:58,760
the app located what bill pack is it

00:13:55,460 --> 00:14:01,190
using and we go over to our instances

00:13:58,760 --> 00:14:02,690
tab this is where we could scale up our

00:14:01,190 --> 00:14:05,540
instances so if you're in ops

00:14:02,690 --> 00:14:07,310
you've got an ops team you know see on

00:14:05,540 --> 00:14:11,089
the command line yes you can scale you

00:14:07,310 --> 00:14:14,240
know see a scale etc but using straddles

00:14:11,089 --> 00:14:16,310
someone in a support desk can go ahead

00:14:14,240 --> 00:14:17,089
and click the button you know not

00:14:16,310 --> 00:14:19,250
something they don't even necessarily

00:14:17,089 --> 00:14:20,450
need to know what cloud foundry is they

00:14:19,250 --> 00:14:23,959
may have never heard of cloud foundry

00:14:20,450 --> 00:14:25,910
but for a very simple web UI Stratus

00:14:23,959 --> 00:14:27,320
they can go ahead and increase the

00:14:25,910 --> 00:14:30,860
number of instance there's decrease

00:14:27,320 --> 00:14:34,130
etcetera as needs to be we can also

00:14:30,860 --> 00:14:37,279
manage our routes through the same web

00:14:34,130 --> 00:14:40,220
interface as well as pulling in any logs

00:14:37,279 --> 00:14:42,290
that are there in the app I'll talk

00:14:40,220 --> 00:14:44,810
about services a little bit more in a

00:14:42,290 --> 00:14:48,170
second but any kind of Cloud Foundry

00:14:44,810 --> 00:14:52,700
events also get pulled in and one of my

00:14:48,170 --> 00:14:55,240
favorite features that's what happens

00:14:52,700 --> 00:14:58,310
when you rest on the keyboard is

00:14:55,240 --> 00:15:00,230
application metrics now I'm going to go

00:14:58,310 --> 00:15:03,890
to this tab in one of the apps it has

00:15:00,230 --> 00:15:04,790
been up a little while just because it's

00:15:03,890 --> 00:15:08,270
not been up long enough

00:15:04,790 --> 00:15:10,700
have metrics in along with Stratus we've

00:15:08,270 --> 00:15:14,510
got a sub project called Stratis metrics

00:15:10,700 --> 00:15:16,670
which will deploy Prometheus and then

00:15:14,510 --> 00:15:18,770
allow you allow you to connect straddles

00:15:16,670 --> 00:15:21,230
to back Prometheus and automatically

00:15:18,770 --> 00:15:24,190
pull in the metrics that are available

00:15:21,230 --> 00:15:26,540
for that app and it uses the standard CF

00:15:24,190 --> 00:15:27,610
exporter for those familiar with that

00:15:26,540 --> 00:15:31,760
already

00:15:27,610 --> 00:15:34,910
now the marketplace this is making

00:15:31,760 --> 00:15:37,070
available any services that an admin has

00:15:34,910 --> 00:15:38,390
created and in this case because we're

00:15:37,070 --> 00:15:41,450
running on Azure we've deployed the

00:15:38,390 --> 00:15:44,510
azure open service broker API show so we

00:15:41,450 --> 00:15:47,660
can consume any azure services so as

00:15:44,510 --> 00:15:49,550
your database for my sequel we can

00:15:47,660 --> 00:15:52,190
create instances of that really easily

00:15:49,550 --> 00:15:56,090
check what plans we've got and then we

00:15:52,190 --> 00:15:58,370
combine that to our specific service in

00:15:56,090 --> 00:16:01,430
the services tab here as we can see a

00:15:58,370 --> 00:16:03,160
couple of people have already done you

00:16:01,430 --> 00:16:05,870
know we can then edit that service

00:16:03,160 --> 00:16:08,690
select change the plan that it's on or

00:16:05,870 --> 00:16:11,690
change any other parameters available

00:16:08,690 --> 00:16:13,310
there now when I go to the Cloud Foundry

00:16:11,690 --> 00:16:15,140
tab this is something that I really want

00:16:13,310 --> 00:16:17,360
to highlight we're able to manage

00:16:15,140 --> 00:16:19,460
multiple cloud boundaries or multiple

00:16:17,360 --> 00:16:22,070
kubernetes from the same Stratus

00:16:19,460 --> 00:16:24,290
instance so you only need one production

00:16:22,070 --> 00:16:26,780
straddles for the 20 Cloud Foundry

00:16:24,290 --> 00:16:28,700
clusters that you've got and you know

00:16:26,780 --> 00:16:30,980
from a management tool or a multi cloud

00:16:28,700 --> 00:16:33,470
tool perspective that makes it you know

00:16:30,980 --> 00:16:36,290
really quite powerful and especially

00:16:33,470 --> 00:16:37,520
because it's free in terms of

00:16:36,290 --> 00:16:41,390
permissions it's using you know ver

00:16:37,520 --> 00:16:42,800
standard you a a back-end so any spaces

00:16:41,390 --> 00:16:44,900
groups or LDAP or whatever you've got

00:16:42,800 --> 00:16:47,180
set up for user authentication is

00:16:44,900 --> 00:16:49,580
automatically pulled in to straddles as

00:16:47,180 --> 00:16:51,050
well and users who log into Stratus can

00:16:49,580 --> 00:16:52,760
only do the actions that they would be

00:16:51,050 --> 00:16:55,130
able to do with the Cloud Foundry

00:16:52,760 --> 00:16:57,470
command line and everything uses

00:16:55,130 --> 00:16:59,840
standard Cloud Foundry api's as well

00:16:57,470 --> 00:17:01,190
says you know fully api compatible with

00:16:59,840 --> 00:17:03,650
any Cloud Foundry whether that's ours

00:17:01,190 --> 00:17:05,810
but it has pivotal x' or IBM's cloud

00:17:03,650 --> 00:17:10,070
foundry it's usable without you know any

00:17:05,810 --> 00:17:11,600
Cloud Foundry compatible API the

00:17:10,070 --> 00:17:14,950
kubernetes tab now this is where things

00:17:11,600 --> 00:17:17,730
start to get a little bit interesting

00:17:14,950 --> 00:17:19,530
this is as I mentioned earlier it's

00:17:17,730 --> 00:17:21,569
think that the Sousa version of

00:17:19,530 --> 00:17:24,329
straddles brings to the table so it's a

00:17:21,569 --> 00:17:27,929
little bit ahead of upstream in that

00:17:24,329 --> 00:17:29,820
area if I look at our endpoints tab you

00:17:27,929 --> 00:17:35,580
can see this is where we've connected

00:17:29,820 --> 00:17:37,230
our azure kubernetes instance to two

00:17:35,580 --> 00:17:39,780
straddles connecting a kubernetes

00:17:37,230 --> 00:17:42,000
instance is super easy we click the bus

00:17:39,780 --> 00:17:44,480
plus button and then we choose it avigal

00:17:42,000 --> 00:17:47,880
as you know generic kubernetes amazon

00:17:44,480 --> 00:17:49,740
Souza's kubernetes washer and in all we

00:17:47,880 --> 00:17:52,290
do is we put in the name endpoint

00:17:49,740 --> 00:17:55,049
address have an upload a cube config

00:17:52,290 --> 00:17:57,900
file to provide Stratus with access and

00:17:55,049 --> 00:17:59,730
and again each user has the ability to

00:17:57,900 --> 00:18:01,620
upload their own cube config files so

00:17:59,730 --> 00:18:03,419
we're still obeying the standard

00:18:01,620 --> 00:18:05,100
kubernetes our back permissions

00:18:03,419 --> 00:18:08,220
universes until oh we're not kind of

00:18:05,100 --> 00:18:12,660
breaking our back from from kubernetes

00:18:08,220 --> 00:18:15,270
in that way details that we can get from

00:18:12,660 --> 00:18:16,919
kubernetes similar to the kubernetes

00:18:15,270 --> 00:18:20,340
dashboard we bring in all of the pod

00:18:16,919 --> 00:18:22,350
usage metrics node metrics bring in

00:18:20,340 --> 00:18:24,090
metrics furfle what's happening on that

00:18:22,350 --> 00:18:26,040
node and the pods that are running on

00:18:24,090 --> 00:18:28,080
that node you can also see what

00:18:26,040 --> 00:18:31,020
applications have been deployed so what

00:18:28,080 --> 00:18:33,299
has been deployed through helm into

00:18:31,020 --> 00:18:34,890
vista kubernetes cluster and as I

00:18:33,299 --> 00:18:36,990
mentioned this can apply for multiple

00:18:34,890 --> 00:18:41,450
kubernetes classes you can add as many

00:18:36,990 --> 00:18:41,450
kubernetes clusters as you have to this

00:18:47,160 --> 00:18:51,840
and so this this only picks up helm

00:18:49,920 --> 00:18:54,150
deployed apps yeah because it's using

00:18:51,840 --> 00:18:57,480
tiller to scrape that information and

00:18:54,150 --> 00:18:59,190
but because of the changes coming with

00:18:57,480 --> 00:19:00,660
helm this is going to be updated and

00:18:59,190 --> 00:19:03,300
when we support Humphrey we'll be able

00:19:00,660 --> 00:19:06,600
to see you know more deployments in this

00:19:03,300 --> 00:19:08,660
area as well just as a byproduct of of

00:19:06,600 --> 00:19:11,460
moving away from tiller which is great

00:19:08,660 --> 00:19:12,990
one of the other things we've got and it

00:19:11,460 --> 00:19:14,550
does integrate the kubernetes dashboard

00:19:12,990 --> 00:19:16,650
as well so if you have deployed the

00:19:14,550 --> 00:19:19,320
upstream kubernetes dashboard we can

00:19:16,650 --> 00:19:21,090
view that in the cluster now I have

00:19:19,320 --> 00:19:24,630
deployed the kubernetes dashboard

00:19:21,090 --> 00:19:25,980
I believe but because of IKS permissions

00:19:24,630 --> 00:19:29,220
I haven't gone in and set up the are

00:19:25,980 --> 00:19:31,410
back rules to allow straddles to

00:19:29,220 --> 00:19:33,240
actually access anything yet but you

00:19:31,410 --> 00:19:35,100
would obviously set that up separately

00:19:33,240 --> 00:19:37,110
and then if needs be sort of stuff that

00:19:35,100 --> 00:19:39,590
you can't do for you straddle share you

00:19:37,110 --> 00:19:42,120
can do for the kubernetes dashboard and

00:19:39,590 --> 00:19:46,110
if I go back to the endpoints tab we can

00:19:42,120 --> 00:19:48,960
see I've got my own SAF metrics box this

00:19:46,110 --> 00:19:51,780
is where we've connected our metrics

00:19:48,960 --> 00:19:56,430
endpoints so when we deploy straddles

00:19:51,780 --> 00:19:58,110
metrics we also deploy along with it we

00:19:56,430 --> 00:20:01,170
also been going connect sorry straddles

00:19:58,110 --> 00:20:04,410
to that metrics endpoint now I believe

00:20:01,170 --> 00:20:10,460
Firefox has just crashed that tab so

00:20:04,410 --> 00:20:10,460
let's go back in on a new tab

00:20:13,200 --> 00:20:17,730
or it's the Wi-Fi we had a five moment

00:20:15,870 --> 00:20:22,820
earlier on today with the Wi-Fi sand

00:20:17,730 --> 00:20:22,820
let's see if that's happening again

00:20:25,790 --> 00:20:32,280
[Music]

00:20:28,370 --> 00:20:33,630
there we go sorry about that and so yeah

00:20:32,280 --> 00:20:36,000
we would connect our metrics end point

00:20:33,630 --> 00:20:39,330
there and but yeah as you can see we can

00:20:36,000 --> 00:20:41,550
add home chart repositories as well so

00:20:39,330 --> 00:20:43,560
when registering a different end point

00:20:41,550 --> 00:20:45,600
we can add a whole tree whether this is

00:20:43,560 --> 00:20:47,250
an internal one or an external one as

00:20:45,600 --> 00:20:50,340
long as it's a standard home repository

00:20:47,250 --> 00:20:52,470
we can put that in there and as you can

00:20:50,340 --> 00:20:55,230
see I've already added the standard

00:20:52,470 --> 00:20:58,560
kubernetes upstream charts repository

00:20:55,230 --> 00:21:03,480
for the stable and betta charts and if I

00:20:58,560 --> 00:21:06,500
go here we'll see the list of all of the

00:21:03,480 --> 00:21:09,210
charts that it's synchronized there now

00:21:06,500 --> 00:21:12,720
the reason that I like this is because

00:21:09,210 --> 00:21:15,530
we now have the capability to deploy any

00:21:12,720 --> 00:21:18,780
Hjelm chart in kubernetes

00:21:15,530 --> 00:21:20,490
when we go here will be series of the

00:21:18,780 --> 00:21:28,440
details from the readme of the helm

00:21:20,490 --> 00:21:30,900
chart we can choose to install it in the

00:21:28,440 --> 00:21:32,520
AKS cluster and again if we had multiple

00:21:30,900 --> 00:21:33,960
kubernetes clusters connected

00:21:32,520 --> 00:21:36,780
we would just choose that one from the

00:21:33,960 --> 00:21:38,880
drop down there we then bring in the

00:21:36,780 --> 00:21:40,320
existing value channel for those

00:21:38,880 --> 00:21:42,840
familiar with helm you would have dealt

00:21:40,320 --> 00:21:44,820
with this many times I'm sure to

00:21:42,840 --> 00:21:47,340
customize it as we like and then click

00:21:44,820 --> 00:21:48,930
install and then it goes off in the

00:21:47,340 --> 00:21:51,390
background and deploys that home child

00:21:48,930 --> 00:21:53,610
so for those of you who have about 20 30

00:21:51,390 --> 00:21:55,260
50 kubernetes clusters you can connect

00:21:53,610 --> 00:21:57,600
them all to straddles which is also

00:21:55,260 --> 00:22:00,510
managing your Cloud Foundry and then go

00:21:57,600 --> 00:22:04,170
ahead and deploy and manage helm chart

00:22:00,510 --> 00:22:06,030
based applications and that's really

00:22:04,170 --> 00:22:08,460
powerful both from a kind of dev point

00:22:06,030 --> 00:22:10,560
of view but also from from an ops point

00:22:08,460 --> 00:22:13,080
of view especially so definitely

00:22:10,560 --> 00:22:15,960
something worth looking into if I go

00:22:13,080 --> 00:22:18,270
ahead and look at the release now we can

00:22:15,960 --> 00:22:21,360
see yep pods running containers still

00:22:18,270 --> 00:22:23,350
coming up not quite ready yet we can

00:22:21,360 --> 00:22:25,690
view any any notes from from

00:22:23,350 --> 00:22:27,670
the helm deployment that it was

00:22:25,690 --> 00:22:30,700
outputted at the end you could see what

00:22:27,670 --> 00:22:33,220
pods there and also any services that

00:22:30,700 --> 00:22:37,240
have been produced by that by that home

00:22:33,220 --> 00:22:39,270
deployment as well I'm sure the

00:22:37,240 --> 00:22:42,790
container will be ready in a second so

00:22:39,270 --> 00:22:45,400
from a management perspective that kind

00:22:42,790 --> 00:22:48,120
of really covers the the helm piece and

00:22:45,400 --> 00:22:51,070
automation that's compatible with any

00:22:48,120 --> 00:22:52,930
helm sharp repository really that's

00:22:51,070 --> 00:22:55,390
that's that's compatible with the API

00:22:52,930 --> 00:22:59,170
and when it comes to Cloud Foundry

00:22:55,390 --> 00:23:02,700
management if I go and take a look at

00:22:59,170 --> 00:23:04,960
our one in the Alibaba cloud in Beijing

00:23:02,700 --> 00:23:07,240
although we've got no apps to Polaroid

00:23:04,960 --> 00:23:09,940
we can see we've got a bunch of users

00:23:07,240 --> 00:23:12,490
and orgs so this is the actual Cloud

00:23:09,940 --> 00:23:14,910
Foundry platform management and here is

00:23:12,490 --> 00:23:18,100
where we can manage our organizations

00:23:14,910 --> 00:23:20,950
our user groups well and our sir and our

00:23:18,100 --> 00:23:24,640
spaces and we can also manage quotas as

00:23:20,950 --> 00:23:27,700
well with Stratis which again allows us

00:23:24,640 --> 00:23:29,770
to help delegate some tasks out to other

00:23:27,700 --> 00:23:32,230
people you know for example service desk

00:23:29,770 --> 00:23:34,120
staff or basic administrators toss which

00:23:32,230 --> 00:23:36,250
traditionally may have had to be done by

00:23:34,120 --> 00:23:37,930
an experienced engineer we've got user

00:23:36,250 --> 00:23:39,910
management there you've got the fire

00:23:37,930 --> 00:23:42,190
hose so all of the looks from you know

00:23:39,910 --> 00:23:45,580
the cloud manager platform being brought

00:23:42,190 --> 00:23:47,710
into one place and we can also see and

00:23:45,580 --> 00:23:50,200
manage you know our build packs as well

00:23:47,710 --> 00:23:52,510
see what's being used see what stacks

00:23:50,200 --> 00:23:54,520
we've got deployed as well so as you can

00:23:52,510 --> 00:23:56,140
see one of the benefits of going with

00:23:54,520 --> 00:23:58,630
souza cloud application platform is

00:23:56,140 --> 00:24:00,070
getting as you know supported sled

00:23:58,630 --> 00:24:01,660
based image with all the security

00:24:00,070 --> 00:24:04,090
patches and everything that comes with

00:24:01,660 --> 00:24:05,590
it we can also manage security groups

00:24:04,090 --> 00:24:08,290
you know from a networking perspective

00:24:05,590 --> 00:24:10,390
and that's going to get even better once

00:24:08,290 --> 00:24:13,360
we integrate you know it's your employ

00:24:10,390 --> 00:24:14,380
into into into the offering as well and

00:24:13,360 --> 00:24:16,990
then we'll bring those management

00:24:14,380 --> 00:24:20,500
capabilities into Stratis as well and

00:24:16,990 --> 00:24:22,320
finally organization quotas so all of

00:24:20,500 --> 00:24:25,180
your standard kind of Cloud Foundry

00:24:22,320 --> 00:24:29,080
management pieces can be done with

00:24:25,180 --> 00:24:31,060
Stratus in terms of just got a couple of

00:24:29,080 --> 00:24:33,700
minutes left you know where we're taking

00:24:31,060 --> 00:24:36,400
this we're going to be boosting up the

00:24:33,700 --> 00:24:37,340
kubernetes management features more no

00:24:36,400 --> 00:24:40,460
we won't Stratus

00:24:37,340 --> 00:24:43,129
be a great kubernetes management tool as

00:24:40,460 --> 00:24:46,610
well as a great Cloud Foundry management

00:24:43,129 --> 00:24:48,350
tool and also there's not that we're

00:24:46,610 --> 00:24:50,720
going to be removing the dependency on

00:24:48,350 --> 00:24:52,370
Cloud Foundry so if you haven't got any

00:24:50,720 --> 00:24:54,470
Cloud Foundry instances running anyway

00:24:52,370 --> 00:24:56,899
you haven't got a UA a you'll soon be

00:24:54,470 --> 00:24:59,480
able to deploy just Stratus on top of

00:24:56,899 --> 00:25:02,600
kubernetes at the moment we have a kind

00:24:59,480 --> 00:25:04,970
of a test container which can be used

00:25:02,600 --> 00:25:06,919
for that purpose using my sequel instead

00:25:04,970 --> 00:25:09,799
of UA a as a user back end but that's

00:25:06,919 --> 00:25:12,950
them in tech preview at the moment and

00:25:09,799 --> 00:25:15,889
as I mentioned all of this is completely

00:25:12,950 --> 00:25:18,230
free completely open-source you can go

00:25:15,889 --> 00:25:21,169
to the github repo download the helm

00:25:18,230 --> 00:25:23,629
charts and get started as soon as you

00:25:21,169 --> 00:25:25,909
leave the room if you need any help

00:25:23,629 --> 00:25:29,149
that's what people like Peter and myself

00:25:25,909 --> 00:25:32,450
are for Rob Knight at Caesar comm and

00:25:29,149 --> 00:25:36,200
Peter Anderson with two S's as suzer

00:25:32,450 --> 00:25:38,119
comm or just come see us at the booth

00:25:36,200 --> 00:25:40,480
and you know we're at the Susan booth

00:25:38,119 --> 00:25:42,619
for the rest of the day and tomorrow and

00:25:40,480 --> 00:25:46,429
during the last couple of minutes I'll

00:25:42,619 --> 00:25:48,460
open it up to questions someone asked a

00:25:46,429 --> 00:25:48,460
question

00:25:55,159 --> 00:25:58,159
huh

00:26:01,059 --> 00:26:04,059
yes

00:26:05,200 --> 00:26:12,560
so the question was on the screen where

00:26:09,920 --> 00:26:15,230
we see the cloud cloud foundries do you

00:26:12,560 --> 00:26:17,810
need an admin user to manage the Cloud

00:26:15,230 --> 00:26:18,470
Foundry or if I log in as an individual

00:26:17,810 --> 00:26:20,150
user

00:26:18,470 --> 00:26:21,200
well I only see the Orcas and spaces

00:26:20,150 --> 00:26:23,570
that they've got access to is that

00:26:21,200 --> 00:26:25,340
correct the answer is you don't need to

00:26:23,570 --> 00:26:27,980
login as admin whatever user you login

00:26:25,340 --> 00:26:29,510
to it will give Stratus access to do so

00:26:27,980 --> 00:26:32,150
if I logged in with a standard user to

00:26:29,510 --> 00:26:35,540
Beijing then I will only be able to do

00:26:32,150 --> 00:26:38,710
what Beijing does conversely even though

00:26:35,540 --> 00:26:41,360
I may be logged in to Beijing as admin

00:26:38,710 --> 00:26:43,760
when the user logs into Cloud Foundry

00:26:41,360 --> 00:26:45,800
here has restricted permissions to

00:26:43,760 --> 00:26:48,440
straddles they will only be able to see

00:26:45,800 --> 00:26:50,810
what their organ space allows because it

00:26:48,440 --> 00:26:53,450
will be running the CF commands in the

00:26:50,810 --> 00:26:55,070
backend as that user so it won't

00:26:53,450 --> 00:26:57,350
something give all your users admin

00:26:55,070 --> 00:27:00,470
rights and you don't need to define any

00:26:57,350 --> 00:27:02,420
permissions within straddles at all

00:27:00,470 --> 00:27:04,310
there's no commissions what management

00:27:02,420 --> 00:27:06,050
within Stratus it's all taken from the

00:27:04,310 --> 00:27:07,880
Cloud Foundry site because everything is

00:27:06,050 --> 00:27:09,550
just doing CF commands in the background

00:27:07,880 --> 00:27:12,260
if that makes sense

00:27:09,550 --> 00:27:12,940
I'll see your question cool any other

00:27:12,260 --> 00:27:16,870
questions

00:27:12,940 --> 00:27:16,870
another question awesome

00:27:28,520 --> 00:27:32,300
so yeah the question was you mentioned a

00:27:30,410 --> 00:27:35,480
couple of feeders of features our beater

00:27:32,300 --> 00:27:37,160
or tech preview if I doubt if I use the

00:27:35,480 --> 00:27:37,790
latest stable release will I get those

00:27:37,160 --> 00:27:42,080
features

00:27:37,790 --> 00:27:44,059
the answer is partially so now bear with

00:27:42,080 --> 00:27:50,420
me we've released our latest stable

00:27:44,059 --> 00:27:52,550
release two point fifteen point one two

00:27:50,420 --> 00:27:54,980
five one two point five point one not 15

00:27:52,550 --> 00:27:57,080
a go to five one a couple of days ago

00:27:54,980 --> 00:28:00,170
that's in our home chart repository and

00:27:57,080 --> 00:28:02,780
if you just deploy it using helm install

00:28:00,170 --> 00:28:04,040
you won't get the advanced helmet

00:28:02,780 --> 00:28:05,510
capabilities that are there you'll get

00:28:04,040 --> 00:28:07,309
the kubernetes stuff but you won't get

00:28:05,510 --> 00:28:08,809
the helm stuff if you want the helm

00:28:07,309 --> 00:28:11,150
stuff and the kubernetes dashboard and

00:28:08,809 --> 00:28:13,520
the kubernetes metrics there's in your

00:28:11,150 --> 00:28:15,860
home bar and your helm deployment values

00:28:13,520 --> 00:28:18,350
file you can enable tech preview equals

00:28:15,860 --> 00:28:20,510
true and then that will include them so

00:28:18,350 --> 00:28:22,160
it's yes so in the answer is yes it's

00:28:20,510 --> 00:28:27,140
included in the image that's deployed

00:28:22,160 --> 00:28:28,790
but it's a feature flag to enable it and

00:28:27,140 --> 00:28:31,610
the developers nodding so I got that

00:28:28,790 --> 00:28:35,690
right and here any more questions from

00:28:31,610 --> 00:28:38,090
anyone cool

00:28:35,690 --> 00:28:40,550
well we'll close this up and this is

00:28:38,090 --> 00:28:41,809
Peter I'm Rob and come see a Sousa booth

00:28:40,550 --> 00:28:43,940
we've got chameleons we're giving away a

00:28:41,809 --> 00:28:47,120
Nintendo switch final thing I want to

00:28:43,940 --> 00:28:49,910
say Caesar Khan 2020 in April in Dublin

00:28:47,120 --> 00:28:51,679
go to Sousa Khan or Google Sousa Con 20

00:28:49,910 --> 00:28:53,000
and it's a great conference we're going

00:28:51,679 --> 00:28:56,179
to be doing all sorts of fun things with

00:28:53,000 --> 00:28:57,350
shadows and yeah I forgot to put it in

00:28:56,179 --> 00:29:01,300
the slide so I've gotta mention it

00:28:57,350 --> 00:29:01,300

YouTube URL: https://www.youtube.com/watch?v=AkV63JZN0qQ


