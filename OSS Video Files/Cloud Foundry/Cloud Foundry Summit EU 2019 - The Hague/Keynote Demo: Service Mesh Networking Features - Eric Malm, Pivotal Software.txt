Title: Keynote Demo: Service Mesh Networking Features - Eric Malm, Pivotal Software
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	Keynote Demo: Service Mesh Networking Features - Eric Malm, Staff Software Engineer, Pivotal Software  

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:08,010
thanks very much Abbi I'm excited to

00:00:06,299 --> 00:00:09,330
tell you about some of the routing and

00:00:08,010 --> 00:00:11,130
networking features we've been building

00:00:09,330 --> 00:00:21,439
into the platform on top of our

00:00:11,130 --> 00:00:23,880
integration with sto and envoy all right

00:00:21,439 --> 00:00:26,369
so to demonstrate I've put together a

00:00:23,880 --> 00:00:28,740
simple little web app called cff info

00:00:26,369 --> 00:00:30,119
it's going to show us some information

00:00:28,740 --> 00:00:33,239
about our favorite foundation staff

00:00:30,119 --> 00:00:34,559
members so at the root page of this it's

00:00:33,239 --> 00:00:36,180
actually showing you how it's all wired

00:00:34,559 --> 00:00:37,980
together and how it's taking advantage

00:00:36,180 --> 00:00:40,890
of these service mesh features that are

00:00:37,980 --> 00:00:43,440
new in the platform so the requests into

00:00:40,890 --> 00:00:45,480
this app are going to the cff info app

00:00:43,440 --> 00:00:47,460
and the front end but when they actually

00:00:45,480 --> 00:00:49,200
need to get information about the

00:00:47,460 --> 00:00:51,960
foundation members they're gonna call

00:00:49,200 --> 00:00:54,390
out to this members service and so

00:00:51,960 --> 00:00:56,550
that's going to connect to a collection

00:00:54,390 --> 00:00:58,590
of web apps on the backend each of which

00:00:56,550 --> 00:01:00,989
is providing information about an

00:00:58,590 --> 00:01:03,570
individual foundation member but they're

00:01:00,989 --> 00:01:06,270
doing that via this sidecar envoy that

00:01:03,570 --> 00:01:07,740
lives alongside the front-end app and so

00:01:06,270 --> 00:01:09,720
that's transparently proxying this

00:01:07,740 --> 00:01:13,290
traffic and doing load balancing across

00:01:09,720 --> 00:01:15,060
all these different back-end apps so

00:01:13,290 --> 00:01:18,900
just to show you that there's nothing up

00:01:15,060 --> 00:01:20,820
my sleeve I'll run CF apps and we can

00:01:18,900 --> 00:01:23,189
actually see these apps running in the

00:01:20,820 --> 00:01:25,259
CF instance here so there's our

00:01:23,189 --> 00:01:27,540
front-end app here and then different

00:01:25,259 --> 00:01:30,840
back-end apps for the different

00:01:27,540 --> 00:01:32,240
foundation members so let's see it in

00:01:30,840 --> 00:01:35,549
action

00:01:32,240 --> 00:01:39,000
so we'll load this up great and here's

00:01:35,549 --> 00:01:41,729
warna so showing off her name and title

00:01:39,000 --> 00:01:44,729
and part of her bio here but what we're

00:01:41,729 --> 00:01:47,159
really interested in is this metadata

00:01:44,729 --> 00:01:49,890
here about the front-end apps connection

00:01:47,159 --> 00:01:52,079
to those back-end apps so we're seeing

00:01:49,890 --> 00:01:54,600
here that that front-end app just had to

00:01:52,079 --> 00:01:57,149
make one request to this back-end to get

00:01:54,600 --> 00:01:59,659
this information it took a fairly short

00:01:57,149 --> 00:02:02,189
amount of time just a few milliseconds

00:01:59,659 --> 00:02:03,869
from the front-end apps perspective it

00:02:02,189 --> 00:02:08,190
just connecting to this internal domain

00:02:03,869 --> 00:02:11,610
and it's resolving to this funny 127 IP

00:02:08,190 --> 00:02:13,650
address locally but that back-end app is

00:02:11,610 --> 00:02:15,870
also reporting its own

00:02:13,650 --> 00:02:20,040
instance IP address which is different

00:02:15,870 --> 00:02:22,530
from that resolved IP address so if we

00:02:20,040 --> 00:02:26,160
reload this page we're gonna get a

00:02:22,530 --> 00:02:27,660
different staff member displayed again

00:02:26,160 --> 00:02:30,629
just want to request with a short amount

00:02:27,660 --> 00:02:32,459
of time from the front and apps

00:02:30,629 --> 00:02:33,840
perspective it's connecting to that same

00:02:32,459 --> 00:02:36,480
domain name and it's even getting that

00:02:33,840 --> 00:02:39,660
same ip address resolved which is

00:02:36,480 --> 00:02:40,830
proxying through that sidecar envoy but

00:02:39,660 --> 00:02:45,660
then it's hitting this different

00:02:40,830 --> 00:02:51,780
back-end app address so do this a few

00:02:45,660 --> 00:02:54,590
more times see if we can get our third

00:02:51,780 --> 00:02:56,610
one to come up here

00:02:54,590 --> 00:03:01,950
Abbie you were just here I don't know

00:02:56,610 --> 00:03:05,519
what's going on so this is totally

00:03:01,950 --> 00:03:08,430
random there we go there's a via all

00:03:05,519 --> 00:03:10,200
right all right well let's make this a

00:03:08,430 --> 00:03:12,750
little more interesting we're gonna

00:03:10,200 --> 00:03:14,610
change things up and let's say chips

00:03:12,750 --> 00:03:16,280
having a little bit of trouble and he's

00:03:14,610 --> 00:03:19,560
he's not listening too well today so

00:03:16,280 --> 00:03:21,000
we'll restart his app so it'll come back

00:03:19,560 --> 00:03:23,780
up but it's listening on the wrong port

00:03:21,000 --> 00:03:28,170
so it's not actually accepting traffic

00:03:23,780 --> 00:03:32,329
so if we switch back over to the info

00:03:28,170 --> 00:03:32,329
page will reload a few times

00:03:35,450 --> 00:03:40,160
again this is random so

00:03:37,380 --> 00:03:40,160
non-deterministic

00:03:46,810 --> 00:03:50,230
yeah well tips not coming up anymore we

00:03:49,090 --> 00:03:56,680
were looking for something a little more

00:03:50,230 --> 00:03:58,959
interesting oh there we go

00:03:56,680 --> 00:04:01,390
alright so here's what we were looking

00:03:58,959 --> 00:04:03,640
for we had one of these reloads where

00:04:01,390 --> 00:04:05,530
the front end app had to try a couple of

00:04:03,640 --> 00:04:07,530
times before it got a successful

00:04:05,530 --> 00:04:10,660
response so it took a little bit longer

00:04:07,530 --> 00:04:12,340
but it still succeeded and all that

00:04:10,660 --> 00:04:14,080
front end app had to do is retry a few

00:04:12,340 --> 00:04:17,700
times and we'll be eventually building

00:04:14,080 --> 00:04:20,470
that even into the service mesh behavior

00:04:17,700 --> 00:04:24,280
okay so we'll reset chip to be a good

00:04:20,470 --> 00:04:26,320
listener again all right so that is

00:04:24,280 --> 00:04:29,890
service mesh mediated load balancing

00:04:26,320 --> 00:04:32,890
inside the platform the other thing I'd

00:04:29,890 --> 00:04:34,810
like to show you is weighted routing so

00:04:32,890 --> 00:04:36,370
coming back to this page I think we can

00:04:34,810 --> 00:04:38,020
all agree it's really the pinnacle of

00:04:36,370 --> 00:04:40,390
web design I don't know what we would

00:04:38,020 --> 00:04:42,460
really want to change about it except

00:04:40,390 --> 00:04:45,639
it's not themed for some it just has

00:04:42,460 --> 00:04:49,300
this plain background so if we go back

00:04:45,639 --> 00:04:51,540
to our list of apps we see we have this

00:04:49,300 --> 00:04:54,130
second version of the info app running

00:04:51,540 --> 00:04:58,840
that's going to have some more summit

00:04:54,130 --> 00:05:00,820
appropriate theming to it so we want to

00:04:58,840 --> 00:05:01,990
switch over to this version of the app

00:05:00,820 --> 00:05:05,080
gradually just to make sure that

00:05:01,990 --> 00:05:07,720
everything is working ok with it and we

00:05:05,080 --> 00:05:10,570
can do that even with just one app

00:05:07,720 --> 00:05:14,410
instance a piece in a gradual way via

00:05:10,570 --> 00:05:16,890
weighted routing so I'm going to set

00:05:14,410 --> 00:05:20,440
some relative weights on the routes

00:05:16,890 --> 00:05:21,700
between these two apps so that about 80%

00:05:20,440 --> 00:05:24,330
of the traffic goes to the original

00:05:21,700 --> 00:05:27,220
version and 20% goes to the new version

00:05:24,330 --> 00:05:29,590
so nowadays there's there aren't really

00:05:27,220 --> 00:05:31,120
stable CLI commands to do this so we're

00:05:29,590 --> 00:05:32,860
just doing this via the API and some

00:05:31,120 --> 00:05:34,060
helper scripts but we can see here

00:05:32,860 --> 00:05:37,539
there's a weight of 80 and a weight of

00:05:34,060 --> 00:05:39,370
20 on these two different apps so if we

00:05:37,539 --> 00:05:43,120
switch back to this let's reload it a

00:05:39,370 --> 00:05:45,280
few times oh there we go there's our new

00:05:43,120 --> 00:05:47,470
theme with that summit background with

00:05:45,280 --> 00:05:49,090
The Hague and then we change the text to

00:05:47,470 --> 00:05:52,030
white so that it's a little more legible

00:05:49,090 --> 00:05:53,950
against the darker background but if we

00:05:52,030 --> 00:05:55,180
reload a few times we should see that

00:05:53,950 --> 00:05:57,960
we're mostly going to get that light

00:05:55,180 --> 00:05:57,960
blue background app

00:06:03,810 --> 00:06:09,220
alright that's looking great so let's

00:06:06,910 --> 00:06:10,540
send most of the traffic to that new

00:06:09,220 --> 00:06:17,020
version of the app and just keep a few

00:06:10,540 --> 00:06:18,340
requests going to the old one so we'll

00:06:17,020 --> 00:06:21,550
reload a few more times it should

00:06:18,340 --> 00:06:23,910
eventually converge to the new waiting

00:06:21,550 --> 00:06:23,910
rules

00:06:32,439 --> 00:06:38,819
okay so now we're mostly getting that

00:06:34,300 --> 00:06:41,110
nice blue background for the requests

00:06:38,819 --> 00:06:43,989
all right and so this weighted routing

00:06:41,110 --> 00:06:47,469
is very flexible it accommodates these

00:06:43,989 --> 00:06:48,639
granular weighting units in that all

00:06:47,469 --> 00:06:50,739
have to add up to hundred so you have

00:06:48,639 --> 00:06:53,800
that amount of granularity in the API to

00:06:50,739 --> 00:06:56,139
just routing to your apps so that's

00:06:53,800 --> 00:06:57,580
weighted routing and we'll be looking

00:06:56,139 --> 00:06:59,169
forward to adding more and more of these

00:06:57,580 --> 00:07:02,489
service mesh features into the platform

00:06:59,169 --> 00:07:02,489
as all of this matures

00:07:03,420 --> 00:07:08,989

YouTube URL: https://www.youtube.com/watch?v=ti-zy5qI-fk


