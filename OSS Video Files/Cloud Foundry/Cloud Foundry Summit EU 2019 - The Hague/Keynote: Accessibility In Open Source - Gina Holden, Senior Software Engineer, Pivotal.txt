Title: Keynote: Accessibility In Open Source - Gina Holden, Senior Software Engineer, Pivotal
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	Keynote: Accessibility In Open Source - Gina Holden, Senior Software Engineer, Pivotal  

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,030 --> 00:00:06,480
hello so today we're talking about

00:00:03,620 --> 00:00:07,200
accessibility and inclusivity and open

00:00:06,480 --> 00:00:10,710
source code

00:00:07,200 --> 00:00:11,730
I'm Gina Holden so what do we mean about

00:00:10,710 --> 00:00:14,580
accessibility

00:00:11,730 --> 00:00:17,190
what is inclusivity how does it apply to

00:00:14,580 --> 00:00:19,439
software I'm not going to give you a

00:00:17,190 --> 00:00:23,430
definition instead let's start with a

00:00:19,439 --> 00:00:25,890
quick design prompt imagine you're asked

00:00:23,430 --> 00:00:30,990
to design a wheelchair ramp for a

00:00:25,890 --> 00:00:33,750
building entrance take a second what

00:00:30,990 --> 00:00:36,210
might you be thinking of what if we

00:00:33,750 --> 00:00:38,879
changed the prompt design a better way

00:00:36,210 --> 00:00:42,210
for both wheeled and walking people to

00:00:38,879 --> 00:00:46,770
enter building does your design change

00:00:42,210 --> 00:00:49,289
at all possibly you were thinking about

00:00:46,770 --> 00:00:52,949
something resembling the photo on the

00:00:49,289 --> 00:00:55,070
left this is technically a ramp that

00:00:52,949 --> 00:00:59,390
meets the requirements of the prompt a

00:00:55,070 --> 00:01:02,489
wheelchair can probably go up this ramp

00:00:59,390 --> 00:01:04,350
but it's a little dodgy right like it's

00:01:02,489 --> 00:01:08,070
kind of hidden in the back of a building

00:01:04,350 --> 00:01:09,960
it doesn't look quite safe we can do

00:01:08,070 --> 00:01:12,780
better right what about this design on

00:01:09,960 --> 00:01:16,590
the right this is something that was

00:01:12,780 --> 00:01:19,140
designed with inclusivity first we want

00:01:16,590 --> 00:01:22,040
a better way for everyone to walk up a

00:01:19,140 --> 00:01:25,860
set of stairs now even as an able-bodied

00:01:22,040 --> 00:01:27,840
human I like easy risers they're easier

00:01:25,860 --> 00:01:29,460
to walk up I'm not losing my breath

00:01:27,840 --> 00:01:32,670
while I'm walking and probably on a

00:01:29,460 --> 00:01:35,189
phone call it's also nice for if you

00:01:32,670 --> 00:01:37,860
have a stroller and it's prettier to

00:01:35,189 --> 00:01:40,619
look at yeah more stable it looks like

00:01:37,860 --> 00:01:42,479
it was designed to be that way this is

00:01:40,619 --> 00:01:44,970
the difference between accessibility and

00:01:42,479 --> 00:01:47,040
inclusivity we're not just meeting the

00:01:44,970 --> 00:01:51,090
minimum requirements we're designing

00:01:47,040 --> 00:01:55,950
with the whole community first from the

00:01:51,090 --> 00:01:57,930
start so the mindset shifts a little bit

00:01:55,950 --> 00:02:00,829
when we think about inclusivity first

00:01:57,930 --> 00:02:05,579
and as a result we get a better product

00:02:00,829 --> 00:02:07,670
now great we're all sold on inclusive

00:02:05,579 --> 00:02:11,849
design we're going to take this concept

00:02:07,670 --> 00:02:13,830
with us into our daily interactions but

00:02:11,849 --> 00:02:15,300
what about our 9 to 5 life

00:02:13,830 --> 00:02:19,200
what do we how do we apply this to

00:02:15,300 --> 00:02:21,270
software everyday normally when we hear

00:02:19,200 --> 00:02:23,100
accessibility and software we're

00:02:21,270 --> 00:02:26,580
thinking of things like this you know

00:02:23,100 --> 00:02:30,810
color contrast font size this stuff is

00:02:26,580 --> 00:02:36,300
great it does improve your front-end

00:02:30,810 --> 00:02:39,900
design this it it makes it more

00:02:36,300 --> 00:02:43,370
accessible to an end user now most of us

00:02:39,900 --> 00:02:47,100
are not doing front-end design every day

00:02:43,370 --> 00:02:49,770
how do we bring these concepts to

00:02:47,100 --> 00:02:53,570
inclusive products for everything that

00:02:49,770 --> 00:02:55,830
we're doing back-end code servers I

00:02:53,570 --> 00:02:59,070
think that we should be focusing on

00:02:55,830 --> 00:03:01,440
inclusivity to our developers think of

00:02:59,070 --> 00:03:02,880
your developers who are going to be

00:03:01,440 --> 00:03:06,060
contributing to your open source

00:03:02,880 --> 00:03:08,820
libraries as your users right how do we

00:03:06,060 --> 00:03:10,740
design a world where they can easily

00:03:08,820 --> 00:03:12,540
contribute they can easily get an ax

00:03:10,740 --> 00:03:15,390
codebase understand how it works and

00:03:12,540 --> 00:03:17,520
quickly make a bug fix or submit a PR in

00:03:15,390 --> 00:03:22,110
a world that they didn't have to spend

00:03:17,520 --> 00:03:24,780
years understanding how it works what

00:03:22,110 --> 00:03:26,910
can we do one thing improve your test

00:03:24,780 --> 00:03:29,310
coverage as soon as you write a doc

00:03:26,910 --> 00:03:31,350
right it's out of date so tests as

00:03:29,310 --> 00:03:34,230
living documentation to how your code

00:03:31,350 --> 00:03:36,000
works as a developer I often go into

00:03:34,230 --> 00:03:38,280
code bases and look at their tests to

00:03:36,000 --> 00:03:40,140
understand how those developers actually

00:03:38,280 --> 00:03:41,610
wanted this product to work especially

00:03:40,140 --> 00:03:43,260
when I'm looking for something a little

00:03:41,610 --> 00:03:45,660
more low-level than what the docs are

00:03:43,260 --> 00:03:47,720
describing test coverage is a great way

00:03:45,660 --> 00:03:50,640
to show how you wanted your code to work

00:03:47,720 --> 00:03:54,660
code lenders when we're using really

00:03:50,640 --> 00:03:56,160
popular languages C++ Java go there's

00:03:54,660 --> 00:03:58,530
certain standards that the community

00:03:56,160 --> 00:03:59,970
agrees bahan use those standards

00:03:58,530 --> 00:04:02,010
it makes your developers feel more

00:03:59,970 --> 00:04:04,110
comfortable getting in a code base so

00:04:02,010 --> 00:04:07,280
even if it's the same language so that

00:04:04,110 --> 00:04:07,280
doesn't look like a foreign world

00:04:07,400 --> 00:04:14,959
additionally clean code these things are

00:04:11,160 --> 00:04:17,970
not this is the craft of software right

00:04:14,959 --> 00:04:20,130
writing code that works and accomplishes

00:04:17,970 --> 00:04:21,660
your goal that's the easy part right we

00:04:20,130 --> 00:04:23,330
did that in college submit something

00:04:21,660 --> 00:04:24,960
that works throw it over the fence

00:04:23,330 --> 00:04:29,370
writing clean

00:04:24,960 --> 00:04:32,310
code is your craft make functions that

00:04:29,370 --> 00:04:34,860
do one thing have one purpose single

00:04:32,310 --> 00:04:37,729
responsibility principle use variable

00:04:34,860 --> 00:04:41,639
names that have meaning

00:04:37,729 --> 00:04:44,789
don't use comments as handicaps rewrite

00:04:41,639 --> 00:04:48,800
your code all of this stuff applies for

00:04:44,789 --> 00:04:53,039
inclusivity and your open source product

00:04:48,800 --> 00:04:55,500
now this is an example that you'll see

00:04:53,039 --> 00:04:57,630
in the deck I'll come back to it if we

00:04:55,500 --> 00:05:00,120
have time now some of you are thinking

00:04:57,630 --> 00:05:04,800
why do I care why should I write

00:05:00,120 --> 00:05:08,539
inclusive code more inclusive code

00:05:04,800 --> 00:05:11,400
improves your product I'll show you how

00:05:08,539 --> 00:05:14,610
quantitatively what I mean is you're

00:05:11,400 --> 00:05:16,949
going to have better support for your

00:05:14,610 --> 00:05:19,139
library you'll be able to close issues

00:05:16,949 --> 00:05:22,560
quicker you'll have more contributors

00:05:19,139 --> 00:05:24,360
and more stars contributing rolling up

00:05:22,560 --> 00:05:27,840
to better quality of your product

00:05:24,360 --> 00:05:30,240
overall in case you don't believe me I

00:05:27,840 --> 00:05:32,940
did a quick analysis of some popular

00:05:30,240 --> 00:05:36,840
JavaScript libraries out there on the

00:05:32,940 --> 00:05:39,030
Internet so the first thing that I

00:05:36,840 --> 00:05:40,650
analyzed is that there is a positive or

00:05:39,030 --> 00:05:42,930
a negative correlation between the

00:05:40,650 --> 00:05:45,270
number of Linear's that you have versus

00:05:42,930 --> 00:05:48,229
the number of stars cleaner code makes

00:05:45,270 --> 00:05:49,860
your your repository more popular

00:05:48,229 --> 00:05:53,430
additionally you'll have more

00:05:49,860 --> 00:05:55,409
contributors you also have a positive

00:05:53,430 --> 00:05:58,800
correlation between test coverage and

00:05:55,409 --> 00:06:00,389
number of stars this is a harder one for

00:05:58,800 --> 00:06:02,909
me to analyze because of the difference

00:06:00,389 --> 00:06:05,940
in number of test runners and tools but

00:06:02,909 --> 00:06:11,159
with a relatively small data set there's

00:06:05,940 --> 00:06:13,979
a strong correlation here now here's

00:06:11,159 --> 00:06:18,000
some resources that you can see about a

00:06:13,979 --> 00:06:20,460
how I did my code analysis and B as a

00:06:18,000 --> 00:06:23,099
resource on the traditional front end

00:06:20,460 --> 00:06:27,599
accessibility resources as far as how to

00:06:23,099 --> 00:06:30,599
make accessible web markup quick example

00:06:27,599 --> 00:06:34,770
since we have time if you are a

00:06:30,599 --> 00:06:37,289
developer and you want to work in a code

00:06:34,770 --> 00:06:38,400
base and submit your first maybe it's

00:06:37,289 --> 00:06:40,530
your first open source

00:06:38,400 --> 00:06:42,389
pyaare what is a code base that you

00:06:40,530 --> 00:06:44,340
would rather work in I know you won't be

00:06:42,389 --> 00:06:46,169
able to read this exactly but it's not

00:06:44,340 --> 00:06:48,330
super important just look at the overall

00:06:46,169 --> 00:06:50,250
structure here um

00:06:48,330 --> 00:06:52,110
the class that you have this is a Java

00:06:50,250 --> 00:06:55,650
class that I wrote to implement Bolling

00:06:52,110 --> 00:06:58,440
you have some methods that are named in

00:06:55,650 --> 00:07:00,840
English it has meaning outside of a

00:06:58,440 --> 00:07:04,199
technical application you have functions

00:07:00,840 --> 00:07:06,630
like should I stop scoring now or what

00:07:04,199 --> 00:07:10,289
is a frame score you have variables like

00:07:06,630 --> 00:07:12,000
spares strikes ball roll this has

00:07:10,289 --> 00:07:14,370
meaning to a developer that just pops

00:07:12,000 --> 00:07:16,860
into a code base additionally you have

00:07:14,370 --> 00:07:18,810
some nice unit tests this tells you in

00:07:16,860 --> 00:07:21,449
English the logic that you expect your

00:07:18,810 --> 00:07:23,940
code to implement so all gutter balls

00:07:21,449 --> 00:07:26,010
then score is zero right I can look at

00:07:23,940 --> 00:07:28,400
that as a new developer and just

00:07:26,010 --> 00:07:30,930
understand what you met your code to do

00:07:28,400 --> 00:07:33,740
alternatively imagine that you're trying

00:07:30,930 --> 00:07:35,940
to submit a PR to a code base like this

00:07:33,740 --> 00:07:37,229
how do you understand what this code is

00:07:35,940 --> 00:07:39,120
supposed to do how do you know where

00:07:37,229 --> 00:07:41,160
you're going to make a change you're

00:07:39,120 --> 00:07:43,199
gonna like write down the variables walk

00:07:41,160 --> 00:07:44,669
through it with an example spend 30

00:07:43,199 --> 00:07:48,389
minutes trying to figure out how this

00:07:44,669 --> 00:07:52,740
code base works let's aim for this in

00:07:48,389 --> 00:07:54,960
the future clean code these are things

00:07:52,740 --> 00:07:57,090
that you can do quickly and right away

00:07:54,960 --> 00:08:00,780
it will improve the quality of your

00:07:57,090 --> 00:08:01,470
product that's the end of the

00:08:00,780 --> 00:08:08,159
presentation

00:08:01,470 --> 00:08:08,159

YouTube URL: https://www.youtube.com/watch?v=hw4FrbPq_qQ


