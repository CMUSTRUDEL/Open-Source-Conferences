Title: Cloud Foundry for Everyone! - Mirna Alaisami & Matthias Haeussler, Novatec Consulting GmbH
Publication date: 2019-09-13
Playlist: Cloud Foundry Summit EU 2019 - The Hague
Description: 
	Cloud Foundry for Everyone! - Mirna Alaisami & Matthias Haeussler, Novatec Consulting GmbH 

This talk will give an overview of the various possibilities to easily access and get in touch with the Cloud Foundry platform. Cloud Foundry comes in various flavors, there is a big range of commercial hosted offerings, private deployment options and various development environment alternatives. This presentation is intended for users who would like to get their first hands-on experience or for others who might want to evaluate an alternative deployment option. The analysis will compare the public offerings based on the metrics of price, availability, options and available services as well as the self-deployed options in terms of simplicity in setup and handling and requirements. It is supposed to cover the breadth of the Cloud Foundry offerings and give an easy entry path to the technology. Kubernetes-based offerings like CFCR, containerized CF & Project Eirini will be covered as well.

For more info: https://www.cloudfoundry.org/
Captions: 
	00:00:00,089 --> 00:00:05,339
as you can see that the topic of this

00:00:02,100 --> 00:00:09,090
talk is very generic it says Cloud

00:00:05,339 --> 00:00:10,980
Foundry for everyone and the idea what

00:00:09,090 --> 00:00:13,590
we had in mind when we initially did

00:00:10,980 --> 00:00:16,320
this talk we first time presented this

00:00:13,590 --> 00:00:20,750
at the CF summit in in Philly hands on

00:00:16,320 --> 00:00:24,240
some meetups is to basically show how

00:00:20,750 --> 00:00:26,939
can Cloud Foundry be easily accessed by

00:00:24,240 --> 00:00:28,680
people that have never used it before so

00:00:26,939 --> 00:00:30,539
what are the easiest ways to get to

00:00:28,680 --> 00:00:32,940
Cloud Foundry environments to play

00:00:30,539 --> 00:00:35,610
around with it and basically get the

00:00:32,940 --> 00:00:39,410
hands dirty to and see what what it can

00:00:35,610 --> 00:00:39,410
do for you so

00:00:49,140 --> 00:00:56,790
okay that's us this is my colleague Mira

00:00:53,970 --> 00:00:59,630
i'm mateus we both work for a company

00:00:56,790 --> 00:01:03,420
called nova tech in stuttgart in germany

00:00:59,630 --> 00:01:06,950
we do consulting and in a technology

00:01:03,420 --> 00:01:11,820
area for for in a cloud native space and

00:01:06,950 --> 00:01:16,620
I think with that I'm gonna okay now it

00:01:11,820 --> 00:01:18,720
works so this will also be maybe a bit

00:01:16,620 --> 00:01:20,670
of a recap of the things of some of the

00:01:18,720 --> 00:01:22,710
things that we had already yesterday as

00:01:20,670 --> 00:01:25,670
you may know this is like the intro

00:01:22,710 --> 00:01:28,500
getting started track so there is no

00:01:25,670 --> 00:01:30,150
previous experience whatever required we

00:01:28,500 --> 00:01:32,430
have won't have people here to learn and

00:01:30,150 --> 00:01:34,470
and get familiar with the technology so

00:01:32,430 --> 00:01:36,479
this is the initial setting so you see

00:01:34,470 --> 00:01:39,119
that confused person and like this is

00:01:36,479 --> 00:01:42,840
Cloud Foundry so what is this cloud

00:01:39,119 --> 00:01:46,320
foundry and and what can I do with it in

00:01:42,840 --> 00:01:48,180
order to do that I'm teaching at two

00:01:46,320 --> 00:01:51,899
universities in the area of Stuttgart

00:01:48,180 --> 00:01:54,090
and I had two students working with me

00:01:51,899 --> 00:01:56,340
that that I knew that had no prior

00:01:54,090 --> 00:01:57,930
experience with cloud foundry at all I

00:01:56,340 --> 00:01:59,520
mean they know about like micro-service

00:01:57,930 --> 00:02:02,370
development a bit about containers but

00:01:59,520 --> 00:02:04,770
not much so I gave them basically the

00:02:02,370 --> 00:02:06,060
tasks to say okay try to figure out what

00:02:04,770 --> 00:02:08,760
is Cloud Foundry give me like five

00:02:06,060 --> 00:02:11,160
statements or whatsoever and and also

00:02:08,760 --> 00:02:12,450
figure out how can you access it I mean

00:02:11,160 --> 00:02:14,209
you don't get it

00:02:12,450 --> 00:02:16,920
you're not gonna get any money or like

00:02:14,209 --> 00:02:20,100
something you can spend so how can you

00:02:16,920 --> 00:02:20,310
get there for free and get something

00:02:20,100 --> 00:02:23,370
done

00:02:20,310 --> 00:02:27,060
without paying for it so they came back

00:02:23,370 --> 00:02:29,489
with a couple of things very if they

00:02:27,060 --> 00:02:31,230
found out about the platform really

00:02:29,489 --> 00:02:34,470
quickly so it's an open plan open source

00:02:31,230 --> 00:02:36,420
past platform it's easy to use supports

00:02:34,470 --> 00:02:38,430
developers supports many languages and

00:02:36,420 --> 00:02:41,280
so on so that was already a pretty good

00:02:38,430 --> 00:02:43,200
a pretty good overview and but what I

00:02:41,280 --> 00:02:45,150
really impressed me most and that only

00:02:43,200 --> 00:02:47,310
basically took them a week or so when

00:02:45,150 --> 00:02:49,230
they said okay we were already like able

00:02:47,310 --> 00:02:51,600
to push our first application to a

00:02:49,230 --> 00:02:53,489
parallel Web Services this is something

00:02:51,600 --> 00:02:55,590
I didn't expect and I didn't instruct

00:02:53,489 --> 00:02:57,480
him how to do but they figured it out by

00:02:55,590 --> 00:02:58,230
themselves and it showed me it's it's

00:02:57,480 --> 00:03:01,349
easy enough

00:02:58,230 --> 00:03:02,950
so people can actually do it so we

00:03:01,349 --> 00:03:05,800
basically want to walk the youth

00:03:02,950 --> 00:03:07,870
a little bit of that story and by the

00:03:05,800 --> 00:03:11,140
time we finish this talk I hope you will

00:03:07,870 --> 00:03:13,300
all get an idea of basically what is

00:03:11,140 --> 00:03:14,739
Cloud Foundry how does what are the

00:03:13,300 --> 00:03:17,019
basics of the technology how does it

00:03:14,739 --> 00:03:22,300
work how can you interact with it

00:03:17,019 --> 00:03:24,250
through the CLI how what kind of options

00:03:22,300 --> 00:03:26,650
are there to use Cloud Foundry and

00:03:24,250 --> 00:03:28,000
basically maybe if time allows what can

00:03:26,650 --> 00:03:29,890
you expect from that in the future I

00:03:28,000 --> 00:03:31,330
mean that's probably you heard more and

00:03:29,890 --> 00:03:33,160
more on that and the keynote stages

00:03:31,330 --> 00:03:37,180
today so maybe you're gonna go over that

00:03:33,160 --> 00:03:44,860
more quickly okay so with that I'm gonna

00:03:37,180 --> 00:03:50,110
pass on jamuna so some basic information

00:03:44,860 --> 00:03:52,660
about Cloud Foundry a way to get started

00:03:50,110 --> 00:03:54,519
with Cloud Foundry to get some or to

00:03:52,660 --> 00:03:57,250
have an overview about the fundamentals

00:03:54,519 --> 00:04:00,849
about the the available tutorials or

00:03:57,250 --> 00:04:03,549
trainings is to reach the club from the

00:04:00,849 --> 00:04:06,340
homepage where you can find a get

00:04:03,549 --> 00:04:08,260
started link and then you either say I'm

00:04:06,340 --> 00:04:10,150
totally new to Cloud Foundry I won't

00:04:08,260 --> 00:04:12,790
understand the fundamentals first I

00:04:10,150 --> 00:04:15,069
wanna have a look about the theoretical

00:04:12,790 --> 00:04:17,769
knowledge behind it and then you go with

00:04:15,069 --> 00:04:19,630
the new to cloud foundry link or you say

00:04:17,769 --> 00:04:22,870
okay I have all the needed information

00:04:19,630 --> 00:04:25,120
to get started now I understand all the

00:04:22,870 --> 00:04:27,280
concepts behind it and I just want to

00:04:25,120 --> 00:04:29,350
give it a try and the blog my first

00:04:27,280 --> 00:04:31,389
application to Cloud Foundry and then

00:04:29,350 --> 00:04:37,570
you go with the I'm ready to go I'm

00:04:31,389 --> 00:04:40,419
ready to try link a very simplified

00:04:37,570 --> 00:04:43,000
overview about Cloud Foundry seeing it

00:04:40,419 --> 00:04:45,520
from a high-level overview seeing it as

00:04:43,000 --> 00:04:48,789
a black box how to communicate with it

00:04:45,520 --> 00:04:51,639
and what to get back from it we have

00:04:48,789 --> 00:04:53,770
mainly two groups of users interacting

00:04:51,639 --> 00:04:57,700
with Cloud Foundry the developers and

00:04:53,770 --> 00:04:59,950
the consumers the developer puts an

00:04:57,700 --> 00:05:02,490
application to Cloud Foundry Cloud

00:04:59,950 --> 00:05:05,440
Foundry does something inside and

00:05:02,490 --> 00:05:07,750
returns a or L back to the consumer who

00:05:05,440 --> 00:05:10,870
can then just access the application and

00:05:07,750 --> 00:05:13,590
consume the application logic looks very

00:05:10,870 --> 00:05:13,590
easy doesn't it

00:05:13,780 --> 00:05:20,240
now if we want to go a little bit more

00:05:16,700 --> 00:05:22,880
into the details if we want to have a

00:05:20,240 --> 00:05:27,170
look inside that black box how does it

00:05:22,880 --> 00:05:28,610
really work and before going more into

00:05:27,170 --> 00:05:30,140
the details an important thing to

00:05:28,610 --> 00:05:34,250
mention here is that Cloud Foundry

00:05:30,140 --> 00:05:36,620
internally relies heavily on a model

00:05:34,250 --> 00:05:39,050
which is oriented on the 12th factor ups

00:05:36,620 --> 00:05:41,780
guidelines and splits the components

00:05:39,050 --> 00:05:46,730
into two main categories the

00:05:41,780 --> 00:05:49,430
applications and these services the

00:05:46,730 --> 00:05:51,710
applications is where the developer push

00:05:49,430 --> 00:05:54,320
an application brings a piece of code

00:05:51,710 --> 00:06:00,500
into Cloud Foundry using the magical CF

00:05:54,320 --> 00:06:03,500
push command then the application is

00:06:00,500 --> 00:06:07,400
pushed to the platform internally and a

00:06:03,500 --> 00:06:09,470
so-called droplet is created the droplet

00:06:07,400 --> 00:06:12,920
is the application along with the belt

00:06:09,470 --> 00:06:15,110
back so the application code along with

00:06:12,920 --> 00:06:18,580
all the runtime dependencies which are

00:06:15,110 --> 00:06:18,580
needed in order to run that application

00:06:19,180 --> 00:06:25,700
and if the application needs to connect

00:06:23,060 --> 00:06:28,940
to a backing service like a messaging

00:06:25,700 --> 00:06:31,610
service database service and so on we

00:06:28,940 --> 00:06:34,580
can create a service instance and bind

00:06:31,610 --> 00:06:36,440
it to our application using DCF create

00:06:34,580 --> 00:06:38,600
service and bind service commands and

00:06:36,440 --> 00:06:40,850
the developer does not have to worry

00:06:38,600 --> 00:06:43,700
about any configuration of connection

00:06:40,850 --> 00:06:50,600
settings here and here's the services

00:06:43,700 --> 00:06:54,200
about a part of Cloud Foundry and at the

00:06:50,600 --> 00:06:56,930
end the platform will return a route to

00:06:54,200 --> 00:07:00,500
the developer or consumer who can then

00:06:56,930 --> 00:07:02,510
exit the application and this is like

00:07:00,500 --> 00:07:04,490
the fundamental understanding which

00:07:02,510 --> 00:07:07,570
everybody should have before getting

00:07:04,490 --> 00:07:07,570
started with Cloud Foundry

00:07:09,620 --> 00:07:15,629
there is a Cloud Foundry a command-line

00:07:12,150 --> 00:07:17,460
interface which is a generic API which

00:07:15,629 --> 00:07:20,759
can be used across the different cloud

00:07:17,460 --> 00:07:23,039
foundry providers so no matter where you

00:07:20,759 --> 00:07:25,319
run Cloud Foundry locally on your own

00:07:23,039 --> 00:07:28,710
machine using a public cloud foundry

00:07:25,319 --> 00:07:31,349
provider or using hosted options this

00:07:28,710 --> 00:07:33,900
cloud foundry CLI will always look the

00:07:31,349 --> 00:07:36,539
same and you have this basic set of

00:07:33,900 --> 00:07:39,240
commands that you can use this command

00:07:36,539 --> 00:07:40,979
in order to push your application BCF

00:07:39,240 --> 00:07:42,599
scale in order to decrease or increase

00:07:40,979 --> 00:07:45,180
the number of instances of your

00:07:42,599 --> 00:07:47,819
application they see of marketplace in

00:07:45,180 --> 00:07:50,250
order to list the service offerings in

00:07:47,819 --> 00:07:52,139
the provider and the CF create service

00:07:50,250 --> 00:07:54,599
and bind service commands in order to

00:07:52,139 --> 00:08:02,069
create service instance and attach it to

00:07:54,599 --> 00:08:03,810
your application ok thanks so stepping a

00:08:02,069 --> 00:08:05,819
bit away from there from the technical

00:08:03,810 --> 00:08:08,219
more to the human things you probably

00:08:05,819 --> 00:08:10,740
realized that in that two days now the

00:08:08,219 --> 00:08:15,389
cloud foundry ecosystem is surrounded by

00:08:10,740 --> 00:08:16,529
a pretty pretty strong community and I

00:08:15,389 --> 00:08:18,330
would just want to hide it a few

00:08:16,529 --> 00:08:20,759
community resources that might make

00:08:18,330 --> 00:08:23,069
sense for you if you intend to learn

00:08:20,759 --> 00:08:25,050
more and get and get started with with

00:08:23,069 --> 00:08:26,879
different things I mean within those two

00:08:25,050 --> 00:08:28,289
days we try to cover a lot on this track

00:08:26,879 --> 00:08:30,360
but we're not able to pretty much cover

00:08:28,289 --> 00:08:32,250
everything so of course there is a

00:08:30,360 --> 00:08:35,399
there's a slack channel where you can

00:08:32,250 --> 00:08:37,890
find help very very easily you can like

00:08:35,399 --> 00:08:39,690
start on the general channel and then

00:08:37,890 --> 00:08:41,630
people will guide you into either

00:08:39,690 --> 00:08:43,949
certain topics or help you directly

00:08:41,630 --> 00:08:47,010
there's an eater posit or emailing list

00:08:43,949 --> 00:08:49,589
as ever just mentioned there is this

00:08:47,010 --> 00:08:51,750
Ambassador Program which I am like a

00:08:49,589 --> 00:08:53,730
proud member of so basically these are

00:08:51,750 --> 00:08:55,470
people they are also listed on the web

00:08:53,730 --> 00:08:58,620
page impact in case you don't know who

00:08:55,470 --> 00:09:00,390
they are we are meant to help you so

00:08:58,620 --> 00:09:02,940
please feel free to reach out to us

00:09:00,390 --> 00:09:04,560
whenever you feel like and we're happy

00:09:02,940 --> 00:09:06,480
to give advice and then help you further

00:09:04,560 --> 00:09:07,829
of course there's there's there's

00:09:06,480 --> 00:09:09,990
Twitter and there's an active community

00:09:07,829 --> 00:09:12,449
there as well so you should be able to

00:09:09,990 --> 00:09:14,820
get in touch with somebody

00:09:12,449 --> 00:09:16,380
also if you browse the web page a little

00:09:14,820 --> 00:09:18,510
bit you will find a lot of community

00:09:16,380 --> 00:09:20,910
contributions that help you getting

00:09:18,510 --> 00:09:24,629
started there are many materials

00:09:20,910 --> 00:09:26,489
like guides courses whatsoever

00:09:24,629 --> 00:09:29,069
in particular I should say there is this

00:09:26,489 --> 00:09:31,379
Cloud Foundry for beginners zero to hero

00:09:29,069 --> 00:09:33,089
workshop which is for free

00:09:31,379 --> 00:09:35,279
so you can play through that workshop

00:09:33,089 --> 00:09:37,470
with pretty much every trial Cloud

00:09:35,279 --> 00:09:40,309
Foundry distribution which i think is a

00:09:37,470 --> 00:09:44,669
pretty good way to to get started

00:09:40,309 --> 00:09:45,569
also Steve Greenberg one of our really

00:09:44,669 --> 00:09:47,339
good

00:09:45,569 --> 00:09:49,589
ambassador on community members has set

00:09:47,339 --> 00:09:51,779
up this page try Cloud Foundry calm I

00:09:49,589 --> 00:09:54,329
might have an excursion to that later on

00:09:51,779 --> 00:09:55,949
if we have time in the end they will

00:09:54,329 --> 00:09:58,379
walk you through similar steps that

00:09:55,949 --> 00:10:00,479
we're gonna do on this demo basically

00:09:58,379 --> 00:10:02,220
pick a provider start doing the first

00:10:00,479 --> 00:10:06,649
commands interacting with the platform

00:10:02,220 --> 00:10:08,939
and and getting familiar with that so

00:10:06,649 --> 00:10:13,249
now we're gonna talk about the different

00:10:08,939 --> 00:10:15,539
options on Cloud Foundry so now you

00:10:13,249 --> 00:10:17,279
decided to get started with laferrari

00:10:15,539 --> 00:10:19,369
and you wanna wash your application to

00:10:17,279 --> 00:10:21,989
clock foundry which options do you have

00:10:19,369 --> 00:10:26,009
you can either have a cloud foundry

00:10:21,989 --> 00:10:28,139
locally in your machine using using a

00:10:26,009 --> 00:10:30,919
local installation of clock foundry or

00:10:28,139 --> 00:10:34,829
you can use the different public

00:10:30,919 --> 00:10:37,859
providers there or you can have a hosted

00:10:34,829 --> 00:10:40,769
option which is not probably the more

00:10:37,859 --> 00:10:43,350
suitable or the most suitable option to

00:10:40,769 --> 00:10:46,589
start with I spit hard to start with the

00:10:43,350 --> 00:10:50,629
local or public option and get familiar

00:10:46,589 --> 00:10:54,149
with using it and then just you can try

00:10:50,629 --> 00:10:56,569
the hosted options on larger data

00:10:54,149 --> 00:10:56,569
centers

00:10:59,950 --> 00:11:06,579
now starting with the local options

00:11:02,139 --> 00:11:08,829
which possibilities do you have the

00:11:06,579 --> 00:11:13,510
first option is the so-called busy F dev

00:11:08,829 --> 00:11:15,790
it's a free offering from butyl it's a

00:11:13,510 --> 00:11:18,910
single node a Cloud Foundry instance and

00:11:15,790 --> 00:11:20,920
it has a full functional scope from a

00:11:18,910 --> 00:11:23,110
developer perspective much more than

00:11:20,920 --> 00:11:26,860
from an operator perspective since it's

00:11:23,110 --> 00:11:30,250
just only one flower for denote it has a

00:11:26,860 --> 00:11:33,100
basic set of services database services

00:11:30,250 --> 00:11:37,000
messaging service services and cashing

00:11:33,100 --> 00:11:40,000
services and it's free all you need to

00:11:37,000 --> 00:11:41,860
do just to register in pivotal and have

00:11:40,000 --> 00:11:47,769
an account there in order to be able to

00:11:41,860 --> 00:11:52,000
use it the second option is this so

00:11:47,769 --> 00:11:55,029
called CF depth it's based on the open

00:11:52,000 --> 00:11:57,970
source version of Cloud Foundry it runs

00:11:55,029 --> 00:12:01,839
on Mac OS Windows 10 and recently also

00:11:57,970 --> 00:12:04,570
on Linux as far as we know it has only

00:12:01,839 --> 00:12:08,470
one available service the my secret

00:12:04,570 --> 00:12:10,480
service it's also free and no

00:12:08,470 --> 00:12:14,529
registration is needed all you need to

00:12:10,480 --> 00:12:19,170
do is just to get the or just to get it

00:12:14,529 --> 00:12:24,490
from the public at hub repository and

00:12:19,170 --> 00:12:27,490
the third option the CF local it's not

00:12:24,490 --> 00:12:30,100
really a real platform the runtime it

00:12:27,490 --> 00:12:32,290
runs the droplets in containers which

00:12:30,100 --> 00:12:35,079
makes it very suitable for local

00:12:32,290 --> 00:12:38,199
debugging and testing services so it may

00:12:35,079 --> 00:12:40,240
may not be the most suitable option for

00:12:38,199 --> 00:12:42,220
you to start with as a beginner with

00:12:40,240 --> 00:12:47,130
cloud foundry it's better to start with

00:12:42,220 --> 00:12:47,130
the PC active or CF t'v options first

00:12:51,190 --> 00:12:55,630
now moving to the public cloud foundry

00:12:53,200 --> 00:12:57,850
providers here is the list of certified

00:12:55,630 --> 00:13:02,320
providers according to the Cloud Foundry

00:12:57,850 --> 00:13:05,860
homepage and most of them offer a trail

00:13:02,320 --> 00:13:07,830
to start with but we are not going to

00:13:05,860 --> 00:13:10,990
highlight all of them in detail today

00:13:07,830 --> 00:13:16,420
since we were not able also to try all

00:13:10,990 --> 00:13:18,610
of them when we prepared and yeah we

00:13:16,420 --> 00:13:19,030
prepared this talk a couple of months

00:13:18,610 --> 00:13:21,880
ago

00:13:19,030 --> 00:13:24,070
for example artists were under changes

00:13:21,880 --> 00:13:27,010
of their trial offering and we were not

00:13:24,070 --> 00:13:28,960
able to try it a cloud that cough offers

00:13:27,010 --> 00:13:33,880
that only for a governmental and

00:13:28,960 --> 00:13:37,830
educational institutions in the US so

00:13:33,880 --> 00:13:37,830
we'll just talk about some of them today

00:13:39,840 --> 00:13:46,840
starting with P Vitaly Web Services so

00:13:44,230 --> 00:13:49,200
as you've heard from Matthias the

00:13:46,840 --> 00:13:54,880
experiment with the two students as

00:13:49,200 --> 00:13:58,300
beginners as a feedback from them the

00:13:54,880 --> 00:14:00,610
first public a Cloud Foundry provider

00:13:58,300 --> 00:14:03,250
that they discovered was built on web

00:14:00,610 --> 00:14:08,080
services they found it really very easy

00:14:03,250 --> 00:14:10,330
and straightforward to use and it

00:14:08,080 --> 00:14:13,860
focused on micro services development so

00:14:10,330 --> 00:14:16,750
it has a lot of options for database

00:14:13,860 --> 00:14:20,500
messaging cashing in streaming services

00:14:16,750 --> 00:14:23,050
and it has an explicit focus also on

00:14:20,500 --> 00:14:26,470
spring boot so it has a lot of services

00:14:23,050 --> 00:14:28,840
like the circuit breaker the config

00:14:26,470 --> 00:14:31,620
service and the service registry

00:14:28,840 --> 00:14:31,620
services

00:14:34,100 --> 00:14:41,450
moving to IBM cloud IBM cloud has mainly

00:14:39,140 --> 00:14:43,700
two different options the global Cloud

00:14:41,450 --> 00:14:46,700
Foundry platform or previously known as

00:14:43,700 --> 00:14:49,280
bluemix or the Cloud Foundry Enterprise

00:14:46,700 --> 00:14:52,250
Edition which which gives you a

00:14:49,280 --> 00:14:54,350
dedicated cluster with different Cloud

00:14:52,250 --> 00:14:58,670
Foundry nodes which may not be the

00:14:54,350 --> 00:15:00,680
suitable option to start with and it has

00:14:58,670 --> 00:15:02,270
the biggest service of her Inc focusing

00:15:00,680 --> 00:15:05,870
on artificial intelligence machine

00:15:02,270 --> 00:15:08,780
learning and IOT and the feedback that

00:15:05,870 --> 00:15:12,680
we get from the students here was that

00:15:08,780 --> 00:15:15,980
it was not as easy or as intuitive as

00:15:12,680 --> 00:15:19,430
other providers especially that it

00:15:15,980 --> 00:15:22,970
offers different CL eyes to use the CF

00:15:19,430 --> 00:15:25,550
CLI the IBM CLI and so on which was a

00:15:22,970 --> 00:15:28,220
little bit confusing but at the end they

00:15:25,550 --> 00:15:32,570
could be able to run their application

00:15:28,220 --> 00:15:34,430
and get everything running and maybe the

00:15:32,570 --> 00:15:37,370
reason for that is that Cloud Foundry is

00:15:34,430 --> 00:15:43,010
only one part of a big cloud offering

00:15:37,370 --> 00:15:45,200
that IBM cloud has alright some take off

00:15:43,010 --> 00:15:47,270
for you maybe I go one step back and

00:15:45,200 --> 00:15:48,500
maybe we have to add a third option here

00:15:47,270 --> 00:15:50,330
you saw it this morning in the keynote

00:15:48,500 --> 00:15:53,120
so you can also run Cloud Foundry know

00:15:50,330 --> 00:15:55,850
an open shift so we're not up to date

00:15:53,120 --> 00:15:58,430
with the slides so so fast but it's

00:15:55,850 --> 00:16:00,290
probably important to say that IBM does

00:15:58,430 --> 00:16:01,880
a lot here and and tries different

00:16:00,290 --> 00:16:04,010
things and with that different things

00:16:01,880 --> 00:16:06,080
comes in a bit of confusion in the end

00:16:04,010 --> 00:16:08,770
from a core perspective like the cloud

00:16:06,080 --> 00:16:11,420
phone your runtime is all the same and

00:16:08,770 --> 00:16:14,240
you should be able to to make your way

00:16:11,420 --> 00:16:16,730
through that another one we definitely

00:16:14,240 --> 00:16:19,130
highlight our good friends of ours if

00:16:16,730 --> 00:16:20,510
the company from any nines the feedback

00:16:19,130 --> 00:16:22,280
we got there was they had a really

00:16:20,510 --> 00:16:24,590
really fast registration process so

00:16:22,280 --> 00:16:25,820
basically from logging in to like

00:16:24,590 --> 00:16:28,160
getting your code running on the

00:16:25,820 --> 00:16:30,920
platform was really quick they also

00:16:28,160 --> 00:16:32,900
provide some really helpful instructions

00:16:30,920 --> 00:16:34,160
on how do the first steps already in the

00:16:32,900 --> 00:16:37,040
page and on the email for the

00:16:34,160 --> 00:16:38,570
registration so this this was very user

00:16:37,040 --> 00:16:41,660
friendly

00:16:38,570 --> 00:16:44,420
now suicune it plays a bit a different

00:16:41,660 --> 00:16:45,060
different role here because Zeus is a

00:16:44,420 --> 00:16:46,980
base

00:16:45,060 --> 00:16:48,960
as a certified provider but they don't

00:16:46,980 --> 00:16:51,500
have like a public offering in a way

00:16:48,960 --> 00:16:54,630
that any nines of pivotal or or IBM does

00:16:51,500 --> 00:16:56,310
them they have a known distribution but

00:16:54,630 --> 00:16:58,500
this is basically meant to be installed

00:16:56,310 --> 00:17:00,210
on premises and they're very active in

00:16:58,500 --> 00:17:02,640
that new technologies around like

00:17:00,210 --> 00:17:05,130
integrating with kubernetes especially

00:17:02,640 --> 00:17:08,250
in in the topic of quarks so with that

00:17:05,130 --> 00:17:10,020
you're basically able to install a Cloud

00:17:08,250 --> 00:17:11,640
Foundry installation really quickly if

00:17:10,020 --> 00:17:13,800
you have an existing kubernetes system

00:17:11,640 --> 00:17:16,980
we don't have a demo on that

00:17:13,800 --> 00:17:18,420
unfortunately so we like we hope to be

00:17:16,980 --> 00:17:21,960
able to do that if you give the talk

00:17:18,420 --> 00:17:23,790
next time and everything to do is sign a

00:17:21,960 --> 00:17:29,250
person open source so it's really easy

00:17:23,790 --> 00:17:30,510
to get started with that now this with

00:17:29,250 --> 00:17:33,510
this table

00:17:30,510 --> 00:17:35,790
I wouldn't like want to guarantee that

00:17:33,510 --> 00:17:38,310
this is always correct we have to change

00:17:35,790 --> 00:17:41,070
and update this one quite a bit this

00:17:38,310 --> 00:17:43,530
gives a bit of an overview of what the

00:17:41,070 --> 00:17:46,710
various providers offer to you as a free

00:17:43,530 --> 00:17:48,390
trial version so for example I think

00:17:46,710 --> 00:17:51,030
initially pivotal Web Services had a

00:17:48,390 --> 00:17:54,980
limit of 90 days now this has changed to

00:17:51,030 --> 00:17:58,320
like 87 for whatever reason 87 dollars

00:17:54,980 --> 00:18:00,030
that you can consume and spend and when

00:17:58,320 --> 00:18:02,040
you have used that for your application

00:18:00,030 --> 00:18:04,710
and services runtime then basically you

00:18:02,040 --> 00:18:06,750
would be in a position to charge the

00:18:04,710 --> 00:18:10,260
differentiators are also in a way like

00:18:06,750 --> 00:18:11,970
what is the them that the volumes that

00:18:10,260 --> 00:18:13,710
you can have I mean basically this is

00:18:11,970 --> 00:18:17,100
the RAM allocation of your services

00:18:13,710 --> 00:18:19,200
which would cost you the latest reason

00:18:17,100 --> 00:18:20,490
like that one with IBM stands out here

00:18:19,200 --> 00:18:23,490
that you can Beit they haven't like an

00:18:20,490 --> 00:18:25,260
ever expiring version for free but in

00:18:23,490 --> 00:18:32,100
turn this one has only a limitation for

00:18:25,260 --> 00:18:33,420
20 yeah so slightly variations the

00:18:32,100 --> 00:18:36,030
biggest variations are probably in the

00:18:33,420 --> 00:18:38,430
amount of build packs and services this

00:18:36,030 --> 00:18:39,960
is basically built Peg's means the

00:18:38,430 --> 00:18:44,610
provided runtimes

00:18:39,960 --> 00:18:46,080
for your application so for example in a

00:18:44,610 --> 00:18:47,640
java application that would be like

00:18:46,080 --> 00:18:50,430
build pack containing JRE you don't know

00:18:47,640 --> 00:18:52,110
to run it and so on and also on this

00:18:50,430 --> 00:18:53,070
underside of the back-end services I

00:18:52,110 --> 00:18:55,800
mean again

00:18:53,070 --> 00:18:58,950
IBM stands out on this one with by far

00:18:55,800 --> 00:19:01,950
more than anybody else because they have

00:18:58,950 --> 00:19:04,140
like a huge cloud service offering so it

00:19:01,950 --> 00:19:06,090
leaves you with the with the result that

00:19:04,140 --> 00:19:09,140
you have to try which one you want to

00:19:06,090 --> 00:19:12,810
use and fits best to your application

00:19:09,140 --> 00:19:16,170
okay so with that we switch over to the

00:19:12,810 --> 00:19:19,590
demo and so basically I mean we're not

00:19:16,170 --> 00:19:22,200
gonna demo very much here it's just

00:19:19,590 --> 00:19:25,650
basically we will try to show you how we

00:19:22,200 --> 00:19:28,950
analyze and assess this so basically we

00:19:25,650 --> 00:19:30,450
gonna login in into like two or three

00:19:28,950 --> 00:19:32,790
different providers

00:19:30,450 --> 00:19:34,620
try to push an app maybe buying a

00:19:32,790 --> 00:19:37,110
service and then basically we're gonna

00:19:34,620 --> 00:19:39,420
list the billed pegs and list the the

00:19:37,110 --> 00:19:41,820
service offering so you can see that in

00:19:39,420 --> 00:19:44,310
general the access to each of the

00:19:41,820 --> 00:19:45,600
environment totally feels the same the

00:19:44,310 --> 00:19:47,970
difference really comes with the

00:19:45,600 --> 00:19:49,320
offerings of the services so I think

00:19:47,970 --> 00:19:56,160
today we're going to show something

00:19:49,320 --> 00:19:58,350
about any nines and also what Myrna

00:19:56,160 --> 00:20:00,000
initially said you have like a local vm

00:19:58,350 --> 00:20:02,340
option then you have like a host

00:20:00,000 --> 00:20:04,260
provider option and you have like an

00:20:02,340 --> 00:20:05,460
on-premise installation option so this

00:20:04,260 --> 00:20:07,140
is the moment the one you get started

00:20:05,460 --> 00:20:10,050
with but this is the only one you get

00:20:07,140 --> 00:20:12,120
productive with and as we had Thomas

00:20:10,050 --> 00:20:16,460
Miller from Daimler on the keynote stage

00:20:12,120 --> 00:20:19,050
showing that new Daimler pass

00:20:16,460 --> 00:20:21,990
implementation we happen to work with

00:20:19,050 --> 00:20:24,150
them and and give education for that

00:20:21,990 --> 00:20:26,040
platform so we also have a login that

00:20:24,150 --> 00:20:27,780
means we can also like show you a login

00:20:26,040 --> 00:20:30,240
incident to the diamond environment here

00:20:27,780 --> 00:20:36,150
and just like show to you that is

00:20:30,240 --> 00:20:38,130
totally consistent if it's really like

00:20:36,150 --> 00:20:40,440
just the same style how you would push

00:20:38,130 --> 00:20:43,130
and deploy your application and enroll

00:20:40,440 --> 00:20:46,260
them out can you just see it well or

00:20:43,130 --> 00:20:48,980
don't have to make it bigger okay good

00:20:46,260 --> 00:20:48,980
so

00:20:50,190 --> 00:20:57,060
[Music]

00:20:52,850 --> 00:20:59,940
so as you can see maybe from the URL the

00:20:57,060 --> 00:21:03,120
API endpoint it says eh see past that

00:20:59,940 --> 00:21:05,160
stands for Daimler hybrid clout and we

00:21:03,120 --> 00:21:08,210
logged into that now so we can see they

00:21:05,160 --> 00:21:11,670
have a standard set of build packs for

00:21:08,210 --> 00:21:14,130
various application languages and things

00:21:11,670 --> 00:21:17,690
they want to have the developers in able

00:21:14,130 --> 00:21:27,750
to deploy their applications on if you

00:21:17,690 --> 00:21:31,170
show the marketplace that will show the

00:21:27,750 --> 00:21:32,910
available service offerings and I think

00:21:31,170 --> 00:21:34,830
in in the keynote they also mentioned

00:21:32,910 --> 00:21:38,820
that they use the service offerings from

00:21:34,830 --> 00:21:41,190
from any nines that's a lot but you can

00:21:38,820 --> 00:21:42,960
maybe see that there are some any nines

00:21:41,190 --> 00:21:44,610
references here to the backend so this

00:21:42,960 --> 00:21:46,950
was not a lie those services are really

00:21:44,610 --> 00:21:48,540
there the only problem that we have

00:21:46,950 --> 00:21:52,140
right here we can log into the API

00:21:48,540 --> 00:21:54,000
endpoint but we can't log into the VPN

00:21:52,140 --> 00:21:55,770
where we deploy the application so we

00:21:54,000 --> 00:21:57,510
could push potentially an application

00:21:55,770 --> 00:22:00,840
but we couldn't show the front-end so

00:21:57,510 --> 00:22:07,130
we're gonna log out on this one and show

00:22:00,840 --> 00:22:07,130
you the basic steps and another one

00:22:12,710 --> 00:22:19,309
so as you can see here I mean you have

00:22:15,619 --> 00:22:21,830
this CF API locally on your machine and

00:22:19,309 --> 00:22:23,749
you just basically exchange the

00:22:21,830 --> 00:22:26,149
so-called targets like the target is the

00:22:23,749 --> 00:22:28,850
API endpoint that you that you cannot

00:22:26,149 --> 00:22:30,919
found your API points to and and from

00:22:28,850 --> 00:22:32,899
there you have totally the same scope of

00:22:30,919 --> 00:22:34,129
operations so now it's just basically if

00:22:32,899 --> 00:22:35,840
you switched from a productive

00:22:34,129 --> 00:22:39,649
environment to like a test environment

00:22:35,840 --> 00:22:42,080
that we have here and yeah so you can

00:22:39,649 --> 00:22:44,299
run the same thing now you can see the

00:22:42,080 --> 00:22:46,970
build packs that are offered here are

00:22:44,299 --> 00:22:49,789
somewhat different this is basically the

00:22:46,970 --> 00:22:51,679
decision of each provider of a platform

00:22:49,789 --> 00:22:53,360
what kind of context they offer there

00:22:51,679 --> 00:22:57,649
are also the options for the developers

00:22:53,360 --> 00:22:59,990
themselves to bring oh until tax in case

00:22:57,649 --> 00:23:02,240
the provider allows that so this is just

00:22:59,990 --> 00:23:05,499
basically the basic set that you have if

00:23:02,240 --> 00:23:09,619
you look at the the marketplace here the

00:23:05,499 --> 00:23:14,389
it should look fairly fairly similar

00:23:09,619 --> 00:23:16,279
hopefully hopefully ok so again as this

00:23:14,389 --> 00:23:19,279
is any nines you would expect some any

00:23:16,279 --> 00:23:21,950
nine services here they are and with

00:23:19,279 --> 00:23:24,350
them you you basically see it's it's

00:23:21,950 --> 00:23:26,450
it's a bit shifted but you have a

00:23:24,350 --> 00:23:28,789
service and a plan and you see that

00:23:26,450 --> 00:23:33,049
there are different plans and that means

00:23:28,789 --> 00:23:35,029
you can select a certain like let's say

00:23:33,049 --> 00:23:37,279
quality plan of an application or a

00:23:35,029 --> 00:23:39,499
scope plan so you can see you can offer

00:23:37,279 --> 00:23:41,360
like a small database which might be for

00:23:39,499 --> 00:23:44,509
free or has like a minimum cost or you

00:23:41,360 --> 00:23:46,549
can have a plan of like a clustered h8

00:23:44,509 --> 00:23:49,669
database which would cost the the user

00:23:46,549 --> 00:23:51,649
more and in the end you expose that to

00:23:49,669 --> 00:23:53,509
the developers of the application and

00:23:51,649 --> 00:23:55,100
say well you probably know best what

00:23:53,509 --> 00:23:56,990
kind of application but like a back-end

00:23:55,100 --> 00:24:00,649
system you need and you can basically

00:23:56,990 --> 00:24:04,330
just install it I mean in just sure like

00:24:00,649 --> 00:24:04,330
a CF create sir

00:24:07,480 --> 00:24:13,870
so what yes yes so this is basically the

00:24:12,250 --> 00:24:15,700
way how you would do that things so you

00:24:13,870 --> 00:24:17,919
see the list of services and then you do

00:24:15,700 --> 00:24:19,899
a create a CF create service and then it

00:24:17,919 --> 00:24:21,070
will instantiate that service and it's

00:24:19,899 --> 00:24:22,870
there for you this is the only thing you

00:24:21,070 --> 00:24:24,610
need to do and in the end you need to

00:24:22,870 --> 00:24:27,450
find that service to an application that

00:24:24,610 --> 00:24:29,799
you push before I mean we can show us

00:24:27,450 --> 00:24:34,389
the way how to push an application I

00:24:29,799 --> 00:24:39,519
mean come on you have heard most often

00:24:34,389 --> 00:24:42,519
in the context of boundary and dr. Nick

00:24:39,519 --> 00:24:44,620
gave a great demo on that yesterday a

00:24:42,519 --> 00:24:46,510
quick recap we're gonna push one

00:24:44,620 --> 00:24:51,100
application now that we have built

00:24:46,510 --> 00:24:53,139
before and so this will basically do the

00:24:51,100 --> 00:24:55,419
steps that myrna had shown initially in

00:24:53,139 --> 00:24:58,000
that in that flowchart so now it's

00:24:55,419 --> 00:25:01,899
uploaded to the source code it builds it

00:24:58,000 --> 00:25:03,580
detects it's a java application it will

00:25:01,899 --> 00:25:05,830
put the build pack and the application

00:25:03,580 --> 00:25:07,330
code into a container and then once the

00:25:05,830 --> 00:25:09,100
application is run it's just basically

00:25:07,330 --> 00:25:14,440
instances of that container are being

00:25:09,100 --> 00:25:16,750
scheduled this might take a second or so

00:25:14,440 --> 00:25:20,080
but the network connection that we have

00:25:16,750 --> 00:25:22,690
here is not the fastest so it's uploaded

00:25:20,080 --> 00:25:26,289
now it's and it's building the it's

00:25:22,690 --> 00:25:28,480
building the application so it's

00:25:26,289 --> 00:25:31,240
uploading problets that basically means

00:25:28,480 --> 00:25:33,940
the source code plus the build pack is

00:25:31,240 --> 00:25:36,639
now where it should be the container is

00:25:33,940 --> 00:25:39,570
created and it now it's basically

00:25:36,639 --> 00:25:39,570
waiting for that to start

00:25:52,980 --> 00:25:58,529
okay and now you can see the application

00:25:55,350 --> 00:26:01,860
has started it comes wait can you go to

00:25:58,529 --> 00:26:03,720
the convent real quick yeah yeah so

00:26:01,860 --> 00:26:06,480
basically only two things you need to do

00:26:03,720 --> 00:26:08,789
is like to execute that CF push and then

00:26:06,480 --> 00:26:11,490
you've got a lot of fun it's going to

00:26:08,789 --> 00:26:13,289
come back with such an URL and this is

00:26:11,490 --> 00:26:15,990
basically the URL that your end users

00:26:13,289 --> 00:26:18,000
are supposed to get and access and with

00:26:15,990 --> 00:26:20,370
that have access to your application so

00:26:18,000 --> 00:26:22,350
it really is that simple

00:26:20,370 --> 00:26:24,630
and now this is like a sample

00:26:22,350 --> 00:26:26,850
application that we have built it

00:26:24,630 --> 00:26:29,490
basically detects which provider it is

00:26:26,850 --> 00:26:31,980
running on if you say that up you could

00:26:29,490 --> 00:26:34,950
see different instances of that but that

00:26:31,980 --> 00:26:37,169
you're running and also if it's bound to

00:26:34,950 --> 00:26:39,240
a service or not in this case we haven't

00:26:37,169 --> 00:26:41,190
found it to a service yet so it connects

00:26:39,240 --> 00:26:43,710
automatically to a legacy Java built-in

00:26:41,190 --> 00:26:45,870
database an h2 if you know bound it to

00:26:43,710 --> 00:26:49,500
like the previously traded service we

00:26:45,870 --> 00:26:51,120
could attach it to that as well but I'm

00:26:49,500 --> 00:26:52,769
afraid we're not gonna have the time for

00:26:51,120 --> 00:26:55,710
that because we might want to relieve

00:26:52,769 --> 00:26:58,820
some room for questions so let's just go

00:26:55,710 --> 00:26:58,820
back to the slides real quick

00:27:03,370 --> 00:27:11,990
so yes just to close this down a little

00:27:08,299 --> 00:27:14,750
I mean of course you can get open source

00:27:11,990 --> 00:27:17,179
support for from the Ambassador and from

00:27:14,750 --> 00:27:18,830
the local resources in case you want to

00:27:17,179 --> 00:27:21,830
take it more serious it's of course a

00:27:18,830 --> 00:27:23,990
good idea to let people do that that

00:27:21,830 --> 00:27:25,700
have a bit of experience with this so

00:27:23,990 --> 00:27:27,410
these are like the companies that you

00:27:25,700 --> 00:27:29,150
will probably also find if you go down

00:27:27,410 --> 00:27:31,130
to the exhibition hall where other

00:27:29,150 --> 00:27:33,650
sponsor booths are because these are the

00:27:31,130 --> 00:27:36,890
company that that we know and Novacek

00:27:33,650 --> 00:27:40,010
are listed there as well we work with

00:27:36,890 --> 00:27:42,020
those platforms and we can be able to

00:27:40,010 --> 00:27:44,270
like either point you out to other

00:27:42,020 --> 00:27:46,039
people so for example yesterday there

00:27:44,270 --> 00:27:47,480
was quite a bit of an interest around

00:27:46,039 --> 00:27:49,880
the topic of Porsche and like

00:27:47,480 --> 00:27:51,710
operational things for example this is

00:27:49,880 --> 00:27:53,900
something we would not do but then we

00:27:51,710 --> 00:27:55,789
could easily say well talk to the folks

00:27:53,900 --> 00:27:57,650
from ne9 so starting wayne or engineer

00:27:55,789 --> 00:28:00,860
better i know that they are doing this

00:27:57,650 --> 00:28:03,370
so it's more like a helpful and a

00:28:00,860 --> 00:28:06,530
competitive ecosystem i would say and

00:28:03,370 --> 00:28:09,080
yeah we reach out to those to those

00:28:06,530 --> 00:28:11,990
companies if you want more professional

00:28:09,080 --> 00:28:14,600
services so with that i would like to

00:28:11,990 --> 00:28:16,640
say thanks and just a quick highlight of

00:28:14,600 --> 00:28:18,230
the of the people basically involved

00:28:16,640 --> 00:28:20,539
with this these were the two students

00:28:18,230 --> 00:28:22,730
that did the research initially Steve

00:28:20,539 --> 00:28:29,750
Greenberg was the one that helped us in

00:28:22,730 --> 00:28:31,909
the things when we did the what you

00:28:29,750 --> 00:28:34,190
think is in the room he updated all of

00:28:31,909 --> 00:28:36,530
that to bring it to the latest state so

00:28:34,190 --> 00:28:40,159
thanks for everyone being involved here

00:28:36,530 --> 00:28:41,780
and so next steps for you is basically

00:28:40,159 --> 00:28:44,659
if in case you haven't done that yet

00:28:41,780 --> 00:28:46,880
know going download the CLI register

00:28:44,659 --> 00:28:49,429
with a provider of the choice walk

00:28:46,880 --> 00:28:51,890
through cloud try it out for re push

00:28:49,429 --> 00:28:54,080
your own codes and get the training get

00:28:51,890 --> 00:28:58,610
certified and and you will like it so

00:28:54,080 --> 00:29:02,380
with that I would end the talk now and

00:28:58,610 --> 00:29:02,380
open it up for questions

00:29:04,360 --> 00:29:07,470
that's a question

00:29:27,310 --> 00:29:32,690
well this is a very good question I mean

00:29:30,110 --> 00:29:36,050
the question was about how Cloud Foundry

00:29:32,690 --> 00:29:37,910
handles data or like legacy stateful

00:29:36,050 --> 00:29:41,270
service begins if I understood you

00:29:37,910 --> 00:29:44,630
correctly and as a smyrna showed before

00:29:41,270 --> 00:29:46,490
a built in nature of the of the platform

00:29:44,630 --> 00:29:48,980
is like two separate application which

00:29:46,490 --> 00:29:50,900
are meant to be at least stateless in

00:29:48,980 --> 00:29:53,570
ideal case to affect the compliant and

00:29:50,900 --> 00:29:55,130
stateful back-end services not the

00:29:53,570 --> 00:30:00,950
back-end services are normally provided

00:29:55,130 --> 00:30:05,300
by the platform team or the platform in

00:30:00,950 --> 00:30:07,700
case if you need a back-end system that

00:30:05,300 --> 00:30:09,260
is not offered in that list if you have

00:30:07,700 --> 00:30:10,640
like a legacy application and you want

00:30:09,260 --> 00:30:13,100
to run a technology that the service

00:30:10,640 --> 00:30:15,890
provider does not offer there are

00:30:13,100 --> 00:30:17,810
various options I mean what we didn't

00:30:15,890 --> 00:30:19,700
touch here but what I think there will

00:30:17,810 --> 00:30:22,700
be a talk on that today is the so called

00:30:19,700 --> 00:30:25,340
open service broker API so you can

00:30:22,700 --> 00:30:27,710
basically build an own service broker

00:30:25,340 --> 00:30:29,570
for your legacy application and then

00:30:27,710 --> 00:30:31,520
attach to Cloud Foundry and then you can

00:30:29,570 --> 00:30:34,220
consume it in the same style of like

00:30:31,520 --> 00:30:36,860
create and bind service if you don't

00:30:34,220 --> 00:30:39,170
want to like write a full-blown broker

00:30:36,860 --> 00:30:40,940
and you just maybe one having like a

00:30:39,170 --> 00:30:44,930
test connection and not include that

00:30:40,940 --> 00:30:46,880
into like a in a productive environment

00:30:44,930 --> 00:30:49,280
or whatever this this is so called user

00:30:46,880 --> 00:30:50,720
defined service if you have that out

00:30:49,280 --> 00:30:52,280
there like the the system provided

00:30:50,720 --> 00:30:55,100
services and the user defined services

00:30:52,280 --> 00:30:57,440
and with that you basically just add the

00:30:55,100 --> 00:30:59,780
endpoint of a service definition and the

00:30:57,440 --> 00:31:01,790
credentials and then you can use the

00:30:59,780 --> 00:31:04,580
create service and bind service command

00:31:01,790 --> 00:31:06,590
in the same style and the the

00:31:04,580 --> 00:31:09,500
information to connect will be injected

00:31:06,590 --> 00:31:10,010
into the application does that answer

00:31:09,500 --> 00:31:15,410
your question

00:31:10,010 --> 00:31:18,190
cool any more I don't think we have time

00:31:15,410 --> 00:31:20,840
for more but we're gonna be around

00:31:18,190 --> 00:31:24,410
either I mean I'm probably going to be

00:31:20,840 --> 00:31:26,480
mostly in this room we have a booth

00:31:24,410 --> 00:31:27,770
downstairs here a lot of our colleagues

00:31:26,480 --> 00:31:31,850
you can see them in the Nova textured

00:31:27,770 --> 00:31:34,490
subscribe can ask them and yeah

00:31:31,850 --> 00:31:37,640
that say thanks for listening

00:31:34,490 --> 00:31:37,640

YouTube URL: https://www.youtube.com/watch?v=Y-WyZqQS3Gs


