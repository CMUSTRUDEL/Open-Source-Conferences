Title: Panel: Perspectives from the Users, a Panel Discussion with The New Stack
Publication date: 2020-10-26
Playlist: Cloud Foundry Summit Europe 2020
Description: 
	Panel: Perspectives from the Users, a Panel Discussion with The New Stack - Alex Williams, The New Stack; Ramkrishna Chatterjee, Happiest Minds; Greg Otto, Comcast; Lee Porte, UK GDS
Captions: 
	00:00:00,080 --> 00:00:07,520
hey everyone great to be

00:00:03,280 --> 00:00:10,719
here we are celebrating in the cloud

00:00:07,520 --> 00:00:14,400
foundry world the cloud foundry

00:00:10,719 --> 00:00:17,359
summit european union event

00:00:14,400 --> 00:00:18,240
we're all at home clearly but i'm just

00:00:17,359 --> 00:00:21,119
thinking about

00:00:18,240 --> 00:00:21,760
the events i've been to in europe and

00:00:21,119 --> 00:00:25,359
basel

00:00:21,760 --> 00:00:28,720
and the hague and

00:00:25,359 --> 00:00:30,480
they were just so much fun and so

00:00:28,720 --> 00:00:33,280
interesting and seeing how this

00:00:30,480 --> 00:00:36,640
community has changed and

00:00:33,280 --> 00:00:38,719
adapted to new times is uh really a

00:00:36,640 --> 00:00:40,559
testament to the

00:00:38,719 --> 00:00:43,520
really the use of open source

00:00:40,559 --> 00:00:46,879
technologies and so i want to introduce

00:00:43,520 --> 00:00:50,480
the guest today we have rk principal

00:00:46,879 --> 00:00:51,440
architect at happiest minds hey rk how

00:00:50,480 --> 00:00:53,360
are you

00:00:51,440 --> 00:00:55,440
yeah i'm absolutely fine thank you very

00:00:53,360 --> 00:00:57,680
much trust everybody is doing code and

00:00:55,440 --> 00:01:01,199
keeping yourself safe

00:00:57,680 --> 00:01:03,520
hi so i am rk and i am principal

00:01:01,199 --> 00:01:05,280
architect of happiest minds technologies

00:01:03,520 --> 00:01:09,520
based out of bangalore

00:01:05,280 --> 00:01:12,000
india so i am the principal architect of

00:01:09,520 --> 00:01:14,000
dbs unit and i am working in cloud

00:01:12,000 --> 00:01:17,439
foundry technologies

00:01:14,000 --> 00:01:19,520
for last five years and along with the

00:01:17,439 --> 00:01:22,799
cloud foundry technologies

00:01:19,520 --> 00:01:24,840
i am competent and working in

00:01:22,799 --> 00:01:27,360
you know digital transformation

00:01:24,840 --> 00:01:30,079
microservices kubernetes

00:01:27,360 --> 00:01:32,000
hyper automation integration service

00:01:30,079 --> 00:01:32,880
oriented architecture for the last 16

00:01:32,000 --> 00:01:35,600
years

00:01:32,880 --> 00:01:37,759
so that's the introduction from my site

00:01:35,600 --> 00:01:42,079
what is happiest mind

00:01:37,759 --> 00:01:46,240
yeah so it's a broad digital you know

00:01:42,079 --> 00:01:49,439
and you know mindful i.t company and

00:01:46,240 --> 00:01:52,159
it's a it's it's a company that you know

00:01:49,439 --> 00:01:52,479
works on all the digital technologies

00:01:52,159 --> 00:01:54,880
and

00:01:52,479 --> 00:01:57,040
it has three basic units it is digital

00:01:54,880 --> 00:01:59,680
uh business service ims and

00:01:57,040 --> 00:02:02,240
product engineering you know services so

00:01:59,680 --> 00:02:04,240
i am part of the you know dbs unit

00:02:02,240 --> 00:02:06,799
but i mainly work for all the digital

00:02:04,240 --> 00:02:10,319
transformation initiative over there

00:02:06,799 --> 00:02:10,800
okay great yeah great well moving on to

00:02:10,319 --> 00:02:14,000
our

00:02:10,800 --> 00:02:16,720
next guest greg otto

00:02:14,000 --> 00:02:17,680
greg otto's executive director of cloud

00:02:16,720 --> 00:02:20,720
servers is a

00:02:17,680 --> 00:02:23,840
comcast greg it's good to see you again

00:02:20,720 --> 00:02:25,599
good to see you too alex and uh

00:02:23,840 --> 00:02:27,360
it's wonderful to be here i'm happy to

00:02:25,599 --> 00:02:30,400
be part of the event and

00:02:27,360 --> 00:02:31,200
uh i lead our application platform and

00:02:30,400 --> 00:02:34,840
developer

00:02:31,200 --> 00:02:36,720
experience teams at comcast nbc

00:02:34,840 --> 00:02:39,840
universal um

00:02:36,720 --> 00:02:41,760
the sky family is now part of the

00:02:39,840 --> 00:02:42,879
of the comcast family so hopefully

00:02:41,760 --> 00:02:46,160
there's folks

00:02:42,879 --> 00:02:47,760
tuning in and i've been involved in

00:02:46,160 --> 00:02:50,879
cloud foundry since

00:02:47,760 --> 00:02:54,319
2013 and we have a quite

00:02:50,879 --> 00:02:56,319
sizable environment and

00:02:54,319 --> 00:02:58,080
you know the whole covid situation has

00:02:56,319 --> 00:02:59,680
certainly accelerated our digital

00:02:58,080 --> 00:03:02,720
transformation efforts and

00:02:59,680 --> 00:03:04,319
you know we've been being able to rise

00:03:02,720 --> 00:03:07,200
to the occasion and

00:03:04,319 --> 00:03:08,400
lots of folks are very connected and you

00:03:07,200 --> 00:03:11,519
know we're happy to be able to

00:03:08,400 --> 00:03:13,519
you know provide those connections

00:03:11,519 --> 00:03:15,440
for our customers and all the media and

00:03:13,519 --> 00:03:19,360
entertainment

00:03:15,440 --> 00:03:22,360
capability we're delivering awesome

00:03:19,360 --> 00:03:25,760
thanks for joining us greg and lee port

00:03:22,360 --> 00:03:30,319
reliability engineer for gov dot uk

00:03:25,760 --> 00:03:33,840
on the platform as a service team

00:03:30,319 --> 00:03:36,959
in the what does gds stand for

00:03:33,840 --> 00:03:38,319
uh oh yeah uh gds that's government

00:03:36,959 --> 00:03:41,760
digital service

00:03:38,319 --> 00:03:45,200
ah okay so over in the us

00:03:41,760 --> 00:03:48,319
you've got the 18f okay and

00:03:45,200 --> 00:03:49,599
18f was modeled on gds so we were the

00:03:48,319 --> 00:03:52,879
first to do the

00:03:49,599 --> 00:03:55,920
how to transform government digital

00:03:52,879 --> 00:03:57,680
so we were spun out as a shop to start

00:03:55,920 --> 00:03:59,040
figuring that out and the first thing

00:03:57,680 --> 00:04:02,959
that we delivered was

00:03:59,040 --> 00:04:05,280
dot uk itself prior to gov dot uk

00:04:02,959 --> 00:04:07,280
there were over 200 different government

00:04:05,280 --> 00:04:08,959
websites in existence that you may have

00:04:07,280 --> 00:04:11,120
to interact with

00:04:08,959 --> 00:04:13,439
afterwards there was one place to find

00:04:11,120 --> 00:04:16,799
everything

00:04:13,439 --> 00:04:19,280
yes automation does have uh

00:04:16,799 --> 00:04:21,759
its miracle moments doesn't it it

00:04:19,280 --> 00:04:25,759
certainly does

00:04:21,759 --> 00:04:27,759
so we're here to talk about

00:04:25,759 --> 00:04:30,000
uh cloud foundry and some of your

00:04:27,759 --> 00:04:31,360
experiences with cloud foundry as of

00:04:30,000 --> 00:04:34,720
late because there's been some

00:04:31,360 --> 00:04:35,280
change afoot there's been a lot of

00:04:34,720 --> 00:04:38,400
change

00:04:35,280 --> 00:04:40,400
and i am quite excited about the change

00:04:38,400 --> 00:04:43,680
whenever i hear about something going

00:04:40,400 --> 00:04:47,440
lightweight i get very excited

00:04:43,680 --> 00:04:48,240
and it reminds me of the earliest days

00:04:47,440 --> 00:04:50,400
of

00:04:48,240 --> 00:04:51,759
cloud foundry when there was a lot of

00:04:50,400 --> 00:04:55,840
excitement about

00:04:51,759 --> 00:04:57,600
its opportunities i remember being in a

00:04:55,840 --> 00:05:01,080
conference room at uh

00:04:57,600 --> 00:05:05,440
vmware headquarters uh circa

00:05:01,080 --> 00:05:06,960
2010 maybe or about around that and they

00:05:05,440 --> 00:05:10,160
were like

00:05:06,960 --> 00:05:12,560
all excited about this new

00:05:10,160 --> 00:05:14,400
thing they call cloud foundry and now

00:05:12,560 --> 00:05:17,120
we've moved into a new world

00:05:14,400 --> 00:05:18,479
where we're now hearing a lot more about

00:05:17,120 --> 00:05:21,759
lightweight services

00:05:18,479 --> 00:05:23,600
and cloud foundry now has a number of

00:05:21,759 --> 00:05:26,240
lightweight services that are

00:05:23,600 --> 00:05:27,360
making it possible to really connect

00:05:26,240 --> 00:05:32,000
through the api

00:05:27,360 --> 00:05:35,440
and have much uh i guess

00:05:32,000 --> 00:05:37,600
oops and much less

00:05:35,440 --> 00:05:38,639
requirement on for instance the

00:05:37,600 --> 00:05:42,960
installation

00:05:38,639 --> 00:05:46,160
and the services include

00:05:42,960 --> 00:05:49,120
istio and fluent d and

00:05:46,160 --> 00:05:51,600
and others as well and you know build

00:05:49,120 --> 00:05:55,440
packs are really starting to have a

00:05:51,600 --> 00:05:58,960
higher profile but a lot of this means

00:05:55,440 --> 00:06:02,319
change and change is not easy

00:05:58,960 --> 00:06:05,199
and so lee i'd love to ask you

00:06:02,319 --> 00:06:06,639
about you know what you're learning

00:06:05,199 --> 00:06:08,000
because i know you've been doing some

00:06:06,639 --> 00:06:11,280
work in

00:06:08,000 --> 00:06:14,000
developing some covid related

00:06:11,280 --> 00:06:15,680
technologies and perhaps you could talk

00:06:14,000 --> 00:06:20,479
a little bit about that and

00:06:15,680 --> 00:06:22,400
all this change and how's it going um

00:06:20,479 --> 00:06:23,520
yeah so covid's been a really

00:06:22,400 --> 00:06:26,400
interesting

00:06:23,520 --> 00:06:28,880
challenging experience where having

00:06:26,400 --> 00:06:32,000
cloud foundry at our disposal has proved

00:06:28,880 --> 00:06:34,400
absolutely invaluable so

00:06:32,000 --> 00:06:35,840
one of the really good cases in point is

00:06:34,400 --> 00:06:37,919
a service that

00:06:35,840 --> 00:06:39,759
we had to put together very quickly

00:06:37,919 --> 00:06:41,039
called the shielded vulnerable people

00:06:39,759 --> 00:06:45,199
service

00:06:41,039 --> 00:06:48,000
so as kovid was taking its hold

00:06:45,199 --> 00:06:48,720
one of the things that the government

00:06:48,000 --> 00:06:52,080
came across

00:06:48,720 --> 00:06:54,479
uk government that says said if you have

00:06:52,080 --> 00:06:57,440
certain types of health conditions

00:06:54,479 --> 00:06:58,400
you should be shielding away from uh

00:06:57,440 --> 00:07:00,240
everybody else

00:06:58,400 --> 00:07:02,720
you should be in isolation you shouldn't

00:07:00,240 --> 00:07:04,319
even be going out shopping

00:07:02,720 --> 00:07:06,319
this created a really interesting

00:07:04,319 --> 00:07:08,319
problem for a lot of people of a sudden

00:07:06,319 --> 00:07:10,400
you can't leave the house how do you get

00:07:08,319 --> 00:07:13,280
some food

00:07:10,400 --> 00:07:14,479
so we had to spin up this new service

00:07:13,280 --> 00:07:18,400
the work started

00:07:14,479 --> 00:07:21,440
at three o'clock on a thursday afternoon

00:07:18,400 --> 00:07:23,120
by monday morning at 10 a.m it was live

00:07:21,440 --> 00:07:26,160
and up and running

00:07:23,120 --> 00:07:27,759
wow it was able to cope with a couple of

00:07:26,160 --> 00:07:30,960
million hits

00:07:27,759 --> 00:07:33,360
without any problem whatsoever and that

00:07:30,960 --> 00:07:34,800
scaled up as the announcements went

00:07:33,360 --> 00:07:37,280
we had no problems at all with

00:07:34,800 --> 00:07:39,919
availability we were

00:07:37,280 --> 00:07:41,440
very secure in seeing you know up to 30

00:07:39,919 --> 00:07:44,879
million hits in an hour

00:07:41,440 --> 00:07:46,160
on that service so how did cloud foundry

00:07:44,879 --> 00:07:47,919
play a role in that

00:07:46,160 --> 00:07:49,060
cloud foundry did all the hosting side

00:07:47,919 --> 00:07:50,400
for us

00:07:49,060 --> 00:07:52,319
[Music]

00:07:50,400 --> 00:07:53,680
it also tailed into one of their other

00:07:52,319 --> 00:07:56,879
services that we've got

00:07:53,680 --> 00:07:59,280
gov uk notify which sends

00:07:56,879 --> 00:08:01,120
emails text messages and letters to

00:07:59,280 --> 00:08:03,039
people

00:08:01,120 --> 00:08:04,319
notify is used by a lot of different

00:08:03,039 --> 00:08:07,440
government services

00:08:04,319 --> 00:08:08,639
it's used by the nhs they were seeing an

00:08:07,440 --> 00:08:12,479
awful lot of traffic

00:08:08,639 --> 00:08:15,120
and at peak points they were looking at

00:08:12,479 --> 00:08:16,879
20 million messages per day email sent

00:08:15,120 --> 00:08:18,800
out

00:08:16,879 --> 00:08:20,720
notify is another one of our services

00:08:18,800 --> 00:08:22,960
that is hosted on the powers

00:08:20,720 --> 00:08:23,759
they could scale up and down on demand

00:08:22,960 --> 00:08:25,759
according to

00:08:23,759 --> 00:08:29,550
how much workload was being passed

00:08:25,759 --> 00:08:31,840
through to them by their end users

00:08:29,550 --> 00:08:34,080
[Music]

00:08:31,840 --> 00:08:36,719
so when you hear this greg and hear this

00:08:34,080 --> 00:08:40,479
story about

00:08:36,719 --> 00:08:41,279
about lee's experience has it been that

00:08:40,479 --> 00:08:46,800
easy for you

00:08:41,279 --> 00:08:49,200
has it been an adaptation to think about

00:08:46,800 --> 00:08:50,640
uh about this blended environment

00:08:49,200 --> 00:08:52,160
because i imagine

00:08:50,640 --> 00:08:54,080
we didn't get to this but i imagine

00:08:52,160 --> 00:08:56,320
there's a kubernetes angle here too

00:08:54,080 --> 00:08:57,680
but we can maybe come back to that or

00:08:56,320 --> 00:09:00,880
maybe there's not

00:08:57,680 --> 00:09:01,600
um but greg you know there's a lot of

00:09:00,880 --> 00:09:04,640
kind of

00:09:01,600 --> 00:09:08,480
uh talk about how kubernetes is

00:09:04,640 --> 00:09:09,920
you know is great and all in term buddy

00:09:08,480 --> 00:09:12,399
and the plumbing is there but

00:09:09,920 --> 00:09:13,440
getting up and getting started is is

00:09:12,399 --> 00:09:15,839
another matter

00:09:13,440 --> 00:09:18,000
and really the cf push environment

00:09:15,839 --> 00:09:20,320
really has been there for the devs

00:09:18,000 --> 00:09:21,200
really and and and that's when the focus

00:09:20,320 --> 00:09:24,720
on

00:09:21,200 --> 00:09:26,560
cf is that dev experience um

00:09:24,720 --> 00:09:29,040
that's complicated that's that that's

00:09:26,560 --> 00:09:31,920
complicated a bit i think by

00:09:29,040 --> 00:09:32,959
uh by kubernetes and you know what have

00:09:31,920 --> 00:09:34,320
you learned through this

00:09:32,959 --> 00:09:36,320
what are the some of the experiences

00:09:34,320 --> 00:09:39,440
you've uh that you've brought to bear

00:09:36,320 --> 00:09:42,000
that you're still trying to figure out

00:09:39,440 --> 00:09:43,440
yeah great questions alex so you know

00:09:42,000 --> 00:09:45,120
we've learned quite a bit

00:09:43,440 --> 00:09:46,640
again it's been about a seven year

00:09:45,120 --> 00:09:48,480
journey for us

00:09:46,640 --> 00:09:50,800
so i think when you know you have the

00:09:48,480 --> 00:09:52,640
experience in scaling a platform

00:09:50,800 --> 00:09:56,160
you know we're currently processing

00:09:52,640 --> 00:09:58,959
billions of business transactions daily

00:09:56,160 --> 00:10:00,880
on our platform when you when you look

00:09:58,959 --> 00:10:02,480
at changes in the ecosystem

00:10:00,880 --> 00:10:04,399
which are not new to cloud foundry

00:10:02,480 --> 00:10:06,160
there's been you know changes to the run

00:10:04,399 --> 00:10:08,399
time and a bunch of other

00:10:06,160 --> 00:10:09,519
uh changes that's just been a you know

00:10:08,399 --> 00:10:12,240
part of the

00:10:09,519 --> 00:10:14,480
of the ecosystem and like you i'm very

00:10:12,240 --> 00:10:17,040
excited about those because

00:10:14,480 --> 00:10:18,000
i look forward to the simplification so

00:10:17,040 --> 00:10:21,040
for me it's really

00:10:18,000 --> 00:10:23,440
about a developer experience platform

00:10:21,040 --> 00:10:24,880
that now gets extended to these

00:10:23,440 --> 00:10:26,640
workloads that

00:10:24,880 --> 00:10:29,120
are better suited in a kubernetes

00:10:26,640 --> 00:10:31,680
environment for stateful workloads

00:10:29,120 --> 00:10:32,240
that you know now we get to be able to

00:10:31,680 --> 00:10:35,200
provide

00:10:32,240 --> 00:10:36,800
that cf push experience for the

00:10:35,200 --> 00:10:40,079
developers making things

00:10:36,800 --> 00:10:43,040
easier for them for even you know

00:10:40,079 --> 00:10:45,040
greater shares of workloads and

00:10:43,040 --> 00:10:48,480
it just increases developer happiness

00:10:45,040 --> 00:10:51,920
and that's that's essentially my product

00:10:48,480 --> 00:10:53,600
okay i understand that you use a service

00:10:51,920 --> 00:10:57,040
or do you host your own

00:10:53,600 --> 00:10:57,519
uh uh cloud foundry environment uh yes

00:10:57,040 --> 00:11:00,320
so

00:10:57,519 --> 00:11:02,160
uh as we mentioned that you know as part

00:11:00,320 --> 00:11:05,120
of happiest mind technologies

00:11:02,160 --> 00:11:07,040
so we was we are building a platform the

00:11:05,120 --> 00:11:09,360
platform name is dcm which is the

00:11:07,040 --> 00:11:11,760
digital content monetization

00:11:09,360 --> 00:11:13,600
and this this platform is serving

00:11:11,760 --> 00:11:14,079
basically you know market content market

00:11:13,600 --> 00:11:16,399
research

00:11:14,079 --> 00:11:17,920
companies so when we started the journey

00:11:16,399 --> 00:11:20,240
in the 2015 the

00:11:17,920 --> 00:11:21,600
our idea was to create a multi-tenant

00:11:20,240 --> 00:11:24,240
sas platform

00:11:21,600 --> 00:11:26,800
using the micro services architecture is

00:11:24,240 --> 00:11:28,480
a completely micro services architecture

00:11:26,800 --> 00:11:30,240
and we were really searching for you

00:11:28,480 --> 00:11:32,720
know such platform where we can

00:11:30,240 --> 00:11:34,959
build deploy everything very easily and

00:11:32,720 --> 00:11:37,440
eventually we came to ibm and found

00:11:34,959 --> 00:11:39,839
you know the cloud foundry and what we

00:11:37,440 --> 00:11:42,320
realized that one single cf push

00:11:39,839 --> 00:11:44,000
you know can you know solve our problem

00:11:42,320 --> 00:11:45,440
because rest of the things all

00:11:44,000 --> 00:11:47,839
non-functional requirements of the

00:11:45,440 --> 00:11:50,320
architecture like scalability

00:11:47,839 --> 00:11:52,079
high availability recovery everything

00:11:50,320 --> 00:11:52,720
will be automatically taken care by the

00:11:52,079 --> 00:11:55,040
platform

00:11:52,720 --> 00:11:56,639
that was a great journey we started and

00:11:55,040 --> 00:12:00,079
you imagine we started with

00:11:56,639 --> 00:12:01,600
your you know dia and diego those kind

00:12:00,079 --> 00:12:03,519
of architectures

00:12:01,600 --> 00:12:04,959
and now you know we are seeing the

00:12:03,519 --> 00:12:08,320
kubernetes you know

00:12:04,959 --> 00:12:10,399
that that's playing a big role and

00:12:08,320 --> 00:12:12,720
and what is the what is the advantage of

00:12:10,399 --> 00:12:15,120
the kubernetes over the cloud foundry

00:12:12,720 --> 00:12:17,279
so that that's basically twofold because

00:12:15,120 --> 00:12:18,240
the developer has a better control over

00:12:17,279 --> 00:12:20,720
here

00:12:18,240 --> 00:12:21,440
what we initially we didn't have right

00:12:20,720 --> 00:12:23,920
so

00:12:21,440 --> 00:12:26,079
so so that's that's the one part and in

00:12:23,920 --> 00:12:28,880
the cloud boundary itself that has a

00:12:26,079 --> 00:12:30,800
there another advantage right so if i

00:12:28,880 --> 00:12:32,639
need a micro service that will be called

00:12:30,800 --> 00:12:35,040
only once in a month

00:12:32,639 --> 00:12:36,399
right we need a very very small amount

00:12:35,040 --> 00:12:39,760
of resource over there

00:12:36,399 --> 00:12:40,560
maybe 250 f6 mb of you know ram even if

00:12:39,760 --> 00:12:43,040
today

00:12:40,560 --> 00:12:44,880
there is very less platform that will

00:12:43,040 --> 00:12:47,760
give you know 120 of

00:12:44,880 --> 00:12:49,519
8 mb of ram but you can run a production

00:12:47,760 --> 00:12:52,079
kills micro services

00:12:49,519 --> 00:12:52,639
that's the emerging power on the other

00:12:52,079 --> 00:12:55,120
hand

00:12:52,639 --> 00:12:57,839
if you get the kubernetes and if you

00:12:55,120 --> 00:13:01,040
push all your back-end micro services

00:12:57,839 --> 00:13:03,120
and you put your ui and

00:13:01,040 --> 00:13:05,440
all your front-end apps in the cloud

00:13:03,120 --> 00:13:07,040
foundry that's a amazing blend

00:13:05,440 --> 00:13:09,200
because it gives you a you know

00:13:07,040 --> 00:13:12,639
completely you know dual advantage

00:13:09,200 --> 00:13:15,519
of both cloud foundry and the kubernetes

00:13:12,639 --> 00:13:16,720
so as the entire cloud foundry is moving

00:13:15,519 --> 00:13:19,519
to kubernetes

00:13:16,720 --> 00:13:22,399
imb told it whether it should not lose

00:13:19,519 --> 00:13:24,560
that all your developer experience

00:13:22,399 --> 00:13:26,079
you know which we used to enjoy from the

00:13:24,560 --> 00:13:28,480
very first day

00:13:26,079 --> 00:13:29,279
it should be there you know alex and

00:13:28,480 --> 00:13:31,519
along with

00:13:29,279 --> 00:13:33,360
that it should be you know powered with

00:13:31,519 --> 00:13:35,600
all the kubernetes facility

00:13:33,360 --> 00:13:37,760
so we need the shear boost we don't want

00:13:35,600 --> 00:13:39,839
to you know lose the safe push

00:13:37,760 --> 00:13:41,279
and we also one platform should do all

00:13:39,839 --> 00:13:43,600
the amazing activities

00:13:41,279 --> 00:13:45,040
that it's used to do you know from the

00:13:43,600 --> 00:13:47,360
day one

00:13:45,040 --> 00:13:48,320
so that's that's the my you know point

00:13:47,360 --> 00:13:52,160
that i want to

00:13:48,320 --> 00:13:54,880
you know okay so i'm curious then

00:13:52,160 --> 00:13:57,440
uh has it changed the developer

00:13:54,880 --> 00:14:00,240
experience at all

00:13:57,440 --> 00:14:02,000
no absolutely not so what we did you

00:14:00,240 --> 00:14:03,600
know we changed the architecture you

00:14:02,000 --> 00:14:06,079
know of our platform

00:14:03,600 --> 00:14:07,920
you know because of the kubernetes and

00:14:06,079 --> 00:14:10,959
the cloud foundry

00:14:07,920 --> 00:14:12,959
but developer experience uh you know

00:14:10,959 --> 00:14:14,000
is great and that that's the that's the

00:14:12,959 --> 00:14:16,399
main reason

00:14:14,000 --> 00:14:18,399
you know we are with the cloud foundry

00:14:16,399 --> 00:14:20,399
and the enterprise get cloud foundry

00:14:18,399 --> 00:14:22,399
offered by the ibm

00:14:20,399 --> 00:14:24,639
because we want our developer should

00:14:22,399 --> 00:14:26,399
only focus on the business logic

00:14:24,639 --> 00:14:28,720
and they should not focus on the rest of

00:14:26,399 --> 00:14:31,360
the all management activities

00:14:28,720 --> 00:14:32,720
right so so we need a you know a pretty

00:14:31,360 --> 00:14:35,600
good amount of balance

00:14:32,720 --> 00:14:37,440
you know between those and we don't want

00:14:35,600 --> 00:14:38,240
to lose the developer experience because

00:14:37,440 --> 00:14:40,480
we have

00:14:38,240 --> 00:14:41,920
in our platform we are working with

00:14:40,480 --> 00:14:44,079
multiple technologies

00:14:41,920 --> 00:14:45,680
and technologies are changing you know

00:14:44,079 --> 00:14:49,120
every day and every

00:14:45,680 --> 00:14:50,320
hour you can see and and and you know we

00:14:49,120 --> 00:14:52,800
don't want to spend

00:14:50,320 --> 00:14:54,160
more time on managing the infrastructure

00:14:52,800 --> 00:14:56,079
and bringing the services up and

00:14:54,160 --> 00:14:57,760
integrating that

00:14:56,079 --> 00:14:59,760
so so that's the beauty of the cloud

00:14:57,760 --> 00:15:02,480
foundry and you know

00:14:59,760 --> 00:15:03,600
we are really fan of that and we are one

00:15:02,480 --> 00:15:05,440
of the you know

00:15:03,600 --> 00:15:08,240
great promoters and admirers of the

00:15:05,440 --> 00:15:10,639
cloud foundry from the india and

00:15:08,240 --> 00:15:11,279
region level and happiest minds is

00:15:10,639 --> 00:15:14,240
really

00:15:11,279 --> 00:15:14,639
great fan of cloud foundry and and you

00:15:14,240 --> 00:15:16,560
know

00:15:14,639 --> 00:15:17,680
that we we have received all the

00:15:16,560 --> 00:15:20,320
opportunities from

00:15:17,680 --> 00:15:21,760
you know ibm you know to work on that

00:15:20,320 --> 00:15:23,360
well thank you lee yeah

00:15:21,760 --> 00:15:25,199
you're shaking your head i can see you

00:15:23,360 --> 00:15:27,360
through our kind of our recording here

00:15:25,199 --> 00:15:30,320
we're doing via zoom and you're like

00:15:27,360 --> 00:15:32,079
you've been very much kind of uh in uh

00:15:30,320 --> 00:15:32,720
concert i think with what's being said

00:15:32,079 --> 00:15:35,920
here

00:15:32,720 --> 00:15:38,800
and i didn't ask you about kubernetes

00:15:35,920 --> 00:15:39,199
and what's the blend there what is the

00:15:38,800 --> 00:15:41,839
you know

00:15:39,199 --> 00:15:43,040
and and what it may not pose a challenge

00:15:41,839 --> 00:15:44,880
for the devs because you're just trying

00:15:43,040 --> 00:15:46,880
to shield everything from the devs

00:15:44,880 --> 00:15:48,240
but what challenges does it put on on

00:15:46,880 --> 00:15:49,920
you when you're thinking about the

00:15:48,240 --> 00:15:51,600
architecture and you're making

00:15:49,920 --> 00:15:55,199
you know so you can't actually build a

00:15:51,600 --> 00:15:57,920
cobot app in a matter of five days or so

00:15:55,199 --> 00:15:59,040
so at the moment our cloud foundry is

00:15:57,920 --> 00:16:02,000
cloud foundry

00:15:59,040 --> 00:16:04,320
on vms okay so we're still bosh

00:16:02,000 --> 00:16:08,240
orientated at the moment

00:16:04,320 --> 00:16:11,360
we have also have had and still um have

00:16:08,240 --> 00:16:12,959
in production a separate kubernetes uh

00:16:11,360 --> 00:16:14,320
platform as well that isn't cloud

00:16:12,959 --> 00:16:16,519
foundry at all

00:16:14,320 --> 00:16:18,079
uh that was spun up for some very unique

00:16:16,519 --> 00:16:21,680
circumstances

00:16:18,079 --> 00:16:24,800
um we're you know

00:16:21,680 --> 00:16:27,440
really cloud foundry is is our way in

00:16:24,800 --> 00:16:28,800
the decision that we've got to make and

00:16:27,440 --> 00:16:30,959
this is the bit that i'm

00:16:28,800 --> 00:16:33,839
wrangling with at the moment is how do

00:16:30,959 --> 00:16:36,399
we get to cloud foundry in kubernetes

00:16:33,839 --> 00:16:37,120
so we've got hundreds and hundreds of

00:16:36,399 --> 00:16:39,279
users

00:16:37,120 --> 00:16:40,320
on our platform we've got live

00:16:39,279 --> 00:16:43,759
applications

00:16:40,320 --> 00:16:47,040
all over the cf cube

00:16:43,759 --> 00:16:47,519
oh sorry cube cf that's one way of doing

00:16:47,040 --> 00:16:51,040
things

00:16:47,519 --> 00:16:52,160
there's cf for k-8 that's the other way

00:16:51,040 --> 00:16:55,519
of doing things

00:16:52,160 --> 00:16:58,800
do we try and migrate our existing

00:16:55,519 --> 00:16:59,680
bosch implementation over or do we start

00:16:58,800 --> 00:17:03,040
afresh

00:16:59,680 --> 00:17:04,000
on a you know vanilla kubernetes

00:17:03,040 --> 00:17:06,240
platform

00:17:04,000 --> 00:17:08,400
and bring the cloud foundry experience

00:17:06,240 --> 00:17:10,000
to it that way

00:17:08,400 --> 00:17:11,760
that developer experience is something

00:17:10,000 --> 00:17:13,679
that we can't compromise on

00:17:11,760 --> 00:17:15,520
at all with our user base they

00:17:13,679 --> 00:17:18,319
absolutely love it

00:17:15,520 --> 00:17:19,520
it's so simple cf push run my

00:17:18,319 --> 00:17:21,839
application

00:17:19,520 --> 00:17:23,600
i don't have to consider anything else

00:17:21,839 --> 00:17:25,120
and that is the real winning thing of

00:17:23,600 --> 00:17:27,280
cloud foundry

00:17:25,120 --> 00:17:28,799
bare metal kubernetes it gives

00:17:27,280 --> 00:17:30,400
developers

00:17:28,799 --> 00:17:32,000
a length of rope that they can tie

00:17:30,400 --> 00:17:33,840
themselves in knots with

00:17:32,000 --> 00:17:36,400
you can't do that with cloud foundry and

00:17:33,840 --> 00:17:37,840
that's where it really wins

00:17:36,400 --> 00:17:39,760
so why would you even consider

00:17:37,840 --> 00:17:42,880
kubernetes

00:17:39,760 --> 00:17:46,320
because from an operational perspective

00:17:42,880 --> 00:17:48,720
it gives us a lot more flexibility

00:17:46,320 --> 00:17:50,880
we can do more things with it that we

00:17:48,720 --> 00:17:52,720
can't do currently with bosch

00:17:50,880 --> 00:17:54,480
and the other thing is it's definitely

00:17:52,720 --> 00:17:55,200
the direction that the foundation is

00:17:54,480 --> 00:17:58,799
going in

00:17:55,200 --> 00:17:58,799
and we don't want to be left behind

00:17:58,880 --> 00:18:03,039
so greg have you moved over to

00:18:00,400 --> 00:18:05,360
kubernetes

00:18:03,039 --> 00:18:06,880
yeah so we uh we run most of our

00:18:05,360 --> 00:18:10,000
workloads in cloud foundry

00:18:06,880 --> 00:18:10,960
uh we've started an effort uh this year

00:18:10,000 --> 00:18:14,559
actually moving

00:18:10,960 --> 00:18:16,240
our services over to kubernetes

00:18:14,559 --> 00:18:17,600
um but again from a developer

00:18:16,240 --> 00:18:20,640
perspective that's

00:18:17,600 --> 00:18:23,919
invisible right so we're using

00:18:20,640 --> 00:18:25,840
kubernetes for the service instances

00:18:23,919 --> 00:18:27,280
and then we're using you know the

00:18:25,840 --> 00:18:30,640
traditional cloud foundry

00:18:27,280 --> 00:18:32,960
for all the application instances

00:18:30,640 --> 00:18:33,919
and then you know we are using other

00:18:32,960 --> 00:18:36,320
open source

00:18:33,919 --> 00:18:37,440
technology to provide a ubiquitous

00:18:36,320 --> 00:18:39,280
marketplace

00:18:37,440 --> 00:18:41,440
because again we don't want the

00:18:39,280 --> 00:18:43,520
developers to have to care

00:18:41,440 --> 00:18:45,840
whether different workloads are running

00:18:43,520 --> 00:18:46,400
in cloud foundry or in kubernetes right

00:18:45,840 --> 00:18:49,200
so

00:18:46,400 --> 00:18:49,520
you know just like lee and rk have said

00:18:49,200 --> 00:18:52,160
uh

00:18:49,520 --> 00:18:52,799
the developer experience is you know

00:18:52,160 --> 00:18:56,160
sacred

00:18:52,799 --> 00:18:59,280
and that you know is the expectation

00:18:56,160 --> 00:19:02,160
that our devs have um so for us

00:18:59,280 --> 00:19:02,799
you know we're already moving components

00:19:02,160 --> 00:19:05,039
over to

00:19:02,799 --> 00:19:06,640
kubernetes that makes sense and then

00:19:05,039 --> 00:19:08,559
once uh

00:19:06,640 --> 00:19:10,240
you know we're ready to start to move

00:19:08,559 --> 00:19:12,320
some of the runtime components

00:19:10,240 --> 00:19:14,320
you know we're definitely excited about

00:19:12,320 --> 00:19:17,600
the cf for cates and

00:19:14,320 --> 00:19:20,000
a lot of the simplification

00:19:17,600 --> 00:19:21,200
and you know there's other components

00:19:20,000 --> 00:19:23,120
like you have mentioned

00:19:21,200 --> 00:19:24,640
around istio so we're working on a

00:19:23,120 --> 00:19:27,919
prototype

00:19:24,640 --> 00:19:30,880
for global ingress using istio

00:19:27,919 --> 00:19:31,520
which helps us you know remove our ha

00:19:30,880 --> 00:19:34,240
proxy

00:19:31,520 --> 00:19:35,679
and go router tier so that's something

00:19:34,240 --> 00:19:37,520
that we're going to share

00:19:35,679 --> 00:19:39,919
and get feedback we want to get feedback

00:19:37,520 --> 00:19:42,720
for uh with the community and

00:19:39,919 --> 00:19:43,919
our next the next cab call um so

00:19:42,720 --> 00:19:47,280
shameless plug for that

00:19:43,919 --> 00:19:49,679
we're excited about it um so you know we

00:19:47,280 --> 00:19:51,280
definitely embraced the change

00:19:49,679 --> 00:19:53,840
and we've been moving some of those

00:19:51,280 --> 00:19:54,559
things more slowly so we don't look at

00:19:53,840 --> 00:19:56,400
it as a

00:19:54,559 --> 00:19:59,200
as a big bang and just you know we're

00:19:56,400 --> 00:20:01,280
moving to kubernetes for kubernetes sake

00:19:59,200 --> 00:20:02,880
exposing you know the dumbest thing i

00:20:01,280 --> 00:20:05,200
think that we could do is just expose

00:20:02,880 --> 00:20:08,640
raw kubernetes to the developers

00:20:05,200 --> 00:20:09,679
um that you know that would be in stark

00:20:08,640 --> 00:20:11,919
contrast

00:20:09,679 --> 00:20:14,080
to you know the platform experience they

00:20:11,919 --> 00:20:16,640
get with cf push

00:20:14,080 --> 00:20:17,760
so we're excited to extend that cf push

00:20:16,640 --> 00:20:20,720
experience

00:20:17,760 --> 00:20:20,720
to kubernetes

00:20:21,120 --> 00:20:24,159
and so how do you continue to protect

00:20:22,960 --> 00:20:26,400
them then how

00:20:24,159 --> 00:20:28,480
you know is that really then the desired

00:20:26,400 --> 00:20:29,440
state to keep that developer experience

00:20:28,480 --> 00:20:32,559
pure

00:20:29,440 --> 00:20:35,039
and how do you manage that

00:20:32,559 --> 00:20:36,799
but also um using kind of the full

00:20:35,039 --> 00:20:37,440
capability of the services that are

00:20:36,799 --> 00:20:40,159
available

00:20:37,440 --> 00:20:42,159
so you can do better for instance

00:20:40,159 --> 00:20:42,960
observability across a distributed

00:20:42,159 --> 00:20:45,200
architecture

00:20:42,960 --> 00:20:46,799
and and you know and use the other kind

00:20:45,200 --> 00:20:50,880
of capabilities that come with

00:20:46,799 --> 00:20:53,280
more immutable style environments

00:20:50,880 --> 00:20:54,880
yeah it's it's using the right tools for

00:20:53,280 --> 00:20:57,919
the right job at the moment

00:20:54,880 --> 00:21:01,200
and you know as uh as

00:20:57,919 --> 00:21:02,000
different capabilities emerge you know

00:21:01,200 --> 00:21:04,880
that the

00:21:02,000 --> 00:21:06,480
cloud foundry had to create initially

00:21:04,880 --> 00:21:08,640
you know when it makes sense

00:21:06,480 --> 00:21:10,480
you know the the foundation and the

00:21:08,640 --> 00:21:13,039
community moves

00:21:10,480 --> 00:21:13,600
those components you know out and you

00:21:13,039 --> 00:21:15,840
know

00:21:13,600 --> 00:21:18,159
embraces the new new components and we

00:21:15,840 --> 00:21:20,960
take very much the same approach so

00:21:18,159 --> 00:21:22,559
again providing a ubiquitous marketplace

00:21:20,960 --> 00:21:23,440
that the developers don't have to care

00:21:22,559 --> 00:21:26,400
about

00:21:23,440 --> 00:21:27,760
our applications are distributed across

00:21:26,400 --> 00:21:30,880
uh

00:21:27,760 --> 00:21:32,960
you know dozens of uh of

00:21:30,880 --> 00:21:35,200
regions and availability zones and cloud

00:21:32,960 --> 00:21:37,919
providers uh so making that

00:21:35,200 --> 00:21:39,760
you know as simple and easy you know for

00:21:37,919 --> 00:21:41,840
the for the developers using

00:21:39,760 --> 00:21:43,760
you know using the tools that that we

00:21:41,840 --> 00:21:46,799
have available

00:21:43,760 --> 00:21:50,320
okay is this a challenge for you uh

00:21:46,799 --> 00:21:54,559
at all is there or you know

00:21:50,320 --> 00:21:56,400
is there a way that you're

00:21:54,559 --> 00:21:58,960
are there some warning signs that you're

00:21:56,400 --> 00:22:02,240
looking at are there some

00:21:58,960 --> 00:22:05,520
potential issues you're looking to

00:22:02,240 --> 00:22:09,679
circumvent so

00:22:05,520 --> 00:22:12,400
related with the cloud foundry and

00:22:09,679 --> 00:22:14,240
and kubernetes okay i don't see any

00:22:12,400 --> 00:22:18,000
potential challenge because

00:22:14,240 --> 00:22:20,000
kubernetes and cloud foundry you know

00:22:18,000 --> 00:22:21,840
functionally there is overlap but

00:22:20,000 --> 00:22:23,360
architecturally there is a change they

00:22:21,840 --> 00:22:26,559
have their own objectives

00:22:23,360 --> 00:22:28,640
they have their own you know own target

00:22:26,559 --> 00:22:31,600
to fulfill and they will continue to

00:22:28,640 --> 00:22:32,720
do and the way the cloud foundry and the

00:22:31,600 --> 00:22:35,039
kubernetes

00:22:32,720 --> 00:22:36,080
marriage is happening you know in

00:22:35,039 --> 00:22:38,960
happening

00:22:36,080 --> 00:22:40,240
so that part will be solved but when the

00:22:38,960 --> 00:22:42,799
cloud foundry platform

00:22:40,240 --> 00:22:44,640
when we bring to the enterprise you know

00:22:42,799 --> 00:22:47,679
enterprise grid

00:22:44,640 --> 00:22:49,440
and the one of the challenge you know

00:22:47,679 --> 00:22:51,760
that would like to highlight

00:22:49,440 --> 00:22:52,640
probably everybody should work on that

00:22:51,760 --> 00:22:54,960
that when

00:22:52,640 --> 00:22:55,919
the cloud foundry in one of the region

00:22:54,960 --> 00:22:58,720
goes down

00:22:55,919 --> 00:22:59,520
right so then we have to you know route

00:22:58,720 --> 00:23:02,320
it

00:22:59,520 --> 00:23:03,760
we have to route it to the other region

00:23:02,320 --> 00:23:06,240
and then we have to

00:23:03,760 --> 00:23:08,960
believe or we have to rely on some

00:23:06,240 --> 00:23:12,720
external global load balancer

00:23:08,960 --> 00:23:15,360
if you see the you know kubernetes

00:23:12,720 --> 00:23:15,760
in kubernetes you know we can do some of

00:23:15,360 --> 00:23:17,760
the

00:23:15,760 --> 00:23:20,000
multi-cluster deployment in the multi

00:23:17,760 --> 00:23:22,159
region so if we can bring

00:23:20,000 --> 00:23:24,080
you know if we can bring you know some

00:23:22,159 --> 00:23:27,120
of the functionalities here

00:23:24,080 --> 00:23:28,880
and do some marriage so that we don't

00:23:27,120 --> 00:23:31,520
have to borrow a global

00:23:28,880 --> 00:23:32,640
load balancer from the outside vendor

00:23:31,520 --> 00:23:35,760
and make it compatible

00:23:32,640 --> 00:23:36,880
it's a huge challenge so if it can be

00:23:35,760 --> 00:23:39,840
boxed

00:23:36,880 --> 00:23:40,400
under the platform and you just click

00:23:39,840 --> 00:23:42,960
right

00:23:40,400 --> 00:23:43,919
so you create a you know cloud foundry

00:23:42,960 --> 00:23:46,480
you know

00:23:43,919 --> 00:23:48,159
instance in dallas as well as you're

00:23:46,480 --> 00:23:50,240
creating the uk region

00:23:48,159 --> 00:23:52,000
and the external load balancer which is

00:23:50,240 --> 00:23:54,400
tightly coupled

00:23:52,000 --> 00:23:55,520
with the entire ecosystem will do the

00:23:54,400 --> 00:23:57,520
magic for you

00:23:55,520 --> 00:23:59,840
the developer will experience will be

00:23:57,520 --> 00:24:03,120
multiple that i can guarantee

00:23:59,840 --> 00:24:04,000
this is my experience for last six years

00:24:03,120 --> 00:24:07,039
working on the cloud

00:24:04,000 --> 00:24:09,919
foundry and i'm sure that

00:24:07,039 --> 00:24:10,559
all the panels here they will agree with

00:24:09,919 --> 00:24:14,480
me

00:24:10,559 --> 00:24:16,880
so rest all are amazing

00:24:14,480 --> 00:24:18,000
totally agree so rk uh definitely want

00:24:16,880 --> 00:24:20,880
to make sure that you're going

00:24:18,000 --> 00:24:21,760
to attend uh or and join us and

00:24:20,880 --> 00:24:23,760
collaborate

00:24:21,760 --> 00:24:25,679
on the global ingress that we're working

00:24:23,760 --> 00:24:27,120
on because it it helps solve some of the

00:24:25,679 --> 00:24:28,960
problems that you're describing

00:24:27,120 --> 00:24:30,400
well that's that's great yeah definitely

00:24:28,960 --> 00:24:32,559
will connect to you and

00:24:30,400 --> 00:24:33,600
we'll just you know get some of the

00:24:32,559 --> 00:24:35,679
inputs

00:24:33,600 --> 00:24:37,200
and to see that how we can bring over

00:24:35,679 --> 00:24:40,320
here in our platform

00:24:37,200 --> 00:24:43,440
in happiest minds and our dcm platform

00:24:40,320 --> 00:24:45,360
thanks greg for great input yeah

00:24:43,440 --> 00:24:47,840
yeah greg i'm looking forward to using

00:24:45,360 --> 00:24:47,840
that as well

00:24:49,360 --> 00:24:54,000
i like about this community right the

00:24:52,159 --> 00:24:57,520
connecting people together

00:24:54,000 --> 00:25:00,159
and uh leveraging group iq uh

00:24:57,520 --> 00:25:00,640
so it's been a very open welcoming very

00:25:00,159 --> 00:25:04,000
warm

00:25:00,640 --> 00:25:06,720
community very people focused and uh

00:25:04,000 --> 00:25:08,000
you know so appreciate you getting this

00:25:06,720 --> 00:25:09,200
panel together and we're already

00:25:08,000 --> 00:25:12,720
collaborating

00:25:09,200 --> 00:25:15,039
well well done sir thank you so lee why

00:25:12,720 --> 00:25:16,480
why what's going on now why why would

00:25:15,039 --> 00:25:19,760
you be looking forward to

00:25:16,480 --> 00:25:21,600
that discussion with uh greg and rk what

00:25:19,760 --> 00:25:23,039
was what's happening like why do you

00:25:21,600 --> 00:25:25,120
need it well

00:25:23,039 --> 00:25:26,960
that's going to help simplify things for

00:25:25,120 --> 00:25:29,039
a lot of our developers

00:25:26,960 --> 00:25:30,159
they're going to have to spend less time

00:25:29,039 --> 00:25:32,960
thinking about

00:25:30,159 --> 00:25:34,480
what happens if this region goes down

00:25:32,960 --> 00:25:38,000
how am i going to

00:25:34,480 --> 00:25:40,240
be available all the time

00:25:38,000 --> 00:25:43,279
again it's just increasing that cloud

00:25:40,240 --> 00:25:45,520
foundry keep it simple for the developer

00:25:43,279 --> 00:25:46,880
take the hard work away they can focus

00:25:45,520 --> 00:25:47,520
on the thing they're really good at

00:25:46,880 --> 00:25:49,679
which is

00:25:47,520 --> 00:25:50,640
writing the code how do you manage it

00:25:49,679 --> 00:25:53,360
now

00:25:50,640 --> 00:25:54,240
how do you manage it now at the moment

00:25:53,360 --> 00:25:56,320
we have

00:25:54,240 --> 00:25:59,440
teams of people whose job it is to

00:25:56,320 --> 00:26:01,600
actually do all that architecture work

00:25:59,440 --> 00:26:03,760
we can free them up they can be a lot

00:26:01,600 --> 00:26:05,440
more creative with other things

00:26:03,760 --> 00:26:08,240
and solve those problems that are going

00:26:05,440 --> 00:26:10,320
to help our end-end users i.e

00:26:08,240 --> 00:26:13,440
citizens of the uk and people around the

00:26:10,320 --> 00:26:15,840
globe their needs

00:26:13,440 --> 00:26:16,480
what's the creativity for instance greg

00:26:15,840 --> 00:26:19,440
that

00:26:16,480 --> 00:26:21,679
can come with a global ingress that that

00:26:19,440 --> 00:26:24,720
you see as potential

00:26:21,679 --> 00:26:26,400
for your teams yeah i mean i think it's

00:26:24,720 --> 00:26:29,520
like what lee said i mean the way

00:26:26,400 --> 00:26:30,960
the way that we manage that now is we

00:26:29,520 --> 00:26:32,720
we've created a

00:26:30,960 --> 00:26:34,400
global load balancing as a service

00:26:32,720 --> 00:26:37,200
working with our

00:26:34,400 --> 00:26:37,679
friends on our network team um so it's a

00:26:37,200 --> 00:26:40,720
cf

00:26:37,679 --> 00:26:42,240
service create very simple for uh the

00:26:40,720 --> 00:26:43,919
developers but when you start to

00:26:42,240 --> 00:26:47,039
distribute your application

00:26:43,919 --> 00:26:50,080
over you know larger numbers of uh

00:26:47,039 --> 00:26:53,679
regions and so forth this allows

00:26:50,080 --> 00:26:54,080
you know the our team to uh to benefit

00:26:53,679 --> 00:26:56,080
from

00:26:54,080 --> 00:26:58,559
you know the work being done in the sdo

00:26:56,080 --> 00:27:00,159
community and then again it allows the

00:26:58,559 --> 00:27:03,440
development teams to have a

00:27:00,159 --> 00:27:04,559
much more control over traffic shaping

00:27:03,440 --> 00:27:07,120
their application

00:27:04,559 --> 00:27:08,960
than what they do now so it's you know

00:27:07,120 --> 00:27:11,120
it's faster cheaper and better

00:27:08,960 --> 00:27:14,400
so you get all three so that that's kind

00:27:11,120 --> 00:27:14,400
of why we're excited about it

00:27:15,600 --> 00:27:20,000
rk when you think about your teams and

00:27:18,720 --> 00:27:24,080
the people who are on your

00:27:20,000 --> 00:27:25,520
teams you know what if they you know

00:27:24,080 --> 00:27:27,760
what if they start complaining about

00:27:25,520 --> 00:27:30,080
latency what if they started

00:27:27,760 --> 00:27:30,799
complaining about uh throughput for

00:27:30,080 --> 00:27:34,000
instance

00:27:30,799 --> 00:27:35,760
and um they started asking well what

00:27:34,000 --> 00:27:38,159
about this istio thing isn't it just a

00:27:35,760 --> 00:27:39,440
tax isn't it just attacks on the network

00:27:38,159 --> 00:27:42,240
and shouldn't we just be

00:27:39,440 --> 00:27:43,840
like doing something else i mean how do

00:27:42,240 --> 00:27:46,399
you how do you work with the devs who

00:27:43,840 --> 00:27:48,399
who might get cranky

00:27:46,399 --> 00:27:50,799
yeah thanks you know that's a great

00:27:48,399 --> 00:27:52,799
question because latency is a you know

00:27:50,799 --> 00:27:54,399
is a very generic problem that needs to

00:27:52,799 --> 00:27:57,679
be addressed by the architecture

00:27:54,399 --> 00:28:00,320
i mean nothing to do with the you know

00:27:57,679 --> 00:28:01,440
the specific platform itself so for

00:28:00,320 --> 00:28:03,760
example you know

00:28:01,440 --> 00:28:05,200
as we mentioned that our entire platform

00:28:03,760 --> 00:28:06,559
is based on the micro services

00:28:05,200 --> 00:28:08,320
architecture

00:28:06,559 --> 00:28:10,159
and cloud foundry is all about the

00:28:08,320 --> 00:28:14,240
application code right

00:28:10,159 --> 00:28:16,880
so now the question is that if my user

00:28:14,240 --> 00:28:18,240
is hosted or accessing the platform from

00:28:16,880 --> 00:28:20,000
oceania region

00:28:18,240 --> 00:28:22,240
the micro services will be hosted over

00:28:20,000 --> 00:28:24,080
there and not the micro services the

00:28:22,240 --> 00:28:24,880
associated data will be also hosted up

00:28:24,080 --> 00:28:28,399
there

00:28:24,880 --> 00:28:30,480
so i cannot tell my user

00:28:28,399 --> 00:28:32,559
or the through the global load balancer

00:28:30,480 --> 00:28:34,320
they will reach to the oceania region

00:28:32,559 --> 00:28:36,240
they will access the application code

00:28:34,320 --> 00:28:37,200
and for the data they should go to the

00:28:36,240 --> 00:28:39,840
you know us

00:28:37,200 --> 00:28:40,799
the latency will exist so that problem

00:28:39,840 --> 00:28:42,240
should

00:28:40,799 --> 00:28:44,960
you know we should solve the problem in

00:28:42,240 --> 00:28:46,960
the architectural the beauty will be the

00:28:44,960 --> 00:28:50,080
marriage of the kubernetes platform

00:28:46,960 --> 00:28:52,159
and this cloud foundry should be

00:28:50,080 --> 00:28:53,919
does the service will put it into the

00:28:52,159 --> 00:28:55,919
that is the application code will put it

00:28:53,919 --> 00:28:58,240
into the cloud foundry

00:28:55,919 --> 00:29:00,399
and why don't we create a underlying

00:28:58,240 --> 00:29:02,480
docker image of the service and can bind

00:29:00,399 --> 00:29:04,399
and put it into the same region

00:29:02,480 --> 00:29:05,520
for example you know you need a

00:29:04,399 --> 00:29:08,480
microservice

00:29:05,520 --> 00:29:09,840
that needs to operate on a mongodb or

00:29:08,480 --> 00:29:13,039
elasticsearch

00:29:09,840 --> 00:29:16,080
or some ml service so enter thing

00:29:13,039 --> 00:29:18,320
needs to be packaged so it means it i

00:29:16,080 --> 00:29:18,799
mean cloud foundry and kubernetes can do

00:29:18,320 --> 00:29:20,799
that

00:29:18,799 --> 00:29:21,840
so the cloud foundry you know

00:29:20,799 --> 00:29:24,480
application

00:29:21,840 --> 00:29:26,080
as well as the postgresql docker that

00:29:24,480 --> 00:29:27,200
should be that should reside in the

00:29:26,080 --> 00:29:30,320
oceania region

00:29:27,200 --> 00:29:32,000
or u.s region if a user calls the

00:29:30,320 --> 00:29:34,399
service or the application

00:29:32,000 --> 00:29:35,919
it should be routed over there so so

00:29:34,399 --> 00:29:38,240
basically you know it should be

00:29:35,919 --> 00:29:38,960
active active load balancing it will

00:29:38,240 --> 00:29:42,240
serve the

00:29:38,960 --> 00:29:44,880
two purpose one is your failover

00:29:42,240 --> 00:29:46,080
if one region is down your user will not

00:29:44,880 --> 00:29:49,039
be impacted

00:29:46,080 --> 00:29:50,320
and second one is the you know easy

00:29:49,039 --> 00:29:52,720
access

00:29:50,320 --> 00:29:53,600
reducing the performance increasing the

00:29:52,720 --> 00:29:56,159
performance

00:29:53,600 --> 00:29:56,799
and you know reducing the latency so

00:29:56,159 --> 00:29:59,440
that

00:29:56,799 --> 00:30:00,320
a user on a specific region will be able

00:29:59,440 --> 00:30:02,399
to the service

00:30:00,320 --> 00:30:04,159
hosted over there so that is the

00:30:02,399 --> 00:30:05,200
architecture pattern architecture goal

00:30:04,159 --> 00:30:07,120
we have

00:30:05,200 --> 00:30:09,120
we still do have some transition

00:30:07,120 --> 00:30:10,720
architectures are rolling out

00:30:09,120 --> 00:30:12,880
the objective is that we have to reach

00:30:10,720 --> 00:30:16,240
to the target architecture state

00:30:12,880 --> 00:30:17,679
and the way cloud foundry and kubernetes

00:30:16,240 --> 00:30:19,440
marriage will help us

00:30:17,679 --> 00:30:21,760
in future along with the global load

00:30:19,440 --> 00:30:24,000
balancer availability of that

00:30:21,760 --> 00:30:26,080
will be able to reach to the state very

00:30:24,000 --> 00:30:28,559
quickly so that is the expectation from

00:30:26,080 --> 00:30:31,520
the community

00:30:28,559 --> 00:30:32,559
okay i'm going to be really interested

00:30:31,520 --> 00:30:35,679
if you can

00:30:32,559 --> 00:30:38,760
share a bit of insight around how you're

00:30:35,679 --> 00:30:40,480
doing your data your backing data store

00:30:38,760 --> 00:30:42,880
reconciliation

00:30:40,480 --> 00:30:45,760
across when you're looking globally for

00:30:42,880 --> 00:30:49,360
local databases

00:30:45,760 --> 00:30:50,559
yeah so absolutely so so now the data is

00:30:49,360 --> 00:30:53,600
hosted in the us

00:30:50,559 --> 00:30:54,240
right so the cloud foundry apps are

00:30:53,600 --> 00:30:56,559
there

00:30:54,240 --> 00:30:58,320
they are accessing the data of compose

00:30:56,559 --> 00:31:00,399
you know which is basically

00:30:58,320 --> 00:31:03,039
you know now we are using the ibm

00:31:00,399 --> 00:31:06,480
platform it is the icd databases

00:31:03,039 --> 00:31:09,039
so to do the microservices architecture

00:31:06,480 --> 00:31:11,039
i cannot spawn multiples compost

00:31:09,039 --> 00:31:13,919
postgresql or multiple

00:31:11,039 --> 00:31:15,440
you know mongodb to serve 30 you know

00:31:13,919 --> 00:31:17,519
microservices

00:31:15,440 --> 00:31:18,880
i have to create a one schema and under

00:31:17,519 --> 00:31:22,480
word schema we have to create

00:31:18,880 --> 00:31:25,679
independent tables to handle that right

00:31:22,480 --> 00:31:27,519
and if i bring the postgresql instance

00:31:25,679 --> 00:31:30,960
same instance in oceania region

00:31:27,519 --> 00:31:32,000
i have to write a pipe or i have to go

00:31:30,960 --> 00:31:35,120
for a very costly

00:31:32,000 --> 00:31:36,559
service like cosmos db or something that

00:31:35,120 --> 00:31:37,679
will do all the replication

00:31:36,559 --> 00:31:40,960
automatically

00:31:37,679 --> 00:31:43,840
yeah so if we have you know

00:31:40,960 --> 00:31:44,720
the kubernetes and the pipe can be

00:31:43,840 --> 00:31:47,039
developed

00:31:44,720 --> 00:31:48,000
you know so that will be a great job so

00:31:47,039 --> 00:31:49,840
i don't have to

00:31:48,000 --> 00:31:51,039
you know handle the data replication

00:31:49,840 --> 00:31:53,120
also

00:31:51,039 --> 00:31:55,039
so achieving a true micro services

00:31:53,120 --> 00:31:56,799
architecture with all the available

00:31:55,039 --> 00:31:59,279
technologies

00:31:56,799 --> 00:32:00,000
what i personally believe it is not

00:31:59,279 --> 00:32:02,960
hundred percent

00:32:00,000 --> 00:32:03,919
complete right so what martin fuller you

00:32:02,960 --> 00:32:06,320
know

00:32:03,919 --> 00:32:08,399
viewed during the first day of the

00:32:06,320 --> 00:32:11,440
microservices introduction

00:32:08,399 --> 00:32:12,799
that is yet to go so we are compromising

00:32:11,440 --> 00:32:14,399
because of the technology

00:32:12,799 --> 00:32:16,320
as soon as com technologies will be

00:32:14,399 --> 00:32:19,440
available we'll be able to

00:32:16,320 --> 00:32:21,840
you know achieve the thing gosh

00:32:19,440 --> 00:32:22,720
it's a fascinating time in many ways i

00:32:21,840 --> 00:32:24,640
mean uh

00:32:22,720 --> 00:32:27,039
i won't even get into this but i've been

00:32:24,640 --> 00:32:28,240
like researching smartnics lately and

00:32:27,039 --> 00:32:30,480
and how they can be used for

00:32:28,240 --> 00:32:32,159
cryptographic operations and be used

00:32:30,480 --> 00:32:34,720
kind of as an offload

00:32:32,159 --> 00:32:35,440
mechanism but greg i want to turn this

00:32:34,720 --> 00:32:38,000
back to you

00:32:35,440 --> 00:32:39,679
and and we've only got a few minutes

00:32:38,000 --> 00:32:40,559
left but i could have this conversation

00:32:39,679 --> 00:32:43,039
all day

00:32:40,559 --> 00:32:43,760
uh with you on thinking through uh

00:32:43,039 --> 00:32:46,880
matters

00:32:43,760 --> 00:32:49,519
related to latency to throughput um

00:32:46,880 --> 00:32:51,039
to peak capacity which is gonna happen i

00:32:49,519 --> 00:32:53,039
mean we're you know the

00:32:51,039 --> 00:32:54,640
that that the you know these new

00:32:53,039 --> 00:32:58,880
services just don't like

00:32:54,640 --> 00:33:01,840
um there's not a zero cost here there

00:32:58,880 --> 00:33:03,519
there's a lot of new uh overhead that

00:33:01,840 --> 00:33:03,840
that comes with it now may you maybe

00:33:03,519 --> 00:33:05,840
have

00:33:03,840 --> 00:33:07,600
fewer vms that you need to use for

00:33:05,840 --> 00:33:10,720
instance but

00:33:07,600 --> 00:33:12,320
you know that that might be then changed

00:33:10,720 --> 00:33:13,840
by the number of containers you're

00:33:12,320 --> 00:33:16,000
hosting or

00:33:13,840 --> 00:33:18,320
or you know you know you know with

00:33:16,000 --> 00:33:21,440
limitless possibilities comes uh

00:33:18,320 --> 00:33:23,279
eventual peaks and so what's your

00:33:21,440 --> 00:33:25,279
you know what what's your outlook what

00:33:23,279 --> 00:33:27,440
are you thinking

00:33:25,279 --> 00:33:30,640
yeah so i mean we definitely encourage

00:33:27,440 --> 00:33:33,440
folks to use things like auto scaling

00:33:30,640 --> 00:33:35,200
so instead of designing for you know for

00:33:33,440 --> 00:33:37,760
peaks and then running at that

00:33:35,200 --> 00:33:38,399
um you know that's certainly not uh

00:33:37,760 --> 00:33:40,720
finance

00:33:38,399 --> 00:33:42,799
compliant so you know the auto scaling

00:33:40,720 --> 00:33:46,159
capabilities allows

00:33:42,799 --> 00:33:47,919
uh us to you know better utilize our our

00:33:46,159 --> 00:33:50,320
infrastructure

00:33:47,919 --> 00:33:51,600
and then a much higher distribution of

00:33:50,320 --> 00:33:54,480
applications

00:33:51,600 --> 00:33:55,440
right so instead of deploying say across

00:33:54,480 --> 00:33:57,600
two sites

00:33:55,440 --> 00:33:58,720
right where your blast radius is 50

00:33:57,600 --> 00:34:02,640
percent

00:33:58,720 --> 00:34:05,600
if any one site has a problem

00:34:02,640 --> 00:34:06,880
it also limits your maximum utilization

00:34:05,600 --> 00:34:09,040
of the assets so

00:34:06,880 --> 00:34:10,639
by moving to a more highly distributed

00:34:09,040 --> 00:34:13,119
architecture where say you're

00:34:10,639 --> 00:34:14,879
you know in 10 sites running at 90 is

00:34:13,119 --> 00:34:16,960
then okay

00:34:14,879 --> 00:34:18,960
so there's some things that we do you

00:34:16,960 --> 00:34:21,599
know from that perspective

00:34:18,960 --> 00:34:22,800
as well as allowing folks to overflow

00:34:21,599 --> 00:34:24,639
into

00:34:22,800 --> 00:34:26,639
into the public cloud because again

00:34:24,639 --> 00:34:29,359
cloud foundry enables

00:34:26,639 --> 00:34:30,639
um you know portable workloads that are

00:34:29,359 --> 00:34:32,960
that are agnostic

00:34:30,639 --> 00:34:34,079
so you know running the right workload

00:34:32,960 --> 00:34:36,800
in the right environment

00:34:34,079 --> 00:34:37,520
the right time with auto scaling and

00:34:36,800 --> 00:34:40,000
some of those

00:34:37,520 --> 00:34:41,359
you know capabilities helps us but you

00:34:40,000 --> 00:34:44,560
know it's definitely a lot

00:34:41,359 --> 00:34:46,000
to you know manage and and keep track of

00:34:44,560 --> 00:34:48,720
it's not trivial by any

00:34:46,000 --> 00:34:49,839
by any stretch but things like auto

00:34:48,720 --> 00:34:52,240
scaling

00:34:49,839 --> 00:34:52,960
uh and self-healing and highly

00:34:52,240 --> 00:34:56,240
distributed

00:34:52,960 --> 00:34:58,480
you know architectures um along with

00:34:56,240 --> 00:34:59,440
you know some data caching uh

00:34:58,480 --> 00:35:02,079
capabilities

00:34:59,440 --> 00:35:02,880
allows us you know to be able to flex a

00:35:02,079 --> 00:35:04,640
little bit

00:35:02,880 --> 00:35:06,800
a little bit easier and and if there's

00:35:04,640 --> 00:35:08,079
any disruption you know kind of insulate

00:35:06,800 --> 00:35:11,040
from any impacts

00:35:08,079 --> 00:35:12,000
um you know we recently had you know big

00:35:11,040 --> 00:35:15,200
seasonal

00:35:12,000 --> 00:35:18,640
surge right so the nfl

00:35:15,200 --> 00:35:22,560
is is a huge you know

00:35:18,640 --> 00:35:25,280
uh viewership and uh the nfl red zone

00:35:22,560 --> 00:35:26,400
uh you know our application platforms

00:35:25,280 --> 00:35:28,320
can definitely tell you

00:35:26,400 --> 00:35:30,240
the first commercial that happened you

00:35:28,320 --> 00:35:31,520
know in the first game because that's

00:35:30,240 --> 00:35:34,079
typically when

00:35:31,520 --> 00:35:34,720
a lot of folks start to uh you know

00:35:34,079 --> 00:35:36,960
start to

00:35:34,720 --> 00:35:38,480
you know order certain services so those

00:35:36,960 --> 00:35:41,599
you know whether they're seasonal

00:35:38,480 --> 00:35:44,400
or even nightly um

00:35:41,599 --> 00:35:45,760
you know peaks and valleys uh you know

00:35:44,400 --> 00:35:48,079
those are definitely

00:35:45,760 --> 00:35:49,599
you know tough times and making sure

00:35:48,079 --> 00:35:52,160
that we're building more

00:35:49,599 --> 00:35:52,880
towards you know the averages and auto

00:35:52,160 --> 00:35:55,040
scaling

00:35:52,880 --> 00:35:57,200
um you know those are some of the things

00:35:55,040 --> 00:35:59,119
that that can help us

00:35:57,200 --> 00:36:01,119
so we have just a few minutes left so

00:35:59,119 --> 00:36:04,240
lee i'd like to ask you

00:36:01,119 --> 00:36:04,800
um kind of a little you know a summary

00:36:04,240 --> 00:36:06,880
of what

00:36:04,800 --> 00:36:08,480
you'd like to see from the community and

00:36:06,880 --> 00:36:10,160
global ingress seems to be a project

00:36:08,480 --> 00:36:12,079
that you're interested in

00:36:10,160 --> 00:36:13,359
and greg was just mentioning some issues

00:36:12,079 --> 00:36:14,720
if they're facing kind of the things

00:36:13,359 --> 00:36:16,079
that they're looking at

00:36:14,720 --> 00:36:17,680
what are some of the things you'd like

00:36:16,079 --> 00:36:19,040
to see from the community what is some

00:36:17,680 --> 00:36:20,560
of the things that you need to build

00:36:19,040 --> 00:36:22,079
into your own infrastructure

00:36:20,560 --> 00:36:23,920
to prepare you for the shift that you're

00:36:22,079 --> 00:36:27,119
going to be making

00:36:23,920 --> 00:36:30,560
so for us you know putting on

00:36:27,119 --> 00:36:33,440
my gds hat i'd like to see

00:36:30,560 --> 00:36:35,599
a convergence of the two different

00:36:33,440 --> 00:36:37,920
kubernetes and cloud foundry work

00:36:35,599 --> 00:36:40,800
streams that are going on into one

00:36:37,920 --> 00:36:41,359
solid blessed project because that's

00:36:40,800 --> 00:36:43,520
going to make

00:36:41,359 --> 00:36:44,400
making the decisions around which way to

00:36:43,520 --> 00:36:47,040
move forward

00:36:44,400 --> 00:36:48,960
an awful lot easier but one of the areas

00:36:47,040 --> 00:36:50,240
that i'm finding really interesting and

00:36:48,960 --> 00:36:53,440
exciting at the moment

00:36:50,240 --> 00:36:55,599
is chaos engineering because distributed

00:36:53,440 --> 00:36:58,560
systems architecting for failure

00:36:55,599 --> 00:37:00,640
is a key part of that it's not something

00:36:58,560 --> 00:37:01,119
that anyone's really looked at in a huge

00:37:00,640 --> 00:37:03,680
way

00:37:01,119 --> 00:37:04,480
in the cube in the um cloud foundry

00:37:03,680 --> 00:37:06,800
world

00:37:04,480 --> 00:37:09,040
and the idea of a chaos engineering

00:37:06,800 --> 00:37:12,640
broker where you can set up

00:37:09,040 --> 00:37:14,880
different um chaos engineering

00:37:12,640 --> 00:37:16,880
projects model things in different ways

00:37:14,880 --> 00:37:18,880
get your metrics back

00:37:16,880 --> 00:37:20,640
so that you can continually improve your

00:37:18,880 --> 00:37:22,160
service to make sure that you're highly

00:37:20,640 --> 00:37:24,000
available and resilient

00:37:22,160 --> 00:37:27,680
and you've covered all those bases would

00:37:24,000 --> 00:37:27,680
be a really great thing to see

00:37:27,839 --> 00:37:32,560
okay how about you one of the things

00:37:30,640 --> 00:37:34,880
i've heard was actually james governor

00:37:32,560 --> 00:37:38,000
was tweeting this uh

00:37:34,880 --> 00:37:41,040
about uh the idea of

00:37:38,000 --> 00:37:44,240
a build packs for instance and uh

00:37:41,040 --> 00:37:45,359
their uh their their their adaptability

00:37:44,240 --> 00:37:47,200
but i'm

00:37:45,359 --> 00:37:48,720
i'm just picking one thing out and what

00:37:47,200 --> 00:37:49,760
are you what are your thoughts are okay

00:37:48,720 --> 00:37:51,280
what

00:37:49,760 --> 00:37:52,800
what what do you want to see from this

00:37:51,280 --> 00:37:54,240
community what would you like to

00:37:52,800 --> 00:37:57,760
contribute to

00:37:54,240 --> 00:37:58,240
what's what's pressing so the pressing

00:37:57,760 --> 00:38:00,000
need

00:37:58,240 --> 00:38:01,599
you know from our organization and the

00:38:00,000 --> 00:38:04,400
platform is

00:38:01,599 --> 00:38:05,520
increasing the high availability so

00:38:04,400 --> 00:38:07,520
because most of the

00:38:05,520 --> 00:38:09,839
most of the time all the professional

00:38:07,520 --> 00:38:11,280
services they they are taking the cloud

00:38:09,839 --> 00:38:14,720
foundry

00:38:11,280 --> 00:38:17,200
they are giving a you know 99.95 percent

00:38:14,720 --> 00:38:19,200
you know availability but now the most

00:38:17,200 --> 00:38:20,800
of the digital applications

00:38:19,200 --> 00:38:22,160
they are looking very close to 100

00:38:20,800 --> 00:38:23,680
percent they are looking for

00:38:22,160 --> 00:38:24,880
availability high availability of

00:38:23,680 --> 00:38:27,200
hundred percent

00:38:24,880 --> 00:38:29,040
so there should be architecture very

00:38:27,200 --> 00:38:29,680
easy and flexible architecture they

00:38:29,040 --> 00:38:32,480
should

00:38:29,680 --> 00:38:32,720
hand over to the companies like pivotal

00:38:32,480 --> 00:38:35,280
or

00:38:32,720 --> 00:38:37,440
ibm so that they can very easily

00:38:35,280 --> 00:38:40,400
increase the high availability parameter

00:38:37,440 --> 00:38:43,119
so and i am seeing i have talked to

00:38:40,400 --> 00:38:45,359
multiple senior architects of ibm

00:38:43,119 --> 00:38:47,520
and this is a problem from their side

00:38:45,359 --> 00:38:49,280
also they do not have any clue

00:38:47,520 --> 00:38:51,680
so this is the only expectation from the

00:38:49,280 --> 00:38:53,760
community they should hand over some

00:38:51,680 --> 00:38:56,480
robust architecture so that we can

00:38:53,760 --> 00:38:58,960
increase the high availability part

00:38:56,480 --> 00:39:01,920
high availability issue is that an odd

00:38:58,960 --> 00:39:05,040
head from greg and lee as well

00:39:01,920 --> 00:39:06,160
it is from lee i think greg greg is i'm

00:39:05,040 --> 00:39:08,000
going to turn it back to you just to

00:39:06,160 --> 00:39:09,440
conclude greg is that a high is that is

00:39:08,000 --> 00:39:10,880
that a requirement for you

00:39:09,440 --> 00:39:12,480
or there are other major requirements

00:39:10,880 --> 00:39:14,560
that you're looking at

00:39:12,480 --> 00:39:16,079
yeah i think you know a lot of things

00:39:14,560 --> 00:39:18,160
said uh spot on

00:39:16,079 --> 00:39:19,440
um high availability certainly the

00:39:18,160 --> 00:39:22,000
resiliency

00:39:19,440 --> 00:39:23,680
uh cloud foundry does a really good job

00:39:22,000 --> 00:39:25,680
about tenant isolation

00:39:23,680 --> 00:39:27,440
kubernetes i you know think has a little

00:39:25,680 --> 00:39:30,560
bit more to do there

00:39:27,440 --> 00:39:32,320
so that in and of itself limits noisy

00:39:30,560 --> 00:39:33,839
neighbors when you have large shared

00:39:32,320 --> 00:39:37,119
environments

00:39:33,839 --> 00:39:39,359
so that would be a key concern and

00:39:37,119 --> 00:39:40,480
focus to get out of the community for

00:39:39,359 --> 00:39:42,720
sure

00:39:40,480 --> 00:39:44,960
gosh this is such a fascinating time

00:39:42,720 --> 00:39:48,079
isn't it you guys must be having so much

00:39:44,960 --> 00:39:50,720
fun i mean my word what what an

00:39:48,079 --> 00:39:53,520
experience in your career to be able to

00:39:50,720 --> 00:39:54,480
to work on projects like these and and

00:39:53,520 --> 00:39:58,000
to seek

00:39:54,480 --> 00:39:59,599
to see uh make this uh make this change

00:39:58,000 --> 00:40:01,920
is wonderful i mean

00:39:59,599 --> 00:40:03,359
i i'm missing dublin but i'm getting a

00:40:01,920 --> 00:40:05,359
lot out of these uh

00:40:03,359 --> 00:40:07,280
a lot out of these uh virtual events i

00:40:05,359 --> 00:40:08,720
mean what we're seeing coming out of the

00:40:07,280 --> 00:40:11,440
cloud foundry community

00:40:08,720 --> 00:40:12,480
uh with uh you know production ready or

00:40:11,440 --> 00:40:15,359
rini and

00:40:12,480 --> 00:40:17,440
and stratos and and support for

00:40:15,359 --> 00:40:20,160
kubernetes and helm and

00:40:17,440 --> 00:40:22,400
the influence of uh the new projects

00:40:20,160 --> 00:40:26,000
that we see out there everything from

00:40:22,400 --> 00:40:28,800
you know kubernetes to istio to fluentd

00:40:26,000 --> 00:40:29,839
it's a it's a it's a change and uh it's

00:40:28,800 --> 00:40:32,880
a healthy one

00:40:29,839 --> 00:40:34,640
and uh i love to see you all talking

00:40:32,880 --> 00:40:36,960
back and forth i hope you all continue

00:40:34,640 --> 00:40:38,560
your conversation going forward so just

00:40:36,960 --> 00:40:41,359
thank you very much i've really i've

00:40:38,560 --> 00:40:43,680
really enjoyed this conversation

00:40:41,359 --> 00:40:44,880
all right hello everyone hopefully we

00:40:43,680 --> 00:40:49,119
get some folks that

00:40:44,880 --> 00:40:53,839
uh pile in and ask really good questions

00:40:49,119 --> 00:40:53,839
good morning chip

00:41:19,839 --> 00:41:21,920
you

00:42:17,160 --> 00:42:22,910
[Laughter]

00:42:28,839 --> 00:42:31,839
so

00:42:42,839 --> 00:42:45,839
so

00:43:19,680 --> 00:43:24,720
all right hopefully i did that right

00:43:22,960 --> 00:43:27,839
i'm not getting audio though so i don't

00:43:24,720 --> 00:43:27,839
know that's

00:44:27,510 --> 00:44:30,609
[Applause]

00:45:31,760 --> 00:45:33,839
foreign

00:46:26,839 --> 00:46:29,839
okay

00:46:31,310 --> 00:46:34,409
[Applause]

00:46:54,839 --> 00:46:57,839
so

00:47:04,800 --> 00:47:11,680
okay so good morning everyone there were

00:47:07,520 --> 00:47:15,520
a couple of really good questions

00:47:11,680 --> 00:47:18,079
so we had a question

00:47:15,520 --> 00:47:20,480
about the global load balancing is this

00:47:18,079 --> 00:47:23,520
going to be open source on github

00:47:20,480 --> 00:47:26,160
it's not currently on on github

00:47:23,520 --> 00:47:26,800
at the moment but that's definitely our

00:47:26,160 --> 00:47:30,000
intent

00:47:26,800 --> 00:47:32,000
is to share this on an upcoming uh

00:47:30,000 --> 00:47:33,359
advisory board call and get feedback

00:47:32,000 --> 00:47:36,079
from the community

00:47:33,359 --> 00:47:37,520
and then also open source and and

00:47:36,079 --> 00:47:38,079
collaborate with the rest of the

00:47:37,520 --> 00:47:43,599
community

00:47:38,079 --> 00:47:45,280
on that so that should be coming soon

00:47:43,599 --> 00:47:46,720
and then there was another question

00:47:45,280 --> 00:47:48,559
building on the

00:47:46,720 --> 00:47:50,720
global load balancing as a service what

00:47:48,559 --> 00:47:53,119
are the top networking concerns

00:47:50,720 --> 00:47:55,280
that the cleveland cloud foundry

00:47:53,119 --> 00:47:56,480
platform teams have

00:47:55,280 --> 00:47:58,880
which of course is always a

00:47:56,480 --> 00:48:01,920
thought-provoking question from

00:47:58,880 --> 00:48:04,640
dormin so there's lots of layers there

00:48:01,920 --> 00:48:06,480
it's a great question there's several

00:48:04,640 --> 00:48:08,960
first we want to make things easier

00:48:06,480 --> 00:48:10,480
for the development teams uh simpler and

00:48:08,960 --> 00:48:12,319
easier traffic shaping

00:48:10,480 --> 00:48:14,160
especially as they're distributing their

00:48:12,319 --> 00:48:17,680
apps across

00:48:14,160 --> 00:48:21,440
more sites they need more robust

00:48:17,680 --> 00:48:22,000
automation and you want to be able to

00:48:21,440 --> 00:48:25,040
have

00:48:22,000 --> 00:48:26,079
uh immediate conversions instead of you

00:48:25,040 --> 00:48:29,200
using

00:48:26,079 --> 00:48:31,599
dns which is which is what the our prior

00:48:29,200 --> 00:48:33,359
solution is using

00:48:31,599 --> 00:48:35,280
in large enterprises you know there's

00:48:33,359 --> 00:48:37,200
different you know dns ttl

00:48:35,280 --> 00:48:39,280
implementations and so forth sometimes

00:48:37,200 --> 00:48:41,280
depending on the application

00:48:39,280 --> 00:48:43,119
and that results in you know different

00:48:41,280 --> 00:48:45,839
convergence times and experiences

00:48:43,119 --> 00:48:46,640
so you know we believe that this is a is

00:48:45,839 --> 00:48:49,200
a much better

00:48:46,640 --> 00:48:50,720
simpler approach and much more robust in

00:48:49,200 --> 00:48:51,920
terms of being able to provide more

00:48:50,720 --> 00:48:56,000
control

00:48:51,920 --> 00:48:56,000
again to the to the development teams

00:48:58,160 --> 00:49:03,839
good questions

00:49:28,500 --> 00:49:31,570
[Applause]

00:49:42,839 --> 00:49:45,839
so

00:50:10,839 --> 00:50:13,839
hey

00:50:25,839 --> 00:50:27,920
you

00:51:06,839 --> 00:51:09,839
so

00:51:20,839 --> 00:51:23,839
so

00:51:34,839 --> 00:51:37,839
so

00:51:58,000 --> 00:52:04,160
so question was lee had

00:52:01,599 --> 00:52:05,760
made a comment about chaos engineering

00:52:04,160 --> 00:52:07,200
and is that something that comcast is

00:52:05,760 --> 00:52:09,920
doing

00:52:07,200 --> 00:52:11,680
we had introduced this before as part of

00:52:09,920 --> 00:52:12,960
the staging process just prior to

00:52:11,680 --> 00:52:15,440
production

00:52:12,960 --> 00:52:17,119
our development team did not welcome it

00:52:15,440 --> 00:52:19,119
with open arms

00:52:17,119 --> 00:52:20,800
you know we felt you know like this was

00:52:19,119 --> 00:52:24,319
an important part

00:52:20,800 --> 00:52:25,040
of shaking things out uh before we go

00:52:24,319 --> 00:52:26,960
and

00:52:25,040 --> 00:52:28,640
automating some of the war gaming but we

00:52:26,960 --> 00:52:31,520
weren't ready at the time

00:52:28,640 --> 00:52:32,720
uh so it's so lee's comments certainly

00:52:31,520 --> 00:52:35,359
help

00:52:32,720 --> 00:52:36,800
inspire us to take another look at that

00:52:35,359 --> 00:52:38,319
and that that's something i think that

00:52:36,800 --> 00:52:47,680
we're much more ready for now than we

00:52:38,319 --> 00:52:49,599
were in the past

00:52:47,680 --> 00:52:50,960
and then there was a question on has the

00:52:49,599 --> 00:52:54,480
new evolution of

00:52:50,960 --> 00:52:55,839
cloud foundry on case um

00:52:54,480 --> 00:52:58,160
answer some of the concerns around

00:52:55,839 --> 00:53:02,240
footprint sizes

00:52:58,160 --> 00:53:04,960
uh with cf on vms um

00:53:02,240 --> 00:53:05,599
you know i i haven't found that to be a

00:53:04,960 --> 00:53:08,319
problem

00:53:05,599 --> 00:53:08,960
uh so you know just for comparison sakes

00:53:08,319 --> 00:53:12,160
roughly

00:53:08,960 --> 00:53:15,280
uh we run about 100 workloads

00:53:12,160 --> 00:53:18,240
uh on a host uh in in cloud foundry

00:53:15,280 --> 00:53:20,240
and uh in our uh our traditional kind of

00:53:18,240 --> 00:53:23,440
virtual machine environment

00:53:20,240 --> 00:53:26,640
it's it's closer to you know 15

00:53:23,440 --> 00:53:28,160
maybe 20 at best so it's actually pretty

00:53:26,640 --> 00:53:31,200
efficient in terms of

00:53:28,160 --> 00:53:34,079
in terms of land mass and people served

00:53:31,200 --> 00:53:35,920
it's a pretty efficient platform um in

00:53:34,079 --> 00:53:37,920
kubernetes you know there's a bunch of

00:53:35,920 --> 00:53:39,920
you know there's a bunch of things to to

00:53:37,920 --> 00:53:41,760
look at with respect to

00:53:39,920 --> 00:53:43,920
uh side cars and and other

00:53:41,760 --> 00:53:46,960
implementation details that

00:53:43,920 --> 00:53:50,240
um you know but i think that whether

00:53:46,960 --> 00:53:52,000
whether the containers you know

00:53:50,240 --> 00:53:53,520
are as they are today and you know the

00:53:52,000 --> 00:53:55,359
run c containers or

00:53:53,520 --> 00:53:59,280
you know the kubernetes are on time i

00:53:55,359 --> 00:54:11,839
think both will be pretty efficient

00:53:59,280 --> 00:54:11,839
and i'll type that answer now

00:54:22,839 --> 00:54:25,839
do

00:54:30,760 --> 00:54:33,859
[Applause]

00:54:36,839 --> 00:54:39,839
so

00:54:54,799 --> 00:54:59,040
question about data caching you

00:54:57,280 --> 00:54:59,359
mentioned data caching is part of how

00:54:59,040 --> 00:55:01,760
the

00:54:59,359 --> 00:55:02,960
team supports peaks etc how is that

00:55:01,760 --> 00:55:05,680
implemented

00:55:02,960 --> 00:55:06,079
is it up to developers do they need to

00:55:05,680 --> 00:55:08,480
learn

00:55:06,079 --> 00:55:11,280
new patterns or technologies to support

00:55:08,480 --> 00:55:14,000
it and is it part of the marketplace

00:55:11,280 --> 00:55:15,680
that you described so it's a great

00:55:14,000 --> 00:55:17,920
question

00:55:15,680 --> 00:55:19,760
the you know the development teams have

00:55:17,920 --> 00:55:23,200
been have been using

00:55:19,760 --> 00:55:25,280
the cf marketplace and that's been

00:55:23,200 --> 00:55:27,599
you know that's been a great uh

00:55:25,280 --> 00:55:30,960
implementation as part of our

00:55:27,599 --> 00:55:31,920
our cloud foundry environment and redis

00:55:30,960 --> 00:55:33,280
has long been

00:55:31,920 --> 00:55:35,200
you know one of those caching

00:55:33,280 --> 00:55:38,240
capabilities that

00:55:35,200 --> 00:55:39,280
is available in our marketplace uh again

00:55:38,240 --> 00:55:42,240
we've moved

00:55:39,280 --> 00:55:44,720
uh our marketplace services to uh to

00:55:42,240 --> 00:55:48,160
kubernetes like i described

00:55:44,720 --> 00:55:50,480
and uh again this service broker and

00:55:48,160 --> 00:55:52,240
cf service create experience is the same

00:55:50,480 --> 00:55:55,280
so the developer really doesn't

00:55:52,240 --> 00:55:57,680
doesn't know um

00:55:55,280 --> 00:55:59,520
and uh now when you you know when you

00:55:57,680 --> 00:56:02,240
bind an application to

00:55:59,520 --> 00:56:02,720
to redis and you create an instant and

00:56:02,240 --> 00:56:06,000
then you

00:56:02,720 --> 00:56:06,720
you know you bind the services the great

00:56:06,000 --> 00:56:09,440
thing about

00:56:06,720 --> 00:56:11,040
the platform is uh and it's actually one

00:56:09,440 --> 00:56:13,680
of our our demos

00:56:11,040 --> 00:56:15,440
that we do to help explain to folks you

00:56:13,680 --> 00:56:16,400
know what is cloud foundry and and how

00:56:15,440 --> 00:56:18,160
can it benefit you

00:56:16,400 --> 00:56:19,599
you don't need to be a redis expert you

00:56:18,160 --> 00:56:22,640
don't have to go to some

00:56:19,599 --> 00:56:23,440
you know data services team uh you know

00:56:22,640 --> 00:56:26,960
you can

00:56:23,440 --> 00:56:29,680
you can create an application

00:56:26,960 --> 00:56:31,839
deploy it and then search the

00:56:29,680 --> 00:56:33,520
marketplace and go shopping so to speak

00:56:31,839 --> 00:56:37,119
uh yaml is your shopping cart

00:56:33,520 --> 00:56:39,040
and uh you can you can deploy

00:56:37,119 --> 00:56:40,799
uh caching capabilities we we

00:56:39,040 --> 00:56:44,559
traditionally offer things like

00:56:40,799 --> 00:56:46,559
redis and hazelcast uh

00:56:44,559 --> 00:56:47,760
and then and then the and then the

00:56:46,559 --> 00:56:49,599
developers able to

00:56:47,760 --> 00:56:59,839
you know to deploy those services bind

00:56:49,599 --> 00:56:59,839
them to their apps and away they go

00:57:18,930 --> 00:57:22,070
[Applause]

00:57:38,839 --> 00:57:41,839
so

00:57:49,000 --> 00:57:52,139
[Applause]

00:57:52,839 --> 00:57:55,839
so

00:58:45,280 --> 00:58:51,839
very good questions

00:59:16,839 --> 00:59:19,839
foreign

00:59:58,839 --> 01:00:01,839
so

01:00:26,839 --> 01:00:29,839
so

01:00:32,559 --> 01:00:35,680
so there was a comment about

01:00:36,480 --> 01:00:40,960
wanting to hear more about chaos

01:00:37,920 --> 01:00:43,680
engineering and cloud foundry

01:00:40,960 --> 01:00:44,559
in reference to a talk that the t-mobile

01:00:43,680 --> 01:00:47,599
team did in

01:00:44,559 --> 01:00:51,760
in philly last year about their uh

01:00:47,599 --> 01:00:53,280
their project monarch um and

01:00:51,760 --> 01:00:55,280
you know definitely lee and others would

01:00:53,280 --> 01:00:56,480
benefit from going back and listening to

01:00:55,280 --> 01:00:58,400
that talk

01:00:56,480 --> 01:01:00,000
the t-mobile team continues to be an

01:00:58,400 --> 01:01:03,040
awesome partner

01:01:00,000 --> 01:01:04,720
and collaborator in the community know a

01:01:03,040 --> 01:01:06,960
number of those folks well

01:01:04,720 --> 01:01:08,240
and they have a great team they're doing

01:01:06,960 --> 01:01:09,200
great work so you definitely want to

01:01:08,240 --> 01:01:11,599
check that

01:01:09,200 --> 01:01:14,640
check that out and thanks to jermaine

01:01:11,599 --> 01:01:25,839
for for highlighting that talk because

01:01:14,640 --> 01:01:25,839
it was a really good talk

01:01:39,280 --> 01:01:43,040
it looks like there's a fair number of

01:01:50,839 --> 01:01:53,839
people

01:02:18,839 --> 01:02:21,839
um

01:03:53,280 --> 01:03:58,559
so dormane just asked a great question

01:03:56,160 --> 01:04:01,920
around how do we

01:03:58,559 --> 01:04:05,039
how do we recruit for

01:04:01,920 --> 01:04:09,599
for our team and

01:04:05,039 --> 01:04:09,599
the the answer is that

01:04:10,240 --> 01:04:14,880
a lot of times when we're recruiting our

01:04:12,400 --> 01:04:18,079
positions get posted internally first

01:04:14,880 --> 01:04:19,440
and a lot of the developers are very

01:04:18,079 --> 01:04:21,680
engaged with our team

01:04:19,440 --> 01:04:23,200
and you know they get just as passionate

01:04:21,680 --> 01:04:25,119
about it as we do

01:04:23,200 --> 01:04:26,240
uh so we've actually hired a number of

01:04:25,119 --> 01:04:28,319
developers

01:04:26,240 --> 01:04:30,079
that were previously part of the

01:04:28,319 --> 01:04:32,000
community that we supported and then

01:04:30,079 --> 01:04:35,280
they joined our team

01:04:32,000 --> 01:04:37,280
to to provide benefit to a broader

01:04:35,280 --> 01:04:39,760
you know development community you know

01:04:37,280 --> 01:04:41,599
than just their particular scrum team

01:04:39,760 --> 01:04:43,359
so that's been awesome for us right we

01:04:41,599 --> 01:04:46,640
see that as a great way

01:04:43,359 --> 01:04:47,680
to improve developer experience by

01:04:46,640 --> 01:04:50,000
actually hiring

01:04:47,680 --> 01:04:50,799
developers that were previous customers

01:04:50,000 --> 01:04:53,680
that

01:04:50,799 --> 01:04:54,079
you know can help us with you know the

01:04:53,680 --> 01:04:57,839
you know

01:04:54,079 --> 01:04:59,039
no bs uh feedback that you know helps us

01:04:57,839 --> 01:05:01,520
really improve

01:04:59,039 --> 01:05:05,440
and you know that's a great uh it's been

01:05:01,520 --> 01:05:07,119
a great mechanism for us to be able to

01:05:05,440 --> 01:05:08,880
you know to focus on the developer

01:05:07,119 --> 01:05:11,119
experience adopting the product and

01:05:08,880 --> 01:05:12,880
developer mindset

01:05:11,119 --> 01:05:23,359
through you know recruiting you know

01:05:12,880 --> 01:05:37,839
from our actual development team

01:05:23,359 --> 01:05:37,839
this is awful

01:05:49,760 --> 01:05:51,839
you

01:06:16,839 --> 01:06:19,839
oh

01:06:30,839 --> 01:06:33,839
so

01:06:34,880 --> 01:06:41,280
all right well uh always happy to ans

01:06:38,480 --> 01:06:42,079
answer questions you all know where to

01:06:41,280 --> 01:06:46,160
find me

01:06:42,079 --> 01:06:49,440
uh for sure and it was great to

01:06:46,160 --> 01:06:51,039
uh to virtually be engaged with everyone

01:06:49,440 --> 01:06:52,640
definitely miss

01:06:51,039 --> 01:06:54,480
you know this is the part that i miss

01:06:52,640 --> 01:06:55,359
the uh you know the hallway

01:06:54,480 --> 01:06:59,760
conversations

01:06:55,359 --> 01:07:02,240
and the uh and the community engagement

01:06:59,760 --> 01:07:04,799
you know seeing everyone so you know

01:07:02,240 --> 01:07:06,880
definitely missing everyone but uh

01:07:04,799 --> 01:07:08,400
hopefully things will get back to normal

01:07:06,880 --> 01:07:08,880
soon and you know we'll all be able to

01:07:08,400 --> 01:07:11,680
get

01:07:08,880 --> 01:07:15,839
back together again and in some

01:07:11,680 --> 01:07:15,839
conference some format

01:07:31,710 --> 01:07:36,749
[Applause]

01:07:49,720 --> 01:07:52,840
[Applause]

01:08:22,839 --> 01:08:25,839
so

01:08:38,159 --> 01:08:42,640

YouTube URL: https://www.youtube.com/watch?v=QFEhsM705Cs


