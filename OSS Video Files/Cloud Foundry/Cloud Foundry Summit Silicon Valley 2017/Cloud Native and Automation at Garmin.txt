Title: Cloud Native and Automation at Garmin
Publication date: 2017-06-22
Playlist: Cloud Foundry Summit Silicon Valley 2017
Description: 
	Cloud Native and Automation at Garmin - Jonathan Regehr & James Stueve, Garmin International    

You may remember the 2015 CF Summit talk entitled "Leaving Your Comfort Zone - Garmin and Cloud Foundry". Garmin IT has learned and changed a lot since then. Jonathan and James will take you through our Cloud Native journey, including successes and mistakes along the way. Our story includes a Pivotal Labs Engagement, pair programming, pipelines.

Jonathan Regehr
Garmin International
Senior Software Engineer
jonathan_regehr.1tk7p49i
Websitegarmin.com
Jonathan is a Senior Software Engineer with Garmin International.  He is a thought leader when it comes to developing applications that run in Pivotal Cloud Foundry.  He is passionate about CI/CD pipelines and automation.  Making sure that we "automate all the things" is one of his ongoing goals. Jonathan spoke at Cloud Foundry Summit 2015 - the talk was entitled "Leaving our Comfort Zone"

James Stueve
Garmin International
Internet Architect
Olathe, KS
Twitter Tweet Facebook Message
James is an Internet Architect with Garmin International. He is a big proponent of code quality and CI/CD pipelines.  James is currently working on helping jumpstart applications that will run in Pivotal Cloud Foundry.  Primarily his expertise is working with Spring boot applications. Making sure developers can code solutions without having to worry about tooling is something he is very passionate about.
Captions: 
	00:00:00,890 --> 00:00:05,700
good morning thank you for joining us

00:00:03,270 --> 00:00:06,029
this morning my name is Jonathan Berg

00:00:05,700 --> 00:00:09,440
ear

00:00:06,029 --> 00:00:17,369
and this is James Stevie Stevie Stevie

00:00:09,440 --> 00:00:18,900
sorry we both work for Garmin a little

00:00:17,369 --> 00:00:22,170
about the company we were founded in

00:00:18,900 --> 00:00:25,680
1989 our revenues this year targeting

00:00:22,170 --> 00:00:28,949
around three billion dollars were on the

00:00:25,680 --> 00:00:31,289
on the scale of a fortune 100 company

00:00:28,949 --> 00:00:33,390
although because our official base is

00:00:31,289 --> 00:00:35,850
Switzerland we don't actually show up on

00:00:33,390 --> 00:00:37,620
the fortune list and we make GPS

00:00:35,850 --> 00:00:39,540
products you may know us for the Nuvi

00:00:37,620 --> 00:00:41,640
which is the car navigation product

00:00:39,540 --> 00:00:44,670
however our first product is actually in

00:00:41,640 --> 00:00:47,550
an airplane we build really amazing

00:00:44,670 --> 00:00:50,160
glass cockpit systems for companies like

00:00:47,550 --> 00:00:52,379
Cessna Beechcraft and Lear we're also

00:00:50,160 --> 00:00:54,570
huge in Fitness we make some really

00:00:52,379 --> 00:00:57,329
awesome watches we do marine and

00:00:54,570 --> 00:01:00,690
outdoors as well we also just released a

00:00:57,329 --> 00:01:02,340
product called verb 360 think something

00:01:00,690 --> 00:01:04,229
like a GoPro except you've got two

00:01:02,340 --> 00:01:08,040
cameras and they're shooting a 360

00:01:04,229 --> 00:01:09,960
degree field at all times and you can

00:01:08,040 --> 00:01:11,340
wilfy load the video footage on your

00:01:09,960 --> 00:01:13,290
phone and you start turning the footage

00:01:11,340 --> 00:01:16,729
turns with you so that's a pretty

00:01:13,290 --> 00:01:19,710
amazing product you're moved GoPro a

00:01:16,729 --> 00:01:22,560
little history on our cloud native

00:01:19,710 --> 00:01:24,060
journey so we started our first

00:01:22,560 --> 00:01:27,240
introduction to cloud foundry was in

00:01:24,060 --> 00:01:31,130
December of 2013 at one of our company

00:01:27,240 --> 00:01:34,320
hackathons we started deploying two

00:01:31,130 --> 00:01:35,909
pivotal web services and had had a great

00:01:34,320 --> 00:01:38,299
time there and learned a lot knew we

00:01:35,909 --> 00:01:41,100
needed to we need to move down this path

00:01:38,299 --> 00:01:43,049
at that point we didn't have any Cloud

00:01:41,100 --> 00:01:44,280
Foundry foundations all of our

00:01:43,049 --> 00:01:47,780
deployments were manual we were

00:01:44,280 --> 00:01:50,130
deploying about two times a month

00:01:47,780 --> 00:01:53,430
emergency releases as necessary but

00:01:50,130 --> 00:01:55,140
those were kind of theirs it was a big

00:01:53,430 --> 00:01:56,399
deal and nobody wanted to do them so we

00:01:55,140 --> 00:01:59,100
didn't do a lot of those or deaf culture

00:01:56,399 --> 00:02:01,710
was done man hey I got something in the

00:01:59,100 --> 00:02:03,930
code review and done to our customers of

00:02:01,710 --> 00:02:05,909
course was 60 days later by the time

00:02:03,930 --> 00:02:08,009
that software actually made made it to

00:02:05,909 --> 00:02:10,800
production all our production at that

00:02:08,009 --> 00:02:12,129
point was VMs and our VMs are vastly

00:02:10,800 --> 00:02:15,659
over provision we'll talk

00:02:12,129 --> 00:02:18,370
more about that a little bit later so

00:02:15,659 --> 00:02:21,430
here's a little overview of our journey

00:02:18,370 --> 00:02:25,749
we've had a couple of pivotal dojos

00:02:21,430 --> 00:02:27,249
we've made significant time and money

00:02:25,749 --> 00:02:29,560
investments in automation

00:02:27,249 --> 00:02:31,989
we've got production applications now

00:02:29,560 --> 00:02:33,900
running in cloud foundry we're shooting

00:02:31,989 --> 00:02:35,889
for cloud native and everything we do

00:02:33,900 --> 00:02:40,900
later on we'll talk a little bit about

00:02:35,889 --> 00:02:43,719
where we are now and Garmin labs so I'm

00:02:40,900 --> 00:02:45,579
going to start with our first pivotal

00:02:43,719 --> 00:02:49,120
dojo in February 2015

00:02:45,579 --> 00:02:50,769
I call this dojo light we we saw Cloud

00:02:49,120 --> 00:02:53,439
Foundry we knew we needed to have Cloud

00:02:50,769 --> 00:02:56,319
Foundry running locally and so we were

00:02:53,439 --> 00:02:59,290
going to install it very quickly thanks

00:02:56,319 --> 00:03:01,780
in large part to our pivotal rep he

00:02:59,290 --> 00:03:03,489
rounded up a band of pivotal gunslingers

00:03:01,780 --> 00:03:05,560
and brought him in to help us get that

00:03:03,489 --> 00:03:07,329
done and the reason I call this dojo

00:03:05,560 --> 00:03:08,799
light is because if we didn't really do

00:03:07,329 --> 00:03:11,500
a lot of the prep work that we needed to

00:03:08,799 --> 00:03:15,969
do and the slide here with Nita with

00:03:11,500 --> 00:03:17,769
Neil I chose this picture because yeah

00:03:15,969 --> 00:03:19,900
we had a dojo and if you think about it

00:03:17,769 --> 00:03:22,239
Neil at this point in in the movie he

00:03:19,900 --> 00:03:23,530
goes I know kung foo and then he

00:03:22,239 --> 00:03:26,560
proceeds to have his ass kicked and

00:03:23,530 --> 00:03:28,540
that's really what happened to us a lot

00:03:26,560 --> 00:03:31,810
of times doing software are doing the

00:03:28,540 --> 00:03:34,299
hardware we do building GPS is for

00:03:31,810 --> 00:03:36,129
aviation building card gps's we're

00:03:34,299 --> 00:03:37,599
really good at building hardware we

00:03:36,129 --> 00:03:40,290
build some really amazing stuff

00:03:37,599 --> 00:03:43,509
our auto pilots are second to none and

00:03:40,290 --> 00:03:44,650
that's a whole other topic so we have

00:03:43,509 --> 00:03:46,810
this thing called the Garmin Way which

00:03:44,650 --> 00:03:48,009
is basically hey that this is how we do

00:03:46,810 --> 00:03:49,689
things and it's worked really well for

00:03:48,009 --> 00:03:51,159
us well when you come to something like

00:03:49,689 --> 00:03:53,650
Cloud Foundry where you have a team of

00:03:51,159 --> 00:03:56,500
600 people building this amazing

00:03:53,650 --> 00:03:59,169
platform it's a dumb idea not to listen

00:03:56,500 --> 00:04:01,509
to what they say so take it from oops

00:03:59,169 --> 00:04:03,729
sorry take it from us if they tell you

00:04:01,509 --> 00:04:05,259
this is a bad idea you should install

00:04:03,729 --> 00:04:07,180
your platform this way that's a great

00:04:05,259 --> 00:04:10,169
thing to listen to

00:04:07,180 --> 00:04:13,689
so our first platform that we stood up

00:04:10,169 --> 00:04:15,699
it was a success it was certainly not

00:04:13,689 --> 00:04:18,699
production great and that is nothing on

00:04:15,699 --> 00:04:22,770
the platform that was on us on how we

00:04:18,699 --> 00:04:26,580
deployed it and

00:04:22,770 --> 00:04:29,160
we learned it was a good time to to move

00:04:26,580 --> 00:04:29,819
ahead down the road from there so then

00:04:29,160 --> 00:04:33,090
for real

00:04:29,819 --> 00:04:35,190
we started a a true dojo with all of the

00:04:33,090 --> 00:04:37,830
planning that comes with that process in

00:04:35,190 --> 00:04:39,449
May of 2016 it was an eight-week process

00:04:37,830 --> 00:04:41,099
the first four weeks we took and we

00:04:39,449 --> 00:04:43,259
built a production grade cloud foundry

00:04:41,099 --> 00:04:44,280
that cloud foundry is still running

00:04:43,259 --> 00:04:46,229
today and it runs production

00:04:44,280 --> 00:04:48,690
applications the next four weeks of the

00:04:46,229 --> 00:04:51,990
dojo we brought four different teams in

00:04:48,690 --> 00:04:53,490
and the goal was to take their

00:04:51,990 --> 00:04:55,740
applications and make them cloud native

00:04:53,490 --> 00:05:00,419
one week at a time and run production

00:04:55,740 --> 00:05:03,120
that was a little bit optimistic we did

00:05:00,419 --> 00:05:04,530
take production production traffic on

00:05:03,120 --> 00:05:07,289
one of those applications but the other

00:05:04,530 --> 00:05:09,090
ones aren't quite weren't quite ready

00:05:07,289 --> 00:05:11,009
they are mostly running on production

00:05:09,090 --> 00:05:13,979
now are running on cloud foundry in

00:05:11,009 --> 00:05:15,690
production now but again that was one of

00:05:13,979 --> 00:05:17,909
those things where pivotal said you

00:05:15,690 --> 00:05:19,530
should take a little bit longer when you

00:05:17,909 --> 00:05:20,819
bring a product or bring a group in and

00:05:19,530 --> 00:05:22,860
we were like no no we want to expose as

00:05:20,819 --> 00:05:30,270
many people as we can so ground one way

00:05:22,860 --> 00:05:32,849
again our bed so obviously doing cloud

00:05:30,270 --> 00:05:36,659
foundry you you must do automation from

00:05:32,849 --> 00:05:38,699
my perspective yes it's my it's my joy

00:05:36,659 --> 00:05:41,430
garment to be kind of responsible from

00:05:38,699 --> 00:05:43,139
an IT perspective to get us into CI CD

00:05:41,430 --> 00:05:44,909
and make sure we're doing automation as

00:05:43,139 --> 00:05:48,630
much as possible so obviously we want to

00:05:44,909 --> 00:05:50,820
automate all the things Jonathan started

00:05:48,630 --> 00:05:52,500
out in automation with Jenkins jobs that

00:05:50,820 --> 00:05:55,070
were several Jenkins jobs linked

00:05:52,500 --> 00:05:58,919
together which was extremely brittle

00:05:55,070 --> 00:06:03,090
kind of hard to maintain copy paste

00:05:58,919 --> 00:06:06,180
reuse it was kind of a pain so I said no

00:06:03,090 --> 00:06:07,740
don't do that it was great it was a good

00:06:06,180 --> 00:06:09,360
place to start but it wasn't a good

00:06:07,740 --> 00:06:11,099
place to stay and so I looked at

00:06:09,360 --> 00:06:13,110
concourse to be honest with you and at

00:06:11,099 --> 00:06:14,550
that time that was a while ago concourse

00:06:13,110 --> 00:06:16,800
has made leaps and bounds since then but

00:06:14,550 --> 00:06:19,110
you needed to install it in Bosh back

00:06:16,800 --> 00:06:20,460
then and I did not have anybody who

00:06:19,110 --> 00:06:22,440
could do that for me they were all busy

00:06:20,460 --> 00:06:24,659
doing other things and so because of

00:06:22,440 --> 00:06:29,490
that we really went with Jenkins it had

00:06:24,659 --> 00:06:31,050
developer developer familiarity people

00:06:29,490 --> 00:06:33,300
were comfortable with it and I can reuse

00:06:31,050 --> 00:06:35,530
existing infrastructure so we did it

00:06:33,300 --> 00:06:40,490
down the Jenkins pipeline path

00:06:35,530 --> 00:06:41,720
pipeline is code using jenkins files i I

00:06:40,490 --> 00:06:43,370
think that was probably the right

00:06:41,720 --> 00:06:44,720
approach first at the time I'm not

00:06:43,370 --> 00:06:46,760
saying that Jenkins is always going to

00:06:44,720 --> 00:06:48,200
be the be-all end-all but what it did

00:06:46,760 --> 00:06:51,620
lead us to was what I would call the

00:06:48,200 --> 00:06:54,320
pipeline wild wild west everybody was

00:06:51,620 --> 00:06:56,930
doing their pipeline their way and

00:06:54,320 --> 00:06:59,320
people were copying code there was we

00:06:56,930 --> 00:07:03,290
weren't doing dry at all there was no

00:06:59,320 --> 00:07:05,270
reuse at all and there was one project

00:07:03,290 --> 00:07:06,710
they had five separate gingka files that

00:07:05,270 --> 00:07:07,700
are essentially identical and then they

00:07:06,710 --> 00:07:10,520
needed to make a change

00:07:07,700 --> 00:07:11,960
well good luck because that's five

00:07:10,520 --> 00:07:13,040
different changes you're gonna have to

00:07:11,960 --> 00:07:14,480
make and affect five different

00:07:13,040 --> 00:07:18,890
applications from a deployment

00:07:14,480 --> 00:07:21,830
perspective so we have instituted what I

00:07:18,890 --> 00:07:22,930
would call I'm gonna go ahead and go to

00:07:21,830 --> 00:07:25,070
the next slide

00:07:22,930 --> 00:07:26,900
what I would call pipelines that are

00:07:25,070 --> 00:07:29,570
opinionated and it's a shared library

00:07:26,900 --> 00:07:31,280
pipeline and I can get somebody up and

00:07:29,570 --> 00:07:33,590
running with that pipeline in maybe five

00:07:31,280 --> 00:07:36,290
minutes now so they copy and paste a

00:07:33,590 --> 00:07:37,880
jenkins file and make minor JSON config

00:07:36,290 --> 00:07:40,400
file change and they're deploying to

00:07:37,880 --> 00:07:43,220
Cloud Foundry in minutes so that's

00:07:40,400 --> 00:07:44,540
that's kind of a big win for us the

00:07:43,220 --> 00:07:46,010
developer doesn't have to know Jenkins

00:07:44,540 --> 00:07:47,960
he doesn't have to really understand a

00:07:46,010 --> 00:07:50,570
lot about how to get his app deployed to

00:07:47,960 --> 00:07:53,780
Cloud Foundry he just checks in code and

00:07:50,570 --> 00:07:55,370
it deploys but one thing Automation

00:07:53,780 --> 00:07:58,160
we've kind of failed at from my

00:07:55,370 --> 00:08:00,590
perspective is the feedback loop Garmin

00:07:58,160 --> 00:08:02,630
has historically had a QA department

00:08:00,590 --> 00:08:05,480
that did all of our QA testing for us

00:08:02,630 --> 00:08:10,130
and as a developer you threw it over the

00:08:05,480 --> 00:08:11,930
wall and hey test this for me that that

00:08:10,130 --> 00:08:13,850
culture which is a change that we're

00:08:11,930 --> 00:08:15,620
working on making still exists and so

00:08:13,850 --> 00:08:17,840
the developers are not used to actually

00:08:15,620 --> 00:08:20,270
being responsible for their code all the

00:08:17,840 --> 00:08:22,220
way through to production so we really

00:08:20,270 --> 00:08:24,080
really need to implement automated

00:08:22,220 --> 00:08:26,120
acceptance testing it's something what's

00:08:24,080 --> 00:08:28,880
on our roadmap we'll be working on it

00:08:26,120 --> 00:08:31,700
the rest this summer probably get that

00:08:28,880 --> 00:08:33,500
going but then we also need automated

00:08:31,700 --> 00:08:35,419
security analysis because from our

00:08:33,500 --> 00:08:37,130
perspective you never know what the

00:08:35,419 --> 00:08:39,110
Von's are in the dependencies you've got

00:08:37,130 --> 00:08:40,700
so we'll be doing static analysis on a

00:08:39,110 --> 00:08:43,610
lot of our stuff and some real-time

00:08:40,700 --> 00:08:48,430
analysis on things that are key for us

00:08:43,610 --> 00:08:50,630
automation is about failing fast yep

00:08:48,430 --> 00:08:52,580
so I want to talk through a couple of

00:08:50,630 --> 00:08:55,130
apps that we have in production today on

00:08:52,580 --> 00:08:57,770
the Left where it says help starts here

00:08:55,130 --> 00:08:59,360
that is our support portal if you have

00:08:57,770 --> 00:09:01,640
questions or issues with your Garmin

00:08:59,360 --> 00:09:03,740
products and you are in either the US or

00:09:01,640 --> 00:09:05,120
the UK you're going to interact with

00:09:03,740 --> 00:09:06,680
something that looks a lot like this and

00:09:05,120 --> 00:09:08,600
you will be interacting with Cloud

00:09:06,680 --> 00:09:10,280
Foundry and the interesting thing about

00:09:08,600 --> 00:09:11,960
that app is that's kind of one of our

00:09:10,280 --> 00:09:13,730
biggest wins to date the business was

00:09:11,960 --> 00:09:15,820
highly involved in the development of

00:09:13,730 --> 00:09:19,550
the application we started in August of

00:09:15,820 --> 00:09:24,410
2016 with kind of a concept approach and

00:09:19,550 --> 00:09:26,540
by November we had working code in

00:09:24,410 --> 00:09:28,940
production it wasn't live to the

00:09:26,540 --> 00:09:31,490
end-users yet but it was live to our

00:09:28,940 --> 00:09:34,910
business and they were loving it and the

00:09:31,490 --> 00:09:37,910
true I would call it the true success

00:09:34,910 --> 00:09:39,140
story is right before Duane's yet don't

00:09:37,910 --> 00:09:42,640
spell that means iam right before we

00:09:39,140 --> 00:09:46,280
were gonna go live there was a bug and

00:09:42,640 --> 00:09:48,530
the director of the support group said

00:09:46,280 --> 00:09:51,110
hey we can't go live with this he sat

00:09:48,530 --> 00:09:53,000
down with the developer literally five

00:09:51,110 --> 00:09:55,220
minutes later the developer fixed the

00:09:53,000 --> 00:09:57,470
code checked it into the repo and it was

00:09:55,220 --> 00:10:01,070
deployed to plot prod within 15 minutes

00:09:57,470 --> 00:10:02,750
so he didn't care I mean great we fixed

00:10:01,070 --> 00:10:04,430
it now he now he trusted this even more

00:10:02,750 --> 00:10:07,460
so I think that was the true success

00:10:04,430 --> 00:10:08,990
story of the and we live in December or

00:10:07,460 --> 00:10:11,720
November or something like that it's

00:10:08,990 --> 00:10:13,970
it's going well yeah we have a great a

00:10:11,720 --> 00:10:15,830
great product evangelist for Cloud

00:10:13,970 --> 00:10:19,610
Foundry and that guy now yeah he loves

00:10:15,830 --> 00:10:21,710
Cloud Foundry yeah oops I didn't talk

00:10:19,610 --> 00:10:23,570
about the other one here so the other on

00:10:21,710 --> 00:10:26,720
the right side you're looking at our

00:10:23,570 --> 00:10:29,900
e-commerce platform and and today if you

00:10:26,720 --> 00:10:32,810
look at any product detail pages like

00:10:29,900 --> 00:10:34,370
for instance this watch or if you look

00:10:32,810 --> 00:10:35,690
at a category of all our wearables or

00:10:34,370 --> 00:10:37,640
all our automotive or anything like that

00:10:35,690 --> 00:10:39,950
you are also dealing with a group of

00:10:37,640 --> 00:10:45,530
Cloud Foundry Web Apps and micro

00:10:39,950 --> 00:10:48,230
services this app doesn't look like much

00:10:45,530 --> 00:10:49,940
but that's our SSO or single sign-on

00:10:48,230 --> 00:10:52,130
application and I don't mean single

00:10:49,940 --> 00:10:53,750
sign-on for our internal domain this is

00:10:52,130 --> 00:10:56,570
single sign-on for all of our customers

00:10:53,750 --> 00:10:58,670
I don't remember how many millions of

00:10:56,570 --> 00:11:02,420
customers we have between connect and

00:10:58,670 --> 00:11:04,160
all in fly Garmon and and some of our

00:11:02,420 --> 00:11:06,620
other products but we have I think we're

00:11:04,160 --> 00:11:09,170
20 50 minutes over there we have a ton

00:11:06,620 --> 00:11:10,670
of customers and this application is how

00:11:09,170 --> 00:11:14,300
every single one of them signs on to

00:11:10,670 --> 00:11:18,680
connect to buy to what used to be my

00:11:14,300 --> 00:11:20,390
Garmin Garmin Express fly Garmin they

00:11:18,680 --> 00:11:22,370
all sign into this application not only

00:11:20,390 --> 00:11:25,130
that but every single time they make a

00:11:22,370 --> 00:11:27,860
request that request on the backside

00:11:25,130 --> 00:11:29,750
their their token is validated against

00:11:27,860 --> 00:11:32,300
SSO to make sure their their token is

00:11:29,750 --> 00:11:38,270
still valid so this app takes a ton of

00:11:32,300 --> 00:11:40,220
traffic we are also hosting a lot of a

00:11:38,270 --> 00:11:42,530
lot of HTML applications some of our

00:11:40,220 --> 00:11:44,690
marketing apps including Garmin turning

00:11:42,530 --> 00:11:46,670
points and probably wear this probably

00:11:44,690 --> 00:11:48,680
or this is a it's kind of a it's a

00:11:46,670 --> 00:11:49,850
cheeky little app that gives you a kind

00:11:48,680 --> 00:11:50,990
of a quick interview and then tells you

00:11:49,850 --> 00:11:52,490
hey this is the grandma product you

00:11:50,990 --> 00:11:53,830
might want to put on your wrist that's

00:11:52,490 --> 00:11:56,270
it's kind of a fun one

00:11:53,830 --> 00:12:00,370
SSO was one of our first applications to

00:11:56,270 --> 00:12:00,370
take production traffic and was also

00:12:00,520 --> 00:12:04,430
they still do VMs and the only reason

00:12:02,690 --> 00:12:09,380
they do is because we don't have cloud

00:12:04,430 --> 00:12:11,960
foundry in China yet one thing we

00:12:09,380 --> 00:12:14,450
learned with SSO was how incredibly / /

00:12:11,960 --> 00:12:16,520
/ provisioned we were on the VM side so

00:12:14,450 --> 00:12:19,550
we have with SSO running in two data

00:12:16,520 --> 00:12:22,280
centers we have I think it at the moment

00:12:19,550 --> 00:12:25,130
or we had at that at the time this went

00:12:22,280 --> 00:12:28,880
live approximately 12 VMs per data

00:12:25,130 --> 00:12:30,650
center running SSO and the two major

00:12:28,880 --> 00:12:32,330
reasons for that were Christmas Day and

00:12:30,650 --> 00:12:33,890
the day and in the end of the weekend

00:12:32,330 --> 00:12:35,900
when everyone uploads their their run

00:12:33,890 --> 00:12:38,150
data and I think at some point we had a

00:12:35,900 --> 00:12:40,430
production issue and so they scaled up

00:12:38,150 --> 00:12:41,810
again to make sure that that we'd never

00:12:40,430 --> 00:12:43,730
have that production issue again but the

00:12:41,810 --> 00:12:46,160
problem with doing that in VMs is you

00:12:43,730 --> 00:12:47,960
just stay that way forever so Christmas

00:12:46,160 --> 00:12:50,240
comes once a year we all know that we're

00:12:47,960 --> 00:12:52,120
scaled for that but hey we're gonna just

00:12:50,240 --> 00:12:55,340
keep all those VMs around all year long

00:12:52,120 --> 00:12:57,260
SSO is running on to Cloud Foundry

00:12:55,340 --> 00:12:59,900
instances in to data centers in

00:12:57,260 --> 00:13:01,250
production I think one might be able to

00:12:59,900 --> 00:13:03,290
handle the load but it's a terrible idea

00:13:01,250 --> 00:13:05,390
to run one instance of cloud of of

00:13:03,290 --> 00:13:06,800
anything in Cloud Foundry for the

00:13:05,390 --> 00:13:08,810
reasons that we're spoken about earlier

00:13:06,800 --> 00:13:10,370
the previous presentation you have

00:13:08,810 --> 00:13:12,589
instances that drop and come back up all

00:13:10,370 --> 00:13:14,810
those sorts of things

00:13:12,589 --> 00:13:16,550
in the last two releases which are

00:13:14,810 --> 00:13:18,470
that's how many we have sitting around

00:13:16,550 --> 00:13:19,640
in in Cloud Foundry we have the current

00:13:18,470 --> 00:13:20,779
running instance that we have of the

00:13:19,640 --> 00:13:23,270
previous one in case we need to roll

00:13:20,779 --> 00:13:24,520
back those two instances have autoscaler

00:13:23,270 --> 00:13:26,390
hooked up to them but they have never

00:13:24,520 --> 00:13:28,370
recorded a scaling event so two

00:13:26,390 --> 00:13:30,190
instances in two data centers are

00:13:28,370 --> 00:13:33,710
running our entire production SSO load

00:13:30,190 --> 00:13:35,750
another huge success story for for Cloud

00:13:33,710 --> 00:13:38,540
Foundry is ERP you want to talk to that

00:13:35,750 --> 00:13:41,089
yeah so we have a group of developers

00:13:38,540 --> 00:13:43,760
that are fairly new Java developers and

00:13:41,089 --> 00:13:46,339
really don't understand how to get

00:13:43,760 --> 00:13:48,110
things to production and literally we

00:13:46,339 --> 00:13:50,240
stood them up with they probably about

00:13:48,110 --> 00:13:52,700
ten ERP services that are actually

00:13:50,240 --> 00:13:55,520
actually directly accessing our ERP

00:13:52,700 --> 00:13:57,589
system and they were able to take those

00:13:55,520 --> 00:14:01,100
ten services and probably from inception

00:13:57,589 --> 00:14:03,200
to working in Cloud Foundry maybe a week

00:14:01,100 --> 00:14:04,640
and these are June what I would call

00:14:03,200 --> 00:14:06,170
junior Java developers I mean they're

00:14:04,640 --> 00:14:08,029
pretty experienced developers from a

00:14:06,170 --> 00:14:10,370
perspective of ERP but from a Java

00:14:08,029 --> 00:14:11,720
perspective they're all newbies and they

00:14:10,370 --> 00:14:13,580
don't know really what they're doing so

00:14:11,720 --> 00:14:16,100
we hook them up with a with a spring

00:14:13,580 --> 00:14:19,580
boot app and give them this pipeline and

00:14:16,100 --> 00:14:21,800
they deployed ten ERP services that are

00:14:19,580 --> 00:14:24,020
accessing our evie system in seven days

00:14:21,800 --> 00:14:26,870
I mean that's it's pretty pretty

00:14:24,020 --> 00:14:28,880
impressive for for people who don't

00:14:26,870 --> 00:14:30,620
really know what they're doing so I

00:14:28,880 --> 00:14:31,880
think it's a huge success story from

00:14:30,620 --> 00:14:34,150
that perspective we would never been

00:14:31,880 --> 00:14:36,260
able to do that with VMs no not a chance

00:14:34,150 --> 00:14:38,450
they would had to understand how to

00:14:36,260 --> 00:14:40,190
configure Tomcat or something they would

00:14:38,450 --> 00:14:42,980
never come in provision the VM does that

00:14:40,190 --> 00:14:45,200
fast yeah I don't think so think Sesame

00:14:42,980 --> 00:14:46,190
Street for a minute your presentation

00:14:45,200 --> 00:14:48,650
today is brought to you by the number

00:14:46,190 --> 00:14:50,360
1100 we have a lot of other numbers

00:14:48,650 --> 00:14:52,970
whether we like but this is the number

00:14:50,360 --> 00:14:54,610
for today I like 42 42 is a good number

00:14:52,970 --> 00:14:57,110
three point one four is a good number

00:14:54,610 --> 00:14:59,209
but this is our number today why is this

00:14:57,110 --> 00:15:02,180
our number this is the number of

00:14:59,209 --> 00:15:05,600
deployments we made to production in one

00:15:02,180 --> 00:15:09,350
month in December of 2016 that's about

00:15:05,600 --> 00:15:12,920
50 times a day just let that sink in a

00:15:09,350 --> 00:15:16,010
minute that would not have been possible

00:15:12,920 --> 00:15:18,260
without Cloud Foundry without deployment

00:15:16,010 --> 00:15:19,850
pipelines and without spring on their

00:15:18,260 --> 00:15:22,130
own those three things are amazing but

00:15:19,850 --> 00:15:23,720
when you put them together do you get

00:15:22,130 --> 00:15:26,230
this kind of magic I should say that

00:15:23,720 --> 00:15:26,230
kind of magic

00:15:27,020 --> 00:15:32,850
so where are we now

00:15:29,900 --> 00:15:36,030
we are definitely here we built it and

00:15:32,850 --> 00:15:37,530
they're coming people are interested in

00:15:36,030 --> 00:15:39,750
our platform and they're they're

00:15:37,530 --> 00:15:43,980
constantly asking us for access to the

00:15:39,750 --> 00:15:45,570
platform I use this slide in 2015 when

00:15:43,980 --> 00:15:47,130
we were here that presenting and I

00:15:45,570 --> 00:15:49,650
followed it up with a joke about cat

00:15:47,130 --> 00:15:55,560
herding and that is definitely still

00:15:49,650 --> 00:15:57,780
true as it turns out interest has been

00:15:55,560 --> 00:16:00,780
amazing we've got it from inside IIT and

00:15:57,780 --> 00:16:02,280
from outside IT many groups are now

00:16:00,780 --> 00:16:04,740
treating Cloud Foundry as their default

00:16:02,280 --> 00:16:06,930
deployment destination I heard the other

00:16:04,740 --> 00:16:10,920
day of I don't know how many people in

00:16:06,930 --> 00:16:13,380
the room are familiar with GDP are not

00:16:10,920 --> 00:16:14,970
very many so quick explanation the EU

00:16:13,380 --> 00:16:17,160
has come up with a number of what they

00:16:14,970 --> 00:16:19,770
call general data production protection

00:16:17,160 --> 00:16:21,120
requirements and the fines for not being

00:16:19,770 --> 00:16:23,840
compliant with those requirements are

00:16:21,120 --> 00:16:26,130
huge like four percent of your revenue

00:16:23,840 --> 00:16:27,720
not you know not five hundred dollars a

00:16:26,130 --> 00:16:31,230
day or anything like that but huge

00:16:27,720 --> 00:16:33,330
revenue percentages for all of the apps

00:16:31,230 --> 00:16:37,320
that need to be built inside Garmin to

00:16:33,330 --> 00:16:38,730
comply with GDP are there looking at the

00:16:37,320 --> 00:16:40,590
standard being you have to have a

00:16:38,730 --> 00:16:42,630
pipeline you have to have a spring boot

00:16:40,590 --> 00:16:46,650
app and you have to deploy it to Cloud

00:16:42,630 --> 00:16:48,450
Foundry laughs did you notice the email

00:16:46,650 --> 00:16:49,950
that Bobby sent this morning I didn't so

00:16:48,450 --> 00:16:52,020
this morning as of this morning I got

00:16:49,950 --> 00:16:54,180
some statistics from essentially what

00:16:52,020 --> 00:16:58,530
our lead architect he says we now have

00:16:54,180 --> 00:17:01,620
as of yesterday I guess 400 a is running

00:16:58,530 --> 00:17:04,050
in production for Cloud Foundry which is

00:17:01,620 --> 00:17:06,810
pretty good from our perspective we

00:17:04,050 --> 00:17:09,090
added over 25% increase in a is from

00:17:06,810 --> 00:17:11,160
last month to this month and we

00:17:09,090 --> 00:17:12,900
anticipate that growth to just continue

00:17:11,160 --> 00:17:15,600
to moving forward so the developers have

00:17:12,900 --> 00:17:18,120
bought in and we're just getting bigger

00:17:15,600 --> 00:17:19,440
buy-in all the time so yeah good good to

00:17:18,120 --> 00:17:20,330
stick for him to send me that this

00:17:19,440 --> 00:17:24,720
morning

00:17:20,330 --> 00:17:26,040
so on the junk of cat herding to prevent

00:17:24,720 --> 00:17:28,380
those kinds of issues

00:17:26,040 --> 00:17:31,470
we definitely have a you have to be this

00:17:28,380 --> 00:17:33,750
tall to ride this ride and mentality on

00:17:31,470 --> 00:17:37,560
our team and as we're onboarding people

00:17:33,750 --> 00:17:38,220
into Cloud Foundry we are doing 12

00:17:37,560 --> 00:17:41,240
factor

00:17:38,220 --> 00:17:42,780
that's really important for us and

00:17:41,240 --> 00:17:44,970
configuration has been a really

00:17:42,780 --> 00:17:46,470
interesting thing for us so when we

00:17:44,970 --> 00:17:48,000
started down the cloud native path we

00:17:46,470 --> 00:17:50,610
started to use config server and we

00:17:48,000 --> 00:17:52,170
still do and the original goal was hate

00:17:50,610 --> 00:17:53,400
all your config is going to be in config

00:17:52,170 --> 00:17:56,550
server and you're going to consume all

00:17:53,400 --> 00:17:58,080
your configuration that way that has

00:17:56,550 --> 00:18:00,150
come and it is gone and we're now

00:17:58,080 --> 00:18:01,860
looking at config server being kind of a

00:18:00,150 --> 00:18:04,320
generic place of hey where do our

00:18:01,860 --> 00:18:06,450
services live and while that seems like

00:18:04,320 --> 00:18:08,790
it's kind of backward if you think about

00:18:06,450 --> 00:18:10,920
a pipeline deployment sometimes it's

00:18:08,790 --> 00:18:12,300
faster to just check code in and let the

00:18:10,920 --> 00:18:14,430
pipeline run and get your app back to

00:18:12,300 --> 00:18:16,140
production than it is to go change

00:18:14,430 --> 00:18:19,380
what's in the config server and let that

00:18:16,140 --> 00:18:21,360
reload the application so all of our

00:18:19,380 --> 00:18:22,860
apps are doing zero downtime deployment

00:18:21,360 --> 00:18:25,740
so as we make those config changes and

00:18:22,860 --> 00:18:27,960
we push we're not taking outages and in

00:18:25,740 --> 00:18:29,910
configure server as it's still valuable

00:18:27,960 --> 00:18:30,960
to us we still use it a lot but what

00:18:29,910 --> 00:18:34,110
we've ended up configuring our

00:18:30,960 --> 00:18:36,930
applications pretty much using

00:18:34,110 --> 00:18:40,860
properties built into our jars logging

00:18:36,930 --> 00:18:42,930
has been a real fun thing for us with vm

00:18:40,860 --> 00:18:45,690
development we had we were heavily

00:18:42,930 --> 00:18:48,060
Splunk users and all the logging was was

00:18:45,690 --> 00:18:49,400
dropping to file on our vm systems and

00:18:48,060 --> 00:18:51,950
then from there we were pushing into

00:18:49,400 --> 00:18:53,940
spelunker alkar other tools like that

00:18:51,950 --> 00:18:55,530
obviously with Cloud Foundry you don't

00:18:53,940 --> 00:18:58,350
have files so that's a bit of a

00:18:55,530 --> 00:19:02,190
challenge we also had to turn all of our

00:18:58,350 --> 00:19:03,150
logging from line based logging to JSON

00:19:02,190 --> 00:19:05,430
based logging because when you have a

00:19:03,150 --> 00:19:07,770
log aggregator that's taking multiple

00:19:05,430 --> 00:19:08,790
instances of your application and one of

00:19:07,770 --> 00:19:10,260
them drops a stack trace that

00:19:08,790 --> 00:19:11,940
interleaves with other logs and it's

00:19:10,260 --> 00:19:14,490
almost impossible to tell what's what

00:19:11,940 --> 00:19:16,830
so JSON for logging has been has been a

00:19:14,490 --> 00:19:18,450
big deal if we have time at the end ask

00:19:16,830 --> 00:19:19,650
us about the stream data platform will

00:19:18,450 --> 00:19:20,610
tell you a lot more about how we're

00:19:19,650 --> 00:19:24,060
logging because we've got some really

00:19:20,610 --> 00:19:26,870
cool stuff there that will save that for

00:19:24,060 --> 00:19:29,040
the end to make sure we have enough time

00:19:26,870 --> 00:19:30,240
so from a developer education

00:19:29,040 --> 00:19:31,710
perspective though the problem is as

00:19:30,240 --> 00:19:33,780
most of our developers don't really

00:19:31,710 --> 00:19:35,580
understand what a 12 factor app is they

00:19:33,780 --> 00:19:36,840
don't really understand how to do the

00:19:35,580 --> 00:19:38,070
configuration and they don't really

00:19:36,840 --> 00:19:39,720
understand logging so we're still

00:19:38,070 --> 00:19:41,400
fighting that on a day to day basis and

00:19:39,720 --> 00:19:43,830
we're continually looking for better

00:19:41,400 --> 00:19:45,390
ways to educate our developers and part

00:19:43,830 --> 00:19:49,700
of that is something we will talk about

00:19:45,390 --> 00:19:49,700
briefly in a minute so yeah

00:19:49,720 --> 00:19:54,590
so where are we going so from a from a

00:19:52,820 --> 00:19:56,990
build pipeline perspective we're kind of

00:19:54,590 --> 00:19:58,970
following the model of spring anyway is

00:19:56,990 --> 00:20:00,860
having an opinionated build pipeline you

00:19:58,970 --> 00:20:02,660
don't you get an a you get a pipeline

00:20:00,860 --> 00:20:04,850
out of the box and it's gonna make you

00:20:02,660 --> 00:20:06,740
have a deployed and non prod and prod

00:20:04,850 --> 00:20:09,350
and if you Sneed something else then

00:20:06,740 --> 00:20:10,640
that's up to you to figure it out but

00:20:09,350 --> 00:20:13,370
that way I can get people up to speed

00:20:10,640 --> 00:20:16,010
really really quickly we have automated

00:20:13,370 --> 00:20:19,460
routing with a che proxy that which sits

00:20:16,010 --> 00:20:21,140
in front of our Cloud Foundry we need to

00:20:19,460 --> 00:20:23,330
be much more highly automated from a

00:20:21,140 --> 00:20:25,280
from a pipeline perspective we need to

00:20:23,330 --> 00:20:27,770
add animated except intestine added odd

00:20:25,280 --> 00:20:29,630
add automated roll backs today we don't

00:20:27,770 --> 00:20:32,000
have any automated roll backs it's all

00:20:29,630 --> 00:20:33,740
manual and we're in the process of

00:20:32,000 --> 00:20:35,840
transitioning all our release engineers

00:20:33,740 --> 00:20:37,370
that used to do all our deploys to us

00:20:35,840 --> 00:20:41,020
and they're actually getting to do real

00:20:37,370 --> 00:20:44,330
work now so versus pushing buttons and

00:20:41,020 --> 00:20:47,270
then last but not least we we built a

00:20:44,330 --> 00:20:48,710
lab we call it Garmin labs I would like

00:20:47,270 --> 00:20:50,570
to think that we got to spend time with

00:20:48,710 --> 00:20:53,860
our Garmin labs but it's not really

00:20:50,570 --> 00:20:57,560
puppies that were spending time with

00:20:53,860 --> 00:21:00,260
we're spending time building out what I

00:20:57,560 --> 00:21:01,910
would call our our approach for how

00:21:00,260 --> 00:21:02,900
we're gonna do development and Jonathan

00:21:01,910 --> 00:21:06,410
you could probably talk a little bit

00:21:02,900 --> 00:21:08,870
about that too yeah so we started out

00:21:06,410 --> 00:21:10,910
with our first lab was was it was BYO

00:21:08,870 --> 00:21:13,130
as far as the computing in the lab went

00:21:10,910 --> 00:21:14,690
you brought your own machine pairing

00:21:13,130 --> 00:21:16,490
that way didn't work out real well you

00:21:14,690 --> 00:21:19,690
you know I have my own set of keyboard

00:21:16,490 --> 00:21:22,820
shortcuts I like Adam he likes vs code

00:21:19,690 --> 00:21:25,220
we debate about that all the time and

00:21:22,820 --> 00:21:27,710
and that that didn't work out so well

00:21:25,220 --> 00:21:28,970
because you know just hey this is my

00:21:27,710 --> 00:21:30,230
machine and you don't feel totally

00:21:28,970 --> 00:21:32,690
comfortable using the machine if it's

00:21:30,230 --> 00:21:35,270
not yours etc so we have moved on to

00:21:32,690 --> 00:21:38,330
something much closer to a pivotal lab

00:21:35,270 --> 00:21:39,650
style where we have single machines with

00:21:38,330 --> 00:21:43,480
two keyboards monitors and mice hooked

00:21:39,650 --> 00:21:46,250
up and we have them set so that on

00:21:43,480 --> 00:21:48,670
Friday afternoon when a team rolls out

00:21:46,250 --> 00:21:51,800
of the lab weary amid all those machines

00:21:48,670 --> 00:21:54,140
then we would grant access to the folks

00:21:51,800 --> 00:21:56,060
that need it and then we script loading

00:21:54,140 --> 00:21:57,710
everything back up so when team B walks

00:21:56,060 --> 00:21:59,030
in Monday morning they get a machine

00:21:57,710 --> 00:21:59,929
that looks just like we want it to look

00:21:59,030 --> 00:22:01,220
and they can cost

00:21:59,929 --> 00:22:03,740
that if they want to install whatever

00:22:01,220 --> 00:22:05,779
they need but I don't have to worry

00:22:03,740 --> 00:22:07,999
about any baggage that another team has

00:22:05,779 --> 00:22:11,059
left on a machine so our goal with flabs

00:22:07,999 --> 00:22:13,369
is to have teams in for six four to six

00:22:11,059 --> 00:22:15,409
weeks at a time we are going to be

00:22:13,369 --> 00:22:16,700
extremely opinionated about what we do

00:22:15,409 --> 00:22:19,039
with them while they're there and how

00:22:16,700 --> 00:22:22,309
they work and then it's up to them when

00:22:19,039 --> 00:22:25,249
they go back to their regular their

00:22:22,309 --> 00:22:27,259
regular work areas to take what they

00:22:25,249 --> 00:22:29,240
want to take yeah we're kind of taking a

00:22:27,259 --> 00:22:31,850
weak unit we're going to introduce a

00:22:29,240 --> 00:22:33,200
bunch of concepts to them and we're not

00:22:31,850 --> 00:22:35,509
going to tell them what they have to do

00:22:33,200 --> 00:22:37,159
but we're hoping that a lot of it will

00:22:35,509 --> 00:22:38,600
stick to the wall so we're gonna take a

00:22:37,159 --> 00:22:40,279
throw at the wall and hope it sticks

00:22:38,600 --> 00:22:41,779
good approach kind of like when you're

00:22:40,279 --> 00:22:43,009
cooking spaghetti you might want to

00:22:41,779 --> 00:22:45,499
throw that at the wall and hope it

00:22:43,009 --> 00:22:47,419
sticks no you know it's done but we are

00:22:45,499 --> 00:22:48,619
gonna be extremely opinionated in the

00:22:47,419 --> 00:22:50,090
lab so they don't get to do what they

00:22:48,619 --> 00:22:52,249
want to do in the lab they have to do it

00:22:50,090 --> 00:22:53,690
our way in the lab and that's going to

00:22:52,249 --> 00:22:55,700
allow us to try new things into

00:22:53,690 --> 00:22:57,830
experiment in the lab with real-world

00:22:55,700 --> 00:22:59,840
problems and real-world applications so

00:22:57,830 --> 00:23:01,220
this is kind of we're a little bit

00:22:59,840 --> 00:23:03,499
excited about this because this is our

00:23:01,220 --> 00:23:05,360
this is our culture and our development

00:23:03,499 --> 00:23:07,220
education approach we are going to be

00:23:05,360 --> 00:23:09,799
taking our developers down a path that

00:23:07,220 --> 00:23:11,779
allows them to to see how to do develop

00:23:09,799 --> 00:23:13,940
in a different way so I think that's

00:23:11,779 --> 00:23:15,710
kind of the key to our success moving

00:23:13,940 --> 00:23:17,990
forward if the lab doesn't work then I

00:23:15,710 --> 00:23:20,419
guess we'll try something else yeah we

00:23:17,990 --> 00:23:22,519
also have we're transforming our

00:23:20,419 --> 00:23:24,740
physical space as well ople this morning

00:23:22,519 --> 00:23:26,419
mentioned the idea of the the cube farm

00:23:24,740 --> 00:23:29,480
that you kind of smack run into when you

00:23:26,419 --> 00:23:32,419
walk into most corporations today

00:23:29,480 --> 00:23:34,580
I wouldn't call ours dark or dank but I

00:23:32,419 --> 00:23:36,230
would say there are still way too many

00:23:34,580 --> 00:23:38,929
walls and we've taken a couple of areas

00:23:36,230 --> 00:23:41,509
of our of our IT shop and we've ripped

00:23:38,929 --> 00:23:43,970
out a lot of walls we've put people in a

00:23:41,509 --> 00:23:45,590
fairly lavish like environment and we're

00:23:43,970 --> 00:23:47,389
kind of experimenting with which one

00:23:45,590 --> 00:23:49,279
works the best and so I think in the

00:23:47,389 --> 00:23:51,590
future you're gonna see Garmin having a

00:23:49,279 --> 00:23:54,559
labs type look throughout our whole

00:23:51,590 --> 00:23:56,659
floor and no more Gophers popping up

00:23:54,559 --> 00:23:58,100
yeah that's right you yeah he's over the

00:23:56,659 --> 00:24:01,249
wall for me so I'm always like yeah

00:23:58,100 --> 00:24:02,840
trying to chat with him so I think that

00:24:01,249 --> 00:24:05,330
covers everything that we had planned to

00:24:02,840 --> 00:24:07,429
say we wanted to finish in time for

00:24:05,330 --> 00:24:08,359
questions I kinda left some time for

00:24:07,429 --> 00:24:10,039
that so if you guys have anything you

00:24:08,359 --> 00:24:13,059
want to ask us feel free and of course

00:24:10,039 --> 00:24:13,059
you can find us later as well

00:24:13,410 --> 00:24:27,180
yeah yes we are yes yes the question is

00:24:25,410 --> 00:24:29,970
whether we're gonna end up using public

00:24:27,180 --> 00:24:32,670
cloud for these applications and right

00:24:29,970 --> 00:24:34,980
now we're on prim our boss would love us

00:24:32,670 --> 00:24:36,690
to be able to essentially burst to the

00:24:34,980 --> 00:24:38,520
cloud whenever we need to but obviously

00:24:36,690 --> 00:24:40,110
that's still something we have to figure

00:24:38,520 --> 00:24:42,360
out so but we are we will be looking at

00:24:40,110 --> 00:24:44,220
public cloud yeah and really I think the

00:24:42,360 --> 00:24:46,260
main challenge we've had there it's it's

00:24:44,220 --> 00:24:49,080
easy to push an app to the public cloud

00:24:46,260 --> 00:24:51,000
that is not a hard a hard concept that

00:24:49,080 --> 00:24:55,350
the trouble is getting the data where it

00:24:51,000 --> 00:24:58,320
needs to be we're using gem fire and

00:24:55,350 --> 00:25:02,070
that that has made certain parts of our

00:24:58,320 --> 00:25:03,210
infrastructure such as SSO very very h-a

00:25:02,070 --> 00:25:04,860
and we have that running into data

00:25:03,210 --> 00:25:06,540
centers we have other things that are on

00:25:04,860 --> 00:25:08,910
our DBMS and when you start talking

00:25:06,540 --> 00:25:11,550
about our DBMS the two data centers is

00:25:08,910 --> 00:25:16,490
hard I think there was another question

00:25:11,550 --> 00:25:16,490
in the front yes oh oh that was it okay

00:25:20,960 --> 00:25:26,220
well we have it that's what we want to

00:25:23,640 --> 00:25:28,350
do so we will be automating scanning of

00:25:26,220 --> 00:25:30,990
all the applications prior to go live so

00:25:28,350 --> 00:25:32,640
that we won't be pushing products to

00:25:30,990 --> 00:25:34,530
production that have security

00:25:32,640 --> 00:25:36,420
vulnerabilities that's the plan at least

00:25:34,530 --> 00:25:39,120
right now the current solution that

00:25:36,420 --> 00:25:40,830
we're using takes too long to do that as

00:25:39,120 --> 00:25:43,770
a real-time pipeline so it's a static

00:25:40,830 --> 00:25:45,660
analysis that happens offline and so the

00:25:43,770 --> 00:25:47,870
the plan is to have something automated

00:25:45,660 --> 00:25:50,670
soon probably before the end of the year

00:25:47,870 --> 00:25:53,850
interestingly enough the tool that we're

00:25:50,670 --> 00:25:55,560
using like he mentioned I think I think

00:25:53,850 --> 00:25:57,270
it's a good tool but we'd never heard a

00:25:55,560 --> 00:25:58,680
sneek before until yesterday and so we

00:25:57,270 --> 00:26:00,120
talked to those the sneek guys and

00:25:58,680 --> 00:26:01,860
that's definitely something we're gonna

00:26:00,120 --> 00:26:03,780
take back to our security team just hey

00:26:01,860 --> 00:26:06,450
look we heard of this take a look at it

00:26:03,780 --> 00:26:08,130
and so you may see sneak a Garmin at

00:26:06,450 --> 00:26:10,560
some point in the future you can't say

00:26:08,130 --> 00:26:15,870
yes because that's not the some might

00:26:10,560 --> 00:26:17,929
call but it might be there any other

00:26:15,870 --> 00:26:19,890
questions

00:26:17,929 --> 00:26:23,360
well thank you for your time everyone

00:26:19,890 --> 00:26:23,360
yeah thank you guys

00:26:25,050 --> 00:26:27,750

YouTube URL: https://www.youtube.com/watch?v=zDL44Cp78QE


