Title: Write Once, Earn Anywhere – Monetizing Enterprise APIs with Cloud Foundry
Publication date: 2017-06-22
Playlist: Cloud Foundry Summit Silicon Valley 2017
Description: 
	Write Once, Earn Anywhere – Monetizing Enterprise APIs with Cloud Foundry - Robert Land & Elijah Martinez, SAP    

Microservices are frequently touted as “SOA done right”. Cloud Foundry and microservice architectures are ideally suited for one another, with Cloud Foundry handling underlying issues such as scaling, failover, load balancing, etc. When coupled with a strong API layer, true continuous software delivery becomes a reality for developers. This architecture is ideal for applying API management which provides usage monitoring, service discovery and monetization. Additionally businesses and application developers increasingly rely on external APIs for quick and efficient enhancement of their core data and business processes, whether on premise or in the cloud. 

SAP as a world leader in business data, touching over $16 Trillion of consumer purchases globally, has committed to moving its business into the cloud, supporting API development and choosing Cloud Foundry as its strategic architecture for its Cloud Platform. Come discover how you can leverage this new paradigm of data openness to tap into Enterprise APIs, and how API Management enables developers to quickly and easily monetize software built on these APIs.

Robert Land
SAP Labs, LLC.
Product Manager, SAP Cloud Platform, Demo Creation
Robert is a Product Manager for SAP Cloud Platform Demo Creation, where he creates proof-of-concept software applications. Robert has a software engineering background in medical robotics and networks, including more than a decade at Cisco Systems. Robert has been a frequent presenter during Hack-a-thons, Corporate conferences and industry events.
Captions: 
	00:00:00,030 --> 00:00:05,520
okay see the red light so here we go

00:00:02,990 --> 00:00:09,030
this is Elijah Martinez I'm Bob Lee and

00:00:05,520 --> 00:00:11,070
we work for sa P in our areas si P cloud

00:00:09,030 --> 00:00:15,049
platform which we'll talk a little about

00:00:11,070 --> 00:00:17,699
we're gonna be discussing monetizing

00:00:15,049 --> 00:00:21,539
micro-services and ap is and cloud

00:00:17,699 --> 00:00:23,820
foundry in some order so first of all a

00:00:21,539 --> 00:00:28,949
few words about what s ap cloud platform

00:00:23,820 --> 00:00:33,030
is s ap has a lot of stuff that

00:00:28,949 --> 00:00:38,780
enterprises use the SI p Hana database

00:00:33,030 --> 00:00:41,960
as for Hana software the their

00:00:38,780 --> 00:00:43,860
applications like concur Arriba

00:00:41,960 --> 00:00:46,410
typically all these things out of the

00:00:43,860 --> 00:00:49,469
box meet a lot of the needs of an

00:00:46,410 --> 00:00:51,960
enterprise but they need extra they need

00:00:49,469 --> 00:00:54,780
extra functionality and rather than do

00:00:51,960 --> 00:00:59,820
that one at a time when Enterprise at a

00:00:54,780 --> 00:01:02,570
time si B has put together a platform as

00:00:59,820 --> 00:01:04,979
a service which includes collaboration

00:01:02,570 --> 00:01:07,229
integration Internet of Things machine

00:01:04,979 --> 00:01:09,990
learning and as you see Cloud Foundry

00:01:07,229 --> 00:01:13,530
these are the things the building blocks

00:01:09,990 --> 00:01:16,759
that are used for customizing the

00:01:13,530 --> 00:01:22,530
experience of the enterprise software

00:01:16,759 --> 00:01:25,619
and in particular microservices by using

00:01:22,530 --> 00:01:31,200
api proxies it's possible and will see

00:01:25,619 --> 00:01:33,930
this to look at all of the the assets

00:01:31,200 --> 00:01:36,150
the software assets as potential sources

00:01:33,930 --> 00:01:38,610
of micro services which can then be used

00:01:36,150 --> 00:01:40,229
in the cloud and so we'll talk a little

00:01:38,610 --> 00:01:42,180
about and and then of course we can

00:01:40,229 --> 00:01:45,630
leverage things like support for

00:01:42,180 --> 00:01:49,320
browsers and mobile devices so first of

00:01:45,630 --> 00:01:51,299
all that explanation doesn't satisfy a

00:01:49,320 --> 00:01:53,149
daughter she's in sixth grade so this is

00:01:51,299 --> 00:01:55,619
what I tell her

00:01:53,149 --> 00:01:58,290
SP cloud platform is like a big

00:01:55,619 --> 00:02:00,950
minecraft inventory of really cool

00:01:58,290 --> 00:02:03,240
things and they let IT organizations

00:02:00,950 --> 00:02:05,460
create really great enterprise software

00:02:03,240 --> 00:02:06,960
while they are scrambling in survival

00:02:05,460 --> 00:02:09,330
mode and so you can think of the

00:02:06,960 --> 00:02:11,670
Securities like diamond armor and then

00:02:09,330 --> 00:02:14,880
the web IDE is like a crafting table and

00:02:11,670 --> 00:02:17,550
HTML and java swords your picks

00:02:14,880 --> 00:02:19,709
we have no js' and so on you can imagine

00:02:17,550 --> 00:02:23,849
who are the skeletons firing arrows and

00:02:19,709 --> 00:02:28,520
the the cave spiders so next slide here

00:02:23,849 --> 00:02:31,680
so really this is what we see we can use

00:02:28,520 --> 00:02:34,980
Cloud Foundry for scaling we can use it

00:02:31,680 --> 00:02:37,950
for failover we use for load balancing

00:02:34,980 --> 00:02:40,260
and this makes so uh which used to be a

00:02:37,950 --> 00:02:43,019
challenge a lot easier if you're trying

00:02:40,260 --> 00:02:45,420
to get a job done at the same time have

00:02:43,019 --> 00:02:48,569
reusable code you have a lot of problems

00:02:45,420 --> 00:02:51,330
the code is not those are two things

00:02:48,569 --> 00:02:53,340
that are in tension and what can happen

00:02:51,330 --> 00:02:58,380
is scaling can be a problem or you may

00:02:53,340 --> 00:03:00,810
have technical deaths so this is really

00:02:58,380 --> 00:03:03,720
a terrific thing for doing so it gives

00:03:00,810 --> 00:03:05,670
another chance let's go on again so

00:03:03,720 --> 00:03:08,819
we're going to talk about micro services

00:03:05,670 --> 00:03:10,860
derived from the back end software how

00:03:08,819 --> 00:03:12,989
we can monetize it there's a story about

00:03:10,860 --> 00:03:15,780
that and a little bit about how we track

00:03:12,989 --> 00:03:17,720
API usage so getting into what we mean

00:03:15,780 --> 00:03:20,280
by that micro services from the backend

00:03:17,720 --> 00:03:21,690
so Cloud Foundry is great if you're

00:03:20,280 --> 00:03:23,760
doing Greenfield cloud native

00:03:21,690 --> 00:03:25,709
development but if you've got legacy

00:03:23,760 --> 00:03:27,630
software you can be excited about that

00:03:25,709 --> 00:03:30,540
because you can develop Microsoft

00:03:27,630 --> 00:03:32,150
services based on the capabilities you

00:03:30,540 --> 00:03:34,290
already have and back in software

00:03:32,150 --> 00:03:36,030
running and data centers and you can

00:03:34,290 --> 00:03:36,329
leverage it in the cloud next slide

00:03:36,030 --> 00:03:39,600
please

00:03:36,329 --> 00:03:41,549
so API management is very important for

00:03:39,600 --> 00:03:44,250
this this is mining you know the

00:03:41,549 --> 00:03:46,019
Minecraft thing a valuable focused

00:03:44,250 --> 00:03:50,760
functionality from on-premise software

00:03:46,019 --> 00:03:53,220
and so we consume those api's with cloud

00:03:50,760 --> 00:03:55,410
native software and there's no required

00:03:53,220 --> 00:03:57,150
refactoring reclad for me or any changes

00:03:55,410 --> 00:03:59,459
in the back-end code

00:03:57,150 --> 00:04:01,140
so next and if the security remains the

00:03:59,459 --> 00:04:04,410
same so we're going to see a story about

00:04:01,140 --> 00:04:07,970
how this happens in one organization so

00:04:04,410 --> 00:04:11,700
let's go next so there's the story and

00:04:07,970 --> 00:04:14,600
next and it's about a closeout sale so

00:04:11,700 --> 00:04:18,389
these cartoons are actually a product

00:04:14,600 --> 00:04:21,450
called scenes that s AP uses for user

00:04:18,389 --> 00:04:23,970
centered design it allows us to look at

00:04:21,450 --> 00:04:24,730
scenarios based on the individual

00:04:23,970 --> 00:04:28,750
circuit of using this

00:04:24,730 --> 00:04:30,550
software and ask ourselves how they cope

00:04:28,750 --> 00:04:34,050
today how will they cope with our

00:04:30,550 --> 00:04:36,550
software development and we can focus on

00:04:34,050 --> 00:04:38,500
optimizing functionalities here we've

00:04:36,550 --> 00:04:41,020
got a warehouse manager Leo and IT

00:04:38,500 --> 00:04:45,640
manager Walt and installation tech so a

00:04:41,020 --> 00:04:47,740
next so Zoey Leo are setting up for a

00:04:45,640 --> 00:04:51,220
week of installing hardware with

00:04:47,740 --> 00:04:54,100
customers and suddenly look at route map

00:04:51,220 --> 00:04:56,980
Zoe sees that her phone gets a device

00:04:54,100 --> 00:04:58,120
used appricate it and Leo gets the same

00:04:56,980 --> 00:04:59,260
thing I don't know if any of you have

00:04:58,120 --> 00:05:01,600
ever had that I've actually had that

00:04:59,260 --> 00:05:05,140
happen to me and I won't say the brand

00:05:01,600 --> 00:05:09,280
of device but as a result I had to go

00:05:05,140 --> 00:05:12,190
through some talks with IT so next and

00:05:09,280 --> 00:05:14,800
of course an IT what you get is a train

00:05:12,190 --> 00:05:17,770
of messages from lots and lots of people

00:05:14,800 --> 00:05:20,290
with problems now Walt is thinking about

00:05:17,770 --> 00:05:22,330
this logically says all these people

00:05:20,290 --> 00:05:24,370
bought their devices online from the

00:05:22,330 --> 00:05:26,920
company store they should be able to go

00:05:24,370 --> 00:05:29,320
online and exchange those devices

00:05:26,920 --> 00:05:31,840
problem is the store isn't built to do

00:05:29,320 --> 00:05:35,590
that and touching that kind of

00:05:31,840 --> 00:05:37,930
monolithic app can be dangerous if you

00:05:35,590 --> 00:05:41,080
don't break it you may take its designer

00:05:37,930 --> 00:05:43,210
direction that you later regret and so

00:05:41,080 --> 00:05:44,950
what he really wants is just to be able

00:05:43,210 --> 00:05:49,150
to layer something on top of what

00:05:44,950 --> 00:05:50,770
already exists next slide so this I'll

00:05:49,150 --> 00:05:53,530
just say this is the company store app

00:05:50,770 --> 00:06:00,850
you can have this your very self we have

00:05:53,530 --> 00:06:03,430
these you can get a trial account in SA

00:06:00,850 --> 00:06:05,920
P cloud platform for free just

00:06:03,430 --> 00:06:08,280
registering online and among the sample

00:06:05,920 --> 00:06:12,640
apps is in fact a webshop like this next

00:06:08,280 --> 00:06:14,680
so and here there's the the phone that

00:06:12,640 --> 00:06:18,610
we're saying is is going to be recalled

00:06:14,680 --> 00:06:20,860
so what he wants to do is for the

00:06:18,610 --> 00:06:24,640
employee who owns one of those to see a

00:06:20,860 --> 00:06:29,140
pop-up that says this is deprecated

00:06:24,640 --> 00:06:32,350
exchange it and run do the right thing

00:06:29,140 --> 00:06:33,850
so and then just send an email saying

00:06:32,350 --> 00:06:36,430
this has all been handled so let's say

00:06:33,850 --> 00:06:38,380
he does that how did he do that okay now

00:06:36,430 --> 00:06:41,260
so well he

00:06:38,380 --> 00:06:43,000
a little too fast okay so instead of

00:06:41,260 --> 00:06:45,970
disappearing the phone from the list

00:06:43,000 --> 00:06:49,780
because it's deprecated next he wants to

00:06:45,970 --> 00:06:51,490
insert API management in between the

00:06:49,780 --> 00:06:55,780
api's that were exposed in the backend

00:06:51,490 --> 00:06:59,010
and that were consumed in the client on

00:06:55,780 --> 00:07:01,900
the web and the API management layer

00:06:59,010 --> 00:07:04,270
makes these changes and layers them on

00:07:01,900 --> 00:07:06,460
top of the interface already existed so

00:07:04,270 --> 00:07:08,710
let's see how he does that next okay so

00:07:06,460 --> 00:07:10,900
that's what he wants he wants to come up

00:07:08,710 --> 00:07:13,690
sewing deprecated a single button that

00:07:10,900 --> 00:07:18,720
says exchange and then the JavaScript

00:07:13,690 --> 00:07:21,370
does the rest on so the steps number one

00:07:18,720 --> 00:07:25,840
use this sa P cloud platform API

00:07:21,370 --> 00:07:28,000
management create API proxies for the

00:07:25,840 --> 00:07:30,460
OData services and then protect them

00:07:28,000 --> 00:07:31,870
with keys and policies then something

00:07:30,460 --> 00:07:35,890
else and eventually you hope to make

00:07:31,870 --> 00:07:37,630
money next so it goes to API management

00:07:35,890 --> 00:07:42,880
this is us one of the many services we

00:07:37,630 --> 00:07:45,820
saw for a CP cloud platform and it has

00:07:42,880 --> 00:07:48,280
two flavors there's a portal for people

00:07:45,820 --> 00:07:49,810
who are building api's and another

00:07:48,280 --> 00:07:53,410
portal for people who are consuming

00:07:49,810 --> 00:07:55,300
api's in applications so first we have

00:07:53,410 --> 00:07:57,220
to build the API so here he sees

00:07:55,300 --> 00:08:00,790
statistics on what api's has been have

00:07:57,220 --> 00:08:02,110
been built already in the system and how

00:08:00,790 --> 00:08:05,470
much they're being used and who the big

00:08:02,110 --> 00:08:07,600
users are now what he can do now is go

00:08:05,470 --> 00:08:11,440
to the company store browse it in chrome

00:08:07,600 --> 00:08:14,290
and so we all do just click on developer

00:08:11,440 --> 00:08:16,450
tools and now he can look and find where

00:08:14,290 --> 00:08:20,830
is that thing getting its back-end data

00:08:16,450 --> 00:08:22,840
about these devices copies the URL now

00:08:20,830 --> 00:08:28,380
goes back to the home page and says

00:08:22,840 --> 00:08:34,530
create api pastes the URL and now

00:08:28,380 --> 00:08:39,070
creates a base path in the api he says

00:08:34,530 --> 00:08:42,550
he clicks once and now he's got a basic

00:08:39,070 --> 00:08:46,210
api proxy he's come in between the

00:08:42,550 --> 00:08:48,900
backend and the internet so at this

00:08:46,210 --> 00:08:51,880
point when he clicked save and deploy

00:08:48,900 --> 00:08:54,040
he's got a live proxy

00:08:51,880 --> 00:08:57,460
does he really he can copy that next and

00:08:54,040 --> 00:08:59,680
paste it into Chrome and he sees the

00:08:57,460 --> 00:09:01,480
back-end data and that's bad so what he

00:08:59,680 --> 00:09:04,870
realizes is maybe that was a little too

00:09:01,480 --> 00:09:07,420
fast and he goes on to add security so

00:09:04,870 --> 00:09:11,290
you go to policies now goes to policies

00:09:07,420 --> 00:09:13,720
and he can now add as many policies as

00:09:11,290 --> 00:09:17,440
he wants on the request and response

00:09:13,720 --> 00:09:21,610
paths of that API a good one to add at

00:09:17,440 --> 00:09:23,800
this point is check for an API key and

00:09:21,610 --> 00:09:26,380
see you have a good API key so he puts

00:09:23,800 --> 00:09:29,440
that in right away now let's see what

00:09:26,380 --> 00:09:31,330
happens ah okay you can no longer get to

00:09:29,440 --> 00:09:34,710
your precious back-end data from Chrome

00:09:31,330 --> 00:09:40,930
because it's looking for a valid API key

00:09:34,710 --> 00:09:43,240
now few steps api's back a little okay

00:09:40,930 --> 00:09:45,540
thanks okay okay yeah you have to create

00:09:43,240 --> 00:09:49,000
a product so he's clicking on product a

00:09:45,540 --> 00:09:51,370
product is a way a logical collection of

00:09:49,000 --> 00:09:53,380
API is that go together for developers

00:09:51,370 --> 00:09:56,110
might be as little as one API but

00:09:53,380 --> 00:09:59,230
typically there may be several ones for

00:09:56,110 --> 00:10:01,120
example a security product might have

00:09:59,230 --> 00:10:03,550
several kinds of protection for

00:10:01,120 --> 00:10:06,340
different kinds of code injection moving

00:10:03,550 --> 00:10:09,550
on okay so he's creating a product name

00:10:06,340 --> 00:10:11,650
product and moving on and he selects

00:10:09,550 --> 00:10:13,780
just the API that he just built saying

00:10:11,650 --> 00:10:16,570
that's what's in the product okay and

00:10:13,780 --> 00:10:18,760
the product is now published which means

00:10:16,570 --> 00:10:20,800
that he can work on it in the developer

00:10:18,760 --> 00:10:23,020
portal so at this point he puts on his

00:10:20,800 --> 00:10:27,310
developer hat and opens the developer

00:10:23,020 --> 00:10:30,160
portal he sees the product there he can

00:10:27,310 --> 00:10:32,200
click on that and typically there would

00:10:30,160 --> 00:10:33,490
be information he's dealt with things so

00:10:32,200 --> 00:10:35,170
he knows what it does but this would

00:10:33,490 --> 00:10:38,740
have a lot of information about what

00:10:35,170 --> 00:10:41,980
this API does and any cautions about

00:10:38,740 --> 00:10:46,120
using it he subscribes in the name of

00:10:41,980 --> 00:10:49,060
his application okay moving on and so

00:10:46,120 --> 00:10:51,010
that's the company store UI which also

00:10:49,060 --> 00:10:54,030
is now going to have additional logic

00:10:51,010 --> 00:10:58,630
and widgets for his deprecated items

00:10:54,030 --> 00:11:02,670
announcement and the exchange button so

00:10:58,630 --> 00:11:05,340
now the company store UI is a registered

00:11:02,670 --> 00:11:08,830
API application and

00:11:05,340 --> 00:11:12,580
if he clicks on that he finds its very

00:11:08,830 --> 00:11:15,670
own unique API key that is going to give

00:11:12,580 --> 00:11:22,030
him access to the API so we move on and

00:11:15,670 --> 00:11:24,190
there's a in SAT cloud platform you have

00:11:22,030 --> 00:11:25,990
a client that can use for testing these

00:11:24,190 --> 00:11:30,850
things or he could use postmen same

00:11:25,990 --> 00:11:35,680
thing and sure enough if he adds the API

00:11:30,850 --> 00:11:36,970
key to his request he can actually get

00:11:35,680 --> 00:11:40,950
at the backend date and this time it's

00:11:36,970 --> 00:11:45,910
been done securely with an API key

00:11:40,950 --> 00:11:49,630
so moving on so he's gotten at the

00:11:45,910 --> 00:11:52,540
back-end data he has managed to add a

00:11:49,630 --> 00:11:57,250
policy that makes it safe to expose and

00:11:52,540 --> 00:11:59,260
now he can use hooks those hooks from

00:11:57,250 --> 00:12:01,600
the company store UI so that he can

00:11:59,260 --> 00:12:03,070
exchange deprecated devices so he

00:12:01,600 --> 00:12:06,130
basically just has to make changes to

00:12:03,070 --> 00:12:10,480
the UI the back end remains exactly the

00:12:06,130 --> 00:12:11,890
same and a different was and so he gets

00:12:10,480 --> 00:12:15,160
it and now his employees are able to

00:12:11,890 --> 00:12:19,810
exchange the deprecated phones is he

00:12:15,160 --> 00:12:22,000
done well not quite léo it turns out is

00:12:19,810 --> 00:12:24,070
now getting flooded with thousands of

00:12:22,000 --> 00:12:27,220
phones which the vendor will not take

00:12:24,070 --> 00:12:29,590
back and his idea for a solution is

00:12:27,220 --> 00:12:32,410
could he please have an external facing

00:12:29,590 --> 00:12:35,830
website so that wholesalers can bid on

00:12:32,410 --> 00:12:39,460
these things and he can clear his stock

00:12:35,830 --> 00:12:41,950
he needs to zero his inventory they

00:12:39,460 --> 00:12:45,280
discuss it and the company is able to

00:12:41,950 --> 00:12:49,960
negotiate to have a 24-hour closeout

00:12:45,280 --> 00:12:52,630
online auction but a 24-hour closeout of

00:12:49,960 --> 00:12:55,390
bidding war does not sound good to walls

00:12:52,630 --> 00:12:57,880
because that web traffic would not be a

00:12:55,390 --> 00:13:01,390
good thing for his dedicated servers to

00:12:57,880 --> 00:13:04,710
experience the answer is to deploy the

00:13:01,390 --> 00:13:08,380
auction site on Cloud Foundry moving on

00:13:04,710 --> 00:13:13,290
so he doesn't create the auction site

00:13:08,380 --> 00:13:17,680
what he does is he goes back to the API

00:13:13,290 --> 00:13:19,139
portal and he creates permissions on a

00:13:17,680 --> 00:13:21,989
product

00:13:19,139 --> 00:13:25,049
that can be exposed to external users

00:13:21,989 --> 00:13:27,059
and then those users login to the dev

00:13:25,049 --> 00:13:29,939
portal and with their roll they only see

00:13:27,059 --> 00:13:32,549
a limited number of products

00:13:29,939 --> 00:13:35,730
so using that reduced product which

00:13:32,549 --> 00:13:38,669
doesn't expose anything that that is

00:13:35,730 --> 00:13:41,879
sensitive a contractor is able to create

00:13:38,669 --> 00:13:45,199
an auction site using another sa P Club

00:13:41,879 --> 00:13:47,970
platform feature the portal service and

00:13:45,199 --> 00:13:50,669
the portal service is a great way to

00:13:47,970 --> 00:13:53,129
create things websites that have uniform

00:13:50,669 --> 00:13:55,619
branding and that are tightly integrated

00:13:53,129 --> 00:13:59,160
with the rest of SA P cloud platform so

00:13:55,619 --> 00:14:02,069
the site has been created for him he now

00:13:59,160 --> 00:14:04,439
goes into so Walt now can access his

00:14:02,069 --> 00:14:07,980
Cloud Foundry space and a CP cloud

00:14:04,439 --> 00:14:12,809
platform and he can create a container

00:14:07,980 --> 00:14:17,699
for his for his closeout sales and then

00:14:12,809 --> 00:14:20,699
upload it from the mtar file which

00:14:17,699 --> 00:14:24,299
represents the work that the the

00:14:20,699 --> 00:14:27,230
contractor did and at that point he sees

00:14:24,299 --> 00:14:32,549
that he now has an instance of his

00:14:27,230 --> 00:14:36,899
closeout site and it's running he can

00:14:32,549 --> 00:14:42,959
look at details of it and then next he

00:14:36,899 --> 00:14:47,850
can vary the quota and memory next and

00:14:42,959 --> 00:14:51,029
he can those two buttons up there allow

00:14:47,850 --> 00:14:56,220
him to add or subtract instances and

00:14:51,029 --> 00:15:00,749
next and so by monitoring exactly what's

00:14:56,220 --> 00:15:06,029
going on he can massage the ability of

00:15:00,749 --> 00:15:08,730
the auction site to hand traffic so leo

00:15:06,029 --> 00:15:13,639
is able to clear his shelves and the

00:15:08,730 --> 00:15:17,459
deprecated inventory is your doubt now

00:15:13,639 --> 00:15:19,429
Walt is getting emails from some of the

00:15:17,459 --> 00:15:21,480
bidders who would like to have

00:15:19,429 --> 00:15:23,160
opportunities to buy other excess

00:15:21,480 --> 00:15:26,989
inventory and they would like to

00:15:23,160 --> 00:15:31,709
subscribe to these api's as a service

00:15:26,989 --> 00:15:33,430
well walls is able to recognize that he

00:15:31,709 --> 00:15:35,889
was able to solve his immediate

00:15:33,430 --> 00:15:40,230
Leo wants to use the same method to

00:15:35,889 --> 00:15:44,079
liquidate further inventory issues so

00:15:40,230 --> 00:15:45,970
he's now considering selling access to a

00:15:44,079 --> 00:15:48,250
limited API that he now has a good idea

00:15:45,970 --> 00:15:50,560
of what it would be to Liquidators and

00:15:48,250 --> 00:15:54,250
third-party developers and charge them

00:15:50,560 --> 00:15:56,860
based on usage next so tracking usage is

00:15:54,250 --> 00:15:59,290
the key to monetization here and that's

00:15:56,860 --> 00:16:01,540
analytics so if you see here the API

00:15:59,290 --> 00:16:04,329
platform and developer services we

00:16:01,540 --> 00:16:06,910
talked about but the analytics is the

00:16:04,329 --> 00:16:09,029
other part of this so you can look at

00:16:06,910 --> 00:16:12,250
the long and short term trends and

00:16:09,029 --> 00:16:16,300
analyze and of course because every

00:16:12,250 --> 00:16:18,759
application has a unique token you're

00:16:16,300 --> 00:16:23,290
able to see a key you're able to see

00:16:18,759 --> 00:16:24,910
who's using what now you probably also

00:16:23,290 --> 00:16:27,009
noticed we had this thing called API

00:16:24,910 --> 00:16:29,350
business hub which was to the left when

00:16:27,009 --> 00:16:36,639
he went to API management now what that

00:16:29,350 --> 00:16:38,860
is is like the developer portal but it's

00:16:36,639 --> 00:16:42,329
for the things that came out of the box

00:16:38,860 --> 00:16:46,329
with s ap cloud platform you're able to

00:16:42,329 --> 00:16:51,899
get at those features through AP is and

00:16:46,329 --> 00:16:56,529
so you can explore that and use that as

00:16:51,899 --> 00:17:02,139
a way of generating new functionality so

00:16:56,529 --> 00:17:03,279
next so yeah the yeah this is a good

00:17:02,139 --> 00:17:05,409
example of some of the things on the

00:17:03,279 --> 00:17:10,030
side there the s for Hana

00:17:05,409 --> 00:17:12,189
finance or the success factors these are

00:17:10,030 --> 00:17:14,949
all the translation of these are all

00:17:12,189 --> 00:17:18,309
things that can be accessed as api's and

00:17:14,949 --> 00:17:23,500
integrated another software translation

00:17:18,309 --> 00:17:26,260
app is something like 39 languages these

00:17:23,500 --> 00:17:29,470
are some resources and the most

00:17:26,260 --> 00:17:35,049
important thing is that if you do decide

00:17:29,470 --> 00:17:39,880
to just sign up for free for a your very

00:17:35,049 --> 00:17:45,500
own trial landscape you play these

00:17:39,880 --> 00:17:48,610
things and it's better than a demo next

00:17:45,500 --> 00:17:48,610
thank you very much

00:17:55,909 --> 00:18:01,400
never mike fan so I did just want to

00:17:59,900 --> 00:18:05,240
summarize a little bit about what we had

00:18:01,400 --> 00:18:07,580
heard in this nice demo presentation

00:18:05,240 --> 00:18:10,490
you know the idea here is that you can

00:18:07,580 --> 00:18:12,679
as a developer come in and work on top

00:18:10,490 --> 00:18:16,610
of the api's that exists already to

00:18:12,679 --> 00:18:19,460
monetize and basically revamp existing

00:18:16,610 --> 00:18:21,770
access and assets you can do that either

00:18:19,460 --> 00:18:23,600
as a partner so Bob mentioned for

00:18:21,770 --> 00:18:25,789
example you can have a partner build the

00:18:23,600 --> 00:18:28,309
shell structure which can be realized on

00:18:25,789 --> 00:18:30,020
top of the api's that exists already you

00:18:28,309 --> 00:18:31,850
can do this as a customer so you can

00:18:30,020 --> 00:18:33,650
actually incentivize developers to

00:18:31,850 --> 00:18:36,890
direct traffic so for example the

00:18:33,650 --> 00:18:39,080
auction site you can basically open up

00:18:36,890 --> 00:18:41,809
those api's to the developers and say

00:18:39,080 --> 00:18:43,789
for every you know person you direct

00:18:41,809 --> 00:18:46,130
over to my auction site I will give you

00:18:43,789 --> 00:18:47,900
some small amount of payment from your

00:18:46,130 --> 00:18:49,190
application and I will track that again

00:18:47,900 --> 00:18:51,440
as bob was talking about through your

00:18:49,190 --> 00:18:53,720
API key which you're able to get and

00:18:51,440 --> 00:18:55,880
you're also able to as a developer

00:18:53,720 --> 00:18:57,770
create your own api's on top of the

00:18:55,880 --> 00:19:00,440
micro services and Cloud Foundry and

00:18:57,770 --> 00:19:03,049
charge other users to use the service

00:19:00,440 --> 00:19:05,299
that you are creating in again like the

00:19:03,049 --> 00:19:07,700
smash-up style concept where for example

00:19:05,299 --> 00:19:09,919
you have an existing legacy system you

00:19:07,700 --> 00:19:11,270
built an extension on top of that from

00:19:09,919 --> 00:19:13,250
your own micro service that you've

00:19:11,270 --> 00:19:15,110
created and by then consuming what

00:19:13,250 --> 00:19:18,380
you've created you're able to then

00:19:15,110 --> 00:19:19,490
charge them some cost to use and that's

00:19:18,380 --> 00:19:21,200
actually one of the very nice things

00:19:19,490 --> 00:19:23,840
about the API business of that bob was

00:19:21,200 --> 00:19:25,880
just introducing is that many developers

00:19:23,840 --> 00:19:27,260
are not necessarily enterprise

00:19:25,880 --> 00:19:30,200
developers you may not know about

00:19:27,260 --> 00:19:31,549
enterprise services software all this

00:19:30,200 --> 00:19:33,169
stuff it's something you don't really

00:19:31,549 --> 00:19:35,720
care about you've never worked with it

00:19:33,169 --> 00:19:37,010
before but with the API is you don't

00:19:35,720 --> 00:19:38,990
need to know all that stuff right you

00:19:37,010 --> 00:19:40,669
just need to know what the forms of the

00:19:38,990 --> 00:19:42,140
data that's going to be returned you

00:19:40,669 --> 00:19:44,000
need to know sort of what people are

00:19:42,140 --> 00:19:45,679
going to be looking for and then build

00:19:44,000 --> 00:19:47,179
some kind of extension or application on

00:19:45,679 --> 00:19:49,820
top of that so we've actually already

00:19:47,179 --> 00:19:52,580
seen success factors which is our HR

00:19:49,820 --> 00:19:55,669
solution we've seen developers come into

00:19:52,580 --> 00:19:57,049
the business hub discover the forms and

00:19:55,669 --> 00:19:57,770
data that's returned we actually have

00:19:57,049 --> 00:20:00,440
sandbox

00:19:57,770 --> 00:20:03,110
you can play with live in the VPI

00:20:00,440 --> 00:20:05,420
business hub for free and just from

00:20:03,110 --> 00:20:07,550
discovering and learning what those data

00:20:05,420 --> 00:20:10,310
formats look like build an application

00:20:07,550 --> 00:20:12,440
that actually visualizes and makes a

00:20:10,310 --> 00:20:14,420
nice front-end on top of that data which

00:20:12,440 --> 00:20:17,000
can then be sold to customers in order

00:20:14,420 --> 00:20:18,200
to actually be used in their live

00:20:17,000 --> 00:20:19,580
production instances and these are

00:20:18,200 --> 00:20:21,800
people who don't necessarily know this

00:20:19,580 --> 00:20:24,830
enterprise data already so it's a really

00:20:21,800 --> 00:20:27,710
nice way to actually start to develop

00:20:24,830 --> 00:20:29,570
monetize and make money on top of data

00:20:27,710 --> 00:20:32,570
without having to be like a true

00:20:29,570 --> 00:20:34,610
enterprise and level person so I just

00:20:32,570 --> 00:20:36,350
wanted to kind of summarize all the

00:20:34,610 --> 00:20:38,660
things that you heard here as well as

00:20:36,350 --> 00:20:40,670
bring a little bit of new stuff into it

00:20:38,660 --> 00:20:42,650
now of course monetization doesn't have

00:20:40,670 --> 00:20:45,200
to just be on the API management layer

00:20:42,650 --> 00:20:47,630
level we like it because it makes it

00:20:45,200 --> 00:20:49,430
much more easy and flexible there was an

00:20:47,630 --> 00:20:52,430
earlier talk by a pun College about

00:20:49,430 --> 00:20:55,100
actually monetizing micro services on

00:20:52,430 --> 00:20:57,110
the Cloud Foundry low layer and you can

00:20:55,100 --> 00:20:59,360
really do monetization wherever you want

00:20:57,110 --> 00:21:02,090
but we think that API is one of the

00:20:59,360 --> 00:21:05,540
easiest ways to actually go ahead and be

00:21:02,090 --> 00:21:09,170
very agile in terms of getting processes

00:21:05,540 --> 00:21:11,060
started and monetizing them so I think

00:21:09,170 --> 00:21:13,430
with that maybe we can open it up for

00:21:11,060 --> 00:21:15,080
questions are there any questions about

00:21:13,430 --> 00:21:17,150
any of the things that you saw here I

00:21:15,080 --> 00:21:23,360
know this is a lot of information to be

00:21:17,150 --> 00:21:27,010
presented with at once if not I'm not

00:21:23,360 --> 00:21:27,010
seeing a lot of hands up

00:21:42,000 --> 00:21:46,840
so there are definitely quite a few

00:21:44,169 --> 00:21:48,130
security policies so authentication of

00:21:46,840 --> 00:21:50,700
course doesn't have to just be done with

00:21:48,130 --> 00:21:54,039
an API key you can do it with an OAuth

00:21:50,700 --> 00:21:56,500
token you can do with sam'l so calling

00:21:54,039 --> 00:21:58,809
out to an IDP for people to really make

00:21:56,500 --> 00:22:02,380
these applications Enterprise ready and

00:21:58,809 --> 00:22:04,409
then there's real access runtime level

00:22:02,380 --> 00:22:07,379
authentication so you can do things like

00:22:04,409 --> 00:22:09,519
like you're saying injection protection

00:22:07,379 --> 00:22:13,210
one of the ones that I just saw very

00:22:09,519 --> 00:22:16,299
recently was for JSON inspection you can

00:22:13,210 --> 00:22:18,970
actually limit the number of recursive

00:22:16,299 --> 00:22:20,500
layers that can be added to a particular

00:22:18,970 --> 00:22:22,539
thing so you can't just overload a

00:22:20,500 --> 00:22:25,720
back-end with some ridiculous number of

00:22:22,539 --> 00:22:29,289
things you can do traffic quota you can

00:22:25,720 --> 00:22:30,940
do spiked arrests you can do XML bomb

00:22:29,289 --> 00:22:32,679
protection and things like that so there

00:22:30,940 --> 00:22:34,899
are actually quite a number of pre-made

00:22:32,679 --> 00:22:36,610
security policies specifically with that

00:22:34,899 --> 00:22:39,639
kind of stuff in mind and I don't know

00:22:36,610 --> 00:22:41,080
if anyone's familiar with Oh wasp so

00:22:39,639 --> 00:22:43,779
this is kind of a broader security thing

00:22:41,080 --> 00:22:46,600
so we've really tried to address a lot

00:22:43,779 --> 00:22:48,159
of the top threats that they have

00:22:46,600 --> 00:22:50,320
brought up in terms of being a

00:22:48,159 --> 00:22:52,090
ready-made policy and then as Bob

00:22:50,320 --> 00:22:54,909
mentioned you can actually create or

00:22:52,090 --> 00:22:56,769
script your own enhanced security

00:22:54,909 --> 00:22:58,740
protections if there's something that's

00:22:56,769 --> 00:23:01,629
not out of the box that you really need

00:22:58,740 --> 00:23:03,159
so it's it's a pretty robust tool we're

00:23:01,629 --> 00:23:05,679
actually really protecting and making

00:23:03,159 --> 00:23:08,049
sure that API is are not just open

00:23:05,679 --> 00:23:10,389
willy-nilly and that's really one of the

00:23:08,049 --> 00:23:12,070
powers of that is that everybody loves

00:23:10,389 --> 00:23:14,950
API is I mean it really makes the

00:23:12,070 --> 00:23:16,570
developer experience much better but the

00:23:14,950 --> 00:23:17,950
idea of having just open API is is not

00:23:16,570 --> 00:23:20,500
always the best especially in an

00:23:17,950 --> 00:23:22,360
enterprise scenario so you know if you

00:23:20,500 --> 00:23:25,090
have any kind of need for protection of

00:23:22,360 --> 00:23:27,370
back-end having that managed API with

00:23:25,090 --> 00:23:28,809
the security the authentication the

00:23:27,370 --> 00:23:30,340
transformations things like that it

00:23:28,809 --> 00:23:34,980
really adds a lot of value to those of

00:23:30,340 --> 00:23:34,980
you guys so thank you for that question

00:23:35,130 --> 00:23:52,140
any other questions so our developer

00:23:49,919 --> 00:23:54,000
portal well so the actual underlying

00:23:52,140 --> 00:23:57,000
structure of the API management is all

00:23:54,000 --> 00:23:59,309
built as an API first technology so you

00:23:57,000 --> 00:24:02,910
can access all of the information via

00:23:59,309 --> 00:24:05,250
API calls the actual just front-end is

00:24:02,910 --> 00:24:07,970
built on what we call Fiore this is kind

00:24:05,250 --> 00:24:11,039
of our fury experience but it can be

00:24:07,970 --> 00:24:12,929
modified so for example Bob talked about

00:24:11,039 --> 00:24:15,390
the cloud portal you can actually build

00:24:12,929 --> 00:24:18,110
a cloud portal front-end to other

00:24:15,390 --> 00:24:18,110
developer portal

00:24:31,210 --> 00:24:36,110
and you don't have to use our stuff out

00:24:34,009 --> 00:24:39,379
of the box either so you can use even

00:24:36,110 --> 00:24:43,009
just like a CMS or just a plain webpage

00:24:39,379 --> 00:24:45,739
as long as you're able to pull in those

00:24:43,009 --> 00:24:46,999
API calls so it really is whatever you

00:24:45,739 --> 00:24:49,129
want so we provide something for you out

00:24:46,999 --> 00:24:51,649
of the box we provide templates for

00:24:49,129 --> 00:24:53,210
making easily consumed portal sites and

00:24:51,649 --> 00:24:54,710
then if you want to go your own way then

00:24:53,210 --> 00:25:00,489
you have all those API calls available

00:24:54,710 --> 00:25:02,480
as well yeah perfect

00:25:00,489 --> 00:25:03,440
anything else and every time I start to

00:25:02,480 --> 00:25:05,090
say like oh there's no more questions

00:25:03,440 --> 00:25:07,489
someone has one so really

00:25:05,090 --> 00:25:12,859
I'll wait this time they have their

00:25:07,489 --> 00:25:14,269
questions okay now I'm calling it and if

00:25:12,859 --> 00:25:14,659
you do have other questions that come to

00:25:14,269 --> 00:25:17,029
mind

00:25:14,659 --> 00:25:19,609
we do have an expert booth available in

00:25:17,029 --> 00:25:20,989
the show call oh and myself will be

00:25:19,609 --> 00:25:22,269
participating as well as a number of

00:25:20,989 --> 00:25:25,549
other experts in the cloud platform

00:25:22,269 --> 00:25:28,580
product management and true technical

00:25:25,549 --> 00:25:29,989
development experience level so please

00:25:28,580 --> 00:25:32,960
feel free to come by and ask us any

00:25:29,989 --> 00:25:35,169
questions you like and thank you for

00:25:32,960 --> 00:25:35,169

YouTube URL: https://www.youtube.com/watch?v=Lw9w6FK2JMg


