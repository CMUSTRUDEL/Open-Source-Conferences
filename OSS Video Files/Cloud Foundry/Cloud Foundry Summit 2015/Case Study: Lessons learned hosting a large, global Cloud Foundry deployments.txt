Title: Case Study: Lessons learned hosting a large, global Cloud Foundry deployments
Publication date: 2015-05-12
Playlist: Cloud Foundry Summit 2015
Description: 
	Case Study: Lessons learned hosting a large, global Cloud Foundry deployments - 06 Adam Gunther, Bala Rajaraman 720p
Captions: 
	00:00:00,030 --> 00:00:04,560
so thank you everyone for coming this

00:00:02,070 --> 00:00:07,620
afternoon Bala and I are here to talk

00:00:04,560 --> 00:00:08,820
about our experiences hosting large

00:00:07,620 --> 00:00:12,509
cloud foundry deployments through

00:00:08,820 --> 00:00:13,799
bluemix we've had a great great fun

00:00:12,509 --> 00:00:18,119
working with cloud foundry in the

00:00:13,799 --> 00:00:19,260
community over the last few years on the

00:00:18,119 --> 00:00:21,180
foundation really since the beginning

00:00:19,260 --> 00:00:23,039
and before the idea I mean I remember

00:00:21,180 --> 00:00:26,000
Bala and I were both on early projects

00:00:23,039 --> 00:00:27,930
that led into what bluemix became and

00:00:26,000 --> 00:00:29,550
sitting around and you know what's our

00:00:27,930 --> 00:00:31,470
strategy how are we gonna do this and at

00:00:29,550 --> 00:00:33,899
the time we were still filling that out

00:00:31,470 --> 00:00:35,579
and a lot of the sentiment you heard Sam

00:00:33,899 --> 00:00:37,410
kick off the day this morning about the

00:00:35,579 --> 00:00:40,620
power of the community and none of us is

00:00:37,410 --> 00:00:43,350
as smart as all of us and we've just

00:00:40,620 --> 00:00:44,640
seemed so much growth to the community

00:00:43,350 --> 00:00:46,950
if you've worked in whether it's eclipse

00:00:44,640 --> 00:00:48,780
or OpenStack and the idea of cloud

00:00:46,950 --> 00:00:51,270
foundry and folks like Chris Farris and

00:00:48,780 --> 00:00:53,039
Bala and Rachel and Angel coming in

00:00:51,270 --> 00:00:55,079
starting with pivotal and helping grow

00:00:53,039 --> 00:00:57,600
this foundation it's really really

00:00:55,079 --> 00:00:58,350
really been fun so today we're going to

00:00:57,600 --> 00:01:00,530
talk a little about what we've been

00:00:58,350 --> 00:01:03,480
doing share some of our experiences

00:01:00,530 --> 00:01:05,369
share some of what we're hearing from

00:01:03,480 --> 00:01:06,960
the clients that we work with and that

00:01:05,369 --> 00:01:09,150
are driving a lot of needs that we think

00:01:06,960 --> 00:01:11,880
as a community we can work together to

00:01:09,150 --> 00:01:13,140
address and what kind of men with some

00:01:11,880 --> 00:01:15,150
of the ideas of areas that we can

00:01:13,140 --> 00:01:16,770
collaborate on moving forward we hope

00:01:15,150 --> 00:01:19,110
that our stories resonate with some of

00:01:16,770 --> 00:01:20,850
you in the audience and the best result

00:01:19,110 --> 00:01:23,250
is that people at the end go yeah we're

00:01:20,850 --> 00:01:25,200
experiencing similar things or we have

00:01:23,250 --> 00:01:26,820
visions for the similar or our clients

00:01:25,200 --> 00:01:28,439
are telling us similar things and we'd

00:01:26,820 --> 00:01:33,479
like to collaborate together around that

00:01:28,439 --> 00:01:35,549
as part of the community so a little bit

00:01:33,479 --> 00:01:37,250
about our implementation of Cloud

00:01:35,549 --> 00:01:40,140
Foundry and it is the world's largest

00:01:37,250 --> 00:01:42,240
public hosted deployment of Cloud

00:01:40,140 --> 00:01:45,360
Foundry so we've got in production we've

00:01:42,240 --> 00:01:46,740
got two data centers today one in Dallas

00:01:45,360 --> 00:01:49,770
and one in London

00:01:46,740 --> 00:01:52,259
huge huge scale we are onboarding 8,000

00:01:49,770 --> 00:01:54,990
new users a week into this environment

00:01:52,259 --> 00:01:56,340
so with that right that's helped driven

00:01:54,990 --> 00:01:59,159
a lot of the quality and a lot of things

00:01:56,340 --> 00:02:00,509
into Cloud Foundry today so we have lots

00:01:59,159 --> 00:02:02,399
of Engineers that have been through the

00:02:00,509 --> 00:02:04,560
dojo process that are contributing a lot

00:02:02,399 --> 00:02:06,719
of code actually number two in the

00:02:04,560 --> 00:02:08,160
community and code contributions and a

00:02:06,719 --> 00:02:09,300
lot of that is a direct result of just

00:02:08,160 --> 00:02:11,300
the scale and what we've been

00:02:09,300 --> 00:02:13,310
experiencing out there in the field and

00:02:11,300 --> 00:02:15,140
we've really got multiple to

00:02:13,310 --> 00:02:17,510
employment options within bluemix so

00:02:15,140 --> 00:02:19,130
that's the public hosted we've got a

00:02:17,510 --> 00:02:21,890
private hosted version that we call

00:02:19,130 --> 00:02:23,900
bluemix dedicated we can install that at

00:02:21,890 --> 00:02:24,459
any SoftLayer data center around the

00:02:23,900 --> 00:02:27,380
globe

00:02:24,459 --> 00:02:29,209
so in addition to the big public

00:02:27,380 --> 00:02:32,870
footprint we're running Cloud Foundry

00:02:29,209 --> 00:02:35,269
instances specific for clients that say

00:02:32,870 --> 00:02:38,360
yeah I want to go off premises I want a

00:02:35,269 --> 00:02:40,489
cloud but I want to private within me so

00:02:38,360 --> 00:02:42,380
there's also a whole bunch of operations

00:02:40,489 --> 00:02:44,000
we have to do around that and we're

00:02:42,380 --> 00:02:45,790
gonna talk more about what we're hearing

00:02:44,000 --> 00:02:48,410
on what we're doing around hybrid

00:02:45,790 --> 00:02:49,790
borderless clouds and really clients

00:02:48,410 --> 00:02:52,310
want to use all these deployments

00:02:49,790 --> 00:02:54,769
together and that's really where we see

00:02:52,310 --> 00:02:56,780
a lot of opportunity you hear a lot of

00:02:54,769 --> 00:02:58,610
talk in the hallways about multi cloud

00:02:56,780 --> 00:03:00,470
and hybrid cloud and that's because

00:02:58,610 --> 00:03:02,780
that's what the market wants is what

00:03:00,470 --> 00:03:08,989
customers want and it's a great focus

00:03:02,780 --> 00:03:10,760
area and opportunity for us so really

00:03:08,989 --> 00:03:13,010
we've got to feedback and it's given us

00:03:10,760 --> 00:03:15,590
some good perspectives in a few

00:03:13,010 --> 00:03:17,269
different areas so the first one really

00:03:15,590 --> 00:03:20,090
around Cloud Foundry customer

00:03:17,269 --> 00:03:21,650
requirements you know one of the early

00:03:20,090 --> 00:03:23,180
ones that I was familiar with from you

00:03:21,650 --> 00:03:25,940
know probably about a year and a half

00:03:23,180 --> 00:03:27,620
ago going back was ok let's pick the

00:03:25,940 --> 00:03:29,239
Java Runtime space there's lots of

00:03:27,620 --> 00:03:30,769
different Java runtimes in the market

00:03:29,239 --> 00:03:32,329
some people want to use Tomcat some

00:03:30,769 --> 00:03:34,910
people want to use WebSphere Liberty

00:03:32,329 --> 00:03:35,930
some people want to use JBoss and we

00:03:34,910 --> 00:03:39,290
didn't really have a good way to

00:03:35,930 --> 00:03:41,030
administer that in the community so we

00:03:39,290 --> 00:03:42,590
worked together with the community to

00:03:41,030 --> 00:03:44,600
bring admin bill packs and to bring a

00:03:42,590 --> 00:03:46,190
better administration model to how we

00:03:44,600 --> 00:03:47,720
can control different runtimes with bill

00:03:46,190 --> 00:03:49,489
packs some things around high

00:03:47,720 --> 00:03:51,200
availability that we've brought into and

00:03:49,489 --> 00:03:53,150
there's a long list that we're hearing

00:03:51,200 --> 00:03:55,010
around you know opportunities for a

00:03:53,150 --> 00:03:56,870
Cloud Foundry to keep pushing the

00:03:55,010 --> 00:03:59,810
balance on really enterprise and scale

00:03:56,870 --> 00:04:02,389
and all that designed around what it

00:03:59,810 --> 00:04:05,359
takes to build real-world solutions I

00:04:02,389 --> 00:04:07,519
think that's what we hear a lot there's

00:04:05,359 --> 00:04:09,440
kind of this myth that you have

00:04:07,519 --> 00:04:11,750
platform-as-a-service that's kind of the

00:04:09,440 --> 00:04:14,299
future that's not real world production

00:04:11,750 --> 00:04:16,010
and we're working with clients that are

00:04:14,299 --> 00:04:17,870
living the opposite that are really

00:04:16,010 --> 00:04:20,930
embraced platform as the services I know

00:04:17,870 --> 00:04:22,729
many people are in this room and see the

00:04:20,930 --> 00:04:24,349
value that you can get out of it when

00:04:22,729 --> 00:04:26,659
you start to compose applications from

00:04:24,349 --> 00:04:27,230
services and api's and your developers

00:04:26,659 --> 00:04:29,290
don't have to

00:04:27,230 --> 00:04:32,360
worried about that underlying platform

00:04:29,290 --> 00:04:34,970
but even within that not everything is

00:04:32,360 --> 00:04:36,740
going to be born on the cloud so how you

00:04:34,970 --> 00:04:40,280
connect that back into the enterprise

00:04:36,740 --> 00:04:42,290
and really how you even navigate this

00:04:40,280 --> 00:04:43,820
emerging cloud landscape around things

00:04:42,290 --> 00:04:46,190
that I can build just with docker on

00:04:43,820 --> 00:04:48,440
bare metal things that I can build it in

00:04:46,190 --> 00:04:51,110
a platform like cloud foundry and when

00:04:48,440 --> 00:04:52,910
you really get into the use cases if you

00:04:51,110 --> 00:04:56,120
start to complement these technologies

00:04:52,910 --> 00:04:57,830
together you get a lot of power and

00:04:56,120 --> 00:04:59,660
that's what we're excited to that a lot

00:04:57,830 --> 00:05:01,340
of the the partners and the vendors and

00:04:59,660 --> 00:05:02,510
people here are people that are involved

00:05:01,340 --> 00:05:04,340
in all these different communities

00:05:02,510 --> 00:05:07,310
around cloud we've got a lot of

00:05:04,340 --> 00:05:08,960
opportunity in that space and really

00:05:07,310 --> 00:05:10,880
around the operations and I talked to

00:05:08,960 --> 00:05:13,640
the beginning about the scale of what

00:05:10,880 --> 00:05:15,920
we're doing it takes a lot to operate

00:05:13,640 --> 00:05:17,500
that not just from cloud foundry but to

00:05:15,920 --> 00:05:19,820
the services that we bring into that

00:05:17,500 --> 00:05:24,440
services that partners bring into that

00:05:19,820 --> 00:05:26,570
and really what the end user wants is a

00:05:24,440 --> 00:05:29,000
consistent cohesive experience around a

00:05:26,570 --> 00:05:31,250
platform so when I'm running my cloud

00:05:29,000 --> 00:05:32,870
foundry environment I'm gonna have

00:05:31,250 --> 00:05:34,610
services from 10 different vendors and

00:05:32,870 --> 00:05:36,710
things I bring myself and how do I

00:05:34,610 --> 00:05:39,950
manage and operate that all together as

00:05:36,710 --> 00:05:43,100
a cohesive platform so I'm gonna turn it

00:05:39,950 --> 00:05:44,930
over to Bala who is our distinguished

00:05:43,100 --> 00:05:47,840
chief architect newly named IBM fellow

00:05:44,930 --> 00:05:49,760
we can't embarrass him enough he was

00:05:47,840 --> 00:05:51,740
very excited about the blue text on the

00:05:49,760 --> 00:05:54,290
opening chart so if you like the shade

00:05:51,740 --> 00:05:56,300
of blue please let Bala know but I'm

00:05:54,290 --> 00:05:57,950
gonna invite Bala to come up on stage

00:05:56,300 --> 00:05:59,360
and talk a little bit more architectural

00:05:57,950 --> 00:06:01,150
II about what we've been doing with

00:05:59,360 --> 00:06:03,980
cloud foundry

00:06:01,150 --> 00:06:06,950
thank you Adam and I'm really proud of

00:06:03,980 --> 00:06:12,770
the blue bit or that particular shade it

00:06:06,950 --> 00:06:14,150
is critical so Adam said the context

00:06:12,770 --> 00:06:15,200
which is I mean when we look at cloud

00:06:14,150 --> 00:06:16,910
foundry I mean I think there are

00:06:15,200 --> 00:06:19,310
certainly certain set of workloads that

00:06:16,910 --> 00:06:21,500
are that can be put completely in cloud

00:06:19,310 --> 00:06:23,900
foundry but in many of our engagements

00:06:21,500 --> 00:06:26,420
we've seen that it's actually fit into a

00:06:23,900 --> 00:06:28,910
brownfield environment so we've been

00:06:26,420 --> 00:06:30,410
working with a payment provider and this

00:06:28,910 --> 00:06:31,880
is kind of an abstraction of their

00:06:30,410 --> 00:06:35,240
architecture what you see in the middle

00:06:31,880 --> 00:06:37,250
is a bunch of legacy stuff I mean these

00:06:35,240 --> 00:06:39,440
are traditional applications traditional

00:06:37,250 --> 00:06:41,020
patterns legacy not in the derogatory

00:06:39,440 --> 00:06:43,180
sense but legacy in the sense of arc

00:06:41,020 --> 00:06:46,210
patterns and what tools and technologies

00:06:43,180 --> 00:06:49,030
they used in the past and for the most

00:06:46,210 --> 00:06:50,680
part they are systems of record which is

00:06:49,030 --> 00:06:51,729
they focus on transactional data and

00:06:50,680 --> 00:06:54,460
some of the processes that aren't

00:06:51,729 --> 00:06:56,020
transactional data but it's also been at

00:06:54,460 --> 00:06:58,120
least my observation that in the past

00:06:56,020 --> 00:06:59,830
you had just a few tools I mean you had

00:06:58,120 --> 00:07:01,900
databases and you had app servers and

00:06:59,830 --> 00:07:04,210
everything fit into that paradigm you

00:07:01,900 --> 00:07:06,990
were forced by the availability of tools

00:07:04,210 --> 00:07:09,340
into a certain style of architecture and

00:07:06,990 --> 00:07:13,360
so you have a whole bunch of legacy code

00:07:09,340 --> 00:07:15,370
and many customers 80% is what stuck in

00:07:13,360 --> 00:07:16,870
the middle and when you have a

00:07:15,370 --> 00:07:19,090
discussion with them around the

00:07:16,870 --> 00:07:20,800
pragmatics of adopting new technology

00:07:19,090 --> 00:07:23,949
especially around things like what's my

00:07:20,800 --> 00:07:26,080
return on investment you the the fringes

00:07:23,949 --> 00:07:27,729
don't matter as much as sometimes what's

00:07:26,080 --> 00:07:30,490
happening in the middle so we have to

00:07:27,729 --> 00:07:32,979
have a cohesive argument how does how do

00:07:30,490 --> 00:07:35,229
you help change technology in the middle

00:07:32,979 --> 00:07:37,090
cloud enable existing applications as

00:07:35,229 --> 00:07:40,060
well as what are the opportunities that

00:07:37,090 --> 00:07:42,909
we can bring some of the newer models

00:07:40,060 --> 00:07:43,690
like Cloud Foundry into play so if you

00:07:42,909 --> 00:07:45,340
look at the right

00:07:43,690 --> 00:07:48,430
typically systems of engagement I want

00:07:45,340 --> 00:07:50,860
to build new portals whether it's for

00:07:48,430 --> 00:07:53,080
mobile or for internal use or for

00:07:50,860 --> 00:07:56,229
customers etc I want to build new api's

00:07:53,080 --> 00:07:58,090
I need to build new channels a

00:07:56,229 --> 00:07:59,740
multi-channel is a big word especially

00:07:58,090 --> 00:08:01,779
in the banking industry so how do you

00:07:59,740 --> 00:08:04,360
start addressing some of those use cases

00:08:01,779 --> 00:08:06,639
via technologies like like Cloud Foundry

00:08:04,360 --> 00:08:08,710
the other area that we've seen quite a

00:08:06,639 --> 00:08:10,810
bit of interest is around how you

00:08:08,710 --> 00:08:14,080
integrate with partners partners

00:08:10,810 --> 00:08:15,009
exposing a lot of api's these days so in

00:08:14,080 --> 00:08:17,740
even if you look at a traditional

00:08:15,009 --> 00:08:20,380
banking industry looking at providers

00:08:17,740 --> 00:08:22,029
who assess risk for example they tend to

00:08:20,380 --> 00:08:23,949
be SAS based services how do you

00:08:22,029 --> 00:08:25,599
integrate with them Glad foundry and the

00:08:23,949 --> 00:08:27,669
set of integrations around that gives

00:08:25,599 --> 00:08:31,810
you a really really good model to

00:08:27,669 --> 00:08:36,029
achieve that I got a pose for this

00:08:31,810 --> 00:08:36,029
picture so

00:08:37,770 --> 00:08:42,010
he said he was going to be a heckler but

00:08:40,330 --> 00:08:43,630
I didn't realize he was he actually

00:08:42,010 --> 00:08:47,529
meant it anyway

00:08:43,630 --> 00:08:50,170
so given this particular landscape when

00:08:47,529 --> 00:08:51,880
we when we tried to synthesize some of

00:08:50,170 --> 00:08:54,089
the discussions we've been having with

00:08:51,880 --> 00:08:56,830
many of our customers the foundational

00:08:54,089 --> 00:08:58,209
aspect is a simplified user experience

00:08:56,830 --> 00:09:00,190
in Cloud Foundry and the community has

00:08:58,209 --> 00:09:02,020
been very very persistent in that in

00:09:00,190 --> 00:09:04,330
terms of the abstractions and the

00:09:02,020 --> 00:09:05,860
maintenance of those abstractions the

00:09:04,330 --> 00:09:08,230
role of open technology the role of

00:09:05,860 --> 00:09:10,300
community cannot be understated in the

00:09:08,230 --> 00:09:13,480
sense of importance in buying decisions

00:09:10,300 --> 00:09:15,690
and some of the very very core

00:09:13,480 --> 00:09:18,790
attributes like reliability scalability

00:09:15,690 --> 00:09:21,910
performance cost etc are fundamental to

00:09:18,790 --> 00:09:24,820
the adoption of the platform we've also

00:09:21,910 --> 00:09:28,300
found and and Adam alluded to that

00:09:24,820 --> 00:09:30,399
around the different deployment models

00:09:28,300 --> 00:09:32,589
public is certainly one of them but

00:09:30,399 --> 00:09:34,029
being able to deploy in a dedicated

00:09:32,589 --> 00:09:36,130
environment especially for security

00:09:34,029 --> 00:09:38,830
sensitive applications on the cloud it's

00:09:36,130 --> 00:09:40,660
still off premises but it is restricted

00:09:38,830 --> 00:09:42,670
to a particular customer and the last

00:09:40,660 --> 00:09:44,740
one is around local which is on-premise

00:09:42,670 --> 00:09:45,339
on-premise is important for a variety of

00:09:44,740 --> 00:09:47,709
reasons

00:09:45,339 --> 00:09:50,440
certainly security is one of them but

00:09:47,709 --> 00:09:53,589
when you look at the context above which

00:09:50,440 --> 00:09:55,329
is the set of very chatty low latency

00:09:53,589 --> 00:09:56,950
dependent applications within a data

00:09:55,329 --> 00:10:00,430
center some of which might include

00:09:56,950 --> 00:10:03,579
things like old backends or legacy code

00:10:00,430 --> 00:10:05,140
components how do you create a flexible

00:10:03,579 --> 00:10:07,329
environment for developers in that

00:10:05,140 --> 00:10:08,950
context and one of our customers

00:10:07,329 --> 00:10:10,990
basically said I mean I have two choices

00:10:08,950 --> 00:10:12,790
either I take everything that's on my

00:10:10,990 --> 00:10:13,779
premises and move it to the cloud which

00:10:12,790 --> 00:10:15,850
I cannot because some of the

00:10:13,779 --> 00:10:17,290
technologies are like on hardware that's

00:10:15,850 --> 00:10:20,380
not available in the cloud for example

00:10:17,290 --> 00:10:23,140
or I need something on premises to the

00:10:20,380 --> 00:10:24,520
core minimal set that'll let me expose

00:10:23,140 --> 00:10:27,130
those capabilities to the cloud

00:10:24,520 --> 00:10:28,720
so these roles for different deployment

00:10:27,130 --> 00:10:31,060
models getting polarized around hate

00:10:28,720 --> 00:10:33,399
cloud is only public or cloud is only a

00:10:31,060 --> 00:10:35,110
private or on-premise it's probably not

00:10:33,399 --> 00:10:37,589
worth it I think that you need the

00:10:35,110 --> 00:10:40,660
flexibility and how you deploy the stuff

00:10:37,589 --> 00:10:42,610
the point to the left to me is actually

00:10:40,660 --> 00:10:45,070
very critical on top which is hybrid

00:10:42,610 --> 00:10:47,260
application architectures when you look

00:10:45,070 --> 00:10:48,620
at brownfield environments I mean we

00:10:47,260 --> 00:10:50,390
talk about these different apps

00:10:48,620 --> 00:10:52,430
actions whether it's containers with its

00:10:50,390 --> 00:10:54,590
managed containers like Cloud Foundry

00:10:52,430 --> 00:10:56,720
whether it's vm's whether it's patterns

00:10:54,590 --> 00:10:59,960
of deployment like Tosca and so on and

00:10:56,720 --> 00:11:03,380
so forth each of them has a role in

00:10:59,960 --> 00:11:05,510
being able to create effective solutions

00:11:03,380 --> 00:11:06,890
you cannot polarize people into saying

00:11:05,510 --> 00:11:08,180
hey this is the only abstraction that

00:11:06,890 --> 00:11:10,220
works the only place where you should

00:11:08,180 --> 00:11:12,950
deploy applications is Claude foundry or

00:11:10,220 --> 00:11:14,720
it's only darker or it's only VMS all of

00:11:12,950 --> 00:11:16,700
them depending on the workload depending

00:11:14,720 --> 00:11:18,170
on the legacy of the of the application

00:11:16,700 --> 00:11:20,770
depending on some of the technology has

00:11:18,170 --> 00:11:23,450
a role and how do we accommodate

00:11:20,770 --> 00:11:25,430
different application architectures is a

00:11:23,450 --> 00:11:27,380
critical element of what we found when

00:11:25,430 --> 00:11:30,080
we go out and and talk to customers or

00:11:27,380 --> 00:11:32,060
deploy cloud foundry based applications

00:11:30,080 --> 00:11:34,310
DevOps obviously is critical I think

00:11:32,060 --> 00:11:38,120
this is a platform that enables DevOps

00:11:34,310 --> 00:11:40,190
in in many different ways more dev than

00:11:38,120 --> 00:11:41,660
ops but Ops is an important component

00:11:40,190 --> 00:11:43,820
and that's one area that we need to

00:11:41,660 --> 00:11:46,040
continue to focus on is given Cloud

00:11:43,820 --> 00:11:49,400
Foundry given an ecosystem of services

00:11:46,040 --> 00:11:51,740
given how Cloud Foundry based

00:11:49,400 --> 00:11:53,360
applications link up to existing

00:11:51,740 --> 00:11:55,190
application how do you manage this how

00:11:53,360 --> 00:11:56,810
do you guarantee SLA is around it how do

00:11:55,190 --> 00:12:00,350
you manage multiple providers in this

00:11:56,810 --> 00:12:03,980
space so the notion of ops and DevOps is

00:12:00,350 --> 00:12:05,750
also very critical integration it all

00:12:03,980 --> 00:12:07,790
comes back to the the application

00:12:05,750 --> 00:12:09,980
architecture that you see on the top if

00:12:07,790 --> 00:12:11,900
you have existing components you have

00:12:09,980 --> 00:12:13,550
new applications you have to have

00:12:11,900 --> 00:12:15,590
effective ways to integrate them from a

00:12:13,550 --> 00:12:18,620
data perspective from an API perspective

00:12:15,590 --> 00:12:20,450
from a performance perspective with the

00:12:18,620 --> 00:12:21,860
assumption that some of those back-end

00:12:20,450 --> 00:12:24,050
services might not be elastic and

00:12:21,860 --> 00:12:27,460
scalable and and everything that cloud

00:12:24,050 --> 00:12:30,080
applications are targeted to be

00:12:27,460 --> 00:12:33,010
portability is going to come up in a big

00:12:30,080 --> 00:12:35,510
way the lord of our customers are

00:12:33,010 --> 00:12:37,820
particular about the notion of lock-in

00:12:35,510 --> 00:12:40,580
and not being locked into a particular

00:12:37,820 --> 00:12:42,350
vendor particular location whether it's

00:12:40,580 --> 00:12:44,060
on premise or off premise so how do you

00:12:42,350 --> 00:12:45,710
prove how do you support portability

00:12:44,060 --> 00:12:48,380
across different environments across

00:12:45,710 --> 00:12:49,790
both the platform as well as the

00:12:48,380 --> 00:12:51,070
services that are available across these

00:12:49,790 --> 00:12:53,840
platforms so that's a very critical

00:12:51,070 --> 00:12:56,510
requirement as well security and

00:12:53,840 --> 00:12:57,570
compliance who cares management and SLA

00:12:56,510 --> 00:13:02,880
is

00:12:57,570 --> 00:13:05,340
sorry securing compliance is perhaps the

00:13:02,880 --> 00:13:08,040
biggest question that we get from our

00:13:05,340 --> 00:13:10,560
customers securely from a fabric

00:13:08,040 --> 00:13:13,320
perspective the reliance of security on

00:13:10,560 --> 00:13:15,600
underlying infrastructure security of

00:13:13,320 --> 00:13:17,160
applications services that enable

00:13:15,600 --> 00:13:18,300
security with its single sign-on whether

00:13:17,160 --> 00:13:20,670
it's encryption whether it is

00:13:18,300 --> 00:13:23,100
tokenization services being able to

00:13:20,670 --> 00:13:25,530
provide that in the right context around

00:13:23,100 --> 00:13:28,320
a Cloud Foundry ecosystem is becoming

00:13:25,530 --> 00:13:29,940
much more of an important topic of

00:13:28,320 --> 00:13:31,500
conversation and we need to continue

00:13:29,940 --> 00:13:34,350
from a from an architectural perspective

00:13:31,500 --> 00:13:38,190
and from a community perspective that we

00:13:34,350 --> 00:13:39,780
focus on that to me security to Sam's

00:13:38,190 --> 00:13:42,450
point earlier this morning is not a

00:13:39,780 --> 00:13:44,760
differentiating capability it is

00:13:42,450 --> 00:13:47,940
something that should be in the platform

00:13:44,760 --> 00:13:50,670
because one insecure implementation can

00:13:47,940 --> 00:13:52,740
sink this whole momentum so to me

00:13:50,670 --> 00:13:53,910
personally I think security and

00:13:52,740 --> 00:13:56,340
compliance are something that we need to

00:13:53,910 --> 00:13:59,010
work together and kind of raise the tide

00:13:56,340 --> 00:14:00,600
in the and the competence of the

00:13:59,010 --> 00:14:03,000
platform across that particular

00:14:00,600 --> 00:14:05,700
capability and as I was mentioning

00:14:03,000 --> 00:14:08,070
earlier management and SLA is our key we

00:14:05,700 --> 00:14:10,320
are just touching the tip of that when

00:14:08,070 --> 00:14:13,560
we talk about complex systems that

00:14:10,320 --> 00:14:16,200
connect existing systems newer api's

00:14:13,560 --> 00:14:18,750
newer systems the reliance of the system

00:14:16,200 --> 00:14:20,790
for more production or mission critical

00:14:18,750 --> 00:14:22,830
workloads having the ability to manage

00:14:20,790 --> 00:14:25,320
it effectively do incident management

00:14:22,830 --> 00:14:27,600
change management problem management SLA

00:14:25,320 --> 00:14:29,310
management etc is becoming much more

00:14:27,600 --> 00:14:35,340
critical in many of our conversations

00:14:29,310 --> 00:14:37,470
with with with clients so as part of

00:14:35,340 --> 00:14:39,510
what we've been doing and I'll move a

00:14:37,470 --> 00:14:43,710
little bit quicker here given the the

00:14:39,510 --> 00:14:46,110
premise we look at bluemix as a platform

00:14:43,710 --> 00:14:49,260
and the ecosystem around Cloud Foundry

00:14:46,110 --> 00:14:51,630
as one of the principles around it is to

00:14:49,260 --> 00:14:53,550
provide compute flexibility so in

00:14:51,630 --> 00:14:55,080
addition to Cloud Foundry capabilities

00:14:53,550 --> 00:14:57,030
we are integrating from a DevOps

00:14:55,080 --> 00:14:59,160
perspective as well as from a user

00:14:57,030 --> 00:15:01,740
experience perspective capabilities that

00:14:59,160 --> 00:15:03,420
aren't darker capabilities on VMs and

00:15:01,740 --> 00:15:05,670
patterns and so on and so forth and we

00:15:03,420 --> 00:15:07,590
find that a necessary component in being

00:15:05,670 --> 00:15:09,060
able to position Cloud Foundry and its

00:15:07,590 --> 00:15:10,679
capabilities in the context of

00:15:09,060 --> 00:15:14,309
enterprise architectures

00:15:10,679 --> 00:15:17,379
the second element is services we

00:15:14,309 --> 00:15:18,850
services are independent entities they

00:15:17,379 --> 00:15:20,470
need to be accessed from Cloud Foundry

00:15:18,850 --> 00:15:22,029
applications they need to be accessed

00:15:20,470 --> 00:15:24,429
from darker applications they need to be

00:15:22,029 --> 00:15:26,619
accessible across different environments

00:15:24,429 --> 00:15:30,489
and maybe across different providers as

00:15:26,619 --> 00:15:34,649
well so being having first services as

00:15:30,489 --> 00:15:39,309
first-class citizens is absolutely key

00:15:34,649 --> 00:15:42,910
data of any cloud platform have seen the

00:15:39,309 --> 00:15:45,220
currency that really matters is data you

00:15:42,910 --> 00:15:47,139
put data on the cloud you get a lot of

00:15:45,220 --> 00:15:49,449
cohesion around the platform in terms of

00:15:47,139 --> 00:15:49,959
application in terms of users so on and

00:15:49,449 --> 00:15:53,379
so forth

00:15:49,959 --> 00:15:55,779
so having an effective strategy around

00:15:53,379 --> 00:15:58,059
data for our platform around persistence

00:15:55,779 --> 00:16:00,730
around state management around moving

00:15:58,059 --> 00:16:03,399
data in and out around security of the

00:16:00,730 --> 00:16:06,189
data is a very critical element of our

00:16:03,399 --> 00:16:08,199
overall strategy in terms of of Cloud

00:16:06,189 --> 00:16:10,209
Foundry and the last but not the least

00:16:08,199 --> 00:16:13,839
integration whether it's API integration

00:16:10,209 --> 00:16:16,540
data integration so on and so forth with

00:16:13,839 --> 00:16:18,399
existing systems is an integral part of

00:16:16,540 --> 00:16:20,259
what we should look at from an overall

00:16:18,399 --> 00:16:24,009
platform perspective the reason I said

00:16:20,259 --> 00:16:25,509
this context is there's an element of

00:16:24,009 --> 00:16:27,249
Cloud Foundry in that and for cloud

00:16:25,509 --> 00:16:30,639
foundry to be successful in this context

00:16:27,249 --> 00:16:33,279
these other factors around it need to

00:16:30,639 --> 00:16:37,209
come together as well and in all of our

00:16:33,279 --> 00:16:40,480
conversations with clients it is it is

00:16:37,209 --> 00:16:43,299
it is it's almost always a case where

00:16:40,480 --> 00:16:45,669
did not have a polarizing discussion to

00:16:43,299 --> 00:16:47,799
having to explain pass a hundred times

00:16:45,669 --> 00:16:49,989
over as to what exactly it is and I

00:16:47,799 --> 00:16:52,299
don't believe that word anymore it is

00:16:49,989 --> 00:16:54,309
how do you put the context to an eternal

00:16:52,299 --> 00:16:58,569
perspective a computer Lexx ability data

00:16:54,309 --> 00:17:02,199
integration security and services is fun

00:16:58,569 --> 00:17:05,819
that to be very critical the other area

00:17:02,199 --> 00:17:09,100
that is interesting around the spaces

00:17:05,819 --> 00:17:11,740
services how do you build effective

00:17:09,100 --> 00:17:13,779
services around Cloud Foundry so Cloud

00:17:11,740 --> 00:17:16,089
Foundry is a platform to build services

00:17:13,779 --> 00:17:18,970
it is a platform that lets you consume

00:17:16,089 --> 00:17:21,639
services but to build effective services

00:17:18,970 --> 00:17:23,169
services that are or micro services that

00:17:21,639 --> 00:17:24,070
scale that are measurable that are

00:17:23,169 --> 00:17:25,810
monitoring

00:17:24,070 --> 00:17:28,450
that can be updated continuously you

00:17:25,810 --> 00:17:31,450
need a set of course services so as part

00:17:28,450 --> 00:17:32,890
of our approach to this platform we are

00:17:31,450 --> 00:17:34,150
building a set of course services around

00:17:32,890 --> 00:17:36,010
earth we call them cloud foundational

00:17:34,150 --> 00:17:38,170
services everything from container

00:17:36,010 --> 00:17:40,270
services to monitoring services logging

00:17:38,170 --> 00:17:41,890
services to even configuration

00:17:40,270 --> 00:17:42,490
management services like chef and so on

00:17:41,890 --> 00:17:44,230
and so forth

00:17:42,490 --> 00:17:46,560
so that we have an ecosystem of services

00:17:44,230 --> 00:17:48,400
that support building applications

00:17:46,560 --> 00:17:49,960
supporting the lifecycle of the

00:17:48,400 --> 00:17:52,510
applications from creation through

00:17:49,960 --> 00:17:55,240
management as well as building services

00:17:52,510 --> 00:17:57,910
that can scale elastically and support

00:17:55,240 --> 00:18:00,130
newer implementations of these services

00:17:57,910 --> 00:18:02,710
in the cloud foundry this could be a day

00:18:00,130 --> 00:18:08,320
and I have 25 minutes no I don't have

00:18:02,710 --> 00:18:14,170
less than 25 minutes you have minus 5

00:18:08,320 --> 00:18:16,210
minutes now so so in terms of delivery

00:18:14,170 --> 00:18:20,580
of bluemix one of the one of the points

00:18:16,210 --> 00:18:23,620
we our biggest investment of time effort

00:18:20,580 --> 00:18:25,240
is around managing the platform as a

00:18:23,620 --> 00:18:26,620
whole so if you look at it we break it

00:18:25,240 --> 00:18:29,500
down into kind of three distinct pieces

00:18:26,620 --> 00:18:31,690
there's a platform cloud foundry the the

00:18:29,500 --> 00:18:34,390
underlying capabilities around it how

00:18:31,690 --> 00:18:36,280
you deploy applications the API is and

00:18:34,390 --> 00:18:39,310
so on and so forth are the core part of

00:18:36,280 --> 00:18:42,580
our system but around it we have to

00:18:39,310 --> 00:18:44,110
build an ecosystem of services and we

00:18:42,580 --> 00:18:46,600
have to build an ecosystem of how do you

00:18:44,110 --> 00:18:49,060
manage cloud foundry deployments and the

00:18:46,600 --> 00:18:50,410
services underneath cloud foundry so you

00:18:49,060 --> 00:18:52,990
can see that broken into three pieces

00:18:50,410 --> 00:18:55,990
three pieces there's a platform cloud

00:18:52,990 --> 00:18:57,850
foundry the centerpiece the set of user

00:18:55,990 --> 00:18:59,350
interfaces and DevOps that need to come

00:18:57,850 --> 00:19:00,820
together around the platform so that you

00:18:59,350 --> 00:19:03,310
can effectively use the platform and

00:19:00,820 --> 00:19:05,320
optimize the and we can go into a lot

00:19:03,310 --> 00:19:06,580
more detail about that but the general

00:19:05,320 --> 00:19:09,850
experience of a developer around the

00:19:06,580 --> 00:19:11,410
platform a scalable setup around

00:19:09,850 --> 00:19:14,200
services so that we can bring in more

00:19:11,410 --> 00:19:16,540
services elastic services connect those

00:19:14,200 --> 00:19:18,280
services not only from the purpose of

00:19:16,540 --> 00:19:20,020
consumption and deployment but around

00:19:18,280 --> 00:19:21,520
its lifecycle how do you monitor it how

00:19:20,020 --> 00:19:23,950
do you get security logs so we have a

00:19:21,520 --> 00:19:26,020
long way to go from that aspect in terms

00:19:23,950 --> 00:19:28,600
of a complete lifecycle around services

00:19:26,020 --> 00:19:30,340
and off to the left the whole notion of

00:19:28,600 --> 00:19:32,500
service delivery from being able to

00:19:30,340 --> 00:19:36,520
deploy application the CI and CD parts

00:19:32,500 --> 00:19:37,690
of the applications BSS to meter and and

00:19:36,520 --> 00:19:39,279
price

00:19:37,690 --> 00:19:43,090
various services it appears you go model

00:19:39,279 --> 00:19:44,950
for example infrastructure Knox and more

00:19:43,090 --> 00:19:46,269
importantly socks are something that we

00:19:44,950 --> 00:19:48,610
spend quite a bit of time on so how do

00:19:46,269 --> 00:19:50,200
you harvest logs across all of the Cloud

00:19:48,610 --> 00:19:52,960
Foundry components as well as a network

00:19:50,200 --> 00:19:55,990
components being able to monitor various

00:19:52,960 --> 00:19:57,279
aspects of it including the ecosystem

00:19:55,990 --> 00:19:59,639
around Cloud Foundry which is other

00:19:57,279 --> 00:20:03,070
services perhaps even SAS services

00:19:59,639 --> 00:20:05,049
support and support is not just a

00:20:03,070 --> 00:20:08,440
standard support model is how do you

00:20:05,049 --> 00:20:11,019
support the new paradigm of application

00:20:08,440 --> 00:20:13,899
development how do you support in using

00:20:11,019 --> 00:20:15,519
new digital models all of the automation

00:20:13,899 --> 00:20:17,500
that is necessary for a very large-scale

00:20:15,519 --> 00:20:19,870
deployment and obviously compliance and

00:20:17,500 --> 00:20:21,340
security some of the is and and managing

00:20:19,870 --> 00:20:25,990
it and demonstrating it is something

00:20:21,340 --> 00:20:30,240
that's very key now I think I need to to

00:20:25,990 --> 00:20:30,240
cede the floor to Adam but let me think

00:20:32,100 --> 00:20:37,450
stolen East Coast time so we hit on this

00:20:35,980 --> 00:20:39,009
a little bit earlier kind of the the

00:20:37,450 --> 00:20:41,649
different deployment flavors and we said

00:20:39,009 --> 00:20:43,330
today you know we've got hosted bluemix

00:20:41,649 --> 00:20:45,580
whether that's public cloud whether

00:20:43,330 --> 00:20:47,679
that's private cloud also bringing that

00:20:45,580 --> 00:20:48,879
into a local data center and I think

00:20:47,679 --> 00:20:50,980
that's common across if you look across

00:20:48,879 --> 00:20:53,649
other cloud foundry vendors there's a

00:20:50,980 --> 00:20:55,809
need in a use case for shared

00:20:53,649 --> 00:20:58,330
off-premises single tenant it off

00:20:55,809 --> 00:21:00,549
premises and no these workloads need to

00:20:58,330 --> 00:21:02,950
be in my data center what we're learning

00:21:00,549 --> 00:21:06,039
more and more is that it's really even a

00:21:02,950 --> 00:21:08,049
hybrid between those so my mobile push

00:21:06,039 --> 00:21:10,629
notification service ok that can be off

00:21:08,049 --> 00:21:12,159
premises there's nothing secretive that

00:21:10,629 --> 00:21:14,320
I'm gonna send out there but it needs to

00:21:12,159 --> 00:21:16,090
pull off of some data source that

00:21:14,320 --> 00:21:17,980
contains you know sensitive information

00:21:16,090 --> 00:21:21,370
about banking accounts and that's going

00:21:17,980 --> 00:21:22,870
to be on premises but still in a cloud

00:21:21,370 --> 00:21:26,139
I'm ok moving that out of the data

00:21:22,870 --> 00:21:27,519
center where it is today meeting where

00:21:26,139 --> 00:21:30,399
it is today but not out of the data

00:21:27,519 --> 00:21:32,200
center with that what's emerging through

00:21:30,399 --> 00:21:33,220
that as a seamless experience through

00:21:32,200 --> 00:21:36,309
that and that's what we're hearing from

00:21:33,220 --> 00:21:38,590
clients is I want to run DevOps across

00:21:36,309 --> 00:21:40,629
these different zones I want to be able

00:21:38,590 --> 00:21:42,490
to monitor what's going on across these

00:21:40,629 --> 00:21:44,889
different zones oh and by the way that

00:21:42,490 --> 00:21:47,860
also includes applications that may end

00:21:44,889 --> 00:21:50,139
up in a hybrid State we see a big trend

00:21:47,860 --> 00:21:51,500
towards large monolithic application

00:21:50,139 --> 00:21:54,110
today all right

00:21:51,500 --> 00:21:56,960
got microservices but I can't break it

00:21:54,110 --> 00:21:58,610
down and we architect it overnight what

00:21:56,960 --> 00:22:00,770
I want to do is I want to slowly break

00:21:58,610 --> 00:22:02,330
that down and maybe at some period some

00:22:00,770 --> 00:22:04,100
of those functions are a microservices

00:22:02,330 --> 00:22:05,810
in the new world some are still in the

00:22:04,100 --> 00:22:07,490
old world I may have a mix of these

00:22:05,810 --> 00:22:10,250
different deployment models and how do I

00:22:07,490 --> 00:22:11,330
bring that experience together so we're

00:22:10,250 --> 00:22:13,280
sharing that cuz as we get to the

00:22:11,330 --> 00:22:14,840
punchline here and we talk about just

00:22:13,280 --> 00:22:16,640
some of the opportunities in areas we

00:22:14,840 --> 00:22:18,080
think we have as a community it's a lot

00:22:16,640 --> 00:22:20,660
of this feedback that's really driving

00:22:18,080 --> 00:22:22,220
us towards you know the question of how

00:22:20,660 --> 00:22:23,900
does club found you fit in this world

00:22:22,220 --> 00:22:27,860
and and what can we do to make Cloud

00:22:23,900 --> 00:22:29,180
Foundry even better so some of what

00:22:27,860 --> 00:22:30,260
we're doing is really kind of around

00:22:29,180 --> 00:22:32,200
it's we've been working on a single

00:22:30,260 --> 00:22:34,850
operations console whether that's

00:22:32,200 --> 00:22:38,000
resource information whether that is

00:22:34,850 --> 00:22:40,690
managing deployments reports logs user

00:22:38,000 --> 00:22:44,030
administration etc but it's about

00:22:40,690 --> 00:22:45,410
multiple channels through that and I

00:22:44,030 --> 00:22:48,740
think it's not just the deployments

00:22:45,410 --> 00:22:51,440
before but it's multi-cloud so as we

00:22:48,740 --> 00:22:53,360
have vendors that may be our users that

00:22:51,440 --> 00:22:55,820
start to use Cloud Foundry from multiple

00:22:53,360 --> 00:22:57,350
sources we're starting to see that yeah

00:22:55,820 --> 00:22:58,820
I'm gonna use some bluemix and some

00:22:57,350 --> 00:23:00,290
pivotal Cloud Foundry I'm gonna take

00:22:58,820 --> 00:23:02,210
some Cloud Foundry from myself and I'm

00:23:00,290 --> 00:23:03,970
gonna stand it up on Azure and I want

00:23:02,210 --> 00:23:05,990
that ecosystem to work well together

00:23:03,970 --> 00:23:07,430
isn't that what you guys told me it's

00:23:05,990 --> 00:23:10,730
Cloud Foundry it should all work the

00:23:07,430 --> 00:23:12,350
same it's really critical for us to be

00:23:10,730 --> 00:23:18,080
working together to make sure that that

00:23:12,350 --> 00:23:20,300
happens and really around this idea of

00:23:18,080 --> 00:23:22,760
collaborative operations which is where

00:23:20,300 --> 00:23:24,380
you then start to get to when it's

00:23:22,760 --> 00:23:26,870
operations whether that's collaborative

00:23:24,380 --> 00:23:29,780
between okay it's hosted and there's

00:23:26,870 --> 00:23:31,910
things that the end user or end customer

00:23:29,780 --> 00:23:34,700
needs to see and then you as the person

00:23:31,910 --> 00:23:36,380
hosting it or as we get into multi cloud

00:23:34,700 --> 00:23:39,530
and it's operations across multiple

00:23:36,380 --> 00:23:43,100
teams the lines are going to start to

00:23:39,530 --> 00:23:45,350
blur and it's really about one

00:23:43,100 --> 00:23:47,240
borderless cloud working together and

00:23:45,350 --> 00:23:49,490
that's another area we're gonna have to

00:23:47,240 --> 00:23:50,990
come through so I'm gonna ask in the

00:23:49,490 --> 00:23:52,910
last couple minutes here Bala to come

00:23:50,990 --> 00:23:54,920
back on stage well try not to talk over

00:23:52,910 --> 00:23:56,390
each other too much one of this to be

00:23:54,920 --> 00:23:59,150
interactive keep you guys on your toes

00:23:56,390 --> 00:24:01,730
but wanted to talk about just some of

00:23:59,150 --> 00:24:03,560
the opportunities and we've quickly go

00:24:01,730 --> 00:24:05,309
right down into the weeds but we find

00:24:03,560 --> 00:24:07,320
that's where you've got to get you

00:24:05,309 --> 00:24:08,519
want to take real action and we really

00:24:07,320 --> 00:24:10,019
hope that this generates some good

00:24:08,519 --> 00:24:11,850
conversation in the hallways kind of

00:24:10,019 --> 00:24:13,350
afterwards for people that want to want

00:24:11,850 --> 00:24:16,350
to help invest in these areas as well

00:24:13,350 --> 00:24:17,789
from a cloud foundry perspective yeah so

00:24:16,350 --> 00:24:18,840
I mean I think there's just a sample

00:24:17,789 --> 00:24:20,879
list I mean there's many many

00:24:18,840 --> 00:24:22,499
opportunities but we kind of based on

00:24:20,879 --> 00:24:24,749
the conversation we had things like

00:24:22,499 --> 00:24:26,639
security how do we do things like secure

00:24:24,749 --> 00:24:28,110
logging we've seen that as an important

00:24:26,639 --> 00:24:30,720
element of almost any Enterprise

00:24:28,110 --> 00:24:32,249
deployment where or even a multi-tenant

00:24:30,720 --> 00:24:34,409
deployment where logs need to be

00:24:32,249 --> 00:24:37,080
encrypted and separated and stored so

00:24:34,409 --> 00:24:39,149
how do we do secure logging services

00:24:37,080 --> 00:24:41,340
tend to be persistent in terms of how

00:24:39,149 --> 00:24:43,649
they present their credentials into run

00:24:41,340 --> 00:24:46,470
times how do you support things like

00:24:43,649 --> 00:24:48,119
rolling API keys how do you have and

00:24:46,470 --> 00:24:50,309
this is a very interesting case and we

00:24:48,119 --> 00:24:52,740
we experience it ourselves is let's say

00:24:50,309 --> 00:24:54,809
you have a database database instance

00:24:52,740 --> 00:24:56,669
that's exposed into Cloud Foundry into a

00:24:54,809 --> 00:24:59,100
particular orange for example and you

00:24:56,669 --> 00:25:00,809
have four or five privileged users for

00:24:59,100 --> 00:25:03,779
the production aspect of the database

00:25:00,809 --> 00:25:07,200
how do you start providing credentials

00:25:03,779 --> 00:25:09,149
that separate or modulating of access to

00:25:07,200 --> 00:25:10,499
you do you have to that service once you

00:25:09,149 --> 00:25:11,879
can get to the credentials you can do

00:25:10,499 --> 00:25:13,529
everything from read the database to

00:25:11,879 --> 00:25:15,119
destroy the database many of our

00:25:13,529 --> 00:25:17,779
customers even in a production

00:25:15,119 --> 00:25:19,950
environment want to have separate

00:25:17,779 --> 00:25:21,929
credentials for different levels of

00:25:19,950 --> 00:25:24,869
access into the underlying services so

00:25:21,929 --> 00:25:29,629
that's becoming an interesting element

00:25:24,869 --> 00:25:33,450
of of how do we how do we support

00:25:29,629 --> 00:25:35,190
services within bluemix private das in

00:25:33,450 --> 00:25:37,019
many cases for performance reasons or

00:25:35,190 --> 00:25:38,070
for isolation reasons they want beers

00:25:37,019 --> 00:25:40,559
that are specific to a particular

00:25:38,070 --> 00:25:43,070
organization a particular application

00:25:40,559 --> 00:25:45,090
for PCI compliance for example and

00:25:43,070 --> 00:25:47,820
associated with that more granular role

00:25:45,090 --> 00:25:49,769
models the second broad area services

00:25:47,820 --> 00:25:52,440
how to be blacklist services in many

00:25:49,769 --> 00:25:54,990
organizations even though there's a

00:25:52,440 --> 00:25:56,879
plethora of services available they want

00:25:54,990 --> 00:25:59,159
to restrict which set of services are

00:25:56,879 --> 00:26:00,990
under are supported under organizational

00:25:59,159 --> 00:26:03,539
control it's great to have a variety of

00:26:00,990 --> 00:26:05,730
services to start trying out but in many

00:26:03,539 --> 00:26:08,669
organizations a support end of it

00:26:05,730 --> 00:26:10,619
becomes a problematic situation so they

00:26:08,669 --> 00:26:12,119
want to be able to provide or blacklist

00:26:10,619 --> 00:26:13,799
a certain sort of set of services they

00:26:12,119 --> 00:26:16,460
don't have the right security controls

00:26:13,799 --> 00:26:19,170
or they're not provided appropriately so

00:26:16,460 --> 00:26:21,090
the the so that's one

00:26:19,170 --> 00:26:22,890
area that we are looking at and we need

00:26:21,090 --> 00:26:24,720
to look at it as a community micro

00:26:22,890 --> 00:26:27,330
services enablement and security of

00:26:24,720 --> 00:26:28,740
those services ability to move services

00:26:27,330 --> 00:26:31,800
across different organizations that

00:26:28,740 --> 00:26:33,900
might have dev and prod sharing services

00:26:31,800 --> 00:26:36,030
or having independent services between

00:26:33,900 --> 00:26:38,430
CF based application that non CF based

00:26:36,030 --> 00:26:40,230
applications are a set of examples of

00:26:38,430 --> 00:26:43,800
things that as a community we need to

00:26:40,230 --> 00:26:46,020
get our hands around for adoption org

00:26:43,800 --> 00:26:48,090
specific build packs going on to the

00:26:46,020 --> 00:26:50,700
large to the last column org specific

00:26:48,090 --> 00:26:52,820
build packs quarters for various aspects

00:26:50,700 --> 00:26:56,400
within bluemix or within cloud foundry

00:26:52,820 --> 00:26:58,860
the ability to deploy apps with context

00:26:56,400 --> 00:27:01,110
routes more than just the base domains

00:26:58,860 --> 00:27:04,140
and the last one is particularly

00:27:01,110 --> 00:27:06,780
interesting when you move from a the

00:27:04,140 --> 00:27:09,060
role of an individual developer to

00:27:06,780 --> 00:27:10,980
managing applications created in bluemix

00:27:09,060 --> 00:27:14,340
you get into a whole set of interesting

00:27:10,980 --> 00:27:15,960
management and operational questions so

00:27:14,340 --> 00:27:17,760
the ability for example when an

00:27:15,960 --> 00:27:21,720
application scales up or scales down

00:27:17,760 --> 00:27:23,610
might be important to a certain group of

00:27:21,720 --> 00:27:25,410
management users say capacity planners

00:27:23,610 --> 00:27:27,300
within an organization how do you start

00:27:25,410 --> 00:27:30,300
generalizing the notion of notifications

00:27:27,300 --> 00:27:32,850
out beyond the core fabric into the

00:27:30,300 --> 00:27:34,590
external management systems is one of

00:27:32,850 --> 00:27:37,550
the areas that that we need to look at

00:27:34,590 --> 00:27:41,340
as a community so I got the the

00:27:37,550 --> 00:27:43,890
five-minute a little sheet of paper wave

00:27:41,340 --> 00:27:46,020
so let's spend the next couple of

00:27:43,890 --> 00:27:47,730
minutes on questions and if you guys

00:27:46,020 --> 00:27:49,230
refuse to leave this room that's perfect

00:27:47,730 --> 00:27:51,180
I mean that's fair by me I don't have a

00:27:49,230 --> 00:27:54,960
problem with that we can ignore a sheet

00:27:51,180 --> 00:27:57,060
of paper so any questions any thoughts I

00:27:54,960 --> 00:27:58,350
mean are these problems the kind of

00:27:57,060 --> 00:28:02,480
things that you guys are seeing I mean

00:27:58,350 --> 00:28:04,800
any anyone who does not see that

00:28:02,480 --> 00:28:06,840
contrary and viewpoints are very very

00:28:04,800 --> 00:28:11,760
appreciated I mean that that provides a

00:28:06,840 --> 00:28:13,650
little bit of fizz to this a hundred and

00:28:11,760 --> 00:28:15,990
fifty people and not one contrary

00:28:13,650 --> 00:28:17,880
opinion I get I have a family of four

00:28:15,990 --> 00:28:21,380
and I get three contrary opinions so I

00:28:17,880 --> 00:28:21,380
mean this is like well

00:28:25,220 --> 00:28:43,460
I think that is something that's a

00:28:41,630 --> 00:28:44,750
really really good question because I

00:28:43,460 --> 00:28:46,460
think when you look at a runtime

00:28:44,750 --> 00:28:48,230
platform I mean and this has gone on

00:28:46,460 --> 00:28:50,450
forever if you look at Java or you look

00:28:48,230 --> 00:28:51,860
at j2ee or whatever it is the core

00:28:50,450 --> 00:28:53,150
platform is just one bit of it the

00:28:51,860 --> 00:28:55,429
ecosystem around it whether it's

00:28:53,150 --> 00:28:57,110
monitoring tools whether it's dev tools

00:28:55,429 --> 00:28:59,390
whether it is performance management

00:28:57,110 --> 00:29:02,210
systems there's a huge ecosystem around

00:28:59,390 --> 00:29:04,159
it I think what what we need to do as a

00:29:02,210 --> 00:29:06,620
community is recognize the fact that for

00:29:04,159 --> 00:29:09,429
a production deployment you need many of

00:29:06,620 --> 00:29:12,860
these pieces how many of these can we

00:29:09,429 --> 00:29:14,780
look at build the right interfaces build

00:29:12,860 --> 00:29:16,730
the right data models to make the

00:29:14,780 --> 00:29:18,500
deployment in customer situations very

00:29:16,730 --> 00:29:21,110
easy so that's a very very good point

00:29:18,500 --> 00:29:23,900
you need that ecosystem our job is to

00:29:21,110 --> 00:29:25,820
make that ecosystem flourish across

00:29:23,900 --> 00:29:27,830
multiple vendors and also provide the

00:29:25,820 --> 00:29:29,720
right interfaces around it to to make it

00:29:27,830 --> 00:29:31,039
easy and what make it a lot and that's

00:29:29,720 --> 00:29:32,240
why we're here today so for those who

00:29:31,039 --> 00:29:34,010
didn't hear the question is going to

00:29:32,240 --> 00:29:35,210
this you know back on the the chart

00:29:34,010 --> 00:29:37,039
where we had the different components

00:29:35,210 --> 00:29:38,690
right you know what we're delivering is

00:29:37,039 --> 00:29:39,740
cloud there was a big box in there that

00:29:38,690 --> 00:29:41,900
had caught foundry there's a lot of

00:29:39,740 --> 00:29:43,250
other stuff around that and what we're

00:29:41,900 --> 00:29:45,830
learning and it's really driven around

00:29:43,250 --> 00:29:47,150
these areas and and the hybrid nature

00:29:45,830 --> 00:29:49,400
and the multi-cloud nature and we're

00:29:47,150 --> 00:29:51,289
going from clients is that they need

00:29:49,400 --> 00:29:53,150
more than what's in there today and

00:29:51,289 --> 00:29:54,980
we're hearing that a lot and we want to

00:29:53,150 --> 00:29:57,320
collaborate with the community and kind

00:29:54,980 --> 00:29:59,750
of grow that box and you know work

00:29:57,320 --> 00:30:01,970
together so that way Cloud Foundry can

00:29:59,750 --> 00:30:04,850
just crush out there and be the premier

00:30:01,970 --> 00:30:06,320
platform that people develop assitive so

00:30:04,850 --> 00:30:08,299
I think we're out of time so we'll cut

00:30:06,320 --> 00:30:10,100
it there but please come up or ask us

00:30:08,299 --> 00:30:13,610
questions thank you for spending some

00:30:10,100 --> 00:30:15,080
time with us today you can find us on

00:30:13,610 --> 00:30:16,400
Twitter - our handles there in the

00:30:15,080 --> 00:30:18,409
corner that's an easy way to get a hold

00:30:16,400 --> 00:30:23,200
of us and we look forward to working

00:30:18,409 --> 00:30:23,200

YouTube URL: https://www.youtube.com/watch?v=8mZxVI_NS8I


