Title: Beyond Buzzwords: Riding the Wave to Turn Trends into Profit - Duncan Winn, Keith Strini ,
Publication date: 2017-10-18
Playlist: Cloud Foundry Summit Europe 2017
Description: 
	Beyond Buzzwords: Riding the Wave to Turn Trends into Profit - Duncan Winn, Keith Strini & Sean Keery, Pivotal

We the Cloud Foundry community have spent a considerable time understanding and unpacking buzzword terms like Agile, Devops, Microservices and Cloud Native. This presentation goes beyond simply unpacking trends and terminology. It will bring you tangible real world examples - from several industries - on how companies have embraced and adopted essential IT trends through leveraging Cloud Foundry to realise substantial increases in profits.

About Sean Keery
Sean Keery (Pivotal) began hacking obscure video game systems at the age of 13. Sean then developed interpersonal skills while teaching snowboarding. Nowadays we've got Cloud Foundry, choreography, containers and plenty of io. Cluster deployments, IaaS independence and his studies for a Masters in Data Science keep Sean occupied. The daily commute is filled with podcasts and chipmunk bunny hops. Some family time, spicy food, a good book and wrecking the latest toys keep Sean busy at home. @zgrinch

About Keith Strini
Keith Strini is Federal Practice Lead and Cloud Foundry Advisory Solutions Architect at Pivotal, implementing Cloud Foundry solutions across a wide variety of customer environments both in the Federal and Commercial space. Keith recently presented "Catch Me If You Can" at the Cloud Foundry Summit - Frankfurt 2016 Conference and at IC DevCon "Mission Driven Design" and "Mean Time Between Fielding". He also served as a technology analyst for the US Department of Defense and Intelligence communities. He has helped architect, develop and field information systems across the Joint Services both CONUS and OCONUS (Korea, Japan, Europe, and the Middle East) and NATO.

About Duncan Winn
Duncan has been working on Cloud Foundry for Pivotal since Pivotal formed in 2013. Currently Duncan works in Pivotal's Platform Architecture Team to help companies install and configure hardened Cloud Foundry environments and related services so they get the most out of Cloud Foundry in an enterprise setting. Prior to moving to the US he was the EMEA Cloud Foundry developer advocate for Pivotal and ran Pivotal's Platform Architecture Team in London. He is actively involved in the Cloud Foundry community blogging, running meetups and writing books.
Captions: 
	00:00:00,030 --> 00:00:04,160
okay we're gonna get going thank you

00:00:02,370 --> 00:00:06,390
very much for turning out welcome to

00:00:04,160 --> 00:00:08,580
beyond the buzzword so my name's Duncan

00:00:06,390 --> 00:00:10,769
Wynn I'm a platform architect for

00:00:08,580 --> 00:00:12,990
pivotal and joining me today we have

00:00:10,769 --> 00:00:14,940
Sean kiri and Keith trini also from

00:00:12,990 --> 00:00:16,289
pivotal some of my colleagues I've

00:00:14,940 --> 00:00:19,590
worked with for a number of years so

00:00:16,289 --> 00:00:21,689
just so we understand our audience who

00:00:19,590 --> 00:00:25,590
here has been using cloud foundry for a

00:00:21,689 --> 00:00:27,480
couple of years and who here would say

00:00:25,590 --> 00:00:28,830
they're a cloud foundry operator down of

00:00:27,480 --> 00:00:34,050
the weeds actually operating cloud

00:00:28,830 --> 00:00:36,660
foundry anyone a couple of people and so

00:00:34,050 --> 00:00:39,260
last question who here feels the need to

00:00:36,660 --> 00:00:41,250
justify the value of using cloud foundry

00:00:39,260 --> 00:00:44,520
upline to somebody else in the business

00:00:41,250 --> 00:00:49,260
is anyone in that position perfect so

00:00:44,520 --> 00:00:51,180
this talk is absolutely for you so the

00:00:49,260 --> 00:00:54,360
premise of this talk is around or what

00:00:51,180 --> 00:00:57,210
if and that's what if everything you do

00:00:54,360 --> 00:00:59,550
everything you build every function that

00:00:57,210 --> 00:01:02,910
your developers deliver every bit of

00:00:59,550 --> 00:01:06,869
technical debt that you remove you can

00:01:02,910 --> 00:01:09,180
measure the value and by value we're not

00:01:06,869 --> 00:01:10,770
talking about sentiment so for example

00:01:09,180 --> 00:01:13,200
my customer is delighted with this

00:01:10,770 --> 00:01:16,350
feature we're actually talking about a

00:01:13,200 --> 00:01:19,020
quantitative value a hard line return on

00:01:16,350 --> 00:01:21,570
investment or revenue and obviously

00:01:19,020 --> 00:01:23,009
we're a cloud foundry conference so

00:01:21,570 --> 00:01:24,990
we're going to talk about how cloud

00:01:23,009 --> 00:01:28,080
foundry plays in to actually delivering

00:01:24,990 --> 00:01:30,900
that value and how using service level

00:01:28,080 --> 00:01:32,909
indicators and feedback loops you can

00:01:30,900 --> 00:01:35,009
start to measure and quantify the value

00:01:32,909 --> 00:01:39,720
that you deliver to your organization

00:01:35,009 --> 00:01:41,490
and so we've spent some time Sean Keith

00:01:39,720 --> 00:01:43,229
and I working with a number of companies

00:01:41,490 --> 00:01:45,060
and for someone who's seen my previous

00:01:43,229 --> 00:01:48,180
talk I gave last year around buzzword

00:01:45,060 --> 00:01:50,939
bingo we spent a lot of time talking

00:01:48,180 --> 00:01:53,340
about buzzwords and explaining what

00:01:50,939 --> 00:01:55,140
these terms mean and we don't just mean

00:01:53,340 --> 00:01:57,299
the literal definition but we actually

00:01:55,140 --> 00:01:59,729
dig into the sentiment the value that

00:01:57,299 --> 00:02:02,579
each term is trying to deliver so for

00:01:59,729 --> 00:02:04,439
example with agile we do stand ups and

00:02:02,579 --> 00:02:06,719
we do sprints but the key thing about

00:02:04,439 --> 00:02:08,670
agile is getting features into the hands

00:02:06,719 --> 00:02:11,099
of end-users very quickly so you can get

00:02:08,670 --> 00:02:13,370
our feedback a lot of people talk about

00:02:11,099 --> 00:02:15,650
DevOps and for us it's really

00:02:13,370 --> 00:02:18,620
rushing a culture of DevOps not just a

00:02:15,650 --> 00:02:20,569
set of tools and so once you understand

00:02:18,620 --> 00:02:22,700
these terms and the value that these

00:02:20,569 --> 00:02:24,409
terms are trying to bring assuming

00:02:22,700 --> 00:02:25,580
you've taken these things on board and

00:02:24,409 --> 00:02:28,340
you've been through this cloud native

00:02:25,580 --> 00:02:29,690
journey your environment probably looks

00:02:28,340 --> 00:02:32,840
something like this

00:02:29,690 --> 00:02:34,610
you have Cloud Foundry you've defined

00:02:32,840 --> 00:02:36,500
that is layer that you want Cloud

00:02:34,610 --> 00:02:38,989
Foundry to run on maybe it's a hybrid

00:02:36,500 --> 00:02:40,700
strategy of public/private cloud you

00:02:38,989 --> 00:02:42,230
have a container strategy you have your

00:02:40,700 --> 00:02:44,299
bill PACs lock down maybe you're using

00:02:42,230 --> 00:02:46,280
docker images you're deploying your

00:02:44,299 --> 00:02:48,319
applications to Cloud Foundry you

00:02:46,280 --> 00:02:50,840
probably have some set of micro services

00:02:48,319 --> 00:02:53,060
you've defined your messaging tier your

00:02:50,840 --> 00:02:55,700
database tier and then with your

00:02:53,060 --> 00:02:57,829
organizational structure you have agile

00:02:55,700 --> 00:03:00,049
delivery teams you have a culture of

00:02:57,829 --> 00:03:02,959
DevOps you have a centralized platform

00:03:00,049 --> 00:03:05,030
operation or operations team and you

00:03:02,959 --> 00:03:07,099
pipeline absolutely everything you

00:03:05,030 --> 00:03:08,840
pipeline your applications and you

00:03:07,099 --> 00:03:11,659
pipeline the deployment of your platform

00:03:08,840 --> 00:03:13,220
itself if you get here if this is where

00:03:11,659 --> 00:03:14,120
you're out you probably feel really good

00:03:13,220 --> 00:03:17,090
about yourself because you're

00:03:14,120 --> 00:03:18,579
effectively a cloud native Jedi status

00:03:17,090 --> 00:03:21,200
at this point if you've done all of this

00:03:18,579 --> 00:03:22,370
but to get here is not for free it

00:03:21,200 --> 00:03:25,790
actually comes at a cost

00:03:22,370 --> 00:03:28,400
it's time consuming and it uses resource

00:03:25,790 --> 00:03:30,709
and so when you go down this journey and

00:03:28,400 --> 00:03:33,260
when you get to this environment it's

00:03:30,709 --> 00:03:35,359
right that you ask the question what is

00:03:33,260 --> 00:03:37,340
the value of doing all of this stuff and

00:03:35,359 --> 00:03:40,160
this is a question you should ask every

00:03:37,340 --> 00:03:41,989
day for everything you do as you work as

00:03:40,160 --> 00:03:43,280
you output in life you need to

00:03:41,989 --> 00:03:45,139
understand the value you're producing

00:03:43,280 --> 00:03:46,879
and if you can't answer that question or

00:03:45,139 --> 00:03:49,040
at least if you can't get to the answer

00:03:46,879 --> 00:03:50,780
through assessing it then you should

00:03:49,040 --> 00:03:52,930
really evaluate whether you should be

00:03:50,780 --> 00:03:54,859
spending your time on that activity so

00:03:52,930 --> 00:03:57,769
going back to our cloud native

00:03:54,859 --> 00:03:59,030
environment the platform operator that

00:03:57,769 --> 00:04:00,530
often really pleased about this

00:03:59,030 --> 00:04:02,150
environment and they please in the way

00:04:00,530 --> 00:04:04,489
they've structured it so they go and

00:04:02,150 --> 00:04:06,230
tell the developers maybe this is a

00:04:04,489 --> 00:04:07,970
single line of business maybe this is

00:04:06,230 --> 00:04:09,590
central IT they talk to the other lines

00:04:07,970 --> 00:04:12,829
of business and developers start to use

00:04:09,590 --> 00:04:15,049
it and at this point the executive team

00:04:12,829 --> 00:04:17,690
stand back and they ask what's the value

00:04:15,049 --> 00:04:19,010
of this environment what other apps and

00:04:17,690 --> 00:04:21,289
what other lines of business should come

00:04:19,010 --> 00:04:23,960
onto this platform and how do we justify

00:04:21,289 --> 00:04:25,789
the work to lift and shift some of our

00:04:23,960 --> 00:04:26,810
applications over to this platform so

00:04:25,789 --> 00:04:30,110
it's a really legit

00:04:26,810 --> 00:04:32,080
to my question so to answer that

00:04:30,110 --> 00:04:34,970
question we have to spend a bit of time

00:04:32,080 --> 00:04:37,040
exploring what value really means so

00:04:34,970 --> 00:04:39,200
value is both a verb and a noun if you

00:04:37,040 --> 00:04:41,240
look up the dictionary definition the

00:04:39,200 --> 00:04:43,400
noun is to do with the importance of

00:04:41,240 --> 00:04:45,710
worth some things are really hard to

00:04:43,400 --> 00:04:47,300
quantify like we all have self-worth so

00:04:45,710 --> 00:04:49,700
how do you quantify worth and when you

00:04:47,300 --> 00:04:51,110
listen to other CF summit talks and I've

00:04:49,700 --> 00:04:53,750
been to a number of CF summit

00:04:51,110 --> 00:04:55,190
conferences most talks stop at this

00:04:53,750 --> 00:04:55,850
level they talk about faster

00:04:55,190 --> 00:04:58,280
time-to-market

00:04:55,850 --> 00:05:00,139
innovation delighted customers these are

00:04:58,280 --> 00:05:02,870
all key tenets of Cloud Foundry they're

00:05:00,139 --> 00:05:05,060
all really important aspects of why we

00:05:02,870 --> 00:05:06,850
adopt and use Cloud Foundry but they

00:05:05,060 --> 00:05:08,780
don't go on to the next stage of

00:05:06,850 --> 00:05:12,200
quantifying the return on that

00:05:08,780 --> 00:05:14,389
investment the verb is to do with

00:05:12,200 --> 00:05:14,870
estimating the monetary worth of Cloud

00:05:14,389 --> 00:05:17,479
Foundry

00:05:14,870 --> 00:05:20,479
and that gives you that tangible hard

00:05:17,479 --> 00:05:22,520
return on investment and that's to do

00:05:20,479 --> 00:05:25,940
with things like removing spend taking

00:05:22,520 --> 00:05:28,729
out cost consolidating on your hardware

00:05:25,940 --> 00:05:31,120
removing middleware licenses removing OS

00:05:28,729 --> 00:05:34,310
licenses getting better automation and

00:05:31,120 --> 00:05:35,780
on those aspects you can start to put a

00:05:34,310 --> 00:05:37,669
dollar value amount to that and that's

00:05:35,780 --> 00:05:40,760
really what this talk is primarily

00:05:37,669 --> 00:05:42,830
focused on so with in pivotal and the

00:05:40,760 --> 00:05:45,950
companies we've worked with we've seen

00:05:42,830 --> 00:05:47,600
this cloud native ROI continuum and with

00:05:45,950 --> 00:05:49,190
each of these pillars we'll be delving

00:05:47,600 --> 00:05:51,590
in deep so don't worry too much about

00:05:49,190 --> 00:05:53,390
the detail at this stage but it starts

00:05:51,590 --> 00:05:54,500
with waste reduction and the activities

00:05:53,390 --> 00:05:56,389
that go into that

00:05:54,500 --> 00:05:57,770
it looks at things like paired

00:05:56,389 --> 00:06:00,169
programming and the fact that if you

00:05:57,770 --> 00:06:02,120
find a defect during development it's a

00:06:00,169 --> 00:06:05,210
lot cheaper to fix a defect at that

00:06:02,120 --> 00:06:07,310
point versus in production and it also

00:06:05,210 --> 00:06:09,220
looks at a platform and consolidation

00:06:07,310 --> 00:06:12,530
and automation all that good stuff you

00:06:09,220 --> 00:06:14,960
couple waste reduction with continuous

00:06:12,530 --> 00:06:16,610
experimentation and that gives you that

00:06:14,960 --> 00:06:18,289
feedback loop it lets you look at

00:06:16,610 --> 00:06:21,169
service level indicators that lets you

00:06:18,289 --> 00:06:22,550
assess the customer feedback so you can

00:06:21,169 --> 00:06:24,740
identify if you're building the right

00:06:22,550 --> 00:06:27,590
thing and you couple those two together

00:06:24,740 --> 00:06:29,900
that should give you an effective use of

00:06:27,590 --> 00:06:31,580
capex now when we built these slides

00:06:29,900 --> 00:06:32,479
Keith and I went back and forth on this

00:06:31,580 --> 00:06:34,669
use of capex

00:06:32,479 --> 00:06:36,860
we've worked with a number of CFOs and

00:06:34,669 --> 00:06:38,180
CTOs and they tend to interchange OPEX

00:06:36,860 --> 00:06:40,520
and capex depending on how they've

00:06:38,180 --> 00:06:40,820
structured their budget so I wanted to

00:06:40,520 --> 00:06:42,830
up

00:06:40,820 --> 00:06:45,440
tractor up and just call it spend forget

00:06:42,830 --> 00:06:46,760
about capex effective you suspend the

00:06:45,440 --> 00:06:49,220
reason why we kept it in is when you

00:06:46,760 --> 00:06:50,810
look at your operations your operations

00:06:49,220 --> 00:06:53,720
is really on the left hand side that's

00:06:50,810 --> 00:06:55,520
your waste reduction for argument's sake

00:06:53,720 --> 00:06:57,050
let's say it costs a million dollars to

00:06:55,520 --> 00:06:59,060
deploy your applications to date and

00:06:57,050 --> 00:07:00,740
using a platform using automation

00:06:59,060 --> 00:07:02,720
getting a DevOps culture you can get

00:07:00,740 --> 00:07:04,490
that down to a hundred thousand that's

00:07:02,720 --> 00:07:06,020
an amazing saving and that's really

00:07:04,490 --> 00:07:07,760
their should be celebrated but there's a

00:07:06,020 --> 00:07:09,920
floor to how low you can go

00:07:07,760 --> 00:07:12,650
you can't go beyond zero for your

00:07:09,920 --> 00:07:14,510
operational expenditure but your capex

00:07:12,650 --> 00:07:16,970
the investment into your development

00:07:14,510 --> 00:07:18,800
teams and your designers that can have

00:07:16,970 --> 00:07:20,330
this exponential effect as you start to

00:07:18,800 --> 00:07:22,220
really resonate with your customers and

00:07:20,330 --> 00:07:23,660
so your waste reduction is really good

00:07:22,220 --> 00:07:27,490
but what we're really trying to do is

00:07:23,660 --> 00:07:29,860
progressed to the effective use of capex

00:07:27,490 --> 00:07:32,420
so let's start with waste reduction

00:07:29,860 --> 00:07:34,190
waste reduction has come out of lean

00:07:32,420 --> 00:07:35,660
theory so lean theory for anyone who's

00:07:34,190 --> 00:07:38,480
not familiar with it as a management

00:07:35,660 --> 00:07:41,080
methodology and it allows us to map out

00:07:38,480 --> 00:07:43,460
all of the steps and the process is

00:07:41,080 --> 00:07:46,550
responsible for software delivery or for

00:07:43,460 --> 00:07:49,340
delivering something so you start with a

00:07:46,550 --> 00:07:51,260
request and then you move on to delivery

00:07:49,340 --> 00:07:54,560
and unless you just map out the current

00:07:51,260 --> 00:07:56,950
state identify areas of waste and try

00:07:54,560 --> 00:07:59,900
and get to a more desirable future State

00:07:56,950 --> 00:08:02,510
now it came out of so as we look to

00:07:59,900 --> 00:08:04,970
identify waste there within lean theory

00:08:02,510 --> 00:08:07,430
there's this concept of muda so mudar is

00:08:04,970 --> 00:08:10,790
really any process that consumes more

00:08:07,430 --> 00:08:12,290
resources than needed produces waste now

00:08:10,790 --> 00:08:16,280
the key thing here is there's two

00:08:12,290 --> 00:08:18,620
different types of waste type one is non

00:08:16,280 --> 00:08:20,990
value addict ivities but still stuff

00:08:18,620 --> 00:08:22,250
necessary for the end user and that's to

00:08:20,990 --> 00:08:23,660
do with things like packaging your

00:08:22,250 --> 00:08:25,700
application and the way you release it

00:08:23,660 --> 00:08:27,770
and arguably you can get rid of that

00:08:25,700 --> 00:08:30,620
waste through things like automation

00:08:27,770 --> 00:08:32,479
the second is non value add activity

00:08:30,620 --> 00:08:34,729
stuff that's unnecessary for the end

00:08:32,479 --> 00:08:38,510
user and that's the stuff you absolutely

00:08:34,729 --> 00:08:40,969
need to remove from the organization so

00:08:38,510 --> 00:08:43,580
lean started in manufacturing but within

00:08:40,969 --> 00:08:45,560
devops communities is become really

00:08:43,580 --> 00:08:47,270
really impactful and that's because you

00:08:45,560 --> 00:08:49,820
look at this anti DevOps pattern the

00:08:47,270 --> 00:08:51,800
siloed organization when it comes to

00:08:49,820 --> 00:08:53,090
software delivery there's many different

00:08:51,800 --> 00:08:54,120
teams involved in delivering that

00:08:53,090 --> 00:08:55,200
software

00:08:54,120 --> 00:08:57,450
you look at something as simple as

00:08:55,200 --> 00:08:59,070
provisioning a VM and there's all these

00:08:57,450 --> 00:09:00,839
teams involved when they're siloed you

00:08:59,070 --> 00:09:03,360
get these crazy flows of interaction you

00:09:00,839 --> 00:09:06,750
get tickets handoffs delays and you get

00:09:03,360 --> 00:09:09,450
a lot of waste by realigning these

00:09:06,750 --> 00:09:11,880
skills into a cross-functional team you

00:09:09,450 --> 00:09:14,220
immediately develop a culture which

00:09:11,880 --> 00:09:15,900
eliminates a lot of that waste and so

00:09:14,220 --> 00:09:17,730
lean manufacturing or lean methodology

00:09:15,900 --> 00:09:20,490
has become really impactful within these

00:09:17,730 --> 00:09:22,680
communities you couple that with Cloud

00:09:20,490 --> 00:09:24,900
Foundry and you get further waste

00:09:22,680 --> 00:09:27,029
reduction and so there's nothing new

00:09:24,900 --> 00:09:29,580
here but I want to cover some of the hi

00:09:27,029 --> 00:09:31,620
topics so the waste reduction we see

00:09:29,580 --> 00:09:35,040
with cloud foundry absolutely with speed

00:09:31,620 --> 00:09:37,050
and deployment of your environment so if

00:09:35,040 --> 00:09:39,150
I was to say in your organization please

00:09:37,050 --> 00:09:40,860
can I have a brand new VM how long would

00:09:39,150 --> 00:09:45,600
it take for you to give me a new VM

00:09:40,860 --> 00:09:50,510
anyone want to shout out timescales for

00:09:45,600 --> 00:09:54,680
weeks any advance on four weeks two days

00:09:50,510 --> 00:09:57,300
anyone else either end of the spectrum

00:09:54,680 --> 00:09:58,740
so you speak to an operator often I

00:09:57,300 --> 00:10:00,420
speak to operators and they say they can

00:09:58,740 --> 00:10:02,610
provision a VM in minutes or several

00:10:00,420 --> 00:10:04,140
hours depending on how hard on that VM

00:10:02,610 --> 00:10:06,360
is what they're putting onto that VM how

00:10:04,140 --> 00:10:08,220
much middleware etc you speak to a

00:10:06,360 --> 00:10:11,190
developer and they tend to measure

00:10:08,220 --> 00:10:14,190
getting a VM in days weeks or months the

00:10:11,190 --> 00:10:16,140
worst I've ever seen is I was in a

00:10:14,190 --> 00:10:18,150
meeting with a customer and someone

00:10:16,140 --> 00:10:20,250
walked in and spoke to their colleague

00:10:18,150 --> 00:10:23,010
and said that VM you requested 18 months

00:10:20,250 --> 00:10:25,080
ago it's finally arrived I'm thinking 18

00:10:23,010 --> 00:10:27,990
months lead time just to get a VM that's

00:10:25,080 --> 00:10:29,670
really painful for productivity and so

00:10:27,990 --> 00:10:31,860
by having pre provisioned environments

00:10:29,670 --> 00:10:33,480
self-service using containers you get

00:10:31,860 --> 00:10:36,390
rid of a lot of that operational waste

00:10:33,480 --> 00:10:38,730
and that theme is progress throughout

00:10:36,390 --> 00:10:40,589
Cloud Foundry so stability the fact that

00:10:38,730 --> 00:10:42,240
Cloud Foundry self heals means that the

00:10:40,589 --> 00:10:44,279
operator doesn't have to be as involved

00:10:42,240 --> 00:10:46,770
with bringing applications or components

00:10:44,279 --> 00:10:48,720
back up and it also gives the developers

00:10:46,770 --> 00:10:51,209
the ability to adopt patterns of things

00:10:48,720 --> 00:10:53,670
like Bluegreen deployments Canaries the

00:10:51,209 --> 00:10:55,230
use of feature flags routing services so

00:10:53,670 --> 00:10:59,940
they have more control on how and what

00:10:55,230 --> 00:11:01,680
they deploy scalability so the fact that

00:10:59,940 --> 00:11:03,000
Cloud Foundry has dynamic routing in

00:11:01,680 --> 00:11:05,070
place means that there's less

00:11:03,000 --> 00:11:06,750
operational concern you can auto scale

00:11:05,070 --> 00:11:07,710
the applications you can auto scale the

00:11:06,750 --> 00:11:09,540
platform

00:11:07,710 --> 00:11:11,100
and the same for security we have the

00:11:09,540 --> 00:11:14,130
three hours the fact that you can rotate

00:11:11,100 --> 00:11:15,870
and repave a new stem cell and get Cloud

00:11:14,130 --> 00:11:17,670
Foundry to do that rolling upgrade so

00:11:15,870 --> 00:11:19,670
you can easily roll out of CVE means

00:11:17,670 --> 00:11:22,200
there's less operational overhead there

00:11:19,670 --> 00:11:24,210
so all of those combines they're loosely

00:11:22,200 --> 00:11:26,910
focused for those savings on resource

00:11:24,210 --> 00:11:33,270
consolidation software and licenses

00:11:26,910 --> 00:11:35,970
license reduction and more automation so

00:11:33,270 --> 00:11:37,470
going back to our value stream what

00:11:35,970 --> 00:11:39,390
we're doing is we're eliminating waste

00:11:37,470 --> 00:11:42,060
as we discussed and we're trying to get

00:11:39,390 --> 00:11:45,810
our lead time to match our process time

00:11:42,060 --> 00:11:47,280
as closely as possible and so this is

00:11:45,810 --> 00:11:49,830
really the end state that we're trying

00:11:47,280 --> 00:11:51,480
to achieve and when you start a factory

00:11:49,830 --> 00:11:53,670
in all the different disciplines that go

00:11:51,480 --> 00:11:55,260
into delivering software you find that

00:11:53,670 --> 00:11:57,720
you have different value streams for

00:11:55,260 --> 00:12:00,120
different stages within the process so

00:11:57,720 --> 00:12:02,370
provisioning an environment coding

00:12:00,120 --> 00:12:04,680
releasing data operations each one of

00:12:02,370 --> 00:12:06,720
these aspects of their own value stream

00:12:04,680 --> 00:12:08,910
and you can spend time mapping out the

00:12:06,720 --> 00:12:09,960
detail that goes into that and what that

00:12:08,910 --> 00:12:11,540
would look like using Cloud Foundry

00:12:09,960 --> 00:12:13,770
versus doing it outside Cloud Foundry

00:12:11,540 --> 00:12:15,150
and so we've actually been through this

00:12:13,770 --> 00:12:17,310
process now with a number of the

00:12:15,150 --> 00:12:20,280
companies we've worked with and so just

00:12:17,310 --> 00:12:23,370
to give you an indication this is some

00:12:20,280 --> 00:12:24,840
feedback on provisioning a VM now in

00:12:23,370 --> 00:12:26,610
this case there's something like 30

00:12:24,840 --> 00:12:29,520
people involved in provisioning this VM

00:12:26,610 --> 00:12:32,010
there's a huge lead time of roughly 20

00:12:29,520 --> 00:12:34,560
weeks and then there's approximately 50

00:12:32,010 --> 00:12:37,950
to 90 hours of effort just to get a VM

00:12:34,560 --> 00:12:41,280
so the cost involved in this is $15,000

00:12:37,950 --> 00:12:43,050
per VM now if you have six apps or six

00:12:41,280 --> 00:12:45,050
different environments a year you can

00:12:43,050 --> 00:12:48,600
start to scale up so you get these crazy

00:12:45,050 --> 00:12:51,030
exponential scaling issues of just in

00:12:48,600 --> 00:12:52,380
terms of sunk cost and sunk resource if

00:12:51,030 --> 00:12:54,570
you compare that to what it's like in

00:12:52,380 --> 00:12:56,040
Cloud Foundry with in pivotal at least

00:12:54,570 --> 00:12:58,500
what we do is we do something called a

00:12:56,040 --> 00:13:00,540
platform dojo where we stand up a

00:12:58,500 --> 00:13:02,340
hardened version of Cloud Foundry we

00:13:00,540 --> 00:13:04,680
integrate it into back-end services and

00:13:02,340 --> 00:13:06,270
between sort of one to six to eight

00:13:04,680 --> 00:13:07,890
weeks we can get a hardened version of

00:13:06,270 --> 00:13:09,750
cloud found you do that once for all of

00:13:07,890 --> 00:13:13,770
your apps so you have a demonstrable

00:13:09,750 --> 00:13:16,890
time saving there and the same the other

00:13:13,770 --> 00:13:18,450
end of the spectrum with patching so if

00:13:16,890 --> 00:13:20,400
you look at a typical environment you

00:13:18,450 --> 00:13:21,270
have maybe a hundred thirty CVEs per

00:13:20,400 --> 00:13:22,560
month

00:13:21,270 --> 00:13:24,450
for this particular company I worked

00:13:22,560 --> 00:13:26,330
with it was five hours per CVE

00:13:24,450 --> 00:13:28,620
to roll out across their organization

00:13:26,330 --> 00:13:31,500
you basically gave it to an operator

00:13:28,620 --> 00:13:33,330
with an Excel spreadsheet they took a

00:13:31,500 --> 00:13:35,520
script around the script scripts failed

00:13:33,330 --> 00:13:38,040
they raised a support ticket it's very

00:13:35,520 --> 00:13:39,630
very time-consuming very painful coupled

00:13:38,040 --> 00:13:42,810
that with Bosch where this release

00:13:39,630 --> 00:13:45,000
engineering talk to our toolchain can

00:13:42,810 --> 00:13:46,920
now dynamically roll out the new stem

00:13:45,000 --> 00:13:51,030
cell and dynamically provision that with

00:13:46,920 --> 00:13:53,160
the rolling upgrade so this is taken

00:13:51,030 --> 00:13:54,390
from the CF summit earlier this year

00:13:53,160 --> 00:13:56,460
this is one of the companies we've

00:13:54,390 --> 00:13:58,320
worked with when you look at these value

00:13:56,460 --> 00:13:59,940
streams on aggregate you see some

00:13:58,320 --> 00:14:01,410
fantastic results something like two

00:13:59,940 --> 00:14:03,690
hundred eighty three percent transaction

00:14:01,410 --> 00:14:06,000
growth fifty percent reduction in time

00:14:03,690 --> 00:14:08,040
to market and so I think it's absolutely

00:14:06,000 --> 00:14:10,230
worth spending the time to look at how

00:14:08,040 --> 00:14:11,880
you actually map out your process where

00:14:10,230 --> 00:14:14,910
you can eliminate waste and how you can

00:14:11,880 --> 00:14:16,290
get to these tangible savings so Sean's

00:14:14,910 --> 00:14:20,330
now going to talk about measuring the

00:14:16,290 --> 00:14:23,610
value and how we do that thanks Duncan

00:14:20,330 --> 00:14:24,900
so my name is Sean Curie good Morgan

00:14:23,610 --> 00:14:28,830
Bonjour

00:14:24,900 --> 00:14:31,650
g'day I am the minister of chaos at

00:14:28,830 --> 00:14:32,880
pivotal I've been working with customers

00:14:31,650 --> 00:14:35,580
for the last five years in the

00:14:32,880 --> 00:14:38,940
industrial financial and healthcare

00:14:35,580 --> 00:14:42,900
spaces helping them measure operational

00:14:38,940 --> 00:14:45,390
value one of the things that we prefer

00:14:42,900 --> 00:14:48,840
to do instead of just measuring that

00:14:45,390 --> 00:14:53,250
value is to avoid the waste so I'm going

00:14:48,840 --> 00:14:55,170
to talk about how we can do that so how

00:14:53,250 --> 00:14:59,000
many you're familiar with the concept of

00:14:55,170 --> 00:15:03,420
site reliability engineering nobody oh

00:14:59,000 --> 00:15:06,300
all right so System Operator system

00:15:03,420 --> 00:15:09,570
admin it's just a crappy name sorry

00:15:06,300 --> 00:15:11,310
site reliability engineering is the new

00:15:09,570 --> 00:15:12,180
buzzword we're talking about buzzwords

00:15:11,310 --> 00:15:16,140
here if you guys weren't paying

00:15:12,180 --> 00:15:17,730
attention it's something that Google has

00:15:16,140 --> 00:15:21,810
put together they like everyone to be an

00:15:17,730 --> 00:15:24,240
engineer so what it involves is your

00:15:21,810 --> 00:15:27,390
operations team not just being button

00:15:24,240 --> 00:15:29,910
pushers and ticket readers but going out

00:15:27,390 --> 00:15:31,800
there and being proactive and making

00:15:29,910 --> 00:15:32,830
sure your systems are doing the things

00:15:31,800 --> 00:15:36,700
that Duncan talked about

00:15:32,830 --> 00:15:37,990
security secure scalable some other

00:15:36,700 --> 00:15:41,800
things he talked about we'll come back

00:15:37,990 --> 00:15:45,550
to it I'm gonna tie back to his concept

00:15:41,800 --> 00:15:47,350
in the vise dream of waste with the

00:15:45,550 --> 00:15:52,450
seven types of waste from the Toyota

00:15:47,350 --> 00:15:57,760
Production system in lean there's the

00:15:52,450 --> 00:16:00,750
Google site reliability book talks about

00:15:57,760 --> 00:16:02,850
for golden signals for our platform

00:16:00,750 --> 00:16:05,470
anybody know what those are

00:16:02,850 --> 00:16:06,010
no they're just a couple of people we'll

00:16:05,470 --> 00:16:07,930
get to them

00:16:06,010 --> 00:16:09,670
I'm gonna map those back to waste to

00:16:07,930 --> 00:16:11,530
kind of bring you guys into the 21st

00:16:09,670 --> 00:16:15,430
century out of the lean 20th century

00:16:11,530 --> 00:16:17,380
stuff but first we're really going to

00:16:15,430 --> 00:16:21,700
focus on monitoring and incident

00:16:17,380 --> 00:16:23,410
response to see okay so monitoring we

00:16:21,700 --> 00:16:26,890
have our service level indicators these

00:16:23,410 --> 00:16:28,750
are our lowest level measures of some

00:16:26,890 --> 00:16:30,790
aspect that the level of service is

00:16:28,750 --> 00:16:32,560
provided so the number of people in this

00:16:30,790 --> 00:16:35,400
room may be an indicator anybody have a

00:16:32,560 --> 00:16:41,020
guess on how many people in this room

00:16:35,400 --> 00:16:42,970
come on forty okay so then I have a

00:16:41,020 --> 00:16:45,580
service level objective right it's the

00:16:42,970 --> 00:16:47,680
target value or the range of values for

00:16:45,580 --> 00:16:49,750
service that's measured by an SLI so

00:16:47,680 --> 00:16:53,500
Duncan thought we could get 40 our

00:16:49,750 --> 00:16:55,450
stretch goal was 50 right so then we had

00:16:53,500 --> 00:16:57,340
a service level agreement right it's the

00:16:55,450 --> 00:16:59,470
contract between Duncan and myself in

00:16:57,340 --> 00:17:02,380
this case right for consequences of

00:16:59,470 --> 00:17:04,000
meeting or missing the SLA s so what I

00:17:02,380 --> 00:17:08,260
have to do now shave my beard because we

00:17:04,000 --> 00:17:09,730
didn't get to 50 60 all right good

00:17:08,260 --> 00:17:13,570
thanks thanks for someone for actually

00:17:09,730 --> 00:17:15,490
counting okay so I like to talk about

00:17:13,570 --> 00:17:17,830
test driven operations right moving

00:17:15,490 --> 00:17:20,050
forward we have our site reliability

00:17:17,830 --> 00:17:21,640
engineers or platform reliability

00:17:20,050 --> 00:17:25,900
engineers depending upon where you are

00:17:21,640 --> 00:17:28,420
in the process chain and those guys use

00:17:25,900 --> 00:17:30,820
a process of continuous experimentation

00:17:28,420 --> 00:17:32,860
right I don't know what those SLO should

00:17:30,820 --> 00:17:36,670
be right I'm going to monitor and

00:17:32,860 --> 00:17:38,680
measure the SL is all the time but when

00:17:36,670 --> 00:17:40,270
I compare the SL eyes to the SL O's I

00:17:38,680 --> 00:17:41,690
really have to decide whether I need to

00:17:40,270 --> 00:17:44,490
take some action

00:17:41,690 --> 00:17:47,040
right if I got 250 I have to shave my

00:17:44,490 --> 00:17:48,930
beard if not I need to do something else

00:17:47,040 --> 00:17:50,130
right if that action is needed we need

00:17:48,930 --> 00:17:52,860
to figure out is that an automated

00:17:50,130 --> 00:17:55,560
action is it paging someone what's the

00:17:52,860 --> 00:17:57,300
case right take the action and then

00:17:55,560 --> 00:18:02,070
review it's part of this continuous

00:17:57,300 --> 00:18:03,840
experimentation feedback cycle okay so

00:18:02,070 --> 00:18:06,240
as part of the whole value stream where

00:18:03,840 --> 00:18:07,530
I'm going to talk about the part now is

00:18:06,240 --> 00:18:08,880
more your internal business your

00:18:07,530 --> 00:18:10,230
operations side of things

00:18:08,880 --> 00:18:12,300
platform-specific

00:18:10,230 --> 00:18:13,590
okay Keith's gonna bring you more onto

00:18:12,300 --> 00:18:16,410
the customer side a little bit later

00:18:13,590 --> 00:18:18,020
okay so avoiding waste is going to give

00:18:16,410 --> 00:18:21,450
us value

00:18:18,020 --> 00:18:23,670
so our first waste golden signal number

00:18:21,450 --> 00:18:26,520
one is latency we're going to tie this

00:18:23,670 --> 00:18:29,040
back to the muda style of waiting or

00:18:26,520 --> 00:18:30,570
delays in the process okay so our

00:18:29,040 --> 00:18:32,130
service level agreement would be

00:18:30,570 --> 00:18:34,920
something like real-time readiness of

00:18:32,130 --> 00:18:36,630
the platform our indicator would be cell

00:18:34,920 --> 00:18:37,860
rep time and I'm sorry for you guys who

00:18:36,630 --> 00:18:40,680
aren't familiar with these very

00:18:37,860 --> 00:18:42,450
technical terms but these are just

00:18:40,680 --> 00:18:46,950
examples please do not use these numbers

00:18:42,450 --> 00:18:48,840
in production okay auctioneer task

00:18:46,950 --> 00:18:50,400
placement failures right the number on

00:18:48,840 --> 00:18:51,960
the right is going to be our objective

00:18:50,400 --> 00:18:56,490
right we want this number to always be

00:18:51,960 --> 00:18:57,930
greater than 0.5 the next one we'll talk

00:18:56,490 --> 00:18:59,160
about is errors in our system in this

00:18:57,930 --> 00:19:01,620
case we're going to talk about errors

00:18:59,160 --> 00:19:04,260
specifically to help us avoid security

00:19:01,620 --> 00:19:07,020
issues all right anybody ever have any

00:19:04,260 --> 00:19:08,460
security issues with their platform okay

00:19:07,020 --> 00:19:12,630
I did once it cost me three hundred

00:19:08,460 --> 00:19:15,000
thousand dollar Amazon bill okay

00:19:12,630 --> 00:19:17,010
let's monitor the security stuff okay

00:19:15,000 --> 00:19:20,370
number of authorization errors failed

00:19:17,010 --> 00:19:24,360
logins failed ssh attempts right and on

00:19:20,370 --> 00:19:27,990
the right we've got our objectives okay

00:19:24,360 --> 00:19:29,490
in this case ten attempts could be ten

00:19:27,990 --> 00:19:31,800
attempts per minute ten attempts per

00:19:29,490 --> 00:19:33,270
second 10 attempts per hour that's

00:19:31,800 --> 00:19:34,950
something you guys need to work out for

00:19:33,270 --> 00:19:38,280
yourself right anybody have any other

00:19:34,950 --> 00:19:40,410
examples of a security indicator that

00:19:38,280 --> 00:19:43,100
they use and then you guys know you guys

00:19:40,410 --> 00:19:46,410
are operators you're killing me

00:19:43,100 --> 00:19:49,800
all right moving on

00:19:46,410 --> 00:19:52,950
saturation of our system okay so we want

00:19:49,800 --> 00:19:55,040
to proactively scale our platform okay

00:19:52,950 --> 00:19:58,500
so if the number of unhealthy cells is

00:19:55,040 --> 00:20:02,460
zero that's pretty good

00:19:58,500 --> 00:20:04,590
and like that number someone who maybe

00:20:02,460 --> 00:20:06,090
cost them many many millions of dollars

00:20:04,590 --> 00:20:10,440
because they didn't scale their systems

00:20:06,090 --> 00:20:11,790
correctly was target Black Friday their

00:20:10,440 --> 00:20:13,050
system went down that's the day after

00:20:11,790 --> 00:20:14,900
Thanksgiving for you guys who don't know

00:20:13,050 --> 00:20:17,160
that a very big shopping day in the US

00:20:14,900 --> 00:20:21,240
all their systems went down I'm sure it

00:20:17,160 --> 00:20:23,130
costed millions of dollars anybody

00:20:21,240 --> 00:20:24,720
having examples here scaling anything

00:20:23,130 --> 00:20:30,990
else you'd like to see up here on this

00:20:24,720 --> 00:20:33,120
slide okay and then the final one is

00:20:30,990 --> 00:20:35,070
going to be traffic right so we want to

00:20:33,120 --> 00:20:36,960
proactively scale our apps that are

00:20:35,070 --> 00:20:38,640
running on the platform as well so we

00:20:36,960 --> 00:20:40,679
want to look at our router throughput

00:20:38,640 --> 00:20:43,290
right in this case I have 10,000

00:20:40,679 --> 00:20:44,850
requests per second a little more

00:20:43,290 --> 00:20:46,590
specific than the first couple slides

00:20:44,850 --> 00:20:48,179
right but with compound R with our

00:20:46,590 --> 00:20:50,760
platform we can also look at the

00:20:48,179 --> 00:20:52,170
requests per application instance to

00:20:50,760 --> 00:20:55,200
make sure our traffic is going the right

00:20:52,170 --> 00:20:57,179
way and micro service architectures in

00:20:55,200 --> 00:21:03,570
our cloud native world we can look at

00:20:57,179 --> 00:21:07,830
each application function an example of

00:21:03,570 --> 00:21:11,490
a traffic problem you guys familiar with

00:21:07,830 --> 00:21:13,260
the circuit breaker pattern in your

00:21:11,490 --> 00:21:14,730
house nobody has a circuit breaker come

00:21:13,260 --> 00:21:17,970
on I know you guys have circuit breakers

00:21:14,730 --> 00:21:20,309
and software circuit breaker says if my

00:21:17,970 --> 00:21:21,929
behind-the-scene system is off right

00:21:20,309 --> 00:21:22,790
flip all the traffic and send it

00:21:21,929 --> 00:21:26,220
someplace else

00:21:22,790 --> 00:21:28,260
right so if you don't have that pattern

00:21:26,220 --> 00:21:29,670
in place you can DDoS yourself deny

00:21:28,260 --> 00:21:32,690
yourself service because you're making

00:21:29,670 --> 00:21:35,490
so many requests at the same point you

00:21:32,690 --> 00:21:37,110
just overload it the system can't even

00:21:35,490 --> 00:21:38,460
scale fast enough so this is something

00:21:37,110 --> 00:21:41,040
you want to try and avoid that that's

00:21:38,460 --> 00:21:43,020
waste right traffic waste or

00:21:41,040 --> 00:21:46,650
transportation is the traditional muda

00:21:43,020 --> 00:21:49,440
term there so I just talked about in our

00:21:46,650 --> 00:21:51,600
continuous experimentation cycle just a

00:21:49,440 --> 00:21:54,059
small part the top part right your

00:21:51,600 --> 00:21:55,620
process keith is going to take it out to

00:21:54,059 --> 00:21:56,790
the next level and talk about how that

00:21:55,620 --> 00:21:58,680
fits into your product

00:21:56,790 --> 00:22:05,220
development process and your enterprise

00:21:58,680 --> 00:22:07,770
value stream hello I'm Keith Trini I'm

00:22:05,220 --> 00:22:09,240
the pivotal federal practice lead so

00:22:07,770 --> 00:22:10,800
this literally has nothing to do with my

00:22:09,240 --> 00:22:12,510
day job but it's something that's very

00:22:10,800 --> 00:22:15,450
interesting to me and I really like this

00:22:12,510 --> 00:22:17,250
stuff and so I've worked dumpkins

00:22:15,450 --> 00:22:18,480
brought me in on a couple customer

00:22:17,250 --> 00:22:22,680
engagements in which we worked out some

00:22:18,480 --> 00:22:25,350
of these different pieces so one of the

00:22:22,680 --> 00:22:27,180
things that we want to kind of revisit

00:22:25,350 --> 00:22:28,710
the slide and kind of say why so we

00:22:27,180 --> 00:22:30,690
dropped down in the weeds we looked at

00:22:28,710 --> 00:22:32,670
indicators we looked at objectives we

00:22:30,690 --> 00:22:34,620
talked about overall waste reduction and

00:22:32,670 --> 00:22:36,540
that's great but as you heard Duncan say

00:22:34,620 --> 00:22:37,860
there's a floor there right you never

00:22:36,540 --> 00:22:40,710
can drop there's always gonna be some

00:22:37,860 --> 00:22:42,510
minimal operating expense and if you

00:22:40,710 --> 00:22:44,040
let's say fictitiously you do go from a

00:22:42,510 --> 00:22:45,750
million down to a hundred thousand that

00:22:44,040 --> 00:22:47,460
nine hundred thousand it looks great

00:22:45,750 --> 00:22:49,140
year one but then you're - there's not

00:22:47,460 --> 00:22:51,300
that big drop anymore right so how do

00:22:49,140 --> 00:22:53,190
you continue to justify the use of the

00:22:51,300 --> 00:22:55,170
platform and why we're doing all this

00:22:53,190 --> 00:22:56,990
effort to make things dynamically

00:22:55,170 --> 00:23:01,230
scalable where it where's this all going

00:22:56,990 --> 00:23:03,660
so the idea here is that we look at what

00:23:01,230 --> 00:23:06,960
the future value is so how many of you

00:23:03,660 --> 00:23:09,990
feel like operational expenses is is

00:23:06,960 --> 00:23:12,300
something sexy to talk about right it's

00:23:09,990 --> 00:23:14,040
not it's important absolutely

00:23:12,300 --> 00:23:15,870
fundamental stuff but it's not that sexy

00:23:14,040 --> 00:23:17,970
right it happens in the beginning you

00:23:15,870 --> 00:23:19,260
get your operations stable and then what

00:23:17,970 --> 00:23:20,850
that's always the question that comes

00:23:19,260 --> 00:23:22,290
and so this is what we say we need to

00:23:20,850 --> 00:23:24,420
innovate we need this new Cloud Foundry

00:23:22,290 --> 00:23:26,790
piece buck the status quo but then we go

00:23:24,420 --> 00:23:29,010
right back to how do we reduce off X and

00:23:26,790 --> 00:23:30,480
then we run into more brick walls and so

00:23:29,010 --> 00:23:32,460
the idea is we need to move the

00:23:30,480 --> 00:23:35,010
conversation forward from the reduction

00:23:32,460 --> 00:23:36,990
of software capitalization to the

00:23:35,010 --> 00:23:38,970
effective use of capex and that what

00:23:36,990 --> 00:23:41,070
that means is is already familiar with

00:23:38,970 --> 00:23:43,050
what capital expenditures I mean it is

00:23:41,070 --> 00:23:44,370
loosely used it also doesn't depend on

00:23:43,050 --> 00:23:45,570
your accounting method but does does

00:23:44,370 --> 00:23:45,930
everybody kind of understand what that

00:23:45,570 --> 00:23:48,810
means

00:23:45,930 --> 00:23:50,490
so okay great awesome all right so this

00:23:48,810 --> 00:23:52,620
is excellent for the office but in

00:23:50,490 --> 00:23:54,600
general what it means is for every new

00:23:52,620 --> 00:23:56,730
investment I have a certain number of

00:23:54,600 --> 00:23:58,920
resources that I have to use in order to

00:23:56,730 --> 00:24:00,990
just get that initial idea up in the

00:23:58,920 --> 00:24:02,730
software world right and so what we

00:24:00,990 --> 00:24:05,030
really want to do is is look at what the

00:24:02,730 --> 00:24:07,890
true promise of this conversation is and

00:24:05,030 --> 00:24:10,170
so what happens when we get this right

00:24:07,890 --> 00:24:10,669
so we get the platform you know your

00:24:10,170 --> 00:24:12,049
company is

00:24:10,669 --> 00:24:14,210
bought it let's say and they loved it

00:24:12,049 --> 00:24:16,970
and they're like ok this is gonna solve

00:24:14,210 --> 00:24:18,169
world hunger right so what if we want

00:24:16,970 --> 00:24:20,419
you to do is we want you to now that you

00:24:18,169 --> 00:24:21,919
have the platform we want to acquire

00:24:20,419 --> 00:24:23,690
retain new customers but we're not going

00:24:21,919 --> 00:24:25,340
to give you any new money we just you

00:24:23,690 --> 00:24:27,499
got the platform it's magic make it make

00:24:25,340 --> 00:24:28,639
it work well so what we really have to

00:24:27,499 --> 00:24:30,529
do is we have to do that first

00:24:28,639 --> 00:24:32,509
fundamental step which is let's say

00:24:30,529 --> 00:24:34,609
fictitiously we could get 40% reduction

00:24:32,509 --> 00:24:37,850
in op X which would be phenomenal right

00:24:34,609 --> 00:24:39,409
and then let's say by eliminating the

00:24:37,850 --> 00:24:41,629
waste and the delivery of the software

00:24:39,409 --> 00:24:43,159
we're able to see 20 20 percent more

00:24:41,629 --> 00:24:44,239
efficient use of our capex for new

00:24:43,159 --> 00:24:45,799
customer acquisition

00:24:44,239 --> 00:24:48,049
so what do we do with that money right

00:24:45,799 --> 00:24:49,759
so yay we saved all this money but what

00:24:48,049 --> 00:24:52,009
do we do you know any company that

00:24:49,759 --> 00:24:54,169
quickly disappears so what we want to do

00:24:52,009 --> 00:24:55,850
is we want to have a plan we want to

00:24:54,169 --> 00:24:58,580
have a plan for how we're gonna use that

00:24:55,850 --> 00:25:00,769
first fundamental step to feed growth in

00:24:58,580 --> 00:25:02,989
and capture and retain new market share

00:25:00,769 --> 00:25:04,850
and so here you know we see the company

00:25:02,989 --> 00:25:06,109
comes out with a second objective now

00:25:04,850 --> 00:25:07,820
that you have this cloud native

00:25:06,109 --> 00:25:09,409
architecture and you can move that the

00:25:07,820 --> 00:25:11,299
speed of the market and do all these you

00:25:09,409 --> 00:25:13,609
know great things that you know we heard

00:25:11,299 --> 00:25:15,649
in the in the sales talk we want you to

00:25:13,609 --> 00:25:17,480
do three new revenue generating products

00:25:15,649 --> 00:25:18,710
per quarter revenue generating main

00:25:17,480 --> 00:25:20,659
meaning we're not counting the failed

00:25:18,710 --> 00:25:22,249
ones we want just things that are gonna

00:25:20,659 --> 00:25:24,259
make money that actually are producing

00:25:22,249 --> 00:25:26,179
and we also want to prove that we get

00:25:24,259 --> 00:25:28,009
10% lower turn in the new user base

00:25:26,179 --> 00:25:30,889
versus what our existing turn numbers

00:25:28,009 --> 00:25:32,989
are so normally you would freak out like

00:25:30,889 --> 00:25:34,820
how we even supposed to do this right

00:25:32,989 --> 00:25:36,559
this this doesn't you just want you know

00:25:34,820 --> 00:25:39,350
fairy dust and everything is just you

00:25:36,559 --> 00:25:40,850
know flying off and magical so we have

00:25:39,350 --> 00:25:43,309
to really look at this it becomes work

00:25:40,850 --> 00:25:45,830
right all this is is simply work and

00:25:43,309 --> 00:25:47,960
what we want to get to is how many have

00:25:45,830 --> 00:25:51,440
heard of blue ocean strategy

00:25:47,960 --> 00:25:53,179
all right so great concept right don't

00:25:51,440 --> 00:25:54,499
fight in existing markets go find new

00:25:53,179 --> 00:25:56,899
markets and be the only fish in that

00:25:54,499 --> 00:26:00,109
market awesome right it's it's a great

00:25:56,899 --> 00:26:02,239
idea the problem is is that jump right

00:26:00,109 --> 00:26:03,739
now seems magical right it's very

00:26:02,239 --> 00:26:05,690
difficult to get into a new market that

00:26:03,739 --> 00:26:05,840
nobody's in otherwise everybody would do

00:26:05,690 --> 00:26:08,359
it

00:26:05,840 --> 00:26:09,889
so what we do is we want to be we want

00:26:08,359 --> 00:26:11,690
to make continuous experimentation on

00:26:09,889 --> 00:26:14,720
the product side a first-class citizen

00:26:11,690 --> 00:26:16,970
in the actual development cycle in the

00:26:14,720 --> 00:26:19,460
platform and in the way we look at the

00:26:16,970 --> 00:26:21,440
user base and so what that means is we

00:26:19,460 --> 00:26:23,749
have to observe users dealing with

00:26:21,440 --> 00:26:24,290
problems we have to create assumptions

00:26:23,749 --> 00:26:25,940
about what we

00:26:24,290 --> 00:26:27,380
think they're doing to solve those

00:26:25,940 --> 00:26:29,030
problems and then we have to

00:26:27,380 --> 00:26:31,820
continuously validate those assumptions

00:26:29,030 --> 00:26:32,300
to understand is our hypothesis right or

00:26:31,820 --> 00:26:34,040
is it wrong

00:26:32,300 --> 00:26:36,260
either way is valuable but what how do

00:26:34,040 --> 00:26:38,480
we steer so we find that actual

00:26:36,260 --> 00:26:40,580
newmarket and then from there now

00:26:38,480 --> 00:26:42,410
suddenly new revenue streams open up new

00:26:40,580 --> 00:26:44,440
customer acquisitions are possible and

00:26:42,410 --> 00:26:46,970
we can actually see more than that

00:26:44,440 --> 00:26:48,680
900,000 savings in year one we see

00:26:46,970 --> 00:26:51,290
infinite number of revenue growth and

00:26:48,680 --> 00:26:53,030
all different market verticals and the

00:26:51,290 --> 00:26:54,650
other thing that this does is it has a

00:26:53,030 --> 00:26:56,630
you look at the the flip side of this

00:26:54,650 --> 00:26:58,460
and we look at technical debt well one

00:26:56,630 --> 00:27:00,650
aspect the technical debt are features

00:26:58,460 --> 00:27:01,820
that don't resonate but we still have to

00:27:00,650 --> 00:27:03,260
maintain because we rip them out

00:27:01,820 --> 00:27:05,510
sometimes the bad can happen to the rest

00:27:03,260 --> 00:27:07,600
of the actual software so what cloud

00:27:05,510 --> 00:27:10,610
native gives us this kind of clean

00:27:07,600 --> 00:27:12,560
modularity that minimizes that ripple to

00:27:10,610 --> 00:27:14,990
be able to sunset things that we see in

00:27:12,560 --> 00:27:16,670
the data isn't generating any resonance

00:27:14,990 --> 00:27:18,410
and by getting rid of that and

00:27:16,670 --> 00:27:20,900
reallocating those resources and teams

00:27:18,410 --> 00:27:23,360
now suddenly we have new resources to

00:27:20,900 --> 00:27:24,740
put on new hypotheses to drive for new

00:27:23,360 --> 00:27:26,270
markets that we're looking for that we

00:27:24,740 --> 00:27:29,780
want to expand into and generate new

00:27:26,270 --> 00:27:32,180
revenue and all of this is you bite by

00:27:29,780 --> 00:27:35,240
pruning this technical debt early we can

00:27:32,180 --> 00:27:37,520
reallocate these new resources to to new

00:27:35,240 --> 00:27:40,400
hypothesis and what this really allows

00:27:37,520 --> 00:27:42,860
us to do as you can see you know the

00:27:40,400 --> 00:27:44,990
idea of opinions informed non informed

00:27:42,860 --> 00:27:46,520
opinions and and and going down these

00:27:44,990 --> 00:27:48,380
paths that don't necessarily lead

00:27:46,520 --> 00:27:49,580
anywhere and so what we really want to

00:27:48,380 --> 00:27:51,050
do is we want to make it so that the

00:27:49,580 --> 00:27:53,510
product development can remain objective

00:27:51,050 --> 00:27:54,610
and more focused on what the user is

00:27:53,510 --> 00:27:56,780
telling them rather than guessing

00:27:54,610 --> 00:27:58,850
product directions based on unvalidated

00:27:56,780 --> 00:28:01,100
assumptions and that's really the key

00:27:58,850 --> 00:28:03,130
here right is is you know what's the

00:28:01,100 --> 00:28:08,120
difference between speed and velocity

00:28:03,130 --> 00:28:10,190
anybody it's a vector right so if I run

00:28:08,120 --> 00:28:11,390
I want to exit my goal is to exit on

00:28:10,190 --> 00:28:12,620
running this direction it doesn't matter

00:28:11,390 --> 00:28:13,160
how fast because I'm in the wrong

00:28:12,620 --> 00:28:15,020
direction

00:28:13,160 --> 00:28:16,820
so the idea is how do we know we're

00:28:15,020 --> 00:28:18,200
going towards a new market the correct

00:28:16,820 --> 00:28:19,970
market direction and how do we know the

00:28:18,200 --> 00:28:21,890
product is evolving along the right

00:28:19,970 --> 00:28:24,350
lines we need to we need actual velocity

00:28:21,890 --> 00:28:26,510
not necessarily speed we need to know

00:28:24,350 --> 00:28:28,550
that what we're doing is the right thing

00:28:26,510 --> 00:28:30,620
based on what our customers are telling

00:28:28,550 --> 00:28:32,660
us is what they want in our product and

00:28:30,620 --> 00:28:34,160
are willing to pay for it so when we

00:28:32,660 --> 00:28:35,750
look at this that's what we're trying to

00:28:34,160 --> 00:28:37,790
get to effective use of capex

00:28:35,750 --> 00:28:38,240
expenditures and this is what we have

00:28:37,790 --> 00:28:41,500
today

00:28:38,240 --> 00:28:41,500
right this is typically what happens

00:28:43,179 --> 00:28:48,500
right the idea is like the product teams

00:28:46,280 --> 00:28:50,210
get together they handle up we got this

00:28:48,500 --> 00:28:53,300
great new products we're gonna put it

00:28:50,210 --> 00:28:54,890
out and suddenly it's not doing anything

00:28:53,300 --> 00:28:56,300
right and we see this all the time and

00:28:54,890 --> 00:28:58,460
then that's why it becomes more art than

00:28:56,300 --> 00:28:59,929
science because we're guessing I mean

00:28:58,460 --> 00:29:01,700
ultimately that's what happens you have

00:28:59,929 --> 00:29:03,110
all these product surveys and things out

00:29:01,700 --> 00:29:04,910
there and you know you have all these

00:29:03,110 --> 00:29:06,200
different biases that come into play but

00:29:04,910 --> 00:29:08,030
what really ends up happening is you're

00:29:06,200 --> 00:29:09,920
not really talking or engaging with the

00:29:08,030 --> 00:29:11,600
right folks and and and it doesn't

00:29:09,920 --> 00:29:13,040
necessarily mean actual user centric

00:29:11,600 --> 00:29:14,780
which is we do a lot of user centric

00:29:13,040 --> 00:29:16,280
design which is awesome and it builds

00:29:14,780 --> 00:29:17,390
great products but not everybody can get

00:29:16,280 --> 00:29:19,490
that level of interaction with a

00:29:17,390 --> 00:29:20,929
customer so we also want to do is we

00:29:19,490 --> 00:29:22,880
want to instrument the platform and

00:29:20,929 --> 00:29:24,590
instrument the micro services and

00:29:22,880 --> 00:29:26,809
instrument in the end in the cloud

00:29:24,590 --> 00:29:28,340
native architecture to really understand

00:29:26,809 --> 00:29:30,679
these types of user interactions and

00:29:28,340 --> 00:29:32,420
what that does is it liberates either

00:29:30,679 --> 00:29:34,550
the product or the company and enables

00:29:32,420 --> 00:29:36,800
them to evolve with customer changes in

00:29:34,550 --> 00:29:38,090
both their value and preferences and the

00:29:36,800 --> 00:29:39,740
reason why this is important is because

00:29:38,090 --> 00:29:42,530
even after product features have been

00:29:39,740 --> 00:29:44,840
delivered the granularity micro service

00:29:42,530 --> 00:29:46,940
design promises clean modularity to

00:29:44,840 --> 00:29:48,260
minimize to continuously collaborate

00:29:46,940 --> 00:29:50,929
with that customer and how they evolve

00:29:48,260 --> 00:29:52,850
and we all know circumstances change and

00:29:50,929 --> 00:29:56,000
that means the user needs change and

00:29:52,850 --> 00:29:58,160
instead of having to constantly restart

00:29:56,000 --> 00:30:00,110
with a new product we are now able to

00:29:58,160 --> 00:30:02,000
evolve the existing product which is

00:30:00,110 --> 00:30:03,920
less money cost less money because you

00:30:02,000 --> 00:30:05,679
have a core baseline there and they that

00:30:03,920 --> 00:30:07,700
initial product commit remain long

00:30:05,679 --> 00:30:10,910
irrelevant long after the initial launch

00:30:07,700 --> 00:30:13,070
of it and so we look at this we say well

00:30:10,910 --> 00:30:15,140
how do we do this right does everybody

00:30:13,070 --> 00:30:16,880
know what else on the Shelf is anybody

00:30:15,140 --> 00:30:19,280
so in the States is this creepy little

00:30:16,880 --> 00:30:20,840
thing it's a you put it on your shelf

00:30:19,280 --> 00:30:22,700
and it's supposed to watch you all year

00:30:20,840 --> 00:30:24,050
and that's all Santa knows like who gets

00:30:22,700 --> 00:30:26,210
presents and who doesn't get presents

00:30:24,050 --> 00:30:28,970
that's the general synopsis but but the

00:30:26,210 --> 00:30:30,650
idea here is that like we have like we

00:30:28,970 --> 00:30:32,000
actually have the ability to monitor the

00:30:30,650 --> 00:30:33,410
traffic that comes to the platform to

00:30:32,000 --> 00:30:35,360
look at what the customer interactions

00:30:33,410 --> 00:30:37,070
look like and to try to derive things

00:30:35,360 --> 00:30:39,080
from those and what we have we have

00:30:37,070 --> 00:30:40,550
tools very specific tools for this like

00:30:39,080 --> 00:30:42,620
a bee deployments or Bluegreen

00:30:40,550 --> 00:30:44,300
deployments that allow us to do some of

00:30:42,620 --> 00:30:45,950
these things but those really tell us

00:30:44,300 --> 00:30:47,750
yes or no right that's that's what we're

00:30:45,950 --> 00:30:50,000
looking at yes or no well by building

00:30:47,750 --> 00:30:52,280
these up they can also start to tell us

00:30:50,000 --> 00:30:53,900
the why we can use these in conjunction

00:30:52,280 --> 00:30:56,150
the granularity of cloud native

00:30:53,900 --> 00:30:57,500
architectures in order to build up and

00:30:56,150 --> 00:30:59,660
distribute tracing so we can see the

00:30:57,500 --> 00:31:02,420
shared context across interactions to

00:30:59,660 --> 00:31:04,730
really look at what is going on in the

00:31:02,420 --> 00:31:06,650
platform and we these primitives help us

00:31:04,730 --> 00:31:08,840
build up these very complex hypotheses

00:31:06,650 --> 00:31:10,670
and then which we can look at a number

00:31:08,840 --> 00:31:12,560
of different factors and validate

00:31:10,670 --> 00:31:15,860
behavior or invalidate behavior that we

00:31:12,560 --> 00:31:16,910
expected so what is this like anybody

00:31:15,860 --> 00:31:18,200
know what choose your own adventures

00:31:16,910 --> 00:31:19,850
aren't anybody remember those books

00:31:18,200 --> 00:31:21,890
alright so basically over these books

00:31:19,850 --> 00:31:23,480
that alright so the object is a book

00:31:21,890 --> 00:31:25,340
right it's it's a book everybody knows

00:31:23,480 --> 00:31:27,020
what a book is what the difference in it

00:31:25,340 --> 00:31:28,820
is the way you navigated the book it

00:31:27,020 --> 00:31:30,320
allowed you you'd read something and the

00:31:28,820 --> 00:31:32,870
adventurer and then on this one it's a

00:31:30,320 --> 00:31:34,820
if you decide yes go to page 13 if you

00:31:32,870 --> 00:31:36,410
decide no go to page 30 and then it

00:31:34,820 --> 00:31:39,380
would take these alternate courses and

00:31:36,410 --> 00:31:41,330
the idea was that now I'm using the book

00:31:39,380 --> 00:31:43,130
how I want to use the book which is what

00:31:41,330 --> 00:31:44,870
made them so popular versus somebody

00:31:43,130 --> 00:31:46,970
telling me in dictating how that story

00:31:44,870 --> 00:31:48,980
is going to occur so it worked like this

00:31:46,970 --> 00:31:50,840
right you had these pathways that you

00:31:48,980 --> 00:31:52,970
could go down in this particular example

00:31:50,840 --> 00:31:55,400
what we're looking at is let's say we're

00:31:52,970 --> 00:31:56,990
a company and we have basically three

00:31:55,400 --> 00:31:59,330
kinds of things we sell physical media

00:31:56,990 --> 00:32:01,820
we do electronic purchases of physical

00:31:59,330 --> 00:32:03,230
products and we stream audio books and

00:32:01,820 --> 00:32:04,640
movies so we have streaming media and

00:32:03,230 --> 00:32:06,740
then we have these different pathways

00:32:04,640 --> 00:32:08,840
let's say in the streaming media we have

00:32:06,740 --> 00:32:10,160
two hypothesis we want to test automated

00:32:08,840 --> 00:32:12,140
recommendation engines manual

00:32:10,160 --> 00:32:14,270
recommendation inches let's say on the e

00:32:12,140 --> 00:32:16,640
purchases we look at tailored sales not

00:32:14,270 --> 00:32:18,320
tailored sales manual recommendation

00:32:16,640 --> 00:32:19,670
automated recommend targeted ads not

00:32:18,320 --> 00:32:21,350
targeted ad so we have all these things

00:32:19,670 --> 00:32:23,300
and inside the company we don't know

00:32:21,350 --> 00:32:25,160
which way to go we say you know what

00:32:23,300 --> 00:32:26,120
streaming is the way of the future we

00:32:25,160 --> 00:32:33,110
think that everybody's going to do

00:32:26,120 --> 00:32:34,910
streaming let's just drop our eeper just

00:32:33,110 --> 00:32:36,830
do nothing but automated recommendation

00:32:34,910 --> 00:32:38,690
engines but then when we run the trace

00:32:36,830 --> 00:32:40,400
and we look at the data we say oh well

00:32:38,690 --> 00:32:42,590
wait a minute assumption one an

00:32:40,400 --> 00:32:45,110
assumption to our almost even maybe

00:32:42,590 --> 00:32:46,730
maybe physical things physical products

00:32:45,110 --> 00:32:48,590
is not necessarily going away maybe it's

00:32:46,730 --> 00:32:50,360
just as popular but then we see the

00:32:48,590 --> 00:32:53,240
secondary where we see the blue-green

00:32:50,360 --> 00:32:55,310
deployment and we see that 60% use

00:32:53,240 --> 00:32:57,440
manual recommendation engines and 40%

00:32:55,310 --> 00:32:59,870
use automated recommendation engines

00:32:57,440 --> 00:33:01,220
what's going on there but then we also

00:32:59,870 --> 00:33:02,690
see that if they pass through that

00:33:01,220 --> 00:33:05,120
automated recommendation engines we're

00:33:02,690 --> 00:33:05,910
seeing almost 100% conversion what is

00:33:05,120 --> 00:33:07,770
really going on

00:33:05,910 --> 00:33:10,320
it immediately points us to

00:33:07,770 --> 00:33:12,150
possibilities a new hypothesis then we

00:33:10,320 --> 00:33:14,430
can test with new sort of layouts and

00:33:12,150 --> 00:33:16,890
for instance in this particular case if

00:33:14,430 --> 00:33:18,810
we think about streaming media you know

00:33:16,890 --> 00:33:20,220
streaming media is sort of a immediate

00:33:18,810 --> 00:33:22,890
gratification I want to watch a movie

00:33:20,220 --> 00:33:24,420
let me put it on so maybe it's that our

00:33:22,890 --> 00:33:26,160
recommendation engines aren't very

00:33:24,420 --> 00:33:28,320
accurate and if we spend a little bit

00:33:26,160 --> 00:33:30,150
more research a Nardi on how those

00:33:28,320 --> 00:33:32,220
recommendation engines should work we're

00:33:30,150 --> 00:33:34,350
gonna get higher conversion rates maybe

00:33:32,220 --> 00:33:36,540
not maybe it's that you know down here

00:33:34,350 --> 00:33:38,250
you know everything is kind of split

00:33:36,540 --> 00:33:41,040
even maybe it's when people look at

00:33:38,250 --> 00:33:42,900
physical products they they look at more

00:33:41,040 --> 00:33:44,190
than one source of research right

00:33:42,900 --> 00:33:46,170
because I don't need it right away I'm

00:33:44,190 --> 00:33:47,520
buying a bicycle I go on a bunch of

00:33:46,170 --> 00:33:49,200
different sites and looking at different

00:33:47,520 --> 00:33:50,550
things so whether or not you target me

00:33:49,200 --> 00:33:52,620
or not whether or not it's automated

00:33:50,550 --> 00:33:53,970
recommendation engine or not is kind of

00:33:52,620 --> 00:33:54,390
irrelevant because I've already done my

00:33:53,970 --> 00:33:56,640
research

00:33:54,390 --> 00:33:58,140
but in streaming that night I want to

00:33:56,640 --> 00:33:59,940
sit down and watch a movie I'm gonna be

00:33:58,140 --> 00:34:02,130
more likely to look at recommendations

00:33:59,940 --> 00:34:03,750
and so it gives us sort of points as to

00:34:02,130 --> 00:34:05,610
how the user wants to use our

00:34:03,750 --> 00:34:07,800
application and do further hypothesis

00:34:05,610 --> 00:34:09,630
testing to figure out where we can get

00:34:07,800 --> 00:34:11,100
the most ROI out of every dollar we're

00:34:09,630 --> 00:34:13,080
spending an engineering and in

00:34:11,100 --> 00:34:15,090
engineering on the platform and in the

00:34:13,080 --> 00:34:16,919
actual product line so this opens up a

00:34:15,090 --> 00:34:18,900
whole new world of customer

00:34:16,919 --> 00:34:20,370
understanding things like where our

00:34:18,900 --> 00:34:21,840
highest bounce rates where do we see the

00:34:20,370 --> 00:34:24,290
most people exiting the conversion

00:34:21,840 --> 00:34:26,460
funnel where you know where do we see

00:34:24,290 --> 00:34:27,600
what's most valuable in the product

00:34:26,460 --> 00:34:29,970
where we seen the highest level

00:34:27,600 --> 00:34:32,310
conversion well what about the layouts

00:34:29,970 --> 00:34:33,390
if we tried different AV deployments of

00:34:32,310 --> 00:34:35,130
different layout structures and

00:34:33,390 --> 00:34:36,810
workflows maybe it's just a user

00:34:35,130 --> 00:34:38,400
experience maybe in certain countries

00:34:36,810 --> 00:34:40,290
it's different than other countries and

00:34:38,400 --> 00:34:41,910
so we need to actually do some sort of

00:34:40,290 --> 00:34:43,260
localization but on the entire workflow

00:34:41,910 --> 00:34:45,360
rather than just language localization

00:34:43,260 --> 00:34:47,070
so all different things that it kind of

00:34:45,360 --> 00:34:49,110
the data points us to and looks at and

00:34:47,070 --> 00:34:50,640
by instrumenting the entire platform we

00:34:49,110 --> 00:34:53,190
can see a shared context across the

00:34:50,640 --> 00:34:54,990
entire interaction and the idea is this

00:34:53,190 --> 00:34:56,130
we don't want to be fads you know when

00:34:54,990 --> 00:34:58,320
we do product development it's

00:34:56,130 --> 00:35:00,600
significant R&D and significant

00:34:58,320 --> 00:35:02,400
investment dollars it's significant the

00:35:00,600 --> 00:35:03,780
the level of effort that we put into

00:35:02,400 --> 00:35:05,580
these things to try to figure out what's

00:35:03,780 --> 00:35:07,200
what's going on what we don't want is

00:35:05,580 --> 00:35:08,730
something to get hot and then sunset and

00:35:07,200 --> 00:35:10,620
then you know all that investment that

00:35:08,730 --> 00:35:12,810
we put in and is wasted so we really

00:35:10,620 --> 00:35:15,210
want to avoid fads we want to see long

00:35:12,810 --> 00:35:17,520
term how people are using it and then if

00:35:15,210 --> 00:35:19,119
maybe it needs to evolve and maybe needs

00:35:17,520 --> 00:35:21,160
to continually to evolve the content

00:35:19,119 --> 00:35:22,660
experimentation process where we get

00:35:21,160 --> 00:35:24,369
these feedback loops that tell us how to

00:35:22,660 --> 00:35:26,200
evolve and this is really what the

00:35:24,369 --> 00:35:28,359
panacea of all the cloud native buzzes

00:35:26,200 --> 00:35:30,249
is how do you get into those new markets

00:35:28,359 --> 00:35:32,160
and expand that customer user base

00:35:30,249 --> 00:35:34,569
infinitely which is much greater than a

00:35:32,160 --> 00:35:35,890
$900,000 savings year one right you're

00:35:34,569 --> 00:35:37,509
talking about millions and millions of

00:35:35,890 --> 00:35:39,549
dollars that you could potentially bring

00:35:37,509 --> 00:35:41,140
back to your CFO and say this is why you

00:35:39,549 --> 00:35:42,999
want to invest in like cloud native

00:35:41,140 --> 00:35:44,470
architecture this is why we bought the

00:35:42,999 --> 00:35:46,299
platform this is why we're doing the

00:35:44,470 --> 00:35:48,009
things that we do why we changed our

00:35:46,299 --> 00:35:49,990
whole DevOps culture this is the whole

00:35:48,009 --> 00:35:52,029
point of this is because we know we can

00:35:49,990 --> 00:35:54,039
get to these blue oceans and we now have

00:35:52,029 --> 00:35:57,220
a physical way to do it there's actually

00:35:54,039 --> 00:35:59,559
a step-by-step process in order to get

00:35:57,220 --> 00:36:01,720
there it's no longer magic and so the

00:35:59,559 --> 00:36:04,089
ultimate is you know to take away of

00:36:01,720 --> 00:36:05,589
this is is to look at you know step one

00:36:04,089 --> 00:36:07,630
rate waste reduction let's get our

00:36:05,589 --> 00:36:09,220
deliveries more streamlined step two

00:36:07,630 --> 00:36:10,839
let's get closer interaction and

00:36:09,220 --> 00:36:12,279
feedbacks with our customers and then

00:36:10,839 --> 00:36:14,200
ultimately what we really want is

00:36:12,279 --> 00:36:16,059
data-driven decisions that move forward

00:36:14,200 --> 00:36:18,039
in the future higher customer spend

00:36:16,059 --> 00:36:19,509
ratios per investment dollar lower

00:36:18,039 --> 00:36:21,220
overall subscription turn if you're a

00:36:19,509 --> 00:36:22,749
subscription model and then less

00:36:21,220 --> 00:36:25,480
restarts a more evolution which

00:36:22,749 --> 00:36:27,400
ultimately is less costly to evolve a

00:36:25,480 --> 00:36:28,989
core base and sunset you know and get

00:36:27,400 --> 00:36:30,400
rid of the technical debt because of

00:36:28,989 --> 00:36:33,220
micro services and the ability to

00:36:30,400 --> 00:36:34,630
segment those things and get rid of them

00:36:33,220 --> 00:36:36,400
without causing a ripple effect through

00:36:34,630 --> 00:36:37,720
the baseline and so these are all the

00:36:36,400 --> 00:36:39,220
tenants that you've heard throughout the

00:36:37,720 --> 00:36:40,559
conference in these different pieces and

00:36:39,220 --> 00:36:46,829
this is ultimately we want to get you

00:36:40,559 --> 00:36:46,829

YouTube URL: https://www.youtube.com/watch?v=h0g044IWtTA


