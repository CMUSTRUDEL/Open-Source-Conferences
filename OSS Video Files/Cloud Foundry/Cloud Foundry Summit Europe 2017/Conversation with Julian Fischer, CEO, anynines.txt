Title: Conversation with Julian Fischer, CEO, anynines
Publication date: 2017-10-18
Playlist: Cloud Foundry Summit Europe 2017
Description: 
	Conversation with Julian Fischer, CEO, anynines

About Julian Fischer
Julian Fischer is CEO of anynines. As an expert for digital transformation he has been attending hundreds of IT conferences and speaking at dozens including several Cloud Foundry events. His passion for Cloud Foundry was the motivation to found anynines, a startup entirely focused on cloud-native software development and operations. anynines has been the first Cloud Foundry based public PaaS and is entirely operated under German jurisdiction. With more than three years of Cloud Foundry operation experience anynines has established in CF related enterprise operations and consulting for central europe. More than that anynines does significant groundwork in the field of highly available, self-provisioning, infrastructure agnostic Cloud Foundry services.
Captions: 
	00:00:00,269 --> 00:00:04,620
as we started talking about innovation

00:00:01,860 --> 00:00:06,870
and the role that plays in the digital

00:00:04,620 --> 00:00:10,740
transformation effort I did want to

00:00:06,870 --> 00:00:13,679
bring up a longtime member of the Cloud

00:00:10,740 --> 00:00:15,870
Foundry community Julian Fisher the CEO

00:00:13,679 --> 00:00:17,310
of any 9s to talk about data services

00:00:15,870 --> 00:00:20,490
come on up Julian

00:00:17,310 --> 00:00:23,610
[Music]

00:00:20,490 --> 00:00:23,610
[Applause]

00:00:24,270 --> 00:00:40,370
[Music]

00:00:37,660 --> 00:00:41,960
yeah absolutely

00:00:40,370 --> 00:00:43,640
I was joking that I want to have the

00:00:41,960 --> 00:00:46,880
rocky scene when I enter the stage and

00:00:43,640 --> 00:00:51,410
they really did it so that's awesome you

00:00:46,880 --> 00:00:53,510
don't joke with you great well thank you

00:00:51,410 --> 00:00:55,030
for joining us here at Cloud Foundry

00:00:53,510 --> 00:00:56,690
Summit we're excited to have you here

00:00:55,030 --> 00:00:58,960
never missed one

00:00:56,690 --> 00:01:01,430
now you've never missed one anywhere and

00:00:58,960 --> 00:01:04,250
you've been a longtime member of this

00:01:01,430 --> 00:01:05,600
community for those of you that are new

00:01:04,250 --> 00:01:07,640
to any nights once you walk us through a

00:01:05,600 --> 00:01:09,830
little bit what any nines does and and

00:01:07,640 --> 00:01:13,340
how Cloud Foundry has impacted your

00:01:09,830 --> 00:01:16,280
company well actually the company has

00:01:13,340 --> 00:01:18,560
been running since 2008 and we started

00:01:16,280 --> 00:01:22,250
as a web development and managed hosting

00:01:18,560 --> 00:01:24,580
company but was 2012 I was in Palo Alto

00:01:22,250 --> 00:01:28,250
at chef conf

00:01:24,580 --> 00:01:31,310
when I was invited by James Waters to

00:01:28,250 --> 00:01:34,610
come to VMware headquarter talking about

00:01:31,310 --> 00:01:36,350
Cloud Foundry and in 2013 we started a

00:01:34,610 --> 00:01:39,050
public offering around Cloud Foundry in

00:01:36,350 --> 00:01:41,870
Europe cost called pass any nines com

00:01:39,050 --> 00:01:45,310
so there was the beginning of our Cloud

00:01:41,870 --> 00:01:48,280
Foundry journey and from offering a

00:01:45,310 --> 00:01:51,770
public platform we actually trans

00:01:48,280 --> 00:01:53,720
transformed into a consultancy finally

00:01:51,770 --> 00:01:56,600
ending up as experts in Cloud Foundry

00:01:53,720 --> 00:01:59,840
operations and most importantly data

00:01:56,600 --> 00:02:01,760
service automation that is it's an

00:01:59,840 --> 00:02:04,730
amazing journey that any 9s has been on

00:02:01,760 --> 00:02:06,410
and we talked a little bit about this

00:02:04,730 --> 00:02:07,790
you know prior to coming up here in the

00:02:06,410 --> 00:02:09,950
roll data service display and I feel

00:02:07,790 --> 00:02:11,810
like we talked about platform in

00:02:09,950 --> 00:02:13,400
applications a lot but we don't really

00:02:11,810 --> 00:02:16,190
spend enough time talking about data

00:02:13,400 --> 00:02:18,230
which is obviously immensely important

00:02:16,190 --> 00:02:19,910
for your applications you talked a

00:02:18,230 --> 00:02:21,500
little bit about you know your view on

00:02:19,910 --> 00:02:24,290
data services and the role that it plays

00:02:21,500 --> 00:02:25,640
for you and any nines well obviously the

00:02:24,290 --> 00:02:28,400
first time we actually thought about

00:02:25,640 --> 00:02:30,110
that topic was when we had a cloud

00:02:28,400 --> 00:02:32,989
foundry platform up and running and

00:02:30,110 --> 00:02:35,540
there were no data services and we have

00:02:32,989 --> 00:02:38,360
had many customers from our managed

00:02:35,540 --> 00:02:41,269
hosting so we've been through all the

00:02:38,360 --> 00:02:43,040
the pitfalls you can imagine such as you

00:02:41,269 --> 00:02:44,850
know using shared cluster architectures

00:02:43,040 --> 00:02:47,610
and and things like that so

00:02:44,850 --> 00:02:51,750
we had a pretty clear picture on what

00:02:47,610 --> 00:02:54,510
needs to be done next so also we had a

00:02:51,750 --> 00:02:56,760
tons of of chef cookbooks as this was

00:02:54,510 --> 00:02:59,730
the primary automation technology we've

00:02:56,760 --> 00:03:02,640
been using for five years and after

00:02:59,730 --> 00:03:05,880
operating Clark County with Bosch we

00:03:02,640 --> 00:03:08,010
decided to dedicate it to deprecate all

00:03:05,880 --> 00:03:10,590
the chef's cookbooks we had every one

00:03:08,010 --> 00:03:12,180
every single one it was it was actually

00:03:10,590 --> 00:03:14,940
the head of operations who was in charge

00:03:12,180 --> 00:03:17,220
which of the chef's cookbooks who picked

00:03:14,940 --> 00:03:19,230
me up with that decision so he was

00:03:17,220 --> 00:03:21,720
skeptical at first but after a while we

00:03:19,230 --> 00:03:24,450
just found out that this is the right

00:03:21,720 --> 00:03:26,220
step and I would say it's an essential

00:03:24,450 --> 00:03:29,400
part of the success story around our

00:03:26,220 --> 00:03:31,740
data service automation products that

00:03:29,400 --> 00:03:34,680
that's based on the capabilities of

00:03:31,740 --> 00:03:37,560
Bosch so if you look into a platform

00:03:34,680 --> 00:03:41,100
where Cloud Foundry solves the problem

00:03:37,560 --> 00:03:41,910
of you know running your stateless

00:03:41,100 --> 00:03:44,310
applications

00:03:41,910 --> 00:03:46,170
you still need to run your stateful

00:03:44,310 --> 00:03:48,890
applications as well your data services

00:03:46,170 --> 00:03:51,420
so you want to have the same the same

00:03:48,890 --> 00:03:53,520
experience you know it was it should be

00:03:51,420 --> 00:03:55,800
on-demand service service so that you

00:03:53,520 --> 00:03:58,770
can create and restore databases at

00:03:55,800 --> 00:04:01,500
anytime so we're talking about managing

00:03:58,770 --> 00:04:04,560
the lifecycle of of a stateful of a

00:04:01,500 --> 00:04:06,450
stateful piece of software so and and

00:04:04,560 --> 00:04:08,940
therefore you're looking for a

00:04:06,450 --> 00:04:11,700
description language that allows you to

00:04:08,940 --> 00:04:12,930
describe this lifecycle so we've heard a

00:04:11,700 --> 00:04:15,620
lot about containers and virtual

00:04:12,930 --> 00:04:18,270
machines and how this changes everything

00:04:15,620 --> 00:04:21,420
but from the perspective of investing

00:04:18,270 --> 00:04:23,220
into automating data services I don't

00:04:21,420 --> 00:04:24,540
want to care I don't want to care about

00:04:23,220 --> 00:04:28,020
whether there's a container and

00:04:24,540 --> 00:04:31,200
kubernetes or virtual machine on a on a

00:04:28,020 --> 00:04:34,320
V&O vSphere or AWS I want to be able to

00:04:31,200 --> 00:04:35,550
describe once and run it everywhere so

00:04:34,320 --> 00:04:37,320
wherever there's a cloud from the

00:04:35,550 --> 00:04:39,510
application runtime or cloud foundry

00:04:37,320 --> 00:04:43,080
container runtime I would be able to run

00:04:39,510 --> 00:04:45,510
my data service solution as well so I

00:04:43,080 --> 00:04:48,150
think that is something that needs to be

00:04:45,510 --> 00:04:49,700
done and yeah we've been on that journey

00:04:48,150 --> 00:04:51,840
for years now

00:04:49,700 --> 00:04:54,600
but it seems like there's a bigger

00:04:51,840 --> 00:04:57,100
picture to that and the impact that has

00:04:54,600 --> 00:04:59,260
on really transforming a business

00:04:57,100 --> 00:05:00,700
what does that look like from the

00:04:59,260 --> 00:05:01,870
companies you've worked with and how has

00:05:00,700 --> 00:05:04,090
that transformed and to really think

00:05:01,870 --> 00:05:07,030
about the data structure is something

00:05:04,090 --> 00:05:09,310
very different whoa we particular had

00:05:07,030 --> 00:05:12,130
one advantage which was that we came

00:05:09,310 --> 00:05:14,230
from the Ruby community originally

00:05:12,130 --> 00:05:14,890
coming up with the idea of platform as a

00:05:14,230 --> 00:05:17,200
service

00:05:14,890 --> 00:05:18,880
we're in the Rails part of the Ruby

00:05:17,200 --> 00:05:21,250
community there's a lot of convention

00:05:18,880 --> 00:05:24,690
over configuration so we've been already

00:05:21,250 --> 00:05:26,740
present pretty progressively

00:05:24,690 --> 00:05:28,450
transforming ourselves like agile

00:05:26,740 --> 00:05:30,880
development was already done

00:05:28,450 --> 00:05:32,980
Kanban was already done and with all

00:05:30,880 --> 00:05:34,840
that experience in automation which it

00:05:32,980 --> 00:05:36,640
was clear that we are going to strive

00:05:34,840 --> 00:05:39,160
for the full automation of the entire

00:05:36,640 --> 00:05:40,600
lifecycle of data services not only

00:05:39,160 --> 00:05:43,540
setting up a data service but going

00:05:40,600 --> 00:05:45,880
through all the events like updates like

00:05:43,540 --> 00:05:48,850
failures of infrastructure and still

00:05:45,880 --> 00:05:51,220
providing a high level of automation so

00:05:48,850 --> 00:05:53,530
that mission statement of having this

00:05:51,220 --> 00:05:56,200
operational model across a wide set of

00:05:53,530 --> 00:05:58,930
data services was pretty unique and I

00:05:56,200 --> 00:06:01,870
think while now people are catching up

00:05:58,930 --> 00:06:03,970
to this idea a lot of the larger

00:06:01,870 --> 00:06:06,280
corporate customers they are stuck in

00:06:03,970 --> 00:06:08,860
their digital transformation at some at

00:06:06,280 --> 00:06:10,720
some place so they have to replay the

00:06:08,860 --> 00:06:12,640
technological and paradigm shifts of the

00:06:10,720 --> 00:06:15,100
past ten years within their company and

00:06:12,640 --> 00:06:17,860
sometimes this creates friction where

00:06:15,100 --> 00:06:19,840
where new technologies new ideas meet

00:06:17,860 --> 00:06:23,080
existing business processes and

00:06:19,840 --> 00:06:25,750
attitudes so for example purchasing a

00:06:23,080 --> 00:06:29,200
product or or adapting a certain product

00:06:25,750 --> 00:06:31,630
hits you know there creates friction

00:06:29,200 --> 00:06:34,300
with the big security handbooks they got

00:06:31,630 --> 00:06:40,540
the the purchase the procurement process

00:06:34,300 --> 00:06:42,670
they have and so on so yeah it's it's a

00:06:40,540 --> 00:06:44,670
challenge so with this new product

00:06:42,670 --> 00:06:47,830
category emerging in the market

00:06:44,670 --> 00:06:50,320
customers have to learn how to use it or

00:06:47,830 --> 00:06:54,070
how to expect it and how to how to buy

00:06:50,320 --> 00:06:58,330
it or build it if you want to so we see

00:06:54,070 --> 00:07:00,010
two extreme positions at the moment let

00:06:58,330 --> 00:07:03,370
us call them right wing and left wing

00:07:00,010 --> 00:07:05,199
for a moment just for the sake of the

00:07:03,370 --> 00:07:09,370
connotations those that might not be

00:07:05,199 --> 00:07:12,449
so the kind of businesses that are that

00:07:09,370 --> 00:07:14,949
are used to look for a very enterprise

00:07:12,449 --> 00:07:17,979
kind of solutions such as Oracle

00:07:14,949 --> 00:07:20,800
databases and the ones who do the exact

00:07:17,979 --> 00:07:23,729
opposite who avoid that going for pure

00:07:20,800 --> 00:07:27,849
open-source solutions on the other hand

00:07:23,729 --> 00:07:30,819
so I think there's a world in between

00:07:27,849 --> 00:07:32,379
which is worth looking at and most of

00:07:30,819 --> 00:07:35,830
the transformed digital transformation

00:07:32,379 --> 00:07:39,639
journeys are you know starting it at the

00:07:35,830 --> 00:07:42,939
enterprise side walking towards the more

00:07:39,639 --> 00:07:45,580
open source kind of things but that's a

00:07:42,939 --> 00:07:47,169
digital transformation challenge all the

00:07:45,580 --> 00:07:49,090
major organizations are facing

00:07:47,169 --> 00:07:50,409
especially in changing their attitudes

00:07:49,090 --> 00:07:52,659
along with their paradigms and

00:07:50,409 --> 00:07:56,110
technologies yeah absolutely it's huge

00:07:52,659 --> 00:07:57,430
so you know as we think about where

00:07:56,110 --> 00:07:59,529
we're going we've talked a lot this

00:07:57,430 --> 00:08:02,740
morning about the platform the

00:07:59,529 --> 00:08:04,749
enablement software development the role

00:08:02,740 --> 00:08:06,099
innovation plays on it and now data

00:08:04,749 --> 00:08:09,580
services where do you see the future

00:08:06,099 --> 00:08:12,009
going well obviously the future and

00:08:09,580 --> 00:08:15,339
wharfs containers because there's so

00:08:12,009 --> 00:08:16,990
much attention in in to that topic at

00:08:15,339 --> 00:08:21,069
the moment that you can't get around it

00:08:16,990 --> 00:08:24,279
so if if you look for a technical

00:08:21,069 --> 00:08:27,339
solution that in architecture to solve

00:08:24,279 --> 00:08:29,289
data service automation you you won't

00:08:27,339 --> 00:08:30,819
have a one piece of software such as a

00:08:29,289 --> 00:08:32,560
cloud foundry in one time you are ending

00:08:30,819 --> 00:08:35,079
up having a framework because the

00:08:32,560 --> 00:08:37,599
diversity of managing state across all

00:08:35,079 --> 00:08:39,459
those data stores is so different so the

00:08:37,599 --> 00:08:41,860
question is how does the perfect

00:08:39,459 --> 00:08:43,659
framework look like what's the

00:08:41,860 --> 00:08:45,699
automation technology to be used what

00:08:43,659 --> 00:08:47,019
are the these circumstances that the

00:08:45,699 --> 00:08:48,610
requirements you actually need to

00:08:47,019 --> 00:08:51,699
cooperate incorporate into that

00:08:48,610 --> 00:08:53,500
framework so when as I said earlier our

00:08:51,699 --> 00:08:55,540
vision is to have a common language

00:08:53,500 --> 00:08:57,820
where we describe the life cycle and

00:08:55,540 --> 00:09:00,459
don't have to worry about the

00:08:57,820 --> 00:09:02,440
infrastructure we deploy to but with the

00:09:00,459 --> 00:09:04,420
container movement resolving problems

00:09:02,440 --> 00:09:07,839
that kind of have been solved already

00:09:04,420 --> 00:09:09,880
but in a different way we are going back

00:09:07,839 --> 00:09:12,250
to the decision well do we want to

00:09:09,880 --> 00:09:15,579
automate things again maybe in a

00:09:12,250 --> 00:09:17,620
different technology ecosystem or do we

00:09:15,579 --> 00:09:18,200
find an abstraction that would give us a

00:09:17,620 --> 00:09:20,810
description

00:09:18,200 --> 00:09:24,290
and that can you know do both because

00:09:20,810 --> 00:09:27,860
the value for us the value is having a

00:09:24,290 --> 00:09:29,900
database and not reimplemented it over

00:09:27,860 --> 00:09:31,970
and over again in terms of we

00:09:29,900 --> 00:09:35,080
implementing the automation so the

00:09:31,970 --> 00:09:37,280
service yeah I I believe the future is

00:09:35,080 --> 00:09:39,590
finding a common way to describe

00:09:37,280 --> 00:09:42,380
lifecycle of software without having to

00:09:39,590 --> 00:09:45,500
care about its implementation Bosch has

00:09:42,380 --> 00:09:47,930
done a great job about it maybe there's

00:09:45,500 --> 00:09:52,100
going to be a coup Benitez CPI that will

00:09:47,930 --> 00:09:54,230
give access to the container world or

00:09:52,100 --> 00:09:57,020
maybe there's going to be another domain

00:09:54,230 --> 00:09:58,910
language for that in the future no maybe

00:09:57,020 --> 00:10:01,130
it's open source since the future you

00:09:58,910 --> 00:10:02,930
never know right well Julian thank you

00:10:01,130 --> 00:10:04,790
so much for coming and joining us here

00:10:02,930 --> 00:10:07,310
at cloud foundry summit it's always a

00:10:04,790 --> 00:10:14,950
pleasure to have them around thank you

00:10:07,310 --> 00:10:14,950

YouTube URL: https://www.youtube.com/watch?v=9odS0CTacjQ


