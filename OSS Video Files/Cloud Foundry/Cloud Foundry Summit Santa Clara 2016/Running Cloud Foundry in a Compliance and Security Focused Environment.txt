Title: Running Cloud Foundry in a Compliance and Security Focused Environment
Publication date: 2016-05-29
Playlist: Cloud Foundry Summit Santa Clara 2016
Description: 
	Running Cloud Foundry in a Compliance and Security Focused Environment - Diego Lapiduz and Bret A. Mogilefsky, 18F

Running Cloud Foundry in a compliance and security focused environment (Diego Lapiduz and Bret Mogilefsky, cloud.gov - 18F). cloud.gov has adopted Cloud Foundry to host applications for government users in the cloud, tackling one of the core impediments to government service delivery today. In the process of doing that we had to turn up the security of the platform, write composable compliance documentation, and build tools to automatically scan the system and tenant applications. These processes and tools have been built in the open so other members of the community can contribute to them and reuse them in other contexts. 

This talk will show how Cloud Foundry and Bosh made it easy to centralize security and enable redeployment of the whole platform. We will also talk about how we built reusable and composable compliance documentation that can be shared publicly. 

Diego Lapiduz
18F
Diego is a software architect turned DevOps practicioner. He is currently leading efforts to deploy software applications more efficiently at 18F. Earlier in his career, he worked on projects ranging from e-commerce to social networks. Diego is often a frequent guest speaker at conferences, where he talks about software architecture, DevOps and other ramblings.

Bret Mogilefsky
GSA/18F
Innovation Specialist
San Francisco, CA
Bret Mogilefsky is an Innovation Specialist at 18F, the agile design and development consultancy inside government, for government. Bret leads teams and projects focused on deconstructing the biggest technical hurdles to improving government services. Prior to 18F, Bret was the architect and evangelist for the overall developer experience at PlayStation, and was lead programmer and assistant designer of the legendary adventure game Grim Fandango at LucasArts. Bret lives in Castro Valley, CA with his wife, two kids, an indifferent cat, and an ambivalent iguana.
Captions: 
	00:00:00,000 --> 00:00:03,120
alright okay we'll get started a couple

00:00:01,979 --> 00:00:06,000
minutes early because uh first parts

00:00:03,120 --> 00:00:07,859
intro anyway so um close I don't know

00:00:06,000 --> 00:00:09,000
I'm Brad mogul of ski and this is Diego

00:00:07,859 --> 00:00:11,940
Lapidus

00:00:09,000 --> 00:00:13,769
we work for 18f which is this really

00:00:11,940 --> 00:00:16,199
kind of amazingly weird unicorn

00:00:13,769 --> 00:00:17,880
organization it's a a digital

00:00:16,199 --> 00:00:19,619
consultancy inside the US federal

00:00:17,880 --> 00:00:22,289
government for federal government in

00:00:19,619 --> 00:00:24,090
other words we're feds but we do a j'l

00:00:22,289 --> 00:00:26,189
user Center design and we do interesting

00:00:24,090 --> 00:00:27,449
platform stuff with Cloud Foundry and we

00:00:26,189 --> 00:00:29,490
work with other federal agencies to help

00:00:27,449 --> 00:00:30,570
them solve their problems and we're

00:00:29,490 --> 00:00:32,550
working on something called cloud backup

00:00:30,570 --> 00:00:34,670
so this is a talk about that and what

00:00:32,550 --> 00:00:39,469
we're having to do to make cloud gov

00:00:34,670 --> 00:00:42,480
viable for the federal marketplace okay

00:00:39,469 --> 00:00:43,530
so 18f is filled with people like us who

00:00:42,480 --> 00:00:45,030
are you know like it said the user

00:00:43,530 --> 00:00:46,559
centered the agile people a lot of them

00:00:45,030 --> 00:00:47,700
came from private industry and they get

00:00:46,559 --> 00:00:48,930
into government the first thing we do is

00:00:47,700 --> 00:00:50,250
we make a bunch of software like okay

00:00:48,930 --> 00:00:52,500
let started writing boom-boom-boom-boom

00:00:50,250 --> 00:00:53,670
we're starting make things up and so you

00:00:52,500 --> 00:00:54,899
develop something maybe one to three

00:00:53,670 --> 00:00:56,520
months and you're ready to ship it and

00:00:54,899 --> 00:00:58,890
we're starting to stack things up and

00:00:56,520 --> 00:01:00,300
like let's get it out there so we start

00:00:58,890 --> 00:01:01,440
to do that but then that's not what

00:01:00,300 --> 00:01:03,780
happens this is what happens

00:01:01,440 --> 00:01:05,100
and so 18f is kind of new in the

00:01:03,780 --> 00:01:06,930
government we're like what's going on

00:01:05,100 --> 00:01:08,130
here you know why are we having such a

00:01:06,930 --> 00:01:09,689
difficult time advice everyone else

00:01:08,130 --> 00:01:11,040
having such a difficult time and it

00:01:09,689 --> 00:01:12,090
turns out everybody's having the same

00:01:11,040 --> 00:01:14,310
problem that you go over to all the

00:01:12,090 --> 00:01:15,750
agencies in the in the federal space and

00:01:14,310 --> 00:01:17,909
they all have these problems and it

00:01:15,750 --> 00:01:19,259
turns out it's all about compliance this

00:01:17,909 --> 00:01:21,030
is like the biggest impediment so if we

00:01:19,259 --> 00:01:22,470
if we make software faster we go faster

00:01:21,030 --> 00:01:25,020
and faster and faster and iterate faster

00:01:22,470 --> 00:01:26,159
if we can't deploy faster then what's

00:01:25,020 --> 00:01:27,509
the point all we've done is just feed a

00:01:26,159 --> 00:01:30,420
bottleneck it's like having a freeway

00:01:27,509 --> 00:01:31,740
run into a country lane so the process

00:01:30,420 --> 00:01:34,350
in the government doesn't look too much

00:01:31,740 --> 00:01:35,670
different until you reach the bottom so

00:01:34,350 --> 00:01:36,930
there's this notion that you have to

00:01:35,670 --> 00:01:37,799
procure and configure your servers

00:01:36,930 --> 00:01:39,090
you're gonna have to set up your

00:01:37,799 --> 00:01:40,650
application you're gonna run some

00:01:39,090 --> 00:01:42,479
security scans you probably through some

00:01:40,650 --> 00:01:44,399
documentation I here's where it goes

00:01:42,479 --> 00:01:46,110
left in the government to document for

00:01:44,399 --> 00:01:47,820
the government you have to write doctor

00:01:46,110 --> 00:01:49,649
your whole stack and I mean your whole

00:01:47,820 --> 00:01:51,810
stack and the and the stands are written

00:01:49,649 --> 00:01:53,280
around physical data center so they have

00:01:51,810 --> 00:01:55,049
things like fire suppression systems

00:01:53,280 --> 00:01:57,270
next year hardware like do you have that

00:01:55,049 --> 00:01:59,189
how is that taken care of

00:01:57,270 --> 00:02:00,119
you end up writing to document your

00:01:59,189 --> 00:02:01,680
whole stack from the hardware up

00:02:00,119 --> 00:02:04,380
somewhere between 200 a thousand pages

00:02:01,680 --> 00:02:08,479
of documentation and just to write that

00:02:04,380 --> 00:02:08,479
documentation you have to know about

00:02:10,430 --> 00:02:13,800
four thousand and six pages of

00:02:12,600 --> 00:02:16,200
regulations so this is in addition to

00:02:13,800 --> 00:02:17,790
the law so FISMA the law and there's

00:02:16,200 --> 00:02:19,530
also this regulatory framework and this

00:02:17,790 --> 00:02:20,850
culture around around risk acceptance

00:02:19,530 --> 00:02:22,020
that are built around it you have to

00:02:20,850 --> 00:02:23,160
understand all that so that's a lot of

00:02:22,020 --> 00:02:24,270
information being familiar with just to

00:02:23,160 --> 00:02:26,160
ship a digital service

00:02:24,270 --> 00:02:27,150
so the weijin sees a panel this

00:02:26,160 --> 00:02:28,380
typically is they'll develop these

00:02:27,150 --> 00:02:29,940
experts they have these compliance

00:02:28,380 --> 00:02:31,470
experts who sit in the agencies and

00:02:29,940 --> 00:02:34,020
they're the ones they're sort of these

00:02:31,470 --> 00:02:35,670
Talmudic scholars of of compliance

00:02:34,020 --> 00:02:37,710
architecture they understand every

00:02:35,670 --> 00:02:39,210
single you know OMB memo that's ever

00:02:37,710 --> 00:02:40,890
been written or every FIPS document that

00:02:39,210 --> 00:02:42,600
have gone out or the NIST standards that

00:02:40,890 --> 00:02:44,070
exist and they're able to say well you

00:02:42,600 --> 00:02:47,400
know the intent of this thing is this is

00:02:44,070 --> 00:02:48,990
this satisfying it yeah I think we think

00:02:47,400 --> 00:02:50,640
so or no it's definitely not or whatever

00:02:48,990 --> 00:02:52,500
and so you end up with with this

00:02:50,640 --> 00:02:55,080
bottleneck going around these people to

00:02:52,500 --> 00:02:56,520
try and get your software out and so you

00:02:55,080 --> 00:02:57,930
know you might ask how long is it going

00:02:56,520 --> 00:02:59,130
to take you know this is you know we're

00:02:57,930 --> 00:03:00,210
trying to get something out in the in

00:02:59,130 --> 00:03:01,530
the public space we want to serve the

00:03:00,210 --> 00:03:02,790
American public better and they're

00:03:01,530 --> 00:03:04,380
complaining about digital and structural

00:03:02,790 --> 00:03:05,250
for the government being terrible how

00:03:04,380 --> 00:03:06,720
much longer is this going to take

00:03:05,250 --> 00:03:08,490
well the government does have great

00:03:06,720 --> 00:03:10,380
stats because it's spread across all the

00:03:08,490 --> 00:03:11,910
agencies but the bell curve it says the

00:03:10,380 --> 00:03:13,620
middle is around eight to four or six to

00:03:11,910 --> 00:03:15,120
14 months to get what's called authority

00:03:13,620 --> 00:03:17,820
to operate or ATO thats authority to

00:03:15,120 --> 00:03:19,080
operate your service in the public so

00:03:17,820 --> 00:03:20,430
six to fourteen months to get any Co you

00:03:19,080 --> 00:03:22,440
can imagine the effect that has on your

00:03:20,430 --> 00:03:23,820
team because now they've tried to deploy

00:03:22,440 --> 00:03:25,500
something but they've spent all their

00:03:23,820 --> 00:03:27,150
time and actually the compliance and

00:03:25,500 --> 00:03:28,260
deployment side of the equation even

00:03:27,150 --> 00:03:29,520
though they spent a very short amount of

00:03:28,260 --> 00:03:31,560
time actually developing their software

00:03:29,520 --> 00:03:33,450
so you can imagine the effect this has

00:03:31,560 --> 00:03:35,520
on them on their morale on their

00:03:33,450 --> 00:03:37,560
momentum on their ability to learn it's

00:03:35,520 --> 00:03:38,820
a huge deterrent to people in government

00:03:37,560 --> 00:03:39,750
actually be able to keep up with a

00:03:38,820 --> 00:03:41,850
bleeding edge of software because they

00:03:39,750 --> 00:03:43,020
can't iterate quickly so this is a huge

00:03:41,850 --> 00:03:44,790
problem the other thing that's happening

00:03:43,020 --> 00:03:47,490
in government is that as you all know

00:03:44,790 --> 00:03:48,450
speed equals security and there's the

00:03:47,490 --> 00:03:50,070
best return pivotal here at the

00:03:48,450 --> 00:03:52,020
conference which is about you know

00:03:50,070 --> 00:03:53,460
repave reap you know what my camera with

00:03:52,020 --> 00:03:55,050
it was but there were the three words so

00:03:53,460 --> 00:03:56,850
basically it was like get back to a

00:03:55,050 --> 00:03:58,950
known good state immediately repave the

00:03:56,850 --> 00:04:02,310
world and the speed with which you can

00:03:58,950 --> 00:04:04,320
deploy a change or a fix is huge there's

00:04:02,310 --> 00:04:05,370
no we know we all now know there's no

00:04:04,320 --> 00:04:06,510
such thing as a secure system there's

00:04:05,370 --> 00:04:08,370
only systems that haven't been broken

00:04:06,510 --> 00:04:10,800
yet there's only systems there not yet

00:04:08,370 --> 00:04:12,390
but we're not at yet aware of the

00:04:10,800 --> 00:04:14,400
vulnerabilities that they're subject to

00:04:12,390 --> 00:04:15,720
so speed becomes a huge factor in making

00:04:14,400 --> 00:04:17,130
these systems secure so if we're gonna

00:04:15,720 --> 00:04:18,419
do things for the federal government we

00:04:17,130 --> 00:04:19,919
don't want every single agency and every

00:04:18,419 --> 00:04:21,479
single team to have to figure out how to

00:04:19,919 --> 00:04:24,000
get things going really quickly so speed

00:04:21,479 --> 00:04:24,280
becomes a huge thing so for 18 F when we

00:04:24,000 --> 00:04:25,930
can

00:04:24,280 --> 00:04:27,520
and we said okay we're having this

00:04:25,930 --> 00:04:28,810
problem we better figure it out for

00:04:27,520 --> 00:04:30,760
ourselves and then make sure it works

00:04:28,810 --> 00:04:32,170
for everyone else so we looked at this

00:04:30,760 --> 00:04:35,710
problem we say okay this is kind of

00:04:32,170 --> 00:04:36,520
where Paz fits in we deployed Cloud

00:04:35,710 --> 00:04:37,720
Foundry and a couple other options

00:04:36,520 --> 00:04:38,860
internally we actually tried the

00:04:37,720 --> 00:04:40,750
configuration management route for a

00:04:38,860 --> 00:04:41,980
while first and found that didn't work

00:04:40,750 --> 00:04:43,060
out for the exact same reasons that were

00:04:41,980 --> 00:04:44,470
described in one of those keynotes which

00:04:43,060 --> 00:04:45,669
is that you know the developers don't

00:04:44,470 --> 00:04:47,680
really want to work on your chef puppet

00:04:45,669 --> 00:04:49,360
in an danceable and God knows you know

00:04:47,680 --> 00:04:50,290
salt whatever other manifests you have

00:04:49,360 --> 00:04:52,210
they don't really want to work on that

00:04:50,290 --> 00:04:54,340
they want to work on their code so we

00:04:52,210 --> 00:04:56,290
end up going the Paz route and deploying

00:04:54,340 --> 00:04:59,440
Cloud Foundry as something called cloud

00:04:56,290 --> 00:05:00,640
gov which is the product Diego is kind

00:04:59,440 --> 00:05:03,220
of technical on biz lead I'm kind of

00:05:00,640 --> 00:05:04,900
product lead on the side and cloud

00:05:03,220 --> 00:05:06,280
backup is built pretty much soup to nuts

00:05:04,900 --> 00:05:08,740
on Cloud Foundry and not just cloud

00:05:06,280 --> 00:05:11,320
foundry the technology but cloud foundry

00:05:08,740 --> 00:05:12,610
the community we as the federal

00:05:11,320 --> 00:05:13,960
government have a hard time buying

00:05:12,610 --> 00:05:15,280
things so working with the vendors very

00:05:13,960 --> 00:05:16,479
difficult around stuff like this and we

00:05:15,280 --> 00:05:17,919
also have these really kind of I

00:05:16,479 --> 00:05:20,169
wouldn't say unique but sort of

00:05:17,919 --> 00:05:21,250
specialized compliance issues that make

00:05:20,169 --> 00:05:24,820
it harder for vendors to work with the

00:05:21,250 --> 00:05:26,919
government so we're basically taking

00:05:24,820 --> 00:05:28,150
Cloud Foundry and adapting it and making

00:05:26,919 --> 00:05:29,470
sure that we do everything is possible

00:05:28,150 --> 00:05:30,520
in our deployment to make sure it's

00:05:29,470 --> 00:05:32,890
actually going to be compliant with

00:05:30,520 --> 00:05:34,060
federal architecture so we're gonna go

00:05:32,890 --> 00:05:35,890
into a little bit of the changes that

00:05:34,060 --> 00:05:37,510
we've had to make and things we've had

00:05:35,890 --> 00:05:38,919
to tackle none of them are huge

00:05:37,510 --> 00:05:40,900
technical lips but there may be things

00:05:38,919 --> 00:05:42,550
for people to be aware of I'm gonna say

00:05:40,900 --> 00:05:44,500
everything that we have done is in the

00:05:42,550 --> 00:05:46,210
open we have it all in github it's all

00:05:44,500 --> 00:05:48,789
there for people to follow and use and

00:05:46,210 --> 00:05:50,169
follow our path so we're gonna talk

00:05:48,789 --> 00:05:52,390
first about federal compliance I'm gonna

00:05:50,169 --> 00:05:54,010
try and stick to one slide because it

00:05:52,390 --> 00:05:55,390
could be really nightmarish you could

00:05:54,010 --> 00:05:57,550
say four thousand six pages and I'm

00:05:55,390 --> 00:05:59,740
going to try and do it in one slide but

00:05:57,550 --> 00:06:00,430
basically it works like this FISMA is

00:05:59,740 --> 00:06:03,220
the federal Information Security

00:06:00,430 --> 00:06:05,650
Management Architect Act of 2002 and it

00:06:03,220 --> 00:06:06,669
says all kinds of things about what

00:06:05,650 --> 00:06:09,190
you're supposed to do with your systems

00:06:06,669 --> 00:06:10,960
and it makes reference to these missus

00:06:09,190 --> 00:06:14,169
standards so basically you say my app is

00:06:10,960 --> 00:06:15,820
how sensitive you say low low medium or

00:06:14,169 --> 00:06:18,789
high that's the FISMA level that level

00:06:15,820 --> 00:06:19,930
implies you have to obey these NIST

00:06:18,789 --> 00:06:22,000
controls and this has these very

00:06:19,930 --> 00:06:24,340
exhaustive specifications for different

00:06:22,000 --> 00:06:26,350
kinds of access control or information

00:06:24,340 --> 00:06:28,780
integrity and things like that and

00:06:26,350 --> 00:06:30,460
that's the NIST 800-53 controls so

00:06:28,780 --> 00:06:32,169
you're supposed to determine for your

00:06:30,460 --> 00:06:33,849
app what is my level which controls do I

00:06:32,169 --> 00:06:34,930
need to obey then you have to take that

00:06:33,849 --> 00:06:36,789
in consideration as you build your

00:06:34,930 --> 00:06:37,870
service and document it which is a very

00:06:36,789 --> 00:06:39,550
waterfall process

00:06:37,870 --> 00:06:40,750
typically and then you have to verify

00:06:39,550 --> 00:06:42,010
both the docs in the systems they have

00:06:40,750 --> 00:06:43,810
to verify if you make an assertion in

00:06:42,010 --> 00:06:45,490
the docs that you've configured this

00:06:43,810 --> 00:06:46,810
hardware in this way they're actually

00:06:45,490 --> 00:06:48,100
going to go verify that you've

00:06:46,810 --> 00:06:49,870
configured the hardware in that way they

00:06:48,100 --> 00:06:51,130
have to actually say yes not only they

00:06:49,870 --> 00:06:52,870
have they documented this but the

00:06:51,130 --> 00:06:55,030
documentation is correct is true and

00:06:52,870 --> 00:06:57,010
then at the same time they have to then

00:06:55,030 --> 00:06:59,350
also verify the system so that's going

00:06:57,010 --> 00:07:00,910
to be looking for holes looking for your

00:06:59,350 --> 00:07:04,240
security posture looking for

00:07:00,910 --> 00:07:08,620
vulnerabilities and how do you roll

00:07:04,240 --> 00:07:09,760
things out so they're gonna be looking

00:07:08,620 --> 00:07:12,280
at all that as well so this type is

00:07:09,760 --> 00:07:14,320
really small here and then ultimately

00:07:12,280 --> 00:07:15,700
there's an authorizing official so this

00:07:14,320 --> 00:07:17,020
is the seat this usually it's the chief

00:07:15,700 --> 00:07:19,060
formation information security officer

00:07:17,020 --> 00:07:20,650
for an agency who's going to accept the

00:07:19,060 --> 00:07:22,180
risk and the accepting the rest says

00:07:20,650 --> 00:07:23,860
okay all these are the things considered

00:07:22,180 --> 00:07:24,880
the rest of the things I accept the risk

00:07:23,860 --> 00:07:26,500
if they're in the system is relatively

00:07:24,880 --> 00:07:29,430
low I'm gonna give it a three to operate

00:07:26,500 --> 00:07:31,570
ATO so it can be out in the public now

00:07:29,430 --> 00:07:34,030
the number of controls we're talking

00:07:31,570 --> 00:07:35,830
about is as it says there two hundred

00:07:34,030 --> 00:07:37,180
and fifty five or so destro FISMA

00:07:35,830 --> 00:07:38,470
moderate if you go to FISMA high which

00:07:37,180 --> 00:07:40,150
is like the high security applications

00:07:38,470 --> 00:07:42,039
then it goes through the roof but

00:07:40,150 --> 00:07:44,560
basically there's a huge number of

00:07:42,039 --> 00:07:46,090
concerns here so we're trying to get

00:07:44,560 --> 00:07:47,680
them on the platform level and the

00:07:46,090 --> 00:07:49,419
federal compliance rector's higher has

00:07:47,680 --> 00:07:50,740
something called FedRAMP which is

00:07:49,419 --> 00:07:52,870
basically aimed at platforms it's aimed

00:07:50,740 --> 00:07:54,460
at saz's and and passes and is is that

00:07:52,870 --> 00:07:55,660
are gonna have a lot of tenants and the

00:07:54,460 --> 00:07:57,820
idea being that they're gonna validate

00:07:55,660 --> 00:08:00,400
everything they possibly can about it

00:07:57,820 --> 00:08:01,419
and then that is a signal to the rest of

00:08:00,400 --> 00:08:03,010
the government that they can build on

00:08:01,419 --> 00:08:04,060
your stuff with impunity and the way

00:08:03,010 --> 00:08:06,460
they do that is there's actually like

00:08:04,060 --> 00:08:08,380
this triple approval from the Department

00:08:06,460 --> 00:08:09,550
of Homeland Security Department defense

00:08:08,380 --> 00:08:11,650
and the General Services Administration

00:08:09,550 --> 00:08:13,810
those three CIS OS are gonna look at

00:08:11,650 --> 00:08:16,300
this full package including this

00:08:13,810 --> 00:08:17,860
exhaustive months-long assessment to

00:08:16,300 --> 00:08:19,300
decide to accept the risk and say yes

00:08:17,860 --> 00:08:20,830
you have authority to operate as a

00:08:19,300 --> 00:08:22,570
platform as a provisional platform so

00:08:20,830 --> 00:08:23,800
now agencies can work with you build

00:08:22,570 --> 00:08:24,700
their applications on top and save all

00:08:23,800 --> 00:08:26,860
kinds of time and effort

00:08:24,700 --> 00:08:33,250
that's how compliance works in the

00:08:26,860 --> 00:08:34,990
government okay so what we're doing is

00:08:33,250 --> 00:08:37,570
we're addressing this by layers so what

00:08:34,990 --> 00:08:38,589
you do is you say there's they're still

00:08:37,570 --> 00:08:39,669
these four layers that you look at so

00:08:38,589 --> 00:08:40,539
there's the human or organizational

00:08:39,669 --> 00:08:42,159
they're like who's actually running

00:08:40,539 --> 00:08:43,659
things who's staffing it how's that

00:08:42,159 --> 00:08:44,980
how are those people validated how is

00:08:43,659 --> 00:08:46,959
their access controlled as they enter

00:08:44,980 --> 00:08:48,910
and leave the organization and so on

00:08:46,959 --> 00:08:50,760
there's the IAS layer which as we know

00:08:48,910 --> 00:08:51,630
is just you know a cloud and as

00:08:50,760 --> 00:08:52,950
you know you're all the cloud founder

00:08:51,630 --> 00:08:54,300
conference you know that cloud founders

00:08:52,950 --> 00:08:56,520
for sharing the IaaS layer and a sort of

00:08:54,300 --> 00:08:58,020
a commoditize there but you can leverage

00:08:56,520 --> 00:08:59,610
a lot of the stuff that was already done

00:08:58,020 --> 00:09:01,320
if you pick a pick one which we'll talk

00:08:59,610 --> 00:09:02,340
about in a minute and then the pass is

00:09:01,320 --> 00:09:04,500
where we're going to focusing all our

00:09:02,340 --> 00:09:05,760
effort and energy which is to kind of

00:09:04,500 --> 00:09:07,350
knock out as many of those controls as

00:09:05,760 --> 00:09:09,030
possible and leave as little as left to

00:09:07,350 --> 00:09:10,110
do for the application there and the

00:09:09,030 --> 00:09:11,250
application layer we're trying to get

00:09:10,110 --> 00:09:12,480
the number controls they can do down to

00:09:11,250 --> 00:09:14,610
something that any team could handle any

00:09:12,480 --> 00:09:15,780
to Pizza team could handle and then to

00:09:14,610 --> 00:09:17,190
that to that and we're providing

00:09:15,780 --> 00:09:19,770
facilities to help that team do that

00:09:17,190 --> 00:09:20,940
more easily so we're gonna give you some

00:09:19,770 --> 00:09:22,860
of the tips things that we've had to go

00:09:20,940 --> 00:09:23,880
through we're in the FedRAMP process

00:09:22,860 --> 00:09:25,050
right now we're in what's called the

00:09:23,880 --> 00:09:26,790
FedRAMP ready state which basically

00:09:25,050 --> 00:09:28,380
means that they've done the course

00:09:26,790 --> 00:09:29,280
assessment of our TAC in our process and

00:09:28,380 --> 00:09:29,790
things like that and say it looks pretty

00:09:29,280 --> 00:09:31,560
good

00:09:29,790 --> 00:09:34,320
now comes the exhaustive you know months

00:09:31,560 --> 00:09:36,330
long process so fingers crossed Bend of

00:09:34,320 --> 00:09:43,020
the Year will will be fully FedRAMP I

00:09:36,330 --> 00:09:44,820
complain do you work from here so you

00:09:43,020 --> 00:09:46,770
know we really decided to build a

00:09:44,820 --> 00:09:51,690
platform but the reality is that we need

00:09:46,770 --> 00:09:53,910
to build it somewhere but you can choose

00:09:51,690 --> 00:09:55,560
to use a data center you know we have

00:09:53,910 --> 00:10:00,360
plenty of those in basements all across

00:09:55,560 --> 00:10:03,290
DC and Virginia but we wanted to you

00:10:00,360 --> 00:10:05,970
know move to a cloud move to use a

00:10:03,290 --> 00:10:10,100
provider that can give us good

00:10:05,970 --> 00:10:15,140
architecture and we decided to use a

00:10:10,100 --> 00:10:17,030
public cloud provider and let me try to

00:10:15,140 --> 00:10:25,890
okay um

00:10:17,030 --> 00:10:29,100
that there's no way to okay it's really

00:10:25,890 --> 00:10:32,760
tiny our preview slide is about this

00:10:29,100 --> 00:10:34,860
it's a poster Sam sighs sorry yeah so

00:10:32,760 --> 00:10:36,750
basically we we decided to use a public

00:10:34,860 --> 00:10:39,270
cloud provider that had their

00:10:36,750 --> 00:10:42,120
infrastructure approved that had a

00:10:39,270 --> 00:10:44,670
federal compliance that that had a

00:10:42,120 --> 00:10:47,310
federal compliance or radon and that we

00:10:44,670 --> 00:10:49,140
didn't just leverage right so a bunch of

00:10:47,310 --> 00:10:52,080
the controls how you normally see

00:10:49,140 --> 00:10:56,250
someone else he just inherited them by

00:10:52,080 --> 00:10:59,100
using a cloud provider the cool thing is

00:10:56,250 --> 00:11:01,170
you know we use a pretty popular one we

00:10:59,100 --> 00:11:03,690
use Hamilton so like you know it's the

00:11:01,170 --> 00:11:04,860
same thing that everyone else's uses but

00:11:03,690 --> 00:11:06,840
we can be more

00:11:04,860 --> 00:11:08,910
we know we can move yeah so one of the

00:11:06,840 --> 00:11:11,750
cool things about a foundry is that it

00:11:08,910 --> 00:11:14,430
doesn't localize seen into anything and

00:11:11,750 --> 00:11:16,890
if anything happens we can just move

00:11:14,430 --> 00:11:19,140
along and that was one of the key

00:11:16,890 --> 00:11:21,750
features that we like that about cloud

00:11:19,140 --> 00:11:25,440
foundry when we selected it but the

00:11:21,750 --> 00:11:27,300
thing is when you talk about cloud I

00:11:25,440 --> 00:11:29,760
think that there are three rules of

00:11:27,300 --> 00:11:33,420
cloud and that is automation automation

00:11:29,760 --> 00:11:34,860
and animation um you know automation

00:11:33,420 --> 00:11:38,520
robots all the way down yeah it's got to

00:11:34,860 --> 00:11:39,870
be robots all the way down so we are

00:11:38,520 --> 00:11:44,550
automating pretty much everything with

00:11:39,870 --> 00:11:48,420
boss and concourse we you know you track

00:11:44,550 --> 00:11:50,040
the public CF release from github we

00:11:48,420 --> 00:11:53,160
have custom and if I think you have to

00:11:50,040 --> 00:11:56,580
if you want to go check it out you can

00:11:53,160 --> 00:11:58,050
do that one of the cool things about

00:11:56,580 --> 00:12:01,110
having everything that you'd have is

00:11:58,050 --> 00:12:04,280
that we have one authoritative source

00:12:01,110 --> 00:12:08,040
for everything that we have right like

00:12:04,280 --> 00:12:11,850
we know that if anyone comes in and does

00:12:08,040 --> 00:12:14,400
a change to one of our repos what that

00:12:11,850 --> 00:12:15,990
change was and we can track why'd that

00:12:14,400 --> 00:12:17,820
happen

00:12:15,990 --> 00:12:20,940
moreover we have you know the poor

00:12:17,820 --> 00:12:23,310
request process of someone having to

00:12:20,940 --> 00:12:28,230
look over any change that goes into any

00:12:23,310 --> 00:12:32,550
repo we also you know you this is a boss

00:12:28,230 --> 00:12:36,630
for everything we have a bunch of boss

00:12:32,550 --> 00:12:40,920
releases and we use concourse to employ

00:12:36,630 --> 00:12:43,790
all the things our main one of them our

00:12:40,920 --> 00:12:47,130
main pipelines looks like this it's

00:12:43,790 --> 00:12:50,490
growing to the point you can treat

00:12:47,130 --> 00:12:51,390
things anymore but it's pretty cool you

00:12:50,490 --> 00:12:53,180
know you guys haven't checked out

00:12:51,390 --> 00:12:57,090
concourse yet you definitely should yes

00:12:53,180 --> 00:13:01,530
it has been extremely useful for us to

00:12:57,090 --> 00:13:04,560
use concourse but one of the cool things

00:13:01,530 --> 00:13:06,990
is that will come of course we cannot we

00:13:04,560 --> 00:13:09,720
can do both releases we can do we're

00:13:06,990 --> 00:13:13,520
doing terraform now we're doing CF apps

00:13:09,720 --> 00:13:17,570
we do custom stuff with security scans

00:13:13,520 --> 00:13:17,570
you can do pretty much whatever you want

00:13:17,760 --> 00:13:27,110
so all of these allows us to you know

00:13:21,060 --> 00:13:29,100
have a lot of benefits when you're doing

00:13:27,110 --> 00:13:30,750
government work when you're talking

00:13:29,100 --> 00:13:34,020
about compliance when you're talking

00:13:30,750 --> 00:13:38,130
about security automation is really

00:13:34,020 --> 00:13:40,500
crucial but all of the things right like

00:13:38,130 --> 00:13:43,350
you know we can repeat any any

00:13:40,500 --> 00:13:46,440
deployment whatever you want if there's

00:13:43,350 --> 00:13:48,840
any disaster recovery issue like you

00:13:46,440 --> 00:13:51,720
know if almost a wave happened to go

00:13:48,840 --> 00:13:56,730
down we can redeploy everything in a

00:13:51,720 --> 00:14:03,870
different region it allows us to have a

00:13:56,730 --> 00:14:05,700
very good audit trail so usually in any

00:14:03,870 --> 00:14:09,810
other data center environment or any

00:14:05,700 --> 00:14:12,330
other agency what they would look at is

00:14:09,810 --> 00:14:16,470
like what are the logs for the Chevron

00:14:12,330 --> 00:14:19,950
so what are the logs for the ssh axis

00:14:16,470 --> 00:14:23,310
but here what we show it's like you know

00:14:19,950 --> 00:14:26,840
they get history for a github repos the

00:14:23,310 --> 00:14:29,520
boss audit logs the Conchords bill logs

00:14:26,840 --> 00:14:31,670
those are all things that it can really

00:14:29,520 --> 00:14:34,110
help us when we're talking about

00:14:31,670 --> 00:14:35,340
auditing often they're looking for

00:14:34,110 --> 00:14:37,170
things like a change Review Board

00:14:35,340 --> 00:14:38,340
like what is your perch Ange review

00:14:37,170 --> 00:14:39,390
board process for deploying code

00:14:38,340 --> 00:14:40,980
interrupt and how do you make sure that

00:14:39,390 --> 00:14:42,510
what lands in production is what was

00:14:40,980 --> 00:14:44,490
supposed to and and we just say well

00:14:42,510 --> 00:14:46,170
there's hashes and you can look at

00:14:44,490 --> 00:14:48,240
patches all the way across and it's

00:14:46,170 --> 00:14:49,380
automated and so no humans have to do it

00:14:48,240 --> 00:14:50,520
it's just here's the pull request and

00:14:49,380 --> 00:14:52,500
here's the person who approved it so

00:14:50,520 --> 00:14:53,940
there's our Change review board and that

00:14:52,500 --> 00:14:55,080
that kind of blows their minds in the

00:14:53,940 --> 00:14:56,520
federal compliance architecture because

00:14:55,080 --> 00:14:57,840
people don't do it that way

00:14:56,520 --> 00:14:59,070
but they all look at this the new

00:14:57,840 --> 00:15:02,100
standards I say yeah that standard that

00:14:59,070 --> 00:15:03,630
satisfies the controls so that's you

00:15:02,100 --> 00:15:05,160
know modern techniques that are in this

00:15:03,630 --> 00:15:08,640
community are really going to apply yeah

00:15:05,160 --> 00:15:10,440
and one of the things that that it was

00:15:08,640 --> 00:15:12,780
really important when we were talking

00:15:10,440 --> 00:15:15,690
about compliance it's like we are going

00:15:12,780 --> 00:15:19,350
to the core beliefs of people but we

00:15:15,690 --> 00:15:21,480
need to show how we fit the controls

00:15:19,350 --> 00:15:26,340
right like how we fit all the compliance

00:15:21,480 --> 00:15:28,590
tags that the concept was made for right

00:15:26,340 --> 00:15:31,960
like

00:15:28,590 --> 00:15:35,320
you you're not talking about using chef

00:15:31,960 --> 00:15:36,910
your the control is do you have your

00:15:35,320 --> 00:15:39,550
configuration somewhere that it can be

00:15:36,910 --> 00:15:43,180
audited audited right like so that's

00:15:39,550 --> 00:15:45,190
what we're doing so when talking about

00:15:43,180 --> 00:15:49,420
security - dree has a lot of cool

00:15:45,190 --> 00:15:52,260
security features right these stem cells

00:15:49,420 --> 00:15:57,370
by their you know our hardened already

00:15:52,260 --> 00:16:00,400
you have the user management piece of

00:15:57,370 --> 00:16:02,530
you a is fantastic

00:16:00,400 --> 00:16:04,180
the even with within the cloud

00:16:02,530 --> 00:16:07,660
controller or that all the permissions

00:16:04,180 --> 00:16:12,640
are really well organized and that

00:16:07,660 --> 00:16:16,200
really helps us right there's also like

00:16:12,640 --> 00:16:20,790
the logo Gator and the audit trail said

00:16:16,200 --> 00:16:27,700
if arrives are extremely useful for a

00:16:20,790 --> 00:16:30,460
compliance world and you know we we take

00:16:27,700 --> 00:16:32,560
we took the clarinet security from the

00:16:30,460 --> 00:16:36,250
get-go as a you know a starting point

00:16:32,560 --> 00:16:40,480
but we needed to you know move from

00:16:36,250 --> 00:16:45,790
there into deeper things so we started

00:16:40,480 --> 00:16:50,590
with whole security and the the powers

00:16:45,790 --> 00:16:53,950
automation pieces allowed us to take an

00:16:50,590 --> 00:16:56,650
iterative approach to how we deal with

00:16:53,950 --> 00:16:58,870
security at the house later right we

00:16:56,650 --> 00:17:01,750
created modulus we tested then we

00:16:58,870 --> 00:17:06,010
applied to all the servers and we know

00:17:01,750 --> 00:17:09,820
that everything is consistent across the

00:17:06,010 --> 00:17:13,560
board these are some of the things that

00:17:09,820 --> 00:17:16,930
we're doing on the whole security itself

00:17:13,560 --> 00:17:18,670
the you know we track the upstream stem

00:17:16,930 --> 00:17:23,440
cells they're usually updated pretty

00:17:18,670 --> 00:17:27,630
often if there's a issue there's a

00:17:23,440 --> 00:17:31,720
vulnerability in Ubuntu and they did

00:17:27,630 --> 00:17:36,580
last time it was like a day that we had

00:17:31,720 --> 00:17:38,890
a really open we do stem cell Harding I

00:17:36,580 --> 00:17:42,880
mean we have a boss release that it's

00:17:38,890 --> 00:17:45,730
called CG hardened and then applies

00:17:42,880 --> 00:17:50,470
pretty basic Harling scripts to this

00:17:45,730 --> 00:17:52,900
stencil we do more movie scanning on all

00:17:50,470 --> 00:17:55,540
the servers you see neces if you're not

00:17:52,900 --> 00:17:57,520
familiar with necess it's just in a

00:17:55,540 --> 00:18:03,690
secure base cutting tool that you can

00:17:57,520 --> 00:18:06,730
use to scan all the OS and network we

00:18:03,690 --> 00:18:09,790
are starting to do interpreted checks on

00:18:06,730 --> 00:18:11,590
all the files using tripwire which has

00:18:09,790 --> 00:18:15,070
been pretty cool you know so far so good

00:18:11,590 --> 00:18:16,870
we because we're using Amazon we are

00:18:15,070 --> 00:18:19,770
forwarding all the logs from the

00:18:16,870 --> 00:18:23,670
platform to clash logs down and

00:18:19,770 --> 00:18:26,980
hopefully hopefully setting alerts soon

00:18:23,670 --> 00:18:30,160
and you know we're using boss-employee

00:18:26,980 --> 00:18:32,380
all of this and again it allows us to be

00:18:30,160 --> 00:18:34,090
consistent across the board yeah they

00:18:32,380 --> 00:18:35,620
wanted initially the compliance side

00:18:34,090 --> 00:18:36,670
they wanted to scan our entire set of

00:18:35,620 --> 00:18:37,720
machines I'm like we don't know how many

00:18:36,670 --> 00:18:39,910
there aren't any given time and they

00:18:37,720 --> 00:18:43,300
kind of that kind of made them explode a

00:18:39,910 --> 00:18:44,530
little bit and and and they said well we

00:18:43,300 --> 00:18:45,940
need to network access those things we

00:18:44,530 --> 00:18:49,720
need SSH keys on them were like like

00:18:45,940 --> 00:18:51,790
hell you do so we ended up deploying the

00:18:49,720 --> 00:18:52,930
necess agent which reports out but by

00:18:51,790 --> 00:18:54,610
making a part of the boss release it

00:18:52,930 --> 00:18:56,290
ends up you know on every single machine

00:18:54,610 --> 00:18:57,400
and so it really is kind of actually

00:18:56,290 --> 00:18:58,570
done but beylin have changed their

00:18:57,400 --> 00:18:59,950
configuration we're using the agent to

00:18:58,570 --> 00:19:01,750
report it centrally so that's worked out

00:18:59,950 --> 00:19:03,910
pretty well yeah and all of these are

00:19:01,750 --> 00:19:05,740
like each one of those are single Bush

00:19:03,910 --> 00:19:07,060
release so if you're interested in any

00:19:05,740 --> 00:19:09,820
of those you think we're publishing

00:19:07,060 --> 00:19:13,690
everything we do yep

00:19:09,820 --> 00:19:16,990
we've got any new user access you know

00:19:13,690 --> 00:19:21,220
again we used under UA but one of the

00:19:16,990 --> 00:19:26,530
things that the UF provides is the it

00:19:21,220 --> 00:19:28,870
allows you to delegate user access to a

00:19:26,530 --> 00:19:30,850
platform and that is really cool because

00:19:28,870 --> 00:19:32,710
it making means that it's not our

00:19:30,850 --> 00:19:36,190
problem someone else's problem we don't

00:19:32,710 --> 00:19:38,800
care which is you know a thingy there

00:19:36,190 --> 00:19:43,510
that says you know just login with your

00:19:38,800 --> 00:19:44,080
credentials and you know if someone gets

00:19:43,510 --> 00:19:46,450
fired

00:19:44,080 --> 00:19:47,680
you know don't come yelling at me

00:19:46,450 --> 00:19:51,490
because they had access you should

00:19:47,680 --> 00:19:53,380
disable in the single sign-on platform

00:19:51,490 --> 00:19:55,150
yeah this this APHIS a lot of effort I

00:19:53,380 --> 00:19:55,960
mean I mean if we try to do MFA directly

00:19:55,150 --> 00:19:57,400
in UA or

00:19:55,960 --> 00:19:59,470
CUA would have been a lot more work but

00:19:57,400 --> 00:20:00,760
you a is not altogether well documented

00:19:59,470 --> 00:20:01,900
but it has all kinds of really

00:20:00,760 --> 00:20:03,220
interesting features I'm one of them as

00:20:01,900 --> 00:20:04,840
you know if you go look I think they're

00:20:03,220 --> 00:20:05,920
not command now better but it was it use

00:20:04,840 --> 00:20:07,420
to be just like read me how to set up

00:20:05,920 --> 00:20:08,590
with octa and turned out that's a road

00:20:07,420 --> 00:20:09,820
map for stand up with any sam'l provider

00:20:08,590 --> 00:20:12,880
so whether it's either Active Directory

00:20:09,820 --> 00:20:14,110
or SecureAuth or whatever and we're now

00:20:12,880 --> 00:20:15,550
looking at like you know we all have

00:20:14,110 --> 00:20:18,160
these government identity cards that

00:20:15,550 --> 00:20:19,870
well that's my bike Walker we always

00:20:18,160 --> 00:20:21,790
cover mehndi cards that then have like

00:20:19,870 --> 00:20:23,020
biometrics on things like that so we by

00:20:21,790 --> 00:20:24,310
doing this for outsourcing that back to

00:20:23,020 --> 00:20:25,930
the agencies that very invested in that

00:20:24,310 --> 00:20:27,070
architecture themselves so we're gonna

00:20:25,930 --> 00:20:27,970
sell something to the federal government

00:20:27,070 --> 00:20:29,320
then that's a really good thing to look

00:20:27,970 --> 00:20:31,210
at is having you a a delegate be off

00:20:29,320 --> 00:20:32,890
back them and it's their problem as

00:20:31,210 --> 00:20:34,000
opposed to it cuts out a lot of concerns

00:20:32,890 --> 00:20:36,010
from us on the compliance side that we

00:20:34,000 --> 00:20:37,660
don't have to deal with it and just for

00:20:36,010 --> 00:20:40,060
future reference we don't allow it

00:20:37,660 --> 00:20:44,130
people to sign up with Mike Locker cards

00:20:40,060 --> 00:20:46,630
yeah bye-bye clock doesn't work so

00:20:44,130 --> 00:20:50,670
another thing that we were interested in

00:20:46,630 --> 00:20:53,260
is how we can how come we allow

00:20:50,670 --> 00:20:56,200
operators or administrators to access

00:20:53,260 --> 00:20:59,410
the platform we you know with some

00:20:56,200 --> 00:21:02,380
security right and before we had a

00:20:59,410 --> 00:21:04,870
mystery set of SSH credentials to jump

00:21:02,380 --> 00:21:06,790
off says but no we're we're working on

00:21:04,870 --> 00:21:12,130
is something that we call ephemeral jump

00:21:06,790 --> 00:21:14,260
boxes and that's using concourse to you

00:21:12,130 --> 00:21:17,290
know build container hijack that

00:21:14,260 --> 00:21:19,450
container and you know we have the

00:21:17,290 --> 00:21:21,940
credentials already in there that we got

00:21:19,450 --> 00:21:24,580
from concourse and then you can just use

00:21:21,940 --> 00:21:27,190
boss and whatever and after you know I

00:21:24,580 --> 00:21:30,760
think it is like 30 minutes the whole

00:21:27,190 --> 00:21:32,500
thing disappears that way you know we

00:21:30,760 --> 00:21:36,160
limit access to concourse itself and

00:21:32,500 --> 00:21:41,650
then you know you only have access for a

00:21:36,160 --> 00:21:43,120
very limited amount of time okay so once

00:21:41,650 --> 00:21:44,770
we've got all that so we still have all

00:21:43,120 --> 00:21:45,790
those pages of documentation so we're

00:21:44,770 --> 00:21:47,080
you know we're working on the FedRAMP

00:21:45,790 --> 00:21:48,400
space to make it so that people are much

00:21:47,080 --> 00:21:50,200
more about like what is the system as

00:21:48,400 --> 00:21:51,460
opposed to was the documentation and the

00:21:50,200 --> 00:21:52,510
hope is that if we do this right we have

00:21:51,460 --> 00:21:54,010
such economy of scale that people are

00:21:52,510 --> 00:21:55,030
going to do only the apps and they're

00:21:54,010 --> 00:21:57,010
not going to have to do platforms like

00:21:55,030 --> 00:21:57,790
this so fingers crossed is the last time

00:21:57,010 --> 00:21:59,860
anybody eyes to do with this

00:21:57,790 --> 00:22:01,840
exhaustively if they're using our

00:21:59,860 --> 00:22:04,180
platform but the idea is that we took

00:22:01,840 --> 00:22:06,250
compliance normally it's 200 to 1,000

00:22:04,180 --> 00:22:07,780
pages and it's boilerplate a lot of its

00:22:06,250 --> 00:22:09,580
copy pasted from old systems and

00:22:07,780 --> 00:22:09,910
templates and it's somebody's you know

00:22:09,580 --> 00:22:11,800
we

00:22:09,910 --> 00:22:13,090
can to go through and try and well more

00:22:11,800 --> 00:22:14,590
than we can it's a lot of weekends going

00:22:13,090 --> 00:22:16,420
to looking for tips and trying to figure

00:22:14,590 --> 00:22:18,040
out what changed from system system we

00:22:16,420 --> 00:22:19,870
said okay we're not gonna write any flat

00:22:18,040 --> 00:22:21,670
documentation we want it to be collect

00:22:19,870 --> 00:22:23,170
code we want to treat it like code so we

00:22:21,670 --> 00:22:25,420
decompose the way the documentation is

00:22:23,170 --> 00:22:28,000
structured and so we do it all as AML

00:22:25,420 --> 00:22:29,650
data in github and then what we can do

00:22:28,000 --> 00:22:30,760
is we can compose we can compose it so

00:22:29,650 --> 00:22:32,440
it's the same we were composing our

00:22:30,760 --> 00:22:35,320
layers of like the hnf organization and

00:22:32,440 --> 00:22:36,910
then AWS is Ras layer and then Cloud

00:22:35,320 --> 00:22:38,620
Foundry is ours our paths and then the

00:22:36,910 --> 00:22:40,630
app goes on top we're basically

00:22:38,620 --> 00:22:43,450
decomposing our documentation in exactly

00:22:40,630 --> 00:22:44,860
the same way and then we're actually

00:22:43,450 --> 00:22:46,510
automating the publication of that via

00:22:44,860 --> 00:22:48,430
Concours so what you see here is like

00:22:46,510 --> 00:22:50,320
there's the standard so nist 800-53 is

00:22:48,430 --> 00:22:51,460
those computer controls and then the

00:22:50,320 --> 00:22:54,280
certifications the different levels you

00:22:51,460 --> 00:22:56,170
might have FedRAMP low FedRAMP medium la

00:22:54,280 --> 00:22:57,880
tio is a GSA one but you could also

00:22:56,170 --> 00:22:58,990
actually somebody contributed to us

00:22:57,880 --> 00:23:02,050
because it's open source they can read

00:22:58,990 --> 00:23:03,100
like a PCI mapping so it's mapping all

00:23:02,050 --> 00:23:04,270
these controls and then you have your

00:23:03,100 --> 00:23:05,290
component to kind of divide it out and

00:23:04,270 --> 00:23:07,480
say okay we're going to document each of

00:23:05,290 --> 00:23:08,650
these things individually and so what

00:23:07,480 --> 00:23:10,120
that looks like when you actually push

00:23:08,650 --> 00:23:12,220
with your concourse as we deploy it in

00:23:10,120 --> 00:23:14,100
this kit book fashion it's directly read

00:23:12,220 --> 00:23:16,390
up on the web compliance not Cloud gov

00:23:14,100 --> 00:23:18,250
and we now are be able to render it

00:23:16,390 --> 00:23:19,090
directly into the FedRAMP word template

00:23:18,250 --> 00:23:20,890
which we're working on actually some

00:23:19,090 --> 00:23:21,880
bees work at the office today which they

00:23:20,890 --> 00:23:23,650
require because there's a bunch of stuff

00:23:21,880 --> 00:23:26,440
they did with their structured that Word

00:23:23,650 --> 00:23:27,760
document that's important to them and so

00:23:26,440 --> 00:23:30,400
now people can take this documentation

00:23:27,760 --> 00:23:31,810
and they can kind of recombine it on

00:23:30,400 --> 00:23:33,280
their own or switch it out and switch

00:23:31,810 --> 00:23:34,210
out with a different is provider and so

00:23:33,280 --> 00:23:35,590
if there's like if you want to follow

00:23:34,210 --> 00:23:37,150
our lead and become cloud service

00:23:35,590 --> 00:23:38,920
providers for the government here's a

00:23:37,150 --> 00:23:40,090
pape a few can follow where we've kind

00:23:38,920 --> 00:23:41,050
of laid it out for you you can replace

00:23:40,090 --> 00:23:42,100
only the parts that are different for

00:23:41,050 --> 00:23:43,480
you or amend them what things are

00:23:42,100 --> 00:23:45,820
different that your value-add as a

00:23:43,480 --> 00:23:49,170
vendor the other thing that we're doing

00:23:45,820 --> 00:23:51,100
is like we really want teams to have

00:23:49,170 --> 00:23:52,030
high confidence on the image the

00:23:51,100 --> 00:23:55,270
compliance process that they're going to

00:23:52,030 --> 00:23:57,220
succeed so and we want the auditors to

00:23:55,270 --> 00:23:58,780
Fi high confidence that when we say

00:23:57,220 --> 00:24:00,370
these this is what's in our Docs and

00:23:58,780 --> 00:24:02,860
they have to go and say yes is that real

00:24:00,370 --> 00:24:04,960
now that they can actually see that very

00:24:02,860 --> 00:24:06,640
very easily so we're actually using BDD

00:24:04,960 --> 00:24:08,680
behavior driven design it's a kind of

00:24:06,640 --> 00:24:09,940
kind of test framework where you

00:24:08,680 --> 00:24:11,950
basically can do sort of a very human

00:24:09,940 --> 00:24:14,140
readable test to say you know given this

00:24:11,950 --> 00:24:16,870
condition when I do this then this is

00:24:14,140 --> 00:24:17,950
true and it's it's order readable and so

00:24:16,870 --> 00:24:19,240
on but on the back end there's code

00:24:17,950 --> 00:24:21,700
they'll do things so we have things that

00:24:19,240 --> 00:24:23,080
say like you know given if I go look in

00:24:21,700 --> 00:24:23,620
the Amazon console for this thing that

00:24:23,080 --> 00:24:25,390
we say is

00:24:23,620 --> 00:24:27,700
then I'll find that this this thing is

00:24:25,390 --> 00:24:28,930
set to on and we're actually like

00:24:27,700 --> 00:24:30,820
delivery not only the docks but like

00:24:28,930 --> 00:24:32,470
stretches of bdd code that will verify

00:24:30,820 --> 00:24:34,240
that the docks what's in the docks is

00:24:32,470 --> 00:24:35,890
true so that we can basically be doing

00:24:34,240 --> 00:24:37,480
this continuously all day every day and

00:24:35,890 --> 00:24:39,640
if everything everything ever falls out

00:24:37,480 --> 00:24:40,540
of true we'll know and also our hope is

00:24:39,640 --> 00:24:42,070
that we can actually get the FedRAMP

00:24:40,540 --> 00:24:43,600
auditing process down to the point where

00:24:42,070 --> 00:24:45,520
they will expect this coming in and

00:24:43,600 --> 00:24:46,750
therefore the auditing process goes much

00:24:45,520 --> 00:24:49,059
much faster rather than meeting months

00:24:46,750 --> 00:24:50,200
it's just look for differences in and

00:24:49,059 --> 00:24:52,270
look at the implantation of the tests

00:24:50,200 --> 00:24:54,850
and not having to check everything

00:24:52,270 --> 00:24:56,050
manually which is what they do now so

00:24:54,850 --> 00:24:58,059
that's kind of a novel thing we're doing

00:24:56,050 --> 00:24:59,980
we're also making it so that as part of

00:24:58,059 --> 00:25:01,720
that deployment pipeline when we deploy

00:24:59,980 --> 00:25:03,220
the new version of the docs we're also

00:25:01,720 --> 00:25:04,660
running all of our tests to verify the

00:25:03,220 --> 00:25:05,770
docs are true and so it'll actually in

00:25:04,660 --> 00:25:09,340
the published version of the docs you'll

00:25:05,770 --> 00:25:11,410
say last checked as of date X so that's

00:25:09,340 --> 00:25:12,580
really powerful because we want it not

00:25:11,410 --> 00:25:14,890
only at when we're getting compliant so

00:25:12,580 --> 00:25:17,200
we want after when we want to stay

00:25:14,890 --> 00:25:18,970
complain the other thing we're doing is

00:25:17,200 --> 00:25:20,260
we're working on making sure that the

00:25:18,970 --> 00:25:22,420
teams that are deploying we want to give

00:25:20,260 --> 00:25:23,770
them tools to understand when you know

00:25:22,420 --> 00:25:25,090
things that are within their boundary

00:25:23,770 --> 00:25:26,860
that are not at the Cloud Foundry level

00:25:25,090 --> 00:25:27,670
but they're at the app level we're

00:25:26,860 --> 00:25:30,010
giving them tools to help them

00:25:27,670 --> 00:25:31,420
understand when they're when they've got

00:25:30,010 --> 00:25:33,220
problems and give them high confidence

00:25:31,420 --> 00:25:34,720
as they enter the compliance process and

00:25:33,220 --> 00:25:36,640
after the compliance process to be to be

00:25:34,720 --> 00:25:38,860
continuous so we have so this app

00:25:36,640 --> 00:25:40,000
automated code quality and pen testing

00:25:38,860 --> 00:25:41,200
scans again this is built on the back of

00:25:40,000 --> 00:25:42,309
the concourse and we're slowly

00:25:41,200 --> 00:25:43,960
integrating a bunch of different tools

00:25:42,309 --> 00:25:45,370
into it and then we have a viewer which

00:25:43,960 --> 00:25:46,570
we'll give to them sort of here's their

00:25:45,370 --> 00:25:47,620
here's your current status and then

00:25:46,570 --> 00:25:49,270
alerts that'll tell them hey you know

00:25:47,620 --> 00:25:50,590
since yesterday looks like you got a few

00:25:49,270 --> 00:25:51,550
vulnerabilities that are introduced and

00:25:50,590 --> 00:25:53,140
those vulnerabilities might be because

00:25:51,550 --> 00:25:54,370
they push in version or code or Rumpy

00:25:53,140 --> 00:25:55,840
because the scans are picking up new

00:25:54,370 --> 00:25:58,840
stuff because new vulnerability was was

00:25:55,840 --> 00:26:00,250
going into what it's looking for and so

00:25:58,840 --> 00:26:01,360
that's what this looks like this is what

00:26:00,250 --> 00:26:02,710
that looks like this is currently sort

00:26:01,360 --> 00:26:03,970
of an internal 18f tool but we'll be

00:26:02,710 --> 00:26:05,260
turning it into you know again

00:26:03,970 --> 00:26:07,150
everything's open sources out there if

00:26:05,260 --> 00:26:08,380
you look for it but we have made a part

00:26:07,150 --> 00:26:09,580
of cloud like yet but it will be so when

00:26:08,380 --> 00:26:11,679
you're a tenant in cloud backup this is

00:26:09,580 --> 00:26:12,940
sort of a service that you get and the

00:26:11,679 --> 00:26:16,570
goal here is for continuous compliance

00:26:12,940 --> 00:26:17,500
so I mean you know the the federal teams

00:26:16,570 --> 00:26:19,059
have to jump through all kinds of Hoops

00:26:17,500 --> 00:26:20,080
and they get bogged down as we said the

00:26:19,059 --> 00:26:21,820
beginning so we want it to be a

00:26:20,080 --> 00:26:23,290
lightweight process that you know they

00:26:21,820 --> 00:26:24,670
can get feedback immediately as soon as

00:26:23,290 --> 00:26:28,330
they start developing and sort of never

00:26:24,670 --> 00:26:29,860
fall out of true oh yeah so we're gonna

00:26:28,330 --> 00:26:30,970
start turning on some questions if you

00:26:29,860 --> 00:26:32,920
want to start submitting questions you

00:26:30,970 --> 00:26:34,080
can use that this is new we're trying

00:26:32,920 --> 00:26:37,480
this on the fly it's an experiment

00:26:34,080 --> 00:26:37,720
thanks Google but the idea is that we

00:26:37,480 --> 00:26:39,310
want

00:26:37,720 --> 00:26:40,630
compliance to be something that becomes

00:26:39,310 --> 00:26:42,280
lightweight and sort of incremental

00:26:40,630 --> 00:26:43,030
changes as things are found and not

00:26:42,280 --> 00:26:44,710
something in afternoon we this

00:26:43,030 --> 00:26:47,980
heavyweight you know single time process

00:26:44,710 --> 00:26:48,970
that takes months so we're not done in

00:26:47,980 --> 00:26:50,020
terms of what comes next we have a bunch

00:26:48,970 --> 00:26:51,190
of stuff we still have to handle well

00:26:50,020 --> 00:26:56,290
like I said we're probably through the

00:26:51,190 --> 00:26:57,580
FedRAMP process but even after oh now

00:26:56,290 --> 00:27:00,430
it's open to anyone if you want to use

00:26:57,580 --> 00:27:01,750
that link it wasn't a minute ago we have

00:27:00,430 --> 00:27:02,950
a bunch stuff we still need to do and so

00:27:01,750 --> 00:27:03,850
some of those they're for compliance but

00:27:02,950 --> 00:27:05,740
those are the things we want to do for

00:27:03,850 --> 00:27:07,990
security that we're looking down so

00:27:05,740 --> 00:27:09,310
there's things there where we have to be

00:27:07,990 --> 00:27:11,230
really explicit about the boundary like

00:27:09,310 --> 00:27:12,460
which things have gotten this scrutiny

00:27:11,230 --> 00:27:13,060
which things haven't if you bring your

00:27:12,460 --> 00:27:15,160
own buildpack

00:27:13,060 --> 00:27:16,420
we can't vouch for it and that changes

00:27:15,160 --> 00:27:18,220
you know what you what you're getting

00:27:16,420 --> 00:27:19,540
you know your compliance around but if

00:27:18,220 --> 00:27:20,920
you're using a supportive bill pack it's

00:27:19,540 --> 00:27:22,570
compliant up to this level

00:27:20,920 --> 00:27:24,790
same thing will move to the diego back

00:27:22,570 --> 00:27:26,530
end if you're using you know kind of

00:27:24,790 --> 00:27:28,030
blessed from images to build your your

00:27:26,530 --> 00:27:29,500
app we can make some assertions about

00:27:28,030 --> 00:27:31,180
that and include compliance masonry

00:27:29,500 --> 00:27:32,920
documentation with it but if you're

00:27:31,180 --> 00:27:34,060
using your own from the spoke one then

00:27:32,920 --> 00:27:35,530
maybe you're on your own so we have to

00:27:34,060 --> 00:27:37,390
kind of work on that messaging to users

00:27:35,530 --> 00:27:38,350
the same thing in the services they're

00:27:37,390 --> 00:27:39,280
going to provision if they're going to

00:27:38,350 --> 00:27:40,330
provision services through our

00:27:39,280 --> 00:27:41,920
marketplace and some of them might not

00:27:40,330 --> 00:27:43,870
be provided by us but by other agencies

00:27:41,920 --> 00:27:45,910
it has to be very clear does this

00:27:43,870 --> 00:27:47,380
service have atl what is your

00:27:45,910 --> 00:27:48,250
responsibility if you're gonna try and

00:27:47,380 --> 00:27:49,570
get authority to operate

00:27:48,250 --> 00:27:52,270
what is your responsible using that

00:27:49,570 --> 00:27:54,670
service the other thing is we're not yet

00:27:52,270 --> 00:27:55,930
doing active container security so once

00:27:54,670 --> 00:27:57,070
the containers are deployed we're not

00:27:55,930 --> 00:27:58,060
really looking at the content very

00:27:57,070 --> 00:27:58,990
heavily we're using trip wire on the

00:27:58,060 --> 00:28:00,400
host side but we're not doing anything

00:27:58,990 --> 00:28:01,750
that containers themselves so we're

00:28:00,400 --> 00:28:05,350
investigating things like Claire and app

00:28:01,750 --> 00:28:06,550
dog that will make it easier for us to

00:28:05,350 --> 00:28:08,080
understand what's going on there and

00:28:06,550 --> 00:28:10,410
again that's a service back to people

00:28:08,080 --> 00:28:13,030
who are relying on us for their code and

00:28:10,410 --> 00:28:14,710
then finally we describe that really

00:28:13,030 --> 00:28:16,420
cool jump box thing we're doing a

00:28:14,710 --> 00:28:18,010
concourse hijack and the containers to

00:28:16,420 --> 00:28:20,800
to do the ephemeral jump box with your

00:28:18,010 --> 00:28:21,850
boss lots of fun but I'm fortune we're

00:28:20,800 --> 00:28:24,730
not honoring them as much as we need to

00:28:21,850 --> 00:28:26,800
so we're he working on that and that's

00:28:24,730 --> 00:28:28,480
kind of it I'm going to go to questions

00:28:26,800 --> 00:28:30,550
now but if anybody's interested these

00:28:28,480 --> 00:28:32,860
are things places you can talk to us or

00:28:30,550 --> 00:28:34,510
find out about that chat duct HFF that's

00:28:32,860 --> 00:28:35,740
actually a public slack channel you can

00:28:34,510 --> 00:28:36,880
get in and there's us and a bunch of

00:28:35,740 --> 00:28:37,720
other people in federal compliance and

00:28:36,880 --> 00:28:39,400
government space who deal with these

00:28:37,720 --> 00:28:42,490
kind of things hanging out to get place

00:28:39,400 --> 00:28:45,250
to ask questions and talk shop so I'm

00:28:42,490 --> 00:28:49,260
going to go to questions we got about

00:28:45,250 --> 00:28:51,660
three minutes so let's see

00:28:49,260 --> 00:28:53,520
do you do binary security scans and your

00:28:51,660 --> 00:28:55,620
standard retinue of tests static

00:28:53,520 --> 00:28:58,049
analysis we are doing both static and

00:28:55,620 --> 00:28:59,370
dynamic but it's a very nascent pipeline

00:28:58,049 --> 00:29:00,360
we're sort of we're recruiting a bunch

00:28:59,370 --> 00:29:01,590
of different tools and comparing them

00:29:00,360 --> 00:29:03,000
mixing the results to find out best to

00:29:01,590 --> 00:29:04,770
breed and figure out you know KB how do

00:29:03,000 --> 00:29:05,760
we not alert multiple times on the same

00:29:04,770 --> 00:29:07,710
thing across different tools and things

00:29:05,760 --> 00:29:10,440
like that so but yes we're doing both

00:29:07,710 --> 00:29:12,750
static and dynamic and then we use tools

00:29:10,440 --> 00:29:16,590
like cold climate and you know a

00:29:12,750 --> 00:29:19,380
gymnasium and other public tools T

00:29:16,590 --> 00:29:20,549
scanner code because you know again most

00:29:19,380 --> 00:29:23,850
of the things that we do it's and github

00:29:20,549 --> 00:29:25,410
we can just use all of that to do it

00:29:23,850 --> 00:29:28,140
scans right

00:29:25,410 --> 00:29:30,780
are we running in I guess that means

00:29:28,140 --> 00:29:32,130
governor of AWS our general ironically

00:29:30,780 --> 00:29:33,419
all of our automation saving our bacon

00:29:32,130 --> 00:29:34,919
now because it's turning out for a

00:29:33,419 --> 00:29:36,960
variety of reasons we actually need to

00:29:34,919 --> 00:29:39,450
move from Amazon east-west to Amazon gov

00:29:36,960 --> 00:29:40,830
cloud and in doing that we're basically

00:29:39,450 --> 00:29:42,210
doing the last mile of our automation

00:29:40,830 --> 00:29:44,850
which was actually provisioning AWS

00:29:42,210 --> 00:29:46,679
environment itself and that is true to

00:29:44,850 --> 00:29:48,030
the whole multi-cloud promise it's

00:29:46,679 --> 00:29:49,260
making it relatively easy for us to

00:29:48,030 --> 00:29:50,970
figure out okay we're gonna read a play

00:29:49,260 --> 00:29:52,080
on gov cloud and just keep rolling and

00:29:50,970 --> 00:29:53,100
for anyone else in the compliance

00:29:52,080 --> 00:29:54,950
process that would have a deal-killer

00:29:53,100 --> 00:29:57,480
it's like oh crap we got to redeploy

00:29:54,950 --> 00:29:58,740
start over your and and the federal

00:29:57,480 --> 00:29:59,549
people live in you're kicked out but

00:29:58,740 --> 00:30:00,780
they see that we can do all this

00:29:59,549 --> 00:30:01,919
automation like okay that can you do it

00:30:00,780 --> 00:30:03,419
in a week and a half and we're like well

00:30:01,919 --> 00:30:06,600
let's see and so now we're often doing

00:30:03,419 --> 00:30:08,370
it teams work on that right now

00:30:06,600 --> 00:30:09,870
why and how did you decide to use

00:30:08,370 --> 00:30:11,070
terraform to set up your cloud foundry

00:30:09,870 --> 00:30:11,880
clusters how are your experiences with

00:30:11,070 --> 00:30:14,280
it

00:30:11,880 --> 00:30:16,799
we started automate with cloud formation

00:30:14,280 --> 00:30:18,780
on AWS and it was just kind of very

00:30:16,799 --> 00:30:20,130
verbose and there was sort of you know

00:30:18,780 --> 00:30:21,510
it would help the initial setup of the

00:30:20,130 --> 00:30:22,919
account and setting up some V pcs but

00:30:21,510 --> 00:30:24,630
when it came time to like do things like

00:30:22,919 --> 00:30:25,290
set up a database that we needed and

00:30:24,630 --> 00:30:26,970
things like that I was kind of a

00:30:25,290 --> 00:30:27,960
separate step and it was disjointed we

00:30:26,970 --> 00:30:29,309
found that using terraform kind of

00:30:27,960 --> 00:30:30,900
unifying to one step made a lot clearer

00:30:29,309 --> 00:30:32,040
and simpler and also gave us a lot more

00:30:30,900 --> 00:30:34,140
confidence that we can take that across

00:30:32,040 --> 00:30:35,250
to multiple clouds we were a little

00:30:34,140 --> 00:30:36,570
skeptical we didn't wanna bring in

00:30:35,250 --> 00:30:37,679
terraform in kind of like last-minute

00:30:36,570 --> 00:30:38,940
right now because we didn't want to ring

00:30:37,679 --> 00:30:40,830
another tool into the mix but it turned

00:30:38,940 --> 00:30:42,059
out that the team has been playing with

00:30:40,830 --> 00:30:44,820
that and actually really enjoy it so

00:30:42,059 --> 00:30:48,210
that's helped I mean the thing about

00:30:44,820 --> 00:30:50,100
terraform 2 is that it is a bit

00:30:48,210 --> 00:30:52,200
challenging to each you know keep state

00:30:50,100 --> 00:30:54,960
with terraform but because we're using

00:30:52,200 --> 00:31:00,150
concourse to employ the tranform

00:30:54,960 --> 00:31:01,980
you know did manifests we we are you

00:31:00,150 --> 00:31:03,470
know it's only concourse the one that

00:31:01,980 --> 00:31:06,269
it's running all the

00:31:03,470 --> 00:31:10,980
doing all the telephone rides so we can

00:31:06,269 --> 00:31:12,090
store we sort stating this three so this

00:31:10,980 --> 00:31:13,320
is a big question how are you going to

00:31:12,090 --> 00:31:14,519
help the federal government the cultural

00:31:13,320 --> 00:31:15,899
shift maybe you should seize I've tried

00:31:14,519 --> 00:31:22,200
this and gotten crushed how is this

00:31:15,899 --> 00:31:23,639
different oh and next this is tough we

00:31:22,200 --> 00:31:24,630
have a lot of agencies that are stuck in

00:31:23,639 --> 00:31:25,799
the past and think they need data

00:31:24,630 --> 00:31:27,539
centers and they think they need to scan

00:31:25,799 --> 00:31:29,429
every machine you know themselves and so

00:31:27,539 --> 00:31:30,720
on we are working with the agencies that

00:31:29,429 --> 00:31:33,240
are most flexible most forward-thinking

00:31:30,720 --> 00:31:34,889
first and working with them is showing

00:31:33,240 --> 00:31:36,389
success some of them are choosing to

00:31:34,889 --> 00:31:37,590
work with us on their own because H and

00:31:36,389 --> 00:31:39,120
F is working them and deploying things

00:31:37,590 --> 00:31:40,679
for them so as we've worked these

00:31:39,120 --> 00:31:42,210
agencies and deployed things like the

00:31:40,679 --> 00:31:43,830
college scorecard or every kid in a park

00:31:42,210 --> 00:31:44,940
or not alone like all these different

00:31:43,830 --> 00:31:46,980
sites we've done for different agencies

00:31:44,940 --> 00:31:48,000
they have seen like how the hell are you

00:31:46,980 --> 00:31:48,929
doing this and how are you getting a

00:31:48,000 --> 00:31:50,190
chair so quickly you said well we're

00:31:48,929 --> 00:31:51,149
using Cloud Foundry internally and we're

00:31:50,190 --> 00:31:53,100
you know it's accelerating all these

00:31:51,149 --> 00:31:54,720
things so they're interested in how

00:31:53,100 --> 00:31:55,950
we're doing it so we're finding agencies

00:31:54,720 --> 00:31:58,049
that are most flexible and work with

00:31:55,950 --> 00:32:00,330
them but same time we have consultancies

00:31:58,049 --> 00:32:01,590
going on h and f as it's not just about

00:32:00,330 --> 00:32:02,970
this hnf does all kinds of things

00:32:01,590 --> 00:32:04,769
including organizational transformation

00:32:02,970 --> 00:32:05,580
consulting so we're doing that with some

00:32:04,769 --> 00:32:07,200
of these agencies to help them

00:32:05,580 --> 00:32:09,389
understand how to be more agile having

00:32:07,200 --> 00:32:10,590
more product oriented and change the way

00:32:09,389 --> 00:32:12,509
they approach these things so having a

00:32:10,590 --> 00:32:14,669
paths available becomes a tool for them

00:32:12,509 --> 00:32:17,429
to say okay well imagine Ops was much

00:32:14,669 --> 00:32:18,779
much easier now how easily could you

00:32:17,429 --> 00:32:20,879
shift your culture and so some of the

00:32:18,779 --> 00:32:23,039
very interesting that have you tackled

00:32:20,879 --> 00:32:25,049
secret injection in apps for example to

00:32:23,039 --> 00:32:26,940
do for example credentials get set as a

00:32:25,049 --> 00:32:28,200
CF app and VARs by conquerors pipelines

00:32:26,940 --> 00:32:29,700
we're just were kind of yesterday I know

00:32:28,200 --> 00:32:33,720
what the answer was the team was

00:32:29,700 --> 00:32:35,549
circular so I think that we use user

00:32:33,720 --> 00:32:41,370
provided services for some stuff on in

00:32:35,549 --> 00:32:44,000
virus for some other I think that you

00:32:41,370 --> 00:32:46,649
know each application each solution

00:32:44,000 --> 00:32:48,299
requires maybe some differences we

00:32:46,649 --> 00:32:51,299
strongly suggest people to use user

00:32:48,299 --> 00:32:53,129
provided services for secrets and I

00:32:51,299 --> 00:32:55,740
think that's you know generally good

00:32:53,129 --> 00:32:58,320
practice environment Muriel's for

00:32:55,740 --> 00:33:01,919
secrets have some problems especially if

00:32:58,320 --> 00:33:05,070
you do blue green deploys and that kind

00:33:01,919 --> 00:33:07,649
of stuff so you know I think that it's

00:33:05,070 --> 00:33:10,529
very used used to providing services if

00:33:07,649 --> 00:33:11,730
you get okay how much time we save you

00:33:10,529 --> 00:33:13,830
through reduce compliance documentation

00:33:11,730 --> 00:33:15,629
it depends on the level of the app so

00:33:13,830 --> 00:33:16,500
the app might have it's an open data

00:33:15,629 --> 00:33:17,460
application it's got

00:33:16,500 --> 00:33:19,200
data that should be available to the

00:33:17,460 --> 00:33:20,550
public it's not sensitive if the site is

00:33:19,200 --> 00:33:22,710
broken it's no big deal it's not a

00:33:20,550 --> 00:33:24,360
continuity issue if it's out there it's

00:33:22,710 --> 00:33:25,440
not embarrassed it's just it needs to be

00:33:24,360 --> 00:33:26,580
out there and it's like there's

00:33:25,440 --> 00:33:27,900
basically if you've broken the server

00:33:26,580 --> 00:33:29,490
you'd see the data that is driving API

00:33:27,900 --> 00:33:31,050
but you can get all through the API in

00:33:29,490 --> 00:33:32,520
case those things are very simple we can

00:33:31,050 --> 00:33:34,590
do them just a couple days

00:33:32,520 --> 00:33:36,660
we need to wet it in like 90 minutes

00:33:34,590 --> 00:33:37,920
before 90 minutes yeah but again it's

00:33:36,660 --> 00:33:39,810
because our director of M structure who

00:33:37,920 --> 00:33:41,010
is the authorizing official for this has

00:33:39,810 --> 00:33:42,660
seen all this in the past he knows

00:33:41,010 --> 00:33:43,980
exactly what we're doing until he can do

00:33:42,660 --> 00:33:45,630
the risk acceptance cuz know the deltas

00:33:43,980 --> 00:33:47,130
very small when we go to other agencies

00:33:45,630 --> 00:33:48,120
which is not stuff we're building

00:33:47,130 --> 00:33:49,890
ourselves with other agencies are

00:33:48,120 --> 00:33:51,270
building it's much we're them accepting

00:33:49,890 --> 00:33:52,350
the risk and them it's understanding it

00:33:51,270 --> 00:33:53,370
and so that's why FedRAMP is such an

00:33:52,350 --> 00:33:56,010
important thing when we get there

00:33:53,370 --> 00:33:56,970
that'll help them but the goal is that

00:33:56,010 --> 00:33:58,620
you know even for really heavy

00:33:56,970 --> 00:34:00,270
applications we want the time that the

00:33:58,620 --> 00:34:01,680
team spends writing documentation to be

00:34:00,270 --> 00:34:03,240
negligible we want it to be something

00:34:01,680 --> 00:34:04,830
they can take in a two Pizza team and

00:34:03,240 --> 00:34:06,510
not have a big deal where's right now if

00:34:04,830 --> 00:34:08,790
you get three people from an ISO office

00:34:06,510 --> 00:34:11,159
to write this documentation for you and

00:34:08,790 --> 00:34:13,230
the last one will take before we quit

00:34:11,159 --> 00:34:14,399
sorry we're over is on the concept of a

00:34:13,230 --> 00:34:15,419
blessed build pack does that create a

00:34:14,399 --> 00:34:17,610
bottleneck how do you keep up with

00:34:15,419 --> 00:34:18,720
changes so first of all we're starting

00:34:17,610 --> 00:34:20,310
with the community build packs because

00:34:18,720 --> 00:34:23,129
the clap founder foundation is doing a

00:34:20,310 --> 00:34:25,560
really really good job on updating build

00:34:23,129 --> 00:34:27,389
packs and updating stem cells we did see

00:34:25,560 --> 00:34:29,790
recently there was a CBE that was like

00:34:27,389 --> 00:34:31,169
wow we're waiting for that new build had

00:34:29,790 --> 00:34:32,730
come through is taking a while should we

00:34:31,169 --> 00:34:34,020
roll our own what should we do and it

00:34:32,730 --> 00:34:35,610
did come through and we're like we were

00:34:34,020 --> 00:34:37,530
just about to complain and say okay

00:34:35,610 --> 00:34:39,450
what's the actual expectation here what

00:34:37,530 --> 00:34:40,830
should we do we don't really want to run

00:34:39,450 --> 00:34:43,050
our own and do separate you know for kit

00:34:40,830 --> 00:34:44,970
from the community but then the Cloud

00:34:43,050 --> 00:34:45,810
Foundry foundation everybody seems like

00:34:44,970 --> 00:34:46,889
they're building they'll break out the

00:34:45,810 --> 00:34:48,270
build pack separately so the build pack

00:34:46,889 --> 00:34:49,830
is gonna be shipped independent the

00:34:48,270 --> 00:34:50,790
platform releases which means the build

00:34:49,830 --> 00:34:52,679
packs that come through faster because I

00:34:50,790 --> 00:34:53,700
was held up on the platform release so

00:34:52,679 --> 00:34:55,200
that's already being addressed so we're

00:34:53,700 --> 00:34:56,129
this is part of the the magic is that

00:34:55,200 --> 00:34:57,090
we're in an ecosystem where you know

00:34:56,129 --> 00:34:58,770
everybody else does the same same

00:34:57,090 --> 00:35:01,320
problems they all want those build packs

00:34:58,770 --> 00:35:03,120
come through really quickly the blessed

00:35:01,320 --> 00:35:04,200
build pack again we're just re-check the

00:35:03,120 --> 00:35:05,310
ones that are part of parking we say we

00:35:04,200 --> 00:35:07,170
will support those and those the ones

00:35:05,310 --> 00:35:08,430
will have documentation for for the ones

00:35:07,170 --> 00:35:09,900
that if you bring your own bill pack

00:35:08,430 --> 00:35:11,100
we're basically saying that's your home

00:35:09,900 --> 00:35:13,500
bottleneck you're introducing as sort of

00:35:11,100 --> 00:35:15,300
a you know there's a tenant you're

00:35:13,500 --> 00:35:16,200
bringing your own complexity that you're

00:35:15,300 --> 00:35:18,240
gonna have to deal with you're you're

00:35:16,200 --> 00:35:20,460
you're you're bypassing some of the

00:35:18,240 --> 00:35:22,020
benefit the platform that's it thank you

00:35:20,460 --> 00:35:25,100
very very much thank you I really

00:35:22,020 --> 00:35:25,100

YouTube URL: https://www.youtube.com/watch?v=UwOG3BrdODo


