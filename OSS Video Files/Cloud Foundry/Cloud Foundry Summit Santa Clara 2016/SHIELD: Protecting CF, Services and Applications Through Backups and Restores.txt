Title: SHIELD: Protecting CF, Services and Applications Through Backups and Restores
Publication date: 2016-05-29
Playlist: Cloud Foundry Summit Santa Clara 2016
Description: 
	SHIELD is a modularized backup and restore solution which utilizes a plugin based architecture to backup and restore BOSH deployments. 

In this talk, we will mainly focus on how to use SHIELD to assist with our Backup and Restore plan for Cloud Foundry applications and Services which are deployed by BOSH. More specifically, we will show you how to use SHIELD to backup and restore core Cloud Foundry internal services as well as non-core CF services such as Redis, PostgreSQL, MySQL, RabbitMQ, etc.. and how applications can be backed up and restored by adding plugins without having to modify SHIELD core. 

We will also show you the framework of SHIELD which itself is distributed as a BOSH release. It consists of a core daemon, backup target plugins, storage plugins, a CLI and a web UI. The core daemon manages meta data, scheduling, tasks and jobs, it also monitors and verifies the status of backup jobs and archives. Backup target plugins specify what is to be backed up and how it is done. Store plugins specify where (local filesystem, or blobstores such as S3, Swift, Atmos, etc.) backups can be stored and how to put them there and retrieve them back. The CLI is used for controlling all aspects of the system, such as backing up, restoring, setting retention policies, scheduling, job & task management, etc.

Xiujiao Gao
Xiujiao Gao is currently pursuing her Ph.D. in Computer Science and Engineering at the State University of New York at Buffalo (UB). Her research projects at UB including Virtual Network (VN) Mapping, Virtual Network Function Placement, Multicast Services VN Mapping and Mapping Reliability in Cloud Computing. She is currently working at Stark & Wayne as a Cloud Engineer helping to deliver tremendous value to customers (such as GE). She has been working on the RDPG & SHIELD projects, bosh deployments for various products and pipelines for automated deployment of various services at Stark & Wayne. Xiujiao has previously presented at both world wide academic and industry conferences.

Wayne E. Seguin
Wayne E. Seguin has over 19 years of professional software engineering, architecture, and business experience spanning several industries. He has founded companies, shipped code that thousands of developers have used on a daily basis, and spearheaded large operations efforts for mission critical platforms. Wayne is well known for building tools that make lives easier for other engineers. Lately, Wayne has focused on doing this in the PaaS space, bringing his characteristic “I can help” attitude along with him.
Captions: 
	00:00:00,000 --> 00:00:04,639
you ready to start yeah all right

00:00:07,340 --> 00:00:16,500
doesn't gel shun house whatta beings are

00:00:13,410 --> 00:00:19,890
showing washer star can wind G shoe

00:00:16,500 --> 00:00:22,830
dongs hi well yes you get Haitian go so

00:00:19,890 --> 00:00:23,490
what he said just now is his name is

00:00:22,830 --> 00:00:26,310
wind

00:00:23,490 --> 00:00:33,320
he's the City of Stockton win he is also

00:00:26,310 --> 00:00:39,149
our happy fruit Ptolemy Guru Guru tau

00:00:33,320 --> 00:00:42,210
star can win daung so the you my name is

00:00:39,149 --> 00:00:48,120
Gao Jojo I'm a cloud engineer alpha star

00:00:42,210 --> 00:00:50,370
can win but I ask you today we will be

00:00:48,120 --> 00:00:53,010
talking about shield a backup and

00:00:50,370 --> 00:00:54,090
restore solution for cloud foundry and

00:00:53,010 --> 00:00:55,379
its services

00:00:54,090 --> 00:00:58,530
well Phil you know what that actually

00:00:55,379 --> 00:01:01,440
means before we start to talk about

00:00:58,530 --> 00:01:08,250
shield please allow this happy fruit

00:01:01,440 --> 00:01:10,619
talk about dragonwing quickly star can

00:01:08,250 --> 00:01:13,290
Wayne is a consultancy that helps you be

00:01:10,619 --> 00:01:16,080
a super hero to your organization and

00:01:13,290 --> 00:01:17,640
clients by our customers by succeeding

00:01:16,080 --> 00:01:20,390
with your cloud foundry and path story

00:01:17,640 --> 00:01:22,250
we help with everything from the

00:01:20,390 --> 00:01:24,900
infrastructure level up through

00:01:22,250 --> 00:01:27,630
automating all of the operations of the

00:01:24,900 --> 00:01:29,640
pass itself through the 12 factor

00:01:27,630 --> 00:01:32,700
applications we can help you flush out

00:01:29,640 --> 00:01:35,100
that entire story we basically come in

00:01:32,700 --> 00:01:37,140
we fill in any gap integrate all the

00:01:35,100 --> 00:01:39,810
components integrate maybe you have some

00:01:37,140 --> 00:01:41,250
legacy big iron things or whatever we

00:01:39,810 --> 00:01:43,770
help you integrate those in your cloud

00:01:41,250 --> 00:01:46,200
foundry we apply automation and all of

00:01:43,770 --> 00:01:48,600
those things and then we also focus on

00:01:46,200 --> 00:01:51,000
teaching you how to maintain this thing

00:01:48,600 --> 00:01:53,340
moving forward yourself essentially we

00:01:51,000 --> 00:01:55,680
come in we partner with you and your

00:01:53,340 --> 00:01:57,799
team we work alongside you guys to carry

00:01:55,680 --> 00:02:00,390
you past the steep learning curve and

00:01:57,799 --> 00:02:03,210
greatly increase the speed of your

00:02:00,390 --> 00:02:05,060
adoption getting you started faster and

00:02:03,210 --> 00:02:08,520
sooner

00:02:05,060 --> 00:02:12,270
that's Sarkar wing

00:02:08,520 --> 00:02:14,430
so back to shield what exactly is the

00:02:12,270 --> 00:02:17,220
problem that we are trying to solve with

00:02:14,430 --> 00:02:19,770
shield let's first take a very brief

00:02:17,220 --> 00:02:22,170
look at the current state of backups

00:02:19,770 --> 00:02:27,480
restore x' for both Cloud Foundry itself

00:02:22,170 --> 00:02:30,090
as well as related services today there

00:02:27,480 --> 00:02:32,760
is no overall comprehensive backup and

00:02:30,090 --> 00:02:35,220
restore solution for Cloud Foundry and

00:02:32,760 --> 00:02:37,140
its services sure there's a lot of

00:02:35,220 --> 00:02:39,180
little projects here and there and tools

00:02:37,140 --> 00:02:41,190
to get you bits and pieces and some

00:02:39,180 --> 00:02:43,440
tribal knowledge which you have to like

00:02:41,190 --> 00:02:45,270
sacrifice some kind of animal to and in

00:02:43,440 --> 00:02:48,210
order to backup successfully or whatever

00:02:45,270 --> 00:02:51,780
but really not a good story PCF itself

00:02:48,210 --> 00:02:54,150
does have a very well-documented manual

00:02:51,780 --> 00:02:55,710
backup process with a diagram that makes

00:02:54,150 --> 00:02:59,370
your eyes bleed because of the number of

00:02:55,710 --> 00:03:00,570
components and steps the true story we

00:02:59,370 --> 00:03:04,620
had to rush one of ours to the hospital

00:03:00,570 --> 00:03:06,570
after so basically it's a it's there it

00:03:04,620 --> 00:03:09,540
exists and it is very well written

00:03:06,570 --> 00:03:10,620
there's also a tile that couldn't PCF

00:03:09,540 --> 00:03:12,240
has that can now allow you to like

00:03:10,620 --> 00:03:14,910
backup certain components and stuff like

00:03:12,240 --> 00:03:17,220
that but comprehensive overall systemic

00:03:14,910 --> 00:03:20,310
not really you're kind of out on your

00:03:17,220 --> 00:03:21,990
own as for services Oh wonderful

00:03:20,310 --> 00:03:24,600
services I love services I love playing

00:03:21,990 --> 00:03:27,240
with services service brokers ooh good

00:03:24,600 --> 00:03:29,820
times unfortunately if you are a service

00:03:27,240 --> 00:03:32,130
implementer or service operator it's

00:03:29,820 --> 00:03:34,290
kind of punted that's yours to figure

00:03:32,130 --> 00:03:36,690
out how to backup your service how to

00:03:34,290 --> 00:03:39,240
provide that a lot of people wrap custom

00:03:36,690 --> 00:03:41,340
api is they run Cloud Foundry apps that

00:03:39,240 --> 00:03:43,590
tie to their service is that all kinds

00:03:41,340 --> 00:03:46,260
of solutions exist to this today but

00:03:43,590 --> 00:03:50,400
there still is no real up until now ten

00:03:46,260 --> 00:03:52,620
ten ten great like story for this which

00:03:50,400 --> 00:03:54,930
does bring us to why you guys are all

00:03:52,620 --> 00:03:56,040
here listening other than the fact that

00:03:54,930 --> 00:03:59,310
it's the closest thing to the

00:03:56,040 --> 00:04:01,380
registration desk basically why did we

00:03:59,310 --> 00:04:03,150
start shield why did we go this way why

00:04:01,380 --> 00:04:08,130
did we keep on working on this product

00:04:03,150 --> 00:04:10,260
at all so we've been helping GE with

00:04:08,130 --> 00:04:13,470
this little project called predicts that

00:04:10,260 --> 00:04:15,330
IO and there are some amazing people

00:04:13,470 --> 00:04:17,190
doing amazing things and we couldn't be

00:04:15,330 --> 00:04:21,500
happier to be helping out with this

00:04:17,190 --> 00:04:23,240
project a lot of stuff was talked about

00:04:21,500 --> 00:04:25,580
investigating their disaster recovery

00:04:23,240 --> 00:04:27,260
scenarios right you're in production you

00:04:25,580 --> 00:04:29,660
better have a disaster recovery scenario

00:04:27,260 --> 00:04:32,900
or as dr. Nix said you call you got as a

00:04:29,660 --> 00:04:34,040
giant cache of things right so we were

00:04:32,900 --> 00:04:38,020
helping them with this on the pre

00:04:34,040 --> 00:04:40,040
exercise we needed to flush out what the

00:04:38,020 --> 00:04:41,900
disaster recovery backup/restore

00:04:40,040 --> 00:04:45,170
solutions were for not only a Cloud

00:04:41,900 --> 00:04:47,690
Foundry core itself right but we also

00:04:45,170 --> 00:04:50,390
needed to focus on what about the

00:04:47,690 --> 00:04:51,680
services too you know we don't we we've

00:04:50,390 --> 00:04:53,120
got to figure out the solutions to those

00:04:51,680 --> 00:04:54,980
is this just a we're going to document

00:04:53,120 --> 00:04:57,230
these on the internal wiki's and we go

00:04:54,980 --> 00:04:59,720
through these ritualistic incantations

00:04:57,230 --> 00:05:03,080
in order to summon the backup beast and

00:04:59,720 --> 00:05:05,510
whatever or do we have a sane way of

00:05:03,080 --> 00:05:07,760
moving forward with us well some very

00:05:05,510 --> 00:05:09,290
brilliant people that work at Stark and

00:05:07,760 --> 00:05:11,810
Wayne actually came up with these things

00:05:09,290 --> 00:05:13,910
and well with it with with an approach

00:05:11,810 --> 00:05:16,580
to this we already had a project that

00:05:13,910 --> 00:05:19,580
they were toying with on their own an

00:05:16,580 --> 00:05:21,740
open source that basically hadn't had a

00:05:19,580 --> 00:05:23,330
lot of effort because well frankly you

00:05:21,740 --> 00:05:26,090
know on your own time that's not a lot

00:05:23,330 --> 00:05:27,530
of time right so gee in order to help GE

00:05:26,090 --> 00:05:29,000
we figured out that this project would

00:05:27,530 --> 00:05:33,140
be a perfect fit for this effort

00:05:29,000 --> 00:05:35,720
so with GES help allowing us to work on

00:05:33,140 --> 00:05:38,360
this a lot we were able to carry this

00:05:35,720 --> 00:05:40,430
project across the finish line as of

00:05:38,360 --> 00:05:41,870
today this project which we're talking

00:05:40,430 --> 00:05:44,180
about today has been running in

00:05:41,870 --> 00:05:48,229
production at GE for over six months now

00:05:44,180 --> 00:05:52,460
so it's a really encouraging thing very

00:05:48,229 --> 00:05:56,540
very good open source story there thanks

00:05:52,460 --> 00:05:58,910
to GE of course shield as it stands is

00:05:56,540 --> 00:06:01,040
essentially a drop-in solution to

00:05:58,910 --> 00:06:02,660
anybody's bosh releases and you can tie

00:06:01,040 --> 00:06:06,200
in the service and service brokers all

00:06:02,660 --> 00:06:08,540
these things so this does address the

00:06:06,200 --> 00:06:10,610
services story essentially it allows you

00:06:08,540 --> 00:06:12,169
to focus as a service implementer

00:06:10,610 --> 00:06:13,850
remember that was on your either the

00:06:12,169 --> 00:06:16,820
implementer or operators of the services

00:06:13,850 --> 00:06:19,070
to figure out these things shield allows

00:06:16,820 --> 00:06:22,190
you as the service implement or operator

00:06:19,070 --> 00:06:24,880
to focus on either implementing your

00:06:22,190 --> 00:06:27,590
service or operating your service and

00:06:24,880 --> 00:06:29,660
shield basically focuses on your

00:06:27,590 --> 00:06:31,820
disaster recovery backup and restore

00:06:29,660 --> 00:06:34,280
stories as well as migration stories

00:06:31,820 --> 00:06:36,129
which you will get hear about a little

00:06:34,280 --> 00:06:39,009
bit later

00:06:36,129 --> 00:06:40,939
this addresses all of those things

00:06:39,009 --> 00:06:43,340
specifically what kind of services you

00:06:40,939 --> 00:06:46,150
might ask well today shield backs up and

00:06:43,340 --> 00:06:49,879
restore services such as PostgreSQL

00:06:46,150 --> 00:06:52,939
RabbitMQ Redis etc etc and several

00:06:49,879 --> 00:06:56,990
others I'm not gonna go into details on

00:06:52,939 --> 00:07:00,650
how I'll leave that for later but it

00:06:56,990 --> 00:07:03,979
could support any services we need for

00:07:00,650 --> 00:07:06,710
cloud core Cloud Foundry itself shield

00:07:03,979 --> 00:07:12,680
can also backup Cloud Foundry as well as

00:07:06,710 --> 00:07:15,349
Bosch essentially it allows you to

00:07:12,680 --> 00:07:16,909
backup any boss deployment caught

00:07:15,349 --> 00:07:20,120
foundries deployed via Bosch to backup

00:07:16,909 --> 00:07:22,280
oh hey I get it so essentially any Bosch

00:07:20,120 --> 00:07:23,960
deployed system that you want all you

00:07:22,280 --> 00:07:25,789
need to do is essentially write a

00:07:23,960 --> 00:07:27,680
plug-in to shield the backup whatever

00:07:25,789 --> 00:07:29,800
the thing is that you are backing up if

00:07:27,680 --> 00:07:32,990
the plug-in doesn't exist already

00:07:29,800 --> 00:07:35,270
you essentially deploy shield alongside

00:07:32,990 --> 00:07:37,430
your existing Bosch deployments using

00:07:35,270 --> 00:07:42,560
this mechanism within Bosh called

00:07:37,430 --> 00:07:44,360
co-located Bosch releases and now I'm

00:07:42,560 --> 00:07:47,479
gonna let XJ fill you in on the details

00:07:44,360 --> 00:07:51,940
of the project what wait I wasn't

00:07:47,479 --> 00:07:56,539
enjoying your presentation you turn ok

00:07:51,940 --> 00:07:59,629
so now I will talk through the framework

00:07:56,539 --> 00:08:03,710
architecture of shield and the features

00:07:59,629 --> 00:08:07,190
of gel the framework of shield is pretty

00:08:03,710 --> 00:08:08,199
simple as you can see here it consists

00:08:07,190 --> 00:08:11,870
four parts

00:08:08,199 --> 00:08:16,729
accordion target plug-in to direct

00:08:11,870 --> 00:08:18,409
plug-in and the user interfaces one

00:08:16,729 --> 00:08:22,310
question present

00:08:18,409 --> 00:08:24,710
often ask a bear clan is why are there

00:08:22,310 --> 00:08:27,349
post target plug-in and a storage

00:08:24,710 --> 00:08:31,099
plug-in so I will answer this question

00:08:27,349 --> 00:08:37,339
here by explaining how backup and

00:08:31,099 --> 00:08:40,219
restore works so when we backup data the

00:08:37,339 --> 00:08:42,919
target plug-in will retrieve data from

00:08:40,219 --> 00:08:48,390
your dead system then standard tool

00:08:42,919 --> 00:08:51,390
storage plug in the storage plug-in here

00:08:48,390 --> 00:08:54,089
we'll upload a single thetable up to

00:08:51,390 --> 00:08:56,940
your storage system whatever it is you

00:08:54,089 --> 00:09:00,930
configured day they will return key to

00:08:56,940 --> 00:09:05,459
you which you can use the later for your

00:09:00,930 --> 00:09:08,579
data retrieval sometimes accidents

00:09:05,459 --> 00:09:13,260
happen we lose data then we come to the

00:09:08,579 --> 00:09:15,660
point we have to restart data so when we

00:09:13,260 --> 00:09:18,360
restarted they'd have how it works the

00:09:15,660 --> 00:09:21,690
workflow is like this the storage

00:09:18,360 --> 00:09:24,839
plug-in will use the key to retrieve the

00:09:21,690 --> 00:09:27,750
data then send over to target plug-in

00:09:24,839 --> 00:09:30,630
the padded plug-in emerges loaded later

00:09:27,750 --> 00:09:33,980
into your system then you can route it

00:09:30,630 --> 00:09:37,560
back simple right

00:09:33,980 --> 00:09:40,560
the next piece is a coordinate cord

00:09:37,560 --> 00:09:44,220
Emily the central component of shield it

00:09:40,560 --> 00:09:48,269
has many different functionalities here

00:09:44,220 --> 00:09:52,260
I will cover cover several important

00:09:48,269 --> 00:09:54,560
ones first one core damage is

00:09:52,260 --> 00:09:58,079
responsible for metadata management

00:09:54,560 --> 00:10:01,550
basically it will track what target and

00:09:58,079 --> 00:10:04,709
Asador exist what jobs you can figure

00:10:01,550 --> 00:10:08,399
what is scheduled retention policy you

00:10:04,709 --> 00:10:11,610
defined what backup risk their jobs have

00:10:08,399 --> 00:10:15,480
taken place and what are their results

00:10:11,610 --> 00:10:20,490
also it will tell you what tasks are in

00:10:15,480 --> 00:10:23,430
flight the curtain also can configure

00:10:20,490 --> 00:10:26,190
your backup jobs like you want decide

00:10:23,430 --> 00:10:29,579
what you want to backup right where you

00:10:26,190 --> 00:10:33,690
want put it then you can configure job

00:10:29,579 --> 00:10:37,890
as you need a Pascal here basically just

00:10:33,690 --> 00:10:40,890
our job an instance of job being run so

00:10:37,890 --> 00:10:43,170
it can run back up restore jobs

00:10:40,890 --> 00:10:46,230
according the schedule we talked about

00:10:43,170 --> 00:10:51,350
earlier oh we can kick off back up

00:10:46,230 --> 00:10:55,380
restore jobs and demand quite nice huh

00:10:51,350 --> 00:10:58,380
so gradually shield car allow you to

00:10:55,380 --> 00:11:00,960
define the schedule like what time you

00:10:58,380 --> 00:11:04,080
want to backup maybe well

00:11:00,960 --> 00:11:07,950
that's what golden time Oh how often you

00:11:04,080 --> 00:11:10,350
want to back up daily hourly how long

00:11:07,950 --> 00:11:13,710
you want to keep your back hub you keep

00:11:10,350 --> 00:11:19,800
a 1 year or you keep a cup of months you

00:11:13,710 --> 00:11:23,690
can all configure that next one is the

00:11:19,800 --> 00:11:27,870
kirdamon also exposed the matrix

00:11:23,690 --> 00:11:31,770
statistics of your backup jobs it allows

00:11:27,870 --> 00:11:34,920
you search out your backup archives to

00:11:31,770 --> 00:11:37,529
see if your backup job are finished to

00:11:34,920 --> 00:11:41,459
successfully if your wrists are finished

00:11:37,529 --> 00:11:44,550
successively all those metrics also can

00:11:41,459 --> 00:11:47,459
be aggregated you can send those metrics

00:11:44,550 --> 00:11:54,720
over to any aggregation system you have

00:11:47,459 --> 00:11:57,779
the the last piece of the framework is

00:11:54,720 --> 00:12:05,190
the user interface we designed a web UI

00:11:57,779 --> 00:12:08,810
and the COI this as you can see this is

00:12:05,190 --> 00:12:12,300
a screenshot of shield web UI

00:12:08,810 --> 00:12:16,770
so using this web you are we are able to

00:12:12,300 --> 00:12:20,100
view an ID to your jobs will you and run

00:12:16,770 --> 00:12:22,800
your backup and restore on demand

00:12:20,100 --> 00:12:27,570
also you can edit or update your

00:12:22,800 --> 00:12:30,779
schedule your rotation policy on top of

00:12:27,570 --> 00:12:32,730
that it also show us from here you will

00:12:30,779 --> 00:12:35,330
see it will also show us what's the

00:12:32,730 --> 00:12:38,790
running Tasker we have and what's the

00:12:35,330 --> 00:12:41,190
complete test out its log so it will

00:12:38,790 --> 00:12:45,779
show you all those it's a simple but it

00:12:41,190 --> 00:12:49,220
has everything here shield also have a

00:12:45,779 --> 00:12:51,870
very well document extensive CLI

00:12:49,220 --> 00:12:56,880
probably you cannot see clearly here but

00:12:51,870 --> 00:12:59,750
you can see a basic idea here so that

00:12:56,880 --> 00:13:03,089
basically cover the framework of shield

00:12:59,750 --> 00:13:07,910
next I'm going to tell you a cup of

00:13:03,089 --> 00:13:07,910
storage about the features of shield

00:13:08,390 --> 00:13:14,339
shield is distributed as our boss

00:13:11,790 --> 00:13:17,069
release just like all other

00:13:14,339 --> 00:13:18,629
duction great enterprise software is

00:13:17,069 --> 00:13:25,499
right you know like for example maybe

00:13:18,629 --> 00:13:29,910
Cloud Foundry hmm yeah that what yeah

00:13:25,499 --> 00:13:32,069
I'm glad to make you guys laugh so in

00:13:29,910 --> 00:13:34,529
order to you to share the tool bag have

00:13:32,069 --> 00:13:36,809
data what we need to do here is very

00:13:34,529 --> 00:13:39,360
simple you just configure your shield

00:13:36,809 --> 00:13:41,309
agent and your deployment for example

00:13:39,360 --> 00:13:42,269
you be one big happy or close all right

00:13:41,309 --> 00:13:44,879
okay

00:13:42,269 --> 00:13:47,759
configure shield it and Anya CS

00:13:44,879 --> 00:13:50,100
deployment you want backup RabbitMQ

00:13:47,759 --> 00:13:51,990
readies all that try to convene your

00:13:50,100 --> 00:13:54,959
shield agent on your deployment it's

00:13:51,990 --> 00:13:57,149
pretty easy also where you want stored

00:13:54,959 --> 00:13:59,459
it I may want to sit on my local file

00:13:57,149 --> 00:14:01,470
system okay configure your star on your

00:13:59,459 --> 00:14:02,670
local file system you may want to start

00:14:01,470 --> 00:14:06,120
on your s3

00:14:02,670 --> 00:14:10,050
let's do about you our Swift all that

00:14:06,120 --> 00:14:18,139
like it can support like many different

00:14:10,050 --> 00:14:20,910
of target and the pseudo plugins yeah

00:14:18,139 --> 00:14:24,029
another thing I want to say is you dream

00:14:20,910 --> 00:14:28,499
shield it became very straightforward if

00:14:24,029 --> 00:14:31,970
you delete your entire deployment then

00:14:28,499 --> 00:14:36,179
you recover everything after redeploying

00:14:31,970 --> 00:14:40,199
that had asked what this enabled a

00:14:36,179 --> 00:14:44,879
functional disaster recovery plan neat

00:14:40,199 --> 00:14:48,929
huh oh I love this story

00:14:44,879 --> 00:14:53,120
yes shield can also backup every story

00:14:48,929 --> 00:14:55,910
about so I will share with you are

00:14:53,120 --> 00:14:59,160
smoking whole story here

00:14:55,910 --> 00:15:01,829
imagine you have shield running you have

00:14:59,160 --> 00:15:02,279
all your deployments being backed up by

00:15:01,829 --> 00:15:05,639
shield

00:15:02,279 --> 00:15:08,579
there's someone some bad guy burned

00:15:05,639 --> 00:15:12,290
Daniel dissing her like printed right

00:15:08,579 --> 00:15:14,730
down to the ground nothing left now

00:15:12,290 --> 00:15:19,399
Terrell piece of your hardware is

00:15:14,730 --> 00:15:19,399
working now what we are going to do

00:15:21,019 --> 00:15:25,280
probably the first level you want to

00:15:23,399 --> 00:15:29,330
still have a new hardware right

00:15:25,280 --> 00:15:32,720
don't what mm-maybe week has to be

00:15:29,330 --> 00:15:36,530
enough about damn we can use Bosch to

00:15:32,720 --> 00:15:40,190
depress you after that we can use

00:15:36,530 --> 00:15:43,040
shielder to restore our deployment gosh

00:15:40,190 --> 00:15:45,710
what happened now you just worked out

00:15:43,040 --> 00:15:50,450
your pasta face your shield the

00:15:45,710 --> 00:15:52,340
department is all friend now so we

00:15:50,450 --> 00:15:54,950
design shield that you know way to solve

00:15:52,340 --> 00:15:56,870
this problem why you want to recover

00:15:54,950 --> 00:15:59,300
your portion you don't need us to

00:15:56,870 --> 00:16:01,520
determine running yeah we just designed

00:15:59,300 --> 00:16:06,230
that way if we are interested check our

00:16:01,520 --> 00:16:11,090
repo later um so you can track you can

00:16:06,230 --> 00:16:13,730
just see BRB about use this excellent

00:16:11,090 --> 00:16:17,210
feature of shield to recover all your

00:16:13,730 --> 00:16:20,230
deployments include apart include bars

00:16:17,210 --> 00:16:20,230
shield itself

00:16:22,210 --> 00:16:30,470
sheera is not only for operation folks

00:16:27,280 --> 00:16:34,550
there is also a feature where you can

00:16:30,470 --> 00:16:37,070
enable like service application users to

00:16:34,550 --> 00:16:40,940
use shield to manage your database back

00:16:37,070 --> 00:16:44,600
- arista I will show you another example

00:16:40,940 --> 00:16:48,380
here assume that you have a application

00:16:44,600 --> 00:16:51,080
using Postgres to call tapings somehow

00:16:48,380 --> 00:16:54,830
over time you got loud love state have

00:16:51,080 --> 00:16:57,830
you need a larger database now how

00:16:54,830 --> 00:17:01,820
you're going to mega read your data your

00:16:57,830 --> 00:17:04,490
steel so it's simple you just used

00:17:01,820 --> 00:17:07,930
she'll the pipe have your database then

00:17:04,490 --> 00:17:12,949
you create a larger database instance

00:17:07,930 --> 00:17:16,850
also we have our DPG which is reliable

00:17:12,949 --> 00:17:20,000
Postgres to contain mysteries yeah okay

00:17:16,850 --> 00:17:23,300
come back to shield so tell us we have a

00:17:20,000 --> 00:17:25,520
larger Postgres database they use shield

00:17:23,300 --> 00:17:29,150
and restore your data i'm this new

00:17:25,520 --> 00:17:34,060
larger database guess what you get outed

00:17:29,150 --> 00:17:34,060
in the new database very easy right

00:17:35,750 --> 00:17:42,620
radium plugins with just a piece of cake

00:17:39,050 --> 00:17:44,540
yeah me one cheesecake strawberry ice

00:17:42,620 --> 00:17:47,420
cream you name it

00:17:44,540 --> 00:17:48,320
okay what why I don't plan is just a

00:17:47,420 --> 00:17:50,780
piece of cake

00:17:48,320 --> 00:17:53,680
because your starter where's the

00:17:50,780 --> 00:17:55,960
framework we already provide for you

00:17:53,680 --> 00:17:58,430
basically you don't need to worry about

00:17:55,960 --> 00:18:00,940
metadata management you don't need to

00:17:58,430 --> 00:18:04,010
worry about schedule monitoring

00:18:00,940 --> 00:18:07,190
graduation policy you can't just focus

00:18:04,010 --> 00:18:10,900
on your solution how you pack habit

00:18:07,190 --> 00:18:10,900
restart y'all did huh

00:18:12,010 --> 00:18:18,740
imagine this you don't want someone who

00:18:15,320 --> 00:18:21,020
has access to your shielder api then

00:18:18,740 --> 00:18:23,060
just relax s all your back happen

00:18:21,020 --> 00:18:24,020
restore information right that will be

00:18:23,060 --> 00:18:27,170
terrible

00:18:24,020 --> 00:18:31,010
so we design a shield in a way we have

00:18:27,170 --> 00:18:34,490
authentication it it's implemented using

00:18:31,010 --> 00:18:38,000
oauth2 and it can be done with a basic

00:18:34,490 --> 00:18:40,040
HTTP authentication support kit give her

00:18:38,000 --> 00:18:45,080
about syndication oh you can do it

00:18:40,040 --> 00:18:46,760
through CF you a so that's all the cool

00:18:45,080 --> 00:18:50,120
features I want to share with you guys

00:18:46,760 --> 00:18:53,060
now let happy fruits share with you the

00:18:50,120 --> 00:18:56,180
future of the shield so let me take you

00:18:53,060 --> 00:18:58,490
on a very brief trippy explanation of

00:18:56,180 --> 00:19:02,750
what we see or hallucinate as the future

00:18:58,490 --> 00:19:04,970
of shield and sort of priority order as

00:19:02,750 --> 00:19:09,730
we see it however that obviously could

00:19:04,970 --> 00:19:12,560
be influenced by your voices all right

00:19:09,730 --> 00:19:16,130
primarily the next one on deck is

00:19:12,560 --> 00:19:18,500
encryption and decryption encryption and

00:19:16,130 --> 00:19:20,270
decryption at rest okay we want this to

00:19:18,500 --> 00:19:23,720
be fully supported out of the box by

00:19:20,270 --> 00:19:25,910
default this is going to be supported at

00:19:23,720 --> 00:19:27,590
the plug-in level so basically if you

00:19:25,910 --> 00:19:29,060
right into your plug-in here's how I get

00:19:27,590 --> 00:19:31,190
the data for my servers and here's how I

00:19:29,060 --> 00:19:32,660
restore it you automatically get the

00:19:31,190 --> 00:19:33,230
encryption and you didn't have to worry

00:19:32,660 --> 00:19:36,650
about it

00:19:33,230 --> 00:19:38,570
that's pretty sweet crypto for free yeah

00:19:36,650 --> 00:19:42,670
like that always happens but in shield

00:19:38,570 --> 00:19:42,670
it does it's pretty cool well it will

00:19:43,300 --> 00:19:49,700
all right next up so we're all familiar

00:19:47,750 --> 00:19:51,680
the concept of incremental backups you

00:19:49,700 --> 00:19:52,490
take one massive back up that takes got

00:19:51,680 --> 00:19:54,230
off of forever

00:19:52,490 --> 00:19:56,060
and then you just kind of take backups

00:19:54,230 --> 00:19:58,580
at regular small intervals to record the

00:19:56,060 --> 00:19:59,710
changes over time until you take your

00:19:58,580 --> 00:20:01,730
next massive one

00:19:59,710 --> 00:20:03,320
hopefully not daily and they don't take

00:20:01,730 --> 00:20:06,740
more than 24 hours to run but hey that's

00:20:03,320 --> 00:20:08,780
another story so basically why we do we

00:20:06,740 --> 00:20:11,750
want to target this as a supported

00:20:08,780 --> 00:20:14,150
feature for the plugins well to raisins

00:20:11,750 --> 00:20:16,310
right this is about minimizing the

00:20:14,150 --> 00:20:17,420
storage requirements making it more a

00:20:16,310 --> 00:20:19,010
little more streamlined as well as

00:20:17,420 --> 00:20:21,020
reducing the amount of wall clock the

00:20:19,010 --> 00:20:23,630
time and CPU and resources that are

00:20:21,020 --> 00:20:29,030
attributed to the process of keeping

00:20:23,630 --> 00:20:30,830
backups through time next up we want to

00:20:29,030 --> 00:20:32,690
take what we have today for monitoring

00:20:30,830 --> 00:20:34,550
which is very simple and basic and we

00:20:32,690 --> 00:20:38,660
want to extend this to make it easier

00:20:34,550 --> 00:20:41,870
for operations folks to get more

00:20:38,660 --> 00:20:44,360
introspection into shield operations

00:20:41,870 --> 00:20:46,880
itself such as wouldn't it be great if

00:20:44,360 --> 00:20:48,710
not just knowing when job started when

00:20:46,880 --> 00:20:51,830
they complete did they succeed did they

00:20:48,710 --> 00:20:54,080
fail well what was the average run time

00:20:51,830 --> 00:20:55,850
of jobs for this particular plugin or

00:20:54,080 --> 00:20:57,680
this particular system or this

00:20:55,850 --> 00:21:01,820
particular thing right average run times

00:20:57,680 --> 00:21:03,800
of execution average sizes of the

00:21:01,820 --> 00:21:05,330
backups of all these things through time

00:21:03,800 --> 00:21:08,900
like it helps you to kind of identify

00:21:05,330 --> 00:21:11,720
hey that guy storing large binaries in

00:21:08,900 --> 00:21:13,190
his database what's going on guy or

00:21:11,720 --> 00:21:15,500
whatever else you're actually doing

00:21:13,190 --> 00:21:17,060
right so we want to make it take the

00:21:15,500 --> 00:21:19,880
metrics to the next level and make it

00:21:17,060 --> 00:21:22,010
even more useful for keeping track of

00:21:19,880 --> 00:21:24,800
what is going on and allowing you to get

00:21:22,010 --> 00:21:27,380
to root cause analysis of why this fill

00:21:24,800 --> 00:21:30,590
up much faster or preferably even way

00:21:27,380 --> 00:21:32,270
ahead of time right so obviously there's

00:21:30,590 --> 00:21:35,480
more to that story than that that's a

00:21:32,270 --> 00:21:39,500
really brief synopsis of that another

00:21:35,480 --> 00:21:43,250
thing there is one recurring theme that

00:21:39,500 --> 00:21:45,710
keeps recurring don't worry he's young

00:21:43,250 --> 00:21:48,610
his native language is not English

00:21:45,710 --> 00:21:48,610
fascist

00:21:48,630 --> 00:21:54,400
try this again there is one recurring

00:21:51,610 --> 00:21:56,980
theme while we help folks with their

00:21:54,400 --> 00:22:00,340
production environments and that is

00:21:56,980 --> 00:22:01,600
handling of sensitive storage such

00:22:00,340 --> 00:22:04,210
storage of sensitive things like

00:22:01,600 --> 00:22:06,820
credentials right encryption decryption

00:22:04,210 --> 00:22:09,210
keys passwords all of these things this

00:22:06,820 --> 00:22:10,860
is a very high priority item within

00:22:09,210 --> 00:22:13,029
organizations and it's usually

00:22:10,860 --> 00:22:15,070
unfortunately should be ahead of time

00:22:13,029 --> 00:22:16,779
maybe but usually it's a whoa we're

00:22:15,070 --> 00:22:19,510
running in production and oh now we got

00:22:16,779 --> 00:22:22,179
to do that but still it's a huge thing

00:22:19,510 --> 00:22:24,909
to address well we want to make it easy

00:22:22,179 --> 00:22:26,980
for shield to enable that story for

00:22:24,909 --> 00:22:28,600
everybody in a straightforward manner

00:22:26,980 --> 00:22:30,279
with so that they don't have to bake up

00:22:28,600 --> 00:22:31,720
something half-baked and you know we

00:22:30,279 --> 00:22:32,830
want to make a fully baked solution so

00:22:31,720 --> 00:22:37,000
they can have their cake and eat it too

00:22:32,830 --> 00:22:39,940
right okay so basically what we're going

00:22:37,000 --> 00:22:42,669
to do is we're going to take and add

00:22:39,940 --> 00:22:45,309
integration points in the shield where

00:22:42,669 --> 00:22:46,510
all the right points of encryption keys

00:22:45,309 --> 00:22:48,309
and credentials and all these things

00:22:46,510 --> 00:22:51,299
we're going to allow them to be restored

00:22:48,309 --> 00:22:54,850
and retrieved in systems such as vault

00:22:51,299 --> 00:22:56,500
so that's the credentials handling so I

00:22:54,850 --> 00:22:59,559
mean we have other ideas for the future

00:22:56,500 --> 00:23:01,240
we'd love to hear even more ideas okay

00:22:59,559 --> 00:23:03,460
so what I would highly encourage

00:23:01,240 --> 00:23:07,390
everyone to do is get yourselves

00:23:03,460 --> 00:23:09,640
involved right it's a a young project

00:23:07,390 --> 00:23:11,289
but it is a production project we

00:23:09,640 --> 00:23:13,510
encourage everybody to basically help

00:23:11,289 --> 00:23:15,909
shape its future like how you're gonna

00:23:13,510 --> 00:23:17,200
do that right well it's our open source

00:23:15,909 --> 00:23:18,940
project how do you do that with open

00:23:17,200 --> 00:23:20,590
source projects you deploy it you play

00:23:18,940 --> 00:23:24,850
with it you tweak it you read the code

00:23:20,590 --> 00:23:26,860
you ask questions right you send the

00:23:24,850 --> 00:23:30,820
feedback Pro requests you're right our

00:23:26,860 --> 00:23:32,919
plugin whoo I didn't think of that you

00:23:30,820 --> 00:23:34,539
write plug-ins hey I've got the most

00:23:32,919 --> 00:23:36,669
awesome database in the world here's a

00:23:34,539 --> 00:23:38,140
plugin for shield to allow it to be

00:23:36,669 --> 00:23:41,649
backed up and restored in the context of

00:23:38,140 --> 00:23:44,049
Cloud Foundry we all win great so yeah

00:23:41,649 --> 00:23:45,760
so basically you can also so that's all

00:23:44,049 --> 00:23:47,260
on the open source front and also you

00:23:45,760 --> 00:23:49,179
know you come to us at Stark and Wayne

00:23:47,260 --> 00:23:51,220
and help you succeed in incorporating

00:23:49,179 --> 00:23:53,590
shield into your own infrastructures

00:23:51,220 --> 00:23:55,750
help us to define your disaster recovery

00:23:53,590 --> 00:23:58,419
story and train your people on how to

00:23:55,750 --> 00:24:00,130
actually use it should disaster befall

00:23:58,419 --> 00:24:02,559
let's hope not but it

00:24:00,130 --> 00:24:05,350
so basically if you do decide to I want

00:24:02,559 --> 00:24:07,740
us to let us help right you can email us

00:24:05,350 --> 00:24:09,910
there be a hero at Stark or Wayne or

00:24:07,740 --> 00:24:12,370
we're here this week right come talk to

00:24:09,910 --> 00:24:17,230
us at our booth over there I highly

00:24:12,370 --> 00:24:22,260
encourage it come for free t-shirt for a

00:24:17,230 --> 00:24:22,260
business card for a handshake Frank hats

00:24:23,340 --> 00:24:32,049
hugs it from me

00:24:25,890 --> 00:24:34,840
hi Jake from me boy sure sure Ninomiya

00:24:32,049 --> 00:24:36,880
when Thema thanks for your attention do

00:24:34,840 --> 00:24:38,830
you have any questions keep in mind that

00:24:36,880 --> 00:24:41,470
we are almost out of time and you can

00:24:38,830 --> 00:24:43,630
come visit us at the booth in mass for

00:24:41,470 --> 00:24:45,910
actual questions as well in the case of

00:24:43,630 --> 00:24:48,490
services have you given much thought to

00:24:45,910 --> 00:24:51,730
how to restore the state of service

00:24:48,490 --> 00:24:54,880
instances in the CCD be as a part of

00:24:51,730 --> 00:24:56,590
restoring not just the service itself

00:24:54,880 --> 00:24:59,220
but the services state from Cloud

00:24:56,590 --> 00:24:59,220
Foundry is perspective

00:25:24,290 --> 00:25:34,830
can be gotten to any others I know why

00:25:32,790 --> 00:25:37,200
there is no others because they will all

00:25:34,830 --> 00:25:39,390
come to our boss yeah see you guys all

00:25:37,200 --> 00:25:41,160
the booth in the exhibit hall happy to

00:25:39,390 --> 00:25:46,289
talk to you

00:25:41,160 --> 00:25:46,289

YouTube URL: https://www.youtube.com/watch?v=Ta_kAW4dOVo


