Title: Cloud Foundry in Production - Tim Leong & Neville George, Comcast
Publication date: 2016-05-29
Playlist: Cloud Foundry Summit Santa Clara 2016
Description: 
	Over the course of the last year, Comcast has matured its Cloud Foundry platform from proof-of-concept to production ready. The platform currently supports some of our most critical applications while also being an incubator for more innovation. Transitioning to a new platform is never easy and we have had to win over skeptics with operational excellence. Join us to hear about how we: 

· Monitor and Alert on Cloud Foundry KPIs 
· Certify the resilience of Cloud Foundry 
· Manage and Maintain Cloud Foundry

Neville George
Cloud Engineer, Comcast
Neville George is a Cloud Engineer at Comcast. He plays a key role in promoting, managing and supporting PaaS initiatives within the company. He has a passion for automation and more recently open-source tools so doesn't have to pay "full-price for fabulous". When he needs a break from his warm chair, you will find him at a ping pong table or flinging bags into a cornhole board - though neither contributing to his biceps.

Tim Leong
Principal Architect, Comcast Cable
Cloud Engineer at Comcast. Currently working on supporting and operating Pivotal Cloud Foundry and many other Cloud initiatives at Comcast. Last year, I spoke at the CF summit about our journey towards production. This year, we are running production workloads, and the platform is successful under our watch.
Captions: 
	00:00:00,000 --> 00:00:07,620
all right well I guess we'll get started

00:00:03,899 --> 00:00:09,330
big crowd just so everyone knows this is

00:00:07,620 --> 00:00:13,049
going to talk about artisanal Internet's

00:00:09,330 --> 00:00:15,000
this is not actually a talk about how

00:00:13,049 --> 00:00:16,590
it's great to work for Kraig either

00:00:15,000 --> 00:00:17,970
we're gonna talk about running Cloud

00:00:16,590 --> 00:00:19,050
Foundry if everyone's here for cloud

00:00:17,970 --> 00:00:20,880
Friday that's what we're gonna talk

00:00:19,050 --> 00:00:25,170
about if you want to talk about

00:00:20,880 --> 00:00:27,420
artisanal Internet's go see dr. Nick so

00:00:25,170 --> 00:00:30,900
my name is Tim and this is Neville and

00:00:27,420 --> 00:00:33,719
we work for Comcast and what we wanted

00:00:30,900 --> 00:00:35,579
to talk to you today about is what our

00:00:33,719 --> 00:00:38,340
experience has been running with Cloud

00:00:35,579 --> 00:00:39,960
Foundry for the last couple years so if

00:00:38,340 --> 00:00:41,370
you were here with us last year we had

00:00:39,960 --> 00:00:44,070
another talk and we were talking about

00:00:41,370 --> 00:00:47,550
kind of the same thing what it was like

00:00:44,070 --> 00:00:49,440
running Cloud Foundry back then and we

00:00:47,550 --> 00:00:52,079
didn't really have too much going on we

00:00:49,440 --> 00:00:56,030
had a single foundation we had a few

00:00:52,079 --> 00:00:59,370
orgs a few apps not too much traffic and

00:00:56,030 --> 00:01:02,370
over the past year it's definitely grown

00:00:59,370 --> 00:01:05,369
so we've we've seen a rapid growth in

00:01:02,370 --> 00:01:06,990
adoption people love the platform we

00:01:05,369 --> 00:01:08,760
have six foundations now across the

00:01:06,990 --> 00:01:12,030
country we have a whole ton of awards

00:01:08,760 --> 00:01:14,100
and we're running about 900 apps and

00:01:12,030 --> 00:01:15,630
some of those are running critical

00:01:14,100 --> 00:01:18,090
applications for us they're there right

00:01:15,630 --> 00:01:21,299
within the critical path of our customer

00:01:18,090 --> 00:01:25,680
interaction so it's been a really big

00:01:21,299 --> 00:01:27,450
year and last year when we were talking

00:01:25,680 --> 00:01:30,240
to folks the biggest question that we

00:01:27,450 --> 00:01:35,250
got from them was what it was like to

00:01:30,240 --> 00:01:37,259
run Cloud Foundry and to use an analogy

00:01:35,250 --> 00:01:38,310
sort of similar to what Greg was talking

00:01:37,259 --> 00:01:42,479
about in the keynote

00:01:38,310 --> 00:01:44,280
it is like flying an airplane so back

00:01:42,479 --> 00:01:46,259
then when we went on our journey we were

00:01:44,280 --> 00:01:49,079
you know taking that leap of faith and

00:01:46,259 --> 00:01:51,170
jumping off the airplane and now we're

00:01:49,079 --> 00:01:54,689
flying the airplane so we have this this

00:01:51,170 --> 00:01:57,479
highly modern fast airplane which is

00:01:54,689 --> 00:01:59,219
Cloud Foundry that gets our developers

00:01:57,479 --> 00:02:02,790
to where they're going faster than ever

00:01:59,219 --> 00:02:06,060
before and more conveniently than ever

00:02:02,790 --> 00:02:07,979
before and we get to be the pilots so

00:02:06,060 --> 00:02:10,200
it's a good opportunity for us right

00:02:07,979 --> 00:02:12,209
yeah absolutely I mean we feel fantastic

00:02:10,200 --> 00:02:13,830
you know driving business the best seats

00:02:12,209 --> 00:02:15,270
in the house

00:02:13,830 --> 00:02:17,700
we've been running it for a couple of

00:02:15,270 --> 00:02:20,490
years and every time I walk in there to

00:02:17,700 --> 00:02:24,090
like do my job I feel like Iceman not

00:02:20,490 --> 00:02:26,370
not to be I don't mean to offend the

00:02:24,090 --> 00:02:27,840
Maverick and goose fans either but

00:02:26,370 --> 00:02:30,390
frankly speaking this is what our

00:02:27,840 --> 00:02:33,000
customers expect from us but in all

00:02:30,390 --> 00:02:35,400
reality at the end of the day that's

00:02:33,000 --> 00:02:38,310
exactly how we feel we feel the the

00:02:35,400 --> 00:02:40,770
cabin is hot they're sweating like that

00:02:38,310 --> 00:02:43,020
striker and you're ready to jump out of

00:02:40,770 --> 00:02:44,460
that aeroplane on this like these you

00:02:43,020 --> 00:02:48,750
can actually find Tim walking around

00:02:44,460 --> 00:02:50,520
without his shirt why Tim well not

00:02:48,750 --> 00:02:52,140
exactly without my shirt but but

00:02:50,520 --> 00:02:54,780
basically because we're we're faced with

00:02:52,140 --> 00:02:56,250
this we're faced with a cockpit that

00:02:54,780 --> 00:03:00,570
that can be a little overwhelming at

00:02:56,250 --> 00:03:03,600
first and you know you have metrics upon

00:03:00,570 --> 00:03:04,830
metrics metrics here metrics there you

00:03:03,600 --> 00:03:08,130
have a lot of different management

00:03:04,830 --> 00:03:10,410
interfaces that control Cloud Foundry

00:03:08,130 --> 00:03:12,030
we use pivotal Cloud Foundry so we're

00:03:10,410 --> 00:03:14,100
constantly going between Bosh and ops

00:03:12,030 --> 00:03:17,550
manager trying to figure out what what's

00:03:14,100 --> 00:03:19,100
the best way of doing what we have

00:03:17,550 --> 00:03:22,310
backups that we have to worry about

00:03:19,100 --> 00:03:25,920
build pack maintenance load balancing

00:03:22,310 --> 00:03:27,450
and we're a full-service shop so we we

00:03:25,920 --> 00:03:29,850
manage the infrastructure underneath

00:03:27,450 --> 00:03:31,440
we're VMware engineers as well and we

00:03:29,850 --> 00:03:34,739
manage down there like it's in the

00:03:31,440 --> 00:03:38,070
hardware so it can be a lot sometimes

00:03:34,739 --> 00:03:40,080
and also can't forget about who's flying

00:03:38,070 --> 00:03:42,900
the plane who's riding the plane with us

00:03:40,080 --> 00:03:46,340
no anybody want to take a guess on who

00:03:42,900 --> 00:03:46,340
these guys might be who are these guys

00:03:46,549 --> 00:03:51,989
well they are actually our developers I

00:03:49,700 --> 00:03:55,260
have a feeling that we have a lot of

00:03:51,989 --> 00:03:57,120
developers here Tim so we don't have

00:03:55,260 --> 00:03:57,630
anything against developers they keep us

00:03:57,120 --> 00:03:59,610
on our toes

00:03:57,630 --> 00:04:01,680
they're big proponents of the

00:03:59,610 --> 00:04:04,769
environment but every time there is a

00:04:01,680 --> 00:04:06,390
slight turbulence in the air they start

00:04:04,769 --> 00:04:07,650
looking for life for us you know they

00:04:06,390 --> 00:04:09,570
already do

00:04:07,650 --> 00:04:12,989
they start kicking and screaming and

00:04:09,570 --> 00:04:15,299
they go into crash positions so Tim what

00:04:12,989 --> 00:04:18,150
how we if I if I may

00:04:15,299 --> 00:04:19,650
maybe what kind of oxygen masks have you

00:04:18,150 --> 00:04:21,930
given them to make them comfortable in

00:04:19,650 --> 00:04:23,789
the environment right so it's important

00:04:21,930 --> 00:04:24,330
for for not only our developers not to

00:04:23,789 --> 00:04:25,949
go and crash

00:04:24,330 --> 00:04:28,020
position but we're sort of in crashed

00:04:25,949 --> 00:04:29,970
position too so we want to talk to you

00:04:28,020 --> 00:04:33,479
some about some of the tools and

00:04:29,970 --> 00:04:35,639
automation that we've we've leveraged to

00:04:33,479 --> 00:04:38,490
make this more of an easy experience for

00:04:35,639 --> 00:04:41,729
our developers make it easier for us to

00:04:38,490 --> 00:04:42,750
support as well absolutely so the first

00:04:41,729 --> 00:04:44,939
thing we want to talk to you about is

00:04:42,750 --> 00:04:46,620
monitoring so I think there's been some

00:04:44,939 --> 00:04:48,030
other talks about monitoring and we have

00:04:46,620 --> 00:04:50,069
our own implementation as well but it

00:04:48,030 --> 00:04:51,780
was the first problem that we had to

00:04:50,069 --> 00:04:53,969
solve we needed visibility into Cloud

00:04:51,780 --> 00:04:55,680
Foundry we can't be keep on running

00:04:53,969 --> 00:04:57,659
Bosch PMS all the time to see how things

00:04:55,680 --> 00:05:01,409
are operating you can't keep on going

00:04:57,659 --> 00:05:04,500
into ops manager so our our monitoring

00:05:01,409 --> 00:05:07,409
solution leverages Nagios at the center

00:05:04,500 --> 00:05:10,020
so we have Nagios that has a JMX plugin

00:05:07,409 --> 00:05:15,030
that is pulling metrics out of ops

00:05:10,020 --> 00:05:17,729
metrics so ops metrics publishes all

00:05:15,030 --> 00:05:19,469
sorts of metrics that are low level at

00:05:17,729 --> 00:05:22,379
the operating system level for CPU

00:05:19,469 --> 00:05:25,860
memory disk all those kinds of things

00:05:22,379 --> 00:05:27,120
and also more higher level things that

00:05:25,860 --> 00:05:29,190
have to do with Cloud Foundry like how

00:05:27,120 --> 00:05:32,940
many requests you're getting per second

00:05:29,190 --> 00:05:35,819
into your router layer how many stages

00:05:32,940 --> 00:05:37,289
you have available on your DEA layer so

00:05:35,819 --> 00:05:39,659
we take all those metrics we pull them

00:05:37,289 --> 00:05:41,330
into Nagios we set some thresholds when

00:05:39,659 --> 00:05:44,460
those thresholds are met we can send

00:05:41,330 --> 00:05:47,219
alerts out to our operations team but we

00:05:44,460 --> 00:05:49,379
can also take those metrics pull

00:05:47,219 --> 00:05:52,500
performance data off of them and forward

00:05:49,379 --> 00:05:55,349
those off to our our dashboards which

00:05:52,500 --> 00:05:58,229
use influx database so influx is a tool

00:05:55,349 --> 00:05:59,849
that is built as a data store for time

00:05:58,229 --> 00:06:01,440
series metrics and it's really good at

00:05:59,849 --> 00:06:04,889
pulling in thousands and thousands of

00:06:01,440 --> 00:06:08,759
metrics and being able to query them

00:06:04,889 --> 00:06:12,379
very quickly and we use Cortana to pull

00:06:08,759 --> 00:06:16,889
those metrics out and create dashboards

00:06:12,379 --> 00:06:20,029
so looking at this system what we end up

00:06:16,889 --> 00:06:21,960
with is some pretty cool-looking gravano

00:06:20,029 --> 00:06:25,229
dashboards and this is the one that we

00:06:21,960 --> 00:06:30,599
look at every day even hey you want to

00:06:25,229 --> 00:06:31,800
see it what's happening so this is what

00:06:30,599 --> 00:06:33,839
we look at every day and it gives us a

00:06:31,800 --> 00:06:35,789
really good quick visual indicator on

00:06:33,839 --> 00:06:36,930
what's going wrong with the system so

00:06:35,789 --> 00:06:37,800
I'm just going to go through a couple of

00:06:36,930 --> 00:06:41,170
these real quick

00:06:37,800 --> 00:06:43,810
so if we look at the top right we have

00:06:41,170 --> 00:06:46,750
the requests coming in per second into a

00:06:43,810 --> 00:06:48,340
router layer and this this metric is

00:06:46,750 --> 00:06:51,010
available through ops metrics and we can

00:06:48,340 --> 00:06:52,780
publish it through Griffin so here you

00:06:51,010 --> 00:06:55,060
can get an indication of how busy your

00:06:52,780 --> 00:06:56,710
system is if you see rapid drops in this

00:06:55,060 --> 00:06:58,240
in this metric you can get a quick

00:06:56,710 --> 00:06:59,830
visual indicator that maybe something's

00:06:58,240 --> 00:07:02,530
wrong with your load balance for layer

00:06:59,830 --> 00:07:04,330
if you have a rapid spike you're gonna

00:07:02,530 --> 00:07:06,070
have you may have issues with response

00:07:04,330 --> 00:07:07,540
time you may have you may tell that

00:07:06,070 --> 00:07:10,510
something is very busy or something's

00:07:07,540 --> 00:07:15,460
kind of running away so easy easy quick

00:07:10,510 --> 00:07:17,830
indicator on the top left we have what

00:07:15,460 --> 00:07:20,710
we consider as our user experience graph

00:07:17,830 --> 00:07:23,320
so this is response time for all of the

00:07:20,710 --> 00:07:25,930
endpoints that our customers see so you

00:07:23,320 --> 00:07:28,260
have the console response time you have

00:07:25,930 --> 00:07:30,400
the API response time you have

00:07:28,260 --> 00:07:33,670
application response time so if you

00:07:30,400 --> 00:07:37,120
start seeing things like this you call

00:07:33,670 --> 00:07:39,040
Neville some time no we usually usually

00:07:37,120 --> 00:07:39,670
thinks it's me who did it but yeah yeah

00:07:39,040 --> 00:07:43,420
exactly

00:07:39,670 --> 00:07:46,120
so so this is this is telling us that

00:07:43,420 --> 00:07:51,540
our dev console is actually spiking in

00:07:46,120 --> 00:07:54,430
response time over over the last over

00:07:51,540 --> 00:07:56,170
over the last few days so we have to

00:07:54,430 --> 00:08:00,670
definitely take take action and figure

00:07:56,170 --> 00:08:02,200
out what's going on with this and try to

00:08:00,670 --> 00:08:07,690
bring the dev console back for our end

00:08:02,200 --> 00:08:10,240
users so the the next if you go further

00:08:07,690 --> 00:08:14,350
down you can see more metrics having to

00:08:10,240 --> 00:08:16,230
do with a che proxy you have some system

00:08:14,350 --> 00:08:21,310
level metrics for our router ik layer

00:08:16,230 --> 00:08:22,840
and further down we have de A's metrics

00:08:21,310 --> 00:08:24,610
having to do with our de A's which is

00:08:22,840 --> 00:08:26,680
which is important looking at DA's

00:08:24,610 --> 00:08:29,740
sometimes we see spikes and our DEA s

00:08:26,680 --> 00:08:32,050
like a single DEA you'll see spiking and

00:08:29,740 --> 00:08:33,280
then you'll get a application developer

00:08:32,050 --> 00:08:35,140
coming back to us saying I'm having

00:08:33,280 --> 00:08:36,940
terrible performance and you can say

00:08:35,140 --> 00:08:38,349
well it looks like your application is

00:08:36,940 --> 00:08:41,830
running a single instance because it's

00:08:38,349 --> 00:08:43,030
only spiking on a single DEA or Diego

00:08:41,830 --> 00:08:44,770
cell or whatever you're running those

00:08:43,030 --> 00:08:46,360
are great conversations to have over a

00:08:44,770 --> 00:08:48,070
period of time what we have seen is it's

00:08:46,360 --> 00:08:50,110
easier to discuss that with your

00:08:48,070 --> 00:08:51,320
application owners because they get more

00:08:50,110 --> 00:08:52,850
familiar with the environment

00:08:51,320 --> 00:08:55,940
understand how to use the environment

00:08:52,850 --> 00:08:57,860
right right so this is not only

00:08:55,940 --> 00:08:59,750
providing visibility for us but you know

00:08:57,860 --> 00:09:01,760
we can send these off to our application

00:08:59,750 --> 00:09:03,140
developers and and have them see and

00:09:01,760 --> 00:09:05,300
then that gives them a little bit more

00:09:03,140 --> 00:09:07,310
assurance that if their application is

00:09:05,300 --> 00:09:09,290
not performing adequately and they can

00:09:07,310 --> 00:09:10,850
look at our graphs and see that you know

00:09:09,290 --> 00:09:12,920
we're we're fine

00:09:10,850 --> 00:09:14,960
everything looks good on our side so it

00:09:12,920 --> 00:09:16,540
it allows them to troubleshoot them in

00:09:14,960 --> 00:09:19,520
the right direction

00:09:16,540 --> 00:09:23,140
so it helps us to do online

00:09:19,520 --> 00:09:25,820
troubleshooting but what happens when

00:09:23,140 --> 00:09:29,450
you do a bad poet or devil do is a bad

00:09:25,820 --> 00:09:32,030
push and somehow you delete all of you

00:09:29,450 --> 00:09:34,970
delete several jobs or something goes

00:09:32,030 --> 00:09:37,850
wrong yep absolutely and that's why you

00:09:34,970 --> 00:09:40,010
need backups when we started having our

00:09:37,850 --> 00:09:41,600
first few deployments of Cloud Foundry

00:09:40,010 --> 00:09:43,790
we started experimenting with the

00:09:41,600 --> 00:09:46,070
environment and kept bringing it down so

00:09:43,790 --> 00:09:48,470
we decided let's do backups we use

00:09:46,070 --> 00:09:51,440
pivotal Cloud Foundry and God bless the

00:09:48,470 --> 00:09:54,440
soul who wrote that six page document

00:09:51,440 --> 00:09:56,990
about how to perform backups so we had

00:09:54,440 --> 00:09:58,250
to sit in front of a screen like you

00:09:56,990 --> 00:10:00,260
know fingers on the keyboard try to

00:09:58,250 --> 00:10:03,470
execute all these statum statements

00:10:00,260 --> 00:10:05,390
interpret what they mean and hours later

00:10:03,470 --> 00:10:08,420
you would have a successful backup

00:10:05,390 --> 00:10:09,950
during these this whole time your

00:10:08,420 --> 00:10:11,450
application owners are sitting on their

00:10:09,950 --> 00:10:13,880
hands because they cannot deploy new

00:10:11,450 --> 00:10:16,240
releases Cloud Controller goes into a

00:10:13,880 --> 00:10:20,450
read-only state when backups happen

00:10:16,240 --> 00:10:22,640
luckily for us we found CF ops CF ops is

00:10:20,450 --> 00:10:25,340
an open source tool that helps with

00:10:22,640 --> 00:10:28,160
automating the backup of the system of a

00:10:25,340 --> 00:10:30,410
Cloud Foundry deployment we decided to

00:10:28,160 --> 00:10:32,180
take it to the next level today when a

00:10:30,410 --> 00:10:34,820
backup kicks off in our environment we

00:10:32,180 --> 00:10:37,070
update our environmental status pages we

00:10:34,820 --> 00:10:40,970
update our channels to notify users that

00:10:37,070 --> 00:10:42,830
a backup has been kicked off we also

00:10:40,970 --> 00:10:44,930
take metrics out of that how long did it

00:10:42,830 --> 00:10:48,890
take for a backup to complete within

00:10:44,930 --> 00:10:50,390
every environment that data helps us as

00:10:48,890 --> 00:10:52,910
well as the developers it helps us

00:10:50,390 --> 00:10:54,800
because if for the last ten weeks if

00:10:52,910 --> 00:10:57,140
something was happening a backup was

00:10:54,800 --> 00:10:58,730
completing in an hour and today it took

00:10:57,140 --> 00:11:00,260
five hours it's an indicator that we

00:10:58,730 --> 00:11:03,800
need to go and check out what's wrong

00:11:00,260 --> 00:11:05,250
it helps our developers because now they

00:11:03,800 --> 00:11:06,990
have visibility as to when by

00:11:05,250 --> 00:11:08,940
cups are happening so that they can make

00:11:06,990 --> 00:11:12,470
sure their deployment cycles do not fall

00:11:08,940 --> 00:11:15,990
during the backup period that we have

00:11:12,470 --> 00:11:18,390
spoke about monitoring and we spoke

00:11:15,990 --> 00:11:20,820
about backups but in between two of

00:11:18,390 --> 00:11:22,490
these there's also the need to prove the

00:11:20,820 --> 00:11:25,410
resiliency of the environment

00:11:22,490 --> 00:11:27,870
how do you know Cloud Foundry is working

00:11:25,410 --> 00:11:29,700
like it's supposed to work you don't

00:11:27,870 --> 00:11:31,020
want to wait till the power goes off to

00:11:29,700 --> 00:11:32,520
find out that the generator is not

00:11:31,020 --> 00:11:35,460
working you want that generator to do

00:11:32,520 --> 00:11:36,990
those tests you know every day and make

00:11:35,460 --> 00:11:40,140
sure it's ready when the when the time

00:11:36,990 --> 00:11:42,600
comes when you lose power we try to do

00:11:40,140 --> 00:11:44,880
something similar in our environment for

00:11:42,600 --> 00:11:48,180
Cloud Foundry we have chaos slinger

00:11:44,880 --> 00:11:50,990
chaos lemur is also an open-source tool

00:11:48,180 --> 00:11:55,620
that helps us destroy components within

00:11:50,990 --> 00:11:57,960
Cloud Foundry destruction is not really

00:11:55,620 --> 00:11:59,730
a good thing but what you would expect

00:11:57,960 --> 00:12:01,860
to happen what you would expect cloud

00:11:59,730 --> 00:12:03,810
foundry to do at that point is make sure

00:12:01,860 --> 00:12:06,090
that the VM the sector is bringing the

00:12:03,810 --> 00:12:08,820
components that have gone down back up

00:12:06,090 --> 00:12:12,990
back up and brings the environment into

00:12:08,820 --> 00:12:16,380
a stable state it also helps us with

00:12:12,990 --> 00:12:18,210
enforcing cloud ready architectures so

00:12:16,380 --> 00:12:22,320
when a component within cloud foundry

00:12:18,210 --> 00:12:24,480
gets destroyed if your application

00:12:22,320 --> 00:12:26,730
owners via developers are breathing you

00:12:24,480 --> 00:12:28,470
know down your neck saying what is going

00:12:26,730 --> 00:12:32,790
on you just lost something my

00:12:28,470 --> 00:12:34,350
application is totally unresponsive that

00:12:32,790 --> 00:12:36,680
is the time to have a great conversation

00:12:34,350 --> 00:12:39,360
with them you want to talk to them about

00:12:36,680 --> 00:12:43,160
why their application is so much

00:12:39,360 --> 00:12:45,360
dependent on the infrastructure can we

00:12:43,160 --> 00:12:47,490
build more resiliency into that

00:12:45,360 --> 00:12:49,800
application layer can you be multi-site

00:12:47,490 --> 00:12:51,750
you know are there architectural

00:12:49,800 --> 00:12:54,420
decisions that you had in a previous

00:12:51,750 --> 00:12:55,589
legacy system that you ported over and

00:12:54,420 --> 00:12:57,120
simply doesn't work in the environment

00:12:55,589 --> 00:12:58,920
where instance is good and these are

00:12:57,120 --> 00:13:02,100
great conversations just get them to

00:12:58,920 --> 00:13:03,780
stop screaming first and it's become

00:13:02,100 --> 00:13:06,660
easier like I said before it's become

00:13:03,780 --> 00:13:08,190
easier over a period of time to have

00:13:06,660 --> 00:13:11,370
these conversations with them because

00:13:08,190 --> 00:13:13,200
they are near the architecture and it

00:13:11,370 --> 00:13:15,300
takes a while before they get to

00:13:13,200 --> 00:13:16,800
understand how best to operate their

00:13:15,300 --> 00:13:19,900
applications in this environment

00:13:16,800 --> 00:13:23,020
what we've also seen is this destruction

00:13:19,900 --> 00:13:25,360
also helps in cleansing we have seen

00:13:23,020 --> 00:13:27,820
memory leaks and certain components we

00:13:25,360 --> 00:13:29,740
have also seen some funky stuff

00:13:27,820 --> 00:13:32,080
happening within the environment and

00:13:29,740 --> 00:13:34,870
usually I blame Tim on it but this

00:13:32,080 --> 00:13:37,720
process of destroying and recreating all

00:13:34,870 --> 00:13:39,520
these VMs or certain components brings

00:13:37,720 --> 00:13:42,820
all of them to back to a pristine state

00:13:39,520 --> 00:13:44,770
and this happens often enough that we

00:13:42,820 --> 00:13:48,340
start to see those those funky state

00:13:44,770 --> 00:13:51,400
things less and less in addition to all

00:13:48,340 --> 00:13:54,100
of this it's great to have a Jedi Master

00:13:51,400 --> 00:13:55,480
amongst ourselves and for us that is

00:13:54,100 --> 00:13:58,270
Sergey he's right here with us

00:13:55,480 --> 00:13:59,260
Sergey hands up right Sergey is a great

00:13:58,270 --> 00:14:01,690
addition to our team

00:13:59,260 --> 00:14:03,430
he works he brings a wealth of knowledge

00:14:01,690 --> 00:14:05,710
not only on the infrastructure side but

00:14:03,430 --> 00:14:08,350
also the application side he's a great

00:14:05,710 --> 00:14:10,660
liaison between the application teams

00:14:08,350 --> 00:14:12,430
who are just coming on board and the

00:14:10,660 --> 00:14:14,650
infrastructure side where he's provided

00:14:12,430 --> 00:14:17,980
you know some great services that he is

00:14:14,650 --> 00:14:20,920
written by himself Tim what have we and

00:14:17,980 --> 00:14:22,840
Sergey together done to help our lives

00:14:20,920 --> 00:14:24,730
and our application owners life yeah

00:14:22,840 --> 00:14:27,460
yeah so it's it's good to have that

00:14:24,730 --> 00:14:30,190
visibility have that understanding into

00:14:27,460 --> 00:14:31,870
the lives of the developer so sir kay's

00:14:30,190 --> 00:14:35,260
helped us develop some custom tools that

00:14:31,870 --> 00:14:38,590
will talk to you about and the first

00:14:35,260 --> 00:14:40,030
thing that we had to figure out is you

00:14:38,590 --> 00:14:41,740
know when your developers are moving

00:14:40,030 --> 00:14:43,600
into a platform like this they lose a

00:14:41,740 --> 00:14:47,830
lot of visibility they lose a lot of

00:14:43,600 --> 00:14:50,050
freedom to log on do some trace routes

00:14:47,830 --> 00:14:52,180
do some connectivity testing and get

00:14:50,050 --> 00:14:54,490
them through so without that capability

00:14:52,180 --> 00:14:57,520
Neve and I had to be on phone calls all

00:14:54,490 --> 00:14:59,920
the time doing netcat doing trace routes

00:14:57,520 --> 00:15:02,650
making sure that connectivity outbound

00:14:59,920 --> 00:15:04,270
from Cloud Foundry was there I don't I

00:15:02,650 --> 00:15:05,680
don't miss those calls by the way yeah

00:15:04,270 --> 00:15:07,180
middle of the night you know people will

00:15:05,680 --> 00:15:10,780
wake you off to do trace routes and

00:15:07,180 --> 00:15:13,120
things this conference calls so so

00:15:10,780 --> 00:15:15,600
Sergey developed some connectivity

00:15:13,120 --> 00:15:18,250
testing tools we call it is connected so

00:15:15,600 --> 00:15:21,610
users can go onto cloud foundry and they

00:15:18,250 --> 00:15:23,650
can put their endpoints into the URL and

00:15:21,610 --> 00:15:26,950
a test connectivity outbound from Cloud

00:15:23,650 --> 00:15:30,279
Foundry so it's a really quick and easy

00:15:26,950 --> 00:15:32,499
way for them to go and see if they

00:15:30,279 --> 00:15:33,939
have connected connectivity to github or

00:15:32,499 --> 00:15:36,970
any external resources that their

00:15:33,939 --> 00:15:38,529
application needs prior to going live or

00:15:36,970 --> 00:15:41,319
you know as the it's part of their

00:15:38,529 --> 00:15:43,720
development cycle and it saves us from

00:15:41,319 --> 00:15:45,819
being able to have to run stuff manually

00:15:43,720 --> 00:15:49,360
and allows for the platform to be more

00:15:45,819 --> 00:15:53,009
self-sustaining so TCP outbound

00:15:49,360 --> 00:15:56,019
traceroute outbound really helps out so

00:15:53,009 --> 00:15:58,839
another another useful tool is apt

00:15:56,019 --> 00:16:00,309
metrics dashboards so we have if you're

00:15:58,839 --> 00:16:02,050
just getting started with Cloud Foundry

00:16:00,309 --> 00:16:04,240
and you just want to have quick time

00:16:02,050 --> 00:16:06,579
series data to show how your application

00:16:04,240 --> 00:16:09,069
is performing we have quick dashboards

00:16:06,579 --> 00:16:11,259
that they can see similar to the ones

00:16:09,069 --> 00:16:14,800
that you saw before where they can go in

00:16:11,259 --> 00:16:17,199
and look at apps metrics and and get a

00:16:14,800 --> 00:16:19,329
good indication before having to invest

00:16:17,199 --> 00:16:21,040
time into building their own tool or

00:16:19,329 --> 00:16:25,389
using some other tools that require a

00:16:21,040 --> 00:16:27,759
little bit more bootstrap time another

00:16:25,389 --> 00:16:29,740
another thing that Sergey has definitely

00:16:27,759 --> 00:16:30,699
helped us out with and if you want to

00:16:29,740 --> 00:16:32,170
talk to him about any of these things

00:16:30,699 --> 00:16:35,889
he'll be available for questions

00:16:32,170 --> 00:16:39,540
afterwards right I didn't talk about

00:16:35,889 --> 00:16:42,970
that beforehand but he's good so we have

00:16:39,540 --> 00:16:44,949
custom service brokers as well so he has

00:16:42,970 --> 00:16:46,809
a really good system of leveraging

00:16:44,949 --> 00:16:49,809
docker to be able to create service

00:16:46,809 --> 00:16:51,279
brokers on-the-fly that are sort you

00:16:49,809 --> 00:16:52,389
know single tenant pretty much you know

00:16:51,279 --> 00:16:54,910
you have a docker container that

00:16:52,389 --> 00:16:57,040
contains an entire elf stack for you

00:16:54,910 --> 00:16:58,990
so when you instantiate a service

00:16:57,040 --> 00:17:00,550
instance it's going off and creating

00:16:58,990 --> 00:17:02,559
that service instance for you using some

00:17:00,550 --> 00:17:04,630
some pretty cool technology behind the

00:17:02,559 --> 00:17:06,939
scenes so this has given us a really

00:17:04,630 --> 00:17:09,339
good idea good method for creating

00:17:06,939 --> 00:17:10,870
custom service brokers that allow people

00:17:09,339 --> 00:17:13,000
to do all sorts of things like create

00:17:10,870 --> 00:17:14,679
elk stacks create idea create proxy

00:17:13,000 --> 00:17:16,149
servers that allow them to have outbound

00:17:14,679 --> 00:17:18,309
access into the internet if it's in a

00:17:16,149 --> 00:17:20,679
protected network so there's all sorts

00:17:18,309 --> 00:17:22,329
of of ways and it's very extensible so I

00:17:20,679 --> 00:17:24,370
encourage you to ask questions if you

00:17:22,329 --> 00:17:26,439
have them after the talk yeah these are

00:17:24,370 --> 00:17:28,449
great tools what you will find is over a

00:17:26,439 --> 00:17:30,250
period of time once people get used to

00:17:28,449 --> 00:17:31,600
having everything within the passive

00:17:30,250 --> 00:17:33,280
environment they don't want to go out

00:17:31,600 --> 00:17:35,799
and build your own infrastructure as a

00:17:33,280 --> 00:17:37,390
service anymore so the more services you

00:17:35,799 --> 00:17:39,100
can build into the platform and keep

00:17:37,390 --> 00:17:40,750
them there you know they're very happy

00:17:39,100 --> 00:17:42,429
with with getting away from that

00:17:40,750 --> 00:17:43,330
infrastructure as a service layer that

00:17:42,429 --> 00:17:46,870
they were on before

00:17:43,330 --> 00:17:49,000
mm-hmm yeah definitely and outside of

00:17:46,870 --> 00:17:51,700
the developer and for our our part we've

00:17:49,000 --> 00:17:53,890
we've done a lot of scripting to help

00:17:51,700 --> 00:17:55,029
automate some of the things that we do

00:17:53,890 --> 00:17:57,039
every day as well

00:17:55,029 --> 00:17:59,559
and our operations team does every every

00:17:57,039 --> 00:18:00,940
day so if you're familiar with cloud

00:17:59,559 --> 00:18:02,710
foundry you're familiar with pivotal

00:18:00,940 --> 00:18:06,010
cloud foundry it's sometimes it can be a

00:18:02,710 --> 00:18:08,019
challenge to do user intake because

00:18:06,010 --> 00:18:09,429
there's a dance of you know logging on

00:18:08,019 --> 00:18:11,669
the first time and then being added to

00:18:09,429 --> 00:18:14,140
an org and then they can log on and and

00:18:11,669 --> 00:18:16,720
it allows that then they have the access

00:18:14,140 --> 00:18:19,090
they need so we we have scripts that do

00:18:16,720 --> 00:18:21,039
a user intake that pre create users pre

00:18:19,090 --> 00:18:22,450
pre add them to organizations so the

00:18:21,039 --> 00:18:25,360
first time they log on they're their

00:18:22,450 --> 00:18:27,399
environments right before them and as

00:18:25,360 --> 00:18:29,470
you know we have a lot of sites as you

00:18:27,399 --> 00:18:32,019
could see so we had a lot of our users

00:18:29,470 --> 00:18:33,610
need to clone their environment from one

00:18:32,019 --> 00:18:36,100
to another so there's some scripts out

00:18:33,610 --> 00:18:38,200
there that we do that allow that or that

00:18:36,100 --> 00:18:39,460
cloning to happen so their environment

00:18:38,200 --> 00:18:41,019
and their spaces all look the same

00:18:39,460 --> 00:18:43,600
between two different sites which is

00:18:41,019 --> 00:18:45,279
been really cool for us but then this is

00:18:43,600 --> 00:18:47,500
all tech talk right I mean we are

00:18:45,279 --> 00:18:48,880
engineers and we love technology and we

00:18:47,500 --> 00:18:50,980
could talk about technology all day but

00:18:48,880 --> 00:18:52,840
there's this thing called social

00:18:50,980 --> 00:18:56,350
interactions that we're not really good

00:18:52,840 --> 00:18:58,120
at and you know even on Facebook I mean

00:18:56,350 --> 00:19:02,169
I see your selfies man you need some

00:18:58,120 --> 00:19:04,299
improvement so over in our in our Cloud

00:19:02,169 --> 00:19:05,559
Foundry environment we have worked on

00:19:04,299 --> 00:19:08,620
the social interaction with our

00:19:05,559 --> 00:19:11,679
customers yeah that's where transparency

00:19:08,620 --> 00:19:14,649
comes in all the metrics that we saw

00:19:11,679 --> 00:19:18,909
initially at the start of this this talk

00:19:14,649 --> 00:19:20,679
is exposed to our customers so when they

00:19:18,909 --> 00:19:23,049
have an application problem they not

00:19:20,679 --> 00:19:24,490
only look at their application data but

00:19:23,049 --> 00:19:27,429
they also have access to all the

00:19:24,490 --> 00:19:29,409
platform metrics that we see so we are

00:19:27,429 --> 00:19:30,669
very transparent we don't have anything

00:19:29,409 --> 00:19:32,649
to hide and when there is actually a

00:19:30,669 --> 00:19:35,380
problem we try to address it as openly

00:19:32,649 --> 00:19:37,419
as possible I would like to give an

00:19:35,380 --> 00:19:40,299
example of what happened is about six

00:19:37,419 --> 00:19:43,659
months ago there were it was a perfect

00:19:40,299 --> 00:19:45,130
storm we had two things happen one we

00:19:43,659 --> 00:19:46,720
decided we're gonna help our customers

00:19:45,130 --> 00:19:49,299
by providing more bill packs in the

00:19:46,720 --> 00:19:51,639
environment the second was we decided

00:19:49,299 --> 00:19:54,250
for whatever reason monitoring of heavy

00:19:51,639 --> 00:19:55,740
metal disks was not a big deal right

00:19:54,250 --> 00:19:57,539
when was the last time a ephemeral this

00:19:55,740 --> 00:20:00,480
wrote down the environment yeah I don't

00:19:57,539 --> 00:20:03,299
even remember that but so the new bill

00:20:00,480 --> 00:20:06,090
back started cashing on the de A's and

00:20:03,299 --> 00:20:08,010
we pretty much ran out of disk space on

00:20:06,090 --> 00:20:11,340
all our the years we have a lot of D

00:20:08,010 --> 00:20:12,809
ears just to give you the context so

00:20:11,340 --> 00:20:14,279
applications came pretty much to a

00:20:12,809 --> 00:20:16,970
standstill and that particular cloud

00:20:14,279 --> 00:20:19,140
foundation environment that we had so

00:20:16,970 --> 00:20:20,730
application owners had to move some of

00:20:19,140 --> 00:20:22,730
their traffic out of that foundation

00:20:20,730 --> 00:20:26,909
into other foundations that we have

00:20:22,730 --> 00:20:30,270
across different data centers it was not

00:20:26,909 --> 00:20:33,360
a really good day for us I would say but

00:20:30,270 --> 00:20:35,220
what we did as an our CA for that was

00:20:33,360 --> 00:20:36,929
have an open forum with our customers

00:20:35,220 --> 00:20:39,179
and tell them this is exactly what

00:20:36,929 --> 00:20:41,549
happened this is what we failed to do

00:20:39,179 --> 00:20:43,409
and we also told steps that we have

00:20:41,549 --> 00:20:45,779
taken to make sure that this doesn't

00:20:43,409 --> 00:20:47,850
happen again and you know knock on wood

00:20:45,779 --> 00:20:50,100
you know it hasn't happened yet and

00:20:47,850 --> 00:20:53,730
we're very glad what it also gave us is

00:20:50,100 --> 00:20:55,020
the ability to go back and look at what

00:20:53,730 --> 00:20:57,090
are the other assumptions that we make

00:20:55,020 --> 00:20:58,649
right we thought if metal discs were not

00:20:57,090 --> 00:21:01,110
okay to be monitored what were the other

00:20:58,649 --> 00:21:03,260
things that we made assumption on so we

00:21:01,110 --> 00:21:06,029
had that exercise and very happy that

00:21:03,260 --> 00:21:08,460
it's an eye-opener you know an incidents

00:21:06,029 --> 00:21:12,270
happen we have status pages where we

00:21:08,460 --> 00:21:15,240
inform our user base on what is

00:21:12,270 --> 00:21:17,669
happening within the environment and we

00:21:15,240 --> 00:21:19,559
have slack channels where we have really

00:21:17,669 --> 00:21:22,320
close contact with our customers we have

00:21:19,559 --> 00:21:24,899
a slack channel it's about like 275 to

00:21:22,320 --> 00:21:28,950
300 people on the slack Channel what we

00:21:24,899 --> 00:21:30,899
find over the period of time we have all

00:21:28,950 --> 00:21:32,130
these new customers who come in who are

00:21:30,899 --> 00:21:33,570
interested in the environment through

00:21:32,130 --> 00:21:34,919
the great point they actually heard

00:21:33,570 --> 00:21:37,470
about Cloud Foundry and they come and

00:21:34,919 --> 00:21:39,779
ask questions before we start replying

00:21:37,470 --> 00:21:42,029
to them or existing user communities

00:21:39,779 --> 00:21:43,890
replying that they're like oh you know

00:21:42,029 --> 00:21:45,630
we ran into this problem before here's

00:21:43,890 --> 00:21:49,289
the solution they they want to help us

00:21:45,630 --> 00:21:50,669
out so today as we stand here we are not

00:21:49,289 --> 00:21:53,130
supporting the environment our slack

00:21:50,669 --> 00:21:53,460
channels are being manned by our user

00:21:53,130 --> 00:21:55,020
base

00:21:53,460 --> 00:21:56,850
you know our developers are helping each

00:21:55,020 --> 00:21:58,770
other out and there are very few

00:21:56,850 --> 00:22:01,020
questions that we answer today you know

00:21:58,770 --> 00:22:02,580
having that kind of community brings

00:22:01,020 --> 00:22:04,620
together sort of like this

00:22:02,580 --> 00:22:06,899
self-sustaining ecosystem of users that

00:22:04,620 --> 00:22:08,580
can share information and help each

00:22:06,899 --> 00:22:08,990
other out and we we see that all the

00:22:08,580 --> 00:22:10,220
time

00:22:08,990 --> 00:22:11,630
so it's been very important that it's

00:22:10,220 --> 00:22:15,050
crowd-sourced you know and I think

00:22:11,630 --> 00:22:18,980
that's that's one of the very very big

00:22:15,050 --> 00:22:21,350
keys to our success in Comcast well I

00:22:18,980 --> 00:22:23,240
guess that brings us to keys to success

00:22:21,350 --> 00:22:25,370
when we started making this presentation

00:22:23,240 --> 00:22:26,990
I told him you know people shouldn't be

00:22:25,370 --> 00:22:28,610
going through all these presentations to

00:22:26,990 --> 00:22:29,900
see you know how to succeed in the

00:22:28,610 --> 00:22:31,970
environment let's just give them an

00:22:29,900 --> 00:22:34,270
abbreviation right we all we all love

00:22:31,970 --> 00:22:39,260
attribution lol BRB

00:22:34,270 --> 00:22:43,640
LMFAO not not the rap artists are TFS

00:22:39,260 --> 00:22:46,280
okay so I told him you know I'll make an

00:22:43,640 --> 00:22:48,440
abbreviation and after days and days of

00:22:46,280 --> 00:22:49,090
searching I finally got it from word of

00:22:48,440 --> 00:22:54,650
the day

00:22:49,090 --> 00:22:56,929
and so today you guys have a claw what

00:22:54,650 --> 00:23:00,880
does it mean it means to achieve

00:22:56,929 --> 00:23:03,530
brilliant success in something so how do

00:23:00,880 --> 00:23:04,910
how can you replicate you know some of

00:23:03,530 --> 00:23:07,970
the success that we have had in our

00:23:04,910 --> 00:23:12,950
environment so we start with e energize

00:23:07,970 --> 00:23:14,720
your base me and Tim have had the the

00:23:12,950 --> 00:23:15,410
benefit of just walking into a room and

00:23:14,720 --> 00:23:16,670
starting to talk about

00:23:15,410 --> 00:23:19,520
platform-as-a-service

00:23:16,670 --> 00:23:21,920
and don't have people stare at you like

00:23:19,520 --> 00:23:23,780
you just told them o'clock right so you

00:23:21,920 --> 00:23:26,990
want to talk and communicate to your

00:23:23,780 --> 00:23:29,900
base about what Cloud Foundry is what

00:23:26,990 --> 00:23:31,490
are the benefits talk talk about it up

00:23:29,900 --> 00:23:33,740
and down your stack you know the people

00:23:31,490 --> 00:23:36,140
upper management to the devil of course

00:23:33,740 --> 00:23:38,690
the more educated they are the more

00:23:36,140 --> 00:23:40,790
interest they will have in how the

00:23:38,690 --> 00:23:43,160
technology can help their application

00:23:40,790 --> 00:23:44,870
their KPI indicators if they have apps

00:23:43,160 --> 00:23:46,940
applications going down because of

00:23:44,870 --> 00:23:49,100
legacy technology how can they scale

00:23:46,940 --> 00:23:52,700
quickly how can they take more load you

00:23:49,100 --> 00:23:55,070
know with very little notice see change

00:23:52,700 --> 00:23:56,660
the way you think when I started this I

00:23:55,070 --> 00:23:59,150
was an infrastructure as a service

00:23:56,660 --> 00:24:01,429
engineer Greg put me on a two-day POC

00:23:59,150 --> 00:24:03,590
with all the developers and all I was

00:24:01,429 --> 00:24:05,330
sitting there and I was thinking where

00:24:03,590 --> 00:24:09,530
is the infrastructure piece it took

00:24:05,330 --> 00:24:12,950
about one hour to explain how to set up

00:24:09,530 --> 00:24:14,630
the infrastructure today I we talked

00:24:12,950 --> 00:24:17,080
about a talk with our developers all the

00:24:14,630 --> 00:24:20,120
time we speak about Bill packs logging

00:24:17,080 --> 00:24:22,170
load balancing how to do connectivity

00:24:20,120 --> 00:24:24,120
across different zones

00:24:22,170 --> 00:24:25,500
so it's definitely you know you have to

00:24:24,120 --> 00:24:27,510
change the way you think if you are

00:24:25,500 --> 00:24:29,310
coming from you know an infrastructure

00:24:27,510 --> 00:24:33,750
as an engineer role or even from legacy

00:24:29,310 --> 00:24:36,990
roles L live it some people might call

00:24:33,750 --> 00:24:38,700
it eating your own dog food but today we

00:24:36,990 --> 00:24:41,760
have our own cloud portals running

00:24:38,700 --> 00:24:44,400
within cloud foundry showing this kind

00:24:41,760 --> 00:24:47,490
of belief in our environment and us

00:24:44,400 --> 00:24:49,110
running very important portals that

00:24:47,490 --> 00:24:51,330
customers consume within the environment

00:24:49,110 --> 00:24:53,820
gives them the feeling that yes we can

00:24:51,330 --> 00:24:56,820
invest in this environment we are we had

00:24:53,820 --> 00:24:59,400
they gives them the it gives them the

00:24:56,820 --> 00:25:01,680
ability to believe that their

00:24:59,400 --> 00:25:05,400
applications would work very well in

00:25:01,680 --> 00:25:08,820
this environment to a automation

00:25:05,400 --> 00:25:10,740
automation like Jim said there are only

00:25:08,820 --> 00:25:12,930
tons of people interested once you start

00:25:10,740 --> 00:25:14,310
ramping up you there are tons of work

00:25:12,930 --> 00:25:15,510
that you will have to do you know the

00:25:14,310 --> 00:25:19,170
user intake there are gonna be all

00:25:15,510 --> 00:25:21,180
creation coders there's gonna be people

00:25:19,170 --> 00:25:24,690
who want new services people who want to

00:25:21,180 --> 00:25:26,970
know how to subscribe to services so

00:25:24,690 --> 00:25:29,880
that so the most important thing is to

00:25:26,970 --> 00:25:31,980
automate as much as possible so that you

00:25:29,880 --> 00:25:34,200
don't have to be stuck in the BAU cycle

00:25:31,980 --> 00:25:36,420
all the time right we could you can

00:25:34,200 --> 00:25:38,760
concentrate and put that amount of time

00:25:36,420 --> 00:25:41,840
into creating new services and trying to

00:25:38,760 --> 00:25:44,010
keep people within the platform t

00:25:41,840 --> 00:25:45,090
transparency we just spoke about it it's

00:25:44,010 --> 00:25:48,390
very important to listen to your

00:25:45,090 --> 00:25:51,360
customers I think it's one of the

00:25:48,390 --> 00:25:53,910
biggest keys to our success and what we

00:25:51,360 --> 00:25:56,910
have done is like I said the more

00:25:53,910 --> 00:25:58,710
transparent you are they would be doing

00:25:56,910 --> 00:26:00,120
the work for you like just as how we are

00:25:58,710 --> 00:26:02,880
right here and they are doing the work

00:26:00,120 --> 00:26:05,250
for us within our channels today well I

00:26:02,880 --> 00:26:07,230
guess that's a club for you that's a new

00:26:05,250 --> 00:26:11,270
abbreviation Tim what do you think over

00:26:07,230 --> 00:26:11,270
a cheat yeah not too bad hashtag a clock

00:26:11,330 --> 00:26:16,800
so if you guys are if you guys are

00:26:14,340 --> 00:26:18,840
interested in what we're doing obviously

00:26:16,800 --> 00:26:21,960
thank you for coming and listening to

00:26:18,840 --> 00:26:25,110
our talk if you're interested we have we

00:26:21,960 --> 00:26:28,500
have openings so come talk to us or go

00:26:25,110 --> 00:26:30,390
visit that site quick shout out to Nick

00:26:28,500 --> 00:26:33,270
who has a talk today as well at 2:00

00:26:30,390 --> 00:26:35,100
10:00 p.m. in this room so please please

00:26:33,270 --> 00:26:37,110
see how our

00:26:35,100 --> 00:26:38,580
he has continued into their into our

00:26:37,110 --> 00:26:41,730
developers worlds and see how they've

00:26:38,580 --> 00:26:45,210
changed the way they do business so with

00:26:41,730 --> 00:26:49,080
that if anyone has any questions time

00:26:45,210 --> 00:26:50,309
for you guys yeah oh there's a mic right

00:26:49,080 --> 00:26:55,740
there okay so you guys have any

00:26:50,309 --> 00:27:02,490
questions okay

00:26:55,740 --> 00:27:03,690
absolutely okay all right well thank you

00:27:02,490 --> 00:27:06,289
well thank you guys if you have any

00:27:03,690 --> 00:27:06,289

YouTube URL: https://www.youtube.com/watch?v=dAgAs3a0yDk


