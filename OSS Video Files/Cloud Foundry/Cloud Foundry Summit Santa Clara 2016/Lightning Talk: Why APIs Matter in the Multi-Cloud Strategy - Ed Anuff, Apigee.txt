Title: Lightning Talk: Why APIs Matter in the Multi-Cloud Strategy - Ed Anuff, Apigee
Publication date: 2016-05-29
Playlist: Cloud Foundry Summit Santa Clara 2016
Description: 
	Regardless of which cloud your applications run in, it needs to communicate to other applications within the same cloud or across public and private clouds. Web APIs have always been the lingua-franca of communication between applications. However, nuances of how APIs are published and managed can mean the difference between a highly agile software development organization, and just a pile of services that cannot communicate to each other. Ed Anuff from Apigee will discuss how to use use API Management to develop APIs that span public and private clouds.

Ed Anuff
Apigee
Captions: 
	00:00:00,000 --> 00:00:07,680
I'm a TANF of appaji and I'm gonna talk

00:00:03,240 --> 00:00:13,380
to you today about why api's are

00:00:07,680 --> 00:00:15,059
important for multi-cloud now a lot of

00:00:13,380 --> 00:00:18,539
folks today talking about multi-cloud

00:00:15,059 --> 00:00:20,670
this is great for for a long time the

00:00:18,539 --> 00:00:23,130
conversation was about getting to the

00:00:20,670 --> 00:00:26,820
cloud but getting to the cloud is not

00:00:23,130 --> 00:00:31,289
enough we need to get to the clouds

00:00:26,820 --> 00:00:34,350
plural and so you've heard that all all

00:00:31,289 --> 00:00:36,570
afternoon and all evening multi-cloud

00:00:34,350 --> 00:00:38,250
strategies and how Cloud Foundry is

00:00:36,570 --> 00:00:41,070
going to help you get there there's a

00:00:38,250 --> 00:00:43,020
lot of good reasons for this might be

00:00:41,070 --> 00:00:45,989
trying to turn your data center into a

00:00:43,020 --> 00:00:49,860
private cloud creating the cloud born

00:00:45,989 --> 00:00:51,660
Enterprise all of this good stuff maybe

00:00:49,860 --> 00:00:55,440
you just don't want a single source on a

00:00:51,660 --> 00:00:58,469
on a single vendor you want of other

00:00:55,440 --> 00:01:01,649
options and what have you all good

00:00:58,469 --> 00:01:08,430
reasons to go to multi-cloud were to go

00:01:01,649 --> 00:01:10,380
to the clouds plural turns out that this

00:01:08,430 --> 00:01:14,810
isn't the first time that there was an

00:01:10,380 --> 00:01:19,049
ambitious project to get to the clouds

00:01:14,810 --> 00:01:23,040
some might recognize this the Tower of

00:01:19,049 --> 00:01:25,830
Babel also an ambitious plan to get to

00:01:23,040 --> 00:01:29,490
the clouds this project failed due to

00:01:25,830 --> 00:01:33,630
polyglot requirements I was a monolithic

00:01:29,490 --> 00:01:36,500
architecture and fell apart when people

00:01:33,630 --> 00:01:40,979
couldn't agree what languages to use

00:01:36,500 --> 00:01:44,280
some people blame divine retribution I

00:01:40,979 --> 00:01:45,899
blame it on Hacker News some people felt

00:01:44,280 --> 00:01:49,409
you should go to lists other people were

00:01:45,899 --> 00:01:52,170
talking about server-side Swift and you

00:01:49,409 --> 00:01:54,720
know they ended up throwing in the towel

00:01:52,170 --> 00:01:59,399
I think we've all worked on IT projects

00:01:54,720 --> 00:02:01,409
like this but the point was that you

00:01:59,399 --> 00:02:04,350
know building a project like this you

00:02:01,409 --> 00:02:07,469
break it into teams teams choose their

00:02:04,350 --> 00:02:10,739
own communication styles their own ways

00:02:07,469 --> 00:02:13,770
of working and so on there has to be a

00:02:10,739 --> 00:02:16,620
way to to bring that all together so

00:02:13,770 --> 00:02:20,480
what does this have to do with api's

00:02:16,620 --> 00:02:25,130
well your teams are building apps and

00:02:20,480 --> 00:02:27,660
apps talk to each other via api's and

00:02:25,130 --> 00:02:30,480
left your own devices your teams are

00:02:27,660 --> 00:02:36,690
going to come up with their own API

00:02:30,480 --> 00:02:38,760
styles and so forth turns out that the

00:02:36,690 --> 00:02:42,740
problem with api's isn't really about

00:02:38,760 --> 00:02:45,780
rest versus soap regardless of what your

00:02:42,740 --> 00:02:48,930
integration folks or your API teams

00:02:45,780 --> 00:02:52,230
might be telling you no matter how many

00:02:48,930 --> 00:02:55,680
debates you see on hypermedia api's

00:02:52,230 --> 00:03:01,220
versus whatever the real problems are

00:02:55,680 --> 00:03:03,600
what are called the non-functional API

00:03:01,220 --> 00:03:06,660
issues and that those are things like

00:03:03,600 --> 00:03:09,480
your security mechanisms your

00:03:06,660 --> 00:03:11,880
documentation your analytics and so

00:03:09,480 --> 00:03:15,240
forth these are actually the challenges

00:03:11,880 --> 00:03:18,330
that happen when you try to make your

00:03:15,240 --> 00:03:20,520
api's consistent work between apps and

00:03:18,330 --> 00:03:23,160
really when you look at the multi cloud

00:03:20,520 --> 00:03:26,520
problem it really is at its heart an API

00:03:23,160 --> 00:03:29,340
problem so what's the solution to this

00:03:26,520 --> 00:03:31,680
well some of you probably have heard of

00:03:29,340 --> 00:03:33,240
API management it's a category I know

00:03:31,680 --> 00:03:37,350
many of you are running different types

00:03:33,240 --> 00:03:38,340
of of API management software in my zest

00:03:37,350 --> 00:03:41,250
to get up here I forgot to introduce

00:03:38,340 --> 00:03:44,280
myself at Anna from Apogee we do make

00:03:41,250 --> 00:03:48,780
API management software that's why I'm

00:03:44,280 --> 00:03:51,240
talking to you about this today but API

00:03:48,780 --> 00:03:52,560
management does seek to to solve these

00:03:51,240 --> 00:03:55,800
types of things in one way or another

00:03:52,560 --> 00:03:57,630
you will solve these you will need a way

00:03:55,800 --> 00:04:00,810
to either have common security

00:03:57,630 --> 00:04:02,340
authentication between all of your

00:04:00,810 --> 00:04:04,290
workloads all of your apps that are

00:04:02,340 --> 00:04:06,180
exposing api's you can't have ten

00:04:04,290 --> 00:04:09,270
different authentication schemes you

00:04:06,180 --> 00:04:11,400
will need a way to to document your API

00:04:09,270 --> 00:04:13,410
is in a self-service way so that people

00:04:11,400 --> 00:04:17,130
can publish their api's for others to

00:04:13,410 --> 00:04:19,380
use and if you're consuming these api's

00:04:17,130 --> 00:04:21,239
consume them in standard ways and you'll

00:04:19,380 --> 00:04:24,180
need a way to monitor these get your

00:04:21,239 --> 00:04:26,930
analytics and so forth regardless of how

00:04:24,180 --> 00:04:33,139
you're publishing these the

00:04:26,930 --> 00:04:35,240
good news is that within cloud foundry

00:04:33,139 --> 00:04:37,630
there's now a capability called route

00:04:35,240 --> 00:04:40,070
services and there's a number of good

00:04:37,630 --> 00:04:44,509
sessions that are on the conference

00:04:40,070 --> 00:04:46,639
agenda that I encourage you to attend to

00:04:44,509 --> 00:04:49,789
talk about what routes out services are

00:04:46,639 --> 00:04:51,620
and why they're relevant to api's but in

00:04:49,789 --> 00:04:53,870
a nutshell what this is about is

00:04:51,620 --> 00:04:58,100
allowing you to plug into the Cloud

00:04:53,870 --> 00:04:59,509
Foundry go router intercept your HTTP

00:04:58,100 --> 00:05:03,349
traffic in this case specifically your

00:04:59,509 --> 00:05:07,160
API traffic and then doing all of these

00:05:03,349 --> 00:05:09,770
key requirements for being able to go

00:05:07,160 --> 00:05:12,470
and authenticate your API is in a

00:05:09,770 --> 00:05:15,590
standard way do good things like rate

00:05:12,470 --> 00:05:18,500
limiting them and so forth but the

00:05:15,590 --> 00:05:20,599
important thing here is that you want

00:05:18,500 --> 00:05:22,849
just the same way that cloud Cloud

00:05:20,599 --> 00:05:26,000
Foundry makes possible everyone for all

00:05:22,849 --> 00:05:29,479
of your teams to do software right to do

00:05:26,000 --> 00:05:31,550
their apps right by integrating your API

00:05:29,479 --> 00:05:33,800
infrastructure into this you're going to

00:05:31,550 --> 00:05:36,470
ensure that every team does API is right

00:05:33,800 --> 00:05:39,590
and doing api's right means in a

00:05:36,470 --> 00:05:41,270
consistent way across all of your

00:05:39,590 --> 00:05:43,639
applications because if you're api's are

00:05:41,270 --> 00:05:45,979
not consistent if people can't learn how

00:05:43,639 --> 00:05:48,229
to use them you can't secure them in a

00:05:45,979 --> 00:05:53,210
uniform way it defeats the whole purpose

00:05:48,229 --> 00:05:54,110
of doing them so with that in mind your

00:05:53,210 --> 00:05:56,810
goal is

00:05:54,110 --> 00:05:59,240
don't let your infrastructure projects

00:05:56,810 --> 00:06:03,099
turn out like the Tower of Babel the

00:05:59,240 --> 00:06:07,000
original failed infrastructure project

00:06:03,099 --> 00:06:10,220
figure out how to do your API is right

00:06:07,000 --> 00:06:12,259
if you use this opportunity at the

00:06:10,220 --> 00:06:14,419
conference to learn about route services

00:06:12,259 --> 00:06:17,720
learn about how API management can work

00:06:14,419 --> 00:06:20,570
within Cloud Foundry every one of your

00:06:17,720 --> 00:06:24,940
teams can do API is right and you will

00:06:20,570 --> 00:06:24,940
be able to avoid this fate thank you

00:06:26,020 --> 00:06:28,080

YouTube URL: https://www.youtube.com/watch?v=sJ0W_MZ2wyU


