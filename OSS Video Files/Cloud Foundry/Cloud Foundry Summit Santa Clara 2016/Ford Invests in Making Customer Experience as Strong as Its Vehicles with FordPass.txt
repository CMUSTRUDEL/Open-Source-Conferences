Title: Ford Invests in Making Customer Experience as Strong as Its Vehicles with FordPass
Publication date: 2016-05-29
Playlist: Cloud Foundry Summit Santa Clara 2016
Description: 
	Ford Invests in Making Customer Experience as Strong as Its Vehicles with FordPass - Shaji John Thomas & Mohsin Ahmed, Ford Motor Company; Hayden Ryan, Dave Wallraff & Sani Chabi Yo, Pivotal

Creating value through early and frequent delivery of innovative solutions with our business partners as the norm. To do this Ford is working with cloud-based software technology leader Pivotal to build a software platform that will enable the company to rapidly innovate and iterate on new applications and mobility solutions for consumers. This will help with transitioning Ford Motor Company to be both an automobile company and a mobility company by providing an agile development platform to development teams. 

Haydon Ryan
Member of the customer facing PCF Solutions team at Pivotal. Deeply involved in bringing Cloud Foundry to large corporate customers, specifically on AWS and Azure.

Dave Wallraff
Dave Wallraff is a Senior Solutions Architect for Pivotal, helping customers understand and embrace CloudFoundry. He enjoys most of the things, and only breaks some of the things.

Sani Chabi Yo
Sani Chabi Yo is a highly proficient bilingual (French/English) IT professional with more than 10 years of experience. He is currently Cloud Foundry Solutions Architect at Pivotal; a company that is transforming the way enterprises build software. In this hands-on role, he advises global Fortune 100 customers through their journey to digital transformation by leveraging Pivotal Cloud Foundry, Microservices and cloud-native design. Sani has a bachelor degree in Software Engineering as well as a Masters in Engineering from Ecole Polytechnique de Montreal.

Shaji Thomas
Shaji Thomas serves as Team Lead for Global PCF operations at Ford Motor Company. With 20 years on industry experience and serving Ford for 13 years Shaji has led the creation of two new Agile teams at Ford Motor Company, Global Cloud Operation and Pivotal Cloud Operations for Operational Support of Azure, Visualization, Big Data, Devops, and Internet of Things for supporting the Connected Vehicle initiative. In previous roles Shaji has led a team doing infrastructure support for big data analysis using Teradata Data Warehouse and Unix operational support of CAD/CAM/CAE.

Mohsin Ahmed
Mohsin Ahmed is working as Senior Systems Engineer at Ford Motor Company. He has been involved in various enterprise infrastructure design, development and implementation projects for the past 15 years. He has engineered resilient and highly available solutions with VMware virtualization platforms, Microsoft server and cloud infrastructure. His recent engagement has been with the design and implementation of Pivotal Cloud Foundry platform in the Microsoft Azure public cloud to support Fordâ€™s transformation into both an automotive and a mobility company.
Captions: 
	00:00:01,460 --> 00:00:08,490
okay so so it's 4:15 let's get started

00:00:05,180 --> 00:00:11,130
with introductions my name is mo Sinemet

00:00:08,490 --> 00:00:12,809
I'm a senior systems engineer in the

00:00:11,130 --> 00:00:16,800
cloud engineering team at Ford Motor

00:00:12,809 --> 00:00:19,350
Company hello i'm cha G Thomas I'm team

00:00:16,800 --> 00:00:22,140
lead for PCF operations at Porter Motor

00:00:19,350 --> 00:00:23,699
Company alright for those of you that

00:00:22,140 --> 00:00:25,710
don't know me I'm Hayden Ryan I'm a

00:00:23,699 --> 00:00:27,750
Advisory Solutions Architect for pivotal

00:00:25,710 --> 00:00:29,340
I work in the customer delivery team and

00:00:27,750 --> 00:00:33,239
have been out and Dearborne working with

00:00:29,340 --> 00:00:39,210
these guys since October I'm David I

00:00:33,239 --> 00:00:42,149
often I work with Hayden all right so

00:00:39,210 --> 00:00:44,040
let's get into the presentation so it's

00:00:42,149 --> 00:00:46,829
an exciting time to be working in the

00:00:44,040 --> 00:00:48,960
automotive industry there's an immense

00:00:46,829 --> 00:00:51,840
activity going on whether it's in the

00:00:48,960 --> 00:00:53,699
field of connected cars or just in the

00:00:51,840 --> 00:00:56,340
field of self-driving autonomous

00:00:53,699 --> 00:00:58,530
vehicles Ford Motor Company is at the

00:00:56,340 --> 00:01:01,859
forefront of research and innovation in

00:00:58,530 --> 00:01:05,339
all these fields continuously working on

00:01:01,859 --> 00:01:09,630
making products and services that people

00:01:05,339 --> 00:01:11,549
want and value going further on making

00:01:09,630 --> 00:01:14,369
people's lives better Ford recently

00:01:11,549 --> 00:01:16,560
announced its transformation plan with

00:01:14,369 --> 00:01:20,369
the creation of Ford smart mobility a

00:01:16,560 --> 00:01:22,229
fully owned subsidiary to expand from an

00:01:20,369 --> 00:01:25,530
automotive to both an auto and a

00:01:22,229 --> 00:01:27,330
mobility company this strategy will

00:01:25,530 --> 00:01:30,150
allow Ford to stay focused on

00:01:27,330 --> 00:01:32,640
strengthening and focusing on its core

00:01:30,150 --> 00:01:34,890
business which is manufacturing cars

00:01:32,640 --> 00:01:37,409
trucks and utilities and at the same

00:01:34,890 --> 00:01:39,329
time aggressively pursuing emerging

00:01:37,409 --> 00:01:41,460
opportunities through force smart

00:01:39,329 --> 00:01:44,520
mobility to transform the customer

00:01:41,460 --> 00:01:46,829
experience to new dimension transforming

00:01:44,520 --> 00:01:50,850
Foods customer experience is core to our

00:01:46,829 --> 00:01:52,409
strategy the launch of Ford Pass is a

00:01:50,850 --> 00:01:54,990
part of Ford smart mobility I mean

00:01:52,409 --> 00:01:57,060
initiative and the beginning of Ford's

00:01:54,990 --> 00:02:00,060
transition into Auto and mobility

00:01:57,060 --> 00:02:02,850
company Ford had teamed up with pivotal

00:02:00,060 --> 00:02:05,790
to deliver four paths that we launched

00:02:02,850 --> 00:02:08,759
earlier this month over cloud foundry in

00:02:05,790 --> 00:02:11,580
Azure public cloud the popularity of

00:02:08,759 --> 00:02:13,800
uber and lyft clearly demonstrates the

00:02:11,580 --> 00:02:16,350
shift in consumer preferences

00:02:13,800 --> 00:02:18,770
that they are moving towards mobility

00:02:16,350 --> 00:02:21,390
solutions as opposed to auto ownership

00:02:18,770 --> 00:02:23,730
the automotive landscape is changing and

00:02:21,390 --> 00:02:26,640
Ford's initiative with the launch of

00:02:23,730 --> 00:02:31,590
Ford pass will boost the company's

00:02:26,640 --> 00:02:33,990
growth in future Ford pass is not just a

00:02:31,590 --> 00:02:36,630
cloud native application rather it's a

00:02:33,990 --> 00:02:39,420
platform of integrating digital physical

00:02:36,630 --> 00:02:41,310
and personal experiences with four main

00:02:39,420 --> 00:02:42,600
parts which is going to change and

00:02:41,310 --> 00:02:46,350
transform the overall customer

00:02:42,600 --> 00:02:49,260
experience Ford marketplace for mobility

00:02:46,350 --> 00:02:52,560
solutions for guides who are always

00:02:49,260 --> 00:02:55,350
there to help an assist for appreciation

00:02:52,560 --> 00:02:57,770
where members are divided for their

00:02:55,350 --> 00:03:00,870
loyalty and consuming the services and

00:02:57,770 --> 00:03:04,860
Ford hubs where consumers can experience

00:03:00,870 --> 00:03:06,930
and explore our latest innovations it's

00:03:04,860 --> 00:03:09,150
available both on Android and iOS

00:03:06,930 --> 00:03:13,050
platforms and is open to everyone

00:03:09,150 --> 00:03:16,290
whether you own a Ford or not just by

00:03:13,050 --> 00:03:17,790
registering online we believe that great

00:03:16,290 --> 00:03:20,370
experiences build long-term

00:03:17,790 --> 00:03:23,120
relationships from a business business

00:03:20,370 --> 00:03:26,130
standpoint it will drive better loyalty

00:03:23,120 --> 00:03:28,739
bringing new consumers and accelerate

00:03:26,130 --> 00:03:32,280
Ford in becoming a serious player and a

00:03:28,739 --> 00:03:34,320
leader in the mobility sources with the

00:03:32,280 --> 00:03:37,530
launch of Ford pass the journey has just

00:03:34,320 --> 00:03:41,400
started towards making Ford an auto and

00:03:37,530 --> 00:03:44,880
a mobility company next I'd like to

00:03:41,400 --> 00:03:46,770
share a short video that would show the

00:03:44,880 --> 00:03:52,470
features at a Ford pass and give you an

00:03:46,770 --> 00:03:54,230
insight of the platform driven by a

00:03:52,470 --> 00:03:57,120
passion to make people's lives better

00:03:54,230 --> 00:03:58,620
Ford is going further to change how the

00:03:57,120 --> 00:04:01,980
world

00:03:58,620 --> 00:04:05,849
to do this we've created a new product

00:04:01,980 --> 00:04:08,670
platform Ford pass an ecosystem of

00:04:05,849 --> 00:04:11,190
digital physical and personal solutions

00:04:08,670 --> 00:04:14,400
that empower you with more mobility

00:04:11,190 --> 00:04:16,709
options so you can go further the

00:04:14,400 --> 00:04:19,530
digital engine that connects to every

00:04:16,709 --> 00:04:22,889
feature of the ecosystem is the Ford

00:04:19,530 --> 00:04:25,260
Pass app it lets you book a service

00:04:22,889 --> 00:04:28,560
appointment with your local dealer with

00:04:25,260 --> 00:04:32,160
just a few clicks or borrow the vehicle

00:04:28,560 --> 00:04:35,270
you need when you need it for find and

00:04:32,160 --> 00:04:38,280
secure parking spaces in a busy city and

00:04:35,270 --> 00:04:41,910
gain access to the parking garage using

00:04:38,280 --> 00:04:44,340
only your phone when your car is done

00:04:41,910 --> 00:04:45,960
being serviced the Ford Pass app will

00:04:44,340 --> 00:04:49,980
let you know it's ready for pickup and

00:04:45,960 --> 00:04:52,230
provide your service records virtually

00:04:49,980 --> 00:04:55,140
integral to everything is your

00:04:52,230 --> 00:04:57,750
supportive board guide who can solve or

00:04:55,140 --> 00:05:00,780
facilitate any mobility need you might

00:04:57,750 --> 00:05:04,800
have initial Ford hubs in New York

00:05:00,780 --> 00:05:08,670
London Shanghai and San Francisco invite

00:05:04,800 --> 00:05:11,090
you to see shape and experience what the

00:05:08,670 --> 00:05:15,150
transportation of tomorrow could be

00:05:11,090 --> 00:05:17,480
imagine Ford pass guides and hubs all

00:05:15,150 --> 00:05:21,300
working together with cities to provide

00:05:17,480 --> 00:05:23,220
remarkable mobility solutions and best

00:05:21,300 --> 00:05:27,120
of all we can now show our appreciation

00:05:23,220 --> 00:05:29,280
in a few ways with Ford pass points an

00:05:27,120 --> 00:05:30,180
opportunity for us to say thanks for

00:05:29,280 --> 00:05:32,730
your loyalty

00:05:30,180 --> 00:05:37,050
with points you can earn and redeem over

00:05:32,730 --> 00:05:39,360
time and with Ford pass perks benefits

00:05:37,050 --> 00:05:42,300
from affinity partners like McDonald's

00:05:39,360 --> 00:05:45,570
7-eleven before Spotify that can help

00:05:42,300 --> 00:05:48,120
make any journey more enjoyable behind

00:05:45,570 --> 00:05:50,600
the scenes we've built a new way of

00:05:48,120 --> 00:05:53,550
working together to create this fordpass

00:05:50,600 --> 00:05:54,470
ecosystem to give our customers of today

00:05:53,550 --> 00:05:57,200
and tomorrow

00:05:54,470 --> 00:06:02,870
what they need to go further than they

00:05:57,200 --> 00:06:09,530
ever thought possible so forth pass is

00:06:02,870 --> 00:06:11,030
all hosted on Cloud Foundry thank you so

00:06:09,530 --> 00:06:13,460
that was just a glimpse of the forth

00:06:11,030 --> 00:06:15,410
past and it would continuously grow and

00:06:13,460 --> 00:06:18,200
evolve there are more features being

00:06:15,410 --> 00:06:20,510
added like locating your vehicle lock

00:06:18,200 --> 00:06:24,500
unlock and remote start of your cars

00:06:20,510 --> 00:06:26,540
ride from smartphones the scope of rest

00:06:24,500 --> 00:06:28,790
of the presentation is around the

00:06:26,540 --> 00:06:31,250
infrastructure design development and

00:06:28,790 --> 00:06:33,440
implementation of Cloud Foundry on the

00:06:31,250 --> 00:06:36,560
Azure public cloud that provided a

00:06:33,440 --> 00:06:38,540
platform to host for pass next my

00:06:36,560 --> 00:06:41,090
colleague Shari Thomas will walk us

00:06:38,540 --> 00:06:44,030
through the plan build an operate model

00:06:41,090 --> 00:06:45,950
and how we transformed the IT side to

00:06:44,030 --> 00:06:58,280
achieve our goal of launching for pass

00:06:45,950 --> 00:07:00,350
on Cloud Foundry oh gee thanks Molson so

00:06:58,280 --> 00:07:02,570
how was this poor company a traditional

00:07:00,350 --> 00:07:05,570
company able to develop a forward pass

00:07:02,570 --> 00:07:06,950
app using the PCF infrastructure this is

00:07:05,570 --> 00:07:10,910
a much different than how we

00:07:06,950 --> 00:07:13,669
traditionally do it we're a very process

00:07:10,910 --> 00:07:18,229
driven company with lots of meetings to

00:07:13,669 --> 00:07:20,390
go through and processes to follow the

00:07:18,229 --> 00:07:22,400
old way we would have the app team would

00:07:20,390 --> 00:07:25,130
come to our solutions customer solutions

00:07:22,400 --> 00:07:27,050
team and they would work with our global

00:07:25,130 --> 00:07:28,010
fulfillment planning team who would work

00:07:27,050 --> 00:07:30,560
with our global fulfillment

00:07:28,010 --> 00:07:31,940
implementation team and then they would

00:07:30,560 --> 00:07:34,910
end up working with our engineering team

00:07:31,940 --> 00:07:38,660
who would give us the final a checklist

00:07:34,910 --> 00:07:41,650
to do a deployment but we wanted to move

00:07:38,660 --> 00:07:43,790
to the zero time zero downtime upgrades

00:07:41,650 --> 00:07:46,010
and to be able to deploy within minutes

00:07:43,790 --> 00:07:49,370
so we started moving to more of

00:07:46,010 --> 00:07:52,550
self-service tools to give our cut our

00:07:49,370 --> 00:07:54,940
end customers meaning the app teams more

00:07:52,550 --> 00:07:57,229
self-service tools like the API manager

00:07:54,940 --> 00:07:59,150
and they were able now they're able to

00:07:57,229 --> 00:08:01,970
do their CF push themselves as opposed

00:07:59,150 --> 00:08:03,860
to involving our team the operations

00:08:01,970 --> 00:08:07,910
team they can roll their changes from

00:08:03,860 --> 00:08:10,030
dev QA to prod so

00:08:07,910 --> 00:08:13,130
the company was very risk adverse

00:08:10,030 --> 00:08:15,890
failure at automotive companies can mean

00:08:13,130 --> 00:08:17,930
bankruptcy it can you write some bad

00:08:15,890 --> 00:08:21,860
code and 15 years later can come back

00:08:17,930 --> 00:08:24,140
and through the NTSB they have recalls

00:08:21,860 --> 00:08:26,930
why is it emitting so many so much

00:08:24,140 --> 00:08:29,240
emissions and you have to explain some

00:08:26,930 --> 00:08:29,480
code bad code that you wrote 15 20 years

00:08:29,240 --> 00:08:31,520
ago

00:08:29,480 --> 00:08:32,990
so and then you have to go through a

00:08:31,520 --> 00:08:37,430
whole recall process it's a very

00:08:32,990 --> 00:08:39,530
time-consuming and painful process so as

00:08:37,430 --> 00:08:42,349
I said it we use the plan build operate

00:08:39,530 --> 00:08:44,510
modern so planning and architecture will

00:08:42,349 --> 00:08:45,890
build an idea then engineering will make

00:08:44,510 --> 00:08:52,340
sure it works and then they hand over a

00:08:45,890 --> 00:08:56,720
checklist to us to to fulfill to build

00:08:52,340 --> 00:08:59,140
it this produces a high quality final

00:08:56,720 --> 00:08:59,140
product

00:09:04,170 --> 00:09:08,910
so what are the processes we had to work

00:09:07,530 --> 00:09:11,100
through was how do we coordinate three

00:09:08,910 --> 00:09:12,840
companies working together so

00:09:11,100 --> 00:09:14,370
traditionally a Ford we had an incident

00:09:12,840 --> 00:09:17,340
manager that would coordinate all the

00:09:14,370 --> 00:09:18,540
different teams and if we had outage

00:09:17,340 --> 00:09:21,030
they would coordinate the global cloud

00:09:18,540 --> 00:09:22,740
Operations teams with the PCF operations

00:09:21,030 --> 00:09:24,180
team and they would with the incident

00:09:22,740 --> 00:09:26,340
manager would interface with my upper

00:09:24,180 --> 00:09:29,310
management and explain when what's

00:09:26,340 --> 00:09:31,890
happening but now we have Microsoft edge

00:09:29,310 --> 00:09:34,980
or we have pivotal we have our team and

00:09:31,890 --> 00:09:37,050
all our sub teams so now we integrated

00:09:34,980 --> 00:09:39,090
that with our with what the incident

00:09:37,050 --> 00:09:40,050
manager team that we have and we

00:09:39,090 --> 00:09:41,880
integrate that with the critical

00:09:40,050 --> 00:09:44,310
situation team that Microsoft has and

00:09:41,880 --> 00:09:56,760
then the on-site engineers that pivotal

00:09:44,310 --> 00:09:58,740
has so how do we move forward to this

00:09:56,760 --> 00:10:00,320
new agile environment so we had to go

00:09:58,740 --> 00:10:04,020
through and break our normal operations

00:10:00,320 --> 00:10:05,580
we traditionally if we had any scheduled

00:10:04,020 --> 00:10:07,650
operations activity had to be done

00:10:05,580 --> 00:10:09,560
during our maintenance window which is

00:10:07,650 --> 00:10:13,890
usually 3:00 a.m. in the morning to

00:10:09,560 --> 00:10:15,810
11:00 a.m. on Sundays and to do an

00:10:13,890 --> 00:10:17,280
upgrade during that time we would have

00:10:15,810 --> 00:10:19,710
to fill out what would we what's called

00:10:17,280 --> 00:10:21,690
a geek or a global infrastructure change

00:10:19,710 --> 00:10:23,580
requests all global infrastructure

00:10:21,690 --> 00:10:26,250
change requests have to be filled out 10

00:10:23,580 --> 00:10:27,780
days in advance so there's a waiting

00:10:26,250 --> 00:10:30,590
period and then in those 10 days it

00:10:27,780 --> 00:10:33,240
gives any manager or 1/2 team

00:10:30,590 --> 00:10:35,940
opportunity to reject the change and

00:10:33,240 --> 00:10:38,970
push it off so if we had a patch it

00:10:35,940 --> 00:10:41,790
would have to wait until it gets through

00:10:38,970 --> 00:10:44,490
the whole system there also have we also

00:10:41,790 --> 00:10:45,720
have these traditional freezes they get

00:10:44,490 --> 00:10:48,060
the Christmas trees we have an audition

00:10:45,720 --> 00:10:51,630
freeze we have a quarterly freeze for

00:10:48,060 --> 00:10:54,960
doing the financials but now with the

00:10:51,630 --> 00:10:57,240
with using CF we're using the IT

00:10:54,960 --> 00:11:00,270
advisory method so basically you sign up

00:10:57,240 --> 00:11:03,360
for a bulk mailing list and when we do a

00:11:00,270 --> 00:11:05,190
deployment or an upgrade we just send an

00:11:03,360 --> 00:11:07,590
IT advisory out that the system is

00:11:05,190 --> 00:11:09,990
getting upgraded dramatically reduced

00:11:07,590 --> 00:11:13,890
anytime that it goes it takes to go

00:11:09,990 --> 00:11:15,600
through an upgrade so on this slide I

00:11:13,890 --> 00:11:18,060
wanted to talk a little bit have how

00:11:15,600 --> 00:11:19,740
pivotal what pivotal gave us and how

00:11:18,060 --> 00:11:22,980
made it working forward so we had to

00:11:19,740 --> 00:11:25,320
kind of blend the two two approaches so

00:11:22,980 --> 00:11:27,150
with monitoring and alerting pibil was

00:11:25,320 --> 00:11:28,950
successfully using data dog and they

00:11:27,150 --> 00:11:31,170
were starting to use the alt tile for

00:11:28,950 --> 00:11:33,120
monitoring but at ford we had a lot of

00:11:31,170 --> 00:11:34,920
experience using Splunk so we were able

00:11:33,120 --> 00:11:37,200
to create dashboards using Splunk model

00:11:34,920 --> 00:11:37,620
after what pivotal was doing using data

00:11:37,200 --> 00:11:40,140
dog

00:11:37,620 --> 00:11:42,420
we put syslog relay servers and heavy

00:11:40,140 --> 00:11:44,100
forwarders in the cloud both on east and

00:11:42,420 --> 00:11:48,120
west and as your for production and

00:11:44,100 --> 00:11:49,800
pre-production then we would move the

00:11:48,120 --> 00:11:53,130
jam mix data back to fort the four

00:11:49,800 --> 00:11:54,990
dashboards and forts network is closed

00:11:53,130 --> 00:11:57,450
off it's a private you know from the

00:11:54,990 --> 00:11:59,790
internet so we had to put another syslog

00:11:57,450 --> 00:12:02,070
relay server and heavy forward in our

00:11:59,790 --> 00:12:05,850
DMZ to forward that data back to our

00:12:02,070 --> 00:12:08,010
dashboards the next thing that we had to

00:12:05,850 --> 00:12:09,480
blend together was the jump servers the

00:12:08,010 --> 00:12:11,850
template that was provided to us from

00:12:09,480 --> 00:12:14,820
from Microsoft was using a bun to but

00:12:11,850 --> 00:12:20,490
afford worse slice shot so we had to go

00:12:14,820 --> 00:12:24,150
through and and rework of it so we have

00:12:20,490 --> 00:12:25,560
a ton of tools that use less the part

00:12:24,150 --> 00:12:27,450
password vault in tool which would go in

00:12:25,560 --> 00:12:29,430
and automatically change the password

00:12:27,450 --> 00:12:31,140
all these things so we needed to get a

00:12:29,430 --> 00:12:33,360
sledge tool so we're currently working

00:12:31,140 --> 00:12:35,850
with our Linux engineering team to come

00:12:33,360 --> 00:12:38,760
up with a ford OS version for the sleds

00:12:35,850 --> 00:12:40,470
in the cloud we're also trying to

00:12:38,760 --> 00:12:43,080
recycle our processes for incident

00:12:40,470 --> 00:12:46,170
management and requests requests and

00:12:43,080 --> 00:12:48,180
then problem management's so now we are

00:12:46,170 --> 00:12:50,610
moving on to our global launch which

00:12:48,180 --> 00:12:53,940
will soon be deploying into China on the

00:12:50,610 --> 00:13:04,380
21 by net cloud as well as Europe and

00:12:53,940 --> 00:13:07,460
Asia Pacific so I'm gonna talk briefly

00:13:04,380 --> 00:13:11,700
about what we chose to deploy at at Ford

00:13:07,460 --> 00:13:13,770
we deployed PC f15 at the time one six

00:13:11,700 --> 00:13:15,960
was out but one five was a little more

00:13:13,770 --> 00:13:18,270
stable and going forward at the very

00:13:15,960 --> 00:13:19,140
bleeding edge as we are on Azure we want

00:13:18,270 --> 00:13:21,960
to give them something a little more

00:13:19,140 --> 00:13:23,970
stable we deployed rabbit and my sequel

00:13:21,960 --> 00:13:25,560
to support the spring cloud services for

00:13:23,970 --> 00:13:27,480
service discovery and config

00:13:25,560 --> 00:13:30,690
management's we deployed the gem fire

00:13:27,480 --> 00:13:31,710
PCF tile for data sync and ops metrics

00:13:30,690 --> 00:13:35,880
for the JMX

00:13:31,710 --> 00:13:37,800
endpoints one of the first major

00:13:35,880 --> 00:13:40,950
discussions that we had was which load

00:13:37,800 --> 00:13:42,630
balancer to use 40 uses at fives on Prem

00:13:40,950 --> 00:13:44,460
they have very good knowledge with it

00:13:42,630 --> 00:13:45,270
they're very used to doing it but they

00:13:44,460 --> 00:13:46,350
wanted to try something a little

00:13:45,270 --> 00:13:48,450
different when they moved to Azure

00:13:46,350 --> 00:13:50,340
obviously we could've gone ata proxy

00:13:48,450 --> 00:13:51,750
tried-and-true but you can't get Bosh

00:13:50,340 --> 00:13:54,210
mad if they see a proxy as your edge

00:13:51,750 --> 00:13:55,850
device without with zero downtime so in

00:13:54,210 --> 00:13:58,470
the end we decided to go with the azure

00:13:55,850 --> 00:14:01,050
primitives particularly the add your low

00:13:58,470 --> 00:14:03,480
bouncer as their edge device as you can

00:14:01,050 --> 00:14:05,820
see here so the as your load balancer

00:14:03,480 --> 00:14:07,560
sits on the edge and forwards traffic to

00:14:05,820 --> 00:14:09,630
H a proxy which are then bashed managed

00:14:07,560 --> 00:14:11,730
to give us that Bosh goodness where we

00:14:09,630 --> 00:14:13,680
terminate SSL and forward traffic into

00:14:11,730 --> 00:14:15,330
the go riders so this is the the rough

00:14:13,680 --> 00:14:17,850
diagram of what a single foundation

00:14:15,330 --> 00:14:19,770
looks like because then we had the next

00:14:17,850 --> 00:14:21,570
topology question of single or dual

00:14:19,770 --> 00:14:23,970
deployment obviously we wanted to go as

00:14:21,570 --> 00:14:26,550
many deployments as possible for H a but

00:14:23,970 --> 00:14:27,930
that leads to other questions for it has

00:14:26,550 --> 00:14:29,220
the vehicle Sdn which is one of their

00:14:27,930 --> 00:14:30,510
products that a lot of the apps are you

00:14:29,220 --> 00:14:32,730
need to integrate into that's only

00:14:30,510 --> 00:14:34,350
available in certain regions this

00:14:32,730 --> 00:14:36,150
influenced our design as to where we're

00:14:34,350 --> 00:14:37,500
going to deploy also there were certain

00:14:36,150 --> 00:14:40,470
latency requirements that we had to take

00:14:37,500 --> 00:14:41,760
into accounts we decided to go at the

00:14:40,470 --> 00:14:44,280
end of the day with the active active

00:14:41,760 --> 00:14:45,900
east-west deployments again utilizing

00:14:44,280 --> 00:14:49,050
the azure primitives of the traffic

00:14:45,900 --> 00:14:51,270
manager for the gtlm DNS that points to

00:14:49,050 --> 00:14:53,580
the azure load balancers feeding traffic

00:14:51,270 --> 00:14:55,770
and and using the gem fire land

00:14:53,580 --> 00:15:00,600
replication to handle data sync between

00:14:55,770 --> 00:15:02,220
the regions the active active allows for

00:15:00,600 --> 00:15:04,260
many good things including the

00:15:02,220 --> 00:15:05,610
maintenance we can take down one side

00:15:04,260 --> 00:15:07,380
and still have full traffic on the other

00:15:05,610 --> 00:15:08,280
side for the troubleshooting maintenance

00:15:07,380 --> 00:15:10,200
that needs to happen

00:15:08,280 --> 00:15:11,760
downtime does happen this is the real

00:15:10,200 --> 00:15:13,980
world things happen so it's good to have

00:15:11,760 --> 00:15:22,050
both sides active should one of those

00:15:13,980 --> 00:15:23,370
things fall down okay so let's uh let's

00:15:22,050 --> 00:15:25,260
jump into a little bit of a primer

00:15:23,370 --> 00:15:28,530
around some of the best practices

00:15:25,260 --> 00:15:30,690
lessons learned and an advice we would

00:15:28,530 --> 00:15:34,380
give to people that want to deploy to

00:15:30,690 --> 00:15:36,390
Asia we're going to cover a couple mini

00:15:34,380 --> 00:15:38,880
topics here I'm gonna keep this

00:15:36,390 --> 00:15:40,170
reasonably brief John sermon from

00:15:38,880 --> 00:15:42,330
Microsoft and I have a session tomorrow

00:15:40,170 --> 00:15:43,770
which is basically an open forum where

00:15:42,330 --> 00:15:44,760
we're going to be discussing a lot of

00:15:43,770 --> 00:15:46,080
these you know what

00:15:44,760 --> 00:15:48,420
debts and throwing it open to questions

00:15:46,080 --> 00:15:50,490
so we invite you to come along and ask

00:15:48,420 --> 00:15:53,130
us more questions based on what you're

00:15:50,490 --> 00:15:55,650
about to hear here so the things that I

00:15:53,130 --> 00:15:57,540
want to cover sets these are not

00:15:55,650 --> 00:16:00,900
availability zones that you'd probably

00:15:57,540 --> 00:16:02,880
be aware of they use fault domains and

00:16:00,900 --> 00:16:05,340
we'll talk about those in a minute talk

00:16:02,880 --> 00:16:07,100
about the TCP keepalive which and I

00:16:05,340 --> 00:16:09,360
think everybody on the stage and

00:16:07,100 --> 00:16:10,620
everybody at forward and Microsoft and

00:16:09,360 --> 00:16:12,590
quite a few of you from pivotal will

00:16:10,620 --> 00:16:18,810
agree this is one of the most pivotal

00:16:12,590 --> 00:16:21,900
excuse the pun features to enable when

00:16:18,810 --> 00:16:23,670
you're deploying to Azure I also want to

00:16:21,900 --> 00:16:28,350
talk very briefly and just kind of touch

00:16:23,670 --> 00:16:29,850
on the Boche as your CPI and then talk a

00:16:28,350 --> 00:16:34,890
little bit about storage accounts and

00:16:29,850 --> 00:16:36,210
what they are okay so at pivotal we

00:16:34,890 --> 00:16:39,930
talked about the four levels of high

00:16:36,210 --> 00:16:41,970
availability one of those is using

00:16:39,930 --> 00:16:45,030
availability zones to provide resiliency

00:16:41,970 --> 00:16:47,700
when you've got multiple jobs so for

00:16:45,030 --> 00:16:49,110
instance if you've got har oxy you want

00:16:47,700 --> 00:16:51,000
to have that in a separate availability

00:16:49,110 --> 00:16:53,130
zone or a separate fault domain to

00:16:51,000 --> 00:16:54,980
provide resiliency in case that fault

00:16:53,130 --> 00:16:57,210
domain or availability zone goes down

00:16:54,980 --> 00:17:00,180
Asher has a slightly different concept

00:16:57,210 --> 00:17:01,980
and it's pretty cool so what it what

00:17:00,180 --> 00:17:04,620
happens is it's actually perpendicular

00:17:01,980 --> 00:17:06,510
to a fault to mate so as your is super

00:17:04,620 --> 00:17:08,880
smart and all you need to do is say hey

00:17:06,510 --> 00:17:11,520
this job is part of an availability set

00:17:08,880 --> 00:17:13,199
and then as you will take those vm's and

00:17:11,520 --> 00:17:16,350
automatically deploy them across fault

00:17:13,199 --> 00:17:18,510
domains so a pretty cool tech one of the

00:17:16,350 --> 00:17:21,120
unfortunate things about it being so

00:17:18,510 --> 00:17:23,370
smart is that bosch also expects to be

00:17:21,120 --> 00:17:26,459
in control all right so that causes a

00:17:23,370 --> 00:17:28,079
slight conflict but as you can see when

00:17:26,459 --> 00:17:31,980
we go to the next slide it still works

00:17:28,079 --> 00:17:34,320
pretty well right it's important to note

00:17:31,980 --> 00:17:36,300
that as your treats a single virtual

00:17:34,320 --> 00:17:37,800
machine quite differently to a virtual

00:17:36,300 --> 00:17:39,870
machine as part of an availability set

00:17:37,800 --> 00:17:41,370
all right there is a lot more

00:17:39,870 --> 00:17:43,680
notification that happens if it's a

00:17:41,370 --> 00:17:46,140
single virtual machine so we still do

00:17:43,680 --> 00:17:48,060
have singleton jobs in our deployment so

00:17:46,140 --> 00:17:49,770
we left those as not part of an

00:17:48,060 --> 00:17:53,030
availability set so not part of a

00:17:49,770 --> 00:17:55,850
availability set of one that makes sense

00:17:53,030 --> 00:17:57,810
but yeah it's it's important if you have

00:17:55,850 --> 00:17:58,590
highly available jobs that you're

00:17:57,810 --> 00:18:00,750
deploying more

00:17:58,590 --> 00:18:07,020
one instance of to put them into an

00:18:00,750 --> 00:18:08,549
availability set okay so what happens in

00:18:07,020 --> 00:18:10,650
an availability set if you specify

00:18:08,549 --> 00:18:13,409
something here for instance let's say

00:18:10,650 --> 00:18:16,010
these are Nats films and you specify an

00:18:13,409 --> 00:18:19,980
availability set called a s - CF - Nats

00:18:16,010 --> 00:18:23,720
if one of these VMs goes away as you

00:18:19,980 --> 00:18:23,720
will automatically bring it back

00:18:24,169 --> 00:18:29,669
probably in another fault - name right

00:18:27,179 --> 00:18:31,919
so it automatically handles that for you

00:18:29,669 --> 00:18:33,659
you don't need to split your resource

00:18:31,919 --> 00:18:36,419
pools into two sections and define

00:18:33,659 --> 00:18:41,610
different regions or availability zones

00:18:36,419 --> 00:18:44,179
it's simply a one line entry into the

00:18:41,610 --> 00:18:47,240
cloud properties of the resource pools

00:18:44,179 --> 00:18:49,590
so hopefully everybody recognizes this

00:18:47,240 --> 00:18:53,549
part and parcel of doing bosh deployed

00:18:49,590 --> 00:18:54,870
CF these are some of the cloud

00:18:53,549 --> 00:18:56,399
properties that you have with Azure so

00:18:54,870 --> 00:18:58,100
you have an instance type which defines

00:18:56,399 --> 00:18:59,940
the size of the VM obviously

00:18:58,100 --> 00:19:02,100
availability sets and then you can

00:18:59,940 --> 00:19:03,809
define storage accounts that back these

00:19:02,100 --> 00:19:07,340
virtual machines so we'll talk about

00:19:03,809 --> 00:19:07,340
that in a minute

00:19:07,820 --> 00:19:12,570
one of the key moments for us as I

00:19:09,960 --> 00:19:14,850
mentioned before was when we found that

00:19:12,570 --> 00:19:17,640
there were some networking issues that

00:19:14,850 --> 00:19:22,020
we were observing when deploying CF on

00:19:17,640 --> 00:19:25,230
Azure and this is basically because of

00:19:22,020 --> 00:19:27,450
the way the agile load balancer works so

00:19:25,230 --> 00:19:30,390
we were advised by Microsoft to include

00:19:27,450 --> 00:19:35,580
a TCP keep alive which Dimitri very

00:19:30,390 --> 00:19:38,429
quickly made a release for and we

00:19:35,580 --> 00:19:41,730
deployed it using a the Bosh update

00:19:38,429 --> 00:19:43,169
runtime config alright so we say that

00:19:41,730 --> 00:19:46,260
this is required for any Azure

00:19:43,169 --> 00:19:48,659
environment personally seeing it go from

00:19:46,260 --> 00:19:51,809
not stable to stable right in terms of

00:19:48,659 --> 00:19:56,149
networking issues networking issues - no

00:19:51,809 --> 00:19:56,149
networking issues right so paramount

00:19:56,299 --> 00:20:02,429
I've also included some information

00:19:58,470 --> 00:20:04,919
around how to actually deploy this again

00:20:02,429 --> 00:20:10,440
thanks Dimitri Ben black and everybody

00:20:04,919 --> 00:20:11,970
involved and then again just touching on

00:20:10,440 --> 00:20:14,669
the CPI

00:20:11,970 --> 00:20:16,590
Microsoft has been super responsive to

00:20:14,669 --> 00:20:18,620
all of the feature requests and all of

00:20:16,590 --> 00:20:22,500
the bug reports that we've put in and

00:20:18,620 --> 00:20:24,720
rapidly iterating over their CPI with

00:20:22,500 --> 00:20:27,419
the release of CPI V 11 there are some

00:20:24,720 --> 00:20:28,770
important patches that have gone into

00:20:27,419 --> 00:20:31,590
that that we recommend that everybody

00:20:28,770 --> 00:20:34,080
uses but be aware that when deploying

00:20:31,590 --> 00:20:36,510
with Azure you will be iterating over

00:20:34,080 --> 00:20:38,429
what CPI you're using quite regularly

00:20:36,510 --> 00:20:41,940
all right this is a good thing

00:20:38,429 --> 00:20:45,289
because we want rapid development right

00:20:41,940 --> 00:20:45,289
rapid development is fantastic

00:20:46,220 --> 00:20:51,690
okay so let's touch briefly on storage

00:20:48,750 --> 00:20:55,650
accounts currently the Windows Azure

00:20:51,690 --> 00:20:57,900
storage system that backs all of the

00:20:55,650 --> 00:21:00,450
Cloud Foundry deployments does have some

00:20:57,900 --> 00:21:02,280
limitations in storage accounts so the

00:21:00,450 --> 00:21:05,700
storage accounts for a regular storage

00:21:02,280 --> 00:21:07,679
have an i UPS limit of 20,000 cups right

00:21:05,700 --> 00:21:09,330
this means that each storage account can

00:21:07,679 --> 00:21:12,059
service approximately 40 virtual

00:21:09,330 --> 00:21:14,700
machines alright so for a POC that's

00:21:12,059 --> 00:21:16,470
fine because if you're in the Microsoft

00:21:14,700 --> 00:21:18,240
talk a little bit earlier today you

00:21:16,470 --> 00:21:20,789
would have heard that they deployed

00:21:18,240 --> 00:21:22,470
about 36 VMs right that's fine but as

00:21:20,789 --> 00:21:24,240
you start to scale in a large enterprise

00:21:22,470 --> 00:21:26,580
environment you need to be super

00:21:24,240 --> 00:21:29,539
cognizant of what your storage accounts

00:21:26,580 --> 00:21:32,549
are that back your virtual machines

00:21:29,539 --> 00:21:34,890
right so at forward what we did was each

00:21:32,549 --> 00:21:37,080
deployment had a separate storage

00:21:34,890 --> 00:21:39,059
account so we deployed gem fire that had

00:21:37,080 --> 00:21:40,799
a separate storage account unless it was

00:21:39,059 --> 00:21:42,350
a super big deployment of gem fire and

00:21:40,799 --> 00:21:45,780
then it had multiple storage accounts

00:21:42,350 --> 00:21:47,309
same with CF we deployed CF with one

00:21:45,780 --> 00:21:49,500
storage account for everything except

00:21:47,309 --> 00:21:53,909
for the runners and that was a separate

00:21:49,500 --> 00:21:56,850
storage account so again that's how you

00:21:53,909 --> 00:21:58,230
define a storage account one of the

00:21:56,850 --> 00:21:59,580
final recommendations that we received

00:21:58,230 --> 00:22:02,970
from Microsoft was to use premium

00:21:59,580 --> 00:22:04,440
storage over regular storage we saw a 25

00:22:02,970 --> 00:22:07,020
to hundred percent real-world increase

00:22:04,440 --> 00:22:08,940
in performance apparently there is a

00:22:07,020 --> 00:22:12,210
lower fault rate we didn't see any

00:22:08,940 --> 00:22:15,299
faults so that was great and there is a

00:22:12,210 --> 00:22:16,890
documented migration methodology right

00:22:15,299 --> 00:22:19,740
that we can we can run through at the

00:22:16,890 --> 00:22:21,299
end if we have a little bit more time so

00:22:19,740 --> 00:22:23,840
I'll pass it back to motion for some of

00:22:21,299 --> 00:22:26,370
the engineering challenges

00:22:23,840 --> 00:22:29,700
so we encountered a number of challenges

00:22:26,370 --> 00:22:32,700
and those of you that were a part of the

00:22:29,700 --> 00:22:34,320
keynote in the morning I could relate to

00:22:32,700 --> 00:22:36,810
the comments of the speaker for all

00:22:34,320 --> 00:22:40,380
state that it wasn't all rainbow and

00:22:36,810 --> 00:22:42,090
butterflies we had a set of challenges

00:22:40,380 --> 00:22:45,000
that we work towards resolving and

00:22:42,090 --> 00:22:48,090
finding the workarounds so starting off

00:22:45,000 --> 00:22:51,030
we had pretty much issues around compute

00:22:48,090 --> 00:22:54,270
storage and network for example on the

00:22:51,030 --> 00:22:58,350
compute side the the ratio of the memory

00:22:54,270 --> 00:23:00,900
to course I didn't have a flexible

00:22:58,350 --> 00:23:03,540
offering especially for gem fire we were

00:23:00,900 --> 00:23:05,760
looking at a higher memory VM as opposed

00:23:03,540 --> 00:23:08,400
to a higher core but we ended up

00:23:05,760 --> 00:23:10,350
consuming higher core count and since 4

00:23:08,400 --> 00:23:13,320
we are being charged by the core there's

00:23:10,350 --> 00:23:14,910
a cost implication for that as Hayden

00:23:13,320 --> 00:23:18,080
mentioned we transitioned and migrated

00:23:14,910 --> 00:23:20,430
from standard to premium storage and

00:23:18,080 --> 00:23:23,150
there is still we are waiting for the

00:23:20,430 --> 00:23:25,680
availability of availability zones

00:23:23,150 --> 00:23:28,950
around the network side the whole

00:23:25,680 --> 00:23:30,680
process of SSL termination encrypting

00:23:28,950 --> 00:23:35,220
the data in flight and at rest and

00:23:30,680 --> 00:23:39,570
overall failover an application using

00:23:35,220 --> 00:23:41,280
the security for wild cards as the cells

00:23:39,570 --> 00:23:44,250
in DNS that was the requirement by

00:23:41,280 --> 00:23:46,650
pivotal to be supported which was new to

00:23:44,250 --> 00:23:49,590
the fort since we've never done it and

00:23:46,650 --> 00:23:51,990
there was some concerns which were valid

00:23:49,590 --> 00:23:54,240
so we did work around those by

00:23:51,990 --> 00:23:56,880
developing a solid onboarding process

00:23:54,240 --> 00:23:59,340
for developers and putting controls in

00:23:56,880 --> 00:24:03,570
place for promoting code from lower to

00:23:59,340 --> 00:24:06,150
higher environments the open source

00:24:03,570 --> 00:24:09,450
components Ford has a very stringent

00:24:06,150 --> 00:24:11,100
review process for contracts with the

00:24:09,450 --> 00:24:14,310
licensing and terms and conditions and

00:24:11,100 --> 00:24:16,320
with pivotal using all open source we

00:24:14,310 --> 00:24:19,290
had to go through the entire review

00:24:16,320 --> 00:24:21,180
process with the legal team that has

00:24:19,290 --> 00:24:25,620
been now streamline to allow for quick

00:24:21,180 --> 00:24:27,060
approval on the agile site from our

00:24:25,620 --> 00:24:30,210
experience we've seen there is a lack of

00:24:27,060 --> 00:24:32,850
robust toolset on the four pivotal on

00:24:30,210 --> 00:24:36,960
the edge of space the product is more

00:24:32,850 --> 00:24:39,270
mature in AWS and VMware

00:24:36,960 --> 00:24:40,590
and we have some enhancement requests

00:24:39,270 --> 00:24:42,120
that have been worked on especially

00:24:40,590 --> 00:24:45,510
around the availability of office

00:24:42,120 --> 00:24:47,900
manager in Azure on the documentation

00:24:45,510 --> 00:24:50,730
side we we saw some gaps so there is a

00:24:47,900 --> 00:24:54,270
potential for some improvement hiding

00:24:50,730 --> 00:24:58,470
some more details in alignment for

00:24:54,270 --> 00:25:01,940
logging since as shaji mentioned we are

00:24:58,470 --> 00:25:04,740
using Splunk and when we initially

00:25:01,940 --> 00:25:07,740
configured fire hose to syslog that

00:25:04,740 --> 00:25:10,080
opened up the floodgates for logs on the

00:25:07,740 --> 00:25:13,290
Splunk side we are charred by the amount

00:25:10,080 --> 00:25:15,510
of data and is expensive so we had to do

00:25:13,290 --> 00:25:19,170
the filtering at the syslog level due to

00:25:15,510 --> 00:25:21,570
filter the logs for monitoring we did a

00:25:19,170 --> 00:25:24,210
lot of work with the gmx and offs

00:25:21,570 --> 00:25:26,100
metrics integration with Splunk creating

00:25:24,210 --> 00:25:29,400
dashboard and alerts for our operations

00:25:26,100 --> 00:25:32,610
teams on gem far we've seen that there

00:25:29,400 --> 00:25:35,460
is some scalability with the plans that

00:25:32,610 --> 00:25:37,410
you can have in the manifest for

00:25:35,460 --> 00:25:39,900
scalability we are going through an

00:25:37,410 --> 00:25:42,860
exercise right now for doing the right

00:25:39,900 --> 00:25:45,630
sizing for the environment for ad FS

00:25:42,860 --> 00:25:47,700
it's about getting the right metadata

00:25:45,630 --> 00:25:53,310
and using the proper claims for

00:25:47,700 --> 00:25:54,810
authentication I would say right now the

00:25:53,310 --> 00:25:55,650
pivotal out boundary the phase we are

00:25:54,810 --> 00:25:58,020
going through is high maintenance

00:25:55,650 --> 00:26:01,380
because of the the continuous iteration

00:25:58,020 --> 00:26:05,640
on the platform side as well the the

00:26:01,380 --> 00:26:09,960
frequent release of bar CPI stem cells

00:26:05,640 --> 00:26:13,200
and CF services like RabbitMQ gem fire

00:26:09,960 --> 00:26:16,250
and spring cloud services requires us to

00:26:13,200 --> 00:26:19,350
continuously patch upgrade and rollout

00:26:16,250 --> 00:26:23,670
we are working on automation and overall

00:26:19,350 --> 00:26:26,970
patching process to streamline it that

00:26:23,670 --> 00:26:29,280
concludes our presentation and before we

00:26:26,970 --> 00:26:29,970
open the stage for open up the floor for

00:26:29,280 --> 00:26:32,340
Q&A

00:26:29,970 --> 00:26:36,320
I like Hayden to give a final message to

00:26:32,340 --> 00:26:39,360
the audience thanks Mason

00:26:36,320 --> 00:26:41,640
so I basically wanted to say thank you

00:26:39,360 --> 00:26:44,960
to everybody that's been involved at the

00:26:41,640 --> 00:26:49,230
Ford account across Ford Motor Company

00:26:44,960 --> 00:26:52,320
pivotal and Microsoft right

00:26:49,230 --> 00:26:54,780
I see very much deployments on Asia as

00:26:52,320 --> 00:26:56,910
being awesome and only getting better

00:26:54,780 --> 00:26:58,049
from here on in all right so the fact

00:26:56,910 --> 00:27:00,360
that we have this concept called

00:26:58,049 --> 00:27:03,240
availability sets as we start to use

00:27:00,360 --> 00:27:05,970
this more and we see other people use

00:27:03,240 --> 00:27:07,740
this in addition to availability zones

00:27:05,970 --> 00:27:09,450
which is coming and managed discs which

00:27:07,740 --> 00:27:11,850
will remove all of the limitations with

00:27:09,450 --> 00:27:14,460
storage accounts azure is actually going

00:27:11,850 --> 00:27:17,010
to be able to provide probably a fifth

00:27:14,460 --> 00:27:18,990
level of high availability right on top

00:27:17,010 --> 00:27:20,820
of all the other levels that Cloud

00:27:18,990 --> 00:27:23,640
Foundry automatically provides for you

00:27:20,820 --> 00:27:27,510
so again thank you to everybody involved

00:27:23,640 --> 00:27:31,200
and shout out to Duncan Wynn Keep Calm

00:27:27,510 --> 00:27:38,640
and see if push on Microsoft Azure thank

00:27:31,200 --> 00:27:41,240
you so how are we going on time do we

00:27:38,640 --> 00:27:41,240
have time for questions

00:27:49,850 --> 00:28:02,850
I'd love to commit forward to that yes

00:28:00,570 --> 00:28:04,559
so again big shout out especially to

00:28:02,850 --> 00:28:06,600
John sermon please come and see I'll

00:28:04,559 --> 00:28:09,330
talk tomorrow ask us lots of questions

00:28:06,600 --> 00:28:12,200
it's essentially an open forum yeah

00:28:09,330 --> 00:28:12,200
thank you

00:28:15,560 --> 00:28:18,490

YouTube URL: https://www.youtube.com/watch?v=_xOhN3Y9TmQ


