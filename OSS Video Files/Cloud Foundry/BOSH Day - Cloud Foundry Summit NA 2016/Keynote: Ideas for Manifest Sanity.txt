Title: Keynote: Ideas for Manifest Sanity
Publication date: 2016-05-30
Playlist: BOSH Day - Cloud Foundry Summit NA 2016
Description: 
	Matt Reider of  Pivotal presents his Keynote: "Ideas for Manifest Sanity."
Captions: 
	00:00:00,030 --> 00:00:05,790
great so welcome to bosch day sorry for

00:00:03,090 --> 00:00:10,410
the technical difficulties my name's

00:00:05,790 --> 00:00:13,950
Matt Ryder I am a product manager and a

00:00:10,410 --> 00:00:16,800
director at pivotal and I lead product

00:00:13,950 --> 00:00:21,090
strategy for platform which Bosch is a

00:00:16,800 --> 00:00:27,240
part of so today I'm going to talk with

00:00:21,090 --> 00:00:29,789
you about Bosch manifest sanity and so

00:00:27,240 --> 00:00:32,850
some of these things that involve making

00:00:29,789 --> 00:00:35,520
manifest more sane are things that you

00:00:32,850 --> 00:00:39,329
can take advantage of today they're part

00:00:35,520 --> 00:00:42,809
of of what we call bosch 2.0 which you

00:00:39,329 --> 00:00:46,230
can read about things sort of shift from

00:00:42,809 --> 00:00:47,700
bosch notes which you can google just

00:00:46,230 --> 00:00:50,160
type in bosch notes and you'll it'll

00:00:47,700 --> 00:00:51,899
lead you to notes that are on github

00:00:50,160 --> 00:00:53,850
about the things that are changing in

00:00:51,899 --> 00:00:56,070
bosch and then slowly as those things

00:00:53,850 --> 00:00:57,300
are are implemented they move out of

00:00:56,070 --> 00:00:59,910
bosch notes and they're actually

00:00:57,300 --> 00:01:02,340
documented on basha l so some of these

00:00:59,910 --> 00:01:03,719
things are have moved out of bosch notes

00:01:02,340 --> 00:01:04,860
and they're up on bosch io because there

00:01:03,719 --> 00:01:07,710
are real features that you can take

00:01:04,860 --> 00:01:09,750
advantage of and some other things that

00:01:07,710 --> 00:01:11,820
i'm going to talk about are in bosch

00:01:09,750 --> 00:01:14,490
notes as things that haven't been

00:01:11,820 --> 00:01:16,650
implemented but are coming and then the

00:01:14,490 --> 00:01:19,110
last thing that i will talk about that's

00:01:16,650 --> 00:01:21,750
a thing that will make manifest more

00:01:19,110 --> 00:01:24,540
sane is something that's not on bosch

00:01:21,750 --> 00:01:27,330
notes but it's more of an idea that i

00:01:24,540 --> 00:01:31,020
want to discuss with you and get input

00:01:27,330 --> 00:01:33,479
on because a lot of people in the

00:01:31,020 --> 00:01:36,090
community as well as people within the

00:01:33,479 --> 00:01:39,950
foundation and some of the the folks

00:01:36,090 --> 00:01:42,840
that are at pivotal and IBM and SI p

00:01:39,950 --> 00:01:46,680
really would like to see some sort of

00:01:42,840 --> 00:01:50,040
packaging solution for bosch more self

00:01:46,680 --> 00:01:51,630
descriptive self-contained we're calling

00:01:50,040 --> 00:01:53,399
them bundles as you'll see in a moment

00:01:51,630 --> 00:01:55,259
so this is more of an idea it's very

00:01:53,399 --> 00:01:56,880
loose nothing no code has been written

00:01:55,259 --> 00:02:01,320
yet but it's something that I'll

00:01:56,880 --> 00:02:04,560
describe with you today all right so

00:02:01,320 --> 00:02:07,530
before we look at these ideas let's back

00:02:04,560 --> 00:02:09,209
up a little this will also help for

00:02:07,530 --> 00:02:10,920
those in the room who don't know what a

00:02:09,209 --> 00:02:13,099
manifest is I'm sort of hoping that most

00:02:10,920 --> 00:02:15,420
of you do

00:02:13,099 --> 00:02:17,430
but we need to back out because in order

00:02:15,420 --> 00:02:22,079
to see why a manifest should change we

00:02:17,430 --> 00:02:23,610
need to know what it looks like today so

00:02:22,079 --> 00:02:26,159
I'm going to talk very high-level and

00:02:23,610 --> 00:02:28,829
very briefly about what Bosch is and how

00:02:26,159 --> 00:02:30,420
it works this isn't going to be an

00:02:28,829 --> 00:02:35,069
elaborate description of Bosch at all

00:02:30,420 --> 00:02:37,680
it's it's just at the fundamentals so

00:02:35,069 --> 00:02:39,750
Bosch has a special vocation it

00:02:37,680 --> 00:02:42,959
provisions complex distributed software

00:02:39,750 --> 00:02:45,629
like cloud foundry on to virtualized or

00:02:42,959 --> 00:02:49,079
bare metal infrastructure there's a CPI

00:02:45,629 --> 00:02:50,519
for that and that little fella

00:02:49,079 --> 00:02:53,760
on the left there that's the Bosch

00:02:50,519 --> 00:02:55,769
director she's directing the

00:02:53,760 --> 00:02:57,750
installation the orchestration of those

00:02:55,769 --> 00:02:59,220
virtual machines on the right if you're

00:02:57,750 --> 00:03:02,790
wondering why she's represented as a

00:02:59,220 --> 00:03:04,829
clam it's a great question and I'm not

00:03:02,790 --> 00:03:06,510
sure actually where the clam came from I

00:03:04,829 --> 00:03:08,459
think it may have been James Bear I

00:03:06,510 --> 00:03:12,659
think he may have actually created it

00:03:08,459 --> 00:03:14,280
himself using some we don't have a logo

00:03:12,659 --> 00:03:16,409
I know and the clam is like an

00:03:14,280 --> 00:03:18,840
unofficial logo dr. Nick was talking

00:03:16,409 --> 00:03:20,099
about he doesn't have a boss shirt so he

00:03:18,840 --> 00:03:22,230
has to wear his conch or shirt wouldn't

00:03:20,099 --> 00:03:24,060
be nice if we had boss shirts I'm not

00:03:22,230 --> 00:03:27,120
sure if the clam is what we should stick

00:03:24,060 --> 00:03:32,160
with but all of my slides have it cuz

00:03:27,120 --> 00:03:36,150
it's cute the yellow circle does bring

00:03:32,160 --> 00:03:37,500
egg yeah next slide previous slide all

00:03:36,150 --> 00:03:39,510
the slides have yellow circles with

00:03:37,500 --> 00:03:42,150
claims in them

00:03:39,510 --> 00:03:44,730
why was the clam chosen because Bosh was

00:03:42,150 --> 00:03:49,500
originally known as the Bosh outer shell

00:03:44,730 --> 00:03:54,090
this recursive named the beefer Bosh and

00:03:49,500 --> 00:03:56,040
the OS h4 outer shell and those circles

00:03:54,090 --> 00:03:58,500
there represent the outer shell which is

00:03:56,040 --> 00:04:01,019
this orchestration layer that that Bosh

00:03:58,500 --> 00:04:02,639
lives within and then the things that it

00:04:01,019 --> 00:04:04,590
provisions in orchestrates were which

00:04:02,639 --> 00:04:07,260
are the inner shells so we talked all

00:04:04,590 --> 00:04:09,530
about shells why not make washes logo a

00:04:07,260 --> 00:04:09,530
clam

00:04:10,489 --> 00:04:17,880
so for Bosh to perform its vocation it

00:04:14,069 --> 00:04:20,370
needs you the user to tell it about a

00:04:17,880 --> 00:04:22,169
number of things you need to tell it

00:04:20,370 --> 00:04:23,760
about the software you want to run which

00:04:22,169 --> 00:04:25,320
is packaged as a Bosh release the

00:04:23,760 --> 00:04:26,430
operating system to run it on the

00:04:25,320 --> 00:04:29,880
properties for config

00:04:26,430 --> 00:04:31,949
that software you also need to tell it

00:04:29,880 --> 00:04:34,800
about the storage devices that are

00:04:31,949 --> 00:04:36,449
available to it whether it's that

00:04:34,800 --> 00:04:38,970
storage is being used as persistent

00:04:36,449 --> 00:04:42,780
storage or ephemeral storage shared or

00:04:38,970 --> 00:04:44,550
local to each machine you also need to

00:04:42,780 --> 00:04:47,100
tell it about the resources that it has

00:04:44,550 --> 00:04:50,280
available to it the profile of the

00:04:47,100 --> 00:04:54,930
machines virtual machines virtual or not

00:04:50,280 --> 00:04:57,690
that contain it you need to tell it

00:04:54,930 --> 00:05:01,729
about the network layout and which

00:04:57,690 --> 00:05:03,539
components should be located where and

00:05:01,729 --> 00:05:05,910
you need to tell it about the

00:05:03,539 --> 00:05:07,139
relationships between things so that

00:05:05,910 --> 00:05:11,639
they can communicate with one another

00:05:07,139 --> 00:05:13,380
over the network the numbers of each

00:05:11,639 --> 00:05:17,370
component and the order in which those

00:05:13,380 --> 00:05:19,770
components should start and finally

00:05:17,370 --> 00:05:21,750
which kind of cloud you're targeting in

00:05:19,770 --> 00:05:24,060
order to provision all of these

00:05:21,750 --> 00:05:27,570
different dimensions according to the

00:05:24,060 --> 00:05:29,910
physics pros and cons and folklore of

00:05:27,570 --> 00:05:33,810
each infrastructure that it understands

00:05:29,910 --> 00:05:37,470
and you tell it all these things in one

00:05:33,810 --> 00:05:39,900
file and I think you know the name of

00:05:37,470 --> 00:05:41,669
that file and we're going to talk a lot

00:05:39,900 --> 00:05:46,380
about that file today and that file is

00:05:41,669 --> 00:05:48,300
called the manifest Bosch manifest so

00:05:46,380 --> 00:05:49,919
over the course of the last six weeks or

00:05:48,300 --> 00:05:52,169
so we've been talking with a lot of

00:05:49,919 --> 00:05:54,360
Bosch users and we've been talking with

00:05:52,169 --> 00:05:57,509
those Bosch users because we want to

00:05:54,360 --> 00:05:59,909
understand how we can make that manifest

00:05:57,509 --> 00:06:02,849
easier and how we can make their lives

00:05:59,909 --> 00:06:04,680
easier so we've been traveling around

00:06:02,849 --> 00:06:07,020
we've also been having a lot of phone

00:06:04,680 --> 00:06:08,759
calls with customers that have been here

00:06:07,020 --> 00:06:10,680
at Summit and you heard many of them

00:06:08,759 --> 00:06:12,060
talk today we've been spending time on

00:06:10,680 --> 00:06:15,539
the phone with them talking to them

00:06:12,060 --> 00:06:16,800
about Bosch listening to them tell us

00:06:15,539 --> 00:06:19,139
about the tools that they build around

00:06:16,800 --> 00:06:22,530
Bosch how they construct and changed

00:06:19,139 --> 00:06:26,789
their manifests also how they track the

00:06:22,530 --> 00:06:28,740
changes that you learn about in the the

00:06:26,789 --> 00:06:30,690
release notes of CF release how they

00:06:28,740 --> 00:06:32,370
track those how they understand them how

00:06:30,690 --> 00:06:34,199
they understand how their Bosch manifest

00:06:32,370 --> 00:06:35,789
should change based on those those

00:06:34,199 --> 00:06:38,400
properties that are changing in CF

00:06:35,789 --> 00:06:40,139
release and so we've we've learned a lot

00:06:38,400 --> 00:06:42,530
and these are all things that

00:06:40,139 --> 00:06:47,639
people in the room know about me and

00:06:42,530 --> 00:06:51,060
what we've learned is that we hear some

00:06:47,639 --> 00:06:53,939
consistent things and we hear consistent

00:06:51,060 --> 00:06:56,360
things about the manifest specifically

00:06:53,939 --> 00:06:58,620
the Cloud Foundry manifest which is

00:06:56,360 --> 00:07:01,469
obviously the most popular manifest that

00:06:58,620 --> 00:07:03,889
people are going going to write and it's

00:07:01,469 --> 00:07:06,120
become really what Bosh's domain is

00:07:03,889 --> 00:07:08,159
we've heard that Bosch is used for a

00:07:06,120 --> 00:07:09,479
number of different you know

00:07:08,159 --> 00:07:12,599
installations of different software

00:07:09,479 --> 00:07:15,090
packages but really it's most likely

00:07:12,599 --> 00:07:16,259
associated with Cloud Foundry so let's

00:07:15,090 --> 00:07:18,000
talk about the consistent things that

00:07:16,259 --> 00:07:20,279
they say they're really on the negative

00:07:18,000 --> 00:07:23,009
side of the spectrum we're going to fill

00:07:20,279 --> 00:07:26,759
in the blanks a little bit so the CF

00:07:23,009 --> 00:07:30,060
manifest is long there's no denying that

00:07:26,759 --> 00:07:34,919
it's long it's very long it's thousands

00:07:30,060 --> 00:07:37,500
of lines long the CF manifest is also

00:07:34,919 --> 00:07:40,229
repetitive it repeats a number of

00:07:37,500 --> 00:07:42,689
stanzas for a number of things for

00:07:40,229 --> 00:07:44,610
instance I looked at a Cloud Foundry

00:07:42,689 --> 00:07:48,569
manifest and I search for the word cert

00:07:44,610 --> 00:07:51,300
and I found one called agent agent cert

00:07:48,569 --> 00:07:54,029
and is this the search for the Boche

00:07:51,300 --> 00:07:57,330
agent the Metron agent I don't know I

00:07:54,029 --> 00:08:00,270
don't actually care the point is that

00:07:57,330 --> 00:08:05,669
this cert appears ten times within the

00:08:00,270 --> 00:08:08,009
manifest the same one and that's just

00:08:05,669 --> 00:08:10,379
one thing it happens to be a really big

00:08:08,009 --> 00:08:11,520
thing but it's just a thing and yes

00:08:10,379 --> 00:08:17,939
we'll talk a little bit about security

00:08:11,520 --> 00:08:20,520
and encrypting in a second quick take a

00:08:17,939 --> 00:08:25,379
picture of it no this is not a lock this

00:08:20,520 --> 00:08:28,050
is not a long-lived environment the CF

00:08:25,379 --> 00:08:29,729
manifest is complicated this one is

00:08:28,050 --> 00:08:30,930
relatively obvious we're building on the

00:08:29,729 --> 00:08:33,209
last couple of things it's long it's

00:08:30,930 --> 00:08:35,130
repetitive so obviously it's going to be

00:08:33,209 --> 00:08:37,440
complicated because long repetitive

00:08:35,130 --> 00:08:39,240
Bosch manifests have a number of

00:08:37,440 --> 00:08:41,250
properties as I described for dozens of

00:08:39,240 --> 00:08:42,599
different software components and the

00:08:41,250 --> 00:08:44,250
purpose and structure of these things

00:08:42,599 --> 00:08:46,199
either requires tribal knowledge or a

00:08:44,250 --> 00:08:50,089
fair amount of discourse about what's in

00:08:46,199 --> 00:08:50,089
the CF runtime release notes

00:08:50,340 --> 00:08:55,170
it's overwhelming long repetitive and

00:08:52,980 --> 00:08:57,870
complicated those describe the manifest

00:08:55,170 --> 00:09:00,210
in this word described the feeling that

00:08:57,870 --> 00:09:02,730
I have I know that that's how I feel

00:09:00,210 --> 00:09:05,280
when I'm looking at 5,000 lines of Y

00:09:02,730 --> 00:09:06,630
amel I look at the length of it and the

00:09:05,280 --> 00:09:07,860
number of things that I don't understand

00:09:06,630 --> 00:09:10,860
and I get this feeling that I'm not in

00:09:07,860 --> 00:09:13,230
control and I miss being in control and

00:09:10,860 --> 00:09:16,710
I miss maybe using some other tools that

00:09:13,230 --> 00:09:18,570
I've learned that I feel in control of

00:09:16,710 --> 00:09:22,740
instead of this one that's not a feeling

00:09:18,570 --> 00:09:26,580
we want to give boss users so the title

00:09:22,740 --> 00:09:30,030
of my my presentation is ideas for

00:09:26,580 --> 00:09:32,100
sanity so it sort of goes that you know

00:09:30,030 --> 00:09:33,960
obviously I must think that the Bosch

00:09:32,100 --> 00:09:36,080
manifest is insane it follows that the

00:09:33,960 --> 00:09:38,700
current state must be the opposite right

00:09:36,080 --> 00:09:40,050
it's a bit of a melodramatic thing to

00:09:38,700 --> 00:09:41,690
say but for those in the room who know

00:09:40,050 --> 00:09:44,700
me you know I can go that way sometimes

00:09:41,690 --> 00:09:46,260
I think that it's justified and so the

00:09:44,700 --> 00:09:47,490
rest of the presentation I'm going to

00:09:46,260 --> 00:09:49,770
lead you through the ways that it is

00:09:47,490 --> 00:09:52,650
insane and the ways that we're making it

00:09:49,770 --> 00:09:55,410
more sane with some my dish additional

00:09:52,650 --> 00:09:59,700
ideas for the future so first of all why

00:09:55,410 --> 00:10:01,380
is it insane so you may think that

00:09:59,700 --> 00:10:03,450
insanity has something to do with mental

00:10:01,380 --> 00:10:06,780
health but that's not actually where the

00:10:03,450 --> 00:10:08,430
term is used so people mental health

00:10:06,780 --> 00:10:09,900
professionals and physicians don't use

00:10:08,430 --> 00:10:13,110
the term insanity they don't like that

00:10:09,900 --> 00:10:14,520
term it's really a legal definition and

00:10:13,110 --> 00:10:16,350
it's used in the courtroom and there

00:10:14,520 --> 00:10:18,150
there are rules about the insanity

00:10:16,350 --> 00:10:20,790
defense and mens rea which is basically

00:10:18,150 --> 00:10:22,800
a person's understanding of being aware

00:10:20,790 --> 00:10:24,540
of their own guilt and there's the

00:10:22,800 --> 00:10:26,220
general definition from English law that

00:10:24,540 --> 00:10:28,230
insanity is a mental state in which a

00:10:26,220 --> 00:10:31,440
person cannot distinguish between good

00:10:28,230 --> 00:10:33,750
and evil so why are bosh manifests

00:10:31,440 --> 00:10:35,880
insane because to date they've been

00:10:33,750 --> 00:10:37,620
doing a lot of evil things and they've

00:10:35,880 --> 00:10:40,050
been claiming we've been claiming that

00:10:37,620 --> 00:10:41,280
it's good or at least good enough so

00:10:40,050 --> 00:10:42,990
fortunately we in this room are not

00:10:41,280 --> 00:10:46,590
insane we can distinguish between good

00:10:42,990 --> 00:10:50,310
and evil I think but maybe maybe that's

00:10:46,590 --> 00:10:51,450
the topic for another conversation all

00:10:50,310 --> 00:10:53,790
right so the reason I'm bringing up good

00:10:51,450 --> 00:10:55,500
and evil is twofold

00:10:53,790 --> 00:10:57,390
first there are things we should do

00:10:55,500 --> 00:10:58,950
that'll shift us away from design

00:10:57,390 --> 00:11:01,470
patterns that are evil towards design

00:10:58,950 --> 00:11:03,150
patterns that are good but really I just

00:11:01,470 --> 00:11:07,440
needed a framework to contrast

00:11:03,150 --> 00:11:10,430
things and why not good and evil alright

00:11:07,440 --> 00:11:14,390
the first the first design pattern is

00:11:10,430 --> 00:11:14,390
something called the hammer principle

00:11:15,170 --> 00:11:19,530
it's an it's a trap that a lot of people

00:11:17,760 --> 00:11:21,360
fall into and software they choose tools

00:11:19,530 --> 00:11:23,730
for the wrong reasons and it usually

00:11:21,360 --> 00:11:25,170
results in choosing the wrong tool so we

00:11:23,730 --> 00:11:27,540
we fall into this trap because we're

00:11:25,170 --> 00:11:29,160
more familiar with a tool or we have

00:11:27,540 --> 00:11:31,770
some unjustified religious stance on a

00:11:29,160 --> 00:11:34,740
tool that isn't grounded in reality and

00:11:31,770 --> 00:11:36,510
in this case Bosch manifests went for

00:11:34,740 --> 00:11:38,520
the sane and good choice not the evil

00:11:36,510 --> 00:11:41,040
choice and that's gamal the wrong tool

00:11:38,520 --> 00:11:42,900
probably would have been XML which was

00:11:41,040 --> 00:11:45,660
an option once and it's actually where

00:11:42,900 --> 00:11:47,310
we're Yale came from and the reason why

00:11:45,660 --> 00:11:49,760
yeah Mille is the same choice is because

00:11:47,310 --> 00:11:53,310
XML was never meant to be human readable

00:11:49,760 --> 00:11:55,790
it was meant to be read by a machine

00:11:53,310 --> 00:11:58,770
and yeah Milles author Clark Evans

00:11:55,790 --> 00:12:02,060
thinks that maybe unconsciously he chose

00:11:58,770 --> 00:12:04,500
this format because of the wiki format

00:12:02,060 --> 00:12:07,350
that was meant to be read by both

00:12:04,500 --> 00:12:10,080
machine and people so that was the same

00:12:07,350 --> 00:12:14,700
choice Gamal is not markup language

00:12:10,080 --> 00:12:18,270
that's his name it's actually better but

00:12:14,700 --> 00:12:19,710
then we come to a different notion which

00:12:18,270 --> 00:12:23,990
is oops

00:12:19,710 --> 00:12:28,680
did I skip a slide I skipped a letter

00:12:23,990 --> 00:12:31,860
encapsulation tion so there's good and

00:12:28,680 --> 00:12:34,290
evil here too this is another design

00:12:31,860 --> 00:12:36,630
pattern where the Bosch manifest has

00:12:34,290 --> 00:12:38,250
suffered so on the Left we have the idea

00:12:36,630 --> 00:12:39,690
of encapsulation and it's represented by

00:12:38,250 --> 00:12:41,190
a number of countries each with its own

00:12:39,690 --> 00:12:43,140
language tradition and culture and on

00:12:41,190 --> 00:12:44,940
the right we have this indistinguishable

00:12:43,140 --> 00:12:47,190
blob of a thing called planet Earth

00:12:44,940 --> 00:12:51,510
which is some sort of evil global

00:12:47,190 --> 00:12:54,240
monoculture and this unlike making the

00:12:51,510 --> 00:12:56,220
same choice with choosing Y amel we've

00:12:54,240 --> 00:12:58,260
actually gone a little bit towards the

00:12:56,220 --> 00:13:00,810
evil choice of not encapsulating not

00:12:58,260 --> 00:13:05,580
drawing boundaries around things that

00:13:00,810 --> 00:13:09,450
are in a manifest so the manifests has a

00:13:05,580 --> 00:13:10,860
lot of sort of global state it's a

00:13:09,450 --> 00:13:13,170
pattern that Bosch is used from the

00:13:10,860 --> 00:13:15,390
start on the Left we have a Cloud

00:13:13,170 --> 00:13:16,870
Foundry manifest and this is one that

00:13:15,390 --> 00:13:19,810
ops manager pivotal ops me

00:13:16,870 --> 00:13:22,360
generated it's almost five thousand six

00:13:19,810 --> 00:13:24,310
hundred lines long and sure ops manager

00:13:22,360 --> 00:13:26,170
produced it so it probably has a lot of

00:13:24,310 --> 00:13:28,990
superfluous items in it that a human

00:13:26,170 --> 00:13:31,210
wouldn't have introduced but the idea is

00:13:28,990 --> 00:13:32,890
the same it's one giant file and it

00:13:31,210 --> 00:13:34,660
includes the release the stem cell

00:13:32,890 --> 00:13:37,779
networking storage resource pools

00:13:34,660 --> 00:13:40,779
configuration properties for each job or

00:13:37,779 --> 00:13:42,880
VM that Bosch deploys and the boundaries

00:13:40,779 --> 00:13:45,640
between things they're there but they

00:13:42,880 --> 00:13:51,310
take a lot of scrolling and searching to

00:13:45,640 --> 00:13:53,080
piece apart okay so now let's look at

00:13:51,310 --> 00:13:55,750
how we've started to convert this evil

00:13:53,080 --> 00:13:57,700
thing into a good one with some of the

00:13:55,750 --> 00:13:59,650
changes that are taking place that were

00:13:57,700 --> 00:14:02,020
in this thing we're calling bosch 2.0

00:13:59,650 --> 00:14:03,670
bosch introduces two new boundaries to

00:14:02,020 --> 00:14:07,000
isolate different concerns and the first

00:14:03,670 --> 00:14:09,220
one is called the cloud config which

00:14:07,000 --> 00:14:10,630
gives us a new definition of something

00:14:09,220 --> 00:14:12,670
called an availability zone that Bosch

00:14:10,630 --> 00:14:14,410
never knew about before so this is a

00:14:12,670 --> 00:14:16,180
concept that was formed to Bosch so you

00:14:14,410 --> 00:14:20,410
define this availability zone in the

00:14:16,180 --> 00:14:23,110
cloud config you also are going to

00:14:20,410 --> 00:14:24,850
define definitions of resources and

00:14:23,110 --> 00:14:27,400
networking basically all of the ayahs

00:14:24,850 --> 00:14:31,029
settings for AWS and vSphere and

00:14:27,400 --> 00:14:34,390
OpenStack and asher and Google Cloud

00:14:31,029 --> 00:14:36,459
coming soon so this this allows for a

00:14:34,390 --> 00:14:39,370
boundary between the things that are I

00:14:36,459 --> 00:14:41,770
out specific and which is represented

00:14:39,370 --> 00:14:45,279
here with Germany and the things that

00:14:41,770 --> 00:14:47,110
are about your deployment which in this

00:14:45,279 --> 00:14:48,700
case is a little picture of Iceland two

00:14:47,110 --> 00:14:51,430
boundaries around things that are

00:14:48,700 --> 00:14:54,640
distinct so we're starting to tease

00:14:51,430 --> 00:14:58,060
apart and encapsulate different concerns

00:14:54,640 --> 00:15:00,220
by separating things out of the manifest

00:14:58,060 --> 00:15:02,140
things you may not touch ever again

00:15:00,220 --> 00:15:04,089
regardless of how many deployments you

00:15:02,140 --> 00:15:07,150
do on that is maybe you just write that

00:15:04,089 --> 00:15:09,730
file once and we also have a new

00:15:07,150 --> 00:15:13,839
boundary for a thing called a runtime

00:15:09,730 --> 00:15:16,330
config which is Spain in this case it's

00:15:13,839 --> 00:15:18,930
how a global machine Global global

00:15:16,330 --> 00:15:22,029
machine settings can be placed on the VM

00:15:18,930 --> 00:15:25,000
pivotal released an IPSec add-on that

00:15:22,029 --> 00:15:27,930
uses the runtime config and there are

00:15:25,000 --> 00:15:30,160
other add-ons for adding users to a VM

00:15:27,930 --> 00:15:34,900
changing the login manner another

00:15:30,160 --> 00:15:37,480
things like that okay so this brings me

00:15:34,900 --> 00:15:41,200
to another design pattern which is the

00:15:37,480 --> 00:15:43,420
the dry versus wet pattern dry do not

00:15:41,200 --> 00:15:45,900
repeat yourself wet write everything

00:15:43,420 --> 00:15:45,900
twice

00:15:47,310 --> 00:15:59,470
so the Bosch manifest is is pretty wet a

00:15:55,170 --> 00:16:01,240
good example of that is where jobs need

00:15:59,470 --> 00:16:04,540
to reference other other jobs

00:16:01,240 --> 00:16:06,670
so like the Nats job for example so this

00:16:04,540 --> 00:16:08,620
stanza which shows the Nats user and

00:16:06,670 --> 00:16:11,860
password port and location it's repeated

00:16:08,620 --> 00:16:14,620
for every job it's repeated 25 times in

00:16:11,860 --> 00:16:17,770
the manifest and this is not the only

00:16:14,620 --> 00:16:21,250
example of wetness within a Bosch

00:16:17,770 --> 00:16:23,560
manifest a slight detour here how many

00:16:21,250 --> 00:16:29,730
of you were at Derek Coulson's talk

00:16:23,560 --> 00:16:33,610
yesterday he was talking about how

00:16:29,730 --> 00:16:36,570
RabbitMQ was Derek wrote Nats and he was

00:16:33,610 --> 00:16:40,600
talking about RabbitMQ was originally

00:16:36,570 --> 00:16:42,370
the message bus in in Cloud Foundry and

00:16:40,600 --> 00:16:44,050
so I've always been curious about why

00:16:42,370 --> 00:16:46,360
Nats would be better than rabbit so I

00:16:44,050 --> 00:16:51,250
went off and I googled why Nats replaced

00:16:46,360 --> 00:16:53,950
rabbit and here's what I got which

00:16:51,250 --> 00:16:56,200
really isn't very informative so I guess

00:16:53,950 --> 00:16:58,740
the reason for that will go with Derek

00:16:56,200 --> 00:16:58,740
to his grave

00:17:01,939 --> 00:17:06,179
all right so we want to dry up our

00:17:04,110 --> 00:17:09,089
manifests and we want to we want to do

00:17:06,179 --> 00:17:11,039
that we are going to do that and we can

00:17:09,089 --> 00:17:12,179
do that using another Bosch 2.0 features

00:17:11,039 --> 00:17:13,620
so these are the things that are

00:17:12,179 --> 00:17:15,839
possible again today and I'll get into

00:17:13,620 --> 00:17:18,149
some things that are not yet possible

00:17:15,839 --> 00:17:19,620
that we're planning for tomorrow so

00:17:18,149 --> 00:17:22,620
we're using a feature now that's

00:17:19,620 --> 00:17:24,779
introduced it's called links so in

00:17:22,620 --> 00:17:26,879
places where one VM or one release

00:17:24,779 --> 00:17:29,820
provides something that other VMs or

00:17:26,879 --> 00:17:32,879
releases will consume the component

00:17:29,820 --> 00:17:35,850
author will use a link directly in there

00:17:32,879 --> 00:17:38,519
Bosch release so that redundant stanza

00:17:35,850 --> 00:17:40,740
of Nats where where you find Nats and

00:17:38,519 --> 00:17:43,019
how you log into Nats it'll no longer

00:17:40,740 --> 00:17:45,210
appear 25 times in fact it might not

00:17:43,019 --> 00:17:46,679
appear at all if the release can

00:17:45,210 --> 00:17:49,919
reference one another from inside of

00:17:46,679 --> 00:17:51,960
themselves so this silly picture of a

00:17:49,919 --> 00:17:53,789
fan that's blow-drying a basset hound

00:17:51,960 --> 00:17:57,179
can be personified in our case to a

00:17:53,789 --> 00:18:01,980
human being that might be among us in

00:17:57,179 --> 00:18:05,669
the audience this person is Ahmet Gupta

00:18:01,980 --> 00:18:07,769
who is a pivotal employee and he along

00:18:05,669 --> 00:18:10,379
with his team are deconstructing all the

00:18:07,769 --> 00:18:12,480
things that comprise CF release making

00:18:10,379 --> 00:18:14,700
it more composable and using Bosch links

00:18:12,480 --> 00:18:20,909
rather than relying on these repeated

00:18:14,700 --> 00:18:24,690
stanzas in the Bosch manifest all right

00:18:20,909 --> 00:18:28,139
so here we go into the future we just

00:18:24,690 --> 00:18:30,029
talked about the present and Bosch 2.0

00:18:28,139 --> 00:18:32,100
giving us some new ways of drawing up

00:18:30,029 --> 00:18:50,279
and encapsulating drawing boundaries

00:18:32,100 --> 00:18:51,539
using the cloud config yeah I don't know

00:18:50,279 --> 00:18:52,080
that Dimitri is here to answer that

00:18:51,539 --> 00:18:56,419
question

00:18:52,080 --> 00:18:56,419
I don't think Bosch 2.0 is a thing

00:19:03,050 --> 00:19:35,610
absolutely box 2.0 is is just a name for

00:19:08,370 --> 00:19:37,140
features that are new and we are gonna

00:19:35,610 --> 00:19:38,730
I'm not gonna go through the speakers

00:19:37,140 --> 00:19:40,320
notes like I was before I'm just gonna

00:19:38,730 --> 00:19:47,720
quickly wrap up because I was right at

00:19:40,320 --> 00:19:47,720
the best part which was stuff that Bosch

00:19:48,050 --> 00:19:54,150
thanks

00:19:49,490 --> 00:19:56,010
things that are forward-looking one of

00:19:54,150 --> 00:20:01,370
which is documented at Bosch notes like

00:19:56,010 --> 00:20:03,690
I said and one of which is not and so I

00:20:01,370 --> 00:20:07,290
just I wonder it you know it's

00:20:03,690 --> 00:20:09,210
forward-looking so the authenticity is

00:20:07,290 --> 00:20:11,820
questionable maybe I have like a shutoff

00:20:09,210 --> 00:20:15,320
mechanism in myself you know like a

00:20:11,820 --> 00:20:19,710
moral code like oh this might not happen

00:20:15,320 --> 00:20:21,000
shut down I don't know okay so into the

00:20:19,710 --> 00:20:23,250
future let's hope this little thing

00:20:21,000 --> 00:20:26,130
works it does okay so the first thing is

00:20:23,250 --> 00:20:27,660
and I we looked at a manifest earlier in

00:20:26,130 --> 00:20:31,680
the presentation my presentation that

00:20:27,660 --> 00:20:32,970
showed an SSL cert as well as the Nats

00:20:31,680 --> 00:20:36,210
credentials that were sitting in a

00:20:32,970 --> 00:20:38,550
manifest there are lots of ways that

00:20:36,210 --> 00:20:41,370
I've seen people extract those secrets

00:20:38,550 --> 00:20:42,870
and then later on inject them back into

00:20:41,370 --> 00:20:44,720
the manifest but the best thing to do

00:20:42,870 --> 00:20:48,180
would be to get them out of the manifest

00:20:44,720 --> 00:20:53,280
completely so this is up on Bosh notes

00:20:48,180 --> 00:20:56,550
today and the way in which we're going

00:20:53,280 --> 00:20:59,760
to be extracting secrets this is brand

00:20:56,550 --> 00:21:01,920
new is using what our friend Dimitri is

00:20:59,760 --> 00:21:03,750
calling the config server so again you

00:21:01,920 --> 00:21:07,940
can read about this as basically it's a

00:21:03,750 --> 00:21:10,830
clean API on getting in setting values

00:21:07,940 --> 00:21:12,210
and this could be done in one of two

00:21:10,830 --> 00:21:14,940
places you could either do it in the

00:21:12,210 --> 00:21:16,440
manifest itself or you could do it in

00:21:14,940 --> 00:21:19,140
there

00:21:16,440 --> 00:21:22,380
in the same way that links have

00:21:19,140 --> 00:21:24,840
references to things those links could

00:21:22,380 --> 00:21:27,360
also have references to these key value

00:21:24,840 --> 00:21:32,490
pairs that are sitting in this key value

00:21:27,360 --> 00:21:34,920
store and so when the director is doing

00:21:32,490 --> 00:21:37,800
a deploy it'll basically dynamically

00:21:34,920 --> 00:21:39,720
evaluate these references replace them

00:21:37,800 --> 00:21:41,970
with the real thing which could be a

00:21:39,720 --> 00:21:43,950
secret it also could be anything which

00:21:41,970 --> 00:21:45,600
is why it's not called a secret server

00:21:43,950 --> 00:21:49,380
it's just a config server because this

00:21:45,600 --> 00:21:52,710
could be any config setting and so

00:21:49,380 --> 00:21:54,510
that's step one not only in shrinking

00:21:52,710 --> 00:21:56,220
the manifest down which was part of the

00:21:54,510 --> 00:22:00,300
theme of the rest of the presentation

00:21:56,220 --> 00:22:06,750
but also in extracting secrets from our

00:22:00,300 --> 00:22:09,960
manifest so that's really great yeah mr.

00:22:06,750 --> 00:22:14,429
Nick last time you interrupted things

00:22:09,960 --> 00:22:16,760
didn't go so well but go ahead what's

00:22:14,429 --> 00:22:16,760
your question

00:22:17,240 --> 00:22:30,840
version numbers yeah so stage one of

00:22:29,220 --> 00:22:34,620
this config server doesn't involve

00:22:30,840 --> 00:22:36,420
encryption yet but it's a clean API and

00:22:34,620 --> 00:22:42,600
you could swap something else out

00:22:36,420 --> 00:22:47,130
underneath it perhaps

00:22:42,600 --> 00:22:48,270
okay so packaging bundling easier ring

00:22:47,130 --> 00:22:50,850
so this is the part that's not

00:22:48,270 --> 00:22:53,190
documented anywhere in that it's just a

00:22:50,850 --> 00:22:54,690
conversation that we're having and I

00:22:53,190 --> 00:22:57,120
invite all of you to be part of that

00:22:54,690 --> 00:23:00,390
conversation we could do it on the

00:22:57,120 --> 00:23:04,610
mailing list you could email me or

00:23:00,390 --> 00:23:07,940
Demetri or Nick or chip or but basically

00:23:04,610 --> 00:23:14,790
we would like to come up with a way of

00:23:07,940 --> 00:23:16,890
making software more self-contained the

00:23:14,790 --> 00:23:19,410
releases you know they have all sorts of

00:23:16,890 --> 00:23:22,830
that there's metadata inside the

00:23:19,410 --> 00:23:24,270
releases today but it doesn't it can

00:23:22,830 --> 00:23:25,919
shorten the manifest if you're going to

00:23:24,270 --> 00:23:27,480
move and this is a good practice is to

00:23:25,919 --> 00:23:28,500
move as many things out of your manifest

00:23:27,480 --> 00:23:30,030
into your spec file

00:23:28,500 --> 00:23:32,400
something that we're trying to do a

00:23:30,030 --> 00:23:34,770
Namit is helping with that with across

00:23:32,400 --> 00:23:38,520
CF release but this is something

00:23:34,770 --> 00:23:41,130
different so if you think about the flow

00:23:38,520 --> 00:23:43,890
of deploying Cloud Foundry there are

00:23:41,130 --> 00:23:47,160
these two steps in here all right that

00:23:43,890 --> 00:23:49,350
involve grabbing a template from

00:23:47,160 --> 00:23:51,150
probably Bosch i/o and then editing that

00:23:49,350 --> 00:23:53,220
template the first template being the

00:23:51,150 --> 00:23:55,530
boshin it manifests and then the second

00:23:53,220 --> 00:23:58,110
template being this really verbose thing

00:23:55,530 --> 00:24:00,600
that deploys Cloud Foundry and wouldn't

00:23:58,110 --> 00:24:02,880
it be nice if it was something more like

00:24:00,600 --> 00:24:05,130
that I think this is a little

00:24:02,880 --> 00:24:07,500
far-fetched I think we still have to

00:24:05,130 --> 00:24:08,970
pass values obviously Bosch needs to

00:24:07,500 --> 00:24:11,330
know about your infrastructure settings

00:24:08,970 --> 00:24:14,190
and there are definitely things that

00:24:11,330 --> 00:24:15,780
that Bosch needs to know about the

00:24:14,190 --> 00:24:17,520
environments that you're on if you're

00:24:15,780 --> 00:24:22,440
going to deploy cloud foundry and static

00:24:17,520 --> 00:24:24,720
IPs and things like that but this idea

00:24:22,440 --> 00:24:26,330
that my friend Dmitri who's leaning

00:24:24,720 --> 00:24:28,800
against the door in the back there hi

00:24:26,330 --> 00:24:31,500
he's in there he's almost in the room

00:24:28,800 --> 00:24:34,890
another seven or eight feet and he'd be

00:24:31,500 --> 00:24:37,020
in the room he has to come in the room

00:24:34,890 --> 00:24:40,620
because he's on the panel so we know

00:24:37,020 --> 00:24:43,710
that it'll happen so we've been calling

00:24:40,620 --> 00:24:45,510
this a bundle we don't know a better

00:24:43,710 --> 00:24:47,610
name maybe it'll be something else but

00:24:45,510 --> 00:24:49,500
right now it's a bundle and there's not

00:24:47,610 --> 00:24:51,720
a whole lot that distinguishes what you

00:24:49,500 --> 00:24:54,650
see in these packages from what's in a

00:24:51,720 --> 00:24:58,020
release right it's a bunch of software

00:24:54,650 --> 00:25:02,310
but what if there was something like a

00:24:58,020 --> 00:25:04,440
base manifest inside of the bundle we

00:25:02,310 --> 00:25:07,110
already talked about separating concerns

00:25:04,440 --> 00:25:08,760
we've got the cloud config which is your

00:25:07,110 --> 00:25:11,760
eye as concerns we've got this new thing

00:25:08,760 --> 00:25:14,340
called a runtime config what if the

00:25:11,760 --> 00:25:15,000
manifest now could also separate

00:25:14,340 --> 00:25:17,460
concerns

00:25:15,000 --> 00:25:20,370
you've got part of the manifest that is

00:25:17,460 --> 00:25:22,290
very specific to the releases that are

00:25:20,370 --> 00:25:23,970
in it and then you've got another part

00:25:22,290 --> 00:25:27,180
of the manifest that's specific to your

00:25:23,970 --> 00:25:29,580
deployments of that release so the thing

00:25:27,180 --> 00:25:36,120
that's released specific maybe it could

00:25:29,580 --> 00:25:36,640
be a little closer to the releases so

00:25:36,120 --> 00:25:38,280
you

00:25:36,640 --> 00:25:40,750
could have sort of two of these

00:25:38,280 --> 00:25:42,370
manifests and one could be inside of the

00:25:40,750 --> 00:25:44,350
bundle and one could be outside of the

00:25:42,370 --> 00:25:49,330
bundle something that you're responsible

00:25:44,350 --> 00:25:53,340
for and so this is what the UX for this

00:25:49,330 --> 00:25:57,760
maybe might look like someday kind of

00:25:53,340 --> 00:25:59,770
you've got a bundle which is maybe our

00:25:57,760 --> 00:26:01,900
latest Cloud Foundry and you could

00:25:59,770 --> 00:26:03,730
upload that to the director and that

00:26:01,900 --> 00:26:08,560
would have all of your releases and

00:26:03,730 --> 00:26:11,620
maybe it would also have a base template

00:26:08,560 --> 00:26:13,450
for for that release so that you

00:26:11,620 --> 00:26:17,970
wouldn't have to keep recreating it with

00:26:13,450 --> 00:26:21,280
every manifest and then we have another

00:26:17,970 --> 00:26:22,900
set of overrides that - oh and again

00:26:21,280 --> 00:26:24,580
this is just conceptual right now we're

00:26:22,900 --> 00:26:26,530
not sure that this is where we'll go but

00:26:24,580 --> 00:26:30,190
it seems like it makes sense you've got

00:26:26,530 --> 00:26:32,680
overrides to override or just extend

00:26:30,190 --> 00:26:34,570
what's in that base template and the

00:26:32,680 --> 00:26:36,010
overrides could also could have

00:26:34,570 --> 00:26:38,770
something that we've been describing as

00:26:36,010 --> 00:26:41,830
a topology so the first override could

00:26:38,770 --> 00:26:43,900
be your instance groups that describe

00:26:41,830 --> 00:26:46,600
maybe it's small so everything's

00:26:43,900 --> 00:26:48,610
co-located on just a few VMs or maybe

00:26:46,600 --> 00:26:51,040
it's large and everything is on its own

00:26:48,610 --> 00:26:52,150
VM that would be the first override and

00:26:51,040 --> 00:26:54,970
then the second override could be

00:26:52,150 --> 00:26:57,370
something that's very specific to this

00:26:54,970 --> 00:27:01,660
particular deployment with the static

00:26:57,370 --> 00:27:05,380
IPS for that deployment so it might look

00:27:01,660 --> 00:27:07,600
like that you target your Bosch you

00:27:05,380 --> 00:27:09,520
update your cloud config with all the

00:27:07,600 --> 00:27:10,600
things about your eyes so now those are

00:27:09,520 --> 00:27:14,230
out of your manifest

00:27:10,600 --> 00:27:16,570
then you upload your stem cell you

00:27:14,230 --> 00:27:19,510
upload your bundle and then you do a

00:27:16,570 --> 00:27:22,690
deploy and you have to very narrow

00:27:19,510 --> 00:27:24,190
yamo files instead of this huge thing

00:27:22,690 --> 00:27:26,590
that we started with at the beginning of

00:27:24,190 --> 00:27:32,170
this conversation which was 5,000 lines

00:27:26,590 --> 00:27:34,420
and unintelligible okay so I made it

00:27:32,170 --> 00:27:38,400
through that time that's good so I'm

00:27:34,420 --> 00:27:41,110
going to wrap it up the

00:27:38,400 --> 00:27:43,950
how I'm gonna wrap it up is with with a

00:27:41,110 --> 00:27:47,980
tweet that I found that I had tweeted in

00:27:43,950 --> 00:27:52,000
2013 which was Bosch as a set of

00:27:47,980 --> 00:27:57,340
concentric circles I tweeted this bright

00:27:52,000 --> 00:28:01,299
when I think it was pivotal was just

00:27:57,340 --> 00:28:04,690
getting involved with Bosch I had come

00:28:01,299 --> 00:28:06,549
out of VMware I had met Nick on that

00:28:04,690 --> 00:28:08,860
first day when we were when we launched

00:28:06,549 --> 00:28:11,410
Bosch and I had all this enthusiasm

00:28:08,860 --> 00:28:13,179
about Bosch and one of the reasons I was

00:28:11,410 --> 00:28:14,440
enthusiastic about it is because I had

00:28:13,179 --> 00:28:16,179
heard from all of these people very

00:28:14,440 --> 00:28:17,950
smart people who were doing things like

00:28:16,179 --> 00:28:20,410
managing big production systems and

00:28:17,950 --> 00:28:23,320
wanted to distribute complex software in

00:28:20,410 --> 00:28:28,660
the cloud that this was a really kind of

00:28:23,320 --> 00:28:32,440
crude but very holistic way of managing

00:28:28,660 --> 00:28:33,880
software in the cloud and when I looked

00:28:32,440 --> 00:28:35,290
at it and I compared it to other

00:28:33,880 --> 00:28:38,169
solutions it looked like it was

00:28:35,290 --> 00:28:39,940
comprehensive in that the things that we

00:28:38,169 --> 00:28:42,190
described before configuration

00:28:39,940 --> 00:28:43,570
management like chef sort of in the

00:28:42,190 --> 00:28:45,340
middle then there are all these other

00:28:43,570 --> 00:28:49,419
things around the edges that other

00:28:45,340 --> 00:28:52,480
solutions and packages offer to be fair

00:28:49,419 --> 00:28:55,059
though configuration management in these

00:28:52,480 --> 00:28:58,299
these companies like ops code now chef

00:28:55,059 --> 00:29:02,200
and puppet they do have a similar suite

00:28:58,299 --> 00:29:04,480
of technologies so the question is if we

00:29:02,200 --> 00:29:07,390
were there so early why didn't this

00:29:04,480 --> 00:29:09,120
catch on and I think the reason why has

00:29:07,390 --> 00:29:11,860
to do with what I've been talking about

00:29:09,120 --> 00:29:13,780
manifests are really hard and it's a

00:29:11,860 --> 00:29:17,049
huge roadblock that gets in your way

00:29:13,780 --> 00:29:19,570
when you're trying to learn Bosch it's

00:29:17,049 --> 00:29:21,370
very hard to learn Bosch nick has done a

00:29:19,570 --> 00:29:23,770
great job of giving us some tools that

00:29:21,370 --> 00:29:25,480
make that easier Bosch Jen and

00:29:23,770 --> 00:29:29,410
bootstrapping tools early on to get on

00:29:25,480 --> 00:29:32,260
AWS but it continues to be hard and now

00:29:29,410 --> 00:29:34,450
that we're making it easier maybe it'll

00:29:32,260 --> 00:29:36,520
be easier to onboard new participants

00:29:34,450 --> 00:29:39,040
whereas some of these other tools like

00:29:36,520 --> 00:29:40,990
chef are actually really easy to get

00:29:39,040 --> 00:29:42,790
started with because they're

00:29:40,990 --> 00:29:44,740
domain-specific languages and they have

00:29:42,790 --> 00:29:47,169
really easy examples and you can do

00:29:44,740 --> 00:29:49,780
something like it's not going to trigger

00:29:47,169 --> 00:29:51,370
any problems don't worry you can do

00:29:49,780 --> 00:29:51,879
something like oh I'm just going to set

00:29:51,370 --> 00:29:54,039
up an engine

00:29:51,879 --> 00:29:55,959
an open port 5,000 and it takes you five

00:29:54,039 --> 00:29:57,849
minutes to do something like that the

00:29:55,959 --> 00:30:01,329
problem is that they've come at it from

00:29:57,849 --> 00:30:02,999
a different direction in that you kind

00:30:01,329 --> 00:30:05,319
of end up taking that DSL and

00:30:02,999 --> 00:30:08,559
constructing something sort of like

00:30:05,319 --> 00:30:10,929
where you would end up with Bosch very

00:30:08,559 --> 00:30:13,059
complicated monolithic type of system

00:30:10,929 --> 00:30:16,029
that takes care of your snowflake

00:30:13,059 --> 00:30:18,969
environment in organization XYZ we

00:30:16,029 --> 00:30:21,879
started out with the complex complexity

00:30:18,969 --> 00:30:24,009
right in your face and I think it was

00:30:21,879 --> 00:30:25,899
necessary to do that do it that way

00:30:24,009 --> 00:30:29,019
two years later I think we're at the

00:30:25,899 --> 00:30:31,589
point where we can make it much more of

00:30:29,019 --> 00:30:33,669
a smooth transition to learning Bosch

00:30:31,589 --> 00:30:35,709
anyhow I would show you the next slide

00:30:33,669 --> 00:30:38,829
but it appears to be misbehaving but

00:30:35,709 --> 00:30:40,180
thanks for letting me finish and have a

00:30:38,829 --> 00:30:48,450
good day

00:30:40,180 --> 00:30:48,450

YouTube URL: https://www.youtube.com/watch?v=cpmAh_k7Jt8


