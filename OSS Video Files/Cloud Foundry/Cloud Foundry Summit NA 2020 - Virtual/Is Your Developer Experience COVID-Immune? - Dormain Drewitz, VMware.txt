Title: Is Your Developer Experience COVID-Immune? - Dormain Drewitz, VMware
Publication date: 2020-06-14
Playlist: Cloud Foundry Summit NA 2020 - Virtual
Description: 
	Is Your Developer Experience COVID-Immune? - Dormain Drewitz, VMware

For more info: https://www.cloudfoundry.org/ 

Modernizing applications for faster delivery cycles has long been a desire for organizations. But achieving that outcome is complicated, so other work takes priority. Years go by and the pain of maintaining and updating code lingers.

Then Spring 2020 happened. Suddenly, delivering new experiences digitally became the *only* way to reach customers. And competitors that moved faster were taking share in bigger chunks.

In this talk, youâ€™ll learn how COVID-19 has been a crucible moment for companies that have invested in developer experience. From healthcare to retail to finance, the ability to deliver software quickly with Cloud Foundry has separated the digitally prepared from the digital laggards.
Captions: 
	00:00:00,000 --> 00:00:03,959
hi there this is doorman drewett's from

00:00:01,589 --> 00:00:07,170
VMware today we're talking about whether

00:00:03,959 --> 00:00:09,690
your developer experience is covin

00:00:07,170 --> 00:00:12,300
immune so what does that mean first we

00:00:09,690 --> 00:00:13,920
have to define some terms like developer

00:00:12,300 --> 00:00:15,120
experience which can mean a lot of

00:00:13,920 --> 00:00:18,300
different things to a lot of different

00:00:15,120 --> 00:00:20,850
people but one thing that is often comes

00:00:18,300 --> 00:00:22,560
up is that developers are looking to be

00:00:20,850 --> 00:00:23,760
productive they want to be able to get

00:00:22,560 --> 00:00:25,439
things done quickly they want to be able

00:00:23,760 --> 00:00:27,449
to get feedback on their work quickly

00:00:25,439 --> 00:00:29,880
they want to get to production quickly

00:00:27,449 --> 00:00:32,399
and so a good developer experience is a

00:00:29,880 --> 00:00:34,380
productive developer experience it's one

00:00:32,399 --> 00:00:37,260
where you can your code sees the light

00:00:34,380 --> 00:00:39,090
of day in a relatively timely fashion

00:00:37,260 --> 00:00:42,570
and you can start to see the impact on

00:00:39,090 --> 00:00:43,980
your of your work on the world and in

00:00:42,570 --> 00:00:47,250
your business or the mission that you're

00:00:43,980 --> 00:00:50,219
working on so let's take a look but

00:00:47,250 --> 00:00:52,649
before we can really understand is our

00:00:50,219 --> 00:00:55,590
developer experience kovat immune what

00:00:52,649 --> 00:00:58,109
has the impact of of code been and what

00:00:55,590 --> 00:01:00,660
does it continue to be I think something

00:00:58,109 --> 00:01:03,030
that you know we've now been sheltering

00:01:00,660 --> 00:01:05,250
in place for many months and here we are

00:01:03,030 --> 00:01:08,250
on June 10th when I'm recording this and

00:01:05,250 --> 00:01:12,479
I've got a dashboard that you can go to

00:01:08,250 --> 00:01:15,390
at kovin 19 wavefront comm which is

00:01:12,479 --> 00:01:16,950
actually currently visualizing a number

00:01:15,390 --> 00:01:19,470
of different data sources from around

00:01:16,950 --> 00:01:23,490
the world showcasing as you can see

00:01:19,470 --> 00:01:26,460
cases recoveries mortality rates and you

00:01:23,490 --> 00:01:29,759
can drill in by country etc and this

00:01:26,460 --> 00:01:31,740
this is sort of telling us a story right

00:01:29,759 --> 00:01:33,780
now which is that even though there's

00:01:31,740 --> 00:01:35,009
many other challenges currently pressing

00:01:33,780 --> 00:01:38,610
and weighing on our minds in the world

00:01:35,009 --> 00:01:41,909
kovat remains a very much an important

00:01:38,610 --> 00:01:44,939
topic and one that we haven't seen the

00:01:41,909 --> 00:01:48,000
the end of that story yet the number of

00:01:44,939 --> 00:01:51,360
Canoe confirmed cases per day continues

00:01:48,000 --> 00:01:53,399
to reach new peaks and so that's

00:01:51,360 --> 00:01:55,770
something that this particular

00:01:53,399 --> 00:01:57,990
conversation around whether or not your

00:01:55,770 --> 00:02:00,719
developer experiences could immune isn't

00:01:57,990 --> 00:02:01,920
one that we got through that one maybe

00:02:00,719 --> 00:02:03,780
we're okay

00:02:01,920 --> 00:02:06,060
hopefully there's a lot of learnings

00:02:03,780 --> 00:02:08,580
that can come out of this but but an

00:02:06,060 --> 00:02:10,950
important theme here is that none of

00:02:08,580 --> 00:02:12,569
this was part of the plan and this ties

00:02:10,950 --> 00:02:13,650
back to that developer experience when

00:02:12,569 --> 00:02:16,260
you think about

00:02:13,650 --> 00:02:17,939
how how quickly are you able to get your

00:02:16,260 --> 00:02:21,810
code to production how quickly are you

00:02:17,939 --> 00:02:25,019
able to see the impact of the work that

00:02:21,810 --> 00:02:27,930
you're doing that that can be affected

00:02:25,019 --> 00:02:30,420
by weather how and how you plan and how

00:02:27,930 --> 00:02:31,950
you execute those plans but kovat was

00:02:30,420 --> 00:02:34,439
not part of anyone's plan

00:02:31,950 --> 00:02:36,420
everyone was caught by surprise and yet

00:02:34,439 --> 00:02:38,760
everyone has had to deal with it and

00:02:36,420 --> 00:02:41,220
this has really demonstrated folks who

00:02:38,760 --> 00:02:43,200
have been well prepared to handle it as

00:02:41,220 --> 00:02:44,970
well as folks that have are really

00:02:43,200 --> 00:02:46,889
struggling to be able to adapt and

00:02:44,970 --> 00:02:49,709
change because this was not part of the

00:02:46,889 --> 00:02:52,560
plan just to sort of talk about how this

00:02:49,709 --> 00:02:55,170
is beyond just a you know an individual

00:02:52,560 --> 00:02:58,139
and a consumer experience something in

00:02:55,170 --> 00:03:00,930
healthcare of course you know ICU bed

00:02:58,139 --> 00:03:04,950
capacity ventilator capacity how

00:03:00,930 --> 00:03:07,260
healthcare workers have been are able to

00:03:04,950 --> 00:03:09,989
be protected and and remain safe doing

00:03:07,260 --> 00:03:12,930
their their work on the front lines how

00:03:09,989 --> 00:03:15,780
patients get information and get health

00:03:12,930 --> 00:03:18,750
care even in the face of a global

00:03:15,780 --> 00:03:22,049
pandemic looking at financial services

00:03:18,750 --> 00:03:24,449
in the economy the economic impact none

00:03:22,049 --> 00:03:27,870
of this was part of the plan and so

00:03:24,449 --> 00:03:30,120
there's been a rapid response to the

00:03:27,870 --> 00:03:32,790
economic impact of the the global

00:03:30,120 --> 00:03:34,949
pandemic retail particularly essential

00:03:32,790 --> 00:03:39,659
retail has been something that's had

00:03:34,949 --> 00:03:42,659
immediate impact from kovat and suddenly

00:03:39,659 --> 00:03:45,389
the way that those businesses have had

00:03:42,659 --> 00:03:48,199
to engage customers and shifting on a

00:03:45,389 --> 00:03:51,959
dime and then of course governments that

00:03:48,199 --> 00:03:54,569
bear some responsibility to both provide

00:03:51,959 --> 00:03:58,229
the shutdown as well as safely reopen

00:03:54,569 --> 00:04:00,750
public services and spaces that's again

00:03:58,229 --> 00:04:04,199
none of this was part of the plan and

00:04:00,750 --> 00:04:06,810
yet everyone has had to adapt or try to

00:04:04,199 --> 00:04:09,180
adapt of course you know just as

00:04:06,810 --> 00:04:12,060
individuals working from home with their

00:04:09,180 --> 00:04:14,669
children not in school again this was

00:04:12,060 --> 00:04:17,430
definitely not part of the plan

00:04:14,669 --> 00:04:20,699
but here we are all trying to adapt and

00:04:17,430 --> 00:04:23,669
make the best of it but that adaptation

00:04:20,699 --> 00:04:26,190
can be really hard depending on how you

00:04:23,669 --> 00:04:27,210
were going about things before and if we

00:04:26,190 --> 00:04:28,740
look at

00:04:27,210 --> 00:04:31,139
software and how software's getting

00:04:28,740 --> 00:04:34,190
developed if the planning looks like

00:04:31,139 --> 00:04:39,030
this which is to take an example from

00:04:34,190 --> 00:04:41,250
actually a talk given up

00:04:39,030 --> 00:04:43,680
very conference EF summit a couple years

00:04:41,250 --> 00:04:45,660
ago in Boston the team from the Air

00:04:43,680 --> 00:04:47,040
Force was sharing what they were dealing

00:04:45,660 --> 00:04:49,110
with before they really began on their

00:04:47,040 --> 00:04:50,490
own digital transformation this was what

00:04:49,110 --> 00:04:53,610
it looked like to get through the

00:04:50,490 --> 00:04:56,250
procurement process and planning and

00:04:53,610 --> 00:04:59,910
implementation process of building new

00:04:56,250 --> 00:05:02,580
software pretty pretty mind-blowing in

00:04:59,910 --> 00:05:06,240
terms of its complexity and very very

00:05:02,580 --> 00:05:09,420
slow as you can imagine and so this is

00:05:06,240 --> 00:05:11,430
is hopefully not the planning process

00:05:09,420 --> 00:05:13,680
that that any of you listening to this

00:05:11,430 --> 00:05:17,490
we're dealing with but maybe there's

00:05:13,680 --> 00:05:20,880
some familiarity in terms of some level

00:05:17,490 --> 00:05:24,420
of friction that exists in being able to

00:05:20,880 --> 00:05:25,620
change plans as the situation changes

00:05:24,420 --> 00:05:27,650
around you and that's very much what

00:05:25,620 --> 00:05:30,450
we're dealing with now something that

00:05:27,650 --> 00:05:32,940
has actually been proven through a lot

00:05:30,450 --> 00:05:37,560
of extensive research from the doora

00:05:32,940 --> 00:05:41,160
group is is that the the organizations

00:05:37,560 --> 00:05:44,370
that are able to deploy code more

00:05:41,160 --> 00:05:46,980
frequently have a faster lead time from

00:05:44,370 --> 00:05:48,590
commit to deploy are also the same ones

00:05:46,980 --> 00:05:52,470
that are able to recover from incidents

00:05:48,590 --> 00:05:54,750
fewer change failure rates and and have

00:05:52,470 --> 00:05:56,820
a higher association with their their

00:05:54,750 --> 00:05:59,880
overall business performance so we

00:05:56,820 --> 00:06:02,400
already know that delivering software

00:05:59,880 --> 00:06:07,590
faster and more frequently to production

00:06:02,400 --> 00:06:10,350
is something that is as a an indicator

00:06:07,590 --> 00:06:12,840
of a really healthy elite performing

00:06:10,350 --> 00:06:15,690
software organization but what does that

00:06:12,840 --> 00:06:17,550
mean in terms of planning and that sort

00:06:15,690 --> 00:06:20,220
of reflects back on their ability to

00:06:17,550 --> 00:06:23,040
adapt those plans and the overall

00:06:20,220 --> 00:06:26,130
developer experience that their software

00:06:23,040 --> 00:06:28,620
engineers have so what we also know is

00:06:26,130 --> 00:06:31,730
looking at other survey work out there

00:06:28,620 --> 00:06:35,040
is that most folks are are not on a

00:06:31,730 --> 00:06:37,140
super frequent release schedule a lot of

00:06:35,040 --> 00:06:40,950
folks are still looking at that

00:06:37,140 --> 00:06:42,990
quarterly or longer release timeline for

00:06:40,950 --> 00:06:48,540
new applications and if you think about

00:06:42,990 --> 00:06:50,160
it here we are on June 10th we haven't

00:06:48,540 --> 00:06:52,380
quite hit three months since the

00:06:50,160 --> 00:06:54,240
shelter-in-place orders

00:06:52,380 --> 00:06:58,440
came out in my particular jurisdiction

00:06:54,240 --> 00:07:00,570
for example and so that means that you

00:06:58,440 --> 00:07:05,070
know you'd have one release in this

00:07:00,570 --> 00:07:06,900
entire timeframe and that is probably

00:07:05,070 --> 00:07:10,290
not enough to be able to really adapt

00:07:06,900 --> 00:07:12,450
your software to the very dynamic and

00:07:10,290 --> 00:07:13,710
changing environment and new information

00:07:12,450 --> 00:07:16,860
that has been coming out on a

00:07:13,710 --> 00:07:20,130
week-by-week basis you know a quarter

00:07:16,860 --> 00:07:25,620
ago we didn't know as much as we know

00:07:20,130 --> 00:07:28,200
now about not only the co vyd disease

00:07:25,620 --> 00:07:31,650
itself but the economic impact the

00:07:28,200 --> 00:07:35,730
retailing impact and the the civilian

00:07:31,650 --> 00:07:38,370
impacts and so this is still the reality

00:07:35,730 --> 00:07:40,650
that most people are dealing with it

00:07:38,370 --> 00:07:43,470
begs the question how quickly can you

00:07:40,650 --> 00:07:45,660
change your plan that is a litmus test

00:07:43,470 --> 00:07:48,420
for the developer experience that you

00:07:45,660 --> 00:07:50,940
have so let's take a look at some folks

00:07:48,420 --> 00:07:53,340
that have been able to adapt quickly so

00:07:50,940 --> 00:07:56,100
use some of these as some examples and

00:07:53,340 --> 00:07:59,040
some lessons learned to sort of share

00:07:56,100 --> 00:08:01,890
out and see what can we do to continue

00:07:59,040 --> 00:08:05,850
to be able to turn on a dime as we face

00:08:01,890 --> 00:08:08,790
continued uncertainty with the remaining

00:08:05,850 --> 00:08:13,730
presence of kovat in our lives and the

00:08:08,790 --> 00:08:15,420
unabating pace at which new cases are

00:08:13,730 --> 00:08:18,990
coming to light

00:08:15,420 --> 00:08:21,240
so in healthcare just an example of a

00:08:18,990 --> 00:08:24,270
healthcare organization that was able to

00:08:21,240 --> 00:08:26,990
go from idea to production in 72 hours

00:08:24,270 --> 00:08:32,330
in order to be able to visualize

00:08:26,990 --> 00:08:32,330
capacity for various healthcare

00:08:33,440 --> 00:08:38,430
resources and so some of the things that

00:08:36,630 --> 00:08:39,960
coming down to the developer experience

00:08:38,430 --> 00:08:42,810
how are they able to do this quickly

00:08:39,960 --> 00:08:45,510
need to be able to get a public URL to

00:08:42,810 --> 00:08:47,760
be able to publish that visualization

00:08:45,510 --> 00:08:50,880
making sure that that visualization can

00:08:47,760 --> 00:08:53,250
scale when there's an expected spike in

00:08:50,880 --> 00:08:55,130
terms of the traffic and interest that's

00:08:53,250 --> 00:08:57,180
going to come to this visualization

00:08:55,130 --> 00:09:00,180
application and of course making sure

00:08:57,180 --> 00:09:02,490
you have a robust CIC D pipeline so that

00:09:00,180 --> 00:09:04,890
future changes to that application can

00:09:02,490 --> 00:09:06,120
happen very seamlessly and of course all

00:09:04,890 --> 00:09:09,570
of us need to happen instead

00:09:06,120 --> 00:09:10,410
two hours that that was that was the new

00:09:09,570 --> 00:09:13,050
plan

00:09:10,410 --> 00:09:14,970
and so that was factoring in things that

00:09:13,050 --> 00:09:16,920
were coming in from other parts of the

00:09:14,970 --> 00:09:19,710
organization not just an arbitrary

00:09:16,920 --> 00:09:21,990
timeline from the software team but

00:09:19,710 --> 00:09:25,080
teams that were preparing to provide the

00:09:21,990 --> 00:09:26,760
communications air cover to go along

00:09:25,080 --> 00:09:29,430
with this new application to make people

00:09:26,760 --> 00:09:31,980
aware of it they needed timelines that

00:09:29,430 --> 00:09:34,020
they could work work within so that's

00:09:31,980 --> 00:09:37,010
one example another one looking more on

00:09:34,020 --> 00:09:39,810
the the economic side so in the

00:09:37,010 --> 00:09:42,450
financial services being able to respond

00:09:39,810 --> 00:09:45,150
quickly to economic stimulus programs

00:09:42,450 --> 00:09:47,160
another case where folks were able to go

00:09:45,150 --> 00:09:51,360
from idea to production in eight days

00:09:47,160 --> 00:09:54,360
and here being able to expose new API as

00:09:51,360 --> 00:09:56,460
to existing systems were critical to

00:09:54,360 --> 00:09:58,110
being able to bring this new application

00:09:56,460 --> 00:09:59,670
experience making sure that that was

00:09:58,110 --> 00:10:02,279
going to be able to scale knowing that

00:09:59,670 --> 00:10:04,860
there's a lot of demand in terms of

00:10:02,279 --> 00:10:07,650
being able to make use of these economic

00:10:04,860 --> 00:10:11,279
stimulus programs and and making sure

00:10:07,650 --> 00:10:13,680
that those incremental changes were part

00:10:11,279 --> 00:10:16,170
of the new plan knowing that the the

00:10:13,680 --> 00:10:18,630
first version that goes out the door in

00:10:16,170 --> 00:10:20,820
eight days was not going to be the the

00:10:18,630 --> 00:10:22,350
long-term version that was available

00:10:20,820 --> 00:10:25,820
that that things were going to iterate

00:10:22,350 --> 00:10:28,380
and so all of this has to happen

00:10:25,820 --> 00:10:30,839
responding to a you know arbitrary

00:10:28,380 --> 00:10:33,300
timelines coming from external sources

00:10:30,839 --> 00:10:36,060
like legislation bodies that are the

00:10:33,300 --> 00:10:38,010
ones passing these new stimulus programs

00:10:36,060 --> 00:10:40,529
and that becomes the new timeline under

00:10:38,010 --> 00:10:43,680
which a financial services company has

00:10:40,529 --> 00:10:46,610
to be able to respond in order to

00:10:43,680 --> 00:10:49,170
support their customers and constituents

00:10:46,610 --> 00:10:52,980
another example looking at essential

00:10:49,170 --> 00:10:56,959
retail as you can imagine a lot of folks

00:10:52,980 --> 00:10:59,820
suddenly shifting to online shopping for

00:10:56,959 --> 00:11:01,589
for things like groceries which may not

00:10:59,820 --> 00:11:04,560
have been really part of how they did

00:11:01,589 --> 00:11:06,690
their grocery shopping and so essential

00:11:04,560 --> 00:11:09,690
retailers need to be able to handle a

00:11:06,690 --> 00:11:12,029
hundred ex the the orders per day on

00:11:09,690 --> 00:11:14,370
their e-commerce systems 10x the

00:11:12,029 --> 00:11:17,640
e-commerce traffic and that of course

00:11:14,370 --> 00:11:19,980
generating two to three X the log volume

00:11:17,640 --> 00:11:21,600
in order to be able to to

00:11:19,980 --> 00:11:24,240
tract what is going on with these

00:11:21,600 --> 00:11:26,910
applications and I'm doing being able to

00:11:24,240 --> 00:11:29,880
do all of this without any any lead time

00:11:26,910 --> 00:11:32,490
to do load testing just needing to know

00:11:29,880 --> 00:11:35,640
that the system will just work and can

00:11:32,490 --> 00:11:37,140
handle it in addition to you know

00:11:35,640 --> 00:11:39,360
essential retailers want to be able to

00:11:37,140 --> 00:11:41,640
introduce new experiences like buy

00:11:39,360 --> 00:11:46,500
online pick up at curbside to be able to

00:11:41,640 --> 00:11:49,380
manage how folks are able to to transact

00:11:46,500 --> 00:11:52,950
with them and while also remaining safe

00:11:49,380 --> 00:11:55,860
and manage the overall presence of folks

00:11:52,950 --> 00:11:57,930
inside their stores so all of these new

00:11:55,860 --> 00:11:59,940
experiences or being able to scale

00:11:57,930 --> 00:12:02,970
existing experiences and iterate those

00:11:59,940 --> 00:12:04,920
those online experiences for essential

00:12:02,970 --> 00:12:06,630
retailers has also been critical and

00:12:04,920 --> 00:12:09,540
we're seeing examples of folks who've

00:12:06,630 --> 00:12:11,640
been able to turn on that dime and then

00:12:09,540 --> 00:12:14,970
of course finally government agencies

00:12:11,640 --> 00:12:18,960
thinking about how do they safely shut

00:12:14,970 --> 00:12:21,870
down and reopen public spaces and and

00:12:18,960 --> 00:12:24,930
public services you know examples here

00:12:21,870 --> 00:12:26,580
are government entities you know now

00:12:24,930 --> 00:12:28,380
finding themselves responsible for

00:12:26,580 --> 00:12:32,040
building completely new applications

00:12:28,380 --> 00:12:34,740
from scratch and so this case you know

00:12:32,040 --> 00:12:37,710
government agency prototyping a contact

00:12:34,740 --> 00:12:39,630
tracing application in 24 hours and then

00:12:37,710 --> 00:12:41,670
moving into a larger scale bethe talked

00:12:39,630 --> 00:12:43,440
about a net new application that needs

00:12:41,670 --> 00:12:46,260
to be able to scale to millions of users

00:12:43,440 --> 00:12:49,680
over time while also maintaining the

00:12:46,260 --> 00:12:51,960
utmost in citizen privacy that's that

00:12:49,680 --> 00:12:53,700
the developers working on that need to

00:12:51,960 --> 00:12:56,400
be able to make sure that they can

00:12:53,700 --> 00:12:59,610
iterate quickly as new scientific

00:12:56,400 --> 00:13:01,980
discoveries come onto the onto the scene

00:12:59,610 --> 00:13:03,900
and suddenly change what they need to be

00:13:01,980 --> 00:13:05,520
building for this application and of

00:13:03,900 --> 00:13:07,230
course other things like making sure

00:13:05,520 --> 00:13:09,270
that they're able to consider factors

00:13:07,230 --> 00:13:12,300
such as the the mobile device power

00:13:09,270 --> 00:13:14,130
management of their application and

00:13:12,300 --> 00:13:17,760
other concerns that come up and

00:13:14,130 --> 00:13:20,730
integration into existing government

00:13:17,760 --> 00:13:22,860
databases or being able to prepare to

00:13:20,730 --> 00:13:26,160
scale for completely new data sets that

00:13:22,860 --> 00:13:29,130
come in so all of these examples have

00:13:26,160 --> 00:13:31,710
certain things in common and and those

00:13:29,130 --> 00:13:32,980
come back to frequent changes to the

00:13:31,710 --> 00:13:35,230
software being

00:13:32,980 --> 00:13:38,140
to iterate so not relying on a big

00:13:35,230 --> 00:13:41,980
upfront plan none of this was part of

00:13:38,140 --> 00:13:43,870
anyone's plan and at this point while

00:13:41,980 --> 00:13:48,130
folks would love to have more concrete

00:13:43,870 --> 00:13:50,470
plans the the plan to change is the plan

00:13:48,130 --> 00:13:52,870
and so being able to make those frequent

00:13:50,470 --> 00:13:54,310
changes is something that is a critical

00:13:52,870 --> 00:13:57,280
factor in success to make sure your

00:13:54,310 --> 00:13:58,620
developer experience is kovat immune the

00:13:57,280 --> 00:14:00,940
second thing is making sure that

00:13:58,620 --> 00:14:03,460
scalability is something that doesn't

00:14:00,940 --> 00:14:05,980
incur a lot of overhead for developers

00:14:03,460 --> 00:14:08,380
making sure that the scaling just works

00:14:05,980 --> 00:14:10,300
so that developers can focus on

00:14:08,380 --> 00:14:13,030
delivering those new features and those

00:14:10,300 --> 00:14:16,540
new digital experiences to citizens to

00:14:13,030 --> 00:14:18,670
consumers and and that the scaling just

00:14:16,540 --> 00:14:21,460
works that's something that is really

00:14:18,670 --> 00:14:23,380
critical to to that kovat immune

00:14:21,460 --> 00:14:25,510
developer experience and then of course

00:14:23,380 --> 00:14:27,070
thinking about the complete path to

00:14:25,510 --> 00:14:28,810
production being very streamlined that

00:14:27,070 --> 00:14:30,610
supports those frequent changes and

00:14:28,810 --> 00:14:34,090
there's some underlying pieces that go

00:14:30,610 --> 00:14:37,150
in that Cloud Foundry was used in all of

00:14:34,090 --> 00:14:38,920
the examples that I talked about and has

00:14:37,150 --> 00:14:41,530
been a critical part of the the

00:14:38,920 --> 00:14:44,620
technology approach to it but it goes

00:14:41,530 --> 00:14:46,510
beyond just technology there's there's

00:14:44,620 --> 00:14:49,150
changes to people and process and the

00:14:46,510 --> 00:14:51,100
ways that developers are working the

00:14:49,150 --> 00:14:52,810
architectures and the patterns that the

00:14:51,100 --> 00:14:55,300
applications are being built in that

00:14:52,810 --> 00:14:58,540
need to go hand-in-hand with those

00:14:55,300 --> 00:15:01,300
underlying technology components in

00:14:58,540 --> 00:15:04,660
order to create this Kogan immune

00:15:01,300 --> 00:15:06,010
developer experience and so those are

00:15:04,660 --> 00:15:07,990
some of the things that that I'll get

00:15:06,010 --> 00:15:11,520
into but I just want to reiterate that

00:15:07,990 --> 00:15:13,900
we're sort of in this state now where

00:15:11,520 --> 00:15:17,350
we're getting used to some of the

00:15:13,900 --> 00:15:20,590
changes but there still remains a lot of

00:15:17,350 --> 00:15:23,500
uncertainty ahead and the ability to

00:15:20,590 --> 00:15:27,070
change plans quickly is going to remain

00:15:23,500 --> 00:15:30,280
a valuable asset for any organization

00:15:27,070 --> 00:15:33,130
and so thinking about is our developer

00:15:30,280 --> 00:15:36,250
experience one that supports frequent

00:15:33,130 --> 00:15:39,810
changes how quickly can we make changes

00:15:36,250 --> 00:15:43,360
to our plans and then have developers

00:15:39,810 --> 00:15:45,980
experiment and iterate within that as

00:15:43,360 --> 00:15:48,170
new information comes to light that

00:15:45,980 --> 00:15:50,810
becomes the new test of does our

00:15:48,170 --> 00:15:55,220
developer experience support this type

00:15:50,810 --> 00:15:56,810
of environment can it support change and

00:15:55,220 --> 00:15:59,090
there's a couple of things I mentioned

00:15:56,810 --> 00:16:00,920
beyond simply technology is cod foundry

00:15:59,090 --> 00:16:03,740
of course has been one that that and you

00:16:00,920 --> 00:16:06,020
saw the examples has really helped a lot

00:16:03,740 --> 00:16:08,900
of organizations on the technical side

00:16:06,020 --> 00:16:10,640
by extracting away the code from

00:16:08,900 --> 00:16:12,380
underlying infrastructure so that

00:16:10,640 --> 00:16:13,820
infrastructure can scale independently

00:16:12,380 --> 00:16:16,190
really solving those scalability

00:16:13,820 --> 00:16:18,170
challenges really providing a lot of

00:16:16,190 --> 00:16:21,020
self service for those developers to be

00:16:18,170 --> 00:16:23,870
able to make changes and access new new

00:16:21,020 --> 00:16:27,770
resources very quickly but there's more

00:16:23,870 --> 00:16:30,230
to do and so this is a set of things

00:16:27,770 --> 00:16:35,180
that I've looked at in terms of thinking

00:16:30,230 --> 00:16:37,640
about that friction to change and how to

00:16:35,180 --> 00:16:39,890
reduce that as really you know the the

00:16:37,640 --> 00:16:42,410
focus of you want to have a tech

00:16:39,890 --> 00:16:43,580
conversation that is the you're not

00:16:42,410 --> 00:16:45,020
really paying down the principal you

00:16:43,580 --> 00:16:47,060
want to you want to reduce that interest

00:16:45,020 --> 00:16:48,590
rate that is that friction to change is

00:16:47,060 --> 00:16:50,630
the interest rate measure of that

00:16:48,590 --> 00:16:52,520
technical debt and what are some of the

00:16:50,630 --> 00:16:54,500
things that people can do to address

00:16:52,520 --> 00:16:57,680
that things like test coverage

00:16:54,500 --> 00:16:59,450
test-driven development being a practice

00:16:57,680 --> 00:17:01,550
to get there but ultimately getting the

00:16:59,450 --> 00:17:03,410
point where you have the tests in place

00:17:01,550 --> 00:17:05,089
however you want to get to that point

00:17:03,410 --> 00:17:06,709
but you have the tests in place so that

00:17:05,089 --> 00:17:08,180
when you make changes you're able to do

00:17:06,709 --> 00:17:10,370
so confidently knowing that it's not

00:17:08,180 --> 00:17:12,230
going to break things that goes hand in

00:17:10,370 --> 00:17:13,430
hand with adopting continuous

00:17:12,230 --> 00:17:16,370
integration and continuous delivery

00:17:13,430 --> 00:17:18,650
pipelines so that the addition to those

00:17:16,370 --> 00:17:19,820
tasks other steps that need to happen in

00:17:18,650 --> 00:17:22,040
order to be able to deliver the software

00:17:19,820 --> 00:17:24,530
are fully automated so that that can

00:17:22,040 --> 00:17:27,530
happen very frequently without a lot of

00:17:24,530 --> 00:17:29,240
overhead something else that that's

00:17:27,530 --> 00:17:31,190
critically important and speaking with

00:17:29,240 --> 00:17:33,680
you know some of the industry analysts

00:17:31,190 --> 00:17:36,140
that are talking frequently with

00:17:33,680 --> 00:17:37,760
customers during this time those that

00:17:36,140 --> 00:17:40,790
have been succeeding are the ones that

00:17:37,760 --> 00:17:43,340
engaged security and compliance early

00:17:40,790 --> 00:17:46,730
and often both in the past and

00:17:43,340 --> 00:17:48,770
throughout this this this time and so

00:17:46,730 --> 00:17:51,230
thinking about there are practices and

00:17:48,770 --> 00:17:54,290
there are technologies that help bring

00:17:51,230 --> 00:17:56,660
that security lens and that the security

00:17:54,290 --> 00:17:59,080
questions earlier in the software

00:17:56,660 --> 00:18:01,630
development lifecycle and so there

00:17:59,080 --> 00:18:04,720
there are some tools like sneak and

00:18:01,630 --> 00:18:07,480
contrast security that that worked well

00:18:04,720 --> 00:18:10,090
to be able to pull get those concerns

00:18:07,480 --> 00:18:11,409
addressed earlier to make sure that

00:18:10,090 --> 00:18:13,809
those changes can happen in a more

00:18:11,409 --> 00:18:15,549
frictionless way micro-services

00:18:13,809 --> 00:18:18,279
architectures thinking about the

00:18:15,549 --> 00:18:20,350
scalability questions being able to

00:18:18,279 --> 00:18:22,360
scale things more independently can

00:18:20,350 --> 00:18:25,480
really really help make sure that the

00:18:22,360 --> 00:18:27,340
scaling just works and so having those

00:18:25,480 --> 00:18:30,730
architectural approaches and taking the

00:18:27,340 --> 00:18:33,190
time to decouple things and that need to

00:18:30,730 --> 00:18:35,260
scale at different rates so that you can

00:18:33,190 --> 00:18:37,779
you can meet these sudden surges and

00:18:35,260 --> 00:18:40,029
scaling events that occur and certainly

00:18:37,779 --> 00:18:41,529
that folks have seen and then finally is

00:18:40,029 --> 00:18:44,080
thinking through that entire path to

00:18:41,529 --> 00:18:46,120
production and beyond just we talked

00:18:44,080 --> 00:18:47,559
about security and compliance that's a

00:18:46,120 --> 00:18:50,320
big part of it that being baked into

00:18:47,559 --> 00:18:51,370
that path production continuous

00:18:50,320 --> 00:18:53,799
integration and continuous delivery

00:18:51,370 --> 00:18:56,260
certainly part of it but really the path

00:18:53,799 --> 00:18:58,360
the production conversation needs to

00:18:56,260 --> 00:19:01,269
involve ownership and and folks who

00:18:58,360 --> 00:19:04,299
really think about that entire process

00:19:01,269 --> 00:19:06,610
and take ownership of making it

00:19:04,299 --> 00:19:08,620
something that is more automated and so

00:19:06,610 --> 00:19:10,539
there's some great resources and

00:19:08,620 --> 00:19:12,940
discussions out there about how to go

00:19:10,539 --> 00:19:15,130
about that process so that developers

00:19:12,940 --> 00:19:17,620
ultimately have a great experience of

00:19:15,130 --> 00:19:20,440
getting to production quickly and

00:19:17,620 --> 00:19:22,299
there's really a team to rely on to

00:19:20,440 --> 00:19:25,480
handle that that overall end-to-end

00:19:22,299 --> 00:19:27,850
experience so thank you for your time

00:19:25,480 --> 00:19:30,360
hopefully this has been useful and stay

00:19:27,850 --> 00:19:30,360

YouTube URL: https://www.youtube.com/watch?v=_aNX2QbTDs4


