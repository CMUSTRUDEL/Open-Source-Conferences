Title: Deep Dive with KubeCF - Thulio Ferraz Assis, SUSE & Enrique Encalada, IBM
Publication date: 2020-06-14
Playlist: Cloud Foundry Summit NA 2020 - Virtual
Description: 
	Deep Dive with KubeCF - Thulio Ferraz Assis, SUSE & Enrique Encalada, IBM

For more info: https://www.cloudfoundry.org/ 

KubeCF, an open-source distribution of the Cloud Foundry Application Runtime (CFAR), aims to provide developers and enterprises with the best of two worlds, Kubernetes and Cloud Foundry, throughout a made easy approach. With KubeCF, users can continue focusing on their business logic development, while running on a container-native landscape, reducing the hassle of doing this from the ground up in Kubernetes. Kubernetes was never built to be a comprehensive platform; technologies like KubeCF can complement Kubernetes. In this talk, Thulio and Enrique will showcase how KubeCF is the bridge that gets us from BOSH releases for VMs to a Kubernetes-native PaaS. You will learn how to use KubeCF on any local development, and get some insights and lessons learned since its inception.
Captions: 
	00:00:00,000 --> 00:00:06,240
hello everyone thanks for joining in

00:00:02,669 --> 00:00:09,300
regain myself in this talk we are going

00:00:06,240 --> 00:00:12,570
to talk about qcif and the terrorists

00:00:09,300 --> 00:00:16,740
deep dive with qcf I hope it's going to

00:00:12,570 --> 00:00:20,300
be a good time and before we start how

00:00:16,740 --> 00:00:20,300
about you introduce yourself and begin

00:00:20,359 --> 00:00:26,490
yes thanks so I'm a deacon kilala from

00:00:24,180 --> 00:00:28,730
IBM I have been working with the club

00:00:26,490 --> 00:00:31,080
400 community since a couple of years

00:00:28,730 --> 00:00:33,000
mainly concentrated on all of these

00:00:31,080 --> 00:00:36,300
different efforts to containerized

00:00:33,000 --> 00:00:39,420
laundry being part of the quarks team

00:00:36,300 --> 00:00:41,280
worked well with the QCF team besides

00:00:39,420 --> 00:00:45,210
contributing to all of this open source

00:00:41,280 --> 00:00:47,460
repositories I also try to to adopt that

00:00:45,210 --> 00:00:49,789
inside the company for our own products

00:00:47,460 --> 00:00:54,870
and I think that that's basically me

00:00:49,789 --> 00:00:57,510
cool and I am too leaf analysis I'm a

00:00:54,870 --> 00:00:59,780
software engineer at Sousa part of the

00:00:57,510 --> 00:01:03,600
cloud application platform I

00:00:59,780 --> 00:01:07,250
bootstrapped qcf more than one year ago

00:01:03,600 --> 00:01:13,560
and since then I've become one of the

00:01:07,250 --> 00:01:17,130
most active contributors of it and I am

00:01:13,560 --> 00:01:18,750
going to start by telling you guys how

00:01:17,130 --> 00:01:21,150
to install cube CF locally with a

00:01:18,750 --> 00:01:22,799
minimal configuration and bear with me

00:01:21,150 --> 00:01:26,369
this is the same way that you would

00:01:22,799 --> 00:01:29,130
install for production with a slightly

00:01:26,369 --> 00:01:32,640
different configurations so let's take a

00:01:29,130 --> 00:01:35,909
quick look first we create a kind

00:01:32,640 --> 00:01:38,310
cluster calling the concrete cluster you

00:01:35,909 --> 00:01:41,579
give it a name in my case I gave it also

00:01:38,310 --> 00:01:45,000
a cube config path and then you obtain a

00:01:41,579 --> 00:01:47,939
cube CF release bundle from the cube CF

00:01:45,000 --> 00:01:50,399
repository in my case it was to the to

00:01:47,939 --> 00:01:54,060
the - and you have to download this file

00:01:50,399 --> 00:01:56,880
specifically at the bundle and then if

00:01:54,060 --> 00:01:59,790
you extract the bundle you will see that

00:01:56,880 --> 00:02:02,640
there are two files one is the CFO

00:01:59,790 --> 00:02:06,630
creator and then the other is the cube

00:02:02,640 --> 00:02:11,819
CF release those are the charts that we

00:02:06,630 --> 00:02:13,300
are going to install so let's point the

00:02:11,819 --> 00:02:16,450
cube config to the one that

00:02:13,300 --> 00:02:18,460
I used in the kind creation and then we

00:02:16,450 --> 00:02:20,440
create the quarks of crater namespace

00:02:18,460 --> 00:02:22,030
and we install the quarks of crater in

00:02:20,440 --> 00:02:24,640
the name states that we just created

00:02:22,030 --> 00:02:29,470
using the chart that we extracted from

00:02:24,640 --> 00:02:32,770
the bundle and then we set it to watch

00:02:29,470 --> 00:02:35,160
the namespace cube CF because it's where

00:02:32,770 --> 00:02:39,790
we are going to install cubes yes and

00:02:35,160 --> 00:02:42,400
then we wait for it to be ready and we

00:02:39,790 --> 00:02:46,720
install cube CF but first let's take a

00:02:42,400 --> 00:02:52,420
look on to the values that one more file

00:02:46,720 --> 00:02:54,820
for cube CF first here I'm passing a CF

00:02:52,420 --> 00:02:57,880
admin password so it makes it easy to

00:02:54,820 --> 00:03:01,540
log in as admin with the CF CLI later

00:02:57,880 --> 00:03:04,420
and then we specify external IDs for the

00:03:01,540 --> 00:03:08,650
router and SSH proxy and those IP

00:03:04,420 --> 00:03:13,410
addresses you can obtain from the cube

00:03:08,650 --> 00:03:15,910
CF control plane note if you if you get

00:03:13,410 --> 00:03:18,670
the values as one more you will see it

00:03:15,910 --> 00:03:21,640
under status addresses of the type

00:03:18,670 --> 00:03:24,520
internal IP and this IP is accessible

00:03:21,640 --> 00:03:29,050
from the host network so you can use

00:03:24,520 --> 00:03:31,420
that one and you specify at using in

00:03:29,050 --> 00:03:34,270
your system domain using an IP or ex IP

00:03:31,420 --> 00:03:38,350
or something else from your preference

00:03:34,270 --> 00:03:40,900
and then features we disable the ones

00:03:38,350 --> 00:03:44,709
that we can disable there are autoscaler

00:03:40,900 --> 00:03:47,080
cred hub and rotting api and then we

00:03:44,709 --> 00:03:49,750
call how install cube CF in the

00:03:47,080 --> 00:03:51,490
namespace that we specify on the CIA

00:03:49,750 --> 00:03:55,120
operator using the values that I just

00:03:51,490 --> 00:03:59,110
showed to you guys and there the chart

00:03:55,120 --> 00:04:03,160
that we extracted from the bundle you

00:03:59,110 --> 00:04:05,290
will notice that database and the ITU

00:04:03,160 --> 00:04:08,890
which is stands for instance group come

00:04:05,290 --> 00:04:11,890
up first and after a few minutes you

00:04:08,890 --> 00:04:15,900
will get a running cube CF installation

00:04:11,890 --> 00:04:21,400
locally after that you can point your CF

00:04:15,900 --> 00:04:24,480
CLI to the API dot system domain that we

00:04:21,400 --> 00:04:27,300
specified on the values that were mo

00:04:24,480 --> 00:04:29,310
and then log in with the user add me

00:04:27,300 --> 00:04:33,630
using the password that we also

00:04:29,310 --> 00:04:35,220
specified in the values of 105 okay so

00:04:33,630 --> 00:04:37,050
thanks a lot to do for tonight's

00:04:35,220 --> 00:04:39,480
explanation on cube CF and all of the

00:04:37,050 --> 00:04:42,480
details around it what I would like to

00:04:39,480 --> 00:04:45,300
do now is continue speaking I would keep

00:04:42,480 --> 00:04:49,410
CF put a bra with a very different just

00:04:45,300 --> 00:04:51,420
case this use case is about migration so

00:04:49,410 --> 00:04:53,460
one of the questions that I think is

00:04:51,420 --> 00:04:57,630
really valid is you know the question

00:04:53,460 --> 00:05:00,090
when can i migrate my applications that

00:04:57,630 --> 00:05:01,830
I have on a boat CF into a different

00:05:00,090 --> 00:05:03,810
stack something like you learn it is and

00:05:01,830 --> 00:05:07,100
this is where you actually can use keep

00:05:03,810 --> 00:05:09,780
safe what I would like to show today is

00:05:07,100 --> 00:05:13,890
this experiment that I did where I

00:05:09,780 --> 00:05:15,990
actually have a bossy F connected to two

00:05:13,890 --> 00:05:19,790
external services in this case a

00:05:15,990 --> 00:05:22,260
database and a blobster and then I

00:05:19,790 --> 00:05:25,140
pushed some you know some applications

00:05:22,260 --> 00:05:27,360
create some orgs some spaces and then I

00:05:25,140 --> 00:05:29,310
decided to shut down that F and

00:05:27,360 --> 00:05:32,310
and this is because I want to move that

00:05:29,310 --> 00:05:34,560
word load into cube CF so when I shut

00:05:32,310 --> 00:05:36,690
down that bossy F what I do is like I

00:05:34,560 --> 00:05:39,930
deploy cube CF own on my Q&A this

00:05:36,690 --> 00:05:42,300
cluster and of course connected cube CF

00:05:39,930 --> 00:05:44,130
to those services and as soon as that

00:05:42,300 --> 00:05:46,520
keep CF deployment is finished and I go

00:05:44,130 --> 00:05:48,780
and see if login I should be able to see

00:05:46,520 --> 00:05:52,050
the applications that I previously

00:05:48,780 --> 00:05:54,660
generate on my Bush F and I think this

00:05:52,050 --> 00:05:57,090
experiment have or will have a lot of

00:05:54,660 --> 00:05:58,860
value probably a lot of you know

00:05:57,090 --> 00:06:01,170
enterprises customers would like to have

00:05:58,860 --> 00:06:04,790
something like this and this is just one

00:06:01,170 --> 00:06:11,040
one way on how to achieve that such a

00:06:04,790 --> 00:06:14,450
migration yeah so my boss EF R consists

00:06:11,040 --> 00:06:17,250
of 11 BMS my cube CF consists of 4 nodes

00:06:14,450 --> 00:06:18,270
the first thing is let's speak about my

00:06:17,250 --> 00:06:21,870
initial

00:06:18,270 --> 00:06:26,070
shift boss EF I decided to take a

00:06:21,870 --> 00:06:27,480
foundry deployment version 12 36 I took

00:06:26,070 --> 00:06:30,480
out some of the components like the

00:06:27,480 --> 00:06:34,440
routing API in the crate web I just

00:06:30,480 --> 00:06:36,570
wanted to have a small footprint and the

00:06:34,440 --> 00:06:38,449
version is I will explain why I choose

00:06:36,570 --> 00:06:41,429
the 1236

00:06:38,449 --> 00:06:43,229
the next thing is like the experiment or

00:06:41,429 --> 00:06:45,539
the way to prove that experiment work

00:06:43,229 --> 00:06:48,389
was for me to generate three

00:06:45,539 --> 00:06:52,349
organizations team a team B team see

00:06:48,389 --> 00:06:53,309
under the dev space on each of these

00:06:52,349 --> 00:06:57,359
organizations

00:06:53,309 --> 00:06:59,279
I basically push applications and I try

00:06:57,359 --> 00:07:02,129
to hide to highlight the applications ID

00:06:59,279 --> 00:07:04,499
here to the left because eventually this

00:07:02,129 --> 00:07:06,989
should serve as a way to prove that the

00:07:04,499 --> 00:07:13,579
applications that I see on my cube CF

00:07:06,989 --> 00:07:13,579
match these applications the next thing

00:07:17,389 --> 00:07:23,519
the next thing was I want to show at the

00:07:21,509 --> 00:07:26,159
time that my boss Jeff was running of

00:07:23,519 --> 00:07:28,049
course I cannot do that now when my come

00:07:26,159 --> 00:07:31,709
online come online because my boss Jeff

00:07:28,049 --> 00:07:34,169
is not working is stupid because the

00:07:31,709 --> 00:07:36,269
cube surface is running out but at that

00:07:34,169 --> 00:07:38,339
time I was listing you know my

00:07:36,269 --> 00:07:42,629
applications my different organizations

00:07:38,339 --> 00:07:45,239
and the UID of each application if I

00:07:42,629 --> 00:07:47,699
move forward you will see that I do the

00:07:45,239 --> 00:07:49,499
same for all the different orgs then I

00:07:47,699 --> 00:07:53,519
you see the organization's I list them

00:07:49,499 --> 00:07:55,769
here and I eventually list my Posse f

00:07:53,519 --> 00:08:00,539
deployment and you will see that my

00:07:55,769 --> 00:08:03,360
machines are open running the next thing

00:08:00,539 --> 00:08:07,469
as I say before I use these two services

00:08:03,360 --> 00:08:09,599
I take advantage of IBM cloud already

00:08:07,469 --> 00:08:11,549
have the infrastructure there so why not

00:08:09,599 --> 00:08:15,089
to take those services and that I need

00:08:11,549 --> 00:08:16,860
also from the same catalog so I use ICD

00:08:15,089 --> 00:08:19,319
and of course one is for Postgres

00:08:16,860 --> 00:08:25,049
database another one is an object

00:08:19,319 --> 00:08:27,629
storage so now on the float the right I

00:08:25,049 --> 00:08:29,699
tried to illustrate before once we shut

00:08:27,629 --> 00:08:32,639
down the bore CF you need to deploy a

00:08:29,699 --> 00:08:35,189
cube CF now when you deploy a cube CF

00:08:32,639 --> 00:08:38,309
there is a lot of knowledge that once

00:08:35,189 --> 00:08:41,430
needs to build but it helps if you are

00:08:38,309 --> 00:08:43,139
already familiar with 12 Andre Furman

00:08:41,430 --> 00:08:45,139
was a little bit of a struggle because I

00:08:43,139 --> 00:08:49,259
deal with Bosh first and with chip CF

00:08:45,139 --> 00:08:51,569
but particularly with cube CF I was not

00:08:49,259 --> 00:08:51,990
able to manage I was not able to deploy

00:08:51,569 --> 00:08:55,740
my

00:08:51,990 --> 00:08:57,930
CFR the first time so by debugging and

00:08:55,740 --> 00:08:58,860
debugging I realize on different

00:08:57,930 --> 00:09:01,740
mistakes I did

00:08:58,860 --> 00:09:03,710
and for example here I try to highlight

00:09:01,740 --> 00:09:06,420
one thing the west o'clock controller

00:09:03,710 --> 00:09:10,590
basically the club controller was not

00:09:06,420 --> 00:09:14,700
able to decrypt a particular thing I

00:09:10,590 --> 00:09:17,070
eventually realized that for such a use

00:09:14,700 --> 00:09:18,870
case like this one a lot of the values

00:09:17,070 --> 00:09:21,120
that you define before for your CF

00:09:18,870 --> 00:09:23,880
configuration now you want to preserve

00:09:21,120 --> 00:09:26,070
them and use them in keep safe so you

00:09:23,880 --> 00:09:29,090
have a list of examples here like the

00:09:26,070 --> 00:09:33,510
domain encryption key encryption keys

00:09:29,090 --> 00:09:36,120
Ueda address build box for connection

00:09:33,510 --> 00:09:38,910
hash and so on you know and with related

00:09:36,120 --> 00:09:40,760
with the different components this made

00:09:38,910 --> 00:09:42,000
me realize that actually for this

00:09:40,760 --> 00:09:45,380
migration

00:09:42,000 --> 00:09:49,470
I just case cube CF is really good on

00:09:45,380 --> 00:09:53,250
simplifying issues one of the advantages

00:09:49,470 --> 00:09:56,220
of cube CF is like cube CF have a

00:09:53,250 --> 00:09:57,930
configuration priority with Bosh in

00:09:56,220 --> 00:10:02,430
terms that on the same way that Bosh

00:09:57,930 --> 00:10:03,900
behaves with base manifests and the fact

00:10:02,430 --> 00:10:06,050
that you can apply ops files on top of

00:10:03,900 --> 00:10:08,730
that you can do the same with cubes if

00:10:06,050 --> 00:10:10,620
you just need to do it on a different

00:10:08,730 --> 00:10:14,010
place on keep see if you do that on the

00:10:10,620 --> 00:10:15,780
values you know and keep see I have this

00:10:14,010 --> 00:10:19,170
really nice thing called operations in

00:10:15,780 --> 00:10:21,450
line which is just an array of ops five

00:10:19,170 --> 00:10:23,490
definition that you can define so I took

00:10:21,450 --> 00:10:25,770
advantage of that of course and I made

00:10:23,490 --> 00:10:27,750
sure that once a diplomate cube CF I

00:10:25,770 --> 00:10:30,750
could override particular properties

00:10:27,750 --> 00:10:34,670
that I need that I knew I need to have

00:10:30,750 --> 00:10:36,690
same values as on my old boss here

00:10:34,670 --> 00:10:39,660
compatible versions is yet another

00:10:36,690 --> 00:10:42,360
advantage as I said before I chose the

00:10:39,660 --> 00:10:45,120
version 12 36 and that was some purpose

00:10:42,360 --> 00:10:46,770
because I knew that cube CF support that

00:10:45,120 --> 00:10:49,170
particular achieve deployment version

00:10:46,770 --> 00:10:52,170
and I didn't want to have a version of

00:10:49,170 --> 00:10:54,540
my boss gf that was not in line with the

00:10:52,170 --> 00:10:58,850
version of my cube CF because this is

00:10:54,540 --> 00:11:01,500
prom to a lot of incompatibility issues

00:10:58,850 --> 00:11:04,380
last but not least one of the advantages

00:11:01,500 --> 00:11:05,760
is is debugging cube CF of a really nice

00:11:04,380 --> 00:11:09,779
thing for each pod

00:11:05,760 --> 00:11:11,880
if you go into the pod first of all of

00:11:09,779 --> 00:11:13,769
course our inference saying that but you

00:11:11,880 --> 00:11:15,930
can also use really nice tools like

00:11:13,769 --> 00:11:19,010
kindness that simplify the way of

00:11:15,930 --> 00:11:22,350
navigating through the pot in any space

00:11:19,010 --> 00:11:25,290
about each chip safe pod have in it

00:11:22,350 --> 00:11:27,870
containers like the white one so if you

00:11:25,290 --> 00:11:29,820
go to a pot that is not just running you

00:11:27,870 --> 00:11:32,279
can see through the in each container to

00:11:29,820 --> 00:11:34,500
what other component is this pot waiting

00:11:32,279 --> 00:11:37,620
for and then you can go to that other

00:11:34,500 --> 00:11:39,660
component or report and see two water

00:11:37,620 --> 00:11:41,399
component that port is waiting so if

00:11:39,660 --> 00:11:44,730
there is issues song where you can

00:11:41,399 --> 00:11:46,410
actually easily track you know go back

00:11:44,730 --> 00:11:52,589
to the root pot that is causing all of

00:11:46,410 --> 00:11:55,050
these deficiencies so once I managed to

00:11:52,589 --> 00:12:02,279
deploy my cube CF and of course I was

00:11:55,050 --> 00:12:04,560
really happy at that point I will show

00:12:02,279 --> 00:12:10,800
you what what I did the first thing was

00:12:04,560 --> 00:12:13,019
of course my Bush CF was stop it so all

00:12:10,800 --> 00:12:15,959
of those beans were failing actually

00:12:13,019 --> 00:12:18,569
it's important to do this because if you

00:12:15,959 --> 00:12:21,240
have two foundries pointing to the same

00:12:18,569 --> 00:12:25,560
database you have you can get into

00:12:21,240 --> 00:12:27,029
issues one example is like one foundry

00:12:25,560 --> 00:12:30,750
in this case of what Jeff was getting

00:12:27,029 --> 00:12:32,730
the lock for particular database while

00:12:30,750 --> 00:12:34,889
they were foundry in this case gypsy

00:12:32,730 --> 00:12:38,430
important was not able to get lock

00:12:34,889 --> 00:12:42,449
because it was already given the next

00:12:38,430 --> 00:12:45,089
thing I can show you my cube CF pot all

00:12:42,449 --> 00:12:47,699
of them are running and ideally what we

00:12:45,089 --> 00:12:51,779
want to show of course is that if I log

00:12:47,699 --> 00:12:54,360
in into my cube CF CF instance I can see

00:12:51,779 --> 00:12:57,529
what I created on my bookshelf which is

00:12:54,360 --> 00:13:02,519
very very nice so I can list my herbs

00:12:57,529 --> 00:13:06,329
I'm already on particular org called him

00:13:02,519 --> 00:13:08,279
a I can use my applications I can list

00:13:06,329 --> 00:13:09,569
my do ID of this application and

00:13:08,279 --> 00:13:11,730
probably you want to compare that later

00:13:09,569 --> 00:13:14,939
used to make sure that it's the same UID

00:13:11,730 --> 00:13:18,130
and can tell you that it's the same and

00:13:14,939 --> 00:13:20,680
of course you can then

00:13:18,130 --> 00:13:22,930
just reach the end point of the

00:13:20,680 --> 00:13:24,700
application and you will see that well

00:13:22,930 --> 00:13:27,040
you just got the same app you had before

00:13:24,700 --> 00:13:30,070
in poor chef but now you have run in

00:13:27,040 --> 00:13:32,740
that uncured news I think that finalized

00:13:30,070 --> 00:13:34,780
my my demo might in the migration use

00:13:32,740 --> 00:13:38,350
case is very important and I hope this

00:13:34,780 --> 00:13:40,750
was useful for you cool thanks a lot

00:13:38,350 --> 00:13:43,540
Enrique and I think this is a very good

00:13:40,750 --> 00:13:46,120
starting point for the community to

00:13:43,540 --> 00:13:50,170
experiment more and more with this

00:13:46,120 --> 00:13:53,590
migration from Bosch deployments to cube

00:13:50,170 --> 00:13:56,760
CF on kubernetes and now we have some

00:13:53,590 --> 00:13:56,760

YouTube URL: https://www.youtube.com/watch?v=e9soIE-Z414


