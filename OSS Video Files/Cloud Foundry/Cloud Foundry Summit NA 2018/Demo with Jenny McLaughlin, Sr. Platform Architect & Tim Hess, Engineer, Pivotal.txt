Title: Demo with Jenny McLaughlin, Sr. Platform Architect & Tim Hess, Engineer, Pivotal
Publication date: 2018-04-19
Playlist: Cloud Foundry Summit NA 2018
Description: 
	Demo with Jenny McLaughlin, Sr. Platform Architect & Tim Hess, Engineer, Pivotal

About Tim Hess
Tim Hess is an engineer on the Steeltoe project. He's been slinging code professionally for over 10 years, with healthy doses of software architecture and system administration responsibilities along the way. In order to feed his expansive appetite for learning, Hess also runs the premier software developer group in Central Wisconsin. 

About Jenny McLaughlin
​​​​Jenny McLaughlin has years of Java and .NET experience across various industries. She is currently a Platform Architect at Pivotal helping customers move toward a better way of building and operating their applications. Consequently, customers have become thought leaders on their cloud native journey. Jenny has involved with many speaking engagements including Meetup talks and non-profit organization classes. Topics vary from Spring subjects, Functions to .NET and .NET Core.
Captions: 
	00:00:00,000 --> 00:00:06,649
I wanted to end on a high note because

00:00:02,429 --> 00:00:10,200
we have a a team that's been working on

00:00:06,649 --> 00:00:11,969
really interesting project based on the

00:00:10,200 --> 00:00:14,880
work they've been doing with still - and

00:00:11,969 --> 00:00:17,820
they're going to end this with a little

00:00:14,880 --> 00:00:20,939
demo and some lights and maybe some

00:00:17,820 --> 00:00:22,260
strobe action on something they've

00:00:20,939 --> 00:00:22,949
created so I want to bring up to the

00:00:22,260 --> 00:00:26,369
stage

00:00:22,949 --> 00:00:28,410
Tim Hess an engineer at pivotal and

00:00:26,369 --> 00:00:30,359
Ginny McLaughlin from the senior

00:00:28,410 --> 00:00:32,790
platform architect at pivotal come on

00:00:30,359 --> 00:00:33,940
out Ginny and Tim

00:00:32,790 --> 00:00:34,740
[Music]

00:00:33,940 --> 00:00:36,570
[Applause]

00:00:34,740 --> 00:00:45,830
[Music]

00:00:36,570 --> 00:00:48,930
I won't do that again

00:00:45,830 --> 00:00:52,530
thank you for coming out Jenny I'm super

00:00:48,930 --> 00:00:54,930
so we have support devices that are

00:00:52,530 --> 00:00:56,070
placed strategically around the stage if

00:00:54,930 --> 00:00:57,360
you're wondering why we were hanging

00:00:56,070 --> 00:01:00,330
lamps off the corner

00:00:57,360 --> 00:01:01,559
and we're gonna let Ginny and Tim tell

00:01:00,330 --> 00:01:03,739
us a little bit about what the work

00:01:01,559 --> 00:01:06,390
they've been doing and why we have lamps

00:01:03,739 --> 00:01:07,830
well thank you for that Abbie I'm

00:01:06,390 --> 00:01:11,490
actually an engineer on the Steel Toe

00:01:07,830 --> 00:01:13,680
project so we've been working to build

00:01:11,490 --> 00:01:18,030
application build tools for dotnet

00:01:13,680 --> 00:01:21,630
applications so Tim what was the

00:01:18,030 --> 00:01:22,979
motivation for your team to develop a

00:01:21,630 --> 00:01:25,170
new Steel Toe framework in the first

00:01:22,979 --> 00:01:27,210
place well the same way that pivotal has

00:01:25,170 --> 00:01:29,070
been working with the Java community to

00:01:27,210 --> 00:01:30,899
develop spring projects we wanted to

00:01:29,070 --> 00:01:33,390
have tools for year done add up

00:01:30,899 --> 00:01:36,300
applications to solve problems with

00:01:33,390 --> 00:01:38,369
micro-services so here are some of the

00:01:36,300 --> 00:01:41,040
examples in the most recent release of

00:01:38,369 --> 00:01:43,590
Steel Toe we added a client API library

00:01:41,040 --> 00:01:45,750
so that you can work with cred hub to

00:01:43,590 --> 00:01:49,830
store credentials like passwords and

00:01:45,750 --> 00:01:52,500
certificates so as a developer I can

00:01:49,830 --> 00:01:55,280
leverage the same cloud native patterns

00:01:52,500 --> 00:01:58,200
such as the circuit breaker for

00:01:55,280 --> 00:02:01,020
preventing cascading failure service

00:01:58,200 --> 00:02:04,140
discovery at runtime and centralizing

00:02:01,020 --> 00:02:06,180
all my application configurations that's

00:02:04,140 --> 00:02:07,799
right right absolutely and not only that

00:02:06,180 --> 00:02:09,329
it's all completely open-source and we

00:02:07,799 --> 00:02:12,299
recently joined the net foundation oh

00:02:09,329 --> 00:02:19,070
that is very cool you know what else is

00:02:12,299 --> 00:02:19,070
cool these light bulbs

00:02:24,080 --> 00:02:35,030
so these lightbulbs are smart they allow

00:02:30,320 --> 00:02:36,890
me to change the color remotely spiral

00:02:35,030 --> 00:02:40,520
light bulbs are getting really popular

00:02:36,890 --> 00:02:43,130
in home automation and among Internet of

00:02:40,520 --> 00:02:46,010
Things products so Tim Kuwait

00:02:43,130 --> 00:02:48,620
demonstrate how easy it is to use Steel

00:02:46,010 --> 00:02:50,710
Toe and down there micro-services to

00:02:48,620 --> 00:02:52,640
change the color of these light bulbs

00:02:50,710 --> 00:02:54,110
absolutely but rather than just

00:02:52,640 --> 00:02:55,580
arbitrarily changing the color like you

00:02:54,110 --> 00:02:57,740
did just now how about if we work in

00:02:55,580 --> 00:02:58,910
that new credibly brer e we're gonna be

00:02:57,740 --> 00:03:00,410
running this demo in pivitol Cloud

00:02:58,910 --> 00:03:02,240
Foundry so we've already got a credible

00:03:00,410 --> 00:03:04,820
server available oh that's an awesome

00:03:02,240 --> 00:03:08,870
idea we can finalize the strength of a

00:03:04,820 --> 00:03:11,750
password and convert the stress to our

00:03:08,870 --> 00:03:14,540
RGB color code then send that color code

00:03:11,750 --> 00:03:15,950
to the light bulbs I think it's probably

00:03:14,540 --> 00:03:17,390
also a good idea to plug in a circuit

00:03:15,950 --> 00:03:19,400
breaker here since this is a traditional

00:03:17,390 --> 00:03:20,990
systems integration so that way we have

00:03:19,400 --> 00:03:23,150
a fallback algorithm if for any reason

00:03:20,990 --> 00:03:28,990
we can reach the creditor that makes

00:03:23,150 --> 00:03:28,990
sense so let's switch to the demo

00:03:30,580 --> 00:03:37,970
alright so we have a color gradient here

00:03:34,030 --> 00:03:41,900
strong passwords are green and weak

00:03:37,970 --> 00:03:43,280
passwords are red I'll start with

00:03:41,900 --> 00:03:47,989
something a little on the weaker side

00:03:43,280 --> 00:03:49,400
here five characters not looking like a

00:03:47,989 --> 00:03:50,540
very complex password we probably

00:03:49,400 --> 00:03:54,830
shouldn't use that for anything

00:03:50,540 --> 00:03:55,820
important what should we do so we get

00:03:54,830 --> 00:03:58,520
something a little a little bit stronger

00:03:55,820 --> 00:04:00,530
in here a B what do you think absolutely

00:03:58,520 --> 00:04:02,600
we are we're it's it's everyone's

00:04:00,530 --> 00:04:04,489
attention spans are waning we need to we

00:04:02,600 --> 00:04:08,120
need to amp it up a bit amp it up let's

00:04:04,489 --> 00:04:09,830
get something tougher well I don't think

00:04:08,120 --> 00:04:12,530
I could memorize that password so it

00:04:09,830 --> 00:04:14,810
ought to be good for a few centuries Wow

00:04:12,530 --> 00:04:17,720
litora is gonna take centuries for us to

00:04:14,810 --> 00:04:21,560
crack that password and we got green

00:04:17,720 --> 00:04:24,410
light bulbs that was fun so what else

00:04:21,560 --> 00:04:27,380
could we do with these smart light bulbs

00:04:24,410 --> 00:04:29,620
and the Stuart Oh framework how about if

00:04:27,380 --> 00:04:33,260
we throw some sentiment analysis at them

00:04:29,620 --> 00:04:35,860
so sentiment analysis tools are getting

00:04:33,260 --> 00:04:37,599
better and becoming more popular

00:04:35,860 --> 00:04:40,900
anything you say can have a segment

00:04:37,599 --> 00:04:44,710
score for example after a hotel stay

00:04:40,900 --> 00:04:47,229
when asked to give feedback you know if

00:04:44,710 --> 00:04:49,629
I were to say something about my

00:04:47,229 --> 00:04:53,259
experience well that's not what I meant

00:04:49,629 --> 00:04:56,199
okay so that was a neutral statement we

00:04:53,259 --> 00:04:58,780
got segment score of 50% which is mapped

00:04:56,199 --> 00:05:01,060
to color yellow sorry sometimes they get

00:04:58,780 --> 00:05:03,250
a little literal what I really wants to

00:05:01,060 --> 00:05:08,080
do is to give a positive feedback rate

00:05:03,250 --> 00:05:17,020
so something like I I love the staff and

00:05:08,080 --> 00:05:19,870
food maybe right now we get 98 percent

00:05:17,020 --> 00:05:24,400
said mintus score that is a very

00:05:19,870 --> 00:05:27,669
positive feedback and we map that score

00:05:24,400 --> 00:05:32,439
to color green and now if I were to say

00:05:27,669 --> 00:05:34,210
something negative hit a receptionist we

00:05:32,439 --> 00:05:41,229
didn't mean to say that sorry it was

00:05:34,210 --> 00:05:43,990
kind of mean so now we get some really

00:05:41,229 --> 00:05:45,610
red bulbs votes so if we switch back to

00:05:43,990 --> 00:05:50,979
the slides we'll talk you through how we

00:05:45,610 --> 00:05:52,569
did this real quickly we take whatever

00:05:50,979 --> 00:05:55,060
was entered into that form no matter how

00:05:52,569 --> 00:05:56,110
silly or basic we send it off to the

00:05:55,060 --> 00:05:58,389
Microsoft cognitive services

00:05:56,110 --> 00:06:00,699
specifically their text analytics API

00:05:58,389 --> 00:06:02,770
and we request the sentiment score that

00:06:00,699 --> 00:06:05,439
sentiment score comes back as a decimal

00:06:02,770 --> 00:06:07,419
which is effectively a percentage we map

00:06:05,439 --> 00:06:10,930
that using our scale to a color just on

00:06:07,419 --> 00:06:13,900
the color to the light bulbs voila and

00:06:10,930 --> 00:06:16,689
cognitive service requires an API key

00:06:13,900 --> 00:06:19,449
obviously we're not going to put that

00:06:16,689 --> 00:06:22,870
API key in our source code and upload to

00:06:19,449 --> 00:06:25,770
a public it hub repository so we decided

00:06:22,870 --> 00:06:29,500
to leverage you know config server

00:06:25,770 --> 00:06:32,169
backed by our private registry to store

00:06:29,500 --> 00:06:35,169
that API key and use do to retrieve the

00:06:32,169 --> 00:06:37,900
key and run time all right

00:06:35,169 --> 00:06:39,890
so how does everyone like our demos so

00:06:37,900 --> 00:06:45,360
far

00:06:39,890 --> 00:06:49,740
all right let's do a retro if you like

00:06:45,360 --> 00:06:53,510
the demos please tweet with hashtag CF

00:06:49,740 --> 00:06:57,270
bulbs right now with all your wonderful

00:06:53,510 --> 00:07:01,200
compliments if you don't like the demos

00:06:57,270 --> 00:07:03,240
please don't tweet at all of course I'm

00:07:01,200 --> 00:07:08,460
just kidding we welcome your

00:07:03,240 --> 00:07:10,290
constructive feedback as well so the way

00:07:08,460 --> 00:07:12,150
this demo works is we're gonna reach out

00:07:10,290 --> 00:07:14,280
to Twitter we're gonna grab the 10 most

00:07:12,150 --> 00:07:16,590
recent tweets with the hashtag of CF

00:07:14,280 --> 00:07:18,540
bulbs we're going to bundle them up send

00:07:16,590 --> 00:07:20,160
them off to cognitive services get

00:07:18,540 --> 00:07:22,530
individual sentiment scores for each

00:07:20,160 --> 00:07:24,419
tweet we're gonna average those scores

00:07:22,530 --> 00:07:27,030
out together apply the score to the

00:07:24,419 --> 00:07:30,350
color scale and send that scale send

00:07:27,030 --> 00:07:32,880
that to the bulbs we also implement

00:07:30,350 --> 00:07:35,100
implemented the service discovery

00:07:32,880 --> 00:07:39,450
pattern between the Twitter monitor and

00:07:35,100 --> 00:07:41,730
our smart smart bulb UI application of

00:07:39,450 --> 00:07:43,890
course there's a config server to store

00:07:41,730 --> 00:07:46,410
the location of the cinnamon analysis

00:07:43,890 --> 00:07:48,900
tool let's go ahead and switch over to

00:07:46,410 --> 00:07:51,330
the demo yep and hopefully you got all

00:07:48,900 --> 00:08:00,270
your feedback in let's see what you had

00:07:51,330 --> 00:08:07,300
to say not bad

00:08:00,270 --> 00:08:11,410
thank you thank you 90% I'm happy so the

00:08:07,300 --> 00:08:14,950
goal of this demo is for you to see what

00:08:11,410 --> 00:08:19,510
is possible and you can do easily as

00:08:14,950 --> 00:08:22,150
well if you would like to see more

00:08:19,510 --> 00:08:24,480
behind the scenes things like circuit

00:08:22,150 --> 00:08:27,460
breaker dashboard and how we actually

00:08:24,480 --> 00:08:30,400
use the spring cloud services to build

00:08:27,460 --> 00:08:32,080
out the demo stop by pivotal booth for

00:08:30,400 --> 00:08:34,029
the next couple of days and would be

00:08:32,080 --> 00:08:35,620
happy to explain all the details to you

00:08:34,029 --> 00:08:39,279
if we switch back to the slides again

00:08:35,620 --> 00:08:42,390
one more time we have the github

00:08:39,279 --> 00:08:44,440
location and you can pull down our code

00:08:42,390 --> 00:08:45,480
it's open source feel free to do

00:08:44,440 --> 00:08:49,000
whatever you like with it

00:08:45,480 --> 00:08:50,260
have some fun with it get a chance to

00:08:49,000 --> 00:08:52,540
see how easy it is to work with Steel

00:08:50,260 --> 00:08:53,890
Toe yeah everybody should tell it at

00:08:52,540 --> 00:08:55,150
their house for all their smart bulbs

00:08:53,890 --> 00:08:58,150
and that way they can detect what's

00:08:55,150 --> 00:09:00,730
actually going on yeah yeah after you

00:08:58,150 --> 00:09:02,860
have had some fun you can start to apply

00:09:00,730 --> 00:09:05,380
these cloud native patterns to your own

00:09:02,860 --> 00:09:07,240
net applications things like you can

00:09:05,380 --> 00:09:09,370
grab your integration points with

00:09:07,240 --> 00:09:13,950
circuit breakers new your system or

00:09:09,370 --> 00:09:16,360
apply you know all the application

00:09:13,950 --> 00:09:21,370
configurations put those things in a

00:09:16,360 --> 00:09:23,080
config server alright to sum up thank

00:09:21,370 --> 00:09:24,990
you so much for coming up that was

00:09:23,080 --> 00:09:27,060
awesome come on everybody

00:09:24,990 --> 00:09:28,770
[Applause]

00:09:27,060 --> 00:09:33,460
[Music]

00:09:28,770 --> 00:09:33,460

YouTube URL: https://www.youtube.com/watch?v=r6SgqOh_JjY


