Title: T-Mobile Going Digital - Speed, Scale & Agility Delivered on Cloud Foundry Leveraging TIBCO
Publication date: 2018-04-21
Playlist: Cloud Foundry Summit NA 2018
Description: 
	T-Mobile Going Digital - Speed, Scale & Agility Delivered on Cloud Foundry Leveraging TIBCO - Rakesh Madireddy, T-Mobile & Hitesh Nembhwani, TIBCO Software

With over 70 million customers, T-Mobile’s vision is to create an exceptional customer experience through the T-Mobile-as-a-Service platform. This needed a cloud-native platform that delivered at scale while still providing control and monitoring at a granular level. Leveraging TIBCO BusinessWorks Container Edition allowed us to do both - leverage the existing assets while building out and connecting the new class of microservices and APIs.

Join this session to hear from the battle hardened team on best practices, lessons learned and myths debunking while realizing such a digital transformation that touched aspects of technology as well as team culture. 

About Hitesh Nembhwani
Having lived and worked in multiple countries and all 3 regions of APJ, NAM and EMEA, Hitesh (almost) speaks most languages that TIBCO's customers use :) Over the last 10 years in Enterprise Software, he has donned numerous hats including Engineering, Consulting and Customer Advocacy.

He's a regular speaker at meetups, developer events and global conferences (incl. TIBCO). When he's not busy piecing together application architectures for the customers, he likes to try his hand at cooking or playing tennis.
Captions: 
	00:00:00,030 --> 00:00:03,780
hello everyone thank you for joining us

00:00:03,300 --> 00:00:05,520
today

00:00:03,780 --> 00:00:07,259
my name is Satish name Bonnie I'm from

00:00:05,520 --> 00:00:09,750
customer engineering from TIBCO and

00:00:07,259 --> 00:00:12,059
along with me I have location Sandra

00:00:09,750 --> 00:00:13,080
from t-mobile thanks guys for joining us

00:00:12,059 --> 00:00:15,240
today

00:00:13,080 --> 00:00:17,460
before we get started how many of you

00:00:15,240 --> 00:00:23,400
here do app integration build micro

00:00:17,460 --> 00:00:28,769
services api's Wow have you heard of tip

00:00:23,400 --> 00:00:31,109
Co before nice little bit more hands

00:00:28,769 --> 00:00:32,940
would probably do good but we will

00:00:31,109 --> 00:00:34,440
settle for this so hopefully in the next

00:00:32,940 --> 00:00:37,110
30 minutes will give you a little bit of

00:00:34,440 --> 00:00:40,110
overview of what tip code does and how

00:00:37,110 --> 00:00:42,750
tip go has helped t-mobile to in their

00:00:40,110 --> 00:00:44,579
digital transformation Chandra and

00:00:42,750 --> 00:00:46,110
Rakesh from t-mobile have been spending

00:00:44,579 --> 00:00:48,239
over a decade now for building apps

00:00:46,110 --> 00:00:50,250
using tip Co they've started off with

00:00:48,239 --> 00:00:51,780
the traditional and the famous ESB

00:00:50,250 --> 00:00:54,420
services styles and the slowly moving

00:00:51,780 --> 00:00:56,789
away to leverage micro services and ap

00:00:54,420 --> 00:00:59,969
is now - in order to meet the emerging

00:00:56,789 --> 00:01:02,520
needs and demands and for the vision of

00:00:59,969 --> 00:01:04,350
digital transformation TiVo by leverages

00:01:02,520 --> 00:01:06,479
typical business works container edition

00:01:04,350 --> 00:01:08,909
and pivotal Cloud Foundry not only to

00:01:06,479 --> 00:01:10,680
meet their customer volumes but also to

00:01:08,909 --> 00:01:13,320
provide them a unified experience across

00:01:10,680 --> 00:01:15,090
all the channels so Rakesh over to you

00:01:13,320 --> 00:01:20,280
why don't you let us know a little bit

00:01:15,090 --> 00:01:22,200
more on the story thank you hi my name

00:01:20,280 --> 00:01:31,829
is Rakesh I'm principal engineer at

00:01:22,200 --> 00:01:35,250
t-mobile - so just a brief introduction

00:01:31,829 --> 00:01:38,100
of what is t-mobile t-mobile is one of

00:01:35,250 --> 00:01:42,030
the largest well Wireless 4G LTE

00:01:38,100 --> 00:01:44,880
providers it here and we are based out

00:01:42,030 --> 00:01:48,960
of Bellevue Washington and we have about

00:01:44,880 --> 00:01:52,439
73 million subscribers base in the last

00:01:48,960 --> 00:01:54,180
quarter reports as of and we operate

00:01:52,439 --> 00:02:00,600
under two flagship brands that is

00:01:54,180 --> 00:02:03,240
t-mobile and metro pcs so what is what

00:02:00,600 --> 00:02:05,659
is t-mobile doing t-mobile like you said

00:02:03,240 --> 00:02:07,920
uncarrier is redefining the way

00:02:05,659 --> 00:02:10,790
customers and businesses subscribe to

00:02:07,920 --> 00:02:13,340
the wireless services through this and

00:02:10,790 --> 00:02:15,170
how are we doing we have been

00:02:13,340 --> 00:02:17,390
finding the way carriers provide the

00:02:15,170 --> 00:02:21,500
wireless services and we have been doing

00:02:17,390 --> 00:02:24,010
so through our various uncarrier moves

00:02:21,500 --> 00:02:26,360
like our CEO

00:02:24,010 --> 00:02:28,370
famousy your Lodge on ledger culture

00:02:26,360 --> 00:02:32,810
this is the various and kiryat moves

00:02:28,370 --> 00:02:34,760
that we provide our also provide to the

00:02:32,810 --> 00:02:38,060
customers that either solve their pain

00:02:34,760 --> 00:02:41,180
points or give them the features that

00:02:38,060 --> 00:02:43,640
they really need so off of this Wireless

00:02:41,180 --> 00:02:45,709
uncarrier moves if you see one if you

00:02:43,640 --> 00:02:48,290
see I'll call out a few of them I think

00:02:45,709 --> 00:02:51,140
most of you would have used it is the

00:02:48,290 --> 00:02:54,530
wireless free wireless internet in

00:02:51,140 --> 00:02:56,299
Google in flight and also we have this

00:02:54,530 --> 00:03:00,410
carrier freedom where it is where we are

00:02:56,299 --> 00:03:02,450
defined as no contracts at all and from

00:03:00,410 --> 00:03:04,190
the most in recent one is the Netflix on

00:03:02,450 --> 00:03:07,400
us where you subscribe to a t-mobile

00:03:04,190 --> 00:03:08,299
plan you get a free Netflix so what does

00:03:07,400 --> 00:03:12,079
this mean to us

00:03:08,299 --> 00:03:14,120
as an IT industry right so yes we are

00:03:12,079 --> 00:03:15,610
been providing all this pain to solving

00:03:14,120 --> 00:03:19,489
all these pain points of the customer

00:03:15,610 --> 00:03:22,160
but what does this do to our IT systems

00:03:19,489 --> 00:03:25,069
that we are running behind the scenes it

00:03:22,160 --> 00:03:27,230
provides a lot of stress in on the

00:03:25,069 --> 00:03:30,620
systems that we have to meet or cater to

00:03:27,230 --> 00:03:33,950
to 7 meet the rise in the volumes and

00:03:30,620 --> 00:03:38,569
rise in the need for different API is

00:03:33,950 --> 00:03:42,829
and everything so for that what are we

00:03:38,569 --> 00:03:45,709
solving which we wanted to be more agile

00:03:42,829 --> 00:03:49,130
in nature for that matter so for example

00:03:45,709 --> 00:03:52,430
we need to get the code out of the front

00:03:49,130 --> 00:03:54,680
development into prod to get to one of

00:03:52,430 --> 00:03:56,569
those uncarrier moves in pretty fast

00:03:54,680 --> 00:03:59,090
like we used to do in traditionally in

00:03:56,569 --> 00:04:01,609
the ESB model we used to do in several

00:03:59,090 --> 00:04:04,130
months now we wanted to get it out in

00:04:01,609 --> 00:04:08,870
weeks and we also want an infrastructure

00:04:04,130 --> 00:04:13,720
to be more scalable and we also want the

00:04:08,870 --> 00:04:13,720
environment stability and configuration

00:04:14,770 --> 00:04:20,020
so how did we do it so to achieve all

00:04:17,920 --> 00:04:23,070
this or to solve this problems what did

00:04:20,020 --> 00:04:25,570
we do is that we establish core

00:04:23,070 --> 00:04:29,140
principle Urza for which we call it as

00:04:25,570 --> 00:04:32,200
digital pillars in our world like like

00:04:29,140 --> 00:04:34,300
in any company it's not just IT being

00:04:32,200 --> 00:04:36,730
the digital is more important it has to

00:04:34,300 --> 00:04:40,270
be all the way from digital marketing

00:04:36,730 --> 00:04:44,080
business and experience and also up to

00:04:40,270 --> 00:04:45,730
the operations so which these are the

00:04:44,080 --> 00:04:47,770
things that we refer to as pillars of

00:04:45,730 --> 00:04:52,120
our digital transformation that we

00:04:47,770 --> 00:04:53,950
embark the journey upon where digital

00:04:52,120 --> 00:04:56,140
marketing you mean the key you reach out

00:04:53,950 --> 00:04:59,680
to more customers using the more social

00:04:56,140 --> 00:05:01,510
media channels and business would refer

00:04:59,680 --> 00:05:03,490
to more products and services that are

00:05:01,510 --> 00:05:05,110
more catered towards the exact need of

00:05:03,490 --> 00:05:08,650
the customer rather than giving the bulk

00:05:05,110 --> 00:05:09,970
load of all the products and operational

00:05:08,650 --> 00:05:12,730
intelligence and digital service

00:05:09,970 --> 00:05:17,370
management is forefront of that to

00:05:12,730 --> 00:05:19,660
maintain the stability pain point so to

00:05:17,370 --> 00:05:21,310
aligning to the digital pillars we

00:05:19,660 --> 00:05:24,100
established a couple of design goals

00:05:21,310 --> 00:05:27,540
that we wanted to always meet when we

00:05:24,100 --> 00:05:31,480
are doing in this bill digital journey I

00:05:27,540 --> 00:05:34,090
like you can see like things social more

00:05:31,480 --> 00:05:36,910
analytical and cloud native and being

00:05:34,090 --> 00:05:38,790
experienced device api's meaning to say

00:05:36,910 --> 00:05:40,990
that always think from customer

00:05:38,790 --> 00:05:42,760
downwards not from the system that you

00:05:40,990 --> 00:05:46,990
can provide the business from and

00:05:42,760 --> 00:05:48,460
provide an API for and also bill la like

00:05:46,990 --> 00:05:52,540
going through all of their like built

00:05:48,460 --> 00:05:56,040
elastic environment where you can meet

00:05:52,540 --> 00:05:59,610
the needs of the customers as and then

00:05:56,040 --> 00:06:05,170
from the instructure perspective and

00:05:59,610 --> 00:06:07,690
always-on is more forefront of it just

00:06:05,170 --> 00:06:09,970
to give this is the more aha very high

00:06:07,690 --> 00:06:11,410
level in reference architecture that we

00:06:09,970 --> 00:06:13,240
have it's pretty much the cookiecutter

00:06:11,410 --> 00:06:15,670
architecture like any other thing just

00:06:13,240 --> 00:06:17,590
to show you what we have a different

00:06:15,670 --> 00:06:20,050
channels on the top and different

00:06:17,590 --> 00:06:21,449
billing systems and other bi and how

00:06:20,050 --> 00:06:23,360
many channels that at the bar

00:06:21,449 --> 00:06:27,870
and we have the selling and servicing

00:06:23,360 --> 00:06:30,509
channels and we have our existing and

00:06:27,870 --> 00:06:33,059
modified the typical container radiation

00:06:30,509 --> 00:06:35,939
running on pivotal Cloud Foundry which

00:06:33,059 --> 00:06:42,059
also adopts them develops our model of

00:06:35,939 --> 00:06:43,770
more CCD pipelines as well so what are

00:06:42,059 --> 00:06:46,979
the core capabilities that we had tried

00:06:43,770 --> 00:06:49,110
to achieve were modeled around being the

00:06:46,979 --> 00:06:51,449
capability and domain so like I said it

00:06:49,110 --> 00:06:54,539
should be always a top-down approach of

00:06:51,449 --> 00:06:56,310
the business services so think to the

00:06:54,539 --> 00:06:57,960
like what is the experience that you

00:06:56,310 --> 00:07:00,539
want to deliver to the channel or the

00:06:57,960 --> 00:07:02,099
customer and design your API around it

00:07:00,539 --> 00:07:05,400
which we refer to as experience driven

00:07:02,099 --> 00:07:08,699
API and it there should be more

00:07:05,400 --> 00:07:10,740
stateless and dynamic to be discovered

00:07:08,699 --> 00:07:12,539
to the API so that you don't people

00:07:10,740 --> 00:07:16,770
figure out the APS that exists out there

00:07:12,539 --> 00:07:22,439
on their own from the gateways and also

00:07:16,770 --> 00:07:25,800
the deployment process and catalog what

00:07:22,439 --> 00:07:29,129
is our end goal our end goal is to

00:07:25,800 --> 00:07:31,349
represent t-mobile as a service what

00:07:29,129 --> 00:07:33,240
does what the from the slide I can just

00:07:31,349 --> 00:07:35,610
take a moment to explain this like we

00:07:33,240 --> 00:07:37,439
want like at the core of the the core of

00:07:35,610 --> 00:07:40,459
t-mobile as a service we want to

00:07:37,439 --> 00:07:42,719
represent our core functionalities which

00:07:40,459 --> 00:07:44,310
different capabilities provided by the

00:07:42,719 --> 00:07:46,259
various systems like the customer

00:07:44,310 --> 00:07:49,770
management payment selling inventory and

00:07:46,259 --> 00:07:51,870
various billing systems and we want to

00:07:49,770 --> 00:07:54,060
do like I like I always said we want to

00:07:51,870 --> 00:07:56,639
do an experience driven api's what does

00:07:54,060 --> 00:07:58,620
it mean is that if a customer is trying

00:07:56,639 --> 00:08:00,870
to do a payment through a social Channel

00:07:58,620 --> 00:08:02,939
right through a Twitter handle he

00:08:00,870 --> 00:08:05,129
doesn't need to know all the billing

00:08:02,939 --> 00:08:07,499
history and everything that you have you

00:08:05,129 --> 00:08:08,999
rather give him an API that only

00:08:07,499 --> 00:08:11,029
delivers to that particular where he

00:08:08,999 --> 00:08:13,499
goes quickly and makes a payment

00:08:11,029 --> 00:08:15,870
likewise you have a customer who's

00:08:13,499 --> 00:08:18,270
trying to buy a purchase a particular

00:08:15,870 --> 00:08:20,669
plan or a phone on the on the smart

00:08:18,270 --> 00:08:22,439
phone that he has right so in

00:08:20,669 --> 00:08:26,009
traditional world if you try to provide

00:08:22,439 --> 00:08:28,259
a service or a API that provides that

00:08:26,009 --> 00:08:29,399
capability you would give him a detailed

00:08:28,259 --> 00:08:31,919
explanation of the features and

00:08:29,399 --> 00:08:34,000
everything and often the phone right but

00:08:31,919 --> 00:08:35,890
in this particular channel

00:08:34,000 --> 00:08:37,630
we don't have the time or real estate on

00:08:35,890 --> 00:08:38,500
the phone to browse through all the

00:08:37,630 --> 00:08:41,289
content of it

00:08:38,500 --> 00:08:43,030
so we rather who cater him in API that

00:08:41,289 --> 00:08:45,970
is more specific to the smartphone that

00:08:43,030 --> 00:08:47,500
he's viewing it on so that it is an

00:08:45,970 --> 00:08:51,250
experience or even for that particular

00:08:47,500 --> 00:08:53,770
device is using likewise on the website

00:08:51,250 --> 00:08:56,530
where people want to use and see and

00:08:53,770 --> 00:08:58,060
feel of everything that he has and

00:08:56,530 --> 00:09:01,060
everything so we have an experience

00:08:58,060 --> 00:09:03,310
driven API for the web content likewise

00:09:01,060 --> 00:09:05,560
what does it do right to derive all this

00:09:03,310 --> 00:09:08,170
experience API as if I push them down to

00:09:05,560 --> 00:09:10,840
the core systems like my billing systems

00:09:08,170 --> 00:09:13,420
or any other servicing systems that we

00:09:10,840 --> 00:09:16,060
have it puts a lot of burden on them to

00:09:13,420 --> 00:09:17,880
maintain all that right so like if the

00:09:16,060 --> 00:09:20,890
billing system has to maintain every

00:09:17,880 --> 00:09:22,510
channel specific API that the customer

00:09:20,890 --> 00:09:23,320
wants or the device and he has to keep

00:09:22,510 --> 00:09:26,740
track of it

00:09:23,320 --> 00:09:29,350
so for that matter what we said was okay

00:09:26,740 --> 00:09:31,030
we will do a core API layer which will

00:09:29,350 --> 00:09:34,180
encompass or abstract the billing

00:09:31,030 --> 00:09:36,550
systems from all these experiences keep

00:09:34,180 --> 00:09:38,620
them more specific to what they really

00:09:36,550 --> 00:09:40,089
provide like for the billing system it

00:09:38,620 --> 00:09:42,130
will always provide you me the billing

00:09:40,089 --> 00:09:44,140
history payments or anything for that

00:09:42,130 --> 00:09:47,620
kind particular capability I'm driving

00:09:44,140 --> 00:09:50,290
upon and it's the experience API layer

00:09:47,620 --> 00:09:52,420
that derives the particular content to

00:09:50,290 --> 00:09:54,400
that particular channel that the

00:09:52,420 --> 00:09:56,920
customer is subscribing upon this is how

00:09:54,400 --> 00:09:59,890
we abstract out this thing and it will

00:09:56,920 --> 00:10:01,630
allow us to provide our core systems as

00:09:59,890 --> 00:10:03,700
a service for all the channels that we

00:10:01,630 --> 00:10:06,490
have and which is or envision of god of

00:10:03,700 --> 00:10:10,240
t-mobile as a service now what does this

00:10:06,490 --> 00:10:12,580
mean right this means that I need API

00:10:10,240 --> 00:10:15,370
driven architecture or for them for my

00:10:12,580 --> 00:10:17,589
entire integration app integration layer

00:10:15,370 --> 00:10:19,990
so that's where our partnership with

00:10:17,589 --> 00:10:23,140
TIBCO has helped us along we have been

00:10:19,990 --> 00:10:24,160
on TIBCO for a while and we have been

00:10:23,140 --> 00:10:27,100
running on the traditional

00:10:24,160 --> 00:10:29,500
infrastructures on the on the physical

00:10:27,100 --> 00:10:31,660
hardware and infrastructure so that's

00:10:29,500 --> 00:10:35,890
where we catered on we started on this

00:10:31,660 --> 00:10:37,870
journey of container relations of API on

00:10:35,890 --> 00:10:40,150
this containerization journey we

00:10:37,870 --> 00:10:42,130
embarked upon we chose pivotal Cloud

00:10:40,150 --> 00:10:42,850
Foundry or as our infrastructure

00:10:42,130 --> 00:10:45,550
provider

00:10:42,850 --> 00:10:49,120
lasting runtime pass that is in-house

00:10:45,550 --> 00:10:50,800
and we wanted a we we partnered with hip

00:10:49,120 --> 00:10:54,220
were to come up with a typical container

00:10:50,800 --> 00:10:56,589
I his software which can be deployed and

00:10:54,220 --> 00:10:59,709
scaled and driven to that particular

00:10:56,589 --> 00:11:01,149
demand or needs that's where our journey

00:10:59,709 --> 00:11:03,220
with hip Co business works container

00:11:01,149 --> 00:11:05,829
addition it started upon and we have

00:11:03,220 --> 00:11:10,360
been running successfully so far we are

00:11:05,829 --> 00:11:16,449
out we are about 150 or apps which is

00:11:10,360 --> 00:11:19,480
like not roughly about 500 containers

00:11:16,449 --> 00:11:22,120
that we are running upon and which which

00:11:19,480 --> 00:11:24,670
service up to we are we are doing a

00:11:22,120 --> 00:11:27,519
volume scales up to almost up to 125

00:11:24,670 --> 00:11:29,139
million calls per day and this is all

00:11:27,519 --> 00:11:32,199
running on pure water cloud for Andre's

00:11:29,139 --> 00:11:34,089
and everything so I will having said

00:11:32,199 --> 00:11:35,800
that I would like to bring so all this

00:11:34,089 --> 00:11:37,630
is from the development perspective how

00:11:35,800 --> 00:11:39,639
we have done it and how we have scaled

00:11:37,630 --> 00:11:41,560
upon on the pivotal Cloud Foundry and

00:11:39,639 --> 00:11:44,350
using the typical business container

00:11:41,560 --> 00:11:46,920
addition I also would like to invite my

00:11:44,350 --> 00:11:50,589
colleague who is from the US perspective

00:11:46,920 --> 00:11:52,480
what does he see what did he see what we

00:11:50,589 --> 00:11:54,689
have delivered to the operational

00:11:52,480 --> 00:11:57,100
standpoint because this like I said

00:11:54,689 --> 00:12:00,040
system stability and configuration is

00:11:57,100 --> 00:12:05,500
forefront of all of this to the achieve

00:12:00,040 --> 00:12:09,939
or end goal as well so Chandra thank you

00:12:05,500 --> 00:12:12,850
Rakesh so I'm from I'm Chandra

00:12:09,939 --> 00:12:14,800
I'm from operational team so I don't

00:12:12,850 --> 00:12:17,110
know how many people are from operation

00:12:14,800 --> 00:12:21,639
wall here anybody does productions about

00:12:17,110 --> 00:12:23,709
here okay awesome okay

00:12:21,639 --> 00:12:26,050
I mean my goal I mean I know you you

00:12:23,709 --> 00:12:28,240
guys have blockage as a developer his

00:12:26,050 --> 00:12:30,579
goals I mean he wants to solve customer

00:12:28,240 --> 00:12:32,380
pain points he wants to do micro

00:12:30,579 --> 00:12:34,810
services but as an operator I have

00:12:32,380 --> 00:12:37,930
different goals my simple goal is I need

00:12:34,810 --> 00:12:39,610
to sleep when everybody I mean normal

00:12:37,930 --> 00:12:43,180
people sleeping time I want to sleep

00:12:39,610 --> 00:12:45,100
right that is my primary goal what what

00:12:43,180 --> 00:12:47,170
does that tells you I mean if you see if

00:12:45,100 --> 00:12:49,810
you are operating sleeping during his

00:12:47,170 --> 00:12:51,850
normal night times that means your

00:12:49,810 --> 00:12:53,910
systems are available right I mean is a

00:12:51,850 --> 00:12:56,470
primary goal is your systems are highly

00:12:53,910 --> 00:13:00,100
available 24 by 7

00:12:56,470 --> 00:13:01,240
you have all the data right 24 by 7 and

00:13:00,100 --> 00:13:03,640
you have all the telemetric data

00:13:01,240 --> 00:13:06,880
available so that's why that person is

00:13:03,640 --> 00:13:10,240
able to sleep but I mean six to eight

00:13:06,880 --> 00:13:11,890
months ago that was not my life I mean I

00:13:10,240 --> 00:13:14,170
used to work for him our maintenance

00:13:11,890 --> 00:13:16,990
window is from 10:00 p.m. till 2:00 a.m.

00:13:14,170 --> 00:13:19,300
in the morning so I'm always happen

00:13:16,990 --> 00:13:20,800
running always being deployments during

00:13:19,300 --> 00:13:23,800
night time why do I need to do

00:13:20,800 --> 00:13:28,510
deployments when everybody is sleeping

00:13:23,800 --> 00:13:31,420
right so this is a kind of problem we

00:13:28,510 --> 00:13:33,430
want to solve as an operator right that

00:13:31,420 --> 00:13:36,940
is one primary goal and the secondary

00:13:33,430 --> 00:13:40,030
I mean secondary issue is like I had

00:13:36,940 --> 00:13:42,460
like almost like 2,000 physical servers

00:13:40,030 --> 00:13:45,070
I had right and I have configuration

00:13:42,460 --> 00:13:48,760
files everywhere right and I might have

00:13:45,070 --> 00:13:51,370
had a proper configuration file on let's

00:13:48,760 --> 00:13:53,740
say 1999 servers but I imaged on one

00:13:51,370 --> 00:13:56,050
servers that used to call caused lot of

00:13:53,740 --> 00:13:59,650
production issues right so we never had

00:13:56,050 --> 00:14:02,980
this configuration as code we never had

00:13:59,650 --> 00:14:06,190
that philosophy in t-mobile before like

00:14:02,980 --> 00:14:08,470
six to eight months ago right and the

00:14:06,190 --> 00:14:11,320
other problem we used to have is like

00:14:08,470 --> 00:14:12,730
logging right I mean it's it's on your

00:14:11,320 --> 00:14:15,160
developer Mel C if he is writing

00:14:12,730 --> 00:14:17,950
Logging's you have the television

00:14:15,160 --> 00:14:20,200
otherwise God knows what's happening in

00:14:17,950 --> 00:14:21,760
the production right so all these guys

00:14:20,200 --> 00:14:23,950
have been these are the different

00:14:21,760 --> 00:14:25,810
problems we have and you know what

00:14:23,950 --> 00:14:28,090
happens in we are in telecom world and

00:14:25,810 --> 00:14:29,920
there is a big events happen every year

00:14:28,090 --> 00:14:32,950
September I don't know why people go

00:14:29,920 --> 00:14:35,380
crazy but the Apple promo is a nightmare

00:14:32,950 --> 00:14:38,530
for us I mean you don't believe I got a

00:14:35,380 --> 00:14:40,150
call just like 20 minutes ago from a

00:14:38,530 --> 00:14:42,640
network engineer saying that hey we need

00:14:40,150 --> 00:14:44,830
to get ready for Apple promo for this

00:14:42,640 --> 00:14:47,080
year I was like what the heck we are we

00:14:44,830 --> 00:14:49,920
are I don't know what so we have we are

00:14:47,080 --> 00:14:53,170
like 6 months away from that even but

00:14:49,920 --> 00:14:55,780
during every iPhone promo we should

00:14:53,170 --> 00:14:58,320
worry about the capacity right we used

00:14:55,780 --> 00:15:01,750
too hard we used to order this hardware

00:14:58,320 --> 00:15:04,300
we used to rack it up stack it up right

00:15:01,750 --> 00:15:07,150
deploy a code performance testing and

00:15:04,300 --> 00:15:09,910
still my boss who is here he he never

00:15:07,150 --> 00:15:10,279
had the confidence like dude he's a good

00:15:09,910 --> 00:15:13,249
work

00:15:10,279 --> 00:15:15,290
I don't know right we prepared for 3x

00:15:13,249 --> 00:15:17,180
load but what if you 5 X load comes

00:15:15,290 --> 00:15:18,980
right all these are the different

00:15:17,180 --> 00:15:20,959
problems we had I mean six to eight well

00:15:18,980 --> 00:15:23,449
this is the real story guys and I'm not

00:15:20,959 --> 00:15:25,699
I'm not making up I mean as an operator

00:15:23,449 --> 00:15:28,550
I lost the sleep right we are always

00:15:25,699 --> 00:15:31,990
constantly worried we have no we have

00:15:28,550 --> 00:15:34,370
zero confidence in our systems but

00:15:31,990 --> 00:15:38,240
beautiful things happen right I mean

00:15:34,370 --> 00:15:39,920
things change so that's that's when PCF

00:15:38,240 --> 00:15:41,689
came and along the way I mean we

00:15:39,920 --> 00:15:44,449
invested in typica from last ten years

00:15:41,689 --> 00:15:47,569
right we had a lot of people I mean

00:15:44,449 --> 00:15:50,649
developers operators or operations team

00:15:47,569 --> 00:15:52,939
right they were all over the place and

00:15:50,649 --> 00:15:55,129
luckily TIBCO came of it - because he

00:15:52,939 --> 00:15:57,139
right if not it would have been a big

00:15:55,129 --> 00:15:59,149
learning curve for everyone right I mean

00:15:57,139 --> 00:16:01,970
we would have need to train these people

00:15:59,149 --> 00:16:04,819
on different technologies but luckily

00:16:01,970 --> 00:16:06,620
tip ok me too cozy and PCF is there I

00:16:04,819 --> 00:16:09,139
mean Robby used to ask me who Rob is who

00:16:06,620 --> 00:16:12,199
is my boss he's to ask me Chandler I

00:16:09,139 --> 00:16:14,029
want to have a single click button where

00:16:12,199 --> 00:16:16,790
I can where I can increase the capacity

00:16:14,029 --> 00:16:21,290
now Rob your dream is fulfilled now

00:16:16,790 --> 00:16:25,009
right so that's where our journey

00:16:21,290 --> 00:16:29,540
started I mean PCF solved our problems

00:16:25,009 --> 00:16:34,399
in the capacity wise and also it brought

00:16:29,540 --> 00:16:37,550
immense change in our mind shift happen

00:16:34,399 --> 00:16:39,319
is a t-mobile right previously I don't

00:16:37,550 --> 00:16:42,319
know I don't know Jenkins before I don't

00:16:39,319 --> 00:16:44,120
know what is CIC D right what are all

00:16:42,319 --> 00:16:48,350
those things I mean because these

00:16:44,120 --> 00:16:50,269
products are so I mean the the

00:16:48,350 --> 00:16:50,930
principles of these products are like CI

00:16:50,269 --> 00:16:53,959
CDE

00:16:50,930 --> 00:16:56,029
like telemetry like circle breakers

00:16:53,959 --> 00:16:58,100
right I mean circle breakers and that's

00:16:56,029 --> 00:17:00,319
that's a big deal right I mean the

00:16:58,100 --> 00:17:02,120
backend system slows down I got a call

00:17:00,319 --> 00:17:03,769
two o'clock in the morning I was like

00:17:02,120 --> 00:17:06,049
dude what can I do back in system is

00:17:03,769 --> 00:17:08,299
slow right but still the front end guy

00:17:06,049 --> 00:17:10,189
says dude I don't care back in system

00:17:08,299 --> 00:17:12,470
fails or not I want a proper response

00:17:10,189 --> 00:17:14,449
right if I had circuit breakers I

00:17:12,470 --> 00:17:16,240
wouldn't have got the call at 2 o clock

00:17:14,449 --> 00:17:19,220
I would have been sleeping still right

00:17:16,240 --> 00:17:21,169
but these are some problems right so to

00:17:19,220 --> 00:17:23,030
solve all these problems I mean TIBCO

00:17:21,169 --> 00:17:23,839
and PCF right they came up with this

00:17:23,030 --> 00:17:26,899
Belson with

00:17:23,839 --> 00:17:28,970
and that's when we started embracing

00:17:26,899 --> 00:17:31,549
pieces so if you if you have any of

00:17:28,970 --> 00:17:34,580
these problems in your company go for it

00:17:31,549 --> 00:17:35,929
go embrace PCF they solve all these

00:17:34,580 --> 00:17:38,450
problems of course you need to have a

00:17:35,929 --> 00:17:40,700
strong infrastructure team like we have

00:17:38,450 --> 00:17:41,870
right who made everything possible I

00:17:40,700 --> 00:17:45,230
mean everything is self-service

00:17:41,870 --> 00:17:47,450
self-serve all right so so if you have

00:17:45,230 --> 00:17:50,360
any of the problems I mentioned go for

00:17:47,450 --> 00:17:53,210
PCF and if you invested in tip go go

00:17:50,360 --> 00:17:55,490
embrace the technology too so that

00:17:53,210 --> 00:17:57,799
that's how that's that's that's the

00:17:55,490 --> 00:18:00,649
benefit as an operator right so now I'm

00:17:57,799 --> 00:18:01,399
able to sleep right now I'm pressing the

00:18:00,649 --> 00:18:04,279
single button

00:18:01,399 --> 00:18:08,149
I mean expanding the containers without

00:18:04,279 --> 00:18:12,889
worrying about the capacity so as an

00:18:08,149 --> 00:18:15,769
example right so this is this this is

00:18:12,889 --> 00:18:20,990
how our TIBCO ze+

00:18:15,769 --> 00:18:23,059
PCF look like when we did iPhone 8 so I

00:18:20,990 --> 00:18:26,539
am with t-mobile from last 10 years we

00:18:23,059 --> 00:18:28,999
did I I did bunch of iPhone launches so

00:18:26,539 --> 00:18:31,999
far and this is the first iPhone launch

00:18:28,999 --> 00:18:34,429
I was not before I was not in the office

00:18:31,999 --> 00:18:38,600
I was not before my boss I was attending

00:18:34,429 --> 00:18:40,369
another conference and still we were

00:18:38,600 --> 00:18:45,169
able to successfully launch this product

00:18:40,369 --> 00:18:47,389
using PCF how did we do so I think we

00:18:45,169 --> 00:18:50,210
are conference were still 5:30 p.m.

00:18:47,389 --> 00:18:53,179
right we came to hotel we put bunch of

00:18:50,210 --> 00:18:55,039
auto scaling rules I think we had a

00:18:53,179 --> 00:18:58,850
couple of drinks Rob I don't want to say

00:18:55,039 --> 00:19:00,980
that but see we had a couple of drinks

00:18:58,850 --> 00:19:05,840
but still the traffic was you see the

00:19:00,980 --> 00:19:07,490
traffic ramped up I see the right and we

00:19:05,840 --> 00:19:10,369
were successfully able to launch the

00:19:07,490 --> 00:19:12,580
product so that's the beauty I mean we

00:19:10,369 --> 00:19:16,039
we were always used to worry about the

00:19:12,580 --> 00:19:18,649
capacity but we no longer worry about

00:19:16,039 --> 00:19:20,539
those capacity right now man as Rakesh

00:19:18,649 --> 00:19:26,259
was mentioning this is the old picture

00:19:20,539 --> 00:19:28,690
but right now we are doing around 225

00:19:26,259 --> 00:19:31,129
120 million I mean 120 million

00:19:28,690 --> 00:19:33,559
transactions within the typical platform

00:19:31,129 --> 00:19:35,419
but we have other medieval middle-earth

00:19:33,559 --> 00:19:36,570
platforms where I mean combinely we are

00:19:35,419 --> 00:19:40,700
doing around

00:19:36,570 --> 00:19:44,370
220 million transactions and 150

00:19:40,700 --> 00:19:48,710
applications around 7 700 to 800

00:19:44,370 --> 00:19:52,049
containers are there it's a great story

00:19:48,710 --> 00:19:53,640
the other thing again again this is the

00:19:52,049 --> 00:19:55,830
next one

00:19:53,640 --> 00:19:59,730
iPhone X launched again the same story

00:19:55,830 --> 00:20:01,500
we never worried about capacity any

00:19:59,730 --> 00:20:03,860
longer I mean even the the network

00:20:01,500 --> 00:20:08,130
engineer who called me earlier I said

00:20:03,860 --> 00:20:09,960
don't worry we are on PC f so I don't

00:20:08,130 --> 00:20:13,080
need to add any new hardware I don't

00:20:09,960 --> 00:20:13,889
need to worry about anything right but

00:20:13,080 --> 00:20:20,809
that's awesome

00:20:13,889 --> 00:20:25,500
that's that's that's the story so

00:20:20,809 --> 00:20:25,860
there's one more sorry oh okay this is

00:20:25,500 --> 00:20:29,220
awesome

00:20:25,860 --> 00:20:33,149
so so with by adapting to PCF right I

00:20:29,220 --> 00:20:35,970
mean we were we are able to now gather

00:20:33,149 --> 00:20:37,440
more telemetric data so with the the

00:20:35,970 --> 00:20:39,990
Splunk integration native Splunk

00:20:37,440 --> 00:20:42,750
integration within the PCF and DiBiase

00:20:39,990 --> 00:20:45,659
right now we are able to we are able to

00:20:42,750 --> 00:20:48,840
get more data out of systems and we are

00:20:45,659 --> 00:20:51,210
we are we are catching those issues much

00:20:48,840 --> 00:20:54,120
earlier before they become high critical

00:20:51,210 --> 00:20:57,750
issue sana our environment right and as

00:20:54,120 --> 00:21:00,360
I said before right we we now we have a

00:20:57,750 --> 00:21:03,090
configures code right so now we no

00:21:00,360 --> 00:21:05,639
longer keep property files on UNIX boxes

00:21:03,090 --> 00:21:08,250
any longer you don't you don't I mean I

00:21:05,639 --> 00:21:10,500
mean couple of years ago you are hearing

00:21:08,250 --> 00:21:12,809
the conflict config drift we don't talk

00:21:10,500 --> 00:21:15,179
about conflict anymore right so because

00:21:12,809 --> 00:21:18,149
you have all these property files in a

00:21:15,179 --> 00:21:20,669
config server now now the property files

00:21:18,149 --> 00:21:23,299
are same everywhere that is the one

00:21:20,669 --> 00:21:26,250
problem is all second problem we saw the

00:21:23,299 --> 00:21:28,740
capacity issues we solve we solve the

00:21:26,250 --> 00:21:31,440
telemetry issues right and I don't need

00:21:28,740 --> 00:21:33,360
to I mean we we did the PC I mean the

00:21:31,440 --> 00:21:37,740
only learning curve is we had to learn a

00:21:33,360 --> 00:21:39,240
couple of PCF commands right CF push few

00:21:37,740 --> 00:21:41,070
commands and we are not able we are now

00:21:39,240 --> 00:21:43,950
able to support I mean even my offshore

00:21:41,070 --> 00:21:46,200
team right we don't have to train them

00:21:43,950 --> 00:21:49,409
even though I had we moved from a

00:21:46,200 --> 00:21:49,840
archaic legacy 10 years whole system to

00:21:49,409 --> 00:21:51,850
this

00:21:49,840 --> 00:21:53,440
wonderful system but we are still

00:21:51,850 --> 00:21:57,490
running with the same same people same

00:21:53,440 --> 00:21:59,380
skills that's that that that's the

00:21:57,490 --> 00:22:01,929
learning curve right only the PC if it

00:21:59,380 --> 00:22:06,909
was the learning curve for us so that's

00:22:01,929 --> 00:22:08,620
how something he takes that's pretty

00:22:06,909 --> 00:22:13,179
interesting inside stand around raucous

00:22:08,620 --> 00:22:14,710
thanks guys click we really happy we had

00:22:13,179 --> 00:22:16,419
to go really happy and proud to be a

00:22:14,710 --> 00:22:18,970
part of this journey with you guys I

00:22:16,419 --> 00:22:20,440
mean we keep talking about this story we

00:22:18,970 --> 00:22:22,360
hear about it many times and every time

00:22:20,440 --> 00:22:26,590
we feel that's like really thrills us

00:22:22,360 --> 00:22:28,659
thanks again for all this so we've heard

00:22:26,590 --> 00:22:30,190
both Rakesh and Chandra say the

00:22:28,659 --> 00:22:32,190
integration needs are evolving right

00:22:30,190 --> 00:22:34,419
right from the building enterprise

00:22:32,190 --> 00:22:35,740
applications the monolith applications

00:22:34,419 --> 00:22:38,529
to moving through a micro services

00:22:35,740 --> 00:22:40,419
driven architectures to API driven micro

00:22:38,529 --> 00:22:43,120
services all in all to you know

00:22:40,419 --> 00:22:45,760
adopt the digital transformation now

00:22:43,120 --> 00:22:48,159
what we've seen or observed is pervasive

00:22:45,760 --> 00:22:50,649
integration is driven by different sorts

00:22:48,159 --> 00:22:52,840
of audience the business users actually

00:22:50,649 --> 00:22:54,549
need business apps to digitize the

00:22:52,840 --> 00:22:57,039
processes and improve the work stream

00:22:54,549 --> 00:22:58,690
efficiencies the enterprise IT users

00:22:57,039 --> 00:23:00,970
need to provide access to data and

00:22:58,690 --> 00:23:04,659
systems across various channels beat on

00:23:00,970 --> 00:23:06,820
cloud on-premise devices - and as a

00:23:04,659 --> 00:23:08,980
developer I would want to be focused on

00:23:06,820 --> 00:23:11,110
building my application components in a

00:23:08,980 --> 00:23:13,240
faster and efficient way with more

00:23:11,110 --> 00:23:16,529
openness connectivity and adaptability

00:23:13,240 --> 00:23:19,240
as well right now the good news is

00:23:16,529 --> 00:23:21,760
typical cloud integration supports all

00:23:19,240 --> 00:23:24,970
of these personas use cases different in

00:23:21,760 --> 00:23:28,870
a different way now what we've also seen

00:23:24,970 --> 00:23:31,200
is three main focus areas is for driving

00:23:28,870 --> 00:23:34,179
a digital transformation we need api's

00:23:31,200 --> 00:23:36,309
providing an API is a key enabler for it

00:23:34,179 --> 00:23:37,480
so with API modular capability of

00:23:36,309 --> 00:23:40,029
typical cloud integration which I'll

00:23:37,480 --> 00:23:42,279
probably talking in a few minutes we let

00:23:40,029 --> 00:23:44,080
you follow an API first approach to

00:23:42,279 --> 00:23:46,450
define your API flows for easier

00:23:44,080 --> 00:23:48,549
maintenance the second main focus is to

00:23:46,450 --> 00:23:50,830
embrace modern application development

00:23:48,549 --> 00:23:52,570
and integration techniques which is why

00:23:50,830 --> 00:23:54,760
as a developers again we want to build

00:23:52,570 --> 00:23:57,159
services faster we want to lower the

00:23:54,760 --> 00:23:58,899
operation cost by even being able to

00:23:57,159 --> 00:24:01,179
deploy it on server lists or fast

00:23:58,899 --> 00:24:02,950
architectures I also want the

00:24:01,179 --> 00:24:05,560
flexibility to be able to deploy

00:24:02,950 --> 00:24:08,440
anyway right from on-prem two-hybrid to

00:24:05,560 --> 00:24:10,690
even on edge devices the last point is

00:24:08,440 --> 00:24:13,300
to simplify integration and connectivity

00:24:10,690 --> 00:24:15,820
this is where we you can leverage the

00:24:13,300 --> 00:24:18,220
pre-built connectors not just for any

00:24:15,820 --> 00:24:20,770
application data but also for network

00:24:18,220 --> 00:24:22,390
technologies so connecting to all these

00:24:20,770 --> 00:24:24,280
different endpoints using our

00:24:22,390 --> 00:24:25,930
applications within your enterprise and

00:24:24,280 --> 00:24:27,580
beyond your enterprise has become much

00:24:25,930 --> 00:24:32,590
more easier and faster now with the

00:24:27,580 --> 00:24:34,270
cloud integration so typical cloud

00:24:32,590 --> 00:24:36,490
integration also provides you a future

00:24:34,270 --> 00:24:38,470
ready foundation when we say future

00:24:36,490 --> 00:24:41,560
ready foundation that is also powered by

00:24:38,470 --> 00:24:43,900
open source flow go at its core which

00:24:41,560 --> 00:24:45,490
not only ensures you have a zero lock-in

00:24:43,900 --> 00:24:47,650
with any cloud but also gives you an

00:24:45,490 --> 00:24:48,430
ability to leverage the open community

00:24:47,650 --> 00:24:50,920
for innovation

00:24:48,430 --> 00:24:53,020
it also has native support to be

00:24:50,920 --> 00:24:56,800
deployed on server oilless platforms

00:24:53,020 --> 00:24:58,630
like AWS lambda so and also you can

00:24:56,800 --> 00:25:00,460
directly deposit deploy on every edge

00:24:58,630 --> 00:25:02,920
devices so you are ready for all the iot

00:25:00,460 --> 00:25:05,140
transformations coming up and lastly it

00:25:02,920 --> 00:25:08,230
also has the capability and the tooling

00:25:05,140 --> 00:25:09,640
support for integrating with flows like

00:25:08,230 --> 00:25:13,330
you know google tensorflow

00:25:09,640 --> 00:25:15,370
so in the interest of time i will

00:25:13,330 --> 00:25:17,440
actually skip to a demo flow which we

00:25:15,370 --> 00:25:19,090
have so what we're doing is we have a

00:25:17,440 --> 00:25:22,210
typical cloud integration where we are

00:25:19,090 --> 00:25:24,910
defining the API contract using the API

00:25:22,210 --> 00:25:27,400
modular I'm implementing the API using

00:25:24,910 --> 00:25:30,010
business studio now once my api's are

00:25:27,400 --> 00:25:31,960
implemented we actually publish or push

00:25:30,010 --> 00:25:34,210
these services both on pivotal Cloud

00:25:31,960 --> 00:25:36,280
Foundry and the kubernetes which is

00:25:34,210 --> 00:25:39,760
managed by the pivotal container service

00:25:36,280 --> 00:25:41,920
and all of this is done through the open

00:25:39,760 --> 00:25:43,780
source maven plugin again this is where

00:25:41,920 --> 00:25:45,370
life for Chandra has become easier with

00:25:43,780 --> 00:25:48,820
the CI CD operations we've talked about

00:25:45,370 --> 00:25:50,380
right so and all of these or my API is

00:25:48,820 --> 00:25:52,090
have been published to a product called

00:25:50,380 --> 00:25:54,910
tip capacity which lets you do all the

00:25:52,090 --> 00:25:56,350
API management things like enforcing any

00:25:54,910 --> 00:25:59,050
policies throught links and all that

00:25:56,350 --> 00:26:00,910
stuff now that's on the service side and

00:25:59,050 --> 00:26:03,340
all as a client what we are doing is we

00:26:00,910 --> 00:26:05,440
are invoking flow flow as a function and

00:26:03,340 --> 00:26:07,420
project RIF so we'll be showing more

00:26:05,440 --> 00:26:09,370
about that depending upon where the

00:26:07,420 --> 00:26:11,680
request comes in if the request is

00:26:09,370 --> 00:26:15,220
coming in Florida from a US region the

00:26:11,680 --> 00:26:15,940
request is routed to pivotal Cloud

00:26:15,220 --> 00:26:17,559
Foundry

00:26:15,940 --> 00:26:20,499
and if it is coming from a UK region it

00:26:17,559 --> 00:26:24,749
just routed to my kubernetes service so

00:26:20,499 --> 00:26:24,749
I sue this some of it in action now

00:26:40,890 --> 00:26:47,000
so cloud.com this is our typical cloud

00:26:44,100 --> 00:26:47,000
integration website

00:26:55,040 --> 00:26:59,870
so already define my API spec here for a

00:26:58,340 --> 00:27:01,730
service where we are able to want to

00:26:59,870 --> 00:27:03,710
fetch the account details depending upon

00:27:01,730 --> 00:27:06,560
the customer details and the regions we

00:27:03,710 --> 00:27:09,890
are in so if you look at the CF summit

00:27:06,560 --> 00:27:12,050
up here that's my API spec we have a

00:27:09,890 --> 00:27:15,710
path parameter for customer ID and a

00:27:12,050 --> 00:27:18,140
query parameter for a region and so you

00:27:15,710 --> 00:27:19,850
can export this simply in two different

00:27:18,140 --> 00:27:22,100
formats and actually use them to

00:27:19,850 --> 00:27:25,430
implement your API so you can preview

00:27:22,100 --> 00:27:26,810
this to look like how it looks you could

00:27:25,430 --> 00:27:28,910
go back create actually mock

00:27:26,810 --> 00:27:30,500
applications that's what makes this even

00:27:28,910 --> 00:27:32,420
more powerful so you can make create

00:27:30,500 --> 00:27:34,910
mock applications create a flow go app

00:27:32,420 --> 00:27:37,300
for this demo specific purpose I'm using

00:27:34,910 --> 00:27:39,740
the typical business studio which is

00:27:37,300 --> 00:27:41,150
from business works container Edition

00:27:39,740 --> 00:27:42,170
and that's the component which there are

00:27:41,150 --> 00:27:44,060
friends from team of I'll have been

00:27:42,170 --> 00:27:46,940
talking about so once I connect to my

00:27:44,060 --> 00:27:48,980
once I build my API I connected to the

00:27:46,940 --> 00:27:52,490
API Explorer view in my business studio

00:27:48,980 --> 00:27:54,650
and actually use all these drag drop

00:27:52,490 --> 00:27:56,330
capabilities gestures if you see here I

00:27:54,650 --> 00:27:59,440
can do this and I can create a service

00:27:56,330 --> 00:28:02,300
out of it so once you create a service

00:27:59,440 --> 00:28:04,610
this was the actual service which it was

00:28:02,300 --> 00:28:06,920
created that the stub is created and

00:28:04,610 --> 00:28:08,450
then I filled in up this if you look at

00:28:06,920 --> 00:28:10,370
this customer details it's actually

00:28:08,450 --> 00:28:13,250
connecting to a back-end database system

00:28:10,370 --> 00:28:15,320
which is on the cloud so we are creating

00:28:13,250 --> 00:28:16,760
a bunch of services tying them all

00:28:15,320 --> 00:28:18,980
together we're doing all these API

00:28:16,760 --> 00:28:20,900
choreography using business studio now

00:28:18,980 --> 00:28:24,260
once my services is created we've

00:28:20,900 --> 00:28:27,680
deployed them to PCF and kubernetes

00:28:24,260 --> 00:28:31,520
cluster going back to this so this is

00:28:27,680 --> 00:28:34,070
what I have deployed and my API is also

00:28:31,520 --> 00:28:35,120
now published to the capacity this is

00:28:34,070 --> 00:28:39,230
where we are doing all the management

00:28:35,120 --> 00:28:42,050
API management part over here now on the

00:28:39,230 --> 00:28:46,220
client side we have a project flow go

00:28:42,050 --> 00:28:48,620
slow so this is the request which we are

00:28:46,220 --> 00:28:50,780
talking about is invoking or the PCF

00:28:48,620 --> 00:28:52,760
service depending if the condition is

00:28:50,780 --> 00:28:56,050
saying that the requests are coming in

00:28:52,760 --> 00:28:58,760
from the US region if the condition is

00:28:56,050 --> 00:29:04,850
says it's from the UK region that it is

00:28:58,760 --> 00:29:06,890
routed to the paquius side of it so

00:29:04,850 --> 00:29:08,060
that's pretty much on the flow here it's

00:29:06,890 --> 00:29:09,500
a simple logics and

00:29:08,060 --> 00:29:11,510
branching based on where the request is

00:29:09,500 --> 00:29:14,720
coming it outs the request now to do

00:29:11,510 --> 00:29:16,880
this to trigger this flow right we've

00:29:14,720 --> 00:29:20,360
created a trigger for project with now

00:29:16,880 --> 00:29:23,030
this can be any AWS lambda function or

00:29:20,360 --> 00:29:25,100
any any fast service here to trigger

00:29:23,030 --> 00:29:26,600
this but for this demo we have used the

00:29:25,100 --> 00:29:31,550
RIF trigger because that's been recently

00:29:26,600 --> 00:29:35,420
announced now I've created the functions

00:29:31,550 --> 00:29:37,810
I have actually deployed everything I'll

00:29:35,420 --> 00:29:48,020
have a setup here we'll just do a quick

00:29:37,810 --> 00:29:49,820
brief list to see the commands so you've

00:29:48,020 --> 00:29:53,870
already created a function called CF

00:29:49,820 --> 00:29:58,210
summit 2018 that this is the one now we

00:29:53,870 --> 00:29:58,210
are publishing the request

00:30:27,160 --> 00:30:34,620
I'm doing it tell me sorry

00:30:47,890 --> 00:30:51,640
it's actually with fluid start

00:30:49,650 --> 00:30:54,400
responding to the command press command

00:30:51,640 --> 00:30:56,950
so I'll actually show you the demo ifs

00:30:54,400 --> 00:30:58,360
at the boot part as well so so what

00:30:56,950 --> 00:30:59,680
you're doing now is we're publishing a

00:30:58,360 --> 00:31:01,540
request to the rave function so I want

00:30:59,680 --> 00:31:03,520
to invoke the flow go flow as a function

00:31:01,540 --> 00:31:11,320
on project riff so we are triggering

00:31:03,520 --> 00:31:14,350
this request with the region UK like you

00:31:11,320 --> 00:31:16,690
see we've had a response back here now

00:31:14,350 --> 00:31:20,530
similarly what we are also doing is we

00:31:16,690 --> 00:31:23,080
are invoking a same flow with the region

00:31:20,530 --> 00:31:26,370
us now and this invokes my service which

00:31:23,080 --> 00:31:26,370
is on PCF here

00:31:34,860 --> 00:31:39,120
that's one so pretty much all these

00:31:37,890 --> 00:31:42,720
capabilities like we talked about

00:31:39,120 --> 00:31:44,970
project flow go purely open source maven

00:31:42,720 --> 00:31:47,309
plug-in open source here again we have

00:31:44,970 --> 00:31:49,440
the capabilities of monitoring your

00:31:47,309 --> 00:31:51,390
applications at the application level

00:31:49,440 --> 00:31:53,909
bunch of things you can look at the

00:31:51,390 --> 00:31:57,769
process instances active instances the

00:31:53,909 --> 00:31:57,769
jobs created on all that day time to it

00:32:11,610 --> 00:32:17,940
so to sum it up the key takeaways right

00:32:14,789 --> 00:32:20,820
we've heard and see in typical helping

00:32:17,940 --> 00:32:23,639
t-mobile leverage all the applauds time

00:32:20,820 --> 00:32:27,239
from months today's savings and millions

00:32:23,639 --> 00:32:29,580
for infrastructure the TIBCO as a true

00:32:27,239 --> 00:32:31,289
consistent pervasive integration in API

00:32:29,580 --> 00:32:33,509
platform in terms of deployment

00:32:31,289 --> 00:32:35,940
consumption and the expansion

00:32:33,509 --> 00:32:39,330
flexibility as well of a CCI

00:32:35,940 --> 00:32:45,960
so that's it thank you

00:32:39,330 --> 00:32:45,960

YouTube URL: https://www.youtube.com/watch?v=5YpbuaVSX3Y


