Title: CF Killed the ITSM Star - Kyle Campos, CSAA Insurance
Publication date: 2018-04-21
Playlist: Cloud Foundry Summit NA 2018
Description: 
	CF Killed the ITSM Star - Kyle Campos, CSAA Insurance

The enterprise change process is filled with tickets, approvals and all forms of non-deterministic change review and time wasting gates that dominate the ITSM landscape. Cloud Foundry has thrown a monkey wrench into ITSM in the form of high velocity change via CI/CD and a healthy embrace of the DevOps "automate all the things" mantra.

Our DevOps and PCF platform leader, Kyle Campos, will talk about how we at CSAA are raising the quality and security bars of the platform even as deployment velocity increases through infrastructure and application CI/CD pipelines and how automation can serve the ITSM overlords through higher levels of determinism.

About Kyle Campos
Kyle is a digital transformation and cloud operations leader who for the past 20 years has worked to turn non-scalable, resource intensive and painful systems into automated, scalable and efficient systems. Currently at CSAA Insurance Kyle leads the digital security, QA, support, analytics and platform teams who are working hard to deliver to application teams all the promises of a highly available, highly performant PaaS through Pivotal Cloud Foundry. Kyle is also the Co-Founder of Commit.to and a previous speaker at CF Summit Europe and OpenStack Conf.
Captions: 
	00:00:00,030 --> 00:00:03,959
all right good afternoon everybody my

00:00:02,730 --> 00:00:07,410
name is Kyle Campos

00:00:03,959 --> 00:00:10,849
I am the enterprise DevOps and platform

00:00:07,410 --> 00:00:13,230
leader at CSA insurance we are a

00:00:10,849 --> 00:00:16,529
hundred-year-old company insurance

00:00:13,230 --> 00:00:22,140
provider for Triple A

00:00:16,529 --> 00:00:26,930
I am a frustrated but hopeful cloud

00:00:22,140 --> 00:00:29,550
leader inside of a large enterprise are

00:00:26,930 --> 00:00:32,460
our journey inside of cloud foundry

00:00:29,550 --> 00:00:34,110
actually came out of the frustration of

00:00:32,460 --> 00:00:38,820
change management to a large degree

00:00:34,110 --> 00:00:40,559
right it's it was extremely painful to

00:00:38,820 --> 00:00:42,239
get infrastructure it was extremely

00:00:40,559 --> 00:00:47,910
painful once you had that infrastructure

00:00:42,239 --> 00:00:50,579
to get your code on it so really it was

00:00:47,910 --> 00:00:54,360
a engineering revolt that kind of

00:00:50,579 --> 00:00:56,870
started cloud foundry at CSA a that that

00:00:54,360 --> 00:01:00,059
got it in there

00:00:56,870 --> 00:01:05,580
so I know where we will all have

00:01:00,059 --> 00:01:07,500
different experiences with ITSM some of

00:01:05,580 --> 00:01:09,659
these are obviously going to be my

00:01:07,500 --> 00:01:12,299
experiences I know they're to a large

00:01:09,659 --> 00:01:14,640
degree shared experiences some of the

00:01:12,299 --> 00:01:16,950
details might you might have optimized

00:01:14,640 --> 00:01:19,500
some areas where where we haven't and

00:01:16,950 --> 00:01:22,549
that's and that's great but hopefully at

00:01:19,500 --> 00:01:25,439
the end of this we can see look we have

00:01:22,549 --> 00:01:28,409
different delivery models and where we

00:01:25,439 --> 00:01:31,950
can align we should where we can

00:01:28,409 --> 00:01:33,990
optimize one or the other we should but

00:01:31,950 --> 00:01:38,460
at the end of the goal I'm here to talk

00:01:33,990 --> 00:01:40,799
about injecting value around fast

00:01:38,460 --> 00:01:44,790
delivery and sort of inverting that risk

00:01:40,799 --> 00:01:48,060
speed fear that currently exists in

00:01:44,790 --> 00:01:50,070
large enterprises around ITSM so when i

00:01:48,060 --> 00:01:51,390
when i and i set some definitions to

00:01:50,070 --> 00:01:57,329
when i refer to our legacy ops

00:01:51,390 --> 00:02:00,750
environment that is a very low levels of

00:01:57,329 --> 00:02:02,579
automation low to none and extremely

00:02:00,750 --> 00:02:06,299
high levels of control so friction

00:02:02,579 --> 00:02:07,600
everywhere at every turn right so I can

00:02:06,299 --> 00:02:09,880
start with

00:02:07,600 --> 00:02:11,830
I'm focusing on change management for

00:02:09,880 --> 00:02:14,020
ITSM so if I if I pull up the ITIL

00:02:11,830 --> 00:02:15,970
definition the goal of change management

00:02:14,020 --> 00:02:17,530
process is to ensure that standardized

00:02:15,970 --> 00:02:20,170
methods and procedures are used for

00:02:17,530 --> 00:02:22,000
efficient and prompt handling of all

00:02:20,170 --> 00:02:23,950
changes in order to minimize the impact

00:02:22,000 --> 00:02:25,300
change related incidents upon service

00:02:23,950 --> 00:02:26,230
quality and consequently improve the

00:02:25,300 --> 00:02:26,920
day-to-day operations of the

00:02:26,230 --> 00:02:29,440
organization

00:02:26,920 --> 00:02:31,750
so just definition wise I'm like I'm

00:02:29,440 --> 00:02:35,470
aligned I'm with you like those outcomes

00:02:31,750 --> 00:02:39,580
sound great and and we're in full

00:02:35,470 --> 00:02:43,480
alignment the trick is when you extract

00:02:39,580 --> 00:02:45,550
those words efficient and prompt I look

00:02:43,480 --> 00:02:47,530
at what's happening and our legacy op

00:02:45,550 --> 00:02:51,040
stack I look at what's happening and our

00:02:47,530 --> 00:02:54,459
Cloud Foundry stack and you can't help

00:02:51,040 --> 00:02:56,640
but think that those words mean entirely

00:02:54,459 --> 00:03:01,510
different things to each side of that

00:02:56,640 --> 00:03:03,610
organization right so we have to kind of

00:03:01,510 --> 00:03:09,310
tear that back a little bit and say okay

00:03:03,610 --> 00:03:11,019
well what are the were the attributes of

00:03:09,310 --> 00:03:14,670
those methods and procedures and the

00:03:11,019 --> 00:03:19,329
legacy OP stack vs. Cloud Foundry

00:03:14,670 --> 00:03:23,950
continuous delivery stack so what I've

00:03:19,329 --> 00:03:25,660
found is in the ITSM world it's it's the

00:03:23,950 --> 00:03:27,070
methods and procedures are traditionally

00:03:25,660 --> 00:03:30,579
expressed through documentation

00:03:27,070 --> 00:03:33,670
primarily right the ownership is through

00:03:30,579 --> 00:03:36,640
governance boards quite large ones

00:03:33,670 --> 00:03:38,620
depending on size of your enterprise and

00:03:36,640 --> 00:03:40,180
the focus tends to be lowest common

00:03:38,620 --> 00:03:42,820
denominator or slowest common

00:03:40,180 --> 00:03:46,120
denominator right it has to account for

00:03:42,820 --> 00:03:48,280
everything right so whatever crazy up

00:03:46,120 --> 00:03:50,829
you know some app team did something 20

00:03:48,280 --> 00:03:55,570
years ago and it's you know insanely

00:03:50,829 --> 00:03:59,620
complex the process has to bend to that

00:03:55,570 --> 00:04:02,739
right it's measured by compliance right

00:03:59,620 --> 00:04:04,329
it it that's kind of its primary focus

00:04:02,739 --> 00:04:09,010
just as long as you do what we say

00:04:04,329 --> 00:04:10,690
you're good right and some of the smells

00:04:09,010 --> 00:04:15,100
here if you're like I think I'm in that

00:04:10,690 --> 00:04:17,380
world accountability is more highly

00:04:15,100 --> 00:04:19,690
valued than determinism right so as long

00:04:17,380 --> 00:04:20,850
as they at any point of the process they

00:04:19,690 --> 00:04:23,400
feel like the

00:04:20,850 --> 00:04:25,500
somebody accountable for that it doesn't

00:04:23,400 --> 00:04:27,090
matter in what form they bring that

00:04:25,500 --> 00:04:31,140
accountability just as long as they have

00:04:27,090 --> 00:04:32,460
a name or a team that's all that matters

00:04:31,140 --> 00:04:34,230
and I'm not saying accountability

00:04:32,460 --> 00:04:37,770
doesn't matter I'm just saying that it

00:04:34,230 --> 00:04:39,900
tends to matter the most here over time

00:04:37,770 --> 00:04:42,990
delivery slows just by nature right as

00:04:39,900 --> 00:04:45,180
as they as more teams come into the

00:04:42,990 --> 00:04:48,540
process as you as you get more

00:04:45,180 --> 00:04:51,810
applications governance boards increase

00:04:48,540 --> 00:04:56,690
processes increase so meetings in human

00:04:51,810 --> 00:05:01,380
touch point tend to increase over time

00:04:56,690 --> 00:05:03,300
in continuous delivery models the

00:05:01,380 --> 00:05:05,070
methods and procedures tend to be

00:05:03,300 --> 00:05:06,870
expressed through code right how they

00:05:05,070 --> 00:05:08,850
should be expressed through code the

00:05:06,870 --> 00:05:11,580
ownership should be it in the delivery

00:05:08,850 --> 00:05:14,100
team's hands the focus should be

00:05:11,580 --> 00:05:17,760
acceleration and you measure it by

00:05:14,100 --> 00:05:19,680
performance right some of the fruits

00:05:17,760 --> 00:05:21,810
that start to come out here is that

00:05:19,680 --> 00:05:24,330
determinism is more important than

00:05:21,810 --> 00:05:26,490
accountability right so how you get to

00:05:24,330 --> 00:05:28,740
that decision is more important than

00:05:26,490 --> 00:05:33,900
like who's the name who can I blame if

00:05:28,740 --> 00:05:35,730
it goes wrong I don't if you if I assume

00:05:33,900 --> 00:05:40,590
most of you have experience in this I in

00:05:35,730 --> 00:05:42,600
this in this world you'll know that it's

00:05:40,590 --> 00:05:44,490
a lot of the decisions approvals are

00:05:42,600 --> 00:05:45,780
left up to people's whims

00:05:44,490 --> 00:05:47,760
they've never they're I have no idea

00:05:45,780 --> 00:05:49,200
what this change is about but they will

00:05:47,760 --> 00:05:52,200
be accountable because they hit the

00:05:49,200 --> 00:05:55,200
approved button right so here we want to

00:05:52,200 --> 00:05:57,480
inject determinism into how we deliver

00:05:55,200 --> 00:06:00,030
software and over time the delivery

00:05:57,480 --> 00:06:02,100
should get faster right if the focus is

00:06:00,030 --> 00:06:06,510
acceleration we're always looking to

00:06:02,100 --> 00:06:08,910
optimize speed and then pipelines

00:06:06,510 --> 00:06:10,890
increase and human touch point decreases

00:06:08,910 --> 00:06:13,260
over time so that when when you're

00:06:10,890 --> 00:06:14,880
continuously delivering anywhere a human

00:06:13,260 --> 00:06:16,590
comes into contact with it sticks out

00:06:14,880 --> 00:06:22,080
like a sore thumb right and it's a it's

00:06:16,590 --> 00:06:23,580
a target to for optimization if you take

00:06:22,080 --> 00:06:25,380
the same approach here old and new

00:06:23,580 --> 00:06:27,390
against efficient and prompt what are

00:06:25,380 --> 00:06:30,430
some of the characteristics here so

00:06:27,390 --> 00:06:32,410
efficiency the aim tends to be

00:06:30,430 --> 00:06:36,100
init process refinements like that's how

00:06:32,410 --> 00:06:39,160
you squeeze out efficiency in ITSM like

00:06:36,100 --> 00:06:43,750
okay we had five drop downs on this on

00:06:39,160 --> 00:06:45,880
this first ticket maybe we'd take it

00:06:43,750 --> 00:06:48,160
down to four you know that's that's

00:06:45,880 --> 00:06:50,140
primarily where the process refinements

00:06:48,160 --> 00:06:52,240
come in and then the vehicle is training

00:06:50,140 --> 00:06:54,130
right get people into more training let

00:06:52,240 --> 00:06:56,260
them learn the new processes its

00:06:54,130 --> 00:06:59,290
measured by traceability is that other

00:06:56,260 --> 00:07:02,050
breadcrumbs at every step the smells

00:06:59,290 --> 00:07:04,390
hears is traceability first just as long

00:07:02,050 --> 00:07:07,270
as you know what happened is tends to be

00:07:04,390 --> 00:07:09,970
good enough for efficiency sake and then

00:07:07,270 --> 00:07:13,360
what you you run into is that the

00:07:09,970 --> 00:07:15,760
process it gets gamed to gain efficiency

00:07:13,360 --> 00:07:17,530
right so people naturally feel

00:07:15,760 --> 00:07:20,940
frustrated that their changes in getting

00:07:17,530 --> 00:07:23,620
through in time and there's all sorts of

00:07:20,940 --> 00:07:25,600
crafty methods people gain that system

00:07:23,620 --> 00:07:27,430
by whether it's how you get a change

00:07:25,600 --> 00:07:29,620
approved whether it's how many changes

00:07:27,430 --> 00:07:32,620
you shove into some approval form right

00:07:29,620 --> 00:07:33,700
like okay well I do one request for 50

00:07:32,620 --> 00:07:36,190
things and then I'm gonna get that

00:07:33,700 --> 00:07:39,310
through faster than I can if I had you

00:07:36,190 --> 00:07:41,050
know 50 different releases there's a

00:07:39,310 --> 00:07:45,160
very high tolerance towards wasted

00:07:41,050 --> 00:07:46,720
effort right I've been in deployment

00:07:45,160 --> 00:07:49,720
meetings with literally a hundred people

00:07:46,720 --> 00:07:52,390
on the phone and nobody is embarrassed

00:07:49,720 --> 00:07:54,100
by and I'm embarrassed that nobody's

00:07:52,390 --> 00:07:56,290
embarrassed and like we should all be

00:07:54,100 --> 00:07:59,470
shocked right now that this is what it's

00:07:56,290 --> 00:08:01,960
taking and it creates specialized

00:07:59,470 --> 00:08:03,880
workforces right so there's teams that

00:08:01,960 --> 00:08:08,200
exist solely to help people navigate

00:08:03,880 --> 00:08:10,060
that complexity right in the new model

00:08:08,200 --> 00:08:14,410
the aim is higher quality on time

00:08:10,060 --> 00:08:16,420
software on full stop our vehicle to get

00:08:14,410 --> 00:08:19,390
there is through automation we measure

00:08:16,420 --> 00:08:21,520
it by delivery KPIs and repeatability

00:08:19,390 --> 00:08:23,530
first is one of the main fruits right

00:08:21,520 --> 00:08:26,620
it isn't just get it through it all

00:08:23,530 --> 00:08:30,750
costs and then you we celebrate its is

00:08:26,620 --> 00:08:33,310
what you've done repeatable and then

00:08:30,750 --> 00:08:36,280
namely through through pipelining right

00:08:33,310 --> 00:08:38,260
the pipeline in this case is the most

00:08:36,280 --> 00:08:40,750
efficient way to get it to Prague so

00:08:38,260 --> 00:08:43,190
whereas in ITSM you're frequently gaming

00:08:40,750 --> 00:08:45,870
and to get things going faster

00:08:43,190 --> 00:08:47,700
continuous delivery your pipeline is the

00:08:45,870 --> 00:08:51,000
best way to get there right there's no

00:08:47,700 --> 00:08:53,160
faster way to get it into prod or better

00:08:51,000 --> 00:08:56,029
way I should say faster and better there

00:08:53,160 --> 00:09:00,959
might be a faster way but not a safe way

00:08:56,029 --> 00:09:03,480
and in this in in in the pipeline world

00:09:00,959 --> 00:09:07,140
there's really low tolerance for wasted

00:09:03,480 --> 00:09:09,660
effort right where you see it it sticks

00:09:07,140 --> 00:09:11,279
out and you attack it and there's team

00:09:09,660 --> 00:09:13,860
ownership on these pipelines because it

00:09:11,279 --> 00:09:14,670
is a it's a cross-functional pipeline

00:09:13,860 --> 00:09:17,820
right you're taking it from an

00:09:14,670 --> 00:09:19,740
engineer's hands and laptop into

00:09:17,820 --> 00:09:21,660
production and there's a lot depending

00:09:19,740 --> 00:09:23,190
on your gates and all the quality and

00:09:21,660 --> 00:09:24,810
security and performance stuff you have

00:09:23,190 --> 00:09:26,519
to do there's a lot of people that are

00:09:24,810 --> 00:09:28,019
contributing to that pipeline and they

00:09:26,519 --> 00:09:30,570
have to feel a sense of ownership over

00:09:28,019 --> 00:09:32,640
it they should they have their own KPIs

00:09:30,570 --> 00:09:34,649
for their litter boxes along that

00:09:32,640 --> 00:09:42,810
pipeline and how and how efficient they

00:09:34,649 --> 00:09:44,880
run all right the illusion so here's

00:09:42,810 --> 00:09:47,970
some of the illusions we fall under and

00:09:44,880 --> 00:09:50,370
inside of ITSM you get the sense that

00:09:47,970 --> 00:09:53,040
there's safety and complexity right

00:09:50,370 --> 00:09:55,019
there's this feeling like the harder we

00:09:53,040 --> 00:09:56,519
make this process the more people that

00:09:55,019 --> 00:09:58,560
are involved the more steps that are

00:09:56,519 --> 00:10:01,260
involved it must be injecting safety

00:09:58,560 --> 00:10:04,260
because there's just so many checkpoints

00:10:01,260 --> 00:10:06,120
right but most of those are many of them

00:10:04,260 --> 00:10:10,399
tend to be arbitrary they're

00:10:06,120 --> 00:10:15,110
non-deterministic so it's it's it's

00:10:10,399 --> 00:10:18,060
mostly and in many cases of facade

00:10:15,110 --> 00:10:22,320
another illusion is that approval is the

00:10:18,060 --> 00:10:25,500
same thing as accountability I have

00:10:22,320 --> 00:10:27,839
conversations probably every week with

00:10:25,500 --> 00:10:29,850
some other vice-president who says I

00:10:27,839 --> 00:10:31,220
just keep clicking approve on these

00:10:29,850 --> 00:10:35,220
things I have no idea what they are

00:10:31,220 --> 00:10:38,579
right and they're frustrated and they

00:10:35,220 --> 00:10:41,160
who they want as somebody else on their

00:10:38,579 --> 00:10:44,040
team to just keep clicking approve so

00:10:41,160 --> 00:10:45,329
approval really at the end of the day

00:10:44,040 --> 00:10:47,459
when you look at changes there may be

00:10:45,329 --> 00:10:52,050
one person there that had any idea in

00:10:47,459 --> 00:10:53,760
that chain of what this change was the

00:10:52,050 --> 00:10:55,920
other illusion and it's sort of this

00:10:53,760 --> 00:10:56,850
false dichotomy that gets set up on the

00:10:55,920 --> 00:10:58,800
ITSM side

00:10:56,850 --> 00:11:04,980
is that if you're going fast it must be

00:10:58,800 --> 00:11:07,589
reckless so I'm here to talk on a third

00:11:04,980 --> 00:11:10,199
way that is fast and not reckless fast

00:11:07,589 --> 00:11:15,180
and safe the way I kind of explained

00:11:10,199 --> 00:11:18,930
this landscape for getting software into

00:11:15,180 --> 00:11:20,790
production is this you know this this

00:11:18,930 --> 00:11:22,500
dangerous road often that often the

00:11:20,790 --> 00:11:23,699
horizon there if we imagine off in the

00:11:22,500 --> 00:11:26,639
valley is where we're going to start

00:11:23,699 --> 00:11:28,259
with a code commit and up here our

00:11:26,639 --> 00:11:30,449
heavenly production on the top of them

00:11:28,259 --> 00:11:34,440
you send the mountain so many turns

00:11:30,449 --> 00:11:36,149
right we start with a code commit and

00:11:34,440 --> 00:11:40,769
then our first sort of junction point

00:11:36,149 --> 00:11:42,029
for being good stewards here is that you

00:11:40,769 --> 00:11:44,850
have some measure of testing that's

00:11:42,029 --> 00:11:46,740
gonna happen right and after that you

00:11:44,850 --> 00:11:48,149
got to make another turn and process you

00:11:46,740 --> 00:11:50,430
got to make a change request with

00:11:48,149 --> 00:11:53,850
whatever that artifact is and whenever

00:11:50,430 --> 00:11:55,380
the the change logs are and then that's

00:11:53,850 --> 00:11:57,000
got to go through some set of approvals

00:11:55,380 --> 00:12:00,060
however many it takes to get through

00:11:57,000 --> 00:12:01,529
your organization then you got to open

00:12:00,060 --> 00:12:04,620
up a change when oh when's this gonna

00:12:01,529 --> 00:12:06,000
happen right and then you do the change

00:12:04,620 --> 00:12:07,290
and then you got to wrangle another

00:12:06,000 --> 00:12:08,970
group of people that are gonna come back

00:12:07,290 --> 00:12:10,019
around and validate the change and say

00:12:08,970 --> 00:12:12,300
everything that's right you didn't break

00:12:10,019 --> 00:12:15,389
you know the 60 other teams and you're

00:12:12,300 --> 00:12:18,870
in your company this is a very generous

00:12:15,389 --> 00:12:20,550
view I'm gonna I'm gonna say well we'll

00:12:18,870 --> 00:12:24,630
say success at that point it's a very

00:12:20,550 --> 00:12:26,819
generous amount of steps there but

00:12:24,630 --> 00:12:29,279
Congrats you got it into one environment

00:12:26,819 --> 00:12:31,949
right okay now go ahead and repeat all

00:12:29,279 --> 00:12:34,560
of that for your test environments

00:12:31,949 --> 00:12:36,170
you're gonna have to cross the bridge of

00:12:34,560 --> 00:12:39,870
real data which is always a harrowing

00:12:36,170 --> 00:12:41,990
harrowing effort however many pre prod

00:12:39,870 --> 00:12:44,069
environments you may have and then

00:12:41,990 --> 00:12:45,060
eventually you get it into production

00:12:44,069 --> 00:12:48,600
right

00:12:45,060 --> 00:12:51,480
and so ITSM overlords will kind of show

00:12:48,600 --> 00:12:54,380
these huge process maps and say like

00:12:51,480 --> 00:12:56,910
yeah that's it by the way you have to

00:12:54,380 --> 00:12:59,040
you have to drive that road with like

00:12:56,910 --> 00:13:00,810
the junkies beat-up old car that you're

00:12:59,040 --> 00:13:04,290
gonna hate it's really uncomfortable and

00:13:00,810 --> 00:13:06,420
annoying and you start complaining

00:13:04,290 --> 00:13:08,579
enough about that and they're like okay

00:13:06,420 --> 00:13:09,529
roll will optimize a little bit and then

00:13:08,579 --> 00:13:11,569
they're like

00:13:09,529 --> 00:13:13,189
we got a newer car for you to take all

00:13:11,569 --> 00:13:15,999
the same turns you got to do all the

00:13:13,189 --> 00:13:18,769
same process bits right nothing is

00:13:15,999 --> 00:13:20,420
substantively changed with the process

00:13:18,769 --> 00:13:22,490
you might may be a little more

00:13:20,420 --> 00:13:25,249
comfortable we took a few radio buttons

00:13:22,490 --> 00:13:28,490
away the approval list is from 30 to 25

00:13:25,249 --> 00:13:30,850
whatever it may be right and then we

00:13:28,490 --> 00:13:34,639
come along with Cloud Foundry and we try

00:13:30,850 --> 00:13:38,360
to explain that there's a paradigm shift

00:13:34,639 --> 00:13:40,970
right now I have a cable car that goes

00:13:38,360 --> 00:13:42,949
from the bottom straight to the top of

00:13:40,970 --> 00:13:45,709
that mountain it's repeatable it's the

00:13:42,949 --> 00:13:47,930
same journey every time right I don't

00:13:45,709 --> 00:13:50,329
have to make those turns I don't have to

00:13:47,930 --> 00:13:52,939
stop at that stoplight I don't have to

00:13:50,329 --> 00:13:55,699
look both ways here there right you're

00:13:52,939 --> 00:13:57,079
still gonna get the questions okay great

00:13:55,699 --> 00:13:59,629
they'll say I understand you have this

00:13:57,079 --> 00:14:00,980
whole fancy thing out there but you

00:13:59,629 --> 00:14:03,319
still have a driver's license right and

00:14:00,980 --> 00:14:07,790
you're gonna still obey all my rules and

00:14:03,319 --> 00:14:12,079
you kind of you know that's not exactly

00:14:07,790 --> 00:14:14,509
what I'm talking about here so then we

00:14:12,079 --> 00:14:20,180
get into the paradigm shift and how and

00:14:14,509 --> 00:14:22,759
how we explain this and by the way just

00:14:20,180 --> 00:14:24,199
as encouragement this is this will be if

00:14:22,759 --> 00:14:25,519
you're involved with this now this will

00:14:24,199 --> 00:14:28,160
be in you will have this conversation

00:14:25,519 --> 00:14:29,420
many many many times and you'll win it

00:14:28,160 --> 00:14:31,699
and then you're gonna have to win it

00:14:29,420 --> 00:14:33,680
again in two weeks and so that's the

00:14:31,699 --> 00:14:38,779
frustrated part of me but I'm amazing

00:14:33,680 --> 00:14:40,519
hopeful here so in the old ITSM right

00:14:38,779 --> 00:14:43,100
change request is out-of-band it's never

00:14:40,519 --> 00:14:44,329
it's not event-driven it's you've done a

00:14:43,100 --> 00:14:47,180
bunch of things then you got to generate

00:14:44,329 --> 00:14:49,220
this request the approval always as

00:14:47,180 --> 00:14:50,569
we've talked about it's broad and it's

00:14:49,220 --> 00:14:52,339
arbitrary

00:14:50,569 --> 00:14:54,050
the change windows are very often

00:14:52,339 --> 00:14:56,059
coordinated and they're static right

00:14:54,050 --> 00:14:59,449
there they're either a set window you

00:14:56,059 --> 00:15:03,290
have or it's a unique one time window

00:14:59,449 --> 00:15:05,360
that you set the change is unique non

00:15:03,290 --> 00:15:06,649
madam potent right so if you were to do

00:15:05,360 --> 00:15:09,829
it again you'd have to do all the stuff

00:15:06,649 --> 00:15:13,699
again and each way even though if it's a

00:15:09,829 --> 00:15:17,120
scripted or standard change set that you

00:15:13,699 --> 00:15:19,399
have in your process it's it's

00:15:17,120 --> 00:15:22,009
essentially it's a unique event each

00:15:19,399 --> 00:15:23,290
time the change validation is unique to

00:15:22,009 --> 00:15:24,940
the change type right so

00:15:23,290 --> 00:15:30,009
oh I think I might have messed up group

00:15:24,940 --> 00:15:31,980
X over there so get them in here and the

00:15:30,009 --> 00:15:34,990
larger point here is that the the

00:15:31,980 --> 00:15:36,579
posture is that the more times you do

00:15:34,990 --> 00:15:39,240
this the more operational risk you're

00:15:36,579 --> 00:15:42,190
adding right so everybody's just

00:15:39,240 --> 00:15:43,750
terrified of you doing the process the

00:15:42,190 --> 00:15:45,850
terrible process that they set up like

00:15:43,750 --> 00:15:47,440
please don't do this the more times you

00:15:45,850 --> 00:15:51,430
deploy the more operational risks there

00:15:47,440 --> 00:15:53,019
are in the new we're saying change

00:15:51,430 --> 00:15:56,069
requests are event-driven right they

00:15:53,019 --> 00:16:01,630
happen the moment package is made

00:15:56,069 --> 00:16:03,190
perhaps or once your tests say that they

00:16:01,630 --> 00:16:06,190
can't it can be deployed right it's as

00:16:03,190 --> 00:16:08,019
soon as it as soon as it needs to the

00:16:06,190 --> 00:16:11,019
approval should be deterministic and

00:16:08,019 --> 00:16:14,440
automated so when I was doing this

00:16:11,019 --> 00:16:16,930
change I would for our products I'd look

00:16:14,440 --> 00:16:19,120
at that approval list I'd go to each one

00:16:16,930 --> 00:16:21,639
of them and I'd say you approve this

00:16:19,120 --> 00:16:23,410
what do you need to know about when

00:16:21,639 --> 00:16:24,850
we're deploying this app for you to say

00:16:23,410 --> 00:16:26,230
it's good and they're like I don't even

00:16:24,850 --> 00:16:28,240
care I just always had to prove

00:16:26,230 --> 00:16:31,170
something okay you're out of the list

00:16:28,240 --> 00:16:33,880
and just one by one go down and I

00:16:31,170 --> 00:16:37,360
honestly in this case found exactly zero

00:16:33,880 --> 00:16:38,649
people that cared for whenever we

00:16:37,360 --> 00:16:41,199
deployed this they had no they no

00:16:38,649 --> 00:16:43,600
dependency chain to it not a care in the

00:16:41,199 --> 00:16:45,699
world so in their case it's only art in

00:16:43,600 --> 00:16:47,860
this one apps case it's only our tests

00:16:45,699 --> 00:16:51,190
that matter but there's certainly room

00:16:47,860 --> 00:16:52,899
for external dependencies and automation

00:16:51,190 --> 00:16:54,519
that you can you weave in there and we

00:16:52,899 --> 00:16:57,519
have that for some of our applications

00:16:54,519 --> 00:16:59,500
but the point being get determinism into

00:16:57,519 --> 00:17:02,350
that like what is the what needs to

00:16:59,500 --> 00:17:05,530
light up green for you to be happy that

00:17:02,350 --> 00:17:07,659
it can go that change window is

00:17:05,530 --> 00:17:10,209
encapsulated in dynamic right so it's

00:17:07,659 --> 00:17:13,179
since we're event-driven the deploy will

00:17:10,209 --> 00:17:16,179
happen once all the tests say is safe

00:17:13,179 --> 00:17:17,770
and then the change window is as small

00:17:16,179 --> 00:17:19,780
as it needs to be for that change to

00:17:17,770 --> 00:17:21,850
happen and obviously with Cloud Foundry

00:17:19,780 --> 00:17:25,030
we have a lot of great ways of doing

00:17:21,850 --> 00:17:27,390
zero downtime deployments right change

00:17:25,030 --> 00:17:29,919
should be uniform in idempotent right so

00:17:27,390 --> 00:17:33,610
part of this being the nature of

00:17:29,919 --> 00:17:37,590
immutable software the other part of it

00:17:33,610 --> 00:17:41,170
being that you have great pipelines

00:17:37,590 --> 00:17:42,850
and again change validation we build

00:17:41,170 --> 00:17:45,040
that on into your Bluegreen deployment

00:17:42,850 --> 00:17:46,870
right so if we have some fear that

00:17:45,040 --> 00:17:48,460
production is significantly different

00:17:46,870 --> 00:17:50,650
than staging or your pre prod

00:17:48,460 --> 00:17:53,290
environments which in most enterprises

00:17:50,650 --> 00:17:57,400
there's always some measure of surprise

00:17:53,290 --> 00:17:58,600
you can build in all types of safety

00:17:57,400 --> 00:18:00,640
mechanisms into your Bluegreen

00:17:58,600 --> 00:18:02,440
deployment cut over traffic slowly you

00:18:00,640 --> 00:18:04,600
know the Netflix model you can canary

00:18:02,440 --> 00:18:07,030
stuff you can whatever you need to do in

00:18:04,600 --> 00:18:10,180
production but the point is I don't want

00:18:07,030 --> 00:18:12,280
anybody calling my team to say stay up

00:18:10,180 --> 00:18:14,970
at 1:00 a.m. and go tell us if this is

00:18:12,280 --> 00:18:19,750
broken we want the robots to do that and

00:18:14,970 --> 00:18:21,730
then here the posture is change reduces

00:18:19,750 --> 00:18:23,950
operational risk right so we're trying

00:18:21,730 --> 00:18:26,080
to say the more times we do this the

00:18:23,950 --> 00:18:29,950
better we get at it the better our

00:18:26,080 --> 00:18:33,610
product is the more value our customers

00:18:29,950 --> 00:18:39,310
receive on time so we're really trying

00:18:33,610 --> 00:18:41,440
to invert that that posture so talked a

00:18:39,310 --> 00:18:47,440
little bit about it performance being

00:18:41,440 --> 00:18:49,810
measured by a kpi's so there's a lot

00:18:47,440 --> 00:18:51,490
obviously each you know if you if you

00:18:49,810 --> 00:18:53,620
kind of vision in a massive pipeline

00:18:51,490 --> 00:18:55,360
each each job is gonna have its own

00:18:53,620 --> 00:18:58,810
runtime that you're gonna want those

00:18:55,360 --> 00:19:01,840
teams to be accountable to but a macro

00:18:58,810 --> 00:19:03,970
KPI here for us is the time from the

00:19:01,840 --> 00:19:07,150
package build so that the second

00:19:03,970 --> 00:19:09,910
something could possibly get to prod to

00:19:07,150 --> 00:19:11,320
the time it actually lives in prod what

00:19:09,910 --> 00:19:15,400
is the time difference between that and

00:19:11,320 --> 00:19:17,320
on our most optimized pipeline that time

00:19:15,400 --> 00:19:20,110
is 38 minutes right so we set baselines

00:19:17,320 --> 00:19:21,670
for each one of these products so from

00:19:20,110 --> 00:19:23,920
the time engineer commands all the test

00:19:21,670 --> 00:19:25,210
runs a package is built typically takes

00:19:23,920 --> 00:19:27,100
about 38 minutes for that to go through

00:19:25,210 --> 00:19:29,980
all the different tests and QA and

00:19:27,100 --> 00:19:32,410
browser tests and an API test and

00:19:29,980 --> 00:19:34,630
security and performance and land up in

00:19:32,410 --> 00:19:37,210
production right and so for us we're

00:19:34,630 --> 00:19:39,700
like that that's that's pretty darn

00:19:37,210 --> 00:19:42,250
great for us like 38 minutes is pretty

00:19:39,700 --> 00:19:43,660
fantastic I don't know that we can do

00:19:42,250 --> 00:19:48,250
much better than that

00:19:43,660 --> 00:19:49,490
though we should try now for others that

00:19:48,250 --> 00:19:52,460
is

00:19:49,490 --> 00:19:54,380
just mind blown what are you doing

00:19:52,460 --> 00:19:55,940
there's 30 when I when I show this at

00:19:54,380 --> 00:19:58,340
our QB ours

00:19:55,940 --> 00:19:59,450
there's half the room that's like I want

00:19:58,340 --> 00:20:04,390
to know how and the other room is just

00:19:59,450 --> 00:20:08,990
like pounding that's like 38 minutes and

00:20:04,390 --> 00:20:11,120
so they're like Kyle why are you not why

00:20:08,990 --> 00:20:13,730
are you not getting into the the cab

00:20:11,120 --> 00:20:15,860
meeting for this stuff and this is

00:20:13,730 --> 00:20:18,679
actually a real-life conversation I had

00:20:15,860 --> 00:20:22,030
I am on the board I've just haven't been

00:20:18,679 --> 00:20:22,030
in any of those meetings in a long time

00:20:23,470 --> 00:20:31,520
so the big idea that I'm trying to get

00:20:27,760 --> 00:20:36,080
through here I guess is that unemployed

00:20:31,520 --> 00:20:38,470
code is at best a depreciating act asset

00:20:36,080 --> 00:20:38,470
right

00:20:38,920 --> 00:20:43,640
every minute delay from the time it

00:20:42,350 --> 00:20:46,179
could be deployed to the time it's in

00:20:43,640 --> 00:20:49,730
production decreases the value and

00:20:46,179 --> 00:20:53,690
increases the risk you can ask any

00:20:49,730 --> 00:20:55,929
engineer would you rather fix the

00:20:53,690 --> 00:20:59,650
problem you committed 38 minutes ago or

00:20:55,929 --> 00:21:02,030
one that you worked on three months ago

00:20:59,650 --> 00:21:04,280
if they're still working there by the

00:21:02,030 --> 00:21:08,050
time it makes progression which we've

00:21:04,280 --> 00:21:08,050
had examples of both right

00:21:08,770 --> 00:21:13,130
so risk in that sense from an

00:21:11,570 --> 00:21:15,890
application engineering sense also

00:21:13,130 --> 00:21:18,290
obviously from a from a security posture

00:21:15,890 --> 00:21:20,900
right so the security has done

00:21:18,290 --> 00:21:24,350
application developers the biggest favor

00:21:20,900 --> 00:21:27,650
here in stories like Equifax and such

00:21:24,350 --> 00:21:29,809
that were sort of frozen by change sets

00:21:27,650 --> 00:21:31,370
that were too big they couldn't get

00:21:29,809 --> 00:21:35,420
through couldn't update their their

00:21:31,370 --> 00:21:36,650
their their web stacks and now everybody

00:21:35,420 --> 00:21:38,330
learns from that oh I guess it is a

00:21:36,650 --> 00:21:40,370
problem when you can't deploy at a

00:21:38,330 --> 00:21:43,580
moment's notice very quickly and safely

00:21:40,370 --> 00:21:45,920
to your environments right so the

00:21:43,580 --> 00:21:50,240
security story has helped us illuminate

00:21:45,920 --> 00:21:56,480
the application story here so some

00:21:50,240 --> 00:21:58,580
takeaways here I'm asking us us Cloud

00:21:56,480 --> 00:22:00,980
Foundry evangelists here to really

00:21:58,580 --> 00:22:02,870
embrace the paradigm shift and a not

00:22:00,980 --> 00:22:05,120
shoehorn CF and as

00:22:02,870 --> 00:22:10,700
step forward optimization it's a new

00:22:05,120 --> 00:22:14,059
path so if you'll you'll the bait is for

00:22:10,700 --> 00:22:16,280
the legacy ops ITSM stack - just say

00:22:14,059 --> 00:22:19,100
like hey you're just another runtime

00:22:16,280 --> 00:22:21,320
whatever you know do do everything the

00:22:19,100 --> 00:22:23,150
same and we have to do the hard work to

00:22:21,320 --> 00:22:24,860
communicate communicate the paradigm

00:22:23,150 --> 00:22:28,330
shift here otherwise you're not going to

00:22:24,860 --> 00:22:28,330
reap all the benefits of the platform

00:22:28,360 --> 00:22:33,950
and as as good DevOps engineers we need

00:22:31,640 --> 00:22:35,929
to use system thinking with the goal of

00:22:33,950 --> 00:22:37,429
continuous delivery into production as

00:22:35,929 --> 00:22:40,850
the framework through which you optimize

00:22:37,429 --> 00:22:42,890
so if if our our mental framework is

00:22:40,850 --> 00:22:44,929
that pipeline from engineers hands into

00:22:42,890 --> 00:22:46,730
into production and we use system

00:22:44,929 --> 00:22:49,910
thinking about how do we optimize that

00:22:46,730 --> 00:22:52,070
whole pipeline your considerations need

00:22:49,910 --> 00:22:54,170
to be for the performance of that entire

00:22:52,070 --> 00:22:57,410
pie playing like that that KPI I showed

00:22:54,170 --> 00:22:59,390
and not just oh the QA guys like to work

00:22:57,410 --> 00:23:01,100
this way and so they take the football

00:22:59,390 --> 00:23:02,750
and they run away for a week and they

00:23:01,100 --> 00:23:04,250
come back or you know the security guys

00:23:02,750 --> 00:23:05,929
like to do the same and performance like

00:23:04,250 --> 00:23:09,440
to do the same and then four weeks later

00:23:05,929 --> 00:23:13,640
we have a release optimized for

00:23:09,440 --> 00:23:16,130
continuous delivery and production and

00:23:13,640 --> 00:23:17,840
and the truth is we're beyond rejecting

00:23:16,130 --> 00:23:19,370
the false dichotomies and onto inverse

00:23:17,840 --> 00:23:21,860
relationships what I talked about speed

00:23:19,370 --> 00:23:25,280
and security so the the you know the

00:23:21,860 --> 00:23:27,440
legacy mindset will be fast is reckless

00:23:25,280 --> 00:23:29,750
and we're not just saying it's a false

00:23:27,440 --> 00:23:31,250
dichotomy they're disconnected or now

00:23:29,750 --> 00:23:33,440
we're onto actually saying actually

00:23:31,250 --> 00:23:35,540
there's industry proof that it's the

00:23:33,440 --> 00:23:38,600
inverse of that being slow is reckless

00:23:35,540 --> 00:23:41,840
right if your whole business can vanish

00:23:38,600 --> 00:23:44,110
if you can't get fixes out at a moment's

00:23:41,840 --> 00:23:44,110
notice

00:23:44,650 --> 00:23:50,030
we got to relentlessly hunt down and in

00:23:47,420 --> 00:23:51,830
determinism right where it exists where

00:23:50,030 --> 00:23:53,929
people's whims are there where it's a

00:23:51,830 --> 00:23:57,530
phone call where it's a meeting where

00:23:53,929 --> 00:24:01,429
it's people's hunches and and fears you

00:23:57,530 --> 00:24:03,590
got to drive that out of the room and

00:24:01,429 --> 00:24:07,160
certainly don't let it all into the

00:24:03,590 --> 00:24:09,380
pipeline and time to market is a KPI for

00:24:07,160 --> 00:24:11,600
every change minimize depreciating

00:24:09,380 --> 00:24:14,570
assets and in the form of unemployed

00:24:11,600 --> 00:24:15,929
code so I mean frequently we use that

00:24:14,570 --> 00:24:17,369
KPI out of

00:24:15,929 --> 00:24:19,590
business abstract layer right this

00:24:17,369 --> 00:24:21,450
product to this big feature but you

00:24:19,590 --> 00:24:23,549
really got to drive that down to every

00:24:21,450 --> 00:24:25,740
change like how were we are we treating

00:24:23,549 --> 00:24:28,850
every change as important to get into

00:24:25,740 --> 00:24:28,850
prot as soon as possible

00:24:29,129 --> 00:24:35,090
champion convention rather than chastise

00:24:31,529 --> 00:24:39,509
over compliance so this is more of a

00:24:35,090 --> 00:24:43,499
culture awareness note for the two

00:24:39,509 --> 00:24:45,210
different models you know frequently the

00:24:43,499 --> 00:24:47,039
feeling and the legacy ops and ITSM

00:24:45,210 --> 00:24:50,429
stack is that you're just getting

00:24:47,039 --> 00:24:52,230
browbeat for compliance on the process

00:24:50,429 --> 00:24:54,119
right regardless of if you're like hey

00:24:52,230 --> 00:24:57,779
but I found a new efficiency or

00:24:54,119 --> 00:24:59,340
something like that so champion the

00:24:57,779 --> 00:25:01,259
convention of your pipelines right and

00:24:59,340 --> 00:25:02,879
like like I was talking about the

00:25:01,259 --> 00:25:04,499
pipelines if it is the most efficient

00:25:02,879 --> 00:25:07,320
way then you're just creating

00:25:04,499 --> 00:25:09,299
opportunity for application teams to

00:25:07,320 --> 00:25:11,820
leverage the most benefit right there

00:25:09,299 --> 00:25:13,200
like here if you inherit this this

00:25:11,820 --> 00:25:18,659
convention your life will be so much

00:25:13,200 --> 00:25:20,369
easier and the process should serve the

00:25:18,659 --> 00:25:22,529
outcome not the other way around I'm

00:25:20,369 --> 00:25:25,320
really consistently amazed about how

00:25:22,529 --> 00:25:27,419
often you get into meetings and

00:25:25,320 --> 00:25:29,940
processes held up like this just like

00:25:27,419 --> 00:25:33,119
unchangeable force in the room or the

00:25:29,940 --> 00:25:35,970
humans we create these things we

00:25:33,119 --> 00:25:37,799
shouldn't make them do what we want and

00:25:35,970 --> 00:25:41,249
the outcomes are really an alignment

00:25:37,799 --> 00:25:45,179
opportunity so you know as I engage with

00:25:41,249 --> 00:25:47,279
our ITSM partners you know I tell them

00:25:45,179 --> 00:25:49,200
like look we want the same thing we're

00:25:47,279 --> 00:25:51,389
gonna get there differently and where we

00:25:49,200 --> 00:25:53,309
can align on technology let's do it

00:25:51,389 --> 00:25:55,139
where we can talk together where my

00:25:53,309 --> 00:25:57,929
robot can talk to your robot let's do

00:25:55,139 --> 00:26:04,110
that right but let's align on the

00:25:57,929 --> 00:26:06,659
outcomes and not and not the how so to

00:26:04,110 --> 00:26:08,909
wrap up I I think we just really need to

00:26:06,659 --> 00:26:11,669
leverage this paradigm shift as cloud

00:26:08,909 --> 00:26:13,619
foundry enthusiasts to establish that

00:26:11,669 --> 00:26:14,999
new organizational values structures

00:26:13,619 --> 00:26:17,700
around the speed of delivery

00:26:14,999 --> 00:26:20,269
it's it's gonna it takes a lot of work a

00:26:17,700 --> 00:26:22,830
lot of repeated work a lot of unfun work

00:26:20,269 --> 00:26:24,779
but it's necessary

00:26:22,830 --> 00:26:27,299
don't let the legacy pressure of just

00:26:24,779 --> 00:26:28,550
another runtime pull you back into the

00:26:27,299 --> 00:26:32,720
land of

00:26:28,550 --> 00:26:36,290
youjin and let's let's deliver fast safe

00:26:32,720 --> 00:26:40,160
and deliver value and there's one last

00:26:36,290 --> 00:26:44,750
thing here for a close I have change

00:26:40,160 --> 00:26:46,040
requests 24 wingding 79-68 for ending

00:26:44,750 --> 00:26:51,140
this presentation if you could just

00:26:46,040 --> 00:26:52,960
approve that I'll be done there's my

00:26:51,140 --> 00:26:57,740
contact information if you have any

00:26:52,960 --> 00:27:00,440
questions I will be talking with pivotal

00:26:57,740 --> 00:27:05,780
guys on a panel about platform as a

00:27:00,440 --> 00:27:10,450
product a little bit later yeah I'll be

00:27:05,780 --> 00:27:10,450

YouTube URL: https://www.youtube.com/watch?v=ZQGmtuG0Nx8


