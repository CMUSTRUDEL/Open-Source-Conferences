Title: 99 Problems but a Container Ain't One: Patterns for Application Development Without Toil
Publication date: 2018-04-21
Playlist: Cloud Foundry Summit NA 2018
Description: 
	99 Problems but a Container Ain't One: Patterns for Application Development Without Toil - Julz Friedman, IBM

There's an important secret about distributed systems and it's this: state is bad. State is the original sin that turns cattle into pets. Patterns focusing on stateless code - Serverless, Cloud Foundry, 12 Factor, Map/Reduce etc - allow programmers to focus on their app, and not on orchestration. This talk is a guide to the why and how of Orchestratorless, Containerless and Serverless development: that is development where you get to focus on your application, not containers and orchestration and servers and how Cloud Foundry can should and does fit into that movement.
Captions: 
	00:00:00,000 --> 00:00:08,930
this is a fun end of day talk do not be

00:00:04,650 --> 00:00:08,930
worried there is no content just jokes

00:00:11,030 --> 00:00:16,830
this talk is called 99 problems but a

00:00:13,620 --> 00:00:20,820
container a one eye this is how to

00:00:16,830 --> 00:00:23,430
escape legally obliged to how you have

00:00:20,820 --> 00:00:25,789
to escape my talks frankly surprising

00:00:23,430 --> 00:00:30,000
that more cities don't have that rule

00:00:25,789 --> 00:00:32,309
I'm dr. Jules I work for IBM was sort of

00:00:30,000 --> 00:00:34,200
the first ochoa depending on I mean it's

00:00:32,309 --> 00:00:36,030
easy to find ways to disqualify Holland

00:00:34,200 --> 00:00:40,260
countries there was factually the first

00:00:36,030 --> 00:00:42,420
dojo a first okay after him and I work

00:00:40,260 --> 00:00:46,230
on garden and autoscaler you may know

00:00:42,420 --> 00:00:48,390
that garden is cloud foundries container

00:00:46,230 --> 00:00:50,370
engine so it's a bit width I want you

00:00:48,390 --> 00:00:53,070
not to worry about containers but then

00:00:50,370 --> 00:00:55,969
he won't care about my bugs so this is a

00:00:53,070 --> 00:00:59,460
story about how we solve good problems

00:00:55,969 --> 00:01:03,180
and avoid working on stuff that's boring

00:00:59,460 --> 00:01:05,159
it's a story about focusing on the stuff

00:01:03,180 --> 00:01:07,229
that actually is worth focusing on

00:01:05,159 --> 00:01:09,600
that's fun and makes us go fast and

00:01:07,229 --> 00:01:12,180
avoiding the stuff at the bottom of the

00:01:09,600 --> 00:01:15,150
iceberg that's boring and that I wish

00:01:12,180 --> 00:01:17,869
we'd stop doing it's in three parts

00:01:15,150 --> 00:01:19,560
first we're going to talk about the goal

00:01:17,869 --> 00:01:21,030
then we're going to talk about the

00:01:19,560 --> 00:01:22,500
problem that stopping us achieving the

00:01:21,030 --> 00:01:24,119
goal and then we're going to talk about

00:01:22,500 --> 00:01:27,500
the solution to the goal all in the

00:01:24,119 --> 00:01:30,270
words of the Buddha suffering exists

00:01:27,500 --> 00:01:34,079
this is the nature of suffering this is

00:01:30,270 --> 00:01:35,939
the path to end suffering and if you're

00:01:34,079 --> 00:01:41,130
wondering why the Buddha was talking

00:01:35,939 --> 00:01:42,450
about containers then you haven't been

00:01:41,130 --> 00:01:47,369
part of the container conversation as

00:01:42,450 --> 00:01:49,140
long as I have so suffering exists what

00:01:47,369 --> 00:01:50,549
is suffering what what is a good problem

00:01:49,140 --> 00:01:51,899
right what's the goal here what are we

00:01:50,549 --> 00:01:53,369
actually trying to achieve his picture

00:01:51,899 --> 00:01:55,560
of a goal what are you trying to solve

00:01:53,369 --> 00:01:57,509
what do we actually want to do with

00:01:55,560 --> 00:01:59,159
these systems you want to I mean this is

00:01:57,509 --> 00:02:01,020
standard but we want to iterate fast

00:01:59,159 --> 00:02:02,880
when a bill good stuff spend time

00:02:01,020 --> 00:02:05,490
building good stuff we do want to keep

00:02:02,880 --> 00:02:08,580
it running we don't just want to push it

00:02:05,490 --> 00:02:10,709
and forget it and we want to do it cheap

00:02:08,580 --> 00:02:12,660
this shouldn't be controversial but it

00:02:10,709 --> 00:02:13,530
seems to me that it's almost becoming

00:02:12,660 --> 00:02:15,690
controversial

00:02:13,530 --> 00:02:17,819
because we seem to keep building systems

00:02:15,690 --> 00:02:20,130
that don't focus on these four things

00:02:17,819 --> 00:02:22,560
it's rating fast spending most of our

00:02:20,130 --> 00:02:27,870
time building good stuff keeping it

00:02:22,560 --> 00:02:29,760
running and doing it cheaply so I didn't

00:02:27,870 --> 00:02:31,620
crowd solve this wasn't this what cloud

00:02:29,760 --> 00:02:35,610
salt it was gonna let us work on this

00:02:31,620 --> 00:02:39,660
stuff well in order to answer that we

00:02:35,610 --> 00:02:43,260
have to go back in time to 2005 which

00:02:39,660 --> 00:02:45,090
apparently is a long time ago now and if

00:02:43,260 --> 00:02:47,250
you remember what we used to do actually

00:02:45,090 --> 00:02:49,320
at the start of cloud it was pretty

00:02:47,250 --> 00:02:51,750
terrible remember when you had an a

00:02:49,320 --> 00:02:54,480
great idea for a project and you see

00:02:51,750 --> 00:02:56,340
your provision a server installed an OS

00:02:54,480 --> 00:02:57,959
after spending a lot of time worrying

00:02:56,340 --> 00:02:58,680
about an OS because that was very

00:02:57,959 --> 00:03:01,380
important

00:02:58,680 --> 00:03:04,019
are you actually really getting the CD

00:03:01,380 --> 00:03:06,000
out and like putting it in to the server

00:03:04,019 --> 00:03:07,350
right and installing it it would take an

00:03:06,000 --> 00:03:10,260
hour and you'd do it for all of the

00:03:07,350 --> 00:03:13,910
servers in your data center we actually

00:03:10,260 --> 00:03:16,230
used to do that in saw some middleware

00:03:13,910 --> 00:03:19,200
right for a short time I was a

00:03:16,230 --> 00:03:21,600
consultant for WebSphere portal helping

00:03:19,200 --> 00:03:23,220
people install portal because you use

00:03:21,600 --> 00:03:25,890
the need consultants to install

00:03:23,220 --> 00:03:26,820
middleware for you that was the thing

00:03:25,890 --> 00:03:28,950
that you had to do when you were

00:03:26,820 --> 00:03:32,160
starting a project obviously you do all

00:03:28,950 --> 00:03:33,420
that again for your dr environment that

00:03:32,160 --> 00:03:37,400
would live somewhere else and be turned

00:03:33,420 --> 00:03:39,570
off you would install your jar file

00:03:37,400 --> 00:03:41,280
which I call a ghetto container

00:03:39,570 --> 00:03:43,410
containers before they were containers

00:03:41,280 --> 00:03:46,350
oh my god we can ship it around it runs

00:03:43,410 --> 00:03:47,609
everywhere you'd figure out clustering

00:03:46,350 --> 00:03:50,459
which again you would probably need a

00:03:47,609 --> 00:03:53,489
consultant like me in order to do so I

00:03:50,459 --> 00:03:55,709
was doing well obviously then it

00:03:53,489 --> 00:03:57,540
wouldn't work something would blow up

00:03:55,709 --> 00:04:00,239
and you would realize as everyone has

00:03:57,540 --> 00:04:02,400
realized that your PR didn't work so

00:04:00,239 --> 00:04:04,079
you'd start again but even when you've

00:04:02,400 --> 00:04:05,400
done all of that basic stuff even when

00:04:04,079 --> 00:04:06,810
you've got it running you still had to

00:04:05,400 --> 00:04:08,280
keep stuff patched and scale it and

00:04:06,810 --> 00:04:09,989
secure it and monitor it and you know

00:04:08,280 --> 00:04:14,880
all this stuff right all the stuff that

00:04:09,989 --> 00:04:17,340
we have to do so in 2005 we had this

00:04:14,880 --> 00:04:19,799
brilliant idea called cloud will be

00:04:17,340 --> 00:04:27,050
played by spider-man in the rest of this

00:04:19,799 --> 00:04:27,050
presentation a Google cloud but I mean

00:04:27,060 --> 00:04:31,680
and the clown said you know what forget

00:04:29,940 --> 00:04:34,080
about that provisioning service and

00:04:31,680 --> 00:04:35,550
forget about that installing oasis you

00:04:34,080 --> 00:04:38,760
don't have to do that anymore and

00:04:35,550 --> 00:04:40,200
actually that works right I can't

00:04:38,760 --> 00:04:44,220
remember the last time I had to put a CD

00:04:40,200 --> 00:04:45,030
in on a server and wait that's pretty

00:04:44,220 --> 00:04:46,710
great

00:04:45,030 --> 00:04:48,180
don't even read these myths all middle

00:04:46,710 --> 00:04:51,270
way if you do cloud right at the moment

00:04:48,180 --> 00:04:53,160
that's mostly soft but we did still have

00:04:51,270 --> 00:04:56,520
quite a lot of the other stuff that we

00:04:53,160 --> 00:04:58,290
hadn't quite solved fine but let's just

00:04:56,520 --> 00:05:01,169
take a moment and say you know what that

00:04:58,290 --> 00:05:02,850
cloud stuff is pretty good why was it

00:05:01,169 --> 00:05:04,650
good why was that class of good why do

00:05:02,850 --> 00:05:05,490
they actually work why did we all like

00:05:04,650 --> 00:05:08,010
it

00:05:05,490 --> 00:05:09,690
because it let is its rate faster we

00:05:08,010 --> 00:05:11,250
were we weren't spending time waiting

00:05:09,690 --> 00:05:13,470
for machines and installing operating

00:05:11,250 --> 00:05:15,720
systems we were spending more time

00:05:13,470 --> 00:05:18,479
actually working on stuff that delivered

00:05:15,720 --> 00:05:21,540
value I don't think many people are

00:05:18,479 --> 00:05:24,810
really worried these days about the lack

00:05:21,540 --> 00:05:28,110
of flexibility in putting CDs into

00:05:24,810 --> 00:05:29,970
machines right that's quite good and

00:05:28,110 --> 00:05:32,010
actually it was better

00:05:29,970 --> 00:05:33,720
it kept running better because we didn't

00:05:32,010 --> 00:05:35,850
have these different dr environments or

00:05:33,720 --> 00:05:37,680
if we did was much easier to create them

00:05:35,850 --> 00:05:39,750
and replicate them and actually turns

00:05:37,680 --> 00:05:41,729
out people like to rent stuff the

00:05:39,750 --> 00:05:45,740
different economic model was a big part

00:05:41,729 --> 00:05:48,479
of it yeh so the obvious question is

00:05:45,740 --> 00:05:50,970
what about the rest of this stuff what

00:05:48,479 --> 00:05:52,169
do we do about all this stuff and since

00:05:50,970 --> 00:05:54,240
you're at a Cloud Foundry called

00:05:52,169 --> 00:05:57,690
conference I hope you know the answer

00:05:54,240 --> 00:06:00,510
boom CF push CF oh she's great

00:05:57,690 --> 00:06:02,880
it's my code run of the crowd I can't

00:06:00,510 --> 00:06:05,880
not put the the high Q in there

00:06:02,880 --> 00:06:07,050
somewhere and it's all about this stuff

00:06:05,880 --> 00:06:08,760
right it's all about iterating fast

00:06:07,050 --> 00:06:10,919
they're building good stuff keeping it

00:06:08,760 --> 00:06:14,310
running and actually being cheap right

00:06:10,919 --> 00:06:15,390
it's multi-tenant this is great so what

00:06:14,310 --> 00:06:17,910
happened then

00:06:15,390 --> 00:06:20,060
right why didn't CF push end the

00:06:17,910 --> 00:06:22,830
conversation and that was the end of the

00:06:20,060 --> 00:06:25,770
story why don't I leave the stage now

00:06:22,830 --> 00:06:28,200
don't say that loudly but why isn't that

00:06:25,770 --> 00:06:30,600
the end of the story

00:06:28,200 --> 00:06:33,479
sorry why isn't it firstly why did that

00:06:30,600 --> 00:06:35,430
work state is bad right how does CF work

00:06:33,479 --> 00:06:36,599
this is important to say why did see if

00:06:35,430 --> 00:06:38,789
work how did it solve the problems

00:06:36,599 --> 00:06:40,530
because state is bad a database

00:06:38,789 --> 00:06:40,680
especially is all this stuff service and

00:06:40,530 --> 00:06:42,270
all

00:06:40,680 --> 00:06:45,030
frustration and what it does is just

00:06:42,270 --> 00:06:47,009
hides it behind an abstraction right and

00:06:45,030 --> 00:06:49,110
the reason that's good is then all your

00:06:47,009 --> 00:06:50,520
apps live in the good place here right

00:06:49,110 --> 00:06:50,970
like they don't have to worry about that

00:06:50,520 --> 00:06:53,820
stuff

00:06:50,970 --> 00:06:57,210
this is actually amazing right this is

00:06:53,820 --> 00:06:59,539
incredibly good why is it good because

00:06:57,210 --> 00:07:02,820
state is the magic trick that turns

00:06:59,539 --> 00:07:04,320
cattle into pets right you want cattle

00:07:02,820 --> 00:07:06,840
you want a herd you want everything to

00:07:04,320 --> 00:07:10,669
be easy to manage and as soon as you add

00:07:06,840 --> 00:07:13,169
states of stuff it's a pet it's hard

00:07:10,669 --> 00:07:15,389
databases are hard you have to back them

00:07:13,169 --> 00:07:18,240
up and maintain them and apps aren't

00:07:15,389 --> 00:07:20,039
hard apps are great so keep these two

00:07:18,240 --> 00:07:21,349
things separate keep your pets in one

00:07:20,039 --> 00:07:23,639
place keep the cattle in the other place

00:07:21,349 --> 00:07:27,030
have a status a fraction and everything

00:07:23,639 --> 00:07:28,250
was great containers right that's why

00:07:27,030 --> 00:07:30,599
it's not the end of the conversation

00:07:28,250 --> 00:07:32,130
because suddenly containers came along

00:07:30,599 --> 00:07:35,910
people we won't contain you to an

00:07:32,130 --> 00:07:37,199
orchestration so ok we have to ask what

00:07:35,910 --> 00:07:39,630
are these container things

00:07:37,199 --> 00:07:42,330
what's this container stuff there

00:07:39,630 --> 00:07:45,419
suddenly changed everyone's mind about

00:07:42,330 --> 00:07:47,880
whether the problem was solved so we

00:07:45,419 --> 00:07:50,460
have to go back to the past some people

00:07:47,880 --> 00:07:52,800
have seen these flies before they're

00:07:50,460 --> 00:07:54,599
different so we have to do the best pass

00:07:52,800 --> 00:07:57,449
how did this start there with jar files

00:07:54,599 --> 00:07:59,639
write once run anywhere didn't quite

00:07:57,449 --> 00:08:00,870
work because we needed isolation we

00:07:59,639 --> 00:08:04,289
wanted stuff that work for multiple

00:08:00,870 --> 00:08:06,090
languages where you weren't subject so

00:08:04,289 --> 00:08:08,610
dependencies and stuff so you're like ok

00:08:06,090 --> 00:08:10,919
Hale Innes why don't you give us some of

00:08:08,610 --> 00:08:14,310
this namespace stuff see group stuff

00:08:10,919 --> 00:08:16,530
Lunas was like ok by the way I know that

00:08:14,310 --> 00:08:17,970
this wasn't actually Lin us it was some

00:08:16,530 --> 00:08:20,639
other smart people then this is a

00:08:17,970 --> 00:08:23,190
metaphor but Linda's was metaphorically

00:08:20,639 --> 00:08:25,650
like here you go right here we're the

00:08:23,190 --> 00:08:28,280
namespaces stuff so you now had this

00:08:25,650 --> 00:08:30,419
isolation primitive in the Linux kernel

00:08:28,280 --> 00:08:32,849
it's like here's your C group stuff so

00:08:30,419 --> 00:08:34,860
you can now share resources between your

00:08:32,849 --> 00:08:36,659
containers they don't keep taking as

00:08:34,860 --> 00:08:38,760
much resources as other things and it's

00:08:36,659 --> 00:08:41,039
gonna be managed nicely and we built

00:08:38,760 --> 00:08:42,899
this worden thing and then this garden

00:08:41,039 --> 00:08:44,520
thing and then we had this CF push

00:08:42,899 --> 00:08:46,079
abstraction and he'd push code and we

00:08:44,520 --> 00:08:50,130
create these Linux containers and

00:08:46,079 --> 00:08:52,050
everything was good since it wasn't good

00:08:50,130 --> 00:08:54,150
right because containers right that's

00:08:52,050 --> 00:08:57,360
containers we had containers but what

00:08:54,150 --> 00:08:58,560
happens whale docker right there was

00:08:57,360 --> 00:09:07,290
this new thing called docker a

00:08:58,560 --> 00:09:10,170
disturbance in the force so what did

00:09:07,290 --> 00:09:13,110
docker do that was different right what

00:09:10,170 --> 00:09:14,460
was this new thing above this Linux

00:09:13,110 --> 00:09:16,800
container stuff which actually already

00:09:14,460 --> 00:09:18,990
had it actually did two things which I

00:09:16,800 --> 00:09:21,030
think are really important it's the

00:09:18,990 --> 00:09:23,040
first one and this is this containers

00:09:21,030 --> 00:09:25,500
idea that became like containers as

00:09:23,040 --> 00:09:27,600
opposed to Linux containers was

00:09:25,500 --> 00:09:29,100
encapsulation there's this idea that we

00:09:27,600 --> 00:09:31,380
could take the whole OS put it in a box

00:09:29,100 --> 00:09:34,140
and ship it around that's not something

00:09:31,380 --> 00:09:36,980
that we had in that CF push model and

00:09:34,140 --> 00:09:39,480
the second thing of course is marketing

00:09:36,980 --> 00:09:41,910
the second thing of course was user

00:09:39,480 --> 00:09:45,450
experience it was they created this

00:09:41,910 --> 00:09:46,890
amazing UX around containers whoops it

00:09:45,450 --> 00:09:49,470
creates this amazing UX around

00:09:46,890 --> 00:09:50,910
containers that made it so easy to work

00:09:49,470 --> 00:09:52,140
with containers there people out you

00:09:50,910 --> 00:09:53,760
know I can manage these containers

00:09:52,140 --> 00:09:56,610
myself I can deal with these containers

00:09:53,760 --> 00:09:58,710
myself and a lot of people wanted to do

00:09:56,610 --> 00:10:01,260
that this was this really cool thing I

00:09:58,710 --> 00:10:03,000
could use these containers why do I need

00:10:01,260 --> 00:10:05,930
to push code I can just use containers I

00:10:03,000 --> 00:10:09,450
think we got a bit confused about that

00:10:05,930 --> 00:10:13,140
so quite a lot of people really wanted

00:10:09,450 --> 00:10:15,440
containers and quite a few of other

00:10:13,140 --> 00:10:17,580
people were like can't we just push code

00:10:15,440 --> 00:10:20,340
this was the conversation for lower

00:10:17,580 --> 00:10:21,750
right like we in the CF community in the

00:10:20,340 --> 00:10:24,300
past community well I just let me push

00:10:21,750 --> 00:10:26,220
some code it's fine I don't want to deal

00:10:24,300 --> 00:10:29,070
with all that container stuff contain

00:10:26,220 --> 00:10:30,840
the people like no give me containers we

00:10:29,070 --> 00:10:32,880
were like you sure you don't want to

00:10:30,840 --> 00:10:34,590
just push some code it's really great

00:10:32,880 --> 00:10:39,630
and they were like containers but louder

00:10:34,590 --> 00:10:42,360
they're much louder oh we like push code

00:10:39,630 --> 00:10:44,130
so we compromised and we said well you

00:10:42,360 --> 00:10:46,320
push containers we'll push code nothing

00:10:44,130 --> 00:10:47,940
will be fine and of course we all live

00:10:46,320 --> 00:10:51,900
happily ever after right that was the

00:10:47,940 --> 00:10:53,670
end of the story then except it wasn't

00:10:51,900 --> 00:10:57,320
quite the end of the soy does anyone

00:10:53,670 --> 00:11:04,250
know what came next in the story

00:10:57,320 --> 00:11:04,250
serverless just push code it's great

00:11:09,640 --> 00:11:16,730
hmm so what's going on right what what

00:11:15,740 --> 00:11:18,320
there's something wrong and there's

00:11:16,730 --> 00:11:20,120
something going on I think we've got

00:11:18,320 --> 00:11:23,390
confused about what the difference is

00:11:20,120 --> 00:11:25,100
really code and containers I think it's

00:11:23,390 --> 00:11:27,950
something else and of course that's

00:11:25,100 --> 00:11:30,920
something else is States States was

00:11:27,950 --> 00:11:32,500
where we started with all of this states

00:11:30,920 --> 00:11:35,000
is bad

00:11:32,500 --> 00:11:37,070
why is stay bad let's go back and ask

00:11:35,000 --> 00:11:39,320
why was that it's so important to get

00:11:37,070 --> 00:11:41,390
rid of states why was that such a big

00:11:39,320 --> 00:11:43,579
part of what we were doing and frankly a

00:11:41,390 --> 00:11:45,950
bigger part than just code versus

00:11:43,579 --> 00:11:47,750
containers it's because of the state for

00:11:45,950 --> 00:11:49,279
late oh no credit wall Martin I was

00:11:47,750 --> 00:11:50,959
supposed to write credit will Martin on

00:11:49,279 --> 00:11:56,120
this like since that he came up with

00:11:50,959 --> 00:11:58,040
that stupid word stupid phrase such a

00:11:56,120 --> 00:12:00,709
coincidence that they turned out to be

00:11:58,040 --> 00:12:05,810
eight problems with states just after we

00:12:00,709 --> 00:12:07,130
came up with that funny pun so the

00:12:05,810 --> 00:12:09,260
problem we face is as soon as you add

00:12:07,130 --> 00:12:11,990
state stuff gets hard to scale and

00:12:09,260 --> 00:12:13,579
upgrades hard to recover from problems

00:12:11,990 --> 00:12:15,740
you can't just throw one away and create

00:12:13,579 --> 00:12:18,410
a new one you can't just add one on the

00:12:15,740 --> 00:12:20,290
end you it's hard to a/b test and roll

00:12:18,410 --> 00:12:23,089
back and all of these things by the way

00:12:20,290 --> 00:12:24,829
just a little aside think about this

00:12:23,089 --> 00:12:28,070
thing again right think that the apps

00:12:24,829 --> 00:12:31,459
and the safe will staff and everything

00:12:28,070 --> 00:12:32,959
was good I think we'll see one at every

00:12:31,459 --> 00:12:34,550
time you see one of these docker

00:12:32,959 --> 00:12:36,230
kubernetes demos or these container

00:12:34,550 --> 00:12:37,610
demos you see this and this is the

00:12:36,230 --> 00:12:39,949
simplest one I can find I'm not picking

00:12:37,610 --> 00:12:41,510
on this it's a relatively simple what's

00:12:39,949 --> 00:12:44,630
wrong with this what's wrong with this

00:12:41,510 --> 00:12:48,260
image anyone what's wrong with this

00:12:44,630 --> 00:12:52,160
image it's your code

00:12:48,260 --> 00:12:57,440
no d'mongo he's pushing no you don't

00:12:52,160 --> 00:12:59,690
just push to do no you know don't

00:12:57,440 --> 00:13:01,910
services are for pushing right services

00:12:59,690 --> 00:13:04,190
suffer in Congress for pushing it

00:13:01,910 --> 00:13:05,810
services are for binding you don't want

00:13:04,190 --> 00:13:09,190
every single app developer pushing a

00:13:05,810 --> 00:13:11,839
MongoDB that's they have to worry about

00:13:09,190 --> 00:13:14,839
backing that up about monitoring that

00:13:11,839 --> 00:13:17,020
they just wanna push code friends don't

00:13:14,839 --> 00:13:17,020
let friends

00:13:21,259 --> 00:13:28,439
why because the stateful a once you do

00:13:25,350 --> 00:13:30,119
this stuff stuff gets hard to scale and

00:13:28,439 --> 00:13:33,540
you don't want to be paying that penalty

00:13:30,119 --> 00:13:36,269
for every single one of your apps what

00:13:33,540 --> 00:13:40,350
is cloud for right it's about iterating

00:13:36,269 --> 00:13:42,029
fast it's about delivering value where

00:13:40,350 --> 00:13:43,739
do you need to do that I would argue

00:13:42,029 --> 00:13:45,779
it's probably your application it's

00:13:43,739 --> 00:13:48,509
probably your code it's unlikely to be

00:13:45,779 --> 00:13:49,769
already right you don't need to iterate

00:13:48,509 --> 00:13:52,769
your Redis quickly all right this is a

00:13:49,769 --> 00:13:55,559
pretty solved problem well you need the

00:13:52,769 --> 00:14:02,040
benefits of this stuff is your code so

00:13:55,559 --> 00:14:02,730
that was a nice model stateless is

00:14:02,040 --> 00:14:05,279
greatness

00:14:02,730 --> 00:14:07,889
why is stay good it's for the exact

00:14:05,279 --> 00:14:09,929
opposite reasons once you don't have

00:14:07,889 --> 00:14:11,699
States it's really easy to scale stuff

00:14:09,929 --> 00:14:14,220
and upgrade stuff and patch stuff and

00:14:11,699 --> 00:14:15,720
roll it back and do a/b testing it's

00:14:14,220 --> 00:14:17,489
really easy when it blows up to know

00:14:15,720 --> 00:14:20,819
what's valid in terms of getting it done

00:14:17,489 --> 00:14:22,559
blown up you know what things you can do

00:14:20,819 --> 00:14:24,480
you know you can throw any instance away

00:14:22,559 --> 00:14:27,869
and that's fine that's a really

00:14:24,480 --> 00:14:29,790
important property so there are lots of

00:14:27,869 --> 00:14:31,410
systems that take advantage of this

00:14:29,790 --> 00:14:32,910
server list has suddenly got taking

00:14:31,410 --> 00:14:36,209
advantage of stateless functions paper

00:14:32,910 --> 00:14:39,139
use auto scaling oh what's CF push it's

00:14:36,209 --> 00:14:41,639
theta saps pay by memory auto scaling

00:14:39,139 --> 00:14:44,790
the difference isn't code in containers

00:14:41,639 --> 00:14:46,619
the difference is statelessness and it's

00:14:44,790 --> 00:14:48,329
not the only thing we're mat produce had

00:14:46,619 --> 00:14:50,160
the same trick map produces away a pro

00:14:48,329 --> 00:14:52,199
seeing huge amounts of data without

00:14:50,160 --> 00:14:55,049
reinventing how to do data parallel

00:14:52,199 --> 00:14:55,649
pipelines all the time how stateless map

00:14:55,049 --> 00:14:57,869
functions

00:14:55,649 --> 00:14:58,860
stateless reduce functions don't push a

00:14:57,869 --> 00:15:01,470
Hadoop cluster

00:14:58,860 --> 00:15:05,220
give me your map and your word reduce

00:15:01,470 --> 00:15:08,819
code so that way interesting problems

00:15:05,220 --> 00:15:11,389
yes all that hard stuff you can let

00:15:08,819 --> 00:15:13,980
something else take care of fun and toil

00:15:11,389 --> 00:15:17,249
stateless and stateful that's the trick

00:15:13,980 --> 00:15:19,399
and the good place in the bad place we

00:15:17,249 --> 00:15:22,470
can live in the good place most the time

00:15:19,399 --> 00:15:25,980
if we make the bad place someone else's

00:15:22,470 --> 00:15:28,169
problem so the problem is state state is

00:15:25,980 --> 00:15:30,180
bad containers and kubernetes are

00:15:28,169 --> 00:15:31,830
fantastic these are fantastic

00:15:30,180 --> 00:15:34,649
ways of dealing with those stateful

00:15:31,830 --> 00:15:35,670
problems but actually I think keeping

00:15:34,649 --> 00:15:38,190
the good place and the bad place

00:15:35,670 --> 00:15:42,480
separate is quite a good idea because a

00:15:38,190 --> 00:15:44,580
lot of what you do is just cold so good

00:15:42,480 --> 00:15:45,750
solutions comparisons I'm just going to

00:15:44,580 --> 00:15:46,890
talk quickly but Claire find your cube

00:15:45,750 --> 00:15:48,500
now these cloud foundry and serverless

00:15:46,890 --> 00:15:50,760
and like how how how these will relate

00:15:48,500 --> 00:15:51,930
so I think one thing to really

00:15:50,760 --> 00:15:53,310
understand is cloud foundry still

00:15:51,930 --> 00:15:54,660
containers her phones has been

00:15:53,310 --> 00:15:58,200
containers all along if you want to do

00:15:54,660 --> 00:15:59,250
CF push - oh you can see if local now

00:15:58,200 --> 00:16:01,980
there's really great tools for

00:15:59,250 --> 00:16:04,290
interoperating with that world it's not

00:16:01,980 --> 00:16:05,880
about whether you use code or whether

00:16:04,290 --> 00:16:07,709
you use bill Pat's whether you use

00:16:05,880 --> 00:16:09,450
containers it's about whether it's

00:16:07,709 --> 00:16:10,550
stateless or not that's the big

00:16:09,450 --> 00:16:13,470
difference

00:16:10,550 --> 00:16:15,779
kubernetes is fantastic for the stateful

00:16:13,470 --> 00:16:19,380
stuff and it's awesome we now have tools

00:16:15,779 --> 00:16:21,240
for integrating these together but it's

00:16:19,380 --> 00:16:24,360
not about code it's not about code is

00:16:21,240 --> 00:16:30,240
about state come to our talk about cube

00:16:24,360 --> 00:16:31,920
in the past at 12:05 earlier today I was

00:16:30,240 --> 00:16:35,790
thinking all day it's about day that but

00:16:31,920 --> 00:16:37,500
now it was funny joke serverless they're

00:16:35,790 --> 00:16:39,180
actually both stateless it's really just

00:16:37,500 --> 00:16:41,310
about functions versus apps right and

00:16:39,180 --> 00:16:42,779
they both pay your code there are some

00:16:41,310 --> 00:16:44,490
other differences we're serving us I

00:16:42,779 --> 00:16:46,620
think are really interesting but

00:16:44,490 --> 00:16:48,870
fundamentally these I think of things

00:16:46,620 --> 00:16:52,860
that let you go faster it's really

00:16:48,870 --> 00:16:54,870
faster and pay a bit less so that's how

00:16:52,860 --> 00:16:58,470
you choose between them you choose by

00:16:54,870 --> 00:17:00,930
which one fits all use case so that's

00:16:58,470 --> 00:17:02,850
that's the talk suffering exists this is

00:17:00,930 --> 00:17:06,150
the nature of suffering that was a path

00:17:02,850 --> 00:17:07,980
to end suffering hopefully that lets you

00:17:06,150 --> 00:17:11,280
spend more time on fun and less time on

00:17:07,980 --> 00:17:14,520
toil so you can have the good problems

00:17:11,280 --> 00:17:16,860
user experience performance analytics AI

00:17:14,520 --> 00:17:19,140
any of these nice things and no

00:17:16,860 --> 00:17:21,209
orchestration and containers and high

00:17:19,140 --> 00:17:23,699
availability and backup and recovery and

00:17:21,209 --> 00:17:25,679
and all that stuff which if we're still

00:17:23,699 --> 00:17:28,439
worrying about in five years as an

00:17:25,679 --> 00:17:32,460
average developer I think will be really

00:17:28,439 --> 00:17:34,520
sad so have 99 good problems but

00:17:32,460 --> 00:17:36,510
hopefully don't let containers be one

00:17:34,520 --> 00:17:41,990
thank you very much

00:17:36,510 --> 00:17:41,990

YouTube URL: https://www.youtube.com/watch?v=TDlvJz8zR_M


