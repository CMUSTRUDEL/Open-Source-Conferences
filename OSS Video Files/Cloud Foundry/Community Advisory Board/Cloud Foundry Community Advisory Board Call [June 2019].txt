Title: Cloud Foundry Community Advisory Board Call [June 2019]
Publication date: 2019-06-25
Playlist: Community Advisory Board
Description: 
	
Captions: 
	00:00:01,020 --> 00:00:05,730
we have a short agenda because the

00:00:03,570 --> 00:00:08,670
Comcast team wants to push their talk

00:00:05,730 --> 00:00:11,730
for next week so we really just have one

00:00:08,670 --> 00:00:13,860
talk and I guess actually you can start

00:00:11,730 --> 00:00:17,760
recording are we doing are we doing

00:00:13,860 --> 00:00:19,910
weekly cab cocktail or do they not next

00:00:17,760 --> 00:00:22,380
week sorry next month

00:00:19,910 --> 00:00:26,730
yeah

00:00:22,380 --> 00:00:28,890
yeah I was distracted so what we'll do

00:00:26,730 --> 00:00:31,590
is the typical things will get an update

00:00:28,890 --> 00:00:34,590
and then from the different PMC's and

00:00:31,590 --> 00:00:38,120
also from chip and then we'll give dr.

00:00:34,590 --> 00:00:40,980
Nick Williams all the time in the world

00:00:38,120 --> 00:00:43,440
he's been playing with sidebars and I

00:00:40,980 --> 00:00:45,350
guess bill packs or bill packs with site

00:00:43,440 --> 00:00:51,860
cards I don't know something like that

00:00:45,350 --> 00:01:07,470
should be fun as you know what

00:00:51,860 --> 00:01:09,150
educational so I mean I guess everybody

00:01:07,470 --> 00:01:10,590
can go and read it but chip do you want

00:01:09,150 --> 00:01:15,780
to highlight anything or tell us

00:01:10,590 --> 00:01:17,520
something new or see yeah yeah hey I'll

00:01:15,780 --> 00:01:18,810
just highlight a couple I like you said

00:01:17,520 --> 00:01:22,680
you know there's a bunch of stuff in the

00:01:18,810 --> 00:01:26,100
agenda to two things that are worth

00:01:22,680 --> 00:01:30,270
highlighting you summit schedules going

00:01:26,100 --> 00:01:33,030
live tomorrow which is great that should

00:01:30,270 --> 00:01:36,990
be a lot of fun and the other thing that

00:01:33,030 --> 00:01:39,360
all I'll highlight is that there's the

00:01:36,990 --> 00:01:41,850
contributor summit that we're having

00:01:39,360 --> 00:01:45,509
tied to the larger CF summit that's

00:01:41,850 --> 00:01:47,810
going to be on September 10th starting

00:01:45,509 --> 00:01:50,100
at 9:00 in the morning right so not

00:01:47,810 --> 00:01:52,170
don't arrive if you plan to come to the

00:01:50,100 --> 00:01:54,180
contributor summit don't arrive on the

00:01:52,170 --> 00:01:54,479
10th in the afternoon visual it missed

00:01:54,180 --> 00:01:57,750
it

00:01:54,479 --> 00:02:02,520
we did that as an experiment in the

00:01:57,750 --> 00:02:03,899
North America event back in April it

00:02:02,520 --> 00:02:06,060
seemed to go fairly well but we also

00:02:03,899 --> 00:02:08,280
learned a lot and we're gonna iterate a

00:02:06,060 --> 00:02:12,400
bunch on the format thanks to Yui and

00:02:08,280 --> 00:02:14,560
Eric and Marco and Matt we spent

00:02:12,400 --> 00:02:17,409
some time thinking about how to make

00:02:14,560 --> 00:02:20,560
that more effective and it's definitely

00:02:17,409 --> 00:02:22,659
worth your time if you're contributing

00:02:20,560 --> 00:02:24,840
to any of the projects or if you want to

00:02:22,659 --> 00:02:28,349
contribute it to any of the projects so

00:02:24,840 --> 00:02:31,209
take a look at the CF summit Europe

00:02:28,349 --> 00:02:37,930
schedule and you'll see it there I think

00:02:31,209 --> 00:02:39,400
that's it all right Thank You chip sews

00:02:37,930 --> 00:02:42,159
we're not added a couple more things

00:02:39,400 --> 00:02:46,450
that I think maybe I want to highlight

00:02:42,159 --> 00:02:48,909
she mentions that now Abby has a ma for

00:02:46,450 --> 00:02:53,560
people if you're not part of the cool

00:02:48,909 --> 00:02:55,420
new kids ma anything people who's been

00:02:53,560 --> 00:02:59,829
doing it forever but I guess Abby is

00:02:55,420 --> 00:03:02,439
doing it now and yeah yeah so let me let

00:02:59,829 --> 00:03:04,269
me give some context on that one of the

00:03:02,439 --> 00:03:08,220
one of the things that we've recognized

00:03:04,269 --> 00:03:10,239
is that the the CFS membership right the

00:03:08,220 --> 00:03:14,220
individuals that represent the companies

00:03:10,239 --> 00:03:18,000
that provide a lot of the funding maybe

00:03:14,220 --> 00:03:21,639
don't necessarily understand for example

00:03:18,000 --> 00:03:24,400
know that the events run generally at a

00:03:21,639 --> 00:03:26,290
small loss or breakeven right so what we

00:03:24,400 --> 00:03:30,459
wanted to do was to make sure that

00:03:26,290 --> 00:03:33,129
there's a little bit more conversation

00:03:30,459 --> 00:03:36,190
about the reality of the the

00:03:33,129 --> 00:03:38,169
organization and kind of feel how how

00:03:36,190 --> 00:03:41,260
things are working where things can

00:03:38,169 --> 00:03:45,239
improve so it's we've had two of them so

00:03:41,260 --> 00:03:48,310
far it's generally sent out to the

00:03:45,239 --> 00:03:51,099
official contacts at the various member

00:03:48,310 --> 00:03:53,079
companies but you know if you would like

00:03:51,099 --> 00:03:55,239
to join the next one you can reach out

00:03:53,079 --> 00:03:56,889
to Bri as noted there we'll make sure

00:03:55,239 --> 00:03:59,620
the year you're added to the list so you

00:03:56,889 --> 00:04:03,190
can see it you know join in and be part

00:03:59,620 --> 00:04:05,129
of that conversation so it's less about

00:04:03,190 --> 00:04:09,940
the technology and it's more about the

00:04:05,129 --> 00:04:10,900
the cff organization itself and dr. max

00:04:09,940 --> 00:04:12,280
I think you were gonna hit some of these

00:04:10,900 --> 00:04:18,549
other ones too all I'll toss those out

00:04:12,280 --> 00:04:21,940
yeah dr. Nick inspired inspired us when

00:04:18,549 --> 00:04:26,020
he offered to provide a few awesome

00:04:21,940 --> 00:04:27,789
videos and we

00:04:26,020 --> 00:04:29,349
to have other videos like that published

00:04:27,789 --> 00:04:31,870
in the the Cloud Foundry YouTube

00:04:29,349 --> 00:04:33,789
accounts so it's a cool opportunity if

00:04:31,870 --> 00:04:36,940
you actually want to record a new

00:04:33,789 --> 00:04:40,569
feature that you've built or really I

00:04:36,940 --> 00:04:42,370
think a lot of the demos that are shown

00:04:40,569 --> 00:04:44,410
off an app call you know if there were

00:04:42,370 --> 00:04:45,400
if there tightened up and shortened they

00:04:44,410 --> 00:04:47,229
could become a pretty interesting

00:04:45,400 --> 00:04:50,139
informational video we'd love to have

00:04:47,229 --> 00:04:52,660
those as well so again BRE breeze your

00:04:50,139 --> 00:04:54,400
lady she's got a publishing guide pulled

00:04:52,660 --> 00:04:56,830
together for that and I would love to

00:04:54,400 --> 00:04:59,650
have loved to have more material up

00:04:56,830 --> 00:05:03,819
there so those are probably the two big

00:04:59,650 --> 00:05:06,909
new ones there all right Thank You chip

00:05:03,819 --> 00:05:13,030
perfect any questions for chip or for

00:05:06,909 --> 00:05:16,180
the foundation comment okay so I guess

00:05:13,030 --> 00:05:20,050
I'll remind everybody to register for

00:05:16,180 --> 00:05:23,889
this summit coming up contributor code

00:05:20,050 --> 00:05:28,180
is out and then I guess schedule will be

00:05:23,889 --> 00:05:30,729
out so join us and hey and the

00:05:28,180 --> 00:05:35,409
Netherlands yeah schedule out tomorrow

00:05:30,729 --> 00:05:38,810
yeah it starts very definitely day to

00:05:35,409 --> 00:05:41,899
remember so join divorce

00:05:38,810 --> 00:05:41,899
[Music]

00:05:50,820 --> 00:05:55,090
hey dr. max yeah thanks dis mention a

00:05:53,680 --> 00:05:57,880
few highlights from the past month or so

00:05:55,090 --> 00:05:59,830
within the run time GMC as usual we've

00:05:57,880 --> 00:06:02,169
had some CF deployment releases think

00:05:59,830 --> 00:06:05,050
our latest CF deployment was nine three

00:06:02,169 --> 00:06:07,690
oh and as mostly bumping the component

00:06:05,050 --> 00:06:08,979
releases for a new functionality but I

00:06:07,690 --> 00:06:11,560
think that's also fixed a few things

00:06:08,979 --> 00:06:13,479
around component metrics as Lara Gators

00:06:11,560 --> 00:06:16,120
been making some changes to the agent

00:06:13,479 --> 00:06:19,509
reporting structure there there's also

00:06:16,120 --> 00:06:21,520
been a recent CLI release 645 that's

00:06:19,509 --> 00:06:23,020
continuing to improve support for client

00:06:21,520 --> 00:06:25,539
credentials another mimics and

00:06:23,020 --> 00:06:29,169
improvements around how CFO auth token

00:06:25,539 --> 00:06:31,780
works related client credentials other

00:06:29,169 --> 00:06:35,010
things that have been ongoing the campi

00:06:31,780 --> 00:06:37,300
team is continuing to progress on

00:06:35,010 --> 00:06:38,860
supporting more features for site cards

00:06:37,300 --> 00:06:39,639
I know they've been working with the

00:06:38,860 --> 00:06:43,120
build packs

00:06:39,639 --> 00:06:45,400
team to develop a contract for how bill

00:06:43,120 --> 00:06:46,479
packs can supply sidecar information and

00:06:45,400 --> 00:06:48,520
have that get wired into Kathy

00:06:46,479 --> 00:06:50,500
automatically and then they've also been

00:06:48,520 --> 00:06:52,569
working with the Diego team to figure

00:06:50,500 --> 00:06:54,250
out how they want to structure more

00:06:52,569 --> 00:06:56,289
independent limits on the sidecar

00:06:54,250 --> 00:06:58,770
processes so like potentially being able

00:06:56,289 --> 00:07:02,050
to provide a different file system or

00:06:58,770 --> 00:07:04,569
more independent partition to memory

00:07:02,050 --> 00:07:07,270
limits for the process that's running is

00:07:04,569 --> 00:07:09,569
a sidecar some other things have been

00:07:07,270 --> 00:07:12,699
going on I know aggregator has been

00:07:09,569 --> 00:07:16,000
continually improving the some of the

00:07:12,699 --> 00:07:19,810
agent reporting wiring on the library

00:07:16,000 --> 00:07:23,529
agents so that they can support syslog

00:07:19,810 --> 00:07:29,439
drains and even more scalable way issues

00:07:23,529 --> 00:07:31,389
hey Josh would you mind meeting and also

00:07:29,439 --> 00:07:34,659
really to scale the ireenie team has

00:07:31,389 --> 00:07:37,210
been making some improvements to support

00:07:34,659 --> 00:07:38,650
reliability of rat registrations when

00:07:37,210 --> 00:07:39,849
they're running at moderate levels of

00:07:38,650 --> 00:07:41,050
scale they're finding some

00:07:39,849 --> 00:07:42,520
inefficiencies and had they were

00:07:41,050 --> 00:07:45,129
reporting this but I think those are

00:07:42,520 --> 00:07:47,169
just resolved now one other thing

00:07:45,129 --> 00:07:50,199
potentially to watch out for the bubble

00:07:47,169 --> 00:07:52,360
wash bootloader tool just had a major

00:07:50,199 --> 00:07:54,610
release with the breaking change again

00:07:52,360 --> 00:07:56,800
related to your load balancers on AWS I

00:07:54,610 --> 00:07:59,490
think they moved back to the classic

00:07:56,800 --> 00:08:06,169
elastic load balancers instead of the

00:07:59,490 --> 00:08:08,870
application ones so I think that's

00:08:06,169 --> 00:08:11,360
it's it for some highlights from the

00:08:08,870 --> 00:08:13,280
runtime PMC sweet what was that well

00:08:11,360 --> 00:08:15,289
what was wrong with the application load

00:08:13,280 --> 00:08:16,490
balances I don't really have a lot of

00:08:15,289 --> 00:08:17,590
the details I think there's some

00:08:16,490 --> 00:08:19,699
information in there release notes

00:08:17,590 --> 00:08:27,550
something about supporting migrations

00:08:19,699 --> 00:08:31,959
better okay any other question for Eric

00:08:27,550 --> 00:08:34,519
no ok so sorry I have a question you a

00:08:31,959 --> 00:08:35,839
notice then they release notes decided

00:08:34,519 --> 00:08:37,969
they don't want to do two-factor

00:08:35,839 --> 00:08:41,630
authentication anymore do you know

00:08:37,969 --> 00:08:44,690
anything about that the very short life

00:08:41,630 --> 00:08:50,959
two-factor I think that that may be

00:08:44,690 --> 00:08:54,380
related to UAA turning into more of an

00:08:50,959 --> 00:08:58,940
identity proxy to other systems and less

00:08:54,380 --> 00:09:00,740
as an identity store itself so they may

00:08:58,940 --> 00:09:03,560
be viewing that as fundamentally out of

00:09:00,740 --> 00:09:05,690
scope for UAE but probably child would

00:09:03,560 --> 00:09:22,970
be the one to contact about details for

00:09:05,690 --> 00:09:25,790
that ok ok cool all right so the boss

00:09:22,970 --> 00:09:28,459
team I guess Mukesh couldn't make it he

00:09:25,790 --> 00:09:30,440
has some emergency so I'm trying to get

00:09:28,459 --> 00:09:32,089
some highlights from them and then I'll

00:09:30,440 --> 00:09:35,870
read it so that means to skip over that

00:09:32,089 --> 00:09:39,230
and go to extensions so we really have

00:09:35,870 --> 00:09:41,480
kind of a set of graduating projects and

00:09:39,230 --> 00:09:45,500
I'll just mention at this time and then

00:09:41,480 --> 00:09:50,089
next time you know I guess just point to

00:09:45,500 --> 00:09:53,360
the release notes so autoscaler you know

00:09:50,089 --> 00:09:54,170
graduated so they have widdy's be 12.2 I

00:09:53,360 --> 00:09:56,720
think it's just a maintenance

00:09:54,170 --> 00:09:58,940
maintenance release dough pack stuff

00:09:56,720 --> 00:10:04,370
graduated and now it's the packs for i/o

00:09:58,940 --> 00:10:08,600
so you need to look at that I know that

00:10:04,370 --> 00:10:12,440
Steven the vine give couple talks both

00:10:08,600 --> 00:10:17,060
at CF summit and also in Barcelona for

00:10:12,440 --> 00:10:19,790
cube con where he kind of went over some

00:10:17,060 --> 00:10:21,350
of the latest stuff going on and

00:10:19,790 --> 00:10:23,509
in bill talks at i/o so if you're

00:10:21,350 --> 00:10:27,230
interested in that definitely it might

00:10:23,509 --> 00:10:30,230
be a good good set of talk to Luka and

00:10:27,230 --> 00:10:32,919
then the Stratus they made a request for

00:10:30,230 --> 00:10:35,540
graduation so that probably will happen

00:10:32,919 --> 00:10:38,600
soon unless people object but I doubt

00:10:35,540 --> 00:10:41,929
there's gonna be any issue there but I

00:10:38,600 --> 00:10:45,139
did ask Neil and the team to present at

00:10:41,929 --> 00:10:47,749
the next cab and they've agreed and they

00:10:45,139 --> 00:10:50,509
showed me what we have really worth it

00:10:47,749 --> 00:10:52,549
because I want to deal too much at that

00:10:50,509 --> 00:10:56,869
number but they added four people ready

00:10:52,549 --> 00:10:59,389
and it seemed really really actually you

00:10:56,869 --> 00:11:02,540
know they'll present that next time then

00:10:59,389 --> 00:11:04,609
we have the abacus project like I

00:11:02,540 --> 00:11:07,220
mentioned that last time is gonna move

00:11:04,609 --> 00:11:09,529
to the attic and then to other projects

00:11:07,220 --> 00:11:14,299
that I didn't get any updates but they

00:11:09,529 --> 00:11:17,209
also because the last and monthly

00:11:14,299 --> 00:11:20,660
meeting was during a holiday so we can

00:11:17,209 --> 00:11:23,589
solve it so I should have stuff I guess

00:11:20,660 --> 00:11:23,589
updates for next time

00:11:23,660 --> 00:11:32,559
any questions on extensions okay let me

00:11:29,059 --> 00:11:35,929
see if the bush team sent me anything

00:11:32,559 --> 00:11:38,119
okay so they I'm reading from Akash here

00:11:35,929 --> 00:11:40,339
he said he won manifest report is

00:11:38,119 --> 00:11:44,119
removed so this is for boss now I'll add

00:11:40,339 --> 00:11:46,699
them to the agenda as well and then he

00:11:44,119 --> 00:11:50,209
said we're working to improve the

00:11:46,699 --> 00:11:52,369
behavior of start/stop recreate since we

00:11:50,209 --> 00:11:55,939
received some feedback that they had

00:11:52,369 --> 00:11:58,039
behaved unexpectedly and were difficult

00:11:55,939 --> 00:12:01,100
to use so I guess those are two

00:11:58,039 --> 00:12:07,850
highlights for Bosch and now this that's

00:12:01,100 --> 00:12:11,569
one okay so unnecessary any question for

00:12:07,850 --> 00:12:15,439
either a recall myself we're gonna pass

00:12:11,569 --> 00:12:19,699
the mic to dr. Nick Williams everybody

00:12:15,439 --> 00:12:22,160
knows he can be a joy to work with

00:12:19,699 --> 00:12:28,100
I have to say personally and can attest

00:12:22,160 --> 00:12:30,259
to that Dr Maxis I get here are you

00:12:28,100 --> 00:12:33,819
interview any updates on the build back

00:12:30,259 --> 00:12:33,819
we three support and Cloud Foundry

00:12:35,560 --> 00:12:41,600
actually I I don't have that because

00:12:38,290 --> 00:12:47,570
Stephen is not here okay but I don't

00:12:41,600 --> 00:12:50,410
know every you have I think that efforts

00:12:47,570 --> 00:12:55,580
are underway on the build pack team to

00:12:50,410 --> 00:12:58,220
transition to the cloud native build

00:12:55,580 --> 00:12:59,780
pack scope xv-3 with the current plan is

00:12:58,220 --> 00:13:03,920
for there to be some sort of shim to

00:12:59,780 --> 00:13:06,110
allow running a v3 build pack within the

00:13:03,920 --> 00:13:07,550
current Clive foundry staging process so

00:13:06,110 --> 00:13:11,330
that might not take advantage of all of

00:13:07,550 --> 00:13:13,790
the features of v3 build packs but the

00:13:11,330 --> 00:13:17,290
eventual plan is to rethink more

00:13:13,790 --> 00:13:20,660
generally how the staging process works

00:13:17,290 --> 00:13:23,360
we think Cloud Foundry so that it would

00:13:20,660 --> 00:13:24,920
be based more on the OCI image registry

00:13:23,360 --> 00:13:29,660
primitives that the cloud native Phillip

00:13:24,920 --> 00:13:32,750
xv-3 spec takes advantage of so I know

00:13:29,660 --> 00:13:34,280
there's there's some work that pivotal

00:13:32,750 --> 00:13:37,580
is planning to open source around that

00:13:34,280 --> 00:13:39,830
soon and there's been some discussions

00:13:37,580 --> 00:13:41,060
amongst the project teams about how

00:13:39,830 --> 00:13:49,690
that's going to get integrated into

00:13:41,060 --> 00:13:49,690
college Henry great thank you all right

00:13:57,250 --> 00:14:05,450
stretching first alright take it your

00:14:04,790 --> 00:14:09,440
champion

00:14:05,450 --> 00:14:13,190
let me let me share the old screen where

00:14:09,440 --> 00:14:15,950
magic will happen and we'll laugh his

00:14:13,190 --> 00:14:17,720
there's some slides and I know on

00:14:15,950 --> 00:14:19,580
speaker deck and I'll give you your l1

00:14:17,720 --> 00:14:22,700
and then there's a bit of a walk through

00:14:19,580 --> 00:14:25,580
a bit of our interactive activity

00:14:22,700 --> 00:14:29,210
well I'll interact and you can passively

00:14:25,580 --> 00:14:31,700
accept it but I think already shared in

00:14:29,210 --> 00:14:34,670
the cab channel is kind of my walk

00:14:31,700 --> 00:14:37,160
through I set that to dr. max to prove

00:14:34,670 --> 00:14:39,320
that I had something to myself as much

00:14:37,160 --> 00:14:41,680
to him but that's what's been shared so

00:14:39,320 --> 00:14:41,680
that's cool

00:14:42,579 --> 00:14:47,829
so that that we would just ill or I

00:14:44,920 --> 00:14:50,049
mentioned that so we are but the dill

00:14:47,829 --> 00:14:51,069
pack and and sidecar thing is is

00:14:50,049 --> 00:14:54,759
underway

00:14:51,069 --> 00:14:59,459
hopefully this this talk is topical and

00:14:54,759 --> 00:15:02,980
and useful because it goes back to a

00:14:59,459 --> 00:15:05,350
blog post that Tim came out with a

00:15:02,980 --> 00:15:08,350
couple months ago and which I missed

00:15:05,350 --> 00:15:10,389
entirely and I was not at the last cab

00:15:08,350 --> 00:15:13,629
call but thank goodness the alt Horus

00:15:10,389 --> 00:15:15,819
people had done you know five Great

00:15:13,629 --> 00:15:18,369
years of writing up these capitals and

00:15:15,819 --> 00:15:22,749
because living Australia that's pretty

00:15:18,369 --> 00:15:24,189
much how I lived them I'm sorry to the

00:15:22,749 --> 00:15:27,730
you know to the recording team I don't

00:15:24,189 --> 00:15:31,089
typically watch sick that cool I just

00:15:27,730 --> 00:15:33,610
read about it and they mentioned a month

00:15:31,089 --> 00:15:37,389
ago we talked about sidecars and I was

00:15:33,610 --> 00:15:39,309
super excited by that and and in walking

00:15:37,389 --> 00:15:41,949
going through the walkthrough I did all

00:15:39,309 --> 00:15:44,170
I did Tim's walkthrough I made that work

00:15:41,949 --> 00:15:47,379
and the first thing that came out in my

00:15:44,170 --> 00:15:50,339
mind is why would I push this would no

00:15:47,379 --> 00:15:52,720
use a bill pack and the bill pack team

00:15:50,339 --> 00:15:54,160
agreed also that the cabbie team I think

00:15:52,720 --> 00:15:58,689
agreed and and so I started

00:15:54,160 --> 00:16:01,089
investigating this and you know my my

00:15:58,689 --> 00:16:02,499
thoughts of experiments and and and also

00:16:01,089 --> 00:16:05,739
the sir for anyone that's never made a

00:16:02,499 --> 00:16:07,689
bill pair just how simple it is to make

00:16:05,739 --> 00:16:10,689
like these what I call singles bill

00:16:07,689 --> 00:16:12,610
packs and I think it's super valuable to

00:16:10,689 --> 00:16:14,350
start to look at bill packs again if

00:16:12,610 --> 00:16:16,600
you've never built one or look at the

00:16:14,350 --> 00:16:18,399
new tooling especially with the b3 bill

00:16:16,600 --> 00:16:20,399
pack stuff that's coming along I think

00:16:18,399 --> 00:16:22,480
that's going to be a greater demand for

00:16:20,399 --> 00:16:23,559
functionality be destructive into a

00:16:22,480 --> 00:16:27,819
single purpose

00:16:23,559 --> 00:16:30,399
bill pecs so here we go everything I

00:16:27,819 --> 00:16:32,019
talked about is be to build packs but

00:16:30,399 --> 00:16:33,879
you know we could do this talk again

00:16:32,019 --> 00:16:37,139
when when we've got v3 build packs down

00:16:33,879 --> 00:16:40,779
the track alright so quickly sidecars

00:16:37,139 --> 00:16:44,379
your app sits in the container the black

00:16:40,779 --> 00:16:45,970
boxes in container perfectly isolating

00:16:44,379 --> 00:16:48,129
our application from the universe not

00:16:45,970 --> 00:16:49,989
mention here is is port 8080 where

00:16:48,129 --> 00:16:52,720
traffic comes in but you can add that

00:16:49,989 --> 00:16:55,059
your own imagination and so the idea of

00:16:52,720 --> 00:16:57,000
a sidecar is this other process and and

00:16:55,059 --> 00:17:00,460
this config server

00:16:57,000 --> 00:17:02,440
Conner comes from Tim's demo and this is

00:17:00,460 --> 00:17:04,300
a little snippet so the premise is that

00:17:02,440 --> 00:17:07,300
we're going to run this other process in

00:17:04,300 --> 00:17:11,020
the same container and since it shares

00:17:07,300 --> 00:17:13,210
the file system we could our app could

00:17:11,020 --> 00:17:16,480
connect to our sidecar or vice versa

00:17:13,210 --> 00:17:21,040
really I've said over a socket or the

00:17:16,480 --> 00:17:22,750
shared file system or local port and my

00:17:21,040 --> 00:17:25,450
example he doesn't really match up to my

00:17:22,750 --> 00:17:26,950
you know to the snippet I've got it

00:17:25,450 --> 00:17:30,310
below which says that the shared ports

00:17:26,950 --> 00:17:31,870
80 and two but doesn't really matter

00:17:30,310 --> 00:17:33,390
whatever it is however you want the two

00:17:31,870 --> 00:17:35,800
things to talk to each other

00:17:33,390 --> 00:17:38,230
passively actively you know you can do

00:17:35,800 --> 00:17:39,910
that what's I guess interesting and

00:17:38,230 --> 00:17:42,220
leads to what they were talking about a

00:17:39,910 --> 00:17:45,850
few minutes ago is in the current

00:17:42,220 --> 00:17:47,890
implementation the way you run a sidecar

00:17:45,850 --> 00:17:52,360
with multiple side cars is in the

00:17:47,890 --> 00:17:54,760
application manifest as a v3 app user to

00:17:52,360 --> 00:17:58,090
say that here's the command and you can

00:17:54,760 --> 00:17:59,860
see the last line is where we're going

00:17:58,090 --> 00:18:02,260
to sort of look at or how else go and do

00:17:59,860 --> 00:18:05,080
this and that is you can run an

00:18:02,260 --> 00:18:06,640
arbitrary command and so this dot slash

00:18:05,080 --> 00:18:08,080
suggests that the conflicts of

00:18:06,640 --> 00:18:12,610
replication is inside our application

00:18:08,080 --> 00:18:15,910
folder and my hypothesis was that that

00:18:12,610 --> 00:18:17,950
is a weird and wonderful assumption that

00:18:15,910 --> 00:18:21,430
that the developer would be pushing this

00:18:17,950 --> 00:18:22,990
app up and so let's let's look at some

00:18:21,430 --> 00:18:24,310
other examples perhaps of what else we

00:18:22,990 --> 00:18:27,520
might in Psych us and then we'll get

00:18:24,310 --> 00:18:29,350
back to the build pack thing this has

00:18:27,520 --> 00:18:31,710
been my sort of hope and dream was that

00:18:29,350 --> 00:18:34,780
the world would move towards you know

00:18:31,710 --> 00:18:37,000
proxies so that my app would not talk

00:18:34,780 --> 00:18:39,430
directly to Postgres that I would talk

00:18:37,000 --> 00:18:41,560
to a local proxy and my proxy could

00:18:39,430 --> 00:18:43,390
worry about maintaining that

00:18:41,560 --> 00:18:45,430
relationship with Postgres through

00:18:43,390 --> 00:18:50,980
through the lifecycle of Postgres

00:18:45,430 --> 00:18:52,270
upgrades payloads etc and yeah so I this

00:18:50,980 --> 00:18:55,420
is actually the demo we're going to

00:18:52,270 --> 00:18:56,640
build later on and it wasn't take very

00:18:55,420 --> 00:18:58,960
long at all

00:18:56,640 --> 00:19:02,470
there is also perhaps the idea of

00:18:58,960 --> 00:19:04,930
running engine X in the same so this is

00:19:02,470 --> 00:19:07,660
kind of like a front-facing or this the

00:19:04,930 --> 00:19:08,800
the sidecar in this case might be the

00:19:07,660 --> 00:19:10,110
thing that receives the traffic

00:19:08,800 --> 00:19:13,340
initially and then for

00:19:10,110 --> 00:19:16,290
on to the app I did get this working

00:19:13,340 --> 00:19:18,480
bring up the rails app and it didn't

00:19:16,290 --> 00:19:21,570
make my app any faster so I wasn't

00:19:18,480 --> 00:19:23,580
really sure what to do that yet I'm not

00:19:21,570 --> 00:19:28,110
sure whether I did it wrong or perhaps

00:19:23,580 --> 00:19:29,309
just rails asset pipeline is fast enough

00:19:28,110 --> 00:19:32,670
and it just doesn't serve the purpose

00:19:29,309 --> 00:19:35,340
but if anyone has any wants to see what

00:19:32,670 --> 00:19:37,650
I did I can show you but that's another

00:19:35,340 --> 00:19:40,130
example of where Sarkar and I guess

00:19:37,650 --> 00:19:42,809
monitoring and other things that

00:19:40,130 --> 00:19:46,320
arguably Cloud Foundry is less useful

00:19:42,809 --> 00:19:50,130
site cards because squad boundary does

00:19:46,320 --> 00:19:52,679
so much stuff already that you know a

00:19:50,130 --> 00:19:54,000
lower level system like you believe

00:19:52,679 --> 00:19:55,679
sidecars for all the things we do

00:19:54,000 --> 00:20:00,299
already in cloud foundry but nonetheless

00:19:55,679 --> 00:20:03,299
we have site cast exciting times but the

00:20:00,299 --> 00:20:05,549
thing Tim did was he print the premise

00:20:03,299 --> 00:20:08,660
of his thing was he pushed the devisor

00:20:05,549 --> 00:20:11,929
developer he was responsible for pushing

00:20:08,660 --> 00:20:15,840
some version of the sidecar software oh

00:20:11,929 --> 00:20:20,820
where he got that from as a developer is

00:20:15,840 --> 00:20:23,010
kind of not mentioned like did you have

00:20:20,820 --> 00:20:26,340
the right version of config server did

00:20:23,010 --> 00:20:28,169
he have a patched version where where is

00:20:26,340 --> 00:20:31,049
that line of responsibility and one of

00:20:28,169 --> 00:20:34,590
the things I think Cloud Foundry has led

00:20:31,049 --> 00:20:36,030
the field on in this or platform space

00:20:34,590 --> 00:20:38,490
and certainly you know all these other

00:20:36,030 --> 00:20:42,780
things that come along seem to forget is

00:20:38,490 --> 00:20:46,290
this separation of concerns and what is

00:20:42,780 --> 00:20:48,510
this developers concern and should the

00:20:46,290 --> 00:20:50,549
developer be concerned with you know

00:20:48,510 --> 00:20:53,309
figure out and uploading the conflict

00:20:50,549 --> 00:20:55,110
server and I would argue that it's the

00:20:53,309 --> 00:20:57,660
many cases they should not it is not

00:20:55,110 --> 00:20:59,850
their responsibility and certainly

00:20:57,660 --> 00:21:01,679
further you know the front for the

00:20:59,850 --> 00:21:03,419
examples we'd escaped I can't quite

00:21:01,679 --> 00:21:05,790
imagine what the example is at the con

00:21:03,419 --> 00:21:08,700
big server where the app developer would

00:21:05,790 --> 00:21:12,360
care about the implementation so we have

00:21:08,700 --> 00:21:15,270
a model for that and that is Bill pack

00:21:12,360 --> 00:21:19,679
so just as another example if we were

00:21:15,270 --> 00:21:21,510
gonna go with the xcd premise arguably

00:21:19,679 --> 00:21:24,040
there is this other group of people who

00:21:21,510 --> 00:21:26,350
would care more about psychic are self

00:21:24,040 --> 00:21:29,110
then the application developer and

00:21:26,350 --> 00:21:30,790
that's probably the sidecar the HED

00:21:29,110 --> 00:21:33,670
service team whoever's running that

00:21:30,790 --> 00:21:34,930
service and so it's more likely that

00:21:33,670 --> 00:21:37,240
they would take responsibility for

00:21:34,930 --> 00:21:42,700
distributing that sidecar then it would

00:21:37,240 --> 00:21:44,620
be the developer and so in that model

00:21:42,700 --> 00:21:45,460
they would be more likely to people to

00:21:44,620 --> 00:21:47,440
own that

00:21:45,460 --> 00:21:50,230
that software therefore we have a model

00:21:47,440 --> 00:21:51,940
for that and that is build packs and so

00:21:50,230 --> 00:21:54,490
this is the rest of this talk as well

00:21:51,940 --> 00:21:57,070
how do we build a build pack if you've

00:21:54,490 --> 00:21:58,660
never done it before and then on to

00:21:57,070 --> 00:22:02,050
running the sidecar which looks just

00:21:58,660 --> 00:22:04,270
like before until and until we can ou

00:22:02,050 --> 00:22:06,460
get to Zarek's it until we get a nicer

00:22:04,270 --> 00:22:07,630
way to run psychos which is naturally

00:22:06,460 --> 00:22:09,730
through the build path which is gonna be

00:22:07,630 --> 00:22:11,440
super cool and hopefully perhaps even

00:22:09,730 --> 00:22:12,820
next month we might have a solution to

00:22:11,440 --> 00:22:14,380
that that would be super cool if they

00:22:12,820 --> 00:22:16,330
could say and now here's how bill packs

00:22:14,380 --> 00:22:18,720
run psychos but today we're just going

00:22:16,330 --> 00:22:22,420
to distribute software in a pill pack

00:22:18,720 --> 00:22:24,190
and this has come to what the manifest

00:22:22,420 --> 00:22:26,440
will look like at the end we're gonna

00:22:24,190 --> 00:22:29,920
have our new bill pack and we'll have

00:22:26,440 --> 00:22:30,400
explicit sidecar and I'm gonna repeat

00:22:29,920 --> 00:22:32,380
myself

00:22:30,400 --> 00:22:35,200
what sort of Eric was saying was that

00:22:32,380 --> 00:22:37,180
hopefully if I was to add this sed build

00:22:35,200 --> 00:22:39,550
pack I wouldn't perhaps need to

00:22:37,180 --> 00:22:43,150
explicitly say there's a sidecar in my

00:22:39,550 --> 00:22:44,680
application manifest Eric is that right

00:22:43,150 --> 00:22:46,480
that's the premise of what you were

00:22:44,680 --> 00:22:48,700
talking about yeah that's the idea

00:22:46,480 --> 00:22:49,870
and Captain Bill packs are just working

00:22:48,700 --> 00:22:55,090
on what that contract would look like

00:22:49,870 --> 00:22:56,680
yeah sorry this is super cool and but

00:22:55,090 --> 00:22:58,270
right now you can still go through this

00:22:56,680 --> 00:23:00,160
process you just your application

00:22:58,270 --> 00:23:03,280
developers would need to explicitly say

00:23:00,160 --> 00:23:04,900
that there is a sidecar and mate and

00:23:03,280 --> 00:23:06,610
this is this premise of contact that

00:23:04,900 --> 00:23:08,260
maybe instead of explicitly saying

00:23:06,610 --> 00:23:10,240
here's the command you would extract

00:23:08,260 --> 00:23:13,690
that down one level to a shell strip but

00:23:10,240 --> 00:23:17,080
anyway it's all work in progress but you

00:23:13,690 --> 00:23:19,210
can get started alright so we are going

00:23:17,080 --> 00:23:23,650
to go through this little tutorial

00:23:19,210 --> 00:23:24,880
walkthrough now and it'll be fun I tend

00:23:23,650 --> 00:23:27,100
to call this a singles build pack

00:23:24,880 --> 00:23:29,380
because what we're gonna do is make a

00:23:27,100 --> 00:23:31,330
build pack that does not contain lots of

00:23:29,380 --> 00:23:33,700
versions of something like the Ruby

00:23:31,330 --> 00:23:36,010
build pack lots of versions of Ruby and

00:23:33,700 --> 00:23:37,730
then the application sort of infers or

00:23:36,010 --> 00:23:41,220
suggests or whatever which

00:23:37,730 --> 00:23:43,200
particular Ruby it wants to install the

00:23:41,220 --> 00:23:47,670
bill pack we're going to build just has

00:23:43,200 --> 00:23:50,070
one version of in this case at CD and if

00:23:47,670 --> 00:23:51,990
you really really really need an older

00:23:50,070 --> 00:23:54,780
version of a TV then you can just

00:23:51,990 --> 00:23:58,140
explicitly use that old version of the

00:23:54,780 --> 00:24:01,170
build pack now later on maybe there's

00:23:58,140 --> 00:24:03,510
some break in that relationship where

00:24:01,170 --> 00:24:06,030
users definitely need an older version

00:24:03,510 --> 00:24:07,950
for some reason and then you can make

00:24:06,030 --> 00:24:10,110
your bill pack more complicated but

00:24:07,950 --> 00:24:12,480
getting started let's just package one

00:24:10,110 --> 00:24:14,610
thing and install that one thing and if

00:24:12,480 --> 00:24:17,870
you update the bill pack then the next

00:24:14,610 --> 00:24:21,120
restage you'll get the new sidecar and

00:24:17,870 --> 00:24:24,690
and I'm gonna use CF dev for development

00:24:21,120 --> 00:24:34,770
because at least I get to be admin all

00:24:24,690 --> 00:24:36,300
right now let's make a deal pack so now

00:24:34,770 --> 00:24:40,500
there is what I'm not going to show you

00:24:36,300 --> 00:24:46,080
is the build Lib build there is a tool

00:24:40,500 --> 00:24:48,180
chain called build pack packaged up and

00:24:46,080 --> 00:24:50,700
it has like an Internet tool and that'll

00:24:48,180 --> 00:24:52,500
build a scaffold and that can be very

00:24:50,700 --> 00:24:54,420
helpful I'm gonna build up more from

00:24:52,500 --> 00:24:56,870
scratch we're still going to use build

00:24:54,420 --> 00:25:01,890
pack packages to bundle look together

00:24:56,870 --> 00:25:03,960
but we're just going to sort of - with

00:25:01,890 --> 00:25:06,210
the old with with lower level shell

00:25:03,960 --> 00:25:08,430
scripts so I'm gonna need a bins folder

00:25:06,210 --> 00:25:10,500
the contract for a supply build pack is

00:25:08,430 --> 00:25:14,760
it's pretty simple it's it's you just

00:25:10,500 --> 00:25:16,350
create a supply script or executable so

00:25:14,760 --> 00:25:19,980
I'm gonna make it a shell script that

00:25:16,350 --> 00:25:22,740
could be a binary and we're gonna need a

00:25:19,980 --> 00:25:25,580
version of what our bill pack is and the

00:25:22,740 --> 00:25:28,830
bill pack packager will medium or valve

00:25:25,580 --> 00:25:33,300
and everything gets better if it's

00:25:28,830 --> 00:25:36,360
actually executable alright let's make

00:25:33,300 --> 00:25:39,680
our build pack that or it exists no

00:25:36,360 --> 00:25:39,680
what's that that's not right

00:25:41,110 --> 00:25:46,020
right in leader this

00:25:43,740 --> 00:25:50,040
there we go all right that's the empty

00:25:46,020 --> 00:25:51,500
that's empty and that's empty we will

00:25:50,040 --> 00:25:55,530
come back to this in a second oh just

00:25:51,500 --> 00:25:59,130
only retentive and I feel bad about that

00:25:55,530 --> 00:26:02,370
sorry what are we gonna package my

00:25:59,130 --> 00:26:05,040
hypothesis in this is that there is

00:26:02,370 --> 00:26:08,460
another team who's responsible for the

00:26:05,040 --> 00:26:10,140
sidecar and that team is probably in

00:26:08,460 --> 00:26:13,590
many organizations response to the pill

00:26:10,140 --> 00:26:15,510
pack but even if not it's not developer

00:26:13,590 --> 00:26:17,220
but we are gonna you can imagine a

00:26:15,510 --> 00:26:19,110
pipeline like imagine a concourse

00:26:17,220 --> 00:26:21,990
pipeline that just watches the upstream

00:26:19,110 --> 00:26:24,480
thing in this case we'd have a concourse

00:26:21,990 --> 00:26:26,430
pipeline watching the ad release we

00:26:24,480 --> 00:26:28,290
would get notified get notified that

00:26:26,430 --> 00:26:31,680
there's a new TV release it would

00:26:28,290 --> 00:26:34,560
download a specific thing get the shower

00:26:31,680 --> 00:26:36,240
of it and and turn it into a new version

00:26:34,560 --> 00:26:38,400
of our build pack we're going to do this

00:26:36,240 --> 00:26:42,180
manually that I hopefully you can

00:26:38,400 --> 00:26:44,100
imagine what this would look like as a

00:26:42,180 --> 00:26:47,910
pipeline alright so new version came out

00:26:44,100 --> 00:26:49,920
its 3.3 13 I'm going to go with the

00:26:47,910 --> 00:26:53,070
again statement that the version of my

00:26:49,920 --> 00:26:54,900
build pack can be in sync with the

00:26:53,070 --> 00:26:57,810
upstream version of the thing that this

00:26:54,900 --> 00:26:59,280
is just like a wrapper it's not any

00:26:57,810 --> 00:27:02,730
fancy event it's just shipping that

00:26:59,280 --> 00:27:07,350
version and anyone who wants to argue

00:27:02,730 --> 00:27:09,210
that this is a bad idea is very welcome

00:27:07,350 --> 00:27:10,320
to this is where we're going right now

00:27:09,210 --> 00:27:11,970
so we're going to say that the version

00:27:10,320 --> 00:27:14,490
of the bill pack equals the version of

00:27:11,970 --> 00:27:16,590
the thing with packaging all right the

00:27:14,490 --> 00:27:18,420
next thing we need is the manifest which

00:27:16,590 --> 00:27:21,150
we don't know what a schemer is it's

00:27:18,420 --> 00:27:23,610
going to be a lot of fun to work with so

00:27:21,150 --> 00:27:27,240
I'm just going to copy one that I've

00:27:23,610 --> 00:27:29,220
leased a starting point all right so we

00:27:27,240 --> 00:27:31,410
have a starting point and you can borrow

00:27:29,220 --> 00:27:33,900
this structure from every other build

00:27:31,410 --> 00:27:36,600
pack that is published by the up of

00:27:33,900 --> 00:27:41,510
course in most of the bill packs use the

00:27:36,600 --> 00:27:41,510
build packet packager tool so let's

00:27:42,120 --> 00:27:49,840
let's rename this as @cd I'm going to

00:27:46,780 --> 00:27:51,610
say that the the tool that the thing

00:27:49,840 --> 00:27:53,830
we're packaging is air TV I'm gonna say

00:27:51,610 --> 00:27:55,690
that buildpack is called the Italy proxy

00:27:53,830 --> 00:27:57,850
buildpack because that's really what I'm

00:27:55,690 --> 00:28:01,390
using it for and it makes me feel better

00:27:57,850 --> 00:28:03,580
about myself and the version again this

00:28:01,390 --> 00:28:05,120
file would be created by your CI

00:28:03,580 --> 00:28:06,490
pipeline

00:28:05,120 --> 00:28:10,270
[Music]

00:28:06,490 --> 00:28:14,620
and I think the version was three dots

00:28:10,270 --> 00:28:16,870
where was it there Dania turned it and

00:28:14,620 --> 00:28:20,170
they go away all right

00:28:16,870 --> 00:28:23,679
that doesn't that wasn't perfect but

00:28:20,170 --> 00:28:28,210
it's pretty good permission have called

00:28:23,679 --> 00:28:28,780
it division I was down done terrible

00:28:28,210 --> 00:28:34,570
things

00:28:28,780 --> 00:28:37,240
there we go let me do this live it's a

00:28:34,570 --> 00:28:39,640
little bit embarrassing all right we'll

00:28:37,240 --> 00:28:42,190
come back to the shower the your eye now

00:28:39,640 --> 00:28:44,380
because one of the use cases of a build

00:28:42,190 --> 00:28:47,020
PAC project is people might want to use

00:28:44,380 --> 00:28:50,260
the git repo to do it in which case they

00:28:47,020 --> 00:28:52,840
want to download this thing so we will

00:28:50,260 --> 00:28:55,059
and and since we can just get a download

00:28:52,840 --> 00:28:57,929
URL from from the place that we're going

00:28:55,059 --> 00:29:02,559
to get it from so we will just take that

00:28:57,929 --> 00:29:05,470
get the URL and we will just paste that

00:29:02,559 --> 00:29:08,830
in there turns out that if you're

00:29:05,470 --> 00:29:12,100
prepared to only work with cached build

00:29:08,830 --> 00:29:13,690
packs then you don't have to push the

00:29:12,100 --> 00:29:15,940
thing up to the internet somewhere

00:29:13,690 --> 00:29:18,880
public you could just have the thing

00:29:15,940 --> 00:29:20,679
local on a local file and then create

00:29:18,880 --> 00:29:22,960
your cash to build pack and work with

00:29:20,679 --> 00:29:24,580
that I don't know if only I'm doing this

00:29:22,960 --> 00:29:28,000
but it is a thing I just want to mention

00:29:24,580 --> 00:29:32,620
it but in our case the upstream this is

00:29:28,000 --> 00:29:34,450
where it comes from and but the the

00:29:32,620 --> 00:29:35,920
supply thing that I'm gonna work on in

00:29:34,450 --> 00:29:37,630
the short term is going to assume that

00:29:35,920 --> 00:29:40,000
it's a cached version I'm not going to

00:29:37,630 --> 00:29:43,090
go and fetch it from the internet all

00:29:40,000 --> 00:29:45,820
right I have already downloaded this I

00:29:43,090 --> 00:29:47,050
don't you know what no we can download

00:29:45,820 --> 00:29:49,030
this how long could it take

00:29:47,050 --> 00:29:51,090
honestly I'm in America we have internet

00:29:49,030 --> 00:29:51,090
here

00:29:52,260 --> 00:30:01,650
a lot less trusting of doing internet

00:29:56,130 --> 00:30:07,320
live in Australia so let's get the show

00:30:01,650 --> 00:30:09,059
of that's there it is again

00:30:07,320 --> 00:30:11,220
your concourse pipeline would get all

00:30:09,059 --> 00:30:15,179
this the week for you we're good to go

00:30:11,220 --> 00:30:21,030
so what do we do with this what we do is

00:30:15,179 --> 00:30:25,470
we run the build pack packager build

00:30:21,030 --> 00:30:27,960
command and it will take that manifest

00:30:25,470 --> 00:30:29,600
it will fetch all those your roles if

00:30:27,960 --> 00:30:33,750
I'm not already in the cache and

00:30:29,600 --> 00:30:37,800
download them again and then we will get

00:30:33,750 --> 00:30:40,690
our cash to build pack

00:30:37,800 --> 00:30:44,670
all right so I built this for me which

00:30:40,690 --> 00:30:44,670
is lovely we can have a look inside it

00:30:45,720 --> 00:30:51,340
and we can see that it's got the files

00:30:49,450 --> 00:30:55,270
that we said it would have this is the

00:30:51,340 --> 00:30:56,650
included files so any other files that

00:30:55,270 --> 00:31:00,010
are in my bill pack and not being

00:30:56,650 --> 00:31:01,930
bundled because they're not useful as as

00:31:00,010 --> 00:31:04,150
I declared they're not useful and

00:31:01,930 --> 00:31:07,720
because I built a cached build pack it

00:31:04,150 --> 00:31:10,540
has the assets in them and so we can

00:31:07,720 --> 00:31:14,429
just get those and our peplum which is

00:31:10,540 --> 00:31:17,020
going to be good fun all right now let's

00:31:14,429 --> 00:31:18,640
let's use this thing let's actually

00:31:17,020 --> 00:31:20,350
first let's make the supply build pack

00:31:18,640 --> 00:31:23,050
do something when we run it for the

00:31:20,350 --> 00:31:26,020
first time so let's just see that we can

00:31:23,050 --> 00:31:28,720
when we when we go through staging let's

00:31:26,020 --> 00:31:37,809
just double check that out cached asset

00:31:28,720 --> 00:31:39,850
is is there and so let's set up what the

00:31:37,809 --> 00:31:41,950
build packs are where are this script is

00:31:39,850 --> 00:31:45,059
in the bin folder so we'll say the bill

00:31:41,950 --> 00:31:47,410
pack directory is one down and let's

00:31:45,059 --> 00:31:48,940
have a little have ourselves a look-see

00:31:47,410 --> 00:31:53,140
at what's in that folder

00:31:48,940 --> 00:31:57,370
during staging that looks pretty good as

00:31:53,140 --> 00:32:02,860
a bit of a no op bill pack and so we are

00:31:57,370 --> 00:32:04,720
going to make that again and then we

00:32:02,860 --> 00:32:06,760
will create it and upload it so see if

00:32:04,720 --> 00:32:09,490
create bill pack I apologize for

00:32:06,760 --> 00:32:11,230
cheating but this is the the admin

00:32:09,490 --> 00:32:13,030
command for creating a new bill pack we

00:32:11,230 --> 00:32:16,420
give it a name for that Cloud Foundry

00:32:13,030 --> 00:32:20,460
file some large number to put at the end

00:32:16,420 --> 00:32:20,460
of the list and enable it

00:32:22,940 --> 00:32:25,000
you

00:32:25,320 --> 00:32:32,080
we of course not going to get very far

00:32:27,909 --> 00:32:40,059
without an app so let's let's make

00:32:32,080 --> 00:32:42,039
ourselves an app which again I apologize

00:32:40,059 --> 00:32:43,659
to my anal retentiveness even though

00:32:42,039 --> 00:32:47,289
we're never gonna actually see this I

00:32:43,659 --> 00:32:49,330
feel like it should say hello world now

00:32:47,289 --> 00:32:51,999
when we get back to sidecars

00:32:49,330 --> 00:32:53,950
it is the newbie three commands that

00:32:51,999 --> 00:32:55,840
we're going to need so we'll come back

00:32:53,950 --> 00:32:59,919
to those in a second for the short term

00:32:55,840 --> 00:33:04,239
let's just use the simple ones just to

00:32:59,919 --> 00:33:06,849
get moving the path to this is simple

00:33:04,239 --> 00:33:09,940
we're going to use our new bill pack

00:33:06,849 --> 00:33:12,269
which we've created and the static file

00:33:09,940 --> 00:33:12,269
bill pack

00:33:17,670 --> 00:33:23,430
that should allow us to test our staging

00:33:24,850 --> 00:33:29,200
now all this makes sense in my head

00:33:26,549 --> 00:33:31,679
anyone has questions now it's a good

00:33:29,200 --> 00:33:31,679
time for them

00:33:39,420 --> 00:33:45,720
okey-dokey so it's now moved on to the

00:33:41,940 --> 00:33:49,559
stereo build pack staging but we can see

00:33:45,720 --> 00:33:51,660
here my build pack in action and the

00:33:49,559 --> 00:33:54,090
showing of the build pack contents and

00:33:51,660 --> 00:33:56,280
as we said as we sort of showed that all

00:33:54,090 --> 00:33:59,309
it's done is unpacked that zip file into

00:33:56,280 --> 00:34:03,059
some folder so that was build Pachter

00:33:59,309 --> 00:34:04,559
and then here's our dependencies someone

00:34:03,059 --> 00:34:09,090
one day might explain to me what this

00:34:04,559 --> 00:34:13,859
number is but here is my upstream file

00:34:09,090 --> 00:34:15,510
that we could you know now use we don't

00:34:13,859 --> 00:34:17,070
yet have this pretty line we should get

00:34:15,510 --> 00:34:18,600
this pretty line and put it in so that

00:34:17,070 --> 00:34:25,200
our bill pack looks like everyone else's

00:34:18,600 --> 00:34:27,060
built back so let us now echo it CG no

00:34:25,200 --> 00:34:29,940
it's never it's never too early to make

00:34:27,060 --> 00:34:33,840
you build pack look cool and now we want

00:34:29,940 --> 00:34:36,300
some version number turns out our bill

00:34:33,840 --> 00:34:39,330
pack has our version file in it so we

00:34:36,300 --> 00:34:45,300
know where that version is so let's get

00:34:39,330 --> 00:34:47,609
that out and then we'll pump it into

00:34:45,300 --> 00:34:50,070
their little output so everything looks

00:34:47,609 --> 00:34:55,200
good don't really need to do that

00:34:50,070 --> 00:34:57,480
anymore now what I do need is perhaps to

00:34:55,200 --> 00:35:03,090
unpack this and have a look see inside

00:34:57,480 --> 00:35:08,609
so let's tar fixit's there'd build pack

00:35:03,090 --> 00:35:10,920
the dependencies and again not sure what

00:35:08,609 --> 00:35:14,490
that's for but I do happen to know what

00:35:10,920 --> 00:35:17,730
this file looks like now there you know

00:35:14,490 --> 00:35:20,100
at this point other people you have

00:35:17,730 --> 00:35:22,740
showing us that take that step back we

00:35:20,100 --> 00:35:26,040
do have the manifest also so perhaps

00:35:22,740 --> 00:35:28,410
more correctly I should look inside that

00:35:26,040 --> 00:35:31,260
manifest in real time you know during

00:35:28,410 --> 00:35:37,510
staging pull out this file and you know

00:35:31,260 --> 00:35:42,010
etc etc etc and get the white one but

00:35:37,510 --> 00:35:44,200
the fear linux fs3 filesystem doesn't

00:35:42,010 --> 00:35:44,740
have tools processing mammals best as I

00:35:44,200 --> 00:35:48,010
can tell

00:35:44,740 --> 00:35:49,540
so that's just one step too far and

00:35:48,010 --> 00:35:51,240
since we're our build pack only does one

00:35:49,540 --> 00:35:54,270
thing and I know everything about it

00:35:51,240 --> 00:35:56,290
we're just going to go straight it to oh

00:35:54,270 --> 00:35:57,580
I've got the wrong file

00:35:56,290 --> 00:35:58,660
let's go that's not gonna work very well

00:35:57,580 --> 00:36:02,650
but whoever didn't tell me that I

00:35:58,660 --> 00:36:06,160
downloaded the wrong file awful human

00:36:02,650 --> 00:36:12,600
beings but we need that one that wasn't

00:36:06,160 --> 00:36:12,600
gonna work at all arm 64 likes so let's

00:36:13,140 --> 00:36:22,150
let's let's let's let's go back a step

00:36:15,760 --> 00:36:25,720
so I need to fix that I need to download

00:36:22,150 --> 00:36:27,520
the correct thing I wouldn't have got us

00:36:25,720 --> 00:36:30,510
very far unless we're gonna deploy this

00:36:27,520 --> 00:36:32,570
to a Raspberry Pi

00:36:30,510 --> 00:36:32,570
you

00:36:37,350 --> 00:36:56,500
don't turn there we got there AMD will

00:36:45,820 --> 00:36:59,590
take that shot and we will D again so I

00:36:56,500 --> 00:37:01,630
should pass that yen will file and get

00:36:59,590 --> 00:37:03,250
the value out etc but since I know

00:37:01,630 --> 00:37:04,990
everything about what I'm downloading I

00:37:03,250 --> 00:37:08,290
know what its name looks like so we're

00:37:04,990 --> 00:37:10,810
just going to yeah pop it in there

00:37:08,290 --> 00:37:12,430
we should unpack this somewhere rather

00:37:10,810 --> 00:37:20,590
than just where we are right now so

00:37:12,430 --> 00:37:23,830
let's let's make a little tempter and so

00:37:20,590 --> 00:37:28,590
now we're inside that let's go to pop

00:37:23,830 --> 00:37:31,590
that in brackets and yeah so let's

00:37:28,590 --> 00:37:35,460
and let's see what we get again this is

00:37:31,590 --> 00:37:38,400
just my process see what would see what

00:37:35,460 --> 00:37:39,690
we unpack all right let's go through

00:37:38,400 --> 00:37:41,640
this sequence again so we're going to

00:37:39,690 --> 00:37:45,720
create the build pack and then we're

00:37:41,640 --> 00:37:48,720
going to you know what there is an

00:37:45,720 --> 00:37:51,720
update command but I don't like I don't

00:37:48,720 --> 00:37:54,030
like it so I tend to delete and create

00:37:51,720 --> 00:37:55,350
and then we're going to push so we're

00:37:54,030 --> 00:37:57,660
gonna run those commands over and over

00:37:55,350 --> 00:38:02,450
again during iteration so we just go put

00:37:57,660 --> 00:38:02,450
them all on one big command

00:38:05,770 --> 00:38:10,849
this is not the thing I would normally

00:38:09,380 --> 00:38:13,520
do I would normally have a test harness

00:38:10,849 --> 00:38:15,849
but showing you how a road test is out

00:38:13,520 --> 00:38:15,849
of scope

00:38:22,140 --> 00:38:28,229
yes the great you should have cast just

00:38:25,509 --> 00:38:28,229
we're not going to do it

00:38:40,000 --> 00:38:43,510
you

00:38:41,450 --> 00:38:43,510
you

00:38:49,159 --> 00:38:52,579
look at that

00:38:50,669 --> 00:38:55,350
what do pack looks great already with

00:38:52,579 --> 00:38:56,880
you know

00:38:55,350 --> 00:38:58,470
doesn't look good if it doesn't have to

00:38:56,880 --> 00:39:01,200
look at that it looks like a build pack

00:38:58,470 --> 00:39:06,390
all the sudden okay so in our unpacked

00:39:01,200 --> 00:39:08,730
folder which was dot we get this folder

00:39:06,390 --> 00:39:10,170
and inside that folder is our to see

00:39:08,730 --> 00:39:11,160
lies and this is what we want really

00:39:10,170 --> 00:39:12,960
really don't need the rest of the

00:39:11,160 --> 00:39:16,920
documentation everything what we want is

00:39:12,960 --> 00:39:18,510
to unpack these into the finals droplet

00:39:16,920 --> 00:39:20,370
and you want them to be in the path

00:39:18,510 --> 00:39:27,020
because that's even better so we can

00:39:20,370 --> 00:39:29,820
just use them so let's do that let now

00:39:27,020 --> 00:39:32,220
so what we need to do now is we need to

00:39:29,820 --> 00:39:34,650
sort of make some directory somewhere

00:39:32,220 --> 00:39:38,250
that's going to be in the final droplet

00:39:34,650 --> 00:39:40,830
and we want to have a bin folder we'll

00:39:38,250 --> 00:39:43,790
come back to where this is and what we

00:39:40,830 --> 00:39:50,940
wanted to what we want to do is to copy

00:39:43,790 --> 00:39:51,810
that's that folder you know we have

00:39:50,940 --> 00:39:53,910
those two things

00:39:51,810 --> 00:39:56,370
Ramez will keep the the CTL one for good

00:39:53,910 --> 00:40:04,140
measure we want to copy that into this

00:39:56,370 --> 00:40:10,740
magical new entacle new folder let's

00:40:04,140 --> 00:40:12,030
assume that oops it's called that and we

00:40:10,740 --> 00:40:13,980
now need to figure out what this magical

00:40:12,030 --> 00:40:17,720
folder is that if we put something into

00:40:13,980 --> 00:40:20,370
it will be in the resulting droplet now

00:40:17,720 --> 00:40:23,910
turns out that when this supply script

00:40:20,370 --> 00:40:26,100
is run that we are given a set of inputs

00:40:23,910 --> 00:40:29,280
that are folders that we can work with

00:40:26,100 --> 00:40:34,080
and since I can never remember them I

00:40:29,280 --> 00:40:37,830
have a little more of them from some

00:40:34,080 --> 00:40:40,320
work yeah all right

00:40:37,830 --> 00:40:42,060
let's just plot these in typically you

00:40:40,320 --> 00:40:43,080
just do this always and even if you

00:40:42,060 --> 00:40:45,900
don't use them all you males will

00:40:43,080 --> 00:40:48,960
document what the inputs are and so the

00:40:45,900 --> 00:40:51,780
build directory is that app that you're

00:40:48,960 --> 00:40:54,440
working on so we could interfere with

00:40:51,780 --> 00:40:57,060
the app and change it and change files

00:40:54,440 --> 00:40:58,410
but our build pack is independent of the

00:40:57,060 --> 00:41:00,500
app and we're not going to touch the

00:40:58,410 --> 00:41:04,110
folder there's the cache there for

00:41:00,500 --> 00:41:05,990
caching things and oh these two this is

00:41:04,110 --> 00:41:09,270
the important ones we want these ones so

00:41:05,990 --> 00:41:14,550
if we put things into the dependencies

00:41:09,270 --> 00:41:16,740
directory it will allow us to you know

00:41:14,550 --> 00:41:19,290
this is our built out there there are

00:41:16,740 --> 00:41:21,030
multiple like so as the staging happens

00:41:19,290 --> 00:41:22,530
all the build packs are there but we

00:41:21,030 --> 00:41:25,290
only want to interfere with the build

00:41:22,530 --> 00:41:28,050
pack directory for the dependency

00:41:25,290 --> 00:41:29,280
directory for our build pack not sure

00:41:28,050 --> 00:41:32,670
what bad things happen if we start

00:41:29,280 --> 00:41:34,440
interfering with the other so I don't

00:41:32,670 --> 00:41:35,910
sure how to describe that I apologize I

00:41:34,440 --> 00:41:36,300
don't think real words come out of my

00:41:35,910 --> 00:41:39,060
mouth

00:41:36,300 --> 00:41:42,750
so let me just see if SSH into the app

00:41:39,060 --> 00:41:44,250
and so explain that a different way so

00:41:42,750 --> 00:41:48,620
I'm now looking at an app that has

00:41:44,250 --> 00:41:54,960
already been built so this is post

00:41:48,620 --> 00:41:56,670
staging and so we're now in

00:41:54,960 --> 00:42:00,480
depp's directory so this is the the

00:41:56,670 --> 00:42:03,450
final depth directory this is that

00:42:00,480 --> 00:42:05,580
directory and if we look inside it we

00:42:03,450 --> 00:42:08,369
see that for each of the build packs

00:42:05,580 --> 00:42:12,720
that we're working with they get an

00:42:08,369 --> 00:42:15,990
indexed subfolder so if we go into Xero

00:42:12,720 --> 00:42:16,440
we see there's nothing in there that's a

00:42:15,990 --> 00:42:18,780
shame

00:42:16,440 --> 00:42:22,770
but this is where we will be putting our

00:42:18,780 --> 00:42:25,619
ETV so we will be creating a bin folder

00:42:22,770 --> 00:42:28,830
and inside that will be you know

00:42:25,619 --> 00:42:30,390
creating the ETD binary obviously whoo

00:42:28,830 --> 00:42:32,220
and just be praying and people don't but

00:42:30,390 --> 00:42:37,500
at all but that's what we're about to do

00:42:32,220 --> 00:42:38,940
so we don't know what you know at the

00:42:37,500 --> 00:42:40,680
time that we're writing this supply

00:42:38,940 --> 00:42:42,839
thing we don't know where that folder is

00:42:40,680 --> 00:42:44,880
and so we get this environment variable

00:42:42,839 --> 00:42:51,810
which tells us we are zero in this case

00:42:44,880 --> 00:42:53,849
so hopefully that was more scripted so

00:42:51,810 --> 00:42:56,369
we will copy that into bin now that the

00:42:53,849 --> 00:42:58,560
novelty here is that if you're Bill pack

00:42:56,369 --> 00:43:00,390
creates a bin folder it will be added

00:42:58,560 --> 00:43:02,190
into the path automatically after

00:43:00,390 --> 00:43:05,400
staging or when the shell so that's

00:43:02,190 --> 00:43:09,570
that's super nice but just right now

00:43:05,400 --> 00:43:11,790
it's not so let's drink staging it I

00:43:09,570 --> 00:43:15,290
don't believe it is so let's add it to

00:43:11,790 --> 00:43:19,550
the path where our own entertainment and

00:43:15,290 --> 00:43:22,500
let us check that it's you know working

00:43:19,550 --> 00:43:26,640
then we'll delete this later we don't

00:43:22,500 --> 00:43:34,099
need that anymore and I think I looks

00:43:26,640 --> 00:43:34,099
pretty good we'll run our super command

00:43:40,859 --> 00:43:44,700
you

00:43:42,600 --> 00:43:48,890
should run the super command and then

00:43:44,700 --> 00:43:48,890
said something if nothing goes like

00:43:51,720 --> 00:43:55,109
except stay hydrated

00:43:55,230 --> 00:44:02,849
and wear sunscreen when going outside

00:43:59,400 --> 00:44:02,849
and don't smoke

00:44:04,050 --> 00:44:07,920
and registered vote

00:44:12,160 --> 00:44:20,290
becoming a PSA I think behind my new

00:44:23,470 --> 00:44:27,830
mask

00:44:24,800 --> 00:44:31,520
yes all right don't put databases into

00:44:27,830 --> 00:44:34,270
production I got that right why did this

00:44:31,520 --> 00:44:34,270
not work

00:44:41,420 --> 00:44:44,380
good about that

00:44:50,020 --> 00:44:58,440
that was right anyone with snot ideas as

00:44:55,570 --> 00:44:58,440
to how I put this ring

00:45:03,310 --> 00:45:05,370
you

00:45:07,580 --> 00:45:11,390
anyone see what I've done wrong

00:45:11,580 --> 00:45:20,850
so we should all be carrying with you I

00:45:13,820 --> 00:45:26,630
know right is there a little we extra be

00:45:20,850 --> 00:45:29,640
in a line see see that one there yeah

00:45:26,630 --> 00:45:37,200
you know what let's how about how about

00:45:29,640 --> 00:45:44,960
we do this let's just show that it's

00:45:37,200 --> 00:45:44,960
what's in there let's do debugging I

00:45:46,250 --> 00:45:51,120
mean this process is very similar in the

00:45:48,600 --> 00:45:55,410
process of creme Bosch releases and

00:45:51,120 --> 00:45:57,360
Bosch packages or docker files and you

00:45:55,410 --> 00:45:59,310
just keep you live in a perpetual state

00:45:57,360 --> 00:46:02,400
of nothing works and then also that does

00:45:59,310 --> 00:46:04,350
work and instead of embracing enjoying

00:46:02,400 --> 00:46:06,240
that process of things working you move

00:46:04,350 --> 00:46:09,720
on to other things that aren't working

00:46:06,240 --> 00:46:11,420
that's our profession really that's why

00:46:09,720 --> 00:46:14,160
I like to stop when something works

00:46:11,420 --> 00:46:16,860
because I like to embrace that it's

00:46:14,160 --> 00:46:24,810
right there so are we just echoing the

00:46:16,860 --> 00:46:27,930
path or setting the path excellent good

00:46:24,810 --> 00:46:35,400
job I appreciate your work five points

00:46:27,930 --> 00:46:40,920
do you cool all right

00:46:35,400 --> 00:46:42,600
that will work a treat now okay while

00:46:40,920 --> 00:46:46,290
that's building and demonstrating with a

00:46:42,600 --> 00:46:49,230
TV is now installed we can take a step

00:46:46,290 --> 00:46:51,240
towards the sidecar part of this talk

00:46:49,230 --> 00:46:53,630
you've now learned how to build a bill

00:46:51,240 --> 00:46:56,730
packets a very simple bill pack that

00:46:53,630 --> 00:46:59,720
just always installs the latest of

00:46:56,730 --> 00:47:02,880
whatever it is that it's got into it and

00:46:59,720 --> 00:47:05,790
there koroliov though is that this

00:47:02,880 --> 00:47:09,090
supply script assumes that you're using

00:47:05,790 --> 00:47:12,840
cash to build packs then if you wanted

00:47:09,090 --> 00:47:15,960
to support uncashed or the using it from

00:47:12,840 --> 00:47:19,350
github from get then you would also need

00:47:15,960 --> 00:47:24,390
to support you know the feature where

00:47:19,350 --> 00:47:25,200
this is where that isn't available so if

00:47:24,390 --> 00:47:26,940
a none cash

00:47:25,200 --> 00:47:28,410
buildpack would have nothing under the

00:47:26,940 --> 00:47:30,599
dependencies folder or no dependencies

00:47:28,410 --> 00:47:34,019
folder and you would need to go to the

00:47:30,599 --> 00:47:38,760
manifest pull out that URL and download

00:47:34,019 --> 00:47:40,410
it either through whatever you know at

00:47:38,760 --> 00:47:43,640
all you want to use the tool that I've

00:47:40,410 --> 00:47:43,640
started using is

00:47:43,910 --> 00:47:51,170
from Stephen Levine's YJ tool I find

00:47:47,810 --> 00:47:52,760
that quite handy it it's kind of cool it

00:47:51,170 --> 00:47:54,110
there's all sorts of multiplexing of

00:47:52,760 --> 00:47:56,960
inputs and outputs

00:47:54,110 --> 00:47:58,940
I believe he built it because my guess

00:47:56,960 --> 00:48:02,990
is because of the Tamil so in bill Pak

00:47:58,940 --> 00:48:04,610
v3 it's it's Tamil based and so it

00:48:02,990 --> 00:48:06,080
allows you to take that Tamil and turn

00:48:04,610 --> 00:48:08,330
into other things but it also supports

00:48:06,080 --> 00:48:10,730
the animal which is our manifest into

00:48:08,330 --> 00:48:13,960
jason and then you could pipe it into JQ

00:48:10,730 --> 00:48:18,350
and get the you know again out of scope

00:48:13,960 --> 00:48:19,700
so just to point out that this yeah will

00:48:18,350 --> 00:48:21,230
fight this this shell script as it

00:48:19,700 --> 00:48:25,670
stands right now only support the cache

00:48:21,230 --> 00:48:26,570
build back where are we at it worked it

00:48:25,670 --> 00:48:30,530
worked a treat

00:48:26,570 --> 00:48:31,750
hooray look at us alright let's not do

00:48:30,530 --> 00:48:34,670
that again

00:48:31,750 --> 00:48:38,600
alright we now need our be free gotta

00:48:34,670 --> 00:48:41,210
move on to be through so let us get a

00:48:38,600 --> 00:48:46,510
manifest so you have you have nine

00:48:41,210 --> 00:48:49,640
minutes and I need four of them yeah

00:48:46,510 --> 00:48:51,830
maybe you can get it done everybody else

00:48:49,640 --> 00:48:53,840
is just this it would it wouldn't be

00:48:51,830 --> 00:48:57,770
faster if I'd stop talking like you know

00:48:53,840 --> 00:48:59,630
that's no fun so let's move our manifest

00:48:57,770 --> 00:49:02,600
by the way this is I'm sure this is how

00:48:59,630 --> 00:49:09,530
everyone uses the Cloud Foundry help is

00:49:02,600 --> 00:49:11,480
with the built-in correct feature let's

00:49:09,530 --> 00:49:15,380
pop that there alrighty we have a

00:49:11,480 --> 00:49:17,510
manifest and that lets let's go through

00:49:15,380 --> 00:49:20,480
that so what we need now is the sidecars

00:49:17,510 --> 00:49:22,910
bit which like everything else in the

00:49:20,480 --> 00:49:25,600
world I don't remember live in front of

00:49:22,910 --> 00:49:25,600
you what that looks like

00:49:27,410 --> 00:49:33,170
it looks like this alright alright I'm

00:49:30,500 --> 00:49:35,440
just gonna you know still that for a

00:49:33,170 --> 00:49:35,440
moment

00:49:36,990 --> 00:49:43,320
back to this so what we know that I do

00:49:40,950 --> 00:49:47,390
want to prove a point is that during the

00:49:43,320 --> 00:49:54,210
runtime of our container because we put

00:49:47,390 --> 00:49:56,910
the because we created a bin folder it

00:49:54,210 --> 00:49:59,310
is automatically added to the path so

00:49:56,910 --> 00:50:02,100
this is where we put it CD and therefore

00:49:59,310 --> 00:50:04,230
a TV is available in the path inside a

00:50:02,100 --> 00:50:06,150
container therefore I don't need to put

00:50:04,230 --> 00:50:07,800
any path here and we're good to go

00:50:06,150 --> 00:50:11,760
this is the command that you would read

00:50:07,800 --> 00:50:14,460
in the documentation about how to run a

00:50:11,760 --> 00:50:18,869
CD proxy and this is where you would put

00:50:14,460 --> 00:50:21,600
a list of of hosts to start with I'm on

00:50:18,869 --> 00:50:25,440
CF dev and see if there has this cool

00:50:21,600 --> 00:50:28,260
feature where this domain DNS entry

00:50:25,440 --> 00:50:31,050
references my local machine or the host

00:50:28,260 --> 00:50:35,130
machine and so this will point to the

00:50:31,050 --> 00:50:42,150
sed server that I have on on my local

00:50:35,130 --> 00:50:48,630
machine so if I was to say set local da

00:50:42,150 --> 00:50:50,550
clinic that's it what's it called put we

00:50:48,630 --> 00:50:53,670
can in a minute see that I can get that

00:50:50,550 --> 00:50:57,720
from my container and we want to listen

00:50:53,670 --> 00:51:00,090
and I explicitly just on the local host

00:50:57,720 --> 00:51:01,830
on the same port that that client might

00:51:00,090 --> 00:51:04,200
normally and what this means though is

00:51:01,830 --> 00:51:05,580
that my client app which is just static

00:51:04,200 --> 00:51:09,540
it's not going to talk to a TV at all

00:51:05,580 --> 00:51:11,880
only needs to talk to this doesn't need

00:51:09,540 --> 00:51:14,190
to be configured no need for it to know

00:51:11,880 --> 00:51:15,810
about certificates etc etc the build

00:51:14,190 --> 00:51:17,490
pack because you iterated this build

00:51:15,810 --> 00:51:19,260
pack with setup certificates would do

00:51:17,490 --> 00:51:21,240
all the things to make it have a better

00:51:19,260 --> 00:51:24,270
relationship you would not hard code

00:51:21,240 --> 00:51:27,900
this in here you would have some sort of

00:51:24,270 --> 00:51:31,109
you know abstract command like start

00:51:27,900 --> 00:51:33,150
Etsy do SH and we would create the shell

00:51:31,109 --> 00:51:36,990
script and we would look up these end

00:51:33,150 --> 00:51:39,240
points from be kept services and build

00:51:36,990 --> 00:51:43,170
this this command but all that is out of

00:51:39,240 --> 00:51:46,380
scope for the four minutes we have

00:51:43,170 --> 00:51:49,520
remaining all right so let us now move

00:51:46,380 --> 00:51:51,170
to d3

00:51:49,520 --> 00:51:54,680
I don't know if I can just move all you

00:51:51,170 --> 00:52:03,670
have to delete so vb3

00:51:54,680 --> 00:52:03,670
creates app simple v3 apply manifest

00:52:11,420 --> 00:52:17,700
I'm gonna be honest I'm not huge fan sir

00:52:14,700 --> 00:52:18,900
for the sequence which is why I haven't

00:52:17,700 --> 00:52:23,910
used it to this point

00:52:18,900 --> 00:52:26,460
but I'm not really here Christmas

00:52:23,910 --> 00:52:30,510
[Music]

00:52:26,460 --> 00:52:33,540
all right it's exciting it's only

00:52:30,510 --> 00:52:37,710
exciting if you can start to imagine

00:52:33,540 --> 00:52:42,240
what what so cars might be good for but

00:52:37,710 --> 00:52:43,950
you're still watching so now you might

00:52:42,240 --> 00:52:47,160
just to be clear you might have seen me

00:52:43,950 --> 00:52:48,570
delete that from here and yet they're

00:52:47,160 --> 00:52:50,580
still being printed out of course I have

00:52:48,570 --> 00:52:52,020
not yet created and uploaded to the new

00:52:50,580 --> 00:52:54,920
build pack therefore I'm getting the

00:52:52,020 --> 00:52:54,920
most recent build back

00:53:00,030 --> 00:53:04,590
down here we will look at some logs

00:53:15,830 --> 00:53:17,890
you

00:53:18,030 --> 00:53:24,690
hooray look at us so this is what a

00:53:20,820 --> 00:53:29,790
sidecar looks like in your logs we get

00:53:24,690 --> 00:53:30,960
this set of web / 0 we get web you know

00:53:29,790 --> 00:53:33,060
what I kind of think that probably

00:53:30,960 --> 00:53:35,190
should still be web / 0 to sort of point

00:53:33,060 --> 00:53:36,090
to the but anyway it's got the 0 the

00:53:35,190 --> 00:53:39,690
answer whatever

00:53:36,090 --> 00:53:42,450
I guess it's web and zero represents the

00:53:39,690 --> 00:53:44,190
container and we looked at before but

00:53:42,450 --> 00:53:47,460
there is our psycho the psych I has a

00:53:44,190 --> 00:53:49,140
name which came from the manifest that

00:53:47,460 --> 00:53:51,960
was that name they're put into couples

00:53:49,140 --> 00:53:55,020
and and anything that it outputs to

00:53:51,960 --> 00:53:57,030
stand out will go they're not a hundred

00:53:55,020 --> 00:54:00,180
percent sure why it's it's they're not

00:53:57,030 --> 00:54:02,720
just moving on I'm sorry just as sit so

00:54:00,180 --> 00:54:06,770
for a while eventually works

00:54:02,720 --> 00:54:08,390
which is a bit not great for demos it's

00:54:06,770 --> 00:54:12,319
a bit boring I feel like I have to keep

00:54:08,390 --> 00:54:14,390
talking but before the final finale

00:54:12,319 --> 00:54:19,550
where I demonstrate that it works does

00:54:14,390 --> 00:54:21,380
anyone have questions but they I think

00:54:19,550 --> 00:54:23,210
you were talking about the fact that you

00:54:21,380 --> 00:54:24,859
know the utility of this is gonna be in

00:54:23,210 --> 00:54:29,810
the use cases have you been thinking of

00:54:24,859 --> 00:54:36,589
use cases you know outside of like cool

00:54:29,810 --> 00:54:37,670
demos with HCD yes good question I did

00:54:36,589 --> 00:54:41,930
put them at the start

00:54:37,670 --> 00:54:44,470
hang on why why why did was nginx not

00:54:41,930 --> 00:54:44,470
different

00:54:46,930 --> 00:54:53,120
any enginex people brought ideas I'm

00:54:50,720 --> 00:55:00,170
doing a demo so my brain is not capable

00:54:53,120 --> 00:55:06,020
of debugging I mean that not work but

00:55:00,170 --> 00:55:08,540
how could this be wrong it's nothing to

00:55:06,020 --> 00:55:10,040
not work about this it's saying

00:55:08,540 --> 00:55:20,870
does it have anything to do with the

00:55:10,040 --> 00:55:24,170
ports there yeah well I failed to make

00:55:20,870 --> 00:55:25,910
TCP connection to you know I could just

00:55:24,170 --> 00:55:31,600
stop and asking I could never remember

00:55:25,910 --> 00:55:31,600
this either huge pair of open book exams

00:55:31,900 --> 00:55:53,380
manifest was that no check no one do

00:55:38,420 --> 00:55:53,380
checks we want we want process

00:55:59,980 --> 00:56:05,960
whatever all right that refuses to work

00:56:04,190 --> 00:56:10,280
and I don't know why so I apologize for

00:56:05,960 --> 00:56:13,490
that the demonstrations are let's let's

00:56:10,280 --> 00:56:14,960
let's wrap up so I I you know what if I

00:56:13,490 --> 00:56:17,900
could think of lots I would have started

00:56:14,960 --> 00:56:21,290
I the first one I tried was console I

00:56:17,900 --> 00:56:24,260
thought that would have been cool but it

00:56:21,290 --> 00:56:25,550
turns out the console is sort of has

00:56:24,260 --> 00:56:27,380
multiple really it's sort of a

00:56:25,550 --> 00:56:32,450
bi-directional connection I think and

00:56:27,380 --> 00:56:42,410
and it was having trouble we have chat

00:56:32,450 --> 00:56:44,780
questions yeah maybe you listen but it's

00:56:42,410 --> 00:56:45,860
not here so Rebekah suggesting in the

00:56:44,780 --> 00:56:47,240
cage can't read screen there's something

00:56:45,860 --> 00:56:50,210
about listening but the part that's not

00:56:47,240 --> 00:56:52,610
working is this is not my bit it's the

00:56:50,210 --> 00:56:57,590
static file bill pack nginx listening on

00:56:52,610 --> 00:56:59,360
on on 8080 so it's it's not even month

00:56:57,590 --> 00:57:00,710
so my fault it's not my fault

00:56:59,360 --> 00:57:03,170
our blind

00:57:00,710 --> 00:57:03,890
see if they've typically it's always see

00:57:03,170 --> 00:57:05,510
if deadfall

00:57:03,890 --> 00:57:07,220
you know what we can just start pushing

00:57:05,510 --> 00:57:15,049
again pushing again might just fix it

00:57:07,220 --> 00:57:16,839
you know stop and start again so the use

00:57:15,049 --> 00:57:20,839
cases might be something quite grinding

00:57:16,839 --> 00:57:23,900
APM alongside with application the

00:57:20,839 --> 00:57:26,299
question is if if like APM is ironic or

00:57:23,900 --> 00:57:29,750
something else is running we might want

00:57:26,299 --> 00:57:33,470
need to modify the main build park if

00:57:29,750 --> 00:57:38,329
there is such a thing release so what

00:57:33,470 --> 00:57:40,789
what it is is is emitting as the main

00:57:38,329 --> 00:57:42,859
command to learn so in other words how

00:57:40,789 --> 00:57:45,650
your parks can communicate with each

00:57:42,859 --> 00:57:48,079
other to modify parameters of each other

00:57:45,650 --> 00:57:50,779
like for example if I have a job I built

00:57:48,079 --> 00:57:56,029
Parkinson APM I might what wanted to

00:57:50,779 --> 00:57:58,130
inject something in right if if the app

00:57:56,029 --> 00:58:00,770
if a certain new pack is also available

00:57:58,130 --> 00:58:03,920
then add this flag to this document

00:58:00,770 --> 00:58:05,839
you mean that sort of thing yeah and

00:58:03,920 --> 00:58:07,460
that is definitely I think they're

00:58:05,839 --> 00:58:10,760
they're they're stumbling through that

00:58:07,460 --> 00:58:11,900
with no stomach northwood in the b3

00:58:10,760 --> 00:58:15,049
where they're starting to tease these

00:58:11,900 --> 00:58:17,539
things out right there is a PHP build

00:58:15,049 --> 00:58:19,190
prac but that's not the one that you

00:58:17,539 --> 00:58:21,349
can't just use that and assume your app

00:58:19,190 --> 00:58:24,829
is going to run on PHP there is another

00:58:21,349 --> 00:58:27,529
build pack called PHP web which has a

00:58:24,829 --> 00:58:29,089
depending on PHP and it is the one that

00:58:27,529 --> 00:58:31,010
has to figure out what are all the other

00:58:29,089 --> 00:58:32,569
build packs that have been used and

00:58:31,010 --> 00:58:35,270
figure out what to actually run am i

00:58:32,569 --> 00:58:38,750
with nginx somewhere with apache and

00:58:35,270 --> 00:58:40,880
that sort of multiplexing now the good

00:58:38,750 --> 00:58:43,250
news is is that this process is too

00:58:40,880 --> 00:58:45,559
staged like there is the staging where

00:58:43,250 --> 00:58:49,640
files are laid out on the droplet and

00:58:45,559 --> 00:58:52,539
then the start script actually there's a

00:58:49,640 --> 00:58:55,970
another phase which is the profile D and

00:58:52,539 --> 00:58:59,750
scripts which get added into memory so

00:58:55,970 --> 00:59:01,730
your your staging can create profile

00:58:59,750 --> 00:59:03,589
shell scripts that will be loaded into

00:59:01,730 --> 00:59:05,660
memory and they are loaded up before

00:59:03,589 --> 00:59:07,190
every process and so you could be

00:59:05,660 --> 00:59:09,710
putting things into environment

00:59:07,190 --> 00:59:11,720
variables about AI exist or you could be

00:59:09,710 --> 00:59:14,330
creating files dynamically based on

00:59:11,720 --> 00:59:16,250
what's in Barbie cat services

00:59:14,330 --> 00:59:17,900
in other environment variables and then

00:59:16,250 --> 00:59:20,030
the start scripts would start and they

00:59:17,900 --> 00:59:22,520
could have collected this this sort of

00:59:20,030 --> 00:59:24,920
information but you could also just look

00:59:22,520 --> 00:59:27,620
at the file system and say does this

00:59:24,920 --> 00:59:29,600
bill pack exist which is so first all

00:59:27,620 --> 00:59:31,670
suppliers are running is there are

00:59:29,600 --> 00:59:40,580
supplies of multiple build parts then

00:59:31,670 --> 00:59:41,960
like a compile is running on supply if

00:59:40,580 --> 00:59:44,990
they supply bill packs thinks that the

00:59:41,960 --> 00:59:46,850
supply script is is run

00:59:44,990 --> 00:59:51,820
all right so scripts can be supplied can

00:59:46,850 --> 00:59:54,740
be compiled detect release yep right so

00:59:51,820 --> 00:59:58,850
so supply is running first and supplier

00:59:54,740 --> 01:00:00,890
is makeup directory and then the rest of

00:59:58,850 --> 01:00:04,540
the script so what if to build parts

01:00:00,890 --> 01:00:04,540
have kept release script

01:00:05,670 --> 01:00:12,390
they know that finalized I think it's

01:00:07,920 --> 01:00:14,900
cooled down only the last one has it's

01:00:12,390 --> 01:00:17,390
finalized script run

01:00:14,900 --> 01:00:19,400
now that this contract may change and

01:00:17,390 --> 01:00:21,860
this you know when when they'd the bill

01:00:19,400 --> 01:00:24,170
pack and cap Eugene were together on our

01:00:21,860 --> 01:00:27,040
supply bill pack might be able to inject

01:00:24,170 --> 01:00:29,060
itself its owns the patch it will have a

01:00:27,040 --> 01:00:31,760
support finalized pack that'll be the

01:00:29,060 --> 01:00:34,720
contract that a supply script a supply

01:00:31,760 --> 01:00:36,550
bill back might be able to have a

01:00:34,720 --> 01:00:39,950
finalized

01:00:36,550 --> 01:00:41,540
maybe it's it's a called sidecar

01:00:39,950 --> 01:00:43,490
something like that there might be some

01:00:41,540 --> 01:00:46,580
contract that if this this endpoint

01:00:43,490 --> 01:00:49,830
exists then that is where you'll start

01:00:46,580 --> 01:00:52,110
your sidecar maybe

01:00:49,830 --> 01:00:54,480
I'm just you know I've no idea until

01:00:52,110 --> 01:00:57,600
Eric mentioned that I wasn't aware of it

01:00:54,480 --> 01:00:59,190
any progress but you know maybe you put

01:00:57,600 --> 01:01:02,220
that there and that's how the psycho

01:00:59,190 --> 01:01:05,100
gets prepared is that what you're

01:01:02,220 --> 01:01:07,080
mentioning yes all pretty much as there

01:01:05,100 --> 01:01:18,030
are multiple built bugs Kyle they can

01:01:07,080 --> 01:01:21,480
affect each other yeah I sorry all right

01:01:18,030 --> 01:01:23,670
how they affect each other let's chat

01:01:21,480 --> 01:01:26,100
afterwards because I feel like I might

01:01:23,670 --> 01:01:29,190
be going away the place let's have a

01:01:26,100 --> 01:01:30,750
look inside a working thing and so we

01:01:29,190 --> 01:01:33,210
can see that there is nginx

01:01:30,750 --> 01:01:34,170
and there is our sidecar so that's

01:01:33,210 --> 01:01:37,910
exciting

01:01:34,170 --> 01:01:43,170
it also means I do happen to have the

01:01:37,910 --> 01:01:46,440
there and remember I put that there so

01:01:43,170 --> 01:01:53,160
if I now go into my container and I get

01:01:46,440 --> 01:01:55,230
local look at this it works and that is

01:01:53,160 --> 01:01:58,470
pretty exciting obviously there's more

01:01:55,230 --> 01:02:01,860
to be done you would have to look up you

01:01:58,470 --> 01:02:05,490
know instead of this we wanna wrap the

01:02:01,860 --> 01:02:10,710
script so I at this point I really would

01:02:05,490 --> 01:02:18,390
like to create something like start xcd

01:02:10,710 --> 01:02:20,670
proxy Don SH and I put that in there but

01:02:18,390 --> 01:02:24,740
I now need to get this this set of host

01:02:20,670 --> 01:02:24,740
names from somewhere

01:02:25,020 --> 01:02:30,810
right so it's now I need to sort of you

01:02:26,970 --> 01:02:35,750
know echo be capsule services etc etc

01:02:30,810 --> 01:02:38,550
etc they cube magic right post e well

01:02:35,750 --> 01:02:41,820
something like that to get it out and

01:02:38,550 --> 01:02:46,050
that's sort of process of the defect in

01:02:41,820 --> 01:02:47,910
a way and setting up certificates all

01:02:46,050 --> 01:02:53,010
the other parts of other authentication

01:02:47,910 --> 01:02:56,250
or security etc but that is the gist of

01:02:53,010 --> 01:02:58,770
it and it is really easy and I've done

01:02:56,250 --> 01:03:00,840
it with shell just as a sort of a call

01:02:58,770 --> 01:03:04,430
out there is the where the built pact

01:03:00,840 --> 01:03:09,930
where that's that command came from

01:03:04,430 --> 01:03:12,960
using is this library here and it has a

01:03:09,930 --> 01:03:16,560
bunch of tools in it for writing all of

01:03:12,960 --> 01:03:17,610
your bill pack in go if that is how

01:03:16,560 --> 01:03:19,080
you'd like to do it which is how the

01:03:17,610 --> 01:03:24,380
longer the court in your pets have been

01:03:19,080 --> 01:03:24,380
done so I'm five minutes over I just met

01:03:26,780 --> 01:03:32,369
examples yeah so APM is probably the big

01:03:29,670 --> 01:03:34,560
one so they want to rip out a bunch of

01:03:32,369 --> 01:03:37,080
things from existing bill packs and taps

01:03:34,560 --> 01:03:38,670
you know put them in here so I guess new

01:03:37,080 --> 01:03:41,690
relic those sorts of things would have

01:03:38,670 --> 01:03:41,690
their own dedicated bill pack

01:03:42,950 --> 01:03:47,900
sorry max dropped an expert not

01:03:45,450 --> 01:03:47,900
answering the question

01:03:50,839 --> 01:03:54,190
any other phone questions

01:03:55,089 --> 01:03:57,150
you

01:04:05,259 --> 01:04:14,929
not a problem

01:04:06,679 --> 01:04:16,039
let me there's the slides and for anyone

01:04:14,929 --> 01:04:19,400
that wants to go through that Walker

01:04:16,039 --> 01:04:20,749
it's it's there but yeah I hang out the

01:04:19,400 --> 01:04:24,559
bill pecks Channel if you have any

01:04:20,749 --> 01:04:26,479
questions and you know give it a month

01:04:24,559 --> 01:04:29,199
and we might have a whole new API for

01:04:26,479 --> 01:04:33,859
what this looks like I don't do this so

01:04:29,199 --> 01:04:36,289
that'll be fun too and I guess the other

01:04:33,859 --> 01:04:38,029
things it's known as talking I did start

01:04:36,289 --> 01:04:44,199
a series of blog posts on this certain

01:04:38,029 --> 01:04:46,759
topic about sarcasm bill bill packs and

01:04:44,199 --> 01:04:50,749
what I've just shown you is probably the

01:04:46,759 --> 01:04:54,469
premise of the next next you know one as

01:04:50,749 --> 01:04:56,900
well but that sequence of blog posts

01:04:54,469 --> 01:04:58,130
will continue and we'll talk about tests

01:04:56,900 --> 01:04:59,329
testing and things like that because I

01:04:58,130 --> 01:05:02,840
think more people want to build bill

01:04:59,329 --> 01:05:07,850
packs from this point on

01:05:02,840 --> 01:05:07,850
supply pillpack Saku we should make some

01:05:08,000 --> 01:05:13,410
no one else is talking so I'm just gonna

01:05:10,290 --> 01:05:15,210
keep talking about things just just know

01:05:13,410 --> 01:05:17,430
the example of how one do party needs to

01:05:15,210 --> 01:05:19,380
affect another if you men should be

01:05:17,430 --> 01:05:21,360
emulated right so if you really kiss

01:05:19,380 --> 01:05:35,700
rank on the same contain your visa Java

01:05:21,360 --> 01:05:39,060
code then example not just job your part

01:05:35,700 --> 01:05:41,790
but also give any cramming some process

01:05:39,060 --> 01:05:46,500
of the same container then parameters

01:05:41,790 --> 01:05:47,850
for Java needs to be modified to take in

01:05:46,500 --> 01:05:52,200
consideration that something else is

01:05:47,850 --> 01:05:53,970
also a right if you wanna if you have an

01:05:52,200 --> 01:05:55,650
example like we can sort of parent and

01:05:53,970 --> 01:05:58,110
perhaps I can point to how you might

01:05:55,650 --> 01:06:00,120
solve that problem but essentially the

01:05:58,110 --> 01:06:01,950
staging the build patter your supply

01:06:00,120 --> 01:06:04,230
bill pack could put some files on the

01:06:01,950 --> 01:06:07,530
file system lets them say hey I'm there

01:06:04,230 --> 01:06:08,790
I could create a profile deep script

01:06:07,530 --> 01:06:11,280
that gets loaded into memory they could

01:06:08,790 --> 01:06:12,810
add environment variables to say hey I'm

01:06:11,280 --> 01:06:15,420
there and here's what you need to know

01:06:12,810 --> 01:06:17,610
about me and then but then the your Java

01:06:15,420 --> 01:06:18,900
app when it starts up would need to go

01:06:17,610 --> 01:06:22,500
and look for those things and all that

01:06:18,900 --> 01:06:30,360
so my single part is responsible for you

01:06:22,500 --> 01:06:32,640
know okay cool I've been making much

01:06:30,360 --> 01:06:35,520
bill packs so under stark away and I

01:06:32,640 --> 01:06:40,920
just had fun sort of packaging some

01:06:35,520 --> 01:06:43,070
things and of course I spelt that so

01:06:40,920 --> 01:06:47,850
close to almost being a thing

01:06:43,070 --> 01:06:50,130
imagemagick free tds wordpress CLI i'd

01:06:47,850 --> 01:06:52,050
started what is this it's interesting to

01:06:50,130 --> 01:06:53,910
start to use these supply bill packs to

01:06:52,050 --> 01:06:57,510
make it easier to bring non Cloud

01:06:53,910 --> 01:07:00,060
Foundry type things into this is a fun

01:06:57,510 --> 01:07:01,350
one the dot profile everyone can upload

01:07:00,060 --> 01:07:03,810
a profile except

01:07:01,350 --> 01:07:06,240
Java people easily so this bill pack

01:07:03,810 --> 01:07:10,460
means that you can and look how simple

01:07:06,240 --> 01:07:15,620
it is it's literally just you know that

01:07:10,460 --> 01:07:17,210
so bill packs are fun and I you know

01:07:15,620 --> 01:07:20,069
recommend you at least build one or two

01:07:17,210 --> 01:07:22,130
to see understand the gist of it

01:07:20,069 --> 01:07:22,130
you

01:07:22,670 --> 01:07:34,640
I'm finished I don't want to talk

01:07:24,859 --> 01:07:37,130
anymore this afternoon there's no one

01:07:34,640 --> 01:07:38,690
that's going to be obviously lost dr.

01:07:37,130 --> 01:07:40,160
Mexico I'm pretty sure at this point if

01:07:38,690 --> 01:07:43,730
he was polite he would sort of say

01:07:40,160 --> 01:07:45,319
goodbye cool all right everyone you're

01:07:43,730 --> 01:07:47,749
all fabulous I look forward to seeing

01:07:45,319 --> 01:07:52,569
hopefully most of you in said day in

01:07:47,749 --> 01:07:52,569
October and hey that should be fun

01:07:53,060 --> 01:07:56,920

YouTube URL: https://www.youtube.com/watch?v=lO8UlJiChDQ


